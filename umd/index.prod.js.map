{"version":3,"sources":["webpack://tinode-webapp/external \"React\"","webpack://tinode-webapp/external \"ReactDOM\"","webpack://tinode-webapp/external \"ReactIntl\"","webpack://tinode-webapp/external \"firebase\"","webpack://tinode-webapp/external \"Tinode\"","webpack://tinode-webapp/external [\"firebase\",\"messaging\"]","webpack://tinode-webapp/./src/widgets/alert.jsx","webpack://tinode-webapp/./src/version.js","webpack://tinode-webapp/./src/config.js","webpack://tinode-webapp/./src/widgets/context-menu.jsx","webpack://tinode-webapp/./src/lib/strformat.js","webpack://tinode-webapp/./src/lib/utils.js","webpack://tinode-webapp/./src/widgets/letter-tile.jsx","webpack://tinode-webapp/./src/widgets/load-spinner.jsx","webpack://tinode-webapp/./src/widgets/avatar-upload.jsx","webpack://tinode-webapp/./src/widgets/badge-list.jsx","webpack://tinode-webapp/./src/widgets/checkbox.jsx","webpack://tinode-webapp/./src/widgets/contact-badges.jsx","webpack://tinode-webapp/./src/widgets/received-marker.jsx","webpack://tinode-webapp/./src/widgets/unread-badge.jsx","webpack://tinode-webapp/./src/widgets/contact.jsx","webpack://tinode-webapp/./src/widgets/contact-action.jsx","webpack://tinode-webapp/./src/lib/blob-helpers.js","webpack://tinode-webapp/./src/widgets/contact-list.jsx","webpack://tinode-webapp/./src/widgets/menu-cancel.jsx","webpack://tinode-webapp/./src/widgets/error-panel.jsx","webpack://tinode-webapp/./src/widgets/chip.jsx","webpack://tinode-webapp/./src/widgets/chip-input.jsx","webpack://tinode-webapp/./src/widgets/group-manager.jsx","webpack://tinode-webapp/./src/widgets/permissions-editor.jsx","webpack://tinode-webapp/./src/widgets/cropper.jsx","webpack://tinode-webapp/./src/widgets/avatar-crop.jsx","webpack://tinode-webapp/./src/widgets/visible-password.jsx","webpack://tinode-webapp/./src/widgets/in-place-edit.jsx","webpack://tinode-webapp/./src/widgets/tag-manager.jsx","webpack://tinode-webapp/./src/widgets/topic-desc-edit.jsx","webpack://tinode-webapp/./src/widgets/topic-common.jsx","webpack://tinode-webapp/./src/widgets/topic-security.jsx","webpack://tinode-webapp/./src/views/info-view.jsx","webpack://tinode-webapp/./src/widgets/file-progress.jsx","webpack://tinode-webapp/./src/widgets/attachment.jsx","webpack://tinode-webapp/./src/widgets/chat-message.jsx","webpack://tinode-webapp/./src/widgets/send-message.jsx","webpack://tinode-webapp/./src/widgets/doc-preview.jsx","webpack://tinode-webapp/./src/widgets/group-subs.jsx","webpack://tinode-webapp/./src/widgets/image-preview.jsx","webpack://tinode-webapp/./src/widgets/invitation.jsx","webpack://tinode-webapp/./src/views/logo-view.jsx","webpack://tinode-webapp/./src/widgets/uploading-image.jsx","webpack://tinode-webapp/./src/lib/navigation.js","webpack://tinode-webapp/./src/views/messages-view.jsx","webpack://tinode-webapp/./src/widgets/button-back.jsx","webpack://tinode-webapp/./src/widgets/menu-contacts.jsx","webpack://tinode-webapp/./src/widgets/menu-start.jsx","webpack://tinode-webapp/./src/widgets/side-navbar.jsx","webpack://tinode-webapp/./src/views/account-settings-view.jsx","webpack://tinode-webapp/./src/views/contacts-view.jsx","webpack://tinode-webapp/./src/lib/local-storage.js","webpack://tinode-webapp/./src/views/create-account-view.jsx","webpack://tinode-webapp/./src/views/acc-notifications-view.jsx","webpack://tinode-webapp/./src/views/acc-security-view.jsx","webpack://tinode-webapp/./src/views/acc-support-view.jsx","webpack://tinode-webapp/./src/views/login-view.jsx","webpack://tinode-webapp/./src/widgets/new-topic-by-id.jsx","webpack://tinode-webapp/./src/widgets/new-topic-group.jsx","webpack://tinode-webapp/./src/widgets/search-contacts.jsx","webpack://tinode-webapp/./src/views/new-topic-view.jsx","webpack://tinode-webapp/./src/views/password-reset-view.jsx","webpack://tinode-webapp/./src/widgets/host-selector.jsx","webpack://tinode-webapp/./src/views/settings-view.jsx","webpack://tinode-webapp/./src/views/validation-view.jsx","webpack://tinode-webapp/./src/views/sidepanel-view.jsx","webpack://tinode-webapp/./src/lib/host-name.js","webpack://tinode-webapp/./src/views/tinode-web.jsx","webpack://tinode-webapp/./src/index.js","webpack://tinode-webapp/webpack/bootstrap","webpack://tinode-webapp/webpack/runtime/compat get default export","webpack://tinode-webapp/webpack/runtime/define property getters","webpack://tinode-webapp/webpack/runtime/hasOwnProperty shorthand","webpack://tinode-webapp/webpack/startup"],"names":["React","ReactDOM","ReactIntl","firebase","messaging","Tinode","Alert","render","this","props","visible","className","title","content","onReject","onClick","reject","FormattedMessage","id","defaultMessage","onConfirm","confirm","PACKAGE_VERSION","APP_NAME","KNOWN_HOSTS","hosted","local","DEFAULT_HOST","KEYPRESS_DELAY","DEFAULT_P2P_ACCESS_MODE","REM_SIZE","AVATAR_SIZE","MAX_INBAND_ATTACHMENT_SIZE","MAX_EXTERN_ATTACHMENT_SIZE","MAX_IMAGE_DIM","MAX_TITLE_LENGTH","MAX_TOPIC_DESCRIPTION_LENGTH","messages","defineMessages","info","clear_messages","clear_for_all","delete","delete_for_all","send_retry","mute","unmute","reply","topic_delete","topic_delete_warning","delete_messages_warning","unblock","block","topic_block_warning","member_delete","archive","unarchive","edit_permissions","clear_messages_warning","ContextMenu","constructor","super","selfRef","formatMessage","intl","handlePageClick","bind","handleEscapeKey","handleClick","MenuItems","handler","params","errorHandler","onShowAlert","deleteMessages","message","retryMessage","replyToMessage","topicPermissionSetter","then","ctrl","onTopicRemoved","topicName","topic","tinode","getTopic","delTopic","catch","err","console","log","user","delSubscription","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","e","current","contains","target","preventDefault","stopPropagation","hide","keyCode","item","items","currentTarget","dataset","onAction","onError","error","all","hard","cancelSend","seq","delMessagesAll","delMessagesList","flushMessage","msg","createMessage","publishDraft","mode","result","updateMode","pickReply","menu","count","map","push","key","data-id","vSize","length","position","left","bounds","right","clickAt","x","top","bottom","y","style","ref","injectIntl","shortDateFormat","locale","window","navigator","userLanguage","language","now","Date","getFullYear","getMonth","getDate","toLocaleTimeString","hour12","hour","minute","toLocaleDateString","month","day","year","bytesToHumanSize","bytes","sizes","bucket","Math","min","floor","log2","pow","round","toFixed","letterTileColorId","userId","abs","value","hash","i","charCodeAt","stringToColorHash","updateFavicon","oldIcon","getElementById","head","getElementsByTagName","newIcon","createElement","type","rel","href","removeChild","appendChild","theCard","fn","imageUrl","imageMimeType","note","card","trim","mimeType","matches","exec","photo","data","substring","indexOf","arrayEqual","a","b","Array","isArray","sort","l","sanitizeUrl","url","allowedSchemes","replace","test","schemes","join","RegExp","sanitizeImageUrl","sanitizedUrl","deliveryMarker","received","name","color","LetterTile","avatar","isGroup","iconColor","fg","letter","charAt","authorizeURL","alt","src","onerror","LoadSpinner","large","clear","centered","show","AvatarUpload","state","source","handleFileReceived","componentDidUpdate","prevProps","setState","image","files","onImageUpdated","URL","createObjectURL","randId","random","substr","readOnly","uid","accept","onChange","htmlFor","uploading","icon_mapping","badge_verified","badge_staff","badge_danger","BadgeList","badges","trustedBadges","comment","CheckBox","handleChange","checked","ContactBadges","icon","message_sending","message_sending_failed","ReceivedMarker","timestamp","marker","UnreadBadge","drafty_image","drafty_form","drafty_attachment","Contact","handleContextClick","onSelected","index","showContextMenu","pageY","pageX","online","slice","icon_badges","isVerified","isStaff","isDangerous","acs","showMode","getMode","isMuted","isJoiner","subtitle","preview","Drafty","draftyFormatter","showCheckmark","selected","showOnline","isChannel","unread","small","values","el","attr","concat","mime","ContactAction","action","SUPPORTED_IMAGE_FORMATS","MIME_EXTENSIONS","makeImageUrl","startsWith","fitImageSize","width","height","maxWidth","maxHeight","forceSquare","scale","size","dstWidth","dstHeight","srcWidth","srcHeight","xoffset","yoffset","imageScaled","fileOrBlob","maxSize","onSuccess","img","Image","crossOrigin","onload","async","revokeObjectURL","dim","canvas","ctx","getContext","imageSmoothingEnabled","drawImage","includes","blob","Promise","resolve","toBlob","clearRect","fname","idx","ext","at","lastIndexOf","fileNameForMime","fileToBase64","file","reader","FileReader","split","readAsDataURL","blobToBase64","badge_you","badge_owner","ContactList","topicSelected","contactNodes","contactsCount","contacts","c","filterFunc","filter","filterOn","private","toLowerCase","public","myUserId","isOwner","deliveryStatus","latestMessage","_status","msgStatus","showUnread","connected","onTopicSelected","trusted","verified","staff","danger","noScroll","dangerouslySetInnerHTML","__html","emptyListMessage","MenuCancel","onCancel","ErrorPanel","level","onClearError","warn","text","whiteSpace","actionText","Chip","handleCancel","invalid","noAvatar","required","ChipInput","deriveStateFromProps","input","focused","handleTextInput","removeChipAt","handleChipCancel","handleFocusGained","handleFocusLost","handleKeyDown","placeholder","chips","prompt","sortedChips","sortChips","staticMembers","chipIndex","indexChips","prevState","keep","normal","removed","onChipRemoved","onFocusLost","onEnter","undefined","avatarDisabled","autoFocus","tabIndex","onFocus","onBlur","onKeyDown","no_contacts","contacts_not_found_short","GroupManager","members","indexMembers","keepInitialMembers","requiredMember","contactFilter","noContactsMessage","selectedContacts","handleContactSelected","handleMemberRemoved","handleContactFilter","handleSubmit","m","delta","present","keepInitial","stat","sel","status","splice","val","query","instance","added","Object","keys","k","onSubmit","doContactFiltering","joiner","writer","preser","approver","sharer","deleter","owner","PermissionsEditor","names","skip","compare","userTitle","userAvatar","modeTitle","compareTitle","Cropper","panX","panY","originX","originY","zoom","minZoom","maxZoom","overlay","cutout","boundingBox","imageWidth","imageHeight","mouseX","mouseY","prevDistance","cutoutRect","bBoxRect","initScaling","onZoom","handleZoom","mouseDown","mouseUp","mouseMove","mouseTouch","positionAll","translate","passive","getBoundingClientRect","currPan","nextDiff","imgRect","max","imgLeft","imgRight","coLeft","coRight","imgTop","imgBottom","coTop","coBottom","touches","body","dX","dY","checkBound","touch0","touch1","distance","sqrt","t3d","orig","transform","transformOrigin","onLoad","step","AvatarCrop","objURL","imageCrop","VisiblePassword","handleVisibility","handeTextChange","handleEditingFinished","onFinished","setTimeout","activeElement","autoComplete","InPlaceEdit","active","initialValue","handleStartEditing","handlePasswordFinished","newValue","focus","event","checkValidity","spanText","spanClass","multiline","element","rows","TagManager","tags","tagInput","activated","handleTagInput","handleAddTag","handleRemoveTag","nextProps","last","tag","maxTagCount","getServerLimit","onTagsChanged","minTagLength","maxTagLength","add_tags_prompt","TopicDescEdit","getAccessMode","isMe","fullName","description","newAvatar","newAvatarMime","previousOnTags","tnNewTags","handleFullNameUpdate","handleImageUpdated","handleAvatarCropped","handlePrivateUpdate","handleDescriptionUpdate","uploadAvatar","handleAvatarCropCancel","handleTagsUpdated","onTagsUpdated","onUpdateTopicDesc","desc","readyToUpload","uploader","getLargeFileHelper","upload","finally","unused","base64bits","du","onUpdateTags","editable","full_name_placeholder","group_name_placeholder","private_placeholder","title_tag_manager","TopicCommon","credentials","getCredentials","addCredActive","addCredInvalid","newCred","previousTagsUpdated","tnCredsUpdated","handleCredChange","handleCredKeyDown","handleCredEntered","onCredsUpdated","getType","creds","method","asPhone","asEmail","onCredAdd","onTopicTagsUpdateRequest","cred","meth","done","onCredConfirm","onCredDelete","delete_messages","leave_chat","leave_chat_warning","block_contact","block_contact_warning","report_chat","report_chat_warning","other_user","TopicSecurity","handleDeleteTopic","handleDeleteMessages","handleLeave","handleBlock","handleReport","onDeleteTopic","onDeleteMessages","onLeaveTopic","onBlockTopic","onReportTopic","channel","groupTopic","onLaunchPermissionsEditor","access","auth","anon","modeGiven2","general","security","crop","perm_want","perm_given","perm_auth","perm_anon","perm_user","_clip","str","InfoView","admin","muted","address","selectedContact","modeGiven","modeWant","modeWant2","contactList","previousMetaDesc","previousSubsUpdated","resetSubs","resetDesc","resetTags","onMetaDesc","onSubsUpdated","handleImageChanged","handleMuted","handleUnarchive","handlePermissionsChanged","handleLaunchPermissionsEditor","handleShowAddMembers","handleMemberUpdateRequest","handleMemberSelected","handleContextMenu","handleBackNavigate","newState","user2","subscriber","getGiven","getWant","subscribers","sub","defacs","getDefaultAccess","entries","isAdmin","isSharer","isDeleter","archived","isArchived","isGroupType","isChannelType","chan","getMeta","startMetaQuery","withTags","build","subs","onTopicDescUpdate","ignored","onChangePermissions","ignored2","onTopicUnArchive","which","perm","onTopicDescUpdateRequest","userPermissionsEdited","toEdit","toCompare","toSkip","titleEdit","titleCompare","userPermissionsTitle","userPermissionsAvatar","editedPermissions","immutablePermissions","editedPermissionsTitle","immutablePermissionsTitle","editedPermissionsSkipped","onNavigate","onInitFind","onMemberUpdateRequest","args","panel","menuItems","view","shift","panelTitle","displayMobile","errorLevel","errorText","searchableContacts","no_members","FileProgress","progress","Attachment","downloader","downloadFile","filename","mimetype","download","loaded","onCancelUpload","cancel","helperFunc","isUrlRelative","downloadUrl","downloadWidget","BaseChatMessage","onProgress","handleProgress","handleImagePreview","handleFormButtonClick","handleCancelUpload","handleQuoteClick","onImagePreview","resp","act","onFormResponse","MESSAGE_STATUS_FAILED","userIsWriter","MESSAGE_STATUS_DEL_RANGE","ratio","replyToSeq","onQuoteClick","sideClass","deleted","sequence","response","bubbleClass","fullDisplay","userFrom","attachments","att","tree","formatter","innerRef","userName","IntlChatMessage","messaging_disabled","type_new_message","add_image_caption","file_attachment_too_large","cannot_initiate_upload","SendMessage","keypressTimestamp","getTime","handlePasteEvent","handleAttachImage","handleAttachFile","handleSend","handleKeyPress","handleMessageTyping","messageEditArea","disabled","onImageSuccess","onAttachmentSuccess","clipboardData","originalEvent","kind","getAsFile","imageFileScaledToBase64","imageFileToBase64","filePasted","bits","onAttachImage","onAttachFile","acceptBlank","noInput","onSendMessage","shiftKey","onKeyPress","replyTo","messagePrompt","quote","onCancelReply","attachImage","click","attachFile","display","DocPreview","handleSendDoc","caption","onClose","mimeToIcon","default","video","iconFromMime","GroupSubs","usersOnline","totalCount","countToShow","some","overflow","ImagePreview","handleSendImage","assignWidth","node","maxlength","Invitation","handleButtonAction","evt","LogoView","version","serverVersion","serverAddress","UploadingImage","HashNavigation","parts","path","forEach","part","decodeURIComponent","location","hasOwnProperty","parsed","parseUrlHash","composeUrlHash","sidepanel","infopanel","online_now","last_seen","not_found","isUnconfirmed","ex","getExcessive","isPeerRestricted","ms","getMissing","MessagesView","getDerivedStateFromProps","leave","sendMessage","sendImageAttachment","sendFileAttachment","sendKeyPress","subscribe","handleScrollReference","handleScrollEvent","handleDescChange","handleSubsUpdated","handleMessageUpdate","handleAllMessagesReceived","handleInfoReceipt","handleImagePostview","handleClosePreview","handleFormResponse","handleShowContextMenuMessage","handleNewChatAcceptance","handleEnablePeer","postReadNotification","clearNotificationQueue","handlePickReply","handleCancelReply","chatMessageRefs","getOrCreateMessageRef","readNotificationQueue","readNotificationTimer","seqId","messagesScroller","messageCount","scrollTop","scrollHeight","scrollPosition","viewportHeight","onData","onAllMessagesReceived","onInfo","onPres","applicationVisible","ready","nextState","docPreview","imagePreview","imagePostview","typingIndicator","fetchingMessages","assign","onlineSubs","peer","p2pPeerDesc","peerMessagingDisabled","latestClearId","maxClearId","isWriter","isReader","readingBlocked","unconformed","unconfirmed","isSubscribed","newTopic","newTopicParams","_topicName","getQuery","withLaterDesc","withLaterSub","withLaterData","withLaterDel","setQuery","code","onNewTopicCreated","queuedMessages","pub","_sending","setUrlTopic","blankState","oldTopicName","isTopicCached","oldTopic","msgHasMoreMessages","getMessagesPage","setInterval","clearInterval","n","sendAt","noteRead","setMilliseconds","getMilliseconds","clearTimeout","keyPressTimer","isNewMessage","from","what","forceUpdate","attachJSON","parse","searchParams","set","search","open","messageSpecificMenuItems","onNewChat","noteKeyPress","uploadCompletionPromise","attachQuote","maxInbandAttachmentSize","urlPromise","maxExternAttachmentSize","limit","tinyMine","tinyBlob","blobMime","tinyBits64","insertImage","_tempPreview","appendLineBreak","append","bits64","found","findMessage","_cancelled","cont","header","init","quotePreviewFmt","m0","thisFrom","userDesc","myUserName","ents","ent","entities","tp","promises","p","handleFailure","origBlob","bin","atob","buf","ArrayBuffer","arr","Uint8Array","Blob","base64ToBlob","fetch","ok","statusText","createQuote","scrollIntoView","behavior","backgroundColor","component","hideSelf","component2","messageNodes","previousFrom","chatBoxClass","prev","next","nextFrom","isReply","parseInt","isNaN","hi","ts","_uploader","viewportWidth","lastSeen","getMeTopic","getContact","seen","when","onHideMessagesView","fmt","new_fmt","len","iconName","tagName","attrValue","minWidth","minHeight","isProcessing","loading","inner","child","colorId","iconTitle","iconKey","ButtonBack","onBack","MenuContacts","onNewTopic","onSettings","MenuStart","onSignUp","SideNavbar","AccountSettingsView","me","archived_contacts_title","ContactsView","handleAction","unreadThreads","archivedCount","chatList","blocked","arch","touched","action_ignored","onShowArchive","LocalStorageUtil","localStorage","setItem","JSON","stringify","getItem","oldVal","getObject","setObject","removeItem","CreateAccountView","login","password","email","imageDataUrl","errorCleared","saveToken","handleLoginChange","handlePasswordChange","handleEmailChange","handleFnChange","handleToggleSaveToken","onCreateAccount","submitClasses","login_prompt","password_prompt","onImageChanged","full_name_prompt","email_prompt","stay_logged_in","EditAccountView","handleCheckboxClick","onToggleMessageSounds","onTogglePushNotifications","onToggleIncognitoMode","messageSounds","desktopAlertsEnabled","desktopAlerts","incognitoMode","delete_account","delete_account_warning","AccSecurityView","blockedCount","showPermissionEditorFor","handlePasswordUpdate","handleHidePermissionsEditor","handleDeleteAccount","pwd","onUpdatePassword","onUpdateAccountDesc","onDeleteAccount","password_unchanged","onLogout","onShowBlocked","AccSupportView","LoginView","hostName","persist","onPersistenceChange","onLogin","autoCorrect","autoCapitalize","invalid_id","NewTopicById","groupId","prefix","NewTopicGroup","handleFieldEdit","handleTagsChanged","handleChannelToggle","SearchContacts","edited","handleSearchChange","handleSearch","handleClear","onSearchContacts","search_placeholder","search_for_contacts","search_no_results","NewTopicView","tabSelected","searchQuery","handleTabClick","handleSearchContacts","handleNewGroupSubmit","handleGroupByID","addUrlParam","removeUrlParam","onCreateTopic","dataUrl","priv","no_contacts_placeholder","searchResults","PasswordResetView","sent","token","scheme","onReset","onRequest","HostSelector","changed","handleHostNameChange","onServerAddressChange","hostOptions","list","SettingsView","transport","handleTransportSelected","handleServerAddressChange","onUpdate","def","ws","lp","transportOptions","phone","ValidationView","credCode","credMethod","numbers_only","register","settings","edit","notif","support","newtpk","reset","SidepanelView","handleNewTopic","errorAction","errorActionText","loadSpinnerVisible","loginDisabled","onLoginRequest","onGlobalSettings","onUpdateAccountTags","onValidateCredentials","onPasswordResetRequest","onResetPassword","detectServerAddress","host","protocol","hostname","port","isSecureConnection","POP_SOUND","Audio","reconnect_countdown","reconnect_now","push_init_failed","invalid_security_token","no_connection","code_doesnot_match","menu_item_info","TinodeWeb","getBlankState","handleResize","handleHashRoute","handleOnline","checkForAppUpdate","handleVisibilityEvent","handleError","handleLoginRequest","handlePersistenceChange","handleConnected","handleAutoreconnectIteration","doLogin","handleCredentialsRequest","handleLoginSuccessful","handleDisconnect","tnMeMetaDesc","tnMeContactUpdate","tnMeSubsUpdated","resetContactList","tnData","tnInitFind","tnFndSubsUpdated","handleTopicSelected","handleHideMessagesView","handleSendMessage","handleNewChatInvitation","handleNewAccount","handleNewAccountRequest","handleUpdatePasswordRequest","handleUpdateAccountTagsRequest","handleToggleIncognitoMode","handleSettings","handleGlobalSettings","handleShowArchive","handleShowBlocked","handleToggleMessageSounds","handleCredAdd","handleCredDelete","handleCredConfirm","initFCMessaging","togglePushToken","requestPushToken","handlePushMessage","handleSidepanelCancel","handleStartTopicRequest","handleNewTopicCreated","handleTopicUpdateRequest","handleChangePermissions","handleTagsUpdateRequest","handleLogout","handleDeleteTopicRequest","handleDeleteMessagesRequest","handleLeaveUnsubRequest","handleBlockTopicRequest","handleReportTopic","handleShowContextMenu","defaultTopicContextMenu","handleHideContextMenu","handleShowAlert","handleShowInfoView","handleValidateCredentialsRequest","handlePasswordResetRequest","handleResetPassword","handleContextMenuAction","autoLogin","messageSoundsOff","FIREBASE_INIT","firebaseToken","hidden","sidePanelSelected","sidePanelTitle","sidePanelAvatar","myTrustedBadges","liveConnection","onLine","topicSelectedOnline","topicSelectedAcs","innerWidth","infoPanel","mobilePanel","contextMenuVisible","contextMenuBounds","contextMenuClickAt","contextMenuParams","contextMenuItems","alertVisible","alertParams","requestedTopic","BroadcastChannel","documentElement","clientWidth","clientHeight","tnSetup","onConnect","onDisconnect","onAutoreconnectIteration","setDeviceToken","parsedNav","expires","setAuthToken","connect","readTimer","readTimerCallback","persistentCache","onSetupCompleted","appName","apiKey","secure","setHumanLanguage","enableLogging","oobNotification","fbPush","usePublicVapidKey","messagingVapidKey","serviceWorker","reg","useServiceWorker","postMessage","onTokenRefresh","onMessage","payload","mobile","onupdatefound","installingWorker","installing","onstatechange","controller","getTopicAccessMode","newTopicTabSelected","tab","reconnectCountdown","reconnect","isConnected","initStorage","clearStorage","getServerInfo","ver","sec","prom","timeLeft","seconds","secondsToTime","isAuthenticated","promise","getAuthToken","loginBasic","loginToken","goToTopic","onContactUpdate","getCurrentUserID","withDesc","withCred","disconnect","urlHash","setUrlSidePanel","isPresencer","play","foundContacts","merged","updated","past","prepareSearchableContacts","receivedTimer","noteRecv","fnd","getFndTopic","withSub","s","setMeta","isTopicOnline","isP2PType","am","updateWant","login_","password_","public_","cred_","tags_","createAccountBasic","on","enabled","requestPermission","deleteToken","getToken","refreshedToken","delCredential","basicNavigator","infoNavigator","setUrlInfoPanel","newGroupTopicName","oldName","newName","updateAccountBasic","getCurrentLogin","updateGiven","delCurrentUser","publish","self_blocked","subscribed","confirmText","rejectText","invite","requestResetAuthSecret","newPassword","btoa","base64ReEncode","onAddMember","handleManageGroupMembers","hl","languages","baseLanguage","allMessages","IntlProvider","textComponent","__webpack_require__","module","getter","__esModule","d","exports","definition","o","defineProperty","enumerable","get","obj","prop","prototype","call","__webpack_modules__"],"mappings":"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","file":"index.prod.js","sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = React;","const __WEBPACK_NAMESPACE_OBJECT__ = ReactDOM;","const __WEBPACK_NAMESPACE_OBJECT__ = ReactIntl;","const __WEBPACK_NAMESPACE_OBJECT__ = firebase;","const __WEBPACK_NAMESPACE_OBJECT__ = Tinode;","const __WEBPACK_NAMESPACE_OBJECT__ = firebase.messaging;","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Alert extends React.PureComponent {\n  render() {\n    return this.props.visible ?\n      <div className=\"alert-container\">\n        <div className=\"alert\">\n          <div className=\"title\">{this.props.title}</div>\n          <div className=\"content\">{this.props.content}</div>\n          <div className=\"dialog-buttons\">\n            {this.props.onReject ?\n              <button className=\"outline\" onClick={this.props.onReject}>\n                {this.props.reject || <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />}\n              </button>\n              :\n              null\n            }\n            <button className=\"primary\" onClick={this.props.onConfirm}>\n              {this.props.confirm || <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\"  />}\n            </button>\n          </div>\n        </div>\n      </div>\n    :\n    null;\n  }\n};\n","// This is a generated file. Don't edit.\n\nexport const PACKAGE_VERSION = \"0.18.0-alpha1\";\n","import { PACKAGE_VERSION } from './version.js';\n\n// Name of this application, used in the User-Agent.\nexport const APP_NAME = 'TinodeWeb/' + (PACKAGE_VERSION || '0.17');\n\n// API key. Use https://github.com/tinode/chat/tree/master/keygen to generate your own\nexport const API_KEY = 'AQEAAAABAAD_rAp4DJh05a1HAwFT3A6K';\n\n// The array of possible hosts to connect to.\nexport const KNOWN_HOSTS = {hosted: 'web.tinode.co', local: 'localhost:6060'};\n\n// Default host name and port to connect to.\nexport const DEFAULT_HOST = KNOWN_HOSTS.hosted;\n\n// Enable console logging.\nexport const LOGGING_ENABLED = true;\n\n// Minimum time between two keypress notifications, milliseconds.\nexport const KEYPRESS_DELAY = 3*1000;\n// Delay before sending a {note} for reciving a message, milliseconds.\nexport const RECEIVED_DELAY = 500;\n// Delay before sending a read notification, milliseconds.\nexport const READ_DELAY = 1000;\n\n// The default shortest allowed tag length. Matches the value on the server.\nexport const MIN_TAG_LENGTH = 2;\n// The default greatest allowed tag length. Matches the value on the server.\nexport const MAX_TAG_LENGTH = 96;\n// The default maximum number of tags allowed. Matches the value on the server.\nexport const MAX_TAG_COUNT = 16;\n\n// Access mode for P2P subscriptions initiated by the current user.\nexport const DEFAULT_P2P_ACCESS_MODE = 'JRWPS';\n// Access mode for new group topics created by the current user.\nexport const NEW_GRP_ACCESS_MODE = 'JRWPSAO';\n// Access mode for a channel.\nexport const CHANNEL_ACCESS_MODE = 'JR';\n\n// Access mode for no access.\nexport const NO_ACCESS_MODE = 'N';\n\n// Mediaquery breakpoint between desktop and mobile, in px. Should match the value\n// in @media (max-size: 640px) in base.css\nexport const MEDIA_BREAKPOINT = 640;\n// Size of css 'rem' unit in pixels. Default 1rem = 10pt = 13px.\nexport const REM_SIZE = 13;\n\n// Size of the avatar image: when image dimensions are greater or the image is not square, it's resized to\n// a square of this size or less.\nexport const AVATAR_SIZE = 384;\n\n// Maximum size of an avatar in bytes for sending in-band. Bigger avatars will be sent out of band (as uploads).\nexport const MAX_AVATAR_BYTES = 4096;\n\n// Size of the broken_image shown in MessagesView\nexport const BROKEN_IMAGE_SIZE = 32;\n\n// Number of chat messages to fetch in one call.\nexport const MESSAGES_PAGE = 24;\n\n// Default maximum in-band (included directly into the message) attachment size which fits into\n// a message of 256K in size. Used when the server-provided value is unavailable. The actual\n// binary size of the attachment should be smaller due to base64 encoding expansion and some overhead,\n// for instance 1024 bytes.\n// Increase this limit to a greater value in production, if desired. Also increase\n// max_message_size in the server config.\nexport const MAX_INBAND_ATTACHMENT_SIZE = 262144;\n\n// Default absolute maximum attachment size to be used with the server = 8MB.\n// Used when the server-provided value is unavailable. Increase to something like 100MB in production.\nexport const MAX_EXTERN_ATTACHMENT_SIZE = 1 << 23;\n\n// Maximum allowed linear dimension (pixels) of an image sent inline. Larger images will be shrunk\n// to make the larger dimension fit under this size. You may want to adjust it to 1600 or\n// 2400 for production.\nexport const MAX_IMAGE_DIM = 1024;\n\n// Linear dimensions of image preview: shrink image under this size for previews.\nexport const IMAGE_PREVIEW_DIM = 64;\n\n// Linear dimensions of image thumbnail: shrink image under this size for thumbnails in reply quote previews.\nexport const IMAGE_THUMBNAIL_DIM = 25;\n\n// Maximum number of online users to be shown in a topic title bar. Others will be\n// hidden under \"+X more\"\nexport const MAX_ONLINE_IN_TOPIC = 4;\n\n// Maximum length of user name, topic title, and private comment.\nexport const MAX_TITLE_LENGTH = 60;\n// Maximum length of topic description.\nexport const MAX_TOPIC_DESCRIPTION_LENGTH = 360;\n\n// Length of message previews in chat list, in characters.\nexport const MESSAGE_PREVIEW_LENGTH = 80;\n\n// Link for \"Contact Us\".\nexport const LINK_CONTACT_US = 'email:support@tinode.co';\n\n// Link to Privacy Policy.\nexport const LINK_PRIVACY_POLICY = 'https://tinode.co/privacy.html';\n\n// Link to Terms of Service.\nexport const LINK_TERMS_OF_SERVICE = 'https://tinode.co/terms.html';\n","// Context Menu: popup/dropdown menu.\nimport React from 'react';\nimport { injectIntl, defineMessages } from 'react-intl';\n\nimport { REM_SIZE } from '../config.js';\n\nconst messages = defineMessages({\n  info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  },\n  clear_messages: {\n    id: 'menu_item_clear_messages',\n    defaultMessage: 'Clear messages',\n    description: 'Delete all messages'\n  },\n  clear_for_all: {\n    id: 'menu_item_clear_messages_for_all',\n    defaultMessage: 'Clear for All',\n    description: 'Delete all message(s) for all members'\n  },\n  delete: {\n    id: 'menu_item_delete',\n    defaultMessage: 'Delete',\n    description: 'Delete selected messages'\n  },\n  delete_for_all: {\n    id: 'menu_item_delete_for_all',\n    defaultMessage: 'Delete for All',\n    description: 'Delete selected message(s) for all members'\n  },\n  send_retry: {\n    id: 'menu_item_send_retry',\n    defaultMessage: 'Retry',\n    description: 'Retry sending message'\n  },\n  mute: {\n    id: 'menu_item_mute',\n    defaultMessage: 'Mute',\n    description: 'Turn off notifications'\n  },\n  unmute: {\n    id: 'menu_item_unmute',\n    defaultMessage: 'Unmute',\n    description: 'Turn notifications on'\n  },\n  reply: {\n    id: 'menu_item_reply',\n    defaultMessage: 'Reply',\n    description: 'Reply to message'\n  },\n  topic_delete: {\n    id: 'menu_item_delete_topic',\n    defaultMessage: 'Delete',\n    description: 'Delete entire topic'\n  },\n  topic_delete_warning: {\n    id: 'topic_delete_warning',\n    defaultMessage: 'Are you sure you want to delete this conversation? It cannot be undone.',\n    description: 'Alert warning when deleting entire topic'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  unblock: {\n    id: 'menu_item_unblock',\n    defaultMessage: 'Unblock',\n    description: 'Unblock topic or user'\n  },\n  // Generic string suitable for either topic or user.\n  block: {\n    id: 'menu_item_block',\n    defaultMessage: 'Block',\n    description: 'Block topic or user'\n  },\n  topic_block_warning: {\n    id: 'topic_block_warning',\n    defaultMessage: 'Are you sure you want to block this conversation?',\n    description: 'Alert warning when blocking a topic.'\n  },\n  member_delete: {\n    id: 'menu_item_member_delete',\n    defaultMessage: 'Remove',\n    description: 'Remove user from topic'\n  },\n  archive: {\n    id: 'menu_item_archive_topic',\n    defaultMessage: 'Archive',\n    description: 'Move topic from the list of active chats to archive'\n  },\n  unarchive: {\n    id: 'menu_item_restore_topic',\n    defaultMessage: 'Restore',\n    description: 'Restore topic from archive'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n});\n\nclass ContextMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selfRef = React.createRef();\n\n    const {formatMessage} = props.intl;\n\n    this.handlePageClick = this.handlePageClick.bind(this);\n    this.handleEscapeKey = this.handleEscapeKey.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n\n    // Preconfigured menu items.\n    this.MenuItems = {\n      'topic_info': {\n        id: 'topic_info',\n        title: formatMessage(messages.info),\n        handler: null\n      },\n      'messages_clear': {\n        id: 'messages_clear',\n        title: formatMessage(messages.clear_messages),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.clear_messages), // title\n            formatMessage(messages.clear_messages_warning), // content\n            (() => { this.deleteMessages(true, false, params, errorHandler); }), // onConfirm\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'messages_clear_hard': {\n        id: 'messages_clear_hard',\n        title: formatMessage(messages.clear_for_all),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.clear_for_all), // title\n            formatMessage(message.delete_messages_warning), // content\n            (() => { return this.deleteMessages(true, true, params, errorHandler); }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'message_delete': {\n        id: 'message_delete',\n        title: formatMessage(messages.delete),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, false, params, errorHandler);\n        }\n      },\n      'message_delete_hard': {\n        id: 'message_delete_hard',\n        title: formatMessage(messages.delete_for_all),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, true, params, errorHandler);\n        }\n      },\n      'menu_item_send_retry': {\n        id: 'menu_item_send_retry',\n        title: formatMessage(messages.send_retry),\n        handler: (params, errorHandler) => {\n          return this.retryMessage(params, errorHandler);\n        }\n      },\n      'menu_item_reply': {\n        id: 'menu_item_reply',\n        title: formatMessage(messages.reply),\n        handler: (params, errorHandler) => {\n          return this.replyToMessage(params, errorHandler);\n        }\n      },\n      'topic_unmute': {\n        id: 'topic_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'topic_mute': {\n        id: 'topic_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'topic_unblock': {\n        id: 'topic_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n      'topic_block': {\n        id: 'topic_block',\n        title: formatMessage(messages.block),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.block), // title\n            formatMessage(messages.topic_block_warning), // content\n            (() => {\n              return this.topicPermissionSetter('-JP', params, errorHandler).then((ctrl) => {\n                this.props.onTopicRemoved(params.topicName);\n                return ctrl;\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_delete': {\n        id: 'topic_delete',\n        title: formatMessage(messages.topic_delete),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.topic_delete), // title\n            formatMessage(messages.topic_delete_warning), // content\n            (() => {\n              const topic = this.props.tinode.getTopic(params.topicName);\n              if (!topic) {\n                console.log(\"Topic not found: \", params.topicName);\n                return;\n              }\n              return topic.delTopic(true).catch((err) => {\n                if (errorHandler) {\n                  errorHandler(err.message, 'err');\n                }\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_archive': {\n        id: 'topic_archive',\n        title: formatMessage(messages.archive),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic) {\n            console.log(\"Topic not found: \", params.topicName);\n            return;\n          }\n          return topic.archive(true).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      'topic_restore': {\n        id: 'topic_restore',\n        title: formatMessage(messages.unarchive),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic) {\n            console.log(\"Topic not found: \", params.topicName);\n            return;\n          }\n          return topic.archive(false).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      // menu_item_edit_permissions is defined elsewhere.\n      'permissions': {\n        id: 'permissions',\n        title: formatMessage(messages.edit_permissions),\n        handler: null\n      },\n      'member_delete': {\n        id: 'member_delete',\n        title: formatMessage(messages.member_delete),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic || !params.user) {\n            console.log(\"Topic or user not found: '\" + params.topicName + \"', '\" + params.user + \"'\");\n            return;\n          }\n          return topic.delSubscription(params.user).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      'member_mute': {\n        id: 'member_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'member_unmute': {\n        id: 'member_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'member_block': {\n        id: 'member_block',\n        title: formatMessage(messages.block),\n        handler: this.topicPermissionSetter.bind(this, '-JP')\n      },\n      'member_unblock': {\n        id: 'member_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handlePageClick, false);\n    document.addEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handlePageClick, false);\n    document.removeEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  handlePageClick(e) {\n    if (this.selfRef.current.contains(e.target)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n  }\n\n  handleEscapeKey(e) {\n    if (e.keyCode === 27) {\n      this.props.hide();\n    }\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n    let item = this.props.items[e.currentTarget.dataset.id];\n    if (typeof item == 'string') {\n      item = this.MenuItems[item];\n    }\n\n    if (!item) {\n      console.error(\"Invalid menu item ID\", e.currentTarget.dataset.id);\n    } else {\n      this.props.onAction(\n        item.id,\n        item.handler(this.props.params, this.props.onError),\n        this.props.params);\n    }\n  }\n\n  // Menu Actions\n\n  deleteMessages(all, hard, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found: \", params.topicName);\n      return;\n    }\n\n    // We don't know if the message is still pending (e.g. attachment is being uploaded),\n    // so try cancelling first. No harm if we can't cancel.\n    // The message can be cancelled if transmission to the server has not\n    // started yet or if the message send has failed.\n    if (!all && topic.cancelSend(params.seq)) {\n      return;\n    }\n    // Can't cancel. Delete instead.\n    const promise = all ?\n      topic.delMessagesAll(hard) :\n      topic.delMessagesList([params.seq], hard);\n\n    return promise.catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Retries sending failed message.\n  retryMessage(params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    // Remove the existing message entry.\n    if (!topic || !topic.flushMessage(params.seq)) {\n      return;\n    }\n    const msg = topic.createMessage(params.content, false);\n    return topic.publishDraft(msg).catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Function is used by context menu to set permissions.\n  topicPermissionSetter(mode, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found\", params.topicName);\n      return;\n    }\n\n    let result = topic.updateMode(params.user, mode);\n    if (errorHandler) {\n      result = result.catch((err) => {\n        errorHandler(err.message, 'err');\n      });\n    }\n    return result;\n  }\n\n  replyToMessage(params, errorHandler) {\n    params.pickReply({ seq: params.seq, content: params.content });\n  }\n\n  render() {\n    const menu = [];\n    let count = 0;\n    this.props.items.map((item) => {\n      if (typeof item == 'string') {\n        item = this.MenuItems[item];\n      }\n      if (item && item.title) {\n        menu.push(\n          item.title == '-' ?\n            <li className=\"separator\" key={count} />\n            :\n            <li onClick={this.handleClick} data-id={count} key={count}>{item.title}</li>\n        );\n      }\n      count++;\n    });\n\n    // Ensure that menu is inside the app-container.\n    const hSize = 12 * REM_SIZE;\n    const vSize = REM_SIZE * (0.7 + menu.length * 2.5);\n    const left = (this.props.bounds.right - this.props.clickAt.x < hSize) ?\n        (this.props.clickAt.x - this.props.bounds.left - hSize) :\n        (this.props.clickAt.x - this.props.bounds.left);\n    const top = (this.props.bounds.bottom - this.props.clickAt.y < vSize) ?\n        (this.props.clickAt.y - this.props.bounds.top - vSize) :\n        (this.props.clickAt.y - this.props.bounds.top);\n\n    const position = {\n      left: left + 'px',\n      top: top + 'px'\n    };\n\n    return (\n      <ul className=\"menu\" style={position} ref={this.selfRef}>\n        {menu}\n      </ul>\n    );\n  }\n}\n\nexport default injectIntl(ContextMenu);\n","// Short representation of time in the past.\nexport function shortDateFormat(then, locale) {\n  locale = locale || window.navigator.userLanguage || window.navigator.language;\n  const now = new Date();\n  if (then.getFullYear() == now.getFullYear()) {\n    // Same year.\n    if (then.getMonth() == now.getMonth() && then.getDate() == now.getDate()) {\n      // Same month and day, show time only.\n      return then.toLocaleTimeString(locale, {hour12: false, hour: '2-digit', minute: '2-digit'});\n    }\n    // Different month and/or day, show month day, time.\n    return then.toLocaleDateString(locale,\n      {hour12: false, month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit'});\n  }\n  // Different year: just show the date.\n  return then.toLocaleDateString(locale, {year: 'numeric', month: 'short', day: 'numeric'});\n}\n\n// Convert seconds to minutes:seconds, i.e. 156 sec -> 2:36.\nexport function secondsToTime(seconds) {\n  const min = Math.floor(seconds / 60);\n  let sec = seconds % 60;\n  sec = sec < 10 ? `0${sec}` : sec;\n  return `${min}:${sec}`;\n}\n\n// Convert a number of bytes to human-readable format.\nexport function bytesToHumanSize(bytes) {\n  if (!bytes || bytes == 0) {\n    return '0 Bytes';\n  }\n\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n  const bucket = Math.min(Math.floor(Math.log2(bytes) / 10) | 0, sizes.length-1);\n  const count = bytes / Math.pow(1024, bucket);\n  const round = bucket > 0 ? (count < 3 ? 2 : (count < 30 ? 1 : 0)) : 0;\n  return count.toFixed(round) + ' ' + sizes[bucket];\n}\n\n// Get 32 bit integer hash value for a string. Ideally it should produce the same value\n// as Java's String#hash().\nfunction stringToColorHash(value) {\n  let hash = 0;\n  value = '' + value;\n  for (let i = 0; i < value.length; i++) {\n    hash = ((hash << 5) - hash) + value.charCodeAt(i);\n    hash = hash & hash; // Convert to 32bit integer\n  }\n  return hash;\n}\n\n// User avatar letter color id.\nexport function letterTileColorId(userId) {\n  return Math.abs(stringToColorHash(userId)) % 16;\n}\n\n// Converts user or topic ID to a CSS color class. Ideally it should produce the same color value as Java version.\n// params:\n// - {string} id: user or topic ID\n// - {boolean} light: light or dark version of the color.\n// - {boolean} fg: foreground or background color.\nexport function idToColorClass(id, light, fg) {\n  return (light ? 'lt-' : 'dk-') + (fg ? 'fg-' : 'bg-') + letterTileColorId(id);\n}\n","// Odds and ends\n\nimport Tinode from 'tinode-sdk';\n\n// Make shortcut icon appear with a green dot + show unread count in title.\nexport function updateFavicon(count) {\n  const oldIcon = document.getElementById('shortcut-icon');\n  const head = document.head || document.getElementsByTagName('head')[0];\n  const newIcon = document.createElement('link');\n  newIcon.type = 'image/png';\n  newIcon.id = 'shortcut-icon';\n  newIcon.rel = 'shortcut icon';\n  newIcon.href = 'img/logo32x32' + (count > 0 ? 'a' : '') + '.png';\n  if (oldIcon) {\n    head.removeChild(oldIcon);\n  }\n  head.appendChild(newIcon);\n\n  document.title = (count > 0 ? '('+count+') ' : '') + 'Tinode';\n}\n\n// Create theCard which represents user's or topic's \"public\" info.\nexport function theCard(fn, imageUrl, imageMimeType, note) {\n  let card = null;\n  fn = fn && fn.trim();\n  note = note && note.trim();\n\n  if (fn) {\n    card = {\n      fn: fn\n    };\n  }\n\n  if (typeof note == 'string') {\n    card = card || {};\n    card.note = note ? note : Tinode.DEL_CHAR;\n  }\n\n  if (imageUrl) {\n    card = card || {};\n    let mimeType = imageMimeType;\n    // Is this a data URL \"data:[<mediatype>][;base64],<data>\"?\n    const matches = /^data:(image\\/[-a-z0-9+.]+)?(;base64)?,/i.exec(imageUrl);\n    if (matches) {\n      mimeType = matches[1];\n      card.photo = {\n        data: imageUrl.substring(imageUrl.indexOf(',') + 1),\n        ref: Tinode.DEL_CHAR\n      };\n    } else {\n      card.photo = {\n        data: Tinode.DEL_CHAR,\n        ref: imageUrl\n      };\n    }\n    card.photo.type = (mimeType || 'image/jpeg').substring('image/'.length);\n  }\n\n  return card;\n}\n\n// Deep-shallow compare two arrays: shallow compare each element.\nexport function arrayEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (!Array.isArray(a) || !Array.isArray(b)) {\n    return false;\n  }\n\n  // Compare lengths first.\n  if (a.length != b.length) {\n    return false;\n  }\n  // Order of elements is ignored.\n  a.sort();\n  b.sort();\n  for (let i = 0, l = a.length; i < l; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Checks (loosely) if the given string is a phone. If so, returns the phone number in a format\n// as close to E.164 as possible.\nexport function asPhone(val) {\n  val = val.trim();\n  if (/^(?:\\+?(\\d{1,3}))?[- (.]*(\\d{3})[- ).]*(\\d{3})[- .]*(\\d{2})[- .]*(\\d{2})?$/.test(val)) {\n    return val.replace(/[- ().]*/, '');\n  }\n  return null;\n}\n\n// Checks (loosely) if the given string is an email. If so returns the email.\nexport function asEmail(val) {\n  val = val.trim();\n  if (/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(val)) {\n    return val;\n  }\n  return null;\n}\n\n// Checks if URL is a relative url, i.e. has no 'scheme://', including the case of missing scheme '//'.\n// The scheme is expected to be RFC-compliant, e.g. [a-z][a-z0-9+.-]*\n// example.html - ok\n// https:example.com - not ok.\n// http:/example.com - not ok.\n// ' ↲ https://example.com' - not ok. (↲ means carriage return)\nexport function isUrlRelative(url) {\n  return url && !/^\\s*([a-z][a-z0-9+.-]*:|\\/\\/)/im.test(url);\n}\n\n// Ensure URL does not present an XSS risk. Optional allowedSchemes may contain an array of\n// strings with permitted URL schemes, such as ['ftp', 'ftps']; otherwise accept http and https only.\nexport function sanitizeUrl(url, allowedSchemes) {\n  if (typeof url != 'string') {\n    return url;\n  }\n\n  // Strip control characters and whitespace. They are not valid URL characters anyway.\n  url = url.replace(/[^\\x20-\\x7E]/gmi, '').trim();\n\n  // Relative URLs are safe.\n  // Relative URL does not start with ':', abcd123: or '//'.\n  if (!/^([a-z][a-z0-9+.-]*:|\\/\\/)/i.test(url)) {\n    return url;\n  }\n\n  // Blob URLs are safe.\n  if (/^blob:http/.test(url)) {\n    return url;\n  }\n\n  // Absolute URL. Accept only safe schemes, or no scheme.\n  const schemes = Array.isArray(allowedSchemes) ? allowedSchemes.join('|') : 'http|https';\n  const re = new RegExp('^((' + schemes + '):|//)', 'i');\n  if (!re.test(url)) {\n    return null;\n  }\n\n  return url;\n}\n\n// Ensure URL is suitable for <img src=\"url\"> field: the URL must be a relative URL or\n// have http:, https:, blob: or data: scheme.\n// In case of data: scheme, the URL must start with a 'data:image/XXXX;base64,'.\nexport function sanitizeImageUrl(url) {\n  if (!url) {\n    return null;\n  }\n\n  const sanitizedUrl = sanitizeUrl(url);\n  if (sanitizedUrl) {\n    return sanitizedUrl;\n  }\n\n  // Is this a data: URL of an image?\n  if (/data:image\\/[a-z0-9.-]+;base64,/i.test(url.trim())) {\n    return url;\n  }\n\n  return null;\n}\n\n// Given message's received status, return name and color of a delivery indicator icon.\nexport function deliveryMarker(received) {\n  switch (received) {\n    case Tinode.MESSAGE_STATUS_SENDING:\n      return { name: 'access_time' }; // watch face\n    case Tinode.MESSAGE_STATUS_FAILED:\n      return { name: 'warning', color: 'danger-color' }; // yellow icon /!\\\n    case Tinode.MESSAGE_STATUS_SENT:\n      return { name: 'done' }; // checkmark\n    case Tinode.MESSAGE_STATUS_RECEIVED:\n      return { name: 'done_all' }; // double checkmark\n    case Tinode.MESSAGE_STATUS_READ:\n      return { name: 'done_all', color: 'blue' }; // blue double checkmark\n  }\n  return null;\n}\n","import React from 'react';\n\nimport Tinode from 'tinode-sdk';\n\nimport { idToColorClass } from '../lib/strformat.js';\nimport { sanitizeImageUrl } from '../lib/utils.js';\n\nexport default class LetterTile extends React.PureComponent {\n  render() {\n    let avatar;\n    if (this.props.avatar === true) {\n      const isGroup = (Tinode.topicType(this.props.topic) == 'grp');\n      const iconColor = idToColorClass(this.props.topic, isGroup);\n      if (this.props.topic && this.props.title && this.props.title.trim()) {\n        const letter = this.props.title.trim().charAt(0);\n        const className = 'lettertile ' + iconColor;\n        avatar = (<div className={className}><div>{letter}</div></div>)\n      } else {\n        const className = 'material-icons ' + iconColor;\n        avatar = isGroup ?\n          <i className={className}>group</i> : <i className={className}>person</i>;\n      }\n    } else if (this.props.avatar) {\n      const url = this.props.tinode.authorizeURL(sanitizeImageUrl(this.props.avatar));\n      // If avatar image is invalid, show a placeholder.\n      avatar = <img className=\"avatar\" alt=\"avatar\" src={url}\n        onError={(e)=>{e.target.onerror = null; e.target.src=\"../img/broken_image.png\"}} />;\n    } else {\n      avatar = null;\n    }\n    return avatar;\n  }\n}\n","import React from 'react';\n\nexport default class LoadSpinner extends React.PureComponent {\n  render() {\n    const className = 'load-spinner-box' + (this.props.large ? ' large' : '')\n      + (this.props.clear ? ' clear' : '') + (this.props.centered ? ' centered' : '');\n    return (this.props.show ?\n      <div className={className}><div className=\"loader-spinner\"></div></div> : null);\n  }\n}\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\nimport LoadSpinner from './load-spinner.jsx';\n\nimport { sanitizeImageUrl } from '../lib/utils.js';\n\nimport { AVATAR_SIZE } from '../config.js';\n\nexport default class AvatarUpload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      source: props.avatar\n    };\n\n    this.handleFileReceived = this.handleFileReceived.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.avatar != prevProps.avatar) {\n      this.setState({source: this.props.avatar});\n    }\n  }\n\n  handleFileReceived(e) {\n    const image = e.target.files[0];\n    this.props.onImageUpdated(image.type, URL.createObjectURL(image), image.name);\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  render() {\n    // Randomize id value in case more than one AvatarUpload is shown\n    // at the same time.\n    const randId = 'file-input-avatar-' + (Math.random() + '').substr(2);\n    const className = 'avatar-upload' + (this.props.readOnly ? ' read-only' : '');\n    return (\n      <div className={className}>\n        {this.props.readOnly || !this.state.source ?\n          null :\n          <a href=\"#\" className=\"clear-avatar\" onClick={(e) => {e.preventDefault(); this.props.onImageUpdated();}}>\n            <i className=\"material-icons\">clear</i>\n          </a>}\n        {this.state.source ?\n          <img src={this.props.tinode.authorizeURL(sanitizeImageUrl(this.state.source))} className=\"preview\" /> :\n          this.props.readOnly && this.props.uid ?\n            <div className=\"avatar-box\">\n              <LetterTile\n                tinode={this.props.tinode}\n                avatar={true}\n                topic={this.props.uid}\n                title={this.props.title} />\n            </div>\n            :\n            <div className=\"blank\">{AVATAR_SIZE}&times;{AVATAR_SIZE}</div>}\n        {this.props.readOnly ? null :\n          <input type=\"file\" id={randId} className=\"inputfile hidden\"\n            accept=\"image/*\" onChange={this.handleFileReceived} />}\n        {this.props.readOnly ? null :\n        <label htmlFor={randId} className=\"round\">\n          <i className=\"material-icons\">file_upload</i>\n        </label>}\n        <LoadSpinner show={this.props.uploading} large={true} clear={true} centered={true} />\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nconst icon_mapping = {'staff': 'verified_user'};\n\nconst messages = defineMessages({\n  badge_verified: {\n    id: 'badge_verified',\n    defaultMessage: 'Verified/official',\n    description: 'Explanation of a verified account or topic badge'\n  },\n  badge_staff: {\n    id: 'badge_staff',\n    defaultMessage: 'Staff-managed',\n    description: 'Explanation of a staff-managed account or topic badge'\n  },\n  badge_danger: {\n    id: 'badge_danger',\n    defaultMessage: 'Untrustworthy',\n    description: 'Suspicious or untrustworthy account or topic badge'\n  },\n});\n\n\n/* Trusted badges with labels: verified, staff, danger */\nclass BadgeList extends React.PureComponent {\n  render() {\n    const {formatMessage} = this.props.intl;\n    let badges = null;\n    if (this.props.trustedBadges && this.props.trustedBadges.length > 0) {\n      badges = [];\n      this.props.trustedBadges.map((b) => {\n        const comment = formatMessage(messages['badge_' + b]);\n        const style = 'material-icons ' + b + '-color';\n        badges.push(<div className=\"trusted-badge\" key={b}><i className={style}>{icon_mapping[b] || b}</i> {comment}</div>);\n      });\n      return <>{badges}</>;\n    }\n    return null;\n  }\n};\n\nexport default injectIntl(BadgeList);\n","import React from 'react';\n\n/* BEGIN CheckBox: styled checkbox */\nexport default class CheckBox extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange() {\n    this.props.onChange(this.props.name, !this.props.checked);\n  }\n\n  render() {\n    return (\n      this.props.onChange ? (\n        this.props.checked === true ?\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box</i> :\n        this.props.checked === false ?\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box_outline_blank</i> :\n          <i className=\"material-icons lt-blue\">indeterminate_check_box</i>\n        ) : (\n          this.props.checked ?\n            <i className=\"material-icons\">check_box</i> :\n            <i className=\"material-icons\">check_box_outline_blank</i>\n        )\n    );\n  }\n}\n/* END CheckBox */\n","import React from 'react';\n\nconst icon_mapping = {'muted': 'notifications_off', 'banned': 'block', 'staff': 'verified_user'};\n\n/* Contact's labels: [you], or icons [muted], [blocked] */\nexport default class ContactBadges extends React.PureComponent {\n  render() {\n    let badges = null;\n    if (this.props.badges && this.props.badges.length > 0) {\n      badges = [];\n      this.props.badges.map((b) => {\n        const color = (b.color ? ' ' + b.color : '');\n        if (b.icon) {\n          badges.push(<i className={'material-icons as-badge' + color} key={b.key || b.icon}>{icon_mapping[b.icon] || b.icon}</i>);\n        } else {\n          badges.push(<span className={'badge' + color} key={b.key || b.name}>{b.name}</span>);\n        }\n      });\n      return <>{badges}</>;\n    }\n    return null;\n  }\n};\n","// Received/read indicator.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { shortDateFormat } from '../lib/strformat.js';\nimport { deliveryMarker } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  message_sending: {\n    id: 'message_sending',\n    defaultMessage: 'sending...',\n    description: 'Message being sent, in place of time stamp'\n  },\n  message_sending_failed: {\n    id: 'message_sending_failed',\n    defaultMessage: 'failed',\n    description: 'Failed to send message, in place of time stamp'\n  }\n});\n\nclass ReceivedMarker extends React.PureComponent {\n  render() {\n    const {formatMessage} = this.props.intl;\n    let timestamp;\n    if (this.props.received <= Tinode.MESSAGE_STATUS_SENDING) {\n      timestamp = formatMessage(messages.message_sending);\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_FAILED) {\n      timestamp = formatMessage(messages.message_sending_failed);\n    } else {\n      timestamp = shortDateFormat(this.props.timestamp, this.props.intl.locale);\n    }\n\n    const icon = deliveryMarker(this.props.received);\n    const marker = icon ? <i className={'material-icons small ' + icon.color}>{icon.name}</i> : null;\n\n    return (\n      <span className=\"timestamp\">\n        {timestamp}{'\\u00a0'}{marker}\n      </span>\n    );\n  }\n};\n\nexport default injectIntl(ReceivedMarker);\n","// The counter of unread messages in the topic.\nimport React from 'react';\n\nexport default class UnreadBadge extends React.PureComponent {\n  render() {\n    return (this.props.count > 0 ?\n      <span className=\"unread\">{this.props.count > 9 ? \"9+\" : this.props.count}</span>\n      : null);\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\n\nimport ContactBadges from './contact-badges.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\nimport UnreadBadge from './unread-badge.jsx';\n\nimport { Drafty } from 'tinode-sdk';\n\nimport { deliveryMarker } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  drafty_image: {\n    id: 'drafty_image',\n    defaultMessage: 'Picture',\n    description: 'Comment for embedded images in drafty preview'\n  },\n  drafty_form: {\n    id: 'drafty_form',\n    defaultMessage: 'Form: ',\n    description: 'Comment for form in drafty preview'\n  },\n  drafty_attachment: {\n    id: 'drafty_attachment',\n    defaultMessage: 'Attachment',\n    description: 'Comment for attachment in drafty preview'\n  },\n});\n\nclass Contact extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.props.onSelected) {\n      // Index this.props.index is used by GroupManager.\n      this.props.onSelected(this.props.item, this.props.index);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.props.item, y: e.pageY, x: e.pageX });\n  }\n\n  render() {\n    let title = this.props.title;\n    if (!title) {\n      title = <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n        description=\"Title shown when the topic has no name\" /></i>;\n    } else if (title.length > 30) {\n      // FIXME: this is probably wrong for RTL languages.\n      title = title.substring(0, 28) + '…';\n    }\n    const online = this.props.now ? 'online' : 'offline';\n    const avatar = this.props.avatar ? this.props.avatar : true;\n    const badges = this.props.badges ? this.props.badges.slice() : [];\n    const icon_badges = [];\n    if (this.props.isVerified) {\n      icon_badges.push({icon: 'verified', color: 'verified-color'});\n    }\n    if (this.props.isStaff) {\n      icon_badges.push({icon: 'staff', color: 'staff-color'});\n    }\n    if (this.props.isDangerous) {\n      icon_badges.push({icon: 'dangerous', color: 'danger-color'});\n    }\n    if (this.props.acs) {\n      if (this.props.showMode) {\n        badges.push({name: this.props.acs.getMode(), key: 'mode'});\n      }\n      if (this.props.acs.isMuted()) {\n        icon_badges.push({icon: 'muted'});\n      }\n      if (!this.props.acs.isJoiner()) {\n        icon_badges.push({icon: 'banned'});\n      }\n    }\n\n    const subtitle = this.props.preview ?\n      (typeof this.props.preview == 'string' ? this.props.preview :\n        Drafty.isValid(this.props.preview) ?\n        React.createElement(React.Fragment, null, Drafty.format(this.props.preview, draftyFormatter, this)) :\n        <><i className=\"material-icons gray\">error_outline</i> <i className=\"gray\">\n          <FormattedMessage id=\"invalid_content\"\n            defaultMessage=\"invalid content\" description=\"Shown when message is unreadable\" /></i>\n        </>\n      ) :\n      this.props.comment;\n\n    const icon = deliveryMarker(this.props.received);\n    const marker = icon ? <i className={'material-icons small space-right' +\n      (icon.color ? ' ' + icon.color : '')}>{icon.name}</i> : null;\n\n    return (\n      <li className={!this.props.showCheckmark && this.props.selected ? 'selected' : null} onClick={this.handleClick}>\n        <div className=\"avatar-box\">\n          <LetterTile\n            tinode={this.props.tinode}\n            avatar={avatar}\n            title={this.props.title}\n            topic={this.props.item} />\n          {this.props.showOnline ? <span className={online} /> :\n            (this.props.showCheckmark && this.props.selected ?\n            <i className=\"checkmark material-icons\">check_circle</i>\n            : null)}\n        </div>\n        <div className=\"text-box\">\n          <div><span className=\"contact-title\">{title}</span>\n            {this.props.isChannel ? <img src=\"/img/channel.png\" className=\"channel\" alt=\"channel\" /> : null}\n            <ContactBadges badges={icon_badges} /><UnreadBadge count={this.props.unread} />\n          </div>\n          {this.props.showMode ?\n            <span><ContactBadges badges={badges} /></span> :\n            this.props.small ? null : <div className=\"contact-comment\">{marker}<span>{subtitle || '\\u00A0'}</span></div>}\n        </div>\n        {this.props.showContextMenu ?\n          <span className=\"menuTrigger\">\n            <a href=\"#\" onClick={this.handleContextClick}>\n              <i className=\"material-icons\">expand_more</i>\n            </a>\n          </span> : null}\n      </li>\n    );\n  }\n};\n\n\n// Converts Drafty object into a one-line preview.\nfunction draftyFormatter(style, data, values, key) {\n  let el = Drafty.tagName(style);\n  const attr = { key: key };\n  if (el) {\n    const { formatMessage } = this.props.intl;\n    switch (style) {\n      case 'BR':\n        // Replace new line with a space.\n        el = React.Fragment;\n        values = [' '];\n        break;\n      case 'HL':\n        // Make highlight less prominent in preview.\n        attr.className = 'highlight preview';\n        break;\n      case 'LN':\n      case 'MN':\n        // Disable links in previews.\n        el = 'span';\n        break;\n      case 'IM':\n        // Replace image with '[icon] Image'.\n        el = React.Fragment;\n        values = [<i key=\"im\" className=\"material-icons\">photo</i>, formatMessage(messages.drafty_image)];\n        break;\n      case 'BN':\n        el = 'span';\n        attr.className = 'flat-button faux';\n        break;\n      case 'FM':\n        el = React.Fragment;\n        values = [<i key=\"fm\" className=\"material-icons\">dashboard</i>,\n          formatMessage(messages.drafty_form)].concat(' ', values || []);\n        break;\n      case 'RW':\n        el = React.Fragment;\n        break;\n      case 'EX':\n        if (data && data.mime == 'application/json') {\n          // Ignore JSON attachments: they are form response payloads.\n          return null;\n        }\n        el = React.Fragment;\n        values = [<i key=\"ex\" className=\"material-icons\">attachment</i>, formatMessage(messages.drafty_attachment)];\n        break;\n      default:\n        if (el == '_UNKN') {\n          el = React.Fragment;\n          values = [<i key=\"unkn\" className=\"material-icons\">extension</i>, ' '].concat(values || []);\n        }\n        break;\n    }\n    return React.createElement(el, attr, values);\n  } else {\n    return values;\n  }\n};\n\nexport default injectIntl(Contact);\n","// A panel included into a list of contacts with an action text.\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\n\nclass ContactAction extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.onAction(this.props.action);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <li onClick={this.handleClick} className=\"action\">\n        <div className=\"action-text\">{formatMessage(this.props.title, this.props.values)}</div>\n      </li>\n    );\n  }\n};\n\nexport default injectIntl(ContactAction);\n","// File and image helper functions.\nimport { MAX_INBAND_ATTACHMENT_SIZE, MAX_IMAGE_DIM } from '../config.js';\nimport { bytesToHumanSize } from './strformat.js'\n\n// Supported image MIME types and corresponding file extensions.\nexport const SUPPORTED_IMAGE_FORMATS = ['image/jpeg', 'image/gif', 'image/png', 'image/svg', 'image/svg+xml'];\nexport const MIME_EXTENSIONS         = ['jpg',        'gif',       'png',       'svg',       'svg'];\n\n// Get an URL from a theCard photo: either create a data: URL or return reference URL.\nexport function makeImageUrl(photo) {\n  if (photo && typeof photo == 'object') {\n    if (photo.data && photo.type) {\n      const mime = photo.type.startsWith('image/') ? photo.type : ('image/' + photo.type);\n      return 'data:' + mime + ';base64,' + photo.data;\n    }\n    return photo.ref;\n  }\n  return null;\n}\n\n// Calculate linear dimensions for scaling image down to fit under a certain size.\n// Returns an object which contains destination sizes, source sizes, and offsets\n// into source (when making square images).\nexport function fitImageSize(width, height, maxWidth, maxHeight, forceSquare) {\n  // Sanitize input\n  width = width | 0;\n  height = height | 0;\n  maxWidth = maxWidth | 0;\n  maxHeight = maxHeight | 0;\n\n  if (width <= 0 || height <= 0 || maxWidth <= 0 || maxHeight <= 0) {\n    return null;\n  }\n\n  if (forceSquare) {\n    maxWidth = maxHeight = Math.min(maxWidth, maxHeight);\n  }\n\n  const scale = Math.min(\n    Math.min(width, maxWidth) / width,\n    Math.min(height, maxHeight) / height\n  );\n\n  const size = {\n    dstWidth: (width * scale) | 0,\n    dstHeight: (height * scale) | 0,\n  };\n\n  if (forceSquare) {\n    // Also calculate parameters for making the image square.\n    size.dstWidth = size.dstHeight = Math.min(size.dstWidth, size.dstHeight);\n    size.srcWidth = size.srcHeight = Math.min(width, height);\n    size.xoffset = ((width - size.srcWidth) / 2) | 0;\n    size.yoffset = ((height - size.srcWidth) / 2) | 0;\n  } else {\n    size.xoffset = size.yoffset = 0;\n    size.srcWidth = width;\n    size.srcHeight = height;\n  }\n  return size;\n}\n\n// Ensure file's extension matches mime content type\nexport function fileNameForMime(fname, mime) {\n  const idx = SUPPORTED_IMAGE_FORMATS.indexOf(mime);\n  if (idx < 0 || !fname) {\n    // Unknown mime or empty name.\n    return fname;\n  }\n  const ext = MIME_EXTENSIONS[idx];\n\n  const at = fname.lastIndexOf('.');\n  if (at >= 0) {\n    fname = fname.substring(0, at);\n  }\n  return fname + '.' + ext;\n}\n\n// Scale uploaded image to fit under certain dimensions and byte size, optionally constraining to a square.\n// On success calls onSuccess callback with the scaled image as Blob.\nexport function imageScaled(fileOrBlob, maxWidth, maxHeight, maxSize, forceSquare, onSuccess, onError) {\n  const img = new Image();\n  img.crossOrigin = 'Anonymous';\n  img.onerror = function(err) {\n    onError(\"Image format unrecognized\");\n  }\n  img.onload = async function() {\n    // Once the image is loaded, the URL is no longer needed.\n    URL.revokeObjectURL(img.src);\n\n    // Calculate the desired image dimensions.\n    const dim = fitImageSize(this.width, this.height, maxWidth, maxHeight, forceSquare);\n    if (!dim) {\n      onError(\"Invalid image\");\n      return;\n    }\n    let canvas = document.createElement('canvas');\n    canvas.width = dim.dstWidth;\n    canvas.height = dim.dstHeight;\n    let ctx = canvas.getContext('2d');\n    ctx.imageSmoothingEnabled = true;\n    ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n      0, 0, dim.dstWidth, dim.dstHeight);\n\n    const mime = SUPPORTED_IMAGE_FORMATS.includes(fileOrBlob.type) ? fileOrBlob.type : 'image/jpeg';\n    // Generate blob to check size of the image.\n    let blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    if (!blob) {\n      onError(\"Unsupported image format\");\n      return;\n    }\n\n    // Ensure the image is not too large. Shrink the image keeping the aspect ratio.\n    // Do nothing if maxsize is <= 0.\n    while (maxSize > 0 && blob.length > maxSize) {\n      dim.dstWidth = (dim.dstWidth * 0.70710678118) | 0;\n      dim.dstHeight = (dim.dstHeight * 0.70710678118) | 0;\n      canvas.width = dim.dstWidth;\n      canvas.height = dim.dstHeight;\n      ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n        0, 0, dim.dstWidth, dim.dstHeight);\n      blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    }\n\n    canvas = null;\n    onSuccess(mime, blob, dim.dstWidth, dim.dstHeight, fileNameForMime(fileOrBlob.name, mime));\n  };\n  img.src = URL.createObjectURL(fileOrBlob);\n}\n\n// Scale and crop image according to specified dimensions.\n// The coordinates are in unscaled image pixels, i.e. cut the rectangle first then scale it.\nexport function imageCrop(mime, objURL, left, top, width, height, scale, onSuccess, onError) {\n  const img = new Image();\n  img.crossOrigin = 'Anonymous';\n  img.onerror = function(err) {\n    onError(\"Image format unrecognized\");\n  }\n  img.onload = async function() {\n    // Once the image is loaded, the URL is no longer needed.\n    URL.revokeObjectURL(img.src);\n\n    let canvas = document.createElement('canvas');\n    canvas.width = width * scale;\n    canvas.height = height * scale;\n    let ctx = canvas.getContext('2d');\n    ctx.imageSmoothingEnabled = true;\n    ctx.drawImage(this, left, top, width, height, 0, 0, canvas.width, canvas.height);\n\n    mime = SUPPORTED_IMAGE_FORMATS.includes(mime) ? mime : 'image/jpeg';\n    // Generate blob to check size of the image.\n    let blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    if (!blob) {\n      onError(\"Unsupported image format\");\n      return;\n    }\n    // Allow GC.\n    canvas = null;\n    onSuccess(mime, blob, width, height);\n  };\n  img.src = objURL;\n}\n\n// Convert File to base64 string.\nexport function fileToBase64(file, onSuccess) {\n  const reader = new FileReader();\n  reader.addEventListener('load', function() {\n    onSuccess(file.type, reader.result.split(',')[1], file.name);\n  });\n  reader.readAsDataURL(file);\n}\n\n// Convert Blob to base64 string.\nexport function blobToBase64(blob, onSuccess) {\n  const reader = new FileReader();\n  reader.addEventListener('load', function() {\n    onSuccess(blob.type, reader.result.split(',')[1]);\n  });\n  reader.readAsDataURL(blob);\n}\n\n// File pasted from the clipboard. It's either an inline image or a file attachment.\n// FIXME: handle large files out of band.\nexport function filePasted(event, onImageSuccess, onAttachmentSuccess, onError) {\n  var items = (event.clipboardData || event.originalEvent.clipboardData || {}).items;\n  for (var i in items) {\n    var item = items[i];\n    if (item.kind === 'file') {\n      var file = item.getAsFile();\n      if (!file) {\n        console.error(\"Failed to get file object from pasted file item\", item.kind, item.type);\n        continue;\n      }\n      if (file.type && file.type.split('/')[0] == 'image') {\n        // Handle inline image\n        if (file.size > MAX_INBAND_ATTACHMENT_SIZE || SUPPORTED_IMAGE_FORMATS.indexOf(file.type) < 0) {\n          imageFileScaledToBase64(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, false, onImageSuccess, onError);\n        } else {\n          imageFileToBase64(file, onImageSuccess, onError);\n        }\n      } else {\n        // Handle file attachment\n        fileToBase64(file, onAttachmentSuccess, onError)\n      }\n      // Indicate that the pasted data contains a file.\n      return true;\n    }\n  }\n  // No file found.\n  return false;\n}\n\n// Get mime type from data URL header.\nexport function getMimeType(header) {\n  var mime = /^data:(image\\/[-+a-z0-9.]+);base64/.exec(header);\n  return (mime && mime.length > 1) ? mime[1] : null;\n}\n\n// Given length of a binary object in bytes, calculate the length after\n// base64 encoding.\nexport function base64EncodedLen(n) {\n  return Math.floor((n + 2) / 3) * 4;\n}\n\n// Given length of a base64-encoded object, calculate decoded size of the\n// pbject in bytes.\nexport function base64DecodedLen(n) {\n  return Math.floor(n / 4) * 3;\n}\n\n// Re-encode string to standard base64 encoding with padding.\n// The string may be base64-URL encoded without the padding.\nexport function base64ReEncode(str) {\n  if (str) {\n    str = str.replace(/-/g, '+').replace(/_/g, '/');\n    try {\n      str = btoa(atob(str));\n    } catch(err) {\n      console.error(\"Failed to base64 re-encode string.\", err);\n      str = null;\n    }\n  }\n  return str;\n}\n\n// Convert a base64 encoded string with the provided mime type into a Blob.\nexport function base64ToBlob(str, mime) {\n  if (!str) {\n    return null;\n  }\n\n  try {\n    // Make blob.\n    const bin = atob(str);\n    const length = bin.length;\n    const buf = new ArrayBuffer(length);\n    const arr = new Uint8Array(buf);\n    for (let i = 0; i < length; i++) {\n      arr[i] = bin.charCodeAt(i);\n    }\n\n    return new Blob([buf], { type: mime });\n  } catch(err) {\n    console.log(\"Failed to convert base64 to blob: \", err);\n  }\n\n  return null;\n}\n","// ContactList: component for showing a list of contacts,\n// such as a list of group members in a group chat.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { Drafty } from 'tinode-sdk';\nimport Tinode from 'tinode-sdk';\n\nimport Contact from './contact.jsx';\nimport ContactAction from './contact-action.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nimport { MESSAGE_PREVIEW_LENGTH } from '../config.js';\n\nconst messages = defineMessages({\n  badge_you: {\n    id: 'badge_you',\n    defaultMessage: 'you',\n    description: 'Badge for indicating the current user'\n  },\n  badge_owner: {\n    id: 'badge_owner',\n    defaultMessage: 'owner',\n    description: 'Badge for indicating the owner'\n  }\n});\n\nclass ContactList extends React.Component {\n  render() {\n    const { formatMessage } = this.props.intl;\n    const showCheckmark = Array.isArray(this.props.topicSelected);\n    const contactNodes = [];\n    let contactsCount = 0;\n    if (this.props.contacts && this.props.contacts.length > 0) {\n      this.props.contacts.map((c) => {\n        if (c.action) {\n          // Action item\n          contactNodes.push(\n            <ContactAction\n              title={c.title} action={c.action} values={c.values}\n              key={c.action}\n              onAction={this.props.onAction}\n              />);\n        } else {\n          // Normal contact\n          const key = this.props.showMode ? c.user : (c.topic || c.user);\n          // If filter function is provided, filter out the items\n          // which don't satisfy the condition.\n          if (this.props.filterFunc && this.props.filter) {\n            const filterOn = [key];\n            if (c.private && c.private.comment) {\n              filterOn.push(('' + c.private.comment).toLowerCase());\n            }\n            if (c.public && c.public.fn) {\n              filterOn.push(('' + c.public.fn).toLowerCase());\n            }\n            if (!this.props.filterFunc(this.props.filter, filterOn)) {\n              return;\n            }\n          }\n\n          const isChannel = Tinode.isChannelTopicName(key);\n          const selected = showCheckmark ?\n            (this.props.topicSelected.indexOf(key) > -1) :\n            (this.props.topicSelected === key);\n          const badges = [];\n          if (this.props.showMode) {\n            if (key == this.props.myUserId) {\n              badges.push({name: formatMessage(messages.badge_you), color: 'green'});\n            }\n            if (c.acs && c.acs.isOwner()) {\n              badges.push({name: formatMessage(messages.badge_owner), color: 'blue'});\n            }\n          }\n\n          const comment = Array.isArray(c.private) ?\n            c.private.join(',') : (c.private ? c.private.comment : null);\n          let preview;\n          let deliveryStatus;\n          if (!this.props.showMode && c.latestMessage) {\n            const msg = c.latestMessage(true);\n            if (msg) {\n              deliveryStatus = msg._status || c.msgStatus(msg, true);\n              preview = typeof msg.content == 'string' ?\n                msg.content.substr(0, MESSAGE_PREVIEW_LENGTH) :\n                Drafty.preview(msg.content, MESSAGE_PREVIEW_LENGTH);\n            }\n          }\n          contactNodes.push(\n            <Contact\n              tinode={this.props.tinode}\n              title={c.public ? c.public.fn : null}\n              avatar={makeImageUrl(c.public ? c.public.photo : null)}\n              comment={comment}\n              preview={preview}\n              received={deliveryStatus}\n              unread={this.props.showUnread ? c.unread : 0}\n              now={c.online && this.props.connected}\n              acs={c.acs}\n              showMode={this.props.showMode}\n              badges={badges}\n              showCheckmark={showCheckmark}\n              selected={selected}\n              showOnline={this.props.showOnline && !isChannel}\n              isChannel={isChannel}\n              onSelected={this.props.onTopicSelected}\n              showContextMenu={this.props.showContextMenu}\n              isVerified={c.trusted && c.trusted.verified}\n              isStaff={c.trusted && c.trusted.staff}\n              isDangerous={c.trusted && c.trusted.danger}\n              item={key}\n              index={contactNodes.length}\n              key={key} />\n          );\n          contactsCount ++;\n        }\n      }, this);\n    }\n\n    return (\n      <div className={this.props.noScroll ? null : \"scrollable-panel\"}>\n        {contactsCount == 0 ?\n          <div className=\"center-medium-text\"\n            dangerouslySetInnerHTML={{__html: this.props.emptyListMessage}} />\n          :\n          null\n        }\n        {contactNodes.length > 0 ?\n          <ul className=\"contact-box\">\n            {contactNodes}\n          </ul>\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ContactList);\n","// The X menu to be displayed in title bars.\nimport React from 'react';\n\nexport default class MenuCancel extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n        <i className=\"material-icons\">close</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nimport MenuCancel from './menu-cancel.jsx';\n\nexport default class ErrorPanel extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      show: false,\n    };\n\n    this.hide = this.hide.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.level !== this.props.level) {\n      this.setState({\n        show: !(!this.props.level)\n      });\n    }\n  }\n\n  hide() {\n    this.setState({show: false});\n    if (this.props.onClearError) {\n      this.props.onClearError();\n    }\n  }\n\n  render() {\n    const icons = {err: 'error', warn: 'warning', info: 'info'}\n    const level = icons[this.props.level] || '';\n    const className = 'info-box ' + level;\n    return (\n      <div className={className}>\n        <div className=\"icon\"><i className=\"material-icons\">{level}</i></div>\n        <span>\n          {this.props.text}\n          {this.props.action ?\n            <>\n              &#32;<a href=\"#\"\n                style={{ whiteSpace: 'nowrap' }}\n                onClick={(e) => {e.preventDefault(); this.props.action();}}>\n                {this.props.actionText}\n              </a>\n            </>\n          : null}\n        </span>\n        <div className=\"cancel\"><MenuCancel onCancel={this.hide} /></div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\n\nexport default class Chip extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel(this.props.topic, this.props.index);\n  }\n\n  render() {\n    const title = this.props.title || this.props.topic;\n    const className = this.props.invalid ? 'chip invalid' : 'chip';\n    return (\n      <div className={className}>\n        {this.props.noAvatar ?\n          <span className=\"spacer\" /> :\n          <div className=\"avatar-box\">\n            <LetterTile\n              tinode={this.props.tinode}\n              avatar={this.props.avatar || true}\n              topic={this.props.topic}\n              title={this.props.title} />\n          </div>\n        }\n        <span>{title}</span>\n        {this.props.onCancel && !this.props.required ?\n          <a href=\"#\" onClick={this.handleCancel} >&times;</a>\n          : <span className=\"spacer\" />}\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport Chip from './chip.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n/* BEGIN ChipInput: group membership widget */\nexport default class ChipInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = ChipInput.deriveStateFromProps(props);\n    this.state.input = '';\n    this.state.focused = false;\n\n    this.handleTextInput = this.handleTextInput.bind(this);\n    this.removeChipAt = this.removeChipAt.bind(this);\n    this.handleChipCancel = this.handleChipCancel.bind(this);\n    this.handleFocusGained = this.handleFocusGained.bind(this);\n    this.handleFocusLost = this.handleFocusLost.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  static deriveStateFromProps(props) {\n    return {\n      placeholder: props.chips ? '' : props.prompt,\n      sortedChips: ChipInput.sortChips(props.chips, props.staticMembers),\n      chipIndex: ChipInput.indexChips(props.chips)\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chips != this.props.chips ||\n      prevProps.staticMembers != this.props.staticMembers ||\n      prevProps.prompt != this.props.prompt) {\n      this.setState(ChipInput.deriveStateFromProps(this.props));\n    }\n    if (!prevState || this.props.chips.length > prevState.sortedChips.length) {\n      this.setState({input: ''});\n    }\n  }\n\n  // Map chip index to user name\n  static indexChips(chips) {\n    const index = {};\n    let count = 0;\n    chips.map((item) => {\n      index[item.user] = count;\n      count ++;\n    });\n    return index;\n  }\n\n  // Have non-removable chips appear before all other chips.\n  static sortChips(chips, keep) {\n    const required = [];\n    const normal = [];\n    chips.map((item) => {\n      if (keep && keep.includes(item.user)) {\n        required.push(item);\n      } else {\n        normal.push(item);\n      }\n    });\n    return required.concat(normal);\n  }\n\n  handleTextInput(e) {\n    this.setState({input: e.target.value});\n    if (this.props.filterFunc) {\n      this.props.filterFunc(e.target.value);\n    }\n  }\n\n  removeChipAt(idx) {\n    const removed = this.state.sortedChips[idx];\n    this.props.onChipRemoved(removed.user, this.state.chipIndex[removed.user]);\n  }\n\n  handleChipCancel(item, idx) {\n    this.removeChipAt(idx);\n  }\n\n  handleFocusGained() {\n    this.setState({focused: true});\n  }\n\n  handleFocusLost() {\n    this.setState({focused: false});\n    if (this.props.onFocusLost) {\n      this.props.onFocusLost(this.state.input);\n    }\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Backspace') {\n      if (this.state.input.length == 0 && this.state.sortedChips.length > 0) {\n        const at = this.state.sortedChips.length - 1;\n        if (this.state.sortedChips[at].user !== this.props.staticMembers) {\n          this.removeChipAt(at);\n        }\n      }\n    } else if (e.key === 'Enter') {\n      if (this.props.onEnter) {\n        this.props.onEnter(this.state.input);\n      }\n    } else if (e.key === 'Escape') {\n      if (this.props.onCancel) {\n        this.props.onCancel();\n      }\n    }\n  }\n\n  render() {\n    const chips = [];\n    let count = 0;\n    const staticMembers = this.props.staticMembers || [];\n    this.state.sortedChips.map((item) => {\n      chips.push(\n        <Chip\n          tinode={this.props.tinode}\n          onCancel={this.handleChipCancel}\n          avatar={makeImageUrl(item.public ? item.public.photo : null)}\n          title={item.public ? item.public.fn : undefined}\n          noAvatar={this.props.avatarDisabled}\n          topic={item.user}\n          required={staticMembers.includes(item.user)}\n          invalid={item.invalid}\n          index={count}\n          key={item.user} />\n      );\n      count++;\n    });\n    const className = \"chip-input\" + (this.state.focused ? ' focused' : '');\n    const autoFocus = !(this.props.tabIndex > 0);\n    return (\n      <div className={className}>\n        {chips}\n        <input type=\"text\"\n          placeholder={this.state.placeholder}\n          onChange={this.handleTextInput}\n          onFocus={this.handleFocusGained}\n          onBlur={this.handleFocusLost}\n          onKeyDown={this.handleKeyDown}\n          value={this.state.input}\n          tabIndex={this.props.tabIndex}\n          autoFocus={autoFocus} />\n      </div>\n    );\n  }\n};\n","// GroupMembers: control for managing a list of group members.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\nimport ContactList from './contact-list.jsx';\n\nconst messages = defineMessages({\n  no_contacts: {\n    id: 'no_contacts',\n    defaultMessage: 'You have no contacts :-(',\n    description: 'Shown in ContactsView when the user has no contacts'\n  },\n  contacts_not_found_short: {\n    id: 'contacts_not_found_short',\n    defaultMessage: \"No contacts match ''{query}''\",\n    description: 'Shown in ContactsView when search returned no results'\n  }\n});\n\nclass GroupManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Array of topic members\n      members: props.members,\n      index: GroupManager.indexMembers(props.members),\n      staticMembers: GroupManager.staticMembers(props.members, props.keepInitialMembers, props.requiredMember),\n      contactFilter: '',\n      noContactsMessage: props.intl.formatMessage(messages.no_contacts),\n      selectedContacts: GroupManager.selectedContacts(props.members)\n    };\n\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleMemberRemoved = this.handleMemberRemoved.bind(this);\n    this.handleContactFilter = this.handleContactFilter.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static indexMembers(members) {\n    let index = {};\n    members.map((m) => {\n      index[m.user] = {delta: 0, present: true}; // Delta: 0 unchanged, +1 added, -1 removed\n    });\n    return index;\n  }\n\n  static staticMembers(members, keepInitial, requiredMember) {\n    let stat = [];\n    members.map((m) => {\n      if (keepInitial || m.user == requiredMember) {\n        stat.push(m.user);\n      }\n    });\n    return stat;\n  }\n\n  static selectedContacts(members) {\n    let sel = [];\n    members.map((m) => {\n      sel.push(m.user);\n    });\n    return sel;\n  }\n\n  handleContactSelected(userId, index) {\n    let status = this.state.index[userId];\n    if (status) {\n      if (status.present) {\n        // Prevent duplicate members\n        return;\n      }\n      status.delta += 1;\n      status.present = true;\n    } else {\n      status = {delta: 1, present: true};\n    }\n\n    let m = this.state.members.slice();\n    m.push(this.props.contacts[index]);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleMemberRemoved(userId, index) {\n    const status = this.state.index[userId];\n    if (!status || !status.present) {\n      return;\n    }\n    status.present = false;\n    status.delta -= 1;\n\n    let m = this.state.members.slice();\n    m.splice(index, 1);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleContactFilter(val) {\n    const {formatMessage} = this.props.intl;\n    const msg = !val ?\n      formatMessage(messages.no_contacts) :\n      formatMessage(messages.contacts_not_found_short, {query: val});\n\n    this.setState({contactFilter: val, noContactsMessage: msg});\n  }\n\n  static doContactFiltering(filter, values) {\n    if (filter) {\n      for (let i=0; i<values.length; i++) {\n        if (values[i].indexOf(filter) >= 0) {\n          return true;\n        }\n      }\n      return false;\n    }\n    return true;\n  }\n\n  handleSubmit() {\n    var instance = this;\n    var members = [];\n    var added = [];\n    var removed = [];\n\n    var keys = Object.keys(this.state.index);\n    keys.map(function(k) {\n      if (instance.state.index[k].present) {\n        members.push(k);\n      }\n\n      if (instance.state.index[k].delta > 0) {\n        added.push(k);\n      } else if (instance.state.index[k].delta < 0) {\n        removed.push(k);\n      }\n    });\n    this.props.onSubmit(members, added, removed);\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <div id=\"group-manager\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_group_members\" defaultMessage=\"Group Members\" description=\"Section title\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ChipInput\n            tinode={this.props.tinode}\n            chips={this.state.members}\n            staticMembers={this.state.staticMembers}\n            prompt=\"add members\"\n            filterFunc={this.handleContactFilter}\n            onChipRemoved={this.handleMemberRemoved} />\n        </div>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_all_contacts\" defaultMessage=\"All Contacts\"\n              description=\"Section title [All Contacts]\" />\n          </label>\n        </div>\n        <ContactList\n          tinode={this.props.tinode}\n          contacts={this.props.contacts}\n          myUserId={this.props.myUserId}\n          topicSelected={this.state.selectedContacts}\n          filter={this.state.contactFilter}\n          filterFunc={GroupManager.doContactFiltering}\n          emptyListMessage={this.state.noContactsMessage}\n          showOnline={false}\n          showUnread={false}\n          onTopicSelected={this.handleContactSelected} />\n        <div id=\"group-manager-buttons\" className=\"panel-form-row\">\n          <button className=\"secondary\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(GroupManager);\n","// PermissionsEditor: Component for editing permissions\n// <PermissionsEditor mode=\"JWROD\" skip=\"O\" onChange={this.handleCheckboxTest} />\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport CheckBox from './checkbox.jsx';\nimport Contact from './contact.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n// Translatable permission names.\nconst messages = defineMessages({\n  joiner: {\n    id: 'permission_join',\n    defaultMessage: \"Join ({val})\",\n    description: 'Name of J permission'\n  },\n  reader: {\n    id: 'permission_read',\n    defaultMessage: \"Read ({val})\",\n    description: 'Name of R permission'\n  },\n  writer: {\n    id: 'permission_write',\n    defaultMessage: \"Write ({val})\",\n    description: 'Name of W permission'\n  },\n  preser: {\n    id: 'permission_pres',\n    defaultMessage: \"Get notified ({val})\",\n    description: 'Name of P permission'\n  },\n  approver: {\n    id: 'permission_admin',\n    defaultMessage: \"Approve ({val})\",\n    description: 'Name of A permission'\n  },\n  sharer: {\n    id: 'permission_share',\n    defaultMessage: \"Share ({val})\",\n    description: 'Name of S permission'\n  },\n  deleter: {\n    id: 'permission_delete',\n    defaultMessage: \"Delete ({val})\",\n    description: 'Name of D permission'\n  },\n  owner: {\n    id: 'permission_owner',\n    defaultMessage: \"Owner ({val})\",\n    description: 'Name of O permission'\n  }\n});\n\nclass PermissionsEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mode: (props.mode || '').replace('N', '')\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(val) {\n    let mode = this.state.mode;\n    const idx = mode.indexOf(val);\n    if (idx == -1) {\n      mode += val;\n    } else {\n      mode = mode.replace(val, '');\n    }\n    this.setState({mode: mode});\n  }\n\n  handleSubmit() {\n    // Normalize string, otherwise cannot check if mode has changed.\n    const mode = (this.state.mode || 'N').split('').sort().join('');\n    const before = (this.props.mode || 'N').split('').sort().join('')\n    if (mode !== before) {\n      this.props.onSubmit(mode);\n    } else {\n      this.props.onCancel();\n    }\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const all = 'JRWPASDO';\n    const names = {\n      'J': formatMessage(messages.joiner, {val: 'J'}),\n      'R': formatMessage(messages.reader, {val: 'R'}),\n      'W': formatMessage(messages.writer, {val: 'W'}),\n      'P': formatMessage(messages.preser, {val: 'P'}),\n      'A': formatMessage(messages.approver, {val: 'A'}),\n      'S': formatMessage(messages.sharer, {val: 'S'}),\n      'D': formatMessage(messages.deleter, {val: 'D'}),\n      'O': formatMessage(messages.owner, {val: 'O'})\n    };\n\n    let skip = this.props.skip || '';\n    let mode = this.state.mode;\n    let compare = (this.props.compare || '').replace('N', '');\n    let items = [];\n    for (let i=0; i<all.length; i++) {\n      let c = all.charAt(i);\n      if (skip.indexOf(c) >= 0 && mode.indexOf(c) < 0) {\n        // Permission is marked as inactive: hide unchecked permissions, disable checked permissions\n        continue;\n      }\n      items.push(\n        <tr key={c}>\n          <td>{names[c]}</td>\n          <td className=\"checkbox\">{skip.indexOf(c) < 0 ?\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} onChange={this.handleChange}/>\n            :\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} />\n          }</td>{this.props.compare ? <td className=\"checkbox\">\n            <CheckBox name={c} checked={(compare.indexOf(c) >= 0)}/>\n          </td> : null}\n        </tr>\n      );\n    }\n\n    return (\n      <div className=\"panel-form-column\">\n        {this.props.userTitle ?\n          <ul className=\"contact-box small\"><Contact\n            tinode={this.props.tinode}\n            item={this.props.item}\n            title={this.props.userTitle}\n            small={true}\n            avatar={makeImageUrl(this.props.userAvatar ? this.props.userAvatar : null)} /></ul> : null}\n        <label className=\"small\"><FormattedMessage id=\"title_permissions\"\n          defaultMessage=\"Permissions\" description=\"Section title\"/></label>\n        <table className=\"permission-editor\">\n        {this.props.compare ?\n          <thead><tr>\n            <th></th><th>{this.props.modeTitle}</th>\n            <th>{this.props.compareTitle}</th>\n          </tr></thead> :\n          null}\n        <tbody>\n          {items}\n        </tbody></table>\n        <br />\n        <div className=\"dialog-buttons\">\n          <button className=\"outline\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(PermissionsEditor);\n","// Image zoom and crop widget.\n\nimport React from 'react';\n\nconst DEFAULT_MAX_ZOOM = 2.5;\n\nexport default class Cropper extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Coordinates of the top left corner of the image in container coordinates.\n      panX: 0,\n      panY: 0,\n      // Origin of the zoom in image coordinates.\n      originX: 0,\n      originY: 0,\n      // Zoom scale.\n      zoom: 1,\n      // Zoom min and max.\n      minZoom: 0,\n      maxZoom: DEFAULT_MAX_ZOOM,\n    };\n\n    // References to DOM elements for hooking up events and getting screen dimensions.\n    // The transparent element which captures mouse moves (moves with the image).\n    this.overlay = React.createRef();\n    // The image cutout window or view port (static).\n    this.cutout = React.createRef();\n    // Scaled and translated image preview.\n    this.preview = React.createRef();\n    // The main container (static).\n    this.boundingBox = React.createRef();\n\n    // The original image width and height before any scaling.\n    this.imageWidth = 0;\n    this.imageHeight = 0;\n\n    // Mouse position when dragging.\n    this.mouseX = 0\n    this.mouseY = 0;\n    // Length of the previous mouse move when dragging.\n    this.prevDistance = 0;\n\n    // Bounding rectangles of static elements.\n    this.cutoutRect = {};\n    this.bBoxRect = {};\n    // Center of the bounding box.\n    this.originX = 0;\n    this.originY = 0;\n\n    this.initScaling = this.initScaling.bind(this);\n    this.onZoom = this.onZoom.bind(this);\n    this.handleZoom = this.handleZoom.bind(this);\n    this.mouseDown = this.mouseDown.bind(this);\n    this.mouseUp = this.mouseUp.bind(this);\n    this.mouseMove = this.mouseMove.bind(this);\n    this.mouseTouch = this.mouseTouch.bind(this);\n    this.positionAll = this.positionAll.bind(this);\n    this.translate = this.translate.bind(this);\n  }\n\n  componentDidMount() {\n    this.overlay.current.addEventListener('mousedown', this.mouseDown, { passive: true });\n    this.overlay.current.addEventListener('touchstart', this.mouseDown, { passive: true });\n\n    // The rectangle position is in viewport coordinates.\n    this.bBoxRect = this.boundingBox.current.getBoundingClientRect();\n    // Center of the bounding box in container coordinates.\n    this.originX = this.bBoxRect.width / 2;\n    this.originY = this.bBoxRect.height / 2;\n\n    // The rectangle position is in viewport coordinates.\n    this.cutoutRect = this.cutout.current.getBoundingClientRect();\n  }\n\n  componentWillUnmount() {\n    this.overlay.current.removeEventListener('mousedown', this.mouseDown);\n    this.overlay.current.removeEventListener('touchstart', this.mouseDown);\n  }\n\n  // Position all elements.\n  positionAll(panX, panY, zoom) {\n    // Zoom origin in image preview coordinates.\n    this.setState({\n      panX: panX,\n      panY: panY,\n      zoom: zoom,\n      originX: this.originX - panX,\n      originY: this.originY - panY,\n    });\n\n    // Pass cut out coordinates to caller.\n    const left = (this.originX - panX) * zoom - this.originX;\n    const top = (this.originY - panY) * zoom - this.originY;\n    this.props.onChange(\n      (left + this.cutoutRect.left - this.bBoxRect.left) / zoom,\n      (top + this.cutoutRect.top - this.bBoxRect.top) / zoom,\n      this.cutoutRect.width / zoom,\n      this.cutoutRect.height / zoom,\n      zoom);\n  }\n\n  // Check if new location is within the limits.\n  static checkBound(currPan, img, cutout, delta) {\n    let nextDiff = Math.min(0, cutout[0] - img[0] - delta, img[1] - cutout[1] + delta);\n    if (nextDiff == 0) {\n      // Cutout is completely within the image.\n      currPan += delta;\n    } else if (Math.min(0, cutout[0] - img[0], img[1] - cutout[1]) < nextDiff) {\n      // Cutout is outside of the range but closer to the bound.\n      currPan += delta;\n    }\n    return currPan;\n  }\n\n  initScaling() {\n    // Initialize components.\n    const imgRect = this.preview.current.getBoundingClientRect();\n\n    this.imageWidth = imgRect.width;\n    this.imageHeight = imgRect.height;\n\n    // Set zoom slider's min and max values. Make sure the scaled image cannot be smaller than the cutout.\n    const minZoom = Math.max(this.cutoutRect.width / imgRect.width, this.cutoutRect.height / imgRect.height);\n    this.setState({\n      minZoom: minZoom,\n      maxZoom: Math.max(DEFAULT_MAX_ZOOM, minZoom + 1)\n    });\n\n    // Initial zoom level fills the bounding box at the smallest image dimension and overflows the largest, i.e. \"fill\" not \"fit\".\n    const zoom = Math.max(this.bBoxRect.width / imgRect.width, this.bBoxRect.height / imgRect.height);\n    // Converting from viewport coordinates to container, then panning.\n    const panX = this.cutoutRect.left - this.bBoxRect.left -\n      (imgRect.width - this.cutoutRect.width) / 2;\n    const panY = this.cutoutRect.top - this.bBoxRect.top -\n      (imgRect.height - this.cutoutRect.height) / 2;\n\n    this.positionAll(panX, panY, zoom);\n  }\n\n  onZoom(e) {\n    this.handleZoom(e.target.value);\n  }\n\n  handleZoom(zoom) {\n    let panX = this.state.panX;\n    let panY = this.state.panY;\n\n    // Ensure that the image at the new zoom is not outside of the cutout boundaries.\n    // Calculate image coordinates at the new zoom.\n    const imgLeft = this.originX - (this.originX - panX) * zoom;\n    const imgRight = imgLeft + this.imageWidth * zoom;\n    // Cutout in the same coordinates as the image.\n    const coLeft = this.cutoutRect.left - this.bBoxRect.left;\n    const coRight = coLeft + this.cutoutRect.width;\n    if (coLeft < imgLeft) {\n      panX -= imgLeft - coLeft;\n    } else if (coRight > imgRight) {\n      panX += coRight - imgRight;\n    }\n    const imgTop = this.originY - (this.originY - panY) * zoom;\n    const imgBottom = imgTop + this.imageHeight * zoom;\n    const coTop = this.cutoutRect.top - this.bBoxRect.top;\n    const coBottom = coTop + this.cutoutRect.height;\n    if (coTop < imgTop) {\n      panY -= imgTop - coTop;\n    } else if (coBottom > imgBottom) {\n      panY += coBottom - imgBottom;\n    }\n\n    this.positionAll(panX, panY, zoom);\n  }\n\n  mouseDown(e) {\n    if (e.touches) {\n      this.mouseX = e.touches[0].pageX;\n      this.mouseY = e.touches[0].pageY;\n    } else {\n      this.mouseX = e.pageX;\n      this.mouseY = e.pageY;\n    }\n\n    window.addEventListener('mousemove', this.mouseMove, { passive: false });\n    window.addEventListener('touchmove', this.mouseTouch, { passive: false });\n    window.addEventListener('mouseup', this.mouseUp, { passive: true });\n    window.addEventListener('touchend', this.mouseUp, { passive: true });\n    // Disable text selection in the entire document.\n    document.body.style['userSelect'] = 'none';\n  }\n\n  // Perform image panning.\n  translate(pageX, pageY) {\n    const dX = pageX - this.mouseX;\n    const dY = pageY - this.mouseY;\n\n    this.mouseX = pageX;\n    this.mouseY = pageY;\n\n    // Make sure the image is within the cutout window.\n    const imgRect = this.preview.current.getBoundingClientRect();\n\n    // Check if the new position is within the boundaries, and if not if it's closer to them.\n    let panX = Cropper.checkBound(this.state.panX, [imgRect.left, imgRect.right],\n      [this.cutoutRect.left, this.cutoutRect.right], dX);\n    let panY = Cropper.checkBound(this.state.panY, [imgRect.top, imgRect.bottom],\n      [this.cutoutRect.top, this.cutoutRect.bottom], dY);\n\n    this.positionAll(panX, panY, this.state.zoom);\n  }\n\n  // Image panning.\n  mouseMove(e) {\n    e.preventDefault();\n    this.translate(e.pageX, e.pageY);\n  }\n\n  mouseTouch(e) {\n    e.preventDefault();\n\n    if (e.touches.length == 1) {\n      this.translate(e.touches[0].pageX, e.touches[0].pageY);\n      return;\n    }\n\n    // Image zooming by pinching.\n    const [touch0, touch1] = e.touches;\n    const distance = Math.sqrt((touch0.pageX - touch1.pageX) * (touch0.pageX - touch1.pageX) +\n      (touch0.pageY - touch1.pageY) * (touch0.pageY - touch1.pageY));\n\n    if (!this.prevDistance) {\n        this.prevDistance = distance / this.state.zoom;\n    }\n\n    let scale = (distance / this.prevDistance);\n    this.handleZoom(Math.max(this.minZoom, Math.min(this.maxZoom, scale)));\n  }\n\n  mouseUp(e) {\n    window.removeEventListener('mousemove', this.mouseMove);\n    window.removeEventListener('touchmove', this.mouseTouch);\n    window.removeEventListener('mouseup', this.mouseUp);\n    window.removeEventListener('touchend', this.mouseUp);\n    // Re-enable text selection.\n    document.body.style['userSelect'] = '';\n\n    this.positionAll(this.state.panX, this.state.panY, this.state.zoom);\n  }\n\n  render() {\n    // transform3d: position and scale.\n    const t3d = `translate3d(${this.state.panX}px, ${this.state.panY}px, 0) scale(${this.state.zoom})`;\n    // transformOrigin: zoom origin.\n    const orig = `${this.state.originX}px ${this.state.originY}px`;\n\n    // Overlay position and size are exactly equal to the position and size of the transformed image\n    // except it uses different coordinates.\n    const overlay = {\n      top: `${this.originY - this.state.originY * this.state.zoom}px`,\n      left: `${this.originX - this.state.originX * this.state.zoom}px`,\n      width: `${this.imageWidth * this.state.zoom}px`,\n      height: `${this.imageHeight * this.state.zoom}px`\n    };\n    return (\n      <div className=\"cropper\">\n        <div className=\"bounding-box\" ref={this.boundingBox}>\n          <img src={this.props.source} className=\"preview\" alt=\"\"\n            style={{transform: t3d, transformOrigin: orig}} ref={this.preview} onLoad={this.initScaling} />\n          <div className=\"cutout circle\" ref={this.cutout} />\n          <div className=\"overlay\" style={overlay} ref={this.overlay} />\n        </div>\n        <div className=\"zoom-wrapper\">\n          <input type=\"range\" className=\"zoomer\"\n            step=\"0.001\" min={this.state.minZoom} max={this.state.maxZoom} value={this.state.zoom} onChange={this.onZoom} />\n        </div>\n      </div>\n    );\n  }\n}\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Cropper from './cropper.jsx';\nimport { imageCrop } from '../lib/blob-helpers.js';\n\nexport default class AvatarCrop extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      top: 0,\n      left: 0,\n      width: 0,\n      height: 0,\n      scale: 1\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  // Cut out in image coordinates and desired scale factor.\n  handleChange(left, top, width, height, scale) {\n    this.setState({\n      left: left,\n      top: top,\n      width: width,\n      height: height,\n      scale: scale\n    });\n  }\n\n  handleSubmit() {\n    imageCrop(this.props.mime, this.props.avatar,\n      this.state.left, this.state.top,\n      this.state.width, this.state.height,\n      this.state.scale,\n      (mime, blob, width, height) => {\n        this.props.onSubmit(mime, blob, width, height);\n      },\n      (err) => {\n        this.props.onError(err);\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <Cropper\n            source={this.props.avatar}\n            onChange={this.handleChange} />\n        </div>\n        <div className=\"dialog-buttons\">\n          {this.props.onCancel ?\n            <button className=\"secondary\" onClick={this.props.onCancel}>\n              <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n            </button>\n            : null}\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n","// Password with a visiblity toggle.\nimport React from 'react';\n\nexport default class VisiblePassword extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: this.props.value,\n      visible: false\n    };\n\n    this.handleVisibility = this.handleVisibility.bind(this);\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n    if (this.props.onChange) {\n      this.props.onChange(e);\n    }\n  }\n\n  handleVisibility(e) {\n    e.preventDefault();\n    this.setState({visible: !this.state.visible});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode == 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, visible: false});\n      if (this.props.onFinished) {\n        this.props.onFinished();\n      }\n    } else if (e.keyCode == 13) {\n      // Enter pressed\n      this.handleEditingFinished();\n    }\n  }\n\n  handleEditingFinished(e) {\n    if (e) {\n      let currentTarget = e.currentTarget;\n      setTimeout(() => {\n        if (!currentTarget.contains(document.activeElement)) {\n          if (this.props.onFinished) {\n            this.props.onFinished(this.state.value);\n          }\n        }\n      }, 0);\n    } else if (this.props.onFinished) {\n      this.props.onFinished(this.state.value.trim());\n    }\n  }\n\n  render() {\n    return (\n      <div tabIndex=\"-1\" className=\"group-focus\"\n        onBlur={this.handleEditingFinished}>\n        <input className=\"with-visibility\"\n          type={this.state.visible ? \"text\" : \"password\"}\n          value={this.state.value}\n          placeholder={this.props.placeholder}\n          required={this.props.required ? 'required' : ''}\n          autoFocus={this.props.autoFocus ? 'autoFocus' : ''}\n          autoComplete={this.props.autoComplete}\n          onChange={this.handeTextChange}\n          onKeyDown={this.handleKeyDown} />\n        <span onClick={this.handleVisibility}>\n          <i className=\"material-icons clickable light-gray\">\n            {this.state.visible ? 'visibility' : 'visibility_off'}\n          </i>\n        </span>\n      </div>\n    );\n  }\n}\n","// In-place text editor. Shows text with an icon which toggles it into an input field.\nimport React from 'react';\n\nimport VisiblePassword from './visible-password.jsx';\n\nexport default class InPlaceEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selfRef = React.createRef();\n\n    this.state = {\n      active: props.active,\n      initialValue: props.value || '',\n      value: props.value || ''\n    };\n\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleStartEditing = this.handleStartEditing.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n    this.handlePasswordFinished = this.handlePasswordFinished.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // If text has changed while in read mode, update text and discard changes.\n    // Ignore update if in edit mode.\n    const newValue = this.props.value || '';\n    if (prevState.initialValue != newValue && !prevState.active) {\n      this.setState({\n        initialValue: newValue,\n        value: newValue\n      });\n    }\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value || ''});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, active: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleEditingFinished(e);\n    }\n  }\n\n   handleStartEditing() {\n    if (!this.props.readOnly) {\n      this.setState({active: true}, () => {\n        if (this.selfRef.current) {\n          this.selfRef.current.focus();\n        }\n      });\n    }\n  }\n\n  handleEditingFinished(event) {\n    const value = this.state.value.trim();\n    if (this.props.required && (!event.target.checkValidity() || !value)) {\n      // Empty input\n      this.setState({value: this.props.value, active: false});\n      return;\n    }\n    this.setState({active: false});\n    if ((value || this.props.value) && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  handlePasswordFinished(value) {\n    this.setState({active: false});\n    if (value && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  render() {\n    if (!this.state.active) {\n      let spanText = this.props.type == 'password' ? '••••••••' : this.state.value;\n      let spanClass = 'in-place-edit' + (this.props.readOnly ? ' disabled' : '');\n      if (!spanText) {\n        spanText = this.props.placeholder;\n        spanClass += ' placeholder';\n      }\n      if (!this.props.multiline || this.props.multiline == 1) {\n        spanClass += ' short';\n      }\n\n      return (<span className={spanClass} onClick={this.handleStartEditing}>\n        <span>{spanText}</span>\n      </span>);\n    }\n\n    let element;\n    const attr = {};\n    if (this.props.type == 'password') {\n      element = VisiblePassword;\n      attr.onFinished = this.handlePasswordFinished;\n    } else {\n      if (this.props.multiline > 1) {\n        element = 'textarea';\n        attr.rows = this.props.multiline;\n        attr.className = 'inplace-edit';\n      } else {\n        element = 'input';\n        attr.type = this.props.type || 'text';\n      }\n      attr.value = this.state.value;\n      attr.onChange = this.handeTextChange;\n      attr.onKeyDown = this.handleKeyDown;\n      attr.onBlur = this.handleEditingFinished;\n    }\n    attr.placeholder = this.props.placeholder;\n    attr.required = this.props.required ? 'required' : '';\n    attr.autoComplete = this.props.autoComplete;\n    attr.autoFocus = true;\n    attr.ref = this.selfRef;\n\n    return React.createElement(element, attr, null);\n  }\n};\n","// TagManager: edit topic or user tags.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\n\nimport { MAX_TAG_COUNT, MAX_TAG_LENGTH, MIN_TAG_LENGTH } from '../config.js';\nimport { arrayEqual } from '../lib/utils.js';\n\nexport default class TagManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tags: this.props.tags || [],\n      tagInput: '',\n      activated: this.props.activated\n    };\n\n    this.handleTagInput = this.handleTagInput.bind(this);\n    this.handleAddTag = this.handleAddTag.bind(this);\n    this.handleRemoveTag = this.handleRemoveTag.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const tags = nextProps.tags || [];\n    if (!arrayEqual(tags, prevState.tags) && !prevState.activated) {\n      return {tags: tags};\n    }\n    return null;\n  }\n\n  handleTagInput(text) {\n    this.setState({tagInput: text});\n    if (text.length > 0) {\n      const last = text[text.length-1];\n      if (text[0] == '\"') {\n        // This is a quoted string.\n        if (text.length > 1 && last == '\"') {\n          this.handleAddTag(text.substring(1, text.length-1));\n        }\n      } else if (last == ',' || last == ' ' || last == ';' || last == '\"') {\n        // User entered ',', ' ' or ';'\n        this.handleAddTag(text.substring(0, text.length-1).trim());\n      }\n    }\n  }\n\n  handleAddTag(tag) {\n    const maxTagCount = this.props.tinode.getServerLimit('maxTagCount', MAX_TAG_COUNT);\n\n    if (tag.length > 0 && this.state.tags.length < maxTagCount) {\n      const tags = this.state.tags.slice(0);\n      tags.push(tag);\n\n      this.setState({tags: tags, tagInput: ''});\n      if (this.props.onTagsChanged) {\n        this.props.onTagsChanged(tags);\n      }\n      return tags;\n    }\n    return this.state.tags;\n  }\n\n  handleRemoveTag(tag, index) {\n    const tags = this.state.tags.slice(0);\n    tags.splice(index, 1);\n    this.setState({tags: tags});\n    if (this.props.onTagsChanged) {\n      this.props.onTagsChanged(tags);\n    }\n  }\n\n  handleSubmit() {\n    // Add unprocessed input to tags, submit the list.\n    this.props.onSubmit(this.handleAddTag(this.state.tagInput.trim()));\n    this.setState({activated: false, tags: this.props.tags || []});\n  }\n\n  handleCancel() {\n    this.setState({activated: false, tagInput: '', tags: this.props.tags || []});\n    if (this.props.onCancel) {\n      this.props.onCancel();\n    }\n  }\n\n  render() {\n    const minTagLength = this.props.tinode.getServerLimit('minTagLength', MIN_TAG_LENGTH);\n    const maxTagLength = this.props.tinode.getServerLimit('maxTagLength', MAX_TAG_LENGTH);\n\n    let tags = [];\n    if (this.state.activated) {\n      this.state.tags.map((tag) => {\n        tags.push({user: tag, invalid: (tag.length < minTagLength || tag.length > maxTagLength)});\n      });\n    } else {\n      this.state.tags.map((tag) => {\n        tags.push(<span className=\"badge\" key={tags.length}>{tag}</span>);\n      });\n      if (tags.length == 0) {\n        tags = (\n          <i>\n            <FormattedMessage id=\"tags_not_found\" defaultMessage=\"No tags defined. Add some.\" description=\"\" />\n          </i>\n        );\n      }\n    }\n    return (\n      <div className=\"panel-form-column\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">{this.props.title}</label>\n        </div>\n        {this.state.activated ?\n        <div>\n          <FormattedMessage id=\"tags_editor_no_tags\" defaultMessage=\"Add some tags\"\n            description=\"Tag editor prompt when no tags are found.\">{\n            (add_tags_prompt) => <ChipInput\n              tinode={this.props.tinode}\n              chips={tags}\n              avatarDisabled={true}\n              prompt={add_tags_prompt}\n              tabIndex={this.props.tabIndex}\n              onEnter={this.handleAddTag}\n              onFocusLost={this.handleAddTag}\n              onCancel={this.handleCancel}\n              onChipRemoved={this.handleRemoveTag}\n              filterFunc={this.handleTagInput} />\n          }</FormattedMessage>\n          {this.props.onSubmit || this.props.onCancel ?\n            <div id=\"tag-manager-buttons\" className=\"dialog-buttons panel-form-row\">\n              <button className=\"outline\" onClick={this.handleCancel}>\n                <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n              </button>\n              <button className=\"primary\" onClick={this.handleSubmit}>\n                <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n              </button>\n            </div>\n          : null}\n        </div>\n        :\n        <div className=\"quoted\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.setState({activated: true});}}>\n            <i className=\"material-icons\">edit</i> &nbsp;<FormattedMessage id=\"title_manage_tags\" defaultMessage=\"Manage\"\n              description=\"Section title for the list of tags\" />\n          </a>\n          <>{tags}</>\n        </div>\n      }\n      </div>\n    );\n  }\n};\n","// Widget for editing topic description.\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarCrop from './avatar-crop.jsx';\nimport AvatarUpload from './avatar-upload.jsx';\nimport InPlaceEdit from './in-place-edit.jsx';\nimport TagManager from './tag-manager.jsx';\n\nimport { AVATAR_SIZE, MAX_AVATAR_BYTES, MAX_EXTERN_ATTACHMENT_SIZE,\n  MAX_INBAND_ATTACHMENT_SIZE, MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH } from '../config.js';\nimport { imageScaled, blobToBase64, makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, theCard } from '../lib/utils.js';\n\nexport default class TopicDescEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    const acs = topic.getAccessMode();\n    this.state = {\n      isMe: Tinode.isMeTopicName(this.props.topic),\n      owner: acs && acs.isOwner(),\n      fullName: topic.public ? topic.public.fn : undefined,\n      private: topic.private ? topic.private.comment : null,\n      description: topic.public ? topic.public.note : undefined,\n      avatar: makeImageUrl(topic.public ? topic.public.photo : null),\n      tags: topic.tags() || [],\n      newAvatar: null,\n      newAvatarMime: null\n    };\n\n    this.previousOnTags = null;\n\n    this.tnNewTags = this.tnNewTags.bind(this);\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\n    this.handleImageUpdated = this.handleImageUpdated.bind(this);\n    this.handleAvatarCropped = this.handleAvatarCropped.bind(this);\n    this.handlePrivateUpdate = this.handlePrivateUpdate.bind(this);\n    this.handleDescriptionUpdate = this.handleDescriptionUpdate.bind(this);\n    this.uploadAvatar = this.uploadAvatar.bind(this);\n    this.handleAvatarCropCancel = this.handleAvatarCropCancel.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n  }\n\n  componentDidMount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    this.previousOnTags = topic.onTagsUpdated;\n    topic.onTagsUpdated = this.tnNewTags;\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    topic.onTagsUpdated = this.previousOnTags;\n  }\n\n  tnNewTags(tags) {\n    this.setState({tags: tags});\n  }\n\n  handleFullNameUpdate(fn) {\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\n    if (fn && this.state.fullName !== fn) {\n      this.setState({fullName: fn});\n      this.props.onUpdateTopicDesc(this.props.topic, theCard(fn, null));\n    }\n  }\n\n  handlePrivateUpdate(comment) {\n    comment = comment.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.private !== comment) {\n      this.setState({private: comment});\n      this.props.onUpdateTopicDesc(this.props.topic, null, comment || Tinode.DEL_CHAR);\n    }\n  }\n\n  handleDescriptionUpdate(desc) {\n    desc = desc.trim().substring(0, MAX_TOPIC_DESCRIPTION_LENGTH);\n    if (desc) {\n      this.setState({description: desc});\n      this.props.onUpdateTopicDesc(this.props.topic, theCard(null, null, null, desc));\n    }\n  }\n\n  // AvatarUpload widget has changed the avatar: received a new file or deleted the avatar.\n  handleImageUpdated(mime, img) {\n    // This will show the AvatarCropView is img is not null.\n    this.setState({newAvatar: img, newAvatarMime: mime});\n    if (!img) {\n      // Deleting the avatar.\n      this.setState({avatar: null});\n      this.props.onUpdateTopicDesc(this.props.topic, theCard(null, Tinode.DEL_CHAR));\n    }\n  }\n\n  // AvatarCropView calls this method when the user has cropped the image.\n  handleAvatarCropped(mime, blob, width, height) {\n    const url = blob ? URL.createObjectURL(blob) : null;\n    this.setState({avatar: url, newAvatar: null, newAvatarMime: null});\n    if (blob) {\n      this.uploadAvatar(mime, blob, width, height);\n    }\n  }\n\n  // Utility method for converting cropped avatar blob to bytes for sending inband or\n  // for uploading it to the server out of band.\n  uploadAvatar(mime, blob, width, height) {\n    const readyToUpload = (mime, blob, width, height) => {\n      if (blob.size > MAX_AVATAR_BYTES) {\n        // Too large to send inband - uploading out of band and sending as a link.\n        const uploader = this.props.tinode.getLargeFileHelper();\n\n        this.setState({uploading: true});\n        uploader.upload(blob)\n          .then((url) => {\n            this.props.onUpdateTopicDesc(this.props.topic, theCard(null, url));\n          })\n          .catch((err) => {\n            this.props.onError(err, 'err');\n          })\n          .finally(() => {\n            this.setState({uploading: false});\n          });\n      } else {\n        this.setState({uploading: true});\n        // Convert blob to base64-encoded bits.\n        blobToBase64(blob, (unused, base64bits) => {\n          const du = makeImageUrl({data: base64bits, type: mime});\n          this.setState({source: du});\n          this.props.onUpdateTopicDesc(this.props.topic, theCard(null, du));\n          this.setState({uploading: false});\n        });\n      }\n    };\n\n    if (width > AVATAR_SIZE || height > AVATAR_SIZE || width != height) {\n      // Avatar is not square or too large even after cropping. Shrink it and make square.\n      imageScaled(blob, AVATAR_SIZE, AVATAR_SIZE, MAX_EXTERN_ATTACHMENT_SIZE, true,\n        readyToUpload,\n        (err) => {\n          this.props.onError(err, 'err');\n        });\n    } else {\n      readyToUpload(mime, blob, width, height);\n    }\n  }\n\n  handleAvatarCropCancel(img) {\n    this.setState({newAvatar: null, newAvatarMime: null});\n  }\n\n  handleTagsUpdated(tags) {\n    // Check if tags have actually changed.\n    if (arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      return;\n    }\n    this.props.onUpdateTags(tags);\n  }\n\n  render() {\n    if (this.state.newAvatar) {\n      return (\n        <AvatarCrop\n          avatar={this.state.newAvatar}\n          mime={this.state.newAvatarMime}\n          onSubmit={this.handleAvatarCropped}\n          onCancel={this.handleAvatarCropCancel}\n          onError={this.props.onError} />\n      );\n    }\n\n    const editable = this.state.isMe || this.state.owner;\n\n    return (\n      <>\n      <div className=\"panel-form-column\">\n        <center>\n          <AvatarUpload\n            tinode={this.props.tinode}\n            avatar={this.state.avatar}\n            readOnly={!editable}\n            uid={this.props.topic}\n            title={this.state.fullName}\n            onImageUpdated={this.handleImageUpdated}\n            onError={this.props.onError} />\n        </center>\n        {this.state.isMe ?\n          <div className=\"group\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n              description=\"Label for full name editing\" />\n            </label>\n            <div>\n              <FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n                description=\"Input placeholder for person's full name\">{\n                (full_name_placeholder) => <InPlaceEdit\n                  placeholder={full_name_placeholder}\n                  value={this.state.fullName}\n                  required={true}\n                  onFinished={this.handleFullNameUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n        :\n          <>\n            <div className=\"group\">\n              <div><label className=\"small\">\n                <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                  description=\"Label for editing topic name\" />\n              </label></div>\n              <div>\n                <FormattedMessage id=\"topic_name_editing_placeholder\" defaultMessage=\"Freeform name of the group\"\n                  description=\"Prompt for entering topic name\">{\n                  (group_name_placeholder) => <InPlaceEdit\n                    placeholder={group_name_placeholder}\n                    readOnly={!editable}\n                    value={this.state.fullName}\n                    required={true}\n                    onFinished={this.handleFullNameUpdate} />\n                }</FormattedMessage>\n              </div>\n            </div>\n            <div className=\"group\">\n              <div>\n                <label className=\"small\">\n                  <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                    description=\"Label for editing 'private'\" />\n                </label>\n              </div>\n              <div>\n                <FormattedMessage id=\"private_editing_placeholder\" defaultMessage=\"Visible to you only\"\n                  description=\"Placeholder for editing 'private'\">{\n                  (private_placeholder) => <InPlaceEdit\n                    placeholder={private_placeholder}\n                    value={this.state.private}\n                    onFinished={this.handlePrivateUpdate} />\n                }</FormattedMessage>\n              </div>\n            </div>\n          </>\n        }\n        {editable || this.state.description ?\n          <div className=\"group\">\n            <div><label className=\"small\">\n              <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                description=\"Label for editing topic description\" />\n            </label></div>\n            <div>\n              <FormattedMessage id=\"description_editing_placeholder\"\n                defaultMessage=\"Description (optional)\"\n                description=\"Placeholder for editing topic description\">{\n                (private_placeholder) => <InPlaceEdit\n                  placeholder={private_placeholder}\n                  readOnly={!editable}\n                  value={this.state.description}\n                  multiline={2}\n                  onFinished={this.handleDescriptionUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n          : null\n        }\n      </div>\n      {editable ?\n        <>\n          <div className=\"hr\" />\n          <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (search & discovery)\"\n            description=\"Section title for TagManager\">{\n              (title_tag_manager) => <TagManager\n                tinode={this.props.tinode}\n                title={title_tag_manager}\n                activated={false}\n                tags={this.state.tags}\n                onSubmit={this.handleTagsUpdated} />\n          }</FormattedMessage>\n        </>\n        : null\n      }\n      </>\n    );\n  }\n};\n","// View for editing topic (including 'me' topic) parameters.\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport TopicDescEdit from '../widgets/topic-desc-edit.jsx';\n\nimport { arrayEqual, asEmail, asPhone } from '../lib/utils.js';\n\nexport default class TopicCommon extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    const acs = topic.getAccessMode();\n    this.state = {\n      isMe: this.props.topic == 'me',\n      owner: acs && acs.isOwner(),\n      credentials: (topic.getCredentials ? topic.getCredentials() : null) || [],\n      addCredActive: false,\n      addCredInvalid: false,\n      newCred: '',\n      tags: []\n    };\n\n    this.previousTagsUpdated = undefined;\n\n    this.onTagsUpdated = this.onTagsUpdated.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.tnCredsUpdated = this.tnCredsUpdated.bind(this);\n    this.handleCredChange = this.handleCredChange.bind(this);\n    this.handleCredKeyDown = this.handleCredKeyDown.bind(this);\n    this.handleCredEntered = this.handleCredEntered.bind(this);\n  }\n\n  // No need to separately handle component mount.\n  componentDidUpdate(props) {\n    const topic = this.props.tinode.getTopic(props.topic);\n    if (!topic) {\n      return;\n    }\n\n    topic.onCredsUpdated = this.tnCredsUpdated;\n\n    if (topic.onTagsUpdated != this.onTagsUpdated) {\n      if (topic.getType() == 'grp') {\n        this.previousTagsUpdated = topic.onTagsUpdated;\n        topic.onTagsUpdated = this.onTagsUpdated;\n      } else {\n        this.previousTagsUpdated = undefined;\n      }\n    }\n\n    if (this.state.topic != props.topic) {\n      this.setState({topic: props.topic});\n    }\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    topic.onCredsUpdated = undefined;\n    topic.onTagsUpdated = this.previousTagsUpdated;\n  }\n\n  tnCredsUpdated(creds) {\n    this.setState({credentials: creds || []});\n  }\n\n  handleCredChange(e) {\n    this.setState({newCred: e.target.value, addCredInvalid: false});\n  }\n\n  handleCredKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({newCred: '', addCredActive: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleCredEntered(e);\n    }\n  }\n\n  handleCredEntered(e) {\n    const value = this.state.newCred.trim();\n    if (!value) {\n      this.setState({addCredActive: false, addCredInvalid: false});\n      return;\n    }\n\n    let val = asPhone(value);\n    let method;\n    if (val) {\n      method = 'tel';\n    } else {\n      val = asEmail(value);\n      if (val) {\n        method = 'email';\n      }\n    }\n    if (method) {\n      this.props.onCredAdd(method, val);\n      this.setState({addCredActive: false, newCred: ''});\n    } else {\n      this.setState({addCredInvalid: true});\n    }\n  }\n\n  // Server informs that the tags have been updated.\n  onTagsUpdated(tags) {\n    this.setState({tags: tags});\n\n    if (this.previousTagsUpdated && this.previousTagsUpdated != this.onTagsUpdated) {\n      this.previousTagsUpdated(tags);\n    }\n  }\n\n  // Request server to change tags.\n  handleTagsUpdated(tags) {\n    if (!arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      this.props.onTopicTagsUpdateRequest(this.props.topic, tags);\n    }\n  }\n\n  render() {\n    const credentials = [];\n    if (this.state.isMe) {\n      this.state.credentials.map((cred) => {\n        credentials.push(\n          <div key={cred.meth + \":\" + cred.val + \":\" + cred.done}>{cred.meth}: <tt>{cred.val}</tt>\n            <span> {!cred.done ?\n              <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredConfirm(cred.meth, cred.val);}}>\n                <FormattedMessage id=\"validate_credential_action\" defaultMessage=\"confirm\"\n                  description=\"Validate credentail call to action\" />\n              </a>\n            : null} <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredDelete(cred.meth, cred.val);}}><i\n              className=\"material-icons gray\">delete_outline</i></a></span>\n          </div>\n        );\n      });\n    }\n\n    return (\n      <div className=\"scrollable-panel\">\n        <TopicDescEdit\n          tinode={this.props.tinode}\n          topic={this.props.topic}\n          onUpdateTopicDesc={this.props.onUpdateTopicDesc}\n          onUpdateTags={this.handleTagsUpdated}\n          onError={this.props.onError} />\n        {this.state.isMe ?\n          <>\n            <div className=\"hr\" />\n            <div className=\"panel-form-column\">\n              <label className=\"small\">\n                <FormattedMessage id=\"label_user_contacts\" defaultMessage=\"Contacts:\"\n                description=\"Label for user contacts\" />\n              </label>\n              <div className=\"quoted\">\n                {credentials}\n                {this.state.addCredActive ?\n                  <input type=\"text\" value={this.state.value}\n                    className={this.state.addCredInvalid ? 'invalid' : null}\n                    placeholder=\"Phone number or email\" required=\"required\" autoFocus\n                    onChange={this.handleCredChange} onKeyDown={this.handleCredKeyDown} onBlur={this.handleCredEntered} />\n                  : null}\n                <div>\n                  <a href=\"#\" onClick={(e) => {e.preventDefault(); this.setState({addCredActive: true});}}>\n                    <i className=\"material-icons\">add</i>\n                    <FormattedMessage id=\"button_add_another\" defaultMessage=\"Add another\" description=\"Call to action [+ add another]\" />\n                  </a></div>\n              </div>\n            </div>\n          </>\n        : null\n      }\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport InPlaceEdit from './in-place-edit.jsx';\n\nimport { NO_ACCESS_MODE } from '../config.js';\n\nconst messages = defineMessages({\n  clear_messages: {\n    id: 'action_clear_messages',\n    defaultMessage: 'Clear Messages',\n    description: 'Flat button [Clear Messages] (soft-delete messages)'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n  delete_messages: {\n    id: 'action_delete_messages',\n    defaultMessage: 'Clear Messages for All',\n    description: 'Flat button [Clear for All] (hard-delete all messages)'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  topic_delete: {\n    id: 'topic_delete',\n    defaultMessage: 'Delete Conversation',\n    description: 'Alert title when deleting the topic.'\n  },\n  topic_delete_warning: {\n    id: 'topic_delete_warning',\n    defaultMessage: 'Are you sure you want to delete this conversation? It cannot be undone.',\n    description: 'Alert warning when deleting entire topic'\n  },\n  leave_chat: {\n    id: 'action_leave_chat',\n    defaultMessage: 'Leave Conversation',\n    description: 'Flat button [Leave Conversation]'\n  },\n  leave_chat_warning: {\n    id: 'leave_chat_warning',\n    defaultMessage: 'Are you sure you want to leave this conversation?',\n    description: 'Alert dialog warning when unsubscribing from a chat.'\n  },\n  block_contact: {\n    id: 'action_block_contact',\n    defaultMessage: \"Block Contact\",\n    description: \"Flat button [Block Contact]\"\n  },\n  block_contact_warning: {\n    id: 'block_contact_warning',\n    defaultMessage: 'Are you sure you want to block this contact?',\n    description: 'Alert dialog warning when blocking a contact.'\n  },\n  report_chat: {\n    id: 'action_report_chat',\n    defaultMessage: 'Report Conversation',\n    description: 'Flat button [Report Group]'\n  },\n  report_chat_warning: {\n    id: 'report_chat_warning',\n    defaultMessage: 'Are you sure you want to block and report this conversation?',\n    description: 'Alert dialog warning when reporting a conversation for abuse'\n  },\n  other_user: {\n    id: 'label_other_user',\n    defaultMessage: 'Other',\n    description: 'Label for the other user when the user is unnamed'\n  },\n});\n\nclass TopicSecurity extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleDeleteTopic = this.handleDeleteTopic.bind(this);\n    this.handleDeleteMessages = this.handleDeleteMessages.bind(this);\n    this.handleLeave = this.handleLeave.bind(this);\n    this.handleBlock = this.handleBlock.bind(this);\n    this.handleReport = this.handleReport.bind(this);\n  }\n\n  handleDeleteTopic(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.topic_delete), // title\n      formatMessage(messages.topic_delete_warning), // content\n      (() => { this.props.onDeleteTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleDeleteMessages(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(this.props.deleter ? messages.delete_messages : messages.clear_messages), // title\n      formatMessage(this.props.deleter ? messages.delete_messages_warning : messages.clear_messages_warning), // content\n      (() => { this.props.onDeleteMessages(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleLeave(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.leave_chat), // title\n      formatMessage(messages.leave_chat_warning), // content\n      (() => { this.props.onLeaveTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleBlock(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.block_contact), // title\n      formatMessage(messages.block_contact_warning), // content\n      (() => { this.props.onBlockTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleReport(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.report_chat), // title\n      formatMessage(messages.report_chat_warning), // content\n      (() => { this.props.onReportTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          {!this.props.channel ?\n            <a href=\"#\" className=\"flat-button\" onClick={this.handleDeleteMessages}>\n              <i className=\"material-icons\">delete_outline</i> &nbsp;{\n                formatMessage(this.props.deleter ? messages.delete_messages : messages.clear_messages)\n              }\n            </a>\n            :\n            null\n          }\n          {this.props.owner ?\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleDeleteTopic}>\n              <i className=\"material-icons\">delete</i> &nbsp;{formatMessage(messages.topic_delete)}\n            </a>\n            :\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleLeave}>\n              <i className=\"material-icons\">exit_to_app</i> &nbsp;{formatMessage(messages.leave_chat)}\n            </a>\n          }\n          {!this.props.groupTopic ?\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleBlock}>\n              <i className=\"material-icons\">block</i> &nbsp;{formatMessage(messages.block_contact)}\n            </a>\n            :\n            null\n          }\n          {!this.props.owner ?\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleReport}>\n              <i className=\"material-icons\">report</i> &nbsp;{formatMessage(messages.report_chat)}\n            </a>\n            :\n            null\n          }\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          {this.props.groupTopic ?\n            <>\n              <div className=\"group\">\n                <label>\n                  <FormattedMessage id=\"label_your_permissions\" defaultMessage=\"Your permissions:\"\n                    description=\"Label for current user permissions\" />\n                </label> <tt className=\"clickable\"\n                  onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('want')}}>\n                  {this.props.access}\n                </tt>\n              </div>\n              <div className=\"group\">\n                <div>\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_default_access_mode\" defaultMessage=\"Default access mode:\"\n                    description=\"Label for default access mode\" />\n                  </label>\n                </div>\n                <div className=\"quoted\">\n                  <div>Auth: <tt className=\"clickable\"\n                    onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('auth')}}>{this.props.auth}</tt>\n                  </div>\n                  <div>Anon: <tt className=\"clickable\"\n                    onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('anon')}}>{this.props.anon}</tt>\n                  </div>\n                </div>\n              </div>\n            </>\n            :\n            <div className=\"group\">\n              <div>\n                <label className=\"small\">\n                  <FormattedMessage id=\"label_permissions\" defaultMessage=\"Permissions:\"\n                    description=\"Section title\" />\n                </label>\n              </div>\n              <div className=\"quoted\">\n                <div>\n                  <FormattedMessage id=\"label_you\" defaultMessage=\"You:\"\n                    description=\"Label for the current user\" /> <tt className=\"clickable\"\n                    onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('want')}}>\n                    {this.props.access}\n                  </tt>\n                </div>\n                <div>{this.props.fullName ? this.props.fullName : formatMessage(messages.other_user)}:\n                  &nbsp;<tt className=\"clickable\"\n                    onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('given')}}>\n                    {this.props.modeGiven2}\n                  </tt>\n                </div>\n              </div>\n            </div>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(TopicSecurity);\n","// InfoView: panel with topic/user info.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport BadgeList from '../widgets/badge-list.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport ContactList from '../widgets/contact-list.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupManager from '../widgets/group-manager.jsx';\nimport MenuCancel from '../widgets/menu-cancel.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\nimport TopicCommon from '../widgets/topic-common.jsx';\nimport TopicSecurity from '../widgets/topic-security.jsx';\n\nimport { MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH, NO_ACCESS_MODE } from '../config.js';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, theCard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  info: {\n    id: 'panel_title_info',\n    description: 'Title for InfoView',\n    defaultMessage: 'Info'\n  },\n  general: {\n    id: 'panel_title_general',\n    description: 'Title for TopicCommon.',\n    defaultMessage: 'General'\n  },\n  security: {\n    id: 'panel_title_security',\n    description: 'Title for TopicSecirity and AccSecurity.',\n    defaultMessage: 'Security'\n  },\n  members: {\n    id: 'panel_title_members',\n    description: 'Title for managing group members view.',\n    defaultMessage: 'Members'\n  },\n  crop: {\n    id: 'panel_title_crop',\n    description: 'Title for AvatarCropView.',\n    defaultMessage: 'Drag to Adjust'\n  },\n  perm_want: {\n    id: 'requested_permissions',\n    defaultMessage: 'Requested',\n    description: 'Title for permissions'\n  },\n  perm_given: {\n    id: 'granted_permissions',\n    defaultMessage: 'Granted',\n    description: 'Title for permissions'\n  },\n  perm_auth: {\n    id: 'permissions_authenticated',\n    defaultMessage: 'Authenticated',\n    description: 'Title for editing default authenticated permissions'\n  },\n  perm_anon: {\n    id: 'permissions_anonymous',\n    defaultMessage: 'Anonymous',\n    description: 'Title for editing default anonymous permissions'\n  },\n  perm_user: {\n    id: 'permissions_user',\n    defaultMessage: 'User\\'s Permissions',\n    description: 'Title for editing user\\'s permissions'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n});\n\nfunction _clip(str, length) {\n  return str && str.substring(0, length);\n}\n\nclass InfoView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      topic: null,\n      owner: false,\n      admin: false,\n      sharer: false,\n      deleter: false,\n      muted: false,\n      address: null,\n      groupTopic: undefined,\n      channel: undefined,\n      fullName: undefined,\n      description: undefined,\n      avatar: null,\n      private: null,\n      selectedContact: null,\n      access: null,\n      modeGiven: null,\n      modeWant: null,\n      modeGiven2: null, // P2P topic, the other user mode given\n      modeWant2: null,  // P2P topic, the other user mode want\n      auth: null,\n      anon: null,\n      contactList: [],\n      trustedBadges: [],\n      previousMetaDesc: undefined,\n      previousSubsUpdated: undefined,\n    };\n\n    this.resetSubs = this.resetSubs.bind(this);\n    this.resetDesc = this.resetDesc.bind(this);\n    this.resetTags = this.resetTags.bind(this);\n    this.onMetaDesc = this.onMetaDesc.bind(this);\n    this.onSubsUpdated = this.onSubsUpdated.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleMuted = this.handleMuted.bind(this);\n    this.handleUnarchive = this.handleUnarchive.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleShowAddMembers = this.handleShowAddMembers.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleMemberSelected = this.handleMemberSelected.bind(this);\n    this.handleContextMenu = this.handleContextMenu.bind(this);\n    this.handleBackNavigate = this.handleBackNavigate.bind(this);\n  }\n\n  // No need to separately handle component mount.\n  componentDidUpdate(props) {\n    const topic = this.props.tinode.getTopic(props.topic);\n    if (!topic) {\n      return;\n    }\n\n    if (this.onMetaDesc != topic.onMetaDesc) {\n      this.previousMetaDesc = topic.onMetaDesc;\n      topic.onMetaDesc = this.onMetaDesc;\n\n      this.previousSubsUpdated = topic.onSubsUpdated;\n      topic.onSubsUpdated = this.onSubsUpdated;\n    }\n\n    if (this.state.topic != props.topic) {\n      this.setState({topic: props.topic});\n      this.resetDesc(topic, props);\n      this.resetSubs(topic, props);\n      this.resetTags(topic);\n    }\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.setState({topic: null});\n    topic.onMetaDesc = this.previousMetaDesc;\n    topic.onSubsUpdated = this.previousSubsUpdated;\n  }\n\n  resetSubs(topic, props) {\n    const newState = {contactList: []};\n    if (topic.getType() == 'p2p') {\n      // Fetch the other party in the p2p conversation.\n      // Topic may not be ready yet, so check if user is found.\n      const user2 = topic.subscriber(props.topic);\n      if (user2) {\n        newState.modeGiven2 = user2.acs.getGiven();\n        newState.modeWant2 = user2.acs.getWant();\n      } else {\n        newState.modeGiven2 = NO_ACCESS_MODE;\n        newState.modeWant2 = NO_ACCESS_MODE;\n      }\n    } else {\n      topic.subscribers((sub) => {\n        newState.contactList.push(sub);\n      }, this);\n    }\n\n    this.setState(newState);\n  }\n\n  resetDesc(topic, props) {\n    const defacs = topic.getDefaultAccess() || {};\n    const acs = topic.getAccessMode();\n\n    const badges = [];\n    if (topic.trusted) {\n      for (const [key, val] of Object.entries(topic.trusted)) {\n        if (val) {\n          badges.push(key);\n        }\n      }\n    }\n\n    this.setState({\n      owner: acs && acs.isOwner(),\n      admin: acs && acs.isAdmin(),\n      sharer: acs && acs.isSharer(),\n      deleter: acs && acs.isDeleter(),\n      muted: acs && acs.isMuted(),\n\n      fullName: _clip(topic.public ? topic.public.fn : undefined, MAX_TITLE_LENGTH),\n      description: _clip(topic.public ? topic.public.note : undefined, MAX_TOPIC_DESCRIPTION_LENGTH),\n      avatar: makeImageUrl(topic.public ? topic.public.photo : null),\n      trustedBadges: badges,\n      private: _clip(topic.private ? topic.private.comment : null, MAX_TITLE_LENGTH),\n      archived: topic.isArchived(),\n      address: topic.name,\n      groupTopic: topic.isGroupType(),\n      channel: topic.isChannelType() || topic.chan,\n      access: acs ? acs.getMode() : undefined,\n      modeGiven: acs ? acs.getGiven() : undefined,\n      modeWant: acs ? acs.getWant() : undefined,\n      auth: defacs.auth,\n      anon: defacs.anon\n    });\n  }\n\n  resetTags(topic) {\n    if (topic.getType() != 'grp') {\n      return;\n    }\n\n    const acs = topic.getAccessMode();\n    if (acs && acs.isOwner()) {\n      // Requesting tags: owner is editing the topic.\n      topic.getMeta(topic.startMetaQuery().withTags().build());\n    }\n  }\n\n  onMetaDesc(desc) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetDesc(topic, this.props);\n\n    if (this.previousMetaDesc && this.previousMetaDesc != this.onMetaDesc) {\n      this.previousMetaDesc(desc);\n    }\n  }\n\n  onSubsUpdated(subs) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetSubs(topic, this.props);\n\n    if (this.previousSubsUpdated && this.previousSubsUpdated != this.onSubsUpdated) {\n      this.previousSubsUpdated(subs);\n    }\n  }\n\n  handleImageChanged(img) {\n    this.setState({avatar: img});\n    this.props.onTopicDescUpdate(this.props.topic, theCard(null, img || Tinode.DEL_CHAR), null);\n  }\n\n  handleMuted(ignored, checked) {\n    this.setState({muted: checked});\n    this.props.onChangePermissions(this.props.topic, checked ? '-P' : '+P');\n  }\n\n  handleUnarchive(ignored, ignored2) {\n    this.props.onTopicUnArchive(this.props.topic);\n  }\n\n  handlePermissionsChanged(which, perm) {\n    switch (which) {\n      case 'auth':\n        this.props.onTopicDescUpdateRequest(this.props.topic, null, null, {auth: perm});\n        break;\n      case 'anon':\n        this.props.onTopicDescUpdateRequest(this.props.topic, null, null, {anon: perm});\n        break;\n      case 'mode':\n      case 'want':\n        this.props.onChangePermissions(this.props.topic, perm);\n        break;\n      case 'given':\n        this.props.onChangePermissions(this.props.topic, perm, this.props.topic);\n        break;\n      case 'user':\n        this.props.onChangePermissions(this.props.topic, perm, this.state.userPermissionsEdited);\n        break;\n    }\n\n    this.handleBackNavigate();\n  }\n\n  handleLaunchPermissionsEditor(which, uid) {\n    const {formatMessage} = this.props.intl;\n    let toEdit, toCompare, toSkip, titleEdit, titleCompare, userTitle, userAvatar;\n    switch (which) {\n      case 'mode':\n        toEdit = this.state.access;\n        break;\n      case 'want':\n        toEdit = this.state.modeWant;\n        toCompare = this.state.modeGiven;\n        if (this.state.owner) {\n          // Don't allow owner to unset 'O' permission. All other permissions are OK.\n          toSkip = 'O';\n        } else {\n          // Allow accepting any of 'ASDO' permissions but don't allow asking for them.\n          toSkip = Tinode.AccessMode.encode(Tinode.AccessMode.diff('ASDO', this.state.modeGiven));\n          if (this.state.channel) {\n            // Channels are read-only.\n            toSkip += 'W';\n          }\n        }\n        titleEdit = formatMessage(messages.perm_want);\n        titleCompare = formatMessage(messages.perm_given);\n        break;\n      case 'given':\n        toEdit = this.state.modeGiven2;\n        toCompare = this.state.modeWant2;\n        toSkip = this.state.groupTopic ? (this.state.owner ? '' : 'O') : 'ASDO';\n        titleEdit = formatMessage(messages.perm_given);\n        titleCompare = formatMessage(messages.perm_want);\n        break;\n      case 'auth':\n        toEdit = this.state.auth;\n        toSkip = 'O';\n        break;\n      case 'anon':\n        toEdit = this.state.anon;\n        toSkip = 'O';\n        break;\n      case 'user': {\n        const topic = this.props.tinode.getTopic(this.props.topic);\n        if (!topic) {\n          return;\n        }\n        const user = topic.subscriber(uid);\n        if (!user || !user.acs) {\n          return;\n        }\n        toEdit = user.acs.getGiven();\n        toCompare = user.acs.getWant();\n        toSkip = this.state.owner ? '' : 'O';\n        titleEdit = formatMessage(messages.perm_given);\n        titleCompare = formatMessage(messages.perm_want);\n        if (user.public) {\n          userTitle = user.public.fn;\n          userAvatar = user.public.photo;\n        }\n        break;\n      }\n      default:\n        console.error(\"Unknown permission editing mode '\" + which + \"'\");\n        return;\n    }\n    this.setState({\n      userPermissionsEdited: uid,\n      userPermissionsTitle: userTitle,\n      userPermissionsAvatar: userAvatar,\n      editedPermissions: toEdit,\n      immutablePermissions: toCompare,\n      editedPermissionsTitle: titleEdit,\n      immutablePermissionsTitle: titleCompare,\n      editedPermissionsSkipped: toSkip,\n    });\n    this.props.onNavigate(`perm/${which}`);\n  }\n\n  handleShowAddMembers(e) {\n    e.preventDefault();\n    this.props.onInitFind();\n    this.props.onNavigate('members');\n  }\n\n  handleMemberUpdateRequest(members, added, removed) {\n    this.props.onMemberUpdateRequest(this.props.topic, added, removed);\n    this.props.onNavigate('info');\n  }\n\n  handleMemberSelected(uid) {\n    this.setState({selectedContact: uid});\n  }\n\n  handleBackNavigate() {\n    const args = (this.props.panel || 'info').split('/');\n    if (args[0] == 'info') {\n      this.props.onNavigate(null);\n    } else if (args[0] == 'perm') {\n      if (args[1] == 'user') {\n        this.props.onNavigate('info');\n      } else {\n        this.props.onNavigate('security');\n      }\n    } else {\n      this.props.onNavigate('info');\n    }\n  }\n\n  handleContextMenu(params) {\n    const {formatMessage} = this.props.intl;\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    const user = topic.subscriber(params.topicName);\n    if (!user || !user.acs) {\n      return;\n    }\n\n    const isMe = this.props.tinode.isMe(params.topicName);\n    const menuItems = [\n      {title: formatMessage(messages.edit_permissions), handler: () => {\n        this.handleLaunchPermissionsEditor(isMe ? 'want' : 'user', params.topicName);\n      }}\n    ];\n    if (!isMe) {\n      menuItems.push('member_delete');\n    }\n    menuItems.push(user.acs.isMuted() ? 'member_unmute' : 'member_mute');\n    if (!isMe) {\n      menuItems.push(user.acs.isJoiner() ? 'member_block' : 'member_unblock');\n    }\n    this.props.showContextMenu({\n      topicName: this.props.topic,\n      x: params.x,\n      y: params.y,\n      user: params.topicName}, menuItems);\n  }\n\n  render() {\n    const args = (this.props.panel || 'info').split('/');\n    const view = args[0];\n    args.shift();\n\n    const {formatMessage} = this.props.intl;\n    const panelTitle = formatMessage((view == 'perm' ? messages['perm_' + args[0]] : messages[view])\n      || messages['info']);\n\n    return (\n      <div id=\"info-view\">\n        <div className=\"caption-panel\" id=\"info-caption-panel\">\n          <div className=\"panel-title\" id=\"info-title\">{panelTitle}</div>\n          <div>\n            <MenuCancel onCancel={this.handleBackNavigate} />\n          </div>\n        </div>\n        {this.props.displayMobile ?\n          <ErrorPanel\n            level={this.props.errorLevel}\n            text={this.props.errorText}\n            onClearError={this.props.onError} /> : null}\n        {view == 'members' ?\n          <GroupManager\n            tinode={this.props.tinode}\n            members={this.state.contactList}\n            requiredMember={this.props.myUserId}\n            keepInitialMembers={!this.state.admin && !this.state.owner}\n            myUserId={this.props.myUserId}\n            contacts={this.props.searchableContacts}\n            onCancel={this.handleBackNavigate}\n            onSubmit={this.handleMemberUpdateRequest} />\n          :\n        view == 'perm' && args.length > 0 ?\n          <PermissionsEditor\n            tinode={this.props.tinode}\n            mode={this.state.editedPermissions}\n            compare={this.state.immutablePermissions}\n            skip={this.state.editedPermissionsSkipped}\n            modeTitle={this.state.editedPermissionsTitle}\n            compareTitle={this.state.immutablePermissionsTitle}\n            userTitle={this.state.userPermissionsTitle}\n            item={this.state.userPermissionsEdited}\n            userAvatar={this.state.userPermissionsAvatar}\n            onSubmit={(mode) => this.handlePermissionsChanged(args[0], mode)}\n            onCancel={this.handleBackNavigate} />\n          :\n        view == 'general' ?\n          <TopicCommon\n            tinode={this.props.tinode}\n            topic={this.props.topic}\n            onCredAdd={this.props.onCredAdd}\n            onTopicTagsUpdateRequest={this.props.onTopicTagsUpdateRequest}\n            onCredConfirm={this.props.onCredConfirm}\n            onCredDelete={this.props.onCredDelete}\n            onUpdateTopicDesc={this.props.onTopicDescUpdateRequest}\n            onError={this.props.onError} />\n          :\n        view == 'security' ?\n          <TopicSecurity\n            topic={this.props.topic}\n            owner={this.state.owner}\n            admin={this.state.admin}\n            sharer={this.state.sharer}\n            deleter={this.state.deleter}\n            muted={this.state.muted}\n\n            groupTopic={this.state.groupTopic}\n            channel={this.state.channel}\n            access={this.state.access}\n            modeGiven={this.state.modeGiven}\n            modeWant={this.state.modeWant}\n            modeGiven2={this.state.modeGiven2}\n            modeWant2={this.state.modeWant2}\n            auth={this.state.auth}\n            anon={this.state.anon}\n\n            onShowAlert={this.props.onShowAlert}\n            onDeleteMessages={this.props.onDeleteMessages}\n            onLeaveTopic={this.props.onLeaveTopic}\n            onBlockTopic={this.props.onBlockTopic}\n            onReportTopic={this.props.onReportTopic}\n            onLaunchPermissionsEditor={this.handleLaunchPermissionsEditor}\n            onNavigate={this.props.onNavigate} />\n          :\n          <div id=\"info-view-content\" className=\"scrollable-panel\">\n            <div className=\"panel-form-column\">\n              <a href=\"#\" className=\"flat-button float-right\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('general');}}>\n                <i className=\"material-icons\">edit</i>&nbsp;\n                <FormattedMessage id=\"button_edit\" defaultMessage=\"Edit\" description=\"Call to action [Edit]\" />\n              </a>\n              <center>\n                <AvatarUpload\n                  tinode={this.props.tinode}\n                  avatar={this.state.avatar}\n                  readOnly={true}\n                  uid={this.props.topic}\n                  title={this.state.fullName} />\n              </center>\n              <div className=\"group\">\n                <div><label className=\"small\">\n                  <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                    description=\"Label for editing topic name\" />\n                </label></div>\n                <div className=\"large ellipsized\">{this.state.fullName}\n                {this.state.channel ? <img src=\"/img/channel.png\" className=\"channel\" alt=\"channel\" /> : null}</div>\n              </div>\n              {this.state.private ?\n                <div className=\"group\">\n                  <div><label className=\"small\">\n                    <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                      description=\"Label for editing 'private'\" />\n                  </label></div>\n                  <div className=\"large ellipsized\">{this.state.private}</div>\n                </div>\n                : null\n              }\n              <div className=\"group\">\n                <label className=\"small\"><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n                  description=\"Label for user address (ID)\" /></label>&nbsp;\n                <tt>{this.state.address}</tt>\n              </div>\n              <div className=\"group\">\n                <BadgeList trustedBadges={this.state.trustedBadges} />\n              </div>\n              {this.state.description ?\n                <div className=\"group\">\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                      description=\"Label for editing topic description\" />\n                  </label>\n                  <div>{this.state.description}</div>\n                </div> : null}\n            </div>\n            <div className=\"hr\" />\n            <div className=\"panel-form-row\">\n              <label>\n                <FormattedMessage id=\"label_muting_topic\" defaultMessage=\"Muted:\"\n                  description=\"Label for Muting/unmuting the topic\" />\n              </label>\n              <CheckBox name=\"P\" checked={this.state.muted} onChange={this.handleMuted} />\n            </div>\n            {this.state.archived ?\n              <div className=\"panel-form-row\">\n                <label>\n                  <FormattedMessage id=\"label_unarchive_topic\" defaultMessage=\"Archived:\"\n                    description=\"Label for unarchiving the topic\" />\n                </label>\n                <CheckBox name=\"archived\" checked={true} onChange={this.handleUnarchive} />\n              </div>\n              :\n              null\n            }\n            <div className=\"hr\" />\n            <div className=\"panel-form-row\">\n              <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('security');}}>\n                <i className=\"material-icons\">security</i>&nbsp;<FormattedMessage id=\"button_security\"\n                  defaultMessage=\"Security\" description=\"Navigaton button for security panel.\" />\n              </a>\n            </div>\n            {this.state.groupTopic && this.state.sharer ?\n              <>\n                <div className=\"hr\" />\n                <div className=\"panel-form-row\">\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_group_members\" defaultMessage=\"Group members:\"\n                      description=\"Section title or label\" />\n                  </label>\n                </div>\n                <div className=\"panel-form-row\">\n                  <a href=\"#\" className=\"flat-button\" onClick={this.handleShowAddMembers}>\n                    <i className=\"material-icons\">person_add</i> &nbsp;<FormattedMessage id=\"button_add_members\"\n                      defaultMessage=\"Add members\" description=\"Flat button [Add members] (to topic)\" />\n                  </a>\n                </div>\n                <FormattedMessage id=\"group_has_no_members\" defaultMessage=\"No members\"\n                  description=\"Shown in place of group members\">{\n                  (no_members) => <ContactList\n                    tinode={this.props.tinode}\n                    contacts={this.state.contactList}\n                    myUserId={this.props.myUserId}\n                    emptyListMessage={no_members}\n                    topicSelected={this.state.selectedContact}\n                    showOnline={false}\n                    showUnread={false}\n                    showMode={true}\n                    noScroll={true}\n                    onTopicSelected={this.handleMemberSelected}\n                    showContextMenu={this.state.admin ? this.handleContextMenu : false}\n                  />\n                }</FormattedMessage>\n              </>\n              :\n              null\n            }\n          </div>\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(InfoView);\n","// File uload/download progress indicator with a cancel inside.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class FileProgress extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"uploader\">\n        <div><span style={{width: (this.props.progress * 100) + \"%\"}}></span></div>\n        {this.props.progress < 0.999 ?\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n            <i className=\"material-icons\">close</i> <FormattedMessage id=\"action_cancel\"\n              defaultMessage=\"cancel\" description=\"Call to action [cancel]\" />\n          </a>\n          :\n          <FormattedMessage id=\"upload_finishing\" defaultMessage=\"finishing...\"\n            description=\"Notification that upload is finishing\" />\n        }\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\nimport { bytesToHumanSize } from '../lib/strformat.js';\nimport { isUrlRelative, sanitizeUrl } from '../lib/utils.js';\n\nexport default class Attachment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      downloader: null,\n      progress: 0\n    };\n\n    this.downloadFile = this.downloadFile.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  downloadFile(url, filename, mimetype) {\n    if (!url) {\n      this.props.onError(\"Invalid download URL '\" + url + \"'\");\n      return;\n    }\n\n    const downloader = this.props.tinode.getLargeFileHelper();\n    this.setState({downloader: downloader});\n    downloader.download(url, filename, mimetype,\n      (loaded) => {\n        this.setState({progress: loaded / this.props.size});\n      },\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    ).then(() => {\n      this.setState({downloader: null, progress: 0});\n    }).catch((err) => {\n      if (err) {\n        this.props.onError(\"Error downloading file: \" + err.message, 'err');\n      }\n      this.setState({downloader: null, progress: 0});\n    });\n  }\n\n  handleCancel() {\n    if (this.props.uploading) {\n      this.props.onCancelUpload();\n    } else if (this.state.downloader) {\n      this.state.downloader.cancel();\n    }\n  }\n\n  render() {\n    let filename = this.props.filename || 'file_attachment';\n    if (filename.length > 36) {\n      filename = filename.substr(0, 16) + '...' + filename.substr(-16);\n    }\n    let size = this.props.size > 0 ?\n      <span className=\"small gray\">({bytesToHumanSize(this.props.size)})</span> :\n      null;\n\n    // Detect if the download URL is relative or absolute.\n    // If the URL is relative use LargeFileHelper to attach authentication\n    // credentials to the request.\n    let url, helperFunc;\n    if (!this.props.uploading && !this.state.downloader && isUrlRelative(this.props.downloadUrl)) {\n      // Relative URL. Use download helper.\n      url = '#';\n      helperFunc = (e) => {\n        e.preventDefault();\n        this.downloadFile(this.props.downloadUrl, this.props.filename, this.props.mimetype);\n      };\n    } else {\n      url = sanitizeUrl(this.props.downloadUrl);\n      helperFunc = null;\n    }\n    const downloadWidget = <><i className=\"material-icons\">file_download</i> <FormattedMessage id=\"save_attachment\"\n      defaultMessage=\"save\" description=\"Call to save an attachment\" /></>;\n    return (\n      <div className=\"attachment\">\n        <div><i className=\"material-icons big gray\">insert_drive_file</i></div>\n        <div className=\"flex-column\">\n          <div>{filename} {size}</div>\n          {this.props.uploading || this.state.downloader ?\n            <FileProgress progress={this.props.uploading ? this.props.progress : this.state.progress}\n              onCancel={this.handleCancel} />\n            :\n            <div>{url ?\n              <a href={url} download={this.props.filename} onClick={helperFunc}>{downloadWidget}</a>\n              :\n              <span className=\"light-gray\">{downloadWidget}</span>\n            }</div>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n","// Single message, sent or received.\nimport React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport Attachment from './attachment.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\n\nimport { sanitizeImageUrl, sanitizeUrl } from '../lib/utils.js';\n\nclass BaseChatMessage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      progress: 0\n    };\n\n    if (props.uploader) {\n      props.uploader.onProgress = this.handleProgress.bind(this);\n    }\n\n    this.handleImagePreview = this.handleImagePreview.bind(this);\n    this.handleFormButtonClick = this.handleFormButtonClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n\n    this.handleQuoteClick = this.handleQuoteClick.bind(this);\n  }\n\n  handleImagePreview(e) {\n    e.preventDefault();\n    this.props.onImagePreview({\n      url: e.target.src,\n      filename: e.target.title,\n      width: e.target.dataset.width,\n      height: e.target.dataset.height,\n      size: e.target.dataset.size,\n      type: e.target.dataset.mime\n    });\n  }\n\n  handleFormButtonClick(e) {\n    e.preventDefault();\n    const data = {\n      seq: this.props.seq\n    };\n    data.resp = {};\n    if (e.target.dataset.name) {\n      data.resp[e.target.dataset.name] = e.target.dataset.val ? e.target.dataset.val :\n        e.target.dataset.val === undefined ? 1 : '' + e.target.dataset.val;\n    }\n    if (e.target.dataset.act == 'url') {\n      data.ref = sanitizeUrl(e.target.dataset.ref) || 'about:blank';\n    }\n    const text = e.target.dataset.title || 'unknown';\n    this.props.onFormResponse(e.target.dataset.act, text, data);\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const menuItems = this.props.received == Tinode.MESSAGE_STATUS_FAILED ? ['menu_item_send_retry'] : [];\n    if (this.props.userIsWriter &&\n        this.props.received > Tinode.MESSAGE_STATUS_FAILED &&\n        this.props.received < Tinode.MESSAGE_STATUS_DEL_RANGE) {\n      menuItems.push('menu_item_reply');\n    }\n    this.props.showContextMenu({ seq: this.props.seq, content: this.props.content,\n                                 y: e.pageY, x: e.pageX, pickReply: this.props.pickReply }, menuItems);\n  }\n\n  handleProgress(ratio) {\n    this.setState({progress: ratio});\n  }\n\n  handleCancelUpload() {\n    this.props.onCancelUpload(this.props.seq, this.props.uploader);\n  }\n\n  handleQuoteClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const replyToSeq = this.props.replyToSeq;\n    if (replyToSeq) {\n      this.props.onQuoteClick(replyToSeq);\n    }\n  }\n\n  render() {\n    const sideClass = this.props.deleted ? 'center' :\n      (this.props.sequence + ' ' + (this.props.response ? 'left' : 'right'));\n    const bubbleClass = (this.props.sequence == 'single' || this.props.sequence == 'last') ? 'bubble tip' : 'bubble';\n    const avatar = this.props.deleted ? null : (this.props.userAvatar || true);\n    const fullDisplay = (this.props.userFrom && this.props.response && !this.props.deleted &&\n      (this.props.sequence == 'single' || this.props.sequence == 'last'));\n\n    let content = this.props.content;\n    const attachments = [];\n    if (this.props.mimeType == Drafty.getContentType() && Drafty.isValid(content)) {\n      Drafty.attachments(content, function(att, i) {\n        if (att.mime == 'application/json') {\n          // Don't show json objects as attachments.\n          // They are not meant for users.\n          return;\n        }\n        attachments.push(<Attachment\n          tinode={this.props.tinode}\n          downloadUrl={Drafty.getDownloadUrl(att)}\n          filename={att.name}\n          uploading={Drafty.isProcessing(att)}\n          mimetype={att.mime}\n          size={Drafty.getEntitySize(att)}\n          progress={this.state.progress}\n          onCancelUpload={this.handleCancelUpload}\n          onError={this.props.onError}\n          key={i} />);\n      }, this);\n      const tree = Drafty.format(content, this.props.formatter, this);\n      content = React.createElement(React.Fragment, null, tree);\n    } else if (this.props.deleted) {\n      // Message represents a range of deleted messages.\n      content = <><i className=\"material-icons gray\">block</i> <i className=\"gray\">\n        <FormattedMessage id=\"deleted_content\"\n          defaultMessage=\"content deleted\" description=\"Shown when messages are deleted\" />\n      </i></>\n    } else if (typeof content != 'string') {\n      content = <><i className=\"material-icons gray\">error_outline</i> <i className=\"gray\">\n        <FormattedMessage id=\"invalid_content\"\n          defaultMessage=\"invalid content\" description=\"Shown when message is unreadable\" /></i></>\n    }\n\n    return (\n      <li ref={this.props.innerRef} className={sideClass}>\n        {this.props.userFrom && this.props.response ?\n          <div className=\"avatar-box\">\n            {fullDisplay ?\n              <LetterTile\n                tinode={this.props.tinode}\n                topic={this.props.userFrom}\n                title={this.props.userName}\n                avatar={avatar} /> :\n              null}\n          </div> :\n          null}\n        <div>\n          <div className={bubbleClass}>\n            <div className=\"content-meta\">\n              <div className=\"message-content\">\n                {content}\n                {attachments}\n              </div>\n              {this.props.timestamp ?\n                <ReceivedMarker\n                  timestamp={this.props.timestamp}\n                  received={this.props.received} />\n                : null}\n            </div>\n            {this.props.deleted || !this.props.showContextMenu ?\n              null :\n              <span className=\"menuTrigger\">\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">expand_more</i>\n                </a>\n              </span>\n            }\n          </div>\n          {fullDisplay ?\n            <div className=\"author\">\n              {this.props.userName ||\n                <i><FormattedMessage id=\"user_not_found\" defaultMessage=\"Not found\"\n                description=\"In place of a user's full name when the user is not found.\" /></i>\n              }\n            </div>\n            : null\n          }\n        </div>\n      </li>\n    );\n  }\n};\n\nconst IntlChatMessage = injectIntl(BaseChatMessage);\nconst ChatMessage = React.forwardRef((props, ref) => <IntlChatMessage innerRef = {ref} {...props} />);\n\nexport default ChatMessage;\n","// Send message form.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport { KEYPRESS_DELAY } from '../config.js';\nimport { filePasted } from '../lib/blob-helpers.js';\n\nconst messages = defineMessages({\n  messaging_disabled: {\n    id: 'messaging_disabled_prompt',\n    defaultMessage: 'Messaging disabled',\n    description: 'Prompt in SendMessage in read-only topic'\n  },\n  type_new_message: {\n    id: 'new_message_prompt',\n    defaultMessage: 'New message',\n    description: 'Prompt in send message field'\n  },\n  add_image_caption: {\n    id: 'image_caption_prompt',\n    defaultMessage: 'Image caption',\n    description: 'Prompt in SendMessage for attached image'\n  },\n  file_attachment_too_large: {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  },\n  cannot_initiate_upload: {\n    id: 'cannot_initiate_file_upload',\n    defaultMessage: 'Cannot initiate file upload.',\n    description: 'Generic error messagewhen attachment fails'\n  },\n});\n\nclass SendMessage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      message: '',\n      // Make initial keypress time as if it happened 5001 milliseconds in the past.\n      keypressTimestamp: new Date().getTime() - KEYPRESS_DELAY - 1\n    };\n\n    this.handlePasteEvent = this.handlePasteEvent.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleSend = this.handleSend.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleMessageTyping = this.handleMessageTyping.bind(this);\n\n    this.handleQuoteClick = this.handleQuoteClick.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.addEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.removeEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.messageEditArea) {\n      this.messageEditArea.focus();\n    }\n  }\n\n  handlePasteEvent(e) {\n    if (this.props.disabled) {\n      return;\n    }\n    // FIXME: handle large files too.\n    if (filePasted(e,\n      (bits, mime, width, height, fname) => {\n        this.props.onAttachImage(mime, bits, width, height, fname);\n      },\n      (mime, bits, fname) => {\n        this.props.onAttachFile(mime, bits, fname);\n      },\n      this.props.onError)) {\n\n      // If a file was pasted, don't paste base64 data into input field.\n      e.preventDefault();\n    }\n  }\n\n  handleAttachImage(e) {\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachImage(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleAttachFile(e) {\n    const {formatMessage} = this.props.intl;\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachFile(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleSend(e) {\n    e.preventDefault();\n    const message = this.state.message.trim();\n    if (message || this.props.acceptBlank || this.props.noInput) {\n      this.props.onSendMessage(message);\n      this.setState({message: ''});\n    }\n  }\n\n  /* Send on Enter key */\n  handleKeyPress(e) {\n    // Remove this if you don't want Enter to trigger send\n    if (e.key === 'Enter') {\n      // Have Shift-Enter insert a line break instead\n      if (!e.shiftKey) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.handleSend(e);\n      }\n    }\n  }\n\n  handleMessageTyping(e) {\n    const newState = {message: e.target.value};\n    if (this.props.onKeyPress) {\n      const now = new Date().getTime();\n      if (now - this.state.keypressTimestamp > KEYPRESS_DELAY) {\n        this.props.onKeyPress();\n        newState.keypressTimestamp = now;\n      }\n    }\n    this.setState(newState);\n  }\n\n  handleQuoteClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.props.replyTo && this.props.onQuoteClick) {\n      const replyToSeq = this.props.replyTo.seq;\n      this.props.onQuoteClick(replyToSeq);\n    }\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const prompt = this.props.disabled ?\n      formatMessage(messages.messaging_disabled) :\n      (this.props.messagePrompt ?\n        formatMessage(messages[this.props.messagePrompt]) :\n        formatMessage(messages.type_new_message));\n\n    let quote = null;\n    if (this.props.replyTo) {\n      quote = Drafty.format(this.props.replyTo.content, this.props.formatter, this);\n    }\n\n    return (\n      <div id=\"send-message-wrapper\">\n      {quote ?\n        <div className=\"reply-quote-preview\">\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancelReply();}}><i className=\"material-icons gray\">close</i></a>\n          {quote}\n        </div>\n      :\n      null}\n\n      <div id=\"send-message-panel\">\n        {!this.props.disabled ?\n          <>\n            {this.props.onAttachFile ?\n              <>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachImage.click();}} title=\"Add image\">\n                  <i className=\"material-icons secondary\">photo</i>\n                </a>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachFile.click();}} title=\"Attach file\">\n                  <i className=\"material-icons secondary\">attach_file</i>\n                </a>\n              </>\n              :\n              null}\n            {this.props.noInput ?\n              <div className=\"hr thin\" /> :\n              <textarea id=\"sendMessage\" placeholder={prompt}\n                value={this.state.message} onChange={this.handleMessageTyping}\n                onKeyPress={this.handleKeyPress}\n                ref={(ref) => {this.messageEditArea = ref;}}\n                autoFocus />}\n            <a href=\"#\" onClick={this.handleSend} title=\"Send\">\n              <i className=\"material-icons\">send</i>\n            </a>\n            <input type=\"file\" ref={(ref) => {this.attachFile = ref;}}\n              onChange={this.handleAttachFile} style={{display: 'none'}} />\n            <input type=\"file\" ref={(ref) => {this.attachImage = ref;}} accept=\"image/*\"\n              onChange={this.handleAttachImage} style={{display: 'none'}} />\n          </>\n          :\n          <div id=\"writing-disabled\">{prompt}</div>\n        }\n      </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SendMessage);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { bytesToHumanSize } from '../lib/strformat.js';\n\n// Get material icon name from mime type.\nfunction iconFromMime(mime) {\n  // If more icons become available in material icons, add them to this mime-to-icon mapping.\n  const mimeToIcon = {default: 'insert_drive_file', image: 'image', text: 'description', video: 'theaters'};\n\n  return mimeToIcon[mime] || mimeToIcon[(mime || '').split('/')[0]] || mimeToIcon['default'];\n}\n\nexport default class DocPreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleSendDoc = this.handleSendDoc.bind(this);\n  }\n\n  handleSendDoc(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(this.props.content.file);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          <span>{this.props.content.filename}</span>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\">\n          <div className=\"flex-column narrow\">\n            <i className=\"material-icons gray\">{iconFromMime(this.props.content.type)}</i>\n            <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n              description=\"Label for file content type (mime)\" /></b> {this.props.content.type || 'application/octet-stream'}</div>\n            <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n              description=\"Label for file size\" /></b> {bytesToHumanSize(this.props.content.size)}</div>\n          </div>\n        </div>\n        <SendMessage\n          noInput={true}\n          tinode={this.props.tinode}\n          replyTo={this.props.replyTo}\n          formatter={this.props.formatter}\n          onCancelReply={this.props.onCancelReply}\n          onSendMessage={this.handleSendDoc}\n          onError={this.props.onError} />\n      </div>\n    );\n  }\n};\n","// GroupSubs: a list of group subscribers currently online.\n// Show in the topic title bar\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { MAX_ONLINE_IN_TOPIC } from '../config.js'\n\nimport LetterTile from './letter-tile.jsx';\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class GroupSubs extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const usersOnline = [];\n    const totalCount = (this.props.subscribers || []).length;\n    const countToShow = Math.min(MAX_ONLINE_IN_TOPIC, totalCount);\n\n    (this.props.subscribers || []).some((sub) => {\n      usersOnline.push(\n        <div className=\"avatar-box\" key={sub.user}>\n          <LetterTile\n            tinode={this.props.tinode}\n            topic={sub.user}\n            avatar={makeImageUrl(sub.public ? sub.public.photo : null) || true}\n            title={sub.public ? sub.public.fn : null} />\n        </div>\n      );\n      return usersOnline.length == countToShow;\n    });\n\n    return (\n      <div id=\"topic-users\">{usersOnline} {totalCount > countToShow ?\n        <span>\n          <FormattedMessage id=\"more_online_members\" defaultMessage=\"+{overflow} more\"\n              description=\"Shown in MessagesView title bar when the number of online subscribers exceeds MAX_ONLINE_IN_TOPIC\"\n              values={{ overflow: (totalCount - countToShow) }} />\n        </span> : null}\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\nimport { bytesToHumanSize } from '../lib/strformat.js';\n\nexport default class ImagePreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      width: 0,\n      height: 0\n    };\n\n    this.handleSendImage = this.handleSendImage.bind(this);\n  }\n\n  assignWidth(node) {\n    if (node && !this.state.width) {\n      const bounds = node.getBoundingClientRect();\n      this.setState({\n        width: bounds.width | 0,\n        height: bounds.height | 0\n      });\n    }\n  }\n\n  handleSendImage(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(caption, this.props.content.blob);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n\n    const dim = fitImageSize(this.props.content.width, this.props.content.height,\n      this.state.width, this.state.height, false);\n    const size = dim ? { width: dim.dstWidth + 'px', height: dim.dstHeight + 'px' } :\n      ((this.props.content.width > this.props.content.height) ? {width: '100%'} : {height: '100%'});\n    size.maxWidth = '100%';\n    size.maxHeight = '100%';\n\n    let filename = this.props.content.filename;\n    // Average font aspect ratio is ~0.5; File name takes 1/3 of the viewport width.\n    const maxlength = Math.max(((this.state.width / REM_SIZE / 1.5) | 0) - 2, 12);\n    if (filename.length > maxlength) {\n      filename = filename.slice(0, maxlength/2 - 1) + '…' + filename.slice(1 - maxlength/2);\n    }\n    const width = this.props.content.width || '-';\n    const height = this.props.content.height || '-';\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          {!this.props.onSendMessage ?\n            <a href={this.props.content.url} download={this.props.content.filename}>\n              <i className=\"material-icons\">file_download</i> <FormattedMessage\n                id=\"download_action\" defaultMessage=\"download\" description=\"Call to action [download]\" />\n            </a>\n            :\n            <span>{this.props.content.filename}</span>\n          }\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\" ref={(node) => this.assignWidth(node)}>\n          <img src={this.props.content.url} style={size} className=\"image-preview\" alt={this.props.content.filename} />\n        </div>\n        {this.props.onSendMessage ?\n          <SendMessage\n            messagePrompt=\"add_image_caption\"\n            acceptBlank={true}\n            tinode={this.props.tinode}\n            replyTo={this.props.replyTo}\n            formatter={this.props.formatter}\n            onCancelReply={this.props.onCancelReply}\n            onSendMessage={this.handleSendImage}\n            onError={this.props.onError} />\n          :\n          <div id=\"image-preview-footer\">\n            <div>\n              <div><b><FormattedMessage id=\"label_file_name\" defaultMessage=\"File name:\"\n                description=\"Label for a file name\" /></b></div>\n              <div><span title={this.props.content.filename}>{filename ? filename : '-'}</span></div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n                description=\"Label for file content type (mime)\" /></b></div>\n              <div>{this.props.content.type}</div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n                description=\"Label for file size\" /></b></div>\n              <div>{width} &times; {height} px; {bytesToHumanSize(this.props.content.size)}</div>\n            </div>\n          </div>}\n      </div>\n    );\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Invitation extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleButtonAction = this.handleButtonAction.bind(this);\n  }\n\n  handleButtonAction(evt, data) {\n    evt.preventDefault();\n    this.props.onAction(data);\n  }\n\n  render() {\n    return (\n      <div className=\"accept-invite-panel\">\n        <div className=\"title\">\n          <FormattedMessage id=\"chat_invitation\"\n            defaultMessage=\"You are invited to start a new chat. What would you like to do?\"\n            description=\"New chat invitation message: [Accept] [Ignore] [Block].\" />\n        </div>\n        <div className=\"footer\">\n          <button className=\"primary\" onClick={event => { this.handleButtonAction(event, \"accept\"); }}>\n            <FormattedMessage id=\"chat_invitation_accept\"\n              defaultMessage=\"Accept\" description=\"Action [Accept] for chat invitation.\" />\n          </button>\n          <button className=\"secondary\" onClick={event => { this.handleButtonAction(event, \"delete\"); }}>\n            <FormattedMessage id=\"chat_invitation_ignore\"\n              defaultMessage=\"Ignore\" description=\"Action [Ignore] for chat invitation.\" />\n          </button>\n          <button className=\"secondary\" onClick={event => { this.handleButtonAction(event, \"block\"); }}>\n            <FormattedMessage id=\"chat_invitation_block\"\n              defaultMessage=\"Block\" description=\"Action [Block] for chat invitation.\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n","/* This is just a static page to display when no conversation is selected. */\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME } from '../config.js';\n\nexport default class LogoView extends React.PureComponent {\n  render() {\n    const version = APP_NAME + ' (' + Tinode.getLibrary() + ')';\n    return (\n      <div id=\"dummy-view\">\n        <div>\n          <a href=\"https://github.com/tinode/chat/\">\n            <img id=\"logo\" alt=\"logo\" src=\"img/logo.svg\" />\n            <h2>Tinode Web</h2>\n          </a>\n          <p><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\"\n            description=\"Label for a client version\" /> {version}</p>\n          <p><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\"\n            description=\"Label for a server version\" /> {this.props.serverVersion} ({this.props.serverAddress})</p>\n        </div>\n      </div>\n    );\n  }\n};\n","// Image view with progress bar and a cancel button.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\n\nexport default class UploadingImage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"inline-image\">\n        {React.createElement('img', this.props)}\n        <div className=\"rounded-container\">\n          <FileProgress progress={this.props.progress} onCancel={this.props.onCancelUpload} />\n        </div>\n      </div>\n    );\n  }\n};\n","// Utility class for hash navigation.\n\n// Parse hash as in http://www.example.com/path#hash as if it were\n// path and arguments.\nexport default class HashNavigation {\n  static parseUrlHash(hash) {\n    // Split path from args, path -> parts[0], args->path[1]\n    const parts = hash.split('?', 2);\n    const params = {};\n    let path = [];\n    if (parts[0]) {\n      path = parts[0].replace('#', '').split('/');\n    }\n    if (parts[1]) {\n      parts[1].split('&').forEach(function(part) {\n        const item = part.split('=');\n        if (item[0]) {\n          params[decodeURIComponent(item[0])] = decodeURIComponent(item[1]);\n        }\n      });\n    }\n    return {path: path, params: params};\n  }\n\n  static navigateTo(url) {\n    window.location.hash = url;\n  }\n\n  static composeUrlHash(path, params) {\n    let url = path.join('/');\n    const args = [];\n    for (const key in params) {\n      if (params.hasOwnProperty(key)) {\n        args.push(key + '=' + params[key]);\n      }\n    }\n    if (args.length > 0) {\n      url += '?' + args.join('&');\n    }\n    return url;\n  }\n\n  static addUrlParam(hash, key, value) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.params[key] = value;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static removeUrlParam(hash, key) {\n    const parsed = this.parseUrlHash(hash);\n    delete parsed.params[key];\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlSidePanel(hash, sidepanel) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[0] = sidepanel;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlInfoPanel(hash, infopanel) {\n    const parsed = this.parseUrlHash(hash);\n    if (infopanel) {\n      parsed.params.info = infopanel;\n    } else {\n      delete parsed.params.info;\n    }\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlTopic(hash, topic) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[1] = topic;\n    // Close InfoView on topic change.\n    delete parsed.params.info;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n}\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\nconst Drafty = Tinode.Drafty;\n\nimport ChatMessage from '../widgets/chat-message.jsx';\nimport ContactBadges from '../widgets/contact-badges.jsx';\nimport DocPreview from '../widgets/doc-preview.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupSubs from '../widgets/group-subs.jsx';\nimport ImagePreview from '../widgets/image-preview.jsx';\nimport Invitation from '../widgets/invitation.jsx';\nimport LetterTile from '../widgets/letter-tile.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport LogoView from './logo-view.jsx';\nimport SendMessage from '../widgets/send-message.jsx';\nimport UploadingImage from '../widgets/uploading-image.jsx'\n\nimport { DEFAULT_P2P_ACCESS_MODE, IMAGE_PREVIEW_DIM, KEYPRESS_DELAY, MESSAGES_PAGE,\n  MAX_EXTERN_ATTACHMENT_SIZE, MAX_IMAGE_DIM, MAX_INBAND_ATTACHMENT_SIZE, READ_DELAY,\n  IMAGE_THUMBNAIL_DIM, BROKEN_IMAGE_SIZE, REM_SIZE } from '../config.js';\nimport { SUPPORTED_IMAGE_FORMATS, blobToBase64, base64ToBlob, filePasted, fileToBase64,\n  imageScaled, makeImageUrl, fitImageSize } from '../lib/blob-helpers.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { bytesToHumanSize, shortDateFormat, letterTileColorId } from '../lib/strformat.js';\nimport { sanitizeImageUrl } from '../lib/utils.js';\n\n// Run timer with this frequency (ms) for checking notification queue.\nconst NOTIFICATION_EXEC_INTERVAL = 300;\n\nconst messages = defineMessages({\n  online_now: {\n    id: 'online_now',\n    defaultMessage: 'online now',\n    description: 'Indicator that the user or topic is currently online',\n  },\n  last_seen: {\n    id: 'last_seen_timestamp',\n    defaultMessage: 'Last seen',\n    description: 'Label for the timestamp of when the user or topic was last online'\n  },\n  not_found: {\n    id: 'title_not_found',\n    defaultMessage: 'Not found',\n    description: 'Title shown when topic is not found'\n  },\n  channel: {\n    id: 'channel',\n    defaultMessage: 'channel',\n    description: 'Subtitle shown for channels in MessagesView instead of last seen'\n  },\n  file_attachment_too_large: {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  },\n\n  drafty_form: {\n    id: 'drafty_form',\n    defaultMessage: 'Form: ',\n    description: 'Comment for form in drafty preview'\n  },\n  drafty_attachment: {\n    id: 'drafty_attachment',\n    defaultMessage: 'Attachment',\n    description: 'Comment for attachment in drafty preview'\n  },\n});\n\n// Checks if the access permissions are granted but not yet accepted.\nfunction isUnconfirmed(acs) {\n  if (acs) {\n    const ex = acs.getExcessive() || '';\n    return acs.isJoiner('given') && (ex.includes('R') || ex.includes('W'));\n  }\n  return false;\n}\n\nfunction isPeerRestricted(acs) {\n  if (acs) {\n    const ms = acs.getMissing() || '';\n    return acs.isJoiner('want') && (ms.includes('R') || ms.includes('W'));\n  }\n  return false;\n}\n\nclass MessagesView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = MessagesView.getDerivedStateFromProps(props, {});\n\n    this.leave = this.leave.bind(this);\n    this.sendMessage = this.sendMessage.bind(this);\n    this.sendImageAttachment = this.sendImageAttachment.bind(this);\n    this.sendFileAttachment = this.sendFileAttachment.bind(this);\n    this.sendKeyPress = this.sendKeyPress.bind(this);\n    this.subscribe = this.subscribe.bind(this);\n    this.handleScrollReference = this.handleScrollReference.bind(this);\n    this.handleScrollEvent = this.handleScrollEvent.bind(this);\n    this.handleDescChange = this.handleDescChange.bind(this);\n    this.handleSubsUpdated = this.handleSubsUpdated.bind(this);\n    this.handleMessageUpdate = this.handleMessageUpdate.bind(this);\n    this.handleAllMessagesReceived = this.handleAllMessagesReceived.bind(this);\n    this.handleInfoReceipt = this.handleInfoReceipt.bind(this);\n    this.handleImagePostview = this.handleImagePostview.bind(this);\n    this.handleClosePreview = this.handleClosePreview.bind(this);\n    this.handleFormResponse = this.handleFormResponse.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleShowContextMenuMessage = this.handleShowContextMenuMessage.bind(this);\n    this.handleNewChatAcceptance = this.handleNewChatAcceptance.bind(this);\n    this.handleEnablePeer = this.handleEnablePeer.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n    this.postReadNotification = this.postReadNotification.bind(this);\n    this.clearNotificationQueue = this.clearNotificationQueue.bind(this);\n\n    this.handlePickReply = this.handlePickReply.bind(this);\n    this.handleCancelReply = this.handleCancelReply.bind(this);\n    this.handleQuoteClick = this.handleQuoteClick.bind(this);\n\n    this.chatMessageRefs = {};\n    this.getOrCreateMessageRef = this.getOrCreateMessageRef.bind(this);\n\n    this.readNotificationQueue = [];\n    this.readNotificationTimer = null;\n  }\n\n  getOrCreateMessageRef(seqId) {\n    if (this.chatMessageRefs.hasOwnProperty(seqId)) {\n      return this.chatMessageRefs[seqId];\n    }\n    const ref = React.createRef();\n    this.chatMessageRefs[seqId] = ref;\n    return ref;\n  }\n\n  componentDidMount() {\n    // this.propsChange(this.props, this.state);\n    if (this.messagesScroller) {\n      this.messagesScroller.addEventListener('scroll', this.handleScrollEvent);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messagesScroller) {\n      this.messagesScroller.removeEventListener('scroll', this.handleScrollEvent);\n    }\n\n    // Flush all notifications.\n    this.clearNotificationQueue();\n  }\n\n  // Scroll last message into view on component update e.g. on message received\n  // or vertical shrinking.\n  componentDidUpdate(prevProps, prevState) {\n    if (this.messagesScroller) {\n      if (prevState.topic != this.state.topic || prevState.messageCount != this.state.messageCount) {\n        // New message\n        this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n      } else if (prevProps.viewportHeight > this.props.viewportHeight) {\n        // Componet changed height.\n        this.messagesScroller.scrollTop += prevProps.viewportHeight - this.props.viewportHeight;\n      }\n    }\n\n    const topic = this.props.tinode ? this.props.tinode.getTopic(this.state.topic) : undefined;\n    if (this.state.topic != prevState.topic) {\n      if (prevState.topic && !Tinode.isNewGroupTopicName(prevState.topic)) {\n        this.leave(prevState.topic);\n      }\n\n      if (topic) {\n        topic.onData = this.handleMessageUpdate;\n        topic.onAllMessagesReceived = this.handleAllMessagesReceived;\n        topic.onInfo = this.handleInfoReceipt;\n        topic.onMetaDesc = this.handleDescChange;\n        topic.onSubsUpdated = this.handleSubsUpdated;\n        topic.onPres = this.handleSubsUpdated;\n      }\n    }\n\n    if (!this.props.applicationVisible) {\n      // If application is not visible, flush all unsent 'read' notifications.\n      this.clearNotificationQueue();\n    } else {\n      // Otherwise assume there are unread messages.\n      this.postReadNotification(0);\n    }\n\n    if ((this.state.topic != prevState.topic) || !prevProps.ready) {\n      this.subscribe(topic);\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let nextState = {};\n    if (!nextProps.topic) {\n      // Default state: no topic.\n      nextState = {\n        messageCount: 0,\n        latestClearId: -1,\n        onlineSubs: [],\n        topic: null,\n        title: '',\n        avatar: null,\n        isVerified: false,\n        isStaff: false,\n        isDangerous: false,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false,\n        peerMessagingDisabled: false,\n        channel: false,\n        reply: null\n      };\n    } else if (nextProps.topic != prevState.topic) {\n      const topic = nextProps.tinode.getTopic(nextProps.topic);\n      nextState = {\n        topic: nextProps.topic,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false,\n        reply: null\n      };\n\n      if (topic) {\n        // Topic exists.\n        const subs = [];\n\n        if (nextProps.connected) {\n          topic.subscribers((sub) => {\n            if (sub.online && sub.user != nextProps.myUserId) {\n              subs.push(sub);\n            }\n          });\n        }\n\n        Object.assign(nextState, {\n          onlineSubs: subs\n        });\n\n        if (topic.public) {\n          Object.assign(nextState, {\n            title: topic.public.fn,\n            avatar: makeImageUrl(topic.public.photo)\n          });\n        } else {\n          Object.assign(nextState, {\n            title: '',\n            avatar: null\n          });\n        }\n\n        const peer = topic.p2pPeerDesc();\n        if (peer) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: isPeerRestricted(peer.acs)\n          });\n        } else if (prevState.peerMessagingDisabled) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: false\n          });\n        }\n        Object.assign(nextState, {\n          messageCount: topic.messageCount(),\n          latestClearId: topic.maxClearId(),\n          channel: topic.isChannelType()\n        });\n      } else {\n        // Invalid topic.\n        Object.assign(nextState, {\n          messageCount: 0,\n          latestClearId: -1,\n          onlineSubs: [],\n          title: '',\n          avatar: null,\n          peerMessagingDisabled: false,\n          channel: false\n        });\n      }\n    }\n\n    if (nextProps.acs) {\n      if (nextProps.acs.isWriter() != prevState.isWriter) {\n        nextState.isWriter = !prevState.isWriter;\n      }\n      if (nextProps.acs.isReader() != prevState.isReader) {\n        nextState.isReader = !prevState.isReader;\n      }\n      if (!nextProps.acs.isReader('given') != prevState.readingBlocked) {\n        nextState.readingBlocked = !prevState.readingBlocked;\n      }\n      if (nextProps.acs.isSharer() != prevState.isSharer) {\n        nextState.isSharer = !prevState.isSharer;\n      }\n    } else {\n      if (prevState.isWriter) {\n        nextState.isWriter = false;\n      }\n      if (prevState.isReader) {\n        nextState.isReader = false;\n      }\n      if (!prevState.readingBlocked) {\n        prevState.readingBlocked = true;\n      }\n      if (prevState.isSharer) {\n        nextState.isSharer = false;\n      }\n    }\n\n    if (isUnconfirmed(nextProps.acs) == !prevState.unconformed) {\n      nextState.unconfirmed = !prevState.unconformed;\n    }\n\n    // Clear subscribers online when there is no connection.\n    if (!nextProps.connected && prevState.onlineSubs && prevState.onlineSubs.length > 0) {\n      nextState.onlineSubs = [];\n    }\n\n    return nextState;\n  }\n\n  subscribe(topic) {\n    if (!topic || topic.isSubscribed() || !this.props.ready) {\n      return;\n    }\n\n    // Is this a new topic?\n    const newTopic = (this.props.newTopicParams && this.props.newTopicParams._topicName == this.props.topic);\n\n    // Don't request the tags. They are useless unless the user\n    // is the owner and is editing the topic.\n    let getQuery = topic.startMetaQuery().withLaterDesc().withLaterSub();\n    if (this.state.isReader || newTopic) {\n      // Reading is either permitted or we don't know because it's a new topic. Ask for messages.\n      getQuery = getQuery.withLaterData(MESSAGES_PAGE);\n      if (this.state.isReader) {\n        getQuery = getQuery.withLaterDel();\n      }\n      // And show \"loading\" spinner.\n      this.setState({ fetchingMessages: true });\n    }\n\n    const setQuery = newTopic ? this.props.newTopicParams : undefined;\n    topic.subscribe(getQuery.build(), setQuery)\n      .then((ctrl) => {\n        if (ctrl.code == 303) {\n          // Redirect to another topic requested.\n          HashNavigation.navigateTo(HashNavigation.setUrlTopic('', ctrl.params.topic));\n          return;\n        }\n        if (this.state.topic != ctrl.topic) {\n          this.setState({topic: ctrl.topic});\n        }\n        this.props.onNewTopicCreated(this.props.topic, ctrl.topic);\n        // If there are unsent messages, try sending them now.\n        topic.queuedMessages((pub) => {\n          if (!pub._sending && topic.isSubscribed()) {\n            this.sendMessage(pub);\n          }\n        });\n      })\n      .catch((err) => {\n        console.log(\"Failed subscription to\", this.state.topic);\n        this.props.onError(err.message, 'err');\n        const blankState = MessagesView.getDerivedStateFromProps({}, {});\n        blankState.title = this.props.intl.formatMessage(messages.not_found);\n        this.setState(blankState);\n      });\n  }\n\n  leave(oldTopicName) {\n    if (!oldTopicName || !this.props.tinode.isTopicCached(oldTopicName)) {\n      return;\n    }\n    const oldTopic = this.props.tinode.getTopic(oldTopicName);\n    if (oldTopic && oldTopic.isSubscribed()) {\n      oldTopic.leave(false)\n        .catch(() => { /* do nothing here */ })\n        .finally(() => {\n          // We don't care if the request succeeded or failed.\n          // The topic is dead regardless.\n          this.setState({fetchingMessages: false});\n          oldTopic.onData = undefined;\n          oldTopic.onAllMessagesReceived = undefined;\n          oldTopic.onInfo = undefined;\n          oldTopic.onMetaDesc = undefined;\n          oldTopic.onSubsUpdated = undefined;\n          oldTopic.onPres = undefined;\n        });\n    }\n  }\n\n  handleScrollReference(node) {\n    if (node) {\n      node.addEventListener('scroll', this.handleScrollEvent);\n      this.messagesScroller = node;\n      this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n    }\n  }\n\n  // Get older messages\n  handleScrollEvent(event) {\n    this.setState({scrollPosition: event.target.scrollHeight - event.target.scrollTop});\n    if (this.state.fetchingMessages) {\n      return;\n    }\n\n    if (event.target.scrollTop <= 0) {\n      const topic = this.props.tinode.getTopic(this.state.topic);\n      if (topic && topic.isSubscribed() && topic.msgHasMoreMessages()) {\n        this.setState({fetchingMessages: true}, () => {\n          topic.getMessagesPage(MESSAGES_PAGE)\n            .catch((err) => this.props.onError(err.message, 'err'))\n            .finally(() => this.setState({fetchingMessages: false}));\n          });\n      }\n    }\n  }\n\n  handleDescChange(desc) {\n    if (desc.public) {\n      this.setState({\n        title: desc.public.fn,\n        avatar: makeImageUrl(desc.public.photo)\n      });\n    } else {\n      this.setState({\n        title: '',\n        avatar: null\n      });\n    }\n\n    if (desc.acs) {\n      this.setState({\n        isWriter: desc.acs.isWriter(),\n        isReader: desc.acs.isReader(),\n        readingBlocked: !desc.acs.isReader('given'),\n        unconfirmed: isUnconfirmed(desc.acs),\n      });\n    }\n  }\n\n  postReadNotification(seq) {\n    // Ignore notifications if the app is invisible.\n    if (!this.props.applicationVisible) {\n      return;\n    }\n\n    // Set up the timer if it's not running already.\n    if (!this.readNotificationTimer) {\n      this.readNotificationTimer = setInterval(() => {\n        if (this.readNotificationQueue.length == 0) {\n          // Shut down the timer if the queue is empty.\n          clearInterval(this.readNotificationTimer);\n          this.readNotificationTimer = null;\n          return;\n        }\n\n        let seq = -1;\n        while (this.readNotificationQueue.length > 0) {\n          const n = this.readNotificationQueue[0];\n          if (n.topicName != this.state.topic) {\n            // Topic has changed. Drop the notification.\n            this.readNotificationQueue.shift();\n            continue;\n          }\n\n          const now = new Date();\n          if (n.sendAt <= now) {\n            // Remove expired notification from queue.\n            this.readNotificationQueue.shift();\n            seq = Math.max(seq, n.seq);\n          } else {\n            break;\n          }\n        }\n\n        // Send only one notification for the whole batch of messages.\n        if (seq >= 0) {\n          const topic = this.props.tinode.getTopic(this.state.topic);\n          if (topic) {\n            topic.noteRead(seq);\n          }\n        }\n      }, NOTIFICATION_EXEC_INTERVAL);\n    }\n\n    const now = new Date();\n    this.readNotificationQueue.push({\n      topicName: this.state.topic,\n      seq: seq,\n      sendAt: now.setMilliseconds(now.getMilliseconds() + READ_DELAY)\n    });\n  }\n\n  // Clear notification queue and timer.\n  clearNotificationQueue() {\n    this.readNotificationQueue = [];\n    if (this.readNotificationTimer) {\n      clearInterval(this.readNotificationTimer);\n      this.readNotificationTimer = null;\n    }\n  }\n\n  handleSubsUpdated() {\n    if (this.state.topic) {\n      const subs = [];\n      const topic = this.props.tinode.getTopic(this.state.topic);\n      topic.subscribers((sub) => {\n        if (sub.online && sub.user != this.props.myUserId) {\n          subs.push(sub);\n        }\n      });\n      const newState = {onlineSubs: subs};\n      const peer = topic.p2pPeerDesc();\n      if (peer) {\n        Object.assign(newState, {\n          peerMessagingDisabled: isPeerRestricted(peer.acs)\n        });\n      } else if (this.state.peerMessagingDisabled) {\n        Object.assign(newState, {\n          peerMessagingDisabled: false\n        });\n      }\n      this.setState(newState);\n    }\n  }\n\n  // The 'msg' could be false-ish if some message ranges were deleted.\n  handleMessageUpdate(msg) {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (!msg) {\n      // msg could be null if one or more messages were deleted.\n      // Updating state to force redraw.\n      this.setState({latestClearId: topic.maxClearId()});\n      return;\n    }\n\n    clearTimeout(this.keyPressTimer)\n    this.setState({messageCount: topic.messageCount(), typingIndicator: false});\n\n    // Scroll to the bottom if the message is added to the end of the message list.\n    // TODO: This should be replaced by showing a \"scroll to bottom\" button.\n    if (topic.isNewMessage(msg.seq)) {\n      this.setState({scrollPosition: 0});\n    }\n\n    // Aknowledge messages except own messages. They are\n    // automatically assumed to be read and recived.\n    const status = topic.msgStatus(msg, true);\n    if (status >= Tinode.MESSAGE_STATUS_SENT && msg.from != this.props.myUserId) {\n      this.postReadNotification(msg.seq);\n    }\n    // This will send \"received\" notifications right away.\n    this.props.onData(msg);\n  }\n\n  handleAllMessagesReceived(count) {\n    this.setState({fetchingMessages: false});\n    if (count > 0) {\n      // 0 means \"latest\".\n      this.postReadNotification(0);\n    }\n  }\n\n  handleInfoReceipt(info) {\n    switch (info.what) {\n      case 'kp': {\n        clearTimeout(this.keyPressTimer);\n        this.keyPressTimer = setTimeout(() => {\n          this.setState({typingIndicator: false});\n        }, KEYPRESS_DELAY + 1000);\n        if (!this.state.typingIndicator) {\n          this.setState({typingIndicator: true});\n        }\n        break;\n      }\n      case 'read':\n      case 'recv':\n        // Redraw due to changed recv/read status.\n        this.forceUpdate();\n        break;\n      default:\n        console.log(\"Other change in topic: \", info.what);\n    }\n  }\n\n  handleImagePostview(content) {\n    this.setState({ imagePostview: content });\n  }\n\n  handleClosePreview() {\n    if (this.state.imagePreview && this.state.imagePreview.url) {\n      URL.revokeObjectURL(this.state.imagePreview.url);\n    }\n    this.setState({ imagePostview: null, imagePreview: null, docPreview: null });\n  }\n\n  handleFormResponse(action, text, data) {\n    if (action == 'pub') {\n      this.sendMessage(Drafty.attachJSON(Drafty.parse(text), data));\n    } else if (action == 'url') {\n      const url = new URL(data.ref);\n      const params = url.searchParams;\n      for (let key in data.resp) {\n        if (data.resp.hasOwnProperty(key)) {\n          params.set(key, data.resp[key]);\n        }\n      }\n      ['name', 'seq'].map((key) => {\n        if (data[key]) {\n          params.set(key, data[key]);\n        }\n      });\n      params.set('uid', this.props.myUserId);\n      params.set('topic', this.state.topic);\n      url.search = params;\n      window.open(url, '_blank');\n    } else {\n      console.log(\"Unknown action in form\", action);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.state.topic, y: e.pageY, x: e.pageX });\n  }\n\n  handleShowContextMenuMessage(params, messageSpecificMenuItems) {\n    params.topicName = this.state.topic;\n    const menuItems = messageSpecificMenuItems || [];\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (topic) {\n      if (!topic.isChannelType()) {\n        menuItems.push('message_delete');\n      }\n      const acs = topic.getAccessMode();\n      if (acs && acs.isDeleter()) {\n        menuItems.push('message_delete_hard');\n      }\n    }\n    this.props.showContextMenu(params, menuItems);\n  }\n\n  handleNewChatAcceptance(action) {\n    this.props.onNewChat(this.state.topic, action);\n  }\n\n  handleEnablePeer(e) {\n    e.preventDefault();\n    this.props.onChangePermissions(this.state.topic, DEFAULT_P2P_ACCESS_MODE, this.state.topic);\n  }\n\n  sendKeyPress() {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (topic.isSubscribed()) {\n      topic.noteKeyPress();\n    }\n  }\n\n  // sendMessage sends the message with an optional subscription to topic first.\n  sendMessage(msg, uploadCompletionPromise, uploader) {\n    let head;\n    if (this.state.reply && this.state.reply.content) {\n      head = {reply: '' + this.state.reply.seq};\n      // Turn it into Drafty so we can make a quoted Drafty object later.\n      if (typeof msg == 'string') {\n        msg = Drafty.parse(msg);\n      }\n      msg = Drafty.attachQuote(msg, this.state.reply.content);\n      this.setState({reply: null});\n    }\n    this.props.sendMessage(msg, uploadCompletionPromise, uploader, head);\n  }\n\n  // Send attachment as Drafty message:\n  // - if file is too large, upload it and send a s link.\n  // - if file is small enough, just send it in-band.\n  sendFileAttachment(file) {\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (file.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      const uploadCompletionPromise = uploader.upload(file);\n      const msg = Drafty.attachFile(null, {\n        mime: file.type,\n        filename: file.name,\n        size: file.size,\n        urlPromise: uploadCompletionPromise\n      });\n      // Pass data and the uploader to the TinodeWeb.\n      this.sendMessage(msg, uploadCompletionPromise, uploader);\n    } else {\n      // Small enough to send inband.\n      fileToBase64(file,\n        (mime, bits, fname) => {\n          this.sendMessage(Drafty.attachFile(null, {mime: mime, data: bits, filename: fname}));\n        },\n        this.props.onError\n      );\n    }\n  }\n\n  // handleAttachFile method is called when [Attach file] button is clicked.\n  handleAttachFile(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    if (file.size > maxExternAttachmentSize) {\n      // Too large.\n      this.props.onError(this.props.intl.formatMessage(messages.file_attachment_too_large,\n        {size: bytesToHumanSize(file.size), limit: bytesToHumanSize(maxExternAttachmentSize)}), 'err');\n    } else {\n      this.setState({ docPreview: {\n        file: file,\n        filename: file.name,\n        size: file.size,\n        type: file.type\n      }});\n    }\n  }\n\n  // sendImageAttachment sends the image bits inband as Drafty message.\n  sendImageAttachment(caption, blob) {\n    const mime = this.state.imagePreview.type;\n    const width = this.state.imagePreview.width;\n    const height = this.state.imagePreview.height;\n    const fname = this.state.imagePreview.filename;\n\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (blob.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      if (!uploader) {\n        this.props.onError(this.props.intl.formatMessage(messages.cannot_initiate_upload));\n        return;\n      }\n      const uploadCompletionPromise = uploader.upload(blob);\n\n      // Make small preview to show while uploading.\n      imageScaled(blob, IMAGE_PREVIEW_DIM, IMAGE_PREVIEW_DIM, -1, false,\n        (tinyMine, tinyBlob) => {\n          // Convert tiny image into base64 for serialization and previewing.\n          blobToBase64(tinyBlob, (blobMime, tinyBits64) => {\n            let msg = Drafty.insertImage(null, 0, {\n              mime: mime,\n              _tempPreview: tinyBits64, // This preview will not be serialized.\n              width: width,\n              height: height,\n              filename: fname,\n              size: blob.size,\n              urlPromise: uploadCompletionPromise\n            });\n            if (caption) {\n              msg = Drafty.appendLineBreak(msg);\n              msg = Drafty.append(msg, Drafty.parse(caption));\n            }\n            // Pass data and the uploader to the TinodeWeb.\n            this.sendMessage(msg, uploadCompletionPromise, uploader);\n          }\n        )},\n        // Failure\n        (err) => {\n          this.props.onError(err, 'err');\n        }\n      );\n      return;\n    }\n\n    // Upload the image if it's too big to be send inband.\n    blobToBase64(blob, (blobMime, bits64) => {\n      let msg = Drafty.insertImage(null, 0, {\n        mime: blobMime,\n        preview: bits64, // Serializable preview\n        width: width,\n        height: height,\n        filename: fname,\n        size: blob.size\n      });\n      if (caption) {\n        msg = Drafty.appendLineBreak(msg);\n        msg = Drafty.append(msg, Drafty.parse(caption));\n      }\n      this.sendMessage(msg);\n    });\n  }\n\n  // handleAttachImage method is called when [Attach image] button is clicked.\n  handleAttachImage(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    // Get image dimensions and size, optionally scale it down.\n    imageScaled(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, maxExternAttachmentSize, false,\n      // Success\n      (mime, blob, width, height, fname) => {\n        this.setState({imagePreview: {\n          url: URL.createObjectURL(blob),\n          blob: blob,\n          filename: fname,\n          width: width,\n          height: height,\n          size: blob.size,\n          type: mime\n        }});\n      },\n      // Failure\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    );\n  }\n\n  handleCancelUpload(seq, uploader) {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    const found = topic.findMessage(seq);\n    if (found) {\n      found._cancelled = true;\n    }\n    uploader.cancel();\n  }\n\n  handlePickReply(m) {\n    this.setState({reply: null});\n    if (m) {\n      let cont = m.content\n      if (cont) {\n        if (typeof cont == 'string') {\n          cont = Drafty.init(cont);\n        }\n        cont = Drafty.preview(cont, 30, quotePreviewFmt);\n\n        // Get the author.\n        let header;\n        const seq = m.seq;\n        const topic = this.props.tinode.getTopic(this.state.topic);\n        const m0 = topic.findMessage(seq);\n        let thisFrom;\n        if (m0) {\n          thisFrom = m0.from || 'chan';\n          if (thisFrom != this.props.myUserId) {\n            const topic = this.props.tinode.getTopic(this.state.topic);\n            const user = topic.userDesc(thisFrom);\n            if (user && user.public) {\n              header = user.public.fn;\n            }\n          } else {\n            header = this.props.myUserName;\n          }\n        }\n\n        header = Drafty.init(header || '');\n        // Make small image previews.\n        const ents = [];\n        if (cont.ent) {\n          Drafty.entities(cont, (data, idx, tp) => {\n            if (tp == 'IM') {\n              ents.push({\n                tp: tp,\n                data: data\n              });\n            }\n\n          }, this);\n        }\n\n        // Turn all images into thumbnails.\n        const promises = [];\n        ents.map((ex) => {\n          let p = new Promise((resolve, reject) => {\n            const handleFailure = () => {\n              ex.data.val = '';\n              ex.data.name = '';\n              ex.data.width = IMAGE_THUMBNAIL_DIM;\n              ex.data.height = IMAGE_THUMBNAIL_DIM;\n            };\n            const scale = (origBlob) => {\n              imageScaled(origBlob, IMAGE_THUMBNAIL_DIM, IMAGE_THUMBNAIL_DIM, -1, false,\n                // Success\n                (mime, blob, width, height, fname) => {\n                  ex.data.mime = mime;\n                  ex.data.size = blob.size;\n                  ex.data.width = width;\n                  ex.data.height = height;\n                  ex.data.name = fname;\n                  ex.data.ref = undefined;\n\n                  blobToBase64(blob, (blobMime, tinyBits64) => {\n                    ex.data.val = tinyBits64;\n                    resolve(true);\n                  });\n                },\n                // Failure\n                (err) => {\n                  handleFailure();\n                  reject(`Could not scale image: ${err}`);\n                });\n            }\n            if (ex.data.val) {\n              const b = base64ToBlob(ex.data.val, ex.data.mime);\n              if (b) {\n                scale(b);\n              } else {\n                handleFailure();\n              }\n            } else {\n              const from = this.props.tinode.authorizeURL(sanitizeImageUrl(ex.data.ref));\n              fetch(from)\n                .then(e => {\n                  if (e.ok) {\n                    return e.blob();\n                  } else {\n                    handleFailure();\n                    reject(`Image fetch unsuccessful: ${e.status} - ${e.statusText}`);\n                  }\n                })\n                .then((b) => scale(b))\n                .catch((err) => reject(`Error fetching image data: ${err}`));\n              return;\n            }\n          });\n\n          promises.push(p);\n        });\n\n        Promise.all(promises)\n          .catch((err) => {\n            this.props.onError(err, 'err');\n          })\n          .finally(() => {\n            // All done. Create a reply quote.\n            const msg = Drafty.createQuote(header, cont, letterTileColorId(thisFrom));\n            this.setState({reply: {content: msg, seq: m.seq}});\n          });\n\n        return;\n      }\n    }\n  }\n\n  handleCancelReply() {\n    this.setState({reply: null})\n  }\n\n  handleQuoteClick(replyToSeq) {\n    const ref = this.getOrCreateMessageRef(replyToSeq);\n    if (!ref) {\n      return;\n    }\n    const element = ref.current;\n    if (element) {\n      element.scrollIntoView({block: \"center\", behavior: \"smooth\"});\n      element.style.backgroundColor = 'rgb(0, 0, 0, 0.4)';\n      setTimeout(() => { element.style.backgroundColor = ''; } , 1000);\n    } else {\n      console.error(\"Unresolved message ref: seqId\", replyToSeq);\n    }\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n\n    let component;\n    if (this.props.hideSelf) {\n      component = null;\n    } else if (!this.state.topic) {\n      component = (\n        <LogoView\n          serverVersion={this.props.serverVersion}\n          serverAddress={this.props.serverAddress} />\n      );\n    } else {\n      let component2;\n      if (this.state.imagePreview) {\n        // Preview image before sending.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePreview}\n            tinode={this.props.tinode}\n            replyTo={this.state.reply}\n            formatter={draftyFormatter}\n            onCancelReply={this.handleCancelReply}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendImageAttachment} />\n        );\n      } else if (this.state.imagePostview) {\n        // Expand received image.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePostview}\n            onClose={this.handleClosePreview} />\n        );\n      } else if (this.state.docPreview) {\n        // Preview attachment before sending.\n        component2 = (\n          <DocPreview\n            content={this.state.docPreview}\n            tinode={this.props.tinode}\n            replyTo={this.state.reply}\n            formatter={draftyFormatter}\n            onCancelReply={this.handleCancelReply}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendFileAttachment} />\n        );\n      } else {\n        const topic = this.props.tinode.getTopic(this.state.topic);\n        const isChannel = topic.isChannelType();\n        const groupTopic = topic.isGroupType() && !isChannel;\n        const icon_badges = [];\n        if (topic.trusted) {\n          if (topic.trusted.verified) {\n            icon_badges.push({icon: 'verified', color: 'badge-inv'});\n          }\n          if (topic.trusted.staff) {\n            icon_badges.push({icon: 'staff', color: 'badge-inv'});\n          }\n          if (topic.trusted.danger) {\n            icon_badges.push({icon: 'dangerous', color: 'badge-inv'});\n          }\n        }\n        let messageNodes = [];\n        let previousFrom = null;\n        let chatBoxClass = null;\n        topic.messages((msg, prev, next, i) => {\n          let nextFrom = next ? (next.from || null) : 'chan';\n\n          let sequence = 'single';\n          let thisFrom = msg.from || 'chan';\n          if (thisFrom == previousFrom) {\n            if (thisFrom == nextFrom) {\n              sequence = 'middle';\n            } else {\n              sequence = 'last';\n            }\n          } else if (thisFrom == nextFrom) {\n            sequence = 'first';\n          }\n          previousFrom = thisFrom;\n\n          const isReply = !(thisFrom == this.props.myUserId);\n          const deliveryStatus = topic.msgStatus(msg, true);\n\n          let userName, userAvatar, userFrom;\n          if (groupTopic) {\n            const user = topic.userDesc(thisFrom);\n            if (user && user.public) {\n              userName = user.public.fn;\n              userAvatar = makeImageUrl(user.public.photo);\n            }\n            userFrom = thisFrom;\n            chatBoxClass='chat-box group';\n          } else {\n            chatBoxClass='chat-box';\n          }\n\n          // Ref for this chat message.\n          const ref = this.getOrCreateMessageRef(msg.seq);\n          let replyToSeq = msg.head ? parseInt(msg.head.reply) : null;\n          if (!replyToSeq || isNaN(replyToSeq)) {\n            replyToSeq = null;\n          }\n\n          messageNodes.push(\n            <ChatMessage\n              tinode={this.props.tinode}\n              content={msg.content}\n              deleted={msg.hi}\n              mimeType={msg.head ? msg.head.mime : null}\n              timestamp={msg.ts}\n              response={isReply}\n              seq={msg.seq}\n              userFrom={userFrom}\n              userName={userName}\n              userAvatar={userAvatar}\n              sequence={sequence}\n              received={deliveryStatus}\n              uploader={msg._uploader}\n              viewportWidth={this.props.viewportWidth}  // Used by `formatter`.\n              showContextMenu={this.state.channel? false : this.handleShowContextMenuMessage}\n              onImagePreview={this.handleImagePostview}\n              onFormResponse={this.handleFormResponse}\n              onError={this.props.onError}\n              onCancelUpload={this.handleCancelUpload}\n              pickReply={this.handlePickReply}\n              replyToSeq={replyToSeq}\n              onQuoteClick={this.handleQuoteClick}\n              formatter={draftyFormatter}\n              ref={ref}\n              userIsWriter={this.state.isWriter}\n              key={msg.seq} />\n          );\n        });\n\n        let lastSeen = null;\n        if (isChannel) {\n          lastSeen = formatMessage(messages.channel);\n        } else {\n          const cont = this.props.tinode.getMeTopic().getContact(this.state.topic);\n          if (cont && Tinode.isP2PTopicName(cont.topic)) {\n            if (cont.online) {\n              lastSeen = formatMessage(messages.online_now);\n            } else if (cont.seen) {\n              lastSeen = formatMessage(messages.last_seen) + \": \" +\n                shortDateFormat(cont.seen.when, this.props.intl.locale);\n              // TODO: also handle user agent in c.seen.ua\n            }\n          }\n        }\n        const avatar = this.state.avatar || true;\n        const online = this.props.online ? 'online' + (this.state.typingIndicator ? ' typing' : '') : 'offline';\n\n        component2 = (\n          <>\n            <div id=\"topic-caption-panel\" className=\"caption-panel\">\n              {this.props.displayMobile ?\n                <a href=\"#\" id=\"hide-message-view\" onClick={(e) => {e.preventDefault(); this.props.onHideMessagesView();}}>\n                  <i className=\"material-icons\">arrow_back</i>\n                </a>\n                :\n                null}\n              <div className=\"avatar-box\">\n                <LetterTile\n                  tinode={this.props.tinode}\n                  avatar={avatar}\n                  topic={this.state.topic}\n                  title={this.state.title} />\n                {!isChannel ? <span className={online} /> : null}\n              </div>\n              <div id=\"topic-title-group\">\n                <div id=\"topic-title\" className=\"panel-title\">{\n                  this.state.title ||\n                  <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n                    description=\"Title shown when the topic has no name\" /></i>\n                }<ContactBadges badges={icon_badges} /></div>\n                <div id=\"topic-last-seen\">{lastSeen}</div>\n              </div>\n              {groupTopic ?\n                <GroupSubs\n                  tinode={this.props.tinode}\n                  subscribers={this.state.onlineSubs} /> :\n                <div id=\"topic-users\" />\n              }\n              <div>\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">more_vert</i>\n                </a>\n              </div>\n            </div>\n            {this.props.displayMobile ?\n              <ErrorPanel\n                level={this.props.errorLevel}\n                text={this.props.errorText}\n                onClearError={this.props.onError} />\n              : null}\n            <LoadSpinner show={this.state.fetchingMessages} />\n            <div id=\"messages-container\">\n              <div id=\"messages-panel\" ref={this.handleScrollReference}>\n                <ul id=\"scroller\" className={chatBoxClass}>\n                  {messageNodes}\n                </ul>\n              </div>\n              {!this.state.isReader ?\n              <div id=\"write-only-background\">\n                {this.state.readingBlocked ?\n                <div id=\"write-only-note\">\n                  <FormattedMessage id=\"messages_not_readable\" defaultMessage=\"no access to messages\"\n                    description=\"Message shown in topic without the read access\" />\n                </div>\n                : null }\n              </div>\n              : null }\n            </div>\n            {this.state.peerMessagingDisabled && !this.state.unconfirmed ?\n              <div id=\"peer-messaging-disabled-note\">\n                <i className=\"material-icons secondary\">block</i> <FormattedMessage\n                  id=\"peers_messaging_disabled\" defaultMessage=\"Peer's messaging is disabled.\"\n                  description=\"Shown when the p2p peer's messaging is disabled\" /> <a href=\"#\"\n                    onClick={this.handleEnablePeer}><FormattedMessage id=\"enable_peers_messaging\"\n                    defaultMessage=\"Enable\" description=\"Call to action to enable peer's messaging\" /></a>.\n              </div> : null}\n            {this.state.unconfirmed ?\n              <Invitation onAction={this.handleNewChatAcceptance} />\n              :\n              <SendMessage\n                tinode={this.props.tinode}\n                disabled={!this.state.isWriter}\n                onKeyPress={this.sendKeyPress}\n                onSendMessage={this.sendMessage}\n                onAttachFile={this.handleAttachFile}\n                onAttachImage={this.handleAttachImage}\n                onError={this.props.onError}\n                replyTo={this.state.reply}\n                onQuoteClick={this.handleQuoteClick}\n                formatter={draftyFormatter}\n                onCancelReply={this.handleCancelReply} />}\n          </>\n        );\n      }\n\n      component = <div id=\"topic-view\">{component2}</div>\n    }\n    return component;\n  }\n};\n\n// Transforms styles (and corresponding entities) for formatting reply quotes.\nfunction quotePreviewFmt(fmt, ent) {\n  let tp = fmt.tp;\n  if (!tp) {\n    if (!ent || !ent.tp) {\n      return [null, null];\n    }\n    tp = ent.tp;\n  }\n  const new_fmt = {at: fmt.at, len: fmt.len, tp: fmt.tp};\n  switch (tp) {\n    case 'BR':\n      // Replace new line with a space.\n      return [null, null];\n    case 'HL':\n      return [new_fmt, ent];\n    case 'LN':\n      // Disable links in previews.\n      return [null, null];\n    case 'IM':\n      // Keep images as is.\n      return [new_fmt, ent];\n    case 'BN':\n      new_fmt.tp = null;\n      return [new_fmt, { tp: 'IC', data: { orig: 'BN', iconName: 'button'}}];\n    case 'FM':\n      new_fmt.tp = null;\n      return [new_fmt, {tp: 'IC', data: { orig: 'FM', iconName: 'form'}}];\n    case 'RW':\n      return [null, null];\n    case 'EX':\n      // Make it an icon.\n      new_fmt.tp = null;\n      if (new_fmt.at == -1) {\n        // Render it normally.\n        new_fmt.at = 0;\n      }\n      return [new_fmt, {tp: 'IC', data: { orig: 'EX', iconName: 'attachment'}}];\n    case 'QQ':\n      // Quote/citation.\n      return [null,null];\n    default:\n      return [new_fmt, ent];\n  }\n}\n\n// Converts Drafty elements into React classes.\n// 'this' is set by the caller.\nfunction draftyFormatter(style, data, values, key) {\n  if (style == 'EX') {\n    // attachments are handled elsewhere.\n    return null;\n  }\n\n  let el = Drafty.tagName(style);\n  if (el) {\n    const { formatMessage } = this.props.intl;\n    let attr = Drafty.attrValue(style, data) || {};\n    attr.key = key;\n    switch (style) {\n      case 'HL':\n        // Highlighted text. Assign class name.\n        attr.className = 'highlight';\n        break;\n      case 'IM':\n        // Additional processing for images\n        if (data) {\n          attr.className = 'inline-image';\n          const dim = fitImageSize(data.width, data.height,\n            this.props.hasOwnProperty('viewportWidth') ? Math.min(this.props.viewportWidth - REM_SIZE * 6.5, REM_SIZE * 34.5) : REM_SIZE * 34.5,\n            REM_SIZE * 24, false) ||\n            {dstWidth: BROKEN_IMAGE_SIZE, dstHeight: BROKEN_IMAGE_SIZE};\n          attr.style = {\n            width: dim.dstWidth + 'px',\n            height: dim.dstHeight + 'px',\n            // Looks like a Chrome bug: broken image does not respect 'width' and 'height'.\n            minWidth: dim.dstWidth + 'px',\n            minHeight: dim.dstHeight + 'px'\n          };\n          if (!Drafty.isProcessing(data)) {\n            attr.src = this.props.tinode.authorizeURL(sanitizeImageUrl(attr.src));\n            attr.alt = data.name;\n            if (attr.src) {\n              if (Math.max(data.width || 0, data.height || 0) > IMAGE_THUMBNAIL_DIM) {\n                // Allow previews for large enough images.\n                attr.onClick = this.handleImagePreview;\n                attr.className += ' image-clickable';\n              }\n              attr.loading = 'lazy';\n            } else {\n              attr.src = 'img/broken_image.png';\n            }\n          } else {\n            // Use custom element instead of <img>.\n            el = UploadingImage;\n          }\n        }\n        break;\n      case 'BN':\n        // Button\n        attr.onClick = this.handleFormButtonClick;\n        let inner = React.Children.map(values, (child) => {\n          return typeof child == 'string' ? child : undefined;\n        });\n        if (!inner || inner.length == 0) {\n          inner = [attr.name]\n        }\n        // Get text which will be sent back when the button is clicked.\n        attr['data-title'] = inner.join('');\n        break;\n      case 'MN':\n        // Mention\n        if (data && data.hasOwnProperty('colorId')) {\n          attr.className = 'mn-dark-color' + data.colorId;\n        }\n        break;\n      case 'FM':\n        // Form\n        attr.className = 'bot-form';\n        break;\n      case 'RW':\n        // Form element formatting is dependent on element content.\n        break;\n      case 'QQ':\n        // Quote/citation.\n        attr.className = 'reply-quote'\n        attr.onClick = this.handleQuoteClick;\n        break;\n      case 'IC':\n        // Icon.\n        if (data.iconName == 'button') {\n          attr.className = 'flat-button faux';\n        } else {\n          let iconName;\n          let iconTitle;\n          switch (data.iconName) {\n            case 'form':\n              iconName = 'dashboard';\n              iconTitle = 'drafty_form';\n              break;\n            case 'attachment':\n              iconName = 'attachment';\n              iconTitle = 'drafty_attachment';\n              break;\n            default:\n              break;\n          }\n          el = React.Fragment;\n          if (iconName && iconTitle) {\n            const iconKey = data.orig.toLowerCase();\n            values = [<i key={iconKey} className=\"material-icons\">{iconName}</i>,\n              formatMessage(messages[iconTitle])].concat(' ', values || []);\n          } else {\n            values = [];\n          }\n        }\n        break;\n      default:\n        if (el == '_UNKN') {\n          // Unknown element.\n          el = React.Fragment;\n          values = [<i className=\"material-icons gray\">extension</i>, ' '].concat(values || []);\n        }\n        break;\n    }\n    return React.createElement(el, attr, values);\n  } else {\n    return values;\n  }\n};\n\nexport default injectIntl(MessagesView);\n","// The <- button to be displayed in title bars.\nimport React from 'react';\n\nexport default class ButtonBack extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onBack();}}>\n        <i className=\"material-icons\">arrow_back</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class MenuContacts extends React.PureComponent {\n  render() {\n    return (\n      <div>\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onNewTopic();}}><i className=\"material-icons\">chat</i></a>\n        &nbsp;\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nexport default class MenuStart extends React.PureComponent {\n  render() {\n    return (\n        <div>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSignUp();}}><i className=\"material-icons\">person_add</i></a>\n          &nbsp;\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n        </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\nimport ButtonBack from './button-back.jsx';\nimport ContactBadges from './contact-badges.jsx';\nimport MenuContacts from './menu-contacts.jsx';\nimport MenuStart from './menu-start.jsx';\n\nimport { sanitizeImageUrl } from '../lib/utils.js';\n\nexport default class SideNavbar extends React.PureComponent {\n  render() {\n    const icon_badges = [];\n    if (this.props.trustedBadges) {\n      this.props.trustedBadges.map((b) => {\n        icon_badges.push({icon: b, color: 'badge-inv'});\n      });\n    }\n    let avatar = null;\n    if (this.props.tinode) {\n      avatar = this.props.tinode.authorizeURL(sanitizeImageUrl(this.props.avatar));\n    }\n    return (\n      <div id=\"side-caption-panel\" className=\"caption-panel\">\n        {this.props.onCancel ? <ButtonBack onBack={this.props.onCancel} /> : null}\n        {avatar ?\n          <div id=\"self-avatar\" className=\"avatar-box\">\n            <LetterTile\n              tinode={this.props.tinode}\n              avatar={avatar}\n              topic={this.props.myUserId}\n              title={this.props.title} />\n          </div>\n          :\n          null}\n        <div id=\"sidepanel-title\" className=\"panel-title\">{this.props.title}<ContactBadges badges={icon_badges}/></div>\n        {this.props.state === 'login' ?\n            <MenuStart onSignUp={this.props.onSignUp} onSettings={this.props.onSettings} /> :\n          this.props.state === 'contacts' ?\n            <MenuContacts onNewTopic={this.props.onNewTopic} onSettings={this.props.onSettings} /> :\n          null}\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport BadgeList from '../widgets/badge-list.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH } from '../config.js';\n\nfunction _clip(str, length) {\n  return str && str.substring(0, length);\n}\n\nexport default class AccountSettingsView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    this.state = {\n      fullName: _clip(me.public ? me.public.fn : undefined, MAX_TITLE_LENGTH),\n      description: _clip(me.public ? me.public.note : undefined, MAX_TOPIC_DESCRIPTION_LENGTH),\n      avatar: makeImageUrl(me.public ? me.public.photo : null)\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          <a href=\"#\" className=\"flat-button float-right\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('general');}}>\n            <i className=\"material-icons\">edit</i>&nbsp;\n            <FormattedMessage id=\"button_edit\" defaultMessage=\"Edit\" description=\"Call to action [Edit]\" />\n          </a>\n          <center>\n            <AvatarUpload\n              tinode={this.props.tinode}\n              avatar={this.state.avatar}\n              readOnly={true}\n              uid={this.props.myUserId}\n              title={this.state.fullName} />\n          </center>\n          <div className=\"group\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n                description=\"Label for full name editing\" />\n            </label>\n            <div className=\"large ellipsized\">{this.state.fullName}</div>\n          </div>\n          <div className=\"group\">\n            <label className=\"small\"><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n              description=\"Label for user address (ID)\" /></label>&nbsp;\n            <tt>{this.props.myUserId}</tt>\n          </div>\n          <div className=\"group\">\n            <BadgeList trustedBadges={this.props.trustedBadges} />\n          </div>\n          {this.state.description ?\n            <div className=\"group\">\n              <label className=\"small\">\n                <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                  description=\"Label for editing topic description\" />\n              </label>\n              <div>{this.state.description}</div>\n            </div> : null}\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('notif');}}>\n            <i className=\"material-icons\">notifications</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_notifications\"\n              defaultMessage=\"Notifications\" description=\"Sidepanel title for AccNotificationsView.\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('security');}}>\n            <i className=\"material-icons\">security</i>&nbsp;<FormattedMessage id=\"button_security\"\n              defaultMessage=\"Security\" description=\"Navigaton button for security panel.\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('support');}}>\n            <i className=\"material-icons\">contact_support</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_support\"\n              defaultMessage=\"Support\" description=\"Sidepanel title for AccSupportView.\" />\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","/* ContactsView holds all contacts-related stuff */\nimport React from 'react';\nimport { FormattedMessage, defineMessages } from 'react-intl';\n\nimport ContactList from '../widgets/contact-list.jsx';\n\nimport { updateFavicon } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  archived_contacts_title: {\n    id: \"archived_contacts\",\n    defaultMessage: \"Archived contacts ({count})\",\n    description: \"Label for archived chats\"\n  }\n});\n\nexport default class ContactsView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAction = this.handleAction.bind(this);\n\n    this.state = ContactsView.deriveStateFromProps(props);\n  }\n\n  static deriveStateFromProps(props) {\n    const contacts = [];\n    let unreadThreads = 0;\n    let archivedCount = 0;\n    props.chatList.map((c) => {\n      const blocked = c.acs && !c.acs.isJoiner();\n      // Show only blocked contacts only when props.blocked == true.\n      if (blocked && props.blocked) {\n        contacts.push(c);\n      }\n      if (blocked || props.blocked) {\n        return;\n      }\n\n      if (c.private && c.private.arch) {\n        if (props.archive) {\n          contacts.push(c);\n        } else {\n          archivedCount ++;\n        }\n      } else if (!props.archive) {\n        contacts.push(c);\n        unreadThreads += c.unread > 0 ? 1 : 0;\n      }\n    });\n\n    contacts.sort((a, b) => {\n      return (b.touched || 0) - (a.touched || 0);\n    });\n\n    if (archivedCount > 0) {\n      contacts.push({\n        action: 'archive',\n        title: messages.archived_contacts_title,\n        values: {count: archivedCount}\n      });\n    }\n\n    return {\n      contactList: contacts,\n      unreadThreads: unreadThreads\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chatList != this.props.chatList ||\n        prevProps.archive != this.props.archive ||\n        prevProps.blocked != this.props.blocked) {\n      const newState = ContactsView.deriveStateFromProps(this.props);\n      this.setState(newState);\n      if (newState.unreadThreads != prevState.unreadThreads) {\n        updateFavicon(newState.unreadThreads);\n      }\n    }\n  }\n\n  handleAction(action_ignored) {\n    this.props.onShowArchive();\n  }\n\n  render() {\n    return (\n      <FormattedMessage id=\"contacts_not_found\"\n        defaultMessage=\"You have no chats<br />¯∖_(ツ)_/¯\"\n        description=\"HTML message shown in ContactList when no contacts are found\">{\n        (no_contacts) => <ContactList\n          tinode={this.props.tinode}\n          connected={this.props.connected}\n          contacts={this.state.contactList}\n          emptyListMessage={no_contacts}\n          topicSelected={this.props.topicSelected}\n          myUserId={this.props.myUserId}\n          showOnline={true}\n          showUnread={true}\n          onTopicSelected={this.props.onTopicSelected}\n          showContextMenu={this.props.showContextMenu}\n          onAction={this.handleAction} />\n      }</FormattedMessage>\n    );\n  }\n};\n","// Helper functions for storing values in localStorage.\n// By default localStorage can store only strings, not objects or other types.\n\nexport default class LocalStorageUtil {\n  // Replace old object with the new one.\n  static setObject(key, value) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n\n  // Get stored object.\n  static getObject(key) {\n    const value = localStorage.getItem(key);\n    return value && JSON.parse(value);\n  }\n\n  // Partially or wholly update stored object.\n  static updateObject(key, value) {\n    const oldVal = this.getObject(key);\n    this.setObject(key, Object.assign(oldVal || {}, value));\n  }\n\n  // Just a wrapper.\n  static removeItem(key) {\n    localStorage.removeItem(key);\n  }\n}\n","// Account registration.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport { theCard } from '../lib/utils.js';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class CreateAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: '',\n      password: '',\n      email: '',\n      fn: '', // full/formatted name\n      imageDataUrl: null,\n      errorCleared: false,\n      saveToken: LocalStorageUtil.getObject('keep-logged-in')\n    };\n\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(password) {\n    this.setState({password: password});\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value})\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleToggleSaveToken() {\n    LocalStorageUtil.setObject('keep-logged-in', !this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({errorCleared: false});\n    this.props.onCreateAccount(\n      this.state.login.trim(),\n      this.state.password.trim(),\n      theCard(this.state.fn.trim().substring(0, MAX_TITLE_LENGTH), this.state.imageDataUrl),\n      {'meth': 'email', 'val': this.state.email});\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form className=\"panel-form-column\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n              description=\"Placeholer for username/login\">{\n              (login_prompt) => <input type=\"text\" placeholder={login_prompt} autoComplete=\"user-name\"\n                value={this.state.login} onChange={this.handleLoginChange} required autoFocus />\n            }</FormattedMessage>\n            <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n              description=\"Placeholder/prompt for entering password\">{\n              (password_prompt) => <VisiblePassword placeholder={password_prompt} autoComplete=\"new-password\"\n                value={this.state.password} onFinished={this.handlePasswordChange}\n                required={true} />\n            }</FormattedMessage>\n          </div>\n          <AvatarUpload\n            tinode={this.props.tinode}\n            onImageChanged={this.handleImageChanged}\n            onError={this.props.onError} />\n        </div>\n        <div  className=\"panel-form-row\">\n          <FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n            description=\"Input placeholder for person's full name\">{\n            (full_name_prompt) => <input type=\"text\" placeholder={full_name_prompt} autoComplete=\"name\"\n              value={this.state.fn} onChange={this.handleFnChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <FormattedMessage id=\"email_prompt\" defaultMessage=\"Email, e.g. jdoe@example.com\"\n            description=\"Input placeholder for email entry\">{\n            (email_prompt) => <input type=\"email\" placeholder={email_prompt} autoComplete=\"email\"\n              value={this.state.email} onChange={this.handleEmailChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n            description=\"Label for a checkbox\">{\n            (stay_logged_in) => <label htmlFor=\"save-token\">&nbsp;{stay_logged_in}</label>\n          }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_up\" defaultMessage=\"Sign up\"\n              description=\"Create account button [Sign Up]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\n\nexport default class EditAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckboxClick = this.handleCheckboxClick.bind(this);\n  }\n\n  handleCheckboxClick(what, checked) {\n    if (what == 'sound') {\n      this.props.onToggleMessageSounds(checked);\n    } else if (what == 'alert') {\n      this.props.onTogglePushNotifications(checked);\n    } else if (what == 'incognito') {\n      this.props.onToggleIncognitoMode(checked);\n    }\n  }\n\n  render() {\n    return (\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"message-sound\">\n              <FormattedMessage id=\"label_message_sound\" defaultMessage=\"Message sound:\"\n                description=\"Label for message sounds toggle\" />\n            </label>\n            <CheckBox name=\"sound\" id=\"message-sound\"\n              checked={this.props.messageSounds} onChange={this.handleCheckboxClick} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"desktop-alerts\">\n            {this.props.desktopAlertsEnabled ?\n              <FormattedMessage id=\"label_push_notifications\" defaultMessage=\"Notification alerts:\"\n                description=\"Label for push notifications switch\" />\n              :\n              <FormattedMessage id=\"label_push_notifications_disabled\"\n                defaultMessage=\"Notification alerts (requires HTTPS):\"\n                description=\"Label for push notifications switch\" />\n            }\n            </label>\n            <CheckBox name=\"alert\" id=\"desktop-alerts\"\n              checked={this.props.desktopAlerts}\n              onChange={this.props.desktopAlertsEnabled ? this.handleCheckboxClick : null} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"incognito-mode\">\n              <FormattedMessage id=\"label_incognito_mode\" defaultMessage=\"Incognito mode:\"\n                description=\"Label for incognito mode toggle\" />\n            </label>\n            <CheckBox name=\"incognito\" id=\"incognito-mode\"\n              checked={this.props.incognitoMode} onChange={this.handleCheckboxClick} />\n          </div>\n        </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\n\nconst messages = defineMessages({\n  delete_account: {\n    id: 'delete_account',\n    defaultMessage: 'Delete account',\n    description: 'Title for delete account warning'\n  },\n  delete_account_warning: {\n    id: 'delete_account_warning',\n    defaultMessage: 'Are you sure you want to delete your account? It cannot be undone.',\n    description: 'Warning message when deleting an account'\n  }\n});\n\nclass AccSecurityView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    let blockedCount = 0;\n    me.contacts((c) => {\n      if (c.acs && !c.acs.isJoiner()) {\n        blockedCount ++;\n      }\n    });\n    const defacs = me.getDefaultAccess();\n    this.state = {\n      auth: defacs ? defacs.auth : null,\n      anon: defacs ? defacs.anon : null,\n      showPermissionEditorFor: undefined,\n      blockedCount: blockedCount,\n    };\n\n    this.handlePasswordUpdate = this.handlePasswordUpdate.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n  }\n\n  handlePasswordUpdate(pwd) {\n    this.setState({password: pwd});\n    this.props.onUpdatePassword(pwd);\n  }\n\n  handleLaunchPermissionsEditor(which) {\n    this.setState({\n      showPermissionEditorFor: which,\n      editedPermissions: this.state[which]\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handlePermissionsChanged(perm) {\n    let defacs = {};\n    defacs[this.state.showPermissionEditorFor] = perm;\n    this.props.onUpdateAccountDesc('me', undefined, undefined, defacs);\n\n    let newState = {showPermissionEditorFor: undefined};\n    newState[this.state.showPermissionEditorFor] = perm;\n    this.setState(newState);\n  }\n\n  handleDeleteAccount(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.delete_account), // title\n      formatMessage(messages.delete_account_warning), // content\n      (() => { this.props.onDeleteAccount(); }), // onConfirm\n      null, // use default text \"OK\"\n      true, // Show Reject button\n      null  // use default text \"Cancel\"\n    );\n  }\n\n  render() {\n    return (\n      <React.Fragment>{this.state.showPermissionEditorFor ?\n        <PermissionsEditor\n          mode={this.state.editedPermissions}\n          skip=\"O\"\n          onSubmit={this.handlePermissionsChanged}\n          onCancel={this.handleHidePermissionsEditor} />\n        :\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_password\" defaultMessage=\"Password\"\n                  description=\"Label for password editing\" />\n            </label>\n            <div>\n              <FormattedMessage id=\"password_unchanged_prompt\" defaultMessage=\"Unchanged\"\n                description=\"Message in editor while password is unchanged\">{\n                (password_unchanged) => <InPlaceEdit\n                  placeholder={password_unchanged}\n                  type=\"password\"\n                  onFinished={this.handlePasswordUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <a href=\"#\" className=\"danger flat-button\" onClick={(e) => {e.preventDefault(); this.props.onLogout();}}>\n              <i className=\"material-icons\">exit_to_app</i> &nbsp;<FormattedMessage id=\"button_logout\"\n                defaultMessage=\"Logout\" description=\"Button [Logout]\" />\n            </a>\n            <a href=\"#\" className=\"danger flat-button\" onClick={(e) => {this.handleDeleteAccount(e);}}>\n              <i className=\"material-icons\">delete</i> &nbsp;<FormattedMessage id=\"button_delete_account\"\n                defaultMessage=\"Delete account\" description=\"Button [Delete account]\" />\n            </a>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <div>\n              <label className=\"small\">\n                <FormattedMessage id=\"label_default_access_mode\" defaultMessage=\"Default access mode:\"\n                description=\"Label for default access mode\" />\n              </label>\n            </div>\n            <div className=\"quoted\">\n              <div>Auth: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>{this.state.auth}</tt></div>\n              <div>Anon: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>{this.state.anon}</tt></div>\n            </div>\n          </div>\n          {this.state.blockedCount > 0 ?\n            <>\n              <div className=\"hr\" />\n              <div className=\"panel-form-row\">\n                <i className=\"material-icons\">block</i>&nbsp;\n                <a href=\"#\" className=\"gray\" onClick={(e) => {e.preventDefault(); this.props.onShowBlocked();}}>\n                  <FormattedMessage id=\"blocked_contacts_link\" defaultMessage=\"Blocked contacts ({count})\"\n                    values={{ count: this.state.blockedCount }} description=\"Blocked contacts link\" />\n                </a>\n              </div>\n            </>\n            : null }\n        </div>\n      }</React.Fragment>\n    );\n  }\n};\n\nexport default injectIntl(AccSecurityView);\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME, LINK_CONTACT_US, LINK_PRIVACY_POLICY, LINK_TERMS_OF_SERVICE } from '../config.js';\n\nexport default class AccSupportView extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          <a href={LINK_CONTACT_US} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">email</i> &nbsp;<FormattedMessage id=\"link_contact_us\"\n              defaultMessage=\"Contact Us\" description=\"Ancor text for contacting us by email\" />\n          </a>\n          <a href={LINK_TERMS_OF_SERVICE} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">description</i> &nbsp;<FormattedMessage id=\"link_terms_of_service\"\n              defaultMessage=\"Terms of Service\" description=\"Ancor text for terms of service link\" />\n          </a>\n          <a href={LINK_PRIVACY_POLICY} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">policy</i> &nbsp;<FormattedMessage id=\"link_privacy_policy\"\n              defaultMessage=\"Privacy Policy\" description=\"Ancor text for privacy policy link\" />\n          </a>\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\"\n              description=\"Label for a client version\" /></label>\n            {APP_NAME}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_sdk\" defaultMessage=\"SDK:\" /></label>\n            {Tinode.getLibrary()}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\"\n              description=\"Label for a server version\" /></label>\n            {this.props.serverVersion}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server_address\" defaultMessage=\"Server address:\" /></label>\n            {this.props.serverAddress}\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","// Login form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\n\nexport default class LoginView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: props.login,\n      password: '',\n      hostName: props.serverAddress,\n      saveToken: props.persist\n    };\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  handleToggleSaveToken() {\n    this.props.onPersistenceChange(!this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onLogin(this.state.login.trim(), this.state.password.trim());\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form id=\"login-form\" onSubmit={this.handleSubmit}>\n        <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n          description=\"Placeholer for username/login\">\n        {\n          (login_prompt) => <input type=\"text\" id=\"inputLogin\"\n            placeholder={login_prompt}\n            autoComplete=\"username\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"none\"\n            value={this.state.login}\n            onChange={this.handleLoginChange}\n            required autoFocus />\n        }\n        </FormattedMessage>\n        <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n          description=\"Placeholder/prompt for entering password\">\n        {\n          (password_prompt) => <VisiblePassword type=\"password\" id=\"inputPassword\"\n            placeholder={password_prompt}\n            autoComplete=\"current-password\"\n            value={this.state.password}\n            onChange={this.handlePasswordChange}\n            required={true} />\n        }\n        </FormattedMessage>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <label htmlFor=\"save-token\">&nbsp;\n            <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n              description=\"Label for a checkbox\" />\n          </label>\n          <a href=\"#reset\">\n            <FormattedMessage id=\"forgot_password_link\" defaultMessage=\"Forgot password?\"\n              description=\"Link to Reset password form\" />\n          </a>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_in\" defaultMessage=\"Sign in\"\n              description=\"Button [Sign In]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n/* END Login */\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  invalid_id: {\n    id: 'error_invalid_id',\n    defaultMessage: 'Invalid ID',\n    description: 'Error message'\n  }\n});\n\nclass NewTopicById extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      groupId: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({groupId: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.groupId) {\n      const name = this.state.groupId.trim();\n      const prefix = name.substr(0, 3);\n      if (name.length > 3 && ['usr', 'grp', 'chn'].includes(prefix)) {\n        this.props.onSubmit(name);\n      } else {\n        this.props.onError(this.props.intl.formatMessage(messages.invalid_id), 'err');\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"group_user_id_prompt\" defaultMessage=\"Group or User ID\"\n          description=\"Prompt for entering user or group ID\">{\n          (prompt) => <input type=\"text\" placeholder={prompt}\n            value={this.state.groupId} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required autoFocus />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_subscribe\" defaultMessage=\"Subscribe\"\n              description=\"Button [Subscribe]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicById);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from './avatar-upload.jsx';\nimport CheckBox from './checkbox.jsx';\nimport TagManager from './tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH } from '../config.js';\n\nexport default class NewTopicGroup extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.fullName = React.createRef();\n\n    this.state = {\n      fullName: '', // full/formatted name\n      private: '',\n      description: '',\n      imageDataUrl: null,\n      tags: [],\n      isChannel: false\n    };\n\n    this.handleFieldEdit = this.handleFieldEdit.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleTagsChanged = this.handleTagsChanged.bind(this);\n    this.handleChannelToggle = this.handleChannelToggle.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    // this.fullName.current.focus();\n  }\n\n  handleFieldEdit(name, e) {\n    this.setState({[name]: e.target.value || ''});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleTagsChanged(tags) {\n    this.setState({tags: tags});\n  }\n\n  handleChannelToggle() {\n    this.setState({isChannel: !this.state.isChannel});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const fn = this.state.fullName.trim().substring(0, MAX_TITLE_LENGTH);\n    const comment = this.state.private.trim().substring(0, MAX_TITLE_LENGTH);\n    const description = this.state.description.trim().substring(0, MAX_TOPIC_DESCRIPTION_LENGTH);\n    if (fn) {\n      this.props.onSubmit(fn, description, this.state.imageDataUrl, comment, this.state.tags, this.state.isChannel);\n    }\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n    return (\n      <form className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-column\">\n          <center>\n            <AvatarUpload\n              tinode={this.props.tinode}\n              onError={this.props.onError}\n              onImageChanged={this.handleImageChanged} />\n          </center>\n          <div className=\"group\">\n            <label className=\"small\" htmlFor=\"new-topic-fn\">\n              <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                description=\"Label for editing topic name\" />\n            </label>\n            <FormattedMessage id=\"topic_name_editing_placeholder\" defaultMessage=\"Freeform name of the group\"\n              description=\"Prompt for entering topic name\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-fn\" placeholder={placeholder}\n                ref={this.fullName} value={this.state.fullName} onChange={this.handleFieldEdit.bind(this, 'fullName')}\n                autoFocus required tabIndex={0} />\n            }</FormattedMessage>\n          </div>\n          <div className=\"group\">\n            <label className=\"small\" htmlFor=\"new-topic-priv\">\n              <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                description=\"Label for editing 'private'\" />\n            </label>\n            <FormattedMessage id=\"private_editing_placeholder\" defaultMessage=\"Visible to you only\"\n              description=\"Placeholder for editing 'private'\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-priv\" placeholder={placeholder}\n                value={this.state.private} onChange={this.handleFieldEdit.bind(this, 'private')} tabIndex={1} />\n            }</FormattedMessage>\n          </div>\n          <div className=\"group\">\n            <label className=\"small\" htmlFor=\"new-topic-desc\">\n              <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                description=\"Label for editing topic description\" />\n            </label>\n            <FormattedMessage id=\"description_editing_placeholder\" defaultMessage=\"Description (optional)\"\n              description=\"Placeholder for editing topic description\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-desc\" placeholder={placeholder}\n                value={this.state.description} onChange={this.handleFieldEdit.bind(this, 'description')} tabIndex={2} />\n            }</FormattedMessage>\n          </div>\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox checked={this.state.isChannel} tabIndex={3} onChange={this.handleChannelToggle} />&nbsp;\n          <label onClick={this.handleChannelToggle}><FormattedMessage id=\"channel_prompt\"\n            defaultMessage=\"This is a channel\"\n            description=\"Checkbox label when creating a channel\" /></label>\n        </div>\n        <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (search & discovery)\"\n          description=\"Section title for TagManager\">{\n          (title) => <TagManager\n            tinode={this.props.tinode}\n            tags={this.state.tags}\n            activated={true}\n            onTagsChanged={this.handleTagsChanged}\n            tabIndex={4}\n            title={title} />\n        }</FormattedMessage>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses}>\n            <FormattedMessage id=\"button_create\" defaultMessage=\"Create\"\n              description=\"Button [Create]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nexport default class SearchContacts extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      edited: false,\n      search: ''\n    };\n\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  componentWillUnmount() {\n    if (this.state.edited) {\n      this.setState({search: '', edited: false});\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n  }\n\n  handleSearchChange(e) {\n    this.setState({search: e.target.value});\n  }\n\n  handleSearch(e) {\n    e.preventDefault();\n    var query = this.state.search.trim();\n    this.setState({edited: (query.length > 0)});\n    this.props.onSearchContacts(query.length > 0 ? query : Tinode.DEL_CHAR);\n  }\n\n  handleClear(e) {\n    e.preventDefault();\n    if (this.state.edited) {\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n    this.setState({search: '', edited: false});\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Enter') {\n      this.handleSearch(e);\n    } else if (e.key === 'Escape') {\n      this.handleClear();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <i className=\"material-icons search\">search</i>\n          <FormattedMessage id=\"search_placeholder\" defaultMessage=\"List like email:alice@example.com, tel:17025550003...\"\n            description=\"Placeholder in contacts search field\">{\n            (search_placeholder) => <input className=\"search\" type=\"text\"\n              placeholder={search_placeholder}\n              value={this.state.search} onChange={this.handleSearchChange}\n              onKeyDown={this.handleKeyDown} required autoFocus />\n          }</FormattedMessage>\n          <a href=\"#\" onClick={this.handleClear}>\n            <i className=\"material-icons\">close</i>\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","// Create new topic and invite users or send an invite.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport ContactList from '../widgets/contact-list.jsx';\nimport NewTopicById from '../widgets/new-topic-by-id.jsx';\nimport NewTopicGroup from '../widgets/new-topic-group.jsx';\nimport SearchContacts from '../widgets/search-contacts.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\nimport { theCard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  search_for_contacts: {\n    id: \"search_for_contacts\",\n    defaultMessage: \"Use search to find contacts\",\n    description: \"Text shown in contacts view when user entered no search query.\"\n  },\n  search_no_results: {\n    id: \"search_no_results\",\n    defaultMessage: \"Search returned no results\",\n    description: \"Text shown in contacts view when query returned no results.\"\n  }\n});\n\nclass NewTopicView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tabSelected: 'p2p',\n      searchQuery: null\n    };\n\n    this.handleTabClick = this.handleTabClick.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleNewGroupSubmit = this.handleNewGroupSubmit.bind(this);\n    this.handleGroupByID = this.handleGroupByID.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.onInitFind();\n  }\n\n  handleTabClick(e) {\n    e.preventDefault();\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'tab', e.currentTarget.dataset.id));\n    this.setState({tabSelected: e.currentTarget.dataset.id});\n  }\n\n  handleSearchContacts(query) {\n    this.props.onSearchContacts(query);\n    this.setState({searchQuery: Tinode.isNullValue(query) ? null : query});\n  }\n\n  handleContactSelected(uid) {\n    if (this.state.tabSelected == 'p2p') {\n      HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n      this.props.onCreateTopic(uid);\n    }\n  }\n\n  handleNewGroupSubmit(name, description, dataUrl, priv, tags, isChannel) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(undefined,\n      {public: theCard(name, dataUrl, null, description), private: priv, tags: tags}, isChannel);\n  }\n\n  handleGroupByID(topicName) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(topicName);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const no_contacts_placeholder = formatMessage(this.state.searchQuery ?\n      messages.search_no_results : messages.search_for_contacts);\n    return (\n      <div className=\"flex-column\">\n        <ul className=\"tabbar\">\n          <li className={this.state.tabSelected === \"p2p\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"p2p\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_find_user\" defaultMessage=\"find\"\n                description=\"Tab title Find\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"grp\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"grp\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_new_group\" defaultMessage=\"new group\"\n                description=\"Tab title New Group\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"byid\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"byid\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_group_by_id\" defaultMessage=\"by id\"\n                description=\"Tab title Find topic by ID\" />\n            </a>\n          </li>\n        </ul>\n        {this.state.tabSelected === 'grp' ?\n          <NewTopicGroup\n            tinode={this.props.tinode}\n            onSubmit={this.handleNewGroupSubmit} /> :\n          this.state.tabSelected === 'byid' ?\n            <NewTopicById\n              onSubmit={this.handleGroupByID}\n              onError={this.props.onError} /> :\n            <div className=\"flex-column\">\n              <SearchContacts\n                type=\"p2p\"\n                onSearchContacts={this.handleSearchContacts} />\n              <ContactList\n                tinode={this.props.tinode}\n                contacts={this.props.searchResults}\n                myUserId={this.props.myUserId}\n                emptyListMessage={no_contacts_placeholder}\n                showOnline={false}\n                showUnread={false}\n                showContextMenu={false}\n                onTopicSelected={this.handleContactSelected} />\n            </div>}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicView);\n","// A password reset form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\n\nexport default class PasswordResetView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: '',\n      sent: false\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n  }\n\n  componentDidMount() {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    this.setState({token: parsed.params.token, scheme: parsed.params.scheme});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.token) {\n      this.props.onReset(this.state.scheme, this.state.password.trim(), this.state.token);\n    } else if (this.state.sent) {\n      this.props.onCancel();\n    } else {\n      const email = this.state.email.trim();\n      this.setState({email: email});\n      this.props.onRequest('email', email).then(() => {\n        this.setState({sent: true});\n      });\n    }\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  render() {\n    return (\n      <form id=\"password-reset-form\" onSubmit={this.handleSubmit}>\n        {(this.state.token && this.state.scheme) ?\n          <FormattedMessage id=\"new_password_placeholder\" defaultMessage=\"Enter new password\"\n            description=\"Placeholder for entering new password\">{\n            (placeholder) => <VisiblePassword\n              placeholder={placeholder}\n              autoComplete=\"new-password\"\n              value={this.state.password}\n              required={true} autoFocus={true}\n              onChange={this.handlePasswordChange} />\n          }</FormattedMessage>\n        : this.state.sent ?\n          <>\n            <br/>\n            <center><i className=\"material-icons huge green\">task_alt</i></center>\n            <br/>\n            <center><FormattedMessage id=\"password_reset_email_sent\"\n              defaultMessage=\"An email has been sent to {email}. Follow the directions in the email to reset your password.\"\n              values={{ email: <tt>{this.state.email}</tt> }}\n              description=\"Notification that the email with password reset instructions has been sent\" /></center>\n          </>\n        :\n          <>\n            <label htmlFor=\"inputEmail\">\n              <FormattedMessage id=\"label_reset_password\"\n                defaultMessage=\"Send a password reset email:\"\n                description=\"Label for password reset field\" />\n            </label>\n            <FormattedMessage id=\"credential_email_prompt\" defaultMessage=\"Your registration email\"\n              description=\"Placeholder for entering email\">{\n              (placeholder) => <input type=\"email\" id=\"inputEmail\"\n                placeholder={placeholder}\n                autoComplete=\"email\"\n                value={this.state.email}\n                onChange={this.handleEmailChange}\n                required autoFocus />\n            }</FormattedMessage>\n          </>\n        }\n        <div className=\"dialog-buttons\">\n          <button className=\"primary\" type=\"submit\">{\n            (this.state.token && this.state.scheme) ?\n            <FormattedMessage id=\"button_reset\" defaultMessage=\"Reset\" description=\"Button [Reset]\" />\n            : this.state.sent ?\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\"\n              description=\"Button [OK]\" />\n            :\n            <FormattedMessage id=\"button_send_request\" defaultMessage=\"Send request\"\n              description=\"Button [Send request]\" />\n          }</button>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react';\n\nimport { KNOWN_HOSTS } from '../config.js';\n\n/* Combobox for selecting host name */\n\nexport default class HostSelector extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hostName: props.serverAddress,\n      changed: false\n    };\n\n    this.handleHostNameChange = this.handleHostNameChange.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handleHostNameChange(e) {\n    this.setState({hostName: e.target.value, changed: true});\n  }\n\n  handleEditingFinished() {\n    if (this.state.changed) {\n      this.setState({changed: false});\n      this.props.onServerAddressChange(this.state.hostName.trim());\n    }\n  }\n\n  render() {\n    var hostOptions = [];\n    for (let key in KNOWN_HOSTS) {\n      let item = KNOWN_HOSTS[key];\n      hostOptions.push(\n        <option key={item} value={item} />\n      );\n    }\n    return (\n      <div className=\"panel-form-row\">\n        <input type=\"search\" id=\"host-name\" placeholder={this.props.hostName} list=\"known-hosts\"\n          className=\"quoted\" value={this.state.hostName} onChange={this.handleHostNameChange}\n          onBlur={this.handleEditingFinished} required />\n        <datalist id=\"known-hosts\">\n          {hostOptions}\n        </datalist>\n      </div>\n    );\n  }\n}\n","// Tinode config panel.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport HostSelector from '../widgets/host-selector.jsx';\n\nexport default class SettingsView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transport: props.transport || 'def',\n      serverAddress: props.serverAddress,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleTransportSelected = this.handleTransportSelected.bind(this);\n    this.handleServerAddressChange = this.handleServerAddressChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onUpdate({\n      transport: this.state.transport,\n      serverAddress: this.state.serverAddress\n    });\n  }\n\n  handleTransportSelected(e) {\n    this.setState({transport: e.currentTarget.value});\n  }\n\n  handleServerAddressChange(name) {\n    this.setState({serverAddress: name});\n  }\n\n  render() {\n    const names = {def: \"default\", ws: \"websocket\", lp: \"long polling\"};\n    const transportOptions = [];\n    ['def', 'ws', 'lp'].map((item) => {\n      const id = 'transport-' + item;\n      const name = names[item];\n      transportOptions.push(\n        <li key={item}>\n          <input type=\"radio\" id={id} name=\"transport-select\" value={item}\n            checked={this.state.transport === item}\n            onChange={this.handleTransportSelected} />\n          <label htmlFor={id}>{name}</label>\n        </li>\n      );\n    });\n\n    return (\n      <form id=\"settings-form\" className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_server_to_use\" defaultMessage=\"Server to use:\"\n              description=\"Label for server selector in SettingsView\" />\n          </label>\n        </div>\n        <HostSelector serverAddress={this.state.serverAddress}\n          onServerAddressChange={this.handleServerAddressChange} />\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_wire_transport\" defaultMessage=\"Wire transport:\"\n              description=\"Label for wire transport selection in SettingsView\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ul className=\"quoted\">\n            {transportOptions}\n          </ul>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button type=\"submit\" className=\"primary\">\n            <FormattedMessage id=\"button_update\" defaultMessage=\"Update\"\n              description=\"Button [Update]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// ValidationView: panel for confirming credentials, like email or phone.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  phone: {\n    id: 'phone_dative',\n    defaultMessage: 'phone',\n    description: \"Dative case of 'phone', i.e. 'phone' in 'by phone'\",\n  },\n  email: {\n    id: 'email_dative',\n    defaultMessage: 'email',\n    description: \"Dative case of 'email', i.e. 'email' in 'by email'\",\n  }\n});\n\nclass ValidationView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      code: props.credCode || ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({code: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    } else if (e.key == 'Escape') {\n      this.handleCancel(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.code && this.state.code.trim()) {\n      this.props.onSubmit(this.props.credMethod, this.state.code.trim());\n    }\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel();\n  }\n\n\n  render() {\n    const { formatMessage } = this.props.intl;\n    const methods = {'email': formatMessage(messages.email), 'tel': formatMessage(messages.phone)};\n    let method = methods[this.props.credMethod] || this.props.credMethod;\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\" htmlFor=\"enter-confirmation-code\">\n            <FormattedMessage id=\"enter_confirmation_code_prompt\"\n              defaultMessage=\"Enter confirmation code sent to you by {method}:\"\n              description=\"Request to enter confirmation code\"\n              values={{method: method}} />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"numeric_confirmation_code_prompt\"\n          defaultMessage=\"Numbers only\" description=\"Prompt for numeric conformation code\">{\n          (numbers_only) => <input type=\"text\" id=\"enter-confirmation-code\"\n            placeholder={numbers_only}\n            value={this.state.code} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"secondary\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_confirm\" defaultMessage=\"Confirm\" description=\"Button [Confirm]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ValidationView);\n","import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport SideNavbar from '../widgets/side-navbar.jsx';\nimport TopicCommon from '../widgets/topic-common.jsx';\n\nimport AccountSettingsView from './account-settings-view.jsx';\nimport ContactsView from './contacts-view.jsx';\nimport CreateAccountView from './create-account-view.jsx';\nimport AccNotificationsView from './acc-notifications-view.jsx';\nimport AccSecurityView from './acc-security-view.jsx';\nimport AccSupportView from './acc-support-view.jsx';\nimport LoginView from './login-view.jsx';\nimport NewTopicView from './new-topic-view.jsx';\nimport PasswordResetView from './password-reset-view.jsx';\nimport SettingsView from './settings-view.jsx';\nimport ValidationView from './validation-view.jsx';\n\n// Panel titles for translation.\nconst messages = defineMessages({\n  login: {\n    id: 'sidepanel_title_login',\n    description: 'Sidepanel title for LoginView.',\n    defaultMessage: 'Sign In'\n  },\n  register: {\n    id: 'sidepanel_title_register',\n    description: 'Sidepanel title for CreateAccountView.',\n    defaultMessage: 'Create Account'\n  },\n  settings: {\n    id: 'sidepanel_title_settings',\n    description: 'Sidepanel title for SettingsView.',\n    defaultMessage: 'Settings'\n  },\n  edit: {\n    id: 'sidepanel_title_account_settings',\n    description: 'Sidepanel title for AccountSettingsView.',\n    defaultMessage: 'Account Settings'\n  },\n  general: {\n    id: 'panel_title_general',\n    description: 'Title for TopicCommon.',\n    defaultMessage: 'General'\n  },\n  security: {\n    id: 'panel_title_security',\n    description: 'Title for TopicSecirity and AccSecurity.',\n    defaultMessage: 'Security'\n  },\n  crop: {\n    id: 'panel_title_crop',\n    description: 'Title for AvatarCropView.',\n    defaultMessage: 'Drag to Adjust'\n  },\n  notif: {\n    id: 'sidepanel_title_acc_notifications',\n    description: 'Sidepanel title for AccNotificationsView.',\n    defaultMessage: 'Notifications'\n  },\n  support: {\n    id: 'sidepanel_title_acc_support',\n    description: 'Sidepanel title for AccSupportView.',\n    defaultMessage: 'Support'\n  },\n  newtpk: {\n    id: 'sidepanel_title_newtpk',\n    description: 'Sidepanel title for NewTopicView.',\n    defaultMessage: 'Start New Chat'\n  },\n  cred: {\n    id: 'sidepanel_title_cred',\n    description: 'Sidepanel title for ValidationView.',\n    defaultMessage: 'Confirm Credentials'\n  },\n  reset: {\n    id: 'sidepanel_title_reset',\n    description: 'Sidepanel title for PasswordResetView.',\n    defaultMessage: 'Reset Password'\n  },\n  archive: {\n    id: 'sidepanel_title_archive',\n    description: 'Sidepanel title for ContactsView-Archive.',\n    defaultMessage: 'Archived Chats'\n  },\n  blocked: {\n    id: 'sidepanel_title_blocked',\n    description: 'Sidepanel title for ContactsView-Blocked.',\n    defaultMessage: 'Blocked Chats'\n  }\n});\n\nclass SidepanelView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNewTopic = this.handleNewTopic.bind(this);\n  }\n\n  handleNewTopic() {\n    this.props.onNavigate('newtpk');\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const view = this.props.state || (this.props.myUserId ? 'contacts' : 'login');\n\n    let title, avatar, badges;\n    if (view == 'contacts') {\n      title = this.props.title;\n      avatar = this.props.avatar ? this.props.avatar : true;\n      badges = this.props.trustedBadges;\n    } else {\n      title = formatMessage(messages[view]);\n      avatar = false;\n      badges = null;\n    }\n\n    let onCancel;\n    if (['login', 'contacts'].indexOf(view) == -1) {\n      onCancel = this.props.onCancel;\n    }\n\n    return (\n      <div id=\"sidepanel\" className={this.props.hideSelf ? 'nodisplay' : null}>\n        <SideNavbar\n          state={view}\n          title={title}\n          avatar={avatar}\n          tinode={this.props.tinode}\n          trustedBadges={badges}\n          myUserId={this.props.myUserId}\n          onSignUp={this.props.onSignUp}\n          onSettings={this.props.onSettings}\n          onNewTopic={this.handleNewTopic}\n          onCancel={onCancel} />\n\n        <ErrorPanel\n          level={this.props.errorLevel}\n          text={this.props.errorText}\n          action={this.props.errorAction}\n          actionText={this.props.errorActionText}\n          onClearError={this.props.onError} />\n\n        <LoadSpinner show={this.props.loadSpinnerVisible} />\n\n        {view === 'login' ?\n          <LoginView\n            login={this.props.login}\n            disabled={this.props.loginDisabled}\n            persist={this.props.persist}\n            onLogin={this.props.onLoginRequest}\n            onPersistenceChange={this.props.onPersistenceChange} /> :\n\n          view === 'register' ?\n          <CreateAccountView\n            tinode={this.props.tinode}\n            onCreateAccount={this.props.onCreateAccount}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'settings' ?\n          <SettingsView\n            transport={this.props.transport}\n            serverAddress={this.props.serverAddress}\n            onCancel={this.props.onCancel}\n            onUpdate={this.props.onGlobalSettings} /> :\n\n          view === 'edit' ?\n          <AccountSettingsView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            trustedBadges={this.props.trustedBadges}\n            onNavigate={this.props.onNavigate} /> :\n\n          (view === 'general' || view === 'crop') ?\n          <TopicCommon\n            topic=\"me\"\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            onUpdateTopicDesc={this.props.onUpdateAccountDesc}\n            onUpdateTags={this.props.onUpdateAccountTags}\n            onCredAdd={this.props.onCredAdd}\n            onCredDelete={this.props.onCredDelete}\n            onCredConfirm={this.props.onCredConfirm}\n            onError={this.props.onError} /> :\n\n          view === 'notif' ?\n          <AccNotificationsView\n            messageSounds={this.props.messageSounds}\n            desktopAlerts={this.props.desktopAlerts}\n            desktopAlertsEnabled={this.props.desktopAlertsEnabled}\n            incognitoMode={this.props.incognitoMode}\n            onTogglePushNotifications={this.props.onTogglePushNotifications}\n            onToggleMessageSounds={this.props.onToggleMessageSounds}\n            onToggleIncognitoMode={this.props.onToggleIncognitoMode} /> :\n\n          view === 'security' ?\n          <AccSecurityView\n            tinode={this.props.tinode}\n            onUpdateAccountDesc={this.props.onUpdateAccountDesc}\n            onUpdatePassword={this.props.onUpdatePassword}\n            onLogout={this.props.onLogout}\n            onDeleteAccount={this.props.onDeleteAccount}\n            onShowAlert={this.props.onShowAlert}\n            onShowBlocked={this.props.onShowBlocked} /> :\n\n          view === 'support' ?\n          <AccSupportView\n            serverAddress={this.props.serverAddress}\n            serverVersion={this.props.serverVersion} /> :\n\n          (view === 'contacts' || view == 'archive' || view == 'blocked') ?\n          <ContactsView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            connected={this.props.connected}\n            topicSelected={this.props.topicSelected}\n            archive={view == 'archive'}\n            blocked={view == 'blocked'}\n            chatList={this.props.chatList}\n            showContextMenu={this.props.showContextMenu}\n            onTopicSelected={this.props.onTopicSelected}\n            onShowArchive={this.props.onShowArchive} /> :\n\n          view === 'newtpk' ?\n          <NewTopicView\n            tinode={this.props.tinode}\n            searchResults={this.props.searchResults}\n            onInitFind={this.props.onInitFind}\n            onSearchContacts={this.props.onSearchContacts}\n            onCreateTopic={this.props.onCreateTopic}\n            onError={this.props.onError} /> :\n\n          view === 'cred' ?\n          <ValidationView\n            credCode={this.props.credCode}\n            credMethod={this.props.credMethod}\n            onSubmit={this.props.onValidateCredentials}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'reset' ?\n          <PasswordResetView\n            onRequest={this.props.onPasswordResetRequest}\n            onReset={this.props.onResetPassword}\n            onCancel={this.props.onCancel} /> :\n          null}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SidepanelView);\n","import { KNOWN_HOSTS, DEFAULT_HOST } from '../config.js';\n\n// Detect server address from the URL\nexport function detectServerAddress() {\n  let host = DEFAULT_HOST;\n  if (typeof window.location == 'object') {\n    if (window.location.protocol == 'file:' || window.location.hostname == 'localhost') {\n      host = KNOWN_HOSTS.local;\n    } else if (window.location.hostname) {\n      host = window.location.hostname + (window.location.port ? ':' + window.location.port : '');\n    }\n  }\n  return host;\n}\n\n// Detect if the page is served over HTTPS.\nexport function isSecureConnection() {\n  if (typeof window.location == 'object') {\n    return window.location.protocol == 'https:';\n  }\n  return false;\n}\n\nexport function isLocalHost() {\n  if (typeof window.location == 'object') {\n    return window.location.hostname == 'localhost';\n  }\n  return false;\n}\n","// The top-level class to hold all functionality together.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport * as firebase from 'firebase/app';\nimport 'firebase/messaging';\n\nimport Tinode from 'tinode-sdk';\n\nimport Alert from '../widgets/alert.jsx';\nimport ContextMenu from '../widgets/context-menu.jsx';\n\nimport InfoView from './info-view.jsx';\nimport MessagesView from './messages-view.jsx';\nimport SidepanelView from './sidepanel-view.jsx';\n\nimport { API_KEY, APP_NAME, DEFAULT_P2P_ACCESS_MODE, LOGGING_ENABLED,\n  MEDIA_BREAKPOINT, RECEIVED_DELAY } from '../config.js';\nimport { PACKAGE_VERSION } from '../version.js';\nimport { base64ReEncode, makeImageUrl } from '../lib/blob-helpers.js';\nimport { detectServerAddress, isLocalHost, isSecureConnection } from '../lib/host-name.js';\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { secondsToTime } from '../lib/strformat.js'\nimport { updateFavicon } from '../lib/utils.js';\n\n// Sound to play on message received.\nconst POP_SOUND = new Audio('audio/msg.mp3');\n\nconst messages = defineMessages({\n  reconnect_countdown: {\n    id: 'reconnect_countdown',\n    defaultMessage: 'Disconnected. Reconnecting in {seconds}…',\n    description: 'Message shown when an app update is available.'\n  },\n  reconnect_now: {\n    id: 'reconnect_now',\n    defaultMessage: 'Try now',\n    description: 'Prompt for reconnecting now'\n  },\n  push_init_failed: {\n    id: 'push_init_failed',\n    defaultMessage: 'Failed to initialize push notifications',\n    description: 'Error message when push notifications have failed to initialize.'\n  },\n  invalid_security_token: {\n    id: 'invalid_security_token',\n    defaultMessage: 'Invalid security token',\n    description: 'Error message when resetting password.'\n  },\n  no_connection: {\n    id: 'no_connection',\n    defaultMessage: 'No connection',\n    description: 'Warning that the user is offline.'\n  },\n  code_doesnot_match: {\n    id: 'code_doesnot_match',\n    defaultMessage: 'Code does not match',\n    description: 'Error message when the credential validation code is incorrect.'\n  },\n  menu_item_info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  }\n});\n\nclass TinodeWeb extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selfRef = React.createRef();\n\n    this.state = this.getBlankState();\n\n    this.handleResize = this.handleResize.bind(this);\n    this.handleHashRoute = this.handleHashRoute.bind(this);\n    this.handleOnline = this.handleOnline.bind(this);\n    this.checkForAppUpdate = this.checkForAppUpdate.bind(this);\n    this.handleVisibilityEvent = this.handleVisibilityEvent.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.handleLoginRequest = this.handleLoginRequest.bind(this);\n    this.handlePersistenceChange = this.handlePersistenceChange.bind(this);\n    this.handleConnected = this.handleConnected.bind(this);\n    this.handleAutoreconnectIteration = this.handleAutoreconnectIteration.bind(this);\n    this.doLogin = this.doLogin.bind(this);\n    this.handleCredentialsRequest = this.handleCredentialsRequest.bind(this);\n    this.handleLoginSuccessful = this.handleLoginSuccessful.bind(this);\n    this.handleDisconnect = this.handleDisconnect.bind(this);\n    this.tnMeMetaDesc = this.tnMeMetaDesc.bind(this);\n    this.tnMeContactUpdate = this.tnMeContactUpdate.bind(this);\n    this.tnMeSubsUpdated = this.tnMeSubsUpdated.bind(this);\n    this.resetContactList = this.resetContactList.bind(this);\n    this.tnData = this.tnData.bind(this);\n    this.tnInitFind = this.tnInitFind.bind(this);\n    this.tnFndSubsUpdated = this.tnFndSubsUpdated.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleTopicSelected = this.handleTopicSelected.bind(this);\n    this.handleHideMessagesView = this.handleHideMessagesView.bind(this);\n    this.handleSendMessage = this.handleSendMessage.bind(this);\n    this.handleNewChatInvitation = this.handleNewChatInvitation.bind(this);\n    this.handleNewAccount = this.handleNewAccount.bind(this);\n    this.handleNewAccountRequest = this.handleNewAccountRequest.bind(this);\n    this.handleUpdatePasswordRequest = this.handleUpdatePasswordRequest.bind(this);\n    this.handleUpdateAccountTagsRequest = this.handleUpdateAccountTagsRequest.bind(this);\n    this.handleToggleIncognitoMode = this.handleToggleIncognitoMode.bind(this);\n    this.handleSettings = this.handleSettings.bind(this);\n    this.handleGlobalSettings = this.handleGlobalSettings.bind(this);\n    this.handleShowArchive = this.handleShowArchive.bind(this);\n    this.handleShowBlocked = this.handleShowBlocked.bind(this);\n    this.handleToggleMessageSounds = this.handleToggleMessageSounds.bind(this);\n    this.handleCredAdd = this.handleCredAdd.bind(this);\n    this.handleCredDelete = this.handleCredDelete.bind(this);\n    this.handleCredConfirm = this.handleCredConfirm.bind(this);\n    this.initFCMessaging = this.initFCMessaging.bind(this);\n    this.togglePushToken = this.togglePushToken.bind(this);\n    this.requestPushToken = this.requestPushToken.bind(this);\n    this.handlePushMessage = this.handlePushMessage.bind(this);\n    this.handleSidepanelCancel = this.handleSidepanelCancel.bind(this);\n    this.handleStartTopicRequest = this.handleStartTopicRequest.bind(this);\n    this.handleNewTopicCreated = this.handleNewTopicCreated.bind(this);\n    this.handleTopicUpdateRequest = this.handleTopicUpdateRequest.bind(this);\n    this.handleUnarchive = this.handleUnarchive.bind(this);\n    this.handleChangePermissions = this.handleChangePermissions.bind(this);\n    this.handleTagsUpdateRequest = this.handleTagsUpdateRequest.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n    this.handleDeleteTopicRequest = this.handleDeleteTopicRequest.bind(this);\n    this.handleDeleteMessagesRequest = this.handleDeleteMessagesRequest.bind(this);\n    this.handleLeaveUnsubRequest = this.handleLeaveUnsubRequest.bind(this);\n    this.handleBlockTopicRequest = this.handleBlockTopicRequest.bind(this);\n    this.handleReportTopic = this.handleReportTopic.bind(this);\n    this.handleShowContextMenu = this.handleShowContextMenu.bind(this);\n    this.defaultTopicContextMenu = this.defaultTopicContextMenu.bind(this);\n    this.handleHideContextMenu = this.handleHideContextMenu.bind(this);\n    this.handleShowAlert = this.handleShowAlert.bind(this);\n    this.handleShowInfoView = this.handleShowInfoView.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleValidateCredentialsRequest = this.handleValidateCredentialsRequest.bind(this);\n    this.handlePasswordResetRequest = this.handlePasswordResetRequest.bind(this);\n    this.handleResetPassword = this.handleResetPassword.bind(this);\n    this.handleContextMenuAction = this.handleContextMenuAction.bind(this);\n  }\n\n  getBlankState() {\n    const settings = LocalStorageUtil.getObject('settings') || {};\n    const persist = !!LocalStorageUtil.getObject('keep-logged-in');\n\n    return {\n      connected: false,\n      // Connected and subscribed to 'me'\n      ready: false,\n      // Try to re-login on new connection.\n      autoLogin: false,\n      transport: settings.transport || null,\n      serverAddress: settings.serverAddress || detectServerAddress(),\n      serverVersion: \"no connection\",\n      // \"On\" is the default, so saving the \"off\" state.\n      messageSounds: !settings.messageSoundsOff,\n      incognitoMode: false,\n      desktopAlerts: persist && !!settings.desktopAlerts,\n      desktopAlertsEnabled: (isSecureConnection() || isLocalHost()) &&\n        (typeof firebase != 'undefined') && (typeof navigator != 'undefined') &&\n        (typeof FIREBASE_INIT != 'undefined'),\n      firebaseToken: persist ? LocalStorageUtil.getObject('firebase-token') : null,\n\n      applicationVisible: !document.hidden,\n\n      errorText: '',\n      errorLevel: null,\n      errorAction: undefined,\n      errorActionText: null,\n\n      sidePanelSelected: 'login',\n      sidePanelTitle: null,\n      sidePanelAvatar: null,\n      myTrustedBadges: [],\n      loadSpinnerVisible: false,\n\n      login: '',\n      password: '',\n      persist: persist,\n      myUserId: null,\n      liveConnection: navigator.onLine,\n      topicSelected: '',\n      topicSelectedOnline: false,\n      topicSelectedAcs: null,\n      newTopicParams: null,\n      loginDisabled: false,\n      displayMobile: (window.innerWidth <= MEDIA_BREAKPOINT),\n      infoPanel: undefined,\n      mobilePanel: 'sidepanel',\n\n      contextMenuVisible: false,\n      contextMenuBounds: null,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuItems: [],\n\n      // Modal alert dialog.\n      alertVisible: false,\n      alertParams: {},\n\n      // Chats as shown in the ContactsView\n      chatList: [],\n      // Contacts returned by a search query.\n      searchResults: [],\n      // Merged results of a search query and p2p chats.\n      searchableContacts: [],\n      credMethod: undefined,\n      credCode: undefined,\n      // Topic to go to after login.\n      requestedTopic: undefined\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    window.addEventListener('online', (e) => { this.handleOnline(true); });\n    window.addEventListener('offline', (e) => { this.handleOnline(false); });\n    window.addEventListener('hashchange', this.handleHashRoute);\n\n    // Process background notifications from the service worker.\n    if (typeof BroadcastChannel == 'function') {\n      const serviceWorkerChannel = new BroadcastChannel('tinode-sw');\n      serviceWorkerChannel.addEventListener('message', this.handlePushMessage);\n    } else {\n      // Safari is broken by design.\n      console.warn(\"Your browser does not support BroadcastChannel. Some features will not be available\");\n    }\n\n    // Window/tab visible or invisible for pausing timers.\n    document.addEventListener('visibilitychange', this.handleVisibilityEvent);\n\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n\n    new Promise((resolve, reject) => {\n      this.tinode = TinodeWeb.tnSetup(this.state.serverAddress, this.state.transport,\n        this.props.intl.locale, this.state.persist, resolve);\n      this.tinode.onConnect = this.handleConnected;\n      this.tinode.onDisconnect = this.handleDisconnect;\n      this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n    }).then(() => {\n      // Initialize desktop alerts.\n      if (this.state.desktopAlertsEnabled) {\n        this.initFCMessaging().then(() => {\n          if (this.state.desktopAlerts) {\n            if (!this.state.firebaseToken) {\n              this.togglePushToken(true);\n            } else {\n              this.tinode.setDeviceToken(this.state.firebaseToken);\n            }\n          }\n        }).catch(() => {\n          // do nothing: handled earlier.\n          // catch needed to pervent unnecessary logging of error.\n        });\n      }\n\n      // Parse and save the hash navigation params.\n      const parsedNav = HashNavigation.parseUrlHash(window.location.hash);\n\n      // Read contacts from cache.\n      this.resetContactList();\n\n      const token = this.state.persist ? LocalStorageUtil.getObject('auth-token') : undefined;\n      if (token) {\n        this.setState({autoLogin: true});\n\n        // When reading from storage, date is returned as string.\n        token.expires = new Date(token.expires);\n        this.tinode.setAuthToken(token);\n        this.tinode.connect().catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n      }\n\n      // Save possible topic name and navigate to blank state.\n      this.setState({requestedTopic: parsedNav.path[1]});\n      HashNavigation.navigateTo('');\n\n      this.readTimer = null;\n      this.readTimerCallback = null;\n\n      this.handleHashRoute();\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n    window.removeEventListener('hashchange', this.handleHashRoute);\n    document.removeEventListener('visibilitychange', this.handleVisibilityEvent);\n  }\n\n  // Setup transport (usually websocket) and server address. This will terminate connection with the server.\n  static tnSetup(serverAddress, transport, locale, persistentCache, onSetupCompleted) {\n    const tinode = new Tinode({appName: APP_NAME, host: serverAddress, apiKey: API_KEY, transport: transport,\n      secure: isSecureConnection(), persist: persistentCache}, onSetupCompleted);\n    tinode.setHumanLanguage(locale);\n    tinode.enableLogging(LOGGING_ENABLED, true);\n    return tinode;\n  }\n\n  // Notifiy Tinode that a push message was received from the server.\n  handlePushMessage(data) {\n    if (data.what == 'msg' && Tinode.isChannelTopicName(data.topic)) {\n      // The last argument is a fake user Id: otherwise the update is seen as one from the current user.\n      this.tinode.oobNotification(data.topic, data.seq, 'fake-uid');\n    }\n  }\n\n  initFCMessaging() {\n    const {formatMessage, locale} = this.props.intl;\n    const onError = (msg, err) => {\n      console.error(msg, err);\n      this.handleError(formatMessage(messages.push_init_failed), 'err');\n      this.setState({desktopAlertsEnabled: false});\n    }\n\n    try {\n      this.fbPush = firebase.initializeApp(FIREBASE_INIT, APP_NAME).messaging();\n      this.fbPush.usePublicVapidKey(FIREBASE_INIT.messagingVapidKey);\n\n      return navigator.serviceWorker.register('/service-worker.js').then((reg) => {\n        this.checkForAppUpdate(reg);\n        this.fbPush.useServiceWorker(reg);\n        reg.active.postMessage(JSON.stringify({locale: locale, version: PACKAGE_VERSION}));\n\n        // Google could not be bothered to mention that onTokenRefresh is never called.\n        this.fbPush.onTokenRefresh(() => {\n          this.requestPushToken();\n        });\n\n        // Handhe FCM pushes\n        // (a) for channels always,\n        // (b) pushes when the app is in foreground but has not focus.\n        this.fbPush.onMessage(payload => { this.handlePushMessage(payload.data); });\n\n        return reg;\n      }).catch((err) => {\n        // registration failed :(\n        onError(\"Failed to register service worker:\", err);\n        return Promise.reject(err);\n      });\n    } catch (err) {\n      onError(\"Failed to initialize push notifications\", err);\n      return Promise.reject(err);\n    }\n  }\n\n  handleResize() {\n    const mobile = document.documentElement.clientWidth <= MEDIA_BREAKPOINT;\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n    if (this.state.displayMobile != mobile) {\n      this.setState({displayMobile: mobile});\n    }\n  }\n\n  // Check if a newer version of TinodeWeb app is available at the server.\n  checkForAppUpdate(reg) {\n    reg.onupdatefound = () => {\n      const installingWorker = reg.installing;\n      installingWorker.onstatechange = () => {\n        if (installingWorker.state == 'installed' && navigator.serviceWorker.controller) {\n          const msg = <>\n            <FormattedMessage id=\"update_available\"\n              defaultMessage=\"Update available.\"\n              description=\"Message shown when an app update is available.\" /> <a href=\"\">\n              <FormattedMessage id=\"reload_update\"\n                defaultMessage=\"Reload\"\n                description=\"Call to action to reload application when update is available.\" />\n            </a>.</>;\n          this.handleError(msg, 'info');\n        }\n      }\n    }\n  }\n\n  // Handle for hashchange event: display appropriate panels.\n  handleHashRoute() {\n    const hash = HashNavigation.parseUrlHash(window.location.hash);\n    if (hash.path && hash.path.length > 0) {\n      // Left-side panel selector.\n      if (['register','settings','edit','notif','security','support','general','crop',\n          'cred','reset','newtpk','archive','blocked','contacts',''].includes(hash.path[0])) {\n        this.setState({sidePanelSelected: hash.path[0]});\n      } else {\n        console.warn(\"Unknown sidepanel view\", hash.path[0]);\n      }\n\n      // Topic for MessagesView selector.\n      let topicName = hash.path[1] || null;\n      if (topicName != this.state.topicSelected) {\n        if (!Tinode.topicType(topicName)) {\n          // Clear invalid topic name.\n          topicName = null;\n        }\n        const newState = {\n          topicSelected: topicName\n        };\n        const acs = this.tinode.getTopicAccessMode(topicName);\n        if (acs) {\n          newState.topicSelectedAcs = acs;\n        }\n        this.setState(newState);\n      }\n    } else {\n      // Empty hashpath\n      this.setState({sidePanelSelected: '', topicSelected: null});\n    }\n\n    // Save validation credentials, if available.\n    if (hash.params.method) {\n      this.setState({ credMethod: hash.params.method });\n    }\n    if (hash.params.code) {\n      this.setState({ credCode: hash.params.code });\n    }\n\n    // Additional parameters of panels.\n    this.setState({\n      infoPanel: hash.params.info,\n      newTopicTabSelected: hash.params.tab\n    });\n  }\n\n  handleOnline(online) {\n    if (online) {\n      this.handleError();\n      clearInterval(this.reconnectCountdown);\n      this.tinode.reconnect();\n    } else {\n      this.handleError(this.props.intl.formatMessage(messages.no_connection), 'warn');\n    }\n    this.setState({liveConnection: online});\n  }\n\n  handleVisibilityEvent() {\n    this.setState({applicationVisible: !document.hidden});\n  }\n\n  handleError(err, level, action, actionText) {\n    this.setState({errorText: err, errorLevel: level, errorAction: action, errorActionText: actionText});\n  }\n\n  // User clicked Login button in the side panel.\n  handleLoginRequest(login, password) {\n    this.setState({\n      loginDisabled: true,\n      login: login,\n      password: password,\n      loadSpinnerVisible: true,\n      autoLogin: true\n    });\n    this.handleError('', null);\n\n    if (this.tinode.isConnected()) {\n      this.doLogin(login, password, {meth: this.state.credMethod, resp: this.state.credCode});\n    } else {\n      this.tinode.connect().catch((err) => {\n        // Socket error\n        this.setState({loginDisabled: false, autoLogin: false, loadSpinnerVisible: false});\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // Enable or disable saving the password and IndexedDB.\n  handlePersistenceChange(persist) {\n    if (persist) {\n      this.tinode.initStorage().then(() => {\n        LocalStorageUtil.setObject('keep-logged-in', true);\n        this.setState({persist: true});\n      });\n    } else {\n      this.tinode.clearStorage().then(() => {\n        LocalStorageUtil.setObject('keep-logged-in', false);\n        this.setState({persist: false});\n      });\n    }\n  }\n\n  // Connection succeeded.\n  handleConnected() {\n    // Just to be sure.\n    clearInterval(this.reconnectCountdown);\n    this.handleError();\n\n    const params = this.tinode.getServerInfo();\n    this.setState({\n      serverVersion: params.ver + ' ' + (params.build ? params.build : 'none')\n    });\n\n    if (this.state.autoLogin) {\n      this.doLogin(this.state.login, this.state.password, {meth: this.state.credMethod, resp: this.state.credCode});\n    }\n  }\n\n  // Called for each auto-reconnect iteration.\n  handleAutoreconnectIteration(sec, prom) {\n    clearInterval(this.reconnectCountdown);\n\n    if (sec < 0) {\n      // Clear error\n      this.handleError();\n      return;\n    }\n\n    if (prom) {\n      // Reconnecting now\n      prom.then(() => {\n        // Reconnected: clear error\n        this.handleError();\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n      return;\n    }\n\n    const {formatMessage} = this.props.intl;\n    let count = sec / 1000;\n    count = count | count;\n    this.reconnectCountdown = setInterval(() => {\n      const timeLeft = (count > 99) ? secondsToTime(count) : count;\n      this.handleError(\n        formatMessage(messages.reconnect_countdown, {seconds: timeLeft}),\n        'warn',\n        () => {\n          clearInterval(this.reconnectCountdown);\n          this.tinode.reconnect();\n        },\n        formatMessage(messages.reconnect_now)\n      );\n      count -= 1;\n    }, 1000);\n  }\n\n  // Connection lost\n  handleDisconnect(err) {\n    this.setState({\n      connected: false,\n      ready: false,\n      topicSelectedOnline: false,\n      errorText: err && err.message ? err.message : \"Disconnected\",\n      errorLevel: err && err.message ? 'err' : 'warn',\n      loginDisabled: false,\n      contextMenuVisible: false,\n      serverVersion: \"no connection\"\n    });\n  }\n\n  doLogin(login, password, cred) {\n    if (this.tinode.isAuthenticated()) {\n      // Already logged in. Go to default screen.\n      HashNavigation.navigateTo('');\n      return;\n    }\n    // Sanitize and package credentail.\n    cred = Tinode.credential(cred);\n    // Try to login with login/password. If they are not available, try token. If no token, ask for login/password.\n    let promise = null;\n    let token = this.tinode.getAuthToken();\n    if (login && password) {\n      token = null;\n      this.setState({password: null});\n      promise = this.tinode.loginBasic(login, password, cred);\n    } else if (token) {\n      promise = this.tinode.loginToken(token.token, cred);\n    }\n\n    if (promise) {\n      promise.then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text === 'validate credentials') {\n          this.setState({loadSpinnerVisible: false});\n          if (cred) {\n            this.handleError(this.props.intl.formatMessage(messages.code_doesnot_match), 'warn');\n          }\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful();\n        }\n      }).catch((err) => {\n        // Login failed, report error.\n        this.setState({\n          loginDisabled: false,\n          credMethod: undefined,\n          credCode: undefined,\n          loadSpinnerVisible: false,\n          autoLogin: false\n        });\n        this.handleError(err.message, 'err');\n        if (token) {\n          this.handleLogout();\n        }\n        HashNavigation.navigateTo('');\n      });\n    } else {\n      // No login credentials provided.\n      // Make sure we are on the login page.\n      HashNavigation.navigateTo('');\n      this.setState({loginDisabled: false});\n    }\n  }\n\n  handleCredentialsRequest(params) {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    parsed.path[0] = 'cred';\n    parsed.params['method'] = params.cred[0];\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n  }\n\n  handleLoginSuccessful() {\n    this.handleError();\n\n    // Refresh authentication token.\n    if (LocalStorageUtil.getObject('keep-logged-in')) {\n      LocalStorageUtil.setObject('auth-token', this.tinode.getAuthToken());\n    }\n\n    const goToTopic = this.state.requestedTopic;\n    // Logged in fine, subscribe to 'me' attaching callbacks from the contacts view.\n    const me = this.tinode.getMeTopic();\n    me.onMetaDesc = this.tnMeMetaDesc;\n    me.onContactUpdate = this.tnMeContactUpdate;\n    me.onSubsUpdated = this.tnMeSubsUpdated;\n    this.setState({\n      connected: true,\n      credMethod: undefined,\n      credCode: undefined,\n      myUserId: this.tinode.getCurrentUserID(),\n      autoLogin: true,\n      requestedTopic: undefined,\n    });\n    // Subscribe, fetch topic desc, the list of subscriptions. Messages are not fetched.\n    me.subscribe(\n      me.startMetaQuery().\n        withLaterSub().\n        withDesc().\n        withTags().\n        withCred().\n        build()\n      ).catch((err) => {\n        this.tinode.disconnect();\n        localStorage.removeItem('auth-token');\n        this.handleError(err.message, 'err');\n        HashNavigation.navigateTo('');\n      }).finally(() => {\n        this.setState({loadSpinnerVisible: false});\n      });\n    let urlHash = HashNavigation.setUrlSidePanel(window.location.hash, 'contacts');\n    if (goToTopic) {\n      urlHash = HashNavigation.setUrlTopic(urlHash, goToTopic);\n    }\n    HashNavigation.navigateTo(urlHash);\n  }\n\n  tnMeMetaDesc(desc) {\n    if (desc) {\n      if (desc.public) {\n        this.setState({\n          sidePanelTitle: desc.public.fn,\n          sidePanelAvatar: makeImageUrl(desc.public.photo)\n        });\n      }\n      if (desc.trusted) {\n        const badges = [];\n        for (const [key, val] of Object.entries(desc.trusted)) {\n          if (val) {\n            badges.push(key);\n          }\n        }\n        this.setState({\n          myTrustedBadges: badges,\n        });\n      }\n      if (desc.acs) {\n        this.setState({\n          incognitoMode: !desc.acs.isPresencer()\n        });\n      }\n    }\n  }\n\n  // Reactions to updates to the contact list.\n  tnMeContactUpdate(what, cont) {\n    if (what == 'on' || what == 'off') {\n      this.resetContactList();\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedOnline: (what == 'on')});\n      }\n    } else if (what == 'read') {\n      this.resetContactList();\n    } else if (what == 'msg') {\n      // Check if the topic is archived. If so, don't play a sound.\n      const topic = this.tinode.getTopic(cont.topic);\n      const archived = topic && topic.isArchived();\n\n      // New message received. Maybe the message is from the current user, then unread is 0.\n      if (cont.unread > 0 && this.state.messageSounds && !archived) {\n        // Skip update if the topic is currently open, otherwise the badge will annoyingly flash.\n        if (document.hidden || this.state.topicSelected != cont.topic) {\n          POP_SOUND.play();\n        }\n      }\n      // Reorder contact list to use possibly updated 'touched'.\n      this.resetContactList();\n    } else if (what == 'recv') {\n      // Explicitly ignoring \"recv\" -- it causes no visible updates to contact list.\n    } else if (what == 'gone' || what == 'unsub') {\n      // Topic deleted or user unsubscribed. Remove topic from view.\n      // If the currently selected topic is gone, clear the selection.\n      if (this.state.topicSelected == cont.topic) {\n        this.handleTopicSelected(null);\n      }\n      // Redraw without the deleted topic.\n      this.resetContactList();\n    } else if (what == 'acs') {\n      // Permissions changed. If it's for the currently selected topic,\n      // update the views.\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedAcs: cont.acs});\n      }\n    } else if (what == 'del') {\n      // TODO: messages deleted (hard or soft) -- update pill counter.\n    } else if (what == 'upd') {\n      // upd - handled by the SDK. Explicitly ignoring here.\n    } else {\n      // TODO(gene): handle other types of notifications:\n      // * ua -- user agent changes (maybe display a pictogram for mobile/desktop).\n      console.info(\"Unsupported (yet) presence update:\" + what + \" in: \" + cont.topic);\n    }\n  }\n\n  tnMeSubsUpdated(unused) {\n    this.resetContactList();\n  }\n\n  // Merge search results and contact list to create a single flat\n  // list of known contacts for GroupManager to use.\n  static prepareSearchableContacts(chatList, foundContacts) {\n    const merged = {};\n\n    // For chatList topics merge only p2p topics and convert them to the\n    // same format as foundContacts.\n    for (const c of chatList) {\n      if (Tinode.isP2PTopicName(c.topic)) {\n          merged[c.topic] = {\n            user: c.topic,\n            updated: c.updated,\n            public: c.public,\n            private: c.private,\n            acs: c.acs\n          };\n      }\n    }\n\n    // Add all foundCountacts if they have not been added already.\n    for (const c of foundContacts) {\n      if (!merged[c.user]) {\n        merged[c.user] = c;\n      }\n    }\n\n    return Object.values(merged);\n  }\n\n  resetContactList() {\n    const newState = {\n      chatList: []\n    };\n\n    if (!this.state.ready) {\n      newState.ready = true;\n    }\n\n    this.tinode.getMeTopic().contacts((c) => {\n      if (!c.topic && !c.user) {\n        // Contacts expect c.topic to be set.\n        c.topic = c.name;\n      }\n\n      newState.chatList.push(c);\n      if (this.state.topicSelected == c.topic) {\n        newState.topicSelectedOnline = c.online;\n        newState.topicSelectedAcs = c.acs;\n      }\n    });\n\n    const past = new Date(0);\n    newState.chatList.sort((a, b) => {\n      return (a.touched || past).getTime() - (b.touched || past).getTime();\n    });\n\n    // Merge search results and chat list.\n    newState.searchableContacts = TinodeWeb.prepareSearchableContacts(newState.chatList, this.state.searchResults);\n    this.setState(newState);\n  }\n\n  // Sending \"received\" notifications\n  tnData(data) {\n    const topic = this.tinode.getTopic(data.topic);\n    if (topic.msgStatus(data, true) >= Tinode.MESSAGE_STATUS_SENT && data.from != this.state.myUserId) {\n      clearTimeout(this.receivedTimer);\n      this.receivedTimer = setTimeout(() => {\n        this.receivedTimer = undefined;\n        topic.noteRecv(data.seq);\n      }, RECEIVED_DELAY);\n    }\n  }\n\n  /* Fnd topic: find contacts by tokens */\n  tnInitFind() {\n    const fnd = this.tinode.getFndTopic();\n    fnd.onSubsUpdated = this.tnFndSubsUpdated;\n    if (fnd.isSubscribed()) {\n      this.tnFndSubsUpdated();\n    } else {\n      fnd.subscribe(fnd.startMetaQuery().withSub().build()).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  tnFndSubsUpdated() {\n    const foundContacts = [];\n    // Don't attempt to create P2P topics which already exist. Server will reject the duplicates.\n    this.tinode.getFndTopic().contacts((s) => {\n      foundContacts.push(s);\n    });\n    this.setState({\n      searchResults: foundContacts,\n      searchableContacts: TinodeWeb.prepareSearchableContacts(this.state.chatList, foundContacts)\n    });\n  }\n\n  /** Called when the user enters a contact into the contact search field in the NewAccount panel\n    @param query {Array} is an array of contacts to search for\n   */\n  handleSearchContacts(query) {\n    const fnd = this.tinode.getFndTopic();\n    fnd.setMeta({desc: {public: query}}).then((ctrl) => {\n      return fnd.getMeta(fnd.startMetaQuery().withSub().build());\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  // User clicked on a contact in the side panel or deleted a contact.\n  handleTopicSelected(topicName) {\n    // Clear newTopicParams after use.\n    if (this.state.newTopicParams && this.state.newTopicParams._topicName != topicName) {\n      this.setState({\n        newTopicParams: null\n      });\n    }\n\n    if (topicName) {\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'topic-view',\n        infoPanel: undefined\n      });\n      // Different contact selected.\n      if (this.state.topicSelected != topicName) {\n        this.setState({\n          topicSelectedOnline: this.tinode.isTopicOnline(topicName),\n          topicSelectedAcs: this.tinode.getTopicAccessMode(topicName)\n        });\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', topicName));\n      }\n    } else {\n      // Currently selected contact deleted\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'sidepanel',\n        topicSelectedOnline: false,\n        topicSelectedAcs: null,\n        infoPanel: undefined\n      });\n\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic('', null));\n    }\n  }\n\n  // In mobile view user requested to show sidepanel\n  handleHideMessagesView() {\n    this.setState({\n      mobilePanel: 'sidepanel'\n    });\n    HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, null));\n  }\n\n  // User is sending a message, either plain text or a drafty object, possibly\n  // with attachments.\n  //  - msg - Drafty message with content\n  //  - promise - Promise to be resolved when the upload is completed\n  //  - uploader - for tracking progress\n  //  - head - head dictionary to be attached to the message\n  handleSendMessage(msg, promise, uploader, head) {\n    const topic = this.tinode.getTopic(this.state.topicSelected);\n\n    msg = topic.createMessage(msg, false);\n    // The uploader is used to show progress.\n    msg._uploader = uploader;\n\n    if (head) {\n      msg.head = Object.assign(msg.head || {}, head);\n    }\n\n    if (!topic.isSubscribed()) {\n      // Topic is not subscribed yet. Subscribe.\n      if (!promise) {\n        promise = Promise.resolve();\n      }\n      promise = promise\n        .then(() => topic.subscribe())\n        .then(() => {\n          // If there are unsent messages, try sending them now.\n          topic.queuedMessages((pub) => {\n            if (!pub._sending && topic.isSubscribed()) {\n              this.sendMessage(pub);\n            }\n          });\n        });\n    }\n\n    if (promise) {\n      promise = promise.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n\n    topic.publishDraft(msg, promise)\n      .then((ctrl) => {\n        if (topic.isArchived()) {\n          return topic.archive(false);\n        }\n      })\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleNewChatInvitation(topicName, action) {\n    const topic = this.tinode.getTopic(topicName);\n    let response = null;\n    switch (action) {\n      case 'accept':\n        // Accept given permissions.\n        const mode = topic.getAccessMode().getGiven();\n        response = topic.setMeta({sub: {mode: mode}});\n        if (topic.isP2PType()) {\n          // For P2P topics change 'given' permission of the peer too.\n          // In p2p topics the other user has the same name as the topic.\n          response = response.then((ctrl) => {\n            topic.setMeta({sub: {user: topicName, mode: mode}});\n          });\n        }\n        break;\n      case 'delete':\n        // Ignore invitation by deleting it.\n        response = topic.delTopic(true);\n        break;\n      case 'block':\n        // Ban the topic making futher invites impossible.\n        // Just self-ban.\n        const am = topic.getAccessMode().updateWant('-JP').getWant();\n        response = topic.setMeta({sub: {mode: am}}).then((ctrl) => {\n          return this.handleTopicSelected(null);\n        });\n        break;\n      default:\n        console.warn(\"Unknown invitation action\", '\"' + action + '\"\"');\n    }\n\n    if (response != null) {\n      response.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // User chose a Sign Up menu item.\n  handleNewAccount() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, 'register'));\n  }\n\n  // Actual registration of a new account.\n  handleNewAccountRequest(login_, password_, public_, cred_, tags_) {\n    // Clear old error, if any.\n    this.handleError();\n\n    this.tinode.connect(this.state.serverAddress)\n      .then(() => {\n        return this.tinode.createAccountBasic(login_, password_,\n          {public: public_, tags: tags_, cred: Tinode.credential(cred_)});\n      }).then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text == 'validate credentials') {\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful(this);\n        }\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleToggleIncognitoMode(on) {\n    // Make state undefined.\n    this.setState({incognitoMode: null});\n\n    const me = this.tinode.getMeTopic();\n    const am = me.getAccessMode().updateWant(on ? '-P' : '+P').getWant();\n    me.setMeta({sub: {mode: am}}).catch((err) => {\n      // Request failed, keep existing state.\n      this.setState({incognitoMode: !on});\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleUpdateAccountTagsRequest(tags) {\n    this.tinode.getMeTopic().setMeta({tags: tags})\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  // User chose Settings menu item.\n  handleSettings() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'edit' : 'settings'));\n  }\n\n  // User updated global parameters.\n  handleGlobalSettings(settings) {\n    const serverAddress = settings.serverAddress || this.state.serverAddress;\n    const transport = settings.transport || this.state.transport;\n    if (this.tinode) {\n      this.tinode.clearStorage();\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.tinode = TinodeWeb.tnSetup(serverAddress, transport, this.props.intl.locale,\n      LocalStorageUtil.getObject('keep-logged-in'));\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n\n    this.setState({\n      serverAddress: serverAddress,\n      transport: transport\n    });\n    LocalStorageUtil.setObject('settings', {\n      serverAddress: serverAddress,\n      transport: transport\n    });\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, ''));\n  }\n\n  // User chose 'Archived chats'.\n  handleShowArchive() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'archive' : ''));\n  }\n\n  // User viewes 'Blocked chats'.\n  handleShowBlocked() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'blocked' : ''));\n  }\n\n  togglePushToken(enabled) {\n    if (enabled) {\n      this.setState({desktopAlerts: null});\n      if (!this.state.firebaseToken) {\n        const fcm = this.fbPush ?\n          Promise.resolve() :\n          this.initFCMessaging();\n        fcm.then(() => {\n          return this.fbPush.requestPermission();\n        }).then(() => {\n          this.requestPushToken();\n        }).catch((err) => {\n          console.error(\"Failed to get notification permission.\", err);\n          this.handleError(err.message, 'err');\n          this.setState({desktopAlerts: false, firebaseToken: null});\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        });\n      } else {\n        this.setState({desktopAlerts: true});\n        if (LocalStorageUtil.getObject('keep-logged-in')) {\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n        }\n      }\n    } else if (this.state.firebaseToken && this.fbPush) {\n      this.fbPush.deleteToken(this.state.firebaseToken).catch((err) => {\n        console.error(\"Unable to delete token.\", err);\n      }).finally(() => {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        localStorage.removeItem('firebase-token');\n        this.setState({desktopAlerts: false, firebaseToken: null});\n        // Inform the server that the token was deleted.\n        this.tinode.setDeviceToken(null);\n      });\n    } else {\n      this.setState({desktopAlerts: false, firebaseToken: null});\n      LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n    }\n  }\n\n  requestPushToken() {\n    this.fbPush.getToken().then((refreshedToken) => {\n      const persist = LocalStorageUtil.getObject('keep-logged-in');\n      if (refreshedToken != this.state.firebaseToken) {\n        this.tinode.setDeviceToken(refreshedToken);\n        if (persist) {\n          LocalStorageUtil.setObject('firebase-token', refreshedToken);\n        }\n      }\n      this.setState({firebaseToken: refreshedToken, desktopAlerts: true});\n      if (persist) {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n      }\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n      console.error(\"Failed to retrieve firebase token\", err);\n    });\n  }\n\n  handleToggleMessageSounds(enabled) {\n    this.setState({messageSounds: enabled});\n    LocalStorageUtil.updateObject('settings', {\n      messageSoundsOff: !enabled\n    });\n  }\n\n  handleCredAdd(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.setMeta({cred: {meth: method, val: value}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredDelete(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.delCredential(method, value).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredConfirm(method, response) {\n    this.handleCredentialsRequest({cred: [method]});\n  }\n\n  // User clicked Cancel button in Setting or Sign Up panel.\n  handleSidepanelCancel() {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    let path = '';\n    if (['security','support','general','notif'].includes(parsed.path[0])) {\n      path = 'edit';\n    } else if ('crop' == parsed.path[0]) {\n      path = 'general';\n    } else if ('blocked' == parsed.path[0]) {\n      path = 'security';\n    } else if (this.state.myUserId) {\n      path = 'contacts';\n    }\n    parsed.path[0] = path;\n    if (parsed.params) {\n      delete parsed.params.code;\n      delete parsed.params.method;\n      delete parsed.params.tab;\n    }\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n    this.setState({errorText: '', errorLevel: null});\n  }\n\n  // Sidepanel navigator. No need to bind to 'this'.\n  basicNavigator(hash) {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, hash));\n  }\n\n  // Topic info navigator. No need to bind to 'this'.\n  infoNavigator(hash) {\n    HashNavigation.navigateTo(HashNavigation.setUrlInfoPanel(window.location.hash, hash));\n  }\n\n  // Request to start a topic, new or selected from search results, or \"by ID\".\n  handleStartTopicRequest(topicName, newTopicParams, isChannel) {\n    // Check if topic is indeed new. If not, launch it.\n    if (topicName && this.tinode.isTopicCached(topicName)) {\n      this.handleTopicSelected(topicName);\n      return;\n    }\n\n    const params = {};\n    if (Tinode.isP2PTopicName(topicName)) {\n      // Because we are initialing the subscription, set 'want' to all permissions.\n      params.sub = {mode: DEFAULT_P2P_ACCESS_MODE};\n      // Give the other user all permissions too.\n      params.desc = {defacs: {auth: DEFAULT_P2P_ACCESS_MODE}};\n    } else {\n      topicName = topicName || this.tinode.newGroupTopicName(isChannel);\n      params.desc = {public: newTopicParams.public, private: {comment: newTopicParams.private}};\n      params.tags = newTopicParams.tags;\n    }\n    params._topicName = topicName;\n    this.setState({newTopicParams: params}, () => {this.handleTopicSelected(topicName)});\n  }\n\n  // New topic was created, here is the new topic name.\n  handleNewTopicCreated(oldName, newName) {\n    if (this.state.topicSelected == oldName && oldName != newName) {\n      // If the current URl contains the old topic name, replace it with new.\n      // Update the name of the selected topic first so the navigator doen't clear\n      // the state.\n      this.setState({topicSelected: newName}, () => {\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', newName));\n      });\n    }\n  }\n\n  handleTopicUpdateRequest(topicName, pub, priv, defacs) {\n    this.handleError();\n\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const params = {};\n      let attachments;\n      if (pub) {\n        if (pub.photo) {\n          if (pub.photo.ref && pub.photo.ref != Tinode.DEL_CHAR) {\n            attachments = [pub.photo.ref];\n          } else if (!pub.photo.data || pub.photo.data == Tinode.DEL_CHAR) {\n            pub.photo = Tinode.DEL_CHAR;\n          }\n        }\n        params.public = pub;\n      }\n\n      if (typeof priv == 'string') {\n        params.private = (priv === Tinode.DEL_CHAR) ?\n          Tinode.DEL_CHAR : {comment: priv};\n      }\n      if (defacs) {\n        params.defacs = defacs;\n      }\n      topic.setMeta({desc: params, attachments: attachments}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleUnarchive(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      topic.archive(false);\n    }\n  }\n\n  handleUpdatePasswordRequest(password)  {\n    this.handleError();\n\n    if (password) {\n      this.tinode.updateAccountBasic(null, this.tinode.getCurrentLogin(), password).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleChangePermissions(topicName, mode, uid) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const am = topic.getAccessMode();\n      if (uid) {\n        am.updateGiven(mode);\n        mode = am.getGiven();\n      } else {\n        am.updateWant(mode);\n        mode = am.getWant();\n      }\n      topic.setMeta({sub: {user: uid, mode: mode}}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleTagsUpdateRequest(topicName, tags) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      topic.setMeta({tags: tags}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleLogout() {\n    updateFavicon(0);\n\n    // Remove stored data.\n    localStorage.removeItem('auth-token');\n    localStorage.removeItem('firebase-token');\n    localStorage.removeItem('settings');\n    if (this.state.firebaseToken) {\n      this.fbPush.deleteToken(this.state.firebaseToken)\n    }\n\n    clearInterval(this.reconnectCountdown);\n\n    if (this.tinode) {\n      this.tinode.clearStorage();\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.setState(this.getBlankState());\n\n    this.tinode = TinodeWeb.tnSetup(this.state.serverAddress,\n      this.state.transport, this.props.intl.locale, LocalStorageUtil.getObject('keep-logged-in'));\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n    HashNavigation.navigateTo('');\n  }\n\n  handleDeleteAccount() {\n    this.tinode.delCurrentUser(true).then((ctrl) => {\n      this.handleLogout();\n    });\n  }\n\n  handleDeleteTopicRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Request to hard-delete topic.\n    topic.delTopic(true).then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleDeleteMessagesRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Request hard-delete all messages.\n    topic.delMessagesAll(true).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleLeaveUnsubRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.leave(true).then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleBlockTopicRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleReportTopic(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Publish spam report.\n    this.tinode.publish(Tinode.TOPIC_SYS, Tinode.Drafty.attachJSON(null, {\n      'action': 'report',\n      'target': topicName\n    }));\n\n    // Remove J and P permissions.\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleShowContextMenu(params, menuItems) {\n    this.setState({\n      contextMenuVisible: true,\n      contextMenuClickAt: {x: params.x, y: params.y},\n      contextMenuParams: params,\n      contextMenuItems: menuItems || this.defaultTopicContextMenu(params.topicName),\n      contextMenuBounds: this.selfRef.current.getBoundingClientRect()\n    });\n  }\n\n  defaultTopicContextMenu(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n\n    let muted = false, blocked = false, self_blocked = false, subscribed = false, deleter = false, archived = false;\n    if (topic) {\n      subscribed = topic.isSubscribed();\n      archived = topic.isArchived();\n\n      const acs = topic.getAccessMode();\n      if (acs) {\n        muted = acs.isMuted();\n        blocked = !acs.isJoiner();\n        self_blocked = !acs.isJoiner('want');\n        deleter = acs.isDeleter();\n      }\n    }\n\n    return [\n      subscribed ? {\n        title: this.props.intl.formatMessage(messages.menu_item_info),\n        handler: this.handleShowInfoView\n      } : null,\n      subscribed ? 'messages_clear' : null,\n      subscribed && deleter ? 'messages_clear_hard' : null,\n      muted ? (blocked ? null : 'topic_unmute') : 'topic_mute',\n      self_blocked ? 'topic_unblock' : 'topic_block',\n      archived ? 'topic_restore' : 'topic_archive',\n      'topic_delete'\n    ];\n  }\n\n  handleHideContextMenu() {\n    this.setState({\n      contextMenuVisible: false,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuBounds: null\n    });\n  }\n\n  handleContextMenuAction(action, promise, params) {\n    if (action == 'topic_archive') {\n      if (promise && params.topicName && params.topicName == this.state.topicSelected) {\n        promise.then(() => {\n          this.handleTopicSelected(null);\n        });\n      }\n    }\n  }\n\n  handleShowAlert(title, content, onConfirm, confirmText, onReject, rejectText) {\n    this.setState({\n      alertVisible: true,\n      alertParams: {\n        title: title,\n        content: content,\n        onConfirm: onConfirm,\n        confirm: confirmText,\n        onReject: onReject,\n        reject: rejectText\n      }\n    });\n  }\n\n  handleShowInfoView() {\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'info', 'info'));\n    this.setState({infoPanel: 'info'});\n  }\n\n  handleMemberUpdateRequest(topicName, added, removed) {\n    if (!topicName) {\n      return;\n    }\n\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    if (added && added.length > 0) {\n      added.map((uid) => {\n        topic.invite(uid, null).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n\n    if (removed && removed.length > 0) {\n      removed.map((uid) => {\n        topic.delSubscription(uid).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n  }\n\n  handleValidateCredentialsRequest(cred, code) {\n    if (this.tinode.isAuthenticated()) {\n      const me = this.tinode.getMeTopic();\n      me.setMeta({cred: {meth: cred, resp: code}})\n        .then(() => {\n          HashNavigation.navigateTo('');\n        })\n        .catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n    } else {\n      this.setState({credMethod: cred, credCode: code});\n      this.doLogin(null, null, {meth: cred, resp: code});\n    }\n  }\n\n  handlePasswordResetRequest(method, value) {\n    // If already connected, connnect() will return a resolved promise.\n    return this.tinode.connect()\n      .then(() => {\n        return this.tinode.requestResetAuthSecret('basic', method, value);\n      })\n      .catch((err) => {\n        // Socket error\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleResetPassword(scheme, newPassword, token) {\n    token = base64ReEncode(token);\n    if (!token) {\n      this.handleError(this.props.intl.formatMessage(messages.invalid_security_token), 'err');\n    } else {\n      this.tinode.connect()\n        .then(() => {\n          return this.tinode.updateAccountBasic(null, null, newPassword, {token: token});\n        })\n        .catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"app-container\" ref={this.selfRef}>\n        {this.state.contextMenuVisible ?\n          <ContextMenu\n            tinode={this.tinode}\n            bounds={this.state.contextMenuBounds}\n            clickAt={this.state.contextMenuClickAt}\n            params={this.state.contextMenuParams}\n            items={this.state.contextMenuItems}\n            hide={this.handleHideContextMenu}\n            onShowAlert={this.handleShowAlert}\n            onAction={this.handleContextMenuAction}\n            onTopicRemoved={(topicName) => {\n              if (topicName == this.state.topicSelected) {\n                this.handleTopicSelected(null);\n              }\n            }}\n            onError={this.handleError} />\n          :\n          null\n        }\n        <Alert\n          visible={this.state.alertVisible}\n          title={this.state.alertParams.title}\n          content={this.state.alertParams.content}\n          onReject={this.state.alertParams.onReject ? (() => { this.setState({alertVisible: false}); }) : null}\n          reject={this.state.alertParams.reject}\n          onConfirm={() => { this.setState({alertVisible: false}); this.state.alertParams.onConfirm(); }}\n          confirm={this.state.alertParams.confirm}\n          />\n        <SidepanelView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          displayMobile={this.state.displayMobile}\n          hideSelf={this.state.displayMobile && this.state.mobilePanel !== 'sidepanel'}\n          state={this.state.sidePanelSelected}\n          title={this.state.sidePanelTitle}\n          avatar={this.state.sidePanelAvatar}\n          trustedBadges={this.state.myTrustedBadges}\n          login={this.state.login}\n          persist={this.state.persist}\n          myUserId={this.state.myUserId}\n          loginDisabled={this.state.loginDisabled}\n          loadSpinnerVisible={this.state.loadSpinnerVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          topicSelected={this.state.topicSelected}\n          chatList={this.state.chatList}\n          credMethod={this.state.credMethod}\n          credCode={this.state.credCode}\n\n          transport={this.state.transport}\n          messageSounds={this.state.messageSounds}\n          desktopAlerts={this.state.desktopAlerts}\n          desktopAlertsEnabled={this.state.desktopAlertsEnabled}\n          incognitoMode={this.state.incognitoMode}\n          serverAddress={this.state.serverAddress}\n          serverVersion={this.state.serverVersion}\n\n          onGlobalSettings={this.handleGlobalSettings}\n          onSignUp={this.handleNewAccount}\n          onSettings={this.handleSettings}\n          onNavigate={this.basicNavigator}\n          onLoginRequest={this.handleLoginRequest}\n          onPersistenceChange={this.handlePersistenceChange}\n          onCreateAccount={this.handleNewAccountRequest}\n          onUpdateAccountDesc={this.handleTopicUpdateRequest}\n          onUpdatePassword={this.handleUpdatePasswordRequest}\n          onUpdateAccountTags={this.handleUpdateAccountTagsRequest}\n          onTogglePushNotifications={this.togglePushToken}\n          onToggleMessageSounds={this.handleToggleMessageSounds}\n          onToggleIncognitoMode={this.handleToggleIncognitoMode}\n          onCredAdd={this.handleCredAdd}\n          onCredDelete={this.handleCredDelete}\n          onCredConfirm={this.handleCredConfirm}\n          onTopicSelected={this.handleTopicSelected}\n          onCreateTopic={this.handleStartTopicRequest}\n          onLogout={this.handleLogout}\n          onDeleteAccount={this.handleDeleteAccount}\n          onShowAlert={this.handleShowAlert}\n          onCancel={this.handleSidepanelCancel}\n          onError={this.handleError}\n          onValidateCredentials={this.handleValidateCredentialsRequest}\n          onPasswordResetRequest={this.handlePasswordResetRequest}\n          onResetPassword={this.handleResetPassword}\n          onShowArchive={this.handleShowArchive}\n          onShowBlocked={this.handleShowBlocked}\n\n          onInitFind={this.tnInitFind}\n          searchResults={this.state.searchResults}\n          onSearchContacts={this.handleSearchContacts}\n\n          showContextMenu={this.handleShowContextMenu} />\n\n        <MessagesView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          ready={this.state.ready}\n          online={this.state.topicSelectedOnline}\n          acs={this.state.topicSelectedAcs}\n          displayMobile={this.state.displayMobile}\n          viewportWidth={this.state.viewportWidth}\n          viewportHeight={this.state.viewportHeight}\n          hideSelf={this.state.displayMobile &&\n            (this.state.mobilePanel !== 'topic-view' || this.state.infoPanel)}\n          topic={this.state.topicSelected}\n          myUserId={this.state.myUserId}\n          // User public.fn.\n          myUserName={this.state.sidePanelTitle}\n          serverVersion={this.state.serverVersion}\n          serverAddress={this.state.serverAddress}\n          applicationVisible={this.state.applicationVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          newTopicParams={this.state.newTopicParams}\n\n          onHideMessagesView={this.handleHideMessagesView}\n          onData={this.tnData}\n          onError={this.handleError}\n          onNewTopicCreated={this.handleNewTopicCreated}\n          showContextMenu={this.handleShowContextMenu}\n          onChangePermissions={this.handleChangePermissions}\n          onNewChat={this.handleNewChatInvitation}\n          sendMessage={this.handleSendMessage} />\n\n        {this.state.infoPanel ?\n          <InfoView\n            tinode={this.tinode}\n            connected={this.state.connected}\n            displayMobile={this.state.displayMobile}\n            topic={this.state.topicSelected}\n            searchableContacts={this.state.searchableContacts}\n            myUserId={this.state.myUserId}\n            panel={this.state.infoPanel}\n\n            errorText={this.state.errorText}\n            errorLevel={this.state.errorLevel}\n            errorAction={this.state.errorAction}\n            errorActionText={this.state.errorActionText}\n\n            onNavigate={this.infoNavigator}\n            onTopicDescUpdateRequest={this.handleTopicUpdateRequest}\n            onShowAlert={this.handleShowAlert}\n            onChangePermissions={this.handleChangePermissions}\n            onMemberUpdateRequest={this.handleMemberUpdateRequest}\n            onDeleteTopic={this.handleDeleteTopicRequest}\n            onDeleteMessages={this.handleDeleteMessagesRequest}\n            onLeaveTopic={this.handleLeaveUnsubRequest}\n            onBlockTopic={this.handleBlockTopicRequest}\n            onReportTopic={this.handleReportTopic}\n            onAddMember={this.handleManageGroupMembers}\n            onTopicTagsUpdateRequest={this.handleTagsUpdateRequest}\n            onTopicUnArchive={this.handleUnarchive}\n            onInitFind={this.tnInitFind}\n            onError={this.handleError}\n\n            showContextMenu={this.handleShowContextMenu}\n            />\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(TinodeWeb);\n","// Put all packages together.\n// Used to generate umd/index.prod.js\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { IntlProvider } from 'react-intl';\n\nimport allMessages from './messages.json';\nimport TinodeWeb from './views/tinode-web.jsx';\nimport HashNavigation from './lib/navigation.js';\n\n// Detect human language to use in the UI:\n//  Check parameters from URL hash #?hl=ru, then browser, then use 'en' as a fallback.\nconst { params } = HashNavigation.parseUrlHash(window.location.hash);\nconst language = (params && params.hl) ||\n  (navigator.languages && navigator.languages[0]) ||\n  navigator.language ||\n  navigator.userLanguage ||\n  'en';\n\n// Get the base language 'en' from a more specific 'en_GB' or 'en-US' as a partial fallback.\nconst baseLanguage = language.toLowerCase().split(/[-_]/)[0];\n\n// Try the full locale first, then the locale without the region code, fallback to 'en'.\nconst messages =\n  allMessages[language] ||\n  allMessages[baseLanguage] ||\n  allMessages.en;\n\nReactDOM.render(\n  <React.StrictMode>\n    <IntlProvider locale={language} messages={messages} textComponent={React.Fragment}>\n      <TinodeWeb />\n    </IntlProvider>\n  </React.StrictMode>,\n  document.getElementById('mountPoint')\n);\n","// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// startup\n// Load entry module and return exports\n// This entry module doesn't tell about it's top-level declarations so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[789](0, __webpack_exports__, __webpack_require__);\n"],"sourceRoot":""}