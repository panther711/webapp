{"version":3,"sources":["webpack://tinode-webapp/external \"React\"","webpack://tinode-webapp/external \"ReactDOM\"","webpack://tinode-webapp/external \"ReactIntl\"","webpack://tinode-webapp/external \"firebase\"","webpack://tinode-webapp/external \"Tinode\"","webpack://tinode-webapp/external [\"firebase\",\"messaging\"]","webpack://tinode-webapp/./src/widgets/alert.jsx","webpack://tinode-webapp/./src/version.js","webpack://tinode-webapp/./src/config.js","webpack://tinode-webapp/./src/widgets/context-menu.jsx","webpack://tinode-webapp/./src/lib/strformat.js","webpack://tinode-webapp/./src/widgets/letter-tile.jsx","webpack://tinode-webapp/./src/lib/blob-helpers.js","webpack://tinode-webapp/./src/widgets/avatar-upload.jsx","webpack://tinode-webapp/./src/widgets/checkbox.jsx","webpack://tinode-webapp/./src/widgets/contact-badges.jsx","webpack://tinode-webapp/./src/lib/utils.js","webpack://tinode-webapp/./src/widgets/received-marker.jsx","webpack://tinode-webapp/./src/widgets/unread-badge.jsx","webpack://tinode-webapp/./src/widgets/contact.jsx","webpack://tinode-webapp/./src/widgets/contact-action.jsx","webpack://tinode-webapp/./src/widgets/contact-list.jsx","webpack://tinode-webapp/./src/widgets/menu-cancel.jsx","webpack://tinode-webapp/./src/widgets/error-panel.jsx","webpack://tinode-webapp/./src/widgets/chip.jsx","webpack://tinode-webapp/./src/widgets/chip-input.jsx","webpack://tinode-webapp/./src/widgets/group-manager.jsx","webpack://tinode-webapp/./src/widgets/visible-password.jsx","webpack://tinode-webapp/./src/widgets/in-place-edit.jsx","webpack://tinode-webapp/./src/widgets/more-button.jsx","webpack://tinode-webapp/./src/widgets/permissions-editor.jsx","webpack://tinode-webapp/./src/widgets/tag-manager.jsx","webpack://tinode-webapp/./src/views/info-view.jsx","webpack://tinode-webapp/./src/widgets/file-progress.jsx","webpack://tinode-webapp/./src/widgets/attachment.jsx","webpack://tinode-webapp/./src/widgets/uploading-image.jsx","webpack://tinode-webapp/./src/widgets/chat-message.jsx","webpack://tinode-webapp/./src/widgets/send-message.jsx","webpack://tinode-webapp/./src/widgets/doc-preview.jsx","webpack://tinode-webapp/./src/widgets/group-subs.jsx","webpack://tinode-webapp/./src/widgets/image-preview.jsx","webpack://tinode-webapp/./src/widgets/invitation.jsx","webpack://tinode-webapp/./src/widgets/load-spinner.jsx","webpack://tinode-webapp/./src/views/logo-view.jsx","webpack://tinode-webapp/./src/lib/navigation.js","webpack://tinode-webapp/./src/views/messages-view.jsx","webpack://tinode-webapp/./src/widgets/button-back.jsx","webpack://tinode-webapp/./src/widgets/menu-contacts.jsx","webpack://tinode-webapp/./src/widgets/menu-start.jsx","webpack://tinode-webapp/./src/widgets/side-navbar.jsx","webpack://tinode-webapp/./src/views/contacts-view.jsx","webpack://tinode-webapp/./src/lib/local-storage.js","webpack://tinode-webapp/./src/views/create-account-view.jsx","webpack://tinode-webapp/./src/views/edit-account-view.jsx","webpack://tinode-webapp/./src/views/acc-general-view.jsx","webpack://tinode-webapp/./src/views/acc-notifications-view.jsx","webpack://tinode-webapp/./src/views/acc-security-view.jsx","webpack://tinode-webapp/./src/views/acc-support-view.jsx","webpack://tinode-webapp/./src/views/login-view.jsx","webpack://tinode-webapp/./src/widgets/new-topic-by-id.jsx","webpack://tinode-webapp/./src/widgets/new-topic-group.jsx","webpack://tinode-webapp/./src/widgets/search-contacts.jsx","webpack://tinode-webapp/./src/views/new-topic-view.jsx","webpack://tinode-webapp/./src/views/password-reset-view.jsx","webpack://tinode-webapp/./src/widgets/host-selector.jsx","webpack://tinode-webapp/./src/views/settings-view.jsx","webpack://tinode-webapp/./src/views/validation-view.jsx","webpack://tinode-webapp/./src/views/sidepanel-view.jsx","webpack://tinode-webapp/./src/lib/host-name.js","webpack://tinode-webapp/./src/views/tinode-web.jsx","webpack://tinode-webapp/./src/index.js","webpack://tinode-webapp/webpack/bootstrap","webpack://tinode-webapp/webpack/runtime/compat get default export","webpack://tinode-webapp/webpack/runtime/define property getters","webpack://tinode-webapp/webpack/runtime/hasOwnProperty shorthand","webpack://tinode-webapp/webpack/startup"],"names":["React","ReactDOM","ReactIntl","firebase","messaging","Tinode","Alert","render","this","props","visible","className","title","content","onReject","onClick","reject","FormattedMessage","id","defaultMessage","onConfirm","confirm","PACKAGE_VERSION","APP_NAME","KNOWN_HOSTS","hosted","local","DEFAULT_HOST","KEYPRESS_DELAY","DEFAULT_P2P_ACCESS_MODE","REM_SIZE","AVATAR_SIZE","MAX_INBAND_ATTACHMENT_SIZE","MAX_EXTERN_ATTACHMENT_SIZE","MAX_IMAGE_DIM","MAX_TITLE_LENGTH","messages","defineMessages","info","clear_messages","clear_for_all","delete","delete_for_all","send_retry","mute","unmute","topic_delete","topic_delete_warning","delete_messages_warning","unblock","block","topic_block_warning","member_delete","archive","edit_permissions","clear_messages_warning","ContextMenu","constructor","super","formatMessage","intl","handlePageClick","bind","handleEscapeKey","handleClick","MenuItems","handler","params","errorHandler","onShowAlert","deleteMessages","message","retryMessage","topicPermissionSetter","then","ctrl","onTopicRemoved","topicName","topic","tinode","getTopic","delTopic","catch","err","console","log","user","delSubscription","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","e","contains","target","preventDefault","stopPropagation","hide","keyCode","item","items","currentTarget","dataset","onAction","onError","all","hard","cancelSend","seq","delMessagesAll","delMessagesList","flushMessage","msg","createMessage","publishDraft","mode","result","updateMode","count","menu","map","push","key","data-id","vSize","length","position","left","bounds","right","clickAt","x","top","bottom","y","style","injectIntl","shortDateFormat","locale","window","navigator","userLanguage","language","now","Date","getFullYear","getMonth","getDate","toLocaleTimeString","hour12","hour","minute","toLocaleDateString","month","day","year","bytesToHumanSize","bytes","sizes","bucket","Math","min","floor","log2","pow","round","toFixed","LetterTile","avatar","isGroup","iconColor","abs","value","hash","i","charCodeAt","stringHash","trim","letter","charAt","alt","src","onerror","SUPPORTED_IMAGE_FORMATS","MIME_EXTENSIONS","makeImageDataUrl","photo","data","type","startsWith","ref","fitImageSize","width","height","maxWidth","maxHeight","forceSquare","scale","size","dstWidth","dstHeight","srcWidth","srcHeight","xoffset","yoffset","imageScaled","fileOrBlob","maxSize","onSuccess","img","Image","crossOrigin","onload","async","URL","revokeObjectURL","dim","canvas","createElement","ctx","getContext","imageSmoothingEnabled","drawImage","mime","includes","blob","Promise","resolve","toBlob","clearRect","fname","idx","indexOf","ext","at","lastIndexOf","substring","fileNameForMime","name","createObjectURL","fileToBase64","file","reader","FileReader","split","readAsDataURL","blobToBase64","AvatarUpload","state","dataUrl","handleFileUpload","componentDidUpdate","prevProps","setState","files","unused","base64bits","du","onImageChanged","randId","random","substr","readOnly","href","uid","accept","onChange","htmlFor","CheckBox","handleChange","checked","icon_mapping","ContactBadges","badges","b","icon","color","updateFavicon","oldIcon","getElementById","head","getElementsByTagName","newIcon","rel","removeChild","appendChild","theCard","fn","imageUrl","imageMimeType","card","mimeType","matches","exec","Error","arrayEqual","a","Array","isArray","sort","l","sanitizeUrl","url","allowedSchemes","replace","test","schemes","join","RegExp","deliveryMarker","received","message_sending","message_sending_failed","ReceivedMarker","timestamp","marker","UnreadBadge","drafty_image","drafty_form","drafty_attachment","Contact","handleContextClick","onSelected","index","showContextMenu","pageY","pageX","online","slice","icon_badges","acs","showMode","getMode","isMuted","isJoiner","subtitle","preview","Drafty","draftyFormatter","comment","showCheckmark","selected","showOnline","isChannel","unread","values","el","attr","concat","ContactAction","action","badge_you","badge_owner","ContactList","topicSelected","contactNodes","contactsCount","contacts","c","filterFunc","filter","filterOn","private","toLowerCase","public","myUserId","isOwner","deliveryStatus","latestMessage","_status","msgStatus","showUnread","connected","onTopicSelected","noScroll","dangerouslySetInnerHTML","__html","emptyListMessage","MenuCancel","onCancel","ErrorPanel","show","level","onClearError","warn","text","whiteSpace","actionText","Chip","handleCancel","invalid","noAvatar","required","ChipInput","deriveStateFromProps","input","focused","handleTextInput","removeChipAt","handleChipCancel","handleFocusGained","handleFocusLost","handleKeyDown","placeholder","chips","prompt","sortedChips","sortChips","staticMembers","chipIndex","indexChips","prevState","keep","normal","removed","onChipRemoved","onFocusLost","onEnter","undefined","avatarDisabled","onFocus","onBlur","onKeyDown","autoFocus","no_contacts","contacts_not_found_short","GroupManager","members","indexMembers","keepInitialMembers","requiredMember","contactFilter","noContactsMessage","selectedContacts","handleContactSelected","handleMemberRemoved","handleContactFilter","handleSubmit","m","delta","present","keepInitial","stat","sel","userId","status","splice","val","query","instance","added","Object","keys","k","onSubmit","doContactFiltering","VisiblePassword","handleVisibility","handeTextChange","handleEditingFinished","onFinished","setTimeout","activeElement","tabIndex","autoComplete","InPlaceEdit","active","initialValue","handleStartEditing","handlePasswordFinished","newValue","focus","event","checkValidity","fieldType","spanText","spanClass","MoreButton","open","handleToggle","onToggle","joiner","writer","preser","approver","sharer","deleter","owner","PermissionsEditor","names","skip","compare","userTitle","userAvatar","modeTitle","compareTitle","TagManager","tags","tagInput","activated","handleTagInput","handleAddTag","handleRemoveTag","nextProps","last","tag","maxTagCount","getServerLimit","onTagsChanged","minTagLength","maxTagLength","add_tags_prompt","requested","granted","other_user","delete_messages","leave_chat","leave_chat_warning","block_contact","block_contact_warning","report_chat","report_chat_warning","InfoView","admin","muted","address","groupTopic","channel","fullName","selectedContact","access","modeGiven","modeWant","modeGiven2","modeWant2","auth","anon","contactList","showMemberPanel","showPermissionEditorFor","moreInfoExpanded","previousMetaDesc","previousSubsUpdated","previousTagsUpdated","resetSubs","resetDesc","onMetaDesc","onSubsUpdated","onTagsUpdated","handleFullNameUpdate","handlePrivateUpdate","handleImageChanged","handleMuted","handlePermissionsChanged","handleLaunchPermissionsEditor","handleHidePermissionsEditor","handleShowAddMembers","handleHideAddMembers","handleMemberUpdateRequest","handleDeleteMessages","handleLeave","handleBlock","handleReport","handleMemberSelected","handleMoreInfo","handleTagsUpdated","handleContextMenu","getType","newState","user2","subscriber","getGiven","getWant","subscribers","sub","defacs","getDefaultAccess","getAccessMode","isAdmin","isSharer","isDeleter","isGroupType","isChannelType","getMeta","startMetaQuery","withTags","build","desc","subs","onTopicDescUpdate","ignored","onChangePermissions","perm","userPermissionsEdited","which","toEdit","toCompare","toSkip","titleEdit","titleCompare","userPermissionsTitle","userPermissionsAvatar","editedPermissions","immutablePermissions","editedPermissionsTitle","immutablePermissionsTitle","editedPermissionsSkipped","onInitFind","onMemberUpdateRequest","onDeleteMessages","onLeaveTopic","onBlockTopic","onReportTopic","onTopicTagsUpdate","menuItems","displayMobile","errorLevel","errorText","searchableContacts","private_placeholder","more","no_members","FileProgress","progress","Attachment","downloader","downloadFile","filename","mimetype","getLargeFileHelper","download","loaded","uploading","onCancelUpload","cancel","helperFunc","isUrlRelative","downloadUrl","downloadWidget","UploadingImage","ChatMessage","uploader","onProgress","handleProgress","handleImagePreview","handleFormButtonClick","handleCancelUpload","onImagePreview","resp","act","onFormResponse","MESSAGE_STATUS_FAILED","ratio","sideClass","deleted","sequence","response","bubbleClass","fullDisplay","userFrom","attachments","att","userName","notFound","viewportWidth","minWidth","minHeight","authorizeURL","sanitizeImageUrl","loading","inner","child","messaging_disabled","type_new_message","add_image_caption","file_attachment_too_large","cannot_initiate_upload","SendMessage","keypressTimestamp","getTime","handlePasteEvent","handleAttachImage","handleAttachFile","handleSend","handleKeyPress","handleMessageTyping","messageEditArea","disabled","onImageSuccess","onAttachmentSuccess","clipboardData","originalEvent","kind","getAsFile","imageFileScaledToBase64","imageFileToBase64","filePasted","bits","onAttachImage","onAttachFile","acceptBlank","noInput","onSendMessage","shiftKey","onKeyPress","messagePrompt","attachImage","click","attachFile","display","DocPreview","handleSendDoc","caption","onClose","mimeToIcon","default","image","video","iconFromMime","GroupSubs","usersOnline","totalCount","countToShow","some","overflow","ImagePreview","handleSendImage","assignWidth","node","getBoundingClientRect","maxlength","max","Invitation","handleButtonAction","evt","LoadSpinner","LogoView","version","serverVersion","serverAddress","HashNavigation","parts","path","forEach","part","decodeURIComponent","location","args","hasOwnProperty","parsed","parseUrlHash","composeUrlHash","sidepanel","online_now","last_seen","not_found","isUnconfirmed","ex","getExcessive","isPeerRestricted","ms","getMissing","MessagesView","getDerivedStateFromProps","leave","sendImageAttachment","sendFileAttachment","sendKeyPress","handleScrollReference","handleScrollEvent","handleDescChange","handleSubsUpdated","handleNewMessage","handleAllMessagesReceived","handleInfoReceipt","handleImagePostview","handleClosePreview","handleFormResponse","handleShowContextMenuMessage","handleNewChatAcceptance","handleEnablePeer","postReadNotification","clearNotificationQueue","readNotificationQueue","readNotificationTimer","messagesScroller","scrollTop","scrollHeight","scrollPosition","viewportHeight","onData","onAllMessagesReceived","onInfo","onPres","applicationVisible","isSubscribed","ready","newTopic","newTopicParams","_topicName","getQuery","withLaterDesc","withLaterSub","isReader","withLaterData","withLaterDel","fetchingMessages","setQuery","subscribe","code","onNewTopicCreated","queuedMessages","pub","_sending","publishMessage","setUrlTopic","blankState","nextState","docPreview","imagePreview","imagePostview","typingIndicator","msgs","assign","onlineSubs","peer","p2pPeerDesc","peerMessagingDisabled","isWriter","readingBlocked","unconformed","unconfirmed","oldTopicName","isTopicCached","oldTopic","finally","msgHasMoreMessages","getMessagesPage","setInterval","clearInterval","n","shift","sendAt","noteRead","setMilliseconds","getMilliseconds","isNewMessage","from","what","clearTimeout","keyPressTimer","forceUpdate","sendMessage","attachJSON","parse","searchParams","set","search","messageSpecificMenuItems","onNewChat","noteKeyPress","maxInbandAttachmentSize","uploadCompletionPromise","upload","urlPromise","maxExternAttachmentSize","limit","tinyBlob","blobMime","tinyBits64","insertImage","_tempPreview","appendLineBreak","append","init","bits64","found","find","_cancelled","component","hideSelf","component2","messageNodes","previousFrom","chatBoxClass","nextFrom","thisFrom","isReply","userDesc","hi","ts","_uploader","lastSeen","cont","getMeTopic","getContact","seen","when","onHideMessagesView","ButtonBack","onBack","MenuContacts","onNewTopic","onSettings","MenuStart","onSignUp","SideNavbar","archived_contacts_title","ContactsView","handleAction","unreadThreads","archivedCount","chatList","blocked","arch","touched","action_ignored","onShowArchive","LocalStorageUtil","localStorage","setItem","JSON","stringify","getItem","oldVal","getObject","setObject","removeItem","CreateAccountView","login","password","email","imageDataUrl","errorCleared","saveToken","handleLoginChange","handlePasswordChange","handleEmailChange","handleFnChange","handleToggleSaveToken","onCreateAccount","submitClasses","login_prompt","password_prompt","full_name_prompt","email_prompt","stay_logged_in","EditAccountView","me","onBasicNavigate","AccGeneralView","credentials","getCredentials","addCredActive","addCredInvalid","newCred","previousOnTags","tnNewTags","tnCredsUpdated","handleCredChange","handleCredKeyDown","handleCredEntered","onCredsUpdated","creds","onUpdateAccount","method","asPhone","asEmail","onCredAdd","onUpdateTags","cred","meth","done","onCredConfirm","onCredDelete","full_name_placeholder","title_tag_manager","handleCheckboxClick","onToggleMessageSounds","onTogglePushNotifications","onToggleIncognitoMode","messageSounds","desktopAlertsEnabled","desktopAlerts","incognitoMode","delete_account","delete_account_warning","AccSecurityView","blockedCount","handlePasswordUpdate","handleDeleteAccount","pwd","onDeleteAccount","password_unchanged","onLogout","onShowBlocked","AccSupportView","LoginView","hostName","persist","onPersistenceChange","onLogin","autoCorrect","autoCapitalize","invalid_id","NewTopicById","groupId","prefix","NewTopicGroup","handlePrivateChange","handleTagsChanged","handleChannelToggle","SearchContacts","edited","handleSearchChange","handleSearch","handleClear","onSearchContacts","search_placeholder","search_for_contacts","search_no_results","NewTopicView","tabSelected","searchQuery","handleTabClick","handleSearchContacts","handleNewGroupSubmit","handleGroupByID","addUrlParam","removeUrlParam","onCreateTopic","priv","no_contacts_placeholder","searchResults","PasswordResetView","token","scheme","onReset","onRequest","reset","HostSelector","changed","handleHostNameChange","onServerAddressChange","hostOptions","list","SettingsView","transport","handleTransportSelected","handleServerAddressChange","onUpdate","def","ws","lp","transportOptions","phone","ValidationView","credCode","credMethod","numbers_only","register","settings","edit","general","security","notif","support","newtpk","SidepanelView","handleNewTopic","view","errorAction","errorActionText","loadSpinnerVisible","loginDisabled","onLoginRequest","onGlobalSettings","onUpdateAccountTags","onValidateCredentials","onPasswordResetRequest","onResetPassword","detectServerAddress","host","protocol","hostname","port","isSecureConnection","POP_SOUND","Audio","reconnect_countdown","reconnect_now","push_init_failed","invalid_security_token","no_connection","code_doesnot_match","menu_item_info","TinodeWeb","getBlankState","handleResize","handleHashRoute","handleOnline","checkForAppUpdate","handleVisibilityEvent","handleError","handleLoginRequest","handlePersistenceChange","handleConnected","handleAutoreconnectIteration","doLogin","handleCredentialsRequest","handleLoginSuccessful","handleDisconnect","tnMeMetaDesc","tnMeContactUpdate","tnMeSubsUpdated","resetContactList","tnData","tnInitFind","tnFndSubsUpdated","handleTopicSelected","handleHideMessagesView","handleSendMessage","handleNewChatInvitation","handleNewAccount","handleNewAccountRequest","handleUpdateAccountRequest","handleUpdateAccountTagsRequest","handleToggleIncognitoMode","handleSettings","handleGlobalSettings","handleShowArchive","handleShowBlocked","handleToggleMessageSounds","handleCredAdd","handleCredDelete","handleCredConfirm","initFCMessaging","togglePushToken","requestPushToken","handlePushMessage","handleSidepanelCancel","handleStartTopicRequest","handleNewTopicCreated","handleTopicUpdateRequest","handleChangePermissions","handleLogout","handleDeleteMessagesRequest","handleLeaveUnsubRequest","handleBlockTopicRequest","handleReportTopic","handleShowContextMenu","defaultTopicContextMenu","handleHideContextMenu","handleShowAlert","handleShowInfoView","handleHideInfoView","handleValidateCredentialsRequest","handlePasswordResetRequest","handleResetPassword","handleContextMenuAction","autoLogin","messageSoundsOff","FIREBASE_INIT","firebaseToken","hidden","sidePanelSelected","sidePanelTitle","sidePanelAvatar","liveConnection","onLine","topicSelectedOnline","topicSelectedAcs","innerWidth","showInfoPanel","mobilePanel","contextMenuVisible","contextMenuBounds","contextMenuClickAt","contextMenuParams","contextMenuItems","alertVisible","alertParams","requestedTopic","BroadcastChannel","documentElement","clientWidth","clientHeight","tnSetup","onConnect","onDisconnect","onAutoreconnectIteration","setDeviceToken","parsedNav","expires","setAuthToken","connect","tab","readTimer","readTimerCallback","persistentCache","onSetupCompleted","appName","apiKey","secure","setHumanLanguage","enableLogging","oobNotification","fbPush","usePublicVapidKey","messagingVapidKey","serviceWorker","reg","useServiceWorker","postMessage","onTokenRefresh","onMessage","payload","mobile","onupdatefound","installingWorker","installing","onstatechange","controller","getTopicAccessMode","newTopicTabSelected","reconnectCountdown","reconnect","isConnected","initStorage","clearStorage","getServerInfo","ver","sec","prom","timeLeft","seconds","secondsToTime","isAuthenticated","promise","getAuthToken","loginBasic","loginToken","goToTopic","onContactUpdate","getCurrentUserID","withDesc","withCred","disconnect","urlHash","setUrlSidePanel","isPresencer","archived","isArchived","play","foundContacts","merged","updated","prepareSearchableContacts","receivedTimer","noteRecv","fnd","getFndTopic","withSub","s","setMeta","isTopicOnline","isP2PType","am","updateWant","login_","password_","public_","cred_","tags_","createAccountBasic","updateAccountBasic","getCurrentLogin","on","enabled","requestPermission","deleteToken","getToken","refreshedToken","delCredential","basicNavigator","newGroupTopicName","oldName","newName","permissions","updateGiven","delCurrentUser","publish","self_blocked","subscribed","confirmText","rejectText","invite","requestResetAuthSecret","newPassword","str","btoa","atob","base64ReEncode","onAddMember","handleManageGroupMembers","hl","languages","baseLanguage","allMessages","IntlProvider","textComponent","__webpack_require__","module","getter","__esModule","d","exports","definition","o","defineProperty","enumerable","get","obj","prop","prototype","call","__webpack_modules__"],"mappings":"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","file":"index.prod.js","sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = React;","const __WEBPACK_NAMESPACE_OBJECT__ = ReactDOM;","const __WEBPACK_NAMESPACE_OBJECT__ = ReactIntl;","const __WEBPACK_NAMESPACE_OBJECT__ = firebase;","const __WEBPACK_NAMESPACE_OBJECT__ = Tinode;","const __WEBPACK_NAMESPACE_OBJECT__ = firebase.messaging;","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Alert extends React.PureComponent {\n  render() {\n    return this.props.visible ?\n      <div className=\"alert-container\">\n        <div className=\"alert\">\n          <div className=\"title\">{this.props.title}</div>\n          <div className=\"content\">{this.props.content}</div>\n          <div className=\"dialog-buttons\">\n            {this.props.onReject ?\n              <button className=\"outline\" onClick={this.props.onReject}>\n                {this.props.reject || <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />}\n              </button>\n              :\n              null\n            }\n            <button className=\"primary\" onClick={this.props.onConfirm}>\n              {this.props.confirm || <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\"  />}\n            </button>\n          </div>\n        </div>\n      </div>\n    :\n    null;\n  }\n};\n","// This is a generated file. Don't edit.\n\nexport const PACKAGE_VERSION = \"0.17.2-alpha1\";\n","import { PACKAGE_VERSION } from './version.js';\n\n// Name of this application, used in the User-Agent.\nexport const APP_NAME = 'TinodeWeb/' + (PACKAGE_VERSION || '0.17');\n\n// API key. Use https://github.com/tinode/chat/tree/master/keygen to generate your own\nexport const API_KEY = 'AQEAAAABAAD_rAp4DJh05a1HAwFT3A6K';\n\n// The array of possible hosts to connect to.\nexport const KNOWN_HOSTS = {hosted: 'web.tinode.co', local: 'localhost:6060'};\n\n// Default host name and port to connect to.\nexport const DEFAULT_HOST = KNOWN_HOSTS.hosted;\n\n// Enable console logging.\nexport const LOGGING_ENABLED = true;\n\n// Minimum time between two keypress notifications, milliseconds.\nexport const KEYPRESS_DELAY = 3*1000;\n// Delay before sending a {note} for reciving a message, milliseconds.\nexport const RECEIVED_DELAY = 500;\n// Delay before sending a read notification, milliseconds.\nexport const READ_DELAY = 1000;\n\n// The default shortest allowed tag length. Matches the value on the server.\nexport const MIN_TAG_LENGTH = 2;\n// The default greatest allowed tag length. Matches the value on the server.\nexport const MAX_TAG_LENGTH = 96;\n// The default maximum number of tags allowed. Matches the value on the server.\nexport const MAX_TAG_COUNT = 16;\n\n// Access mode for P2P subscriptions initiated by the current user.\nexport const DEFAULT_P2P_ACCESS_MODE = 'JRWPS';\n// Access mode for new group topics created by the current user.\nexport const NEW_GRP_ACCESS_MODE = 'JRWPSAO';\n// Access mode for a channel.\nexport const CHANNEL_ACCESS_MODE = 'JR';\n\n// Access mode for no access.\nexport const NO_ACCESS_MODE = 'N';\n\n// Mediaquery breakpoint between desktop and mobile, in px. Should match the value\n// in @media (max-size: 640px) in base.css\nexport const MEDIA_BREAKPOINT = 640;\n// Size of css 'rem' unit in pixels. Default 1rem = 10pt = 13px.\nexport const REM_SIZE = 13;\n\n// Size of the avatar image: When an avatar image is uploaded, it's resized to\n// a square of this size.\nexport const AVATAR_SIZE = 128;\n\n// Size of the broken_image shown in MessagesView\nexport const BROKEN_IMAGE_SIZE = 32;\n\n// Number of chat messages to fetch in one call.\nexport const MESSAGES_PAGE = 24;\n\n// Default maximum in-band (included directly into the message) attachment size which fits into\n// a message of 256K in size. Used when the server-provided value is unavailable. The actual\n// binary size of the attachment should be smaller due to base64 encoding expansion and some overhead,\n// for instance 1024 bytes.\n// Increase this limit to a greater value in production, if desired. Also increase\n// max_message_size in the server config.\nexport const MAX_INBAND_ATTACHMENT_SIZE = 262144;\n\n// Default absolute maximum attachment size to be used with the server = 8MB.\n// Used when the server-provided value is unavailable. Increase to something like 100MB in production.\nexport const MAX_EXTERN_ATTACHMENT_SIZE = 1 << 23;\n\n// Maximum allowed linear dimension (pixels) of an image sent inline. Larger images will be shrunk\n// to make the larger dimension fit under this size. You may want to adjust it to 1600 or\n// 2400 for production.\nexport const MAX_IMAGE_DIM = 1024;\n\n// Linear dimensions of image preview: shrink image under this size for previews.\nexport const IMAGE_PREVIEW_DIM = 64;\n\n// Maximum number of online users to be shown in a topic title bar. Others will be\n// hidden under \"+X more\"\nexport const MAX_ONLINE_IN_TOPIC = 4;\n\n// Maximum length of user name, topic title, and private comment.\nexport const MAX_TITLE_LENGTH = 60;\n\n// Length of message previews in chat list, in characters.\nexport const MESSAGE_PREVIEW_LENGTH = 80;\n\n// Link for \"Contact Us\".\nexport const LINK_CONTACT_US = 'email:support@tinode.co';\n\n// Link to Privacy Policy.\nexport const LINK_PRIVACY_POLICY = 'https://tinode.co/privacy.html';\n\n// Link to Terms of Service.\nexport const LINK_TERMS_OF_SERVICE = 'https://tinode.co/terms.html';\n","// Context Menu: popup/dropdown menu.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { injectIntl, defineMessages } from 'react-intl';\n\nimport { REM_SIZE } from '../config.js';\nimport HashNavigation from '../lib/navigation.js';\n\nconst messages = defineMessages({\n  info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  },\n  clear_messages: {\n    id: 'menu_item_clear_messages',\n    defaultMessage: 'Clear messages',\n    description: 'Delete all messages'\n  },\n  clear_for_all: {\n    id: 'menu_item_clear_messages_for_all',\n    defaultMessage: 'Clear for All',\n    description: 'Delete all message(s) for all members'\n  },\n  delete: {\n    id: 'menu_item_delete',\n    defaultMessage: 'Delete',\n    description: 'Delete selected messages'\n  },\n  delete_for_all: {\n    id: 'menu_item_delete_for_all',\n    defaultMessage: 'Delete for All',\n    description: 'Delete selected message(s) for all members'\n  },\n  send_retry: {\n    id: 'menu_item_send_retry',\n    defaultMessage: 'Retry',\n    description: 'Retry sending message'\n  },\n  mute: {\n    id: 'menu_item_mute',\n    defaultMessage: 'Mute',\n    description: 'Turn off notifications'\n  },\n  unmute: {\n    id: 'menu_item_unmute',\n    defaultMessage: 'Unmute',\n    description: 'Turn notifications on'\n  },\n  topic_delete: {\n    id: 'menu_item_delete_topic',\n    defaultMessage: 'Delete',\n    description: 'Delete entire topic'\n  },\n  topic_delete_warning: {\n    id: 'topic_delete_warning',\n    defaultMessage: 'Are you sure you want to delete this conversation?',\n    description: 'Alert warning when deleting entire topic'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  unblock: {\n    id: 'menu_item_unblock',\n    defaultMessage: 'Unblock',\n    description: 'Unblock topic or user'\n  },\n  // Generic string suitable for either topic or user.\n  block: {\n    id: 'menu_item_block',\n    defaultMessage: 'Block',\n    description: 'Block topic or user'\n  },\n  topic_block_warning: {\n    id: 'topic_block_warning',\n    defaultMessage: 'Are you sure you want to block this conversation?',\n    description: 'Alert warning when blocking a topic.'\n  },\n  member_delete: {\n    id: 'menu_item_member_delete',\n    defaultMessage: 'Remove',\n    description: 'Remove user from topic'\n  },\n  archive: {\n    id: 'menu_item_archive_topic',\n    defaultMessage: 'Archive',\n    description: 'Move topic from the list of active chats to archive'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n});\n\nclass ContextMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const {formatMessage} = props.intl;\n\n    this.handlePageClick = this.handlePageClick.bind(this);\n    this.handleEscapeKey = this.handleEscapeKey.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n\n    // Preconfigured menu items.\n    this.MenuItems = {\n      'topic_info': {\n        id: 'topic_info',\n        title: formatMessage(messages.info),\n        handler: null\n      },\n      'messages_clear': {\n        id: 'messages_clear',\n        title: formatMessage(messages.clear_messages),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.clear_messages), // title\n            formatMessage(messages.clear_messages_warning), // content\n            (() => { this.deleteMessages(true, false, params, errorHandler); }), // onConfirm\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'messages_clear_hard': {\n        id: 'messages_clear_hard',\n        title: formatMessage(messages.clear_for_all),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.clear_for_all), // title\n            formatMessage(message.delete_messages_warning), // content\n            (() => { return this.deleteMessages(true, true, params, errorHandler); }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'message_delete': {\n        id: 'message_delete',\n        title: formatMessage(messages.delete),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, false, params, errorHandler);\n        }\n      },\n      'message_delete_hard': {\n        id: 'message_delete_hard',\n        title: formatMessage(messages.delete_for_all),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, true, params, errorHandler);\n        }\n      },\n      'menu_item_send_retry': {\n        id: 'menu_item_send_retry',\n        title: formatMessage(messages.send_retry),\n        handler: (params, errorHandler) => {\n          return this.retryMessage(params, errorHandler);\n        }\n      },\n      'topic_unmute': {\n        id: 'topic_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'topic_mute': {\n        id: 'topic_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'topic_unblock': {\n        id: 'topic_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n      'topic_block': {\n        id: 'topic_block',\n        title: formatMessage(messages.block),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.block), // title\n            formatMessage(messages.topic_block_warning), // content\n            (() => {\n              return this.topicPermissionSetter('-JP', params, errorHandler).then((ctrl) => {\n                this.props.onTopicRemoved(params.topicName);\n                return ctrl;\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_delete': {\n        id: 'topic_delete',\n        title: formatMessage(messages.topic_delete),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.topic_delete), // title\n            formatMessage(messages.topic_delete_warning), // content\n            (() => {\n              const topic = this.props.tinode.getTopic(params.topicName);\n              if (!topic) {\n                console.log(\"Topic not found: \", params.topicName);\n                return;\n              }\n              return topic.delTopic(true).catch((err) => {\n                if (errorHandler) {\n                  errorHandler(err.message, 'err');\n                }\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_archive': {\n        id: 'topic_archive',\n        title: formatMessage(messages.archive),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic) {\n            console.log(\"Topic not found: \", params.topicName);\n            return;\n          }\n          return topic.archive(true).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      // menu_item_edit_permissions is defined elsewhere.\n      'permissions': {\n        id: 'permissions',\n        title: formatMessage(messages.edit_permissions),\n        handler: null\n      },\n      'member_delete': {\n        id: 'member_delete',\n        title: formatMessage(messages.member_delete),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic || !params.user) {\n            console.log(\"Topic or user not found: '\" + params.topicName + \"', '\" + params.user + \"'\");\n            return;\n          }\n          return topic.delSubscription(params.user).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      'member_mute': {\n        id: 'member_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'member_unmute': {\n        id: 'member_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'member_block': {\n        id: 'member_block',\n        title: formatMessage(messages.block),\n        handler: this.topicPermissionSetter.bind(this, '-JP')\n      },\n      'member_unblock': {\n        id: 'member_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handlePageClick, false);\n    document.addEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handlePageClick, false);\n    document.removeEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  handlePageClick(e) {\n    if (ReactDOM.findDOMNode(this).contains(e.target)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n  }\n\n  handleEscapeKey(e) {\n    if (e.keyCode === 27) {\n      this.props.hide();\n    }\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n    let item = this.props.items[e.currentTarget.dataset.id];\n    if (typeof item == 'string') {\n      item = this.MenuItems[item];\n    }\n\n    if (!item) {\n      console.log(\"Invalid menu item ID\", e.currentTarget.dataset.id);\n    } else {\n      this.props.onAction(\n        item.id,\n        item.handler(this.props.params, this.props.onError),\n        this.props.params);\n    }\n  }\n\n  // Menu Actions\n\n  deleteMessages(all, hard, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found: \", params.topicName);\n      return;\n    }\n\n    // We don't know if the message is still pending (e.g. attachment is being uploaded),\n    // so try cancelling first. No harm if we can't cancel.\n    // The message can be cancelled if transmission to the server has not\n    // started yet or if the message send has failed.\n    if (!all && topic.cancelSend(params.seq)) {\n      return;\n    }\n    // Can't cancel. Delete instead.\n    const promise = all ?\n      topic.delMessagesAll(hard) :\n      topic.delMessagesList([params.seq], hard);\n\n    return promise.catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Retries sending failed message.\n  retryMessage(params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    // Remove the existing message entry.\n    if (!topic || !topic.flushMessage(params.seq)) {\n      return;\n    }\n    const msg = topic.createMessage(params.content, false);\n    return topic.publishDraft(msg).catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Function is used by context menu to set permissions.\n  topicPermissionSetter(mode, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found\", params.topicName);\n      return;\n    }\n\n    let result = topic.updateMode(params.user, mode);\n    if (errorHandler) {\n      result = result.catch((err) => {\n        errorHandler(err.message, 'err');\n      });\n    }\n    return result;\n  }\n\n  render() {\n    let count = 0;\n    let menu = [];\n    this.props.items.map((item) => {\n      if (typeof item == 'string') {\n        item = this.MenuItems[item];\n      }\n      if (item && item.title) {\n        menu.push(\n          item.title == '-' ?\n            <li className=\"separator\" key={count} />\n            :\n            <li onClick={this.handleClick} data-id={count} key={count}>{item.title}</li>\n        );\n      }\n      count++;\n    });\n\n    // Ensure that menu is inside the app-container.\n    const hSize = 12 * REM_SIZE;\n    const vSize = REM_SIZE * (0.7 + menu.length * 2.5);\n    const left = (this.props.bounds.right - this.props.clickAt.x < hSize) ?\n        (this.props.clickAt.x - this.props.bounds.left - hSize) :\n        (this.props.clickAt.x - this.props.bounds.left);\n    const top = (this.props.bounds.bottom - this.props.clickAt.y < vSize) ?\n        (this.props.clickAt.y - this.props.bounds.top - vSize) :\n        (this.props.clickAt.y - this.props.bounds.top);\n\n    const position = {\n      left: left + 'px',\n      top: top + 'px'\n    };\n\n    return (\n      <ul className=\"menu\" style={position}>\n        {menu}\n      </ul>\n    );\n  }\n}\n\nexport default injectIntl(ContextMenu);\n","// Short representation of time in the past.\nexport function shortDateFormat(then, locale) {\n  locale = locale || window.navigator.userLanguage || window.navigator.language;\n  const now = new Date();\n  if (then.getFullYear() == now.getFullYear()) {\n    // Same year.\n    if (then.getMonth() == now.getMonth() && then.getDate() == now.getDate()) {\n      // Same month and day, show time only.\n      return then.toLocaleTimeString(locale, {hour12: false, hour: '2-digit', minute: '2-digit'});\n    }\n    // Different month and/or day, show month day, time.\n    return then.toLocaleDateString(locale,\n      {hour12: false, month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit'});\n  }\n  // Different year: just show the date.\n  return then.toLocaleDateString(locale, {year: 'numeric', month: 'short', day: 'numeric'});\n}\n\n// Convert seconds to minutes:seconds, i.e. 156 sec -> 2:36.\nexport function secondsToTime(seconds) {\n  const min = Math.floor(seconds / 60);\n  let sec = seconds % 60;\n  sec = sec < 10 ? `0${sec}` : sec;\n  return `${min}:${sec}`;\n}\n\n// Convert a number of bytes to human-readable format.\nexport function bytesToHumanSize(bytes) {\n  if (!bytes || bytes == 0) {\n    return '0 Bytes';\n  }\n\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n  const bucket = Math.min(Math.floor(Math.log2(bytes) / 10) | 0, sizes.length-1);\n  const count = bytes / Math.pow(1024, bucket);\n  const round = bucket > 0 ? (count < 3 ? 2 : (count < 30 ? 1 : 0)) : 0;\n  return count.toFixed(round) + ' ' + sizes[bucket];\n}\n\n// Get 32 bit integer hash value for a string. Ideally it should produce the same value\n// as Java's String#hash().\nexport function stringHash(value) {\n  let hash = 0;\n  value = '' + value;\n  for (let i = 0; i < value.length; i++) {\n    hash = ((hash << 5) - hash) + value.charCodeAt(i);\n    hash = hash & hash; // Convert to 32bit integer\n  }\n  return hash;\n}\n","import React from 'react';\n\nimport Tinode from 'tinode-sdk';\n\nimport { stringHash } from '../lib/strformat.js';\n\nexport default class LetterTile extends React.PureComponent {\n  render() {\n    let avatar;\n    if (this.props.avatar === true) {\n      const isGroup = (Tinode.topicType(this.props.topic) == 'grp');\n      const iconColor = (isGroup ? 'light-color' : 'dark-color')\n        + (Math.abs(stringHash(this.props.topic)) % 16);\n      if (this.props.topic && this.props.title && this.props.title.trim()) {\n        const letter = this.props.title.trim().charAt(0);\n        const className = 'lettertile ' + iconColor;\n        avatar = (<div className={className}><div>{letter}</div></div>)\n      } else {\n        const className = 'material-icons ' + iconColor;\n        avatar = isGroup ?\n          <i className={className}>group</i> : <i className={className}>person</i>;\n      }\n    } else if (this.props.avatar) {\n      // If avatar image is invalid, show a placeholder.\n      avatar = <img className=\"avatar\" alt=\"avatar\" src={this.props.avatar}\n        onError={(e)=>{e.target.onerror = null; e.target.src=\"/img/broken_image.png\"}} />;\n    } else {\n      avatar = null;\n    }\n    return avatar;\n  }\n}\n","// File and image helper functions.\nimport { MAX_INBAND_ATTACHMENT_SIZE, MAX_IMAGE_DIM } from '../config.js';\nimport { bytesToHumanSize } from './strformat.js'\n\n// Supported image MIME types and corresponding file extensions.\nexport const SUPPORTED_IMAGE_FORMATS = ['image/jpeg', 'image/gif', 'image/png', 'image/svg', 'image/svg+xml'];\nexport const MIME_EXTENSIONS         = ['jpg',        'gif',       'png',       'svg',       'svg'];\n\n// Make a data: URL from public.photo\nexport function makeImageDataUrl(photo) {\n  if (photo) {\n    if (photo.data && photo.type) {\n      const mime = photo.type.startsWith('image/') ? photo.type : ('image/' + photo.type);\n      return 'data:' + mime + ';base64,' + photo.data;\n    }\n    return photo.ref;\n  }\n  return null;\n}\n\n// Calculate linear dimensions for scaling image down to fit under a certain size.\n// Returns an object which contains destination sizes, source sizes, and offsets\n// into source (when making square images).\nexport function fitImageSize(width, height, maxWidth, maxHeight, forceSquare) {\n  // Sanitize input\n  width = width | 0;\n  height = height | 0;\n  maxWidth = maxWidth | 0;\n  maxHeight = maxHeight | 0;\n\n  if (width <= 0 || height <= 0 || maxWidth <= 0 || maxHeight <= 0) {\n    return null;\n  }\n\n  if (forceSquare) {\n    maxWidth = maxHeight = Math.min(maxWidth, maxHeight);\n  }\n\n  const scale = Math.min(\n    Math.min(width, maxWidth) / width,\n    Math.min(height, maxHeight) / height\n  );\n\n  const size = {\n    dstWidth: (width * scale) | 0,\n    dstHeight: (height * scale) | 0,\n  };\n\n  if (forceSquare) {\n    // Also calculate parameters for making the image square.\n    size.dstWidth = size.dstHeight = Math.min(size.dstWidth, size.dstHeight);\n    size.srcWidth = size.srcHeight = Math.min(width, height);\n    size.xoffset = ((width - size.srcWidth) / 2) | 0;\n    size.yoffset = ((height - size.srcWidth) / 2) | 0;\n  } else {\n    size.xoffset = size.yoffset = 0;\n    size.srcWidth = width;\n    size.srcHeight = height;\n  }\n  return size;\n}\n\n// Ensure file's extension matches mime content type\nexport function fileNameForMime(fname, mime) {\n  const idx = SUPPORTED_IMAGE_FORMATS.indexOf(mime);\n  if (idx < 0 || !fname) {\n    // Unknown mime or empty name.\n    return fname;\n  }\n  const ext = MIME_EXTENSIONS[idx];\n\n  const at = fname.lastIndexOf('.');\n  if (at >= 0) {\n    fname = fname.substring(0, at);\n  }\n  return fname + '.' + ext;\n}\n\n// Scale uploaded image to fit under certain dimensions and byte size, optionally constraining to a square.\n// On success calls onSuccess callback with the scaled image as Blob.\nexport function imageScaled(fileOrBlob, maxWidth, maxHeight, maxSize, forceSquare, onSuccess, onError) {\n  const img = new Image();\n  img.crossOrigin = 'Anonymous';\n  img.onerror = function(err) {\n    onError(\"Image format unrecognized\");\n  }\n  img.onload = async function() {\n    // Once the image is loaded, the URL is no longer needed.\n    URL.revokeObjectURL(img.src);\n\n    // Calculate the desired image dimensions.\n    const dim = fitImageSize(this.width, this.height, maxWidth, maxHeight, forceSquare);\n    if (!dim) {\n      onError(\"Invalid image\");\n      return;\n    }\n    let canvas = document.createElement('canvas');\n    canvas.width = dim.dstWidth;\n    canvas.height = dim.dstHeight;\n    let ctx = canvas.getContext('2d');\n    ctx.imageSmoothingEnabled = true;\n    ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n      0, 0, dim.dstWidth, dim.dstHeight);\n\n    const mime = SUPPORTED_IMAGE_FORMATS.includes(fileOrBlob.type) ? fileOrBlob.type : 'image/jpeg';\n    // Generate blob to check size of the image.\n    let blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    if (!blob) {\n      onError(\"Unsupported image format\");\n      return;\n    }\n\n    // Ensure the image is not too large. Shrink the image keeping the aspect ratio.\n    // Do nothing if maxsize is <= 0.\n    while (maxSize > 0 && blob.length > maxSize) {\n      dim.dstWidth = (dim.dstWidth * 0.70710678118) | 0;\n      dim.dstHeight = (dim.dstHeight * 0.70710678118) | 0;\n      canvas.width = dim.dstWidth;\n      canvas.height = dim.dstHeight;\n      ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n        0, 0, dim.dstWidth, dim.dstHeight);\n      blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    }\n\n    canvas = null;\n    onSuccess(mime, blob, dim.dstWidth, dim.dstHeight, fileNameForMime(fileOrBlob.name, mime));\n  };\n  img.src = URL.createObjectURL(fileOrBlob);\n}\n\n// Convert File to base64 string.\nexport function fileToBase64(file, onSuccess) {\n  const reader = new FileReader();\n  reader.addEventListener('load', function() {\n    onSuccess(file.type, reader.result.split(',')[1], file.name);\n  });\n  reader.readAsDataURL(file);\n}\n\n// Convert Blob to base64 string.\nexport function blobToBase64(blob, onSuccess) {\n  const reader = new FileReader();\n  reader.addEventListener('load', function() {\n    onSuccess(blob.type, reader.result.split(',')[1]);\n  });\n  reader.readAsDataURL(blob);\n}\n\n// File pasted from the clipboard. It's either an inline image or a file attachment.\n// FIXME: handle large files out of band.\nexport function filePasted(event, onImageSuccess, onAttachmentSuccess, onError) {\n  var items = (event.clipboardData || event.originalEvent.clipboardData || {}).items;\n  for (var i in items) {\n    var item = items[i];\n    if (item.kind === 'file') {\n      var file = item.getAsFile();\n      if (!file) {\n        console.log(\"Failed to get file object from pasted file item\", item.kind, item.type);\n        continue;\n      }\n      if (file.type && file.type.split('/')[0] == 'image') {\n        // Handle inline image\n        if (file.size > MAX_INBAND_ATTACHMENT_SIZE || SUPPORTED_IMAGE_FORMATS.indexOf(file.type) < 0) {\n          imageFileScaledToBase64(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, false, onImageSuccess, onError);\n        } else {\n          imageFileToBase64(file, onImageSuccess, onError);\n        }\n      } else {\n        // Handle file attachment\n        fileToBase64(file, onAttachmentSuccess, onError)\n      }\n      // Indicate that the pasted data contains a file.\n      return true;\n    }\n  }\n  // No file found.\n  return false;\n}\n\n// Get mime type from data URL header.\nexport function getMimeType(header) {\n  var mime = /^data:(image\\/[-+a-z0-9.]+);base64/.exec(header);\n  return (mime && mime.length > 1) ? mime[1] : null;\n}\n\n// Given length of a binary object in bytes, calculate the length after\n// base64 encoding.\nexport function base64EncodedLen(n) {\n  return Math.floor((n + 2) / 3) * 4;\n}\n\n// Given length of a base64-encoded object, calculate decoded size of the\n// pbject in bytes.\nexport function base64DecodedLen(n) {\n  return Math.floor(n / 4) * 3;\n}\n\n// Re-encode string to standard base64 encoding with padding.\n// The string may be base64-URL encoded without the padding.\nexport function base64ReEncode(str) {\n  if (str) {\n    str = str.replace(/-/g, '+').replace(/_/g, '/');\n    try {\n      str = btoa(atob(str));\n    } catch(err) {\n      console.log(\"Failed to base64 re-encode string.\", err);\n      str = null;\n    }\n  }\n  return str;\n}\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\n\nimport { AVATAR_SIZE, MAX_EXTERN_ATTACHMENT_SIZE } from '../config.js';\nimport { imageScaled, blobToBase64, makeImageDataUrl } from '../lib/blob-helpers.js';\n\nexport default class AvatarUpload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dataUrl: props.avatar\n    };\n\n    this.handleFileUpload = this.handleFileUpload.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.avatar != prevProps.avatar) {\n      this.setState({dataUrl: this.props.avatar})\n    }\n  }\n\n  handleFileUpload(e) {\n    imageScaled(e.target.files[0], AVATAR_SIZE, AVATAR_SIZE, MAX_EXTERN_ATTACHMENT_SIZE, true,\n      // Image successfully scaled and converted.\n      (mime, blob) => {\n        // Convert blob to base64-encoded bits.\n        blobToBase64(blob, (unused, base64bits) => {\n          const du = makeImageDataUrl({data: base64bits, type: mime});\n          this.setState({dataUrl: du});\n          this.props.onImageChanged(du);\n        });\n      },\n      // Failure\n      (err) => {\n        this.props.onError(err, 'err');\n      });\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  render() {\n    // Randomize id value in case more than one AvatarUpload is shown\n    // at the same time.\n    const randId = 'file-input-avatar-' + (Math.random() + '').substr(2);\n    const className = 'avatar-upload' + (this.props.readOnly ? ' read-only' : '');\n    return (\n      <div className={className}>\n        {this.props.readOnly || !this.state.dataUrl ?\n          null :\n          <a href=\"#\" className=\"clear-avatar\" onClick={(e) => {e.preventDefault(); this.props.onImageChanged(null);}}>\n            <i className=\"material-icons\">clear</i>\n          </a>}\n        {this.state.dataUrl ?\n          <img src={this.state.dataUrl} className=\"preview\" /> :\n          this.props.readOnly && this.props.uid ?\n            <div className=\"avatar-box\">\n              <LetterTile\n                avatar={true}\n                topic={this.props.uid}\n                title={this.props.title} />\n            </div>\n            :\n            <div className=\"blank\">{AVATAR_SIZE}&times;{AVATAR_SIZE}</div>}\n        {this.props.readOnly ? null :\n          <input type=\"file\" id={randId} className=\"inputfile hidden\"\n            accept=\"image/*\" onChange={this.handleFileUpload} />}\n        {this.props.readOnly ? null :\n        <label htmlFor={randId} className=\"round\">\n          <i className=\"material-icons\">file_upload</i>\n        </label>}\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\n/* BEGIN CheckBox: styled checkbox */\nexport default class CheckBox extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange() {\n    this.props.onChange(this.props.name, !this.props.checked);\n  }\n\n  render() {\n    return (\n      this.props.onChange ? (\n        this.props.checked ?\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box</i> :\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box_outline_blank</i>\n        ) : (\n          this.props.checked ?\n            <i className=\"material-icons\">check_box</i> :\n            <i className=\"material-icons\">check_box_outline_blank</i>\n        )\n    );\n  }\n}\n/* END CheckBox */\n","import React from 'react';\n\nconst icon_mapping = {'muted': 'notifications_off', 'banned': 'block'};\n\n/* Contact's labels: [you], or icons [muted], [blocked] */\nexport default class ContactBadges extends React.PureComponent {\n    render() {\n      let badges = null;\n      if (this.props.badges && this.props.badges.length > 0) {\n        badges = [];\n        this.props.badges.map(function(b) {\n          if (b.icon) {\n            badges.push(<i className=\"material-icons as-badge\" key={b.key || b.icon}>{icon_mapping[b.icon]}</i>);\n          } else {\n            const style = 'badge' + (b.color ? ' ' + b.color : '');\n            badges.push(<span className={style} key={b.key || b.name}>{b.name}</span>);\n          }\n        });\n        return <>{badges}</>;\n      }\n      return null;\n    }\n};\n","// Odds and ends\n\nimport Tinode from 'tinode-sdk';\n\n// Make shortcut icon appear with a green dot + show unread count in title.\nexport function updateFavicon(count) {\n  const oldIcon = document.getElementById('shortcut-icon');\n  const head = document.head || document.getElementsByTagName('head')[0];\n  const newIcon = document.createElement('link');\n  newIcon.type = 'image/png';\n  newIcon.id = 'shortcut-icon';\n  newIcon.rel = 'shortcut icon';\n  newIcon.href = 'img/logo32x32' + (count > 0 ? 'a' : '') + '.png';\n  if (oldIcon) {\n    head.removeChild(oldIcon);\n  }\n  head.appendChild(newIcon);\n\n  document.title = (count > 0 ? '('+count+') ' : '') + 'Tinode';\n}\n\n// Create theCard which represents user's or topic's \"public\" info.\nexport function theCard(fn, imageUrl, imageMimeType) {\n  let card = null;\n  fn = fn && fn.trim();\n\n  if (fn) {\n    card = {\n      fn: fn\n    };\n  }\n\n  if (imageUrl) {\n    card = card || {};\n    let mimeType = imageMimeType;\n    // Is this a data URL \"data:[<mediatype>][;base64],<data>\"?\n    const matches = /^data:(image\\/[-a-z0-9+.]+)?(;base64)?,/i.exec(imageUrl);\n    if (matches) {\n      mimeType = matches[1];\n      card.photo = {\n        data: imageUrl.substring(imageUrl.indexOf(',') + 1)\n      };\n    } else {\n      console.log(\"theCard no match\", imageUrl.substring(0, 60), new Error(\"stacktrace\"));\n      card.photo = {\n        ref: imageUrl\n      };\n    }\n    card.photo.type = (mimeType || 'image/jpeg').substring('image/'.length);\n  }\n\n  return card;\n}\n\n// Deep-shallow compare two arrays: shallow compare each element.\nexport function arrayEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (!Array.isArray(a) || !Array.isArray(b)) {\n    return false;\n  }\n\n  // Compare lengths first.\n  if (a.length != b.length) {\n    return false;\n  }\n  // Order of elements is ignored.\n  a.sort();\n  b.sort();\n  for (let i = 0, l = a.length; i < l; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Checks (loosely) if the given string is a phone. If so, returns the phone number in a format\n// as close to E.164 as possible.\nexport function asPhone(val) {\n  val = val.trim();\n  if (/^(?:\\+?(\\d{1,3}))?[- (.]*(\\d{3})[- ).]*(\\d{3})[- .]*(\\d{2})[- .]*(\\d{2})?$/.test(val)) {\n    return val.replace(/[- ().]*/, '');\n  }\n  return null;\n}\n\n// Checks (loosely) if the given string is an email. If so returns the email.\nexport function asEmail(val) {\n  val = val.trim();\n  if (/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(val)) {\n    return val;\n  }\n  return null;\n}\n\n// Checks if URL is a relative url, i.e. has no 'scheme://', including the case of missing scheme '//'.\n// The scheme is expected to be RFC-compliant, e.g. [a-z][a-z0-9+.-]*\n// example.html - ok\n// https:example.com - not ok.\n// http:/example.com - not ok.\n// ' ↲ https://example.com' - not ok. (↲ means carriage return)\nexport function isUrlRelative(url) {\n  return url && !/^\\s*([a-z][a-z0-9+.-]*:|\\/\\/)/im.test(url);\n}\n\n// Ensure URL does not present an XSS risk. Optional allowedSchemes may contain an array of\n// strings with permitted URL schemes, such as ['ftp', 'ftps']; otherwise accept http and https only.\n// If apikey and/or token is defined, it's appended to relative URL.\nexport function sanitizeUrl(url, allowedSchemes) {\n  if (!url) {\n    return null;\n  }\n\n  // Strip control characters and whitespace. They are not valid URL characters anyway.\n  url = url.replace(/[^\\x20-\\x7E]/gmi, '').trim();\n\n  // Relative URLs are safe.\n  // Relative URL does not start with ':', abcd123: or '//'.\n  if (!/^([a-z][a-z0-9+.-]*:|\\/\\/)/i.test(url)) {\n    return url;\n  }\n\n  // Blob URLs are safe.\n  if (/^blob:http/.test(url)) {\n    return url;\n  }\n\n  // Absolute URL. Accept only safe schemes, or no scheme.\n  const schemes = Array.isArray(allowedSchemes) ? allowedSchemes.join('|') : 'http|https';\n  const re = new RegExp('^((' + schemes + '):|//)', 'i');\n  if (!re.test(url)) {\n    return null;\n  }\n\n  return url;\n}\n\n// Ensure URL is suitable for <img src=\"url\"> field: the URL must be a relative URL or\n// have http:, https:, blob: or data: scheme.\n// The relative URL is appended with the API key and/or auth token.\n// In case of data: scheme, the URL must start with a 'data:image/XXXX;base64,'.\nexport function sanitizeImageUrl(url) {\n  if (!url) {\n    return null;\n  }\n\n  const sanitizedUrl = sanitizeUrl(url);\n  if (sanitizedUrl) {\n    return sanitizedUrl;\n  }\n\n  // Is this a data: URL of an image?\n  if (/data:image\\/[a-z0-9.-]+;base64,/i.test(url.trim())) {\n    return url;\n  }\n\n  return null;\n}\n\n// Given message's received status, return name and color of a delivery indicator icon.\nexport function deliveryMarker(received) {\n  switch (received) {\n    case Tinode.MESSAGE_STATUS_SENDING:\n      return { name: 'access_time' }; // watch face\n    case Tinode.MESSAGE_STATUS_FAILED:\n      return { name: 'warning', color: 'amber' }; // yellow icon /!\\\n    case Tinode.MESSAGE_STATUS_SENT:\n      return { name: 'done' }; // checkmark\n    case Tinode.MESSAGE_STATUS_RECEIVED:\n      return { name: 'done_all' }; // double checkmark\n    case Tinode.MESSAGE_STATUS_READ:\n      return { name: 'done_all', color: 'blue' }; // blue double checkmark\n  }\n  return null;\n}\n","// Received/read indicator.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { shortDateFormat } from '../lib/strformat.js';\nimport { deliveryMarker } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  message_sending: {\n    id: 'message_sending',\n    defaultMessage: 'sending...',\n    description: 'Message being sent, in place of time stamp'\n  },\n  message_sending_failed: {\n    id: 'message_sending_failed',\n    defaultMessage: 'failed',\n    description: 'Failed to send message, in place of time stamp'\n  }\n});\n\nclass ReceivedMarker extends React.PureComponent {\n  render() {\n    const {formatMessage} = this.props.intl;\n    let timestamp;\n    if (this.props.received <= Tinode.MESSAGE_STATUS_SENDING) {\n      timestamp = formatMessage(messages.message_sending);\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_FAILED) {\n      timestamp = formatMessage(messages.message_sending_failed);\n    } else {\n      timestamp = shortDateFormat(this.props.timestamp, this.props.intl.locale);\n    }\n\n    const icon = deliveryMarker(this.props.received);\n    const marker = icon ? <i className={'material-icons small ' + icon.color}>{icon.name}</i> : null;\n\n    return (\n      <span className=\"timestamp\">\n        {timestamp}{'\\u00a0'}{marker}\n      </span>\n    );\n  }\n};\n\nexport default injectIntl(ReceivedMarker);\n","// The counter of unread messages in the topic.\nimport React from 'react';\n\nexport default class UnreadBadge extends React.PureComponent {\n  render() {\n    return (this.props.count > 0 ?\n      <span className=\"unread\">{this.props.count > 9 ? \"9+\" : this.props.count}</span>\n      : null);\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\n\nimport ContactBadges from './contact-badges.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\nimport UnreadBadge from './unread-badge.jsx';\n\nimport { Drafty } from 'tinode-sdk';\n\nimport { deliveryMarker } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  drafty_image: {\n    id: 'drafty_image',\n    defaultMessage: 'Picture',\n    description: 'Comment for embedded images in drafty preview'\n  },\n  drafty_form: {\n    id: 'drafty_form',\n    defaultMessage: 'Form: ',\n    description: 'Comment for form in drafty preview'\n  },\n  drafty_attachment: {\n    id: 'drafty_attachment',\n    defaultMessage: 'Attachment',\n    description: 'Comment for attachment in drafty preview'\n  },\n});\n\nclass Contact extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.props.onSelected) {\n      // Index this.props.index is used by GroupManager.\n      this.props.onSelected(this.props.item, this.props.index);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.props.item, y: e.pageY, x: e.pageX });\n  }\n\n  render() {\n    let title = this.props.title;\n    if (!title) {\n      title = <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n        description=\"Title shown when the topic has no name\" /></i>;\n    } else if (title.length > 30) {\n      // FIXME: this is probably wrong for RTL languages.\n      title = title.substring(0, 28) + '…';\n    }\n    const online = this.props.now ? 'online' : 'offline';\n    const avatar = this.props.avatar ? this.props.avatar : true;\n    const badges = this.props.badges ? this.props.badges.slice() : [];\n    const icon_badges = [];\n    if (this.props.acs) {\n      if (this.props.showMode) {\n        badges.push({name: this.props.acs.getMode(), key: 'mode'});\n      }\n      if (this.props.acs.isMuted()) {\n        icon_badges.push({icon: 'muted'});\n      }\n      if (!this.props.acs.isJoiner()) {\n        icon_badges.push({icon: 'banned'});\n      }\n    }\n\n    const subtitle = this.props.preview ?\n      (typeof this.props.preview == 'string' ? this.props.preview :\n        React.createElement(React.Fragment, null, Drafty.format(this.props.preview, draftyFormatter, this))) :\n      this.props.comment;\n\n    const icon = deliveryMarker(this.props.received);\n    const marker = icon ? <i className={'material-icons small space-right' +\n      (icon.color ? ' ' + icon.color : '')}>{icon.name}</i> : null;\n\n    return (\n      <li className={!this.props.showCheckmark && this.props.selected ? 'selected' : null} onClick={this.handleClick}>\n        <div className=\"avatar-box\">\n          <LetterTile\n            avatar={avatar}\n            title={this.props.title}\n            topic={this.props.item} />\n          {this.props.showOnline ? <span className={online} /> :\n            (this.props.showCheckmark && this.props.selected ?\n            <i className=\"checkmark material-icons\">check_circle</i>\n            : null)}\n        </div>\n        <div className=\"text-box\">\n          <div><span className=\"contact-title\">{title}</span>\n            {this.props.isChannel ? <img src=\"/img/channel.png\" className=\"channel\" alt=\"channel\" /> : null}\n            <UnreadBadge count={this.props.unread} /><ContactBadges badges={icon_badges} />\n          </div>\n          {this.props.showMode ?\n            <span><ContactBadges badges={badges} /></span> :\n            <div className=\"contact-comment\">{marker}{subtitle || '\\u00A0'}</div>}\n        </div>\n        {this.props.showContextMenu ?\n          <span className=\"menuTrigger\">\n            <a href=\"#\" onClick={this.handleContextClick}>\n              <i className=\"material-icons\">expand_more</i>\n            </a>\n          </span> : null}\n      </li>\n    );\n  }\n};\n\n\n// Converts Drafty object into a one-line preview.\nfunction draftyFormatter(style, data, values, key) {\n  let el = Drafty.tagName(style);\n  const attr = { key: key };\n  if (el) {\n    const { formatMessage } = this.props.intl;\n    switch (style) {\n      case 'BR':\n        // Replace new line with a space.\n        el = React.Fragment;\n        values = [' '];\n        break;\n      case 'HL':\n        // Make highlight less prominent in preview.\n        attr.className = 'highlight preview';\n        break;\n      case 'LN':\n        // Disable links in previews.\n        el = 'span';\n        break;\n      case 'IM':\n        // Replace image with '[icon] Image'.\n        el = React.Fragment;\n        values = [<i key=\"im\" className=\"material-icons\">photo</i>, formatMessage(messages.drafty_image)];\n        break;\n      case 'BN':\n        el = 'span';\n        attr.className = 'flat-button faux';\n        break;\n      case 'FM':\n        el = React.Fragment;\n        values = [<i key=\"fm\" className=\"material-icons\">dashboard</i>,\n          formatMessage(messages.drafty_form)].concat(values || []);\n        break;\n      case 'RW':\n        el = React.Fragment;\n        break;\n      case 'EX':\n        if (data && data.mime == 'application/json') {\n          // Ignore JSON attachments: they are form response payloads.\n          return null;\n        }\n        el = React.Fragment;\n        values = [<i key=\"ex\" className=\"material-icons\">attachment</i>, formatMessage(messages.drafty_attachment)];\n        break;\n      default:\n        if (el == '_UNKN') {\n          el = React.Fragment;\n          values = [<i key=\"unkn\" className=\"material-icons\">extension</i>];\n        }\n        break;\n    }\n    return React.createElement(el, attr, values);\n  } else {\n    return values;\n  }\n};\n\nexport default injectIntl(Contact);\n","// A panel included into a list of contacts with an action text.\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\n\nclass ContactAction extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.onAction(this.props.action);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <li onClick={this.handleClick} className=\"action\">\n        <div className=\"action-text\">{formatMessage(this.props.title, this.props.values)}</div>\n      </li>\n    );\n  }\n};\n\nexport default injectIntl(ContactAction);\n","// ContactList: component for showing a list of contacts,\n// such as a list of group members in a group chat.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { Drafty } from 'tinode-sdk';\nimport Tinode from 'tinode-sdk';\n\nimport Contact from './contact.jsx';\nimport ContactAction from './contact-action.jsx';\n\nimport { makeImageDataUrl } from '../lib/blob-helpers.js';\n\nimport { MESSAGE_PREVIEW_LENGTH } from '../config.js';\n\nconst messages = defineMessages({\n  badge_you: {\n    id: 'badge_you',\n    defaultMessage: 'you',\n    description: 'Badge for indicating the current user'\n  },\n  badge_owner: {\n    id: 'badge_owner',\n    defaultMessage: 'owner',\n    description: 'Badge for indicating the owner'\n  }\n});\n\nclass ContactList extends React.Component {\n  render() {\n    const { formatMessage } = this.props.intl;\n    const showCheckmark = Array.isArray(this.props.topicSelected);\n    const contactNodes = [];\n    let contactsCount = 0;\n    if (this.props.contacts && this.props.contacts.length > 0) {\n      this.props.contacts.map((c) => {\n        if (c.action) {\n          // Action item\n          contactNodes.push(\n            <ContactAction\n              title={c.title} action={c.action} values={c.values}\n              key={c.action}\n              onAction={this.props.onAction}\n              />);\n        } else {\n          // Normal contact\n          const key = this.props.showMode ? c.user : (c.topic || c.user);\n          // If filter function is provided, filter out the items\n          // which don't satisfy the condition.\n          if (this.props.filterFunc && this.props.filter) {\n            const filterOn = [key];\n            if (c.private && c.private.comment) {\n              filterOn.push(('' + c.private.comment).toLowerCase());\n            }\n            if (c.public && c.public.fn) {\n              filterOn.push(('' + c.public.fn).toLowerCase());\n            }\n            if (!this.props.filterFunc(this.props.filter, filterOn)) {\n              return;\n            }\n          }\n\n          const isChannel = Tinode.isChannelTopicName(key);\n          const selected = showCheckmark ?\n            (this.props.topicSelected.indexOf(key) > -1) :\n            (this.props.topicSelected === key);\n          const badges = [];\n          if (this.props.showMode) {\n            if (key == this.props.myUserId) {\n              badges.push({name: formatMessage(messages.badge_you), color: 'green'});\n            }\n            if (c.acs && c.acs.isOwner()) {\n              badges.push({name: formatMessage(messages.badge_owner), color: 'blue'});\n            }\n          }\n\n          const comment = Array.isArray(c.private) ?\n            c.private.join(',') : (c.private ? c.private.comment : null);\n          let preview;\n          let deliveryStatus;\n          if (!this.props.showMode && c.latestMessage) {\n            const msg = c.latestMessage(true);\n            if (msg) {\n              deliveryStatus = msg._status || c.msgStatus(msg, true);\n              preview = typeof msg.content == 'string' ?\n                msg.content.substr(0, MESSAGE_PREVIEW_LENGTH) :\n                Drafty.preview(msg.content, MESSAGE_PREVIEW_LENGTH);\n            }\n          }\n          contactNodes.push(\n            <Contact\n              title={c.public ? c.public.fn : null}\n              avatar={makeImageDataUrl(c.public ? c.public.photo : null)}\n              comment={comment}\n              preview={preview}\n              received={deliveryStatus}\n              unread={this.props.showUnread ? c.unread : 0}\n              now={c.online && this.props.connected}\n              acs={c.acs}\n              showMode={this.props.showMode}\n              badges={badges}\n              showCheckmark={showCheckmark}\n              selected={selected}\n              showOnline={this.props.showOnline && !isChannel}\n              isChannel={isChannel}\n              onSelected={this.props.onTopicSelected}\n              showContextMenu={this.props.showContextMenu}\n              item={key}\n              index={contactNodes.length}\n              key={key} />\n          );\n          contactsCount ++;\n        }\n      }, this);\n    }\n\n    return (\n      <div className={this.props.noScroll ? null : \"scrollable-panel\"}>\n        {contactsCount == 0 ?\n          <div className=\"center-medium-text\"\n            dangerouslySetInnerHTML={{__html: this.props.emptyListMessage}} />\n          :\n          null\n        }\n        {contactNodes.length > 0 ?\n          <ul className=\"contact-box\">\n            {contactNodes}\n          </ul>\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ContactList);\n","// The X menu to be displayed in title bars.\nimport React from 'react';\n\nexport default class MenuCancel extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n        <i className=\"material-icons\">close</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nimport MenuCancel from './menu-cancel.jsx';\n\nexport default class ErrorPanel extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      show: false,\n    };\n\n    this.hide = this.hide.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.level !== this.props.level) {\n      this.setState({\n        show: !(!this.props.level)\n      });\n    }\n  }\n\n  hide() {\n    this.setState({show: false});\n    if (this.props.onClearError) {\n      this.props.onClearError();\n    }\n  }\n\n  render() {\n    const icons = {err: 'error', warn: 'warning', info: 'info'}\n    const level = icons[this.props.level] || '';\n    const className = 'info-box ' + level;\n    return (\n      <div className={className}>\n        <div className=\"icon\"><i className=\"material-icons\">{level}</i></div>\n        <span>\n          {this.props.text}\n          {this.props.action ?\n            <>\n              &#32;<a href=\"#\"\n                style={{ whiteSpace: 'nowrap' }}\n                onClick={(e) => {e.preventDefault(); this.props.action();}}>\n                {this.props.actionText}\n              </a>\n            </>\n          : null}\n        </span>\n        <div className=\"cancel\"><MenuCancel onCancel={this.hide} /></div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\n\nexport default class Chip extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel(this.props.topic, this.props.index);\n  }\n\n  render() {\n    const title = this.props.title || this.props.topic;\n    const className = this.props.invalid ? 'chip invalid' : 'chip';\n    return (\n      <div className={className}>\n        {this.props.noAvatar ?\n          <span className=\"spacer\" /> :\n          <div className=\"avatar-box\">\n            <LetterTile\n              avatar={this.props.avatar || true}\n              topic={this.props.topic}\n              title={this.props.title} />\n          </div>\n        }\n        <span>{title}</span>\n        {this.props.onCancel && !this.props.required ?\n          <a href=\"#\" onClick={this.handleCancel} >&times;</a>\n          : <span className=\"spacer\" />}\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport Chip from './chip.jsx';\n\nimport { makeImageDataUrl } from '../lib/blob-helpers.js';\n\n/* BEGIN ChipInput: group membership widget */\nexport default class ChipInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = ChipInput.deriveStateFromProps(props);\n    this.state.input = '';\n    this.state.focused = false;\n\n    this.handleTextInput = this.handleTextInput.bind(this);\n    this.removeChipAt = this.removeChipAt.bind(this);\n    this.handleChipCancel = this.handleChipCancel.bind(this);\n    this.handleFocusGained = this.handleFocusGained.bind(this);\n    this.handleFocusLost = this.handleFocusLost.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  static deriveStateFromProps(props) {\n    return {\n      placeholder: props.chips ? '' : props.prompt,\n      sortedChips: ChipInput.sortChips(props.chips, props.staticMembers),\n      chipIndex: ChipInput.indexChips(props.chips)\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chips != this.props.chips ||\n      prevProps.staticMembers != this.props.staticMembers ||\n      prevProps.prompt != this.props.prompt) {\n      this.setState(ChipInput.deriveStateFromProps(this.props));\n    }\n    if (!prevState || this.props.chips.length > prevState.sortedChips.length) {\n      this.setState({input: ''});\n    }\n  }\n\n  // Map chip index to user name\n  static indexChips(chips) {\n    const index = {};\n    let count = 0;\n    chips.map((item) => {\n      index[item.user] = count;\n      count ++;\n    });\n    return index;\n  }\n\n  // Have non-removable chips appear before all other chips.\n  static sortChips(chips, keep) {\n    const required = [];\n    const normal = [];\n    chips.map((item) => {\n      if (keep && keep.includes(item.user)) {\n        required.push(item);\n      } else {\n        normal.push(item);\n      }\n    });\n    return required.concat(normal);\n  }\n\n  handleTextInput(e) {\n    this.setState({input: e.target.value});\n    if (this.props.filterFunc) {\n      this.props.filterFunc(e.target.value);\n    }\n  }\n\n  removeChipAt(idx) {\n    const removed = this.state.sortedChips[idx];\n    this.props.onChipRemoved(removed.user, this.state.chipIndex[removed.user]);\n  }\n\n  handleChipCancel(item, idx) {\n    this.removeChipAt(idx);\n  }\n\n  handleFocusGained() {\n    this.setState({focused: true});\n  }\n\n  handleFocusLost() {\n    this.setState({focused: false});\n    if (this.props.onFocusLost) {\n      this.props.onFocusLost(this.state.input);\n    }\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Backspace') {\n      if (this.state.input.length == 0 && this.state.sortedChips.length > 0) {\n        const at = this.state.sortedChips.length - 1;\n        if (this.state.sortedChips[at].user !== this.props.staticMembers) {\n          this.removeChipAt(at);\n        }\n      }\n    } else if (e.key === 'Enter') {\n      if (this.props.onEnter) {\n        this.props.onEnter(this.state.input);\n      }\n    } else if (e.key === 'Escape') {\n      if (this.props.onCancel) {\n        this.props.onCancel();\n      }\n    }\n  }\n\n  render() {\n    const chips = [];\n    let count = 0;\n    const staticMembers = this.props.staticMembers || [];\n    this.state.sortedChips.map((item) => {\n      chips.push(\n        <Chip\n          onCancel={this.handleChipCancel}\n          avatar={makeImageDataUrl(item.public ? item.public.photo : null)}\n          title={item.public ? item.public.fn : undefined}\n          noAvatar={this.props.avatarDisabled}\n          topic={item.user}\n          required={staticMembers.includes(item.user)}\n          invalid={item.invalid}\n          index={count}\n          key={item.user} />\n      );\n      count++;\n    });\n    const className = \"chip-input\" + (this.state.focused ? ' focused' : '');\n    return (\n      <div className={className}>\n        {chips}\n        <input type=\"text\"\n          placeholder={this.state.placeholder}\n          onChange={this.handleTextInput}\n          onFocus={this.handleFocusGained}\n          onBlur={this.handleFocusLost}\n          onKeyDown={this.handleKeyDown}\n          value={this.state.input}\n          autoFocus />\n      </div>\n    );\n  }\n};\n","// GroupMembers: control for managing a list of group members.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\nimport ContactList from './contact-list.jsx';\n\nconst messages = defineMessages({\n  no_contacts: {\n    id: 'no_contacts',\n    defaultMessage: 'You have no contacts :-(',\n    description: 'Shown in ContactsView when the user has no contacts'\n  },\n  contacts_not_found_short: {\n    id: 'contacts_not_found_short',\n    defaultMessage: \"No contacts match ''{query}''\",\n    description: 'Shown in ContactsView when search returned no results'\n  }\n});\n\nclass GroupManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Array of topic members\n      members: props.members,\n      index: GroupManager.indexMembers(props.members),\n      staticMembers: GroupManager.staticMembers(props.members, props.keepInitialMembers, props.requiredMember),\n      contactFilter: '',\n      noContactsMessage: props.intl.formatMessage(messages.no_contacts),\n      selectedContacts: GroupManager.selectedContacts(props.members)\n    };\n\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleMemberRemoved = this.handleMemberRemoved.bind(this);\n    this.handleContactFilter = this.handleContactFilter.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static indexMembers(members) {\n    let index = {};\n    members.map((m) => {\n      index[m.user] = {delta: 0, present: true}; // Delta: 0 unchanged, +1 added, -1 removed\n    });\n    return index;\n  }\n\n  static staticMembers(members, keepInitial, requiredMember) {\n    let stat = [];\n    members.map((m) => {\n      if (keepInitial || m.user == requiredMember) {\n        stat.push(m.user);\n      }\n    });\n    return stat;\n  }\n\n  static selectedContacts(members) {\n    let sel = [];\n    members.map((m) => {\n      sel.push(m.user);\n    });\n    return sel;\n  }\n\n  handleContactSelected(userId, index) {\n    let status = this.state.index[userId];\n    if (status) {\n      if (status.present) {\n        // Prevent duplicate members\n        return;\n      }\n      status.delta += 1;\n      status.present = true;\n    } else {\n      status = {delta: 1, present: true};\n    }\n\n    let m = this.state.members.slice();\n    m.push(this.props.contacts[index]);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleMemberRemoved(userId, index) {\n    const status = this.state.index[userId];\n    if (!status || !status.present) {\n      return;\n    }\n    status.present = false;\n    status.delta -= 1;\n\n    let m = this.state.members.slice();\n    m.splice(index, 1);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleContactFilter(val) {\n    const {formatMessage} = this.props.intl;\n    const msg = !val ?\n      formatMessage(messages.no_contacts) :\n      formatMessage(messages.contacts_not_found_short, {query: val});\n\n    this.setState({contactFilter: val, noContactsMessage: msg});\n  }\n\n  static doContactFiltering(filter, values) {\n    if (filter) {\n      for (let i=0; i<values.length; i++) {\n        if (values[i].indexOf(filter) >= 0) {\n          return true;\n        }\n      }\n      return false;\n    }\n    return true;\n  }\n\n  handleSubmit() {\n    var instance = this;\n    var members = [];\n    var added = [];\n    var removed = [];\n\n    var keys = Object.keys(this.state.index);\n    keys.map(function(k) {\n      if (instance.state.index[k].present) {\n        members.push(k);\n      }\n\n      if (instance.state.index[k].delta > 0) {\n        added.push(k);\n      } else if (instance.state.index[k].delta < 0) {\n        removed.push(k);\n      }\n    });\n    this.props.onSubmit(members, added, removed);\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <div id=\"group-manager\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_group_members\" defaultMessage=\"Group Members\" description=\"Section title\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ChipInput\n            chips={this.state.members}\n            staticMembers={this.state.staticMembers}\n            prompt=\"add members\"\n            filterFunc={this.handleContactFilter}\n            onChipRemoved={this.handleMemberRemoved} />\n        </div>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_all_contacts\" defaultMessage=\"All Contacts\"\n              description=\"Section title [All Contacts]\" />\n          </label>\n        </div>\n        <ContactList\n          contacts={this.props.contacts}\n          myUserId={this.props.myUserId}\n          topicSelected={this.state.selectedContacts}\n          filter={this.state.contactFilter}\n          filterFunc={GroupManager.doContactFiltering}\n          emptyListMessage={this.state.noContactsMessage}\n          showOnline={false}\n          showUnread={false}\n          onTopicSelected={this.handleContactSelected} />\n        <div id=\"group-manager-buttons\" className=\"panel-form-row\">\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n          <button className=\"secondary\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(GroupManager);\n","// Password with a visiblity toggle.\nimport React from 'react';\n\nexport default class VisiblePassword extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: this.props.value,\n      visible: false\n    };\n\n    this.handleVisibility = this.handleVisibility.bind(this);\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n    if (this.props.onChange) {\n      this.props.onChange(e);\n    }\n  }\n\n  handleVisibility(e) {\n    e.preventDefault();\n    this.setState({visible: !this.state.visible});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode == 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, visible: false});\n      if (this.props.onFinished) {\n        this.props.onFinished();\n      }\n    } else if (e.keyCode == 13) {\n      // Enter pressed\n      this.handleEditingFinished();\n    }\n  }\n\n  handleEditingFinished(e) {\n    if (e) {\n      let currentTarget = e.currentTarget;\n      setTimeout(() => {\n        if (!currentTarget.contains(document.activeElement)) {\n          if (this.props.onFinished) {\n            this.props.onFinished(this.state.value);\n          }\n        }\n      }, 0);\n    } else if (this.props.onFinished) {\n      this.props.onFinished(this.state.value.trim());\n    }\n  }\n\n  render() {\n    return (\n      <div tabIndex=\"-1\" className=\"group-focus\"\n        onBlur={this.handleEditingFinished}>\n        <input className=\"with-visibility\"\n          type={this.state.visible ? \"text\" : \"password\"}\n          value={this.state.value}\n          placeholder={this.props.placeholder}\n          required={this.props.required ? 'required' : ''}\n          autoFocus={this.props.autoFocus ? 'autoFocus' : ''}\n          autoComplete={this.props.autoComplete}\n          onChange={this.handeTextChange}\n          onKeyDown={this.handleKeyDown} />\n        <span onClick={this.handleVisibility}>\n          <i className=\"material-icons clickable light-gray\">\n            {this.state.visible ? 'visibility' : 'visibility_off'}\n          </i>\n        </span>\n      </div>\n    );\n  }\n}\n","// In-place text editor. Shows text with an icon which toggles it into an input field.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport VisiblePassword from './visible-password.jsx';\n\nexport default class InPlaceEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      active: props.active,\n      initialValue: props.value || '',\n      value: props.value || ''\n    };\n\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleStartEditing = this.handleStartEditing.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n    this.handlePasswordFinished = this.handlePasswordFinished.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // If text has changed while in read mode, update text and discard changes.\n    // Ignore update if in edit mode.\n    const newValue = this.props.value || '';\n    if (prevState.initialValue != newValue && !prevState.active) {\n      this.setState({\n        initialValue: newValue,\n        value: newValue\n      });\n    }\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, active: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleEditingFinished(e);\n    }\n  }\n\n  handleStartEditing() {\n    if (!this.props.readOnly) {\n      ReactDOM.findDOMNode(this).focus();\n      this.setState({active: true});\n    }\n  }\n\n  handleEditingFinished(event) {\n    if (this.props.required && !event.target.checkValidity()) {\n      // Empty input\n      this.setState({value: this.props.value, active: false});\n      return;\n    }\n    this.setState({active: false});\n    let value = this.state.value.trim();\n    if ((value || this.props.value) && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  handlePasswordFinished(value) {\n    this.setState({active: false});\n    if (value && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  render() {\n    if (this.state.active) {\n      var fieldType = this.props.type || 'text';\n    } else {\n      var spanText = this.props.type == 'password' ? '••••••••' : this.state.value;\n      var spanClass = 'in-place-edit' +\n        (this.props.readOnly ? ' disabled' : '');\n      if (!spanText) {\n        spanText = this.props.placeholder;\n        spanClass += ' placeholder';\n      }\n      if (spanText.length > 20) {\n        // FIXME: this is wrong for RTL languages.\n        spanText = spanText.substring(0, 19) + '...';\n      }\n    }\n    return (\n      this.state.active ?\n        (fieldType == 'password' ?\n          <VisiblePassword\n            value={this.state.value}\n            placeholder={this.props.placeholder}\n            required={this.props.required ? 'required' : ''}\n            autoComplete={this.props.autoComplete}\n            autoFocus={true}\n            onFinished={this.handlePasswordFinished}/>\n          :\n          <input type={fieldType}\n            value={this.state.value}\n            placeholder={this.props.placeholder}\n            required={this.props.required ? 'required' : ''}\n            autoComplete={this.props.autoComplete}\n            autoFocus\n            onChange={this.handeTextChange}\n            onKeyDown={this.handleKeyDown}\n            onBlur={this.handleEditingFinished} />\n        )\n        :\n        <span className={spanClass} onClick={this.handleStartEditing}>\n          <span className=\"content\">{spanText}</span>\n        </span>\n    );\n  }\n};\n","// Toggle [Title text >] -> [Title text v]\n\nimport React from 'react';\n\nexport default class MoreButton extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: props.open\n    };\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n\n  handleToggle() {\n    const open = !this.state.open;\n    this.setState({open: open});\n    if (this.props.onToggle) {\n      this.props.onToggle(open);\n    }\n  }\n\n  render() {\n    return (<label className=\"small clean-clickable\" onClick={this.handleToggle}>{this.props.title}...\n      {this.state.open ? <i className=\"material-icons\">expand_more</i> :\n        <i className=\"material-icons\">chevron_right</i>}\n      </label>);\n  }\n}\n","// PermissionsEditor: Component for editing permissions\n// <PermissionsEditor mode=\"JWROD\" skip=\"O\" onChange={this.handleCheckboxTest} />\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport CheckBox from './checkbox.jsx';\nimport Contact from './contact.jsx';\n\nimport { makeImageDataUrl } from '../lib/blob-helpers.js';\n\n// Translatable permission names.\nconst messages = defineMessages({\n  joiner: {\n    id: 'permission_join',\n    defaultMessage: \"Join ({val})\",\n    description: 'Name of J permission'\n  },\n  reader: {\n    id: 'permission_read',\n    defaultMessage: \"Read ({val})\",\n    description: 'Name of R permission'\n  },\n  writer: {\n    id: 'permission_write',\n    defaultMessage: \"Write ({val})\",\n    description: 'Name of W permission'\n  },\n  preser: {\n    id: 'permission_pres',\n    defaultMessage: \"Get notified ({val})\",\n    description: 'Name of P permission'\n  },\n  approver: {\n    id: 'permission_admin',\n    defaultMessage: \"Approve ({val})\",\n    description: 'Name of A permission'\n  },\n  sharer: {\n    id: 'permission_share',\n    defaultMessage: \"Share ({val})\",\n    description: 'Name of S permission'\n  },\n  deleter: {\n    id: 'permission_delete',\n    defaultMessage: \"Delete ({val})\",\n    description: 'Name of D permission'\n  },\n  owner: {\n    id: 'permission_owner',\n    defaultMessage: \"Owner ({val})\",\n    description: 'Name of O permission'\n  }\n});\n\nclass PermissionsEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mode: (props.mode || '').replace('N', '')\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(val) {\n    let mode = this.state.mode;\n    let idx = mode.indexOf(val);\n    if (idx == -1) {\n      mode += val;\n    } else {\n      mode = mode.replace(val, '');\n    }\n    this.setState({mode: mode});\n  }\n\n  handleSubmit() {\n    // Normalize string, otherwise cannot check if mode has changed.\n    var mode = (this.state.mode || 'N').split('').sort().join('');\n    var before = (this.props.mode || 'N').split('').sort().join('')\n    if (mode !== before) {\n      this.props.onSubmit(mode);\n    } else {\n      this.props.onCancel();\n    }\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const all = 'JRWPASDO';\n    const names = {\n      'J': formatMessage(messages.joiner, {val: 'J'}),\n      'R': formatMessage(messages.reader, {val: 'R'}),\n      'W': formatMessage(messages.writer, {val: 'W'}),\n      'P': formatMessage(messages.preser, {val: 'P'}),\n      'A': formatMessage(messages.approver, {val: 'A'}),\n      'S': formatMessage(messages.sharer, {val: 'S'}),\n      'D': formatMessage(messages.deleter, {val: 'D'}),\n      'O': formatMessage(messages.owner, {val: 'O'})\n    };\n\n    let skip = this.props.skip || '';\n    let mode = this.state.mode;\n    let compare = (this.props.compare || '').replace('N', '');\n    let items = [];\n    for (let i=0; i<all.length; i++) {\n      let c = all.charAt(i);\n      if (skip.indexOf(c) >= 0 && mode.indexOf(c) < 0) {\n        // Permission is marked as inactive: hide unchecked permissions, disable checked permissions\n        continue;\n      }\n      items.push(\n        <tr key={c}>\n          <td>{names[c]}</td>\n          <td className=\"checkbox\">{skip.indexOf(c) < 0 ?\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} onChange={this.handleChange}/>\n            :\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} />\n          }</td>{this.props.compare ? <td className=\"checkbox\">\n            <CheckBox name={c} checked={(compare.indexOf(c) >= 0)}/>\n          </td> : null}\n        </tr>\n      );\n    }\n\n    return (\n      <div className=\"panel-form-column\">\n        {this.props.userTitle ?\n          <ul className=\"contact-box\"><Contact\n            item={this.props.item}\n            title={this.props.userTitle}\n            avatar={makeImageDataUrl(this.props.userAvatar ? this.props.userAvatar : null)} /></ul> : null}\n        <label className=\"small\"><FormattedMessage id=\"title_permissions\"\n          defaultMessage=\"Permissions\" description=\"Section title\"/></label>\n        <table className=\"permission-editor\">\n        {this.props.compare ?\n          <thead><tr>\n            <th></th><th>{this.props.modeTitle}</th>\n            <th>{this.props.compareTitle}</th>\n          </tr></thead> :\n          null}\n        <tbody>\n          {items}\n        </tbody></table>\n        <br />\n        <div className=\"dialog-buttons\">\n          <button className=\"outline\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(PermissionsEditor);\n","// TagManager: edit topic or user tags.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\n\nimport { MAX_TAG_COUNT, MAX_TAG_LENGTH, MIN_TAG_LENGTH } from '../config.js';\nimport { arrayEqual } from '../lib/utils.js';\n\nexport default class TagManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tags: this.props.tags,\n      tagInput: '',\n      activated: this.props.activated\n    };\n\n    this.handleTagInput = this.handleTagInput.bind(this);\n    this.handleAddTag = this.handleAddTag.bind(this);\n    this.handleRemoveTag = this.handleRemoveTag.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (!arrayEqual(nextProps.tags, prevState.tags) && !prevState.activated) {\n      return {tags: nextProps.tags};\n    }\n    return null;\n  }\n\n  handleTagInput(text) {\n    this.setState({tagInput: text});\n    if (text.length > 0) {\n      const last = text[text.length-1];\n      if (text[0] == '\"') {\n        // This is a quoted string.\n        if (text.length > 1 && last == '\"') {\n          this.handleAddTag(text.substring(1, text.length-1));\n        }\n      } else if (last == ',' || last == ' ' || last == ';' || last == '\"') {\n        // User entered ',', ' ' or ';'\n        this.handleAddTag(text.substring(0, text.length-1).trim());\n      }\n    }\n  }\n\n  handleAddTag(tag) {\n    const maxTagCount = this.props.tinode.getServerLimit('maxTagCount', MAX_TAG_COUNT);\n\n    if (tag.length > 0 && this.state.tags.length < maxTagCount) {\n      const tags = this.state.tags.slice(0);\n      tags.push(tag);\n\n      this.setState({tags: tags, tagInput: ''});\n      if (this.props.onTagsChanged) {\n        this.props.onTagsChanged(tags);\n      }\n      return tags;\n    }\n    return this.state.tags;\n  }\n\n  handleRemoveTag(tag, index) {\n    const tags = this.state.tags.slice(0);\n    tags.splice(index, 1);\n    this.setState({tags: tags});\n    if (this.props.onTagsChanged) {\n      this.props.onTagsChanged(tags);\n    }\n  }\n\n  handleSubmit() {\n    // Add unprocessed input to tags, submit the list.\n    this.props.onSubmit(this.handleAddTag(this.state.tagInput.trim()));\n    this.setState({activated: false, tags: this.props.tags});\n  }\n\n  handleCancel() {\n    this.setState({activated: false, tagInput: '', tags: this.props.tags});\n    if (this.props.onCancel) {\n      this.props.onCancel();\n    }\n  }\n\n  render() {\n    const minTagLength = this.props.tinode.getServerLimit('minTagLength', MIN_TAG_LENGTH);\n    const maxTagLength = this.props.tinode.getServerLimit('maxTagLength', MAX_TAG_LENGTH);\n\n    let tags = [];\n    if (this.state.activated) {\n      this.state.tags.map((tag) => {\n        tags.push({user: tag, invalid: (tag.length < minTagLength || tag.length > maxTagLength)});\n      });\n    } else {\n      this.state.tags.map((tag) => {\n        tags.push(<span className=\"badge\" key={tags.length}>{tag}</span>);\n      });\n      if (tags.length == 0) {\n        tags = (\n          <i>\n            <FormattedMessage id=\"tags_not_found\" defaultMessage=\"No tags defined. Add some.\" description=\"\" />\n          </i>\n        );\n      }\n    }\n    return (\n      <div className=\"panel-form-column\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">{this.props.title}</label>\n        </div>\n        {this.state.activated ?\n        <div>\n          <FormattedMessage id=\"tags_editor_no_tags\" defaultMessage=\"Add some tags\"\n            description=\"Tag editor prompt when no tags are found.\">{\n            (add_tags_prompt) => <ChipInput\n              chips={tags}\n              avatarDisabled={true}\n              prompt={add_tags_prompt}\n              onEnter={this.handleAddTag}\n              onFocusLost={this.handleAddTag}\n              onCancel={this.handleCancel}\n              onChipRemoved={this.handleRemoveTag}\n              filterFunc={this.handleTagInput} />\n          }</FormattedMessage>\n          {this.props.onSubmit || this.props.onCancel ?\n            <div id=\"tag-manager-buttons\" className=\"dialog-buttons panel-form-row\">\n              <button className=\"outline\" onClick={this.handleCancel}>\n                <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n              </button>\n              <button className=\"primary\" onClick={this.handleSubmit}>\n                <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n              </button>\n            </div>\n          : null}\n        </div>\n        :\n        <div className=\"quoted\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.setState({activated: true});}}>\n            <i className=\"material-icons\">edit</i> &nbsp;<FormattedMessage id=\"title_manage_tags\" defaultMessage=\"Manage\"\n              description=\"Section title for the list of tags\" />\n          </a>\n          <>{tags}</>\n        </div>\n      }\n      </div>\n    );\n  }\n};\n","// InfoView: panel with topic/user info.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport ContactList from '../widgets/contact-list.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupManager from '../widgets/group-manager.jsx';\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport MenuCancel from '../widgets/menu-cancel.jsx';\nimport MoreButton from '../widgets/more-button.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\nimport TagManager from '../widgets/tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH, NO_ACCESS_MODE } from '../config.js';\n\nimport { makeImageDataUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, theCard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  requested: {\n    id: 'requested_permissions',\n    defaultMessage: 'Requested',\n    description: 'Title for permissions'\n  },\n  granted: {\n    id: 'granted_permissions',\n    defaultMessage: 'Granted',\n    description: 'Title for permissions'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n  other_user: {\n    id: 'label_other_user',\n    defaultMessage: 'Other',\n    description: 'Label for the other user when the user is unnamed'\n  },\n  clear_messages: {\n    id: 'action_clear_messages',\n    defaultMessage: 'Clear Messages',\n    description: 'Flat button [Clear Messages] (soft-delete messages)'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n  delete_messages: {\n    id: 'action_delete_messages',\n    defaultMessage: 'Clear Messages for All',\n    description: 'Flat button [Clear for All] (hard-delete all messages)'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  leave_chat: {\n    id: 'action_leave_chat',\n    defaultMessage: 'Leave Conversation',\n    description: 'Flat button [Leave Conversation]'\n  },\n  leave_chat_warning: {\n    id: 'leave_chat_warning',\n    defaultMessage: 'Are you sure you want to leave this conversation?',\n    description: 'Alert dialog warning when unsubscribing from a chat.'\n  },\n  block_contact: {\n    id: 'action_block_contact',\n    defaultMessage: \"Block Contact\",\n    description: \"Flat button [Block Contact]\"\n  },\n  block_contact_warning: {\n    id: 'block_contact_warning',\n    defaultMessage: 'Are you sure you want to block this contact?',\n    description: 'Alert dialog warning when blocking a contact.'\n  },\n  report_chat: {\n    id: 'action_report_chat',\n    defaultMessage: 'Report Conversation',\n    description: 'Flat button [Report Group]'\n  },\n  report_chat_warning: {\n    id: 'report_chat_warning',\n    defaultMessage: 'Are you sure you want to block and report this conversation?',\n    description: 'Alert dialog warning when reporting a conversation for abuse'\n  },\n});\n\nclass InfoView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      topic: null,\n      owner: false,\n      admin: false,\n      sharer: false,\n      deleter: false,\n      muted: false,\n      address: null,\n      groupTopic: undefined,\n      channel: undefined,\n      fullName: undefined,\n      avatar: null,\n      private: null,\n      selectedContact: null,\n      access: null,\n      modeGiven: null,\n      modeWant: null,\n      modeGiven2: null, // P2P topic, the other user mode given\n      modeWant2: null,  // P2P topic, the other user mode want\n      auth: null,\n      anon: null,\n      contactList: [],\n      tags: [],\n      showMemberPanel: false,\n      showPermissionEditorFor: undefined,\n      moreInfoExpanded: false,\n      previousMetaDesc: undefined,\n      previousSubsUpdated: undefined,\n      previousTagsUpdated: undefined\n    };\n\n    this.resetSubs = this.resetSubs.bind(this);\n    this.resetDesc = this.resetDesc.bind(this);\n    this.onMetaDesc = this.onMetaDesc.bind(this);\n    this.onSubsUpdated = this.onSubsUpdated.bind(this);\n    this.onTagsUpdated = this.onTagsUpdated.bind(this);\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\n    this.handlePrivateUpdate = this.handlePrivateUpdate.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleMuted = this.handleMuted.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handleShowAddMembers = this.handleShowAddMembers.bind(this);\n    this.handleHideAddMembers = this.handleHideAddMembers.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleDeleteMessages = this.handleDeleteMessages.bind(this);\n    this.handleLeave = this.handleLeave.bind(this);\n    this.handleBlock = this.handleBlock.bind(this);\n    this.handleReport = this.handleReport.bind(this);\n    this.handleMemberSelected = this.handleMemberSelected.bind(this);\n    this.handleMoreInfo = this.handleMoreInfo.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.handleContextMenu = this.handleContextMenu.bind(this);\n  }\n\n  // No need to separately handle component mount.\n  componentDidUpdate(props) {\n    const topic = this.props.tinode.getTopic(props.topic);\n    if (!topic) {\n      return;\n    }\n\n    if (this.onMetaDesc != topic.onMetaDesc) {\n      this.previousMetaDesc = topic.onMetaDesc;\n      topic.onMetaDesc = this.onMetaDesc;\n\n      this.previousSubsUpdated = topic.onSubsUpdated;\n      topic.onSubsUpdated = this.onSubsUpdated;\n\n      if (topic.getType() == 'grp') {\n        this.previousTagsUpdated = topic.onTagsUpdated;\n        topic.onTagsUpdated = this.onTagsUpdated;\n      } else {\n        this.previousTagsUpdated = undefined;\n      }\n    }\n\n    if (this.state.topic != props.topic) {\n      this.setState({topic: props.topic});\n      this.resetDesc(topic, props);\n      this.resetSubs(topic, props);\n    }\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.setState({topic: null});\n    topic.onMetaDesc = this.previousMetaDesc;\n    topic.onSubsUpdated = this.previousSubsUpdated;\n    topic.onTagsUpdated = this.previousTagsUpdated;\n  }\n\n  resetSubs(topic, props) {\n    const newState = {contactList: []};\n    if (topic.getType() == 'p2p') {\n      // Fetch the other party in the p2p conversation.\n      // Topic may not be ready yet, so check if user is found.\n      const user2 = topic.subscriber(props.topic);\n      if (user2) {\n        newState.modeGiven2 = user2.acs.getGiven();\n        newState.modeWant2 = user2.acs.getWant();\n      } else {\n        newState.modeGiven2 = NO_ACCESS_MODE;\n        newState.modeWant2 = NO_ACCESS_MODE;\n      }\n    } else {\n      topic.subscribers((sub) => {\n        newState.contactList.push(sub);\n      }, this);\n    }\n\n    this.setState(newState);\n  }\n\n  resetDesc(topic, props) {\n    const defacs = topic.getDefaultAccess() || {};\n    const acs = topic.getAccessMode();\n\n    this.setState({\n      owner: acs && acs.isOwner(),\n      admin: acs && acs.isAdmin(),\n      sharer: acs && acs.isSharer(),\n      deleter: acs && acs.isDeleter(),\n      muted: acs && acs.isMuted(),\n\n      fullName: topic.public ? topic.public.fn : undefined,\n      avatar: makeImageDataUrl(topic.public ? topic.public.photo : null),\n      private: topic.private ? topic.private.comment : null,\n      address: topic.name,\n      groupTopic: topic.isGroupType(),\n      channel: topic.isChannelType(),\n      showMemberPanel: false,\n      access: acs ? acs.getMode() : undefined,\n      modeGiven: acs ? acs.getGiven() : undefined,\n      modeWant: acs ? acs.getWant() : undefined,\n      auth: defacs.auth,\n      anon: defacs.anon\n    });\n\n    if (topic.getType() == 'grp' && acs && acs.isOwner()) {\n      // Requesting tags: owner is editing the topic.\n      topic.getMeta(topic.startMetaQuery().withTags().build());\n    }\n  }\n\n  onMetaDesc(desc) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetDesc(topic, this.props);\n\n    if (this.previousMetaDesc && this.previousMetaDesc != this.onMetaDesc) {\n      this.previousMetaDesc(desc);\n    }\n  }\n\n  onSubsUpdated(subs) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetSubs(topic, this.props);\n\n    if (this.previousSubsUpdated && this.previousSubsUpdated != this.onSubsUpdated) {\n      this.previousSubsUpdated(subs);\n    }\n  }\n\n  onTagsUpdated(tags) {\n    this.setState({tags: tags});\n\n    if (this.previousTagsUpdated && this.previousTagsUpdated != this.onTagsUpdated) {\n      this.previousTagsUpdated();\n    }\n  }\n\n  handleFullNameUpdate(fn) {\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.fullName !== fn) {\n      this.setState({fullName: fn});\n      this.props.onTopicDescUpdate(this.props.topic, theCard(fn, null), null);\n    }\n  }\n\n  handlePrivateUpdate(comment) {\n    comment = comment.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.private !== comment) {\n      this.setState({private: comment});\n      this.props.onTopicDescUpdate(this.props.topic, null, comment || Tinode.DEL_CHAR);\n    }\n  }\n\n  handleImageChanged(img) {\n    this.setState({avatar: img});\n    this.props.onTopicDescUpdate(this.props.topic, theCard(null, img || Tinode.DEL_CHAR), null);\n  }\n\n  handleMuted(ignored, checked) {\n    this.setState({muted: checked});\n    this.props.onChangePermissions(this.props.topic, checked ? '-P' : '+P');\n  }\n\n  handlePermissionsChanged(perm) {\n    switch (this.state.showPermissionEditorFor) {\n      case 'auth':\n        this.props.onTopicDescUpdate(this.props.topic, null, null, {auth: perm});\n        break;\n      case 'anon':\n        this.props.onTopicDescUpdate(this.props.topic, null, null, {anon: perm});\n        break;\n      case 'mode':\n      case 'want':\n        this.props.onChangePermissions(this.props.topic, perm);\n        break;\n      case 'given':\n        this.props.onChangePermissions(this.props.topic, perm, this.props.topic);\n        break;\n      case 'user':\n        this.props.onChangePermissions(this.props.topic, perm, this.state.userPermissionsEdited);\n        break;\n    }\n\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handleLaunchPermissionsEditor(which, uid) {\n    const {formatMessage} = this.props.intl;\n    let toEdit, toCompare, toSkip, titleEdit, titleCompare, userTitle, userAvatar;\n    switch (which) {\n      case 'mode':\n        toEdit = this.state.access;\n        break;\n      case 'want':\n        toEdit = this.state.modeWant;\n        toCompare = this.state.modeGiven;\n        if (this.state.owner) {\n          // Don't allow owner to unset 'O' permission. All other permissions are OK.\n          toSkip = 'O';\n        } else {\n          // Allow accepting any of 'ASDO' permissions but don't allow asking for them.\n          toSkip = Tinode.AccessMode.encode(Tinode.AccessMode.diff('ASDO', this.state.modeGiven));\n          if (this.state.channel) {\n            // Channels are read-only.\n            toSkip += 'W';\n          }\n        }\n        titleEdit = formatMessage(messages.requested);\n        titleCompare = formatMessage(messages.granted);\n        break;\n      case 'given':\n        toEdit = this.state.modeGiven2;\n        toCompare = this.state.modeWant2;\n        toSkip = this.state.groupTopic ? (this.state.owner ? '' : 'O') : 'ASDO';\n        titleEdit = formatMessage(messages.granted);\n        titleCompare = formatMessage(messages.requested);\n        break;\n      case 'auth':\n        toEdit = this.state.auth;\n        toSkip = 'O';\n        break;\n      case 'anon':\n        toEdit = this.state.anon;\n        toSkip = 'O';\n        break;\n      case 'user': {\n        const topic = this.props.tinode.getTopic(this.props.topic);\n        if (!topic) {\n          return;\n        }\n        const user = topic.subscriber(uid);\n        if (!user || !user.acs) {\n          return;\n        }\n        toEdit = user.acs.getGiven();\n        toCompare = user.acs.getWant();\n        toSkip = this.state.owner ? '' : 'O';\n        titleEdit = formatMessage(messages.granted);\n        titleCompare = formatMessage(messages.requested);\n        if (user.public) {\n          userTitle = user.public.fn;\n          userAvatar = user.public.photo;\n        }\n        break;\n      }\n      default:\n        console.log(\"Unknown permission editing mode '\" + which + \"'\");\n        break;\n    }\n    this.setState({\n      showPermissionEditorFor: which,\n      userPermissionsEdited: uid,\n      userPermissionsTitle: userTitle,\n      userPermissionsAvatar: userAvatar,\n      editedPermissions: toEdit,\n      immutablePermissions: toCompare,\n      editedPermissionsTitle: titleEdit,\n      immutablePermissionsTitle: titleCompare,\n      editedPermissionsSkipped: toSkip,\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handleShowAddMembers(e) {\n    e.preventDefault();\n    this.props.onInitFind();\n    this.setState({showMemberPanel: true});\n  }\n\n  handleHideAddMembers() {\n    this.setState({showMemberPanel: false});\n  }\n\n  handleMemberUpdateRequest(members, added, removed) {\n    this.props.onMemberUpdateRequest(this.props.topic, added, removed);\n    this.setState({showMemberPanel: false});\n  }\n\n  handleDeleteMessages(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(this.state.deleter ? messages.delete_messages : messages.clear_messages), // title\n      formatMessage(this.state.deleter ? messages.delete_messages_warning : messages.clear_messages_warning), // content\n      (() => { this.props.onDeleteMessages(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleLeave(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.leave_chat), // title\n      formatMessage(messages.leave_chat_warning), // content\n      (() => { this.props.onLeaveTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleBlock(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.block_contact), // title\n      formatMessage(messages.block_contact_warning), // content\n      (() => { this.props.onBlockTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleReport(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.report_chat), // title\n      formatMessage(messages.report_chat_warning), // content\n      (() => { this.props.onReportTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleMemberSelected(uid) {\n    this.setState({selectedContact: uid});\n  }\n\n  handleMoreInfo(open) {\n    this.setState({moreInfoExpanded: open});\n  }\n\n  handleTagsUpdated(tags) {\n    if (!arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      this.props.onTopicTagsUpdate(this.props.topic, tags);\n    }\n  }\n\n  handleContextMenu(params) {\n    const {formatMessage} = this.props.intl;\n    const instance = this;\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    const user = topic.subscriber(params.topicName);\n    if (!user || !user.acs) {\n      return;\n    }\n\n    const menuItems = [\n      {title: formatMessage(messages.edit_permissions), handler: function() {\n        instance.handleLaunchPermissionsEditor('user', params.topicName);\n      }},\n      'member_delete',\n      user.acs.isMuted() ? 'member_unmute' : 'member_mute',\n      user.acs.isJoiner() ? 'member_block' : 'member_unblock'\n    ];\n    this.props.showContextMenu({\n      topicName: this.props.topic,\n      x: params.x,\n      y: params.y,\n      user: params.topicName}, menuItems);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n\n    return (\n      <div id=\"info-view\">\n        <div className=\"caption-panel\" id=\"info-caption-panel\">\n          <div className=\"panel-title\" id=\"info-title\">\n            <FormattedMessage id=\"title_info\" defaultMessage=\"Info\" description=\"Title for InfoView\" />\n          </div>\n          <div>\n            <MenuCancel onCancel={this.props.onCancel} />\n          </div>\n        </div>\n        {this.props.displayMobile ?\n          <ErrorPanel\n            level={this.props.errorLevel}\n            text={this.props.errorText}\n            onClearError={this.props.onError} /> : null}\n        {this.state.showMemberPanel ?\n          <GroupManager\n            members={this.state.contactList}\n            requiredMember={this.props.myUserId}\n            keepInitialMembers={!this.state.admin && !this.state.owner}\n            myUserId={this.props.myUserId}\n            contacts={this.props.searchableContacts}\n            onCancel={this.handleHideAddMembers}\n            onSubmit={this.handleMemberUpdateRequest} />\n          :\n        this.state.showPermissionEditorFor ?\n          <PermissionsEditor\n            mode={this.state.editedPermissions}\n            compare={this.state.immutablePermissions}\n            skip={this.state.editedPermissionsSkipped}\n            modeTitle={this.state.editedPermissionsTitle}\n            compareTitle={this.state.immutablePermissionsTitle}\n            userTitle={this.state.userPermissionsTitle}\n            item={this.state.userPermissionsEdited}\n            userAvatar={this.state.userPermissionsAvatar}\n            onSubmit={this.handlePermissionsChanged}\n            onCancel={this.handleHidePermissionsEditor}\n            />\n          :\n          <div id=\"info-view-content\" className=\"scrollable-panel\">\n            <div className=\"panel-form-row\">\n              <div className=\"panel-form-column\">\n                <div><label className=\"small\">\n                  <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                    description=\"Label for editing topic name\" />\n                </label></div>\n                <div><InPlaceEdit\n                    placeholder={this.state.groupTopic ? \"Group name\" : <i>Unknown</i>}\n                    readOnly={!this.state.owner}\n                    value={this.state.fullName}\n                    required={true}\n                    onFinished={this.handleFullNameUpdate} /></div>\n                <div>\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                      description=\"Label for editing 'private'\" />\n                  </label>\n                </div>\n                <div>\n                  <FormattedMessage id=\"private_editing_placeholder\"\n                    defaultMessage=\"Visible to you only\"\n                    description=\"Placeholder for editing 'private'\">{\n                    (private_placeholder) => <InPlaceEdit\n                      placeholder={private_placeholder}\n                      value={this.state.private}\n                      onFinished={this.handlePrivateUpdate} />\n                  }</FormattedMessage>\n                </div>\n              </div>\n              <AvatarUpload\n                avatar={this.state.avatar}\n                readOnly={!this.state.owner}\n                uid={this.props.topic}\n                title={this.state.fullName}\n                onImageChanged={this.handleImageChanged}\n                onError={this.props.onError} />\n            </div>\n            <div className=\"hr\" />\n            <div className=\"panel-form-column\">\n              <div className=\"panel-form-row\">\n                <label>\n                  <FormattedMessage id=\"label_muting_topic\" defaultMessage=\"Muted:\"\n                    description=\"Label for Muting/unmuting the topic\" />\n                </label>\n                <CheckBox name=\"P\" checked={this.state.muted}\n                  onChange={this.handleMuted} />\n              </div>\n              <FormattedMessage id=\"action_more\" defaultMessage=\"More\"\n                description=\"Action for showing more content\">{\n                (more) => <MoreButton\n                  title={more}\n                  open={this.state.moreInfoExpanded}\n                  onToggle={this.handleMoreInfo} />\n              }</FormattedMessage>\n              {this.state.moreInfoExpanded ?\n                <div className=\"panel-form-column\">\n                  <div className=\"panel-form-row\">\n                    <label><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n                      description=\"Label for user address (ID)\" /></label>\n                    <tt>{this.state.address}</tt>\n                  </div>\n                  {this.state.groupTopic ?\n                    <div className=\"panel-form-row\">\n                      <label>\n                        <FormattedMessage id=\"label_your_permissions\" defaultMessage=\"Your permissions:\"\n                          description=\"Label for current user permissions\" />\n                      </label>\n                      <tt className=\"clickable\"\n                        onClick={this.handleLaunchPermissionsEditor.bind(this, 'want')}>\n                        {this.state.access}\n                      </tt>\n                    </div>\n                    :\n                    <div>\n                      <div>\n                        <label className=\"small\">\n                          <FormattedMessage id=\"label_permissions\" defaultMessage=\"Permissions:\"\n                            description=\"Section title\" />\n                        </label>\n                      </div>\n                      <div className=\"quoted\">\n                        <div>\n                          <FormattedMessage id=\"label_you\" defaultMessage=\"You:\"\n                            description=\"Label for the current user\" /> &nbsp;<tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'want')}>\n                          {this.state.access}\n                        </tt></div>\n                        <div>{this.state.fullName ? this.state.fullName : formatMessage(messages.other_user)}:\n                          &nbsp;<tt className=\"clickable\" onClick={this.handleLaunchPermissionsEditor.bind(this, 'given')}>\n                          {this.state.modeGiven2}\n                          </tt>\n                        </div>\n                      </div>\n                    </div>\n                  }\n                  {this.state.sharer && (this.state.auth || this.state.anon) ?\n                  <div>\n                    <div>\n                      <label className=\"small\">\n                        <FormattedMessage id=\"label_default_access\" defaultMessage=\"Default access mode:\"\n                          description=\"Section title\" />\n                      </label>\n                    </div>\n                    <div className=\"quoted\">\n                      <div>Auth: {this.state.admin ?\n                        <tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>\n                          {this.state.auth}\n                        </tt>\n                        :\n                        <tt>{this.state.auth}</tt>\n                      }\n                      </div>\n                      <div>Anon: {this.state.admin ?\n                        <tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>\n                          {this.state.anon}\n                        </tt>\n                        :\n                        <tt>{this.state.anon}</tt>\n                      }\n                      </div>\n                    </div>\n                  </div>\n                  :\n                  null\n                }\n                </div>\n              :\n              null\n              }\n            </div>\n            <div className=\"hr\" />\n            {this.state.owner ?\n              <>\n                <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (user discovery)\"\n                  description=\"Section title for TagManager\">{\n                  (tags) => <TagManager\n                    title={tags}\n                    tags={this.state.tags}\n                    activated={false}\n                    tinode={this.props.tinode}\n                    onSubmit={this.handleTagsUpdated} />\n                }</FormattedMessage>\n                <div className=\"hr\" />\n              </>\n              :\n              null\n            }\n            <div className=\"panel-form-column\">\n              {!this.state.channel ?\n                <a href=\"#\" className=\"flat-button\" onClick={this.handleDeleteMessages}>\n                  <i className=\"material-icons\">delete_outline</i> &nbsp;{\n                    formatMessage(this.state.deleter ? messages.delete_messages : messages.clear_messages)\n                  }\n                </a>\n                :\n                null\n              }\n              <a href=\"#\" className=\"danger flat-button\" onClick={this.handleLeave}>\n                <i className=\"material-icons\">exit_to_app</i> &nbsp;{formatMessage(messages.leave_chat)}\n              </a>\n              {!this.state.groupTopic ?\n                <a href=\"#\" className=\"danger flat-button\" onClick={this.handleBlock}>\n                  <i className=\"material-icons\">block</i> &nbsp;{formatMessage(messages.block_contact)}\n                </a>\n                :\n                null\n              }\n              {!this.state.owner ?\n                <a href=\"#\" className=\"danger flat-button\" onClick={this.handleReport}>\n                  <i className=\"material-icons\">report</i> &nbsp;{formatMessage(messages.report_chat)}\n                </a>\n                :\n                null\n              }\n            </div>\n            {this.state.groupTopic && this.state.sharer ?\n              <>\n                <div className=\"hr\" />\n                <div className=\"panel-form-column\">\n                  <div className=\"panel-form-row\">\n                    <label className=\"small\">\n                      <FormattedMessage id=\"label_group_members\" defaultMessage=\"Group members:\"\n                        description=\"Section title or label\" />\n                    </label>\n                  </div>\n                  <div className=\"panel-form-row\">\n                    <a href=\"#\" className=\"flat-button\" onClick={this.handleShowAddMembers}>\n                      <i className=\"material-icons\">person_add</i> &nbsp;<FormattedMessage id=\"button_add_members\"\n                        defaultMessage=\"Add members\" description=\"Flat button [Add members] (to topic)\" />\n                    </a>\n                  </div>\n                  <FormattedMessage id=\"group_has_no_members\" defaultMessage=\"No members\"\n                    description=\"Shown in place of group members\">{\n                    (no_members) => <ContactList\n                      contacts={this.state.contactList}\n                      myUserId={this.props.myUserId}\n                      emptyListMessage={no_members}\n                      topicSelected={this.state.selectedContact}\n                      showOnline={false}\n                      showUnread={false}\n                      showMode={true}\n                      noScroll={true}\n                      onTopicSelected={this.handleMemberSelected}\n                      showContextMenu={this.state.admin ? this.handleContextMenu : false}\n                    />\n                  }</FormattedMessage>\n                </div>\n              </>\n              :\n              null\n            }\n          </div>\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(InfoView);\n","// File uload/download progress indicator with a cancel inside.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class FileProgress extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"uploader\">\n        <div><span style={{width: (this.props.progress * 100) + \"%\"}}></span></div>\n        {this.props.progress < 0.999 ?\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n            <i className=\"material-icons\">close</i> <FormattedMessage id=\"action_cancel\"\n              defaultMessage=\"cancel\" description=\"Call to action [cancel]\" />\n          </a>\n          :\n          <FormattedMessage id=\"upload_finishing\" defaultMessage=\"finishing...\"\n            description=\"Notification that upload is finishing\" />\n        }\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\nimport { bytesToHumanSize } from '../lib/strformat.js';\nimport { isUrlRelative, sanitizeUrl } from '../lib/utils.js';\n\nexport default class Attachment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      downloader: null,\n      progress: 0\n    };\n\n    this.downloadFile = this.downloadFile.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  downloadFile(url, filename, mimetype) {\n    if (!url) {\n      this.props.onError(\"Invalid download URL '\" + url + \"'\");\n      return;\n    }\n\n    const downloader = this.props.tinode.getLargeFileHelper();\n    this.setState({downloader: downloader});\n    downloader.download(url, filename, mimetype,\n      (loaded) => {\n        this.setState({progress: loaded / this.props.size});\n      },\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    ).then(() => {\n      this.setState({downloader: null, progress: 0});\n    }).catch((err) => {\n      if (err) {\n        this.props.onError(\"Error downloading file: \" + err.message, 'err');\n      }\n      this.setState({downloader: null, progress: 0});\n    });\n  }\n\n  handleCancel() {\n    if (this.props.uploading) {\n      this.props.onCancelUpload();\n    } else if (this.state.downloader) {\n      this.state.downloader.cancel();\n    }\n  }\n\n  render() {\n    let filename = this.props.filename || 'file_attachment';\n    if (filename.length > 36) {\n      filename = filename.substr(0, 16) + '...' + filename.substr(-16);\n    }\n    let size = this.props.size > 0 ?\n      <span className=\"small gray\">({bytesToHumanSize(this.props.size)})</span> :\n      null;\n\n    // Detect if the download URL is relative or absolute.\n    // If the URL is relative use LargeFileHelper to attach authentication\n    // credentials to the request.\n    let url, helperFunc;\n    if (!this.props.uploading && !this.state.downloader && isUrlRelative(this.props.downloadUrl)) {\n      // Relative URL. Use download helper.\n      url = '#';\n      helperFunc = (e) => {\n        e.preventDefault();\n        this.downloadFile(this.props.downloadUrl, this.props.filename, this.props.mimetype);\n      };\n    } else {\n      url = sanitizeUrl(this.props.downloadUrl);\n      helperFunc = null;\n    }\n    const downloadWidget = <><i className=\"material-icons\">file_download</i> <FormattedMessage id=\"save_attachment\"\n      defaultMessage=\"save\" description=\"Call to save an attachment\" /></>;\n    return (\n      <div className=\"attachment\">\n        <div><i className=\"material-icons big gray\">insert_drive_file</i></div>\n        <div className=\"flex-column\">\n          <div>{filename} {size}</div>\n          {this.props.uploading || this.state.downloader ?\n            <FileProgress progress={this.props.uploading ? this.props.progress : this.state.progress}\n              onCancel={this.handleCancel} />\n            :\n            <div>{url ?\n              <a href={url} download={this.props.filename} onClick={helperFunc}>{downloadWidget}</a>\n              :\n              <span className=\"light-gray\">{downloadWidget}</span>\n            }</div>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n","// Image view with progress bar and a cancel button.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\n\nexport default class UploadingImage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"inline-image\">\n        {React.createElement('img', this.props)}\n        <div className=\"rounded-container\">\n          <FileProgress progress={this.props.progress} onCancel={this.props.onCancelUpload} />\n        </div>\n      </div>\n    );\n  }\n};\n","// Single message, sent or received.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport Attachment from './attachment.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\nimport UploadingImage from './uploading-image.jsx'\nimport { sanitizeImageUrl, sanitizeUrl } from '../lib/utils.js';\n\nexport default class ChatMessage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      progress: 0\n    };\n\n    if (props.uploader) {\n      props.uploader.onProgress = this.handleProgress.bind(this);\n    }\n\n    this.handleImagePreview = this.handleImagePreview.bind(this);\n    this.handleFormButtonClick = this.handleFormButtonClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n  }\n\n  handleImagePreview(e) {\n    e.preventDefault();\n    this.props.onImagePreview({\n      url: e.target.src,\n      filename: e.target.title,\n      width: e.target.dataset.width,\n      height: e.target.dataset.height,\n      size: e.target.dataset.size,\n      type: e.target.dataset.mime\n    });\n  }\n\n  handleFormButtonClick(e) {\n    e.preventDefault();\n    const data = {\n      seq: this.props.seq\n    };\n    data.resp = {};\n    if (e.target.dataset.name) {\n      data.resp[e.target.dataset.name] = e.target.dataset.val ? e.target.dataset.val :\n        e.target.dataset.val === undefined ? 1 : '' + e.target.dataset.val;\n    }\n    if (e.target.dataset.act == 'url') {\n      data.ref = sanitizeUrl(e.target.dataset.ref) || 'about:blank';\n    }\n    const text = e.target.dataset.title || 'unknown';\n    this.props.onFormResponse(e.target.dataset.act, text, data);\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const menuItems = this.props.received == Tinode.MESSAGE_STATUS_FAILED ? ['menu_item_send_retry'] : [];\n    this.props.showContextMenu({ seq: this.props.seq, content: this.props.content,\n                                 y: e.pageY, x: e.pageX }, menuItems);\n  }\n\n  handleProgress(ratio) {\n    this.setState({progress: ratio});\n  }\n\n  handleCancelUpload() {\n    this.props.onCancelUpload(this.props.seq, this.props.uploader);\n  }\n\n  render() {\n    const sideClass = this.props.deleted ? 'center' :\n      (this.props.sequence + ' ' + (this.props.response ? 'left' : 'right'));\n    const bubbleClass = (this.props.sequence == 'single' || this.props.sequence == 'last') ? 'bubble tip' : 'bubble';\n    const avatar = this.props.deleted ? null : (this.props.userAvatar || true);\n    const fullDisplay = (this.props.userFrom && this.props.response && !this.props.deleted &&\n      (this.props.sequence == 'single' || this.props.sequence == 'last'));\n\n    let content = this.props.content;\n    const attachments = [];\n    if (this.props.mimeType == Drafty.getContentType() && Drafty.isValid(content)) {\n      Drafty.attachments(content, function(att, i) {\n        if (att.mime == 'application/json') {\n          // Don't show json objects as attachments.\n          // They are not meant for users.\n          return;\n        }\n        attachments.push(<Attachment\n          tinode={this.props.tinode}\n          downloadUrl={Drafty.getDownloadUrl(att)}\n          filename={att.name} uploading={Drafty.isProcessing(att)}\n          mimetype={att.mime} size={Drafty.getEntitySize(att)}\n          progress={this.state.progress}\n          onCancelUpload={this.handleCancelUpload}\n          onError={this.props.onError}\n          key={i} />);\n      }, this);\n      content = React.createElement(React.Fragment, null, Drafty.format(content, draftyFormatter, this));\n    } else if (this.props.deleted) {\n      // Message represents a range of deleted messages.\n      content = <><i className=\"material-icons gray\">block</i> <i className=\"gray\">\n        <FormattedMessage id=\"deleted_content\"\n          defaultMessage=\"content deleted\" description=\"Shown when messages are deleted\" />\n      </i></>\n    } else if (typeof content != 'string') {\n      content = <>\n          <i className=\"material-icons gray\">error_outline</i> <i className=\"gray\">\n            <FormattedMessage id=\"invalid_content\"\n              defaultMessage=\"invalid content\" description=\"Shown when message is unreadable\" /></i>\n        </>\n    }\n\n    return (\n      <li className={sideClass}>\n        {this.props.userFrom && this.props.response ?\n          <div className=\"avatar-box\">\n            {fullDisplay ?\n              <LetterTile\n                topic={this.props.userFrom}\n                title={this.props.userName}\n                avatar={avatar} /> :\n              null}\n          </div> :\n          null}\n        <div>\n          <div className={bubbleClass}>\n            <div className=\"content-meta\">\n              <div className=\"message-content\">\n                {content}\n                {attachments}\n              </div>\n              {this.props.timestamp ?\n                <ReceivedMarker\n                  timestamp={this.props.timestamp}\n                  received={this.props.received} />\n                : null}\n            </div>\n            {this.props.deleted || !this.props.showContextMenu ?\n              null :\n              <span className=\"menuTrigger\">\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">expand_more</i>\n                </a>\n              </span>\n            }\n          </div>\n          {fullDisplay ?\n            <div className=\"author\">\n              <FormattedMessage id=\"user_not_found\" defaultMessage=\"Not found\"\n                description=\"In place of a user's full name when the user is not found.\">{\n                    (notFound) => {return this.props.userName || <i>{notFound}</i>}\n              }</FormattedMessage>\n            </div>\n            : null\n          }\n        </div>\n      </li>\n    );\n  }\n};\n\n// Convert Drafty object to a tree of React elements.\nimport { BROKEN_IMAGE_SIZE, REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\n\n// Converts Drafty elements into React classes.\n// 'this' is set by the caller.\nfunction draftyFormatter(style, data, values, key) {\n  if (style == 'EX') {\n    // attachments are handled elsewhere.\n    return null;\n  }\n\n  let el = Drafty.tagName(style);\n  if (el) {\n    const attr = Drafty.attrValue(style, data) || {};\n    attr.key = key;\n    switch (style) {\n      case 'HL':\n        // Highlighted text. Assign class name.\n        attr.className = 'highlight';\n        break;\n      case 'IM':\n        // Additional processing for images\n        if (data) {\n          attr.className = 'inline-image';\n          const dim = fitImageSize(data.width, data.height,\n            Math.min(this.props.viewportWidth - REM_SIZE * 6.5, REM_SIZE * 34.5), REM_SIZE * 24, false) ||\n            {dstWidth: BROKEN_IMAGE_SIZE, dstHeight: BROKEN_IMAGE_SIZE};\n          attr.style = {\n            width: dim.dstWidth + 'px',\n            height: dim.dstHeight + 'px',\n            // Looks like a Chrome bug: broken image does not respect 'width' and 'height'.\n            minWidth: dim.dstWidth + 'px',\n            minHeight: dim.dstHeight + 'px'\n          };\n          if (!Drafty.isProcessing(data)) {\n            attr.src = this.props.tinode.authorizeURL(sanitizeImageUrl(attr.src));\n            attr.alt = data.name;\n            if (attr.src) {\n              attr.onClick = this.handleImagePreview;\n              attr.className += ' image-clickable';\n              attr.loading = 'lazy';\n            } else {\n              attr.src = 'img/broken_image.png';\n            }\n          } else {\n            // Use custom element instead of <img>.\n            el = UploadingImage;\n          }\n        }\n        break;\n      case 'BN':\n        // Button\n        attr.onClick = this.handleFormButtonClick;\n        let inner = React.Children.map(values, (child) => {\n          return typeof child == 'string' ? child : undefined;\n        });\n        if (!inner || inner.length == 0) {\n          inner = [attr.name]\n        }\n        // Get text which will be sent back when the button is clicked.\n        attr['data-title'] = inner.join('');\n        break;\n      case 'FM':\n        // Form\n        attr.className = 'bot-form';\n        break;\n      case 'RW':\n        // Form element formatting is dependent on element content.\n        break;\n      default:\n        if (el == '_UNKN') {\n          // Unknown element.\n          // TODO: make it prettier.\n          el = <><span className=\"material-icons\">extension</span></>;\n        }\n        break;\n    }\n    return React.createElement(el, attr, values);\n  } else {\n    return values;\n  }\n};\n","// Send message form.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport { KEYPRESS_DELAY } from '../config.js';\nimport { filePasted } from '../lib/blob-helpers.js';\n\nconst messages = defineMessages({\n  messaging_disabled: {\n    id: 'messaging_disabled_prompt',\n    defaultMessage: 'Messaging disabled',\n    description: 'Prompt in SendMessage in read-only topic'\n  },\n  type_new_message: {\n    id: 'new_message_prompt',\n    defaultMessage: 'New message',\n    description: 'Prompt in send message field'\n  },\n  add_image_caption: {\n    id: 'image_caption_prompt',\n    defaultMessage: 'Image caption',\n    description: 'Prompt in SendMessage for attached image'\n  },\n  file_attachment_too_large: {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  },\n  cannot_initiate_upload: {\n    id: 'cannot_initiate_file_upload',\n    defaultMessage: 'Cannot initiate file upload.',\n    description: 'Generic error messagewhen attachment fails'\n  },\n});\n\nclass SendMessage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      message: '',\n      // Make initial keypress time as if it happened 5001 milliseconds in the past.\n      keypressTimestamp: new Date().getTime() - KEYPRESS_DELAY - 1\n    };\n\n    this.handlePasteEvent = this.handlePasteEvent.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleSend = this.handleSend.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleMessageTyping = this.handleMessageTyping.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.addEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.removeEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.messageEditArea) {\n      this.messageEditArea.focus();\n    }\n  }\n\n  handlePasteEvent(e) {\n    if (this.props.disabled) {\n      return;\n    }\n    // FIXME: handle large files too.\n    if (filePasted(e,\n      (bits, mime, width, height, fname) => {\n        this.props.onAttachImage(mime, bits, width, height, fname);\n      },\n      (mime, bits, fname) => {\n        this.props.onAttachFile(mime, bits, fname);\n      },\n      this.props.onError)) {\n\n      // If a file was pasted, don't paste base64 data into input field.\n      e.preventDefault();\n    }\n  }\n\n  handleAttachImage(e) {\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachImage(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleAttachFile(e) {\n    const {formatMessage} = this.props.intl;\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachFile(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleSend(e) {\n    e.preventDefault();\n    const message = this.state.message.trim();\n    if (message || this.props.acceptBlank || this.props.noInput) {\n      this.props.onSendMessage(message);\n      this.setState({message: ''});\n    }\n  }\n\n  /* Send on Enter key */\n  handleKeyPress(e) {\n    // Remove this if you don't want Enter to trigger send\n    if (e.key === 'Enter') {\n      // Have Shift-Enter insert a line break instead\n      if (!e.shiftKey) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.handleSend(e);\n      }\n    }\n  }\n\n  handleMessageTyping(e) {\n    const newState = {message: e.target.value};\n    if (this.props.onKeyPress) {\n      const now = new Date().getTime();\n      if (now - this.state.keypressTimestamp > KEYPRESS_DELAY) {\n        this.props.onKeyPress();\n        newState.keypressTimestamp = now;\n      }\n    }\n    this.setState(newState);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const prompt = this.props.disabled ?\n      formatMessage(messages.messaging_disabled) :\n      (this.props.messagePrompt ?\n        formatMessage(messages[this.props.messagePrompt]) :\n        formatMessage(messages.type_new_message));\n    return (\n      <div id=\"send-message-panel\">\n        {!this.props.disabled ?\n          <>\n            {this.props.onAttachFile ?\n              <>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachImage.click();}} title=\"Add image\">\n                  <i className=\"material-icons secondary\">photo</i>\n                </a>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachFile.click();}} title=\"Attach file\">\n                  <i className=\"material-icons secondary\">attach_file</i>\n                </a>\n              </>\n              :\n              null}\n            {this.props.noInput ?\n              <div className=\"hr thin\" /> :\n              <textarea id=\"sendMessage\" placeholder={prompt}\n                value={this.state.message} onChange={this.handleMessageTyping}\n                onKeyPress={this.handleKeyPress}\n                ref={(ref) => {this.messageEditArea = ref;}}\n                autoFocus />}\n            <a href=\"#\" onClick={this.handleSend} title=\"Send\">\n              <i className=\"material-icons\">send</i>\n            </a>\n            <input type=\"file\" ref={(ref) => {this.attachFile = ref;}}\n              onChange={this.handleAttachFile} style={{display: 'none'}} />\n            <input type=\"file\" ref={(ref) => {this.attachImage = ref;}} accept=\"image/*\"\n              onChange={this.handleAttachImage} style={{display: 'none'}} />\n          </>\n          :\n          <div id=\"writing-disabled\">{prompt}</div>\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SendMessage);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { bytesToHumanSize } from '../lib/strformat.js';\n\n// Get material icon name from mime type.\nfunction iconFromMime(mime) {\n  // If more icons become available in material icons, add them to this mime-to-icon mapping.\n  const mimeToIcon = {default: 'insert_drive_file', image: 'image', text: 'description', video: 'theaters'};\n\n  return mimeToIcon[mime] || mimeToIcon[(mime || '').split('/')[0]] || mimeToIcon['default'];\n}\n\nexport default class DocPreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleSendDoc = this.handleSendDoc.bind(this);\n  }\n\n  handleSendDoc(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(this.props.content.file);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          <span>{this.props.content.filename}</span>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\">\n          <div className=\"flex-column narrow\">\n            <i className=\"material-icons gray\">{iconFromMime(this.props.content.type)}</i>\n            <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n              description=\"Label for file content type (mime)\" /></b> {this.props.content.type || 'application/octet-stream'}</div>\n            <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n              description=\"Label for file size\" /></b> {bytesToHumanSize(this.props.content.size)}</div>\n          </div>\n        </div>\n        <SendMessage\n          noInput={true}\n          onSendMessage={this.handleSendDoc}\n          onError={this.props.onError} />\n      </div>\n    );\n  }\n};\n","// GroupSubs: a list of group subscribers currently online.\n// Show in the topic title bar\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { MAX_ONLINE_IN_TOPIC } from '../config.js'\n\nimport LetterTile from './letter-tile.jsx';\nimport { makeImageDataUrl } from '../lib/blob-helpers.js';\n\nexport default class GroupSubs extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const usersOnline = [];\n    const totalCount = (this.props.subscribers || []).length;\n    const countToShow = Math.min(MAX_ONLINE_IN_TOPIC, totalCount);\n\n    (this.props.subscribers || []).some((sub) => {\n      usersOnline.push(\n        <div className=\"avatar-box\" key={sub.user}>\n          <LetterTile\n            topic={sub.user}\n            avatar={makeImageDataUrl(sub.public ? sub.public.photo : null) || true}\n            title={sub.public ? sub.public.fn : null} />\n        </div>\n      );\n      return usersOnline.length == countToShow;\n    });\n\n    return (\n      <div id=\"topic-users\">{usersOnline} {totalCount > countToShow ?\n        <span>\n          <FormattedMessage id=\"more_online_members\" defaultMessage=\"+{overflow} more\"\n              description=\"Shown in MessagesView title bar when the number of online subscribers exceeds MAX_ONLINE_IN_TOPIC\"\n              values={{ overflow: (totalCount - countToShow) }} />\n        </span> : null}\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\nimport { bytesToHumanSize } from '../lib/strformat.js';\n\nexport default class ImagePreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      width: 0,\n      height: 0\n    };\n\n    this.handleSendImage = this.handleSendImage.bind(this);\n  }\n\n  assignWidth(node) {\n    if (node && !this.state.width) {\n      const bounds = node.getBoundingClientRect();\n      this.setState({\n        width: bounds.width | 0,\n        height: bounds.height | 0\n      });\n    }\n  }\n\n  handleSendImage(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(caption, this.props.content.blob);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n\n    const dim = fitImageSize(this.props.content.width, this.props.content.height,\n      this.state.width, this.state.height, false);\n    const size = dim ? { width: dim.dstWidth + 'px', height: dim.dstHeight + 'px' } :\n      ((this.props.content.width > this.props.content.height) ? {width: '100%'} : {height: '100%'});\n    size.maxWidth = '100%';\n    size.maxHeight = '100%';\n\n    let filename = this.props.content.filename;\n    // Average font aspect ratio is ~0.5; File name takes 1/3 of the viewport width.\n    const maxlength = Math.max(((this.state.width / REM_SIZE / 1.5) | 0) - 2, 12);\n    if (filename.length > maxlength) {\n      filename = filename.slice(0, maxlength/2 - 1) + '…' + filename.slice(1 - maxlength/2);\n    }\n    const width = this.props.content.width || '-';\n    const height = this.props.content.height || '-';\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          {!this.props.onSendMessage ?\n            <a href={this.props.content.url} download={this.props.content.filename}>\n              <i className=\"material-icons\">file_download</i> <FormattedMessage\n                id=\"download_action\" defaultMessage=\"download\" description=\"Call to action [download]\" />\n            </a>\n            :\n            <span>{this.props.content.filename}</span>\n          }\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\" ref={(node) => this.assignWidth(node)}>\n          <img src={this.props.content.url} style={size} className=\"image-preview\" alt={this.props.content.filename} />\n        </div>\n        {this.props.onSendMessage ?\n          <SendMessage\n            messagePrompt=\"add_image_caption\"\n            acceptBlank={true}\n            onSendMessage={this.handleSendImage}\n            onError={this.props.onError} />\n          :\n          <div id=\"image-preview-footer\">\n            <div>\n              <div><b><FormattedMessage id=\"label_file_name\" defaultMessage=\"File name:\"\n                description=\"Label for a file name\" /></b></div>\n              <div><span title={this.props.content.filename}>{filename ? filename : '-'}</span></div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n                description=\"Label for file content type (mime)\" /></b></div>\n              <div>{this.props.content.type}</div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n                description=\"Label for file size\" /></b></div>\n              <div>{width} &times; {height} px; {bytesToHumanSize(this.props.content.size)}</div>\n            </div>\n          </div>}\n      </div>\n    );\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Invitation extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleButtonAction = this.handleButtonAction.bind(this);\n  }\n\n  handleButtonAction(evt, data) {\n    evt.preventDefault();\n    this.props.onAction(data);\n  }\n\n  render() {\n    return (\n      <div className=\"accept-invite-panel\">\n        <div className=\"title\">\n          <FormattedMessage id=\"chat_invitation\"\n            defaultMessage=\"You are invited to start a new chat. What would you like to do?\"\n            description=\"New chat invitation message: [Accept] [Ignore] [Block].\" />\n        </div>\n        <div className=\"footer\">\n          <button className=\"primary\" onClick={event => { this.handleButtonAction(event, \"accept\"); }}>\n            <FormattedMessage id=\"chat_invitation_accept\"\n              defaultMessage=\"Accept\" description=\"Action [Accept] for chat invitation.\" />\n          </button>\n          <button className=\"secondary\" onClick={event => { this.handleButtonAction(event, \"delete\"); }}>\n            <FormattedMessage id=\"chat_invitation_ignore\"\n              defaultMessage=\"Ignore\" description=\"Action [Ignore] for chat invitation.\" />\n          </button>\n          <button className=\"secondary\" onClick={event => { this.handleButtonAction(event, \"block\"); }}>\n            <FormattedMessage id=\"chat_invitation_block\"\n              defaultMessage=\"Block\" description=\"Action [Block] for chat invitation.\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nexport default class LoadSpinner extends React.PureComponent {\n  render() {\n    return (this.props.show ?\n      <div className=\"load-spinner-box\"><div className=\"loader-spinner\"></div></div> : null);\n  }\n}\n","/* This is just a static page to display when no conversation is selected. */\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME } from '../config.js';\n\nexport default class LogoView extends React.PureComponent {\n  render() {\n    const version = APP_NAME + ' (' + Tinode.getLibrary() + ')';\n    return (\n      <div id=\"dummy-view\">\n        <div>\n          <a href=\"https://github.com/tinode/chat/\">\n            <img id=\"logo\" alt=\"logo\" src=\"img/logo.svg\" />\n            <h2>Tinode Web</h2>\n          </a>\n          <p><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\" \n            description=\"Label for a client version\" /> {version}</p>\n          <p><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\"\n            description=\"Label for a server version\" /> {this.props.serverVersion} ({this.props.serverAddress})</p>\n        </div>\n      </div>\n    );\n  }\n};\n","// Utility class for hash navigation.\n\n// Parse hash as in http://www.example.com/path#hash as if it were\n// path and arguments.\nexport default class HashNavigation {\n  static parseUrlHash(hash) {\n    // Split path from args, path -> parts[0], args->path[1]\n    const parts = hash.split('?', 2);\n    const params = {};\n    let path = [];\n    if (parts[0]) {\n      path = parts[0].substr(1).split('/');\n    }\n    if (parts[1]) {\n      parts[1].split('&').forEach(function(part) {\n        let item = part.split('=');\n        if (item[0]) {\n          params[decodeURIComponent(item[0])] = decodeURIComponent(item[1]);\n        }\n      });\n    }\n    return {path: path, params: params};\n  }\n\n  static navigateTo(url) {\n    window.location.hash = url;\n  }\n\n  static composeUrlHash(path, params) {\n    let url = path.join('/');\n    const args = [];\n    for (const key in params) {\n      if (params.hasOwnProperty(key)) {\n        args.push(key + '=' + params[key]);\n      }\n    }\n    if (args.length > 0) {\n      url += '?' + args.join('&');\n    }\n    return url;\n  }\n\n  static addUrlParam(hash, key, value) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.params[key] = value;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static removeUrlParam(hash, key) {\n    const parsed = this.parseUrlHash(hash);\n    delete parsed.params[key];\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlSidePanel(hash, sidepanel) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[0] = sidepanel;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlTopic(hash, topic) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[1] = topic;\n    // Close InfoView on topic change.\n    delete parsed.params.info;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n}\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\nconst Drafty = Tinode.Drafty;\n\nimport ChatMessage from '../widgets/chat-message.jsx';\nimport DocPreview from '../widgets/doc-preview.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupSubs from '../widgets/group-subs.jsx';\nimport ImagePreview from '../widgets/image-preview.jsx';\nimport Invitation from '../widgets/invitation.jsx';\nimport LetterTile from '../widgets/letter-tile.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport LogoView from './logo-view.jsx';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { DEFAULT_P2P_ACCESS_MODE, IMAGE_PREVIEW_DIM, KEYPRESS_DELAY, MESSAGES_PAGE,\n  MAX_EXTERN_ATTACHMENT_SIZE, MAX_IMAGE_DIM, MAX_INBAND_ATTACHMENT_SIZE, READ_DELAY } from '../config.js';\nimport { SUPPORTED_IMAGE_FORMATS, blobToBase64, filePasted, fileToBase64,\n  imageScaled, makeImageDataUrl } from '../lib/blob-helpers.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { bytesToHumanSize, shortDateFormat } from '../lib/strformat.js';\n\n// Run timer with this frequency (ms) for checking notification queue.\nconst NOTIFICATION_EXEC_INTERVAL = 300;\n\nconst messages = defineMessages({\n  online_now: {\n    id: 'online_now',\n    defaultMessage: 'online now',\n    description: 'Indicator that the user or topic is currently online',\n  },\n  last_seen: {\n    id: 'last_seen_timestamp',\n    defaultMessage: 'Last seen',\n    description: 'Label for the timestamp of when the user or topic was last online'\n  },\n  not_found: {\n    id: 'title_not_found',\n    defaultMessage: 'Not found',\n    description: 'Title shown when topic is not found'\n  },\n  channel: {\n    id: 'channel',\n    defaultMessage: 'channel',\n    description: 'Subtitle shown for channels in MessagesView instead of last seen'\n  },\n  file_attachment_too_large: {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  }\n});\n\n// Checks if the access permissions are granted but not yet accepted.\nfunction isUnconfirmed(acs) {\n  if (acs) {\n    const ex = acs.getExcessive() || '';\n    return acs.isJoiner('given') && (ex.includes('R') || ex.includes('W'));\n  }\n  return false;\n}\n\nfunction isPeerRestricted(acs) {\n  if (acs) {\n    const ms = acs.getMissing() || '';\n    return acs.isJoiner('want') && (ms.includes('R') || ms.includes('W'));\n  }\n  return false;\n}\n\nclass MessagesView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = MessagesView.getDerivedStateFromProps(props, {});\n\n    this.leave = this.leave.bind(this);\n    this.sendImageAttachment = this.sendImageAttachment.bind(this);\n    this.sendFileAttachment = this.sendFileAttachment.bind(this);\n    this.sendKeyPress = this.sendKeyPress.bind(this);\n    this.handleScrollReference = this.handleScrollReference.bind(this);\n    this.handleScrollEvent = this.handleScrollEvent.bind(this);\n    this.handleDescChange = this.handleDescChange.bind(this);\n    this.handleSubsUpdated = this.handleSubsUpdated.bind(this);\n    this.handleNewMessage = this.handleNewMessage.bind(this);\n    this.handleAllMessagesReceived = this.handleAllMessagesReceived.bind(this);\n    this.handleInfoReceipt = this.handleInfoReceipt.bind(this);\n    this.handleImagePostview = this.handleImagePostview.bind(this);\n    this.handleClosePreview = this.handleClosePreview.bind(this);\n    this.handleFormResponse = this.handleFormResponse.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleShowContextMenuMessage = this.handleShowContextMenuMessage.bind(this);\n    this.handleNewChatAcceptance = this.handleNewChatAcceptance.bind(this);\n    this.handleEnablePeer = this.handleEnablePeer.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n    this.postReadNotification = this.postReadNotification.bind(this);\n    this.clearNotificationQueue = this.clearNotificationQueue.bind(this);\n\n    this.readNotificationQueue = [];\n    this.readNotificationTimer = null;\n  }\n\n  componentDidMount() {\n    // this.propsChange(this.props, this.state);\n    if (this.messagesScroller) {\n      this.messagesScroller.addEventListener('scroll', this.handleScrollEvent);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messagesScroller) {\n      this.messagesScroller.removeEventListener('scroll', this.handleScrollEvent);\n    }\n\n    // Flush all notifications.\n    this.clearNotificationQueue();\n  }\n\n  // Scroll last message into view on component update e.g. on message received\n  // or vertical shrinking.\n  componentDidUpdate(prevProps, prevState) {\n    if (this.messagesScroller) {\n      if (prevState.topic != this.state.topic || prevState.messages.length != this.state.messages.length) {\n        // New message\n        this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n      } else if (prevProps.viewportHeight > this.props.viewportHeight) {\n        // Componet changed height.\n        this.messagesScroller.scrollTop += prevProps.viewportHeight - this.props.viewportHeight;\n      }\n    }\n\n    const topic = this.props.tinode ? this.props.tinode.getTopic(this.state.topic) : undefined;\n    if (this.state.topic != prevState.topic) {\n      if (prevState.topic && !Tinode.isNewGroupTopicName(prevState.topic)) {\n        this.leave(prevState.topic);\n      }\n\n      if (topic) {\n        topic.onData = this.handleNewMessage;\n        topic.onAllMessagesReceived = this.handleAllMessagesReceived;\n        topic.onInfo = this.handleInfoReceipt;\n        topic.onMetaDesc = this.handleDescChange;\n        topic.onSubsUpdated = this.handleSubsUpdated;\n        topic.onPres = this.handleSubsUpdated;\n      }\n    }\n\n    if (!this.props.applicationVisible) {\n      // If application is not visible, flush all unsent 'read' notifications.\n      this.clearNotificationQueue();\n    } else {\n      // Otherwise assume there are unread messages.\n      this.postReadNotification(0);\n    }\n\n    if (topic && !topic.isSubscribed() && this.props.ready &&\n        ((this.state.topic != prevState.topic) || !prevProps.ready)) {\n      // Is this a new topic?\n      const newTopic = (this.props.newTopicParams && this.props.newTopicParams._topicName == this.props.topic);\n\n      // Don't request the tags. They are useless unless the user\n      // is the owner and is editing the topic.\n      let getQuery = topic.startMetaQuery().withLaterDesc().withLaterSub();\n      if (this.state.isReader || newTopic) {\n        // Reading is either permitted or we don't know because it's a new topic. Ask for messages.\n        getQuery = getQuery.withLaterData(MESSAGES_PAGE);\n        if (this.state.isReader) {\n          getQuery = getQuery.withLaterDel();\n        }\n        // And show \"loading\" spinner.\n        this.setState({ fetchingMessages: true });\n      }\n      const setQuery = newTopic ? this.props.newTopicParams : undefined;\n      topic.subscribe(getQuery.build(), setQuery)\n        .then((ctrl) => {\n          if (ctrl.code == 303) {\n            // Redirect to another topic requested.\n            HashNavigation.navigateTo(HashNavigation.setUrlTopic('', ctrl.params.topic));\n            return;\n          }\n          if (this.state.topic != ctrl.topic) {\n            this.setState({topic: ctrl.topic});\n          }\n          this.props.onNewTopicCreated(this.props.topic, ctrl.topic);\n          // If there are unsent messages, try sending them now.\n          topic.queuedMessages((pub) => {\n            if (!pub._sending && topic.isSubscribed()) {\n              topic.publishMessage(pub);\n            }\n          });\n        })\n        .catch((err) => {\n          console.log(\"Failed subscription to\", this.state.topic);\n          this.props.onError(err.message, 'err');\n          const blankState = MessagesView.getDerivedStateFromProps({}, {});\n          blankState.title = this.props.intl.formatMessage(messages.not_found);\n          this.setState(blankState);\n        });\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let nextState = {};\n    if (!nextProps.topic) {\n      // Default state: no topic.\n      nextState = {\n        messages: [],\n        onlineSubs: [],\n        topic: null,\n        title: '',\n        avatar: null,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false,\n        peerMessagingDisabled: false,\n        channel: false\n      };\n    } else if (nextProps.topic != prevState.topic) {\n      const topic = nextProps.tinode.getTopic(nextProps.topic);\n      nextState = {\n        topic: nextProps.topic,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false\n      };\n\n      if (topic) {\n        // Topic exists.\n        const msgs = [];\n        const subs = [];\n\n        if (nextProps.connected) {\n          topic.subscribers((sub) => {\n            if (sub.online && sub.user != nextProps.myUserId) {\n              subs.push(sub);\n            }\n          });\n        }\n\n        topic.messages(function(msg) {\n          if (!msg.deleted) {\n            msgs.push(msg);\n          }\n        });\n\n        Object.assign(nextState, {\n          messages: msgs,\n          onlineSubs: subs\n        });\n\n        if (topic.public) {\n          Object.assign(nextState, {\n            title: topic.public.fn,\n            avatar: makeImageDataUrl(topic.public.photo)\n          });\n        } else {\n          Object.assign(nextState, {\n            title: '',\n            avatar: null\n          });\n        }\n\n        const peer = topic.p2pPeerDesc();\n        if (peer) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: isPeerRestricted(peer.acs)\n          });\n        } else if (prevState.peerMessagingDisabled) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: false\n          });\n        }\n        Object.assign(nextState, {\n          channel: topic.isChannelType()\n        });\n      } else {\n        // Invalid topic.\n        Object.assign(nextState, {\n          messages: [],\n          onlineSubs: [],\n          title: '',\n          avatar: null,\n          peerMessagingDisabled: false,\n          channel: false\n        });\n      }\n    }\n\n    if (nextProps.acs) {\n      if (nextProps.acs.isWriter() != prevState.isWriter) {\n        nextState.isWriter = !prevState.isWriter;\n      }\n      if (nextProps.acs.isReader() != prevState.isReader) {\n        nextState.isReader = !prevState.isReader;\n      }\n      if (!nextProps.acs.isReader('given') != prevState.readingBlocked) {\n        nextState.readingBlocked = !prevState.readingBlocked;\n      }\n      if (nextProps.acs.isSharer() != prevState.isSharer) {\n        nextState.isSharer = !prevState.isSharer;\n      }\n    } else {\n      if (prevState.isWriter) {\n        nextState.isWriter = false;\n      }\n      if (prevState.isReader) {\n        nextState.isReader = false;\n      }\n      if (!prevState.readingBlocked) {\n        prevState.readingBlocked = true;\n      }\n      if (prevState.isSharer) {\n        nextState.isSharer = false;\n      }\n    }\n\n    if (isUnconfirmed(nextProps.acs) == !prevState.unconformed) {\n      nextState.unconfirmed = !prevState.unconformed;\n    }\n\n    // Clear subscribers online when there is no connection.\n    if (!nextProps.connected && prevState.onlineSubs && prevState.onlineSubs.length > 0) {\n      nextState.onlineSubs = [];\n    }\n\n    return nextState;\n  }\n\n  leave(oldTopicName) {\n    if (!oldTopicName || !this.props.tinode.isTopicCached(oldTopicName)) {\n      return;\n    }\n    const oldTopic = this.props.tinode.getTopic(oldTopicName);\n    if (oldTopic && oldTopic.isSubscribed()) {\n      oldTopic.leave(false)\n        .catch(() => { /* do nothing here */ })\n        .finally(() => {\n          // We don't care if the request succeeded or failed.\n          // The topic is dead regardless.\n          this.setState({fetchingMessages: false});\n          oldTopic.onData = undefined;\n          oldTopic.onAllMessagesReceived = undefined;\n          oldTopic.onInfo = undefined;\n          oldTopic.onMetaDesc = undefined;\n          oldTopic.onSubsUpdated = undefined;\n          oldTopic.onPres = undefined;\n        });\n    }\n  }\n\n  handleScrollReference(node) {\n    if (node) {\n      node.addEventListener('scroll', this.handleScrollEvent);\n      this.messagesScroller = node;\n      this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n    }\n  }\n\n  // Get older messages\n  handleScrollEvent(event) {\n    this.setState({scrollPosition: event.target.scrollHeight - event.target.scrollTop});\n    if (event.target.scrollTop <= 0) {\n      this.setState((prevState, props) => {\n        const newState = {};\n        if (!prevState.fetchingMessages) {\n          const topic = this.props.tinode.getTopic(this.state.topic);\n          if (topic && topic.isSubscribed() && topic.msgHasMoreMessages()) {\n            newState.fetchingMessages = true;\n            topic.getMessagesPage(MESSAGES_PAGE).catch((err) => {\n              this.setState({fetchingMessages: false});\n              this.props.onError(err.message, 'err');\n            });\n          }\n        }\n        return newState;\n      });\n    }\n  }\n\n  handleDescChange(desc) {\n    if (desc.public) {\n      this.setState({\n        title: desc.public.fn,\n        avatar: makeImageDataUrl(desc.public.photo)\n      });\n    } else {\n      this.setState({\n        title: '',\n        avatar: null\n      });\n    }\n\n    if (desc.acs) {\n      this.setState({\n        isWriter: desc.acs.isWriter(),\n        isReader: desc.acs.isReader(),\n        readingBlocked: !desc.acs.isReader('given'),\n        unconfirmed: isUnconfirmed(desc.acs),\n      });\n    }\n  }\n\n  postReadNotification(seq) {\n    // Ignore notifications if the app is invisible.\n    if (!this.props.applicationVisible) {\n      return;\n    }\n\n    // Set up the timer if it's not running already.\n    if (!this.readNotificationTimer) {\n      this.readNotificationTimer = setInterval(() => {\n        if (this.readNotificationQueue.length == 0) {\n          // Shut down the timer if the queue is empty.\n          clearInterval(this.readNotificationTimer);\n          this.readNotificationTimer = null;\n          return;\n        }\n\n        let seq = -1;\n        while (this.readNotificationQueue.length > 0) {\n          const n = this.readNotificationQueue[0];\n          if (n.topicName != this.state.topic) {\n            // Topic has changed. Drop the notification.\n            this.readNotificationQueue.shift();\n            continue;\n          }\n\n          const now = new Date();\n          if (n.sendAt <= now) {\n            // Remove expired notification from queue.\n            this.readNotificationQueue.shift();\n            seq = Math.max(seq, n.seq);\n          } else {\n            break;\n          }\n        }\n\n        // Send only one notification for the whole batch of messages.\n        if (seq >= 0) {\n          const topic = this.props.tinode.getTopic(this.state.topic);\n          if (topic) {\n            topic.noteRead(seq);\n          }\n        }\n      }, NOTIFICATION_EXEC_INTERVAL);\n    }\n\n    const now = new Date();\n    this.readNotificationQueue.push({\n      topicName: this.state.topic,\n      seq: seq,\n      sendAt: now.setMilliseconds(now.getMilliseconds() + READ_DELAY)\n    });\n  }\n\n  // Clear notification queue and timer.\n  clearNotificationQueue() {\n    this.readNotificationQueue = [];\n    if (this.readNotificationTimer) {\n      clearInterval(this.readNotificationTimer);\n      this.readNotificationTimer = null;\n    }\n  }\n\n  handleSubsUpdated() {\n    if (this.state.topic) {\n      const subs = [];\n      const topic = this.props.tinode.getTopic(this.state.topic);\n      topic.subscribers((sub) => {\n        if (sub.online && sub.user != this.props.myUserId) {\n          subs.push(sub);\n        }\n      });\n      const newState = {onlineSubs: subs};\n      const peer = topic.p2pPeerDesc();\n      if (peer) {\n        Object.assign(newState, {\n          peerMessagingDisabled: isPeerRestricted(peer.acs)\n        });\n      } else if (this.state.peerMessagingDisabled) {\n        Object.assign(newState, {\n          peerMessagingDisabled: false\n        });\n      }\n      this.setState(newState);\n    }\n  }\n\n  handleNewMessage(msg) {\n    // Regenerate messages list\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    const newState = {messages: []};\n    topic.messages((m) => {\n      if (!m.deleted) {\n        newState.messages.push(m);\n      }\n    });\n\n    // msg could be null if one or more messages were deleted.\n    if (msg && !msg.deleted) {\n      // If the message is added to the end of the message list,\n      // scroll to the bottom.\n      if (topic.isNewMessage(msg.seq)) {\n        newState.scrollPosition = 0;\n      }\n\n      // Aknowledge messages except own messages. They are\n      // automatically assumed to be read and recived.\n      const status = topic.msgStatus(msg, true);\n      if (status >= Tinode.MESSAGE_STATUS_SENT && msg.from != this.props.myUserId) {\n        this.postReadNotification(msg.seq);\n      }\n      this.props.onData(msg);\n    }\n    this.setState(newState);\n  }\n\n  handleAllMessagesReceived(count) {\n    this.setState({fetchingMessages: false});\n    if (count > 0) {\n      // 0 means \"latest\".\n      this.postReadNotification(0);\n    }\n  }\n\n  handleInfoReceipt(info) {\n    switch (info.what) {\n      case 'kp': {\n        clearTimeout(this.keyPressTimer);\n        var instance = this;\n        this.keyPressTimer = setTimeout(function() {\n          instance.setState({typingIndicator: false});\n        }, KEYPRESS_DELAY + 1000);\n        if (!this.state.typingIndicator) {\n          this.setState({typingIndicator: true});\n        }\n        break;\n      }\n      case 'read':\n      case 'recv':\n        // Redraw due to changed recv/read status.\n        this.forceUpdate();\n        break;\n      default:\n        console.log(\"Other change in topic: \", info.what);\n    }\n  }\n\n  handleImagePostview(content) {\n    this.setState({ imagePostview: content });\n  }\n\n  handleClosePreview() {\n    if (this.state.imagePreview && this.state.imagePreview.url) {\n      URL.revokeObjectURL(this.state.imagePreview.url);\n    }\n    this.setState({ imagePostview: null, imagePreview: null, docPreview: null });\n  }\n\n  handleFormResponse(action, text, data) {\n    if (action == 'pub') {\n      this.props.sendMessage(Drafty.attachJSON(Drafty.parse(text), data));\n    } else if (action == 'url') {\n      const url = new URL(data.ref);\n      const params = url.searchParams;\n      for (let key in data.resp) {\n        if (data.resp.hasOwnProperty(key)) {\n          params.set(key, data.resp[key]);\n        }\n      }\n      ['name', 'seq'].map((key) => {\n        if (data[key]) {\n          params.set(key, data[key]);\n        }\n      });\n      params.set('uid', this.props.myUserId);\n      params.set('topic', this.state.topic);\n      url.search = params;\n      window.open(url, '_blank');\n    } else {\n      console.log(\"Unknown action in form\", action);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.state.topic, y: e.pageY, x: e.pageX });\n  }\n\n  handleShowContextMenuMessage(params, messageSpecificMenuItems) {\n    params.topicName = this.state.topic;\n    const menuItems = messageSpecificMenuItems || [];\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (topic) {\n      if (!topic.isChannelType()) {\n        menuItems.push('message_delete');\n      }\n      const acs = topic.getAccessMode();\n      if (acs && acs.isDeleter()) {\n        menuItems.push('message_delete_hard');\n      }\n    }\n    this.props.showContextMenu(params, menuItems);\n  }\n\n  handleNewChatAcceptance(action) {\n    this.props.onNewChat(this.state.topic, action);\n  }\n\n  handleEnablePeer(e) {\n    e.preventDefault();\n    this.props.onChangePermissions(this.state.topic, DEFAULT_P2P_ACCESS_MODE, this.state.topic);\n  }\n\n  sendKeyPress() {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (topic.isSubscribed()) {\n      topic.noteKeyPress();\n    }\n  }\n\n  // Send attachment as Drafty message:\n  // - if file is too large, upload it and send a s link.\n  // - if file is small enough, just send it in-band.\n  sendFileAttachment(file) {\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (file.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      if (!uploader) {\n        this.props.onError(this.props.intl.formatMessage(messages.cannot_initiate_upload));\n        return;\n      }\n      const uploadCompletionPromise = uploader.upload(file);\n      const msg = Drafty.attachFile(null, {\n        mime: file.type,\n        filename: file.name,\n        size: file.size,\n        urlPromise: uploadCompletionPromise\n      });\n      // Pass data and the uploader to the TinodeWeb.\n      this.props.sendMessage(msg, uploadCompletionPromise, uploader);\n    } else {\n      // Small enough to send inband.\n      fileToBase64(file,\n        (mime, bits, fname) => {\n          this.props.sendMessage(Drafty.attachFile(null, {mime: mime, data: bits, filename: fname}));\n        },\n        this.props.onError\n      );\n    }\n  }\n\n  // handleAttachFile method is called when [Attach file] button is clicked.\n  handleAttachFile(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    if (file.size > maxExternAttachmentSize) {\n      // Too large.\n      this.props.onError(this.props.intl.formatMessage(messages.file_attachment_too_large,\n        {size: bytesToHumanSize(file.size), limit: bytesToHumanSize(maxExternAttachmentSize)}), 'err');\n    } else {\n      this.setState({ docPreview: {\n        file: file,\n        filename: file.name,\n        size: file.size,\n        type: file.type\n      }});\n    }\n  }\n\n  // sendImageAttachment sends the image bits inband as Drafty message.\n  sendImageAttachment(caption, blob) {\n    const mime = this.state.imagePreview.type;\n    const width = this.state.imagePreview.width;\n    const height = this.state.imagePreview.height;\n    const fname = this.state.imagePreview.filename;\n\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (blob.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      if (!uploader) {\n        this.props.onError(this.props.intl.formatMessage(messages.cannot_initiate_upload));\n        return;\n      }\n      const uploadCompletionPromise = uploader.upload(blob);\n\n      // Make small preview to show while uploading.\n      imageScaled(blob, IMAGE_PREVIEW_DIM, IMAGE_PREVIEW_DIM, -1, false,\n        (tinyBlob) => {\n          // Convert tiny image into base64 for serialization and previewing.\n          blobToBase64(tinyBlob, (blobMime, tinyBits64) => {\n            let msg = Drafty.insertImage(null, 0, {\n              mime: mime,\n              _tempPreview: tinyBits64, // This preview will not be serialized.\n              width: width,\n              height: height,\n              filename: fname,\n              size: blob.size,\n              urlPromise: uploadCompletionPromise\n            });\n            if (caption) {\n              msg = Drafty.appendLineBreak(msg);\n              msg = Drafty.append(msg, Drafty.init(caption));\n            }\n            // Pass data and the uploader to the TinodeWeb.\n            this.props.sendMessage(msg, uploadCompletionPromise, uploader);\n          }\n        )},\n        // Failure\n        (err) => {\n          this.props.onError(err, 'err');\n        }\n      );\n      return;\n    }\n\n    // Upload the image if it's too big to be send inband.\n    blobToBase64(blob, (blobMime, bits64) => {\n      let msg = Drafty.insertImage(null, 0, {\n        mime: blobMime,\n        preview: bits64, // Serializable preview\n        width: width,\n        height: height,\n        filename: fname,\n        size: blob.size\n      });\n      if (caption) {\n        msg = Drafty.appendLineBreak(msg);\n        msg = Drafty.append(msg, Drafty.init(caption));\n      }\n      this.props.sendMessage(msg);\n    });\n  }\n\n  // handleAttachImage method is called when [Attach image] button is clicked.\n  handleAttachImage(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    // Get image dimensions and size, optionally scale it down.\n    imageScaled(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, maxExternAttachmentSize, false,\n      // Success\n      (blob, mime, width, height, fname) => {\n        this.setState({imagePreview: {\n          url: URL.createObjectURL(blob),\n          blob: blob,\n          filename: fname,\n          width: width,\n          height: height,\n          size: blob.size,\n          type: mime\n        }});\n      },\n      // Failure\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    );\n  }\n\n  handleCancelUpload(seq, uploader) {\n    const found = this.state.messages.find(msg => msg.seq == seq);\n    if (found) {\n      found._cancelled = true;\n    }\n    uploader.cancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n\n    let component;\n    if (this.props.hideSelf) {\n      component = null;\n    } else if (!this.state.topic) {\n      component = (\n        <LogoView\n          serverVersion={this.props.serverVersion}\n          serverAddress={this.props.serverAddress} />\n      );\n    } else {\n      let component2;\n      if (this.state.imagePreview) {\n        // Preview image before sending.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePreview}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendImageAttachment} />\n        );\n      } else if (this.state.imagePostview) {\n        // Expand received image.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePostview}\n            onClose={this.handleClosePreview} />\n        );\n      } else if (this.state.docPreview) {\n        // Preview attachment before sending.\n        component2 = (\n          <DocPreview\n            content={this.state.docPreview}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendFileAttachment} />\n        );\n      } else {\n        const topic = this.props.tinode.getTopic(this.state.topic);\n        const isChannel = topic.isChannelType();\n        const groupTopic = topic.isGroupType() && !isChannel;\n        let messageNodes = [];\n        let previousFrom = null;\n        let chatBoxClass = null;\n        for (let i=0; i<this.state.messages.length; i++) {\n          let msg = this.state.messages[i];\n          let nextFrom = null;\n\n          if (i + 1 < this.state.messages.length) {\n            nextFrom = this.state.messages[i+1].from || 'chan';\n          }\n\n          let sequence = 'single';\n          let thisFrom = msg.from || 'chan';\n          if (thisFrom == previousFrom) {\n            if (thisFrom == nextFrom) {\n              sequence = 'middle';\n            } else {\n              sequence = 'last';\n            }\n          } else if (thisFrom == nextFrom) {\n            sequence = 'first';\n          }\n          previousFrom = thisFrom;\n\n          const isReply = !(thisFrom == this.props.myUserId);\n          const deliveryStatus = topic.msgStatus(msg, true);\n\n          let userName, userAvatar, userFrom;\n          if (groupTopic) {\n            const user = topic.userDesc(thisFrom);\n            if (user && user.public) {\n              userName = user.public.fn;\n              userAvatar = makeImageDataUrl(user.public.photo);\n            }\n            userFrom = thisFrom;\n            chatBoxClass='chat-box group';\n          } else {\n            chatBoxClass='chat-box';\n          }\n\n          messageNodes.push(\n            <ChatMessage\n              tinode={this.props.tinode}\n              content={msg.content}\n              deleted={msg.hi}\n              mimeType={msg.head ? msg.head.mime : null}\n              timestamp={msg.ts}\n              response={isReply}\n              seq={msg.seq}\n              userFrom={userFrom}\n              userName={userName}\n              userAvatar={userAvatar}\n              sequence={sequence}\n              received={deliveryStatus}\n              uploader={msg._uploader}\n              viewportWidth={this.props.viewportWidth}\n              showContextMenu={this.state.channel? false : this.handleShowContextMenuMessage}\n              onImagePreview={this.handleImagePostview}\n              onFormResponse={this.handleFormResponse}\n              onError={this.props.onError}\n              onCancelUpload={this.handleCancelUpload}\n              key={msg.seq} />\n          );\n        }\n\n        let lastSeen = null;\n        if (isChannel) {\n          lastSeen = formatMessage(messages.channel);\n        } else {\n          const cont = this.props.tinode.getMeTopic().getContact(this.state.topic);\n          if (cont && Tinode.isP2PTopicName(cont.topic)) {\n            if (cont.online) {\n              lastSeen = formatMessage(messages.online_now);\n            } else if (cont.seen) {\n              lastSeen = formatMessage(messages.last_seen) + \": \" +\n                shortDateFormat(cont.seen.when, this.props.intl.locale);\n              // TODO: also handle user agent in c.seen.ua\n            }\n          }\n        }\n        const avatar = this.state.avatar || true;\n        const online = this.props.online ? 'online' + (this.state.typingIndicator ? ' typing' : '') : 'offline';\n\n        component2 = (\n          <>\n            <div id=\"topic-caption-panel\" className=\"caption-panel\">\n              {this.props.displayMobile ?\n                <a href=\"#\" id=\"hide-message-view\" onClick={(e) => {e.preventDefault(); this.props.onHideMessagesView();}}>\n                  <i className=\"material-icons\">arrow_back</i>\n                </a>\n                :\n                null}\n              <div className=\"avatar-box\">\n                <LetterTile\n                  avatar={avatar}\n                  topic={this.state.topic}\n                  title={this.state.title} />\n                {!isChannel ? <span className={online} /> : null}\n              </div>\n              <div id=\"topic-title-group\">\n                <div id=\"topic-title\" className=\"panel-title\">{\n                  this.state.title ||\n                  <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n                    description=\"Title shown when the topic has no name\" /></i>\n                }</div>\n                <div id=\"topic-last-seen\">{lastSeen}</div>\n              </div>\n              {groupTopic ?\n                <GroupSubs\n                  subscribers={this.state.onlineSubs} /> :\n                <div id=\"topic-users\" />\n              }\n              <div>\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">more_vert</i>\n                </a>\n              </div>\n            </div>\n            {this.props.displayMobile ?\n              <ErrorPanel\n                level={this.props.errorLevel}\n                text={this.props.errorText}\n                onClearError={this.props.onError} />\n              : null}\n            <LoadSpinner show={this.state.fetchingMessages} />\n            <div id=\"messages-container\">\n              <div id=\"messages-panel\" ref={this.handleScrollReference}>\n                <ul id=\"scroller\" className={chatBoxClass}>\n                  {messageNodes}\n                </ul>\n              </div>\n              {!this.state.isReader ?\n              <div id=\"write-only-background\">\n                {this.state.readingBlocked ?\n                <div id=\"write-only-note\">\n                  <FormattedMessage id=\"messages_not_readable\" defaultMessage=\"no access to messages\"\n                    description=\"Message shown in topic without the read access\" />\n                </div>\n                : null }\n              </div>\n              : null }\n            </div>\n            {this.state.peerMessagingDisabled && !this.state.unconfirmed ?\n              <div id=\"peer-messaging-disabled-note\">\n                <i className=\"material-icons secondary\">block</i> <FormattedMessage\n                  id=\"peers_messaging_disabled\" defaultMessage=\"Peer's messaging is disabled.\"\n                  description=\"Shown when the p2p peer's messaging is disabled\" /> <a href=\"#\"\n                    onClick={this.handleEnablePeer}><FormattedMessage id=\"enable_peers_messaging\"\n                    defaultMessage=\"Enable\" description=\"Call to action to enable peer's messaging\" /></a>.\n              </div> : null}\n            {this.state.unconfirmed ?\n              <Invitation onAction={this.handleNewChatAcceptance} />\n              :\n              <SendMessage\n                disabled={!this.state.isWriter}\n                onSendMessage={this.props.sendMessage}\n                onKeyPress={this.sendKeyPress}\n                onAttachFile={this.handleAttachFile}\n                onAttachImage={this.handleAttachImage}\n                onError={this.props.onError} />}\n          </>\n        );\n      }\n\n      component = <div id=\"topic-view\">{component2}</div>\n    }\n    return component;\n  }\n};\n\nexport default injectIntl(MessagesView);\n","// The <- button to be displayed in title bars.\nimport React from 'react';\n\nexport default class ButtonBack extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onBack();}}>\n        <i className=\"material-icons\">arrow_back</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class MenuContacts extends React.PureComponent {\n  render() {\n    return (\n      <div>\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onNewTopic();}}><i className=\"material-icons\">chat</i></a>\n        &nbsp;\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nexport default class MenuStart extends React.PureComponent {\n  render() {\n    return (\n        <div>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSignUp();}}><i className=\"material-icons\">person_add</i></a>\n          &nbsp;\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n        </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\nimport ButtonBack from './button-back.jsx';\nimport MenuContacts from './menu-contacts.jsx';\nimport MenuStart from './menu-start.jsx';\n\nexport default class SideNavbar extends React.PureComponent {\n  render() {\n    return (\n        <div id=\"side-caption-panel\" className=\"caption-panel\">\n          {this.props.onCancel ? <ButtonBack onBack={this.props.onCancel} /> : null}\n          {this.props.avatar ?\n            <div id=\"self-avatar\" className=\"avatar-box\">\n              <LetterTile\n                avatar={this.props.avatar}\n                topic={this.props.myUserId}\n                title={this.props.title} />\n            </div>\n            :\n            null}\n          <div id=\"sidepanel-title\" className=\"panel-title\">{this.props.title}</div>\n          {this.props.state === 'login' ?\n              <MenuStart onSignUp={this.props.onSignUp} onSettings={this.props.onSettings} /> :\n            this.props.state === 'contacts' ?\n              <MenuContacts onNewTopic={this.props.onNewTopic} onSettings={this.props.onSettings} /> :\n            null}\n        </div>\n    );\n  }\n};\n","/* ContactsView holds all contacts-related stuff */\nimport React from 'react';\nimport { FormattedMessage, defineMessages } from 'react-intl';\n\nimport ContactList from '../widgets/contact-list.jsx';\n\nimport { updateFavicon } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  archived_contacts_title: {\n    id: \"archived_contacts\",\n    defaultMessage: \"Archived contacts ({count})\",\n    description: \"Label for archived chats\"\n  }\n});\n\nexport default class ContactsView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAction = this.handleAction.bind(this);\n\n    this.state = ContactsView.deriveStateFromProps(props);\n  }\n\n  static deriveStateFromProps(props) {\n    const contacts = [];\n    let unreadThreads = 0;\n    let archivedCount = 0;\n    props.chatList.map((c) => {\n      const blocked = c.acs && !c.acs.isJoiner();\n      // Show only blocked contacts only when props.blocked == true.\n      if (blocked && props.blocked) {\n        contacts.push(c);\n      }\n      if (blocked || props.blocked) {\n        return;\n      }\n\n      if (c.private && c.private.arch) {\n        if (props.archive) {\n          contacts.push(c);\n        } else {\n          archivedCount ++;\n        }\n      } else if (!props.archive) {\n        contacts.push(c);\n        unreadThreads += c.unread > 0 ? 1 : 0;\n      }\n    });\n\n    contacts.sort((a, b) => {\n      return (b.touched || 0) - (a.touched || 0);\n    });\n\n    if (archivedCount > 0) {\n      contacts.push({\n        action: 'archive',\n        title: messages.archived_contacts_title,\n        values: {count: archivedCount}\n      });\n    }\n\n    return {\n      contactList: contacts,\n      unreadThreads: unreadThreads\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chatList != this.props.chatList ||\n        prevProps.archive != this.props.archive ||\n        prevProps.blocked != this.props.blocked) {\n      const newState = ContactsView.deriveStateFromProps(this.props);\n      this.setState(newState);\n      if (newState.unreadThreads != prevState.unreadThreads) {\n        updateFavicon(newState.unreadThreads);\n      }\n    }\n  }\n\n  handleAction(action_ignored) {\n    this.props.onShowArchive();\n  }\n\n  render() {\n    return (\n      <FormattedMessage id=\"contacts_not_found\"\n        defaultMessage=\"You have no chats<br />¯∖_(ツ)_/¯\"\n        description=\"HTML message shown in ContactList when no contacts are found\">{\n        (no_contacts) => <ContactList\n          connected={this.props.connected}\n          contacts={this.state.contactList}\n          emptyListMessage={no_contacts}\n          topicSelected={this.props.topicSelected}\n          myUserId={this.props.myUserId}\n          showOnline={true}\n          showUnread={true}\n          onTopicSelected={this.props.onTopicSelected}\n          showContextMenu={this.props.showContextMenu}\n          onAction={this.handleAction} />\n      }</FormattedMessage>\n    );\n  }\n};\n","// Helper functions for storing values in localStorage.\n// By default localStorage can store only strings, not objects or other types.\n\nexport default class LocalStorageUtil {\n  // Replace old object with the new one.\n  static setObject(key, value) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n\n  // Get stored object.\n  static getObject(key) {\n    const value = localStorage.getItem(key);\n    return value && JSON.parse(value);\n  }\n\n  // Partially or wholly update stored object.\n  static updateObject(key, value) {\n    const oldVal = this.getObject(key);\n    this.setObject(key, Object.assign(oldVal || {}, value));\n  }\n\n  // Just a wrapper.\n  static removeItem(key) {\n    localStorage.removeItem(key);\n  }\n}\n","// Account registration.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport { theCard } from '../lib/utils.js';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class CreateAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: '',\n      password: '',\n      email: '',\n      fn: '', // full/formatted name\n      imageDataUrl: null,\n      errorCleared: false,\n      saveToken: LocalStorageUtil.getObject('keep-logged-in')\n    };\n\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(password) {\n    this.setState({password: password});\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value})\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleToggleSaveToken() {\n    LocalStorageUtil.setObject('keep-logged-in', !this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({errorCleared: false});\n    this.props.onCreateAccount(\n      this.state.login.trim(),\n      this.state.password.trim(),\n      theCard(this.state.fn.trim().substring(0, MAX_TITLE_LENGTH), this.state.imageDataUrl),\n      {'meth': 'email', 'val': this.state.email});\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form className=\"panel-form-column\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n              description=\"Placeholer for username/login\">{\n              (login_prompt) => <input type=\"text\" placeholder={login_prompt} autoComplete=\"user-name\"\n                value={this.state.login} onChange={this.handleLoginChange} required autoFocus />\n            }</FormattedMessage>\n            <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n              description=\"Placeholder/prompt for entering password\">{\n              (password_prompt) => <VisiblePassword placeholder={password_prompt} autoComplete=\"new-password\"\n                value={this.state.password} onFinished={this.handlePasswordChange}\n                required={true} />\n            }</FormattedMessage>\n          </div>\n          <AvatarUpload\n            onImageChanged={this.handleImageChanged}\n            onError={this.props.onError} />\n        </div>\n        <div  className=\"panel-form-row\">\n          <FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n            description=\"Input placeholder for person's full name\">{\n            (full_name_prompt) => <input type=\"text\" placeholder={full_name_prompt} autoComplete=\"name\"\n              value={this.state.fn} onChange={this.handleFnChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <FormattedMessage id=\"email_prompt\" defaultMessage=\"Email, e.g. jdoe@example.com\"\n            description=\"Input placeholder for email entry\">{\n            (email_prompt) => <input type=\"email\" placeholder={email_prompt} autoComplete=\"email\"\n              value={this.state.email} onChange={this.handleEmailChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n            description=\"Label for a checkbox\">{\n            (stay_logged_in) => <label htmlFor=\"save-token\">&nbsp;{stay_logged_in}</label>\n          }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_up\" defaultMessage=\"Sign up\"\n              description=\"Create account button [Sign Up]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\n\nimport { makeImageDataUrl } from '../lib/blob-helpers.js';\n\nexport default class EditAccountView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    this.state = {\n      fullName: me.public ? me.public.fn : undefined,\n      avatar: makeImageDataUrl(me.public ? me.public.photo : null)\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n                description=\"Label for full name editing\" />\n            </label>\n            <div className=\"large\">{this.state.fullName}</div>\n            <div>\n              <label className=\"small\"><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n                description=\"Label for user address (ID)\" /></label>&nbsp;\n              <tt>{this.props.myUserId}</tt>\n            </div>\n          </div>\n          <AvatarUpload\n            avatar={this.state.avatar}\n            readOnly={!this.state.owner}\n            uid={this.props.myUserId}\n            title={this.state.fullName} />\n        </div>\n        <div className=\"panel-form-row\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('general');}}>\n            <i className=\"material-icons\">edit</i>&nbsp;\n            <FormattedMessage id=\"button_edit\" defaultMessage=\"Edit\" description=\"Call to action [Edit]\" />\n          </a>\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('notif');}}>\n            <i className=\"material-icons\">notifications</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_notifications\"\n              defaultMessage=\"Notifications\" description=\"Sidepanel title for AccNotificationsView.\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('security');}}>\n            <i className=\"material-icons\">security</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_security\"\n              defaultMessage=\"Security\" description=\"Sidepanel title for AccSecurityView.\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('support');}}>\n            <i className=\"material-icons\">contact_support</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_support\"\n              defaultMessage=\"Support\" description=\"Sidepanel title for AccSupportView.\" />\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport TagManager from '../widgets/tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\nimport { makeImageDataUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, asEmail, asPhone, theCard } from '../lib/utils.js';\n\nexport default class AccGeneralView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    this.state = {\n      fullName: me.public ? me.public.fn : undefined,\n      avatar: makeImageDataUrl(me.public ? me.public.photo : null),\n      tags: me.tags(),\n      credentials: me.getCredentials() || [],\n      addCredActive: false,\n      addCredInvalid: false,\n      newCred: '',\n      previousOnTags: me.onTagsUpdated\n    };\n\n    this.tnNewTags = this.tnNewTags.bind(this);\n    this.tnCredsUpdated = this.tnCredsUpdated.bind(this);\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleCredChange = this.handleCredChange.bind(this);\n    this.handleCredKeyDown = this.handleCredKeyDown.bind(this);\n    this.handleCredEntered = this.handleCredEntered.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n  }\n\n  componentDidMount() {\n    const me = this.props.tinode.getMeTopic();\n    me.onCredsUpdated = this.tnCredsUpdated;\n    me.onTagsUpdated = this.tnNewTags;\n  }\n\n  componentWillUnmount() {\n    const me = this.props.tinode.getMeTopic();\n    me.onTagsUpdated = this.state.previousOnTags;\n    me.onCredsUpdated = undefined;\n  }\n\n  tnNewTags(tags) {\n    this.setState({tags: tags});\n  }\n\n  tnCredsUpdated(creds) {\n    this.setState({credentials: creds || []});\n  }\n\n  handleFullNameUpdate(fn) {\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\n    if (fn) {\n      this.setState({fullName: fn});\n      this.props.onUpdateAccount(undefined, theCard(fn, null));\n    }\n  }\n\n  handleImageChanged(img) {\n    this.setState({avatar: img});\n    this.props.onUpdateAccount(undefined, theCard(null, img || Tinode.DEL_CHAR));\n  }\n\n  handleCredChange(e) {\n    this.setState({newCred: e.target.value, addCredInvalid: false});\n  }\n\n  handleCredKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({newCred: '', addCredActive: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleCredEntered(e);\n    }\n  }\n\n  handleCredEntered(e) {\n    let value = this.state.newCred.trim();\n    if (!value) {\n      this.setState({addCredActive: false, addCredInvalid: false});\n      return;\n    }\n\n    let val = asPhone(value);\n    let method;\n    if (val) {\n      method = 'tel';\n    } else {\n      val = asEmail(value);\n      if (val) {\n        method = 'email';\n      }\n    }\n    if (method) {\n      this.props.onCredAdd(method, val);\n      this.setState({addCredActive: false, newCred: ''});\n    } else {\n      this.setState({addCredInvalid: true});\n    }\n  }\n\n  handleTagsUpdated(tags) {\n    // Check if tags have actually changed.\n    if (arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      return;\n    }\n    this.props.onUpdateTags(tags);\n  }\n\n  render() {\n    const credentials = [];\n    this.state.credentials.map((cred) => {\n      credentials.push(<div key={cred.meth + \":\" + cred.val + \":\" + cred.done}>{cred.meth}: <tt>{cred.val}</tt>\n        <span > {!cred.done ?\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredConfirm(cred.meth, cred.val);}}>\n              <FormattedMessage id=\"validate_credential_action\" defaultMessage=\"confirm\"\n                description=\"Validate credentail call to action\" />\n            </a>\n          : null} <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredDelete(cred.meth, cred.val);}}><i\n            className=\"material-icons gray\">delete_outline</i></a></span></div>);\n    });\n\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\"><FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n              description=\"Label for full name editing\" /></label>\n            <div><FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n              description=\"Input placeholder for person's full name\">{\n              (full_name_placeholder) => <InPlaceEdit\n                placeholder={full_name_placeholder}\n                value={this.state.fullName}\n                onFinished={this.handleFullNameUpdate} />\n            }</FormattedMessage></div>\n          </div>\n          <AvatarUpload\n            avatar={this.state.avatar}\n            uid={this.props.myUserId}\n            title={this.state.fullName}\n            onImageChanged={this.handleImageChanged}\n            onError={this.props.onError} />\n        </div>\n        <div className=\"hr\" />\n        <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (user discovery)\"\n          description=\"Section title for TagManager\">{\n          (title_tag_manager) => <TagManager\n            title={title_tag_manager}\n            activated={false}\n            tags={this.state.tags}\n            tinode={this.props.tinode}\n            onSubmit={this.handleTagsUpdated} />\n        }</FormattedMessage>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_user_contacts\" defaultMessage=\"Contacts:\"\n            description=\"Label for user contacts\" />\n          </label>\n          <div className=\"quoted\">\n            {credentials}\n            {this.state.addCredActive ?\n              <input type=\"text\" value={this.state.value}\n                className={this.state.addCredInvalid ? 'invalid' : null}\n                placeholder=\"Phone number or email\" required=\"required\" autoFocus\n                onChange={this.handleCredChange} onKeyDown={this.handleCredKeyDown} onBlur={this.handleCredEntered} />\n              : null}\n            <div>\n              <a href=\"#\" onClick={(e) => {e.preventDefault(); this.setState({addCredActive: true});}}>\n                <i className=\"material-icons\">add</i>\n                <FormattedMessage id=\"button_add_another\" defaultMessage=\"Add another\" description=\"Call to action [+ add another]\" />\n              </a></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\n\nexport default class EditAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckboxClick = this.handleCheckboxClick.bind(this);\n  }\n\n  handleCheckboxClick(what, checked) {\n    if (what == 'sound') {\n      this.props.onToggleMessageSounds(checked);\n    } else if (what == 'alert') {\n      this.props.onTogglePushNotifications(checked);\n    } else if (what == 'incognito') {\n      this.props.onToggleIncognitoMode(checked);\n    }\n  }\n\n  render() {\n    return (\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"message-sound\">\n              <FormattedMessage id=\"label_message_sound\" defaultMessage=\"Message sound:\"\n                description=\"Label for message sounds toggle\" />\n            </label>\n            <CheckBox name=\"sound\" id=\"message-sound\"\n              checked={this.props.messageSounds} onChange={this.handleCheckboxClick} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"desktop-alerts\">\n            {this.props.desktopAlertsEnabled ?\n              <FormattedMessage id=\"label_push_notifications\" defaultMessage=\"Notification alerts:\"\n                description=\"Label for push notifications switch\" />\n              :\n              <FormattedMessage id=\"label_push_notifications_disabled\"\n                defaultMessage=\"Notification alerts (requires HTTPS):\"\n                description=\"Label for push notifications switch\" />\n            }\n            </label>\n            <CheckBox name=\"alert\" id=\"desktop-alerts\"\n              checked={this.props.desktopAlerts}\n              onChange={this.props.desktopAlertsEnabled ? this.handleCheckboxClick : null} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"incognito-mode\">\n              <FormattedMessage id=\"label_incognito_mode\" defaultMessage=\"Incognito mode:\"\n                description=\"Label for incognito mode toggle\" />\n            </label>\n            <CheckBox name=\"incognito\" id=\"incognito-mode\"\n              checked={this.props.incognitoMode} onChange={this.handleCheckboxClick} />\n          </div>\n        </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\n\nconst messages = defineMessages({\n  delete_account: {\n    id: 'delete_account',\n    defaultMessage: 'Delete account',\n    description: 'Title for delete account warning'\n  },\n  delete_account_warning: {\n    id: 'delete_account_arning',\n    defaultMessage: 'Are you sure you want to delete your account? It cannot be undone.',\n    description: 'Warning message when deleting an account'\n  }\n});\n\nclass AccSecurityView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    let blockedCount = 0;\n    me.contacts((c) => {\n      if (c.acs && !c.acs.isJoiner()) {\n        blockedCount ++;\n      }\n    });\n    const defacs = me.getDefaultAccess();\n    this.state = {\n      auth: defacs ? defacs.auth : null,\n      anon: defacs ? defacs.anon : null,\n      showPermissionEditorFor: undefined,\n      blockedCount: blockedCount,\n    };\n\n    this.handlePasswordUpdate = this.handlePasswordUpdate.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n  }\n\n  handlePasswordUpdate(pwd) {\n    this.setState({password: pwd});\n    this.props.onUpdateAccount(pwd);\n  }\n\n  handleLaunchPermissionsEditor(which) {\n    this.setState({\n      showPermissionEditorFor: which,\n      editedPermissions: this.state[which]\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handlePermissionsChanged(perm) {\n    let defacs = {};\n    defacs[this.state.showPermissionEditorFor] = perm;\n    this.props.onUpdateAccount(undefined, undefined, defacs);\n\n    let newState = {showPermissionEditorFor: undefined};\n    newState[this.state.showPermissionEditorFor] = perm;\n    this.setState(newState);\n  }\n\n  handleDeleteAccount(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.delete_account), // title\n      formatMessage(messages.delete_account_warning), // content\n      (() => { this.props.onDeleteAccount(); }), // onConfirm\n      null, // use default text \"OK\"\n      true, // Show Reject button\n      null  // use default text \"Cancel\"\n    );\n  }\n\n  render() {\n    return (\n      <React.Fragment>{this.state.showPermissionEditorFor ?\n        <PermissionsEditor\n          mode={this.state.editedPermissions}\n          skip=\"O\"\n          onSubmit={this.handlePermissionsChanged}\n          onCancel={this.handleHidePermissionsEditor} />\n        :\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_password\" defaultMessage=\"Password\"\n                  description=\"Label for password editing\" />\n            </label>\n            <div>\n              <FormattedMessage id=\"password_unchanged_prompt\" defaultMessage=\"Unchanged\"\n                description=\"Message in editor while password is unchanged\">{\n                (password_unchanged) => <InPlaceEdit\n                  placeholder={password_unchanged}\n                  type=\"password\"\n                  onFinished={this.handlePasswordUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <a href=\"#\" className=\"danger flat-button\" onClick={(e) => {e.preventDefault(); this.props.onLogout();}}>\n              <i className=\"material-icons\">exit_to_app</i> &nbsp;<FormattedMessage id=\"button_logout\"\n                defaultMessage=\"Logout\" description=\"Button [Logout]\" />\n            </a>\n            <a href=\"#\" className=\"danger flat-button\" onClick={(e) => {this.handleDeleteAccount(e);}}>\n              <i className=\"material-icons\">delete</i> &nbsp;<FormattedMessage id=\"button_delete_account\"\n                defaultMessage=\"Delete account\" description=\"Button [Delete account]\" />\n            </a>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <div>\n              <label className=\"small\">\n                <FormattedMessage id=\"label_default_access_mode\" defaultMessage=\"Default access mode:\"\n                description=\"Label for default access mode\" />\n              </label>\n            </div>\n            <div className=\"quoted\">\n              <div>Auth: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>{this.state.auth}</tt></div>\n              <div>Anon: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>{this.state.anon}</tt></div>\n            </div>\n          </div>\n          {this.state.blockedCount > 0 ?\n            <>\n              <div className=\"hr\" />\n              <div className=\"panel-form-row\">\n                <i className=\"material-icons\">block</i>&nbsp;\n                <a href=\"#\" className=\"gray\" onClick={(e) => {e.preventDefault(); this.props.onShowBlocked();}}>\n                  <FormattedMessage id=\"blocked_contacts_link\" defaultMessage=\"Blocked contacts ({count})\"\n                    values={{ count: this.state.blockedCount }} description=\"Blocked contacts link\" />\n                </a>\n              </div>\n            </>\n            : null }\n        </div>\n      }</React.Fragment>\n    );\n  }\n};\n\nexport default injectIntl(AccSecurityView);\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME, LINK_CONTACT_US, LINK_PRIVACY_POLICY, LINK_TERMS_OF_SERVICE } from '../config.js';\n\nexport default class AccSupportView extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          <a href={LINK_CONTACT_US} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">email</i> &nbsp;<FormattedMessage id=\"link_contact_us\"\n              defaultMessage=\"Contact Us\" description=\"Ancor text for contacting us by email\" />\n          </a>\n          <a href={LINK_TERMS_OF_SERVICE} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">description</i> &nbsp;<FormattedMessage id=\"link_terms_of_service\"\n              defaultMessage=\"Terms of Service\" description=\"Ancor text for terms of service link\" />\n          </a>\n          <a href={LINK_PRIVACY_POLICY} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">policy</i> &nbsp;<FormattedMessage id=\"link_privacy_policy\"\n              defaultMessage=\"Privacy Policy\" description=\"Ancor text for privacy policy link\" />\n          </a>\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\"\n              description=\"Label for a client version\" /></label>\n            {APP_NAME}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_sdk\" defaultMessage=\"SDK:\" /></label>\n            {Tinode.getLibrary()}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\"\n              description=\"Label for a server version\" /></label>\n            {this.props.serverVersion}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server_address\" defaultMessage=\"Server address:\" /></label>\n            {this.props.serverAddress}\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","// Login form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\n\nexport default class LoginView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: props.login,\n      password: '',\n      hostName: props.serverAddress,\n      saveToken: props.persist\n    };\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  handleToggleSaveToken() {\n    this.props.onPersistenceChange(!this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onLogin(this.state.login.trim(), this.state.password.trim());\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form id=\"login-form\" onSubmit={this.handleSubmit}>\n        <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n          description=\"Placeholer for username/login\">\n        {\n          (login_prompt) => <input type=\"text\" id=\"inputLogin\"\n            placeholder={login_prompt}\n            autoComplete=\"username\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"none\"\n            value={this.state.login}\n            onChange={this.handleLoginChange}\n            required autoFocus />\n        }\n        </FormattedMessage>\n        <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n          description=\"Placeholder/prompt for entering password\">\n        {\n          (password_prompt) => <VisiblePassword type=\"password\" id=\"inputPassword\"\n            placeholder={password_prompt}\n            autoComplete=\"current-password\"\n            value={this.state.password}\n            onChange={this.handlePasswordChange}\n            required={true} />\n        }\n        </FormattedMessage>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <label htmlFor=\"save-token\">&nbsp;\n            <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n              description=\"Label for a checkbox\" />\n          </label>\n          <a href=\"#reset\">\n            <FormattedMessage id=\"forgot_password_link\" defaultMessage=\"Forgot password?\"\n              description=\"Link to Reset password form\" />\n          </a>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_in\" defaultMessage=\"Sign in\"\n              description=\"Button [Sign In]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n/* END Login */\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  invalid_id: {\n    id: 'error_invalid_id',\n    defaultMessage: 'Invalid ID',\n    description: 'Error message'\n  }\n});\n\nclass NewTopicById extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      groupId: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({groupId: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.groupId) {\n      const name = this.state.groupId.trim();\n      const prefix = name.substr(0, 3);\n      if (name.length > 3 && ['usr', 'grp', 'chn'].includes(prefix)) {\n        this.props.onSubmit(name);\n      } else {\n        this.props.onError(this.props.intl.formatMessage(messages.invalid_id), 'err');\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"group_user_id_prompt\" defaultMessage=\"Group or User ID\"\n          description=\"Prompt for entering user or group ID\">{\n          (prompt) => <input type=\"text\" placeholder={prompt}\n            value={this.state.groupId} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required autoFocus />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_subscribe\" defaultMessage=\"Subscribe\"\n              description=\"Button [Subscribe]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicById);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from './avatar-upload.jsx';\nimport CheckBox from './checkbox.jsx';\nimport TagManager from './tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class NewTopicGroup extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      fn: '', // full/formatted name\n      private: '',\n      imageDataUrl: null,\n      tags: [],\n      isChannel: false\n    };\n\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handlePrivateChange = this.handlePrivateChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleTagsChanged = this.handleTagsChanged.bind(this);\n    this.handleChannelToggle = this.handleChannelToggle.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handlePrivateChange(e) {\n    this.setState({private: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleTagsChanged(tags) {\n    this.setState({tags: tags});\n  }\n\n  handleChannelToggle() {\n    this.setState({isChannel: !this.state.isChannel});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const fn = this.state.fn.trim().substring(0, MAX_TITLE_LENGTH);\n    const comment = this.state.private.trim().substring(0, MAX_TITLE_LENGTH);\n    if (fn) {\n      this.props.onSubmit(fn, this.state.imageDataUrl, comment, this.state.tags, this.state.isChannel);\n    }\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n    return (\n      <form className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\" htmlFor=\"new-topic-fn\">\n              <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                description=\"Label for editing topic name\" />\n            </label>\n            <FormattedMessage id=\"topic_name_editing_placeholder\" defaultMessage=\"Freeform name of the group\"\n              description=\"Prompt for entering topic name\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-fn\" placeholder={placeholder}\n                value={this.state.fn} onChange={this.handleFnChange} autoFocus required />\n            }</FormattedMessage>\n            <br />\n            <label className=\"small\" htmlFor=\"new-topic-priv\">\n              <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                description=\"Label for editing 'private'\" />\n            </label>\n            <FormattedMessage id=\"private_editing_placeholder\" defaultMessage=\"Visible to you only\"\n              description=\"Placeholder for editing 'private'\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-priv\" placeholder={placeholder}\n                value={this.state.private} onChange={this.handlePrivateChange} />\n            }</FormattedMessage>\n          </div>\n          <AvatarUpload\n            onError={this.props.onError}\n            onImageChanged={this.handleImageChanged} />\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox checked={this.state.isChannel} onChange={this.handleChannelToggle}/>&nbsp;\n          <label onClick={this.handleChannelToggle}><FormattedMessage id=\"channel_prompt\"\n            defaultMessage=\"This is a channel\"\n            description=\"Checkbox label when creating a channel\" /></label>\n        </div>\n        <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (user discovery)\"\n          description=\"Section title for TagManager\">{\n          (title) => <TagManager\n            tags={this.state.tags}\n            activated={true}\n            onTagsChanged={this.handleTagsChanged}\n            tinode={this.props.tinode}\n            title={title} />\n        }</FormattedMessage>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses}>\n            <FormattedMessage id=\"button_create\" defaultMessage=\"Create\"\n              description=\"Button [Create]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nexport default class SearchContacts extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      edited: false,\n      search: ''\n    };\n\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  componentWillUnmount() {\n    if (this.state.edited) {\n      this.setState({search: '', edited: false});\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n  }\n\n  handleSearchChange(e) {\n    this.setState({search: e.target.value});\n  }\n\n  handleSearch(e) {\n    e.preventDefault();\n    var query = this.state.search.trim();\n    this.setState({edited: (query.length > 0)});\n    this.props.onSearchContacts(query.length > 0 ? query : Tinode.DEL_CHAR);\n  }\n\n  handleClear(e) {\n    e.preventDefault();\n    if (this.state.edited) {\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n    this.setState({search: '', edited: false});\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Enter') {\n      this.handleSearch(e);\n    } else if (e.key === 'Escape') {\n      this.handleClear();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <i className=\"material-icons search\">search</i>\n          <FormattedMessage id=\"search_placeholder\" defaultMessage=\"List like email:alice@example.com, tel:17025550003...\"\n            description=\"Placeholder in contacts search field\">{\n            (search_placeholder) => <input className=\"search\" type=\"text\"\n              placeholder={search_placeholder}\n              value={this.state.search} onChange={this.handleSearchChange}\n              onKeyDown={this.handleKeyDown} required autoFocus />\n          }</FormattedMessage>\n          <a href=\"#\" onClick={this.handleClear}>\n            <i className=\"material-icons\">close</i>\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","// Create new topic and invite users or send an invite.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport ContactList from '../widgets/contact-list.jsx';\nimport NewTopicById from '../widgets/new-topic-by-id.jsx';\nimport NewTopicGroup from '../widgets/new-topic-group.jsx';\nimport SearchContacts from '../widgets/search-contacts.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\nimport { theCard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  search_for_contacts: {\n    id: \"search_for_contacts\",\n    defaultMessage: \"Use search to find contacts\",\n    description: \"Text shown in contacts view when user entered no search query.\"\n  },\n  search_no_results: {\n    id: \"search_no_results\",\n    defaultMessage: \"Search returned no results\",\n    description: \"Text shown in contacts view when query returned no results.\"\n  }\n});\n\nclass NewTopicView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tabSelected: 'p2p',\n      searchQuery: null\n    };\n\n    this.handleTabClick = this.handleTabClick.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleNewGroupSubmit = this.handleNewGroupSubmit.bind(this);\n    this.handleGroupByID = this.handleGroupByID.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.onInitFind();\n  }\n\n  handleTabClick(e) {\n    e.preventDefault();\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'tab', e.currentTarget.dataset.id));\n    this.setState({tabSelected: e.currentTarget.dataset.id});\n  }\n\n  handleSearchContacts(query) {\n    this.props.onSearchContacts(query);\n    this.setState({searchQuery: Tinode.isNullValue(query) ? null : query});\n  }\n\n  handleContactSelected(sel) {\n    if (this.state.tabSelected === 'p2p') {\n      HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n      this.props.onCreateTopic(sel);\n    }\n  }\n\n  handleNewGroupSubmit(name, dataUrl, priv, tags, isChannel) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(undefined, theCard(name, dataUrl), priv, tags, isChannel);\n  }\n\n  handleGroupByID(topicName) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(topicName);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const no_contacts_placeholder = formatMessage(this.state.searchQuery ?\n      messages.search_no_results : messages.search_for_contacts);\n    return (\n      <div className=\"flex-column\">\n        <ul className=\"tabbar\">\n          <li className={this.state.tabSelected === \"p2p\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"p2p\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_find_user\" defaultMessage=\"find\"\n                description=\"Tab title Find\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"grp\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"grp\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_new_group\" defaultMessage=\"new group\"\n                description=\"Tab title New Group\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"byid\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"byid\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_group_by_id\" defaultMessage=\"by id\"\n                description=\"Tab title Find topic by ID\" />\n            </a>\n          </li>\n        </ul>\n        {this.state.tabSelected === 'grp' ?\n          <NewTopicGroup\n            tinode={this.props.tinode}\n            onSubmit={this.handleNewGroupSubmit} /> :\n          this.state.tabSelected === 'byid' ?\n            <NewTopicById\n              onSubmit={this.handleGroupByID}\n              onError={this.props.onError} /> :\n            <div className=\"flex-column\">\n              <SearchContacts\n                type=\"p2p\"\n                onSearchContacts={this.handleSearchContacts} />\n              <ContactList\n                contacts={this.props.searchResults}\n                myUserId={this.props.myUserId}\n                emptyListMessage={no_contacts_placeholder}\n                showOnline={false}\n                showUnread={false}\n                showContextMenu={false}\n                onTopicSelected={this.handleContactSelected} />\n            </div>}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicView);\n","// A password reset form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\n\nexport default class PasswordResetView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n  }\n\n  componentDidMount() {\n    let parsed = HashNavigation.parseUrlHash(window.location.hash);\n    this.setState({token: parsed.params.token, scheme: parsed.params.scheme});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.token) {\n      this.props.onReset(this.state.scheme, this.state.password.trim(), this.state.token);\n    } else {\n      this.props.onRequest('email', this.state.email.trim());\n    }\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  render() {\n    let reset = (this.state.token && this.state.scheme);\n    return (\n      <form id=\"password-reset-form\" onSubmit={this.handleSubmit}>\n        {reset ?\n          <FormattedMessage id=\"new_password_placeholder\" defaultMessage=\"Enter new password\"\n            description=\"Placeholder for entering new password\">{\n            (placeholder) => <VisiblePassword\n              placeholder={placeholder}\n              autoComplete=\"new-password\"\n              value={this.state.password}\n              required={true} autoFocus={true}\n              onChange={this.handlePasswordChange} />\n          }</FormattedMessage>\n          :\n          <>\n            <label htmlFor=\"inputEmail\">\n              <FormattedMessage id=\"label_reset_password\"\n                defaultMessage=\"Send a password reset email:\"\n                description=\"Label for password reset field\" />\n            </label>\n            <FormattedMessage id=\"credential_email_prompt\" defaultMessage=\"Your registration email\"\n              description=\"Placeholder for entering email\">{\n              (placeholder) => <input type=\"email\" id=\"inputEmail\"\n                placeholder={placeholder}\n                autoComplete=\"email\"\n                value={this.state.email}\n                onChange={this.handleEmailChange}\n                required autoFocus />\n            }</FormattedMessage>\n          </>\n        }\n        <div className=\"dialog-buttons\">\n          <button className=\"primary\" type=\"submit\">{reset ?\n            <FormattedMessage id=\"button_reset\" defaultMessage=\"Reset\" description=\"Button [Reset]\" /> :\n            <FormattedMessage id=\"button_send_request\" defaultMessage=\"Send request\"\n              description=\"Button [Send request]\" />\n          }</button>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react';\n\nimport { KNOWN_HOSTS } from '../config.js';\n\n/* Combobox for selecting host name */\n\nexport default class HostSelector extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hostName: props.serverAddress,\n      changed: false\n    };\n\n    this.handleHostNameChange = this.handleHostNameChange.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handleHostNameChange(e) {\n    this.setState({hostName: e.target.value, changed: true});\n  }\n\n  handleEditingFinished() {\n    if (this.state.changed) {\n      this.setState({changed: false});\n      this.props.onServerAddressChange(this.state.hostName.trim());\n    }\n  }\n\n  render() {\n    var hostOptions = [];\n    for (let key in KNOWN_HOSTS) {\n      let item = KNOWN_HOSTS[key];\n      hostOptions.push(\n        <option key={item} value={item} />\n      );\n    }\n    return (\n      <div className=\"panel-form-row\">\n        <input type=\"search\" id=\"host-name\" placeholder={this.props.hostName} list=\"known-hosts\"\n          className=\"quoted\" value={this.state.hostName} onChange={this.handleHostNameChange}\n          onBlur={this.handleEditingFinished} required />\n        <datalist id=\"known-hosts\">\n          {hostOptions}\n        </datalist>\n      </div>\n    );\n  }\n}\n","// Tinode config panel.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport HostSelector from '../widgets/host-selector.jsx';\n\nexport default class SettingsView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transport: props.transport || 'def',\n      serverAddress: props.serverAddress,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleTransportSelected = this.handleTransportSelected.bind(this);\n    this.handleServerAddressChange = this.handleServerAddressChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onUpdate({\n      transport: this.state.transport,\n      serverAddress: this.state.serverAddress\n    });\n  }\n\n  handleTransportSelected(e) {\n    this.setState({transport: e.currentTarget.value});\n  }\n\n  handleServerAddressChange(name) {\n    this.setState({serverAddress: name});\n  }\n\n  render() {\n    const names = {def: \"default\", ws: \"websocket\", lp: \"long polling\"};\n    const transportOptions = [];\n    ['def', 'ws', 'lp'].map((item) => {\n      const id = 'transport-' + item;\n      const name = names[item];\n      transportOptions.push(\n        <li key={item}>\n          <input type=\"radio\" id={id} name=\"transport-select\" value={item}\n            checked={this.state.transport === item}\n            onChange={this.handleTransportSelected} />\n          <label htmlFor={id}>{name}</label>\n        </li>\n      );\n    });\n\n    return (\n      <form id=\"settings-form\" className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_server_to_use\" defaultMessage=\"Server to use:\"\n              description=\"Label for server selector in SettingsView\" />\n          </label>\n        </div>\n        <HostSelector serverAddress={this.state.serverAddress}\n          onServerAddressChange={this.handleServerAddressChange} />\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_wire_transport\" defaultMessage=\"Wire transport:\"\n              description=\"Label for wire transport selection in SettingsView\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ul className=\"quoted\">\n            {transportOptions}\n          </ul>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button type=\"submit\" className=\"primary\">\n            <FormattedMessage id=\"button_update\" defaultMessage=\"Update\"\n              description=\"Button [Update]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// ValidationView: panel for confirming credentials, like email or phone.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  phone: {\n    id: 'phone_dative',\n    defaultMessage: 'phone',\n    description: \"Dative case of 'phone', i.e. 'phone' in 'by phone'\",\n  },\n  email: {\n    id: 'email_dative',\n    defaultMessage: 'email',\n    description: \"Dative case of 'email', i.e. 'email' in 'by email'\",\n  }\n});\n\nclass ValidationView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      code: props.credCode || ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({code: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    } else if (e.key == 'Escape') {\n      this.handleCancel(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.code && this.state.code.trim()) {\n      this.props.onSubmit(this.props.credMethod, this.state.code.trim());\n    }\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel();\n  }\n\n\n  render() {\n    const { formatMessage } = this.props.intl;\n    const methods = {'email': formatMessage(messages.email), 'tel': formatMessage(messages.phone)};\n    let method = methods[this.props.credMethod] || this.props.credMethod;\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\" htmlFor=\"enter-confirmation-code\">\n            <FormattedMessage id=\"enter_confirmation_code_prompt\"\n              defaultMessage=\"Enter confirmation code sent to you by {method}:\"\n              description=\"Request to enter confirmation code\"\n              values={{method: method}} />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"numeric_confirmation_code_prompt\"\n          defaultMessage=\"Numbers only\" description=\"Prompt for numeric conformation code\">{\n          (numbers_only) => <input type=\"text\" id=\"enter-confirmation-code\"\n            placeholder={numbers_only}\n            value={this.state.code} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_confirm\" defaultMessage=\"Confirm\" description=\"Button [Confirm]\" />\n          </button>\n          <button className=\"secondary\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ValidationView);\n","import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport SideNavbar from '../widgets/side-navbar.jsx';\n\nimport ContactsView from './contacts-view.jsx';\nimport CreateAccountView from './create-account-view.jsx';\nimport EditAccountView from './edit-account-view.jsx';\nimport AccGeneralView from './acc-general-view.jsx';\nimport AccNotificationsView from './acc-notifications-view.jsx';\nimport AccSecurityView from './acc-security-view.jsx';\nimport AccSupportView from './acc-support-view.jsx';\nimport LoginView from './login-view.jsx';\nimport NewTopicView from './new-topic-view.jsx';\nimport PasswordResetView from './password-reset-view.jsx';\nimport SettingsView from './settings-view.jsx';\nimport ValidationView from './validation-view.jsx';\n\n// Panel titles for translation.\nconst messages = defineMessages({\n  login: {\n    id: 'sidepanel_title_login',\n    description: 'Sidepanel title for LoginView.',\n    defaultMessage: 'Sign In'\n  },\n  register: {\n    id: 'sidepanel_title_register',\n    description: 'Sidepanel title for CreateAccountView.',\n    defaultMessage: 'Create Account'\n  },\n  settings: {\n    id: 'sidepanel_title_settings',\n    description: 'Sidepanel title for SettingsView.',\n    defaultMessage: 'Settings'\n  },\n  edit: {\n    id: 'sidepanel_title_account_settings',\n    description: 'Sidepanel title for EditAccountView.',\n    defaultMessage: 'Account Settings'\n  },\n  general: {\n    id: 'sidepanel_title_acc_general',\n    description: 'Sidepanel title for AccGeneralView.',\n    defaultMessage: 'General'\n  },\n  security: {\n    id: 'sidepanel_title_acc_security',\n    description: 'Sidepanel title for AccSecurityView.',\n    defaultMessage: 'Security'\n  },\n  notif: {\n    id: 'sidepanel_title_acc_notifications',\n    description: 'Sidepanel title for AccNotificationsView.',\n    defaultMessage: 'Notifications'\n  },\n  support: {\n    id: 'sidepanel_title_acc_support',\n    description: 'Sidepanel title for AccSupportView.',\n    defaultMessage: 'Support'\n  },\n  newtpk: {\n    id: 'sidepanel_title_newtpk',\n    description: 'Sidepanel title for NewTopicView.',\n    defaultMessage: 'Start New Chat'\n  },\n  cred: {\n    id: 'sidepanel_title_cred',\n    description: 'Sidepanel title for ValidationView.',\n    defaultMessage: 'Confirm Credentials'\n  },\n  reset: {\n    id: 'sidepanel_title_reset',\n    description: 'Sidepanel title for PasswordResetView.',\n    defaultMessage: 'Reset Password'\n  },\n  archive: {\n    id: 'sidepanel_title_archive',\n    description: 'Sidepanel title for ContactsView-Archive.',\n    defaultMessage: 'Archived Chats'\n  },\n  blocked: {\n    id: 'sidepanel_title_blocked',\n    description: 'Sidepanel title for ContactsView-Blocked.',\n    defaultMessage: 'Blocked Chats'\n  }\n});\n\nclass SidepanelView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNewTopic = this.handleNewTopic.bind(this);\n  }\n\n  handleNewTopic() {\n    this.props.onBasicNavigate('newtpk');\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const view = this.props.state || (this.props.myUserId ? 'contacts' : 'login');\n\n    let title, avatar;\n    if (view == 'contacts') {\n      title = this.props.title;\n      avatar = this.props.avatar ? this.props.avatar : true;\n    } else {\n      title = formatMessage(messages[view]);\n      avatar = false;\n    }\n\n    let onCancel;\n    if (['login', 'contacts'].indexOf(view) == -1) {\n      onCancel = this.props.onCancel;\n    }\n\n    return (\n      <div id=\"sidepanel\" className={this.props.hideSelf ? 'nodisplay' : null}>\n        <SideNavbar\n          state={view}\n          title={title}\n          avatar={avatar}\n          myUserId={this.props.myUserId}\n          onSignUp={this.props.onSignUp}\n          onSettings={this.props.onSettings}\n          onNewTopic={this.handleNewTopic}\n          onCancel={onCancel} />\n\n        <ErrorPanel\n          level={this.props.errorLevel}\n          text={this.props.errorText}\n          action={this.props.errorAction}\n          actionText={this.props.errorActionText}\n          onClearError={this.props.onError} />\n\n        <LoadSpinner show={this.props.loadSpinnerVisible} />\n\n        {view === 'login' ?\n          <LoginView\n            login={this.props.login}\n            disabled={this.props.loginDisabled}\n            persist={this.props.persist}\n            onLogin={this.props.onLoginRequest}\n            onPersistenceChange={this.props.onPersistenceChange} /> :\n\n          view === 'register' ?\n          <CreateAccountView\n            onCreateAccount={this.props.onCreateAccount}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'settings' ?\n          <SettingsView\n            transport={this.props.transport}\n            serverAddress={this.props.serverAddress}\n            onCancel={this.props.onCancel}\n            onUpdate={this.props.onGlobalSettings} /> :\n\n          view === 'edit' ?\n          <EditAccountView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            onBasicNavigate={this.props.onBasicNavigate} /> :\n\n          view === 'general' ?\n          <AccGeneralView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            onUpdateAccount={this.props.onUpdateAccount}\n            onUpdateTags={this.props.onUpdateAccountTags}\n            onCredAdd={this.props.onCredAdd}\n            onCredDelete={this.props.onCredDelete}\n            onCredConfirm={this.props.onCredConfirm}\n            onBasicNavigate={this.props.onBasicNavigate}\n            onError={this.props.onError} /> :\n\n          view === 'notif' ?\n          <AccNotificationsView\n            messageSounds={this.props.messageSounds}\n            desktopAlerts={this.props.desktopAlerts}\n            desktopAlertsEnabled={this.props.desktopAlertsEnabled}\n            incognitoMode={this.props.incognitoMode}\n            onTogglePushNotifications={this.props.onTogglePushNotifications}\n            onToggleMessageSounds={this.props.onToggleMessageSounds}\n            onToggleIncognitoMode={this.props.onToggleIncognitoMode} /> :\n\n          view === 'security' ?\n          <AccSecurityView\n            tinode={this.props.tinode}\n            onUpdateAccount={this.props.onUpdateAccount}\n            onLogout={this.props.onLogout}\n            onDeleteAccount={this.props.onDeleteAccount}\n            onShowAlert={this.props.onShowAlert}\n            onShowBlocked={this.props.onShowBlocked} /> :\n\n          view === 'support' ?\n          <AccSupportView\n            serverAddress={this.props.serverAddress}\n            serverVersion={this.props.serverVersion} /> :\n\n          (view === 'contacts' || view == 'archive' || view == 'blocked') ?\n          <ContactsView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            connected={this.props.connected}\n            topicSelected={this.props.topicSelected}\n            archive={view == 'archive'}\n            blocked={view == 'blocked'}\n            chatList={this.props.chatList}\n            showContextMenu={this.props.showContextMenu}\n            onTopicSelected={this.props.onTopicSelected}\n            onShowArchive={this.props.onShowArchive} /> :\n\n          view === 'newtpk' ?\n          <NewTopicView\n            tinode={this.props.tinode}\n            searchResults={this.props.searchResults}\n            onInitFind={this.props.onInitFind}\n            onSearchContacts={this.props.onSearchContacts}\n            onCreateTopic={this.props.onCreateTopic}\n            onError={this.props.onError} /> :\n\n          view === 'cred' ?\n          <ValidationView\n            credCode={this.props.credCode}\n            credMethod={this.props.credMethod}\n            onSubmit={this.props.onValidateCredentials}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'reset' ?\n          <PasswordResetView\n            onRequest={this.props.onPasswordResetRequest}\n            onReset={this.props.onResetPassword} /> :\n          null}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SidepanelView);\n","import { KNOWN_HOSTS, DEFAULT_HOST } from '../config.js';\n\n// Detect server address from the URL\nexport function detectServerAddress() {\n  let host = DEFAULT_HOST;\n  if (typeof window.location == 'object') {\n    if (window.location.protocol == 'file:' || window.location.hostname == 'localhost') {\n      host = KNOWN_HOSTS.local;\n    } else if (window.location.hostname) {\n      host = window.location.hostname + (window.location.port ? ':' + window.location.port : '');\n    }\n  }\n  return host;\n}\n\n// Detect if the page is served over HTTPS.\nexport function isSecureConnection() {\n  if (typeof window.location == 'object') {\n    return window.location.protocol == 'https:';\n  }\n  return false;\n}\n\nexport function isLocalHost() {\n  if (typeof window.location == 'object') {\n    return window.location.hostname == 'localhost';\n  }\n  return false;\n}\n","// The top-level class to hold all functionality together.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport * as firebase from 'firebase/app';\nimport 'firebase/messaging';\n\nimport Tinode from 'tinode-sdk';\n\nimport Alert from '../widgets/alert.jsx';\nimport ContextMenu from '../widgets/context-menu.jsx';\n\nimport InfoView from './info-view.jsx';\nimport MessagesView from './messages-view.jsx';\nimport SidepanelView from './sidepanel-view.jsx';\n\nimport { API_KEY, APP_NAME, DEFAULT_P2P_ACCESS_MODE, LOGGING_ENABLED,\n  MEDIA_BREAKPOINT, RECEIVED_DELAY } from '../config.js';\nimport { PACKAGE_VERSION } from '../version.js';\nimport { base64ReEncode, makeImageDataUrl } from '../lib/blob-helpers.js';\nimport { detectServerAddress, isLocalHost, isSecureConnection } from '../lib/host-name.js';\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { secondsToTime } from '../lib/strformat.js'\nimport { updateFavicon } from '../lib/utils.js';\n\n// Sound to play on message received.\nconst POP_SOUND = new Audio('audio/msg.mp3');\n\nconst messages = defineMessages({\n  reconnect_countdown: {\n    id: 'reconnect_countdown',\n    defaultMessage: 'Disconnected. Reconnecting in {seconds}…',\n    description: 'Message shown when an app update is available.'\n  },\n  reconnect_now: {\n    id: 'reconnect_now',\n    defaultMessage: 'Try now',\n    description: 'Prompt for reconnecting now'\n  },\n  push_init_failed: {\n    id: 'push_init_failed',\n    defaultMessage: 'Failed to initialize push notifications',\n    description: 'Error message when push notifications have failed to initialize.'\n  },\n  invalid_security_token: {\n    id: 'invalid_security_token',\n    defaultMessage: 'Invalid security token',\n    description: 'Error message when resetting password.'\n  },\n  no_connection: {\n    id: 'no_connection',\n    defaultMessage: 'No connection',\n    description: 'Warning that the user is offline.'\n  },\n  code_doesnot_match: {\n    id: 'code_doesnot_match',\n    defaultMessage: 'Code does not match',\n    description: 'Error message when the credential validation code is incorrect.'\n  },\n  menu_item_info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  }\n});\n\nclass TinodeWeb extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = this.getBlankState();\n\n    this.handleResize = this.handleResize.bind(this);\n    this.handleHashRoute = this.handleHashRoute.bind(this);\n    this.handleOnline = this.handleOnline.bind(this);\n    this.checkForAppUpdate = this.checkForAppUpdate.bind(this);\n    this.handleVisibilityEvent = this.handleVisibilityEvent.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.handleLoginRequest = this.handleLoginRequest.bind(this);\n    this.handlePersistenceChange = this.handlePersistenceChange.bind(this);\n    this.handleConnected = this.handleConnected.bind(this);\n    this.handleAutoreconnectIteration = this.handleAutoreconnectIteration.bind(this);\n    this.doLogin = this.doLogin.bind(this);\n    this.handleCredentialsRequest = this.handleCredentialsRequest.bind(this);\n    this.handleLoginSuccessful = this.handleLoginSuccessful.bind(this);\n    this.handleDisconnect = this.handleDisconnect.bind(this);\n    this.tnMeMetaDesc = this.tnMeMetaDesc.bind(this);\n    this.tnMeContactUpdate = this.tnMeContactUpdate.bind(this);\n    this.tnMeSubsUpdated = this.tnMeSubsUpdated.bind(this);\n    this.resetContactList = this.resetContactList.bind(this);\n    this.tnData = this.tnData.bind(this);\n    this.tnInitFind = this.tnInitFind.bind(this);\n    this.tnFndSubsUpdated = this.tnFndSubsUpdated.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleTopicSelected = this.handleTopicSelected.bind(this);\n    this.handleHideMessagesView = this.handleHideMessagesView.bind(this);\n    this.handleSendMessage = this.handleSendMessage.bind(this);\n    this.handleNewChatInvitation = this.handleNewChatInvitation.bind(this);\n    this.handleNewAccount = this.handleNewAccount.bind(this);\n    this.handleNewAccountRequest = this.handleNewAccountRequest.bind(this);\n    this.handleUpdateAccountRequest = this.handleUpdateAccountRequest.bind(this);\n    this.handleUpdateAccountTagsRequest = this.handleUpdateAccountTagsRequest.bind(this);\n    this.handleToggleIncognitoMode = this.handleToggleIncognitoMode.bind(this);\n    this.handleSettings = this.handleSettings.bind(this);\n    this.handleGlobalSettings = this.handleGlobalSettings.bind(this);\n    this.handleShowArchive = this.handleShowArchive.bind(this);\n    this.handleShowBlocked = this.handleShowBlocked.bind(this);\n    this.handleToggleMessageSounds = this.handleToggleMessageSounds.bind(this);\n    this.handleCredAdd = this.handleCredAdd.bind(this);\n    this.handleCredDelete = this.handleCredDelete.bind(this);\n    this.handleCredConfirm = this.handleCredConfirm.bind(this);\n    this.initFCMessaging = this.initFCMessaging.bind(this);\n    this.togglePushToken = this.togglePushToken.bind(this);\n    this.requestPushToken = this.requestPushToken.bind(this);\n    this.handlePushMessage = this.handlePushMessage.bind(this);\n    this.handleSidepanelCancel = this.handleSidepanelCancel.bind(this);\n    this.handleStartTopicRequest = this.handleStartTopicRequest.bind(this);\n    this.handleNewTopicCreated = this.handleNewTopicCreated.bind(this);\n    this.handleTopicUpdateRequest = this.handleTopicUpdateRequest.bind(this);\n    this.handleChangePermissions = this.handleChangePermissions.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n    this.handleDeleteMessagesRequest = this.handleDeleteMessagesRequest.bind(this);\n    this.handleLeaveUnsubRequest = this.handleLeaveUnsubRequest.bind(this);\n    this.handleBlockTopicRequest = this.handleBlockTopicRequest.bind(this);\n    this.handleReportTopic = this.handleReportTopic.bind(this);\n    this.handleShowContextMenu = this.handleShowContextMenu.bind(this);\n    this.defaultTopicContextMenu = this.defaultTopicContextMenu.bind(this);\n    this.handleHideContextMenu = this.handleHideContextMenu.bind(this);\n    this.handleShowAlert = this.handleShowAlert.bind(this);\n    this.handleShowInfoView = this.handleShowInfoView.bind(this);\n    this.handleHideInfoView = this.handleHideInfoView.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleValidateCredentialsRequest = this.handleValidateCredentialsRequest.bind(this);\n    this.handlePasswordResetRequest = this.handlePasswordResetRequest.bind(this);\n    this.handleResetPassword = this.handleResetPassword.bind(this);\n    this.handleContextMenuAction = this.handleContextMenuAction.bind(this);\n  }\n\n  getBlankState() {\n    const settings = LocalStorageUtil.getObject('settings') || {};\n    const persist = !!LocalStorageUtil.getObject('keep-logged-in');\n\n    return {\n      connected: false,\n      // Connected and subscribed to 'me'\n      ready: false,\n      // Try to re-login on new connection.\n      autoLogin: false,\n      transport: settings.transport || null,\n      serverAddress: settings.serverAddress || detectServerAddress(),\n      serverVersion: \"no connection\",\n      // \"On\" is the default, so saving the \"off\" state.\n      messageSounds: !settings.messageSoundsOff,\n      incognitoMode: false,\n      desktopAlerts: persist && settings.desktopAlerts,\n      desktopAlertsEnabled: (isSecureConnection() || isLocalHost()) &&\n        (typeof firebase != 'undefined') && (typeof navigator != 'undefined') &&\n        (typeof FIREBASE_INIT != 'undefined'),\n      firebaseToken: persist ? LocalStorageUtil.getObject('firebase-token') : null,\n\n      applicationVisible: !document.hidden,\n\n      errorText: '',\n      errorLevel: null,\n      errorAction: undefined,\n      errorActionText: null,\n\n      sidePanelSelected: 'login',\n      sidePanelTitle: null,\n      sidePanelAvatar: null,\n      loadSpinnerVisible: false,\n\n      login: '',\n      password: '',\n      persist: persist,\n      myUserId: null,\n      liveConnection: navigator.onLine,\n      topicSelected: '',\n      topicSelectedOnline: false,\n      topicSelectedAcs: null,\n      newTopicParams: null,\n      loginDisabled: false,\n      displayMobile: (window.innerWidth <= MEDIA_BREAKPOINT),\n      showInfoPanel: false,\n      mobilePanel: 'sidepanel',\n\n      contextMenuVisible: false,\n      contextMenuBounds: null,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuItems: [],\n\n      // Modal alert dialog.\n      alertVisible: false,\n      alertParams: {},\n\n      // Chats as shown in the ContactsView\n      chatList: [],\n      // Contacts returned by a search query.\n      searchResults: [],\n      // Merged results of a search query and p2p chats.\n      searchableContacts: [],\n      credMethod: undefined,\n      credCode: undefined,\n      // Topic to go to after login.\n      requestedTopic: undefined\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    window.addEventListener('online', (e) => { this.handleOnline(true); });\n    window.addEventListener('offline', (e) => { this.handleOnline(false); });\n    window.addEventListener('hashchange', this.handleHashRoute);\n    // Process background notifications from the service worker.\n    const serviceWorkerChannel = new BroadcastChannel('tinode-sw');\n    serviceWorkerChannel.addEventListener('message', this.handlePushMessage);\n\n    // Window/tab visible or invisible for pausing timers.\n    document.addEventListener('visibilitychange', this.handleVisibilityEvent);\n\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n\n    new Promise((resolve, reject) => {\n      this.tinode = TinodeWeb.tnSetup(this.state.serverAddress, this.state.transport,\n        this.props.intl.locale, this.state.persist, resolve);\n      this.tinode.onConnect = this.handleConnected;\n      this.tinode.onDisconnect = this.handleDisconnect;\n      this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n    }).then(() => {\n      // Initialize desktop alerts.\n      if (this.state.desktopAlertsEnabled) {\n        this.initFCMessaging().then(() => {\n          if (this.state.desktopAlerts) {\n            if (!this.state.firebaseToken) {\n              this.togglePushToken(true);\n            } else {\n              this.tinode.setDeviceToken(this.state.firebaseToken);\n            }\n          }\n        }).catch(() => {\n          // do nothing: handled earlier.\n          // catch needed to pervent unnecessary logging of error.\n        });\n      }\n\n      // Parse and save the hash navigation params.\n      const parsedNav = HashNavigation.parseUrlHash(window.location.hash);\n\n      // Read contacts from cache.\n      this.resetContactList();\n\n      const token = this.state.persist ? LocalStorageUtil.getObject('auth-token') : undefined;\n      if (token) {\n        this.setState({autoLogin: true});\n\n        // When reading from storage, date is returned as string.\n        token.expires = new Date(token.expires);\n        this.tinode.setAuthToken(token);\n        this.tinode.connect().catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n        delete parsedNav.params.info;\n        delete parsedNav.params.tab;\n        parsedNav.path[0] = '';\n        HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsedNav.path, parsedNav.params));\n      } else if (!parsedNav.params.token) {\n        // No token, save possible topic name and navigating to blank state.\n        this.setState({requestedTopic: parsedNav.path[1]});\n        HashNavigation.navigateTo('');\n      }\n\n      this.readTimer = null;\n      this.readTimerCallback = null;\n\n      this.handleHashRoute();\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n    window.removeEventListener('hashchange', this.handleHashRoute);\n    document.removeEventListener('visibilitychange', this.handleVisibilityEvent);\n  }\n\n  // Setup transport (usually websocket) and server address. This will terminate connection with the server.\n  static tnSetup(serverAddress, transport, locale, persistentCache, onSetupCompleted) {\n    const tinode = new Tinode({appName: APP_NAME, host: serverAddress, apiKey: API_KEY, transport: transport,\n      secure: isSecureConnection(), persist: persistentCache}, onSetupCompleted);\n    tinode.setHumanLanguage(locale);\n    tinode.enableLogging(LOGGING_ENABLED, true);\n    return tinode;\n  }\n\n  // Notifiy Tinode that a push message was received from the server.\n  handlePushMessage(data) {\n    if (data.what == 'msg' && Tinode.isChannelTopicName(data.topic)) {\n      // The last argument is a fake user Id: otherwise the update is seen as one from the current user.\n      this.tinode.oobNotification(data.topic, data.seq, 'fake-uid');\n    }\n  }\n\n  initFCMessaging() {\n    const {formatMessage, locale} = this.props.intl;\n    const onError = (msg, err) => {\n      console.log(msg, err);\n      this.handleError(formatMessage(messages.push_init_failed), 'err');\n      this.setState({desktopAlertsEnabled: false});\n    }\n\n    try {\n      this.fbPush = firebase.initializeApp(FIREBASE_INIT, APP_NAME).messaging();\n      this.fbPush.usePublicVapidKey(FIREBASE_INIT.messagingVapidKey);\n\n      return navigator.serviceWorker.register('/service-worker.js').then((reg) => {\n        this.checkForAppUpdate(reg);\n        this.fbPush.useServiceWorker(reg);\n        reg.active.postMessage(JSON.stringify({locale: locale, version: PACKAGE_VERSION}));\n\n        // Google could not be bothered to mention that onTokenRefresh is never called.\n        this.fbPush.onTokenRefresh(() => {\n          this.requestPushToken();\n        });\n\n        // Handhe FCM pushes\n        // (a) for channels always,\n        // (b) pushes when the app is in foreground but has not focus.\n        this.fbPush.onMessage(payload => { this.handlePushMessage(payload.data); });\n\n        return reg;\n      }).catch((err) => {\n        // registration failed :(\n        onError(\"Failed to register service worker:\", err);\n        return Promise.reject(err);\n      });\n    } catch (err) {\n      onError(\"Failed to initialize push notifications\", err);\n      return Promise.reject(err);\n    }\n  }\n\n  handleResize() {\n    const mobile = document.documentElement.clientWidth <= MEDIA_BREAKPOINT;\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n    if (this.state.displayMobile != mobile) {\n      this.setState({displayMobile: mobile});\n    }\n  }\n\n  // Check if a newer version of TinodeWeb app is available at the server.\n  checkForAppUpdate(reg) {\n    reg.onupdatefound = () => {\n      const installingWorker = reg.installing;\n      installingWorker.onstatechange = () => {\n        if (installingWorker.state == 'installed' && navigator.serviceWorker.controller) {\n          const msg = <>\n            <FormattedMessage id=\"update_available\"\n              defaultMessage=\"Update available.\"\n              description=\"Message shown when an app update is available.\" /> <a href=\"\">\n              <FormattedMessage id=\"reload_update\"\n                defaultMessage=\"Reload\"\n                description=\"Call to action to reload application when update is available.\" />\n            </a>.</>;\n          this.handleError(msg, 'info');\n        }\n      }\n    }\n  }\n\n  // Handle for hashchange event: display appropriate panels.\n  handleHashRoute() {\n    const hash = HashNavigation.parseUrlHash(window.location.hash);\n    if (hash.path && hash.path.length > 0) {\n      // Left-side panel selector.\n      if (['register','settings','edit','notif','security','support','general',\n          'cred','reset','newtpk','archive','blocked','contacts',''].includes(hash.path[0])) {\n        this.setState({sidePanelSelected: hash.path[0]});\n      } else {\n        console.log(\"Unknown sidepanel view\", hash.path[0]);\n      }\n\n      // Topic for MessagesView selector.\n      const topicName = hash.path[1];\n      if (Tinode.topicType(topicName) && topicName != this.state.topicSelected) {\n          const newState = {\n            topicSelected: topicName\n          };\n          const acs = this.tinode.getTopicAccessMode(topicName);\n          if (acs) {\n            newState.topicSelectedAcs = acs;\n          }\n          this.setState(newState);\n      }\n    } else {\n      // Empty hashpath\n      this.setState({sidePanelSelected: ''});\n    }\n\n    // Save validation credentials, if available.\n    if (hash.params.method) {\n      this.setState({ credMethod: hash.params.method });\n    }\n    if (hash.params.code) {\n      this.setState({ credCode: hash.params.code });\n    }\n\n    // Additional parameters of panels.\n    this.setState({\n      showInfoPanel: hash.params.info,\n      newTopicTabSelected: hash.params.tab\n    });\n  }\n\n  handleOnline(online) {\n    if (online) {\n      this.handleError();\n      clearInterval(this.reconnectCountdown);\n      this.tinode.reconnect();\n    } else {\n      this.handleError(this.props.intl.formatMessage(messages.no_connection), 'warn');\n    }\n    this.setState({liveConnection: online});\n  }\n\n  handleVisibilityEvent() {\n    this.setState({applicationVisible: !document.hidden});\n  }\n\n  handleError(err, level, action, actionText) {\n    this.setState({errorText: err, errorLevel: level, errorAction: action, errorActionText: actionText});\n  }\n\n  // User clicked Login button in the side panel.\n  handleLoginRequest(login, password) {\n    this.setState({\n      loginDisabled: true,\n      login: login,\n      password: password,\n      loadSpinnerVisible: true,\n      autoLogin: true\n    });\n    this.handleError('', null);\n\n    if (this.tinode.isConnected()) {\n      this.doLogin(login, password, {meth: this.state.credMethod, resp: this.state.credCode});\n    } else {\n      this.tinode.connect().catch((err) => {\n        // Socket error\n        this.setState({loginDisabled: false, autoLogin: false, loadSpinnerVisible: false});\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // Enable or disable saving the password and IndexedDB.\n  handlePersistenceChange(persist) {\n    if (persist) {\n      this.tinode.initStorage().then(() => {\n        console.log(\"storage initialized\");\n        LocalStorageUtil.setObject('keep-logged-in', true);\n        this.setState({persist: true});\n      });\n    } else {\n      this.tinode.clearStorage().then(() => {\n        console.log(\"storage cleared\");\n        LocalStorageUtil.setObject('keep-logged-in', false);\n        this.setState({persist: false});\n      });\n    }\n  }\n\n  // Connection succeeded.\n  handleConnected() {\n    // Just to be sure.\n    clearInterval(this.reconnectCountdown);\n    this.handleError();\n\n    const params = this.tinode.getServerInfo();\n    this.setState({\n      serverVersion: params.ver + ' ' + (params.build ? params.build : 'none')\n    });\n\n    if (this.state.autoLogin) {\n      this.doLogin(this.state.login, this.state.password, {meth: this.state.credMethod, resp: this.state.credCode});\n    }\n  }\n\n  // Called for each auto-reconnect iteration.\n  handleAutoreconnectIteration(sec, prom) {\n    clearInterval(this.reconnectCountdown);\n\n    if (sec < 0) {\n      // Clear error\n      this.handleError();\n      return;\n    }\n\n    if (prom) {\n      // Reconnecting now\n      prom.then(() => {\n        // Reconnected: clear error\n        this.handleError();\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n      return;\n    }\n\n    const {formatMessage} = this.props.intl;\n    let count = sec / 1000;\n    count = count | count;\n    this.reconnectCountdown = setInterval(() => {\n      const timeLeft = (count > 99) ? secondsToTime(count) : count;\n      this.handleError(\n        formatMessage(messages.reconnect_countdown, {seconds: timeLeft}),\n        'warn',\n        () => {\n          clearInterval(this.reconnectCountdown);\n          this.tinode.reconnect();\n        },\n        formatMessage(messages.reconnect_now)\n      );\n      count -= 1;\n    }, 1000);\n  }\n\n  // Connection lost\n  handleDisconnect(err) {\n    this.setState({\n      connected: false,\n      ready: false,\n      topicSelectedOnline: false,\n      errorText: err && err.message ? err.message : \"Disconnected\",\n      errorLevel: err && err.message ? 'err' : 'warn',\n      loginDisabled: false,\n      contextMenuVisible: false,\n      serverVersion: \"no connection\"\n    });\n  }\n\n  doLogin(login, password, cred) {\n    if (this.tinode.isAuthenticated()) {\n      // Already logged in. Go to default screen.\n      HashNavigation.navigateTo('');\n      return;\n    }\n    // Sanitize and package credentail.\n    cred = Tinode.credential(cred);\n    // Try to login with login/password. If they are not available, try token. If no token, ask for login/password.\n    let promise = null;\n    const token = this.tinode.getAuthToken();\n    if (login && password) {\n      this.setState({password: null});\n      promise = this.tinode.loginBasic(login, password, cred);\n    } else if (token) {\n      promise = this.tinode.loginToken(token.token, cred);\n    }\n\n    if (promise) {\n      promise.then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text === 'validate credentials') {\n          this.setState({loadSpinnerVisible: false});\n          if (cred) {\n            this.handleError(this.props.intl.formatMessage(messages.code_doesnot_match), 'warn');\n          }\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful();\n        }\n      }).catch((err) => {\n        // Login failed, report error.\n        this.setState({\n          loginDisabled: false,\n          credMethod: undefined,\n          credCode: undefined,\n          loadSpinnerVisible: false,\n          autoLogin: false\n        });\n        this.handleError(err.message, 'err');\n        localStorage.removeItem('auth-token');\n        HashNavigation.navigateTo('');\n      });\n    } else {\n      // No login credentials provided.\n      // Make sure we are on the login page.\n      HashNavigation.navigateTo('');\n      this.setState({loginDisabled: false});\n    }\n  }\n\n  handleCredentialsRequest(params) {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    parsed.path[0] = 'cred';\n    parsed.params['method'] = params.cred[0];\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n  }\n\n  handleLoginSuccessful() {\n    this.handleError();\n\n    // Refresh authentication token.\n    if (LocalStorageUtil.getObject('keep-logged-in')) {\n      LocalStorageUtil.setObject('auth-token', this.tinode.getAuthToken());\n    }\n\n    const goToTopic = this.state.requestedTopic;\n    // Logged in fine, subscribe to 'me' attaching callbacks from the contacts view.\n    const me = this.tinode.getMeTopic();\n    me.onMetaDesc = this.tnMeMetaDesc;\n    me.onContactUpdate = this.tnMeContactUpdate;\n    me.onSubsUpdated = this.tnMeSubsUpdated;\n    this.setState({\n      connected: true,\n      credMethod: undefined,\n      credCode: undefined,\n      myUserId: this.tinode.getCurrentUserID(),\n      autoLogin: true,\n      requestedTopic: undefined,\n    });\n    // Subscribe, fetch topic desc, the list of subscriptions. Messages are not fetched.\n    me.subscribe(\n      me.startMetaQuery().\n        withLaterSub().\n        withDesc().\n        withTags().\n        withCred().\n        build()\n      ).catch((err) => {\n        this.tinode.disconnect();\n        localStorage.removeItem('auth-token');\n        this.handleError(err.message, 'err');\n        HashNavigation.navigateTo('');\n      }).finally(() => {\n        this.setState({loadSpinnerVisible: false});\n      });\n    let urlHash = HashNavigation.setUrlSidePanel(window.location.hash, 'contacts');\n    if (goToTopic) {\n      urlHash = HashNavigation.setUrlTopic(urlHash, goToTopic);\n    }\n    HashNavigation.navigateTo(urlHash);\n  }\n\n  tnMeMetaDesc(desc) {\n    if (desc) {\n      if (desc.public) {\n        this.setState({\n          sidePanelTitle: desc.public.fn,\n          sidePanelAvatar: makeImageDataUrl(desc.public.photo)\n        });\n      }\n      if (desc.acs) {\n        this.setState({\n          incognitoMode: !desc.acs.isPresencer()\n        });\n      }\n    }\n  }\n\n  // Reactions to updates to the contact list.\n  tnMeContactUpdate(what, cont) {\n    if (what == 'on' || what == 'off') {\n      this.resetContactList();\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedOnline: (what == 'on')});\n      }\n    } else if (what == 'read') {\n      this.resetContactList();\n    } else if (what == 'msg') {\n      // Check if the topic is archived. If so, don't play a sound.\n      const topic = this.tinode.getTopic(cont.topic);\n      const archived = topic && topic.isArchived();\n\n      // New message received. Maybe the message is from the current user, then unread is 0.\n      if (cont.unread > 0 && this.state.messageSounds && !archived) {\n        // Skip update if the topic is currently open, otherwise the badge will annoyingly flash.\n        if (document.hidden || this.state.topicSelected != cont.topic) {\n          POP_SOUND.play();\n        }\n      }\n      // Reorder contact list to use possibly updated 'touched'.\n      this.resetContactList();\n    } else if (what == 'recv') {\n      // Explicitly ignoring \"recv\" -- it causes no visible updates to contact list.\n    } else if (what == 'gone' || what == 'unsub') {\n      // Topic deleted or user unsubscribed. Remove topic from view.\n      // If the currently selected topic is gone, clear the selection.\n      if (this.state.topicSelected == cont.topic) {\n        this.handleTopicSelected(null);\n      }\n      // Redraw without the deleted topic.\n      this.resetContactList();\n    } else if (what == 'acs') {\n      // Permissions changed. If it's for the currently selected topic,\n      // update the views.\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedAcs: cont.acs});\n      }\n    } else if (what == 'del') {\n      // TODO: messages deleted (hard or soft) -- update pill counter.\n    } else if (what == 'upd') {\n      // upd - handled by the SDK. Explicitly ignoring here.\n    } else {\n      // TODO(gene): handle other types of notifications:\n      // * ua -- user agent changes (maybe display a pictogram for mobile/desktop).\n      console.log(\"Unsupported (yet) presence update:\" + what + \" in: \" + cont.topic);\n    }\n  }\n\n  tnMeSubsUpdated(unused) {\n    this.resetContactList();\n  }\n\n  // Merge search results and contact list to create a single flat\n  // list of known contacts for GroupManager to use.\n  static prepareSearchableContacts(chatList, foundContacts) {\n    const merged = {};\n\n    // For chatList topics merge only p2p topics and convert them to the\n    // same format as foundContacts.\n    for (const c of chatList) {\n      if (Tinode.isP2PTopicName(c.topic)) {\n          merged[c.topic] = {\n            user: c.topic,\n            updated: c.updated,\n            public: c.public,\n            private: c.private,\n            acs: c.acs\n          };\n      }\n    }\n\n    // Add all foundCountacts if they have not been added already.\n    for (const c of foundContacts) {\n      if (!merged[c.user]) {\n        merged[c.user] = c;\n      }\n    }\n\n    return Object.values(merged);\n  }\n\n  resetContactList() {\n    const newState = {\n      chatList: []\n    };\n\n    if (!this.state.ready) {\n      newState.ready = true;\n    }\n\n    this.tinode.getMeTopic().contacts((c) => {\n      if (!c.topic && !c.user) {\n        // Contacts expect c.topic to be set.\n        c.topic = c.name;\n      }\n      newState.chatList.push(c);\n      if (this.state.topicSelected == c.topic) {\n        newState.topicSelectedOnline = c.online;\n        newState.topicSelectedAcs = c.acs;\n      }\n    });\n    // Merge search results and chat list.\n    newState.searchableContacts = TinodeWeb.prepareSearchableContacts(newState.chatList, this.state.searchResults);\n    this.setState(newState);\n  }\n\n  // Sending \"received\" notifications\n  tnData(data) {\n    const topic = this.tinode.getTopic(data.topic);\n    if (topic.msgStatus(data, true) >= Tinode.MESSAGE_STATUS_SENT && data.from != this.state.myUserId) {\n      clearTimeout(this.receivedTimer);\n      this.receivedTimer = setTimeout(() => {\n        this.receivedTimer = undefined;\n        topic.noteRecv(data.seq);\n      }, RECEIVED_DELAY);\n    }\n  }\n\n  /* Fnd topic: find contacts by tokens */\n  tnInitFind() {\n    const fnd = this.tinode.getFndTopic();\n    fnd.onSubsUpdated = this.tnFndSubsUpdated;\n    if (fnd.isSubscribed()) {\n      this.tnFndSubsUpdated();\n    } else {\n      fnd.subscribe(fnd.startMetaQuery().withSub().build()).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  tnFndSubsUpdated() {\n    const foundContacts = [];\n    // Don't attempt to create P2P topics which already exist. Server will reject the duplicates.\n    this.tinode.getFndTopic().contacts((s) => {\n      foundContacts.push(s);\n    });\n    this.setState({\n      searchResults: foundContacts,\n      searchableContacts: TinodeWeb.prepareSearchableContacts(this.state.chatList, foundContacts)\n    });\n  }\n\n  /** Called when the user enters a contact into the contact search field in the NewAccount panel\n    @param query {Array} is an array of contacts to search for\n   */\n  handleSearchContacts(query) {\n    const fnd = this.tinode.getFndTopic();\n    fnd.setMeta({desc: {public: query}}).then((ctrl) => {\n      return fnd.getMeta(fnd.startMetaQuery().withSub().build());\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  // User clicked on a contact in the side panel or deleted a contact.\n  handleTopicSelected(topicName) {\n    // Clear newTopicParams after use.\n    if (this.state.newTopicParams && this.state.newTopicParams._topicName != topicName) {\n      this.setState({\n        newTopicParams: null\n      });\n    }\n\n    if (topicName) {\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'topic-view',\n        showInfoPanel: false\n      });\n      // Different contact selected.\n      if (this.state.topicSelected != topicName) {\n        this.setState({\n          topicSelectedOnline: this.tinode.isTopicOnline(topicName),\n          topicSelectedAcs: this.tinode.getTopicAccessMode(topicName)\n        });\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', topicName));\n      }\n    } else {\n      // Currently selected contact deleted\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'sidepanel',\n        topicSelectedOnline: false,\n        topicSelectedAcs: null,\n        showInfoPanel: false\n      });\n\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic('', null));\n    }\n  }\n\n  // In mobile view user requested to show sidepanel\n  handleHideMessagesView() {\n    this.setState({\n      mobilePanel: 'sidepanel'\n    });\n    HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, null));\n  }\n\n  // User is sending a message, either plain text or a drafty object, possibly\n  // with attachments.\n  //  - msg - Drafty message with content\n  //  - promise - Promise to be resolved when the upload is completed\n  //  - uploader - for tracking progress\n  handleSendMessage(msg, promise, uploader) {\n    const topic = this.tinode.getTopic(this.state.topicSelected);\n\n    msg = topic.createMessage(msg, false);\n    // The uploader is used to show progress.\n    msg._uploader = uploader;\n\n    if (!topic.isSubscribed()) {\n      if (!promise) {\n        promise = Promise.resolve();\n      }\n      promise = promise.then(() => { return topic.subscribe(); });\n    }\n\n    if (promise) {\n      promise = promise.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n\n    topic.publishDraft(msg, promise)\n      .then((ctrl) => {\n        if (topic.isArchived()) {\n          return topic.archive(false);\n        }\n      })\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleNewChatInvitation(topicName, action) {\n    const topic = this.tinode.getTopic(topicName);\n    let response = null;\n    switch (action) {\n      case 'accept':\n        // Accept given permissions.\n        const mode = topic.getAccessMode().getGiven();\n        response = topic.setMeta({sub: {mode: mode}});\n        if (topic.isP2PType()) {\n          // For P2P topics change 'given' permission of the peer too.\n          // In p2p topics the other user has the same name as the topic.\n          response = response.then((ctrl) => {\n            topic.setMeta({sub: {user: topicName, mode: mode}});\n          });\n        }\n        break;\n      case 'delete':\n        // Ignore invitation by deleting it.\n        response = topic.delTopic(true);\n        break;\n      case 'block':\n        // Ban the topic making futher invites impossible.\n        // Just self-ban.\n        const am = topic.getAccessMode().updateWant('-JP').getWant();\n        response = topic.setMeta({sub: {mode: am}}).then((ctrl) => {\n          return this.handleTopicSelected(null);\n        });\n        break;\n      default:\n        console.log(\"Unknown invitation action\", '\"' + action + '\"\"');\n    }\n\n    if (response != null) {\n      response.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // User chose a Sign Up menu item.\n  handleNewAccount() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, 'register'));\n  }\n\n  // Actual registration of a new account.\n  handleNewAccountRequest(login_, password_, public_, cred_, tags_) {\n    // Clear old error, if any.\n    this.handleError();\n\n    this.tinode.connect(this.state.serverAddress)\n      .then(() => {\n        return this.tinode.createAccountBasic(login_, password_,\n          {public: public_, tags: tags_, cred: Tinode.credential(cred_)});\n      }).then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text == 'validate credentials') {\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful(this);\n        }\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleUpdateAccountRequest(password, pub, defacs) {\n    this.handleError();\n\n    if (pub || defacs) {\n      const params = {};\n      if (pub) {\n        params.public = pub;\n      }\n      if (defacs) {\n        params.defacs = defacs;\n      }\n      this.tinode.getMeTopic().setMeta({desc: params}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n    if (password) {\n      this.tinode.updateAccountBasic(null, this.tinode.getCurrentLogin(), password).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleToggleIncognitoMode(on) {\n    const me = this.tinode.getMeTopic();\n    const am = me.getAccessMode().updateWant(on ? '-P' : '+P').getWant();\n    me.setMeta({sub: {mode: am}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleUpdateAccountTagsRequest(tags) {\n    this.tinode.getMeTopic().setMeta({tags: tags})\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  // User chose Settings menu item.\n  handleSettings() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'edit' : 'settings'));\n  }\n\n  // User updated global parameters.\n  handleGlobalSettings(settings) {\n    const serverAddress = settings.serverAddress || this.state.serverAddress;\n    const transport = settings.transport || this.state.transport;\n    if (this.tinode) {\n      this.tinode.clearStorage();\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.tinode = TinodeWeb.tnSetup(serverAddress, transport, this.props.intl.locale,\n      LocalStorageUtil.getObject('keep-logged-in'));\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n\n    this.setState({\n      serverAddress: serverAddress,\n      transport: transport\n    });\n    LocalStorageUtil.setObject('settings', {\n      serverAddress: serverAddress,\n      transport: transport\n    });\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, ''));\n  }\n\n  // User chose 'Archived chats'.\n  handleShowArchive() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'archive' : ''));\n  }\n\n  // User viewes 'Blocked chats'.\n  handleShowBlocked() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'blocked' : ''));\n  }\n\n  togglePushToken(enabled) {\n    if (enabled) {\n      if (!this.state.firebaseToken) {\n        const fcm = this.fbPush ?\n          Promise.resolve() :\n          this.initFCMessaging();\n        fcm.then(() => {\n          return this.fbPush.requestPermission();\n        }).then(() => {\n          this.requestPushToken();\n        }).catch((err) => {\n          console.log(\"Failed to get notification permission.\", err);\n          this.handleError(err.message, 'err');\n          this.setState({desktopAlerts: false, firebaseToken: null});\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        });\n      } else {\n        this.setState({desktopAlerts: true});\n        if (LocalStorageUtil.getObject('keep-logged-in')) {\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n        }\n      }\n    } else if (this.state.firebaseToken && this.fbPush) {\n      this.fbPush.deleteToken(this.state.firebaseToken).catch((err) => {\n        console.log(\"Unable to delete token.\", err);\n      }).finally(() => {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        localStorage.removeItem('firebase-token');\n        this.setState({desktopAlerts: false, firebaseToken: null});\n        // Inform the server that the token was deleted.\n        this.tinode.setDeviceToken(null);\n      });\n    } else {\n      this.setState({desktopAlerts: false, firebaseToken: null});\n      LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n    }\n  }\n\n  requestPushToken() {\n    this.fbPush.getToken().then((refreshedToken) => {\n      const persist = LocalStorageUtil.getObject('keep-logged-in');\n      if (refreshedToken != this.state.firebaseToken) {\n        this.tinode.setDeviceToken(refreshedToken);\n        if (persist) {\n          LocalStorageUtil.setObject('firebase-token', refreshedToken);\n        }\n      }\n      this.setState({firebaseToken: refreshedToken, desktopAlerts: true});\n      if (persist) {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n      }\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n      console.log(\"Failed to retrieve firebase token\", err);\n    });\n  }\n\n  handleToggleMessageSounds(enabled) {\n    this.setState({messageSounds: enabled});\n    LocalStorageUtil.updateObject('settings', {\n      messageSoundsOff: !enabled\n    });\n  }\n\n  handleCredAdd(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.setMeta({cred: {meth: method, val: value}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredDelete(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.delCredential(method, value).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredConfirm(method, response) {\n    this.handleCredentialsRequest({cred: [method]});\n  }\n\n  // User clicked Cancel button in Setting or Sign Up panel.\n  handleSidepanelCancel() {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    let path = '';\n    if (['security','support','general','notif'].includes(parsed.path[0])) {\n      path = 'edit';\n    } else if ('blocked' == parsed.path[0]) {\n      path = 'security';\n    } else if (this.state.myUserId) {\n      path = 'contacts';\n    }\n    parsed.path[0] = path;\n    if (parsed.params) {\n      delete parsed.params.code;\n      delete parsed.params.method;\n      delete parsed.params.tab;\n    }\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n    this.setState({errorText: '', errorLevel: null});\n  }\n\n  // Basic nagigator by hash value. No need to bind to this.\n  basicNavigator(hash) {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, hash));\n  }\n\n  // Request to start a topic, new or selected from search results, or \"by ID\".\n  handleStartTopicRequest(topicName, pub, priv, tags, isChannel) {\n    // Check if topic is indeed new. If not, launch it.\n    if (topicName && this.tinode.isTopicCached(topicName)) {\n      this.handleTopicSelected(topicName);\n      return;\n    }\n\n    const params = {};\n    if (Tinode.isP2PTopicName(topicName)) {\n      // Because we are initialing the subscription, set 'want' to all permissions.\n      params.sub = {mode: DEFAULT_P2P_ACCESS_MODE};\n      // Give the other user all permissions too.\n      params.desc = {defacs: {auth: DEFAULT_P2P_ACCESS_MODE}};\n    } else {\n      topicName = topicName || this.tinode.newGroupTopicName(isChannel);\n      params.desc = {public: pub, private: {comment: priv}};\n      params.tags = tags;\n    }\n    params._topicName = topicName;\n    this.setState({newTopicParams: params}, () => {this.handleTopicSelected(topicName)});\n  }\n\n  // New topic was creted, here is the new topic name.\n  handleNewTopicCreated(oldName, newName) {\n    if (this.state.topicSelected == oldName && oldName != newName) {\n      // If the current URl contains the old topic name, replace it with new.\n      // Update the name of the selected topic first so the navigator doen't clear\n      // the state.\n      this.setState({topicSelected: newName}, () => {\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', newName));\n      });\n    }\n  }\n\n  handleTopicUpdateRequest(topicName, pub, priv, permissions) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const params = {};\n      if (pub) {\n        params.public = pub;\n      }\n      if (priv) {\n        params.private = (priv === Tinode.DEL_CHAR) ?\n          Tinode.DEL_CHAR : {comment: priv};\n      }\n      if (permissions) {\n        params.defacs = permissions;\n      }\n      topic.setMeta({desc: params}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleChangePermissions(topicName, mode, uid) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const am = topic.getAccessMode();\n      if (uid) {\n        am.updateGiven(mode);\n        mode = am.getGiven();\n      } else {\n        am.updateWant(mode);\n        mode = am.getWant();\n      }\n      topic.setMeta({sub: {user: uid, mode: mode}}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleTagsUpdated(topicName, tags) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      topic.setMeta({tags: tags}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleLogout() {\n    updateFavicon(0);\n\n    // Remove stored data.\n    localStorage.removeItem('auth-token');\n    localStorage.removeItem('firebase-token');\n    localStorage.removeItem('settings');\n    if (this.state.firebaseToken) {\n      this.fbPush.deleteToken(this.state.firebaseToken)\n    }\n\n    if (this.tinode) {\n      this.tinode.clearStorage();\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.setState(this.getBlankState());\n\n    this.tinode = TinodeWeb.tnSetup(this.state.serverAddress,\n      this.state.transport, this.props.intl.locale, LocalStorageUtil.getObject('keep-logged-in'));\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n    HashNavigation.navigateTo('');\n  }\n\n  handleDeleteAccount() {\n    this.tinode.delCurrentUser(true).then((ctrl) => {\n      this.handleLogout();\n    });\n  }\n\n  handleDeleteMessagesRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Request hard-delete all messages.\n    topic.delMessagesAll(true).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleLeaveUnsubRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.leave(true).then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleBlockTopicRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleReportTopic(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Publish spam report.\n    this.tinode.publish(Tinode.TOPIC_SYS, Tinode.Drafty.attachJSON(null, {\n      'action': 'report',\n      'target': topicName\n    }));\n\n    // Remove J and P permissions.\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleShowContextMenu(params, menuItems) {\n    this.setState({\n      contextMenuVisible: true,\n      contextMenuClickAt: {x: params.x, y: params.y},\n      contextMenuParams: params,\n      contextMenuItems: menuItems || this.defaultTopicContextMenu(params.topicName),\n      contextMenuBounds: ReactDOM.findDOMNode(this).getBoundingClientRect()\n    });\n  }\n\n  defaultTopicContextMenu(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n\n    let muted = false, blocked = false, self_blocked = false, subscribed = false, deleter = false, archived = false;\n    if (topic) {\n      subscribed = topic.isSubscribed();\n      archived = topic.isArchived();\n\n      const acs = topic.getAccessMode();\n      if (acs) {\n        muted = acs.isMuted();\n        blocked = !acs.isJoiner();\n        self_blocked = !acs.isJoiner('want');\n        deleter = acs.isDeleter();\n      }\n    }\n\n    return [\n      subscribed ? {\n        title: this.props.intl.formatMessage(messages.menu_item_info),\n        handler: this.handleShowInfoView\n      } : null,\n      subscribed ? 'messages_clear' : null,\n      subscribed && deleter ? 'messages_clear_hard' : null,\n      muted ? (blocked ? null : 'topic_unmute') : 'topic_mute',\n      self_blocked ? 'topic_unblock' : 'topic_block',\n      !archived ? 'topic_archive' : null,\n      'topic_delete'\n    ];\n  }\n\n  handleHideContextMenu() {\n    this.setState({\n      contextMenuVisible: false,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuBounds: null\n    });\n  }\n\n  handleContextMenuAction(action, promise, params) {\n    if (action == 'topic_archive') {\n      if (promise && params.topicName && params.topicName == this.state.topicSelected) {\n        promise.then(() => {\n          this.handleTopicSelected(null);\n        });\n      }\n    }\n  }\n\n  handleShowAlert(title, content, onConfirm, confirmText, onReject, rejectText) {\n    this.setState({\n      alertVisible: true,\n      alertParams: {\n        title: title,\n        content: content,\n        onConfirm: onConfirm,\n        confirm: confirmText,\n        onReject: onReject,\n        reject: rejectText\n      }\n    });\n  }\n\n  handleShowInfoView() {\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'info', true));\n    this.setState({showInfoPanel: true});\n  }\n\n  handleHideInfoView() {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'info'));\n    this.setState({showInfoPanel: false});\n  }\n\n  handleMemberUpdateRequest(topicName, added, removed) {\n    if (!topicName) {\n      return;\n    }\n\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    if (added && added.length > 0) {\n      added.map((uid) => {\n        topic.invite(uid, null).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n\n    if (removed && removed.length > 0) {\n      removed.map((uid) => {\n        topic.delSubscription(uid).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n  }\n\n  handleValidateCredentialsRequest(cred, code) {\n    if (this.tinode.isAuthenticated()) {\n      const me = this.tinode.getMeTopic();\n      me.setMeta({cred: {meth: cred, resp: code}})\n        .then(() => {\n          HashNavigation.navigateTo('');\n        })\n        .catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n    } else {\n      this.setState({credMethod: cred, credCode: code});\n      this.doLogin(null, null, {meth: cred, resp: code});\n    }\n  }\n\n  handlePasswordResetRequest(method, value) {\n    // If already connected, connnect() will return a resolved promise.\n    this.tinode.connect()\n      .then(() => {\n        return this.tinode.requestResetAuthSecret('basic', method, value);\n      })\n      .catch((err) => {\n        // Socket error\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleResetPassword(scheme, newPassword, token) {\n    token = base64ReEncode(token);\n    if (!token) {\n      this.handleError(this.props.intl.formatMessage(messages.invalid_security_token), 'err');\n    } else {\n      this.tinode.connect()\n        .then(() => {\n          return this.tinode.updateAccountBasic(null, null, newPassword, {token: token});\n        })\n        .catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"app-container\">\n        {this.state.contextMenuVisible ?\n          <ContextMenu\n            tinode={this.tinode}\n            bounds={this.state.contextMenuBounds}\n            clickAt={this.state.contextMenuClickAt}\n            params={this.state.contextMenuParams}\n            items={this.state.contextMenuItems}\n            hide={this.handleHideContextMenu}\n            onShowAlert={this.handleShowAlert}\n            onAction={this.handleContextMenuAction}\n            onTopicRemoved={(topicName) => {\n              if (topicName == this.state.topicSelected) {\n                this.handleTopicSelected(null);\n              }\n            }}\n            onError={this.handleError} />\n          :\n          null\n        }\n        <Alert\n          visible={this.state.alertVisible}\n          title={this.state.alertParams.title}\n          content={this.state.alertParams.content}\n          onReject={this.state.alertParams.onReject ? (() => { this.setState({alertVisible: false}); }) : null}\n          reject={this.state.alertParams.reject}\n          onConfirm={() => { this.setState({alertVisible: false}); this.state.alertParams.onConfirm(); }}\n          confirm={this.state.alertParams.confirm}\n          />\n        <SidepanelView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          displayMobile={this.state.displayMobile}\n          hideSelf={this.state.displayMobile && this.state.mobilePanel !== 'sidepanel'}\n          state={this.state.sidePanelSelected}\n          title={this.state.sidePanelTitle}\n          avatar={this.state.sidePanelAvatar}\n          login={this.state.login}\n          persist={this.state.persist}\n          myUserId={this.state.myUserId}\n          loginDisabled={this.state.loginDisabled}\n          loadSpinnerVisible={this.state.loadSpinnerVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          topicSelected={this.state.topicSelected}\n          chatList={this.state.chatList}\n          credMethod={this.state.credMethod}\n          credCode={this.state.credCode}\n\n          transport={this.state.transport}\n          messageSounds={this.state.messageSounds}\n          desktopAlerts={this.state.desktopAlerts}\n          desktopAlertsEnabled={this.state.desktopAlertsEnabled}\n          incognitoMode={this.state.incognitoMode}\n          serverAddress={this.state.serverAddress}\n          serverVersion={this.state.serverVersion}\n\n          onGlobalSettings={this.handleGlobalSettings}\n          onSignUp={this.handleNewAccount}\n          onSettings={this.handleSettings}\n          onBasicNavigate={this.basicNavigator}\n          onLoginRequest={this.handleLoginRequest}\n          onPersistenceChange={this.handlePersistenceChange}\n          onCreateAccount={this.handleNewAccountRequest}\n          onUpdateAccount={this.handleUpdateAccountRequest}\n          onUpdateAccountTags={this.handleUpdateAccountTagsRequest}\n          onTogglePushNotifications={this.togglePushToken}\n          onToggleMessageSounds={this.handleToggleMessageSounds}\n          onToggleIncognitoMode={this.handleToggleIncognitoMode}\n          onCredAdd={this.handleCredAdd}\n          onCredDelete={this.handleCredDelete}\n          onCredConfirm={this.handleCredConfirm}\n          onTopicSelected={this.handleTopicSelected}\n          onCreateTopic={this.handleStartTopicRequest}\n          onLogout={this.handleLogout}\n          onDeleteAccount={this.handleDeleteAccount}\n          onShowAlert={this.handleShowAlert}\n          onCancel={this.handleSidepanelCancel}\n          onError={this.handleError}\n          onValidateCredentials={this.handleValidateCredentialsRequest}\n          onPasswordResetRequest={this.handlePasswordResetRequest}\n          onResetPassword={this.handleResetPassword}\n          onShowArchive={this.handleShowArchive}\n          onShowBlocked={this.handleShowBlocked}\n\n          onInitFind={this.tnInitFind}\n          searchResults={this.state.searchResults}\n          onSearchContacts={this.handleSearchContacts}\n\n          showContextMenu={this.handleShowContextMenu} />\n\n        <MessagesView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          ready={this.state.ready}\n          online={this.state.topicSelectedOnline}\n          acs={this.state.topicSelectedAcs}\n          displayMobile={this.state.displayMobile}\n          viewportWidth={this.state.viewportWidth}\n          viewportHeight={this.state.viewportHeight}\n          hideSelf={this.state.displayMobile &&\n            (this.state.mobilePanel !== 'topic-view' || this.state.showInfoPanel)}\n          topic={this.state.topicSelected}\n          myUserId={this.state.myUserId}\n          serverVersion={this.state.serverVersion}\n          serverAddress={this.state.serverAddress}\n          applicationVisible={this.state.applicationVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          newTopicParams={this.state.newTopicParams}\n\n          onHideMessagesView={this.handleHideMessagesView}\n          onData={this.tnData}\n          onError={this.handleError}\n          onNewTopicCreated={this.handleNewTopicCreated}\n          showContextMenu={this.handleShowContextMenu}\n          onChangePermissions={this.handleChangePermissions}\n          onNewChat={this.handleNewChatInvitation}\n          sendMessage={this.handleSendMessage} />\n\n        {this.state.showInfoPanel ?\n          <InfoView\n            tinode={this.tinode}\n            connected={this.state.connected}\n            displayMobile={this.state.displayMobile}\n            topic={this.state.topicSelected}\n            searchableContacts={this.state.searchableContacts}\n            myUserId={this.state.myUserId}\n\n            errorText={this.state.errorText}\n            errorLevel={this.state.errorLevel}\n            errorAction={this.state.errorAction}\n            errorActionText={this.state.errorActionText}\n\n            onTopicDescUpdate={this.handleTopicUpdateRequest}\n            onCancel={this.handleHideInfoView}\n            onShowAlert={this.handleShowAlert}\n            onChangePermissions={this.handleChangePermissions}\n            onMemberUpdateRequest={this.handleMemberUpdateRequest}\n            onDeleteMessages={this.handleDeleteMessagesRequest}\n            onLeaveTopic={this.handleLeaveUnsubRequest}\n            onBlockTopic={this.handleBlockTopicRequest}\n            onReportTopic={this.handleReportTopic}\n            onAddMember={this.handleManageGroupMembers}\n            onTopicTagsUpdate={this.handleTagsUpdated}\n            onInitFind={this.tnInitFind}\n            onError={this.handleError}\n\n            showContextMenu={this.handleShowContextMenu}\n            />\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(TinodeWeb);\n","// Put all packages together.\n// Used to generate umd/index.prod.js\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { IntlProvider } from 'react-intl';\n\nimport allMessages from './messages.json';\nimport TinodeWeb from './views/tinode-web.jsx';\nimport HashNavigation from './lib/navigation.js';\n\n// Detect human language to use in the UI:\n//  Check parameters from URL hash #?hl=ru, then browser, then use 'en' as a fallback.\nconst { params } = HashNavigation.parseUrlHash(window.location.hash);\nconst language = (params && params.hl) ||\n  (navigator.languages && navigator.languages[0]) ||\n  navigator.language ||\n  navigator.userLanguage ||\n  'en';\n\n// Get the base language 'en' from a more specific 'en_GB' or 'en-US' as a partial fallback.\nconst baseLanguage = language.toLowerCase().split(/[-_]/)[0];\n\n// Try the full locale first, then the locale without the region code, fallback to 'en'.\nconst messages =\n  allMessages[language] ||\n  allMessages[baseLanguage] ||\n  allMessages.en;\n\nReactDOM.render(\n  <IntlProvider locale={language} messages={messages} textComponent={React.Fragment}>\n    <TinodeWeb />\n  </IntlProvider>,\n  document.getElementById('mountPoint')\n);\n","// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// startup\n// Load entry module and return exports\n// This entry module doesn't tell about it's top-level declarations so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[619](0, __webpack_exports__, __webpack_require__);\n"],"sourceRoot":""}