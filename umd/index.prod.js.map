{"version":3,"sources":["webpack://tinode-webapp/external \"React\"","webpack://tinode-webapp/external \"ReactDOM\"","webpack://tinode-webapp/external \"ReactIntl\"","webpack://tinode-webapp/external \"firebase\"","webpack://tinode-webapp/external \"Tinode\"","webpack://tinode-webapp/external [\"firebase\",\"messaging\"]","webpack://tinode-webapp/./src/widgets/alert.jsx","webpack://tinode-webapp/./src/version.js","webpack://tinode-webapp/./src/config.js","webpack://tinode-webapp/./src/widgets/context-menu.jsx","webpack://tinode-webapp/./src/lib/strformat.js","webpack://tinode-webapp/./src/widgets/letter-tile.jsx","webpack://tinode-webapp/./src/widgets/load-spinner.jsx","webpack://tinode-webapp/./src/lib/blob-helpers.js","webpack://tinode-webapp/./src/widgets/avatar-upload.jsx","webpack://tinode-webapp/./src/widgets/badge-list.jsx","webpack://tinode-webapp/./src/widgets/checkbox.jsx","webpack://tinode-webapp/./src/widgets/contact-badges.jsx","webpack://tinode-webapp/./src/lib/utils.js","webpack://tinode-webapp/./src/widgets/received-marker.jsx","webpack://tinode-webapp/./src/widgets/unread-badge.jsx","webpack://tinode-webapp/./src/widgets/contact.jsx","webpack://tinode-webapp/./src/widgets/contact-action.jsx","webpack://tinode-webapp/./src/widgets/contact-list.jsx","webpack://tinode-webapp/./src/widgets/menu-cancel.jsx","webpack://tinode-webapp/./src/widgets/error-panel.jsx","webpack://tinode-webapp/./src/widgets/chip.jsx","webpack://tinode-webapp/./src/widgets/chip-input.jsx","webpack://tinode-webapp/./src/widgets/group-manager.jsx","webpack://tinode-webapp/./src/widgets/visible-password.jsx","webpack://tinode-webapp/./src/widgets/in-place-edit.jsx","webpack://tinode-webapp/./src/widgets/more-button.jsx","webpack://tinode-webapp/./src/widgets/permissions-editor.jsx","webpack://tinode-webapp/./src/widgets/tag-manager.jsx","webpack://tinode-webapp/./src/views/info-view.jsx","webpack://tinode-webapp/./src/widgets/file-progress.jsx","webpack://tinode-webapp/./src/widgets/attachment.jsx","webpack://tinode-webapp/./src/widgets/uploading-image.jsx","webpack://tinode-webapp/./src/widgets/chat-message.jsx","webpack://tinode-webapp/./src/widgets/send-message.jsx","webpack://tinode-webapp/./src/widgets/doc-preview.jsx","webpack://tinode-webapp/./src/widgets/group-subs.jsx","webpack://tinode-webapp/./src/widgets/image-preview.jsx","webpack://tinode-webapp/./src/widgets/invitation.jsx","webpack://tinode-webapp/./src/views/logo-view.jsx","webpack://tinode-webapp/./src/lib/navigation.js","webpack://tinode-webapp/./src/views/messages-view.jsx","webpack://tinode-webapp/./src/widgets/button-back.jsx","webpack://tinode-webapp/./src/widgets/menu-contacts.jsx","webpack://tinode-webapp/./src/widgets/menu-start.jsx","webpack://tinode-webapp/./src/widgets/side-navbar.jsx","webpack://tinode-webapp/./src/widgets/cropper.jsx","webpack://tinode-webapp/./src/views/avatar-crop-view.jsx","webpack://tinode-webapp/./src/views/contacts-view.jsx","webpack://tinode-webapp/./src/lib/local-storage.js","webpack://tinode-webapp/./src/views/create-account-view.jsx","webpack://tinode-webapp/./src/views/edit-account-view.jsx","webpack://tinode-webapp/./src/views/acc-general-view.jsx","webpack://tinode-webapp/./src/views/acc-notifications-view.jsx","webpack://tinode-webapp/./src/views/acc-security-view.jsx","webpack://tinode-webapp/./src/views/acc-support-view.jsx","webpack://tinode-webapp/./src/views/login-view.jsx","webpack://tinode-webapp/./src/widgets/new-topic-by-id.jsx","webpack://tinode-webapp/./src/widgets/new-topic-group.jsx","webpack://tinode-webapp/./src/widgets/search-contacts.jsx","webpack://tinode-webapp/./src/views/new-topic-view.jsx","webpack://tinode-webapp/./src/views/password-reset-view.jsx","webpack://tinode-webapp/./src/widgets/host-selector.jsx","webpack://tinode-webapp/./src/views/settings-view.jsx","webpack://tinode-webapp/./src/views/validation-view.jsx","webpack://tinode-webapp/./src/views/sidepanel-view.jsx","webpack://tinode-webapp/./src/lib/host-name.js","webpack://tinode-webapp/./src/views/tinode-web.jsx","webpack://tinode-webapp/./src/index.js","webpack://tinode-webapp/webpack/bootstrap","webpack://tinode-webapp/webpack/runtime/compat get default export","webpack://tinode-webapp/webpack/runtime/define property getters","webpack://tinode-webapp/webpack/runtime/hasOwnProperty shorthand","webpack://tinode-webapp/webpack/startup"],"names":["React","ReactDOM","ReactIntl","firebase","messaging","Tinode","Alert","render","this","props","visible","className","title","content","onReject","onClick","reject","FormattedMessage","id","defaultMessage","onConfirm","confirm","PACKAGE_VERSION","APP_NAME","KNOWN_HOSTS","hosted","local","DEFAULT_HOST","KEYPRESS_DELAY","DEFAULT_P2P_ACCESS_MODE","REM_SIZE","AVATAR_SIZE","MAX_INBAND_ATTACHMENT_SIZE","MAX_EXTERN_ATTACHMENT_SIZE","MAX_IMAGE_DIM","MAX_TITLE_LENGTH","messages","defineMessages","info","clear_messages","clear_for_all","delete","delete_for_all","send_retry","mute","unmute","topic_delete","topic_delete_warning","delete_messages_warning","unblock","block","topic_block_warning","member_delete","archive","unarchive","edit_permissions","clear_messages_warning","ContextMenu","constructor","super","formatMessage","intl","handlePageClick","bind","handleEscapeKey","handleClick","MenuItems","handler","params","errorHandler","onShowAlert","deleteMessages","message","retryMessage","topicPermissionSetter","then","ctrl","onTopicRemoved","topicName","topic","tinode","getTopic","delTopic","catch","err","console","log","user","delSubscription","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","e","contains","target","preventDefault","stopPropagation","hide","keyCode","item","items","currentTarget","dataset","onAction","onError","all","hard","cancelSend","seq","delMessagesAll","delMessagesList","flushMessage","msg","createMessage","publishDraft","mode","result","updateMode","count","menu","map","push","key","vSize","length","position","left","bounds","right","clickAt","x","top","bottom","y","style","injectIntl","shortDateFormat","locale","window","navigator","userLanguage","language","now","Date","getFullYear","getMonth","getDate","toLocaleTimeString","hour12","hour","minute","toLocaleDateString","month","day","year","bytesToHumanSize","bytes","sizes","bucket","Math","min","floor","log2","pow","round","toFixed","LetterTile","avatar","isGroup","iconColor","abs","value","hash","i","charCodeAt","stringHash","trim","letter","charAt","alt","src","onerror","LoadSpinner","large","clear","centered","show","SUPPORTED_IMAGE_FORMATS","MIME_EXTENSIONS","makeImageDataUrl","photo","data","type","startsWith","ref","fitImageSize","width","height","maxWidth","maxHeight","forceSquare","scale","size","dstWidth","dstHeight","srcWidth","srcHeight","xoffset","yoffset","imageScaled","fileOrBlob","maxSize","onSuccess","img","Image","crossOrigin","onload","async","URL","revokeObjectURL","dim","canvas","createElement","ctx","getContext","imageSmoothingEnabled","drawImage","mime","includes","blob","Promise","resolve","toBlob","clearRect","fname","idx","indexOf","ext","at","lastIndexOf","substring","fileNameForMime","name","createObjectURL","fileToBase64","file","reader","FileReader","split","readAsDataURL","blobToBase64","AvatarUpload","state","dataUrl","uploading","handleFileUpload","componentDidUpdate","prevProps","setState","image","files","uploader","getLargeFileHelper","cannot_initiate_upload","upload","url","onImageChanged","finally","unused","base64bits","du","randId","random","substr","readOnly","href","uid","accept","onChange","htmlFor","icon_mapping","badge_verified","badge_staff","badge_danger","BadgeList","badges","trustedBadges","b","comment","CheckBox","handleChange","checked","ContactBadges","color","icon","updateFavicon","oldIcon","getElementById","head","getElementsByTagName","newIcon","rel","removeChild","appendChild","theCard","fn","imageUrl","imageMimeType","card","mimeType","matches","exec","arrayEqual","a","Array","isArray","sort","l","sanitizeUrl","allowedSchemes","replace","test","schemes","join","RegExp","deliveryMarker","received","message_sending","message_sending_failed","ReceivedMarker","timestamp","marker","UnreadBadge","drafty_image","drafty_form","drafty_attachment","Contact","handleContextClick","onSelected","index","showContextMenu","pageY","pageX","online","slice","icon_badges","isVerified","isStaff","isDangerous","acs","showMode","getMode","isMuted","isJoiner","subtitle","preview","Drafty","draftyFormatter","showCheckmark","selected","showOnline","isChannel","unread","values","el","attr","concat","ContactAction","action","badge_you","badge_owner","ContactList","topicSelected","contactNodes","contactsCount","contacts","c","filterFunc","filter","filterOn","private","toLowerCase","public","myUserId","isOwner","deliveryStatus","latestMessage","_status","msgStatus","showUnread","connected","onTopicSelected","trusted","verified","staff","danger","noScroll","dangerouslySetInnerHTML","__html","emptyListMessage","MenuCancel","onCancel","ErrorPanel","level","onClearError","warn","text","whiteSpace","actionText","Chip","handleCancel","invalid","noAvatar","required","ChipInput","deriveStateFromProps","input","focused","handleTextInput","removeChipAt","handleChipCancel","handleFocusGained","handleFocusLost","handleKeyDown","placeholder","chips","prompt","sortedChips","sortChips","staticMembers","chipIndex","indexChips","prevState","keep","normal","removed","onChipRemoved","onFocusLost","onEnter","undefined","avatarDisabled","onFocus","onBlur","onKeyDown","autoFocus","no_contacts","contacts_not_found_short","GroupManager","members","indexMembers","keepInitialMembers","requiredMember","contactFilter","noContactsMessage","selectedContacts","handleContactSelected","handleMemberRemoved","handleContactFilter","handleSubmit","m","delta","present","keepInitial","stat","sel","userId","status","splice","val","query","instance","added","Object","keys","k","onSubmit","doContactFiltering","VisiblePassword","handleVisibility","handeTextChange","handleEditingFinished","onFinished","setTimeout","activeElement","tabIndex","autoComplete","InPlaceEdit","active","initialValue","handleStartEditing","handlePasswordFinished","newValue","focus","event","checkValidity","fieldType","spanText","spanClass","MoreButton","open","handleToggle","onToggle","joiner","writer","preser","approver","sharer","deleter","owner","PermissionsEditor","names","skip","compare","userTitle","userAvatar","modeTitle","compareTitle","TagManager","tags","tagInput","activated","handleTagInput","handleAddTag","handleRemoveTag","nextProps","last","tag","maxTagCount","getServerLimit","onTagsChanged","minTagLength","maxTagLength","add_tags_prompt","requested","granted","other_user","delete_messages","leave_chat","leave_chat_warning","block_contact","block_contact_warning","report_chat","report_chat_warning","InfoView","admin","muted","address","groupTopic","channel","fullName","selectedContact","access","modeGiven","modeWant","modeGiven2","modeWant2","auth","anon","contactList","showMemberPanel","showPermissionEditorFor","moreInfoExpanded","previousMetaDesc","previousSubsUpdated","previousTagsUpdated","resetSubs","resetDesc","onMetaDesc","onSubsUpdated","onTagsUpdated","handleFullNameUpdate","handlePrivateUpdate","handleImageChanged","handleMuted","handlePermissionsChanged","handleLaunchPermissionsEditor","handleHidePermissionsEditor","handleShowAddMembers","handleHideAddMembers","handleMemberUpdateRequest","handleDeleteMessages","handleLeave","handleBlock","handleReport","handleMemberSelected","handleMoreInfo","handleTagsUpdated","handleContextMenu","getType","newState","user2","subscriber","getGiven","getWant","subscribers","sub","defacs","getDefaultAccess","getAccessMode","entries","isAdmin","isSharer","isDeleter","isGroupType","isChannelType","getMeta","startMetaQuery","withTags","build","desc","subs","onTopicDescUpdate","ignored","onChangePermissions","perm","userPermissionsEdited","which","toEdit","toCompare","toSkip","titleEdit","titleCompare","userPermissionsTitle","userPermissionsAvatar","editedPermissions","immutablePermissions","editedPermissionsTitle","immutablePermissionsTitle","editedPermissionsSkipped","onInitFind","onMemberUpdateRequest","onDeleteMessages","onLeaveTopic","onBlockTopic","onReportTopic","onTopicTagsUpdate","menuItems","displayMobile","errorLevel","errorText","searchableContacts","private_placeholder","more","no_members","FileProgress","progress","Attachment","downloader","downloadFile","filename","mimetype","download","loaded","onCancelUpload","cancel","helperFunc","isUrlRelative","downloadUrl","downloadWidget","UploadingImage","ChatMessage","onProgress","handleProgress","handleImagePreview","handleFormButtonClick","handleCancelUpload","onImagePreview","resp","act","onFormResponse","MESSAGE_STATUS_FAILED","ratio","sideClass","deleted","sequence","response","bubbleClass","fullDisplay","userFrom","attachments","att","userName","notFound","viewportWidth","minWidth","minHeight","authorizeURL","sanitizeImageUrl","loading","inner","child","messaging_disabled","type_new_message","add_image_caption","file_attachment_too_large","SendMessage","keypressTimestamp","getTime","handlePasteEvent","handleAttachImage","handleAttachFile","handleSend","handleKeyPress","handleMessageTyping","messageEditArea","disabled","onImageSuccess","onAttachmentSuccess","clipboardData","originalEvent","kind","getAsFile","imageFileScaledToBase64","imageFileToBase64","filePasted","bits","onAttachImage","onAttachFile","acceptBlank","noInput","onSendMessage","shiftKey","onKeyPress","messagePrompt","attachImage","click","attachFile","display","DocPreview","handleSendDoc","caption","onClose","mimeToIcon","default","video","iconFromMime","GroupSubs","usersOnline","totalCount","countToShow","some","overflow","ImagePreview","handleSendImage","assignWidth","node","getBoundingClientRect","maxlength","max","Invitation","handleButtonAction","evt","LogoView","version","serverVersion","serverAddress","HashNavigation","parts","path","forEach","part","decodeURIComponent","location","args","hasOwnProperty","parsed","parseUrlHash","composeUrlHash","sidepanel","online_now","last_seen","not_found","isUnconfirmed","ex","getExcessive","isPeerRestricted","ms","getMissing","MessagesView","getDerivedStateFromProps","leave","sendImageAttachment","sendFileAttachment","sendKeyPress","handleScrollReference","handleScrollEvent","handleDescChange","handleSubsUpdated","handleNewMessage","handleAllMessagesReceived","handleInfoReceipt","handleImagePostview","handleClosePreview","handleFormResponse","handleShowContextMenuMessage","handleNewChatAcceptance","handleEnablePeer","postReadNotification","clearNotificationQueue","readNotificationQueue","readNotificationTimer","messagesScroller","scrollTop","scrollHeight","scrollPosition","viewportHeight","onData","onAllMessagesReceived","onInfo","onPres","applicationVisible","isSubscribed","ready","newTopic","newTopicParams","_topicName","getQuery","withLaterDesc","withLaterSub","isReader","withLaterData","withLaterDel","fetchingMessages","setQuery","subscribe","code","onNewTopicCreated","queuedMessages","pub","_sending","publishMessage","setUrlTopic","blankState","nextState","docPreview","imagePreview","imagePostview","typingIndicator","msgs","assign","onlineSubs","peer","p2pPeerDesc","peerMessagingDisabled","isWriter","readingBlocked","unconformed","unconfirmed","oldTopicName","isTopicCached","oldTopic","msgHasMoreMessages","getMessagesPage","setInterval","clearInterval","n","shift","sendAt","noteRead","setMilliseconds","getMilliseconds","isNewMessage","from","what","clearTimeout","keyPressTimer","forceUpdate","sendMessage","attachJSON","parse","searchParams","set","search","messageSpecificMenuItems","onNewChat","noteKeyPress","maxInbandAttachmentSize","uploadCompletionPromise","urlPromise","maxExternAttachmentSize","limit","tinyMine","tinyBlob","blobMime","tinyBits64","insertImage","_tempPreview","appendLineBreak","append","init","bits64","found","find","_cancelled","component","hideSelf","component2","messageNodes","previousFrom","chatBoxClass","nextFrom","thisFrom","isReply","userDesc","hi","ts","_uploader","lastSeen","cont","getMeTopic","getContact","seen","when","onHideMessagesView","ButtonBack","onBack","MenuContacts","onNewTopic","onSettings","MenuStart","onSignUp","SideNavbar","Cropper","panX","panY","originX","originY","zoom","minZoom","maxZoom","overlay","cutout","boundingBox","imageWidth","imageHeight","mouseX","mouseY","prevDistance","cutoutRect","bBoxRect","initScaling","handleZoom","mouseDown","mouseUp","mouseMove","mouseTouch","positionAll","translate","current","passive","currPan","nextDiff","imgRect","imgLeft","imgRight","coLeft","coRight","imgTop","imgBottom","coTop","coBottom","touches","body","dX","dY","checkBound","touch0","touch1","distance","sqrt","t3d","orig","source","transform","transformOrigin","onLoad","step","AvatarCropView","archived_contacts_title","ContactsView","handleAction","unreadThreads","archivedCount","chatList","blocked","arch","touched","action_ignored","onShowArchive","LocalStorageUtil","localStorage","setItem","JSON","stringify","getItem","oldVal","getObject","setObject","removeItem","CreateAccountView","login","password","email","imageDataUrl","errorCleared","saveToken","handleLoginChange","handlePasswordChange","handleEmailChange","handleFnChange","handleToggleSaveToken","onCreateAccount","submitClasses","login_prompt","password_prompt","full_name_prompt","email_prompt","stay_logged_in","EditAccountView","me","onBasicNavigate","AccGeneralView","credentials","getCredentials","addCredActive","addCredInvalid","newCred","previousOnTags","tnNewTags","tnCredsUpdated","handleCredChange","handleCredKeyDown","handleCredEntered","onCredsUpdated","creds","onUpdateAccount","method","asPhone","asEmail","onCredAdd","onUpdateTags","cred","meth","done","onCredConfirm","onCredDelete","full_name_placeholder","title_tag_manager","handleCheckboxClick","onToggleMessageSounds","onTogglePushNotifications","onToggleIncognitoMode","messageSounds","desktopAlertsEnabled","desktopAlerts","incognitoMode","delete_account","delete_account_warning","AccSecurityView","blockedCount","handlePasswordUpdate","handleDeleteAccount","pwd","onDeleteAccount","password_unchanged","onLogout","onShowBlocked","AccSupportView","LoginView","hostName","persist","onPersistenceChange","onLogin","autoCorrect","autoCapitalize","invalid_id","NewTopicById","groupId","prefix","NewTopicGroup","handlePrivateChange","handleTagsChanged","handleChannelToggle","SearchContacts","edited","handleSearchChange","handleSearch","handleClear","onSearchContacts","search_placeholder","search_for_contacts","search_no_results","NewTopicView","tabSelected","searchQuery","handleTabClick","handleSearchContacts","handleNewGroupSubmit","handleGroupByID","addUrlParam","removeUrlParam","onCreateTopic","priv","no_contacts_placeholder","searchResults","PasswordResetView","token","scheme","onReset","onRequest","reset","HostSelector","changed","handleHostNameChange","onServerAddressChange","hostOptions","list","SettingsView","transport","handleTransportSelected","handleServerAddressChange","onUpdate","def","ws","lp","transportOptions","phone","ValidationView","credCode","credMethod","numbers_only","register","settings","edit","general","security","notif","support","newtpk","crop","SidepanelView","handleNewTopic","view","errorAction","errorActionText","loadSpinnerVisible","loginDisabled","onLoginRequest","onGlobalSettings","onUpdateAccountTags","onValidateCredentials","onPasswordResetRequest","onResetPassword","onAvatarCropped","detectServerAddress","host","protocol","hostname","port","isSecureConnection","POP_SOUND","Audio","reconnect_countdown","reconnect_now","push_init_failed","invalid_security_token","no_connection","code_doesnot_match","menu_item_info","TinodeWeb","getBlankState","handleResize","handleHashRoute","handleOnline","checkForAppUpdate","handleVisibilityEvent","handleError","handleLoginRequest","handlePersistenceChange","handleConnected","handleAutoreconnectIteration","doLogin","handleCredentialsRequest","handleLoginSuccessful","handleDisconnect","tnMeMetaDesc","tnMeContactUpdate","tnMeSubsUpdated","resetContactList","tnData","tnInitFind","tnFndSubsUpdated","handleTopicSelected","handleHideMessagesView","handleSendMessage","handleNewChatInvitation","handleNewAccount","handleNewAccountRequest","handleUpdateAccountRequest","handleUpdateAccountTagsRequest","handleToggleIncognitoMode","handleSettings","handleGlobalSettings","handleShowArchive","handleShowBlocked","handleToggleMessageSounds","handleCredAdd","handleCredDelete","handleCredConfirm","initFCMessaging","togglePushToken","requestPushToken","handlePushMessage","handleSidepanelCancel","handleStartTopicRequest","handleNewTopicCreated","handleTopicUpdateRequest","handleChangePermissions","handleLogout","handleDeleteMessagesRequest","handleLeaveUnsubRequest","handleBlockTopicRequest","handleReportTopic","handleShowContextMenu","defaultTopicContextMenu","handleHideContextMenu","handleShowAlert","handleShowInfoView","handleHideInfoView","handleValidateCredentialsRequest","handlePasswordResetRequest","handleResetPassword","handleContextMenuAction","autoLogin","messageSoundsOff","FIREBASE_INIT","firebaseToken","hidden","sidePanelSelected","sidePanelTitle","sidePanelAvatar","myTrustedBadges","liveConnection","onLine","topicSelectedOnline","topicSelectedAcs","innerWidth","showInfoPanel","mobilePanel","contextMenuVisible","contextMenuBounds","contextMenuClickAt","contextMenuParams","contextMenuItems","alertVisible","alertParams","requestedTopic","BroadcastChannel","documentElement","clientWidth","clientHeight","tnSetup","onConnect","onDisconnect","onAutoreconnectIteration","setDeviceToken","parsedNav","expires","setAuthToken","connect","readTimer","readTimerCallback","persistentCache","onSetupCompleted","appName","apiKey","secure","setHumanLanguage","enableLogging","oobNotification","fbPush","usePublicVapidKey","messagingVapidKey","serviceWorker","reg","useServiceWorker","postMessage","onTokenRefresh","onMessage","payload","mobile","onupdatefound","installingWorker","installing","onstatechange","controller","getTopicAccessMode","newTopicTabSelected","tab","reconnectCountdown","reconnect","isConnected","initStorage","clearStorage","getServerInfo","ver","sec","prom","timeLeft","seconds","secondsToTime","isAuthenticated","promise","getAuthToken","loginBasic","loginToken","goToTopic","onContactUpdate","getCurrentUserID","withDesc","withCred","disconnect","urlHash","setUrlSidePanel","isPresencer","archived","isArchived","play","foundContacts","merged","updated","prepareSearchableContacts","receivedTimer","noteRecv","fnd","getFndTopic","withSub","s","setMeta","isTopicOnline","isP2PType","am","updateWant","login_","password_","public_","cred_","tags_","createAccountBasic","updateAccountBasic","getCurrentLogin","on","enabled","requestPermission","deleteToken","getToken","refreshedToken","delCredential","basicNavigator","newGroupTopicName","oldName","newName","permissions","updateGiven","delCurrentUser","publish","self_blocked","subscribed","confirmText","rejectText","invite","requestResetAuthSecret","newPassword","str","btoa","atob","base64ReEncode","onAddMember","handleManageGroupMembers","hl","languages","baseLanguage","allMessages","IntlProvider","textComponent","__webpack_require__","module","getter","__esModule","d","exports","definition","o","defineProperty","enumerable","get","obj","prop","prototype","call","__webpack_modules__"],"mappings":"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","file":"index.prod.js","sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = React;","const __WEBPACK_NAMESPACE_OBJECT__ = ReactDOM;","const __WEBPACK_NAMESPACE_OBJECT__ = ReactIntl;","const __WEBPACK_NAMESPACE_OBJECT__ = firebase;","const __WEBPACK_NAMESPACE_OBJECT__ = Tinode;","const __WEBPACK_NAMESPACE_OBJECT__ = firebase.messaging;","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Alert extends React.PureComponent {\n  render() {\n    return this.props.visible ?\n      <div className=\"alert-container\">\n        <div className=\"alert\">\n          <div className=\"title\">{this.props.title}</div>\n          <div className=\"content\">{this.props.content}</div>\n          <div className=\"dialog-buttons\">\n            {this.props.onReject ?\n              <button className=\"outline\" onClick={this.props.onReject}>\n                {this.props.reject || <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />}\n              </button>\n              :\n              null\n            }\n            <button className=\"primary\" onClick={this.props.onConfirm}>\n              {this.props.confirm || <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\"  />}\n            </button>\n          </div>\n        </div>\n      </div>\n    :\n    null;\n  }\n};\n","// This is a generated file. Don't edit.\n\nexport const PACKAGE_VERSION = \"0.18.0-alpha1\";\n","import { PACKAGE_VERSION } from './version.js';\n\n// Name of this application, used in the User-Agent.\nexport const APP_NAME = 'TinodeWeb/' + (PACKAGE_VERSION || '0.17');\n\n// API key. Use https://github.com/tinode/chat/tree/master/keygen to generate your own\nexport const API_KEY = 'AQEAAAABAAD_rAp4DJh05a1HAwFT3A6K';\n\n// The array of possible hosts to connect to.\nexport const KNOWN_HOSTS = {hosted: 'web.tinode.co', local: 'localhost:6060'};\n\n// Default host name and port to connect to.\nexport const DEFAULT_HOST = KNOWN_HOSTS.hosted;\n\n// Enable console logging.\nexport const LOGGING_ENABLED = true;\n\n// Minimum time between two keypress notifications, milliseconds.\nexport const KEYPRESS_DELAY = 3*1000;\n// Delay before sending a {note} for reciving a message, milliseconds.\nexport const RECEIVED_DELAY = 500;\n// Delay before sending a read notification, milliseconds.\nexport const READ_DELAY = 1000;\n\n// The default shortest allowed tag length. Matches the value on the server.\nexport const MIN_TAG_LENGTH = 2;\n// The default greatest allowed tag length. Matches the value on the server.\nexport const MAX_TAG_LENGTH = 96;\n// The default maximum number of tags allowed. Matches the value on the server.\nexport const MAX_TAG_COUNT = 16;\n\n// Access mode for P2P subscriptions initiated by the current user.\nexport const DEFAULT_P2P_ACCESS_MODE = 'JRWPS';\n// Access mode for new group topics created by the current user.\nexport const NEW_GRP_ACCESS_MODE = 'JRWPSAO';\n// Access mode for a channel.\nexport const CHANNEL_ACCESS_MODE = 'JR';\n\n// Access mode for no access.\nexport const NO_ACCESS_MODE = 'N';\n\n// Mediaquery breakpoint between desktop and mobile, in px. Should match the value\n// in @media (max-size: 640px) in base.css\nexport const MEDIA_BREAKPOINT = 640;\n// Size of css 'rem' unit in pixels. Default 1rem = 10pt = 13px.\nexport const REM_SIZE = 13;\n\n// Size of the avatar image: when an image is uploaded, it's resized to\n// a square of this size or less.\nexport const AVATAR_SIZE = 384;\n\n// Maximum size of an avatar in bytes for sending in-band. Bigger avatars will be sent out of band (as uploads).\nexport const MAX_AVATAR_BYTES = 8192;\n\n// Size of the broken_image shown in MessagesView\nexport const BROKEN_IMAGE_SIZE = 32;\n\n// Number of chat messages to fetch in one call.\nexport const MESSAGES_PAGE = 24;\n\n// Default maximum in-band (included directly into the message) attachment size which fits into\n// a message of 256K in size. Used when the server-provided value is unavailable. The actual\n// binary size of the attachment should be smaller due to base64 encoding expansion and some overhead,\n// for instance 1024 bytes.\n// Increase this limit to a greater value in production, if desired. Also increase\n// max_message_size in the server config.\nexport const MAX_INBAND_ATTACHMENT_SIZE = 262144;\n\n// Default absolute maximum attachment size to be used with the server = 8MB.\n// Used when the server-provided value is unavailable. Increase to something like 100MB in production.\nexport const MAX_EXTERN_ATTACHMENT_SIZE = 1 << 23;\n\n// Maximum allowed linear dimension (pixels) of an image sent inline. Larger images will be shrunk\n// to make the larger dimension fit under this size. You may want to adjust it to 1600 or\n// 2400 for production.\nexport const MAX_IMAGE_DIM = 1024;\n\n// Linear dimensions of image preview: shrink image under this size for previews.\nexport const IMAGE_PREVIEW_DIM = 64;\n\n// Maximum number of online users to be shown in a topic title bar. Others will be\n// hidden under \"+X more\"\nexport const MAX_ONLINE_IN_TOPIC = 4;\n\n// Maximum length of user name, topic title, and private comment.\nexport const MAX_TITLE_LENGTH = 60;\n\n// Length of message previews in chat list, in characters.\nexport const MESSAGE_PREVIEW_LENGTH = 80;\n\n// Link for \"Contact Us\".\nexport const LINK_CONTACT_US = 'email:support@tinode.co';\n\n// Link to Privacy Policy.\nexport const LINK_PRIVACY_POLICY = 'https://tinode.co/privacy.html';\n\n// Link to Terms of Service.\nexport const LINK_TERMS_OF_SERVICE = 'https://tinode.co/terms.html';\n","// Context Menu: popup/dropdown menu.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { injectIntl, defineMessages } from 'react-intl';\n\nimport { REM_SIZE } from '../config.js';\nimport HashNavigation from '../lib/navigation.js';\n\nconst messages = defineMessages({\n  info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  },\n  clear_messages: {\n    id: 'menu_item_clear_messages',\n    defaultMessage: 'Clear messages',\n    description: 'Delete all messages'\n  },\n  clear_for_all: {\n    id: 'menu_item_clear_messages_for_all',\n    defaultMessage: 'Clear for All',\n    description: 'Delete all message(s) for all members'\n  },\n  delete: {\n    id: 'menu_item_delete',\n    defaultMessage: 'Delete',\n    description: 'Delete selected messages'\n  },\n  delete_for_all: {\n    id: 'menu_item_delete_for_all',\n    defaultMessage: 'Delete for All',\n    description: 'Delete selected message(s) for all members'\n  },\n  send_retry: {\n    id: 'menu_item_send_retry',\n    defaultMessage: 'Retry',\n    description: 'Retry sending message'\n  },\n  mute: {\n    id: 'menu_item_mute',\n    defaultMessage: 'Mute',\n    description: 'Turn off notifications'\n  },\n  unmute: {\n    id: 'menu_item_unmute',\n    defaultMessage: 'Unmute',\n    description: 'Turn notifications on'\n  },\n  topic_delete: {\n    id: 'menu_item_delete_topic',\n    defaultMessage: 'Delete',\n    description: 'Delete entire topic'\n  },\n  topic_delete_warning: {\n    id: 'topic_delete_warning',\n    defaultMessage: 'Are you sure you want to delete this conversation?',\n    description: 'Alert warning when deleting entire topic'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  unblock: {\n    id: 'menu_item_unblock',\n    defaultMessage: 'Unblock',\n    description: 'Unblock topic or user'\n  },\n  // Generic string suitable for either topic or user.\n  block: {\n    id: 'menu_item_block',\n    defaultMessage: 'Block',\n    description: 'Block topic or user'\n  },\n  topic_block_warning: {\n    id: 'topic_block_warning',\n    defaultMessage: 'Are you sure you want to block this conversation?',\n    description: 'Alert warning when blocking a topic.'\n  },\n  member_delete: {\n    id: 'menu_item_member_delete',\n    defaultMessage: 'Remove',\n    description: 'Remove user from topic'\n  },\n  archive: {\n    id: 'menu_item_archive_topic',\n    defaultMessage: 'Archive',\n    description: 'Move topic from the list of active chats to archive'\n  },\n  unarchive: {\n    id: 'menu_item_restore_topic',\n    defaultMessage: 'Restore',\n    description: 'Restore topic from archive'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n});\n\nclass ContextMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const {formatMessage} = props.intl;\n\n    this.handlePageClick = this.handlePageClick.bind(this);\n    this.handleEscapeKey = this.handleEscapeKey.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n\n    // Preconfigured menu items.\n    this.MenuItems = {\n      'topic_info': {\n        id: 'topic_info',\n        title: formatMessage(messages.info),\n        handler: null\n      },\n      'messages_clear': {\n        id: 'messages_clear',\n        title: formatMessage(messages.clear_messages),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.clear_messages), // title\n            formatMessage(messages.clear_messages_warning), // content\n            (() => { this.deleteMessages(true, false, params, errorHandler); }), // onConfirm\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'messages_clear_hard': {\n        id: 'messages_clear_hard',\n        title: formatMessage(messages.clear_for_all),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.clear_for_all), // title\n            formatMessage(message.delete_messages_warning), // content\n            (() => { return this.deleteMessages(true, true, params, errorHandler); }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'message_delete': {\n        id: 'message_delete',\n        title: formatMessage(messages.delete),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, false, params, errorHandler);\n        }\n      },\n      'message_delete_hard': {\n        id: 'message_delete_hard',\n        title: formatMessage(messages.delete_for_all),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, true, params, errorHandler);\n        }\n      },\n      'menu_item_send_retry': {\n        id: 'menu_item_send_retry',\n        title: formatMessage(messages.send_retry),\n        handler: (params, errorHandler) => {\n          return this.retryMessage(params, errorHandler);\n        }\n      },\n      'topic_unmute': {\n        id: 'topic_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'topic_mute': {\n        id: 'topic_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'topic_unblock': {\n        id: 'topic_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n      'topic_block': {\n        id: 'topic_block',\n        title: formatMessage(messages.block),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.block), // title\n            formatMessage(messages.topic_block_warning), // content\n            (() => {\n              return this.topicPermissionSetter('-JP', params, errorHandler).then((ctrl) => {\n                this.props.onTopicRemoved(params.topicName);\n                return ctrl;\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_delete': {\n        id: 'topic_delete',\n        title: formatMessage(messages.topic_delete),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.topic_delete), // title\n            formatMessage(messages.topic_delete_warning), // content\n            (() => {\n              const topic = this.props.tinode.getTopic(params.topicName);\n              if (!topic) {\n                console.log(\"Topic not found: \", params.topicName);\n                return;\n              }\n              return topic.delTopic(true).catch((err) => {\n                if (errorHandler) {\n                  errorHandler(err.message, 'err');\n                }\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_archive': {\n        id: 'topic_archive',\n        title: formatMessage(messages.archive),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic) {\n            console.log(\"Topic not found: \", params.topicName);\n            return;\n          }\n          return topic.archive(true).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      'topic_restore': {\n        id: 'topic_restore',\n        title: formatMessage(messages.unarchive),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic) {\n            console.log(\"Topic not found: \", params.topicName);\n            return;\n          }\n          return topic.archive(false).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      // menu_item_edit_permissions is defined elsewhere.\n      'permissions': {\n        id: 'permissions',\n        title: formatMessage(messages.edit_permissions),\n        handler: null\n      },\n      'member_delete': {\n        id: 'member_delete',\n        title: formatMessage(messages.member_delete),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic || !params.user) {\n            console.log(\"Topic or user not found: '\" + params.topicName + \"', '\" + params.user + \"'\");\n            return;\n          }\n          return topic.delSubscription(params.user).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      'member_mute': {\n        id: 'member_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'member_unmute': {\n        id: 'member_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'member_block': {\n        id: 'member_block',\n        title: formatMessage(messages.block),\n        handler: this.topicPermissionSetter.bind(this, '-JP')\n      },\n      'member_unblock': {\n        id: 'member_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handlePageClick, false);\n    document.addEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handlePageClick, false);\n    document.removeEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  handlePageClick(e) {\n    if (ReactDOM.findDOMNode(this).contains(e.target)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n  }\n\n  handleEscapeKey(e) {\n    if (e.keyCode === 27) {\n      this.props.hide();\n    }\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n    let item = this.props.items[e.currentTarget.dataset.id];\n    if (typeof item == 'string') {\n      item = this.MenuItems[item];\n    }\n\n    if (!item) {\n      console.log(\"Invalid menu item ID\", e.currentTarget.dataset.id);\n    } else {\n      this.props.onAction(\n        item.id,\n        item.handler(this.props.params, this.props.onError),\n        this.props.params);\n    }\n  }\n\n  // Menu Actions\n\n  deleteMessages(all, hard, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found: \", params.topicName);\n      return;\n    }\n\n    // We don't know if the message is still pending (e.g. attachment is being uploaded),\n    // so try cancelling first. No harm if we can't cancel.\n    // The message can be cancelled if transmission to the server has not\n    // started yet or if the message send has failed.\n    if (!all && topic.cancelSend(params.seq)) {\n      return;\n    }\n    // Can't cancel. Delete instead.\n    const promise = all ?\n      topic.delMessagesAll(hard) :\n      topic.delMessagesList([params.seq], hard);\n\n    return promise.catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Retries sending failed message.\n  retryMessage(params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    // Remove the existing message entry.\n    if (!topic || !topic.flushMessage(params.seq)) {\n      return;\n    }\n    const msg = topic.createMessage(params.content, false);\n    return topic.publishDraft(msg).catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Function is used by context menu to set permissions.\n  topicPermissionSetter(mode, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found\", params.topicName);\n      return;\n    }\n\n    let result = topic.updateMode(params.user, mode);\n    if (errorHandler) {\n      result = result.catch((err) => {\n        errorHandler(err.message, 'err');\n      });\n    }\n    return result;\n  }\n\n  render() {\n    let count = 0;\n    let menu = [];\n    this.props.items.map((item) => {\n      if (typeof item == 'string') {\n        item = this.MenuItems[item];\n      }\n      if (item && item.title) {\n        menu.push(\n          item.title == '-' ?\n            <li className=\"separator\" key={count} />\n            :\n            <li onClick={this.handleClick} data-id={count} key={count}>{item.title}</li>\n        );\n      }\n      count++;\n    });\n\n    // Ensure that menu is inside the app-container.\n    const hSize = 12 * REM_SIZE;\n    const vSize = REM_SIZE * (0.7 + menu.length * 2.5);\n    const left = (this.props.bounds.right - this.props.clickAt.x < hSize) ?\n        (this.props.clickAt.x - this.props.bounds.left - hSize) :\n        (this.props.clickAt.x - this.props.bounds.left);\n    const top = (this.props.bounds.bottom - this.props.clickAt.y < vSize) ?\n        (this.props.clickAt.y - this.props.bounds.top - vSize) :\n        (this.props.clickAt.y - this.props.bounds.top);\n\n    const position = {\n      left: left + 'px',\n      top: top + 'px'\n    };\n\n    return (\n      <ul className=\"menu\" style={position}>\n        {menu}\n      </ul>\n    );\n  }\n}\n\nexport default injectIntl(ContextMenu);\n","// Short representation of time in the past.\nexport function shortDateFormat(then, locale) {\n  locale = locale || window.navigator.userLanguage || window.navigator.language;\n  const now = new Date();\n  if (then.getFullYear() == now.getFullYear()) {\n    // Same year.\n    if (then.getMonth() == now.getMonth() && then.getDate() == now.getDate()) {\n      // Same month and day, show time only.\n      return then.toLocaleTimeString(locale, {hour12: false, hour: '2-digit', minute: '2-digit'});\n    }\n    // Different month and/or day, show month day, time.\n    return then.toLocaleDateString(locale,\n      {hour12: false, month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit'});\n  }\n  // Different year: just show the date.\n  return then.toLocaleDateString(locale, {year: 'numeric', month: 'short', day: 'numeric'});\n}\n\n// Convert seconds to minutes:seconds, i.e. 156 sec -> 2:36.\nexport function secondsToTime(seconds) {\n  const min = Math.floor(seconds / 60);\n  let sec = seconds % 60;\n  sec = sec < 10 ? `0${sec}` : sec;\n  return `${min}:${sec}`;\n}\n\n// Convert a number of bytes to human-readable format.\nexport function bytesToHumanSize(bytes) {\n  if (!bytes || bytes == 0) {\n    return '0 Bytes';\n  }\n\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n  const bucket = Math.min(Math.floor(Math.log2(bytes) / 10) | 0, sizes.length-1);\n  const count = bytes / Math.pow(1024, bucket);\n  const round = bucket > 0 ? (count < 3 ? 2 : (count < 30 ? 1 : 0)) : 0;\n  return count.toFixed(round) + ' ' + sizes[bucket];\n}\n\n// Get 32 bit integer hash value for a string. Ideally it should produce the same value\n// as Java's String#hash().\nexport function stringHash(value) {\n  let hash = 0;\n  value = '' + value;\n  for (let i = 0; i < value.length; i++) {\n    hash = ((hash << 5) - hash) + value.charCodeAt(i);\n    hash = hash & hash; // Convert to 32bit integer\n  }\n  return hash;\n}\n","import React from 'react';\n\nimport Tinode from 'tinode-sdk';\n\nimport { stringHash } from '../lib/strformat.js';\n\nexport default class LetterTile extends React.PureComponent {\n  render() {\n    let avatar;\n    if (this.props.avatar === true) {\n      const isGroup = (Tinode.topicType(this.props.topic) == 'grp');\n      const iconColor = (isGroup ? 'light-color' : 'dark-color')\n        + (Math.abs(stringHash(this.props.topic)) % 16);\n      if (this.props.topic && this.props.title && this.props.title.trim()) {\n        const letter = this.props.title.trim().charAt(0);\n        const className = 'lettertile ' + iconColor;\n        avatar = (<div className={className}><div>{letter}</div></div>)\n      } else {\n        const className = 'material-icons ' + iconColor;\n        avatar = isGroup ?\n          <i className={className}>group</i> : <i className={className}>person</i>;\n      }\n    } else if (this.props.avatar) {\n      // If avatar image is invalid, show a placeholder.\n      avatar = <img className=\"avatar\" alt=\"avatar\" src={this.props.avatar}\n        onError={(e)=>{e.target.onerror = null; e.target.src=\"/img/broken_image.png\"}} />;\n    } else {\n      avatar = null;\n    }\n    return avatar;\n  }\n}\n","import React from 'react';\n\nexport default class LoadSpinner extends React.PureComponent {\n  render() {\n    const className = 'load-spinner-box' + (this.props.large ? ' large' : '')\n      + (this.props.clear ? ' clear' : '') + (this.props.centered ? ' centered' : '');\n    return (this.props.show ?\n      <div className={className}><div className=\"loader-spinner\"></div></div> : null);\n  }\n}\n","// File and image helper functions.\nimport { MAX_INBAND_ATTACHMENT_SIZE, MAX_IMAGE_DIM } from '../config.js';\nimport { bytesToHumanSize } from './strformat.js'\n\n// Supported image MIME types and corresponding file extensions.\nexport const SUPPORTED_IMAGE_FORMATS = ['image/jpeg', 'image/gif', 'image/png', 'image/svg', 'image/svg+xml'];\nexport const MIME_EXTENSIONS         = ['jpg',        'gif',       'png',       'svg',       'svg'];\n\n// Make a data: URL from public.photo\nexport function makeImageDataUrl(photo) {\n  if (photo) {\n    if (photo.data && photo.type) {\n      const mime = photo.type.startsWith('image/') ? photo.type : ('image/' + photo.type);\n      return 'data:' + mime + ';base64,' + photo.data;\n    }\n    return photo.ref;\n  }\n  return null;\n}\n\n// Calculate linear dimensions for scaling image down to fit under a certain size.\n// Returns an object which contains destination sizes, source sizes, and offsets\n// into source (when making square images).\nexport function fitImageSize(width, height, maxWidth, maxHeight, forceSquare) {\n  // Sanitize input\n  width = width | 0;\n  height = height | 0;\n  maxWidth = maxWidth | 0;\n  maxHeight = maxHeight | 0;\n\n  if (width <= 0 || height <= 0 || maxWidth <= 0 || maxHeight <= 0) {\n    return null;\n  }\n\n  if (forceSquare) {\n    maxWidth = maxHeight = Math.min(maxWidth, maxHeight);\n  }\n\n  const scale = Math.min(\n    Math.min(width, maxWidth) / width,\n    Math.min(height, maxHeight) / height\n  );\n\n  const size = {\n    dstWidth: (width * scale) | 0,\n    dstHeight: (height * scale) | 0,\n  };\n\n  if (forceSquare) {\n    // Also calculate parameters for making the image square.\n    size.dstWidth = size.dstHeight = Math.min(size.dstWidth, size.dstHeight);\n    size.srcWidth = size.srcHeight = Math.min(width, height);\n    size.xoffset = ((width - size.srcWidth) / 2) | 0;\n    size.yoffset = ((height - size.srcWidth) / 2) | 0;\n  } else {\n    size.xoffset = size.yoffset = 0;\n    size.srcWidth = width;\n    size.srcHeight = height;\n  }\n  return size;\n}\n\n// Ensure file's extension matches mime content type\nexport function fileNameForMime(fname, mime) {\n  const idx = SUPPORTED_IMAGE_FORMATS.indexOf(mime);\n  if (idx < 0 || !fname) {\n    // Unknown mime or empty name.\n    return fname;\n  }\n  const ext = MIME_EXTENSIONS[idx];\n\n  const at = fname.lastIndexOf('.');\n  if (at >= 0) {\n    fname = fname.substring(0, at);\n  }\n  return fname + '.' + ext;\n}\n\n// Scale uploaded image to fit under certain dimensions and byte size, optionally constraining to a square.\n// On success calls onSuccess callback with the scaled image as Blob.\nexport function imageScaled(fileOrBlob, maxWidth, maxHeight, maxSize, forceSquare, onSuccess, onError) {\n  const img = new Image();\n  img.crossOrigin = 'Anonymous';\n  img.onerror = function(err) {\n    onError(\"Image format unrecognized\");\n  }\n  img.onload = async function() {\n    // Once the image is loaded, the URL is no longer needed.\n    URL.revokeObjectURL(img.src);\n\n    // Calculate the desired image dimensions.\n    const dim = fitImageSize(this.width, this.height, maxWidth, maxHeight, forceSquare);\n    if (!dim) {\n      onError(\"Invalid image\");\n      return;\n    }\n    let canvas = document.createElement('canvas');\n    canvas.width = dim.dstWidth;\n    canvas.height = dim.dstHeight;\n    let ctx = canvas.getContext('2d');\n    ctx.imageSmoothingEnabled = true;\n    ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n      0, 0, dim.dstWidth, dim.dstHeight);\n\n    const mime = SUPPORTED_IMAGE_FORMATS.includes(fileOrBlob.type) ? fileOrBlob.type : 'image/jpeg';\n    // Generate blob to check size of the image.\n    let blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    if (!blob) {\n      onError(\"Unsupported image format\");\n      return;\n    }\n\n    // Ensure the image is not too large. Shrink the image keeping the aspect ratio.\n    // Do nothing if maxsize is <= 0.\n    while (maxSize > 0 && blob.length > maxSize) {\n      dim.dstWidth = (dim.dstWidth * 0.70710678118) | 0;\n      dim.dstHeight = (dim.dstHeight * 0.70710678118) | 0;\n      canvas.width = dim.dstWidth;\n      canvas.height = dim.dstHeight;\n      ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n        0, 0, dim.dstWidth, dim.dstHeight);\n      blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    }\n\n    canvas = null;\n    onSuccess(mime, blob, dim.dstWidth, dim.dstHeight, fileNameForMime(fileOrBlob.name, mime));\n  };\n  img.src = URL.createObjectURL(fileOrBlob);\n}\n\n// Convert File to base64 string.\nexport function fileToBase64(file, onSuccess) {\n  const reader = new FileReader();\n  reader.addEventListener('load', function() {\n    onSuccess(file.type, reader.result.split(',')[1], file.name);\n  });\n  reader.readAsDataURL(file);\n}\n\n// Convert Blob to base64 string.\nexport function blobToBase64(blob, onSuccess) {\n  const reader = new FileReader();\n  reader.addEventListener('load', function() {\n    onSuccess(blob.type, reader.result.split(',')[1]);\n  });\n  reader.readAsDataURL(blob);\n}\n\n// File pasted from the clipboard. It's either an inline image or a file attachment.\n// FIXME: handle large files out of band.\nexport function filePasted(event, onImageSuccess, onAttachmentSuccess, onError) {\n  var items = (event.clipboardData || event.originalEvent.clipboardData || {}).items;\n  for (var i in items) {\n    var item = items[i];\n    if (item.kind === 'file') {\n      var file = item.getAsFile();\n      if (!file) {\n        console.log(\"Failed to get file object from pasted file item\", item.kind, item.type);\n        continue;\n      }\n      if (file.type && file.type.split('/')[0] == 'image') {\n        // Handle inline image\n        if (file.size > MAX_INBAND_ATTACHMENT_SIZE || SUPPORTED_IMAGE_FORMATS.indexOf(file.type) < 0) {\n          imageFileScaledToBase64(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, false, onImageSuccess, onError);\n        } else {\n          imageFileToBase64(file, onImageSuccess, onError);\n        }\n      } else {\n        // Handle file attachment\n        fileToBase64(file, onAttachmentSuccess, onError)\n      }\n      // Indicate that the pasted data contains a file.\n      return true;\n    }\n  }\n  // No file found.\n  return false;\n}\n\n// Get mime type from data URL header.\nexport function getMimeType(header) {\n  var mime = /^data:(image\\/[-+a-z0-9.]+);base64/.exec(header);\n  return (mime && mime.length > 1) ? mime[1] : null;\n}\n\n// Given length of a binary object in bytes, calculate the length after\n// base64 encoding.\nexport function base64EncodedLen(n) {\n  return Math.floor((n + 2) / 3) * 4;\n}\n\n// Given length of a base64-encoded object, calculate decoded size of the\n// pbject in bytes.\nexport function base64DecodedLen(n) {\n  return Math.floor(n / 4) * 3;\n}\n\n// Re-encode string to standard base64 encoding with padding.\n// The string may be base64-URL encoded without the padding.\nexport function base64ReEncode(str) {\n  if (str) {\n    str = str.replace(/-/g, '+').replace(/_/g, '/');\n    try {\n      str = btoa(atob(str));\n    } catch(err) {\n      console.log(\"Failed to base64 re-encode string.\", err);\n      str = null;\n    }\n  }\n  return str;\n}\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\nimport LoadSpinner from './load-spinner.jsx';\n\nimport { AVATAR_SIZE, IMAGE_PREVIEW_DIM, MAX_AVATAR_BYTES, MAX_EXTERN_ATTACHMENT_SIZE,\n  MAX_INBAND_ATTACHMENT_SIZE } from '../config.js';\nimport { imageScaled, blobToBase64, makeImageDataUrl } from '../lib/blob-helpers.js';\n\nexport default class AvatarUpload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dataUrl: props.avatar,\n      uploading: false\n    };\n\n    this.handleFileUpload = this.handleFileUpload.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.avatar != prevProps.avatar) {\n      this.setState({dataUrl: this.props.avatar});\n    }\n  }\n\n  handleFileUpload(e) {\n    const image = e.target.files[0];\n    if (image.size > MAX_AVATAR_BYTES) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      if (!uploader) {\n        this.props.onError(this.props.intl.formatMessage(messages.cannot_initiate_upload));\n        return;\n      }\n\n      uploader.upload(image)\n        .then((url) => {\n          this.props.onImageChanged(url);\n        })\n        .catch((err) => {\n          this.props.onError(err, 'err');\n        })\n        .finally(() => {\n          this.setState({uploading: false});\n        });\n    } else {\n      imageScaled(image, AVATAR_SIZE, AVATAR_SIZE, MAX_EXTERN_ATTACHMENT_SIZE, true,\n        // Image successfully scaled and converted.\n        (mime, blob) => {\n          // Convert blob to base64-encoded bits.\n          blobToBase64(blob, (unused, base64bits) => {\n            const du = makeImageDataUrl({data: base64bits, type: mime});\n            this.setState({dataUrl: du});\n            this.props.onImageChanged(du);\n          });\n        },\n        // Failure\n        (err) => {\n          this.props.onError(err, 'err');\n        });\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  render() {\n    // Randomize id value in case more than one AvatarUpload is shown\n    // at the same time.\n    const randId = 'file-input-avatar-' + (Math.random() + '').substr(2);\n    const className = 'avatar-upload' + (this.props.readOnly ? ' read-only' : '');\n    return (\n      <div className={className}>\n        {this.props.readOnly || !this.state.dataUrl ?\n          null :\n          <a href=\"#\" className=\"clear-avatar\" onClick={(e) => {e.preventDefault(); this.props.onImageChanged(null);}}>\n            <i className=\"material-icons\">clear</i>\n          </a>}\n        {this.state.dataUrl ?\n          <img src={this.state.dataUrl} className=\"preview\" /> :\n          this.props.readOnly && this.props.uid ?\n            <div className=\"avatar-box\">\n              <LetterTile\n                avatar={true}\n                topic={this.props.uid}\n                title={this.props.title} />\n            </div>\n            :\n            <div className=\"blank\">{AVATAR_SIZE}&times;{AVATAR_SIZE}</div>}\n        {this.props.readOnly ? null :\n          <input type=\"file\" id={randId} className=\"inputfile hidden\"\n            accept=\"image/*\" onChange={this.handleFileUpload} />}\n        {this.props.readOnly ? null :\n        <label htmlFor={randId} className=\"round\">\n          <i className=\"material-icons\">file_upload</i>\n        </label>}\n        <LoadSpinner show={this.state.uploading} large={true} clear={true} centered={true} />\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nconst icon_mapping = {'staff': 'verified_user'};\n\nconst messages = defineMessages({\n  badge_verified: {\n    id: 'badge_verified',\n    defaultMessage: 'Verified/official',\n    description: 'Explanation of a verified account or topic badge'\n  },\n  badge_staff: {\n    id: 'badge_staff',\n    defaultMessage: 'Staff-managed',\n    description: 'Explanation of a staff-managed account or topic badge'\n  },\n  badge_danger: {\n    id: 'badge_danger',\n    defaultMessage: 'Untrustworthy',\n    description: 'Suspicious or untrustworthy account or topic badge'\n  },\n});\n\n\n/* Trusted badges with labels: verified, staff, danger */\nclass BadgeList extends React.PureComponent {\n  render() {\n    const {formatMessage} = this.props.intl;\n    let badges = null;\n    if (this.props.trustedBadges && this.props.trustedBadges.length > 0) {\n      badges = [];\n      this.props.trustedBadges.map((b) => {\n        const comment = formatMessage(messages['badge_' + b]);\n        const style = 'material-icons ' + b + '-color';\n        badges.push(<div className=\"trusted-badge\" key={b}><i className={style}>{icon_mapping[b] || b}</i> {comment}</div>);\n      });\n      return <>{badges}</>;\n    }\n    return null;\n  }\n};\n\nexport default injectIntl(BadgeList);\n","import React from 'react';\n\n/* BEGIN CheckBox: styled checkbox */\nexport default class CheckBox extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange() {\n    this.props.onChange(this.props.name, !this.props.checked);\n  }\n\n  render() {\n    return (\n      this.props.onChange ? (\n        this.props.checked ?\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box</i> :\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box_outline_blank</i>\n        ) : (\n          this.props.checked ?\n            <i className=\"material-icons\">check_box</i> :\n            <i className=\"material-icons\">check_box_outline_blank</i>\n        )\n    );\n  }\n}\n/* END CheckBox */\n","import React from 'react';\n\nconst icon_mapping = {'muted': 'notifications_off', 'banned': 'block', 'staff': 'verified_user'};\n\n/* Contact's labels: [you], or icons [muted], [blocked] */\nexport default class ContactBadges extends React.PureComponent {\n  render() {\n    let badges = null;\n    if (this.props.badges && this.props.badges.length > 0) {\n      badges = [];\n      this.props.badges.map((b) => {\n        const color = (b.color ? ' ' + b.color : '');\n        if (b.icon) {\n          badges.push(<i className={'material-icons as-badge' + color} key={b.key || b.icon}>{icon_mapping[b.icon] || b.icon}</i>);\n        } else {\n          badges.push(<span className={'badge' + color} key={b.key || b.name}>{b.name}</span>);\n        }\n      });\n      return <>{badges}</>;\n    }\n    return null;\n  }\n};\n","// Odds and ends\n\nimport Tinode from 'tinode-sdk';\n\n// Make shortcut icon appear with a green dot + show unread count in title.\nexport function updateFavicon(count) {\n  const oldIcon = document.getElementById('shortcut-icon');\n  const head = document.head || document.getElementsByTagName('head')[0];\n  const newIcon = document.createElement('link');\n  newIcon.type = 'image/png';\n  newIcon.id = 'shortcut-icon';\n  newIcon.rel = 'shortcut icon';\n  newIcon.href = 'img/logo32x32' + (count > 0 ? 'a' : '') + '.png';\n  if (oldIcon) {\n    head.removeChild(oldIcon);\n  }\n  head.appendChild(newIcon);\n\n  document.title = (count > 0 ? '('+count+') ' : '') + 'Tinode';\n}\n\n// Create theCard which represents user's or topic's \"public\" info.\nexport function theCard(fn, imageUrl, imageMimeType) {\n  let card = null;\n  fn = fn && fn.trim();\n\n  if (fn) {\n    card = {\n      fn: fn\n    };\n  }\n\n  if (imageUrl) {\n    card = card || {};\n    let mimeType = imageMimeType;\n    // Is this a data URL \"data:[<mediatype>][;base64],<data>\"?\n    const matches = /^data:(image\\/[-a-z0-9+.]+)?(;base64)?,/i.exec(imageUrl);\n    if (matches) {\n      mimeType = matches[1];\n      card.photo = {\n        data: imageUrl.substring(imageUrl.indexOf(',') + 1)\n      };\n    } else {\n      card.photo = {\n        ref: imageUrl\n      };\n    }\n    card.photo.type = (mimeType || 'image/jpeg').substring('image/'.length);\n  }\n\n  return card;\n}\n\n// Deep-shallow compare two arrays: shallow compare each element.\nexport function arrayEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (!Array.isArray(a) || !Array.isArray(b)) {\n    return false;\n  }\n\n  // Compare lengths first.\n  if (a.length != b.length) {\n    return false;\n  }\n  // Order of elements is ignored.\n  a.sort();\n  b.sort();\n  for (let i = 0, l = a.length; i < l; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Checks (loosely) if the given string is a phone. If so, returns the phone number in a format\n// as close to E.164 as possible.\nexport function asPhone(val) {\n  val = val.trim();\n  if (/^(?:\\+?(\\d{1,3}))?[- (.]*(\\d{3})[- ).]*(\\d{3})[- .]*(\\d{2})[- .]*(\\d{2})?$/.test(val)) {\n    return val.replace(/[- ().]*/, '');\n  }\n  return null;\n}\n\n// Checks (loosely) if the given string is an email. If so returns the email.\nexport function asEmail(val) {\n  val = val.trim();\n  if (/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(val)) {\n    return val;\n  }\n  return null;\n}\n\n// Checks if URL is a relative url, i.e. has no 'scheme://', including the case of missing scheme '//'.\n// The scheme is expected to be RFC-compliant, e.g. [a-z][a-z0-9+.-]*\n// example.html - ok\n// https:example.com - not ok.\n// http:/example.com - not ok.\n// ' ↲ https://example.com' - not ok. (↲ means carriage return)\nexport function isUrlRelative(url) {\n  return url && !/^\\s*([a-z][a-z0-9+.-]*:|\\/\\/)/im.test(url);\n}\n\n// Ensure URL does not present an XSS risk. Optional allowedSchemes may contain an array of\n// strings with permitted URL schemes, such as ['ftp', 'ftps']; otherwise accept http and https only.\n// If apikey and/or token is defined, it's appended to relative URL.\nexport function sanitizeUrl(url, allowedSchemes) {\n  if (!url) {\n    return null;\n  }\n\n  // Strip control characters and whitespace. They are not valid URL characters anyway.\n  url = url.replace(/[^\\x20-\\x7E]/gmi, '').trim();\n\n  // Relative URLs are safe.\n  // Relative URL does not start with ':', abcd123: or '//'.\n  if (!/^([a-z][a-z0-9+.-]*:|\\/\\/)/i.test(url)) {\n    return url;\n  }\n\n  // Blob URLs are safe.\n  if (/^blob:http/.test(url)) {\n    return url;\n  }\n\n  // Absolute URL. Accept only safe schemes, or no scheme.\n  const schemes = Array.isArray(allowedSchemes) ? allowedSchemes.join('|') : 'http|https';\n  const re = new RegExp('^((' + schemes + '):|//)', 'i');\n  if (!re.test(url)) {\n    return null;\n  }\n\n  return url;\n}\n\n// Ensure URL is suitable for <img src=\"url\"> field: the URL must be a relative URL or\n// have http:, https:, blob: or data: scheme.\n// The relative URL is appended with the API key and/or auth token.\n// In case of data: scheme, the URL must start with a 'data:image/XXXX;base64,'.\nexport function sanitizeImageUrl(url) {\n  if (!url) {\n    return null;\n  }\n\n  const sanitizedUrl = sanitizeUrl(url);\n  if (sanitizedUrl) {\n    return sanitizedUrl;\n  }\n\n  // Is this a data: URL of an image?\n  if (/data:image\\/[a-z0-9.-]+;base64,/i.test(url.trim())) {\n    return url;\n  }\n\n  return null;\n}\n\n// Given message's received status, return name and color of a delivery indicator icon.\nexport function deliveryMarker(received) {\n  switch (received) {\n    case Tinode.MESSAGE_STATUS_SENDING:\n      return { name: 'access_time' }; // watch face\n    case Tinode.MESSAGE_STATUS_FAILED:\n      return { name: 'warning', color: 'danger-color' }; // yellow icon /!\\\n    case Tinode.MESSAGE_STATUS_SENT:\n      return { name: 'done' }; // checkmark\n    case Tinode.MESSAGE_STATUS_RECEIVED:\n      return { name: 'done_all' }; // double checkmark\n    case Tinode.MESSAGE_STATUS_READ:\n      return { name: 'done_all', color: 'blue' }; // blue double checkmark\n  }\n  return null;\n}\n","// Received/read indicator.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { shortDateFormat } from '../lib/strformat.js';\nimport { deliveryMarker } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  message_sending: {\n    id: 'message_sending',\n    defaultMessage: 'sending...',\n    description: 'Message being sent, in place of time stamp'\n  },\n  message_sending_failed: {\n    id: 'message_sending_failed',\n    defaultMessage: 'failed',\n    description: 'Failed to send message, in place of time stamp'\n  }\n});\n\nclass ReceivedMarker extends React.PureComponent {\n  render() {\n    const {formatMessage} = this.props.intl;\n    let timestamp;\n    if (this.props.received <= Tinode.MESSAGE_STATUS_SENDING) {\n      timestamp = formatMessage(messages.message_sending);\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_FAILED) {\n      timestamp = formatMessage(messages.message_sending_failed);\n    } else {\n      timestamp = shortDateFormat(this.props.timestamp, this.props.intl.locale);\n    }\n\n    const icon = deliveryMarker(this.props.received);\n    const marker = icon ? <i className={'material-icons small ' + icon.color}>{icon.name}</i> : null;\n\n    return (\n      <span className=\"timestamp\">\n        {timestamp}{'\\u00a0'}{marker}\n      </span>\n    );\n  }\n};\n\nexport default injectIntl(ReceivedMarker);\n","// The counter of unread messages in the topic.\nimport React from 'react';\n\nexport default class UnreadBadge extends React.PureComponent {\n  render() {\n    return (this.props.count > 0 ?\n      <span className=\"unread\">{this.props.count > 9 ? \"9+\" : this.props.count}</span>\n      : null);\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\n\nimport ContactBadges from './contact-badges.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\nimport UnreadBadge from './unread-badge.jsx';\n\nimport { Drafty } from 'tinode-sdk';\n\nimport { deliveryMarker } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  drafty_image: {\n    id: 'drafty_image',\n    defaultMessage: 'Picture',\n    description: 'Comment for embedded images in drafty preview'\n  },\n  drafty_form: {\n    id: 'drafty_form',\n    defaultMessage: 'Form: ',\n    description: 'Comment for form in drafty preview'\n  },\n  drafty_attachment: {\n    id: 'drafty_attachment',\n    defaultMessage: 'Attachment',\n    description: 'Comment for attachment in drafty preview'\n  },\n});\n\nclass Contact extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.props.onSelected) {\n      // Index this.props.index is used by GroupManager.\n      this.props.onSelected(this.props.item, this.props.index);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.props.item, y: e.pageY, x: e.pageX });\n  }\n\n  render() {\n    let title = this.props.title;\n    if (!title) {\n      title = <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n        description=\"Title shown when the topic has no name\" /></i>;\n    } else if (title.length > 30) {\n      // FIXME: this is probably wrong for RTL languages.\n      title = title.substring(0, 28) + '…';\n    }\n    const online = this.props.now ? 'online' : 'offline';\n    const avatar = this.props.avatar ? this.props.avatar : true;\n    const badges = this.props.badges ? this.props.badges.slice() : [];\n    const icon_badges = [];\n    if (this.props.isVerified) {\n      icon_badges.push({icon: 'verified', color: 'verified-color'});\n    }\n    if (this.props.isStaff) {\n      icon_badges.push({icon: 'staff', color: 'staff-color'});\n    }\n    if (this.props.isDangerous) {\n      icon_badges.push({icon: 'dangerous', color: 'danger-color'});\n    }\n    if (this.props.acs) {\n      if (this.props.showMode) {\n        badges.push({name: this.props.acs.getMode(), key: 'mode'});\n      }\n      if (this.props.acs.isMuted()) {\n        icon_badges.push({icon: 'muted'});\n      }\n      if (!this.props.acs.isJoiner()) {\n        icon_badges.push({icon: 'banned'});\n      }\n    }\n\n    const subtitle = this.props.preview ?\n      (typeof this.props.preview == 'string' ? this.props.preview :\n        React.createElement(React.Fragment, null, Drafty.format(this.props.preview, draftyFormatter, this))) :\n      this.props.comment;\n\n    const icon = deliveryMarker(this.props.received);\n    const marker = icon ? <i className={'material-icons small space-right' +\n      (icon.color ? ' ' + icon.color : '')}>{icon.name}</i> : null;\n\n    return (\n      <li className={!this.props.showCheckmark && this.props.selected ? 'selected' : null} onClick={this.handleClick}>\n        <div className=\"avatar-box\">\n          <LetterTile\n            avatar={avatar}\n            title={this.props.title}\n            topic={this.props.item} />\n          {this.props.showOnline ? <span className={online} /> :\n            (this.props.showCheckmark && this.props.selected ?\n            <i className=\"checkmark material-icons\">check_circle</i>\n            : null)}\n        </div>\n        <div className=\"text-box\">\n          <div><span className=\"contact-title\">{title}</span>\n            {this.props.isChannel ? <img src=\"/img/channel.png\" className=\"channel\" alt=\"channel\" /> : null}\n            <ContactBadges badges={icon_badges} /><UnreadBadge count={this.props.unread} />\n          </div>\n          {this.props.showMode ?\n            <span><ContactBadges badges={badges} /></span> :\n            <div className=\"contact-comment\">{marker}{subtitle || '\\u00A0'}</div>}\n        </div>\n        {this.props.showContextMenu ?\n          <span className=\"menuTrigger\">\n            <a href=\"#\" onClick={this.handleContextClick}>\n              <i className=\"material-icons\">expand_more</i>\n            </a>\n          </span> : null}\n      </li>\n    );\n  }\n};\n\n\n// Converts Drafty object into a one-line preview.\nfunction draftyFormatter(style, data, values, key) {\n  let el = Drafty.tagName(style);\n  const attr = { key: key };\n  if (el) {\n    const { formatMessage } = this.props.intl;\n    switch (style) {\n      case 'BR':\n        // Replace new line with a space.\n        el = React.Fragment;\n        values = [' '];\n        break;\n      case 'HL':\n        // Make highlight less prominent in preview.\n        attr.className = 'highlight preview';\n        break;\n      case 'LN':\n        // Disable links in previews.\n        el = 'span';\n        break;\n      case 'IM':\n        // Replace image with '[icon] Image'.\n        el = React.Fragment;\n        values = [<i key=\"im\" className=\"material-icons\">photo</i>, formatMessage(messages.drafty_image)];\n        break;\n      case 'BN':\n        el = 'span';\n        attr.className = 'flat-button faux';\n        break;\n      case 'FM':\n        el = React.Fragment;\n        values = [<i key=\"fm\" className=\"material-icons\">dashboard</i>,\n          formatMessage(messages.drafty_form)].concat(values || []);\n        break;\n      case 'RW':\n        el = React.Fragment;\n        break;\n      case 'EX':\n        if (data && data.mime == 'application/json') {\n          // Ignore JSON attachments: they are form response payloads.\n          return null;\n        }\n        el = React.Fragment;\n        values = [<i key=\"ex\" className=\"material-icons\">attachment</i>, formatMessage(messages.drafty_attachment)];\n        break;\n      default:\n        if (el == '_UNKN') {\n          el = React.Fragment;\n          values = [<i key=\"unkn\" className=\"material-icons\">extension</i>];\n        }\n        break;\n    }\n    return React.createElement(el, attr, values);\n  } else {\n    return values;\n  }\n};\n\nexport default injectIntl(Contact);\n","// A panel included into a list of contacts with an action text.\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\n\nclass ContactAction extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.onAction(this.props.action);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <li onClick={this.handleClick} className=\"action\">\n        <div className=\"action-text\">{formatMessage(this.props.title, this.props.values)}</div>\n      </li>\n    );\n  }\n};\n\nexport default injectIntl(ContactAction);\n","// ContactList: component for showing a list of contacts,\n// such as a list of group members in a group chat.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { Drafty } from 'tinode-sdk';\nimport Tinode from 'tinode-sdk';\n\nimport Contact from './contact.jsx';\nimport ContactAction from './contact-action.jsx';\n\nimport { makeImageDataUrl } from '../lib/blob-helpers.js';\n\nimport { MESSAGE_PREVIEW_LENGTH } from '../config.js';\n\nconst messages = defineMessages({\n  badge_you: {\n    id: 'badge_you',\n    defaultMessage: 'you',\n    description: 'Badge for indicating the current user'\n  },\n  badge_owner: {\n    id: 'badge_owner',\n    defaultMessage: 'owner',\n    description: 'Badge for indicating the owner'\n  }\n});\n\nclass ContactList extends React.Component {\n  render() {\n    const { formatMessage } = this.props.intl;\n    const showCheckmark = Array.isArray(this.props.topicSelected);\n    const contactNodes = [];\n    let contactsCount = 0;\n    if (this.props.contacts && this.props.contacts.length > 0) {\n      this.props.contacts.map((c) => {\n        if (c.action) {\n          // Action item\n          contactNodes.push(\n            <ContactAction\n              title={c.title} action={c.action} values={c.values}\n              key={c.action}\n              onAction={this.props.onAction}\n              />);\n        } else {\n          // Normal contact\n          const key = this.props.showMode ? c.user : (c.topic || c.user);\n          // If filter function is provided, filter out the items\n          // which don't satisfy the condition.\n          if (this.props.filterFunc && this.props.filter) {\n            const filterOn = [key];\n            if (c.private && c.private.comment) {\n              filterOn.push(('' + c.private.comment).toLowerCase());\n            }\n            if (c.public && c.public.fn) {\n              filterOn.push(('' + c.public.fn).toLowerCase());\n            }\n            if (!this.props.filterFunc(this.props.filter, filterOn)) {\n              return;\n            }\n          }\n\n          const isChannel = Tinode.isChannelTopicName(key);\n          const selected = showCheckmark ?\n            (this.props.topicSelected.indexOf(key) > -1) :\n            (this.props.topicSelected === key);\n          const badges = [];\n          if (this.props.showMode) {\n            if (key == this.props.myUserId) {\n              badges.push({name: formatMessage(messages.badge_you), color: 'green'});\n            }\n            if (c.acs && c.acs.isOwner()) {\n              badges.push({name: formatMessage(messages.badge_owner), color: 'blue'});\n            }\n          }\n\n          const comment = Array.isArray(c.private) ?\n            c.private.join(',') : (c.private ? c.private.comment : null);\n          let preview;\n          let deliveryStatus;\n          if (!this.props.showMode && c.latestMessage) {\n            const msg = c.latestMessage(true);\n            if (msg) {\n              deliveryStatus = msg._status || c.msgStatus(msg, true);\n              preview = typeof msg.content == 'string' ?\n                msg.content.substr(0, MESSAGE_PREVIEW_LENGTH) :\n                Drafty.preview(msg.content, MESSAGE_PREVIEW_LENGTH);\n            }\n          }\n          contactNodes.push(\n            <Contact\n              title={c.public ? c.public.fn : null}\n              avatar={makeImageDataUrl(c.public ? c.public.photo : null)}\n              comment={comment}\n              preview={preview}\n              received={deliveryStatus}\n              unread={this.props.showUnread ? c.unread : 0}\n              now={c.online && this.props.connected}\n              acs={c.acs}\n              showMode={this.props.showMode}\n              badges={badges}\n              showCheckmark={showCheckmark}\n              selected={selected}\n              showOnline={this.props.showOnline && !isChannel}\n              isChannel={isChannel}\n              onSelected={this.props.onTopicSelected}\n              showContextMenu={this.props.showContextMenu}\n              isVerified={c.trusted && c.trusted.verified}\n              isStaff={c.trusted && c.trusted.staff}\n              isDangerous={c.trusted && c.trusted.danger}\n              item={key}\n              index={contactNodes.length}\n              key={key} />\n          );\n          contactsCount ++;\n        }\n      }, this);\n    }\n\n    return (\n      <div className={this.props.noScroll ? null : \"scrollable-panel\"}>\n        {contactsCount == 0 ?\n          <div className=\"center-medium-text\"\n            dangerouslySetInnerHTML={{__html: this.props.emptyListMessage}} />\n          :\n          null\n        }\n        {contactNodes.length > 0 ?\n          <ul className=\"contact-box\">\n            {contactNodes}\n          </ul>\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ContactList);\n","// The X menu to be displayed in title bars.\nimport React from 'react';\n\nexport default class MenuCancel extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n        <i className=\"material-icons\">close</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nimport MenuCancel from './menu-cancel.jsx';\n\nexport default class ErrorPanel extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      show: false,\n    };\n\n    this.hide = this.hide.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.level !== this.props.level) {\n      this.setState({\n        show: !(!this.props.level)\n      });\n    }\n  }\n\n  hide() {\n    this.setState({show: false});\n    if (this.props.onClearError) {\n      this.props.onClearError();\n    }\n  }\n\n  render() {\n    const icons = {err: 'error', warn: 'warning', info: 'info'}\n    const level = icons[this.props.level] || '';\n    const className = 'info-box ' + level;\n    return (\n      <div className={className}>\n        <div className=\"icon\"><i className=\"material-icons\">{level}</i></div>\n        <span>\n          {this.props.text}\n          {this.props.action ?\n            <>\n              &#32;<a href=\"#\"\n                style={{ whiteSpace: 'nowrap' }}\n                onClick={(e) => {e.preventDefault(); this.props.action();}}>\n                {this.props.actionText}\n              </a>\n            </>\n          : null}\n        </span>\n        <div className=\"cancel\"><MenuCancel onCancel={this.hide} /></div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\n\nexport default class Chip extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel(this.props.topic, this.props.index);\n  }\n\n  render() {\n    const title = this.props.title || this.props.topic;\n    const className = this.props.invalid ? 'chip invalid' : 'chip';\n    return (\n      <div className={className}>\n        {this.props.noAvatar ?\n          <span className=\"spacer\" /> :\n          <div className=\"avatar-box\">\n            <LetterTile\n              avatar={this.props.avatar || true}\n              topic={this.props.topic}\n              title={this.props.title} />\n          </div>\n        }\n        <span>{title}</span>\n        {this.props.onCancel && !this.props.required ?\n          <a href=\"#\" onClick={this.handleCancel} >&times;</a>\n          : <span className=\"spacer\" />}\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport Chip from './chip.jsx';\n\nimport { makeImageDataUrl } from '../lib/blob-helpers.js';\n\n/* BEGIN ChipInput: group membership widget */\nexport default class ChipInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = ChipInput.deriveStateFromProps(props);\n    this.state.input = '';\n    this.state.focused = false;\n\n    this.handleTextInput = this.handleTextInput.bind(this);\n    this.removeChipAt = this.removeChipAt.bind(this);\n    this.handleChipCancel = this.handleChipCancel.bind(this);\n    this.handleFocusGained = this.handleFocusGained.bind(this);\n    this.handleFocusLost = this.handleFocusLost.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  static deriveStateFromProps(props) {\n    return {\n      placeholder: props.chips ? '' : props.prompt,\n      sortedChips: ChipInput.sortChips(props.chips, props.staticMembers),\n      chipIndex: ChipInput.indexChips(props.chips)\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chips != this.props.chips ||\n      prevProps.staticMembers != this.props.staticMembers ||\n      prevProps.prompt != this.props.prompt) {\n      this.setState(ChipInput.deriveStateFromProps(this.props));\n    }\n    if (!prevState || this.props.chips.length > prevState.sortedChips.length) {\n      this.setState({input: ''});\n    }\n  }\n\n  // Map chip index to user name\n  static indexChips(chips) {\n    const index = {};\n    let count = 0;\n    chips.map((item) => {\n      index[item.user] = count;\n      count ++;\n    });\n    return index;\n  }\n\n  // Have non-removable chips appear before all other chips.\n  static sortChips(chips, keep) {\n    const required = [];\n    const normal = [];\n    chips.map((item) => {\n      if (keep && keep.includes(item.user)) {\n        required.push(item);\n      } else {\n        normal.push(item);\n      }\n    });\n    return required.concat(normal);\n  }\n\n  handleTextInput(e) {\n    this.setState({input: e.target.value});\n    if (this.props.filterFunc) {\n      this.props.filterFunc(e.target.value);\n    }\n  }\n\n  removeChipAt(idx) {\n    const removed = this.state.sortedChips[idx];\n    this.props.onChipRemoved(removed.user, this.state.chipIndex[removed.user]);\n  }\n\n  handleChipCancel(item, idx) {\n    this.removeChipAt(idx);\n  }\n\n  handleFocusGained() {\n    this.setState({focused: true});\n  }\n\n  handleFocusLost() {\n    this.setState({focused: false});\n    if (this.props.onFocusLost) {\n      this.props.onFocusLost(this.state.input);\n    }\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Backspace') {\n      if (this.state.input.length == 0 && this.state.sortedChips.length > 0) {\n        const at = this.state.sortedChips.length - 1;\n        if (this.state.sortedChips[at].user !== this.props.staticMembers) {\n          this.removeChipAt(at);\n        }\n      }\n    } else if (e.key === 'Enter') {\n      if (this.props.onEnter) {\n        this.props.onEnter(this.state.input);\n      }\n    } else if (e.key === 'Escape') {\n      if (this.props.onCancel) {\n        this.props.onCancel();\n      }\n    }\n  }\n\n  render() {\n    const chips = [];\n    let count = 0;\n    const staticMembers = this.props.staticMembers || [];\n    this.state.sortedChips.map((item) => {\n      chips.push(\n        <Chip\n          onCancel={this.handleChipCancel}\n          avatar={makeImageDataUrl(item.public ? item.public.photo : null)}\n          title={item.public ? item.public.fn : undefined}\n          noAvatar={this.props.avatarDisabled}\n          topic={item.user}\n          required={staticMembers.includes(item.user)}\n          invalid={item.invalid}\n          index={count}\n          key={item.user} />\n      );\n      count++;\n    });\n    const className = \"chip-input\" + (this.state.focused ? ' focused' : '');\n    return (\n      <div className={className}>\n        {chips}\n        <input type=\"text\"\n          placeholder={this.state.placeholder}\n          onChange={this.handleTextInput}\n          onFocus={this.handleFocusGained}\n          onBlur={this.handleFocusLost}\n          onKeyDown={this.handleKeyDown}\n          value={this.state.input}\n          autoFocus />\n      </div>\n    );\n  }\n};\n","// GroupMembers: control for managing a list of group members.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\nimport ContactList from './contact-list.jsx';\n\nconst messages = defineMessages({\n  no_contacts: {\n    id: 'no_contacts',\n    defaultMessage: 'You have no contacts :-(',\n    description: 'Shown in ContactsView when the user has no contacts'\n  },\n  contacts_not_found_short: {\n    id: 'contacts_not_found_short',\n    defaultMessage: \"No contacts match ''{query}''\",\n    description: 'Shown in ContactsView when search returned no results'\n  }\n});\n\nclass GroupManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Array of topic members\n      members: props.members,\n      index: GroupManager.indexMembers(props.members),\n      staticMembers: GroupManager.staticMembers(props.members, props.keepInitialMembers, props.requiredMember),\n      contactFilter: '',\n      noContactsMessage: props.intl.formatMessage(messages.no_contacts),\n      selectedContacts: GroupManager.selectedContacts(props.members)\n    };\n\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleMemberRemoved = this.handleMemberRemoved.bind(this);\n    this.handleContactFilter = this.handleContactFilter.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static indexMembers(members) {\n    let index = {};\n    members.map((m) => {\n      index[m.user] = {delta: 0, present: true}; // Delta: 0 unchanged, +1 added, -1 removed\n    });\n    return index;\n  }\n\n  static staticMembers(members, keepInitial, requiredMember) {\n    let stat = [];\n    members.map((m) => {\n      if (keepInitial || m.user == requiredMember) {\n        stat.push(m.user);\n      }\n    });\n    return stat;\n  }\n\n  static selectedContacts(members) {\n    let sel = [];\n    members.map((m) => {\n      sel.push(m.user);\n    });\n    return sel;\n  }\n\n  handleContactSelected(userId, index) {\n    let status = this.state.index[userId];\n    if (status) {\n      if (status.present) {\n        // Prevent duplicate members\n        return;\n      }\n      status.delta += 1;\n      status.present = true;\n    } else {\n      status = {delta: 1, present: true};\n    }\n\n    let m = this.state.members.slice();\n    m.push(this.props.contacts[index]);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleMemberRemoved(userId, index) {\n    const status = this.state.index[userId];\n    if (!status || !status.present) {\n      return;\n    }\n    status.present = false;\n    status.delta -= 1;\n\n    let m = this.state.members.slice();\n    m.splice(index, 1);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleContactFilter(val) {\n    const {formatMessage} = this.props.intl;\n    const msg = !val ?\n      formatMessage(messages.no_contacts) :\n      formatMessage(messages.contacts_not_found_short, {query: val});\n\n    this.setState({contactFilter: val, noContactsMessage: msg});\n  }\n\n  static doContactFiltering(filter, values) {\n    if (filter) {\n      for (let i=0; i<values.length; i++) {\n        if (values[i].indexOf(filter) >= 0) {\n          return true;\n        }\n      }\n      return false;\n    }\n    return true;\n  }\n\n  handleSubmit() {\n    var instance = this;\n    var members = [];\n    var added = [];\n    var removed = [];\n\n    var keys = Object.keys(this.state.index);\n    keys.map(function(k) {\n      if (instance.state.index[k].present) {\n        members.push(k);\n      }\n\n      if (instance.state.index[k].delta > 0) {\n        added.push(k);\n      } else if (instance.state.index[k].delta < 0) {\n        removed.push(k);\n      }\n    });\n    this.props.onSubmit(members, added, removed);\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <div id=\"group-manager\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_group_members\" defaultMessage=\"Group Members\" description=\"Section title\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ChipInput\n            chips={this.state.members}\n            staticMembers={this.state.staticMembers}\n            prompt=\"add members\"\n            filterFunc={this.handleContactFilter}\n            onChipRemoved={this.handleMemberRemoved} />\n        </div>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_all_contacts\" defaultMessage=\"All Contacts\"\n              description=\"Section title [All Contacts]\" />\n          </label>\n        </div>\n        <ContactList\n          contacts={this.props.contacts}\n          myUserId={this.props.myUserId}\n          topicSelected={this.state.selectedContacts}\n          filter={this.state.contactFilter}\n          filterFunc={GroupManager.doContactFiltering}\n          emptyListMessage={this.state.noContactsMessage}\n          showOnline={false}\n          showUnread={false}\n          onTopicSelected={this.handleContactSelected} />\n        <div id=\"group-manager-buttons\" className=\"panel-form-row\">\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n          <button className=\"secondary\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(GroupManager);\n","// Password with a visiblity toggle.\nimport React from 'react';\n\nexport default class VisiblePassword extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: this.props.value,\n      visible: false\n    };\n\n    this.handleVisibility = this.handleVisibility.bind(this);\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n    if (this.props.onChange) {\n      this.props.onChange(e);\n    }\n  }\n\n  handleVisibility(e) {\n    e.preventDefault();\n    this.setState({visible: !this.state.visible});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode == 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, visible: false});\n      if (this.props.onFinished) {\n        this.props.onFinished();\n      }\n    } else if (e.keyCode == 13) {\n      // Enter pressed\n      this.handleEditingFinished();\n    }\n  }\n\n  handleEditingFinished(e) {\n    if (e) {\n      let currentTarget = e.currentTarget;\n      setTimeout(() => {\n        if (!currentTarget.contains(document.activeElement)) {\n          if (this.props.onFinished) {\n            this.props.onFinished(this.state.value);\n          }\n        }\n      }, 0);\n    } else if (this.props.onFinished) {\n      this.props.onFinished(this.state.value.trim());\n    }\n  }\n\n  render() {\n    return (\n      <div tabIndex=\"-1\" className=\"group-focus\"\n        onBlur={this.handleEditingFinished}>\n        <input className=\"with-visibility\"\n          type={this.state.visible ? \"text\" : \"password\"}\n          value={this.state.value}\n          placeholder={this.props.placeholder}\n          required={this.props.required ? 'required' : ''}\n          autoFocus={this.props.autoFocus ? 'autoFocus' : ''}\n          autoComplete={this.props.autoComplete}\n          onChange={this.handeTextChange}\n          onKeyDown={this.handleKeyDown} />\n        <span onClick={this.handleVisibility}>\n          <i className=\"material-icons clickable light-gray\">\n            {this.state.visible ? 'visibility' : 'visibility_off'}\n          </i>\n        </span>\n      </div>\n    );\n  }\n}\n","// In-place text editor. Shows text with an icon which toggles it into an input field.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport VisiblePassword from './visible-password.jsx';\n\nexport default class InPlaceEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      active: props.active,\n      initialValue: props.value || '',\n      value: props.value || ''\n    };\n\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleStartEditing = this.handleStartEditing.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n    this.handlePasswordFinished = this.handlePasswordFinished.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // If text has changed while in read mode, update text and discard changes.\n    // Ignore update if in edit mode.\n    const newValue = this.props.value || '';\n    if (prevState.initialValue != newValue && !prevState.active) {\n      this.setState({\n        initialValue: newValue,\n        value: newValue\n      });\n    }\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, active: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleEditingFinished(e);\n    }\n  }\n\n  handleStartEditing() {\n    if (!this.props.readOnly) {\n      ReactDOM.findDOMNode(this).focus();\n      this.setState({active: true});\n    }\n  }\n\n  handleEditingFinished(event) {\n    if (this.props.required && !event.target.checkValidity()) {\n      // Empty input\n      this.setState({value: this.props.value, active: false});\n      return;\n    }\n    this.setState({active: false});\n    let value = this.state.value.trim();\n    if ((value || this.props.value) && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  handlePasswordFinished(value) {\n    this.setState({active: false});\n    if (value && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  render() {\n    if (this.state.active) {\n      var fieldType = this.props.type || 'text';\n    } else {\n      var spanText = this.props.type == 'password' ? '••••••••' : this.state.value;\n      var spanClass = 'in-place-edit' +\n        (this.props.readOnly ? ' disabled' : '');\n      if (!spanText) {\n        spanText = this.props.placeholder;\n        spanClass += ' placeholder';\n      }\n      if (spanText.length > 20) {\n        // FIXME: this is wrong for RTL languages.\n        spanText = spanText.substring(0, 19) + '...';\n      }\n    }\n    return (\n      this.state.active ?\n        (fieldType == 'password' ?\n          <VisiblePassword\n            value={this.state.value}\n            placeholder={this.props.placeholder}\n            required={this.props.required ? 'required' : ''}\n            autoComplete={this.props.autoComplete}\n            autoFocus={true}\n            onFinished={this.handlePasswordFinished}/>\n          :\n          <input type={fieldType}\n            value={this.state.value}\n            placeholder={this.props.placeholder}\n            required={this.props.required ? 'required' : ''}\n            autoComplete={this.props.autoComplete}\n            autoFocus\n            onChange={this.handeTextChange}\n            onKeyDown={this.handleKeyDown}\n            onBlur={this.handleEditingFinished} />\n        )\n        :\n        <span className={spanClass} onClick={this.handleStartEditing}>\n          <span className=\"content\">{spanText}</span>\n        </span>\n    );\n  }\n};\n","// Toggle [Title text >] -> [Title text v]\n\nimport React from 'react';\n\nexport default class MoreButton extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: props.open\n    };\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n\n  handleToggle() {\n    const open = !this.state.open;\n    this.setState({open: open});\n    if (this.props.onToggle) {\n      this.props.onToggle(open);\n    }\n  }\n\n  render() {\n    return (<label className=\"small clean-clickable\" onClick={this.handleToggle}>{this.props.title}...\n      {this.state.open ? <i className=\"material-icons\">expand_more</i> :\n        <i className=\"material-icons\">chevron_right</i>}\n      </label>);\n  }\n}\n","// PermissionsEditor: Component for editing permissions\n// <PermissionsEditor mode=\"JWROD\" skip=\"O\" onChange={this.handleCheckboxTest} />\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport CheckBox from './checkbox.jsx';\nimport Contact from './contact.jsx';\n\nimport { makeImageDataUrl } from '../lib/blob-helpers.js';\n\n// Translatable permission names.\nconst messages = defineMessages({\n  joiner: {\n    id: 'permission_join',\n    defaultMessage: \"Join ({val})\",\n    description: 'Name of J permission'\n  },\n  reader: {\n    id: 'permission_read',\n    defaultMessage: \"Read ({val})\",\n    description: 'Name of R permission'\n  },\n  writer: {\n    id: 'permission_write',\n    defaultMessage: \"Write ({val})\",\n    description: 'Name of W permission'\n  },\n  preser: {\n    id: 'permission_pres',\n    defaultMessage: \"Get notified ({val})\",\n    description: 'Name of P permission'\n  },\n  approver: {\n    id: 'permission_admin',\n    defaultMessage: \"Approve ({val})\",\n    description: 'Name of A permission'\n  },\n  sharer: {\n    id: 'permission_share',\n    defaultMessage: \"Share ({val})\",\n    description: 'Name of S permission'\n  },\n  deleter: {\n    id: 'permission_delete',\n    defaultMessage: \"Delete ({val})\",\n    description: 'Name of D permission'\n  },\n  owner: {\n    id: 'permission_owner',\n    defaultMessage: \"Owner ({val})\",\n    description: 'Name of O permission'\n  }\n});\n\nclass PermissionsEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mode: (props.mode || '').replace('N', '')\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(val) {\n    let mode = this.state.mode;\n    let idx = mode.indexOf(val);\n    if (idx == -1) {\n      mode += val;\n    } else {\n      mode = mode.replace(val, '');\n    }\n    this.setState({mode: mode});\n  }\n\n  handleSubmit() {\n    // Normalize string, otherwise cannot check if mode has changed.\n    var mode = (this.state.mode || 'N').split('').sort().join('');\n    var before = (this.props.mode || 'N').split('').sort().join('')\n    if (mode !== before) {\n      this.props.onSubmit(mode);\n    } else {\n      this.props.onCancel();\n    }\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const all = 'JRWPASDO';\n    const names = {\n      'J': formatMessage(messages.joiner, {val: 'J'}),\n      'R': formatMessage(messages.reader, {val: 'R'}),\n      'W': formatMessage(messages.writer, {val: 'W'}),\n      'P': formatMessage(messages.preser, {val: 'P'}),\n      'A': formatMessage(messages.approver, {val: 'A'}),\n      'S': formatMessage(messages.sharer, {val: 'S'}),\n      'D': formatMessage(messages.deleter, {val: 'D'}),\n      'O': formatMessage(messages.owner, {val: 'O'})\n    };\n\n    let skip = this.props.skip || '';\n    let mode = this.state.mode;\n    let compare = (this.props.compare || '').replace('N', '');\n    let items = [];\n    for (let i=0; i<all.length; i++) {\n      let c = all.charAt(i);\n      if (skip.indexOf(c) >= 0 && mode.indexOf(c) < 0) {\n        // Permission is marked as inactive: hide unchecked permissions, disable checked permissions\n        continue;\n      }\n      items.push(\n        <tr key={c}>\n          <td>{names[c]}</td>\n          <td className=\"checkbox\">{skip.indexOf(c) < 0 ?\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} onChange={this.handleChange}/>\n            :\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} />\n          }</td>{this.props.compare ? <td className=\"checkbox\">\n            <CheckBox name={c} checked={(compare.indexOf(c) >= 0)}/>\n          </td> : null}\n        </tr>\n      );\n    }\n\n    return (\n      <div className=\"panel-form-column\">\n        {this.props.userTitle ?\n          <ul className=\"contact-box\"><Contact\n            item={this.props.item}\n            title={this.props.userTitle}\n            avatar={makeImageDataUrl(this.props.userAvatar ? this.props.userAvatar : null)} /></ul> : null}\n        <label className=\"small\"><FormattedMessage id=\"title_permissions\"\n          defaultMessage=\"Permissions\" description=\"Section title\"/></label>\n        <table className=\"permission-editor\">\n        {this.props.compare ?\n          <thead><tr>\n            <th></th><th>{this.props.modeTitle}</th>\n            <th>{this.props.compareTitle}</th>\n          </tr></thead> :\n          null}\n        <tbody>\n          {items}\n        </tbody></table>\n        <br />\n        <div className=\"dialog-buttons\">\n          <button className=\"outline\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(PermissionsEditor);\n","// TagManager: edit topic or user tags.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\n\nimport { MAX_TAG_COUNT, MAX_TAG_LENGTH, MIN_TAG_LENGTH } from '../config.js';\nimport { arrayEqual } from '../lib/utils.js';\n\nexport default class TagManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tags: this.props.tags,\n      tagInput: '',\n      activated: this.props.activated\n    };\n\n    this.handleTagInput = this.handleTagInput.bind(this);\n    this.handleAddTag = this.handleAddTag.bind(this);\n    this.handleRemoveTag = this.handleRemoveTag.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (!arrayEqual(nextProps.tags, prevState.tags) && !prevState.activated) {\n      return {tags: nextProps.tags};\n    }\n    return null;\n  }\n\n  handleTagInput(text) {\n    this.setState({tagInput: text});\n    if (text.length > 0) {\n      const last = text[text.length-1];\n      if (text[0] == '\"') {\n        // This is a quoted string.\n        if (text.length > 1 && last == '\"') {\n          this.handleAddTag(text.substring(1, text.length-1));\n        }\n      } else if (last == ',' || last == ' ' || last == ';' || last == '\"') {\n        // User entered ',', ' ' or ';'\n        this.handleAddTag(text.substring(0, text.length-1).trim());\n      }\n    }\n  }\n\n  handleAddTag(tag) {\n    const maxTagCount = this.props.tinode.getServerLimit('maxTagCount', MAX_TAG_COUNT);\n\n    if (tag.length > 0 && this.state.tags.length < maxTagCount) {\n      const tags = this.state.tags.slice(0);\n      tags.push(tag);\n\n      this.setState({tags: tags, tagInput: ''});\n      if (this.props.onTagsChanged) {\n        this.props.onTagsChanged(tags);\n      }\n      return tags;\n    }\n    return this.state.tags;\n  }\n\n  handleRemoveTag(tag, index) {\n    const tags = this.state.tags.slice(0);\n    tags.splice(index, 1);\n    this.setState({tags: tags});\n    if (this.props.onTagsChanged) {\n      this.props.onTagsChanged(tags);\n    }\n  }\n\n  handleSubmit() {\n    // Add unprocessed input to tags, submit the list.\n    this.props.onSubmit(this.handleAddTag(this.state.tagInput.trim()));\n    this.setState({activated: false, tags: this.props.tags});\n  }\n\n  handleCancel() {\n    this.setState({activated: false, tagInput: '', tags: this.props.tags});\n    if (this.props.onCancel) {\n      this.props.onCancel();\n    }\n  }\n\n  render() {\n    const minTagLength = this.props.tinode.getServerLimit('minTagLength', MIN_TAG_LENGTH);\n    const maxTagLength = this.props.tinode.getServerLimit('maxTagLength', MAX_TAG_LENGTH);\n\n    let tags = [];\n    if (this.state.activated) {\n      this.state.tags.map((tag) => {\n        tags.push({user: tag, invalid: (tag.length < minTagLength || tag.length > maxTagLength)});\n      });\n    } else {\n      this.state.tags.map((tag) => {\n        tags.push(<span className=\"badge\" key={tags.length}>{tag}</span>);\n      });\n      if (tags.length == 0) {\n        tags = (\n          <i>\n            <FormattedMessage id=\"tags_not_found\" defaultMessage=\"No tags defined. Add some.\" description=\"\" />\n          </i>\n        );\n      }\n    }\n    return (\n      <div className=\"panel-form-column\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">{this.props.title}</label>\n        </div>\n        {this.state.activated ?\n        <div>\n          <FormattedMessage id=\"tags_editor_no_tags\" defaultMessage=\"Add some tags\"\n            description=\"Tag editor prompt when no tags are found.\">{\n            (add_tags_prompt) => <ChipInput\n              chips={tags}\n              avatarDisabled={true}\n              prompt={add_tags_prompt}\n              onEnter={this.handleAddTag}\n              onFocusLost={this.handleAddTag}\n              onCancel={this.handleCancel}\n              onChipRemoved={this.handleRemoveTag}\n              filterFunc={this.handleTagInput} />\n          }</FormattedMessage>\n          {this.props.onSubmit || this.props.onCancel ?\n            <div id=\"tag-manager-buttons\" className=\"dialog-buttons panel-form-row\">\n              <button className=\"outline\" onClick={this.handleCancel}>\n                <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n              </button>\n              <button className=\"primary\" onClick={this.handleSubmit}>\n                <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n              </button>\n            </div>\n          : null}\n        </div>\n        :\n        <div className=\"quoted\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.setState({activated: true});}}>\n            <i className=\"material-icons\">edit</i> &nbsp;<FormattedMessage id=\"title_manage_tags\" defaultMessage=\"Manage\"\n              description=\"Section title for the list of tags\" />\n          </a>\n          <>{tags}</>\n        </div>\n      }\n      </div>\n    );\n  }\n};\n","// InfoView: panel with topic/user info.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport BadgeList from '../widgets/badge-list.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport ContactList from '../widgets/contact-list.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupManager from '../widgets/group-manager.jsx';\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport MenuCancel from '../widgets/menu-cancel.jsx';\nimport MoreButton from '../widgets/more-button.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\nimport TagManager from '../widgets/tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH, NO_ACCESS_MODE } from '../config.js';\n\nimport { makeImageDataUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, theCard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  requested: {\n    id: 'requested_permissions',\n    defaultMessage: 'Requested',\n    description: 'Title for permissions'\n  },\n  granted: {\n    id: 'granted_permissions',\n    defaultMessage: 'Granted',\n    description: 'Title for permissions'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n  other_user: {\n    id: 'label_other_user',\n    defaultMessage: 'Other',\n    description: 'Label for the other user when the user is unnamed'\n  },\n  clear_messages: {\n    id: 'action_clear_messages',\n    defaultMessage: 'Clear Messages',\n    description: 'Flat button [Clear Messages] (soft-delete messages)'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n  delete_messages: {\n    id: 'action_delete_messages',\n    defaultMessage: 'Clear Messages for All',\n    description: 'Flat button [Clear for All] (hard-delete all messages)'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  leave_chat: {\n    id: 'action_leave_chat',\n    defaultMessage: 'Leave Conversation',\n    description: 'Flat button [Leave Conversation]'\n  },\n  leave_chat_warning: {\n    id: 'leave_chat_warning',\n    defaultMessage: 'Are you sure you want to leave this conversation?',\n    description: 'Alert dialog warning when unsubscribing from a chat.'\n  },\n  block_contact: {\n    id: 'action_block_contact',\n    defaultMessage: \"Block Contact\",\n    description: \"Flat button [Block Contact]\"\n  },\n  block_contact_warning: {\n    id: 'block_contact_warning',\n    defaultMessage: 'Are you sure you want to block this contact?',\n    description: 'Alert dialog warning when blocking a contact.'\n  },\n  report_chat: {\n    id: 'action_report_chat',\n    defaultMessage: 'Report Conversation',\n    description: 'Flat button [Report Group]'\n  },\n  report_chat_warning: {\n    id: 'report_chat_warning',\n    defaultMessage: 'Are you sure you want to block and report this conversation?',\n    description: 'Alert dialog warning when reporting a conversation for abuse'\n  },\n});\n\nclass InfoView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      topic: null,\n      owner: false,\n      admin: false,\n      sharer: false,\n      deleter: false,\n      muted: false,\n      address: null,\n      groupTopic: undefined,\n      channel: undefined,\n      fullName: undefined,\n      avatar: null,\n      private: null,\n      selectedContact: null,\n      access: null,\n      modeGiven: null,\n      modeWant: null,\n      modeGiven2: null, // P2P topic, the other user mode given\n      modeWant2: null,  // P2P topic, the other user mode want\n      auth: null,\n      anon: null,\n      contactList: [],\n      tags: [],\n      trustedBadges: [],\n      showMemberPanel: false,\n      showPermissionEditorFor: undefined,\n      moreInfoExpanded: false,\n      previousMetaDesc: undefined,\n      previousSubsUpdated: undefined,\n      previousTagsUpdated: undefined\n    };\n\n    this.resetSubs = this.resetSubs.bind(this);\n    this.resetDesc = this.resetDesc.bind(this);\n    this.onMetaDesc = this.onMetaDesc.bind(this);\n    this.onSubsUpdated = this.onSubsUpdated.bind(this);\n    this.onTagsUpdated = this.onTagsUpdated.bind(this);\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\n    this.handlePrivateUpdate = this.handlePrivateUpdate.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleMuted = this.handleMuted.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handleShowAddMembers = this.handleShowAddMembers.bind(this);\n    this.handleHideAddMembers = this.handleHideAddMembers.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleDeleteMessages = this.handleDeleteMessages.bind(this);\n    this.handleLeave = this.handleLeave.bind(this);\n    this.handleBlock = this.handleBlock.bind(this);\n    this.handleReport = this.handleReport.bind(this);\n    this.handleMemberSelected = this.handleMemberSelected.bind(this);\n    this.handleMoreInfo = this.handleMoreInfo.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.handleContextMenu = this.handleContextMenu.bind(this);\n  }\n\n  // No need to separately handle component mount.\n  componentDidUpdate(props) {\n    const topic = this.props.tinode.getTopic(props.topic);\n    if (!topic) {\n      return;\n    }\n\n    if (this.onMetaDesc != topic.onMetaDesc) {\n      this.previousMetaDesc = topic.onMetaDesc;\n      topic.onMetaDesc = this.onMetaDesc;\n\n      this.previousSubsUpdated = topic.onSubsUpdated;\n      topic.onSubsUpdated = this.onSubsUpdated;\n\n      if (topic.getType() == 'grp') {\n        this.previousTagsUpdated = topic.onTagsUpdated;\n        topic.onTagsUpdated = this.onTagsUpdated;\n      } else {\n        this.previousTagsUpdated = undefined;\n      }\n    }\n\n    if (this.state.topic != props.topic) {\n      this.setState({topic: props.topic});\n      this.resetDesc(topic, props);\n      this.resetSubs(topic, props);\n    }\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.setState({topic: null});\n    topic.onMetaDesc = this.previousMetaDesc;\n    topic.onSubsUpdated = this.previousSubsUpdated;\n    topic.onTagsUpdated = this.previousTagsUpdated;\n  }\n\n  resetSubs(topic, props) {\n    const newState = {contactList: []};\n    if (topic.getType() == 'p2p') {\n      // Fetch the other party in the p2p conversation.\n      // Topic may not be ready yet, so check if user is found.\n      const user2 = topic.subscriber(props.topic);\n      if (user2) {\n        newState.modeGiven2 = user2.acs.getGiven();\n        newState.modeWant2 = user2.acs.getWant();\n      } else {\n        newState.modeGiven2 = NO_ACCESS_MODE;\n        newState.modeWant2 = NO_ACCESS_MODE;\n      }\n    } else {\n      topic.subscribers((sub) => {\n        newState.contactList.push(sub);\n      }, this);\n    }\n\n    this.setState(newState);\n  }\n\n  resetDesc(topic, props) {\n    const defacs = topic.getDefaultAccess() || {};\n    const acs = topic.getAccessMode();\n\n    const badges = [];\n    if (topic.trusted) {\n      for (const [key, val] of Object.entries(topic.trusted)) {\n        if (val) {\n          badges.push(key);\n        }\n      }\n    }\n    this.setState({\n      owner: acs && acs.isOwner(),\n      admin: acs && acs.isAdmin(),\n      sharer: acs && acs.isSharer(),\n      deleter: acs && acs.isDeleter(),\n      muted: acs && acs.isMuted(),\n\n      fullName: topic.public ? topic.public.fn : undefined,\n      avatar: makeImageDataUrl(topic.public ? topic.public.photo : null),\n      trustedBadges: badges,\n      private: topic.private ? topic.private.comment : null,\n      address: topic.name,\n      groupTopic: topic.isGroupType(),\n      channel: topic.isChannelType(),\n      showMemberPanel: false,\n      access: acs ? acs.getMode() : undefined,\n      modeGiven: acs ? acs.getGiven() : undefined,\n      modeWant: acs ? acs.getWant() : undefined,\n      auth: defacs.auth,\n      anon: defacs.anon\n    });\n\n    if (topic.getType() == 'grp' && acs && acs.isOwner()) {\n      // Requesting tags: owner is editing the topic.\n      topic.getMeta(topic.startMetaQuery().withTags().build());\n    }\n  }\n\n  onMetaDesc(desc) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetDesc(topic, this.props);\n\n    if (this.previousMetaDesc && this.previousMetaDesc != this.onMetaDesc) {\n      this.previousMetaDesc(desc);\n    }\n  }\n\n  onSubsUpdated(subs) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetSubs(topic, this.props);\n\n    if (this.previousSubsUpdated && this.previousSubsUpdated != this.onSubsUpdated) {\n      this.previousSubsUpdated(subs);\n    }\n  }\n\n  onTagsUpdated(tags) {\n    this.setState({tags: tags});\n\n    if (this.previousTagsUpdated && this.previousTagsUpdated != this.onTagsUpdated) {\n      this.previousTagsUpdated();\n    }\n  }\n\n  handleFullNameUpdate(fn) {\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.fullName !== fn) {\n      this.setState({fullName: fn});\n      this.props.onTopicDescUpdate(this.props.topic, theCard(fn, null), null);\n    }\n  }\n\n  handlePrivateUpdate(comment) {\n    comment = comment.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.private !== comment) {\n      this.setState({private: comment});\n      this.props.onTopicDescUpdate(this.props.topic, null, comment || Tinode.DEL_CHAR);\n    }\n  }\n\n  handleImageChanged(img) {\n    this.setState({avatar: img});\n    this.props.onTopicDescUpdate(this.props.topic, theCard(null, img || Tinode.DEL_CHAR), null);\n  }\n\n  handleMuted(ignored, checked) {\n    this.setState({muted: checked});\n    this.props.onChangePermissions(this.props.topic, checked ? '-P' : '+P');\n  }\n\n  handlePermissionsChanged(perm) {\n    switch (this.state.showPermissionEditorFor) {\n      case 'auth':\n        this.props.onTopicDescUpdate(this.props.topic, null, null, {auth: perm});\n        break;\n      case 'anon':\n        this.props.onTopicDescUpdate(this.props.topic, null, null, {anon: perm});\n        break;\n      case 'mode':\n      case 'want':\n        this.props.onChangePermissions(this.props.topic, perm);\n        break;\n      case 'given':\n        this.props.onChangePermissions(this.props.topic, perm, this.props.topic);\n        break;\n      case 'user':\n        this.props.onChangePermissions(this.props.topic, perm, this.state.userPermissionsEdited);\n        break;\n    }\n\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handleLaunchPermissionsEditor(which, uid) {\n    const {formatMessage} = this.props.intl;\n    let toEdit, toCompare, toSkip, titleEdit, titleCompare, userTitle, userAvatar;\n    switch (which) {\n      case 'mode':\n        toEdit = this.state.access;\n        break;\n      case 'want':\n        toEdit = this.state.modeWant;\n        toCompare = this.state.modeGiven;\n        if (this.state.owner) {\n          // Don't allow owner to unset 'O' permission. All other permissions are OK.\n          toSkip = 'O';\n        } else {\n          // Allow accepting any of 'ASDO' permissions but don't allow asking for them.\n          toSkip = Tinode.AccessMode.encode(Tinode.AccessMode.diff('ASDO', this.state.modeGiven));\n          if (this.state.channel) {\n            // Channels are read-only.\n            toSkip += 'W';\n          }\n        }\n        titleEdit = formatMessage(messages.requested);\n        titleCompare = formatMessage(messages.granted);\n        break;\n      case 'given':\n        toEdit = this.state.modeGiven2;\n        toCompare = this.state.modeWant2;\n        toSkip = this.state.groupTopic ? (this.state.owner ? '' : 'O') : 'ASDO';\n        titleEdit = formatMessage(messages.granted);\n        titleCompare = formatMessage(messages.requested);\n        break;\n      case 'auth':\n        toEdit = this.state.auth;\n        toSkip = 'O';\n        break;\n      case 'anon':\n        toEdit = this.state.anon;\n        toSkip = 'O';\n        break;\n      case 'user': {\n        const topic = this.props.tinode.getTopic(this.props.topic);\n        if (!topic) {\n          return;\n        }\n        const user = topic.subscriber(uid);\n        if (!user || !user.acs) {\n          return;\n        }\n        toEdit = user.acs.getGiven();\n        toCompare = user.acs.getWant();\n        toSkip = this.state.owner ? '' : 'O';\n        titleEdit = formatMessage(messages.granted);\n        titleCompare = formatMessage(messages.requested);\n        if (user.public) {\n          userTitle = user.public.fn;\n          userAvatar = user.public.photo;\n        }\n        break;\n      }\n      default:\n        console.log(\"Unknown permission editing mode '\" + which + \"'\");\n        break;\n    }\n    this.setState({\n      showPermissionEditorFor: which,\n      userPermissionsEdited: uid,\n      userPermissionsTitle: userTitle,\n      userPermissionsAvatar: userAvatar,\n      editedPermissions: toEdit,\n      immutablePermissions: toCompare,\n      editedPermissionsTitle: titleEdit,\n      immutablePermissionsTitle: titleCompare,\n      editedPermissionsSkipped: toSkip,\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handleShowAddMembers(e) {\n    e.preventDefault();\n    this.props.onInitFind();\n    this.setState({showMemberPanel: true});\n  }\n\n  handleHideAddMembers() {\n    this.setState({showMemberPanel: false});\n  }\n\n  handleMemberUpdateRequest(members, added, removed) {\n    this.props.onMemberUpdateRequest(this.props.topic, added, removed);\n    this.setState({showMemberPanel: false});\n  }\n\n  handleDeleteMessages(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(this.state.deleter ? messages.delete_messages : messages.clear_messages), // title\n      formatMessage(this.state.deleter ? messages.delete_messages_warning : messages.clear_messages_warning), // content\n      (() => { this.props.onDeleteMessages(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleLeave(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.leave_chat), // title\n      formatMessage(messages.leave_chat_warning), // content\n      (() => { this.props.onLeaveTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleBlock(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.block_contact), // title\n      formatMessage(messages.block_contact_warning), // content\n      (() => { this.props.onBlockTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleReport(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.report_chat), // title\n      formatMessage(messages.report_chat_warning), // content\n      (() => { this.props.onReportTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleMemberSelected(uid) {\n    this.setState({selectedContact: uid});\n  }\n\n  handleMoreInfo(open) {\n    this.setState({moreInfoExpanded: open});\n  }\n\n  handleTagsUpdated(tags) {\n    if (!arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      this.props.onTopicTagsUpdate(this.props.topic, tags);\n    }\n  }\n\n  handleContextMenu(params) {\n    const {formatMessage} = this.props.intl;\n    const instance = this;\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    const user = topic.subscriber(params.topicName);\n    if (!user || !user.acs) {\n      return;\n    }\n\n    const menuItems = [\n      {title: formatMessage(messages.edit_permissions), handler: function() {\n        instance.handleLaunchPermissionsEditor('user', params.topicName);\n      }},\n      'member_delete',\n      user.acs.isMuted() ? 'member_unmute' : 'member_mute',\n      user.acs.isJoiner() ? 'member_block' : 'member_unblock'\n    ];\n    this.props.showContextMenu({\n      topicName: this.props.topic,\n      x: params.x,\n      y: params.y,\n      user: params.topicName}, menuItems);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n\n    return (\n      <div id=\"info-view\">\n        <div className=\"caption-panel\" id=\"info-caption-panel\">\n          <div className=\"panel-title\" id=\"info-title\">\n            <FormattedMessage id=\"title_info\" defaultMessage=\"Info\" description=\"Title for InfoView\" />\n          </div>\n          <div>\n            <MenuCancel onCancel={this.props.onCancel} />\n          </div>\n        </div>\n        {this.props.displayMobile ?\n          <ErrorPanel\n            level={this.props.errorLevel}\n            text={this.props.errorText}\n            onClearError={this.props.onError} /> : null}\n        {this.state.showMemberPanel ?\n          <GroupManager\n            members={this.state.contactList}\n            requiredMember={this.props.myUserId}\n            keepInitialMembers={!this.state.admin && !this.state.owner}\n            myUserId={this.props.myUserId}\n            contacts={this.props.searchableContacts}\n            onCancel={this.handleHideAddMembers}\n            onSubmit={this.handleMemberUpdateRequest} />\n          :\n        this.state.showPermissionEditorFor ?\n          <PermissionsEditor\n            mode={this.state.editedPermissions}\n            compare={this.state.immutablePermissions}\n            skip={this.state.editedPermissionsSkipped}\n            modeTitle={this.state.editedPermissionsTitle}\n            compareTitle={this.state.immutablePermissionsTitle}\n            userTitle={this.state.userPermissionsTitle}\n            item={this.state.userPermissionsEdited}\n            userAvatar={this.state.userPermissionsAvatar}\n            onSubmit={this.handlePermissionsChanged}\n            onCancel={this.handleHidePermissionsEditor}\n            />\n          :\n          <div id=\"info-view-content\" className=\"scrollable-panel\">\n            <div className=\"panel-form-row\">\n              <div className=\"panel-form-column\">\n                <div><label className=\"small\">\n                  <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                    description=\"Label for editing topic name\" />\n                </label></div>\n                <div><InPlaceEdit\n                    placeholder={this.state.groupTopic ? \"Group name\" : <i>Unknown</i>}\n                    readOnly={!this.state.owner}\n                    value={this.state.fullName}\n                    required={true}\n                    onFinished={this.handleFullNameUpdate} /></div>\n                <div>\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                      description=\"Label for editing 'private'\" />\n                  </label>\n                </div>\n                <div>\n                  <FormattedMessage id=\"private_editing_placeholder\"\n                    defaultMessage=\"Visible to you only\"\n                    description=\"Placeholder for editing 'private'\">{\n                    (private_placeholder) => <InPlaceEdit\n                      placeholder={private_placeholder}\n                      value={this.state.private}\n                      onFinished={this.handlePrivateUpdate} />\n                  }</FormattedMessage>\n                </div>\n                <BadgeList trustedBadges={this.state.trustedBadges} />\n              </div>\n              <AvatarUpload\n                tinode={this.props.tinode}\n                avatar={this.state.avatar}\n                readOnly={!this.state.owner}\n                uid={this.props.topic}\n                title={this.state.fullName}\n                onImageChanged={this.handleImageChanged}\n                onError={this.props.onError} />\n            </div>\n            <div className=\"hr\" />\n            <div className=\"panel-form-column\">\n              <div className=\"panel-form-row\">\n                <label>\n                  <FormattedMessage id=\"label_muting_topic\" defaultMessage=\"Muted:\"\n                    description=\"Label for Muting/unmuting the topic\" />\n                </label>\n                <CheckBox name=\"P\" checked={this.state.muted}\n                  onChange={this.handleMuted} />\n              </div>\n              <FormattedMessage id=\"action_more\" defaultMessage=\"More\"\n                description=\"Action for showing more content\">{\n                (more) => <MoreButton\n                  title={more}\n                  open={this.state.moreInfoExpanded}\n                  onToggle={this.handleMoreInfo} />\n              }</FormattedMessage>\n              {this.state.moreInfoExpanded ?\n                <div className=\"panel-form-column\">\n                  <div className=\"panel-form-row\">\n                    <label><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n                      description=\"Label for user address (ID)\" /></label>\n                    <tt>{this.state.address}</tt>\n                  </div>\n                  {this.state.groupTopic ?\n                    <div className=\"panel-form-row\">\n                      <label>\n                        <FormattedMessage id=\"label_your_permissions\" defaultMessage=\"Your permissions:\"\n                          description=\"Label for current user permissions\" />\n                      </label>\n                      <tt className=\"clickable\"\n                        onClick={this.handleLaunchPermissionsEditor.bind(this, 'want')}>\n                        {this.state.access}\n                      </tt>\n                    </div>\n                    :\n                    <div>\n                      <div>\n                        <label className=\"small\">\n                          <FormattedMessage id=\"label_permissions\" defaultMessage=\"Permissions:\"\n                            description=\"Section title\" />\n                        </label>\n                      </div>\n                      <div className=\"quoted\">\n                        <div>\n                          <FormattedMessage id=\"label_you\" defaultMessage=\"You:\"\n                            description=\"Label for the current user\" /> &nbsp;<tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'want')}>\n                          {this.state.access}\n                        </tt></div>\n                        <div>{this.state.fullName ? this.state.fullName : formatMessage(messages.other_user)}:\n                          &nbsp;<tt className=\"clickable\" onClick={this.handleLaunchPermissionsEditor.bind(this, 'given')}>\n                          {this.state.modeGiven2}\n                          </tt>\n                        </div>\n                      </div>\n                    </div>\n                  }\n                  {this.state.sharer && (this.state.auth || this.state.anon) ?\n                  <div>\n                    <div>\n                      <label className=\"small\">\n                        <FormattedMessage id=\"label_default_access\" defaultMessage=\"Default access mode:\"\n                          description=\"Section title\" />\n                      </label>\n                    </div>\n                    <div className=\"quoted\">\n                      <div>Auth: {this.state.admin ?\n                        <tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>\n                          {this.state.auth}\n                        </tt>\n                        :\n                        <tt>{this.state.auth}</tt>\n                      }\n                      </div>\n                      <div>Anon: {this.state.admin ?\n                        <tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>\n                          {this.state.anon}\n                        </tt>\n                        :\n                        <tt>{this.state.anon}</tt>\n                      }\n                      </div>\n                    </div>\n                  </div>\n                  :\n                  null\n                }\n                </div>\n              :\n              null\n              }\n            </div>\n            <div className=\"hr\" />\n            {this.state.owner ?\n              <>\n                <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (user discovery)\"\n                  description=\"Section title for TagManager\">{\n                  (tags) => <TagManager\n                    title={tags}\n                    tags={this.state.tags}\n                    activated={false}\n                    tinode={this.props.tinode}\n                    onSubmit={this.handleTagsUpdated} />\n                }</FormattedMessage>\n                <div className=\"hr\" />\n              </>\n              :\n              null\n            }\n            <div className=\"panel-form-column\">\n              {!this.state.channel ?\n                <a href=\"#\" className=\"flat-button\" onClick={this.handleDeleteMessages}>\n                  <i className=\"material-icons\">delete_outline</i> &nbsp;{\n                    formatMessage(this.state.deleter ? messages.delete_messages : messages.clear_messages)\n                  }\n                </a>\n                :\n                null\n              }\n              <a href=\"#\" className=\"danger flat-button\" onClick={this.handleLeave}>\n                <i className=\"material-icons\">exit_to_app</i> &nbsp;{formatMessage(messages.leave_chat)}\n              </a>\n              {!this.state.groupTopic ?\n                <a href=\"#\" className=\"danger flat-button\" onClick={this.handleBlock}>\n                  <i className=\"material-icons\">block</i> &nbsp;{formatMessage(messages.block_contact)}\n                </a>\n                :\n                null\n              }\n              {!this.state.owner ?\n                <a href=\"#\" className=\"danger flat-button\" onClick={this.handleReport}>\n                  <i className=\"material-icons\">report</i> &nbsp;{formatMessage(messages.report_chat)}\n                </a>\n                :\n                null\n              }\n            </div>\n            {this.state.groupTopic && this.state.sharer ?\n              <>\n                <div className=\"hr\" />\n                <div className=\"panel-form-column\">\n                  <div className=\"panel-form-row\">\n                    <label className=\"small\">\n                      <FormattedMessage id=\"label_group_members\" defaultMessage=\"Group members:\"\n                        description=\"Section title or label\" />\n                    </label>\n                  </div>\n                  <div className=\"panel-form-row\">\n                    <a href=\"#\" className=\"flat-button\" onClick={this.handleShowAddMembers}>\n                      <i className=\"material-icons\">person_add</i> &nbsp;<FormattedMessage id=\"button_add_members\"\n                        defaultMessage=\"Add members\" description=\"Flat button [Add members] (to topic)\" />\n                    </a>\n                  </div>\n                  <FormattedMessage id=\"group_has_no_members\" defaultMessage=\"No members\"\n                    description=\"Shown in place of group members\">{\n                    (no_members) => <ContactList\n                      contacts={this.state.contactList}\n                      myUserId={this.props.myUserId}\n                      emptyListMessage={no_members}\n                      topicSelected={this.state.selectedContact}\n                      showOnline={false}\n                      showUnread={false}\n                      showMode={true}\n                      noScroll={true}\n                      onTopicSelected={this.handleMemberSelected}\n                      showContextMenu={this.state.admin ? this.handleContextMenu : false}\n                    />\n                  }</FormattedMessage>\n                </div>\n              </>\n              :\n              null\n            }\n          </div>\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(InfoView);\n","// File uload/download progress indicator with a cancel inside.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class FileProgress extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"uploader\">\n        <div><span style={{width: (this.props.progress * 100) + \"%\"}}></span></div>\n        {this.props.progress < 0.999 ?\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n            <i className=\"material-icons\">close</i> <FormattedMessage id=\"action_cancel\"\n              defaultMessage=\"cancel\" description=\"Call to action [cancel]\" />\n          </a>\n          :\n          <FormattedMessage id=\"upload_finishing\" defaultMessage=\"finishing...\"\n            description=\"Notification that upload is finishing\" />\n        }\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\nimport { bytesToHumanSize } from '../lib/strformat.js';\nimport { isUrlRelative, sanitizeUrl } from '../lib/utils.js';\n\nexport default class Attachment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      downloader: null,\n      progress: 0\n    };\n\n    this.downloadFile = this.downloadFile.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  downloadFile(url, filename, mimetype) {\n    if (!url) {\n      this.props.onError(\"Invalid download URL '\" + url + \"'\");\n      return;\n    }\n\n    const downloader = this.props.tinode.getLargeFileHelper();\n    this.setState({downloader: downloader});\n    downloader.download(url, filename, mimetype,\n      (loaded) => {\n        this.setState({progress: loaded / this.props.size});\n      },\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    ).then(() => {\n      this.setState({downloader: null, progress: 0});\n    }).catch((err) => {\n      if (err) {\n        this.props.onError(\"Error downloading file: \" + err.message, 'err');\n      }\n      this.setState({downloader: null, progress: 0});\n    });\n  }\n\n  handleCancel() {\n    if (this.props.uploading) {\n      this.props.onCancelUpload();\n    } else if (this.state.downloader) {\n      this.state.downloader.cancel();\n    }\n  }\n\n  render() {\n    let filename = this.props.filename || 'file_attachment';\n    if (filename.length > 36) {\n      filename = filename.substr(0, 16) + '...' + filename.substr(-16);\n    }\n    let size = this.props.size > 0 ?\n      <span className=\"small gray\">({bytesToHumanSize(this.props.size)})</span> :\n      null;\n\n    // Detect if the download URL is relative or absolute.\n    // If the URL is relative use LargeFileHelper to attach authentication\n    // credentials to the request.\n    let url, helperFunc;\n    if (!this.props.uploading && !this.state.downloader && isUrlRelative(this.props.downloadUrl)) {\n      // Relative URL. Use download helper.\n      url = '#';\n      helperFunc = (e) => {\n        e.preventDefault();\n        this.downloadFile(this.props.downloadUrl, this.props.filename, this.props.mimetype);\n      };\n    } else {\n      url = sanitizeUrl(this.props.downloadUrl);\n      helperFunc = null;\n    }\n    const downloadWidget = <><i className=\"material-icons\">file_download</i> <FormattedMessage id=\"save_attachment\"\n      defaultMessage=\"save\" description=\"Call to save an attachment\" /></>;\n    return (\n      <div className=\"attachment\">\n        <div><i className=\"material-icons big gray\">insert_drive_file</i></div>\n        <div className=\"flex-column\">\n          <div>{filename} {size}</div>\n          {this.props.uploading || this.state.downloader ?\n            <FileProgress progress={this.props.uploading ? this.props.progress : this.state.progress}\n              onCancel={this.handleCancel} />\n            :\n            <div>{url ?\n              <a href={url} download={this.props.filename} onClick={helperFunc}>{downloadWidget}</a>\n              :\n              <span className=\"light-gray\">{downloadWidget}</span>\n            }</div>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n","// Image view with progress bar and a cancel button.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\n\nexport default class UploadingImage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"inline-image\">\n        {React.createElement('img', this.props)}\n        <div className=\"rounded-container\">\n          <FileProgress progress={this.props.progress} onCancel={this.props.onCancelUpload} />\n        </div>\n      </div>\n    );\n  }\n};\n","// Single message, sent or received.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport Attachment from './attachment.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\nimport UploadingImage from './uploading-image.jsx'\nimport { sanitizeImageUrl, sanitizeUrl } from '../lib/utils.js';\n\nexport default class ChatMessage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      progress: 0\n    };\n\n    if (props.uploader) {\n      props.uploader.onProgress = this.handleProgress.bind(this);\n    }\n\n    this.handleImagePreview = this.handleImagePreview.bind(this);\n    this.handleFormButtonClick = this.handleFormButtonClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n  }\n\n  handleImagePreview(e) {\n    e.preventDefault();\n    this.props.onImagePreview({\n      url: e.target.src,\n      filename: e.target.title,\n      width: e.target.dataset.width,\n      height: e.target.dataset.height,\n      size: e.target.dataset.size,\n      type: e.target.dataset.mime\n    });\n  }\n\n  handleFormButtonClick(e) {\n    e.preventDefault();\n    const data = {\n      seq: this.props.seq\n    };\n    data.resp = {};\n    if (e.target.dataset.name) {\n      data.resp[e.target.dataset.name] = e.target.dataset.val ? e.target.dataset.val :\n        e.target.dataset.val === undefined ? 1 : '' + e.target.dataset.val;\n    }\n    if (e.target.dataset.act == 'url') {\n      data.ref = sanitizeUrl(e.target.dataset.ref) || 'about:blank';\n    }\n    const text = e.target.dataset.title || 'unknown';\n    this.props.onFormResponse(e.target.dataset.act, text, data);\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const menuItems = this.props.received == Tinode.MESSAGE_STATUS_FAILED ? ['menu_item_send_retry'] : [];\n    this.props.showContextMenu({ seq: this.props.seq, content: this.props.content,\n                                 y: e.pageY, x: e.pageX }, menuItems);\n  }\n\n  handleProgress(ratio) {\n    this.setState({progress: ratio});\n  }\n\n  handleCancelUpload() {\n    this.props.onCancelUpload(this.props.seq, this.props.uploader);\n  }\n\n  render() {\n    const sideClass = this.props.deleted ? 'center' :\n      (this.props.sequence + ' ' + (this.props.response ? 'left' : 'right'));\n    const bubbleClass = (this.props.sequence == 'single' || this.props.sequence == 'last') ? 'bubble tip' : 'bubble';\n    const avatar = this.props.deleted ? null : (this.props.userAvatar || true);\n    const fullDisplay = (this.props.userFrom && this.props.response && !this.props.deleted &&\n      (this.props.sequence == 'single' || this.props.sequence == 'last'));\n\n    let content = this.props.content;\n    const attachments = [];\n    if (this.props.mimeType == Drafty.getContentType() && Drafty.isValid(content)) {\n      Drafty.attachments(content, function(att, i) {\n        if (att.mime == 'application/json') {\n          // Don't show json objects as attachments.\n          // They are not meant for users.\n          return;\n        }\n        attachments.push(<Attachment\n          tinode={this.props.tinode}\n          downloadUrl={Drafty.getDownloadUrl(att)}\n          filename={att.name} uploading={Drafty.isProcessing(att)}\n          mimetype={att.mime} size={Drafty.getEntitySize(att)}\n          progress={this.state.progress}\n          onCancelUpload={this.handleCancelUpload}\n          onError={this.props.onError}\n          key={i} />);\n      }, this);\n      content = React.createElement(React.Fragment, null, Drafty.format(content, draftyFormatter, this));\n    } else if (this.props.deleted) {\n      // Message represents a range of deleted messages.\n      content = <><i className=\"material-icons gray\">block</i> <i className=\"gray\">\n        <FormattedMessage id=\"deleted_content\"\n          defaultMessage=\"content deleted\" description=\"Shown when messages are deleted\" />\n      </i></>\n    } else if (typeof content != 'string') {\n      content = <>\n          <i className=\"material-icons gray\">error_outline</i> <i className=\"gray\">\n            <FormattedMessage id=\"invalid_content\"\n              defaultMessage=\"invalid content\" description=\"Shown when message is unreadable\" /></i>\n        </>\n    }\n\n    return (\n      <li className={sideClass}>\n        {this.props.userFrom && this.props.response ?\n          <div className=\"avatar-box\">\n            {fullDisplay ?\n              <LetterTile\n                topic={this.props.userFrom}\n                title={this.props.userName}\n                avatar={avatar} /> :\n              null}\n          </div> :\n          null}\n        <div>\n          <div className={bubbleClass}>\n            <div className=\"content-meta\">\n              <div className=\"message-content\">\n                {content}\n                {attachments}\n              </div>\n              {this.props.timestamp ?\n                <ReceivedMarker\n                  timestamp={this.props.timestamp}\n                  received={this.props.received} />\n                : null}\n            </div>\n            {this.props.deleted || !this.props.showContextMenu ?\n              null :\n              <span className=\"menuTrigger\">\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">expand_more</i>\n                </a>\n              </span>\n            }\n          </div>\n          {fullDisplay ?\n            <div className=\"author\">\n              <FormattedMessage id=\"user_not_found\" defaultMessage=\"Not found\"\n                description=\"In place of a user's full name when the user is not found.\">{\n                    (notFound) => {return this.props.userName || <i>{notFound}</i>}\n              }</FormattedMessage>\n            </div>\n            : null\n          }\n        </div>\n      </li>\n    );\n  }\n};\n\n// Convert Drafty object to a tree of React elements.\nimport { BROKEN_IMAGE_SIZE, REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\n\n// Converts Drafty elements into React classes.\n// 'this' is set by the caller.\nfunction draftyFormatter(style, data, values, key) {\n  if (style == 'EX') {\n    // attachments are handled elsewhere.\n    return null;\n  }\n\n  let el = Drafty.tagName(style);\n  if (el) {\n    const attr = Drafty.attrValue(style, data) || {};\n    attr.key = key;\n    switch (style) {\n      case 'HL':\n        // Highlighted text. Assign class name.\n        attr.className = 'highlight';\n        break;\n      case 'IM':\n        // Additional processing for images\n        if (data) {\n          attr.className = 'inline-image';\n          const dim = fitImageSize(data.width, data.height,\n            Math.min(this.props.viewportWidth - REM_SIZE * 6.5, REM_SIZE * 34.5), REM_SIZE * 24, false) ||\n            {dstWidth: BROKEN_IMAGE_SIZE, dstHeight: BROKEN_IMAGE_SIZE};\n          attr.style = {\n            width: dim.dstWidth + 'px',\n            height: dim.dstHeight + 'px',\n            // Looks like a Chrome bug: broken image does not respect 'width' and 'height'.\n            minWidth: dim.dstWidth + 'px',\n            minHeight: dim.dstHeight + 'px'\n          };\n          if (!Drafty.isProcessing(data)) {\n            attr.src = this.props.tinode.authorizeURL(sanitizeImageUrl(attr.src));\n            attr.alt = data.name;\n            if (attr.src) {\n              attr.onClick = this.handleImagePreview;\n              attr.className += ' image-clickable';\n              attr.loading = 'lazy';\n            } else {\n              attr.src = 'img/broken_image.png';\n            }\n          } else {\n            // Use custom element instead of <img>.\n            el = UploadingImage;\n          }\n        }\n        break;\n      case 'BN':\n        // Button\n        attr.onClick = this.handleFormButtonClick;\n        let inner = React.Children.map(values, (child) => {\n          return typeof child == 'string' ? child : undefined;\n        });\n        if (!inner || inner.length == 0) {\n          inner = [attr.name]\n        }\n        // Get text which will be sent back when the button is clicked.\n        attr['data-title'] = inner.join('');\n        break;\n      case 'FM':\n        // Form\n        attr.className = 'bot-form';\n        break;\n      case 'RW':\n        // Form element formatting is dependent on element content.\n        break;\n      default:\n        if (el == '_UNKN') {\n          // Unknown element.\n          // TODO: make it prettier.\n          el = <><span className=\"material-icons\">extension</span></>;\n        }\n        break;\n    }\n    return React.createElement(el, attr, values);\n  } else {\n    return values;\n  }\n};\n","// Send message form.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport { KEYPRESS_DELAY } from '../config.js';\nimport { filePasted } from '../lib/blob-helpers.js';\n\nconst messages = defineMessages({\n  messaging_disabled: {\n    id: 'messaging_disabled_prompt',\n    defaultMessage: 'Messaging disabled',\n    description: 'Prompt in SendMessage in read-only topic'\n  },\n  type_new_message: {\n    id: 'new_message_prompt',\n    defaultMessage: 'New message',\n    description: 'Prompt in send message field'\n  },\n  add_image_caption: {\n    id: 'image_caption_prompt',\n    defaultMessage: 'Image caption',\n    description: 'Prompt in SendMessage for attached image'\n  },\n  file_attachment_too_large: {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  },\n  cannot_initiate_upload: {\n    id: 'cannot_initiate_file_upload',\n    defaultMessage: 'Cannot initiate file upload.',\n    description: 'Generic error messagewhen attachment fails'\n  },\n});\n\nclass SendMessage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      message: '',\n      // Make initial keypress time as if it happened 5001 milliseconds in the past.\n      keypressTimestamp: new Date().getTime() - KEYPRESS_DELAY - 1\n    };\n\n    this.handlePasteEvent = this.handlePasteEvent.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleSend = this.handleSend.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleMessageTyping = this.handleMessageTyping.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.addEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.removeEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.messageEditArea) {\n      this.messageEditArea.focus();\n    }\n  }\n\n  handlePasteEvent(e) {\n    if (this.props.disabled) {\n      return;\n    }\n    // FIXME: handle large files too.\n    if (filePasted(e,\n      (bits, mime, width, height, fname) => {\n        this.props.onAttachImage(mime, bits, width, height, fname);\n      },\n      (mime, bits, fname) => {\n        this.props.onAttachFile(mime, bits, fname);\n      },\n      this.props.onError)) {\n\n      // If a file was pasted, don't paste base64 data into input field.\n      e.preventDefault();\n    }\n  }\n\n  handleAttachImage(e) {\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachImage(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleAttachFile(e) {\n    const {formatMessage} = this.props.intl;\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachFile(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleSend(e) {\n    e.preventDefault();\n    const message = this.state.message.trim();\n    if (message || this.props.acceptBlank || this.props.noInput) {\n      this.props.onSendMessage(message);\n      this.setState({message: ''});\n    }\n  }\n\n  /* Send on Enter key */\n  handleKeyPress(e) {\n    // Remove this if you don't want Enter to trigger send\n    if (e.key === 'Enter') {\n      // Have Shift-Enter insert a line break instead\n      if (!e.shiftKey) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.handleSend(e);\n      }\n    }\n  }\n\n  handleMessageTyping(e) {\n    const newState = {message: e.target.value};\n    if (this.props.onKeyPress) {\n      const now = new Date().getTime();\n      if (now - this.state.keypressTimestamp > KEYPRESS_DELAY) {\n        this.props.onKeyPress();\n        newState.keypressTimestamp = now;\n      }\n    }\n    this.setState(newState);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const prompt = this.props.disabled ?\n      formatMessage(messages.messaging_disabled) :\n      (this.props.messagePrompt ?\n        formatMessage(messages[this.props.messagePrompt]) :\n        formatMessage(messages.type_new_message));\n    return (\n      <div id=\"send-message-panel\">\n        {!this.props.disabled ?\n          <>\n            {this.props.onAttachFile ?\n              <>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachImage.click();}} title=\"Add image\">\n                  <i className=\"material-icons secondary\">photo</i>\n                </a>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachFile.click();}} title=\"Attach file\">\n                  <i className=\"material-icons secondary\">attach_file</i>\n                </a>\n              </>\n              :\n              null}\n            {this.props.noInput ?\n              <div className=\"hr thin\" /> :\n              <textarea id=\"sendMessage\" placeholder={prompt}\n                value={this.state.message} onChange={this.handleMessageTyping}\n                onKeyPress={this.handleKeyPress}\n                ref={(ref) => {this.messageEditArea = ref;}}\n                autoFocus />}\n            <a href=\"#\" onClick={this.handleSend} title=\"Send\">\n              <i className=\"material-icons\">send</i>\n            </a>\n            <input type=\"file\" ref={(ref) => {this.attachFile = ref;}}\n              onChange={this.handleAttachFile} style={{display: 'none'}} />\n            <input type=\"file\" ref={(ref) => {this.attachImage = ref;}} accept=\"image/*\"\n              onChange={this.handleAttachImage} style={{display: 'none'}} />\n          </>\n          :\n          <div id=\"writing-disabled\">{prompt}</div>\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SendMessage);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { bytesToHumanSize } from '../lib/strformat.js';\n\n// Get material icon name from mime type.\nfunction iconFromMime(mime) {\n  // If more icons become available in material icons, add them to this mime-to-icon mapping.\n  const mimeToIcon = {default: 'insert_drive_file', image: 'image', text: 'description', video: 'theaters'};\n\n  return mimeToIcon[mime] || mimeToIcon[(mime || '').split('/')[0]] || mimeToIcon['default'];\n}\n\nexport default class DocPreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleSendDoc = this.handleSendDoc.bind(this);\n  }\n\n  handleSendDoc(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(this.props.content.file);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          <span>{this.props.content.filename}</span>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\">\n          <div className=\"flex-column narrow\">\n            <i className=\"material-icons gray\">{iconFromMime(this.props.content.type)}</i>\n            <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n              description=\"Label for file content type (mime)\" /></b> {this.props.content.type || 'application/octet-stream'}</div>\n            <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n              description=\"Label for file size\" /></b> {bytesToHumanSize(this.props.content.size)}</div>\n          </div>\n        </div>\n        <SendMessage\n          noInput={true}\n          onSendMessage={this.handleSendDoc}\n          onError={this.props.onError} />\n      </div>\n    );\n  }\n};\n","// GroupSubs: a list of group subscribers currently online.\n// Show in the topic title bar\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { MAX_ONLINE_IN_TOPIC } from '../config.js'\n\nimport LetterTile from './letter-tile.jsx';\nimport { makeImageDataUrl } from '../lib/blob-helpers.js';\n\nexport default class GroupSubs extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const usersOnline = [];\n    const totalCount = (this.props.subscribers || []).length;\n    const countToShow = Math.min(MAX_ONLINE_IN_TOPIC, totalCount);\n\n    (this.props.subscribers || []).some((sub) => {\n      usersOnline.push(\n        <div className=\"avatar-box\" key={sub.user}>\n          <LetterTile\n            topic={sub.user}\n            avatar={makeImageDataUrl(sub.public ? sub.public.photo : null) || true}\n            title={sub.public ? sub.public.fn : null} />\n        </div>\n      );\n      return usersOnline.length == countToShow;\n    });\n\n    return (\n      <div id=\"topic-users\">{usersOnline} {totalCount > countToShow ?\n        <span>\n          <FormattedMessage id=\"more_online_members\" defaultMessage=\"+{overflow} more\"\n              description=\"Shown in MessagesView title bar when the number of online subscribers exceeds MAX_ONLINE_IN_TOPIC\"\n              values={{ overflow: (totalCount - countToShow) }} />\n        </span> : null}\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\nimport { bytesToHumanSize } from '../lib/strformat.js';\n\nexport default class ImagePreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      width: 0,\n      height: 0\n    };\n\n    this.handleSendImage = this.handleSendImage.bind(this);\n  }\n\n  assignWidth(node) {\n    if (node && !this.state.width) {\n      const bounds = node.getBoundingClientRect();\n      this.setState({\n        width: bounds.width | 0,\n        height: bounds.height | 0\n      });\n    }\n  }\n\n  handleSendImage(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(caption, this.props.content.blob);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n\n    const dim = fitImageSize(this.props.content.width, this.props.content.height,\n      this.state.width, this.state.height, false);\n    const size = dim ? { width: dim.dstWidth + 'px', height: dim.dstHeight + 'px' } :\n      ((this.props.content.width > this.props.content.height) ? {width: '100%'} : {height: '100%'});\n    size.maxWidth = '100%';\n    size.maxHeight = '100%';\n\n    let filename = this.props.content.filename;\n    // Average font aspect ratio is ~0.5; File name takes 1/3 of the viewport width.\n    const maxlength = Math.max(((this.state.width / REM_SIZE / 1.5) | 0) - 2, 12);\n    if (filename.length > maxlength) {\n      filename = filename.slice(0, maxlength/2 - 1) + '…' + filename.slice(1 - maxlength/2);\n    }\n    const width = this.props.content.width || '-';\n    const height = this.props.content.height || '-';\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          {!this.props.onSendMessage ?\n            <a href={this.props.content.url} download={this.props.content.filename}>\n              <i className=\"material-icons\">file_download</i> <FormattedMessage\n                id=\"download_action\" defaultMessage=\"download\" description=\"Call to action [download]\" />\n            </a>\n            :\n            <span>{this.props.content.filename}</span>\n          }\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\" ref={(node) => this.assignWidth(node)}>\n          <img src={this.props.content.url} style={size} className=\"image-preview\" alt={this.props.content.filename} />\n        </div>\n        {this.props.onSendMessage ?\n          <SendMessage\n            messagePrompt=\"add_image_caption\"\n            acceptBlank={true}\n            onSendMessage={this.handleSendImage}\n            onError={this.props.onError} />\n          :\n          <div id=\"image-preview-footer\">\n            <div>\n              <div><b><FormattedMessage id=\"label_file_name\" defaultMessage=\"File name:\"\n                description=\"Label for a file name\" /></b></div>\n              <div><span title={this.props.content.filename}>{filename ? filename : '-'}</span></div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n                description=\"Label for file content type (mime)\" /></b></div>\n              <div>{this.props.content.type}</div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n                description=\"Label for file size\" /></b></div>\n              <div>{width} &times; {height} px; {bytesToHumanSize(this.props.content.size)}</div>\n            </div>\n          </div>}\n      </div>\n    );\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Invitation extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleButtonAction = this.handleButtonAction.bind(this);\n  }\n\n  handleButtonAction(evt, data) {\n    evt.preventDefault();\n    this.props.onAction(data);\n  }\n\n  render() {\n    return (\n      <div className=\"accept-invite-panel\">\n        <div className=\"title\">\n          <FormattedMessage id=\"chat_invitation\"\n            defaultMessage=\"You are invited to start a new chat. What would you like to do?\"\n            description=\"New chat invitation message: [Accept] [Ignore] [Block].\" />\n        </div>\n        <div className=\"footer\">\n          <button className=\"primary\" onClick={event => { this.handleButtonAction(event, \"accept\"); }}>\n            <FormattedMessage id=\"chat_invitation_accept\"\n              defaultMessage=\"Accept\" description=\"Action [Accept] for chat invitation.\" />\n          </button>\n          <button className=\"secondary\" onClick={event => { this.handleButtonAction(event, \"delete\"); }}>\n            <FormattedMessage id=\"chat_invitation_ignore\"\n              defaultMessage=\"Ignore\" description=\"Action [Ignore] for chat invitation.\" />\n          </button>\n          <button className=\"secondary\" onClick={event => { this.handleButtonAction(event, \"block\"); }}>\n            <FormattedMessage id=\"chat_invitation_block\"\n              defaultMessage=\"Block\" description=\"Action [Block] for chat invitation.\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n","/* This is just a static page to display when no conversation is selected. */\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME } from '../config.js';\n\nexport default class LogoView extends React.PureComponent {\n  render() {\n    const version = APP_NAME + ' (' + Tinode.getLibrary() + ')';\n    return (\n      <div id=\"dummy-view\">\n        <div>\n          <a href=\"https://github.com/tinode/chat/\">\n            <img id=\"logo\" alt=\"logo\" src=\"img/logo.svg\" />\n            <h2>Tinode Web</h2>\n          </a>\n          <p><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\"\n            description=\"Label for a client version\" /> {version}</p>\n          <p><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\"\n            description=\"Label for a server version\" /> {this.props.serverVersion} ({this.props.serverAddress})</p>\n        </div>\n      </div>\n    );\n  }\n};\n","// Utility class for hash navigation.\n\n// Parse hash as in http://www.example.com/path#hash as if it were\n// path and arguments.\nexport default class HashNavigation {\n  static parseUrlHash(hash) {\n    // Split path from args, path -> parts[0], args->path[1]\n    const parts = hash.split('?', 2);\n    const params = {};\n    let path = [];\n    if (parts[0]) {\n      path = parts[0].substr(1).split('/');\n    }\n    if (parts[1]) {\n      parts[1].split('&').forEach(function(part) {\n        let item = part.split('=');\n        if (item[0]) {\n          params[decodeURIComponent(item[0])] = decodeURIComponent(item[1]);\n        }\n      });\n    }\n    return {path: path, params: params};\n  }\n\n  static navigateTo(url) {\n    window.location.hash = url;\n  }\n\n  static composeUrlHash(path, params) {\n    let url = path.join('/');\n    const args = [];\n    for (const key in params) {\n      if (params.hasOwnProperty(key)) {\n        args.push(key + '=' + params[key]);\n      }\n    }\n    if (args.length > 0) {\n      url += '?' + args.join('&');\n    }\n    return url;\n  }\n\n  static addUrlParam(hash, key, value) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.params[key] = value;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static removeUrlParam(hash, key) {\n    const parsed = this.parseUrlHash(hash);\n    delete parsed.params[key];\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlSidePanel(hash, sidepanel) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[0] = sidepanel;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlTopic(hash, topic) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[1] = topic;\n    // Close InfoView on topic change.\n    delete parsed.params.info;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n}\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\nconst Drafty = Tinode.Drafty;\n\nimport ChatMessage from '../widgets/chat-message.jsx';\nimport ContactBadges from '../widgets/contact-badges.jsx';\nimport DocPreview from '../widgets/doc-preview.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupSubs from '../widgets/group-subs.jsx';\nimport ImagePreview from '../widgets/image-preview.jsx';\nimport Invitation from '../widgets/invitation.jsx';\nimport LetterTile from '../widgets/letter-tile.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport LogoView from './logo-view.jsx';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { DEFAULT_P2P_ACCESS_MODE, IMAGE_PREVIEW_DIM, KEYPRESS_DELAY, MESSAGES_PAGE,\n  MAX_EXTERN_ATTACHMENT_SIZE, MAX_IMAGE_DIM, MAX_INBAND_ATTACHMENT_SIZE, READ_DELAY } from '../config.js';\nimport { SUPPORTED_IMAGE_FORMATS, blobToBase64, filePasted, fileToBase64,\n  imageScaled, makeImageDataUrl } from '../lib/blob-helpers.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { bytesToHumanSize, shortDateFormat } from '../lib/strformat.js';\n\n// Run timer with this frequency (ms) for checking notification queue.\nconst NOTIFICATION_EXEC_INTERVAL = 300;\n\nconst messages = defineMessages({\n  online_now: {\n    id: 'online_now',\n    defaultMessage: 'online now',\n    description: 'Indicator that the user or topic is currently online',\n  },\n  last_seen: {\n    id: 'last_seen_timestamp',\n    defaultMessage: 'Last seen',\n    description: 'Label for the timestamp of when the user or topic was last online'\n  },\n  not_found: {\n    id: 'title_not_found',\n    defaultMessage: 'Not found',\n    description: 'Title shown when topic is not found'\n  },\n  channel: {\n    id: 'channel',\n    defaultMessage: 'channel',\n    description: 'Subtitle shown for channels in MessagesView instead of last seen'\n  },\n  file_attachment_too_large: {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  }\n});\n\n// Checks if the access permissions are granted but not yet accepted.\nfunction isUnconfirmed(acs) {\n  if (acs) {\n    const ex = acs.getExcessive() || '';\n    return acs.isJoiner('given') && (ex.includes('R') || ex.includes('W'));\n  }\n  return false;\n}\n\nfunction isPeerRestricted(acs) {\n  if (acs) {\n    const ms = acs.getMissing() || '';\n    return acs.isJoiner('want') && (ms.includes('R') || ms.includes('W'));\n  }\n  return false;\n}\n\nclass MessagesView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = MessagesView.getDerivedStateFromProps(props, {});\n\n    this.leave = this.leave.bind(this);\n    this.sendImageAttachment = this.sendImageAttachment.bind(this);\n    this.sendFileAttachment = this.sendFileAttachment.bind(this);\n    this.sendKeyPress = this.sendKeyPress.bind(this);\n    this.handleScrollReference = this.handleScrollReference.bind(this);\n    this.handleScrollEvent = this.handleScrollEvent.bind(this);\n    this.handleDescChange = this.handleDescChange.bind(this);\n    this.handleSubsUpdated = this.handleSubsUpdated.bind(this);\n    this.handleNewMessage = this.handleNewMessage.bind(this);\n    this.handleAllMessagesReceived = this.handleAllMessagesReceived.bind(this);\n    this.handleInfoReceipt = this.handleInfoReceipt.bind(this);\n    this.handleImagePostview = this.handleImagePostview.bind(this);\n    this.handleClosePreview = this.handleClosePreview.bind(this);\n    this.handleFormResponse = this.handleFormResponse.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleShowContextMenuMessage = this.handleShowContextMenuMessage.bind(this);\n    this.handleNewChatAcceptance = this.handleNewChatAcceptance.bind(this);\n    this.handleEnablePeer = this.handleEnablePeer.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n    this.postReadNotification = this.postReadNotification.bind(this);\n    this.clearNotificationQueue = this.clearNotificationQueue.bind(this);\n\n    this.readNotificationQueue = [];\n    this.readNotificationTimer = null;\n  }\n\n  componentDidMount() {\n    // this.propsChange(this.props, this.state);\n    if (this.messagesScroller) {\n      this.messagesScroller.addEventListener('scroll', this.handleScrollEvent);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messagesScroller) {\n      this.messagesScroller.removeEventListener('scroll', this.handleScrollEvent);\n    }\n\n    // Flush all notifications.\n    this.clearNotificationQueue();\n  }\n\n  // Scroll last message into view on component update e.g. on message received\n  // or vertical shrinking.\n  componentDidUpdate(prevProps, prevState) {\n    if (this.messagesScroller) {\n      if (prevState.topic != this.state.topic || prevState.messages.length != this.state.messages.length) {\n        // New message\n        this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n      } else if (prevProps.viewportHeight > this.props.viewportHeight) {\n        // Componet changed height.\n        this.messagesScroller.scrollTop += prevProps.viewportHeight - this.props.viewportHeight;\n      }\n    }\n\n    const topic = this.props.tinode ? this.props.tinode.getTopic(this.state.topic) : undefined;\n    if (this.state.topic != prevState.topic) {\n      if (prevState.topic && !Tinode.isNewGroupTopicName(prevState.topic)) {\n        this.leave(prevState.topic);\n      }\n\n      if (topic) {\n        topic.onData = this.handleNewMessage;\n        topic.onAllMessagesReceived = this.handleAllMessagesReceived;\n        topic.onInfo = this.handleInfoReceipt;\n        topic.onMetaDesc = this.handleDescChange;\n        topic.onSubsUpdated = this.handleSubsUpdated;\n        topic.onPres = this.handleSubsUpdated;\n      }\n    }\n\n    if (!this.props.applicationVisible) {\n      // If application is not visible, flush all unsent 'read' notifications.\n      this.clearNotificationQueue();\n    } else {\n      // Otherwise assume there are unread messages.\n      this.postReadNotification(0);\n    }\n\n    if (topic && !topic.isSubscribed() && this.props.ready &&\n        ((this.state.topic != prevState.topic) || !prevProps.ready)) {\n      // Is this a new topic?\n      const newTopic = (this.props.newTopicParams && this.props.newTopicParams._topicName == this.props.topic);\n\n      // Don't request the tags. They are useless unless the user\n      // is the owner and is editing the topic.\n      let getQuery = topic.startMetaQuery().withLaterDesc().withLaterSub();\n      if (this.state.isReader || newTopic) {\n        // Reading is either permitted or we don't know because it's a new topic. Ask for messages.\n        getQuery = getQuery.withLaterData(MESSAGES_PAGE);\n        if (this.state.isReader) {\n          getQuery = getQuery.withLaterDel();\n        }\n        // And show \"loading\" spinner.\n        this.setState({ fetchingMessages: true });\n      }\n      const setQuery = newTopic ? this.props.newTopicParams : undefined;\n      topic.subscribe(getQuery.build(), setQuery)\n        .then((ctrl) => {\n          if (ctrl.code == 303) {\n            // Redirect to another topic requested.\n            HashNavigation.navigateTo(HashNavigation.setUrlTopic('', ctrl.params.topic));\n            return;\n          }\n          if (this.state.topic != ctrl.topic) {\n            this.setState({topic: ctrl.topic});\n          }\n          this.props.onNewTopicCreated(this.props.topic, ctrl.topic);\n          // If there are unsent messages, try sending them now.\n          topic.queuedMessages((pub) => {\n            if (!pub._sending && topic.isSubscribed()) {\n              topic.publishMessage(pub);\n            }\n          });\n        })\n        .catch((err) => {\n          console.log(\"Failed subscription to\", this.state.topic);\n          this.props.onError(err.message, 'err');\n          const blankState = MessagesView.getDerivedStateFromProps({}, {});\n          blankState.title = this.props.intl.formatMessage(messages.not_found);\n          this.setState(blankState);\n        });\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let nextState = {};\n    if (!nextProps.topic) {\n      // Default state: no topic.\n      nextState = {\n        messages: [],\n        onlineSubs: [],\n        topic: null,\n        title: '',\n        avatar: null,\n        isVerified: false,\n        isStaff: false,\n        isDangerous: false,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false,\n        peerMessagingDisabled: false,\n        channel: false\n      };\n    } else if (nextProps.topic != prevState.topic) {\n      const topic = nextProps.tinode.getTopic(nextProps.topic);\n      nextState = {\n        topic: nextProps.topic,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false\n      };\n\n      if (topic) {\n        // Topic exists.\n        const msgs = [];\n        const subs = [];\n\n        if (nextProps.connected) {\n          topic.subscribers((sub) => {\n            if (sub.online && sub.user != nextProps.myUserId) {\n              subs.push(sub);\n            }\n          });\n        }\n\n        topic.messages(function(msg) {\n          if (!msg.deleted) {\n            msgs.push(msg);\n          }\n        });\n\n        Object.assign(nextState, {\n          messages: msgs,\n          onlineSubs: subs\n        });\n\n        if (topic.public) {\n          Object.assign(nextState, {\n            title: topic.public.fn,\n            avatar: makeImageDataUrl(topic.public.photo)\n          });\n        } else {\n          Object.assign(nextState, {\n            title: '',\n            avatar: null\n          });\n        }\n\n        const peer = topic.p2pPeerDesc();\n        if (peer) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: isPeerRestricted(peer.acs)\n          });\n        } else if (prevState.peerMessagingDisabled) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: false\n          });\n        }\n        Object.assign(nextState, {\n          channel: topic.isChannelType()\n        });\n      } else {\n        // Invalid topic.\n        Object.assign(nextState, {\n          messages: [],\n          onlineSubs: [],\n          title: '',\n          avatar: null,\n          peerMessagingDisabled: false,\n          channel: false\n        });\n      }\n    }\n\n    if (nextProps.acs) {\n      if (nextProps.acs.isWriter() != prevState.isWriter) {\n        nextState.isWriter = !prevState.isWriter;\n      }\n      if (nextProps.acs.isReader() != prevState.isReader) {\n        nextState.isReader = !prevState.isReader;\n      }\n      if (!nextProps.acs.isReader('given') != prevState.readingBlocked) {\n        nextState.readingBlocked = !prevState.readingBlocked;\n      }\n      if (nextProps.acs.isSharer() != prevState.isSharer) {\n        nextState.isSharer = !prevState.isSharer;\n      }\n    } else {\n      if (prevState.isWriter) {\n        nextState.isWriter = false;\n      }\n      if (prevState.isReader) {\n        nextState.isReader = false;\n      }\n      if (!prevState.readingBlocked) {\n        prevState.readingBlocked = true;\n      }\n      if (prevState.isSharer) {\n        nextState.isSharer = false;\n      }\n    }\n\n    if (isUnconfirmed(nextProps.acs) == !prevState.unconformed) {\n      nextState.unconfirmed = !prevState.unconformed;\n    }\n\n    // Clear subscribers online when there is no connection.\n    if (!nextProps.connected && prevState.onlineSubs && prevState.onlineSubs.length > 0) {\n      nextState.onlineSubs = [];\n    }\n\n    return nextState;\n  }\n\n  leave(oldTopicName) {\n    if (!oldTopicName || !this.props.tinode.isTopicCached(oldTopicName)) {\n      return;\n    }\n    const oldTopic = this.props.tinode.getTopic(oldTopicName);\n    if (oldTopic && oldTopic.isSubscribed()) {\n      oldTopic.leave(false)\n        .catch(() => { /* do nothing here */ })\n        .finally(() => {\n          // We don't care if the request succeeded or failed.\n          // The topic is dead regardless.\n          this.setState({fetchingMessages: false});\n          oldTopic.onData = undefined;\n          oldTopic.onAllMessagesReceived = undefined;\n          oldTopic.onInfo = undefined;\n          oldTopic.onMetaDesc = undefined;\n          oldTopic.onSubsUpdated = undefined;\n          oldTopic.onPres = undefined;\n        });\n    }\n  }\n\n  handleScrollReference(node) {\n    if (node) {\n      node.addEventListener('scroll', this.handleScrollEvent);\n      this.messagesScroller = node;\n      this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n    }\n  }\n\n  // Get older messages\n  handleScrollEvent(event) {\n    this.setState({scrollPosition: event.target.scrollHeight - event.target.scrollTop});\n    if (event.target.scrollTop <= 0) {\n      this.setState((prevState, props) => {\n        const newState = {};\n        if (!prevState.fetchingMessages) {\n          const topic = this.props.tinode.getTopic(this.state.topic);\n          if (topic && topic.isSubscribed() && topic.msgHasMoreMessages()) {\n            newState.fetchingMessages = true;\n            topic.getMessagesPage(MESSAGES_PAGE).catch((err) => {\n              this.setState({fetchingMessages: false});\n              this.props.onError(err.message, 'err');\n            });\n          }\n        }\n        return newState;\n      });\n    }\n  }\n\n  handleDescChange(desc) {\n    if (desc.public) {\n      this.setState({\n        title: desc.public.fn,\n        avatar: makeImageDataUrl(desc.public.photo)\n      });\n    } else {\n      this.setState({\n        title: '',\n        avatar: null\n      });\n    }\n\n    if (desc.acs) {\n      this.setState({\n        isWriter: desc.acs.isWriter(),\n        isReader: desc.acs.isReader(),\n        readingBlocked: !desc.acs.isReader('given'),\n        unconfirmed: isUnconfirmed(desc.acs),\n      });\n    }\n  }\n\n  postReadNotification(seq) {\n    // Ignore notifications if the app is invisible.\n    if (!this.props.applicationVisible) {\n      return;\n    }\n\n    // Set up the timer if it's not running already.\n    if (!this.readNotificationTimer) {\n      this.readNotificationTimer = setInterval(() => {\n        if (this.readNotificationQueue.length == 0) {\n          // Shut down the timer if the queue is empty.\n          clearInterval(this.readNotificationTimer);\n          this.readNotificationTimer = null;\n          return;\n        }\n\n        let seq = -1;\n        while (this.readNotificationQueue.length > 0) {\n          const n = this.readNotificationQueue[0];\n          if (n.topicName != this.state.topic) {\n            // Topic has changed. Drop the notification.\n            this.readNotificationQueue.shift();\n            continue;\n          }\n\n          const now = new Date();\n          if (n.sendAt <= now) {\n            // Remove expired notification from queue.\n            this.readNotificationQueue.shift();\n            seq = Math.max(seq, n.seq);\n          } else {\n            break;\n          }\n        }\n\n        // Send only one notification for the whole batch of messages.\n        if (seq >= 0) {\n          const topic = this.props.tinode.getTopic(this.state.topic);\n          if (topic) {\n            topic.noteRead(seq);\n          }\n        }\n      }, NOTIFICATION_EXEC_INTERVAL);\n    }\n\n    const now = new Date();\n    this.readNotificationQueue.push({\n      topicName: this.state.topic,\n      seq: seq,\n      sendAt: now.setMilliseconds(now.getMilliseconds() + READ_DELAY)\n    });\n  }\n\n  // Clear notification queue and timer.\n  clearNotificationQueue() {\n    this.readNotificationQueue = [];\n    if (this.readNotificationTimer) {\n      clearInterval(this.readNotificationTimer);\n      this.readNotificationTimer = null;\n    }\n  }\n\n  handleSubsUpdated() {\n    if (this.state.topic) {\n      const subs = [];\n      const topic = this.props.tinode.getTopic(this.state.topic);\n      topic.subscribers((sub) => {\n        if (sub.online && sub.user != this.props.myUserId) {\n          subs.push(sub);\n        }\n      });\n      const newState = {onlineSubs: subs};\n      const peer = topic.p2pPeerDesc();\n      if (peer) {\n        Object.assign(newState, {\n          peerMessagingDisabled: isPeerRestricted(peer.acs)\n        });\n      } else if (this.state.peerMessagingDisabled) {\n        Object.assign(newState, {\n          peerMessagingDisabled: false\n        });\n      }\n      this.setState(newState);\n    }\n  }\n\n  handleNewMessage(msg) {\n    // Regenerate messages list\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    const newState = {messages: []};\n    topic.messages((m) => {\n      if (!m.deleted) {\n        newState.messages.push(m);\n      }\n    });\n\n    // msg could be null if one or more messages were deleted.\n    if (msg && !msg.deleted) {\n      // If the message is added to the end of the message list,\n      // scroll to the bottom.\n      if (topic.isNewMessage(msg.seq)) {\n        newState.scrollPosition = 0;\n      }\n\n      // Aknowledge messages except own messages. They are\n      // automatically assumed to be read and recived.\n      const status = topic.msgStatus(msg, true);\n      if (status >= Tinode.MESSAGE_STATUS_SENT && msg.from != this.props.myUserId) {\n        this.postReadNotification(msg.seq);\n      }\n      this.props.onData(msg);\n    }\n    this.setState(newState);\n  }\n\n  handleAllMessagesReceived(count) {\n    this.setState({fetchingMessages: false});\n    if (count > 0) {\n      // 0 means \"latest\".\n      this.postReadNotification(0);\n    }\n  }\n\n  handleInfoReceipt(info) {\n    switch (info.what) {\n      case 'kp': {\n        clearTimeout(this.keyPressTimer);\n        var instance = this;\n        this.keyPressTimer = setTimeout(function() {\n          instance.setState({typingIndicator: false});\n        }, KEYPRESS_DELAY + 1000);\n        if (!this.state.typingIndicator) {\n          this.setState({typingIndicator: true});\n        }\n        break;\n      }\n      case 'read':\n      case 'recv':\n        // Redraw due to changed recv/read status.\n        this.forceUpdate();\n        break;\n      default:\n        console.log(\"Other change in topic: \", info.what);\n    }\n  }\n\n  handleImagePostview(content) {\n    this.setState({ imagePostview: content });\n  }\n\n  handleClosePreview() {\n    if (this.state.imagePreview && this.state.imagePreview.url) {\n      URL.revokeObjectURL(this.state.imagePreview.url);\n    }\n    this.setState({ imagePostview: null, imagePreview: null, docPreview: null });\n  }\n\n  handleFormResponse(action, text, data) {\n    if (action == 'pub') {\n      this.props.sendMessage(Drafty.attachJSON(Drafty.parse(text), data));\n    } else if (action == 'url') {\n      const url = new URL(data.ref);\n      const params = url.searchParams;\n      for (let key in data.resp) {\n        if (data.resp.hasOwnProperty(key)) {\n          params.set(key, data.resp[key]);\n        }\n      }\n      ['name', 'seq'].map((key) => {\n        if (data[key]) {\n          params.set(key, data[key]);\n        }\n      });\n      params.set('uid', this.props.myUserId);\n      params.set('topic', this.state.topic);\n      url.search = params;\n      window.open(url, '_blank');\n    } else {\n      console.log(\"Unknown action in form\", action);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.state.topic, y: e.pageY, x: e.pageX });\n  }\n\n  handleShowContextMenuMessage(params, messageSpecificMenuItems) {\n    params.topicName = this.state.topic;\n    const menuItems = messageSpecificMenuItems || [];\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (topic) {\n      if (!topic.isChannelType()) {\n        menuItems.push('message_delete');\n      }\n      const acs = topic.getAccessMode();\n      if (acs && acs.isDeleter()) {\n        menuItems.push('message_delete_hard');\n      }\n    }\n    this.props.showContextMenu(params, menuItems);\n  }\n\n  handleNewChatAcceptance(action) {\n    this.props.onNewChat(this.state.topic, action);\n  }\n\n  handleEnablePeer(e) {\n    e.preventDefault();\n    this.props.onChangePermissions(this.state.topic, DEFAULT_P2P_ACCESS_MODE, this.state.topic);\n  }\n\n  sendKeyPress() {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (topic.isSubscribed()) {\n      topic.noteKeyPress();\n    }\n  }\n\n  // Send attachment as Drafty message:\n  // - if file is too large, upload it and send a s link.\n  // - if file is small enough, just send it in-band.\n  sendFileAttachment(file) {\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (file.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      if (!uploader) {\n        this.props.onError(this.props.intl.formatMessage(messages.cannot_initiate_upload));\n        return;\n      }\n      const uploadCompletionPromise = uploader.upload(file);\n      const msg = Drafty.attachFile(null, {\n        mime: file.type,\n        filename: file.name,\n        size: file.size,\n        urlPromise: uploadCompletionPromise\n      });\n      // Pass data and the uploader to the TinodeWeb.\n      this.props.sendMessage(msg, uploadCompletionPromise, uploader);\n    } else {\n      // Small enough to send inband.\n      fileToBase64(file,\n        (mime, bits, fname) => {\n          this.props.sendMessage(Drafty.attachFile(null, {mime: mime, data: bits, filename: fname}));\n        },\n        this.props.onError\n      );\n    }\n  }\n\n  // handleAttachFile method is called when [Attach file] button is clicked.\n  handleAttachFile(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    if (file.size > maxExternAttachmentSize) {\n      // Too large.\n      this.props.onError(this.props.intl.formatMessage(messages.file_attachment_too_large,\n        {size: bytesToHumanSize(file.size), limit: bytesToHumanSize(maxExternAttachmentSize)}), 'err');\n    } else {\n      this.setState({ docPreview: {\n        file: file,\n        filename: file.name,\n        size: file.size,\n        type: file.type\n      }});\n    }\n  }\n\n  // sendImageAttachment sends the image bits inband as Drafty message.\n  sendImageAttachment(caption, blob) {\n    const mime = this.state.imagePreview.type;\n    const width = this.state.imagePreview.width;\n    const height = this.state.imagePreview.height;\n    const fname = this.state.imagePreview.filename;\n\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (blob.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      if (!uploader) {\n        this.props.onError(this.props.intl.formatMessage(messages.cannot_initiate_upload));\n        return;\n      }\n      const uploadCompletionPromise = uploader.upload(blob);\n\n      // Make small preview to show while uploading.\n      imageScaled(blob, IMAGE_PREVIEW_DIM, IMAGE_PREVIEW_DIM, -1, false,\n        (tinyMine, tinyBlob) => {\n          // Convert tiny image into base64 for serialization and previewing.\n          blobToBase64(tinyBlob, (blobMime, tinyBits64) => {\n            let msg = Drafty.insertImage(null, 0, {\n              mime: mime,\n              _tempPreview: tinyBits64, // This preview will not be serialized.\n              width: width,\n              height: height,\n              filename: fname,\n              size: blob.size,\n              urlPromise: uploadCompletionPromise\n            });\n            if (caption) {\n              msg = Drafty.appendLineBreak(msg);\n              msg = Drafty.append(msg, Drafty.init(caption));\n            }\n            // Pass data and the uploader to the TinodeWeb.\n            this.props.sendMessage(msg, uploadCompletionPromise, uploader);\n          }\n        )},\n        // Failure\n        (err) => {\n          this.props.onError(err, 'err');\n        }\n      );\n      return;\n    }\n\n    // Upload the image if it's too big to be send inband.\n    blobToBase64(blob, (blobMime, bits64) => {\n      let msg = Drafty.insertImage(null, 0, {\n        mime: blobMime,\n        preview: bits64, // Serializable preview\n        width: width,\n        height: height,\n        filename: fname,\n        size: blob.size\n      });\n      if (caption) {\n        msg = Drafty.appendLineBreak(msg);\n        msg = Drafty.append(msg, Drafty.init(caption));\n      }\n      this.props.sendMessage(msg);\n    });\n  }\n\n  // handleAttachImage method is called when [Attach image] button is clicked.\n  handleAttachImage(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    // Get image dimensions and size, optionally scale it down.\n    imageScaled(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, maxExternAttachmentSize, false,\n      // Success\n      (mime, blob, width, height, fname) => {\n        this.setState({imagePreview: {\n          url: URL.createObjectURL(blob),\n          blob: blob,\n          filename: fname,\n          width: width,\n          height: height,\n          size: blob.size,\n          type: mime\n        }});\n      },\n      // Failure\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    );\n  }\n\n  handleCancelUpload(seq, uploader) {\n    const found = this.state.messages.find(msg => msg.seq == seq);\n    if (found) {\n      found._cancelled = true;\n    }\n    uploader.cancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n\n    let component;\n    if (this.props.hideSelf) {\n      component = null;\n    } else if (!this.state.topic) {\n      component = (\n        <LogoView\n          serverVersion={this.props.serverVersion}\n          serverAddress={this.props.serverAddress} />\n      );\n    } else {\n      let component2;\n      if (this.state.imagePreview) {\n        // Preview image before sending.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePreview}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendImageAttachment} />\n        );\n      } else if (this.state.imagePostview) {\n        // Expand received image.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePostview}\n            onClose={this.handleClosePreview} />\n        );\n      } else if (this.state.docPreview) {\n        // Preview attachment before sending.\n        component2 = (\n          <DocPreview\n            content={this.state.docPreview}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendFileAttachment} />\n        );\n      } else {\n        const topic = this.props.tinode.getTopic(this.state.topic);\n        const isChannel = topic.isChannelType();\n        const groupTopic = topic.isGroupType() && !isChannel;\n        const icon_badges = [];\n        if (topic.trusted) {\n          if (topic.trusted.verified) {\n            icon_badges.push({icon: 'verified', color: 'badge-inv'});\n          }\n          if (topic.trusted.staff) {\n            icon_badges.push({icon: 'staff', color: 'badge-inv'});\n          }\n          if (topic.trusted.danger) {\n            icon_badges.push({icon: 'dangerous', color: 'badge-inv'});\n          }\n        }\n        let messageNodes = [];\n        let previousFrom = null;\n        let chatBoxClass = null;\n        for (let i=0; i<this.state.messages.length; i++) {\n          let msg = this.state.messages[i];\n          let nextFrom = null;\n\n          if (i + 1 < this.state.messages.length) {\n            nextFrom = this.state.messages[i+1].from || 'chan';\n          }\n\n          let sequence = 'single';\n          let thisFrom = msg.from || 'chan';\n          if (thisFrom == previousFrom) {\n            if (thisFrom == nextFrom) {\n              sequence = 'middle';\n            } else {\n              sequence = 'last';\n            }\n          } else if (thisFrom == nextFrom) {\n            sequence = 'first';\n          }\n          previousFrom = thisFrom;\n\n          const isReply = !(thisFrom == this.props.myUserId);\n          const deliveryStatus = topic.msgStatus(msg, true);\n\n          let userName, userAvatar, userFrom;\n          if (groupTopic) {\n            const user = topic.userDesc(thisFrom);\n            if (user && user.public) {\n              userName = user.public.fn;\n              userAvatar = makeImageDataUrl(user.public.photo);\n            }\n            userFrom = thisFrom;\n            chatBoxClass='chat-box group';\n          } else {\n            chatBoxClass='chat-box';\n          }\n\n          messageNodes.push(\n            <ChatMessage\n              tinode={this.props.tinode}\n              content={msg.content}\n              deleted={msg.hi}\n              mimeType={msg.head ? msg.head.mime : null}\n              timestamp={msg.ts}\n              response={isReply}\n              seq={msg.seq}\n              userFrom={userFrom}\n              userName={userName}\n              userAvatar={userAvatar}\n              sequence={sequence}\n              received={deliveryStatus}\n              uploader={msg._uploader}\n              viewportWidth={this.props.viewportWidth}\n              showContextMenu={this.state.channel? false : this.handleShowContextMenuMessage}\n              onImagePreview={this.handleImagePostview}\n              onFormResponse={this.handleFormResponse}\n              onError={this.props.onError}\n              onCancelUpload={this.handleCancelUpload}\n              key={msg.seq} />\n          );\n        }\n\n        let lastSeen = null;\n        if (isChannel) {\n          lastSeen = formatMessage(messages.channel);\n        } else {\n          const cont = this.props.tinode.getMeTopic().getContact(this.state.topic);\n          if (cont && Tinode.isP2PTopicName(cont.topic)) {\n            if (cont.online) {\n              lastSeen = formatMessage(messages.online_now);\n            } else if (cont.seen) {\n              lastSeen = formatMessage(messages.last_seen) + \": \" +\n                shortDateFormat(cont.seen.when, this.props.intl.locale);\n              // TODO: also handle user agent in c.seen.ua\n            }\n          }\n        }\n        const avatar = this.state.avatar || true;\n        const online = this.props.online ? 'online' + (this.state.typingIndicator ? ' typing' : '') : 'offline';\n\n        component2 = (\n          <>\n            <div id=\"topic-caption-panel\" className=\"caption-panel\">\n              {this.props.displayMobile ?\n                <a href=\"#\" id=\"hide-message-view\" onClick={(e) => {e.preventDefault(); this.props.onHideMessagesView();}}>\n                  <i className=\"material-icons\">arrow_back</i>\n                </a>\n                :\n                null}\n              <div className=\"avatar-box\">\n                <LetterTile\n                  avatar={avatar}\n                  topic={this.state.topic}\n                  title={this.state.title} />\n                {!isChannel ? <span className={online} /> : null}\n              </div>\n              <div id=\"topic-title-group\">\n                <div id=\"topic-title\" className=\"panel-title\">{\n                  this.state.title ||\n                  <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n                    description=\"Title shown when the topic has no name\" /></i>\n                }<ContactBadges badges={icon_badges} /></div>\n                <div id=\"topic-last-seen\">{lastSeen}</div>\n              </div>\n              {groupTopic ?\n                <GroupSubs\n                  subscribers={this.state.onlineSubs} /> :\n                <div id=\"topic-users\" />\n              }\n              <div>\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">more_vert</i>\n                </a>\n              </div>\n            </div>\n            {this.props.displayMobile ?\n              <ErrorPanel\n                level={this.props.errorLevel}\n                text={this.props.errorText}\n                onClearError={this.props.onError} />\n              : null}\n            <LoadSpinner show={this.state.fetchingMessages} />\n            <div id=\"messages-container\">\n              <div id=\"messages-panel\" ref={this.handleScrollReference}>\n                <ul id=\"scroller\" className={chatBoxClass}>\n                  {messageNodes}\n                </ul>\n              </div>\n              {!this.state.isReader ?\n              <div id=\"write-only-background\">\n                {this.state.readingBlocked ?\n                <div id=\"write-only-note\">\n                  <FormattedMessage id=\"messages_not_readable\" defaultMessage=\"no access to messages\"\n                    description=\"Message shown in topic without the read access\" />\n                </div>\n                : null }\n              </div>\n              : null }\n            </div>\n            {this.state.peerMessagingDisabled && !this.state.unconfirmed ?\n              <div id=\"peer-messaging-disabled-note\">\n                <i className=\"material-icons secondary\">block</i> <FormattedMessage\n                  id=\"peers_messaging_disabled\" defaultMessage=\"Peer's messaging is disabled.\"\n                  description=\"Shown when the p2p peer's messaging is disabled\" /> <a href=\"#\"\n                    onClick={this.handleEnablePeer}><FormattedMessage id=\"enable_peers_messaging\"\n                    defaultMessage=\"Enable\" description=\"Call to action to enable peer's messaging\" /></a>.\n              </div> : null}\n            {this.state.unconfirmed ?\n              <Invitation onAction={this.handleNewChatAcceptance} />\n              :\n              <SendMessage\n                disabled={!this.state.isWriter}\n                onSendMessage={this.props.sendMessage}\n                onKeyPress={this.sendKeyPress}\n                onAttachFile={this.handleAttachFile}\n                onAttachImage={this.handleAttachImage}\n                onError={this.props.onError} />}\n          </>\n        );\n      }\n\n      component = <div id=\"topic-view\">{component2}</div>\n    }\n    return component;\n  }\n};\n\nexport default injectIntl(MessagesView);\n","// The <- button to be displayed in title bars.\nimport React from 'react';\n\nexport default class ButtonBack extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onBack();}}>\n        <i className=\"material-icons\">arrow_back</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class MenuContacts extends React.PureComponent {\n  render() {\n    return (\n      <div>\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onNewTopic();}}><i className=\"material-icons\">chat</i></a>\n        &nbsp;\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nexport default class MenuStart extends React.PureComponent {\n  render() {\n    return (\n        <div>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSignUp();}}><i className=\"material-icons\">person_add</i></a>\n          &nbsp;\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n        </div>\n    );\n  }\n};\n","import React from 'react';\n\n\nimport LetterTile from './letter-tile.jsx';\nimport ButtonBack from './button-back.jsx';\nimport ContactBadges from './contact-badges.jsx';\nimport MenuContacts from './menu-contacts.jsx';\nimport MenuStart from './menu-start.jsx';\n\nexport default class SideNavbar extends React.PureComponent {\n  render() {\n    const icon_badges = [];\n    if (this.props.trustedBadges) {\n      this.props.trustedBadges.map((b) => {\n        icon_badges.push({icon: b, color: 'badge-inv'});\n      });\n    }\n    return (\n        <div id=\"side-caption-panel\" className=\"caption-panel\">\n          {this.props.onCancel ? <ButtonBack onBack={this.props.onCancel} /> : null}\n          {this.props.avatar ?\n            <div id=\"self-avatar\" className=\"avatar-box\">\n              <LetterTile\n                avatar={this.props.avatar}\n                topic={this.props.myUserId}\n                title={this.props.title} />\n            </div>\n            :\n            null}\n          <div id=\"sidepanel-title\" className=\"panel-title\">{this.props.title}<ContactBadges badges={icon_badges}/></div>\n          {this.props.state === 'login' ?\n              <MenuStart onSignUp={this.props.onSignUp} onSettings={this.props.onSettings} /> :\n            this.props.state === 'contacts' ?\n              <MenuContacts onNewTopic={this.props.onNewTopic} onSettings={this.props.onSettings} /> :\n            null}\n        </div>\n    );\n  }\n};\n","// Image zoom and crop widget.\n\nimport React from 'react';\n\nconst DEFAULT_MAX_ZOOM = 2.5;\n\nexport default class Cropper extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Coordinates of the top left corner of the image in container coordinates.\n      panX: 0,\n      panY: 0,\n      // Origin of the zoom in image coordinates.\n      originX: 0,\n      originY: 0,\n      // Zoom scale.\n      zoom: 1,\n      // Zoom min and max.\n      minZoom: 0,\n      maxZoom: DEFAULT_MAX_ZOOM,\n    };\n\n    // References to DOM elements for hooking up events and getting screen dimensions.\n    // The transparent element which captures mouse moves (moves with the image).\n    this.overlay = React.createRef();\n    // The image cutout window or view port (static).\n    this.cutout = React.createRef();\n    // Scaled and translated image preview.\n    this.preview = React.createRef();\n    // The main container (static).\n    this.boundingBox = React.createRef();\n\n    // The original image width and height before any scaling.\n    this.imageWidth = 0;\n    this.imageHeight = 0;\n\n    // Mouse position when dragging.\n    this.mouseX = 0\n    this.mouseY = 0;\n    // Length of the previous mouse move when dragging.\n    this.prevDistance = 0;\n\n    // Bounding rectangles of static elements.\n    this.cutoutRect = {};\n    this.bBoxRect = {};\n    // Center of the bounding box.\n    this.originX = 0;\n    this.originY = 0;\n\n    this.initScaling = this.initScaling.bind(this);\n    this.handleZoom = this.handleZoom.bind(this);\n    this.mouseDown = this.mouseDown.bind(this);\n    this.mouseUp = this.mouseUp.bind(this);\n    this.mouseMove = this.mouseMove.bind(this);\n    this.mouseTouch = this.mouseTouch.bind(this);\n    this.positionAll = this.positionAll.bind(this);\n    this.translate = this.translate.bind(this);\n  }\n\n  componentDidMount() {\n    this.overlay.current.addEventListener('mousedown', this.mouseDown, { passive: true });\n    this.overlay.current.addEventListener('touchstart', this.mouseDown, { passive: true });\n\n    // The rectangle position is in viewport coordinates.\n    this.bBoxRect = this.boundingBox.current.getBoundingClientRect();\n    // Center of the bounding box in container coordinates.\n    this.originX = this.bBoxRect.width / 2;\n    this.originY = this.bBoxRect.height / 2;\n\n    // The rectangle position is in viewport coordinates.\n    this.cutoutRect = this.cutout.current.getBoundingClientRect();\n  }\n\n  componentWillUnmount() {\n    this.overlay.current.removeEventListener('mousedown', this.mouseDown);\n    this.overlay.current.removeEventListener('touchstart', this.mouseDown);\n  }\n\n  // Position all elements.\n  positionAll(panX, panY, zoom) {\n    // Zoom origin in image preview coordinates.\n    this.setState({\n      panX: panX,\n      panY: panY,\n      zoom: zoom,\n      originX: this.originX - panX,\n      originY: this.originY - panY,\n    });\n  }\n\n  // Check if new location is within the limits.\n  static checkBound(currPan, img, cutout, delta) {\n    let nextDiff = Math.min(0, cutout[0] - img[0] - delta, img[1] - cutout[1] + delta);\n    if (nextDiff == 0) {\n      // Cutout is completely within the image.\n      currPan += delta;\n    } else if (Math.min(0, cutout[0] - img[0], img[1] - cutout[1]) < nextDiff) {\n      // Cutout is outside of the range but closer to the bound.\n      currPan += delta;\n    }\n    return currPan;\n  }\n\n  initScaling() {\n    // Initialize components.\n    const imgRect = this.preview.current.getBoundingClientRect();\n\n    this.imageWidth = imgRect.width;\n    this.imageHeight = imgRect.height;\n\n    // Set zoom slider's min and max values. Make sure the scaled image cannot be smaller than the cutout.\n    const minZoom = Math.max(this.cutoutRect.width / imgRect.width, this.cutoutRect.height / imgRect.height);\n    this.setState({\n      minZoom: minZoom,\n      maxZoom: Math.max(DEFAULT_MAX_ZOOM, minZoom + 1)\n    });\n\n    // Initial zoom level fills the bounding box at the smallest image dimension and overflows the largest, i.e. \"fill\" not \"fit\".\n    let zoom = Math.max((this.bBoxRect.width / imgRect.width), (this.bBoxRect.height / imgRect.height));\n    // Converting from viewport coordinates to container, then panning.\n    let panX = (this.cutoutRect.left - this.bBoxRect.left) - ((imgRect.width - this.cutoutRect.width) / 2);\n    let panY = (this.cutoutRect.top - this.bBoxRect.top) - ((imgRect.height - this.cutoutRect.height) / 2);\n\n    this.positionAll(panX, panY, zoom);\n  }\n\n  handleZoom(e) {\n    let zoom = e.target.value;\n\n    let panX = this.state.panX;\n    let panY = this.state.panY;\n\n    // Ensure that the image at the new zoom is not outside of the cutout boundaries.\n    // Calculate image coordinates at the new zoom.\n    const imgLeft = this.originX - (this.originX - panX) * zoom;\n    const imgRight = imgLeft + this.imageWidth * zoom;\n    // Cutout in the same coordinates as the image.\n    const coLeft = this.cutoutRect.left - this.bBoxRect.left;\n    const coRight = coLeft + this.cutoutRect.width;\n    if (coLeft < imgLeft) {\n      panX -= imgLeft - coLeft;\n    } else if (coRight > imgRight) {\n      panX += coRight - imgRight;\n    }\n    const imgTop = this.originY - (this.originY - panY) * zoom;\n    const imgBottom = imgTop + this.imageHeight * zoom;\n    const coTop = this.cutoutRect.top - this.bBoxRect.top;\n    const coBottom = coTop + this.cutoutRect.height;\n    if (coTop < imgTop) {\n      panY -= imgTop - coTop;\n    } else if (coBottom > imgBottom) {\n      panY += coBottom - imgBottom;\n    }\n\n    this.positionAll(panX, panY, zoom);\n  }\n\n  mouseDown(e) {\n    if (e.touches) {\n      this.mouseX = e.touches[0].pageX;\n      this.mouseY = e.touches[0].pageY;\n    } else {\n      this.mouseX = e.pageX;\n      this.mouseY = e.pageY;\n    }\n\n    window.addEventListener('mousemove', this.mouseMove, { passive: false });\n    window.addEventListener('touchmove', this.mouseTouch, { passive: false });\n    window.addEventListener('mouseup', this.mouseUp, { passive: true });\n    window.addEventListener('touchend', this.mouseUp, { passive: true });\n    // Disable text selection in the entire document.\n    document.body.style['userSelect'] = 'none';\n  }\n\n  // Perform image panning.\n  translate(pageX, pageY) {\n    const dX = pageX - this.mouseX;\n    const dY = pageY - this.mouseY;\n\n    this.mouseX = pageX;\n    this.mouseY = pageY;\n\n    // Make sure the image is within the cutout window.\n    const imgRect = this.preview.current.getBoundingClientRect();\n\n    // Check if the new position is within the boundaries, and if not if it's closer to them.\n    let panX = Cropper.checkBound(this.state.panX, [imgRect.left, imgRect.right],\n      [this.cutoutRect.left, this.cutoutRect.right], dX);\n    let panY = Cropper.checkBound(this.state.panY, [imgRect.top, imgRect.bottom],\n      [this.cutoutRect.top, this.cutoutRect.bottom], dY);\n\n    this.positionAll(panX, panY, this.state.zoom);\n  }\n\n  // Image panning.\n  mouseMove(e) {\n    e.preventDefault();\n    this.translate(e.pageX, e.pageY);\n  }\n\n  mouseTouch(e) {\n    e.preventDefault();\n\n    if (e.touches.length == 1) {\n      this.translate(e.touches[0].pageX, e.touches[0].pageY);\n      return;\n    }\n\n    // Image zooming by pinching.\n    const [touch0, touch1] = e.touches;\n    const distance = Math.sqrt((touch0.pageX - touch1.pageX) * (touch0.pageX - touch1.pageX) +\n      (touch0.pageY - touch1.pageY) * (touch0.pageY - touch1.pageY));\n\n    if (!this.prevDistance) {\n        this.prevDistance = distance / this.state.zoom;\n    }\n\n    let scale = (distance / this.prevDistance).toFixed(3);\n    this.setState({zoom: Math.max(this.minZoom, Math.min(this.maxZoom, scale))});\n  }\n\n  mouseUp(e) {\n    window.removeEventListener('mousemove', this.mouseMove);\n    window.removeEventListener('touchmove', this.mouseTouch);\n    window.removeEventListener('mouseup', this.mouseUp);\n    window.removeEventListener('touchend', this.mouseUp);\n    // Re-enable text selection.\n    document.body.style['userSelect'] = '';\n\n    this.positionAll(this.state.panX, this.state.panY, this.state.zoom);\n  }\n\n  render() {\n    // transform3d: position and scale.\n    const t3d = `translate3d(${this.state.panX}px, ${this.state.panY}px, 0) scale(${this.state.zoom})`;\n    // transformOrigin: zoom origin.\n    const orig = `${this.state.originX}px ${this.state.originY}px`;\n\n    // Overlay position and size are exactly equal to the position and size of the transformed image\n    // except it uses different coordinates.\n    const overlay = {\n      top: `${this.originY - this.state.originY * this.state.zoom}px`,\n      left: `${this.originX - this.state.originX * this.state.zoom}px`,\n      width: `${this.imageWidth * this.state.zoom}px`,\n      height: `${this.imageHeight * this.state.zoom}px`\n    };\n    return (\n      <div className=\"cropper\">\n        <div className=\"bounding-box\" ref={this.boundingBox}>\n          <img src={this.props.source} className=\"preview\" alt=\"\"\n            style={{transform: t3d, transformOrigin: orig}} ref={this.preview} onLoad={this.initScaling} />\n          <div className=\"cutout circle\" ref={this.cutout} />\n          <div className=\"overlay\" style={overlay} ref={this.overlay} />\n        </div>\n        <div className=\"zoom-wrapper\">\n          <input type=\"range\" className=\"zoomer\"\n            step=\"0.001\" min={this.state.minZoom} max={this.state.maxZoom} value={this.state.zoom} onChange={this.handleZoom} />\n        </div>\n      </div>\n    );\n  }\n}\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Cropper from '../widgets/cropper.jsx';\n\nexport default class AvatarCropView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit() {\n    if (this.props.onSubmit) {\n      this.props.onSubmit();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <Cropper source=\"/img/logo192.png\" />\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\"\n              defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n","/* ContactsView holds all contacts-related stuff */\nimport React from 'react';\nimport { FormattedMessage, defineMessages } from 'react-intl';\n\nimport ContactList from '../widgets/contact-list.jsx';\n\nimport { updateFavicon } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  archived_contacts_title: {\n    id: \"archived_contacts\",\n    defaultMessage: \"Archived contacts ({count})\",\n    description: \"Label for archived chats\"\n  }\n});\n\nexport default class ContactsView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAction = this.handleAction.bind(this);\n\n    this.state = ContactsView.deriveStateFromProps(props);\n  }\n\n  static deriveStateFromProps(props) {\n    const contacts = [];\n    let unreadThreads = 0;\n    let archivedCount = 0;\n    props.chatList.map((c) => {\n      const blocked = c.acs && !c.acs.isJoiner();\n      // Show only blocked contacts only when props.blocked == true.\n      if (blocked && props.blocked) {\n        contacts.push(c);\n      }\n      if (blocked || props.blocked) {\n        return;\n      }\n\n      if (c.private && c.private.arch) {\n        if (props.archive) {\n          contacts.push(c);\n        } else {\n          archivedCount ++;\n        }\n      } else if (!props.archive) {\n        contacts.push(c);\n        unreadThreads += c.unread > 0 ? 1 : 0;\n      }\n    });\n\n    contacts.sort((a, b) => {\n      return (b.touched || 0) - (a.touched || 0);\n    });\n\n    if (archivedCount > 0) {\n      contacts.push({\n        action: 'archive',\n        title: messages.archived_contacts_title,\n        values: {count: archivedCount}\n      });\n    }\n\n    return {\n      contactList: contacts,\n      unreadThreads: unreadThreads\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chatList != this.props.chatList ||\n        prevProps.archive != this.props.archive ||\n        prevProps.blocked != this.props.blocked) {\n      const newState = ContactsView.deriveStateFromProps(this.props);\n      this.setState(newState);\n      if (newState.unreadThreads != prevState.unreadThreads) {\n        updateFavicon(newState.unreadThreads);\n      }\n    }\n  }\n\n  handleAction(action_ignored) {\n    this.props.onShowArchive();\n  }\n\n  render() {\n    return (\n      <FormattedMessage id=\"contacts_not_found\"\n        defaultMessage=\"You have no chats<br />¯∖_(ツ)_/¯\"\n        description=\"HTML message shown in ContactList when no contacts are found\">{\n        (no_contacts) => <ContactList\n          connected={this.props.connected}\n          contacts={this.state.contactList}\n          emptyListMessage={no_contacts}\n          topicSelected={this.props.topicSelected}\n          myUserId={this.props.myUserId}\n          showOnline={true}\n          showUnread={true}\n          onTopicSelected={this.props.onTopicSelected}\n          showContextMenu={this.props.showContextMenu}\n          onAction={this.handleAction} />\n      }</FormattedMessage>\n    );\n  }\n};\n","// Helper functions for storing values in localStorage.\n// By default localStorage can store only strings, not objects or other types.\n\nexport default class LocalStorageUtil {\n  // Replace old object with the new one.\n  static setObject(key, value) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n\n  // Get stored object.\n  static getObject(key) {\n    const value = localStorage.getItem(key);\n    return value && JSON.parse(value);\n  }\n\n  // Partially or wholly update stored object.\n  static updateObject(key, value) {\n    const oldVal = this.getObject(key);\n    this.setObject(key, Object.assign(oldVal || {}, value));\n  }\n\n  // Just a wrapper.\n  static removeItem(key) {\n    localStorage.removeItem(key);\n  }\n}\n","// Account registration.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport { theCard } from '../lib/utils.js';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class CreateAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: '',\n      password: '',\n      email: '',\n      fn: '', // full/formatted name\n      imageDataUrl: null,\n      errorCleared: false,\n      saveToken: LocalStorageUtil.getObject('keep-logged-in')\n    };\n\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(password) {\n    this.setState({password: password});\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value})\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleToggleSaveToken() {\n    LocalStorageUtil.setObject('keep-logged-in', !this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({errorCleared: false});\n    this.props.onCreateAccount(\n      this.state.login.trim(),\n      this.state.password.trim(),\n      theCard(this.state.fn.trim().substring(0, MAX_TITLE_LENGTH), this.state.imageDataUrl),\n      {'meth': 'email', 'val': this.state.email});\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form className=\"panel-form-column\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n              description=\"Placeholer for username/login\">{\n              (login_prompt) => <input type=\"text\" placeholder={login_prompt} autoComplete=\"user-name\"\n                value={this.state.login} onChange={this.handleLoginChange} required autoFocus />\n            }</FormattedMessage>\n            <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n              description=\"Placeholder/prompt for entering password\">{\n              (password_prompt) => <VisiblePassword placeholder={password_prompt} autoComplete=\"new-password\"\n                value={this.state.password} onFinished={this.handlePasswordChange}\n                required={true} />\n            }</FormattedMessage>\n          </div>\n          <AvatarUpload\n            tinode={this.props.tinode}\n            onImageChanged={this.handleImageChanged}\n            onError={this.props.onError} />\n        </div>\n        <div  className=\"panel-form-row\">\n          <FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n            description=\"Input placeholder for person's full name\">{\n            (full_name_prompt) => <input type=\"text\" placeholder={full_name_prompt} autoComplete=\"name\"\n              value={this.state.fn} onChange={this.handleFnChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <FormattedMessage id=\"email_prompt\" defaultMessage=\"Email, e.g. jdoe@example.com\"\n            description=\"Input placeholder for email entry\">{\n            (email_prompt) => <input type=\"email\" placeholder={email_prompt} autoComplete=\"email\"\n              value={this.state.email} onChange={this.handleEmailChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n            description=\"Label for a checkbox\">{\n            (stay_logged_in) => <label htmlFor=\"save-token\">&nbsp;{stay_logged_in}</label>\n          }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_up\" defaultMessage=\"Sign up\"\n              description=\"Create account button [Sign Up]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport BadgeList from '../widgets/badge-list.jsx';\n\nimport { makeImageDataUrl } from '../lib/blob-helpers.js';\n\nexport default class EditAccountView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    this.state = {\n      fullName: me.public ? me.public.fn : undefined,\n      avatar: makeImageDataUrl(me.public ? me.public.photo : null)\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n                description=\"Label for full name editing\" />\n            </label>\n            <div className=\"large\">{this.state.fullName}</div>\n            <div>\n              <label className=\"small\"><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n                description=\"Label for user address (ID)\" /></label>&nbsp;\n              <tt>{this.props.myUserId}</tt>\n            </div>\n            <BadgeList trustedBadges={this.props.trustedBadges} />\n          </div>\n          <AvatarUpload\n            tinode={this.props.tinode}\n            avatar={this.state.avatar}\n            readOnly={!this.state.owner}\n            uid={this.props.myUserId}\n            title={this.state.fullName} />\n        </div>\n        <div className=\"panel-form-row\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('general');}}>\n            <i className=\"material-icons\">edit</i>&nbsp;\n            <FormattedMessage id=\"button_edit\" defaultMessage=\"Edit\" description=\"Call to action [Edit]\" />\n          </a>\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('notif');}}>\n            <i className=\"material-icons\">notifications</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_notifications\"\n              defaultMessage=\"Notifications\" description=\"Sidepanel title for AccNotificationsView.\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('security');}}>\n            <i className=\"material-icons\">security</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_security\"\n              defaultMessage=\"Security\" description=\"Sidepanel title for AccSecurityView.\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('support');}}>\n            <i className=\"material-icons\">contact_support</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_support\"\n              defaultMessage=\"Support\" description=\"Sidepanel title for AccSupportView.\" />\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport TagManager from '../widgets/tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\nimport { makeImageDataUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, asEmail, asPhone, theCard } from '../lib/utils.js';\n\nexport default class AccGeneralView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    this.state = {\n      fullName: me.public ? me.public.fn : undefined,\n      avatar: makeImageDataUrl(me.public ? me.public.photo : null),\n      tags: me.tags(),\n      credentials: me.getCredentials() || [],\n      addCredActive: false,\n      addCredInvalid: false,\n      newCred: '',\n      previousOnTags: me.onTagsUpdated\n    };\n\n    this.tnNewTags = this.tnNewTags.bind(this);\n    this.tnCredsUpdated = this.tnCredsUpdated.bind(this);\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleCredChange = this.handleCredChange.bind(this);\n    this.handleCredKeyDown = this.handleCredKeyDown.bind(this);\n    this.handleCredEntered = this.handleCredEntered.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n  }\n\n  componentDidMount() {\n    const me = this.props.tinode.getMeTopic();\n    me.onCredsUpdated = this.tnCredsUpdated;\n    me.onTagsUpdated = this.tnNewTags;\n  }\n\n  componentWillUnmount() {\n    const me = this.props.tinode.getMeTopic();\n    me.onTagsUpdated = this.state.previousOnTags;\n    me.onCredsUpdated = undefined;\n  }\n\n  tnNewTags(tags) {\n    this.setState({tags: tags});\n  }\n\n  tnCredsUpdated(creds) {\n    this.setState({credentials: creds || []});\n  }\n\n  handleFullNameUpdate(fn) {\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\n    if (fn) {\n      this.setState({fullName: fn});\n      this.props.onUpdateAccount(undefined, theCard(fn, null));\n    }\n  }\n\n  handleImageChanged(img) {\n    this.setState({avatar: img});\n    this.props.onBasicNavigate('crop');\n    // this.props.onUpdateAccount(undefined, theCard(null, img || Tinode.DEL_CHAR));\n  }\n\n  handleCredChange(e) {\n    this.setState({newCred: e.target.value, addCredInvalid: false});\n  }\n\n  handleCredKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({newCred: '', addCredActive: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleCredEntered(e);\n    }\n  }\n\n  handleCredEntered(e) {\n    let value = this.state.newCred.trim();\n    if (!value) {\n      this.setState({addCredActive: false, addCredInvalid: false});\n      return;\n    }\n\n    let val = asPhone(value);\n    let method;\n    if (val) {\n      method = 'tel';\n    } else {\n      val = asEmail(value);\n      if (val) {\n        method = 'email';\n      }\n    }\n    if (method) {\n      this.props.onCredAdd(method, val);\n      this.setState({addCredActive: false, newCred: ''});\n    } else {\n      this.setState({addCredInvalid: true});\n    }\n  }\n\n  handleTagsUpdated(tags) {\n    // Check if tags have actually changed.\n    if (arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      return;\n    }\n    this.props.onUpdateTags(tags);\n  }\n\n  render() {\n    const credentials = [];\n    this.state.credentials.map((cred) => {\n      credentials.push(<div key={cred.meth + \":\" + cred.val + \":\" + cred.done}>{cred.meth}: <tt>{cred.val}</tt>\n        <span > {!cred.done ?\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredConfirm(cred.meth, cred.val);}}>\n              <FormattedMessage id=\"validate_credential_action\" defaultMessage=\"confirm\"\n                description=\"Validate credentail call to action\" />\n            </a>\n          : null} <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredDelete(cred.meth, cred.val);}}><i\n            className=\"material-icons gray\">delete_outline</i></a></span></div>);\n    });\n\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\"><FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n              description=\"Label for full name editing\" /></label>\n            <div><FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n              description=\"Input placeholder for person's full name\">{\n              (full_name_placeholder) => <InPlaceEdit\n                placeholder={full_name_placeholder}\n                value={this.state.fullName}\n                onFinished={this.handleFullNameUpdate} />\n            }</FormattedMessage></div>\n          </div>\n          <AvatarUpload\n            tinode={this.props.tinode}\n            avatar={this.state.avatar}\n            uid={this.props.myUserId}\n            title={this.state.fullName}\n            onImageChanged={this.handleImageChanged}\n            onError={this.props.onError} />\n        </div>\n        <div className=\"hr\" />\n        <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (user discovery)\"\n          description=\"Section title for TagManager\">{\n          (title_tag_manager) => <TagManager\n            title={title_tag_manager}\n            activated={false}\n            tags={this.state.tags}\n            tinode={this.props.tinode}\n            onSubmit={this.handleTagsUpdated} />\n        }</FormattedMessage>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_user_contacts\" defaultMessage=\"Contacts:\"\n            description=\"Label for user contacts\" />\n          </label>\n          <div className=\"quoted\">\n            {credentials}\n            {this.state.addCredActive ?\n              <input type=\"text\" value={this.state.value}\n                className={this.state.addCredInvalid ? 'invalid' : null}\n                placeholder=\"Phone number or email\" required=\"required\" autoFocus\n                onChange={this.handleCredChange} onKeyDown={this.handleCredKeyDown} onBlur={this.handleCredEntered} />\n              : null}\n            <div>\n              <a href=\"#\" onClick={(e) => {e.preventDefault(); this.setState({addCredActive: true});}}>\n                <i className=\"material-icons\">add</i>\n                <FormattedMessage id=\"button_add_another\" defaultMessage=\"Add another\" description=\"Call to action [+ add another]\" />\n              </a></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\n\nexport default class EditAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckboxClick = this.handleCheckboxClick.bind(this);\n  }\n\n  handleCheckboxClick(what, checked) {\n    if (what == 'sound') {\n      this.props.onToggleMessageSounds(checked);\n    } else if (what == 'alert') {\n      this.props.onTogglePushNotifications(checked);\n    } else if (what == 'incognito') {\n      this.props.onToggleIncognitoMode(checked);\n    }\n  }\n\n  render() {\n    return (\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"message-sound\">\n              <FormattedMessage id=\"label_message_sound\" defaultMessage=\"Message sound:\"\n                description=\"Label for message sounds toggle\" />\n            </label>\n            <CheckBox name=\"sound\" id=\"message-sound\"\n              checked={this.props.messageSounds} onChange={this.handleCheckboxClick} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"desktop-alerts\">\n            {this.props.desktopAlertsEnabled ?\n              <FormattedMessage id=\"label_push_notifications\" defaultMessage=\"Notification alerts:\"\n                description=\"Label for push notifications switch\" />\n              :\n              <FormattedMessage id=\"label_push_notifications_disabled\"\n                defaultMessage=\"Notification alerts (requires HTTPS):\"\n                description=\"Label for push notifications switch\" />\n            }\n            </label>\n            <CheckBox name=\"alert\" id=\"desktop-alerts\"\n              checked={this.props.desktopAlerts}\n              onChange={this.props.desktopAlertsEnabled ? this.handleCheckboxClick : null} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"incognito-mode\">\n              <FormattedMessage id=\"label_incognito_mode\" defaultMessage=\"Incognito mode:\"\n                description=\"Label for incognito mode toggle\" />\n            </label>\n            <CheckBox name=\"incognito\" id=\"incognito-mode\"\n              checked={this.props.incognitoMode} onChange={this.handleCheckboxClick} />\n          </div>\n        </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\n\nconst messages = defineMessages({\n  delete_account: {\n    id: 'delete_account',\n    defaultMessage: 'Delete account',\n    description: 'Title for delete account warning'\n  },\n  delete_account_warning: {\n    id: 'delete_account_arning',\n    defaultMessage: 'Are you sure you want to delete your account? It cannot be undone.',\n    description: 'Warning message when deleting an account'\n  }\n});\n\nclass AccSecurityView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    let blockedCount = 0;\n    me.contacts((c) => {\n      if (c.acs && !c.acs.isJoiner()) {\n        blockedCount ++;\n      }\n    });\n    const defacs = me.getDefaultAccess();\n    this.state = {\n      auth: defacs ? defacs.auth : null,\n      anon: defacs ? defacs.anon : null,\n      showPermissionEditorFor: undefined,\n      blockedCount: blockedCount,\n    };\n\n    this.handlePasswordUpdate = this.handlePasswordUpdate.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n  }\n\n  handlePasswordUpdate(pwd) {\n    this.setState({password: pwd});\n    this.props.onUpdateAccount(pwd);\n  }\n\n  handleLaunchPermissionsEditor(which) {\n    this.setState({\n      showPermissionEditorFor: which,\n      editedPermissions: this.state[which]\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handlePermissionsChanged(perm) {\n    let defacs = {};\n    defacs[this.state.showPermissionEditorFor] = perm;\n    this.props.onUpdateAccount(undefined, undefined, defacs);\n\n    let newState = {showPermissionEditorFor: undefined};\n    newState[this.state.showPermissionEditorFor] = perm;\n    this.setState(newState);\n  }\n\n  handleDeleteAccount(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.delete_account), // title\n      formatMessage(messages.delete_account_warning), // content\n      (() => { this.props.onDeleteAccount(); }), // onConfirm\n      null, // use default text \"OK\"\n      true, // Show Reject button\n      null  // use default text \"Cancel\"\n    );\n  }\n\n  render() {\n    return (\n      <React.Fragment>{this.state.showPermissionEditorFor ?\n        <PermissionsEditor\n          mode={this.state.editedPermissions}\n          skip=\"O\"\n          onSubmit={this.handlePermissionsChanged}\n          onCancel={this.handleHidePermissionsEditor} />\n        :\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_password\" defaultMessage=\"Password\"\n                  description=\"Label for password editing\" />\n            </label>\n            <div>\n              <FormattedMessage id=\"password_unchanged_prompt\" defaultMessage=\"Unchanged\"\n                description=\"Message in editor while password is unchanged\">{\n                (password_unchanged) => <InPlaceEdit\n                  placeholder={password_unchanged}\n                  type=\"password\"\n                  onFinished={this.handlePasswordUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <a href=\"#\" className=\"danger flat-button\" onClick={(e) => {e.preventDefault(); this.props.onLogout();}}>\n              <i className=\"material-icons\">exit_to_app</i> &nbsp;<FormattedMessage id=\"button_logout\"\n                defaultMessage=\"Logout\" description=\"Button [Logout]\" />\n            </a>\n            <a href=\"#\" className=\"danger flat-button\" onClick={(e) => {this.handleDeleteAccount(e);}}>\n              <i className=\"material-icons\">delete</i> &nbsp;<FormattedMessage id=\"button_delete_account\"\n                defaultMessage=\"Delete account\" description=\"Button [Delete account]\" />\n            </a>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <div>\n              <label className=\"small\">\n                <FormattedMessage id=\"label_default_access_mode\" defaultMessage=\"Default access mode:\"\n                description=\"Label for default access mode\" />\n              </label>\n            </div>\n            <div className=\"quoted\">\n              <div>Auth: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>{this.state.auth}</tt></div>\n              <div>Anon: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>{this.state.anon}</tt></div>\n            </div>\n          </div>\n          {this.state.blockedCount > 0 ?\n            <>\n              <div className=\"hr\" />\n              <div className=\"panel-form-row\">\n                <i className=\"material-icons\">block</i>&nbsp;\n                <a href=\"#\" className=\"gray\" onClick={(e) => {e.preventDefault(); this.props.onShowBlocked();}}>\n                  <FormattedMessage id=\"blocked_contacts_link\" defaultMessage=\"Blocked contacts ({count})\"\n                    values={{ count: this.state.blockedCount }} description=\"Blocked contacts link\" />\n                </a>\n              </div>\n            </>\n            : null }\n        </div>\n      }</React.Fragment>\n    );\n  }\n};\n\nexport default injectIntl(AccSecurityView);\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME, LINK_CONTACT_US, LINK_PRIVACY_POLICY, LINK_TERMS_OF_SERVICE } from '../config.js';\n\nexport default class AccSupportView extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          <a href={LINK_CONTACT_US} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">email</i> &nbsp;<FormattedMessage id=\"link_contact_us\"\n              defaultMessage=\"Contact Us\" description=\"Ancor text for contacting us by email\" />\n          </a>\n          <a href={LINK_TERMS_OF_SERVICE} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">description</i> &nbsp;<FormattedMessage id=\"link_terms_of_service\"\n              defaultMessage=\"Terms of Service\" description=\"Ancor text for terms of service link\" />\n          </a>\n          <a href={LINK_PRIVACY_POLICY} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">policy</i> &nbsp;<FormattedMessage id=\"link_privacy_policy\"\n              defaultMessage=\"Privacy Policy\" description=\"Ancor text for privacy policy link\" />\n          </a>\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\"\n              description=\"Label for a client version\" /></label>\n            {APP_NAME}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_sdk\" defaultMessage=\"SDK:\" /></label>\n            {Tinode.getLibrary()}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\"\n              description=\"Label for a server version\" /></label>\n            {this.props.serverVersion}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server_address\" defaultMessage=\"Server address:\" /></label>\n            {this.props.serverAddress}\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","// Login form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\n\nexport default class LoginView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: props.login,\n      password: '',\n      hostName: props.serverAddress,\n      saveToken: props.persist\n    };\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  handleToggleSaveToken() {\n    this.props.onPersistenceChange(!this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onLogin(this.state.login.trim(), this.state.password.trim());\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form id=\"login-form\" onSubmit={this.handleSubmit}>\n        <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n          description=\"Placeholer for username/login\">\n        {\n          (login_prompt) => <input type=\"text\" id=\"inputLogin\"\n            placeholder={login_prompt}\n            autoComplete=\"username\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"none\"\n            value={this.state.login}\n            onChange={this.handleLoginChange}\n            required autoFocus />\n        }\n        </FormattedMessage>\n        <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n          description=\"Placeholder/prompt for entering password\">\n        {\n          (password_prompt) => <VisiblePassword type=\"password\" id=\"inputPassword\"\n            placeholder={password_prompt}\n            autoComplete=\"current-password\"\n            value={this.state.password}\n            onChange={this.handlePasswordChange}\n            required={true} />\n        }\n        </FormattedMessage>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <label htmlFor=\"save-token\">&nbsp;\n            <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n              description=\"Label for a checkbox\" />\n          </label>\n          <a href=\"#reset\">\n            <FormattedMessage id=\"forgot_password_link\" defaultMessage=\"Forgot password?\"\n              description=\"Link to Reset password form\" />\n          </a>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_in\" defaultMessage=\"Sign in\"\n              description=\"Button [Sign In]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n/* END Login */\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  invalid_id: {\n    id: 'error_invalid_id',\n    defaultMessage: 'Invalid ID',\n    description: 'Error message'\n  }\n});\n\nclass NewTopicById extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      groupId: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({groupId: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.groupId) {\n      const name = this.state.groupId.trim();\n      const prefix = name.substr(0, 3);\n      if (name.length > 3 && ['usr', 'grp', 'chn'].includes(prefix)) {\n        this.props.onSubmit(name);\n      } else {\n        this.props.onError(this.props.intl.formatMessage(messages.invalid_id), 'err');\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"group_user_id_prompt\" defaultMessage=\"Group or User ID\"\n          description=\"Prompt for entering user or group ID\">{\n          (prompt) => <input type=\"text\" placeholder={prompt}\n            value={this.state.groupId} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required autoFocus />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_subscribe\" defaultMessage=\"Subscribe\"\n              description=\"Button [Subscribe]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicById);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from './avatar-upload.jsx';\nimport CheckBox from './checkbox.jsx';\nimport TagManager from './tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class NewTopicGroup extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      fn: '', // full/formatted name\n      private: '',\n      imageDataUrl: null,\n      tags: [],\n      isChannel: false\n    };\n\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handlePrivateChange = this.handlePrivateChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleTagsChanged = this.handleTagsChanged.bind(this);\n    this.handleChannelToggle = this.handleChannelToggle.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handlePrivateChange(e) {\n    this.setState({private: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleTagsChanged(tags) {\n    this.setState({tags: tags});\n  }\n\n  handleChannelToggle() {\n    this.setState({isChannel: !this.state.isChannel});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const fn = this.state.fn.trim().substring(0, MAX_TITLE_LENGTH);\n    const comment = this.state.private.trim().substring(0, MAX_TITLE_LENGTH);\n    if (fn) {\n      this.props.onSubmit(fn, this.state.imageDataUrl, comment, this.state.tags, this.state.isChannel);\n    }\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n    return (\n      <form className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\" htmlFor=\"new-topic-fn\">\n              <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                description=\"Label for editing topic name\" />\n            </label>\n            <FormattedMessage id=\"topic_name_editing_placeholder\" defaultMessage=\"Freeform name of the group\"\n              description=\"Prompt for entering topic name\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-fn\" placeholder={placeholder}\n                value={this.state.fn} onChange={this.handleFnChange} autoFocus required />\n            }</FormattedMessage>\n            <br />\n            <label className=\"small\" htmlFor=\"new-topic-priv\">\n              <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                description=\"Label for editing 'private'\" />\n            </label>\n            <FormattedMessage id=\"private_editing_placeholder\" defaultMessage=\"Visible to you only\"\n              description=\"Placeholder for editing 'private'\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-priv\" placeholder={placeholder}\n                value={this.state.private} onChange={this.handlePrivateChange} />\n            }</FormattedMessage>\n          </div>\n          <AvatarUpload\n            tinode={this.props.tinode}\n            onError={this.props.onError}\n            onImageChanged={this.handleImageChanged} />\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox checked={this.state.isChannel} onChange={this.handleChannelToggle}/>&nbsp;\n          <label onClick={this.handleChannelToggle}><FormattedMessage id=\"channel_prompt\"\n            defaultMessage=\"This is a channel\"\n            description=\"Checkbox label when creating a channel\" /></label>\n        </div>\n        <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (user discovery)\"\n          description=\"Section title for TagManager\">{\n          (title) => <TagManager\n            tags={this.state.tags}\n            activated={true}\n            onTagsChanged={this.handleTagsChanged}\n            tinode={this.props.tinode}\n            title={title} />\n        }</FormattedMessage>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses}>\n            <FormattedMessage id=\"button_create\" defaultMessage=\"Create\"\n              description=\"Button [Create]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nexport default class SearchContacts extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      edited: false,\n      search: ''\n    };\n\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  componentWillUnmount() {\n    if (this.state.edited) {\n      this.setState({search: '', edited: false});\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n  }\n\n  handleSearchChange(e) {\n    this.setState({search: e.target.value});\n  }\n\n  handleSearch(e) {\n    e.preventDefault();\n    var query = this.state.search.trim();\n    this.setState({edited: (query.length > 0)});\n    this.props.onSearchContacts(query.length > 0 ? query : Tinode.DEL_CHAR);\n  }\n\n  handleClear(e) {\n    e.preventDefault();\n    if (this.state.edited) {\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n    this.setState({search: '', edited: false});\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Enter') {\n      this.handleSearch(e);\n    } else if (e.key === 'Escape') {\n      this.handleClear();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <i className=\"material-icons search\">search</i>\n          <FormattedMessage id=\"search_placeholder\" defaultMessage=\"List like email:alice@example.com, tel:17025550003...\"\n            description=\"Placeholder in contacts search field\">{\n            (search_placeholder) => <input className=\"search\" type=\"text\"\n              placeholder={search_placeholder}\n              value={this.state.search} onChange={this.handleSearchChange}\n              onKeyDown={this.handleKeyDown} required autoFocus />\n          }</FormattedMessage>\n          <a href=\"#\" onClick={this.handleClear}>\n            <i className=\"material-icons\">close</i>\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","// Create new topic and invite users or send an invite.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport ContactList from '../widgets/contact-list.jsx';\nimport NewTopicById from '../widgets/new-topic-by-id.jsx';\nimport NewTopicGroup from '../widgets/new-topic-group.jsx';\nimport SearchContacts from '../widgets/search-contacts.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\nimport { theCard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  search_for_contacts: {\n    id: \"search_for_contacts\",\n    defaultMessage: \"Use search to find contacts\",\n    description: \"Text shown in contacts view when user entered no search query.\"\n  },\n  search_no_results: {\n    id: \"search_no_results\",\n    defaultMessage: \"Search returned no results\",\n    description: \"Text shown in contacts view when query returned no results.\"\n  }\n});\n\nclass NewTopicView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tabSelected: 'p2p',\n      searchQuery: null\n    };\n\n    this.handleTabClick = this.handleTabClick.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleNewGroupSubmit = this.handleNewGroupSubmit.bind(this);\n    this.handleGroupByID = this.handleGroupByID.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.onInitFind();\n  }\n\n  handleTabClick(e) {\n    e.preventDefault();\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'tab', e.currentTarget.dataset.id));\n    this.setState({tabSelected: e.currentTarget.dataset.id});\n  }\n\n  handleSearchContacts(query) {\n    this.props.onSearchContacts(query);\n    this.setState({searchQuery: Tinode.isNullValue(query) ? null : query});\n  }\n\n  handleContactSelected(sel) {\n    if (this.state.tabSelected === 'p2p') {\n      HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n      this.props.onCreateTopic(sel);\n    }\n  }\n\n  handleNewGroupSubmit(name, dataUrl, priv, tags, isChannel) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(undefined, theCard(name, dataUrl), priv, tags, isChannel);\n  }\n\n  handleGroupByID(topicName) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(topicName);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const no_contacts_placeholder = formatMessage(this.state.searchQuery ?\n      messages.search_no_results : messages.search_for_contacts);\n    return (\n      <div className=\"flex-column\">\n        <ul className=\"tabbar\">\n          <li className={this.state.tabSelected === \"p2p\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"p2p\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_find_user\" defaultMessage=\"find\"\n                description=\"Tab title Find\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"grp\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"grp\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_new_group\" defaultMessage=\"new group\"\n                description=\"Tab title New Group\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"byid\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"byid\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_group_by_id\" defaultMessage=\"by id\"\n                description=\"Tab title Find topic by ID\" />\n            </a>\n          </li>\n        </ul>\n        {this.state.tabSelected === 'grp' ?\n          <NewTopicGroup\n            tinode={this.props.tinode}\n            onSubmit={this.handleNewGroupSubmit} /> :\n          this.state.tabSelected === 'byid' ?\n            <NewTopicById\n              onSubmit={this.handleGroupByID}\n              onError={this.props.onError} /> :\n            <div className=\"flex-column\">\n              <SearchContacts\n                type=\"p2p\"\n                onSearchContacts={this.handleSearchContacts} />\n              <ContactList\n                contacts={this.props.searchResults}\n                myUserId={this.props.myUserId}\n                emptyListMessage={no_contacts_placeholder}\n                showOnline={false}\n                showUnread={false}\n                showContextMenu={false}\n                onTopicSelected={this.handleContactSelected} />\n            </div>}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicView);\n","// A password reset form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\n\nexport default class PasswordResetView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n  }\n\n  componentDidMount() {\n    let parsed = HashNavigation.parseUrlHash(window.location.hash);\n    this.setState({token: parsed.params.token, scheme: parsed.params.scheme});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.token) {\n      this.props.onReset(this.state.scheme, this.state.password.trim(), this.state.token);\n    } else {\n      this.props.onRequest('email', this.state.email.trim());\n    }\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  render() {\n    let reset = (this.state.token && this.state.scheme);\n    return (\n      <form id=\"password-reset-form\" onSubmit={this.handleSubmit}>\n        {reset ?\n          <FormattedMessage id=\"new_password_placeholder\" defaultMessage=\"Enter new password\"\n            description=\"Placeholder for entering new password\">{\n            (placeholder) => <VisiblePassword\n              placeholder={placeholder}\n              autoComplete=\"new-password\"\n              value={this.state.password}\n              required={true} autoFocus={true}\n              onChange={this.handlePasswordChange} />\n          }</FormattedMessage>\n          :\n          <>\n            <label htmlFor=\"inputEmail\">\n              <FormattedMessage id=\"label_reset_password\"\n                defaultMessage=\"Send a password reset email:\"\n                description=\"Label for password reset field\" />\n            </label>\n            <FormattedMessage id=\"credential_email_prompt\" defaultMessage=\"Your registration email\"\n              description=\"Placeholder for entering email\">{\n              (placeholder) => <input type=\"email\" id=\"inputEmail\"\n                placeholder={placeholder}\n                autoComplete=\"email\"\n                value={this.state.email}\n                onChange={this.handleEmailChange}\n                required autoFocus />\n            }</FormattedMessage>\n          </>\n        }\n        <div className=\"dialog-buttons\">\n          <button className=\"primary\" type=\"submit\">{reset ?\n            <FormattedMessage id=\"button_reset\" defaultMessage=\"Reset\" description=\"Button [Reset]\" /> :\n            <FormattedMessage id=\"button_send_request\" defaultMessage=\"Send request\"\n              description=\"Button [Send request]\" />\n          }</button>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react';\n\nimport { KNOWN_HOSTS } from '../config.js';\n\n/* Combobox for selecting host name */\n\nexport default class HostSelector extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hostName: props.serverAddress,\n      changed: false\n    };\n\n    this.handleHostNameChange = this.handleHostNameChange.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handleHostNameChange(e) {\n    this.setState({hostName: e.target.value, changed: true});\n  }\n\n  handleEditingFinished() {\n    if (this.state.changed) {\n      this.setState({changed: false});\n      this.props.onServerAddressChange(this.state.hostName.trim());\n    }\n  }\n\n  render() {\n    var hostOptions = [];\n    for (let key in KNOWN_HOSTS) {\n      let item = KNOWN_HOSTS[key];\n      hostOptions.push(\n        <option key={item} value={item} />\n      );\n    }\n    return (\n      <div className=\"panel-form-row\">\n        <input type=\"search\" id=\"host-name\" placeholder={this.props.hostName} list=\"known-hosts\"\n          className=\"quoted\" value={this.state.hostName} onChange={this.handleHostNameChange}\n          onBlur={this.handleEditingFinished} required />\n        <datalist id=\"known-hosts\">\n          {hostOptions}\n        </datalist>\n      </div>\n    );\n  }\n}\n","// Tinode config panel.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport HostSelector from '../widgets/host-selector.jsx';\n\nexport default class SettingsView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transport: props.transport || 'def',\n      serverAddress: props.serverAddress,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleTransportSelected = this.handleTransportSelected.bind(this);\n    this.handleServerAddressChange = this.handleServerAddressChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onUpdate({\n      transport: this.state.transport,\n      serverAddress: this.state.serverAddress\n    });\n  }\n\n  handleTransportSelected(e) {\n    this.setState({transport: e.currentTarget.value});\n  }\n\n  handleServerAddressChange(name) {\n    this.setState({serverAddress: name});\n  }\n\n  render() {\n    const names = {def: \"default\", ws: \"websocket\", lp: \"long polling\"};\n    const transportOptions = [];\n    ['def', 'ws', 'lp'].map((item) => {\n      const id = 'transport-' + item;\n      const name = names[item];\n      transportOptions.push(\n        <li key={item}>\n          <input type=\"radio\" id={id} name=\"transport-select\" value={item}\n            checked={this.state.transport === item}\n            onChange={this.handleTransportSelected} />\n          <label htmlFor={id}>{name}</label>\n        </li>\n      );\n    });\n\n    return (\n      <form id=\"settings-form\" className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_server_to_use\" defaultMessage=\"Server to use:\"\n              description=\"Label for server selector in SettingsView\" />\n          </label>\n        </div>\n        <HostSelector serverAddress={this.state.serverAddress}\n          onServerAddressChange={this.handleServerAddressChange} />\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_wire_transport\" defaultMessage=\"Wire transport:\"\n              description=\"Label for wire transport selection in SettingsView\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ul className=\"quoted\">\n            {transportOptions}\n          </ul>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button type=\"submit\" className=\"primary\">\n            <FormattedMessage id=\"button_update\" defaultMessage=\"Update\"\n              description=\"Button [Update]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// ValidationView: panel for confirming credentials, like email or phone.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  phone: {\n    id: 'phone_dative',\n    defaultMessage: 'phone',\n    description: \"Dative case of 'phone', i.e. 'phone' in 'by phone'\",\n  },\n  email: {\n    id: 'email_dative',\n    defaultMessage: 'email',\n    description: \"Dative case of 'email', i.e. 'email' in 'by email'\",\n  }\n});\n\nclass ValidationView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      code: props.credCode || ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({code: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    } else if (e.key == 'Escape') {\n      this.handleCancel(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.code && this.state.code.trim()) {\n      this.props.onSubmit(this.props.credMethod, this.state.code.trim());\n    }\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel();\n  }\n\n\n  render() {\n    const { formatMessage } = this.props.intl;\n    const methods = {'email': formatMessage(messages.email), 'tel': formatMessage(messages.phone)};\n    let method = methods[this.props.credMethod] || this.props.credMethod;\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\" htmlFor=\"enter-confirmation-code\">\n            <FormattedMessage id=\"enter_confirmation_code_prompt\"\n              defaultMessage=\"Enter confirmation code sent to you by {method}:\"\n              description=\"Request to enter confirmation code\"\n              values={{method: method}} />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"numeric_confirmation_code_prompt\"\n          defaultMessage=\"Numbers only\" description=\"Prompt for numeric conformation code\">{\n          (numbers_only) => <input type=\"text\" id=\"enter-confirmation-code\"\n            placeholder={numbers_only}\n            value={this.state.code} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"secondary\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_confirm\" defaultMessage=\"Confirm\" description=\"Button [Confirm]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ValidationView);\n","import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport SideNavbar from '../widgets/side-navbar.jsx';\n\nimport AvatarCropView from './avatar-crop-view.jsx';\nimport ContactsView from './contacts-view.jsx';\nimport CreateAccountView from './create-account-view.jsx';\nimport EditAccountView from './edit-account-view.jsx';\nimport AccGeneralView from './acc-general-view.jsx';\nimport AccNotificationsView from './acc-notifications-view.jsx';\nimport AccSecurityView from './acc-security-view.jsx';\nimport AccSupportView from './acc-support-view.jsx';\nimport LoginView from './login-view.jsx';\nimport NewTopicView from './new-topic-view.jsx';\nimport PasswordResetView from './password-reset-view.jsx';\nimport SettingsView from './settings-view.jsx';\nimport ValidationView from './validation-view.jsx';\n\n// Panel titles for translation.\nconst messages = defineMessages({\n  login: {\n    id: 'sidepanel_title_login',\n    description: 'Sidepanel title for LoginView.',\n    defaultMessage: 'Sign In'\n  },\n  register: {\n    id: 'sidepanel_title_register',\n    description: 'Sidepanel title for CreateAccountView.',\n    defaultMessage: 'Create Account'\n  },\n  settings: {\n    id: 'sidepanel_title_settings',\n    description: 'Sidepanel title for SettingsView.',\n    defaultMessage: 'Settings'\n  },\n  edit: {\n    id: 'sidepanel_title_account_settings',\n    description: 'Sidepanel title for EditAccountView.',\n    defaultMessage: 'Account Settings'\n  },\n  general: {\n    id: 'sidepanel_title_acc_general',\n    description: 'Sidepanel title for AccGeneralView.',\n    defaultMessage: 'General'\n  },\n  security: {\n    id: 'sidepanel_title_acc_security',\n    description: 'Sidepanel title for AccSecurityView.',\n    defaultMessage: 'Security'\n  },\n  notif: {\n    id: 'sidepanel_title_acc_notifications',\n    description: 'Sidepanel title for AccNotificationsView.',\n    defaultMessage: 'Notifications'\n  },\n  support: {\n    id: 'sidepanel_title_acc_support',\n    description: 'Sidepanel title for AccSupportView.',\n    defaultMessage: 'Support'\n  },\n  newtpk: {\n    id: 'sidepanel_title_newtpk',\n    description: 'Sidepanel title for NewTopicView.',\n    defaultMessage: 'Start New Chat'\n  },\n  cred: {\n    id: 'sidepanel_title_cred',\n    description: 'Sidepanel title for ValidationView.',\n    defaultMessage: 'Confirm Credentials'\n  },\n  crop: {\n    id: 'sidepanel_title_crop',\n    description: 'Sidepanel title for AvatarCropView.',\n    defaultMessage: 'Drag to Adjust'\n  },\n  reset: {\n    id: 'sidepanel_title_reset',\n    description: 'Sidepanel title for PasswordResetView.',\n    defaultMessage: 'Reset Password'\n  },\n  archive: {\n    id: 'sidepanel_title_archive',\n    description: 'Sidepanel title for ContactsView-Archive.',\n    defaultMessage: 'Archived Chats'\n  },\n  blocked: {\n    id: 'sidepanel_title_blocked',\n    description: 'Sidepanel title for ContactsView-Blocked.',\n    defaultMessage: 'Blocked Chats'\n  }\n});\n\nclass SidepanelView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNewTopic = this.handleNewTopic.bind(this);\n  }\n\n  handleNewTopic() {\n    this.props.onBasicNavigate('newtpk');\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const view = this.props.state || (this.props.myUserId ? 'contacts' : 'login');\n\n    let title, avatar, badges;\n    if (view == 'contacts') {\n      title = this.props.title;\n      avatar = this.props.avatar ? this.props.avatar : true;\n      badges = this.props.trustedBadges;\n    } else {\n      title = formatMessage(messages[view]);\n      avatar = false;\n      badges = null;\n    }\n\n    let onCancel;\n    if (['login', 'contacts'].indexOf(view) == -1) {\n      onCancel = this.props.onCancel;\n    }\n\n    return (\n      <div id=\"sidepanel\" className={this.props.hideSelf ? 'nodisplay' : null}>\n        <SideNavbar\n          state={view}\n          title={title}\n          avatar={avatar}\n          trustedBadges={badges}\n          myUserId={this.props.myUserId}\n          onSignUp={this.props.onSignUp}\n          onSettings={this.props.onSettings}\n          onNewTopic={this.handleNewTopic}\n          onCancel={onCancel} />\n\n        <ErrorPanel\n          level={this.props.errorLevel}\n          text={this.props.errorText}\n          action={this.props.errorAction}\n          actionText={this.props.errorActionText}\n          onClearError={this.props.onError} />\n\n        <LoadSpinner show={this.props.loadSpinnerVisible} />\n\n        {view === 'login' ?\n          <LoginView\n            login={this.props.login}\n            disabled={this.props.loginDisabled}\n            persist={this.props.persist}\n            onLogin={this.props.onLoginRequest}\n            onPersistenceChange={this.props.onPersistenceChange} /> :\n\n          view === 'register' ?\n          <CreateAccountView\n            tinode={this.props.tinode}\n            onCreateAccount={this.props.onCreateAccount}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'settings' ?\n          <SettingsView\n            transport={this.props.transport}\n            serverAddress={this.props.serverAddress}\n            onCancel={this.props.onCancel}\n            onUpdate={this.props.onGlobalSettings} /> :\n\n          view === 'edit' ?\n          <EditAccountView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            trustedBadges={this.props.trustedBadges}\n            onBasicNavigate={this.props.onBasicNavigate} /> :\n\n          view === 'general' ?\n          <AccGeneralView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            onUpdateAccount={this.props.onUpdateAccount}\n            onUpdateTags={this.props.onUpdateAccountTags}\n            onCredAdd={this.props.onCredAdd}\n            onCredDelete={this.props.onCredDelete}\n            onCredConfirm={this.props.onCredConfirm}\n            onBasicNavigate={this.props.onBasicNavigate}\n            onError={this.props.onError} /> :\n\n          view === 'notif' ?\n          <AccNotificationsView\n            messageSounds={this.props.messageSounds}\n            desktopAlerts={this.props.desktopAlerts}\n            desktopAlertsEnabled={this.props.desktopAlertsEnabled}\n            incognitoMode={this.props.incognitoMode}\n            onTogglePushNotifications={this.props.onTogglePushNotifications}\n            onToggleMessageSounds={this.props.onToggleMessageSounds}\n            onToggleIncognitoMode={this.props.onToggleIncognitoMode} /> :\n\n          view === 'security' ?\n          <AccSecurityView\n            tinode={this.props.tinode}\n            onUpdateAccount={this.props.onUpdateAccount}\n            onLogout={this.props.onLogout}\n            onDeleteAccount={this.props.onDeleteAccount}\n            onShowAlert={this.props.onShowAlert}\n            onShowBlocked={this.props.onShowBlocked} /> :\n\n          view === 'support' ?\n          <AccSupportView\n            serverAddress={this.props.serverAddress}\n            serverVersion={this.props.serverVersion} /> :\n\n          (view === 'contacts' || view == 'archive' || view == 'blocked') ?\n          <ContactsView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            connected={this.props.connected}\n            topicSelected={this.props.topicSelected}\n            archive={view == 'archive'}\n            blocked={view == 'blocked'}\n            chatList={this.props.chatList}\n            showContextMenu={this.props.showContextMenu}\n            onTopicSelected={this.props.onTopicSelected}\n            onShowArchive={this.props.onShowArchive} /> :\n\n          view === 'newtpk' ?\n          <NewTopicView\n            tinode={this.props.tinode}\n            searchResults={this.props.searchResults}\n            onInitFind={this.props.onInitFind}\n            onSearchContacts={this.props.onSearchContacts}\n            onCreateTopic={this.props.onCreateTopic}\n            onError={this.props.onError} /> :\n\n          view === 'cred' ?\n          <ValidationView\n            credCode={this.props.credCode}\n            credMethod={this.props.credMethod}\n            onSubmit={this.props.onValidateCredentials}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'reset' ?\n          <PasswordResetView\n            onRequest={this.props.onPasswordResetRequest}\n            onReset={this.props.onResetPassword} /> :\n\n          view === 'crop' ?\n          <AvatarCropView\n            onSubmit={this.props.onAvatarCropped}\n            onCancel={this.props.onCancel} /> :\n\n          null}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SidepanelView);\n","import { KNOWN_HOSTS, DEFAULT_HOST } from '../config.js';\n\n// Detect server address from the URL\nexport function detectServerAddress() {\n  let host = DEFAULT_HOST;\n  if (typeof window.location == 'object') {\n    if (window.location.protocol == 'file:' || window.location.hostname == 'localhost') {\n      host = KNOWN_HOSTS.local;\n    } else if (window.location.hostname) {\n      host = window.location.hostname + (window.location.port ? ':' + window.location.port : '');\n    }\n  }\n  return host;\n}\n\n// Detect if the page is served over HTTPS.\nexport function isSecureConnection() {\n  if (typeof window.location == 'object') {\n    return window.location.protocol == 'https:';\n  }\n  return false;\n}\n\nexport function isLocalHost() {\n  if (typeof window.location == 'object') {\n    return window.location.hostname == 'localhost';\n  }\n  return false;\n}\n","// The top-level class to hold all functionality together.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport * as firebase from 'firebase/app';\nimport 'firebase/messaging';\n\nimport Tinode from 'tinode-sdk';\n\nimport Alert from '../widgets/alert.jsx';\nimport ContextMenu from '../widgets/context-menu.jsx';\n\nimport InfoView from './info-view.jsx';\nimport MessagesView from './messages-view.jsx';\nimport SidepanelView from './sidepanel-view.jsx';\n\nimport { API_KEY, APP_NAME, DEFAULT_P2P_ACCESS_MODE, LOGGING_ENABLED,\n  MEDIA_BREAKPOINT, RECEIVED_DELAY } from '../config.js';\nimport { PACKAGE_VERSION } from '../version.js';\nimport { base64ReEncode, makeImageDataUrl } from '../lib/blob-helpers.js';\nimport { detectServerAddress, isLocalHost, isSecureConnection } from '../lib/host-name.js';\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { secondsToTime } from '../lib/strformat.js'\nimport { updateFavicon } from '../lib/utils.js';\n\n// Sound to play on message received.\nconst POP_SOUND = new Audio('audio/msg.mp3');\n\nconst messages = defineMessages({\n  reconnect_countdown: {\n    id: 'reconnect_countdown',\n    defaultMessage: 'Disconnected. Reconnecting in {seconds}…',\n    description: 'Message shown when an app update is available.'\n  },\n  reconnect_now: {\n    id: 'reconnect_now',\n    defaultMessage: 'Try now',\n    description: 'Prompt for reconnecting now'\n  },\n  push_init_failed: {\n    id: 'push_init_failed',\n    defaultMessage: 'Failed to initialize push notifications',\n    description: 'Error message when push notifications have failed to initialize.'\n  },\n  invalid_security_token: {\n    id: 'invalid_security_token',\n    defaultMessage: 'Invalid security token',\n    description: 'Error message when resetting password.'\n  },\n  no_connection: {\n    id: 'no_connection',\n    defaultMessage: 'No connection',\n    description: 'Warning that the user is offline.'\n  },\n  code_doesnot_match: {\n    id: 'code_doesnot_match',\n    defaultMessage: 'Code does not match',\n    description: 'Error message when the credential validation code is incorrect.'\n  },\n  menu_item_info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  }\n});\n\nclass TinodeWeb extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = this.getBlankState();\n\n    this.handleResize = this.handleResize.bind(this);\n    this.handleHashRoute = this.handleHashRoute.bind(this);\n    this.handleOnline = this.handleOnline.bind(this);\n    this.checkForAppUpdate = this.checkForAppUpdate.bind(this);\n    this.handleVisibilityEvent = this.handleVisibilityEvent.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.handleLoginRequest = this.handleLoginRequest.bind(this);\n    this.handlePersistenceChange = this.handlePersistenceChange.bind(this);\n    this.handleConnected = this.handleConnected.bind(this);\n    this.handleAutoreconnectIteration = this.handleAutoreconnectIteration.bind(this);\n    this.doLogin = this.doLogin.bind(this);\n    this.handleCredentialsRequest = this.handleCredentialsRequest.bind(this);\n    this.handleLoginSuccessful = this.handleLoginSuccessful.bind(this);\n    this.handleDisconnect = this.handleDisconnect.bind(this);\n    this.tnMeMetaDesc = this.tnMeMetaDesc.bind(this);\n    this.tnMeContactUpdate = this.tnMeContactUpdate.bind(this);\n    this.tnMeSubsUpdated = this.tnMeSubsUpdated.bind(this);\n    this.resetContactList = this.resetContactList.bind(this);\n    this.tnData = this.tnData.bind(this);\n    this.tnInitFind = this.tnInitFind.bind(this);\n    this.tnFndSubsUpdated = this.tnFndSubsUpdated.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleTopicSelected = this.handleTopicSelected.bind(this);\n    this.handleHideMessagesView = this.handleHideMessagesView.bind(this);\n    this.handleSendMessage = this.handleSendMessage.bind(this);\n    this.handleNewChatInvitation = this.handleNewChatInvitation.bind(this);\n    this.handleNewAccount = this.handleNewAccount.bind(this);\n    this.handleNewAccountRequest = this.handleNewAccountRequest.bind(this);\n    this.handleUpdateAccountRequest = this.handleUpdateAccountRequest.bind(this);\n    this.handleUpdateAccountTagsRequest = this.handleUpdateAccountTagsRequest.bind(this);\n    this.handleToggleIncognitoMode = this.handleToggleIncognitoMode.bind(this);\n    this.handleSettings = this.handleSettings.bind(this);\n    this.handleGlobalSettings = this.handleGlobalSettings.bind(this);\n    this.handleShowArchive = this.handleShowArchive.bind(this);\n    this.handleShowBlocked = this.handleShowBlocked.bind(this);\n    this.handleToggleMessageSounds = this.handleToggleMessageSounds.bind(this);\n    this.handleCredAdd = this.handleCredAdd.bind(this);\n    this.handleCredDelete = this.handleCredDelete.bind(this);\n    this.handleCredConfirm = this.handleCredConfirm.bind(this);\n    this.initFCMessaging = this.initFCMessaging.bind(this);\n    this.togglePushToken = this.togglePushToken.bind(this);\n    this.requestPushToken = this.requestPushToken.bind(this);\n    this.handlePushMessage = this.handlePushMessage.bind(this);\n    this.handleSidepanelCancel = this.handleSidepanelCancel.bind(this);\n    this.handleStartTopicRequest = this.handleStartTopicRequest.bind(this);\n    this.handleNewTopicCreated = this.handleNewTopicCreated.bind(this);\n    this.handleTopicUpdateRequest = this.handleTopicUpdateRequest.bind(this);\n    this.handleChangePermissions = this.handleChangePermissions.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n    this.handleDeleteMessagesRequest = this.handleDeleteMessagesRequest.bind(this);\n    this.handleLeaveUnsubRequest = this.handleLeaveUnsubRequest.bind(this);\n    this.handleBlockTopicRequest = this.handleBlockTopicRequest.bind(this);\n    this.handleReportTopic = this.handleReportTopic.bind(this);\n    this.handleShowContextMenu = this.handleShowContextMenu.bind(this);\n    this.defaultTopicContextMenu = this.defaultTopicContextMenu.bind(this);\n    this.handleHideContextMenu = this.handleHideContextMenu.bind(this);\n    this.handleShowAlert = this.handleShowAlert.bind(this);\n    this.handleShowInfoView = this.handleShowInfoView.bind(this);\n    this.handleHideInfoView = this.handleHideInfoView.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleValidateCredentialsRequest = this.handleValidateCredentialsRequest.bind(this);\n    this.handlePasswordResetRequest = this.handlePasswordResetRequest.bind(this);\n    this.handleResetPassword = this.handleResetPassword.bind(this);\n    this.handleContextMenuAction = this.handleContextMenuAction.bind(this);\n  }\n\n  getBlankState() {\n    const settings = LocalStorageUtil.getObject('settings') || {};\n    const persist = !!LocalStorageUtil.getObject('keep-logged-in');\n\n    return {\n      connected: false,\n      // Connected and subscribed to 'me'\n      ready: false,\n      // Try to re-login on new connection.\n      autoLogin: false,\n      transport: settings.transport || null,\n      serverAddress: settings.serverAddress || detectServerAddress(),\n      serverVersion: \"no connection\",\n      // \"On\" is the default, so saving the \"off\" state.\n      messageSounds: !settings.messageSoundsOff,\n      incognitoMode: false,\n      desktopAlerts: persist && settings.desktopAlerts,\n      desktopAlertsEnabled: (isSecureConnection() || isLocalHost()) &&\n        (typeof firebase != 'undefined') && (typeof navigator != 'undefined') &&\n        (typeof FIREBASE_INIT != 'undefined'),\n      firebaseToken: persist ? LocalStorageUtil.getObject('firebase-token') : null,\n\n      applicationVisible: !document.hidden,\n\n      errorText: '',\n      errorLevel: null,\n      errorAction: undefined,\n      errorActionText: null,\n\n      sidePanelSelected: 'login',\n      sidePanelTitle: null,\n      sidePanelAvatar: null,\n      myTrustedBadges: [],\n      loadSpinnerVisible: false,\n\n      login: '',\n      password: '',\n      persist: persist,\n      myUserId: null,\n      liveConnection: navigator.onLine,\n      topicSelected: '',\n      topicSelectedOnline: false,\n      topicSelectedAcs: null,\n      newTopicParams: null,\n      loginDisabled: false,\n      displayMobile: (window.innerWidth <= MEDIA_BREAKPOINT),\n      showInfoPanel: false,\n      mobilePanel: 'sidepanel',\n\n      contextMenuVisible: false,\n      contextMenuBounds: null,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuItems: [],\n\n      // Modal alert dialog.\n      alertVisible: false,\n      alertParams: {},\n\n      // Chats as shown in the ContactsView\n      chatList: [],\n      // Contacts returned by a search query.\n      searchResults: [],\n      // Merged results of a search query and p2p chats.\n      searchableContacts: [],\n      credMethod: undefined,\n      credCode: undefined,\n      // Topic to go to after login.\n      requestedTopic: undefined\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    window.addEventListener('online', (e) => { this.handleOnline(true); });\n    window.addEventListener('offline', (e) => { this.handleOnline(false); });\n    window.addEventListener('hashchange', this.handleHashRoute);\n    // Process background notifications from the service worker.\n    const serviceWorkerChannel = new BroadcastChannel('tinode-sw');\n    serviceWorkerChannel.addEventListener('message', this.handlePushMessage);\n\n    // Window/tab visible or invisible for pausing timers.\n    document.addEventListener('visibilitychange', this.handleVisibilityEvent);\n\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n\n    new Promise((resolve, reject) => {\n      this.tinode = TinodeWeb.tnSetup(this.state.serverAddress, this.state.transport,\n        this.props.intl.locale, this.state.persist, resolve);\n      this.tinode.onConnect = this.handleConnected;\n      this.tinode.onDisconnect = this.handleDisconnect;\n      this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n    }).then(() => {\n      // Initialize desktop alerts.\n      if (this.state.desktopAlertsEnabled) {\n        this.initFCMessaging().then(() => {\n          if (this.state.desktopAlerts) {\n            if (!this.state.firebaseToken) {\n              this.togglePushToken(true);\n            } else {\n              this.tinode.setDeviceToken(this.state.firebaseToken);\n            }\n          }\n        }).catch(() => {\n          // do nothing: handled earlier.\n          // catch needed to pervent unnecessary logging of error.\n        });\n      }\n\n      // Parse and save the hash navigation params.\n      const parsedNav = HashNavigation.parseUrlHash(window.location.hash);\n\n      // Read contacts from cache.\n      this.resetContactList();\n\n      const token = this.state.persist ? LocalStorageUtil.getObject('auth-token') : undefined;\n      if (token) {\n        this.setState({autoLogin: true});\n\n        // When reading from storage, date is returned as string.\n        token.expires = new Date(token.expires);\n        this.tinode.setAuthToken(token);\n        this.tinode.connect().catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n      }\n\n      // Save possible topic name and navigate to blank state.\n      this.setState({requestedTopic: parsedNav.path[1]});\n      HashNavigation.navigateTo('');\n\n      this.readTimer = null;\n      this.readTimerCallback = null;\n\n      this.handleHashRoute();\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n    window.removeEventListener('hashchange', this.handleHashRoute);\n    document.removeEventListener('visibilitychange', this.handleVisibilityEvent);\n  }\n\n  // Setup transport (usually websocket) and server address. This will terminate connection with the server.\n  static tnSetup(serverAddress, transport, locale, persistentCache, onSetupCompleted) {\n    const tinode = new Tinode({appName: APP_NAME, host: serverAddress, apiKey: API_KEY, transport: transport,\n      secure: isSecureConnection(), persist: persistentCache}, onSetupCompleted);\n    tinode.setHumanLanguage(locale);\n    tinode.enableLogging(LOGGING_ENABLED, true);\n    return tinode;\n  }\n\n  // Notifiy Tinode that a push message was received from the server.\n  handlePushMessage(data) {\n    if (data.what == 'msg' && Tinode.isChannelTopicName(data.topic)) {\n      // The last argument is a fake user Id: otherwise the update is seen as one from the current user.\n      this.tinode.oobNotification(data.topic, data.seq, 'fake-uid');\n    }\n  }\n\n  initFCMessaging() {\n    const {formatMessage, locale} = this.props.intl;\n    const onError = (msg, err) => {\n      console.log(msg, err);\n      this.handleError(formatMessage(messages.push_init_failed), 'err');\n      this.setState({desktopAlertsEnabled: false});\n    }\n\n    try {\n      this.fbPush = firebase.initializeApp(FIREBASE_INIT, APP_NAME).messaging();\n      this.fbPush.usePublicVapidKey(FIREBASE_INIT.messagingVapidKey);\n\n      return navigator.serviceWorker.register('/service-worker.js').then((reg) => {\n        this.checkForAppUpdate(reg);\n        this.fbPush.useServiceWorker(reg);\n        reg.active.postMessage(JSON.stringify({locale: locale, version: PACKAGE_VERSION}));\n\n        // Google could not be bothered to mention that onTokenRefresh is never called.\n        this.fbPush.onTokenRefresh(() => {\n          this.requestPushToken();\n        });\n\n        // Handhe FCM pushes\n        // (a) for channels always,\n        // (b) pushes when the app is in foreground but has not focus.\n        this.fbPush.onMessage(payload => { this.handlePushMessage(payload.data); });\n\n        return reg;\n      }).catch((err) => {\n        // registration failed :(\n        onError(\"Failed to register service worker:\", err);\n        return Promise.reject(err);\n      });\n    } catch (err) {\n      onError(\"Failed to initialize push notifications\", err);\n      return Promise.reject(err);\n    }\n  }\n\n  handleResize() {\n    const mobile = document.documentElement.clientWidth <= MEDIA_BREAKPOINT;\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n    if (this.state.displayMobile != mobile) {\n      this.setState({displayMobile: mobile});\n    }\n  }\n\n  // Check if a newer version of TinodeWeb app is available at the server.\n  checkForAppUpdate(reg) {\n    reg.onupdatefound = () => {\n      const installingWorker = reg.installing;\n      installingWorker.onstatechange = () => {\n        if (installingWorker.state == 'installed' && navigator.serviceWorker.controller) {\n          const msg = <>\n            <FormattedMessage id=\"update_available\"\n              defaultMessage=\"Update available.\"\n              description=\"Message shown when an app update is available.\" /> <a href=\"\">\n              <FormattedMessage id=\"reload_update\"\n                defaultMessage=\"Reload\"\n                description=\"Call to action to reload application when update is available.\" />\n            </a>.</>;\n          this.handleError(msg, 'info');\n        }\n      }\n    }\n  }\n\n  // Handle for hashchange event: display appropriate panels.\n  handleHashRoute() {\n    const hash = HashNavigation.parseUrlHash(window.location.hash);\n    if (hash.path && hash.path.length > 0) {\n      // Left-side panel selector.\n      if (['register','settings','edit','notif','security','support','general',\n          'cred','crop','reset','newtpk','archive','blocked','contacts',''].includes(hash.path[0])) {\n        this.setState({sidePanelSelected: hash.path[0]});\n      } else {\n        console.log(\"Unknown sidepanel view\", hash.path[0]);\n      }\n\n      // Topic for MessagesView selector.\n      const topicName = hash.path[1];\n      if (Tinode.topicType(topicName) && topicName != this.state.topicSelected) {\n          const newState = {\n            topicSelected: topicName\n          };\n          const acs = this.tinode.getTopicAccessMode(topicName);\n          if (acs) {\n            newState.topicSelectedAcs = acs;\n          }\n          this.setState(newState);\n      }\n    } else {\n      // Empty hashpath\n      this.setState({sidePanelSelected: ''});\n    }\n\n    // Save validation credentials, if available.\n    if (hash.params.method) {\n      this.setState({ credMethod: hash.params.method });\n    }\n    if (hash.params.code) {\n      this.setState({ credCode: hash.params.code });\n    }\n\n    // Additional parameters of panels.\n    this.setState({\n      showInfoPanel: hash.params.info,\n      newTopicTabSelected: hash.params.tab\n    });\n  }\n\n  handleOnline(online) {\n    if (online) {\n      this.handleError();\n      clearInterval(this.reconnectCountdown);\n      this.tinode.reconnect();\n    } else {\n      this.handleError(this.props.intl.formatMessage(messages.no_connection), 'warn');\n    }\n    this.setState({liveConnection: online});\n  }\n\n  handleVisibilityEvent() {\n    this.setState({applicationVisible: !document.hidden});\n  }\n\n  handleError(err, level, action, actionText) {\n    this.setState({errorText: err, errorLevel: level, errorAction: action, errorActionText: actionText});\n  }\n\n  // User clicked Login button in the side panel.\n  handleLoginRequest(login, password) {\n    this.setState({\n      loginDisabled: true,\n      login: login,\n      password: password,\n      loadSpinnerVisible: true,\n      autoLogin: true\n    });\n    this.handleError('', null);\n\n    if (this.tinode.isConnected()) {\n      this.doLogin(login, password, {meth: this.state.credMethod, resp: this.state.credCode});\n    } else {\n      this.tinode.connect().catch((err) => {\n        // Socket error\n        this.setState({loginDisabled: false, autoLogin: false, loadSpinnerVisible: false});\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // Enable or disable saving the password and IndexedDB.\n  handlePersistenceChange(persist) {\n    if (persist) {\n      this.tinode.initStorage().then(() => {\n        console.log(\"storage initialized\");\n        LocalStorageUtil.setObject('keep-logged-in', true);\n        this.setState({persist: true});\n      });\n    } else {\n      this.tinode.clearStorage().then(() => {\n        console.log(\"storage cleared\");\n        LocalStorageUtil.setObject('keep-logged-in', false);\n        this.setState({persist: false});\n      });\n    }\n  }\n\n  // Connection succeeded.\n  handleConnected() {\n    // Just to be sure.\n    clearInterval(this.reconnectCountdown);\n    this.handleError();\n\n    const params = this.tinode.getServerInfo();\n    this.setState({\n      serverVersion: params.ver + ' ' + (params.build ? params.build : 'none')\n    });\n\n    if (this.state.autoLogin) {\n      this.doLogin(this.state.login, this.state.password, {meth: this.state.credMethod, resp: this.state.credCode});\n    }\n  }\n\n  // Called for each auto-reconnect iteration.\n  handleAutoreconnectIteration(sec, prom) {\n    clearInterval(this.reconnectCountdown);\n\n    if (sec < 0) {\n      // Clear error\n      this.handleError();\n      return;\n    }\n\n    if (prom) {\n      // Reconnecting now\n      prom.then(() => {\n        // Reconnected: clear error\n        this.handleError();\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n      return;\n    }\n\n    const {formatMessage} = this.props.intl;\n    let count = sec / 1000;\n    count = count | count;\n    this.reconnectCountdown = setInterval(() => {\n      const timeLeft = (count > 99) ? secondsToTime(count) : count;\n      this.handleError(\n        formatMessage(messages.reconnect_countdown, {seconds: timeLeft}),\n        'warn',\n        () => {\n          clearInterval(this.reconnectCountdown);\n          this.tinode.reconnect();\n        },\n        formatMessage(messages.reconnect_now)\n      );\n      count -= 1;\n    }, 1000);\n  }\n\n  // Connection lost\n  handleDisconnect(err) {\n    this.setState({\n      connected: false,\n      ready: false,\n      topicSelectedOnline: false,\n      errorText: err && err.message ? err.message : \"Disconnected\",\n      errorLevel: err && err.message ? 'err' : 'warn',\n      loginDisabled: false,\n      contextMenuVisible: false,\n      serverVersion: \"no connection\"\n    });\n  }\n\n  doLogin(login, password, cred) {\n    if (this.tinode.isAuthenticated()) {\n      // Already logged in. Go to default screen.\n      HashNavigation.navigateTo('');\n      return;\n    }\n    // Sanitize and package credentail.\n    cred = Tinode.credential(cred);\n    // Try to login with login/password. If they are not available, try token. If no token, ask for login/password.\n    let promise = null;\n    const token = this.tinode.getAuthToken();\n    if (login && password) {\n      this.setState({password: null});\n      promise = this.tinode.loginBasic(login, password, cred);\n    } else if (token) {\n      promise = this.tinode.loginToken(token.token, cred);\n    }\n\n    if (promise) {\n      promise.then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text === 'validate credentials') {\n          this.setState({loadSpinnerVisible: false});\n          if (cred) {\n            this.handleError(this.props.intl.formatMessage(messages.code_doesnot_match), 'warn');\n          }\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful();\n        }\n      }).catch((err) => {\n        // Login failed, report error.\n        this.setState({\n          loginDisabled: false,\n          credMethod: undefined,\n          credCode: undefined,\n          loadSpinnerVisible: false,\n          autoLogin: false\n        });\n        this.handleError(err.message, 'err');\n        localStorage.removeItem('auth-token');\n        HashNavigation.navigateTo('');\n      });\n    } else {\n      // No login credentials provided.\n      // Make sure we are on the login page.\n      HashNavigation.navigateTo('');\n      this.setState({loginDisabled: false});\n    }\n  }\n\n  handleCredentialsRequest(params) {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    parsed.path[0] = 'cred';\n    parsed.params['method'] = params.cred[0];\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n  }\n\n  handleLoginSuccessful() {\n    this.handleError();\n\n    // Refresh authentication token.\n    if (LocalStorageUtil.getObject('keep-logged-in')) {\n      LocalStorageUtil.setObject('auth-token', this.tinode.getAuthToken());\n    }\n\n    const goToTopic = this.state.requestedTopic;\n    // Logged in fine, subscribe to 'me' attaching callbacks from the contacts view.\n    const me = this.tinode.getMeTopic();\n    me.onMetaDesc = this.tnMeMetaDesc;\n    me.onContactUpdate = this.tnMeContactUpdate;\n    me.onSubsUpdated = this.tnMeSubsUpdated;\n    this.setState({\n      connected: true,\n      credMethod: undefined,\n      credCode: undefined,\n      myUserId: this.tinode.getCurrentUserID(),\n      autoLogin: true,\n      requestedTopic: undefined,\n    });\n    // Subscribe, fetch topic desc, the list of subscriptions. Messages are not fetched.\n    me.subscribe(\n      me.startMetaQuery().\n        withLaterSub().\n        withDesc().\n        withTags().\n        withCred().\n        build()\n      ).catch((err) => {\n        this.tinode.disconnect();\n        localStorage.removeItem('auth-token');\n        this.handleError(err.message, 'err');\n        HashNavigation.navigateTo('');\n      }).finally(() => {\n        this.setState({loadSpinnerVisible: false});\n      });\n    let urlHash = HashNavigation.setUrlSidePanel(window.location.hash, 'contacts');\n    if (goToTopic) {\n      urlHash = HashNavigation.setUrlTopic(urlHash, goToTopic);\n    }\n    HashNavigation.navigateTo(urlHash);\n  }\n\n  tnMeMetaDesc(desc) {\n    if (desc) {\n      if (desc.public) {\n        this.setState({\n          sidePanelTitle: desc.public.fn,\n          sidePanelAvatar: makeImageDataUrl(desc.public.photo)\n        });\n      }\n      if (desc.trusted) {\n        const badges = [];\n        for (const [key, val] of Object.entries(desc.trusted)) {\n          if (val) {\n            badges.push(key);\n          }\n        }\n        this.setState({\n          myTrustedBadges: badges,\n        });\n      }\n      if (desc.acs) {\n        this.setState({\n          incognitoMode: !desc.acs.isPresencer()\n        });\n      }\n    }\n  }\n\n  // Reactions to updates to the contact list.\n  tnMeContactUpdate(what, cont) {\n    if (what == 'on' || what == 'off') {\n      this.resetContactList();\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedOnline: (what == 'on')});\n      }\n    } else if (what == 'read') {\n      this.resetContactList();\n    } else if (what == 'msg') {\n      // Check if the topic is archived. If so, don't play a sound.\n      const topic = this.tinode.getTopic(cont.topic);\n      const archived = topic && topic.isArchived();\n\n      // New message received. Maybe the message is from the current user, then unread is 0.\n      if (cont.unread > 0 && this.state.messageSounds && !archived) {\n        // Skip update if the topic is currently open, otherwise the badge will annoyingly flash.\n        if (document.hidden || this.state.topicSelected != cont.topic) {\n          POP_SOUND.play();\n        }\n      }\n      // Reorder contact list to use possibly updated 'touched'.\n      this.resetContactList();\n    } else if (what == 'recv') {\n      // Explicitly ignoring \"recv\" -- it causes no visible updates to contact list.\n    } else if (what == 'gone' || what == 'unsub') {\n      // Topic deleted or user unsubscribed. Remove topic from view.\n      // If the currently selected topic is gone, clear the selection.\n      if (this.state.topicSelected == cont.topic) {\n        this.handleTopicSelected(null);\n      }\n      // Redraw without the deleted topic.\n      this.resetContactList();\n    } else if (what == 'acs') {\n      // Permissions changed. If it's for the currently selected topic,\n      // update the views.\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedAcs: cont.acs});\n      }\n    } else if (what == 'del') {\n      // TODO: messages deleted (hard or soft) -- update pill counter.\n    } else if (what == 'upd') {\n      // upd - handled by the SDK. Explicitly ignoring here.\n    } else {\n      // TODO(gene): handle other types of notifications:\n      // * ua -- user agent changes (maybe display a pictogram for mobile/desktop).\n      console.log(\"Unsupported (yet) presence update:\" + what + \" in: \" + cont.topic);\n    }\n  }\n\n  tnMeSubsUpdated(unused) {\n    this.resetContactList();\n  }\n\n  // Merge search results and contact list to create a single flat\n  // list of known contacts for GroupManager to use.\n  static prepareSearchableContacts(chatList, foundContacts) {\n    const merged = {};\n\n    // For chatList topics merge only p2p topics and convert them to the\n    // same format as foundContacts.\n    for (const c of chatList) {\n      if (Tinode.isP2PTopicName(c.topic)) {\n          merged[c.topic] = {\n            user: c.topic,\n            updated: c.updated,\n            public: c.public,\n            private: c.private,\n            acs: c.acs\n          };\n      }\n    }\n\n    // Add all foundCountacts if they have not been added already.\n    for (const c of foundContacts) {\n      if (!merged[c.user]) {\n        merged[c.user] = c;\n      }\n    }\n\n    return Object.values(merged);\n  }\n\n  resetContactList() {\n    const newState = {\n      chatList: []\n    };\n\n    if (!this.state.ready) {\n      newState.ready = true;\n    }\n\n    this.tinode.getMeTopic().contacts((c) => {\n      if (!c.topic && !c.user) {\n        // Contacts expect c.topic to be set.\n        c.topic = c.name;\n      }\n\n      newState.chatList.push(c);\n      if (this.state.topicSelected == c.topic) {\n        newState.topicSelectedOnline = c.online;\n        newState.topicSelectedAcs = c.acs;\n      }\n    });\n    // Merge search results and chat list.\n    newState.searchableContacts = TinodeWeb.prepareSearchableContacts(newState.chatList, this.state.searchResults);\n    this.setState(newState);\n  }\n\n  // Sending \"received\" notifications\n  tnData(data) {\n    const topic = this.tinode.getTopic(data.topic);\n    if (topic.msgStatus(data, true) >= Tinode.MESSAGE_STATUS_SENT && data.from != this.state.myUserId) {\n      clearTimeout(this.receivedTimer);\n      this.receivedTimer = setTimeout(() => {\n        this.receivedTimer = undefined;\n        topic.noteRecv(data.seq);\n      }, RECEIVED_DELAY);\n    }\n  }\n\n  /* Fnd topic: find contacts by tokens */\n  tnInitFind() {\n    const fnd = this.tinode.getFndTopic();\n    fnd.onSubsUpdated = this.tnFndSubsUpdated;\n    if (fnd.isSubscribed()) {\n      this.tnFndSubsUpdated();\n    } else {\n      fnd.subscribe(fnd.startMetaQuery().withSub().build()).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  tnFndSubsUpdated() {\n    const foundContacts = [];\n    // Don't attempt to create P2P topics which already exist. Server will reject the duplicates.\n    this.tinode.getFndTopic().contacts((s) => {\n      foundContacts.push(s);\n    });\n    this.setState({\n      searchResults: foundContacts,\n      searchableContacts: TinodeWeb.prepareSearchableContacts(this.state.chatList, foundContacts)\n    });\n  }\n\n  /** Called when the user enters a contact into the contact search field in the NewAccount panel\n    @param query {Array} is an array of contacts to search for\n   */\n  handleSearchContacts(query) {\n    const fnd = this.tinode.getFndTopic();\n    fnd.setMeta({desc: {public: query}}).then((ctrl) => {\n      return fnd.getMeta(fnd.startMetaQuery().withSub().build());\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  // User clicked on a contact in the side panel or deleted a contact.\n  handleTopicSelected(topicName) {\n    // Clear newTopicParams after use.\n    if (this.state.newTopicParams && this.state.newTopicParams._topicName != topicName) {\n      this.setState({\n        newTopicParams: null\n      });\n    }\n\n    if (topicName) {\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'topic-view',\n        showInfoPanel: false\n      });\n      // Different contact selected.\n      if (this.state.topicSelected != topicName) {\n        this.setState({\n          topicSelectedOnline: this.tinode.isTopicOnline(topicName),\n          topicSelectedAcs: this.tinode.getTopicAccessMode(topicName)\n        });\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', topicName));\n      }\n    } else {\n      // Currently selected contact deleted\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'sidepanel',\n        topicSelectedOnline: false,\n        topicSelectedAcs: null,\n        showInfoPanel: false\n      });\n\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic('', null));\n    }\n  }\n\n  // In mobile view user requested to show sidepanel\n  handleHideMessagesView() {\n    this.setState({\n      mobilePanel: 'sidepanel'\n    });\n    HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, null));\n  }\n\n  // User is sending a message, either plain text or a drafty object, possibly\n  // with attachments.\n  //  - msg - Drafty message with content\n  //  - promise - Promise to be resolved when the upload is completed\n  //  - uploader - for tracking progress\n  handleSendMessage(msg, promise, uploader) {\n    const topic = this.tinode.getTopic(this.state.topicSelected);\n\n    msg = topic.createMessage(msg, false);\n    // The uploader is used to show progress.\n    msg._uploader = uploader;\n\n    if (!topic.isSubscribed()) {\n      if (!promise) {\n        promise = Promise.resolve();\n      }\n      promise = promise.then(() => { return topic.subscribe(); });\n    }\n\n    if (promise) {\n      promise = promise.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n\n    topic.publishDraft(msg, promise)\n      .then((ctrl) => {\n        if (topic.isArchived()) {\n          return topic.archive(false);\n        }\n      })\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleNewChatInvitation(topicName, action) {\n    const topic = this.tinode.getTopic(topicName);\n    let response = null;\n    switch (action) {\n      case 'accept':\n        // Accept given permissions.\n        const mode = topic.getAccessMode().getGiven();\n        response = topic.setMeta({sub: {mode: mode}});\n        if (topic.isP2PType()) {\n          // For P2P topics change 'given' permission of the peer too.\n          // In p2p topics the other user has the same name as the topic.\n          response = response.then((ctrl) => {\n            topic.setMeta({sub: {user: topicName, mode: mode}});\n          });\n        }\n        break;\n      case 'delete':\n        // Ignore invitation by deleting it.\n        response = topic.delTopic(true);\n        break;\n      case 'block':\n        // Ban the topic making futher invites impossible.\n        // Just self-ban.\n        const am = topic.getAccessMode().updateWant('-JP').getWant();\n        response = topic.setMeta({sub: {mode: am}}).then((ctrl) => {\n          return this.handleTopicSelected(null);\n        });\n        break;\n      default:\n        console.log(\"Unknown invitation action\", '\"' + action + '\"\"');\n    }\n\n    if (response != null) {\n      response.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // User chose a Sign Up menu item.\n  handleNewAccount() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, 'register'));\n  }\n\n  // Actual registration of a new account.\n  handleNewAccountRequest(login_, password_, public_, cred_, tags_) {\n    // Clear old error, if any.\n    this.handleError();\n\n    this.tinode.connect(this.state.serverAddress)\n      .then(() => {\n        return this.tinode.createAccountBasic(login_, password_,\n          {public: public_, tags: tags_, cred: Tinode.credential(cred_)});\n      }).then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text == 'validate credentials') {\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful(this);\n        }\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleUpdateAccountRequest(password, pub, defacs) {\n    this.handleError();\n\n    if (pub || defacs) {\n      const params = {};\n      if (pub) {\n        params.public = pub;\n      }\n      if (defacs) {\n        params.defacs = defacs;\n      }\n      this.tinode.getMeTopic().setMeta({desc: params}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n    if (password) {\n      this.tinode.updateAccountBasic(null, this.tinode.getCurrentLogin(), password).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleToggleIncognitoMode(on) {\n    const me = this.tinode.getMeTopic();\n    const am = me.getAccessMode().updateWant(on ? '-P' : '+P').getWant();\n    me.setMeta({sub: {mode: am}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleUpdateAccountTagsRequest(tags) {\n    this.tinode.getMeTopic().setMeta({tags: tags})\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  // User chose Settings menu item.\n  handleSettings() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'edit' : 'settings'));\n  }\n\n  // User updated global parameters.\n  handleGlobalSettings(settings) {\n    const serverAddress = settings.serverAddress || this.state.serverAddress;\n    const transport = settings.transport || this.state.transport;\n    if (this.tinode) {\n      this.tinode.clearStorage();\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.tinode = TinodeWeb.tnSetup(serverAddress, transport, this.props.intl.locale,\n      LocalStorageUtil.getObject('keep-logged-in'));\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n\n    this.setState({\n      serverAddress: serverAddress,\n      transport: transport\n    });\n    LocalStorageUtil.setObject('settings', {\n      serverAddress: serverAddress,\n      transport: transport\n    });\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, ''));\n  }\n\n  // User chose 'Archived chats'.\n  handleShowArchive() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'archive' : ''));\n  }\n\n  // User viewes 'Blocked chats'.\n  handleShowBlocked() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'blocked' : ''));\n  }\n\n  togglePushToken(enabled) {\n    if (enabled) {\n      if (!this.state.firebaseToken) {\n        const fcm = this.fbPush ?\n          Promise.resolve() :\n          this.initFCMessaging();\n        fcm.then(() => {\n          return this.fbPush.requestPermission();\n        }).then(() => {\n          this.requestPushToken();\n        }).catch((err) => {\n          console.log(\"Failed to get notification permission.\", err);\n          this.handleError(err.message, 'err');\n          this.setState({desktopAlerts: false, firebaseToken: null});\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        });\n      } else {\n        this.setState({desktopAlerts: true});\n        if (LocalStorageUtil.getObject('keep-logged-in')) {\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n        }\n      }\n    } else if (this.state.firebaseToken && this.fbPush) {\n      this.fbPush.deleteToken(this.state.firebaseToken).catch((err) => {\n        console.log(\"Unable to delete token.\", err);\n      }).finally(() => {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        localStorage.removeItem('firebase-token');\n        this.setState({desktopAlerts: false, firebaseToken: null});\n        // Inform the server that the token was deleted.\n        this.tinode.setDeviceToken(null);\n      });\n    } else {\n      this.setState({desktopAlerts: false, firebaseToken: null});\n      LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n    }\n  }\n\n  requestPushToken() {\n    this.fbPush.getToken().then((refreshedToken) => {\n      const persist = LocalStorageUtil.getObject('keep-logged-in');\n      if (refreshedToken != this.state.firebaseToken) {\n        this.tinode.setDeviceToken(refreshedToken);\n        if (persist) {\n          LocalStorageUtil.setObject('firebase-token', refreshedToken);\n        }\n      }\n      this.setState({firebaseToken: refreshedToken, desktopAlerts: true});\n      if (persist) {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n      }\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n      console.log(\"Failed to retrieve firebase token\", err);\n    });\n  }\n\n  handleToggleMessageSounds(enabled) {\n    this.setState({messageSounds: enabled});\n    LocalStorageUtil.updateObject('settings', {\n      messageSoundsOff: !enabled\n    });\n  }\n\n  handleCredAdd(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.setMeta({cred: {meth: method, val: value}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredDelete(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.delCredential(method, value).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredConfirm(method, response) {\n    this.handleCredentialsRequest({cred: [method]});\n  }\n\n  // User clicked Cancel button in Setting or Sign Up panel.\n  handleSidepanelCancel() {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    let path = '';\n    if (['security','support','general','notif'].includes(parsed.path[0])) {\n      path = 'edit';\n    } else if ('blocked' == parsed.path[0]) {\n      path = 'security';\n    } else if ('crop' == parsed.path[0]) {\n      path = 'general';\n    } else if (this.state.myUserId) {\n      path = 'contacts';\n    }\n    parsed.path[0] = path;\n    if (parsed.params) {\n      delete parsed.params.code;\n      delete parsed.params.method;\n      delete parsed.params.tab;\n    }\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n    this.setState({errorText: '', errorLevel: null});\n  }\n\n  // Basic nagigator by hash value. No need to bind to this.\n  basicNavigator(hash) {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, hash));\n  }\n\n  // Request to start a topic, new or selected from search results, or \"by ID\".\n  handleStartTopicRequest(topicName, pub, priv, tags, isChannel) {\n    // Check if topic is indeed new. If not, launch it.\n    if (topicName && this.tinode.isTopicCached(topicName)) {\n      this.handleTopicSelected(topicName);\n      return;\n    }\n\n    const params = {};\n    if (Tinode.isP2PTopicName(topicName)) {\n      // Because we are initialing the subscription, set 'want' to all permissions.\n      params.sub = {mode: DEFAULT_P2P_ACCESS_MODE};\n      // Give the other user all permissions too.\n      params.desc = {defacs: {auth: DEFAULT_P2P_ACCESS_MODE}};\n    } else {\n      topicName = topicName || this.tinode.newGroupTopicName(isChannel);\n      params.desc = {public: pub, private: {comment: priv}};\n      params.tags = tags;\n    }\n    params._topicName = topicName;\n    this.setState({newTopicParams: params}, () => {this.handleTopicSelected(topicName)});\n  }\n\n  // New topic was creted, here is the new topic name.\n  handleNewTopicCreated(oldName, newName) {\n    if (this.state.topicSelected == oldName && oldName != newName) {\n      // If the current URl contains the old topic name, replace it with new.\n      // Update the name of the selected topic first so the navigator doen't clear\n      // the state.\n      this.setState({topicSelected: newName}, () => {\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', newName));\n      });\n    }\n  }\n\n  handleTopicUpdateRequest(topicName, pub, priv, permissions) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const params = {};\n      if (pub) {\n        params.public = pub;\n      }\n      if (priv) {\n        params.private = (priv === Tinode.DEL_CHAR) ?\n          Tinode.DEL_CHAR : {comment: priv};\n      }\n      if (permissions) {\n        params.defacs = permissions;\n      }\n      topic.setMeta({desc: params}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleChangePermissions(topicName, mode, uid) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const am = topic.getAccessMode();\n      if (uid) {\n        am.updateGiven(mode);\n        mode = am.getGiven();\n      } else {\n        am.updateWant(mode);\n        mode = am.getWant();\n      }\n      topic.setMeta({sub: {user: uid, mode: mode}}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleTagsUpdated(topicName, tags) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      topic.setMeta({tags: tags}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleLogout() {\n    updateFavicon(0);\n\n    // Remove stored data.\n    localStorage.removeItem('auth-token');\n    localStorage.removeItem('firebase-token');\n    localStorage.removeItem('settings');\n    if (this.state.firebaseToken) {\n      this.fbPush.deleteToken(this.state.firebaseToken)\n    }\n\n    clearInterval(this.reconnectCountdown);\n\n    if (this.tinode) {\n      this.tinode.clearStorage();\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.setState(this.getBlankState());\n\n    this.tinode = TinodeWeb.tnSetup(this.state.serverAddress,\n      this.state.transport, this.props.intl.locale, LocalStorageUtil.getObject('keep-logged-in'));\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n    HashNavigation.navigateTo('');\n  }\n\n  handleDeleteAccount() {\n    this.tinode.delCurrentUser(true).then((ctrl) => {\n      this.handleLogout();\n    });\n  }\n\n  handleDeleteMessagesRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Request hard-delete all messages.\n    topic.delMessagesAll(true).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleLeaveUnsubRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.leave(true).then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleBlockTopicRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleReportTopic(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Publish spam report.\n    this.tinode.publish(Tinode.TOPIC_SYS, Tinode.Drafty.attachJSON(null, {\n      'action': 'report',\n      'target': topicName\n    }));\n\n    // Remove J and P permissions.\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleShowContextMenu(params, menuItems) {\n    this.setState({\n      contextMenuVisible: true,\n      contextMenuClickAt: {x: params.x, y: params.y},\n      contextMenuParams: params,\n      contextMenuItems: menuItems || this.defaultTopicContextMenu(params.topicName),\n      contextMenuBounds: ReactDOM.findDOMNode(this).getBoundingClientRect()\n    });\n  }\n\n  defaultTopicContextMenu(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n\n    let muted = false, blocked = false, self_blocked = false, subscribed = false, deleter = false, archived = false;\n    if (topic) {\n      subscribed = topic.isSubscribed();\n      archived = topic.isArchived();\n\n      const acs = topic.getAccessMode();\n      if (acs) {\n        muted = acs.isMuted();\n        blocked = !acs.isJoiner();\n        self_blocked = !acs.isJoiner('want');\n        deleter = acs.isDeleter();\n      }\n    }\n\n    return [\n      subscribed ? {\n        title: this.props.intl.formatMessage(messages.menu_item_info),\n        handler: this.handleShowInfoView\n      } : null,\n      subscribed ? 'messages_clear' : null,\n      subscribed && deleter ? 'messages_clear_hard' : null,\n      muted ? (blocked ? null : 'topic_unmute') : 'topic_mute',\n      self_blocked ? 'topic_unblock' : 'topic_block',\n      !archived ? 'topic_restore' : 'topic_archive',\n      'topic_delete'\n    ];\n  }\n\n  handleHideContextMenu() {\n    this.setState({\n      contextMenuVisible: false,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuBounds: null\n    });\n  }\n\n  handleContextMenuAction(action, promise, params) {\n    if (action == 'topic_archive') {\n      if (promise && params.topicName && params.topicName == this.state.topicSelected) {\n        promise.then(() => {\n          this.handleTopicSelected(null);\n        });\n      }\n    }\n  }\n\n  handleShowAlert(title, content, onConfirm, confirmText, onReject, rejectText) {\n    this.setState({\n      alertVisible: true,\n      alertParams: {\n        title: title,\n        content: content,\n        onConfirm: onConfirm,\n        confirm: confirmText,\n        onReject: onReject,\n        reject: rejectText\n      }\n    });\n  }\n\n  handleShowInfoView() {\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'info', true));\n    this.setState({showInfoPanel: true});\n  }\n\n  handleHideInfoView() {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'info'));\n    this.setState({showInfoPanel: false});\n  }\n\n  handleMemberUpdateRequest(topicName, added, removed) {\n    if (!topicName) {\n      return;\n    }\n\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    if (added && added.length > 0) {\n      added.map((uid) => {\n        topic.invite(uid, null).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n\n    if (removed && removed.length > 0) {\n      removed.map((uid) => {\n        topic.delSubscription(uid).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n  }\n\n  handleValidateCredentialsRequest(cred, code) {\n    if (this.tinode.isAuthenticated()) {\n      const me = this.tinode.getMeTopic();\n      me.setMeta({cred: {meth: cred, resp: code}})\n        .then(() => {\n          HashNavigation.navigateTo('');\n        })\n        .catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n    } else {\n      this.setState({credMethod: cred, credCode: code});\n      this.doLogin(null, null, {meth: cred, resp: code});\n    }\n  }\n\n  handlePasswordResetRequest(method, value) {\n    // If already connected, connnect() will return a resolved promise.\n    this.tinode.connect()\n      .then(() => {\n        return this.tinode.requestResetAuthSecret('basic', method, value);\n      })\n      .catch((err) => {\n        // Socket error\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleResetPassword(scheme, newPassword, token) {\n    token = base64ReEncode(token);\n    if (!token) {\n      this.handleError(this.props.intl.formatMessage(messages.invalid_security_token), 'err');\n    } else {\n      this.tinode.connect()\n        .then(() => {\n          return this.tinode.updateAccountBasic(null, null, newPassword, {token: token});\n        })\n        .catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"app-container\">\n        {this.state.contextMenuVisible ?\n          <ContextMenu\n            tinode={this.tinode}\n            bounds={this.state.contextMenuBounds}\n            clickAt={this.state.contextMenuClickAt}\n            params={this.state.contextMenuParams}\n            items={this.state.contextMenuItems}\n            hide={this.handleHideContextMenu}\n            onShowAlert={this.handleShowAlert}\n            onAction={this.handleContextMenuAction}\n            onTopicRemoved={(topicName) => {\n              if (topicName == this.state.topicSelected) {\n                this.handleTopicSelected(null);\n              }\n            }}\n            onError={this.handleError} />\n          :\n          null\n        }\n        <Alert\n          visible={this.state.alertVisible}\n          title={this.state.alertParams.title}\n          content={this.state.alertParams.content}\n          onReject={this.state.alertParams.onReject ? (() => { this.setState({alertVisible: false}); }) : null}\n          reject={this.state.alertParams.reject}\n          onConfirm={() => { this.setState({alertVisible: false}); this.state.alertParams.onConfirm(); }}\n          confirm={this.state.alertParams.confirm}\n          />\n        <SidepanelView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          displayMobile={this.state.displayMobile}\n          hideSelf={this.state.displayMobile && this.state.mobilePanel !== 'sidepanel'}\n          state={this.state.sidePanelSelected}\n          title={this.state.sidePanelTitle}\n          avatar={this.state.sidePanelAvatar}\n          trustedBadges={this.state.myTrustedBadges}\n          login={this.state.login}\n          persist={this.state.persist}\n          myUserId={this.state.myUserId}\n          loginDisabled={this.state.loginDisabled}\n          loadSpinnerVisible={this.state.loadSpinnerVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          topicSelected={this.state.topicSelected}\n          chatList={this.state.chatList}\n          credMethod={this.state.credMethod}\n          credCode={this.state.credCode}\n\n          transport={this.state.transport}\n          messageSounds={this.state.messageSounds}\n          desktopAlerts={this.state.desktopAlerts}\n          desktopAlertsEnabled={this.state.desktopAlertsEnabled}\n          incognitoMode={this.state.incognitoMode}\n          serverAddress={this.state.serverAddress}\n          serverVersion={this.state.serverVersion}\n\n          onGlobalSettings={this.handleGlobalSettings}\n          onSignUp={this.handleNewAccount}\n          onSettings={this.handleSettings}\n          onBasicNavigate={this.basicNavigator}\n          onLoginRequest={this.handleLoginRequest}\n          onPersistenceChange={this.handlePersistenceChange}\n          onCreateAccount={this.handleNewAccountRequest}\n          onUpdateAccount={this.handleUpdateAccountRequest}\n          onUpdateAccountTags={this.handleUpdateAccountTagsRequest}\n          onTogglePushNotifications={this.togglePushToken}\n          onToggleMessageSounds={this.handleToggleMessageSounds}\n          onToggleIncognitoMode={this.handleToggleIncognitoMode}\n          onCredAdd={this.handleCredAdd}\n          onCredDelete={this.handleCredDelete}\n          onCredConfirm={this.handleCredConfirm}\n          onTopicSelected={this.handleTopicSelected}\n          onCreateTopic={this.handleStartTopicRequest}\n          onLogout={this.handleLogout}\n          onDeleteAccount={this.handleDeleteAccount}\n          onShowAlert={this.handleShowAlert}\n          onCancel={this.handleSidepanelCancel}\n          onError={this.handleError}\n          onValidateCredentials={this.handleValidateCredentialsRequest}\n          onPasswordResetRequest={this.handlePasswordResetRequest}\n          onResetPassword={this.handleResetPassword}\n          onShowArchive={this.handleShowArchive}\n          onShowBlocked={this.handleShowBlocked}\n\n          onInitFind={this.tnInitFind}\n          searchResults={this.state.searchResults}\n          onSearchContacts={this.handleSearchContacts}\n\n          showContextMenu={this.handleShowContextMenu} />\n\n        <MessagesView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          ready={this.state.ready}\n          online={this.state.topicSelectedOnline}\n          acs={this.state.topicSelectedAcs}\n          displayMobile={this.state.displayMobile}\n          viewportWidth={this.state.viewportWidth}\n          viewportHeight={this.state.viewportHeight}\n          hideSelf={this.state.displayMobile &&\n            (this.state.mobilePanel !== 'topic-view' || this.state.showInfoPanel)}\n          topic={this.state.topicSelected}\n          myUserId={this.state.myUserId}\n          serverVersion={this.state.serverVersion}\n          serverAddress={this.state.serverAddress}\n          applicationVisible={this.state.applicationVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          newTopicParams={this.state.newTopicParams}\n\n          onHideMessagesView={this.handleHideMessagesView}\n          onData={this.tnData}\n          onError={this.handleError}\n          onNewTopicCreated={this.handleNewTopicCreated}\n          showContextMenu={this.handleShowContextMenu}\n          onChangePermissions={this.handleChangePermissions}\n          onNewChat={this.handleNewChatInvitation}\n          sendMessage={this.handleSendMessage} />\n\n        {this.state.showInfoPanel ?\n          <InfoView\n            tinode={this.tinode}\n            connected={this.state.connected}\n            displayMobile={this.state.displayMobile}\n            topic={this.state.topicSelected}\n            searchableContacts={this.state.searchableContacts}\n            myUserId={this.state.myUserId}\n\n            errorText={this.state.errorText}\n            errorLevel={this.state.errorLevel}\n            errorAction={this.state.errorAction}\n            errorActionText={this.state.errorActionText}\n\n            onTopicDescUpdate={this.handleTopicUpdateRequest}\n            onCancel={this.handleHideInfoView}\n            onShowAlert={this.handleShowAlert}\n            onChangePermissions={this.handleChangePermissions}\n            onMemberUpdateRequest={this.handleMemberUpdateRequest}\n            onDeleteMessages={this.handleDeleteMessagesRequest}\n            onLeaveTopic={this.handleLeaveUnsubRequest}\n            onBlockTopic={this.handleBlockTopicRequest}\n            onReportTopic={this.handleReportTopic}\n            onAddMember={this.handleManageGroupMembers}\n            onTopicTagsUpdate={this.handleTagsUpdated}\n            onInitFind={this.tnInitFind}\n            onError={this.handleError}\n\n            showContextMenu={this.handleShowContextMenu}\n            />\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(TinodeWeb);\n","// Put all packages together.\n// Used to generate umd/index.prod.js\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { IntlProvider } from 'react-intl';\n\nimport allMessages from './messages.json';\nimport TinodeWeb from './views/tinode-web.jsx';\nimport HashNavigation from './lib/navigation.js';\n\n// Detect human language to use in the UI:\n//  Check parameters from URL hash #?hl=ru, then browser, then use 'en' as a fallback.\nconst { params } = HashNavigation.parseUrlHash(window.location.hash);\nconst language = (params && params.hl) ||\n  (navigator.languages && navigator.languages[0]) ||\n  navigator.language ||\n  navigator.userLanguage ||\n  'en';\n\n// Get the base language 'en' from a more specific 'en_GB' or 'en-US' as a partial fallback.\nconst baseLanguage = language.toLowerCase().split(/[-_]/)[0];\n\n// Try the full locale first, then the locale without the region code, fallback to 'en'.\nconst messages =\n  allMessages[language] ||\n  allMessages[baseLanguage] ||\n  allMessages.en;\n\nReactDOM.render(\n  <React.StrictMode>\n    <IntlProvider locale={language} messages={messages} textComponent={React.Fragment}>\n      <TinodeWeb />\n    </IntlProvider>\n  </React.StrictMode>,\n  document.getElementById('mountPoint')\n);\n","// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// startup\n// Load entry module and return exports\n// This entry module doesn't tell about it's top-level declarations so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[163](0, __webpack_exports__, __webpack_require__);\n"],"sourceRoot":""}