{"version":3,"file":"index.prod.js","mappings":"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","sources":["webpack://tinode-webapp/external \"React\"","webpack://tinode-webapp/external \"ReactDOM\"","webpack://tinode-webapp/external \"ReactIntl\"","webpack://tinode-webapp/external \"firebase\"","webpack://tinode-webapp/external \"Tinode\"","webpack://tinode-webapp/external [\"firebase\",\"messaging\"]","webpack://tinode-webapp/./src/widgets/alert.jsx","webpack://tinode-webapp/./src/version.js","webpack://tinode-webapp/./src/config.js","webpack://tinode-webapp/./src/widgets/context-menu.jsx","webpack://tinode-webapp/./src/lib/strformat.js","webpack://tinode-webapp/./src/lib/utils.js","webpack://tinode-webapp/./src/widgets/letter-tile.jsx","webpack://tinode-webapp/./src/widgets/load-spinner.jsx","webpack://tinode-webapp/./src/widgets/avatar-upload.jsx","webpack://tinode-webapp/./src/widgets/badge-list.jsx","webpack://tinode-webapp/./src/widgets/checkbox.jsx","webpack://tinode-webapp/./src/widgets/contact-badges.jsx","webpack://tinode-webapp/./src/widgets/received-marker.jsx","webpack://tinode-webapp/./src/widgets/unread-badge.jsx","webpack://tinode-webapp/./src/lib/blob-helpers.js","webpack://tinode-webapp/./src/lib/formatters.js","webpack://tinode-webapp/./src/widgets/contact.jsx","webpack://tinode-webapp/./src/widgets/contact-action.jsx","webpack://tinode-webapp/./src/widgets/contact-list.jsx","webpack://tinode-webapp/./src/widgets/menu-cancel.jsx","webpack://tinode-webapp/./src/widgets/error-panel.jsx","webpack://tinode-webapp/./src/widgets/chip.jsx","webpack://tinode-webapp/./src/widgets/chip-input.jsx","webpack://tinode-webapp/./src/widgets/group-manager.jsx","webpack://tinode-webapp/./src/widgets/permissions-editor.jsx","webpack://tinode-webapp/./src/widgets/cropper.jsx","webpack://tinode-webapp/./src/widgets/avatar-crop.jsx","webpack://tinode-webapp/./src/widgets/visible-password.jsx","webpack://tinode-webapp/./src/widgets/in-place-edit.jsx","webpack://tinode-webapp/./src/widgets/tag-manager.jsx","webpack://tinode-webapp/./src/widgets/topic-desc-edit.jsx","webpack://tinode-webapp/./src/widgets/topic-common.jsx","webpack://tinode-webapp/./src/widgets/topic-security.jsx","webpack://tinode-webapp/./src/views/info-view.jsx","webpack://tinode-webapp/./src/widgets/file-progress.jsx","webpack://tinode-webapp/./src/widgets/attachment.jsx","webpack://tinode-webapp/./src/widgets/chat-message.jsx","webpack://tinode-webapp/./src/widgets/send-message.jsx","webpack://tinode-webapp/./src/widgets/doc-preview.jsx","webpack://tinode-webapp/./src/widgets/group-subs.jsx","webpack://tinode-webapp/./src/widgets/image-preview.jsx","webpack://tinode-webapp/./src/widgets/invitation.jsx","webpack://tinode-webapp/./src/views/logo-view.jsx","webpack://tinode-webapp/./src/widgets/uploading-image.jsx","webpack://tinode-webapp/./src/lib/navigation.js","webpack://tinode-webapp/./src/views/messages-view.jsx","webpack://tinode-webapp/./src/widgets/button-back.jsx","webpack://tinode-webapp/./src/widgets/menu-contacts.jsx","webpack://tinode-webapp/./src/widgets/menu-start.jsx","webpack://tinode-webapp/./src/widgets/side-navbar.jsx","webpack://tinode-webapp/./src/views/account-settings-view.jsx","webpack://tinode-webapp/./src/views/contacts-view.jsx","webpack://tinode-webapp/./src/lib/local-storage.js","webpack://tinode-webapp/./src/views/create-account-view.jsx","webpack://tinode-webapp/./src/views/acc-notifications-view.jsx","webpack://tinode-webapp/./src/views/acc-security-view.jsx","webpack://tinode-webapp/./src/views/acc-support-view.jsx","webpack://tinode-webapp/./src/views/login-view.jsx","webpack://tinode-webapp/./src/widgets/new-topic-by-id.jsx","webpack://tinode-webapp/./src/widgets/new-topic-group.jsx","webpack://tinode-webapp/./src/widgets/search-contacts.jsx","webpack://tinode-webapp/./src/views/new-topic-view.jsx","webpack://tinode-webapp/./src/views/password-reset-view.jsx","webpack://tinode-webapp/./src/widgets/host-selector.jsx","webpack://tinode-webapp/./src/views/settings-view.jsx","webpack://tinode-webapp/./src/views/validation-view.jsx","webpack://tinode-webapp/./src/views/sidepanel-view.jsx","webpack://tinode-webapp/./src/lib/host-name.js","webpack://tinode-webapp/./src/views/tinode-web.jsx","webpack://tinode-webapp/./src/index.js","webpack://tinode-webapp/webpack/bootstrap","webpack://tinode-webapp/webpack/runtime/compat get default export","webpack://tinode-webapp/webpack/runtime/define property getters","webpack://tinode-webapp/webpack/runtime/hasOwnProperty shorthand","webpack://tinode-webapp/webpack/startup"],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = React;","const __WEBPACK_NAMESPACE_OBJECT__ = ReactDOM;","const __WEBPACK_NAMESPACE_OBJECT__ = ReactIntl;","const __WEBPACK_NAMESPACE_OBJECT__ = firebase;","const __WEBPACK_NAMESPACE_OBJECT__ = Tinode;","const __WEBPACK_NAMESPACE_OBJECT__ = firebase.messaging;","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Alert extends React.PureComponent {\n  render() {\n    return this.props.visible ?\n      <div className=\"alert-container\">\n        <div className=\"alert\">\n          <div className=\"title\">{this.props.title}</div>\n          <div className=\"content\">{this.props.content}</div>\n          <div className=\"dialog-buttons\">\n            {this.props.onReject ?\n              <button className=\"outline\" onClick={this.props.onReject}>\n                {this.props.reject || <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />}\n              </button>\n              :\n              null\n            }\n            <button className=\"primary\" onClick={this.props.onConfirm}>\n              {this.props.confirm || <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\"  />}\n            </button>\n          </div>\n        </div>\n      </div>\n    :\n    null;\n  }\n};\n","// This is a generated file. Don't edit.\n\nexport const PACKAGE_VERSION = \"0.18.0-alpha1\";\n","import { PACKAGE_VERSION } from './version.js';\n\n// Name of this application, used in the User-Agent.\nexport const APP_NAME = 'TinodeWeb/' + (PACKAGE_VERSION || '0.17');\n\n// API key. Use https://github.com/tinode/chat/tree/master/keygen to generate your own\nexport const API_KEY = 'AQEAAAABAAD_rAp4DJh05a1HAwFT3A6K';\n\n// The array of possible hosts to connect to.\nexport const KNOWN_HOSTS = {hosted: 'web.tinode.co', local: 'localhost:6060'};\n\n// Default host name and port to connect to.\nexport const DEFAULT_HOST = KNOWN_HOSTS.hosted;\n\n// Enable console logging.\nexport const LOGGING_ENABLED = true;\n\n// Minimum time between two keypress notifications, milliseconds.\nexport const KEYPRESS_DELAY = 3*1000;\n// Delay before sending a {note} for reciving a message, milliseconds.\nexport const RECEIVED_DELAY = 500;\n// Delay before sending a read notification, milliseconds.\nexport const READ_DELAY = 1000;\n\n// The default shortest allowed tag length. Matches the value on the server.\nexport const MIN_TAG_LENGTH = 2;\n// The default greatest allowed tag length. Matches the value on the server.\nexport const MAX_TAG_LENGTH = 96;\n// The default maximum number of tags allowed. Matches the value on the server.\nexport const MAX_TAG_COUNT = 16;\n\n// Access mode for P2P subscriptions initiated by the current user.\nexport const DEFAULT_P2P_ACCESS_MODE = 'JRWPS';\n// Access mode for new group topics created by the current user.\nexport const NEW_GRP_ACCESS_MODE = 'JRWPSAO';\n// Access mode for a channel.\nexport const CHANNEL_ACCESS_MODE = 'JR';\n\n// Access mode for no access.\nexport const NO_ACCESS_MODE = 'N';\n\n// Mediaquery breakpoint between desktop and mobile, in px. Should match the value\n// in @media (max-size: 640px) in base.css\nexport const MEDIA_BREAKPOINT = 640;\n// Size of css 'rem' unit in pixels. Default 1rem = 10pt = 13px.\nexport const REM_SIZE = 13;\n\n// Size of the avatar image: when image dimensions are greater or the image is not square, it's resized to\n// a square of this size or less.\nexport const AVATAR_SIZE = 384;\n\n// Maximum size of an avatar in bytes for sending in-band. Bigger avatars will be sent out of band (as uploads).\nexport const MAX_AVATAR_BYTES = 4096;\n\n// Size of the broken_image shown in MessagesView\nexport const BROKEN_IMAGE_SIZE = 32;\n\n// Number of chat messages to fetch in one call.\nexport const MESSAGES_PAGE = 24;\n\n// Default maximum in-band (included directly into the message) attachment size which fits into\n// a message of 256K in size. Used when the server-provided value is unavailable. The actual\n// binary size of the attachment should be smaller due to base64 encoding expansion and some overhead,\n// for instance 1024 bytes.\n// Increase this limit to a greater value in production, if desired. Also increase\n// max_message_size in the server config.\nexport const MAX_INBAND_ATTACHMENT_SIZE = 262144;\n\n// Default absolute maximum attachment size to be used with the server = 8MB.\n// Used when the server-provided value is unavailable. Increase to something like 100MB in production.\nexport const MAX_EXTERN_ATTACHMENT_SIZE = 1 << 23;\n\n// Maximum allowed linear dimension (pixels) of an image sent inline. Larger images will be shrunk\n// to make the larger dimension fit under this size. You may want to adjust it to 1600 or\n// 2400 for production.\nexport const MAX_IMAGE_DIM = 1024;\n\n// Linear dimensions of image preview: shrink image under this size for previews.\nexport const IMAGE_PREVIEW_DIM = 64;\n\n// Linear dimensions of image thumbnail: shrink image under this size for thumbnails in reply quote previews.\nexport const IMAGE_THUMBNAIL_DIM = 36;\n\n// Maximum number of online users to be shown in a topic title bar. Others will be\n// hidden under \"+X more\"\nexport const MAX_ONLINE_IN_TOPIC = 4;\n\n// Maximum length of user name, topic title, and private comment.\nexport const MAX_TITLE_LENGTH = 60;\n// Maximum length of topic description.\nexport const MAX_TOPIC_DESCRIPTION_LENGTH = 360;\n\n// Length of message previews in chat list, in characters.\nexport const MESSAGE_PREVIEW_LENGTH = 80;\n\n// Link for \"Contact Us\".\nexport const LINK_CONTACT_US = 'email:support@tinode.co';\n\n// Link to Privacy Policy.\nexport const LINK_PRIVACY_POLICY = 'https://tinode.co/privacy.html';\n\n// Link to Terms of Service.\nexport const LINK_TERMS_OF_SERVICE = 'https://tinode.co/terms.html';\n","// Context Menu: popup/dropdown menu.\nimport React from 'react';\nimport { injectIntl, defineMessages } from 'react-intl';\n\nimport { REM_SIZE } from '../config.js';\n\nconst messages = defineMessages({\n  info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  },\n  clear_messages: {\n    id: 'menu_item_clear_messages',\n    defaultMessage: 'Clear messages',\n    description: 'Delete all messages'\n  },\n  clear_for_all: {\n    id: 'menu_item_clear_messages_for_all',\n    defaultMessage: 'Clear for All',\n    description: 'Delete all message(s) for all members'\n  },\n  delete: {\n    id: 'menu_item_delete',\n    defaultMessage: 'Delete',\n    description: 'Delete selected messages'\n  },\n  delete_for_all: {\n    id: 'menu_item_delete_for_all',\n    defaultMessage: 'Delete for All',\n    description: 'Delete selected message(s) for all members'\n  },\n  send_retry: {\n    id: 'menu_item_send_retry',\n    defaultMessage: 'Retry',\n    description: 'Retry sending message'\n  },\n  mute: {\n    id: 'menu_item_mute',\n    defaultMessage: 'Mute',\n    description: 'Turn off notifications'\n  },\n  unmute: {\n    id: 'menu_item_unmute',\n    defaultMessage: 'Unmute',\n    description: 'Turn notifications on'\n  },\n  reply: {\n    id: 'menu_item_reply',\n    defaultMessage: 'Reply',\n    description: 'Reply to message'\n  },\n  topic_delete: {\n    id: 'menu_item_delete_topic',\n    defaultMessage: 'Delete',\n    description: 'Delete entire topic'\n  },\n  topic_delete_warning: {\n    id: 'topic_delete_warning',\n    defaultMessage: 'Are you sure you want to delete this conversation? It cannot be undone.',\n    description: 'Alert warning when deleting entire topic'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  unblock: {\n    id: 'menu_item_unblock',\n    defaultMessage: 'Unblock',\n    description: 'Unblock topic or user'\n  },\n  // Generic string suitable for either topic or user.\n  block: {\n    id: 'menu_item_block',\n    defaultMessage: 'Block',\n    description: 'Block topic or user'\n  },\n  topic_block_warning: {\n    id: 'topic_block_warning',\n    defaultMessage: 'Are you sure you want to block this conversation?',\n    description: 'Alert warning when blocking a topic.'\n  },\n  member_delete: {\n    id: 'menu_item_member_delete',\n    defaultMessage: 'Remove',\n    description: 'Remove user from topic'\n  },\n  archive: {\n    id: 'menu_item_archive_topic',\n    defaultMessage: 'Archive',\n    description: 'Move topic from the list of active chats to archive'\n  },\n  unarchive: {\n    id: 'menu_item_restore_topic',\n    defaultMessage: 'Restore',\n    description: 'Restore topic from archive'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n});\n\nclass ContextMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selfRef = React.createRef();\n\n    const {formatMessage} = props.intl;\n\n    this.handlePageClick = this.handlePageClick.bind(this);\n    this.handleEscapeKey = this.handleEscapeKey.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n\n    // Preconfigured menu items.\n    this.MenuItems = {\n      'topic_info': {\n        id: 'topic_info',\n        title: formatMessage(messages.info),\n        handler: null\n      },\n      'messages_clear': {\n        id: 'messages_clear',\n        title: formatMessage(messages.clear_messages),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.clear_messages), // title\n            formatMessage(messages.clear_messages_warning), // content\n            (() => { this.deleteMessages(true, false, params, errorHandler); }), // onConfirm\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'messages_clear_hard': {\n        id: 'messages_clear_hard',\n        title: formatMessage(messages.clear_for_all),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.clear_for_all), // title\n            formatMessage(message.delete_messages_warning), // content\n            (() => { return this.deleteMessages(true, true, params, errorHandler); }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'message_delete': {\n        id: 'message_delete',\n        title: formatMessage(messages.delete),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, false, params, errorHandler);\n        }\n      },\n      'message_delete_hard': {\n        id: 'message_delete_hard',\n        title: formatMessage(messages.delete_for_all),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, true, params, errorHandler);\n        }\n      },\n      'menu_item_send_retry': {\n        id: 'menu_item_send_retry',\n        title: formatMessage(messages.send_retry),\n        handler: (params, errorHandler) => {\n          return this.retryMessage(params, errorHandler);\n        }\n      },\n      'menu_item_reply': {\n        id: 'menu_item_reply',\n        title: formatMessage(messages.reply),\n        handler: (params, errorHandler) => {\n          return this.replyToMessage(params, errorHandler);\n        }\n      },\n      'topic_unmute': {\n        id: 'topic_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'topic_mute': {\n        id: 'topic_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'topic_unblock': {\n        id: 'topic_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n      'topic_block': {\n        id: 'topic_block',\n        title: formatMessage(messages.block),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.block), // title\n            formatMessage(messages.topic_block_warning), // content\n            (() => {\n              return this.topicPermissionSetter('-JP', params, errorHandler).then((ctrl) => {\n                this.props.onTopicRemoved(params.topicName);\n                return ctrl;\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_delete': {\n        id: 'topic_delete',\n        title: formatMessage(messages.topic_delete),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.topic_delete), // title\n            formatMessage(messages.topic_delete_warning), // content\n            (() => {\n              const topic = this.props.tinode.getTopic(params.topicName);\n              if (!topic) {\n                console.log(\"Topic not found: \", params.topicName);\n                return;\n              }\n              return topic.delTopic(true).catch((err) => {\n                if (errorHandler) {\n                  errorHandler(err.message, 'err');\n                }\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_archive': {\n        id: 'topic_archive',\n        title: formatMessage(messages.archive),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic) {\n            console.log(\"Topic not found: \", params.topicName);\n            return;\n          }\n          return topic.archive(true).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      'topic_restore': {\n        id: 'topic_restore',\n        title: formatMessage(messages.unarchive),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic) {\n            console.log(\"Topic not found: \", params.topicName);\n            return;\n          }\n          return topic.archive(false).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      // menu_item_edit_permissions is defined elsewhere.\n      'permissions': {\n        id: 'permissions',\n        title: formatMessage(messages.edit_permissions),\n        handler: null\n      },\n      'member_delete': {\n        id: 'member_delete',\n        title: formatMessage(messages.member_delete),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic || !params.user) {\n            console.log(\"Topic or user not found: '\" + params.topicName + \"', '\" + params.user + \"'\");\n            return;\n          }\n          return topic.delSubscription(params.user).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      'member_mute': {\n        id: 'member_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'member_unmute': {\n        id: 'member_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'member_block': {\n        id: 'member_block',\n        title: formatMessage(messages.block),\n        handler: this.topicPermissionSetter.bind(this, '-JP')\n      },\n      'member_unblock': {\n        id: 'member_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handlePageClick, false);\n    document.addEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handlePageClick, false);\n    document.removeEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  handlePageClick(e) {\n    if (this.selfRef.current.contains(e.target)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n  }\n\n  handleEscapeKey(e) {\n    if (e.keyCode === 27) {\n      this.props.hide();\n    }\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n    let item = this.props.items[e.currentTarget.dataset.id];\n    if (typeof item == 'string') {\n      item = this.MenuItems[item];\n    }\n\n    if (!item) {\n      console.error(\"Invalid menu item ID\", e.currentTarget.dataset.id);\n    } else {\n      this.props.onAction(\n        item.id,\n        item.handler(this.props.params, this.props.onError),\n        this.props.params);\n    }\n  }\n\n  // Menu Actions\n\n  deleteMessages(all, hard, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found: \", params.topicName);\n      return;\n    }\n\n    // We don't know if the message is still pending (e.g. attachment is being uploaded),\n    // so try cancelling first. No harm if we can't cancel.\n    // The message can be cancelled if transmission to the server has not\n    // started yet or if the message send has failed.\n    if (!all && topic.cancelSend(params.seq)) {\n      return;\n    }\n    // Can't cancel. Delete instead.\n    const promise = all ?\n      topic.delMessagesAll(hard) :\n      topic.delMessagesList([params.seq], hard);\n\n    return promise.catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Retries sending failed message.\n  retryMessage(params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    // Remove the existing message entry.\n    if (!topic || !topic.flushMessage(params.seq)) {\n      return;\n    }\n    const msg = topic.createMessage(params.content, false);\n    return topic.publishDraft(msg).catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Function is used by context menu to set permissions.\n  topicPermissionSetter(mode, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found\", params.topicName);\n      return;\n    }\n\n    let result = topic.updateMode(params.user, mode);\n    if (errorHandler) {\n      result = result.catch((err) => {\n        errorHandler(err.message, 'err');\n      });\n    }\n    return result;\n  }\n\n  replyToMessage(params, errorHandler) {\n    params.pickReply(params.seq, params.content, errorHandler);\n  }\n\n  render() {\n    const menu = [];\n    let count = 0;\n    this.props.items.map((item) => {\n      if (typeof item == 'string') {\n        item = this.MenuItems[item];\n      }\n      if (item && item.title) {\n        menu.push(\n          item.title == '-' ?\n            <li className=\"separator\" key={count} />\n            :\n            <li onClick={this.handleClick} data-id={count} key={count}>{item.title}</li>\n        );\n      }\n      count++;\n    });\n\n    // Ensure that menu is inside the app-container.\n    const hSize = 12 * REM_SIZE;\n    const vSize = REM_SIZE * (0.7 + menu.length * 2.5);\n    const left = (this.props.bounds.right - this.props.clickAt.x < hSize) ?\n        (this.props.clickAt.x - this.props.bounds.left - hSize) :\n        (this.props.clickAt.x - this.props.bounds.left);\n    const top = (this.props.bounds.bottom - this.props.clickAt.y < vSize) ?\n        (this.props.clickAt.y - this.props.bounds.top - vSize) :\n        (this.props.clickAt.y - this.props.bounds.top);\n\n    const position = {\n      left: left + 'px',\n      top: top + 'px'\n    };\n\n    return (\n      <ul className=\"menu\" style={position} ref={this.selfRef}>\n        {menu}\n      </ul>\n    );\n  }\n}\n\nexport default injectIntl(ContextMenu);\n","// Short representation of time in the past.\nexport function shortDateFormat(then, locale) {\n  locale = locale || window.navigator.userLanguage || window.navigator.language;\n  const now = new Date();\n  if (then.getFullYear() == now.getFullYear()) {\n    // Same year.\n    if (then.getMonth() == now.getMonth() && then.getDate() == now.getDate()) {\n      // Same month and day, show time only.\n      return then.toLocaleTimeString(locale, {hour12: false, hour: '2-digit', minute: '2-digit'});\n    }\n    // Different month and/or day, show month day, time.\n    return then.toLocaleDateString(locale,\n      {hour12: false, month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit'});\n  }\n  // Different year: just show the date.\n  return then.toLocaleDateString(locale, {year: 'numeric', month: 'short', day: 'numeric'});\n}\n\n// Convert seconds to minutes:seconds, i.e. 156 sec -> 2:36.\nexport function secondsToTime(seconds) {\n  const min = Math.floor(seconds / 60);\n  let sec = seconds % 60;\n  sec = sec < 10 ? `0${sec}` : sec;\n  return `${min}:${sec}`;\n}\n\n// Convert a number of bytes to human-readable format.\nexport function bytesToHumanSize(bytes) {\n  if (!bytes || bytes == 0) {\n    return '0 Bytes';\n  }\n\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n  const bucket = Math.min(Math.floor(Math.log2(bytes) / 10) | 0, sizes.length-1);\n  const count = bytes / Math.pow(1024, bucket);\n  const round = bucket > 0 ? (count < 3 ? 2 : (count < 30 ? 1 : 0)) : 0;\n  return count.toFixed(round) + ' ' + sizes[bucket];\n}\n\n// Get 32 bit integer hash value for a string. Ideally it should produce the same value\n// as Java's String#hash().\nfunction stringToColorHash(value) {\n  let hash = 0;\n  value = '' + value;\n  for (let i = 0; i < value.length; i++) {\n    hash = ((hash << 5) - hash) + value.charCodeAt(i);\n    hash = hash & hash; // Convert to 32bit integer\n  }\n  return hash;\n}\n\n// User avatar letter color id.\nexport function letterTileColorId(userId) {\n  return Math.abs(stringToColorHash(userId)) % 16;\n}\n\n// Converts user or topic ID to a CSS color class. Ideally it should produce the same color value as Java version.\n// params:\n// - {string} id: user or topic ID\n// - {boolean} light: light or dark version of the color.\n// - {boolean} fg: foreground (text) or background color.\nexport function idToColorClass(id, light, fg) {\n  return (light ? 'lt-' : 'dk-') + (fg ? 'fg-' : 'bg-') + letterTileColorId(id);\n}\n","// Odds and ends\n\nimport Tinode from 'tinode-sdk';\n\n// Make shortcut icon appear with a green dot + show unread count in title.\nexport function updateFavicon(count) {\n  const oldIcon = document.getElementById('shortcut-icon');\n  const head = document.head || document.getElementsByTagName('head')[0];\n  const newIcon = document.createElement('link');\n  newIcon.type = 'image/png';\n  newIcon.id = 'shortcut-icon';\n  newIcon.rel = 'shortcut icon';\n  newIcon.href = 'img/logo32x32' + (count > 0 ? 'a' : '') + '.png';\n  if (oldIcon) {\n    head.removeChild(oldIcon);\n  }\n  head.appendChild(newIcon);\n\n  document.title = (count > 0 ? '('+count+') ' : '') + 'Tinode';\n}\n\n// Create theCard which represents user's or topic's \"public\" info.\nexport function theCard(fn, imageUrl, imageMimeType, note) {\n  let card = null;\n  fn = fn && fn.trim();\n  note = note && note.trim();\n\n  if (fn) {\n    card = {\n      fn: fn\n    };\n  }\n\n  if (typeof note == 'string') {\n    card = card || {};\n    card.note = note ? note : Tinode.DEL_CHAR;\n  }\n\n  if (imageUrl) {\n    card = card || {};\n    let mimeType = imageMimeType;\n    // Is this a data URL \"data:[<mediatype>][;base64],<data>\"?\n    const matches = /^data:(image\\/[-a-z0-9+.]+)?(;base64)?,/i.exec(imageUrl);\n    if (matches) {\n      mimeType = matches[1];\n      card.photo = {\n        data: imageUrl.substring(imageUrl.indexOf(',') + 1),\n        ref: Tinode.DEL_CHAR\n      };\n    } else {\n      card.photo = {\n        data: Tinode.DEL_CHAR,\n        ref: imageUrl\n      };\n    }\n    card.photo.type = (mimeType || 'image/jpeg').substring('image/'.length);\n  }\n\n  return card;\n}\n\n// Deep-shallow compare two arrays: shallow compare each element.\nexport function arrayEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (!Array.isArray(a) || !Array.isArray(b)) {\n    return false;\n  }\n\n  // Compare lengths first.\n  if (a.length != b.length) {\n    return false;\n  }\n  // Order of elements is ignored.\n  a.sort();\n  b.sort();\n  for (let i = 0, l = a.length; i < l; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Checks (loosely) if the given string is a phone. If so, returns the phone number in a format\n// as close to E.164 as possible.\nexport function asPhone(val) {\n  val = val.trim();\n  if (/^(?:\\+?(\\d{1,3}))?[- (.]*(\\d{3})[- ).]*(\\d{3})[- .]*(\\d{2})[- .]*(\\d{2})?$/.test(val)) {\n    return val.replace(/[- ().]*/, '');\n  }\n  return null;\n}\n\n// Checks (loosely) if the given string is an email. If so returns the email.\nexport function asEmail(val) {\n  val = val.trim();\n  if (/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(val)) {\n    return val;\n  }\n  return null;\n}\n\n// Checks if URL is a relative url, i.e. has no 'scheme://', including the case of missing scheme '//'.\n// The scheme is expected to be RFC-compliant, e.g. [a-z][a-z0-9+.-]*\n// example.html - ok\n// https:example.com - not ok.\n// http:/example.com - not ok.\n// ' ↲ https://example.com' - not ok. (↲ means carriage return)\nexport function isUrlRelative(url) {\n  return url && !/^\\s*([a-z][a-z0-9+.-]*:|\\/\\/)/im.test(url);\n}\n\n// Ensure URL does not present an XSS risk. Optional allowedSchemes may contain an array of\n// strings with permitted URL schemes, such as ['ftp', 'ftps']; otherwise accept http and https only.\nexport function sanitizeUrl(url, allowedSchemes) {\n  if (typeof url != 'string') {\n    return url;\n  }\n\n  // Strip control characters and whitespace. They are not valid URL characters anyway.\n  url = url.replace(/[^\\x20-\\x7E]/gmi, '').trim();\n\n  // Relative URLs are safe.\n  // Relative URL does not start with ':', abcd123: or '//'.\n  if (!/^([a-z][a-z0-9+.-]*:|\\/\\/)/i.test(url)) {\n    return url;\n  }\n\n  // Blob URLs are safe.\n  if (/^blob:http/.test(url)) {\n    return url;\n  }\n\n  // Absolute URL. Accept only safe schemes, or no scheme.\n  const schemes = Array.isArray(allowedSchemes) ? allowedSchemes.join('|') : 'http|https';\n  const re = new RegExp('^((' + schemes + '):|//)', 'i');\n  if (!re.test(url)) {\n    return null;\n  }\n\n  return url;\n}\n\n// Ensure URL is suitable for <img src=\"url\"> field: the URL must be a relative URL or\n// have http:, https:, blob: or data: scheme.\n// In case of data: scheme, the URL must start with a 'data:image/XXXX;base64,'.\nexport function sanitizeImageUrl(url) {\n  if (!url) {\n    return null;\n  }\n\n  const sanitizedUrl = sanitizeUrl(url);\n  if (sanitizedUrl) {\n    return sanitizedUrl;\n  }\n\n  // Is this a data: URL of an image?\n  if (/data:image\\/[a-z0-9.-]+;base64,/i.test(url.trim())) {\n    return url;\n  }\n\n  return null;\n}\n\n// Given message's received status, return name and color of a delivery indicator icon.\nexport function deliveryMarker(received) {\n  switch (received) {\n    case Tinode.MESSAGE_STATUS_SENDING:\n      return { name: 'access_time' }; // watch face\n    case Tinode.MESSAGE_STATUS_FAILED:\n      return { name: 'warning', color: 'danger-color' }; // yellow icon /!\\\n    case Tinode.MESSAGE_STATUS_SENT:\n      return { name: 'done' }; // checkmark\n    case Tinode.MESSAGE_STATUS_RECEIVED:\n      return { name: 'done_all' }; // double checkmark\n    case Tinode.MESSAGE_STATUS_READ:\n      return { name: 'done_all', color: 'blue' }; // blue double checkmark\n  }\n  return null;\n}\n","import React from 'react';\n\nimport Tinode from 'tinode-sdk';\n\nimport { idToColorClass } from '../lib/strformat.js';\nimport { sanitizeImageUrl } from '../lib/utils.js';\n\nexport default class LetterTile extends React.PureComponent {\n  render() {\n    let avatar;\n    if (this.props.avatar === true) {\n      const isGroup = (Tinode.topicType(this.props.topic) == 'grp');\n      const iconColor = idToColorClass(this.props.topic, isGroup);\n      if (this.props.topic && this.props.title && this.props.title.trim()) {\n        const letter = this.props.title.trim().charAt(0);\n        const className = 'lettertile ' + iconColor;\n        avatar = (<div className={className}><div>{letter}</div></div>)\n      } else {\n        const className = 'material-icons ' + iconColor;\n        avatar = isGroup ?\n          <i className={className}>group</i> : <i className={className}>person</i>;\n      }\n    } else if (this.props.avatar) {\n      const url = this.props.tinode.authorizeURL(sanitizeImageUrl(this.props.avatar));\n      // If avatar image is invalid, show a placeholder.\n      avatar = <img className=\"avatar\" alt=\"avatar\" src={url}\n        onError={(e)=>{e.target.onerror = null; e.target.src=\"../img/broken_image.png\"}} />;\n    } else {\n      avatar = null;\n    }\n    return avatar;\n  }\n}\n","import React from 'react';\n\nexport default class LoadSpinner extends React.PureComponent {\n  render() {\n    const className = 'load-spinner-box' + (this.props.large ? ' large' : '')\n      + (this.props.clear ? ' clear' : '') + (this.props.centered ? ' centered' : '');\n    return (this.props.show ?\n      <div className={className}><div className=\"loader-spinner\"></div></div> : null);\n  }\n}\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\nimport LoadSpinner from './load-spinner.jsx';\n\nimport { sanitizeImageUrl } from '../lib/utils.js';\n\nimport { AVATAR_SIZE } from '../config.js';\n\nexport default class AvatarUpload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      source: props.avatar\n    };\n\n    this.handleFileReceived = this.handleFileReceived.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.avatar != prevProps.avatar) {\n      this.setState({source: this.props.avatar});\n    }\n  }\n\n  handleFileReceived(e) {\n    const image = e.target.files[0];\n    this.props.onImageUpdated(image.type, URL.createObjectURL(image), image.name);\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  render() {\n    // Randomize id value in case more than one AvatarUpload is shown\n    // at the same time.\n    const randId = 'file-input-avatar-' + (Math.random() + '').substr(2);\n    const className = 'avatar-upload' + (this.props.readOnly ? ' read-only' : '');\n    return (\n      <div className={className}>\n        {this.props.readOnly || !this.state.source ?\n          null :\n          <a href=\"#\" className=\"clear-avatar\" onClick={(e) => {e.preventDefault(); this.props.onImageUpdated();}}>\n            <i className=\"material-icons\">clear</i>\n          </a>}\n        {this.state.source ?\n          <img src={this.props.tinode.authorizeURL(sanitizeImageUrl(this.state.source))} className=\"preview\" /> :\n          this.props.readOnly && this.props.uid ?\n            <div className=\"avatar-box\">\n              <LetterTile\n                tinode={this.props.tinode}\n                avatar={true}\n                topic={this.props.uid}\n                title={this.props.title} />\n            </div>\n            :\n            <div className=\"blank\">{AVATAR_SIZE}&times;{AVATAR_SIZE}</div>}\n        {this.props.readOnly ? null :\n          <input type=\"file\" id={randId} className=\"inputfile hidden\"\n            accept=\"image/*\" onChange={this.handleFileReceived} />}\n        {this.props.readOnly ? null :\n        <label htmlFor={randId} className=\"round\">\n          <i className=\"material-icons\">file_upload</i>\n        </label>}\n        <LoadSpinner show={this.props.uploading} large={true} clear={true} centered={true} />\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nconst icon_mapping = {'staff': 'verified_user'};\n\nconst messages = defineMessages({\n  badge_verified: {\n    id: 'badge_verified',\n    defaultMessage: 'Verified/official',\n    description: 'Explanation of a verified account or topic badge'\n  },\n  badge_staff: {\n    id: 'badge_staff',\n    defaultMessage: 'Staff-managed',\n    description: 'Explanation of a staff-managed account or topic badge'\n  },\n  badge_danger: {\n    id: 'badge_danger',\n    defaultMessage: 'Untrustworthy',\n    description: 'Suspicious or untrustworthy account or topic badge'\n  },\n});\n\n\n/* Trusted badges with labels: verified, staff, danger */\nclass BadgeList extends React.PureComponent {\n  render() {\n    const {formatMessage} = this.props.intl;\n    let badges = null;\n    if (this.props.trustedBadges && this.props.trustedBadges.length > 0) {\n      badges = [];\n      this.props.trustedBadges.map((b) => {\n        const comment = formatMessage(messages['badge_' + b]);\n        const style = 'material-icons ' + b + '-color';\n        badges.push(<div className=\"trusted-badge\" key={b}><i className={style}>{icon_mapping[b] || b}</i> {comment}</div>);\n      });\n      return <>{badges}</>;\n    }\n    return null;\n  }\n};\n\nexport default injectIntl(BadgeList);\n","import React from 'react';\n\n/* BEGIN CheckBox: styled checkbox */\nexport default class CheckBox extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange() {\n    this.props.onChange(this.props.name, !this.props.checked);\n  }\n\n  render() {\n    return (\n      this.props.onChange ? (\n        this.props.checked === true ?\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box</i> :\n        this.props.checked === false ?\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box_outline_blank</i> :\n          <i className=\"material-icons lt-blue\">indeterminate_check_box</i>\n        ) : (\n          this.props.checked ?\n            <i className=\"material-icons\">check_box</i> :\n            <i className=\"material-icons\">check_box_outline_blank</i>\n        )\n    );\n  }\n}\n/* END CheckBox */\n","import React from 'react';\n\nconst icon_mapping = {'muted': 'notifications_off', 'banned': 'block', 'staff': 'verified_user'};\n\n/* Contact's labels: [you], or icons [muted], [blocked] */\nexport default class ContactBadges extends React.PureComponent {\n  render() {\n    let badges = null;\n    if (this.props.badges && this.props.badges.length > 0) {\n      badges = [];\n      this.props.badges.map((b) => {\n        const color = (b.color ? ' ' + b.color : '');\n        if (b.icon) {\n          badges.push(<i className={'material-icons as-badge' + color} key={b.key || b.icon}>{icon_mapping[b.icon] || b.icon}</i>);\n        } else {\n          badges.push(<span className={'badge' + color} key={b.key || b.name}>{b.name}</span>);\n        }\n      });\n      return <>{badges}</>;\n    }\n    return null;\n  }\n};\n","// Received/read indicator.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { shortDateFormat } from '../lib/strformat.js';\nimport { deliveryMarker } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  message_sending: {\n    id: 'message_sending',\n    defaultMessage: 'sending...',\n    description: 'Message being sent, in place of time stamp'\n  },\n  message_sending_failed: {\n    id: 'message_sending_failed',\n    defaultMessage: 'failed',\n    description: 'Failed to send message, in place of time stamp'\n  }\n});\n\nclass ReceivedMarker extends React.PureComponent {\n  render() {\n    const {formatMessage} = this.props.intl;\n    let timestamp;\n    if (this.props.received <= Tinode.MESSAGE_STATUS_SENDING) {\n      timestamp = formatMessage(messages.message_sending);\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_FAILED) {\n      timestamp = formatMessage(messages.message_sending_failed);\n    } else {\n      timestamp = shortDateFormat(this.props.timestamp, this.props.intl.locale);\n    }\n\n    const icon = deliveryMarker(this.props.received);\n    const marker = icon ? <i className={'material-icons small ' + icon.color}>{icon.name}</i> : null;\n\n    return (\n      <span className=\"timestamp\">\n        {timestamp}{'\\u00a0'}{marker}\n      </span>\n    );\n  }\n};\n\nexport default injectIntl(ReceivedMarker);\n","// The counter of unread messages in the topic.\nimport React from 'react';\n\nexport default class UnreadBadge extends React.PureComponent {\n  render() {\n    return (this.props.count > 0 ?\n      <span className=\"unread\">{this.props.count > 9 ? \"9+\" : this.props.count}</span>\n      : null);\n  }\n};\n","// File and image helper functions.\nimport { MAX_INBAND_ATTACHMENT_SIZE, MAX_IMAGE_DIM } from '../config.js';\nimport { bytesToHumanSize } from './strformat.js'\n\n// Supported image MIME types and corresponding file extensions.\nexport const SUPPORTED_IMAGE_FORMATS = ['image/jpeg', 'image/gif', 'image/png', 'image/svg', 'image/svg+xml'];\nexport const MIME_EXTENSIONS         = ['jpg',        'gif',       'png',       'svg',       'svg'];\n\n// Get an URL from a theCard photo: either create a data: URL or return reference URL.\nexport function makeImageUrl(photo) {\n  if (photo && typeof photo == 'object') {\n    if (photo.data && photo.type) {\n      const mime = photo.type.startsWith('image/') ? photo.type : ('image/' + photo.type);\n      return 'data:' + mime + ';base64,' + photo.data;\n    }\n    return photo.ref;\n  }\n  return null;\n}\n\n// Calculate linear dimensions for scaling image down to fit under a certain size.\n// Returns an object which contains destination sizes, source sizes, and offsets\n// into source (when making square images).\nexport function fitImageSize(width, height, maxWidth, maxHeight, forceSquare) {\n  // Sanitize input\n  width = width | 0;\n  height = height | 0;\n  maxWidth = maxWidth | 0;\n  maxHeight = maxHeight | 0;\n\n  if (width <= 0 || height <= 0 || maxWidth <= 0 || maxHeight <= 0) {\n    return null;\n  }\n\n  if (forceSquare) {\n    maxWidth = maxHeight = Math.min(maxWidth, maxHeight);\n  }\n\n  const scale = Math.min(\n    Math.min(width, maxWidth) / width,\n    Math.min(height, maxHeight) / height\n  );\n\n  const size = {\n    dstWidth: (width * scale) | 0,\n    dstHeight: (height * scale) | 0,\n  };\n\n  if (forceSquare) {\n    // Also calculate parameters for making the image square.\n    size.dstWidth = size.dstHeight = Math.min(size.dstWidth, size.dstHeight);\n    size.srcWidth = size.srcHeight = Math.min(width, height);\n    size.xoffset = ((width - size.srcWidth) / 2) | 0;\n    size.yoffset = ((height - size.srcWidth) / 2) | 0;\n  } else {\n    size.xoffset = size.yoffset = 0;\n    size.srcWidth = width;\n    size.srcHeight = height;\n  }\n  return size;\n}\n\n// Ensure file's extension matches mime content type\nexport function fileNameForMime(fname, mime) {\n  const idx = SUPPORTED_IMAGE_FORMATS.indexOf(mime);\n  if (idx < 0 || !fname) {\n    // Unknown mime or empty name.\n    return fname;\n  }\n  const ext = MIME_EXTENSIONS[idx];\n\n  const at = fname.lastIndexOf('.');\n  if (at >= 0) {\n    fname = fname.substring(0, at);\n  }\n  return fname + '.' + ext;\n}\n\n// Scale uploaded image to fit under certain dimensions and byte size, optionally constraining to a square.\n// On success calls onSuccess callback with the scaled image as Blob.\nexport function imageScaled(fileOrBlob, maxWidth, maxHeight, maxSize, forceSquare, onSuccess, onError) {\n  const img = new Image();\n  img.crossOrigin = 'Anonymous';\n  img.onerror = function(err) {\n    onError(\"Image format unrecognized\");\n  }\n  img.onload = async function() {\n    // Once the image is loaded, the URL is no longer needed.\n    URL.revokeObjectURL(img.src);\n\n    // Calculate the desired image dimensions.\n    const dim = fitImageSize(this.width, this.height, maxWidth, maxHeight, forceSquare);\n    if (!dim) {\n      onError(\"Invalid image\");\n      return;\n    }\n    let canvas = document.createElement('canvas');\n    canvas.width = dim.dstWidth;\n    canvas.height = dim.dstHeight;\n    let ctx = canvas.getContext('2d');\n    ctx.imageSmoothingEnabled = true;\n    ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n      0, 0, dim.dstWidth, dim.dstHeight);\n\n    const mime = SUPPORTED_IMAGE_FORMATS.includes(fileOrBlob.type) ? fileOrBlob.type : 'image/jpeg';\n    // Generate blob to check size of the image.\n    let blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    if (!blob) {\n      onError(\"Unsupported image format\");\n      return;\n    }\n\n    // Ensure the image is not too large. Shrink the image keeping the aspect ratio.\n    // Do nothing if maxsize is <= 0.\n    while (maxSize > 0 && blob.length > maxSize) {\n      dim.dstWidth = (dim.dstWidth * 0.70710678118) | 0;\n      dim.dstHeight = (dim.dstHeight * 0.70710678118) | 0;\n      canvas.width = dim.dstWidth;\n      canvas.height = dim.dstHeight;\n      ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n        0, 0, dim.dstWidth, dim.dstHeight);\n      blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    }\n\n    canvas = null;\n    onSuccess(mime, blob, dim.dstWidth, dim.dstHeight, fileNameForMime(fileOrBlob.name, mime));\n  };\n  img.src = URL.createObjectURL(fileOrBlob);\n}\n\n// Scale and crop image according to specified dimensions.\n// The coordinates are in unscaled image pixels, i.e. cut the rectangle first then scale it.\nexport function imageCrop(mime, objURL, left, top, width, height, scale, onSuccess, onError) {\n  const img = new Image();\n  img.crossOrigin = 'Anonymous';\n  img.onerror = function(err) {\n    onError(\"Image format unrecognized\");\n  }\n  img.onload = async function() {\n    // Once the image is loaded, the URL is no longer needed.\n    URL.revokeObjectURL(img.src);\n\n    let canvas = document.createElement('canvas');\n    canvas.width = width * scale;\n    canvas.height = height * scale;\n    let ctx = canvas.getContext('2d');\n    ctx.imageSmoothingEnabled = true;\n    ctx.drawImage(this, left, top, width, height, 0, 0, canvas.width, canvas.height);\n\n    mime = SUPPORTED_IMAGE_FORMATS.includes(mime) ? mime : 'image/jpeg';\n    // Generate blob to check size of the image.\n    let blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    if (!blob) {\n      onError(\"Unsupported image format\");\n      return;\n    }\n    // Allow GC.\n    canvas = null;\n    onSuccess(mime, blob, width, height);\n  };\n  img.src = objURL;\n}\n\n// Convert File to base64 string.\nexport function fileToBase64(file, onSuccess) {\n  const reader = new FileReader();\n  reader.addEventListener('load', function() {\n    onSuccess(file.type, reader.result.split(',')[1], file.name);\n  });\n  reader.readAsDataURL(file);\n}\n\n// Convert Blob to base64 string.\nexport function blobToBase64(blob, onSuccess) {\n  const reader = new FileReader();\n  reader.addEventListener('load', function() {\n    onSuccess(blob.type, reader.result.split(',')[1]);\n  });\n  reader.readAsDataURL(blob);\n}\n\n// File pasted from the clipboard. It's either an inline image or a file attachment.\n// FIXME: handle large files out of band.\nexport function filePasted(event, onImageSuccess, onAttachmentSuccess, onError) {\n  var items = (event.clipboardData || event.originalEvent.clipboardData || {}).items;\n  for (var i in items) {\n    var item = items[i];\n    if (item.kind === 'file') {\n      var file = item.getAsFile();\n      if (!file) {\n        console.error(\"Failed to get file object from pasted file item\", item.kind, item.type);\n        continue;\n      }\n      if (file.type && file.type.split('/')[0] == 'image') {\n        // Handle inline image\n        if (file.size > MAX_INBAND_ATTACHMENT_SIZE || SUPPORTED_IMAGE_FORMATS.indexOf(file.type) < 0) {\n          imageFileScaledToBase64(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, false, onImageSuccess, onError);\n        } else {\n          imageFileToBase64(file, onImageSuccess, onError);\n        }\n      } else {\n        // Handle file attachment\n        fileToBase64(file, onAttachmentSuccess, onError)\n      }\n      // Indicate that the pasted data contains a file.\n      return true;\n    }\n  }\n  // No file found.\n  return false;\n}\n\n// Get mime type from data URL header.\nexport function getMimeType(header) {\n  var mime = /^data:(image\\/[-+a-z0-9.]+);base64/.exec(header);\n  return (mime && mime.length > 1) ? mime[1] : null;\n}\n\n// Given length of a binary object in bytes, calculate the length after\n// base64 encoding.\nexport function base64EncodedLen(n) {\n  return Math.floor((n + 2) / 3) * 4;\n}\n\n// Given length of a base64-encoded object, calculate decoded size of the\n// pbject in bytes.\nexport function base64DecodedLen(n) {\n  return Math.floor(n / 4) * 3;\n}\n\n// Re-encode string to standard base64 encoding with padding.\n// The string may be base64-URL encoded without the padding.\nexport function base64ReEncode(str) {\n  if (str) {\n    str = str.replace(/-/g, '+').replace(/_/g, '/');\n    try {\n      str = btoa(atob(str));\n    } catch(err) {\n      console.error(\"Failed to base64 re-encode string.\", err);\n      str = null;\n    }\n  }\n  return str;\n}\n\n// Convert a base64 encoded string with the provided mime type into a Blob.\nexport function base64ToBlob(str, mime) {\n  if (!str) {\n    return null;\n  }\n\n  try {\n    // Make blob.\n    const bin = atob(str);\n    const length = bin.length;\n    const buf = new ArrayBuffer(length);\n    const arr = new Uint8Array(buf);\n    for (let i = 0; i < length; i++) {\n      arr[i] = bin.charCodeAt(i);\n    }\n\n    return new Blob([buf], { type: mime });\n  } catch(err) {\n    console.log(\"Failed to convert base64 to blob: \", err);\n  }\n\n  return null;\n}\n","import React from 'react';\nimport { defineMessages } from 'react-intl';\n\nimport { IMAGE_THUMBNAIL_DIM, BROKEN_IMAGE_SIZE, REM_SIZE } from '../config.js';\nimport { fitImageSize } from './blob-helpers.js';\nimport { idToColorClass } from './strformat.js';\nimport { sanitizeImageUrl } from './utils.js';\n\nimport { Drafty } from 'tinode-sdk';\n\nconst messages = defineMessages({\n  drafty_form: {\n    id: 'drafty_form',\n    defaultMessage: 'Form: ',\n    description: 'Comment for form in drafty preview'\n  },\n  drafty_attachment: {\n    id: 'drafty_attachment',\n    defaultMessage: 'Attachment',\n    description: 'Comment for attachment in drafty preview'\n  },\n  drafty_image: {\n    id: 'drafty_image',\n    defaultMessage: 'Picture',\n    description: 'Comment for embedded images in drafty preview'\n  },\n});\n\nfunction handleImageData(el, data, attr) {\n  if (!data) {\n    attr.src = 'img/broken_image.png';\n    attr.style = {\n      width: IMAGE_THUMBNAIL_DIM + 'px',\n      height: IMAGE_THUMBNAIL_DIM + 'px',\n      // Looks like a Chrome bug: broken image does not respect 'width' and 'height'.\n      minWidth: IMAGE_THUMBNAIL_DIM + 'px',\n      minHeight: IMAGE_THUMBNAIL_DIM + 'px'\n    };\n    return el;\n  }\n\n  attr.className = 'inline-image';\n  const dim = fitImageSize(data.width, data.height,\n    this.viewportWidth > 0 ? Math.min(this.viewportWidth - REM_SIZE * 6.5, REM_SIZE * 34.5) :\n      REM_SIZE * 34.5, REM_SIZE * 24, false) ||\n      {dstWidth: BROKEN_IMAGE_SIZE, dstHeight: BROKEN_IMAGE_SIZE};\n  attr.style = {\n    width: dim.dstWidth + 'px',\n    height: dim.dstHeight + 'px',\n    // Looks like a Chrome bug: broken image does not respect 'width' and 'height'.\n    minWidth: dim.dstWidth + 'px',\n    minHeight: dim.dstHeight + 'px'\n  };\n  if (!Drafty.isProcessing(data)) {\n    attr.src = this.authorizeURL(sanitizeImageUrl(attr.src));\n    attr.alt = data.name;\n    if (attr.src) {\n      if (Math.max(data.width || 0, data.height || 0) > IMAGE_THUMBNAIL_DIM) {\n        // Allow previews for large enough images.\n        attr.onClick = this.onImagePreview;\n        attr.className += ' image-clickable';\n      }\n      attr.loading = 'lazy';\n    } else {\n      attr.src = 'img/broken_image.png';\n    }\n  } else {\n    // Use custom element instead of <img>.\n    el = UploadingImage;\n  }\n\n  return el;\n}\n\n// The main Drafty formatter: converts Drafty elements into React classes. 'this' is set by the caller.\n// 'this' must contain:\n//    viewportWidth: this.props.viewportWidth;\n//    authorizeURL: this.props.tinode.authorizeURL\n//    onImagePreview: this.handleImagePreview\n//    onFormButtonClick: this.handleFormButtonClick\n//    onQuoteClick: this.handleQuoteClick (optional)\nexport function fullFormatter(style, data, values, key) {\n  if (style == 'EX') {\n    // attachments are handled elsewhere.\n    return null;\n  }\n\n  let el = Drafty.tagName(style);\n  if (el) {\n    const attr = Drafty.attrValue(style, data) || {};\n    attr.key = key;\n    switch (style) {\n      case 'HL':\n        // Highlighted text. Assign class name.\n        attr.className = 'highlight';\n        break;\n      case 'IM':\n        // Additional processing for images\n        el = handleImageData.call(this, el, data, attr);\n        // Image element cannot have content.\n        values = null;\n        break;\n      case 'BN':\n        // Button\n        attr.onClick = this.onFormButtonClick;\n        let inner = React.Children.map(values, (child) => {\n          return typeof child == 'string' ? child : undefined;\n        });\n        if (!inner || inner.length == 0) {\n          inner = [attr.name]\n        }\n        // Get text which will be sent back when the button is clicked.\n        attr['data-title'] = inner.join('');\n        break;\n      case 'MN':\n        // Mention\n        if (data && data.hasOwnProperty('colorId')) {\n          attr.className = 'mn-dark-color' + data.colorId;\n        }\n        break;\n      case 'FM':\n        // Form\n        attr.className = 'bot-form';\n        break;\n      case 'RW':\n        // Form element formatting is dependent on element content.\n        break;\n      case 'QQ':\n        // Quote/citation.\n        attr.className = 'reply-quote'\n        attr.onClick = this.onQuoteClick;\n        break;\n      default:\n        if (el == '_UNKN') {\n          // Unknown element.\n          el = React.Fragment;\n          values = [<i className=\"material-icons gray\">extension</i>, ' '].concat(values || []);\n        }\n        break;\n    }\n    return React.createElement(el, attr, values);\n  } else {\n    return values;\n  }\n};\n\n// Converts Drafty object into a one-line preview. 'this' is set by the caller.\n// 'this' must contain:\n//    formatMessage: this.props.intl.formatMessage\n//    messages: formatjs messages defined with defineMessages.\nexport function previewFormatter(style, data, values, key) {\n  let el = Drafty.tagName(style);\n  const attr = { key: key };\n  if (el) {\n    switch (style) {\n      case 'BR':\n        // Replace new line with a space.\n        el = React.Fragment;\n        values = [' '];\n        break;\n      case 'HL':\n        // Make highlight less prominent in preview.\n        attr.className = 'highlight preview';\n        break;\n      case 'LN':\n      case 'MN':\n        // Disable links in previews.\n        el = 'span';\n        break;\n      case 'IM':\n        // Replace image with '[icon] Image'.\n        el = React.Fragment;\n        values = [<i key=\"im\" className=\"material-icons\">photo</i>, this.formatMessage(messages.drafty_image)];\n        break;\n      case 'BN':\n        el = 'span';\n        attr.className = 'flat-button faux';\n        break;\n      case 'FM':\n        el = React.Fragment;\n        values = [<i key=\"fm\" className=\"material-icons\">dashboard</i>,\n          this.formatMessage(messages.drafty_form)].concat(' ', values || []);\n        break;\n      case 'RW':\n        el = React.Fragment;\n        break;\n      case 'EX':\n        if (data) {\n          if (data.mime == 'application/json') {\n            // Ignore JSON attachments: they are form response payloads.\n            return null;\n          }\n          // Clear inband data.\n          data.val = null;\n        }\n        el = React.Fragment;\n        values = [<i key=\"ex\" className=\"material-icons\">attachment</i>, this.formatMessage(messages.drafty_attachment)];\n        break;\n      default:\n        if (el == '_UNKN') {\n          el = React.Fragment;\n          values = [<i key=\"unkn\" className=\"material-icons\">extension</i>, ' '].concat(values || []);\n        }\n        break;\n    }\n    return React.createElement(el, attr, values);\n  } else {\n    return values;\n  }\n};\n\n// Converts Drafty object into a quoted reply. 'this' is set by the caller.\n// 'this' must contain:\n//    formatMessage: this.props.intl.formatMessage\n//    messages: formatjs messages defined with defineMessages.\n//    authorizeURL: this.props.tinode.authorizeURL\n//    onQuoteClick: this.handleQuoteClick (optional)\nexport function quoteFormatter(style, data, values, key) {\n  if (['BR', 'IM', 'MN', 'QQ'].includes(style)) {\n    let el = Drafty.tagName(style);\n    let attr = Drafty.attrValue(style, data) || {};\n    attr.key = key;\n    switch(style) {\n      case 'IM':\n        const img = handleImageData.call(this, el, data, attr);\n        values = [React.createElement(img, attr, null), ' ', this.formatMessage(messages.drafty_image)];\n        el = React.Fragment;\n        attr = {key: key};\n        break;\n      case 'MN':\n        el = 'span';\n        attr.className = 'mention'\n        if (data) {\n          attr.className += ' ' + idToColorClass(data.val, false, true);\n        }\n        break;\n      case 'QQ':\n        attr.className = 'reply-quote';\n        attr.onClick = this.onQuoteClick;\n        break;\n    }\n    return React.createElement(el, attr, values);\n  }\n  return previewFormatter.call(this, style, data, values, key);\n}\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport ContactBadges from './contact-badges.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\nimport UnreadBadge from './unread-badge.jsx';\n\nimport { Drafty } from 'tinode-sdk';\n\nimport { previewFormatter } from '../lib/formatters.js';\nimport { deliveryMarker } from '../lib/utils.js';\n\nclass Contact extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.props.onSelected) {\n      // Index this.props.index is used by GroupManager.\n      this.props.onSelected(this.props.item, this.props.index);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.props.item, y: e.pageY, x: e.pageX });\n  }\n\n  render() {\n    let title = this.props.title;\n    if (!title) {\n      title = <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n        description=\"Title shown when the topic has no name\" /></i>;\n    } else if (title.length > 30) {\n      // FIXME: this is probably wrong for RTL languages.\n      title = title.substring(0, 28) + '…';\n    }\n    const online = this.props.now ? 'online' : 'offline';\n    const avatar = this.props.avatar ? this.props.avatar : true;\n    const badges = this.props.badges ? this.props.badges.slice() : [];\n    const icon_badges = [];\n    if (this.props.isVerified) {\n      icon_badges.push({icon: 'verified', color: 'verified-color'});\n    }\n    if (this.props.isStaff) {\n      icon_badges.push({icon: 'staff', color: 'staff-color'});\n    }\n    if (this.props.isDangerous) {\n      icon_badges.push({icon: 'dangerous', color: 'danger-color'});\n    }\n    if (this.props.acs) {\n      if (this.props.showMode) {\n        badges.push({name: this.props.acs.getMode(), key: 'mode'});\n      }\n      if (this.props.acs.isMuted()) {\n        icon_badges.push({icon: 'muted'});\n      }\n      if (!this.props.acs.isJoiner()) {\n        icon_badges.push({icon: 'banned'});\n      }\n    }\n\n    const subtitle = this.props.preview ?\n      (typeof this.props.preview == 'string' ? this.props.preview :\n        Drafty.isValid(this.props.preview) ?\n        React.createElement(React.Fragment, null, Drafty.format(this.props.preview, previewFormatter,\n          {formatMessage: this.props.intl.formatMessage})) :\n        <><i className=\"material-icons gray\">warning_amber</i> <i className=\"gray\">\n          <FormattedMessage id=\"invalid_content\"\n            defaultMessage=\"invalid content\" description=\"Shown when the message is unreadable\" /></i>\n        </>\n      ) :\n      this.props.comment;\n\n    const icon = deliveryMarker(this.props.received);\n    const marker = icon ? <i className={'material-icons small space-right' +\n      (icon.color ? ' ' + icon.color : '')}>{icon.name}</i> : null;\n\n    return (\n      <li className={!this.props.showCheckmark && this.props.selected ? 'selected' : null} onClick={this.handleClick}>\n        <div className=\"avatar-box\">\n          <LetterTile\n            tinode={this.props.tinode}\n            avatar={avatar}\n            title={this.props.title}\n            topic={this.props.item} />\n          {this.props.showOnline ? <span className={online} /> :\n            (this.props.showCheckmark && this.props.selected ?\n            <i className=\"checkmark material-icons\">check_circle</i>\n            : null)}\n        </div>\n        <div className=\"text-box\">\n          <div><span className=\"contact-title\">{title}</span>\n            {this.props.isChannel ? <img src=\"/img/channel.png\" className=\"channel\" alt=\"channel\" /> : null}\n            <ContactBadges badges={icon_badges} /><UnreadBadge count={this.props.unread} />\n          </div>\n          {this.props.showMode ?\n            <span><ContactBadges badges={badges} /></span> :\n            this.props.small ? null : <div className=\"contact-comment\">{marker}<span>{subtitle || '\\u00A0'}</span></div>}\n        </div>\n        {this.props.showContextMenu ?\n          <span className=\"menuTrigger\">\n            <a href=\"#\" onClick={this.handleContextClick}>\n              <i className=\"material-icons\">expand_more</i>\n            </a>\n          </span> : null}\n      </li>\n    );\n  }\n};\n\nexport default injectIntl(Contact);\n","// A panel included into a list of contacts with an action text.\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\n\nclass ContactAction extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.onAction(this.props.action);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <li onClick={this.handleClick} className=\"action\">\n        <div className=\"action-text\">{formatMessage(this.props.title, this.props.values)}</div>\n      </li>\n    );\n  }\n};\n\nexport default injectIntl(ContactAction);\n","// ContactList: component for showing a list of contacts,\n// such as a list of group members in a group chat.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { Drafty } from 'tinode-sdk';\nimport Tinode from 'tinode-sdk';\n\nimport Contact from './contact.jsx';\nimport ContactAction from './contact-action.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nimport { MESSAGE_PREVIEW_LENGTH } from '../config.js';\n\nconst messages = defineMessages({\n  badge_you: {\n    id: 'badge_you',\n    defaultMessage: 'you',\n    description: 'Badge for indicating the current user'\n  },\n  badge_owner: {\n    id: 'badge_owner',\n    defaultMessage: 'owner',\n    description: 'Badge for indicating the owner'\n  }\n});\n\nclass ContactList extends React.Component {\n  render() {\n    const { formatMessage } = this.props.intl;\n    const showCheckmark = Array.isArray(this.props.topicSelected);\n    const contactNodes = [];\n    let contactsCount = 0;\n    if (this.props.contacts && this.props.contacts.length > 0) {\n      this.props.contacts.map((c) => {\n        if (c.action) {\n          // Action item\n          contactNodes.push(\n            <ContactAction\n              title={c.title} action={c.action} values={c.values}\n              key={c.action}\n              onAction={this.props.onAction}\n              />);\n        } else {\n          // Normal contact\n          const key = this.props.showMode ? c.user : (c.topic || c.user);\n          // If filter function is provided, filter out the items\n          // which don't satisfy the condition.\n          if (this.props.filterFunc && this.props.filter) {\n            const filterOn = [key];\n            if (c.private && c.private.comment) {\n              filterOn.push(('' + c.private.comment).toLowerCase());\n            }\n            if (c.public && c.public.fn) {\n              filterOn.push(('' + c.public.fn).toLowerCase());\n            }\n            if (!this.props.filterFunc(this.props.filter, filterOn)) {\n              return;\n            }\n          }\n\n          const isChannel = Tinode.isChannelTopicName(key);\n          const selected = showCheckmark ?\n            (this.props.topicSelected.indexOf(key) > -1) :\n            (this.props.topicSelected === key);\n          const badges = [];\n          if (this.props.showMode) {\n            if (key == this.props.myUserId) {\n              badges.push({name: formatMessage(messages.badge_you), color: 'green'});\n            }\n            if (c.acs && c.acs.isOwner()) {\n              badges.push({name: formatMessage(messages.badge_owner), color: 'blue'});\n            }\n          }\n\n          const comment = Array.isArray(c.private) ?\n            c.private.join(',') : (c.private ? c.private.comment : null);\n          let preview;\n          let deliveryStatus;\n          if (!this.props.showMode && c.latestMessage) {\n            const msg = c.latestMessage(true);\n            if (msg) {\n              deliveryStatus = msg._status || c.msgStatus(msg, true);\n              preview = typeof msg.content == 'string' ?\n                msg.content.substr(0, MESSAGE_PREVIEW_LENGTH) :\n                Drafty.preview(msg.content, MESSAGE_PREVIEW_LENGTH);\n            }\n          }\n          contactNodes.push(\n            <Contact\n              tinode={this.props.tinode}\n              title={c.public ? c.public.fn : null}\n              avatar={makeImageUrl(c.public ? c.public.photo : null)}\n              comment={comment}\n              preview={preview}\n              received={deliveryStatus}\n              unread={this.props.showUnread ? c.unread : 0}\n              now={c.online && this.props.connected}\n              acs={c.acs}\n              showMode={this.props.showMode}\n              badges={badges}\n              showCheckmark={showCheckmark}\n              selected={selected}\n              showOnline={this.props.showOnline && !isChannel}\n              isChannel={isChannel}\n              onSelected={this.props.onTopicSelected}\n              showContextMenu={this.props.showContextMenu}\n              isVerified={c.trusted && c.trusted.verified}\n              isStaff={c.trusted && c.trusted.staff}\n              isDangerous={c.trusted && c.trusted.danger}\n              item={key}\n              index={contactNodes.length}\n              key={key} />\n          );\n          contactsCount ++;\n        }\n      }, this);\n    }\n\n    return (\n      <div className={this.props.noScroll ? null : \"scrollable-panel\"}>\n        {contactsCount == 0 ?\n          <div className=\"center-medium-text\"\n            dangerouslySetInnerHTML={{__html: this.props.emptyListMessage}} />\n          :\n          null\n        }\n        {contactNodes.length > 0 ?\n          <ul className=\"contact-box\">\n            {contactNodes}\n          </ul>\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ContactList);\n","// The X menu to be displayed in title bars.\nimport React from 'react';\n\nexport default class MenuCancel extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n        <i className=\"material-icons\">close</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nimport MenuCancel from './menu-cancel.jsx';\n\nexport default class ErrorPanel extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      show: false,\n    };\n\n    this.hide = this.hide.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.level !== this.props.level) {\n      this.setState({\n        show: !(!this.props.level)\n      });\n    }\n  }\n\n  hide() {\n    this.setState({show: false});\n    if (this.props.onClearError) {\n      this.props.onClearError();\n    }\n  }\n\n  render() {\n    const icons = {err: 'error', warn: 'warning', info: 'info'}\n    const level = icons[this.props.level] || '';\n    const className = 'info-box ' + level;\n    return (\n      <div className={className}>\n        <div className=\"icon\"><i className=\"material-icons\">{level}</i></div>\n        <span>\n          {this.props.text}\n          {this.props.action ?\n            <>\n              &#32;<a href=\"#\"\n                style={{ whiteSpace: 'nowrap' }}\n                onClick={(e) => {e.preventDefault(); this.props.action();}}>\n                {this.props.actionText}\n              </a>\n            </>\n          : null}\n        </span>\n        <div className=\"cancel\"><MenuCancel onCancel={this.hide} /></div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\n\nexport default class Chip extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel(this.props.topic, this.props.index);\n  }\n\n  render() {\n    const title = this.props.title || this.props.topic;\n    const className = this.props.invalid ? 'chip invalid' : 'chip';\n    return (\n      <div className={className}>\n        {this.props.noAvatar ?\n          <span className=\"spacer\" /> :\n          <div className=\"avatar-box\">\n            <LetterTile\n              tinode={this.props.tinode}\n              avatar={this.props.avatar || true}\n              topic={this.props.topic}\n              title={this.props.title} />\n          </div>\n        }\n        <span>{title}</span>\n        {this.props.onCancel && !this.props.required ?\n          <a href=\"#\" onClick={this.handleCancel} >&times;</a>\n          : <span className=\"spacer\" />}\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport Chip from './chip.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n/* BEGIN ChipInput: group membership widget */\nexport default class ChipInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = ChipInput.deriveStateFromProps(props);\n    this.state.input = '';\n    this.state.focused = false;\n\n    this.handleTextInput = this.handleTextInput.bind(this);\n    this.removeChipAt = this.removeChipAt.bind(this);\n    this.handleChipCancel = this.handleChipCancel.bind(this);\n    this.handleFocusGained = this.handleFocusGained.bind(this);\n    this.handleFocusLost = this.handleFocusLost.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  static deriveStateFromProps(props) {\n    return {\n      placeholder: props.chips ? '' : props.prompt,\n      sortedChips: ChipInput.sortChips(props.chips, props.staticMembers),\n      chipIndex: ChipInput.indexChips(props.chips)\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chips != this.props.chips ||\n      prevProps.staticMembers != this.props.staticMembers ||\n      prevProps.prompt != this.props.prompt) {\n      this.setState(ChipInput.deriveStateFromProps(this.props));\n    }\n    if (!prevState || this.props.chips.length > prevState.sortedChips.length) {\n      this.setState({input: ''});\n    }\n  }\n\n  // Map chip index to user name\n  static indexChips(chips) {\n    const index = {};\n    let count = 0;\n    chips.map((item) => {\n      index[item.user] = count;\n      count ++;\n    });\n    return index;\n  }\n\n  // Have non-removable chips appear before all other chips.\n  static sortChips(chips, keep) {\n    const required = [];\n    const normal = [];\n    chips.map((item) => {\n      if (keep && keep.includes(item.user)) {\n        required.push(item);\n      } else {\n        normal.push(item);\n      }\n    });\n    return required.concat(normal);\n  }\n\n  handleTextInput(e) {\n    this.setState({input: e.target.value});\n    if (this.props.filterFunc) {\n      this.props.filterFunc(e.target.value);\n    }\n  }\n\n  removeChipAt(idx) {\n    const removed = this.state.sortedChips[idx];\n    this.props.onChipRemoved(removed.user, this.state.chipIndex[removed.user]);\n  }\n\n  handleChipCancel(item, idx) {\n    this.removeChipAt(idx);\n  }\n\n  handleFocusGained() {\n    this.setState({focused: true});\n  }\n\n  handleFocusLost() {\n    this.setState({focused: false});\n    if (this.props.onFocusLost) {\n      this.props.onFocusLost(this.state.input);\n    }\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Backspace') {\n      if (this.state.input.length == 0 && this.state.sortedChips.length > 0) {\n        const at = this.state.sortedChips.length - 1;\n        if (this.state.sortedChips[at].user !== this.props.staticMembers) {\n          this.removeChipAt(at);\n        }\n      }\n    } else if (e.key === 'Enter') {\n      if (this.props.onEnter) {\n        this.props.onEnter(this.state.input);\n      }\n    } else if (e.key === 'Escape') {\n      if (this.props.onCancel) {\n        this.props.onCancel();\n      }\n    }\n  }\n\n  render() {\n    const chips = [];\n    let count = 0;\n    const staticMembers = this.props.staticMembers || [];\n    this.state.sortedChips.map((item) => {\n      chips.push(\n        <Chip\n          tinode={this.props.tinode}\n          onCancel={this.handleChipCancel}\n          avatar={makeImageUrl(item.public ? item.public.photo : null)}\n          title={item.public ? item.public.fn : undefined}\n          noAvatar={this.props.avatarDisabled}\n          topic={item.user}\n          required={staticMembers.includes(item.user)}\n          invalid={item.invalid}\n          index={count}\n          key={item.user} />\n      );\n      count++;\n    });\n    const className = \"chip-input\" + (this.state.focused ? ' focused' : '');\n    const autoFocus = !(this.props.tabIndex > 0);\n    return (\n      <div className={className}>\n        {chips}\n        <input type=\"text\"\n          placeholder={this.state.placeholder}\n          onChange={this.handleTextInput}\n          onFocus={this.handleFocusGained}\n          onBlur={this.handleFocusLost}\n          onKeyDown={this.handleKeyDown}\n          value={this.state.input}\n          tabIndex={this.props.tabIndex}\n          autoFocus={autoFocus} />\n      </div>\n    );\n  }\n};\n","// GroupMembers: control for managing a list of group members.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\nimport ContactList from './contact-list.jsx';\n\nconst messages = defineMessages({\n  no_contacts: {\n    id: 'no_contacts',\n    defaultMessage: 'You have no contacts :-(',\n    description: 'Shown in ContactsView when the user has no contacts'\n  },\n  contacts_not_found_short: {\n    id: 'contacts_not_found_short',\n    defaultMessage: \"No contacts match ''{query}''\",\n    description: 'Shown in ContactsView when search returned no results'\n  }\n});\n\nclass GroupManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Array of topic members\n      members: props.members,\n      index: GroupManager.indexMembers(props.members),\n      staticMembers: GroupManager.staticMembers(props.members, props.keepInitialMembers, props.requiredMember),\n      contactFilter: '',\n      noContactsMessage: props.intl.formatMessage(messages.no_contacts),\n      selectedContacts: GroupManager.selectedContacts(props.members)\n    };\n\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleMemberRemoved = this.handleMemberRemoved.bind(this);\n    this.handleContactFilter = this.handleContactFilter.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static indexMembers(members) {\n    let index = {};\n    members.map((m) => {\n      index[m.user] = {delta: 0, present: true}; // Delta: 0 unchanged, +1 added, -1 removed\n    });\n    return index;\n  }\n\n  static staticMembers(members, keepInitial, requiredMember) {\n    let stat = [];\n    members.map((m) => {\n      if (keepInitial || m.user == requiredMember) {\n        stat.push(m.user);\n      }\n    });\n    return stat;\n  }\n\n  static selectedContacts(members) {\n    let sel = [];\n    members.map((m) => {\n      sel.push(m.user);\n    });\n    return sel;\n  }\n\n  handleContactSelected(userId, index) {\n    let status = this.state.index[userId];\n    if (status) {\n      if (status.present) {\n        // Prevent duplicate members\n        return;\n      }\n      status.delta += 1;\n      status.present = true;\n    } else {\n      status = {delta: 1, present: true};\n    }\n\n    let m = this.state.members.slice();\n    m.push(this.props.contacts[index]);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleMemberRemoved(userId, index) {\n    const status = this.state.index[userId];\n    if (!status || !status.present) {\n      return;\n    }\n    status.present = false;\n    status.delta -= 1;\n\n    let m = this.state.members.slice();\n    m.splice(index, 1);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleContactFilter(val) {\n    const {formatMessage} = this.props.intl;\n    const msg = !val ?\n      formatMessage(messages.no_contacts) :\n      formatMessage(messages.contacts_not_found_short, {query: val});\n\n    this.setState({contactFilter: val, noContactsMessage: msg});\n  }\n\n  static doContactFiltering(filter, values) {\n    if (filter) {\n      for (let i=0; i<values.length; i++) {\n        if (values[i].indexOf(filter) >= 0) {\n          return true;\n        }\n      }\n      return false;\n    }\n    return true;\n  }\n\n  handleSubmit() {\n    var instance = this;\n    var members = [];\n    var added = [];\n    var removed = [];\n\n    var keys = Object.keys(this.state.index);\n    keys.map(function(k) {\n      if (instance.state.index[k].present) {\n        members.push(k);\n      }\n\n      if (instance.state.index[k].delta > 0) {\n        added.push(k);\n      } else if (instance.state.index[k].delta < 0) {\n        removed.push(k);\n      }\n    });\n    this.props.onSubmit(members, added, removed);\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <div id=\"group-manager\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_group_members\" defaultMessage=\"Group Members\" description=\"Section title\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ChipInput\n            tinode={this.props.tinode}\n            chips={this.state.members}\n            staticMembers={this.state.staticMembers}\n            prompt=\"add members\"\n            filterFunc={this.handleContactFilter}\n            onChipRemoved={this.handleMemberRemoved} />\n        </div>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_all_contacts\" defaultMessage=\"All Contacts\"\n              description=\"Section title [All Contacts]\" />\n          </label>\n        </div>\n        <ContactList\n          tinode={this.props.tinode}\n          contacts={this.props.contacts}\n          myUserId={this.props.myUserId}\n          topicSelected={this.state.selectedContacts}\n          filter={this.state.contactFilter}\n          filterFunc={GroupManager.doContactFiltering}\n          emptyListMessage={this.state.noContactsMessage}\n          showOnline={false}\n          showUnread={false}\n          onTopicSelected={this.handleContactSelected} />\n        <div id=\"group-manager-buttons\" className=\"panel-form-row\">\n          <button className=\"secondary\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(GroupManager);\n","// PermissionsEditor: Component for editing permissions\n// <PermissionsEditor mode=\"JWROD\" skip=\"O\" onChange={this.handleCheckboxTest} />\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport CheckBox from './checkbox.jsx';\nimport Contact from './contact.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n// Translatable permission names.\nconst messages = defineMessages({\n  joiner: {\n    id: 'permission_join',\n    defaultMessage: \"Join ({val})\",\n    description: 'Name of J permission'\n  },\n  reader: {\n    id: 'permission_read',\n    defaultMessage: \"Read ({val})\",\n    description: 'Name of R permission'\n  },\n  writer: {\n    id: 'permission_write',\n    defaultMessage: \"Write ({val})\",\n    description: 'Name of W permission'\n  },\n  preser: {\n    id: 'permission_pres',\n    defaultMessage: \"Get notified ({val})\",\n    description: 'Name of P permission'\n  },\n  approver: {\n    id: 'permission_admin',\n    defaultMessage: \"Approve ({val})\",\n    description: 'Name of A permission'\n  },\n  sharer: {\n    id: 'permission_share',\n    defaultMessage: \"Share ({val})\",\n    description: 'Name of S permission'\n  },\n  deleter: {\n    id: 'permission_delete',\n    defaultMessage: \"Delete ({val})\",\n    description: 'Name of D permission'\n  },\n  owner: {\n    id: 'permission_owner',\n    defaultMessage: \"Owner ({val})\",\n    description: 'Name of O permission'\n  }\n});\n\nclass PermissionsEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mode: (props.mode || '').replace('N', '')\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(val) {\n    let mode = this.state.mode;\n    const idx = mode.indexOf(val);\n    if (idx == -1) {\n      mode += val;\n    } else {\n      mode = mode.replace(val, '');\n    }\n    this.setState({mode: mode});\n  }\n\n  handleSubmit() {\n    // Normalize string, otherwise cannot check if mode has changed.\n    const mode = (this.state.mode || 'N').split('').sort().join('');\n    const before = (this.props.mode || 'N').split('').sort().join('')\n    if (mode !== before) {\n      this.props.onSubmit(mode);\n    } else {\n      this.props.onCancel();\n    }\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const all = 'JRWPASDO';\n    const names = {\n      'J': formatMessage(messages.joiner, {val: 'J'}),\n      'R': formatMessage(messages.reader, {val: 'R'}),\n      'W': formatMessage(messages.writer, {val: 'W'}),\n      'P': formatMessage(messages.preser, {val: 'P'}),\n      'A': formatMessage(messages.approver, {val: 'A'}),\n      'S': formatMessage(messages.sharer, {val: 'S'}),\n      'D': formatMessage(messages.deleter, {val: 'D'}),\n      'O': formatMessage(messages.owner, {val: 'O'})\n    };\n\n    let skip = this.props.skip || '';\n    let mode = this.state.mode;\n    let compare = (this.props.compare || '').replace('N', '');\n    let items = [];\n    for (let i=0; i<all.length; i++) {\n      let c = all.charAt(i);\n      if (skip.indexOf(c) >= 0 && mode.indexOf(c) < 0) {\n        // Permission is marked as inactive: hide unchecked permissions, disable checked permissions\n        continue;\n      }\n      items.push(\n        <tr key={c}>\n          <td>{names[c]}</td>\n          <td className=\"checkbox\">{skip.indexOf(c) < 0 ?\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} onChange={this.handleChange}/>\n            :\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} />\n          }</td>{this.props.compare ? <td className=\"checkbox\">\n            <CheckBox name={c} checked={(compare.indexOf(c) >= 0)}/>\n          </td> : null}\n        </tr>\n      );\n    }\n\n    return (\n      <div className=\"panel-form-column\">\n        {this.props.userTitle ?\n          <ul className=\"contact-box small\"><Contact\n            tinode={this.props.tinode}\n            item={this.props.item}\n            title={this.props.userTitle}\n            small={true}\n            avatar={makeImageUrl(this.props.userAvatar ? this.props.userAvatar : null)} /></ul> : null}\n        <label className=\"small\"><FormattedMessage id=\"title_permissions\"\n          defaultMessage=\"Permissions\" description=\"Section title\"/></label>\n        <table className=\"permission-editor\">\n        {this.props.compare ?\n          <thead><tr>\n            <th></th><th>{this.props.modeTitle}</th>\n            <th>{this.props.compareTitle}</th>\n          </tr></thead> :\n          null}\n        <tbody>\n          {items}\n        </tbody></table>\n        <br />\n        <div className=\"dialog-buttons\">\n          <button className=\"outline\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(PermissionsEditor);\n","// Image zoom and crop widget.\n\nimport React from 'react';\n\nconst DEFAULT_MAX_ZOOM = 2.5;\n\nexport default class Cropper extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Coordinates of the top left corner of the image in container coordinates.\n      panX: 0,\n      panY: 0,\n      // Origin of the zoom in image coordinates.\n      originX: 0,\n      originY: 0,\n      // Zoom scale.\n      zoom: 1,\n      // Zoom min and max.\n      minZoom: 0,\n      maxZoom: DEFAULT_MAX_ZOOM,\n    };\n\n    // References to DOM elements for hooking up events and getting screen dimensions.\n    // The transparent element which captures mouse moves (moves with the image).\n    this.overlay = React.createRef();\n    // The image cutout window or view port (static).\n    this.cutout = React.createRef();\n    // Scaled and translated image preview.\n    this.preview = React.createRef();\n    // The main container (static).\n    this.boundingBox = React.createRef();\n\n    // The original image width and height before any scaling.\n    this.imageWidth = 0;\n    this.imageHeight = 0;\n\n    // Mouse position when dragging.\n    this.mouseX = 0\n    this.mouseY = 0;\n    // Length of the previous mouse move when dragging.\n    this.prevDistance = 0;\n\n    // Bounding rectangles of static elements.\n    this.cutoutRect = {};\n    this.bBoxRect = {};\n    // Center of the bounding box.\n    this.originX = 0;\n    this.originY = 0;\n\n    this.initScaling = this.initScaling.bind(this);\n    this.onZoom = this.onZoom.bind(this);\n    this.handleZoom = this.handleZoom.bind(this);\n    this.mouseDown = this.mouseDown.bind(this);\n    this.mouseUp = this.mouseUp.bind(this);\n    this.mouseMove = this.mouseMove.bind(this);\n    this.mouseTouch = this.mouseTouch.bind(this);\n    this.positionAll = this.positionAll.bind(this);\n    this.translate = this.translate.bind(this);\n  }\n\n  componentDidMount() {\n    this.overlay.current.addEventListener('mousedown', this.mouseDown, { passive: true });\n    this.overlay.current.addEventListener('touchstart', this.mouseDown, { passive: true });\n\n    // The rectangle position is in viewport coordinates.\n    this.bBoxRect = this.boundingBox.current.getBoundingClientRect();\n    // Center of the bounding box in container coordinates.\n    this.originX = this.bBoxRect.width / 2;\n    this.originY = this.bBoxRect.height / 2;\n\n    // The rectangle position is in viewport coordinates.\n    this.cutoutRect = this.cutout.current.getBoundingClientRect();\n  }\n\n  componentWillUnmount() {\n    this.overlay.current.removeEventListener('mousedown', this.mouseDown);\n    this.overlay.current.removeEventListener('touchstart', this.mouseDown);\n  }\n\n  // Position all elements.\n  positionAll(panX, panY, zoom) {\n    // Zoom origin in image preview coordinates.\n    this.setState({\n      panX: panX,\n      panY: panY,\n      zoom: zoom,\n      originX: this.originX - panX,\n      originY: this.originY - panY,\n    });\n\n    // Pass cut out coordinates to caller.\n    const left = (this.originX - panX) * zoom - this.originX;\n    const top = (this.originY - panY) * zoom - this.originY;\n    this.props.onChange(\n      (left + this.cutoutRect.left - this.bBoxRect.left) / zoom,\n      (top + this.cutoutRect.top - this.bBoxRect.top) / zoom,\n      this.cutoutRect.width / zoom,\n      this.cutoutRect.height / zoom,\n      zoom);\n  }\n\n  // Check if new location is within the limits.\n  static checkBound(currPan, img, cutout, delta) {\n    let nextDiff = Math.min(0, cutout[0] - img[0] - delta, img[1] - cutout[1] + delta);\n    if (nextDiff == 0) {\n      // Cutout is completely within the image.\n      currPan += delta;\n    } else if (Math.min(0, cutout[0] - img[0], img[1] - cutout[1]) < nextDiff) {\n      // Cutout is outside of the range but closer to the bound.\n      currPan += delta;\n    }\n    return currPan;\n  }\n\n  initScaling() {\n    // Initialize components.\n    const imgRect = this.preview.current.getBoundingClientRect();\n\n    this.imageWidth = imgRect.width;\n    this.imageHeight = imgRect.height;\n\n    // Set zoom slider's min and max values. Make sure the scaled image cannot be smaller than the cutout.\n    const minZoom = Math.max(this.cutoutRect.width / imgRect.width, this.cutoutRect.height / imgRect.height);\n    this.setState({\n      minZoom: minZoom,\n      maxZoom: Math.max(DEFAULT_MAX_ZOOM, minZoom + 1)\n    });\n\n    // Initial zoom level fills the bounding box at the smallest image dimension and overflows the largest, i.e. \"fill\" not \"fit\".\n    const zoom = Math.max(this.bBoxRect.width / imgRect.width, this.bBoxRect.height / imgRect.height);\n    // Converting from viewport coordinates to container, then panning.\n    const panX = this.cutoutRect.left - this.bBoxRect.left -\n      (imgRect.width - this.cutoutRect.width) / 2;\n    const panY = this.cutoutRect.top - this.bBoxRect.top -\n      (imgRect.height - this.cutoutRect.height) / 2;\n\n    this.positionAll(panX, panY, zoom);\n  }\n\n  onZoom(e) {\n    this.handleZoom(e.target.value);\n  }\n\n  handleZoom(zoom) {\n    let panX = this.state.panX;\n    let panY = this.state.panY;\n\n    // Ensure that the image at the new zoom is not outside of the cutout boundaries.\n    // Calculate image coordinates at the new zoom.\n    const imgLeft = this.originX - (this.originX - panX) * zoom;\n    const imgRight = imgLeft + this.imageWidth * zoom;\n    // Cutout in the same coordinates as the image.\n    const coLeft = this.cutoutRect.left - this.bBoxRect.left;\n    const coRight = coLeft + this.cutoutRect.width;\n    if (coLeft < imgLeft) {\n      panX -= imgLeft - coLeft;\n    } else if (coRight > imgRight) {\n      panX += coRight - imgRight;\n    }\n    const imgTop = this.originY - (this.originY - panY) * zoom;\n    const imgBottom = imgTop + this.imageHeight * zoom;\n    const coTop = this.cutoutRect.top - this.bBoxRect.top;\n    const coBottom = coTop + this.cutoutRect.height;\n    if (coTop < imgTop) {\n      panY -= imgTop - coTop;\n    } else if (coBottom > imgBottom) {\n      panY += coBottom - imgBottom;\n    }\n\n    this.positionAll(panX, panY, zoom);\n  }\n\n  mouseDown(e) {\n    if (e.touches) {\n      this.mouseX = e.touches[0].pageX;\n      this.mouseY = e.touches[0].pageY;\n    } else {\n      this.mouseX = e.pageX;\n      this.mouseY = e.pageY;\n    }\n\n    window.addEventListener('mousemove', this.mouseMove, { passive: false });\n    window.addEventListener('touchmove', this.mouseTouch, { passive: false });\n    window.addEventListener('mouseup', this.mouseUp, { passive: true });\n    window.addEventListener('touchend', this.mouseUp, { passive: true });\n    // Disable text selection in the entire document.\n    document.body.style['userSelect'] = 'none';\n  }\n\n  // Perform image panning.\n  translate(pageX, pageY) {\n    const dX = pageX - this.mouseX;\n    const dY = pageY - this.mouseY;\n\n    this.mouseX = pageX;\n    this.mouseY = pageY;\n\n    // Make sure the image is within the cutout window.\n    const imgRect = this.preview.current.getBoundingClientRect();\n\n    // Check if the new position is within the boundaries, and if not if it's closer to them.\n    let panX = Cropper.checkBound(this.state.panX, [imgRect.left, imgRect.right],\n      [this.cutoutRect.left, this.cutoutRect.right], dX);\n    let panY = Cropper.checkBound(this.state.panY, [imgRect.top, imgRect.bottom],\n      [this.cutoutRect.top, this.cutoutRect.bottom], dY);\n\n    this.positionAll(panX, panY, this.state.zoom);\n  }\n\n  // Image panning.\n  mouseMove(e) {\n    e.preventDefault();\n    this.translate(e.pageX, e.pageY);\n  }\n\n  mouseTouch(e) {\n    e.preventDefault();\n\n    if (e.touches.length == 1) {\n      this.translate(e.touches[0].pageX, e.touches[0].pageY);\n      return;\n    }\n\n    // Image zooming by pinching.\n    const [touch0, touch1] = e.touches;\n    const distance = Math.sqrt((touch0.pageX - touch1.pageX) * (touch0.pageX - touch1.pageX) +\n      (touch0.pageY - touch1.pageY) * (touch0.pageY - touch1.pageY));\n\n    if (!this.prevDistance) {\n        this.prevDistance = distance / this.state.zoom;\n    }\n\n    let scale = (distance / this.prevDistance);\n    this.handleZoom(Math.max(this.minZoom, Math.min(this.maxZoom, scale)));\n  }\n\n  mouseUp(e) {\n    window.removeEventListener('mousemove', this.mouseMove);\n    window.removeEventListener('touchmove', this.mouseTouch);\n    window.removeEventListener('mouseup', this.mouseUp);\n    window.removeEventListener('touchend', this.mouseUp);\n    // Re-enable text selection.\n    document.body.style['userSelect'] = '';\n\n    this.positionAll(this.state.panX, this.state.panY, this.state.zoom);\n  }\n\n  render() {\n    // transform3d: position and scale.\n    const t3d = `translate3d(${this.state.panX}px, ${this.state.panY}px, 0) scale(${this.state.zoom})`;\n    // transformOrigin: zoom origin.\n    const orig = `${this.state.originX}px ${this.state.originY}px`;\n\n    // Overlay position and size are exactly equal to the position and size of the transformed image\n    // except it uses different coordinates.\n    const overlay = {\n      top: `${this.originY - this.state.originY * this.state.zoom}px`,\n      left: `${this.originX - this.state.originX * this.state.zoom}px`,\n      width: `${this.imageWidth * this.state.zoom}px`,\n      height: `${this.imageHeight * this.state.zoom}px`\n    };\n    return (\n      <div className=\"cropper\">\n        <div className=\"bounding-box\" ref={this.boundingBox}>\n          <img src={this.props.source} className=\"preview\" alt=\"\"\n            style={{transform: t3d, transformOrigin: orig}} ref={this.preview} onLoad={this.initScaling} />\n          <div className=\"cutout circle\" ref={this.cutout} />\n          <div className=\"overlay\" style={overlay} ref={this.overlay} />\n        </div>\n        <div className=\"zoom-wrapper\">\n          <input type=\"range\" className=\"zoomer\"\n            step=\"0.001\" min={this.state.minZoom} max={this.state.maxZoom} value={this.state.zoom} onChange={this.onZoom} />\n        </div>\n      </div>\n    );\n  }\n}\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Cropper from './cropper.jsx';\nimport { imageCrop } from '../lib/blob-helpers.js';\n\nexport default class AvatarCrop extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      top: 0,\n      left: 0,\n      width: 0,\n      height: 0,\n      scale: 1\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  // Cut out in image coordinates and desired scale factor.\n  handleChange(left, top, width, height, scale) {\n    this.setState({\n      left: left,\n      top: top,\n      width: width,\n      height: height,\n      scale: scale\n    });\n  }\n\n  handleSubmit() {\n    imageCrop(this.props.mime, this.props.avatar,\n      this.state.left, this.state.top,\n      this.state.width, this.state.height,\n      this.state.scale,\n      (mime, blob, width, height) => {\n        this.props.onSubmit(mime, blob, width, height);\n      },\n      (err) => {\n        this.props.onError(err);\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <Cropper\n            source={this.props.avatar}\n            onChange={this.handleChange} />\n        </div>\n        <div className=\"dialog-buttons\">\n          {this.props.onCancel ?\n            <button className=\"secondary\" onClick={this.props.onCancel}>\n              <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n            </button>\n            : null}\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n","// Password with a visiblity toggle.\nimport React from 'react';\n\nexport default class VisiblePassword extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: this.props.value,\n      visible: false\n    };\n\n    this.handleVisibility = this.handleVisibility.bind(this);\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n    if (this.props.onChange) {\n      this.props.onChange(e);\n    }\n  }\n\n  handleVisibility(e) {\n    e.preventDefault();\n    this.setState({visible: !this.state.visible});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode == 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, visible: false});\n      if (this.props.onFinished) {\n        this.props.onFinished();\n      }\n    } else if (e.keyCode == 13) {\n      // Enter pressed\n      this.handleEditingFinished();\n    }\n  }\n\n  handleEditingFinished(e) {\n    if (e) {\n      let currentTarget = e.currentTarget;\n      setTimeout(() => {\n        if (!currentTarget.contains(document.activeElement)) {\n          if (this.props.onFinished) {\n            this.props.onFinished(this.state.value);\n          }\n        }\n      }, 0);\n    } else if (this.props.onFinished) {\n      this.props.onFinished(this.state.value.trim());\n    }\n  }\n\n  render() {\n    return (\n      <div tabIndex=\"-1\" className=\"group-focus\"\n        onBlur={this.handleEditingFinished}>\n        <input className=\"with-visibility\"\n          type={this.state.visible ? \"text\" : \"password\"}\n          value={this.state.value}\n          placeholder={this.props.placeholder}\n          required={this.props.required ? 'required' : ''}\n          autoFocus={this.props.autoFocus ? 'autoFocus' : ''}\n          autoComplete={this.props.autoComplete}\n          onChange={this.handeTextChange}\n          onKeyDown={this.handleKeyDown} />\n        <span onClick={this.handleVisibility}>\n          <i className=\"material-icons clickable light-gray\">\n            {this.state.visible ? 'visibility' : 'visibility_off'}\n          </i>\n        </span>\n      </div>\n    );\n  }\n}\n","// In-place text editor. Shows text with an icon which toggles it into an input field.\nimport React from 'react';\n\nimport VisiblePassword from './visible-password.jsx';\n\nexport default class InPlaceEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selfRef = React.createRef();\n\n    this.state = {\n      active: props.active,\n      initialValue: props.value || '',\n      value: props.value || ''\n    };\n\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleStartEditing = this.handleStartEditing.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n    this.handlePasswordFinished = this.handlePasswordFinished.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // If text has changed while in read mode, update text and discard changes.\n    // Ignore update if in edit mode.\n    const newValue = this.props.value || '';\n    if (prevState.initialValue != newValue && !prevState.active) {\n      this.setState({\n        initialValue: newValue,\n        value: newValue\n      });\n    }\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value || ''});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, active: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleEditingFinished(e);\n    }\n  }\n\n   handleStartEditing() {\n    if (!this.props.readOnly) {\n      this.setState({active: true}, () => {\n        if (this.selfRef.current) {\n          this.selfRef.current.focus();\n        }\n      });\n    }\n  }\n\n  handleEditingFinished(event) {\n    const value = this.state.value.trim();\n    if (this.props.required && (!event.target.checkValidity() || !value)) {\n      // Empty input\n      this.setState({value: this.props.value, active: false});\n      return;\n    }\n    this.setState({active: false});\n    if ((value || this.props.value) && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  handlePasswordFinished(value) {\n    this.setState({active: false});\n    if (value && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  render() {\n    if (!this.state.active) {\n      let spanText = this.props.type == 'password' ? '••••••••' : this.state.value;\n      let spanClass = 'in-place-edit' + (this.props.readOnly ? ' disabled' : '');\n      if (!spanText) {\n        spanText = this.props.placeholder;\n        spanClass += ' placeholder';\n      }\n      if (!this.props.multiline || this.props.multiline == 1) {\n        spanClass += ' short';\n      }\n\n      return (<span className={spanClass} onClick={this.handleStartEditing}>\n        <span>{spanText}</span>\n      </span>);\n    }\n\n    let element;\n    const attr = {};\n    if (this.props.type == 'password') {\n      element = VisiblePassword;\n      attr.onFinished = this.handlePasswordFinished;\n    } else {\n      if (this.props.multiline > 1) {\n        element = 'textarea';\n        attr.rows = this.props.multiline;\n        attr.className = 'inplace-edit';\n      } else {\n        element = 'input';\n        attr.type = this.props.type || 'text';\n      }\n      attr.value = this.state.value;\n      attr.onChange = this.handeTextChange;\n      attr.onKeyDown = this.handleKeyDown;\n      attr.onBlur = this.handleEditingFinished;\n    }\n    attr.placeholder = this.props.placeholder;\n    attr.required = this.props.required ? 'required' : '';\n    attr.autoComplete = this.props.autoComplete;\n    attr.autoFocus = true;\n    attr.ref = this.selfRef;\n\n    return React.createElement(element, attr, null);\n  }\n};\n","// TagManager: edit topic or user tags.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\n\nimport { MAX_TAG_COUNT, MAX_TAG_LENGTH, MIN_TAG_LENGTH } from '../config.js';\nimport { arrayEqual } from '../lib/utils.js';\n\nexport default class TagManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tags: this.props.tags || [],\n      tagInput: '',\n      activated: this.props.activated\n    };\n\n    this.handleTagInput = this.handleTagInput.bind(this);\n    this.handleAddTag = this.handleAddTag.bind(this);\n    this.handleRemoveTag = this.handleRemoveTag.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const tags = nextProps.tags || [];\n    if (!arrayEqual(tags, prevState.tags) && !prevState.activated) {\n      return {tags: tags};\n    }\n    return null;\n  }\n\n  handleTagInput(text) {\n    this.setState({tagInput: text});\n    if (text.length > 0) {\n      const last = text[text.length-1];\n      if (text[0] == '\"') {\n        // This is a quoted string.\n        if (text.length > 1 && last == '\"') {\n          this.handleAddTag(text.substring(1, text.length-1));\n        }\n      } else if (last == ',' || last == ' ' || last == ';' || last == '\"') {\n        // User entered ',', ' ' or ';'\n        this.handleAddTag(text.substring(0, text.length-1).trim());\n      }\n    }\n  }\n\n  handleAddTag(tag) {\n    const maxTagCount = this.props.tinode.getServerLimit('maxTagCount', MAX_TAG_COUNT);\n\n    if (tag.length > 0 && this.state.tags.length < maxTagCount) {\n      const tags = this.state.tags.slice(0);\n      tags.push(tag);\n\n      this.setState({tags: tags, tagInput: ''});\n      if (this.props.onTagsChanged) {\n        this.props.onTagsChanged(tags);\n      }\n      return tags;\n    }\n    return this.state.tags;\n  }\n\n  handleRemoveTag(tag, index) {\n    const tags = this.state.tags.slice(0);\n    tags.splice(index, 1);\n    this.setState({tags: tags});\n    if (this.props.onTagsChanged) {\n      this.props.onTagsChanged(tags);\n    }\n  }\n\n  handleSubmit() {\n    // Add unprocessed input to tags, submit the list.\n    this.props.onSubmit(this.handleAddTag(this.state.tagInput.trim()));\n    this.setState({activated: false, tags: this.props.tags || []});\n  }\n\n  handleCancel() {\n    this.setState({activated: false, tagInput: '', tags: this.props.tags || []});\n    if (this.props.onCancel) {\n      this.props.onCancel();\n    }\n  }\n\n  render() {\n    const minTagLength = this.props.tinode.getServerLimit('minTagLength', MIN_TAG_LENGTH);\n    const maxTagLength = this.props.tinode.getServerLimit('maxTagLength', MAX_TAG_LENGTH);\n\n    let tags = [];\n    if (this.state.activated) {\n      this.state.tags.map((tag) => {\n        tags.push({user: tag, invalid: (tag.length < minTagLength || tag.length > maxTagLength)});\n      });\n    } else {\n      this.state.tags.map((tag) => {\n        tags.push(<span className=\"badge\" key={tags.length}>{tag}</span>);\n      });\n      if (tags.length == 0) {\n        tags = (\n          <i>\n            <FormattedMessage id=\"tags_not_found\" defaultMessage=\"No tags defined. Add some.\" description=\"\" />\n          </i>\n        );\n      }\n    }\n    return (\n      <div className=\"panel-form-column\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">{this.props.title}</label>\n        </div>\n        {this.state.activated ?\n        <div>\n          <FormattedMessage id=\"tags_editor_no_tags\" defaultMessage=\"Add some tags\"\n            description=\"Tag editor prompt when no tags are found.\">{\n            (add_tags_prompt) => <ChipInput\n              tinode={this.props.tinode}\n              chips={tags}\n              avatarDisabled={true}\n              prompt={add_tags_prompt}\n              tabIndex={this.props.tabIndex}\n              onEnter={this.handleAddTag}\n              onFocusLost={this.handleAddTag}\n              onCancel={this.handleCancel}\n              onChipRemoved={this.handleRemoveTag}\n              filterFunc={this.handleTagInput} />\n          }</FormattedMessage>\n          {this.props.onSubmit || this.props.onCancel ?\n            <div id=\"tag-manager-buttons\" className=\"dialog-buttons panel-form-row\">\n              <button className=\"outline\" onClick={this.handleCancel}>\n                <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n              </button>\n              <button className=\"primary\" onClick={this.handleSubmit}>\n                <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n              </button>\n            </div>\n          : null}\n        </div>\n        :\n        <div className=\"quoted\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.setState({activated: true});}}>\n            <i className=\"material-icons\">edit</i> &nbsp;<FormattedMessage id=\"title_manage_tags\" defaultMessage=\"Manage\"\n              description=\"Section title for the list of tags\" />\n          </a>\n          <>{tags}</>\n        </div>\n      }\n      </div>\n    );\n  }\n};\n","// Widget for editing topic description.\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarCrop from './avatar-crop.jsx';\nimport AvatarUpload from './avatar-upload.jsx';\nimport InPlaceEdit from './in-place-edit.jsx';\nimport TagManager from './tag-manager.jsx';\n\nimport { AVATAR_SIZE, MAX_AVATAR_BYTES, MAX_EXTERN_ATTACHMENT_SIZE,\n  MAX_INBAND_ATTACHMENT_SIZE, MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH } from '../config.js';\nimport { imageScaled, blobToBase64, makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, theCard } from '../lib/utils.js';\n\nexport default class TopicDescEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    const acs = topic.getAccessMode();\n    this.state = {\n      isMe: Tinode.isMeTopicName(this.props.topic),\n      owner: acs && acs.isOwner(),\n      fullName: topic.public ? topic.public.fn : undefined,\n      private: topic.private ? topic.private.comment : null,\n      description: topic.public ? topic.public.note : undefined,\n      avatar: makeImageUrl(topic.public ? topic.public.photo : null),\n      tags: topic.tags() || [],\n      newAvatar: null,\n      newAvatarMime: null\n    };\n\n    this.previousOnTags = null;\n\n    this.tnNewTags = this.tnNewTags.bind(this);\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\n    this.handleImageUpdated = this.handleImageUpdated.bind(this);\n    this.handleAvatarCropped = this.handleAvatarCropped.bind(this);\n    this.handlePrivateUpdate = this.handlePrivateUpdate.bind(this);\n    this.handleDescriptionUpdate = this.handleDescriptionUpdate.bind(this);\n    this.uploadAvatar = this.uploadAvatar.bind(this);\n    this.handleAvatarCropCancel = this.handleAvatarCropCancel.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n  }\n\n  componentDidMount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    this.previousOnTags = topic.onTagsUpdated;\n    topic.onTagsUpdated = this.tnNewTags;\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    topic.onTagsUpdated = this.previousOnTags;\n  }\n\n  tnNewTags(tags) {\n    this.setState({tags: tags});\n  }\n\n  handleFullNameUpdate(fn) {\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\n    if (fn && this.state.fullName !== fn) {\n      this.setState({fullName: fn});\n      this.props.onUpdateTopicDesc(this.props.topic, theCard(fn, null));\n    }\n  }\n\n  handlePrivateUpdate(comment) {\n    comment = comment.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.private !== comment) {\n      this.setState({private: comment});\n      this.props.onUpdateTopicDesc(this.props.topic, null, comment || Tinode.DEL_CHAR);\n    }\n  }\n\n  handleDescriptionUpdate(desc) {\n    desc = desc.trim().substring(0, MAX_TOPIC_DESCRIPTION_LENGTH);\n    if (desc) {\n      this.setState({description: desc});\n      this.props.onUpdateTopicDesc(this.props.topic, theCard(null, null, null, desc));\n    }\n  }\n\n  // AvatarUpload widget has changed the avatar: received a new file or deleted the avatar.\n  handleImageUpdated(mime, img) {\n    // This will show the AvatarCropView is img is not null.\n    this.setState({newAvatar: img, newAvatarMime: mime});\n    if (!img) {\n      // Deleting the avatar.\n      this.setState({avatar: null});\n      this.props.onUpdateTopicDesc(this.props.topic, theCard(null, Tinode.DEL_CHAR));\n    }\n  }\n\n  // AvatarCropView calls this method when the user has cropped the image.\n  handleAvatarCropped(mime, blob, width, height) {\n    const url = blob ? URL.createObjectURL(blob) : null;\n    this.setState({avatar: url, newAvatar: null, newAvatarMime: null});\n    if (blob) {\n      this.uploadAvatar(mime, blob, width, height);\n    }\n  }\n\n  // Utility method for converting cropped avatar blob to bytes for sending inband or\n  // for uploading it to the server out of band.\n  uploadAvatar(mime, blob, width, height) {\n    const readyToUpload = (mime, blob, width, height) => {\n      if (blob.size > MAX_AVATAR_BYTES) {\n        // Too large to send inband - uploading out of band and sending as a link.\n        const uploader = this.props.tinode.getLargeFileHelper();\n\n        this.setState({uploading: true});\n        uploader.upload(blob)\n          .then((url) => {\n            this.props.onUpdateTopicDesc(this.props.topic, theCard(null, url));\n          })\n          .catch((err) => {\n            this.props.onError(err, 'err');\n          })\n          .finally(() => {\n            this.setState({uploading: false});\n          });\n      } else {\n        this.setState({uploading: true});\n        // Convert blob to base64-encoded bits.\n        blobToBase64(blob, (unused, base64bits) => {\n          const du = makeImageUrl({data: base64bits, type: mime});\n          this.setState({source: du});\n          this.props.onUpdateTopicDesc(this.props.topic, theCard(null, du));\n          this.setState({uploading: false});\n        });\n      }\n    };\n\n    if (width > AVATAR_SIZE || height > AVATAR_SIZE || width != height) {\n      // Avatar is not square or too large even after cropping. Shrink it and make square.\n      imageScaled(blob, AVATAR_SIZE, AVATAR_SIZE, MAX_EXTERN_ATTACHMENT_SIZE, true,\n        readyToUpload,\n        (err) => {\n          this.props.onError(err, 'err');\n        });\n    } else {\n      readyToUpload(mime, blob, width, height);\n    }\n  }\n\n  handleAvatarCropCancel(img) {\n    this.setState({newAvatar: null, newAvatarMime: null});\n  }\n\n  handleTagsUpdated(tags) {\n    // Check if tags have actually changed.\n    if (arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      return;\n    }\n    this.props.onUpdateTags(tags);\n  }\n\n  render() {\n    if (this.state.newAvatar) {\n      return (\n        <AvatarCrop\n          avatar={this.state.newAvatar}\n          mime={this.state.newAvatarMime}\n          onSubmit={this.handleAvatarCropped}\n          onCancel={this.handleAvatarCropCancel}\n          onError={this.props.onError} />\n      );\n    }\n\n    const editable = this.state.isMe || this.state.owner;\n\n    return (\n      <>\n      <div className=\"panel-form-column\">\n        <center>\n          <AvatarUpload\n            tinode={this.props.tinode}\n            avatar={this.state.avatar}\n            readOnly={!editable}\n            uid={this.props.topic}\n            title={this.state.fullName}\n            onImageUpdated={this.handleImageUpdated}\n            onError={this.props.onError} />\n        </center>\n        {this.state.isMe ?\n          <div className=\"group\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n              description=\"Label for full name editing\" />\n            </label>\n            <div>\n              <FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n                description=\"Input placeholder for person's full name\">{\n                (full_name_placeholder) => <InPlaceEdit\n                  placeholder={full_name_placeholder}\n                  value={this.state.fullName}\n                  required={true}\n                  onFinished={this.handleFullNameUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n        :\n          <>\n            <div className=\"group\">\n              <div><label className=\"small\">\n                <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                  description=\"Label for editing topic name\" />\n              </label></div>\n              <div>\n                <FormattedMessage id=\"topic_name_editing_placeholder\" defaultMessage=\"Freeform name of the group\"\n                  description=\"Prompt for entering topic name\">{\n                  (group_name_placeholder) => <InPlaceEdit\n                    placeholder={group_name_placeholder}\n                    readOnly={!editable}\n                    value={this.state.fullName}\n                    required={true}\n                    onFinished={this.handleFullNameUpdate} />\n                }</FormattedMessage>\n              </div>\n            </div>\n            <div className=\"group\">\n              <div>\n                <label className=\"small\">\n                  <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                    description=\"Label for editing 'private'\" />\n                </label>\n              </div>\n              <div>\n                <FormattedMessage id=\"private_editing_placeholder\" defaultMessage=\"Visible to you only\"\n                  description=\"Placeholder for editing 'private'\">{\n                  (private_placeholder) => <InPlaceEdit\n                    placeholder={private_placeholder}\n                    value={this.state.private}\n                    onFinished={this.handlePrivateUpdate} />\n                }</FormattedMessage>\n              </div>\n            </div>\n          </>\n        }\n        {editable || this.state.description ?\n          <div className=\"group\">\n            <div><label className=\"small\">\n              <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                description=\"Label for editing topic description\" />\n            </label></div>\n            <div>\n              <FormattedMessage id=\"description_editing_placeholder\"\n                defaultMessage=\"Description (optional)\"\n                description=\"Placeholder for editing topic description\">{\n                (private_placeholder) => <InPlaceEdit\n                  placeholder={private_placeholder}\n                  readOnly={!editable}\n                  value={this.state.description}\n                  multiline={2}\n                  onFinished={this.handleDescriptionUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n          : null\n        }\n      </div>\n      {editable ?\n        <>\n          <div className=\"hr\" />\n          <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (search & discovery)\"\n            description=\"Section title for TagManager\">{\n              (title_tag_manager) => <TagManager\n                tinode={this.props.tinode}\n                title={title_tag_manager}\n                activated={false}\n                tags={this.state.tags}\n                onSubmit={this.handleTagsUpdated} />\n          }</FormattedMessage>\n        </>\n        : null\n      }\n      </>\n    );\n  }\n};\n","// View for editing topic (including 'me' topic) parameters.\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport TopicDescEdit from '../widgets/topic-desc-edit.jsx';\n\nimport { arrayEqual, asEmail, asPhone } from '../lib/utils.js';\n\nexport default class TopicCommon extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    const acs = topic.getAccessMode();\n    this.state = {\n      isMe: this.props.topic == 'me',\n      owner: acs && acs.isOwner(),\n      credentials: (topic.getCredentials ? topic.getCredentials() : null) || [],\n      addCredActive: false,\n      addCredInvalid: false,\n      newCred: '',\n      tags: []\n    };\n\n    this.previousTagsUpdated = undefined;\n\n    this.onTagsUpdated = this.onTagsUpdated.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.tnCredsUpdated = this.tnCredsUpdated.bind(this);\n    this.handleCredChange = this.handleCredChange.bind(this);\n    this.handleCredKeyDown = this.handleCredKeyDown.bind(this);\n    this.handleCredEntered = this.handleCredEntered.bind(this);\n  }\n\n  // No need to separately handle component mount.\n  componentDidUpdate(props) {\n    const topic = this.props.tinode.getTopic(props.topic);\n    if (!topic) {\n      return;\n    }\n\n    topic.onCredsUpdated = this.tnCredsUpdated;\n\n    if (topic.onTagsUpdated != this.onTagsUpdated) {\n      if (topic.getType() == 'grp') {\n        this.previousTagsUpdated = topic.onTagsUpdated;\n        topic.onTagsUpdated = this.onTagsUpdated;\n      } else {\n        this.previousTagsUpdated = undefined;\n      }\n    }\n\n    if (this.state.topic != props.topic) {\n      this.setState({topic: props.topic});\n    }\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    topic.onCredsUpdated = undefined;\n    topic.onTagsUpdated = this.previousTagsUpdated;\n  }\n\n  tnCredsUpdated(creds) {\n    this.setState({credentials: creds || []});\n  }\n\n  handleCredChange(e) {\n    this.setState({newCred: e.target.value, addCredInvalid: false});\n  }\n\n  handleCredKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({newCred: '', addCredActive: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleCredEntered(e);\n    }\n  }\n\n  handleCredEntered(e) {\n    const value = this.state.newCred.trim();\n    if (!value) {\n      this.setState({addCredActive: false, addCredInvalid: false});\n      return;\n    }\n\n    let val = asPhone(value);\n    let method;\n    if (val) {\n      method = 'tel';\n    } else {\n      val = asEmail(value);\n      if (val) {\n        method = 'email';\n      }\n    }\n    if (method) {\n      this.props.onCredAdd(method, val);\n      this.setState({addCredActive: false, newCred: ''});\n    } else {\n      this.setState({addCredInvalid: true});\n    }\n  }\n\n  // Server informs that the tags have been updated.\n  onTagsUpdated(tags) {\n    this.setState({tags: tags});\n\n    if (this.previousTagsUpdated && this.previousTagsUpdated != this.onTagsUpdated) {\n      this.previousTagsUpdated(tags);\n    }\n  }\n\n  // Request server to change tags.\n  handleTagsUpdated(tags) {\n    if (!arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      this.props.onTopicTagsUpdateRequest(this.props.topic, tags);\n    }\n  }\n\n  render() {\n    const credentials = [];\n    if (this.state.isMe) {\n      this.state.credentials.map((cred) => {\n        credentials.push(\n          <div key={cred.meth + \":\" + cred.val + \":\" + cred.done}>{cred.meth}: <tt>{cred.val}</tt>\n            <span> {!cred.done ?\n              <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredConfirm(cred.meth, cred.val);}}>\n                <FormattedMessage id=\"validate_credential_action\" defaultMessage=\"confirm\"\n                  description=\"Validate credentail call to action\" />\n              </a>\n            : null} <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredDelete(cred.meth, cred.val);}}><i\n              className=\"material-icons gray\">delete_outline</i></a></span>\n          </div>\n        );\n      });\n    }\n\n    return (\n      <div className=\"scrollable-panel\">\n        <TopicDescEdit\n          tinode={this.props.tinode}\n          topic={this.props.topic}\n          onUpdateTopicDesc={this.props.onUpdateTopicDesc}\n          onUpdateTags={this.handleTagsUpdated}\n          onError={this.props.onError} />\n        {this.state.isMe ?\n          <>\n            <div className=\"hr\" />\n            <div className=\"panel-form-column\">\n              <label className=\"small\">\n                <FormattedMessage id=\"label_user_contacts\" defaultMessage=\"Contacts:\"\n                description=\"Label for user contacts\" />\n              </label>\n              <div className=\"quoted\">\n                {credentials}\n                {this.state.addCredActive ?\n                  <input type=\"text\" value={this.state.value}\n                    className={this.state.addCredInvalid ? 'invalid' : null}\n                    placeholder=\"Phone number or email\" required=\"required\" autoFocus\n                    onChange={this.handleCredChange} onKeyDown={this.handleCredKeyDown} onBlur={this.handleCredEntered} />\n                  : null}\n                <div>\n                  <a href=\"#\" onClick={(e) => {e.preventDefault(); this.setState({addCredActive: true});}}>\n                    <i className=\"material-icons\">add</i>\n                    <FormattedMessage id=\"button_add_another\" defaultMessage=\"Add another\" description=\"Call to action [+ add another]\" />\n                  </a></div>\n              </div>\n            </div>\n          </>\n        : null\n      }\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport InPlaceEdit from './in-place-edit.jsx';\n\nimport { NO_ACCESS_MODE } from '../config.js';\n\nconst messages = defineMessages({\n  clear_messages: {\n    id: 'action_clear_messages',\n    defaultMessage: 'Clear Messages',\n    description: 'Flat button [Clear Messages] (soft-delete messages)'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n  delete_messages: {\n    id: 'action_delete_messages',\n    defaultMessage: 'Clear Messages for All',\n    description: 'Flat button [Clear for All] (hard-delete all messages)'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  topic_delete: {\n    id: 'topic_delete',\n    defaultMessage: 'Delete Conversation',\n    description: 'Alert title when deleting the topic.'\n  },\n  topic_delete_warning: {\n    id: 'topic_delete_warning',\n    defaultMessage: 'Are you sure you want to delete this conversation? It cannot be undone.',\n    description: 'Alert warning when deleting entire topic'\n  },\n  leave_chat: {\n    id: 'action_leave_chat',\n    defaultMessage: 'Leave Conversation',\n    description: 'Flat button [Leave Conversation]'\n  },\n  leave_chat_warning: {\n    id: 'leave_chat_warning',\n    defaultMessage: 'Are you sure you want to leave this conversation?',\n    description: 'Alert dialog warning when unsubscribing from a chat.'\n  },\n  block_contact: {\n    id: 'action_block_contact',\n    defaultMessage: \"Block Contact\",\n    description: \"Flat button [Block Contact]\"\n  },\n  block_contact_warning: {\n    id: 'block_contact_warning',\n    defaultMessage: 'Are you sure you want to block this contact?',\n    description: 'Alert dialog warning when blocking a contact.'\n  },\n  report_chat: {\n    id: 'action_report_chat',\n    defaultMessage: 'Report Conversation',\n    description: 'Flat button [Report Group]'\n  },\n  report_chat_warning: {\n    id: 'report_chat_warning',\n    defaultMessage: 'Are you sure you want to block and report this conversation?',\n    description: 'Alert dialog warning when reporting a conversation for abuse'\n  },\n  other_user: {\n    id: 'label_other_user',\n    defaultMessage: 'Other',\n    description: 'Label for the other user when the user is unnamed'\n  },\n});\n\nclass TopicSecurity extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleDeleteTopic = this.handleDeleteTopic.bind(this);\n    this.handleDeleteMessages = this.handleDeleteMessages.bind(this);\n    this.handleLeave = this.handleLeave.bind(this);\n    this.handleBlock = this.handleBlock.bind(this);\n    this.handleReport = this.handleReport.bind(this);\n  }\n\n  handleDeleteTopic(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.topic_delete), // title\n      formatMessage(messages.topic_delete_warning), // content\n      (() => { this.props.onDeleteTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleDeleteMessages(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(this.props.deleter ? messages.delete_messages : messages.clear_messages), // title\n      formatMessage(this.props.deleter ? messages.delete_messages_warning : messages.clear_messages_warning), // content\n      (() => { this.props.onDeleteMessages(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleLeave(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.leave_chat), // title\n      formatMessage(messages.leave_chat_warning), // content\n      (() => { this.props.onLeaveTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleBlock(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.block_contact), // title\n      formatMessage(messages.block_contact_warning), // content\n      (() => { this.props.onBlockTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleReport(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.report_chat), // title\n      formatMessage(messages.report_chat_warning), // content\n      (() => { this.props.onReportTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          {!this.props.channel ?\n            <a href=\"#\" className=\"flat-button\" onClick={this.handleDeleteMessages}>\n              <i className=\"material-icons\">delete_outline</i> &nbsp;{\n                formatMessage(this.props.deleter ? messages.delete_messages : messages.clear_messages)\n              }\n            </a>\n            :\n            null\n          }\n          {this.props.owner ?\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleDeleteTopic}>\n              <i className=\"material-icons\">delete</i> &nbsp;{formatMessage(messages.topic_delete)}\n            </a>\n            :\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleLeave}>\n              <i className=\"material-icons\">exit_to_app</i> &nbsp;{formatMessage(messages.leave_chat)}\n            </a>\n          }\n          {!this.props.groupTopic ?\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleBlock}>\n              <i className=\"material-icons\">block</i> &nbsp;{formatMessage(messages.block_contact)}\n            </a>\n            :\n            null\n          }\n          {!this.props.owner ?\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleReport}>\n              <i className=\"material-icons\">report</i> &nbsp;{formatMessage(messages.report_chat)}\n            </a>\n            :\n            null\n          }\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          {this.props.groupTopic ?\n            <>\n              <div className=\"group\">\n                <label>\n                  <FormattedMessage id=\"label_your_permissions\" defaultMessage=\"Your permissions:\"\n                    description=\"Label for current user permissions\" />\n                </label> <tt className=\"clickable\"\n                  onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('want')}}>\n                  {this.props.access}\n                </tt>\n              </div>\n              <div className=\"group\">\n                <div>\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_default_access_mode\" defaultMessage=\"Default access mode:\"\n                    description=\"Label for default access mode\" />\n                  </label>\n                </div>\n                <div className=\"quoted\">\n                  <div>Auth: <tt className=\"clickable\"\n                    onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('auth')}}>{this.props.auth}</tt>\n                  </div>\n                  <div>Anon: <tt className=\"clickable\"\n                    onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('anon')}}>{this.props.anon}</tt>\n                  </div>\n                </div>\n              </div>\n            </>\n            :\n            <div className=\"group\">\n              <div>\n                <label className=\"small\">\n                  <FormattedMessage id=\"label_permissions\" defaultMessage=\"Permissions:\"\n                    description=\"Section title\" />\n                </label>\n              </div>\n              <div className=\"quoted\">\n                <div>\n                  <FormattedMessage id=\"label_you\" defaultMessage=\"You:\"\n                    description=\"Label for the current user\" /> <tt className=\"clickable\"\n                    onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('want')}}>\n                    {this.props.access}\n                  </tt>\n                </div>\n                <div>{this.props.fullName ? this.props.fullName : formatMessage(messages.other_user)}:\n                  &nbsp;<tt className=\"clickable\"\n                    onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('given')}}>\n                    {this.props.modeGiven2}\n                  </tt>\n                </div>\n              </div>\n            </div>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(TopicSecurity);\n","// InfoView: panel with topic/user info.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport BadgeList from '../widgets/badge-list.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport ContactList from '../widgets/contact-list.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupManager from '../widgets/group-manager.jsx';\nimport MenuCancel from '../widgets/menu-cancel.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\nimport TopicCommon from '../widgets/topic-common.jsx';\nimport TopicSecurity from '../widgets/topic-security.jsx';\n\nimport { MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH, NO_ACCESS_MODE } from '../config.js';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, theCard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  info: {\n    id: 'panel_title_info',\n    description: 'Title for InfoView',\n    defaultMessage: 'Info'\n  },\n  general: {\n    id: 'panel_title_general',\n    description: 'Title for TopicCommon.',\n    defaultMessage: 'General'\n  },\n  security: {\n    id: 'panel_title_security',\n    description: 'Title for TopicSecirity and AccSecurity.',\n    defaultMessage: 'Security'\n  },\n  members: {\n    id: 'panel_title_members',\n    description: 'Title for managing group members view.',\n    defaultMessage: 'Members'\n  },\n  crop: {\n    id: 'panel_title_crop',\n    description: 'Title for AvatarCropView.',\n    defaultMessage: 'Drag to Adjust'\n  },\n  perm_want: {\n    id: 'requested_permissions',\n    defaultMessage: 'Requested',\n    description: 'Title for permissions'\n  },\n  perm_given: {\n    id: 'granted_permissions',\n    defaultMessage: 'Granted',\n    description: 'Title for permissions'\n  },\n  perm_auth: {\n    id: 'permissions_authenticated',\n    defaultMessage: 'Authenticated',\n    description: 'Title for editing default authenticated permissions'\n  },\n  perm_anon: {\n    id: 'permissions_anonymous',\n    defaultMessage: 'Anonymous',\n    description: 'Title for editing default anonymous permissions'\n  },\n  perm_user: {\n    id: 'permissions_user',\n    defaultMessage: 'User\\'s Permissions',\n    description: 'Title for editing user\\'s permissions'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n});\n\nfunction _clip(str, length) {\n  return str && str.substring(0, length);\n}\n\nclass InfoView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      topic: null,\n      owner: false,\n      admin: false,\n      sharer: false,\n      deleter: false,\n      muted: false,\n      address: null,\n      groupTopic: undefined,\n      channel: undefined,\n      fullName: undefined,\n      description: undefined,\n      avatar: null,\n      private: null,\n      selectedContact: null,\n      access: null,\n      modeGiven: null,\n      modeWant: null,\n      modeGiven2: null, // P2P topic, the other user mode given\n      modeWant2: null,  // P2P topic, the other user mode want\n      auth: null,\n      anon: null,\n      contactList: [],\n      trustedBadges: [],\n      previousMetaDesc: undefined,\n      previousSubsUpdated: undefined,\n    };\n\n    this.resetSubs = this.resetSubs.bind(this);\n    this.resetDesc = this.resetDesc.bind(this);\n    this.resetTags = this.resetTags.bind(this);\n    this.onMetaDesc = this.onMetaDesc.bind(this);\n    this.onSubsUpdated = this.onSubsUpdated.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleMuted = this.handleMuted.bind(this);\n    this.handleUnarchive = this.handleUnarchive.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleShowAddMembers = this.handleShowAddMembers.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleMemberSelected = this.handleMemberSelected.bind(this);\n    this.handleContextMenu = this.handleContextMenu.bind(this);\n    this.handleBackNavigate = this.handleBackNavigate.bind(this);\n  }\n\n  // No need to separately handle component mount.\n  componentDidUpdate(props) {\n    const topic = this.props.tinode.getTopic(props.topic);\n    if (!topic) {\n      return;\n    }\n\n    if (this.onMetaDesc != topic.onMetaDesc) {\n      this.previousMetaDesc = topic.onMetaDesc;\n      topic.onMetaDesc = this.onMetaDesc;\n\n      this.previousSubsUpdated = topic.onSubsUpdated;\n      topic.onSubsUpdated = this.onSubsUpdated;\n    }\n\n    if (this.state.topic != props.topic) {\n      this.setState({topic: props.topic});\n      this.resetDesc(topic, props);\n      this.resetSubs(topic, props);\n      this.resetTags(topic);\n    }\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.setState({topic: null});\n    topic.onMetaDesc = this.previousMetaDesc;\n    topic.onSubsUpdated = this.previousSubsUpdated;\n  }\n\n  resetSubs(topic, props) {\n    const newState = {contactList: []};\n    if (topic.getType() == 'p2p') {\n      // Fetch the other party in the p2p conversation.\n      // Topic may not be ready yet, so check if user is found.\n      const user2 = topic.subscriber(props.topic);\n      if (user2) {\n        newState.modeGiven2 = user2.acs.getGiven();\n        newState.modeWant2 = user2.acs.getWant();\n      } else {\n        newState.modeGiven2 = NO_ACCESS_MODE;\n        newState.modeWant2 = NO_ACCESS_MODE;\n      }\n    } else {\n      topic.subscribers((sub) => {\n        newState.contactList.push(sub);\n      }, this);\n    }\n\n    this.setState(newState);\n  }\n\n  resetDesc(topic, props) {\n    const defacs = topic.getDefaultAccess() || {};\n    const acs = topic.getAccessMode();\n\n    const badges = [];\n    if (topic.trusted) {\n      for (const [key, val] of Object.entries(topic.trusted)) {\n        if (val) {\n          badges.push(key);\n        }\n      }\n    }\n\n    this.setState({\n      owner: acs && acs.isOwner(),\n      admin: acs && acs.isAdmin(),\n      sharer: acs && acs.isSharer(),\n      deleter: acs && acs.isDeleter(),\n      muted: acs && acs.isMuted(),\n\n      fullName: _clip(topic.public ? topic.public.fn : undefined, MAX_TITLE_LENGTH),\n      description: _clip(topic.public ? topic.public.note : undefined, MAX_TOPIC_DESCRIPTION_LENGTH),\n      avatar: makeImageUrl(topic.public ? topic.public.photo : null),\n      trustedBadges: badges,\n      private: _clip(topic.private ? topic.private.comment : null, MAX_TITLE_LENGTH),\n      archived: topic.isArchived(),\n      address: topic.name,\n      groupTopic: topic.isGroupType(),\n      channel: topic.isChannelType() || topic.chan,\n      access: acs ? acs.getMode() : undefined,\n      modeGiven: acs ? acs.getGiven() : undefined,\n      modeWant: acs ? acs.getWant() : undefined,\n      auth: defacs.auth,\n      anon: defacs.anon\n    });\n  }\n\n  resetTags(topic) {\n    if (topic.getType() != 'grp') {\n      return;\n    }\n\n    const acs = topic.getAccessMode();\n    if (acs && acs.isOwner()) {\n      // Requesting tags: owner is editing the topic.\n      topic.getMeta(topic.startMetaQuery().withTags().build());\n    }\n  }\n\n  onMetaDesc(desc) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetDesc(topic, this.props);\n\n    if (this.previousMetaDesc && this.previousMetaDesc != this.onMetaDesc) {\n      this.previousMetaDesc(desc);\n    }\n  }\n\n  onSubsUpdated(subs) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetSubs(topic, this.props);\n\n    if (this.previousSubsUpdated && this.previousSubsUpdated != this.onSubsUpdated) {\n      this.previousSubsUpdated(subs);\n    }\n  }\n\n  handleImageChanged(img) {\n    this.setState({avatar: img});\n    this.props.onTopicDescUpdate(this.props.topic, theCard(null, img || Tinode.DEL_CHAR), null);\n  }\n\n  handleMuted(ignored, checked) {\n    this.setState({muted: checked});\n    this.props.onChangePermissions(this.props.topic, checked ? '-P' : '+P');\n  }\n\n  handleUnarchive(ignored, ignored2) {\n    this.props.onTopicUnArchive(this.props.topic);\n  }\n\n  handlePermissionsChanged(which, perm) {\n    switch (which) {\n      case 'auth':\n        this.props.onTopicDescUpdateRequest(this.props.topic, null, null, {auth: perm});\n        break;\n      case 'anon':\n        this.props.onTopicDescUpdateRequest(this.props.topic, null, null, {anon: perm});\n        break;\n      case 'mode':\n      case 'want':\n        this.props.onChangePermissions(this.props.topic, perm);\n        break;\n      case 'given':\n        this.props.onChangePermissions(this.props.topic, perm, this.props.topic);\n        break;\n      case 'user':\n        this.props.onChangePermissions(this.props.topic, perm, this.state.userPermissionsEdited);\n        break;\n    }\n\n    this.handleBackNavigate();\n  }\n\n  handleLaunchPermissionsEditor(which, uid) {\n    const {formatMessage} = this.props.intl;\n    let toEdit, toCompare, toSkip, titleEdit, titleCompare, userTitle, userAvatar;\n    switch (which) {\n      case 'mode':\n        toEdit = this.state.access;\n        break;\n      case 'want':\n        toEdit = this.state.modeWant;\n        toCompare = this.state.modeGiven;\n        if (this.state.owner) {\n          // Don't allow owner to unset 'O' permission. All other permissions are OK.\n          toSkip = 'O';\n        } else {\n          // Allow accepting any of 'ASDO' permissions but don't allow asking for them.\n          toSkip = Tinode.AccessMode.encode(Tinode.AccessMode.diff('ASDO', this.state.modeGiven));\n          if (this.state.channel) {\n            // Channels are read-only.\n            toSkip += 'W';\n          }\n        }\n        titleEdit = formatMessage(messages.perm_want);\n        titleCompare = formatMessage(messages.perm_given);\n        break;\n      case 'given':\n        toEdit = this.state.modeGiven2;\n        toCompare = this.state.modeWant2;\n        toSkip = this.state.groupTopic ? (this.state.owner ? '' : 'O') : 'ASDO';\n        titleEdit = formatMessage(messages.perm_given);\n        titleCompare = formatMessage(messages.perm_want);\n        break;\n      case 'auth':\n        toEdit = this.state.auth;\n        toSkip = 'O';\n        break;\n      case 'anon':\n        toEdit = this.state.anon;\n        toSkip = 'O';\n        break;\n      case 'user': {\n        const topic = this.props.tinode.getTopic(this.props.topic);\n        if (!topic) {\n          return;\n        }\n        const user = topic.subscriber(uid);\n        if (!user || !user.acs) {\n          return;\n        }\n        toEdit = user.acs.getGiven();\n        toCompare = user.acs.getWant();\n        toSkip = this.state.owner ? '' : 'O';\n        titleEdit = formatMessage(messages.perm_given);\n        titleCompare = formatMessage(messages.perm_want);\n        if (user.public) {\n          userTitle = user.public.fn;\n          userAvatar = user.public.photo;\n        }\n        break;\n      }\n      default:\n        console.error(\"Unknown permission editing mode '\" + which + \"'\");\n        return;\n    }\n    this.setState({\n      userPermissionsEdited: uid,\n      userPermissionsTitle: userTitle,\n      userPermissionsAvatar: userAvatar,\n      editedPermissions: toEdit,\n      immutablePermissions: toCompare,\n      editedPermissionsTitle: titleEdit,\n      immutablePermissionsTitle: titleCompare,\n      editedPermissionsSkipped: toSkip,\n    });\n    this.props.onNavigate(`perm/${which}`);\n  }\n\n  handleShowAddMembers(e) {\n    e.preventDefault();\n    this.props.onInitFind();\n    this.props.onNavigate('members');\n  }\n\n  handleMemberUpdateRequest(members, added, removed) {\n    this.props.onMemberUpdateRequest(this.props.topic, added, removed);\n    this.props.onNavigate('info');\n  }\n\n  handleMemberSelected(uid) {\n    this.setState({selectedContact: uid});\n  }\n\n  handleBackNavigate() {\n    const args = (this.props.panel || 'info').split('/');\n    if (args[0] == 'info') {\n      this.props.onNavigate(null);\n    } else if (args[0] == 'perm') {\n      if (args[1] == 'user') {\n        this.props.onNavigate('info');\n      } else {\n        this.props.onNavigate('security');\n      }\n    } else {\n      this.props.onNavigate('info');\n    }\n  }\n\n  handleContextMenu(params) {\n    const {formatMessage} = this.props.intl;\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    const user = topic.subscriber(params.topicName);\n    if (!user || !user.acs) {\n      return;\n    }\n\n    const isMe = this.props.tinode.isMe(params.topicName);\n    const menuItems = [\n      {title: formatMessage(messages.edit_permissions), handler: () => {\n        this.handleLaunchPermissionsEditor(isMe ? 'want' : 'user', params.topicName);\n      }}\n    ];\n    if (!isMe) {\n      menuItems.push('member_delete');\n    }\n    menuItems.push(user.acs.isMuted() ? 'member_unmute' : 'member_mute');\n    if (!isMe) {\n      menuItems.push(user.acs.isJoiner() ? 'member_block' : 'member_unblock');\n    }\n    this.props.showContextMenu({\n      topicName: this.props.topic,\n      x: params.x,\n      y: params.y,\n      user: params.topicName}, menuItems);\n  }\n\n  render() {\n    const args = (this.props.panel || 'info').split('/');\n    const view = args[0];\n    args.shift();\n\n    const {formatMessage} = this.props.intl;\n    const panelTitle = formatMessage((view == 'perm' ? messages['perm_' + args[0]] : messages[view])\n      || messages['info']);\n\n    return (\n      <div id=\"info-view\">\n        <div className=\"caption-panel\" id=\"info-caption-panel\">\n          <div className=\"panel-title\" id=\"info-title\">{panelTitle}</div>\n          <div>\n            <MenuCancel onCancel={this.handleBackNavigate} />\n          </div>\n        </div>\n        {this.props.displayMobile ?\n          <ErrorPanel\n            level={this.props.errorLevel}\n            text={this.props.errorText}\n            onClearError={this.props.onError} /> : null}\n        {view == 'members' ?\n          <GroupManager\n            tinode={this.props.tinode}\n            members={this.state.contactList}\n            requiredMember={this.props.myUserId}\n            keepInitialMembers={!this.state.admin && !this.state.owner}\n            myUserId={this.props.myUserId}\n            contacts={this.props.searchableContacts}\n            onCancel={this.handleBackNavigate}\n            onSubmit={this.handleMemberUpdateRequest} />\n          :\n        view == 'perm' && args.length > 0 ?\n          <PermissionsEditor\n            tinode={this.props.tinode}\n            mode={this.state.editedPermissions}\n            compare={this.state.immutablePermissions}\n            skip={this.state.editedPermissionsSkipped}\n            modeTitle={this.state.editedPermissionsTitle}\n            compareTitle={this.state.immutablePermissionsTitle}\n            userTitle={this.state.userPermissionsTitle}\n            item={this.state.userPermissionsEdited}\n            userAvatar={this.state.userPermissionsAvatar}\n            onSubmit={(mode) => this.handlePermissionsChanged(args[0], mode)}\n            onCancel={this.handleBackNavigate} />\n          :\n        view == 'general' ?\n          <TopicCommon\n            tinode={this.props.tinode}\n            topic={this.props.topic}\n            onCredAdd={this.props.onCredAdd}\n            onTopicTagsUpdateRequest={this.props.onTopicTagsUpdateRequest}\n            onCredConfirm={this.props.onCredConfirm}\n            onCredDelete={this.props.onCredDelete}\n            onUpdateTopicDesc={this.props.onTopicDescUpdateRequest}\n            onError={this.props.onError} />\n          :\n        view == 'security' ?\n          <TopicSecurity\n            topic={this.props.topic}\n            owner={this.state.owner}\n            admin={this.state.admin}\n            sharer={this.state.sharer}\n            deleter={this.state.deleter}\n            muted={this.state.muted}\n\n            groupTopic={this.state.groupTopic}\n            channel={this.state.channel}\n            access={this.state.access}\n            modeGiven={this.state.modeGiven}\n            modeWant={this.state.modeWant}\n            modeGiven2={this.state.modeGiven2}\n            modeWant2={this.state.modeWant2}\n            auth={this.state.auth}\n            anon={this.state.anon}\n\n            onShowAlert={this.props.onShowAlert}\n            onDeleteMessages={this.props.onDeleteMessages}\n            onLeaveTopic={this.props.onLeaveTopic}\n            onBlockTopic={this.props.onBlockTopic}\n            onReportTopic={this.props.onReportTopic}\n            onLaunchPermissionsEditor={this.handleLaunchPermissionsEditor}\n            onNavigate={this.props.onNavigate} />\n          :\n          <div id=\"info-view-content\" className=\"scrollable-panel\">\n            <div className=\"panel-form-column\">\n              <a href=\"#\" className=\"flat-button float-right\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('general');}}>\n                <i className=\"material-icons\">edit</i>&nbsp;\n                <FormattedMessage id=\"button_edit\" defaultMessage=\"Edit\" description=\"Call to action [Edit]\" />\n              </a>\n              <center>\n                <AvatarUpload\n                  tinode={this.props.tinode}\n                  avatar={this.state.avatar}\n                  readOnly={true}\n                  uid={this.props.topic}\n                  title={this.state.fullName} />\n              </center>\n              <div className=\"group\">\n                <div><label className=\"small\">\n                  <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                    description=\"Label for editing topic name\" />\n                </label></div>\n                <div className=\"large ellipsized\">{this.state.fullName}\n                {this.state.channel ? <img src=\"/img/channel.png\" className=\"channel\" alt=\"channel\" /> : null}</div>\n              </div>\n              {this.state.private ?\n                <div className=\"group\">\n                  <div><label className=\"small\">\n                    <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                      description=\"Label for editing 'private'\" />\n                  </label></div>\n                  <div className=\"large ellipsized\">{this.state.private}</div>\n                </div>\n                : null\n              }\n              <div className=\"group\">\n                <label className=\"small\"><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n                  description=\"Label for user address (ID)\" /></label>&nbsp;\n                <tt>{this.state.address}</tt>\n              </div>\n              <div className=\"group\">\n                <BadgeList trustedBadges={this.state.trustedBadges} />\n              </div>\n              {this.state.description ?\n                <div className=\"group\">\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                      description=\"Label for editing topic description\" />\n                  </label>\n                  <div>{this.state.description}</div>\n                </div> : null}\n            </div>\n            <div className=\"hr\" />\n            <div className=\"panel-form-row\">\n              <label>\n                <FormattedMessage id=\"label_muting_topic\" defaultMessage=\"Muted:\"\n                  description=\"Label for Muting/unmuting the topic\" />\n              </label>\n              <CheckBox name=\"P\" checked={this.state.muted} onChange={this.handleMuted} />\n            </div>\n            {this.state.archived ?\n              <div className=\"panel-form-row\">\n                <label>\n                  <FormattedMessage id=\"label_unarchive_topic\" defaultMessage=\"Archived:\"\n                    description=\"Label for unarchiving the topic\" />\n                </label>\n                <CheckBox name=\"archived\" checked={true} onChange={this.handleUnarchive} />\n              </div>\n              :\n              null\n            }\n            <div className=\"hr\" />\n            <div className=\"panel-form-row\">\n              <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('security');}}>\n                <i className=\"material-icons\">security</i>&nbsp;<FormattedMessage id=\"button_security\"\n                  defaultMessage=\"Security\" description=\"Navigaton button for security panel.\" />\n              </a>\n            </div>\n            {this.state.groupTopic && this.state.sharer ?\n              <>\n                <div className=\"hr\" />\n                <div className=\"panel-form-row\">\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_group_members\" defaultMessage=\"Group members:\"\n                      description=\"Section title or label\" />\n                  </label>\n                </div>\n                <div className=\"panel-form-row\">\n                  <a href=\"#\" className=\"flat-button\" onClick={this.handleShowAddMembers}>\n                    <i className=\"material-icons\">person_add</i> &nbsp;<FormattedMessage id=\"button_add_members\"\n                      defaultMessage=\"Add members\" description=\"Flat button [Add members] (to topic)\" />\n                  </a>\n                </div>\n                <FormattedMessage id=\"group_has_no_members\" defaultMessage=\"No members\"\n                  description=\"Shown in place of group members\">{\n                  (no_members) => <ContactList\n                    tinode={this.props.tinode}\n                    contacts={this.state.contactList}\n                    myUserId={this.props.myUserId}\n                    emptyListMessage={no_members}\n                    topicSelected={this.state.selectedContact}\n                    showOnline={false}\n                    showUnread={false}\n                    showMode={true}\n                    noScroll={true}\n                    onTopicSelected={this.handleMemberSelected}\n                    showContextMenu={this.state.admin ? this.handleContextMenu : false}\n                  />\n                }</FormattedMessage>\n              </>\n              :\n              null\n            }\n          </div>\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(InfoView);\n","// File uload/download progress indicator with a cancel inside.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class FileProgress extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"uploader\">\n        <div><span style={{width: (this.props.progress * 100) + \"%\"}}></span></div>\n        {this.props.progress < 0.999 ?\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n            <i className=\"material-icons\">close</i> <FormattedMessage id=\"action_cancel\"\n              defaultMessage=\"cancel\" description=\"Call to action [cancel]\" />\n          </a>\n          :\n          <FormattedMessage id=\"upload_finishing\" defaultMessage=\"finishing...\"\n            description=\"Notification that upload is finishing\" />\n        }\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\nimport { bytesToHumanSize } from '../lib/strformat.js';\nimport { isUrlRelative, sanitizeUrl } from '../lib/utils.js';\n\nexport default class Attachment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      downloader: null,\n      progress: 0\n    };\n\n    this.downloadFile = this.downloadFile.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  downloadFile(url, filename, mimetype) {\n    if (!url) {\n      this.props.onError(\"Invalid download URL '\" + url + \"'\");\n      return;\n    }\n\n    const downloader = this.props.tinode.getLargeFileHelper();\n    this.setState({downloader: downloader});\n    downloader.download(url, filename, mimetype,\n      (loaded) => {\n        this.setState({progress: loaded / this.props.size});\n      },\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    ).then(() => {\n      this.setState({downloader: null, progress: 0});\n    }).catch((err) => {\n      if (err) {\n        this.props.onError(\"Error downloading file: \" + err.message, 'err');\n      }\n      this.setState({downloader: null, progress: 0});\n    });\n  }\n\n  handleCancel() {\n    if (this.props.uploading) {\n      this.props.onCancelUpload();\n    } else if (this.state.downloader) {\n      this.state.downloader.cancel();\n    }\n  }\n\n  render() {\n    let filename = this.props.filename || 'file_attachment';\n    if (filename.length > 36) {\n      filename = filename.substr(0, 16) + '...' + filename.substr(-16);\n    }\n    let size = this.props.size > 0 ?\n      <span className=\"small gray\">({bytesToHumanSize(this.props.size)})</span> :\n      null;\n\n    // Detect if the download URL is relative or absolute.\n    // If the URL is relative use LargeFileHelper to attach authentication\n    // credentials to the request.\n    let url, helperFunc;\n    if (!this.props.uploading && !this.state.downloader && isUrlRelative(this.props.downloadUrl)) {\n      // Relative URL. Use download helper.\n      url = '#';\n      helperFunc = (e) => {\n        e.preventDefault();\n        this.downloadFile(this.props.downloadUrl, this.props.filename, this.props.mimetype);\n      };\n    } else {\n      url = sanitizeUrl(this.props.downloadUrl);\n      helperFunc = null;\n    }\n    const downloadWidget = <><i className=\"material-icons\">file_download</i> <FormattedMessage id=\"save_attachment\"\n      defaultMessage=\"save\" description=\"Call to save an attachment\" /></>;\n    return (\n      <div className=\"attachment\">\n        <div><i className=\"material-icons big gray\">insert_drive_file</i></div>\n        <div className=\"flex-column\">\n          <div>{filename} {size}</div>\n          {this.props.uploading || this.state.downloader ?\n            <FileProgress progress={this.props.uploading ? this.props.progress : this.state.progress}\n              onCancel={this.handleCancel} />\n            :\n            <div>{url ?\n              <a href={url} download={this.props.filename} onClick={helperFunc}>{downloadWidget}</a>\n              :\n              <span className=\"light-gray\">{downloadWidget}</span>\n            }</div>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n","// Single message, sent or received.\nimport React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport Attachment from './attachment.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\n\nimport { fullFormatter, quoteFormatter } from '../lib/formatters.js';\nimport { sanitizeImageUrl, sanitizeUrl } from '../lib/utils.js';\n\nclass BaseChatMessage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      progress: 0\n    };\n\n    if (props.uploader) {\n      props.uploader.onProgress = this.handleProgress.bind(this);\n    }\n\n    this.handleImagePreview = this.handleImagePreview.bind(this);\n    this.handleFormButtonClick = this.handleFormButtonClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n\n    this.handleQuoteClick = this.handleQuoteClick.bind(this);\n\n    this.formatterContext = {\n      getFormatter: (tp) => { return tp == 'QQ' ? quoteFormatter : null; },\n      formatMessage: props.intl.formatMessage,\n      viewportWidth: props.viewportWidth,\n      authorizeURL: props.tinode.authorizeURL,\n      onImagePreview: this.handleImagePreview,\n      onFormButtonClick: this.handleFormButtonClick,\n      onQuoteClick: this.handleQuoteClick\n    };\n  }\n\n  handleImagePreview(e) {\n    e.preventDefault();\n    this.props.onImagePreview({\n      url: e.target.src,\n      filename: e.target.title,\n      width: e.target.dataset.width,\n      height: e.target.dataset.height,\n      size: e.target.dataset.size,\n      type: e.target.dataset.mime\n    });\n  }\n\n  handleFormButtonClick(e) {\n    e.preventDefault();\n    const data = {\n      seq: this.props.seq\n    };\n    data.resp = {};\n    if (e.target.dataset.name) {\n      data.resp[e.target.dataset.name] = e.target.dataset.val ? e.target.dataset.val :\n        e.target.dataset.val === undefined ? 1 : '' + e.target.dataset.val;\n    }\n    if (e.target.dataset.act == 'url') {\n      data.ref = sanitizeUrl(e.target.dataset.ref) || 'about:blank';\n    }\n    const text = e.target.dataset.title || 'unknown';\n    this.props.onFormResponse(e.target.dataset.act, text, data);\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const menuItems = this.props.received == Tinode.MESSAGE_STATUS_FAILED ? ['menu_item_send_retry'] : [];\n    if (this.props.userIsWriter &&\n        this.props.received > Tinode.MESSAGE_STATUS_FAILED &&\n        this.props.received < Tinode.MESSAGE_STATUS_DEL_RANGE) {\n      menuItems.push('menu_item_reply');\n    }\n    this.props.showContextMenu({ seq: this.props.seq, content: this.props.content,\n                                 y: e.pageY, x: e.pageX, pickReply: this.props.pickReply }, menuItems);\n  }\n\n  handleProgress(ratio) {\n    this.setState({progress: ratio});\n  }\n\n  handleCancelUpload() {\n    this.props.onCancelUpload(this.props.seq, this.props.uploader);\n  }\n\n  handleQuoteClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const replyToSeq = this.props.replyToSeq;\n    if (replyToSeq) {\n      this.props.onQuoteClick(replyToSeq);\n    }\n  }\n\n  render() {\n    const sideClass = this.props.deleted ? 'center' :\n      (this.props.sequence + ' ' + (this.props.response ? 'left' : 'right'));\n    const bubbleClass = (this.props.sequence == 'single' || this.props.sequence == 'last') ? 'bubble tip' : 'bubble';\n    const avatar = this.props.deleted ? null : (this.props.userAvatar || true);\n    const fullDisplay = (this.props.userFrom && this.props.response && !this.props.deleted &&\n      (this.props.sequence == 'single' || this.props.sequence == 'last'));\n\n    let content = this.props.content;\n    const attachments = [];\n    if (this.props.mimeType == Drafty.getContentType() && Drafty.isValid(content)) {\n      Drafty.attachments(content, function(att, i) {\n        if (att.mime == 'application/json') {\n          // Don't show json objects as attachments.\n          // They are not meant for users.\n          return;\n        }\n        attachments.push(<Attachment\n          tinode={this.props.tinode}\n          downloadUrl={Drafty.getDownloadUrl(att)}\n          filename={att.name}\n          uploading={Drafty.isProcessing(att)}\n          mimetype={att.mime}\n          size={Drafty.getEntitySize(att)}\n          progress={this.state.progress}\n          onCancelUpload={this.handleCancelUpload}\n          onError={this.props.onError}\n          key={i} />);\n      }, this);\n      const tree = Drafty.format(content, fullFormatter, this.formatterContext);\n      content = React.createElement(React.Fragment, null, tree);\n    } else if (this.props.deleted) {\n      // Message represents a range of deleted messages.\n      content = <><i className=\"material-icons gray\">block</i> <i className=\"gray\">\n        <FormattedMessage id=\"deleted_content\"\n          defaultMessage=\"content deleted\" description=\"Shown when messages are deleted\" />\n      </i></>\n    } else if (typeof content != 'string') {\n      content = <><i className=\"material-icons gray\">warning_amber</i> <i className=\"gray\">\n        <FormattedMessage id=\"invalid_content\"\n          defaultMessage=\"invalid content\" description=\"Shown when the message is unreadable\" /></i></>\n    }\n\n    return (\n      <li ref={this.props.innerRef} className={sideClass}>\n        {this.props.userFrom && this.props.response ?\n          <div className=\"avatar-box\">\n            {fullDisplay ?\n              <LetterTile\n                tinode={this.props.tinode}\n                topic={this.props.userFrom}\n                title={this.props.userName}\n                avatar={avatar} /> :\n              null}\n          </div> :\n          null}\n        <div>\n          <div className={bubbleClass}>\n            <div className=\"content-meta\">\n              <div className=\"message-content\">\n                {content}\n                {attachments}\n              </div>\n              {this.props.timestamp ?\n                <ReceivedMarker\n                  timestamp={this.props.timestamp}\n                  received={this.props.received} />\n                : null}\n            </div>\n            {this.props.deleted || !this.props.showContextMenu ?\n              null :\n              <span className=\"menuTrigger\">\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">expand_more</i>\n                </a>\n              </span>\n            }\n          </div>\n          {fullDisplay ?\n            <div className=\"author\">\n              {this.props.userName ||\n                <i><FormattedMessage id=\"user_not_found\" defaultMessage=\"Not found\"\n                description=\"In place of a user's full name when the user is not found.\" /></i>\n              }\n            </div>\n            : null\n          }\n        </div>\n      </li>\n    );\n  }\n};\n\nconst IntlChatMessage = injectIntl(BaseChatMessage);\nconst ChatMessage = React.forwardRef((props, ref) => <IntlChatMessage innerRef = {ref} {...props} />);\n\nexport default ChatMessage;\n","// Send message form.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport { KEYPRESS_DELAY } from '../config.js';\nimport { filePasted } from '../lib/blob-helpers.js';\nimport { quoteFormatter } from '../lib/formatters.js';\n\nconst messages = defineMessages({\n  messaging_disabled: {\n    id: 'messaging_disabled_prompt',\n    defaultMessage: 'Messaging disabled',\n    description: 'Prompt in SendMessage in read-only topic'\n  },\n  type_new_message: {\n    id: 'new_message_prompt',\n    defaultMessage: 'New message',\n    description: 'Prompt in send message field'\n  },\n  add_image_caption: {\n    id: 'image_caption_prompt',\n    defaultMessage: 'Image caption',\n    description: 'Prompt in SendMessage for attached image'\n  },\n  file_attachment_too_large: {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  },\n  cannot_initiate_upload: {\n    id: 'cannot_initiate_file_upload',\n    defaultMessage: 'Cannot initiate file upload.',\n    description: 'Generic error messagewhen attachment fails'\n  },\n});\n\nclass SendMessage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      message: '',\n      // Make initial keypress time as if it happened 5001 milliseconds in the past.\n      keypressTimestamp: new Date().getTime() - KEYPRESS_DELAY - 1\n    };\n\n    this.handlePasteEvent = this.handlePasteEvent.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleSend = this.handleSend.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleMessageTyping = this.handleMessageTyping.bind(this);\n\n    this.handleQuoteClick = this.handleQuoteClick.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.addEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.removeEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.messageEditArea) {\n      this.messageEditArea.focus();\n    }\n  }\n\n  handlePasteEvent(e) {\n    if (this.props.disabled) {\n      return;\n    }\n    // FIXME: handle large files too.\n    if (filePasted(e,\n      (bits, mime, width, height, fname) => {\n        this.props.onAttachImage(mime, bits, width, height, fname);\n      },\n      (mime, bits, fname) => {\n        this.props.onAttachFile(mime, bits, fname);\n      },\n      this.props.onError)) {\n\n      // If a file was pasted, don't paste base64 data into input field.\n      e.preventDefault();\n    }\n  }\n\n  handleAttachImage(e) {\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachImage(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleAttachFile(e) {\n    const {formatMessage} = this.props.intl;\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachFile(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleSend(e) {\n    e.preventDefault();\n    const message = this.state.message.trim();\n    if (message || this.props.acceptBlank || this.props.noInput) {\n      this.props.onSendMessage(message);\n      this.setState({message: ''});\n    }\n  }\n\n  /* Send on Enter key */\n  handleKeyPress(e) {\n    // Remove this if you don't want Enter to trigger send\n    if (e.key === 'Enter') {\n      // Have Shift-Enter insert a line break instead\n      if (!e.shiftKey) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.handleSend(e);\n      }\n    }\n  }\n\n  handleMessageTyping(e) {\n    const newState = {message: e.target.value};\n    if (this.props.onKeyPress) {\n      const now = new Date().getTime();\n      if (now - this.state.keypressTimestamp > KEYPRESS_DELAY) {\n        this.props.onKeyPress();\n        newState.keypressTimestamp = now;\n      }\n    }\n    this.setState(newState);\n  }\n\n  handleQuoteClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.props.replyTo && this.props.onQuoteClick) {\n      const replyToSeq = this.props.replyTo.seq;\n      this.props.onQuoteClick(replyToSeq);\n    }\n  }\n\n  render() {\n    const { formatMessage } = this.props.intl;\n    const prompt = this.props.disabled ?\n      formatMessage(messages.messaging_disabled) :\n      (this.props.messagePrompt ?\n        formatMessage(messages[this.props.messagePrompt]) :\n        formatMessage(messages.type_new_message));\n\n    const quote = this.props.replyTo ?\n      Drafty.format(this.props.replyTo.content, quoteFormatter, {\n        formatMessage: formatMessage,\n        authorizeURL: this.props.tinode.authorizeURL\n      }) :\n      null;\n\n    return (\n      <div id=\"send-message-wrapper\">\n      {quote ?\n        <div id=\"reply-quote-preview\">\n          <div className=\"cancel\">\n            <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancelReply();}}><i className=\"material-icons gray\">close</i></a>\n          </div>\n          {quote}\n        </div>\n      :\n      null}\n\n      <div id=\"send-message-panel\">\n        {!this.props.disabled ?\n          <>\n            {this.props.onAttachFile ?\n              <>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachImage.click();}} title=\"Add image\">\n                  <i className=\"material-icons secondary\">photo</i>\n                </a>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachFile.click();}} title=\"Attach file\">\n                  <i className=\"material-icons secondary\">attach_file</i>\n                </a>\n              </>\n              :\n              null}\n            {this.props.noInput ?\n              <div className=\"hr thin\" /> :\n              <textarea id=\"sendMessage\" placeholder={prompt}\n                value={this.state.message} onChange={this.handleMessageTyping}\n                onKeyPress={this.handleKeyPress}\n                ref={(ref) => {this.messageEditArea = ref;}}\n                autoFocus />}\n            <a href=\"#\" onClick={this.handleSend} title=\"Send\">\n              <i className=\"material-icons\">send</i>\n            </a>\n            <input type=\"file\" ref={(ref) => {this.attachFile = ref;}}\n              onChange={this.handleAttachFile} style={{display: 'none'}} />\n            <input type=\"file\" ref={(ref) => {this.attachImage = ref;}} accept=\"image/*\"\n              onChange={this.handleAttachImage} style={{display: 'none'}} />\n          </>\n          :\n          <div id=\"writing-disabled\">{prompt}</div>\n        }\n      </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SendMessage);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { bytesToHumanSize } from '../lib/strformat.js';\n\n// Get material icon name from mime type.\nfunction iconFromMime(mime) {\n  // If more icons become available in material icons, add them to this mime-to-icon mapping.\n  const mimeToIcon = {default: 'insert_drive_file', image: 'image', text: 'description', video: 'theaters'};\n\n  return mimeToIcon[mime] || mimeToIcon[(mime || '').split('/')[0]] || mimeToIcon['default'];\n}\n\nexport default class DocPreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleSendDoc = this.handleSendDoc.bind(this);\n  }\n\n  handleSendDoc(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(this.props.content.file);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          <span>{this.props.content.filename}</span>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\">\n          <div className=\"flex-column narrow\">\n            <i className=\"material-icons gray\">{iconFromMime(this.props.content.type)}</i>\n            <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n              description=\"Label for file content type (mime)\" /></b> {this.props.content.type || 'application/octet-stream'}</div>\n            <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n              description=\"Label for file size\" /></b> {bytesToHumanSize(this.props.content.size)}</div>\n          </div>\n        </div>\n        <SendMessage\n          noInput={true}\n          tinode={this.props.tinode}\n          replyTo={this.props.replyTo}\n          onCancelReply={this.props.onCancelReply}\n          onSendMessage={this.handleSendDoc}\n          onError={this.props.onError} />\n      </div>\n    );\n  }\n};\n","// GroupSubs: a list of group subscribers currently online.\n// Show in the topic title bar\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { MAX_ONLINE_IN_TOPIC } from '../config.js'\n\nimport LetterTile from './letter-tile.jsx';\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class GroupSubs extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const usersOnline = [];\n    const totalCount = (this.props.subscribers || []).length;\n    const countToShow = Math.min(MAX_ONLINE_IN_TOPIC, totalCount);\n\n    (this.props.subscribers || []).some((sub) => {\n      usersOnline.push(\n        <div className=\"avatar-box\" key={sub.user}>\n          <LetterTile\n            tinode={this.props.tinode}\n            topic={sub.user}\n            avatar={makeImageUrl(sub.public ? sub.public.photo : null) || true}\n            title={sub.public ? sub.public.fn : null} />\n        </div>\n      );\n      return usersOnline.length == countToShow;\n    });\n\n    return (\n      <div id=\"topic-users\">{usersOnline} {totalCount > countToShow ?\n        <span>\n          <FormattedMessage id=\"more_online_members\" defaultMessage=\"+{overflow} more\"\n              description=\"Shown in MessagesView title bar when the number of online subscribers exceeds MAX_ONLINE_IN_TOPIC\"\n              values={{ overflow: (totalCount - countToShow) }} />\n        </span> : null}\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\nimport { bytesToHumanSize } from '../lib/strformat.js';\n\nexport default class ImagePreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      width: 0,\n      height: 0\n    };\n\n    this.handleSendImage = this.handleSendImage.bind(this);\n  }\n\n  assignWidth(node) {\n    if (node && !this.state.width) {\n      const bounds = node.getBoundingClientRect();\n      this.setState({\n        width: bounds.width | 0,\n        height: bounds.height | 0\n      });\n    }\n  }\n\n  handleSendImage(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(caption, this.props.content.blob);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n\n    const dim = fitImageSize(this.props.content.width, this.props.content.height,\n      this.state.width, this.state.height, false);\n    const size = dim ? { width: dim.dstWidth + 'px', height: dim.dstHeight + 'px' } :\n      ((this.props.content.width > this.props.content.height) ? {width: '100%'} : {height: '100%'});\n    size.maxWidth = '100%';\n    size.maxHeight = '100%';\n\n    let filename = this.props.content.filename;\n    // Average font aspect ratio is ~0.5; File name takes 1/3 of the viewport width.\n    const maxlength = Math.max(((this.state.width / REM_SIZE / 1.5) | 0) - 2, 12);\n    if (filename.length > maxlength) {\n      filename = filename.slice(0, maxlength/2 - 1) + '…' + filename.slice(1 - maxlength/2);\n    }\n    const width = this.props.content.width || '-';\n    const height = this.props.content.height || '-';\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          {!this.props.onSendMessage ?\n            <a href={this.props.content.url} download={this.props.content.filename}>\n              <i className=\"material-icons\">file_download</i> <FormattedMessage\n                id=\"download_action\" defaultMessage=\"download\" description=\"Call to action [download]\" />\n            </a>\n            :\n            <span>{this.props.content.filename}</span>\n          }\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\" ref={(node) => this.assignWidth(node)}>\n          <img src={this.props.content.url} style={size} className=\"image-preview\" alt={this.props.content.filename} />\n        </div>\n        {this.props.onSendMessage ?\n          <SendMessage\n            messagePrompt=\"add_image_caption\"\n            acceptBlank={true}\n            tinode={this.props.tinode}\n            replyTo={this.props.replyTo}\n            onCancelReply={this.props.onCancelReply}\n            onSendMessage={this.handleSendImage}\n            onError={this.props.onError} />\n          :\n          <div id=\"image-preview-footer\">\n            <div>\n              <div><b><FormattedMessage id=\"label_file_name\" defaultMessage=\"File name:\"\n                description=\"Label for a file name\" /></b></div>\n              <div><span title={this.props.content.filename}>{filename ? filename : '-'}</span></div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n                description=\"Label for file content type (mime)\" /></b></div>\n              <div>{this.props.content.type}</div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n                description=\"Label for file size\" /></b></div>\n              <div>{width} &times; {height} px; {bytesToHumanSize(this.props.content.size)}</div>\n            </div>\n          </div>}\n      </div>\n    );\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Invitation extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleButtonAction = this.handleButtonAction.bind(this);\n  }\n\n  handleButtonAction(evt, data) {\n    evt.preventDefault();\n    this.props.onAction(data);\n  }\n\n  render() {\n    return (\n      <div className=\"accept-invite-panel\">\n        <div className=\"title\">\n          <FormattedMessage id=\"chat_invitation\"\n            defaultMessage=\"You are invited to start a new chat. What would you like to do?\"\n            description=\"New chat invitation message: [Accept] [Ignore] [Block].\" />\n        </div>\n        <div className=\"footer\">\n          <button className=\"primary\" onClick={event => { this.handleButtonAction(event, \"accept\"); }}>\n            <FormattedMessage id=\"chat_invitation_accept\"\n              defaultMessage=\"Accept\" description=\"Action [Accept] for chat invitation.\" />\n          </button>\n          <button className=\"secondary\" onClick={event => { this.handleButtonAction(event, \"delete\"); }}>\n            <FormattedMessage id=\"chat_invitation_ignore\"\n              defaultMessage=\"Ignore\" description=\"Action [Ignore] for chat invitation.\" />\n          </button>\n          <button className=\"secondary\" onClick={event => { this.handleButtonAction(event, \"block\"); }}>\n            <FormattedMessage id=\"chat_invitation_block\"\n              defaultMessage=\"Block\" description=\"Action [Block] for chat invitation.\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n","/* This is just a static page to display when no conversation is selected. */\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME } from '../config.js';\n\nexport default class LogoView extends React.PureComponent {\n  render() {\n    const version = APP_NAME + ' (' + Tinode.getLibrary() + ')';\n    return (\n      <div id=\"dummy-view\">\n        <div>\n          <a href=\"https://github.com/tinode/chat/\">\n            <img id=\"logo\" alt=\"logo\" src=\"img/logo.svg\" />\n            <h2>Tinode Web</h2>\n          </a>\n          <p><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\"\n            description=\"Label for a client version\" /> {version}</p>\n          <p><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\"\n            description=\"Label for a server version\" /> {this.props.serverVersion} ({this.props.serverAddress})</p>\n        </div>\n      </div>\n    );\n  }\n};\n","// Image view with progress bar and a cancel button.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\n\nexport default class UploadingImage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"inline-image\">\n        {React.createElement('img', this.props)}\n        <div className=\"rounded-container\">\n          <FileProgress progress={this.props.progress} onCancel={this.props.onCancelUpload} />\n        </div>\n      </div>\n    );\n  }\n};\n","// Utility class for hash navigation.\n\n// Parse hash as in http://www.example.com/path#hash as if it were\n// path and arguments.\nexport default class HashNavigation {\n  static parseUrlHash(hash) {\n    // Split path from args, path -> parts[0], args->path[1]\n    const parts = hash.split('?', 2);\n    const params = {};\n    let path = [];\n    if (parts[0]) {\n      path = parts[0].replace('#', '').split('/');\n    }\n    if (parts[1]) {\n      parts[1].split('&').forEach(function(part) {\n        const item = part.split('=');\n        if (item[0]) {\n          params[decodeURIComponent(item[0])] = decodeURIComponent(item[1]);\n        }\n      });\n    }\n    return {path: path, params: params};\n  }\n\n  static navigateTo(url) {\n    window.location.hash = url;\n  }\n\n  static composeUrlHash(path, params) {\n    let url = path.join('/');\n    const args = [];\n    for (const key in params) {\n      if (params.hasOwnProperty(key)) {\n        args.push(key + '=' + params[key]);\n      }\n    }\n    if (args.length > 0) {\n      url += '?' + args.join('&');\n    }\n    return url;\n  }\n\n  static addUrlParam(hash, key, value) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.params[key] = value;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static removeUrlParam(hash, key) {\n    const parsed = this.parseUrlHash(hash);\n    delete parsed.params[key];\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlSidePanel(hash, sidepanel) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[0] = sidepanel;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlInfoPanel(hash, infopanel) {\n    const parsed = this.parseUrlHash(hash);\n    if (infopanel) {\n      parsed.params.info = infopanel;\n    } else {\n      delete parsed.params.info;\n    }\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlTopic(hash, topic) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[1] = topic;\n    // Close InfoView on topic change.\n    delete parsed.params.info;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n}\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\nconst Drafty = Tinode.Drafty;\n\nimport ChatMessage from '../widgets/chat-message.jsx';\nimport ContactBadges from '../widgets/contact-badges.jsx';\nimport DocPreview from '../widgets/doc-preview.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupSubs from '../widgets/group-subs.jsx';\nimport ImagePreview from '../widgets/image-preview.jsx';\nimport Invitation from '../widgets/invitation.jsx';\nimport LetterTile from '../widgets/letter-tile.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport LogoView from './logo-view.jsx';\nimport SendMessage from '../widgets/send-message.jsx';\nimport UploadingImage from '../widgets/uploading-image.jsx'\n\nimport { DEFAULT_P2P_ACCESS_MODE, IMAGE_PREVIEW_DIM, KEYPRESS_DELAY, MESSAGES_PAGE,\n  MAX_EXTERN_ATTACHMENT_SIZE, MAX_IMAGE_DIM, MAX_INBAND_ATTACHMENT_SIZE, READ_DELAY,\n  IMAGE_THUMBNAIL_DIM } from '../config.js';\nimport { SUPPORTED_IMAGE_FORMATS, blobToBase64, base64ToBlob, filePasted, fileToBase64,\n  imageScaled, makeImageUrl } from '../lib/blob-helpers.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { bytesToHumanSize, shortDateFormat, letterTileColorId } from '../lib/strformat.js';\nimport { sanitizeImageUrl } from '../lib/utils.js';\n\n// Run timer with this frequency (ms) for checking notification queue.\nconst NOTIFICATION_EXEC_INTERVAL = 300;\n\nconst messages = defineMessages({\n  online_now: {\n    id: 'online_now',\n    defaultMessage: 'online now',\n    description: 'Indicator that the user or topic is currently online',\n  },\n  last_seen: {\n    id: 'last_seen_timestamp',\n    defaultMessage: 'Last seen',\n    description: 'Label for the timestamp of when the user or topic was last online'\n  },\n  not_found: {\n    id: 'title_not_found',\n    defaultMessage: 'Not found',\n    description: 'Title shown when topic is not found'\n  },\n  channel: {\n    id: 'channel',\n    defaultMessage: 'channel',\n    description: 'Subtitle shown for channels in MessagesView instead of last seen'\n  },\n  file_attachment_too_large: {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  },\n\n  drafty_form: {\n    id: 'drafty_form',\n    defaultMessage: 'Form: ',\n    description: 'Comment for form in drafty preview'\n  },\n  drafty_attachment: {\n    id: 'drafty_attachment',\n    defaultMessage: 'Attachment',\n    description: 'Comment for attachment in drafty preview'\n  },\n  drafty_image: {\n    id: 'drafty_image',\n    defaultMessage: 'Picture',\n    description: 'Comment for embedded images in drafty preview'\n  },\n  invalid_content: {\n    id: 'invalid_content',\n    defaultMessage: 'invalid content',\n    description: 'Shown when the message is unreadable'\n  },\n});\n\n// Checks if the access permissions are granted but not yet accepted.\nfunction isUnconfirmed(acs) {\n  if (acs) {\n    const ex = acs.getExcessive() || '';\n    return acs.isJoiner('given') && (ex.includes('R') || ex.includes('W'));\n  }\n  return false;\n}\n\nfunction isPeerRestricted(acs) {\n  if (acs) {\n    const ms = acs.getMissing() || '';\n    return acs.isJoiner('want') && (ms.includes('R') || ms.includes('W'));\n  }\n  return false;\n}\n\nclass MessagesView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = MessagesView.getDerivedStateFromProps(props, {});\n\n    this.leave = this.leave.bind(this);\n    this.sendMessage = this.sendMessage.bind(this);\n    this.retrySend = this.retrySend.bind(this);\n    this.sendImageAttachment = this.sendImageAttachment.bind(this);\n    this.sendFileAttachment = this.sendFileAttachment.bind(this);\n    this.sendKeyPress = this.sendKeyPress.bind(this);\n    this.subscribe = this.subscribe.bind(this);\n    this.handleScrollReference = this.handleScrollReference.bind(this);\n    this.handleScrollEvent = this.handleScrollEvent.bind(this);\n    this.handleDescChange = this.handleDescChange.bind(this);\n    this.handleSubsUpdated = this.handleSubsUpdated.bind(this);\n    this.handleMessageUpdate = this.handleMessageUpdate.bind(this);\n    this.handleAllMessagesReceived = this.handleAllMessagesReceived.bind(this);\n    this.handleInfoReceipt = this.handleInfoReceipt.bind(this);\n    this.handleImagePostview = this.handleImagePostview.bind(this);\n    this.handleClosePreview = this.handleClosePreview.bind(this);\n    this.handleFormResponse = this.handleFormResponse.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleShowContextMenuMessage = this.handleShowContextMenuMessage.bind(this);\n    this.handleNewChatAcceptance = this.handleNewChatAcceptance.bind(this);\n    this.handleEnablePeer = this.handleEnablePeer.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n    this.postReadNotification = this.postReadNotification.bind(this);\n    this.clearNotificationQueue = this.clearNotificationQueue.bind(this);\n\n    this.handlePickReply = this.handlePickReply.bind(this);\n    this.handleCancelReply = this.handleCancelReply.bind(this);\n    this.handleQuoteClick = this.handleQuoteClick.bind(this);\n\n    this.chatMessageRefs = {};\n    this.getOrCreateMessageRef = this.getOrCreateMessageRef.bind(this);\n\n    this.readNotificationQueue = [];\n    this.readNotificationTimer = null;\n  }\n\n  getOrCreateMessageRef(seqId) {\n    if (this.chatMessageRefs.hasOwnProperty(seqId)) {\n      return this.chatMessageRefs[seqId];\n    }\n    const ref = React.createRef();\n    this.chatMessageRefs[seqId] = ref;\n    return ref;\n  }\n\n  componentDidMount() {\n    // this.propsChange(this.props, this.state);\n    if (this.messagesScroller) {\n      this.messagesScroller.addEventListener('scroll', this.handleScrollEvent);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messagesScroller) {\n      this.messagesScroller.removeEventListener('scroll', this.handleScrollEvent);\n    }\n\n    // Flush all notifications.\n    this.clearNotificationQueue();\n  }\n\n  // Scroll last message into view on component update e.g. on message received\n  // or vertical shrinking.\n  componentDidUpdate(prevProps, prevState) {\n    if (this.messagesScroller) {\n      if (prevState.topic != this.state.topic || prevState.messageCount != this.state.messageCount) {\n        // New message\n        this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n      } else if (prevProps.viewportHeight > this.props.viewportHeight) {\n        // Componet changed height.\n        this.messagesScroller.scrollTop += prevProps.viewportHeight - this.props.viewportHeight;\n      }\n    }\n\n    const topic = this.props.tinode ? this.props.tinode.getTopic(this.state.topic) : undefined;\n    if (this.state.topic != prevState.topic) {\n      if (prevState.topic && !Tinode.isNewGroupTopicName(prevState.topic)) {\n        this.leave(prevState.topic);\n      }\n\n      if (topic) {\n        topic.onData = this.handleMessageUpdate;\n        topic.onAllMessagesReceived = this.handleAllMessagesReceived;\n        topic.onInfo = this.handleInfoReceipt;\n        topic.onMetaDesc = this.handleDescChange;\n        topic.onSubsUpdated = this.handleSubsUpdated;\n        topic.onPres = this.handleSubsUpdated;\n      }\n    }\n\n    if (!this.props.applicationVisible) {\n      // If application is not visible, flush all unsent 'read' notifications.\n      this.clearNotificationQueue();\n    } else {\n      // Otherwise assume there are unread messages.\n      this.postReadNotification(0);\n    }\n\n    if ((this.state.topic != prevState.topic) || !prevProps.ready) {\n      this.subscribe(topic);\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let nextState = {};\n    if (!nextProps.topic) {\n      // Default state: no topic.\n      nextState = {\n        messageCount: 0,\n        latestClearId: -1,\n        onlineSubs: [],\n        topic: null,\n        title: '',\n        avatar: null,\n        isVerified: false,\n        isStaff: false,\n        isDangerous: false,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false,\n        peerMessagingDisabled: false,\n        channel: false,\n        reply: null\n      };\n    } else if (nextProps.topic != prevState.topic) {\n      const topic = nextProps.tinode.getTopic(nextProps.topic);\n      nextState = {\n        topic: nextProps.topic,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false,\n        reply: null\n      };\n\n      if (topic) {\n        // Topic exists.\n        const subs = [];\n\n        if (nextProps.connected) {\n          topic.subscribers((sub) => {\n            if (sub.online && sub.user != nextProps.myUserId) {\n              subs.push(sub);\n            }\n          });\n        }\n\n        Object.assign(nextState, {\n          onlineSubs: subs\n        });\n\n        if (topic.public) {\n          Object.assign(nextState, {\n            title: topic.public.fn,\n            avatar: makeImageUrl(topic.public.photo)\n          });\n        } else {\n          Object.assign(nextState, {\n            title: '',\n            avatar: null\n          });\n        }\n\n        const peer = topic.p2pPeerDesc();\n        if (peer) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: isPeerRestricted(peer.acs)\n          });\n        } else if (prevState.peerMessagingDisabled) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: false\n          });\n        }\n        Object.assign(nextState, {\n          messageCount: topic.messageCount(),\n          latestClearId: topic.maxClearId(),\n          channel: topic.isChannelType()\n        });\n      } else {\n        // Invalid topic.\n        Object.assign(nextState, {\n          messageCount: 0,\n          latestClearId: -1,\n          onlineSubs: [],\n          title: '',\n          avatar: null,\n          peerMessagingDisabled: false,\n          channel: false\n        });\n      }\n    }\n\n    if (nextProps.acs) {\n      if (nextProps.acs.isWriter() != prevState.isWriter) {\n        nextState.isWriter = !prevState.isWriter;\n      }\n      if (nextProps.acs.isReader() != prevState.isReader) {\n        nextState.isReader = !prevState.isReader;\n      }\n      if (!nextProps.acs.isReader('given') != prevState.readingBlocked) {\n        nextState.readingBlocked = !prevState.readingBlocked;\n      }\n      if (nextProps.acs.isSharer() != prevState.isSharer) {\n        nextState.isSharer = !prevState.isSharer;\n      }\n    } else {\n      if (prevState.isWriter) {\n        nextState.isWriter = false;\n      }\n      if (prevState.isReader) {\n        nextState.isReader = false;\n      }\n      if (!prevState.readingBlocked) {\n        prevState.readingBlocked = true;\n      }\n      if (prevState.isSharer) {\n        nextState.isSharer = false;\n      }\n    }\n\n    if (isUnconfirmed(nextProps.acs) == !prevState.unconformed) {\n      nextState.unconfirmed = !prevState.unconformed;\n    }\n\n    // Clear subscribers online when there is no connection.\n    if (!nextProps.connected && prevState.onlineSubs && prevState.onlineSubs.length > 0) {\n      nextState.onlineSubs = [];\n    }\n\n    return nextState;\n  }\n\n  subscribe(topic) {\n    if (!topic || topic.isSubscribed() || !this.props.ready) {\n      return;\n    }\n\n    // Is this a new topic?\n    const newTopic = (this.props.newTopicParams && this.props.newTopicParams._topicName == this.props.topic);\n\n    // Don't request the tags. They are useless unless the user\n    // is the owner and is editing the topic.\n    let getQuery = topic.startMetaQuery().withLaterDesc().withLaterSub();\n    if (this.state.isReader || newTopic) {\n      // Reading is either permitted or we don't know because it's a new topic. Ask for messages.\n      getQuery = getQuery.withLaterData(MESSAGES_PAGE);\n      if (this.state.isReader) {\n        getQuery = getQuery.withLaterDel();\n      }\n      // And show \"loading\" spinner.\n      this.setState({ fetchingMessages: true });\n    }\n\n    const setQuery = newTopic ? this.props.newTopicParams : undefined;\n    topic.subscribe(getQuery.build(), setQuery)\n      .then((ctrl) => {\n        if (ctrl.code == 303) {\n          // Redirect to another topic requested.\n          HashNavigation.navigateTo(HashNavigation.setUrlTopic('', ctrl.params.topic));\n          return;\n        }\n        if (this.state.topic != ctrl.topic) {\n          this.setState({topic: ctrl.topic});\n        }\n        this.props.onNewTopicCreated(this.props.topic, ctrl.topic);\n        // If there are unsent messages, try sending them now.\n        topic.queuedMessages((pub) => {\n          if (!pub._sending && topic.isSubscribed()) {\n            this.retrySend(pub);\n          }\n        });\n      })\n      .catch((err) => {\n        console.log(\"Failed subscription to\", this.state.topic);\n        this.props.onError(err.message, 'err');\n        const blankState = MessagesView.getDerivedStateFromProps({}, {});\n        blankState.title = this.props.intl.formatMessage(messages.not_found);\n        this.setState(blankState);\n      });\n  }\n\n  leave(oldTopicName) {\n    if (!oldTopicName || !this.props.tinode.isTopicCached(oldTopicName)) {\n      return;\n    }\n    const oldTopic = this.props.tinode.getTopic(oldTopicName);\n    if (oldTopic && oldTopic.isSubscribed()) {\n      oldTopic.leave(false)\n        .catch(() => { /* do nothing here */ })\n        .finally(() => {\n          // We don't care if the request succeeded or failed.\n          // The topic is dead regardless.\n          this.setState({fetchingMessages: false});\n          oldTopic.onData = undefined;\n          oldTopic.onAllMessagesReceived = undefined;\n          oldTopic.onInfo = undefined;\n          oldTopic.onMetaDesc = undefined;\n          oldTopic.onSubsUpdated = undefined;\n          oldTopic.onPres = undefined;\n        });\n    }\n  }\n\n  handleScrollReference(node) {\n    if (node) {\n      node.addEventListener('scroll', this.handleScrollEvent);\n      this.messagesScroller = node;\n      this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n    }\n  }\n\n  // Get older messages\n  handleScrollEvent(event) {\n    this.setState({scrollPosition: event.target.scrollHeight - event.target.scrollTop});\n    if (this.state.fetchingMessages) {\n      return;\n    }\n\n    if (event.target.scrollTop <= 0) {\n      const topic = this.props.tinode.getTopic(this.state.topic);\n      if (topic && topic.isSubscribed() && topic.msgHasMoreMessages()) {\n        this.setState({fetchingMessages: true}, () => {\n          topic.getMessagesPage(MESSAGES_PAGE)\n            .catch((err) => this.props.onError(err.message, 'err'))\n            .finally(() => this.setState({fetchingMessages: false}));\n          });\n      }\n    }\n  }\n\n  handleDescChange(desc) {\n    if (desc.public) {\n      this.setState({\n        title: desc.public.fn,\n        avatar: makeImageUrl(desc.public.photo)\n      });\n    } else {\n      this.setState({\n        title: '',\n        avatar: null\n      });\n    }\n\n    if (desc.acs) {\n      this.setState({\n        isWriter: desc.acs.isWriter(),\n        isReader: desc.acs.isReader(),\n        readingBlocked: !desc.acs.isReader('given'),\n        unconfirmed: isUnconfirmed(desc.acs),\n      });\n    }\n  }\n\n  postReadNotification(seq) {\n    // Ignore notifications if the app is invisible.\n    if (!this.props.applicationVisible) {\n      return;\n    }\n\n    // Set up the timer if it's not running already.\n    if (!this.readNotificationTimer) {\n      this.readNotificationTimer = setInterval(() => {\n        if (this.readNotificationQueue.length == 0) {\n          // Shut down the timer if the queue is empty.\n          clearInterval(this.readNotificationTimer);\n          this.readNotificationTimer = null;\n          return;\n        }\n\n        let seq = -1;\n        while (this.readNotificationQueue.length > 0) {\n          const n = this.readNotificationQueue[0];\n          if (n.topicName != this.state.topic) {\n            // Topic has changed. Drop the notification.\n            this.readNotificationQueue.shift();\n            continue;\n          }\n\n          const now = new Date();\n          if (n.sendAt <= now) {\n            // Remove expired notification from queue.\n            this.readNotificationQueue.shift();\n            seq = Math.max(seq, n.seq);\n          } else {\n            break;\n          }\n        }\n\n        // Send only one notification for the whole batch of messages.\n        if (seq >= 0) {\n          const topic = this.props.tinode.getTopic(this.state.topic);\n          if (topic) {\n            topic.noteRead(seq);\n          }\n        }\n      }, NOTIFICATION_EXEC_INTERVAL);\n    }\n\n    const now = new Date();\n    this.readNotificationQueue.push({\n      topicName: this.state.topic,\n      seq: seq,\n      sendAt: now.setMilliseconds(now.getMilliseconds() + READ_DELAY)\n    });\n  }\n\n  // Clear notification queue and timer.\n  clearNotificationQueue() {\n    this.readNotificationQueue = [];\n    if (this.readNotificationTimer) {\n      clearInterval(this.readNotificationTimer);\n      this.readNotificationTimer = null;\n    }\n  }\n\n  handleSubsUpdated() {\n    if (this.state.topic) {\n      const subs = [];\n      const topic = this.props.tinode.getTopic(this.state.topic);\n      topic.subscribers((sub) => {\n        if (sub.online && sub.user != this.props.myUserId) {\n          subs.push(sub);\n        }\n      });\n      const newState = {onlineSubs: subs};\n      const peer = topic.p2pPeerDesc();\n      if (peer) {\n        Object.assign(newState, {\n          peerMessagingDisabled: isPeerRestricted(peer.acs)\n        });\n      } else if (this.state.peerMessagingDisabled) {\n        Object.assign(newState, {\n          peerMessagingDisabled: false\n        });\n      }\n      this.setState(newState);\n    }\n  }\n\n  // The 'msg' could be false-ish if some message ranges were deleted.\n  handleMessageUpdate(msg) {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (!msg) {\n      // msg could be null if one or more messages were deleted.\n      // Updating state to force redraw.\n      this.setState({latestClearId: topic.maxClearId()});\n      return;\n    }\n\n    clearTimeout(this.keyPressTimer)\n    this.setState({messageCount: topic.messageCount(), typingIndicator: false});\n\n    // Scroll to the bottom if the message is added to the end of the message list.\n    // TODO: This should be replaced by showing a \"scroll to bottom\" button.\n    if (topic.isNewMessage(msg.seq)) {\n      this.setState({scrollPosition: 0});\n    }\n\n    // Aknowledge messages except own messages. They are\n    // automatically assumed to be read and recived.\n    const status = topic.msgStatus(msg, true);\n    if (status >= Tinode.MESSAGE_STATUS_SENT && msg.from != this.props.myUserId) {\n      this.postReadNotification(msg.seq);\n    }\n    // This will send \"received\" notifications right away.\n    this.props.onData(msg);\n  }\n\n  handleAllMessagesReceived(count) {\n    this.setState({fetchingMessages: false});\n    if (count > 0) {\n      // 0 means \"latest\".\n      this.postReadNotification(0);\n    }\n  }\n\n  handleInfoReceipt(info) {\n    switch (info.what) {\n      case 'kp': {\n        clearTimeout(this.keyPressTimer);\n        this.keyPressTimer = setTimeout(() => {\n          this.setState({typingIndicator: false});\n        }, KEYPRESS_DELAY + 1000);\n        if (!this.state.typingIndicator) {\n          this.setState({typingIndicator: true});\n        }\n        break;\n      }\n      case 'read':\n      case 'recv':\n        // Redraw due to changed recv/read status.\n        this.forceUpdate();\n        break;\n      default:\n        console.log(\"Other change in topic: \", info.what);\n    }\n  }\n\n  handleImagePostview(content) {\n    this.setState({ imagePostview: content });\n  }\n\n  handleClosePreview() {\n    if (this.state.imagePreview && this.state.imagePreview.url) {\n      URL.revokeObjectURL(this.state.imagePreview.url);\n    }\n    this.setState({ imagePostview: null, imagePreview: null, docPreview: null });\n  }\n\n  handleFormResponse(action, text, data) {\n    if (action == 'pub') {\n      this.sendMessage(Drafty.attachJSON(Drafty.parse(text), data));\n    } else if (action == 'url') {\n      const url = new URL(data.ref);\n      const params = url.searchParams;\n      for (let key in data.resp) {\n        if (data.resp.hasOwnProperty(key)) {\n          params.set(key, data.resp[key]);\n        }\n      }\n      ['name', 'seq'].map((key) => {\n        if (data[key]) {\n          params.set(key, data[key]);\n        }\n      });\n      params.set('uid', this.props.myUserId);\n      params.set('topic', this.state.topic);\n      url.search = params;\n      window.open(url, '_blank');\n    } else {\n      console.log(\"Unknown action in form\", action);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.state.topic, y: e.pageY, x: e.pageX });\n  }\n\n  handleShowContextMenuMessage(params, messageSpecificMenuItems) {\n    params.topicName = this.state.topic;\n    const menuItems = messageSpecificMenuItems || [];\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (topic) {\n      if (!topic.isChannelType()) {\n        menuItems.push('message_delete');\n      }\n      const acs = topic.getAccessMode();\n      if (acs && acs.isDeleter()) {\n        menuItems.push('message_delete_hard');\n      }\n    }\n    this.props.showContextMenu(params, menuItems);\n  }\n\n  handleNewChatAcceptance(action) {\n    this.props.onNewChat(this.state.topic, action);\n  }\n\n  handleEnablePeer(e) {\n    e.preventDefault();\n    this.props.onChangePermissions(this.state.topic, DEFAULT_P2P_ACCESS_MODE, this.state.topic);\n  }\n\n  sendKeyPress() {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (topic.isSubscribed()) {\n      topic.noteKeyPress();\n    }\n  }\n\n  // sendMessage sends the message with an optional subscription to topic first.\n  sendMessage(msg, uploadCompletionPromise, uploader) {\n    let head;\n    if (this.state.reply && this.state.reply.content) {\n      head = {reply: '' + this.state.reply.seq};\n      // Turn it into Drafty so we can make a quoted Drafty object later.\n      if (typeof msg == 'string') {\n        msg = Drafty.parse(msg);\n      }\n      msg = Drafty.append(this.state.reply.content, msg);\n      this.setState({reply: null});\n    }\n    this.props.sendMessage(msg, uploadCompletionPromise, uploader, head);\n  }\n\n  // Retry sending a message.\n  retrySend(pub) {\n    this.props.sendMessage(pub.content, undefined, undefined, pub.head);\n  }\n\n  // Send attachment as Drafty message:\n  // - if file is too large, upload it and send a s link.\n  // - if file is small enough, just send it in-band.\n  sendFileAttachment(file) {\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (file.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      const uploadCompletionPromise = uploader.upload(file);\n      const msg = Drafty.attachFile(null, {\n        mime: file.type,\n        filename: file.name,\n        size: file.size,\n        urlPromise: uploadCompletionPromise\n      });\n      // Pass data and the uploader to the TinodeWeb.\n      this.sendMessage(msg, uploadCompletionPromise, uploader);\n    } else {\n      // Small enough to send inband.\n      fileToBase64(file,\n        (mime, bits, fname) => {\n          this.sendMessage(Drafty.attachFile(null, {mime: mime, data: bits, filename: fname}));\n        },\n        this.props.onError\n      );\n    }\n  }\n\n  // handleAttachFile method is called when [Attach file] button is clicked.\n  handleAttachFile(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    if (file.size > maxExternAttachmentSize) {\n      // Too large.\n      this.props.onError(this.props.intl.formatMessage(messages.file_attachment_too_large,\n        {size: bytesToHumanSize(file.size), limit: bytesToHumanSize(maxExternAttachmentSize)}), 'err');\n    } else {\n      this.setState({ docPreview: {\n        file: file,\n        filename: file.name,\n        size: file.size,\n        type: file.type\n      }});\n    }\n  }\n\n  // sendImageAttachment sends the image bits inband as Drafty message.\n  sendImageAttachment(caption, blob) {\n    const mime = this.state.imagePreview.type;\n    const width = this.state.imagePreview.width;\n    const height = this.state.imagePreview.height;\n    const fname = this.state.imagePreview.filename;\n\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (blob.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      if (!uploader) {\n        this.props.onError(this.props.intl.formatMessage(messages.cannot_initiate_upload));\n        return;\n      }\n      const uploadCompletionPromise = uploader.upload(blob);\n\n      // Make small preview to show while uploading.\n      imageScaled(blob, IMAGE_PREVIEW_DIM, IMAGE_PREVIEW_DIM, -1, false,\n        (tinyMine, tinyBlob) => {\n          // Convert tiny image into base64 for serialization and previewing.\n          blobToBase64(tinyBlob, (blobMime, tinyBits64) => {\n            let msg = Drafty.insertImage(null, 0, {\n              mime: mime,\n              _tempPreview: tinyBits64, // This preview will not be serialized.\n              width: width,\n              height: height,\n              filename: fname,\n              size: blob.size,\n              urlPromise: uploadCompletionPromise\n            });\n            if (caption) {\n              msg = Drafty.appendLineBreak(msg);\n              msg = Drafty.append(msg, Drafty.parse(caption));\n            }\n            // Pass data and the uploader to the TinodeWeb.\n            this.sendMessage(msg, uploadCompletionPromise, uploader);\n          }\n        )},\n        // Failure\n        (err) => {\n          this.props.onError(err, 'err');\n        }\n      );\n      return;\n    }\n\n    // Upload the image if it's too big to be send inband.\n    blobToBase64(blob, (blobMime, bits64) => {\n      let msg = Drafty.insertImage(null, 0, {\n        mime: blobMime,\n        preview: bits64, // Serializable preview\n        width: width,\n        height: height,\n        filename: fname,\n        size: blob.size\n      });\n      if (caption) {\n        msg = Drafty.appendLineBreak(msg);\n        msg = Drafty.append(msg, Drafty.parse(caption));\n      }\n      this.sendMessage(msg);\n    });\n  }\n\n  // handleAttachImage method is called when [Attach image] button is clicked.\n  handleAttachImage(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    // Get image dimensions and size, optionally scale it down.\n    imageScaled(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, maxExternAttachmentSize, false,\n      // Success\n      (mime, blob, width, height, fname) => {\n        this.setState({imagePreview: {\n          url: URL.createObjectURL(blob),\n          blob: blob,\n          filename: fname,\n          width: width,\n          height: height,\n          size: blob.size,\n          type: mime\n        }});\n      },\n      // Failure\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    );\n  }\n\n  handleCancelUpload(seq, uploader) {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    const found = topic.findMessage(seq);\n    if (found) {\n      found._cancelled = true;\n    }\n    uploader.cancel();\n  }\n\n  handlePickReply(seq, content) {\n    this.setState({reply: null});\n\n    if (!seq || !content) {\n      return;\n    }\n\n    if (typeof content == 'string') {\n      content = Drafty.init(content);\n    }\n    if (Drafty.isValid(content)) {\n      content = Drafty.preview(content, 30);\n    } else {\n      content = Drafty.append(Drafty.init('\\u26A0 '),\n        Drafty.wrapInto(this.props.intl.formatMessage(messages.invalid_content), 'EM'));\n    }\n\n    // Get the author.\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    const msg = topic.findMessage(seq);\n    let senderName, senderId;\n    if (msg) {\n      senderId = msg.from || 'chan';\n      if (senderId != this.props.myUserId) {\n        const topic = this.props.tinode.getTopic(this.state.topic);\n        const user = topic.userDesc(senderId);\n        if (user && user.public) {\n          senderName = user.public.fn;\n        }\n      } else {\n        senderName = this.props.myUserName;\n      }\n    }\n\n    // Make small image previews.\n    const ents = [];\n    Drafty.entities(content, (data, idx, tp) => {\n      if (tp == 'IM') {\n        ents.push({\n          tp: tp,\n          data: data\n        });\n      }\n    });\n\n    // Turn all images into thumbnails.\n    const promises = ents.map((ex) => {\n      return new Promise((resolve, reject) => {\n        const handleFailure = () => {\n          ex.data.val = '';\n          ex.data.name = '';\n          ex.data.width = IMAGE_THUMBNAIL_DIM;\n          ex.data.height = IMAGE_THUMBNAIL_DIM;\n          ex.data.maxWidth = IMAGE_THUMBNAIL_DIM;\n          ex.data.maxHeight = IMAGE_THUMBNAIL_DIM;\n        };\n        const scale = (origBlob) => {\n          imageScaled(origBlob, IMAGE_THUMBNAIL_DIM, IMAGE_THUMBNAIL_DIM, -1, false,\n            // Success\n            (mime, blob, width, height, fname) => {\n              ex.data.mime = mime;\n              ex.data.size = blob.size;\n              ex.data.width = width;\n              ex.data.height = height;\n              ex.data.name = fname;\n              ex.data.ref = undefined;\n\n              blobToBase64(blob, (blobMime, tinyBits64) => {\n                ex.data.val = tinyBits64;\n                resolve(true);\n              });\n            },\n            // Failure\n            (err) => {\n              handleFailure();\n              reject(`Could not scale image: ${err}`);\n            });\n        }\n        if (ex.data.val) {\n          const b = base64ToBlob(ex.data.val, ex.data.mime);\n          if (b) {\n            scale(b);\n          } else {\n            handleFailure();\n          }\n        } else {\n          const from = this.props.tinode.authorizeURL(sanitizeImageUrl(ex.data.ref));\n          fetch(from)\n            .then(e => {\n              if (e.ok) {\n                return e.blob();\n              } else {\n                handleFailure();\n                reject(`Image fetch unsuccessful: ${e.status} - ${e.statusText}`);\n              }\n            })\n            .then((b) => scale(b))\n            .catch((err) => reject(`Error fetching image data: ${err}`));\n          return;\n        }\n      });\n    });\n\n    Promise.all(promises)\n      .catch((err) => {\n        this.props.onError(err, 'err');\n      })\n      .finally(() => {\n        // All done. Create a reply quote.\n        this.setState({\n          reply: {\n            content: Drafty.quote(senderName, senderId, content),\n            seq: seq\n          }\n        });\n      });\n  }\n\n  handleCancelReply() {\n    this.setState({reply: null})\n  }\n\n  handleQuoteClick(replyToSeq) {\n    const ref = this.getOrCreateMessageRef(replyToSeq);\n    if (ref && ref.current) {\n      ref.current.scrollIntoView({block: \"center\", behavior: \"smooth\"});\n      // ref.current.style.backgroundColor = 'rgb(0, 0, 0, 0.4)';\n      ref.current.classList.add('flash');\n      setTimeout(() => { ref.current.classList.remove('flash') } , 1000);\n      //setTimeout(() => { ref.current.style.backgroundColor = ''; } , 1000);\n    } else {\n      console.error(\"Unresolved message ref: seqId\", replyToSeq);\n    }\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n\n    let component;\n    if (this.props.hideSelf) {\n      component = null;\n    } else if (!this.state.topic) {\n      component = (\n        <LogoView\n          serverVersion={this.props.serverVersion}\n          serverAddress={this.props.serverAddress} />\n      );\n    } else {\n      let component2;\n      if (this.state.imagePreview) {\n        // Preview image before sending.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePreview}\n            tinode={this.props.tinode}\n            replyTo={this.state.reply}\n            onCancelReply={this.handleCancelReply}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendImageAttachment} />\n        );\n      } else if (this.state.imagePostview) {\n        // Expand received image.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePostview}\n            onClose={this.handleClosePreview} />\n        );\n      } else if (this.state.docPreview) {\n        // Preview attachment before sending.\n        component2 = (\n          <DocPreview\n            content={this.state.docPreview}\n            tinode={this.props.tinode}\n            replyTo={this.state.reply}\n            onCancelReply={this.handleCancelReply}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendFileAttachment} />\n        );\n      } else {\n        const topic = this.props.tinode.getTopic(this.state.topic);\n        const isChannel = topic.isChannelType();\n        const groupTopic = topic.isGroupType() && !isChannel;\n        const icon_badges = [];\n        if (topic.trusted) {\n          if (topic.trusted.verified) {\n            icon_badges.push({icon: 'verified', color: 'badge-inv'});\n          }\n          if (topic.trusted.staff) {\n            icon_badges.push({icon: 'staff', color: 'badge-inv'});\n          }\n          if (topic.trusted.danger) {\n            icon_badges.push({icon: 'dangerous', color: 'badge-inv'});\n          }\n        }\n        let messageNodes = [];\n        let previousFrom = null;\n        let chatBoxClass = null;\n        topic.messages((msg, prev, next, i) => {\n          let nextFrom = next ? (next.from || null) : 'chan';\n\n          let sequence = 'single';\n          let thisFrom = msg.from || 'chan';\n          if (thisFrom == previousFrom) {\n            if (thisFrom == nextFrom) {\n              sequence = 'middle';\n            } else {\n              sequence = 'last';\n            }\n          } else if (thisFrom == nextFrom) {\n            sequence = 'first';\n          }\n          previousFrom = thisFrom;\n\n          const isReply = !(thisFrom == this.props.myUserId);\n          const deliveryStatus = topic.msgStatus(msg, true);\n\n          let userName, userAvatar, userFrom;\n          if (groupTopic) {\n            const user = topic.userDesc(thisFrom);\n            if (user && user.public) {\n              userName = user.public.fn;\n              userAvatar = makeImageUrl(user.public.photo);\n            }\n            userFrom = thisFrom;\n            chatBoxClass='chat-box group';\n          } else {\n            chatBoxClass='chat-box';\n          }\n\n          // Ref for this chat message.\n          const ref = this.getOrCreateMessageRef(msg.seq);\n          let replyToSeq = msg.head ? parseInt(msg.head.reply) : null;\n          if (!replyToSeq || isNaN(replyToSeq)) {\n            replyToSeq = null;\n          }\n\n          messageNodes.push(\n            <ChatMessage\n              tinode={this.props.tinode}\n              content={msg.content}\n              deleted={msg.hi}\n              mimeType={msg.head ? msg.head.mime : null}\n              timestamp={msg.ts}\n              response={isReply}\n              seq={msg.seq}\n              userFrom={userFrom}\n              userName={userName}\n              userAvatar={userAvatar}\n              sequence={sequence}\n              received={deliveryStatus}\n              uploader={msg._uploader}\n              viewportWidth={this.props.viewportWidth}  // Used by `formatter`.\n              showContextMenu={this.state.channel? false : this.handleShowContextMenuMessage}\n              onImagePreview={this.handleImagePostview}\n              onFormResponse={this.handleFormResponse}\n              onError={this.props.onError}\n              onCancelUpload={this.handleCancelUpload}\n              pickReply={this.handlePickReply}\n              replyToSeq={replyToSeq}\n              onQuoteClick={this.handleQuoteClick}\n              ref={ref}\n              userIsWriter={this.state.isWriter}\n              key={msg.seq} />\n          );\n        });\n\n        let lastSeen = null;\n        if (isChannel) {\n          lastSeen = formatMessage(messages.channel);\n        } else {\n          const cont = this.props.tinode.getMeTopic().getContact(this.state.topic);\n          if (cont && Tinode.isP2PTopicName(cont.topic)) {\n            if (cont.online) {\n              lastSeen = formatMessage(messages.online_now);\n            } else if (cont.seen) {\n              lastSeen = formatMessage(messages.last_seen) + \": \" +\n                shortDateFormat(cont.seen.when, this.props.intl.locale);\n              // TODO: also handle user agent in c.seen.ua\n            }\n          }\n        }\n        const avatar = this.state.avatar || true;\n        const online = this.props.online ? 'online' + (this.state.typingIndicator ? ' typing' : '') : 'offline';\n\n        component2 = (\n          <>\n            <div id=\"topic-caption-panel\" className=\"caption-panel\">\n              {this.props.displayMobile ?\n                <a href=\"#\" id=\"hide-message-view\" onClick={(e) => {e.preventDefault(); this.props.onHideMessagesView();}}>\n                  <i className=\"material-icons\">arrow_back</i>\n                </a>\n                :\n                null}\n              <div className=\"avatar-box\">\n                <LetterTile\n                  tinode={this.props.tinode}\n                  avatar={avatar}\n                  topic={this.state.topic}\n                  title={this.state.title} />\n                {!isChannel ? <span className={online} /> : null}\n              </div>\n              <div id=\"topic-title-group\">\n                <div id=\"topic-title\" className=\"panel-title\">{\n                  this.state.title ||\n                  <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n                    description=\"Title shown when the topic has no name\" /></i>\n                }<ContactBadges badges={icon_badges} /></div>\n                <div id=\"topic-last-seen\">{lastSeen}</div>\n              </div>\n              {groupTopic ?\n                <GroupSubs\n                  tinode={this.props.tinode}\n                  subscribers={this.state.onlineSubs} /> :\n                <div id=\"topic-users\" />\n              }\n              <div>\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">more_vert</i>\n                </a>\n              </div>\n            </div>\n            {this.props.displayMobile ?\n              <ErrorPanel\n                level={this.props.errorLevel}\n                text={this.props.errorText}\n                onClearError={this.props.onError} />\n              : null}\n            <LoadSpinner show={this.state.fetchingMessages} />\n            <div id=\"messages-container\">\n              <div id=\"messages-panel\" ref={this.handleScrollReference}>\n                <ul id=\"scroller\" className={chatBoxClass}>\n                  {messageNodes}\n                </ul>\n              </div>\n              {!this.state.isReader ?\n              <div id=\"write-only-background\">\n                {this.state.readingBlocked ?\n                <div id=\"write-only-note\">\n                  <FormattedMessage id=\"messages_not_readable\" defaultMessage=\"no access to messages\"\n                    description=\"Message shown in topic without the read access\" />\n                </div>\n                : null }\n              </div>\n              : null }\n            </div>\n            {this.state.peerMessagingDisabled && !this.state.unconfirmed ?\n              <div id=\"peer-messaging-disabled-note\">\n                <i className=\"material-icons secondary\">block</i> <FormattedMessage\n                  id=\"peers_messaging_disabled\" defaultMessage=\"Peer's messaging is disabled.\"\n                  description=\"Shown when the p2p peer's messaging is disabled\" /> <a href=\"#\"\n                    onClick={this.handleEnablePeer}><FormattedMessage id=\"enable_peers_messaging\"\n                    defaultMessage=\"Enable\" description=\"Call to action to enable peer's messaging\" /></a>.\n              </div> : null}\n            {this.state.unconfirmed ?\n              <Invitation onAction={this.handleNewChatAcceptance} />\n              :\n              <SendMessage\n                tinode={this.props.tinode}\n                disabled={!this.state.isWriter}\n                onKeyPress={this.sendKeyPress}\n                onSendMessage={this.sendMessage}\n                onAttachFile={this.handleAttachFile}\n                onAttachImage={this.handleAttachImage}\n                onError={this.props.onError}\n                replyTo={this.state.reply}\n                onQuoteClick={this.handleQuoteClick}\n                onCancelReply={this.handleCancelReply} />}\n          </>\n        );\n      }\n\n      component = <div id=\"topic-view\">{component2}</div>\n    }\n    return component;\n  }\n};\n\nexport default injectIntl(MessagesView);\n","// The <- button to be displayed in title bars.\nimport React from 'react';\n\nexport default class ButtonBack extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onBack();}}>\n        <i className=\"material-icons\">arrow_back</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class MenuContacts extends React.PureComponent {\n  render() {\n    return (\n      <div>\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onNewTopic();}}><i className=\"material-icons\">chat</i></a>\n        &nbsp;\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nexport default class MenuStart extends React.PureComponent {\n  render() {\n    return (\n        <div>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSignUp();}}><i className=\"material-icons\">person_add</i></a>\n          &nbsp;\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n        </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\nimport ButtonBack from './button-back.jsx';\nimport ContactBadges from './contact-badges.jsx';\nimport MenuContacts from './menu-contacts.jsx';\nimport MenuStart from './menu-start.jsx';\n\nimport { sanitizeImageUrl } from '../lib/utils.js';\n\nexport default class SideNavbar extends React.PureComponent {\n  render() {\n    const icon_badges = [];\n    if (this.props.trustedBadges) {\n      this.props.trustedBadges.map((b) => {\n        icon_badges.push({icon: b, color: 'badge-inv'});\n      });\n    }\n    let avatar = null;\n    if (this.props.tinode) {\n      avatar = this.props.tinode.authorizeURL(sanitizeImageUrl(this.props.avatar));\n    }\n    return (\n      <div id=\"side-caption-panel\" className=\"caption-panel\">\n        {this.props.onCancel ? <ButtonBack onBack={this.props.onCancel} /> : null}\n        {avatar ?\n          <div id=\"self-avatar\" className=\"avatar-box\">\n            <LetterTile\n              tinode={this.props.tinode}\n              avatar={avatar}\n              topic={this.props.myUserId}\n              title={this.props.title} />\n          </div>\n          :\n          null}\n        <div id=\"sidepanel-title\" className=\"panel-title\">{this.props.title}<ContactBadges badges={icon_badges}/></div>\n        {this.props.state === 'login' ?\n            <MenuStart onSignUp={this.props.onSignUp} onSettings={this.props.onSettings} /> :\n          this.props.state === 'contacts' ?\n            <MenuContacts onNewTopic={this.props.onNewTopic} onSettings={this.props.onSettings} /> :\n          null}\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport BadgeList from '../widgets/badge-list.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH } from '../config.js';\n\nfunction _clip(str, length) {\n  return str && str.substring(0, length);\n}\n\nexport default class AccountSettingsView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    this.state = {\n      fullName: _clip(me.public ? me.public.fn : undefined, MAX_TITLE_LENGTH),\n      description: _clip(me.public ? me.public.note : undefined, MAX_TOPIC_DESCRIPTION_LENGTH),\n      avatar: makeImageUrl(me.public ? me.public.photo : null)\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          <a href=\"#\" className=\"flat-button float-right\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('general');}}>\n            <i className=\"material-icons\">edit</i>&nbsp;\n            <FormattedMessage id=\"button_edit\" defaultMessage=\"Edit\" description=\"Call to action [Edit]\" />\n          </a>\n          <center>\n            <AvatarUpload\n              tinode={this.props.tinode}\n              avatar={this.state.avatar}\n              readOnly={true}\n              uid={this.props.myUserId}\n              title={this.state.fullName} />\n          </center>\n          <div className=\"group\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n                description=\"Label for full name editing\" />\n            </label>\n            <div className=\"large ellipsized\">{this.state.fullName}</div>\n          </div>\n          <div className=\"group\">\n            <label className=\"small\"><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n              description=\"Label for user address (ID)\" /></label>&nbsp;\n            <tt>{this.props.myUserId}</tt>\n          </div>\n          <div className=\"group\">\n            <BadgeList trustedBadges={this.props.trustedBadges} />\n          </div>\n          {this.state.description ?\n            <div className=\"group\">\n              <label className=\"small\">\n                <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                  description=\"Label for editing topic description\" />\n              </label>\n              <div>{this.state.description}</div>\n            </div> : null}\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('notif');}}>\n            <i className=\"material-icons\">notifications</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_notifications\"\n              defaultMessage=\"Notifications\" description=\"Sidepanel title for AccNotificationsView.\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('security');}}>\n            <i className=\"material-icons\">security</i>&nbsp;<FormattedMessage id=\"button_security\"\n              defaultMessage=\"Security\" description=\"Navigaton button for security panel.\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('support');}}>\n            <i className=\"material-icons\">contact_support</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_support\"\n              defaultMessage=\"Support\" description=\"Sidepanel title for AccSupportView.\" />\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","/* ContactsView holds all contacts-related stuff */\nimport React from 'react';\nimport { FormattedMessage, defineMessages } from 'react-intl';\n\nimport ContactList from '../widgets/contact-list.jsx';\n\nimport { updateFavicon } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  archived_contacts_title: {\n    id: \"archived_contacts\",\n    defaultMessage: \"Archived contacts ({count})\",\n    description: \"Label for archived chats\"\n  }\n});\n\nexport default class ContactsView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAction = this.handleAction.bind(this);\n\n    this.state = ContactsView.deriveStateFromProps(props);\n  }\n\n  static deriveStateFromProps(props) {\n    const contacts = [];\n    let unreadThreads = 0;\n    let archivedCount = 0;\n    props.chatList.map((c) => {\n      const blocked = c.acs && !c.acs.isJoiner();\n      // Show only blocked contacts only when props.blocked == true.\n      if (blocked && props.blocked) {\n        contacts.push(c);\n      }\n      if (blocked || props.blocked) {\n        return;\n      }\n\n      if (c.private && c.private.arch) {\n        if (props.archive) {\n          contacts.push(c);\n        } else {\n          archivedCount ++;\n        }\n      } else if (!props.archive) {\n        contacts.push(c);\n        unreadThreads += c.unread > 0 ? 1 : 0;\n      }\n    });\n\n    contacts.sort((a, b) => {\n      return (b.touched || 0) - (a.touched || 0);\n    });\n\n    if (archivedCount > 0) {\n      contacts.push({\n        action: 'archive',\n        title: messages.archived_contacts_title,\n        values: {count: archivedCount}\n      });\n    }\n\n    return {\n      contactList: contacts,\n      unreadThreads: unreadThreads\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chatList != this.props.chatList ||\n        prevProps.archive != this.props.archive ||\n        prevProps.blocked != this.props.blocked) {\n      const newState = ContactsView.deriveStateFromProps(this.props);\n      this.setState(newState);\n      if (newState.unreadThreads != prevState.unreadThreads) {\n        updateFavicon(newState.unreadThreads);\n      }\n    }\n  }\n\n  handleAction(action_ignored) {\n    this.props.onShowArchive();\n  }\n\n  render() {\n    return (\n      <FormattedMessage id=\"contacts_not_found\"\n        defaultMessage=\"You have no chats<br />¯∖_(ツ)_/¯\"\n        description=\"HTML message shown in ContactList when no contacts are found\">{\n        (no_contacts) => <ContactList\n          tinode={this.props.tinode}\n          connected={this.props.connected}\n          contacts={this.state.contactList}\n          emptyListMessage={no_contacts}\n          topicSelected={this.props.topicSelected}\n          myUserId={this.props.myUserId}\n          showOnline={true}\n          showUnread={true}\n          onTopicSelected={this.props.onTopicSelected}\n          showContextMenu={this.props.showContextMenu}\n          onAction={this.handleAction} />\n      }</FormattedMessage>\n    );\n  }\n};\n","// Helper functions for storing values in localStorage.\n// By default localStorage can store only strings, not objects or other types.\n\nexport default class LocalStorageUtil {\n  // Replace old object with the new one.\n  static setObject(key, value) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n\n  // Get stored object.\n  static getObject(key) {\n    const value = localStorage.getItem(key);\n    return value && JSON.parse(value);\n  }\n\n  // Partially or wholly update stored object.\n  static updateObject(key, value) {\n    const oldVal = this.getObject(key);\n    this.setObject(key, Object.assign(oldVal || {}, value));\n  }\n\n  // Just a wrapper.\n  static removeItem(key) {\n    localStorage.removeItem(key);\n  }\n}\n","// Account registration.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport { theCard } from '../lib/utils.js';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class CreateAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: '',\n      password: '',\n      email: '',\n      fn: '', // full/formatted name\n      imageDataUrl: null,\n      errorCleared: false,\n      saveToken: LocalStorageUtil.getObject('keep-logged-in')\n    };\n\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(password) {\n    this.setState({password: password});\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value})\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleToggleSaveToken() {\n    LocalStorageUtil.setObject('keep-logged-in', !this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({errorCleared: false});\n    this.props.onCreateAccount(\n      this.state.login.trim(),\n      this.state.password.trim(),\n      theCard(this.state.fn.trim().substring(0, MAX_TITLE_LENGTH), this.state.imageDataUrl),\n      {'meth': 'email', 'val': this.state.email});\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form className=\"panel-form-column\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n              description=\"Placeholer for username/login\">{\n              (login_prompt) => <input type=\"text\" placeholder={login_prompt} autoComplete=\"user-name\"\n                value={this.state.login} onChange={this.handleLoginChange} required autoFocus />\n            }</FormattedMessage>\n            <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n              description=\"Placeholder/prompt for entering password\">{\n              (password_prompt) => <VisiblePassword placeholder={password_prompt} autoComplete=\"new-password\"\n                value={this.state.password} onFinished={this.handlePasswordChange}\n                required={true} />\n            }</FormattedMessage>\n          </div>\n          <AvatarUpload\n            tinode={this.props.tinode}\n            onImageChanged={this.handleImageChanged}\n            onError={this.props.onError} />\n        </div>\n        <div  className=\"panel-form-row\">\n          <FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n            description=\"Input placeholder for person's full name\">{\n            (full_name_prompt) => <input type=\"text\" placeholder={full_name_prompt} autoComplete=\"name\"\n              value={this.state.fn} onChange={this.handleFnChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <FormattedMessage id=\"email_prompt\" defaultMessage=\"Email, e.g. jdoe@example.com\"\n            description=\"Input placeholder for email entry\">{\n            (email_prompt) => <input type=\"email\" placeholder={email_prompt} autoComplete=\"email\"\n              value={this.state.email} onChange={this.handleEmailChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n            description=\"Label for a checkbox\">{\n            (stay_logged_in) => <label htmlFor=\"save-token\">&nbsp;{stay_logged_in}</label>\n          }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_up\" defaultMessage=\"Sign up\"\n              description=\"Create account button [Sign Up]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\n\nexport default class EditAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckboxClick = this.handleCheckboxClick.bind(this);\n  }\n\n  handleCheckboxClick(what, checked) {\n    if (what == 'sound') {\n      this.props.onToggleMessageSounds(checked);\n    } else if (what == 'alert') {\n      this.props.onTogglePushNotifications(checked);\n    } else if (what == 'incognito') {\n      this.props.onToggleIncognitoMode(checked);\n    }\n  }\n\n  render() {\n    return (\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"message-sound\">\n              <FormattedMessage id=\"label_message_sound\" defaultMessage=\"Message sound:\"\n                description=\"Label for message sounds toggle\" />\n            </label>\n            <CheckBox name=\"sound\" id=\"message-sound\"\n              checked={this.props.messageSounds} onChange={this.handleCheckboxClick} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"desktop-alerts\">\n            {this.props.desktopAlertsEnabled ?\n              <FormattedMessage id=\"label_push_notifications\" defaultMessage=\"Notification alerts:\"\n                description=\"Label for push notifications switch\" />\n              :\n              <FormattedMessage id=\"label_push_notifications_disabled\"\n                defaultMessage=\"Notification alerts (requires HTTPS):\"\n                description=\"Label for push notifications switch\" />\n            }\n            </label>\n            <CheckBox name=\"alert\" id=\"desktop-alerts\"\n              checked={this.props.desktopAlerts}\n              onChange={this.props.desktopAlertsEnabled ? this.handleCheckboxClick : null} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"incognito-mode\">\n              <FormattedMessage id=\"label_incognito_mode\" defaultMessage=\"Incognito mode:\"\n                description=\"Label for incognito mode toggle\" />\n            </label>\n            <CheckBox name=\"incognito\" id=\"incognito-mode\"\n              checked={this.props.incognitoMode} onChange={this.handleCheckboxClick} />\n          </div>\n        </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\n\nconst messages = defineMessages({\n  delete_account: {\n    id: 'delete_account',\n    defaultMessage: 'Delete account',\n    description: 'Title for delete account warning'\n  },\n  delete_account_warning: {\n    id: 'delete_account_warning',\n    defaultMessage: 'Are you sure you want to delete your account? It cannot be undone.',\n    description: 'Warning message when deleting an account'\n  }\n});\n\nclass AccSecurityView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    let blockedCount = 0;\n    me.contacts((c) => {\n      if (c.acs && !c.acs.isJoiner()) {\n        blockedCount ++;\n      }\n    });\n    const defacs = me.getDefaultAccess();\n    this.state = {\n      auth: defacs ? defacs.auth : null,\n      anon: defacs ? defacs.anon : null,\n      showPermissionEditorFor: undefined,\n      blockedCount: blockedCount,\n    };\n\n    this.handlePasswordUpdate = this.handlePasswordUpdate.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n  }\n\n  handlePasswordUpdate(pwd) {\n    this.setState({password: pwd});\n    this.props.onUpdatePassword(pwd);\n  }\n\n  handleLaunchPermissionsEditor(which) {\n    this.setState({\n      showPermissionEditorFor: which,\n      editedPermissions: this.state[which]\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handlePermissionsChanged(perm) {\n    let defacs = {};\n    defacs[this.state.showPermissionEditorFor] = perm;\n    this.props.onUpdateAccountDesc('me', undefined, undefined, defacs);\n\n    let newState = {showPermissionEditorFor: undefined};\n    newState[this.state.showPermissionEditorFor] = perm;\n    this.setState(newState);\n  }\n\n  handleDeleteAccount(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.delete_account), // title\n      formatMessage(messages.delete_account_warning), // content\n      (() => { this.props.onDeleteAccount(); }), // onConfirm\n      null, // use default text \"OK\"\n      true, // Show Reject button\n      null  // use default text \"Cancel\"\n    );\n  }\n\n  render() {\n    return (\n      <React.Fragment>{this.state.showPermissionEditorFor ?\n        <PermissionsEditor\n          mode={this.state.editedPermissions}\n          skip=\"O\"\n          onSubmit={this.handlePermissionsChanged}\n          onCancel={this.handleHidePermissionsEditor} />\n        :\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_password\" defaultMessage=\"Password\"\n                  description=\"Label for password editing\" />\n            </label>\n            <div>\n              <FormattedMessage id=\"password_unchanged_prompt\" defaultMessage=\"Unchanged\"\n                description=\"Message in editor while password is unchanged\">{\n                (password_unchanged) => <InPlaceEdit\n                  placeholder={password_unchanged}\n                  type=\"password\"\n                  onFinished={this.handlePasswordUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <a href=\"#\" className=\"danger flat-button\" onClick={(e) => {e.preventDefault(); this.props.onLogout();}}>\n              <i className=\"material-icons\">exit_to_app</i> &nbsp;<FormattedMessage id=\"button_logout\"\n                defaultMessage=\"Logout\" description=\"Button [Logout]\" />\n            </a>\n            <a href=\"#\" className=\"danger flat-button\" onClick={(e) => {this.handleDeleteAccount(e);}}>\n              <i className=\"material-icons\">delete</i> &nbsp;<FormattedMessage id=\"button_delete_account\"\n                defaultMessage=\"Delete account\" description=\"Button [Delete account]\" />\n            </a>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <div>\n              <label className=\"small\">\n                <FormattedMessage id=\"label_default_access_mode\" defaultMessage=\"Default access mode:\"\n                description=\"Label for default access mode\" />\n              </label>\n            </div>\n            <div className=\"quoted\">\n              <div>Auth: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>{this.state.auth}</tt></div>\n              <div>Anon: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>{this.state.anon}</tt></div>\n            </div>\n          </div>\n          {this.state.blockedCount > 0 ?\n            <>\n              <div className=\"hr\" />\n              <div className=\"panel-form-row\">\n                <i className=\"material-icons\">block</i>&nbsp;\n                <a href=\"#\" className=\"gray\" onClick={(e) => {e.preventDefault(); this.props.onShowBlocked();}}>\n                  <FormattedMessage id=\"blocked_contacts_link\" defaultMessage=\"Blocked contacts ({count})\"\n                    values={{ count: this.state.blockedCount }} description=\"Blocked contacts link\" />\n                </a>\n              </div>\n            </>\n            : null }\n        </div>\n      }</React.Fragment>\n    );\n  }\n};\n\nexport default injectIntl(AccSecurityView);\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME, LINK_CONTACT_US, LINK_PRIVACY_POLICY, LINK_TERMS_OF_SERVICE } from '../config.js';\n\nexport default class AccSupportView extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          <a href={LINK_CONTACT_US} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">email</i> &nbsp;<FormattedMessage id=\"link_contact_us\"\n              defaultMessage=\"Contact Us\" description=\"Ancor text for contacting us by email\" />\n          </a>\n          <a href={LINK_TERMS_OF_SERVICE} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">description</i> &nbsp;<FormattedMessage id=\"link_terms_of_service\"\n              defaultMessage=\"Terms of Service\" description=\"Ancor text for terms of service link\" />\n          </a>\n          <a href={LINK_PRIVACY_POLICY} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">policy</i> &nbsp;<FormattedMessage id=\"link_privacy_policy\"\n              defaultMessage=\"Privacy Policy\" description=\"Ancor text for privacy policy link\" />\n          </a>\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\"\n              description=\"Label for a client version\" /></label>\n            {APP_NAME}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_sdk\" defaultMessage=\"SDK:\" /></label>\n            {Tinode.getLibrary()}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\"\n              description=\"Label for a server version\" /></label>\n            {this.props.serverVersion}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server_address\" defaultMessage=\"Server address:\" /></label>\n            {this.props.serverAddress}\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","// Login form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\n\nexport default class LoginView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: props.login,\n      password: '',\n      hostName: props.serverAddress,\n      saveToken: props.persist\n    };\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  handleToggleSaveToken() {\n    this.props.onPersistenceChange(!this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onLogin(this.state.login.trim(), this.state.password.trim());\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form id=\"login-form\" onSubmit={this.handleSubmit}>\n        <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n          description=\"Placeholer for username/login\">\n        {\n          (login_prompt) => <input type=\"text\" id=\"inputLogin\"\n            placeholder={login_prompt}\n            autoComplete=\"username\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"none\"\n            value={this.state.login}\n            onChange={this.handleLoginChange}\n            required autoFocus />\n        }\n        </FormattedMessage>\n        <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n          description=\"Placeholder/prompt for entering password\">\n        {\n          (password_prompt) => <VisiblePassword type=\"password\" id=\"inputPassword\"\n            placeholder={password_prompt}\n            autoComplete=\"current-password\"\n            value={this.state.password}\n            onChange={this.handlePasswordChange}\n            required={true} />\n        }\n        </FormattedMessage>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <label htmlFor=\"save-token\">&nbsp;\n            <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n              description=\"Label for a checkbox\" />\n          </label>\n          <a href=\"#reset\">\n            <FormattedMessage id=\"forgot_password_link\" defaultMessage=\"Forgot password?\"\n              description=\"Link to Reset password form\" />\n          </a>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_in\" defaultMessage=\"Sign in\"\n              description=\"Button [Sign In]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n/* END Login */\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  invalid_id: {\n    id: 'error_invalid_id',\n    defaultMessage: 'Invalid ID',\n    description: 'Error message'\n  }\n});\n\nclass NewTopicById extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      groupId: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({groupId: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.groupId) {\n      const name = this.state.groupId.trim();\n      const prefix = name.substr(0, 3);\n      if (name.length > 3 && ['usr', 'grp', 'chn'].includes(prefix)) {\n        this.props.onSubmit(name);\n      } else {\n        this.props.onError(this.props.intl.formatMessage(messages.invalid_id), 'err');\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"group_user_id_prompt\" defaultMessage=\"Group or User ID\"\n          description=\"Prompt for entering user or group ID\">{\n          (prompt) => <input type=\"text\" placeholder={prompt}\n            value={this.state.groupId} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required autoFocus />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_subscribe\" defaultMessage=\"Subscribe\"\n              description=\"Button [Subscribe]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicById);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from './avatar-upload.jsx';\nimport CheckBox from './checkbox.jsx';\nimport TagManager from './tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH } from '../config.js';\n\nexport default class NewTopicGroup extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.fullName = React.createRef();\n\n    this.state = {\n      fullName: '', // full/formatted name\n      private: '',\n      description: '',\n      imageDataUrl: null,\n      tags: [],\n      isChannel: false\n    };\n\n    this.handleFieldEdit = this.handleFieldEdit.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleTagsChanged = this.handleTagsChanged.bind(this);\n    this.handleChannelToggle = this.handleChannelToggle.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    // this.fullName.current.focus();\n  }\n\n  handleFieldEdit(name, e) {\n    this.setState({[name]: e.target.value || ''});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleTagsChanged(tags) {\n    this.setState({tags: tags});\n  }\n\n  handleChannelToggle() {\n    this.setState({isChannel: !this.state.isChannel});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const fn = this.state.fullName.trim().substring(0, MAX_TITLE_LENGTH);\n    const comment = this.state.private.trim().substring(0, MAX_TITLE_LENGTH);\n    const description = this.state.description.trim().substring(0, MAX_TOPIC_DESCRIPTION_LENGTH);\n    if (fn) {\n      this.props.onSubmit(fn, description, this.state.imageDataUrl, comment, this.state.tags, this.state.isChannel);\n    }\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n    return (\n      <form className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-column\">\n          <center>\n            <AvatarUpload\n              tinode={this.props.tinode}\n              onError={this.props.onError}\n              onImageChanged={this.handleImageChanged} />\n          </center>\n          <div className=\"group\">\n            <label className=\"small\" htmlFor=\"new-topic-fn\">\n              <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                description=\"Label for editing topic name\" />\n            </label>\n            <FormattedMessage id=\"topic_name_editing_placeholder\" defaultMessage=\"Freeform name of the group\"\n              description=\"Prompt for entering topic name\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-fn\" placeholder={placeholder}\n                ref={this.fullName} value={this.state.fullName} onChange={this.handleFieldEdit.bind(this, 'fullName')}\n                autoFocus required tabIndex={0} />\n            }</FormattedMessage>\n          </div>\n          <div className=\"group\">\n            <label className=\"small\" htmlFor=\"new-topic-priv\">\n              <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                description=\"Label for editing 'private'\" />\n            </label>\n            <FormattedMessage id=\"private_editing_placeholder\" defaultMessage=\"Visible to you only\"\n              description=\"Placeholder for editing 'private'\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-priv\" placeholder={placeholder}\n                value={this.state.private} onChange={this.handleFieldEdit.bind(this, 'private')} tabIndex={1} />\n            }</FormattedMessage>\n          </div>\n          <div className=\"group\">\n            <label className=\"small\" htmlFor=\"new-topic-desc\">\n              <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                description=\"Label for editing topic description\" />\n            </label>\n            <FormattedMessage id=\"description_editing_placeholder\" defaultMessage=\"Description (optional)\"\n              description=\"Placeholder for editing topic description\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-desc\" placeholder={placeholder}\n                value={this.state.description} onChange={this.handleFieldEdit.bind(this, 'description')} tabIndex={2} />\n            }</FormattedMessage>\n          </div>\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox checked={this.state.isChannel} tabIndex={3} onChange={this.handleChannelToggle} />&nbsp;\n          <label onClick={this.handleChannelToggle}><FormattedMessage id=\"channel_prompt\"\n            defaultMessage=\"This is a channel\"\n            description=\"Checkbox label when creating a channel\" /></label>\n        </div>\n        <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (search & discovery)\"\n          description=\"Section title for TagManager\">{\n          (title) => <TagManager\n            tinode={this.props.tinode}\n            tags={this.state.tags}\n            activated={true}\n            onTagsChanged={this.handleTagsChanged}\n            tabIndex={4}\n            title={title} />\n        }</FormattedMessage>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses}>\n            <FormattedMessage id=\"button_create\" defaultMessage=\"Create\"\n              description=\"Button [Create]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nexport default class SearchContacts extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      edited: false,\n      search: ''\n    };\n\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  componentWillUnmount() {\n    if (this.state.edited) {\n      this.setState({search: '', edited: false});\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n  }\n\n  handleSearchChange(e) {\n    this.setState({search: e.target.value});\n  }\n\n  handleSearch(e) {\n    e.preventDefault();\n    var query = this.state.search.trim();\n    this.setState({edited: (query.length > 0)});\n    this.props.onSearchContacts(query.length > 0 ? query : Tinode.DEL_CHAR);\n  }\n\n  handleClear(e) {\n    e.preventDefault();\n    if (this.state.edited) {\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n    this.setState({search: '', edited: false});\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Enter') {\n      this.handleSearch(e);\n    } else if (e.key === 'Escape') {\n      this.handleClear();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <i className=\"material-icons search\">search</i>\n          <FormattedMessage id=\"search_placeholder\" defaultMessage=\"List like email:alice@example.com, tel:17025550003...\"\n            description=\"Placeholder in contacts search field\">{\n            (search_placeholder) => <input className=\"search\" type=\"text\"\n              placeholder={search_placeholder}\n              value={this.state.search} onChange={this.handleSearchChange}\n              onKeyDown={this.handleKeyDown} required autoFocus />\n          }</FormattedMessage>\n          <a href=\"#\" onClick={this.handleClear}>\n            <i className=\"material-icons\">close</i>\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","// Create new topic and invite users or send an invite.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport ContactList from '../widgets/contact-list.jsx';\nimport NewTopicById from '../widgets/new-topic-by-id.jsx';\nimport NewTopicGroup from '../widgets/new-topic-group.jsx';\nimport SearchContacts from '../widgets/search-contacts.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\nimport { theCard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  search_for_contacts: {\n    id: \"search_for_contacts\",\n    defaultMessage: \"Use search to find contacts\",\n    description: \"Text shown in contacts view when user entered no search query.\"\n  },\n  search_no_results: {\n    id: \"search_no_results\",\n    defaultMessage: \"Search returned no results\",\n    description: \"Text shown in contacts view when query returned no results.\"\n  }\n});\n\nclass NewTopicView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tabSelected: 'p2p',\n      searchQuery: null\n    };\n\n    this.handleTabClick = this.handleTabClick.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleNewGroupSubmit = this.handleNewGroupSubmit.bind(this);\n    this.handleGroupByID = this.handleGroupByID.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.onInitFind();\n  }\n\n  handleTabClick(e) {\n    e.preventDefault();\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'tab', e.currentTarget.dataset.id));\n    this.setState({tabSelected: e.currentTarget.dataset.id});\n  }\n\n  handleSearchContacts(query) {\n    this.props.onSearchContacts(query);\n    this.setState({searchQuery: Tinode.isNullValue(query) ? null : query});\n  }\n\n  handleContactSelected(uid) {\n    if (this.state.tabSelected == 'p2p') {\n      HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n      this.props.onCreateTopic(uid);\n    }\n  }\n\n  handleNewGroupSubmit(name, description, dataUrl, priv, tags, isChannel) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(undefined,\n      {public: theCard(name, dataUrl, null, description), private: priv, tags: tags}, isChannel);\n  }\n\n  handleGroupByID(topicName) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(topicName);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const no_contacts_placeholder = formatMessage(this.state.searchQuery ?\n      messages.search_no_results : messages.search_for_contacts);\n    return (\n      <div className=\"flex-column\">\n        <ul className=\"tabbar\">\n          <li className={this.state.tabSelected === \"p2p\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"p2p\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_find_user\" defaultMessage=\"find\"\n                description=\"Tab title Find\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"grp\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"grp\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_new_group\" defaultMessage=\"new group\"\n                description=\"Tab title New Group\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"byid\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"byid\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_group_by_id\" defaultMessage=\"by id\"\n                description=\"Tab title Find topic by ID\" />\n            </a>\n          </li>\n        </ul>\n        {this.state.tabSelected === 'grp' ?\n          <NewTopicGroup\n            tinode={this.props.tinode}\n            onSubmit={this.handleNewGroupSubmit} /> :\n          this.state.tabSelected === 'byid' ?\n            <NewTopicById\n              onSubmit={this.handleGroupByID}\n              onError={this.props.onError} /> :\n            <div className=\"flex-column\">\n              <SearchContacts\n                type=\"p2p\"\n                onSearchContacts={this.handleSearchContacts} />\n              <ContactList\n                tinode={this.props.tinode}\n                contacts={this.props.searchResults}\n                myUserId={this.props.myUserId}\n                emptyListMessage={no_contacts_placeholder}\n                showOnline={false}\n                showUnread={false}\n                showContextMenu={false}\n                onTopicSelected={this.handleContactSelected} />\n            </div>}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicView);\n","// A password reset form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\n\nexport default class PasswordResetView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: '',\n      sent: false\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n  }\n\n  componentDidMount() {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    this.setState({token: parsed.params.token, scheme: parsed.params.scheme});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.token) {\n      this.props.onReset(this.state.scheme, this.state.password.trim(), this.state.token);\n    } else if (this.state.sent) {\n      this.props.onCancel();\n    } else {\n      const email = this.state.email.trim();\n      this.setState({email: email});\n      this.props.onRequest('email', email).then(() => {\n        this.setState({sent: true});\n      });\n    }\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  render() {\n    return (\n      <form id=\"password-reset-form\" onSubmit={this.handleSubmit}>\n        {(this.state.token && this.state.scheme) ?\n          <FormattedMessage id=\"new_password_placeholder\" defaultMessage=\"Enter new password\"\n            description=\"Placeholder for entering new password\">{\n            (placeholder) => <VisiblePassword\n              placeholder={placeholder}\n              autoComplete=\"new-password\"\n              value={this.state.password}\n              required={true} autoFocus={true}\n              onChange={this.handlePasswordChange} />\n          }</FormattedMessage>\n        : this.state.sent ?\n          <>\n            <br/>\n            <center><i className=\"material-icons huge green\">task_alt</i></center>\n            <br/>\n            <center><FormattedMessage id=\"password_reset_email_sent\"\n              defaultMessage=\"An email has been sent to {email}. Follow the directions in the email to reset your password.\"\n              values={{ email: <tt>{this.state.email}</tt> }}\n              description=\"Notification that the email with password reset instructions has been sent\" /></center>\n          </>\n        :\n          <>\n            <label htmlFor=\"inputEmail\">\n              <FormattedMessage id=\"label_reset_password\"\n                defaultMessage=\"Send a password reset email:\"\n                description=\"Label for password reset field\" />\n            </label>\n            <FormattedMessage id=\"credential_email_prompt\" defaultMessage=\"Your registration email\"\n              description=\"Placeholder for entering email\">{\n              (placeholder) => <input type=\"email\" id=\"inputEmail\"\n                placeholder={placeholder}\n                autoComplete=\"email\"\n                value={this.state.email}\n                onChange={this.handleEmailChange}\n                required autoFocus />\n            }</FormattedMessage>\n          </>\n        }\n        <div className=\"dialog-buttons\">\n          <button className=\"primary\" type=\"submit\">{\n            (this.state.token && this.state.scheme) ?\n            <FormattedMessage id=\"button_reset\" defaultMessage=\"Reset\" description=\"Button [Reset]\" />\n            : this.state.sent ?\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\"\n              description=\"Button [OK]\" />\n            :\n            <FormattedMessage id=\"button_send_request\" defaultMessage=\"Send request\"\n              description=\"Button [Send request]\" />\n          }</button>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react';\n\nimport { KNOWN_HOSTS } from '../config.js';\n\n/* Combobox for selecting host name */\n\nexport default class HostSelector extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hostName: props.serverAddress,\n      changed: false\n    };\n\n    this.handleHostNameChange = this.handleHostNameChange.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handleHostNameChange(e) {\n    this.setState({hostName: e.target.value, changed: true});\n  }\n\n  handleEditingFinished() {\n    if (this.state.changed) {\n      this.setState({changed: false});\n      this.props.onServerAddressChange(this.state.hostName.trim());\n    }\n  }\n\n  render() {\n    var hostOptions = [];\n    for (let key in KNOWN_HOSTS) {\n      let item = KNOWN_HOSTS[key];\n      hostOptions.push(\n        <option key={item} value={item} />\n      );\n    }\n    return (\n      <div className=\"panel-form-row\">\n        <input type=\"search\" id=\"host-name\" placeholder={this.props.hostName} list=\"known-hosts\"\n          className=\"quoted\" value={this.state.hostName} onChange={this.handleHostNameChange}\n          onBlur={this.handleEditingFinished} required />\n        <datalist id=\"known-hosts\">\n          {hostOptions}\n        </datalist>\n      </div>\n    );\n  }\n}\n","// Tinode config panel.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport HostSelector from '../widgets/host-selector.jsx';\n\nexport default class SettingsView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transport: props.transport || 'def',\n      serverAddress: props.serverAddress,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleTransportSelected = this.handleTransportSelected.bind(this);\n    this.handleServerAddressChange = this.handleServerAddressChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onUpdate({\n      transport: this.state.transport,\n      serverAddress: this.state.serverAddress\n    });\n  }\n\n  handleTransportSelected(e) {\n    this.setState({transport: e.currentTarget.value});\n  }\n\n  handleServerAddressChange(name) {\n    this.setState({serverAddress: name});\n  }\n\n  render() {\n    const names = {def: \"default\", ws: \"websocket\", lp: \"long polling\"};\n    const transportOptions = [];\n    ['def', 'ws', 'lp'].map((item) => {\n      const id = 'transport-' + item;\n      const name = names[item];\n      transportOptions.push(\n        <li key={item}>\n          <input type=\"radio\" id={id} name=\"transport-select\" value={item}\n            checked={this.state.transport === item}\n            onChange={this.handleTransportSelected} />\n          <label htmlFor={id}>{name}</label>\n        </li>\n      );\n    });\n\n    return (\n      <form id=\"settings-form\" className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_server_to_use\" defaultMessage=\"Server to use:\"\n              description=\"Label for server selector in SettingsView\" />\n          </label>\n        </div>\n        <HostSelector serverAddress={this.state.serverAddress}\n          onServerAddressChange={this.handleServerAddressChange} />\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_wire_transport\" defaultMessage=\"Wire transport:\"\n              description=\"Label for wire transport selection in SettingsView\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ul className=\"quoted\">\n            {transportOptions}\n          </ul>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button type=\"submit\" className=\"primary\">\n            <FormattedMessage id=\"button_update\" defaultMessage=\"Update\"\n              description=\"Button [Update]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// ValidationView: panel for confirming credentials, like email or phone.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  phone: {\n    id: 'phone_dative',\n    defaultMessage: 'phone',\n    description: \"Dative case of 'phone', i.e. 'phone' in 'by phone'\",\n  },\n  email: {\n    id: 'email_dative',\n    defaultMessage: 'email',\n    description: \"Dative case of 'email', i.e. 'email' in 'by email'\",\n  }\n});\n\nclass ValidationView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      code: props.credCode || ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({code: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    } else if (e.key == 'Escape') {\n      this.handleCancel(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.code && this.state.code.trim()) {\n      this.props.onSubmit(this.props.credMethod, this.state.code.trim());\n    }\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel();\n  }\n\n\n  render() {\n    const { formatMessage } = this.props.intl;\n    const methods = {'email': formatMessage(messages.email), 'tel': formatMessage(messages.phone)};\n    let method = methods[this.props.credMethod] || this.props.credMethod;\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\" htmlFor=\"enter-confirmation-code\">\n            <FormattedMessage id=\"enter_confirmation_code_prompt\"\n              defaultMessage=\"Enter confirmation code sent to you by {method}:\"\n              description=\"Request to enter confirmation code\"\n              values={{method: method}} />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"numeric_confirmation_code_prompt\"\n          defaultMessage=\"Numbers only\" description=\"Prompt for numeric conformation code\">{\n          (numbers_only) => <input type=\"text\" id=\"enter-confirmation-code\"\n            placeholder={numbers_only}\n            value={this.state.code} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"secondary\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_confirm\" defaultMessage=\"Confirm\" description=\"Button [Confirm]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ValidationView);\n","import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport SideNavbar from '../widgets/side-navbar.jsx';\nimport TopicCommon from '../widgets/topic-common.jsx';\n\nimport AccountSettingsView from './account-settings-view.jsx';\nimport ContactsView from './contacts-view.jsx';\nimport CreateAccountView from './create-account-view.jsx';\nimport AccNotificationsView from './acc-notifications-view.jsx';\nimport AccSecurityView from './acc-security-view.jsx';\nimport AccSupportView from './acc-support-view.jsx';\nimport LoginView from './login-view.jsx';\nimport NewTopicView from './new-topic-view.jsx';\nimport PasswordResetView from './password-reset-view.jsx';\nimport SettingsView from './settings-view.jsx';\nimport ValidationView from './validation-view.jsx';\n\n// Panel titles for translation.\nconst messages = defineMessages({\n  login: {\n    id: 'sidepanel_title_login',\n    description: 'Sidepanel title for LoginView.',\n    defaultMessage: 'Sign In'\n  },\n  register: {\n    id: 'sidepanel_title_register',\n    description: 'Sidepanel title for CreateAccountView.',\n    defaultMessage: 'Create Account'\n  },\n  settings: {\n    id: 'sidepanel_title_settings',\n    description: 'Sidepanel title for SettingsView.',\n    defaultMessage: 'Settings'\n  },\n  edit: {\n    id: 'sidepanel_title_account_settings',\n    description: 'Sidepanel title for AccountSettingsView.',\n    defaultMessage: 'Account Settings'\n  },\n  general: {\n    id: 'panel_title_general',\n    description: 'Title for TopicCommon.',\n    defaultMessage: 'General'\n  },\n  security: {\n    id: 'panel_title_security',\n    description: 'Title for TopicSecirity and AccSecurity.',\n    defaultMessage: 'Security'\n  },\n  crop: {\n    id: 'panel_title_crop',\n    description: 'Title for AvatarCropView.',\n    defaultMessage: 'Drag to Adjust'\n  },\n  notif: {\n    id: 'sidepanel_title_acc_notifications',\n    description: 'Sidepanel title for AccNotificationsView.',\n    defaultMessage: 'Notifications'\n  },\n  support: {\n    id: 'sidepanel_title_acc_support',\n    description: 'Sidepanel title for AccSupportView.',\n    defaultMessage: 'Support'\n  },\n  newtpk: {\n    id: 'sidepanel_title_newtpk',\n    description: 'Sidepanel title for NewTopicView.',\n    defaultMessage: 'Start New Chat'\n  },\n  cred: {\n    id: 'sidepanel_title_cred',\n    description: 'Sidepanel title for ValidationView.',\n    defaultMessage: 'Confirm Credentials'\n  },\n  reset: {\n    id: 'sidepanel_title_reset',\n    description: 'Sidepanel title for PasswordResetView.',\n    defaultMessage: 'Reset Password'\n  },\n  archive: {\n    id: 'sidepanel_title_archive',\n    description: 'Sidepanel title for ContactsView-Archive.',\n    defaultMessage: 'Archived Chats'\n  },\n  blocked: {\n    id: 'sidepanel_title_blocked',\n    description: 'Sidepanel title for ContactsView-Blocked.',\n    defaultMessage: 'Blocked Chats'\n  }\n});\n\nclass SidepanelView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNewTopic = this.handleNewTopic.bind(this);\n  }\n\n  handleNewTopic() {\n    this.props.onNavigate('newtpk');\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const view = this.props.state || (this.props.myUserId ? 'contacts' : 'login');\n\n    let title, avatar, badges;\n    if (view == 'contacts') {\n      title = this.props.title;\n      avatar = this.props.avatar ? this.props.avatar : true;\n      badges = this.props.trustedBadges;\n    } else {\n      title = formatMessage(messages[view]);\n      avatar = false;\n      badges = null;\n    }\n\n    let onCancel;\n    if (['login', 'contacts'].indexOf(view) == -1) {\n      onCancel = this.props.onCancel;\n    }\n\n    return (\n      <div id=\"sidepanel\" className={this.props.hideSelf ? 'nodisplay' : null}>\n        <SideNavbar\n          state={view}\n          title={title}\n          avatar={avatar}\n          tinode={this.props.tinode}\n          trustedBadges={badges}\n          myUserId={this.props.myUserId}\n          onSignUp={this.props.onSignUp}\n          onSettings={this.props.onSettings}\n          onNewTopic={this.handleNewTopic}\n          onCancel={onCancel} />\n\n        <ErrorPanel\n          level={this.props.errorLevel}\n          text={this.props.errorText}\n          action={this.props.errorAction}\n          actionText={this.props.errorActionText}\n          onClearError={this.props.onError} />\n\n        <LoadSpinner show={this.props.loadSpinnerVisible} />\n\n        {view === 'login' ?\n          <LoginView\n            login={this.props.login}\n            disabled={this.props.loginDisabled}\n            persist={this.props.persist}\n            onLogin={this.props.onLoginRequest}\n            onPersistenceChange={this.props.onPersistenceChange} /> :\n\n          view === 'register' ?\n          <CreateAccountView\n            tinode={this.props.tinode}\n            onCreateAccount={this.props.onCreateAccount}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'settings' ?\n          <SettingsView\n            transport={this.props.transport}\n            serverAddress={this.props.serverAddress}\n            onCancel={this.props.onCancel}\n            onUpdate={this.props.onGlobalSettings} /> :\n\n          view === 'edit' ?\n          <AccountSettingsView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            trustedBadges={this.props.trustedBadges}\n            onNavigate={this.props.onNavigate} /> :\n\n          (view === 'general' || view === 'crop') ?\n          <TopicCommon\n            topic=\"me\"\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            onUpdateTopicDesc={this.props.onUpdateAccountDesc}\n            onUpdateTags={this.props.onUpdateAccountTags}\n            onCredAdd={this.props.onCredAdd}\n            onCredDelete={this.props.onCredDelete}\n            onCredConfirm={this.props.onCredConfirm}\n            onError={this.props.onError} /> :\n\n          view === 'notif' ?\n          <AccNotificationsView\n            messageSounds={this.props.messageSounds}\n            desktopAlerts={this.props.desktopAlerts}\n            desktopAlertsEnabled={this.props.desktopAlertsEnabled}\n            incognitoMode={this.props.incognitoMode}\n            onTogglePushNotifications={this.props.onTogglePushNotifications}\n            onToggleMessageSounds={this.props.onToggleMessageSounds}\n            onToggleIncognitoMode={this.props.onToggleIncognitoMode} /> :\n\n          view === 'security' ?\n          <AccSecurityView\n            tinode={this.props.tinode}\n            onUpdateAccountDesc={this.props.onUpdateAccountDesc}\n            onUpdatePassword={this.props.onUpdatePassword}\n            onLogout={this.props.onLogout}\n            onDeleteAccount={this.props.onDeleteAccount}\n            onShowAlert={this.props.onShowAlert}\n            onShowBlocked={this.props.onShowBlocked} /> :\n\n          view === 'support' ?\n          <AccSupportView\n            serverAddress={this.props.serverAddress}\n            serverVersion={this.props.serverVersion} /> :\n\n          (view === 'contacts' || view == 'archive' || view == 'blocked') ?\n          <ContactsView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            connected={this.props.connected}\n            topicSelected={this.props.topicSelected}\n            archive={view == 'archive'}\n            blocked={view == 'blocked'}\n            chatList={this.props.chatList}\n            showContextMenu={this.props.showContextMenu}\n            onTopicSelected={this.props.onTopicSelected}\n            onShowArchive={this.props.onShowArchive} /> :\n\n          view === 'newtpk' ?\n          <NewTopicView\n            tinode={this.props.tinode}\n            searchResults={this.props.searchResults}\n            onInitFind={this.props.onInitFind}\n            onSearchContacts={this.props.onSearchContacts}\n            onCreateTopic={this.props.onCreateTopic}\n            onError={this.props.onError} /> :\n\n          view === 'cred' ?\n          <ValidationView\n            credCode={this.props.credCode}\n            credMethod={this.props.credMethod}\n            onSubmit={this.props.onValidateCredentials}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'reset' ?\n          <PasswordResetView\n            onRequest={this.props.onPasswordResetRequest}\n            onReset={this.props.onResetPassword}\n            onCancel={this.props.onCancel} /> :\n          null}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SidepanelView);\n","import { KNOWN_HOSTS, DEFAULT_HOST } from '../config.js';\n\n// Detect server address from the URL\nexport function detectServerAddress() {\n  let host = DEFAULT_HOST;\n  if (typeof window.location == 'object') {\n    if (window.location.protocol == 'file:' || window.location.hostname == 'localhost') {\n      host = KNOWN_HOSTS.local;\n    } else if (window.location.hostname) {\n      host = window.location.hostname + (window.location.port ? ':' + window.location.port : '');\n    }\n  }\n  return host;\n}\n\n// Detect if the page is served over HTTPS.\nexport function isSecureConnection() {\n  if (typeof window.location == 'object') {\n    return window.location.protocol == 'https:';\n  }\n  return false;\n}\n\nexport function isLocalHost() {\n  if (typeof window.location == 'object') {\n    return window.location.hostname == 'localhost';\n  }\n  return false;\n}\n","// The top-level class to hold all functionality together.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport * as firebase from 'firebase/app';\nimport 'firebase/messaging';\n\nimport Tinode from 'tinode-sdk';\n\nimport Alert from '../widgets/alert.jsx';\nimport ContextMenu from '../widgets/context-menu.jsx';\n\nimport InfoView from './info-view.jsx';\nimport MessagesView from './messages-view.jsx';\nimport SidepanelView from './sidepanel-view.jsx';\n\nimport { API_KEY, APP_NAME, DEFAULT_P2P_ACCESS_MODE, LOGGING_ENABLED,\n  MEDIA_BREAKPOINT, RECEIVED_DELAY } from '../config.js';\nimport { PACKAGE_VERSION } from '../version.js';\nimport { base64ReEncode, makeImageUrl } from '../lib/blob-helpers.js';\nimport { detectServerAddress, isLocalHost, isSecureConnection } from '../lib/host-name.js';\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { secondsToTime } from '../lib/strformat.js'\nimport { updateFavicon } from '../lib/utils.js';\n\n// Sound to play on message received.\nconst POP_SOUND = new Audio('audio/msg.mp3');\n\nconst messages = defineMessages({\n  reconnect_countdown: {\n    id: 'reconnect_countdown',\n    defaultMessage: 'Disconnected. Reconnecting in {seconds}…',\n    description: 'Message shown when an app update is available.'\n  },\n  reconnect_now: {\n    id: 'reconnect_now',\n    defaultMessage: 'Try now',\n    description: 'Prompt for reconnecting now'\n  },\n  push_init_failed: {\n    id: 'push_init_failed',\n    defaultMessage: 'Failed to initialize push notifications',\n    description: 'Error message when push notifications have failed to initialize.'\n  },\n  invalid_security_token: {\n    id: 'invalid_security_token',\n    defaultMessage: 'Invalid security token',\n    description: 'Error message when resetting password.'\n  },\n  no_connection: {\n    id: 'no_connection',\n    defaultMessage: 'No connection',\n    description: 'Warning that the user is offline.'\n  },\n  code_doesnot_match: {\n    id: 'code_doesnot_match',\n    defaultMessage: 'Code does not match',\n    description: 'Error message when the credential validation code is incorrect.'\n  },\n  menu_item_info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  }\n});\n\nclass TinodeWeb extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selfRef = React.createRef();\n\n    this.state = this.getBlankState();\n\n    this.handleResize = this.handleResize.bind(this);\n    this.handleHashRoute = this.handleHashRoute.bind(this);\n    this.handleOnline = this.handleOnline.bind(this);\n    this.checkForAppUpdate = this.checkForAppUpdate.bind(this);\n    this.handleVisibilityEvent = this.handleVisibilityEvent.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.handleLoginRequest = this.handleLoginRequest.bind(this);\n    this.handlePersistenceChange = this.handlePersistenceChange.bind(this);\n    this.handleConnected = this.handleConnected.bind(this);\n    this.handleAutoreconnectIteration = this.handleAutoreconnectIteration.bind(this);\n    this.doLogin = this.doLogin.bind(this);\n    this.handleCredentialsRequest = this.handleCredentialsRequest.bind(this);\n    this.handleLoginSuccessful = this.handleLoginSuccessful.bind(this);\n    this.handleDisconnect = this.handleDisconnect.bind(this);\n    this.tnMeMetaDesc = this.tnMeMetaDesc.bind(this);\n    this.tnMeContactUpdate = this.tnMeContactUpdate.bind(this);\n    this.tnMeSubsUpdated = this.tnMeSubsUpdated.bind(this);\n    this.resetContactList = this.resetContactList.bind(this);\n    this.tnData = this.tnData.bind(this);\n    this.tnInitFind = this.tnInitFind.bind(this);\n    this.tnFndSubsUpdated = this.tnFndSubsUpdated.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleTopicSelected = this.handleTopicSelected.bind(this);\n    this.handleHideMessagesView = this.handleHideMessagesView.bind(this);\n    this.handleSendMessage = this.handleSendMessage.bind(this);\n    this.handleNewChatInvitation = this.handleNewChatInvitation.bind(this);\n    this.handleNewAccount = this.handleNewAccount.bind(this);\n    this.handleNewAccountRequest = this.handleNewAccountRequest.bind(this);\n    this.handleUpdatePasswordRequest = this.handleUpdatePasswordRequest.bind(this);\n    this.handleUpdateAccountTagsRequest = this.handleUpdateAccountTagsRequest.bind(this);\n    this.handleToggleIncognitoMode = this.handleToggleIncognitoMode.bind(this);\n    this.handleSettings = this.handleSettings.bind(this);\n    this.handleGlobalSettings = this.handleGlobalSettings.bind(this);\n    this.handleShowArchive = this.handleShowArchive.bind(this);\n    this.handleShowBlocked = this.handleShowBlocked.bind(this);\n    this.handleToggleMessageSounds = this.handleToggleMessageSounds.bind(this);\n    this.handleCredAdd = this.handleCredAdd.bind(this);\n    this.handleCredDelete = this.handleCredDelete.bind(this);\n    this.handleCredConfirm = this.handleCredConfirm.bind(this);\n    this.initFCMessaging = this.initFCMessaging.bind(this);\n    this.togglePushToken = this.togglePushToken.bind(this);\n    this.requestPushToken = this.requestPushToken.bind(this);\n    this.handlePushMessage = this.handlePushMessage.bind(this);\n    this.handleSidepanelCancel = this.handleSidepanelCancel.bind(this);\n    this.handleStartTopicRequest = this.handleStartTopicRequest.bind(this);\n    this.handleNewTopicCreated = this.handleNewTopicCreated.bind(this);\n    this.handleTopicUpdateRequest = this.handleTopicUpdateRequest.bind(this);\n    this.handleUnarchive = this.handleUnarchive.bind(this);\n    this.handleChangePermissions = this.handleChangePermissions.bind(this);\n    this.handleTagsUpdateRequest = this.handleTagsUpdateRequest.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n    this.handleDeleteTopicRequest = this.handleDeleteTopicRequest.bind(this);\n    this.handleDeleteMessagesRequest = this.handleDeleteMessagesRequest.bind(this);\n    this.handleLeaveUnsubRequest = this.handleLeaveUnsubRequest.bind(this);\n    this.handleBlockTopicRequest = this.handleBlockTopicRequest.bind(this);\n    this.handleReportTopic = this.handleReportTopic.bind(this);\n    this.handleShowContextMenu = this.handleShowContextMenu.bind(this);\n    this.defaultTopicContextMenu = this.defaultTopicContextMenu.bind(this);\n    this.handleHideContextMenu = this.handleHideContextMenu.bind(this);\n    this.handleShowAlert = this.handleShowAlert.bind(this);\n    this.handleShowInfoView = this.handleShowInfoView.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleValidateCredentialsRequest = this.handleValidateCredentialsRequest.bind(this);\n    this.handlePasswordResetRequest = this.handlePasswordResetRequest.bind(this);\n    this.handleResetPassword = this.handleResetPassword.bind(this);\n    this.handleContextMenuAction = this.handleContextMenuAction.bind(this);\n  }\n\n  getBlankState() {\n    const settings = LocalStorageUtil.getObject('settings') || {};\n    const persist = !!LocalStorageUtil.getObject('keep-logged-in');\n\n    return {\n      connected: false,\n      // Connected and subscribed to 'me'\n      ready: false,\n      // Try to re-login on new connection.\n      autoLogin: false,\n      transport: settings.transport || null,\n      serverAddress: settings.serverAddress || detectServerAddress(),\n      serverVersion: \"no connection\",\n      // \"On\" is the default, so saving the \"off\" state.\n      messageSounds: !settings.messageSoundsOff,\n      incognitoMode: false,\n      desktopAlerts: persist && !!settings.desktopAlerts,\n      desktopAlertsEnabled: (isSecureConnection() || isLocalHost()) &&\n        (typeof firebase != 'undefined') && (typeof navigator != 'undefined') &&\n        (typeof FIREBASE_INIT != 'undefined'),\n      firebaseToken: persist ? LocalStorageUtil.getObject('firebase-token') : null,\n\n      applicationVisible: !document.hidden,\n\n      errorText: '',\n      errorLevel: null,\n      errorAction: undefined,\n      errorActionText: null,\n\n      sidePanelSelected: 'login',\n      sidePanelTitle: null,\n      sidePanelAvatar: null,\n      myTrustedBadges: [],\n      loadSpinnerVisible: false,\n\n      login: '',\n      password: '',\n      persist: persist,\n      myUserId: null,\n      liveConnection: navigator.onLine,\n      topicSelected: '',\n      topicSelectedOnline: false,\n      topicSelectedAcs: null,\n      newTopicParams: null,\n      loginDisabled: false,\n      displayMobile: (window.innerWidth <= MEDIA_BREAKPOINT),\n      infoPanel: undefined,\n      mobilePanel: 'sidepanel',\n\n      contextMenuVisible: false,\n      contextMenuBounds: null,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuItems: [],\n\n      // Modal alert dialog.\n      alertVisible: false,\n      alertParams: {},\n\n      // Chats as shown in the ContactsView\n      chatList: [],\n      // Contacts returned by a search query.\n      searchResults: [],\n      // Merged results of a search query and p2p chats.\n      searchableContacts: [],\n      credMethod: undefined,\n      credCode: undefined,\n      // Topic to go to after login.\n      requestedTopic: undefined\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    window.addEventListener('online', (e) => { this.handleOnline(true); });\n    window.addEventListener('offline', (e) => { this.handleOnline(false); });\n    window.addEventListener('hashchange', this.handleHashRoute);\n\n    // Process background notifications from the service worker.\n    if (typeof BroadcastChannel == 'function') {\n      const serviceWorkerChannel = new BroadcastChannel('tinode-sw');\n      serviceWorkerChannel.addEventListener('message', this.handlePushMessage);\n    } else {\n      // Safari is broken by design.\n      console.warn(\"Your browser does not support BroadcastChannel. Some features will not be available\");\n    }\n\n    // Window/tab visible or invisible for pausing timers.\n    document.addEventListener('visibilitychange', this.handleVisibilityEvent);\n\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n\n    new Promise((resolve, reject) => {\n      this.tinode = TinodeWeb.tnSetup(this.state.serverAddress, this.state.transport,\n        this.props.intl.locale, this.state.persist, resolve);\n      this.tinode.onConnect = this.handleConnected;\n      this.tinode.onDisconnect = this.handleDisconnect;\n      this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n    }).then(() => {\n      // Initialize desktop alerts.\n      if (this.state.desktopAlertsEnabled) {\n        this.initFCMessaging().then(() => {\n          if (this.state.desktopAlerts) {\n            if (!this.state.firebaseToken) {\n              this.togglePushToken(true);\n            } else {\n              this.tinode.setDeviceToken(this.state.firebaseToken);\n            }\n          }\n        }).catch(() => {\n          // do nothing: handled earlier.\n          // catch needed to pervent unnecessary logging of error.\n        });\n      }\n\n      // Parse and save the hash navigation params.\n      const parsedNav = HashNavigation.parseUrlHash(window.location.hash);\n\n      // Read contacts from cache.\n      this.resetContactList();\n\n      const token = this.state.persist ? LocalStorageUtil.getObject('auth-token') : undefined;\n      if (token) {\n        this.setState({autoLogin: true});\n\n        // When reading from storage, date is returned as string.\n        token.expires = new Date(token.expires);\n        this.tinode.setAuthToken(token);\n        this.tinode.connect().catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n      }\n\n      // Save possible topic name and navigate to blank state.\n      this.setState({requestedTopic: parsedNav.path[1]});\n      HashNavigation.navigateTo('');\n\n      this.readTimer = null;\n      this.readTimerCallback = null;\n\n      this.handleHashRoute();\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n    window.removeEventListener('hashchange', this.handleHashRoute);\n    document.removeEventListener('visibilitychange', this.handleVisibilityEvent);\n  }\n\n  // Setup transport (usually websocket) and server address. This will terminate connection with the server.\n  static tnSetup(serverAddress, transport, locale, persistentCache, onSetupCompleted) {\n    const tinode = new Tinode({appName: APP_NAME, host: serverAddress, apiKey: API_KEY, transport: transport,\n      secure: isSecureConnection(), persist: persistentCache}, onSetupCompleted);\n    tinode.setHumanLanguage(locale);\n    tinode.enableLogging(LOGGING_ENABLED, true);\n    return tinode;\n  }\n\n  // Notifiy Tinode that a push message was received from the server.\n  handlePushMessage(data) {\n    if (data.what == 'msg' && Tinode.isChannelTopicName(data.topic)) {\n      // The last argument is a fake user Id: otherwise the update is seen as one from the current user.\n      this.tinode.oobNotification(data.topic, data.seq, 'fake-uid');\n    }\n  }\n\n  initFCMessaging() {\n    const {formatMessage, locale} = this.props.intl;\n    const onError = (msg, err) => {\n      console.error(msg, err);\n      this.handleError(formatMessage(messages.push_init_failed), 'err');\n      this.setState({desktopAlertsEnabled: false});\n    }\n\n    try {\n      this.fbPush = firebase.initializeApp(FIREBASE_INIT, APP_NAME).messaging();\n      this.fbPush.usePublicVapidKey(FIREBASE_INIT.messagingVapidKey);\n\n      return navigator.serviceWorker.register('/service-worker.js').then((reg) => {\n        this.checkForAppUpdate(reg);\n        this.fbPush.useServiceWorker(reg);\n        reg.active.postMessage(JSON.stringify({locale: locale, version: PACKAGE_VERSION}));\n\n        // Google could not be bothered to mention that onTokenRefresh is never called.\n        this.fbPush.onTokenRefresh(() => {\n          this.requestPushToken();\n        });\n\n        // Handhe FCM pushes\n        // (a) for channels always,\n        // (b) pushes when the app is in foreground but has not focus.\n        this.fbPush.onMessage(payload => { this.handlePushMessage(payload.data); });\n\n        return reg;\n      }).catch((err) => {\n        // registration failed :(\n        onError(\"Failed to register service worker:\", err);\n        return Promise.reject(err);\n      });\n    } catch (err) {\n      onError(\"Failed to initialize push notifications\", err);\n      return Promise.reject(err);\n    }\n  }\n\n  handleResize() {\n    const mobile = document.documentElement.clientWidth <= MEDIA_BREAKPOINT;\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n    if (this.state.displayMobile != mobile) {\n      this.setState({displayMobile: mobile});\n    }\n  }\n\n  // Check if a newer version of TinodeWeb app is available at the server.\n  checkForAppUpdate(reg) {\n    reg.onupdatefound = () => {\n      const installingWorker = reg.installing;\n      installingWorker.onstatechange = () => {\n        if (installingWorker.state == 'installed' && navigator.serviceWorker.controller) {\n          const msg = <>\n            <FormattedMessage id=\"update_available\"\n              defaultMessage=\"Update available.\"\n              description=\"Message shown when an app update is available.\" /> <a href=\"\">\n              <FormattedMessage id=\"reload_update\"\n                defaultMessage=\"Reload\"\n                description=\"Call to action to reload application when update is available.\" />\n            </a>.</>;\n          this.handleError(msg, 'info');\n        }\n      }\n    }\n  }\n\n  // Handle for hashchange event: display appropriate panels.\n  handleHashRoute() {\n    const hash = HashNavigation.parseUrlHash(window.location.hash);\n    if (hash.path && hash.path.length > 0) {\n      // Left-side panel selector.\n      if (['register','settings','edit','notif','security','support','general','crop',\n          'cred','reset','newtpk','archive','blocked','contacts',''].includes(hash.path[0])) {\n        this.setState({sidePanelSelected: hash.path[0]});\n      } else {\n        console.warn(\"Unknown sidepanel view\", hash.path[0]);\n      }\n\n      // Topic for MessagesView selector.\n      let topicName = hash.path[1] || null;\n      if (topicName != this.state.topicSelected) {\n        if (!Tinode.topicType(topicName)) {\n          // Clear invalid topic name.\n          topicName = null;\n        }\n        const newState = {\n          topicSelected: topicName\n        };\n        const acs = this.tinode.getTopicAccessMode(topicName);\n        if (acs) {\n          newState.topicSelectedAcs = acs;\n        }\n        this.setState(newState);\n      }\n    } else {\n      // Empty hashpath\n      this.setState({sidePanelSelected: '', topicSelected: null});\n    }\n\n    // Save validation credentials, if available.\n    if (hash.params.method) {\n      this.setState({ credMethod: hash.params.method });\n    }\n    if (hash.params.code) {\n      this.setState({ credCode: hash.params.code });\n    }\n\n    // Additional parameters of panels.\n    this.setState({\n      infoPanel: hash.params.info,\n      newTopicTabSelected: hash.params.tab\n    });\n  }\n\n  handleOnline(online) {\n    if (online) {\n      this.handleError();\n      clearInterval(this.reconnectCountdown);\n      this.tinode.reconnect();\n    } else {\n      this.handleError(this.props.intl.formatMessage(messages.no_connection), 'warn');\n    }\n    this.setState({liveConnection: online});\n  }\n\n  handleVisibilityEvent() {\n    this.setState({applicationVisible: !document.hidden});\n  }\n\n  handleError(err, level, action, actionText) {\n    this.setState({errorText: err, errorLevel: level, errorAction: action, errorActionText: actionText});\n  }\n\n  // User clicked Login button in the side panel.\n  handleLoginRequest(login, password) {\n    this.setState({\n      loginDisabled: true,\n      login: login,\n      password: password,\n      loadSpinnerVisible: true,\n      autoLogin: true\n    });\n    this.handleError('', null);\n\n    if (this.tinode.isConnected()) {\n      this.doLogin(login, password, {meth: this.state.credMethod, resp: this.state.credCode});\n    } else {\n      this.tinode.connect().catch((err) => {\n        // Socket error\n        this.setState({loginDisabled: false, autoLogin: false, loadSpinnerVisible: false});\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // Enable or disable saving the password and IndexedDB.\n  handlePersistenceChange(persist) {\n    if (persist) {\n      this.tinode.initStorage().then(() => {\n        LocalStorageUtil.setObject('keep-logged-in', true);\n        this.setState({persist: true});\n      });\n    } else {\n      this.tinode.clearStorage().then(() => {\n        LocalStorageUtil.setObject('keep-logged-in', false);\n        this.setState({persist: false});\n      });\n    }\n  }\n\n  // Connection succeeded.\n  handleConnected() {\n    // Just to be sure.\n    clearInterval(this.reconnectCountdown);\n    this.handleError();\n\n    const params = this.tinode.getServerInfo();\n    this.setState({\n      serverVersion: params.ver + ' ' + (params.build ? params.build : 'none')\n    });\n\n    if (this.state.autoLogin) {\n      this.doLogin(this.state.login, this.state.password, {meth: this.state.credMethod, resp: this.state.credCode});\n    }\n  }\n\n  // Called for each auto-reconnect iteration.\n  handleAutoreconnectIteration(sec, prom) {\n    clearInterval(this.reconnectCountdown);\n\n    if (sec < 0) {\n      // Clear error\n      this.handleError();\n      return;\n    }\n\n    if (prom) {\n      // Reconnecting now\n      prom.then(() => {\n        // Reconnected: clear error\n        this.handleError();\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n      return;\n    }\n\n    const {formatMessage} = this.props.intl;\n    let count = sec / 1000;\n    count = count | count;\n    this.reconnectCountdown = setInterval(() => {\n      const timeLeft = (count > 99) ? secondsToTime(count) : count;\n      this.handleError(\n        formatMessage(messages.reconnect_countdown, {seconds: timeLeft}),\n        'warn',\n        () => {\n          clearInterval(this.reconnectCountdown);\n          this.tinode.reconnect();\n        },\n        formatMessage(messages.reconnect_now)\n      );\n      count -= 1;\n    }, 1000);\n  }\n\n  // Connection lost\n  handleDisconnect(err) {\n    this.setState({\n      connected: false,\n      ready: false,\n      topicSelectedOnline: false,\n      errorText: err && err.message ? err.message : \"Disconnected\",\n      errorLevel: err && err.message ? 'err' : 'warn',\n      loginDisabled: false,\n      contextMenuVisible: false,\n      serverVersion: \"no connection\"\n    });\n  }\n\n  doLogin(login, password, cred) {\n    if (this.tinode.isAuthenticated()) {\n      // Already logged in. Go to default screen.\n      HashNavigation.navigateTo('');\n      return;\n    }\n    // Sanitize and package credentail.\n    cred = Tinode.credential(cred);\n    // Try to login with login/password. If they are not available, try token. If no token, ask for login/password.\n    let promise = null;\n    let token = this.tinode.getAuthToken();\n    if (login && password) {\n      token = null;\n      this.setState({password: null});\n      promise = this.tinode.loginBasic(login, password, cred);\n    } else if (token) {\n      promise = this.tinode.loginToken(token.token, cred);\n    }\n\n    if (promise) {\n      promise.then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text === 'validate credentials') {\n          this.setState({loadSpinnerVisible: false});\n          if (cred) {\n            this.handleError(this.props.intl.formatMessage(messages.code_doesnot_match), 'warn');\n          }\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful();\n        }\n      }).catch((err) => {\n        // Login failed, report error.\n        this.setState({\n          loginDisabled: false,\n          credMethod: undefined,\n          credCode: undefined,\n          loadSpinnerVisible: false,\n          autoLogin: false\n        });\n        this.handleError(err.message, 'err');\n        if (token) {\n          this.handleLogout();\n        }\n        HashNavigation.navigateTo('');\n      });\n    } else {\n      // No login credentials provided.\n      // Make sure we are on the login page.\n      HashNavigation.navigateTo('');\n      this.setState({loginDisabled: false});\n    }\n  }\n\n  handleCredentialsRequest(params) {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    parsed.path[0] = 'cred';\n    parsed.params['method'] = params.cred[0];\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n  }\n\n  handleLoginSuccessful() {\n    this.handleError();\n\n    // Refresh authentication token.\n    if (LocalStorageUtil.getObject('keep-logged-in')) {\n      LocalStorageUtil.setObject('auth-token', this.tinode.getAuthToken());\n    }\n\n    const goToTopic = this.state.requestedTopic;\n    // Logged in fine, subscribe to 'me' attaching callbacks from the contacts view.\n    const me = this.tinode.getMeTopic();\n    me.onMetaDesc = this.tnMeMetaDesc;\n    me.onContactUpdate = this.tnMeContactUpdate;\n    me.onSubsUpdated = this.tnMeSubsUpdated;\n    this.setState({\n      connected: true,\n      credMethod: undefined,\n      credCode: undefined,\n      myUserId: this.tinode.getCurrentUserID(),\n      autoLogin: true,\n      requestedTopic: undefined,\n    });\n    // Subscribe, fetch topic desc, the list of subscriptions. Messages are not fetched.\n    me.subscribe(\n      me.startMetaQuery().\n        withLaterSub().\n        withDesc().\n        withTags().\n        withCred().\n        build()\n      ).catch((err) => {\n        this.tinode.disconnect();\n        localStorage.removeItem('auth-token');\n        this.handleError(err.message, 'err');\n        HashNavigation.navigateTo('');\n      }).finally(() => {\n        this.setState({loadSpinnerVisible: false});\n      });\n    let urlHash = HashNavigation.setUrlSidePanel(window.location.hash, 'contacts');\n    if (goToTopic) {\n      urlHash = HashNavigation.setUrlTopic(urlHash, goToTopic);\n    }\n    HashNavigation.navigateTo(urlHash);\n  }\n\n  tnMeMetaDesc(desc) {\n    if (desc) {\n      if (desc.public) {\n        this.setState({\n          sidePanelTitle: desc.public.fn,\n          sidePanelAvatar: makeImageUrl(desc.public.photo)\n        });\n      }\n      if (desc.trusted) {\n        const badges = [];\n        for (const [key, val] of Object.entries(desc.trusted)) {\n          if (val) {\n            badges.push(key);\n          }\n        }\n        this.setState({\n          myTrustedBadges: badges,\n        });\n      }\n      if (desc.acs) {\n        this.setState({\n          incognitoMode: !desc.acs.isPresencer()\n        });\n      }\n    }\n  }\n\n  // Reactions to updates to the contact list.\n  tnMeContactUpdate(what, cont) {\n    if (what == 'on' || what == 'off') {\n      this.resetContactList();\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedOnline: (what == 'on')});\n      }\n    } else if (what == 'read') {\n      this.resetContactList();\n    } else if (what == 'msg') {\n      // Check if the topic is archived. If so, don't play a sound.\n      const topic = this.tinode.getTopic(cont.topic);\n      const archived = topic && topic.isArchived();\n\n      // New message received. Maybe the message is from the current user, then unread is 0.\n      if (cont.unread > 0 && this.state.messageSounds && !archived) {\n        // Skip update if the topic is currently open, otherwise the badge will annoyingly flash.\n        if (document.hidden || this.state.topicSelected != cont.topic) {\n          POP_SOUND.play();\n        }\n      }\n      // Reorder contact list to use possibly updated 'touched'.\n      this.resetContactList();\n    } else if (what == 'recv') {\n      // Explicitly ignoring \"recv\" -- it causes no visible updates to contact list.\n    } else if (what == 'gone' || what == 'unsub') {\n      // Topic deleted or user unsubscribed. Remove topic from view.\n      // If the currently selected topic is gone, clear the selection.\n      if (this.state.topicSelected == cont.topic) {\n        this.handleTopicSelected(null);\n      }\n      // Redraw without the deleted topic.\n      this.resetContactList();\n    } else if (what == 'acs') {\n      // Permissions changed. If it's for the currently selected topic,\n      // update the views.\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedAcs: cont.acs});\n      }\n    } else if (what == 'del') {\n      // TODO: messages deleted (hard or soft) -- update pill counter.\n    } else if (what == 'upd') {\n      // upd - handled by the SDK. Explicitly ignoring here.\n    } else {\n      // TODO(gene): handle other types of notifications:\n      // * ua -- user agent changes (maybe display a pictogram for mobile/desktop).\n      console.info(\"Unsupported (yet) presence update:\" + what + \" in: \" + cont.topic);\n    }\n  }\n\n  tnMeSubsUpdated(unused) {\n    this.resetContactList();\n  }\n\n  // Merge search results and contact list to create a single flat\n  // list of known contacts for GroupManager to use.\n  static prepareSearchableContacts(chatList, foundContacts) {\n    const merged = {};\n\n    // For chatList topics merge only p2p topics and convert them to the\n    // same format as foundContacts.\n    for (const c of chatList) {\n      if (Tinode.isP2PTopicName(c.topic)) {\n          merged[c.topic] = {\n            user: c.topic,\n            updated: c.updated,\n            public: c.public,\n            private: c.private,\n            acs: c.acs\n          };\n      }\n    }\n\n    // Add all foundCountacts if they have not been added already.\n    for (const c of foundContacts) {\n      if (!merged[c.user]) {\n        merged[c.user] = c;\n      }\n    }\n\n    return Object.values(merged);\n  }\n\n  resetContactList() {\n    const newState = {\n      chatList: []\n    };\n\n    if (!this.state.ready) {\n      newState.ready = true;\n    }\n\n    this.tinode.getMeTopic().contacts((c) => {\n      if (!c.topic && !c.user) {\n        // Contacts expect c.topic to be set.\n        c.topic = c.name;\n      }\n\n      newState.chatList.push(c);\n      if (this.state.topicSelected == c.topic) {\n        newState.topicSelectedOnline = c.online;\n        newState.topicSelectedAcs = c.acs;\n      }\n    });\n\n    const past = new Date(0);\n    newState.chatList.sort((a, b) => {\n      return (a.touched || past).getTime() - (b.touched || past).getTime();\n    });\n\n    // Merge search results and chat list.\n    newState.searchableContacts = TinodeWeb.prepareSearchableContacts(newState.chatList, this.state.searchResults);\n    this.setState(newState);\n  }\n\n  // Sending \"received\" notifications\n  tnData(data) {\n    const topic = this.tinode.getTopic(data.topic);\n    if (topic.msgStatus(data, true) >= Tinode.MESSAGE_STATUS_SENT && data.from != this.state.myUserId) {\n      clearTimeout(this.receivedTimer);\n      this.receivedTimer = setTimeout(() => {\n        this.receivedTimer = undefined;\n        topic.noteRecv(data.seq);\n      }, RECEIVED_DELAY);\n    }\n  }\n\n  /* Fnd topic: find contacts by tokens */\n  tnInitFind() {\n    const fnd = this.tinode.getFndTopic();\n    fnd.onSubsUpdated = this.tnFndSubsUpdated;\n    if (fnd.isSubscribed()) {\n      this.tnFndSubsUpdated();\n    } else {\n      fnd.subscribe(fnd.startMetaQuery().withSub().build()).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  tnFndSubsUpdated() {\n    const foundContacts = [];\n    // Don't attempt to create P2P topics which already exist. Server will reject the duplicates.\n    this.tinode.getFndTopic().contacts((s) => {\n      foundContacts.push(s);\n    });\n    this.setState({\n      searchResults: foundContacts,\n      searchableContacts: TinodeWeb.prepareSearchableContacts(this.state.chatList, foundContacts)\n    });\n  }\n\n  /** Called when the user enters a contact into the contact search field in the NewAccount panel\n    @param query {Array} is an array of contacts to search for\n   */\n  handleSearchContacts(query) {\n    const fnd = this.tinode.getFndTopic();\n    fnd.setMeta({desc: {public: query}}).then((ctrl) => {\n      return fnd.getMeta(fnd.startMetaQuery().withSub().build());\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  // User clicked on a contact in the side panel or deleted a contact.\n  handleTopicSelected(topicName) {\n    // Clear newTopicParams after use.\n    if (this.state.newTopicParams && this.state.newTopicParams._topicName != topicName) {\n      this.setState({\n        newTopicParams: null\n      });\n    }\n\n    if (topicName) {\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'topic-view',\n        infoPanel: undefined\n      });\n      // Different contact selected.\n      if (this.state.topicSelected != topicName) {\n        this.setState({\n          topicSelectedOnline: this.tinode.isTopicOnline(topicName),\n          topicSelectedAcs: this.tinode.getTopicAccessMode(topicName)\n        });\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', topicName));\n      }\n    } else {\n      // Currently selected contact deleted\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'sidepanel',\n        topicSelectedOnline: false,\n        topicSelectedAcs: null,\n        infoPanel: undefined\n      });\n\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic('', null));\n    }\n  }\n\n  // In mobile view user requested to show sidepanel\n  handleHideMessagesView() {\n    this.setState({\n      mobilePanel: 'sidepanel'\n    });\n    HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, null));\n  }\n\n  // User is sending a message, either plain text or a drafty object, possibly\n  // with attachments.\n  //  - msg - Drafty message with content\n  //  - promise - Promise to be resolved when the upload is completed\n  //  - uploader - for tracking progress\n  //  - head - head dictionary to be attached to the message\n  handleSendMessage(msg, promise, uploader, head) {\n    const topic = this.tinode.getTopic(this.state.topicSelected);\n\n    msg = topic.createMessage(msg, false);\n    // The uploader is used to show progress.\n    msg._uploader = uploader;\n\n    if (head) {\n      msg.head = Object.assign(msg.head || {}, head);\n    }\n\n    if (!topic.isSubscribed()) {\n      // Topic is not subscribed yet. Subscribe.\n      if (!promise) {\n        promise = Promise.resolve();\n      }\n      promise = promise\n        .then(() => topic.subscribe())\n        .then(() => {\n          // If there are unsent messages, try sending them now.\n          topic.queuedMessages((pub) => {\n            if (!pub._sending && topic.isSubscribed()) {\n              this.sendMessage(pub);\n            }\n          });\n        });\n    }\n\n    if (promise) {\n      promise = promise.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n\n    topic.publishDraft(msg, promise)\n      .then((ctrl) => {\n        if (topic.isArchived()) {\n          return topic.archive(false);\n        }\n      })\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleNewChatInvitation(topicName, action) {\n    const topic = this.tinode.getTopic(topicName);\n    let response = null;\n    switch (action) {\n      case 'accept':\n        // Accept given permissions.\n        const mode = topic.getAccessMode().getGiven();\n        response = topic.setMeta({sub: {mode: mode}});\n        if (topic.isP2PType()) {\n          // For P2P topics change 'given' permission of the peer too.\n          // In p2p topics the other user has the same name as the topic.\n          response = response.then((ctrl) => {\n            topic.setMeta({sub: {user: topicName, mode: mode}});\n          });\n        }\n        break;\n      case 'delete':\n        // Ignore invitation by deleting it.\n        response = topic.delTopic(true);\n        break;\n      case 'block':\n        // Ban the topic making futher invites impossible.\n        // Just self-ban.\n        const am = topic.getAccessMode().updateWant('-JP').getWant();\n        response = topic.setMeta({sub: {mode: am}}).then((ctrl) => {\n          return this.handleTopicSelected(null);\n        });\n        break;\n      default:\n        console.warn(\"Unknown invitation action\", '\"' + action + '\"\"');\n    }\n\n    if (response != null) {\n      response.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // User chose a Sign Up menu item.\n  handleNewAccount() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, 'register'));\n  }\n\n  // Actual registration of a new account.\n  handleNewAccountRequest(login_, password_, public_, cred_, tags_) {\n    // Clear old error, if any.\n    this.handleError();\n\n    this.tinode.connect(this.state.serverAddress)\n      .then(() => {\n        return this.tinode.createAccountBasic(login_, password_,\n          {public: public_, tags: tags_, cred: Tinode.credential(cred_)});\n      }).then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text == 'validate credentials') {\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful(this);\n        }\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleToggleIncognitoMode(on) {\n    // Make state undefined.\n    this.setState({incognitoMode: null});\n\n    const me = this.tinode.getMeTopic();\n    const am = me.getAccessMode().updateWant(on ? '-P' : '+P').getWant();\n    me.setMeta({sub: {mode: am}}).catch((err) => {\n      // Request failed, keep existing state.\n      this.setState({incognitoMode: !on});\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleUpdateAccountTagsRequest(tags) {\n    this.tinode.getMeTopic().setMeta({tags: tags})\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  // User chose Settings menu item.\n  handleSettings() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'edit' : 'settings'));\n  }\n\n  // User updated global parameters.\n  handleGlobalSettings(settings) {\n    const serverAddress = settings.serverAddress || this.state.serverAddress;\n    const transport = settings.transport || this.state.transport;\n    if (this.tinode) {\n      this.tinode.clearStorage();\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.tinode = TinodeWeb.tnSetup(serverAddress, transport, this.props.intl.locale,\n      LocalStorageUtil.getObject('keep-logged-in'));\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n\n    this.setState({\n      serverAddress: serverAddress,\n      transport: transport\n    });\n    LocalStorageUtil.setObject('settings', {\n      serverAddress: serverAddress,\n      transport: transport\n    });\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, ''));\n  }\n\n  // User chose 'Archived chats'.\n  handleShowArchive() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'archive' : ''));\n  }\n\n  // User viewes 'Blocked chats'.\n  handleShowBlocked() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'blocked' : ''));\n  }\n\n  togglePushToken(enabled) {\n    if (enabled) {\n      this.setState({desktopAlerts: null});\n      if (!this.state.firebaseToken) {\n        const fcm = this.fbPush ?\n          Promise.resolve() :\n          this.initFCMessaging();\n        fcm.then(() => {\n          return this.fbPush.requestPermission();\n        }).then(() => {\n          this.requestPushToken();\n        }).catch((err) => {\n          console.error(\"Failed to get notification permission.\", err);\n          this.handleError(err.message, 'err');\n          this.setState({desktopAlerts: false, firebaseToken: null});\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        });\n      } else {\n        this.setState({desktopAlerts: true});\n        if (LocalStorageUtil.getObject('keep-logged-in')) {\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n        }\n      }\n    } else if (this.state.firebaseToken && this.fbPush) {\n      this.fbPush.deleteToken(this.state.firebaseToken).catch((err) => {\n        console.error(\"Unable to delete token.\", err);\n      }).finally(() => {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        localStorage.removeItem('firebase-token');\n        this.setState({desktopAlerts: false, firebaseToken: null});\n        // Inform the server that the token was deleted.\n        this.tinode.setDeviceToken(null);\n      });\n    } else {\n      this.setState({desktopAlerts: false, firebaseToken: null});\n      LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n    }\n  }\n\n  requestPushToken() {\n    this.fbPush.getToken().then((refreshedToken) => {\n      const persist = LocalStorageUtil.getObject('keep-logged-in');\n      if (refreshedToken != this.state.firebaseToken) {\n        this.tinode.setDeviceToken(refreshedToken);\n        if (persist) {\n          LocalStorageUtil.setObject('firebase-token', refreshedToken);\n        }\n      }\n      this.setState({firebaseToken: refreshedToken, desktopAlerts: true});\n      if (persist) {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n      }\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n      console.error(\"Failed to retrieve firebase token\", err);\n    });\n  }\n\n  handleToggleMessageSounds(enabled) {\n    this.setState({messageSounds: enabled});\n    LocalStorageUtil.updateObject('settings', {\n      messageSoundsOff: !enabled\n    });\n  }\n\n  handleCredAdd(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.setMeta({cred: {meth: method, val: value}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredDelete(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.delCredential(method, value).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredConfirm(method, response) {\n    this.handleCredentialsRequest({cred: [method]});\n  }\n\n  // User clicked Cancel button in Setting or Sign Up panel.\n  handleSidepanelCancel() {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    let path = '';\n    if (['security','support','general','notif'].includes(parsed.path[0])) {\n      path = 'edit';\n    } else if ('crop' == parsed.path[0]) {\n      path = 'general';\n    } else if ('blocked' == parsed.path[0]) {\n      path = 'security';\n    } else if (this.state.myUserId) {\n      path = 'contacts';\n    }\n    parsed.path[0] = path;\n    if (parsed.params) {\n      delete parsed.params.code;\n      delete parsed.params.method;\n      delete parsed.params.tab;\n    }\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n    this.setState({errorText: '', errorLevel: null});\n  }\n\n  // Sidepanel navigator. No need to bind to 'this'.\n  basicNavigator(hash) {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, hash));\n  }\n\n  // Topic info navigator. No need to bind to 'this'.\n  infoNavigator(hash) {\n    HashNavigation.navigateTo(HashNavigation.setUrlInfoPanel(window.location.hash, hash));\n  }\n\n  // Request to start a topic, new or selected from search results, or \"by ID\".\n  handleStartTopicRequest(topicName, newTopicParams, isChannel) {\n    // Check if topic is indeed new. If not, launch it.\n    if (topicName && this.tinode.isTopicCached(topicName)) {\n      this.handleTopicSelected(topicName);\n      return;\n    }\n\n    const params = {};\n    if (Tinode.isP2PTopicName(topicName)) {\n      // Because we are initialing the subscription, set 'want' to all permissions.\n      params.sub = {mode: DEFAULT_P2P_ACCESS_MODE};\n      // Give the other user all permissions too.\n      params.desc = {defacs: {auth: DEFAULT_P2P_ACCESS_MODE}};\n    } else {\n      topicName = topicName || this.tinode.newGroupTopicName(isChannel);\n      params.desc = {public: newTopicParams.public, private: {comment: newTopicParams.private}};\n      params.tags = newTopicParams.tags;\n    }\n    params._topicName = topicName;\n    this.setState({newTopicParams: params}, () => {this.handleTopicSelected(topicName)});\n  }\n\n  // New topic was created, here is the new topic name.\n  handleNewTopicCreated(oldName, newName) {\n    if (this.state.topicSelected == oldName && oldName != newName) {\n      // If the current URl contains the old topic name, replace it with new.\n      // Update the name of the selected topic first so the navigator doen't clear\n      // the state.\n      this.setState({topicSelected: newName}, () => {\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', newName));\n      });\n    }\n  }\n\n  handleTopicUpdateRequest(topicName, pub, priv, defacs) {\n    this.handleError();\n\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const params = {};\n      let attachments;\n      if (pub) {\n        if (pub.photo) {\n          if (pub.photo.ref && pub.photo.ref != Tinode.DEL_CHAR) {\n            attachments = [pub.photo.ref];\n          } else if (!pub.photo.data || pub.photo.data == Tinode.DEL_CHAR) {\n            pub.photo = Tinode.DEL_CHAR;\n          }\n        }\n        params.public = pub;\n      }\n\n      if (typeof priv == 'string') {\n        params.private = (priv === Tinode.DEL_CHAR) ?\n          Tinode.DEL_CHAR : {comment: priv};\n      }\n      if (defacs) {\n        params.defacs = defacs;\n      }\n      topic.setMeta({desc: params, attachments: attachments}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleUnarchive(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      topic.archive(false);\n    }\n  }\n\n  handleUpdatePasswordRequest(password)  {\n    this.handleError();\n\n    if (password) {\n      this.tinode.updateAccountBasic(null, this.tinode.getCurrentLogin(), password).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleChangePermissions(topicName, mode, uid) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const am = topic.getAccessMode();\n      if (uid) {\n        am.updateGiven(mode);\n        mode = am.getGiven();\n      } else {\n        am.updateWant(mode);\n        mode = am.getWant();\n      }\n      topic.setMeta({sub: {user: uid, mode: mode}}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleTagsUpdateRequest(topicName, tags) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      topic.setMeta({tags: tags}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleLogout() {\n    updateFavicon(0);\n\n    // Remove stored data.\n    localStorage.removeItem('auth-token');\n    localStorage.removeItem('firebase-token');\n    localStorage.removeItem('settings');\n    if (this.state.firebaseToken) {\n      this.fbPush.deleteToken(this.state.firebaseToken)\n    }\n\n    clearInterval(this.reconnectCountdown);\n\n    if (this.tinode) {\n      this.tinode.clearStorage();\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.setState(this.getBlankState());\n\n    this.tinode = TinodeWeb.tnSetup(this.state.serverAddress,\n      this.state.transport, this.props.intl.locale, LocalStorageUtil.getObject('keep-logged-in'));\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n    HashNavigation.navigateTo('');\n  }\n\n  handleDeleteAccount() {\n    this.tinode.delCurrentUser(true).then((ctrl) => {\n      this.handleLogout();\n    });\n  }\n\n  handleDeleteTopicRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Request to hard-delete topic.\n    topic.delTopic(true).then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleDeleteMessagesRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Request hard-delete all messages.\n    topic.delMessagesAll(true).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleLeaveUnsubRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.leave(true).then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleBlockTopicRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleReportTopic(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Publish spam report.\n    this.tinode.publish(Tinode.TOPIC_SYS, Tinode.Drafty.attachJSON(null, {\n      'action': 'report',\n      'target': topicName\n    }));\n\n    // Remove J and P permissions.\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleShowContextMenu(params, menuItems) {\n    this.setState({\n      contextMenuVisible: true,\n      contextMenuClickAt: {x: params.x, y: params.y},\n      contextMenuParams: params,\n      contextMenuItems: menuItems || this.defaultTopicContextMenu(params.topicName),\n      contextMenuBounds: this.selfRef.current.getBoundingClientRect()\n    });\n  }\n\n  defaultTopicContextMenu(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n\n    let muted = false, blocked = false, self_blocked = false, subscribed = false, deleter = false, archived = false;\n    if (topic) {\n      subscribed = topic.isSubscribed();\n      archived = topic.isArchived();\n\n      const acs = topic.getAccessMode();\n      if (acs) {\n        muted = acs.isMuted();\n        blocked = !acs.isJoiner();\n        self_blocked = !acs.isJoiner('want');\n        deleter = acs.isDeleter();\n      }\n    }\n\n    return [\n      subscribed ? {\n        title: this.props.intl.formatMessage(messages.menu_item_info),\n        handler: this.handleShowInfoView\n      } : null,\n      subscribed ? 'messages_clear' : null,\n      subscribed && deleter ? 'messages_clear_hard' : null,\n      muted ? (blocked ? null : 'topic_unmute') : 'topic_mute',\n      self_blocked ? 'topic_unblock' : 'topic_block',\n      archived ? 'topic_restore' : 'topic_archive',\n      'topic_delete'\n    ];\n  }\n\n  handleHideContextMenu() {\n    this.setState({\n      contextMenuVisible: false,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuBounds: null\n    });\n  }\n\n  handleContextMenuAction(action, promise, params) {\n    if (action == 'topic_archive') {\n      if (promise && params.topicName && params.topicName == this.state.topicSelected) {\n        promise.then(() => {\n          this.handleTopicSelected(null);\n        });\n      }\n    }\n  }\n\n  handleShowAlert(title, content, onConfirm, confirmText, onReject, rejectText) {\n    this.setState({\n      alertVisible: true,\n      alertParams: {\n        title: title,\n        content: content,\n        onConfirm: onConfirm,\n        confirm: confirmText,\n        onReject: onReject,\n        reject: rejectText\n      }\n    });\n  }\n\n  handleShowInfoView() {\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'info', 'info'));\n    this.setState({infoPanel: 'info'});\n  }\n\n  handleMemberUpdateRequest(topicName, added, removed) {\n    if (!topicName) {\n      return;\n    }\n\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    if (added && added.length > 0) {\n      added.map((uid) => {\n        topic.invite(uid, null).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n\n    if (removed && removed.length > 0) {\n      removed.map((uid) => {\n        topic.delSubscription(uid).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n  }\n\n  handleValidateCredentialsRequest(cred, code) {\n    if (this.tinode.isAuthenticated()) {\n      const me = this.tinode.getMeTopic();\n      me.setMeta({cred: {meth: cred, resp: code}})\n        .then(() => {\n          HashNavigation.navigateTo('');\n        })\n        .catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n    } else {\n      this.setState({credMethod: cred, credCode: code});\n      this.doLogin(null, null, {meth: cred, resp: code});\n    }\n  }\n\n  handlePasswordResetRequest(method, value) {\n    // If already connected, connnect() will return a resolved promise.\n    return this.tinode.connect()\n      .then(() => {\n        return this.tinode.requestResetAuthSecret('basic', method, value);\n      })\n      .catch((err) => {\n        // Socket error\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleResetPassword(scheme, newPassword, token) {\n    token = base64ReEncode(token);\n    if (!token) {\n      this.handleError(this.props.intl.formatMessage(messages.invalid_security_token), 'err');\n    } else {\n      this.tinode.connect()\n        .then(() => {\n          return this.tinode.updateAccountBasic(null, null, newPassword, {token: token});\n        })\n        .catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"app-container\" ref={this.selfRef}>\n        {this.state.contextMenuVisible ?\n          <ContextMenu\n            tinode={this.tinode}\n            bounds={this.state.contextMenuBounds}\n            clickAt={this.state.contextMenuClickAt}\n            params={this.state.contextMenuParams}\n            items={this.state.contextMenuItems}\n            hide={this.handleHideContextMenu}\n            onShowAlert={this.handleShowAlert}\n            onAction={this.handleContextMenuAction}\n            onTopicRemoved={(topicName) => {\n              if (topicName == this.state.topicSelected) {\n                this.handleTopicSelected(null);\n              }\n            }}\n            onError={this.handleError} />\n          :\n          null\n        }\n        <Alert\n          visible={this.state.alertVisible}\n          title={this.state.alertParams.title}\n          content={this.state.alertParams.content}\n          onReject={this.state.alertParams.onReject ? (() => { this.setState({alertVisible: false}); }) : null}\n          reject={this.state.alertParams.reject}\n          onConfirm={() => { this.setState({alertVisible: false}); this.state.alertParams.onConfirm(); }}\n          confirm={this.state.alertParams.confirm}\n          />\n        <SidepanelView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          displayMobile={this.state.displayMobile}\n          hideSelf={this.state.displayMobile && this.state.mobilePanel !== 'sidepanel'}\n          state={this.state.sidePanelSelected}\n          title={this.state.sidePanelTitle}\n          avatar={this.state.sidePanelAvatar}\n          trustedBadges={this.state.myTrustedBadges}\n          login={this.state.login}\n          persist={this.state.persist}\n          myUserId={this.state.myUserId}\n          loginDisabled={this.state.loginDisabled}\n          loadSpinnerVisible={this.state.loadSpinnerVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          topicSelected={this.state.topicSelected}\n          chatList={this.state.chatList}\n          credMethod={this.state.credMethod}\n          credCode={this.state.credCode}\n\n          transport={this.state.transport}\n          messageSounds={this.state.messageSounds}\n          desktopAlerts={this.state.desktopAlerts}\n          desktopAlertsEnabled={this.state.desktopAlertsEnabled}\n          incognitoMode={this.state.incognitoMode}\n          serverAddress={this.state.serverAddress}\n          serverVersion={this.state.serverVersion}\n\n          onGlobalSettings={this.handleGlobalSettings}\n          onSignUp={this.handleNewAccount}\n          onSettings={this.handleSettings}\n          onNavigate={this.basicNavigator}\n          onLoginRequest={this.handleLoginRequest}\n          onPersistenceChange={this.handlePersistenceChange}\n          onCreateAccount={this.handleNewAccountRequest}\n          onUpdateAccountDesc={this.handleTopicUpdateRequest}\n          onUpdatePassword={this.handleUpdatePasswordRequest}\n          onUpdateAccountTags={this.handleUpdateAccountTagsRequest}\n          onTogglePushNotifications={this.togglePushToken}\n          onToggleMessageSounds={this.handleToggleMessageSounds}\n          onToggleIncognitoMode={this.handleToggleIncognitoMode}\n          onCredAdd={this.handleCredAdd}\n          onCredDelete={this.handleCredDelete}\n          onCredConfirm={this.handleCredConfirm}\n          onTopicSelected={this.handleTopicSelected}\n          onCreateTopic={this.handleStartTopicRequest}\n          onLogout={this.handleLogout}\n          onDeleteAccount={this.handleDeleteAccount}\n          onShowAlert={this.handleShowAlert}\n          onCancel={this.handleSidepanelCancel}\n          onError={this.handleError}\n          onValidateCredentials={this.handleValidateCredentialsRequest}\n          onPasswordResetRequest={this.handlePasswordResetRequest}\n          onResetPassword={this.handleResetPassword}\n          onShowArchive={this.handleShowArchive}\n          onShowBlocked={this.handleShowBlocked}\n\n          onInitFind={this.tnInitFind}\n          searchResults={this.state.searchResults}\n          onSearchContacts={this.handleSearchContacts}\n\n          showContextMenu={this.handleShowContextMenu} />\n\n        <MessagesView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          ready={this.state.ready}\n          online={this.state.topicSelectedOnline}\n          acs={this.state.topicSelectedAcs}\n          displayMobile={this.state.displayMobile}\n          viewportWidth={this.state.viewportWidth}\n          viewportHeight={this.state.viewportHeight}\n          hideSelf={this.state.displayMobile &&\n            (this.state.mobilePanel !== 'topic-view' || this.state.infoPanel)}\n          topic={this.state.topicSelected}\n          myUserId={this.state.myUserId}\n          // User public.fn.\n          myUserName={this.state.sidePanelTitle}\n          serverVersion={this.state.serverVersion}\n          serverAddress={this.state.serverAddress}\n          applicationVisible={this.state.applicationVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          newTopicParams={this.state.newTopicParams}\n\n          onHideMessagesView={this.handleHideMessagesView}\n          onData={this.tnData}\n          onError={this.handleError}\n          onNewTopicCreated={this.handleNewTopicCreated}\n          showContextMenu={this.handleShowContextMenu}\n          onChangePermissions={this.handleChangePermissions}\n          onNewChat={this.handleNewChatInvitation}\n          sendMessage={this.handleSendMessage} />\n\n        {this.state.infoPanel ?\n          <InfoView\n            tinode={this.tinode}\n            connected={this.state.connected}\n            displayMobile={this.state.displayMobile}\n            topic={this.state.topicSelected}\n            searchableContacts={this.state.searchableContacts}\n            myUserId={this.state.myUserId}\n            panel={this.state.infoPanel}\n\n            errorText={this.state.errorText}\n            errorLevel={this.state.errorLevel}\n            errorAction={this.state.errorAction}\n            errorActionText={this.state.errorActionText}\n\n            onNavigate={this.infoNavigator}\n            onTopicDescUpdateRequest={this.handleTopicUpdateRequest}\n            onShowAlert={this.handleShowAlert}\n            onChangePermissions={this.handleChangePermissions}\n            onMemberUpdateRequest={this.handleMemberUpdateRequest}\n            onDeleteTopic={this.handleDeleteTopicRequest}\n            onDeleteMessages={this.handleDeleteMessagesRequest}\n            onLeaveTopic={this.handleLeaveUnsubRequest}\n            onBlockTopic={this.handleBlockTopicRequest}\n            onReportTopic={this.handleReportTopic}\n            onAddMember={this.handleManageGroupMembers}\n            onTopicTagsUpdateRequest={this.handleTagsUpdateRequest}\n            onTopicUnArchive={this.handleUnarchive}\n            onInitFind={this.tnInitFind}\n            onError={this.handleError}\n\n            showContextMenu={this.handleShowContextMenu}\n            />\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(TinodeWeb);\n","// Put all packages together.\n// Used to generate umd/index.prod.js\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { IntlProvider } from 'react-intl';\n\nimport allMessages from './messages.json';\nimport TinodeWeb from './views/tinode-web.jsx';\nimport HashNavigation from './lib/navigation.js';\n\n// Detect human language to use in the UI:\n//  Check parameters from URL hash #?hl=ru, then browser, then use 'en' as a fallback.\nconst { params } = HashNavigation.parseUrlHash(window.location.hash);\nconst language = (params && params.hl) ||\n  (navigator.languages && navigator.languages[0]) ||\n  navigator.language ||\n  navigator.userLanguage ||\n  'en';\n\n// Get the base language 'en' from a more specific 'en_GB' or 'en-US' as a partial fallback.\nconst baseLanguage = language.toLowerCase().split(/[-_]/)[0];\n\n// Try the full locale first, then the locale without the region code, fallback to 'en'.\nconst messages =\n  allMessages[language] ||\n  allMessages[baseLanguage] ||\n  allMessages.en;\n\nReactDOM.render(\n  <React.StrictMode>\n    <IntlProvider locale={language} messages={messages} textComponent={React.Fragment}>\n      <TinodeWeb />\n    </IntlProvider>\n  </React.StrictMode>,\n  document.getElementById('mountPoint')\n);\n","// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// startup\n// Load entry module and return exports\n// This entry module doesn't tell about it's top-level declarations so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[938](0, __webpack_exports__, __webpack_require__);\n"],"names":["React","ReactDOM","ReactIntl","firebase","messaging","Tinode","Alert","render","this","props","visible","className","title","content","onReject","onClick","reject","FormattedMessage","id","defaultMessage","onConfirm","confirm","PACKAGE_VERSION","APP_NAME","KNOWN_HOSTS","hosted","local","DEFAULT_HOST","KEYPRESS_DELAY","DEFAULT_P2P_ACCESS_MODE","REM_SIZE","AVATAR_SIZE","MAX_INBAND_ATTACHMENT_SIZE","MAX_EXTERN_ATTACHMENT_SIZE","MAX_IMAGE_DIM","IMAGE_THUMBNAIL_DIM","MAX_TITLE_LENGTH","MAX_TOPIC_DESCRIPTION_LENGTH","messages","defineMessages","info","clear_messages","clear_for_all","delete","delete_for_all","send_retry","mute","unmute","reply","topic_delete","topic_delete_warning","delete_messages_warning","unblock","block","topic_block_warning","member_delete","archive","unarchive","edit_permissions","clear_messages_warning","ContextMenu","constructor","super","selfRef","formatMessage","intl","handlePageClick","bind","handleEscapeKey","handleClick","MenuItems","handler","params","errorHandler","onShowAlert","deleteMessages","message","retryMessage","replyToMessage","topicPermissionSetter","then","ctrl","onTopicRemoved","topicName","topic","tinode","getTopic","delTopic","catch","err","console","log","user","delSubscription","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","e","current","contains","target","preventDefault","stopPropagation","hide","keyCode","item","items","currentTarget","dataset","onAction","onError","error","all","hard","cancelSend","seq","delMessagesAll","delMessagesList","flushMessage","msg","createMessage","publishDraft","mode","result","updateMode","pickReply","menu","count","map","push","key","vSize","length","position","left","bounds","right","clickAt","x","top","bottom","y","style","ref","injectIntl","shortDateFormat","locale","window","navigator","userLanguage","language","now","Date","getFullYear","getMonth","getDate","toLocaleTimeString","hour12","hour","minute","toLocaleDateString","month","day","year","bytesToHumanSize","bytes","sizes","bucket","Math","min","floor","log2","pow","round","toFixed","idToColorClass","light","fg","userId","abs","value","hash","i","charCodeAt","stringToColorHash","updateFavicon","oldIcon","getElementById","head","getElementsByTagName","newIcon","createElement","type","rel","href","removeChild","appendChild","theCard","fn","imageUrl","imageMimeType","note","card","trim","mimeType","matches","exec","photo","data","substring","indexOf","arrayEqual","a","b","Array","isArray","sort","l","sanitizeUrl","url","allowedSchemes","replace","test","schemes","join","RegExp","sanitizeImageUrl","sanitizedUrl","deliveryMarker","received","name","color","LetterTile","avatar","isGroup","iconColor","letter","charAt","authorizeURL","alt","src","onerror","LoadSpinner","large","clear","centered","show","AvatarUpload","state","source","handleFileReceived","componentDidUpdate","prevProps","setState","image","files","onImageUpdated","URL","createObjectURL","randId","random","substr","readOnly","uid","accept","onChange","htmlFor","uploading","icon_mapping","badge_verified","badge_staff","badge_danger","BadgeList","badges","trustedBadges","comment","CheckBox","handleChange","checked","ContactBadges","icon","message_sending","message_sending_failed","ReceivedMarker","timestamp","marker","UnreadBadge","SUPPORTED_IMAGE_FORMATS","MIME_EXTENSIONS","makeImageUrl","startsWith","fitImageSize","width","height","maxWidth","maxHeight","forceSquare","scale","size","dstWidth","dstHeight","srcWidth","srcHeight","xoffset","yoffset","imageScaled","fileOrBlob","maxSize","onSuccess","img","Image","crossOrigin","onload","async","revokeObjectURL","dim","canvas","ctx","getContext","imageSmoothingEnabled","drawImage","mime","includes","blob","Promise","resolve","toBlob","clearRect","fname","idx","ext","at","lastIndexOf","fileNameForMime","fileToBase64","file","reader","FileReader","split","readAsDataURL","blobToBase64","drafty_form","drafty_attachment","drafty_image","handleImageData","el","attr","minWidth","minHeight","viewportWidth","Drafty","UploadingImage","max","onImagePreview","loading","fullFormatter","values","call","onFormButtonClick","inner","child","undefined","hasOwnProperty","colorId","onQuoteClick","concat","previewFormatter","val","quoteFormatter","Contact","handleContextClick","onSelected","index","showContextMenu","pageY","pageX","online","slice","icon_badges","isVerified","isStaff","isDangerous","acs","showMode","getMode","isMuted","isJoiner","subtitle","preview","showCheckmark","selected","showOnline","isChannel","unread","small","ContactAction","action","badge_you","badge_owner","ContactList","topicSelected","contactNodes","contactsCount","contacts","c","filterFunc","filter","filterOn","private","toLowerCase","public","myUserId","isOwner","deliveryStatus","latestMessage","_status","msgStatus","showUnread","connected","onTopicSelected","trusted","verified","staff","danger","noScroll","dangerouslySetInnerHTML","__html","emptyListMessage","MenuCancel","onCancel","ErrorPanel","level","onClearError","warn","text","whiteSpace","actionText","Chip","handleCancel","invalid","noAvatar","required","ChipInput","deriveStateFromProps","input","focused","handleTextInput","removeChipAt","handleChipCancel","handleFocusGained","handleFocusLost","handleKeyDown","placeholder","chips","prompt","sortedChips","sortChips","staticMembers","chipIndex","indexChips","prevState","keep","normal","removed","onChipRemoved","onFocusLost","onEnter","avatarDisabled","autoFocus","tabIndex","onFocus","onBlur","onKeyDown","no_contacts","contacts_not_found_short","GroupManager","members","indexMembers","keepInitialMembers","requiredMember","contactFilter","noContactsMessage","selectedContacts","handleContactSelected","handleMemberRemoved","handleContactFilter","handleSubmit","m","delta","present","keepInitial","stat","sel","status","splice","query","instance","added","Object","keys","k","onSubmit","doContactFiltering","joiner","writer","preser","approver","sharer","deleter","owner","PermissionsEditor","names","skip","compare","userTitle","userAvatar","modeTitle","compareTitle","Cropper","panX","panY","originX","originY","zoom","minZoom","maxZoom","overlay","cutout","boundingBox","imageWidth","imageHeight","mouseX","mouseY","prevDistance","cutoutRect","bBoxRect","initScaling","onZoom","handleZoom","mouseDown","mouseUp","mouseMove","mouseTouch","positionAll","translate","passive","getBoundingClientRect","currPan","nextDiff","imgRect","imgLeft","imgRight","coLeft","coRight","imgTop","imgBottom","coTop","coBottom","touches","body","dX","dY","checkBound","touch0","touch1","distance","sqrt","t3d","orig","transform","transformOrigin","onLoad","step","AvatarCrop","objURL","imageCrop","VisiblePassword","handleVisibility","handeTextChange","handleEditingFinished","onFinished","setTimeout","activeElement","autoComplete","InPlaceEdit","active","initialValue","handleStartEditing","handlePasswordFinished","newValue","focus","event","checkValidity","spanText","spanClass","multiline","element","rows","TagManager","tags","tagInput","activated","handleTagInput","handleAddTag","handleRemoveTag","nextProps","last","tag","maxTagCount","getServerLimit","onTagsChanged","minTagLength","maxTagLength","add_tags_prompt","TopicDescEdit","getAccessMode","isMe","fullName","description","newAvatar","newAvatarMime","previousOnTags","tnNewTags","handleFullNameUpdate","handleImageUpdated","handleAvatarCropped","handlePrivateUpdate","handleDescriptionUpdate","uploadAvatar","handleAvatarCropCancel","handleTagsUpdated","onTagsUpdated","onUpdateTopicDesc","desc","readyToUpload","uploader","getLargeFileHelper","upload","finally","unused","base64bits","du","onUpdateTags","editable","full_name_placeholder","group_name_placeholder","private_placeholder","title_tag_manager","TopicCommon","credentials","getCredentials","addCredActive","addCredInvalid","newCred","previousTagsUpdated","tnCredsUpdated","handleCredChange","handleCredKeyDown","handleCredEntered","onCredsUpdated","getType","creds","method","asPhone","asEmail","onCredAdd","onTopicTagsUpdateRequest","cred","meth","done","onCredConfirm","onCredDelete","delete_messages","leave_chat","leave_chat_warning","block_contact","block_contact_warning","report_chat","report_chat_warning","other_user","TopicSecurity","handleDeleteTopic","handleDeleteMessages","handleLeave","handleBlock","handleReport","onDeleteTopic","onDeleteMessages","onLeaveTopic","onBlockTopic","onReportTopic","channel","groupTopic","onLaunchPermissionsEditor","access","auth","anon","modeGiven2","general","security","crop","perm_want","perm_given","perm_auth","perm_anon","perm_user","_clip","str","InfoView","admin","muted","address","selectedContact","modeGiven","modeWant","modeWant2","contactList","previousMetaDesc","previousSubsUpdated","resetSubs","resetDesc","resetTags","onMetaDesc","onSubsUpdated","handleImageChanged","handleMuted","handleUnarchive","handlePermissionsChanged","handleLaunchPermissionsEditor","handleShowAddMembers","handleMemberUpdateRequest","handleMemberSelected","handleContextMenu","handleBackNavigate","newState","user2","subscriber","getGiven","getWant","subscribers","sub","defacs","getDefaultAccess","entries","isAdmin","isSharer","isDeleter","archived","isArchived","isGroupType","isChannelType","chan","getMeta","startMetaQuery","withTags","build","subs","onTopicDescUpdate","ignored","onChangePermissions","ignored2","onTopicUnArchive","which","perm","onTopicDescUpdateRequest","userPermissionsEdited","toEdit","toCompare","toSkip","titleEdit","titleCompare","userPermissionsTitle","userPermissionsAvatar","editedPermissions","immutablePermissions","editedPermissionsTitle","immutablePermissionsTitle","editedPermissionsSkipped","onNavigate","onInitFind","onMemberUpdateRequest","args","panel","menuItems","view","shift","panelTitle","displayMobile","errorLevel","errorText","searchableContacts","no_members","FileProgress","progress","Attachment","downloader","downloadFile","filename","mimetype","download","loaded","onCancelUpload","cancel","helperFunc","isUrlRelative","downloadUrl","downloadWidget","BaseChatMessage","onProgress","handleProgress","handleImagePreview","handleFormButtonClick","handleCancelUpload","handleQuoteClick","formatterContext","getFormatter","tp","resp","act","onFormResponse","MESSAGE_STATUS_FAILED","userIsWriter","MESSAGE_STATUS_DEL_RANGE","ratio","replyToSeq","sideClass","deleted","sequence","response","bubbleClass","fullDisplay","userFrom","attachments","att","tree","innerRef","userName","IntlChatMessage","messaging_disabled","type_new_message","add_image_caption","file_attachment_too_large","cannot_initiate_upload","SendMessage","keypressTimestamp","getTime","handlePasteEvent","handleAttachImage","handleAttachFile","handleSend","handleKeyPress","handleMessageTyping","messageEditArea","disabled","onImageSuccess","onAttachmentSuccess","clipboardData","originalEvent","kind","getAsFile","imageFileScaledToBase64","imageFileToBase64","filePasted","bits","onAttachImage","onAttachFile","acceptBlank","noInput","onSendMessage","shiftKey","onKeyPress","replyTo","messagePrompt","quote","onCancelReply","attachImage","click","attachFile","display","DocPreview","handleSendDoc","caption","onClose","mimeToIcon","default","video","iconFromMime","GroupSubs","usersOnline","totalCount","countToShow","some","overflow","ImagePreview","handleSendImage","assignWidth","node","maxlength","Invitation","handleButtonAction","evt","LogoView","version","serverVersion","serverAddress","HashNavigation","parts","path","forEach","part","decodeURIComponent","location","parsed","parseUrlHash","composeUrlHash","sidepanel","infopanel","online_now","last_seen","not_found","invalid_content","isUnconfirmed","ex","getExcessive","isPeerRestricted","ms","getMissing","MessagesView","getDerivedStateFromProps","leave","sendMessage","retrySend","sendImageAttachment","sendFileAttachment","sendKeyPress","subscribe","handleScrollReference","handleScrollEvent","handleDescChange","handleSubsUpdated","handleMessageUpdate","handleAllMessagesReceived","handleInfoReceipt","handleImagePostview","handleClosePreview","handleFormResponse","handleShowContextMenuMessage","handleNewChatAcceptance","handleEnablePeer","postReadNotification","clearNotificationQueue","handlePickReply","handleCancelReply","chatMessageRefs","getOrCreateMessageRef","readNotificationQueue","readNotificationTimer","seqId","messagesScroller","messageCount","scrollTop","scrollHeight","scrollPosition","viewportHeight","onData","onAllMessagesReceived","onInfo","onPres","applicationVisible","ready","nextState","docPreview","imagePreview","imagePostview","typingIndicator","fetchingMessages","assign","onlineSubs","peer","p2pPeerDesc","peerMessagingDisabled","latestClearId","maxClearId","isWriter","isReader","readingBlocked","unconformed","unconfirmed","isSubscribed","newTopic","newTopicParams","_topicName","getQuery","withLaterDesc","withLaterSub","withLaterData","withLaterDel","setQuery","code","onNewTopicCreated","queuedMessages","pub","_sending","navigateTo","setUrlTopic","blankState","oldTopicName","isTopicCached","oldTopic","msgHasMoreMessages","getMessagesPage","setInterval","clearInterval","n","sendAt","noteRead","setMilliseconds","getMilliseconds","clearTimeout","keyPressTimer","isNewMessage","from","what","forceUpdate","attachJSON","parse","searchParams","set","search","open","messageSpecificMenuItems","onNewChat","noteKeyPress","uploadCompletionPromise","append","maxInbandAttachmentSize","urlPromise","maxExternAttachmentSize","limit","tinyMine","tinyBlob","blobMime","tinyBits64","insertImage","_tempPreview","appendLineBreak","bits64","found","findMessage","_cancelled","init","isValid","wrapInto","senderName","senderId","userDesc","myUserName","ents","entities","promises","handleFailure","origBlob","bin","atob","buf","ArrayBuffer","arr","Uint8Array","Blob","base64ToBlob","fetch","ok","statusText","scrollIntoView","behavior","classList","add","remove","component","hideSelf","component2","messageNodes","previousFrom","chatBoxClass","prev","next","nextFrom","thisFrom","isReply","parseInt","isNaN","hi","ts","_uploader","lastSeen","cont","getMeTopic","getContact","seen","when","onHideMessagesView","ButtonBack","onBack","MenuContacts","onNewTopic","onSettings","MenuStart","onSignUp","SideNavbar","AccountSettingsView","me","archived_contacts_title","ContactsView","handleAction","unreadThreads","archivedCount","chatList","blocked","arch","touched","action_ignored","onShowArchive","LocalStorageUtil","localStorage","setItem","JSON","stringify","getItem","oldVal","getObject","setObject","removeItem","CreateAccountView","login","password","email","imageDataUrl","errorCleared","saveToken","handleLoginChange","handlePasswordChange","handleEmailChange","handleFnChange","handleToggleSaveToken","onCreateAccount","submitClasses","login_prompt","password_prompt","onImageChanged","full_name_prompt","email_prompt","stay_logged_in","EditAccountView","handleCheckboxClick","onToggleMessageSounds","onTogglePushNotifications","onToggleIncognitoMode","messageSounds","desktopAlertsEnabled","desktopAlerts","incognitoMode","delete_account","delete_account_warning","AccSecurityView","blockedCount","showPermissionEditorFor","handlePasswordUpdate","handleHidePermissionsEditor","handleDeleteAccount","pwd","onUpdatePassword","onUpdateAccountDesc","onDeleteAccount","password_unchanged","onLogout","onShowBlocked","AccSupportView","LoginView","hostName","persist","onPersistenceChange","onLogin","autoCorrect","autoCapitalize","invalid_id","NewTopicById","groupId","prefix","NewTopicGroup","handleFieldEdit","handleTagsChanged","handleChannelToggle","SearchContacts","edited","handleSearchChange","handleSearch","handleClear","onSearchContacts","search_placeholder","search_for_contacts","search_no_results","NewTopicView","tabSelected","searchQuery","handleTabClick","handleSearchContacts","handleNewGroupSubmit","handleGroupByID","addUrlParam","removeUrlParam","onCreateTopic","dataUrl","priv","no_contacts_placeholder","searchResults","PasswordResetView","sent","token","scheme","onReset","onRequest","HostSelector","changed","handleHostNameChange","onServerAddressChange","hostOptions","list","SettingsView","transport","handleTransportSelected","handleServerAddressChange","onUpdate","def","ws","lp","transportOptions","phone","ValidationView","credCode","credMethod","numbers_only","register","settings","edit","notif","support","newtpk","reset","SidepanelView","handleNewTopic","errorAction","errorActionText","loadSpinnerVisible","loginDisabled","onLoginRequest","onGlobalSettings","onUpdateAccountTags","onValidateCredentials","onPasswordResetRequest","onResetPassword","detectServerAddress","host","protocol","hostname","port","isSecureConnection","POP_SOUND","Audio","reconnect_countdown","reconnect_now","push_init_failed","invalid_security_token","no_connection","code_doesnot_match","menu_item_info","TinodeWeb","getBlankState","handleResize","handleHashRoute","handleOnline","checkForAppUpdate","handleVisibilityEvent","handleError","handleLoginRequest","handlePersistenceChange","handleConnected","handleAutoreconnectIteration","doLogin","handleCredentialsRequest","handleLoginSuccessful","handleDisconnect","tnMeMetaDesc","tnMeContactUpdate","tnMeSubsUpdated","resetContactList","tnData","tnInitFind","tnFndSubsUpdated","handleTopicSelected","handleHideMessagesView","handleSendMessage","handleNewChatInvitation","handleNewAccount","handleNewAccountRequest","handleUpdatePasswordRequest","handleUpdateAccountTagsRequest","handleToggleIncognitoMode","handleSettings","handleGlobalSettings","handleShowArchive","handleShowBlocked","handleToggleMessageSounds","handleCredAdd","handleCredDelete","handleCredConfirm","initFCMessaging","togglePushToken","requestPushToken","handlePushMessage","handleSidepanelCancel","handleStartTopicRequest","handleNewTopicCreated","handleTopicUpdateRequest","handleChangePermissions","handleTagsUpdateRequest","handleLogout","handleDeleteTopicRequest","handleDeleteMessagesRequest","handleLeaveUnsubRequest","handleBlockTopicRequest","handleReportTopic","handleShowContextMenu","defaultTopicContextMenu","handleHideContextMenu","handleShowAlert","handleShowInfoView","handleValidateCredentialsRequest","handlePasswordResetRequest","handleResetPassword","handleContextMenuAction","autoLogin","messageSoundsOff","FIREBASE_INIT","firebaseToken","hidden","sidePanelSelected","sidePanelTitle","sidePanelAvatar","myTrustedBadges","liveConnection","onLine","topicSelectedOnline","topicSelectedAcs","innerWidth","infoPanel","mobilePanel","contextMenuVisible","contextMenuBounds","contextMenuClickAt","contextMenuParams","contextMenuItems","alertVisible","alertParams","requestedTopic","BroadcastChannel","documentElement","clientWidth","clientHeight","tnSetup","onConnect","onDisconnect","onAutoreconnectIteration","setDeviceToken","parsedNav","expires","setAuthToken","connect","readTimer","readTimerCallback","persistentCache","onSetupCompleted","appName","apiKey","secure","setHumanLanguage","enableLogging","oobNotification","fbPush","usePublicVapidKey","messagingVapidKey","serviceWorker","reg","useServiceWorker","postMessage","onTokenRefresh","onMessage","payload","mobile","onupdatefound","installingWorker","installing","onstatechange","controller","getTopicAccessMode","newTopicTabSelected","tab","reconnectCountdown","reconnect","isConnected","initStorage","clearStorage","getServerInfo","ver","sec","prom","timeLeft","seconds","secondsToTime","isAuthenticated","promise","getAuthToken","loginBasic","loginToken","goToTopic","onContactUpdate","getCurrentUserID","withDesc","withCred","disconnect","urlHash","setUrlSidePanel","isPresencer","play","foundContacts","merged","updated","past","prepareSearchableContacts","receivedTimer","noteRecv","fnd","getFndTopic","withSub","s","setMeta","isTopicOnline","isP2PType","am","updateWant","login_","password_","public_","cred_","tags_","createAccountBasic","on","enabled","updateObject","requestPermission","deleteToken","getToken","refreshedToken","delCredential","basicNavigator","infoNavigator","setUrlInfoPanel","newGroupTopicName","oldName","newName","updateAccountBasic","getCurrentLogin","updateGiven","delCurrentUser","publish","self_blocked","subscribed","confirmText","rejectText","invite","requestResetAuthSecret","newPassword","btoa","base64ReEncode","onAddMember","handleManageGroupMembers","hl","languages","baseLanguage","allMessages","IntlProvider","textComponent","__webpack_require__","module","getter","__esModule","d","exports","definition","o","defineProperty","enumerable","get","obj","prop","prototype","__webpack_modules__"],"sourceRoot":""}