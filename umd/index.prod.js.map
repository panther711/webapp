{"version":3,"sources":["webpack://tinode-webapp/external \"React\"","webpack://tinode-webapp/external \"ReactDOM\"","webpack://tinode-webapp/external \"ReactIntl\"","webpack://tinode-webapp/external \"firebase\"","webpack://tinode-webapp/external \"Tinode\"","webpack://tinode-webapp/external [\"firebase\",\"messaging\"]","webpack://tinode-webapp/./src/widgets/alert.jsx","webpack://tinode-webapp/./src/version.js","webpack://tinode-webapp/./src/config.js","webpack://tinode-webapp/./src/widgets/context-menu.jsx","webpack://tinode-webapp/./src/lib/strformat.js","webpack://tinode-webapp/./src/widgets/letter-tile.jsx","webpack://tinode-webapp/./src/lib/blob-helpers.js","webpack://tinode-webapp/./src/widgets/avatar-upload.jsx","webpack://tinode-webapp/./src/widgets/checkbox.jsx","webpack://tinode-webapp/./src/widgets/contact-badges.jsx","webpack://tinode-webapp/./src/lib/utils.js","webpack://tinode-webapp/./src/widgets/received-marker.jsx","webpack://tinode-webapp/./src/widgets/unread-badge.jsx","webpack://tinode-webapp/./src/widgets/contact.jsx","webpack://tinode-webapp/./src/widgets/contact-action.jsx","webpack://tinode-webapp/./src/widgets/contact-list.jsx","webpack://tinode-webapp/./src/widgets/menu-cancel.jsx","webpack://tinode-webapp/./src/widgets/error-panel.jsx","webpack://tinode-webapp/./src/widgets/chip.jsx","webpack://tinode-webapp/./src/widgets/chip-input.jsx","webpack://tinode-webapp/./src/widgets/group-manager.jsx","webpack://tinode-webapp/./src/widgets/visible-password.jsx","webpack://tinode-webapp/./src/widgets/in-place-edit.jsx","webpack://tinode-webapp/./src/widgets/more-button.jsx","webpack://tinode-webapp/./src/widgets/permissions-editor.jsx","webpack://tinode-webapp/./src/widgets/tag-manager.jsx","webpack://tinode-webapp/./src/views/info-view.jsx","webpack://tinode-webapp/./src/widgets/file-progress.jsx","webpack://tinode-webapp/./src/widgets/attachment.jsx","webpack://tinode-webapp/./src/widgets/uploading-image.jsx","webpack://tinode-webapp/./src/widgets/chat-message.jsx","webpack://tinode-webapp/./src/widgets/send-message.jsx","webpack://tinode-webapp/./src/widgets/doc-preview.jsx","webpack://tinode-webapp/./src/widgets/group-subs.jsx","webpack://tinode-webapp/./src/widgets/image-preview.jsx","webpack://tinode-webapp/./src/widgets/invitation.jsx","webpack://tinode-webapp/./src/widgets/load-spinner.jsx","webpack://tinode-webapp/./src/views/logo-view.jsx","webpack://tinode-webapp/./src/lib/navigation.js","webpack://tinode-webapp/./src/views/messages-view.jsx","webpack://tinode-webapp/./src/widgets/button-back.jsx","webpack://tinode-webapp/./src/widgets/menu-contacts.jsx","webpack://tinode-webapp/./src/widgets/menu-start.jsx","webpack://tinode-webapp/./src/widgets/side-navbar.jsx","webpack://tinode-webapp/./src/views/contacts-view.jsx","webpack://tinode-webapp/./src/lib/local-storage.js","webpack://tinode-webapp/./src/views/create-account-view.jsx","webpack://tinode-webapp/./src/views/edit-account-view.jsx","webpack://tinode-webapp/./src/views/acc-general-view.jsx","webpack://tinode-webapp/./src/views/acc-notifications-view.jsx","webpack://tinode-webapp/./src/views/acc-security-view.jsx","webpack://tinode-webapp/./src/views/acc-support-view.jsx","webpack://tinode-webapp/./src/views/login-view.jsx","webpack://tinode-webapp/./src/widgets/new-topic-by-id.jsx","webpack://tinode-webapp/./src/widgets/new-topic-group.jsx","webpack://tinode-webapp/./src/widgets/search-contacts.jsx","webpack://tinode-webapp/./src/views/new-topic-view.jsx","webpack://tinode-webapp/./src/views/password-reset-view.jsx","webpack://tinode-webapp/./src/widgets/host-selector.jsx","webpack://tinode-webapp/./src/views/settings-view.jsx","webpack://tinode-webapp/./src/views/validation-view.jsx","webpack://tinode-webapp/./src/views/sidepanel-view.jsx","webpack://tinode-webapp/./src/lib/host-name.js","webpack://tinode-webapp/./src/views/tinode-web.jsx","webpack://tinode-webapp/./src/index.js","webpack://tinode-webapp/webpack/bootstrap","webpack://tinode-webapp/webpack/runtime/compat get default export","webpack://tinode-webapp/webpack/runtime/define property getters","webpack://tinode-webapp/webpack/runtime/hasOwnProperty shorthand","webpack://tinode-webapp/webpack/startup"],"names":["React","ReactDOM","ReactIntl","firebase","messaging","Tinode","Alert","render","this","props","visible","className","title","content","onReject","onClick","reject","FormattedMessage","id","defaultMessage","onConfirm","confirm","PACKAGE_VERSION","APP_NAME","KNOWN_HOSTS","hosted","local","DEFAULT_HOST","KEYPRESS_DELAY","DEFAULT_P2P_ACCESS_MODE","REM_SIZE","AVATAR_SIZE","MAX_INBAND_ATTACHMENT_SIZE","MAX_EXTERN_ATTACHMENT_SIZE","MAX_IMAGE_DIM","MAX_TITLE_LENGTH","messages","defineMessages","info","clear_messages","clear_for_all","delete","delete_for_all","send_retry","mute","unmute","topic_delete","topic_delete_warning","delete_messages_warning","unblock","block","topic_block_warning","member_delete","archive","edit_permissions","clear_messages_warning","ContextMenu","constructor","super","formatMessage","intl","handlePageClick","bind","handleEscapeKey","handleClick","MenuItems","handler","params","errorHandler","onShowAlert","deleteMessages","message","retryMessage","topicPermissionSetter","then","ctrl","onTopicRemoved","topicName","topic","tinode","getTopic","delTopic","catch","err","console","log","user","delSubscription","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","e","contains","target","preventDefault","stopPropagation","hide","keyCode","item","items","currentTarget","dataset","onAction","onError","all","hard","cancelSend","seq","delMessagesAll","delMessagesList","flushMessage","msg","createMessage","publishDraft","mode","result","updateMode","count","menu","map","push","key","data-id","vSize","length","position","left","bounds","right","clickAt","x","top","bottom","y","style","injectIntl","shortDateFormat","locale","window","navigator","userLanguage","language","now","Date","getFullYear","getMonth","getDate","toLocaleTimeString","hour12","hour","minute","toLocaleDateString","month","day","year","bytesToHumanSize","bytes","sizes","bucket","Math","min","floor","log2","pow","round","toFixed","LetterTile","avatar","isGroup","iconColor","abs","value","hash","i","charCodeAt","stringHash","trim","letter","charAt","alt","src","onerror","SUPPORTED_IMAGE_FORMATS","MIME_EXTENSIONS","makeImageUrl","photo","type","data","fitImageSize","width","height","maxWidth","maxHeight","forceSquare","scale","size","dstWidth","dstHeight","srcWidth","srcHeight","xoffset","yoffset","imageScaled","fileOrBlob","maxSize","onSuccess","img","Image","crossOrigin","onload","async","URL","revokeObjectURL","dim","canvas","createElement","ctx","getContext","imageSmoothingEnabled","drawImage","mime","indexOf","blob","Promise","resolve","toBlob","clearRect","fname","idx","ext","at","lastIndexOf","substring","fileNameForMime","name","createObjectURL","fileToBase64","file","reader","FileReader","split","readAsDataURL","blobToBase64","AvatarUpload","state","dataUrl","handleFileUpload","componentDidUpdate","prevProps","setState","files","unused","base64bits","du","onImageChanged","randId","random","substr","readOnly","href","uid","accept","onChange","htmlFor","CheckBox","handleChange","checked","icon_mapping","ContactBadges","badges","b","icon","color","updateFavicon","oldIcon","getElementById","head","getElementsByTagName","newIcon","rel","removeChild","appendChild","vcard","fn","imageDataUrl","card","dataStart","arrayEqual","a","Array","isArray","sort","l","sanitizeUrl","url","allowedSchemes","replace","test","schemes","join","RegExp","deliveryMarker","received","message_sending","message_sending_failed","ReceivedMarker","timestamp","marker","UnreadBadge","drafty_image","drafty_form","drafty_attachment","Contact","handleContextClick","onSelected","index","showContextMenu","pageY","pageX","online","slice","icon_badges","acs","showMode","getMode","isMuted","isJoiner","subtitle","preview","Drafty","draftyFormatter","comment","showCheckmark","selected","showOnline","isChannel","unread","values","el","attr","concat","ContactAction","action","badge_you","badge_owner","ContactList","topicSelected","contactNodes","contactsCount","contacts","c","filterFunc","filter","filterOn","private","toLowerCase","public","myUserId","isOwner","deliveryStatus","latestMessage","_status","msgStatus","showUnread","connected","onTopicSelected","noScroll","dangerouslySetInnerHTML","__html","emptyListMessage","MenuCancel","onCancel","ErrorPanel","show","level","onClearError","warn","text","whiteSpace","actionText","Chip","handleCancel","invalid","noAvatar","required","ChipInput","deriveStateFromProps","input","focused","handleTextInput","removeChipAt","handleChipCancel","handleFocusGained","handleFocusLost","handleKeyDown","placeholder","chips","prompt","sortedChips","sortChips","staticMembers","chipIndex","indexChips","prevState","keep","normal","includes","removed","onChipRemoved","onFocusLost","onEnter","undefined","avatarDisabled","onFocus","onBlur","onKeyDown","autoFocus","no_contacts","contacts_not_found_short","GroupManager","members","indexMembers","keepInitialMembers","requiredMember","contactFilter","noContactsMessage","selectedContacts","handleContactSelected","handleMemberRemoved","handleContactFilter","handleSubmit","m","delta","present","keepInitial","stat","sel","userId","status","splice","val","query","instance","added","Object","keys","k","onSubmit","doContactFiltering","VisiblePassword","handleVisibility","handeTextChange","handleEditingFinished","onFinished","setTimeout","activeElement","tabIndex","autoComplete","InPlaceEdit","active","initialValue","handleStartEditing","handlePasswordFinished","newValue","focus","event","checkValidity","fieldType","spanText","spanClass","MoreButton","open","handleToggle","onToggle","joiner","writer","preser","approver","sharer","deleter","owner","PermissionsEditor","names","skip","compare","userTitle","userAvatar","modeTitle","compareTitle","TagManager","tags","tagInput","activated","handleTagInput","handleAddTag","handleRemoveTag","nextProps","last","tag","maxTagCount","getServerLimit","onTagsChanged","minTagLength","maxTagLength","add_tags_prompt","requested","granted","other_user","delete_messages","leave_chat","leave_chat_warning","block_contact","block_contact_warning","report_chat","report_chat_warning","InfoView","admin","muted","address","groupTopic","channel","fullName","selectedContact","access","modeGiven","modeWant","modeGiven2","modeWant2","auth","anon","contactList","showMemberPanel","showPermissionEditorFor","moreInfoExpanded","previousMetaDesc","previousSubsUpdated","previousTagsUpdated","resetSubs","resetDesc","onMetaDesc","onSubsUpdated","onTagsUpdated","handleFullNameUpdate","handlePrivateUpdate","handleImageChanged","handleMuted","handlePermissionsChanged","handleLaunchPermissionsEditor","handleHidePermissionsEditor","handleShowAddMembers","handleHideAddMembers","handleMemberUpdateRequest","handleDeleteMessages","handleLeave","handleBlock","handleReport","handleMemberSelected","handleMoreInfo","handleTagsUpdated","handleContextMenu","getType","newState","user2","subscriber","getGiven","getWant","subscribers","sub","defacs","getDefaultAccess","getAccessMode","isAdmin","isSharer","isDeleter","isGroupType","isChannelType","getMeta","startMetaQuery","withTags","build","desc","subs","onTopicDescUpdate","ignored","onChangePermissions","perm","userPermissionsEdited","which","toEdit","toCompare","toSkip","titleEdit","titleCompare","userPermissionsTitle","userPermissionsAvatar","editedPermissions","immutablePermissions","editedPermissionsTitle","immutablePermissionsTitle","editedPermissionsSkipped","onInitFind","onMemberUpdateRequest","onDeleteMessages","onLeaveTopic","onBlockTopic","onReportTopic","onTopicTagsUpdate","menuItems","displayMobile","errorLevel","errorText","searchableContacts","private_placeholder","more","no_members","FileProgress","progress","Attachment","downloader","downloadFile","filename","mimetype","getLargeFileHelper","download","loaded","uploading","onCancelUpload","cancel","helperFunc","isUrlRelative","downloadUrl","downloadWidget","UploadingImage","ChatMessage","uploader","onProgress","handleProgress","handleImagePreview","handleFormButtonClick","handleCancelUpload","onImagePreview","resp","act","ref","onFormResponse","MESSAGE_STATUS_FAILED","ratio","sideClass","deleted","sequence","response","bubbleClass","fullDisplay","userFrom","attachments","mimeType","att","userName","notFound","viewportWidth","minWidth","minHeight","authorizeURL","sanitizeImageUrl","inner","child","messaging_disabled","type_new_message","add_image_caption","file_attachment_too_large","cannot_initiate_upload","SendMessage","keypressTimestamp","getTime","handlePasteEvent","handleAttachImage","handleAttachFile","handleSend","handleKeyPress","handleMessageTyping","messageEditArea","disabled","onImageSuccess","onAttachmentSuccess","clipboardData","originalEvent","kind","getAsFile","imageFileScaledToBase64","imageFileToBase64","filePasted","bits","onAttachImage","onAttachFile","acceptBlank","noInput","onSendMessage","shiftKey","onKeyPress","messagePrompt","attachImage","click","attachFile","display","DocPreview","handleSendDoc","caption","onClose","mimeToIcon","default","image","video","iconFromMime","GroupSubs","usersOnline","totalCount","countToShow","some","overflow","ImagePreview","handleSendImage","assignWidth","node","getBoundingClientRect","maxlength","max","Invitation","handleButtonAction","evt","LoadSpinner","LogoView","version","serverVersion","serverAddress","HashNavigation","parts","path","forEach","part","decodeURIComponent","location","args","hasOwnProperty","parsed","parseUrlHash","composeUrlHash","sidepanel","online_now","last_seen","not_found","isUnconfirmed","ex","getExcessive","isPeerRestricted","ms","getMissing","MessagesView","getDerivedStateFromProps","leave","sendImageAttachment","sendFileAttachment","sendKeyPress","handleScrollReference","handleScrollEvent","handleDescChange","handleSubsUpdated","handleNewMessage","handleAllMessagesReceived","handleInfoReceipt","handleImagePostview","handleClosePreview","handleFormResponse","handleShowContextMenuMessage","handleNewChatAcceptance","handleEnablePeer","postReadNotification","clearNotificationQueue","readNotificationQueue","readNotificationTimer","messagesScroller","scrollTop","scrollHeight","scrollPosition","viewportHeight","onData","onAllMessagesReceived","onInfo","onPres","applicationVisible","isSubscribed","ready","newTopic","newTopicParams","_topicName","getQuery","withLaterDesc","withLaterSub","isReader","withLaterData","withLaterDel","fetchingMessages","setQuery","subscribe","code","onNewTopicCreated","queuedMessages","pub","_sending","publishMessage","setUrlTopic","blankState","nextState","docPreview","imagePreview","imagePostview","typingIndicator","msgs","assign","onlineSubs","peer","p2pPeerDesc","peerMessagingDisabled","isWriter","readingBlocked","unconformed","unconfirmed","oldTopicName","oldTopic","finally","msgHasMoreMessages","getMessagesPage","setInterval","clearInterval","n","shift","sendAt","noteRead","setMilliseconds","getMilliseconds","isNewMessage","from","what","clearTimeout","keyPressTimer","forceUpdate","sendMessage","attachJSON","parse","searchParams","set","search","messageSpecificMenuItems","onNewChat","noteKeyPress","maxInbandAttachmentSize","uploadCompletionPromise","upload","urlPromise","maxExternAttachmentSize","limit","tinyBlob","blobMime","tinyBits64","insertImage","_tempPreview","appendLineBreak","append","init","bits64","found","find","_cancelled","component","hideSelf","component2","messageNodes","previousFrom","chatBoxClass","nextFrom","thisFrom","isReply","userDesc","hi","ts","_uploader","lastSeen","cont","getMeTopic","getContact","seen","when","onHideMessagesView","ButtonBack","onBack","MenuContacts","onNewTopic","onSettings","MenuStart","onSignUp","SideNavbar","archived_contacts_title","ContactsView","handleAction","unreadThreads","archivedCount","chatList","blocked","arch","touched","action_ignored","onShowArchive","LocalStorageUtil","localStorage","setItem","JSON","stringify","getItem","oldVal","getObject","setObject","removeItem","CreateAccountView","login","password","email","errorCleared","saveToken","handleLoginChange","handlePasswordChange","handleEmailChange","handleFnChange","handleToggleSaveToken","onCreateAccount","submitClasses","login_prompt","password_prompt","full_name_prompt","email_prompt","stay_logged_in","EditAccountView","me","onBasicNavigate","AccGeneralView","credentials","getCredentials","addCredActive","addCredInvalid","newCred","previousOnTags","tnNewTags","tnCredsUpdated","handleCredChange","handleCredKeyDown","handleCredEntered","onCredsUpdated","creds","onUpdateAccount","method","asPhone","asEmail","onCredAdd","onUpdateTags","cred","meth","done","onCredConfirm","onCredDelete","full_name_placeholder","title_tag_manager","handleCheckboxClick","onToggleMessageSounds","onTogglePushNotifications","onToggleIncognitoMode","messageSounds","desktopAlertsEnabled","desktopAlerts","incognitoMode","delete_account","delete_account_warning","AccSecurityView","blockedCount","handlePasswordUpdate","handleDeleteAccount","pwd","onDeleteAccount","password_unchanged","onLogout","onShowBlocked","AccSupportView","LoginView","hostName","onLogin","autoCorrect","autoCapitalize","invalid_id","NewTopicById","groupId","prefix","NewTopicGroup","handlePrivateChange","handleTagsChanged","handleChannelToggle","SearchContacts","edited","handleSearchChange","handleSearch","handleClear","onSearchContacts","search_placeholder","search_for_contacts","search_no_results","NewTopicView","tabSelected","searchQuery","handleTabClick","handleSearchContacts","handleNewGroupSubmit","handleGroupByID","addUrlParam","removeUrlParam","onCreateTopic","priv","no_contacts_placeholder","searchResults","PasswordResetView","token","scheme","onReset","onRequest","reset","HostSelector","changed","handleHostNameChange","onServerAddressChange","hostOptions","list","SettingsView","transport","handleTransportSelected","handleServerAddressChange","onUpdate","def","ws","lp","transportOptions","phone","ValidationView","credCode","credMethod","numbers_only","register","settings","edit","general","security","notif","support","newtpk","SidepanelView","handleLoginRequested","handleNewTopic","onLoginRequest","view","errorAction","errorActionText","loadSpinnerVisible","loginDisabled","onGlobalSettings","onUpdateAccountTags","onValidateCredentials","onPasswordResetRequest","onResetPassword","detectServerAddress","host","protocol","hostname","port","isSecureConnection","POP_SOUND","Audio","reconnect_countdown","reconnect_now","push_init_failed","invalid_security_token","no_connection","code_doesnot_match","menu_item_info","TinodeWeb","getBlankState","handleResize","handleHashRoute","handleOnline","checkForAppUpdate","handleVisibilityEvent","handleError","handleLoginRequest","handleConnected","handleAutoreconnectIteration","doLogin","handleCredentialsRequest","handleLoginSuccessful","handleDisconnect","tnMeMetaDesc","tnMeContactUpdate","tnMeSubsUpdated","resetContactList","tnData","tnInitFind","tnFndSubsUpdated","handleTopicSelected","handleHideMessagesView","handleSendMessage","handleNewChatInvitation","handleNewAccount","handleNewAccountRequest","handleUpdateAccountRequest","handleUpdateAccountTagsRequest","handleToggleIncognitoMode","handleSettings","handleGlobalSettings","handleShowArchive","handleShowBlocked","handleToggleMessageSounds","handleCredAdd","handleCredDelete","handleCredConfirm","initFCMessaging","togglePushToken","requestPushToken","handlePushMessage","handleSidepanelCancel","handleStartTopicRequest","handleNewTopicCreated","handleTopicUpdateRequest","handleChangePermissions","handleLogout","handleDeleteMessagesRequest","handleLeaveUnsubRequest","handleBlockTopicRequest","handleReportTopic","handleShowContextMenu","defaultTopicContextMenu","handleHideContextMenu","handleShowAlert","handleShowInfoView","handleHideInfoView","handleValidateCredentialsRequest","handlePasswordResetRequest","handleResetPassword","handleContextMenuAction","persist","autoLogin","messageSoundsOff","FIREBASE_INIT","firebaseToken","hidden","sidePanelSelected","sidePanelTitle","sidePanelAvatar","liveConnection","onLine","topicSelectedOnline","topicSelectedAcs","innerWidth","showInfoPanel","mobilePanel","contextMenuVisible","contextMenuBounds","contextMenuClickAt","contextMenuParams","contextMenuItems","alertVisible","alertParams","requestedTopic","BroadcastChannel","documentElement","clientWidth","clientHeight","keepLoggedIn","tnSetup","onConnect","onDisconnect","onAutoreconnectIteration","setDeviceToken","parsedNav","expires","setAuthToken","connect","tab","readTimer","readTimerCallback","persistentCache","onSetupCompleted","appName","apiKey","secure","setHumanLanguage","enableLogging","payload","oobNotification","fbPush","usePublicVapidKey","messagingVapidKey","serviceWorker","reg","useServiceWorker","postMessage","onTokenRefresh","onMessage","mobile","onupdatefound","installingWorker","installing","onstatechange","controller","newTopicTabSelected","reconnectCountdown","reconnect","isConnected","getServerInfo","ver","sec","prom","timeLeft","seconds","secondsToTime","isAuthenticated","promise","getAuthToken","loginBasic","loginToken","goToTopic","onContactUpdate","getCurrentUserID","withDesc","withCred","disconnect","urlHash","setUrlSidePanel","isPresencer","archived","isArchived","play","foundContacts","merged","updated","prepareSearchableContacts","receivedTimer","noteRecv","fnd","getFndTopic","withSub","s","setMeta","isTopicOnline","getTopicAccessMode","isP2PType","am","updateWant","login_","password_","public_","cred_","tags_","createAccountBasic","updateAccountBasic","getCurrentLogin","on","clearStorage","enabled","requestPermission","deleteToken","getToken","refreshedToken","delCredential","basicNavigator","isTopicCached","newGroupTopicName","oldName","newName","permissions","updateGiven","delCurrentUser","publish","self_blocked","subscribed","confirmText","rejectText","invite","requestResetAuthSecret","newPassword","str","btoa","atob","base64ReEncode","onAddMember","handleManageGroupMembers","hl","languages","baseLanguage","allMessages","IntlProvider","textComponent","__webpack_require__","module","getter","__esModule","d","exports","definition","o","defineProperty","enumerable","get","obj","prop","prototype","call","__webpack_modules__"],"mappings":"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","file":"index.prod.js","sourcesContent":["var __WEBPACK_NAMESPACE_OBJECT__ = React;","var __WEBPACK_NAMESPACE_OBJECT__ = ReactDOM;","var __WEBPACK_NAMESPACE_OBJECT__ = ReactIntl;","var __WEBPACK_NAMESPACE_OBJECT__ = firebase;","var __WEBPACK_NAMESPACE_OBJECT__ = Tinode;","var __WEBPACK_NAMESPACE_OBJECT__ = firebase.messaging;","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Alert extends React.PureComponent {\n  render() {\n    return this.props.visible ?\n      <div className=\"alert-container\">\n        <div className=\"alert\">\n          <div className=\"title\">{this.props.title}</div>\n          <div className=\"content\">{this.props.content}</div>\n          <div className=\"dialog-buttons\">\n            {this.props.onReject ?\n              <button className=\"outline\" onClick={this.props.onReject}>\n                {this.props.reject || <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />}\n              </button>\n              :\n              null\n            }\n            <button className=\"primary\" onClick={this.props.onConfirm}>\n              {this.props.confirm || <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\"  />}\n            </button>\n          </div>\n        </div>\n      </div>\n    :\n    null;\n  }\n};\n","// This is a generated file. Don't edit.\n\nexport const PACKAGE_VERSION = \"0.17.0-rc1\";\n","import { PACKAGE_VERSION } from './version.js';\n\n// Name of this application, used in the User-Agent.\nexport const APP_NAME = 'TinodeWeb/' + (PACKAGE_VERSION || '0.16');\n\n// API key. Use https://github.com/tinode/chat/tree/master/keygen to generate your own\nexport const API_KEY = 'AQEAAAABAAD_rAp4DJh05a1HAwFT3A6K';\n\n// The array of possible hosts to connect to.\nexport const KNOWN_HOSTS = {hosted: 'web.tinode.co', local: 'localhost:6060'};\n\n// Default host name and port to connect to.\nexport const DEFAULT_HOST = KNOWN_HOSTS.hosted;\n\n// Enable console logging.\nexport const LOGGING_ENABLED = true;\n\n// Minimum time between two keypress notifications, milliseconds.\nexport const KEYPRESS_DELAY = 3*1000;\n// Delay before sending a {note} for reciving a message, milliseconds.\nexport const RECEIVED_DELAY = 500;\n// Delay before sending a read notification, milliseconds.\nexport const READ_DELAY = 1000;\n\n// The shortest allowed tag length. Matches the value on the server.\nexport const MIN_TAG_LENGTH = 2;\n// The greatest allowed tag length. Matches the value on the server.\nexport const MAX_TAG_LENGTH = 96;\n// The maximum number of tags allowed. Matches the value on the server.\nexport const MAX_TAG_COUNT = 16;\n\n// Access mode for P2P subscriptions initiated by the current user.\nexport const DEFAULT_P2P_ACCESS_MODE = 'JRWPS';\n// Access mode for new group topics created by the current user.\nexport const NEW_GRP_ACCESS_MODE = 'JRWPSAO';\n// Access mode for a channel.\nexport const CHANNEL_ACCESS_MODE = 'JR';\n\n// Access mode for no access.\nexport const NO_ACCESS_MODE = 'N';\n\n// Mediaquery breakpoint between desktop and mobile, in px. Should match the value\n// in @media (max-size: 640px) in base.css\nexport const MEDIA_BREAKPOINT = 640;\n// Size of css 'rem' unit in pixels. Default 1rem = 10pt = 13px.\nexport const REM_SIZE = 13;\n\n// Size of the avatar image: When an avatar image is uploaded, it's resized to\n// a square of this size.\nexport const AVATAR_SIZE = 128;\n\n// Size of the broken_image shown in MessagesView\nexport const BROKEN_IMAGE_SIZE = 32;\n\n// Number of chat messages to fetch in one call.\nexport const MESSAGES_PAGE = 24;\n\n// Default maximum in-band (included directly into the message) attachment size which fits into\n// a message of 256K in size. The actual binary size of the attachment should be smaller due to\n// base64 encoding expansion and some overhead, for instance 1024 bytes.\n// Increase this limit to a greater value in production, if desired. Also increase\n// max_message_size in the server config.\nexport const MAX_INBAND_ATTACHMENT_SIZE = 262144;\n\n// Absolute maximum attachment size to be used with the server = 8MB. Increase to\n// something like 100MB in production.\nexport const MAX_EXTERN_ATTACHMENT_SIZE = 1 << 23;\n\n// Maximum allowed linear dimension of an inline image in pixels. Larer images will be shrunk\n// to make the larger dimension fit under this size. You may want to adjust it to 1600 or\n// 2400 for production.\nexport const MAX_IMAGE_DIM = 1024;\n\n// Linear dimensions of image preview: shrink image under this size for previews.\nexport const IMAGE_PREVIEW_DIM = 64;\n\n// Maximum number of online users to be shown in a topic title bar. Others will be\n// hidden under \"+X more\"\nexport const MAX_ONLINE_IN_TOPIC = 4;\n\n// Maximum length of user name, topic title, and private comment.\nexport const MAX_TITLE_LENGTH = 60;\n\n// Length of message previews in chat list, in characters.\nexport const MESSAGE_PREVIEW_LENGTH = 80;\n\n// Link for \"Contact Us\".\nexport const LINK_CONTACT_US = 'email:info@tinode.co';\n\n// Link to Privacy Policy.\nexport const LINK_PRIVACY_POLICY = 'https://tinode.co/privacy.html';\n\n// Link to Terms of Service.\nexport const LINK_TERMS_OF_SERVICE = 'https://tinode.co/terms.html';\n","// Context Menu: popup/dropdown menu.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { injectIntl, defineMessages } from 'react-intl';\n\nimport { REM_SIZE } from '../config.js';\nimport HashNavigation from '../lib/navigation.js';\n\nconst messages = defineMessages({\n  info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  },\n  clear_messages: {\n    id: 'menu_item_clear_messages',\n    defaultMessage: 'Clear messages',\n    description: 'Delete all messages'\n  },\n  clear_for_all: {\n    id: 'menu_item_clear_messages_for_all',\n    defaultMessage: 'Clear for All',\n    description: 'Delete all message(s) for all members'\n  },\n  delete: {\n    id: 'menu_item_delete',\n    defaultMessage: 'Delete',\n    description: 'Delete selected messages'\n  },\n  delete_for_all: {\n    id: 'menu_item_delete_for_all',\n    defaultMessage: 'Delete for All',\n    description: 'Delete selected message(s) for all members'\n  },\n  send_retry: {\n    id: 'menu_item_send_retry',\n    defaultMessage: 'Retry',\n    description: 'Retry sending message'\n  },\n  mute: {\n    id: 'menu_item_mute',\n    defaultMessage: 'Mute',\n    description: 'Turn off notifications'\n  },\n  unmute: {\n    id: 'menu_item_unmute',\n    defaultMessage: 'Unmute',\n    description: 'Turn notifications on'\n  },\n  topic_delete: {\n    id: 'menu_item_delete_topic',\n    defaultMessage: 'Delete',\n    description: 'Delete entire topic'\n  },\n  topic_delete_warning: {\n    id: 'topic_delete_warning',\n    defaultMessage: 'Are you sure you want to delete this conversation?',\n    description: 'Alert warning when deleting entire topic'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  unblock: {\n    id: 'menu_item_unblock',\n    defaultMessage: 'Unblock',\n    description: 'Unblock topic or user'\n  },\n  // Generic string suitable for either topic or user.\n  block: {\n    id: 'menu_item_block',\n    defaultMessage: 'Block',\n    description: 'Block topic or user'\n  },\n  topic_block_warning: {\n    id: 'topic_block_warning',\n    defaultMessage: 'Are you sure you want to block this conversation?',\n    description: 'Alert warning when blocking a topic.'\n  },\n  member_delete: {\n    id: 'menu_item_member_delete',\n    defaultMessage: 'Remove',\n    description: 'Remove user from topic'\n  },\n  archive: {\n    id: 'menu_item_archive_topic',\n    defaultMessage: 'Archive',\n    description: 'Move topic from the list of active chats to archive'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n});\n\nclass ContextMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const {formatMessage} = props.intl;\n\n    this.handlePageClick = this.handlePageClick.bind(this);\n    this.handleEscapeKey = this.handleEscapeKey.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n\n    // Preconfigured menu items.\n    this.MenuItems = {\n      'topic_info': {\n        id: 'topic_info',\n        title: formatMessage(messages.info),\n        handler: null\n      },\n      'messages_clear': {\n        id: 'messages_clear',\n        title: formatMessage(messages.clear_messages),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.clear_messages), // title\n            formatMessage(messages.clear_messages_warning), // content\n            (() => { this.deleteMessages(true, false, params, errorHandler); }), // onConfirm\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'messages_clear_hard': {\n        id: 'messages_clear_hard',\n        title: formatMessage(messages.clear_for_all),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.clear_for_all), // title\n            formatMessage(message.delete_messages_warning), // content\n            (() => { return this.deleteMessages(true, true, params, errorHandler); }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'message_delete': {\n        id: 'message_delete',\n        title: formatMessage(messages.delete),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, false, params, errorHandler);\n        }\n      },\n      'message_delete_hard': {\n        id: 'message_delete_hard',\n        title: formatMessage(messages.delete_for_all),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, true, params, errorHandler);\n        }\n      },\n      'menu_item_send_retry': {\n        id: 'menu_item_send_retry',\n        title: formatMessage(messages.send_retry),\n        handler: (params, errorHandler) => {\n          return this.retryMessage(params, errorHandler);\n        }\n      },\n      'topic_unmute': {\n        id: 'topic_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'topic_mute': {\n        id: 'topic_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'topic_unblock': {\n        id: 'topic_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n      'topic_block': {\n        id: 'topic_block',\n        title: formatMessage(messages.block),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.block), // title\n            formatMessage(messages.topic_block_warning), // content\n            (() => {\n              return this.topicPermissionSetter('-JP', params, errorHandler).then((ctrl) => {\n                this.props.onTopicRemoved(params.topicName);\n                return ctrl;\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_delete': {\n        id: 'topic_delete',\n        title: formatMessage(messages.topic_delete),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.topic_delete), // title\n            formatMessage(messages.topic_delete_warning), // content\n            (() => {\n              const topic = this.props.tinode.getTopic(params.topicName);\n              if (!topic) {\n                console.log(\"Topic not found: \", params.topicName);\n                return;\n              }\n              return topic.delTopic(true).catch((err) => {\n                if (errorHandler) {\n                  errorHandler(err.message, 'err');\n                }\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_archive': {\n        id: 'topic_archive',\n        title: formatMessage(messages.archive),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic) {\n            console.log(\"Topic not found: \", params.topicName);\n            return;\n          }\n          return topic.archive(true).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      // menu_item_edit_permissions is defined elsewhere.\n      'permissions': {\n        id: 'permissions',\n        title: formatMessage(messages.edit_permissions),\n        handler: null\n      },\n      'member_delete': {\n        id: 'member_delete',\n        title: formatMessage(messages.member_delete),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic || !params.user) {\n            console.log(\"Topic or user not found: '\" + params.topicName + \"', '\" + params.user + \"'\");\n            return;\n          }\n          return topic.delSubscription(params.user).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      'member_mute': {\n        id: 'member_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'member_unmute': {\n        id: 'member_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'member_block': {\n        id: 'member_block',\n        title: formatMessage(messages.block),\n        handler: this.topicPermissionSetter.bind(this, '-JP')\n      },\n      'member_unblock': {\n        id: 'member_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handlePageClick, false);\n    document.addEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handlePageClick, false);\n    document.removeEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  handlePageClick(e) {\n    if (ReactDOM.findDOMNode(this).contains(e.target)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n  }\n\n  handleEscapeKey(e) {\n    if (e.keyCode === 27) {\n      this.props.hide();\n    }\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n    let item = this.props.items[e.currentTarget.dataset.id];\n    if (typeof item == 'string') {\n      item = this.MenuItems[item];\n    }\n\n    if (!item) {\n      console.log(\"Invalid menu item ID\", e.currentTarget.dataset.id);\n    } else {\n      this.props.onAction(\n        item.id,\n        item.handler(this.props.params, this.props.onError),\n        this.props.params);\n    }\n  }\n\n  // Menu Actions\n\n  deleteMessages(all, hard, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found: \", params.topicName);\n      return;\n    }\n\n    // We don't know if the message is still pending (e.g. attachment is being uploaded),\n    // so try cancelling first. No harm if we can't cancel.\n    // The message can be cancelled if transmission to the server has not\n    // started yet or if the message send has failed.\n    if (!all && topic.cancelSend(params.seq)) {\n      return;\n    }\n    // Can't cancel. Delete instead.\n    const promise = all ?\n      topic.delMessagesAll(hard) :\n      topic.delMessagesList([params.seq], hard);\n\n    return promise.catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Retries sending failed message.\n  retryMessage(params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    // Remove the existing message entry.\n    if (!topic || !topic.flushMessage(params.seq)) {\n      return;\n    }\n    const msg = topic.createMessage(params.content, false);\n    return topic.publishDraft(msg).catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Function is used by context menu to set permissions.\n  topicPermissionSetter(mode, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found\", params.topicName);\n      return;\n    }\n\n    let result = topic.updateMode(params.user, mode);\n    if (errorHandler) {\n      result = result.catch((err) => {\n        errorHandler(err.message, 'err');\n      });\n    }\n    return result;\n  }\n\n  render() {\n    let count = 0;\n    let menu = [];\n    this.props.items.map((item) => {\n      if (typeof item == 'string') {\n        item = this.MenuItems[item];\n      }\n      if (item && item.title) {\n        menu.push(\n          item.title == '-' ?\n            <li className=\"separator\" key={count} />\n            :\n            <li onClick={this.handleClick} data-id={count} key={count}>{item.title}</li>\n        );\n      }\n      count++;\n    });\n\n    // Ensure that menu is inside the app-container.\n    const hSize = 12 * REM_SIZE;\n    const vSize = REM_SIZE * (0.7 + menu.length * 2.5);\n    const left = (this.props.bounds.right - this.props.clickAt.x < hSize) ?\n        (this.props.clickAt.x - this.props.bounds.left - hSize) :\n        (this.props.clickAt.x - this.props.bounds.left);\n    const top = (this.props.bounds.bottom - this.props.clickAt.y < vSize) ?\n        (this.props.clickAt.y - this.props.bounds.top - vSize) :\n        (this.props.clickAt.y - this.props.bounds.top);\n\n    const position = {\n      left: left + 'px',\n      top: top + 'px'\n    };\n\n    return (\n      <ul className=\"menu\" style={position}>\n        {menu}\n      </ul>\n    );\n  }\n}\n\nexport default injectIntl(ContextMenu);\n","// Short representation of time in the past.\nexport function shortDateFormat(then, locale) {\n  locale = locale || window.navigator.userLanguage || window.navigator.language;\n  const now = new Date();\n  if (then.getFullYear() == now.getFullYear()) {\n    // Same year.\n    if (then.getMonth() == now.getMonth() && then.getDate() == now.getDate()) {\n      // Same month and day, show time only.\n      return then.toLocaleTimeString(locale, {hour12: false, hour: '2-digit', minute: '2-digit'});\n    }\n    // Different month and/or day, show month day, time.\n    return then.toLocaleDateString(locale,\n      {hour12: false, month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit'});\n  }\n  // Different year: just show the date.\n  return then.toLocaleDateString(locale, {year: 'numeric', month: 'short', day: 'numeric'});\n}\n\n// Convert seconds to minutes:seconds, i.e. 156 sec -> 2:36.\nexport function secondsToTime(seconds) {\n  const min = Math.floor(seconds / 60);\n  let sec = seconds % 60;\n  sec = sec < 10 ? `0${sec}` : sec;\n  return `${min}:${sec}`;\n}\n\n// Convert a number of bytes to human-readable format.\nexport function bytesToHumanSize(bytes) {\n  if (!bytes || bytes == 0) {\n    return '0 Bytes';\n  }\n\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n  const bucket = Math.min(Math.floor(Math.log2(bytes) / 10) | 0, sizes.length-1);\n  const count = bytes / Math.pow(1024, bucket);\n  const round = bucket > 0 ? (count < 3 ? 2 : (count < 30 ? 1 : 0)) : 0;\n  return count.toFixed(round) + ' ' + sizes[bucket];\n}\n\n// Get 32 bit integer hash value for a string. Ideally it should produce the same value\n// as Java's String#hash().\nexport function stringHash(value) {\n  let hash = 0;\n  value = '' + value;\n  for (let i = 0; i < value.length; i++) {\n    hash = ((hash << 5) - hash) + value.charCodeAt(i);\n    hash = hash & hash; // Convert to 32bit integer\n  }\n  return hash;\n}\n","import React from 'react';\n\nimport Tinode from 'tinode-sdk';\n\nimport { stringHash } from '../lib/strformat.js';\n\nexport default class LetterTile extends React.PureComponent {\n  render() {\n    let avatar;\n    if (this.props.avatar === true) {\n      const isGroup = (Tinode.topicType(this.props.topic) == 'grp');\n      const iconColor = (isGroup ? 'light-color' : 'dark-color')\n        + (Math.abs(stringHash(this.props.topic)) % 16);\n      if (this.props.topic && this.props.title && this.props.title.trim()) {\n        const letter = this.props.title.trim().charAt(0);\n        const className = 'lettertile ' + iconColor;\n        avatar = (<div className={className}><div>{letter}</div></div>)\n      } else {\n        const className = 'material-icons ' + iconColor;\n        avatar = isGroup ?\n          <i className={className}>group</i> : <i className={className}>person</i>;\n      }\n    } else if (this.props.avatar) {\n      // If avatar image is invalid, show a placeholder.\n      avatar = <img className=\"avatar\" alt=\"avatar\" src={this.props.avatar}\n        onError={(e)=>{e.target.onerror = null; e.target.src=\"/img/broken_image.png\"}} />;\n    } else {\n      avatar = null;\n    }\n    return avatar;\n  }\n}\n","// File and image helper functions.\nimport { MAX_INBAND_ATTACHMENT_SIZE, MAX_IMAGE_DIM } from '../config.js';\nimport { bytesToHumanSize } from './strformat.js'\n\n// Supported image MIME types and corresponding file extensions.\nexport const SUPPORTED_IMAGE_FORMATS = ['image/jpeg', 'image/gif', 'image/png', 'image/svg', 'image/svg+xml'];\nexport const MIME_EXTENSIONS         = ['jpg',        'gif',       'png',       'svg',       'svg'];\n\n// Make a data URL from public.photo\nexport function makeImageUrl(photo) {\n  return (photo && photo.type && photo.data) ?\n    'data:image/' + photo.type + ';base64,' + photo.data : null;\n}\n\n// Calculate linear dimensions for scaling image down to fit under a certain size.\n// Returns an object which contains destination sizes, source sizes, and offsets\n// into source (when making square images).\nexport function fitImageSize(width, height, maxWidth, maxHeight, forceSquare) {\n  // Sanitize input\n  width = width | 0;\n  height = height | 0;\n  maxWidth = maxWidth | 0;\n  maxHeight = maxHeight | 0;\n\n  if (width <= 0 || height <= 0 || maxWidth <= 0 || maxHeight <= 0) {\n    return null;\n  }\n\n  if (forceSquare) {\n    maxWidth = maxHeight = Math.min(maxWidth, maxHeight);\n  }\n\n  let scale = Math.min(\n    Math.min(width, maxWidth) / width,\n    Math.min(height, maxHeight) / height\n  );\n\n  let size = {\n    dstWidth: (width * scale) | 0,\n    dstHeight: (height * scale) | 0,\n  };\n\n  if (forceSquare) {\n    // Also calculate parameters for making the image square.\n    size.dstWidth = size.dstHeight = Math.min(size.dstWidth, size.dstHeight);\n    size.srcWidth = size.srcHeight = Math.min(width, height);\n    size.xoffset = ((width - size.srcWidth) / 2) | 0;\n    size.yoffset = ((height - size.srcWidth) / 2) | 0;\n  } else {\n    size.xoffset = size.yoffset = 0;\n    size.srcWidth = width;\n    size.srcHeight = height;\n  }\n  return size;\n}\n\n// Ensure file's extension matches mime content type\nexport function fileNameForMime(fname, mime) {\n  const idx = SUPPORTED_IMAGE_FORMATS.indexOf(mime);\n  if (idx < 0 || !fname) {\n    // Unknown mime or empty name.\n    return fname;\n  }\n  const ext = MIME_EXTENSIONS[idx];\n\n  const at = fname.lastIndexOf('.');\n  if (at >= 0) {\n    fname = fname.substring(0, at);\n  }\n  return fname + '.' + ext;\n}\n\n// Scale uploaded image to fit under certain dimensions and byte size, optionally constraining to a square.\n// On success calls onSuccess callback with the scaled image as Blob.\nexport function imageScaled(fileOrBlob, maxWidth, maxHeight, maxSize, forceSquare, onSuccess, onError) {\n  const img = new Image();\n  img.crossOrigin = 'Anonymous';\n  img.onerror = function(err) {\n    onError(\"Image format unrecognized\");\n  }\n  img.onload = async function() {\n    // Once the image is loaded, the URL is no longer needed.\n    URL.revokeObjectURL(img.src);\n\n    // Calculate the desired image dimensions.\n    const dim = fitImageSize(this.width, this.height, maxWidth, maxHeight, forceSquare);\n    if (!dim) {\n      onError(\"Invalid image\");\n      return;\n    }\n    let canvas = document.createElement('canvas');\n    canvas.width = dim.dstWidth;\n    canvas.height = dim.dstHeight;\n    let ctx = canvas.getContext('2d');\n    ctx.imageSmoothingEnabled = true;\n    ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n      0, 0, dim.dstWidth, dim.dstHeight);\n\n    const mime = SUPPORTED_IMAGE_FORMATS.indexOf(fileOrBlob.type) < 0 ? 'image/jpeg' : fileOrBlob.type;\n    // Generate blob to check size of the image.\n    let blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    if (!blob) {\n      onError(\"Unsupported image format\");\n      return;\n    }\n\n    // Ensure the image is not too large. Shrink the image keeping the aspect ratio.\n    // Do nothing if maxsize is <= 0.\n    while (maxSize > 0 && blob.length > maxSize) {\n      dim.dstWidth = (dim.dstWidth * 0.70710678118) | 0;\n      dim.dstHeight = (dim.dstHeight * 0.70710678118) | 0;\n      canvas.width = dim.dstWidth;\n      canvas.height = dim.dstHeight;\n      ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n        0, 0, dim.dstWidth, dim.dstHeight);\n      blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    }\n\n    canvas = null;\n    onSuccess(blob, mime, dim.dstWidth, dim.dstHeight, fileNameForMime(fileOrBlob.name, mime));\n  };\n  img.src = URL.createObjectURL(fileOrBlob);\n}\n\n// Convert File to base64 string.\nexport function fileToBase64(file, onSuccess) {\n  const reader = new FileReader();\n  reader.addEventListener('load', function() {\n    onSuccess(file.type, reader.result.split(',')[1], file.name);\n  });\n  reader.readAsDataURL(file);\n}\n\n// Convert Blob to base64 string.\nexport function blobToBase64(blob, onSuccess) {\n  const reader = new FileReader();\n  reader.addEventListener('load', function() {\n    onSuccess(blob.type, reader.result.split(',')[1]);\n  });\n  reader.readAsDataURL(blob);\n}\n\n// File pasted from the clipboard. It's either an inline image or a file attachment.\n// FIXME: handle large files out of band.\nexport function filePasted(event, onImageSuccess, onAttachmentSuccess, onError) {\n  var items = (event.clipboardData || event.originalEvent.clipboardData || {}).items;\n  for (var i in items) {\n    var item = items[i];\n    if (item.kind === 'file') {\n      var file = item.getAsFile();\n      if (!file) {\n        console.log(\"Failed to get file object from pasted file item\", item.kind, item.type);\n        continue;\n      }\n      if (file.type && file.type.split('/')[0] == 'image') {\n        // Handle inline image\n        if (file.size > MAX_INBAND_ATTACHMENT_SIZE || SUPPORTED_IMAGE_FORMATS.indexOf(file.type) < 0) {\n          imageFileScaledToBase64(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, false, onImageSuccess, onError);\n        } else {\n          imageFileToBase64(file, onImageSuccess, onError);\n        }\n      } else {\n        // Handle file attachment\n        fileToBase64(file, onAttachmentSuccess, onError)\n      }\n      // Indicate that the pasted data contains a file.\n      return true;\n    }\n  }\n  // No file found.\n  return false;\n}\n\n// Get mime type from data URL header.\nexport function getMimeType(header) {\n  var mime = /^data:(image\\/[-+a-z0-9.]+);base64/.exec(header);\n  return (mime && mime.length > 1) ? mime[1] : null;\n}\n\n// Given length of a binary object in bytes, calculate the length after\n// base64 encoding.\nexport function base64EncodedLen(n) {\n  return Math.floor((n + 2) / 3) * 4;\n}\n\n// Given length of a base64-encoded object, calculate decoded size of the\n// pbject in bytes.\nexport function base64DecodedLen(n) {\n  return Math.floor(n / 4) * 3;\n}\n\n// Re-encode string to standard base64 encoding with padding.\n// The string may be base64-URL encoded without the padding.\nexport function base64ReEncode(str) {\n  if (str) {\n    str = str.replace(/-/g, '+').replace(/_/g, '/');\n    try {\n      str = btoa(atob(str));\n    } catch(err) {\n      console.log(\"Failed to base64 re-encode string.\", err);\n      str = null;\n    }\n  }\n  return str;\n}\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\n\nimport { AVATAR_SIZE, MAX_EXTERN_ATTACHMENT_SIZE } from '../config.js';\nimport { imageScaled, blobToBase64, makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class AvatarUpload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dataUrl: props.avatar\n    };\n\n    this.handleFileUpload = this.handleFileUpload.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.avatar != prevProps.avatar) {\n      this.setState({dataUrl: this.props.avatar})\n    }\n  }\n\n  handleFileUpload(e) {\n    imageScaled(e.target.files[0], AVATAR_SIZE, AVATAR_SIZE, MAX_EXTERN_ATTACHMENT_SIZE, true,\n      // Image successfully scaled and converted.\n      (mime, blob) => {\n        // Convert blob to base64-encoded bits.\n        blobToBase64(blob, (unused, base64bits) => {\n          const du = makeImageUrl({data: base64bits, type: mime});\n          this.setState({dataUrl: du});\n          this.props.onImageChanged(du);\n        });\n      },\n      // Failure\n      (err) => {\n        this.props.onError(err, 'err');\n      });\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  render() {\n    // Randomize id value in case more than one AvatarUpload is shown\n    // at the same time.\n    const randId = 'file-input-avatar-' + (Math.random() + '').substr(2);\n    const className = 'avatar-upload' + (this.props.readOnly ? ' read-only' : '');\n    return (\n      <div className={className}>\n        {this.props.readOnly || !this.state.dataUrl ?\n          null :\n          <a href=\"#\" className=\"clear-avatar\" onClick={(e) => {e.preventDefault(); this.props.onImageChanged(null);}}>\n            <i className=\"material-icons\">clear</i>\n          </a>}\n        {this.state.dataUrl ?\n          <img src={this.state.dataUrl} className=\"preview\" /> :\n          this.props.readOnly && this.props.uid ?\n            <div className=\"avatar-box\">\n              <LetterTile\n                avatar={true}\n                topic={this.props.uid}\n                title={this.props.title} />\n            </div>\n            :\n            <div className=\"blank\">{AVATAR_SIZE}&times;{AVATAR_SIZE}</div>}\n        {this.props.readOnly ? null :\n          <input type=\"file\" id={randId} className=\"inputfile hidden\"\n            accept=\"image/*\" onChange={this.handleFileUpload} />}\n        {this.props.readOnly ? null :\n        <label htmlFor={randId} className=\"round\">\n          <i className=\"material-icons\">file_upload</i>\n        </label>}\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\n/* BEGIN CheckBox: styled checkbox */\nexport default class CheckBox extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange() {\n    this.props.onChange(this.props.name, !this.props.checked);\n  }\n\n  render() {\n    return (\n      this.props.onChange ? (\n        this.props.checked ?\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box</i> :\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box_outline_blank</i>\n        ) : (\n          this.props.checked ?\n            <i className=\"material-icons\">check_box</i> :\n            <i className=\"material-icons\">check_box_outline_blank</i>\n        )\n    );\n  }\n}\n/* END CheckBox */\n","import React from 'react';\n\nconst icon_mapping = {'muted': 'notifications_off', 'banned': 'block'};\n\n/* Contact's labels: [you], or icons [muted], [blocked] */\nexport default class ContactBadges extends React.PureComponent {\n    render() {\n      let badges = null;\n      if (this.props.badges && this.props.badges.length > 0) {\n        badges = [];\n        this.props.badges.map(function(b) {\n          if (b.icon) {\n            badges.push(<i className=\"material-icons as-badge\" key={b.key || b.icon}>{icon_mapping[b.icon]}</i>);\n          } else {\n            const style = 'badge' + (b.color ? ' ' + b.color : '');\n            badges.push(<span className={style} key={b.key || b.name}>{b.name}</span>);\n          }\n        });\n        return <>{badges}</>;\n      }\n      return null;\n    }\n};\n","// Odds and ends\n\nimport Tinode from 'tinode-sdk';\n\n// Make shortcut icon appear with a green dot + show unread count in title.\nexport function updateFavicon(count) {\n  const oldIcon = document.getElementById('shortcut-icon');\n  const head = document.head || document.getElementsByTagName('head')[0];\n  const newIcon = document.createElement('link');\n  newIcon.type = 'image/png';\n  newIcon.id = 'shortcut-icon';\n  newIcon.rel = 'shortcut icon';\n  newIcon.href = 'img/logo32x32' + (count > 0 ? 'a' : '') + '.png';\n  if (oldIcon) {\n    head.removeChild(oldIcon);\n  }\n  head.appendChild(newIcon);\n\n  document.title = (count > 0 ? '('+count+') ' : '') + 'Tinode';\n}\n\n// Create VCard which represents topic 'public' info\nexport function vcard(fn, imageDataUrl) {\n  let card = null;\n\n  if ((fn && fn.trim()) || imageDataUrl) {\n    card = {};\n    if (fn) {\n      card.fn = fn.trim();\n    }\n    if (imageDataUrl) {\n      const dataStart = imageDataUrl.indexOf(',');\n      card.photo = dataStart >= 0 ? {\n        data: imageDataUrl.substring(dataStart+1),\n        type: 'jpg'\n      } : imageDataUrl;\n    }\n  }\n  return card;\n}\n\n// Deep-shallow compare two arrays: shallow compare each element.\nexport function arrayEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (!Array.isArray(a) || !Array.isArray(b)) {\n    return false;\n  }\n\n  // Compare lengths first.\n  if (a.length != b.length) {\n    return false;\n  }\n  // Order of elements is ignored.\n  a.sort();\n  b.sort();\n  for (let i = 0, l = a.length; i < l; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Checks (loosely) if the given string is a phone. If so, returns the phone number in a format\n// as close to E.164 as possible.\nexport function asPhone(val) {\n  val = val.trim();\n  if (/^(?:\\+?(\\d{1,3}))?[- (.]*(\\d{3})[- ).]*(\\d{3})[- .]*(\\d{2})[- .]*(\\d{2})?$/.test(val)) {\n    return val.replace(/[- ().]*/, '');\n  }\n  return null;\n}\n\n// Checks (loosely) if the given string is an email. If so returns the email.\nexport function asEmail(val) {\n  val = val.trim();\n  if (/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(val)) {\n    return val;\n  }\n  return null;\n}\n\n// Checks if URL is a relative url, i.e. has no 'scheme://', including the case of missing scheme '//'.\n// The scheme is expected to be RFC-compliant, e.g. [a-z][a-z0-9+.-]*\n// example.html - ok\n// https:example.com - not ok.\n// http:/example.com - not ok.\n// ' ↲ https://example.com' - not ok. (↲ means carriage return)\nexport function isUrlRelative(url) {\n  return url && !/^\\s*([a-z][a-z0-9+.-]*:|\\/\\/)/im.test(url);\n}\n\n// Ensure URL does not present an XSS risk. Optional allowedSchemes may contain an array of\n// strings with permitted URL schemes, such as ['ftp', 'ftps']; otherwise accept http and https only.\n// If apikey and/or token is defined, it's appended to relative URL.\nexport function sanitizeUrl(url, allowedSchemes) {\n  if (!url) {\n    return null;\n  }\n\n  // Strip control characters and whitespace. They are not valid URL characters anyway.\n  url = url.replace(/[^\\x20-\\x7E]/gmi, '').trim();\n\n  // Relative URLs are safe.\n  // Relative URL does not start with ':', abcd123: or '//'.\n  if (!/^([a-z][a-z0-9+.-]*:|\\/\\/)/i.test(url)) {\n    return url;\n  }\n\n  // Blob URLs are safe.\n  if (/^blob:http/.test(url)) {\n    return url;\n  }\n\n  // Absolute URL. Accept only safe schemes, or no scheme.\n  const schemes = Array.isArray(allowedSchemes) ? allowedSchemes.join('|') : 'http|https';\n  const re = new RegExp('^((' + schemes + '):|//)', 'i');\n  if (!re.test(url)) {\n    return null;\n  }\n\n  return url;\n}\n\n// Ensure URL is suitable for <img src=\"url\"> field: the URL must be a relative URL or\n// have http:, https:, blob: or data: scheme.\n// The relative URL is appended with the API key and/or auth token.\n// In case of data: scheme, the URL must start with a 'data:image/XXXX;base64,'.\nexport function sanitizeImageUrl(url) {\n  if (!url) {\n    return null;\n  }\n\n  const sanitizedUrl = sanitizeUrl(url);\n  if (sanitizedUrl) {\n    return sanitizedUrl;\n  }\n\n  // Is this a data: URL of an image?\n  if (/data:image\\/[a-z0-9.-]+;base64,/i.test(url.trim())) {\n    return url;\n  }\n\n  return null;\n}\n\n// Given message's received status, return name and color of a delivery indicator icon.\nexport function deliveryMarker(received) {\n  switch (received) {\n    case Tinode.MESSAGE_STATUS_SENDING:\n      return { name: 'access_time' }; // watch face\n    case Tinode.MESSAGE_STATUS_FAILED:\n      return { name: 'warning', color: 'amber' }; // yellow icon /!\\\n    case Tinode.MESSAGE_STATUS_SENT:\n      return { name: 'done' }; // checkmark\n    case Tinode.MESSAGE_STATUS_RECEIVED:\n      return { name: 'done_all' }; // double checkmark\n    case Tinode.MESSAGE_STATUS_READ:\n      return { name: 'done_all', color: 'blue' }; // blue double checkmark\n  }\n  return null;\n}\n","// Received/read indicator.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { shortDateFormat } from '../lib/strformat.js';\nimport { deliveryMarker } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  message_sending: {\n    id: 'message_sending',\n    defaultMessage: 'sending...',\n    description: 'Message being sent, in place of time stamp'\n  },\n  message_sending_failed: {\n    id: 'message_sending_failed',\n    defaultMessage: 'failed',\n    description: 'Failed to send message, in place of time stamp'\n  }\n});\n\nclass ReceivedMarker extends React.PureComponent {\n  render() {\n    const {formatMessage} = this.props.intl;\n    let timestamp;\n    if (this.props.received <= Tinode.MESSAGE_STATUS_SENDING) {\n      timestamp = formatMessage(messages.message_sending);\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_FAILED) {\n      timestamp = formatMessage(messages.message_sending_failed);\n    } else {\n      timestamp = shortDateFormat(this.props.timestamp, this.props.intl.locale);\n    }\n\n    const icon = deliveryMarker(this.props.received);\n    const marker = icon ? <i className={'material-icons small ' + icon.color}>{icon.name}</i> : null;\n\n    return (\n      <span className=\"timestamp\">\n        {timestamp}{'\\u00a0'}{marker}\n      </span>\n    );\n  }\n};\n\nexport default injectIntl(ReceivedMarker);\n","// The counter of unread messages in the topic.\nimport React from 'react';\n\nexport default class UnreadBadge extends React.PureComponent {\n  render() {\n    return (this.props.count > 0 ?\n      <span className=\"unread\">{this.props.count > 9 ? \"9+\" : this.props.count}</span>\n      : null);\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\n\nimport ContactBadges from './contact-badges.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\nimport UnreadBadge from './unread-badge.jsx';\n\nimport { Drafty } from 'tinode-sdk';\n\nimport { deliveryMarker } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  drafty_image: {\n    id: 'drafty_image',\n    defaultMessage: 'Picture',\n    description: 'Comment for embedded images in drafty preview'\n  },\n  drafty_form: {\n    id: 'drafty_form',\n    defaultMessage: 'Form: ',\n    description: 'Comment for form in drafty preview'\n  },\n  drafty_attachment: {\n    id: 'drafty_attachment',\n    defaultMessage: 'Attachment',\n    description: 'Comment for attachment in drafty preview'\n  },\n});\n\nclass Contact extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.props.onSelected) {\n      // Index this.props.index is used by GroupManager.\n      this.props.onSelected(this.props.item, this.props.index);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.props.item, y: e.pageY, x: e.pageX });\n  }\n\n  render() {\n    let title = this.props.title;\n    if (!title) {\n      title = <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n        description=\"Title shown when the topic has no name\" /></i>;\n    } else if (title.length > 30) {\n      // FIXME: this is probably wrong for RTL languages.\n      title = title.substring(0, 28) + '…';\n    }\n    const online = this.props.now ? 'online' : 'offline';\n    const avatar = this.props.avatar ? this.props.avatar : true;\n    const badges = this.props.badges ? this.props.badges.slice() : [];\n    const icon_badges = [];\n    if (this.props.acs) {\n      if (this.props.showMode) {\n        badges.push({name: this.props.acs.getMode(), key: 'mode'});\n      }\n      if (this.props.acs.isMuted()) {\n        icon_badges.push({icon: 'muted'});\n      }\n      if (!this.props.acs.isJoiner()) {\n        icon_badges.push({icon: 'banned'});\n      }\n    }\n\n    const subtitle = this.props.preview ?\n      (typeof this.props.preview == 'string' ? this.props.preview :\n        React.createElement(React.Fragment, null, Drafty.format(this.props.preview, draftyFormatter, this))) :\n      this.props.comment;\n\n    const icon = deliveryMarker(this.props.received);\n    const marker = icon ? <i className={'material-icons small space-right ' + icon.color}>{icon.name}</i> : null;\n\n    return (\n      <li className={!this.props.showCheckmark && this.props.selected ? 'selected' : null} onClick={this.handleClick}>\n        <div className=\"avatar-box\">\n          <LetterTile\n            avatar={avatar}\n            title={this.props.title}\n            topic={this.props.item} />\n          {this.props.showOnline ? <span className={online} /> :\n            (this.props.showCheckmark && this.props.selected ?\n            <i className=\"checkmark material-icons\">check_circle</i>\n            : null)}\n        </div>\n        <div className=\"text-box\">\n          <div><span className=\"contact-title\">{title}</span>\n            {this.props.isChannel ? <img src=\"/img/channel.png\" className=\"channel\" alt=\"channel\" /> : null}\n            <UnreadBadge count={this.props.unread} /><ContactBadges badges={icon_badges} />\n          </div>\n          {this.props.showMode ?\n            <span><ContactBadges badges={badges} /></span> :\n            <div className=\"contact-comment\">{marker}{subtitle || '\\u00A0'}</div>}\n        </div>\n        {this.props.showContextMenu ?\n          <span className=\"menuTrigger\">\n            <a href=\"#\" onClick={this.handleContextClick}>\n              <i className=\"material-icons\">expand_more</i>\n            </a>\n          </span> : null}\n      </li>\n    );\n  }\n};\n\n\n// Converts Drafty object into a one-line preview.\nfunction draftyFormatter(style, data, values, key) {\n  let el = Drafty.tagName(style);\n  const attr = { key: key };\n  if (el) {\n    const { formatMessage } = this.props.intl;\n    switch (style) {\n      case 'BR':\n        // Replace new line with a space.\n        el = React.Fragment;\n        values = [' '];\n        break;\n      case 'HL':\n        // Make highlight less prominent in preview.\n        attr.className = 'highlight preview';\n        break;\n      case 'LN':\n        // Disable links in previews.\n        el = 'span';\n        break;\n      case 'IM':\n        // Replace image with '[icon] Image'.\n        el = React.Fragment;\n        values = [<i key=\"im\" className=\"material-icons\">photo</i>, formatMessage(messages.drafty_image)];\n        break;\n      case 'BN':\n        el = 'span';\n        attr.className = 'flat-button faux';\n        break;\n      case 'FM':\n        el = React.Fragment;\n        values = [<i key=\"fm\" className=\"material-icons\">dashboard</i>,\n          formatMessage(messages.drafty_form)].concat(values || []);\n        break;\n      case 'RW':\n        el = React.Fragment;\n        break;\n      case 'EX':\n        el = React.Fragment;\n        values = [<i key=\"ex\" className=\"material-icons\">attachment</i>, formatMessage(messages.drafty_attachment)];\n        break;\n      default:\n        if (el == '_UNKN') {\n          el = React.Fragment;\n          values = [<i key=\"unkn\" className=\"material-icons\">extension</i>];\n        }\n        break;\n    }\n    return React.createElement(el, attr, values);\n  } else {\n    return values;\n  }\n};\n\nexport default injectIntl(Contact);\n","// A panel included into a list of contacts with an action text.\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\n\nclass ContactAction extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.onAction(this.props.action);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <li onClick={this.handleClick} className=\"action\">\n        <div className=\"action-text\">{formatMessage(this.props.title, this.props.values)}</div>\n      </li>\n    );\n  }\n};\n\nexport default injectIntl(ContactAction);\n","// ContactList: component for showing a list of contacts,\n// such as a list of group members in a group chat.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { Drafty } from 'tinode-sdk';\nimport Tinode from 'tinode-sdk';\n\nimport Contact from './contact.jsx';\nimport ContactAction from './contact-action.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nimport { MESSAGE_PREVIEW_LENGTH } from '../config.js';\n\nconst messages = defineMessages({\n  badge_you: {\n    id: 'badge_you',\n    defaultMessage: 'you',\n    description: 'Badge for indicating the current user'\n  },\n  badge_owner: {\n    id: 'badge_owner',\n    defaultMessage: 'owner',\n    description: 'Badge for indicating the owner'\n  }\n});\n\nclass ContactList extends React.Component {\n  render() {\n    const { formatMessage } = this.props.intl;\n    const showCheckmark = Array.isArray(this.props.topicSelected);\n    const contactNodes = [];\n    let contactsCount = 0;\n    if (this.props.contacts && this.props.contacts.length > 0) {\n      this.props.contacts.map((c) => {\n        if (c.action) {\n          // Action item\n          contactNodes.push(\n            <ContactAction\n              title={c.title} action={c.action} values={c.values}\n              key={c.action}\n              onAction={this.props.onAction}\n              />);\n        } else {\n          // Normal contact\n          const key = this.props.showMode ? c.user : (c.topic || c.user);\n          // If filter function is provided, filter out the items\n          // which don't satisfy the condition.\n          if (this.props.filterFunc && this.props.filter) {\n            const filterOn = [key];\n            if (c.private && c.private.comment) {\n              filterOn.push(('' + c.private.comment).toLowerCase());\n            }\n            if (c.public && c.public.fn) {\n              filterOn.push(('' + c.public.fn).toLowerCase());\n            }\n            if (!this.props.filterFunc(this.props.filter, filterOn)) {\n              return;\n            }\n          }\n\n          const isChannel = Tinode.isChannelTopicName(key);\n          const selected = showCheckmark ?\n            (this.props.topicSelected.indexOf(key) > -1) :\n            (this.props.topicSelected === key);\n          const badges = [];\n          if (this.props.showMode) {\n            if (key == this.props.myUserId) {\n              badges.push({name: formatMessage(messages.badge_you), color: 'green'});\n            }\n            if (c.acs && c.acs.isOwner()) {\n              badges.push({name: formatMessage(messages.badge_owner), color: 'blue'});\n            }\n          }\n\n          const comment = Array.isArray(c.private) ?\n            c.private.join(',') : (c.private ? c.private.comment : null);\n          let preview;\n          let deliveryStatus;\n          if (!this.props.showMode && c.latestMessage) {\n            const msg = c.latestMessage();\n            if (msg) {\n              deliveryStatus = msg._status || c.msgStatus(msg, true);\n              preview = typeof msg.content == 'string' ?\n                msg.content.substr(0, MESSAGE_PREVIEW_LENGTH) :\n                Drafty.preview(msg.content, MESSAGE_PREVIEW_LENGTH);\n            }\n          }\n          contactNodes.push(\n            <Contact\n              title={c.public ? c.public.fn : null}\n              avatar={makeImageUrl(c.public ? c.public.photo : null)}\n              comment={comment}\n              preview={preview}\n              received={deliveryStatus}\n              unread={this.props.showUnread ? c.unread : 0}\n              now={c.online && this.props.connected}\n              acs={c.acs}\n              showMode={this.props.showMode}\n              badges={badges}\n              showCheckmark={showCheckmark}\n              selected={selected}\n              showOnline={this.props.showOnline && !isChannel}\n              isChannel={isChannel}\n              onSelected={this.props.onTopicSelected}\n              showContextMenu={this.props.showContextMenu}\n              item={key}\n              index={contactNodes.length}\n              key={key} />\n          );\n          contactsCount ++;\n        }\n      }, this);\n    }\n\n    return (\n      <div className={this.props.noScroll ? null : \"scrollable-panel\"}>\n        {contactsCount == 0 ?\n          <div className=\"center-medium-text\"\n            dangerouslySetInnerHTML={{__html: this.props.emptyListMessage}} />\n          :\n          null\n        }\n        {contactNodes.length > 0 ?\n          <ul className=\"contact-box\">\n            {contactNodes}\n          </ul>\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ContactList);\n","// The X menu to be displayed in title bars.\nimport React from 'react';\n\nexport default class MenuCancel extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n        <i className=\"material-icons\">close</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nimport MenuCancel from './menu-cancel.jsx';\n\nexport default class ErrorPanel extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      show: false,\n    };\n\n    this.hide = this.hide.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.level !== this.props.level) {\n      this.setState({\n        show: !(!this.props.level)\n      });\n    }\n  }\n\n  hide() {\n    this.setState({show: false});\n    if (this.props.onClearError) {\n      this.props.onClearError();\n    }\n  }\n\n  render() {\n    const icons = {err: 'error', warn: 'warning', info: 'info'}\n    const level = icons[this.props.level] || '';\n    const className = 'info-box ' + level;\n    return (\n      <div className={className}>\n        <div className=\"icon\"><i className=\"material-icons\">{level}</i></div>\n        <span>\n          {this.props.text}\n          {this.props.action ?\n            <>\n              &#32;<a href=\"#\"\n                style={{ whiteSpace: 'nowrap' }}\n                onClick={(e) => {e.preventDefault(); this.props.action();}}>\n                {this.props.actionText}\n              </a>\n            </>\n          : null}\n        </span>\n        <div className=\"cancel\"><MenuCancel onCancel={this.hide} /></div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\n\nexport default class Chip extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel(this.props.topic, this.props.index);\n  }\n\n  render() {\n    const title = this.props.title || this.props.topic;\n    const className = this.props.invalid ? 'chip invalid' : 'chip';\n    return (\n      <div className={className}>\n        {this.props.noAvatar ?\n          <span className=\"spacer\" /> :\n          <div className=\"avatar-box\">\n            <LetterTile\n              avatar={this.props.avatar || true}\n              topic={this.props.topic}\n              title={this.props.title} />\n          </div>\n        }\n        <span>{title}</span>\n        {this.props.onCancel && !this.props.required ?\n          <a href=\"#\" onClick={this.handleCancel} >&times;</a>\n          : <span className=\"spacer\" />}\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport Chip from './chip.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n/* BEGIN ChipInput: group membership widget */\nexport default class ChipInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = ChipInput.deriveStateFromProps(props);\n    this.state.input = '';\n    this.state.focused = false;\n\n    this.handleTextInput = this.handleTextInput.bind(this);\n    this.removeChipAt = this.removeChipAt.bind(this);\n    this.handleChipCancel = this.handleChipCancel.bind(this);\n    this.handleFocusGained = this.handleFocusGained.bind(this);\n    this.handleFocusLost = this.handleFocusLost.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  static deriveStateFromProps(props) {\n    return {\n      placeholder: props.chips ? '' : props.prompt,\n      sortedChips: ChipInput.sortChips(props.chips, props.staticMembers),\n      chipIndex: ChipInput.indexChips(props.chips)\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chips != this.props.chips ||\n      prevProps.staticMembers != this.props.staticMembers ||\n      prevProps.prompt != this.props.prompt) {\n      this.setState(ChipInput.deriveStateFromProps(this.props));\n    }\n    if (!prevState || this.props.chips.length > prevState.sortedChips.length) {\n      this.setState({input: ''});\n    }\n  }\n\n  // Map chip index to user name\n  static indexChips(chips) {\n    const index = {};\n    let count = 0;\n    chips.map((item) => {\n      index[item.user] = count;\n      count ++;\n    });\n    return index;\n  }\n\n  // Have non-removable chips appear before all other chips.\n  static sortChips(chips, keep) {\n    const required = [];\n    const normal = [];\n    chips.map((item) => {\n      if (keep && keep.includes(item.user)) {\n        required.push(item);\n      } else {\n        normal.push(item);\n      }\n    });\n    return required.concat(normal);\n  }\n\n  handleTextInput(e) {\n    this.setState({input: e.target.value});\n    if (this.props.filterFunc) {\n      this.props.filterFunc(e.target.value);\n    }\n  }\n\n  removeChipAt(idx) {\n    const removed = this.state.sortedChips[idx];\n    this.props.onChipRemoved(removed.user, this.state.chipIndex[removed.user]);\n  }\n\n  handleChipCancel(item, idx) {\n    this.removeChipAt(idx);\n  }\n\n  handleFocusGained() {\n    this.setState({focused: true});\n  }\n\n  handleFocusLost() {\n    this.setState({focused: false});\n    if (this.props.onFocusLost) {\n      this.props.onFocusLost(this.state.input);\n    }\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Backspace') {\n      if (this.state.input.length == 0 && this.state.sortedChips.length > 0) {\n        const at = this.state.sortedChips.length - 1;\n        if (this.state.sortedChips[at].user !== this.props.staticMembers) {\n          this.removeChipAt(at);\n        }\n      }\n    } else if (e.key === 'Enter') {\n      if (this.props.onEnter) {\n        this.props.onEnter(this.state.input);\n      }\n    } else if (e.key === 'Escape') {\n      if (this.props.onCancel) {\n        this.props.onCancel();\n      }\n    }\n  }\n\n  render() {\n    const chips = [];\n    let count = 0;\n    const staticMembers = this.props.staticMembers || [];\n    this.state.sortedChips.map((item) => {\n      chips.push(\n        <Chip\n          onCancel={this.handleChipCancel}\n          avatar={makeImageUrl(item.public ? item.public.photo : null)}\n          title={item.public ? item.public.fn : undefined}\n          noAvatar={this.props.avatarDisabled}\n          topic={item.user}\n          required={staticMembers.includes(item.user)}\n          invalid={item.invalid}\n          index={count}\n          key={item.user} />\n      );\n      count++;\n    });\n    const className = \"chip-input\" + (this.state.focused ? ' focused' : '');\n    return (\n      <div className={className}>\n        {chips}\n        <input type=\"text\"\n          placeholder={this.state.placeholder}\n          onChange={this.handleTextInput}\n          onFocus={this.handleFocusGained}\n          onBlur={this.handleFocusLost}\n          onKeyDown={this.handleKeyDown}\n          value={this.state.input}\n          autoFocus />\n      </div>\n    );\n  }\n};\n","// GroupMembers: control for managing a list of group members.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\nimport ContactList from './contact-list.jsx';\n\nconst messages = defineMessages({\n  no_contacts: {\n    id: 'no_contacts',\n    defaultMessage: 'You have no contacts :-(',\n    description: 'Shown in ContactsView when the user has no contacts'\n  },\n  contacts_not_found_short: {\n    id: 'contacts_not_found_short',\n    defaultMessage: \"No contacts match ''{query}''\",\n    description: 'Shown in ContactsView when search returned no results'\n  }\n});\n\nclass GroupManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Array of topic members\n      members: props.members,\n      index: GroupManager.indexMembers(props.members),\n      staticMembers: GroupManager.staticMembers(props.members, props.keepInitialMembers, props.requiredMember),\n      contactFilter: '',\n      noContactsMessage: props.intl.formatMessage(messages.no_contacts),\n      selectedContacts: GroupManager.selectedContacts(props.members)\n    };\n\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleMemberRemoved = this.handleMemberRemoved.bind(this);\n    this.handleContactFilter = this.handleContactFilter.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static indexMembers(members) {\n    let index = {};\n    members.map((m) => {\n      index[m.user] = {delta: 0, present: true}; // Delta: 0 unchanged, +1 added, -1 removed\n    });\n    return index;\n  }\n\n  static staticMembers(members, keepInitial, requiredMember) {\n    let stat = [];\n    members.map((m) => {\n      if (keepInitial || m.user == requiredMember) {\n        stat.push(m.user);\n      }\n    });\n    return stat;\n  }\n\n  static selectedContacts(members) {\n    let sel = [];\n    members.map((m) => {\n      sel.push(m.user);\n    });\n    return sel;\n  }\n\n  handleContactSelected(userId, index) {\n    let status = this.state.index[userId];\n    if (status) {\n      if (status.present) {\n        // Prevent duplicate members\n        return;\n      }\n      status.delta += 1;\n      status.present = true;\n    } else {\n      status = {delta: 1, present: true};\n    }\n\n    let m = this.state.members.slice();\n    m.push(this.props.contacts[index]);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleMemberRemoved(userId, index) {\n    const status = this.state.index[userId];\n    if (!status || !status.present) {\n      return;\n    }\n    status.present = false;\n    status.delta -= 1;\n\n    let m = this.state.members.slice();\n    m.splice(index, 1);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleContactFilter(val) {\n    const {formatMessage} = this.props.intl;\n    const msg = !val ?\n      formatMessage(messages.no_contacts) :\n      formatMessage(messages.contacts_not_found_short, {query: val});\n\n    this.setState({contactFilter: val, noContactsMessage: msg});\n  }\n\n  static doContactFiltering(filter, values) {\n    if (filter) {\n      for (let i=0; i<values.length; i++) {\n        if (values[i].indexOf(filter) >= 0) {\n          return true;\n        }\n      }\n      return false;\n    }\n    return true;\n  }\n\n  handleSubmit() {\n    var instance = this;\n    var members = [];\n    var added = [];\n    var removed = [];\n\n    var keys = Object.keys(this.state.index);\n    keys.map(function(k) {\n      if (instance.state.index[k].present) {\n        members.push(k);\n      }\n\n      if (instance.state.index[k].delta > 0) {\n        added.push(k);\n      } else if (instance.state.index[k].delta < 0) {\n        removed.push(k);\n      }\n    });\n    this.props.onSubmit(members, added, removed);\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <div id=\"group-manager\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_group_members\" defaultMessage=\"Group Members\" description=\"Section title\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ChipInput\n            chips={this.state.members}\n            staticMembers={this.state.staticMembers}\n            prompt=\"add members\"\n            filterFunc={this.handleContactFilter}\n            onChipRemoved={this.handleMemberRemoved} />\n        </div>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_all_contacts\" defaultMessage=\"All Contacts\"\n              description=\"Section title [All Contacts]\" />\n          </label>\n        </div>\n        <ContactList\n          contacts={this.props.contacts}\n          myUserId={this.props.myUserId}\n          topicSelected={this.state.selectedContacts}\n          filter={this.state.contactFilter}\n          filterFunc={GroupManager.doContactFiltering}\n          emptyListMessage={this.state.noContactsMessage}\n          showOnline={false}\n          showUnread={false}\n          onTopicSelected={this.handleContactSelected} />\n        <div id=\"group-manager-buttons\" className=\"panel-form-row\">\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n          <button className=\"secondary\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(GroupManager);\n","// Password with a visiblity toggle.\nimport React from 'react';\n\nexport default class VisiblePassword extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: this.props.value,\n      visible: false\n    };\n\n    this.handleVisibility = this.handleVisibility.bind(this);\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n    if (this.props.onChange) {\n      this.props.onChange(e);\n    }\n  }\n\n  handleVisibility(e) {\n    e.preventDefault();\n    this.setState({visible: !this.state.visible});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode == 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, visible: false});\n      if (this.props.onFinished) {\n        this.props.onFinished();\n      }\n    } else if (e.keyCode == 13) {\n      // Enter pressed\n      this.handleEditingFinished();\n    }\n  }\n\n  handleEditingFinished(e) {\n    if (e) {\n      let currentTarget = e.currentTarget;\n      setTimeout(() => {\n        if (!currentTarget.contains(document.activeElement)) {\n          if (this.props.onFinished) {\n            this.props.onFinished(this.state.value);\n          }\n        }\n      }, 0);\n    } else if (this.props.onFinished) {\n      this.props.onFinished(this.state.value.trim());\n    }\n  }\n\n  render() {\n    return (\n      <div tabIndex=\"-1\" className=\"group-focus\"\n        onBlur={this.handleEditingFinished}>\n        <input className=\"with-visibility\"\n          type={this.state.visible ? \"text\" : \"password\"}\n          value={this.state.value}\n          placeholder={this.props.placeholder}\n          required={this.props.required ? 'required' : ''}\n          autoFocus={this.props.autoFocus ? 'autoFocus' : ''}\n          autoComplete={this.props.autoComplete}\n          onChange={this.handeTextChange}\n          onKeyDown={this.handleKeyDown} />\n        <span onClick={this.handleVisibility}>\n          <i className=\"material-icons clickable light-gray\">\n            {this.state.visible ? 'visibility' : 'visibility_off'}\n          </i>\n        </span>\n      </div>\n    );\n  }\n}\n","// In-place text editor. Shows text with an icon which toggles it into an input field.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport VisiblePassword from './visible-password.jsx';\n\nexport default class InPlaceEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      active: props.active,\n      initialValue: props.value || '',\n      value: props.value || ''\n    };\n\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleStartEditing = this.handleStartEditing.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n    this.handlePasswordFinished = this.handlePasswordFinished.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // If text has changed while in read mode, update text and discard changes.\n    // Ignore update if in edit mode.\n    const newValue = this.props.value || '';\n    if (prevState.initialValue != newValue && !prevState.active) {\n      this.setState({\n        initialValue: newValue,\n        value: newValue\n      });\n    }\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, active: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleEditingFinished(e);\n    }\n  }\n\n  handleStartEditing() {\n    if (!this.props.readOnly) {\n      ReactDOM.findDOMNode(this).focus();\n      this.setState({active: true});\n    }\n  }\n\n  handleEditingFinished(event) {\n    if (this.props.required && !event.target.checkValidity()) {\n      // Empty input\n      this.setState({value: this.props.value, active: false});\n      return;\n    }\n    this.setState({active: false});\n    let value = this.state.value.trim();\n    if ((value || this.props.value) && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  handlePasswordFinished(value) {\n    this.setState({active: false});\n    if (value && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  render() {\n    if (this.state.active) {\n      var fieldType = this.props.type || 'text';\n    } else {\n      var spanText = this.props.type == 'password' ? '••••••••' : this.state.value;\n      var spanClass = 'in-place-edit' +\n        (this.props.readOnly ? ' disabled' : '');\n      if (!spanText) {\n        spanText = this.props.placeholder;\n        spanClass += ' placeholder';\n      }\n      if (spanText.length > 20) {\n        // FIXME: this is wrong for RTL languages.\n        spanText = spanText.substring(0, 19) + '...';\n      }\n    }\n    return (\n      this.state.active ?\n        (fieldType == 'password' ?\n          <VisiblePassword\n            value={this.state.value}\n            placeholder={this.props.placeholder}\n            required={this.props.required ? 'required' : ''}\n            autoComplete={this.props.autoComplete}\n            autoFocus={true}\n            onFinished={this.handlePasswordFinished}/>\n          :\n          <input type={fieldType}\n            value={this.state.value}\n            placeholder={this.props.placeholder}\n            required={this.props.required ? 'required' : ''}\n            autoComplete={this.props.autoComplete}\n            autoFocus\n            onChange={this.handeTextChange}\n            onKeyDown={this.handleKeyDown}\n            onBlur={this.handleEditingFinished} />\n        )\n        :\n        <span className={spanClass} onClick={this.handleStartEditing}>\n          <span className=\"content\">{spanText}</span>\n        </span>\n    );\n  }\n};\n","// Toggle [Title text >] -> [Title text v]\n\nimport React from 'react';\n\nexport default class MoreButton extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: props.open\n    };\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n\n  handleToggle() {\n    const open = !this.state.open;\n    this.setState({open: open});\n    if (this.props.onToggle) {\n      this.props.onToggle(open);\n    }\n  }\n\n  render() {\n    return (<label className=\"small clean-clickable\" onClick={this.handleToggle}>{this.props.title}...\n      {this.state.open ? <i className=\"material-icons\">expand_more</i> :\n        <i className=\"material-icons\">chevron_right</i>}\n      </label>);\n  }\n}\n","// PermissionsEditor: Component for editing permissions\n// <PermissionsEditor mode=\"JWROD\" skip=\"O\" onChange={this.handleCheckboxTest} />\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport CheckBox from './checkbox.jsx';\nimport Contact from './contact.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n// Translatable permission names.\nconst messages = defineMessages({\n  joiner: {\n    id: 'permission_join',\n    defaultMessage: \"Join ({val})\",\n    description: 'Name of J permission'\n  },\n  reader: {\n    id: 'permission_read',\n    defaultMessage: \"Read ({val})\",\n    description: 'Name of R permission'\n  },\n  writer: {\n    id: 'permission_write',\n    defaultMessage: \"Write ({val})\",\n    description: 'Name of W permission'\n  },\n  preser: {\n    id: 'permission_pres',\n    defaultMessage: \"Get notified ({val})\",\n    description: 'Name of P permission'\n  },\n  approver: {\n    id: 'permission_admin',\n    defaultMessage: \"Approve ({val})\",\n    description: 'Name of A permission'\n  },\n  sharer: {\n    id: 'permission_share',\n    defaultMessage: \"Share ({val})\",\n    description: 'Name of S permission'\n  },\n  deleter: {\n    id: 'permission_delete',\n    defaultMessage: \"Delete ({val})\",\n    description: 'Name of D permission'\n  },\n  owner: {\n    id: 'permission_owner',\n    defaultMessage: \"Owner ({val})\",\n    description: 'Name of O permission'\n  }\n});\n\nclass PermissionsEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mode: (props.mode || '').replace('N', '')\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(val) {\n    let mode = this.state.mode;\n    let idx = mode.indexOf(val);\n    if (idx == -1) {\n      mode += val;\n    } else {\n      mode = mode.replace(val, '');\n    }\n    this.setState({mode: mode});\n  }\n\n  handleSubmit() {\n    // Normalize string, otherwise cannot check if mode has changed.\n    var mode = (this.state.mode || 'N').split('').sort().join('');\n    var before = (this.props.mode || 'N').split('').sort().join('')\n    if (mode !== before) {\n      this.props.onSubmit(mode);\n    } else {\n      this.props.onCancel();\n    }\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const all = 'JRWPASDO';\n    const names = {\n      'J': formatMessage(messages.joiner, {val: 'J'}),\n      'R': formatMessage(messages.reader, {val: 'R'}),\n      'W': formatMessage(messages.writer, {val: 'W'}),\n      'P': formatMessage(messages.preser, {val: 'P'}),\n      'A': formatMessage(messages.approver, {val: 'A'}),\n      'S': formatMessage(messages.sharer, {val: 'S'}),\n      'D': formatMessage(messages.deleter, {val: 'D'}),\n      'O': formatMessage(messages.owner, {val: 'O'})\n    };\n\n    let skip = this.props.skip || '';\n    let mode = this.state.mode;\n    let compare = (this.props.compare || '').replace('N', '');\n    let items = [];\n    for (let i=0; i<all.length; i++) {\n      let c = all.charAt(i);\n      if (skip.indexOf(c) >= 0 && mode.indexOf(c) < 0) {\n        // Permission is marked as inactive: hide unchecked permissions, disable checked permissions\n        continue;\n      }\n      items.push(\n        <tr key={c}>\n          <td>{names[c]}</td>\n          <td className=\"checkbox\">{skip.indexOf(c) < 0 ?\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} onChange={this.handleChange}/>\n            :\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} />\n          }</td>{this.props.compare ? <td className=\"checkbox\">\n            <CheckBox name={c} checked={(compare.indexOf(c) >= 0)}/>\n          </td> : null}\n        </tr>\n      );\n    }\n\n    return (\n      <div className=\"panel-form-column\">\n        {this.props.userTitle ?\n          <ul className=\"contact-box\"><Contact\n            item={this.props.item}\n            title={this.props.userTitle}\n            avatar={makeImageUrl(this.props.userAvatar ? this.props.userAvatar : null)} /></ul> : null}\n        <label className=\"small\"><FormattedMessage id=\"title_permissions\"\n          defaultMessage=\"Permissions\" description=\"Section title\"/></label>\n        <table className=\"permission-editor\">\n        {this.props.compare ?\n          <thead><tr>\n            <th></th><th>{this.props.modeTitle}</th>\n            <th>{this.props.compareTitle}</th>\n          </tr></thead> :\n          null}\n        <tbody>\n          {items}\n        </tbody></table>\n        <br />\n        <div className=\"dialog-buttons\">\n          <button className=\"outline\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(PermissionsEditor);\n","// TagManager: edit topic or user tags.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\n\nimport { MAX_TAG_COUNT, MAX_TAG_LENGTH, MIN_TAG_LENGTH } from '../config.js';\nimport { arrayEqual } from '../lib/utils.js';\n\nexport default class TagManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tags: this.props.tags,\n      tagInput: '',\n      activated: this.props.activated\n    };\n\n    this.handleTagInput = this.handleTagInput.bind(this);\n    this.handleAddTag = this.handleAddTag.bind(this);\n    this.handleRemoveTag = this.handleRemoveTag.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (!arrayEqual(nextProps.tags, prevState.tags) && !prevState.activated) {\n      return {tags: nextProps.tags};\n    }\n    return null;\n  }\n\n  handleTagInput(text) {\n    this.setState({tagInput: text});\n    if (text.length > 0) {\n      const last = text[text.length-1];\n      if (text[0] == '\"') {\n        // This is a quoted string.\n        if (text.length > 1 && last == '\"') {\n          this.handleAddTag(text.substring(1, text.length-1));\n        }\n      } else if (last == ',' || last == ' ' || last == ';' || last == '\"') {\n        // User entered ',', ' ' or ';'\n        this.handleAddTag(text.substring(0, text.length-1).trim());\n      }\n    }\n  }\n\n  handleAddTag(tag) {\n    const maxTagCount = this.props.tinode.getServerLimit('maxTagCount', MAX_TAG_COUNT);\n\n    if (tag.length > 0 && this.state.tags.length < maxTagCount) {\n      const tags = this.state.tags.slice(0);\n      tags.push(tag);\n\n      this.setState({tags: tags, tagInput: ''});\n      if (this.props.onTagsChanged) {\n        this.props.onTagsChanged(tags);\n      }\n      return tags;\n    }\n    return this.state.tags;\n  }\n\n  handleRemoveTag(tag, index) {\n    const tags = this.state.tags.slice(0);\n    tags.splice(index, 1);\n    this.setState({tags: tags});\n    if (this.props.onTagsChanged) {\n      this.props.onTagsChanged(tags);\n    }\n  }\n\n  handleSubmit() {\n    // Add unprocessed input to tags, submit the list.\n    this.props.onSubmit(this.handleAddTag(this.state.tagInput.trim()));\n    this.setState({activated: false, tags: this.props.tags});\n  }\n\n  handleCancel() {\n    this.setState({activated: false, tagInput: '', tags: this.props.tags});\n    if (this.props.onCancel) {\n      this.props.onCancel();\n    }\n  }\n\n  render() {\n    const minTagLength = this.props.tinode.getServerLimit('minTagLength', MIN_TAG_LENGTH);\n    const maxTagLength = this.props.tinode.getServerLimit('maxTagLength', MAX_TAG_LENGTH);\n\n    let tags = [];\n    if (this.state.activated) {\n      this.state.tags.map((tag) => {\n        tags.push({user: tag, invalid: (tag.length < minTagLength || tag.length > maxTagLength)});\n      });\n    } else {\n      this.state.tags.map((tag) => {\n        tags.push(<span className=\"badge\" key={tags.length}>{tag}</span>);\n      });\n      if (tags.length == 0) {\n        tags = (\n          <i>\n            <FormattedMessage id=\"tags_not_found\" defaultMessage=\"No tags defined. Add some.\" description=\"\" />\n          </i>\n        );\n      }\n    }\n    return (\n      <div className=\"panel-form-column\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">{this.props.title}</label>\n        </div>\n        {this.state.activated ?\n        <div>\n          <FormattedMessage id=\"tags_editor_no_tags\" defaultMessage=\"Add some tags\"\n            description=\"Tag editor prompt when no tags are found.\">{\n            (add_tags_prompt) => <ChipInput\n              chips={tags}\n              avatarDisabled={true}\n              prompt={add_tags_prompt}\n              onEnter={this.handleAddTag}\n              onFocusLost={this.handleAddTag}\n              onCancel={this.handleCancel}\n              onChipRemoved={this.handleRemoveTag}\n              filterFunc={this.handleTagInput} />\n          }</FormattedMessage>\n          {this.props.onSubmit || this.props.onCancel ?\n            <div id=\"tag-manager-buttons\" className=\"dialog-buttons panel-form-row\">\n              <button className=\"outline\" onClick={this.handleCancel}>\n                <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n              </button>\n              <button className=\"primary\" onClick={this.handleSubmit}>\n                <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n              </button>\n            </div>\n          : null}\n        </div>\n        :\n        <div className=\"quoted\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.setState({activated: true});}}>\n            <i className=\"material-icons\">edit</i> &nbsp;<FormattedMessage id=\"title_manage_tags\" defaultMessage=\"Manage\"\n              description=\"Section title for the list of tags\" />\n          </a>\n          <>{tags}</>\n        </div>\n      }\n      </div>\n    );\n  }\n};\n","// InfoView: panel with topic/user info.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport ContactList from '../widgets/contact-list.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupManager from '../widgets/group-manager.jsx';\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport MenuCancel from '../widgets/menu-cancel.jsx';\nimport MoreButton from '../widgets/more-button.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\nimport TagManager from '../widgets/tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH, NO_ACCESS_MODE } from '../config.js';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, vcard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  requested: {\n    id: 'requested_permissions',\n    defaultMessage: 'Requested',\n    description: 'Title for permissions'\n  },\n  granted: {\n    id: 'granted_permissions',\n    defaultMessage: 'Granted',\n    description: 'Title for permissions'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n  other_user: {\n    id: 'label_other_user',\n    defaultMessage: 'Other',\n    description: 'Label for the other user when the user is unnamed'\n  },\n  clear_messages: {\n    id: 'action_clear_messages',\n    defaultMessage: 'Clear Messages',\n    description: 'Flat button [Clear Messages] (soft-delete messages)'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n  delete_messages: {\n    id: 'action_delete_messages',\n    defaultMessage: 'Clear Messages for All',\n    description: 'Flat button [Clear for All] (hard-delete all messages)'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  leave_chat: {\n    id: 'action_leave_chat',\n    defaultMessage: 'Leave Conversation',\n    description: 'Flat button [Leave Conversation]'\n  },\n  leave_chat_warning: {\n    id: 'leave_chat_warning',\n    defaultMessage: 'Are you sure you want to leave this conversation?',\n    description: 'Alert dialog warning when unsubscribing from a chat.'\n  },\n  block_contact: {\n    id: 'action_block_contact',\n    defaultMessage: \"Block Contact\",\n    description: \"Flat button [Block Contact]\"\n  },\n  block_contact_warning: {\n    id: 'block_contact_warning',\n    defaultMessage: 'Are you sure you want to block this contact?',\n    description: 'Alert dialog warning when blocking a contact.'\n  },\n  report_chat: {\n    id: 'action_report_chat',\n    defaultMessage: 'Report Conversation',\n    description: 'Flat button [Report Group]'\n  },\n  report_chat_warning: {\n    id: 'report_chat_warning',\n    defaultMessage: 'Are you sure you want to block and report this conversation?',\n    description: 'Alert dialog warning when reporting a conversation for abuse'\n  },\n});\n\nclass InfoView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      topic: null,\n      owner: false,\n      admin: false,\n      sharer: false,\n      deleter: false,\n      muted: false,\n      address: null,\n      groupTopic: undefined,\n      channel: undefined,\n      fullName: undefined,\n      avatar: null,\n      private: null,\n      selectedContact: null,\n      access: null,\n      modeGiven: null,\n      modeWant: null,\n      modeGiven2: null, // P2P topic, the other user mode given\n      modeWant2: null,  // P2P topic, the other user mode want\n      auth: null,\n      anon: null,\n      contactList: [],\n      tags: [],\n      showMemberPanel: false,\n      showPermissionEditorFor: undefined,\n      moreInfoExpanded: false,\n      previousMetaDesc: undefined,\n      previousSubsUpdated: undefined,\n      previousTagsUpdated: undefined\n    };\n\n    this.resetSubs = this.resetSubs.bind(this);\n    this.resetDesc = this.resetDesc.bind(this);\n    this.onMetaDesc = this.onMetaDesc.bind(this);\n    this.onSubsUpdated = this.onSubsUpdated.bind(this);\n    this.onTagsUpdated = this.onTagsUpdated.bind(this);\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\n    this.handlePrivateUpdate = this.handlePrivateUpdate.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleMuted = this.handleMuted.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handleShowAddMembers = this.handleShowAddMembers.bind(this);\n    this.handleHideAddMembers = this.handleHideAddMembers.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleDeleteMessages = this.handleDeleteMessages.bind(this);\n    this.handleLeave = this.handleLeave.bind(this);\n    this.handleBlock = this.handleBlock.bind(this);\n    this.handleReport = this.handleReport.bind(this);\n    this.handleMemberSelected = this.handleMemberSelected.bind(this);\n    this.handleMoreInfo = this.handleMoreInfo.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.handleContextMenu = this.handleContextMenu.bind(this);\n  }\n\n  // No need to separately handle component mount.\n  componentDidUpdate(props) {\n    const topic = this.props.tinode.getTopic(props.topic);\n    if (!topic) {\n      return;\n    }\n\n    if (this.onMetaDesc != topic.onMetaDesc) {\n      this.previousMetaDesc = topic.onMetaDesc;\n      topic.onMetaDesc = this.onMetaDesc;\n\n      this.previousSubsUpdated = topic.onSubsUpdated;\n      topic.onSubsUpdated = this.onSubsUpdated;\n\n      if (topic.getType() == 'grp') {\n        this.previousTagsUpdated = topic.onTagsUpdated;\n        topic.onTagsUpdated = this.onTagsUpdated;\n      } else {\n        this.previousTagsUpdated = undefined;\n      }\n    }\n\n    if (this.state.topic != props.topic) {\n      this.setState({topic: props.topic});\n      this.resetDesc(topic, props);\n      this.resetSubs(topic, props);\n    }\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.setState({topic: null});\n    topic.onMetaDesc = this.previousMetaDesc;\n    topic.onSubsUpdated = this.previousSubsUpdated;\n    topic.onTagsUpdated = this.previousTagsUpdated;\n  }\n\n  resetSubs(topic, props) {\n    const newState = {contactList: []};\n    if (topic.getType() == 'p2p') {\n      // Fetch the other party in the p2p conversation.\n      // Topic may not be ready yet, so check if user is found.\n      const user2 = topic.subscriber(props.topic);\n      if (user2) {\n        newState.modeGiven2 = user2.acs.getGiven();\n        newState.modeWant2 = user2.acs.getWant();\n      } else {\n        newState.modeGiven2 = NO_ACCESS_MODE;\n        newState.modeWant2 = NO_ACCESS_MODE;\n      }\n    } else {\n      topic.subscribers((sub) => {\n        newState.contactList.push(sub);\n      }, this);\n    }\n\n    this.setState(newState);\n  }\n\n  resetDesc(topic, props) {\n    const defacs = topic.getDefaultAccess() || {};\n    const acs = topic.getAccessMode();\n\n    this.setState({\n      owner: acs && acs.isOwner(),\n      admin: acs && acs.isAdmin(),\n      sharer: acs && acs.isSharer(),\n      deleter: acs && acs.isDeleter(),\n      muted: acs && acs.isMuted(),\n\n      fullName: topic.public ? topic.public.fn : undefined,\n      avatar: makeImageUrl(topic.public ? topic.public.photo : null),\n      private: topic.private ? topic.private.comment : null,\n      address: topic.name,\n      groupTopic: topic.isGroupType(),\n      channel: topic.isChannelType(),\n      showMemberPanel: false,\n      access: acs ? acs.getMode() : undefined,\n      modeGiven: acs ? acs.getGiven() : undefined,\n      modeWant: acs ? acs.getWant() : undefined,\n      auth: defacs.auth,\n      anon: defacs.anon\n    });\n\n    if (topic.getType() == 'grp' && acs && acs.isOwner()) {\n      // Requesting tags: owner is editing the topic.\n      topic.getMeta(topic.startMetaQuery().withTags().build());\n    }\n  }\n\n  onMetaDesc(desc) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetDesc(topic, this.props);\n\n    if (this.previousMetaDesc && this.previousMetaDesc != this.onMetaDesc) {\n      this.previousMetaDesc(desc);\n    }\n  }\n\n  onSubsUpdated(subs) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetSubs(topic, this.props);\n\n    if (this.previousSubsUpdated && this.previousSubsUpdated != this.onSubsUpdated) {\n      this.previousSubsUpdated(subs);\n    }\n  }\n\n  onTagsUpdated(tags) {\n    this.setState({tags: tags});\n\n    if (this.previousTagsUpdated && this.previousTagsUpdated != this.onTagsUpdated) {\n      this.previousTagsUpdated();\n    }\n  }\n\n  handleFullNameUpdate(fn) {\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.fullName !== fn) {\n      this.setState({fullName: fn});\n      this.props.onTopicDescUpdate(this.props.topic, vcard(fn, null), null);\n    }\n  }\n\n  handlePrivateUpdate(comment) {\n    comment = comment.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.private !== comment) {\n      this.setState({private: comment});\n      this.props.onTopicDescUpdate(this.props.topic, null, comment || Tinode.DEL_CHAR);\n    }\n  }\n\n  handleImageChanged(img) {\n    this.setState({avatar: img});\n    this.props.onTopicDescUpdate(this.props.topic, vcard(null, img || Tinode.DEL_CHAR), null);\n  }\n\n  handleMuted(ignored, checked) {\n    this.setState({muted: checked});\n    this.props.onChangePermissions(this.props.topic, checked ? '-P' : '+P');\n  }\n\n  handlePermissionsChanged(perm) {\n    switch (this.state.showPermissionEditorFor) {\n      case 'auth':\n        this.props.onTopicDescUpdate(this.props.topic, null, null, {auth: perm});\n        break;\n      case 'anon':\n        this.props.onTopicDescUpdate(this.props.topic, null, null, {anon: perm});\n        break;\n      case 'mode':\n      case 'want':\n        this.props.onChangePermissions(this.props.topic, perm);\n        break;\n      case 'given':\n        this.props.onChangePermissions(this.props.topic, perm, this.props.topic);\n        break;\n      case 'user':\n        this.props.onChangePermissions(this.props.topic, perm, this.state.userPermissionsEdited);\n        break;\n    }\n\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handleLaunchPermissionsEditor(which, uid) {\n    const {formatMessage} = this.props.intl;\n    let toEdit, toCompare, toSkip, titleEdit, titleCompare, userTitle, userAvatar;\n    switch (which) {\n      case 'mode':\n        toEdit = this.state.access;\n        break;\n      case 'want':\n        toEdit = this.state.modeWant;\n        toCompare = this.state.modeGiven;\n        if (this.state.owner) {\n          // Don't allow owner to unset 'O' permission. All other permissions are OK.\n          toSkip = 'O';\n        } else {\n          // Allow accepting any of 'ASDO' permissions but don't allow asking for them.\n          toSkip = Tinode.AccessMode.encode(Tinode.AccessMode.diff('ASDO', this.state.modeGiven));\n          if (this.state.channel) {\n            // Channels are read-only.\n            toSkip += 'W';\n          }\n        }\n        titleEdit = formatMessage(messages.requested);\n        titleCompare = formatMessage(messages.granted);\n        break;\n      case 'given':\n        toEdit = this.state.modeGiven2;\n        toCompare = this.state.modeWant2;\n        toSkip = this.state.groupTopic ? (this.state.owner ? '' : 'O') : 'ASDO';\n        titleEdit = formatMessage(messages.granted);\n        titleCompare = formatMessage(messages.requested);\n        break;\n      case 'auth':\n        toEdit = this.state.auth;\n        toSkip = 'O';\n        break;\n      case 'anon':\n        toEdit = this.state.anon;\n        toSkip = 'O';\n        break;\n      case 'user': {\n        const topic = this.props.tinode.getTopic(this.props.topic);\n        if (!topic) {\n          return;\n        }\n        const user = topic.subscriber(uid);\n        if (!user || !user.acs) {\n          return;\n        }\n        toEdit = user.acs.getGiven();\n        toCompare = user.acs.getWant();\n        toSkip = this.state.owner ? '' : 'O';\n        titleEdit = formatMessage(messages.granted);\n        titleCompare = formatMessage(messages.requested);\n        if (user.public) {\n          userTitle = user.public.fn;\n          userAvatar = user.public.photo;\n        }\n        break;\n      }\n      default:\n        console.log(\"Unknown permission editing mode '\" + which + \"'\");\n        break;\n    }\n    this.setState({\n      showPermissionEditorFor: which,\n      userPermissionsEdited: uid,\n      userPermissionsTitle: userTitle,\n      userPermissionsAvatar: userAvatar,\n      editedPermissions: toEdit,\n      immutablePermissions: toCompare,\n      editedPermissionsTitle: titleEdit,\n      immutablePermissionsTitle: titleCompare,\n      editedPermissionsSkipped: toSkip,\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handleShowAddMembers(e) {\n    e.preventDefault();\n    this.props.onInitFind();\n    this.setState({showMemberPanel: true});\n  }\n\n  handleHideAddMembers() {\n    this.setState({showMemberPanel: false});\n  }\n\n  handleMemberUpdateRequest(members, added, removed) {\n    this.props.onMemberUpdateRequest(this.props.topic, added, removed);\n    this.setState({showMemberPanel: false});\n  }\n\n  handleDeleteMessages(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(this.state.deleter ? messages.delete_messages : messages.clear_messages), // title\n      formatMessage(this.state.deleter ? messages.delete_messages_warning : messages.clear_messages_warning), // content\n      (() => { this.props.onDeleteMessages(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleLeave(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.leave_chat), // title\n      formatMessage(messages.leave_chat_warning), // content\n      (() => { this.props.onLeaveTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleBlock(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.block_contact), // title\n      formatMessage(messages.block_contact_warning), // content\n      (() => { this.props.onBlockTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleReport(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.report_chat), // title\n      formatMessage(messages.report_chat_warning), // content\n      (() => { this.props.onReportTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleMemberSelected(uid) {\n    this.setState({selectedContact: uid});\n  }\n\n  handleMoreInfo(open) {\n    this.setState({moreInfoExpanded: open});\n  }\n\n  handleTagsUpdated(tags) {\n    if (!arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      this.props.onTopicTagsUpdate(this.props.topic, tags);\n    }\n  }\n\n  handleContextMenu(params) {\n    const {formatMessage} = this.props.intl;\n    const instance = this;\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    const user = topic.subscriber(params.topicName);\n    if (!user || !user.acs) {\n      return;\n    }\n\n    const menuItems = [\n      {title: formatMessage(messages.edit_permissions), handler: function() {\n        instance.handleLaunchPermissionsEditor('user', params.topicName);\n      }},\n      'member_delete',\n      user.acs.isMuted() ? 'member_unmute' : 'member_mute',\n      user.acs.isJoiner() ? 'member_block' : 'member_unblock'\n    ];\n    this.props.showContextMenu({\n      topicName: this.props.topic,\n      x: params.x,\n      y: params.y,\n      user: params.topicName}, menuItems);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n\n    return (\n      <div id=\"info-view\">\n        <div className=\"caption-panel\" id=\"info-caption-panel\">\n          <div className=\"panel-title\" id=\"info-title\">\n            <FormattedMessage id=\"title_info\" defaultMessage=\"Info\" description=\"Title for InfoView\" />\n          </div>\n          <div>\n            <MenuCancel onCancel={this.props.onCancel} />\n          </div>\n        </div>\n        {this.props.displayMobile ?\n          <ErrorPanel\n            level={this.props.errorLevel}\n            text={this.props.errorText}\n            onClearError={this.props.onError} /> : null}\n        {this.state.showMemberPanel ?\n          <GroupManager\n            members={this.state.contactList}\n            requiredMember={this.props.myUserId}\n            keepInitialMembers={!this.state.admin && !this.state.owner}\n            myUserId={this.props.myUserId}\n            contacts={this.props.searchableContacts}\n            onCancel={this.handleHideAddMembers}\n            onSubmit={this.handleMemberUpdateRequest} />\n          :\n        this.state.showPermissionEditorFor ?\n          <PermissionsEditor\n            mode={this.state.editedPermissions}\n            compare={this.state.immutablePermissions}\n            skip={this.state.editedPermissionsSkipped}\n            modeTitle={this.state.editedPermissionsTitle}\n            compareTitle={this.state.immutablePermissionsTitle}\n            userTitle={this.state.userPermissionsTitle}\n            item={this.state.userPermissionsEdited}\n            userAvatar={this.state.userPermissionsAvatar}\n            onSubmit={this.handlePermissionsChanged}\n            onCancel={this.handleHidePermissionsEditor}\n            />\n          :\n          <div id=\"info-view-content\" className=\"scrollable-panel\">\n            <div className=\"panel-form-row\">\n              <div className=\"panel-form-column\">\n                <div><label className=\"small\">\n                  <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                    description=\"Label for editing topic name\" />\n                </label></div>\n                <div><InPlaceEdit\n                    placeholder={this.state.groupTopic ? \"Group name\" : <i>Unknown</i>}\n                    readOnly={!this.state.owner}\n                    value={this.state.fullName}\n                    required={true}\n                    onFinished={this.handleFullNameUpdate} /></div>\n                <div>\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                      description=\"Label for editing 'private'\" />\n                  </label>\n                </div>\n                <div>\n                  <FormattedMessage id=\"private_editing_placeholder\"\n                    defaultMessage=\"Visible to you only\"\n                    description=\"Placeholder for editing 'private'\">{\n                    (private_placeholder) => <InPlaceEdit\n                      placeholder={private_placeholder}\n                      value={this.state.private}\n                      onFinished={this.handlePrivateUpdate} />\n                  }</FormattedMessage>\n                </div>\n              </div>\n              <AvatarUpload\n                avatar={this.state.avatar}\n                readOnly={!this.state.owner}\n                uid={this.props.topic}\n                title={this.state.fullName}\n                onImageChanged={this.handleImageChanged}\n                onError={this.props.onError} />\n            </div>\n            <div className=\"hr\" />\n            <div className=\"panel-form-column\">\n              <div className=\"panel-form-row\">\n                <label>\n                  <FormattedMessage id=\"label_muting_topic\" defaultMessage=\"Muted:\"\n                    description=\"Label for Muting/unmuting the topic\" />\n                </label>\n                <CheckBox name=\"P\" checked={this.state.muted}\n                  onChange={this.handleMuted} />\n              </div>\n              <FormattedMessage id=\"action_more\" defaultMessage=\"More\"\n                description=\"Action for showing more content\">{\n                (more) => <MoreButton\n                  title={more}\n                  open={this.state.moreInfoExpanded}\n                  onToggle={this.handleMoreInfo} />\n              }</FormattedMessage>\n              {this.state.moreInfoExpanded ?\n                <div className=\"panel-form-column\">\n                  <div className=\"panel-form-row\">\n                    <label><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n                      description=\"Label for user address (ID)\" /></label>\n                    <tt>{this.state.address}</tt>\n                  </div>\n                  {this.state.groupTopic ?\n                    <div className=\"panel-form-row\">\n                      <label>\n                        <FormattedMessage id=\"label_your_permissions\" defaultMessage=\"Your permissions:\"\n                          description=\"Label for current user permissions\" />\n                      </label>\n                      <tt className=\"clickable\"\n                        onClick={this.handleLaunchPermissionsEditor.bind(this, 'want')}>\n                        {this.state.access}\n                      </tt>\n                    </div>\n                    :\n                    <div>\n                      <div>\n                        <label className=\"small\">\n                          <FormattedMessage id=\"label_permissions\" defaultMessage=\"Permissions:\"\n                            description=\"Section title\" />\n                        </label>\n                      </div>\n                      <div className=\"quoted\">\n                        <div>\n                          <FormattedMessage id=\"label_you\" defaultMessage=\"You:\"\n                            description=\"Label for the current user\" /> &nbsp;<tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'want')}>\n                          {this.state.access}\n                        </tt></div>\n                        <div>{this.state.fullName ? this.state.fullName : formatMessage(messages.other_user)}:\n                          &nbsp;<tt className=\"clickable\" onClick={this.handleLaunchPermissionsEditor.bind(this, 'given')}>\n                          {this.state.modeGiven2}\n                          </tt>\n                        </div>\n                      </div>\n                    </div>\n                  }\n                  {this.state.sharer && (this.state.auth || this.state.anon) ?\n                  <div>\n                    <div>\n                      <label className=\"small\">\n                        <FormattedMessage id=\"label_default_access\" defaultMessage=\"Default access mode:\"\n                          description=\"Section title\" />\n                      </label>\n                    </div>\n                    <div className=\"quoted\">\n                      <div>Auth: {this.state.admin ?\n                        <tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>\n                          {this.state.auth}\n                        </tt>\n                        :\n                        <tt>{this.state.auth}</tt>\n                      }\n                      </div>\n                      <div>Anon: {this.state.admin ?\n                        <tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>\n                          {this.state.anon}\n                        </tt>\n                        :\n                        <tt>{this.state.anon}</tt>\n                      }\n                      </div>\n                    </div>\n                  </div>\n                  :\n                  null\n                }\n                </div>\n              :\n              null\n              }\n            </div>\n            <div className=\"hr\" />\n            {this.state.owner ?\n              <>\n                <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (user discovery)\"\n                  description=\"Section title for TagManager\">{\n                  (tags) => <TagManager\n                    title={tags}\n                    tags={this.state.tags}\n                    activated={false}\n                    tinode={this.props.tinode}\n                    onSubmit={this.handleTagsUpdated} />\n                }</FormattedMessage>\n                <div className=\"hr\" />\n              </>\n              :\n              null\n            }\n            <div className=\"panel-form-column\">\n              {!this.state.channel ?\n                <a href=\"#\" className=\"flat-button\" onClick={this.handleDeleteMessages}>\n                  <i className=\"material-icons\">delete_outline</i> &nbsp;{\n                    formatMessage(this.state.deleter ? messages.delete_messages : messages.clear_messages)\n                  }\n                </a>\n                :\n                null\n              }\n              <a href=\"#\" className=\"danger flat-button\" onClick={this.handleLeave}>\n                <i className=\"material-icons\">exit_to_app</i> &nbsp;{formatMessage(messages.leave_chat)}\n              </a>\n              {!this.state.groupTopic ?\n                <a href=\"#\" className=\"danger flat-button\" onClick={this.handleBlock}>\n                  <i className=\"material-icons\">block</i> &nbsp;{formatMessage(messages.block_contact)}\n                </a>\n                :\n                null\n              }\n              {!this.state.owner ?\n                <a href=\"#\" className=\"danger flat-button\" onClick={this.handleReport}>\n                  <i className=\"material-icons\">report</i> &nbsp;{formatMessage(messages.report_chat)}\n                </a>\n                :\n                null\n              }\n            </div>\n            {this.state.groupTopic && this.state.sharer ?\n              <>\n                <div className=\"hr\" />\n                <div className=\"panel-form-column\">\n                  <div className=\"panel-form-row\">\n                    <label className=\"small\">\n                      <FormattedMessage id=\"label_group_members\" defaultMessage=\"Group members:\"\n                        description=\"Section title or label\" />\n                    </label>\n                  </div>\n                  <div className=\"panel-form-row\">\n                    <a href=\"#\" className=\"flat-button\" onClick={this.handleShowAddMembers}>\n                      <i className=\"material-icons\">person_add</i> &nbsp;<FormattedMessage id=\"button_add_members\"\n                        defaultMessage=\"Add members\" description=\"Flat button [Add members] (to topic)\" />\n                    </a>\n                  </div>\n                  <FormattedMessage id=\"group_has_no_members\" defaultMessage=\"No members\"\n                    description=\"Shown in place of group members\">{\n                    (no_members) => <ContactList\n                      contacts={this.state.contactList}\n                      myUserId={this.props.myUserId}\n                      emptyListMessage={no_members}\n                      topicSelected={this.state.selectedContact}\n                      showOnline={false}\n                      showUnread={false}\n                      showMode={true}\n                      noScroll={true}\n                      onTopicSelected={this.handleMemberSelected}\n                      showContextMenu={this.state.admin ? this.handleContextMenu : false}\n                    />\n                  }</FormattedMessage>\n                </div>\n              </>\n              :\n              null\n            }\n          </div>\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(InfoView);\n","// File uload/download progress indicator with a cancel inside.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class FileProgress extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"uploader\">\n        <div><span style={{width: (this.props.progress * 100) + \"%\"}}></span></div>\n        {this.props.progress < 0.999 ?\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n            <i className=\"material-icons\">close</i> <FormattedMessage id=\"action_cancel\"\n              defaultMessage=\"cancel\" description=\"Call to action [cancel]\" />\n          </a>\n          :\n          <FormattedMessage id=\"upload_finishing\" defaultMessage=\"finishing...\"\n            description=\"Notification that upload is finishing\" />\n        }\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\nimport { bytesToHumanSize } from '../lib/strformat.js';\nimport { isUrlRelative, sanitizeUrl } from '../lib/utils.js';\n\nexport default class Attachment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      downloader: null,\n      progress: 0\n    };\n\n    this.downloadFile = this.downloadFile.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  downloadFile(url, filename, mimetype) {\n    if (!url) {\n      this.props.onError(\"Invalid download URL '\" + url + \"'\");\n      return;\n    }\n\n    const downloader = this.props.tinode.getLargeFileHelper();\n    this.setState({downloader: downloader});\n    downloader.download(url, filename, mimetype,\n      (loaded) => {\n        this.setState({progress: loaded / this.props.size});\n      },\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    ).then(() => {\n      this.setState({downloader: null, progress: 0});\n    }).catch((err) => {\n      if (err) {\n        this.props.onError(\"Error downloading file: \" + err.message, 'err');\n      }\n      this.setState({downloader: null, progress: 0});\n    });\n  }\n\n  handleCancel() {\n    if (this.props.uploading) {\n      this.props.onCancelUpload();\n    } else if (this.state.downloader) {\n      this.state.downloader.cancel();\n    }\n  }\n\n  render() {\n    let filename = this.props.filename || 'file_attachment';\n    if (filename.length > 36) {\n      filename = filename.substr(0, 16) + '...' + filename.substr(-16);\n    }\n    let size = this.props.size > 0 ?\n      <span className=\"small gray\">({bytesToHumanSize(this.props.size)})</span> :\n      null;\n\n    // Detect if the download URL is relative or absolute.\n    // If the URL is relative use LargeFileHelper to attach authentication\n    // credentials to the request.\n    let url, helperFunc;\n    if (!this.props.uploading && !this.state.downloader && isUrlRelative(this.props.downloadUrl)) {\n      // Relative URL. Use download helper.\n      url = '#';\n      helperFunc = (e) => {\n        e.preventDefault();\n        this.downloadFile(this.props.downloadUrl, this.props.filename, this.props.mimetype);\n      };\n    } else {\n      url = sanitizeUrl(this.props.downloadUrl);\n      helperFunc = null;\n    }\n    const downloadWidget = <><i className=\"material-icons\">file_download</i> <FormattedMessage id=\"save_attachment\"\n      defaultMessage=\"save\" description=\"Call to save an attachment\" /></>;\n    return (\n      <div className=\"attachment\">\n        <div><i className=\"material-icons big gray\">insert_drive_file</i></div>\n        <div className=\"flex-column\">\n          <div>{filename} {size}</div>\n          {this.props.uploading || this.state.downloader ?\n            <FileProgress progress={this.props.uploading ? this.props.progress : this.state.progress}\n              onCancel={this.handleCancel} />\n            :\n            <div>{url ?\n              <a href={url} download={this.props.filename} onClick={helperFunc}>{downloadWidget}</a>\n              :\n              <span className=\"light-gray\">{downloadWidget}</span>\n            }</div>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n","// Image view with progress bar and a cancel button.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\n\nexport default class UploadingImage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"inline-image\">\n        {React.createElement('img', this.props)}\n        <div className=\"rounded-container\">\n          <FileProgress progress={this.props.progress} onCancel={this.props.onCancelUpload} />\n        </div>\n      </div>\n    );\n  }\n};\n","// Single message, sent or received.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport Attachment from './attachment.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\nimport UploadingImage from './uploading-image.jsx'\nimport { sanitizeImageUrl, sanitizeUrl } from '../lib/utils.js';\n\nexport default class ChatMessage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      progress: 0\n    };\n\n    if (props.uploader) {\n      props.uploader.onProgress = this.handleProgress.bind(this);\n    }\n\n    this.handleImagePreview = this.handleImagePreview.bind(this);\n    this.handleFormButtonClick = this.handleFormButtonClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n  }\n\n  handleImagePreview(e) {\n    e.preventDefault();\n    this.props.onImagePreview({\n      url: e.target.src,\n      filename: e.target.title,\n      width: e.target.dataset.width,\n      height: e.target.dataset.height,\n      size: e.target.dataset.size,\n      type: e.target.dataset.mime\n    });\n  }\n\n  handleFormButtonClick(e) {\n    e.preventDefault();\n    const data = {\n      seq: this.props.seq\n    };\n    data.resp = {};\n    if (e.target.dataset.name) {\n      data.resp[e.target.dataset.name] = e.target.dataset.val ? e.target.dataset.val :\n        e.target.dataset.val === undefined ? 1 : '' + e.target.dataset.val;\n    }\n    if (e.target.dataset.act == 'url') {\n      data.ref = sanitizeUrl(e.target.dataset.ref) || 'about:blank';\n    }\n    const text = e.target.dataset.title || 'unknown';\n    this.props.onFormResponse(e.target.dataset.act, text, data);\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const menuItems = this.props.received == Tinode.MESSAGE_STATUS_FAILED ? ['menu_item_send_retry'] : [];\n    this.props.showContextMenu({ seq: this.props.seq, content: this.props.content,\n                                 y: e.pageY, x: e.pageX }, menuItems);\n  }\n\n  handleProgress(ratio) {\n    this.setState({progress: ratio});\n  }\n\n  handleCancelUpload() {\n    this.props.onCancelUpload(this.props.seq, this.props.uploader);\n  }\n\n  render() {\n    const sideClass = this.props.deleted ? 'center' :\n      (this.props.sequence + ' ' + (this.props.response ? 'left' : 'right'));\n    const bubbleClass = (this.props.sequence == 'single' || this.props.sequence == 'last') ? 'bubble tip' : 'bubble';\n    const avatar = this.props.deleted ? null : (this.props.userAvatar || true);\n    const fullDisplay = (this.props.userFrom && this.props.response && !this.props.deleted &&\n      (this.props.sequence == 'single' || this.props.sequence == 'last'));\n\n    let content = this.props.content;\n    const attachments = [];\n    if (this.props.mimeType == Drafty.getContentType() && Drafty.isValid(content)) {\n      Drafty.attachments(content, function(att, i) {\n        if (att.mime == 'application/json') {\n          // Don't show json objects as attachments.\n          // They are not meant for users.\n          return;\n        }\n        attachments.push(<Attachment\n          tinode={this.props.tinode}\n          downloadUrl={Drafty.getDownloadUrl(att)}\n          filename={att.name} uploading={Drafty.isProcessing(att)}\n          mimetype={att.mime} size={Drafty.getEntitySize(att)}\n          progress={this.state.progress}\n          onCancelUpload={this.handleCancelUpload}\n          onError={this.props.onError}\n          key={i} />);\n      }, this);\n      content = React.createElement(React.Fragment, null, Drafty.format(content, draftyFormatter, this));\n    } else if (this.props.deleted) {\n      // Message represents a range of deleted messages.\n      content = <><i className=\"material-icons gray\">block</i> <i className=\"gray\">\n        <FormattedMessage id=\"deleted_content\"\n          defaultMessage=\"content deleted\" description=\"Shown when messages are deleted\" />\n      </i></>\n    } else if (typeof content != 'string') {\n      content = <>\n          <i className=\"material-icons gray\">error_outline</i> <i className=\"gray\">\n            <FormattedMessage id=\"invalid_content\"\n              defaultMessage=\"invalid content\" description=\"Shown when message is unreadable\" /></i>\n        </>\n    }\n\n    return (\n      <li className={sideClass}>\n        {this.props.userFrom && this.props.response ?\n          <div className=\"avatar-box\">\n            {fullDisplay ?\n              <LetterTile\n                topic={this.props.userFrom}\n                title={this.props.userName}\n                avatar={avatar} /> :\n              null}\n          </div> :\n          null}\n        <div>\n          <div className={bubbleClass}>\n            <div className=\"message-content\">\n              {content}\n              {attachments}\n              {this.props.timestamp ?\n                <ReceivedMarker\n                  timestamp={this.props.timestamp}\n                  received={this.props.received} />\n                : null}\n            </div>\n            {this.props.deleted || !this.props.showContextMenu ?\n              null :\n              <span className=\"menuTrigger\">\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">expand_more</i>\n                </a>\n              </span>\n            }\n          </div>\n          {fullDisplay ?\n            <div className=\"author\">\n              <FormattedMessage id=\"user_not_found\" defaultMessage=\"Not found\"\n                description=\"In place of a user's full name when the user is not found.\">{\n                    (notFound) => {return this.props.userName || <i>{notFound}</i>}\n              }</FormattedMessage>\n            </div>\n            : null\n          }\n        </div>\n      </li>\n    );\n  }\n};\n\n// Convert Drafty object to a tree of React elements.\nimport { BROKEN_IMAGE_SIZE, REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\n\n// Converts Drafty elements into React classes.\n// 'this' is set by the caller.\nfunction draftyFormatter(style, data, values, key) {\n  if (style == 'EX') {\n    // attachments are handled elsewhere.\n    return null;\n  }\n\n  let el = Drafty.tagName(style);\n  if (el) {\n    const attr = Drafty.attrValue(style, data) || {};\n    attr.key = key;\n    switch (style) {\n      case 'HL':\n        // Highlighted text. Assign class name.\n        attr.className = 'highlight';\n        break;\n      case 'IM':\n        // Additional processing for images\n        if (data) {\n          attr.className = 'inline-image';\n          const dim = fitImageSize(data.width, data.height,\n            Math.min(this.props.viewportWidth - REM_SIZE * 4, REM_SIZE * 36), REM_SIZE * 24, false) ||\n            {dstWidth: BROKEN_IMAGE_SIZE, dstHeight: BROKEN_IMAGE_SIZE};\n          attr.style = {\n            width: dim.dstWidth + 'px',\n            height: dim.dstHeight + 'px',\n            // Looks like a Chrome bug: broken image does not respect 'width' and 'height'.\n            minWidth: dim.dstWidth + 'px',\n            minHeight: dim.dstHeight + 'px'\n          };\n          if (!Drafty.isProcessing(data)) {\n            attr.src = this.props.tinode.authorizeURL(sanitizeImageUrl(attr.src));\n            attr.alt = data.name;\n            if (attr.src) {\n              attr.onClick = this.handleImagePreview;\n              attr.className += ' image-clickable';\n            } else {\n              attr.src = 'img/broken_image.png';\n            }\n          } else {\n            // Use custom element instead of <img>.\n            el = UploadingImage;\n          }\n        }\n        break;\n      case 'BN':\n        // Button\n        attr.onClick = this.handleFormButtonClick;\n        let inner = React.Children.map(values, (child) => {\n          return typeof child == 'string' ? child : undefined;\n        });\n        if (!inner || inner.length == 0) {\n          inner = [attr.name]\n        }\n        // Get text which will be sent back when the button is clicked.\n        attr['data-title'] = inner.join('');\n        break;\n      case 'FM':\n        // Form\n        attr.className = 'bot-form';\n        break;\n      case 'RW':\n        // Form element formatting is dependent on element content.\n        break;\n      default:\n        if (el == '_UNKN') {\n          // Unknown element.\n          // TODO: make it prettier.\n          el = <><span className=\"material-icons\">extension</span></>;\n        }\n        break;\n    }\n    return React.createElement(el, attr, values);\n  } else {\n    return values;\n  }\n};\n","// Send message form.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport { KEYPRESS_DELAY } from '../config.js';\nimport { filePasted } from '../lib/blob-helpers.js';\n\nconst messages = defineMessages({\n  messaging_disabled: {\n    id: 'messaging_disabled_prompt',\n    defaultMessage: 'Messaging disabled',\n    description: 'Prompt in SendMessage in read-only topic'\n  },\n  type_new_message: {\n    id: 'new_message_prompt',\n    defaultMessage: 'New message',\n    description: 'Prompt in send message field'\n  },\n  add_image_caption: {\n    id: 'image_caption_prompt',\n    defaultMessage: 'Image caption',\n    description: 'Prompt in SendMessage for attached image'\n  },\n  file_attachment_too_large: {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  },\n  cannot_initiate_upload: {\n    id: 'cannot_initiate_file_upload',\n    defaultMessage: 'Cannot initiate file upload.',\n    description: 'Generic error messagewhen attachment fails'\n  },\n});\n\nclass SendMessage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      message: '',\n      // Make initial keypress time as if it happened 5001 milliseconds in the past.\n      keypressTimestamp: new Date().getTime() - KEYPRESS_DELAY - 1\n    };\n\n    this.handlePasteEvent = this.handlePasteEvent.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleSend = this.handleSend.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleMessageTyping = this.handleMessageTyping.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.addEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.removeEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.messageEditArea) {\n      this.messageEditArea.focus();\n    }\n  }\n\n  handlePasteEvent(e) {\n    if (this.props.disabled) {\n      return;\n    }\n    // FIXME: handle large files too.\n    if (filePasted(e,\n      (bits, mime, width, height, fname) => {\n        this.props.onAttachImage(mime, bits, width, height, fname);\n      },\n      (mime, bits, fname) => {\n        this.props.onAttachFile(mime, bits, fname);\n      },\n      this.props.onError)) {\n\n      // If a file was pasted, don't paste base64 data into input field.\n      e.preventDefault();\n    }\n  }\n\n  handleAttachImage(e) {\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachImage(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleAttachFile(e) {\n    const {formatMessage} = this.props.intl;\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachFile(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleSend(e) {\n    e.preventDefault();\n    const message = this.state.message.trim();\n    if (message || this.props.acceptBlank || this.props.noInput) {\n      this.props.onSendMessage(message);\n      this.setState({message: ''});\n    }\n  }\n\n  /* Send on Enter key */\n  handleKeyPress(e) {\n    // Remove this if you don't want Enter to trigger send\n    if (e.key === 'Enter') {\n      // Have Shift-Enter insert a line break instead\n      if (!e.shiftKey) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.handleSend(e);\n      }\n    }\n  }\n\n  handleMessageTyping(e) {\n    const newState = {message: e.target.value};\n    if (this.props.onKeyPress) {\n      const now = new Date().getTime();\n      if (now - this.state.keypressTimestamp > KEYPRESS_DELAY) {\n        this.props.onKeyPress();\n        newState.keypressTimestamp = now;\n      }\n    }\n    this.setState(newState);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const prompt = this.props.disabled ?\n      formatMessage(messages.messaging_disabled) :\n      (this.props.messagePrompt ?\n        formatMessage(messages[this.props.messagePrompt]) :\n        formatMessage(messages.type_new_message));\n    return (\n      <div id=\"send-message-panel\">\n        {!this.props.disabled ?\n          <>\n            {this.props.onAttachFile ?\n              <>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachImage.click();}} title=\"Add image\">\n                  <i className=\"material-icons secondary\">photo</i>\n                </a>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachFile.click();}} title=\"Attach file\">\n                  <i className=\"material-icons secondary\">attach_file</i>\n                </a>\n              </>\n              :\n              null}\n            {this.props.noInput ?\n              <div className=\"hr thin\" /> :\n              <textarea id=\"sendMessage\" placeholder={prompt}\n                value={this.state.message} onChange={this.handleMessageTyping}\n                onKeyPress={this.handleKeyPress}\n                ref={(ref) => {this.messageEditArea = ref;}}\n                autoFocus />}\n            <a href=\"#\" onClick={this.handleSend} title=\"Send\">\n              <i className=\"material-icons\">send</i>\n            </a>\n            <input type=\"file\" ref={(ref) => {this.attachFile = ref;}}\n              onChange={this.handleAttachFile} style={{display: 'none'}} />\n            <input type=\"file\" ref={(ref) => {this.attachImage = ref;}} accept=\"image/*\"\n              onChange={this.handleAttachImage} style={{display: 'none'}} />\n          </>\n          :\n          <div id=\"writing-disabled\">{prompt}</div>\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SendMessage);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { bytesToHumanSize } from '../lib/strformat.js';\n\n// Get material icon name from mime type.\nfunction iconFromMime(mime) {\n  // If more icons become available in material icons, add them to this mime-to-icon mapping.\n  const mimeToIcon = {default: 'insert_drive_file', image: 'image', text: 'description', video: 'theaters'};\n\n  return mimeToIcon[mime] || mimeToIcon[(mime || '').split('/')[0]] || mimeToIcon['default'];\n}\n\nexport default class DocPreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleSendDoc = this.handleSendDoc.bind(this);\n  }\n\n  handleSendDoc(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(this.props.content.file);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          <span>{this.props.content.filename}</span>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\">\n          <div className=\"flex-column narrow\">\n            <i className=\"material-icons gray\">{iconFromMime(this.props.content.type)}</i>\n            <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n              description=\"Label for file content type (mime)\" /></b> {this.props.content.type || 'application/octet-stream'}</div>\n            <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n              description=\"Label for file size\" /></b> {bytesToHumanSize(this.props.content.size)}</div>\n          </div>\n        </div>\n        <SendMessage\n          noInput={true}\n          onSendMessage={this.handleSendDoc}\n          onError={this.props.onError} />\n      </div>\n    );\n  }\n};\n","// GroupSubs: a list of group subscribers currently online.\n// Show in the topic title bar\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { MAX_ONLINE_IN_TOPIC } from '../config.js'\n\nimport LetterTile from './letter-tile.jsx';\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class GroupSubs extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const usersOnline = [];\n    const totalCount = (this.props.subscribers || []).length;\n    const countToShow = Math.min(MAX_ONLINE_IN_TOPIC, totalCount);\n\n    (this.props.subscribers || []).some((sub) => {\n      usersOnline.push(\n        <div className=\"avatar-box\" key={sub.user}>\n          <LetterTile\n            topic={sub.user}\n            avatar={makeImageUrl(sub.public ? sub.public.photo : null) || true}\n            title={sub.public ? sub.public.fn : null} />\n        </div>\n      );\n      return usersOnline.length == countToShow;\n    });\n\n    return (\n      <div id=\"topic-users\">{usersOnline} {totalCount > countToShow ?\n        <span>\n          <FormattedMessage id=\"more_online_members\" defaultMessage=\"+{overflow} more\"\n              description=\"Shown in MessagesView title bar when the number of online subscribers exceeds MAX_ONLINE_IN_TOPIC\"\n              values={{ overflow: (totalCount - countToShow) }} />\n        </span> : null}\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\nimport { bytesToHumanSize } from '../lib/strformat.js';\n\nexport default class ImagePreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      width: 0,\n      height: 0\n    };\n\n    this.handleSendImage = this.handleSendImage.bind(this);\n  }\n\n  assignWidth(node) {\n    if (node && !this.state.width) {\n      const bounds = node.getBoundingClientRect();\n      this.setState({\n        width: bounds.width | 0,\n        height: bounds.height | 0\n      });\n    }\n  }\n\n  handleSendImage(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(caption, this.props.content.blob);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n\n    const dim = fitImageSize(this.props.content.width, this.props.content.height,\n      this.state.width, this.state.height, false);\n    const size = dim ? { width: dim.dstWidth + 'px', height: dim.dstHeight + 'px' } :\n      ((this.props.content.width > this.props.content.height) ? {width: '100%'} : {height: '100%'});\n    size.maxWidth = '100%';\n    size.maxHeight = '100%';\n\n    let filename = this.props.content.filename;\n    // Average font aspect ratio is ~0.5; File name takes 1/3 of the viewport width.\n    const maxlength = Math.max(((this.state.width / REM_SIZE / 1.5) | 0) - 2, 12);\n    if (filename.length > maxlength) {\n      filename = filename.slice(0, maxlength/2 - 1) + '…' + filename.slice(1 - maxlength/2);\n    }\n    const width = this.props.content.width || '-';\n    const height = this.props.content.height || '-';\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          {!this.props.onSendMessage ?\n            <a href={this.props.content.url} download={this.props.content.filename}>\n              <i className=\"material-icons\">file_download</i> <FormattedMessage\n                id=\"download_action\" defaultMessage=\"download\" description=\"Call to action [download]\" />\n            </a>\n            :\n            <span>{this.props.content.filename}</span>\n          }\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\" ref={(node) => this.assignWidth(node)}>\n          <img src={this.props.content.url} style={size} className=\"image-preview\" alt={this.props.content.filename} />\n        </div>\n        {this.props.onSendMessage ?\n          <SendMessage\n            messagePrompt=\"add_image_caption\"\n            acceptBlank={true}\n            onSendMessage={this.handleSendImage}\n            onError={this.props.onError} />\n          :\n          <div id=\"image-preview-footer\">\n            <div>\n              <div><b><FormattedMessage id=\"label_file_name\" defaultMessage=\"File name:\"\n                description=\"Label for a file name\" /></b></div>\n              <div><span title={this.props.content.filename}>{filename ? filename : '-'}</span></div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n                description=\"Label for file content type (mime)\" /></b></div>\n              <div>{this.props.content.type}</div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n                description=\"Label for file size\" /></b></div>\n              <div>{width} &times; {height} px; {bytesToHumanSize(this.props.content.size)}</div>\n            </div>\n          </div>}\n      </div>\n    );\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Invitation extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleButtonAction = this.handleButtonAction.bind(this);\n  }\n\n  handleButtonAction(evt, data) {\n    evt.preventDefault();\n    this.props.onAction(data);\n  }\n\n  render() {\n    return (\n      <div className=\"accept-invite-panel\">\n        <div className=\"title\">\n          <FormattedMessage id=\"chat_invitation\"\n            defaultMessage=\"You are invited to start a new chat. What would you like to do?\"\n            description=\"New chat invitation message: [Accept] [Ignore] [Block].\" />\n        </div>\n        <div className=\"footer\">\n          <button className=\"primary\" onClick={event => { this.handleButtonAction(event, \"accept\"); }}>\n            <FormattedMessage id=\"chat_invitation_accept\"\n              defaultMessage=\"Accept\" description=\"Action [Accept] for chat invitation.\" />\n          </button>\n          <button className=\"secondary\" onClick={event => { this.handleButtonAction(event, \"delete\"); }}>\n            <FormattedMessage id=\"chat_invitation_ignore\"\n              defaultMessage=\"Ignore\" description=\"Action [Ignore] for chat invitation.\" />\n          </button>\n          <button className=\"secondary\" onClick={event => { this.handleButtonAction(event, \"block\"); }}>\n            <FormattedMessage id=\"chat_invitation_block\"\n              defaultMessage=\"Block\" description=\"Action [Block] for chat invitation.\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nexport default class LoadSpinner extends React.PureComponent {\n  render() {\n    return (this.props.show ?\n      <div className=\"load-spinner-box\"><div className=\"loader-spinner\"></div></div> : null);\n  }\n}\n","/* This is just a static page to display when no conversation is selected. */\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME } from '../config.js';\n\nexport default class LogoView extends React.PureComponent {\n  render() {\n    const version = APP_NAME + ' (' + Tinode.getLibrary() + ')';\n    return (\n      <div id=\"dummy-view\">\n        <div>\n          <a href=\"https://github.com/tinode/chat/\">\n            <img id=\"logo\" alt=\"logo\" src=\"img/logo.svg\" />\n            <h2>Tinode Web</h2>\n          </a>\n          <p><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\" \n            description=\"Label for a client version\" /> {version}</p>\n          <p><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\"\n            description=\"Label for a server version\" /> {this.props.serverVersion} ({this.props.serverAddress})</p>\n        </div>\n      </div>\n    );\n  }\n};\n","// Utility class for hash navigation.\n\n// Parse hash as in http://www.example.com/path#hash as if it were\n// path and arguments.\nexport default class HashNavigation {\n  static parseUrlHash(hash) {\n    // Split path from args, path -> parts[0], args->path[1]\n    const parts = hash.split('?', 2);\n    const params = {};\n    let path = [];\n    if (parts[0]) {\n      path = parts[0].substr(1).split('/');\n    }\n    if (parts[1]) {\n      parts[1].split('&').forEach(function(part) {\n        let item = part.split('=');\n        if (item[0]) {\n          params[decodeURIComponent(item[0])] = decodeURIComponent(item[1]);\n        }\n      });\n    }\n    return {path: path, params: params};\n  }\n\n  static navigateTo(url) {\n    window.location.hash = url;\n  }\n\n  static composeUrlHash(path, params) {\n    let url = path.join('/');\n    const args = [];\n    for (const key in params) {\n      if (params.hasOwnProperty(key)) {\n        args.push(key + '=' + params[key]);\n      }\n    }\n    if (args.length > 0) {\n      url += '?' + args.join('&');\n    }\n    return url;\n  }\n\n  static addUrlParam(hash, key, value) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.params[key] = value;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static removeUrlParam(hash, key) {\n    const parsed = this.parseUrlHash(hash);\n    delete parsed.params[key];\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlSidePanel(hash, sidepanel) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[0] = sidepanel;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlTopic(hash, topic) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[1] = topic;\n    // Close InfoView on topic change.\n    delete parsed.params.info;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n}\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\nconst Drafty = Tinode.Drafty;\n\nimport ChatMessage from '../widgets/chat-message.jsx';\nimport DocPreview from '../widgets/doc-preview.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupSubs from '../widgets/group-subs.jsx';\nimport ImagePreview from '../widgets/image-preview.jsx';\nimport Invitation from '../widgets/invitation.jsx';\nimport LetterTile from '../widgets/letter-tile.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport LogoView from './logo-view.jsx';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { DEFAULT_P2P_ACCESS_MODE, IMAGE_PREVIEW_DIM, KEYPRESS_DELAY, MESSAGES_PAGE,\n  MAX_EXTERN_ATTACHMENT_SIZE, MAX_IMAGE_DIM, MAX_INBAND_ATTACHMENT_SIZE, READ_DELAY } from '../config.js';\nimport { SUPPORTED_IMAGE_FORMATS, blobToBase64, filePasted, fileToBase64,\n  imageScaled, makeImageUrl } from '../lib/blob-helpers.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { bytesToHumanSize, shortDateFormat } from '../lib/strformat.js';\n\n// Run timer with this frequency (ms) for checking notification queue.\nconst NOTIFICATION_EXEC_INTERVAL = 300;\n\nconst messages = defineMessages({\n  online_now: {\n    id: 'online_now',\n    defaultMessage: 'online now',\n    description: 'Indicator that the user or topic is currently online',\n  },\n  last_seen: {\n    id: 'last_seen_timestamp',\n    defaultMessage: 'Last seen',\n    description: 'Label for the timestamp of when the user or topic was last online'\n  },\n  not_found: {\n    id: 'title_not_found',\n    defaultMessage: 'Not found',\n    description: 'Title shown when topic is not found'\n  },\n  channel: {\n    id: 'channel',\n    defaultMessage: 'channel',\n    description: 'Subtitle shown for channels in MessagesView instead of last seen'\n  },\n  file_attachment_too_large: {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  }\n});\n\n// Checks if the access permissions are granted but not yet accepted.\nfunction isUnconfirmed(acs) {\n  if (acs) {\n    const ex = acs.getExcessive() || '';\n    return acs.isJoiner('given') && (ex.includes('R') || ex.includes('W'));\n  }\n  return false;\n}\n\nfunction isPeerRestricted(acs) {\n  if (acs) {\n    const ms = acs.getMissing() || '';\n    return acs.isJoiner('want') && (ms.includes('R') || ms.includes('W'));\n  }\n  return false;\n}\n\nclass MessagesView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = MessagesView.getDerivedStateFromProps(props, {});\n\n    this.leave = this.leave.bind(this);\n    this.sendImageAttachment = this.sendImageAttachment.bind(this);\n    this.sendFileAttachment = this.sendFileAttachment.bind(this);\n    this.sendKeyPress = this.sendKeyPress.bind(this);\n    this.handleScrollReference = this.handleScrollReference.bind(this);\n    this.handleScrollEvent = this.handleScrollEvent.bind(this);\n    this.handleDescChange = this.handleDescChange.bind(this);\n    this.handleSubsUpdated = this.handleSubsUpdated.bind(this);\n    this.handleNewMessage = this.handleNewMessage.bind(this);\n    this.handleAllMessagesReceived = this.handleAllMessagesReceived.bind(this);\n    this.handleInfoReceipt = this.handleInfoReceipt.bind(this);\n    this.handleImagePostview = this.handleImagePostview.bind(this);\n    this.handleClosePreview = this.handleClosePreview.bind(this);\n    this.handleFormResponse = this.handleFormResponse.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleShowContextMenuMessage = this.handleShowContextMenuMessage.bind(this);\n    this.handleNewChatAcceptance = this.handleNewChatAcceptance.bind(this);\n    this.handleEnablePeer = this.handleEnablePeer.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n    this.postReadNotification = this.postReadNotification.bind(this);\n    this.clearNotificationQueue = this.clearNotificationQueue.bind(this);\n\n    this.readNotificationQueue = [];\n    this.readNotificationTimer = null;\n  }\n\n  componentDidMount() {\n    // this.propsChange(this.props, this.state);\n    if (this.messagesScroller) {\n      this.messagesScroller.addEventListener('scroll', this.handleScrollEvent);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messagesScroller) {\n      this.messagesScroller.removeEventListener('scroll', this.handleScrollEvent);\n    }\n\n    // Flush all notifications.\n    this.clearNotificationQueue();\n  }\n\n  // Scroll last message into view on component update e.g. on message received\n  // or vertical shrinking.\n  componentDidUpdate(prevProps, prevState) {\n    if (this.messagesScroller) {\n      if (prevState.topic != this.state.topic || prevState.messages.length != this.state.messages.length) {\n        // New message\n        this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n      } else if (prevProps.viewportHeight > this.props.viewportHeight) {\n        // Componet changed height.\n        this.messagesScroller.scrollTop += prevProps.viewportHeight - this.props.viewportHeight;\n      }\n    }\n\n    const topic = this.props.tinode ? this.props.tinode.getTopic(this.state.topic) : undefined;\n    if (this.state.topic != prevState.topic) {\n      if (prevState.topic && !Tinode.isNewGroupTopicName(prevState.topic)) {\n        this.leave(prevState.topic);\n      }\n\n      if (topic) {\n        topic.onData = this.handleNewMessage;\n        topic.onAllMessagesReceived = this.handleAllMessagesReceived;\n        topic.onInfo = this.handleInfoReceipt;\n        topic.onMetaDesc = this.handleDescChange;\n        topic.onSubsUpdated = this.handleSubsUpdated;\n        topic.onPres = this.handleSubsUpdated;\n      }\n    }\n\n    if (!this.props.applicationVisible) {\n      // If application is not visible, flush all unsent 'read' notifications.\n      this.clearNotificationQueue();\n    } else {\n      // Otherwise assume there are unread messages.\n      this.postReadNotification(0);\n    }\n\n    if (topic && !topic.isSubscribed() && this.props.ready &&\n        ((this.state.topic != prevState.topic) || !prevProps.ready)) {\n      // Is this a new topic?\n      const newTopic = (this.props.newTopicParams && this.props.newTopicParams._topicName == this.props.topic);\n\n      // Don't request the tags. They are useless unless the user\n      // is the owner and is editing the topic.\n      let getQuery = topic.startMetaQuery().withLaterDesc().withLaterSub();\n      if (this.state.isReader || newTopic) {\n        // Reading is either permitted or we don't know because it's a new topic. Ask for messages.\n        getQuery = getQuery.withLaterData(MESSAGES_PAGE);\n        if (this.state.isReader) {\n          getQuery = getQuery.withLaterDel();\n        }\n        // And show \"loading\" spinner.\n        this.setState({ fetchingMessages: true });\n      }\n      const setQuery = newTopic ? this.props.newTopicParams : undefined;\n      topic.subscribe(getQuery.build(), setQuery)\n        .then((ctrl) => {\n          if (ctrl.code == 303) {\n            // Redirect to another topic requested.\n            HashNavigation.navigateTo(HashNavigation.setUrlTopic('', ctrl.params.topic));\n            return;\n          }\n          if (this.state.topic != ctrl.topic) {\n            this.setState({topic: ctrl.topic});\n          }\n          this.props.onNewTopicCreated(this.props.topic, ctrl.topic);\n          // If there are unsent messages, try sending them now.\n          topic.queuedMessages((pub) => {\n            if (!pub._sending && topic.isSubscribed()) {\n              topic.publishMessage(pub);\n            }\n          });\n        })\n        .catch((err) => {\n          console.log(\"Failed subscription to\", this.state.topic);\n          this.props.onError(err.message, 'err');\n          const blankState = MessagesView.getDerivedStateFromProps({}, {});\n          blankState.title = this.props.intl.formatMessage(messages.not_found);\n          this.setState(blankState);\n        });\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let nextState = {};\n    if (!nextProps.topic) {\n      // Default state: no topic.\n      nextState = {\n        messages: [],\n        onlineSubs: [],\n        topic: null,\n        title: '',\n        avatar: null,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false,\n        peerMessagingDisabled: false,\n        channel: false\n      };\n    } else if (nextProps.topic != prevState.topic) {\n      const topic = nextProps.tinode.getTopic(nextProps.topic);\n      nextState = {\n        topic: nextProps.topic,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false\n      };\n\n      if (topic) {\n        // Topic exists.\n        const msgs = [];\n        const subs = [];\n\n        if (nextProps.connected) {\n          topic.subscribers((sub) => {\n            if (sub.online && sub.user != nextProps.myUserId) {\n              subs.push(sub);\n            }\n          });\n        }\n\n        topic.messages(function(msg) {\n          if (!msg.deleted) {\n            msgs.push(msg);\n          }\n        });\n\n        Object.assign(nextState, {\n          messages: msgs,\n          onlineSubs: subs\n        });\n\n        if (topic.public) {\n          Object.assign(nextState, {\n            title: topic.public.fn,\n            avatar: makeImageUrl(topic.public.photo)\n          });\n        } else {\n          Object.assign(nextState, {\n            title: '',\n            avatar: null\n          });\n        }\n\n        const peer = topic.p2pPeerDesc();\n        if (peer) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: isPeerRestricted(peer.acs)\n          });\n        } else if (prevState.peerMessagingDisabled) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: false\n          });\n        }\n        Object.assign(nextState, {\n          channel: topic.isChannelType()\n        });\n      } else {\n        // Invalid topic.\n        Object.assign(nextState, {\n          messages: [],\n          onlineSubs: [],\n          title: '',\n          avatar: null,\n          peerMessagingDisabled: false,\n          channel: false\n        });\n      }\n    }\n\n    if (nextProps.acs) {\n      if (nextProps.acs.isWriter() != prevState.isWriter) {\n        nextState.isWriter = !prevState.isWriter;\n      }\n      if (nextProps.acs.isReader() != prevState.isReader) {\n        nextState.isReader = !prevState.isReader;\n      }\n      if (!nextProps.acs.isReader('given') != prevState.readingBlocked) {\n        nextState.readingBlocked = !prevState.readingBlocked;\n      }\n      if (nextProps.acs.isSharer() != prevState.isSharer) {\n        nextState.isSharer = !prevState.isSharer;\n      }\n    } else {\n      if (prevState.isWriter) {\n        nextState.isWriter = false;\n      }\n      if (prevState.isReader) {\n        nextState.isReader = false;\n      }\n      if (!prevState.readingBlocked) {\n        prevState.readingBlocked = true;\n      }\n      if (prevState.isSharer) {\n        nextState.isSharer = false;\n      }\n    }\n\n    if (isUnconfirmed(nextProps.acs) == !prevState.unconformed) {\n      nextState.unconfirmed = !prevState.unconformed;\n    }\n\n    // Clear subscribers online when there is no connection.\n    if (!nextProps.connected && prevState.onlineSubs && prevState.onlineSubs.length > 0) {\n      nextState.onlineSubs = [];\n    }\n\n    return nextState;\n  }\n\n  leave(oldTopicName) {\n    if (!oldTopicName) {\n      return;\n    }\n    let oldTopic = this.props.tinode.getTopic(oldTopicName);\n    if (oldTopic && oldTopic.isSubscribed()) {\n      oldTopic.leave(false)\n        .catch(() => { /* do nothing here */ })\n        .finally(() => {\n          // We don't care if the request succeeded or failed.\n          // The topic is dead regardless.\n          this.setState({fetchingMessages: false});\n          oldTopic.onData = undefined;\n          oldTopic.onAllMessagesReceived = undefined;\n          oldTopic.onInfo = undefined;\n          oldTopic.onMetaDesc = undefined;\n          oldTopic.onSubsUpdated = undefined;\n          oldTopic.onPres = undefined;\n        });\n    }\n  }\n\n  handleScrollReference(node) {\n    if (node) {\n      node.addEventListener('scroll', this.handleScrollEvent);\n      this.messagesScroller = node;\n      this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n    }\n  }\n\n  // Get older messages\n  handleScrollEvent(event) {\n    this.setState({scrollPosition: event.target.scrollHeight - event.target.scrollTop});\n    if (event.target.scrollTop <= 0) {\n      this.setState((prevState, props) => {\n        const newState = {};\n        if (!prevState.fetchingMessages) {\n          const topic = this.props.tinode.getTopic(this.state.topic);\n          if (topic && topic.isSubscribed() && topic.msgHasMoreMessages()) {\n            newState.fetchingMessages = true;\n            topic.getMessagesPage(MESSAGES_PAGE).catch((err) => {\n              this.setState({fetchingMessages: false});\n              this.props.onError(err.message, 'err');\n            });\n          }\n        }\n        return newState;\n      });\n    }\n  }\n\n  handleDescChange(desc) {\n    if (desc.public) {\n      this.setState({\n        title: desc.public.fn,\n        avatar: makeImageUrl(desc.public.photo)\n      });\n    } else {\n      this.setState({\n        title: '',\n        avatar: null\n      });\n    }\n\n    if (desc.acs) {\n      this.setState({\n        isWriter: desc.acs.isWriter(),\n        isReader: desc.acs.isReader(),\n        readingBlocked: !desc.acs.isReader('given'),\n        unconfirmed: isUnconfirmed(desc.acs),\n      });\n    }\n  }\n\n  postReadNotification(seq) {\n    // Ignore notifications if the app is invisible.\n    if (!this.props.applicationVisible) {\n      return;\n    }\n\n    // Set up the timer if it's not running already.\n    if (!this.readNotificationTimer) {\n      this.readNotificationTimer = setInterval(() => {\n        if (this.readNotificationQueue.length == 0) {\n          // Shut down the timer if the queue is empty.\n          clearInterval(this.readNotificationTimer);\n          this.readNotificationTimer = null;\n          return;\n        }\n\n        let seq = -1;\n        while (this.readNotificationQueue.length > 0) {\n          const n = this.readNotificationQueue[0];\n          if (n.topicName != this.state.topic) {\n            // Topic has changed. Drop the notification.\n            this.readNotificationQueue.shift();\n            continue;\n          }\n\n          const now = new Date();\n          if (n.sendAt <= now) {\n            // Remove expired notification from queue.\n            this.readNotificationQueue.shift();\n            seq = Math.max(seq, n.seq);\n          } else {\n            break;\n          }\n        }\n\n        // Send only one notification for the whole batch of messages.\n        if (seq >= 0) {\n          const topic = this.props.tinode.getTopic(this.state.topic);\n          if (topic) {\n            topic.noteRead(seq);\n          }\n        }\n      }, NOTIFICATION_EXEC_INTERVAL);\n    }\n\n    const now = new Date();\n    this.readNotificationQueue.push({\n      topicName: this.state.topic,\n      seq: seq,\n      sendAt: now.setMilliseconds(now.getMilliseconds() + READ_DELAY)\n    });\n  }\n\n  // Clear notification queue and timer.\n  clearNotificationQueue() {\n    this.readNotificationQueue = [];\n    if (this.readNotificationTimer) {\n      clearInterval(this.readNotificationTimer);\n      this.readNotificationTimer = null;\n    }\n  }\n\n  handleSubsUpdated() {\n    if (this.state.topic) {\n      const subs = [];\n      const topic = this.props.tinode.getTopic(this.state.topic);\n      topic.subscribers((sub) => {\n        if (sub.online && sub.user != this.props.myUserId) {\n          subs.push(sub);\n        }\n      });\n      const newState = {onlineSubs: subs};\n      const peer = topic.p2pPeerDesc();\n      if (peer) {\n        Object.assign(newState, {\n          peerMessagingDisabled: isPeerRestricted(peer.acs)\n        });\n      } else if (this.state.peerMessagingDisabled) {\n        Object.assign(newState, {\n          peerMessagingDisabled: false\n        });\n      }\n      this.setState(newState);\n    }\n  }\n\n  handleNewMessage(msg) {\n    // Regenerate messages list\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    const newState = {messages: []};\n    topic.messages((m) => {\n      if (!m.deleted) {\n        newState.messages.push(m);\n      }\n    });\n\n    // msg could be null if one or more messages were deleted.\n    if (msg && !msg.deleted) {\n      // If the message is added to the end of the message list,\n      // scroll to the bottom.\n      if (topic.isNewMessage(msg.seq)) {\n        newState.scrollPosition = 0;\n      }\n\n      // Aknowledge messages except own messages. They are\n      // automatically assumed to be read and recived.\n      const status = topic.msgStatus(msg, true);\n      if (status >= Tinode.MESSAGE_STATUS_SENT && msg.from != this.props.myUserId) {\n        this.postReadNotification(msg.seq);\n      }\n      this.props.onData(msg);\n    }\n    this.setState(newState);\n  }\n\n  handleAllMessagesReceived(count) {\n    this.setState({fetchingMessages: false});\n    if (count > 0) {\n      // 0 means \"latest\".\n      this.postReadNotification(0);\n    }\n  }\n\n  handleInfoReceipt(info) {\n    switch (info.what) {\n      case 'kp': {\n        clearTimeout(this.keyPressTimer);\n        var instance = this;\n        this.keyPressTimer = setTimeout(function() {\n          instance.setState({typingIndicator: false});\n        }, KEYPRESS_DELAY + 1000);\n        if (!this.state.typingIndicator) {\n          this.setState({typingIndicator: true});\n        }\n        break;\n      }\n      case 'read':\n      case 'recv':\n        // Redraw due to changed recv/read status.\n        this.forceUpdate();\n        break;\n      default:\n        console.log(\"Other change in topic: \", info.what);\n    }\n  }\n\n  handleImagePostview(content) {\n    this.setState({ imagePostview: content });\n  }\n\n  handleClosePreview() {\n    if (this.state.imagePreview && this.state.imagePreview.url) {\n      URL.revokeObjectURL(this.state.imagePreview.url);\n    }\n    this.setState({ imagePostview: null, imagePreview: null, docPreview: null });\n  }\n\n  handleFormResponse(action, text, data) {\n    if (action == 'pub') {\n      this.props.sendMessage(Drafty.attachJSON(Drafty.parse(text), data));\n    } else if (action == 'url') {\n      const url = new URL(data.ref);\n      const params = url.searchParams;\n      for (let key in data.resp) {\n        if (data.resp.hasOwnProperty(key)) {\n          params.set(key, data.resp[key]);\n        }\n      }\n      ['name', 'seq'].map(function(key) {\n        if (data[key]) {\n          params.set(key, data[key]);\n        }\n      });\n      params.set('uid', this.props.myUserId);\n      url.search = params;\n      window.open(url, '_blank');\n    } else {\n      console.log(\"Unknown action in form\", action);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.state.topic, y: e.pageY, x: e.pageX });\n  }\n\n  handleShowContextMenuMessage(params, messageSpecificMenuItems) {\n    params.topicName = this.state.topic;\n    const menuItems = messageSpecificMenuItems || [];\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (topic) {\n      if (!topic.isChannelType()) {\n        menuItems.push('message_delete');\n      }\n      const acs = topic.getAccessMode();\n      if (acs && acs.isDeleter()) {\n        menuItems.push('message_delete_hard');\n      }\n    }\n    this.props.showContextMenu(params, menuItems);\n  }\n\n  handleNewChatAcceptance(action) {\n    this.props.onNewChat(this.state.topic, action);\n  }\n\n  handleEnablePeer(e) {\n    e.preventDefault();\n    this.props.onChangePermissions(this.state.topic, DEFAULT_P2P_ACCESS_MODE, this.state.topic);\n  }\n\n  sendKeyPress() {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (topic.isSubscribed()) {\n      topic.noteKeyPress();\n    }\n  }\n\n  // Send attachment as Drafty message:\n  // - if file is too large, upload it and send a s link.\n  // - if file is small enough, just send it in-band.\n  sendFileAttachment(file) {\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (file.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      if (!uploader) {\n        this.props.onError(this.props.intl.formatMessage(messages.cannot_initiate_upload));\n        return;\n      }\n      const uploadCompletionPromise = uploader.upload(file);\n      const msg = Drafty.attachFile(null, {\n        mime: file.type,\n        filename: file.name,\n        size: file.size,\n        urlPromise: uploadCompletionPromise\n      });\n      // Pass data and the uploader to the TinodeWeb.\n      this.props.sendMessage(msg, uploadCompletionPromise, uploader);\n    } else {\n      // Small enough to send inband.\n      fileToBase64(file,\n        (mime, bits, fname) => {\n          this.props.sendMessage(Drafty.attachFile(null, {mime: mime, data: bits, filename: fname}));\n        },\n        this.props.onError\n      );\n    }\n  }\n\n  // handleAttachFile method is called when [Attach file] button is clicked.\n  handleAttachFile(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    if (file.size > maxExternAttachmentSize) {\n      // Too large.\n      this.props.onError(this.props.intl.formatMessage(messages.file_attachment_too_large,\n        {size: bytesToHumanSize(file.size), limit: bytesToHumanSize(maxExternAttachmentSize)}), 'err');\n    } else {\n      this.setState({ docPreview: {\n        file: file,\n        filename: file.name,\n        size: file.size,\n        type: file.type\n      }});\n    }\n  }\n\n  // sendImageAttachment sends the image bits inband as Drafty message.\n  sendImageAttachment(caption, blob) {\n    const mime = this.state.imagePreview.type;\n    const width = this.state.imagePreview.width;\n    const height = this.state.imagePreview.height;\n    const fname = this.state.imagePreview.filename;\n\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (blob.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      if (!uploader) {\n        this.props.onError(this.props.intl.formatMessage(messages.cannot_initiate_upload));\n        return;\n      }\n      const uploadCompletionPromise = uploader.upload(blob);\n\n      // Make small preview to show while uploading.\n      imageScaled(blob, IMAGE_PREVIEW_DIM, IMAGE_PREVIEW_DIM, -1, false,\n        (tinyBlob) => {\n          // Convert tiny image into base64 for serialization and previewing.\n          blobToBase64(tinyBlob, (blobMime, tinyBits64) => {\n            let msg = Drafty.insertImage(null, 0, {\n              mime: mime,\n              _tempPreview: tinyBits64, // This preview will not be serialized.\n              width: width,\n              height: height,\n              filename: fname,\n              size: blob.size,\n              urlPromise: uploadCompletionPromise\n            });\n            if (caption) {\n              msg = Drafty.appendLineBreak(msg);\n              msg = Drafty.append(msg, Drafty.init(caption));\n            }\n            // Pass data and the uploader to the TinodeWeb.\n            this.props.sendMessage(msg, uploadCompletionPromise, uploader);\n          }\n        )},\n        // Failure\n        (err) => {\n          this.props.onError(err, 'err');\n        }\n      );\n      return;\n    }\n\n    // Upload the image if it's too big to be send inband.\n    blobToBase64(blob, (blobMime, bits64) => {\n      let msg = Drafty.insertImage(null, 0, {\n        mime: blobMime,\n        preview: bits64, // Serializable preview\n        width: width,\n        height: height,\n        filename: fname,\n        size: blob.size\n      });\n      if (caption) {\n        msg = Drafty.appendLineBreak(msg);\n        msg = Drafty.append(msg, Drafty.init(caption));\n      }\n      this.props.sendMessage(msg);\n    });\n  }\n\n  // handleAttachImage method is called when [Attach image] button is clicked.\n  handleAttachImage(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    // Get image dimensions and size, optionally scale it down.\n    imageScaled(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, maxExternAttachmentSize, false,\n      // Success\n      (blob, mime, width, height, fname) => {\n        this.setState({imagePreview: {\n          url: URL.createObjectURL(blob),\n          blob: blob,\n          filename: fname,\n          width: width,\n          height: height,\n          size: blob.size,\n          type: mime\n        }});\n      },\n      // Failure\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    );\n  }\n\n  handleCancelUpload(seq, uploader) {\n    const found = this.state.messages.find(msg => msg.seq == seq);\n    if (found) {\n      found._cancelled = true;\n    }\n    uploader.cancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n\n    let component;\n    if (this.props.hideSelf) {\n      component = null;\n    } else if (!this.state.topic) {\n      component = (\n        <LogoView\n          serverVersion={this.props.serverVersion}\n          serverAddress={this.props.serverAddress} />\n      );\n    } else {\n      let component2;\n      if (this.state.imagePreview) {\n        // Preview image before sending.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePreview}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendImageAttachment} />\n        );\n      } else if (this.state.imagePostview) {\n        // Expand received image.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePostview}\n            onClose={this.handleClosePreview} />\n        );\n      } else if (this.state.docPreview) {\n        // Preview attachment before sending.\n        component2 = (\n          <DocPreview\n            content={this.state.docPreview}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendFileAttachment} />\n        );\n      } else {\n        const topic = this.props.tinode.getTopic(this.state.topic);\n        const isChannel = topic.isChannelType();\n        const groupTopic = topic.isGroupType() && !isChannel;\n        let messageNodes = [];\n        let previousFrom = null;\n        let chatBoxClass = null;\n        for (let i=0; i<this.state.messages.length; i++) {\n          let msg = this.state.messages[i];\n          let nextFrom = null;\n\n          if (i + 1 < this.state.messages.length) {\n            nextFrom = this.state.messages[i+1].from || 'chan';\n          }\n\n          let sequence = 'single';\n          let thisFrom = msg.from || 'chan';\n          if (thisFrom == previousFrom) {\n            if (thisFrom == nextFrom) {\n              sequence = 'middle';\n            } else {\n              sequence = 'last';\n            }\n          } else if (thisFrom == nextFrom) {\n            sequence = 'first';\n          }\n          previousFrom = thisFrom;\n\n          const isReply = !(thisFrom == this.props.myUserId);\n          const deliveryStatus = topic.msgStatus(msg, true);\n\n          let userName, userAvatar, userFrom;\n          if (groupTopic) {\n            const user = topic.userDesc(thisFrom);\n            if (user && user.public) {\n              userName = user.public.fn;\n              userAvatar = makeImageUrl(user.public.photo);\n            }\n            userFrom = thisFrom;\n            chatBoxClass='chat-box group';\n          } else {\n            chatBoxClass='chat-box';\n          }\n\n          messageNodes.push(\n            <ChatMessage\n              tinode={this.props.tinode}\n              content={msg.content}\n              deleted={msg.hi}\n              mimeType={msg.head ? msg.head.mime : null}\n              timestamp={msg.ts}\n              response={isReply}\n              seq={msg.seq}\n              userFrom={userFrom}\n              userName={userName}\n              userAvatar={userAvatar}\n              sequence={sequence}\n              received={deliveryStatus}\n              uploader={msg._uploader}\n              viewportWidth={this.props.viewportWidth}\n              showContextMenu={this.state.channel? false : this.handleShowContextMenuMessage}\n              onImagePreview={this.handleImagePostview}\n              onFormResponse={this.handleFormResponse}\n              onError={this.props.onError}\n              onCancelUpload={this.handleCancelUpload}\n              key={msg.seq} />\n          );\n        }\n\n        let lastSeen = null;\n        if (isChannel) {\n          lastSeen = formatMessage(messages.channel);\n        } else {\n          const cont = this.props.tinode.getMeTopic().getContact(this.state.topic);\n          if (cont && Tinode.isP2PTopicName(cont.topic)) {\n            if (cont.online) {\n              lastSeen = formatMessage(messages.online_now);\n            } else if (cont.seen) {\n              lastSeen = formatMessage(messages.last_seen) + \": \" +\n                shortDateFormat(cont.seen.when, this.props.intl.locale);\n              // TODO: also handle user agent in c.seen.ua\n            }\n          }\n        }\n        const avatar = this.state.avatar || true;\n        const online = this.props.online ? 'online' + (this.state.typingIndicator ? ' typing' : '') : 'offline';\n\n        component2 = (\n          <>\n            <div id=\"topic-caption-panel\" className=\"caption-panel\">\n              {this.props.displayMobile ?\n                <a href=\"#\" id=\"hide-message-view\" onClick={(e) => {e.preventDefault(); this.props.onHideMessagesView();}}>\n                  <i className=\"material-icons\">arrow_back</i>\n                </a>\n                :\n                null}\n              <div className=\"avatar-box\">\n                <LetterTile\n                  avatar={avatar}\n                  topic={this.state.topic}\n                  title={this.state.title} />\n                {!isChannel ? <span className={online} /> : null}\n              </div>\n              <div id=\"topic-title-group\">\n                <div id=\"topic-title\" className=\"panel-title\">{\n                  this.state.title ||\n                  <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n                    description=\"Title shown when the topic has no name\" /></i>\n                }</div>\n                <div id=\"topic-last-seen\">{lastSeen}</div>\n              </div>\n              {groupTopic ?\n                <GroupSubs\n                  subscribers={this.state.onlineSubs} /> :\n                <div id=\"topic-users\" />\n              }\n              <div>\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">more_vert</i>\n                </a>\n              </div>\n            </div>\n            {this.props.displayMobile ?\n              <ErrorPanel\n                level={this.props.errorLevel}\n                text={this.props.errorText}\n                onClearError={this.props.onError} />\n              : null}\n            <LoadSpinner show={this.state.fetchingMessages} />\n            <div id=\"messages-container\">\n              <div id=\"messages-panel\" ref={this.handleScrollReference}>\n                <ul id=\"scroller\" className={chatBoxClass}>\n                  {messageNodes}\n                </ul>\n              </div>\n              {!this.state.isReader ?\n              <div id=\"write-only-background\">\n                {this.state.readingBlocked ?\n                <div id=\"write-only-note\">\n                  <FormattedMessage id=\"messages_not_readable\" defaultMessage=\"no access to messages\"\n                    description=\"Message shown in topic without the read access\" />\n                </div>\n                : null }\n              </div>\n              : null }\n            </div>\n            {this.state.peerMessagingDisabled && !this.state.unconfirmed ?\n              <div id=\"peer-messaging-disabled-note\">\n                <i className=\"material-icons secondary\">block</i> <FormattedMessage\n                  id=\"peers_messaging_disabled\" defaultMessage=\"Peer's messaging is disabled.\"\n                  description=\"Shown when the p2p peer's messaging is disabled\" /> <a href=\"#\"\n                    onClick={this.handleEnablePeer}><FormattedMessage id=\"enable_peers_messaging\"\n                    defaultMessage=\"Enable\" description=\"Call to action to enable peer's messaging\" /></a>.\n              </div> : null}\n            {this.state.unconfirmed ?\n              <Invitation onAction={this.handleNewChatAcceptance} />\n              :\n              <SendMessage\n                disabled={!this.state.isWriter}\n                onSendMessage={this.props.sendMessage}\n                onKeyPress={this.sendKeyPress}\n                onAttachFile={this.handleAttachFile}\n                onAttachImage={this.handleAttachImage}\n                onError={this.props.onError} />}\n          </>\n        );\n      }\n\n      component = <div id=\"topic-view\">{component2}</div>\n    }\n    return component;\n  }\n};\n\nexport default injectIntl(MessagesView);\n","// The <- button to be displayed in title bars.\nimport React from 'react';\n\nexport default class ButtonBack extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onBack();}}>\n        <i className=\"material-icons\">arrow_back</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class MenuContacts extends React.PureComponent {\n  render() {\n    return (\n      <div>\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onNewTopic();}}><i className=\"material-icons\">chat</i></a>\n        &nbsp;\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nexport default class MenuStart extends React.PureComponent {\n  render() {\n    return (\n        <div>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSignUp();}}><i className=\"material-icons\">person_add</i></a>\n          &nbsp;\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n        </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\nimport ButtonBack from './button-back.jsx';\nimport MenuContacts from './menu-contacts.jsx';\nimport MenuStart from './menu-start.jsx';\n\nexport default class SideNavbar extends React.PureComponent {\n  render() {\n    return (\n        <div id=\"side-caption-panel\" className=\"caption-panel\">\n          {this.props.onCancel ? <ButtonBack onBack={this.props.onCancel} /> : null}\n          {this.props.avatar ?\n            <div id=\"self-avatar\" className=\"avatar-box\">\n              <LetterTile\n                avatar={this.props.avatar}\n                topic={this.props.myUserId}\n                title={this.props.title} />\n            </div>\n            :\n            null}\n          <div id=\"sidepanel-title\" className=\"panel-title\">{this.props.title}</div>\n          {this.props.state === 'login' ?\n              <MenuStart onSignUp={this.props.onSignUp} onSettings={this.props.onSettings} /> :\n            this.props.state === 'contacts' ?\n              <MenuContacts onNewTopic={this.props.onNewTopic} onSettings={this.props.onSettings} /> :\n            null}\n        </div>\n    );\n  }\n};\n","/* ContactsView holds all contacts-related stuff */\nimport React from 'react';\nimport { FormattedMessage, defineMessages } from 'react-intl';\n\nimport ContactList from '../widgets/contact-list.jsx';\n\nimport { updateFavicon } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  archived_contacts_title: {\n    id: \"archived_contacts\",\n    defaultMessage: \"Archived contacts ({count})\",\n    description: \"Label for archived chats\"\n  }\n});\n\nexport default class ContactsView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAction = this.handleAction.bind(this);\n\n    this.state = ContactsView.deriveStateFromProps(props);\n  }\n\n  static deriveStateFromProps(props) {\n    const contacts = [];\n    let unreadThreads = 0;\n    let archivedCount = 0;\n    props.chatList.map((c) => {\n      const blocked = c.acs && !c.acs.isJoiner();\n      // Show only blocked contacts only when props.blocked == true.\n      if (blocked && props.blocked) {\n        contacts.push(c);\n      }\n      if (blocked || props.blocked) {\n        return;\n      }\n\n      if (c.private && c.private.arch) {\n        if (props.archive) {\n          contacts.push(c);\n        } else {\n          archivedCount ++;\n        }\n      } else if (!props.archive) {\n        contacts.push(c);\n        unreadThreads += c.unread > 0 ? 1 : 0;\n      }\n    });\n\n    contacts.sort((a, b) => {\n      return (b.touched || 0) - (a.touched || 0);\n    });\n\n    if (archivedCount > 0) {\n      contacts.push({\n        action: 'archive',\n        title: messages.archived_contacts_title,\n        values: {count: archivedCount}\n      });\n    }\n\n    return {\n      contactList: contacts,\n      unreadThreads: unreadThreads\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chatList != this.props.chatList ||\n        prevProps.archive != this.props.archive ||\n        prevProps.blocked != this.props.blocked) {\n      const newState = ContactsView.deriveStateFromProps(this.props);\n      this.setState(newState);\n      if (newState.unreadThreads != prevState.unreadThreads) {\n        updateFavicon(newState.unreadThreads);\n      }\n    }\n  }\n\n  handleAction(action_ignored) {\n    this.props.onShowArchive();\n  }\n\n  render() {\n    return (\n      <FormattedMessage id=\"contacts_not_found\"\n        defaultMessage=\"You have no chats<br />¯∖_(ツ)_/¯\"\n        description=\"HTML message shown in ContactList when no contacts are found\">{\n        (no_contacts) => <ContactList\n          connected={this.props.connected}\n          contacts={this.state.contactList}\n          emptyListMessage={no_contacts}\n          topicSelected={this.props.topicSelected}\n          myUserId={this.props.myUserId}\n          showOnline={true}\n          showUnread={true}\n          onTopicSelected={this.props.onTopicSelected}\n          showContextMenu={this.props.showContextMenu}\n          onAction={this.handleAction} />\n      }</FormattedMessage>\n    );\n  }\n};\n","// Helper functions for storing values in localStorage.\n// By default localStorage can store only strings, not objects or other types.\n\nexport default class LocalStorageUtil {\n  // Replace old object with the new one.\n  static setObject(key, value) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n\n  // Get stored object.\n  static getObject(key) {\n    const value = localStorage.getItem(key);\n    return value && JSON.parse(value);\n  }\n\n  // Partially or wholly update stored object.\n  static updateObject(key, value) {\n    const oldVal = this.getObject(key);\n    this.setObject(key, Object.assign(oldVal || {}, value));\n  }\n\n  // Just a wrapper.\n  static removeItem(key) {\n    localStorage.removeItem(key);\n  }\n}\n","// Account registration.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport { vcard } from '../lib/utils.js';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class CreateAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: '',\n      password: '',\n      email: '',\n      fn: '', // full/formatted name\n      imageDataUrl: null,\n      errorCleared: false,\n      saveToken: LocalStorageUtil.getObject('keep-logged-in')\n    };\n\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(password) {\n    this.setState({password: password});\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value})\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleToggleSaveToken() {\n    LocalStorageUtil.setObject('keep-logged-in', !this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({errorCleared: false});\n    this.props.onCreateAccount(\n      this.state.login.trim(),\n      this.state.password.trim(),\n      vcard(this.state.fn.trim().substring(0, MAX_TITLE_LENGTH), this.state.imageDataUrl),\n      {'meth': 'email', 'val': this.state.email});\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form className=\"panel-form-column\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n              description=\"Placeholer for username/login\">{\n              (login_prompt) => <input type=\"text\" placeholder={login_prompt} autoComplete=\"user-name\"\n                value={this.state.login} onChange={this.handleLoginChange} required autoFocus />\n            }</FormattedMessage>\n            <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n              description=\"Placeholder/prompt for entering password\">{\n              (password_prompt) => <VisiblePassword placeholder={password_prompt} autoComplete=\"new-password\"\n                value={this.state.password} onFinished={this.handlePasswordChange}\n                required={true} />\n            }</FormattedMessage>\n          </div>\n          <AvatarUpload\n            onImageChanged={this.handleImageChanged}\n            onError={this.props.onError} />\n        </div>\n        <div  className=\"panel-form-row\">\n          <FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n            description=\"Input placeholder for person's full name\">{\n            (full_name_prompt) => <input type=\"text\" placeholder={full_name_prompt} autoComplete=\"name\"\n              value={this.state.fn} onChange={this.handleFnChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <FormattedMessage id=\"email_prompt\" defaultMessage=\"Email, e.g. jdoe@example.com\"\n            description=\"Input placeholder for email entry\">{\n            (email_prompt) => <input type=\"email\" placeholder={email_prompt} autoComplete=\"email\"\n              value={this.state.email} onChange={this.handleEmailChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n            description=\"Label for a checkbox\">{\n            (stay_logged_in) => <label htmlFor=\"save-token\">&nbsp;{stay_logged_in}</label>\n          }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_up\" defaultMessage=\"Sign up\"\n              description=\"Create account button [Sign Up]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class EditAccountView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    this.state = {\n      fullName: me.public ? me.public.fn : undefined,\n      avatar: makeImageUrl(me.public ? me.public.photo : null)\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n                description=\"Label for full name editing\" />\n            </label>\n            <div className=\"large\">{this.state.fullName}</div>\n            <div>\n              <label className=\"small\"><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n                description=\"Label for user address (ID)\" /></label>&nbsp;\n              <tt>{this.props.myUserId}</tt>\n            </div>\n          </div>\n          <AvatarUpload\n            avatar={this.state.avatar}\n            readOnly={!this.state.owner}\n            uid={this.props.myUserId}\n            title={this.state.fullName} />\n        </div>\n        <div className=\"panel-form-row\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('general');}}>\n            <i className=\"material-icons\">edit</i>&nbsp;\n            <FormattedMessage id=\"button_edit\" defaultMessage=\"Edit\" description=\"Call to action [Edit]\" />\n          </a>\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('notif');}}>\n            <i className=\"material-icons\">notifications</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_notifications\"\n              defaultMessage=\"Notifications\" description=\"Sidepanel title for AccNotificationsView.\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('security');}}>\n            <i className=\"material-icons\">security</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_security\"\n              defaultMessage=\"Security\" description=\"Sidepanel title for AccSecurityView.\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('support');}}>\n            <i className=\"material-icons\">contact_support</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_support\"\n              defaultMessage=\"Support\" description=\"Sidepanel title for AccSupportView.\" />\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport TagManager from '../widgets/tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, asEmail, asPhone, vcard } from '../lib/utils.js';\n\nexport default class AccGeneralView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    this.state = {\n      fullName: me.public ? me.public.fn : undefined,\n      avatar: makeImageUrl(me.public ? me.public.photo : null),\n      tags: me.tags(),\n      credentials: me.getCredentials() || [],\n      addCredActive: false,\n      addCredInvalid: false,\n      newCred: '',\n      previousOnTags: me.onTagsUpdated\n    };\n\n    this.tnNewTags = this.tnNewTags.bind(this);\n    this.tnCredsUpdated = this.tnCredsUpdated.bind(this);\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleCredChange = this.handleCredChange.bind(this);\n    this.handleCredKeyDown = this.handleCredKeyDown.bind(this);\n    this.handleCredEntered = this.handleCredEntered.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n  }\n\n  componentDidMount() {\n    const me = this.props.tinode.getMeTopic();\n    me.onCredsUpdated = this.tnCredsUpdated;\n    me.onTagsUpdated = this.tnNewTags;\n  }\n\n  componentWillUnmount() {\n    const me = this.props.tinode.getMeTopic();\n    me.onTagsUpdated = this.state.previousOnTags;\n    me.onCredsUpdated = undefined;\n  }\n\n  tnNewTags(tags) {\n    this.setState({tags: tags});\n  }\n\n  tnCredsUpdated(creds) {\n    this.setState({credentials: creds || []});\n  }\n\n  handleFullNameUpdate(fn) {\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\n    if (fn) {\n      this.setState({fullName: fn});\n      this.props.onUpdateAccount(undefined, vcard(fn, null));\n    }\n  }\n\n  handleImageChanged(img) {\n    this.setState({avatar: img});\n    this.props.onUpdateAccount(undefined, vcard(null, img || Tinode.DEL_CHAR));\n  }\n\n  handleCredChange(e) {\n    this.setState({newCred: e.target.value, addCredInvalid: false});\n  }\n\n  handleCredKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({newCred: '', addCredActive: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleCredEntered(e);\n    }\n  }\n\n  handleCredEntered(e) {\n    let value = this.state.newCred.trim();\n    if (!value) {\n      this.setState({addCredActive: false, addCredInvalid: false});\n      return;\n    }\n\n    let val = asPhone(value);\n    let method;\n    if (val) {\n      method = 'tel';\n    } else {\n      val = asEmail(value);\n      if (val) {\n        method = 'email';\n      }\n    }\n    if (method) {\n      this.props.onCredAdd(method, val);\n      this.setState({addCredActive: false, newCred: ''});\n    } else {\n      this.setState({addCredInvalid: true});\n    }\n  }\n\n  handleTagsUpdated(tags) {\n    // Check if tags have actually changed.\n    if (arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      return;\n    }\n    this.props.onUpdateTags(tags);\n  }\n\n  render() {\n    const credentials = [];\n    this.state.credentials.map((cred) => {\n      credentials.push(<div key={cred.meth + \":\" + cred.val + \":\" + cred.done}>{cred.meth}: <tt>{cred.val}</tt>\n        <span > {!cred.done ?\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredConfirm(cred.meth, cred.val);}}>\n              <FormattedMessage id=\"validate_credential_action\" defaultMessage=\"confirm\"\n                description=\"Validate credentail call to action\" />\n            </a>\n          : null} <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredDelete(cred.meth, cred.val);}}><i\n            className=\"material-icons gray\">delete_outline</i></a></span></div>);\n    });\n\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\"><FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n              description=\"Label for full name editing\" /></label>\n            <div><FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n              description=\"Input placeholder for person's full name\">{\n              (full_name_placeholder) => <InPlaceEdit\n                placeholder={full_name_placeholder}\n                value={this.state.fullName}\n                onFinished={this.handleFullNameUpdate} />\n            }</FormattedMessage></div>\n          </div>\n          <AvatarUpload\n            avatar={this.state.avatar}\n            uid={this.props.myUserId}\n            title={this.state.fullName}\n            onImageChanged={this.handleImageChanged}\n            onError={this.props.onError} />\n        </div>\n        <div className=\"hr\" />\n        <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (user discovery)\"\n          description=\"Section title for TagManager\">{\n          (title_tag_manager) => <TagManager\n            title={title_tag_manager}\n            activated={false}\n            tags={this.state.tags}\n            tinode={this.props.tinode}\n            onSubmit={this.handleTagsUpdated} />\n        }</FormattedMessage>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_user_contacts\" defaultMessage=\"Contacts:\"\n            description=\"Label for user contacts\" />\n          </label>\n          <div className=\"quoted\">\n            {credentials}\n            {this.state.addCredActive ?\n              <input type=\"text\" value={this.state.value}\n                className={this.state.addCredInvalid ? 'invalid' : null}\n                placeholder=\"Phone number or email\" required=\"required\" autoFocus\n                onChange={this.handleCredChange} onKeyDown={this.handleCredKeyDown} onBlur={this.handleCredEntered} />\n              : null}\n            <div>\n              <a href=\"#\" onClick={(e) => {e.preventDefault(); this.setState({addCredActive: true});}}>\n                <i className=\"material-icons\">add</i>\n                <FormattedMessage id=\"button_add_another\" defaultMessage=\"Add another\" description=\"Call to action [+ add another]\" />\n              </a></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\n\nexport default class EditAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckboxClick = this.handleCheckboxClick.bind(this);\n  }\n\n  handleCheckboxClick(what, checked) {\n    if (what == 'sound') {\n      this.props.onToggleMessageSounds(checked);\n    } else if (what == 'alert') {\n      this.props.onTogglePushNotifications(checked);\n    } else if (what == 'incognito') {\n      this.props.onToggleIncognitoMode(checked);\n    }\n  }\n\n  render() {\n    return (\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"message-sound\">\n              <FormattedMessage id=\"label_message_sound\" defaultMessage=\"Message sound:\"\n                description=\"Label for message sounds toggle\" />\n            </label>\n            <CheckBox name=\"sound\" id=\"message-sound\"\n              checked={this.props.messageSounds} onChange={this.handleCheckboxClick} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"desktop-alerts\">\n            {this.props.desktopAlertsEnabled ?\n              <FormattedMessage id=\"label_push_notifications\" defaultMessage=\"Notification alerts:\"\n                description=\"Label for push notifications switch\" />\n              :\n              <FormattedMessage id=\"label_push_notifications_disabled\"\n                defaultMessage=\"Notification alerts (requires HTTPS):\"\n                description=\"Label for push notifications switch\" />\n            }\n            </label>\n            <CheckBox name=\"alert\" id=\"desktop-alerts\"\n              checked={this.props.desktopAlerts}\n              onChange={this.props.desktopAlertsEnabled ? this.handleCheckboxClick : null} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"incognito-mode\">\n              <FormattedMessage id=\"label_incognito_mode\" defaultMessage=\"Incognito mode:\"\n                description=\"Label for incognito mode toggle\" />\n            </label>\n            <CheckBox name=\"incognito\" id=\"incognito-mode\"\n              checked={this.props.incognitoMode} onChange={this.handleCheckboxClick} />\n          </div>\n        </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\n\nconst messages = defineMessages({\n  delete_account: {\n    id: 'delete_account',\n    defaultMessage: 'Delete account',\n    description: 'Title for delete account warning'\n  },\n  delete_account_warning: {\n    id: 'delete_account_arning',\n    defaultMessage: 'Are you sure you want to delete your account? It cannot be undone.',\n    description: 'Warning message when deleting an account'\n  }\n});\n\nclass AccSecurityView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    let blockedCount = 0;\n    me.contacts((c) => {\n      if (c.acs && !c.acs.isJoiner()) {\n        blockedCount ++;\n      }\n    });\n    const defacs = me.getDefaultAccess();\n    this.state = {\n      auth: defacs ? defacs.auth : null,\n      anon: defacs ? defacs.anon : null,\n      showPermissionEditorFor: undefined,\n      blockedCount: blockedCount,\n    };\n\n    this.handlePasswordUpdate = this.handlePasswordUpdate.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n  }\n\n  handlePasswordUpdate(pwd) {\n    this.setState({password: pwd});\n    this.props.onUpdateAccount(pwd);\n  }\n\n  handleLaunchPermissionsEditor(which) {\n    this.setState({\n      showPermissionEditorFor: which,\n      editedPermissions: this.state[which]\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handlePermissionsChanged(perm) {\n    let defacs = {};\n    defacs[this.state.showPermissionEditorFor] = perm;\n    this.props.onUpdateAccount(undefined, undefined, defacs);\n\n    let newState = {showPermissionEditorFor: undefined};\n    newState[this.state.showPermissionEditorFor] = perm;\n    this.setState(newState);\n  }\n\n  handleDeleteAccount(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.delete_account), // title\n      formatMessage(messages.delete_account_warning), // content\n      (() => { this.props.onDeleteAccount(); }), // onConfirm\n      null, // use default text \"OK\"\n      true, // Show Reject button\n      null  // use default text \"Cancel\"\n    );\n  }\n\n  render() {\n    return (\n      <React.Fragment>{this.state.showPermissionEditorFor ?\n        <PermissionsEditor\n          mode={this.state.editedPermissions}\n          skip=\"O\"\n          onSubmit={this.handlePermissionsChanged}\n          onCancel={this.handleHidePermissionsEditor} />\n        :\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_password\" defaultMessage=\"Password\"\n                  description=\"Label for password editing\" />\n            </label>\n            <div>\n              <FormattedMessage id=\"password_unchanged_prompt\" defaultMessage=\"Unchanged\"\n                description=\"Message in editor while password is unchanged\">{\n                (password_unchanged) => <InPlaceEdit\n                  placeholder={password_unchanged}\n                  type=\"password\"\n                  onFinished={this.handlePasswordUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <a href=\"#\" className=\"danger flat-button\" onClick={(e) => {e.preventDefault(); this.props.onLogout();}}>\n              <i className=\"material-icons\">exit_to_app</i> &nbsp;<FormattedMessage id=\"button_logout\"\n                defaultMessage=\"Logout\" description=\"Button [Logout]\" />\n            </a>\n            <a href=\"#\" className=\"danger flat-button\" onClick={(e) => {this.handleDeleteAccount(e);}}>\n              <i className=\"material-icons\">delete</i> &nbsp;<FormattedMessage id=\"button_delete_account\"\n                defaultMessage=\"Delete account\" description=\"Button [Delete account]\" />\n            </a>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <div>\n              <label className=\"small\">\n                <FormattedMessage id=\"label_default_access_mode\" defaultMessage=\"Default access mode:\"\n                description=\"Label for default access mode\" />\n              </label>\n            </div>\n            <div className=\"quoted\">\n              <div>Auth: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>{this.state.auth}</tt></div>\n              <div>Anon: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>{this.state.anon}</tt></div>\n            </div>\n          </div>\n          {this.state.blockedCount > 0 ?\n            <>\n              <div className=\"hr\" />\n              <div className=\"panel-form-row\">\n                <i className=\"material-icons\">block</i>&nbsp;\n                <a href=\"#\" className=\"gray\" onClick={(e) => {e.preventDefault(); this.props.onShowBlocked();}}>\n                  <FormattedMessage id=\"blocked_contacts_link\" defaultMessage=\"Blocked contacts ({count})\"\n                    values={{ count: this.state.blockedCount }} description=\"Blocked contacts link\" />\n                </a>\n              </div>\n            </>\n            : null }\n        </div>\n      }</React.Fragment>\n    );\n  }\n};\n\nexport default injectIntl(AccSecurityView);\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME, LINK_CONTACT_US, LINK_PRIVACY_POLICY, LINK_TERMS_OF_SERVICE } from '../config.js';\n\nexport default class AccSupportView extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          <a href={LINK_CONTACT_US} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">email</i> &nbsp;<FormattedMessage id=\"link_contact_us\"\n              defaultMessage=\"Contact Us\" description=\"Ancor text for contacting us by email\" />\n          </a>\n          <a href={LINK_TERMS_OF_SERVICE} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">description</i> &nbsp;<FormattedMessage id=\"link_terms_of_service\"\n              defaultMessage=\"Terms of Service\" description=\"Ancor text for terms of service link\" />\n          </a>\n          <a href={LINK_PRIVACY_POLICY} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">policy</i> &nbsp;<FormattedMessage id=\"link_privacy_policy\"\n              defaultMessage=\"Privacy Policy\" description=\"Ancor text for privacy policy link\" />\n          </a>\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\"\n              description=\"Label for a client version\" /></label>\n            {APP_NAME}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_sdk\" defaultMessage=\"SDK:\" /></label>\n            {Tinode.getLibrary()}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\"\n              description=\"Label for a server version\" /></label>\n            {this.props.serverVersion}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server_address\" defaultMessage=\"Server address:\" /></label>\n            {this.props.serverAddress}\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","// Login form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\n\nexport default class LoginView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: props.login,\n      password: '',\n      hostName: props.serverAddress,\n      saveToken: LocalStorageUtil.getObject('keep-logged-in')\n    };\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  handleToggleSaveToken() {\n    LocalStorageUtil.setObject('keep-logged-in', !this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onLogin(this.state.login.trim(), this.state.password.trim());\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form id=\"login-form\" onSubmit={this.handleSubmit}>\n        <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n          description=\"Placeholer for username/login\">\n        {\n          (login_prompt) => <input type=\"text\" id=\"inputLogin\"\n            placeholder={login_prompt}\n            autoComplete=\"username\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"none\"\n            value={this.state.login}\n            onChange={this.handleLoginChange}\n            required autoFocus />\n        }\n        </FormattedMessage>\n        <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n          description=\"Placeholder/prompt for entering password\">\n        {\n          (password_prompt) => <VisiblePassword type=\"password\" id=\"inputPassword\"\n            placeholder={password_prompt}\n            autoComplete=\"current-password\"\n            value={this.state.password}\n            onChange={this.handlePasswordChange}\n            required={true} />\n        }\n        </FormattedMessage>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <label htmlFor=\"save-token\">&nbsp;\n            <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n              description=\"Label for a checkbox\" />\n          </label>\n          <a href=\"#reset\">\n            <FormattedMessage id=\"forgot_password_link\" defaultMessage=\"Forgot password?\"\n              description=\"Link to Reset password form\" />\n          </a>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_in\" defaultMessage=\"Sign in\"\n              description=\"Button [Sign In]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n/* END Login */\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  invalid_id: {\n    id: 'error_invalid_id',\n    defaultMessage: 'Invalid ID',\n    description: 'Error message'\n  }\n});\n\nclass NewTopicById extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      groupId: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({groupId: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.groupId) {\n      const name = this.state.groupId.trim();\n      const prefix = name.substr(0, 3);\n      if (name.length > 3 && ['usr', 'grp', 'chn'].includes(prefix)) {\n        this.props.onSubmit(name);\n      } else {\n        this.props.onError(this.props.intl.formatMessage(messages.invalid_id), 'err');\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"group_user_id_prompt\" defaultMessage=\"Group or User ID\"\n          description=\"Prompt for entering user or group ID\">{\n          (prompt) => <input type=\"text\" placeholder={prompt}\n            value={this.state.groupId} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required autoFocus />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_subscribe\" defaultMessage=\"Subscribe\"\n              description=\"Button [Subscribe]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicById);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from './avatar-upload.jsx';\nimport CheckBox from './checkbox.jsx';\nimport TagManager from './tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class NewTopicGroup extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      fn: '', // full/formatted name\n      private: '',\n      imageDataUrl: null,\n      tags: [],\n      isChannel: false\n    };\n\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handlePrivateChange = this.handlePrivateChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleTagsChanged = this.handleTagsChanged.bind(this);\n    this.handleChannelToggle = this.handleChannelToggle.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handlePrivateChange(e) {\n    this.setState({private: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleTagsChanged(tags) {\n    this.setState({tags: tags});\n  }\n\n  handleChannelToggle() {\n    this.setState({isChannel: !this.state.isChannel});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const fn = this.state.fn.trim().substring(0, MAX_TITLE_LENGTH);\n    const comment = this.state.private.trim().substring(0, MAX_TITLE_LENGTH);\n    if (fn) {\n      this.props.onSubmit(fn, this.state.imageDataUrl, comment, this.state.tags, this.state.isChannel);\n    }\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n    return (\n      <form className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\" htmlFor=\"new-topic-fn\">\n              <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                description=\"Label for editing topic name\" />\n            </label>\n            <FormattedMessage id=\"topic_name_editing_placeholder\" defaultMessage=\"Freeform name of the group\"\n              description=\"Prompt for entering topic name\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-fn\" placeholder={placeholder}\n                value={this.state.fn} onChange={this.handleFnChange} autoFocus required />\n            }</FormattedMessage>\n            <br />\n            <label className=\"small\" htmlFor=\"new-topic-priv\">\n              <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                description=\"Label for editing 'private'\" />\n            </label>\n            <FormattedMessage id=\"private_editing_placeholder\" defaultMessage=\"Visible to you only\"\n              description=\"Placeholder for editing 'private'\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-priv\" placeholder={placeholder}\n                value={this.state.private} onChange={this.handlePrivateChange} />\n            }</FormattedMessage>\n          </div>\n          <AvatarUpload\n            onError={this.props.onError}\n            onImageChanged={this.handleImageChanged} />\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox checked={this.state.isChannel} onChange={this.handleChannelToggle}/>&nbsp;\n          <label onClick={this.handleChannelToggle}><FormattedMessage id=\"channel_prompt\"\n            defaultMessage=\"This is a channel\"\n            description=\"Checkbox label when creating a channel\" /></label>\n        </div>\n        <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (user discovery)\"\n          description=\"Section title for TagManager\">{\n          (title) => <TagManager\n            tags={this.state.tags}\n            activated={true}\n            onTagsChanged={this.handleTagsChanged}\n            tinode={this.props.tinode}\n            title={title} />\n        }</FormattedMessage>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses}>\n            <FormattedMessage id=\"button_create\" defaultMessage=\"Create\"\n              description=\"Button [Create]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nexport default class SearchContacts extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      edited: false,\n      search: ''\n    };\n\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  componentWillUnmount() {\n    if (this.state.edited) {\n      this.setState({search: '', edited: false});\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n  }\n\n  handleSearchChange(e) {\n    this.setState({search: e.target.value});\n  }\n\n  handleSearch(e) {\n    e.preventDefault();\n    var query = this.state.search.trim();\n    this.setState({edited: (query.length > 0)});\n    this.props.onSearchContacts(query.length > 0 ? query : Tinode.DEL_CHAR);\n  }\n\n  handleClear(e) {\n    e.preventDefault();\n    if (this.state.edited) {\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n    this.setState({search: '', edited: false});\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Enter') {\n      this.handleSearch(e);\n    } else if (e.key === 'Escape') {\n      this.handleClear();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <i className=\"material-icons search\">search</i>\n          <FormattedMessage id=\"search_placeholder\" defaultMessage=\"List like email:alice@example.com, tel:17025550003...\"\n            description=\"Placeholder in contacts search field\">{\n            (search_placeholder) => <input className=\"search\" type=\"text\"\n              placeholder={search_placeholder}\n              value={this.state.search} onChange={this.handleSearchChange}\n              onKeyDown={this.handleKeyDown} required autoFocus />\n          }</FormattedMessage>\n          <a href=\"#\" onClick={this.handleClear}>\n            <i className=\"material-icons\">close</i>\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","// Create new topic and invite users or send an invite.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport ContactList from '../widgets/contact-list.jsx';\nimport NewTopicById from '../widgets/new-topic-by-id.jsx';\nimport NewTopicGroup from '../widgets/new-topic-group.jsx';\nimport SearchContacts from '../widgets/search-contacts.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\nimport { vcard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  search_for_contacts: {\n    id: \"search_for_contacts\",\n    defaultMessage: \"Use search to find contacts\",\n    description: \"Text shown in contacts view when user entered no search query.\"\n  },\n  search_no_results: {\n    id: \"search_no_results\",\n    defaultMessage: \"Search returned no results\",\n    description: \"Text shown in contacts view when query returned no results.\"\n  }\n});\n\nclass NewTopicView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tabSelected: 'p2p',\n      searchQuery: null\n    };\n\n    this.handleTabClick = this.handleTabClick.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleNewGroupSubmit = this.handleNewGroupSubmit.bind(this);\n    this.handleGroupByID = this.handleGroupByID.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.onInitFind();\n  }\n\n  handleTabClick(e) {\n    e.preventDefault();\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'tab', e.currentTarget.dataset.id));\n    this.setState({tabSelected: e.currentTarget.dataset.id});\n  }\n\n  handleSearchContacts(query) {\n    this.props.onSearchContacts(query);\n    this.setState({searchQuery: Tinode.isNullValue(query) ? null : query});\n  }\n\n  handleContactSelected(sel) {\n    if (this.state.tabSelected === 'p2p') {\n      HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n      this.props.onCreateTopic(sel);\n    }\n  }\n\n  handleNewGroupSubmit(name, dataUrl, priv, tags, isChannel) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(undefined, vcard(name, dataUrl), priv, tags, isChannel);\n  }\n\n  handleGroupByID(topicName) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(topicName);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const no_contacts_placeholder = formatMessage(this.state.searchQuery ?\n      messages.search_no_results : messages.search_for_contacts);\n    return (\n      <div className=\"flex-column\">\n        <ul className=\"tabbar\">\n          <li className={this.state.tabSelected === \"p2p\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"p2p\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_find_user\" defaultMessage=\"find\"\n                description=\"Tab title Find\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"grp\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"grp\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_new_group\" defaultMessage=\"new group\"\n                description=\"Tab title New Group\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"byid\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"byid\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_group_by_id\" defaultMessage=\"by id\"\n                description=\"Tab title Find topic by ID\" />\n            </a>\n          </li>\n        </ul>\n        {this.state.tabSelected === 'grp' ?\n          <NewTopicGroup\n            tinode={this.props.tinode}\n            onSubmit={this.handleNewGroupSubmit} /> :\n          this.state.tabSelected === 'byid' ?\n            <NewTopicById\n              onSubmit={this.handleGroupByID}\n              onError={this.props.onError} /> :\n            <div className=\"flex-column\">\n              <SearchContacts\n                type=\"p2p\"\n                onSearchContacts={this.handleSearchContacts} />\n              <ContactList\n                contacts={this.props.searchResults}\n                myUserId={this.props.myUserId}\n                emptyListMessage={no_contacts_placeholder}\n                showOnline={false}\n                showUnread={false}\n                showContextMenu={false}\n                onTopicSelected={this.handleContactSelected} />\n            </div>}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicView);\n","// A password reset form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\n\nexport default class PasswordResetView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n  }\n\n  componentDidMount() {\n    let parsed = HashNavigation.parseUrlHash(window.location.hash);\n    this.setState({token: parsed.params.token, scheme: parsed.params.scheme});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.token) {\n      this.props.onReset(this.state.scheme, this.state.password.trim(), this.state.token);\n    } else {\n      this.props.onRequest('email', this.state.email.trim());\n    }\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  render() {\n    let reset = (this.state.token && this.state.scheme);\n    return (\n      <form id=\"password-reset-form\" onSubmit={this.handleSubmit}>\n        {reset ?\n          <FormattedMessage id=\"new_password_placeholder\" defaultMessage=\"Enter new password\"\n            description=\"Placeholder for entering new password\">{\n            (placeholder) => <VisiblePassword\n              placeholder={placeholder}\n              autoComplete=\"new-password\"\n              value={this.state.password}\n              required={true} autoFocus={true}\n              onChange={this.handlePasswordChange} />\n          }</FormattedMessage>\n          :\n          <>\n            <label htmlFor=\"inputEmail\">\n              <FormattedMessage id=\"label_reset_password\"\n                defaultMessage=\"Send a password reset email:\"\n                description=\"Label for password reset field\" />\n            </label>\n            <FormattedMessage id=\"credential_email_prompt\" defaultMessage=\"Your registration email\"\n              description=\"Placeholder for entering email\">{\n              (placeholder) => <input type=\"email\" id=\"inputEmail\"\n                placeholder={placeholder}\n                autoComplete=\"email\"\n                value={this.state.email}\n                onChange={this.handleEmailChange}\n                required autoFocus />\n            }</FormattedMessage>\n          </>\n        }\n        <div className=\"dialog-buttons\">\n          <button className=\"primary\" type=\"submit\">{reset ?\n            <FormattedMessage id=\"button_reset\" defaultMessage=\"Reset\" description=\"Button [Reset]\" /> :\n            <FormattedMessage id=\"button_send_request\" defaultMessage=\"Send request\"\n              description=\"Button [Send request]\" />\n          }</button>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react';\n\nimport { KNOWN_HOSTS } from '../config.js';\n\n/* Combobox for selecting host name */\n\nexport default class HostSelector extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hostName: props.serverAddress,\n      changed: false\n    };\n\n    this.handleHostNameChange = this.handleHostNameChange.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handleHostNameChange(e) {\n    this.setState({hostName: e.target.value, changed: true});\n  }\n\n  handleEditingFinished() {\n    if (this.state.changed) {\n      this.setState({changed: false});\n      this.props.onServerAddressChange(this.state.hostName.trim());\n    }\n  }\n\n  render() {\n    var hostOptions = [];\n    for (let key in KNOWN_HOSTS) {\n      let item = KNOWN_HOSTS[key];\n      hostOptions.push(\n        <option key={item} value={item} />\n      );\n    }\n    return (\n      <div className=\"panel-form-row\">\n        <input type=\"search\" id=\"host-name\" placeholder={this.props.hostName} list=\"known-hosts\"\n          className=\"quoted\" value={this.state.hostName} onChange={this.handleHostNameChange}\n          onBlur={this.handleEditingFinished} required />\n        <datalist id=\"known-hosts\">\n          {hostOptions}\n        </datalist>\n      </div>\n    );\n  }\n}\n","// Tinode config panel.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport HostSelector from '../widgets/host-selector.jsx';\n\nexport default class SettingsView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transport: props.transport || 'def',\n      serverAddress: props.serverAddress,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleTransportSelected = this.handleTransportSelected.bind(this);\n    this.handleServerAddressChange = this.handleServerAddressChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onUpdate({\n      transport: this.state.transport,\n      serverAddress: this.state.serverAddress\n    });\n  }\n\n  handleTransportSelected(e) {\n    this.setState({transport: e.currentTarget.value});\n  }\n\n  handleServerAddressChange(name) {\n    this.setState({serverAddress: name});\n  }\n\n  render() {\n    const names = {def: \"default\", ws: \"websocket\", lp: \"long polling\"};\n    var transportOptions = [];\n    var instance = this;\n    ['def', 'ws', 'lp'].map(function(item) {\n      var id = 'transport-' + item;\n      var name = names[item];\n      transportOptions.push(\n        <li key={item}>\n          <input type=\"radio\" id={id} name=\"transport-select\" value={item}\n            checked={instance.state.transport === item}\n            onChange={instance.handleTransportSelected} />\n          <label htmlFor={id}>{name}</label>\n        </li>\n      );\n    });\n\n    return (\n      <form id=\"settings-form\" className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_server_to_use\" defaultMessage=\"Server to use:\"\n              description=\"Label for server selector in SettingsView\" />\n          </label>\n        </div>\n        <HostSelector serverAddress={this.state.serverAddress}\n          onServerAddressChange={this.handleServerAddressChange} />\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_wire_transport\" defaultMessage=\"Wire transport:\"\n              description=\"Label for wire transport selection in SettingsView\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ul className=\"quoted\">\n            {transportOptions}\n          </ul>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button type=\"submit\" className=\"primary\">\n            <FormattedMessage id=\"button_update\" defaultMessage=\"Update\"\n              description=\"Button [Update]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// ValidationView: panel for confirming credentials, like email or phone.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  phone: {\n    id: 'phone_dative',\n    defaultMessage: 'phone',\n    description: \"Dative case of 'phone', i.e. 'phone' in 'by phone'\",\n  },\n  email: {\n    id: 'email_dative',\n    defaultMessage: 'email',\n    description: \"Dative case of 'email', i.e. 'email' in 'by email'\",\n  }\n});\n\nclass ValidationView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      code: props.credCode || ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({code: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    } else if (e.key == 'Escape') {\n      this.handleCancel(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.code && this.state.code.trim()) {\n      this.props.onSubmit(this.props.credMethod, this.state.code.trim());\n    }\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel();\n  }\n\n\n  render() {\n    const { formatMessage } = this.props.intl;\n    const methods = {'email': formatMessage(messages.email), 'tel': formatMessage(messages.phone)};\n    let method = methods[this.props.credMethod] || this.props.credMethod;\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\" htmlFor=\"enter-confirmation-code\">\n            <FormattedMessage id=\"enter_confirmation_code_prompt\"\n              defaultMessage=\"Enter confirmation code sent to you by {method}:\"\n              description=\"Request to enter confirmation code\"\n              values={{method: method}} />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"numeric_confirmation_code_prompt\"\n          defaultMessage=\"Numbers only\" description=\"Prompt for numeric conformation code\">{\n          (numbers_only) => <input type=\"text\" id=\"enter-confirmation-code\"\n            placeholder={numbers_only}\n            value={this.state.code} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_confirm\" defaultMessage=\"Confirm\" description=\"Button [Confirm]\" />\n          </button>\n          <button className=\"secondary\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ValidationView);\n","import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport SideNavbar from '../widgets/side-navbar.jsx';\n\nimport ContactsView from './contacts-view.jsx';\nimport CreateAccountView from './create-account-view.jsx';\nimport EditAccountView from './edit-account-view.jsx';\nimport AccGeneralView from './acc-general-view.jsx';\nimport AccNotificationsView from './acc-notifications-view.jsx';\nimport AccSecurityView from './acc-security-view.jsx';\nimport AccSupportView from './acc-support-view.jsx';\nimport LoginView from './login-view.jsx';\nimport NewTopicView from './new-topic-view.jsx';\nimport PasswordResetView from './password-reset-view.jsx';\nimport SettingsView from './settings-view.jsx';\nimport ValidationView from './validation-view.jsx';\n\n// Panel titles for translation.\nconst messages = defineMessages({\n  login: {\n    id: 'sidepanel_title_login',\n    description: 'Sidepanel title for LoginView.',\n    defaultMessage: 'Sign In'\n  },\n  register: {\n    id: 'sidepanel_title_register',\n    description: 'Sidepanel title for CreateAccountView.',\n    defaultMessage: 'Create Account'\n  },\n  settings: {\n    id: 'sidepanel_title_settings',\n    description: 'Sidepanel title for SettingsView.',\n    defaultMessage: 'Settings'\n  },\n  edit: {\n    id: 'sidepanel_title_account_settings',\n    description: 'Sidepanel title for EditAccountView.',\n    defaultMessage: 'Account Settings'\n  },\n  general: {\n    id: 'sidepanel_title_acc_general',\n    description: 'Sidepanel title for AccGeneralView.',\n    defaultMessage: 'General'\n  },\n  security: {\n    id: 'sidepanel_title_acc_security',\n    description: 'Sidepanel title for AccSecurityView.',\n    defaultMessage: 'Security'\n  },\n  notif: {\n    id: 'sidepanel_title_acc_notifications',\n    description: 'Sidepanel title for AccNotificationsView.',\n    defaultMessage: 'Notifications'\n  },\n  support: {\n    id: 'sidepanel_title_acc_support',\n    description: 'Sidepanel title for AccSupportView.',\n    defaultMessage: 'Support'\n  },\n  newtpk: {\n    id: 'sidepanel_title_newtpk',\n    description: 'Sidepanel title for NewTopicView.',\n    defaultMessage: 'Start New Chat'\n  },\n  cred: {\n    id: 'sidepanel_title_cred',\n    description: 'Sidepanel title for ValidationView.',\n    defaultMessage: 'Confirm Credentials'\n  },\n  reset: {\n    id: 'sidepanel_title_reset',\n    description: 'Sidepanel title for PasswordResetView.',\n    defaultMessage: 'Reset Password'\n  },\n  archive: {\n    id: 'sidepanel_title_archive',\n    description: 'Sidepanel title for ContactsView-Archive.',\n    defaultMessage: 'Archived Chats'\n  },\n  blocked: {\n    id: 'sidepanel_title_blocked',\n    description: 'Sidepanel title for ContactsView-Blocked.',\n    defaultMessage: 'Blocked Chats'\n  }\n});\n\nclass SidepanelView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleLoginRequested = this.handleLoginRequested.bind(this);\n    this.handleNewTopic = this.handleNewTopic.bind(this);\n  }\n\n  handleLoginRequested(login, password) {\n    this.props.onLoginRequest(login, password);\n  }\n\n  handleNewTopic() {\n    this.props.onBasicNavigate('newtpk');\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const view = this.props.state || (this.props.myUserId ? 'contacts' : 'login');\n\n    let title, avatar;\n    if (view == 'contacts') {\n      title = this.props.title;\n      avatar = this.props.avatar ? this.props.avatar : true;\n    } else {\n      title = formatMessage(messages[view]);\n      avatar = false;\n    }\n\n    let onCancel;\n    if (['login', 'contacts'].indexOf(view) == -1) {\n      onCancel = this.props.onCancel;\n    }\n\n    return (\n      <div id=\"sidepanel\" className={this.props.hideSelf ? 'nodisplay' : null}>\n        <SideNavbar\n          state={view}\n          title={title}\n          avatar={avatar}\n          myUserId={this.props.myUserId}\n          onSignUp={this.props.onSignUp}\n          onSettings={this.props.onSettings}\n          onNewTopic={this.handleNewTopic}\n          onCancel={onCancel} />\n\n        <ErrorPanel\n          level={this.props.errorLevel}\n          text={this.props.errorText}\n          action={this.props.errorAction}\n          actionText={this.props.errorActionText}\n          onClearError={this.props.onError} />\n\n        <LoadSpinner show={this.props.loadSpinnerVisible} />\n\n        {view === 'login' ?\n          <LoginView\n            login={this.props.login}\n            disabled={this.props.loginDisabled}\n            onLogin={this.handleLoginRequested} /> :\n\n          view === 'register' ?\n          <CreateAccountView\n            onCreateAccount={this.props.onCreateAccount}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'settings' ?\n          <SettingsView\n            transport={this.props.transport}\n            serverAddress={this.props.serverAddress}\n            onCancel={this.props.onCancel}\n            onUpdate={this.props.onGlobalSettings} /> :\n\n          view === 'edit' ?\n          <EditAccountView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            onBasicNavigate={this.props.onBasicNavigate} /> :\n\n          view === 'general' ?\n          <AccGeneralView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            onUpdateAccount={this.props.onUpdateAccount}\n            onUpdateTags={this.props.onUpdateAccountTags}\n            onCredAdd={this.props.onCredAdd}\n            onCredDelete={this.props.onCredDelete}\n            onCredConfirm={this.props.onCredConfirm}\n            onBasicNavigate={this.props.onBasicNavigate}\n            onError={this.props.onError} /> :\n\n          view === 'notif' ?\n          <AccNotificationsView\n            messageSounds={this.props.messageSounds}\n            desktopAlerts={this.props.desktopAlerts}\n            desktopAlertsEnabled={this.props.desktopAlertsEnabled}\n            incognitoMode={this.props.incognitoMode}\n            onTogglePushNotifications={this.props.onTogglePushNotifications}\n            onToggleMessageSounds={this.props.onToggleMessageSounds}\n            onToggleIncognitoMode={this.props.onToggleIncognitoMode} /> :\n\n          view === 'security' ?\n          <AccSecurityView\n            tinode={this.props.tinode}\n            onUpdateAccount={this.props.onUpdateAccount}\n            onLogout={this.props.onLogout}\n            onDeleteAccount={this.props.onDeleteAccount}\n            onShowAlert={this.props.onShowAlert}\n            onShowBlocked={this.props.onShowBlocked} /> :\n\n          view === 'support' ?\n          <AccSupportView\n            serverAddress={this.props.serverAddress}\n            serverVersion={this.props.serverVersion} /> :\n\n          (view === 'contacts' || view == 'archive' || view == 'blocked') ?\n          <ContactsView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            connected={this.props.connected}\n            topicSelected={this.props.topicSelected}\n            archive={view == 'archive'}\n            blocked={view == 'blocked'}\n            chatList={this.props.chatList}\n            showContextMenu={this.props.showContextMenu}\n            onTopicSelected={this.props.onTopicSelected}\n            onShowArchive={this.props.onShowArchive} /> :\n\n          view === 'newtpk' ?\n          <NewTopicView\n            tinode={this.props.tinode}\n            searchResults={this.props.searchResults}\n            onInitFind={this.props.onInitFind}\n            onSearchContacts={this.props.onSearchContacts}\n            onCreateTopic={this.props.onCreateTopic}\n            onError={this.props.onError} /> :\n\n          view === 'cred' ?\n          <ValidationView\n            credCode={this.props.credCode}\n            credMethod={this.props.credMethod}\n            onSubmit={this.props.onValidateCredentials}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'reset' ?\n          <PasswordResetView\n            onRequest={this.props.onPasswordResetRequest}\n            onReset={this.props.onResetPassword} /> :\n          null}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SidepanelView);\n","import { KNOWN_HOSTS, DEFAULT_HOST } from '../config.js';\n\n// Detect server address from the URL\nexport function detectServerAddress() {\n  let host = DEFAULT_HOST;\n  if (typeof window.location == 'object') {\n    if (window.location.protocol == 'file:' || window.location.hostname == 'localhost') {\n      host = KNOWN_HOSTS.local;\n    } else if (window.location.hostname) {\n      host = window.location.hostname + (window.location.port ? ':' + window.location.port : '');\n    }\n  }\n  return host;\n}\n\n// Detect if the page is served over HTTPS.\nexport function isSecureConnection() {\n  if (typeof window.location == 'object') {\n    return window.location.protocol == 'https:';\n  }\n  return false;\n}\n\nexport function isLocalHost() {\n  if (typeof window.location == 'object') {\n    return window.location.hostname == 'localhost';\n  }\n  return false;\n}\n","// The top-level class to hold all functionality together.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport * as firebase from 'firebase/app';\nimport 'firebase/messaging';\n\nimport Tinode from 'tinode-sdk';\n\nimport Alert from '../widgets/alert.jsx';\nimport ContextMenu from '../widgets/context-menu.jsx';\n\nimport InfoView from './info-view.jsx';\nimport MessagesView from './messages-view.jsx';\nimport SidepanelView from './sidepanel-view.jsx';\n\nimport { API_KEY, APP_NAME, DEFAULT_P2P_ACCESS_MODE, LOGGING_ENABLED,\n  MEDIA_BREAKPOINT, RECEIVED_DELAY } from '../config.js';\nimport { PACKAGE_VERSION } from '../version.js';\nimport { base64ReEncode, makeImageUrl } from '../lib/blob-helpers.js';\nimport { detectServerAddress, isLocalHost, isSecureConnection } from '../lib/host-name.js';\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { secondsToTime } from '../lib/strformat.js'\nimport { updateFavicon } from '../lib/utils.js';\n\n// Sound to play on message received.\nconst POP_SOUND = new Audio('audio/msg.mp3');\n\nconst messages = defineMessages({\n  reconnect_countdown: {\n    id: 'reconnect_countdown',\n    defaultMessage: 'Disconnected. Reconnecting in {seconds}…',\n    description: 'Message shown when an app update is available.'\n  },\n  reconnect_now: {\n    id: 'reconnect_now',\n    defaultMessage: 'Try now',\n    description: 'Prompt for reconnecting now'\n  },\n  push_init_failed: {\n    id: 'push_init_failed',\n    defaultMessage: 'Failed to initialize push notifications',\n    description: 'Error message when push notifications have failed to initialize.'\n  },\n  invalid_security_token: {\n    id: 'invalid_security_token',\n    defaultMessage: 'Invalid security token',\n    description: 'Error message when resetting password.'\n  },\n  no_connection: {\n    id: 'no_connection',\n    defaultMessage: 'No connection',\n    description: 'Warning that the user is offline.'\n  },\n  code_doesnot_match: {\n    id: 'code_doesnot_match',\n    defaultMessage: 'Code does not match',\n    description: 'Error message when the credential validation code is incorrect.'\n  },\n  menu_item_info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  }\n});\n\nclass TinodeWeb extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = this.getBlankState();\n\n    this.handleResize = this.handleResize.bind(this);\n    this.handleHashRoute = this.handleHashRoute.bind(this);\n    this.handleOnline = this.handleOnline.bind(this);\n    this.checkForAppUpdate = this.checkForAppUpdate.bind(this);\n    this.handleVisibilityEvent = this.handleVisibilityEvent.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.handleLoginRequest = this.handleLoginRequest.bind(this);\n    this.handleConnected = this.handleConnected.bind(this);\n    this.handleAutoreconnectIteration = this.handleAutoreconnectIteration.bind(this);\n    this.doLogin = this.doLogin.bind(this);\n    this.handleCredentialsRequest = this.handleCredentialsRequest.bind(this);\n    this.handleLoginSuccessful = this.handleLoginSuccessful.bind(this);\n    this.handleDisconnect = this.handleDisconnect.bind(this);\n    this.tnMeMetaDesc = this.tnMeMetaDesc.bind(this);\n    this.tnMeContactUpdate = this.tnMeContactUpdate.bind(this);\n    this.tnMeSubsUpdated = this.tnMeSubsUpdated.bind(this);\n    this.resetContactList = this.resetContactList.bind(this);\n    this.tnData = this.tnData.bind(this);\n    this.tnInitFind = this.tnInitFind.bind(this);\n    this.tnFndSubsUpdated = this.tnFndSubsUpdated.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleTopicSelected = this.handleTopicSelected.bind(this);\n    this.handleHideMessagesView = this.handleHideMessagesView.bind(this);\n    this.handleSendMessage = this.handleSendMessage.bind(this);\n    this.handleNewChatInvitation = this.handleNewChatInvitation.bind(this);\n    this.handleNewAccount = this.handleNewAccount.bind(this);\n    this.handleNewAccountRequest = this.handleNewAccountRequest.bind(this);\n    this.handleUpdateAccountRequest = this.handleUpdateAccountRequest.bind(this);\n    this.handleUpdateAccountTagsRequest = this.handleUpdateAccountTagsRequest.bind(this);\n    this.handleToggleIncognitoMode = this.handleToggleIncognitoMode.bind(this);\n    this.handleSettings = this.handleSettings.bind(this);\n    this.handleGlobalSettings = this.handleGlobalSettings.bind(this);\n    this.handleShowArchive = this.handleShowArchive.bind(this);\n    this.handleShowBlocked = this.handleShowBlocked.bind(this);\n    this.handleToggleMessageSounds = this.handleToggleMessageSounds.bind(this);\n    this.handleCredAdd = this.handleCredAdd.bind(this);\n    this.handleCredDelete = this.handleCredDelete.bind(this);\n    this.handleCredConfirm = this.handleCredConfirm.bind(this);\n    this.initFCMessaging = this.initFCMessaging.bind(this);\n    this.togglePushToken = this.togglePushToken.bind(this);\n    this.requestPushToken = this.requestPushToken.bind(this);\n    this.handlePushMessage = this.handlePushMessage.bind(this);\n    this.handleSidepanelCancel = this.handleSidepanelCancel.bind(this);\n    this.handleStartTopicRequest = this.handleStartTopicRequest.bind(this);\n    this.handleNewTopicCreated = this.handleNewTopicCreated.bind(this);\n    this.handleTopicUpdateRequest = this.handleTopicUpdateRequest.bind(this);\n    this.handleChangePermissions = this.handleChangePermissions.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n    this.handleDeleteMessagesRequest = this.handleDeleteMessagesRequest.bind(this);\n    this.handleLeaveUnsubRequest = this.handleLeaveUnsubRequest.bind(this);\n    this.handleBlockTopicRequest = this.handleBlockTopicRequest.bind(this);\n    this.handleReportTopic = this.handleReportTopic.bind(this);\n    this.handleShowContextMenu = this.handleShowContextMenu.bind(this);\n    this.defaultTopicContextMenu = this.defaultTopicContextMenu.bind(this);\n    this.handleHideContextMenu = this.handleHideContextMenu.bind(this);\n    this.handleShowAlert = this.handleShowAlert.bind(this);\n    this.handleShowInfoView = this.handleShowInfoView.bind(this);\n    this.handleHideInfoView = this.handleHideInfoView.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleValidateCredentialsRequest = this.handleValidateCredentialsRequest.bind(this);\n    this.handlePasswordResetRequest = this.handlePasswordResetRequest.bind(this);\n    this.handleResetPassword = this.handleResetPassword.bind(this);\n    this.handleContextMenuAction = this.handleContextMenuAction.bind(this);\n  }\n\n  getBlankState() {\n    const settings = LocalStorageUtil.getObject('settings') || {};\n    const persist = !!LocalStorageUtil.getObject('keep-logged-in');\n\n    return {\n      connected: false,\n      // Connected and subscribed to 'me'\n      ready: false,\n      // Try to re-login on new connection.\n      autoLogin: false,\n      transport: settings.transport || null,\n      serverAddress: settings.serverAddress || detectServerAddress(),\n      serverVersion: \"no connection\",\n      // \"On\" is the default, so saving the \"off\" state.\n      messageSounds: !settings.messageSoundsOff,\n      incognitoMode: false,\n      desktopAlerts: persist && settings.desktopAlerts,\n      desktopAlertsEnabled: (isSecureConnection() || isLocalHost()) &&\n        (typeof firebase != 'undefined') && (typeof navigator != 'undefined') &&\n        (typeof FIREBASE_INIT != 'undefined'),\n      firebaseToken: persist ? LocalStorageUtil.getObject('firebase-token') : null,\n\n      applicationVisible: !document.hidden,\n\n      errorText: '',\n      errorLevel: null,\n      errorAction: undefined,\n      errorActionText: null,\n\n      sidePanelSelected: 'login',\n      sidePanelTitle: null,\n      sidePanelAvatar: null,\n      loadSpinnerVisible: false,\n\n      login: '',\n      password: '',\n      myUserId: null,\n      liveConnection: navigator.onLine,\n      topicSelected: '',\n      topicSelectedOnline: false,\n      topicSelectedAcs: null,\n      newTopicParams: null,\n      loginDisabled: false,\n      displayMobile: (window.innerWidth <= MEDIA_BREAKPOINT),\n      showInfoPanel: false,\n      mobilePanel: 'sidepanel',\n\n      contextMenuVisible: false,\n      contextMenuBounds: null,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuItems: [],\n\n      // Modal alert dialog.\n      alertVisible: false,\n      alertParams: {},\n\n      // Chats as shown in the ContactsView\n      chatList: [],\n      // Contacts returned by a search query.\n      searchResults: [],\n      // Merged results of a search query and p2p chats.\n      searchableContacts: [],\n      credMethod: undefined,\n      credCode: undefined,\n      // Topic to go to after login.\n      requestedTopic: undefined\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    window.addEventListener('online', (e) => { this.handleOnline(true); });\n    window.addEventListener('offline', (e) => { this.handleOnline(false); });\n    window.addEventListener('hashchange', this.handleHashRoute);\n    // Process background notifications from the service worker.\n    const serviceWorkerChannel = new BroadcastChannel('tinode-sw');\n    serviceWorkerChannel.addEventListener('message', this.handlePushMessage);\n\n    // Window/tab visible or invisible for pausing timers.\n    document.addEventListener('visibilitychange', this.handleVisibilityEvent);\n\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n\n    const keepLoggedIn = LocalStorageUtil.getObject('keep-logged-in');\n\n    new Promise((resolve, reject) => {\n      this.tinode = TinodeWeb.tnSetup(this.state.serverAddress, this.state.transport,\n        this.props.intl.locale, keepLoggedIn, resolve);\n      this.tinode.onConnect = this.handleConnected;\n      this.tinode.onDisconnect = this.handleDisconnect;\n      this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n    }).then(() => {\n      // Initialize desktop alerts.\n      if (this.state.desktopAlertsEnabled) {\n        this.initFCMessaging().then(() => {\n          if (this.state.desktopAlerts) {\n            if (!this.state.firebaseToken) {\n              this.togglePushToken(true);\n            } else {\n              this.tinode.setDeviceToken(this.state.firebaseToken);\n            }\n          }\n        }).catch(() => {\n          // do nothing: handled earlier.\n          // catch needed to pervent unnecessary logging of error.\n        });\n      }\n\n      const token = keepLoggedIn ? LocalStorageUtil.getObject('auth-token') : undefined;\n\n      const parsedNav = HashNavigation.parseUrlHash(window.location.hash);\n      if (token) {\n        this.setState({autoLogin: true});\n\n        // When reading from storage, date is returned as string.\n        token.expires = new Date(token.expires);\n        this.tinode.setAuthToken(token);\n        this.tinode.connect().catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n        delete parsedNav.params.info;\n        delete parsedNav.params.tab;\n        parsedNav.path[0] = '';\n        HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsedNav.path, parsedNav.params));\n      } else if (!parsedNav.params.token) {\n        // No token, save possible topic name and navigating to blank state.\n        this.setState({requestedTopic: parsedNav.path[1]});\n        HashNavigation.navigateTo('');\n      }\n\n      this.readTimer = null;\n      this.readTimerCallback = null;\n\n      this.handleHashRoute();\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n    window.removeEventListener('hashchange', this.handleHashRoute);\n    document.removeEventListener('visibilitychange', this.handleVisibilityEvent);\n  }\n\n  // Setup transport (usually websocket) and server address. This will terminate connection with the server.\n  static tnSetup(serverAddress, transport, locale, persistentCache, onSetupCompleted) {\n    const tinode = new Tinode({appName: APP_NAME, host: serverAddress, apiKey: API_KEY, transport: transport,\n      secure: isSecureConnection(), persist: persistentCache}, onSetupCompleted);\n    tinode.setHumanLanguage(locale);\n    tinode.enableLogging(LOGGING_ENABLED, true);\n    return tinode;\n  }\n\n  // Notifiy Tinode that a push message was received from the server.\n  handlePushMessage(payload) {\n    if (payload.data.what == 'msg' && Tinode.isChannelTopicName(payload.data.topic)) {\n      // The last argument is a fake user Id: otherwise the update is seen as one from the current user.\n      this.tinode.oobNotification(payload.data.topic, payload.data.seq, 'fake-uid');\n    }\n  }\n\n  initFCMessaging() {\n    const {formatMessage, locale} = this.props.intl;\n    const onError = (msg, err) => {\n      console.log(msg, err);\n      this.handleError(formatMessage(messages.push_init_failed), 'err');\n      this.setState({desktopAlertsEnabled: false});\n    }\n\n    try {\n      this.fbPush = firebase.initializeApp(FIREBASE_INIT, APP_NAME).messaging();\n      this.fbPush.usePublicVapidKey(FIREBASE_INIT.messagingVapidKey);\n\n      return navigator.serviceWorker.register('/service-worker.js').then((reg) => {\n        this.checkForAppUpdate(reg);\n        this.fbPush.useServiceWorker(reg);\n        reg.active.postMessage(JSON.stringify({locale: locale, version: PACKAGE_VERSION}));\n        // Google could not be bothered to mention that\n        // onTokenRefresh is never called.\n        this.fbPush.onTokenRefresh(() => {\n          this.requestPushToken();\n        });\n\n        // FCM pushes for channels have to be handled even when the app is in the foreground.\n        this.fbPush.onMessage(this.handlePushMessage);\n\n        return reg;\n      }).catch((err) => {\n        // registration failed :(\n        onError(\"Failed to register service worker:\", err);\n        return new Promise.reject(err);\n      });\n    } catch (err) {\n      onError(\"Failed to initialize push notifications\", err);\n      return new Promise.reject(err);\n    }\n  }\n\n  handleResize() {\n    const mobile = document.documentElement.clientWidth <= MEDIA_BREAKPOINT;\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n    if (this.state.displayMobile != mobile) {\n      this.setState({displayMobile: mobile});\n    }\n  }\n\n  // Check if a newer version of TinodeWeb app is available at the server.\n  checkForAppUpdate(reg) {\n    reg.onupdatefound = () => {\n      const installingWorker = reg.installing;\n      installingWorker.onstatechange = () => {\n        if (installingWorker.state == 'installed' && navigator.serviceWorker.controller) {\n          const msg = <>\n            <FormattedMessage id=\"update_available\"\n              defaultMessage=\"Update available.\"\n              description=\"Message shown when an app update is available.\" /> <a href=\"\">\n              <FormattedMessage id=\"reload_update\"\n                defaultMessage=\"Reload\"\n                description=\"Call to action to reload application when update is available.\" />\n            </a>.</>;\n          this.handleError(msg, 'info');\n        }\n      }\n    }\n  }\n\n  // Handle for hashchange event: display appropriate panels.\n  handleHashRoute() {\n    const hash = HashNavigation.parseUrlHash(window.location.hash);\n    if (hash.path && hash.path.length > 0) {\n      // Left-side panel selector.\n      if (['register','settings','edit','notif','security','support','general',\n          'cred','reset','newtpk','archive','blocked','contacts',''].includes(hash.path[0])) {\n        this.setState({sidePanelSelected: hash.path[0]});\n      } else {\n        console.log(\"Unknown sidepanel view\", hash.path[0]);\n      }\n\n      // Topic for MessagesView selector.\n      if (hash.path.length > 1 && hash.path[1] != this.state.topicSelected) {\n        this.setState({\n          topicSelected: Tinode.topicType(hash.path[1]) ? hash.path[1] : null\n        });\n      }\n    } else {\n      // Empty hashpath\n      this.setState({sidePanelSelected: ''});\n    }\n\n    // Save validation credentials, if available.\n    if (hash.params.method) {\n      this.setState({ credMethod: hash.params.method });\n    }\n    if (hash.params.code) {\n      this.setState({ credCode: hash.params.code });\n    }\n\n    // Additional parameters of panels.\n    this.setState({\n      showInfoPanel: hash.params.info,\n      newTopicTabSelected: hash.params.tab\n    });\n  }\n\n  handleOnline(online) {\n    if (online) {\n      this.handleError();\n      clearInterval(this.reconnectCountdown);\n      this.tinode.reconnect();\n    } else {\n      this.handleError(this.props.intl.formatMessage(messages.no_connection), 'warn');\n    }\n    this.setState({liveConnection: online});\n  }\n\n  handleVisibilityEvent() {\n    this.setState({applicationVisible: !document.hidden});\n  }\n\n  handleError(err, level, action, actionText) {\n    this.setState({errorText: err, errorLevel: level, errorAction: action, errorActionText: actionText});\n  }\n\n  // User clicked Login button in the side panel.\n  handleLoginRequest(login, password) {\n    this.setState({\n      loginDisabled: true,\n      login: login,\n      password: password,\n      loadSpinnerVisible: true,\n      autoLogin: true\n    });\n    this.handleError('', null);\n\n    if (this.tinode.isConnected()) {\n      this.doLogin(login, password, {meth: this.state.credMethod, resp: this.state.credCode});\n    } else {\n      this.tinode.connect().catch((err) => {\n        // Socket error\n        this.setState({loginDisabled: false, autoLogin: false, loadSpinnerVisible: false});\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // Connection succeeded.\n  handleConnected() {\n    const params = this.tinode.getServerInfo();\n    this.setState({\n      serverVersion: params.ver + ' ' + (params.build ? params.build : 'none')\n    });\n\n    if (this.state.autoLogin) {\n      this.doLogin(this.state.login, this.state.password, {meth: this.state.credMethod, resp: this.state.credCode});\n    }\n  }\n\n  // Called for each auto-reconnect iteration.\n  handleAutoreconnectIteration(sec, prom) {\n    clearInterval(this.reconnectCountdown);\n\n    if (sec < 0) {\n      // Clear error\n      this.handleError();\n      return;\n    }\n\n    if (prom) {\n      // Reconnecting now\n      prom.then(() => {\n        // Reconnected: clear error\n        this.handleError();\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n      return;\n    }\n\n    const {formatMessage} = this.props.intl;\n    let count = sec / 1000;\n    count = count | count;\n    this.reconnectCountdown = setInterval(() => {\n      const timeLeft = (count > 99) ? secondsToTime(count) : count;\n      this.handleError(\n        formatMessage(messages.reconnect_countdown, {seconds: timeLeft}),\n        'warn',\n        () => {\n          clearInterval(this.reconnectCountdown);\n          this.tinode.reconnect();\n        },\n        formatMessage(messages.reconnect_now)\n      );\n      count -= 1;\n    }, 1000);\n  }\n\n  // Connection lost\n  handleDisconnect(err) {\n    this.setState({\n      connected: false,\n      ready: false,\n      topicSelectedOnline: false,\n      errorText: err && err.message ? err.message : \"Disconnected\",\n      errorLevel: err && err.message ? 'err' : 'warn',\n      loginDisabled: false,\n      contextMenuVisible: false,\n      serverVersion: \"no connection\"\n    });\n  }\n\n  doLogin(login, password, cred) {\n    if (this.tinode.isAuthenticated()) {\n      // Already logged in. Go to default screen.\n      HashNavigation.navigateTo('');\n      return;\n    }\n    // Sanitize and package credentail.\n    cred = Tinode.credential(cred);\n    // Try to login with login/password. If they are not available, try token. If no token, ask for login/password.\n    let promise = null;\n    const token = this.tinode.getAuthToken();\n    if (login && password) {\n      this.setState({password: null});\n      promise = this.tinode.loginBasic(login, password, cred);\n    } else if (token) {\n      promise = this.tinode.loginToken(token.token, cred);\n    }\n\n    if (promise) {\n      promise.then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text === 'validate credentials') {\n          this.setState({loadSpinnerVisible: false});\n          if (cred) {\n            this.handleError(this.props.intl.formatMessage(messages.code_doesnot_match), 'warn');\n          }\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful();\n        }\n      }).catch((err) => {\n        // Login failed, report error.\n        this.setState({\n          loginDisabled: false,\n          credMethod: undefined,\n          credCode: undefined,\n          loadSpinnerVisible: false,\n          autoLogin: false\n        });\n        this.handleError(err.message, 'err');\n        localStorage.removeItem('auth-token');\n        HashNavigation.navigateTo('');\n      });\n    } else {\n      // No login credentials provided.\n      // Make sure we are on the login page.\n      HashNavigation.navigateTo('');\n      this.setState({loginDisabled: false});\n    }\n  }\n\n  handleCredentialsRequest(params) {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    parsed.path[0] = 'cred';\n    parsed.params['method'] = params.cred[0];\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n  }\n\n  handleLoginSuccessful() {\n    this.handleError();\n\n    // Refresh authentication token.\n    if (LocalStorageUtil.getObject('keep-logged-in')) {\n      LocalStorageUtil.setObject('auth-token', this.tinode.getAuthToken());\n    }\n\n    const goToTopic = this.state.requestedTopic;\n    // Logged in fine, subscribe to 'me' attaching callbacks from the contacts view.\n    const me = this.tinode.getMeTopic();\n    me.onMetaDesc = this.tnMeMetaDesc;\n    me.onContactUpdate = this.tnMeContactUpdate;\n    me.onSubsUpdated = this.tnMeSubsUpdated;\n    this.setState({\n      connected: true,\n      credMethod: undefined,\n      credCode: undefined,\n      myUserId: this.tinode.getCurrentUserID(),\n      autoLogin: true,\n      requestedTopic: undefined,\n    });\n    // Subscribe, fetch topic desc, the list of subscriptions. Messages are not fetched.\n    me.subscribe(\n      me.startMetaQuery().\n        withLaterSub().\n        withDesc().\n        withTags().\n        withCred().\n        build()\n      ).catch((err) => {\n        this.tinode.disconnect();\n        localStorage.removeItem('auth-token');\n        this.handleError(err.message, 'err');\n        HashNavigation.navigateTo('');\n      }).finally(() => {\n        this.setState({loadSpinnerVisible: false});\n      });\n    let urlHash = HashNavigation.setUrlSidePanel(window.location.hash, 'contacts');\n    if (goToTopic) {\n      urlHash = HashNavigation.setUrlTopic(urlHash, goToTopic);\n    }\n    HashNavigation.navigateTo(urlHash);\n  }\n\n  tnMeMetaDesc(desc) {\n    if (desc) {\n      if (desc.public) {\n        this.setState({\n          sidePanelTitle: desc.public.fn,\n          sidePanelAvatar: makeImageUrl(desc.public.photo)\n        });\n      }\n      if (desc.acs) {\n        this.setState({\n          incognitoMode: !desc.acs.isPresencer()\n        });\n      }\n    }\n  }\n\n  // Reactions to updates to the contact list.\n  tnMeContactUpdate(what, cont) {\n    if (what == 'on' || what == 'off') {\n      this.resetContactList();\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedOnline: (what == 'on')});\n      }\n    } else if (what == 'read') {\n      this.resetContactList();\n    } else if (what == 'msg') {\n      // Check if the topic is archived. If so, don't play a sound.\n      const topic = this.tinode.getTopic(cont.topic);\n      const archived = topic && topic.isArchived();\n\n      // New message received. Maybe the message is from the current user, then unread is 0.\n      if (cont.unread > 0 && this.state.messageSounds && !archived) {\n        // Skip update if the topic is currently open, otherwise the badge will annoyingly flash.\n        if (document.hidden || this.state.topicSelected != cont.topic) {\n          POP_SOUND.play();\n        }\n      }\n      // Reorder contact list to use possibly updated 'touched'.\n      this.resetContactList();\n    } else if (what == 'recv') {\n      // Explicitly ignoring \"recv\" -- it causes no visible updates to contact list.\n    } else if (what == 'gone' || what == 'unsub') {\n      // Topic deleted or user unsubscribed. Remove topic from view.\n      // If the currently selected topic is gone, clear the selection.\n      if (this.state.topicSelected == cont.topic) {\n        this.handleTopicSelected(null);\n      }\n      // Redraw without the deleted topic.\n      this.resetContactList();\n    } else if (what == 'acs') {\n      // Permissions changed. If it's for the currently selected topic,\n      // update the views.\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedAcs: cont.acs});\n      }\n    } else if (what == 'del') {\n      // TODO: messages deleted (hard or soft) -- update pill counter.\n    } else if (what == 'upd') {\n      // upd - handled by the SDK. Explicitly ignoring here.\n    } else {\n      // TODO(gene): handle other types of notifications:\n      // * ua -- user agent changes (maybe display a pictogram for mobile/desktop).\n      console.log(\"Unsupported (yet) presence update:\" + what + \" in: \" + cont.topic);\n    }\n  }\n\n  tnMeSubsUpdated(unused) {\n    this.resetContactList();\n  }\n\n  // Merge search results and contact list to create a single flat\n  // list of known contacts for GroupManager to use.\n  static prepareSearchableContacts(chatList, foundContacts) {\n    const merged = {};\n\n    // For chatList topics merge only p2p topics and convert them to the\n    // same format as foundContacts.\n    for (const c of chatList) {\n      if (Tinode.isP2PTopicName(c.topic)) {\n          merged[c.topic] = {\n            user: c.topic,\n            updated: c.updated,\n            public: c.public,\n            private: c.private,\n            acs: c.acs\n          };\n      }\n    }\n\n    // Add all foundCountacts if they have not been added already.\n    for (const c of foundContacts) {\n      if (!merged[c.user]) {\n        merged[c.user] = c;\n      }\n    }\n\n    return Object.values(merged);\n  }\n\n  resetContactList() {\n    const newState = {\n      chatList: []\n    };\n\n    if (!this.state.ready) {\n      newState.ready = true;\n    }\n\n    this.tinode.getMeTopic().contacts((c) => {\n      if (!c.topic && !c.user) {\n        // Contacts expect c.topic to be set.\n        c.topic = c.name;\n      }\n      newState.chatList.push(c);\n      if (this.state.topicSelected == c.topic) {\n        newState.topicSelectedOnline = c.online;\n        newState.topicSelectedAcs = c.acs;\n      }\n    });\n    // Merge search results and chat list.\n    newState.searchableContacts = TinodeWeb.prepareSearchableContacts(newState.chatList, this.state.searchResults);\n    this.setState(newState);\n  }\n\n  // Sending \"received\" notifications\n  tnData(data) {\n    const topic = this.tinode.getTopic(data.topic);\n    if (topic.msgStatus(data, true) >= Tinode.MESSAGE_STATUS_SENT && data.from != this.state.myUserId) {\n      clearTimeout(this.receivedTimer);\n      this.receivedTimer = setTimeout(() => {\n        this.receivedTimer = undefined;\n        topic.noteRecv(data.seq);\n      }, RECEIVED_DELAY);\n    }\n  }\n\n  /* Fnd topic: find contacts by tokens */\n  tnInitFind() {\n    const fnd = this.tinode.getFndTopic();\n    fnd.onSubsUpdated = this.tnFndSubsUpdated;\n    if (fnd.isSubscribed()) {\n      this.tnFndSubsUpdated();\n    } else {\n      fnd.subscribe(fnd.startMetaQuery().withSub().build()).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  tnFndSubsUpdated() {\n    const foundContacts = [];\n    // Don't attempt to create P2P topics which already exist. Server will reject the duplicates.\n    this.tinode.getFndTopic().contacts((s) => {\n      foundContacts.push(s);\n    });\n    this.setState({\n      searchResults: foundContacts,\n      searchableContacts: TinodeWeb.prepareSearchableContacts(this.state.chatList, foundContacts)\n    });\n  }\n\n  /** Called when the user enters a contact into the contact search field in the NewAccount panel\n    @param query {Array} is an array of contacts to search for\n   */\n  handleSearchContacts(query) {\n    const fnd = this.tinode.getFndTopic();\n    fnd.setMeta({desc: {public: query}}).then((ctrl) => {\n      return fnd.getMeta(fnd.startMetaQuery().withSub().build());\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  // User clicked on a contact in the side panel or deleted a contact.\n  handleTopicSelected(topicName) {\n    // Clear newTopicParams after use.\n    if (this.state.newTopicParams && this.state.newTopicParams._topicName != topicName) {\n      this.setState({\n        newTopicParams: null\n      });\n    }\n\n    if (topicName) {\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'topic-view',\n        showInfoPanel: false\n      });\n      // Different contact selected.\n      if (this.state.topicSelected != topicName) {\n        this.setState({\n          topicSelectedOnline: this.tinode.isTopicOnline(topicName),\n          topicSelectedAcs: this.tinode.getTopicAccessMode(topicName)\n        });\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', topicName));\n      }\n    } else {\n      // Currently selected contact deleted\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'sidepanel',\n        topicSelectedOnline: false,\n        topicSelectedAcs: null,\n        showInfoPanel: false\n      });\n\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic('', null));\n    }\n  }\n\n  // In mobile view user requested to show sidepanel\n  handleHideMessagesView() {\n    this.setState({\n      mobilePanel: 'sidepanel'\n    });\n    HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, null));\n  }\n\n  // User is sending a message, either plain text or a drafty object, possibly\n  // with attachments.\n  //  - msg - Drafty message with content\n  //  - promise - Promise to be resolved when the upload is completed\n  //  - uploader - for tracking progress\n  handleSendMessage(msg, promise, uploader) {\n    const topic = this.tinode.getTopic(this.state.topicSelected);\n\n    msg = topic.createMessage(msg, false);\n    // The uploader is used to show progress.\n    msg._uploader = uploader;\n\n    if (!topic.isSubscribed()) {\n      if (!promise) {\n        promise = Promise.resolve();\n      }\n      promise = promise.then(() => { return topic.subscribe(); });\n    }\n\n    if (promise) {\n      promise = promise.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n\n    topic.publishDraft(msg, promise)\n      .then((ctrl) => {\n        if (topic.isArchived()) {\n          return topic.archive(false);\n        }\n      })\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleNewChatInvitation(topicName, action) {\n    const topic = this.tinode.getTopic(topicName);\n    let response = null;\n    switch (action) {\n      case 'accept':\n        // Accept given permissions.\n        const mode = topic.getAccessMode().getGiven();\n        response = topic.setMeta({sub: {mode: mode}});\n        if (topic.isP2PType()) {\n          // For P2P topics change 'given' permission of the peer too.\n          // In p2p topics the other user has the same name as the topic.\n          response = response.then((ctrl) => {\n            topic.setMeta({sub: {user: topicName, mode: mode}});\n          });\n        }\n        break;\n      case 'delete':\n        // Ignore invitation by deleting it.\n        response = topic.delTopic(true);\n        break;\n      case 'block':\n        // Ban the topic making futher invites impossible.\n        // Just self-ban.\n        const am = topic.getAccessMode().updateWant('-JP').getWant();\n        response = topic.setMeta({sub: {mode: am}}).then((ctrl) => {\n          return this.handleTopicSelected(null);\n        });\n        break;\n      default:\n        console.log(\"Unknown invitation action\", '\"' + action + '\"\"');\n    }\n\n    if (response != null) {\n      response.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // User chose a Sign Up menu item.\n  handleNewAccount() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, 'register'));\n  }\n\n  // Actual registration of a new account.\n  handleNewAccountRequest(login_, password_, public_, cred_, tags_) {\n    // Clear old error, if any.\n    this.handleError();\n\n    this.tinode.connect(this.state.serverAddress)\n      .then(() => {\n        return this.tinode.createAccountBasic(login_, password_,\n          {public: public_, tags: tags_, cred: Tinode.credential(cred_)});\n      }).then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text == 'validate credentials') {\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful(this);\n        }\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleUpdateAccountRequest(password, pub, defacs) {\n    this.handleError();\n\n    if (pub || defacs) {\n      const params = {};\n      if (pub) {\n        params.public = pub;\n      }\n      if (defacs) {\n        params.defacs = defacs;\n      }\n      this.tinode.getMeTopic().setMeta({desc: params}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n    if (password) {\n      this.tinode.updateAccountBasic(null, this.tinode.getCurrentLogin(), password).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleToggleIncognitoMode(on) {\n    const me = this.tinode.getMeTopic();\n    const am = me.getAccessMode().updateWant(on ? '-P' : '+P').getWant();\n    me.setMeta({sub: {mode: am}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleUpdateAccountTagsRequest(tags) {\n    this.tinode.getMeTopic().setMeta({tags: tags})\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  // User chose Settings menu item.\n  handleSettings() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'edit' : 'settings'));\n  }\n\n  // User updated global parameters.\n  handleGlobalSettings(settings) {\n    const serverAddress = settings.serverAddress || this.state.serverAddress;\n    const transport = settings.transport || this.state.transport;\n    if (this.tinode) {\n      this.tinode.clearStorage();\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.tinode = TinodeWeb.tnSetup(serverAddress, transport, this.props.intl.locale,\n      LocalStorageUtil.getObject('keep-logged-in'));\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n\n    this.setState({\n      serverAddress: serverAddress,\n      transport: transport\n    });\n    LocalStorageUtil.setObject('settings', {\n      serverAddress: serverAddress,\n      transport: transport\n    });\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, ''));\n  }\n\n  // User chose 'Archived chats'.\n  handleShowArchive() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'archive' : ''));\n  }\n\n  // User viewes 'Blocked chats'.\n  handleShowBlocked() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'blocked' : ''));\n  }\n\n  togglePushToken(enabled) {\n    if (enabled) {\n      if (!this.state.firebaseToken) {\n        const fcm = this.fbPush ?\n          new Promise().resolve() :\n          this.initFCMessaging();\n        fcm.then(() => {\n          return this.fbPush.requestPermission();\n        }).then(() => {\n          this.requestPushToken();\n        }).catch((err) => {\n          console.log(\"Failed to get notification permission.\", err);\n          this.handleError(err.message, 'err');\n          this.setState({desktopAlerts: false, firebaseToken: null});\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        });\n      } else {\n        this.setState({desktopAlerts: true});\n        if (LocalStorageUtil.getObject('keep-logged-in')) {\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n        }\n      }\n    } else if (this.state.firebaseToken && this.fbPush) {\n      this.fbPush.deleteToken(this.state.firebaseToken).catch((err) => {\n        console.log(\"Unable to delete token.\", err);\n      }).finally(() => {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        localStorage.removeItem('firebase-token');\n        this.setState({desktopAlerts: false, firebaseToken: null});\n        // Inform the server that the token was deleted.\n        this.tinode.setDeviceToken(null);\n      });\n    } else {\n      this.setState({desktopAlerts: false, firebaseToken: null});\n      LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n    }\n  }\n\n  requestPushToken() {\n    this.fbPush.getToken().then((refreshedToken) => {\n      const persist = LocalStorageUtil.getObject('keep-logged-in');\n      if (refreshedToken != this.state.firebaseToken) {\n        this.tinode.setDeviceToken(refreshedToken);\n        if (persist) {\n          LocalStorageUtil.setObject('firebase-token', refreshedToken);\n        }\n      }\n      this.setState({firebaseToken: refreshedToken, desktopAlerts: true});\n      if (persist) {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n      }\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n      console.log(\"Failed to retrieve firebase token\", err);\n    });\n  }\n\n  handleToggleMessageSounds(enabled) {\n    this.setState({messageSounds: enabled});\n    LocalStorageUtil.updateObject('settings', {\n      messageSoundsOff: !enabled\n    });\n  }\n\n  handleCredAdd(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.setMeta({cred: {meth: method, val: value}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredDelete(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.delCredential(method, value).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredConfirm(method, response) {\n    this.handleCredentialsRequest({cred: [method]});\n  }\n\n  // User clicked Cancel button in Setting or Sign Up panel.\n  handleSidepanelCancel() {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    let path = '';\n    if (['security','support','general','notif'].includes(parsed.path[0])) {\n      path = 'edit';\n    } else if ('blocked' == parsed.path[0]) {\n      path = 'security';\n    } else if (this.state.myUserId) {\n      path = 'contacts';\n    }\n    parsed.path[0] = path;\n    if (parsed.params) {\n      delete parsed.params.code;\n      delete parsed.params.method;\n      delete parsed.params.tab;\n    }\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n    this.setState({errorText: '', errorLevel: null});\n  }\n\n  // Basic nagigator by hash value. No need to bind to this.\n  basicNavigator(hash) {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, hash));\n  }\n\n  // Request to start a topic, new or selected from search results, or \"by ID\".\n  handleStartTopicRequest(topicName, pub, priv, tags, isChannel) {\n    // Check if topic is indeed new. If not, launch it.\n    if (topicName && this.tinode.isTopicCached(topicName)) {\n      this.handleTopicSelected(topicName);\n      return;\n    }\n\n    const params = {};\n    if (Tinode.isP2PTopicName(topicName)) {\n      // Because we are initialing the subscription, set 'want' to all permissions.\n      params.sub = {mode: DEFAULT_P2P_ACCESS_MODE};\n      // Give the other user all permissions too.\n      params.desc = {defacs: {auth: DEFAULT_P2P_ACCESS_MODE}};\n    } else {\n      topicName = topicName || this.tinode.newGroupTopicName(isChannel);\n      params.desc = {public: pub, private: {comment: priv}};\n      params.tags = tags;\n    }\n    params._topicName = topicName;\n    this.setState({newTopicParams: params}, () => {this.handleTopicSelected(topicName)});\n  }\n\n  // New topic was creted, here is the new topic name.\n  handleNewTopicCreated(oldName, newName) {\n    if (this.state.topicSelected == oldName && oldName != newName) {\n      // If the current URl contains the old topic name, replace it with new.\n      // Update the name of the selected topic first so the navigator doen't clear\n      // the state.\n      this.setState({topicSelected: newName}, () => {\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', newName));\n      });\n    }\n  }\n\n  handleTopicUpdateRequest(topicName, pub, priv, permissions) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const params = {};\n      if (pub) {\n        params.public = pub;\n      }\n      if (priv) {\n        params.private = (priv === Tinode.DEL_CHAR) ?\n          Tinode.DEL_CHAR : {comment: priv};\n      }\n      if (permissions) {\n        params.defacs = permissions;\n      }\n      topic.setMeta({desc: params}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleChangePermissions(topicName, mode, uid) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const am = topic.getAccessMode();\n      if (uid) {\n        am.updateGiven(mode);\n        mode = am.getGiven();\n      } else {\n        am.updateWant(mode);\n        mode = am.getWant();\n      }\n      topic.setMeta({sub: {user: uid, mode: mode}}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleTagsUpdated(topicName, tags) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      topic.setMeta({tags: tags}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleLogout() {\n    updateFavicon(0);\n\n    // Remove stored data.\n    localStorage.removeItem('auth-token');\n    localStorage.removeItem('firebase-token');\n    localStorage.removeItem('settings');\n    if (this.state.firebaseToken) {\n      this.fbPush.deleteToken(this.state.firebaseToken)\n    }\n\n    if (this.tinode) {\n      this.tinode.clearStorage();\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.setState(this.getBlankState());\n\n    this.tinode = TinodeWeb.tnSetup(this.state.serverAddress,\n      this.state.transport, this.props.intl.locale, LocalStorageUtil.getObject('keep-logged-in'));\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    HashNavigation.navigateTo('');\n  }\n\n  handleDeleteAccount() {\n    this.tinode.delCurrentUser(true).then((ctrl) => {\n      this.handleLogout();\n    });\n  }\n\n  handleDeleteMessagesRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Request hard-delete all messages.\n    topic.delMessagesAll(true).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleLeaveUnsubRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.leave(true).then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleBlockTopicRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleReportTopic(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Publish spam report.\n    this.tinode.publish(Tinode.TOPIC_SYS, Tinode.Drafty.attachJSON(null, {\n      'action': 'report',\n      'target': topicName\n    }));\n\n    // Remove J and P permissions.\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleShowContextMenu(params, menuItems) {\n    this.setState({\n      contextMenuVisible: true,\n      contextMenuClickAt: {x: params.x, y: params.y},\n      contextMenuParams: params,\n      contextMenuItems: menuItems || this.defaultTopicContextMenu(params.topicName),\n      contextMenuBounds: ReactDOM.findDOMNode(this).getBoundingClientRect()\n    });\n  }\n\n  defaultTopicContextMenu(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n\n    let muted = false, blocked = false, self_blocked = false, subscribed = false, deleter = false, archived = false;\n    if (topic) {\n      subscribed = topic.isSubscribed();\n      archived = topic.isArchived();\n\n      const acs = topic.getAccessMode();\n      if (acs) {\n        muted = acs.isMuted();\n        blocked = !acs.isJoiner();\n        self_blocked = !acs.isJoiner('want');\n        deleter = acs.isDeleter();\n      }\n    }\n\n    return [\n      subscribed ? {\n        title: this.props.intl.formatMessage(messages.menu_item_info),\n        handler: this.handleShowInfoView\n      } : null,\n      subscribed ? 'messages_clear' : null,\n      subscribed && deleter ? 'messages_clear_hard' : null,\n      muted ? (blocked ? null : 'topic_unmute') : 'topic_mute',\n      self_blocked ? 'topic_unblock' : 'topic_block',\n      !archived ? 'topic_archive' : null,\n      'topic_delete'\n    ];\n  }\n\n  handleHideContextMenu() {\n    this.setState({\n      contextMenuVisible: false,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuBounds: null\n    });\n  }\n\n  handleContextMenuAction(action, promise, params) {\n    if (action == 'topic_archive') {\n      if (promise && params.topicName && params.topicName == this.state.topicSelected) {\n        promise.then(() => {\n          this.handleTopicSelected(null);\n        });\n      }\n    }\n  }\n\n  handleShowAlert(title, content, onConfirm, confirmText, onReject, rejectText) {\n    this.setState({\n      alertVisible: true,\n      alertParams: {\n        title: title,\n        content: content,\n        onConfirm: onConfirm,\n        confirm: confirmText,\n        onReject: onReject,\n        reject: rejectText\n      }\n    });\n  }\n\n  handleShowInfoView() {\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'info', true));\n    this.setState({showInfoPanel: true});\n  }\n\n  handleHideInfoView() {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'info'));\n    this.setState({showInfoPanel: false});\n  }\n\n  handleMemberUpdateRequest(topicName, added, removed) {\n    if (!topicName) {\n      return;\n    }\n\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    if (added && added.length > 0) {\n      added.map((uid) => {\n        topic.invite(uid, null).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n\n    if (removed && removed.length > 0) {\n      removed.map((uid) => {\n        topic.delSubscription(uid).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n  }\n\n  handleValidateCredentialsRequest(cred, code) {\n    if (this.tinode.isAuthenticated()) {\n      const me = this.tinode.getMeTopic();\n      me.setMeta({cred: {meth: cred, resp: code}})\n        .then(() => {\n          HashNavigation.navigateTo('');\n        })\n        .catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n    } else {\n      this.setState({credMethod: cred, credCode: code});\n      this.doLogin(null, null, {meth: cred, resp: code});\n    }\n  }\n\n  handlePasswordResetRequest(method, value) {\n    // If already connected, connnect() will return a resolved promise.\n    this.tinode.connect()\n      .then(() => {\n        return this.tinode.requestResetAuthSecret('basic', method, value);\n      })\n      .catch((err) => {\n        // Socket error\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleResetPassword(scheme, newPassword, token) {\n    token = base64ReEncode(token);\n    if (!token) {\n      this.handleError(this.props.intl.formatMessage(messages.invalid_security_token), 'err');\n    } else {\n      this.tinode.connect()\n        .then(() => {\n          return this.tinode.updateAccountBasic(null, null, newPassword, {token: token});\n        })\n        .catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"app-container\">\n        {this.state.contextMenuVisible ?\n          <ContextMenu\n            tinode={this.tinode}\n            bounds={this.state.contextMenuBounds}\n            clickAt={this.state.contextMenuClickAt}\n            params={this.state.contextMenuParams}\n            items={this.state.contextMenuItems}\n            hide={this.handleHideContextMenu}\n            onShowAlert={this.handleShowAlert}\n            onAction={this.handleContextMenuAction}\n            onTopicRemoved={(topicName) => {\n              if (topicName == this.state.topicSelected) {\n                this.handleTopicSelected(null);\n              }\n            }}\n            onError={this.handleError} />\n          :\n          null\n        }\n        <Alert\n          visible={this.state.alertVisible}\n          title={this.state.alertParams.title}\n          content={this.state.alertParams.content}\n          onReject={this.state.alertParams.onReject ? (() => { this.setState({alertVisible: false}); }) : null}\n          reject={this.state.alertParams.reject}\n          onConfirm={() => { this.setState({alertVisible: false}); this.state.alertParams.onConfirm(); }}\n          confirm={this.state.alertParams.confirm}\n          />\n        <SidepanelView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          displayMobile={this.state.displayMobile}\n          hideSelf={this.state.displayMobile && this.state.mobilePanel !== 'sidepanel'}\n          state={this.state.sidePanelSelected}\n          title={this.state.sidePanelTitle}\n          avatar={this.state.sidePanelAvatar}\n          login={this.state.login}\n          myUserId={this.state.myUserId}\n          loginDisabled={this.state.loginDisabled}\n          loadSpinnerVisible={this.state.loadSpinnerVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          topicSelected={this.state.topicSelected}\n          chatList={this.state.chatList}\n          credMethod={this.state.credMethod}\n          credCode={this.state.credCode}\n\n          transport={this.state.transport}\n          messageSounds={this.state.messageSounds}\n          desktopAlerts={this.state.desktopAlerts}\n          desktopAlertsEnabled={this.state.desktopAlertsEnabled}\n          incognitoMode={this.state.incognitoMode}\n          serverAddress={this.state.serverAddress}\n          serverVersion={this.state.serverVersion}\n\n          onGlobalSettings={this.handleGlobalSettings}\n          onSignUp={this.handleNewAccount}\n          onSettings={this.handleSettings}\n          onBasicNavigate={this.basicNavigator}\n          onLoginRequest={this.handleLoginRequest}\n          onCreateAccount={this.handleNewAccountRequest}\n          onUpdateAccount={this.handleUpdateAccountRequest}\n          onUpdateAccountTags={this.handleUpdateAccountTagsRequest}\n          onTogglePushNotifications={this.togglePushToken}\n          onToggleMessageSounds={this.handleToggleMessageSounds}\n          onToggleIncognitoMode={this.handleToggleIncognitoMode}\n          onCredAdd={this.handleCredAdd}\n          onCredDelete={this.handleCredDelete}\n          onCredConfirm={this.handleCredConfirm}\n          onTopicSelected={this.handleTopicSelected}\n          onCreateTopic={this.handleStartTopicRequest}\n          onLogout={this.handleLogout}\n          onDeleteAccount={this.handleDeleteAccount}\n          onShowAlert={this.handleShowAlert}\n          onCancel={this.handleSidepanelCancel}\n          onError={this.handleError}\n          onValidateCredentials={this.handleValidateCredentialsRequest}\n          onPasswordResetRequest={this.handlePasswordResetRequest}\n          onResetPassword={this.handleResetPassword}\n          onShowArchive={this.handleShowArchive}\n          onShowBlocked={this.handleShowBlocked}\n\n          onInitFind={this.tnInitFind}\n          searchResults={this.state.searchResults}\n          onSearchContacts={this.handleSearchContacts}\n\n          showContextMenu={this.handleShowContextMenu} />\n\n        <MessagesView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          ready={this.state.ready}\n          online={this.state.topicSelectedOnline}\n          acs={this.state.topicSelectedAcs}\n          displayMobile={this.state.displayMobile}\n          viewportWidth={this.state.viewportWidth}\n          viewportHeight={this.state.viewportHeight}\n          hideSelf={this.state.displayMobile &&\n            (this.state.mobilePanel !== 'topic-view' || this.state.showInfoPanel)}\n          topic={this.state.topicSelected}\n          myUserId={this.state.myUserId}\n          serverVersion={this.state.serverVersion}\n          serverAddress={this.state.serverAddress}\n          applicationVisible={this.state.applicationVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          newTopicParams={this.state.newTopicParams}\n\n          onHideMessagesView={this.handleHideMessagesView}\n          onData={this.tnData}\n          onError={this.handleError}\n          onNewTopicCreated={this.handleNewTopicCreated}\n          showContextMenu={this.handleShowContextMenu}\n          onChangePermissions={this.handleChangePermissions}\n          onNewChat={this.handleNewChatInvitation}\n          sendMessage={this.handleSendMessage} />\n\n        {this.state.showInfoPanel ?\n          <InfoView\n            tinode={this.tinode}\n            connected={this.state.connected}\n            displayMobile={this.state.displayMobile}\n            topic={this.state.topicSelected}\n            searchableContacts={this.state.searchableContacts}\n            myUserId={this.state.myUserId}\n\n            errorText={this.state.errorText}\n            errorLevel={this.state.errorLevel}\n            errorAction={this.state.errorAction}\n            errorActionText={this.state.errorActionText}\n\n            onTopicDescUpdate={this.handleTopicUpdateRequest}\n            onCancel={this.handleHideInfoView}\n            onShowAlert={this.handleShowAlert}\n            onChangePermissions={this.handleChangePermissions}\n            onMemberUpdateRequest={this.handleMemberUpdateRequest}\n            onDeleteMessages={this.handleDeleteMessagesRequest}\n            onLeaveTopic={this.handleLeaveUnsubRequest}\n            onBlockTopic={this.handleBlockTopicRequest}\n            onReportTopic={this.handleReportTopic}\n            onAddMember={this.handleManageGroupMembers}\n            onTopicTagsUpdate={this.handleTagsUpdated}\n            onInitFind={this.tnInitFind}\n            onError={this.handleError}\n\n            showContextMenu={this.handleShowContextMenu}\n            />\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(TinodeWeb);\n","// Put all packages together.\n// Used to generate umd/index.prod.js\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { IntlProvider } from 'react-intl';\n\nimport allMessages from './messages.json';\nimport TinodeWeb from './views/tinode-web.jsx';\nimport HashNavigation from './lib/navigation.js';\n\n// Detect human language to use in the UI:\n//  Check parameters from URL hash #?hl=ru, then browser, then use 'en' as a fallback.\nconst { params } = HashNavigation.parseUrlHash(window.location.hash);\nconst language = (params && params.hl) ||\n  (navigator.languages && navigator.languages[0]) ||\n  navigator.language ||\n  navigator.userLanguage ||\n  'en';\n\n// Get the base language 'en' from a more specific 'en_GB' or 'en-US' as a partial fallback.\nconst baseLanguage = language.toLowerCase().split(/[-_]/)[0];\n\n// Try the full locale first, then the locale without the region code, fallback to 'en'.\nconst messages =\n  allMessages[language] ||\n  allMessages[baseLanguage] ||\n  allMessages.en;\n\nReactDOM.render(\n  <IntlProvider locale={language} messages={messages} textComponent={React.Fragment}>\n    <TinodeWeb />\n  </IntlProvider>,\n  document.getElementById('mountPoint')\n);\n","// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// startup\n// Load entry module and return exports\n// This entry module doesn't tell about it's top-level declarations so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[619](0, __webpack_exports__, __webpack_require__);\n"],"sourceRoot":""}