{"version":3,"sources":["webpack://tinode-webapp/webpack/bootstrap","webpack://tinode-webapp/webpack/runtime/compat get default export","webpack://tinode-webapp/webpack/runtime/define property getters","webpack://tinode-webapp/webpack/runtime/hasOwnProperty shorthand","webpack://tinode-webapp/external \"React\"","webpack://tinode-webapp/external \"ReactDOM\"","webpack://tinode-webapp/external \"ReactIntl\"","webpack://tinode-webapp/external \"firebase\"","webpack://tinode-webapp/external \"Tinode\"","webpack://tinode-webapp/external [\"firebase\",\"messaging\"]","webpack://tinode-webapp/./src/widgets/alert.jsx","webpack://tinode-webapp/./src/version.js","webpack://tinode-webapp/./src/config.js","webpack://tinode-webapp/./src/widgets/context-menu.jsx","webpack://tinode-webapp/./src/lib/strformat.js","webpack://tinode-webapp/./src/widgets/letter-tile.jsx","webpack://tinode-webapp/./src/lib/blob-helpers.js","webpack://tinode-webapp/./src/widgets/avatar-upload.jsx","webpack://tinode-webapp/./src/widgets/checkbox.jsx","webpack://tinode-webapp/./src/widgets/contact-badges.jsx","webpack://tinode-webapp/./src/widgets/unread-badge.jsx","webpack://tinode-webapp/./src/widgets/contact.jsx","webpack://tinode-webapp/./src/widgets/contact-action.jsx","webpack://tinode-webapp/./src/widgets/contact-list.jsx","webpack://tinode-webapp/./src/widgets/menu-cancel.jsx","webpack://tinode-webapp/./src/widgets/error-panel.jsx","webpack://tinode-webapp/./src/widgets/chip.jsx","webpack://tinode-webapp/./src/widgets/chip-input.jsx","webpack://tinode-webapp/./src/widgets/group-manager.jsx","webpack://tinode-webapp/./src/widgets/visible-password.jsx","webpack://tinode-webapp/./src/widgets/in-place-edit.jsx","webpack://tinode-webapp/./src/widgets/more-button.jsx","webpack://tinode-webapp/./src/widgets/permissions-editor.jsx","webpack://tinode-webapp/./src/lib/utils.js","webpack://tinode-webapp/./src/widgets/tag-manager.jsx","webpack://tinode-webapp/./src/views/info-view.jsx","webpack://tinode-webapp/./src/widgets/file-progress.jsx","webpack://tinode-webapp/./src/widgets/attachment.jsx","webpack://tinode-webapp/./src/widgets/received-marker.jsx","webpack://tinode-webapp/./src/widgets/uploading-image.jsx","webpack://tinode-webapp/./src/widgets/chat-message.jsx","webpack://tinode-webapp/./src/widgets/send-message.jsx","webpack://tinode-webapp/./src/widgets/doc-preview.jsx","webpack://tinode-webapp/./src/widgets/group-subs.jsx","webpack://tinode-webapp/./src/widgets/image-preview.jsx","webpack://tinode-webapp/./src/widgets/invitation.jsx","webpack://tinode-webapp/./src/widgets/load-spinner.jsx","webpack://tinode-webapp/./src/views/logo-view.jsx","webpack://tinode-webapp/./src/lib/navigation.js","webpack://tinode-webapp/./src/views/messages-view.jsx","webpack://tinode-webapp/./src/widgets/button-back.jsx","webpack://tinode-webapp/./src/widgets/menu-contacts.jsx","webpack://tinode-webapp/./src/widgets/menu-start.jsx","webpack://tinode-webapp/./src/widgets/side-navbar.jsx","webpack://tinode-webapp/./src/views/contacts-view.jsx","webpack://tinode-webapp/./src/lib/local-storage.js","webpack://tinode-webapp/./src/views/create-account-view.jsx","webpack://tinode-webapp/./src/views/edit-account-view.jsx","webpack://tinode-webapp/./src/views/acc-general-view.jsx","webpack://tinode-webapp/./src/views/acc-notifications-view.jsx","webpack://tinode-webapp/./src/views/acc-security-view.jsx","webpack://tinode-webapp/./src/views/acc-support-view.jsx","webpack://tinode-webapp/./src/views/login-view.jsx","webpack://tinode-webapp/./src/widgets/new-topic-by-id.jsx","webpack://tinode-webapp/./src/widgets/new-topic-group.jsx","webpack://tinode-webapp/./src/widgets/search-contacts.jsx","webpack://tinode-webapp/./src/views/new-topic-view.jsx","webpack://tinode-webapp/./src/views/password-reset-view.jsx","webpack://tinode-webapp/./src/widgets/host-selector.jsx","webpack://tinode-webapp/./src/views/settings-view.jsx","webpack://tinode-webapp/./src/views/validation-view.jsx","webpack://tinode-webapp/./src/views/sidepanel-view.jsx","webpack://tinode-webapp/./src/lib/host-name.js","webpack://tinode-webapp/./src/views/tinode-web.jsx","webpack://tinode-webapp/./src/index.js"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","React","ReactDOM","ReactIntl","firebase","messaging","Tinode","Alert","render","this","props","visible","className","title","content","onReject","onClick","reject","FormattedMessage","id","onConfirm","confirm","APP_NAME","KNOWN_HOSTS","hosted","local","DEFAULT_HOST","KEYPRESS_DELAY","DEFAULT_P2P_ACCESS_MODE","REM_SIZE","AVATAR_SIZE","MAX_INBAND_ATTACHMENT_SIZE","MAX_EXTERN_ATTACHMENT_SIZE","MAX_IMAGE_DIM","MAX_TITLE_LENGTH","messages","defineMessages","info","defaultMessage","description","clear_messages","clear_for_all","delete_for_all","send_retry","mute","unmute","topic_delete","topic_delete_warning","unblock","block","topic_block_warning","member_delete","archive","ContextMenu","constructor","super","formatMessage","intl","handlePageClick","bind","handleEscapeKey","handleClick","MenuItems","handler","params","errorHandler","onShowAlert","deleteMessages","delete","retryMessage","topicPermissionSetter","then","ctrl","onTopicRemoved","topicName","topic","tinode","getTopic","delTopic","catch","err","message","console","log","user","delSubscription","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","e","contains","target","preventDefault","stopPropagation","hide","keyCode","item","items","currentTarget","dataset","onAction","onError","all","hard","cancelSend","seq","delMessagesAll","delMessagesList","flushMessage","msg","createMessage","publishDraft","mode","result","updateMode","count","menu","map","push","data-id","vSize","length","position","left","bounds","right","clickAt","x","top","bottom","y","style","injectIntl","shortDateFormat","locale","window","navigator","userLanguage","language","now","Date","getFullYear","getMonth","getDate","toLocaleTimeString","hour12","hour","minute","toLocaleDateString","month","day","year","bytesToHumanSize","bytes","sizes","bucket","Math","min","floor","log2","pow","round","toFixed","LetterTile","avatar","isGroup","iconColor","abs","value","hash","i","charCodeAt","stringHash","trim","letter","charAt","alt","src","onerror","SUPPORTED_IMAGE_FORMATS","MIME_EXTENSIONS","makeImageUrl","photo","type","data","fitImageSize","width","height","maxWidth","maxHeight","forceSquare","scale","size","dstWidth","dstHeight","srcWidth","srcHeight","xoffset","yoffset","imageScaled","fileOrBlob","maxSize","onSuccess","img","Image","crossOrigin","onload","async","URL","revokeObjectURL","dim","canvas","createElement","ctx","getContext","imageSmoothingEnabled","drawImage","mime","indexOf","blob","Promise","resolve","toBlob","clearRect","fname","idx","ext","at","lastIndexOf","substring","fileNameForMime","name","createObjectURL","fileToBase64","file","reader","FileReader","split","readAsDataURL","blobToBase64","AvatarUpload","state","dataUrl","handleFileUpload","componentDidUpdate","prevProps","setState","files","unused","base64bits","du","onImageChanged","randId","random","substr","readOnly","href","uid","accept","onChange","htmlFor","CheckBox","handleChange","checked","icon_mapping","ContactBadges","badges","b","icon","color","UnreadBadge","Contact","handleContextClick","onSelected","index","showContextMenu","pageY","pageX","online","slice","icon_badges","acs","showMode","getMode","isMuted","isJoiner","showCheckmark","selected","showOnline","isChannel","unread","comment","ContactAction","action","values","badge_you","badge_owner","ContactList","Array","isArray","topicSelected","contactNodes","contactsCount","contacts","c","filterFunc","filter","private","toLowerCase","public","fn","myUserId","isOwner","join","showUnread","connected","onTopicSelected","noScroll","dangerouslySetInnerHTML","__html","emptyListMessage","MenuCancel","onCancel","ErrorPanel","show","level","onClearError","warn","text","whiteSpace","actionText","Chip","handleCancel","invalid","noAvatar","required","ChipInput","deriveStateFromProps","input","focused","handleTextInput","removeChipAt","handleChipCancel","handleFocusGained","handleFocusLost","handleKeyDown","placeholder","chips","prompt","sortedChips","sortChips","staticMembers","chipIndex","indexChips","prevState","keep","normal","includes","concat","removed","onChipRemoved","onFocusLost","onEnter","undefined","avatarDisabled","onFocus","onBlur","onKeyDown","autoFocus","no_contacts","contacts_not_found_short","GroupManager","members","indexMembers","keepInitialMembers","requiredMember","contactFilter","noContactsMessage","selectedContacts","handleContactSelected","handleMemberRemoved","handleContactFilter","handleSubmit","m","delta","present","keepInitial","stat","sel","userId","status","splice","val","query","instance","added","keys","k","onSubmit","doContactFiltering","VisiblePassword","handleVisibility","handeTextChange","handleEditingFinished","onFinished","setTimeout","activeElement","tabIndex","autoComplete","InPlaceEdit","active","initialValue","handleStartEditing","handlePasswordFinished","newValue","focus","event","checkValidity","fieldType","spanText","spanClass","MoreButton","open","handleToggle","onToggle","PermissionsEditor","replace","sort","names","joiner","writer","preser","approver","sharer","deleter","owner","skip","compare","userTitle","userAvatar","modeTitle","compareTitle","updateFavicon","oldIcon","getElementById","head","getElementsByTagName","newIcon","rel","removeChild","appendChild","vcard","imageDataUrl","card","dataStart","arrayEqual","l","sanitizeUrl","url","allowedSchemes","test","schemes","RegExp","TagManager","tags","tagInput","activated","handleTagInput","handleAddTag","handleRemoveTag","nextProps","last","tag","maxTagCount","getServerLimit","onTagsChanged","minTagLength","maxTagLength","add_tags_prompt","defautMessage","requested","granted","edit_permissions","other_user","clear_messages_warning","delete_messages","delete_messages_warning","leave_chat","leave_chat_warning","block_contact","block_contact_warning","report_chat","report_chat_warning","InfoView","admin","muted","address","groupTopic","channel","fullName","selectedContact","access","modeGiven","modeWant","modeGiven2","modeWant2","auth","anon","contactList","showMemberPanel","showPermissionEditorFor","moreInfoExpanded","previousMetaDesc","previousSubsUpdated","previousTagsUpdated","resetSubs","resetDesc","onMetaDesc","onSubsUpdated","onTagsUpdated","handleFullNameUpdate","handlePrivateUpdate","handleImageChanged","handleMuted","handlePermissionsChanged","handleLaunchPermissionsEditor","handleHidePermissionsEditor","handleShowAddMembers","handleHideAddMembers","handleMemberUpdateRequest","handleDeleteMessages","handleLeave","handleBlock","handleReport","handleMemberSelected","handleMoreInfo","handleTagsUpdated","handleContextMenu","getType","newState","user2","subscriber","getGiven","getWant","subscribers","sub","defacs","getDefaultAccess","getAccessMode","isAdmin","isSharer","isDeleter","getMeta","startMetaQuery","withTags","build","desc","subs","onTopicDescUpdate","ignored","onChangePermissions","perm","userPermissionsEdited","which","toEdit","toCompare","toSkip","titleEdit","titleCompare","userPermissionsTitle","userPermissionsAvatar","editedPermissions","immutablePermissions","editedPermissionsTitle","immutablePermissionsTitle","editedPermissionsSkipped","onInitFind","onMemberUpdateRequest","onDeleteMessages","onLeaveTopic","onBlockTopic","onReportTopic","onTopicTagsUpdate","menuItems","displayMobile","errorLevel","errorText","searchableContacts","private_placeholder","more","no_members","FileProgress","progress","Attachment","downloader","downloadFile","filename","mimetype","getLargeFileHelper","download","loaded","uploading","onCancelUpload","cancel","helperFunc","isUrlRelative","downloadUrl","downloadWidget","ReceivedMarker","timestamp","received","sending","failed","marker","UploadingImage","ChatMessage","uploader","onProgress","handleProgress","handleImagePreview","handleFormButtonClick","handleCancelUpload","onImagePreview","resp","act","ref","onFormResponse","MESSAGE_STATUS_FAILED","ratio","sideClass","deleted","sequence","response","bubbleClass","fullDisplay","userFrom","attachments","mimeType","Drafty","att","draftyFormatter","userName","notFound","el","attr","viewportWidth","authorizeURL","sanitizeImageUrl","inner","child","SendMessage","keypressTimestamp","getTime","handlePasteEvent","handleAttachImage","handleAttachFile","handleSend","handleKeyPress","handleMessageTyping","messageEditArea","disabled","onImageSuccess","onAttachmentSuccess","clipboardData","originalEvent","kind","getAsFile","imageFileScaledToBase64","imageFileToBase64","filePasted","bits","onAttachImage","onAttachFile","acceptBlank","noInput","onSendMessage","shiftKey","onKeyPress","messaging_disabled","messagePrompt","type_new_message","attachImage","click","attachFile","display","DocPreview","handleSendDoc","caption","onClose","mimeToIcon","default","image","video","iconFromMime","GroupSubs","usersOnline","totalCount","countToShow","some","overflow","ImagePreview","handleSendImage","assignWidth","node","getBoundingClientRect","maxlength","max","Invitation","handleButtonAction","evt","LoadSpinner","LogoView","version","serverVersion","serverAddress","HashNavigation","parts","path","forEach","part","decodeURIComponent","location","args","parsed","parseUrlHash","composeUrlHash","sidepanel","isUnconfirmed","ex","getExcessive","isPeerRestricted","ms","getMissing","MessagesView","getDerivedStateFromProps","leave","sendImageAttachment","sendFileAttachment","sendKeyPress","handleScrollReference","handleScrollEvent","handleDescChange","handleSubsUpdated","handleNewMessage","handleAllMessagesReceived","handleInfoReceipt","handleImagePostview","handleClosePreview","handleFormResponse","handleShowContextMenuMessage","handleNewChatAcceptance","handleEnablePeer","postReadNotification","clearNotificationQueue","readNotificationQueue","readNotificationTimer","messagesScroller","scrollTop","scrollHeight","scrollPosition","viewportHeight","onData","onAllMessagesReceived","onInfo","onPres","applicationVisible","isSubscribed","ready","newTopic","newTopicParams","_topicName","getQuery","withLaterDesc","withLaterSub","isReader","withLaterData","withLaterDel","fetchingMessages","setQuery","subscribe","code","onNewTopicCreated","queuedMessages","pub","_sending","publishMessage","setUrlTopic","blankState","not_found","nextState","docPreview","imagePreview","imagePostview","typingIndicator","msgs","assign","onlineSubs","peer","p2pPeerDesc","peerMessagingDisabled","isWriter","readingBlocked","unconformed","unconfirmed","oldTopicName","oldTopic","finally","msgHasMoreMessages","getMessagesPage","setInterval","clearInterval","n","shift","sendAt","noteRead","setMilliseconds","getMilliseconds","isNewMessage","msgStatus","from","what","clearTimeout","keyPressTimer","forceUpdate","sendMessage","attachJSON","parse","searchParams","set","search","messageSpecificMenuItems","onNewChat","noteKeyPress","maxInbandAttachmentSize","cannot_initiate_upload","uploadCompletionPromise","upload","urlPromise","maxExternAttachmentSize","limit","tinyBlob","blobMime","tinyBits64","insertImage","_tempPreview","appendLineBreak","append","init","bits64","preview","found","find","_cancelled","component","hideSelf","component2","messageNodes","previousFrom","chatBoxClass","nextFrom","thisFrom","isReply","deliveryStatus","userDesc","hi","ts","_uploader","lastSeen","cont","getMeTopic","getContact","online_now","seen","last_seen","when","onHideMessagesView","ButtonBack","onBack","MenuContacts","onNewTopic","onSettings","MenuStart","onSignUp","SideNavbar","archived_contacts_title","ContactsView","handleAction","unreadThreads","archivedCount","chatList","blocked","arch","touched","action_ignored","onShowArchive","LocalStorageUtil","localStorage","setItem","JSON","stringify","getItem","oldVal","getObject","setObject","removeItem","CreateAccountView","login","password","email","errorCleared","saveToken","handleLoginChange","handlePasswordChange","handleEmailChange","handleFnChange","handleToggleSaveToken","onCreateAccount","submitClasses","login_prompt","password_prompt","full_name_prompt","email_prompt","stay_logged_in","EditAccountView","me","onBasicNavigate","AccGeneralView","credentials","getCredentials","addCredActive","addCredInvalid","newCred","previousOnTags","tnNewTags","tnCredsUpdated","handleCredChange","handleCredKeyDown","handleCredEntered","onCredsUpdated","creds","onUpdateAccount","method","asPhone","asEmail","onCredAdd","onUpdateTags","cred","meth","done","onCredConfirm","onCredDelete","full_name_placeholder","title_tag_manager","handleCheckboxClick","onToggleMessageSounds","onTogglePushNotifications","onToggleIncognitoMode","messageSounds","desktopAlertsEnabled","desktopAlerts","incognitoMode","delete_account","delete_account_warning","AccSecurityView","blockedCount","handlePasswordUpdate","handleDeleteAccount","pwd","onDeleteAccount","password_unchanged","onLogout","onShowBlocked","AccSupportView","LoginView","hostName","onLogin","autoCorrect","autoCapitalize","invalid_id","NewTopicById","groupId","NewTopicGroup","handlePrivateChange","handleTagsChanged","handleChannelToggle","SearchContacts","edited","handleSearchChange","handleSearch","handleClear","onSearchContacts","search_placeholder","search_for_contacts","search_no_results","NewTopicView","tabSelected","searchQuery","handleTabClick","handleSearchContacts","handleNewGroupSubmit","handleGroupByID","addUrlParam","removeUrlParam","onCreateTopic","priv","no_contacts_placeholder","searchResults","PasswordResetView","token","scheme","onReset","onRequest","reset","HostSelector","changed","handleHostNameChange","onServerAddressChange","hostOptions","list","SettingsView","transport","handleTransportSelected","handleServerAddressChange","onUpdate","def","ws","lp","transportOptions","phone","ValidationView","credCode","credMethod","numbers_only","SidepanelView","handleLoginRequested","handleNewTopic","onLoginRequest","view","errorAction","errorActionText","loadSpinnerVisible","loginDisabled","onGlobalSettings","onUpdateAccountTags","onValidateCredentials","onPasswordResetRequest","onResetPassword","detectServerAddress","host","protocol","hostname","port","isSecureConnection","POP_SOUND","Audio","reconnect_countdown","reconnect_now","push_init_failed","invalid_security_token","no_connection","code_doesnot_match","TinodeWeb","getBlankState","handleResize","handleHashRoute","handleOnline","checkForAppUpdate","handleVisibilityEvent","handleError","handleLoginRequest","handleConnected","handleAutoreconnectIteration","doLogin","handleCredentialsRequest","handleLoginSuccessful","handleDisconnect","tnMeMetaDesc","tnMeContactUpdate","tnMeSubsUpdated","resetContactList","tnData","tnInitFind","tnFndSubsUpdated","handleTopicSelected","handleHideMessagesView","handleSendMessage","handleNewChatInvitation","handleNewAccount","handleNewAccountRequest","handleUpdateAccountRequest","handleUpdateAccountTagsRequest","handleToggleIncognitoMode","handleSettings","handleGlobalSettings","handleShowArchive","handleShowBlocked","handleToggleMessageSounds","handleCredAdd","handleCredDelete","handleCredConfirm","initDesktopAlerts","togglePushToken","requestPushToken","handleSidepanelCancel","handleStartTopicRequest","handleNewTopicCreated","handleTopicUpdateRequest","handleChangePermissions","handleLogout","handleDeleteMessagesRequest","handleLeaveUnsubRequest","handleBlockTopicRequest","handleReportTopic","handleShowContextMenu","defaultTopicContextMenu","handleHideContextMenu","handleShowAlert","handleShowInfoView","handleHideInfoView","handleValidateCredentialsRequest","handlePasswordResetRequest","handleResetPassword","handleContextMenuAction","settings","autoLogin","messageSoundsOff","FIREBASE_INIT","firebaseToken","hidden","sidePanelSelected","sidePanelTitle","sidePanelAvatar","liveConnection","onLine","topicSelectedOnline","topicSelectedAcs","innerWidth","showInfoPanel","mobilePanel","contextMenuVisible","contextMenuBounds","contextMenuClickAt","contextMenuParams","contextMenuItems","alertVisible","alertParams","documentElement","clientWidth","clientHeight","tnSetup","onConnect","onDisconnect","onAutoreconnectIteration","fbPush","usePublicVapidKey","messagingVapidKey","serviceWorker","register","reg","useServiceWorker","postMessage","setDeviceToken","parsedNav","expires","setAuthToken","connect","tab","readTimer","readTimerCallback","setHumanLanguage","enableLogging","mobile","onupdatefound","installingWorker","installing","onstatechange","controller","newTopicTabSelected","isConnected","getServerInfo","ver","sec","prom","reconnectCountdown","timeLeft","seconds","secondsToTime","reconnect","isAuthenticated","promise","getAuthToken","loginBasic","loginToken","onContactUpdate","getCurrentUserID","withDesc","withCred","disconnect","setUrlSidePanel","isPresencer","archived","isArchived","play","foundContacts","merged","updated","prepareSearchableContacts","receivedTimer","noteRecv","fnd","getFndTopic","withSub","s","setMeta","isTopicOnline","getTopicAccessMode","isP2P","am","updateWant","login_","password_","public_","cred_","tags_","createAccountBasic","updateAccountBasic","getCurrentLogin","on","onTokenRefresh","onMessage","payload","enabled","requestPermission","deleteToken","getToken","refreshedToken","delCredential","basicNavigator","isTopicCached","newGroupTopicName","oldName","newName","permissions","updateGiven","delCurrentUser","publish","self_blocked","subscribed","confirmText","rejectText","invite","requestResetAuthSecret","newPassword","str","btoa","atob","base64ReEncode","onAddMember","handleManageGroupMembers","hl","languages","baseLanguage","allMessages","IntlProvider","textComponent"],"mappings":"yBACA,IAAIA,EAAsB,CCA1B,EAAwB,SAASC,GAChC,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,WAAa,OAAOF,EAAgB,SACpC,WAAa,OAAOA,GAErB,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,GCLR,EAAwB,SAASI,EAASC,GACzC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3E,EAAwB,SAASM,EAAKC,GAAQ,OAAOL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,KCA3F,EAA+BI,M,SCA/B,EAA+BC,S,SCA/B,EAA+BC,U,uk9CCA/B,EAA+BC,SCA/B,GCA+BA,SAASC,UDATC,Q,SEGpB,MAAMC,UAAcN,kBACjCO,SACE,OAAOC,KAAKC,MAAMC,QAChB,yBAAKC,UAAU,mBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,SAASH,KAAKC,MAAMG,OACnC,yBAAKD,UAAU,WAAWH,KAAKC,MAAMI,SACrC,yBAAKF,UAAU,kBACZH,KAAKC,MAAMK,SACV,4BAAQH,UAAU,UAAUI,QAASP,KAAKC,MAAMK,UAC7CN,KAAKC,MAAMO,QAAU,kBAAC,EAAAC,iBAAD,CAAkBC,GAAG,mBAG7C,KAEF,4BAAQP,UAAU,OAAOI,QAASP,KAAKC,MAAMU,WAC1CX,KAAKC,MAAMW,SAAW,kBAAC,EAAAH,iBAAD,CAAkBC,GAAG,kBAMtD,MCvBG,MCCMG,EAAW,oBAMXC,EAAc,CAACC,OAAQ,gBAAiBC,MAAO,kBAG/CC,EAAeH,EAAYC,OAM3BG,EAAiB,IAcjBC,EAA0B,QAa1BC,EAAW,GAIXC,EAAc,IAadC,EAA6B,OAI7BC,EAA6B,GAAK,GAKlCC,EAAgB,KAUhBC,EAAmB,GCzE1BC,GAAWC,oBAAe,CAC9BC,KAAM,CACJlB,GAAI,iBACJmB,eAAgB,OAChBC,YAAa,mCAEfC,eAAgB,CACdrB,GAAI,2BACJmB,eAAgB,iBAChBC,YAAa,uBAEfE,cAAe,CACbtB,GAAI,mCACJmB,eAAgB,gBAChBC,YAAa,yCAEf,OAAU,CACRpB,GAAI,mBACJmB,eAAgB,SAChBC,YAAa,4BAEfG,eAAgB,CACdvB,GAAI,2BACJmB,eAAgB,iBAChBC,YAAa,8CAEfI,WAAY,CACVxB,GAAI,uBACJmB,eAAgB,QAChBC,YAAa,yBAEfK,KAAM,CACJzB,GAAI,iBACJmB,eAAgB,OAChBC,YAAa,0BAEfM,OAAQ,CACN1B,GAAI,mBACJmB,eAAgB,SAChBC,YAAa,yBAEfO,aAAc,CACZ3B,GAAI,yBACJmB,eAAgB,SAChBC,YAAa,uBAEfQ,qBAAsB,CACpB5B,GAAI,uBACJmB,eAAgB,qDAChBC,YAAa,4CAEfS,QAAS,CACP7B,GAAI,oBACJmB,eAAgB,UAChBC,YAAa,yBAGfU,MAAO,CACL9B,GAAI,kBACJmB,eAAgB,QAChBC,YAAa,uBAEfW,oBAAqB,CACnB/B,GAAI,sBACJmB,eAAgB,oDAChBC,YAAa,wCAEfY,cAAe,CACbhC,GAAI,0BACJmB,eAAgB,SAChBC,YAAa,0BAEfa,QAAS,CACPjC,GAAI,0BACJmB,eAAgB,UAChBC,YAAa,yDAIjB,MAAMc,UAAoBpD,cACxBqD,YAAY5C,GACV6C,MAAM7C,GAEN,MAAM,cAAC8C,GAAiB9C,EAAM+C,KAE9BhD,KAAKiD,gBAAkBjD,KAAKiD,gBAAgBC,KAAKlD,MACjDA,KAAKmD,gBAAkBnD,KAAKmD,gBAAgBD,KAAKlD,MACjDA,KAAKoD,YAAcpD,KAAKoD,YAAYF,KAAKlD,MAGzCA,KAAKqD,UAAY,CACf,WAAc,CACZ3C,GAAI,aACJN,MAAO2C,EAAcrB,EAASE,MAC9B0B,QAAS,MAEX,eAAkB,CAChB5C,GAAI,iBACJN,MAAO2C,EAAcrB,EAASK,gBAC9BuB,QAAS,CAACC,EAAQC,IACTvD,EAAMwD,YACXV,EAAc,CAACrC,GAAI,6BACnBqC,EAAc,CAACrC,GAAI,4BAClB,KAAQV,KAAK0D,gBAAe,GAAM,EAAOH,EAAQC,KAClD,MACA,EACA,OAIN,oBAAuB,CACrB9C,GAAI,sBACJN,MAAO2C,EAAcrB,EAASM,eAC9BsB,QAAS,CAACC,EAAQC,IACTvD,EAAMwD,YACXV,EAAc,CAACrC,GAAI,qCACnBqC,EAAc,CAACrC,GAAI,6BAClB,IAAeV,KAAK0D,gBAAe,GAAM,EAAMH,EAAQC,IACxD,MACA,EACA,OAIN,eAAkB,CAChB9C,GAAI,iBACJN,MAAO2C,EAAcrB,EAASiC,QAC9BL,QAAS,CAACC,EAAQC,IACTxD,KAAK0D,gBAAe,GAAO,EAAOH,EAAQC,IAGrD,oBAAuB,CACrB9C,GAAI,sBACJN,MAAO2C,EAAcrB,EAASO,gBAC9BqB,QAAS,CAACC,EAAQC,IACTxD,KAAK0D,gBAAe,GAAO,EAAMH,EAAQC,IAGpD,qBAAwB,CACtB9C,GAAI,uBACJN,MAAO2C,EAAcrB,EAASQ,YAC9BoB,QAAS,CAACC,EAAQC,IACTxD,KAAK4D,aAAaL,EAAQC,IAGrC,aAAgB,CACd9C,GAAI,eACJN,MAAO2C,EAAcrB,EAASU,QAC9BkB,QAAStD,KAAK6D,sBAAsBX,KAAKlD,KAAM,OAEjD,WAAc,CACZU,GAAI,aACJN,MAAO2C,EAAcrB,EAASS,MAC9BmB,QAAStD,KAAK6D,sBAAsBX,KAAKlD,KAAM,OAEjD,cAAiB,CACfU,GAAI,gBACJN,MAAO2C,EAAcrB,EAASa,SAC9Be,QAAStD,KAAK6D,sBAAsBX,KAAKlD,KAAM,QAEjD,YAAe,CACbU,GAAI,cACJN,MAAO2C,EAAcrB,EAASc,OAC9Bc,QAAS,CAACC,EAAQC,IACTvD,EAAMwD,YACXV,EAAc,CAACrC,GAAI,oBACnBqC,EAAcrB,EAASe,sBACtB,IACQzC,KAAK6D,sBAAsB,MAAON,EAAQC,GAAcM,MAAMC,IACnE/D,KAAKC,MAAM+D,eAAeT,EAAOU,WAC1BF,MAGX,MACA,EACA,OAIN,aAAgB,CACdrD,GAAI,eACJN,MAAO2C,EAAcrB,EAASW,cAC9BiB,QAAS,CAACC,EAAQC,IACTvD,EAAMwD,YACXV,EAAc,CAACrC,GAAI,2BACnBqC,EAAcrB,EAASY,uBACtB,KACC,MAAM4B,EAAQlE,KAAKC,MAAMkE,OAAOC,SAASb,EAAOU,WAChD,GAAKC,EAIL,OAAOA,EAAMG,UAAS,GAAMC,OAAOC,IAC7Bf,GACFA,EAAae,EAAIC,QAAS,UAL5BC,QAAQC,IAAI,oBAAqBnB,EAAOU,aAS5C,MACA,EACA,OAIN,cAAiB,CACfvD,GAAI,gBACJN,MAAO2C,EAAcrB,EAASiB,SAC9BW,QAAS,CAACC,EAAQC,KAChB,MAAMU,EAAQlE,KAAKC,MAAMkE,OAAOC,SAASb,EAAOU,WAChD,GAAKC,EAIL,OAAOA,EAAMvB,SAAQ,GAAM2B,OAAOC,IAC5Bf,GACFA,EAAae,EAAIC,QAAS,UAL5BC,QAAQC,IAAI,oBAAqBnB,EAAOU,aAW9C,YAAe,CACbvD,GAAI,cACJN,MAAO2C,EAAc,CAACrC,GAAI,+BAC1B4C,QAAS,MAEX,cAAiB,CACf5C,GAAI,gBACJN,MAAO2C,EAAcrB,EAASgB,eAC9BY,QAAS,CAACC,EAAQC,KAChB,MAAMU,EAAQlE,KAAKC,MAAMkE,OAAOC,SAASb,EAAOU,WAChD,GAAKC,GAAUX,EAAOoB,KAItB,OAAOT,EAAMU,gBAAgBrB,EAAOoB,MAAML,OAAOC,IAC3Cf,GACFA,EAAae,EAAIC,QAAS,UAL5BC,QAAQC,IAAI,6BAA+BnB,EAAOU,UAAY,OAASV,EAAOoB,KAAO,OAU3F,YAAe,CACbjE,GAAI,cACJN,MAAO2C,EAAcrB,EAASS,MAC9BmB,QAAStD,KAAK6D,sBAAsBX,KAAKlD,KAAM,OAEjD,cAAiB,CACfU,GAAI,gBACJN,MAAO2C,EAAcrB,EAASU,QAC9BkB,QAAStD,KAAK6D,sBAAsBX,KAAKlD,KAAM,OAEjD,aAAgB,CACdU,GAAI,eACJN,MAAO2C,EAAcrB,EAASc,OAC9Bc,QAAStD,KAAK6D,sBAAsBX,KAAKlD,KAAM,QAEjD,eAAkB,CAChBU,GAAI,iBACJN,MAAO2C,EAAcrB,EAASa,SAC9Be,QAAStD,KAAK6D,sBAAsBX,KAAKlD,KAAM,SAKrD6E,oBACEC,SAASC,iBAAiB,YAAa/E,KAAKiD,iBAAiB,GAC7D6B,SAASC,iBAAiB,QAAS/E,KAAKmD,iBAAiB,GAG3D6B,uBACEF,SAASG,oBAAoB,YAAajF,KAAKiD,iBAAiB,GAChE6B,SAASG,oBAAoB,QAASjF,KAAKmD,iBAAiB,GAG9DF,gBAAgBiC,GACVzF,gBAAqBO,MAAMmF,SAASD,EAAEE,UAG1CF,EAAEG,iBACFH,EAAEI,kBACFtF,KAAKC,MAAMsF,QAGbpC,gBAAgB+B,GACI,KAAdA,EAAEM,SACJxF,KAAKC,MAAMsF,OAIfnC,YAAY8B,GACVA,EAAEG,iBACFH,EAAEI,kBACFtF,KAAKC,MAAMsF,OACX,IAAIE,EAAOzF,KAAKC,MAAMyF,MAAMR,EAAES,cAAcC,QAAQlF,IACjC,iBAAR+E,IACTA,EAAOzF,KAAKqD,UAAUoC,IAGnBA,EAGHzF,KAAKC,MAAM4F,SACTJ,EAAK/E,GACL+E,EAAKnC,QAAQtD,KAAKC,MAAMsD,OAAQvD,KAAKC,MAAM6F,SAC3C9F,KAAKC,MAAMsD,QALbkB,QAAQC,IAAI,uBAAwBQ,EAAES,cAAcC,QAAQlF,IAWhEgD,eAAeqC,EAAKC,EAAMzC,EAAQC,GAChC,MAAMU,EAAQlE,KAAKC,MAAMkE,OAAOC,SAASb,EAAOU,WAChD,IAAKC,EAEH,YADAO,QAAQC,IAAI,oBAAqBnB,EAAOU,WAQ1C,IAAK8B,GAAO7B,EAAM+B,WAAW1C,EAAO2C,KAClC,OAOF,OAJgBH,EACd7B,EAAMiC,eAAeH,GACrB9B,EAAMkC,gBAAgB,CAAC7C,EAAO2C,KAAMF,IAEvB1B,OAAOC,IAChBf,GACFA,EAAae,EAAIC,QAAS,UAMhCZ,aAAaL,EAAQC,GACnB,MAAMU,EAAQlE,KAAKC,MAAMkE,OAAOC,SAASb,EAAOU,WAEhD,IAAKC,IAAUA,EAAMmC,aAAa9C,EAAO2C,KACvC,OAEF,MAAMI,EAAMpC,EAAMqC,cAAchD,EAAOlD,SAAS,GAChD,OAAO6D,EAAMsC,aAAaF,GAAKhC,OAAOC,IAChCf,GACFA,EAAae,EAAIC,QAAS,UAMhCX,sBAAsB4C,EAAMlD,EAAQC,GAClC,MAAMU,EAAQlE,KAAKC,MAAMkE,OAAOC,SAASb,EAAOU,WAChD,IAAKC,EAEH,YADAO,QAAQC,IAAI,kBAAmBnB,EAAOU,WAIxC,IAAIyC,EAASxC,EAAMyC,WAAWpD,EAAOoB,KAAM8B,GAM3C,OALIjD,IACFkD,EAASA,EAAOpC,OAAOC,IACrBf,EAAae,EAAIC,QAAS,WAGvBkC,EAGT3G,SACE,IAAI6G,EAAQ,EACRC,EAAO,GACX7G,KAAKC,MAAMyF,MAAMoB,KAAKrB,IACD,iBAARA,IACTA,EAAOzF,KAAKqD,UAAUoC,IAEpBA,GAAQA,EAAKrF,OACfyG,EAAKE,KACW,KAAdtB,EAAKrF,MACH,wBAAID,UAAU,YAAYtB,IAAK+H,IAE/B,wBAAIrG,QAASP,KAAKoD,YAAa4D,UAASJ,EAAO/H,IAAK+H,GAAQnB,EAAKrF,QAGvEwG,OAIF,MACMK,EAAQ7F,GAAY,GAAoB,IAAdyF,EAAKK,QAQ/BC,EAAW,CACfC,MARYpH,KAAKC,MAAMoH,OAAOC,MAAQtH,KAAKC,MAAMsH,QAAQC,EAF7C,IAGTxH,KAAKC,MAAMsH,QAAQC,EAAIxH,KAAKC,MAAMoH,OAAOD,KAHhC,IAITpH,KAAKC,MAAMsH,QAAQC,EAAIxH,KAAKC,MAAMoH,OAAOD,MAM/B,KACbK,KANWzH,KAAKC,MAAMoH,OAAOK,OAAS1H,KAAKC,MAAMsH,QAAQI,EAAIV,EAC1DjH,KAAKC,MAAMsH,QAAQI,EAAI3H,KAAKC,MAAMoH,OAAOI,IAAMR,EAC/CjH,KAAKC,MAAMsH,QAAQI,EAAI3H,KAAKC,MAAMoH,OAAOI,KAIjC,MAGb,OACE,wBAAItH,UAAU,OAAOyH,MAAOT,GACzBN,IAMT,OAAegB,gBAAWjF,GCjanB,SAASkF,EAAgBhE,EAAMiE,GACpCA,EAASA,GAAUC,OAAOC,UAAUC,cAAgBF,OAAOC,UAAUE,SACrE,MAAMC,EAAM,IAAIC,KAChB,OAAIvE,EAAKwE,eAAiBF,EAAIE,cAExBxE,EAAKyE,YAAcH,EAAIG,YAAczE,EAAK0E,WAAaJ,EAAII,UAEtD1E,EAAK2E,mBAAmBV,EAAQ,CAACW,QAAQ,EAAOC,KAAM,UAAWC,OAAQ,YAG3E9E,EAAK+E,mBAAmBd,EAC7B,CAACW,QAAQ,EAAOI,MAAO,QAASC,IAAK,UAAWJ,KAAM,UAAWC,OAAQ,YAGtE9E,EAAK+E,mBAAmBd,EAAQ,CAACiB,KAAM,UAAWF,MAAO,QAASC,IAAK,YAYzE,SAASE,EAAiBC,GAC/B,IAAKA,GAAkB,GAATA,EACZ,MAAO,UAGT,MAAMC,EAAQ,CAAC,QAAS,KAAM,KAAM,KAAM,KAAM,MAC1CC,EAASC,KAAKC,IAAwC,EAApCD,KAAKE,MAAMF,KAAKG,KAAKN,GAAS,IAASC,EAAMjC,OAAO,GACtEN,EAAQsC,EAAQG,KAAKI,IAAI,KAAML,GAC/BM,EAAQN,EAAS,EAAKxC,EAAQ,EAAI,EAAKA,EAAQ,GAAK,EAAI,EAAM,EACpE,OAAOA,EAAM+C,QAAQD,GAAS,IAAMP,EAAMC,GC9B7B,MAAMQ,UAAmBpK,kBACtCO,SACE,IAAI8J,EACJ,IAA0B,IAAtB7J,KAAKC,MAAM4J,OAAiB,CAC9B,MAAMC,EAAiD,OAAtCjK,cAAiBG,KAAKC,MAAMiE,OACvC6F,GAAaD,EAAU,cAAgB,cACxCT,KAAKW,ID6BT,SAAoBC,GACzB,IAAIC,EAAO,EACXD,EAAQ,GAAKA,EACb,IAAK,IAAIE,EAAI,EAAGA,EAAIF,EAAM/C,OAAQiD,IAChCD,GAASA,GAAQ,GAAKA,EAAQD,EAAMG,WAAWD,GAC/CD,GAAcA,EAEhB,OAAOA,ECpCWG,CAAWrK,KAAKC,MAAMiE,QAAU,GAC9C,GAAIlE,KAAKC,MAAMiE,OAASlE,KAAKC,MAAMG,OAASJ,KAAKC,MAAMG,MAAMkK,OAAQ,CACnE,MAAMC,EAASvK,KAAKC,MAAMG,MAAMkK,OAAOE,OAAO,GACxCrK,EAAY,cAAgB4J,EAClCF,EAAU,yBAAK1J,UAAWA,GAAW,6BAAMoK,QACtC,CACL,MAAMpK,EAAY,kBAAoB4J,EACtCF,EAASC,EACP,uBAAG3J,UAAWA,GAAd,SAAqC,uBAAGA,UAAWA,GAAd,gBAIzC0J,EAFS7J,KAAKC,MAAM4J,OAEX,yBAAK1J,UAAU,SAASsK,IAAI,SAASC,IAAK1K,KAAKC,MAAM4J,OAC5D/D,QAAUZ,IAAKA,EAAEE,OAAOuF,QAAU,KAAMzF,EAAEE,OAAOsF,IAAI,2BAE9C,KAEX,OAAOb,GCxBJ,MAAMe,EAA0B,CAAC,aAAc,YAAa,YAAa,YAAa,iBAChFC,EAA0B,CAAC,MAAc,MAAa,MAAa,MAAa,OAGtF,SAASC,EAAaC,GAC3B,OAAQA,GAASA,EAAMC,MAAQD,EAAME,KACnC,cAAgBF,EAAMC,KAAO,WAAaD,EAAME,KAAO,KAMpD,SAASC,EAAaC,EAAOC,EAAQC,EAAUC,EAAWC,GAO/D,GAJAH,GAAkB,EAClBC,GAAsB,EACtBC,GAAwB,GAHxBH,GAAgB,IAKH,GAAKC,GAAU,GAAKC,GAAY,GAAKC,GAAa,EAC7D,OAAO,KAGLC,IACFF,EAAWC,EAAYjC,KAAKC,IAAI+B,EAAUC,IAG5C,IAAIE,EAAQnC,KAAKC,IACfD,KAAKC,IAAI6B,EAAOE,GAAYF,EAC5B9B,KAAKC,IAAI8B,EAAQE,GAAaF,GAG5BK,EAAO,CACTC,SAAWP,EAAQK,EAAS,EAC5BG,UAAYP,EAASI,EAAS,GAchC,OAXID,GAEFE,EAAKC,SAAWD,EAAKE,UAAYtC,KAAKC,IAAImC,EAAKC,SAAUD,EAAKE,WAC9DF,EAAKG,SAAWH,EAAKI,UAAYxC,KAAKC,IAAI6B,EAAOC,GACjDK,EAAKK,SAAYX,EAAQM,EAAKG,UAAY,EAAK,EAC/CH,EAAKM,SAAYX,EAASK,EAAKG,UAAY,EAAK,IAEhDH,EAAKK,QAAUL,EAAKM,QAAU,EAC9BN,EAAKG,SAAWT,EAChBM,EAAKI,UAAYT,GAEZK,EAqBF,SAASO,EAAYC,EAAYZ,EAAUC,EAAWY,EAASX,EAAaY,EAAWrG,GAC5F,MAAMsG,EAAM,IAAIC,MAChBD,EAAIE,YAAc,YAClBF,EAAIzB,QAAU,SAASpG,GACrBuB,EAAQ,8BAEVsG,EAAIG,OAASC,iBAEXC,IAAIC,gBAAgBN,EAAI1B,KAGxB,MAAMiC,EAAMzB,EAAalL,KAAKmL,MAAOnL,KAAKoL,OAAQC,EAAUC,EAAWC,GACvE,IAAKoB,EAEH,YADA7G,EAAQ,iBAGV,IAAI8G,EAAS9H,SAAS+H,cAAc,UACpCD,EAAOzB,MAAQwB,EAAIjB,SACnBkB,EAAOxB,OAASuB,EAAIhB,UACpB,IAAImB,EAAMF,EAAOG,WAAW,MAC5BD,EAAIE,uBAAwB,EAC5BF,EAAIG,UAAUjN,KAAM2M,EAAIb,QAASa,EAAIZ,QAASY,EAAIf,SAAUe,EAAId,UAC9D,EAAG,EAAGc,EAAIjB,SAAUiB,EAAIhB,WAE1B,MAAMuB,EAAOtC,EAAwBuC,QAAQlB,EAAWjB,MAAQ,EAAI,aAAeiB,EAAWjB,KAE9F,IAAIoC,QAAa,IAAIC,SAAQC,GAAWV,EAAOW,OAAOD,EAASJ,KAC/D,GAAKE,EAAL,CAOA,KAAOlB,EAAU,GAAKkB,EAAKlG,OAASgF,GAClCS,EAAIjB,SAA2B,aAAfiB,EAAIjB,SAA4B,EAChDiB,EAAIhB,UAA6B,aAAhBgB,EAAIhB,UAA6B,EAClDiB,EAAOzB,MAAQwB,EAAIjB,SACnBkB,EAAOxB,OAASuB,EAAIhB,UACpBmB,EAAMF,EAAOG,WAAW,MACxBD,EAAIU,UAAU,EAAG,EAAGZ,EAAOzB,MAAOyB,EAAOxB,QACzC0B,EAAIG,UAAUjN,KAAM2M,EAAIb,QAASa,EAAIZ,QAASY,EAAIf,SAAUe,EAAId,UAC9D,EAAG,EAAGc,EAAIjB,SAAUiB,EAAIhB,WAC1ByB,QAAa,IAAIC,SAAQC,GAAWV,EAAOW,OAAOD,EAASJ,KAG7DN,EAAS,KACTT,EAAUiB,EAAMF,EAAMP,EAAIjB,SAAUiB,EAAIhB,UAhErC,SAAyB8B,EAAOP,GACrC,MAAMQ,EAAM9C,EAAwBuC,QAAQD,GAC5C,GAAIQ,EAAM,IAAMD,EAEd,OAAOA,EAET,MAAME,EAAM9C,EAAgB6C,GAEtBE,EAAKH,EAAMI,YAAY,KAI7B,OAHID,GAAM,IACRH,EAAQA,EAAMK,UAAU,EAAGF,IAEtBH,EAAQ,IAAME,EAoDgCI,CAAgB9B,EAAW+B,KAAMd,SAnBlFpH,EAAQ,6BAqBZsG,EAAI1B,IAAM+B,IAAIwB,gBAAgBhC,GAIzB,SAASiC,EAAaC,EAAMhC,GACjC,MAAMiC,EAAS,IAAIC,WACnBD,EAAOrJ,iBAAiB,QAAQ,WAC9BoH,EAAUgC,EAAKnD,KAAMoD,EAAO1H,OAAO4H,MAAM,KAAK,GAAIH,EAAKH,SAEzDI,EAAOG,cAAcJ,GAIhB,SAASK,EAAapB,EAAMjB,GACjC,MAAMiC,EAAS,IAAIC,WACnBD,EAAOrJ,iBAAiB,QAAQ,WAC9BoH,EAAUiB,EAAKpC,KAAMoD,EAAO1H,OAAO4H,MAAM,KAAK,OAEhDF,EAAOG,cAAcnB,GCtIR,MAAMqB,UAAqBjP,cACxCqD,YAAY5C,GACV6C,MAAM7C,GAEND,KAAK0O,MAAQ,CACXC,QAAS1O,EAAM4J,QAGjB7J,KAAK4O,iBAAmB5O,KAAK4O,iBAAiB1L,KAAKlD,MAGrD6O,mBAAmBC,GACb9O,KAAKC,MAAM4J,QAAUiF,EAAUjF,QACjC7J,KAAK+O,SAAS,CAACJ,QAAS3O,KAAKC,MAAM4J,SAIvC+E,iBAAiB1J,GACf8G,EAAY9G,EAAEE,OAAO4J,MAAM,GAAI3N,EAAaA,EAAaE,GAA4B,GAEnF,CAAC2L,EAAME,KAELoB,EAAapB,GAAM,CAAC6B,EAAQC,KAC1B,MAAMC,EAAKrE,EAAa,CAACG,KAAMiE,EAAYlE,KAAMkC,IACjDlN,KAAK+O,SAAS,CAACJ,QAASQ,IACxBnP,KAAKC,MAAMmP,eAAeD,SAI7B5K,IACCvE,KAAKC,MAAM6F,QAAQvB,EAAK,UAG5BW,EAAEE,OAAO6E,MAAQ,GAGnBlK,SAGE,MAAMsP,EAAS,sBAAwBhG,KAAKiG,SAAW,IAAIC,OAAO,GAC5DpP,EAAY,iBAAmBH,KAAKC,MAAMuP,SAAW,aAAe,IAC1E,OACE,yBAAKrP,UAAWA,GACbH,KAAKC,MAAMuP,WAAaxP,KAAK0O,MAAMC,QAClC,KACA,uBAAGc,KAAK,IAAItP,UAAU,eAAeI,QAAU2E,IAAOA,EAAEG,iBAAkBrF,KAAKC,MAAMmP,eAAe,QAClG,uBAAGjP,UAAU,kBAAb,UAEHH,KAAK0O,MAAMC,QACV,yBAAKjE,IAAK1K,KAAK0O,MAAMC,QAASxO,UAAU,YACxCH,KAAKC,MAAMuP,UAAYxP,KAAKC,MAAMyP,IAChC,yBAAKvP,UAAU,cACb,kBAACyJ,EAAD,CACEC,QAAQ,EACR3F,MAAOlE,KAAKC,MAAMyP,IAClBtP,MAAOJ,KAAKC,MAAMG,SAGtB,yBAAKD,UAAU,SAASkB,EAAxB,IAA4CA,GAC/CrB,KAAKC,MAAMuP,SAAW,KACrB,2BAAOxE,KAAK,OAAOtK,GAAI2O,EAAQlP,UAAU,mBACvCwP,OAAO,UAAUC,SAAU5P,KAAK4O,mBACnC5O,KAAKC,MAAMuP,SAAW,KACvB,2BAAOK,QAASR,EAAQlP,UAAU,SAChC,uBAAGA,UAAU,kBAAb,kBCpEK,MAAM2P,UAAiBtQ,kBACpCqD,YAAY5C,GACV6C,MAAM7C,GAEND,KAAK+P,aAAe/P,KAAK+P,aAAa7M,KAAKlD,MAG7C+P,eACE/P,KAAKC,MAAM2P,SAAS5P,KAAKC,MAAM+N,MAAOhO,KAAKC,MAAM+P,SAGnDjQ,SACE,OACEC,KAAKC,MAAM2P,SACT5P,KAAKC,MAAM+P,QACT,uBAAG7P,UAAU,gCAAgCI,QAASP,KAAK+P,cAA3D,aACA,uBAAG5P,UAAU,gCAAgCI,QAASP,KAAK+P,cAA3D,2BAEA/P,KAAKC,MAAM+P,QACT,uBAAG7P,UAAU,kBAAb,aACA,uBAAGA,UAAU,kBAAb,4BCrBZ,MAAM8P,EAAe,CAAC,MAAS,oBAAqB,OAAU,SAG/C,MAAMC,UAAsB1Q,kBACvCO,SACE,IAAIoQ,EAAS,KACb,OAAInQ,KAAKC,MAAMkQ,QAAUnQ,KAAKC,MAAMkQ,OAAOjJ,OAAS,GAClDiJ,EAAS,GACTnQ,KAAKC,MAAMkQ,OAAOrJ,KAAI,SAASsJ,GAC7B,GAAIA,EAAEC,KACJF,EAAOpJ,KAAK,uBAAG5G,UAAU,0BAA0BtB,IAAKuR,EAAEvR,KAAOuR,EAAEC,MAAOJ,EAAaG,EAAEC,YACpF,CACL,MAAMzI,EAAQ,SAAWwI,EAAEE,MAAQ,IAAMF,EAAEE,MAAQ,IACnDH,EAAOpJ,KAAK,0BAAM5G,UAAWyH,EAAO/I,IAAKuR,EAAEvR,KAAOuR,EAAEpC,MAAOoC,EAAEpC,WAG1D,oCAAGmC,IAEL,MCjBE,MAAMI,UAAoB/Q,kBACvCO,SACE,OAAQC,KAAKC,MAAM2G,MAAQ,EACzB,0BAAMzG,UAAU,UAAUH,KAAKC,MAAM2G,MAAQ,EAAI,KAAO5G,KAAKC,MAAM2G,OACjE,MCCO,MAAM4J,UAAgBhR,cACnCqD,YAAY5C,GACV6C,MAAM7C,GAEND,KAAKoD,YAAcpD,KAAKoD,YAAYF,KAAKlD,MACzCA,KAAKyQ,mBAAqBzQ,KAAKyQ,mBAAmBvN,KAAKlD,MAGzDoD,YAAY8B,GACVA,EAAEG,iBACFH,EAAEI,kBACEtF,KAAKC,MAAMyQ,YAEb1Q,KAAKC,MAAMyQ,WAAW1Q,KAAKC,MAAMwF,KAAMzF,KAAKC,MAAM0Q,OAItDF,mBAAmBvL,GACjBA,EAAEG,iBACFH,EAAEI,kBACFtF,KAAKC,MAAM2Q,gBAAgB,CAAE3M,UAAWjE,KAAKC,MAAMwF,KAAMkC,EAAGzC,EAAE2L,MAAOrJ,EAAGtC,EAAE4L,QAG5E/Q,SACE,IAAIK,EAAQJ,KAAKC,MAAMG,MAClBA,EAEMA,EAAM8G,OAAS,KAExB9G,EAAQA,EAAM0N,UAAU,EAAG,IAAM,OAHjC1N,EAAQ,2BAAG,kBAAC,EAAAK,iBAAD,CAAkBC,GAAG,mBAKlC,MAAMqQ,EAAS/Q,KAAKC,MAAMmI,IAAM,SAAW,UACrCyB,GAAS7J,KAAKC,MAAM4J,QAAS7J,KAAKC,MAAM4J,OACxCsG,EAASnQ,KAAKC,MAAMkQ,OAASnQ,KAAKC,MAAMkQ,OAAOa,QAAU,GACzDC,EAAc,GAapB,OAZIjR,KAAKC,MAAMiR,MACTlR,KAAKC,MAAMkR,UACbhB,EAAOpJ,KAAK,CAACiH,KAAMhO,KAAKC,MAAMiR,IAAIE,UAAWvS,IAAK,SAEhDmB,KAAKC,MAAMiR,IAAIG,WACjBJ,EAAYlK,KAAK,CAACsJ,KAAM,UAErBrQ,KAAKC,MAAMiR,IAAII,YAClBL,EAAYlK,KAAK,CAACsJ,KAAM,YAK1B,wBAAIlQ,WAAYH,KAAKC,MAAMsR,eAAiBvR,KAAKC,MAAMuR,SAAW,WAAa,KAC7EjR,QAASP,KAAKoD,aACd,yBAAKjD,UAAU,cACb,kBAACyJ,EAAD,CACEC,OAAQA,EACRzJ,MAAOJ,KAAKC,MAAMG,MAClB8D,MAAOlE,KAAKC,MAAMwF,OACnBzF,KAAKC,MAAMwR,WAAa,0BAAMtR,UAAW4Q,IACvC/Q,KAAKC,MAAMsR,eAAiBvR,KAAKC,MAAMuR,SACxC,uBAAGrR,UAAU,4BAAb,gBACE,MAEN,yBAAKA,UAAU,YACb,6BAAK,0BAAMA,UAAU,iBAAiBC,GACnCJ,KAAKC,MAAMyR,UAAY,yBAAKhH,IAAI,mBAAmBvK,UAAU,UAAUsK,IAAI,YAAe,KAC3F,kBAAC8F,EAAD,CAAa3J,MAAO5G,KAAKC,MAAM0R,SAAU,kBAACzB,EAAD,CAAeC,OAAQc,KAEjEjR,KAAKC,MAAM2R,QAAU,yBAAKzR,UAAU,mBAAmBH,KAAKC,MAAM2R,SAAiB,KACpF,8BAAM,kBAAC1B,EAAD,CAAeC,OAAQA,MAE9BnQ,KAAKC,MAAM2Q,gBACV,0BAAMzQ,UAAU,eACd,uBAAGsP,KAAK,IAAIlP,QAASP,KAAKyQ,oBACxB,uBAAGtQ,UAAU,kBAAb,iBAEM,OC7EpB,MAAM0R,UAAsBrS,kBAC1BqD,YAAY5C,GACV6C,MAAM7C,GAEND,KAAKoD,YAAcpD,KAAKoD,YAAYF,KAAKlD,MAG3CoD,YAAY8B,GACVA,EAAEG,iBACFH,EAAEI,kBACFtF,KAAKC,MAAM4F,SAAS7F,KAAKC,MAAM6R,QAGjC/R,SACE,MAAM,cAACgD,GAAiB/C,KAAKC,MAAM+C,KACnC,OACE,wBAAIzC,QAASP,KAAKoD,YAAajD,UAAU,UACvC,yBAAKA,UAAU,eAAe4C,EAAc/C,KAAKC,MAAMG,MAAOJ,KAAKC,MAAM8R,WAMjF,OAAelK,gBAAWgK,GCd1B,MAKMnQ,GAAWC,oBAAe,CAC9BqQ,UAAW,CACTtR,GAAI,YACJmB,eAAgB,MAChBC,YAAa,yCAEfmQ,YAAa,CACXvR,GAAI,cACJmB,eAAgB,QAChBC,YAAa,oCAIjB,MAAMoQ,UAAoB1S,cACxBO,SACE,MAAM,cAAEgD,GAAkB/C,KAAKC,MAAM+C,KAC/BuO,EAAgBY,MAAMC,QAAQpS,KAAKC,MAAMoS,eACzCC,EAAe,GACrB,IAAIC,EAAgB,EAuEpB,OAtEIvS,KAAKC,MAAMuS,UAAYxS,KAAKC,MAAMuS,SAAStL,OAAS,GACtDlH,KAAKC,MAAMuS,SAAS1L,KAAK2L,IACvB,GAAIA,EAAEX,OAEJQ,EAAavL,KACX,kBAAC,EAAD,CACE3G,MAAOqS,EAAErS,MAAO0R,OAAQW,EAAEX,OAAQC,OAAQU,EAAEV,OAC5ClT,IAAK4T,EAAEX,OACPjM,SAAU7F,KAAKC,MAAM4F,gBAEpB,CAEL,MAAMhH,EAAMmB,KAAKC,MAAMkR,SAAWsB,EAAE9N,KAAQ8N,EAAEvO,OAASuO,EAAE9N,KAGzD,GAAI3E,KAAKC,MAAMyS,YAAc1S,KAAKC,MAAM0S,OAAQ,CAC9C,IAAItS,EAAU,CAACxB,GAOf,GANI4T,EAAEG,SAAWH,EAAEG,QAAQhB,SACzBvR,EAAQ0G,MAAM,GAAK0L,EAAEG,QAAQhB,SAASiB,eAEpCJ,EAAEK,QAAUL,EAAEK,OAAOC,IACvB1S,EAAQ0G,MAAM,GAAK0L,EAAEK,OAAOC,IAAIF,gBAE7B7S,KAAKC,MAAMyS,WAAW1S,KAAKC,MAAM0S,OAAQtS,GAC5C,OAIJ,MAAMqR,EAAY7R,uBAA0BhB,GACtC2S,EAAWD,EACdvR,KAAKC,MAAMoS,cAAclF,QAAQtO,IAAQ,EACzCmB,KAAKC,MAAMoS,gBAAkBxT,EAC1BsR,EAAS,GACXnQ,KAAKC,MAAMkR,WACTtS,GAAOmB,KAAKC,MAAM+S,UACpB7C,EAAOpJ,KAAK,CAACiH,KAAMjL,EAAcrB,EAASsQ,WAAY1B,MAAO,UAE3DmC,EAAEvB,KAAOuB,EAAEvB,IAAI+B,WACjB9C,EAAOpJ,KAAK,CAACiH,KAAMjL,EAAcrB,EAASuQ,aAAc3B,MAAO,UAInE,MAAMsB,EAAUO,MAAMC,QAAQK,EAAEG,SAC9BH,EAAEG,QAAQM,KAAK,KAAQT,EAAEG,QAAUH,EAAEG,QAAQhB,QAAU,KAEzDU,EAAavL,KACX,kBAACyJ,EAAD,CACEpQ,MAAOqS,EAAEK,OAASL,EAAEK,OAAOC,GAAK,KAChClJ,OAAQiB,EAAa2H,EAAEK,OAASL,EAAEK,OAAO/H,MAAQ,MACjD6G,QAASA,EACTD,OAAQ3R,KAAKC,MAAMkT,WAAaV,EAAEd,OAAS,EAC3CvJ,IAAKqK,EAAE1B,QAAU/Q,KAAKC,MAAMmT,UAC5BlC,IAAKuB,EAAEvB,IACPC,SAAUnR,KAAKC,MAAMkR,SACrBhB,OAAQA,EACRoB,cAAeA,EACfC,SAAUA,EACVC,WAAYzR,KAAKC,MAAMwR,aAAeC,EACtCA,UAAWA,EACXhB,WAAY1Q,KAAKC,MAAMoT,gBACvBzC,gBAAiB5Q,KAAKC,MAAM2Q,gBAC5BnL,KAAM5G,EACN8R,MAAO2B,EAAapL,OACpBrI,IAAKA,KAET0T,OAEDvS,MAIH,yBAAKG,UAAWH,KAAKC,MAAMqT,SAAW,KAAO,oBACzB,GAAjBf,EACC,yBAAKpS,UAAU,qBACboT,wBAAyB,CAACC,OAAQxT,KAAKC,MAAMwT,oBAE/C,KAEDnB,EAAapL,OAAS,EACrB,wBAAI/G,UAAU,eACXmS,GAGH,OAuDV,OAAezK,gBAAWqK,GC5KX,MAAMwB,UAAmBlU,kBACtCO,SACE,OACE,uBAAG0P,KAAK,IAAIlP,QAAU2E,IAAOA,EAAEG,iBAAkBrF,KAAKC,MAAM0T,aAC1D,uBAAGxT,UAAU,kBAAb,WCHO,MAAMyT,UAAmBpU,kBACtCqD,YAAY5C,GACV6C,MAAM7C,GAEND,KAAK0O,MAAQ,CACXmF,MAAM,GAGR7T,KAAKuF,KAAOvF,KAAKuF,KAAKrC,KAAKlD,MAG7B6O,mBAAmBC,GACbA,EAAUgF,QAAU9T,KAAKC,MAAM6T,OACjC9T,KAAK+O,SAAS,CACZ8E,OAAS7T,KAAKC,MAAM6T,QAK1BvO,OACEvF,KAAK+O,SAAS,CAAC8E,MAAM,IACjB7T,KAAKC,MAAM8T,cACb/T,KAAKC,MAAM8T,eAIfhU,SACE,MACM+T,EADQ,CAACvP,IAAK,QAASyP,KAAM,UAAWpS,KAAM,QAChC5B,KAAKC,MAAM6T,QAAU,GACnC3T,EAAY,YAAc2T,EAChC,OACE,yBAAK3T,UAAWA,GACd,yBAAKA,UAAU,QAAO,uBAAGA,UAAU,kBAAkB2T,IACrD,8BACG9T,KAAKC,MAAMgU,KACXjU,KAAKC,MAAM6R,OACV,oCACO,uBAAGrC,KAAK,IACX7H,MAAO,CAAEsM,WAAY,UACrB3T,QAAU2E,IAAOA,EAAEG,iBAAkBrF,KAAKC,MAAM6R,WAC/C9R,KAAKC,MAAMkU,aAGhB,MAEJ,yBAAKhU,UAAU,UAAS,kBAACuT,EAAD,CAAYC,SAAU3T,KAAKuF,UC7C5C,MAAM6O,UAAa5U,kBAChCqD,YAAY5C,GACV6C,MAAM7C,GAEND,KAAKqU,aAAerU,KAAKqU,aAAanR,KAAKlD,MAG7CqU,aAAanP,GACXA,EAAEG,iBACFrF,KAAKC,MAAM0T,SAAS3T,KAAKC,MAAMiE,MAAOlE,KAAKC,MAAM0Q,OAGnD5Q,SACE,MAAMK,EAAQJ,KAAKC,MAAMG,OAASJ,KAAKC,MAAMiE,MACvC/D,EAAYH,KAAKC,MAAMqU,QAAU,eAAiB,OACxD,OACE,yBAAKnU,UAAWA,GACbH,KAAKC,MAAMsU,SACV,0BAAMpU,UAAU,WAChB,yBAAKA,UAAU,cACb,kBAACyJ,EAAD,CACEC,OAAQ7J,KAAKC,MAAM4J,SAAU,EAC7B3F,MAAOlE,KAAKC,MAAMiE,MAClB9D,MAAOJ,KAAKC,MAAMG,SAGxB,8BAAOA,GACNJ,KAAKC,MAAM0T,WAAa3T,KAAKC,MAAMuU,SAClC,uBAAG/E,KAAK,IAAIlP,QAASP,KAAKqU,cAA1B,KACE,0BAAMlU,UAAU,aC1Bb,MAAMsU,UAAkBjV,cACrCqD,YAAY5C,GACV6C,MAAM7C,GAEND,KAAK0O,MAAQ+F,EAAUC,qBAAqBzU,GAC5CD,KAAK0O,MAAMiG,MAAQ,GACnB3U,KAAK0O,MAAMkG,SAAU,EAErB5U,KAAK6U,gBAAkB7U,KAAK6U,gBAAgB3R,KAAKlD,MACjDA,KAAK8U,aAAe9U,KAAK8U,aAAa5R,KAAKlD,MAC3CA,KAAK+U,iBAAmB/U,KAAK+U,iBAAiB7R,KAAKlD,MACnDA,KAAKgV,kBAAoBhV,KAAKgV,kBAAkB9R,KAAKlD,MACrDA,KAAKiV,gBAAkBjV,KAAKiV,gBAAgB/R,KAAKlD,MACjDA,KAAKkV,cAAgBlV,KAAKkV,cAAchS,KAAKlD,MAG/C,4BAA4BC,GAC1B,MAAO,CACLkV,YAAalV,EAAMmV,MAAQ,GAAKnV,EAAMoV,OACtCC,YAAab,EAAUc,UAAUtV,EAAMmV,MAAOnV,EAAMuV,eACpDC,UAAWhB,EAAUiB,WAAWzV,EAAMmV,QAI1CvG,mBAAmBC,EAAW6G,GACxB7G,EAAUsG,OAASpV,KAAKC,MAAMmV,OAChCtG,EAAU0G,eAAiBxV,KAAKC,MAAMuV,eACtC1G,EAAUuG,QAAUrV,KAAKC,MAAMoV,QAC/BrV,KAAK+O,SAAS0F,EAAUC,qBAAqB1U,KAAKC,UAE/C0V,GAAa3V,KAAKC,MAAMmV,MAAMlO,OAASyO,EAAUL,YAAYpO,SAChElH,KAAK+O,SAAS,CAAC4F,MAAO,KAK1B,kBAAkBS,GAChB,MAAMzE,EAAQ,GACd,IAAI/J,EAAQ,EAKZ,OAJAwO,EAAMtO,KAAKrB,IACTkL,EAAMlL,EAAKd,MAAQiC,EACnBA,OAEK+J,EAIT,iBAAiByE,EAAOQ,GACtB,MAAMpB,EAAW,GACXqB,EAAS,GAQf,OAPAT,EAAMtO,KAAKrB,IACLmQ,GAAQA,EAAKE,SAASrQ,EAAKd,MAC7B6P,EAASzN,KAAKtB,GAEdoQ,EAAO9O,KAAKtB,MAGT+O,EAASuB,OAAOF,GAGzBhB,gBAAgB3P,GACdlF,KAAK+O,SAAS,CAAC4F,MAAOzP,EAAEE,OAAO6E,QAC3BjK,KAAKC,MAAMyS,YACb1S,KAAKC,MAAMyS,WAAWxN,EAAEE,OAAO6E,OAInC6K,aAAapH,GACX,MAAMsI,EAAUhW,KAAK0O,MAAM4G,YAAY5H,GACvC1N,KAAKC,MAAMgW,cAAcD,EAAQrR,KAAM3E,KAAK0O,MAAM+G,UAAUO,EAAQrR,OAGtEoQ,iBAAiBtP,EAAMiI,GACrB1N,KAAK8U,aAAapH,GAGpBsH,oBACEhV,KAAK+O,SAAS,CAAC6F,SAAS,IAG1BK,kBACEjV,KAAK+O,SAAS,CAAC6F,SAAS,IACpB5U,KAAKC,MAAMiW,aACblW,KAAKC,MAAMiW,YAAYlW,KAAK0O,MAAMiG,OAItCO,cAAchQ,GACZ,GAAc,cAAVA,EAAErG,KACJ,GAA+B,GAA3BmB,KAAK0O,MAAMiG,MAAMzN,QAAelH,KAAK0O,MAAM4G,YAAYpO,OAAS,EAAG,CACrE,MAAM0G,EAAK5N,KAAK0O,MAAM4G,YAAYpO,OAAS,EACvClH,KAAK0O,MAAM4G,YAAY1H,GAAIjJ,OAAS3E,KAAKC,MAAMuV,eACjDxV,KAAK8U,aAAalH,QAGH,UAAV1I,EAAErG,IACPmB,KAAKC,MAAMkW,SACbnW,KAAKC,MAAMkW,QAAQnW,KAAK0O,MAAMiG,OAEb,WAAVzP,EAAErG,KACPmB,KAAKC,MAAM0T,UACb3T,KAAKC,MAAM0T,WAKjB5T,SACE,MAAMqV,EAAQ,GACd,IAAIxO,EAAQ,EACZ,MAAM4O,EAAgBxV,KAAKC,MAAMuV,eAAiB,GAClDxV,KAAK0O,MAAM4G,YAAYxO,KAAKrB,IAC1B2P,EAAMrO,KACJ,kBAACqN,EAAD,CACET,SAAU3T,KAAK+U,iBACflL,OAAQiB,EAAarF,EAAKqN,OAASrN,EAAKqN,OAAO/H,MAAQ,MACvD3K,MAAOqF,EAAKqN,OAASrN,EAAKqN,OAAOC,QAAKqD,EACtC7B,SAAUvU,KAAKC,MAAMoW,eACrBnS,MAAOuB,EAAKd,KACZ6P,SAAUgB,EAAcM,SAASrQ,EAAKd,MACtC2P,QAAS7O,EAAK6O,QACd3D,MAAO/J,EACP/H,IAAK4G,EAAKd,QAEdiC,OAEF,MAAMzG,EAAY,cAAgBH,KAAK0O,MAAMkG,QAAU,WAAa,IACpE,OACE,yBAAKzU,UAAWA,GACbiV,EACD,2BAAOpK,KAAK,OACVmK,YAAanV,KAAK0O,MAAMyG,YACxBvF,SAAU5P,KAAK6U,gBACfyB,QAAStW,KAAKgV,kBACduB,OAAQvW,KAAKiV,gBACbuB,UAAWxW,KAAKkV,cAChBjL,MAAOjK,KAAK0O,MAAMiG,MAClB8B,WAAS,MCxInB,MAAM/U,GAAWC,oBAAe,CAC9B+U,YAAa,CACXhW,GAAI,cACJmB,eAAgB,2BAChBC,YAAa,uDAEf6U,yBAA0B,CACxBjW,GAAI,2BACJmB,eAAgB,gCAChBC,YAAa,2DAIjB,MAAM8U,UAAqBpX,cACzBqD,YAAY5C,GACV6C,MAAM7C,GAEND,KAAK0O,MAAQ,CAEXmI,QAAS5W,EAAM4W,QACflG,MAAOiG,EAAaE,aAAa7W,EAAM4W,SACvCrB,cAAeoB,EAAapB,cAAcvV,EAAM4W,QAAS5W,EAAM8W,mBAAoB9W,EAAM+W,gBACzFC,cAAe,GACfC,kBAAmBjX,EAAM+C,KAAKD,cAAcrB,EAASgV,aACrDS,iBAAkBP,EAAaO,iBAAiBlX,EAAM4W,UAGxD7W,KAAKoX,sBAAwBpX,KAAKoX,sBAAsBlU,KAAKlD,MAC7DA,KAAKqX,oBAAsBrX,KAAKqX,oBAAoBnU,KAAKlD,MACzDA,KAAKsX,oBAAsBtX,KAAKsX,oBAAoBpU,KAAKlD,MACzDA,KAAKuX,aAAevX,KAAKuX,aAAarU,KAAKlD,MAC3CA,KAAKqU,aAAerU,KAAKqU,aAAanR,KAAKlD,MAG7C,oBAAoB6W,GAClB,IAAIlG,EAAQ,GAIZ,OAHAkG,EAAQ/P,KAAK0Q,IACX7G,EAAM6G,EAAE7S,MAAQ,CAAC8S,MAAO,EAAGC,SAAS,MAE/B/G,EAGT,qBAAqBkG,EAASc,EAAaX,GACzC,IAAIY,EAAO,GAMX,OALAf,EAAQ/P,KAAK0Q,KACPG,GAAeH,EAAE7S,MAAQqS,IAC3BY,EAAK7Q,KAAKyQ,EAAE7S,SAGTiT,EAGT,wBAAwBf,GACtB,IAAIgB,EAAM,GAIV,OAHAhB,EAAQ/P,KAAK0Q,IACXK,EAAI9Q,KAAKyQ,EAAE7S,SAENkT,EAGTT,sBAAsBU,EAAQnH,GAC5B,IAAIoH,EAAS/X,KAAK0O,MAAMiC,MAAMmH,GAC9B,GAAIC,EAAQ,CACV,GAAIA,EAAOL,QAET,OAEFK,EAAON,OAAS,EAChBM,EAAOL,SAAU,OAEjBK,EAAS,CAACN,MAAO,EAAGC,SAAS,GAG/B,IAAIF,EAAIxX,KAAK0O,MAAMmI,QAAQ7F,QAC3BwG,EAAEzQ,KAAK/G,KAAKC,MAAMuS,SAAS7B,IAE3B,MAAMkH,EAAMjB,EAAaO,iBAAiBK,GAEpCrN,EAAInK,KAAK0O,MAAMiC,MACrBxG,EAAE2N,GAAUC,EAEZ/X,KAAK+O,SAAS,CAAC8H,QAASW,EAAG7G,MAAOxG,EAAGgN,iBAAkBU,IAGzDR,oBAAoBS,EAAQnH,GAC1B,MAAMoH,EAAS/X,KAAK0O,MAAMiC,MAAMmH,GAChC,IAAKC,IAAWA,EAAOL,QACrB,OAEFK,EAAOL,SAAU,EACjBK,EAAON,OAAS,EAEhB,IAAID,EAAIxX,KAAK0O,MAAMmI,QAAQ7F,QAC3BwG,EAAEQ,OAAOrH,EAAO,GAEhB,MAAMkH,EAAMjB,EAAaO,iBAAiBK,GAEpCrN,EAAInK,KAAK0O,MAAMiC,MACrBxG,EAAE2N,GAAUC,EAEZ/X,KAAK+O,SAAS,CAAC8H,QAASW,EAAG7G,MAAOxG,EAAGgN,iBAAkBU,IAGzDP,oBAAoBW,GAClB,MAAM,cAAClV,GAAiB/C,KAAKC,MAAM+C,KAC7BsD,EAAO2R,EAEXlV,EAAcrB,EAASiV,yBAA0B,CAACuB,MAAOD,IADzDlV,EAAcrB,EAASgV,aAGzB1W,KAAK+O,SAAS,CAACkI,cAAegB,EAAKf,kBAAmB5Q,IAGxD,0BAA0BqM,EAAQZ,GAChC,GAAIY,EAAQ,CACV,IAAK,IAAIxI,EAAE,EAAGA,EAAE4H,EAAO7K,OAAQiD,IAC7B,GAAI4H,EAAO5H,GAAGgD,QAAQwF,IAAW,EAC/B,OAAO,EAGX,OAAO,EAET,OAAO,EAGT4E,eACE,IAAIY,EAAWnY,KACX6W,EAAU,GACVuB,EAAQ,GACRpC,EAAU,GAEHjX,OAAOsZ,KAAKrY,KAAK0O,MAAMiC,OAC7B7J,KAAI,SAASwR,GACZH,EAASzJ,MAAMiC,MAAM2H,GAAGZ,SAC1Bb,EAAQ9P,KAAKuR,GAGXH,EAASzJ,MAAMiC,MAAM2H,GAAGb,MAAQ,EAClCW,EAAMrR,KAAKuR,GACFH,EAASzJ,MAAMiC,MAAM2H,GAAGb,MAAQ,GACzCzB,EAAQjP,KAAKuR,MAGjBtY,KAAKC,MAAMsY,SAAS1B,EAASuB,EAAOpC,GAGtC3B,eACErU,KAAKC,MAAM0T,WAGb5T,SACE,MAAM,cAACgD,GAAiB/C,KAAKC,MAAM+C,KACnC,OACE,yBAAKtC,GAAG,iBACN,yBAAKP,UAAU,kBACb,2BAAOA,UAAU,SACf,kBAAC,EAAAM,iBAAD,CAAkBC,GAAG,sBAAsBmB,eAAe,gBAAgBC,YAAY,oBAG1F,yBAAK3B,UAAU,kBACb,kBAACsU,EAAD,CACEW,MAAOpV,KAAK0O,MAAMmI,QAClBrB,cAAexV,KAAK0O,MAAM8G,cAC1BH,OAAO,cACP3C,WAAY1S,KAAKsX,oBACjBrB,cAAejW,KAAKqX,uBAExB,yBAAKlX,UAAU,kBACb,2BAAOA,UAAU,SACf,kBAAC,EAAAM,iBAAD,CAAkBC,GAAG,qBAAqBmB,eAAe,eACvDC,YAAY,mCAGlB,kBAAC,EAAD,CACE0Q,SAAUxS,KAAKC,MAAMuS,SACrBQ,SAAUhT,KAAKC,MAAM+S,SACrBX,cAAerS,KAAK0O,MAAMyI,iBAC1BxE,OAAQ3S,KAAK0O,MAAMuI,cACnBvE,WAAYkE,EAAa4B,mBACzB/E,iBAAkBzT,KAAK0O,MAAMwI,kBAC7BzF,YAAY,EACZ0B,YAAY,EACZE,gBAAiBrT,KAAKoX,wBACxB,yBAAK1W,GAAG,wBAAwBP,UAAU,kBACxC,4BAAQA,UAAU,OAAOI,QAASP,KAAKuX,cACrC,kBAAC,EAAA9W,iBAAD,CAAkBC,GAAG,YAAYmB,eAAe,KAAKC,YAAY,iBAEnE,4BAAQ3B,UAAU,QAAQI,QAASP,KAAKqU,cACtC,kBAAC,EAAA5T,iBAAD,CAAkBC,GAAG,gBAAgBmB,eAAe,SAASC,YAAY,wBAQrF,OAAe+F,gBAAW+O,GCvMX,MAAM6B,UAAwBjZ,kBAC3CqD,YAAY5C,GACV6C,MAAM7C,GAEND,KAAK0O,MAAQ,CACXzE,MAAOjK,KAAKC,MAAMgK,MAClB/J,SAAS,GAGXF,KAAK0Y,iBAAmB1Y,KAAK0Y,iBAAiBxV,KAAKlD,MACnDA,KAAK2Y,gBAAkB3Y,KAAK2Y,gBAAgBzV,KAAKlD,MACjDA,KAAKkV,cAAgBlV,KAAKkV,cAAchS,KAAKlD,MAC7CA,KAAK4Y,sBAAwB5Y,KAAK4Y,sBAAsB1V,KAAKlD,MAG/D2Y,gBAAgBzT,GACdlF,KAAK+O,SAAS,CAAC9E,MAAO/E,EAAEE,OAAO6E,QAC3BjK,KAAKC,MAAM2P,UACb5P,KAAKC,MAAM2P,SAAS1K,GAIxBwT,iBAAiBxT,GACfA,EAAEG,iBACFrF,KAAK+O,SAAS,CAAC7O,SAAUF,KAAK0O,MAAMxO,UAGtCgV,cAAchQ,GACK,IAAbA,EAAEM,SAEJxF,KAAK+O,SAAS,CAAC9E,MAAOjK,KAAKC,MAAMgK,MAAO/J,SAAS,IAC7CF,KAAKC,MAAM4Y,YACb7Y,KAAKC,MAAM4Y,cAES,IAAb3T,EAAEM,SAEXxF,KAAK4Y,wBAITA,sBAAsB1T,GACpB,GAAIA,EAAG,CACL,IAAIS,EAAgBT,EAAES,cACtBmT,YAAW,KACJnT,EAAcR,SAASL,SAASiU,gBAC/B/Y,KAAKC,MAAM4Y,YACb7Y,KAAKC,MAAM4Y,WAAW7Y,KAAK0O,MAAMzE,SAGpC,QACMjK,KAAKC,MAAM4Y,YACpB7Y,KAAKC,MAAM4Y,WAAW7Y,KAAK0O,MAAMzE,MAAMK,QAI3CvK,SACE,OACE,yBAAKiZ,SAAS,KAAK7Y,UAAU,cAC3BoW,OAAQvW,KAAK4Y,uBACb,2BAAOzY,UAAU,kBACf6K,KAAMhL,KAAK0O,MAAMxO,QAAU,OAAS,WACpC+J,MAAOjK,KAAK0O,MAAMzE,MAClBkL,YAAanV,KAAKC,MAAMkV,YACxBX,SAAUxU,KAAKC,MAAMuU,SAAW,WAAa,GAC7CiC,UAAWzW,KAAKC,MAAMwW,UAAY,YAAc,GAChDwC,aAAcjZ,KAAKC,MAAMgZ,aACzBrJ,SAAU5P,KAAK2Y,gBACfnC,UAAWxW,KAAKkV,gBAClB,0BAAM3U,QAASP,KAAK0Y,kBAClB,uBAAGvY,UAAU,uCACVH,KAAK0O,MAAMxO,QAAU,aAAe,qBCnElC,MAAMgZ,WAAoB1Z,cACvCqD,YAAY5C,GACV6C,MAAM7C,GAEND,KAAK0O,MAAQ,CACXyK,OAAQlZ,EAAMkZ,OACdC,aAAcnZ,EAAMgK,OAAS,GAC7BA,MAAOhK,EAAMgK,OAAS,IAGxBjK,KAAK2Y,gBAAkB3Y,KAAK2Y,gBAAgBzV,KAAKlD,MACjDA,KAAKkV,cAAgBlV,KAAKkV,cAAchS,KAAKlD,MAC7CA,KAAKqZ,mBAAqBrZ,KAAKqZ,mBAAmBnW,KAAKlD,MACvDA,KAAK4Y,sBAAwB5Y,KAAK4Y,sBAAsB1V,KAAKlD,MAC7DA,KAAKsZ,uBAAyBtZ,KAAKsZ,uBAAuBpW,KAAKlD,MAGjE6O,mBAAmBC,EAAW6G,GAG5B,MAAM4D,EAAWvZ,KAAKC,MAAMgK,OAAS,GACjC0L,EAAUyD,cAAgBG,GAAa5D,EAAUwD,QACnDnZ,KAAK+O,SAAS,CACZqK,aAAcG,EACdtP,MAAOsP,IAKbZ,gBAAgBzT,GACdlF,KAAK+O,SAAS,CAAC9E,MAAO/E,EAAEE,OAAO6E,QAGjCiL,cAAchQ,GACM,KAAdA,EAAEM,QAEJxF,KAAK+O,SAAS,CAAC9E,MAAOjK,KAAKC,MAAMgK,MAAOkP,QAAQ,IACzB,KAAdjU,EAAEM,SAEXxF,KAAK4Y,sBAAsB1T,GAI/BmU,qBACOrZ,KAAKC,MAAMuP,WACd/P,gBAAqBO,MAAMwZ,QAC3BxZ,KAAK+O,SAAS,CAACoK,QAAQ,KAI3BP,sBAAsBa,GACpB,GAAIzZ,KAAKC,MAAMuU,WAAaiF,EAAMrU,OAAOsU,gBAGvC,YADA1Z,KAAK+O,SAAS,CAAC9E,MAAOjK,KAAKC,MAAMgK,MAAOkP,QAAQ,IAGlDnZ,KAAK+O,SAAS,CAACoK,QAAQ,IACvB,IAAIlP,EAAQjK,KAAK0O,MAAMzE,MAAMK,QACxBL,GAASjK,KAAKC,MAAMgK,QAAWA,IAAUjK,KAAKC,MAAMgK,OACvDjK,KAAKC,MAAM4Y,WAAW5O,GAI1BqP,uBAAuBrP,GACrBjK,KAAK+O,SAAS,CAACoK,QAAQ,IACnBlP,GAAUA,IAAUjK,KAAKC,MAAMgK,OACjCjK,KAAKC,MAAM4Y,WAAW5O,GAI1BlK,SACE,GAAIC,KAAK0O,MAAMyK,OACb,IAAIQ,EAAY3Z,KAAKC,MAAM+K,MAAQ,WAC9B,CACL,IAAI4O,EAA8B,YAAnB5Z,KAAKC,MAAM+K,KAAqB,WAAahL,KAAK0O,MAAMzE,MACnE4P,EAAY,iBACb7Z,KAAKC,MAAMuP,SAAW,YAAc,IAClCoK,IACHA,EAAW5Z,KAAKC,MAAMkV,YACtB0E,GAAa,gBAEXD,EAAS1S,OAAS,KAEpB0S,EAAWA,EAAS9L,UAAU,EAAG,IAAM,OAG3C,OACE9N,KAAK0O,MAAMyK,OACK,YAAbQ,EACC,kBAAClB,EAAD,CACExO,MAAOjK,KAAK0O,MAAMzE,MAClBkL,YAAanV,KAAKC,MAAMkV,YACxBX,SAAUxU,KAAKC,MAAMuU,SAAW,WAAa,GAC7CyE,aAAcjZ,KAAKC,MAAMgZ,aACzBxC,WAAW,EACXoC,WAAY7Y,KAAKsZ,yBAEnB,2BAAOtO,KAAM2O,EACX1P,MAAOjK,KAAK0O,MAAMzE,MAClBkL,YAAanV,KAAKC,MAAMkV,YACxBX,SAAUxU,KAAKC,MAAMuU,SAAW,WAAa,GAC7CyE,aAAcjZ,KAAKC,MAAMgZ,aACzBxC,WAAS,EACT7G,SAAU5P,KAAK2Y,gBACfnC,UAAWxW,KAAKkV,cAChBqB,OAAQvW,KAAK4Y,wBAGjB,0BAAMzY,UAAW0Z,EAAWtZ,QAASP,KAAKqZ,oBACxC,0BAAMlZ,UAAU,WAAWyZ,KC/GtB,MAAME,WAAmBta,kBACtCqD,YAAY5C,GACV6C,MAAM7C,GAEND,KAAK0O,MAAQ,CACXqL,KAAM9Z,EAAM8Z,MAEd/Z,KAAKga,aAAeha,KAAKga,aAAa9W,KAAKlD,MAG7Cga,eACE,MAAMD,GAAQ/Z,KAAK0O,MAAMqL,KACzB/Z,KAAK+O,SAAS,CAACgL,KAAMA,IACjB/Z,KAAKC,MAAMga,UACbja,KAAKC,MAAMga,SAASF,GAIxBha,SACE,OAAQ,2BAAOI,UAAU,wBAAwBI,QAASP,KAAKga,cAAeha,KAAKC,MAAMG,MAAjF,MACLJ,KAAK0O,MAAMqL,KAAO,uBAAG5Z,UAAU,kBAAb,eACjB,uBAAGA,UAAU,kBAAb,mBCdR,MAAMuB,IAAWC,oBAAe,CAC9B,OAAU,CACRjB,GAAI,kBACJmB,eAAgB,eAChBC,YAAa,wBAEf,OAAU,CACRpB,GAAI,kBACJmB,eAAgB,eAChBC,YAAa,wBAEf,OAAU,CACRpB,GAAI,mBACJmB,eAAgB,gBAChBC,YAAa,wBAEf,OAAU,CACRpB,GAAI,kBACJmB,eAAgB,uBAChBC,YAAa,wBAEf,SAAY,CACVpB,GAAI,mBACJmB,eAAgB,kBAChBC,YAAa,wBAEf,OAAU,CACRpB,GAAI,mBACJmB,eAAgB,gBAChBC,YAAa,wBAEf,QAAW,CACTpB,GAAI,oBACJmB,eAAgB,iBAChBC,YAAa,wBAEf,MAAS,CACPpB,GAAI,mBACJmB,eAAgB,gBAChBC,YAAa,0BAIjB,MAAMoY,WAA0B1a,cAC9BqD,YAAY5C,GACV6C,MAAM7C,GAEND,KAAK0O,MAAQ,CACXjI,MAAOxG,EAAMwG,MAAQ,IAAI0T,QAAQ,IAAK,KAGxCna,KAAK+P,aAAe/P,KAAK+P,aAAa7M,KAAKlD,MAC3CA,KAAKuX,aAAevX,KAAKuX,aAAarU,KAAKlD,MAC3CA,KAAKqU,aAAerU,KAAKqU,aAAanR,KAAKlD,MAG7C+P,aAAakI,GACX,IAAIxR,EAAOzG,KAAK0O,MAAMjI,MAEV,GADFA,EAAK0G,QAAQ8K,GAErBxR,GAAQwR,EAERxR,EAAOA,EAAK0T,QAAQlC,EAAK,IAE3BjY,KAAK+O,SAAS,CAACtI,KAAMA,IAGvB8Q,eAEE,IAAI9Q,GAAQzG,KAAK0O,MAAMjI,MAAQ,KAAK6H,MAAM,IAAI8L,OAAOlH,KAAK,IAEtDzM,KADUzG,KAAKC,MAAMwG,MAAQ,KAAK6H,MAAM,IAAI8L,OAAOlH,KAAK,IAE1DlT,KAAKC,MAAMsY,SAAS9R,GAEpBzG,KAAKC,MAAM0T,WAIfU,eACErU,KAAKC,MAAM0T,WAGb5T,SACE,MAAM,cAACgD,GAAiB/C,KAAKC,MAAM+C,KAC7B+C,EAAM,WACNsU,EAAQ,CACZ,EAAKtX,EAAcrB,GAAS4Y,OAAQ,CAACrC,IAAK,MAC1C,EAAKlV,EAAcrB,GAAS0M,OAAQ,CAAC6J,IAAK,MAC1C,EAAKlV,EAAcrB,GAAS6Y,OAAQ,CAACtC,IAAK,MAC1C,EAAKlV,EAAcrB,GAAS8Y,OAAQ,CAACvC,IAAK,MAC1C,EAAKlV,EAAcrB,GAAS+Y,SAAU,CAACxC,IAAK,MAC5C,EAAKlV,EAAcrB,GAASgZ,OAAQ,CAACzC,IAAK,MAC1C,EAAKlV,EAAcrB,GAASiZ,QAAS,CAAC1C,IAAK,MAC3C,EAAKlV,EAAcrB,GAASkZ,MAAO,CAAC3C,IAAK,OAG3C,IAAI4C,EAAO7a,KAAKC,MAAM4a,MAAQ,GAC1BpU,EAAOzG,KAAK0O,MAAMjI,KAClBqU,GAAW9a,KAAKC,MAAM6a,SAAW,IAAIX,QAAQ,IAAK,IAClDzU,EAAQ,GACZ,IAAK,IAAIyE,EAAE,EAAGA,EAAEpE,EAAImB,OAAQiD,IAAK,CAC/B,IAAIsI,EAAI1M,EAAIyE,OAAOL,GACf0Q,EAAK1N,QAAQsF,IAAM,GAAKhM,EAAK0G,QAAQsF,GAAK,GAI9C/M,EAAMqB,KACJ,wBAAIlI,IAAK4T,GACP,4BAAK4H,EAAM5H,IACX,wBAAItS,UAAU,YAAY0a,EAAK1N,QAAQsF,GAAK,EAC1C,kBAAC3C,EAAD,CAAU9B,KAAMyE,EAAGzC,QAAUvJ,EAAK0G,QAAQsF,IAAM,EAAI7C,SAAU5P,KAAK+P,eAEnE,kBAACD,EAAD,CAAU9B,KAAMyE,EAAGzC,QAAUvJ,EAAK0G,QAAQsF,IAAM,KAC3CzS,KAAKC,MAAM6a,QAAU,wBAAI3a,UAAU,YACxC,kBAAC2P,EAAD,CAAU9B,KAAMyE,EAAGzC,QAAU8K,EAAQ3N,QAAQsF,IAAM,KAC7C,OAKd,OACE,yBAAKtS,UAAU,qBACZH,KAAKC,MAAM8a,UACV,wBAAI5a,UAAU,eAAc,kBAACqQ,EAAD,CAC1B/K,KAAMzF,KAAKC,MAAMwF,KACjBrF,MAAOJ,KAAKC,MAAM8a,UAClBlR,OAAQiB,EAAa9K,KAAKC,MAAM+a,WAAahb,KAAKC,MAAM+a,WAAa,SAAiB,KAC1F,2BAAO7a,UAAU,SAAQ,kBAAC,EAAAM,iBAAD,CAAkBC,GAAG,oBAC5CmB,eAAe,cAAcC,YAAY,mBAC3C,2BAAO3B,UAAU,qBAChBH,KAAKC,MAAM6a,QACV,+BAAO,4BACL,6BAAS,4BAAK9a,KAAKC,MAAMgb,WACzB,4BAAKjb,KAAKC,MAAMib,gBAElB,KACF,+BACGxV,IAEH,6BACA,yBAAKvF,UAAU,kBACb,4BAAQA,UAAU,UAAUI,QAASP,KAAKqU,cACxC,kBAAC,EAAA5T,iBAAD,CAAkBC,GAAG,mBAEvB,4BAAQP,UAAU,OAAOI,QAASP,KAAKuX,cACrC,kBAAC,EAAA9W,iBAAD,CAAkBC,GAAG,kBAQjC,QAAemH,gBAAWqS,ICjKnB,SAASiB,GAAcvU,GAC5B,MAAMwU,EAAUtW,SAASuW,eAAe,iBAClCC,EAAOxW,SAASwW,MAAQxW,SAASyW,qBAAqB,QAAQ,GAC9DC,EAAU1W,SAAS+H,cAAc,QACvC2O,EAAQxQ,KAAO,YACfwQ,EAAQ9a,GAAK,gBACb8a,EAAQC,IAAM,gBACdD,EAAQ/L,KAAO,iBAAmB7I,EAAQ,EAAI,IAAM,IAAM,OACtDwU,GACFE,EAAKI,YAAYN,GAEnBE,EAAKK,YAAYH,GAEjB1W,SAAS1E,OAASwG,EAAQ,EAAI,IAAIA,EAAM,KAAO,IAAM,SAIhD,SAASgV,GAAM7I,EAAI8I,GACxB,IAAIC,EAAO,KAEX,IAAK/I,GAAMA,EAAGzI,QAAWuR,KACvBC,EAAO,GACH/I,IACF+I,EAAK/I,GAAKA,EAAGzI,QAEXuR,GAAc,CAChB,MAAME,EAAYF,EAAa1O,QAAQ,KACvC2O,EAAK/Q,MAAQgR,GAAa,EAAI,CAC5B9Q,KAAM4Q,EAAa/N,UAAUiO,EAAU,GACvC/Q,KAAM,OACJ6Q,EAGR,OAAOC,EAIF,SAASE,GAAWtd,EAAG0R,GAC5B,GAAI1R,IAAM0R,EACR,OAAO,EAGT,IAAK+B,MAAMC,QAAQ1T,KAAOyT,MAAMC,QAAQhC,GACtC,OAAO,EAIT,GAAI1R,EAAEwI,QAAUkJ,EAAElJ,OAChB,OAAO,EAGTxI,EAAE0b,OACFhK,EAAEgK,OACF,IAAK,IAAIjQ,EAAI,EAAG8R,EAAIvd,EAAEwI,OAAQiD,EAAI8R,EAAG9R,IACnC,GAAIzL,EAAEyL,KAAOiG,EAAEjG,GACb,OAAO,EAGX,OAAO,EAmCF,SAAS+R,GAAYC,EAAKC,GAC/B,IAAKD,EACH,OAAO,KAQT,GAJAA,EAAMA,EAAIhC,QAAQ,kBAAmB,IAAI7P,QAIpC,8BAA8B+R,KAAKF,GACtC,OAAOA,EAIT,GAAI,aAAaE,KAAKF,GACpB,OAAOA,EAIT,MAAMG,EAAUnK,MAAMC,QAAQgK,GAAkBA,EAAelJ,KAAK,KAAO,aAE3E,OADW,IAAIqJ,OAAO,MAAQD,EAAU,SAAU,KAC1CD,KAAKF,GAINA,EAHE,KC9GI,MAAMK,WAAmBhd,cACtCqD,YAAY5C,GACV6C,MAAM7C,GAEND,KAAK0O,MAAQ,CACX+N,KAAMzc,KAAKC,MAAMwc,KACjBC,SAAU,GACVC,UAAW3c,KAAKC,MAAM0c,WAGxB3c,KAAK4c,eAAiB5c,KAAK4c,eAAe1Z,KAAKlD,MAC/CA,KAAK6c,aAAe7c,KAAK6c,aAAa3Z,KAAKlD,MAC3CA,KAAK8c,gBAAkB9c,KAAK8c,gBAAgB5Z,KAAKlD,MACjDA,KAAKuX,aAAevX,KAAKuX,aAAarU,KAAKlD,MAC3CA,KAAKqU,aAAerU,KAAKqU,aAAanR,KAAKlD,MAG7C,gCAAgC+c,EAAWpH,GACzC,OAAKqG,GAAWe,EAAUN,KAAM9G,EAAU8G,OAAU9G,EAAUgH,UAGvD,KAFE,CAACF,KAAMM,EAAUN,MAK5BG,eAAe3I,GAEb,GADAjU,KAAK+O,SAAS,CAAC2N,SAAUzI,IACrBA,EAAK/M,OAAS,EAAG,CACnB,MAAM8V,EAAO/I,EAAKA,EAAK/M,OAAO,GACf,KAAX+M,EAAK,GAEHA,EAAK/M,OAAS,GAAa,KAAR8V,GACrBhd,KAAK6c,aAAa5I,EAAKnG,UAAU,EAAGmG,EAAK/M,OAAO,IAEjC,KAAR8V,GAAuB,KAARA,GAAuB,KAARA,GAAuB,KAARA,GAEtDhd,KAAK6c,aAAa5I,EAAKnG,UAAU,EAAGmG,EAAK/M,OAAO,GAAGoD,SAKzDuS,aAAaI,GACX,MAAMC,EAAcld,KAAKC,MAAMkE,OAAOgZ,eAAe,ctBrB5B,IsBuBzB,GAAIF,EAAI/V,OAAS,GAAKlH,KAAK0O,MAAM+N,KAAKvV,OAASgW,EAAa,CAC1D,MAAMT,EAAOzc,KAAK0O,MAAM+N,KAAKzL,MAAM,GAOnC,OANAyL,EAAK1V,KAAKkW,GAEVjd,KAAK+O,SAAS,CAAC0N,KAAMA,EAAMC,SAAU,KACjC1c,KAAKC,MAAMmd,eACbpd,KAAKC,MAAMmd,cAAcX,GAEpBA,EAET,OAAOzc,KAAK0O,MAAM+N,KAGpBK,gBAAgBG,EAAKtM,GACnB,MAAM8L,EAAOzc,KAAK0O,MAAM+N,KAAKzL,MAAM,GACnCyL,EAAKzE,OAAOrH,EAAO,GACnB3Q,KAAK+O,SAAS,CAAC0N,KAAMA,IACjBzc,KAAKC,MAAMmd,eACbpd,KAAKC,MAAMmd,cAAcX,GAI7BlF,eAEEvX,KAAKC,MAAMsY,SAASvY,KAAK6c,aAAa7c,KAAK0O,MAAMgO,SAASpS,SAC1DtK,KAAK+O,SAAS,CAAC4N,WAAW,EAAOF,KAAMzc,KAAKC,MAAMwc,OAGpDpI,eACErU,KAAK+O,SAAS,CAAC4N,WAAW,EAAOD,SAAU,GAAID,KAAMzc,KAAKC,MAAMwc,OAC5Dzc,KAAKC,MAAM0T,UACb3T,KAAKC,MAAM0T,WAIf5T,SACE,MAAMsd,EAAerd,KAAKC,MAAMkE,OAAOgZ,eAAe,etB/D5B,GsBgEpBG,EAAetd,KAAKC,MAAMkE,OAAOgZ,eAAe,etB9D5B,IsBgE1B,IAAIV,EAAO,GAiBX,OAhBIzc,KAAK0O,MAAMiO,UACb3c,KAAK0O,MAAM+N,KAAK3V,KAAKmW,IACnBR,EAAK1V,KAAK,CAACpC,KAAMsY,EAAK3I,QAAU2I,EAAI/V,OAASmW,GAAgBJ,EAAI/V,OAASoW,QAG5Etd,KAAK0O,MAAM+N,KAAK3V,KAAKmW,IACnBR,EAAK1V,KAAK,0BAAM5G,UAAU,QAAQtB,IAAK4d,EAAKvV,QAAS+V,OAEpC,GAAfR,EAAKvV,SACPuV,EACE,2BACE,kBAAC,EAAAhc,iBAAD,CAAkBC,GAAG,iBAAiBmB,eAAe,6BAA6BC,YAAY,QAMpG,yBAAK3B,UAAU,qBACb,yBAAKA,UAAU,kBACb,2BAAOA,UAAU,SAASH,KAAKC,MAAMG,QAEtCJ,KAAK0O,MAAMiO,UACZ,6BACE,kBAAC,EAAAlc,iBAAD,CAAkBC,GAAG,sBAAsBmB,eAAe,gBACxDC,YAAY,8CACXyb,GAAoB,kBAAC9I,EAAD,CACnBW,MAAOqH,EACPpG,gBAAgB,EAChBhB,OAAQkI,EACRpH,QAASnW,KAAK6c,aACd3G,YAAalW,KAAK6c,aAClBlJ,SAAU3T,KAAKqU,aACf4B,cAAejW,KAAK8c,gBACpBpK,WAAY1S,KAAK4c,mBAEpB5c,KAAKC,MAAMsY,UAAYvY,KAAKC,MAAM0T,SACjC,yBAAKjT,GAAG,sBAAsBP,UAAU,iCACtC,4BAAQA,UAAU,UAAUI,QAASP,KAAKqU,cACxC,kBAAC,EAAA5T,iBAAD,CAAkBC,GAAG,gBAAgB8c,cAAc,SAAS1b,YAAY,+BAE1E,4BAAQ3B,UAAU,OAAOI,QAASP,KAAKuX,cACrC,kBAAC,EAAA9W,iBAAD,CAAkBC,GAAG,YAAY8c,cAAc,KAAK1b,YAAY,+BAGpE,MAGJ,yBAAK3B,UAAU,UACb,uBAAGsP,KAAK,IAAItP,UAAU,cAAcI,QAAU2E,IAAOA,EAAEG,iBAAkBrF,KAAK+O,SAAS,CAAC4N,WAAW,MACjG,uBAAGxc,UAAU,kBAAb,QADF,KAC+C,kBAAC,EAAAM,iBAAD,CAAkBC,GAAG,oBAAoBmB,eAAe,SACnGC,YAAY,wCAEhB,oCAAG2a,MC1Hb,MAAM/a,IAAWC,oBAAe,CAC9B8b,UAAW,CACT/c,GAAI,wBACJmB,eAAgB,YAChBC,YAAa,yBAEf4b,QAAS,CACPhd,GAAI,sBACJmB,eAAgB,UAChBC,YAAa,yBAEf6b,iBAAkB,CAChBjd,GAAI,6BACJmB,eAAgB,mBAChBC,YAAa,gCAEf8b,WAAY,CACVld,GAAI,mBACJmB,eAAgB,QAChBC,YAAa,qDAEfC,eAAgB,CACdrB,GAAI,wBACJmB,eAAgB,iBAChBC,YAAa,uDAEf+b,uBAAwB,CACtBnd,GAAI,yBACJmB,eAAgB,oEAChBC,YAAa,oDAEfgc,gBAAiB,CACfpd,GAAI,yBACJmB,eAAgB,yBAChBC,YAAa,0DAEfic,wBAAyB,CACvBrd,GAAI,0BACJmB,eAAgB,kFAChBC,YAAa,yDAEfkc,WAAY,CACVtd,GAAI,oBACJmB,eAAgB,qBAChBC,YAAa,oCAEfmc,mBAAoB,CAClBvd,GAAI,qBACJmB,eAAgB,oDAChBC,YAAa,wDAEfoc,cAAe,CACbxd,GAAI,uBACJmB,eAAgB,gBAChBC,YAAa,+BAEfqc,sBAAuB,CACrBzd,GAAI,wBACJmB,eAAgB,+CAChBC,YAAa,iDAEfsc,YAAa,CACX1d,GAAI,qBACJmB,eAAgB,sBAChBC,YAAa,8BAEfuc,oBAAqB,CACnB3d,GAAI,sBACJmB,eAAgB,+DAChBC,YAAa,kEAIjB,MAAMwc,WAAiB9e,cACrBqD,YAAY5C,GACV6C,MAAM7C,GAEND,KAAK0O,MAAQ,CACXxK,MAAO,KACP0W,OAAO,EACP2D,OAAO,EACP7D,QAAQ,EACRC,SAAS,EACT6D,OAAO,EACPC,QAAS,KACTC,gBAAYtI,EACZuI,aAASvI,EACTwI,cAAUxI,EACVvM,OAAQ,KACR+I,QAAS,KACTiM,gBAAiB,KACjBC,OAAQ,KACRC,UAAW,KACXC,SAAU,KACVC,WAAY,KACZC,UAAW,KACXC,KAAM,KACNC,KAAM,KACNC,YAAa,GACb5C,KAAM,GACN6C,iBAAiB,EACjBC,6BAAyBnJ,EACzBoJ,kBAAkB,EAClBC,sBAAkBrJ,EAClBsJ,yBAAqBtJ,EACrBuJ,yBAAqBvJ,GAGvBpW,KAAK4f,UAAY5f,KAAK4f,UAAU1c,KAAKlD,MACrCA,KAAK6f,UAAY7f,KAAK6f,UAAU3c,KAAKlD,MACrCA,KAAK8f,WAAa9f,KAAK8f,WAAW5c,KAAKlD,MACvCA,KAAK+f,cAAgB/f,KAAK+f,cAAc7c,KAAKlD,MAC7CA,KAAKggB,cAAgBhgB,KAAKggB,cAAc9c,KAAKlD,MAC7CA,KAAKigB,qBAAuBjgB,KAAKigB,qBAAqB/c,KAAKlD,MAC3DA,KAAKkgB,oBAAsBlgB,KAAKkgB,oBAAoBhd,KAAKlD,MACzDA,KAAKmgB,mBAAqBngB,KAAKmgB,mBAAmBjd,KAAKlD,MACvDA,KAAKogB,YAAcpgB,KAAKogB,YAAYld,KAAKlD,MACzCA,KAAKqgB,yBAA2BrgB,KAAKqgB,yBAAyBnd,KAAKlD,MACnEA,KAAKsgB,8BAAgCtgB,KAAKsgB,8BAA8Bpd,KAAKlD,MAC7EA,KAAKugB,4BAA8BvgB,KAAKugB,4BAA4Brd,KAAKlD,MACzEA,KAAKwgB,qBAAuBxgB,KAAKwgB,qBAAqBtd,KAAKlD,MAC3DA,KAAKygB,qBAAuBzgB,KAAKygB,qBAAqBvd,KAAKlD,MAC3DA,KAAK0gB,0BAA4B1gB,KAAK0gB,0BAA0Bxd,KAAKlD,MACrEA,KAAK2gB,qBAAuB3gB,KAAK2gB,qBAAqBzd,KAAKlD,MAC3DA,KAAK4gB,YAAc5gB,KAAK4gB,YAAY1d,KAAKlD,MACzCA,KAAK6gB,YAAc7gB,KAAK6gB,YAAY3d,KAAKlD,MACzCA,KAAK8gB,aAAe9gB,KAAK8gB,aAAa5d,KAAKlD,MAC3CA,KAAK+gB,qBAAuB/gB,KAAK+gB,qBAAqB7d,KAAKlD,MAC3DA,KAAKghB,eAAiBhhB,KAAKghB,eAAe9d,KAAKlD,MAC/CA,KAAKihB,kBAAoBjhB,KAAKihB,kBAAkB/d,KAAKlD,MACrDA,KAAKkhB,kBAAoBlhB,KAAKkhB,kBAAkBhe,KAAKlD,MAIvD6O,mBAAmB5O,GACjB,MAAMiE,EAAQlE,KAAKC,MAAMkE,OAAOC,SAASnE,EAAMiE,OAC1CA,IAIDlE,KAAK8f,YAAc5b,EAAM4b,aAC3B9f,KAAKyf,iBAAmBvb,EAAM4b,WAC9B5b,EAAM4b,WAAa9f,KAAK8f,WAExB9f,KAAK0f,oBAAsBxb,EAAM6b,cACjC7b,EAAM6b,cAAgB/f,KAAK+f,cAEJ,OAAnB7b,EAAMid,WACRnhB,KAAK2f,oBAAsBzb,EAAM8b,cACjC9b,EAAM8b,cAAgBhgB,KAAKggB,eAE3BhgB,KAAK2f,yBAAsBvJ,GAI3BpW,KAAK0O,MAAMxK,OAASjE,EAAMiE,QAC5BlE,KAAK+O,SAAS,CAAC7K,MAAOjE,EAAMiE,QAC5BlE,KAAK6f,UAAU3b,EAAOjE,GACtBD,KAAK4f,UAAU1b,EAAOjE,KAI1B+E,uBACE,MAAMd,EAAQlE,KAAKC,MAAMkE,OAAOC,SAASpE,KAAKC,MAAMiE,OAC/CA,IAGLlE,KAAK+O,SAAS,CAAC7K,MAAO,OACtBA,EAAM4b,WAAa9f,KAAKyf,iBACxBvb,EAAM6b,cAAgB/f,KAAK0f,oBAC3Bxb,EAAM8b,cAAgBhgB,KAAK2f,qBAG7BC,UAAU1b,EAAOjE,GACf,MAAMmhB,EAAW,CAAC/B,YAAa,IAC/B,GAAuB,OAAnBnb,EAAMid,UAAoB,CAG5B,MAAME,EAAQnd,EAAMod,WAAWrhB,EAAMiE,OACjCmd,GACFD,EAASnC,WAAaoC,EAAMnQ,IAAIqQ,WAChCH,EAASlC,UAAYmC,EAAMnQ,IAAIsQ,YAE/BJ,EAASnC,WvBtKa,IuBuKtBmC,EAASlC,UvBvKa,UuB0KxBhb,EAAMud,aAAaC,IACjBN,EAAS/B,YAAYtY,KAAK2a,KACzB1hB,MAGLA,KAAK+O,SAASqS,GAGhBvB,UAAU3b,EAAOjE,GACf,MAAM0hB,EAASzd,EAAM0d,oBAAsB,GACrC1Q,EAAMhN,EAAM2d,gBAElB7hB,KAAK+O,SAAS,CACZ6L,MAAO1J,GAAOA,EAAI+B,UAClBsL,MAAOrN,GAAOA,EAAI4Q,UAClBpH,OAAQxJ,GAAOA,EAAI6Q,WACnBpH,QAASzJ,GAAOA,EAAI8Q,YACpBxD,MAAOtN,GAAOA,EAAIG,UAElBuN,SAAU1a,EAAM4O,OAAS5O,EAAM4O,OAAOC,QAAKqD,EAC3CvM,OAAQiB,EAAa5G,EAAM4O,OAAS5O,EAAM4O,OAAO/H,MAAQ,MACzD6H,QAAS1O,EAAM0O,QAAU1O,EAAM0O,QAAQhB,QAAU,KACjD6M,QAASva,EAAM8J,KACf0Q,WAAgC,OAAnBxa,EAAMid,UACnBxC,QAASza,EAAMwN,YACf4N,iBAAiB,EACjBR,OAAQ5N,EAAMA,EAAIE,eAAYgF,EAC9B2I,UAAW7N,EAAMA,EAAIqQ,gBAAanL,EAClC4I,SAAU9N,EAAMA,EAAIsQ,eAAYpL,EAChC+I,KAAMwC,EAAOxC,KACbC,KAAMuC,EAAOvC,OAGQ,OAAnBlb,EAAMid,WAAsBjQ,GAAOA,EAAI+B,WAEzC/O,EAAM+d,QAAQ/d,EAAMge,iBAAiBC,WAAWC,SAIpDtC,WAAWuC,GACT,MAAMne,EAAQlE,KAAKC,MAAMkE,OAAOC,SAASpE,KAAKC,MAAMiE,OAC/CA,IAGLlE,KAAK6f,UAAU3b,EAAOlE,KAAKC,OAEvBD,KAAKyf,kBAAoBzf,KAAKyf,kBAAoBzf,KAAK8f,YACzD9f,KAAKyf,iBAAiB4C,IAI1BtC,cAAcuC,GACZ,MAAMpe,EAAQlE,KAAKC,MAAMkE,OAAOC,SAASpE,KAAKC,MAAMiE,OAC/CA,IAGLlE,KAAK4f,UAAU1b,EAAOlE,KAAKC,OAEvBD,KAAK0f,qBAAuB1f,KAAK0f,qBAAuB1f,KAAK+f,eAC/D/f,KAAK0f,oBAAoB4C,IAI7BtC,cAAcvD,GACZzc,KAAK+O,SAAS,CAAC0N,KAAMA,IAEjBzc,KAAK2f,qBAAuB3f,KAAK2f,qBAAuB3f,KAAKggB,eAC/DhgB,KAAK2f,sBAITM,qBAAqBlN,GACnBA,EAAKA,EAAGzI,OAAOwD,UAAU,EAAGrM,GACxBzB,KAAK0O,MAAMkQ,WAAa7L,IAC1B/S,KAAK+O,SAAS,CAAC6P,SAAU7L,IACzB/S,KAAKC,MAAMsiB,kBAAkBviB,KAAKC,MAAMiE,MAAO0X,GAAM7I,EAAI,MAAO,OAIpEmN,oBAAoBtO,GAClBA,EAAUA,EAAQtH,OAAOwD,UAAU,EAAGrM,GAClCzB,KAAK0O,MAAMkE,UAAYhB,IACzB5R,KAAK+O,SAAS,CAAC6D,QAAShB,IACxB5R,KAAKC,MAAMsiB,kBAAkBviB,KAAKC,MAAMiE,MAAO,KAAM0N,GAAW/R,eAIpEsgB,mBAAmB/T,GACjBpM,KAAK+O,SAAS,CAAClF,OAAQuC,IACvBpM,KAAKC,MAAMsiB,kBAAkBviB,KAAKC,MAAMiE,MAAO0X,GAAM,KAAMxP,GAAOvM,cAAkB,MAGtFugB,YAAYoC,EAASxS,GACnBhQ,KAAK+O,SAAS,CAACyP,MAAOxO,IACtBhQ,KAAKC,MAAMwiB,oBAAoBziB,KAAKC,MAAMiE,MAAO8L,EAAU,KAAO,MAGpEqQ,yBAAyBqC,GACvB,OAAQ1iB,KAAK0O,MAAM6Q,yBACjB,IAAK,OACHvf,KAAKC,MAAMsiB,kBAAkBviB,KAAKC,MAAMiE,MAAO,KAAM,KAAM,CAACib,KAAMuD,IAClE,MACF,IAAK,OACH1iB,KAAKC,MAAMsiB,kBAAkBviB,KAAKC,MAAMiE,MAAO,KAAM,KAAM,CAACkb,KAAMsD,IAClE,MACF,IAAK,OACL,IAAK,OACH1iB,KAAKC,MAAMwiB,oBAAoBziB,KAAKC,MAAMiE,MAAOwe,GACjD,MACF,IAAK,QACH1iB,KAAKC,MAAMwiB,oBAAoBziB,KAAKC,MAAMiE,MAAOwe,EAAM1iB,KAAKC,MAAMiE,OAClE,MACF,IAAK,OACHlE,KAAKC,MAAMwiB,oBAAoBziB,KAAKC,MAAMiE,MAAOwe,EAAM1iB,KAAK0O,MAAMiU,uBAItE3iB,KAAK+O,SAAS,CAACwQ,6BAAyBnJ,IAG1CkK,8BAA8BsC,EAAOlT,GACnC,MAAM,cAAC3M,GAAiB/C,KAAKC,MAAM+C,KACnC,IAAI6f,EAAQC,EAAWC,EAAQC,EAAWC,EAAclI,EAAWC,EACnE,OAAQ4H,GACN,IAAK,OACHC,EAAS7iB,KAAK0O,MAAMoQ,OACpB,MACF,IAAK,OACH+D,EAAS7iB,KAAK0O,MAAMsQ,SACpB8D,EAAY9iB,KAAK0O,MAAMqQ,UACnB/e,KAAK0O,MAAMkM,MAEbmI,EAAS,KAGTA,EAASljB,sBAAyBA,oBAAuB,OAAQG,KAAK0O,MAAMqQ,YACxE/e,KAAK0O,MAAMiQ,UAEboE,GAAU,MAGdC,EAAYjgB,EAAcrB,GAAS+b,WACnCwF,EAAelgB,EAAcrB,GAASgc,SACtC,MACF,IAAK,QACHmF,EAAS7iB,KAAK0O,MAAMuQ,WACpB6D,EAAY9iB,KAAK0O,MAAMwQ,UACvB6D,EAAS/iB,KAAK0O,MAAMgQ,WAAc1e,KAAK0O,MAAMkM,MAAQ,GAAK,IAAO,OACjEoI,EAAYjgB,EAAcrB,GAASgc,SACnCuF,EAAelgB,EAAcrB,GAAS+b,WACtC,MACF,IAAK,OACHoF,EAAS7iB,KAAK0O,MAAMyQ,KACpB4D,EAAS,IACT,MACF,IAAK,OACHF,EAAS7iB,KAAK0O,MAAM0Q,KACpB2D,EAAS,IACT,MACF,IAAK,OAAQ,CACX,MAAM7e,EAAQlE,KAAKC,MAAMkE,OAAOC,SAASpE,KAAKC,MAAMiE,OACpD,IAAKA,EACH,OAEF,MAAMS,EAAOT,EAAMod,WAAW5R,GAC9B,IAAK/K,IAASA,EAAKuM,IACjB,OAEF2R,EAASle,EAAKuM,IAAIqQ,WAClBuB,EAAYne,EAAKuM,IAAIsQ,UACrBuB,EAAS/iB,KAAK0O,MAAMkM,MAAQ,GAAK,IACjCoI,EAAYjgB,EAAcrB,GAASgc,SACnCuF,EAAelgB,EAAcrB,GAAS+b,WAClC9Y,EAAKmO,SACPiI,EAAYpW,EAAKmO,OAAOC,GACxBiI,EAAarW,EAAKmO,OAAO/H,OAE3B,MAEF,QACEtG,QAAQC,IAAI,oCAAsCke,EAAQ,KAG9D5iB,KAAK+O,SAAS,CACZwQ,wBAAyBqD,EACzBD,sBAAuBjT,EACvBwT,qBAAsBnI,EACtBoI,sBAAuBnI,EACvBoI,kBAAmBP,EACnBQ,qBAAsBP,EACtBQ,uBAAwBN,EACxBO,0BAA2BN,EAC3BO,yBAA0BT,IAI9BxC,8BACEvgB,KAAK+O,SAAS,CAACwQ,6BAAyBnJ,IAG1CoK,qBAAqBtb,GACnBA,EAAEG,iBACFrF,KAAKC,MAAMwjB,aACXzjB,KAAK+O,SAAS,CAACuQ,iBAAiB,IAGlCmB,uBACEzgB,KAAK+O,SAAS,CAACuQ,iBAAiB,IAGlCoB,0BAA0B7J,EAASuB,EAAOpC,GACxChW,KAAKC,MAAMyjB,sBAAsB1jB,KAAKC,MAAMiE,MAAOkU,EAAOpC,GAC1DhW,KAAK+O,SAAS,CAACuQ,iBAAiB,IAGlCqB,qBAAqBzb,GACnBA,EAAEG,iBACF,MAAM,cAACtC,GAAiB/C,KAAKC,MAAM+C,KACnChD,KAAKC,MAAMwD,YACTV,EAAc/C,KAAK0O,MAAMiM,QAAUjZ,GAASoc,gBAAkBpc,GAASK,gBACvEgB,EAAc/C,KAAK0O,MAAMiM,QAAUjZ,GAASqc,wBAA0Brc,GAASmc,yBAC9E,KAAQ7d,KAAKC,MAAM0jB,iBAAiB3jB,KAAKC,MAAMiE,SAChD,MACA,EACA,MAIJ0c,YAAY1b,GACVA,EAAEG,iBACF,MAAM,cAACtC,GAAiB/C,KAAKC,MAAM+C,KACnChD,KAAKC,MAAMwD,YACTV,EAAcrB,GAASsc,YACvBjb,EAAcrB,GAASuc,qBACtB,KAAQje,KAAKC,MAAM2jB,aAAa5jB,KAAKC,MAAMiE,SAC5C,MACA,EACA,MAIJ2c,YAAY3b,GACVA,EAAEG,iBACF,MAAM,cAACtC,GAAiB/C,KAAKC,MAAM+C,KACnChD,KAAKC,MAAMwD,YACTV,EAAcrB,GAASwc,eACvBnb,EAAcrB,GAASyc,wBACtB,KAAQne,KAAKC,MAAM4jB,aAAa7jB,KAAKC,MAAMiE,SAC5C,MACA,EACA,MAIJ4c,aAAa5b,GACXA,EAAEG,iBACF,MAAM,cAACtC,GAAiB/C,KAAKC,MAAM+C,KACnChD,KAAKC,MAAMwD,YACTV,EAAcrB,GAAS0c,aACvBrb,EAAcrB,GAAS2c,sBACtB,KAAQre,KAAKC,MAAM6jB,cAAc9jB,KAAKC,MAAMiE,SAC7C,MACA,EACA,MAIJ6c,qBAAqBrR,GACnB1P,KAAK+O,SAAS,CAAC8P,gBAAiBnP,IAGlCsR,eAAejH,GACb/Z,KAAK+O,SAAS,CAACyQ,iBAAkBzF,IAGnCkH,kBAAkBxE,GACXT,GAAWhc,KAAK0O,MAAM+N,KAAKzL,MAAM,GAAIyL,EAAKzL,MAAM,KACnDhR,KAAKC,MAAM8jB,kBAAkB/jB,KAAKC,MAAMiE,MAAOuY,GAInDyE,kBAAkB3d,GAChB,MAAM,cAACR,GAAiB/C,KAAKC,MAAM+C,KAC7BmV,EAAWnY,KACXkE,EAAQlE,KAAKC,MAAMkE,OAAOC,SAASpE,KAAKC,MAAMiE,OACpD,IAAKA,EACH,OAEF,MAAMS,EAAOT,EAAMod,WAAW/d,EAAOU,WACrC,IAAKU,IAASA,EAAKuM,IACjB,OAGF,MAAM8S,EAAY,CAChB,CAAC5jB,MAAO2C,EAAcrB,GAASic,kBAAmBra,QAAS,WACzD6U,EAASmI,8BAA8B,OAAQ/c,EAAOU,aAExD,gBACAU,EAAKuM,IAAIG,UAAY,gBAAkB,cACvC1M,EAAKuM,IAAII,WAAa,eAAiB,kBAEzCtR,KAAKC,MAAM2Q,gBAAgB,CACzB3M,UAAWjE,KAAKC,MAAMiE,MACtBsD,EAAGjE,EAAOiE,EACVG,EAAGpE,EAAOoE,EACVhD,KAAMpB,EAAOU,WAAY+f,GAG7BjkB,SACE,MAAM,cAACgD,GAAiB/C,KAAKC,MAAM+C,KAEnC,OACE,yBAAKtC,GAAG,aACN,yBAAKP,UAAU,gBAAgBO,GAAG,sBAChC,yBAAKP,UAAU,cAAcO,GAAG,cAC9B,kBAAC,EAAAD,iBAAD,CAAkBC,GAAG,aAAamB,eAAe,OAAOC,YAAY,wBAEtE,6BACE,kBAAC4R,EAAD,CAAYC,SAAU3T,KAAKC,MAAM0T,aAGpC3T,KAAKC,MAAMgkB,cACV,kBAACrQ,EAAD,CACEE,MAAO9T,KAAKC,MAAMikB,WAClBjQ,KAAMjU,KAAKC,MAAMkkB,UACjBpQ,aAAc/T,KAAKC,MAAM6F,UAAc,KAC1C9F,KAAK0O,MAAM4Q,gBACV,kBAAC,EAAD,CACEzI,QAAS7W,KAAK0O,MAAM2Q,YACpBrI,eAAgBhX,KAAKC,MAAM+S,SAC3B+D,oBAAqB/W,KAAK0O,MAAM6P,QAAUve,KAAK0O,MAAMkM,MACrD5H,SAAUhT,KAAKC,MAAM+S,SACrBR,SAAUxS,KAAKC,MAAMmkB,mBACrBzQ,SAAU3T,KAAKygB,qBACflI,SAAUvY,KAAK0gB,4BAEnB1gB,KAAK0O,MAAM6Q,wBACT,kBAAC,GAAD,CACE9Y,KAAMzG,KAAK0O,MAAM0U,kBACjBtI,QAAS9a,KAAK0O,MAAM2U,qBACpBxI,KAAM7a,KAAK0O,MAAM8U,yBACjBvI,UAAWjb,KAAK0O,MAAM4U,uBACtBpI,aAAclb,KAAK0O,MAAM6U,0BACzBxI,UAAW/a,KAAK0O,MAAMwU,qBACtBzd,KAAMzF,KAAK0O,MAAMiU,sBACjB3H,WAAYhb,KAAK0O,MAAMyU,sBACvB5K,SAAUvY,KAAKqgB,yBACf1M,SAAU3T,KAAKugB,8BAGjB,yBAAK7f,GAAG,oBAAoBP,UAAU,oBACpC,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,qBACb,6BAAK,2BAAOA,UAAU,SACpB,kBAAC,EAAAM,iBAAD,CAAkBC,GAAG,mBAAmBmB,eAAe,OACrDC,YAAY,mCAEhB,6BAAK,kBAACoX,GAAD,CACD/D,YAAanV,KAAK0O,MAAMgQ,WAAa,aAAe,sCACpDlP,UAAWxP,KAAK0O,MAAMkM,MACtB3Q,MAAOjK,KAAK0O,MAAMkQ,SAClBpK,UAAU,EACVqE,WAAY7Y,KAAKigB,wBACrB,6BACE,2BAAO9f,UAAU,SACf,kBAAC,EAAAM,iBAAD,CAAkBC,GAAG,gBAAgBmB,eAAe,kBAClDC,YAAY,kCAGlB,6BACE,kBAAC,EAAArB,iBAAD,CAAkBC,GAAG,8BACnBmB,eAAe,sBACfC,YAAY,sCACXuiB,GAAwB,kBAACnL,GAAD,CACvB/D,YAAakP,EACbpa,MAAOjK,KAAK0O,MAAMkE,QAClBiG,WAAY7Y,KAAKkgB,0BAIzB,kBAACzR,EAAD,CACE5E,OAAQ7J,KAAK0O,MAAM7E,OACnB2F,UAAWxP,KAAK0O,MAAMkM,MACtBlL,IAAK1P,KAAKC,MAAMiE,MAChB9D,MAAOJ,KAAK0O,MAAMkQ,SAClBxP,eAAgBpP,KAAKmgB,mBACrBra,QAAS9F,KAAKC,MAAM6F,WAExB,yBAAK3F,UAAU,OACf,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,kBACb,+BACE,kBAAC,EAAAM,iBAAD,CAAkBC,GAAG,qBAAqBmB,eAAe,SACvDC,YAAY,yCAEhB,kBAACgO,EAAD,CAAU9B,KAAK,IAAIgC,QAAShQ,KAAK0O,MAAM8P,MACrC5O,SAAU5P,KAAKogB,eAEnB,kBAAC,EAAA3f,iBAAD,CAAkBC,GAAG,cAAcmB,eAAe,OAChDC,YAAY,oCACXwiB,GAAS,kBAACxK,GAAD,CACR1Z,MAAOkkB,EACPvK,KAAM/Z,KAAK0O,MAAM8Q,iBACjBvF,SAAUja,KAAKghB,mBAElBhhB,KAAK0O,MAAM8Q,iBACV,yBAAKrf,UAAU,qBACb,yBAAKA,UAAU,kBACb,+BAAO,kBAAC,EAAAM,iBAAD,CAAkBC,GAAG,mBAC5B,4BAAKV,KAAK0O,MAAM+P,UAEjBze,KAAK0O,MAAMgQ,WACV,yBAAKve,UAAU,kBACb,+BACE,kBAAC,EAAAM,iBAAD,CAAkBC,GAAG,yBAAyBmB,eAAe,oBAC3DC,YAAY,wCAEhB,wBAAI3B,UAAU,YACZI,QAASP,KAAKsgB,8BAA8Bpd,KAAKlD,KAAM,SACtDA,KAAK0O,MAAMoQ,SAIhB,6BACE,6BACE,2BAAO3e,UAAU,SACf,kBAAC,EAAAM,iBAAD,CAAkBC,GAAG,oBAAoBmB,eAAe,eACtDC,YAAY,oBAGlB,yBAAK3B,UAAU,UACb,6BACE,kBAAC,EAAAM,iBAAD,CAAkBC,GAAG,YAAYmB,eAAe,OAC9CC,YAAY,+BAFhB,KAEsD,wBAAI3B,UAAU,YAClEI,QAASP,KAAKsgB,8BAA8Bpd,KAAKlD,KAAM,SACtDA,KAAK0O,MAAMoQ,SAEd,6BAAM9e,KAAK0O,MAAMkQ,SAAW5e,KAAK0O,MAAMkQ,SAAW7b,EAAcrB,GAASkc,YAAzE,MACQ,wBAAIzd,UAAU,YAAYI,QAASP,KAAKsgB,8BAA8Bpd,KAAKlD,KAAM,UACtFA,KAAK0O,MAAMuQ,eAMnBjf,KAAK0O,MAAMgM,SAAW1a,KAAK0O,MAAMyQ,MAAQnf,KAAK0O,MAAM0Q,MACrD,6BACE,6BACE,2BAAOjf,UAAU,SACf,kBAAC,EAAAM,iBAAD,CAAkBC,GAAG,uBAAuBmB,eAAe,uBACzDC,YAAY,oBAGlB,yBAAK3B,UAAU,UACb,sCAAYH,KAAK0O,MAAM6P,MACrB,wBAAIpe,UAAU,YACZI,QAASP,KAAKsgB,8BAA8Bpd,KAAKlD,KAAM,SACtDA,KAAK0O,MAAMyQ,MAGd,4BAAKnf,KAAK0O,MAAMyQ,OAGlB,sCAAYnf,KAAK0O,MAAM6P,MACrB,wBAAIpe,UAAU,YACZI,QAASP,KAAKsgB,8BAA8Bpd,KAAKlD,KAAM,SACtDA,KAAK0O,MAAM0Q,MAGd,4BAAKpf,KAAK0O,MAAM0Q,SAMtB,MAIJ,MAGF,yBAAKjf,UAAU,OACdH,KAAK0O,MAAMkM,MACV,oCACE,kBAAC,EAAAna,iBAAD,CAAkBC,GAAG,sBAClB+b,GAAS,kBAACD,GAAD,CACRpc,MAAOqc,EACPA,KAAMzc,KAAK0O,MAAM+N,KACjBE,WAAW,EACXxY,OAAQnE,KAAKC,MAAMkE,OACnBoU,SAAUvY,KAAKihB,sBAEnB,yBAAK9gB,UAAU,QAGjB,KAEF,yBAAKA,UAAU,qBACXH,KAAK0O,MAAMiQ,QAOX,KANA,uBAAGlP,KAAK,IAAItP,UAAU,cAAcI,QAASP,KAAK2gB,sBAChD,uBAAGxgB,UAAU,kBAAb,kBADF,KAEI4C,EAAc/C,KAAK0O,MAAMiM,QAAUjZ,GAASoc,gBAAkBpc,GAASK,iBAM7E,uBAAG0N,KAAK,IAAItP,UAAU,kBAAkBI,QAASP,KAAK4gB,aACpD,uBAAGzgB,UAAU,kBAAb,eADF,KACuD4C,EAAcrB,GAASsc,aAE5Ehe,KAAK0O,MAAMgQ,WAKX,KAJA,uBAAGjP,KAAK,IAAItP,UAAU,kBAAkBI,QAASP,KAAK6gB,aACpD,uBAAG1gB,UAAU,kBAAb,SADF,KACiD4C,EAAcrB,GAASwc,gBAKxEle,KAAK0O,MAAMkM,MAKX,KAJA,uBAAGnL,KAAK,IAAItP,UAAU,kBAAkBI,QAASP,KAAK8gB,cACpD,uBAAG3gB,UAAU,kBAAb,UADF,KACkD4C,EAAcrB,GAAS0c,eAM5Epe,KAAK0O,MAAMgQ,YAAc1e,KAAK0O,MAAMgM,OACnC,oCACE,yBAAKva,UAAU,OACf,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,kBACb,2BAAOA,UAAU,SACf,kBAAC,EAAAM,iBAAD,CAAkBC,GAAG,sBAAsBmB,eAAe,iBACxDC,YAAY,6BAGlB,yBAAK3B,UAAU,kBACb,uBAAGsP,KAAK,IAAItP,UAAU,cAAcI,QAASP,KAAKwgB,sBAChD,uBAAGrgB,UAAU,kBAAb,cADF,KACqD,kBAAC,EAAAM,iBAAD,CAAkBC,GAAG,qBACtEmB,eAAe,cAAcC,YAAY,2CAG/C,kBAAC,EAAArB,iBAAD,CAAkBC,GAAG,uBAAuBmB,eAAe,aACzDC,YAAY,oCACXyiB,GAAe,kBAAC,EAAD,CACd/R,SAAUxS,KAAK0O,MAAM2Q,YACrBrM,SAAUhT,KAAKC,MAAM+S,SACrBS,iBAAkB8Q,EAClBlS,cAAerS,KAAK0O,MAAMmQ,gBAC1BpN,YAAY,EACZ0B,YAAY,EACZhC,UAAU,EACVmC,UAAU,EACVD,gBAAiBrT,KAAK+gB,qBACtBnQ,kBAAiB5Q,KAAK0O,MAAM6P,OAAQve,KAAKkhB,wBAMjD,QASd,QAAerZ,gBAAWyW,ICtwBX,MAAMkG,WAAqBhlB,kBACxCO,SACE,OACE,yBAAKI,UAAU,YACb,6BAAK,0BAAMyH,MAAO,CAACuD,MAA8B,IAAtBnL,KAAKC,MAAMwkB,SAAkB,QACvDzkB,KAAKC,MAAMwkB,SAAW,KACrB,uBAAGhV,KAAK,IAAIlP,QAAU2E,IAAOA,EAAEG,iBAAkBrF,KAAKC,MAAM0T,aAC1D,uBAAGxT,UAAU,kBAAb,SADF,IAC0C,kBAAC,EAAAM,iBAAD,CAAkBC,GAAG,gBAC3DmB,eAAe,SAASC,YAAY,6BAGxC,kBAAC,EAAArB,iBAAD,CAAkBC,GAAG,mBAAmBmB,eAAe,eACrDC,YAAY,4CCTT,MAAM4iB,WAAmBllB,cACtCqD,YAAY5C,GACV6C,MAAM7C,GAEND,KAAK0O,MAAQ,CACXiW,WAAY,KACZF,SAAU,GAGZzkB,KAAK4kB,aAAe5kB,KAAK4kB,aAAa1hB,KAAKlD,MAC3CA,KAAKqU,aAAerU,KAAKqU,aAAanR,KAAKlD,MAG7C4kB,aAAazI,EAAK0I,EAAUC,GAC1B,IAAK3I,EAEH,YADAnc,KAAKC,MAAM6F,QAAQ,yBAA2BqW,EAAM,KAItD,MAAMwI,EAAa3kB,KAAKC,MAAMkE,OAAO4gB,qBACrC/kB,KAAK+O,SAAS,CAAC4V,WAAYA,IAC3BA,EAAWK,SAAS7I,EAAK0I,EAAUC,GAChCG,IACCjlB,KAAK+O,SAAS,CAAC0V,SAAUQ,EAASjlB,KAAKC,MAAMwL,UAE9ClH,IACCvE,KAAKC,MAAM6F,QAAQvB,EAAK,UAE1BT,MAAK,KACL9D,KAAK+O,SAAS,CAAC4V,WAAY,KAAMF,SAAU,OAC1CngB,OAAOC,IACJA,GACFvE,KAAKC,MAAM6F,QAAQ,2BAA6BvB,EAAIC,QAAS,OAE/DxE,KAAK+O,SAAS,CAAC4V,WAAY,KAAMF,SAAU,OAI/CpQ,eACMrU,KAAKC,MAAMilB,UACbllB,KAAKC,MAAMklB,iBACFnlB,KAAK0O,MAAMiW,YACpB3kB,KAAK0O,MAAMiW,WAAWS,SAI1BrlB,SACE,IAAI8kB,EAAW7kB,KAAKC,MAAM4kB,UAAY,kBAClCA,EAAS3d,OAAS,KACpB2d,EAAWA,EAAStV,OAAO,EAAG,IAAM,MAAQsV,EAAStV,QAAQ,KAE/D,IAOI4M,EAAKkJ,EAPL5Z,EAAOzL,KAAKC,MAAMwL,KAAO,EAC3B,0BAAMtL,UAAU,cAAhB,IAA+B8I,EAAiBjJ,KAAKC,MAAMwL,MAA3D,KACA,KAMGzL,KAAKC,MAAMilB,WAAcllB,KAAK0O,MAAMiW,aJuBtC,SAAuBxI,GAC5B,OAAOA,IAAQ,kCAAkCE,KAAKF,GIxBGmJ,CAActlB,KAAKC,MAAMslB,cAQ9EpJ,EAAMD,GAAYlc,KAAKC,MAAMslB,aAC7BF,EAAa,OAPblJ,EAAM,IACNkJ,EAAcngB,IACZA,EAAEG,iBACFrF,KAAK4kB,aAAa5kB,KAAKC,MAAMslB,YAAavlB,KAAKC,MAAM4kB,SAAU7kB,KAAKC,MAAM6kB,YAM9E,MAAMU,EAAiB,oCAAE,uBAAGrlB,UAAU,kBAAb,iBAAF,IAAkD,kBAAC,EAAAM,iBAAD,CAAkBC,GAAG,kBAC5FmB,eAAe,OAAOC,YAAY,gCACpC,OACE,yBAAK3B,UAAU,cACb,6BAAK,uBAAGA,UAAU,2BAAb,sBACL,yBAAKA,UAAU,eACb,6BAAM0kB,EAAN,IAAiBpZ,GAChBzL,KAAKC,MAAMilB,WAAallB,KAAK0O,MAAMiW,WAClC,kBAACH,GAAD,CAAcC,SAAUzkB,KAAKC,MAAMilB,UAAYllB,KAAKC,MAAMwkB,SAAWzkB,KAAK0O,MAAM+V,SAC9E9Q,SAAU3T,KAAKqU,eAEjB,6BAAM8H,EACJ,uBAAG1M,KAAM0M,EAAK6I,SAAUhlB,KAAKC,MAAM4kB,SAAUtkB,QAAS8kB,GAAaG,GAEnE,0BAAMrlB,UAAU,cAAcqlB,OCnF5C,MAAM9jB,IAAWC,oBAAe,CAC9B,QAAW,CACT,GAAM,kBACN,eAAkB,aAClB,YAAe,8CAEjB,OAAU,CACR,GAAM,yBACN,eAAkB,SAClB,YAAe,oDAInB,MAAM8jB,WAAuBjmB,kBAC3BO,SACE,MAAM,cAACgD,GAAiB/C,KAAKC,MAAM+C,KACnC,IAAI0iB,EAEFA,EADE1lB,KAAKC,MAAM0lB,UAAY9lB,2BACbkD,EAAcrB,GAASkkB,SAC1B5lB,KAAKC,MAAM0lB,UAAY9lB,0BACpBkD,EAAcrB,GAASmkB,QAEvB/d,EAAgB9H,KAAKC,MAAMylB,UAAW1lB,KAAKC,MAAM+C,KAAK+E,QAGpE,IAAI+d,EAAS,KAab,OAZI9lB,KAAKC,MAAM0lB,UAAY9lB,2BACzBimB,EAAU,uBAAG3lB,UAAU,wBAAb,eACDH,KAAKC,MAAM0lB,UAAY9lB,0BAChCimB,EAAU,uBAAG3lB,UAAU,8BAAb,WACDH,KAAKC,MAAM0lB,UAAY9lB,wBAChCimB,EAAU,uBAAG3lB,UAAU,wBAAb,QACDH,KAAKC,MAAM0lB,UAAY9lB,4BAChCimB,EAAU,uBAAG3lB,UAAU,wBAAb,YACDH,KAAKC,MAAM0lB,UAAY9lB,0BAChCimB,EAAU,uBAAG3lB,UAAU,6BAAb,aAIV,0BAAMA,UAAU,aACbulB,EAAW,IAAUI,IAM9B,QAAeje,gBAAW4d,IChDX,MAAMM,WAAuBvmB,kBAC1CqD,YAAY5C,GACV6C,MAAM7C,GAGRF,SACE,OACE,yBAAKI,UAAU,gBACZX,kBAAoB,MAAOQ,KAAKC,OACjC,yBAAKE,UAAU,qBACb,kBAACqkB,GAAD,CAAcC,SAAUzkB,KAAKC,MAAMwkB,SAAU9Q,SAAU3T,KAAKC,MAAMklB,oBCL7D,MAAMa,WAAoBxmB,cACvCqD,YAAY5C,GACV6C,MAAM7C,GAEND,KAAK0O,MAAQ,CACX+V,SAAU,GAGRxkB,EAAMgmB,WACRhmB,EAAMgmB,SAASC,WAAalmB,KAAKmmB,eAAejjB,KAAKlD,OAGvDA,KAAKomB,mBAAqBpmB,KAAKomB,mBAAmBljB,KAAKlD,MACvDA,KAAKqmB,sBAAwBrmB,KAAKqmB,sBAAsBnjB,KAAKlD,MAC7DA,KAAKyQ,mBAAqBzQ,KAAKyQ,mBAAmBvN,KAAKlD,MACvDA,KAAKsmB,mBAAqBtmB,KAAKsmB,mBAAmBpjB,KAAKlD,MAGzDomB,mBAAmBlhB,GACjBA,EAAEG,iBACFrF,KAAKC,MAAMsmB,eAAe,CACxBpK,IAAKjX,EAAEE,OAAOsF,IACdma,SAAU3f,EAAEE,OAAOhF,MACnB+K,MAAOjG,EAAEE,OAAOQ,QAAQuF,MACxBC,OAAQlG,EAAEE,OAAOQ,QAAQwF,OACzBK,KAAMvG,EAAEE,OAAOQ,QAAQ6F,KACvBT,KAAM9F,EAAEE,OAAOQ,QAAQsH,OAI3BmZ,sBAAsBnhB,GACpBA,EAAEG,iBACF,MAAM4F,EAAO,CACX/E,IAAKlG,KAAKC,MAAMiG,IAElB+E,KAAY,IACR/F,EAAEE,OAAOQ,QAAQoI,OACnB/C,EAAKub,KAAKthB,EAAEE,OAAOQ,QAAQoI,MAAQ9I,EAAEE,OAAOQ,QAAQqS,IAAM/S,EAAEE,OAAOQ,QAAQqS,SAChD7B,IAAzBlR,EAAEE,OAAOQ,QAAQqS,IAAoB,EAAI,GAAK/S,EAAEE,OAAOQ,QAAQqS,KAEvC,OAAxB/S,EAAEE,OAAOQ,QAAQ6gB,MACnBxb,EAAKyb,IAAMxK,GAAYhX,EAAEE,OAAOQ,QAAQ8gB,MAAQ,eAElD,MAAMzS,EAAO/O,EAAEE,OAAOQ,QAAQxF,OAAS,UACvCJ,KAAKC,MAAM0mB,eAAezhB,EAAEE,OAAOQ,QAAQ6gB,IAAKxS,EAAMhJ,GAGxDwF,mBAAmBvL,GACjBA,EAAEG,iBACFH,EAAEI,kBACF,MAAM0e,EAAYhkB,KAAKC,MAAM0lB,UAAY9lB,OAAO+mB,sBAAwB,CAAC,wBAA0B,GACnG5mB,KAAKC,MAAM2Q,gBAAgB,CAAE1K,IAAKlG,KAAKC,MAAMiG,IAAK7F,QAASL,KAAKC,MAAMI,QACzCsH,EAAGzC,EAAE2L,MAAOrJ,EAAGtC,EAAE4L,OAASkT,GAGzDmC,eAAeU,GACb7mB,KAAK+O,SAAS,CAAC0V,SAAUoC,IAG3BP,qBACEtmB,KAAKC,MAAMklB,eAAenlB,KAAKC,MAAMiG,IAAKlG,KAAKC,MAAMgmB,UAGvDlmB,SACE,MAAM+mB,EAAY9mB,KAAKC,MAAM8mB,QAAU,SACpC/mB,KAAKC,MAAM+mB,SAAW,KAAOhnB,KAAKC,MAAMgnB,SAAW,OAAS,SACzDC,EAAsC,UAAvBlnB,KAAKC,MAAM+mB,UAA+C,QAAvBhnB,KAAKC,MAAM+mB,SAAsB,aAAe,SAClGnd,EAAS7J,KAAKC,MAAM8mB,QAAU,KAAQ/mB,KAAKC,MAAM+a,aAAc,EAC/DmM,EAAennB,KAAKC,MAAMmnB,UAAYpnB,KAAKC,MAAMgnB,WAC7B,UAAvBjnB,KAAKC,MAAM+mB,UAA+C,QAAvBhnB,KAAKC,MAAM+mB,UAEjD,IAAI3mB,EAAUL,KAAKC,MAAMI,QACzB,MAAMgnB,EAAc,GAiCpB,OAhCIrnB,KAAKC,MAAMqnB,UAAYC,2BAA2BA,iBAAelnB,IACnEknB,qBAAmBlnB,GAAS,SAASmnB,EAAKrd,GACxB,oBAAZqd,EAAIta,MAKRma,EAAYtgB,KAAK,kBAAC2d,GAAD,CACfvgB,OAAQnE,KAAKC,MAAMkE,OACnBohB,YAAagC,wBAAsBC,GACnC3C,SAAU2C,EAAIxZ,KAAMkX,UAAWqC,sBAAoBC,GACnD1C,SAAU0C,EAAIta,KAAMzB,KAAM8b,uBAAqBC,GAC/C/C,SAAUzkB,KAAK0O,MAAM+V,SACrBU,eAAgBnlB,KAAKsmB,mBACrBxgB,QAAS9F,KAAKC,MAAM6F,QACpBjH,IAAKsL,OACNnK,MACHK,EAAUb,kBAAoBA,aAAgB,KAAM+nB,gBAAclnB,EAASonB,GAAiBznB,QACnFA,KAAKC,MAAM8mB,QAEpB1mB,EAAU,oCAAE,uBAAGF,UAAU,uBAAb,SAAF,IAA+C,uBAAGA,UAAU,QACpE,kBAAC,EAAAM,iBAAD,CAAkBC,GAAG,kBACnBmB,eAAe,kBAAkBC,YAAY,sCAEtB,iBAAXzB,IAChBA,EAAU,oCACN,uBAAGF,UAAU,uBAAb,iBADM,IAC+C,uBAAGA,UAAU,QAChE,kBAAC,EAAAM,iBAAD,CAAkBC,GAAG,kBACnBmB,eAAe,kBAAkBC,YAAY,wCAKrD,wBAAI3B,UAAW2mB,GACZ9mB,KAAKC,MAAMmnB,UAAYpnB,KAAKC,MAAMgnB,SACjC,yBAAK9mB,UAAU,cACZgnB,EACC,kBAACvd,EAAD,CACE1F,MAAOlE,KAAKC,MAAMmnB,SAClBhnB,MAAOJ,KAAKC,MAAMynB,SAClB7d,OAAQA,IACV,MAEJ,KACF,6BACE,yBAAK1J,UAAW+mB,GACd,yBAAK/mB,UAAU,mBACZE,EACAgnB,EACArnB,KAAKC,MAAMylB,UACV,kBAAC,GAAD,CACEA,UAAW1lB,KAAKC,MAAMylB,UACtBC,SAAU3lB,KAAKC,MAAM0lB,WACrB,MAEL3lB,KAAKC,MAAM8mB,UAAY/mB,KAAKC,MAAM2Q,gBACjC,KACA,0BAAMzQ,UAAU,eACd,uBAAGsP,KAAK,IAAIlP,QAASP,KAAKyQ,oBACxB,uBAAGtQ,UAAU,kBAAb,kBAKPgnB,EACC,yBAAKhnB,UAAU,UACb,kBAAC,EAAAM,iBAAD,CAAkBC,GAAG,iBAAiBmB,eAAe,YACnDC,YAAY,+DACP6lB,GAAqB3nB,KAAKC,MAAMynB,UAAY,2BAAIC,MAGvD,QAcd,SAASF,GAAgB7f,EAAOqD,EAAM8G,EAAQlT,GAC5C,GAAa,MAAT+I,EAEF,OAAO,KAGT,IAAIggB,EAAKL,iBAAe3f,GACxB,GAAIggB,EAAI,CACN,MAAMC,EAAON,mBAAiB3f,EAAOqD,IAAS,GAE9C,OADA4c,EAAKhpB,IAAMA,EACH+I,GACN,IAAK,KAEHigB,EAAK1nB,UAAY,YACjB,MACF,IAAK,KAEH,GAAI8K,EAAM,CACR4c,EAAK1nB,UAAY,eACjB,MAAMwM,EAAMzB,EAAaD,EAAKE,MAAOF,EAAKG,OACxC/B,KAAKC,IAAItJ,KAAKC,MAAM6nB,cAAgB1mB,GAAcA,KAAgBA,KAAe,IACjF,CAACsK,S5B1IoB,G4B0ISC,U5B1IT,I4B2IvBkc,EAAKjgB,MAAQ,CAAEuD,MAAOwB,EAAIjB,SAAW,KAAMN,OAAQuB,EAAIhB,UAAY,MAC9D4b,sBAAoBtc,GAWvB2c,EAAK7B,IAVL8B,EAAKnd,IAAM1K,KAAKC,MAAMkE,OAAO4jB,aPhElC,SAA0B5L,GAC/B,IAAKA,EACH,OAAO,KAIT,OADqBD,GAAYC,KAM7B,mCAAmCE,KAAKF,EAAI7R,QACvC6R,EAGF,MOiD6C6L,CAAiBH,EAAKnd,MAChEmd,EAAKpd,IAAMQ,EAAK+C,KACZ6Z,EAAKnd,KACPmd,EAAKtnB,QAAUP,KAAKomB,mBACpByB,EAAK1nB,WAAa,oBAElB0nB,EAAKnd,IAAM,wBAOjB,MACF,IAAK,KAEHmd,EAAKtnB,QAAUP,KAAKqmB,sBACpB,IAAI4B,EAAQzoB,iBAAmBuS,GAASmW,GACf,iBAATA,EAAoBA,OAAQ9R,IAEvC6R,GAAyB,GAAhBA,EAAM/gB,SAClB+gB,EAAQ,CAACJ,EAAK7Z,OAGhB6Z,EAAK,cAAgBI,EAAM/U,KAAK,IAChC,MACF,IAAK,KAEH2U,EAAK1nB,UAAY,WACjB,MACF,IAAK,KAEH,MACF,QACY,SAANynB,IAGFA,EAAK,oCAAE,0BAAMznB,UAAU,kBAAhB,eAIb,OAAOX,kBAAoBooB,EAAIC,EAAM9V,GAErC,OAAOA,ECpOX,MAAMrQ,IAAWC,oBAAe,CAC9B,mBAAsB,CACpBjB,GAAI,4BACJmB,eAAgB,qBAChBC,YAAa,4CAEf,iBAAoB,CAClBpB,GAAI,qBACJmB,eAAgB,cAChBC,YAAa,gCAEf,kBAAqB,CACnBpB,GAAI,uBACJmB,eAAgB,gBAChBC,YAAa,4CAEf,0BAA6B,CAC3BpB,GAAI,4BACJmB,eAAgB,kDAChBC,YAAa,8CAEf,uBAA0B,CACxBpB,GAAI,8BACJmB,eAAgB,+BAChBC,YAAa,gDAIjB,MAAMqmB,WAAoB3oB,kBACxBqD,YAAY5C,GACV6C,MAAM7C,GAEND,KAAK0O,MAAQ,CACXlK,QAAS,GAET4jB,mBAAmB,IAAI/f,MAAOggB,UAAYnnB,EAAiB,GAG7DlB,KAAKsoB,iBAAmBtoB,KAAKsoB,iBAAiBplB,KAAKlD,MACnDA,KAAKuoB,kBAAoBvoB,KAAKuoB,kBAAkBrlB,KAAKlD,MACrDA,KAAKwoB,iBAAmBxoB,KAAKwoB,iBAAiBtlB,KAAKlD,MACnDA,KAAKyoB,WAAazoB,KAAKyoB,WAAWvlB,KAAKlD,MACvCA,KAAK0oB,eAAiB1oB,KAAK0oB,eAAexlB,KAAKlD,MAC/CA,KAAK2oB,oBAAsB3oB,KAAK2oB,oBAAoBzlB,KAAKlD,MAG3D6E,oBACM7E,KAAK4oB,iBACP5oB,KAAK4oB,gBAAgB7jB,iBAAiB,QAAS/E,KAAKsoB,kBAAkB,GAI1EtjB,uBACMhF,KAAK4oB,iBACP5oB,KAAK4oB,gBAAgB3jB,oBAAoB,QAASjF,KAAKsoB,kBAAkB,GAI7EzZ,qBACM7O,KAAK4oB,iBACP5oB,KAAK4oB,gBAAgBpP,QAIzB8O,iBAAiBpjB,GACXlF,KAAKC,MAAM4oB,UzByEZ,SAAoBpP,EAAOqP,EAAgBC,EAAqBjjB,GACrE,IAAIJ,GAAS+T,EAAMuP,eAAiBvP,EAAMwP,cAAcD,eAAiB,IAAItjB,MAC7E,IAAK,IAAIyE,KAAKzE,EAAO,CACnB,IAAID,EAAOC,EAAMyE,GACjB,GAAkB,SAAd1E,EAAKyjB,KAAiB,CACxB,IAAI/a,EAAO1I,EAAK0jB,YAChB,IAAKhb,EAAM,CACT1J,QAAQC,IAAI,kDAAmDe,EAAKyjB,KAAMzjB,EAAKuF,MAC/E,SAcF,OAZImD,EAAKnD,MAAmC,SAA3BmD,EAAKnD,KAAKsD,MAAM,KAAK,GAEhCH,EAAK1C,KAAOnK,GAA8BsJ,EAAwBuC,QAAQgB,EAAKnD,MAAQ,EACzFoe,wBAAwBjb,EAAM3M,EAAeA,GAAe,EAAOsnB,EAAgBhjB,GAEnFujB,kBAAkBlb,EAAM2a,EAAgBhjB,GAI1CoI,EAAaC,EAAM4a,IAGd,GAIX,OAAO,EyB/FDO,CAAWpkB,GACb,CAACqkB,EAAMrc,EAAM/B,EAAOC,EAAQqC,KAC1BzN,KAAKC,MAAMupB,cAActc,EAAMqc,EAAMpe,EAAOC,EAAQqC,MAEtD,CAACP,EAAMqc,EAAM9b,KACXzN,KAAKC,MAAMwpB,aAAavc,EAAMqc,EAAM9b,KAEtCzN,KAAKC,MAAM6F,UAGXZ,EAAEG,iBAINkjB,kBAAkBrjB,GACZA,EAAEE,OAAO4J,OAAS9J,EAAEE,OAAO4J,MAAM9H,OAAS,GAC5ClH,KAAKC,MAAMupB,cAActkB,EAAEE,OAAO4J,MAAM,IAG1C9J,EAAEE,OAAO6E,MAAQ,GAGnBue,iBAAiBtjB,GACf,MAAM,cAACnC,GAAiB/C,KAAKC,MAAM+C,KAC/BkC,EAAEE,OAAO4J,OAAS9J,EAAEE,OAAO4J,MAAM9H,OAAS,GAC5ClH,KAAKC,MAAMwpB,aAAavkB,EAAEE,OAAO4J,MAAM,IAGzC9J,EAAEE,OAAO6E,MAAQ,GAGnBwe,WAAWvjB,GACTA,EAAEG,iBACF,MAAMb,EAAUxE,KAAK0O,MAAMlK,QAAQ8F,QAC/B9F,GAAWxE,KAAKC,MAAMypB,aAAe1pB,KAAKC,MAAM0pB,WAClD3pB,KAAKC,MAAM2pB,cAAcplB,GACzBxE,KAAK+O,SAAS,CAACvK,QAAS,MAK5BkkB,eAAexjB,GAEC,UAAVA,EAAErG,MAECqG,EAAE2kB,WACL3kB,EAAEG,iBACFH,EAAEI,kBAEFtF,KAAKyoB,WAAWvjB,KAKtByjB,oBAAoBzjB,GAClB,MAAMkc,EAAW,CAAC5c,QAASU,EAAEE,OAAO6E,OACpC,GAAIjK,KAAKC,MAAM6pB,WAAY,CACzB,MAAM1hB,GAAM,IAAIC,MAAOggB,UACnBjgB,EAAMpI,KAAK0O,MAAM0Z,kBAAoBlnB,IACvClB,KAAKC,MAAM6pB,aACX1I,EAASgH,kBAAoBhgB,GAGjCpI,KAAK+O,SAASqS,GAGhBrhB,SACE,MAAM,cAACgD,GAAiB/C,KAAKC,MAAM+C,KAC7BqS,EAASrV,KAAKC,MAAM4oB,SACxB9lB,EAAcrB,GAASqoB,oBACtB/pB,KAAKC,MAAM+pB,cACVjnB,EAAcrB,GAAS1B,KAAKC,MAAM+pB,gBAClCjnB,EAAcrB,GAASuoB,kBAC3B,OACE,yBAAKvpB,GAAG,sBACJV,KAAKC,MAAM4oB,SA6BX,yBAAKnoB,GAAG,oBAAoB2U,GA5B5B,oCACGrV,KAAKC,MAAMwpB,aACV,oCACE,uBAAGha,KAAK,IAAIlP,QAAU2E,IAAOA,EAAEG,iBAAkBrF,KAAKkqB,YAAYC,SAAW/pB,MAAM,aACjF,uBAAGD,UAAU,4BAAb,UAEF,uBAAGsP,KAAK,IAAIlP,QAAU2E,IAAOA,EAAEG,iBAAkBrF,KAAKoqB,WAAWD,SAAW/pB,MAAM,eAChF,uBAAGD,UAAU,4BAAb,iBAIJ,KACDH,KAAKC,MAAM0pB,QACV,yBAAKxpB,UAAU,YACf,8BAAUO,GAAG,cAAcyU,YAAaE,EACtCpL,MAAOjK,KAAK0O,MAAMlK,QAASoL,SAAU5P,KAAK2oB,oBAC1CmB,WAAY9pB,KAAK0oB,eACjBhC,IAAMA,IAAS1mB,KAAK4oB,gBAAkBlC,GACtCjQ,WAAS,IACb,uBAAGhH,KAAK,IAAIlP,QAASP,KAAKyoB,WAAYroB,MAAM,QAC1C,uBAAGD,UAAU,kBAAb,SAEF,2BAAO6K,KAAK,OAAO0b,IAAMA,IAAS1mB,KAAKoqB,WAAa1D,GAClD9W,SAAU5P,KAAKwoB,iBAAkB5gB,MAAO,CAACyiB,QAAS,UACpD,2BAAOrf,KAAK,OAAO0b,IAAMA,IAAS1mB,KAAKkqB,YAAcxD,GAAO/W,OAAO,UACjEC,SAAU5P,KAAKuoB,kBAAmB3gB,MAAO,CAACyiB,QAAS,aAUjE,QAAexiB,gBAAWsgB,IC9KX,MAAMmC,WAAmB9qB,kBACtCqD,YAAY5C,GACV6C,MAAM7C,GAEND,KAAKuqB,cAAgBvqB,KAAKuqB,cAAcrnB,KAAKlD,MAG/CuqB,cAAcC,GACZxqB,KAAKC,MAAMwqB,UACXzqB,KAAKC,MAAM2pB,cAAc5pB,KAAKC,MAAMI,QAAQ8N,MAG9CpO,SACE,OAAKC,KAAKC,MAAMI,QAId,yBAAKK,GAAG,iBACN,yBAAKA,GAAG,+BACN,8BAAOV,KAAKC,MAAMI,QAAQwkB,UAC1B,uBAAGpV,KAAK,IAAIlP,QAAU2E,IAAOA,EAAEG,iBAAkBrF,KAAKC,MAAMwqB,YAAa,uBAAGtqB,UAAU,uBAAb,WAE3E,yBAAKO,GAAG,2BACN,yBAAKP,UAAU,sBACb,uBAAGA,UAAU,uBA/BzB,SAAsB+M,GAEpB,MAAMwd,EAAa,CAACC,QAAS,oBAAqBC,MAAO,QAAS3W,KAAM,cAAe4W,MAAO,YAE9F,OAAOH,EAAWxd,IAASwd,GAAYxd,GAAQ,IAAIoB,MAAM,KAAK,KAAOoc,EAAU,QA2BjCI,CAAa9qB,KAAKC,MAAMI,QAAQ2K,OACpE,6BAAK,2BAAG,kBAAC,EAAAvK,iBAAD,CAAkBC,GAAG,wBAA7B,IAA0DV,KAAKC,MAAMI,QAAQ2K,MAAQ,4BACrF,6BAAK,2BAAG,kBAAC,EAAAvK,iBAAD,CAAkBC,GAAG,gBAA7B,IAAkDuI,EAAiBjJ,KAAKC,MAAMI,QAAQoL,SAG1F,kBAAC,GAAD,CACEke,SAAS,EACTC,cAAe5pB,KAAKuqB,cACpBzkB,QAAS9F,KAAKC,MAAM6F,WAlBjB,MClBE,MAAMilB,WAAkBvrB,cACrCqD,YAAY5C,GACV6C,MAAM7C,GAGRF,SACE,MAAMirB,EAAc,GACdC,GAAcjrB,KAAKC,MAAMwhB,aAAe,IAAIva,OAC5CgkB,EAAc7hB,KAAKC,I/B4DM,E+B5DmB2hB,GAclD,OAZCjrB,KAAKC,MAAMwhB,aAAe,IAAI0J,MAAMzJ,IACnCsJ,EAAYjkB,KACV,yBAAK5G,UAAU,aAAatB,IAAK6iB,EAAI/c,MACnC,kBAACiF,EAAD,CACE1F,MAAOwd,EAAI/c,KACXkF,OAAQiB,EAAa4W,EAAI5O,OAAS4O,EAAI5O,OAAO/H,MAAQ,QAAS,EAC9D3K,MAAOshB,EAAI5O,OAAS4O,EAAI5O,OAAOC,GAAK,SAGnCiY,EAAY9jB,QAAUgkB,KAI7B,yBAAKxqB,GAAG,eAAesqB,EAAvB,IAAqCC,EAAaC,EAChD,8BACE,kBAAC,EAAAzqB,iBAAD,CAAkBC,GAAG,sBAAsBmB,eAAe,mBACtDC,YAAY,oGACZiQ,OAAQ,CAAEqZ,SAAWH,EAAaC,MAC9B,OC9BH,MAAMG,WAAqB7rB,kBACxCqD,YAAY5C,GACV6C,MAAM7C,GAEND,KAAK0O,MAAQ,CACXvD,MAAO,EACPC,OAAQ,GAGVpL,KAAKsrB,gBAAkBtrB,KAAKsrB,gBAAgBpoB,KAAKlD,MAGnDurB,YAAYC,GACV,GAAIA,IAASxrB,KAAK0O,MAAMvD,MAAO,CAC7B,MAAM9D,EAASmkB,EAAKC,wBACpBzrB,KAAK+O,SAAS,CACZ5D,MAAsB,EAAf9D,EAAO8D,MACdC,OAAwB,EAAhB/D,EAAO+D,UAKrBkgB,gBAAgBd,GACdxqB,KAAKC,MAAMwqB,UACXzqB,KAAKC,MAAM2pB,cAAcY,EAASxqB,KAAKC,MAAMI,QAAQ+M,MAGvDrN,SACE,IAAKC,KAAKC,MAAMI,QACd,OAAO,KAGT,MAAMsM,EAAMzB,EAAalL,KAAKC,MAAMI,QAAQ8K,MAAOnL,KAAKC,MAAMI,QAAQ+K,OACpEpL,KAAK0O,MAAMvD,MAAOnL,KAAK0O,MAAMtD,QAAQ,GACjCK,EAAOkB,EAAM,CAAExB,MAAOwB,EAAIjB,SAAW,KAAMN,OAAQuB,EAAIhB,UAAY,MACrE3L,KAAKC,MAAMI,QAAQ8K,MAAQnL,KAAKC,MAAMI,QAAQ+K,OAAU,CAACD,MAAO,QAAU,CAACC,OAAQ,QACvFK,EAAKJ,SAAW,OAChBI,EAAKH,UAAY,OAEjB,IAAIuZ,EAAW7kB,KAAKC,MAAMI,QAAQwkB,SAElC,MAAM6G,EAAYriB,KAAKsiB,KAAM3rB,KAAK0O,MAAMvD,MAAQ/J,EAAW,IAAO,GAAK,EAAG,IACtEyjB,EAAS3d,OAASwkB,IACpB7G,EAAWA,EAAS7T,MAAM,EAAG0a,EAAU,EAAI,GAAK,IAAM7G,EAAS7T,MAAM,EAAI0a,EAAU,IAErF,MAAMvgB,EAAQnL,KAAKC,MAAMI,QAAQ8K,OAAS,IACpCC,EAASpL,KAAKC,MAAMI,QAAQ+K,QAAU,IAC5C,OACE,yBAAK1K,GAAG,iBACN,yBAAKA,GAAG,+BACJV,KAAKC,MAAM2pB,cAMX,8BAAO5pB,KAAKC,MAAMI,QAAQwkB,UAL1B,uBAAGpV,KAAMzP,KAAKC,MAAMI,QAAQ8b,IAAK6I,SAAUhlB,KAAKC,MAAMI,QAAQwkB,UAC5D,uBAAG1kB,UAAU,kBAAb,iBADF,IACkD,kBAAC,EAAAM,iBAAD,CAC9CC,GAAG,kBAAkBmB,eAAe,WAAWC,YAAY,+BAKjE,uBAAG2N,KAAK,IAAIlP,QAAU2E,IAAOA,EAAEG,iBAAkBrF,KAAKC,MAAMwqB,YAAa,uBAAGtqB,UAAU,uBAAb,WAE3E,yBAAKO,GAAG,0BAA0BgmB,IAAM8E,GAASxrB,KAAKurB,YAAYC,IAChE,yBAAK9gB,IAAK1K,KAAKC,MAAMI,QAAQ8b,IAAKvU,MAAO6D,EAAMtL,UAAU,gBAAgBsK,IAAKzK,KAAKC,MAAMI,QAAQwkB,YAElG7kB,KAAKC,MAAM2pB,cACV,kBAAC,GAAD,CACEI,cAAc,oBACdN,aAAa,EACbE,cAAe5pB,KAAKsrB,gBACpBxlB,QAAS9F,KAAKC,MAAM6F,UAEtB,yBAAKpF,GAAG,wBACN,6BACE,6BAAK,2BAAG,kBAAC,EAAAD,iBAAD,CAAkBC,GAAG,kBAAkBmB,eAAe,aAC5DC,YAAY,4BACd,6BAAK,0BAAM1B,MAAOJ,KAAKC,MAAMI,QAAQwkB,UAAWA,GAAsB,OAExE,6BACE,6BAAK,2BAAG,kBAAC,EAAApkB,iBAAD,CAAkBC,GAAG,qBAAqBmB,eAAe,gBAC/DC,YAAY,yCACd,6BAAM9B,KAAKC,MAAMI,QAAQ2K,OAE3B,6BACE,6BAAK,2BAAG,kBAAC,EAAAvK,iBAAD,CAAkBC,GAAG,aAAamB,eAAe,QACvDC,YAAY,0BACd,6BAAMqJ,EAAN,MAAsBC,EAAtB,QAAmCnC,EAAiBjJ,KAAKC,MAAMI,QAAQoL,WCxFtE,MAAMmgB,WAAmBpsB,kBACtCqD,YAAY5C,GACV6C,MAAM7C,GAEND,KAAK6rB,mBAAqB7rB,KAAK6rB,mBAAmB3oB,KAAKlD,MAGzD6rB,mBAAmBC,EAAK7gB,GACtB6gB,EAAIzmB,iBACJrF,KAAKC,MAAM4F,SAASoF,GAGtBlL,SACE,OACE,yBAAKI,UAAU,uBACb,yBAAKA,UAAU,SACb,kBAAC,EAAAM,iBAAD,CAAkBC,GAAG,kBACnBmB,eAAe,kEACfC,YAAY,6DAEhB,yBAAK3B,UAAU,UACb,4BAAQA,UAAU,OAAOI,QAASkZ,IAAWzZ,KAAK6rB,mBAAmBpS,EAAO,YAC1E,kBAAC,EAAAhZ,iBAAD,CAAkBC,GAAG,yBACnBmB,eAAe,SAASC,YAAY,0CAExC,4BAAQ3B,UAAU,QAAQI,QAASkZ,IAAWzZ,KAAK6rB,mBAAmBpS,EAAO,YAC3E,kBAAC,EAAAhZ,iBAAD,CAAkBC,GAAG,yBACnBmB,eAAe,SAASC,YAAY,0CAExC,4BAAQ3B,UAAU,QAAQI,QAASkZ,IAAWzZ,KAAK6rB,mBAAmBpS,EAAO,WAC3E,kBAAC,EAAAhZ,iBAAD,CAAkBC,GAAG,wBACnBmB,eAAe,QAAQC,YAAY,4CCjClC,MAAMiqB,WAAoBvsB,kBACvCO,SACE,OAAQC,KAAKC,MAAM4T,KACjB,yBAAK1T,UAAU,oBAAmB,yBAAKA,UAAU,oBAAgC,MCGxE,MAAM6rB,WAAiBxsB,kBACpCO,SACE,MAAMksB,EAAUprB,EAAW,KAAOhB,iBAAsB,IACxD,OACE,yBAAKa,GAAG,cACN,6BACE,uBAAG+O,KAAK,mCACN,yBAAK/O,GAAG,OAAO+J,IAAI,OAAOC,IAAI,iBAC9B,2CAEF,2BAAG,kBAAC,EAAAjK,iBAAD,CAAkBC,GAAG,eAAemB,eAAe,YAAtD,IAAoEoqB,GACpE,2BAAG,kBAAC,EAAAxrB,iBAAD,CAAkBC,GAAG,eAAemB,eAAe,YAAtD,IAAoE7B,KAAKC,MAAMisB,cAA/E,KAAgGlsB,KAAKC,MAAMksB,cAA3G,QCfK,MAAMC,GACnB,oBAAoBliB,GAElB,MAAMmiB,EAAQniB,EAAKoE,MAAM,IAAK,GACxB/K,EAAS,GACf,IAAI+oB,EAAO,GAYX,OAXID,EAAM,KACRC,EAAOD,EAAM,GAAG9c,OAAO,GAAGjB,MAAM,MAE9B+d,EAAM,IACRA,EAAM,GAAG/d,MAAM,KAAKie,SAAQ,SAASC,GACnC,IAAI/mB,EAAO+mB,EAAKle,MAAM,KAClB7I,EAAK,KACPlC,EAAOkpB,mBAAmBhnB,EAAK,KAAOgnB,mBAAmBhnB,EAAK,QAI7D,CAAC6mB,KAAMA,EAAM/oB,OAAQA,GAG9B,kBAAkB4Y,GAChBnU,OAAO0kB,SAASxiB,KAAOiS,EAGzB,sBAAsBmQ,EAAM/oB,GAC1B,IAAI4Y,EAAMmQ,EAAKpZ,KAAK,KACpB,MAAMyZ,EAAO,GACb,IAAK,MAAM9tB,KAAO0E,EACZA,EAAOjE,eAAeT,IACxB8tB,EAAK5lB,KAAKlI,EAAM,IAAM0E,EAAO1E,IAMjC,OAHI8tB,EAAKzlB,OAAS,IAChBiV,GAAO,IAAMwQ,EAAKzZ,KAAK,MAElBiJ,EAGT,mBAAmBjS,EAAMrL,EAAKoL,GAC5B,MAAM2iB,EAAS5sB,KAAK6sB,aAAa3iB,GAEjC,OADA0iB,EAAOrpB,OAAO1E,GAAOoL,EACdjK,KAAK8sB,eAAeF,EAAON,KAAMM,EAAOrpB,QAGjD,sBAAsB2G,EAAMrL,GAC1B,MAAM+tB,EAAS5sB,KAAK6sB,aAAa3iB,GAEjC,cADO0iB,EAAOrpB,OAAO1E,GACdmB,KAAK8sB,eAAeF,EAAON,KAAMM,EAAOrpB,QAGjD,uBAAuB2G,EAAM6iB,GAC3B,MAAMH,EAAS5sB,KAAK6sB,aAAa3iB,GAEjC,OADA0iB,EAAON,KAAK,GAAKS,EACV/sB,KAAK8sB,eAAeF,EAAON,KAAMM,EAAOrpB,QAGjD,mBAAmB2G,EAAMhG,GACvB,MAAM0oB,EAAS5sB,KAAK6sB,aAAa3iB,GAIjC,OAHA0iB,EAAON,KAAK,GAAKpoB,SAEV0oB,EAAOrpB,OAAO3B,KACd5B,KAAK8sB,eAAeF,EAAON,KAAMM,EAAOrpB,SC7DnD,MAAMgkB,GAAS1nB,WAuBT6B,IAAWC,oBAAe,CAC9B,WAAc,CACZjB,GAAI,aACJmB,eAAgB,aAChBC,YAAa,wDAEf,UAAa,CACXpB,GAAI,sBACJmB,eAAgB,YAChBC,YAAa,qEAEf,UAAa,CACXpB,GAAI,kBACJmB,eAAgB,YAChBC,YAAa,uCAEf,QAAW,CACTpB,GAAI,UACJmB,eAAgB,UAChBC,YAAa,sEAKjB,SAASkrB,GAAc9b,GACrB,GAAIA,EAAK,CACP,MAAM+b,EAAK/b,EAAIgc,gBAAkB,GACjC,OAAOhc,EAAII,SAAS,WAAa2b,EAAGnX,SAAS,MAAQmX,EAAGnX,SAAS,MAEnE,OAAO,EAGT,SAASqX,GAAiBjc,GACxB,GAAIA,EAAK,CACP,MAAMkc,EAAKlc,EAAImc,cAAgB,GAC/B,OAAOnc,EAAII,SAAS,UAAY8b,EAAGtX,SAAS,MAAQsX,EAAGtX,SAAS,MAElE,OAAO,EAGT,MAAMwX,WAAqB9tB,cACzBqD,YAAY5C,GACV6C,MAAM7C,GAEND,KAAK0O,MAAQ4e,GAAaC,yBAAyBttB,EAAO,IAE1DD,KAAKwtB,MAAQxtB,KAAKwtB,MAAMtqB,KAAKlD,MAC7BA,KAAKytB,oBAAsBztB,KAAKytB,oBAAoBvqB,KAAKlD,MACzDA,KAAK0tB,mBAAqB1tB,KAAK0tB,mBAAmBxqB,KAAKlD,MACvDA,KAAK2tB,aAAe3tB,KAAK2tB,aAAazqB,KAAKlD,MAC3CA,KAAK4tB,sBAAwB5tB,KAAK4tB,sBAAsB1qB,KAAKlD,MAC7DA,KAAK6tB,kBAAoB7tB,KAAK6tB,kBAAkB3qB,KAAKlD,MACrDA,KAAK8tB,iBAAmB9tB,KAAK8tB,iBAAiB5qB,KAAKlD,MACnDA,KAAK+tB,kBAAoB/tB,KAAK+tB,kBAAkB7qB,KAAKlD,MACrDA,KAAKguB,iBAAmBhuB,KAAKguB,iBAAiB9qB,KAAKlD,MACnDA,KAAKiuB,0BAA4BjuB,KAAKiuB,0BAA0B/qB,KAAKlD,MACrEA,KAAKkuB,kBAAoBluB,KAAKkuB,kBAAkBhrB,KAAKlD,MACrDA,KAAKmuB,oBAAsBnuB,KAAKmuB,oBAAoBjrB,KAAKlD,MACzDA,KAAKouB,mBAAqBpuB,KAAKouB,mBAAmBlrB,KAAKlD,MACvDA,KAAKquB,mBAAqBruB,KAAKquB,mBAAmBnrB,KAAKlD,MACvDA,KAAKyQ,mBAAqBzQ,KAAKyQ,mBAAmBvN,KAAKlD,MACvDA,KAAKsuB,6BAA+BtuB,KAAKsuB,6BAA6BprB,KAAKlD,MAC3EA,KAAKuuB,wBAA0BvuB,KAAKuuB,wBAAwBrrB,KAAKlD,MACjEA,KAAKwuB,iBAAmBxuB,KAAKwuB,iBAAiBtrB,KAAKlD,MACnDA,KAAKwoB,iBAAmBxoB,KAAKwoB,iBAAiBtlB,KAAKlD,MACnDA,KAAKuoB,kBAAoBvoB,KAAKuoB,kBAAkBrlB,KAAKlD,MACrDA,KAAKsmB,mBAAqBtmB,KAAKsmB,mBAAmBpjB,KAAKlD,MACvDA,KAAKyuB,qBAAuBzuB,KAAKyuB,qBAAqBvrB,KAAKlD,MAC3DA,KAAK0uB,uBAAyB1uB,KAAK0uB,uBAAuBxrB,KAAKlD,MAE/DA,KAAK2uB,sBAAwB,GAC7B3uB,KAAK4uB,sBAAwB,KAG/B/pB,oBAEM7E,KAAK6uB,kBACP7uB,KAAK6uB,iBAAiB9pB,iBAAiB,SAAU/E,KAAK6tB,mBAI1D7oB,uBACMhF,KAAK6uB,kBACP7uB,KAAK6uB,iBAAiB5pB,oBAAoB,SAAUjF,KAAK6tB,mBAI3D7tB,KAAK0uB,yBAKP7f,mBAAmBC,EAAW6G,GACxB3V,KAAK6uB,mBACHlZ,EAAUzR,OAASlE,KAAK0O,MAAMxK,OAASyR,EAAUjU,SAASwF,QAAUlH,KAAK0O,MAAMhN,SAASwF,OAE1FlH,KAAK6uB,iBAAiBC,UAAY9uB,KAAK6uB,iBAAiBE,aAAe/uB,KAAK0O,MAAMsgB,eACzElgB,EAAUmgB,eAAiBjvB,KAAKC,MAAMgvB,iBAE/CjvB,KAAK6uB,iBAAiBC,WAAahgB,EAAUmgB,eAAiBjvB,KAAKC,MAAMgvB,iBAI7E,MAAM/qB,EAAQlE,KAAKC,MAAMkE,OAAOC,SAASpE,KAAK0O,MAAMxK,OAwBpD,GAvBIlE,KAAK0O,MAAMxK,OAASyR,EAAUzR,QAC5ByR,EAAUzR,QAAUrE,wBAA2B8V,EAAUzR,QAC3DlE,KAAKwtB,MAAM7X,EAAUzR,OAGnBA,IACFA,EAAMgrB,OAASlvB,KAAKguB,iBACpB9pB,EAAMirB,sBAAwBnvB,KAAKiuB,0BACnC/pB,EAAMkrB,OAASpvB,KAAKkuB,kBACpBhqB,EAAM4b,WAAa9f,KAAK8tB,iBACxB5pB,EAAM6b,cAAgB/f,KAAK+tB,kBAC3B7pB,EAAMmrB,OAASrvB,KAAK+tB,oBAInB/tB,KAAKC,MAAMqvB,mBAKdtvB,KAAKyuB,qBAAqB,GAH1BzuB,KAAK0uB,yBAMHxqB,IAAUA,EAAMqrB,gBAAkBvvB,KAAKC,MAAMuvB,QAC3CxvB,KAAK0O,MAAMxK,OAASyR,EAAUzR,QAAW4K,EAAU0gB,OAAQ,CAE/D,MAAMC,EAAYzvB,KAAKC,MAAMyvB,gBAAkB1vB,KAAKC,MAAMyvB,eAAeC,YAAc3vB,KAAKC,MAAMiE,MAIlG,IAAI0rB,EAAW1rB,EAAMge,iBAAiB2N,iBAClC7vB,KAAK0O,MAAMqT,UAAa0N,IAAavrB,EAAMwN,eAE7Cke,EAAWA,EAASE,iBAElB9vB,KAAK0O,MAAMqhB,UAAYN,KAEzBG,EAAWA,EAASI,crCjHC,IqCkHjBhwB,KAAK0O,MAAMqhB,WACbH,EAAWA,EAASK,gBAGtBjwB,KAAK+O,SAAS,CAAEmhB,kBAAkB,KAEpC,MAAMC,EAAWV,EAAWzvB,KAAKC,MAAMyvB,oBAAiBtZ,EACxDlS,EAAMksB,UAAUR,EAASxN,QAAS+N,GAC/BrsB,MAAMC,IACY,KAAbA,EAAKssB,MAKLrwB,KAAK0O,MAAMxK,OAASH,EAAKG,OAC3BlE,KAAK+O,SAAS,CAAC7K,MAAOH,EAAKG,QAE7BlE,KAAKC,MAAMqwB,kBAAkBtwB,KAAKC,MAAMiE,MAAOH,EAAKG,OAEpDA,EAAMqsB,gBAAgBC,KACfA,EAAIC,UAAYvsB,EAAMqrB,gBACzBrrB,EAAMwsB,eAAeF,OAVvBpE,cAA0BA,GAAeuE,YAAY,GAAI5sB,EAAKR,OAAOW,WAcxEI,OAAOC,IACNE,QAAQC,IAAI,yBAA0B1E,KAAK0O,MAAMxK,OACjDlE,KAAKC,MAAM6F,QAAQvB,EAAIC,QAAS,OAChC,MAAMosB,EAAatD,GAAaC,yBAAyB,GAAI,IAC7DqD,EAAWxwB,MAAQJ,KAAKC,MAAM+C,KAAKD,cAAcrB,GAASmvB,WAC1D7wB,KAAK+O,SAAS6hB,OAKtB,gCAAgC7T,EAAWpH,GACzC,IAAImb,EAAY,GAChB,GAAK/T,EAAU7Y,OAiBR,GAAI6Y,EAAU7Y,OAASyR,EAAUzR,MAAO,CAC7C,MAAMA,EAAQ6Y,EAAU5Y,OAAOC,SAAS2Y,EAAU7Y,OAWlD,GAVA4sB,EAAY,CACV5sB,MAAO6Y,EAAU7Y,MACjB6sB,WAAY,KACZC,aAAc,KACdC,cAAe,KACfC,iBAAiB,EACjBlC,eAAgB,EAChBkB,kBAAkB,GAGhBhsB,EAAO,CAET,MAAMitB,EAAO,GACP7O,EAAO,GAETvF,EAAU3J,WACZlP,EAAMud,aAAaC,IACbA,EAAI3Q,QAAU2Q,EAAI/c,MAAQoY,EAAU/J,UACtCsP,EAAKvb,KAAK2a,MAKhBxd,EAAMxC,UAAS,SAAS4E,GACjBA,EAAIygB,SACPoK,EAAKpqB,KAAKT,MAIdvH,OAAOqyB,OAAON,EAAW,CACvBpvB,SAAUyvB,EACVE,WAAY/O,IAGVpe,EAAM4O,OACR/T,OAAOqyB,OAAON,EAAW,CACvB1wB,MAAO8D,EAAM4O,OAAOC,GACpBlJ,OAAQiB,EAAa5G,EAAM4O,OAAO/H,SAGpChM,OAAOqyB,OAAON,EAAW,CACvB1wB,MAAO,GACPyJ,OAAQ,OAIZ,MAAMynB,EAAOptB,EAAMqtB,cACfD,EACFvyB,OAAOqyB,OAAON,EAAW,CACvBU,sBAAuBrE,GAAiBmE,EAAKpgB,OAEtCyE,EAAU6b,uBACnBzyB,OAAOqyB,OAAON,EAAW,CACvBU,uBAAuB,IAG3BzyB,OAAOqyB,OAAON,EAAW,CACvBnS,QAASza,EAAMwN,mBAIjB3S,OAAOqyB,OAAON,EAAW,CACvBpvB,SAAU,GACV2vB,WAAY,GACZjxB,MAAO,GACPyJ,OAAQ,KACR2nB,uBAAuB,EACvB7S,SAAS,UApFbmS,EAAY,CACVpvB,SAAU,GACV2vB,WAAY,GACZntB,MAAO,KACP9D,MAAO,GACPyJ,OAAQ,KACRknB,WAAY,KACZC,aAAc,KACdC,cAAe,KACfC,iBAAiB,EACjBlC,eAAgB,EAChBkB,kBAAkB,EAClBsB,uBAAuB,EACvB7S,SAAS,GAiHb,OArCI5B,EAAU7L,KACR6L,EAAU7L,IAAIugB,YAAc9b,EAAU8b,WACxCX,EAAUW,UAAY9b,EAAU8b,UAE9B1U,EAAU7L,IAAI6e,YAAcpa,EAAUoa,WACxCe,EAAUf,UAAYpa,EAAUoa,WAE7BhT,EAAU7L,IAAI6e,SAAS,UAAYpa,EAAU+b,iBAChDZ,EAAUY,gBAAkB/b,EAAU+b,gBAEpC3U,EAAU7L,IAAI6Q,YAAcpM,EAAUoM,WACxC+O,EAAU/O,UAAYpM,EAAUoM,YAG9BpM,EAAU8b,WACZX,EAAUW,UAAW,GAEnB9b,EAAUoa,WACZe,EAAUf,UAAW,GAElBpa,EAAU+b,iBACb/b,EAAU+b,gBAAiB,GAEzB/b,EAAUoM,WACZ+O,EAAU/O,UAAW,IAIrBiL,GAAcjQ,EAAU7L,OAASyE,EAAUgc,cAC7Cb,EAAUc,aAAejc,EAAUgc,cAIhC5U,EAAU3J,WAAauC,EAAU0b,YAAc1b,EAAU0b,WAAWnqB,OAAS,IAChF4pB,EAAUO,WAAa,IAGlBP,EAGTtD,MAAMqE,GACJ,IAAKA,EACH,OAEF,IAAIC,EAAW9xB,KAAKC,MAAMkE,OAAOC,SAASytB,GACtCC,GAAYA,EAASvC,gBACvBuC,EAAStE,OAAM,GACZlpB,OAAM,SACNytB,SAAQ,KAGP/xB,KAAK+O,SAAS,CAACmhB,kBAAkB,IACjC4B,EAAS5C,YAAS9Y,EAClB0b,EAAS3C,2BAAwB/Y,EACjC0b,EAAS1C,YAAShZ,EAClB0b,EAAShS,gBAAa1J,EACtB0b,EAAS/R,mBAAgB3J,EACzB0b,EAASzC,YAASjZ,KAK1BwX,sBAAsBpC,GAChBA,IACFA,EAAKzmB,iBAAiB,SAAU/E,KAAK6tB,mBACrC7tB,KAAK6uB,iBAAmBrD,EACxBxrB,KAAK6uB,iBAAiBC,UAAY9uB,KAAK6uB,iBAAiBE,aAAe/uB,KAAK0O,MAAMsgB,gBAKtFnB,kBAAkBpU,GAChBzZ,KAAK+O,SAAS,CAACigB,eAAgBvV,EAAMrU,OAAO2pB,aAAetV,EAAMrU,OAAO0pB,YACpErV,EAAMrU,OAAO0pB,WAAa,GAC5B9uB,KAAK+O,UAAS,CAAC4G,EAAW1V,KACxB,MAAMmhB,EAAW,GACjB,IAAKzL,EAAUua,iBAAkB,CAC/B,MAAMhsB,EAAQlE,KAAKC,MAAMkE,OAAOC,SAASpE,KAAK0O,MAAMxK,OAChDA,GAASA,EAAMqrB,gBAAkBrrB,EAAM8tB,uBACzC5Q,EAAS8O,kBAAmB,EAC5BhsB,EAAM+tB,gBrClUW,IqCkUoB3tB,OAAOC,IAC1CvE,KAAK+O,SAAS,CAACmhB,kBAAkB,IACjClwB,KAAKC,MAAM6F,QAAQvB,EAAIC,QAAS,WAItC,OAAO4c,KAKb0M,iBAAiBzL,GACXA,EAAKvP,OACP9S,KAAK+O,SAAS,CACZ3O,MAAOiiB,EAAKvP,OAAOC,GACnBlJ,OAAQiB,EAAauX,EAAKvP,OAAO/H,SAGnC/K,KAAK+O,SAAS,CACZ3O,MAAO,GACPyJ,OAAQ,OAIRwY,EAAKnR,KACPlR,KAAK+O,SAAS,CACZ0iB,SAAUpP,EAAKnR,IAAIugB,WACnB1B,SAAU1N,EAAKnR,IAAI6e,WACnB2B,gBAAiBrP,EAAKnR,IAAI6e,SAAS,SACnC6B,YAAa5E,GAAc3K,EAAKnR,OAKtCud,qBAAqBvoB,GAEnB,IAAKlG,KAAKC,MAAMqvB,mBACd,OAIGtvB,KAAK4uB,wBACR5uB,KAAK4uB,sBAAwBsD,aAAY,KACvC,GAAyC,GAArClyB,KAAK2uB,sBAAsBznB,OAI7B,OAFAirB,cAAcnyB,KAAK4uB,4BACnB5uB,KAAK4uB,sBAAwB,MAI/B,IAAI1oB,GAAO,EACX,KAAOlG,KAAK2uB,sBAAsBznB,OAAS,GAAG,CAC5C,MAAMkrB,EAAIpyB,KAAK2uB,sBAAsB,GACrC,GAAIyD,EAAEnuB,WAAajE,KAAK0O,MAAMxK,MAAO,CAEnClE,KAAK2uB,sBAAsB0D,QAC3B,SAGF,MAAMjqB,EAAM,IAAIC,KAChB,KAAI+pB,EAAEE,QAAUlqB,GAKd,MAHApI,KAAK2uB,sBAAsB0D,QAC3BnsB,EAAMmD,KAAKsiB,IAAIzlB,EAAKksB,EAAElsB,KAO1B,GAAIA,GAAO,EAAG,CACZ,MAAMhC,EAAQlE,KAAKC,MAAMkE,OAAOC,SAASpE,KAAK0O,MAAMxK,OAChDA,GACFA,EAAMquB,SAASrsB,MAzaQ,MA+a/B,MAAMkC,EAAM,IAAIC,KAChBrI,KAAK2uB,sBAAsB5nB,KAAK,CAC9B9C,UAAWjE,KAAK0O,MAAMxK,MACtBgC,IAAKA,EACLosB,OAAQlqB,EAAIoqB,gBAAgBpqB,EAAIqqB,kBrCtbZ,OqC2bxB/D,yBACE1uB,KAAK2uB,sBAAwB,GACzB3uB,KAAK4uB,wBACPuD,cAAcnyB,KAAK4uB,uBACnB5uB,KAAK4uB,sBAAwB,MAIjCb,oBACE,GAAI/tB,KAAK0O,MAAMxK,MAAO,CACpB,MAAMoe,EAAO,GACPpe,EAAQlE,KAAKC,MAAMkE,OAAOC,SAASpE,KAAK0O,MAAMxK,OACpDA,EAAMud,aAAaC,IACbA,EAAI3Q,QAAU2Q,EAAI/c,MAAQ3E,KAAKC,MAAM+S,UACvCsP,EAAKvb,KAAK2a,MAGd,MAAMN,EAAW,CAACiQ,WAAY/O,GACxBgP,EAAOptB,EAAMqtB,cACfD,EACFvyB,OAAOqyB,OAAOhQ,EAAU,CACtBoQ,sBAAuBrE,GAAiBmE,EAAKpgB,OAEtClR,KAAK0O,MAAM8iB,uBACpBzyB,OAAOqyB,OAAOhQ,EAAU,CACtBoQ,uBAAuB,IAG3BxxB,KAAK+O,SAASqS,IAIlB4M,iBAAiB1nB,GAEf,MAAMpC,EAAQlE,KAAKC,MAAMkE,OAAOC,SAASpE,KAAK0O,MAAMxK,OAC9Ckd,EAAW,CAAC1f,SAAU,IAQ5B,GAPAwC,EAAMxC,UAAU8V,IACTA,EAAEuP,SACL3F,EAAS1f,SAASqF,KAAKyQ,MAKvBlR,IAAQA,EAAIygB,QAAS,CAGnB7iB,EAAMwuB,aAAapsB,EAAIJ,OACzBkb,EAAS4N,eAAiB,GAKb9qB,EAAMyuB,UAAUrsB,IACjBzG,yBAA8ByG,EAAIssB,MAAQ5yB,KAAKC,MAAM+S,UACjEhT,KAAKyuB,qBAAqBnoB,EAAIJ,KAEhClG,KAAKC,MAAMivB,OAAO5oB,GAEpBtG,KAAK+O,SAASqS,GAGhB6M,0BAA0BrnB,GACxB5G,KAAK+O,SAAS,CAACmhB,kBAAkB,IAC7BtpB,EAAQ,GAEV5G,KAAKyuB,qBAAqB,GAI9BP,kBAAkBtsB,GAChB,OAAQA,EAAKixB,MACX,IAAK,KACHC,aAAa9yB,KAAK+yB,eAClB,IAAI5a,EAAWnY,KACfA,KAAK+yB,cAAgBja,YAAW,WAC9BX,EAASpJ,SAAS,CAACmiB,iBAAiB,MACnChwB,KACElB,KAAK0O,MAAMwiB,iBACdlxB,KAAK+O,SAAS,CAACmiB,iBAAiB,IAElC,MAEF,IAAK,OACL,IAAK,OAEHlxB,KAAKgzB,cACL,MACF,QACEvuB,QAAQC,IAAI,0BAA2B9C,EAAKixB,OAIlD1E,oBAAoB9tB,GAClBL,KAAK+O,SAAS,CAAEkiB,cAAe5wB,IAGjC+tB,qBACMpuB,KAAK0O,MAAMsiB,cAAgBhxB,KAAK0O,MAAMsiB,aAAa7U,KACrD1P,IAAIC,gBAAgB1M,KAAK0O,MAAMsiB,aAAa7U,KAE9Cnc,KAAK+O,SAAS,CAAEkiB,cAAe,KAAMD,aAAc,KAAMD,WAAY,OAGvE1C,mBAAmBvc,EAAQmC,EAAMhJ,GAC/B,GAAc,OAAV6G,EACF9R,KAAKC,MAAMgzB,YAAY1L,GAAO2L,WAAW3L,GAAO4L,MAAMlf,GAAOhJ,SACxD,GAAc,OAAV6G,EAAiB,CAC1B,MAAMqK,EAAM,IAAI1P,IAAIxB,EAAKyb,KACnBnjB,EAAS4Y,EAAIiX,aACnB,IAAK,IAAIv0B,KAAOoM,EAAKub,KACfvb,EAAKub,KAAKlnB,eAAeT,IAC3B0E,EAAO8vB,IAAIx0B,EAAKoM,EAAKub,KAAK3nB,IAG9B,CAAC,OAAQ,OAAOiI,KAAI,SAASjI,GACvBoM,EAAKpM,IACP0E,EAAO8vB,IAAIx0B,EAAKoM,EAAKpM,OAGzB0E,EAAO8vB,IAAI,MAAOrzB,KAAKC,MAAM+S,UAC7BmJ,EAAImX,OAAS/vB,EACbyE,OAAO+R,KAAKoC,EAAK,eAEjB1X,QAAQC,IAAI,yBAA0BoN,GAI1CrB,mBAAmBvL,GACjBA,EAAEG,iBACFH,EAAEI,kBACFtF,KAAKC,MAAM2Q,gBAAgB,CAAE3M,UAAWjE,KAAK0O,MAAMxK,MAAOyD,EAAGzC,EAAE2L,MAAOrJ,EAAGtC,EAAE4L,QAG7Ewd,6BAA6B/qB,EAAQgwB,GACnChwB,EAAOU,UAAYjE,KAAK0O,MAAMxK,MAC9B,MAAM8f,EAAYuP,GAA4B,GACxCrvB,EAAQlE,KAAKC,MAAMkE,OAAOC,SAASb,EAAOU,WAChD,GAAIC,EAAO,CACJA,EAAMwN,aACTsS,EAAUjd,KAAK,kBAEjB,MAAMmK,EAAMhN,EAAM2d,gBACd3Q,GAAOA,EAAI8Q,aACbgC,EAAUjd,KAAK,uBAGnB/G,KAAKC,MAAM2Q,gBAAgBrN,EAAQygB,GAGrCuK,wBAAwBzc,GACtB9R,KAAKC,MAAMuzB,UAAUxzB,KAAK0O,MAAMxK,MAAO4N,GAGzC0c,iBAAiBtpB,GACfA,EAAEG,iBACFrF,KAAKC,MAAMwiB,oBAAoBziB,KAAK0O,MAAMxK,MAAO/C,EAAyBnB,KAAK0O,MAAMxK,OAGvFypB,eACE,MAAMzpB,EAAQlE,KAAKC,MAAMkE,OAAOC,SAASpE,KAAK0O,MAAMxK,OAChDA,EAAMqrB,gBACRrrB,EAAMuvB,eAOV/F,mBAAmBvf,GAEjB,MAAMulB,EAC0B,IADC1zB,KAAKC,MAAMkE,OAAOgZ,eAAe,iBAChE7b,GAAqC,KAAQ,EAE/C,GAAI6M,EAAK1C,KAAOioB,EAAyB,CAEvC,MAAMzN,EAAWjmB,KAAKC,MAAMkE,OAAO4gB,qBACnC,IAAKkB,EAEH,YADAjmB,KAAKC,MAAM6F,QAAQ9F,KAAKC,MAAM+C,KAAKD,cAAcrB,GAASiyB,yBAG5D,MAAMC,EAA0B3N,EAAS4N,OAAO1lB,GAC1C7H,EAAMihB,GAAO6C,WAAW,KAAM,CAClCld,KAAMiB,EAAKnD,KACX6Z,SAAU1W,EAAKH,KACfvC,KAAM0C,EAAK1C,KACXqoB,WAAYF,IAGd5zB,KAAKC,MAAMgzB,YAAY3sB,EAAKstB,EAAyB3N,QAGrD/X,EAAaC,GACX,CAACjB,EAAMqc,EAAM9b,KACXzN,KAAKC,MAAMgzB,YAAY1L,GAAO6C,WAAW,KAAM,CAACld,KAAMA,EAAMjC,KAAMse,EAAM1E,SAAUpX,OAEpFzN,KAAKC,MAAM6F,SAMjB0iB,iBAAiBra,GACf,MAAM4lB,EAA0B/zB,KAAKC,MAAMkE,OAAOgZ,eAAe,oBAAqB5b,GAElF4M,EAAK1C,KAAOsoB,EAEd/zB,KAAKC,MAAM6F,QAAQ9F,KAAKC,MAAM+C,KAAKD,cAAc,CAACrC,GAAI,6BAClD,CAAC+K,KAAMxC,EAAiBkF,EAAK1C,MAAOuoB,MAAO/qB,EAAiB8qB,KAA4B,OAE5F/zB,KAAK+O,SAAS,CAAEgiB,WAAY,CAC1B5iB,KAAMA,EACN0W,SAAU1W,EAAKH,KACfvC,KAAM0C,EAAK1C,KACXT,KAAMmD,EAAKnD,QAMjByiB,oBAAoBjD,EAASpd,GAC3B,MAAMF,EAAOlN,KAAK0O,MAAMsiB,aAAahmB,KAC/BG,EAAQnL,KAAK0O,MAAMsiB,aAAa7lB,MAChCC,EAASpL,KAAK0O,MAAMsiB,aAAa5lB,OACjCqC,EAAQzN,KAAK0O,MAAMsiB,aAAanM,SAGhC6O,EAC0B,IADC1zB,KAAKC,MAAMkE,OAAOgZ,eAAe,iBAChE7b,GAAqC,KAAQ,EAE/C,GAAI8L,EAAK3B,KAAOioB,EAAhB,CAEE,MAAMzN,EAAWjmB,KAAKC,MAAMkE,OAAO4gB,qBACnC,IAAKkB,EAEH,YADAjmB,KAAKC,MAAM6F,QAAQ9F,KAAKC,MAAM+C,KAAKD,cAAcrB,GAASiyB,yBAG5D,MAAMC,EAA0B3N,EAAS4N,OAAOzmB,GAGhDpB,EAAYoB,ErCtnBe,OqCsnB8B,GAAG,GACzD6mB,IAECzlB,EAAaylB,GAAU,CAACC,EAAUC,KAChC,IAAI7tB,EAAMihB,GAAO6M,YAAY,KAAM,EAAG,CACpClnB,KAAMA,EACNmnB,aAAcF,EACdhpB,MAAOA,EACPC,OAAQA,EACRyZ,SAAUpX,EACVhC,KAAM2B,EAAK3B,KACXqoB,WAAYF,IAEVpJ,IACFlkB,EAAMihB,GAAO+M,gBAAgBhuB,GAC7BA,EAAMihB,GAAOgN,OAAOjuB,EAAKihB,GAAOiN,KAAKhK,KAGvCxqB,KAAKC,MAAMgzB,YAAY3sB,EAAKstB,EAAyB3N,SAIxD1hB,IACCvE,KAAKC,MAAM6F,QAAQvB,EAAK,eAO9BiK,EAAapB,GAAM,CAAC8mB,EAAUO,KAC5B,IAAInuB,EAAMihB,GAAO6M,YAAY,KAAM,EAAG,CACpClnB,KAAMgnB,EACNQ,QAASD,EACTtpB,MAAOA,EACPC,OAAQA,EACRyZ,SAAUpX,EACVhC,KAAM2B,EAAK3B,OAET+e,IACFlkB,EAAMihB,GAAO+M,gBAAgBhuB,GAC7BA,EAAMihB,GAAOgN,OAAOjuB,EAAKihB,GAAOiN,KAAKhK,KAEvCxqB,KAAKC,MAAMgzB,YAAY3sB,MAK3BiiB,kBAAkBpa,GAChB,MAAM4lB,EAA0B/zB,KAAKC,MAAMkE,OAAOgZ,eAAe,oBAAqB5b,GAGtFyK,EAAYmC,EAAM3M,EAAeA,EAAeuyB,GAAyB,GAEvE,CAAC3mB,EAAMF,EAAM/B,EAAOC,EAAQqC,KAC1BzN,KAAK+O,SAAS,CAACiiB,aAAc,CAC3B7U,IAAK1P,IAAIwB,gBAAgBb,GACzBA,KAAMA,EACNyX,SAAUpX,EACVtC,MAAOA,EACPC,OAAQA,EACRK,KAAM2B,EAAK3B,KACXT,KAAMkC,QAIT3I,IACCvE,KAAKC,MAAM6F,QAAQvB,EAAK,UAK9B+hB,mBAAmBpgB,EAAK+f,GACtB,MAAM0O,EAAQ30B,KAAK0O,MAAMhN,SAASkzB,MAAKtuB,GAAOA,EAAIJ,KAAOA,IACrDyuB,IACFA,EAAME,YAAa,GAErB5O,EAASb,SAGXrlB,SACE,MAAM,cAACgD,GAAiB/C,KAAKC,MAAM+C,KAEnC,IAAI8xB,EACJ,GAAI90B,KAAKC,MAAM80B,SACbD,EAAY,UACP,GAAK90B,KAAK0O,MAAMxK,MAMhB,CACL,IAAI8wB,EACJ,GAAIh1B,KAAK0O,MAAMsiB,aAEbgE,EACE,kBAAC3J,GAAD,CACEhrB,QAASL,KAAK0O,MAAMsiB,aACpBvG,QAASzqB,KAAKouB,mBACdxE,cAAe5pB,KAAKytB,2BAEnB,GAAIztB,KAAK0O,MAAMuiB,cAEpB+D,EACE,kBAAC3J,GAAD,CACEhrB,QAASL,KAAK0O,MAAMuiB,cACpBxG,QAASzqB,KAAKouB,0BAEb,GAAIpuB,KAAK0O,MAAMqiB,WAEpBiE,EACE,kBAAC1K,GAAD,CACEjqB,QAASL,KAAK0O,MAAMqiB,WACpBtG,QAASzqB,KAAKouB,mBACdxE,cAAe5pB,KAAK0tB,yBAEnB,CACL,MAAMxpB,EAAQlE,KAAKC,MAAMkE,OAAOC,SAASpE,KAAK0O,MAAMxK,OAC9CwN,EAAYxN,EAAMwN,YAClBgN,EAAgC,OAAnBxa,EAAMid,YAAuBzP,EAChD,IAAIujB,EAAe,GACfC,EAAe,KACfC,EAAe,KACnB,IAAK,IAAIhrB,EAAE,EAAGA,EAAEnK,KAAK0O,MAAMhN,SAASwF,OAAQiD,IAAK,CAC/C,IAAI7D,EAAMtG,KAAK0O,MAAMhN,SAASyI,GAC1BirB,EAAW,KAEXjrB,EAAI,EAAInK,KAAK0O,MAAMhN,SAASwF,SAC9BkuB,EAAWp1B,KAAK0O,MAAMhN,SAASyI,EAAE,GAAGyoB,MAAQ,QAG9C,IAAI5L,EAAW,SACXqO,EAAW/uB,EAAIssB,MAAQ,OACvByC,GAAYH,EAEZlO,EADEqO,GAAYD,EACH,SAEA,OAEJC,GAAYD,IACrBpO,EAAW,SAEbkO,EAAeG,EAEf,MAAMC,IAAYD,GAAYr1B,KAAKC,MAAM+S,UACnCuiB,EAAiBrxB,EAAMyuB,UAAUrsB,GAEvC,IAAIohB,EAAU1M,EAAYoM,EAC1B,GAAI1I,EAAY,CACd,MAAM/Z,EAAOT,EAAMsxB,SAASH,GACxB1wB,GAAQA,EAAKmO,SACf4U,EAAW/iB,EAAKmO,OAAOC,GACvBiI,EAAalQ,EAAanG,EAAKmO,OAAO/H,QAExCqc,EAAWiO,EACXF,EAAa,sBAEbA,EAAa,WAGfF,EAAaluB,KACX,kBAACif,GAAD,CACE7hB,OAAQnE,KAAKC,MAAMkE,OACnB9D,QAASiG,EAAIjG,QACb0mB,QAASzgB,EAAImvB,GACbnO,SAAUhhB,EAAIgV,KAAOhV,EAAIgV,KAAKpO,KAAO,KACrCwY,UAAWpf,EAAIovB,GACfzO,SAAUqO,EACVpvB,IAAKI,EAAIJ,IACTkhB,SAAUA,EACVM,SAAUA,EACV1M,WAAYA,EACZgM,SAAUA,EACVrB,SAAU4P,EACVtP,SAAU3f,EAAIqvB,UACd7N,cAAe9nB,KAAKC,MAAM6nB,cAC1BlX,iBAAiB5Q,KAAK0O,MAAMiQ,SAAiB3e,KAAKsuB,6BAClD/H,eAAgBvmB,KAAKmuB,oBACrBxH,eAAgB3mB,KAAKquB,mBACrBvoB,QAAS9F,KAAKC,MAAM6F,QACpBqf,eAAgBnlB,KAAKsmB,mBACrBznB,IAAKyH,EAAIJ,OAIf,IAAI0vB,EAAW,KACf,GAAIlkB,EACFkkB,EAAW7yB,EAAcrB,GAASid,aAC7B,CACL,MAAMkX,EAAO71B,KAAKC,MAAMkE,OAAO2xB,aAAaC,WAAW/1B,KAAK0O,MAAMxK,OAC9D2xB,GAAQh2B,mBAAsBg2B,EAAK3xB,SACjC2xB,EAAK9kB,OACP6kB,EAAW7yB,EAAcrB,GAASs0B,YACzBH,EAAKI,OACdL,EAAW7yB,EAAcrB,GAASw0B,WAAa,KAC7CpuB,EAAgB+tB,EAAKI,KAAKE,KAAMn2B,KAAKC,MAAM+C,KAAK+E,UAKxD,MAAM8B,EAAS7J,KAAK0O,MAAM7E,SAAU,EAC9BkH,EAAS/Q,KAAKC,MAAM8Q,OAAS,UAAY/Q,KAAK0O,MAAMwiB,gBAAkB,UAAY,IAAM,UAE9F8D,EACE,oCACE,yBAAKt0B,GAAG,sBAAsBP,UAAU,iBACrCH,KAAKC,MAAMgkB,cACV,uBAAGxU,KAAK,IAAI/O,GAAG,oBAAoBH,QAAU2E,IAAOA,EAAEG,iBAAkBrF,KAAKC,MAAMm2B,uBACjF,uBAAGj2B,UAAU,kBAAb,eAGF,KACF,yBAAKA,UAAU,cACb,kBAACyJ,EAAD,CACEC,OAAQA,EACR3F,MAAOlE,KAAK0O,MAAMxK,MAClB9D,MAAOJ,KAAK0O,MAAMtO,QAClBsR,EAA0C,KAA9B,0BAAMvR,UAAW4Q,KAEjC,yBAAKrQ,GAAG,qBACN,yBAAKA,GAAG,cAAcP,UAAU,eAC9BH,KAAK0O,MAAMtO,OACX,2BAAG,kBAAC,EAAAK,iBAAD,CAAkBC,GAAG,gBAAgBmB,eAAe,UACrDC,YAAY,6CAEhB,yBAAKpB,GAAG,mBAAmBk1B,IAE5BlX,EACC,kBAACqM,GAAD,CACEtJ,YAAazhB,KAAK0O,MAAM2iB,aAC1B,yBAAK3wB,GAAG,gBAEV,6BACE,uBAAG+O,KAAK,IAAIlP,QAASP,KAAKyQ,oBACxB,uBAAGtQ,UAAU,kBAAb,gBAILH,KAAKC,MAAMgkB,cACV,kBAACrQ,EAAD,CACEE,MAAO9T,KAAKC,MAAMikB,WAClBjQ,KAAMjU,KAAKC,MAAMkkB,UACjBpQ,aAAc/T,KAAKC,MAAM6F,UACzB,KACJ,kBAACimB,GAAD,CAAalY,KAAM7T,KAAK0O,MAAMwhB,mBAC9B,yBAAKxvB,GAAG,sBACN,yBAAKA,GAAG,iBAAiBgmB,IAAK1mB,KAAK4tB,uBACjC,wBAAIltB,GAAG,WAAWP,UAAWg1B,GAC1BF,IAGHj1B,KAAK0O,MAAMqhB,SASX,KARF,yBAAKrvB,GAAG,yBACLV,KAAK0O,MAAMgjB,eACZ,yBAAKhxB,GAAG,mBACN,kBAAC,EAAAD,iBAAD,CAAkBC,GAAG,wBAAwBmB,eAAe,wBAC1DC,YAAY,oDAEd,OAIL9B,KAAK0O,MAAM8iB,wBAA0BxxB,KAAK0O,MAAMkjB,YAC/C,yBAAKlxB,GAAG,gCACN,uBAAGP,UAAU,4BAAb,SADF,IACoD,kBAAC,EAAAM,iBAAD,CAChDC,GAAG,2BAA2BmB,eAAe,gCAC7CC,YAAY,oDAHhB,IAGqE,uBAAG2N,KAAK,IACvElP,QAASP,KAAKwuB,kBAAkB,kBAAC,EAAA/tB,iBAAD,CAAkBC,GAAG,yBACrDmB,eAAe,SAASC,YAAY,+CAL1C,KAMS,KACV9B,KAAK0O,MAAMkjB,YACV,kBAAChG,GAAD,CAAY/lB,SAAU7F,KAAKuuB,0BAE3B,kBAAC,GAAD,CACE1F,UAAW7oB,KAAK0O,MAAM+iB,SACtB7H,cAAe5pB,KAAKC,MAAMgzB,YAC1BnJ,WAAY9pB,KAAK2tB,aACjBlE,aAAczpB,KAAKwoB,iBACnBgB,cAAexpB,KAAKuoB,kBACpBziB,QAAS9F,KAAKC,MAAM6F,WAK9BgvB,EAAY,yBAAKp0B,GAAG,cAAcs0B,QAtMlCF,EACE,kBAAC9I,GAAD,CACEE,cAAelsB,KAAKC,MAAMisB,cAC1BC,cAAensB,KAAKC,MAAMksB,gBAqMhC,OAAO2I,GAIX,QAAejtB,gBAAWylB,ICh+BX,MAAM+I,WAAmB72B,kBACtCO,SACE,OACE,uBAAG0P,KAAK,IAAIlP,QAAU2E,IAAOA,EAAEG,iBAAkBrF,KAAKC,MAAMq2B,WAC1D,uBAAGn2B,UAAU,kBAAb,gBCLO,MAAMo2B,WAAqB/2B,kBACxCO,SACE,OACE,6BACE,uBAAG0P,KAAK,IAAIlP,QAAU2E,IAAOA,EAAEG,iBAAkBrF,KAAKC,MAAMu2B,eAAgB,uBAAGr2B,UAAU,kBAAb,SAD9E,IAGE,uBAAGsP,KAAK,IAAIlP,QAAU2E,IAAOA,EAAEG,iBAAkBrF,KAAKC,MAAMw2B,eAAgB,uBAAGt2B,UAAU,kBAAb,eCNrE,MAAMu2B,WAAkBl3B,kBACrCO,SACE,OACI,6BACE,uBAAG0P,KAAK,IAAIlP,QAAU2E,IAAOA,EAAEG,iBAAkBrF,KAAKC,MAAM02B,aAAc,uBAAGx2B,UAAU,kBAAb,eAD5E,IAGE,uBAAGsP,KAAK,IAAIlP,QAAU2E,IAAOA,EAAEG,iBAAkBrF,KAAKC,MAAMw2B,eAAgB,uBAAGt2B,UAAU,kBAAb,eCDvE,MAAMy2B,WAAmBp3B,kBACtCO,SACE,OACI,yBAAKW,GAAG,qBAAqBP,UAAU,iBACpCH,KAAKC,MAAM0T,SAAW,kBAAC0iB,GAAD,CAAYC,OAAQt2B,KAAKC,MAAM0T,WAAe,KACpE3T,KAAKC,MAAM4J,OACV,yBAAKnJ,GAAG,cAAcP,UAAU,cAC9B,kBAACyJ,EAAD,CACEC,OAAQ7J,KAAKC,MAAM4J,OACnB3F,MAAOlE,KAAKC,MAAM+S,SAClB5S,MAAOJ,KAAKC,MAAMG,SAGtB,KACF,yBAAKM,GAAG,kBAAkBP,UAAU,eAAeH,KAAKC,MAAMG,OACxC,UAArBJ,KAAKC,MAAMyO,MACR,kBAACgoB,GAAD,CAAWC,SAAU32B,KAAKC,MAAM02B,SAAUF,WAAYz2B,KAAKC,MAAMw2B,aAC9C,aAArBz2B,KAAKC,MAAMyO,MACT,kBAAC6nB,GAAD,CAAcC,WAAYx2B,KAAKC,MAAMu2B,WAAYC,WAAYz2B,KAAKC,MAAMw2B,aAC1E,OClBZ,MAAM/0B,IAAWC,oBAAe,CAC9Bk1B,wBAAyB,CACvBn2B,GAAI,oBACJmB,eAAgB,8BAChBC,YAAa,8BAIF,MAAMg1B,WAAqBt3B,cACxCqD,YAAY5C,GACV6C,MAAM7C,GAEND,KAAK+2B,aAAe/2B,KAAK+2B,aAAa7zB,KAAKlD,MAE3CA,KAAK0O,MAAQooB,GAAapiB,qBAAqBzU,GAGjD,4BAA4BA,GAC1B,MAAMuS,EAAW,GACjB,IAAIwkB,EAAgB,EAChBC,EAAgB,EAmCpB,OAlCAh3B,EAAMi3B,SAASpwB,KAAK2L,IAClB,MAAM0kB,EAAU1kB,EAAEvB,MAAQuB,EAAEvB,IAAII,WAE5B6lB,GAAWl3B,EAAMk3B,SACnB3kB,EAASzL,KAAK0L,GAEZ0kB,GAAWl3B,EAAMk3B,UAIjB1kB,EAAEG,SAAWH,EAAEG,QAAQwkB,KACrBn3B,EAAM0C,QACR6P,EAASzL,KAAK0L,GAEdwkB,IAEQh3B,EAAM0C,UAChB6P,EAASzL,KAAK0L,GACdukB,GAAiBvkB,EAAEd,OAAS,EAAI,EAAI,OAIxCa,EAAS4H,MAAK,CAAC1b,EAAG0R,KACRA,EAAEinB,SAAW,IAAM34B,EAAE24B,SAAW,KAGtCJ,EAAgB,GAClBzkB,EAASzL,KAAK,CACZ+K,OAAQ,UACR1R,MAAOsB,GAASm1B,wBAChB9kB,OAAQ,CAACnL,MAAOqwB,KAIb,CACL5X,YAAa7M,EACbwkB,cAAeA,GAInBnoB,mBAAmBC,EAAW6G,GAC5B,GAAI7G,EAAUooB,UAAYl3B,KAAKC,MAAMi3B,UACjCpoB,EAAUnM,SAAW3C,KAAKC,MAAM0C,SAChCmM,EAAUqoB,SAAWn3B,KAAKC,MAAMk3B,QAAS,CAC3C,MAAM/V,EAAW0V,GAAapiB,qBAAqB1U,KAAKC,OACxDD,KAAK+O,SAASqS,GACVA,EAAS4V,eAAiBrhB,EAAUqhB,eACtC7b,GAAciG,EAAS4V,gBAK7BD,aAAaO,GACXt3B,KAAKC,MAAMs3B,gBAGbx3B,SACE,OACE,kBAAC,EAAAU,iBAAD,CAAkBC,GAAG,qBACnBmB,eAAe,mCACfC,YAAY,iEACX4U,GAAgB,kBAAC,EAAD,CACftD,UAAWpT,KAAKC,MAAMmT,UACtBZ,SAAUxS,KAAK0O,MAAM2Q,YACrB5L,iBAAkBiD,EAClBrE,cAAerS,KAAKC,MAAMoS,cAC1BW,SAAUhT,KAAKC,MAAM+S,SACrBvB,YAAY,EACZ0B,YAAY,EACZE,gBAAiBrT,KAAKC,MAAMoT,gBAC5BzC,gBAAiB5Q,KAAKC,MAAM2Q,gBAC5B/K,SAAU7F,KAAK+2B,kBCjGV,MAAMS,GAEnB,iBAAiB34B,EAAKoL,GACpBwtB,aAAaC,QAAQ74B,EAAK84B,KAAKC,UAAU3tB,IAI3C,iBAAiBpL,GACf,MAAMoL,EAAQwtB,aAAaI,QAAQh5B,GACnC,OAAOoL,GAAS0tB,KAAKxE,MAAMlpB,GAI7B,oBAAoBpL,EAAKoL,GACvB,MAAM6tB,EAAS93B,KAAK+3B,UAAUl5B,GAC9BmB,KAAKg4B,UAAUn5B,EAAKE,OAAOqyB,OAAO0G,GAAU,GAAI7tB,IAIlD,kBAAkBpL,GAChB44B,aAAaQ,WAAWp5B,ICVb,MAAMq5B,WAA0B14B,kBAC7CqD,YAAY5C,GACV6C,MAAM7C,GAEND,KAAK0O,MAAQ,CACXypB,MAAO,GACPC,SAAU,GACVC,MAAO,GACPtlB,GAAI,GACJ8I,aAAc,KACdyc,cAAc,EACdC,UAAWf,GAAiBO,UAAU,mBAGxC/3B,KAAKw4B,kBAAoBx4B,KAAKw4B,kBAAkBt1B,KAAKlD,MACrDA,KAAKy4B,qBAAuBz4B,KAAKy4B,qBAAqBv1B,KAAKlD,MAC3DA,KAAK04B,kBAAoB14B,KAAK04B,kBAAkBx1B,KAAKlD,MACrDA,KAAK24B,eAAiB34B,KAAK24B,eAAez1B,KAAKlD,MAC/CA,KAAKmgB,mBAAqBngB,KAAKmgB,mBAAmBjd,KAAKlD,MACvDA,KAAK44B,sBAAwB54B,KAAK44B,sBAAsB11B,KAAKlD,MAC7DA,KAAKuX,aAAevX,KAAKuX,aAAarU,KAAKlD,MAG7Cw4B,kBAAkBtzB,GAChBlF,KAAK+O,SAAS,CAACopB,MAAOjzB,EAAEE,OAAO6E,QAGjCwuB,qBAAqBL,GACnBp4B,KAAK+O,SAAS,CAACqpB,SAAUA,IAG3BM,kBAAkBxzB,GAChBlF,KAAK+O,SAAS,CAACspB,MAAOnzB,EAAEE,OAAO6E,QAGjC0uB,eAAezzB,GACblF,KAAK+O,SAAS,CAACgE,GAAI7N,EAAEE,OAAO6E,QAG9BkW,mBAAmB/T,GACjBpM,KAAK+O,SAAS,CAAC8M,aAAczP,IAG/BwsB,wBACEpB,aAA2B,kBAAmBx3B,KAAK0O,MAAM6pB,WACzDv4B,KAAK+O,SAAS,CAACwpB,WAAYv4B,KAAK0O,MAAM6pB,YAGxChhB,aAAarS,GACXA,EAAEG,iBACFrF,KAAK+O,SAAS,CAACupB,cAAc,IAC7Bt4B,KAAKC,MAAM44B,gBACT74B,KAAK0O,MAAMypB,MAAM7tB,OACjBtK,KAAK0O,MAAM0pB,SAAS9tB,OACpBsR,GAAM5b,KAAK0O,MAAMqE,GAAGzI,OAAOwD,UAAU,EAAGrM,GAAmBzB,KAAK0O,MAAMmN,cACtE,CAAC,KAAQ,QAAS,IAAO7b,KAAK0O,MAAM2pB,QAGxCt4B,SACE,IAAI+4B,EAAgB,OAKpB,OAJI94B,KAAKC,MAAM4oB,WACbiQ,GAAiB,aAIjB,0BAAM34B,UAAU,oBAAoBoY,SAAUvY,KAAKuX,cACjD,yBAAKpX,UAAU,kBACb,yBAAKA,UAAU,qBACb,kBAAC,EAAAM,iBAAD,CAAkBC,GAAG,iBAClBq4B,GAAiB,2BAAO/tB,KAAK,OAAOmK,YAAa4jB,EAAc9f,aAAa,YAC3EhP,MAAOjK,KAAK0O,MAAMypB,MAAOvoB,SAAU5P,KAAKw4B,kBAAmBhkB,UAAQ,EAACiC,WAAS,MAEjF,kBAAC,EAAAhW,iBAAD,CAAkBC,GAAG,oBAClBs4B,GAAoB,kBAACvgB,EAAD,CAAiBtD,YAAa6jB,EAAiB/f,aAAa,eAC/EhP,MAAOjK,KAAK0O,MAAM0pB,SAAUvf,WAAY7Y,KAAKy4B,qBAC7CjkB,UAAU,OAGhB,kBAAC/F,EAAD,CACEW,eAAgBpP,KAAKmgB,mBACrBra,QAAS9F,KAAKC,MAAM6F,WAExB,yBAAM3F,UAAU,kBACd,kBAAC,EAAAM,iBAAD,CAAkBC,GAAG,mBAAmBmB,eAAe,2BACrDC,YAAY,6CACXm3B,GAAqB,2BAAOjuB,KAAK,OAAOmK,YAAa8jB,EAAkBhgB,aAAa,OACnFhP,MAAOjK,KAAK0O,MAAMqE,GAAInD,SAAU5P,KAAK24B,eAAgBnkB,UAAQ,OAGnE,yBAAKrU,UAAU,kBACb,kBAAC,EAAAM,iBAAD,CAAkBC,GAAG,eAAemB,eAAe,+BACjDC,YAAY,sCACXo3B,GAAiB,2BAAOluB,KAAK,QAAQmK,YAAa+jB,EAAcjgB,aAAa,QAC5EhP,MAAOjK,KAAK0O,MAAM2pB,MAAOzoB,SAAU5P,KAAK04B,kBAAmBlkB,UAAQ,OAGzE,yBAAKrU,UAAU,kBACb,kBAAC2P,EAAD,CAAUpP,GAAG,aAAasN,KAAK,aAAagC,QAAShQ,KAAK0O,MAAM6pB,UAC9D3oB,SAAU5P,KAAK44B,wBACjB,kBAAC,EAAAn4B,iBAAD,CAAkBC,GAAG,mBAClBy4B,GAAmB,2BAAOtpB,QAAQ,cAAf,IAAmCspB,MAG3D,yBAAKh5B,UAAU,kBACb,4BAAQA,UAAW24B,EAAe9tB,KAAK,UACrC,kBAAC,EAAAvK,iBAAD,CAAkBC,GAAG,iBAAiBmB,eAAe,UACnDC,YAAY,wCC/GX,MAAMs3B,WAAwB55B,cAC3CqD,YAAY5C,GACV6C,MAAM7C,GAEN,MAAMo5B,EAAKr5B,KAAKC,MAAMkE,OAAO2xB,aAC7B91B,KAAK0O,MAAQ,CACXkQ,SAAUya,EAAGvmB,OAASumB,EAAGvmB,OAAOC,QAAKqD,EACrCvM,OAAQiB,EAAauuB,EAAGvmB,OAASumB,EAAGvmB,OAAO/H,MAAQ,OAIvDhL,SACE,OACE,yBAAKI,UAAU,oBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,qBACb,2BAAOA,UAAU,SACf,kBAAC,EAAAM,iBAAD,CAAkBC,GAAG,kBAAkBmB,eAAe,YACpDC,YAAY,iCAEhB,yBAAK3B,UAAU,SAASH,KAAK0O,MAAMkQ,UACnC,6BACE,2BAAOze,UAAU,SAAQ,kBAAC,EAAAM,iBAAD,CAAkBC,GAAG,gBAAgBmB,eAAe,MAC3EC,YAAY,iCAFhB,IAGE,4BAAK9B,KAAKC,MAAM+S,YAGpB,kBAACvE,EAAD,CACE5E,OAAQ7J,KAAK0O,MAAM7E,OACnB2F,UAAWxP,KAAK0O,MAAMkM,MACtBlL,IAAK1P,KAAKC,MAAM+S,SAChB5S,MAAOJ,KAAK0O,MAAMkQ,YAEtB,yBAAKze,UAAU,kBACb,uBAAGsP,KAAK,IAAItP,UAAU,cAAcI,QAAU2E,IAAOA,EAAEG,iBAAkBrF,KAAKC,MAAMq5B,gBAAgB,aAClG,uBAAGn5B,UAAU,kBAAb,QADF,IAEE,kBAAC,EAAAM,iBAAD,CAAkBC,GAAG,cAAcmB,eAAe,OAAOC,YAAY,4BAGzE,yBAAK3B,UAAU,OACf,yBAAKA,UAAU,qBACb,uBAAGsP,KAAK,IAAItP,UAAU,cAAcI,QAAU2E,IAAOA,EAAEG,iBAAkBrF,KAAKC,MAAMq5B,gBAAgB,WAClG,uBAAGn5B,UAAU,kBAAb,iBADF,IACuD,kBAAC,EAAAM,iBAAD,CAAkBC,GAAG,uCAE5E,uBAAG+O,KAAK,IAAItP,UAAU,cAAcI,QAAU2E,IAAOA,EAAEG,iBAAkBrF,KAAKC,MAAMq5B,gBAAgB,cAClG,uBAAGn5B,UAAU,kBAAb,YADF,IACkD,kBAAC,EAAAM,iBAAD,CAAkBC,GAAG,kCAEvE,uBAAG+O,KAAK,IAAItP,UAAU,cAAcI,QAAU2E,IAAOA,EAAEG,iBAAkBrF,KAAKC,MAAMq5B,gBAAgB,aAClG,uBAAGn5B,UAAU,kBAAb,mBADF,IACyD,kBAAC,EAAAM,iBAAD,CAAkBC,GAAG,oCC1CzE,MAAM64B,WAAuB/5B,cAC1CqD,YAAY5C,GACV6C,MAAM7C,GAEN,MAAMo5B,EAAKr5B,KAAKC,MAAMkE,OAAO2xB,aAC7B91B,KAAK0O,MAAQ,CACXkQ,SAAUya,EAAGvmB,OAASumB,EAAGvmB,OAAOC,QAAKqD,EACrCvM,OAAQiB,EAAauuB,EAAGvmB,OAASumB,EAAGvmB,OAAO/H,MAAQ,MACnD0R,KAAM4c,EAAG5c,OACT+c,YAAaH,EAAGI,kBAAoB,GACpCC,eAAe,EACfC,gBAAgB,EAChBC,QAAS,GACTC,eAAgBR,EAAGrZ,eAGrBhgB,KAAK85B,UAAY95B,KAAK85B,UAAU52B,KAAKlD,MACrCA,KAAK+5B,eAAiB/5B,KAAK+5B,eAAe72B,KAAKlD,MAC/CA,KAAKigB,qBAAuBjgB,KAAKigB,qBAAqB/c,KAAKlD,MAC3DA,KAAKmgB,mBAAqBngB,KAAKmgB,mBAAmBjd,KAAKlD,MACvDA,KAAKg6B,iBAAmBh6B,KAAKg6B,iBAAiB92B,KAAKlD,MACnDA,KAAKi6B,kBAAoBj6B,KAAKi6B,kBAAkB/2B,KAAKlD,MACrDA,KAAKk6B,kBAAoBl6B,KAAKk6B,kBAAkBh3B,KAAKlD,MACrDA,KAAKihB,kBAAoBjhB,KAAKihB,kBAAkB/d,KAAKlD,MAGvD6E,oBACE,MAAMw0B,EAAKr5B,KAAKC,MAAMkE,OAAO2xB,aAC7BuD,EAAGc,eAAiBn6B,KAAK+5B,eACzBV,EAAGrZ,cAAgBhgB,KAAK85B,UAG1B90B,uBACE,MAAMq0B,EAAKr5B,KAAKC,MAAMkE,OAAO2xB,aAC7BuD,EAAGrZ,cAAgBhgB,KAAK0O,MAAMmrB,eAC9BR,EAAGc,oBAAiB/jB,EAGtB0jB,UAAUrd,GACRzc,KAAK+O,SAAS,CAAC0N,KAAMA,IAGvBsd,eAAeK,GACbp6B,KAAK+O,SAAS,CAACyqB,YAAaY,GAAS,KAGvCna,qBAAqBlN,IACnBA,EAAKA,EAAGzI,OAAOwD,UAAU,EAAGrM,MAE1BzB,KAAK+O,SAAS,CAAC6P,SAAU7L,IACzB/S,KAAKC,MAAMo6B,qBAAgBjkB,EAAWwF,GAAM7I,EAAI,QAIpDoN,mBAAmB/T,GACjBpM,KAAK+O,SAAS,CAAClF,OAAQuC,IACvBpM,KAAKC,MAAMo6B,qBAAgBjkB,EAAWwF,GAAM,KAAMxP,GAAOvM,eAG3Dm6B,iBAAiB90B,GACflF,KAAK+O,SAAS,CAAC6qB,QAAS10B,EAAEE,OAAO6E,MAAO0vB,gBAAgB,IAG1DM,kBAAkB/0B,GACE,KAAdA,EAAEM,QAEJxF,KAAK+O,SAAS,CAAC6qB,QAAS,GAAIF,eAAe,IACpB,KAAdx0B,EAAEM,SAEXxF,KAAKk6B,kBAAkBh1B,GAI3Bg1B,kBAAkBh1B,GAChB,IAAI+E,EAAQjK,KAAK0O,MAAMkrB,QAAQtvB,OAC/B,IAAKL,EAEH,YADAjK,KAAK+O,SAAS,CAAC2qB,eAAe,EAAOC,gBAAgB,IAIvD,IACIW,EADAriB,EzB5BD,SAAiBA,GAEtB,OADAA,EAAMA,EAAI3N,OACN,6EAA6E+R,KAAKpE,GAC7EA,EAAIkC,QAAQ,WAAY,IAE1B,KyBuBKogB,CAAQtwB,GAEdgO,EACFqiB,EAAS,OAETriB,EzBxBC,SAAiBA,GAEtB,OADAA,EAAMA,EAAI3N,OACN,mDAAmD+R,KAAKpE,GACnDA,EAEF,KyBmBGuiB,CAAQvwB,GACVgO,IACFqiB,EAAS,UAGTA,GACFt6B,KAAKC,MAAMw6B,UAAUH,EAAQriB,GAC7BjY,KAAK+O,SAAS,CAAC2qB,eAAe,EAAOE,QAAS,MAE9C55B,KAAK+O,SAAS,CAAC4qB,gBAAgB,IAInC1Y,kBAAkBxE,GAEZT,GAAWhc,KAAK0O,MAAM+N,KAAKzL,MAAM,GAAIyL,EAAKzL,MAAM,KAGpDhR,KAAKC,MAAMy6B,aAAaje,GAG1B1c,SACE,MAAMy5B,EAAc,GAYpB,OAXAx5B,KAAK0O,MAAM8qB,YAAY1yB,KAAK6zB,IAC1BnB,EAAYzyB,KAAK,yBAAKlI,IAAK87B,EAAKC,KAAO,IAAMD,EAAK1iB,IAAM,IAAM0iB,EAAKE,MAAOF,EAAKC,KAA9D,KAAqE,4BAAKD,EAAK1iB,KAC9F,kCAAU0iB,EAAKE,KAKX,KAJF,uBAAGprB,KAAK,IAAIlP,QAAU2E,IAAOA,EAAEG,iBAAkBrF,KAAKC,MAAM66B,cAAcH,EAAKC,KAAMD,EAAK1iB,OACtF,kBAAC,EAAAxX,iBAAD,CAAkBC,GAAG,6BAA6BmB,eAAe,UAC/DC,YAAY,wCAHpB,IAKU,uBAAG2N,KAAK,IAAIlP,QAAU2E,IAAOA,EAAEG,iBAAkBrF,KAAKC,MAAM86B,aAAaJ,EAAKC,KAAMD,EAAK1iB,OAAQ,uBACvG9X,UAAU,uBAD6F,yBAK7G,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,qBACb,2BAAOA,UAAU,SAAQ,kBAAC,EAAAM,iBAAD,CAAkBC,GAAG,qBAC9C,6BAAK,kBAAC,EAAAD,iBAAD,CAAkBC,GAAG,qBACvBs6B,GAA0B,kBAAC9hB,GAAD,CACzB/D,YAAa6lB,EACb/wB,MAAOjK,KAAK0O,MAAMkQ,SAClB/F,WAAY7Y,KAAKigB,2BAGvB,kBAACxR,EAAD,CACE5E,OAAQ7J,KAAK0O,MAAM7E,OACnB6F,IAAK1P,KAAKC,MAAM+S,SAChB5S,MAAOJ,KAAK0O,MAAMkQ,SAClBxP,eAAgBpP,KAAKmgB,mBACrBra,QAAS9F,KAAKC,MAAM6F,WAExB,yBAAK3F,UAAU,OACf,kBAAC,EAAAM,iBAAD,CAAkBC,GAAG,oBAAoBmB,eAAe,wBACtDC,YAAY,iCACXm5B,GAAsB,kBAACze,GAAD,CACrBpc,MAAO66B,EACPte,WAAW,EACXF,KAAMzc,KAAK0O,MAAM+N,KACjBtY,OAAQnE,KAAKC,MAAMkE,OACnBoU,SAAUvY,KAAKihB,sBAEnB,yBAAK9gB,UAAU,OACf,yBAAKA,UAAU,qBACb,2BAAOA,UAAU,SACf,kBAAC,EAAAM,iBAAD,CAAkBC,GAAG,sBAAsBmB,eAAe,YAC1DC,YAAY,6BAEd,yBAAK3B,UAAU,UACZq5B,EACAx5B,KAAK0O,MAAMgrB,cACV,2BAAO1uB,KAAK,OAAOf,MAAOjK,KAAK0O,MAAMzE,MACnC9J,UAAWH,KAAK0O,MAAMirB,eAAiB,UAAY,KACnDxkB,YAAY,wBAAwBX,SAAS,WAAWiC,WAAS,EACjE7G,SAAU5P,KAAKg6B,iBAAkBxjB,UAAWxW,KAAKi6B,kBAAmB1jB,OAAQvW,KAAKk6B,oBACjF,KACJ,6BACE,uBAAGzqB,KAAK,IAAIlP,QAAU2E,IAAOA,EAAEG,iBAAkBrF,KAAK+O,SAAS,CAAC2qB,eAAe,MAC7E,uBAAGv5B,UAAU,kBAAb,OACA,kBAAC,EAAAM,iBAAD,CAAkBC,GAAG,qBAAqBmB,eAAe,cAAcC,YAAY,yCC7KpF,MAAMs3B,WAAwB55B,kBAC3CqD,YAAY5C,GACV6C,MAAM7C,GAEND,KAAKk7B,oBAAsBl7B,KAAKk7B,oBAAoBh4B,KAAKlD,MAG3Dk7B,oBAAoBrI,EAAM7iB,GACZ,SAAR6iB,EACF7yB,KAAKC,MAAMk7B,sBAAsBnrB,GAChB,SAAR6iB,EACT7yB,KAAKC,MAAMm7B,0BAA0BprB,GACpB,aAAR6iB,GACT7yB,KAAKC,MAAMo7B,sBAAsBrrB,GAIrCjQ,SACE,OACI,yBAAKI,UAAU,oBACb,yBAAKA,UAAU,kBACb,2BAAO0P,QAAQ,iBACb,kBAAC,EAAApP,iBAAD,CAAkBC,GAAG,sBAAsBmB,eAAe,iBACxDC,YAAY,qCAEhB,kBAACgO,EAAD,CAAU9B,KAAK,QAAQtN,GAAG,gBACxBsP,QAAShQ,KAAKC,MAAMq7B,cAAe1rB,SAAU5P,KAAKk7B,uBAEtD,yBAAK/6B,UAAU,kBACb,2BAAO0P,QAAQ,kBACd7P,KAAKC,MAAMs7B,qBACV,kBAAC,EAAA96B,iBAAD,CAAkBC,GAAG,2BAA2BmB,eAAe,uBAC7DC,YAAY,wCAEd,kBAAC,EAAArB,iBAAD,CAAkBC,GAAG,oCACnBmB,eAAe,wCACfC,YAAY,yCAGhB,kBAACgO,EAAD,CAAU9B,KAAK,QAAQtN,GAAG,iBACxBsP,QAAShQ,KAAKC,MAAMu7B,cACpB5rB,SAAU5P,KAAKC,MAAMs7B,qBAAuBv7B,KAAKk7B,oBAAsB,QAE3E,yBAAK/6B,UAAU,kBACb,2BAAO0P,QAAQ,kBACb,kBAAC,EAAApP,iBAAD,CAAkBC,GAAG,uBAAuBmB,eAAe,kBACzDC,YAAY,qCAEhB,kBAACgO,EAAD,CAAU9B,KAAK,YAAYtN,GAAG,iBAC5BsP,QAAShQ,KAAKC,MAAMw7B,cAAe7rB,SAAU5P,KAAKk7B,yBChDhE,MAAMx5B,IAAWC,oBAAe,CAC9B+5B,eAAgB,CACdh7B,GAAI,iBACJmB,eAAgB,iBAChBC,YAAa,oCAEf65B,uBAAwB,CACtBj7B,GAAI,wBACJmB,eAAgB,qEAChBC,YAAa,8CAIjB,MAAM85B,WAAwBp8B,cAC5BqD,YAAY5C,GACV6C,MAAM7C,GAEN,MAAMo5B,EAAKr5B,KAAKC,MAAMkE,OAAO2xB,aAC7B,IAAI+F,EAAe,EACnBxC,EAAG7mB,UAAUC,IACPA,EAAEvB,MAAQuB,EAAEvB,IAAII,YAClBuqB,OAGJ,MAAMla,EAAS0X,EAAGzX,mBAClB5hB,KAAK0O,MAAQ,CACXyQ,KAAMwC,EAASA,EAAOxC,KAAO,KAC7BC,KAAMuC,EAASA,EAAOvC,KAAO,KAC7BG,6BAAyBnJ,EACzBylB,aAAcA,GAGhB77B,KAAK87B,qBAAuB97B,KAAK87B,qBAAqB54B,KAAKlD,MAC3DA,KAAKsgB,8BAAgCtgB,KAAKsgB,8BAA8Bpd,KAAKlD,MAC7EA,KAAKugB,4BAA8BvgB,KAAKugB,4BAA4Brd,KAAKlD,MACzEA,KAAKqgB,yBAA2BrgB,KAAKqgB,yBAAyBnd,KAAKlD,MACnEA,KAAK+7B,oBAAsB/7B,KAAK+7B,oBAAoB74B,KAAKlD,MAG3D87B,qBAAqBE,GACnBh8B,KAAK+O,SAAS,CAACqpB,SAAU4D,IACzBh8B,KAAKC,MAAMo6B,gBAAgB2B,GAG7B1b,8BAA8BsC,GAC5B5iB,KAAK+O,SAAS,CACZwQ,wBAAyBqD,EACzBQ,kBAAmBpjB,KAAK0O,MAAMkU,KAIlCrC,8BACEvgB,KAAK+O,SAAS,CAACwQ,6BAAyBnJ,IAG1CiK,yBAAyBqC,GACvB,IAAIf,EAAS,GACbA,EAAO3hB,KAAK0O,MAAM6Q,yBAA2BmD,EAC7C1iB,KAAKC,MAAMo6B,qBAAgBjkB,OAAWA,EAAWuL,GAEjD,IAAIP,EAAW,CAAC7B,6BAAyBnJ,GACzCgL,EAASphB,KAAK0O,MAAM6Q,yBAA2BmD,EAC/C1iB,KAAK+O,SAASqS,GAGhB2a,oBAAoB72B,GAClBA,EAAEG,iBACF,MAAM,cAACtC,GAAiB/C,KAAKC,MAAM+C,KACnChD,KAAKC,MAAMwD,YACTV,EAAcrB,GAASg6B,gBACvB34B,EAAcrB,GAASi6B,yBACtB,KAAQ37B,KAAKC,MAAMg8B,oBACpB,MACA,EACA,MAIJl8B,SACE,OACE,kBAAC,aAAD,KAAiBC,KAAK0O,MAAM6Q,wBAC1B,kBAAC,GAAD,CACE9Y,KAAMzG,KAAK0O,MAAM0U,kBACjBvI,KAAK,IACLtC,SAAUvY,KAAKqgB,yBACf1M,SAAU3T,KAAKugB,8BAEjB,yBAAKpgB,UAAU,oBACb,yBAAKA,UAAU,qBACb,2BAAOA,UAAU,SACf,kBAAC,EAAAM,iBAAD,CAAkBC,GAAG,iBAAiBmB,eAAe,WACjDC,YAAY,gCAElB,6BACE,kBAAC,EAAArB,iBAAD,CAAkBC,GAAG,4BAA4BmB,eAAe,YAC9DC,YAAY,kDACXo6B,GAAuB,kBAAChjB,GAAD,CACtB/D,YAAa+mB,EACblxB,KAAK,WACL6N,WAAY7Y,KAAK87B,2BAIzB,yBAAK37B,UAAU,OACf,yBAAKA,UAAU,qBACb,uBAAGsP,KAAK,IAAItP,UAAU,kBAAkBI,QAAU2E,IAAOA,EAAEG,iBAAkBrF,KAAKC,MAAMk8B,aACtF,uBAAGh8B,UAAU,kBAAb,eADF,KACsD,kBAAC,EAAAM,iBAAD,CAAkBC,GAAG,gBACvEmB,eAAe,SAASC,YAAY,qBAExC,uBAAG2N,KAAK,IAAItP,UAAU,kBAAkBI,QAAU2E,IAAOlF,KAAK+7B,oBAAoB72B,KAChF,uBAAG/E,UAAU,kBAAb,UADF,KACiD,kBAAC,EAAAM,iBAAD,CAAkBC,GAAG,wBAClEmB,eAAe,iBAAiBC,YAAY,8BAGlD,yBAAK3B,UAAU,OACf,yBAAKA,UAAU,qBACb,6BACE,2BAAOA,UAAU,SACf,kBAAC,EAAAM,iBAAD,CAAkBC,GAAG,4BAA4BmB,eAAe,uBAChEC,YAAY,oCAGhB,yBAAK3B,UAAU,UACb,sCAAW,wBAAIA,UAAU,YACvBI,QAASP,KAAKsgB,8BAA8Bpd,KAAKlD,KAAM,SAAUA,KAAK0O,MAAMyQ,OAC9E,sCAAW,wBAAIhf,UAAU,YACvBI,QAASP,KAAKsgB,8BAA8Bpd,KAAKlD,KAAM,SAAUA,KAAK0O,MAAM0Q,SAGjFpf,KAAK0O,MAAMmtB,aAAe,EACzB,oCACE,yBAAK17B,UAAU,OACf,yBAAKA,UAAU,kBACb,uBAAGA,UAAU,kBAAb,SADF,IAEE,uBAAGsP,KAAK,IAAItP,UAAU,OAAOI,QAAU2E,IAAOA,EAAEG,iBAAkBrF,KAAKC,MAAMm8B,kBAC3E,kBAAC,EAAA37B,iBAAD,CAAkBC,GAAG,wBAAwBmB,eAAe,6BAC1DkQ,OAAQ,CAAEnL,MAAO5G,KAAK0O,MAAMmtB,cAAgB/5B,YAAY,6BAI9D,QAOd,QAAe+F,gBAAW+zB,IClJX,MAAMS,WAAuB78B,kBAC1CO,SACE,OACE,yBAAKI,UAAU,oBACb,yBAAKA,UAAU,qBACb,uBAAGsP,KjDuEkB,uBiDvEKtP,UAAU,cAAciF,OAAO,UACvD,uBAAGjF,UAAU,kBAAb,SADF,KACgD,kBAAC,EAAAM,iBAAD,CAAkBC,GAAG,kBACjEmB,eAAe,aAAaC,YAAY,2CAE5C,uBAAG2N,KjDyEwB,+BiDzEKtP,UAAU,cAAciF,OAAO,UAC7D,uBAAGjF,UAAU,kBAAb,eADF,KACsD,kBAAC,EAAAM,iBAAD,CAAkBC,GAAG,wBACvEmB,eAAe,mBAAmBC,YAAY,0CAElD,uBAAG2N,KjDkEsB,iCiDlEKtP,UAAU,cAAciF,OAAO,UAC3D,uBAAGjF,UAAU,kBAAb,UADF,KACiD,kBAAC,EAAAM,iBAAD,CAAkBC,GAAG,sBAClEmB,eAAe,iBAAiBC,YAAY,yCAGlD,yBAAK3B,UAAU,OACf,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,kBACb,2BAAOA,UAAU,SAAQ,kBAAC,EAAAM,iBAAD,CAAkBC,GAAG,kBAC7CG,GAEH,yBAAKV,UAAU,kBACb,2BAAOA,UAAU,SAAQ,kBAAC,EAAAM,iBAAD,CAAkBC,GAAG,YAAYmB,eAAe,UACxEhC,kBAEH,yBAAKM,UAAU,kBACb,2BAAOA,UAAU,SAAQ,kBAAC,EAAAM,iBAAD,CAAkBC,GAAG,kBAC7CV,KAAKC,MAAMisB,eAEd,yBAAK/rB,UAAU,kBACb,2BAAOA,UAAU,SAAQ,kBAAC,EAAAM,iBAAD,CAAkBC,GAAG,uBAAuBmB,eAAe,qBACnF7B,KAAKC,MAAMksB,kBCjCT,MAAMmQ,WAAkB98B,cACrCqD,YAAY5C,GACV6C,MAAM7C,GAEND,KAAK0O,MAAQ,CACXypB,MAAOl4B,EAAMk4B,MACbC,SAAU,GACVmE,SAAUt8B,EAAMksB,cAChBoM,UAAWf,GAAiBO,UAAU,mBAExC/3B,KAAKw4B,kBAAoBx4B,KAAKw4B,kBAAkBt1B,KAAKlD,MACrDA,KAAKy4B,qBAAuBz4B,KAAKy4B,qBAAqBv1B,KAAKlD,MAC3DA,KAAK44B,sBAAwB54B,KAAK44B,sBAAsB11B,KAAKlD,MAC7DA,KAAKuX,aAAevX,KAAKuX,aAAarU,KAAKlD,MAG7Cw4B,kBAAkBtzB,GAChBlF,KAAK+O,SAAS,CAACopB,MAAOjzB,EAAEE,OAAO6E,QAGjCwuB,qBAAqBvzB,GACnBlF,KAAK+O,SAAS,CAACqpB,SAAUlzB,EAAEE,OAAO6E,QAGpC2uB,wBACEpB,aAA2B,kBAAmBx3B,KAAK0O,MAAM6pB,WACzDv4B,KAAK+O,SAAS,CAACwpB,WAAYv4B,KAAK0O,MAAM6pB,YAGxChhB,aAAarS,GACXA,EAAEG,iBACFrF,KAAKC,MAAMu8B,QAAQx8B,KAAK0O,MAAMypB,MAAM7tB,OAAQtK,KAAK0O,MAAM0pB,SAAS9tB,QAGlEvK,SACE,IAAI+4B,EAAgB,OAKpB,OAJI94B,KAAKC,MAAM4oB,WACbiQ,GAAiB,aAIjB,0BAAMp4B,GAAG,aAAa6X,SAAUvY,KAAKuX,cACnC,kBAAC,EAAA9W,iBAAD,CAAkBC,GAAG,eAAemB,eAAe,QACjDC,YAAY,mCAEXi3B,GAAiB,2BAAO/tB,KAAK,OAAOtK,GAAG,aACtCyU,YAAa4jB,EACb9f,aAAa,WACbwjB,YAAY,MACZC,eAAe,OACfzyB,MAAOjK,KAAK0O,MAAMypB,MAClBvoB,SAAU5P,KAAKw4B,kBACfhkB,UAAQ,EAACiC,WAAS,MAGtB,kBAAC,EAAAhW,iBAAD,CAAkBC,GAAG,kBAAkBmB,eAAe,WACpDC,YAAY,sCAEXk3B,GAAoB,kBAACvgB,EAAD,CAAiBzN,KAAK,WAAWtK,GAAG,gBACvDyU,YAAa6jB,EACb/f,aAAa,mBACbhP,MAAOjK,KAAK0O,MAAM0pB,SAClBxoB,SAAU5P,KAAKy4B,qBACfjkB,UAAU,MAGd,yBAAKrU,UAAU,kBACb,kBAAC2P,EAAD,CAAUpP,GAAG,aAAasN,KAAK,aAAagC,QAAShQ,KAAK0O,MAAM6pB,UAC9D3oB,SAAU5P,KAAK44B,wBACjB,2BAAO/oB,QAAQ,cAAf,IACE,kBAAC,EAAApP,iBAAD,CAAkBC,GAAG,iBAAiBmB,eAAe,iBACnDC,YAAY,0BAEhB,uBAAG2N,KAAK,UACN,kBAAC,EAAAhP,iBAAD,CAAkBC,GAAG,uBAAuBmB,eAAe,mBACzDC,YAAY,kCAGlB,yBAAK3B,UAAU,kBACb,4BAAQA,UAAW24B,EAAe9tB,KAAK,UACrC,kBAAC,EAAAvK,iBAAD,CAAkBC,GAAG,iBAAiBmB,eAAe,UACnDC,YAAY,yBCvF1B,MAAMJ,IAAWC,oBAAe,CAC9Bg7B,WAAY,CACVj8B,GAAI,mBACJmB,eAAgB,aAChBC,YAAa,mBAIjB,MAAM86B,WAAqBp9B,kBACzBqD,YAAY5C,GACV6C,MAAM7C,GAEND,KAAK0O,MAAQ,CACXmuB,QAAS,IAGX78B,KAAK+P,aAAe/P,KAAK+P,aAAa7M,KAAKlD,MAC3CA,KAAK0oB,eAAiB1oB,KAAK0oB,eAAexlB,KAAKlD,MAC/CA,KAAKuX,aAAevX,KAAKuX,aAAarU,KAAKlD,MAG7C+P,aAAa7K,GACXlF,KAAK+O,SAAS,CAAC8tB,QAAS33B,EAAEE,OAAO6E,QAGnCye,eAAexjB,GACC,UAAVA,EAAErG,KACJmB,KAAKuX,aAAarS,GAItBqS,aAAarS,GAEX,GADAA,EAAEG,iBACErF,KAAK0O,MAAMmuB,QAAS,CACtB,IAAI7uB,EAAOhO,KAAK0O,MAAMmuB,QAAQvyB,OAC1B0D,EAAK9G,OAAS,IAA2B,OAArB8G,EAAKuB,OAAO,EAAG,IAAoC,OAArBvB,EAAKuB,OAAO,EAAG,IACnEvP,KAAKC,MAAMsY,SAASvK,GAEpBhO,KAAKC,MAAM6F,QAAQ9F,KAAKC,MAAM+C,KAAKD,cAAcrB,GAASi7B,YAAa,QAK7E58B,SACE,OACE,yBAAKI,UAAU,cACb,yBAAKA,UAAU,kBACf,kBAAC,EAAAM,iBAAD,CAAkBC,GAAG,uBAAuBmB,eAAe,mBACzDC,YAAY,yCACXuT,GAAW,2BAAOrK,KAAK,OAAOmK,YAAaE,EAC1CpL,MAAOjK,KAAK0O,MAAMmuB,QAASjtB,SAAU5P,KAAK+P,aAC1C+Z,WAAY9pB,KAAK0oB,eAAgBlU,UAAQ,EAACiC,WAAS,OAGvD,yBAAKtW,UAAU,kBACb,4BAAQA,UAAU,OAAOI,QAASP,KAAKuX,cACrC,kBAAC,EAAA9W,iBAAD,CAAkBC,GAAG,mBAAmBmB,eAAe,YACrDC,YAAY,2BAQ1B,QAAe+F,gBAAW+0B,IC3DX,MAAME,WAAsBt9B,kBACzCqD,YAAY5C,GACV6C,MAAM7C,GAEND,KAAK0O,MAAQ,CACXqE,GAAI,GACJH,QAAS,GACTiJ,aAAc,KACdY,KAAM,GACN/K,WAAW,GAGb1R,KAAK24B,eAAiB34B,KAAK24B,eAAez1B,KAAKlD,MAC/CA,KAAK+8B,oBAAsB/8B,KAAK+8B,oBAAoB75B,KAAKlD,MACzDA,KAAKmgB,mBAAqBngB,KAAKmgB,mBAAmBjd,KAAKlD,MACvDA,KAAKg9B,kBAAoBh9B,KAAKg9B,kBAAkB95B,KAAKlD,MACrDA,KAAKi9B,oBAAsBj9B,KAAKi9B,oBAAoB/5B,KAAKlD,MACzDA,KAAKuX,aAAevX,KAAKuX,aAAarU,KAAKlD,MAG7C24B,eAAezzB,GACblF,KAAK+O,SAAS,CAACgE,GAAI7N,EAAEE,OAAO6E,QAG9B8yB,oBAAoB73B,GAClBlF,KAAK+O,SAAS,CAAC6D,QAAS1N,EAAEE,OAAO6E,QAGnCkW,mBAAmB/T,GACjBpM,KAAK+O,SAAS,CAAC8M,aAAczP,IAG/B4wB,kBAAkBvgB,GAChBzc,KAAK+O,SAAS,CAAC0N,KAAMA,IAGvBwgB,sBACEj9B,KAAK+O,SAAS,CAAC2C,WAAY1R,KAAK0O,MAAMgD,YAGxC6F,aAAarS,GACXA,EAAEG,iBAEF,MAAM0N,EAAK/S,KAAK0O,MAAMqE,GAAGzI,OAAOwD,UAAU,EAAGrM,GACvCmQ,EAAU5R,KAAK0O,MAAMkE,QAAQtI,OAAOwD,UAAU,EAAGrM,GACnDsR,GACF/S,KAAKC,MAAMsY,SAASxF,EAAI/S,KAAK0O,MAAMmN,aAAcjK,EAAS5R,KAAK0O,MAAM+N,KAAMzc,KAAK0O,MAAMgD,WAI1F3R,SACE,IAAI+4B,EAAgB,OAIpB,OAHI94B,KAAKC,MAAM4oB,WACbiQ,GAAiB,aAGjB,0BAAM34B,UAAU,aAAaoY,SAAUvY,KAAKuX,cAC1C,yBAAKpX,UAAU,kBACb,yBAAKA,UAAU,qBACb,2BAAOA,UAAU,QAAQ0P,QAAQ,gBAC/B,kBAAC,EAAApP,iBAAD,CAAkBC,GAAG,sBAEvB,kBAAC,EAAAD,iBAAD,CAAkBC,GAAG,iCAAiCmB,eAAe,6BACnEC,YAAY,mCACXqT,GAAgB,2BAAOnK,KAAK,OAAOtK,GAAG,eAAeyU,YAAaA,EACjElL,MAAOjK,KAAK0O,MAAMqE,GAAInD,SAAU5P,KAAK24B,eAAgBliB,WAAS,EAACjC,UAAQ,MAE3E,6BACA,2BAAOrU,UAAU,QAAQ0P,QAAQ,kBAC/B,kBAAC,EAAApP,iBAAD,CAAkBC,GAAG,mBAEvB,kBAAC,EAAAD,iBAAD,CAAkBC,GAAG,gCAClByU,GAAgB,2BAAOnK,KAAK,OAAOtK,GAAG,iBAAiByU,YAAaA,EACnElL,MAAOjK,KAAK0O,MAAMkE,QAAShD,SAAU5P,KAAK+8B,yBAGhD,kBAACtuB,EAAD,CACE3I,QAAS9F,KAAKC,MAAM6F,QACpBsJ,eAAgBpP,KAAKmgB,sBAEzB,yBAAKhgB,UAAU,kBACb,kBAAC2P,EAAD,CAAUE,QAAShQ,KAAK0O,MAAMgD,UAAW9B,SAAU5P,KAAKi9B,sBAD1D,IAEE,2BAAO18B,QAASP,KAAKi9B,qBAAqB,kBAAC,EAAAx8B,iBAAD,CAAkBC,GAAG,iBAC7DmB,eAAe,oBACfC,YAAY,6CAEhB,kBAAC,EAAArB,iBAAD,CAAkBC,GAAG,sBAClBN,GAAU,kBAACoc,GAAD,CACTC,KAAMzc,KAAK0O,MAAM+N,KACjBE,WAAW,EACXS,cAAepd,KAAKg9B,kBACpB74B,OAAQnE,KAAKC,MAAMkE,OACnB/D,MAAOA,MAEX,yBAAKD,UAAU,kBACb,4BAAQA,UAAW24B,GACjB,kBAAC,EAAAr4B,iBAAD,CAAkBC,GAAG,gBAAgBmB,eAAe,SAClDC,YAAY,wBCrGX,MAAMo7B,WAAuB19B,kBAC1CqD,YAAY5C,GACV6C,MAAM7C,GAEND,KAAK0O,MAAQ,CACXyuB,QAAQ,EACR7J,OAAQ,IAGVtzB,KAAKo9B,mBAAqBp9B,KAAKo9B,mBAAmBl6B,KAAKlD,MACvDA,KAAKq9B,aAAer9B,KAAKq9B,aAAan6B,KAAKlD,MAC3CA,KAAKs9B,YAAct9B,KAAKs9B,YAAYp6B,KAAKlD,MACzCA,KAAKkV,cAAgBlV,KAAKkV,cAAchS,KAAKlD,MAG/CgF,uBACMhF,KAAK0O,MAAMyuB,SACbn9B,KAAK+O,SAAS,CAACukB,OAAQ,GAAI6J,QAAQ,IACnCn9B,KAAKC,MAAMs9B,iBAAiB19B,eAIhCu9B,mBAAmBl4B,GACjBlF,KAAK+O,SAAS,CAACukB,OAAQpuB,EAAEE,OAAO6E,QAGlCozB,aAAan4B,GACXA,EAAEG,iBACF,IAAI6S,EAAQlY,KAAK0O,MAAM4kB,OAAOhpB,OAC9BtK,KAAK+O,SAAS,CAACouB,OAASjlB,EAAMhR,OAAS,IACvClH,KAAKC,MAAMs9B,iBAAiBrlB,EAAMhR,OAAS,EAAIgR,EAAQrY,cAGzDy9B,YAAYp4B,GACVA,EAAEG,iBACErF,KAAK0O,MAAMyuB,QACbn9B,KAAKC,MAAMs9B,iBAAiB19B,cAE9BG,KAAK+O,SAAS,CAACukB,OAAQ,GAAI6J,QAAQ,IAGrCjoB,cAAchQ,GACE,UAAVA,EAAErG,IACJmB,KAAKq9B,aAAan4B,GACC,WAAVA,EAAErG,KACXmB,KAAKs9B,cAITv9B,SACE,OACE,yBAAKI,UAAU,cACb,yBAAKA,UAAU,kBACb,uBAAGA,UAAU,yBAAb,UACA,kBAAC,EAAAM,iBAAD,CAAkBC,GAAG,qBAAqBmB,eAAe,wDACvDC,YAAY,yCACX07B,GAAuB,2BAAOr9B,UAAU,SAAS6K,KAAK,OACrDmK,YAAaqoB,EACbvzB,MAAOjK,KAAK0O,MAAM4kB,OAAQ1jB,SAAU5P,KAAKo9B,mBACzC5mB,UAAWxW,KAAKkV,cAAeV,UAAQ,EAACiC,WAAS,MAErD,uBAAGhH,KAAK,IAAIlP,QAASP,KAAKs9B,aACxB,uBAAGn9B,UAAU,kBAAb,aCrDZ,MAAMuB,IAAWC,oBAAe,CAC9B87B,oBAAqB,CACnB/8B,GAAI,sBACJmB,eAAgB,8BAChBC,YAAa,kEAEf47B,kBAAmB,CACjBh9B,GAAI,oBACJmB,eAAgB,6BAChBC,YAAa,iEAIjB,MAAM67B,WAAqBn+B,cACzBqD,YAAY5C,GACV6C,MAAM7C,GAEND,KAAK0O,MAAQ,CACXkvB,YAAa,MACbC,YAAa,MAGf79B,KAAK89B,eAAiB99B,KAAK89B,eAAe56B,KAAKlD,MAC/CA,KAAK+9B,qBAAuB/9B,KAAK+9B,qBAAqB76B,KAAKlD,MAC3DA,KAAKoX,sBAAwBpX,KAAKoX,sBAAsBlU,KAAKlD,MAC7DA,KAAKg+B,qBAAuBh+B,KAAKg+B,qBAAqB96B,KAAKlD,MAC3DA,KAAKi+B,gBAAkBj+B,KAAKi+B,gBAAgB/6B,KAAKlD,MAGnD6E,oBACE7E,KAAKC,MAAMwjB,aAGbqa,eAAe54B,GACbA,EAAEG,iBACF+mB,cAA0BA,GAAe8R,YAAYl2B,OAAO0kB,SAASxiB,KAAM,MAAOhF,EAAES,cAAcC,QAAQlF,KAC1GV,KAAK+O,SAAS,CAAC6uB,YAAa14B,EAAES,cAAcC,QAAQlF,KAGtDq9B,qBAAqB7lB,GACnBlY,KAAKC,MAAMs9B,iBAAiBrlB,GAC5BlY,KAAK+O,SAAS,CAAC8uB,YAAah+B,gBAAmBqY,GAAS,KAAOA,IAGjEd,sBAAsBS,GACW,QAA3B7X,KAAK0O,MAAMkvB,cACbxR,cAA0BA,GAAe+R,eAAen2B,OAAO0kB,SAASxiB,KAAM,QAC9ElK,KAAKC,MAAMm+B,cAAcvmB,IAI7BmmB,qBAAqBhwB,EAAMW,EAAS0vB,EAAM5hB,EAAM/K,GAC9C0a,cAA0BA,GAAe+R,eAAen2B,OAAO0kB,SAASxiB,KAAM,QAC9ElK,KAAKC,MAAMm+B,mBAAchoB,EAAWwF,GAAM5N,EAAMW,GAAU0vB,EAAM5hB,EAAM/K,GAGxEusB,gBAAgBh6B,GACdmoB,cAA0BA,GAAe+R,eAAen2B,OAAO0kB,SAASxiB,KAAM,QAC9ElK,KAAKC,MAAMm+B,cAAcn6B,GAG3BlE,SACE,MAAM,cAACgD,GAAiB/C,KAAKC,MAAM+C,KAC7Bs7B,EAA0Bv7B,EAAc/C,KAAK0O,MAAMmvB,YACvDn8B,GAASg8B,kBAAoBh8B,GAAS+7B,qBACxC,OACE,yBAAKt9B,UAAU,eACb,wBAAIA,UAAU,UACZ,wBAAIA,UAAsC,QAA3BH,KAAK0O,MAAMkvB,YAAwB,SAAW,MAC3D,uBAAGnuB,KAAK,IAAIzI,UAAQ,MAAMzG,QAASP,KAAK89B,gBACtC,kBAAC,EAAAr9B,iBAAD,CAAkBC,GAAG,qBAAqBmB,eAAe,OACvDC,YAAY,qBAGlB,wBAAI3B,UAAsC,QAA3BH,KAAK0O,MAAMkvB,YAAwB,SAAW,MAC3D,uBAAGnuB,KAAK,IAAIzI,UAAQ,MAAMzG,QAASP,KAAK89B,gBACtC,kBAAC,EAAAr9B,iBAAD,CAAkBC,GAAG,qBAAqBmB,eAAe,YACvDC,YAAY,0BAGlB,wBAAI3B,UAAsC,SAA3BH,KAAK0O,MAAMkvB,YAAyB,SAAW,MAC5D,uBAAGnuB,KAAK,IAAIzI,UAAQ,OAAOzG,QAASP,KAAK89B,gBACvC,kBAAC,EAAAr9B,iBAAD,CAAkBC,GAAG,uBAAuBmB,eAAe,QACzDC,YAAY,kCAIQ,QAA3B9B,KAAK0O,MAAMkvB,YACV,kBAACd,GAAD,CACE34B,OAAQnE,KAAKC,MAAMkE,OACnBoU,SAAUvY,KAAKg+B,uBACU,SAA3Bh+B,KAAK0O,MAAMkvB,YACT,kBAAC,GAAD,CACErlB,SAAUvY,KAAKi+B,gBACfn4B,QAAS9F,KAAKC,MAAM6F,UACtB,yBAAK3F,UAAU,eACb,kBAAC+8B,GAAD,CACElyB,KAAK,MACLuyB,iBAAkBv9B,KAAK+9B,uBACzB,kBAAC,EAAD,CACEvrB,SAAUxS,KAAKC,MAAMs+B,cACrBvrB,SAAUhT,KAAKC,MAAM+S,SACrBS,iBAAkB6qB,EAClB7sB,YAAY,EACZ0B,YAAY,EACZvC,iBAAiB,EACjByC,gBAAiBrT,KAAKoX,2BAOtC,QAAevP,gBAAW81B,ICvHX,MAAMa,WAA0Bh/B,kBAC7CqD,YAAY5C,GACV6C,MAAM7C,GAEND,KAAK0O,MAAQ,CACX2pB,MAAO,GACPD,SAAU,IAGZp4B,KAAKuX,aAAevX,KAAKuX,aAAarU,KAAKlD,MAC3CA,KAAK04B,kBAAoB14B,KAAK04B,kBAAkBx1B,KAAKlD,MACrDA,KAAKy4B,qBAAuBz4B,KAAKy4B,qBAAqBv1B,KAAKlD,MAG7D6E,oBACE,IAAI+nB,EAASR,GAAeS,aAAa7kB,OAAO0kB,SAASxiB,MACzDlK,KAAK+O,SAAS,CAAC0vB,MAAO7R,EAAOrpB,OAAOk7B,MAAOC,OAAQ9R,EAAOrpB,OAAOm7B,SAGnEnnB,aAAarS,GACXA,EAAEG,iBACErF,KAAK0O,MAAM+vB,MACbz+B,KAAKC,MAAM0+B,QAAQ3+B,KAAK0O,MAAMgwB,OAAQ1+B,KAAK0O,MAAM0pB,SAAS9tB,OAAQtK,KAAK0O,MAAM+vB,OAE7Ez+B,KAAKC,MAAM2+B,UAAU,QAAS5+B,KAAK0O,MAAM2pB,MAAM/tB,QAInDouB,kBAAkBxzB,GAChBlF,KAAK+O,SAAS,CAACspB,MAAOnzB,EAAEE,OAAO6E,QAGjCwuB,qBAAqBvzB,GACnBlF,KAAK+O,SAAS,CAACqpB,SAAUlzB,EAAEE,OAAO6E,QAGpClK,SACE,IAAI8+B,EAAS7+B,KAAK0O,MAAM+vB,OAASz+B,KAAK0O,MAAMgwB,OAC5C,OACE,0BAAMh+B,GAAG,sBAAsB6X,SAAUvY,KAAKuX,cAC3CsnB,EACC,kBAAC,EAAAp+B,iBAAD,CAAkBC,GAAG,2BAA2BmB,eAAe,qBAC7DC,YAAY,0CACXqT,GAAgB,kBAACsD,EAAD,CACftD,YAAaA,EACb8D,aAAa,eACbhP,MAAOjK,KAAK0O,MAAM0pB,SAClB5jB,UAAU,EAAMiC,WAAW,EAC3B7G,SAAU5P,KAAKy4B,yBAGnB,oCACE,2BAAO5oB,QAAQ,cACb,kBAAC,EAAApP,iBAAD,CAAkBC,GAAG,uBACnBmB,eAAe,+BACfC,YAAY,oCAEhB,kBAAC,EAAArB,iBAAD,CAAkBC,GAAG,0BAA0BmB,eAAe,0BAC5DC,YAAY,mCACXqT,GAAgB,2BAAOnK,KAAK,QAAQtK,GAAG,aACtCyU,YAAaA,EACb8D,aAAa,QACbhP,MAAOjK,KAAK0O,MAAM2pB,MAClBzoB,SAAU5P,KAAK04B,kBACflkB,UAAQ,EAACiC,WAAS,OAI1B,yBAAKtW,UAAU,kBACb,4BAAQA,UAAU,OAAO6K,KAAK,UAAU6zB,EACtC,kBAAC,EAAAp+B,iBAAD,CAAkBC,GAAG,eAAemB,eAAe,QAAQC,YAAY,mBACvE,kBAAC,EAAArB,iBAAD,CAAkBC,GAAG,sBAAsBmB,eAAe,eACxDC,YAAY,8BC1EX,MAAMg9B,WAAqBt/B,kBACxCqD,YAAY5C,GACV6C,MAAM7C,GAEND,KAAK0O,MAAQ,CACX6tB,SAAUt8B,EAAMksB,cAChB4S,SAAS,GAGX/+B,KAAKg/B,qBAAuBh/B,KAAKg/B,qBAAqB97B,KAAKlD,MAC3DA,KAAK4Y,sBAAwB5Y,KAAK4Y,sBAAsB1V,KAAKlD,MAG/Dg/B,qBAAqB95B,GACnBlF,KAAK+O,SAAS,CAACwtB,SAAUr3B,EAAEE,OAAO6E,MAAO80B,SAAS,IAGpDnmB,wBACM5Y,KAAK0O,MAAMqwB,UACb/+B,KAAK+O,SAAS,CAACgwB,SAAS,IACxB/+B,KAAKC,MAAMg/B,sBAAsBj/B,KAAK0O,MAAM6tB,SAASjyB,SAIzDvK,SACE,IAAIm/B,EAAc,GAClB,IAAK,IAAIrgC,KAAOiC,EAAa,CAC3B,IAAI2E,EAAO3E,EAAYjC,GACvBqgC,EAAYn4B,KACV,4BAAQlI,IAAK4G,EAAMwE,MAAOxE,KAG9B,OACE,yBAAKtF,UAAU,kBACb,2BAAO6K,KAAK,SAAStK,GAAG,YAAYyU,YAAanV,KAAKC,MAAMs8B,SAAU4C,KAAK,cACzEh/B,UAAU,SAAS8J,MAAOjK,KAAK0O,MAAM6tB,SAAU3sB,SAAU5P,KAAKg/B,qBAC9DzoB,OAAQvW,KAAK4Y,sBAAuBpE,UAAQ,IAC9C,8BAAU9T,GAAG,eACVw+B,KCtCI,MAAME,WAAqB5/B,kBACxCqD,YAAY5C,GACV6C,MAAM7C,GAEND,KAAK0O,MAAQ,CACX2wB,UAAWp/B,EAAMo/B,WAAa,MAC9BlT,cAAelsB,EAAMksB,eAGvBnsB,KAAKuX,aAAevX,KAAKuX,aAAarU,KAAKlD,MAC3CA,KAAKs/B,wBAA0Bt/B,KAAKs/B,wBAAwBp8B,KAAKlD,MACjEA,KAAKu/B,0BAA4Bv/B,KAAKu/B,0BAA0Br8B,KAAKlD,MAGvEuX,aAAarS,GACXA,EAAEG,iBACFrF,KAAKC,MAAMu/B,SAAS,CAClBH,UAAWr/B,KAAK0O,MAAM2wB,UACtBlT,cAAensB,KAAK0O,MAAMyd,gBAI9BmT,wBAAwBp6B,GACtBlF,KAAK+O,SAAS,CAACswB,UAAWn6B,EAAES,cAAcsE,QAG5Cs1B,0BAA0BvxB,GACxBhO,KAAK+O,SAAS,CAACod,cAAene,IAGhCjO,SACE,MAAMsa,EAAQ,CAAColB,IAAK,UAAWC,GAAI,YAAaC,GAAI,gBACpD,IAAIC,EAAmB,GACnBznB,EAAWnY,KAcf,MAbA,CAAC,MAAO,KAAM,MAAM8G,KAAI,SAASrB,GAC/B,IAAI/E,EAAK,aAAe+E,EACpBuI,EAAOqM,EAAM5U,GACjBm6B,EAAiB74B,KACf,wBAAIlI,IAAK4G,GACP,2BAAOuF,KAAK,QAAQtK,GAAIA,EAAIsN,KAAK,mBAAmB/D,MAAOxE,EACzDuK,QAASmI,EAASzJ,MAAM2wB,YAAc55B,EACtCmK,SAAUuI,EAASmnB,0BACrB,2BAAOzvB,QAASnP,GAAKsN,QAMzB,0BAAMtN,GAAG,gBAAgBP,UAAU,aAAaoY,SAAUvY,KAAKuX,cAC7D,yBAAKpX,UAAU,kBACb,2BAAOA,UAAU,SACf,kBAAC,EAAAM,iBAAD,CAAkBC,GAAG,sBAAsBmB,eAAe,iBACxDC,YAAY,gDAGlB,kBAACg9B,GAAD,CAAc3S,cAAensB,KAAK0O,MAAMyd,cACtC8S,sBAAuBj/B,KAAKu/B,4BAC9B,yBAAKp/B,UAAU,kBACb,2BAAOA,UAAU,SACf,kBAAC,EAAAM,iBAAD,CAAkBC,GAAG,uBAAuBmB,eAAe,kBACzDC,YAAY,yDAGlB,yBAAK3B,UAAU,kBACb,wBAAIA,UAAU,UACXy/B,IAGL,yBAAKz/B,UAAU,kBACb,4BAAQ6K,KAAK,SAAS7K,UAAU,QAC9B,kBAAC,EAAAM,iBAAD,CAAkBC,GAAG,gBAAgBmB,eAAe,SAClDC,YAAY,wBCzE1B,MAAMJ,IAAWC,oBAAe,CAC9Bk+B,MAAO,CACLn/B,GAAI,eACJmB,eAAgB,QAChBC,YAAa,sDAEfu2B,MAAO,CACL33B,GAAI,eACJmB,eAAgB,QAChBC,YAAa,wDAIjB,MAAMg+B,WAAuBtgC,kBAC3BqD,YAAY5C,GACV6C,MAAM7C,GAEND,KAAK0O,MAAQ,CACX2hB,KAAMpwB,EAAM8/B,UAAY,IAG1B//B,KAAK+P,aAAe/P,KAAK+P,aAAa7M,KAAKlD,MAC3CA,KAAK0oB,eAAiB1oB,KAAK0oB,eAAexlB,KAAKlD,MAC/CA,KAAKuX,aAAevX,KAAKuX,aAAarU,KAAKlD,MAC3CA,KAAKqU,aAAerU,KAAKqU,aAAanR,KAAKlD,MAG7C+P,aAAa7K,GACXlF,KAAK+O,SAAS,CAACshB,KAAMnrB,EAAEE,OAAO6E,QAGhCye,eAAexjB,GACC,UAAVA,EAAErG,IACJmB,KAAKuX,aAAarS,GACA,UAATA,EAAErG,KACXmB,KAAKqU,aAAanP,GAItBqS,aAAarS,GACXA,EAAEG,iBACErF,KAAK0O,MAAM2hB,MAAQrwB,KAAK0O,MAAM2hB,KAAK/lB,QACrCtK,KAAKC,MAAMsY,SAASvY,KAAKC,MAAM+/B,WAAYhgC,KAAK0O,MAAM2hB,KAAK/lB,QAI/D+J,aAAanP,GACXA,EAAEG,iBACFrF,KAAKC,MAAM0T,WAIb5T,SACE,MAAM,cAAEgD,GAAkB/C,KAAKC,MAAM+C,KAErC,IAAIs3B,EADY,CAAC,MAASv3B,EAAcrB,GAAS22B,OAAQ,IAAOt1B,EAAcrB,GAASm+B,QAClE7/B,KAAKC,MAAM+/B,aAAehgC,KAAKC,MAAM+/B,WAC1D,OACE,yBAAK7/B,UAAU,cACb,yBAAKA,UAAU,kBACb,2BAAOA,UAAU,QAAQ0P,QAAQ,2BAC/B,kBAAC,EAAApP,iBAAD,CAAkBC,GAAG,iCACnBmB,eAAe,mDACfC,YAAY,qCACZiQ,OAAQ,CAACuoB,OAAQA,OAGvB,yBAAKn6B,UAAU,kBACf,kBAAC,EAAAM,iBAAD,CAAkBC,GAAG,mCACnBmB,eAAe,eAAeC,YAAY,yCACzCm+B,GAAiB,2BAAOj1B,KAAK,OAAOtK,GAAG,0BACtCyU,YAAa8qB,EACbh2B,MAAOjK,KAAK0O,MAAM2hB,KAAMzgB,SAAU5P,KAAK+P,aACvC+Z,WAAY9pB,KAAK0oB,eAAgBlU,UAAQ,OAG7C,yBAAKrU,UAAU,kBACb,4BAAQA,UAAU,OAAOI,QAASP,KAAKuX,cACrC,kBAAC,EAAA9W,iBAAD,CAAkBC,GAAG,iBAAiBmB,eAAe,UAAUC,YAAY,sBAE7E,4BAAQ3B,UAAU,QAAQI,QAASP,KAAKqU,cACtC,kBAAC,EAAA5T,iBAAD,CAAkBC,GAAG,sBAQjC,QAAemH,gBAAWi4B,ICvE1B,MAAMp+B,IAAWC,oBAAe,CAC9B,MAAS,CACPjB,GAAI,wBACJoB,YAAa,iCACbD,eAAgB,WAElB,SAAY,CACVnB,GAAI,2BACJoB,YAAa,yCACbD,eAAgB,kBAElB,SAAY,CACVnB,GAAI,2BACJoB,YAAa,oCACbD,eAAgB,YAElB,KAAQ,CACNnB,GAAI,mCACJoB,YAAa,uCACbD,eAAgB,oBAElB,QAAW,CACTnB,GAAI,8BACJoB,YAAa,sCACbD,eAAgB,WAElB,SAAY,CACVnB,GAAI,+BACJoB,YAAa,uCACbD,eAAgB,YAElB,MAAS,CACPnB,GAAI,oCACJoB,YAAa,4CACbD,eAAgB,iBAElB,QAAW,CACTnB,GAAI,8BACJoB,YAAa,sCACbD,eAAgB,WAElB,OAAU,CACRnB,GAAI,yBACJoB,YAAa,oCACbD,eAAgB,kBAElB,KAAQ,CACNnB,GAAI,uBACJoB,YAAa,sCACbD,eAAgB,uBAElB,MAAS,CACPnB,GAAI,wBACJoB,YAAa,yCACbD,eAAgB,kBAElB,QAAW,CACTnB,GAAI,0BACJoB,YAAa,4CACbD,eAAgB,kBAElB,QAAW,CACTnB,GAAI,0BACJoB,YAAa,4CACbD,eAAgB,mBAIpB,MAAMq+B,WAAsB1gC,cAC1BqD,YAAY5C,GACV6C,MAAM7C,GAEND,KAAKmgC,qBAAuBngC,KAAKmgC,qBAAqBj9B,KAAKlD,MAC3DA,KAAKogC,eAAiBpgC,KAAKogC,eAAel9B,KAAKlD,MAGjDmgC,qBAAqBhI,EAAOC,GAC1Bp4B,KAAKC,MAAMogC,eAAelI,EAAOC,GAGnCgI,iBACEpgC,KAAKC,MAAMq5B,gBAAgB,UAG7Bv5B,SACE,MAAM,cAACgD,GAAiB/C,KAAKC,MAAM+C,KAC7Bs9B,EAAOtgC,KAAKC,MAAMyO,QAAU1O,KAAKC,MAAM+S,SAAW,WAAa,SAErE,IAAI5S,EAAOyJ,EASP8J,EAKJ,MAbY,YAAR2sB,GACFlgC,EAAQJ,KAAKC,MAAMG,MACnByJ,GAAS7J,KAAKC,MAAM4J,QAAS7J,KAAKC,MAAM4J,SAExCzJ,EAAQ2C,EAAcrB,GAAS4+B,IAC/Bz2B,GAAS,IAIiC,GAAxC,CAAC,QAAS,YAAYsD,QAAQmzB,KAChC3sB,EAAW3T,KAAKC,MAAM0T,UAItB,yBAAKjT,GAAG,YAAYP,UAAWH,KAAKC,MAAM80B,SAAW,YAAc,MACjE,kBAAC6B,GAAD,CACEloB,MAAO4xB,EACPlgC,MAAOA,EACPyJ,OAAQA,EACRmJ,SAAUhT,KAAKC,MAAM+S,SACrB2jB,SAAU32B,KAAKC,MAAM02B,SACrBF,WAAYz2B,KAAKC,MAAMw2B,WACvBD,WAAYx2B,KAAKogC,eACjBzsB,SAAUA,IAEZ,kBAACC,EAAD,CACEE,MAAO9T,KAAKC,MAAMikB,WAClBjQ,KAAMjU,KAAKC,MAAMkkB,UACjBrS,OAAQ9R,KAAKC,MAAMsgC,YACnBpsB,WAAYnU,KAAKC,MAAMugC,gBACvBzsB,aAAc/T,KAAKC,MAAM6F,UAE3B,kBAACimB,GAAD,CAAalY,KAAM7T,KAAKC,MAAMwgC,qBAEpB,UAATH,EACC,kBAAChE,GAAD,CACEnE,MAAOn4B,KAAKC,MAAMk4B,MAClBtP,SAAU7oB,KAAKC,MAAMygC,cACrBlE,QAASx8B,KAAKmgC,uBAEP,aAATG,EACA,kBAACpI,GAAD,CACEW,gBAAiB74B,KAAKC,MAAM44B,gBAC5BllB,SAAU3T,KAAKC,MAAM0T,SACrB7N,QAAS9F,KAAKC,MAAM6F,UAEb,aAATw6B,EACA,kBAAClB,GAAD,CACEC,UAAWr/B,KAAKC,MAAMo/B,UACtBlT,cAAensB,KAAKC,MAAMksB,cAC1BxY,SAAU3T,KAAKC,MAAM0T,SACrB6rB,SAAUx/B,KAAKC,MAAM0gC,mBAEd,SAATL,EACA,kBAAClH,GAAD,CACEj1B,OAAQnE,KAAKC,MAAMkE,OACnB6O,SAAUhT,KAAKC,MAAM+S,SACrBsmB,gBAAiBt5B,KAAKC,MAAMq5B,kBAErB,YAATgH,EACA,kBAAC/G,GAAD,CACEp1B,OAAQnE,KAAKC,MAAMkE,OACnB6O,SAAUhT,KAAKC,MAAM+S,SACrBqnB,gBAAiBr6B,KAAKC,MAAMo6B,gBAC5BK,aAAc16B,KAAKC,MAAM2gC,oBACzBnG,UAAWz6B,KAAKC,MAAMw6B,UACtBM,aAAc/6B,KAAKC,MAAM86B,aACzBD,cAAe96B,KAAKC,MAAM66B,cAC1BxB,gBAAiBt5B,KAAKC,MAAMq5B,gBAC5BxzB,QAAS9F,KAAKC,MAAM6F,UAEb,UAATw6B,EACA,kBAAC,GAAD,CACEhF,cAAet7B,KAAKC,MAAMq7B,cAC1BE,cAAex7B,KAAKC,MAAMu7B,cAC1BD,qBAAsBv7B,KAAKC,MAAMs7B,qBACjCE,cAAez7B,KAAKC,MAAMw7B,cAC1BL,0BAA2Bp7B,KAAKC,MAAMm7B,0BACtCD,sBAAuBn7B,KAAKC,MAAMk7B,sBAClCE,sBAAuBr7B,KAAKC,MAAMo7B,wBAE3B,aAATiF,EACA,kBAAC,GAAD,CACEn8B,OAAQnE,KAAKC,MAAMkE,OACnBk2B,gBAAiBr6B,KAAKC,MAAMo6B,gBAC5B8B,SAAUn8B,KAAKC,MAAMk8B,SACrBF,gBAAiBj8B,KAAKC,MAAMg8B,gBAC5Bx4B,YAAazD,KAAKC,MAAMwD,YACxB24B,cAAep8B,KAAKC,MAAMm8B,gBAEnB,YAATkE,EACA,kBAACjE,GAAD,CACElQ,cAAensB,KAAKC,MAAMksB,cAC1BD,cAAelsB,KAAKC,MAAMisB,gBAElB,aAAToU,GAA+B,WAARA,GAA6B,WAARA,EAC7C,kBAACxJ,GAAD,CACE3yB,OAAQnE,KAAKC,MAAMkE,OACnB6O,SAAUhT,KAAKC,MAAM+S,SACrBI,UAAWpT,KAAKC,MAAMmT,UACtBf,cAAerS,KAAKC,MAAMoS,cAC1B1P,QAAiB,WAAR29B,EACTnJ,QAAiB,WAARmJ,EACTpJ,SAAUl3B,KAAKC,MAAMi3B,SACrBtmB,gBAAiB5Q,KAAKC,MAAM2Q,gBAC5ByC,gBAAiBrT,KAAKC,MAAMoT,gBAC5BkkB,cAAev3B,KAAKC,MAAMs3B,gBAEnB,WAAT+I,EACA,kBAAC,GAAD,CACEn8B,OAAQnE,KAAKC,MAAMkE,OACnBo6B,cAAev+B,KAAKC,MAAMs+B,cAC1B9a,WAAYzjB,KAAKC,MAAMwjB,WACvB8Z,iBAAkBv9B,KAAKC,MAAMs9B,iBAC7Ba,cAAep+B,KAAKC,MAAMm+B,cAC1Bt4B,QAAS9F,KAAKC,MAAM6F,UAEb,SAATw6B,EACA,kBAAC,GAAD,CACEP,SAAU//B,KAAKC,MAAM8/B,SACrBC,WAAYhgC,KAAKC,MAAM+/B,WACvBznB,SAAUvY,KAAKC,MAAM4gC,sBACrBltB,SAAU3T,KAAKC,MAAM0T,SACrB7N,QAAS9F,KAAKC,MAAM6F,UAEb,UAATw6B,EACA,kBAAC9B,GAAD,CACEI,UAAW5+B,KAAKC,MAAM6gC,uBACtBnC,QAAS3+B,KAAKC,MAAM8gC,kBACtB,OAMV,QAAel5B,gBAAWq4B,IClPnB,SAASc,KACd,IAAIC,EAAOhgC,EAQX,MAP8B,iBAAnB+G,OAAO0kB,WACgB,SAA5B1kB,OAAO0kB,SAASwU,UAAmD,aAA5Bl5B,OAAO0kB,SAASyU,SACzDF,EAAOngC,EAAYE,MACVgH,OAAO0kB,SAASyU,WACzBF,EAAOj5B,OAAO0kB,SAASyU,UAAYn5B,OAAO0kB,SAAS0U,KAAO,IAAMp5B,OAAO0kB,SAAS0U,KAAO,MAGpFH,EAIF,SAASI,KACd,MAA8B,iBAAnBr5B,OAAO0kB,UACmB,UAA5B1kB,OAAO0kB,SAASwU,SCS3B,MAAMI,GAAY,IAAIC,MAAM,iBAEtB7/B,IAAWC,oBAAe,CAC9B6/B,oBAAqB,CACnB9gC,GAAI,sBACJmB,eAAgB,2CAChBC,YAAa,kDAEf2/B,cAAe,CACb/gC,GAAI,gBACJmB,eAAgB,UAChBC,YAAa,+BAEf4/B,iBAAkB,CAChBhhC,GAAI,mBACJmB,eAAgB,0CAChBC,YAAa,oEAEf6/B,uBAAwB,CACtBjhC,GAAI,yBACJmB,eAAgB,yBAChBC,YAAa,0CAEf8/B,cAAe,CACblhC,GAAI,gBACJmB,eAAgB,gBAChBC,YAAa,qCAEf+/B,mBAAoB,CAClBnhC,GAAI,qBACJmB,eAAgB,sBAChBC,YAAa,qEAIjB,MAAMggC,WAAkBtiC,cACtBqD,YAAY5C,GACV6C,MAAM7C,GAEND,KAAK0O,MAAQ1O,KAAK+hC,gBAElB/hC,KAAKgiC,aAAehiC,KAAKgiC,aAAa9+B,KAAKlD,MAC3CA,KAAKiiC,gBAAkBjiC,KAAKiiC,gBAAgB/+B,KAAKlD,MACjDA,KAAKkiC,aAAeliC,KAAKkiC,aAAah/B,KAAKlD,MAC3CA,KAAKmiC,kBAAoBniC,KAAKmiC,kBAAkBj/B,KAAKlD,MACrDA,KAAKoiC,sBAAwBpiC,KAAKoiC,sBAAsBl/B,KAAKlD,MAC7DA,KAAKqiC,YAAcriC,KAAKqiC,YAAYn/B,KAAKlD,MACzCA,KAAKsiC,mBAAqBtiC,KAAKsiC,mBAAmBp/B,KAAKlD,MACvDA,KAAKuiC,gBAAkBviC,KAAKuiC,gBAAgBr/B,KAAKlD,MACjDA,KAAKwiC,6BAA+BxiC,KAAKwiC,6BAA6Bt/B,KAAKlD,MAC3EA,KAAKyiC,QAAUziC,KAAKyiC,QAAQv/B,KAAKlD,MACjCA,KAAK0iC,yBAA2B1iC,KAAK0iC,yBAAyBx/B,KAAKlD,MACnEA,KAAK2iC,sBAAwB3iC,KAAK2iC,sBAAsBz/B,KAAKlD,MAC7DA,KAAK4iC,iBAAmB5iC,KAAK4iC,iBAAiB1/B,KAAKlD,MACnDA,KAAK6iC,aAAe7iC,KAAK6iC,aAAa3/B,KAAKlD,MAC3CA,KAAK8iC,kBAAoB9iC,KAAK8iC,kBAAkB5/B,KAAKlD,MACrDA,KAAK+iC,gBAAkB/iC,KAAK+iC,gBAAgB7/B,KAAKlD,MACjDA,KAAKgjC,iBAAmBhjC,KAAKgjC,iBAAiB9/B,KAAKlD,MACnDA,KAAKijC,OAASjjC,KAAKijC,OAAO//B,KAAKlD,MAC/BA,KAAKkjC,WAAaljC,KAAKkjC,WAAWhgC,KAAKlD,MACvCA,KAAKmjC,iBAAmBnjC,KAAKmjC,iBAAiBjgC,KAAKlD,MACnDA,KAAK+9B,qBAAuB/9B,KAAK+9B,qBAAqB76B,KAAKlD,MAC3DA,KAAKojC,oBAAsBpjC,KAAKojC,oBAAoBlgC,KAAKlD,MACzDA,KAAKqjC,uBAAyBrjC,KAAKqjC,uBAAuBngC,KAAKlD,MAC/DA,KAAKsjC,kBAAoBtjC,KAAKsjC,kBAAkBpgC,KAAKlD,MACrDA,KAAKujC,wBAA0BvjC,KAAKujC,wBAAwBrgC,KAAKlD,MACjEA,KAAKwjC,iBAAmBxjC,KAAKwjC,iBAAiBtgC,KAAKlD,MACnDA,KAAKyjC,wBAA0BzjC,KAAKyjC,wBAAwBvgC,KAAKlD,MACjEA,KAAK0jC,2BAA6B1jC,KAAK0jC,2BAA2BxgC,KAAKlD,MACvEA,KAAK2jC,+BAAiC3jC,KAAK2jC,+BAA+BzgC,KAAKlD,MAC/EA,KAAK4jC,0BAA4B5jC,KAAK4jC,0BAA0B1gC,KAAKlD,MACrEA,KAAK6jC,eAAiB7jC,KAAK6jC,eAAe3gC,KAAKlD,MAC/CA,KAAK8jC,qBAAuB9jC,KAAK8jC,qBAAqB5gC,KAAKlD,MAC3DA,KAAK+jC,kBAAoB/jC,KAAK+jC,kBAAkB7gC,KAAKlD,MACrDA,KAAKgkC,kBAAoBhkC,KAAKgkC,kBAAkB9gC,KAAKlD,MACrDA,KAAKikC,0BAA4BjkC,KAAKikC,0BAA0B/gC,KAAKlD,MACrEA,KAAKkkC,cAAgBlkC,KAAKkkC,cAAchhC,KAAKlD,MAC7CA,KAAKmkC,iBAAmBnkC,KAAKmkC,iBAAiBjhC,KAAKlD,MACnDA,KAAKokC,kBAAoBpkC,KAAKokC,kBAAkBlhC,KAAKlD,MACrDA,KAAKqkC,kBAAoBrkC,KAAKqkC,kBAAkBnhC,KAAKlD,MACrDA,KAAKskC,gBAAkBtkC,KAAKskC,gBAAgBphC,KAAKlD,MACjDA,KAAKukC,iBAAmBvkC,KAAKukC,iBAAiBrhC,KAAKlD,MACnDA,KAAKwkC,sBAAwBxkC,KAAKwkC,sBAAsBthC,KAAKlD,MAC7DA,KAAKykC,wBAA0BzkC,KAAKykC,wBAAwBvhC,KAAKlD,MACjEA,KAAK0kC,sBAAwB1kC,KAAK0kC,sBAAsBxhC,KAAKlD,MAC7DA,KAAK2kC,yBAA2B3kC,KAAK2kC,yBAAyBzhC,KAAKlD,MACnEA,KAAK4kC,wBAA0B5kC,KAAK4kC,wBAAwB1hC,KAAKlD,MACjEA,KAAKihB,kBAAoBjhB,KAAKihB,kBAAkB/d,KAAKlD,MACrDA,KAAK6kC,aAAe7kC,KAAK6kC,aAAa3hC,KAAKlD,MAC3CA,KAAK+7B,oBAAsB/7B,KAAK+7B,oBAAoB74B,KAAKlD,MACzDA,KAAK8kC,4BAA8B9kC,KAAK8kC,4BAA4B5hC,KAAKlD,MACzEA,KAAK+kC,wBAA0B/kC,KAAK+kC,wBAAwB7hC,KAAKlD,MACjEA,KAAKglC,wBAA0BhlC,KAAKglC,wBAAwB9hC,KAAKlD,MACjEA,KAAKilC,kBAAoBjlC,KAAKilC,kBAAkB/hC,KAAKlD,MACrDA,KAAKklC,sBAAwBllC,KAAKklC,sBAAsBhiC,KAAKlD,MAC7DA,KAAKmlC,wBAA0BnlC,KAAKmlC,wBAAwBjiC,KAAKlD,MACjEA,KAAKolC,sBAAwBplC,KAAKolC,sBAAsBliC,KAAKlD,MAC7DA,KAAKqlC,gBAAkBrlC,KAAKqlC,gBAAgBniC,KAAKlD,MACjDA,KAAKslC,mBAAqBtlC,KAAKslC,mBAAmBpiC,KAAKlD,MACvDA,KAAKulC,mBAAqBvlC,KAAKulC,mBAAmBriC,KAAKlD,MACvDA,KAAK0gB,0BAA4B1gB,KAAK0gB,0BAA0Bxd,KAAKlD,MACrEA,KAAKwlC,iCAAmCxlC,KAAKwlC,iCAAiCtiC,KAAKlD,MACnFA,KAAKylC,2BAA6BzlC,KAAKylC,2BAA2BviC,KAAKlD,MACvEA,KAAK0lC,oBAAsB1lC,KAAK0lC,oBAAoBxiC,KAAKlD,MACzDA,KAAK2lC,wBAA0B3lC,KAAK2lC,wBAAwBziC,KAAKlD,MAGnE+hC,gBACE,MAAM6D,EAAWpO,GAAiBO,UAAU,aAAe,GAE3D,MAAO,CACL3kB,WAAW,EAEXoc,OAAO,EAEPqW,WAAW,EACXxG,UAAWuG,EAASvG,WAAa,KACjClT,cAAeyZ,EAASzZ,eAAiB6U,KACzC9U,cAAe,gBAEfoP,eAAgBsK,EAASE,iBACzBrK,eAAe,EACfD,cAAeoK,EAASpK,cACxBD,sBAAuB8F,MD9HG,iBAAnBr5B,OAAO0kB,UACmB,aAA5B1kB,OAAO0kB,SAASyU,gBC8HC,IAAZxhC,GAAiD,oBAAbsI,WACnB,oBAAjB89B,cACVC,cAAexO,GAAiBO,UAAU,kBAE1CzI,oBAAqBxqB,SAASmhC,OAE9B9hB,UAAW,GACXD,WAAY,KACZqc,iBAAanqB,EACboqB,gBAAiB,KAEjB0F,kBAAmB,QACnBC,eAAgB,KAChBC,gBAAiB,KACjB3F,oBAAoB,EAEpBtI,MAAO,GACPC,SAAU,GACVplB,SAAU,KACVqzB,eAAgBp+B,UAAUq+B,OAC1Bj0B,cAAe,GACfk0B,qBAAqB,EACrBC,iBAAkB,KAClB9W,eAAgB,KAChBgR,eAAe,EACfzc,cAAgBjc,OAAOy+B,Y7DrIG,I6DsI1BC,eAAe,EACfC,YAAa,YAEbC,oBAAoB,EACpBC,kBAAmB,KACnBC,mBAAoB,KACpBC,kBAAmB,KACnBC,iBAAkB,GAGlBC,cAAc,EACdC,YAAa,GAGbhQ,SAAU,GAEVqH,cAAe,GAEfna,mBAAoB,GACpB4b,gBAAY5pB,EACZ2pB,cAAU3pB,GAIdvR,oBACEmD,OAAOjD,iBAAiB,SAAU/E,KAAKgiC,cACvCh6B,OAAOjD,iBAAiB,UAAWG,IAAQlF,KAAKkiC,cAAa,MAC7Dl6B,OAAOjD,iBAAiB,WAAYG,IAAQlF,KAAKkiC,cAAa,MAC9Dl6B,OAAOjD,iBAAiB,aAAc/E,KAAKiiC,iBAE3Cn9B,SAASC,iBAAiB,mBAAoB/E,KAAKoiC,uBAEnDpiC,KAAK+O,SAAS,CACZ+Y,cAAehjB,SAASqiC,gBAAgBC,YACxCnY,eAAgBnqB,SAASqiC,gBAAgBE,eAG3C,MAAM,cAACtkC,EAAD,OAAgBgF,GAAU/H,KAAKC,MAAM+C,KAO3C,GANAhD,KAAKmE,OAAS29B,GAAUwF,QAAQtnC,KAAK0O,MAAMyd,cAAensB,KAAK0O,MAAM2wB,UAAWt3B,GAChF/H,KAAKmE,OAAOojC,UAAYvnC,KAAKuiC,gBAC7BviC,KAAKmE,OAAOqjC,aAAexnC,KAAK4iC,iBAChC5iC,KAAKmE,OAAOsjC,yBAA2BznC,KAAKwiC,6BAGxCxiC,KAAK0O,MAAM6sB,qBACb,IACEv7B,KAAK0nC,OAAS/nC,gBAAuBomC,cAAellC,GAAUjB,YAC9DI,KAAK0nC,OAAOC,kBAAkB5B,cAAc6B,mBAC5C3/B,UAAU4/B,cAAcC,SAAS,sBAAsBhkC,MAAMikC,IAC3D/nC,KAAKmiC,kBAAkB4F,GACvB/nC,KAAK0nC,OAAOM,iBAAiBD,GAC7BA,EAAI5uB,OAAO8uB,YAAYtQ,KAAKC,UAAU,CAAC7vB,OAAQA,KAC/C/H,KAAKqkC,oBACDrkC,KAAK0O,MAAM8sB,gBACRx7B,KAAK0O,MAAMs3B,cAGdhmC,KAAKmE,OAAO+jC,eAAeloC,KAAK0O,MAAMs3B,eAAe,GAFrDhmC,KAAKskC,iBAAgB,OAKxBhgC,OAAOC,IAERE,QAAQC,IAAI,qCAAsCH,MAEpD,MAAOA,GACPvE,KAAKqiC,YAAYt/B,EAAc,CAACrC,GAAI,qBAAsB,OAC1D+D,QAAQC,IAAI,0CAA2CH,GACvDvE,KAAK+O,SAAS,CAACwsB,sBAAsB,IAIzC,MAAMkD,EAAQjH,GAAiBO,UAAU,kBACvCP,GAAiBO,UAAU,mBAAgB3hB,EAEvC+xB,EAAY/b,GAAeS,aAAa7kB,OAAO0kB,SAASxiB,MAC1Du0B,GACFz+B,KAAK+O,SAAS,CAAC82B,WAAW,IAG1BpH,EAAM2J,QAAU,IAAI//B,KAAKo2B,EAAM2J,SAC/BpoC,KAAKmE,OAAOkkC,aAAa5J,GACzBz+B,KAAKmE,OAAOmkC,UAAUhkC,OAAOC,IAE3BvE,KAAKqiC,YAAY99B,EAAIC,QAAS,iBAEzB2jC,EAAU5kC,OAAO3B,YACjBumC,EAAU5kC,OAAOglC,IACxBJ,EAAU7b,KAAK,GAAK,GACpBF,cAA0BA,GAAeU,eAAeqb,EAAU7b,KAAM6b,EAAU5kC,UACxE4kC,EAAU5kC,OAAOk7B,OAC3BrS,cAA0B,IAG5BpsB,KAAKwoC,UAAY,KACjBxoC,KAAKyoC,kBAAoB,KAEzBzoC,KAAKiiC,kBAGPj9B,uBACEgD,OAAO/C,oBAAoB,SAAUjF,KAAKgiC,cAC1Ch6B,OAAO/C,oBAAoB,aAAcjF,KAAKiiC,iBAC9Cn9B,SAASG,oBAAoB,mBAAoBjF,KAAKoiC,uBAIxD,eAAejW,EAAekT,EAAWt3B,GACvC,MAAM5D,EAAS,IAAItE,IAAJ,CAAWgB,EAAUsrB,E7DtRjB,mC6DsRyCkT,EAAWgC,MAGvE,OAFAl9B,EAAOukC,iBAAiB3gC,GACxB5D,EAAOwkC,c7D/QoB,M6D+QW,GAC/BxkC,EAGT69B,eACE,MAAM4G,EAAS9jC,SAASqiC,gBAAgBC,a7DxPZ,I6DyP5BpnC,KAAK+O,SAAS,CACZ+Y,cAAehjB,SAASqiC,gBAAgBC,YACxCnY,eAAgBnqB,SAASqiC,gBAAgBE,eAEvCrnC,KAAK0O,MAAMuV,eAAiB2kB,GAC9B5oC,KAAK+O,SAAS,CAACkV,cAAe2kB,IAKlCzG,kBAAkB4F,GAChBA,EAAIc,cAAgB,KAClB,MAAMC,EAAmBf,EAAIgB,WAC7BD,EAAiBE,cAAgB,KAC/B,GAA8B,aAA1BF,EAAiBp6B,OAAwBzG,UAAU4/B,cAAcoB,WAAY,CAC/E,MAAM3iC,EAAM,oCACV,kBAAC,EAAA7F,iBAAD,CAAkBC,GAAG,mBACnBmB,eAAe,oBACfC,YAAY,mDAHJ,IAGwD,uBAAG2N,KAAK,IACxE,kBAAC,EAAAhP,iBAAD,CAAkBC,GAAG,gBACnBmB,eAAe,SACfC,YAAY,oEANN,KAQZ9B,KAAKqiC,YAAY/7B,EAAK,WAO9B27B,kBACE,MAAM/3B,EAAOkiB,GAAeS,aAAa7kB,OAAO0kB,SAASxiB,MACrDA,EAAKoiB,MAAQpiB,EAAKoiB,KAAKplB,OAAS,GAE9B,CAAC,WAAW,WAAW,OAAO,QAAQ,WAAW,UAAU,UAC3D,OAAO,QAAQ,SAAS,UAAU,UAAU,WAAW,IAAI4O,SAAS5L,EAAKoiB,KAAK,IAChFtsB,KAAK+O,SAAS,CAACm3B,kBAAmBh8B,EAAKoiB,KAAK,KAE5C7nB,QAAQC,IAAI,yBAA0BwF,EAAKoiB,KAAK,IAI9CpiB,EAAKoiB,KAAKplB,OAAS,GAAKgD,EAAKoiB,KAAK,IAAMtsB,KAAK0O,MAAM2D,eACrDrS,KAAK+O,SAAS,CACZsD,cAAexS,cAAiBqK,EAAKoiB,KAAK,IAAMpiB,EAAKoiB,KAAK,GAAK,QAKnEtsB,KAAK+O,SAAS,CAACm3B,kBAAmB,KAIhCh8B,EAAK3G,OAAO+2B,QACdt6B,KAAK+O,SAAS,CAAEixB,WAAY91B,EAAK3G,OAAO+2B,SAEtCpwB,EAAK3G,OAAO8sB,MACdrwB,KAAK+O,SAAS,CAAEgxB,SAAU71B,EAAK3G,OAAO8sB,OAIxCrwB,KAAK+O,SAAS,CACZ23B,cAAex8B,EAAK3G,OAAO3B,KAC3BsnC,oBAAqBh/B,EAAK3G,OAAOglC,MAIrCrG,aAAanxB,GACPA,EACF/Q,KAAKqiC,cAELriC,KAAKqiC,YAAYriC,KAAKC,MAAM+C,KAAKD,cAAc,CAACrC,GAAI,kBAAmB,QAEzEV,KAAK+O,SAAS,CAACs3B,eAAgBt1B,IAGjCqxB,wBACEpiC,KAAK+O,SAAS,CAACugB,oBAAqBxqB,SAASmhC,SAG/C5D,YAAY99B,EAAKuP,EAAOhC,EAAQqC,GAC9BnU,KAAK+O,SAAS,CAACoV,UAAW5f,EAAK2f,WAAYpQ,EAAOysB,YAAazuB,EAAQ0uB,gBAAiBrsB,IAI1FmuB,mBAAmBnK,EAAOC,GACxBp4B,KAAK+O,SAAS,CACZ2xB,eAAe,EACfvI,MAAOA,EACPC,SAAUA,EACVqI,oBAAoB,EACpBoF,WAAW,IAEb7lC,KAAKqiC,YAAY,GAAI,MAEjBriC,KAAKmE,OAAOglC,cACdnpC,KAAKyiC,QAAQtK,EAAOC,EAAU,CAACwC,KAAM56B,KAAK0O,MAAMsxB,WAAYxZ,KAAMxmB,KAAK0O,MAAMqxB,WAE7E//B,KAAKmE,OAAOmkC,UAAUhkC,OAAOC,IAE3BvE,KAAK+O,SAAS,CAAC2xB,eAAe,EAAOmF,WAAW,EAAOpF,oBAAoB,IAC3EzgC,KAAKqiC,YAAY99B,EAAIC,QAAS,UAMpC+9B,kBACE,MAAMh/B,EAASvD,KAAKmE,OAAOilC,gBAC3BppC,KAAK+O,SAAS,CACZmd,cAAe3oB,EAAO8lC,IAAM,KAAO9lC,EAAO6e,MAAQ7e,EAAO6e,MAAQ,UAG/DpiB,KAAK0O,MAAMm3B,WACb7lC,KAAKyiC,QAAQziC,KAAK0O,MAAMypB,MAAOn4B,KAAK0O,MAAM0pB,SAAU,CAACwC,KAAM56B,KAAK0O,MAAMsxB,WAAYxZ,KAAMxmB,KAAK0O,MAAMqxB,WAKvGyC,6BAA6B8G,EAAKC,GAGhC,GAFApX,cAAcnyB,KAAKwpC,oBAEfF,EAAM,EAGR,YADAtpC,KAAKqiC,cAIP,GAAIkH,EAQF,YANAA,EAAKzlC,MAAK,KAER9D,KAAKqiC,iBACJ/9B,OAAOC,IACRvE,KAAKqiC,YAAY99B,EAAIC,QAAS,UAKlC,MAAM,cAACzB,GAAiB/C,KAAKC,MAAM+C,KACnC,IAAI4D,EAAQ0iC,EAAM,IAClB1iC,GAAgBA,EAChB5G,KAAKwpC,mBAAqBtX,aAAY,KACpC,MAAMuX,EAAY7iC,EAAQ,G3DhazB,SAAuB8iC,GAC5B,MAAMpgC,EAAMD,KAAKE,MAAMmgC,EAAU,IACjC,IAAIJ,EAAMI,EAAU,GAEpB,OADAJ,EAAMA,EAAM,GAAN,WAAeA,GAAQA,EAC7B,UAAUhgC,EAAV,YAAiBggC,G2D4ZmBK,CAAc/iC,GAASA,EACvD5G,KAAKqiC,YACHt/B,EAAcrB,GAAS8/B,oBAAqB,CAACkI,QAASD,IACtD,QACA,KACEtX,cAAcnyB,KAAKwpC,oBACnBxpC,KAAKmE,OAAOylC,cAEd7mC,EAAcrB,GAAS+/B,gBAEzB76B,GAAS,IACR,KAILg8B,iBAAiBr+B,GACfvE,KAAK+O,SAAS,CACZqE,WAAW,EACXoc,OAAO,EACP+W,qBAAqB,EACrBpiB,UAAW5f,GAAOA,EAAIC,QAAUD,EAAIC,QAAU,eAC9C0f,WAAY3f,GAAOA,EAAIC,QAAU,MAAQ,OACzCk8B,eAAe,EACfkG,oBAAoB,EACpB1a,cAAe,kBAInBuW,QAAQtK,EAAOC,EAAUuC,GACvB,GAAI36B,KAAKmE,OAAO0lC,kBAGd,YADAzd,cAA0B,IAI5BuO,EAAO96B,eAAkB86B,GAEzB,IAAImP,EAAU,KACd,MAAMrL,EAAQz+B,KAAKmE,OAAO4lC,eACtB5R,GAASC,GACXp4B,KAAK+O,SAAS,CAACqpB,SAAU,OACzB0R,EAAU9pC,KAAKmE,OAAO6lC,WAAW7R,EAAOC,EAAUuC,IACzC8D,IACTqL,EAAU9pC,KAAKmE,OAAO8lC,WAAWxL,EAAMA,MAAO9D,IAG5CmP,EACFA,EAAQhmC,MAAMC,IACRA,EAAKssB,MAAQ,KAAqB,yBAAdtsB,EAAKkQ,MAC3BjU,KAAK+O,SAAS,CAAC0xB,oBAAoB,IAC/B9F,GACF36B,KAAKqiC,YAAYriC,KAAKC,MAAM+C,KAAKD,cAAc,CAACrC,GAAI,uBAAwB,QAE9EV,KAAK0iC,yBAAyB3+B,EAAKR,SAEnCvD,KAAK2iC,2BAENr+B,OAAOC,IAERvE,KAAK+O,SAAS,CACZ2xB,eAAe,EACfV,gBAAY5pB,EACZ2pB,cAAU3pB,EACVqqB,oBAAoB,EACpBoF,WAAW,IAEb7lC,KAAKqiC,YAAY99B,EAAIC,QAAS,OAC9BizB,aAAaQ,WAAW,cACxB7L,cAA0B,QAK5BA,cAA0B,IAC1BpsB,KAAK+O,SAAS,CAAC2xB,eAAe,KAIlCgC,yBAAyBn/B,GACvB,MAAMqpB,EAASR,GAAeS,aAAa7kB,OAAO0kB,SAASxiB,MAC3D0iB,EAAON,KAAK,GAAK,OACjBM,EAAOrpB,OAAP,OAA0BA,EAAOo3B,KAAK,GACtCvO,cAA0BA,GAAeU,eAAeF,EAAON,KAAMM,EAAOrpB,SAG9Eo/B,wBACE3iC,KAAKqiC,cAGD7K,GAAiBO,UAAU,mBAC7BP,aAA2B,aAAcx3B,KAAKmE,OAAO4lC,gBAGvD,MAAM1Q,EAAKr5B,KAAKmE,OAAO2xB,aACvBuD,EAAGvZ,WAAa9f,KAAK6iC,aACrBxJ,EAAG6Q,gBAAkBlqC,KAAK8iC,kBAC1BzJ,EAAGtZ,cAAgB/f,KAAK+iC,gBACxB/iC,KAAK+O,SAAS,CACZqE,WAAW,EACX4sB,gBAAY5pB,EACZ2pB,cAAU3pB,EACVpD,SAAUhT,KAAKmE,OAAOgmC,mBACtBtE,WAAW,IAGbxM,EAAGjJ,UACDiJ,EAAGnX,iBACD4N,eACAsa,WACAjoB,WACAkoB,WACAjoB,SACA9d,OAAOC,IACPvE,KAAKmE,OAAOmmC,aACZ7S,aAAaQ,WAAW,cACxBj4B,KAAKqiC,YAAY99B,EAAIC,QAAS,OAC9B4nB,cAA0B,OACzB2F,SAAQ,KACT/xB,KAAK+O,SAAS,CAAC0xB,oBAAoB,OAEvCrU,cAA0BA,GAAeme,gBAAgBviC,OAAO0kB,SAASxiB,KAAM,aAGjF24B,aAAaxgB,GACPA,IACEA,EAAKvP,QACP9S,KAAK+O,SAAS,CACZo3B,eAAgB9jB,EAAKvP,OAAOC,GAC5BqzB,gBAAiBt7B,EAAauX,EAAKvP,OAAO/H,SAG1CsX,EAAKnR,KACPlR,KAAK+O,SAAS,CACZ0sB,eAAgBpZ,EAAKnR,IAAIs5B,iBAOjC1H,kBAAkBjQ,EAAMgD,GACtB,GAAY,MAARhD,GAAwB,OAARA,EAClB7yB,KAAKgjC,mBACDhjC,KAAK0O,MAAM2D,eAAiBwjB,EAAK3xB,OACnClE,KAAK+O,SAAS,CAACw3B,oBAA8B,MAAR1T,SAElC,GAAY,QAARA,EACT7yB,KAAKgjC,wBACA,GAAY,OAARnQ,EAAe,CAExB,MAAM3uB,EAAQlE,KAAKmE,OAAOC,SAASyxB,EAAK3xB,OAClCumC,EAAWvmC,GAASA,EAAMwmC,aAG5B7U,EAAKlkB,OAAS,GAAK3R,KAAK0O,MAAM4sB,gBAAkBmP,IAE9C3lC,SAASmhC,QAAUjmC,KAAK0O,MAAM2D,eAAiBwjB,EAAK3xB,QACtDo9B,GAAUqJ,OAId3qC,KAAKgjC,uBACY,QAARnQ,IAEQ,QAARA,GAA0B,SAARA,GAGvB7yB,KAAK0O,MAAM2D,eAAiBwjB,EAAK3xB,OACnClE,KAAKojC,oBAAoB,MAG3BpjC,KAAKgjC,oBACY,OAARnQ,EAGL7yB,KAAK0O,MAAM2D,eAAiBwjB,EAAK3xB,OACnClE,KAAK+O,SAAS,CAACy3B,iBAAkB3Q,EAAK3kB,MAEvB,OAAR2hB,GAEQ,OAARA,GAKTpuB,QAAQC,IAAI,qCAAuCmuB,EAAO,QAAUgD,EAAK3xB,QAI7E6+B,gBAAgB9zB,GACdjP,KAAKgjC,mBAKP,iCAAiC9L,EAAU0T,GACzC,MAAMC,EAAS,GAIf,IAAK,MAAMp4B,KAAKykB,EACVr3B,mBAAsB4S,EAAEvO,SACxB2mC,EAAOp4B,EAAEvO,OAAS,CAChBS,KAAM8N,EAAEvO,MACR4mC,QAASr4B,EAAEq4B,QACXh4B,OAAQL,EAAEK,OACVF,QAASH,EAAEG,QACX1B,IAAKuB,EAAEvB,MAMf,IAAK,MAAMuB,KAAKm4B,EACTC,EAAOp4B,EAAE9N,QACZkmC,EAAOp4B,EAAE9N,MAAQ8N,GAIrB,OAAO1T,OAAOgT,OAAO84B,GAGvB7H,mBACE,MAAM5hB,EAAW,CACf8V,SAAU,IAGPl3B,KAAK0O,MAAM8gB,QACdpO,EAASoO,OAAQ,GAGnBxvB,KAAKmE,OAAO2xB,aAAatjB,UAAUC,IACjC2O,EAAS8V,SAASnwB,KAAK0L,GACnBzS,KAAK0O,MAAM2D,eAAiBI,EAAEvO,QAChCkd,EAASmlB,oBAAsB9zB,EAAE1B,OACjCqQ,EAASolB,iBAAmB/zB,EAAEvB,QAIlCkQ,EAASgD,mBAAqB0d,GAAUiJ,0BAA0B3pB,EAAS8V,SAAUl3B,KAAK0O,MAAM6vB,eAChGv+B,KAAK+O,SAASqS,GAIhB6hB,OAAOh4B,GACL,MAAM/G,EAAQlE,KAAKmE,OAAOC,SAAS6G,EAAK/G,OACpCA,EAAMyuB,UAAU1nB,IAASpL,yBAA8BoL,EAAK2nB,MAAQ5yB,KAAK0O,MAAMsE,WACjF8f,aAAa9yB,KAAKgrC,eAClBhrC,KAAKgrC,cAAgBlyB,YAAW,KAC9B9Y,KAAKgrC,mBAAgB50B,EACrBlS,EAAM+mC,SAAShgC,EAAK/E,O7DzpBE,M6D+pB5Bg9B,aACE,MAAMgI,EAAMlrC,KAAKmE,OAAOgnC,cACxBD,EAAInrB,cAAgB/f,KAAKmjC,iBACrB+H,EAAI3b,eACNvvB,KAAKmjC,mBAEL+H,EAAI9a,UAAU8a,EAAIhpB,iBAAiBkpB,UAAUhpB,SAAS9d,OAAOC,IAC3DvE,KAAKqiC,YAAY99B,EAAIC,QAAS,UAKpC2+B,mBACE,MAAMyH,EAAgB,GAEtB5qC,KAAKmE,OAAOgnC,cAAc34B,UAAU64B,IAClCT,EAAc7jC,KAAKskC,MAErBrrC,KAAK+O,SAAS,CACZwvB,cAAeqM,EACfxmB,mBAAoB0d,GAAUiJ,0BAA0B/qC,KAAK0O,MAAMwoB,SAAU0T,KAOjF7M,qBAAqB7lB,GACnB,MAAMgzB,EAAMlrC,KAAKmE,OAAOgnC,cACxBD,EAAII,QAAQ,CAACjpB,KAAM,CAACvP,OAAQoF,KAASpU,MAAMC,GAClCmnC,EAAIjpB,QAAQipB,EAAIhpB,iBAAiBkpB,UAAUhpB,WACjD9d,OAAOC,IACRvE,KAAKqiC,YAAY99B,EAAIC,QAAS,UAKlC4+B,oBAAoBn/B,GAClBQ,QAAQC,IAAI,sBAAuBT,GAE/BjE,KAAK0O,MAAMghB,gBAAkB1vB,KAAK0O,MAAMghB,eAAeC,YAAc1rB,GACvEjE,KAAK+O,SAAS,CACZ2gB,eAAgB,OAIhBzrB,GACFjE,KAAK+O,SAAS,CACZoV,UAAW,GACXD,WAAY,KACZyiB,YAAa,aACbD,eAAe,IAGb1mC,KAAK0O,MAAM2D,eAAiBpO,IAC9BjE,KAAK+O,SAAS,CACZw3B,oBAAqBvmC,KAAKmE,OAAOonC,cAActnC,GAC/CuiC,iBAAkBxmC,KAAKmE,OAAOqnC,mBAAmBvnC,KAEnDmoB,cAA0BA,GAAeuE,YAAY,GAAI1sB,OAI3DjE,KAAK+O,SAAS,CACZoV,UAAW,GACXD,WAAY,KACZyiB,YAAa,YACbJ,qBAAqB,EACrBC,iBAAkB,KAClBE,eAAe,IAGjBta,cAA0BA,GAAeuE,YAAY,GAAI,QAK7D0S,yBACErjC,KAAK+O,SAAS,CACZ43B,YAAa,cAEfva,cAA0BA,GAAeuE,YAAY3oB,OAAO0kB,SAASxiB,KAAM,OAQ7Eo5B,kBAAkBh9B,EAAKwjC,EAAS7jB,GAC9B,MAAM/hB,EAAQlE,KAAKmE,OAAOC,SAASpE,KAAK0O,MAAM2D,gBAE9C/L,EAAMpC,EAAMqC,cAAcD,GAAK,IAE3BqvB,UAAY1P,EAEX/hB,EAAMqrB,iBACJua,IACHA,EAAUz8B,QAAQC,WAEpBw8B,EAAUA,EAAQhmC,MAAK,IAAeI,EAAMksB,eAG1C0Z,IACFA,EAAUA,EAAQxlC,OAAOC,IACvBvE,KAAKqiC,YAAY99B,EAAIC,QAAS,WAIlCN,EAAMsC,aAAaF,EAAKwjC,GACrBhmC,MAAMC,IACL,GAAIG,EAAMwmC,aACR,OAAOxmC,EAAMvB,SAAQ,MAGxB2B,OAAOC,IACNvE,KAAKqiC,YAAY99B,EAAIC,QAAS,UAIpC++B,wBAAwBt/B,EAAW6N,GACjC,MAAM5N,EAAQlE,KAAKmE,OAAOC,SAASH,GACnC,IAAIgjB,EAAW,KACf,OAAQnV,GACN,IAAK,SAEH,MAAMrL,EAAOvC,EAAM2d,gBAAgBN,WACnC0F,EAAW/iB,EAAMonC,QAAQ,CAAC5pB,IAAK,CAACjb,KAAMA,KAClCvC,EAAMunC,UAGRxkB,EAAWA,EAASnjB,MAAMC,IACxBG,EAAMonC,QAAQ,CAAC5pB,IAAK,CAAC/c,KAAMV,EAAWwC,KAAMA,SAGhD,MACF,IAAK,SAEHwgB,EAAW/iB,EAAMG,UAAS,GAC1B,MACF,IAAK,QAGH,MAAMqnC,EAAKxnC,EAAM2d,gBAAgB8pB,WAAW,OAAOnqB,UACnDyF,EAAW/iB,EAAMonC,QAAQ,CAAC5pB,IAAK,CAACjb,KAAMilC,KAAM5nC,MAAMC,GACzC/D,KAAKojC,oBAAoB,QAElC,MACF,QACE3+B,QAAQC,IAAI,4BAA6B,IAAMoN,EAAS,MAG5C,MAAZmV,GACFA,EAAS3iB,OAAOC,IACdvE,KAAKqiC,YAAY99B,EAAIC,QAAS,UAMpCg/B,mBACExjC,KAAKqiC,cAELjW,cAA0BA,GAAeme,gBAAgBviC,OAAO0kB,SAASxiB,KAAM,aAIjFu5B,wBAAwBmI,EAAQC,EAAWC,EAASC,EAAOC,GAEzDhsC,KAAKqiC,cAELriC,KAAKmE,OAAOmkC,QAAQtoC,KAAK0O,MAAMyd,eAC5BroB,MAAK,IACG9D,KAAKmE,OAAO8nC,mBAAmBL,EAAQC,EAC5C,CAAC/4B,OAAQg5B,EAASrvB,KAAMuvB,EAAOrR,KAAM96B,eAAkBksC,OACxDjoC,MAAMC,IACHA,EAAKssB,MAAQ,KAAoB,wBAAbtsB,EAAKkQ,KAC3BjU,KAAK0iC,yBAAyB3+B,EAAKR,QAEnCvD,KAAK2iC,sBAAsB3iC,SAE5BsE,OAAOC,IACRvE,KAAKqiC,YAAY99B,EAAIC,QAAS,UAIpCk/B,2BAA2BtL,EAAU5H,EAAK7O,GAGxC,GAFA3hB,KAAKqiC,cAED7R,GAAO7O,EAAQ,CACjB,MAAMpe,EAAS,GACXitB,IACFjtB,EAAOuP,OAAS0d,GAEd7O,IACFpe,EAAOoe,OAASA,GAElB3hB,KAAKmE,OAAO2xB,aAAawV,QAAQ,CAACjpB,KAAM9e,IAASe,OAAOC,IACtDvE,KAAKqiC,YAAY99B,EAAIC,QAAS,UAG9B4zB,GACFp4B,KAAKmE,OAAO+nC,mBAAmB,KAAMlsC,KAAKmE,OAAOgoC,kBAAmB/T,GAAU9zB,OAAOC,IACnFvE,KAAKqiC,YAAY99B,EAAIC,QAAS,UAKpCo/B,0BAA0BwI,GACxB,MAAM/S,EAAKr5B,KAAKmE,OAAO2xB,aACjB4V,EAAKrS,EAAGxX,gBAAgB8pB,WAAWS,EAAK,KAAO,MAAM5qB,UAC3D6X,EAAGiS,QAAQ,CAAC5pB,IAAK,CAACjb,KAAMilC,KAAMpnC,OAAOC,IACnCvE,KAAKqiC,YAAY99B,EAAIC,QAAS,UAIlCm/B,+BAA+BlnB,GAC7Bzc,KAAKmE,OAAO2xB,aAAawV,QAAQ,CAAC7uB,KAAMA,IACrCnY,OAAOC,IACNvE,KAAKqiC,YAAY99B,EAAIC,QAAS,UAKpCq/B,iBACE7jC,KAAKqiC,cAELjW,cAA0BA,GAAeme,gBAAgBviC,OAAO0kB,SAASxiB,KACvElK,KAAK0O,MAAMsE,SAAW,OAAS,aAInC8wB,qBAAqB8B,GACnB,MAAMzZ,EAAgByZ,EAASzZ,eAAiBnsB,KAAK0O,MAAMyd,cACrDkT,EAAYuG,EAASvG,WAAar/B,KAAK0O,MAAM2wB,UAC/Cr/B,KAAKmE,SACPnE,KAAKmE,OAAOqjC,kBAAepxB,EAC3BpW,KAAKmE,OAAOmmC,cAEdtqC,KAAKmE,OAAS29B,GAAUwF,QAAQnb,EAAekT,EAAWr/B,KAAKC,MAAM+C,KAAK+E,QAC1E/H,KAAKmE,OAAOojC,UAAYvnC,KAAKuiC,gBAC7BviC,KAAKmE,OAAOqjC,aAAexnC,KAAK4iC,iBAEhC5iC,KAAK+O,SAAS,CACZod,cAAeA,EACfkT,UAAWA,IAEb7H,aAA2B,WAAY,CACrCrL,cAAeA,EACfkT,UAAWA,IAGbjT,cAA0BA,GAAeme,gBAAgBviC,OAAO0kB,SAASxiB,KAAM,KAIjF65B,oBACE3X,cAA0BA,GAAeme,gBAAgBviC,OAAO0kB,SAASxiB,KACvElK,KAAK0O,MAAMsE,SAAW,UAAY,KAItCgxB,oBACE5X,cAA0BA,GAAeme,gBAAgBviC,OAAO0kB,SAASxiB,KACvElK,KAAK0O,MAAMsE,SAAW,UAAY,KAItCqxB,oBAGErkC,KAAK0nC,OAAO2E,gBAAe,KACzBrsC,KAAKukC,sBAGPvkC,KAAK0nC,OAAO4E,WAAWC,QAMzBjI,gBAAgBkI,GACVA,EACGxsC,KAAK0O,MAAMs3B,eAUdhmC,KAAK+O,SAAS,CAACysB,eAAe,IAC9BhE,gBAA8B,WAAY,CAACgE,eAAe,KAV1Dx7B,KAAK0nC,OAAO+E,oBAAoB3oC,MAAK,KACnC9D,KAAKukC,sBACJjgC,OAAOC,IACRvE,KAAKqiC,YAAY99B,EAAIC,QAAS,OAC9BxE,KAAK+O,SAAS,CAACysB,eAAe,EAAOwK,cAAe,OACpDxO,gBAA8B,WAAY,CAACgE,eAAe,IAC1D/2B,QAAQC,IAAI,sCAAuCH,MAM9CvE,KAAK0O,MAAMs3B,cACpBhmC,KAAK0nC,OAAOgF,YAAY1sC,KAAK0O,MAAMs3B,eAAe1hC,OAAOC,IACvDE,QAAQC,IAAI,0BAA2BH,MACtCwtB,SAAQ,KACTyF,gBAA8B,WAAY,CAACgE,eAAe,IAC1D/D,aAAaQ,WAAW,kBACxBj4B,KAAK+O,SAAS,CAACysB,eAAe,EAAOwK,cAAe,WAGtDhmC,KAAK+O,SAAS,CAACysB,eAAe,EAAOwK,cAAe,OACpDxO,gBAA8B,WAAY,CAACgE,eAAe,KAI9D+I,mBACEvkC,KAAK0nC,OAAOiF,WAAW7oC,MAAM8oC,IACvBA,GAAkB5sC,KAAK0O,MAAMs3B,gBAC/BhmC,KAAKmE,OAAO+jC,eAAe0E,GAAgB,GAC3CpV,aAA2B,iBAAkBoV,IAE/C5sC,KAAK+O,SAAS,CAACi3B,cAAe4G,EAAgBpR,eAAe,IAC7DhE,gBAA8B,WAAY,CAACgE,eAAe,OACzDl3B,OAAOC,IACRvE,KAAKqiC,YAAY99B,EAAIC,QAAS,OAC9BC,QAAQC,IAAI,oCAAqCH,MAIrD0/B,0BAA0BuI,GACxBxsC,KAAK+O,SAAS,CAACusB,cAAekR,IAC9BhV,gBAA8B,WAAY,CACxCsO,kBAAmB0G,IAIvBtI,cAAc5J,EAAQrwB,GACTjK,KAAKmE,OAAO2xB,aACpBwV,QAAQ,CAAC3Q,KAAM,CAACC,KAAMN,EAAQriB,IAAKhO,KAAS3F,OAAOC,IACpDvE,KAAKqiC,YAAY99B,EAAIC,QAAS,UAIlC2/B,iBAAiB7J,EAAQrwB,GACZjK,KAAKmE,OAAO2xB,aACpB+W,cAAcvS,EAAQrwB,GAAO3F,OAAOC,IACrCvE,KAAKqiC,YAAY99B,EAAIC,QAAS,UAIlC4/B,kBAAkB9J,EAAQrT,GACxBjnB,KAAK0iC,yBAAyB,CAAC/H,KAAM,CAACL,KAIxCkK,wBACE,MAAM5X,EAASR,GAAeS,aAAa7kB,OAAO0kB,SAASxiB,MAC3D,IAAIoiB,EAAO,GACP,CAAC,WAAW,UAAU,UAAU,SAASxW,SAAS8W,EAAON,KAAK,IAChEA,EAAO,OACE,WAAaM,EAAON,KAAK,GAClCA,EAAO,WACEtsB,KAAK0O,MAAMsE,WACpBsZ,EAAO,YAETM,EAAON,KAAK,GAAKA,EACbM,EAAOrpB,gBACFqpB,EAAOrpB,OAAO8sB,YACdzD,EAAOrpB,OAAO+2B,cACd1N,EAAOrpB,OAAOglC,KAEvBnc,cAA0BA,GAAeU,eAAeF,EAAON,KAAMM,EAAOrpB,SAC5EvD,KAAK+O,SAAS,CAACoV,UAAW,GAAID,WAAY,OAI5C4oB,eAAe5iC,GACbkiB,cAA0BA,GAAeme,gBAAgBviC,OAAO0kB,SAASxiB,KAAMA,IAIjFu6B,wBAAwBxgC,EAAWusB,EAAK6N,EAAM5hB,EAAM/K,GAElD,GAAIzN,GAAajE,KAAKmE,OAAO4oC,cAAc9oC,GAEzC,YADAjE,KAAKojC,oBAAoBn/B,GAI3B,MAAMV,EAAS,GACX1D,mBAAsBoE,IAExBV,EAAOme,IAAM,CAACjb,KAAMtF,GAEpBoC,EAAO8e,KAAO,CAACV,OAAQ,CAACxC,KAAMhe,MAE9B8C,EAAYA,GAAajE,KAAKmE,OAAO6oC,kBAAkBt7B,GACvDnO,EAAO8e,KAAO,CAACvP,OAAQ0d,EAAK5d,QAAS,CAAChB,QAASysB,IAC/C96B,EAAOkZ,KAAOA,GAEhBlZ,EAAOosB,WAAa1rB,EACpBjE,KAAK+O,SAAS,CAAC2gB,eAAgBnsB,IAAS,KAAOvD,KAAKojC,oBAAoBn/B,MAI1EygC,sBAAsBuI,EAASC,GACzBltC,KAAK0O,MAAM2D,eAAiB46B,GAAWA,GAAWC,GAIpDltC,KAAK+O,SAAS,CAACsD,cAAe66B,IAAU,KACtC9gB,cAA0BA,GAAeuE,YAAY,GAAIuc,OAK/DvI,yBAAyB1gC,EAAWusB,EAAK6N,EAAM8O,GAC7C,MAAMjpC,EAAQlE,KAAKmE,OAAOC,SAASH,GACnC,GAAIC,EAAO,CACT,MAAMX,EAAS,GACXitB,IACFjtB,EAAOuP,OAAS0d,GAEd6N,IACF96B,EAAOqP,QAAWyrB,IAASx+B,aACzBA,aAAkB,CAAC+R,QAASysB,IAE5B8O,IACF5pC,EAAOoe,OAASwrB,GAElBjpC,EAAMonC,QAAQ,CAACjpB,KAAM9e,IAASe,OAAOC,IACnCvE,KAAKqiC,YAAY99B,EAAIC,QAAS,WAKpCogC,wBAAwB3gC,EAAWwC,EAAMiJ,GACvC,MAAMxL,EAAQlE,KAAKmE,OAAOC,SAASH,GACnC,GAAIC,EAAO,CACT,MAAMwnC,EAAKxnC,EAAM2d,gBACbnS,GACFg8B,EAAG0B,YAAY3mC,GACfA,EAAOilC,EAAGnqB,aAEVmqB,EAAGC,WAAWllC,GACdA,EAAOilC,EAAGlqB,WAEZtd,EAAMonC,QAAQ,CAAC5pB,IAAK,CAAC/c,KAAM+K,EAAKjJ,KAAMA,KAAQnC,OAAOC,IACnDvE,KAAKqiC,YAAY99B,EAAIC,QAAS,WAKpCyc,kBAAkBhd,EAAWwY,GAC3B,MAAMvY,EAAQlE,KAAKmE,OAAOC,SAASH,GAC/BC,GACFA,EAAMonC,QAAQ,CAAC7uB,KAAMA,IAAOnY,OAAOC,IACjCvE,KAAKqiC,YAAY99B,EAAIC,QAAS,UAKpCqgC,eACE1pB,GAAc,GAGdsc,aAAaQ,WAAW,cACxBR,aAAaQ,WAAW,kBACxBR,aAAaQ,WAAW,YACpBj4B,KAAK0O,MAAMs3B,eACbhmC,KAAK0nC,OAAOgF,YAAY1sC,KAAK0O,MAAMs3B,eAGjChmC,KAAKmE,SACPnE,KAAKmE,OAAOqjC,kBAAepxB,EAC3BpW,KAAKmE,OAAOmmC,cAEdtqC,KAAK+O,SAAS/O,KAAK+hC,iBACnB/hC,KAAKmE,OAAS29B,GAAUwF,QAAQtnC,KAAK0O,MAAMyd,cAAensB,KAAK0O,MAAM2wB,UAAWr/B,KAAKC,MAAM+C,KAAK+E,QAChG/H,KAAKmE,OAAOojC,UAAYvnC,KAAKuiC,gBAC7BviC,KAAKmE,OAAOqjC,aAAexnC,KAAK4iC,iBAChCxW,cAA0B,IAG5B2P,sBACE/7B,KAAKmE,OAAOkpC,gBAAe,GAAMvpC,MAAMC,IACrC/D,KAAK6kC,kBAITC,4BAA4B7gC,GAC1B,MAAMC,EAAQlE,KAAKmE,OAAOC,SAASH,GAC9BC,GAKLA,EAAMiC,gBAAe,GAAM7B,OAAOC,IAChCvE,KAAKqiC,YAAY99B,EAAIC,QAAS,UAIlCugC,wBAAwB9gC,GACtB,MAAMC,EAAQlE,KAAKmE,OAAOC,SAASH,GAC9BC,GAILA,EAAMspB,OAAM,GAAM1pB,MAAMC,IAEtBqoB,cAA0BA,GAAeuE,YAAY3oB,OAAO0kB,SAASxiB,KAAM,QAC1E5F,OAAOC,IACRvE,KAAKqiC,YAAY99B,EAAIC,QAAS,UAIlCwgC,wBAAwB/gC,GACtB,MAAMC,EAAQlE,KAAKmE,OAAOC,SAASH,GAC9BC,GAILA,EAAMyC,WAAW,KAAM,OAAO7C,MAAMC,IAElCqoB,cAA0BA,GAAeuE,YAAY3oB,OAAO0kB,SAASxiB,KAAM,QAC1E5F,OAAOC,IACRvE,KAAKqiC,YAAY99B,EAAIC,QAAS,UAIlCygC,kBAAkBhhC,GAChB,MAAMC,EAAQlE,KAAKmE,OAAOC,SAASH,GAC9BC,IAKLlE,KAAKmE,OAAOmpC,QAAQztC,cAAkBA,sBAAyB,KAAM,CACnE,OAAU,SACV,OAAUoE,KAIZC,EAAMyC,WAAW,KAAM,OAAO7C,MAAMC,IAElCqoB,cAA0BA,GAAeuE,YAAY3oB,OAAO0kB,SAASxiB,KAAM,QAC1E5F,OAAOC,IACRvE,KAAKqiC,YAAY99B,EAAIC,QAAS,WAIlC0gC,sBAAsB3hC,EAAQygB,GAC5BhkB,KAAK+O,SAAS,CACZ63B,oBAAoB,EACpBE,mBAAoB,CAACt/B,EAAGjE,EAAOiE,EAAGG,EAAGpE,EAAOoE,GAC5Co/B,kBAAmBxjC,EACnByjC,iBAAkBhjB,GAAahkB,KAAKmlC,wBAAwB5hC,EAAOU,WACnE4iC,kBAAmBpnC,gBAAqBO,MAAMyrB,0BAIlD0Z,wBAAwBlhC,GACtB,MAAMC,EAAQlE,KAAKmE,OAAOC,SAASH,GAEnC,IAAIua,GAAQ,EAAO2Y,GAAU,EAAOoW,GAAe,EAAOC,GAAa,EAAO7yB,GAAU,EAAO8vB,GAAW,EAC1G,GAAIvmC,EAAO,CACTspC,EAAatpC,EAAMqrB,eACnBkb,EAAWvmC,EAAMwmC,aAEjB,MAAMx5B,EAAMhN,EAAM2d,gBACd3Q,IACFsN,EAAQtN,EAAIG,UACZ8lB,GAAWjmB,EAAII,WACfi8B,GAAgBr8B,EAAII,SAAS,QAC7BqJ,EAAUzJ,EAAI8Q,aAIlB,MAAO,CACLwrB,EAAa,CACXptC,MAAOJ,KAAKC,MAAM+C,KAAKD,cAAc,CAACrC,GAAI,mBAC1C4C,QAAStD,KAAKslC,oBACZ,KACJkI,EAAa,iBAAmB,KAChCA,GAAc7yB,EAAU,sBAAwB,KAChD6D,EAAS2Y,EAAU,KAAO,eAAkB,aAC5CoW,EAAe,gBAAkB,cAChC9C,EAA6B,KAAlB,gBACZ,gBAIJrF,wBACEplC,KAAK+O,SAAS,CACZ63B,oBAAoB,EACpBE,mBAAoB,KACpBC,kBAAmB,KACnBF,kBAAmB,OAIvBlB,wBAAwB7zB,EAAQg4B,EAASvmC,GACzB,iBAAVuO,GACEg4B,GAAWvmC,EAAOU,WAAaV,EAAOU,WAAajE,KAAK0O,MAAM2D,eAChEy3B,EAAQhmC,MAAK,KACX9D,KAAKojC,oBAAoB,SAMjCiC,gBAAgBjlC,EAAOC,EAASM,EAAW8sC,EAAantC,EAAUotC,GAChE1tC,KAAK+O,SAAS,CACZk4B,cAAc,EACdC,YAAa,CACX9mC,MAAOA,EACPC,QAASA,EACTM,UAAWA,EACXC,QAAS6sC,EACTntC,SAAUA,EACVE,OAAQktC,KAKdpI,qBACElZ,cAA0BA,GAAe8R,YAAYl2B,OAAO0kB,SAASxiB,KAAM,QAAQ,IACnFlK,KAAK+O,SAAS,CAAC23B,eAAe,IAGhCnB,qBACEnZ,cAA0BA,GAAe+R,eAAen2B,OAAO0kB,SAASxiB,KAAM,SAC9ElK,KAAK+O,SAAS,CAAC23B,eAAe,IAGhChmB,0BAA0Bzc,EAAWmU,EAAOpC,GAC1C,IAAK/R,EACH,OAGF,MAAMC,EAAQlE,KAAKmE,OAAOC,SAASH,GAC9BC,IAIDkU,GAASA,EAAMlR,OAAS,GAC1BkR,EAAMtR,KAAK4I,IACTxL,EAAMypC,OAAOj+B,EAAK,MAAMpL,OAAOC,IAC7BvE,KAAKqiC,YAAY99B,EAAIC,QAAS,aAKhCwR,GAAWA,EAAQ9O,OAAS,GAC9B8O,EAAQlP,KAAK4I,IACXxL,EAAMU,gBAAgB8K,GAAKpL,OAAOC,IAChCvE,KAAKqiC,YAAY99B,EAAIC,QAAS,cAMtCghC,iCAAiC7K,EAAMtK,GACrC,GAAIrwB,KAAKmE,OAAO0lC,kBAAmB,CACtB7pC,KAAKmE,OAAO2xB,aACpBwV,QAAQ,CAAC3Q,KAAM,CAACC,KAAMD,EAAMnU,KAAM6J,KAClCvsB,MAAK,KACJsoB,cAA0B,OAE3B9nB,OAAOC,IACNvE,KAAKqiC,YAAY99B,EAAIC,QAAS,eAGlCxE,KAAK+O,SAAS,CAACixB,WAAYrF,EAAMoF,SAAU1P,IAC3CrwB,KAAKyiC,QAAQ,KAAM,KAAM,CAAC7H,KAAMD,EAAMnU,KAAM6J,IAIhDoV,2BAA2BnL,EAAQrwB,GAEjCjK,KAAKmE,OAAOmkC,UACTxkC,MAAK,IACG9D,KAAKmE,OAAOypC,uBAAuB,QAAStT,EAAQrwB,KAE5D3F,OAAOC,IAENvE,KAAKqiC,YAAY99B,EAAIC,QAAS,UAIpCkhC,oBAAoBhH,EAAQmP,EAAapP,IACvCA,EzD7pCG,SAAwBqP,GAC7B,GAAIA,EAAK,CACPA,EAAMA,EAAI3zB,QAAQ,KAAM,KAAKA,QAAQ,KAAM,KAC3C,IACE2zB,EAAMC,KAAKC,KAAKF,IAChB,MAAMvpC,GACNE,QAAQC,IAAI,qCAAsCH,GAClDupC,EAAM,MAGV,OAAOA,EyDmpCGG,CAAexP,IAIrBz+B,KAAKmE,OAAOmkC,UACTxkC,MAAK,IACG9D,KAAKmE,OAAO+nC,mBAAmB,KAAM,KAAM2B,EAAa,CAACpP,MAAOA,MAExEn6B,OAAOC,IAENvE,KAAKqiC,YAAY99B,EAAIC,QAAS,UARlCxE,KAAKqiC,YAAYriC,KAAKC,MAAM+C,KAAKD,cAAc,CAACrC,GAAI,2BAA4B,OAapFX,SACE,OACE,yBAAKW,GAAG,iBACLV,KAAK0O,MAAMk4B,mBACV,kBAAC,EAAD,CACEziC,OAAQnE,KAAKmE,OACbkD,OAAQrH,KAAK0O,MAAMm4B,kBACnBt/B,QAASvH,KAAK0O,MAAMo4B,mBACpBvjC,OAAQvD,KAAK0O,MAAMq4B,kBACnBrhC,MAAO1F,KAAK0O,MAAMs4B,iBAClBzhC,KAAMvF,KAAKolC,sBACX3hC,YAAazD,KAAKqlC,gBAClBx/B,SAAU7F,KAAK2lC,wBACf3hC,eAAiBC,IACXA,GAAajE,KAAK0O,MAAM2D,eAC1BrS,KAAKojC,oBAAoB,OAG7Bt9B,QAAS9F,KAAKqiC,cAEhB,KAEF,kBAACviC,EAAD,CACEI,QAASF,KAAK0O,MAAMu4B,aACpB7mC,MAAOJ,KAAK0O,MAAMw4B,YAAY9mC,MAC9BC,QAASL,KAAK0O,MAAMw4B,YAAY7mC,QAChCC,SAAUN,KAAK0O,MAAMw4B,YAAY5mC,SAAY,KAAQN,KAAK+O,SAAS,CAACk4B,cAAc,KAAc,KAChGzmC,OAAQR,KAAK0O,MAAMw4B,YAAY1mC,OAC/BG,UAAW,KAAQX,KAAK+O,SAAS,CAACk4B,cAAc,IAASjnC,KAAK0O,MAAMw4B,YAAYvmC,aAChFC,QAASZ,KAAK0O,MAAMw4B,YAAYtmC,UAElC,kBAAC,GAAD,CACEuD,OAAQnE,KAAKmE,OACbiP,UAAWpT,KAAK0O,MAAM0E,UACtB6Q,cAAejkB,KAAK0O,MAAMuV,cAC1B8Q,SAAU/0B,KAAK0O,MAAMuV,eAA4C,cAA3BjkB,KAAK0O,MAAMi4B,YACjDj4B,MAAO1O,KAAK0O,MAAMw3B,kBAClB9lC,MAAOJ,KAAK0O,MAAMy3B,eAClBt8B,OAAQ7J,KAAK0O,MAAM03B,gBACnBjO,MAAOn4B,KAAK0O,MAAMypB,MAClBnlB,SAAUhT,KAAK0O,MAAMsE,SACrB0tB,cAAe1gC,KAAK0O,MAAMgyB,cAC1BD,mBAAoBzgC,KAAK0O,MAAM+xB,mBAE/Btc,UAAWnkB,KAAK0O,MAAMyV,UACtBD,WAAYlkB,KAAK0O,MAAMwV,WACvBqc,YAAavgC,KAAK0O,MAAM6xB,YACxBC,gBAAiBxgC,KAAK0O,MAAM8xB,gBAE5BnuB,cAAerS,KAAK0O,MAAM2D,cAC1B6kB,SAAUl3B,KAAK0O,MAAMwoB,SACrB8I,WAAYhgC,KAAK0O,MAAMsxB,WACvBD,SAAU//B,KAAK0O,MAAMqxB,SAErBV,UAAWr/B,KAAK0O,MAAM2wB,UACtB/D,cAAet7B,KAAK0O,MAAM4sB,cAC1BE,cAAex7B,KAAK0O,MAAM8sB,cAC1BD,qBAAsBv7B,KAAK0O,MAAM6sB,qBACjCE,cAAez7B,KAAK0O,MAAM+sB,cAC1BtP,cAAensB,KAAK0O,MAAMyd,cAC1BD,cAAelsB,KAAK0O,MAAMwd,cAE1ByU,iBAAkB3gC,KAAK8jC,qBACvBnN,SAAU32B,KAAKwjC,iBACf/M,WAAYz2B,KAAK6jC,eACjBvK,gBAAiBt5B,KAAK8sC,eACtBzM,eAAgBrgC,KAAKsiC,mBACrBzJ,gBAAiB74B,KAAKyjC,wBACtBpJ,gBAAiBr6B,KAAK0jC,2BACtB9C,oBAAqB5gC,KAAK2jC,+BAC1BvI,0BAA2Bp7B,KAAKskC,gBAChCnJ,sBAAuBn7B,KAAKikC,0BAC5B5I,sBAAuBr7B,KAAK4jC,0BAC5BnJ,UAAWz6B,KAAKkkC,cAChBnJ,aAAc/6B,KAAKmkC,iBACnBrJ,cAAe96B,KAAKokC,kBACpB/wB,gBAAiBrT,KAAKojC,oBACtBhF,cAAep+B,KAAKykC,wBACpBtI,SAAUn8B,KAAK6kC,aACf5I,gBAAiBj8B,KAAK+7B,oBACtBt4B,YAAazD,KAAKqlC,gBAClB1xB,SAAU3T,KAAKwkC,sBACf1+B,QAAS9F,KAAKqiC,YACdxB,sBAAuB7gC,KAAKwlC,iCAC5B1E,uBAAwB9gC,KAAKylC,2BAC7B1E,gBAAiB/gC,KAAK0lC,oBACtBnO,cAAev3B,KAAK+jC,kBACpB3H,cAAep8B,KAAKgkC,kBAEpBvgB,WAAYzjB,KAAKkjC,WACjB3E,cAAev+B,KAAK0O,MAAM6vB,cAC1BhB,iBAAkBv9B,KAAK+9B,qBAEvBntB,gBAAiB5Q,KAAKklC,wBAExB,kBAAC,GAAD,CACE/gC,OAAQnE,KAAKmE,OACbiP,UAAWpT,KAAK0O,MAAM0E,UACtBoc,MAAOxvB,KAAK0O,MAAM8gB,MAClBze,OAAQ/Q,KAAK0O,MAAM63B,oBACnBr1B,IAAKlR,KAAK0O,MAAM83B,iBAChBviB,cAAejkB,KAAK0O,MAAMuV,cAC1B6D,cAAe9nB,KAAK0O,MAAMoZ,cAC1BmH,eAAgBjvB,KAAK0O,MAAMugB,eAC3B8F,SAAU/0B,KAAK0O,MAAMuV,gBACS,eAA3BjkB,KAAK0O,MAAMi4B,aAAgC3mC,KAAK0O,MAAMg4B,eACzDxiC,MAAOlE,KAAK0O,MAAM2D,cAClBW,SAAUhT,KAAK0O,MAAMsE,SACrBkZ,cAAelsB,KAAK0O,MAAMwd,cAC1BC,cAAensB,KAAK0O,MAAMyd,cAC1BmD,mBAAoBtvB,KAAK0O,MAAM4gB,mBAE/BnL,UAAWnkB,KAAK0O,MAAMyV,UACtBD,WAAYlkB,KAAK0O,MAAMwV,WACvBqc,YAAavgC,KAAK0O,MAAM6xB,YACxBC,gBAAiBxgC,KAAK0O,MAAM8xB,gBAE5B9Q,eAAgB1vB,KAAK0O,MAAMghB,eAE3B0G,mBAAoBp2B,KAAKqjC,uBACzBnU,OAAQlvB,KAAKijC,OACbn9B,QAAS9F,KAAKqiC,YACd/R,kBAAmBtwB,KAAK0kC,sBACxB9zB,gBAAiB5Q,KAAKklC,sBACtBziB,oBAAqBziB,KAAK4kC,wBAC1BpR,UAAWxzB,KAAKujC,wBAChBtQ,YAAajzB,KAAKsjC,oBAEnBtjC,KAAK0O,MAAMg4B,cACV,kBAAC,GAAD,CACEviC,OAAQnE,KAAKmE,OACbiP,UAAWpT,KAAK0O,MAAM0E,UACtB6Q,cAAejkB,KAAK0O,MAAMuV,cAC1B/f,MAAOlE,KAAK0O,MAAM2D,cAClB+R,mBAAoBpkB,KAAK0O,MAAM0V,mBAC/BpR,SAAUhT,KAAK0O,MAAMsE,SAErBmR,UAAWnkB,KAAK0O,MAAMyV,UACtBD,WAAYlkB,KAAK0O,MAAMwV,WACvBqc,YAAavgC,KAAK0O,MAAM6xB,YACxBC,gBAAiBxgC,KAAK0O,MAAM8xB,gBAE5Bje,kBAAmBviB,KAAK2kC,yBACxBhxB,SAAU3T,KAAKulC,mBACf9hC,YAAazD,KAAKqlC,gBAClB5iB,oBAAqBziB,KAAK4kC,wBAC1BlhB,sBAAuB1jB,KAAK0gB,0BAC5BiD,iBAAkB3jB,KAAK8kC,4BACvBlhB,aAAc5jB,KAAK+kC,wBACnBlhB,aAAc7jB,KAAKglC,wBACnBlhB,cAAe9jB,KAAKilC,kBACpBiJ,YAAaluC,KAAKmuC,yBAClBpqB,kBAAmB/jB,KAAKihB,kBACxBwC,WAAYzjB,KAAKkjC,WACjBp9B,QAAS9F,KAAKqiC,YAEdzxB,gBAAiB5Q,KAAKklC,wBAGxB,OAOV,QAAer9B,gBAAWi6B,ICvgD1B,MAAM,OAAEv+B,IAAW6oB,GAAeS,aAAa7kB,OAAO0kB,SAASxiB,MACzD/B,GAAY5E,IAAUA,GAAO6qC,IAChCnmC,UAAUomC,WAAapmC,UAAUomC,UAAU,IAC5CpmC,UAAUE,UACVF,UAAUC,cACV,KAGIomC,GAAenmC,GAAS0K,cAAcvE,MAAM,QAAQ,GAGpD5M,GACJ6sC,EAAYpmC,KACZomC,EAAYD,KACZC,KAEF9uC,WACE,kBAAC,EAAA+uC,aAAD,CAAczmC,OAAQI,GAAUzG,SAAUA,GAAU+sC,cAAejvC,cACjE,kBAAC,GAAD,OAEFsF,SAASuW,eAAe,e","file":"index.prod.js","sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var __WEBPACK_NAMESPACE_OBJECT__ = React;","var __WEBPACK_NAMESPACE_OBJECT__ = ReactDOM;","var __WEBPACK_NAMESPACE_OBJECT__ = ReactIntl;","var __WEBPACK_NAMESPACE_OBJECT__ = firebase;","var __WEBPACK_NAMESPACE_OBJECT__ = Tinode;","var __WEBPACK_NAMESPACE_OBJECT__ = firebase.messaging;","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Alert extends React.PureComponent {\n  render() {\n    return this.props.visible ?\n      <div className=\"alert-container\">\n        <div className=\"alert\">\n          <div className=\"title\">{this.props.title}</div>\n          <div className=\"content\">{this.props.content}</div>\n          <div className=\"dialog-buttons\">\n            {this.props.onReject ?\n              <button className=\"outline\" onClick={this.props.onReject}>\n                {this.props.reject || <FormattedMessage id=\"button_cancel\" />}\n              </button>\n              :\n              null\n            }\n            <button className=\"blue\" onClick={this.props.onConfirm}>\n              {this.props.confirm || <FormattedMessage id=\"button_ok\" />}\n            </button>\n          </div>\n        </div>\n      </div>\n    :\n    null;\n  }\n};\n","// This is a generated file. Don't edit.\n\nexport const PACKAGE_VERSION = \"0.16.10\";\n","import { PACKAGE_VERSION } from './version.js';\n\n// Name of this application, used in the User-Agent.\nexport const APP_NAME = 'TinodeWeb/' + (PACKAGE_VERSION || '0.16');\n\n// API key. Use https://github.com/tinode/chat/tree/master/keygen to generate your own\nexport const API_KEY = 'AQEAAAABAAD_rAp4DJh05a1HAwFT3A6K';\n\n// The array of possible hosts to connect to.\nexport const KNOWN_HOSTS = {hosted: 'web.tinode.co', local: 'localhost:6060'};\n\n// Default host name and port to connect to.\nexport const DEFAULT_HOST = KNOWN_HOSTS.hosted;\n\n// Enable console logging.\nexport const LOGGING_ENABLED = true;\n\n// Minimum time between two keypress notifications, milliseconds.\nexport const KEYPRESS_DELAY = 3*1000;\n// Delay before sending a {note} for reciving a message, milliseconds.\nexport const RECEIVED_DELAY = 500;\n// Delay before sending a read notification, milliseconds.\nexport const READ_DELAY = 1000;\n\n// The shortest allowed tag length. Matches the value on the server.\nexport const MIN_TAG_LENGTH = 2;\n// The greatest allowed tag length. Matches the value on the server.\nexport const MAX_TAG_LENGTH = 96;\n// The maximum number of tags allowed. Matches the value on the server.\nexport const MAX_TAG_COUNT = 16;\n\n// Access mode for P2P subscriptions initiated by the current user.\nexport const DEFAULT_P2P_ACCESS_MODE = 'JRWPS';\n// Access mode for new group topics created by the current user.\nexport const NEW_GRP_ACCESS_MODE = 'JRWPSAO';\n// Access mode for a channel.\nexport const CHANNEL_ACCESS_MODE = 'JR';\n\n// Access mode for no access.\nexport const NO_ACCESS_MODE = 'N';\n\n// Mediaquery breakpoint between desktop and mobile, in px. Should match the value\n// in @media (max-size: 640px) in base.css\nexport const MEDIA_BREAKPOINT = 640;\n// Size of css 'rem' unit in pixels. Default 1rem = 10pt = 13px.\nexport const REM_SIZE = 13;\n\n// Size of the avatar image: When an avatar image is uploaded, it's resized to\n// a square of this size.\nexport const AVATAR_SIZE = 128;\n\n// Size of the broken_image shown in MessagesView\nexport const BROKEN_IMAGE_SIZE = 32;\n\n// Number of chat messages to fetch in one call.\nexport const MESSAGES_PAGE = 24;\n\n// Default maximum in-band (included directly into the message) attachment size which fits into\n// a message of 256K in size. The actual binary size of the attachment should be smaller due to\n// base64 encoding expansion and some overhead, for instance 1024 bytes.\n// Increase this limit to a greater value in production, if desired. Also increase\n// max_message_size in the server config.\nexport const MAX_INBAND_ATTACHMENT_SIZE = 262144;\n\n// Absolute maximum attachment size to be used with the server = 8MB. Increase to\n// something like 100MB in production.\nexport const MAX_EXTERN_ATTACHMENT_SIZE = 1 << 23;\n\n// Maximum allowed linear dimension of an inline image in pixels. Larer images will be shrunk\n// to make the larger dimension fit under this size. You may want to adjust it to 1600 or\n// 2400 for production.\nexport const MAX_IMAGE_DIM = 1024;\n\n// Linear dimensions of image preview: shrink image under this size for previews.\nexport const IMAGE_PREVIEW_DIM = 64;\n\n// Maximum number of online users to be shown in a topic title bar. Others will be\n// hidden under \"+X more\"\nexport const MAX_ONLINE_IN_TOPIC = 4;\n\n// Maximum length of user name, topic title, and private comment.\nexport const MAX_TITLE_LENGTH = 60;\n\n// Link for \"Contact Us\".\nexport const LINK_CONTACT_US = 'email:info@tinode.co';\n\n// Link to Privacy Policy.\nexport const LINK_PRIVACY_POLICY = 'https://tinode.co/privacy.html';\n\n// Link to Terms of Service.\nexport const LINK_TERMS_OF_SERVICE = 'https://tinode.co/terms.html';\n","// Context Menu: popup/dropdown menu.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { injectIntl, defineMessages } from 'react-intl';\n\nimport { REM_SIZE } from '../config.js';\nimport HashNavigation from '../lib/navigation.js';\n\nconst messages = defineMessages({\n  info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  },\n  clear_messages: {\n    id: 'menu_item_clear_messages',\n    defaultMessage: 'Clear messages',\n    description: 'Delete all messages'\n  },\n  clear_for_all: {\n    id: 'menu_item_clear_messages_for_all',\n    defaultMessage: 'Clear for All',\n    description: 'Delete all message(s) for all members'\n  },\n  'delete': {\n    id: 'menu_item_delete',\n    defaultMessage: 'Delete',\n    description: 'Delete selected messages'\n  },\n  delete_for_all: {\n    id: 'menu_item_delete_for_all',\n    defaultMessage: 'Delete for All',\n    description: 'Delete selected message(s) for all members'\n  },\n  send_retry: {\n    id: 'menu_item_send_retry',\n    defaultMessage: 'Retry',\n    description: 'Retry sending message'\n  },\n  mute: {\n    id: 'menu_item_mute',\n    defaultMessage: 'Mute',\n    description: 'Turn off notifications'\n  },\n  unmute: {\n    id: 'menu_item_unmute',\n    defaultMessage: 'Unmute',\n    description: 'Turn notifications on'\n  },\n  topic_delete: {\n    id: 'menu_item_delete_topic',\n    defaultMessage: 'Delete',\n    description: 'Delete entire topic'\n  },\n  topic_delete_warning: {\n    id: 'topic_delete_warning',\n    defaultMessage: 'Are you sure you want to delete this conversation?',\n    description: 'Alert warning when deleting entire topic'\n  },\n  unblock: {\n    id: 'menu_item_unblock',\n    defaultMessage: 'Unblock',\n    description: 'Unblock topic or user'\n  },\n  // Generic string suitable for either topic or user.\n  block: {\n    id: 'menu_item_block',\n    defaultMessage: 'Block',\n    description: 'Block topic or user'\n  },\n  topic_block_warning: {\n    id: 'topic_block_warning',\n    defaultMessage: 'Are you sure you want to block this conversation?',\n    description: 'Alert warning when blocking a topic.'\n  },\n  member_delete: {\n    id: 'menu_item_member_delete',\n    defaultMessage: 'Remove',\n    description: 'Remove user from topic'\n  },\n  archive: {\n    id: 'menu_item_archive_topic',\n    defaultMessage: 'Archive',\n    description: 'Move topic from the list of active chats to archive'\n  }\n});\n\nclass ContextMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const {formatMessage} = props.intl;\n\n    this.handlePageClick = this.handlePageClick.bind(this);\n    this.handleEscapeKey = this.handleEscapeKey.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n\n    // Preconfigured menu items.\n    this.MenuItems = {\n      'topic_info': {\n        id: 'topic_info',\n        title: formatMessage(messages.info),\n        handler: null\n      },\n      'messages_clear': {\n        id: 'messages_clear',\n        title: formatMessage(messages.clear_messages),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage({id: 'menu_item_clear_messages'}), // title\n            formatMessage({id: 'clear_messages_warning'}), // content\n            (() => { this.deleteMessages(true, false, params, errorHandler); }), // onConfirm\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'messages_clear_hard': {\n        id: 'messages_clear_hard',\n        title: formatMessage(messages.clear_for_all),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage({id: 'menu_item_clear_messages_for_all'}), // title\n            formatMessage({id: 'delete_messages_warning'}), // content\n            (() => { return this.deleteMessages(true, true, params, errorHandler); }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'message_delete': {\n        id: 'message_delete',\n        title: formatMessage(messages.delete),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, false, params, errorHandler);\n        }\n      },\n      'message_delete_hard': {\n        id: 'message_delete_hard',\n        title: formatMessage(messages.delete_for_all),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, true, params, errorHandler);\n        }\n      },\n      'menu_item_send_retry': {\n        id: 'menu_item_send_retry',\n        title: formatMessage(messages.send_retry),\n        handler: (params, errorHandler) => {\n          return this.retryMessage(params, errorHandler);\n        }\n      },\n      'topic_unmute': {\n        id: 'topic_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'topic_mute': {\n        id: 'topic_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'topic_unblock': {\n        id: 'topic_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n      'topic_block': {\n        id: 'topic_block',\n        title: formatMessage(messages.block),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage({id: 'menu_item_block'}), // title\n            formatMessage(messages.topic_block_warning), // content\n            (() => {\n              return this.topicPermissionSetter('-JP', params, errorHandler).then((ctrl) => {\n                this.props.onTopicRemoved(params.topicName);\n                return ctrl;\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_delete': {\n        id: 'topic_delete',\n        title: formatMessage(messages.topic_delete),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage({id: 'menu_item_delete_topic'}), // title\n            formatMessage(messages.topic_delete_warning), // content\n            (() => {\n              const topic = this.props.tinode.getTopic(params.topicName);\n              if (!topic) {\n                console.log(\"Topic not found: \", params.topicName);\n                return;\n              }\n              return topic.delTopic(true).catch((err) => {\n                if (errorHandler) {\n                  errorHandler(err.message, 'err');\n                }\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_archive': {\n        id: 'topic_archive',\n        title: formatMessage(messages.archive),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic) {\n            console.log(\"Topic not found: \", params.topicName);\n            return;\n          }\n          return topic.archive(true).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      // menu_item_edit_permissions is defined elsewhere.\n      'permissions': {\n        id: 'permissions',\n        title: formatMessage({id: 'menu_item_edit_permissions'}),\n        handler: null\n      },\n      'member_delete': {\n        id: 'member_delete',\n        title: formatMessage(messages.member_delete),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic || !params.user) {\n            console.log(\"Topic or user not found: '\" + params.topicName + \"', '\" + params.user + \"'\");\n            return;\n          }\n          return topic.delSubscription(params.user).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      'member_mute': {\n        id: 'member_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'member_unmute': {\n        id: 'member_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'member_block': {\n        id: 'member_block',\n        title: formatMessage(messages.block),\n        handler: this.topicPermissionSetter.bind(this, '-JP')\n      },\n      'member_unblock': {\n        id: 'member_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handlePageClick, false);\n    document.addEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handlePageClick, false);\n    document.removeEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  handlePageClick(e) {\n    if (ReactDOM.findDOMNode(this).contains(e.target)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n  }\n\n  handleEscapeKey(e) {\n    if (e.keyCode === 27) {\n      this.props.hide();\n    }\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n    let item = this.props.items[e.currentTarget.dataset.id];\n    if (typeof item == 'string') {\n      item = this.MenuItems[item];\n    }\n\n    if (!item) {\n      console.log(\"Invalid menu item ID\", e.currentTarget.dataset.id);\n    } else {\n      this.props.onAction(\n        item.id,\n        item.handler(this.props.params, this.props.onError),\n        this.props.params);\n    }\n  }\n\n  // Menu Actions\n\n  deleteMessages(all, hard, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found: \", params.topicName);\n      return;\n    }\n\n    // We don't know if the message is still pending (e.g. attachment is being uploaded),\n    // so try cancelling first. No harm if we can't cancel.\n    // The message can be cancelled if transmission to the server has not\n    // started yet or if the message send has failed.\n    if (!all && topic.cancelSend(params.seq)) {\n      return;\n    }\n    // Can't cancel. Delete instead.\n    const promise = all ?\n      topic.delMessagesAll(hard) :\n      topic.delMessagesList([params.seq], hard);\n\n    return promise.catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Retries sending failed message.\n  retryMessage(params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    // Remove the existing message entry.\n    if (!topic || !topic.flushMessage(params.seq)) {\n      return;\n    }\n    const msg = topic.createMessage(params.content, false);\n    return topic.publishDraft(msg).catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Function is used by context menu to set permissions.\n  topicPermissionSetter(mode, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found\", params.topicName);\n      return;\n    }\n\n    let result = topic.updateMode(params.user, mode);\n    if (errorHandler) {\n      result = result.catch((err) => {\n        errorHandler(err.message, 'err');\n      });\n    }\n    return result;\n  }\n\n  render() {\n    let count = 0;\n    let menu = [];\n    this.props.items.map((item) => {\n      if (typeof item == 'string') {\n        item = this.MenuItems[item];\n      }\n      if (item && item.title) {\n        menu.push(\n          item.title == '-' ?\n            <li className=\"separator\" key={count} />\n            :\n            <li onClick={this.handleClick} data-id={count} key={count}>{item.title}</li>\n        );\n      }\n      count++;\n    });\n\n    // Ensure that menu is inside the app-container.\n    const hSize = 12 * REM_SIZE;\n    const vSize = REM_SIZE * (0.7 + menu.length * 2.5);\n    const left = (this.props.bounds.right - this.props.clickAt.x < hSize) ?\n        (this.props.clickAt.x - this.props.bounds.left - hSize) :\n        (this.props.clickAt.x - this.props.bounds.left);\n    const top = (this.props.bounds.bottom - this.props.clickAt.y < vSize) ?\n        (this.props.clickAt.y - this.props.bounds.top - vSize) :\n        (this.props.clickAt.y - this.props.bounds.top);\n\n    const position = {\n      left: left + 'px',\n      top: top + 'px'\n    };\n\n    return (\n      <ul className=\"menu\" style={position}>\n        {menu}\n      </ul>\n    );\n  }\n}\n\nexport default injectIntl(ContextMenu);\n","// Short representation of time in the past.\nexport function shortDateFormat(then, locale) {\n  locale = locale || window.navigator.userLanguage || window.navigator.language;\n  const now = new Date();\n  if (then.getFullYear() == now.getFullYear()) {\n    // Same year.\n    if (then.getMonth() == now.getMonth() && then.getDate() == now.getDate()) {\n      // Same month and day, show time only.\n      return then.toLocaleTimeString(locale, {hour12: false, hour: '2-digit', minute: '2-digit'});\n    }\n    // Different month and/or day, show month day, time.\n    return then.toLocaleDateString(locale,\n      {hour12: false, month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit'});\n  }\n  // Different year: just show the date.\n  return then.toLocaleDateString(locale, {year: 'numeric', month: 'short', day: 'numeric'});\n}\n\n// Convert seconds to minutes:seconds, i.e. 156 sec -> 2:36.\nexport function secondsToTime(seconds) {\n  const min = Math.floor(seconds / 60);\n  let sec = seconds % 60;\n  sec = sec < 10 ? `0${sec}` : sec;\n  return `${min}:${sec}`;\n}\n\n// Convert a number of bytes to human-readable format.\nexport function bytesToHumanSize(bytes) {\n  if (!bytes || bytes == 0) {\n    return '0 Bytes';\n  }\n\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n  const bucket = Math.min(Math.floor(Math.log2(bytes) / 10) | 0, sizes.length-1);\n  const count = bytes / Math.pow(1024, bucket);\n  const round = bucket > 0 ? (count < 3 ? 2 : (count < 30 ? 1 : 0)) : 0;\n  return count.toFixed(round) + ' ' + sizes[bucket];\n}\n\n// Get 32 bit integer hash value for a string. Ideally it should produce the same value\n// as Java's String#hash().\nexport function stringHash(value) {\n  let hash = 0;\n  value = '' + value;\n  for (let i = 0; i < value.length; i++) {\n    hash = ((hash << 5) - hash) + value.charCodeAt(i);\n    hash = hash & hash; // Convert to 32bit integer\n  }\n  return hash;\n}\n","import React from 'react';\n\nimport Tinode from 'tinode-sdk';\n\nimport { stringHash } from '../lib/strformat.js';\n\nexport default class LetterTile extends React.PureComponent {\n  render() {\n    let avatar;\n    if (this.props.avatar === true) {\n      const isGroup = (Tinode.topicType(this.props.topic) == 'grp');\n      const iconColor = (isGroup ? 'light-color' : 'dark-color')\n        + (Math.abs(stringHash(this.props.topic)) % 16);\n      if (this.props.topic && this.props.title && this.props.title.trim()) {\n        const letter = this.props.title.trim().charAt(0);\n        const className = 'lettertile ' + iconColor;\n        avatar = (<div className={className}><div>{letter}</div></div>)\n      } else {\n        const className = 'material-icons ' + iconColor;\n        avatar = isGroup ?\n          <i className={className}>group</i> : <i className={className}>person</i>;\n      }\n    } else if (this.props.avatar) {\n      // If avatar image is invalid, show a placeholder.\n      avatar = <img className=\"avatar\" alt=\"avatar\" src={this.props.avatar}\n        onError={(e)=>{e.target.onerror = null; e.target.src=\"/img/broken_image.png\"}} />;\n    } else {\n      avatar = null;\n    }\n    return avatar;\n  }\n}\n","// File and image helper functions.\nimport { MAX_INBAND_ATTACHMENT_SIZE, MAX_IMAGE_DIM } from '../config.js';\nimport { bytesToHumanSize } from './strformat.js'\n\n// Supported image MIME types and corresponding file extensions.\nexport const SUPPORTED_IMAGE_FORMATS = ['image/jpeg', 'image/gif', 'image/png', 'image/svg', 'image/svg+xml'];\nexport const MIME_EXTENSIONS         = ['jpg',        'gif',       'png',       'svg',       'svg'];\n\n// Make a data URL from public.photo\nexport function makeImageUrl(photo) {\n  return (photo && photo.type && photo.data) ?\n    'data:image/' + photo.type + ';base64,' + photo.data : null;\n}\n\n// Calculate linear dimensions for scaling image down to fit under a certain size.\n// Returns an object which contains destination sizes, source sizes, and offsets\n// into source (when making square images).\nexport function fitImageSize(width, height, maxWidth, maxHeight, forceSquare) {\n  // Sanitize input\n  width = width | 0;\n  height = height | 0;\n  maxWidth = maxWidth | 0;\n  maxHeight = maxHeight | 0;\n\n  if (width <= 0 || height <= 0 || maxWidth <= 0 || maxHeight <= 0) {\n    return null;\n  }\n\n  if (forceSquare) {\n    maxWidth = maxHeight = Math.min(maxWidth, maxHeight);\n  }\n\n  let scale = Math.min(\n    Math.min(width, maxWidth) / width,\n    Math.min(height, maxHeight) / height\n  );\n\n  let size = {\n    dstWidth: (width * scale) | 0,\n    dstHeight: (height * scale) | 0,\n  };\n\n  if (forceSquare) {\n    // Also calculate parameters for making the image square.\n    size.dstWidth = size.dstHeight = Math.min(size.dstWidth, size.dstHeight);\n    size.srcWidth = size.srcHeight = Math.min(width, height);\n    size.xoffset = ((width - size.srcWidth) / 2) | 0;\n    size.yoffset = ((height - size.srcWidth) / 2) | 0;\n  } else {\n    size.xoffset = size.yoffset = 0;\n    size.srcWidth = width;\n    size.srcHeight = height;\n  }\n  return size;\n}\n\n// Ensure file's extension matches mime content type\nexport function fileNameForMime(fname, mime) {\n  const idx = SUPPORTED_IMAGE_FORMATS.indexOf(mime);\n  if (idx < 0 || !fname) {\n    // Unknown mime or empty name.\n    return fname;\n  }\n  const ext = MIME_EXTENSIONS[idx];\n\n  const at = fname.lastIndexOf('.');\n  if (at >= 0) {\n    fname = fname.substring(0, at);\n  }\n  return fname + '.' + ext;\n}\n\n// Scale uploaded image to fit under certain dimensions and byte size, optionally constraining to a square.\n// On success calls onSuccess callback with the scaled image as Blob.\nexport function imageScaled(fileOrBlob, maxWidth, maxHeight, maxSize, forceSquare, onSuccess, onError) {\n  const img = new Image();\n  img.crossOrigin = 'Anonymous';\n  img.onerror = function(err) {\n    onError(\"Image format unrecognized\");\n  }\n  img.onload = async function() {\n    // Once the image is loaded, the URL is no longer needed.\n    URL.revokeObjectURL(img.src);\n\n    // Calculate the desired image dimensions.\n    const dim = fitImageSize(this.width, this.height, maxWidth, maxHeight, forceSquare);\n    if (!dim) {\n      onError(\"Invalid image\");\n      return;\n    }\n    let canvas = document.createElement('canvas');\n    canvas.width = dim.dstWidth;\n    canvas.height = dim.dstHeight;\n    let ctx = canvas.getContext('2d');\n    ctx.imageSmoothingEnabled = true;\n    ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n      0, 0, dim.dstWidth, dim.dstHeight);\n\n    const mime = SUPPORTED_IMAGE_FORMATS.indexOf(fileOrBlob.type) < 0 ? 'image/jpeg' : fileOrBlob.type;\n    // Generate blob to check size of the image.\n    let blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    if (!blob) {\n      onError(\"Unsupported image format\");\n      return;\n    }\n\n    // Ensure the image is not too large. Shrink the image keeping the aspect ratio.\n    // Do nothing if maxsize is <= 0.\n    while (maxSize > 0 && blob.length > maxSize) {\n      dim.dstWidth = (dim.dstWidth * 0.70710678118) | 0;\n      dim.dstHeight = (dim.dstHeight * 0.70710678118) | 0;\n      canvas.width = dim.dstWidth;\n      canvas.height = dim.dstHeight;\n      ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n        0, 0, dim.dstWidth, dim.dstHeight);\n      blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    }\n\n    canvas = null;\n    onSuccess(blob, mime, dim.dstWidth, dim.dstHeight, fileNameForMime(fileOrBlob.name, mime));\n  };\n  img.src = URL.createObjectURL(fileOrBlob);\n}\n\n// Convert File to base64 string.\nexport function fileToBase64(file, onSuccess) {\n  const reader = new FileReader();\n  reader.addEventListener('load', function() {\n    onSuccess(file.type, reader.result.split(',')[1], file.name);\n  });\n  reader.readAsDataURL(file);\n}\n\n// Convert Blob to base64 string.\nexport function blobToBase64(blob, onSuccess) {\n  const reader = new FileReader();\n  reader.addEventListener('load', function() {\n    onSuccess(blob.type, reader.result.split(',')[1]);\n  });\n  reader.readAsDataURL(blob);\n}\n\n// File pasted from the clipboard. It's either an inline image or a file attachment.\n// FIXME: handle large files out of band.\nexport function filePasted(event, onImageSuccess, onAttachmentSuccess, onError) {\n  var items = (event.clipboardData || event.originalEvent.clipboardData || {}).items;\n  for (var i in items) {\n    var item = items[i];\n    if (item.kind === 'file') {\n      var file = item.getAsFile();\n      if (!file) {\n        console.log(\"Failed to get file object from pasted file item\", item.kind, item.type);\n        continue;\n      }\n      if (file.type && file.type.split('/')[0] == 'image') {\n        // Handle inline image\n        if (file.size > MAX_INBAND_ATTACHMENT_SIZE || SUPPORTED_IMAGE_FORMATS.indexOf(file.type) < 0) {\n          imageFileScaledToBase64(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, false, onImageSuccess, onError);\n        } else {\n          imageFileToBase64(file, onImageSuccess, onError);\n        }\n      } else {\n        // Handle file attachment\n        fileToBase64(file, onAttachmentSuccess, onError)\n      }\n      // Indicate that the pasted data contains a file.\n      return true;\n    }\n  }\n  // No file found.\n  return false;\n}\n\n// Get mime type from data URL header.\nexport function getMimeType(header) {\n  var mime = /^data:(image\\/[-+a-z0-9.]+);base64/.exec(header);\n  return (mime && mime.length > 1) ? mime[1] : null;\n}\n\n// Given length of a binary object in bytes, calculate the length after\n// base64 encoding.\nexport function base64EncodedLen(n) {\n  return Math.floor((n + 2) / 3) * 4;\n}\n\n// Given length of a base64-encoded object, calculate decoded size of the\n// pbject in bytes.\nexport function base64DecodedLen(n) {\n  return Math.floor(n / 4) * 3;\n}\n\n// Re-encode string to standard base64 encoding with padding.\n// The string may be base64-URL encoded without the padding.\nexport function base64ReEncode(str) {\n  if (str) {\n    str = str.replace(/-/g, '+').replace(/_/g, '/');\n    try {\n      str = btoa(atob(str));\n    } catch(err) {\n      console.log(\"Failed to base64 re-encode string.\", err);\n      str = null;\n    }\n  }\n  return str;\n}\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\n\nimport { AVATAR_SIZE, MAX_EXTERN_ATTACHMENT_SIZE } from '../config.js';\nimport { imageScaled, blobToBase64, makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class AvatarUpload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dataUrl: props.avatar\n    };\n\n    this.handleFileUpload = this.handleFileUpload.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.avatar != prevProps.avatar) {\n      this.setState({dataUrl: this.props.avatar})\n    }\n  }\n\n  handleFileUpload(e) {\n    imageScaled(e.target.files[0], AVATAR_SIZE, AVATAR_SIZE, MAX_EXTERN_ATTACHMENT_SIZE, true,\n      // Image successfully scaled and converted.\n      (mime, blob) => {\n        // Convert blob to base64-encoded bits.\n        blobToBase64(blob, (unused, base64bits) => {\n          const du = makeImageUrl({data: base64bits, type: mime});\n          this.setState({dataUrl: du});\n          this.props.onImageChanged(du);\n        });\n      },\n      // Failure\n      (err) => {\n        this.props.onError(err, 'err');\n      });\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  render() {\n    // Randomize id value in case more than one AvatarUpload is shown\n    // at the same time.\n    const randId = 'file-input-avatar-' + (Math.random() + '').substr(2);\n    const className = 'avatar-upload' + (this.props.readOnly ? ' read-only' : '');\n    return (\n      <div className={className}>\n        {this.props.readOnly || !this.state.dataUrl ?\n          null :\n          <a href=\"#\" className=\"clear-avatar\" onClick={(e) => {e.preventDefault(); this.props.onImageChanged(null);}}>\n            <i className=\"material-icons\">clear</i>\n          </a>}\n        {this.state.dataUrl ?\n          <img src={this.state.dataUrl} className=\"preview\" /> :\n          this.props.readOnly && this.props.uid ?\n            <div className=\"avatar-box\">\n              <LetterTile\n                avatar={true}\n                topic={this.props.uid}\n                title={this.props.title} />\n            </div>\n            :\n            <div className=\"blank\">{AVATAR_SIZE}&times;{AVATAR_SIZE}</div>}\n        {this.props.readOnly ? null :\n          <input type=\"file\" id={randId} className=\"inputfile hidden\"\n            accept=\"image/*\" onChange={this.handleFileUpload} />}\n        {this.props.readOnly ? null :\n        <label htmlFor={randId} className=\"round\">\n          <i className=\"material-icons\">file_upload</i>\n        </label>}\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\n/* BEGIN CheckBox: styled checkbox */\nexport default class CheckBox extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange() {\n    this.props.onChange(this.props.name, !this.props.checked);\n  }\n\n  render() {\n    return (\n      this.props.onChange ? (\n        this.props.checked ?\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box</i> :\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box_outline_blank</i>\n        ) : (\n          this.props.checked ?\n            <i className=\"material-icons\">check_box</i> :\n            <i className=\"material-icons\">check_box_outline_blank</i>\n        )\n    );\n  }\n}\n/* END CheckBox */\n","import React from 'react';\n\nconst icon_mapping = {'muted': 'notifications_off', 'banned': 'block'};\n\n/* Contact's labels: [you], or icons [muted], [blocked] */\nexport default class ContactBadges extends React.PureComponent {\n    render() {\n      let badges = null;\n      if (this.props.badges && this.props.badges.length > 0) {\n        badges = [];\n        this.props.badges.map(function(b) {\n          if (b.icon) {\n            badges.push(<i className=\"material-icons as-badge\" key={b.key || b.icon}>{icon_mapping[b.icon]}</i>);\n          } else {\n            const style = 'badge' + (b.color ? ' ' + b.color : '');\n            badges.push(<span className={style} key={b.key || b.name}>{b.name}</span>);\n          }\n        });\n        return <>{badges}</>;\n      }\n      return null;\n    }\n};\n","// The counter of unread messages in the topic.\nimport React from 'react';\n\nexport default class UnreadBadge extends React.PureComponent {\n  render() {\n    return (this.props.count > 0 ?\n      <span className=\"unread\">{this.props.count > 9 ? \"9+\" : this.props.count}</span>\n      : null);\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport LetterTile from './letter-tile.jsx';\nimport ContactBadges from './contact-badges.jsx';\nimport UnreadBadge from './unread-badge.jsx';\n\nexport default class Contact extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.props.onSelected) {\n      // Index this.props.index is used by GroupManager.\n      this.props.onSelected(this.props.item, this.props.index);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.props.item, y: e.pageY, x: e.pageX });\n  }\n\n  render() {\n    let title = this.props.title;\n    if (!title) {\n      title = <i><FormattedMessage id=\"unnamed_topic\" /></i>;\n    } else if (title.length > 30) {\n      // FIXME: this is probably wrong for RTL languages.\n      title = title.substring(0, 28) + '...';\n    }\n    const online = this.props.now ? 'online' : 'offline';\n    const avatar = this.props.avatar ? this.props.avatar : true;\n    const badges = this.props.badges ? this.props.badges.slice() : [];\n    const icon_badges = [];\n    if (this.props.acs) {\n      if (this.props.showMode) {\n        badges.push({name: this.props.acs.getMode(), key: 'mode'});\n      }\n      if (this.props.acs.isMuted()) {\n        icon_badges.push({icon: 'muted'});\n      }\n      if (!this.props.acs.isJoiner()) {\n        icon_badges.push({icon: 'banned'});\n      }\n    }\n\n    return (\n      <li className={!this.props.showCheckmark && this.props.selected ? \"selected\" : null}\n        onClick={this.handleClick}>\n        <div className=\"avatar-box\">\n          <LetterTile\n            avatar={avatar}\n            title={this.props.title}\n            topic={this.props.item} />\n          {this.props.showOnline ? <span className={online} /> :\n            (this.props.showCheckmark && this.props.selected ?\n            <i className=\"checkmark material-icons\">check_circle</i>\n            : null)}\n        </div>\n        <div className=\"text-box\">\n          <div><span className=\"contact-title\">{title}</span>\n            {this.props.isChannel ? <img src=\"/img/channel.png\" className=\"channel\" alt=\"channel\" /> : null}\n            <UnreadBadge count={this.props.unread} /><ContactBadges badges={icon_badges} />\n          </div>\n          {this.props.comment ? <div className=\"contact-comment\">{this.props.comment}</div> : null}\n          <span><ContactBadges badges={badges} /></span>\n        </div>\n        {this.props.showContextMenu ?\n          <span className=\"menuTrigger\">\n            <a href=\"#\" onClick={this.handleContextClick}>\n              <i className=\"material-icons\">expand_more</i>\n            </a>\n          </span> : null}\n      </li>\n    );\n  }\n};\n","// A panel included into a list of contacts with an action text.\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\n\nclass ContactAction extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.onAction(this.props.action);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <li onClick={this.handleClick} className=\"action\">\n        <div className=\"action-text\">{formatMessage(this.props.title, this.props.values)}</div>\n      </li>\n    );\n  }\n};\n\nexport default injectIntl(ContactAction);\n","// ContactList: component for showing a list of contacts,\n// such as a list of group members in a group chat.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { Drafty } from 'tinode-sdk';\nimport Tinode from 'tinode-sdk';\n\nimport Contact from './contact.jsx';\nimport ContactAction from './contact-action.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nconst junk = {\n\t\t\"ent\":[{\"data\":{\"mime\":\"image/jpeg\",\"name\":\"hello.jpg\",\"val\":\"<38992, bytes: ...>\",\"width\":100, \"height\":80},\"tp\":\"EX\"}],\n\t\t\"fmt\":[{\"at\":-1, \"key\":0}]\n\t};\n\nconst messages = defineMessages({\n  badge_you: {\n    id: 'badge_you',\n    defaultMessage: 'you',\n    description: 'Badge for indicating the current user'\n  },\n  badge_owner: {\n    id: 'badge_owner',\n    defaultMessage: 'owner',\n    description: 'Badge for indicating the owner'\n  }\n});\n\nclass ContactList extends React.Component {\n  render() {\n    const { formatMessage } = this.props.intl;\n    const showCheckmark = Array.isArray(this.props.topicSelected);\n    const contactNodes = [];\n    let contactsCount = 0;\n    if (this.props.contacts && this.props.contacts.length > 0) {\n      this.props.contacts.map((c) => {\n        if (c.action) {\n          // Action item\n          contactNodes.push(\n            <ContactAction\n              title={c.title} action={c.action} values={c.values}\n              key={c.action}\n              onAction={this.props.onAction}\n              />);\n        } else {\n          // Normal contact\n          const key = this.props.showMode ? c.user : (c.topic || c.user);\n          // If filter function is provided, filter out the items\n          // which don't satisfy the condition.\n          if (this.props.filterFunc && this.props.filter) {\n            let content = [key];\n            if (c.private && c.private.comment) {\n              content.push(('' + c.private.comment).toLowerCase());\n            }\n            if (c.public && c.public.fn) {\n              content.push(('' + c.public.fn).toLowerCase());\n            }\n            if (!this.props.filterFunc(this.props.filter, content)) {\n              return;\n            }\n          }\n\n          const isChannel = Tinode.isChannelTopicName(key);\n          const selected = showCheckmark ?\n            (this.props.topicSelected.indexOf(key) > -1) :\n            (this.props.topicSelected === key);\n          const badges = [];\n          if (this.props.showMode) {\n            if (key == this.props.myUserId) {\n              badges.push({name: formatMessage(messages.badge_you), color: 'green'});\n            }\n            if (c.acs && c.acs.isOwner()) {\n              badges.push({name: formatMessage(messages.badge_owner), color: 'blue'});\n            }\n          }\n          // const comment = React.createElement(React.Fragment, null, Drafty.format(junk, draftyFormatter, this));\n          const comment = Array.isArray(c.private) ?\n            c.private.join(',') : (c.private ? c.private.comment : null);\n\n          contactNodes.push(\n            <Contact\n              title={c.public ? c.public.fn : null}\n              avatar={makeImageUrl(c.public ? c.public.photo : null)}\n              comment={comment}\n              unread={this.props.showUnread ? c.unread : 0}\n              now={c.online && this.props.connected}\n              acs={c.acs}\n              showMode={this.props.showMode}\n              badges={badges}\n              showCheckmark={showCheckmark}\n              selected={selected}\n              showOnline={this.props.showOnline && !isChannel}\n              isChannel={isChannel}\n              onSelected={this.props.onTopicSelected}\n              showContextMenu={this.props.showContextMenu}\n              item={key}\n              index={contactNodes.length}\n              key={key} />\n          );\n          contactsCount ++;\n        }\n      }, this);\n    }\n\n    return (\n      <div className={this.props.noScroll ? null : \"scrollable-panel\"}>\n        {contactsCount == 0 ?\n          <div className=\"center-medium-text\"\n            dangerouslySetInnerHTML={{__html: this.props.emptyListMessage}} />\n          :\n          null\n        }\n        {contactNodes.length > 0 ?\n          <ul className=\"contact-box\">\n            {contactNodes}\n          </ul>\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\n\n// Converts Drafty elements into a one-line preview.\nfunction draftyFormatter(style, data, values, key) {\n  let el = Drafty.tagName(style);\n  const attr = { key: key };\n  if (el) {\n    switch (style) {\n      case 'HL':\n        // Make highlight less prominent in preview.\n        attr.className = 'highlight preview';\n        break;\n      case 'LN':\n        // Disable links in previews.\n        el = 'span';\n        break;\n      case 'IM':\n        // Replace image with '[icon] Image'.\n        el = React.Fragment;\n        values = [<i className=\"material-icons\">photo</i>, 'Picture'];\n        break;\n      case 'BN':\n        el = 'span';\n        attr.className = 'flat-button faux';\n        break;\n      case 'FM':\n        el = React.Fragment;\n        values = [<i className=\"material-icons\">dashboard</i>, 'Form:'];\n        break;\n      case 'RW':\n        el = React.Fragment;\n        break;\n      case 'EX':\n        el = React.Fragment;\n        values = [<i className=\"material-icons\">attachment</i>, 'Attachment'];\n        break;\n      default:\n        if (el == '_UNKN') {\n          el = React.Fragment;\n          values = [<i className=\"material-icons\">extension</i>];\n        }\n        break;\n    }\n    return React.createElement(el, attr, values);\n  } else {\n    return values;\n  }\n};\n\nexport default injectIntl(ContactList);\n","// The X menu to be displayed in title bars.\nimport React from 'react';\n\nexport default class MenuCancel extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n        <i className=\"material-icons\">close</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nimport MenuCancel from './menu-cancel.jsx';\n\nexport default class ErrorPanel extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      show: false,\n    };\n\n    this.hide = this.hide.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.level !== this.props.level) {\n      this.setState({\n        show: !(!this.props.level)\n      });\n    }\n  }\n\n  hide() {\n    this.setState({show: false});\n    if (this.props.onClearError) {\n      this.props.onClearError();\n    }\n  }\n\n  render() {\n    const icons = {err: 'error', warn: 'warning', info: 'info'}\n    const level = icons[this.props.level] || '';\n    const className = 'info-box ' + level;\n    return (\n      <div className={className}>\n        <div className=\"icon\"><i className=\"material-icons\">{level}</i></div>\n        <span>\n          {this.props.text}\n          {this.props.action ?\n            <>\n              &#32;<a href=\"#\"\n                style={{ whiteSpace: 'nowrap' }}\n                onClick={(e) => {e.preventDefault(); this.props.action();}}>\n                {this.props.actionText}\n              </a>\n            </>\n          : null}\n        </span>\n        <div className=\"cancel\"><MenuCancel onCancel={this.hide} /></div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\n\nexport default class Chip extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel(this.props.topic, this.props.index);\n  }\n\n  render() {\n    const title = this.props.title || this.props.topic;\n    const className = this.props.invalid ? 'chip invalid' : 'chip';\n    return (\n      <div className={className}>\n        {this.props.noAvatar ?\n          <span className=\"spacer\" /> :\n          <div className=\"avatar-box\">\n            <LetterTile\n              avatar={this.props.avatar || true}\n              topic={this.props.topic}\n              title={this.props.title} />\n          </div>\n        }\n        <span>{title}</span>\n        {this.props.onCancel && !this.props.required ?\n          <a href=\"#\" onClick={this.handleCancel} >&times;</a>\n          : <span className=\"spacer\" />}\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport Chip from './chip.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n/* BEGIN ChipInput: group membership widget */\nexport default class ChipInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = ChipInput.deriveStateFromProps(props);\n    this.state.input = '';\n    this.state.focused = false;\n\n    this.handleTextInput = this.handleTextInput.bind(this);\n    this.removeChipAt = this.removeChipAt.bind(this);\n    this.handleChipCancel = this.handleChipCancel.bind(this);\n    this.handleFocusGained = this.handleFocusGained.bind(this);\n    this.handleFocusLost = this.handleFocusLost.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  static deriveStateFromProps(props) {\n    return {\n      placeholder: props.chips ? '' : props.prompt,\n      sortedChips: ChipInput.sortChips(props.chips, props.staticMembers),\n      chipIndex: ChipInput.indexChips(props.chips)\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chips != this.props.chips ||\n      prevProps.staticMembers != this.props.staticMembers ||\n      prevProps.prompt != this.props.prompt) {\n      this.setState(ChipInput.deriveStateFromProps(this.props));\n    }\n    if (!prevState || this.props.chips.length > prevState.sortedChips.length) {\n      this.setState({input: ''});\n    }\n  }\n\n  // Map chip index to user name\n  static indexChips(chips) {\n    const index = {};\n    let count = 0;\n    chips.map((item) => {\n      index[item.user] = count;\n      count ++;\n    });\n    return index;\n  }\n\n  // Have non-removable chips appear before all other chips.\n  static sortChips(chips, keep) {\n    const required = [];\n    const normal = [];\n    chips.map((item) => {\n      if (keep && keep.includes(item.user)) {\n        required.push(item);\n      } else {\n        normal.push(item);\n      }\n    });\n    return required.concat(normal);\n  }\n\n  handleTextInput(e) {\n    this.setState({input: e.target.value});\n    if (this.props.filterFunc) {\n      this.props.filterFunc(e.target.value);\n    }\n  }\n\n  removeChipAt(idx) {\n    const removed = this.state.sortedChips[idx];\n    this.props.onChipRemoved(removed.user, this.state.chipIndex[removed.user]);\n  }\n\n  handleChipCancel(item, idx) {\n    this.removeChipAt(idx);\n  }\n\n  handleFocusGained() {\n    this.setState({focused: true});\n  }\n\n  handleFocusLost() {\n    this.setState({focused: false});\n    if (this.props.onFocusLost) {\n      this.props.onFocusLost(this.state.input);\n    }\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Backspace') {\n      if (this.state.input.length == 0 && this.state.sortedChips.length > 0) {\n        const at = this.state.sortedChips.length - 1;\n        if (this.state.sortedChips[at].user !== this.props.staticMembers) {\n          this.removeChipAt(at);\n        }\n      }\n    } else if (e.key === 'Enter') {\n      if (this.props.onEnter) {\n        this.props.onEnter(this.state.input);\n      }\n    } else if (e.key === 'Escape') {\n      if (this.props.onCancel) {\n        this.props.onCancel();\n      }\n    }\n  }\n\n  render() {\n    const chips = [];\n    let count = 0;\n    const staticMembers = this.props.staticMembers || [];\n    this.state.sortedChips.map((item) => {\n      chips.push(\n        <Chip\n          onCancel={this.handleChipCancel}\n          avatar={makeImageUrl(item.public ? item.public.photo : null)}\n          title={item.public ? item.public.fn : undefined}\n          noAvatar={this.props.avatarDisabled}\n          topic={item.user}\n          required={staticMembers.includes(item.user)}\n          invalid={item.invalid}\n          index={count}\n          key={item.user} />\n      );\n      count++;\n    });\n    const className = \"chip-input\" + (this.state.focused ? ' focused' : '');\n    return (\n      <div className={className}>\n        {chips}\n        <input type=\"text\"\n          placeholder={this.state.placeholder}\n          onChange={this.handleTextInput}\n          onFocus={this.handleFocusGained}\n          onBlur={this.handleFocusLost}\n          onKeyDown={this.handleKeyDown}\n          value={this.state.input}\n          autoFocus />\n      </div>\n    );\n  }\n};\n","// GroupMembers: control for managing a list of group members.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\nimport ContactList from './contact-list.jsx';\n\nconst messages = defineMessages({\n  no_contacts: {\n    id: 'no_contacts',\n    defaultMessage: 'You have no contacts :-(',\n    description: 'Shown in ContactsView when the user has no contacts'\n  },\n  contacts_not_found_short: {\n    id: 'contacts_not_found_short',\n    defaultMessage: \"No contacts match ''{query}''\",\n    description: 'Shown in ContactsView when search returned no results'\n  }\n});\n\nclass GroupManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Array of topic members\n      members: props.members,\n      index: GroupManager.indexMembers(props.members),\n      staticMembers: GroupManager.staticMembers(props.members, props.keepInitialMembers, props.requiredMember),\n      contactFilter: '',\n      noContactsMessage: props.intl.formatMessage(messages.no_contacts),\n      selectedContacts: GroupManager.selectedContacts(props.members)\n    };\n\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleMemberRemoved = this.handleMemberRemoved.bind(this);\n    this.handleContactFilter = this.handleContactFilter.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static indexMembers(members) {\n    let index = {};\n    members.map((m) => {\n      index[m.user] = {delta: 0, present: true}; // Delta: 0 unchanged, +1 added, -1 removed\n    });\n    return index;\n  }\n\n  static staticMembers(members, keepInitial, requiredMember) {\n    let stat = [];\n    members.map((m) => {\n      if (keepInitial || m.user == requiredMember) {\n        stat.push(m.user);\n      }\n    });\n    return stat;\n  }\n\n  static selectedContacts(members) {\n    let sel = [];\n    members.map((m) => {\n      sel.push(m.user);\n    });\n    return sel;\n  }\n\n  handleContactSelected(userId, index) {\n    let status = this.state.index[userId];\n    if (status) {\n      if (status.present) {\n        // Prevent duplicate members\n        return;\n      }\n      status.delta += 1;\n      status.present = true;\n    } else {\n      status = {delta: 1, present: true};\n    }\n\n    let m = this.state.members.slice();\n    m.push(this.props.contacts[index]);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleMemberRemoved(userId, index) {\n    const status = this.state.index[userId];\n    if (!status || !status.present) {\n      return;\n    }\n    status.present = false;\n    status.delta -= 1;\n\n    let m = this.state.members.slice();\n    m.splice(index, 1);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleContactFilter(val) {\n    const {formatMessage} = this.props.intl;\n    const msg = !val ?\n      formatMessage(messages.no_contacts) :\n      formatMessage(messages.contacts_not_found_short, {query: val});\n\n    this.setState({contactFilter: val, noContactsMessage: msg});\n  }\n\n  static doContactFiltering(filter, values) {\n    if (filter) {\n      for (let i=0; i<values.length; i++) {\n        if (values[i].indexOf(filter) >= 0) {\n          return true;\n        }\n      }\n      return false;\n    }\n    return true;\n  }\n\n  handleSubmit() {\n    var instance = this;\n    var members = [];\n    var added = [];\n    var removed = [];\n\n    var keys = Object.keys(this.state.index);\n    keys.map(function(k) {\n      if (instance.state.index[k].present) {\n        members.push(k);\n      }\n\n      if (instance.state.index[k].delta > 0) {\n        added.push(k);\n      } else if (instance.state.index[k].delta < 0) {\n        removed.push(k);\n      }\n    });\n    this.props.onSubmit(members, added, removed);\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <div id=\"group-manager\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_group_members\" defaultMessage=\"Group Members\" description=\"Section title\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ChipInput\n            chips={this.state.members}\n            staticMembers={this.state.staticMembers}\n            prompt=\"add members\"\n            filterFunc={this.handleContactFilter}\n            onChipRemoved={this.handleMemberRemoved} />\n        </div>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_all_contacts\" defaultMessage=\"All Contacts\"\n              description=\"Section title [All Contacts]\" />\n          </label>\n        </div>\n        <ContactList\n          contacts={this.props.contacts}\n          myUserId={this.props.myUserId}\n          topicSelected={this.state.selectedContacts}\n          filter={this.state.contactFilter}\n          filterFunc={GroupManager.doContactFiltering}\n          emptyListMessage={this.state.noContactsMessage}\n          showOnline={false}\n          showUnread={false}\n          onTopicSelected={this.handleContactSelected} />\n        <div id=\"group-manager-buttons\" className=\"panel-form-row\">\n          <button className=\"blue\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n          <button className=\"white\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(GroupManager);\n","// Password with a visiblity toggle.\nimport React from 'react';\n\nexport default class VisiblePassword extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: this.props.value,\n      visible: false\n    };\n\n    this.handleVisibility = this.handleVisibility.bind(this);\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n    if (this.props.onChange) {\n      this.props.onChange(e);\n    }\n  }\n\n  handleVisibility(e) {\n    e.preventDefault();\n    this.setState({visible: !this.state.visible});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode == 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, visible: false});\n      if (this.props.onFinished) {\n        this.props.onFinished();\n      }\n    } else if (e.keyCode == 13) {\n      // Enter pressed\n      this.handleEditingFinished();\n    }\n  }\n\n  handleEditingFinished(e) {\n    if (e) {\n      let currentTarget = e.currentTarget;\n      setTimeout(() => {\n        if (!currentTarget.contains(document.activeElement)) {\n          if (this.props.onFinished) {\n            this.props.onFinished(this.state.value);\n          }\n        }\n      }, 0);\n    } else if (this.props.onFinished) {\n      this.props.onFinished(this.state.value.trim());\n    }\n  }\n\n  render() {\n    return (\n      <div tabIndex=\"-1\" className=\"group-focus\"\n        onBlur={this.handleEditingFinished}>\n        <input className=\"with-visibility\"\n          type={this.state.visible ? \"text\" : \"password\"}\n          value={this.state.value}\n          placeholder={this.props.placeholder}\n          required={this.props.required ? 'required' : ''}\n          autoFocus={this.props.autoFocus ? 'autoFocus' : ''}\n          autoComplete={this.props.autoComplete}\n          onChange={this.handeTextChange}\n          onKeyDown={this.handleKeyDown} />\n        <span onClick={this.handleVisibility}>\n          <i className=\"material-icons clickable light-gray\">\n            {this.state.visible ? 'visibility' : 'visibility_off'}\n          </i>\n        </span>\n      </div>\n    );\n  }\n}\n","// In-place text editor. Shows text with an icon which toggles it into an input field.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport VisiblePassword from './visible-password.jsx';\n\nexport default class InPlaceEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      active: props.active,\n      initialValue: props.value || '',\n      value: props.value || ''\n    };\n\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleStartEditing = this.handleStartEditing.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n    this.handlePasswordFinished = this.handlePasswordFinished.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // If text has changed while in read mode, update text and discard changes.\n    // Ignore update if in edit mode.\n    const newValue = this.props.value || '';\n    if (prevState.initialValue != newValue && !prevState.active) {\n      this.setState({\n        initialValue: newValue,\n        value: newValue\n      });\n    }\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, active: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleEditingFinished(e);\n    }\n  }\n\n  handleStartEditing() {\n    if (!this.props.readOnly) {\n      ReactDOM.findDOMNode(this).focus();\n      this.setState({active: true});\n    }\n  }\n\n  handleEditingFinished(event) {\n    if (this.props.required && !event.target.checkValidity()) {\n      // Empty input\n      this.setState({value: this.props.value, active: false});\n      return;\n    }\n    this.setState({active: false});\n    let value = this.state.value.trim();\n    if ((value || this.props.value) && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  handlePasswordFinished(value) {\n    this.setState({active: false});\n    if (value && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  render() {\n    if (this.state.active) {\n      var fieldType = this.props.type || 'text';\n    } else {\n      var spanText = this.props.type == 'password' ? '••••••••' : this.state.value;\n      var spanClass = 'in-place-edit' +\n        (this.props.readOnly ? ' disabled' : '');\n      if (!spanText) {\n        spanText = this.props.placeholder;\n        spanClass += ' placeholder';\n      }\n      if (spanText.length > 20) {\n        // FIXME: this is wrong for RTL languages.\n        spanText = spanText.substring(0, 19) + '...';\n      }\n    }\n    return (\n      this.state.active ?\n        (fieldType == 'password' ?\n          <VisiblePassword\n            value={this.state.value}\n            placeholder={this.props.placeholder}\n            required={this.props.required ? 'required' : ''}\n            autoComplete={this.props.autoComplete}\n            autoFocus={true}\n            onFinished={this.handlePasswordFinished}/>\n          :\n          <input type={fieldType}\n            value={this.state.value}\n            placeholder={this.props.placeholder}\n            required={this.props.required ? 'required' : ''}\n            autoComplete={this.props.autoComplete}\n            autoFocus\n            onChange={this.handeTextChange}\n            onKeyDown={this.handleKeyDown}\n            onBlur={this.handleEditingFinished} />\n        )\n        :\n        <span className={spanClass} onClick={this.handleStartEditing}>\n          <span className=\"content\">{spanText}</span>\n        </span>\n    );\n  }\n};\n","// Toggle [Title text >] -> [Title text v]\n\nimport React from 'react';\n\nexport default class MoreButton extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: props.open\n    };\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n\n  handleToggle() {\n    const open = !this.state.open;\n    this.setState({open: open});\n    if (this.props.onToggle) {\n      this.props.onToggle(open);\n    }\n  }\n\n  render() {\n    return (<label className=\"small clean-clickable\" onClick={this.handleToggle}>{this.props.title}...\n      {this.state.open ? <i className=\"material-icons\">expand_more</i> :\n        <i className=\"material-icons\">chevron_right</i>}\n      </label>);\n  }\n}\n","// PermissionsEditor: Component for editing permissions\n// <PermissionsEditor mode=\"JWROD\" skip=\"O\" onChange={this.handleCheckboxTest} />\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport CheckBox from './checkbox.jsx';\nimport Contact from './contact.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n// Translatable permission names.\nconst messages = defineMessages({\n  'joiner': {\n    id: 'permission_join',\n    defaultMessage: \"Join ({val})\",\n    description: 'Name of J permission'\n  },\n  'reader': {\n    id: 'permission_read',\n    defaultMessage: \"Read ({val})\",\n    description: 'Name of R permission'\n  },\n  'writer': {\n    id: 'permission_write',\n    defaultMessage: \"Write ({val})\",\n    description: 'Name of W permission'\n  },\n  'preser': {\n    id: 'permission_pres',\n    defaultMessage: \"Get notified ({val})\",\n    description: 'Name of P permission'\n  },\n  'approver': {\n    id: 'permission_admin',\n    defaultMessage: \"Approve ({val})\",\n    description: 'Name of A permission'\n  },\n  'sharer': {\n    id: 'permission_share',\n    defaultMessage: \"Share ({val})\",\n    description: 'Name of S permission'\n  },\n  'deleter': {\n    id: 'permission_delete',\n    defaultMessage: \"Delete ({val})\",\n    description: 'Name of D permission'\n  },\n  'owner': {\n    id: 'permission_owner',\n    defaultMessage: \"Owner ({val})\",\n    description: 'Name of O permission'\n  }\n});\n\nclass PermissionsEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mode: (props.mode || '').replace('N', '')\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(val) {\n    let mode = this.state.mode;\n    let idx = mode.indexOf(val);\n    if (idx == -1) {\n      mode += val;\n    } else {\n      mode = mode.replace(val, '');\n    }\n    this.setState({mode: mode});\n  }\n\n  handleSubmit() {\n    // Normalize string, otherwise cannot check if mode has changed.\n    var mode = (this.state.mode || 'N').split('').sort().join('');\n    var before = (this.props.mode || 'N').split('').sort().join('')\n    if (mode !== before) {\n      this.props.onSubmit(mode);\n    } else {\n      this.props.onCancel();\n    }\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const all = 'JRWPASDO';\n    const names = {\n      'J': formatMessage(messages.joiner, {val: 'J'}),\n      'R': formatMessage(messages.reader, {val: 'R'}),\n      'W': formatMessage(messages.writer, {val: 'W'}),\n      'P': formatMessage(messages.preser, {val: 'P'}),\n      'A': formatMessage(messages.approver, {val: 'A'}),\n      'S': formatMessage(messages.sharer, {val: 'S'}),\n      'D': formatMessage(messages.deleter, {val: 'D'}),\n      'O': formatMessage(messages.owner, {val: 'O'})\n    };\n\n    let skip = this.props.skip || '';\n    let mode = this.state.mode;\n    let compare = (this.props.compare || '').replace('N', '');\n    let items = [];\n    for (let i=0; i<all.length; i++) {\n      let c = all.charAt(i);\n      if (skip.indexOf(c) >= 0 && mode.indexOf(c) < 0) {\n        // Permission is marked as inactive: hide unchecked permissions, disable checked permissions\n        continue;\n      }\n      items.push(\n        <tr key={c}>\n          <td>{names[c]}</td>\n          <td className=\"checkbox\">{skip.indexOf(c) < 0 ?\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} onChange={this.handleChange}/>\n            :\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} />\n          }</td>{this.props.compare ? <td className=\"checkbox\">\n            <CheckBox name={c} checked={(compare.indexOf(c) >= 0)}/>\n          </td> : null}\n        </tr>\n      );\n    }\n\n    return (\n      <div className=\"panel-form-column\">\n        {this.props.userTitle ?\n          <ul className=\"contact-box\"><Contact\n            item={this.props.item}\n            title={this.props.userTitle}\n            avatar={makeImageUrl(this.props.userAvatar ? this.props.userAvatar : null)} /></ul> : null}\n        <label className=\"small\"><FormattedMessage id=\"title_permissions\"\n          defaultMessage=\"Permissions\" description=\"Section title\"/></label>\n        <table className=\"permission-editor\">\n        {this.props.compare ?\n          <thead><tr>\n            <th></th><th>{this.props.modeTitle}</th>\n            <th>{this.props.compareTitle}</th>\n          </tr></thead> :\n          null}\n        <tbody>\n          {items}\n        </tbody></table>\n        <br />\n        <div className=\"dialog-buttons\">\n          <button className=\"outline\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" />\n          </button>\n          <button className=\"blue\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(PermissionsEditor);\n","// Odds and ends\n\n// Make shortcut icon appear with a green dot + show unread count in title.\nexport function updateFavicon(count) {\n  const oldIcon = document.getElementById('shortcut-icon');\n  const head = document.head || document.getElementsByTagName('head')[0];\n  const newIcon = document.createElement('link');\n  newIcon.type = 'image/png';\n  newIcon.id = 'shortcut-icon';\n  newIcon.rel = 'shortcut icon';\n  newIcon.href = 'img/logo32x32' + (count > 0 ? 'a' : '') + '.png';\n  if (oldIcon) {\n    head.removeChild(oldIcon);\n  }\n  head.appendChild(newIcon);\n\n  document.title = (count > 0 ? '('+count+') ' : '') + 'Tinode';\n}\n\n// Create VCard which represents topic 'public' info\nexport function vcard(fn, imageDataUrl) {\n  let card = null;\n\n  if ((fn && fn.trim()) || imageDataUrl) {\n    card = {};\n    if (fn) {\n      card.fn = fn.trim();\n    }\n    if (imageDataUrl) {\n      const dataStart = imageDataUrl.indexOf(',');\n      card.photo = dataStart >= 0 ? {\n        data: imageDataUrl.substring(dataStart+1),\n        type: 'jpg'\n      } : imageDataUrl;\n    }\n  }\n  return card;\n}\n\n// Deep-shallow compare two arrays: shallow compare each element.\nexport function arrayEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (!Array.isArray(a) || !Array.isArray(b)) {\n    return false;\n  }\n\n  // Compare lengths first.\n  if (a.length != b.length) {\n    return false;\n  }\n  // Order of elements is ignored.\n  a.sort();\n  b.sort();\n  for (let i = 0, l = a.length; i < l; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Checks (loosely) if the given string is a phone. If so, returns the phone number in a format\n// as close to E.164 as possible.\nexport function asPhone(val) {\n  val = val.trim();\n  if (/^(?:\\+?(\\d{1,3}))?[- (.]*(\\d{3})[- ).]*(\\d{3})[- .]*(\\d{2})[- .]*(\\d{2})?$/.test(val)) {\n    return val.replace(/[- ().]*/, '');\n  }\n  return null;\n}\n\n// Checks (loosely) if the given string is an email. If so returns the email.\nexport function asEmail(val) {\n  val = val.trim();\n  if (/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(val)) {\n    return val;\n  }\n  return null;\n}\n\n// Checks if URL is a relative url, i.e. has no 'scheme://', including the case of missing scheme '//'.\n// The scheme is expected to be RFC-compliant, e.g. [a-z][a-z0-9+.-]*\n// example.html - ok\n// https:example.com - not ok.\n// http:/example.com - not ok.\n// ' ↲ https://example.com' - not ok. (↲ means carriage return)\nexport function isUrlRelative(url) {\n  return url && !/^\\s*([a-z][a-z0-9+.-]*:|\\/\\/)/im.test(url);\n}\n\n// Ensure URL does not present an XSS risk. Optional allowedSchemes may contain an array of\n// strings with permitted URL schemes, such as ['ftp', 'ftps']; otherwise accept http and https only.\n// If apikey and/or token is defined, it's appended to relative URL.\nexport function sanitizeUrl(url, allowedSchemes) {\n  if (!url) {\n    return null;\n  }\n\n  // Strip control characters and whitespace. They are not valid URL characters anyway.\n  url = url.replace(/[^\\x20-\\x7E]/gmi, '').trim();\n\n  // Relative URLs are safe.\n  // Relative URL does not start with ':', abcd123: or '//'.\n  if (!/^([a-z][a-z0-9+.-]*:|\\/\\/)/i.test(url)) {\n    return url;\n  }\n\n  // Blob URLs are safe.\n  if (/^blob:http/.test(url)) {\n    return url;\n  }\n\n  // Absolute URL. Accept only safe schemes, or no scheme.\n  const schemes = Array.isArray(allowedSchemes) ? allowedSchemes.join('|') : 'http|https';\n  const re = new RegExp('^((' + schemes + '):|//)', 'i');\n  if (!re.test(url)) {\n    return null;\n  }\n\n  return url;\n}\n\n// Ensure URL is suitable for <img src=\"url\"> field: the URL must be a relative URL or\n// have http:, https:, blob: or data: scheme.\n// The relative URL is appended with the API key and/or auth token.\n// In case of data: scheme, the URL must start with a 'data:image/XXXX;base64,'.\nexport function sanitizeImageUrl(url) {\n  if (!url) {\n    return null;\n  }\n\n  const sanitizedUrl = sanitizeUrl(url);\n  if (sanitizedUrl) {\n    return sanitizedUrl;\n  }\n\n  // Is this a data: URL of an image?\n  if (/data:image\\/[a-z0-9.-]+;base64,/i.test(url.trim())) {\n    return url;\n  }\n\n  return null;\n}\n","// TagManager: edit topic or user tags.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\n\nimport { MAX_TAG_COUNT, MAX_TAG_LENGTH, MIN_TAG_LENGTH } from '../config.js';\nimport { arrayEqual } from '../lib/utils.js';\n\nexport default class TagManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tags: this.props.tags,\n      tagInput: '',\n      activated: this.props.activated\n    };\n\n    this.handleTagInput = this.handleTagInput.bind(this);\n    this.handleAddTag = this.handleAddTag.bind(this);\n    this.handleRemoveTag = this.handleRemoveTag.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (!arrayEqual(nextProps.tags, prevState.tags) && !prevState.activated) {\n      return {tags: nextProps.tags};\n    }\n    return null;\n  }\n\n  handleTagInput(text) {\n    this.setState({tagInput: text});\n    if (text.length > 0) {\n      const last = text[text.length-1];\n      if (text[0] == '\"') {\n        // This is a quoted string.\n        if (text.length > 1 && last == '\"') {\n          this.handleAddTag(text.substring(1, text.length-1));\n        }\n      } else if (last == ',' || last == ' ' || last == ';' || last == '\"') {\n        // User entered ',', ' ' or ';'\n        this.handleAddTag(text.substring(0, text.length-1).trim());\n      }\n    }\n  }\n\n  handleAddTag(tag) {\n    const maxTagCount = this.props.tinode.getServerLimit('maxTagCount', MAX_TAG_COUNT);\n\n    if (tag.length > 0 && this.state.tags.length < maxTagCount) {\n      const tags = this.state.tags.slice(0);\n      tags.push(tag);\n\n      this.setState({tags: tags, tagInput: ''});\n      if (this.props.onTagsChanged) {\n        this.props.onTagsChanged(tags);\n      }\n      return tags;\n    }\n    return this.state.tags;\n  }\n\n  handleRemoveTag(tag, index) {\n    const tags = this.state.tags.slice(0);\n    tags.splice(index, 1);\n    this.setState({tags: tags});\n    if (this.props.onTagsChanged) {\n      this.props.onTagsChanged(tags);\n    }\n  }\n\n  handleSubmit() {\n    // Add unprocessed input to tags, submit the list.\n    this.props.onSubmit(this.handleAddTag(this.state.tagInput.trim()));\n    this.setState({activated: false, tags: this.props.tags});\n  }\n\n  handleCancel() {\n    this.setState({activated: false, tagInput: '', tags: this.props.tags});\n    if (this.props.onCancel) {\n      this.props.onCancel();\n    }\n  }\n\n  render() {\n    const minTagLength = this.props.tinode.getServerLimit('minTagLength', MIN_TAG_LENGTH);\n    const maxTagLength = this.props.tinode.getServerLimit('maxTagLength', MAX_TAG_LENGTH);\n\n    let tags = [];\n    if (this.state.activated) {\n      this.state.tags.map((tag) => {\n        tags.push({user: tag, invalid: (tag.length < minTagLength || tag.length > maxTagLength)});\n      });\n    } else {\n      this.state.tags.map((tag) => {\n        tags.push(<span className=\"badge\" key={tags.length}>{tag}</span>);\n      });\n      if (tags.length == 0) {\n        tags = (\n          <i>\n            <FormattedMessage id=\"tags_not_found\" defaultMessage=\"No tags defined. Add some.\" description=\"\" />\n          </i>\n        );\n      }\n    }\n    return (\n      <div className=\"panel-form-column\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">{this.props.title}</label>\n        </div>\n        {this.state.activated ?\n        <div>\n          <FormattedMessage id=\"tags_editor_no_tags\" defaultMessage=\"Add some tags\"\n            description=\"Tag editor prompt when no tags are found.\">{\n            (add_tags_prompt) => <ChipInput\n              chips={tags}\n              avatarDisabled={true}\n              prompt={add_tags_prompt}\n              onEnter={this.handleAddTag}\n              onFocusLost={this.handleAddTag}\n              onCancel={this.handleCancel}\n              onChipRemoved={this.handleRemoveTag}\n              filterFunc={this.handleTagInput} />\n          }</FormattedMessage>\n          {this.props.onSubmit || this.props.onCancel ?\n            <div id=\"tag-manager-buttons\" className=\"dialog-buttons panel-form-row\">\n              <button className=\"outline\" onClick={this.handleCancel}>\n                <FormattedMessage id=\"button_cancel\" defautMessage=\"Cancel\" description=\"Rejection button [Cancel]\" />\n              </button>\n              <button className=\"blue\" onClick={this.handleSubmit}>\n                <FormattedMessage id=\"button_ok\" defautMessage=\"OK\" description=\"Confirmation button [OK]\" />\n              </button>\n            </div>\n          : null}\n        </div>\n        :\n        <div className=\"quoted\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.setState({activated: true});}}>\n            <i className=\"material-icons\">edit</i> &nbsp;<FormattedMessage id=\"title_manage_tags\" defaultMessage=\"Manage\"\n              description=\"Section title for the list of tags\" />\n          </a>\n          <>{tags}</>\n        </div>\n      }\n      </div>\n    );\n  }\n};\n","// InfoView: panel with topic/user info.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport ContactList from '../widgets/contact-list.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupManager from '../widgets/group-manager.jsx';\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport MenuCancel from '../widgets/menu-cancel.jsx';\nimport MoreButton from '../widgets/more-button.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\nimport TagManager from '../widgets/tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH, NO_ACCESS_MODE } from '../config.js';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, vcard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  requested: {\n    id: 'requested_permissions',\n    defaultMessage: 'Requested',\n    description: 'Title for permissions'\n  },\n  granted: {\n    id: 'granted_permissions',\n    defaultMessage: 'Granted',\n    description: 'Title for permissions'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n  other_user: {\n    id: 'label_other_user',\n    defaultMessage: 'Other',\n    description: 'Label for the other user when the user is unnamed'\n  },\n  clear_messages: {\n    id: 'action_clear_messages',\n    defaultMessage: 'Clear Messages',\n    description: 'Flat button [Clear Messages] (soft-delete messages)'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n  delete_messages: {\n    id: 'action_delete_messages',\n    defaultMessage: 'Clear Messages for All',\n    description: 'Flat button [Clear for All] (hard-delete all messages)'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  leave_chat: {\n    id: 'action_leave_chat',\n    defaultMessage: 'Leave Conversation',\n    description: 'Flat button [Leave Conversation]'\n  },\n  leave_chat_warning: {\n    id: 'leave_chat_warning',\n    defaultMessage: 'Are you sure you want to leave this conversation?',\n    description: 'Alert dialog warning when unsubscribing from a chat.'\n  },\n  block_contact: {\n    id: 'action_block_contact',\n    defaultMessage: \"Block Contact\",\n    description: \"Flat button [Block Contact]\"\n  },\n  block_contact_warning: {\n    id: 'block_contact_warning',\n    defaultMessage: 'Are you sure you want to block this contact?',\n    description: 'Alert dialog warning when blocking a contact.'\n  },\n  report_chat: {\n    id: 'action_report_chat',\n    defaultMessage: 'Report Conversation',\n    description: 'Flat button [Report Group]'\n  },\n  report_chat_warning: {\n    id: 'report_chat_warning',\n    defaultMessage: 'Are you sure you want to block and report this conversation?',\n    description: 'Alert dialog warning when reporting a conversation for abuse'\n  },\n});\n\nclass InfoView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      topic: null,\n      owner: false,\n      admin: false,\n      sharer: false,\n      deleter: false,\n      muted: false,\n      address: null,\n      groupTopic: undefined,\n      channel: undefined,\n      fullName: undefined,\n      avatar: null,\n      private: null,\n      selectedContact: null,\n      access: null,\n      modeGiven: null,\n      modeWant: null,\n      modeGiven2: null, // P2P topic, the other user mode given\n      modeWant2: null,  // P2P topic, the other user mode want\n      auth: null,\n      anon: null,\n      contactList: [],\n      tags: [],\n      showMemberPanel: false,\n      showPermissionEditorFor: undefined,\n      moreInfoExpanded: false,\n      previousMetaDesc: undefined,\n      previousSubsUpdated: undefined,\n      previousTagsUpdated: undefined\n    };\n\n    this.resetSubs = this.resetSubs.bind(this);\n    this.resetDesc = this.resetDesc.bind(this);\n    this.onMetaDesc = this.onMetaDesc.bind(this);\n    this.onSubsUpdated = this.onSubsUpdated.bind(this);\n    this.onTagsUpdated = this.onTagsUpdated.bind(this);\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\n    this.handlePrivateUpdate = this.handlePrivateUpdate.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleMuted = this.handleMuted.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handleShowAddMembers = this.handleShowAddMembers.bind(this);\n    this.handleHideAddMembers = this.handleHideAddMembers.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleDeleteMessages = this.handleDeleteMessages.bind(this);\n    this.handleLeave = this.handleLeave.bind(this);\n    this.handleBlock = this.handleBlock.bind(this);\n    this.handleReport = this.handleReport.bind(this);\n    this.handleMemberSelected = this.handleMemberSelected.bind(this);\n    this.handleMoreInfo = this.handleMoreInfo.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.handleContextMenu = this.handleContextMenu.bind(this);\n  }\n\n  // No need to separately handle component mount.\n  componentDidUpdate(props) {\n    const topic = this.props.tinode.getTopic(props.topic);\n    if (!topic) {\n      return;\n    }\n\n    if (this.onMetaDesc != topic.onMetaDesc) {\n      this.previousMetaDesc = topic.onMetaDesc;\n      topic.onMetaDesc = this.onMetaDesc;\n\n      this.previousSubsUpdated = topic.onSubsUpdated;\n      topic.onSubsUpdated = this.onSubsUpdated;\n\n      if (topic.getType() == 'grp') {\n        this.previousTagsUpdated = topic.onTagsUpdated;\n        topic.onTagsUpdated = this.onTagsUpdated;\n      } else {\n        this.previousTagsUpdated = undefined;\n      }\n    }\n\n    if (this.state.topic != props.topic) {\n      this.setState({topic: props.topic});\n      this.resetDesc(topic, props);\n      this.resetSubs(topic, props);\n    }\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.setState({topic: null});\n    topic.onMetaDesc = this.previousMetaDesc;\n    topic.onSubsUpdated = this.previousSubsUpdated;\n    topic.onTagsUpdated = this.previousTagsUpdated;\n  }\n\n  resetSubs(topic, props) {\n    const newState = {contactList: []};\n    if (topic.getType() == 'p2p') {\n      // Fetch the other party in the p2p conversation.\n      // Topic may not be ready yet, so check if user is found.\n      const user2 = topic.subscriber(props.topic);\n      if (user2) {\n        newState.modeGiven2 = user2.acs.getGiven();\n        newState.modeWant2 = user2.acs.getWant();\n      } else {\n        newState.modeGiven2 = NO_ACCESS_MODE;\n        newState.modeWant2 = NO_ACCESS_MODE;\n      }\n    } else {\n      topic.subscribers((sub) => {\n        newState.contactList.push(sub);\n      }, this);\n    }\n\n    this.setState(newState);\n  }\n\n  resetDesc(topic, props) {\n    const defacs = topic.getDefaultAccess() || {};\n    const acs = topic.getAccessMode();\n\n    this.setState({\n      owner: acs && acs.isOwner(),\n      admin: acs && acs.isAdmin(),\n      sharer: acs && acs.isSharer(),\n      deleter: acs && acs.isDeleter(),\n      muted: acs && acs.isMuted(),\n\n      fullName: topic.public ? topic.public.fn : undefined,\n      avatar: makeImageUrl(topic.public ? topic.public.photo : null),\n      private: topic.private ? topic.private.comment : null,\n      address: topic.name,\n      groupTopic: (topic.getType() == 'grp'),\n      channel: topic.isChannel(),\n      showMemberPanel: false,\n      access: acs ? acs.getMode() : undefined,\n      modeGiven: acs ? acs.getGiven() : undefined,\n      modeWant: acs ? acs.getWant() : undefined,\n      auth: defacs.auth,\n      anon: defacs.anon\n    });\n\n    if (topic.getType() == 'grp' && acs && acs.isOwner()) {\n      // Requesting tags: owner is editing the topic.\n      topic.getMeta(topic.startMetaQuery().withTags().build());\n    }\n  }\n\n  onMetaDesc(desc) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetDesc(topic, this.props);\n\n    if (this.previousMetaDesc && this.previousMetaDesc != this.onMetaDesc) {\n      this.previousMetaDesc(desc);\n    }\n  }\n\n  onSubsUpdated(subs) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetSubs(topic, this.props);\n\n    if (this.previousSubsUpdated && this.previousSubsUpdated != this.onSubsUpdated) {\n      this.previousSubsUpdated(subs);\n    }\n  }\n\n  onTagsUpdated(tags) {\n    this.setState({tags: tags});\n\n    if (this.previousTagsUpdated && this.previousTagsUpdated != this.onTagsUpdated) {\n      this.previousTagsUpdated();\n    }\n  }\n\n  handleFullNameUpdate(fn) {\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.fullName !== fn) {\n      this.setState({fullName: fn});\n      this.props.onTopicDescUpdate(this.props.topic, vcard(fn, null), null);\n    }\n  }\n\n  handlePrivateUpdate(comment) {\n    comment = comment.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.private !== comment) {\n      this.setState({private: comment});\n      this.props.onTopicDescUpdate(this.props.topic, null, comment || Tinode.DEL_CHAR);\n    }\n  }\n\n  handleImageChanged(img) {\n    this.setState({avatar: img});\n    this.props.onTopicDescUpdate(this.props.topic, vcard(null, img || Tinode.DEL_CHAR), null);\n  }\n\n  handleMuted(ignored, checked) {\n    this.setState({muted: checked});\n    this.props.onChangePermissions(this.props.topic, checked ? '-P' : '+P');\n  }\n\n  handlePermissionsChanged(perm) {\n    switch (this.state.showPermissionEditorFor) {\n      case 'auth':\n        this.props.onTopicDescUpdate(this.props.topic, null, null, {auth: perm});\n        break;\n      case 'anon':\n        this.props.onTopicDescUpdate(this.props.topic, null, null, {anon: perm});\n        break;\n      case 'mode':\n      case 'want':\n        this.props.onChangePermissions(this.props.topic, perm);\n        break;\n      case 'given':\n        this.props.onChangePermissions(this.props.topic, perm, this.props.topic);\n        break;\n      case 'user':\n        this.props.onChangePermissions(this.props.topic, perm, this.state.userPermissionsEdited);\n        break;\n    }\n\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handleLaunchPermissionsEditor(which, uid) {\n    const {formatMessage} = this.props.intl;\n    let toEdit, toCompare, toSkip, titleEdit, titleCompare, userTitle, userAvatar;\n    switch (which) {\n      case 'mode':\n        toEdit = this.state.access;\n        break;\n      case 'want':\n        toEdit = this.state.modeWant;\n        toCompare = this.state.modeGiven;\n        if (this.state.owner) {\n          // Don't allow owner to unset 'O' permission. All other permissions are OK.\n          toSkip = 'O';\n        } else {\n          // Allow accepting any of 'ASDO' permissions but don't allow asking for them.\n          toSkip = Tinode.AccessMode.encode(Tinode.AccessMode.diff('ASDO', this.state.modeGiven));\n          if (this.state.channel) {\n            // Channels are read-only.\n            toSkip += 'W';\n          }\n        }\n        titleEdit = formatMessage(messages.requested);\n        titleCompare = formatMessage(messages.granted);\n        break;\n      case 'given':\n        toEdit = this.state.modeGiven2;\n        toCompare = this.state.modeWant2;\n        toSkip = this.state.groupTopic ? (this.state.owner ? '' : 'O') : 'ASDO';\n        titleEdit = formatMessage(messages.granted);\n        titleCompare = formatMessage(messages.requested);\n        break;\n      case 'auth':\n        toEdit = this.state.auth;\n        toSkip = 'O';\n        break;\n      case 'anon':\n        toEdit = this.state.anon;\n        toSkip = 'O';\n        break;\n      case 'user': {\n        const topic = this.props.tinode.getTopic(this.props.topic);\n        if (!topic) {\n          return;\n        }\n        const user = topic.subscriber(uid);\n        if (!user || !user.acs) {\n          return;\n        }\n        toEdit = user.acs.getGiven();\n        toCompare = user.acs.getWant();\n        toSkip = this.state.owner ? '' : 'O';\n        titleEdit = formatMessage(messages.granted);\n        titleCompare = formatMessage(messages.requested);\n        if (user.public) {\n          userTitle = user.public.fn;\n          userAvatar = user.public.photo;\n        }\n        break;\n      }\n      default:\n        console.log(\"Unknown permission editing mode '\" + which + \"'\");\n        break;\n    }\n    this.setState({\n      showPermissionEditorFor: which,\n      userPermissionsEdited: uid,\n      userPermissionsTitle: userTitle,\n      userPermissionsAvatar: userAvatar,\n      editedPermissions: toEdit,\n      immutablePermissions: toCompare,\n      editedPermissionsTitle: titleEdit,\n      immutablePermissionsTitle: titleCompare,\n      editedPermissionsSkipped: toSkip,\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handleShowAddMembers(e) {\n    e.preventDefault();\n    this.props.onInitFind();\n    this.setState({showMemberPanel: true});\n  }\n\n  handleHideAddMembers() {\n    this.setState({showMemberPanel: false});\n  }\n\n  handleMemberUpdateRequest(members, added, removed) {\n    this.props.onMemberUpdateRequest(this.props.topic, added, removed);\n    this.setState({showMemberPanel: false});\n  }\n\n  handleDeleteMessages(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(this.state.deleter ? messages.delete_messages : messages.clear_messages), // title\n      formatMessage(this.state.deleter ? messages.delete_messages_warning : messages.clear_messages_warning), // content\n      (() => { this.props.onDeleteMessages(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleLeave(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.leave_chat), // title\n      formatMessage(messages.leave_chat_warning), // content\n      (() => { this.props.onLeaveTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleBlock(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.block_contact), // title\n      formatMessage(messages.block_contact_warning), // content\n      (() => { this.props.onBlockTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleReport(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.report_chat), // title\n      formatMessage(messages.report_chat_warning), // content\n      (() => { this.props.onReportTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleMemberSelected(uid) {\n    this.setState({selectedContact: uid});\n  }\n\n  handleMoreInfo(open) {\n    this.setState({moreInfoExpanded: open});\n  }\n\n  handleTagsUpdated(tags) {\n    if (!arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      this.props.onTopicTagsUpdate(this.props.topic, tags);\n    }\n  }\n\n  handleContextMenu(params) {\n    const {formatMessage} = this.props.intl;\n    const instance = this;\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    const user = topic.subscriber(params.topicName);\n    if (!user || !user.acs) {\n      return;\n    }\n\n    const menuItems = [\n      {title: formatMessage(messages.edit_permissions), handler: function() {\n        instance.handleLaunchPermissionsEditor('user', params.topicName);\n      }},\n      'member_delete',\n      user.acs.isMuted() ? 'member_unmute' : 'member_mute',\n      user.acs.isJoiner() ? 'member_block' : 'member_unblock'\n    ];\n    this.props.showContextMenu({\n      topicName: this.props.topic,\n      x: params.x,\n      y: params.y,\n      user: params.topicName}, menuItems);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n\n    return (\n      <div id=\"info-view\">\n        <div className=\"caption-panel\" id=\"info-caption-panel\">\n          <div className=\"panel-title\" id=\"info-title\">\n            <FormattedMessage id=\"title_info\" defaultMessage=\"Info\" description=\"Title for InfoView\" />\n          </div>\n          <div>\n            <MenuCancel onCancel={this.props.onCancel} />\n          </div>\n        </div>\n        {this.props.displayMobile ?\n          <ErrorPanel\n            level={this.props.errorLevel}\n            text={this.props.errorText}\n            onClearError={this.props.onError} /> : null}\n        {this.state.showMemberPanel ?\n          <GroupManager\n            members={this.state.contactList}\n            requiredMember={this.props.myUserId}\n            keepInitialMembers={!this.state.admin && !this.state.owner}\n            myUserId={this.props.myUserId}\n            contacts={this.props.searchableContacts}\n            onCancel={this.handleHideAddMembers}\n            onSubmit={this.handleMemberUpdateRequest} />\n          :\n        this.state.showPermissionEditorFor ?\n          <PermissionsEditor\n            mode={this.state.editedPermissions}\n            compare={this.state.immutablePermissions}\n            skip={this.state.editedPermissionsSkipped}\n            modeTitle={this.state.editedPermissionsTitle}\n            compareTitle={this.state.immutablePermissionsTitle}\n            userTitle={this.state.userPermissionsTitle}\n            item={this.state.userPermissionsEdited}\n            userAvatar={this.state.userPermissionsAvatar}\n            onSubmit={this.handlePermissionsChanged}\n            onCancel={this.handleHidePermissionsEditor}\n            />\n          :\n          <div id=\"info-view-content\" className=\"scrollable-panel\">\n            <div className=\"panel-form-row\">\n              <div className=\"panel-form-column\">\n                <div><label className=\"small\">\n                  <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                    description=\"Label for editing topic name\" />\n                </label></div>\n                <div><InPlaceEdit\n                    placeholder={this.state.groupTopic ? \"Group name\" : <i>Unknown</i>}\n                    readOnly={!this.state.owner}\n                    value={this.state.fullName}\n                    required={true}\n                    onFinished={this.handleFullNameUpdate} /></div>\n                <div>\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                      description=\"Label for editing 'private'\" />\n                  </label>\n                </div>\n                <div>\n                  <FormattedMessage id=\"private_editing_placeholder\"\n                    defaultMessage=\"Visible to you only\"\n                    description=\"Placeholder for editing 'private'\">{\n                    (private_placeholder) => <InPlaceEdit\n                      placeholder={private_placeholder}\n                      value={this.state.private}\n                      onFinished={this.handlePrivateUpdate} />\n                  }</FormattedMessage>\n                </div>\n              </div>\n              <AvatarUpload\n                avatar={this.state.avatar}\n                readOnly={!this.state.owner}\n                uid={this.props.topic}\n                title={this.state.fullName}\n                onImageChanged={this.handleImageChanged}\n                onError={this.props.onError} />\n            </div>\n            <div className=\"hr\" />\n            <div className=\"panel-form-column\">\n              <div className=\"panel-form-row\">\n                <label>\n                  <FormattedMessage id=\"label_muting_topic\" defaultMessage=\"Muted:\"\n                    description=\"Label for Muting/unmuting the topic\" />\n                </label>\n                <CheckBox name=\"P\" checked={this.state.muted}\n                  onChange={this.handleMuted} />\n              </div>\n              <FormattedMessage id=\"action_more\" defaultMessage=\"More\"\n                description=\"Action for showing more content\">{\n                (more) => <MoreButton\n                  title={more}\n                  open={this.state.moreInfoExpanded}\n                  onToggle={this.handleMoreInfo} />\n              }</FormattedMessage>\n              {this.state.moreInfoExpanded ?\n                <div className=\"panel-form-column\">\n                  <div className=\"panel-form-row\">\n                    <label><FormattedMessage id=\"label_user_id\" /></label>\n                    <tt>{this.state.address}</tt>\n                  </div>\n                  {this.state.groupTopic ?\n                    <div className=\"panel-form-row\">\n                      <label>\n                        <FormattedMessage id=\"label_your_permissions\" defaultMessage=\"Your permissions:\"\n                          description=\"Label for current user permissions\" />\n                      </label>\n                      <tt className=\"clickable\"\n                        onClick={this.handleLaunchPermissionsEditor.bind(this, 'want')}>\n                        {this.state.access}\n                      </tt>\n                    </div>\n                    :\n                    <div>\n                      <div>\n                        <label className=\"small\">\n                          <FormattedMessage id=\"label_permissions\" defaultMessage=\"Permissions:\"\n                            description=\"Section title\" />\n                        </label>\n                      </div>\n                      <div className=\"quoted\">\n                        <div>\n                          <FormattedMessage id=\"label_you\" defaultMessage=\"You:\"\n                            description=\"Label for the current user\" /> &nbsp;<tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'want')}>\n                          {this.state.access}\n                        </tt></div>\n                        <div>{this.state.fullName ? this.state.fullName : formatMessage(messages.other_user)}:\n                          &nbsp;<tt className=\"clickable\" onClick={this.handleLaunchPermissionsEditor.bind(this, 'given')}>\n                          {this.state.modeGiven2}\n                          </tt>\n                        </div>\n                      </div>\n                    </div>\n                  }\n                  {this.state.sharer && (this.state.auth || this.state.anon) ?\n                  <div>\n                    <div>\n                      <label className=\"small\">\n                        <FormattedMessage id=\"label_default_access\" defaultMessage=\"Default access mode:\"\n                          description=\"Section title\" />\n                      </label>\n                    </div>\n                    <div className=\"quoted\">\n                      <div>Auth: {this.state.admin ?\n                        <tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>\n                          {this.state.auth}\n                        </tt>\n                        :\n                        <tt>{this.state.auth}</tt>\n                      }\n                      </div>\n                      <div>Anon: {this.state.admin ?\n                        <tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>\n                          {this.state.anon}\n                        </tt>\n                        :\n                        <tt>{this.state.anon}</tt>\n                      }\n                      </div>\n                    </div>\n                  </div>\n                  :\n                  null\n                }\n                </div>\n              :\n              null\n              }\n            </div>\n            <div className=\"hr\" />\n            {this.state.owner ?\n              <>\n                <FormattedMessage id=\"title_tag_manager\">{\n                  (tags) => <TagManager\n                    title={tags}\n                    tags={this.state.tags}\n                    activated={false}\n                    tinode={this.props.tinode}\n                    onSubmit={this.handleTagsUpdated} />\n                }</FormattedMessage>\n                <div className=\"hr\" />\n              </>\n              :\n              null\n            }\n            <div className=\"panel-form-column\">\n              {!this.state.channel ?\n                <a href=\"#\" className=\"flat-button\" onClick={this.handleDeleteMessages}>\n                  <i className=\"material-icons\">delete_outline</i> &nbsp;{\n                    formatMessage(this.state.deleter ? messages.delete_messages : messages.clear_messages)\n                  }\n                </a>\n                :\n                null\n              }\n              <a href=\"#\" className=\"red flat-button\" onClick={this.handleLeave}>\n                <i className=\"material-icons\">exit_to_app</i> &nbsp;{formatMessage(messages.leave_chat)}\n              </a>\n              {!this.state.groupTopic ?\n                <a href=\"#\" className=\"red flat-button\" onClick={this.handleBlock}>\n                  <i className=\"material-icons\">block</i> &nbsp;{formatMessage(messages.block_contact)}\n                </a>\n                :\n                null\n              }\n              {!this.state.owner ?\n                <a href=\"#\" className=\"red flat-button\" onClick={this.handleReport}>\n                  <i className=\"material-icons\">report</i> &nbsp;{formatMessage(messages.report_chat)}\n                </a>\n                :\n                null\n              }\n            </div>\n            {this.state.groupTopic && this.state.sharer ?\n              <>\n                <div className=\"hr\" />\n                <div className=\"panel-form-column\">\n                  <div className=\"panel-form-row\">\n                    <label className=\"small\">\n                      <FormattedMessage id=\"label_group_members\" defaultMessage=\"Group members:\"\n                        description=\"Section title or label\" />\n                    </label>\n                  </div>\n                  <div className=\"panel-form-row\">\n                    <a href=\"#\" className=\"flat-button\" onClick={this.handleShowAddMembers}>\n                      <i className=\"material-icons\">person_add</i> &nbsp;<FormattedMessage id=\"button_add_members\"\n                        defaultMessage=\"Add members\" description=\"Flat button [Add members] (to topic)\" />\n                    </a>\n                  </div>\n                  <FormattedMessage id=\"group_has_no_members\" defaultMessage=\"No members\"\n                    description=\"Shown in place of group members\">{\n                    (no_members) => <ContactList\n                      contacts={this.state.contactList}\n                      myUserId={this.props.myUserId}\n                      emptyListMessage={no_members}\n                      topicSelected={this.state.selectedContact}\n                      showOnline={false}\n                      showUnread={false}\n                      showMode={true}\n                      noScroll={true}\n                      onTopicSelected={this.handleMemberSelected}\n                      showContextMenu={this.state.admin ? this.handleContextMenu : false}\n                    />\n                  }</FormattedMessage>\n                </div>\n              </>\n              :\n              null\n            }\n          </div>\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(InfoView);\n","// File uload/download progress indicator with a cancel inside.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class FileProgress extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"uploader\">\n        <div><span style={{width: (this.props.progress * 100) + \"%\"}}></span></div>\n        {this.props.progress < 0.999 ?\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n            <i className=\"material-icons\">close</i> <FormattedMessage id=\"action_cancel\"\n              defaultMessage=\"cancel\" description=\"Call to action [cancel]\" />\n          </a>\n          :\n          <FormattedMessage id=\"upload_finishing\" defaultMessage=\"finishing...\"\n            description=\"Notification that upload is finishing\" />\n        }\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\nimport { bytesToHumanSize } from '../lib/strformat.js';\nimport { isUrlRelative, sanitizeUrl } from '../lib/utils.js';\n\nexport default class Attachment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      downloader: null,\n      progress: 0\n    };\n\n    this.downloadFile = this.downloadFile.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  downloadFile(url, filename, mimetype) {\n    if (!url) {\n      this.props.onError(\"Invalid download URL '\" + url + \"'\");\n      return;\n    }\n\n    const downloader = this.props.tinode.getLargeFileHelper();\n    this.setState({downloader: downloader});\n    downloader.download(url, filename, mimetype,\n      (loaded) => {\n        this.setState({progress: loaded / this.props.size});\n      },\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    ).then(() => {\n      this.setState({downloader: null, progress: 0});\n    }).catch((err) => {\n      if (err) {\n        this.props.onError(\"Error downloading file: \" + err.message, 'err');\n      }\n      this.setState({downloader: null, progress: 0});\n    });\n  }\n\n  handleCancel() {\n    if (this.props.uploading) {\n      this.props.onCancelUpload();\n    } else if (this.state.downloader) {\n      this.state.downloader.cancel();\n    }\n  }\n\n  render() {\n    let filename = this.props.filename || 'file_attachment';\n    if (filename.length > 36) {\n      filename = filename.substr(0, 16) + '...' + filename.substr(-16);\n    }\n    let size = this.props.size > 0 ?\n      <span className=\"small gray\">({bytesToHumanSize(this.props.size)})</span> :\n      null;\n\n    // Detect if the download URL is relative or absolute.\n    // If the URL is relative use LargeFileHelper to attach authentication\n    // credentials to the request.\n    let url, helperFunc;\n    if (!this.props.uploading && !this.state.downloader && isUrlRelative(this.props.downloadUrl)) {\n      // Relative URL. Use download helper.\n      url = '#';\n      helperFunc = (e) => {\n        e.preventDefault();\n        this.downloadFile(this.props.downloadUrl, this.props.filename, this.props.mimetype);\n      };\n    } else {\n      url = sanitizeUrl(this.props.downloadUrl);\n      helperFunc = null;\n    }\n    const downloadWidget = <><i className=\"material-icons\">file_download</i> <FormattedMessage id=\"save_attachment\"\n      defaultMessage=\"save\" description=\"Call to save an attachment\" /></>;\n    return (\n      <div className=\"attachment\">\n        <div><i className=\"material-icons big gray\">insert_drive_file</i></div>\n        <div className=\"flex-column\">\n          <div>{filename} {size}</div>\n          {this.props.uploading || this.state.downloader ?\n            <FileProgress progress={this.props.uploading ? this.props.progress : this.state.progress}\n              onCancel={this.handleCancel} />\n            :\n            <div>{url ?\n              <a href={url} download={this.props.filename} onClick={helperFunc}>{downloadWidget}</a>\n              :\n              <span className=\"light-gray\">{downloadWidget}</span>\n            }</div>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n","// Received/read indicator.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { shortDateFormat } from '../lib/strformat.js';\n\nconst messages = defineMessages({\n  'sending': {\n    'id': 'message_sending',\n    'defaultMessage': 'sending...',\n    'description': 'Message being sent, in place of time stamp'\n  },\n  'failed': {\n    'id': 'message_sending_failed',\n    'defaultMessage': 'failed',\n    'description': 'Failed to send message, in place of time stamp'\n  }\n});\n\nclass ReceivedMarker extends React.PureComponent {\n  render() {\n    const {formatMessage} = this.props.intl;\n    let timestamp;\n    if (this.props.received <= Tinode.MESSAGE_STATUS_SENDING) {\n      timestamp = formatMessage(messages.sending);\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_FAILED) {\n      timestamp = formatMessage(messages.failed);\n    } else {\n      timestamp = shortDateFormat(this.props.timestamp, this.props.intl.locale);\n    }\n\n    let marker = null;\n    if (this.props.received <= Tinode.MESSAGE_STATUS_SENDING) {\n      marker = (<i className=\"material-icons small\">access_time</i>); // watch face\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_FAILED) {\n      marker = (<i className=\"material-icons small amber\">warning</i>); // yellow icon /!\\\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_SENT) {\n      marker = (<i className=\"material-icons small\">done</i>); // checkmark\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_RECEIVED) {\n      marker = (<i className=\"material-icons small\">done_all</i>); // double checkmark\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_READ) {\n      marker = (<i className=\"material-icons small blue\">done_all</i>); // blue double checkmark\n    }\n\n    return (\n      <span className=\"timestamp\">\n        {timestamp}{'\\u00a0'}{marker}\n      </span>\n    );\n  }\n};\n\nexport default injectIntl(ReceivedMarker);\n","// Image view with progress bar and a cancel button.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\n\nexport default class UploadingImage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"inline-image\">\n        {React.createElement('img', this.props)}\n        <div className=\"rounded-container\">\n          <FileProgress progress={this.props.progress} onCancel={this.props.onCancelUpload} />\n        </div>\n      </div>\n    );\n  }\n};\n","// Single message, sent or received.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport Attachment from './attachment.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\nimport UploadingImage from './uploading-image.jsx'\nimport { sanitizeImageUrl, sanitizeUrl } from '../lib/utils.js';\n\nexport default class ChatMessage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      progress: 0\n    };\n\n    if (props.uploader) {\n      props.uploader.onProgress = this.handleProgress.bind(this);\n    }\n\n    this.handleImagePreview = this.handleImagePreview.bind(this);\n    this.handleFormButtonClick = this.handleFormButtonClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n  }\n\n  handleImagePreview(e) {\n    e.preventDefault();\n    this.props.onImagePreview({\n      url: e.target.src,\n      filename: e.target.title,\n      width: e.target.dataset.width,\n      height: e.target.dataset.height,\n      size: e.target.dataset.size,\n      type: e.target.dataset.mime\n    });\n  }\n\n  handleFormButtonClick(e) {\n    e.preventDefault();\n    const data = {\n      seq: this.props.seq\n    };\n    data.resp = {};\n    if (e.target.dataset.name) {\n      data.resp[e.target.dataset.name] = e.target.dataset.val ? e.target.dataset.val :\n        e.target.dataset.val === undefined ? 1 : '' + e.target.dataset.val;\n    }\n    if (e.target.dataset.act == 'url') {\n      data.ref = sanitizeUrl(e.target.dataset.ref) || 'about:blank';\n    }\n    const text = e.target.dataset.title || 'unknown';\n    this.props.onFormResponse(e.target.dataset.act, text, data);\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const menuItems = this.props.received == Tinode.MESSAGE_STATUS_FAILED ? ['menu_item_send_retry'] : [];\n    this.props.showContextMenu({ seq: this.props.seq, content: this.props.content,\n                                 y: e.pageY, x: e.pageX }, menuItems);\n  }\n\n  handleProgress(ratio) {\n    this.setState({progress: ratio});\n  }\n\n  handleCancelUpload() {\n    this.props.onCancelUpload(this.props.seq, this.props.uploader);\n  }\n\n  render() {\n    const sideClass = this.props.deleted ? 'center' :\n      (this.props.sequence + ' ' + (this.props.response ? 'left' : 'right'));\n    const bubbleClass = (this.props.sequence == 'single' || this.props.sequence == 'last') ? 'bubble tip' : 'bubble';\n    const avatar = this.props.deleted ? null : (this.props.userAvatar || true);\n    const fullDisplay = (this.props.userFrom && this.props.response &&\n      (this.props.sequence == 'single' || this.props.sequence == 'last'));\n\n    let content = this.props.content;\n    const attachments = [];\n    if (this.props.mimeType == Drafty.getContentType() && Drafty.isValid(content)) {\n      Drafty.attachments(content, function(att, i) {\n        if (att.mime == 'application/json') {\n          // Don't show json objects as attachments.\n          // They are not meant for users.\n          return;\n        }\n        attachments.push(<Attachment\n          tinode={this.props.tinode}\n          downloadUrl={Drafty.getDownloadUrl(att)}\n          filename={att.name} uploading={Drafty.isProcessing(att)}\n          mimetype={att.mime} size={Drafty.getEntitySize(att)}\n          progress={this.state.progress}\n          onCancelUpload={this.handleCancelUpload}\n          onError={this.props.onError}\n          key={i} />);\n      }, this);\n      content = React.createElement(React.Fragment, null, Drafty.format(content, draftyFormatter, this));\n    } else if (this.props.deleted) {\n      // Message represents a range of deleted messages.\n      content = <><i className=\"material-icons gray\">block</i> <i className=\"gray\">\n        <FormattedMessage id=\"deleted_content\"\n          defaultMessage=\"content deleted\" description=\"Shown when messages are deleted\" />\n      </i></>\n    } else if (typeof content != 'string') {\n      content = <>\n          <i className=\"material-icons gray\">error_outline</i> <i className=\"gray\">\n            <FormattedMessage id=\"invalid_content\"\n              defaultMessage=\"invalid content\" description=\"Shown when message is unreadable\" /></i>\n        </>\n    }\n\n    return (\n      <li className={sideClass}>\n        {this.props.userFrom && this.props.response ?\n          <div className=\"avatar-box\">\n            {fullDisplay ?\n              <LetterTile\n                topic={this.props.userFrom}\n                title={this.props.userName}\n                avatar={avatar} /> :\n              null}\n          </div> :\n          null}\n        <div>\n          <div className={bubbleClass}>\n            <div className=\"message-content\">\n              {content}\n              {attachments}\n              {this.props.timestamp ?\n                <ReceivedMarker\n                  timestamp={this.props.timestamp}\n                  received={this.props.received} />\n                : null}\n            </div>\n            {this.props.deleted || !this.props.showContextMenu ?\n              null :\n              <span className=\"menuTrigger\">\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">expand_more</i>\n                </a>\n              </span>\n            }\n          </div>\n          {fullDisplay ?\n            <div className=\"author\">\n              <FormattedMessage id=\"user_not_found\" defaultMessage=\"Not found\"\n                description=\"In place of a user's full name when the user is not found.\">{\n                    (notFound) => {return this.props.userName || <i>{notFound}</i>}\n              }</FormattedMessage>\n            </div>\n            : null\n          }\n        </div>\n      </li>\n    );\n  }\n};\n\n// Convert Drafty object to a tree of React elements.\nimport { BROKEN_IMAGE_SIZE, REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\n\n// Converts Drafty elements into React classes.\n// 'this' is set by the caller.\nfunction draftyFormatter(style, data, values, key) {\n  if (style == 'EX') {\n    // attachments are handled elsewhere.\n    return null;\n  }\n\n  let el = Drafty.tagName(style);\n  if (el) {\n    const attr = Drafty.attrValue(style, data) || {};\n    attr.key = key;\n    switch (style) {\n      case 'HL':\n        // Highlighted text. Assign class name.\n        attr.className = 'highlight';\n        break;\n      case 'IM':\n        // Additional processing for images\n        if (data) {\n          attr.className = 'inline-image';\n          const dim = fitImageSize(data.width, data.height,\n            Math.min(this.props.viewportWidth - REM_SIZE * 4, REM_SIZE * 36), REM_SIZE * 24, false) ||\n            {dstWidth: BROKEN_IMAGE_SIZE, dstHeight: BROKEN_IMAGE_SIZE};\n          attr.style = { width: dim.dstWidth + 'px', height: dim.dstHeight + 'px' };\n          if (!Drafty.isProcessing(data)) {\n            attr.src = this.props.tinode.authorizeURL(sanitizeImageUrl(attr.src));\n            attr.alt = data.name;\n            if (attr.src) {\n              attr.onClick = this.handleImagePreview;\n              attr.className += ' image-clickable';\n            } else {\n              attr.src = 'img/broken_image.png';\n            }\n          } else {\n            // Use custom element instead of <img>.\n            el = UploadingImage;\n          }\n        }\n        break;\n      case 'BN':\n        // Button\n        attr.onClick = this.handleFormButtonClick;\n        let inner = React.Children.map(values, (child) => {\n          return typeof child == 'string' ? child : undefined;\n        });\n        if (!inner || inner.length == 0) {\n          inner = [attr.name]\n        }\n        // Get text which will be sent back when the button is clicked.\n        attr['data-title'] = inner.join('');\n        break;\n      case 'FM':\n        // Form\n        attr.className = 'bot-form';\n        break;\n      case 'RW':\n        // Form element formatting is dependent on element content.\n        break;\n      default:\n        if (el == '_UNKN') {\n          // Unknown element.\n          // TODO: make it prettier.\n          el = <><span className=\"material-icons\">extension</span></>;\n        }\n        break;\n    }\n    return React.createElement(el, attr, values);\n  } else {\n    return values;\n  }\n};\n","// Send message form.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport { KEYPRESS_DELAY } from '../config.js';\nimport { filePasted } from '../lib/blob-helpers.js';\n\nconst messages = defineMessages({\n  'messaging_disabled': {\n    id: 'messaging_disabled_prompt',\n    defaultMessage: 'Messaging disabled',\n    description: 'Prompt in SendMessage in read-only topic'\n  },\n  'type_new_message': {\n    id: 'new_message_prompt',\n    defaultMessage: 'New message',\n    description: 'Prompt in send message field'\n  },\n  'add_image_caption': {\n    id: 'image_caption_prompt',\n    defaultMessage: 'Image caption',\n    description: 'Prompt in SendMessage for attached image'\n  },\n  'file_attachment_too_large': {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  },\n  'cannot_initiate_upload': {\n    id: 'cannot_initiate_file_upload',\n    defaultMessage: 'Cannot initiate file upload.',\n    description: 'Generic error messagewhen attachment fails'\n  },\n});\n\nclass SendMessage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      message: '',\n      // Make initial keypress time as if it happened 5001 milliseconds in the past.\n      keypressTimestamp: new Date().getTime() - KEYPRESS_DELAY - 1\n    };\n\n    this.handlePasteEvent = this.handlePasteEvent.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleSend = this.handleSend.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleMessageTyping = this.handleMessageTyping.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.addEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.removeEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.messageEditArea) {\n      this.messageEditArea.focus();\n    }\n  }\n\n  handlePasteEvent(e) {\n    if (this.props.disabled) {\n      return;\n    }\n    // FIXME: handle large files too.\n    if (filePasted(e,\n      (bits, mime, width, height, fname) => {\n        this.props.onAttachImage(mime, bits, width, height, fname);\n      },\n      (mime, bits, fname) => {\n        this.props.onAttachFile(mime, bits, fname);\n      },\n      this.props.onError)) {\n\n      // If a file was pasted, don't paste base64 data into input field.\n      e.preventDefault();\n    }\n  }\n\n  handleAttachImage(e) {\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachImage(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleAttachFile(e) {\n    const {formatMessage} = this.props.intl;\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachFile(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleSend(e) {\n    e.preventDefault();\n    const message = this.state.message.trim();\n    if (message || this.props.acceptBlank || this.props.noInput) {\n      this.props.onSendMessage(message);\n      this.setState({message: ''});\n    }\n  }\n\n  /* Send on Enter key */\n  handleKeyPress(e) {\n    // Remove this if you don't want Enter to trigger send\n    if (e.key === 'Enter') {\n      // Have Shift-Enter insert a line break instead\n      if (!e.shiftKey) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.handleSend(e);\n      }\n    }\n  }\n\n  handleMessageTyping(e) {\n    const newState = {message: e.target.value};\n    if (this.props.onKeyPress) {\n      const now = new Date().getTime();\n      if (now - this.state.keypressTimestamp > KEYPRESS_DELAY) {\n        this.props.onKeyPress();\n        newState.keypressTimestamp = now;\n      }\n    }\n    this.setState(newState);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const prompt = this.props.disabled ?\n      formatMessage(messages.messaging_disabled) :\n      (this.props.messagePrompt ?\n        formatMessage(messages[this.props.messagePrompt]) :\n        formatMessage(messages.type_new_message));\n    return (\n      <div id=\"send-message-panel\">\n        {!this.props.disabled ?\n          <>\n            {this.props.onAttachFile ?\n              <>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachImage.click();}} title=\"Add image\">\n                  <i className=\"material-icons secondary\">photo</i>\n                </a>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachFile.click();}} title=\"Attach file\">\n                  <i className=\"material-icons secondary\">attach_file</i>\n                </a>\n              </>\n              :\n              null}\n            {this.props.noInput ?\n              <div className=\"hr thin\" /> :\n              <textarea id=\"sendMessage\" placeholder={prompt}\n                value={this.state.message} onChange={this.handleMessageTyping}\n                onKeyPress={this.handleKeyPress}\n                ref={(ref) => {this.messageEditArea = ref;}}\n                autoFocus />}\n            <a href=\"#\" onClick={this.handleSend} title=\"Send\">\n              <i className=\"material-icons\">send</i>\n            </a>\n            <input type=\"file\" ref={(ref) => {this.attachFile = ref;}}\n              onChange={this.handleAttachFile} style={{display: 'none'}} />\n            <input type=\"file\" ref={(ref) => {this.attachImage = ref;}} accept=\"image/*\"\n              onChange={this.handleAttachImage} style={{display: 'none'}} />\n          </>\n          :\n          <div id=\"writing-disabled\">{prompt}</div>\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SendMessage);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { bytesToHumanSize } from '../lib/strformat.js';\n\n// Get material icon name from mime type.\nfunction iconFromMime(mime) {\n  // If more icons become available in material icons, add them to this mime-to-icon mapping.\n  const mimeToIcon = {default: 'insert_drive_file', image: 'image', text: 'description', video: 'theaters'};\n\n  return mimeToIcon[mime] || mimeToIcon[(mime || '').split('/')[0]] || mimeToIcon['default'];\n}\n\nexport default class DocPreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleSendDoc = this.handleSendDoc.bind(this);\n  }\n\n  handleSendDoc(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(this.props.content.file);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          <span>{this.props.content.filename}</span>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\">\n          <div className=\"flex-column narrow\">\n            <i className=\"material-icons gray\">{iconFromMime(this.props.content.type)}</i>\n            <div><b><FormattedMessage id=\"label_content_type\" /></b> {this.props.content.type || 'application/octet-stream'}</div>\n            <div><b><FormattedMessage id=\"label_size\" /></b> {bytesToHumanSize(this.props.content.size)}</div>\n          </div>\n        </div>\n        <SendMessage\n          noInput={true}\n          onSendMessage={this.handleSendDoc}\n          onError={this.props.onError} />\n      </div>\n    );\n  }\n};\n","// GroupSubs: a list of group subscribers currently online.\n// Show in the topic title bar\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { MAX_ONLINE_IN_TOPIC } from '../config.js'\n\nimport LetterTile from './letter-tile.jsx';\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class GroupSubs extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const usersOnline = [];\n    const totalCount = (this.props.subscribers || []).length;\n    const countToShow = Math.min(MAX_ONLINE_IN_TOPIC, totalCount);\n\n    (this.props.subscribers || []).some((sub) => {\n      usersOnline.push(\n        <div className=\"avatar-box\" key={sub.user}>\n          <LetterTile\n            topic={sub.user}\n            avatar={makeImageUrl(sub.public ? sub.public.photo : null) || true}\n            title={sub.public ? sub.public.fn : null} />\n        </div>\n      );\n      return usersOnline.length == countToShow;\n    });\n\n    return (\n      <div id=\"topic-users\">{usersOnline} {totalCount > countToShow ?\n        <span>\n          <FormattedMessage id=\"more_online_members\" defaultMessage=\"+{overflow} more\"\n              description=\"Shown in MessagesView title bar when the number of online subscribers exceeds MAX_ONLINE_IN_TOPIC\"\n              values={{ overflow: (totalCount - countToShow) }} />\n        </span> : null}\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\nimport { bytesToHumanSize } from '../lib/strformat.js';\n\nexport default class ImagePreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      width: 0,\n      height: 0\n    };\n\n    this.handleSendImage = this.handleSendImage.bind(this);\n  }\n\n  assignWidth(node) {\n    if (node && !this.state.width) {\n      const bounds = node.getBoundingClientRect();\n      this.setState({\n        width: bounds.width | 0,\n        height: bounds.height | 0\n      });\n    }\n  }\n\n  handleSendImage(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(caption, this.props.content.blob);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n\n    const dim = fitImageSize(this.props.content.width, this.props.content.height,\n      this.state.width, this.state.height, false);\n    const size = dim ? { width: dim.dstWidth + 'px', height: dim.dstHeight + 'px' } :\n      ((this.props.content.width > this.props.content.height) ? {width: '100%'} : {height: '100%'});\n    size.maxWidth = '100%';\n    size.maxHeight = '100%';\n\n    let filename = this.props.content.filename;\n    // Average font aspect ratio is ~0.5; File name takes 1/3 of the viewport width.\n    const maxlength = Math.max(((this.state.width / REM_SIZE / 1.5) | 0) - 2, 12);\n    if (filename.length > maxlength) {\n      filename = filename.slice(0, maxlength/2 - 1) + '…' + filename.slice(1 - maxlength/2);\n    }\n    const width = this.props.content.width || '-';\n    const height = this.props.content.height || '-';\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          {!this.props.onSendMessage ?\n            <a href={this.props.content.url} download={this.props.content.filename}>\n              <i className=\"material-icons\">file_download</i> <FormattedMessage\n                id=\"download_action\" defaultMessage=\"download\" description=\"Call to action [download]\" />\n            </a>\n            :\n            <span>{this.props.content.filename}</span>\n          }\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\" ref={(node) => this.assignWidth(node)}>\n          <img src={this.props.content.url} style={size} className=\"image-preview\" alt={this.props.content.filename} />\n        </div>\n        {this.props.onSendMessage ?\n          <SendMessage\n            messagePrompt=\"add_image_caption\"\n            acceptBlank={true}\n            onSendMessage={this.handleSendImage}\n            onError={this.props.onError} />\n          :\n          <div id=\"image-preview-footer\">\n            <div>\n              <div><b><FormattedMessage id=\"label_file_name\" defaultMessage=\"File name:\"\n                description=\"Label for a file name\" /></b></div>\n              <div><span title={this.props.content.filename}>{filename ? filename : '-'}</span></div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n                description=\"Label for file content type (mime)\" /></b></div>\n              <div>{this.props.content.type}</div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n                description=\"Label for file size\" /></b></div>\n              <div>{width} &times; {height} px; {bytesToHumanSize(this.props.content.size)}</div>\n            </div>\n          </div>}\n      </div>\n    );\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Invitation extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleButtonAction = this.handleButtonAction.bind(this);\n  }\n\n  handleButtonAction(evt, data) {\n    evt.preventDefault();\n    this.props.onAction(data);\n  }\n\n  render() {\n    return (\n      <div className=\"accept-invite-panel\">\n        <div className=\"title\">\n          <FormattedMessage id=\"chat_invitation\"\n            defaultMessage=\"You are invited to start a new chat. What would you like to do?\"\n            description=\"New chat invitation message: [Accept] [Ignore] [Block].\" />\n        </div>\n        <div className=\"footer\">\n          <button className=\"blue\" onClick={event => { this.handleButtonAction(event, \"accept\"); }}>\n            <FormattedMessage id=\"chat_invitation_accept\"\n              defaultMessage=\"Accept\" description=\"Action [Accept] for chat invitation.\" />\n          </button>\n          <button className=\"white\" onClick={event => { this.handleButtonAction(event, \"delete\"); }}>\n            <FormattedMessage id=\"chat_invitation_ignore\"\n              defaultMessage=\"Ignore\" description=\"Action [Ignore] for chat invitation.\" />\n          </button>\n          <button className=\"white\" onClick={event => { this.handleButtonAction(event, \"block\"); }}>\n            <FormattedMessage id=\"chat_invitation_block\"\n              defaultMessage=\"Block\" description=\"Action [Block] for chat invitation.\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nexport default class LoadSpinner extends React.PureComponent {\n  render() {\n    return (this.props.show ?\n      <div className=\"load-spinner-box\"><div className=\"loader-spinner\"></div></div> : null);\n  }\n}\n","/* This is just a static page to display when no conversation is selected. */\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME } from '../config.js';\n\nexport default class LogoView extends React.PureComponent {\n  render() {\n    const version = APP_NAME + ' (' + Tinode.getLibrary() + ')';\n    return (\n      <div id=\"dummy-view\">\n        <div>\n          <a href=\"https://github.com/tinode/chat/\">\n            <img id=\"logo\" alt=\"logo\" src=\"img/logo.svg\" />\n            <h2>Tinode Web</h2>\n          </a>\n          <p><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\" /> {version}</p>\n          <p><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\" /> {this.props.serverVersion} ({this.props.serverAddress})</p>\n        </div>\n      </div>\n    );\n  }\n};\n","// Utility class for hash navigation.\n\n// Parse hash as in http://www.example.com/path#hash as if it were\n// path and arguments.\nexport default class HashNavigation {\n  static parseUrlHash(hash) {\n    // Split path from args, path -> parts[0], args->path[1]\n    const parts = hash.split('?', 2);\n    const params = {};\n    let path = [];\n    if (parts[0]) {\n      path = parts[0].substr(1).split('/');\n    }\n    if (parts[1]) {\n      parts[1].split('&').forEach(function(part) {\n        let item = part.split('=');\n        if (item[0]) {\n          params[decodeURIComponent(item[0])] = decodeURIComponent(item[1]);\n        }\n      });\n    }\n    return {path: path, params: params};\n  }\n\n  static navigateTo(url) {\n    window.location.hash = url;\n  }\n\n  static composeUrlHash(path, params) {\n    let url = path.join('/');\n    const args = [];\n    for (const key in params) {\n      if (params.hasOwnProperty(key)) {\n        args.push(key + '=' + params[key]);\n      }\n    }\n    if (args.length > 0) {\n      url += '?' + args.join('&');\n    }\n    return url;\n  }\n\n  static addUrlParam(hash, key, value) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.params[key] = value;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static removeUrlParam(hash, key) {\n    const parsed = this.parseUrlHash(hash);\n    delete parsed.params[key];\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlSidePanel(hash, sidepanel) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[0] = sidepanel;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlTopic(hash, topic) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[1] = topic;\n    // Close InfoView on topic change.\n    delete parsed.params.info;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n}\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\nconst Drafty = Tinode.Drafty;\n\nimport ChatMessage from '../widgets/chat-message.jsx';\nimport DocPreview from '../widgets/doc-preview.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupSubs from '../widgets/group-subs.jsx';\nimport ImagePreview from '../widgets/image-preview.jsx';\nimport Invitation from '../widgets/invitation.jsx';\nimport LetterTile from '../widgets/letter-tile.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport LogoView from './logo-view.jsx';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { DEFAULT_P2P_ACCESS_MODE, IMAGE_PREVIEW_DIM, KEYPRESS_DELAY, MESSAGES_PAGE,\n  MAX_EXTERN_ATTACHMENT_SIZE, MAX_IMAGE_DIM, MAX_INBAND_ATTACHMENT_SIZE, READ_DELAY } from '../config.js';\nimport { SUPPORTED_IMAGE_FORMATS, blobToBase64, filePasted, fileToBase64,\n  imageScaled, makeImageUrl } from '../lib/blob-helpers.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { bytesToHumanSize, shortDateFormat } from '../lib/strformat.js';\n\n// Run timer with this frequency (ms) for checking notification queue.\nconst NOTIFICATION_EXEC_INTERVAL = 300;\n\nconst messages = defineMessages({\n  'online_now': {\n    id: 'online_now',\n    defaultMessage: 'online now',\n    description: 'Indicator that the user or topic is currently online',\n  },\n  'last_seen': {\n    id: 'last_seen_timestamp',\n    defaultMessage: 'Last seen',\n    description: 'Label for the timestamp of when the user or topic was last online'\n  },\n  'not_found': {\n    id: 'title_not_found',\n    defaultMessage: 'Not found',\n    description: 'Title shown when topic is not found'\n  },\n  'channel': {\n    id: 'channel',\n    defaultMessage: 'channel',\n    description: 'Subtitle shown for channels in MessagesView instead of last seen'\n  }\n});\n\n// Checks if the access permissions are granted but not yet accepted.\nfunction isUnconfirmed(acs) {\n  if (acs) {\n    const ex = acs.getExcessive() || '';\n    return acs.isJoiner('given') && (ex.includes('R') || ex.includes('W'));\n  }\n  return false;\n}\n\nfunction isPeerRestricted(acs) {\n  if (acs) {\n    const ms = acs.getMissing() || '';\n    return acs.isJoiner('want') && (ms.includes('R') || ms.includes('W'));\n  }\n  return false;\n}\n\nclass MessagesView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = MessagesView.getDerivedStateFromProps(props, {});\n\n    this.leave = this.leave.bind(this);\n    this.sendImageAttachment = this.sendImageAttachment.bind(this);\n    this.sendFileAttachment = this.sendFileAttachment.bind(this);\n    this.sendKeyPress = this.sendKeyPress.bind(this);\n    this.handleScrollReference = this.handleScrollReference.bind(this);\n    this.handleScrollEvent = this.handleScrollEvent.bind(this);\n    this.handleDescChange = this.handleDescChange.bind(this);\n    this.handleSubsUpdated = this.handleSubsUpdated.bind(this);\n    this.handleNewMessage = this.handleNewMessage.bind(this);\n    this.handleAllMessagesReceived = this.handleAllMessagesReceived.bind(this);\n    this.handleInfoReceipt = this.handleInfoReceipt.bind(this);\n    this.handleImagePostview = this.handleImagePostview.bind(this);\n    this.handleClosePreview = this.handleClosePreview.bind(this);\n    this.handleFormResponse = this.handleFormResponse.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleShowContextMenuMessage = this.handleShowContextMenuMessage.bind(this);\n    this.handleNewChatAcceptance = this.handleNewChatAcceptance.bind(this);\n    this.handleEnablePeer = this.handleEnablePeer.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n    this.postReadNotification = this.postReadNotification.bind(this);\n    this.clearNotificationQueue = this.clearNotificationQueue.bind(this);\n\n    this.readNotificationQueue = [];\n    this.readNotificationTimer = null;\n  }\n\n  componentDidMount() {\n    // this.propsChange(this.props, this.state);\n    if (this.messagesScroller) {\n      this.messagesScroller.addEventListener('scroll', this.handleScrollEvent);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messagesScroller) {\n      this.messagesScroller.removeEventListener('scroll', this.handleScrollEvent);\n    }\n\n    // Flush all notifications.\n    this.clearNotificationQueue();\n  }\n\n  // Scroll last message into view on component update e.g. on message received\n  // or vertical shrinking.\n  componentDidUpdate(prevProps, prevState) {\n    if (this.messagesScroller) {\n      if (prevState.topic != this.state.topic || prevState.messages.length != this.state.messages.length) {\n        // New message\n        this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n      } else if (prevProps.viewportHeight > this.props.viewportHeight) {\n        // Componet changed height.\n        this.messagesScroller.scrollTop += prevProps.viewportHeight - this.props.viewportHeight;\n      }\n    }\n\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (this.state.topic != prevState.topic) {\n      if (prevState.topic && !Tinode.isNewGroupTopicName(prevState.topic)) {\n        this.leave(prevState.topic);\n      }\n\n      if (topic) {\n        topic.onData = this.handleNewMessage;\n        topic.onAllMessagesReceived = this.handleAllMessagesReceived;\n        topic.onInfo = this.handleInfoReceipt;\n        topic.onMetaDesc = this.handleDescChange;\n        topic.onSubsUpdated = this.handleSubsUpdated;\n        topic.onPres = this.handleSubsUpdated;\n      }\n    }\n\n    if (!this.props.applicationVisible) {\n      // If application is not visible, flush all unsent 'read' notifications.\n      this.clearNotificationQueue();\n    } else {\n      // Otherwise assume there are unread messages.\n      this.postReadNotification(0);\n    }\n\n    if (topic && !topic.isSubscribed() && this.props.ready &&\n        ((this.state.topic != prevState.topic) || !prevProps.ready)) {\n      // Is this a new topic?\n      const newTopic = (this.props.newTopicParams && this.props.newTopicParams._topicName == this.props.topic);\n\n      // Don't request the tags. They are useless unless the user\n      // is the owner and is editing the topic.\n      let getQuery = topic.startMetaQuery().withLaterDesc();\n      if (this.state.isSharer || (newTopic && !topic.isChannel())) {\n        // Request subscriptions only if one of S,O,A is given or it's a new non-channel topic.\n        getQuery = getQuery.withLaterSub();\n      }\n      if (this.state.isReader || newTopic) {\n        // Reading is either permitted or we don't know because it's a new topic. Ask for messages.\n        getQuery = getQuery.withLaterData(MESSAGES_PAGE);\n        if (this.state.isReader) {\n          getQuery = getQuery.withLaterDel();\n        }\n        // And show \"loading\" spinner.\n        this.setState({ fetchingMessages: true });\n      }\n      const setQuery = newTopic ? this.props.newTopicParams : undefined;\n      topic.subscribe(getQuery.build(), setQuery)\n        .then((ctrl) => {\n          if (ctrl.code == 303) {\n            // Redirect to another topic requested.\n            HashNavigation.navigateTo(HashNavigation.setUrlTopic('', ctrl.params.topic));\n            return;\n          }\n          if (this.state.topic != ctrl.topic) {\n            this.setState({topic: ctrl.topic});\n          }\n          this.props.onNewTopicCreated(this.props.topic, ctrl.topic);\n          // If there are unsent messages, try sending them now.\n          topic.queuedMessages((pub) => {\n            if (!pub._sending && topic.isSubscribed()) {\n              topic.publishMessage(pub);\n            }\n          });\n        })\n        .catch((err) => {\n          console.log(\"Failed subscription to\", this.state.topic);\n          this.props.onError(err.message, 'err');\n          const blankState = MessagesView.getDerivedStateFromProps({}, {});\n          blankState.title = this.props.intl.formatMessage(messages.not_found);\n          this.setState(blankState);\n        });\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let nextState = {};\n    if (!nextProps.topic) {\n      // Default state: no topic.\n      nextState = {\n        messages: [],\n        onlineSubs: [],\n        topic: null,\n        title: '',\n        avatar: null,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false,\n        peerMessagingDisabled: false,\n        channel: false\n      };\n    } else if (nextProps.topic != prevState.topic) {\n      const topic = nextProps.tinode.getTopic(nextProps.topic);\n      nextState = {\n        topic: nextProps.topic,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false\n      };\n\n      if (topic) {\n        // Topic exists.\n        const msgs = [];\n        const subs = [];\n\n        if (nextProps.connected) {\n          topic.subscribers((sub) => {\n            if (sub.online && sub.user != nextProps.myUserId) {\n              subs.push(sub);\n            }\n          });\n        }\n\n        topic.messages(function(msg) {\n          if (!msg.deleted) {\n            msgs.push(msg);\n          }\n        });\n\n        Object.assign(nextState, {\n          messages: msgs,\n          onlineSubs: subs\n        });\n\n        if (topic.public) {\n          Object.assign(nextState, {\n            title: topic.public.fn,\n            avatar: makeImageUrl(topic.public.photo)\n          });\n        } else {\n          Object.assign(nextState, {\n            title: '',\n            avatar: null\n          });\n        }\n\n        const peer = topic.p2pPeerDesc();\n        if (peer) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: isPeerRestricted(peer.acs)\n          });\n        } else if (prevState.peerMessagingDisabled) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: false\n          });\n        }\n        Object.assign(nextState, {\n          channel: topic.isChannel()\n        });\n      } else {\n        // Invalid topic.\n        Object.assign(nextState, {\n          messages: [],\n          onlineSubs: [],\n          title: '',\n          avatar: null,\n          peerMessagingDisabled: false,\n          channel: false\n        });\n      }\n    }\n\n    if (nextProps.acs) {\n      if (nextProps.acs.isWriter() != prevState.isWriter) {\n        nextState.isWriter = !prevState.isWriter;\n      }\n      if (nextProps.acs.isReader() != prevState.isReader) {\n        nextState.isReader = !prevState.isReader;\n      }\n      if (!nextProps.acs.isReader('given') != prevState.readingBlocked) {\n        nextState.readingBlocked = !prevState.readingBlocked;\n      }\n      if (nextProps.acs.isSharer() != prevState.isSharer) {\n        nextState.isSharer = !prevState.isSharer;\n      }\n    } else {\n      if (prevState.isWriter) {\n        nextState.isWriter = false;\n      }\n      if (prevState.isReader) {\n        nextState.isReader = false;\n      }\n      if (!prevState.readingBlocked) {\n        prevState.readingBlocked = true;\n      }\n      if (prevState.isSharer) {\n        nextState.isSharer = false;\n      }\n    }\n\n    if (isUnconfirmed(nextProps.acs) == !prevState.unconformed) {\n      nextState.unconfirmed = !prevState.unconformed;\n    }\n\n    // Clear subscribers online when there is no connection.\n    if (!nextProps.connected && prevState.onlineSubs && prevState.onlineSubs.length > 0) {\n      nextState.onlineSubs = [];\n    }\n\n    return nextState;\n  }\n\n  leave(oldTopicName) {\n    if (!oldTopicName) {\n      return;\n    }\n    let oldTopic = this.props.tinode.getTopic(oldTopicName);\n    if (oldTopic && oldTopic.isSubscribed()) {\n      oldTopic.leave(false)\n        .catch(() => { /* do nothing here */ })\n        .finally(() => {\n          // We don't care if the request succeeded or failed.\n          // The topic is dead regardless.\n          this.setState({fetchingMessages: false});\n          oldTopic.onData = undefined;\n          oldTopic.onAllMessagesReceived = undefined;\n          oldTopic.onInfo = undefined;\n          oldTopic.onMetaDesc = undefined;\n          oldTopic.onSubsUpdated = undefined;\n          oldTopic.onPres = undefined;\n        });\n    }\n  }\n\n  handleScrollReference(node) {\n    if (node) {\n      node.addEventListener('scroll', this.handleScrollEvent);\n      this.messagesScroller = node;\n      this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n    }\n  }\n\n  // Get older messages\n  handleScrollEvent(event) {\n    this.setState({scrollPosition: event.target.scrollHeight - event.target.scrollTop});\n    if (event.target.scrollTop <= 0) {\n      this.setState((prevState, props) => {\n        const newState = {};\n        if (!prevState.fetchingMessages) {\n          const topic = this.props.tinode.getTopic(this.state.topic);\n          if (topic && topic.isSubscribed() && topic.msgHasMoreMessages()) {\n            newState.fetchingMessages = true;\n            topic.getMessagesPage(MESSAGES_PAGE).catch((err) => {\n              this.setState({fetchingMessages: false});\n              this.props.onError(err.message, 'err');\n            });\n          }\n        }\n        return newState;\n      });\n    }\n  }\n\n  handleDescChange(desc) {\n    if (desc.public) {\n      this.setState({\n        title: desc.public.fn,\n        avatar: makeImageUrl(desc.public.photo)\n      });\n    } else {\n      this.setState({\n        title: '',\n        avatar: null\n      });\n    }\n\n    if (desc.acs) {\n      this.setState({\n        isWriter: desc.acs.isWriter(),\n        isReader: desc.acs.isReader(),\n        readingBlocked: !desc.acs.isReader('given'),\n        unconfirmed: isUnconfirmed(desc.acs),\n      });\n    }\n  }\n\n  postReadNotification(seq) {\n    // Ignore notifications if the app is invisible.\n    if (!this.props.applicationVisible) {\n      return;\n    }\n\n    // Set up the timer if it's not running already.\n    if (!this.readNotificationTimer) {\n      this.readNotificationTimer = setInterval(() => {\n        if (this.readNotificationQueue.length == 0) {\n          // Shut down the timer if the queue is empty.\n          clearInterval(this.readNotificationTimer);\n          this.readNotificationTimer = null;\n          return;\n        }\n\n        let seq = -1;\n        while (this.readNotificationQueue.length > 0) {\n          const n = this.readNotificationQueue[0];\n          if (n.topicName != this.state.topic) {\n            // Topic has changed. Drop the notification.\n            this.readNotificationQueue.shift();\n            continue;\n          }\n\n          const now = new Date();\n          if (n.sendAt <= now) {\n            // Remove expired notification from queue.\n            this.readNotificationQueue.shift();\n            seq = Math.max(seq, n.seq);\n          } else {\n            break;\n          }\n        }\n\n        // Send only one notification for the whole batch of messages.\n        if (seq >= 0) {\n          const topic = this.props.tinode.getTopic(this.state.topic);\n          if (topic) {\n            topic.noteRead(seq);\n          }\n        }\n      }, NOTIFICATION_EXEC_INTERVAL);\n    }\n\n    const now = new Date();\n    this.readNotificationQueue.push({\n      topicName: this.state.topic,\n      seq: seq,\n      sendAt: now.setMilliseconds(now.getMilliseconds() + READ_DELAY)\n    });\n  }\n\n  // Clear notification queue and timer.\n  clearNotificationQueue() {\n    this.readNotificationQueue = [];\n    if (this.readNotificationTimer) {\n      clearInterval(this.readNotificationTimer);\n      this.readNotificationTimer = null;\n    }\n  }\n\n  handleSubsUpdated() {\n    if (this.state.topic) {\n      const subs = [];\n      const topic = this.props.tinode.getTopic(this.state.topic);\n      topic.subscribers((sub) => {\n        if (sub.online && sub.user != this.props.myUserId) {\n          subs.push(sub);\n        }\n      });\n      const newState = {onlineSubs: subs};\n      const peer = topic.p2pPeerDesc();\n      if (peer) {\n        Object.assign(newState, {\n          peerMessagingDisabled: isPeerRestricted(peer.acs)\n        });\n      } else if (this.state.peerMessagingDisabled) {\n        Object.assign(newState, {\n          peerMessagingDisabled: false\n        });\n      }\n      this.setState(newState);\n    }\n  }\n\n  handleNewMessage(msg) {\n    // Regenerate messages list\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    const newState = {messages: []};\n    topic.messages((m) => {\n      if (!m.deleted) {\n        newState.messages.push(m);\n      }\n    });\n\n    // msg could be null if one or more messages were deleted.\n    if (msg && !msg.deleted) {\n      // If the message is added to the end of the message list,\n      // scroll to the bottom.\n      if (topic.isNewMessage(msg.seq)) {\n        newState.scrollPosition = 0;\n      }\n\n      // Aknowledge messages except own messages. They are\n      // automatically assumed to be read and recived.\n      const status = topic.msgStatus(msg);\n      if (status >= Tinode.MESSAGE_STATUS_SENT && msg.from != this.props.myUserId) {\n        this.postReadNotification(msg.seq);\n      }\n      this.props.onData(msg);\n    }\n    this.setState(newState);\n  }\n\n  handleAllMessagesReceived(count) {\n    this.setState({fetchingMessages: false});\n    if (count > 0) {\n      // 0 means \"latest\".\n      this.postReadNotification(0);\n    }\n  }\n\n  handleInfoReceipt(info) {\n    switch (info.what) {\n      case 'kp': {\n        clearTimeout(this.keyPressTimer);\n        var instance = this;\n        this.keyPressTimer = setTimeout(function() {\n          instance.setState({typingIndicator: false});\n        }, KEYPRESS_DELAY + 1000);\n        if (!this.state.typingIndicator) {\n          this.setState({typingIndicator: true});\n        }\n        break;\n      }\n      case 'read':\n      case 'recv':\n        // Redraw due to changed recv/read status.\n        this.forceUpdate();\n        break;\n      default:\n        console.log(\"Other change in topic: \", info.what);\n    }\n  }\n\n  handleImagePostview(content) {\n    this.setState({ imagePostview: content });\n  }\n\n  handleClosePreview() {\n    if (this.state.imagePreview && this.state.imagePreview.url) {\n      URL.revokeObjectURL(this.state.imagePreview.url);\n    }\n    this.setState({ imagePostview: null, imagePreview: null, docPreview: null });\n  }\n\n  handleFormResponse(action, text, data) {\n    if (action == 'pub') {\n      this.props.sendMessage(Drafty.attachJSON(Drafty.parse(text), data));\n    } else if (action == 'url') {\n      const url = new URL(data.ref);\n      const params = url.searchParams;\n      for (let key in data.resp) {\n        if (data.resp.hasOwnProperty(key)) {\n          params.set(key, data.resp[key]);\n        }\n      }\n      ['name', 'seq'].map(function(key) {\n        if (data[key]) {\n          params.set(key, data[key]);\n        }\n      });\n      params.set('uid', this.props.myUserId);\n      url.search = params;\n      window.open(url, '_blank');\n    } else {\n      console.log(\"Unknown action in form\", action);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.state.topic, y: e.pageY, x: e.pageX });\n  }\n\n  handleShowContextMenuMessage(params, messageSpecificMenuItems) {\n    params.topicName = this.state.topic;\n    const menuItems = messageSpecificMenuItems || [];\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (topic) {\n      if (!topic.isChannel()) {\n        menuItems.push('message_delete');\n      }\n      const acs = topic.getAccessMode();\n      if (acs && acs.isDeleter()) {\n        menuItems.push('message_delete_hard');\n      }\n    }\n    this.props.showContextMenu(params, menuItems);\n  }\n\n  handleNewChatAcceptance(action) {\n    this.props.onNewChat(this.state.topic, action);\n  }\n\n  handleEnablePeer(e) {\n    e.preventDefault();\n    this.props.onChangePermissions(this.state.topic, DEFAULT_P2P_ACCESS_MODE, this.state.topic);\n  }\n\n  sendKeyPress() {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (topic.isSubscribed()) {\n      topic.noteKeyPress();\n    }\n  }\n\n  // Send attachment as Drafty message:\n  // - if file is too large, upload it and send a s link.\n  // - if file is small enough, just send it in-band.\n  sendFileAttachment(file) {\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (file.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      if (!uploader) {\n        this.props.onError(this.props.intl.formatMessage(messages.cannot_initiate_upload));\n        return;\n      }\n      const uploadCompletionPromise = uploader.upload(file);\n      const msg = Drafty.attachFile(null, {\n        mime: file.type,\n        filename: file.name,\n        size: file.size,\n        urlPromise: uploadCompletionPromise\n      });\n      // Pass data and the uploader to the TinodeWeb.\n      this.props.sendMessage(msg, uploadCompletionPromise, uploader);\n    } else {\n      // Small enough to send inband.\n      fileToBase64(file,\n        (mime, bits, fname) => {\n          this.props.sendMessage(Drafty.attachFile(null, {mime: mime, data: bits, filename: fname}));\n        },\n        this.props.onError\n      );\n    }\n  }\n\n  // handleAttachFile method is called when [Attach file] button is clicked.\n  handleAttachFile(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    if (file.size > maxExternAttachmentSize) {\n      // Too large.\n      this.props.onError(this.props.intl.formatMessage({id: 'file_attachment_too_large'},\n          {size: bytesToHumanSize(file.size), limit: bytesToHumanSize(maxExternAttachmentSize)}), 'err');\n    } else {\n      this.setState({ docPreview: {\n        file: file,\n        filename: file.name,\n        size: file.size,\n        type: file.type\n      }});\n    }\n  }\n\n  // sendImageAttachment sends the image bits inband as Drafty message.\n  sendImageAttachment(caption, blob) {\n    const mime = this.state.imagePreview.type;\n    const width = this.state.imagePreview.width;\n    const height = this.state.imagePreview.height;\n    const fname = this.state.imagePreview.filename;\n\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (blob.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      if (!uploader) {\n        this.props.onError(this.props.intl.formatMessage(messages.cannot_initiate_upload));\n        return;\n      }\n      const uploadCompletionPromise = uploader.upload(blob);\n\n      // Make small preview to show while uploading.\n      imageScaled(blob, IMAGE_PREVIEW_DIM, IMAGE_PREVIEW_DIM, -1, false,\n        (tinyBlob) => {\n          // Convert tiny image into base64 for serialization and previewing.\n          blobToBase64(tinyBlob, (blobMime, tinyBits64) => {\n            let msg = Drafty.insertImage(null, 0, {\n              mime: mime,\n              _tempPreview: tinyBits64, // This preview will not be serialized.\n              width: width,\n              height: height,\n              filename: fname,\n              size: blob.size,\n              urlPromise: uploadCompletionPromise\n            });\n            if (caption) {\n              msg = Drafty.appendLineBreak(msg);\n              msg = Drafty.append(msg, Drafty.init(caption));\n            }\n            // Pass data and the uploader to the TinodeWeb.\n            this.props.sendMessage(msg, uploadCompletionPromise, uploader);\n          }\n        )},\n        // Failure\n        (err) => {\n          this.props.onError(err, 'err');\n        }\n      );\n      return;\n    }\n\n    // Upload the image if it's too big to be send inband.\n    blobToBase64(blob, (blobMime, bits64) => {\n      let msg = Drafty.insertImage(null, 0, {\n        mime: blobMime,\n        preview: bits64, // Serializable preview\n        width: width,\n        height: height,\n        filename: fname,\n        size: blob.size\n      });\n      if (caption) {\n        msg = Drafty.appendLineBreak(msg);\n        msg = Drafty.append(msg, Drafty.init(caption));\n      }\n      this.props.sendMessage(msg);\n    });\n  }\n\n  // handleAttachImage method is called when [Attach image] button is clicked.\n  handleAttachImage(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    // Get image dimensions and size, optionally scale it down.\n    imageScaled(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, maxExternAttachmentSize, false,\n      // Success\n      (blob, mime, width, height, fname) => {\n        this.setState({imagePreview: {\n          url: URL.createObjectURL(blob),\n          blob: blob,\n          filename: fname,\n          width: width,\n          height: height,\n          size: blob.size,\n          type: mime\n        }});\n      },\n      // Failure\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    );\n  }\n\n  handleCancelUpload(seq, uploader) {\n    const found = this.state.messages.find(msg => msg.seq == seq);\n    if (found) {\n      found._cancelled = true;\n    }\n    uploader.cancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n\n    let component;\n    if (this.props.hideSelf) {\n      component = null;\n    } else if (!this.state.topic) {\n      component = (\n        <LogoView\n          serverVersion={this.props.serverVersion}\n          serverAddress={this.props.serverAddress} />\n      );\n    } else {\n      let component2;\n      if (this.state.imagePreview) {\n        // Preview image before sending.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePreview}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendImageAttachment} />\n        );\n      } else if (this.state.imagePostview) {\n        // Expand received image.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePostview}\n            onClose={this.handleClosePreview} />\n        );\n      } else if (this.state.docPreview) {\n        // Preview attachment before sending.\n        component2 = (\n          <DocPreview\n            content={this.state.docPreview}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendFileAttachment} />\n        );\n      } else {\n        const topic = this.props.tinode.getTopic(this.state.topic);\n        const isChannel = topic.isChannel();\n        const groupTopic = topic.getType() == 'grp' && !isChannel;\n        let messageNodes = [];\n        let previousFrom = null;\n        let chatBoxClass = null;\n        for (let i=0; i<this.state.messages.length; i++) {\n          let msg = this.state.messages[i];\n          let nextFrom = null;\n\n          if (i + 1 < this.state.messages.length) {\n            nextFrom = this.state.messages[i+1].from || 'chan';\n          }\n\n          let sequence = 'single';\n          let thisFrom = msg.from || 'chan';\n          if (thisFrom == previousFrom) {\n            if (thisFrom == nextFrom) {\n              sequence = 'middle';\n            } else {\n              sequence = 'last';\n            }\n          } else if (thisFrom == nextFrom) {\n            sequence = 'first';\n          }\n          previousFrom = thisFrom;\n\n          const isReply = !(thisFrom == this.props.myUserId);\n          const deliveryStatus = topic.msgStatus(msg);\n\n          let userName, userAvatar, userFrom;\n          if (groupTopic) {\n            const user = topic.userDesc(thisFrom);\n            if (user && user.public) {\n              userName = user.public.fn;\n              userAvatar = makeImageUrl(user.public.photo);\n            }\n            userFrom = thisFrom;\n            chatBoxClass='chat-box group';\n          } else {\n            chatBoxClass='chat-box';\n          }\n\n          messageNodes.push(\n            <ChatMessage\n              tinode={this.props.tinode}\n              content={msg.content}\n              deleted={msg.hi}\n              mimeType={msg.head ? msg.head.mime : null}\n              timestamp={msg.ts}\n              response={isReply}\n              seq={msg.seq}\n              userFrom={userFrom}\n              userName={userName}\n              userAvatar={userAvatar}\n              sequence={sequence}\n              received={deliveryStatus}\n              uploader={msg._uploader}\n              viewportWidth={this.props.viewportWidth}\n              showContextMenu={this.state.channel? false : this.handleShowContextMenuMessage}\n              onImagePreview={this.handleImagePostview}\n              onFormResponse={this.handleFormResponse}\n              onError={this.props.onError}\n              onCancelUpload={this.handleCancelUpload}\n              key={msg.seq} />\n          );\n        }\n\n        let lastSeen = null;\n        if (isChannel) {\n          lastSeen = formatMessage(messages.channel);\n        } else {\n          const cont = this.props.tinode.getMeTopic().getContact(this.state.topic);\n          if (cont && Tinode.isP2PTopicName(cont.topic)) {\n            if (cont.online) {\n              lastSeen = formatMessage(messages.online_now);\n            } else if (cont.seen) {\n              lastSeen = formatMessage(messages.last_seen) + \": \" +\n                shortDateFormat(cont.seen.when, this.props.intl.locale);\n              // TODO: also handle user agent in c.seen.ua\n            }\n          }\n        }\n        const avatar = this.state.avatar || true;\n        const online = this.props.online ? 'online' + (this.state.typingIndicator ? ' typing' : '') : 'offline';\n\n        component2 = (\n          <>\n            <div id=\"topic-caption-panel\" className=\"caption-panel\">\n              {this.props.displayMobile ?\n                <a href=\"#\" id=\"hide-message-view\" onClick={(e) => {e.preventDefault(); this.props.onHideMessagesView();}}>\n                  <i className=\"material-icons\">arrow_back</i>\n                </a>\n                :\n                null}\n              <div className=\"avatar-box\">\n                <LetterTile\n                  avatar={avatar}\n                  topic={this.state.topic}\n                  title={this.state.title} />\n                {!isChannel ? <span className={online} /> : null}\n              </div>\n              <div id=\"topic-title-group\">\n                <div id=\"topic-title\" className=\"panel-title\">{\n                  this.state.title ||\n                  <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n                    description=\"Title shown when the topic has no name\" /></i>\n                }</div>\n                <div id=\"topic-last-seen\">{lastSeen}</div>\n              </div>\n              {groupTopic ?\n                <GroupSubs\n                  subscribers={this.state.onlineSubs} /> :\n                <div id=\"topic-users\" />\n              }\n              <div>\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">more_vert</i>\n                </a>\n              </div>\n            </div>\n            {this.props.displayMobile ?\n              <ErrorPanel\n                level={this.props.errorLevel}\n                text={this.props.errorText}\n                onClearError={this.props.onError} />\n              : null}\n            <LoadSpinner show={this.state.fetchingMessages} />\n            <div id=\"messages-container\">\n              <div id=\"messages-panel\" ref={this.handleScrollReference}>\n                <ul id=\"scroller\" className={chatBoxClass}>\n                  {messageNodes}\n                </ul>\n              </div>\n              {!this.state.isReader ?\n              <div id=\"write-only-background\">\n                {this.state.readingBlocked ?\n                <div id=\"write-only-note\">\n                  <FormattedMessage id=\"messages_not_readable\" defaultMessage=\"no access to messages\"\n                    description=\"Message shown in topic without the read access\" />\n                </div>\n                : null }\n              </div>\n              : null }\n            </div>\n            {this.state.peerMessagingDisabled && !this.state.unconfirmed ?\n              <div id=\"peer-messaging-disabled-note\">\n                <i className=\"material-icons secondary\">block</i> <FormattedMessage\n                  id=\"peers_messaging_disabled\" defaultMessage=\"Peer's messaging is disabled.\"\n                  description=\"Shown when the p2p peer's messaging is disabled\" /> <a href=\"#\"\n                    onClick={this.handleEnablePeer}><FormattedMessage id=\"enable_peers_messaging\"\n                    defaultMessage=\"Enable\" description=\"Call to action to enable peer's messaging\" /></a>.\n              </div> : null}\n            {this.state.unconfirmed ?\n              <Invitation onAction={this.handleNewChatAcceptance} />\n              :\n              <SendMessage\n                disabled={!this.state.isWriter}\n                onSendMessage={this.props.sendMessage}\n                onKeyPress={this.sendKeyPress}\n                onAttachFile={this.handleAttachFile}\n                onAttachImage={this.handleAttachImage}\n                onError={this.props.onError} />}\n          </>\n        );\n      }\n\n      component = <div id=\"topic-view\">{component2}</div>\n    }\n    return component;\n  }\n};\n\nexport default injectIntl(MessagesView);\n","// The <- button to be displayed in title bars.\nimport React from 'react';\n\nexport default class ButtonBack extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onBack();}}>\n        <i className=\"material-icons\">arrow_back</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class MenuContacts extends React.PureComponent {\n  render() {\n    return (\n      <div>\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onNewTopic();}}><i className=\"material-icons\">chat</i></a>\n        &nbsp;\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nexport default class MenuStart extends React.PureComponent {\n  render() {\n    return (\n        <div>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSignUp();}}><i className=\"material-icons\">person_add</i></a>\n          &nbsp;\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n        </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\nimport ButtonBack from './button-back.jsx';\nimport MenuContacts from './menu-contacts.jsx';\nimport MenuStart from './menu-start.jsx';\n\nexport default class SideNavbar extends React.PureComponent {\n  render() {\n    return (\n        <div id=\"side-caption-panel\" className=\"caption-panel\">\n          {this.props.onCancel ? <ButtonBack onBack={this.props.onCancel} /> : null}\n          {this.props.avatar ?\n            <div id=\"self-avatar\" className=\"avatar-box\">\n              <LetterTile\n                avatar={this.props.avatar}\n                topic={this.props.myUserId}\n                title={this.props.title} />\n            </div>\n            :\n            null}\n          <div id=\"sidepanel-title\" className=\"panel-title\">{this.props.title}</div>\n          {this.props.state === 'login' ?\n              <MenuStart onSignUp={this.props.onSignUp} onSettings={this.props.onSettings} /> :\n            this.props.state === 'contacts' ?\n              <MenuContacts onNewTopic={this.props.onNewTopic} onSettings={this.props.onSettings} /> :\n            null}\n        </div>\n    );\n  }\n};\n","/* ContactsView holds all contacts-related stuff */\nimport React from 'react';\nimport { FormattedMessage, defineMessages } from 'react-intl';\n\nimport ContactList from '../widgets/contact-list.jsx';\n\nimport { updateFavicon } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  archived_contacts_title: {\n    id: \"archived_contacts\",\n    defaultMessage: \"Archived contacts ({count})\",\n    description: \"Label for archived chats\"\n  }\n});\n\nexport default class ContactsView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAction = this.handleAction.bind(this);\n\n    this.state = ContactsView.deriveStateFromProps(props);\n  }\n\n  static deriveStateFromProps(props) {\n    const contacts = [];\n    let unreadThreads = 0;\n    let archivedCount = 0;\n    props.chatList.map((c) => {\n      const blocked = c.acs && !c.acs.isJoiner();\n      // Show only blocked contacts only when props.blocked == true.\n      if (blocked && props.blocked) {\n        contacts.push(c);\n      }\n      if (blocked || props.blocked) {\n        return;\n      }\n\n      if (c.private && c.private.arch) {\n        if (props.archive) {\n          contacts.push(c);\n        } else {\n          archivedCount ++;\n        }\n      } else if (!props.archive) {\n        contacts.push(c);\n        unreadThreads += c.unread > 0 ? 1 : 0;\n      }\n    });\n\n    contacts.sort((a, b) => {\n      return (b.touched || 0) - (a.touched || 0);\n    });\n\n    if (archivedCount > 0) {\n      contacts.push({\n        action: 'archive',\n        title: messages.archived_contacts_title,\n        values: {count: archivedCount}\n      });\n    }\n\n    return {\n      contactList: contacts,\n      unreadThreads: unreadThreads\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chatList != this.props.chatList ||\n        prevProps.archive != this.props.archive ||\n        prevProps.blocked != this.props.blocked) {\n      const newState = ContactsView.deriveStateFromProps(this.props);\n      this.setState(newState);\n      if (newState.unreadThreads != prevState.unreadThreads) {\n        updateFavicon(newState.unreadThreads);\n      }\n    }\n  }\n\n  handleAction(action_ignored) {\n    this.props.onShowArchive();\n  }\n\n  render() {\n    return (\n      <FormattedMessage id=\"contacts_not_found\"\n        defaultMessage=\"You have no chats<br />¯∖_(ツ)_/¯\"\n        description=\"HTML message shown in ContactList when no contacts are found\">{\n        (no_contacts) => <ContactList\n          connected={this.props.connected}\n          contacts={this.state.contactList}\n          emptyListMessage={no_contacts}\n          topicSelected={this.props.topicSelected}\n          myUserId={this.props.myUserId}\n          showOnline={true}\n          showUnread={true}\n          onTopicSelected={this.props.onTopicSelected}\n          showContextMenu={this.props.showContextMenu}\n          onAction={this.handleAction} />\n      }</FormattedMessage>\n    );\n  }\n};\n","// Helper functions for storing values in localStorage.\n// By default localStorage can store only strings, not objects or other types.\n\nexport default class LocalStorageUtil {\n  // Replace old object with the new one.\n  static setObject(key, value) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n\n  // Get stored object.\n  static getObject(key) {\n    const value = localStorage.getItem(key);\n    return value && JSON.parse(value);\n  }\n\n  // Partially or wholly update stored object.\n  static updateObject(key, value) {\n    const oldVal = this.getObject(key);\n    this.setObject(key, Object.assign(oldVal || {}, value));\n  }\n\n  // Just a wrapper.\n  static removeItem(key) {\n    localStorage.removeItem(key);\n  }\n}\n","// Account registration.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport { vcard } from '../lib/utils.js';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class CreateAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: '',\n      password: '',\n      email: '',\n      fn: '', // full/formatted name\n      imageDataUrl: null,\n      errorCleared: false,\n      saveToken: LocalStorageUtil.getObject('keep-logged-in')\n    };\n\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(password) {\n    this.setState({password: password});\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value})\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleToggleSaveToken() {\n    LocalStorageUtil.setObject('keep-logged-in', !this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({errorCleared: false});\n    this.props.onCreateAccount(\n      this.state.login.trim(),\n      this.state.password.trim(),\n      vcard(this.state.fn.trim().substring(0, MAX_TITLE_LENGTH), this.state.imageDataUrl),\n      {'meth': 'email', 'val': this.state.email});\n  }\n\n  render() {\n    let submitClasses = 'blue';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form className=\"panel-form-column\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <FormattedMessage id=\"login_prompt\">{\n              (login_prompt) => <input type=\"text\" placeholder={login_prompt} autoComplete=\"user-name\"\n                value={this.state.login} onChange={this.handleLoginChange} required autoFocus />\n            }</FormattedMessage>\n            <FormattedMessage id=\"password_prompt\">{\n              (password_prompt) => <VisiblePassword placeholder={password_prompt} autoComplete=\"new-password\"\n                value={this.state.password} onFinished={this.handlePasswordChange}\n                required={true} />\n            }</FormattedMessage>\n          </div>\n          <AvatarUpload\n            onImageChanged={this.handleImageChanged}\n            onError={this.props.onError} />\n        </div>\n        <div  className=\"panel-form-row\">\n          <FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n            description=\"Input placeholder for person's full name\">{\n            (full_name_prompt) => <input type=\"text\" placeholder={full_name_prompt} autoComplete=\"name\"\n              value={this.state.fn} onChange={this.handleFnChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <FormattedMessage id=\"email_prompt\" defaultMessage=\"Email, e.g. jdoe@example.com\"\n            description=\"Input placeholder for email entry\">{\n            (email_prompt) => <input type=\"email\" placeholder={email_prompt} autoComplete=\"email\"\n              value={this.state.email} onChange={this.handleEmailChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <FormattedMessage id=\"stay_logged_in\">{\n            (stay_logged_in) => <label htmlFor=\"save-token\">&nbsp;{stay_logged_in}</label>\n          }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_up\" defaultMessage=\"Sign up\"\n              description=\"Create account button [Sign Up]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class EditAccountView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    this.state = {\n      fullName: me.public ? me.public.fn : undefined,\n      avatar: makeImageUrl(me.public ? me.public.photo : null)\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n                description=\"Label for full name editing\" />\n            </label>\n            <div className=\"large\">{this.state.fullName}</div>\n            <div>\n              <label className=\"small\"><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n                description=\"Label for user address (ID)\" /></label>&nbsp;\n              <tt>{this.props.myUserId}</tt>\n            </div>\n          </div>\n          <AvatarUpload\n            avatar={this.state.avatar}\n            readOnly={!this.state.owner}\n            uid={this.props.myUserId}\n            title={this.state.fullName} />\n        </div>\n        <div className=\"panel-form-row\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('general');}}>\n            <i className=\"material-icons\">edit</i>&nbsp;\n            <FormattedMessage id=\"button_edit\" defaultMessage=\"Edit\" description=\"Call to action [Edit]\" />\n          </a>\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('notif');}}>\n            <i className=\"material-icons\">notifications</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_notifications\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('security');}}>\n            <i className=\"material-icons\">security</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_security\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('support');}}>\n            <i className=\"material-icons\">contact_support</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_support\" />\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport TagManager from '../widgets/tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, asEmail, asPhone, vcard } from '../lib/utils.js';\n\nexport default class AccGeneralView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    this.state = {\n      fullName: me.public ? me.public.fn : undefined,\n      avatar: makeImageUrl(me.public ? me.public.photo : null),\n      tags: me.tags(),\n      credentials: me.getCredentials() || [],\n      addCredActive: false,\n      addCredInvalid: false,\n      newCred: '',\n      previousOnTags: me.onTagsUpdated\n    };\n\n    this.tnNewTags = this.tnNewTags.bind(this);\n    this.tnCredsUpdated = this.tnCredsUpdated.bind(this);\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleCredChange = this.handleCredChange.bind(this);\n    this.handleCredKeyDown = this.handleCredKeyDown.bind(this);\n    this.handleCredEntered = this.handleCredEntered.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n  }\n\n  componentDidMount() {\n    const me = this.props.tinode.getMeTopic();\n    me.onCredsUpdated = this.tnCredsUpdated;\n    me.onTagsUpdated = this.tnNewTags;\n  }\n\n  componentWillUnmount() {\n    const me = this.props.tinode.getMeTopic();\n    me.onTagsUpdated = this.state.previousOnTags;\n    me.onCredsUpdated = undefined;\n  }\n\n  tnNewTags(tags) {\n    this.setState({tags: tags});\n  }\n\n  tnCredsUpdated(creds) {\n    this.setState({credentials: creds || []});\n  }\n\n  handleFullNameUpdate(fn) {\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\n    if (fn) {\n      this.setState({fullName: fn});\n      this.props.onUpdateAccount(undefined, vcard(fn, null));\n    }\n  }\n\n  handleImageChanged(img) {\n    this.setState({avatar: img});\n    this.props.onUpdateAccount(undefined, vcard(null, img || Tinode.DEL_CHAR));\n  }\n\n  handleCredChange(e) {\n    this.setState({newCred: e.target.value, addCredInvalid: false});\n  }\n\n  handleCredKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({newCred: '', addCredActive: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleCredEntered(e);\n    }\n  }\n\n  handleCredEntered(e) {\n    let value = this.state.newCred.trim();\n    if (!value) {\n      this.setState({addCredActive: false, addCredInvalid: false});\n      return;\n    }\n\n    let val = asPhone(value);\n    let method;\n    if (val) {\n      method = 'tel';\n    } else {\n      val = asEmail(value);\n      if (val) {\n        method = 'email';\n      }\n    }\n    if (method) {\n      this.props.onCredAdd(method, val);\n      this.setState({addCredActive: false, newCred: ''});\n    } else {\n      this.setState({addCredInvalid: true});\n    }\n  }\n\n  handleTagsUpdated(tags) {\n    // Check if tags have actually changed.\n    if (arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      return;\n    }\n    this.props.onUpdateTags(tags);\n  }\n\n  render() {\n    const credentials = [];\n    this.state.credentials.map((cred) => {\n      credentials.push(<div key={cred.meth + \":\" + cred.val + \":\" + cred.done}>{cred.meth}: <tt>{cred.val}</tt>\n        <span > {!cred.done ?\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredConfirm(cred.meth, cred.val);}}>\n              <FormattedMessage id=\"validate_credential_action\" defaultMessage=\"confirm\"\n                description=\"Validate credentail call to action\" />\n            </a>\n          : null} <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredDelete(cred.meth, cred.val);}}><i\n            className=\"material-icons gray\">delete_outline</i></a></span></div>);\n    });\n\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\"><FormattedMessage id=\"label_your_name\" /></label>\n            <div><FormattedMessage id=\"full_name_prompt\">{\n              (full_name_placeholder) => <InPlaceEdit\n                placeholder={full_name_placeholder}\n                value={this.state.fullName}\n                onFinished={this.handleFullNameUpdate} />\n            }</FormattedMessage></div>\n          </div>\n          <AvatarUpload\n            avatar={this.state.avatar}\n            uid={this.props.myUserId}\n            title={this.state.fullName}\n            onImageChanged={this.handleImageChanged}\n            onError={this.props.onError} />\n        </div>\n        <div className=\"hr\" />\n        <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (user discovery)\"\n          description=\"Section title for TagManager\">{\n          (title_tag_manager) => <TagManager\n            title={title_tag_manager}\n            activated={false}\n            tags={this.state.tags}\n            tinode={this.props.tinode}\n            onSubmit={this.handleTagsUpdated} />\n        }</FormattedMessage>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_user_contacts\" defaultMessage=\"Contacts:\"\n            description=\"Label for user contacts\" />\n          </label>\n          <div className=\"quoted\">\n            {credentials}\n            {this.state.addCredActive ?\n              <input type=\"text\" value={this.state.value}\n                className={this.state.addCredInvalid ? 'invalid' : null}\n                placeholder=\"Phone number or email\" required=\"required\" autoFocus\n                onChange={this.handleCredChange} onKeyDown={this.handleCredKeyDown} onBlur={this.handleCredEntered} />\n              : null}\n            <div>\n              <a href=\"#\" onClick={(e) => {e.preventDefault(); this.setState({addCredActive: true});}}>\n                <i className=\"material-icons\">add</i>\n                <FormattedMessage id=\"button_add_another\" defaultMessage=\"Add another\" description=\"Call to action [+ add another]\" />\n              </a></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\n\nexport default class EditAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckboxClick = this.handleCheckboxClick.bind(this);\n  }\n\n  handleCheckboxClick(what, checked) {\n    if (what == 'sound') {\n      this.props.onToggleMessageSounds(checked);\n    } else if (what == 'alert') {\n      this.props.onTogglePushNotifications(checked);\n    } else if (what == 'incognito') {\n      this.props.onToggleIncognitoMode(checked);\n    }\n  }\n\n  render() {\n    return (\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"message-sound\">\n              <FormattedMessage id=\"label_message_sound\" defaultMessage=\"Message sound:\"\n                description=\"Label for message sounds toggle\" />\n            </label>\n            <CheckBox name=\"sound\" id=\"message-sound\"\n              checked={this.props.messageSounds} onChange={this.handleCheckboxClick} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"desktop-alerts\">\n            {this.props.desktopAlertsEnabled ?\n              <FormattedMessage id=\"label_push_notifications\" defaultMessage=\"Notification alerts:\"\n                description=\"Label for push notifications switch\" />\n              :\n              <FormattedMessage id=\"label_push_notifications_disabled\"\n                defaultMessage=\"Notification alerts (requires HTTPS):\"\n                description=\"Label for push notifications switch\" />\n            }\n            </label>\n            <CheckBox name=\"alert\" id=\"desktop-alerts\"\n              checked={this.props.desktopAlerts}\n              onChange={this.props.desktopAlertsEnabled ? this.handleCheckboxClick : null} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"incognito-mode\">\n              <FormattedMessage id=\"label_incognito_mode\" defaultMessage=\"Incognito mode:\"\n                description=\"Label for incognito mode toggle\" />\n            </label>\n            <CheckBox name=\"incognito\" id=\"incognito-mode\"\n              checked={this.props.incognitoMode} onChange={this.handleCheckboxClick} />\n          </div>\n        </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\n\nconst messages = defineMessages({\n  delete_account: {\n    id: 'delete_account',\n    defaultMessage: 'Delete account',\n    description: 'Title for delete account warning'\n  },\n  delete_account_warning: {\n    id: 'delete_account_arning',\n    defaultMessage: 'Are you sure you want to delete your account? It cannot be undone.',\n    description: 'Warning message when deleting an account'\n  }\n});\n\nclass AccSecurityView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    let blockedCount = 0;\n    me.contacts((c) => {\n      if (c.acs && !c.acs.isJoiner()) {\n        blockedCount ++;\n      }\n    });\n    const defacs = me.getDefaultAccess();\n    this.state = {\n      auth: defacs ? defacs.auth : null,\n      anon: defacs ? defacs.anon : null,\n      showPermissionEditorFor: undefined,\n      blockedCount: blockedCount,\n    };\n\n    this.handlePasswordUpdate = this.handlePasswordUpdate.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n  }\n\n  handlePasswordUpdate(pwd) {\n    this.setState({password: pwd});\n    this.props.onUpdateAccount(pwd);\n  }\n\n  handleLaunchPermissionsEditor(which) {\n    this.setState({\n      showPermissionEditorFor: which,\n      editedPermissions: this.state[which]\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handlePermissionsChanged(perm) {\n    let defacs = {};\n    defacs[this.state.showPermissionEditorFor] = perm;\n    this.props.onUpdateAccount(undefined, undefined, defacs);\n\n    let newState = {showPermissionEditorFor: undefined};\n    newState[this.state.showPermissionEditorFor] = perm;\n    this.setState(newState);\n  }\n\n  handleDeleteAccount(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.delete_account), // title\n      formatMessage(messages.delete_account_warning), // content\n      (() => { this.props.onDeleteAccount(); }), // onConfirm\n      null, // use default text \"OK\"\n      true, // Show Reject button\n      null  // use default text \"Cancel\"\n    );\n  }\n\n  render() {\n    return (\n      <React.Fragment>{this.state.showPermissionEditorFor ?\n        <PermissionsEditor\n          mode={this.state.editedPermissions}\n          skip=\"O\"\n          onSubmit={this.handlePermissionsChanged}\n          onCancel={this.handleHidePermissionsEditor} />\n        :\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_password\" defaultMessage=\"Password\"\n                  description=\"Label for password editing\" />\n            </label>\n            <div>\n              <FormattedMessage id=\"password_unchanged_prompt\" defaultMessage=\"Unchanged\"\n                description=\"Message in editor while password is unchanged\">{\n                (password_unchanged) => <InPlaceEdit\n                  placeholder={password_unchanged}\n                  type=\"password\"\n                  onFinished={this.handlePasswordUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <a href=\"#\" className=\"red flat-button\" onClick={(e) => {e.preventDefault(); this.props.onLogout();}}>\n              <i className=\"material-icons\">exit_to_app</i> &nbsp;<FormattedMessage id=\"button_logout\"\n                defaultMessage=\"Logout\" description=\"Button [Logout]\" />\n            </a>\n            <a href=\"#\" className=\"red flat-button\" onClick={(e) => {this.handleDeleteAccount(e);}}>\n              <i className=\"material-icons\">delete</i> &nbsp;<FormattedMessage id=\"button_delete_account\"\n                defaultMessage=\"Delete account\" description=\"Button [Delete account]\" />\n            </a>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <div>\n              <label className=\"small\">\n                <FormattedMessage id=\"label_default_access_mode\" defaultMessage=\"Default access mode:\"\n                description=\"Label for default access mode\" />\n              </label>\n            </div>\n            <div className=\"quoted\">\n              <div>Auth: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>{this.state.auth}</tt></div>\n              <div>Anon: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>{this.state.anon}</tt></div>\n            </div>\n          </div>\n          {this.state.blockedCount > 0 ?\n            <>\n              <div className=\"hr\" />\n              <div className=\"panel-form-row\">\n                <i className=\"material-icons\">block</i>&nbsp;\n                <a href=\"#\" className=\"gray\" onClick={(e) => {e.preventDefault(); this.props.onShowBlocked();}}>\n                  <FormattedMessage id=\"blocked_contacts_link\" defaultMessage=\"Blocked contacts ({count})\"\n                    values={{ count: this.state.blockedCount }} description=\"Blocked contacts link\" />\n                </a>\n              </div>\n            </>\n            : null }\n        </div>\n      }</React.Fragment>\n    );\n  }\n};\n\nexport default injectIntl(AccSecurityView);\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME, LINK_CONTACT_US, LINK_PRIVACY_POLICY, LINK_TERMS_OF_SERVICE } from '../config.js';\n\nexport default class AccSupportView extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          <a href={LINK_CONTACT_US} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">email</i> &nbsp;<FormattedMessage id=\"link_contact_us\"\n              defaultMessage=\"Contact Us\" description=\"Ancor text for contacting us by email\" />\n          </a>\n          <a href={LINK_TERMS_OF_SERVICE} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">description</i> &nbsp;<FormattedMessage id=\"link_terms_of_service\"\n              defaultMessage=\"Terms of Service\" description=\"Ancor text for terms of service link\" />\n          </a>\n          <a href={LINK_PRIVACY_POLICY} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">policy</i> &nbsp;<FormattedMessage id=\"link_privacy_policy\"\n              defaultMessage=\"Privacy Policy\" description=\"Ancor text for privacy policy link\" />\n          </a>\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_client\" /></label>\n            {APP_NAME}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_sdk\" defaultMessage=\"SDK:\" /></label>\n            {Tinode.getLibrary()}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server\" /></label>\n            {this.props.serverVersion}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server_address\" defaultMessage=\"Server address:\" /></label>\n            {this.props.serverAddress}\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","// Login form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\n\nexport default class LoginView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: props.login,\n      password: '',\n      hostName: props.serverAddress,\n      saveToken: LocalStorageUtil.getObject('keep-logged-in')\n    };\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  handleToggleSaveToken() {\n    LocalStorageUtil.setObject('keep-logged-in', !this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onLogin(this.state.login.trim(), this.state.password.trim());\n  }\n\n  render() {\n    var submitClasses = 'blue';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form id=\"login-form\" onSubmit={this.handleSubmit}>\n        <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n          description=\"Login placeholder in LoginView\">\n        {\n          (login_prompt) => <input type=\"text\" id=\"inputLogin\"\n            placeholder={login_prompt}\n            autoComplete=\"username\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"none\"\n            value={this.state.login}\n            onChange={this.handleLoginChange}\n            required autoFocus />\n        }\n        </FormattedMessage>\n        <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n          description=\"Password placeholder in LoginView\">\n        {\n          (password_prompt) => <VisiblePassword type=\"password\" id=\"inputPassword\"\n            placeholder={password_prompt}\n            autoComplete=\"current-password\"\n            value={this.state.password}\n            onChange={this.handlePasswordChange}\n            required={true} />\n        }\n        </FormattedMessage>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <label htmlFor=\"save-token\">&nbsp;\n            <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n              description=\"Label for a checkbox\" />\n          </label>\n          <a href=\"#reset\">\n            <FormattedMessage id=\"forgot_password_link\" defaultMessage=\"Forgot password?\"\n              description=\"Link to Reset password form\" />\n          </a>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_in\" defaultMessage=\"Sign in\"\n              description=\"Button [Sign In]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n/* END Login */\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  invalid_id: {\n    id: 'error_invalid_id',\n    defaultMessage: 'Invalid ID',\n    description: 'Error message'\n  }\n});\n\nclass NewTopicById extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      groupId: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({groupId: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.groupId) {\n      var name = this.state.groupId.trim();\n      if (name.length > 3 && (name.substr(0, 3) == 'usr' || name.substr(0, 3) == 'grp')) {\n        this.props.onSubmit(name);\n      } else {\n        this.props.onError(this.props.intl.formatMessage(messages.invalid_id), 'err');\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"group_user_id_prompt\" defaultMessage=\"Group or User ID\"\n          description=\"Prompt for entering user or group ID\">{\n          (prompt) => <input type=\"text\" placeholder={prompt}\n            value={this.state.groupId} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required autoFocus />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"blue\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_subscribe\" defaultMessage=\"Subscribe\"\n              description=\"Button [Subscribe]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicById);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from './avatar-upload.jsx';\nimport CheckBox from './checkbox.jsx';\nimport TagManager from './tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class NewTopicGroup extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      fn: '', // full/formatted name\n      private: '',\n      imageDataUrl: null,\n      tags: [],\n      isChannel: false\n    };\n\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handlePrivateChange = this.handlePrivateChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleTagsChanged = this.handleTagsChanged.bind(this);\n    this.handleChannelToggle = this.handleChannelToggle.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handlePrivateChange(e) {\n    this.setState({private: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleTagsChanged(tags) {\n    this.setState({tags: tags});\n  }\n\n  handleChannelToggle() {\n    this.setState({isChannel: !this.state.isChannel});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const fn = this.state.fn.trim().substring(0, MAX_TITLE_LENGTH);\n    const comment = this.state.private.trim().substring(0, MAX_TITLE_LENGTH);\n    if (fn) {\n      this.props.onSubmit(fn, this.state.imageDataUrl, comment, this.state.tags, this.state.isChannel);\n    }\n  }\n\n  render() {\n    var submitClasses = 'blue';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n    return (\n      <form className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\" htmlFor=\"new-topic-fn\">\n              <FormattedMessage id=\"label_topic_name\" />\n            </label>\n            <FormattedMessage id=\"topic_name_editing_placeholder\" defaultMessage=\"Freeform name of the group\"\n              description=\"Prompt for entering topic name\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-fn\" placeholder={placeholder}\n                value={this.state.fn} onChange={this.handleFnChange} autoFocus required />\n            }</FormattedMessage>\n            <br />\n            <label className=\"small\" htmlFor=\"new-topic-priv\">\n              <FormattedMessage id=\"label_private\" />\n            </label>\n            <FormattedMessage id=\"private_editing_placeholder\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-priv\" placeholder={placeholder}\n                value={this.state.private} onChange={this.handlePrivateChange} />\n            }</FormattedMessage>\n          </div>\n          <AvatarUpload\n            onError={this.props.onError}\n            onImageChanged={this.handleImageChanged} />\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox checked={this.state.isChannel} onChange={this.handleChannelToggle}/>&nbsp;\n          <label onClick={this.handleChannelToggle}><FormattedMessage id=\"channel_prompt\"\n            defaultMessage=\"This is a channel\"\n            description=\"Checkbox label when creating a channel\" /></label>\n        </div>\n        <FormattedMessage id=\"title_tag_manager\">{\n          (title) => <TagManager\n            tags={this.state.tags}\n            activated={true}\n            onTagsChanged={this.handleTagsChanged}\n            tinode={this.props.tinode}\n            title={title} />\n        }</FormattedMessage>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses}>\n            <FormattedMessage id=\"button_create\" defaultMessage=\"Create\"\n              description=\"Button [Create]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nexport default class SearchContacts extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      edited: false,\n      search: ''\n    };\n\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  componentWillUnmount() {\n    if (this.state.edited) {\n      this.setState({search: '', edited: false});\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n  }\n\n  handleSearchChange(e) {\n    this.setState({search: e.target.value});\n  }\n\n  handleSearch(e) {\n    e.preventDefault();\n    var query = this.state.search.trim();\n    this.setState({edited: (query.length > 0)});\n    this.props.onSearchContacts(query.length > 0 ? query : Tinode.DEL_CHAR);\n  }\n\n  handleClear(e) {\n    e.preventDefault();\n    if (this.state.edited) {\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n    this.setState({search: '', edited: false});\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Enter') {\n      this.handleSearch(e);\n    } else if (e.key === 'Escape') {\n      this.handleClear();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <i className=\"material-icons search\">search</i>\n          <FormattedMessage id=\"search_placeholder\" defaultMessage=\"List like email:alice@example.com, tel:17025550003...\"\n            description=\"Placeholder in contacts search field\">{\n            (search_placeholder) => <input className=\"search\" type=\"text\"\n              placeholder={search_placeholder}\n              value={this.state.search} onChange={this.handleSearchChange}\n              onKeyDown={this.handleKeyDown} required autoFocus />\n          }</FormattedMessage>\n          <a href=\"#\" onClick={this.handleClear}>\n            <i className=\"material-icons\">close</i>\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","// Create new topic and invite users or send an invite.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport ContactList from '../widgets/contact-list.jsx';\nimport NewTopicById from '../widgets/new-topic-by-id.jsx';\nimport NewTopicGroup from '../widgets/new-topic-group.jsx';\nimport SearchContacts from '../widgets/search-contacts.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\nimport { vcard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  search_for_contacts: {\n    id: \"search_for_contacts\",\n    defaultMessage: \"Use search to find contacts\",\n    description: \"Text shown in contacts view when user entered no search query.\"\n  },\n  search_no_results: {\n    id: \"search_no_results\",\n    defaultMessage: \"Search returned no results\",\n    description: \"Text shown in contacts view when query returned no results.\"\n  }\n});\n\nclass NewTopicView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tabSelected: 'p2p',\n      searchQuery: null\n    };\n\n    this.handleTabClick = this.handleTabClick.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleNewGroupSubmit = this.handleNewGroupSubmit.bind(this);\n    this.handleGroupByID = this.handleGroupByID.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.onInitFind();\n  }\n\n  handleTabClick(e) {\n    e.preventDefault();\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'tab', e.currentTarget.dataset.id));\n    this.setState({tabSelected: e.currentTarget.dataset.id});\n  }\n\n  handleSearchContacts(query) {\n    this.props.onSearchContacts(query);\n    this.setState({searchQuery: Tinode.isNullValue(query) ? null : query});\n  }\n\n  handleContactSelected(sel) {\n    if (this.state.tabSelected === 'p2p') {\n      HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n      this.props.onCreateTopic(sel);\n    }\n  }\n\n  handleNewGroupSubmit(name, dataUrl, priv, tags, isChannel) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(undefined, vcard(name, dataUrl), priv, tags, isChannel);\n  }\n\n  handleGroupByID(topicName) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(topicName);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const no_contacts_placeholder = formatMessage(this.state.searchQuery ?\n      messages.search_no_results : messages.search_for_contacts);\n    return (\n      <div className=\"flex-column\">\n        <ul className=\"tabbar\">\n          <li className={this.state.tabSelected === \"p2p\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"p2p\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_find_user\" defaultMessage=\"find\"\n                description=\"Tab title Find\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"grp\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"grp\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_new_group\" defaultMessage=\"new group\"\n                description=\"Tab title New Group\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"byid\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"byid\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_group_by_id\" defaultMessage=\"by id\"\n                description=\"Tab title Find topic by ID\" />\n            </a>\n          </li>\n        </ul>\n        {this.state.tabSelected === 'grp' ?\n          <NewTopicGroup\n            tinode={this.props.tinode}\n            onSubmit={this.handleNewGroupSubmit} /> :\n          this.state.tabSelected === 'byid' ?\n            <NewTopicById\n              onSubmit={this.handleGroupByID}\n              onError={this.props.onError} /> :\n            <div className=\"flex-column\">\n              <SearchContacts\n                type=\"p2p\"\n                onSearchContacts={this.handleSearchContacts} />\n              <ContactList\n                contacts={this.props.searchResults}\n                myUserId={this.props.myUserId}\n                emptyListMessage={no_contacts_placeholder}\n                showOnline={false}\n                showUnread={false}\n                showContextMenu={false}\n                onTopicSelected={this.handleContactSelected} />\n            </div>}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicView);\n","// A password reset form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\n\nexport default class PasswordResetView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n  }\n\n  componentDidMount() {\n    let parsed = HashNavigation.parseUrlHash(window.location.hash);\n    this.setState({token: parsed.params.token, scheme: parsed.params.scheme});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.token) {\n      this.props.onReset(this.state.scheme, this.state.password.trim(), this.state.token);\n    } else {\n      this.props.onRequest('email', this.state.email.trim());\n    }\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  render() {\n    let reset = (this.state.token && this.state.scheme);\n    return (\n      <form id=\"password-reset-form\" onSubmit={this.handleSubmit}>\n        {reset ?\n          <FormattedMessage id=\"new_password_placeholder\" defaultMessage=\"Enter new password\"\n            description=\"Placeholder for entering new password\">{\n            (placeholder) => <VisiblePassword\n              placeholder={placeholder}\n              autoComplete=\"new-password\"\n              value={this.state.password}\n              required={true} autoFocus={true}\n              onChange={this.handlePasswordChange} />\n          }</FormattedMessage>\n          :\n          <>\n            <label htmlFor=\"inputEmail\">\n              <FormattedMessage id=\"label_reset_password\"\n                defaultMessage=\"Send a password reset email:\"\n                description=\"Label for password reset field\" />\n            </label>\n            <FormattedMessage id=\"credential_email_prompt\" defaultMessage=\"Your registration email\"\n              description=\"Placeholder for entering email\">{\n              (placeholder) => <input type=\"email\" id=\"inputEmail\"\n                placeholder={placeholder}\n                autoComplete=\"email\"\n                value={this.state.email}\n                onChange={this.handleEmailChange}\n                required autoFocus />\n            }</FormattedMessage>\n          </>\n        }\n        <div className=\"dialog-buttons\">\n          <button className=\"blue\" type=\"submit\">{reset ?\n            <FormattedMessage id=\"button_reset\" defaultMessage=\"Reset\" description=\"Button [Reset]\" /> :\n            <FormattedMessage id=\"button_send_request\" defaultMessage=\"Send request\"\n              description=\"Button [Send request]\" />\n          }</button>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react';\n\nimport { KNOWN_HOSTS } from '../config.js';\n\n/* Combobox for selecting host name */\n\nexport default class HostSelector extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hostName: props.serverAddress,\n      changed: false\n    };\n\n    this.handleHostNameChange = this.handleHostNameChange.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handleHostNameChange(e) {\n    this.setState({hostName: e.target.value, changed: true});\n  }\n\n  handleEditingFinished() {\n    if (this.state.changed) {\n      this.setState({changed: false});\n      this.props.onServerAddressChange(this.state.hostName.trim());\n    }\n  }\n\n  render() {\n    var hostOptions = [];\n    for (let key in KNOWN_HOSTS) {\n      let item = KNOWN_HOSTS[key];\n      hostOptions.push(\n        <option key={item} value={item} />\n      );\n    }\n    return (\n      <div className=\"panel-form-row\">\n        <input type=\"search\" id=\"host-name\" placeholder={this.props.hostName} list=\"known-hosts\"\n          className=\"quoted\" value={this.state.hostName} onChange={this.handleHostNameChange}\n          onBlur={this.handleEditingFinished} required />\n        <datalist id=\"known-hosts\">\n          {hostOptions}\n        </datalist>\n      </div>\n    );\n  }\n}\n","// Tinode config panel.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport HostSelector from '../widgets/host-selector.jsx';\n\nexport default class SettingsView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transport: props.transport || 'def',\n      serverAddress: props.serverAddress,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleTransportSelected = this.handleTransportSelected.bind(this);\n    this.handleServerAddressChange = this.handleServerAddressChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onUpdate({\n      transport: this.state.transport,\n      serverAddress: this.state.serverAddress\n    });\n  }\n\n  handleTransportSelected(e) {\n    this.setState({transport: e.currentTarget.value});\n  }\n\n  handleServerAddressChange(name) {\n    this.setState({serverAddress: name});\n  }\n\n  render() {\n    const names = {def: \"default\", ws: \"websocket\", lp: \"long polling\"};\n    var transportOptions = [];\n    var instance = this;\n    ['def', 'ws', 'lp'].map(function(item) {\n      var id = 'transport-' + item;\n      var name = names[item];\n      transportOptions.push(\n        <li key={item}>\n          <input type=\"radio\" id={id} name=\"transport-select\" value={item}\n            checked={instance.state.transport === item}\n            onChange={instance.handleTransportSelected} />\n          <label htmlFor={id}>{name}</label>\n        </li>\n      );\n    });\n\n    return (\n      <form id=\"settings-form\" className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_server_to_use\" defaultMessage=\"Server to use:\"\n              description=\"Label for server selector in SettingsView\" />\n          </label>\n        </div>\n        <HostSelector serverAddress={this.state.serverAddress}\n          onServerAddressChange={this.handleServerAddressChange} />\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_wire_transport\" defaultMessage=\"Wire transport:\"\n              description=\"Label for wire transport selection in SettingsView\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ul className=\"quoted\">\n            {transportOptions}\n          </ul>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button type=\"submit\" className=\"blue\">\n            <FormattedMessage id=\"button_update\" defaultMessage=\"Update\"\n              description=\"Button [Update]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// ValidationView: panel for confirming credentials, like email or phone.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  phone: {\n    id: 'phone_dative',\n    defaultMessage: 'phone',\n    description: \"Dative case of 'phone', i.e. 'phone' in 'by phone'\",\n  },\n  email: {\n    id: 'email_dative',\n    defaultMessage: 'email',\n    description: \"Dative case of 'email', i.e. 'email' in 'by email'\",\n  }\n});\n\nclass ValidationView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      code: props.credCode || ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({code: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    } else if (e.key == 'Escape') {\n      this.handleCancel(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.code && this.state.code.trim()) {\n      this.props.onSubmit(this.props.credMethod, this.state.code.trim());\n    }\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel();\n  }\n\n\n  render() {\n    const { formatMessage } = this.props.intl;\n    const methods = {'email': formatMessage(messages.email), 'tel': formatMessage(messages.phone)};\n    let method = methods[this.props.credMethod] || this.props.credMethod;\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\" htmlFor=\"enter-confirmation-code\">\n            <FormattedMessage id=\"enter_confirmation_code_prompt\"\n              defaultMessage=\"Enter confirmation code sent to you by {method}:\"\n              description=\"Request to enter confirmation code\"\n              values={{method: method}} />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"numeric_confirmation_code_prompt\"\n          defaultMessage=\"Numbers only\" description=\"Prompt for numeric conformation code\">{\n          (numbers_only) => <input type=\"text\" id=\"enter-confirmation-code\"\n            placeholder={numbers_only}\n            value={this.state.code} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"blue\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_confirm\" defaultMessage=\"Confirm\" description=\"Button [Confirm]\" />\n          </button>\n          <button className=\"white\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ValidationView);\n","import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport SideNavbar from '../widgets/side-navbar.jsx';\n\nimport ContactsView from './contacts-view.jsx';\nimport CreateAccountView from './create-account-view.jsx';\nimport EditAccountView from './edit-account-view.jsx';\nimport AccGeneralView from './acc-general-view.jsx';\nimport AccNotificationsView from './acc-notifications-view.jsx';\nimport AccSecurityView from './acc-security-view.jsx';\nimport AccSupportView from './acc-support-view.jsx';\nimport LoginView from './login-view.jsx';\nimport NewTopicView from './new-topic-view.jsx';\nimport PasswordResetView from './password-reset-view.jsx';\nimport SettingsView from './settings-view.jsx';\nimport ValidationView from './validation-view.jsx';\n\n// Panel titles for translation.\nconst messages = defineMessages({\n  'login': {\n    id: 'sidepanel_title_login',\n    description: 'Sidepanel title for LoginView.',\n    defaultMessage: 'Sign In'\n  },\n  'register': {\n    id: 'sidepanel_title_register',\n    description: 'Sidepanel title for CreateAccountView.',\n    defaultMessage: 'Create Account'\n  },\n  'settings': {\n    id: 'sidepanel_title_settings',\n    description: 'Sidepanel title for SettingsView.',\n    defaultMessage: 'Settings'\n  },\n  'edit': {\n    id: 'sidepanel_title_account_settings',\n    description: 'Sidepanel title for EditAccountView.',\n    defaultMessage: 'Account Settings'\n  },\n  'general': {\n    id: 'sidepanel_title_acc_general',\n    description: 'Sidepanel title for AccGeneralView.',\n    defaultMessage: 'General'\n  },\n  'security': {\n    id: 'sidepanel_title_acc_security',\n    description: 'Sidepanel title for AccSecurityView.',\n    defaultMessage: 'Security'\n  },\n  'notif': {\n    id: 'sidepanel_title_acc_notifications',\n    description: 'Sidepanel title for AccNotificationsView.',\n    defaultMessage: 'Notifications'\n  },\n  'support': {\n    id: 'sidepanel_title_acc_support',\n    description: 'Sidepanel title for AccSupportView.',\n    defaultMessage: 'Support'\n  },\n  'newtpk': {\n    id: 'sidepanel_title_newtpk',\n    description: 'Sidepanel title for NewTopicView.',\n    defaultMessage: 'Start New Chat'\n  },\n  'cred': {\n    id: 'sidepanel_title_cred',\n    description: 'Sidepanel title for ValidationView.',\n    defaultMessage: 'Confirm Credentials'\n  },\n  'reset': {\n    id: 'sidepanel_title_reset',\n    description: 'Sidepanel title for PasswordResetView.',\n    defaultMessage: 'Reset Password'\n  },\n  'archive': {\n    id: 'sidepanel_title_archive',\n    description: 'Sidepanel title for ContactsView-Archive.',\n    defaultMessage: 'Archived Chats'\n  },\n  'blocked': {\n    id: 'sidepanel_title_blocked',\n    description: 'Sidepanel title for ContactsView-Blocked.',\n    defaultMessage: 'Blocked Chats'\n  }\n});\n\nclass SidepanelView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleLoginRequested = this.handleLoginRequested.bind(this);\n    this.handleNewTopic = this.handleNewTopic.bind(this);\n  }\n\n  handleLoginRequested(login, password) {\n    this.props.onLoginRequest(login, password);\n  }\n\n  handleNewTopic() {\n    this.props.onBasicNavigate('newtpk');\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const view = this.props.state || (this.props.myUserId ? 'contacts' : 'login');\n\n    let title, avatar;\n    if (view == 'contacts') {\n      title = this.props.title;\n      avatar = this.props.avatar ? this.props.avatar : true;\n    } else {\n      title = formatMessage(messages[view]);\n      avatar = false;\n    }\n\n    let onCancel;\n    if (['login', 'contacts'].indexOf(view) == -1) {\n      onCancel = this.props.onCancel;\n    }\n\n    return (\n      <div id=\"sidepanel\" className={this.props.hideSelf ? 'nodisplay' : null}>\n        <SideNavbar\n          state={view}\n          title={title}\n          avatar={avatar}\n          myUserId={this.props.myUserId}\n          onSignUp={this.props.onSignUp}\n          onSettings={this.props.onSettings}\n          onNewTopic={this.handleNewTopic}\n          onCancel={onCancel} />\n\n        <ErrorPanel\n          level={this.props.errorLevel}\n          text={this.props.errorText}\n          action={this.props.errorAction}\n          actionText={this.props.errorActionText}\n          onClearError={this.props.onError} />\n\n        <LoadSpinner show={this.props.loadSpinnerVisible} />\n\n        {view === 'login' ?\n          <LoginView\n            login={this.props.login}\n            disabled={this.props.loginDisabled}\n            onLogin={this.handleLoginRequested} /> :\n\n          view === 'register' ?\n          <CreateAccountView\n            onCreateAccount={this.props.onCreateAccount}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'settings' ?\n          <SettingsView\n            transport={this.props.transport}\n            serverAddress={this.props.serverAddress}\n            onCancel={this.props.onCancel}\n            onUpdate={this.props.onGlobalSettings} /> :\n\n          view === 'edit' ?\n          <EditAccountView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            onBasicNavigate={this.props.onBasicNavigate} /> :\n\n          view === 'general' ?\n          <AccGeneralView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            onUpdateAccount={this.props.onUpdateAccount}\n            onUpdateTags={this.props.onUpdateAccountTags}\n            onCredAdd={this.props.onCredAdd}\n            onCredDelete={this.props.onCredDelete}\n            onCredConfirm={this.props.onCredConfirm}\n            onBasicNavigate={this.props.onBasicNavigate}\n            onError={this.props.onError} /> :\n\n          view === 'notif' ?\n          <AccNotificationsView\n            messageSounds={this.props.messageSounds}\n            desktopAlerts={this.props.desktopAlerts}\n            desktopAlertsEnabled={this.props.desktopAlertsEnabled}\n            incognitoMode={this.props.incognitoMode}\n            onTogglePushNotifications={this.props.onTogglePushNotifications}\n            onToggleMessageSounds={this.props.onToggleMessageSounds}\n            onToggleIncognitoMode={this.props.onToggleIncognitoMode} /> :\n\n          view === 'security' ?\n          <AccSecurityView\n            tinode={this.props.tinode}\n            onUpdateAccount={this.props.onUpdateAccount}\n            onLogout={this.props.onLogout}\n            onDeleteAccount={this.props.onDeleteAccount}\n            onShowAlert={this.props.onShowAlert}\n            onShowBlocked={this.props.onShowBlocked} /> :\n\n          view === 'support' ?\n          <AccSupportView\n            serverAddress={this.props.serverAddress}\n            serverVersion={this.props.serverVersion} /> :\n\n          (view === 'contacts' || view == 'archive' || view == 'blocked') ?\n          <ContactsView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            connected={this.props.connected}\n            topicSelected={this.props.topicSelected}\n            archive={view == 'archive'}\n            blocked={view == 'blocked'}\n            chatList={this.props.chatList}\n            showContextMenu={this.props.showContextMenu}\n            onTopicSelected={this.props.onTopicSelected}\n            onShowArchive={this.props.onShowArchive} /> :\n\n          view === 'newtpk' ?\n          <NewTopicView\n            tinode={this.props.tinode}\n            searchResults={this.props.searchResults}\n            onInitFind={this.props.onInitFind}\n            onSearchContacts={this.props.onSearchContacts}\n            onCreateTopic={this.props.onCreateTopic}\n            onError={this.props.onError} /> :\n\n          view === 'cred' ?\n          <ValidationView\n            credCode={this.props.credCode}\n            credMethod={this.props.credMethod}\n            onSubmit={this.props.onValidateCredentials}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'reset' ?\n          <PasswordResetView\n            onRequest={this.props.onPasswordResetRequest}\n            onReset={this.props.onResetPassword} /> :\n          null}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SidepanelView);\n","import { KNOWN_HOSTS, DEFAULT_HOST } from '../config.js';\n\n// Detect server address from the URL\nexport function detectServerAddress() {\n  let host = DEFAULT_HOST;\n  if (typeof window.location == 'object') {\n    if (window.location.protocol == 'file:' || window.location.hostname == 'localhost') {\n      host = KNOWN_HOSTS.local;\n    } else if (window.location.hostname) {\n      host = window.location.hostname + (window.location.port ? ':' + window.location.port : '');\n    }\n  }\n  return host;\n}\n\n// Detect if the page is served over HTTPS.\nexport function isSecureConnection() {\n  if (typeof window.location == 'object') {\n    return window.location.protocol == 'https:';\n  }\n  return false;\n}\n\nexport function isLocalHost() {\n  if (typeof window.location == 'object') {\n    return window.location.hostname == 'localhost';\n  }\n  return false;\n}\n","// The top-level class to hold all functionality together.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport * as firebase from 'firebase/app';\nimport 'firebase/messaging';\n\nimport Tinode from 'tinode-sdk';\n\nimport Alert from '../widgets/alert.jsx';\nimport ContextMenu from '../widgets/context-menu.jsx';\n\nimport InfoView from './info-view.jsx';\nimport MessagesView from './messages-view.jsx';\nimport SidepanelView from './sidepanel-view.jsx';\n\nimport { API_KEY, APP_NAME, DEFAULT_P2P_ACCESS_MODE, LOGGING_ENABLED,\n  MEDIA_BREAKPOINT, RECEIVED_DELAY } from '../config.js';\nimport { base64ReEncode, makeImageUrl } from '../lib/blob-helpers.js';\nimport { detectServerAddress, isLocalHost, isSecureConnection } from '../lib/host-name.js';\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { secondsToTime } from '../lib/strformat.js'\nimport { updateFavicon } from '../lib/utils.js';\n\n// Sound to play on message received.\nconst POP_SOUND = new Audio('audio/msg.mp3');\n\nconst messages = defineMessages({\n  reconnect_countdown: {\n    id: 'reconnect_countdown',\n    defaultMessage: 'Disconnected. Reconnecting in {seconds}…',\n    description: 'Message shown when an app update is available.'\n  },\n  reconnect_now: {\n    id: 'reconnect_now',\n    defaultMessage: 'Try now',\n    description: 'Prompt for reconnecting now'\n  },\n  push_init_failed: {\n    id: 'push_init_failed',\n    defaultMessage: 'Failed to initialize push notifications',\n    description: 'Error message when push notifications have failed to initialize.'\n  },\n  invalid_security_token: {\n    id: 'invalid_security_token',\n    defaultMessage: 'Invalid security token',\n    description: 'Error message when resetting password.'\n  },\n  no_connection: {\n    id: 'no_connection',\n    defaultMessage: 'No connection',\n    description: 'Warning that the user is offline.'\n  },\n  code_doesnot_match: {\n    id: 'code_doesnot_match',\n    defaultMessage: 'Code does not match',\n    description: 'Error message when the credential validation code is incorrect.'\n  }\n});\n\nclass TinodeWeb extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = this.getBlankState();\n\n    this.handleResize = this.handleResize.bind(this);\n    this.handleHashRoute = this.handleHashRoute.bind(this);\n    this.handleOnline = this.handleOnline.bind(this);\n    this.checkForAppUpdate = this.checkForAppUpdate.bind(this);\n    this.handleVisibilityEvent = this.handleVisibilityEvent.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.handleLoginRequest = this.handleLoginRequest.bind(this);\n    this.handleConnected = this.handleConnected.bind(this);\n    this.handleAutoreconnectIteration = this.handleAutoreconnectIteration.bind(this);\n    this.doLogin = this.doLogin.bind(this);\n    this.handleCredentialsRequest = this.handleCredentialsRequest.bind(this);\n    this.handleLoginSuccessful = this.handleLoginSuccessful.bind(this);\n    this.handleDisconnect = this.handleDisconnect.bind(this);\n    this.tnMeMetaDesc = this.tnMeMetaDesc.bind(this);\n    this.tnMeContactUpdate = this.tnMeContactUpdate.bind(this);\n    this.tnMeSubsUpdated = this.tnMeSubsUpdated.bind(this);\n    this.resetContactList = this.resetContactList.bind(this);\n    this.tnData = this.tnData.bind(this);\n    this.tnInitFind = this.tnInitFind.bind(this);\n    this.tnFndSubsUpdated = this.tnFndSubsUpdated.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleTopicSelected = this.handleTopicSelected.bind(this);\n    this.handleHideMessagesView = this.handleHideMessagesView.bind(this);\n    this.handleSendMessage = this.handleSendMessage.bind(this);\n    this.handleNewChatInvitation = this.handleNewChatInvitation.bind(this);\n    this.handleNewAccount = this.handleNewAccount.bind(this);\n    this.handleNewAccountRequest = this.handleNewAccountRequest.bind(this);\n    this.handleUpdateAccountRequest = this.handleUpdateAccountRequest.bind(this);\n    this.handleUpdateAccountTagsRequest = this.handleUpdateAccountTagsRequest.bind(this);\n    this.handleToggleIncognitoMode = this.handleToggleIncognitoMode.bind(this);\n    this.handleSettings = this.handleSettings.bind(this);\n    this.handleGlobalSettings = this.handleGlobalSettings.bind(this);\n    this.handleShowArchive = this.handleShowArchive.bind(this);\n    this.handleShowBlocked = this.handleShowBlocked.bind(this);\n    this.handleToggleMessageSounds = this.handleToggleMessageSounds.bind(this);\n    this.handleCredAdd = this.handleCredAdd.bind(this);\n    this.handleCredDelete = this.handleCredDelete.bind(this);\n    this.handleCredConfirm = this.handleCredConfirm.bind(this);\n    this.initDesktopAlerts = this.initDesktopAlerts.bind(this);\n    this.togglePushToken = this.togglePushToken.bind(this);\n    this.requestPushToken = this.requestPushToken.bind(this);\n    this.handleSidepanelCancel = this.handleSidepanelCancel.bind(this);\n    this.handleStartTopicRequest = this.handleStartTopicRequest.bind(this);\n    this.handleNewTopicCreated = this.handleNewTopicCreated.bind(this);\n    this.handleTopicUpdateRequest = this.handleTopicUpdateRequest.bind(this);\n    this.handleChangePermissions = this.handleChangePermissions.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n    this.handleDeleteMessagesRequest = this.handleDeleteMessagesRequest.bind(this);\n    this.handleLeaveUnsubRequest = this.handleLeaveUnsubRequest.bind(this);\n    this.handleBlockTopicRequest = this.handleBlockTopicRequest.bind(this);\n    this.handleReportTopic = this.handleReportTopic.bind(this);\n    this.handleShowContextMenu = this.handleShowContextMenu.bind(this);\n    this.defaultTopicContextMenu = this.defaultTopicContextMenu.bind(this);\n    this.handleHideContextMenu = this.handleHideContextMenu.bind(this);\n    this.handleShowAlert = this.handleShowAlert.bind(this);\n    this.handleShowInfoView = this.handleShowInfoView.bind(this);\n    this.handleHideInfoView = this.handleHideInfoView.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleValidateCredentialsRequest = this.handleValidateCredentialsRequest.bind(this);\n    this.handlePasswordResetRequest = this.handlePasswordResetRequest.bind(this);\n    this.handleResetPassword = this.handleResetPassword.bind(this);\n    this.handleContextMenuAction = this.handleContextMenuAction.bind(this);\n  }\n\n  getBlankState() {\n    const settings = LocalStorageUtil.getObject('settings') || {};\n\n    return {\n      connected: false,\n      // Connected and subscribed to 'me'\n      ready: false,\n      // Try to re-login on new connection.\n      autoLogin: false,\n      transport: settings.transport || null,\n      serverAddress: settings.serverAddress || detectServerAddress(),\n      serverVersion: \"no connection\",\n      // \"On\" is the default, so saving the \"off\" state.\n      messageSounds: !settings.messageSoundsOff,\n      incognitoMode: false,\n      desktopAlerts: settings.desktopAlerts,\n      desktopAlertsEnabled: (isSecureConnection() || isLocalHost()) &&\n        (typeof firebase != 'undefined') && (typeof navigator != 'undefined') &&\n        (typeof FIREBASE_INIT != 'undefined'),\n      firebaseToken: LocalStorageUtil.getObject('firebase-token'),\n\n      applicationVisible: !document.hidden,\n\n      errorText: '',\n      errorLevel: null,\n      errorAction: undefined,\n      errorActionText: null,\n\n      sidePanelSelected: 'login',\n      sidePanelTitle: null,\n      sidePanelAvatar: null,\n      loadSpinnerVisible: false,\n\n      login: '',\n      password: '',\n      myUserId: null,\n      liveConnection: navigator.onLine,\n      topicSelected: '',\n      topicSelectedOnline: false,\n      topicSelectedAcs: null,\n      newTopicParams: null,\n      loginDisabled: false,\n      displayMobile: (window.innerWidth <= MEDIA_BREAKPOINT),\n      showInfoPanel: false,\n      mobilePanel: 'sidepanel',\n\n      contextMenuVisible: false,\n      contextMenuBounds: null,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuItems: [],\n\n      // Modal alert dialog.\n      alertVisible: false,\n      alertParams: {},\n\n      // Chats as shown in the ContactsView\n      chatList: [],\n      // Contacts returned by a search query.\n      searchResults: [],\n      // Merged results of a search query and p2p chats.\n      searchableContacts: [],\n      credMethod: undefined,\n      credCode: undefined\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    window.addEventListener('online', (e) => { this.handleOnline(true); });\n    window.addEventListener('offline', (e) => { this.handleOnline(false); });\n    window.addEventListener('hashchange', this.handleHashRoute);\n    // Window/tab visible or invisible for pausing timers.\n    document.addEventListener('visibilitychange', this.handleVisibilityEvent);\n\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n\n    const {formatMessage, locale} = this.props.intl;\n    this.tinode = TinodeWeb.tnSetup(this.state.serverAddress, this.state.transport, locale);\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n\n    // Initialize desktop alerts.\n    if (this.state.desktopAlertsEnabled) {\n      try {\n        this.fbPush = firebase.initializeApp(FIREBASE_INIT, APP_NAME).messaging();\n        this.fbPush.usePublicVapidKey(FIREBASE_INIT.messagingVapidKey);\n        navigator.serviceWorker.register('/service-worker.js').then((reg) => {\n          this.checkForAppUpdate(reg);\n          this.fbPush.useServiceWorker(reg);\n          reg.active.postMessage(JSON.stringify({locale: locale}));\n          this.initDesktopAlerts();\n          if (this.state.desktopAlerts) {\n            if (!this.state.firebaseToken) {\n              this.togglePushToken(true);\n            } else {\n              this.tinode.setDeviceToken(this.state.firebaseToken, true);\n            }\n          }\n        }).catch((err) => {\n          // registration failed :(\n          console.log(\"Failed to register service worker:\", err);\n        });\n      } catch (err) {\n        this.handleError(formatMessage({id: 'push_init_failed'}), 'err');\n        console.log(\"Failed to initialize push notifications\", err);\n        this.setState({desktopAlertsEnabled: false});\n      }\n    }\n\n    const token = LocalStorageUtil.getObject('keep-logged-in') ?\n      LocalStorageUtil.getObject('auth-token') : undefined;\n\n    const parsedNav = HashNavigation.parseUrlHash(window.location.hash);\n    if (token) {\n      this.setState({autoLogin: true});\n\n      // When reading from storage, date is returned as string.\n      token.expires = new Date(token.expires);\n      this.tinode.setAuthToken(token);\n      this.tinode.connect().catch((err) => {\n        // Socket error\n        this.handleError(err.message, 'err');\n      });\n      delete parsedNav.params.info;\n      delete parsedNav.params.tab;\n      parsedNav.path[0] = '';\n      HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsedNav.path, parsedNav.params));\n    } else if (!parsedNav.params.token) {\n      HashNavigation.navigateTo('');\n    }\n\n    this.readTimer = null;\n    this.readTimerCallback = null;\n\n    this.handleHashRoute();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n    window.removeEventListener('hashchange', this.handleHashRoute);\n    document.removeEventListener('visibilitychange', this.handleVisibilityEvent);\n  }\n\n  // Setup transport (usually websocket) and server address. This will terminate connection with the server.\n  static tnSetup(serverAddress, transport, locale) {\n    const tinode = new Tinode(APP_NAME, serverAddress, API_KEY, transport, isSecureConnection());\n    tinode.setHumanLanguage(locale);\n    tinode.enableLogging(LOGGING_ENABLED, true);\n    return tinode;\n  }\n\n  handleResize() {\n    const mobile = document.documentElement.clientWidth <= MEDIA_BREAKPOINT;\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n    if (this.state.displayMobile != mobile) {\n      this.setState({displayMobile: mobile});\n    }\n  }\n\n  // Check if a newer version of TinodeWeb app is available at the server.\n  checkForAppUpdate(reg) {\n    reg.onupdatefound = () => {\n      const installingWorker = reg.installing;\n      installingWorker.onstatechange = () => {\n        if (installingWorker.state == 'installed' && navigator.serviceWorker.controller) {\n          const msg = <>\n            <FormattedMessage id=\"update_available\"\n              defaultMessage=\"Update available.\"\n              description=\"Message shown when an app update is available.\" /> <a href=\"\">\n              <FormattedMessage id=\"reload_update\"\n                defaultMessage=\"Reload\"\n                description=\"Call to action to reload application when update is available.\" />\n            </a>.</>;\n          this.handleError(msg, 'info');\n        }\n      }\n    }\n  }\n\n  // Handle for hashchange event: display appropriate panels.\n  handleHashRoute() {\n    const hash = HashNavigation.parseUrlHash(window.location.hash);\n    if (hash.path && hash.path.length > 0) {\n      // Left-side panel selector.\n      if (['register','settings','edit','notif','security','support','general',\n          'cred','reset','newtpk','archive','blocked','contacts',''].includes(hash.path[0])) {\n        this.setState({sidePanelSelected: hash.path[0]});\n      } else {\n        console.log(\"Unknown sidepanel view\", hash.path[0]);\n      }\n\n      // Topic for MessagesView selector.\n      if (hash.path.length > 1 && hash.path[1] != this.state.topicSelected) {\n        this.setState({\n          topicSelected: Tinode.topicType(hash.path[1]) ? hash.path[1] : null\n        });\n      }\n    } else {\n      // Empty hashpath\n      this.setState({sidePanelSelected: ''});\n    }\n\n    // Save validation credentials, if available.\n    if (hash.params.method) {\n      this.setState({ credMethod: hash.params.method });\n    }\n    if (hash.params.code) {\n      this.setState({ credCode: hash.params.code });\n    }\n\n    // Additional parameters of panels.\n    this.setState({\n      showInfoPanel: hash.params.info,\n      newTopicTabSelected: hash.params.tab\n    });\n  }\n\n  handleOnline(online) {\n    if (online) {\n      this.handleError();\n    } else {\n      this.handleError(this.props.intl.formatMessage({id: 'no_connection'}), 'warn');\n    }\n    this.setState({liveConnection: online});\n  }\n\n  handleVisibilityEvent() {\n    this.setState({applicationVisible: !document.hidden});\n  }\n\n  handleError(err, level, action, actionText) {\n    this.setState({errorText: err, errorLevel: level, errorAction: action, errorActionText: actionText});\n  }\n\n  // User clicked Login button in the side panel.\n  handleLoginRequest(login, password) {\n    this.setState({\n      loginDisabled: true,\n      login: login,\n      password: password,\n      loadSpinnerVisible: true,\n      autoLogin: true\n    });\n    this.handleError('', null);\n\n    if (this.tinode.isConnected()) {\n      this.doLogin(login, password, {meth: this.state.credMethod, resp: this.state.credCode});\n    } else {\n      this.tinode.connect().catch((err) => {\n        // Socket error\n        this.setState({loginDisabled: false, autoLogin: false, loadSpinnerVisible: false});\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // Connection succeeded.\n  handleConnected() {\n    const params = this.tinode.getServerInfo();\n    this.setState({\n      serverVersion: params.ver + ' ' + (params.build ? params.build : 'none')\n    });\n\n    if (this.state.autoLogin) {\n      this.doLogin(this.state.login, this.state.password, {meth: this.state.credMethod, resp: this.state.credCode});\n    }\n  }\n\n  // Called for each auto-reconnect iteration.\n  handleAutoreconnectIteration(sec, prom) {\n    clearInterval(this.reconnectCountdown);\n\n    if (sec < 0) {\n      // Clear error\n      this.handleError();\n      return;\n    }\n\n    if (prom) {\n      // Reconnecting now\n      prom.then(() => {\n        // Reconnected: clear error\n        this.handleError();\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n      return;\n    }\n\n    const {formatMessage} = this.props.intl;\n    let count = sec / 1000;\n    count = count | count;\n    this.reconnectCountdown = setInterval(() => {\n      const timeLeft = (count > 99) ? secondsToTime(count) : count;\n      this.handleError(\n        formatMessage(messages.reconnect_countdown, {seconds: timeLeft}),\n        'warn',\n        () => {\n          clearInterval(this.reconnectCountdown);\n          this.tinode.reconnect();\n        },\n        formatMessage(messages.reconnect_now)\n      );\n      count -= 1;\n    }, 1000);\n  }\n\n  // Connection lost\n  handleDisconnect(err) {\n    this.setState({\n      connected: false,\n      ready: false,\n      topicSelectedOnline: false,\n      errorText: err && err.message ? err.message : \"Disconnected\",\n      errorLevel: err && err.message ? 'err' : 'warn',\n      loginDisabled: false,\n      contextMenuVisible: false,\n      serverVersion: \"no connection\"\n    });\n  }\n\n  doLogin(login, password, cred) {\n    if (this.tinode.isAuthenticated()) {\n      // Already logged in. Go to default screen.\n      HashNavigation.navigateTo('');\n      return;\n    }\n    // Sanitize and package credentail.\n    cred = Tinode.credential(cred);\n    // Try to login with login/password. If they are not available, try token. If no token, ask for login/password.\n    let promise = null;\n    const token = this.tinode.getAuthToken();\n    if (login && password) {\n      this.setState({password: null});\n      promise = this.tinode.loginBasic(login, password, cred);\n    } else if (token) {\n      promise = this.tinode.loginToken(token.token, cred);\n    }\n\n    if (promise) {\n      promise.then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text === 'validate credentials') {\n          this.setState({loadSpinnerVisible: false});\n          if (cred) {\n            this.handleError(this.props.intl.formatMessage({id: 'code_doesnot_match'}), 'warn');\n          }\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful();\n        }\n      }).catch((err) => {\n        // Login failed, report error.\n        this.setState({\n          loginDisabled: false,\n          credMethod: undefined,\n          credCode: undefined,\n          loadSpinnerVisible: false,\n          autoLogin: false\n        });\n        this.handleError(err.message, 'err');\n        localStorage.removeItem('auth-token');\n        HashNavigation.navigateTo('');\n      });\n    } else {\n      // No login credentials provided.\n      // Make sure we are on the login page.\n      HashNavigation.navigateTo('');\n      this.setState({loginDisabled: false});\n    }\n  }\n\n  handleCredentialsRequest(params) {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    parsed.path[0] = 'cred';\n    parsed.params['method'] = params.cred[0];\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n  }\n\n  handleLoginSuccessful() {\n    this.handleError();\n\n    // Refresh authentication token.\n    if (LocalStorageUtil.getObject('keep-logged-in')) {\n      LocalStorageUtil.setObject('auth-token', this.tinode.getAuthToken());\n    }\n    // Logged in fine, subscribe to 'me' attaching callbacks from the contacts view.\n    const me = this.tinode.getMeTopic();\n    me.onMetaDesc = this.tnMeMetaDesc;\n    me.onContactUpdate = this.tnMeContactUpdate;\n    me.onSubsUpdated = this.tnMeSubsUpdated;\n    this.setState({\n      connected: true,\n      credMethod: undefined,\n      credCode: undefined,\n      myUserId: this.tinode.getCurrentUserID(),\n      autoLogin: true,\n    });\n    // Subscribe, fetch topic desc, the list of subscriptions. Messages are not fetched.\n    me.subscribe(\n      me.startMetaQuery().\n        withLaterSub().\n        withDesc().\n        withTags().\n        withCred().\n        build()\n      ).catch((err) => {\n        this.tinode.disconnect();\n        localStorage.removeItem('auth-token');\n        this.handleError(err.message, 'err');\n        HashNavigation.navigateTo('');\n      }).finally(() => {\n        this.setState({loadSpinnerVisible: false});\n      });\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, 'contacts'));\n  }\n\n  tnMeMetaDesc(desc) {\n    if (desc) {\n      if (desc.public) {\n        this.setState({\n          sidePanelTitle: desc.public.fn,\n          sidePanelAvatar: makeImageUrl(desc.public.photo)\n        });\n      }\n      if (desc.acs) {\n        this.setState({\n          incognitoMode: !desc.acs.isPresencer()\n        });\n      }\n    }\n  }\n\n  // Reactions to updates to the contact list.\n  tnMeContactUpdate(what, cont) {\n    if (what == 'on' || what == 'off') {\n      this.resetContactList();\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedOnline: (what == 'on')});\n      }\n    } else if (what == 'read') {\n      this.resetContactList();\n    } else if (what == 'msg') {\n      // Check if the topic is archived. If so, don't play a sound.\n      const topic = this.tinode.getTopic(cont.topic);\n      const archived = topic && topic.isArchived();\n\n      // New message received. Maybe the message is from the current user, then unread is 0.\n      if (cont.unread > 0 && this.state.messageSounds && !archived) {\n        // Skip update if the topic is currently open, otherwise the badge will annoyingly flash.\n        if (document.hidden || this.state.topicSelected != cont.topic) {\n          POP_SOUND.play();\n        }\n      }\n      // Reorder contact list to use possibly updated 'touched'.\n      this.resetContactList();\n    } else if (what == 'recv') {\n      // Explicitly ignoring \"recv\" -- it causes no visible updates to contact list.\n    } else if (what == 'gone' || what == 'unsub') {\n      // Topic deleted or user unsubscribed. Remove topic from view.\n      // If the currently selected topic is gone, clear the selection.\n      if (this.state.topicSelected == cont.topic) {\n        this.handleTopicSelected(null);\n      }\n      // Redraw without the deleted topic.\n      this.resetContactList();\n    } else if (what == 'acs') {\n      // Permissions changed. If it's for the currently selected topic,\n      // update the views.\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedAcs: cont.acs});\n      }\n    } else if (what == 'del') {\n      // TODO: messages deleted (hard or soft) -- update pill counter.\n    } else if (what == 'upd') {\n      // upd - handled by the SDK. Explicitly ignoring here.\n    } else {\n      // TODO(gene): handle other types of notifications:\n      // * ua -- user agent changes (maybe display a pictogram for mobile/desktop).\n      console.log(\"Unsupported (yet) presence update:\" + what + \" in: \" + cont.topic);\n    }\n  }\n\n  tnMeSubsUpdated(unused) {\n    this.resetContactList();\n  }\n\n  // Merge search results and contact list to create a single flat\n  // list of known contacts for GroupManager to use.\n  static prepareSearchableContacts(chatList, foundContacts) {\n    const merged = {};\n\n    // For chatList topics merge only p2p topics and convert them to the\n    // same format as foundContacts.\n    for (const c of chatList) {\n      if (Tinode.isP2PTopicName(c.topic)) {\n          merged[c.topic] = {\n            user: c.topic,\n            updated: c.updated,\n            public: c.public,\n            private: c.private,\n            acs: c.acs\n          };\n      }\n    }\n\n    // Add all foundCountacts if they have not been added already.\n    for (const c of foundContacts) {\n      if (!merged[c.user]) {\n        merged[c.user] = c;\n      }\n    }\n\n    return Object.values(merged);\n  }\n\n  resetContactList() {\n    const newState = {\n      chatList: []\n    };\n\n    if (!this.state.ready) {\n      newState.ready = true;\n    }\n\n    this.tinode.getMeTopic().contacts((c) => {\n      newState.chatList.push(c);\n      if (this.state.topicSelected == c.topic) {\n        newState.topicSelectedOnline = c.online;\n        newState.topicSelectedAcs = c.acs;\n      }\n    });\n    // Merge search results and chat list.\n    newState.searchableContacts = TinodeWeb.prepareSearchableContacts(newState.chatList, this.state.searchResults);\n    this.setState(newState);\n  }\n\n  // Sending \"received\" notifications\n  tnData(data) {\n    const topic = this.tinode.getTopic(data.topic);\n    if (topic.msgStatus(data) >= Tinode.MESSAGE_STATUS_SENT && data.from != this.state.myUserId) {\n      clearTimeout(this.receivedTimer);\n      this.receivedTimer = setTimeout(() => {\n        this.receivedTimer = undefined;\n        topic.noteRecv(data.seq);\n      }, RECEIVED_DELAY);\n    }\n  }\n\n  /* Fnd topic: find contacts by tokens */\n  tnInitFind() {\n    const fnd = this.tinode.getFndTopic();\n    fnd.onSubsUpdated = this.tnFndSubsUpdated;\n    if (fnd.isSubscribed()) {\n      this.tnFndSubsUpdated();\n    } else {\n      fnd.subscribe(fnd.startMetaQuery().withSub().build()).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  tnFndSubsUpdated() {\n    const foundContacts = [];\n    // Don't attempt to create P2P topics which already exist. Server will reject the duplicates.\n    this.tinode.getFndTopic().contacts((s) => {\n      foundContacts.push(s);\n    });\n    this.setState({\n      searchResults: foundContacts,\n      searchableContacts: TinodeWeb.prepareSearchableContacts(this.state.chatList, foundContacts)\n    });\n  }\n\n  /** Called when the user enters a contact into the contact search field in the NewAccount panel\n    @param query {Array} is an array of contacts to search for\n   */\n  handleSearchContacts(query) {\n    const fnd = this.tinode.getFndTopic();\n    fnd.setMeta({desc: {public: query}}).then((ctrl) => {\n      return fnd.getMeta(fnd.startMetaQuery().withSub().build());\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  // User clicked on a contact in the side panel or deleted a contact.\n  handleTopicSelected(topicName) {\n    console.log(\"handleTopicSelected\", topicName);\n    // Clear newTopicParams after use.\n    if (this.state.newTopicParams && this.state.newTopicParams._topicName != topicName) {\n      this.setState({\n        newTopicParams: null\n      });\n    }\n\n    if (topicName) {\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'topic-view',\n        showInfoPanel: false\n      });\n      // Different contact selected.\n      if (this.state.topicSelected != topicName) {\n        this.setState({\n          topicSelectedOnline: this.tinode.isTopicOnline(topicName),\n          topicSelectedAcs: this.tinode.getTopicAccessMode(topicName)\n        });\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', topicName));\n      }\n    } else {\n      // Currently selected contact deleted\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'sidepanel',\n        topicSelectedOnline: false,\n        topicSelectedAcs: null,\n        showInfoPanel: false\n      });\n\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic('', null));\n    }\n  }\n\n  // In mobile view user requested to show sidepanel\n  handleHideMessagesView() {\n    this.setState({\n      mobilePanel: 'sidepanel'\n    });\n    HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, null));\n  }\n\n  // User is sending a message, either plain text or a drafty object, possibly\n  // with attachments.\n  //  - msg - Drafty message with content\n  //  - promise - Promise to be resolved when the upload is completed\n  //  - uploader - for tracking progress\n  handleSendMessage(msg, promise, uploader) {\n    const topic = this.tinode.getTopic(this.state.topicSelected);\n\n    msg = topic.createMessage(msg, false);\n    // The uploader is used to show progress.\n    msg._uploader = uploader;\n\n    if (!topic.isSubscribed()) {\n      if (!promise) {\n        promise = Promise.resolve();\n      }\n      promise = promise.then(() => { return topic.subscribe(); });\n    }\n\n    if (promise) {\n      promise = promise.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n\n    topic.publishDraft(msg, promise)\n      .then((ctrl) => {\n        if (topic.isArchived()) {\n          return topic.archive(false);\n        }\n      })\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleNewChatInvitation(topicName, action) {\n    const topic = this.tinode.getTopic(topicName);\n    let response = null;\n    switch (action) {\n      case 'accept':\n        // Accept given permissions.\n        const mode = topic.getAccessMode().getGiven();\n        response = topic.setMeta({sub: {mode: mode}});\n        if (topic.isP2P()) {\n          // For P2P topics change 'given' permission of the peer too.\n          // In p2p topics the other user has the same name as the topic.\n          response = response.then((ctrl) => {\n            topic.setMeta({sub: {user: topicName, mode: mode}});\n          });\n        }\n        break;\n      case 'delete':\n        // Ignore invitation by deleting it.\n        response = topic.delTopic(true);\n        break;\n      case 'block':\n        // Ban the topic making futher invites impossible.\n        // Just self-ban.\n        const am = topic.getAccessMode().updateWant('-JP').getWant();\n        response = topic.setMeta({sub: {mode: am}}).then((ctrl) => {\n          return this.handleTopicSelected(null);\n        });\n        break;\n      default:\n        console.log(\"Unknown invitation action\", '\"' + action + '\"\"');\n    }\n\n    if (response != null) {\n      response.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // User chose a Sign Up menu item.\n  handleNewAccount() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, 'register'));\n  }\n\n  // Actual registration of a new account.\n  handleNewAccountRequest(login_, password_, public_, cred_, tags_) {\n    // Clear old error, if any.\n    this.handleError();\n\n    this.tinode.connect(this.state.serverAddress)\n      .then(() => {\n        return this.tinode.createAccountBasic(login_, password_,\n          {public: public_, tags: tags_, cred: Tinode.credential(cred_)});\n      }).then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text == 'validate credentials') {\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful(this);\n        }\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleUpdateAccountRequest(password, pub, defacs) {\n    this.handleError();\n\n    if (pub || defacs) {\n      const params = {};\n      if (pub) {\n        params.public = pub;\n      }\n      if (defacs) {\n        params.defacs = defacs;\n      }\n      this.tinode.getMeTopic().setMeta({desc: params}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n    if (password) {\n      this.tinode.updateAccountBasic(null, this.tinode.getCurrentLogin(), password).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleToggleIncognitoMode(on) {\n    const me = this.tinode.getMeTopic();\n    const am = me.getAccessMode().updateWant(on ? '-P' : '+P').getWant();\n    me.setMeta({sub: {mode: am}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleUpdateAccountTagsRequest(tags) {\n    this.tinode.getMeTopic().setMeta({tags: tags})\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  // User chose Settings menu item.\n  handleSettings() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'edit' : 'settings'));\n  }\n\n  // User updated global parameters.\n  handleGlobalSettings(settings) {\n    const serverAddress = settings.serverAddress || this.state.serverAddress;\n    const transport = settings.transport || this.state.transport;\n    if (this.tinode) {\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.tinode = TinodeWeb.tnSetup(serverAddress, transport, this.props.intl.locale);\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n\n    this.setState({\n      serverAddress: serverAddress,\n      transport: transport\n    });\n    LocalStorageUtil.setObject('settings', {\n      serverAddress: serverAddress,\n      transport: transport\n    });\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, ''));\n  }\n\n  // User chose 'Archived chats'.\n  handleShowArchive() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'archive' : ''));\n  }\n\n  // User viewes 'Blocked chats'.\n  handleShowBlocked() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'blocked' : ''));\n  }\n\n  // Initialize desktop alerts = push notifications.\n  initDesktopAlerts() {\n    // Google could not be bothered to mention that\n    // onTokenRefresh is never called.\n    this.fbPush.onTokenRefresh(() => {\n      this.requestPushToken();\n    });\n\n    this.fbPush.onMessage((payload) => {\n      // No need to do anything about it.\n      // All the magic happends in the service worker.\n    });\n  }\n\n  togglePushToken(enabled) {\n    if (enabled) {\n      if (!this.state.firebaseToken) {\n        this.fbPush.requestPermission().then(() => {\n          this.requestPushToken();\n        }).catch((err) => {\n          this.handleError(err.message, 'err');\n          this.setState({desktopAlerts: false, firebaseToken: null});\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n          console.log(\"Failed to get permission to notify.\", err);\n        });\n      } else {\n        this.setState({desktopAlerts: true});\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n      }\n    } else if (this.state.firebaseToken) {\n      this.fbPush.deleteToken(this.state.firebaseToken).catch((err) => {\n        console.log(\"Unable to delete token.\", err);\n      }).finally(() => {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        localStorage.removeItem('firebase-token');\n        this.setState({desktopAlerts: false, firebaseToken: null});\n      });\n    } else {\n      this.setState({desktopAlerts: false, firebaseToken: null});\n      LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n    }\n  }\n\n  requestPushToken() {\n    this.fbPush.getToken().then((refreshedToken) => {\n      if (refreshedToken != this.state.firebaseToken) {\n        this.tinode.setDeviceToken(refreshedToken, true);\n        LocalStorageUtil.setObject('firebase-token', refreshedToken);\n      }\n      this.setState({firebaseToken: refreshedToken, desktopAlerts: true});\n      LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n      console.log(\"Failed to retrieve firebase token\", err);\n    });\n  }\n\n  handleToggleMessageSounds(enabled) {\n    this.setState({messageSounds: enabled});\n    LocalStorageUtil.updateObject('settings', {\n      messageSoundsOff: !enabled\n    });\n  }\n\n  handleCredAdd(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.setMeta({cred: {meth: method, val: value}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredDelete(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.delCredential(method, value).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredConfirm(method, response) {\n    this.handleCredentialsRequest({cred: [method]});\n  }\n\n  // User clicked Cancel button in Setting or Sign Up panel.\n  handleSidepanelCancel() {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    let path = '';\n    if (['security','support','general','notif'].includes(parsed.path[0])) {\n      path = 'edit';\n    } else if ('blocked' == parsed.path[0]) {\n      path = 'security';\n    } else if (this.state.myUserId) {\n      path = 'contacts';\n    }\n    parsed.path[0] = path;\n    if (parsed.params) {\n      delete parsed.params.code;\n      delete parsed.params.method;\n      delete parsed.params.tab;\n    }\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n    this.setState({errorText: '', errorLevel: null});\n  }\n\n  // Basic nagigator by hash value. No need to bind to this.\n  basicNavigator(hash) {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, hash));\n  }\n\n  // Request to start a topic, new or selected from search results, or \"by ID\".\n  handleStartTopicRequest(topicName, pub, priv, tags, isChannel) {\n    // Check if topic is indeed new. If not, launch it.\n    if (topicName && this.tinode.isTopicCached(topicName)) {\n      this.handleTopicSelected(topicName);\n      return;\n    }\n\n    const params = {};\n    if (Tinode.isP2PTopicName(topicName)) {\n      // Because we are initialing the subscription, set 'want' to all permissions.\n      params.sub = {mode: DEFAULT_P2P_ACCESS_MODE};\n      // Give the other user all permissions too.\n      params.desc = {defacs: {auth: DEFAULT_P2P_ACCESS_MODE}};\n    } else {\n      topicName = topicName || this.tinode.newGroupTopicName(isChannel);\n      params.desc = {public: pub, private: {comment: priv}};\n      params.tags = tags;\n    }\n    params._topicName = topicName;\n    this.setState({newTopicParams: params}, () => {this.handleTopicSelected(topicName)});\n  }\n\n  // New topic was creted, here is the new topic name.\n  handleNewTopicCreated(oldName, newName) {\n    if (this.state.topicSelected == oldName && oldName != newName) {\n      // If the current URl contains the old topic name, replace it with new.\n      // Update the name of the selected topic first so the navigator doen't clear\n      // the state.\n      this.setState({topicSelected: newName}, () => {\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', newName));\n      });\n    }\n  }\n\n  handleTopicUpdateRequest(topicName, pub, priv, permissions) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const params = {};\n      if (pub) {\n        params.public = pub;\n      }\n      if (priv) {\n        params.private = (priv === Tinode.DEL_CHAR) ?\n          Tinode.DEL_CHAR : {comment: priv};\n      }\n      if (permissions) {\n        params.defacs = permissions;\n      }\n      topic.setMeta({desc: params}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleChangePermissions(topicName, mode, uid) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const am = topic.getAccessMode();\n      if (uid) {\n        am.updateGiven(mode);\n        mode = am.getGiven();\n      } else {\n        am.updateWant(mode);\n        mode = am.getWant();\n      }\n      topic.setMeta({sub: {user: uid, mode: mode}}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleTagsUpdated(topicName, tags) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      topic.setMeta({tags: tags}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleLogout() {\n    updateFavicon(0);\n\n    // Remove stored data.\n    localStorage.removeItem('auth-token');\n    localStorage.removeItem('firebase-token');\n    localStorage.removeItem('settings');\n    if (this.state.firebaseToken) {\n      this.fbPush.deleteToken(this.state.firebaseToken)\n    }\n\n    if (this.tinode) {\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.setState(this.getBlankState());\n    this.tinode = TinodeWeb.tnSetup(this.state.serverAddress, this.state.transport, this.props.intl.locale);\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    HashNavigation.navigateTo('');\n  }\n\n  handleDeleteAccount() {\n    this.tinode.delCurrentUser(true).then((ctrl) => {\n      this.handleLogout();\n    });\n  }\n\n  handleDeleteMessagesRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Request hard-delete all messages.\n    topic.delMessagesAll(true).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleLeaveUnsubRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.leave(true).then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleBlockTopicRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleReportTopic(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Publish spam report.\n    this.tinode.publish(Tinode.TOPIC_SYS, Tinode.Drafty.attachJSON(null, {\n      'action': 'report',\n      'target': topicName\n    }));\n\n    // Remove J and P permissions.\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleShowContextMenu(params, menuItems) {\n    this.setState({\n      contextMenuVisible: true,\n      contextMenuClickAt: {x: params.x, y: params.y},\n      contextMenuParams: params,\n      contextMenuItems: menuItems || this.defaultTopicContextMenu(params.topicName),\n      contextMenuBounds: ReactDOM.findDOMNode(this).getBoundingClientRect()\n    });\n  }\n\n  defaultTopicContextMenu(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n\n    let muted = false, blocked = false, self_blocked = false, subscribed = false, deleter = false, archived = false;\n    if (topic) {\n      subscribed = topic.isSubscribed();\n      archived = topic.isArchived();\n\n      const acs = topic.getAccessMode();\n      if (acs) {\n        muted = acs.isMuted();\n        blocked = !acs.isJoiner();\n        self_blocked = !acs.isJoiner('want');\n        deleter = acs.isDeleter();\n      }\n    }\n\n    return [\n      subscribed ? {\n        title: this.props.intl.formatMessage({id: 'menu_item_info'}),\n        handler: this.handleShowInfoView\n      } : null,\n      subscribed ? 'messages_clear' : null,\n      subscribed && deleter ? 'messages_clear_hard' : null,\n      muted ? (blocked ? null : 'topic_unmute') : 'topic_mute',\n      self_blocked ? 'topic_unblock' : 'topic_block',\n      !archived ? 'topic_archive' : null,\n      'topic_delete'\n    ];\n  }\n\n  handleHideContextMenu() {\n    this.setState({\n      contextMenuVisible: false,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuBounds: null\n    });\n  }\n\n  handleContextMenuAction(action, promise, params) {\n    if (action == 'topic_archive') {\n      if (promise && params.topicName && params.topicName == this.state.topicSelected) {\n        promise.then(() => {\n          this.handleTopicSelected(null);\n        });\n      }\n    }\n  }\n\n  handleShowAlert(title, content, onConfirm, confirmText, onReject, rejectText) {\n    this.setState({\n      alertVisible: true,\n      alertParams: {\n        title: title,\n        content: content,\n        onConfirm: onConfirm,\n        confirm: confirmText,\n        onReject: onReject,\n        reject: rejectText\n      }\n    });\n  }\n\n  handleShowInfoView() {\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'info', true));\n    this.setState({showInfoPanel: true});\n  }\n\n  handleHideInfoView() {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'info'));\n    this.setState({showInfoPanel: false});\n  }\n\n  handleMemberUpdateRequest(topicName, added, removed) {\n    if (!topicName) {\n      return;\n    }\n\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    if (added && added.length > 0) {\n      added.map((uid) => {\n        topic.invite(uid, null).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n\n    if (removed && removed.length > 0) {\n      removed.map((uid) => {\n        topic.delSubscription(uid).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n  }\n\n  handleValidateCredentialsRequest(cred, code) {\n    if (this.tinode.isAuthenticated()) {\n      const me = this.tinode.getMeTopic();\n      me.setMeta({cred: {meth: cred, resp: code}})\n        .then(() => {\n          HashNavigation.navigateTo('');\n        })\n        .catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n    } else {\n      this.setState({credMethod: cred, credCode: code});\n      this.doLogin(null, null, {meth: cred, resp: code});\n    }\n  }\n\n  handlePasswordResetRequest(method, value) {\n    // If already connected, connnect() will return a resolved promise.\n    this.tinode.connect()\n      .then(() => {\n        return this.tinode.requestResetAuthSecret('basic', method, value);\n      })\n      .catch((err) => {\n        // Socket error\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleResetPassword(scheme, newPassword, token) {\n    token = base64ReEncode(token);\n    if (!token) {\n      this.handleError(this.props.intl.formatMessage({id: 'invalid_security_token'}), 'err');\n    } else {\n      this.tinode.connect()\n        .then(() => {\n          return this.tinode.updateAccountBasic(null, null, newPassword, {token: token});\n        })\n        .catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"app-container\">\n        {this.state.contextMenuVisible ?\n          <ContextMenu\n            tinode={this.tinode}\n            bounds={this.state.contextMenuBounds}\n            clickAt={this.state.contextMenuClickAt}\n            params={this.state.contextMenuParams}\n            items={this.state.contextMenuItems}\n            hide={this.handleHideContextMenu}\n            onShowAlert={this.handleShowAlert}\n            onAction={this.handleContextMenuAction}\n            onTopicRemoved={(topicName) => {\n              if (topicName == this.state.topicSelected) {\n                this.handleTopicSelected(null);\n              }\n            }}\n            onError={this.handleError} />\n          :\n          null\n        }\n        <Alert\n          visible={this.state.alertVisible}\n          title={this.state.alertParams.title}\n          content={this.state.alertParams.content}\n          onReject={this.state.alertParams.onReject ? (() => { this.setState({alertVisible: false}); }) : null}\n          reject={this.state.alertParams.reject}\n          onConfirm={() => { this.setState({alertVisible: false}); this.state.alertParams.onConfirm(); }}\n          confirm={this.state.alertParams.confirm}\n          />\n        <SidepanelView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          displayMobile={this.state.displayMobile}\n          hideSelf={this.state.displayMobile && this.state.mobilePanel !== 'sidepanel'}\n          state={this.state.sidePanelSelected}\n          title={this.state.sidePanelTitle}\n          avatar={this.state.sidePanelAvatar}\n          login={this.state.login}\n          myUserId={this.state.myUserId}\n          loginDisabled={this.state.loginDisabled}\n          loadSpinnerVisible={this.state.loadSpinnerVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          topicSelected={this.state.topicSelected}\n          chatList={this.state.chatList}\n          credMethod={this.state.credMethod}\n          credCode={this.state.credCode}\n\n          transport={this.state.transport}\n          messageSounds={this.state.messageSounds}\n          desktopAlerts={this.state.desktopAlerts}\n          desktopAlertsEnabled={this.state.desktopAlertsEnabled}\n          incognitoMode={this.state.incognitoMode}\n          serverAddress={this.state.serverAddress}\n          serverVersion={this.state.serverVersion}\n\n          onGlobalSettings={this.handleGlobalSettings}\n          onSignUp={this.handleNewAccount}\n          onSettings={this.handleSettings}\n          onBasicNavigate={this.basicNavigator}\n          onLoginRequest={this.handleLoginRequest}\n          onCreateAccount={this.handleNewAccountRequest}\n          onUpdateAccount={this.handleUpdateAccountRequest}\n          onUpdateAccountTags={this.handleUpdateAccountTagsRequest}\n          onTogglePushNotifications={this.togglePushToken}\n          onToggleMessageSounds={this.handleToggleMessageSounds}\n          onToggleIncognitoMode={this.handleToggleIncognitoMode}\n          onCredAdd={this.handleCredAdd}\n          onCredDelete={this.handleCredDelete}\n          onCredConfirm={this.handleCredConfirm}\n          onTopicSelected={this.handleTopicSelected}\n          onCreateTopic={this.handleStartTopicRequest}\n          onLogout={this.handleLogout}\n          onDeleteAccount={this.handleDeleteAccount}\n          onShowAlert={this.handleShowAlert}\n          onCancel={this.handleSidepanelCancel}\n          onError={this.handleError}\n          onValidateCredentials={this.handleValidateCredentialsRequest}\n          onPasswordResetRequest={this.handlePasswordResetRequest}\n          onResetPassword={this.handleResetPassword}\n          onShowArchive={this.handleShowArchive}\n          onShowBlocked={this.handleShowBlocked}\n\n          onInitFind={this.tnInitFind}\n          searchResults={this.state.searchResults}\n          onSearchContacts={this.handleSearchContacts}\n\n          showContextMenu={this.handleShowContextMenu} />\n\n        <MessagesView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          ready={this.state.ready}\n          online={this.state.topicSelectedOnline}\n          acs={this.state.topicSelectedAcs}\n          displayMobile={this.state.displayMobile}\n          viewportWidth={this.state.viewportWidth}\n          viewportHeight={this.state.viewportHeight}\n          hideSelf={this.state.displayMobile &&\n            (this.state.mobilePanel !== 'topic-view' || this.state.showInfoPanel)}\n          topic={this.state.topicSelected}\n          myUserId={this.state.myUserId}\n          serverVersion={this.state.serverVersion}\n          serverAddress={this.state.serverAddress}\n          applicationVisible={this.state.applicationVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          newTopicParams={this.state.newTopicParams}\n\n          onHideMessagesView={this.handleHideMessagesView}\n          onData={this.tnData}\n          onError={this.handleError}\n          onNewTopicCreated={this.handleNewTopicCreated}\n          showContextMenu={this.handleShowContextMenu}\n          onChangePermissions={this.handleChangePermissions}\n          onNewChat={this.handleNewChatInvitation}\n          sendMessage={this.handleSendMessage} />\n\n        {this.state.showInfoPanel ?\n          <InfoView\n            tinode={this.tinode}\n            connected={this.state.connected}\n            displayMobile={this.state.displayMobile}\n            topic={this.state.topicSelected}\n            searchableContacts={this.state.searchableContacts}\n            myUserId={this.state.myUserId}\n\n            errorText={this.state.errorText}\n            errorLevel={this.state.errorLevel}\n            errorAction={this.state.errorAction}\n            errorActionText={this.state.errorActionText}\n\n            onTopicDescUpdate={this.handleTopicUpdateRequest}\n            onCancel={this.handleHideInfoView}\n            onShowAlert={this.handleShowAlert}\n            onChangePermissions={this.handleChangePermissions}\n            onMemberUpdateRequest={this.handleMemberUpdateRequest}\n            onDeleteMessages={this.handleDeleteMessagesRequest}\n            onLeaveTopic={this.handleLeaveUnsubRequest}\n            onBlockTopic={this.handleBlockTopicRequest}\n            onReportTopic={this.handleReportTopic}\n            onAddMember={this.handleManageGroupMembers}\n            onTopicTagsUpdate={this.handleTagsUpdated}\n            onInitFind={this.tnInitFind}\n            onError={this.handleError}\n\n            showContextMenu={this.handleShowContextMenu}\n            />\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(TinodeWeb);\n","// Put all packages together.\n// Used to generate umd/index.prod.js\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { IntlProvider } from 'react-intl';\n\nimport allMessages from './messages.json';\nimport TinodeWeb from './views/tinode-web.jsx';\nimport HashNavigation from './lib/navigation.js';\n\n// Detect human language to use in the UI:\n//  Check parameters from URL hash #?hl=ru, then browser, then use 'en' as a fallback.\nconst { params } = HashNavigation.parseUrlHash(window.location.hash);\nconst language = (params && params.hl) ||\n  (navigator.languages && navigator.languages[0]) ||\n  navigator.language ||\n  navigator.userLanguage ||\n  'en';\n\n// Get the base language 'en' from a more specific 'en_GB' or 'en-US' as a partial fallback.\nconst baseLanguage = language.toLowerCase().split(/[-_]/)[0];\n\n// Try the full locale first, then the locale without the region code, fallback to 'en'.\nconst messages =\n  allMessages[language] ||\n  allMessages[baseLanguage] ||\n  allMessages.en;\n\nReactDOM.render(\n  <IntlProvider locale={language} messages={messages} textComponent={React.Fragment}>\n    <TinodeWeb />\n  </IntlProvider>,\n  document.getElementById('mountPoint')\n);\n"],"sourceRoot":""}