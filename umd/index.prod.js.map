{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"React\"","webpack:///external \"ReactIntl\"","webpack:///external \"Tinode\"","webpack:///external \"ReactDOM\"","webpack:///external \"firebase\"","webpack:///external [\"firebase\",\"messaging\"]","webpack:///./src/widgets/alert.jsx","webpack:///./src/version.js","webpack:///./src/config.js","webpack:///./src/lib/navigation.js","webpack:///./src/widgets/context-menu.jsx","webpack:///./src/lib/strformat.js","webpack:///./src/widgets/letter-tile.jsx","webpack:///./src/lib/blob-helpers.js","webpack:///./src/widgets/avatar-upload.jsx","webpack:///./src/widgets/checkbox.jsx","webpack:///./src/widgets/contact-badges.jsx","webpack:///./src/widgets/unread-badge.jsx","webpack:///./src/widgets/contact.jsx","webpack:///./src/widgets/contact-action.jsx","webpack:///./src/widgets/contact-list.jsx","webpack:///./src/widgets/menu-cancel.jsx","webpack:///./src/widgets/error-panel.jsx","webpack:///./src/widgets/chip.jsx","webpack:///./src/widgets/chip-input.jsx","webpack:///./src/widgets/group-manager.jsx","webpack:///./src/widgets/visible-password.jsx","webpack:///./src/widgets/in-place-edit.jsx","webpack:///./src/widgets/more-button.jsx","webpack:///./src/widgets/permissions-editor.jsx","webpack:///./src/lib/utils.js","webpack:///./src/widgets/tag-manager.jsx","webpack:///./src/views/info-view.jsx","webpack:///./src/widgets/file-progress.jsx","webpack:///./src/widgets/attachment.jsx","webpack:///./src/widgets/received-marker.jsx","webpack:///./src/widgets/chat-message.jsx","webpack:///./src/widgets/send-message.jsx","webpack:///./src/widgets/doc-preview.jsx","webpack:///./src/widgets/group-subs.jsx","webpack:///./src/widgets/image-preview.jsx","webpack:///./src/widgets/Invitation.jsx","webpack:///./src/widgets/load-spinner.jsx","webpack:///./src/views/logo-view.jsx","webpack:///./src/views/messages-view.jsx","webpack:///./src/widgets/menu-contacts.jsx","webpack:///./src/widgets/menu-start.jsx","webpack:///./src/widgets/side-navbar.jsx","webpack:///./src/views/contacts-view.jsx","webpack:///./src/lib/local-storage.js","webpack:///./src/views/create-account-view.jsx","webpack:///./src/views/edit-account-view.jsx","webpack:///./src/views/login-view.jsx","webpack:///./src/widgets/new-topic-by-id.jsx","webpack:///./src/widgets/new-topic-group.jsx","webpack:///./src/widgets/search-contacts.jsx","webpack:///./src/views/new-topic-view.jsx","webpack:///./src/views/password-reset-view.jsx","webpack:///./src/widgets/host-selector.jsx","webpack:///./src/views/settings-view.jsx","webpack:///./src/views/validation-view.jsx","webpack:///./src/views/sidepanel-view.jsx","webpack:///./src/lib/host-name.js","webpack:///./src/views/tinode-web.jsx","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","React","ReactIntl","Tinode","ReactDOM","firebase","Alert","PureComponent","this","props","visible","className","title","content","onReject","onClick","reject","id","onConfirm","confirm","APP_NAME","KNOWN_HOSTS","hosted","local","DEFAULT_HOST","DEFAULT_P2P_ACCESS_MODE","MAX_INBAND_ATTACHMENT_SIZE","HashNavigation","hash","parts","split","params","path","substr","forEach","part","item","decodeURIComponent","url","window","location","join","args","push","length","parsed","parseUrlHash","composeUrlHash","sidepanel","topic","info","messages","defineMessages","clear_messages","clear_for_all","delete_for_all","send_retry","mute","unmute","topic_delete","topic_delete_warning","unblock","block","topic_block_warning","member_delete","archive","ContextMenu","Component","document","addEventListener","handlePageClick","handleEscapeKey","removeEventListener","e","findDOMNode","contains","target","preventDefault","stopPropagation","hide","keyCode","items","currentTarget","dataset","MenuItems","onAction","handler","onError","console","log","all","hard","errorHandler","tinode","getTopic","topicName","cancelSend","seq","delMessagesAll","delMessagesList","catch","err","message","flushMessage","msg","createMessage","publishDraft","result","updateMode","user","count","menu","map","handleClick","data-id","vSize","position","left","bounds","right","clickAt","x","top","bottom","y","style","formatMessage","intl","onShowAlert","deleteMessages","delete","retryMessage","topicPermissionSetter","then","ctrl","onTopicRemoved","delTopic","delSubscription","injectIntl","shortDateFormat","locale","navigator","userLanguage","language","now","Date","getFullYear","getMonth","getDate","toLocaleTimeString","hour12","hour","minute","toLocaleDateString","month","day","year","bytesToHumanSize","bytes","sizes","bucket","Math","min","floor","log2","pow","round","toFixed","LetterTile","avatar","isGroup","topicType","iconColor","abs","charCodeAt","stringHash","trim","letter","charAt","alt","src","onerror","SUPPORTED_IMAGE_FORMATS","MIME_EXTENSIONS","makeImageUrl","photo","type","data","fitImageSize","width","height","maxWidth","maxHeight","forceSquare","scale","size","dstWidth","dstHeight","srcWidth","srcHeight","xoffset","yoffset","fileNameForMime","fname","mime","idx","indexOf","ext","at","lastIndexOf","substring","imageFileScaledToBase64","file","onSuccess","img","Image","crossOrigin","onload","dim","canvas","createElement","ctx","getContext","imageSmoothingEnabled","drawImage","imageBits","toDataURL","getMimeType","quality","base64DecodedLen","URL","createObjectURL","imageFileToBase64","reader","FileReader","readAsDataURL","fileToBase64","header","exec","AvatarUpload","prevProps","setState","dataUrl","files","base64bits","du","onImageChanged","randId","random","readOnly","state","href","uid","accept","onChange","handleFileUpload","htmlFor","CheckBox","checked","handleChange","icon_mapping","ContactBadges","badges","b","icon","color","UnreadBadge","Contact","onSelected","index","acs","showContextMenu","pageY","pageX","online","slice","icon_badges","showMode","getMode","isMuted","isJoiner","showCheckmark","selected","showOnline","unread","comment","handleContextClick","ContactAction","action","values","badge_you","badge_owner","ContactList","Array","isArray","topicSelected","contactNodes","contactsCount","contacts","filterFunc","filter","private","toLowerCase","public","fn","myUserId","isOwner","showUnread","connected","onTopicSelected","noScroll","dangerouslySetInnerHTML","__html","emptyListMessage","MenuCancel","onCancel","ErrorPanel","level","show","onClearError","warn","text","whiteSpace","actionText","Chip","invalid","noAvatar","required","handleCancel","ChipInput","placeholder","chips","prompt","sortedChips","sortChips","staticMembers","chipIndex","indexChips","keep","normal","includes","concat","prevState","deriveStateFromProps","input","removed","onChipRemoved","removeChipAt","focused","onFocusLost","onEnter","handleChipCancel","undefined","avatarDisabled","handleTextInput","onFocus","handleFocusGained","onBlur","handleFocusLost","onKeyDown","handleKeyDown","autoFocus","no_contacts","contacts_not_found","GroupManager","members","delta","present","keepInitial","requiredMember","stat","sel","userId","status","selectedContacts","splice","val","query","contactFilter","noContactsMessage","instance","added","keys","k","onSubmit","defaultMessage","handleContactFilter","handleMemberRemoved","doContactFiltering","handleContactSelected","handleSubmit","indexMembers","keepInitialMembers","VisiblePassword","onFinished","handleEditingFinished","setTimeout","activeElement","tabIndex","autoComplete","handeTextChange","handleVisibility","InPlaceEdit","newValue","initialValue","active","focus","event","checkValidity","fieldType","spanText","spanClass","handlePasswordFinished","handleStartEditing","MoreButton","open","onToggle","handleToggle","PermissionsEditor","replace","sort","names","joiner","writer","preser","approver","sharer","deleter","owner","skip","compare","userTitle","userAvatar","modeTitle","compareTitle","updateFavicon","oldIcon","getElementById","head","getElementsByTagName","newIcon","rel","removeChild","appendChild","vcard","imageDataUrl","card","dataStart","arrayEqual","a","sanitizeUrl","allowedSchemes","test","schemes","RegExp","TagManager","nextProps","tags","activated","tagInput","last","handleAddTag","tag","onTagsChanged","add_tags_prompt","handleRemoveTag","handleTagInput","defautMessage","description","requested","granted","edit_permissions","other_user","clear_messages_warning","delete_messages","delete_messages_warning","leave_chat","leave_chat_warning","block_contact","block_contact_warning","report_chat","report_chat_warning","InfoView","onMetaDesc","previousMetaDesc","previousSubsUpdated","onSubsUpdated","getType","previousTagsUpdated","onTagsUpdated","resetDesc","resetSubs","newState","contactList","user2","subscriber","modeGiven2","getGiven","modeWant2","getWant","subscribers","sub","defacs","getDefaultAccess","getAccessMode","admin","isAdmin","isSharer","isDeleter","muted","fullName","address","groupTopic","showMemberPanel","access","modeGiven","modeWant","auth","anon","getMeta","startMetaQuery","withTags","build","desc","subs","onTopicDescUpdate","DEL_CHAR","ignored","onChangePermissions","perm","showPermissionEditorFor","userPermissionsEdited","which","toEdit","toCompare","toSkip","titleEdit","titleCompare","userPermissionsTitle","userPermissionsAvatar","editedPermissions","immutablePermissions","editedPermissionsTitle","immutablePermissionsTitle","editedPermissionsSkipped","onInitFind","onMemberUpdateRequest","onDeleteMessages","onLeaveTopic","onBlockTopic","onReportTopic","selectedContact","moreInfoExpanded","onTopicTagsUpdate","menuItems","handleLaunchPermissionsEditor","displayMobile","errorLevel","errorText","searchableContacts","handleHideAddMembers","handleMemberUpdateRequest","handlePermissionsChanged","handleHidePermissionsEditor","handleFullNameUpdate","private_placeholder","handlePrivateUpdate","handleImageChanged","handleMuted","more","handleMoreInfo","handleTagsUpdated","handleDeleteMessages","handleLeave","handleBlock","handleReport","handleShowAddMembers","no_members","handleMemberSelected","handleContextMenu","FileProgress","progress","Attachment","filename","mimetype","downloader","getLargeFileHelper","download","loaded","uploader","onCancelUpload","cancel","helperFunc","downloadUrl","downloadFile","ReceivedMarker","timestamp","received","MESSAGE_STATUS_SENDING","sending","MESSAGE_STATUS_FAILED","failed","marker","MESSAGE_STATUS_SENT","MESSAGE_STATUS_RECEIVED","MESSAGE_STATUS_READ","ChatMessage","onImagePreview","resp","act","ref","onFormResponse","ratio","sideClass","deleted","sequence","response","bubbleClass","fullDisplay","userFrom","attachments","mimeType","Drafty","getContentType","att","getDownloadUrl","isUploading","getEntitySize","handleCancelUpload","format","draftyFormatter","userName","notFound","onProgress","handleProgress","handleImagePreview","handleFormButtonClick","el","tagName","attr","attrValue","viewportWidth","REM_SIZE","sanitizedUrl","sanitizeImageUrl","inner","Children","child","SendMessage","messageEditArea","handlePasteEvent","disabled","onImageSuccess","onAttachmentSuccess","clipboardData","originalEvent","kind","getAsFile","filePasted","bits","onAttachImage","onAttachFile","acceptBlank","noInput","onSendMessage","shiftKey","handleSend","onKeyPress","getTime","keypressTimestamp","messaging_disabled","messagePrompt","type_new_message","attachImage","click","attachFile","handleMessageTyping","handleKeyPress","handleAttachFile","display","handleAttachImage","DocPreview","onClose","mimeToIcon","default","image","video","handleSendDoc","GroupSubs","usersOnline","totalCount","countToShow","some","overflow","ImagePreview","node","getBoundingClientRect","caption","maxlength","max","assignWidth","handleSendImage","Invitation","evt","handleButtonAction","LoadSpinner","LogoView","version","getLibrary","hideSelf","serverVersion","serverAddress","online_now","last_seen","isUnconfirmed","ex","getExcessive","isPeerRestricted","ms","getMissing","MessagesView","nextState","docPreview","imagePreview","imagePostview","typingIndicator","scrollPosition","fetchingMessages","msgs","assign","onlineSubs","peer","p2pPeerDesc","peerMessagingDisabled","isWriter","isReader","readingBlocked","unconformed","unconfirmed","messagesScroller","handleScrollEvent","scrollTop","scrollHeight","viewportHeight","isNewGroupTopicName","leave","readTimerHandler","onData","handleNewMessage","onAllMessagesReceived","handleAllMessagesReceived","onInfo","handleInfoReceipt","handleDescChange","handleSubsUpdated","onPres","isSubscribed","ready","newTopic","newTopicParams","_topicName","getQuery","withLaterDesc","withLaterSub","withLaterData","withLaterDel","setQuery","subscribe","onNewTopicCreated","queuedMessages","pub","_sending","publishMessage","blankState","getDerivedStateFromProps","not_found","oldTopicName","oldTopic","finally","msgHasMoreMessages","getMessagesPage","isNewMessage","msgStatus","from","noteRead","what","clearTimeout","keyPressTimer","KEYPRESS_DELAY","forceUpdate","sendMessage","attachJSON","parse","searchParams","set","search","messageSpecificMenuItems","onNewChat","noteKeyPress","cannot_initiate_upload","uploadCompletionPromise","upload","file_attachment_too_large","limit","insertImage","appendLineBreak","append","init","component","component2","handleClosePreview","sendImageAttachment","sendFileAttachment","messageNodes","previousFrom","chatBoxClass","nextFrom","isReply","deliveryStatus","userDesc","hi","ts","_uploader","handleShowContextMenuMessage","handleImagePostview","handleFormResponse","lastSeen","cont","getMeTopic","getContact","seen","when","onHideMessagesView","handleScrollReference","handleEnablePeer","handleNewChatAcceptance","sendKeyPress","MenuContacts","onNewTopic","onSettings","MenuStart","onSignUp","SideNavbar","archived_contacts_title","ContactsView","unreadThreads","archivedCount","chatList","arch","touched","onShowArchive","handleAction","LocalStorageUtil","localStorage","setItem","JSON","stringify","getItem","oldVal","getObject","setObject","removeItem","CreateAccountView","login","password","email","saveToken","errorCleared","onCreateAccount","submitClasses","login_prompt","handleLoginChange","password_prompt","handlePasswordChange","full_name_prompt","handleFnChange","email_prompt","handleEmailChange","handleToggleSaveToken","stay_logged_in","EditAccountView","me","onCredsUpdated","tnCredsUpdated","tnNewTags","previousOnTags","creds","credentials","onUpdateAccount","pwd","onToggleMessageSounds","onTogglePushNotifications","newCred","addCredInvalid","addCredActive","handleCredEntered","method","onCredAdd","onUpdateTags","cred","meth","done","onCredConfirm","onCredDelete","Fragment","full_name_placeholder","password_unchanged","handlePasswordUpdate","messageSounds","handleCheckboxClick","desktopAlertsEnabled","desktopAlerts","title_tag_manager","handleCredChange","handleCredKeyDown","onLogout","getCredentials","LoginView","onLogin","autoCorrect","autoCapitalize","hostName","invalid_id","NewTopicById","groupId","NewTopicGroup","handlePrivateChange","handleTagsChanged","SearchContacts","edited","onSearchContacts","handleSearch","handleClear","search_placeholder","handleSearchChange","search_for_contacts","search_no_results","NewTopicView","navigateTo","addUrlParam","tabSelected","searchQuery","isNullValue","removeUrlParam","onCreateTopic","priv","no_contacts_placeholder","handleTabClick","handleNewGroupSubmit","handleGroupByID","handleSearchContacts","searchResults","PasswordResetView","token","scheme","onReset","onRequest","reset","HostSelector","changed","onServerAddressChange","hostOptions","list","handleHostNameChange","SettingsView","onUpdate","transport","def","ws","lp","transportOptions","handleTransportSelected","handleServerAddressChange","phone","ValidationView","code","credMethod","numbers_only","credCode","SidepanelView","onLoginRequest","view","errorAction","errorActionText","loadSpinnerVisible","loginDisabled","handleLoginRequested","onGlobalSettings","onUpdateAccountTags","onValidateCredentials","onPasswordResetRequest","onResetPassword","isSecureConnection","protocol","POP_SOUND","Audio","update_available","reconnect_countdown","reconnect_now","TinodeWeb","enableLogging","foundContacts","merged","updated","host","settings","hostname","port","messageSoundsOff","FIREBASE_INIT","firebaseToken","sidePanelSelected","sidePanelTitle","sidePanelAvatar","liveConnection","onLine","topicSelectedOnline","topicSelectedAcs","innerWidth","showInfoPanel","mobilePanel","contextMenuVisible","contextMenuBounds","contextMenuClickAt","contextMenuParams","contextMenuItems","alertVisible","alertParams","handleResize","handleOnline","handleHashRoute","handleVisibilityEvent","documentElement","clientWidth","clientHeight","tnSetup","onConnect","handleConnected","onDisconnect","handleDisconnect","onAutoreconnectIteration","handleAutoreconnectIteration","fbPush","messaging","usePublicVapidKey","messagingVapidKey","serviceWorker","register","reg","checkForAppUpdate","useServiceWorker","initDesktopAlerts","setDeviceToken","togglePushToken","handleError","parsedNav","expires","setAuthToken","connect","tab","readTimer","readTimerCallback","mobile","formatHTMLMessage","onupdatefound","installingWorker","installing","onstatechange","controller","newTopicTabSelected","callback","handleAppVisibility","hidden","isConnected","doLogin","getServerInfo","ver","sec","prom","clearInterval","reconnectCountdown","setInterval","seconds","timeLeft","reconnect","isAuthenticated","credential","promise","getAuthToken","loginBasic","loginToken","handleCredentialsRequest","handleLoginSuccessful","tnMeMetaDesc","onContactUpdate","tnMeContactUpdate","tnMeSubsUpdated","getCurrentUserID","withDesc","withCred","disconnect","setUrlSidePanel","resetContactList","archived","isArchived","play","handleTopicSelected","prepareSearchableContacts","receivedTimer","noteRecv","fnd","getFndTopic","tnFndSubsUpdated","withSub","setMeta","unused_index","setUrlTopic","Promise","resolve","am","updateWant","login_","password_","public_","cred_","tags_","createAccountBasic","updateAccountBasic","getCurrentLogin","onTokenRefresh","requestPushToken","onMessage","payload","enabled","updateObject","requestPermission","deleteToken","getToken","refreshedToken","delCredential","peerName","newGroupTopicName","oldName","newName","permissions","updateGiven","getBlankState","publish","TOPIC_SYS","defaultTopicContextMenu","blocked","self_blocked","subscribed","handleShowInfoView","invite","requestResetAuthSecret","newPassword","str","btoa","atob","base64ReEncode","handleHideContextMenu","handleShowAlert","handleContextMenuAction","handleGlobalSettings","handleNewAccount","handleSettings","handleLoginRequest","handleNewAccountRequest","handleUpdateAccountRequest","handleUpdateAccountTagsRequest","handleToggleMessageSounds","handleCredAdd","handleCredDelete","handleCredConfirm","handleNewTopicRequest","handleNewTopic","handleLogout","handleSidepanelCancel","handleValidateCredentialsRequest","handlePasswordResetRequest","handleResetPassword","handleShowArchive","tnInitFind","handleShowContextMenu","handleHideMessagesView","tnData","handleNewTopicCreated","handleReadTimer","handleChangePermissions","handleNewChatInvitation","handleSendMessage","handleTopicUpdateRequest","handleHideInfoView","handleDeleteMessagesRequest","handleLeaveUnsubRequest","handleBlockTopicRequest","handleReportTopic","onAddMember","handleManageGroupMembers","hl","languages","baseLanguage","allMessages","en","render","textComponent"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,QAIjBlC,EAAoBA,EAAoBmC,EAAI,G,gBClFrDhC,EAAOD,QAAUkC,O,cCAjBjC,EAAOD,QAAUmC,W,cCAjBlC,EAAOD,QAAUoC,Q,cCAjBnC,EAAOD,QAAUqC,U,q4gBCAjBpC,EAAOD,QAAUsC,U,cCAjBrC,EAAOD,QAAUsC,SAAoB,W,m6BCGhBC,G,qOAAcL,IAAMM,e,kDAErC,OAAOC,KAAKC,MAAMC,QAChB,yBAAKC,UAAU,mBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,SAASH,KAAKC,MAAMG,OACnC,yBAAKD,UAAU,WAAWH,KAAKC,MAAMI,SACrC,yBAAKF,UAAU,kBACZH,KAAKC,MAAMK,SACV,4BAAQH,UAAU,UAAUI,QAASP,KAAKC,MAAMK,UAC7CN,KAAKC,MAAMO,QAAU,kBAAC,mBAAD,CAAkBC,GAAG,mBAG7C,KAEF,4BAAQN,UAAU,OAAOI,QAASP,KAAKC,MAAMS,WAC1CV,KAAKC,MAAMU,SAAW,kBAAC,mBAAD,CAAkBF,GAAG,kBAMtD,S,yKCvBG,ICCMG,EAAW,uBAMXC,EAAc,CAACC,OAAQ,gBAAiBC,MAAO,kBAG/CC,EAAeH,EAAYC,OAgB3BG,EAA0B,QA6B1BC,EAA6B,O,gLCrDrBC,G,0CACCC,GAElB,IAAIC,EAAQD,EAAKE,MAAM,IAAK,GACxBC,EAAS,GACTC,EAAO,GAYX,OAXIH,EAAM,KACRG,EAAOH,EAAM,GAAGI,OAAO,GAAGH,MAAM,MAE9BD,EAAM,IACRA,EAAM,GAAGC,MAAM,KAAKI,QAAQ,SAASC,GACnC,IAAIC,EAAOD,EAAKL,MAAM,KAClBM,EAAK,KACPL,EAAOM,mBAAmBD,EAAK,KAAOC,mBAAmBD,EAAK,OAI7D,CAACJ,KAAMA,EAAMD,OAAQA,K,iCAGZO,GAChBC,OAAOC,SAASZ,KAAOU,I,qCAGHN,EAAMD,GAC1B,IAAIO,EAAMN,EAAKS,KAAK,KAChBC,EAAO,GACX,IAAK,IAAIlD,KAAOuC,EACVA,EAAOjC,eAAeN,IACxBkD,EAAKC,KAAKnD,EAAM,IAAMuC,EAAOvC,IAMjC,OAHkB,EAAdkD,EAAKE,SACPN,GAAO,IAAMI,EAAKD,KAAK,MAElBH,I,kCAGUV,EAAMpC,EAAKN,GAC5B,IAAI2D,EAASrC,KAAKsC,aAAalB,GAE/B,OADAiB,EAAOd,OAAOvC,GAAON,EACdsB,KAAKuC,eAAeF,EAAOb,KAAMa,EAAOd,U,qCAG3BH,EAAMpC,GAC1B,IAAIqD,EAASrC,KAAKsC,aAAalB,GAE/B,cADOiB,EAAOd,OAAOvC,GACdgB,KAAKuC,eAAeF,EAAOb,KAAMa,EAAOd,U,sCAG1BH,EAAMoB,GAC3B,IAAIH,EAASrC,KAAKsC,aAAalB,GAE/B,OADAiB,EAAOb,KAAK,GAAKgB,EACVxC,KAAKuC,eAAeF,EAAOb,KAAMa,EAAOd,U,kCAG9BH,EAAMqB,GACvB,IAAIJ,EAASrC,KAAKsC,aAAalB,GAI/B,OAHAiB,EAAOb,KAAK,GAAKiB,SAEVJ,EAAOd,OAAOmB,KACd1C,KAAKuC,eAAeF,EAAOb,KAAMa,EAAOd,Y,63BCzDnD,I,IAAMoB,EAAWC,yBAAe,CAC9BF,KAAM,CAAF,2CAKJG,eAAgB,CAAF,+DAKdC,cAAe,CAAF,sEAKb,uDAKAC,eAAgB,CAAF,+DAKdC,WAAY,CAAF,kDAKVC,KAAM,CAAF,2CAKJC,OAAQ,CAAF,+CAKNC,aAAc,CAAF,qDAKZC,qBAAsB,CAAF,+FAKpBC,QAAS,CAAF,iDAMPC,MAAO,CAAF,6CAKLC,oBAAqB,CAAF,6FAKnBC,cAAe,CAAF,sDAKbC,QAAS,CAAF,yDAOHC,G,qOAAoBjE,IAAMkE,W,6DA2L5BC,SAASC,iBAAiB,YAAa7D,KAAK8D,iBAAiB,GAC7DF,SAASC,iBAAiB,QAAS7D,KAAK+D,iBAAiB,K,6CAIzDH,SAASI,oBAAoB,YAAahE,KAAK8D,iBAAiB,GAChEF,SAASI,oBAAoB,QAAShE,KAAK+D,iBAAiB,K,sCAG9CE,GACVrE,IAASsE,YAAYlE,MAAMmE,SAASF,EAAEG,UAG1CH,EAAEI,iBACFJ,EAAEK,kBACFtE,KAAKC,MAAMsE,U,sCAGGN,GACI,KAAdA,EAAEO,SACJxE,KAAKC,MAAMsE,S,kCAIHN,GACVA,EAAEI,iBACFJ,EAAEK,kBACFtE,KAAKC,MAAMsE,OACX,IAAI3C,EAAO5B,KAAKC,MAAMwE,MAAMR,EAAES,cAAcC,QAAQlE,IACjC,iBAARmB,IACTA,EAAO5B,KAAK4E,UAAUhD,IAGnBA,EAGH5B,KAAKC,MAAM4E,SACTjD,EAAKnB,GACLmB,EAAKkD,QAAQ9E,KAAKC,MAAMsB,OAAQvB,KAAKC,MAAM8E,SAC3C/E,KAAKC,MAAMsB,QALbyD,QAAQC,IAAI,uBAAwBhB,EAAES,cAAcC,QAAQlE,M,qCAWjDyE,EAAKC,EAAM5D,EAAQ6D,GAChC,IAAM3C,EAAQzC,KAAKC,MAAMoF,OAAOC,SAAS/D,EAAOgE,WAChD,GAAK9C,GASL,GAAKyC,IAAOzC,EAAM+C,WAAWjE,EAAOkE,KAQpC,OAJgBP,EACdzC,EAAMiD,eAAeP,GACrB1C,EAAMkD,gBAAgB,CAACpE,EAAOkE,KAAMN,IAEvBS,MAAM,SAACC,GAChBT,GACFA,EAAaS,EAAIC,QAAS,cAlB5Bd,QAAQC,IAAI,oBAAqB1D,EAAOgE,a,mCAwB/BhE,EAAQ6D,GACnB,IAAM3C,EAAQzC,KAAKC,MAAMoF,OAAOC,SAAS/D,EAAOgE,WAEhD,GAAK9C,GAAUA,EAAMsD,aAAaxE,EAAOkE,KAAzC,CAGA,IAAMO,EAAMvD,EAAMwD,cAAc1E,EAAOlB,SAAS,GAChD,OAAOoC,EAAMyD,aAAaF,GAAKJ,MAAM,SAACC,GAChCT,GACFA,EAAaS,EAAIC,QAAS,Y,4CAMVlH,EAAM2C,EAAQ6D,GAClC,IAAM3C,EAAQzC,KAAKC,MAAMoF,OAAOC,SAAS/D,EAAOgE,WAChD,GAAK9C,EAAL,CAKA,IAAI0D,EAAS1D,EAAM2D,WAAW7E,EAAO8E,KAAMzH,GAM3C,OALIwG,IACFe,EAASA,EAAOP,MAAM,SAACC,GACrBT,EAAaS,EAAIC,QAAS,UAGvBK,EAVLnB,QAAQC,IAAI,kBAAmB1D,EAAOgE,a,+BAajC,WACHe,EAAQ,EACRC,EAAO,GACXvG,KAAKC,MAAMwE,MAAM+B,IAAI,SAAC5E,GACD,iBAARA,IACTA,EAAO,EAAKgD,UAAUhD,IAEpBA,GAAQA,EAAKxB,OACfmG,EAAKpE,KACW,KAAdP,EAAKxB,MACH,wBAAID,UAAU,YAAYnB,IAAKsH,IAE/B,wBAAI/F,QAAS,EAAKkG,YAAaC,UAASJ,EAAOtH,IAAKsH,GAAQ1E,EAAKxB,QAGvEkG,MAIF,IACMK,EFtWc,IEsWM,GAAoB,IAAdJ,EAAKnE,QAQ/BwE,EAAW,CACfC,MARY7G,KAAKC,MAAM6G,OAAOC,MAAQ/G,KAAKC,MAAM+G,QAAQC,EAF7C,IAGTjH,KAAKC,MAAM+G,QAAQC,EAAIjH,KAAKC,MAAM6G,OAAOD,KAHhC,IAIT7G,KAAKC,MAAM+G,QAAQC,EAAIjH,KAAKC,MAAM6G,OAAOD,MAM/B,KACbK,KANWlH,KAAKC,MAAM6G,OAAOK,OAASnH,KAAKC,MAAM+G,QAAQI,EAAIT,EAC1D3G,KAAKC,MAAM+G,QAAQI,EAAIpH,KAAKC,MAAM6G,OAAOI,IAAMP,EAC/C3G,KAAKC,MAAM+G,QAAQI,EAAIpH,KAAKC,MAAM6G,OAAOI,KAIjC,MAGb,OACE,wBAAI/G,UAAU,OAAOkH,MAAOT,GACzBL,O,aApUP,WAAYtG,GAAO,M,iGAAA,S,EACjB,K,EAAA,eAAMA,GAAN,G,gDADiB,IAGVqH,EAAiBrH,EAAMsH,KAAvBD,cAHU,OAKjB,EAAKxD,gBAAkB,EAAKA,gBAAgB7E,KAArB,MACvB,EAAK8E,gBAAkB,EAAKA,gBAAgB9E,KAArB,MACvB,EAAKwH,YAAc,EAAKA,YAAYxH,KAAjB,MAGnB,EAAK2F,UAAY,CACf,WAAc,CACZnE,GAAI,aACJL,MAAOkH,EAAc3E,EAASD,MAC9BoC,QAAS,MAEX,eAAkB,CAChBrE,GAAI,iBACJL,MAAOkH,EAAc3E,EAASE,gBAC9BiC,QAAS,SAACvD,EAAQ6D,GAChB,OAAOnF,EAAMuH,YACXF,EAAc,CAAC7G,GAAI,6BACnB6G,EAAc,CAAC7G,GAAI,2BAClB,WAAQ,EAAKgH,gBAAe,GAAM,EAAOlG,EAAQ6D,IAClD,MACA,EACA,QAIN,oBAAuB,CACrB3E,GAAI,sBACJL,MAAOkH,EAAc3E,EAASG,eAC9BgC,QAAS,SAACvD,EAAQ6D,GAChB,OAAOnF,EAAMuH,YACXF,EAAc,CAAC7G,GAAI,qCACnB6G,EAAc,CAAC7G,GAAI,4BAClB,WAAQ,OAAO,EAAKgH,gBAAe,GAAM,EAAMlG,EAAQ6D,IACxD,MACA,EACA,QAIN,eAAkB,CAChB3E,GAAI,iBACJL,MAAOkH,EAAc3E,EAAS+E,QAC9B5C,QAAS,SAACvD,EAAQ6D,GAChB,OAAO,EAAKqC,gBAAe,GAAO,EAAOlG,EAAQ6D,KAGrD,oBAAuB,CACrB3E,GAAI,sBACJL,MAAOkH,EAAc3E,EAASI,gBAC9B+B,QAAS,SAACvD,EAAQ6D,GAChB,OAAO,EAAKqC,gBAAe,GAAO,EAAMlG,EAAQ6D,KAGpD,qBAAwB,CACtB3E,GAAI,uBACJL,MAAOkH,EAAc3E,EAASK,YAC9B8B,QAAS,SAACvD,EAAQ6D,GAChB,OAAO,EAAKuC,aAAapG,EAAQ6D,KAGrC,aAAgB,CACd3E,GAAI,eACJL,MAAOkH,EAAc3E,EAASO,QAC9B4B,QAAS,EAAK8C,sBAAsB3I,KAA3B,KAAsC,OAEjD,WAAc,CACZwB,GAAI,aACJL,MAAOkH,EAAc3E,EAASM,MAC9B6B,QAAS,EAAK8C,sBAAsB3I,KAA3B,KAAsC,OAEjD,cAAiB,CACfwB,GAAI,gBACJL,MAAOkH,EAAc3E,EAASU,SAC9ByB,QAAS,EAAK8C,sBAAsB3I,KAA3B,KAAsC,QAEjD,YAAe,CACbwB,GAAI,cACJL,MAAOkH,EAAc3E,EAASW,OAC9BwB,QAAS,SAACvD,EAAQ6D,GAChB,OAAOnF,EAAMuH,YACXF,EAAc,CAAC7G,GAAI,oBACnB6G,EAAc3E,EAASY,qBACtB,WACC,OAAO,EAAKqE,sBAAsB,MAAOrG,EAAQ6D,GAAcyC,KAAK,SAACC,GAEnE,OADA,EAAK7H,MAAM8H,eAAexG,EAAOgE,WAC1BuC,KAGX,MACA,EACA,QAIN,aAAgB,CACdrH,GAAI,eACJL,MAAOkH,EAAc3E,EAASQ,cAC9B2B,QAAS,SAACvD,EAAQ6D,GAChB,OAAOnF,EAAMuH,YACXF,EAAc,CAAC7G,GAAI,2BACnB6G,EAAc3E,EAASS,sBACtB,WACC,IAAMX,EAAQ,EAAKxC,MAAMoF,OAAOC,SAAS/D,EAAOgE,WAChD,GAAK9C,EAIL,OAAOA,EAAMuF,WAAWpC,MAAM,SAACC,GACzBT,GACFA,EAAaS,EAAIC,QAAS,SAL5Bd,QAAQC,IAAI,oBAAqB1D,EAAOgE,YAS5C,MACA,EACA,QAIN,cAAiB,CACf9E,GAAI,gBACJL,MAAOkH,EAAc3E,EAASc,SAC9BqB,QAAS,SAACvD,EAAQ6D,GAChB,IAAM3C,EAAQ,EAAKxC,MAAMoF,OAAOC,SAAS/D,EAAOgE,WAChD,GAAK9C,EAIL,OAAOA,EAAMgB,SAAQ,GAAMmC,MAAM,SAACC,GAC5BT,GACFA,EAAaS,EAAIC,QAAS,SAL5Bd,QAAQC,IAAI,oBAAqB1D,EAAOgE,aAW9C,YAAe,CACb9E,GAAI,cACJL,MAAOkH,EAAc,CAAC7G,GAAI,+BAC1BqE,QAAS,MAEX,cAAiB,CACfrE,GAAI,gBACJL,MAAOkH,EAAc3E,EAASa,eAC9BsB,QAAS,SAACvD,EAAQ6D,GAChB,IAAM3C,EAAQ,EAAKxC,MAAMoF,OAAOC,SAAS/D,EAAOgE,WAChD,GAAK9C,GAAUlB,EAAO8E,KAItB,OAAO5D,EAAMwF,gBAAgB1G,EAAO8E,MAAMT,MAAM,SAACC,GAC3CT,GACFA,EAAaS,EAAIC,QAAS,SAL5Bd,QAAQC,IAAI,6BAA+B1D,EAAOgE,UAAY,OAAShE,EAAO8E,KAAO,OAU3F,YAAe,CACb5F,GAAI,cACJL,MAAOkH,EAAc3E,EAASM,MAC9B6B,QAAS,EAAK8C,sBAAsB3I,KAA3B,KAAsC,OAEjD,cAAiB,CACfwB,GAAI,gBACJL,MAAOkH,EAAc3E,EAASO,QAC9B4B,QAAS,EAAK8C,sBAAsB3I,KAA3B,KAAsC,OAEjD,aAAgB,CACdwB,GAAI,eACJL,MAAOkH,EAAc3E,EAASW,OAC9BwB,QAAS,EAAK8C,sBAAsB3I,KAA3B,KAAsC,OAEjD,eAAkB,CAChBwB,GAAI,iBACJL,MAAOkH,EAAc3E,EAASU,SAC9ByB,QAAS,EAAK8C,sBAAsB3I,KAA3B,KAAsC,QApLlC,EA0UNiJ,2BAAWxE,GCjanB,SAASyE,EAAgBN,EAAMO,GACpCA,EAASA,GAAUrG,OAAOsG,UAAUC,cAAgBvG,OAAOsG,UAAUE,SACrE,IAAMC,EAAM,IAAIC,KAChB,OAAIZ,EAAKa,eAAiBF,EAAIE,cACxBb,EAAKc,YAAcH,EAAIG,YAAcd,EAAKe,WAAaJ,EAAII,UACvDf,EAAKgB,mBAAmBT,EAAQ,CAACU,QAAQ,EAAOC,KAAM,UAAWC,OAAQ,YAEzEnB,EAAKoB,mBAAmBb,EAC5B,CAACU,QAAQ,EAAOI,MAAO,QAASC,IAAK,UAAWJ,KAAM,UAAWC,OAAQ,YAGxEnB,EAAKoB,mBAAmBb,EAC7B,CAACU,QAAQ,EAAOM,KAAM,UAAWF,MAAO,QAASC,IAAK,UAAWJ,KAAM,UAAWC,OAAQ,YAYvF,SAASK,EAAiBC,GAC/B,IAAKA,GAAkB,GAATA,EACZ,MAAO,UAGT,IAAMC,EAAQ,CAAC,QAAS,KAAM,KAAM,KAAM,KAAM,MAC1CC,EAASC,KAAKC,IAAwC,EAApCD,KAAKE,MAAMF,KAAKG,KAAKN,GAAS,IAASC,EAAMnH,OAAO,GACtEkE,EAAQgD,EAAQG,KAAKI,IAAI,KAAML,GAC/BM,EAAiB,EAATN,EAAclD,EAAQ,EAAI,EAAKA,EAAQ,GAAK,EAAI,EAAM,EACpE,OAAOA,EAAMyD,QAAQD,GAAS,IAAMP,EAAMC,G,+yBC5BvBQ,G,qOAAmBvK,IAAMM,e,kDAE1C,IAAIkK,EACJ,IAA0B,IAAtBjK,KAAKC,MAAMgK,OAAiB,CAC9B,IAAMC,EAAiD,OAAtCvK,IAAOwK,UAAUnK,KAAKC,MAAMwC,OACvC2H,GAAaF,EAAU,cAAgB,cACxCT,KAAKY,ID2BT,SAAoB3L,GACzB,IAAI0C,EAAO,EACX1C,EAAQ,GAAKA,EACb,IAAK,IAAIjB,EAAI,EAAGA,EAAIiB,EAAM0D,OAAQ3E,IAChC2D,GAASA,GAAQ,GAAKA,EAAQ1C,EAAM4L,WAAW7M,GAC/C2D,GAAcA,EAEhB,OAAOA,EClCWmJ,CAAWvK,KAAKC,MAAMwC,QAAU,GAC9C,GAAIzC,KAAKC,MAAMwC,OAASzC,KAAKC,MAAMG,OAASJ,KAAKC,MAAMG,MAAMoK,OAAQ,CACnE,IAAMC,EAASzK,KAAKC,MAAMG,MAAMoK,OAAOE,OAAO,GACxCvK,EAAY,cAAgBiK,EAClCH,EAAU,yBAAK9J,UAAWA,GAAW,6BAAMsK,QACtC,CACL,IAAMtK,EAAY,kBAAoBiK,EACtCH,EAASC,EACP,uBAAG/J,UAAWA,GAAd,SAAqC,uBAAGA,UAAWA,GAAd,gBAIzC8J,EAFSjK,KAAKC,MAAMgK,OAEX,yBAAK9J,UAAU,SAASwK,IAAI,SAASC,IAAK5K,KAAKC,MAAMgK,OAC5DlF,QAAS,SAACd,GAAKA,EAAEG,OAAOyG,QAAU,KAAM5G,EAAEG,OAAOwG,IAAI,2BAE9C,KAEX,OAAOX,M,yKCzBJ,IAAMa,GAA0B,CAAC,aAAc,YAAa,YAAa,YAAa,iBAChFC,GAA0B,CAAC,MAAc,MAAa,MAAa,MAAa,OAGtF,SAASC,GAAaC,GAC3B,OAAQA,GAASA,EAAMC,MAAQD,EAAME,KACnC,cAAgBF,EAAMC,KAAO,WAAaD,EAAME,KAAO,KAMpD,SAASC,GAAaC,EAAOC,EAAQC,EAAUC,EAAWC,GAO/D,GAJAH,GAAkB,EAClBC,GAAsB,EACtBC,GAAwB,GAHxBH,GAAgB,IAKH,GAAKC,GAAU,GAAKC,GAAY,GAAKC,GAAa,EAC7D,OAAO,KAGLC,IACFF,EAAWC,EAAY/B,KAAKC,IAAI6B,EAAUC,IAG5C,IAAIE,EAAQjC,KAAKC,IACfD,KAAKC,IAAI2B,EAAOE,GAAYF,EAC5B5B,KAAKC,IAAI4B,EAAQE,GAAaF,GAG5BK,EAAO,CACTC,SAAWP,EAAQK,EAAS,EAC5BG,UAAYP,EAASI,EAAS,GAchC,OAXID,GAEFE,EAAKC,SAAWD,EAAKE,UAAYpC,KAAKC,IAAIiC,EAAKC,SAAUD,EAAKE,WAC9DF,EAAKG,SAAWH,EAAKI,UAAYtC,KAAKC,IAAI2B,EAAOC,GACjDK,EAAKK,SAAYX,EAAQM,EAAKG,UAAY,EAAK,EAC/CH,EAAKM,SAAYX,EAASK,EAAKG,UAAY,EAAK,IAEhDH,EAAKK,QAAUL,EAAKM,QAAU,EAC9BN,EAAKG,SAAWT,EAChBM,EAAKI,UAAYT,GAEZK,EAIF,SAASO,GAAgBC,EAAOC,GACrC,IAAIC,EAAMvB,GAAwBwB,QAAQF,GACtCG,EAAMxB,GAAgBsB,GAEtBG,EAAKL,EAAMM,YAAY,KAI3B,OAHU,GAAND,IACFL,EAAQA,EAAMO,UAAU,EAAGF,IAEtBL,EAAQ,IAAMI,EAKhB,SAASI,GAAwBC,EAAMvB,EAAOC,EAAQG,EAAaoB,EAAW9H,GACnF,IAAI+H,EAAM,IAAIC,MACdD,EAAIE,YAAc,YAClBF,EAAIjC,QAAU,SAAShF,GACrBd,EAAQ,8BAEV+H,EAAIG,OAAS,WACX,IAAIC,EAAM9B,GAAapL,KAAKqL,MAAOrL,KAAKsL,OAAQD,EAAOC,EAAQG,GAC/D,GAAKyB,EAAL,CAIA,IAAIC,EAASvJ,SAASwJ,cAAc,UACpCD,EAAO9B,MAAQ6B,EAAItB,SACnBuB,EAAO7B,OAAS4B,EAAIrB,UACpB,IAAIwB,EAAMF,EAAOG,WAAW,MAC5BD,EAAIE,uBAAwB,EAC5BF,EAAIG,UAAUxN,KAAMkN,EAAIlB,QAASkB,EAAIjB,QAASiB,EAAIpB,SAAUoB,EAAInB,UAC9D,EAAG,EAAGmB,EAAItB,SAAUsB,EAAIrB,WAE1B,IAAIO,EAAQpM,KAAKqL,OAAS6B,EAAItB,UAC5B5L,KAAKsL,QAAU4B,EAAIrB,WACnBf,GAAwBwB,QAAQM,EAAK1B,MAAQ,EAAK,aAAe0B,EAAK1B,KACpEuC,EAAYN,EAAOO,UAAUtB,GAIjC,GADAA,EAAOuB,GAFKF,EAAUnM,MAAM,KAEH,IACzB,CAKA,IAAIsM,EAAU,IAId,GAHIC,GAAiBJ,EAAUrL,QAAUlB,IACvCkL,EAAO,cAEG,cAARA,EAEF,KAAOyB,GAAiBJ,EAAUrL,QAAUlB,GAAwC,IAAV0M,GACxEH,EAAYN,EAAOO,UAAUtB,EAAMwB,GACnCA,GAAW,IAGXC,GAAiBJ,EAAUrL,QAAUlB,EACvC6D,EAAQ,kBAAoBsE,iBAAiBwE,GAAiBJ,EAAUrL,SACtE,gBAAmBiH,iBAAiBnI,GAA8B,UAAW,QAGjFiM,EAAS,KACTN,EAAUY,EAAUnM,MAAM,KAAK,GAAI8K,EAAMc,EAAItB,SAAUsB,EAAIrB,UAAWK,GAAgBU,EAAK5O,KAAMoO,UArB/FrH,EAAQ,iCAnBRA,EAAQ,kBA0CZ+H,EAAIlC,IAAMkD,IAAIC,gBAAgBnB,GAIzB,SAASoB,GAAkBpB,EAAMC,EAAW9H,GACjD,IAAIkJ,EAAS,IAAIC,WACjBD,EAAOpK,iBAAiB,OAAQ,WAC9B,IAAIxC,EAAQ4M,EAAO9H,OAAO7E,MAAM,KAC5B8K,EAAOuB,GAAYtM,EAAM,IAC7B,GAAK+K,EAAL,CAMA,IAAIU,EAAM,IAAIC,MACdD,EAAIE,YAAc,YAClBF,EAAIG,OAAS,WACXJ,EAAUxL,EAAM,GAAI+K,EAAMpM,KAAKqL,MAAOrL,KAAKsL,OAAQY,GAAgBU,EAAK5O,KAAMoO,KAEhFU,EAAIjC,QAAU,SAAShF,GACrBd,EAAQ,gCAEV+H,EAAIlC,IAAMkD,IAAIC,gBAAgBnB,QAb5B7H,EAAQ,kCAcT,GACHkJ,EAAOE,cAAcvB,GAGhB,SAASwB,GAAaxB,EAAMC,GACjC,IAAIoB,EAAS,IAAIC,WACjBD,EAAOpK,iBAAiB,OAAQ,WAC9BgJ,EAAUD,EAAK1B,KAAM+C,EAAO9H,OAAO7E,MAAM,KAAK,GAAIsL,EAAK5O,QAEzDiQ,EAAOE,cAAcvB,GAmChB,SAASe,GAAYU,GAC1B,IAAIjC,EAAO,qCAAqCkC,KAAKD,GACrD,OAAQjC,GAAsB,EAAdA,EAAKhK,OAAcgK,EAAK,GAAK,KAWxC,SAASyB,GAAiB3O,GAC/B,OAA2B,EAApBuK,KAAKE,MAAMzK,EAAI,G,qvBCnMHqP,I,uOAAqB9O,IAAMkE,W,+DAW3B6K,GACbxO,KAAKC,MAAMgK,QAAUuE,EAAUvE,QACjCjK,KAAKyO,SAAS,CAACC,QAAS1O,KAAKC,MAAMgK,W,uCAItBhG,GAAG,WAClB0I,GAAwB1I,EAAEG,OAAOuK,MAAM,GNkBhB,SMlB8C,EAEnE,SAACC,EAAYxC,GACX,IAAIyC,EAAK7D,GAAa,CAACG,KAAMyD,EAAY1D,KAAMkB,IAC/C,EAAKqC,SAAS,CAACC,QAASG,IACxB,EAAK5O,MAAM6O,eAAeD,IAG5B,SAAChJ,GACC,EAAK5F,MAAM8E,QAAQc,EAAK,SAG5B5B,EAAEG,OAAO1F,MAAQ,K,+BAGV,WAGHqQ,EAAS,sBAAwBtF,KAAKuF,SAAW,IAAIvN,OAAO,GAChE,OACE,yBAAKtB,UAAU,iBACZH,KAAKC,MAAMgP,WAAajP,KAAKkP,MAAMR,QAClC,KACA,uBAAGS,KAAK,IAAIhP,UAAU,eAAeI,QAAS,SAAC0D,GAAOA,EAAEI,iBAAkB,EAAKpE,MAAM6O,eAAe,QAClG,uBAAG3O,UAAU,kBAAb,UAEHH,KAAKkP,MAAMR,QACV,yBAAK9D,IAAK5K,KAAKkP,MAAMR,QAASvO,UAAU,YACxCH,KAAKC,MAAMgP,UAAYjP,KAAKC,MAAMmP,IAChC,yBAAKjP,UAAU,cACb,kBAAC,EAAD,CACE8J,QAAQ,EACRxH,MAAOzC,KAAKC,MAAMmP,IAClBhP,MAAOJ,KAAKC,MAAMG,SAGtB,yBAAKD,UAAU,SNlBA,IMkBf,INlBe,KMmBlBH,KAAKC,MAAMgP,SAAW,KACrB,2BAAO/D,KAAK,OAAOzK,GAAIsO,EAAQ5O,UAAU,mBACvCkP,OAAO,UAAUC,SAAUtP,KAAKuP,mBACnCvP,KAAKC,MAAMgP,SAAW,KACvB,2BAAOO,QAAST,EAAQ5O,UAAU,SAChC,uBAAGA,UAAU,kBAAb,qB,kBA3DR,YAAYF,GAAO,M,IAAA,O,4FAAA,U,EACjB,U,EAAA,iBAAMA,K,gDAEDiP,MAAQ,CACXR,QAASzO,EAAMgK,QAGjB,EAAKsF,iBAAmB,EAAKA,iBAAiBtQ,KAAtB,OAPP,E,qvBCLAwQ,I,uOAAiBhQ,IAAMM,e,2DAQxCC,KAAKC,MAAMqP,SAAStP,KAAKC,MAAMjC,MAAOgC,KAAKC,MAAMyP,W,+BAIjD,OACE1P,KAAKC,MAAMqP,SACTtP,KAAKC,MAAMyP,QACT,uBAAGvP,UAAU,gCAAgCI,QAASP,KAAK2P,cAA3D,aACA,uBAAGxP,UAAU,gCAAgCI,QAASP,KAAK2P,cAA3D,2BAEA3P,KAAKC,MAAMyP,QACT,uBAAGvP,UAAU,kBAAb,aACA,uBAAGA,UAAU,kBAAb,+B,kBAnBV,YAAYF,GAAO,M,IAAA,O,4FAAA,U,EACjB,U,EAAA,iBAAMA,K,gDAED0P,aAAe,EAAKA,aAAa1Q,KAAlB,OAHH,E,gzBCFrB,I,MAAM2Q,GAAe,CAAC,MAAS,oBAAqB,OAAU,SAGzCC,I,uOAAsBpQ,IAAMM,e,qDAE3C,IAAI+P,EAAS,KACb,OAAI9P,KAAKC,MAAM6P,QAAqC,EAA3B9P,KAAKC,MAAM6P,OAAO1N,QACzC0N,EAAS,GACT9P,KAAKC,MAAM6P,OAAOtJ,IAAI,SAASuJ,GAC7B,GAAIA,EAAEC,KACJF,EAAO3N,KAAK,uBAAGhC,UAAU,0BAA0BnB,IAAK+Q,EAAE/Q,KAAO+Q,EAAEC,MAAOJ,GAAaG,EAAEC,YACpF,CACL,IAAM3I,EAAQ,SAAW0I,EAAEE,MAAQ,IAAMF,EAAEE,MAAQ,IACnDH,EAAO3N,KAAK,0BAAMhC,UAAWkH,EAAOrI,IAAK+Q,EAAE/Q,KAAO+Q,EAAE/R,MAAO+R,EAAE/R,UAG1D,oCAAG8R,IAEL,S,6+BCjBQI,I,uOAAoBzQ,IAAMM,e,qDAE3C,OAA2B,EAAnBC,KAAKC,MAAMqG,MACjB,0BAAMnG,UAAU,UAA6B,EAAnBH,KAAKC,MAAMqG,MAAY,KAAOtG,KAAKC,MAAMqG,OACjE,S,w6BCCa6J,I,uOAAgB1Q,IAAMkE,W,wDAQ7BM,GACVA,EAAEI,iBACFJ,EAAEK,kBACEtE,KAAKC,MAAMmQ,YACbpQ,KAAKC,MAAMmQ,WAAWpQ,KAAKC,MAAM2B,KAAM5B,KAAKC,MAAMoQ,MAAOrQ,KAAKC,MAAMuI,IAAKxI,KAAKC,MAAMqQ,O,yCAIrErM,GACjBA,EAAEI,iBACFJ,EAAEK,kBACFtE,KAAKC,MAAMsQ,gBAAgB,CAAEhL,UAAWvF,KAAKC,MAAM2B,KAAMwF,EAAGnD,EAAEuM,MAAOvJ,EAAGhD,EAAEwM,U,+BAI1E,IAAIrQ,EAAQJ,KAAKC,MAAMG,MAClBA,EAEqB,GAAfA,EAAMgC,SAEfhC,EAAQA,EAAMsM,UAAU,EAAG,IAAM,OAHjCtM,EAAQ,2BAAG,kBAAC,mBAAD,CAAkBK,GAAG,mBAKlC,IAAMiQ,EAAS1Q,KAAKC,MAAMuI,IAAM,SAAW,UACrCyB,GAASjK,KAAKC,MAAMgK,QAASjK,KAAKC,MAAMgK,OACxC6F,EAAS9P,KAAKC,MAAM6P,OAAS9P,KAAKC,MAAM6P,OAAOa,QAAU,GACzDC,EAAc,GAapB,OAZI5Q,KAAKC,MAAMqQ,MACTtQ,KAAKC,MAAM4Q,UACbf,EAAO3N,KAAK,CAACnE,KAAMgC,KAAKC,MAAMqQ,IAAIQ,UAAW9R,IAAK,SAEhDgB,KAAKC,MAAMqQ,IAAIS,WACjBH,EAAYzO,KAAK,CAAC6N,KAAM,UAErBhQ,KAAKC,MAAMqQ,IAAIU,YAClBJ,EAAYzO,KAAK,CAAC6N,KAAM,YAK1B,wBAAI7P,WAAYH,KAAKC,MAAMgR,eAAiBjR,KAAKC,MAAMiR,SAAW,WAAa,KAC7E3Q,QAASP,KAAKyG,aACd,yBAAKtG,UAAU,cACb,kBAAC,EAAD,CACE8J,OAAQA,EACR7J,MAAOJ,KAAKC,MAAMG,MAClBqC,MAAOzC,KAAKC,MAAM2B,OACnB5B,KAAKC,MAAMkR,WAAa,0BAAMhR,UAAWuQ,IACvC1Q,KAAKC,MAAMgR,eAAiBjR,KAAKC,MAAMiR,SACxC,uBAAG/Q,UAAU,4BAAb,gBACE,MAEN,yBAAKA,UAAU,YACb,6BAAK,0BAAMA,UAAU,iBAAiBC,GACpC,kBAAC,GAAD,CAAakG,MAAOtG,KAAKC,MAAMmR,SAAU,kBAAC,GAAD,CAAetB,OAAQc,KAEjE5Q,KAAKC,MAAMoR,QAAU,yBAAKlR,UAAU,mBAAmBH,KAAKC,MAAMoR,SAAiB,KACpF,8BAAM,kBAAC,GAAD,CAAevB,OAAQA,MAE9B9P,KAAKC,MAAMsQ,gBACV,0BAAMpQ,UAAU,eACd,uBAAGgP,KAAK,IAAI5O,QAASP,KAAKsR,oBACxB,uBAAGnR,UAAU,kBAAb,iBAEM,U,kBAtElB,YAAYF,GAAO,M,IAAA,O,4FAAA,U,EACjB,U,EAAA,iBAAMA,K,gDAEDwG,YAAc,EAAKA,YAAYxH,KAAjB,OACnB,EAAKqS,mBAAqB,EAAKA,mBAAmBrS,KAAxB,OAJT,E,qvBCLfsS,I,uOAAsB9R,IAAMM,e,wDAOpBkE,GACVA,EAAEI,iBACFJ,EAAEK,kBACFtE,KAAKC,MAAM4E,SAAS7E,KAAKC,MAAMuR,U,+BAGxB,IACAlK,EAAiBtH,KAAKC,MAAMsH,KAA5BD,cACP,OACE,wBAAI/G,QAASP,KAAKyG,YAAatG,UAAU,UACvC,yBAAKA,UAAU,eAAemH,EAActH,KAAKC,MAAMG,MAAOJ,KAAKC,MAAMwR,c,kBAhB/E,YAAYxR,GAAO,M,IAAA,O,4FAAA,U,EACjB,U,EAAA,iBAAMA,K,gDAEDwG,YAAc,EAAKA,YAAYxH,KAAjB,OAHF,EAsBNiJ,4BAAWqJ,I,gzBCjB1B,I,MAAM5O,GAAWC,yBAAe,CAC9B8O,UAAW,CAAF,qCAKTC,YAAa,CAAF,2CAOPC,I,uOAAoBnS,IAAMkE,W,qDACrB,WACA2D,EAAiBtH,KAAKC,MAAMsH,KAA5BD,cACD2J,EAAgBY,MAAMC,QAAQ9R,KAAKC,MAAM8R,eACzCC,EAAe,GACjBC,EAAgB,EAoEpB,OAnEIjS,KAAKC,MAAMiS,UAAyC,EAA7BlS,KAAKC,MAAMiS,SAAS9P,QAC7CpC,KAAKC,MAAMiS,SAAS1L,IAAI,SAAC1I,GACvB,GAAIA,EAAE0T,OAEJQ,EAAa7P,KACX,kBAAC,GAAD,CACE/B,MAAOtC,EAAEsC,MAAOoR,OAAQ1T,EAAE0T,OAAQC,OAAQ3T,EAAE2T,OAC5CzS,IAAKlB,EAAE0T,OACP3M,SAAU,EAAK5E,MAAM4E,gBAEpB,CAEL,IAAM7F,EAAMlB,EAAE2E,MAAQ3E,EAAE2E,MAAQ3E,EAAEuI,KAGlC,GAAI,EAAKpG,MAAMkS,YAAc,EAAKlS,MAAMmS,OAAQ,CAC9C,IAAI/R,EAAU,CAACrB,GAOf,GANIlB,EAAEuU,SAAWvU,EAAEuU,QAAQhB,SACzBhR,EAAQ8B,MAAM,GAAKrE,EAAEuU,QAAQhB,SAASiB,eAEpCxU,EAAEyU,QAAUzU,EAAEyU,OAAOC,IACvBnS,EAAQ8B,MAAM,GAAKrE,EAAEyU,OAAOC,IAAIF,gBAE7B,EAAKrS,MAAMkS,WAAW,EAAKlS,MAAMmS,OAAQ/R,GAC5C,OAIJ,IAAM6Q,EAAWD,GAC2B,EAAzC,EAAKhR,MAAM8R,cAAczF,QAAQtN,GACjC,EAAKiB,MAAM8R,gBAAkB/S,EAC1B8Q,EAAS,GACX,EAAK7P,MAAM4Q,WACT7R,IAAQ,EAAKiB,MAAMwS,UACrB3C,EAAO3N,KAAK,CAACnE,KAAMsJ,EAAc3E,GAAS+O,WAAYzB,MAAO,UAE3DnS,EAAEwS,KAAOxS,EAAEwS,IAAIoC,WACjB5C,EAAO3N,KAAK,CAACnE,KAAMsJ,EAAc3E,GAASgP,aAAc1B,MAAO,UAGnE,IAAMoB,EAAUQ,MAAMC,QAAQhU,EAAEuU,SAC9BvU,EAAEuU,QAAQpQ,KAAK,KAAQnE,EAAEuU,QAAUvU,EAAEuU,QAAQhB,QAAU,KAEzDW,EAAa7P,KACX,kBAAC,GAAD,CACE/B,MAAOtC,EAAEyU,OAASzU,EAAEyU,OAAOC,GAAK,KAChCvI,OAAQe,GAAalN,EAAEyU,OAASzU,EAAEyU,OAAOtH,MAAQ,MACjDoG,QAASA,EACTD,OAAQ,EAAKnR,MAAM0S,WAAa7U,EAAEsT,OAAS,EAC3C5I,IAAK1K,EAAE4S,QAAU,EAAKzQ,MAAM2S,UAC5BtC,IAAKxS,EAAEwS,IACPO,SAAU,EAAK5Q,MAAM4Q,SACrBf,OAAQA,EACRmB,cAAeA,EACfC,SAAUA,EACVC,WAAY,EAAKlR,MAAMkR,WACvBf,WAAY,EAAKnQ,MAAM4S,gBACvBtC,gBAAiB,EAAKtQ,MAAMsQ,gBAC5B3O,KAAM5C,EACNqR,MAAO2B,EAAa5P,OACpBpD,IAAKA,KAETiT,MAEDjS,MAIH,yBAAKG,UAAWH,KAAKC,MAAM6S,SAAW,KAAO,oBACzB,GAAjBb,EACC,yBAAK9R,UAAU,qBACb4S,wBAAyB,CAACC,OAAQhT,KAAKC,MAAMgT,oBAE/C,KAEqB,EAAtBjB,EAAa5P,OACZ,wBAAIjC,UAAU,eACX6R,GAGH,U,mLAOK9J,4BAAW0J,I,0zBCjHLsB,I,uOAAmBzT,IAAMM,e,qDACnC,WACP,OACE,uBAAGoP,KAAK,IAAI5O,QAAS,SAAC0D,GAAOA,EAAEI,iBAAkB,EAAKpE,MAAMkT,aAAc,uBAAGhT,UAAU,kBAAb,c,w6BCF3DiT,I,uOAAmB3T,IAAMM,e,+DAWzByO,GACbA,EAAU6E,QAAUrT,KAAKC,MAAMoT,OACjCrT,KAAKyO,SAAS,CACZ6E,OAAStT,KAAKC,MAAMoT,U,6BAMxBrT,KAAKyO,SAAS,CAAC6E,MAAM,IACjBtT,KAAKC,MAAMsT,cACbvT,KAAKC,MAAMsT,iB,+BAIN,WAEDF,EADQ,CAACxN,IAAK,QAAS2N,KAAM,UAAW9Q,KAAM,QAChC1C,KAAKC,MAAMoT,QAAU,GACnClT,EAAY,YAAckT,EAChC,OACE,yBAAKlT,UAAWA,GACd,yBAAKA,UAAU,QAAO,uBAAGA,UAAU,kBAAkBkT,IACrD,8BACE,0BAAMN,wBAAyB,CAACC,OAAQhT,KAAKC,MAAMwT,QAClDzT,KAAKC,MAAMuR,OACV,oCACO,uBAAGrC,KAAK,IACX9H,MAAO,CAAEqM,WAAY,UACrBnT,QAAS,SAAC0D,GAAOA,EAAEI,iBAAkB,EAAKpE,MAAMuR,WAC/CxR,KAAKC,MAAM0T,aAGhB,MAEJ,yBAAKxT,UAAU,UAAS,kBAAC,GAAD,CAAYgT,SAAUnT,KAAKuE,a,kBA5CzD,YAAYtE,GAAO,M,IAAA,O,4FAAA,U,EACjB,U,EAAA,iBAAMA,K,gDAEDiP,MAAQ,CACXoE,MAAM,GAGR,EAAK/O,KAAO,EAAKA,KAAKtF,KAAV,OAPK,E,qvBCDA2U,I,uOAAanU,IAAMM,e,yDAOzBkE,GACXA,EAAEI,iBACFrE,KAAKC,MAAMkT,SAASnT,KAAKC,MAAMwC,MAAOzC,KAAKC,MAAMoQ,S,+BAIjD,IAAMjQ,EAAQJ,KAAKC,MAAMG,OAASJ,KAAKC,MAAMwC,MACvCtC,EAAYH,KAAKC,MAAM4T,QAAU,eAAiB,OACxD,OACE,yBAAK1T,UAAWA,GACbH,KAAKC,MAAM6T,SACV,0BAAM3T,UAAU,WAChB,yBAAKA,UAAU,cACb,kBAAC,EAAD,CACE8J,OAAQjK,KAAKC,MAAMgK,SAAU,EAC7BxH,MAAOzC,KAAKC,MAAMwC,MAClBrC,MAAOJ,KAAKC,MAAMG,SAGxB,8BAAOA,GACNJ,KAAKC,MAAMkT,WAAanT,KAAKC,MAAM8T,SAClC,uBAAG5E,KAAK,IAAI5O,QAASP,KAAKgU,cAA1B,KACE,0BAAM7T,UAAU,gB,kBA5B1B,YAAYF,GAAO,M,IAAA,O,4FAAA,U,EACjB,U,EAAA,iBAAMA,K,gDAED+T,aAAe,EAAKA,aAAa/U,KAAlB,OAHH,E,wvBCEAgV,I,uOAAkBxU,IAAMkE,W,+CAgBf1D,GAC1B,MAAO,CACLiU,YAAajU,EAAMkU,MAAQ,GAAKlU,EAAMmU,OACtCC,YAAaJ,GAAUK,UAAUrU,EAAMkU,MAAOlU,EAAMsU,eACpDC,UAAWP,GAAUQ,WAAWxU,EAAMkU,U,iCAgBxBA,GAChB,IAAM9D,EAAQ,GACV/J,EAAQ,EAKZ,OAJA6N,EAAM3N,IAAI,SAAC5E,GACTyO,EAAMzO,EAAKyE,MAAQC,EACnBA,MAEK+J,I,gCAIQ8D,EAAOO,GACtB,IAAMX,EAAW,GACXY,EAAS,GAQf,OAPAR,EAAM3N,IAAI,SAAC5E,GACL8S,GAAQA,EAAKE,SAAShT,EAAKyE,MAC7B0N,EAAS5R,KAAKP,GAEd+S,EAAOxS,KAAKP,KAGTmS,EAASc,OAAOF,M,6CAjCNnG,EAAWsG,GACxBtG,EAAU2F,OAASnU,KAAKC,MAAMkU,OAChC3F,EAAU+F,eAAiBvU,KAAKC,MAAMsU,eACtC/F,EAAU4F,QAAUpU,KAAKC,MAAMmU,QAC/BpU,KAAKyO,SAASwF,GAAUc,qBAAqB/U,KAAKC,UAE/C6U,GAAa9U,KAAKC,MAAMkU,MAAM/R,OAAS0S,EAAUT,YAAYjS,SAChEpC,KAAKyO,SAAS,CAACuG,MAAO,O,sCA6BV/Q,GACdjE,KAAKyO,SAAS,CAACuG,MAAO/Q,EAAEG,OAAO1F,QAC3BsB,KAAKC,MAAMkS,YACbnS,KAAKC,MAAMkS,WAAWlO,EAAEG,OAAO1F,S,mCAItB2N,GACX,IAAM4I,EAAUjV,KAAKkP,MAAMmF,YAAYhI,GACvCrM,KAAKC,MAAMiV,cAAcD,EAAQ5O,KAAMrG,KAAKkP,MAAMsF,UAAUS,EAAQ5O,S,uCAGrDzE,EAAMyK,GACrBrM,KAAKmV,aAAa9I,K,0CAIlBrM,KAAKyO,SAAS,CAAC2G,SAAS,M,wCAIxBpV,KAAKyO,SAAS,CAAC2G,SAAS,IACpBpV,KAAKC,MAAMoV,aACbrV,KAAKC,MAAMoV,YAAYrV,KAAKkP,MAAM8F,S,oCAIxB/Q,GACZ,GAAc,cAAVA,EAAEjF,KACJ,GAA+B,GAA3BgB,KAAKkP,MAAM8F,MAAM5S,QAA+C,EAAhCpC,KAAKkP,MAAMmF,YAAYjS,OAAY,CACrE,IAAMoK,EAAKxM,KAAKkP,MAAMmF,YAAYjS,OAAS,EACvCpC,KAAKkP,MAAMmF,YAAY7H,GAAInG,OAASrG,KAAKC,MAAMsU,eACjDvU,KAAKmV,aAAa3I,QAGH,UAAVvI,EAAEjF,IACPgB,KAAKC,MAAMqV,SACbtV,KAAKC,MAAMqV,QAAQtV,KAAKkP,MAAM8F,OAEb,WAAV/Q,EAAEjF,KACPgB,KAAKC,MAAMkT,UACbnT,KAAKC,MAAMkT,a,+BAKR,WACDgB,EAAQ,GACV7N,EAAQ,EACNiO,EAAgBvU,KAAKC,MAAMsU,eAAiB,GAClDvU,KAAKkP,MAAMmF,YAAY7N,IAAI,SAAC5E,GAC1BuS,EAAMhS,KACJ,kBAAC,GAAD,CACEgR,SAAU,EAAKoC,iBACftL,OAAQe,GAAapJ,EAAK2Q,OAAS3Q,EAAK2Q,OAAOtH,MAAQ,MACvD7K,MAAOwB,EAAK2Q,OAAS3Q,EAAK2Q,OAAOC,QAAKgD,EACtC1B,SAAU,EAAK7T,MAAMwV,eACrBhT,MAAOb,EAAKyE,KACZ0N,SAAUQ,EAAcK,SAAShT,EAAKyE,MACtCwN,QAASjS,EAAKiS,QACdxD,MAAO/J,EACPtH,IAAK4C,EAAKyE,QAEdC,MAEF,IAAMnG,EAAY,cAAgBH,KAAKkP,MAAMkG,QAAU,WAAa,IACpE,OACE,yBAAKjV,UAAWA,GACbgU,EACD,2BAAOjJ,KAAK,OACVgJ,YAAalU,KAAKkP,MAAMgF,YACxB5E,SAAUtP,KAAK0V,gBACfC,QAAS3V,KAAK4V,kBACdC,OAAQ7V,KAAK8V,gBACbC,UAAW/V,KAAKgW,cAChBtX,MAAOsB,KAAKkP,MAAM8F,MAClBiB,WAAS,Q,2CAvIjB,YAAYhW,GAAO,M,IAAA,O,4FAAA,U,EACjB,U,EAAA,iBAAMA,K,gDAEDiP,MAAQ+E,GAAUc,qBAAqB9U,GAC5C,EAAKiP,MAAM8F,MAAQ,GACnB,EAAK9F,MAAMkG,SAAU,EAErB,EAAKM,gBAAkB,EAAKA,gBAAgBzW,KAArB,OACvB,EAAKkW,aAAe,EAAKA,aAAalW,KAAlB,OACpB,EAAKsW,iBAAmB,EAAKA,iBAAiBtW,KAAtB,OACxB,EAAK2W,kBAAoB,EAAKA,kBAAkB3W,KAAvB,OACzB,EAAK6W,gBAAkB,EAAKA,gBAAgB7W,KAArB,OACvB,EAAK+W,cAAgB,EAAKA,cAAc/W,KAAnB,OAZJ,E,2uBCDrB,I,SAAM0D,GAAWC,yBAAe,CAC9BsT,YAAa,CAAF,4DAKXC,mBAAoB,CAAF,8EAOdC,I,uOAAqB3W,IAAMkE,W,uCAqBX0S,GAClB,IAAIhG,EAAQ,GAIZ,OAHAgG,EAAQ7P,IAAI,SAAC3I,GACXwS,EAAMxS,EAAEwI,MAAQ,CAACiQ,MAAO,EAAGC,SAAS,KAE/BlG,I,oCAGYgG,EAASG,EAAaC,GACzC,IAAIC,EAAO,GAMX,OALAL,EAAQ7P,IAAI,SAAC3I,IACP2Y,GAAe3Y,EAAEwI,MAAQoQ,GAC3BC,EAAKvU,KAAKtE,EAAEwI,QAGTqQ,I,uCAGeL,GACtB,IAAIM,EAAM,GAIV,OAHAN,EAAQ7P,IAAI,SAAC3I,GACX8Y,EAAIxU,KAAKtE,EAAEwI,QAENsQ,I,yCAuDiBvE,EAAQX,GAChC,GAAIW,EAAQ,CACV,IAAK,IAAI3U,EAAE,EAAGA,EAAEgU,EAAOrP,OAAQ3E,IAC7B,GAAiC,GAA7BgU,EAAOhU,GAAG6O,QAAQ8F,GACpB,OAAO,EAGX,OAAO,EAET,OAAO,K,gDA7DawE,EAAQvG,GAC5B,IAAIwG,EAAS7W,KAAKkP,MAAMmB,MAAMuG,GAC9B,GAAIC,EAAQ,CACV,GAAIA,EAAON,QAET,OAEFM,EAAOP,OAAS,EAChBO,EAAON,SAAU,OAEjBM,EAAS,CAACP,MAAO,EAAGC,SAAS,GAG/B,IAAI1Y,EAAImC,KAAKkP,MAAMmH,QAAQ1F,QAC3B9S,EAAEsE,KAAKnC,KAAKC,MAAMiS,SAAS7B,IAE3B,IAAMsG,EAAMP,GAAaU,iBAAiBjZ,GAEpCJ,EAAIuC,KAAKkP,MAAMmB,MACrB5S,EAAEmZ,GAAUC,EAEZ7W,KAAKyO,SAAS,CAAC4H,QAASxY,EAAGwS,MAAO5S,EAAGqZ,iBAAkBH,M,0CAGrCC,EAAQvG,GAC1B,IAAMwG,EAAS7W,KAAKkP,MAAMmB,MAAMuG,GAChC,GAAKC,GAAWA,EAAON,QAAvB,CAGAM,EAAON,SAAU,IACjBM,EAAOP,MAEP,IAAIzY,EAAImC,KAAKkP,MAAMmH,QAAQ1F,QAC3B9S,EAAEkZ,OAAO1G,EAAO,GAEhB,IAAMsG,EAAMP,GAAaU,iBAAiBjZ,GAEpCJ,EAAIuC,KAAKkP,MAAMmB,MACrB5S,EAAEmZ,GAAUC,EAEZ7W,KAAKyO,SAAS,CAAC4H,QAASxY,EAAGwS,MAAO5S,EAAGqZ,iBAAkBH,O,0CAGrCK,GAAK,IAChB1P,EAAiBtH,KAAKC,MAAMsH,KAA5BD,cACDtB,EAAOgR,EAEX1P,EAAc3E,GAASwT,mBAAoB,CAACc,MAAOD,IADnD1P,EAAc3E,GAASuT,aAGzBlW,KAAKyO,SAAS,CAACyI,cAAeF,EAAKG,kBAAmBnR,M,qCAgBtD,IAAIoR,EAAWpX,KACXqW,EAAU,GACVgB,EAAQ,GACRpC,EAAU,GAEH9W,OAAOmZ,KAAKtX,KAAKkP,MAAMmB,OAC7B7J,IAAI,SAAS+Q,GACZH,EAASlI,MAAMmB,MAAMkH,GAAGhB,SAC1BF,EAAQlU,KAAKoV,GAGqB,EAAhCH,EAASlI,MAAMmB,MAAMkH,GAAGjB,MAC1Be,EAAMlV,KAAKoV,GACFH,EAASlI,MAAMmB,MAAMkH,GAAGjB,MAAQ,GACzCrB,EAAQ9S,KAAKoV,KAGjBvX,KAAKC,MAAMuX,SAASnB,EAASgB,EAAOpC,K,qCAIpCjV,KAAKC,MAAMkT,a,+BAKX,OADwBnT,KAAKC,MAAMsH,KAA5BD,cAEL,yBAAK7G,GAAG,iBACN,yBAAKN,UAAU,kBACb,2BAAOA,UAAU,SACf,kBAAC,mBAAD,CAAkBM,GAAG,sBAAsBgX,eAAe,oBAG9D,yBAAKtX,UAAU,kBACb,kBAAC,GAAD,CACEgU,MAAOnU,KAAKkP,MAAMmH,QAClB9B,cAAevU,KAAKkP,MAAMqF,cAC1BH,OAAO,cACPjC,WAAYnS,KAAK0X,oBACjBxC,cAAelV,KAAK2X,uBAExB,yBAAKxX,UAAU,kBACb,2BAAOA,UAAU,SACf,kBAAC,mBAAD,CAAkBM,GAAG,qBAAqBgX,eAAe,mBAI7D,kBAAC,GAAD,CACEvF,SAAUlS,KAAKC,MAAMiS,SACrBO,SAAUzS,KAAKC,MAAMwS,SACrBV,cAAe/R,KAAKkP,MAAM4H,iBAC1B1E,OAAQpS,KAAKkP,MAAMgI,cACnB/E,WAAYiE,GAAawB,mBACzB3E,iBAAkBjT,KAAKkP,MAAMiI,kBAC7BhG,YAAY,EACZwB,YAAY,EACZE,gBAAiB7S,KAAK6X,wBACxB,yBAAKpX,GAAG,wBAAwBN,UAAU,kBACxC,4BAAQA,UAAU,OAAOI,QAASP,KAAK8X,cACrC,kBAAC,mBAAD,CAAkBrX,GAAG,YAAYgX,eAAe,QAElD,4BAAQtX,UAAU,QAAQI,QAASP,KAAKgU,cACtC,kBAAC,mBAAD,CAAkBvT,GAAG,gBAAgBgX,eAAe,iB,2CA7K9D,YAAYxX,GAAO,M,IAAA,O,4FAAA,U,EACjB,U,EAAA,iBAAMA,K,gDAEDiP,MAAQ,CAEXmH,QAASpW,EAAMoW,QACfhG,MAAO+F,GAAa2B,aAAa9X,EAAMoW,SACvC9B,cAAe6B,GAAa7B,cAActU,EAAMoW,QAASpW,EAAM+X,mBAAoB/X,EAAMwW,gBACzFS,cAAe,GACfC,kBAAmBlX,EAAMsH,KAAKD,cAAc3E,GAASuT,aACrDY,iBAAkBV,GAAaU,iBAAiB7W,EAAMoW,UAGxD,EAAKwB,sBAAwB,EAAKA,sBAAsB5Y,KAA3B,OAC7B,EAAK0Y,oBAAsB,EAAKA,oBAAoB1Y,KAAzB,OAC3B,EAAKyY,oBAAsB,EAAKA,oBAAoBzY,KAAzB,OAC3B,EAAK6Y,aAAe,EAAKA,aAAa7Y,KAAlB,OACpB,EAAK+U,aAAe,EAAKA,aAAa/U,KAAlB,OAjBH,EAqLNiJ,4BAAWkO,I,qvBCvML6B,I,uOAAwBxY,IAAMM,e,4DAejCkE,GACdjE,KAAKyO,SAAS,CAAC/P,MAAOuF,EAAEG,OAAO1F,QAC3BsB,KAAKC,MAAMqP,UACbtP,KAAKC,MAAMqP,SAASrL,K,uCAIPA,GACfA,EAAEI,iBACFrE,KAAKyO,SAAS,CAACvO,SAAUF,KAAKkP,MAAMhP,Y,oCAGxB+D,GACK,IAAbA,EAAEO,SAEJxE,KAAKyO,SAAS,CAAC/P,MAAOsB,KAAKC,MAAMvB,MAAOwB,SAAS,IAC7CF,KAAKC,MAAMiY,YACblY,KAAKC,MAAMiY,cAES,IAAbjU,EAAEO,SAEXxE,KAAKmY,0B,4CAIalU,GAAG,WACvB,GAAIA,EAAG,CACL,IAAIS,EAAgBT,EAAES,cACtB0T,WAAW,WACJ1T,EAAcP,SAASP,SAASyU,gBAC/B,EAAKpY,MAAMiY,YACb,EAAKjY,MAAMiY,WAAW,EAAKhJ,MAAMxQ,QAGpC,QACMsB,KAAKC,MAAMiY,YACpBlY,KAAKC,MAAMiY,WAAWlY,KAAKkP,MAAMxQ,MAAM8L,U,+BAKzC,OACE,yBAAK8N,SAAS,KAAKnY,UAAU,cAC3B0V,OAAQ7V,KAAKmY,uBACb,2BAAOhY,UAAU,kBACf+K,KAAMlL,KAAKkP,MAAMhP,QAAU,OAAS,WACpCxB,MAAOsB,KAAKkP,MAAMxQ,MAClBwV,YAAalU,KAAKC,MAAMiU,YACxBH,SAAU/T,KAAKC,MAAM8T,SAAW,WAAa,GAC7CkC,UAAWjW,KAAKC,MAAMgW,UAAY,YAAc,GAChDsC,aAAcvY,KAAKC,MAAMsY,aACzBjJ,SAAUtP,KAAKwY,gBACfzC,UAAW/V,KAAKgW,gBAClB,0BAAMzV,QAASP,KAAKyY,kBAClB,uBAAGtY,UAAU,uCACVH,KAAKkP,MAAMhP,QAAU,aAAe,wB,kBArE/C,YAAYD,GAAO,M,IAAA,O,4FAAA,U,EACjB,U,EAAA,iBAAMA,K,gDAEDiP,MAAQ,CACXxQ,MAAO,EAAKuB,MAAMvB,MAClBwB,SAAS,GAGX,EAAKuY,iBAAmB,EAAKA,iBAAiBxZ,KAAtB,OACxB,EAAKuZ,gBAAkB,EAAKA,gBAAgBvZ,KAArB,OACvB,EAAK+W,cAAgB,EAAKA,cAAc/W,KAAnB,OACrB,EAAKkZ,sBAAwB,EAAKA,sBAAsBlZ,KAA3B,OAXZ,E,qvBCEAyZ,I,uOAAoBjZ,IAAMkE,W,+DAiB1B6K,EAAWsG,GAG5B,IAAM6D,EAAW3Y,KAAKC,MAAMvB,OAAS,GACjCoW,EAAU8D,cAAgBD,GAAa7D,EAAU+D,QACnD7Y,KAAKyO,SAAS,CACZmK,aAAcD,EACdja,MAAOia,M,sCAKG1U,GACdjE,KAAKyO,SAAS,CAAC/P,MAAOuF,EAAEG,OAAO1F,U,oCAGnBuF,GACM,KAAdA,EAAEO,QAEJxE,KAAKyO,SAAS,CAAC/P,MAAOsB,KAAKC,MAAMvB,MAAOma,QAAQ,IACzB,KAAd5U,EAAEO,SAEXxE,KAAKmY,sBAAsBlU,K,2CAKxBjE,KAAKC,MAAMgP,WACdrP,IAASsE,YAAYlE,MAAM8Y,QAC3B9Y,KAAKyO,SAAS,CAACoK,QAAQ,O,4CAILE,GACpB,IAAI/Y,KAAKC,MAAM8T,UAAagF,EAAM3U,OAAO4U,gBAAzC,CAKAhZ,KAAKyO,SAAS,CAACoK,QAAQ,IACvB,IAAIna,EAAQsB,KAAKkP,MAAMxQ,MAAM8L,QACxB9L,GAASsB,KAAKC,MAAMvB,QAAWA,IAAUsB,KAAKC,MAAMvB,OACvDsB,KAAKC,MAAMiY,WAAWxZ,QANtBsB,KAAKyO,SAAS,CAAC/P,MAAOsB,KAAKC,MAAMvB,MAAOma,QAAQ,M,6CAU7Bna,GACrBsB,KAAKyO,SAAS,CAACoK,QAAQ,IACnBna,GAAUA,IAAUsB,KAAKC,MAAMvB,OACjCsB,KAAKC,MAAMiY,WAAWxZ,K,+BAKxB,GAAIsB,KAAKkP,MAAM2J,OACb,IAAII,EAAYjZ,KAAKC,MAAMiL,MAAQ,WAC9B,CACL,IAAIgO,EAA8B,YAAnBlZ,KAAKC,MAAMiL,KAAqB,WAAalL,KAAKkP,MAAMxQ,MACnEya,EAAY,iBACbnZ,KAAKC,MAAMgP,SAAW,YAAc,IAClCiK,IACHA,EAAWlZ,KAAKC,MAAMiU,YACtBiF,GAAa,gBAEO,GAAlBD,EAAS9W,SAEX8W,EAAWA,EAASxM,UAAU,EAAG,IAAM,OAG3C,OACE1M,KAAKkP,MAAM2J,OACK,YAAbI,EACC,kBAAC,GAAD,CACEva,MAAOsB,KAAKkP,MAAMxQ,MAClBwV,YAAalU,KAAKC,MAAMiU,YACxBH,SAAU/T,KAAKC,MAAM8T,SAAW,WAAa,GAC7CwE,aAAcvY,KAAKC,MAAMsY,aACzBtC,WAAW,EACXiC,WAAYlY,KAAKoZ,yBAEnB,2BAAOlO,KAAM+N,EACXva,MAAOsB,KAAKkP,MAAMxQ,MAClBwV,YAAalU,KAAKC,MAAMiU,YACxBH,SAAU/T,KAAKC,MAAM8T,SAAW,WAAa,GAC7CwE,aAAcvY,KAAKC,MAAMsY,aACzBtC,WAAS,EACT3G,SAAUtP,KAAKwY,gBACfzC,UAAW/V,KAAKgW,cAChBH,OAAQ7V,KAAKmY,wBAGjB,0BAAMhY,UAAWgZ,EAAW5Y,QAASP,KAAKqZ,oBACxC,0BAAMlZ,UAAU,WAAW+Y,Q,kBA5GnC,YAAYjZ,GAAO,M,IAAA,O,4FAAA,U,EACjB,U,EAAA,iBAAMA,K,gDAEDiP,MAAQ,CACX2J,OAAQ5Y,EAAM4Y,OACdD,aAAc3Y,EAAMvB,OAAS,GAC7BA,MAAOuB,EAAMvB,OAAS,IAGxB,EAAK8Z,gBAAkB,EAAKA,gBAAgBvZ,KAArB,OACvB,EAAK+W,cAAgB,EAAKA,cAAc/W,KAAnB,OACrB,EAAKoa,mBAAqB,EAAKA,mBAAmBpa,KAAxB,OAC1B,EAAKkZ,sBAAwB,EAAKA,sBAAsBlZ,KAA3B,OAC7B,EAAKma,uBAAyB,EAAKA,uBAAuBna,KAA5B,OAbb,E,qvBCHAqa,I,uOAAmB7Z,IAAMM,e,2DAW1C,IAAMwZ,GAAQvZ,KAAKkP,MAAMqK,KACzBvZ,KAAKyO,SAAS,CAAC8K,KAAMA,IACjBvZ,KAAKC,MAAMuZ,UACbxZ,KAAKC,MAAMuZ,SAASD,K,+BAKtB,OAAQ,2BAAOpZ,UAAU,wBAAwBI,QAASP,KAAKyZ,cAAezZ,KAAKC,MAAMG,MAAjF,MACLJ,KAAKkP,MAAMqK,KAAO,uBAAGpZ,UAAU,kBAAb,eACjB,uBAAGA,UAAU,kBAAb,sB,kBApBN,YAAYF,GAAO,M,IAAA,O,4FAAA,U,EACjB,U,EAAA,iBAAMA,K,gDAEDiP,MAAQ,CACXqK,KAAMtZ,EAAMsZ,MAEd,EAAKE,aAAe,EAAKA,aAAaxa,KAAlB,OANH,E,2uBCMrB,I,MAAM0D,GAAWC,yBAAe,CAC9B,4DAKA,4DAKA,8DAKA,oEAKA,kEAKA,8DAKA,iEAKA,+DAOI8W,I,uOAA0Bja,IAAMkE,W,yDAavBqT,GACX,IAAIpY,EAAOoB,KAAKkP,MAAMtQ,MAEV,GADFA,EAAK0N,QAAQ0K,GAErBpY,GAAQoY,EAERpY,EAAOA,EAAK+a,QAAQ3C,EAAK,IAE3BhX,KAAKyO,SAAS,CAAC7P,KAAMA,M,qCAKrB,IAAIA,GAAQoB,KAAKkP,MAAMtQ,MAAQ,KAAK0C,MAAM,IAAIsY,OAAO3X,KAAK,IAEtDrD,KADUoB,KAAKC,MAAMrB,MAAQ,KAAK0C,MAAM,IAAIsY,OAAO3X,KAAK,IAE1DjC,KAAKC,MAAMuX,SAAS5Y,GAEpBoB,KAAKC,MAAMkT,a,qCAKbnT,KAAKC,MAAMkT,a,+BAqBX,IAlBO,IACA7L,EAAiBtH,KAAKC,MAAMsH,KAA5BD,cACDpC,EAAM,WACN2U,EAAQ,CACZ,EAAKvS,EAAc3E,GAASmX,OAAQ,CAAC9C,IAAK,MAC1C,EAAK1P,EAAc3E,GAASsL,OAAQ,CAAC+I,IAAK,MAC1C,EAAK1P,EAAc3E,GAASoX,OAAQ,CAAC/C,IAAK,MAC1C,EAAK1P,EAAc3E,GAASqX,OAAQ,CAAChD,IAAK,MAC1C,EAAK1P,EAAc3E,GAASsX,SAAU,CAACjD,IAAK,MAC5C,EAAK1P,EAAc3E,GAASuX,OAAQ,CAAClD,IAAK,MAC1C,EAAK1P,EAAc3E,GAASwX,QAAS,CAACnD,IAAK,MAC3C,EAAK1P,EAAc3E,GAASyX,MAAO,CAACpD,IAAK,OAGvCqD,EAAOra,KAAKC,MAAMoa,MAAQ,GAC1Bzb,EAAOoB,KAAKkP,MAAMtQ,KAClB0b,GAAWta,KAAKC,MAAMqa,SAAW,IAAIX,QAAQ,IAAK,IAClDlV,EAAQ,GACHhH,EAAE,EAAGA,EAAEyH,EAAI9C,OAAQ3E,IAAK,CAC/B,IAAIK,EAAIoH,EAAIwF,OAAOjN,GACI,GAAnB4c,EAAK/N,QAAQxO,IAAWc,EAAK0N,QAAQxO,GAAK,GAI9C2G,EAAMtC,KACJ,wBAAInD,IAAKlB,GACP,4BAAK+b,EAAM/b,IACX,wBAAIqC,UAAU,YAAYka,EAAK/N,QAAQxO,GAAK,EAC1C,kBAAC,GAAD,CAAUE,KAAMF,EAAG4R,QAA6B,GAAnB9Q,EAAK0N,QAAQxO,GAAUwR,SAAUtP,KAAK2P,eAEnE,kBAAC,GAAD,CAAU3R,KAAMF,EAAG4R,QAA6B,GAAnB9Q,EAAK0N,QAAQxO,MACrCkC,KAAKC,MAAMqa,QAAU,wBAAIna,UAAU,YACxC,kBAAC,GAAD,CAAUnC,KAAMF,EAAG4R,QAAgC,GAAtB4K,EAAQhO,QAAQxO,MACvC,OAKd,OACE,yBAAKqC,UAAU,qBACZH,KAAKC,MAAMsa,UACV,wBAAIpa,UAAU,eAAc,kBAAC,GAAD,CAC1ByB,KAAM5B,KAAKC,MAAM2B,KACjBxB,MAAOJ,KAAKC,MAAMsa,UAClBtQ,OAAQe,GAAahL,KAAKC,MAAMua,WAAaxa,KAAKC,MAAMua,WAAa,SAAiB,KAC1F,2BAAOra,UAAU,SAAQ,kBAAC,mBAAD,CAAkBM,GAAG,oBAC5CgX,eAAe,iBACjB,2BAAOtX,UAAU,qBAChBH,KAAKC,MAAMqa,QACV,+BAAO,4BACL,6BAAS,4BAAKta,KAAKC,MAAMwa,WACzB,4BAAKza,KAAKC,MAAMya,gBAElB,KACF,+BACGjW,IAEH,6BACA,yBAAKtE,UAAU,kBACb,4BAAQA,UAAU,UAAUI,QAASP,KAAKgU,cACxC,kBAAC,mBAAD,CAAkBvT,GAAG,mBAEvB,4BAAQN,UAAU,OAAOI,QAASP,KAAK8X,cACrC,kBAAC,mBAAD,CAAkBrX,GAAG,qB,kBArG/B,YAAYR,GAAO,M,IAAA,O,4FAAA,U,EACjB,U,EAAA,iBAAMA,K,gDAEDiP,MAAQ,CACXtQ,MAAOqB,EAAMrB,MAAQ,IAAI+a,QAAQ,IAAK,KAGxC,EAAKhK,aAAe,EAAKA,aAAa1Q,KAAlB,OACpB,EAAK6Y,aAAe,EAAKA,aAAa7Y,KAAlB,OACpB,EAAK+U,aAAe,EAAKA,aAAa/U,KAAlB,OATH,EA6GNiJ,4BAAWwR,ICjKnB,SAASiB,GAAcrU,GAC5B,IAAMsU,EAAUhX,SAASiX,eAAe,iBAClCC,EAAOlX,SAASkX,MAAQlX,SAASmX,qBAAqB,QAAQ,GAC9DC,EAAUpX,SAASwJ,cAAc,QACvC4N,EAAQ9P,KAAO,YACf8P,EAAQva,GAAK,gBACbua,EAAQC,IAAM,gBACdD,EAAQ7L,KAAO,iBAA2B,EAAR7I,EAAY,IAAM,IAAM,OACtDsU,GACFE,EAAKI,YAAYN,GAEnBE,EAAKK,YAAYH,GAEjBpX,SAASxD,OAAiB,EAARkG,EAAY,IAAIA,EAAM,KAAO,IAAM,SAIhD,SAAS8U,GAAM5I,EAAI6I,GACxB,IAAIC,EAAO,KAEX,IAAK9I,GAAMA,EAAGhI,QAAW6Q,KACvBC,EAAO,GACH9I,IACF8I,EAAK9I,GAAKA,EAAGhI,QAEX6Q,GAAc,CAChB,IAAME,EAAYF,EAAa/O,QAAQ,KACvCgP,EAAKrQ,MAAqB,GAAbsQ,EAAiB,CAC5BpQ,KAAMkQ,EAAa3O,UAAU6O,EAAU,GACvCrQ,KAAM,OACJmQ,EAGR,OAAOC,EAIF,SAASE,GAAWC,EAAG1L,GAC5B,GAAI0L,IAAM1L,EACR,OAAO,EAGT,IAAK8B,MAAMC,QAAQ2J,KAAO5J,MAAMC,QAAQ/B,GACtC,OAAO,EAIT,GAAI0L,EAAErZ,QAAU2N,EAAE3N,OAChB,OAAO,EAGTqZ,EAAE7B,OACF7J,EAAE6J,OACF,IAAK,IAAInc,EAAI,EAAGC,EAAI+d,EAAErZ,OAAQ3E,EAAIC,EAAGD,IACnC,GAAIge,EAAEhe,KAAOsS,EAAEtS,GACb,OAAO,EAGX,OAAO,EAkCF,SAASie,GAAY5Z,EAAK6Z,GAC/B,IAAK7Z,EACH,OAAO,KAOT,GAHAA,EAAMA,EAAI6X,QAAQ,kBAAmB,IAAInP,QAGpC,8BAA8BoR,KAAK9Z,GACtC,OAAOA,EAGT,GAAI,aAAa8Z,KAAK9Z,GACpB,OAAOA,EAIT,IAAM+Z,EAAUhK,MAAMC,QAAQ6J,GAAkBA,EAAe1Z,KAAK,KAAO,aAE3E,OADW,IAAI6Z,OAAO,MAAQD,EAAU,SAAU,KAC1CD,KAAK9Z,GAINA,EAHE,K,qvBC3GUia,I,uOAAmBtc,IAAMkE,W,mDAiBZqY,EAAWlH,GACzC,OAAK0G,GAAWQ,EAAUC,KAAMnH,EAAUmH,OAAUnH,EAAUoH,UAGvD,KAFE,CAACD,KAAMD,EAAUC,S,2DAKbxI,GAEb,GADAzT,KAAKyO,SAAS,CAAC0N,SAAU1I,IACP,EAAdA,EAAKrR,OAAY,CACnB,IAAMga,EAAO3I,EAAKA,EAAKrR,OAAO,GACf,KAAXqR,EAAK,GAEW,EAAdA,EAAKrR,QAAsB,KAARga,GACrBpc,KAAKqc,aAAa5I,EAAK/G,UAAU,EAAG+G,EAAKrR,OAAO,IAEjC,KAARga,GAAuB,KAARA,GAAuB,KAARA,GAAuB,KAARA,GAEtDpc,KAAKqc,aAAa5I,EAAK/G,UAAU,EAAG+G,EAAKrR,OAAO,GAAGoI,W,mCAK5C8R,GACX,GAAiB,EAAbA,EAAIla,OAAY,CAClB,IAAM6Z,EAAOjc,KAAKkP,MAAM+M,KAAKtL,MAAM,GAOnC,OANAsL,EAAK9Z,KAAKma,GAEVtc,KAAKyO,SAAS,CAACwN,KAAMA,EAAME,SAAU,KACjCnc,KAAKC,MAAMsc,eACbvc,KAAKC,MAAMsc,cAAcN,GAEpBA,EAET,OAAOjc,KAAKkP,MAAM+M,O,sCAGJK,EAAKjM,GACnB,IAAM4L,EAAOjc,KAAKkP,MAAM+M,KAAKtL,MAAM,GACnCsL,EAAKlF,OAAO1G,EAAO,GACnBrQ,KAAKyO,SAAS,CAACwN,KAAMA,IACjBjc,KAAKC,MAAMsc,eACbvc,KAAKC,MAAMsc,cAAcN,K,qCAM3Bjc,KAAKC,MAAMuX,SAASxX,KAAKqc,aAAarc,KAAKkP,MAAMiN,SAAS3R,SAC1DxK,KAAKyO,SAAS,CAACyN,WAAW,EAAOD,KAAMjc,KAAKC,MAAMgc,S,qCAIlDjc,KAAKyO,SAAS,CAACyN,WAAW,EAAOC,SAAU,GAAIF,KAAMjc,KAAKC,MAAMgc,OAC5Djc,KAAKC,MAAMkT,UACbnT,KAAKC,MAAMkT,a,+BAIN,WACH8I,EAAO,GAiBX,OAhBIjc,KAAKkP,MAAMgN,UACblc,KAAKkP,MAAM+M,KAAKzV,IAAI,SAAC8V,GACnBL,EAAK9Z,KAAK,CAACkE,KAAMiW,EAAKzI,QAAUyI,EAAIla,OvBhEd,OuBmExBpC,KAAKkP,MAAM+M,KAAKzV,IAAI,SAAC8V,GACnBL,EAAK9Z,KAAK,0BAAMhC,UAAU,QAAQnB,IAAKid,EAAK7Z,QAASka,MAEpC,GAAfL,EAAK7Z,SACP6Z,EACE,2BACE,kBAAC,mBAAD,CAAkBxb,GAAG,iBAAiBgX,eAAe,kCAM3D,yBAAKtX,UAAU,qBACb,yBAAKA,UAAU,kBACb,2BAAOA,UAAU,SAASH,KAAKC,MAAMG,QAEtCJ,KAAKkP,MAAMgN,UACZ,6BACE,kBAAC,mBAAD,CAAkBzb,GAAG,sBAAsBgX,eAAe,iBAExD,SAAC+E,GAAD,OAAqB,kBAAC,GAAD,CACnBrI,MAAO8H,EACPxG,gBAAgB,EAChBrB,OAAQoI,EACRlH,QAAS,EAAK+G,aACdhH,YAAa,EAAKgH,aAClBlJ,SAAU,EAAKa,aACfkB,cAAe,EAAKuH,gBACpBtK,WAAY,EAAKuK,mBAEpB1c,KAAKC,MAAMuX,UAAYxX,KAAKC,MAAMkT,SACjC,yBAAK1S,GAAG,sBAAsBN,UAAU,iCACtC,4BAAQA,UAAU,UAAUI,QAASP,KAAKgU,cACxC,kBAAC,mBAAD,CAAkBvT,GAAG,gBAAgBkc,cAAc,SAASC,YAAY,+BAE1E,4BAAQzc,UAAU,OAAOI,QAASP,KAAK8X,cACrC,kBAAC,mBAAD,CAAkBrX,GAAG,YAAYkc,cAAc,KAAKC,YAAY,+BAGpE,MAGJ,yBAAKzc,UAAU,UACb,uBAAGgP,KAAK,IAAIhP,UAAU,cAAcI,QAAS,SAAC0D,GAAOA,EAAEI,iBAAkB,EAAKoK,SAAS,CAACyN,WAAW,MACjG,uBAAG/b,UAAU,kBAAb,QADF,KAC+C,kBAAC,mBAAD,CAAkBM,GAAG,oBAAoBgX,eAAe,YAGvG,oCAAGwE,S,kBAjIX,YAAYhc,GAAO,M,IAAA,O,4FAAA,U,EACjB,U,EAAA,iBAAMA,K,gDAEDiP,MAAQ,CACX+M,KAAM,EAAKhc,MAAMgc,KACjBE,SAAU,GACVD,UAAW,EAAKjc,MAAMic,WAGxB,EAAKQ,eAAiB,EAAKA,eAAezd,KAApB,OACtB,EAAKod,aAAe,EAAKA,aAAapd,KAAlB,OACpB,EAAKwd,gBAAkB,EAAKA,gBAAgBxd,KAArB,OACvB,EAAK6Y,aAAe,EAAKA,aAAa7Y,KAAlB,OACpB,EAAK+U,aAAe,EAAKA,aAAa/U,KAAlB,OAbH,E,2uBCYrB,I,MAAM0D,GAAWC,yBAAe,CAC9Bia,UAAW,CAAF,uDAKTC,QAAS,CAAF,mDAKPC,iBAAkB,CAAF,mEAKhBC,WAAY,CAAF,8CAKVna,eAAgB,CAAF,4DAKdoa,uBAAwB,CAAF,gHAKtBC,gBAAiB,CAAF,qEAKfC,wBAAyB,CAAF,+HAKvBC,WAAY,CAAF,4DAKVC,mBAAoB,CAAF,4FAKlBC,cAAe,CAAF,0DAKbC,sBAAuB,CAAF,0FAKrBC,YAAa,CAAF,8DAKXC,oBAAqB,CAAF,0GAOfC,I,uOAAiBje,IAAMkE,W,+DA4DR1D,GACjB,IAAMwC,EAAQzC,KAAKC,MAAMoF,OAAOC,SAASrF,EAAMwC,OAC1CA,IAIDzC,KAAK2d,YAAclb,EAAMkb,aAC3B3d,KAAK4d,iBAAmBnb,EAAMkb,WAC9Blb,EAAMkb,WAAa3d,KAAK2d,WAExB3d,KAAK6d,oBAAsBpb,EAAMqb,cACjCrb,EAAMqb,cAAgB9d,KAAK8d,cAEJ,OAAnBrb,EAAMsb,WACR/d,KAAKge,oBAAsBvb,EAAMwb,cACjCxb,EAAMwb,cAAgBje,KAAKie,eAE3Bje,KAAKge,yBAAsBxI,GAI3BxV,KAAKkP,MAAMzM,OAASxC,EAAMwC,QAC5BzC,KAAKyO,SAAS,CAAChM,MAAOxC,EAAMwC,QAC5BzC,KAAKke,UAAUzb,EAAOxC,GACtBD,KAAKme,UAAU1b,EAAOxC,O,6CAKxB,IAAMwC,EAAQzC,KAAKC,MAAMoF,OAAOC,SAAStF,KAAKC,MAAMwC,OAC/CA,IAGLzC,KAAKyO,SAAS,CAAChM,MAAO,OACtBA,EAAMkb,WAAa3d,KAAK4d,iBACxBnb,EAAMqb,cAAgB9d,KAAK6d,oBAC3Bpb,EAAMwb,cAAgBje,KAAKge,uB,gCAGnBvb,EAAOxC,GACf,IAAMme,EAAW,CAACC,YAAa,IAC/B,GAAuB,OAAnB5b,EAAMsb,UAAoB,CAG5B,IAAMO,EAAQ7b,EAAM8b,WAAWte,EAAMwC,OACjC6b,GACFF,EAASI,WAAaF,EAAMhO,IAAImO,WAChCL,EAASM,UAAYJ,EAAMhO,IAAIqO,YAE/BP,EAASI,WxB3Ka,IwB4KtBJ,EAASM,UxB5Ka,UwB+KxBjc,EAAMmc,YAAY,SAACC,GACjBT,EAASC,YAAYlc,KAAK0c,IACzB7e,MAGLA,KAAKyO,SAAS2P,K,gCAGN3b,GACR,IAAMqc,EAASrc,EAAMsc,oBAAsB,GACrCzO,EAAM7N,EAAMuc,gBAElBhf,KAAKyO,SAAS,CACZ2L,MAAO9J,GAAOA,EAAIoC,UAClBuM,MAAO3O,GAAOA,EAAI4O,UAClBhF,OAAQ5J,GAAOA,EAAI6O,WACnBhF,QAAS7J,GAAOA,EAAI8O,YACpBC,MAAO/O,GAAOA,EAAIS,UAElBuO,SAAU7c,EAAM8P,OAAS9P,EAAM8P,OAAOC,QAAKgD,EAC3CvL,OAAQe,GAAavI,EAAM8P,OAAS9P,EAAM8P,OAAOtH,MAAQ,MACzDoH,QAAS5P,EAAM4P,QAAU5P,EAAM4P,QAAQhB,QAAU,KACjDkO,QAAS9c,EAAMzE,KACfwhB,WAAgC,OAAnB/c,EAAMsb,UACnB0B,iBAAiB,EACjBC,OAAQpP,EAAMA,EAAIQ,eAAY0E,EAC9BmK,UAAWrP,EAAMA,EAAImO,gBAAajJ,EAClCoK,SAAUtP,EAAMA,EAAIqO,eAAYnJ,EAChCqK,KAAMf,EAAOe,KACbC,KAAMhB,EAAOgB,OAGQ,OAAnBrd,EAAMsb,WAAsBzN,GAAOA,EAAIoC,WAEzCjQ,EAAMsd,QAAQtd,EAAMud,iBAAiBC,WAAWC,W,iCAIzCC,GACT,IAAM1d,EAAQzC,KAAKC,MAAMoF,OAAOC,SAAStF,KAAKC,MAAMwC,OAC/CA,IAGLzC,KAAKke,UAAUzb,EAAOzC,KAAKC,OAEvBD,KAAK4d,kBAAoB5d,KAAK4d,kBAAoB5d,KAAK2d,YACzD3d,KAAK4d,iBAAiBuC,M,oCAIZC,GACZ,IAAM3d,EAAQzC,KAAKC,MAAMoF,OAAOC,SAAStF,KAAKC,MAAMwC,OAC/CA,IAGLzC,KAAKme,UAAU1b,EAAOzC,KAAKC,OAEvBD,KAAK6d,qBAAuB7d,KAAK6d,qBAAuB7d,KAAK8d,eAC/D9d,KAAK6d,oBAAoBuC,M,oCAIfnE,GACZjc,KAAKyO,SAAS,CAACwN,KAAMA,IAEjBjc,KAAKge,qBAAuBhe,KAAKge,qBAAuBhe,KAAKie,eAC/Dje,KAAKge,wB,2CAIYxL,GACnBA,EAAKA,EAAGhI,OAAOkC,UAAU,ExB/MG,IwBgNxB1M,KAAKkP,MAAMoQ,WAAa9M,IAC1BxS,KAAKyO,SAAS,CAAC6Q,SAAU9M,IACzBxS,KAAKC,MAAMogB,kBAAkBrgB,KAAKC,MAAMwC,MAAO2Y,GAAM5I,EAAI,MAAO,S,0CAIhDnB,GAClBA,EAAUA,EAAQ7G,OAAOkC,UAAU,ExBvNP,IwBwNxB1M,KAAKkP,MAAMmD,UAAYhB,IACzBrR,KAAKyO,SAAS,CAAC4D,QAAShB,IACxBrR,KAAKC,MAAMogB,kBAAkBrgB,KAAKC,MAAMwC,MAAO,KAAM4O,GAAW1R,IAAO2gB,a,yCAIxDxT,GACjB9M,KAAKyO,SAAS,CAACxE,OAAQ6C,IACvB9M,KAAKC,MAAMogB,kBAAkBrgB,KAAKC,MAAMwC,MAAO2Y,GAAM,KAAMtO,GAAOnN,IAAO2gB,UAAW,Q,kCAG1EC,EAAS7Q,GACnB1P,KAAKyO,SAAS,CAAC4Q,MAAO3P,IACtB1P,KAAKC,MAAMugB,oBAAoBxgB,KAAKC,MAAMwC,MAAOiN,EAAU,KAAO,Q,+CAG3C+Q,GACvB,OAAQzgB,KAAKkP,MAAMwR,yBACjB,IAAK,OACH1gB,KAAKC,MAAMogB,kBAAkBrgB,KAAKC,MAAMwC,MAAO,KAAM,KAAM,CAACod,KAAMY,IAClE,MACF,IAAK,OACHzgB,KAAKC,MAAMogB,kBAAkBrgB,KAAKC,MAAMwC,MAAO,KAAM,KAAM,CAACqd,KAAMW,IAClE,MACF,IAAK,OACL,IAAK,OACHzgB,KAAKC,MAAMugB,oBAAoBxgB,KAAKC,MAAMwC,MAAOge,GACjD,MACF,IAAK,QACHzgB,KAAKC,MAAMugB,oBAAoBxgB,KAAKC,MAAMwC,MAAOge,EAAMzgB,KAAKC,MAAMwC,OAClE,MACF,IAAK,OACHzC,KAAKC,MAAMugB,oBAAoBxgB,KAAKC,MAAMwC,MAAOge,EAAMzgB,KAAKkP,MAAMyR,uBAItE3gB,KAAKyO,SAAS,CAACiS,6BAAyBlL,M,oDAGZoL,EAAOxR,GAAK,IAEpCyR,EAAQC,EAAWC,EAAQC,EAAWC,EAAc1G,EAAWC,EAD5DlT,EAAiBtH,KAAKC,MAAMsH,KAA5BD,cAEP,OAAQsZ,GACN,IAAK,OACHC,EAAS7gB,KAAKkP,MAAMwQ,OACpB,MACF,IAAK,OACHmB,EAAS7gB,KAAKkP,MAAM0Q,SACpBkB,EAAY9gB,KAAKkP,MAAMyQ,UACvBoB,EAAS/gB,KAAKkP,MAAMsQ,WAAa,IAAM,OACvCwB,EAAY1Z,EAAc3E,GAASka,WACnCoE,EAAe3Z,EAAc3E,GAASma,SACtC,MACF,IAAK,QACH+D,EAAS7gB,KAAKkP,MAAMsP,WACpBsC,EAAY9gB,KAAKkP,MAAMwP,UACvBqC,EAAS/gB,KAAKkP,MAAMsQ,WAAcxf,KAAKkP,MAAMkL,MAAQ,GAAK,IAAO,OACjE4G,EAAY1Z,EAAc3E,GAASma,SACnCmE,EAAe3Z,EAAc3E,GAASka,WACtC,MACF,IAAK,OACHgE,EAAS7gB,KAAKkP,MAAM2Q,KACpBkB,EAAS,IACT,MACF,IAAK,OACHF,EAAS7gB,KAAKkP,MAAM4Q,KACpBiB,EAAS,IACT,MACF,IAAK,OACH,IAAIte,EAAQzC,KAAKC,MAAMoF,OAAOC,SAAStF,KAAKC,MAAMwC,OAClD,IAAKA,EACH,OAEF,IAAI4D,EAAO5D,EAAM8b,WAAWnP,GAC5B,IAAK/I,IAASA,EAAKiK,IACjB,OAEFuQ,EAASxa,EAAKiK,IAAImO,WAClBqC,EAAYza,EAAKiK,IAAIqO,UACrBoC,EAAS/gB,KAAKkP,MAAMkL,MAAQ,GAAK,IACjC4G,EAAY1Z,EAAc3E,GAASma,SACnCmE,EAAe3Z,EAAc3E,GAASka,WAClCxW,EAAKkM,SACPgI,EAAYlU,EAAKkM,OAAOC,GACxBgI,EAAanU,EAAKkM,OAAOtH,OAE3B,MAEF,QACEjG,QAAQC,IAAI,oCAAsC2b,EAAQ,KAG9D5gB,KAAKyO,SAAS,CACZiS,wBAAyBE,EACzBD,sBAAuBvR,EACvB8R,qBAAsB3G,EACtB4G,sBAAuB3G,EACvB4G,kBAAmBP,EACnBQ,qBAAsBP,EACtBQ,uBAAwBN,EACxBO,0BAA2BN,EAC3BO,yBAA0BT,M,oDAK5B/gB,KAAKyO,SAAS,CAACiS,6BAAyBlL,M,2CAGrBvR,GACnBA,EAAEI,iBACFrE,KAAKC,MAAMwhB,aACXzhB,KAAKyO,SAAS,CAACgR,iBAAiB,M,6CAIhCzf,KAAKyO,SAAS,CAACgR,iBAAiB,M,gDAGRpJ,EAASgB,EAAOpC,GACxCjV,KAAKC,MAAMyhB,sBAAsB1hB,KAAKC,MAAMwC,MAAO4U,EAAOpC,GAC1DjV,KAAKyO,SAAS,CAACgR,iBAAiB,M,2CAGbxb,GAAG,WACtBA,EAAEI,iBADoB,IAEfiD,EAAiBtH,KAAKC,MAAMsH,KAA5BD,cACPtH,KAAKC,MAAMuH,YACTF,EAActH,KAAKkP,MAAMiL,QAAUxX,GAASua,gBAAkBva,GAASE,gBACvEyE,EAActH,KAAKkP,MAAMiL,QAAUxX,GAASwa,wBAA0Bxa,GAASsa,wBAC9E,WAAQ,EAAKhd,MAAM0hB,iBAAiB,EAAK1hB,MAAMwC,QAChD,MACA,EACA,Q,kCAIQwB,GAAG,WACbA,EAAEI,iBADW,IAENiD,EAAiBtH,KAAKC,MAAMsH,KAA5BD,cACPtH,KAAKC,MAAMuH,YACTF,EAAc3E,GAASya,YACvB9V,EAAc3E,GAAS0a,oBACtB,WAAQ,EAAKpd,MAAM2hB,aAAa,EAAK3hB,MAAMwC,QAC5C,MACA,EACA,Q,kCAIQwB,GAAG,WACbA,EAAEI,iBADW,IAENiD,EAAiBtH,KAAKC,MAAMsH,KAA5BD,cACPtH,KAAKC,MAAMuH,YACTF,EAAc3E,GAAS2a,eACvBhW,EAAc3E,GAAS4a,uBACtB,WAAQ,EAAKtd,MAAM4hB,aAAa,EAAK5hB,MAAMwC,QAC5C,MACA,EACA,Q,mCAISwB,GAAG,WACdA,EAAEI,iBADY,IAEPiD,EAAiBtH,KAAKC,MAAMsH,KAA5BD,cACPtH,KAAKC,MAAMuH,YACTF,EAAc3E,GAAS6a,aACvBlW,EAAc3E,GAAS8a,qBACtB,WAAQ,EAAKxd,MAAM6hB,cAAc,EAAK7hB,MAAMwC,QAC7C,MACA,EACA,Q,2CAIiB2M,GACnBpP,KAAKyO,SAAS,CAACsT,gBAAiB3S,M,qCAGnBmK,GACbvZ,KAAKyO,SAAS,CAACuT,iBAAkBzI,M,wCAGjB0C,GACXT,GAAWxb,KAAKkP,MAAM+M,KAAKtL,MAAM,GAAIsL,EAAKtL,MAAM,KACnD3Q,KAAKC,MAAMgiB,kBAAkBjiB,KAAKC,MAAMwC,MAAOwZ,K,wCAIjC1a,GAAQ,IACjB+F,EAAiBtH,KAAKC,MAAMsH,KAA5BD,cACD8P,EAAWpX,KACXyC,EAAQzC,KAAKC,MAAMoF,OAAOC,SAAStF,KAAKC,MAAMwC,OACpD,GAAKA,EAAL,CAGA,IAAM4D,EAAO5D,EAAM8b,WAAWhd,EAAOgE,WACrC,GAAKc,GAASA,EAAKiK,IAAnB,CAIA,IAAM4R,EAAY,CAChB,CAAC9hB,MAAOkH,EAAc3E,GAASoa,kBAAmBjY,QAAS,WACzDsS,EAAS+K,8BAA8B,OAAQ5gB,EAAOgE,aAExD,gBACAc,EAAKiK,IAAIS,UAAY,gBAAkB,cACvC1K,EAAKiK,IAAIU,WAAa,eAAiB,kBAEzChR,KAAKC,MAAMsQ,gBAAgB,CACzBhL,UAAWvF,KAAKC,MAAMwC,MACtBwE,EAAG1F,EAAO0F,EACVG,EAAG7F,EAAO6F,EACVf,KAAM9E,EAAOgE,WAAY2c,O,+BAGpB,WACA5a,EAAiBtH,KAAKC,MAAMsH,KAA5BD,cAEP,OACE,yBAAK7G,GAAG,aACN,yBAAKN,UAAU,gBAAgBM,GAAG,sBAChC,yBAAKN,UAAU,cAAcM,GAAG,cAC9B,kBAAC,mBAAD,CAAkBA,GAAG,aAAagX,eAAe,UAEnD,6BACE,kBAAC,GAAD,CAAYtE,SAAUnT,KAAKC,MAAMkT,aAGpCnT,KAAKC,MAAMmiB,cACV,kBAAC,GAAD,CACE/O,MAAOrT,KAAKC,MAAMoiB,WAClB5O,KAAMzT,KAAKC,MAAMqiB,UACjB/O,aAAcvT,KAAKC,MAAM8E,UAAc,KAC1C/E,KAAKkP,MAAMuQ,gBACV,kBAAC,GAAD,CACEpJ,QAASrW,KAAKkP,MAAMmP,YACpB5H,eAAgBzW,KAAKC,MAAMwS,SAC3BuF,oBAAqBhY,KAAKkP,MAAM+P,QAAUjf,KAAKkP,MAAMkL,MACrD3H,SAAUzS,KAAKC,MAAMwS,SACrBP,SAAUlS,KAAKC,MAAMsiB,mBACrBpP,SAAUnT,KAAKwiB,qBACfhL,SAAUxX,KAAKyiB,4BAEnBziB,KAAKkP,MAAMwR,wBACT,kBAAC,GAAD,CACE9hB,KAAMoB,KAAKkP,MAAMkS,kBACjB9G,QAASta,KAAKkP,MAAMmS,qBACpBhH,KAAMra,KAAKkP,MAAMsS,yBACjB/G,UAAWza,KAAKkP,MAAMoS,uBACtB5G,aAAc1a,KAAKkP,MAAMqS,0BACzBhH,UAAWva,KAAKkP,MAAMgS,qBACtBtf,KAAM5B,KAAKkP,MAAMyR,sBACjBnG,WAAYxa,KAAKkP,MAAMiS,sBACvB3J,SAAUxX,KAAK0iB,yBACfvP,SAAUnT,KAAK2iB,8BAGjB,yBAAKliB,GAAG,oBAAoBN,UAAU,oBACpC,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,qBACb,6BAAK,2BAAOA,UAAU,SACpB,kBAAC,mBAAD,CAAkBM,GAAG,mBAAmBgX,eAAe,WAGzD,6BAAK,kBAAC,GAAD,CACDvD,YAAalU,KAAKkP,MAAMsQ,WAAa,aAAe,sCACpDvQ,UAAWjP,KAAKkP,MAAMkL,MACtB1b,MAAOsB,KAAKkP,MAAMoQ,SAClBvL,UAAU,EACVmE,WAAYlY,KAAK4iB,wBACrB,6BACE,2BAAOziB,UAAU,SACf,kBAAC,mBAAD,CAAkBM,GAAG,gBAAgBgX,eAAe,sBAIxD,6BACE,kBAAC,mBAAD,CAAkBhX,GAAG,8BACnBgX,eAAe,uBAEf,SAACoL,GAAD,OAAyB,kBAAC,GAAD,CACvB3O,YAAa2O,EACbnkB,MAAO,EAAKwQ,MAAMmD,QAClB6F,WAAY,EAAK4K,0BAIzB,kBAAC,GAAD,CACE7Y,OAAQjK,KAAKkP,MAAMjF,OACnBgF,UAAWjP,KAAKkP,MAAMkL,MACtBhL,IAAKpP,KAAKC,MAAMwC,MAChBrC,MAAOJ,KAAKkP,MAAMoQ,SAClBxQ,eAAgB9O,KAAK+iB,mBACrBhe,QAAS/E,KAAKC,MAAM8E,WAExB,yBAAK5E,UAAU,OACf,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,kBACb,+BACE,kBAAC,mBAAD,CAAkBM,GAAG,qBAAqBgX,eAAe,YAG3D,kBAAC,GAAD,CAAUzZ,KAAK,IAAI0R,QAAS1P,KAAKkP,MAAMmQ,MACrC/P,SAAUtP,KAAKgjB,eAEnB,kBAAC,mBAAD,CAAkBviB,GAAG,cAAcgX,eAAe,QAEhD,SAACwL,GAAD,OAAU,kBAAC,GAAD,CACR7iB,MAAO6iB,EACP1J,KAAM,EAAKrK,MAAM8S,iBACjBxI,SAAU,EAAK0J,mBAElBljB,KAAKkP,MAAM8S,iBACV,yBAAK7hB,UAAU,qBACb,yBAAKA,UAAU,kBACb,+BAAO,kBAAC,mBAAD,CAAkBM,GAAG,mBAC5B,4BAAKT,KAAKkP,MAAMqQ,UAEjBvf,KAAKkP,MAAMsQ,WACV,yBAAKrf,UAAU,kBACb,+BACE,kBAAC,mBAAD,CAAkBM,GAAG,yBAAyBgX,eAAe,uBAG/D,wBAAItX,UAAU,YACZI,QAASP,KAAKmiB,8BAA8BljB,KAAKe,KAAM,SACtDA,KAAKkP,MAAMwQ,SAIhB,6BACE,6BACE,2BAAOvf,UAAU,SACf,kBAAC,mBAAD,CAAkBM,GAAG,oBAAoBgX,eAAe,mBAI5D,yBAAKtX,UAAU,UACb,6BACE,kBAAC,mBAAD,CAAkBM,GAAG,YAAYgX,eAAe,SADlD,KAEsD,wBAAItX,UAAU,YAClEI,QAASP,KAAKmiB,8BAA8BljB,KAAKe,KAAM,SACtDA,KAAKkP,MAAMwQ,SAEd,6BAAM1f,KAAKkP,MAAMoQ,SAAWtf,KAAKkP,MAAMoQ,SAAWhY,EAAc3E,GAASqa,YAAzE,MACQ,wBAAI7c,UAAU,YAAYI,QAASP,KAAKmiB,8BAA8BljB,KAAKe,KAAM,UACtFA,KAAKkP,MAAMsP,eAMnBxe,KAAKkP,MAAMgL,SAAWla,KAAKkP,MAAM2Q,MAAQ7f,KAAKkP,MAAM4Q,MACrD,6BACE,6BACE,2BAAO3f,UAAU,SACf,kBAAC,mBAAD,CAAkBM,GAAG,uBAAuBgX,eAAe,2BAI/D,yBAAKtX,UAAU,UACb,sCAAYH,KAAKkP,MAAM+P,MACrB,wBAAI9e,UAAU,YACZI,QAASP,KAAKmiB,8BAA8BljB,KAAKe,KAAM,SACtDA,KAAKkP,MAAM2Q,MAGd,4BAAK7f,KAAKkP,MAAM2Q,OAGlB,sCAAY7f,KAAKkP,MAAM+P,MACrB,wBAAI9e,UAAU,YACZI,QAASP,KAAKmiB,8BAA8BljB,KAAKe,KAAM,SACtDA,KAAKkP,MAAM4Q,MAGd,4BAAK9f,KAAKkP,MAAM4Q,SAMtB,MAIJ,MAGF,yBAAK3f,UAAU,OACdH,KAAKkP,MAAMkL,MACV,oCACE,kBAAC,mBAAD,CAAkB3Z,GAAG,qBACnB,SAACwb,GAAD,OAAU,kBAAC,GAAD,CACR7b,MAAO6b,EACPA,KAAM,EAAK/M,MAAM+M,KACjBC,WAAW,EACX1E,SAAU,EAAK2L,sBAEnB,yBAAKhjB,UAAU,QAGjB,KAEF,yBAAKA,UAAU,qBACb,uBAAGgP,KAAK,IAAIhP,UAAU,cAAcI,QAASP,KAAKojB,sBAChD,uBAAGjjB,UAAU,kBAAb,kBADF,KAEImH,EAActH,KAAKkP,MAAMiL,QAAUxX,GAASua,gBAAkBva,GAASE,iBAG3E,uBAAGsM,KAAK,IAAIhP,UAAU,kBAAkBI,QAASP,KAAKqjB,aACpD,uBAAGljB,UAAU,kBAAb,eADF,KACuDmH,EAAc3E,GAASya,aAE5Epd,KAAKkP,MAAMsQ,WAKX,KAJA,uBAAGrQ,KAAK,IAAIhP,UAAU,kBAAkBI,QAASP,KAAKsjB,aACpD,uBAAGnjB,UAAU,kBAAb,SADF,KACiDmH,EAAc3E,GAAS2a,gBAKxEtd,KAAKkP,MAAMkL,MAKX,KAJA,uBAAGjL,KAAK,IAAIhP,UAAU,kBAAkBI,QAASP,KAAKujB,cACpD,uBAAGpjB,UAAU,kBAAb,UADF,KACkDmH,EAAc3E,GAAS6a,eAM5Exd,KAAKkP,MAAMsQ,WACV,oCACE,yBAAKrf,UAAU,OACf,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,kBACb,2BAAOA,UAAU,SACf,kBAAC,mBAAD,CAAkBM,GAAG,sBAAsBgX,eAAe,qBAI9D,yBAAKtX,UAAU,kBACZH,KAAKkP,MAAMgL,OACV,uBAAG/K,KAAK,IAAIhP,UAAU,cAAcI,QAASP,KAAKwjB,sBAChD,uBAAGrjB,UAAU,kBAAb,cADF,KACqD,kBAAC,mBAAD,CAAkBM,GAAG,qBACtEgX,eAAe,iBAEjB,MAEN,kBAAC,mBAAD,CAAkBhX,GAAG,uBAAuBgX,eAAe,cAEzD,SAACgM,GAAD,OAAgB,kBAAC,GAAD,CACdvR,SAAU,EAAKhD,MAAMmP,YACrB5L,SAAU,EAAKxS,MAAMwS,SACrBQ,iBAAkBwQ,EAClB1R,cAAe,EAAK7C,MAAM6S,gBAC1B5Q,YAAY,EACZwB,YAAY,EACZ9B,UAAU,EACViC,UAAU,EACVD,gBAAiB,EAAK6Q,qBACtBnT,kBAAiB,EAAKrB,MAAM+P,OAAQ,EAAK0E,wBAMjD,W,kBAlpBZ,YAAY1jB,GAAO,M,IAAA,O,4FAAA,U,EACjB,U,EAAA,iBAAMA,K,gDAEDiP,MAAQ,CACXzM,MAAO,KACP2X,OAAO,EACP6E,OAAO,EACP/E,QAAQ,EACRC,SAAS,EACTkF,OAAO,EACPE,QAAS,KACTC,gBAAYhK,EACZ8J,cAAU9J,EACVvL,OAAQ,KACRoI,QAAS,KACT0P,gBAAiB,KACjBrC,OAAQ,KACRC,UAAW,KACXC,SAAU,KACVpB,WAAY,KACZE,UAAW,KACXmB,KAAM,KACNC,KAAM,KACNzB,YAAa,GACbpC,KAAM,GACNwD,iBAAiB,EACjBiB,6BAAyBlL,EACzBwM,kBAAkB,EAClBpE,sBAAkBpI,EAClBqI,yBAAqBrI,EACrBwI,yBAAqBxI,GAGvB,EAAK2I,UAAY,EAAKA,UAAUlf,KAAf,OACjB,EAAKif,UAAY,EAAKA,UAAUjf,KAAf,OACjB,EAAK0e,WAAa,EAAKA,WAAW1e,KAAhB,OAClB,EAAK6e,cAAgB,EAAKA,cAAc7e,KAAnB,OACrB,EAAKgf,cAAgB,EAAKA,cAAchf,KAAnB,OACrB,EAAK2jB,qBAAuB,EAAKA,qBAAqB3jB,KAA1B,OAC5B,EAAK6jB,oBAAsB,EAAKA,oBAAoB7jB,KAAzB,OAC3B,EAAK8jB,mBAAqB,EAAKA,mBAAmB9jB,KAAxB,OAC1B,EAAK+jB,YAAc,EAAKA,YAAY/jB,KAAjB,OACnB,EAAKyjB,yBAA2B,EAAKA,yBAAyBzjB,KAA9B,OAChC,EAAKkjB,8BAAgC,EAAKA,8BAA8BljB,KAAnC,OACrC,EAAK0jB,4BAA8B,EAAKA,4BAA4B1jB,KAAjC,OACnC,EAAKukB,qBAAuB,EAAKA,qBAAqBvkB,KAA1B,OAC5B,EAAKujB,qBAAuB,EAAKA,qBAAqBvjB,KAA1B,OAC5B,EAAKwjB,0BAA4B,EAAKA,0BAA0BxjB,KAA/B,OACjC,EAAKmkB,qBAAuB,EAAKA,qBAAqBnkB,KAA1B,OAC5B,EAAKokB,YAAc,EAAKA,YAAYpkB,KAAjB,OACnB,EAAKqkB,YAAc,EAAKA,YAAYrkB,KAAjB,OACnB,EAAKskB,aAAe,EAAKA,aAAatkB,KAAlB,OACpB,EAAKykB,qBAAuB,EAAKA,qBAAqBzkB,KAA1B,OAC5B,EAAKikB,eAAiB,EAAKA,eAAejkB,KAApB,OACtB,EAAKkkB,kBAAoB,EAAKA,kBAAkBlkB,KAAvB,OACzB,EAAK0kB,kBAAoB,EAAKA,kBAAkB1kB,KAAvB,OAvDR,EA2pBNiJ,4BAAWwV,I,0zBCvvBLkG,I,uOAAqBnkB,IAAMM,e,qDACrC,WACP,OACE,yBAAKI,UAAU,YACb,6BAAK,0BAAMkH,MAAO,CAACgE,MAA8B,IAAtBrL,KAAKC,MAAM4jB,SAAkB,QACvD7jB,KAAKC,MAAM4jB,SAAW,KACrB,uBAAG1U,KAAK,IAAI5O,QAAS,SAAC0D,GAAOA,EAAEI,iBAAkB,EAAKpE,MAAMkT,aAC1D,uBAAGhT,UAAU,kBAAb,SADF,IAC0C,kBAAC,mBAAD,CAAkBM,GAAG,gBAC3DgX,eAAe,YAGnB,kBAAC,mBAAD,CAAkBhX,GAAG,mBAAmBgX,eAAe,sB,w6BCR5CqM,I,uOAAmBrkB,IAAMkE,W,yDAa/B7B,EAAKiiB,EAAUC,GAAU,WAChCC,EAAajkB,KAAKC,MAAMoF,OAAO6e,qBACnClkB,KAAKyO,SAAS,CAACwV,WAAYA,IAC3BA,EAAWE,SAASriB,EAAKiiB,EAAUC,EAAU,SAACI,GAC5C,EAAK3V,SAAS,CAACoV,SAAUO,EAAS,EAAKnkB,MAAM0L,SAC5C9D,KAAK,WACN,EAAK4G,SAAS,CAACwV,WAAY,KAAMJ,SAAU,MAC1Cje,MAAM,SAACC,GACJA,GACF,EAAK5F,MAAM8E,QAAQ,2BAA6Bc,EAAIC,QAAS,OAE/D,EAAK2I,SAAS,CAACwV,WAAY,KAAMJ,SAAU,Q,qCAKzC7jB,KAAKC,MAAMokB,SACbrkB,KAAKC,MAAMqkB,iBACFtkB,KAAKkP,MAAM+U,YACpBjkB,KAAKkP,MAAM+U,WAAWM,W,+BAIjB,WACHR,EAAW/jB,KAAKC,MAAM8jB,UAAY,kBAChB,GAAlBA,EAAS3hB,SACX2hB,EAAWA,EAAStiB,OAAO,EAAG,IAAM,MAAQsiB,EAAStiB,QAAQ,KAE/D,IAOIK,EAAK0iB,EJkCiB1iB,EIzCtB6J,EAAyB,EAAlB3L,KAAKC,MAAM0L,KACpB,0BAAMxL,UAAU,cAAhB,IAA+BkJ,EAAiBrJ,KAAKC,MAAM0L,MAA3D,KACA,KAiBF,OAFE6Y,EATGxkB,KAAKC,MAAMokB,UAAarkB,KAAKkP,MAAM+U,aJiCdniB,EIjC0C9B,KAAKC,MAAMwkB,YJkCzE,kCAAkC7I,KAAK9Z,KI1B3CA,EAAM4Z,GAAY1b,KAAKC,MAAMwkB,cAAgB,cAChC,OAPb3iB,EAAM,IACO,SAACmC,GACZA,EAAEI,iBACF,EAAKqgB,aAAa,EAAKzkB,MAAMwkB,YAAa,EAAKxkB,MAAM8jB,SAAU,EAAK9jB,MAAM+jB,YAO5E,yBAAK7jB,UAAU,cACb,6BAAK,uBAAGA,UAAU,2BAAb,sBACL,yBAAKA,UAAU,eACb,6BAAM4jB,EAAN,IAAiBpY,GAChB3L,KAAKC,MAAMokB,UAAYrkB,KAAKkP,MAAM+U,WACjC,kBAAC,GAAD,CAAcJ,SAAU7jB,KAAKC,MAAMokB,SAAWrkB,KAAKC,MAAM4jB,SAAW7jB,KAAKkP,MAAM2U,SAC7E1Q,SAAUnT,KAAKgU,eAEjB,6BAAK,uBAAG7E,KAAMrN,EAAKqiB,SAAUnkB,KAAKC,MAAM8jB,SAAUxjB,QAASikB,GACzD,uBAAGrkB,UAAU,kBAAb,iBADG,IAC6C,kBAAC,mBAAD,CAAkBM,GAAG,kBACnEgX,eAAe,iB,kBAtE7B,YAAYxX,GAAO,M,IAAA,O,4FAAA,U,EACjB,U,EAAA,iBAAMA,K,gDAEDiP,MAAQ,CACX+U,WAAY,KACZJ,SAAU,GAGZ,EAAKa,aAAe,EAAKA,aAAazlB,KAAlB,OACpB,EAAK+U,aAAe,EAAKA,aAAa/U,KAAlB,OATH,E,gzBCArB,I,MAAM0D,GAAWC,yBAAe,CAC9B,2DAKA,+DAOI+hB,I,uOAAuBllB,IAAMM,e,qDACxB,IAEH6kB,EADGtd,EAAiBtH,KAAKC,MAAMsH,KAA5BD,cAGLsd,EADE5kB,KAAKC,MAAM4kB,UAAYllB,IAAOmlB,uBACpBxd,EAAc3E,GAASoiB,SAC1B/kB,KAAKC,MAAM4kB,UAAYllB,IAAOqlB,sBAC3B1d,EAAc3E,GAASsiB,QAEvB9c,EAAgBnI,KAAKC,MAAM2kB,UAAW5kB,KAAKC,MAAMsH,KAAKa,QAGpE,IAAI8c,EAAS,KAab,OAZIllB,KAAKC,MAAM4kB,UAAYllB,IAAOmlB,uBAChCI,EAAU,uBAAG/kB,UAAU,wBAAb,eACDH,KAAKC,MAAM4kB,UAAYllB,IAAOqlB,sBACvCE,EAAU,uBAAG/kB,UAAU,8BAAb,WACDH,KAAKC,MAAM4kB,UAAYllB,IAAOwlB,oBACvCD,EAAU,uBAAG/kB,UAAU,wBAAb,QACDH,KAAKC,MAAM4kB,UAAYllB,IAAOylB,wBACvCF,EAAU,uBAAG/kB,UAAU,wBAAb,YACDH,KAAKC,MAAM4kB,UAAYllB,IAAO0lB,sBACvCH,EAAU,uBAAG/kB,UAAU,6BAAb,aAIV,0BAAMA,UAAU,aACbykB,EAAW,IAAUM,O,mLAMfhd,4BAAWyc,I,qvBC5CLW,I,uOAAoB7lB,IAAMkE,W,+DAkB1BM,GACjBA,EAAEI,iBACFrE,KAAKC,MAAMslB,eAAe,CACxBzjB,IAAKmC,EAAEG,OAAOwG,IACdmZ,SAAU9f,EAAEG,OAAOhE,MACnBiL,MAAOpH,EAAEG,OAAOO,QAAQ0G,MACxBC,OAAQrH,EAAEG,OAAOO,QAAQ2G,OACzBK,KAAM1H,EAAEG,OAAOO,QAAQgH,KACvBT,KAAMjH,EAAEG,OAAOO,QAAQyH,S,4CAILnI,GACpBA,EAAEI,iBACF,IAAM8G,EAAO,CACX1F,IAAKzF,KAAKC,MAAMwF,IAElB0F,KAAY,IACRlH,EAAEG,OAAOO,QAAQ3G,OACnBmN,EAAKqa,KAAKvhB,EAAEG,OAAOO,QAAQ3G,MAAQiG,EAAEG,OAAOO,QAAQqS,IAAM/S,EAAEG,OAAOO,QAAQqS,SAChDxB,IAAzBvR,EAAEG,OAAOO,QAAQqS,IAAoB,EAAI,GAAK/S,EAAEG,OAAOO,QAAQqS,KAEvC,OAAxB/S,EAAEG,OAAOO,QAAQ8gB,MACnBta,EAAKua,IAAMhK,GAAYzX,EAAEG,OAAOO,QAAQ+gB,MAAQ,eAElD,IAAMjS,EAAOxP,EAAEG,OAAOO,QAAQvE,OAAS,UACvCJ,KAAKC,MAAM0lB,eAAe1hB,EAAEG,OAAOO,QAAQ8gB,IAAKhS,EAAMtI,K,yCAGrClH,GACjBA,EAAEI,iBACFJ,EAAEK,kBACF,IAAM4d,EAAYliB,KAAKC,MAAM4kB,UAAYllB,OAAOqlB,sBAAwB,CAAC,wBAA0B,GACnGhlB,KAAKC,MAAMsQ,gBAAgB,CAAE9K,IAAKzF,KAAKC,MAAMwF,IAAKpF,QAASL,KAAKC,MAAMI,QACzC+G,EAAGnD,EAAEuM,MAAOvJ,EAAGhD,EAAEwM,OAASyR,K,qCAG1C0D,GACb5lB,KAAKyO,SAAS,CAACoV,SAAU+B,M,2CAIzB5lB,KAAKC,MAAMokB,SAASE,W,+BAGb,WACDsB,EAAY7lB,KAAKC,MAAM6lB,QAAU,SACpC9lB,KAAKC,MAAM8lB,SAAW,KAAO/lB,KAAKC,MAAM+lB,SAAW,OAAS,SACzDC,EAAsC,UAAvBjmB,KAAKC,MAAM8lB,UAA+C,QAAvB/lB,KAAKC,MAAM8lB,SAAsB,aAAe,SAClG9b,EAASjK,KAAKC,MAAM6lB,QAAU,KAAQ9lB,KAAKC,MAAMua,aAAc,EAC/D0L,EAAelmB,KAAKC,MAAMkmB,UAAYnmB,KAAKC,MAAM+lB,WAC7B,UAAvBhmB,KAAKC,MAAM8lB,UAA+C,QAAvB/lB,KAAKC,MAAM8lB,UAE7C1lB,EAAUL,KAAKC,MAAMI,QACnB+lB,EAAc,GAgCpB,OA/BIpmB,KAAKC,MAAMomB,UAAYC,SAAOC,kBAChCD,SAAOF,YAAY/lB,EAAS,SAASmmB,EAAK/oB,GACxB,oBAAZ+oB,EAAIpa,MAKRga,EAAYjkB,KAAK,kBAAC,GAAD,CACfkD,OAAQrF,KAAKC,MAAMoF,OACnBof,YAAa6B,SAAOG,eAAeD,GACnCzC,SAAUyC,EAAIxoB,KAAMqmB,SAAUiC,SAAOI,YAAYF,GACjDxC,SAAUwC,EAAIpa,KAAMT,KAAM2a,SAAOK,cAAcH,GAC/C3C,SAAU7jB,KAAKkP,MAAM2U,SACrBS,eAAgBtkB,KAAK4mB,mBACrB7hB,QAAS/E,KAAKC,MAAM8E,QACpB/F,IAAKvB,MACNuC,MACHK,EAAUZ,IAAM2N,cAAc,OAAQ,KAAMkZ,SAAOO,OAAOxmB,EAASymB,GAAiB9mB,QAC3EA,KAAKC,MAAM6lB,QAEpBzlB,EAAU,oCAAE,uBAAGF,UAAU,uBAAb,SAAF,IAA+C,uBAAGA,UAAU,QACpE,kBAAC,mBAAD,CAAkBM,GAAG,kBACnBgX,eAAe,sBAEQ,iBAAXpX,IAChBA,EAAU,oCAAE,uBAAGF,UAAU,uBAAb,iBAAF,IAAuD,uBAAGA,UAAU,QAC5E,kBAAC,mBAAD,CAAkBM,GAAG,kBACnBgX,eAAe,uBAKnB,wBAAItX,UAAW0lB,GACZ7lB,KAAKC,MAAMkmB,UAAYnmB,KAAKC,MAAM+lB,SACjC,yBAAK7lB,UAAU,cACZ+lB,EACC,kBAAC,EAAD,CACEzjB,MAAOzC,KAAKC,MAAMkmB,SAClB/lB,MAAOJ,KAAKC,MAAM8mB,SAClB9c,OAAQA,IACV,MAEJ,KACF,6BACE,yBAAK9J,UAAW8lB,GACd,yBAAK9lB,UAAU,mBACZE,EACA+lB,EACApmB,KAAKC,MAAM2kB,UACV,kBAAC,GAAD,CACEA,UAAW5kB,KAAKC,MAAM2kB,UACtBC,SAAU7kB,KAAKC,MAAM4kB,WACrB,MAEL7kB,KAAKC,MAAM6lB,QACV,KACA,0BAAM3lB,UAAU,eACd,uBAAGgP,KAAK,IAAI5O,QAASP,KAAKsR,oBACxB,uBAAGnR,UAAU,kBAAb,kBAKP+lB,EACC,yBAAK/lB,UAAU,UACb,kBAAC,mBAAD,CAAkBM,GAAG,iBAAiBgX,eAAe,aAE/C,SAACuP,GAAc,OAAO,EAAK/mB,MAAM8mB,UAAY,2BAAIC,MAGvD,W,kBA9IZ,YAAY/mB,GAAO,M,IAAA,O,4FAAA,U,EACjB,U,EAAA,iBAAMA,K,gDAEDiP,MAAQ,CACX2U,SAAU,GAGR5jB,EAAMokB,WACRpkB,EAAMokB,SAAS4C,WAAa,EAAKC,eAAejoB,KAApB,QAG9B,EAAKkoB,mBAAqB,EAAKA,mBAAmBloB,KAAxB,OAC1B,EAAKmoB,sBAAwB,EAAKA,sBAAsBnoB,KAA3B,OAC7B,EAAKqS,mBAAqB,EAAKA,mBAAmBrS,KAAxB,OAC1B,EAAK2nB,mBAAqB,EAAKA,mBAAmB3nB,KAAxB,OAdT,EA0JrB,SAAS6nB,GAAgBzf,EAAO8D,EAAMsG,EAAQzS,GAC5C,IAAIqoB,EAAKf,SAAOgB,QAAQjgB,GACxB,GAAIggB,EAAI,CACN,IAAIE,EAAOjB,SAAOkB,UAAUngB,EAAO8D,IAAS,GAE5C,OADAoc,EAAKvoB,IAAMA,EACHqI,GACN,IAAK,KAEH,GAAI8D,EAAM,CACRoc,EAAKpnB,UAAY,eACjB,IAAI+M,EAAM9B,GAAaD,EAAKE,MAAOF,EAAKG,OACtC7B,KAAKC,IAAI1J,KAAKC,MAAMwnB,cAAgBC,GAAcA,KAAgBA,KAAe,GACnFxa,EAAMA,GAAO,CAACtB,S5BnIS,G4BmIoBC,U5BnIpB,I4BoIvB0b,EAAKlgB,MAAQ,CAAEgE,MAAO6B,EAAItB,SAAW,KAAMN,OAAQ4B,EAAIrB,UAAY,MACnE0b,EAAK3c,INtDR,SAA0B9I,GAC/B,IAAKA,EACH,OAAO,KAGT,IAAM6lB,EAAejM,GAAY5Z,GACjC,OAAI6lB,IAKA,mCAAmC/L,KAAK9Z,EAAI0I,QACvC1I,EAGF,MMuCY8lB,CAAiBL,EAAK3c,KAC7B2c,EAAK3c,KACP2c,EAAKhnB,QAAUP,KAAKmnB,mBACpBI,EAAKpnB,WAAa,oBAElBonB,EAAK3c,IAAM,uBAGf,MACF,IAAK,KAEH2c,EAAKhnB,QAAUP,KAAKonB,sBACpB,IAAIS,EAAQpoB,IAAMqoB,SAASthB,IAAIiL,EAAQ,SAACsW,GACtC,MAAuB,iBAATA,EAAoBA,OAAQvS,IAEvCqS,GAAyB,GAAhBA,EAAMzlB,SAClBylB,EAAQ,CAACN,EAAKvpB,OAGhBupB,EAAK,cAAgBM,EAAM5lB,KAAK,IAChC,MACF,IAAK,KAEHslB,EAAKpnB,UAAY,WAMrB,OAAOV,IAAM2N,cAAcia,EAAIE,EAAM9V,GAErC,OAAOA,E,2uBC1MX,I,MAAM9O,GAAWC,yBAAe,CAC9B,wFAKA,wEAKA,6EAKA,4HAKA,0GAOIolB,I,uOAAoBvoB,IAAMM,e,gEAmBxBC,KAAKioB,iBACPjoB,KAAKioB,gBAAgBpkB,iBAAiB,QAAS7D,KAAKkoB,kBAAkB,K,6CAKpEloB,KAAKioB,iBACPjoB,KAAKioB,gBAAgBjkB,oBAAoB,QAAShE,KAAKkoB,kBAAkB,K,2CAKvEloB,KAAKioB,iBACPjoB,KAAKioB,gBAAgBnP,U,uCAIR7U,GAAG,WACdjE,KAAKC,MAAMkoB,WxBqFZ,SAAoBpP,EAAOqP,EAAgBC,EAAqBtjB,GACrE,IAAIN,GAASsU,EAAMuP,eAAiBvP,EAAMwP,cAAcD,eAAiB,IAAI7jB,MAC7E,IAAK,IAAIhH,KAAKgH,EAAO,CACnB,IAAI7C,EAAO6C,EAAMhH,GACjB,GAAkB,SAAdmE,EAAK4mB,KAAT,CACE,IAAI5b,EAAOhL,EAAK6mB,YAChB,GAAK7b,EAgBL,OAZIA,EAAK1B,MAAmC,SAA3B0B,EAAK1B,KAAK5J,MAAM,KAAK,GAEhCsL,EAAKjB,KAAOzK,GAA8B4J,GAAwBwB,QAAQM,EAAK1B,MAAQ,EACzFyB,GAAwBC,EL1GL,SK0GyC,EAAOwb,EAAgBrjB,GAEnFiJ,GAAkBpB,EAAMwb,EAAgBrjB,GAI1CqJ,GAAaxB,EAAMyb,GAGd,EAfLrjB,QAAQC,IAAI,kDAAmDrD,EAAK4mB,KAAM5mB,EAAKsJ,OAmBrF,OAAO,EwB3GDwd,CAAWzkB,EACb,SAAC0kB,EAAMvc,EAAMf,EAAOC,EAAQa,GAC1B,EAAKlM,MAAM2oB,cAAcxc,EAAMuc,EAAMtd,EAAOC,EAAQa,IAEtD,SAACC,EAAMuc,EAAMxc,GACX,EAAKlM,MAAM4oB,aAAazc,EAAMuc,EAAMxc,IAEtCnM,KAAKC,MAAM8E,UAGXd,EAAEI,mB,wCAIYJ,GACZA,EAAEG,OAAOuK,OAAiC,EAAxB1K,EAAEG,OAAOuK,MAAMvM,QACnCpC,KAAKC,MAAM2oB,cAAc3kB,EAAEG,OAAOuK,MAAM,IAG1C1K,EAAEG,OAAO1F,MAAQ,K,uCAGFuF,GACSjE,KAAKC,MAAMsH,KAA5BD,cACHrD,EAAEG,OAAOuK,OAAiC,EAAxB1K,EAAEG,OAAOuK,MAAMvM,QACnCpC,KAAKC,MAAM4oB,aAAa5kB,EAAEG,OAAOuK,MAAM,IAGzC1K,EAAEG,OAAO1F,MAAQ,K,iCAGRuF,GACTA,EAAEI,iBACF,IAAMyB,EAAU9F,KAAKkP,MAAMpJ,QAAQ0E,QAC/B1E,GAAW9F,KAAKC,MAAM6oB,aAAe9oB,KAAKC,MAAM8oB,WAClD/oB,KAAKC,MAAM+oB,cAAcljB,GACzB9F,KAAKyO,SAAS,CAAC3I,QAAS,Q,qCAKb7B,GAEC,UAAVA,EAAEjF,MAECiF,EAAEglB,WACLhlB,EAAEI,iBACFJ,EAAEK,kBAEFtE,KAAKkpB,WAAWjlB,O,0CAKFA,GAClB,IAAMma,EAAW,CAACtY,QAAS7B,EAAEG,OAAO1F,OACpC,GAAIsB,KAAKC,MAAMkpB,WAAY,CACzB,IAAM3gB,GAAM,IAAIC,MAAO2gB,U7BpHC,I6BqHpB5gB,EAAMxI,KAAKkP,MAAMma,oBACnBrpB,KAAKC,MAAMkpB,aACX/K,EAASiL,kBAAoB7gB,GAGjCxI,KAAKyO,SAAS2P,K,+BAGP,WACA9W,EAAiBtH,KAAKC,MAAMsH,KAA5BD,cACD8M,EAASpU,KAAKC,MAAMkoB,SACxB7gB,EAAc3E,GAAS2mB,oBACtBtpB,KAAKC,MAAMspB,cACVjiB,EAAc3E,GAAS3C,KAAKC,MAAMspB,gBAClCjiB,EAAc3E,GAAS6mB,kBAC3B,OACE,yBAAK/oB,GAAG,sBACLT,KAAKC,MAAM4oB,aACT7oB,KAAKC,MAAMkoB,SACV,oCACE,uBAAGhoB,UAAU,2BAAb,SACA,uBAAGA,UAAU,2BAAb,gBAGF,oCACE,uBAAGgP,KAAK,IAAI5O,QAAS,SAAC0D,GAAOA,EAAEI,iBAAkB,EAAKolB,YAAYC,SAAWtpB,MAAM,aACjF,uBAAGD,UAAU,4BAAb,UAEF,uBAAGgP,KAAK,IAAI5O,QAAS,SAAC0D,GAAOA,EAAEI,iBAAkB,EAAKslB,WAAWD,SAAWtpB,MAAM,eAChF,uBAAGD,UAAU,4BAAb,iBAIN,KACDH,KAAKC,MAAM8oB,QACV,yBAAK5oB,UAAU,YACf,8BAAUM,GAAG,cAAcyT,YAAaE,EACtC+T,SAAUnoB,KAAKC,MAAMkoB,SAAUzpB,MAAOsB,KAAKkP,MAAMpJ,QACjDwJ,SAAUtP,KAAK4pB,oBAAqBT,WAAYnpB,KAAK6pB,eACrDnE,IAAK,SAACA,GAAS,EAAKuC,gBAAkBvC,GACtCzP,WAAS,IACZjW,KAAKC,MAAMkoB,SACV,uBAAGhoB,UAAU,2BAAb,QACA,uBAAGgP,KAAK,IAAI5O,QAASP,KAAKkpB,WAAY9oB,MAAM,QAC1C,uBAAGD,UAAU,kBAAb,SAEJ,2BAAO+K,KAAK,OAAOwa,IAAK,SAACA,GAAS,EAAKiE,WAAajE,GAClDpW,SAAUtP,KAAK8pB,iBAAkBziB,MAAO,CAAC0iB,QAAS,UACpD,2BAAO7e,KAAK,OAAOwa,IAAK,SAACA,GAAS,EAAK+D,YAAc/D,GAAOrW,OAAO,UACjEC,SAAUtP,KAAKgqB,kBAAmB3iB,MAAO,CAAC0iB,QAAS,e,kBAnJ3D,YAAY9pB,GAAO,M,IAAA,O,4FAAA,U,EACjB,U,EAAA,iBAAMA,K,gDAEDiP,MAAQ,CACXpJ,QAAS,GAETujB,mBAAmB,IAAI5gB,MAAO2gB,U7BzBN,I6ByBmC,GAG7D,EAAKlB,iBAAmB,EAAKA,iBAAiBjpB,KAAtB,OACxB,EAAK+qB,kBAAoB,EAAKA,kBAAkB/qB,KAAvB,OACzB,EAAK6qB,iBAAmB,EAAKA,iBAAiB7qB,KAAtB,OACxB,EAAKiqB,WAAa,EAAKA,WAAWjqB,KAAhB,OAClB,EAAK4qB,eAAiB,EAAKA,eAAe5qB,KAApB,OACtB,EAAK2qB,oBAAsB,EAAKA,oBAAoB3qB,KAAzB,OAdV,EAyJNiJ,4BAAW8f,I,qvBChLLiC,I,uOAAmBxqB,IAAMM,e,4DAQ1CC,KAAKC,MAAMiqB,UACXlqB,KAAKC,MAAM+oB,cAAchpB,KAAKC,MAAMI,QAAQuM,Q,+BAGrC,IAnBWR,EAEd+d,EAiBG,OACP,OAAKnqB,KAAKC,MAAMI,QAId,yBAAKI,GAAG,iBACN,yBAAKA,GAAG,+BACN,8BAAOT,KAAKC,MAAMI,QAAQ0jB,UAC1B,uBAAG5U,KAAK,IAAI5O,QAAS,SAAC0D,GAAOA,EAAEI,iBAAkB,EAAKpE,MAAMiqB,YAAa,uBAAG/pB,UAAU,uBAAb,WAE3E,yBAAKM,GAAG,2BACN,yBAAKN,UAAU,sBACb,uBAAGA,UAAU,wBA/BHiM,EA+BuCpM,KAAKC,MAAMI,QAAQ6K,MA7BxEif,EAAa,CAACC,QAAS,oBAAqBC,MAAO,QAAS5W,KAAM,cAAe6W,MAAO,aAE5Ele,IAAS+d,GAAY/d,GAAQ,IAAI9K,MAAM,KAAK,KAAO6oB,EAAU,UA4BrE,6BAAK,2BAAG,kBAAC,mBAAD,CAAkB1pB,GAAG,wBAA7B,IAA0DT,KAAKC,MAAMI,QAAQ6K,MAAQ,4BACrF,6BAAK,2BAAG,kBAAC,mBAAD,CAAkBzK,GAAG,gBAA7B,IAAkD4I,EAAiBrJ,KAAKC,MAAMI,QAAQsL,SAG1F,kBAAC,GAAD,CACEod,SAAS,EACTC,cAAehpB,KAAKuqB,cACpBxlB,QAAS/E,KAAKC,MAAM8E,WAlBjB,S,kBAbX,YAAY9E,GAAO,M,IAAA,O,4FAAA,U,EACjB,U,EAAA,iBAAMA,K,gDAEDsqB,cAAgB,EAAKA,cAActrB,KAAnB,OAHJ,E,0zBCLAurB,I,uOAAkB/qB,IAAMkE,W,qDAMzC,IAAM8mB,EAAc,GACdC,GAAc1qB,KAAKC,MAAM2e,aAAe,IAAIxc,OAC5CuoB,EAAclhB,KAAKC,I/BmDM,E+BnDmBghB,GAclD,OAZC1qB,KAAKC,MAAM2e,aAAe,IAAIgM,KAAK,SAAC/L,GASnC,OARA4L,EAAYtoB,KACV,yBAAKhC,UAAU,aAAanB,IAAK6f,EAAIxY,MACnC,kBAAC,EAAD,CACE5D,MAAOoc,EAAIxY,KACX4D,OAAQe,GAAa6T,EAAItM,OAASsM,EAAItM,OAAOtH,MAAQ,QAAS,EAC9D7K,MAAOye,EAAItM,OAASsM,EAAItM,OAAOC,GAAK,SAGnCiY,EAAYroB,QAAUuoB,IAI7B,yBAAKlqB,GAAG,eAAegqB,EAAvB,IAAkDE,EAAbD,EACnC,8BACE,kBAAC,mBAAD,CAAkBjqB,GAAG,sBAAsBgX,eAAe,mBAEtDhG,OAAQ,CAAEoZ,SAAWH,EAAaC,MAC9B,U,kBA3BhB,YAAY1qB,GAAO,O,4FAAA,mCACXA,I,qvBCJW6qB,I,uOAAqBrrB,IAAMM,e,wDAYlCgrB,GACV,GAAIA,IAAS/qB,KAAKkP,MAAM7D,MAAO,CAC7B,IAAMvE,EAASikB,EAAKC,wBACpBhrB,KAAKyO,SAAS,CACZpD,MAAsB,EAAfvE,EAAOuE,MACdC,OAAwB,EAAhBxE,EAAOwE,Y,sCAKL2f,GACdjrB,KAAKC,MAAMiqB,UACXlqB,KAAKC,MAAM+oB,cAAciC,EAASjrB,KAAKC,MAAMI,QAAQ6K,KAAMlL,KAAKC,MAAMI,QAAQsoB,KAC5E3oB,KAAKC,MAAMI,QAAQgL,MAAOrL,KAAKC,MAAMI,QAAQiL,OAAQtL,KAAKC,MAAMI,QAAQ0jB,Y,+BAGnE,WACP,IAAK/jB,KAAKC,MAAMI,QACd,OAAO,KAGT,IAAM6M,EAAM9B,GAAapL,KAAKC,MAAMI,QAAQgL,MAAOrL,KAAKC,MAAMI,QAAQiL,OACpEtL,KAAKkP,MAAM7D,MAAOrL,KAAKkP,MAAM5D,QAAQ,GACjCK,EAAOuB,EAAM,CAAE7B,MAAO6B,EAAItB,SAAW,KAAMN,OAAQ4B,EAAIrB,UAAY,MACrE7L,KAAKC,MAAMI,QAAQgL,MAAQrL,KAAKC,MAAMI,QAAQiL,OAAU,CAACD,MAAO,QAAU,CAACC,OAAQ,QACvFK,EAAKJ,SAAW,OAChBI,EAAKH,UAAY,OAEjB,IAAIuY,EAAW/jB,KAAKC,MAAMI,QAAQ0jB,SAE5BmH,EAAYzhB,KAAK0hB,KAAMnrB,KAAKkP,MAAM7D,MhCXpB,GgCWuC,IAAO,GAAK,EAAG,IACtE0Y,EAAS3hB,OAAS8oB,IACpBnH,EAAWA,EAASpT,MAAM,EAAGua,EAAU,EAAI,GAAK,IAAMnH,EAASpT,MAAM,EAAIua,EAAU,IAErF,IAAM7f,EAAQrL,KAAKC,MAAMI,QAAQgL,OAAS,IACpCC,EAAStL,KAAKC,MAAMI,QAAQiL,QAAU,IAC5C,OACE,yBAAK7K,GAAG,iBACN,yBAAKA,GAAG,+BACJT,KAAKC,MAAM+oB,cAMX,8BAAOhpB,KAAKC,MAAMI,QAAQ0jB,UAL1B,uBAAG5U,KAAMnP,KAAKC,MAAMI,QAAQyB,IAAKqiB,SAAUnkB,KAAKC,MAAMI,QAAQ0jB,UAC5D,uBAAG5jB,UAAU,kBAAb,iBADF,IACkD,kBAAC,mBAAD,CAC9CM,GAAG,kBAAkBgX,eAAe,cAK1C,uBAAGtI,KAAK,IAAI5O,QAAS,SAAC0D,GAAOA,EAAEI,iBAAkB,EAAKpE,MAAMiqB,YAAa,uBAAG/pB,UAAU,uBAAb,WAE3E,yBAAKM,GAAG,0BAA0BilB,IAAK,SAACqF,GAAD,OAAU,EAAKK,YAAYL,KAChE,yBAAKngB,IAAK5K,KAAKC,MAAMI,QAAQyB,IAAKuF,MAAOsE,KAE1C3L,KAAKC,MAAM+oB,cACV,kBAAC,GAAD,CACEO,cAAc,oBACdT,aAAa,EACbE,cAAehpB,KAAKqrB,gBACpBtmB,QAAS/E,KAAKC,MAAM8E,UAEtB,yBAAKtE,GAAG,wBACN,6BACE,6BAAK,2BAAG,kBAAC,mBAAD,CAAkBA,GAAG,kBAAkBgX,eAAe,iBAE9D,6BAAK,0BAAMrX,MAAOJ,KAAKC,MAAMI,QAAQ0jB,UAAWA,GAAsB,OAExE,6BACE,6BAAK,2BAAG,kBAAC,mBAAD,CAAkBtjB,GAAG,qBAAqBgX,eAAe,oBAEjE,6BAAMzX,KAAKC,MAAMI,QAAQ6K,OAE3B,6BACE,6BAAK,2BAAG,kBAAC,mBAAD,CAAkBzK,GAAG,aAAagX,eAAe,YAEzD,6BAAMpM,EAAN,MAAsBC,EAAtB,QAAmCjC,EAAiBrJ,KAAKC,MAAMI,QAAQsL,c,kBApFnF,YAAY1L,GAAO,M,IAAA,O,4FAAA,U,EACjB,U,EAAA,iBAAMA,K,gDAEDiP,MAAQ,CACX7D,MAAO,EACPC,OAAQ,GAGV,EAAK+f,gBAAkB,EAAKA,gBAAgBpsB,KAArB,OARN,E,qvBCLAqsB,I,uOAAmB7rB,IAAMM,e,+DAOzBwrB,EAAKpgB,GACtBogB,EAAIlnB,iBACJrE,KAAKC,MAAM4E,SAASsG,K,+BAGb,WACP,OACE,yBAAKhL,UAAU,uBACb,yBAAKA,UAAU,SACb,kBAAC,mBAAD,CAAkBM,GAAG,kBACnBgX,eAAe,qEAGnB,yBAAKtX,UAAU,UACb,4BAAQA,UAAU,OAAOI,QAAS,SAAAwY,GAAW,EAAKyS,mBAAmBzS,EAAO,YAC1E,kBAAC,mBAAD,CAAkBtY,GAAG,yBACnBgX,eAAe,YAEnB,4BAAQtX,UAAU,QAAQI,QAAS,SAAAwY,GAAW,EAAKyS,mBAAmBzS,EAAO,YAC3E,kBAAC,mBAAD,CAAkBtY,GAAG,yBACnBgX,eAAe,YAEnB,4BAAQtX,UAAU,QAAQI,QAAS,SAAAwY,GAAW,EAAKyS,mBAAmBzS,EAAO,WAC3E,kBAAC,mBAAD,CAAkBtY,GAAG,wBACnBgX,eAAe,iB,kBA9B3B,YAAYxX,GAAO,M,IAAA,O,4FAAA,U,EACjB,U,EAAA,iBAAMA,K,gDAEDurB,mBAAqB,EAAKA,mBAAmBvsB,KAAxB,OAHT,E,0zBCHAwsB,I,uOAAoBhsB,IAAMM,e,qDAE3C,OAAQC,KAAKC,MAAMqT,KACjB,yBAAKnT,UAAU,oBAAmB,yBAAKA,UAAU,oBAAgC,S,6+BCGlEurB,I,uOAAiBjsB,IAAMM,e,qDAExC,IAAI4rB,EAAU/qB,EAAW,KAAOjB,IAAOisB,aAAe,IACtD,OACE,yBAAKnrB,GAAG,aAAaN,UAAWH,KAAKC,MAAM4rB,SAAW,YAAc,MAClE,6BACE,uBAAG1c,KAAK,mCACN,yBAAK1O,GAAG,OAAOkK,IAAI,OAAOC,IAAI,iBAC9B,2CAEF,2BAAG,kBAAC,mBAAD,CAAkBnK,GAAG,eAAegX,eAAe,YAAtD,IAAoEkU,GACpE,2BAAG,kBAAC,mBAAD,CAAkBlrB,GAAG,eAAegX,eAAe,YAAtD,IAAoEzX,KAAKC,MAAM6rB,cAA/E,KAAgG9rB,KAAKC,MAAM8rB,cAA3G,W,85BCfV,IAAMzF,GAAS3mB,IAAO2mB,OAmBhB3jB,GAAWC,yBAAe,CAC9BopB,WAAY,CAAF,6CAKVC,UAAW,CAAF,qDAKT,8DAQF,SAASC,GAAc5b,GACrB,GAAIA,EAAK,CACP,IAAM6b,EAAK7b,EAAI8b,gBAAkB,GACjC,OAAO9b,EAAIU,SAAS,WAAamb,EAAGvX,SAAS,MAAQuX,EAAGvX,SAAS,MAEnE,OAAO,EAGT,SAASyX,GAAiB/b,GACxB,GAAIA,EAAK,CACP,IAAMgc,EAAKhc,EAAIic,cAAgB,GAC/B,OAAOjc,EAAIU,SAAS,UAAYsb,EAAG1X,SAAS,MAAQ0X,EAAG1X,SAAS,MAElE,OAAO,E,aAGH4X,I,uOAAqB/sB,IAAMkE,W,mDA+GCqY,EAAWlH,GACzC,IAAI2X,EAAY,GAChB,GAAKzQ,EAAUvZ,OAgBR,GAAIuZ,EAAUvZ,OAASqS,EAAUrS,MAAO,CAC7C,IAAMA,EAAQuZ,EAAU3W,OAAOC,SAAS0W,EAAUvZ,OAWlD,GAVAgqB,EAAY,CACVhqB,MAAOuZ,EAAUvZ,MACjBiqB,WAAY,KACZC,aAAc,KACdC,cAAe,KACfC,iBAAiB,EACjBC,eAAgB,EAChBC,kBAAkB,GAGhBtqB,EAAO,CAET,IAAMuqB,EAAO,GACP5M,EAAO,GAETpE,EAAUpJ,WACZnQ,EAAMmc,YAAY,SAACC,GACbA,EAAInO,QAAUmO,EAAIxY,MAAQ2V,EAAUvJ,UACtC2N,EAAKje,KAAK0c,KAKhBpc,EAAME,SAAS,SAASqD,GACjBA,EAAI8f,SACPkH,EAAK7qB,KAAK6D,KAId7H,OAAO8uB,OAAOR,EAAW,CACvB9pB,SAAUqqB,EACVE,WAAY9M,IAGV3d,EAAM8P,OACRpU,OAAO8uB,OAAOR,EAAW,CACvBrsB,MAAOqC,EAAM8P,OAAOC,GACpBvI,OAAQe,GAAavI,EAAM8P,OAAOtH,SAGpC9M,OAAO8uB,OAAOR,EAAW,CACvBrsB,MAAO,GACP6J,OAAQ,OAIZ,IAAMkjB,EAAO1qB,EAAM2qB,cACfD,EACFhvB,OAAO8uB,OAAOR,EAAW,CACvBY,sBAAuBhB,GAAiBc,EAAK7c,OAEtCwE,EAAUuY,uBACnBlvB,OAAO8uB,OAAOR,EAAW,CACvBY,uBAAuB,SAK3BlvB,OAAO8uB,OAAOR,EAAW,CACvB9pB,SAAU,GACVuqB,WAAY,GACZ9sB,MAAO,GACP6J,OAAQ,KACRojB,uBAAuB,UA/E3BZ,EAAY,CACV9pB,SAAU,GACVuqB,WAAY,GACZzqB,MAAO,KACPrC,MAAO,GACP6J,OAAQ,KACRyiB,WAAY,KACZC,aAAc,KACdC,cAAe,KACfC,iBAAiB,EACjBC,eAAgB,EAChBC,kBAAkB,EAClBM,uBAAuB,GAuG3B,OA/BIrR,EAAU1L,KACR0L,EAAU1L,IAAIgd,YAAcxY,EAAUwY,WACxCb,EAAUa,UAAYxY,EAAUwY,UAE9BtR,EAAU1L,IAAIid,YAAczY,EAAUyY,WACxCd,EAAUc,UAAYzY,EAAUyY,WAE7BvR,EAAU1L,IAAIid,SAAS,UAAYzY,EAAU0Y,iBAChDf,EAAUe,gBAAkB1Y,EAAU0Y,kBAGpC1Y,EAAUwY,WACZb,EAAUa,UAAW,GAEnBxY,EAAUyY,WACZd,EAAUc,UAAW,GAElBzY,EAAU0Y,iBACb1Y,EAAU0Y,gBAAiB,IAI3BtB,GAAclQ,EAAU1L,OAASwE,EAAU2Y,cAC7ChB,EAAUiB,aAAe5Y,EAAU2Y,cAIhCzR,EAAUpJ,WAAakC,EAAUoY,YAA4C,EAA9BpY,EAAUoY,WAAW9qB,SACvEqqB,EAAUS,WAAa,IAGlBT,K,8CAvMHzsB,KAAK2tB,kBACP3tB,KAAK2tB,iBAAiB9pB,iBAAiB,SAAU7D,KAAK4tB,qB,6CAKpD5tB,KAAK2tB,kBACP3tB,KAAK2tB,iBAAiB3pB,oBAAoB,SAAUhE,KAAK4tB,qB,yCAM1Cpf,EAAWsG,GAAW,WACnC9U,KAAK2tB,mBACH7Y,EAAUrS,OAASzC,KAAKkP,MAAMzM,OAASqS,EAAUnS,SAASP,QAAUpC,KAAKkP,MAAMvM,SAASP,OAC1FpC,KAAK2tB,iBAAiBE,UAAY7tB,KAAK2tB,iBAAiBG,aAAe9tB,KAAKkP,MAAM4d,eACzEte,EAAUuf,eAAiB/tB,KAAKC,MAAM8tB,iBAC/C/tB,KAAK2tB,iBAAiBE,WAAarf,EAAUuf,eAAiB/tB,KAAKC,MAAM8tB,iBAI7E,IAAMtrB,EAAQzC,KAAKC,MAAMoF,OAAOC,SAAStF,KAAKkP,MAAMzM,OAiBpD,GAhBIzC,KAAKkP,MAAMzM,OAASqS,EAAUrS,QAC5BqS,EAAUrS,QAAU9C,IAAOquB,oBAAoBlZ,EAAUrS,SAC3DzC,KAAKiuB,MAAMnZ,EAAUrS,OACrBzC,KAAKC,MAAMiuB,iBAAiB,OAG1BzrB,IACFA,EAAM0rB,OAASnuB,KAAKouB,iBACpB3rB,EAAM4rB,sBAAwBruB,KAAKsuB,0BACnC7rB,EAAM8rB,OAASvuB,KAAKwuB,kBACpB/rB,EAAMkb,WAAa3d,KAAKyuB,iBACxBhsB,EAAMqb,cAAgB9d,KAAK0uB,kBAC3BjsB,EAAMksB,OAAS3uB,KAAK0uB,oBAIpBjsB,IAAUA,EAAMmsB,gBAAkB5uB,KAAKC,MAAM4uB,QAC3C7uB,KAAKkP,MAAMzM,OAASqS,EAAUrS,QAAW+L,EAAUqgB,OAAQ,CAE/D,IAAMC,EAAY9uB,KAAKC,MAAM8uB,gBAAkB/uB,KAAKC,MAAM8uB,eAAeC,YAAchvB,KAAKC,MAAMwC,MAI9FwsB,EAAWxsB,EAAMud,iBAAiBkP,gBAAgBC,gBAClDnvB,KAAKkP,MAAMqe,UAAYuB,KAEzBG,EAAWA,EAASG,cpCzFC,IoC0FjBpvB,KAAKkP,MAAMqe,WACb0B,EAAWA,EAASI,gBAGtBrvB,KAAKyO,SAAS,CAAEse,kBAAkB,KAEpC,IAAMuC,EAAWR,EAAW9uB,KAAKC,MAAM8uB,oBAAiBvZ,EACxD/S,EAAM8sB,UAAUN,EAAS/O,QAASoP,GAC/BznB,KAAK,SAACC,GACD,EAAKoH,MAAMzM,OAASqF,EAAKrF,OAC3B,EAAKgM,SAAS,CAAChM,MAAOqF,EAAKrF,QAE7B,EAAKxC,MAAMuvB,kBAAkB,EAAKvvB,MAAMwC,MAAOqF,EAAKrF,OAEpDA,EAAMgtB,eAAe,SAACC,IACfA,EAAIC,UAAYltB,EAAMmsB,gBACzBnsB,EAAMmtB,eAAeF,OAI1B9pB,MAAM,SAACC,GACNb,QAAQC,IAAI,yBAA0B,EAAKiK,MAAMzM,OACjD,EAAKxC,MAAM8E,QAAQc,EAAIC,QAAS,OAChC,IAAM+pB,EAAarD,GAAasD,yBAAyB,GAAI,IAC7DD,EAAWzvB,MAAQ,EAAKH,MAAMsH,KAAKD,cAAc3E,GAASotB,WAC1D,EAAKthB,SAASohB,Q,4BA+HhBG,GAAc,WAClB,GAAKA,EAAL,CAGA,IAAIC,EAAWjwB,KAAKC,MAAMoF,OAAOC,SAAS0qB,GACtCC,GAAYA,EAASrB,gBACvBqB,EAAShC,OAAM,GACZroB,MAAM,cACNsqB,QAAQ,WAGP,EAAKzhB,SAAS,CAACse,kBAAkB,IACjCkD,EAAS9B,YAAS3Y,EAClBya,EAAS5B,2BAAwB7Y,EACjCya,EAAS1B,YAAS/Y,EAClBya,EAAStS,gBAAanI,EACtBya,EAASnS,mBAAgBtI,EACzBya,EAAStB,YAASnZ,O,4CAKJuV,GAChBA,IACFA,EAAKlnB,iBAAiB,SAAU7D,KAAK4tB,mBACrC5tB,KAAK2tB,iBAAmB5C,K,wCAKVhS,GAAO,WACvB/Y,KAAKyO,SAAS,CAACqe,eAAgB/T,EAAM3U,OAAO0pB,aAAe/U,EAAM3U,OAAOypB,YACpE9U,EAAM3U,OAAOypB,WAAa,GAC5B7tB,KAAKyO,SAAS,SAACqG,EAAW7U,GACxB,IAAMme,EAAW,GACjB,IAAKtJ,EAAUiY,iBAAkB,CAC/B,IAAMtqB,EAAQ,EAAKxC,MAAMoF,OAAOC,SAAS,EAAK4J,MAAMzM,OAChDA,GAASA,EAAMmsB,gBAAkBnsB,EAAM0tB,uBACzC/R,EAAS2O,kBAAmB,EAC5BtqB,EAAM2tB,gBpCzRW,IoCyRoBxqB,MAAM,SAACC,GAC1C,EAAK4I,SAAS,CAACse,kBAAkB,IACjC,EAAK9sB,MAAM8E,QAAQc,EAAIC,QAAS,UAItC,OAAOsY,M,uCAKI+B,GACXA,EAAK5N,OACPvS,KAAKyO,SAAS,CACZrO,MAAO+f,EAAK5N,OAAOC,GACnBvI,OAAQe,GAAamV,EAAK5N,OAAOtH,SAGnCjL,KAAKyO,SAAS,CACZrO,MAAO,GACP6J,OAAQ,OAIRkW,EAAK7P,KACPtQ,KAAKyO,SAAS,CACZ6e,SAAUnN,EAAK7P,IAAIgd,WACnBC,SAAUpN,EAAK7P,IAAIid,WACnBC,gBAAiBrN,EAAK7P,IAAIid,SAAS,SACnCG,YAAaxB,GAAc/L,EAAK7P,S,0CAKlB,WAClB,GAAItQ,KAAKkP,MAAMzM,MAAO,CACpB,IAAM2d,EAAO,GACP3d,EAAQzC,KAAKC,MAAMoF,OAAOC,SAAStF,KAAKkP,MAAMzM,OACpDA,EAAMmc,YAAY,SAACC,GACbA,EAAInO,QAAUmO,EAAIxY,MAAQ,EAAKpG,MAAMwS,UACvC2N,EAAKje,KAAK0c,KAGd,IAAMT,EAAW,CAAC8O,WAAY9M,GACxB+M,EAAO1qB,EAAM2qB,cACfD,EACFhvB,OAAO8uB,OAAO7O,EAAU,CACtBiP,sBAAuBhB,GAAiBc,EAAK7c,OAEtCtQ,KAAKkP,MAAMme,uBACpBlvB,OAAO8uB,OAAO7O,EAAU,CACtBiP,uBAAuB,IAG3BrtB,KAAKyO,SAAS2P,M,uCAIDpY,GAEf,IAAMvD,EAAQzC,KAAKC,MAAMoF,OAAOC,SAAStF,KAAKkP,MAAMzM,OAC9C2b,EAAW,CAACzb,SAAU,IAC5BF,EAAME,SAAS,SAAC9E,GACTA,EAAEioB,SACL1H,EAASzb,SAASR,KAAKtE,KAKvBmI,IAAQA,EAAI8f,UAGVrjB,EAAM4tB,aAAarqB,EAAIP,OACzB2Y,EAAS0O,eAAiB,GAKbrqB,EAAM6tB,UAAUtqB,IACjBrG,IAAOwlB,qBAAuBnf,EAAIuqB,MAAQvwB,KAAKC,MAAMwS,UACjEzS,KAAKC,MAAMiuB,iBAAiB,WAC1BzrB,EAAM+tB,SAASxqB,EAAIP,OAGvBzF,KAAKC,MAAMkuB,OAAOnoB,IAEpBhG,KAAKyO,SAAS2P,K,kDAIdpe,KAAKyO,SAAS,CAACse,kBAAkB,M,wCAGjBrqB,GAChB,OAAQA,EAAK+tB,MACX,IAAK,KACHC,aAAa1wB,KAAK2wB,eAClB,IAAIvZ,EAAWpX,KACfA,KAAK2wB,cAAgBvY,WAAW,WAC9BhB,EAAS3I,SAAS,CAACoe,iBAAiB,KACnC+D,KACE5wB,KAAKkP,MAAM2d,iBACd7sB,KAAKyO,SAAS,CAACoe,iBAAiB,IAElC,MAEF,IAAK,OACL,IAAK,OAEH7sB,KAAK6wB,cACL,MACF,QACE7rB,QAAQC,IAAI,0BAA2BvC,EAAK+tB,S,0CAI9BpwB,GAClBL,KAAKyO,SAAS,CAAEme,cAAevsB,M,2CAI/BL,KAAKyO,SAAS,CAAEme,cAAe,KAAMD,aAAc,KAAMD,WAAY,S,yCAGpDlb,EAAQiC,EAAMtI,GAC/B,GAAc,OAAVqG,EACFxR,KAAKC,MAAM6wB,YAAYxK,GAAOyK,WAAWzK,GAAO0K,MAAMvd,GAAOtI,SACxD,GAAc,OAAVqG,EAAiB,CAC1B,IAAM1P,EAAM,IAAIgM,IAAI3C,EAAKua,KACnBnkB,EAASO,EAAImvB,aACnB,IAAK,IAAIjyB,KAAOmM,EAAKqa,KACfra,EAAKqa,KAAKlmB,eAAeN,IAC3BuC,EAAO2vB,IAAIlyB,EAAKmM,EAAKqa,KAAKxmB,IAG9B,CAAC,OAAQ,OAAOwH,IAAI,SAASxH,GACvBmM,EAAKnM,IACPuC,EAAO2vB,IAAIlyB,EAAKmM,EAAKnM,MAGzBuC,EAAO2vB,IAAI,MAAOlxB,KAAKC,MAAMwS,UAC7B3Q,EAAIqvB,OAAS5vB,EACbQ,OAAOwX,KAAKzX,EAAK,eAEjBkD,QAAQC,IAAI,yBAA0BuM,K,yCAIvBvN,GACjBA,EAAEI,iBACFJ,EAAEK,kBACFtE,KAAKC,MAAMsQ,gBAAgB,CAAEhL,UAAWvF,KAAKkP,MAAMzM,MAAO2E,EAAGnD,EAAEuM,MAAOvJ,EAAGhD,EAAEwM,U,mDAGhDlP,EAAQ6vB,GACnC7vB,EAAOgE,UAAYvF,KAAKkP,MAAMzM,MAC9B,IAAMyf,EAAYkP,GAA4B,GAC9ClP,EAAU/f,KAAK,kBACf,IAAMM,EAAQzC,KAAKC,MAAMoF,OAAOC,SAAS/D,EAAOgE,WAChD,GAAI9C,EAAO,CACT,IAAM6N,EAAM7N,EAAMuc,gBACd1O,GAAOA,EAAI8O,aACb8C,EAAU/f,KAAK,uBAGnBnC,KAAKC,MAAMsQ,gBAAgBhP,EAAQ2gB,K,8CAGb1Q,GACtBxR,KAAKC,MAAMoxB,UAAUrxB,KAAKkP,MAAMzM,MAAO+O,K,uCAGxBvN,GACfA,EAAEI,iBACFrE,KAAKC,MAAMugB,oBAAoBxgB,KAAKkP,MAAMzM,MAAOxB,EAAyBjB,KAAKkP,MAAMzM,S,qCAIrF,IAAMA,EAAQzC,KAAKC,MAAMoF,OAAOC,SAAStF,KAAKkP,MAAMzM,OAChDA,EAAMmsB,gBACRnsB,EAAM6uB,iB,yCAIS1kB,GAAM,WACvB,GAAIA,EAAKjB,KAAOzK,EAA4B,CAE1C,IAAMmjB,EAAWrkB,KAAKC,MAAMoF,OAAO6e,qBACnC,IAAKG,EAEH,YADArkB,KAAKC,MAAM8E,QAAQ/E,KAAKC,MAAMsH,KAAKD,cAAc3E,GAAS4uB,yBAG5D,IAAMC,EAA0BnN,EAASoN,OAAO7kB,GAC1C5G,EAAMsgB,GAAOqD,WAAW,KAAM/c,EAAK1B,KAAM,KAAM0B,EAAK5O,KAAM4O,EAAKjB,KAAM6lB,GAE3ExxB,KAAKC,MAAM6wB,YAAY9qB,EAAKwrB,EAAyBnN,QAGrDjW,GAAaxB,EACX,SAACR,EAAMuc,EAAMxc,GACX,EAAKlM,MAAM6wB,YAAYxK,GAAOqD,WAAW,KAAMvd,EAAMuc,EAAMxc,KAE7DnM,KAAKC,MAAM8E,W,uCAKA6H,GACXA,EAAKjB,KpC7d6B,GAAK,GoC+dzC3L,KAAKC,MAAM8E,QAAQ/E,KAAKC,MAAMsH,KAAKD,cAAc3E,GAAS+uB,0BACtD,CAAC/lB,KAAMtC,EAAiBuD,EAAKjB,MAAOgmB,MAAOtoB,EpCheX,GAAK,MoCgesD,OAE/FrJ,KAAKyO,SAAS,CAAEie,WAAY,CAC1B9f,KAAMA,EACNmX,SAAUnX,EAAK5O,KACf2N,KAAMiB,EAAKjB,KACXT,KAAM0B,EAAK1B,U,0CAKG+f,EAAS7e,EAAMuc,EAAMtd,EAAOC,EAAQa,GACtD,IAAInG,EAAMsgB,GAAOsL,YAAY,KAAM,EAAGxlB,EAAMuc,EAAMtd,EAAOC,EAAQa,GAC7D8e,IACFjlB,EAAMsgB,GAAOuL,gBAAgB7rB,GAC7BA,EAAMsgB,GAAOwL,OAAO9rB,EAAKsgB,GAAOyL,KAAK9G,KAEvCjrB,KAAKC,MAAM6wB,YAAY9qB,K,wCAGP4G,GAAM,WAElBA,EAAKjB,KAAOzK,GAA8B4J,GAAwBwB,QAAQM,EAAK1B,MAAQ,EAEzFyB,GAAwBC,EpCpfD,SoCofqC,EAE1D,SAAC+b,EAAMvc,EAAMf,EAAOC,EAAQa,GAC1B,EAAKsC,SAAS,CAACke,aAAc,CAC3B7qB,IAAKgM,IAAIC,gBAAgBnB,GACzB+b,KAAMA,EACN5E,SAAU5X,EACVd,MAAOA,EACPC,OAAQA,EACRK,KAAMgd,EAAKvmB,OACX8I,KAAMkB,MAIV,SAACvG,GACC,EAAK5F,MAAM8E,QAAQc,EAAK,SAI5BmI,GAAkBpB,EAEhB,SAAC+b,EAAMvc,EAAMf,EAAOC,EAAQa,GAC1B,EAAKsC,SAAS,CAACke,aAAc,CAC3B7qB,IAAKgM,IAAIC,gBAAgBnB,GACzB+b,KAAMA,EACN5E,SAAU5X,EACVd,MAAOA,EACPC,OAAQA,EACRK,KAAMgd,EAAKvmB,OACX8I,KAAMkB,MAIV,SAACvG,GACC,EAAK5F,MAAM8E,QAAQc,EAAK,W,+BAMvB,IAGHmsB,EAHG,OACA1qB,EAAiBtH,KAAKC,MAAMsH,KAA5BD,cAGP,GAAItH,KAAKC,MAAM4rB,SACbmG,EAAY,UACP,GAAKhyB,KAAKkP,MAAMzM,MAMhB,CACL,IAAIwvB,EACJ,GAAIjyB,KAAKkP,MAAMyd,aAEbsF,EACE,kBAAC,GAAD,CACE5xB,QAASL,KAAKkP,MAAMyd,aACpBzC,QAASlqB,KAAKkyB,mBACdlJ,cAAehpB,KAAKmyB,2BAEnB,GAAInyB,KAAKkP,MAAM0d,cAEpBqF,EACE,kBAAC,GAAD,CACE5xB,QAASL,KAAKkP,MAAM0d,cACpB1C,QAASlqB,KAAKkyB,0BAEb,GAAIlyB,KAAKkP,MAAMwd,WAEpBuF,EACE,kBAAC,GAAD,CACE5xB,QAASL,KAAKkP,MAAMwd,WACpBxC,QAASlqB,KAAKkyB,mBACdlJ,cAAehpB,KAAKoyB,yBAEnB,CAML,IALA,IAAM3vB,EAAQzC,KAAKC,MAAMoF,OAAOC,SAAStF,KAAKkP,MAAMzM,OAC9C+c,EAAgC,OAAnB/c,EAAMsb,UACrBsU,EAAe,GACfC,EAAe,KACfC,EAAe,KACV90B,EAAE,EAAGA,EAAEuC,KAAKkP,MAAMvM,SAASP,OAAQ3E,IAAK,CAC/C,IAAIuI,EAAMhG,KAAKkP,MAAMvM,SAASlF,GAC1B+0B,EAAW,KAEX/0B,EAAI,EAAIuC,KAAKkP,MAAMvM,SAASP,SAC9BowB,EAAWxyB,KAAKkP,MAAMvM,SAASlF,EAAE,GAAG8yB,MAGtC,IAAIxK,EAAW,SACX/f,EAAIuqB,MAAQ+B,EAEZvM,EADE/f,EAAIuqB,MAAQiC,EACH,SAEA,OAEJxsB,EAAIuqB,MAAQiC,IACrBzM,EAAW,SAEbuM,EAAetsB,EAAIuqB,KAEnB,IAAMkC,IAAYzsB,EAAIuqB,MAAQvwB,KAAKC,MAAMwS,UACnCigB,EAAiBjwB,EAAM6tB,UAAUtqB,GAEnC+gB,OAAQ,EAAEvM,OAAU,EAAE2L,OAAQ,EAClC,GAAI3G,EAAY,CACd,IAAMnZ,EAAO5D,EAAMkwB,SAAS3sB,EAAIuqB,MAC5BlqB,GAAQA,EAAKkM,SACfwU,EAAW1gB,EAAKkM,OAAOC,GACvBgI,EAAaxP,GAAa3E,EAAKkM,OAAOtH,QAExCkb,EAAWngB,EAAIuqB,KACfgC,EAAa,sBAEbA,EAAa,WAGfF,EAAalwB,KACX,kBAAC,GAAD,CACEkD,OAAQrF,KAAKC,MAAMoF,OACnBhF,QAAS2F,EAAI3F,QAASylB,QAAS9f,EAAI4sB,GACnCvM,SAAUrgB,EAAI8U,KAAO9U,EAAI8U,KAAK1O,KAAO,KACrCwY,UAAW5e,EAAI6sB,GAAI7M,SAAUyM,EAAShtB,IAAKO,EAAIP,IAC/C0gB,SAAUA,EAAUY,SAAUA,EAAUvM,WAAYA,EACpDuL,SAAUA,EAAUlB,SAAU6N,EAAgBrO,SAAUre,EAAI8sB,UAC5DrL,cAAeznB,KAAKC,MAAMwnB,cAC1BlX,gBAAiBvQ,KAAK+yB,6BACtBxN,eAAgBvlB,KAAKgzB,oBACrBrN,eAAgB3lB,KAAKizB,mBACrBluB,QAAS/E,KAAKC,MAAM8E,QACpB/F,IAAKgH,EAAIP,OAIf,IAAIytB,EAAW,KACTC,EAAOnzB,KAAKC,MAAMoF,OAAO+tB,aAAaC,WAAWrzB,KAAKkP,MAAMzM,OAC9D0wB,GAAwC,OAAhCxzB,IAAOwK,UAAUgpB,EAAK1wB,SAC5B0wB,EAAKziB,OACPwiB,EAAW5rB,EAAc3E,GAASqpB,YACzBmH,EAAKG,OACdJ,EAAW5rB,EAAc3E,GAASspB,WAAa,KAC7C9jB,EAAgBgrB,EAAKG,KAAKC,KAAMvzB,KAAKC,MAAMsH,KAAKa,UAItD,IAAM6B,EAASjK,KAAKkP,MAAMjF,SAAU,EAC9ByG,EAAS1Q,KAAKC,MAAMyQ,OAAS,UAAY1Q,KAAKkP,MAAM2d,gBAAkB,UAAY,IAAM,UAE9FoF,EACE,oCACE,yBAAKxxB,GAAG,sBAAsBN,UAAU,iBACrCH,KAAKC,MAAMmiB,cACV,uBAAGjT,KAAK,IAAI1O,GAAG,oBAAoBF,QAAS,SAAC0D,GAAOA,EAAEI,iBAAkB,EAAKpE,MAAMuzB,uBACjF,uBAAGrzB,UAAU,kBAAb,eAGF,KACF,yBAAKA,UAAU,cACb,kBAAC,EAAD,CACE8J,OAAQA,EACRxH,MAAOzC,KAAKkP,MAAMzM,MAClBrC,MAAOJ,KAAKkP,MAAM9O,QACpB,0BAAMD,UAAWuQ,KAEnB,yBAAKjQ,GAAG,qBACN,yBAAKA,GAAG,cAAcN,UAAU,eAC9BH,KAAKkP,MAAM9O,OACX,2BAAG,kBAAC,mBAAD,CAAkBK,GAAG,gBAAgBgX,eAAe,cAGzD,yBAAKhX,GAAG,mBAAmByyB,IAE5B1T,EACC,kBAAC,GAAD,CACEZ,YAAa5e,KAAKkP,MAAMge,aAC1B,yBAAKzsB,GAAG,gBAEV,6BACE,uBAAG0O,KAAK,IAAI5O,QAASP,KAAKsR,oBACxB,uBAAGnR,UAAU,kBAAb,gBAILH,KAAKC,MAAMmiB,cACV,kBAAC,GAAD,CACE/O,MAAOrT,KAAKC,MAAMoiB,WAClB5O,KAAMzT,KAAKC,MAAMqiB,UACjB/O,aAAcvT,KAAKC,MAAM8E,UACzB,KACJ,kBAAC,GAAD,CAAauO,KAAMtT,KAAKkP,MAAM6d,mBAC9B,yBAAKtsB,GAAG,sBACN,yBAAKA,GAAG,iBAAiBilB,IAAK1lB,KAAKyzB,uBACjC,wBAAIhzB,GAAG,WAAWN,UAAWoyB,GAC1BF,IAGHryB,KAAKkP,MAAMqe,SASX,KARF,yBAAK9sB,GAAG,yBACLT,KAAKkP,MAAMse,eACZ,yBAAK/sB,GAAG,mBACN,kBAAC,mBAAD,CAAkBA,GAAG,wBAAwBgX,eAAe,2BAG5D,OAILzX,KAAKkP,MAAMme,wBAA0BrtB,KAAKkP,MAAMwe,YAC/C,yBAAKjtB,GAAG,gCACN,uBAAGN,UAAU,4BAAb,SADF,IACoD,kBAAC,mBAAD,CAChDM,GAAG,2BAA2BgX,eAAe,kCAFjD,IAGqE,uBAAGtI,KAAK,IACvE5O,QAASP,KAAK0zB,kBAAkB,kBAAC,mBAAD,CAAkBjzB,GAAG,yBACrDgX,eAAe,YALrB,KAMS,KACVzX,KAAKkP,MAAMwe,YACV,kBAAC,GAAD,CAAY7oB,SAAU7E,KAAK2zB,0BAE3B,kBAAC,GAAD,CACExL,UAAWnoB,KAAKkP,MAAMoe,SACtBtE,cAAehpB,KAAKC,MAAM6wB,YAC1B3H,WAAYnpB,KAAK4zB,aACjB/K,aAAc7oB,KAAK8pB,iBACnBlB,cAAe5oB,KAAKgqB,kBACpBjlB,QAAS/E,KAAKC,MAAM8E,WAK9BitB,EAAY,yBAAKvxB,GAAG,cAAcwxB,QAxLlCD,EACE,kBAAC,GAAD,CAAUnG,SAAU7rB,KAAKC,MAAM4rB,SAC7BC,cAAe9rB,KAAKC,MAAM6rB,cAC1BC,cAAe/rB,KAAKC,MAAM8rB,gBAuLhC,OAAOiG,K,2CAnuBT,YAAY/xB,GAAO,M,IAAA,O,4FAAA,U,EACjB,U,EAAA,iBAAMA,K,gDAEDiP,MAAQsd,GAAasD,yBAAyB7vB,EAAO,IAG1D,EAAKguB,MAAQ,EAAKA,MAAMhvB,KAAX,OACb,EAAKkzB,oBAAsB,EAAKA,oBAAoBlzB,KAAzB,OAC3B,EAAKmzB,mBAAqB,EAAKA,mBAAmBnzB,KAAxB,OAC1B,EAAK20B,aAAe,EAAKA,aAAa30B,KAAlB,OACpB,EAAKw0B,sBAAwB,EAAKA,sBAAsBx0B,KAA3B,OAC7B,EAAK2uB,kBAAoB,EAAKA,kBAAkB3uB,KAAvB,OACzB,EAAKwvB,iBAAmB,EAAKA,iBAAiBxvB,KAAtB,OACxB,EAAKyvB,kBAAoB,EAAKA,kBAAkBzvB,KAAvB,OACzB,EAAKmvB,iBAAmB,EAAKA,iBAAiBnvB,KAAtB,OACxB,EAAKqvB,0BAA4B,EAAKA,0BAA0BrvB,KAA/B,OACjC,EAAKuvB,kBAAoB,EAAKA,kBAAkBvvB,KAAvB,OACzB,EAAK+zB,oBAAsB,EAAKA,oBAAoB/zB,KAAzB,OAC3B,EAAKizB,mBAAqB,EAAKA,mBAAmBjzB,KAAxB,OAC1B,EAAKg0B,mBAAqB,EAAKA,mBAAmBh0B,KAAxB,OAC1B,EAAKqS,mBAAqB,EAAKA,mBAAmBrS,KAAxB,OAC1B,EAAK8zB,6BAA+B,EAAKA,6BAA6B9zB,KAAlC,OACpC,EAAK00B,wBAA0B,EAAKA,wBAAwB10B,KAA7B,OAC/B,EAAKy0B,iBAAmB,EAAKA,iBAAiBz0B,KAAtB,OACxB,EAAK6qB,iBAAmB,EAAKA,iBAAiB7qB,KAAtB,OACxB,EAAK+qB,kBAAoB,EAAKA,kBAAkB/qB,KAAvB,OAzBR,EAuuBNiJ,4BAAWskB,I,0zBChyBLqH,I,uOAAqBp0B,IAAMM,e,qDACrC,WACP,OACE,6BACE,uBAAGoP,KAAK,IAAI5O,QAAS,SAAC0D,GAAOA,EAAEI,iBAAkB,EAAKpE,MAAM6zB,eAAgB,uBAAG3zB,UAAU,kBAAb,SAD9E,IAGE,uBAAGgP,KAAK,IAAI5O,QAAS,SAAC0D,GAAOA,EAAEI,iBAAkB,EAAKpE,MAAM8zB,eAAgB,uBAAG5zB,UAAU,kBAAb,kB,6+BCN/D6zB,I,uOAAkBv0B,IAAMM,e,qDAClC,WACP,OACI,6BACE,uBAAGoP,KAAK,IAAI5O,QAAS,SAAC0D,GAAOA,EAAEI,iBAAkB,EAAKpE,MAAMg0B,aAAc,uBAAG9zB,UAAU,kBAAb,eAD5E,IAGE,uBAAGgP,KAAK,IAAI5O,QAAS,SAAC0D,GAAOA,EAAEI,iBAAkB,EAAKpE,MAAM8zB,eAAgB,uBAAG5zB,UAAU,kBAAb,kB,6+BCDjE+zB,I,uOAAmBz0B,IAAMM,e,qDAE1C,OACI,yBAAKU,GAAG,qBAAqBN,UAAU,iBACrC,yBAAKM,GAAG,cAAcN,UAAU,cAC9B,kBAAC,EAAD,CACE8J,OAAQjK,KAAKC,MAAMgK,OACnBxH,MAAOzC,KAAKC,MAAMwS,SAClBrS,MAAOJ,KAAKC,MAAMG,SAEtB,yBAAKK,GAAG,kBAAkBN,UAAU,eAAeH,KAAKC,MAAMG,OACxC,UAArBJ,KAAKC,MAAMiP,MACR,kBAAC,GAAD,CAAW+kB,SAAUj0B,KAAKC,MAAMg0B,SAAUF,WAAY/zB,KAAKC,MAAM8zB,aAC9C,aAArB/zB,KAAKC,MAAMiP,MACT,kBAAC,GAAD,CAAc4kB,WAAY9zB,KAAKC,MAAM6zB,WAAYC,WAAY/zB,KAAKC,MAAM8zB,aAC1E,KACD/zB,KAAKC,MAAMkT,SACT,kBAAC,GAAD,CAAYA,SAAUnT,KAAKC,MAAMkT,WAAe,U,85BChB7D,I,SAAMxQ,GAAWC,yBAAe,CAC9BuxB,wBAAyB,CAAF,uEAOJC,I,uOAAqB30B,IAAMkE,W,+CASlB1D,GAC1B,IAAMiS,EAAW,GACbmiB,EAAgB,EAChBC,EAAgB,EAyBpB,OAxBAr0B,EAAMs0B,SAAS/tB,IAAI,SAAC1I,GACdA,EAAEuU,SAAWvU,EAAEuU,QAAQmiB,KACrBv0B,EAAMwD,QACRyO,EAAS/P,KAAKrE,GAEdw2B,IAEQr0B,EAAMwD,UAChByO,EAAS/P,KAAKrE,GACdu2B,GAA4B,EAAXv2B,EAAEsT,OAAa,EAAI,KAGxCc,EAAS0H,KAAK,SAAS6B,EAAG1L,GACxB,OAAQA,EAAE0kB,SAAW,IAAMhZ,EAAEgZ,SAAW,KAGtB,EAAhBH,GACFpiB,EAAS/P,KAAK,CACZqP,OAAQ,UACRpR,MAAOuC,GAASwxB,wBAChB1iB,OAAQ,CAACnL,MAAOguB,KAIb,CACLjW,YAAanM,EACbmiB,cAAeA,M,6CAIA7lB,EAAWsG,GAC5B,GAAItG,EAAU+lB,UAAYv0B,KAAKC,MAAMs0B,UAAY/lB,EAAU/K,SAAWzD,KAAKC,MAAMwD,QAAS,CACxF,IAAM2a,EAAWgW,GAAarf,qBAAqB/U,KAAKC,OACxDD,KAAKyO,SAAS2P,GACVA,EAASiW,eAAiBvf,EAAUuf,eACtC1Z,GAAcyD,EAASiW,kB,qCAM3Br0B,KAAKC,MAAMy0B,kB,+BAGJ,WACP,OACE,kBAAC,uBAAD,CAAsBj0B,GAAG,qBACvBgX,eAAe,oCAEf,SAACvB,GAAD,OAAiB,kBAAC,GAAD,CACftD,UAAW,EAAK3S,MAAM2S,UACtBV,SAAU,EAAKhD,MAAMmP,YACrBpL,iBAAkBiD,EAClBnE,cAAe,EAAK9R,MAAM8R,cAC1BU,SAAU,EAAKxS,MAAMwS,SACrBtB,YAAY,EACZwB,YAAY,EACZE,gBAAiB,EAAK5S,MAAM4S,gBAC5BtC,gBAAiB,EAAKtQ,MAAMsQ,gBAC5B1L,SAAU,EAAK8vB,oB,2CAvEvB,YAAY10B,GAAO,M,IAAA,O,4FAAA,U,EACjB,U,EAAA,iBAAMA,K,gDAED00B,aAAe,EAAKA,aAAa11B,KAAlB,OAEpB,EAAKiQ,MAAQklB,GAAarf,qBAAqB9U,GAL9B,E,oLCdA20B,I,0CAEF51B,EAAKN,GACpBm2B,aAAaC,QAAQ91B,EAAK+1B,KAAKC,UAAUt2B,M,gCAI1BM,GACf,IAAMN,EAAQm2B,aAAaI,QAAQj2B,GACnC,OAAON,GAASq2B,KAAK/D,MAAMtyB,K,mCAITM,EAAKN,GACvB,IAAMw2B,EAASl1B,KAAKm1B,UAAUn2B,GAC9BgB,KAAKo1B,UAAUp2B,EAAKb,OAAO8uB,OAAOiI,GAAU,GAAIx2B,M,iCAIhCM,GAChB61B,aAAaQ,WAAWr2B,O,05BCVPs2B,I,uOAA0B71B,IAAMM,e,8DAuBjCkE,GAChBjE,KAAKyO,SAAS,CAAC8mB,MAAOtxB,EAAEG,OAAO1F,U,2CAGZ82B,GACnBx1B,KAAKyO,SAAS,CAAC+mB,SAAUA,M,wCAGTvxB,GAChBjE,KAAKyO,SAAS,CAACgnB,MAAOxxB,EAAEG,OAAO1F,U,qCAGlBuF,GACbjE,KAAKyO,SAAS,CAAC+D,GAAIvO,EAAEG,OAAO1F,U,yCAGXoO,GACjB9M,KAAKyO,SAAS,CAAC4M,aAAcvO,M,8CAI7B8nB,GAAiBQ,UAAU,kBAAmBp1B,KAAKkP,MAAMwmB,WACzD11B,KAAKyO,SAAS,CAACinB,WAAY11B,KAAKkP,MAAMwmB,c,mCAG3BzxB,GACXA,EAAEI,iBACFrE,KAAKyO,SAAS,CAACknB,cAAc,IAC7B31B,KAAKC,MAAM21B,gBACT51B,KAAKkP,MAAMqmB,MAAM/qB,OACjBxK,KAAKkP,MAAMsmB,SAAShrB,OACpB4Q,GAAMpb,KAAKkP,MAAMsD,GAAGhI,OAAOkC,UAAU,E1CKX,I0CLiC1M,KAAKkP,MAAMmM,cACtE,CAAC,KAAQ,QAAS,IAAOrb,KAAKkP,MAAMumB,U,+BAG/B,WACHI,EAAgB,OAKpB,OAJI71B,KAAKC,MAAMkoB,WACb0N,GAAiB,aAIjB,0BAAM11B,UAAU,oBAAoBqX,SAAUxX,KAAK8X,cACjD,yBAAK3X,UAAU,kBACb,yBAAKA,UAAU,qBACb,kBAAC,mBAAD,CAAkBM,GAAG,gBACnB,SAACq1B,GAAD,OAAkB,2BAAO5qB,KAAK,OAAOgJ,YAAa4hB,EAAcvd,aAAa,YAC3E7Z,MAAO,EAAKwQ,MAAMqmB,MAAOjmB,SAAU,EAAKymB,kBAAmBhiB,UAAQ,EAACkC,WAAS,MAEjF,kBAAC,mBAAD,CAAkBxV,GAAG,mBACnB,SAACu1B,GAAD,OAAqB,kBAAC,GAAD,CAAiB9hB,YAAa8hB,EAAiBzd,aAAa,eAC/E7Z,MAAO,EAAKwQ,MAAMsmB,SAAUtd,WAAY,EAAK+d,qBAC7CliB,UAAU,OAGhB,kBAAC,GAAD,CACEjF,eAAgB9O,KAAK+iB,mBACrBhe,QAAS/E,KAAKC,MAAM8E,WAExB,yBAAM5E,UAAU,kBACd,kBAAC,mBAAD,CAAkBM,GAAG,mBAAmBgX,eAAe,4BAErD,SAACye,GAAD,OAAsB,2BAAOhrB,KAAK,OAAOgJ,YAAagiB,EAAkB3d,aAAa,OACnF7Z,MAAO,EAAKwQ,MAAMsD,GAAIlD,SAAU,EAAK6mB,eAAgBpiB,UAAQ,OAGnE,yBAAK5T,UAAU,kBACb,kBAAC,mBAAD,CAAkBM,GAAG,eAAegX,eAAe,gCAEjD,SAAC2e,GAAD,OAAkB,2BAAOlrB,KAAK,QAAQgJ,YAAakiB,EAAc7d,aAAa,QAC5E7Z,MAAO,EAAKwQ,MAAMumB,MAAOnmB,SAAU,EAAK+mB,kBAAmBtiB,UAAQ,OAGzE,yBAAK5T,UAAU,kBACb,kBAAC,GAAD,CAAUM,GAAG,aAAazC,KAAK,aAAa0R,QAAS1P,KAAKkP,MAAMwmB,UAC9DpmB,SAAUtP,KAAKs2B,wBACjB,kBAAC,mBAAD,CAAkB71B,GAAG,kBACnB,SAAC81B,GAAD,OAAoB,2BAAO/mB,QAAQ,cAAf,IAAmC+mB,MAG3D,yBAAKp2B,UAAU,kBACb,4BAAQA,UAAW01B,EAAe3qB,KAAK,UACrC,kBAAC,mBAAD,CAAkBzK,GAAG,iBAAiBgX,eAAe,mB,kBAxG/D,YAAYxX,GAAO,M,IAAA,O,4FAAA,U,EACjB,U,EAAA,iBAAMA,K,gDAEDiP,MAAQ,CACXqmB,MAAO,GACPC,SAAU,GACVC,MAAO,GACPjjB,GAAI,GACJ6I,aAAc,KACdsa,cAAc,EACdD,UAAWd,GAAiBO,UAAU,mBAGxC,EAAKY,kBAAoB,EAAKA,kBAAkB92B,KAAvB,OACzB,EAAKg3B,qBAAuB,EAAKA,qBAAqBh3B,KAA1B,OAC5B,EAAKo3B,kBAAoB,EAAKA,kBAAkBp3B,KAAvB,OACzB,EAAKk3B,eAAiB,EAAKA,eAAel3B,KAApB,OACtB,EAAK8jB,mBAAqB,EAAKA,mBAAmB9jB,KAAxB,OAC1B,EAAKq3B,sBAAwB,EAAKA,sBAAsBr3B,KAA3B,OAC7B,EAAK6Y,aAAe,EAAKA,aAAa7Y,KAAlB,OAnBH,E,qvBCEAu3B,I,uOAAwB/2B,IAAMkE,W,gEAoC/C,IAAM8yB,EAAKz2B,KAAKC,MAAMoF,OAAO+tB,aAC7BqD,EAAGC,eAAiB12B,KAAK22B,eACzBF,EAAGxY,cAAgBje,KAAK42B,Y,6CAIxB,IAAMH,EAAKz2B,KAAKC,MAAMoF,OAAO+tB,aAC7BqD,EAAGxY,cAAgBje,KAAKkP,MAAM2nB,eAC9BJ,EAAGC,oBAAiBlhB,I,gCAGZyG,GACRjc,KAAKyO,SAAS,CAACwN,KAAMA,M,qCAGR6a,GACb92B,KAAKyO,SAAS,CAACsoB,YAAaD,GAAS,O,2CAGlBtkB,IACnBA,EAAKA,EAAGhI,OAAOkC,UAAU,E3CAG,O2CE1B1M,KAAKyO,SAAS,CAAC6Q,SAAU9M,IACzBxS,KAAKC,MAAM+2B,qBAAgBxhB,EAAW4F,GAAM5I,EAAI,U,2CAI/BykB,GACnBj3B,KAAKyO,SAAS,CAAC+mB,SAAUyB,IACzBj3B,KAAKC,MAAM+2B,gBAAgBC,K,yCAGVnqB,GACjB9M,KAAKyO,SAAS,CAACxE,OAAQ6C,IACvB9M,KAAKC,MAAM+2B,qBAAgBxhB,EAAW4F,GAAM,KAAMtO,GAAOnN,IAAO2gB,a,0CAG9CmQ,EAAM/gB,GACZ,SAAR+gB,EACFzwB,KAAKC,MAAMi3B,sBAAsBxnB,GAChB,SAAR+gB,GACTzwB,KAAKC,MAAMk3B,0BAA0BznB,K,uCAIxBzL,GACfjE,KAAKyO,SAAS,CAAC2oB,QAASnzB,EAAEG,OAAO1F,MAAO24B,gBAAgB,M,wCAGxCpzB,GACE,KAAdA,EAAEO,QAEJxE,KAAKyO,SAAS,CAAC2oB,QAAS,GAAIE,eAAe,IACpB,KAAdrzB,EAAEO,SAEXxE,KAAKu3B,kBAAkBtzB,K,0CAKzB,IAAIvF,EAAQsB,KAAKkP,MAAMkoB,QAAQ5sB,OAC/B,GAAK9L,EAAL,CAKA,IrBpDoBsY,EqBqDhBwgB,ErB5CgBxgB,EqB2ChBA,GrBnDNA,GADsBA,EqBoDFtY,GrBnDV8L,OACN,6EAA6EoR,KAAK5E,GAC7EA,EAAI2C,QAAQ,WAAY,IAE1B,MqBiDD3C,EACFwgB,EAAS,OrB7CbxgB,GADsBA,EqBgDJtY,GrB/CR8L,QqB+CNwM,ErB9CA,mDAAmD4E,KAAK5E,GACnDA,EAEF,QqB6CDwgB,EAAS,UAGTA,GACFx3B,KAAKC,MAAMw3B,UAAUD,EAAQxgB,GAC7BhX,KAAKyO,SAAS,CAAC6oB,eAAe,EAAOF,QAAS,MAE9Cp3B,KAAKyO,SAAS,CAAC4oB,gBAAgB,SAlB/Br3B,KAAKyO,SAAS,CAAC6oB,eAAe,EAAOD,gBAAgB,M,oDAsB3BzW,GAC5B5gB,KAAKyO,SAAS,CACZiS,wBAAyBE,EACzBQ,kBAAmBphB,KAAKkP,MAAM0R,O,oDAKhC5gB,KAAKyO,SAAS,CAACiS,6BAAyBlL,M,+CAGjBiL,GACvB,IAAI3B,EAAS,GACbA,EAAO9e,KAAKkP,MAAMwR,yBAA2BD,EAC7CzgB,KAAKC,MAAM+2B,qBAAgBxhB,OAAWA,EAAWsJ,GAEjD,IAAIV,EAAW,CAACsC,6BAAyBlL,GACzC4I,EAASpe,KAAKkP,MAAMwR,yBAA2BD,EAC/CzgB,KAAKyO,SAAS2P,K,wCAGEnC,GAEZT,GAAWxb,KAAKkP,MAAM+M,KAAKtL,MAAM,GAAIsL,EAAKtL,MAAM,KAGpD3Q,KAAKC,MAAMy3B,aAAazb,K,+BAGjB,WACH8a,EAAc,GAYlB,OAXA/2B,KAAKkP,MAAM6nB,YAAYvwB,IAAI,SAACmxB,GAC1BZ,EAAY50B,KAAK,yBAAKnD,IAAK24B,EAAKC,KAAO,IAAMD,EAAK3gB,IAAM,IAAM2gB,EAAKE,MAAOF,EAAKC,KAA9D,KAAqE,4BAAKD,EAAK3gB,KAC9F,kCAAU2gB,EAAKE,KAKX,KAJF,uBAAG1oB,KAAK,IAAI5O,QAAS,SAAC0D,GAAOA,EAAEI,iBAAkB,EAAKpE,MAAM63B,cAAcH,EAAKC,KAAMD,EAAK3gB,OACtF,kBAAC,mBAAD,CAAkBvW,GAAG,6BAA6BgX,eAAe,aAFvE,IAKU,uBAAGtI,KAAK,IAAI5O,QAAS,SAAC0D,GAAOA,EAAEI,iBAAkB,EAAKpE,MAAM83B,aAAaJ,EAAKC,KAAMD,EAAK3gB,OAAQ,uBACvG7W,UAAU,uBAD6F,wBAK7G,kBAAC,IAAM63B,SAAP,KAAiBh4B,KAAKkP,MAAMwR,wBAC1B,kBAAC,GAAD,CACE9hB,KAAMoB,KAAKkP,MAAMkS,kBACjB/G,KAAK,IACL7C,SAAUxX,KAAK0iB,yBACfvP,SAAUnT,KAAK2iB,8BAEjB,yBAAKliB,GAAG,eAAeN,UAAU,oBAC/B,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,qBACb,6BAAK,2BAAOA,UAAU,SACpB,kBAAC,mBAAD,CAAkBM,GAAG,kBAAkBgX,eAAe,gBAGxD,6BAAK,kBAAC,mBAAD,CAAkBhX,GAAG,oBACxB,SAACw3B,GAAD,OAA2B,kBAAC,GAAD,CACzB/jB,YAAa+jB,EACbv5B,MAAO,EAAKwQ,MAAMoQ,SAClBpH,WAAY,EAAK0K,0BAErB,6BAAK,2BAAOziB,UAAU,SACpB,kBAAC,mBAAD,CAAkBM,GAAG,iBAAiBgX,eAAe,eAGvD,6BACE,kBAAC,mBAAD,CAAkBhX,GAAG,4BAA4BgX,eAAe,aAE9D,SAACygB,GAAD,OAAwB,kBAAC,GAAD,CACtBhkB,YAAagkB,EACbhtB,KAAK,WACLgN,WAAY,EAAKigB,2BAIzB,kBAAC,GAAD,CACEluB,OAAQjK,KAAKkP,MAAMjF,OACnBmF,IAAKpP,KAAKC,MAAMwS,SAChBrS,MAAOJ,KAAKkP,MAAMoQ,SAClBxQ,eAAgB9O,KAAK+iB,mBACrBhe,QAAS/E,KAAKC,MAAM8E,WAExB,yBAAK5E,UAAU,OACf,yBAAKA,UAAU,kBACb,2BAAOqP,QAAQ,iBACb,kBAAC,mBAAD,CAAkB/O,GAAG,sBAAsBgX,eAAe,oBAG5D,kBAAC,GAAD,CAAUzZ,KAAK,QAAQyC,GAAG,gBACxBiP,QAAS1P,KAAKC,MAAMm4B,cACpB9oB,SAAUtP,KAAKq4B,uBAEnB,yBAAKl4B,UAAU,kBACb,2BAAOqP,QAAQ,kBACdxP,KAAKC,MAAMq4B,qBACV,kBAAC,mBAAD,CAAkB73B,GAAG,2BAA2BgX,eAAe,yBAG/D,kBAAC,mBAAD,CAAkBhX,GAAG,oCACnBgX,eAAe,2CAInB,kBAAC,GAAD,CAAUzZ,KAAK,QAAQyC,GAAG,iBACxBiP,QAAS1P,KAAKC,MAAMs4B,cACpBjpB,SAAUtP,KAAKC,MAAMq4B,qBAAuBt4B,KAAKq4B,oBAAsB,QAE3E,yBAAKl4B,UAAU,OACf,kBAAC,mBAAD,CAAkBM,GAAG,oBAAoBgX,eAAe,yBAEtD,SAAC+gB,GAAD,OAAuB,kBAAC,GAAD,CACrBp4B,MAAOo4B,EACPtc,WAAW,EACXD,KAAM,EAAK/M,MAAM+M,KACjBzE,SAAU,EAAK2L,sBAEnB,yBAAKhjB,UAAU,OACf,yBAAKA,UAAU,qBACb,6BACE,2BAAOA,UAAU,SACf,kBAAC,mBAAD,CAAkBM,GAAG,sBAAsBgX,eAAe,gBAI9D,yBAAKtX,UAAU,UACZ42B,EACA/2B,KAAKkP,MAAMooB,cACV,2BAAOpsB,KAAK,OAAOxM,MAAOsB,KAAKkP,MAAMxQ,MACnCyB,UAAWH,KAAKkP,MAAMmoB,eAAiB,UAAY,KACnDnjB,YAAY,wBAAwBH,SAAS,WAAWkC,WAAS,EACjE3G,SAAUtP,KAAKy4B,iBAAkB1iB,UAAW/V,KAAK04B,kBAAmB7iB,OAAQ7V,KAAKu3B,oBACjF,KACJ,6BAAK,uBAAGpoB,KAAK,IAAI5O,QAAS,SAAC0D,GAAOA,EAAEI,iBAAkB,EAAKoK,SAAS,CAAC6oB,eAAe,MAA/E,oBAGT,yBAAKn3B,UAAU,OACf,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,kBACb,2BAAOA,UAAU,SAAQ,kBAAC,mBAAD,CAAkBM,GAAG,gBAAgBgX,eAAe,cAE7E,4BAAKzX,KAAKC,MAAMwS,WAElB,6BACE,2BAAOtS,UAAU,SACf,kBAAC,mBAAD,CAAkBM,GAAG,4BAA4BgX,eAAe,2BAIpE,yBAAKtX,UAAU,UACb,sCAAW,wBAAIA,UAAU,YACvBI,QAASP,KAAKmiB,8BAA8BljB,KAAKe,KAAM,SAAUA,KAAKkP,MAAM2Q,OAC9E,sCAAW,wBAAI1f,UAAU,YACvBI,QAASP,KAAKmiB,8BAA8BljB,KAAKe,KAAM,SAAUA,KAAKkP,MAAM4Q,SAGlF,yBAAK3f,UAAU,OACf,yBAAKA,UAAU,qBACb,uBAAGgP,KAAK,IAAIhP,UAAU,kBAAkBI,QAAS,SAAC0D,GAAOA,EAAEI,iBAAkB,EAAKpE,MAAM04B,aACtF,uBAAGx4B,UAAU,kBAAb,eADF,KACsD,kBAAC,mBAAD,CAAkBM,GAAG,gBACvEgX,eAAe,aAGrB,yBAAKtX,UAAU,OACf,yBAAKA,UAAU,qBACb,6BACE,2BAAOA,UAAU,SACf,kBAAC,mBAAD,CAAkBM,GAAG,cAAcgX,eAAe,YAItD,yBAAKtX,UAAU,UACb,uBAAGgP,K3C1Oc,uB2C0OShP,UAAU,cAAciE,OAAO,UACvD,uBAAGjE,UAAU,kBAAb,SADF,KACgD,kBAAC,mBAAD,CAAkBM,GAAG,kBACjEgX,eAAe,iBAGrB,yBAAKtX,UAAU,UACb,uBAAGgP,K3C1OoB,+B2C0OShP,UAAU,cAAciE,OAAO,UAC7D,uBAAGjE,UAAU,kBAAb,eADF,KACsD,kBAAC,mBAAD,CAAkBM,GAAG,wBACvEgX,eAAe,uBAGrB,yBAAKtX,UAAU,UACb,uBAAGgP,K3CnPkB,iC2CmPShP,UAAU,cAAciE,OAAO,UAC3D,uBAAGjE,UAAU,kBAAb,UADF,KACiD,kBAAC,mBAAD,CAAkBM,GAAG,sBAClEgX,eAAe,4B,kBAlT/B,YAAYxX,GAAO,M,iGAAA,U,EACjB,KAEA,IAAMw2B,GAFN,I,EAAA,iBAAMx2B,K,gDAEUA,MAAMoF,OAAO+tB,aACvBtU,EAAS2X,EAAG1X,mBAJD,OAKjB,EAAK7P,MAAQ,CACXoQ,SAAUmX,EAAGlkB,OAASkkB,EAAGlkB,OAAOC,QAAKgD,EACrCvL,OAAQe,GAAayrB,EAAGlkB,OAASkkB,EAAGlkB,OAAOtH,MAAQ,MACnD4U,KAAMf,EAASA,EAAOe,KAAO,KAC7BC,KAAMhB,EAASA,EAAOgB,KAAO,KAC7B7D,KAAMwa,EAAGxa,OACT8a,YAAaN,EAAGmC,kBAAoB,GACpCtB,eAAe,EACfD,gBAAgB,EAChBD,QAAS,GACT1W,6BAAyBlL,EACzBqhB,eAAgBJ,EAAGxY,eAGrB,EAAK2Y,UAAY,EAAKA,UAAU33B,KAAf,OACjB,EAAK03B,eAAiB,EAAKA,eAAe13B,KAApB,OACtB,EAAK2jB,qBAAuB,EAAKA,qBAAqB3jB,KAA1B,OAC5B,EAAKk5B,qBAAuB,EAAKA,qBAAqBl5B,KAA1B,OAC5B,EAAK8jB,mBAAqB,EAAKA,mBAAmB9jB,KAAxB,OAC1B,EAAKo5B,oBAAsB,EAAKA,oBAAoBp5B,KAAzB,OAC3B,EAAKw5B,iBAAmB,EAAKA,iBAAiBx5B,KAAtB,OACxB,EAAKy5B,kBAAoB,EAAKA,kBAAkBz5B,KAAvB,OACzB,EAAKs4B,kBAAoB,EAAKA,kBAAkBt4B,KAAvB,OACzB,EAAKkjB,8BAAgC,EAAKA,8BAA8BljB,KAAnC,OACrC,EAAK0jB,4BAA8B,EAAKA,4BAA4B1jB,KAAjC,OACnC,EAAKyjB,yBAA2B,EAAKA,yBAAyBzjB,KAA9B,OAChC,EAAKkkB,kBAAoB,EAAKA,kBAAkBlkB,KAAvB,OA/BR,E,qvBCRA45B,I,uOAAkBp5B,IAAMkE,W,8DAgBzBM,GAChBjE,KAAKyO,SAAS,CAAC8mB,MAAOtxB,EAAEG,OAAO1F,U,2CAGZuF,GACnBjE,KAAKyO,SAAS,CAAC+mB,SAAUvxB,EAAEG,OAAO1F,U,8CAIlCk2B,GAAiBQ,UAAU,kBAAmBp1B,KAAKkP,MAAMwmB,WACzD11B,KAAKyO,SAAS,CAACinB,WAAY11B,KAAKkP,MAAMwmB,c,mCAG3BzxB,GACXA,EAAEI,iBACFrE,KAAKC,MAAM64B,QAAQ94B,KAAKkP,MAAMqmB,MAAM/qB,OAAQxK,KAAKkP,MAAMsmB,SAAShrB,U,+BAGzD,WACHqrB,EAAgB,OAKpB,OAJI71B,KAAKC,MAAMkoB,WACb0N,GAAiB,aAIjB,0BAAMp1B,GAAG,aAAa+W,SAAUxX,KAAK8X,cACnC,kBAAC,mBAAD,CAAkBrX,GAAG,eAAegX,eAAe,SAGjD,SAACqe,GAAD,OAAkB,2BAAO5qB,KAAK,OAAOzK,GAAG,aACtCyT,YAAa4hB,EACbvd,aAAa,WACbwgB,YAAY,MACZC,eAAe,OACft6B,MAAO,EAAKwQ,MAAMqmB,MAClBjmB,SAAU,EAAKymB,kBACfhiB,UAAQ,EAACkC,WAAS,MAGtB,kBAAC,mBAAD,CAAkBxV,GAAG,kBAAkBgX,eAAe,YAGpD,SAACue,GAAD,OAAqB,kBAAC,GAAD,CAAiB9qB,KAAK,WAAWzK,GAAG,gBACvDyT,YAAa8hB,EACbzd,aAAa,mBACb7Z,MAAO,EAAKwQ,MAAMsmB,SAClBlmB,SAAU,EAAK2mB,qBACfliB,UAAU,MAGd,yBAAK5T,UAAU,kBACb,kBAAC,GAAD,CAAUM,GAAG,aAAazC,KAAK,aAAa0R,QAAS1P,KAAKkP,MAAMwmB,UAC9DpmB,SAAUtP,KAAKs2B,wBACjB,2BAAO9mB,QAAQ,cAAf,IACE,kBAAC,mBAAD,CAAkB/O,GAAG,iBAAiBgX,eAAe,oBAGvD,uBAAGtI,KAAK,UACN,kBAAC,mBAAD,CAAkB1O,GAAG,uBAAuBgX,eAAe,uBAI/D,yBAAKtX,UAAU,kBACb,4BAAQA,UAAW01B,EAAe3qB,KAAK,UACrC,kBAAC,mBAAD,CAAkBzK,GAAG,iBAAiBgX,eAAe,mB,kBA/E/D,YAAYxX,GAAO,M,IAAA,O,4FAAA,U,EACjB,U,EAAA,iBAAMA,K,gDAEDiP,MAAQ,CACXqmB,MAAOt1B,EAAMs1B,MACbC,SAAU,GACVyD,SAAUh5B,EAAM8rB,cAChB2J,UAAWd,GAAiBO,UAAU,mBAExC,EAAKY,kBAAoB,EAAKA,kBAAkB92B,KAAvB,OACzB,EAAKg3B,qBAAuB,EAAKA,qBAAqBh3B,KAA1B,OAC5B,EAAKq3B,sBAAwB,EAAKA,sBAAsBr3B,KAA3B,OAC7B,EAAK6Y,aAAe,EAAKA,aAAa7Y,KAAlB,OAZH,E,2uBCPrB,I,MAAM0D,GAAWC,yBAAe,CAC9Bs2B,WAAY,CAAF,qDAONC,I,uOAAqB15B,IAAMM,e,yDAalBkE,GACXjE,KAAKyO,SAAS,CAAC2qB,QAASn1B,EAAEG,OAAO1F,U,qCAGpBuF,GACC,UAAVA,EAAEjF,KACJgB,KAAK8X,aAAa7T,K,mCAITA,GAEX,GADAA,EAAEI,iBACErE,KAAKkP,MAAMkqB,QAAS,CACtB,IAAIp7B,EAAOgC,KAAKkP,MAAMkqB,QAAQ5uB,OACZ,EAAdxM,EAAKoE,SAAoC,OAArBpE,EAAKyD,OAAO,EAAG,IAAoC,OAArBzD,EAAKyD,OAAO,EAAG,IACnEzB,KAAKC,MAAMuX,SAASxZ,GAEpBgC,KAAKC,MAAM8E,QAAQ/E,KAAKC,MAAMsH,KAAKD,cAAc3E,GAASu2B,YAAa,U,+BAKpE,WACP,OACE,yBAAK/4B,UAAU,cACb,yBAAKA,UAAU,kBACf,kBAAC,mBAAD,CAAkBM,GAAG,uBAAuBgX,eAAe,oBAEzD,SAACrD,GAAD,OAAY,2BAAOlJ,KAAK,OAAOgJ,YAAaE,EAC1C1V,MAAO,EAAKwQ,MAAMkqB,QAAS9pB,SAAU,EAAKK,aAC1CwZ,WAAY,EAAKU,eAAgB9V,UAAQ,OAG7C,yBAAK5T,UAAU,kBACb,4BAAQA,UAAU,OAAOI,QAASP,KAAK8X,cACrC,kBAAC,mBAAD,CAAkBrX,GAAG,mBAAmBgX,eAAe,qB,kBA/CjE,YAAYxX,GAAO,M,IAAA,O,4FAAA,U,EACjB,U,EAAA,iBAAMA,K,gDAEDiP,MAAQ,CACXkqB,QAAS,IAGX,EAAKzpB,aAAe,EAAKA,aAAa1Q,KAAlB,OACpB,EAAK4qB,eAAiB,EAAKA,eAAe5qB,KAApB,OACtB,EAAK6Y,aAAe,EAAKA,aAAa7Y,KAAlB,OATH,EAwDNiJ,4BAAWixB,I,qvBC5DLE,I,uOAAsB55B,IAAMM,e,2DAmBhCkE,GACbjE,KAAKyO,SAAS,CAAC+D,GAAIvO,EAAEG,OAAO1F,U,0CAGVuF,GAClBjE,KAAKyO,SAAS,CAAC4D,QAASpO,EAAEG,OAAO1F,U,yCAGhBoO,GACjB9M,KAAKyO,SAAS,CAAC4M,aAAcvO,M,wCAGbmP,GAChBjc,KAAKyO,SAAS,CAACwN,KAAMA,M,mCAGVhY,GACXA,EAAEI,iBAEF,IAAMmO,EAAKxS,KAAKkP,MAAMsD,GAAGhI,OAAOkC,UAAU,E9C0Bd,I8CzBtB2E,EAAUrR,KAAKkP,MAAMmD,QAAQ7H,OAAOkC,UAAU,E9CyBxB,I8CxBxB8F,GACFxS,KAAKC,MAAMuX,SAAShF,EAAIxS,KAAKkP,MAAMmM,aAAchK,EAASrR,KAAKkP,MAAM+M,Q,+BAIhE,WACH4Z,EAAgB,OAIpB,OAHI71B,KAAKC,MAAMkoB,WACb0N,GAAiB,aAGjB,0BAAM11B,UAAU,aAAaqX,SAAUxX,KAAK8X,cAC1C,yBAAK3X,UAAU,kBACb,yBAAKA,UAAU,qBACb,2BAAOA,UAAU,QAAQqP,QAAQ,gBAC/B,kBAAC,mBAAD,CAAkB/O,GAAG,sBAEvB,kBAAC,mBAAD,CAAkBA,GAAG,iCAAiCgX,eAAe,8BAEnE,SAACvD,GAAD,OAAiB,2BAAOhJ,KAAK,OAAOzK,GAAG,eAAeyT,YAAaA,EACjExV,MAAO,EAAKwQ,MAAMsD,GAAIlD,SAAU,EAAK6mB,eAAgBlgB,WAAS,EAAClC,UAAQ,MAE3E,6BACA,2BAAO5T,UAAU,QAAQqP,QAAQ,kBAC/B,kBAAC,mBAAD,CAAkB/O,GAAG,mBAEvB,kBAAC,mBAAD,CAAkBA,GAAG,+BACnB,SAACyT,GAAD,OAAiB,2BAAOhJ,KAAK,OAAOzK,GAAG,iBAAiByT,YAAaA,EACnExV,MAAO,EAAKwQ,MAAMmD,QAAS/C,SAAU,EAAKgqB,yBAGhD,kBAAC,GAAD,CACEv0B,QAAS/E,KAAKC,MAAM8E,QACpB+J,eAAgB9O,KAAK+iB,sBAEzB,kBAAC,mBAAD,CAAkBtiB,GAAG,qBACnB,SAACL,GAAD,OAAW,kBAAC,GAAD,CACT6b,KAAM,EAAK/M,MAAM+M,KACjBC,WAAW,EACXK,cAAe,EAAKgd,kBACpBn5B,MAAOA,MAEX,yBAAKD,UAAU,kBACb,4BAAQA,UAAW01B,GACjB,kBAAC,mBAAD,CAAkBp1B,GAAG,gBAAgBgX,eAAe,kB,kBAnF9D,YAAYxX,GAAO,M,IAAA,O,4FAAA,U,EACjB,U,EAAA,iBAAMA,K,gDAEDiP,MAAQ,CACXsD,GAAI,GACJH,QAAS,GACTgJ,aAAc,KACdY,KAAM,IAGR,EAAKka,eAAiB,EAAKA,eAAel3B,KAApB,OACtB,EAAKq6B,oBAAsB,EAAKA,oBAAoBr6B,KAAzB,OAC3B,EAAK8jB,mBAAqB,EAAKA,mBAAmB9jB,KAAxB,OAC1B,EAAKs6B,kBAAoB,EAAKA,kBAAkBt6B,KAAvB,OACzB,EAAKs6B,kBAAoB,EAAKA,kBAAkBt6B,KAAvB,OACzB,EAAK6Y,aAAe,EAAKA,aAAa7Y,KAAlB,OAfH,E,qvBCJAu6B,I,uOAAuB/5B,IAAMM,e,mEAgB1CC,KAAKkP,MAAMuqB,SACbz5B,KAAKyO,SAAS,CAAC0iB,OAAQ,GAAIsI,QAAQ,IACnCz5B,KAAKC,MAAMy5B,iBAAiB/5B,IAAO2gB,a,yCAIpBrc,GACjBjE,KAAKyO,SAAS,CAAC0iB,OAAQltB,EAAEG,OAAO1F,U,mCAGrBuF,GACXA,EAAEI,iBACF,IAAI4S,EAAQjX,KAAKkP,MAAMiiB,OAAO3mB,OAC9BxK,KAAKyO,SAAS,CAACgrB,OAAwB,EAAfxiB,EAAM7U,SAC9BpC,KAAKC,MAAMy5B,iBAAgC,EAAfziB,EAAM7U,OAAa6U,EAAQtX,IAAO2gB,Y,kCAGpDrc,GACVA,EAAEI,iBACErE,KAAKkP,MAAMuqB,QACbz5B,KAAKC,MAAMy5B,iBAAiB/5B,IAAO2gB,UAErCtgB,KAAKyO,SAAS,CAAC0iB,OAAQ,GAAIsI,QAAQ,M,oCAGvBx1B,GACE,UAAVA,EAAEjF,IACJgB,KAAK25B,aAAa11B,GACC,WAAVA,EAAEjF,KACXgB,KAAK45B,gB,+BAIA,WACP,OACE,yBAAKz5B,UAAU,cACb,yBAAKA,UAAU,kBACb,uBAAGA,UAAU,yBAAb,UACA,kBAAC,mBAAD,CAAkBM,GAAG,qBAAqBgX,eAAe,yDAEvD,SAACoiB,GAAD,OAAwB,2BAAO15B,UAAU,SAAS+K,KAAK,OACrDgJ,YAAa2lB,EACbn7B,MAAO,EAAKwQ,MAAMiiB,OAAQ7hB,SAAU,EAAKwqB,mBACzC/jB,UAAW,EAAKC,cAAejC,UAAQ,EAACkC,WAAS,MAErD,uBAAG9G,KAAK,IAAI5O,QAASP,KAAK45B,aACxB,uBAAGz5B,UAAU,kBAAb,gB,kBA7DV,YAAYF,GAAO,M,IAAA,O,4FAAA,U,EACjB,U,EAAA,iBAAMA,K,gDAEDiP,MAAQ,CACXuqB,QAAQ,EACRtI,OAAQ,IAGV,EAAK2I,mBAAqB,EAAKA,mBAAmB76B,KAAxB,OAC1B,EAAK06B,aAAe,EAAKA,aAAa16B,KAAlB,OACpB,EAAK26B,YAAc,EAAKA,YAAY36B,KAAjB,OACnB,EAAK+W,cAAgB,EAAKA,cAAc/W,KAAnB,OAXJ,E,2uBCQrB,I,MAAM0D,GAAWC,yBAAe,CAC9Bm3B,oBAAqB,CAAF,uEAKnBC,kBAAmB,CAAF,sEAObC,I,uOAAqBx6B,IAAMkE,W,gEAiB7B3D,KAAKC,MAAMwhB,e,qCAGExd,GACbA,EAAEI,iBACFlD,EAAe+4B,WAAW/4B,EAAeg5B,YAAYp4B,OAAOC,SAASZ,KAAM,MAAO6C,EAAES,cAAcC,QAAQlE,KAC1GT,KAAKyO,SAAS,CAAC2rB,YAAan2B,EAAES,cAAcC,QAAQlE,O,2CAGjCwW,GACnBjX,KAAKC,MAAMy5B,iBAAiBziB,GAC5BjX,KAAKyO,SAAS,CAAC4rB,YAAa16B,IAAO26B,YAAYrjB,GAAS,KAAOA,M,4CAG3CN,GACW,QAA3B3W,KAAKkP,MAAMkrB,cACbj5B,EAAe+4B,WAAW/4B,EAAeo5B,eAAex4B,OAAOC,SAASZ,KAAM,QAC9EpB,KAAKC,MAAMu6B,cAAc7jB,OAAKnB,M,2CAIbxX,EAAM0Q,EAAS+rB,EAAMxe,GACxC9a,EAAe+4B,WAAW/4B,EAAeo5B,eAAex4B,OAAOC,SAASZ,KAAM,QAC9EpB,KAAKC,MAAMu6B,mBAAchlB,EAAW4F,GAAMpd,EAAM0Q,GAAU+rB,EAAMxe,K,sCAGlD1W,GACdpE,EAAe+4B,WAAW/4B,EAAeo5B,eAAex4B,OAAOC,SAASZ,KAAM,QAC9EpB,KAAKC,MAAMu6B,cAAcj1B,K,+BAGlB,IAEDm1B,GAA0BpzB,EADRtH,KAAKC,MAAMsH,KAA5BD,eACuCtH,KAAKkP,MAAMmrB,YACvD13B,GAASq3B,kBAAoBr3B,GAASo3B,qBACxC,OACE,yBAAK55B,UAAU,eACb,wBAAIA,UAAU,UACZ,wBAAIA,UAAsC,QAA3BH,KAAKkP,MAAMkrB,YAAwB,SAAW,MAC3D,uBAAGjrB,KAAK,IAAIzI,UAAQ,MAAMnG,QAASP,KAAK26B,gBACtC,kBAAC,mBAAD,CAAkBl6B,GAAG,qBAAqBgX,eAAe,WAI7D,wBAAItX,UAAsC,QAA3BH,KAAKkP,MAAMkrB,YAAwB,SAAW,MAC3D,uBAAGjrB,KAAK,IAAIzI,UAAQ,MAAMnG,QAASP,KAAK26B,gBACtC,kBAAC,mBAAD,CAAkBl6B,GAAG,qBAAqBgX,eAAe,gBAI7D,wBAAItX,UAAsC,SAA3BH,KAAKkP,MAAMkrB,YAAyB,SAAW,MAC5D,uBAAGjrB,KAAK,IAAIzI,UAAQ,OAAOnG,QAASP,KAAK26B,gBACvC,kBAAC,mBAAD,CAAkBl6B,GAAG,uBAAuBgX,eAAe,aAKrC,QAA3BzX,KAAKkP,MAAMkrB,YACV,kBAAC,GAAD,CAAe5iB,SAAUxX,KAAK46B,uBACH,SAA3B56B,KAAKkP,MAAMkrB,YACX,kBAAC,GAAD,CACE5iB,SAAUxX,KAAK66B,gBACf91B,QAAS/E,KAAKC,MAAM8E,UACtB,yBAAK5E,UAAU,eACb,kBAAC,GAAD,CACE+K,KAAK,MACLwuB,iBAAkB15B,KAAK86B,uBACzB,kBAAC,GAAD,CACE5oB,SAAUlS,KAAKC,MAAM86B,cACrBtoB,SAAUzS,KAAKC,MAAMwS,SACrBQ,iBAAkBynB,EAClBvpB,YAAY,EACZwB,YAAY,EACZpC,iBAAiB,EACjBsC,gBAAiB7S,KAAK6X,8B,kBA1FlC,YAAY5X,GAAO,M,IAAA,O,4FAAA,U,EACjB,U,EAAA,iBAAMA,K,gDAEDiP,MAAQ,CACXkrB,YAAa,MACbC,YAAa,MAGf,EAAKM,eAAiB,EAAKA,eAAe17B,KAApB,OACtB,EAAK67B,qBAAuB,EAAKA,qBAAqB77B,KAA1B,OAC5B,EAAK4Y,sBAAwB,EAAKA,sBAAsB5Y,KAA3B,OAC7B,EAAK27B,qBAAuB,EAAKA,qBAAqB37B,KAA1B,OAC5B,EAAK47B,gBAAkB,EAAKA,gBAAgB57B,KAArB,OAZN,EAiGNiJ,4BAAW+xB,I,qvBCrHLe,I,uOAA0Bv7B,IAAMM,e,gEAejD,IAAIsC,EAASlB,EAAemB,aAAaP,OAAOC,SAASZ,MACzDpB,KAAKyO,SAAS,CAACwsB,MAAO54B,EAAOd,OAAO05B,MAAOC,OAAQ74B,EAAOd,OAAO25B,W,mCAGtDj3B,GACXA,EAAEI,iBACErE,KAAKkP,MAAM+rB,MACbj7B,KAAKC,MAAMk7B,QAAQn7B,KAAKkP,MAAMgsB,OAAQl7B,KAAKkP,MAAMsmB,SAAShrB,OAAQxK,KAAKkP,MAAM+rB,OAE7Ej7B,KAAKC,MAAMm7B,UAAU,QAASp7B,KAAKkP,MAAMumB,MAAMjrB,U,wCAIjCvG,GAChBjE,KAAKyO,SAAS,CAACgnB,MAAOxxB,EAAEG,OAAO1F,U,2CAGZuF,GACnBjE,KAAKyO,SAAS,CAAC+mB,SAAUvxB,EAAEG,OAAO1F,U,+BAG3B,WACH28B,EAASr7B,KAAKkP,MAAM+rB,OAASj7B,KAAKkP,MAAMgsB,OAC5C,OACE,0BAAMz6B,GAAG,sBAAsB+W,SAAUxX,KAAK8X,cAC3CujB,EACC,kBAAC,mBAAD,CAAkB56B,GAAG,2BAA2BgX,eAAe,sBAE7D,SAACvD,GAAD,OAAiB,kBAAC,GAAD,CACfA,YAAaA,EACbqE,aAAa,eACb7Z,MAAO,EAAKwQ,MAAMsmB,SAClBzhB,UAAU,EAAMkC,WAAW,EAC3B3G,SAAU,EAAK2mB,yBAGnB,oCACE,2BAAOzmB,QAAQ,cACb,kBAAC,mBAAD,CAAkB/O,GAAG,uBACnBgX,eAAe,kCAGnB,kBAAC,mBAAD,CAAkBhX,GAAG,0BAA0BgX,eAAe,2BAE5D,SAACvD,GAAD,OAAiB,2BAAOhJ,KAAK,QAAQzK,GAAG,aACtCyT,YAAaA,EACbqE,aAAa,QACb7Z,MAAO,EAAKwQ,MAAMumB,MAClBnmB,SAAU,EAAK+mB,kBACftiB,UAAQ,EAACkC,WAAS,OAI1B,yBAAK9V,UAAU,kBACb,4BAAQA,UAAU,OAAO+K,KAAK,UAAUmwB,EACtC,kBAAC,mBAAD,CAAkB56B,GAAG,eAAegX,eAAe,UACnD,kBAAC,mBAAD,CAAkBhX,GAAG,sBAAsBgX,eAAe,wB,kBAtEpE,YAAYxX,GAAO,M,IAAA,O,4FAAA,U,EACjB,U,EAAA,iBAAMA,K,gDAEDiP,MAAQ,CACXumB,MAAO,GACPD,SAAU,IAGZ,EAAK1d,aAAe,EAAKA,aAAa7Y,KAAlB,OACpB,EAAKo3B,kBAAoB,EAAKA,kBAAkBp3B,KAAvB,OACzB,EAAKg3B,qBAAuB,EAAKA,qBAAqBh3B,KAA1B,OAVX,E,qvBCHAq8B,I,uOAAqB77B,IAAMM,e,iEAazBkE,GACnBjE,KAAKyO,SAAS,CAACwqB,SAAUh1B,EAAEG,OAAO1F,MAAO68B,SAAS,M,8CAI9Cv7B,KAAKkP,MAAMqsB,UACbv7B,KAAKyO,SAAS,CAAC8sB,SAAS,IACxBv7B,KAAKC,MAAMu7B,sBAAsBx7B,KAAKkP,MAAM+pB,SAASzuB,W,+BAKvD,IAAIixB,EAAc,GAClB,IAAK,IAAIz8B,KAAO6B,EAAa,CAC3B,IAAIe,EAAOf,EAAY7B,GACvBy8B,EAAYt5B,KACV,4BAAQnD,IAAK4C,EAAMlD,MAAOkD,KAG9B,OACE,yBAAKzB,UAAU,kBACb,2BAAO+K,KAAK,SAASzK,GAAG,YAAYyT,YAAalU,KAAKC,MAAMg5B,SAAUyC,KAAK,cACzEv7B,UAAU,SAASzB,MAAOsB,KAAKkP,MAAM+pB,SAAU3pB,SAAUtP,KAAK27B,qBAC9D9lB,OAAQ7V,KAAKmY,sBAAuBpE,UAAQ,IAC9C,8BAAUtT,GAAG,eACVg7B,Q,kBArCT,YAAYx7B,GAAO,M,IAAA,O,4FAAA,U,EACjB,U,EAAA,iBAAMA,K,gDAEDiP,MAAQ,CACX+pB,SAAUh5B,EAAM8rB,cAChBwP,SAAS,GAGX,EAAKI,qBAAuB,EAAKA,qBAAqB18B,KAA1B,OAC5B,EAAKkZ,sBAAwB,EAAKA,sBAAsBlZ,KAA3B,OATZ,E,qvBCDA28B,I,uOAAqBn8B,IAAMM,e,yDAcjCkE,GACXA,EAAEI,iBACFrE,KAAKC,MAAM47B,SAAS,CAClBC,UAAW97B,KAAKkP,MAAM4sB,UACtB/P,cAAe/rB,KAAKkP,MAAM6c,kB,8CAIN9nB,GACtBjE,KAAKyO,SAAS,CAACqtB,UAAW73B,EAAES,cAAchG,U,gDAGlBV,GACxBgC,KAAKyO,SAAS,CAACsd,cAAe/tB,M,+BAI9B,IAAM6b,EAAQ,CAACkiB,IAAK,UAAWC,GAAI,YAAaC,GAAI,gBAChDC,EAAmB,GACnB9kB,EAAWpX,KAcf,MAbA,CAAC,MAAO,KAAM,MAAMwG,IAAI,SAAS5E,GAC/B,IAAInB,EAAK,aAAemB,EACpB5D,EAAO6b,EAAMjY,GACjBs6B,EAAiB/5B,KACf,wBAAInD,IAAK4C,GACP,2BAAOsJ,KAAK,QAAQzK,GAAIA,EAAIzC,KAAK,mBAAmBU,MAAOkD,EACzD8N,QAAS0H,EAASlI,MAAM4sB,YAAcl6B,EACtC0N,SAAU8H,EAAS+kB,0BACrB,2BAAO3sB,QAAS/O,GAAKzC,OAMzB,0BAAMyC,GAAG,gBAAgBN,UAAU,aAAaqX,SAAUxX,KAAK8X,cAC7D,yBAAK3X,UAAU,kBACb,2BAAOA,UAAU,SACf,kBAAC,mBAAD,CAAkBM,GAAG,sBAAsBgX,eAAe,qBAI9D,kBAAC,GAAD,CAAcsU,cAAe/rB,KAAKkP,MAAM6c,cACtCyP,sBAAuBx7B,KAAKo8B,4BAC9B,yBAAKj8B,UAAU,kBACb,2BAAOA,UAAU,SACf,kBAAC,mBAAD,CAAkBM,GAAG,uBAAuBgX,eAAe,sBAI/D,yBAAKtX,UAAU,kBACb,wBAAIA,UAAU,UACX+7B,IAGL,yBAAK/7B,UAAU,kBACb,4BAAQ+K,KAAK,SAAS/K,UAAU,QAC9B,kBAAC,mBAAD,CAAkBM,GAAG,gBAAgBgX,eAAe,kB,kBArE9D,YAAYxX,GAAO,M,IAAA,O,4FAAA,U,EACjB,U,EAAA,iBAAMA,K,gDAEDiP,MAAQ,CACX4sB,UAAW77B,EAAM67B,WAAa,MAC9B/P,cAAe9rB,EAAM8rB,eAGvB,EAAKjU,aAAe,EAAKA,aAAa7Y,KAAlB,OACpB,EAAKk9B,wBAA0B,EAAKA,wBAAwBl9B,KAA7B,OAC/B,EAAKm9B,0BAA4B,EAAKA,0BAA0Bn9B,KAA/B,OAVhB,E,2uBCHrB,I,MAAM0D,GAAWC,yBAAe,CAC9By5B,MAAO,CAAF,0CAKL5G,MAAO,CAAF,4CAOD6G,I,uOAAuB78B,IAAMM,e,yDAcpBkE,GACXjE,KAAKyO,SAAS,CAAC8tB,KAAMt4B,EAAEG,OAAO1F,U,qCAGjBuF,GACC,UAAVA,EAAEjF,IACJgB,KAAK8X,aAAa7T,GACA,UAATA,EAAEjF,KACXgB,KAAKgU,aAAa/P,K,mCAITA,GACXA,EAAEI,iBACErE,KAAKkP,MAAMqtB,MAAQv8B,KAAKkP,MAAMqtB,KAAK/xB,QACrCxK,KAAKC,MAAMuX,SAASxX,KAAKC,MAAMu8B,WAAYx8B,KAAKkP,MAAMqtB,KAAK/xB,U,mCAIlDvG,GACXA,EAAEI,iBACFrE,KAAKC,MAAMkT,a,+BAIJ,WACC7L,EAAkBtH,KAAKC,MAAMsH,KAA7BD,cAEJkwB,EADY,CAAC,MAASlwB,EAAc3E,GAAS8yB,OAAQ,IAAOnuB,EAAc3E,GAAS05B,QAClEr8B,KAAKC,MAAMu8B,aAAex8B,KAAKC,MAAMu8B,WAC1D,OACE,yBAAKr8B,UAAU,cACb,yBAAKA,UAAU,kBACb,2BAAOA,UAAU,QAAQqP,QAAQ,2BAC/B,kBAAC,mBAAD,CAAkB/O,GAAG,iCACnBgX,eAAe,mDAEfhG,OAAQ,CAAC+lB,OAAQA,OAGvB,yBAAKr3B,UAAU,kBACf,kBAAC,mBAAD,CAAkBM,GAAG,mCACnBgX,eAAe,gBACf,SAACglB,GAAD,OAAkB,2BAAOvxB,KAAK,OAAOzK,GAAG,0BACtCyT,YAAauoB,EACb/9B,MAAO,EAAKwQ,MAAMqtB,KAAMjtB,SAAU,EAAKK,aACvCwZ,WAAY,EAAKU,eAAgB9V,UAAQ,OAG7C,yBAAK5T,UAAU,kBACb,4BAAQA,UAAU,OAAOI,QAASP,KAAK8X,cACrC,kBAAC,mBAAD,CAAkBrX,GAAG,iBAAiBgX,eAAe,aAEvD,4BAAQtX,UAAU,QAAQI,QAASP,KAAKgU,cACtC,kBAAC,mBAAD,CAAkBvT,GAAG,yB,kBAlE/B,YAAYR,GAAO,M,IAAA,O,4FAAA,U,EACjB,U,EAAA,iBAAMA,K,gDAEDiP,MAAQ,CACXqtB,KAAMt8B,EAAMy8B,UAAY,IAG1B,EAAK/sB,aAAe,EAAKA,aAAa1Q,KAAlB,OACpB,EAAK4qB,eAAiB,EAAKA,eAAe5qB,KAApB,OACtB,EAAK6Y,aAAe,EAAKA,aAAa7Y,KAAlB,OACpB,EAAK+U,aAAe,EAAKA,aAAa/U,KAAlB,OAVH,EA0ENiJ,4BAAWo0B,I,2uBC3E1B,I,MAAM35B,GAAWC,yBAAe,CAC9B,4DAKA,yEAKA,mEAKA,uEAKA,qEAKA,sEAKA,mEAKA,yEAOI+5B,I,uOAAsBl9B,IAAMkE,W,iEAOX4xB,EAAOC,GAC1Bx1B,KAAKC,MAAM28B,eAAerH,EAAOC,K,+BAG1B,IAIHp1B,EAAO6J,EASPkJ,EAZG7L,EAAiBtH,KAAKC,MAAMsH,KAA5BD,cACDu1B,EAAO78B,KAAKC,MAAMiP,QAAUlP,KAAKC,MAAMwS,SAAW,WAAa,SAgBrE,OAXExI,EAFU,YAAR4yB,GACFz8B,EAAQJ,KAAKC,MAAMG,OACVJ,KAAKC,MAAMgK,QAASjK,KAAKC,MAAMgK,SAExC7J,EAAQkH,EAAc3E,GAASk6B,KACtB,IAIiC,GAAxC,CAAC,QAAS,YAAYvwB,QAAQuwB,KAChC1pB,EAAWnT,KAAKC,MAAMkT,UAItB,yBAAK1S,GAAG,YAAYN,UAAWH,KAAKC,MAAM4rB,SAAW,YAAc,MACjE,kBAAC,GAAD,CACE3c,MAAO2tB,EACPz8B,MAAOA,EACP6J,OAAQA,EACRwI,SAAUzS,KAAKC,MAAMwS,SACrBwhB,SAAUj0B,KAAKC,MAAMg0B,SACrBF,WAAY/zB,KAAKC,MAAM8zB,WACvBD,WAAY9zB,KAAKC,MAAM6zB,WACvB3gB,SAAUA,IAEZ,kBAAC,GAAD,CACEE,MAAOrT,KAAKC,MAAMoiB,WAClB5O,KAAMzT,KAAKC,MAAMqiB,UACjB9Q,OAAQxR,KAAKC,MAAM68B,YACnBnpB,WAAY3T,KAAKC,MAAM88B,gBACvBxpB,aAAcvT,KAAKC,MAAM8E,UAE3B,kBAAC,GAAD,CAAauO,KAAMtT,KAAKC,MAAM+8B,qBAEpB,UAATH,EACC,kBAAC,GAAD,CACEtH,MAAOv1B,KAAKC,MAAMs1B,MAClBpN,SAAUnoB,KAAKC,MAAMg9B,cACrBnE,QAAS94B,KAAKk9B,uBAEP,aAATL,EACA,kBAAC,GAAD,CACEjH,gBAAiB51B,KAAKC,MAAM21B,gBAC5BziB,SAAUnT,KAAKC,MAAMkT,SACrBpO,QAAS/E,KAAKC,MAAM8E,UAEb,aAAT83B,EACA,kBAAC,GAAD,CACEf,UAAW97B,KAAKC,MAAM67B,UACtB/P,cAAe/rB,KAAKC,MAAM8rB,cAC1B5Y,SAAUnT,KAAKC,MAAMkT,SACrB0oB,SAAU77B,KAAKC,MAAMk9B,mBAEd,SAATN,EACA,kBAAC,GAAD,CACEx3B,OAAQrF,KAAKC,MAAMoF,OACnBoN,SAAUzS,KAAKC,MAAMwS,SACrB2lB,cAAep4B,KAAKC,MAAMm4B,cAC1BG,cAAev4B,KAAKC,MAAMs4B,cAC1BD,qBAAsBt4B,KAAKC,MAAMq4B,qBACjCtB,gBAAiBh3B,KAAKC,MAAM+2B,gBAC5BU,aAAc13B,KAAKC,MAAMm9B,oBACzBjG,0BAA2Bn3B,KAAKC,MAAMk3B,0BACtCD,sBAAuBl3B,KAAKC,MAAMi3B,sBAClCO,UAAWz3B,KAAKC,MAAMw3B,UACtBM,aAAc/3B,KAAKC,MAAM83B,aACzBD,cAAe93B,KAAKC,MAAM63B,cAC1Ba,SAAU34B,KAAKC,MAAM04B,SACrBxlB,SAAUnT,KAAKC,MAAMkT,SACrBpO,QAAS/E,KAAKC,MAAM8E,UAEZ,aAAT83B,GAA+B,WAARA,EACxB,kBAAC,GAAD,CACEx3B,OAAQrF,KAAKC,MAAMoF,OACnBoN,SAAUzS,KAAKC,MAAMwS,SACrBG,UAAW5S,KAAKC,MAAM2S,UACtBb,cAAe/R,KAAKC,MAAM8R,cAC1BtO,QAAiB,WAARo5B,EACTtI,SAAUv0B,KAAKC,MAAMs0B,SACrBhkB,gBAAiBvQ,KAAKC,MAAMsQ,gBAC5BsC,gBAAiB7S,KAAKC,MAAM4S,gBAC5B6hB,cAAe10B,KAAKC,MAAMy0B,gBAEnB,WAATmI,EACA,kBAAC,GAAD,CACE9B,cAAe/6B,KAAKC,MAAM86B,cAC1BtZ,WAAYzhB,KAAKC,MAAMwhB,WACvBiY,iBAAkB15B,KAAKC,MAAMy5B,iBAC7Bc,cAAex6B,KAAKC,MAAMu6B,cAC1Bz1B,QAAS/E,KAAKC,MAAM8E,UAEb,SAAT83B,EACA,kBAAC,GAAD,CACEH,SAAU18B,KAAKC,MAAMy8B,SACrBF,WAAYx8B,KAAKC,MAAMu8B,WACvBhlB,SAAUxX,KAAKC,MAAMo9B,sBACrBlqB,SAAUnT,KAAKC,MAAMkT,SACrBpO,QAAS/E,KAAKC,MAAM8E,UAEb,UAAT83B,EACA,kBAAC,GAAD,CACEzB,UAAWp7B,KAAKC,MAAMq9B,uBACtBnC,QAASn7B,KAAKC,MAAMs9B,kBACtB,U,kBAtHR,YAAYt9B,GAAO,M,IAAA,O,4FAAA,U,EACjB,U,EAAA,iBAAMA,K,gDAEDi9B,qBAAuB,EAAKA,qBAAqBj+B,KAA1B,OAHX,EA4HNiJ,4BAAWy0B,I,uOCzKnB,SAASa,KACd,MAA8B,UAA1B,GAAOz7B,OAAOC,WACmB,UAA5BD,OAAOC,SAASy7B,S,2uBCS3B,I,SAAMC,GAAY,IAAIC,MAAM,iBAEtBh7B,GAAWC,yBAAe,CAC9Bg7B,iBAAkB,CAAF,iFAKhBC,oBAAqB,CAAF,oFAKnBC,cAAe,CAAF,+CAOTC,I,uOAAkBt+B,IAAMkE,W,kCAoNbooB,EAAe+P,GAC5B,IAAIz2B,EAAS,IAAI1F,IAAOiB,EAAUmrB,EvD9Pf,mCuD8PuC+P,EAAW0B,MAErE,OADAn4B,EAAO24B,evDtPoB,GuDsPW,GAC/B34B,I,gDAmVwBkvB,EAAU0J,GACzC,IAAIC,EAAS,GAD2C,uBAKxD,YAAgB3J,EAAhB,+CAA0B,KAAfz2B,EAAe,QACS,OAA7B6B,IAAOwK,UAAUrM,EAAE2E,SACnBy7B,EAAOpgC,EAAE2E,OAAS,CAChB4D,KAAMvI,EAAE2E,MACR07B,QAASrgC,EAAEqgC,QACX5rB,OAAQzU,EAAEyU,OACVF,QAASvU,EAAEuU,QACX/B,IAAKxS,EAAEwS,OAZyC,6GAkBxD,YAAgB2tB,EAAhB,+CAA+B,KAApBngC,EAAoB,QACxBogC,EAAOpgC,EAAEuI,QACZ63B,EAAOpgC,EAAEuI,MAAQvI,IApBmC,kFAwBxD,OAAOK,OAAOsT,OAAOysB,M,0CAzfrB,IDpHEE,ECoHIC,EAAWzJ,GAAiBO,UAAU,aAAe,GAE3D,MAAO,CACLviB,WAAW,EAEXic,OAAO,EACPiN,UAAWuC,EAASvC,WAAa,KACjC/P,cAAesS,EAAStS,gBD3HxBqS,EAAOp9B,EACmB,UAA1B,GAAOe,OAAOC,YACgB,SAA5BD,OAAOC,SAASy7B,UAAmD,aAA5B17B,OAAOC,SAASs8B,SACzDF,EAAOv9B,EAAYE,MACVgB,OAAOC,SAASs8B,WACzBF,EAAOr8B,OAAOC,SAASs8B,UAAYv8B,OAAOC,SAASu8B,KAAO,IAAMx8B,OAAOC,SAASu8B,KAAO,MAGpFH,GCoHHtS,cAAe,gBAEfsM,eAAgBiG,EAASG,iBACzBjG,cAAe8F,EAAS9F,cACxBD,sBAAuBkF,MD5GG,UAA1B,GAAOz7B,OAAOC,WACmB,aAA5BD,OAAOC,SAASs8B,gBC4GC,IAAZz+B,GAAiD,oBAAbwI,WACnB,oBAAjBo2B,cACVC,cAAe9J,GAAiBO,UAAU,kBAE1C7S,UAAW,GACXD,WAAY,KACZya,iBAAatnB,EACbunB,gBAAiB,KAEjB4B,kBAAmB,QACnBC,eAAgB,KAChBC,gBAAiB,KACjB7B,oBAAoB,EAEpBzH,MAAO,GACPC,SAAU,GACV/iB,SAAU,KACVqsB,eAAgBz2B,UAAU02B,OAC1BhtB,cAAe,GACfitB,qBAAqB,EACrBC,iBAAkB,KAClBlQ,eAAgB,KAChBkO,eAAe,EACf7a,cAAgBrgB,OAAOm9B,YvDvHG,IuDwH1BC,eAAe,EACfC,YAAa,YAEbC,oBAAoB,EACpBC,kBAAmB,KACnBC,mBAAoB,KACpBC,kBAAmB,KACnBC,iBAAkB,GAGlBC,cAAc,EACdC,YAAa,GAGbpL,SAAU,GAEVwG,cAAe,GAEfxY,mBAAoB,GACpBia,gBAAYhnB,EACZknB,cAAUlnB,K,0CAIM,WAmBlB,GAlBAzT,OAAO8B,iBAAiB,SAAU7D,KAAK4/B,cACvC79B,OAAO8B,iBAAiB,SAAU,SAACI,GAAQ,EAAK47B,cAAa,KAC7D99B,OAAO8B,iBAAiB,UAAW,SAACI,GAAQ,EAAK47B,cAAa,KAC9D99B,OAAO8B,iBAAiB,aAAc7D,KAAK8/B,iBAE3Cl8B,SAASC,iBAAiB,mBAAoB7D,KAAK+/B,uBAEnD//B,KAAKyO,SAAS,CACZgZ,cAAe7jB,SAASo8B,gBAAgBC,YACxClS,eAAgBnqB,SAASo8B,gBAAgBE,eAG3ClgC,KAAKqF,OAAS04B,GAAUoC,QAAQngC,KAAKkP,MAAM6c,cAAe/rB,KAAKkP,MAAM4sB,WACrE97B,KAAKqF,OAAO+6B,UAAYpgC,KAAKqgC,gBAC7BrgC,KAAKqF,OAAOi7B,aAAetgC,KAAKugC,iBAChCvgC,KAAKqF,OAAOm7B,yBAA2BxgC,KAAKygC,6BAGxCzgC,KAAKkP,MAAMopB,qBACb,IACEt4B,KAAK0gC,OAAS7gC,gBAAuB4+B,cAAe79B,GAAU+/B,YAC9D3gC,KAAK0gC,OAAOE,kBAAkBnC,cAAcoC,mBAC5Cx4B,UAAUy4B,cAAcC,SAAS,sBAAsBl5B,KAAK,SAACm5B,GAC3D,EAAKC,kBAAkBD,GACvB,EAAKN,OAAOQ,iBAAiBF,GAC7B,EAAKG,oBACD,EAAKjyB,MAAMqpB,gBACR,EAAKrpB,MAAMwvB,cAGd,EAAKr5B,OAAO+7B,eAAe,EAAKlyB,MAAMwvB,eAAe,GAFrD,EAAK2C,iBAAgB,MAKxBz7B,MAAM,SAACC,GAERb,QAAQC,IAAI,qCAAsCY,KAEpD,MAAOA,GACP7F,KAAKshC,YAAY,0CAA2C,OAC5Dt8B,QAAQC,IAAI,0CAA2CY,GACvD7F,KAAKyO,SAAS,CAAC6pB,sBAAsB,IAIzC,IAAM2C,EAAQrG,GAAiBO,UAAU,kBACvCP,GAAiBO,UAAU,mBAAgB3f,EAEvC+rB,EAAYpgC,EAAemB,aAAaP,OAAOC,SAASZ,MAC1D65B,GAEFA,EAAMuG,QAAU,IAAI/4B,KAAKwyB,EAAMuG,SAC/BxhC,KAAKqF,OAAOo8B,aAAaxG,GACzBj7B,KAAKqF,OAAOq8B,UAAU97B,MAAM,SAACC,GAE3B,EAAKy7B,YAAYz7B,EAAIC,QAAS,gBAEzBy7B,EAAUhgC,OAAOmB,YACjB6+B,EAAUhgC,OAAOogC,IACxBJ,EAAU//B,KAAK,GAAK,GACpBL,EAAe+4B,WAAW/4B,EAAeoB,eAAeg/B,EAAU//B,KAAM+/B,EAAUhgC,UACxEggC,EAAUhgC,OAAO05B,OAC3B95B,EAAe+4B,WAAW,IAG5Bl6B,KAAK4hC,UAAY,KACjB5hC,KAAK6hC,kBAAoB,KAEzB7hC,KAAK8/B,oB,6CAIL/9B,OAAOiC,oBAAoB,SAAUhE,KAAK4/B,cAC1C79B,OAAOiC,oBAAoB,aAAchE,KAAK8/B,iBAC9Cl8B,SAASI,oBAAoB,mBAAoBhE,KAAK+/B,yB,qCAWtD,IAAI+B,EAASl+B,SAASo8B,gBAAgBC,avDrOV,IuDsO5BjgC,KAAKyO,SAAS,CACZgZ,cAAe7jB,SAASo8B,gBAAgBC,YACxClS,eAAgBnqB,SAASo8B,gBAAgBE,eAEvClgC,KAAKkP,MAAMkT,eAAiB0f,GAC9B9hC,KAAKyO,SAAS,CAAC2T,cAAe0f,M,wCAKhBd,GAAK,WACde,EAAqB/hC,KAAKC,MAAMsH,KAAhCw6B,kBACPf,EAAIgB,cAAgB,WAClB,IAAMC,EAAmBjB,EAAIkB,WAC7BD,EAAiBE,cAAgB,WACD,aAA1BF,EAAiB/yB,OAAwB7G,UAAUy4B,cAAcsB,YACnE,EAAKd,YAAYS,EAAkBp/B,GAASi7B,kBAAmB,Y,wCAQrE,IAAIx8B,EAAOD,EAAemB,aAAaP,OAAOC,SAASZ,MACnDA,EAAKI,MAA2B,EAAnBJ,EAAKI,KAAKY,QAErB,CAAC,WAAW,WAAW,OAAO,OAAO,QAAQ,SAAS,UAAU,WAAW,IAAIwS,SAASxT,EAAKI,KAAK,IACpGxB,KAAKyO,SAAS,CAACkwB,kBAAmBv9B,EAAKI,KAAK,KAE5CwD,QAAQC,IAAI,yBAA0B7D,EAAKI,KAAK,IAI3B,EAAnBJ,EAAKI,KAAKY,QAAchB,EAAKI,KAAK,IAAMxB,KAAKkP,MAAM6C,eACrD/R,KAAKyO,SAAS,CACZsD,cAAepS,IAAOwK,UAAU/I,EAAKI,KAAK,IAAMJ,EAAKI,KAAK,GAAK,QAKnExB,KAAKyO,SAAS,CAACkwB,kBAAmB,KAIhCv9B,EAAKG,OAAOi2B,QACdx3B,KAAKyO,SAAS,CAAE+tB,WAAYp7B,EAAKG,OAAOi2B,SAEtCp2B,EAAKG,OAAOg7B,MACdv8B,KAAKyO,SAAS,CAAEiuB,SAAUt7B,EAAKG,OAAOg7B,OAIxCv8B,KAAKyO,SAAS,CACZ0wB,cAAe/9B,EAAKG,OAAOmB,KAC3B2/B,oBAAqBjhC,EAAKG,OAAOogC,Q,mCAIxBjxB,GAEPA,EACF1Q,KAAKshC,YAAY,GAAI,MAErBthC,KAAKshC,YAAY,gBAAiB,QAEpCthC,KAAKyO,SAAS,CAACqwB,eAAgBpuB,M,0CAKbxQ,EAASoiC,GAC3B5R,aAAa1wB,KAAK4hC,WAClB5hC,KAAK6hC,kBAAoBS,EAEvBtiC,KAAK4hC,UADH1hC,GAAWoiC,EACIlqB,WAAWkqB,EvDhUR,KuDkUH,O,sCAILA,GACdtiC,KAAKuiC,qBAAqB3+B,SAAS4+B,OAAQF,K,8CAI3CtiC,KAAKuiC,qBAAqB3+B,SAAS4+B,OAAQxiC,KAAK6hC,qB,kCAGtCh8B,EAAKwN,EAAO7B,EAAQmC,GAC9B3T,KAAKyO,SAAS,CAAC6T,UAAWzc,EAAKwc,WAAYhP,EAAOypB,YAAatrB,EAAQurB,gBAAiBppB,M,yCAIvE4hB,EAAOC,GAAU,WAClCx1B,KAAKyO,SAAS,CACZwuB,eAAe,EACf1H,MAAOA,EACPC,SAAUA,EACVwH,oBAAoB,IAEtBh9B,KAAKshC,YAAY,GAAI,MAEjBthC,KAAKqF,OAAOo9B,cACdziC,KAAK0iC,QAAQnN,EAAOC,EAAU,CAACoC,KAAM53B,KAAKkP,MAAMstB,WAAYhX,KAAMxlB,KAAKkP,MAAMwtB,WAE7E18B,KAAKqF,OAAOq8B,UAAU97B,MAAM,SAACC,GAE3B,EAAK4I,SAAS,CAACwuB,eAAe,IAC9B,EAAKqE,YAAYz7B,EAAIC,QAAS,W,wCAOlC,IAAIvE,EAASvB,KAAKqF,OAAOs9B,gBACzB3iC,KAAKyO,SAAS,CACZqd,cAAevqB,EAAOqhC,IAAM,KAAOrhC,EAAO2e,MAAQ3e,EAAO2e,MAAQ,QAAU,OAE7ElgB,KAAK0iC,QAAQ1iC,KAAKkP,MAAMqmB,MAAOv1B,KAAKkP,MAAMsmB,SAAU,CAACoC,KAAM53B,KAAKkP,MAAMstB,WAAYhX,KAAMxlB,KAAKkP,MAAMwtB,a,mDAIxEmG,EAAKC,GAAM,WAGtC,GAFAC,cAAc/iC,KAAKgjC,oBAEfH,EAAM,EAER7iC,KAAKshC,mBAIP,GAAIwB,EAEFA,EAAKj7B,KAAK,WAER,EAAKy5B,gBACJ17B,MAAM,SAACC,GACR,EAAKy7B,YAAYz7B,EAAIC,QAAS,aANlC,CATsC,IAoB/Bi8B,EAAqB/hC,KAAKC,MAAMsH,KAAhCw6B,kBACHz7B,EAAQu8B,EAAM,IAClBv8B,GAAgBA,EAChBtG,KAAKgjC,mBAAqBC,YAAY,WACpC,IpD9YwBC,EACtBx5B,EACFm5B,EoD4YMM,EAAoB,GAAR78B,GpD9YM48B,EoD8YsB58B,EpD7Y5CoD,EAAMD,KAAKE,MAAMu5B,EAAU,IAEjCL,GADIA,EAAMK,EAAU,IACR,GAAN,WAAeL,GAAQA,EAC7B,UAAUn5B,EAAV,YAAiBm5B,IoD0Y0Cv8B,EACvD,EAAKg7B,YACHS,EAAkBp/B,GAASk7B,oBAAqB,CAACqF,QAASC,IAC1D,OACA,WACEJ,cAAc,EAAKC,oBACnB,EAAK39B,OAAO+9B,aAEdrB,EAAkBp/B,GAASm7B,kBAE7Bx3B,GACC,Q,uCAIYT,GACf7F,KAAKyO,SAAS,CACZmE,WAAW,EACXic,OAAO,EACPmQ,qBAAqB,EACrB1c,UAAWzc,GAAOA,EAAIC,QAAUD,EAAIC,QAAU,eAC9Cuc,WAAYxc,GAAOA,EAAIC,QAAU,MAAQ,OACzCm3B,eAAe,EACfoC,oBAAoB,EACpBvT,cAAe,oB,8BAIXyJ,EAAOC,EAAUmC,GAAM,WAC7B,GAAI33B,KAAKqF,OAAOg+B,kBAEdliC,EAAe+4B,WAAW,QAF5B,CAMAvC,EAAOh4B,IAAO2jC,WAAW3L,GAEzB,IAAI4L,EAAU,KACVtI,EAAQj7B,KAAKqF,OAAOm+B,eACpBjO,GAASC,GACXx1B,KAAKyO,SAAS,CAAC+mB,SAAU,OACzB+N,EAAUvjC,KAAKqF,OAAOo+B,WAAWlO,EAAOC,EAAUmC,IACzCsD,IACTsI,EAAUvjC,KAAKqF,OAAOq+B,WAAWzI,EAAMA,MAAOtD,IAG5C4L,EACFA,EAAQ17B,KAAK,SAACC,GACK,KAAbA,EAAKy0B,MAA6B,yBAAdz0B,EAAK2L,MAC3B,EAAKhF,SAAS,CAACuuB,oBAAoB,IAC/BrF,GACF,EAAK2J,YAAY,sBAAuB,QAE1C,EAAKqC,yBAAyB77B,EAAKvG,SAEnC,EAAKqiC,0BAENh+B,MAAM,SAACC,GAER,EAAK4I,SAAS,CACZwuB,eAAe,EACfT,gBAAYhnB,EACZknB,cAAUlnB,EACVwnB,oBAAoB,IAEtB,EAAKsE,YAAYz7B,EAAIC,QAAS,OAC9B+uB,aAAaQ,WAAW,cACxBl0B,EAAe+4B,WAAW,OAK5B/4B,EAAe+4B,WAAW,IAC1Bl6B,KAAKyO,SAAS,CAACwuB,eAAe,Q,+CAIT17B,GACvB,IAAIc,EAASlB,EAAemB,aAAaP,OAAOC,SAASZ,MACzDiB,EAAOb,KAAK,GAAK,OACjBa,EAAOd,OAAP,OAA0BA,EAAOo2B,KAAK,GACtCx2B,EAAe+4B,WAAW/4B,EAAeoB,eAAeF,EAAOb,KAAMa,EAAOd,W,8CAGtD,WACtBvB,KAAKshC,YAAY,GAAI,MAGjB1M,GAAiBO,UAAU,mBAC7BP,GAAiBQ,UAAU,aAAcp1B,KAAKqF,OAAOm+B,gBAGvD,IAAI/M,EAAKz2B,KAAKqF,OAAO+tB,aACrBqD,EAAG9Y,WAAa3d,KAAK6jC,aACrBpN,EAAGqN,gBAAkB9jC,KAAK+jC,kBAC1BtN,EAAG3Y,cAAgB9d,KAAKgkC,gBACxBhkC,KAAKyO,SAAS,CACZmE,WAAW,EACX4pB,gBAAYhnB,EACZknB,cAAUlnB,EACV/C,SAAUzS,KAAKqF,OAAO4+B,qBAGxBxN,EAAGlH,UACDkH,EAAGzW,iBACDmP,eACA+U,WACAjkB,WACAkkB,WACAjkB,SACAta,MAAM,SAACC,GACP,EAAKR,OAAO++B,aACZvP,aAAaQ,WAAW,cACxB,EAAKiM,YAAYz7B,EAAIC,QAAS,OAC9B3E,EAAe+4B,WAAW,MACzBhK,QAAQ,WACT,EAAKzhB,SAAS,CAACuuB,oBAAoB,MAEvC77B,EAAe+4B,WAAW/4B,EAAekjC,gBAAgBtiC,OAAOC,SAASZ,KAAM,e,mCAGpE+e,GACPA,GAAQA,EAAK5N,QACfvS,KAAKyO,SAAS,CACZmwB,eAAgBze,EAAK5N,OAAOC,GAC5BqsB,gBAAiB7zB,GAAamV,EAAK5N,OAAOtH,W,wCAM9BwlB,EAAM0C,GACtB,GAAY,MAAR1C,GAAwB,OAARA,EAClBzwB,KAAKskC,mBACDtkC,KAAKkP,MAAM6C,eAAiBohB,EAAK1wB,OACnCzC,KAAKyO,SAAS,CAACuwB,oBAA8B,MAARvO,SAElC,GAAY,QAARA,EACTzwB,KAAKskC,wBACA,GAAY,OAAR7T,EAAe,CAExB,IAAMhuB,EAAQzC,KAAKqF,OAAOC,SAAS6tB,EAAK1wB,OAClC8hC,EAAW9hC,GAASA,EAAM+hC,aAGd,EAAdrR,EAAK/hB,QAAcpR,KAAKkP,MAAMkpB,gBAAkBmM,KAE9C3gC,SAAS4+B,QAAUxiC,KAAKkP,MAAM6C,eAAiBohB,EAAK1wB,OACtDi7B,GAAU+G,QAIdzkC,KAAKskC,uBACY,QAAR7T,IAEQ,QAARA,GAA0B,SAARA,GAGvBzwB,KAAKkP,MAAM6C,eAAiBohB,EAAK1wB,OACnCzC,KAAK0kC,oBAAoB,MAG3B1kC,KAAKskC,oBACY,OAAR7T,EAGLzwB,KAAKkP,MAAM6C,eAAiBohB,EAAK1wB,OACnCzC,KAAKyO,SAAS,CAACwwB,iBAAkB9L,EAAK7iB,MAEvB,OAARmgB,GAEQ,OAARA,GAKTzrB,QAAQC,IAAI,qCAAuCwrB,EAAO,QAAU0C,EAAK1wB,U,wCAK3EzC,KAAKskC,qB,yCAgCY,WACXlmB,EAAW,CACfmW,SAAU,IAGPv0B,KAAKkP,MAAM2f,QACdzQ,EAASyQ,OAAQ,GAGnB7uB,KAAKqF,OAAO+tB,aAAalhB,SAAS,SAACpU,GACjCsgB,EAASmW,SAASpyB,KAAKrE,GACnB,EAAKoR,MAAM6C,eAAiBjU,EAAE2E,QAChC2b,EAAS4gB,oBAAsBlhC,EAAE4S,OACjC0N,EAAS6gB,iBAAmBnhC,EAAEwS,OAIlC8N,EAASmE,mBAAqBwb,GAAU4G,0BAA0BvmB,EAASmW,SAAUv0B,KAAKkP,MAAM6rB,eAChG/6B,KAAKyO,SAAS2P,K,6BAITjT,GAAM,WACL1I,EAAQzC,KAAKqF,OAAOC,SAAS6F,EAAK1I,OACpCA,EAAM6tB,UAAUnlB,IAASxL,IAAOwlB,qBAAuBha,EAAKolB,MAAQvwB,KAAKkP,MAAMuD,WACjFie,aAAa1wB,KAAK4kC,eAClB5kC,KAAK4kC,cAAgBxsB,WAAW,WAC9B,EAAKwsB,mBAAgBpvB,EACrB/S,EAAMoiC,SAAS15B,EAAK1F,MvD5nBE,Q,mCuDkoBf,WACLq/B,EAAM9kC,KAAKqF,OAAO0/B,cACxBD,EAAIhnB,cAAgB9d,KAAKglC,iBACrBF,EAAIlW,eACN5uB,KAAKglC,mBAELF,EAAIvV,UAAUuV,EAAI9kB,iBAAiBilB,UAAU/kB,SAASta,MAAM,SAACC,GAC3D,EAAKy7B,YAAYz7B,EAAIC,QAAS,W,yCAMlC,IAAMm4B,EAAgB,GAEtBj+B,KAAKqF,OAAO0/B,cAAc7yB,SAAS,SAAC1S,GAClCy+B,EAAc97B,KAAK3C,KAErBQ,KAAKyO,SAAS,CACZssB,cAAekD,EACf1b,mBAAoBwb,GAAU4G,0BAA0B3kC,KAAKkP,MAAMqlB,SAAU0J,O,2CAO5DhnB,GAAO,WACpB6tB,EAAM9kC,KAAKqF,OAAO0/B,cACxBD,EAAII,QAAQ,CAAC/kB,KAAM,CAAC5N,OAAQ0E,KAASpP,KAAK,SAACC,GACzC,OAAOg9B,EAAI/kB,QAAQ+kB,EAAI9kB,iBAAiBilB,UAAU/kB,WACjDta,MAAM,SAACC,GACR,EAAKy7B,YAAYz7B,EAAIC,QAAS,W,0CAKdP,EAAW4/B,EAAcz0B,EAAQJ,GAE/CtQ,KAAKkP,MAAM6f,gBAAkB/uB,KAAKkP,MAAM6f,eAAeC,YAAczpB,GACvEvF,KAAKyO,SAAS,CACZsgB,eAAgB,OAIhBxpB,GACFvF,KAAKyO,SAAS,CACZ6T,UAAW,GACXD,WAAY,KACZ+c,YAAa,aACbD,eAAe,IAGbn/B,KAAKkP,MAAM6C,eAAiBxM,IAC9BvF,KAAKyO,SAAS,CACZuwB,oBAAqBtuB,EACrBuuB,iBAAkB3uB,IAEpBnP,EAAe+4B,WAAW/4B,EAAeikC,YAAY,GAAI7/B,OAI3DvF,KAAKyO,SAAS,CACZ6T,UAAW,GACXD,WAAY,KACZ+c,YAAa,YACbJ,qBAAqB,EACrBC,iBAAkB,KAClBE,eAAe,IAGjBh+B,EAAe+4B,WAAW/4B,EAAeikC,YAAY,GAAI,U,+CAM3DplC,KAAKyO,SAAS,CACZ2wB,YAAa,cAEfj+B,EAAe+4B,WAAW/4B,EAAeikC,YAAYrjC,OAAOC,SAASZ,KAAM,S,wCAK3D4E,EAAKu9B,EAASlf,GAAU,WAClC5hB,EAAQzC,KAAKqF,OAAOC,SAAStF,KAAKkP,MAAM6C,gBAE9C/L,EAAMvD,EAAMwD,cAAcD,GAAK,IAE3B8sB,UAAYzO,EAEX5hB,EAAMmsB,iBAIT2U,GAFEA,EADGA,GACO8B,QAAQC,WAEFz9B,KAAK,WAAQ,OAAOpF,EAAM8sB,eAI5CgU,EADEA,GACQA,EAAQ39B,MAAM,SAACC,GACvB,EAAKy7B,YAAYz7B,EAAIC,QAAS,SAIlCrD,EAAMyD,aAAaF,EAAKu9B,GACrB17B,KAAK,SAACC,GACL,GAAIrF,EAAM+hC,aACR,OAAO/hC,EAAMgB,SAAQ,KAGxBmC,MAAM,SAACC,GACN,EAAKy7B,YAAYz7B,EAAIC,QAAS,W,8CAIZP,EAAWiM,GAAQ,WACnC/O,EAAQzC,KAAKqF,OAAOC,SAASC,GAC/BygB,EAAW,KACf,OAAQxU,GACN,IAAK,SAEH,IAAM5S,EAAO6D,EAAMuc,gBAAgBP,WACnCuH,EAAWvjB,EAAMyiC,QAAQ,CAACrmB,IAAK,CAACjgB,KAAMA,KACf,OAAnB6D,EAAMsb,YAGRiI,EAAWA,EAASne,KAAK,SAACC,GACxBrF,EAAMyiC,QAAQ,CAACrmB,IAAK,CAACxY,KAAMd,EAAW3G,KAAMA,QAGhD,MACF,IAAK,SAEHonB,EAAWvjB,EAAMuF,WACjB,MACF,IAAK,QAGH,IAAMu9B,EAAK9iC,EAAMuc,gBAAgBwmB,WAAW,OAAO7mB,UACnDqH,EAAWvjB,EAAMyiC,QAAQ,CAACrmB,IAAK,CAACjgB,KAAM2mC,KAAM19B,KAAK,SAACC,GAChD,OAAO,EAAK48B,oBAAoB,QAElC,MACF,QACE1/B,QAAQC,IAAI,4BAA6B,IAAMuM,EAAS,MAG5C,MAAZwU,GACFA,EAASpgB,MAAM,SAACC,GACd,EAAKy7B,YAAYz7B,EAAIC,QAAS,W,yCAOlC3E,EAAe+4B,WAAW/4B,EAAekjC,gBAAgBtiC,OAAOC,SAASZ,KAAM,e,8CAIzDqkC,EAAQC,EAAWC,EAASC,EAAOC,GAAO,WAChE7lC,KAAKqF,OAAOq8B,QAAQ1hC,KAAKkP,MAAM6c,eAC5BlkB,KAAK,WACJ,OAAO,EAAKxC,OAAOygC,mBAAmBL,EAAQC,EAC5C,CAACnzB,OAAQozB,EAAS1pB,KAAM4pB,EAAOlO,KAAMh4B,IAAO2jC,WAAWsC,OACxD/9B,KAAK,SAACC,GACU,KAAbA,EAAKy0B,MAA4B,wBAAbz0B,EAAK2L,KAC3B,EAAKkwB,yBAAyB77B,EAAKvG,QAEnC,EAAKqiC,sBAAsB,KAE5Bh+B,MAAM,SAACC,GACR,EAAKy7B,YAAYz7B,EAAIC,QAAS,W,iDAIT0vB,EAAU9F,EAAK5Q,GAAQ,WAChD,GAAI4Q,GAAO5Q,EAAQ,CACjB,IAAMvd,EAAS,GACXmuB,IACFnuB,EAAOgR,OAASmd,GAEd5Q,IACFvd,EAAOud,OAASA,GAElB9e,KAAKqF,OAAO+tB,aAAa8R,QAAQ,CAAC/kB,KAAM5e,IAASqE,MAAM,SAACC,GACtD,EAAKy7B,YAAYz7B,EAAIC,QAAS,SAG9B0vB,GACFx1B,KAAKqF,OAAO0gC,mBAAmB,KAAM/lC,KAAKqF,OAAO2gC,kBAAmBxQ,GAAU5vB,MAAM,SAACC,GACnF,EAAKy7B,YAAYz7B,EAAIC,QAAS,W,qDAKLmW,GAAM,WACnCjc,KAAKqF,OAAO+tB,aAAa8R,QAAQ,CAACjpB,KAAMA,IACrCrW,MAAM,SAACC,GACN,EAAKy7B,YAAYz7B,EAAIC,QAAS,W,uCAMlC3E,EAAe+4B,WAAW/4B,EAAekjC,gBAAgBtiC,OAAOC,SAASZ,KACvEpB,KAAKkP,MAAMuD,SAAW,OAAS,e,2CAId4rB,GACnB,IAAItS,EAAgBsS,EAAStS,eAAiB/rB,KAAKkP,MAAM6c,cACrD+P,EAAYuC,EAASvC,WAAa97B,KAAKkP,MAAM4sB,UAC7C97B,KAAKqF,SACPrF,KAAKqF,OAAOi7B,kBAAe9qB,EAC3BxV,KAAKqF,OAAO++B,cAEdpkC,KAAKqF,OAAS04B,GAAUoC,QAAQpU,EAAe+P,GAC/C97B,KAAKqF,OAAO+6B,UAAYpgC,KAAKqgC,gBAC7BrgC,KAAKqF,OAAOi7B,aAAetgC,KAAKugC,iBAEhCvgC,KAAKyO,SAAS,CACZsd,cAAeA,EACf+P,UAAWA,IAEblH,GAAiBQ,UAAU,WAAY,CACrCrJ,cAAeA,EACf+P,UAAWA,IAGb36B,EAAe+4B,WAAW/4B,EAAekjC,gBAAgBtiC,OAAOC,SAASZ,KAAM,O,0CAK/ED,EAAe+4B,WAAW/4B,EAAekjC,gBAAgBtiC,OAAOC,SAASZ,KACvEpB,KAAKkP,MAAMuD,SAAW,UAAY,O,0CAIlB,WAGlBzS,KAAK0gC,OAAOuF,eAAe,WACzB,EAAKC,qBAGPlmC,KAAK0gC,OAAOyF,UAAU,SAACC,Q,sCAMTC,GAAS,WACnBA,EACGrmC,KAAKkP,MAAMwvB,eAUd1+B,KAAKyO,SAAS,CAAC8pB,eAAe,IAC9B3D,GAAiB0R,aAAa,WAAY,CAAC/N,eAAe,KAV1Dv4B,KAAK0gC,OAAO6F,oBAAoB1+B,KAAK,WACnC,EAAKq+B,qBACJtgC,MAAM,SAACC,GACR,EAAKy7B,YAAYz7B,EAAIC,QAAS,OAC9B,EAAK2I,SAAS,CAAC8pB,eAAe,EAAOmG,cAAe,OACpD9J,GAAiB0R,aAAa,WAAY,CAAC/N,eAAe,IAC1DvzB,QAAQC,IAAI,sCAAuCY,KAM9C7F,KAAKkP,MAAMwvB,cACpB1+B,KAAK0gC,OAAO8F,YAAYxmC,KAAKkP,MAAMwvB,eAAe94B,MAAM,SAACC,GACvDb,QAAQC,IAAI,0BAA2BY,KACtCqqB,QAAQ,WACT0E,GAAiB0R,aAAa,WAAY,CAAC/N,eAAe,IAC1D1D,aAAaQ,WAAW,kBACxB,EAAK5mB,SAAS,CAAC8pB,eAAe,EAAOmG,cAAe,UAGtD1+B,KAAKyO,SAAS,CAAC8pB,eAAe,EAAOmG,cAAe,OACpD9J,GAAiB0R,aAAa,WAAY,CAAC/N,eAAe,O,yCAI3C,WACjBv4B,KAAK0gC,OAAO+F,WAAW5+B,KAAK,SAAC6+B,GACvBA,GAAkB,EAAKx3B,MAAMwvB,gBAC/B,EAAKr5B,OAAO+7B,eAAesF,GAAgB,GAC3C9R,GAAiBQ,UAAU,iBAAkBsR,IAE/C,EAAKj4B,SAAS,CAACiwB,cAAegI,EAAgBnO,eAAe,IAC7D3D,GAAiB0R,aAAa,WAAY,CAAC/N,eAAe,MACzD3yB,MAAM,SAACC,GACR,EAAKy7B,YAAYz7B,EAAIC,QAAS,OAC9Bd,QAAQC,IAAI,oCAAqCY,O,gDAI3BwgC,GACxBrmC,KAAKyO,SAAS,CAAC2pB,cAAeiO,IAC9BzR,GAAiB0R,aAAa,WAAY,CACxC9H,kBAAmB6H,M,oCAIT7O,EAAQ94B,GAAO,WAChBsB,KAAKqF,OAAO+tB,aACpB8R,QAAQ,CAACvN,KAAM,CAACC,KAAMJ,EAAQxgB,IAAKtY,KAASkH,MAAM,SAACC,GACpD,EAAKy7B,YAAYz7B,EAAIC,QAAS,W,uCAIjB0xB,EAAQ94B,GAAO,WACnBsB,KAAKqF,OAAO+tB,aACpBuT,cAAcnP,EAAQ94B,GAAOkH,MAAM,SAACC,GACrC,EAAKy7B,YAAYz7B,EAAIC,QAAS,W,wCAIhB0xB,GAChBx3B,KAAK2jC,yBAAyB,CAAChM,KAAM,CAACH,O,8CAKtC,IAAMn1B,EAASlB,EAAemB,aAAaP,OAAOC,SAASZ,MAC3DiB,EAAOb,KAAK,GAAKxB,KAAKkP,MAAMuD,SAAW,WAAa,GAChDpQ,EAAOd,gBACFc,EAAOd,OAAOg7B,YACdl6B,EAAOd,OAAOi2B,cACdn1B,EAAOd,OAAOogC,KAEvBxgC,EAAe+4B,WAAW/4B,EAAeoB,eAAeF,EAAOb,KAAMa,EAAOd,SAC5EvB,KAAKyO,SAAS,CAAC6T,UAAW,GAAID,WAAY,S,uCAK1ClhB,EAAe+4B,WAAW/4B,EAAekjC,gBAAgBtiC,OAAOC,SAASZ,KAAM,a,4CAI3DwlC,EAAUlX,EAAK+K,EAAMxe,GAAM,WAEzC1W,EAAYqhC,GAAY5mC,KAAKqF,OAAOwhC,oBACpCtlC,EAAS,CACbytB,WAAYzpB,GAEVqhC,GAEFrlC,EAAOsd,IAAM,CAACjgB,KAAMqC,GAEpBM,EAAO4e,KAAO,CAACrB,OAAQ,CAACe,KAAM5e,MAE9BM,EAAO4e,KAAO,CAAC5N,OAAQmd,EAAKrd,QAAS,CAAChB,QAASopB,IAC/Cl5B,EAAO0a,KAAOA,GAEhBjc,KAAKyO,SAAS,CAACsgB,eAAgBxtB,GAAS,WAAO,EAAKmjC,oBAAoBn/B,O,4CAIpDuhC,EAASC,GACzB/mC,KAAKkP,MAAM6C,eAAiB+0B,GAAWA,GAAWC,GAIpD/mC,KAAKyO,SAAS,CAACsD,cAAeg1B,GAAU,WACtC5lC,EAAe+4B,WAAW/4B,EAAeikC,YAAY,GAAI2B,Q,+CAKtCxhC,EAAWmqB,EAAK+K,EAAMuM,GAAa,WACpDvkC,EAAQzC,KAAKqF,OAAOC,SAASC,GACnC,GAAI9C,EAAO,CACT,IAAMlB,EAAS,GACXmuB,IACFnuB,EAAOgR,OAASmd,GAEd+K,IACFl5B,EAAO8Q,QAAWooB,IAAS96B,IAAO2gB,SAChC3gB,IAAO2gB,SAAW,CAACjP,QAASopB,IAE5BuM,IACFzlC,EAAOud,OAASkoB,GAElBvkC,EAAMyiC,QAAQ,CAAC/kB,KAAM5e,IAASqE,MAAM,SAACC,GACnC,EAAKy7B,YAAYz7B,EAAIC,QAAS,Y,8CAKZP,EAAW3G,EAAMwQ,GAAK,WACtC3M,EAAQzC,KAAKqF,OAAOC,SAASC,GACnC,GAAI9C,EAAO,CACT,IAAM8iC,EAAK9iC,EAAMuc,gBAGfpgB,EAFEwQ,GACFm2B,EAAG0B,YAAYroC,GACR2mC,EAAG9mB,aAEV8mB,EAAGC,WAAW5mC,GACP2mC,EAAG5mB,WAEZlc,EAAMyiC,QAAQ,CAACrmB,IAAK,CAACxY,KAAM+I,EAAKxQ,KAAMA,KAAQgH,MAAM,SAACC,GACnD,EAAKy7B,YAAYz7B,EAAIC,QAAS,Y,wCAKlBP,EAAW0W,GAAM,WAC3BxZ,EAAQzC,KAAKqF,OAAOC,SAASC,GAC/B9C,GACFA,EAAMyiC,QAAQ,CAACjpB,KAAMA,IAAOrW,MAAM,SAACC,GACjC,EAAKy7B,YAAYz7B,EAAIC,QAAS,W,qCAMlC6U,GAAc,GAGdka,aAAaQ,WAAW,cACxBR,aAAaQ,WAAW,kBACxBR,aAAaQ,WAAW,YACpBr1B,KAAKkP,MAAMwvB,eACb1+B,KAAK0gC,OAAO8F,YAAYxmC,KAAKkP,MAAMwvB,eAGjC1+B,KAAKqF,SACPrF,KAAKqF,OAAOi7B,kBAAe9qB,EAC3BxV,KAAKqF,OAAO++B,cAEdpkC,KAAKyO,SAASzO,KAAKknC,iBACnBlnC,KAAKqF,OAAS04B,GAAUoC,QAAQngC,KAAKkP,MAAM6c,cAAe/rB,KAAKkP,MAAM4sB,WACrE97B,KAAKqF,OAAO+6B,UAAYpgC,KAAKqgC,gBAC7BrgC,KAAKqF,OAAOi7B,aAAetgC,KAAKugC,iBAChCp/B,EAAe+4B,WAAW,M,kDAGA30B,GAAW,WAC/B9C,EAAQzC,KAAKqF,OAAOC,SAASC,GAC9B9C,GAKLA,EAAMiD,gBAAe,GAAME,MAAM,SAACC,GAChC,EAAKy7B,YAAYz7B,EAAIC,QAAS,W,8CAIVP,GAAW,WAC3B9C,EAAQzC,KAAKqF,OAAOC,SAASC,GAC9B9C,GAILA,EAAMwrB,OAAM,GAAMpmB,KAAK,SAACC,GAEtB3G,EAAe+4B,WAAW/4B,EAAeikC,YAAYrjC,OAAOC,SAASZ,KAAM,OAC1EwE,MAAM,SAACC,GACR,EAAKy7B,YAAYz7B,EAAIC,QAAS,W,8CAIVP,GAAW,WAC3B9C,EAAQzC,KAAKqF,OAAOC,SAASC,GAC9B9C,GAILA,EAAM2D,WAAW,KAAM,OAAOyB,KAAK,SAACC,GAElC3G,EAAe+4B,WAAW/4B,EAAeikC,YAAYrjC,OAAOC,SAASZ,KAAM,OAC1EwE,MAAM,SAACC,GACR,EAAKy7B,YAAYz7B,EAAIC,QAAS,W,wCAIhBP,GAAW,WACrB9C,EAAQzC,KAAKqF,OAAOC,SAASC,GAC9B9C,IAKLzC,KAAKqF,OAAO8hC,QAAQxnC,IAAOynC,UAAWznC,IAAO2mB,OAAOyK,WAAW,KAAM,CACnE,OAAU,SACV,OAAUxrB,KAIZ9C,EAAM2D,WAAW,KAAM,OAAOyB,KAAK,SAACC,GAElC3G,EAAe+4B,WAAW/4B,EAAeikC,YAAYrjC,OAAOC,SAASZ,KAAM,OAC1EwE,MAAM,SAACC,GACR,EAAKy7B,YAAYz7B,EAAIC,QAAS,Y,4CAIZvE,EAAQ2gB,GAC5BliB,KAAKyO,SAAS,CACZ4wB,oBAAoB,EACpBE,mBAAoB,CAACt4B,EAAG1F,EAAO0F,EAAGG,EAAG7F,EAAO6F,GAC5Co4B,kBAAmBj+B,EACnBk+B,iBAAkBvd,GAAaliB,KAAKqnC,wBAAwB9lC,EAAOgE,WACnE+5B,kBAAmB1/B,IAASsE,YAAYlE,MAAMgrB,4B,8CAI1BzlB,GACtB,IAAM9C,EAAQzC,KAAKqF,OAAOC,SAASC,GAC5B+B,EAAiBtH,KAAKC,MAAMsH,KAA5BD,cAEH+X,GAAQ,EAAOioB,GAAU,EAAOC,GAAe,EAAOC,GAAa,EAAOrtB,GAAU,EAAOoqB,GAAW,EAC1G,GAAI9hC,EAAO,CACT+kC,EAAa/kC,EAAMmsB,eACnB2V,EAAW9hC,EAAM+hC,aAEjB,IAAMl0B,EAAM7N,EAAMuc,gBACd1O,IACF+O,EAAQ/O,EAAIS,UACZu2B,GAAWh3B,EAAIU,WACfu2B,GAAgBj3B,EAAIU,SAAS,QAC7BmJ,EAAU7J,EAAI8O,aAIlB,MAAO,CACLooB,EAAa,CAACpnC,MAAOkH,EAAc,CAAC7G,GAAI,mBAAoBqE,QAAS9E,KAAKynC,oBAAsB,KAChGD,EAAa,iBAAmB,KAChCA,GAAcrtB,EAAU,sBAAwB,KAChDkF,EAASioB,EAAU,KAAO,eAAkB,aAC5CC,EAAe,gBAAkB,cAChChD,EAA6B,KAAlB,gBACZ,kB,8CAKFvkC,KAAKyO,SAAS,CACZ4wB,oBAAoB,EACpBE,mBAAoB,KACpBC,kBAAmB,KACnBF,kBAAmB,S,8CAIC9tB,EAAQ+xB,EAAShiC,GAAQ,WACjC,iBAAViQ,GACE+xB,GAAWhiC,EAAOgE,WAAahE,EAAOgE,WAAavF,KAAKkP,MAAM6C,eAChEwxB,EAAQ17B,KAAK,WACX,EAAK68B,oBAAoB,U,sCAMjBtkC,EAAOC,EAASK,EAAWC,EAASL,EAAUE,GAC5DR,KAAKyO,SAAS,CACZixB,cAAc,EACdC,YAAa,CACXv/B,MAAOA,EACPC,QAASA,EACTK,UAAWA,EACXC,QAASA,EACTL,SAAUA,EACVE,OAAQA,O,2CAMZW,EAAe+4B,WAAW/4B,EAAeg5B,YAAYp4B,OAAOC,SAASZ,KAAM,QAAQ,IACnFpB,KAAKyO,SAAS,CAAC0wB,eAAe,M,2CAI9Bh+B,EAAe+4B,WAAW/4B,EAAeo5B,eAAex4B,OAAOC,SAASZ,KAAM,SAC9EpB,KAAKyO,SAAS,CAAC0wB,eAAe,M,gDAGN55B,EAAW8R,EAAOpC,GAAS,WACnD,GAAK1P,EAAL,CAIA,IAAM9C,EAAQzC,KAAKqF,OAAOC,SAASC,GAC9B9C,IAID4U,GAAwB,EAAfA,EAAMjV,QACjBiV,EAAM7Q,IAAI,SAAC4I,GACT3M,EAAMilC,OAAOt4B,EAAK,MAAMxJ,MAAM,SAACC,GAC7B,EAAKy7B,YAAYz7B,EAAIC,QAAS,WAKhCmP,GAA4B,EAAjBA,EAAQ7S,QACrB6S,EAAQzO,IAAI,SAAC4I,GACX3M,EAAMwF,gBAAgBmH,GAAKxJ,MAAM,SAACC,GAChC,EAAKy7B,YAAYz7B,EAAIC,QAAS,e,uDAML6xB,EAAM4E,GAAM,WACvCv8B,KAAKqF,OAAOg+B,kBACHrjC,KAAKqF,OAAO+tB,aACpB8R,QAAQ,CAACvN,KAAM,CAACC,KAAMD,EAAMnS,KAAM+W,KAClC10B,KAAK,WACJ1G,EAAe+4B,WAAW,MAE3Bt0B,MAAM,SAACC,GACN,EAAKy7B,YAAYz7B,EAAIC,QAAS,UAGlC9F,KAAKyO,SAAS,CAAC+tB,WAAY7E,EAAM+E,SAAUH,IAC3Cv8B,KAAK0iC,QAAQ,KAAM,KAAM,CAAC9K,KAAMD,EAAMnS,KAAM+W,O,iDAIrB/E,EAAQ94B,GAAO,WAExCsB,KAAKqF,OAAOq8B,UACT75B,KAAK,WACJ,OAAO,EAAKxC,OAAOsiC,uBAAuB,QAASnQ,EAAQ94B,KAE5DkH,MAAM,SAACC,GAEN,EAAKy7B,YAAYz7B,EAAIC,QAAS,W,0CAIhBo1B,EAAQ0M,EAAa3M,GAAO,YAC9CA,ElDrkCG,SAAwB4M,GAC7B,GAAIA,EAAK,CACPA,EAAMA,EAAIluB,QAAQ,KAAM,KAAKA,QAAQ,KAAM,KAC3C,IACEkuB,EAAMC,KAAKC,KAAKF,IAChB,MAAMhiC,GACNb,QAAQC,IAAI,qCAAsCY,GAClDgiC,EAAM,MAGV,OAAOA,EkD2jCGG,CAAe/M,IAIrBj7B,KAAKqF,OAAOq8B,UACT75B,KAAK,WACJ,OAAO,EAAKxC,OAAO0gC,mBAAmB,KAAM,KAAM6B,EAAa,CAAC3M,MAAOA,MAExEr1B,MAAM,SAACC,GAEN,EAAKy7B,YAAYz7B,EAAIC,QAAS,SARlC9F,KAAKshC,YAAY,yBAA0B,S,+BAatC,WACP,OACE,yBAAK7gC,GAAG,iBACLT,KAAKkP,MAAMmwB,mBACV,kBAAC,EAAD,CACEh6B,OAAQrF,KAAKqF,OACbyB,OAAQ9G,KAAKkP,MAAMowB,kBACnBt4B,QAAShH,KAAKkP,MAAMqwB,mBACpBh+B,OAAQvB,KAAKkP,MAAMswB,kBACnB/6B,MAAOzE,KAAKkP,MAAMuwB,iBAClBl7B,KAAMvE,KAAKioC,sBACXzgC,YAAaxH,KAAKkoC,gBAClBrjC,SAAU7E,KAAKmoC,wBACfpgC,eAAgB,SAACxC,GACXA,GAAa,EAAK2J,MAAM6C,eAC1B,EAAK2yB,oBAAoB,OAG7B3/B,QAAS/E,KAAKshC,cAEhB,KAEF,kBAAC,EAAD,CACEphC,QAASF,KAAKkP,MAAMwwB,aACpBt/B,MAAOJ,KAAKkP,MAAMywB,YAAYv/B,MAC9BC,QAASL,KAAKkP,MAAMywB,YAAYt/B,QAChCC,SAAUN,KAAKkP,MAAMywB,YAAYr/B,SAAY,WAAQ,EAAKmO,SAAS,CAACixB,cAAc,KAAc,KAChGl/B,OAAQR,KAAKkP,MAAMywB,YAAYn/B,OAC/BE,UAAW,WAAQ,EAAK+N,SAAS,CAACixB,cAAc,IAAS,EAAKxwB,MAAMywB,YAAYj/B,aAChFC,QAASX,KAAKkP,MAAMywB,YAAYh/B,UAElC,kBAAC,GAAD,CACE0E,OAAQrF,KAAKqF,OACbuN,UAAW5S,KAAKkP,MAAM0D,UACtBwP,cAAepiB,KAAKkP,MAAMkT,cAC1ByJ,SAAU7rB,KAAKkP,MAAMkT,eAA4C,cAA3BpiB,KAAKkP,MAAMkwB,YACjDlwB,MAAOlP,KAAKkP,MAAMyvB,kBAClBv+B,MAAOJ,KAAKkP,MAAM0vB,eAClB30B,OAAQjK,KAAKkP,MAAM2vB,gBACnBtJ,MAAOv1B,KAAKkP,MAAMqmB,MAClB9iB,SAAUzS,KAAKkP,MAAMuD,SACrBwqB,cAAej9B,KAAKkP,MAAM+tB,cAC1BD,mBAAoBh9B,KAAKkP,MAAM8tB,mBAE/B1a,UAAWtiB,KAAKkP,MAAMoT,UACtBD,WAAYriB,KAAKkP,MAAMmT,WACvBya,YAAa98B,KAAKkP,MAAM4tB,YACxBC,gBAAiB/8B,KAAKkP,MAAM6tB,gBAE5BhrB,cAAe/R,KAAKkP,MAAM6C,cAC1BwiB,SAAUv0B,KAAKkP,MAAMqlB,SACrBiI,WAAYx8B,KAAKkP,MAAMstB,WACvBE,SAAU18B,KAAKkP,MAAMwtB,SAErBZ,UAAW97B,KAAKkP,MAAM4sB,UACtB1D,cAAep4B,KAAKkP,MAAMkpB,cAC1BG,cAAev4B,KAAKkP,MAAMqpB,cAC1BD,qBAAsBt4B,KAAKkP,MAAMopB,qBACjCvM,cAAe/rB,KAAKkP,MAAM6c,cAC1BoR,iBAAkBn9B,KAAKooC,qBAEvBnU,SAAUj0B,KAAKqoC,iBACftU,WAAY/zB,KAAKsoC,eACjB1L,eAAgB58B,KAAKuoC,mBACrB3S,gBAAiB51B,KAAKwoC,wBACtBxR,gBAAiBh3B,KAAKyoC,2BACtBrL,oBAAqBp9B,KAAK0oC,+BAC1BvR,0BAA2Bn3B,KAAKqhC,gBAChCnK,sBAAuBl3B,KAAK2oC,0BAC5BlR,UAAWz3B,KAAK4oC,cAChB7Q,aAAc/3B,KAAK6oC,iBACnB/Q,cAAe93B,KAAK8oC,kBACpBj2B,gBAAiB7S,KAAK0kC,oBACtBlK,cAAex6B,KAAK+oC,sBACpBjV,WAAY9zB,KAAKgpC,eACjBrQ,SAAU34B,KAAKipC,aACf91B,SAAUnT,KAAKkpC,sBACfnkC,QAAS/E,KAAKshC,YACdjE,sBAAuBr9B,KAAKmpC,iCAC5B7L,uBAAwBt9B,KAAKopC,2BAC7B7L,gBAAiBv9B,KAAKqpC,oBACtB3U,cAAe10B,KAAKspC,kBAEpB7nB,WAAYzhB,KAAKupC,WACjBxO,cAAe/6B,KAAKkP,MAAM6rB,cAC1BrB,iBAAkB15B,KAAK86B,qBAEvBvqB,gBAAiBvQ,KAAKwpC,wBAExB,kBAAC,GAAD,CACEnkC,OAAQrF,KAAKqF,OACbuN,UAAW5S,KAAKkP,MAAM0D,UACtBic,MAAO7uB,KAAKkP,MAAM2f,MAClBne,OAAQ1Q,KAAKkP,MAAM8vB,oBACnB1uB,IAAKtQ,KAAKkP,MAAM+vB,iBAChB7c,cAAepiB,KAAKkP,MAAMkT,cAC1BqF,cAAeznB,KAAKkP,MAAMuY,cAC1BsG,eAAgB/tB,KAAKkP,MAAM6e,eAC3BlC,SAAU7rB,KAAKkP,MAAMkT,gBACS,eAA3BpiB,KAAKkP,MAAMkwB,aAAgCp/B,KAAKkP,MAAMiwB,eACzD18B,MAAOzC,KAAKkP,MAAM6C,cAClBU,SAAUzS,KAAKkP,MAAMuD,SACrBqZ,cAAe9rB,KAAKkP,MAAM4c,cAC1BC,cAAe/rB,KAAKkP,MAAM6c,cAE1BzJ,UAAWtiB,KAAKkP,MAAMoT,UACtBD,WAAYriB,KAAKkP,MAAMmT,WACvBya,YAAa98B,KAAKkP,MAAM4tB,YACxBC,gBAAiB/8B,KAAKkP,MAAM6tB,gBAE5BhO,eAAgB/uB,KAAKkP,MAAM6f,eAE3ByE,mBAAoBxzB,KAAKypC,uBACzBtb,OAAQnuB,KAAK0pC,OACb3kC,QAAS/E,KAAKshC,YACd9R,kBAAmBxvB,KAAK2pC,sBACxBzb,iBAAkBluB,KAAK4pC,gBACvBr5B,gBAAiBvQ,KAAKwpC,sBACtBhpB,oBAAqBxgB,KAAK6pC,wBAC1BxY,UAAWrxB,KAAK8pC,wBAChBhZ,YAAa9wB,KAAK+pC,oBAEnB/pC,KAAKkP,MAAMiwB,cACV,kBAAC,GAAD,CACE95B,OAAQrF,KAAKqF,OACbuN,UAAW5S,KAAKkP,MAAM0D,UACtBwP,cAAepiB,KAAKkP,MAAMkT,cAC1B3f,MAAOzC,KAAKkP,MAAM6C,cAClBwQ,mBAAoBviB,KAAKkP,MAAMqT,mBAC/B9P,SAAUzS,KAAKkP,MAAMuD,SAErB6P,UAAWtiB,KAAKkP,MAAMoT,UACtBD,WAAYriB,KAAKkP,MAAMmT,WACvBya,YAAa98B,KAAKkP,MAAM4tB,YACxBC,gBAAiB/8B,KAAKkP,MAAM6tB,gBAE5B1c,kBAAmBrgB,KAAKgqC,yBACxB72B,SAAUnT,KAAKiqC,mBACfziC,YAAaxH,KAAKkoC,gBAClB1nB,oBAAqBxgB,KAAK6pC,wBAC1BnoB,sBAAuB1hB,KAAKyiB,0BAC5Bd,iBAAkB3hB,KAAKkqC,4BACvBtoB,aAAc5hB,KAAKmqC,wBACnBtoB,aAAc7hB,KAAKoqC,wBACnBtoB,cAAe9hB,KAAKqqC,kBACpBC,YAAatqC,KAAKuqC,yBAClBtoB,kBAAmBjiB,KAAKmjB,kBACxB1B,WAAYzhB,KAAKupC,WACjBxkC,QAAS/E,KAAKshC,YAEd/wB,gBAAiBvQ,KAAKwpC,wBAGxB,S,2CA54CR,YAAYvpC,GAAO,M,IAAA,O,4FAAA,U,EACjB,U,EAAA,iBAAMA,K,gDAEDiP,MAAQ,EAAKg4B,gBAElB,EAAKtH,aAAe,EAAKA,aAAa3gC,KAAlB,OACpB,EAAK6gC,gBAAkB,EAAKA,gBAAgB7gC,KAArB,OACvB,EAAK4gC,aAAe,EAAKA,aAAa5gC,KAAlB,OACpB,EAAKgiC,kBAAoB,EAAKA,kBAAkBhiC,KAAvB,OACzB,EAAKsjC,oBAAsB,EAAKA,oBAAoBtjC,KAAzB,OAC3B,EAAK2qC,gBAAkB,EAAKA,gBAAgB3qC,KAArB,OACvB,EAAK8gC,sBAAwB,EAAKA,sBAAsB9gC,KAA3B,OAC7B,EAAKqiC,YAAc,EAAKA,YAAYriC,KAAjB,OACnB,EAAKspC,mBAAqB,EAAKA,mBAAmBtpC,KAAxB,OAC1B,EAAKohC,gBAAkB,EAAKA,gBAAgBphC,KAArB,OACvB,EAAKwhC,6BAA+B,EAAKA,6BAA6BxhC,KAAlC,OACpC,EAAKyjC,QAAU,EAAKA,QAAQzjC,KAAb,OACf,EAAK0kC,yBAA2B,EAAKA,yBAAyB1kC,KAA9B,OAChC,EAAK2kC,sBAAwB,EAAKA,sBAAsB3kC,KAA3B,OAC7B,EAAKshC,iBAAmB,EAAKA,iBAAiBthC,KAAtB,OACxB,EAAK4kC,aAAe,EAAKA,aAAa5kC,KAAlB,OACpB,EAAK8kC,kBAAoB,EAAKA,kBAAkB9kC,KAAvB,OACzB,EAAK+kC,gBAAkB,EAAKA,gBAAgB/kC,KAArB,OACvB,EAAKqlC,iBAAmB,EAAKA,iBAAiBrlC,KAAtB,OACxB,EAAKyqC,OAAS,EAAKA,OAAOzqC,KAAZ,OACd,EAAKsqC,WAAa,EAAKA,WAAWtqC,KAAhB,OAClB,EAAK+lC,iBAAmB,EAAKA,iBAAiB/lC,KAAtB,OACxB,EAAK67B,qBAAuB,EAAKA,qBAAqB77B,KAA1B,OAC5B,EAAKylC,oBAAsB,EAAKA,oBAAoBzlC,KAAzB,OAC3B,EAAKwqC,uBAAyB,EAAKA,uBAAuBxqC,KAA5B,OAC9B,EAAK8qC,kBAAoB,EAAKA,kBAAkB9qC,KAAvB,OACzB,EAAK6qC,wBAA0B,EAAKA,wBAAwB7qC,KAA7B,OAC/B,EAAKopC,iBAAmB,EAAKA,iBAAiBppC,KAAtB,OACxB,EAAKupC,wBAA0B,EAAKA,wBAAwBvpC,KAA7B,OAC/B,EAAKwpC,2BAA6B,EAAKA,2BAA2BxpC,KAAhC,OAClC,EAAKypC,+BAAiC,EAAKA,+BAA+BzpC,KAApC,OACtC,EAAKqpC,eAAiB,EAAKA,eAAerpC,KAApB,OACtB,EAAKmpC,qBAAuB,EAAKA,qBAAqBnpC,KAA1B,OAC5B,EAAKqqC,kBAAoB,EAAKA,kBAAkBrqC,KAAvB,OACzB,EAAK0pC,0BAA4B,EAAKA,0BAA0B1pC,KAA/B,OACjC,EAAK2pC,cAAgB,EAAKA,cAAc3pC,KAAnB,OACrB,EAAK4pC,iBAAmB,EAAKA,iBAAiB5pC,KAAtB,OACxB,EAAK6pC,kBAAoB,EAAKA,kBAAkB7pC,KAAvB,OACzB,EAAKkiC,kBAAoB,EAAKA,kBAAkBliC,KAAvB,OACzB,EAAKoiC,gBAAkB,EAAKA,gBAAgBpiC,KAArB,OACvB,EAAKinC,iBAAmB,EAAKA,iBAAiBjnC,KAAtB,OACxB,EAAKiqC,sBAAwB,EAAKA,sBAAsBjqC,KAA3B,OAC7B,EAAK+pC,eAAiB,EAAKA,eAAe/pC,KAApB,OACtB,EAAK8pC,sBAAwB,EAAKA,sBAAsB9pC,KAA3B,OAC7B,EAAK0qC,sBAAwB,EAAKA,sBAAsB1qC,KAA3B,OAC7B,EAAK+qC,yBAA2B,EAAKA,yBAAyB/qC,KAA9B,OAChC,EAAK4qC,wBAA0B,EAAKA,wBAAwB5qC,KAA7B,OAC/B,EAAKkkB,kBAAoB,EAAKA,kBAAkBlkB,KAAvB,OACzB,EAAKgqC,aAAe,EAAKA,aAAahqC,KAAlB,OACpB,EAAKirC,4BAA8B,EAAKA,4BAA4BjrC,KAAjC,OACnC,EAAKkrC,wBAA0B,EAAKA,wBAAwBlrC,KAA7B,OAC/B,EAAKmrC,wBAA0B,EAAKA,wBAAwBnrC,KAA7B,OAC/B,EAAKorC,kBAAoB,EAAKA,kBAAkBprC,KAAvB,OACzB,EAAKuqC,sBAAwB,EAAKA,sBAAsBvqC,KAA3B,OAC7B,EAAKooC,wBAA0B,EAAKA,wBAAwBpoC,KAA7B,OAC/B,EAAKgpC,sBAAwB,EAAKA,sBAAsBhpC,KAA3B,OAC7B,EAAKipC,gBAAkB,EAAKA,gBAAgBjpC,KAArB,OACvB,EAAKwoC,mBAAqB,EAAKA,mBAAmBxoC,KAAxB,OAC1B,EAAKgrC,mBAAqB,EAAKA,mBAAmBhrC,KAAxB,OAC1B,EAAKwjB,0BAA4B,EAAKA,0BAA0BxjB,KAA/B,OACjC,EAAKkqC,iCAAmC,EAAKA,iCAAiClqC,KAAtC,OACxC,EAAKmqC,2BAA6B,EAAKA,2BAA2BnqC,KAAhC,OAClC,EAAKoqC,oBAAsB,EAAKA,oBAAoBpqC,KAAzB,OAC3B,EAAKkpC,wBAA0B,EAAKA,wBAAwBlpC,KAA7B,OApEd,EAm5CNiJ,4BAAW61B,ICr7ClBx8B,GAAWJ,EAAemB,aAAaP,OAAOC,SAASZ,MAAvDG,OACFgH,GAAYhH,IAAUA,GAAOipC,IAChCniC,UAAUoiC,WAAapiC,UAAUoiC,UAAU,IAC5CpiC,UAAUE,UACVF,UAAUC,cACV,KAGIoiC,GAAeniC,GAAS+J,cAAchR,MAAM,QAAQ,GAGpDqB,GACJgoC,EAAYpiC,KACZoiC,EAAYD,KACZC,EAAYC,GAEdhrC,IAASirC,OACP,kBAAC,eAAD,CAAcziC,OAAQG,GAAU5F,SAAUA,GAAUmoC,cAAerrC,IAAMu4B,UACvE,kBAAC,GAAD,OAEFp0B,SAASiX,eAAe","file":"index.prod.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/umd/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","module.exports = React;","module.exports = ReactIntl;","module.exports = Tinode;","module.exports = ReactDOM;","module.exports = firebase;","module.exports = firebase[\"messaging\"];","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Alert extends React.PureComponent {\n  render() {\n    return this.props.visible ?\n      <div className=\"alert-container\">\n        <div className=\"alert\">\n          <div className=\"title\">{this.props.title}</div>\n          <div className=\"content\">{this.props.content}</div>\n          <div className=\"dialog-buttons\">\n            {this.props.onReject ?\n              <button className=\"outline\" onClick={this.props.onReject}>\n                {this.props.reject || <FormattedMessage id=\"button_cancel\" />}\n              </button>\n              :\n              null\n            }\n            <button className=\"blue\" onClick={this.props.onConfirm}>\n              {this.props.confirm || <FormattedMessage id=\"button_ok\" />}\n            </button>\n          </div>\n        </div>\n      </div>\n    :\n    null;\n  }\n};\n","// This is a generated file. Don't edit.\n\nexport const PACKAGE_VERSION = \"0.16.3-rc5\";\n","import { PACKAGE_VERSION } from './version.js';\n\n// Name of this application, used in the User-Agent.\nexport const APP_NAME = 'TinodeWeb/' + (PACKAGE_VERSION || '0.16');\n\n// API key. Use https://github.com/tinode/chat/tree/master/keygen to generate your own\nexport const API_KEY = 'AQEAAAABAAD_rAp4DJh05a1HAwFT3A6K';\n\n// The array of possible hosts to connect to.\nexport const KNOWN_HOSTS = {hosted: 'web.tinode.co', local: 'localhost:6060'};\n\n// Default host name and port to connect to.\nexport const DEFAULT_HOST = KNOWN_HOSTS.hosted;\n\n// Enable console logging.\nexport const LOGGING_ENABLED = true;\n\n// Minimum time between two keypress notifications, milliseconds.\nexport const KEYPRESS_DELAY = 3*1000;\n// Delay before sending a {note} for reciving a message, milliseconds.\nexport const RECEIVED_DELAY = 500;\n// Delay before sending a read notification, milliseconds.\nexport const READ_DELAY = 1000;\n\n// The shortest allowed tag length. Matches the value on the server.\nexport const MIN_TAG_LENGTH = 4;\n\n// Access mode for P2P subscriptions initiated by the current user.\nexport const DEFAULT_P2P_ACCESS_MODE = 'JRWPS';\n// Access mode for new group topics created by the current user.\nexport const NEW_GRP_ACCESS_MODE = 'JRWPSAO';\n\n// Access mode for no access.\nexport const NO_ACCESS_MODE = 'N';\n\n// Mediaquery breakpoint between desktop and mobile, in px. Should match the value\n// in @media (max-size: 640px) in base.css\nexport const MEDIA_BREAKPOINT = 640;\n// Size of css 'rem' unit in pixels. Default 1rem = 10pt = 13px.\nexport const REM_SIZE = 13;\n\n// Size of the avatar image: When an avatar image is uploaded, it's resized to\n// a square of this size.\nexport const AVATAR_SIZE = 128;\n\n// Size of the broken_image shown in MessagesView\nexport const BROKEN_IMAGE_SIZE = 32;\n\n// Number of chat messages to fetch in one call.\nexport const MESSAGES_PAGE = 24;\n\n// Maximum in-band (included directly into the message) attachment size which fits into\n// a message of 256K in size, assuming base64 encoding and 1024 bytes of overhead.\n// This is size of an object *before* base64 encoding is applied.\n// Increase this limit to a greater value in production, if desired. Also increase\n// max_message_size in server config.\n//  MAX_INBAND_ATTACHMENT_SIZE = base64DecodedLen(max_message_size - overhead);\nexport const MAX_INBAND_ATTACHMENT_SIZE = 195840;\n\n// Absolute maximum attachment size to be used with the server = 8MB. Increase to\n// something like 100MB in production.\nexport const MAX_EXTERN_ATTACHMENT_SIZE = 1 << 23;\n\n// Maximum allowed linear dimension of an inline image in pixels. You may want\n// to adjust it to 1600 or 2400 for production.\nexport const MAX_IMAGE_DIM = 768;\n\n// Maximum number of online users to be shown in a topic title bar. Others will be\n// hidden under \"+X more\"\nexport const MAX_ONLINE_IN_TOPIC = 4;\n\n// Maximum length of user name, topic title, and private comment.\nexport const MAX_TITLE_LENGTH = 60;\n\n// Link for \"Contact Us\".\nexport const LINK_CONTACT_US = 'email:info@tinode.co';\n\n// Link to Privacy Policy.\nexport const LINK_PRIVACY_POLICY = 'https://tinode.co/privacy.html';\n\n// Link to Terms of Service.\nexport const LINK_TERMS_OF_SERVICE = 'https://tinode.co/terms.html';\n","// Utility class for hash navigation.\n\n// Parse hash as in http://www.example.com/path#hash as if it were\n// path and arguments.\nexport default class HashNavigation {\n  static parseUrlHash(hash) {\n    // Split path from args, path -> parts[0], args->path[1]\n    let parts = hash.split('?', 2);\n    let params = {};\n    let path = [];\n    if (parts[0]) {\n      path = parts[0].substr(1).split('/');\n    }\n    if (parts[1]) {\n      parts[1].split('&').forEach(function(part) {\n        let item = part.split('=');\n        if (item[0]) {\n          params[decodeURIComponent(item[0])] = decodeURIComponent(item[1]);\n        }\n      });\n    }\n    return {path: path, params: params};\n  }\n\n  static navigateTo(url) {\n    window.location.hash = url;\n  }\n\n  static composeUrlHash(path, params) {\n    var url = path.join('/');\n    var args = [];\n    for (var key in params) {\n      if (params.hasOwnProperty(key)) {\n        args.push(key + '=' + params[key]);\n      }\n    }\n    if (args.length > 0) {\n      url += '?' + args.join('&');\n    }\n    return url;\n  }\n\n  static addUrlParam(hash, key, value) {\n    var parsed = this.parseUrlHash(hash);\n    parsed.params[key] = value;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static removeUrlParam(hash, key) {\n    var parsed = this.parseUrlHash(hash);\n    delete parsed.params[key];\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlSidePanel(hash, sidepanel) {\n    var parsed = this.parseUrlHash(hash);\n    parsed.path[0] = sidepanel;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlTopic(hash, topic) {\n    var parsed = this.parseUrlHash(hash);\n    parsed.path[1] = topic;\n    // Close InfoView on topic change.\n    delete parsed.params.info;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n}\n","// Context Menu: popup/dropdown menu.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { injectIntl, defineMessages } from 'react-intl';\n\nimport { REM_SIZE } from '../config.js';\nimport HashNavigation from '../lib/navigation.js';\n\nconst messages = defineMessages({\n  info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  },\n  clear_messages: {\n    id: 'menu_item_clear_messages',\n    defaultMessage: 'Clear messages',\n    description: 'Delete all messages'\n  },\n  clear_for_all: {\n    id: 'menu_item_clear_messages_for_all',\n    defaultMessage: 'Clear for All',\n    description: 'Delete all message(s) for all members'\n  },\n  'delete': {\n    id: 'menu_item_delete',\n    defaultMessage: 'Delete',\n    description: 'Delete selected messages'\n  },\n  delete_for_all: {\n    id: 'menu_item_delete_for_all',\n    defaultMessage: 'Delete for All',\n    description: 'Delete selected message(s) for all members'\n  },\n  send_retry: {\n    id: 'menu_item_send_retry',\n    defaultMessage: 'Retry',\n    description: 'Retry sending message'\n  },\n  mute: {\n    id: 'menu_item_mute',\n    defaultMessage: 'Mute',\n    description: 'Turn off notifications'\n  },\n  unmute: {\n    id: 'menu_item_unmute',\n    defaultMessage: 'Unmute',\n    description: 'Turn notifications on'\n  },\n  topic_delete: {\n    id: 'menu_item_delete_topic',\n    defaultMessage: 'Delete',\n    description: 'Delete entire topic'\n  },\n  topic_delete_warning: {\n    id: 'topic_delete_warning',\n    defaultMessage: 'Are you sure you want to delete this conversation?',\n    description: 'Alert warning when deleting entire topic'\n  },\n  unblock: {\n    id: 'menu_item_unblock',\n    defaultMessage: 'Unblock',\n    description: 'Unblock topic or user'\n  },\n  // Generic string suitable for either topic or user.\n  block: {\n    id: 'menu_item_block',\n    defaultMessage: 'Block',\n    description: 'Block topic or user'\n  },\n  topic_block_warning: {\n    id: 'topic_block_warning',\n    defaultMessage: 'Are you sure you want to block this conversation?',\n    description: 'Alert warning when blocking a topic.'\n  },\n  member_delete: {\n    id: 'menu_item_member_delete',\n    defaultMessage: 'Remove',\n    description: 'Remove user from topic'\n  },\n  archive: {\n    id: 'menu_item_archive_topic',\n    defaultMessage: 'Archive',\n    description: 'Move topic from the list of active chats to archive'\n  }\n});\n\nclass ContextMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const {formatMessage} = props.intl;\n\n    this.handlePageClick = this.handlePageClick.bind(this);\n    this.handleEscapeKey = this.handleEscapeKey.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n\n    // Preconfigured menu items.\n    this.MenuItems = {\n      'topic_info': {\n        id: 'topic_info',\n        title: formatMessage(messages.info),\n        handler: null\n      },\n      'messages_clear': {\n        id: 'messages_clear',\n        title: formatMessage(messages.clear_messages),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage({id: 'menu_item_clear_messages'}), // title\n            formatMessage({id: 'clear_messages_warning'}), // content\n            (() => { this.deleteMessages(true, false, params, errorHandler); }), // onConfirm\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'messages_clear_hard': {\n        id: 'messages_clear_hard',\n        title: formatMessage(messages.clear_for_all),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage({id: 'menu_item_clear_messages_for_all'}), // title\n            formatMessage({id: 'delete_messages_warning'}), // content\n            (() => { return this.deleteMessages(true, true, params, errorHandler); }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'message_delete': {\n        id: 'message_delete',\n        title: formatMessage(messages.delete),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, false, params, errorHandler);\n        }\n      },\n      'message_delete_hard': {\n        id: 'message_delete_hard',\n        title: formatMessage(messages.delete_for_all),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, true, params, errorHandler);\n        }\n      },\n      'menu_item_send_retry': {\n        id: 'menu_item_send_retry',\n        title: formatMessage(messages.send_retry),\n        handler: (params, errorHandler) => {\n          return this.retryMessage(params, errorHandler);\n        }\n      },\n      'topic_unmute': {\n        id: 'topic_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'topic_mute': {\n        id: 'topic_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'topic_unblock': {\n        id: 'topic_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n      'topic_block': {\n        id: 'topic_block',\n        title: formatMessage(messages.block),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage({id: 'menu_item_block'}), // title\n            formatMessage(messages.topic_block_warning), // content\n            (() => {\n              return this.topicPermissionSetter('-JP', params, errorHandler).then((ctrl) => {\n                this.props.onTopicRemoved(params.topicName);\n                return ctrl;\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_delete': {\n        id: 'topic_delete',\n        title: formatMessage(messages.topic_delete),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage({id: 'menu_item_delete_topic'}), // title\n            formatMessage(messages.topic_delete_warning), // content\n            (() => {\n              const topic = this.props.tinode.getTopic(params.topicName);\n              if (!topic) {\n                console.log(\"Topic not found: \", params.topicName);\n                return;\n              }\n              return topic.delTopic().catch((err) => {\n                if (errorHandler) {\n                  errorHandler(err.message, 'err');\n                }\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_archive': {\n        id: 'topic_archive',\n        title: formatMessage(messages.archive),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic) {\n            console.log(\"Topic not found: \", params.topicName);\n            return;\n          }\n          return topic.archive(true).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      // menu_item_edit_permissions is defined elsewhere.\n      'permissions': {\n        id: 'permissions',\n        title: formatMessage({id: 'menu_item_edit_permissions'}),\n        handler: null\n      },\n      'member_delete': {\n        id: 'member_delete',\n        title: formatMessage(messages.member_delete),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic || !params.user) {\n            console.log(\"Topic or user not found: '\" + params.topicName + \"', '\" + params.user + \"'\");\n            return;\n          }\n          return topic.delSubscription(params.user).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      'member_mute': {\n        id: 'member_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'member_unmute': {\n        id: 'member_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'member_block': {\n        id: 'member_block',\n        title: formatMessage(messages.block),\n        handler: this.topicPermissionSetter.bind(this, '-J')\n      },\n      'member_unblock': {\n        id: 'member_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+J')\n      },\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handlePageClick, false);\n    document.addEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handlePageClick, false);\n    document.removeEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  handlePageClick(e) {\n    if (ReactDOM.findDOMNode(this).contains(e.target)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n  }\n\n  handleEscapeKey(e) {\n    if (e.keyCode === 27) {\n      this.props.hide();\n    }\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n    let item = this.props.items[e.currentTarget.dataset.id];\n    if (typeof item == 'string') {\n      item = this.MenuItems[item];\n    }\n\n    if (!item) {\n      console.log(\"Invalid menu item ID\", e.currentTarget.dataset.id);\n    } else {\n      this.props.onAction(\n        item.id,\n        item.handler(this.props.params, this.props.onError),\n        this.props.params);\n    }\n  }\n\n  // Menu Actions\n\n  deleteMessages(all, hard, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found: \", params.topicName);\n      return;\n    }\n\n    // We don't know if the message is still pending (e.g. attachment is being uploaded),\n    // so try cancelling first. No harm if we can't cancel.\n    // The message can be cancelled if transmission to the server has not\n    // started yet or if the message send has failed.\n    if (!all && topic.cancelSend(params.seq)) {\n      return;\n    }\n    // Can't cancel. Delete instead.\n    const promise = all ?\n      topic.delMessagesAll(hard) :\n      topic.delMessagesList([params.seq], hard);\n\n    return promise.catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Retries sending failed message.\n  retryMessage(params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    // Remove the existing message entry.\n    if (!topic || !topic.flushMessage(params.seq)) {\n      return;\n    }\n    const msg = topic.createMessage(params.content, false);\n    return topic.publishDraft(msg).catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Function is used by context menu to set permissions.\n  topicPermissionSetter(mode, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found\", params.topicName);\n      return;\n    }\n\n    let result = topic.updateMode(params.user, mode);\n    if (errorHandler) {\n      result = result.catch((err) => {\n        errorHandler(err.message, 'err');\n      });\n    }\n    return result;\n  }\n\n  render() {\n    let count = 0;\n    let menu = [];\n    this.props.items.map((item) => {\n      if (typeof item == 'string') {\n        item = this.MenuItems[item];\n      }\n      if (item && item.title) {\n        menu.push(\n          item.title == '-' ?\n            <li className=\"separator\" key={count} />\n            :\n            <li onClick={this.handleClick} data-id={count} key={count}>{item.title}</li>\n        );\n      }\n      count++;\n    });\n\n    // Ensure that menu is inside the app-container.\n    const hSize = 12 * REM_SIZE;\n    const vSize = REM_SIZE * (0.7 + menu.length * 2.5);\n    const left = (this.props.bounds.right - this.props.clickAt.x < hSize) ?\n        (this.props.clickAt.x - this.props.bounds.left - hSize) :\n        (this.props.clickAt.x - this.props.bounds.left);\n    const top = (this.props.bounds.bottom - this.props.clickAt.y < vSize) ?\n        (this.props.clickAt.y - this.props.bounds.top - vSize) :\n        (this.props.clickAt.y - this.props.bounds.top);\n\n    const position = {\n      left: left + 'px',\n      top: top + 'px'\n    };\n\n    return (\n      <ul className=\"menu\" style={position}>\n        {menu}\n      </ul>\n    );\n  }\n}\n\nexport default injectIntl(ContextMenu);\n","// Short representation of time in the past.\nexport function shortDateFormat(then, locale) {\n  locale = locale || window.navigator.userLanguage || window.navigator.language;\n  const now = new Date();\n  if (then.getFullYear() == now.getFullYear()) {\n    if (then.getMonth() == now.getMonth() && then.getDate() == now.getDate()) {\n\t    return then.toLocaleTimeString(locale, {hour12: false, hour: '2-digit', minute: '2-digit'});\n    } else {\n\t    return then.toLocaleDateString(locale,\n        {hour12: false, month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit'});\n    }\n  }\n  return then.toLocaleDateString(locale,\n    {hour12: false, year: 'numeric', month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit'});\n}\n\n// Convert seconds to minutes:seconds, i.e. 156 sec -> 2:36.\nexport function secondsToTime(seconds) {\n  const min = Math.floor(seconds / 60);\n  let sec = seconds % 60;\n  sec = sec < 10 ? `0${sec}` : sec;\n  return `${min}:${sec}`;\n}\n\n// Convert a number of bytes to human-readable format.\nexport function bytesToHumanSize(bytes) {\n  if (!bytes || bytes == 0) {\n    return '0 Bytes';\n  }\n\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n  const bucket = Math.min(Math.floor(Math.log2(bytes) / 10) | 0, sizes.length-1);\n  const count = bytes / Math.pow(1024, bucket);\n  const round = bucket > 0 ? (count < 3 ? 2 : (count < 30 ? 1 : 0)) : 0;\n  return count.toFixed(round) + ' ' + sizes[bucket];\n}\n\n// Get 32 bit integer hash value for a string. Ideally it should produce the same value\n// as Java's String#hash().\nexport function stringHash(value) {\n  let hash = 0;\n  value = '' + value;\n  for (let i = 0; i < value.length; i++) {\n    hash = ((hash << 5) - hash) + value.charCodeAt(i);\n    hash = hash & hash; // Convert to 32bit integer\n  }\n  return hash;\n}\n","import React from 'react';\n\nimport Tinode from 'tinode-sdk';\n\nimport { stringHash } from '../lib/strformat.js';\n\nexport default class LetterTile extends React.PureComponent {\n  render() {\n    let avatar;\n    if (this.props.avatar === true) {\n      const isGroup = (Tinode.topicType(this.props.topic) == 'grp');\n      const iconColor = (isGroup ? 'light-color' : 'dark-color')\n        + (Math.abs(stringHash(this.props.topic)) % 16);\n      if (this.props.topic && this.props.title && this.props.title.trim()) {\n        const letter = this.props.title.trim().charAt(0);\n        const className = 'lettertile ' + iconColor;\n        avatar = (<div className={className}><div>{letter}</div></div>)\n      } else {\n        const className = 'material-icons ' + iconColor;\n        avatar = isGroup ?\n          <i className={className}>group</i> : <i className={className}>person</i>;\n      }\n    } else if (this.props.avatar) {\n      // If avatar image is invalid, show a placeholder.\n      avatar = <img className=\"avatar\" alt=\"avatar\" src={this.props.avatar}\n        onError={(e)=>{e.target.onerror = null; e.target.src=\"/img/broken_image.png\"}} />;\n    } else {\n      avatar = null;\n    }\n    return avatar;\n  }\n}\n","// File and image helper functions.\nimport { MAX_INBAND_ATTACHMENT_SIZE, MAX_IMAGE_DIM } from '../config.js';\n\n// Supported image MIME types and corresponding file extensions.\nexport const SUPPORTED_IMAGE_FORMATS = ['image/jpeg', 'image/gif', 'image/png', 'image/svg', 'image/svg+xml'];\nexport const MIME_EXTENSIONS         = ['jpg',        'gif',       'png',       'svg',       'svg'];\n\n// Make a data URL from public.photo\nexport function makeImageUrl(photo) {\n  return (photo && photo.type && photo.data) ?\n    'data:image/' + photo.type + ';base64,' + photo.data : null;\n}\n\n// Calculate linear dimensions for scaling image down to fit under a certain size.\n// Returns an object which contains destination sizes, source sizes, and offsets\n// into source (when making square images).\nexport function fitImageSize(width, height, maxWidth, maxHeight, forceSquare) {\n  // Sanitize input\n  width = width | 0;\n  height = height | 0;\n  maxWidth = maxWidth | 0;\n  maxHeight = maxHeight | 0;\n\n  if (width <= 0 || height <= 0 || maxWidth <= 0 || maxHeight <= 0) {\n    return null;\n  }\n\n  if (forceSquare) {\n    maxWidth = maxHeight = Math.min(maxWidth, maxHeight);\n  }\n\n  let scale = Math.min(\n    Math.min(width, maxWidth) / width,\n    Math.min(height, maxHeight) / height\n  );\n\n  let size = {\n    dstWidth: (width * scale) | 0,\n    dstHeight: (height * scale) | 0,\n  };\n\n  if (forceSquare) {\n    // Also calculate parameters for making the image square.\n    size.dstWidth = size.dstHeight = Math.min(size.dstWidth, size.dstHeight);\n    size.srcWidth = size.srcHeight = Math.min(width, height);\n    size.xoffset = ((width - size.srcWidth) / 2) | 0;\n    size.yoffset = ((height - size.srcWidth) / 2) | 0;\n  } else {\n    size.xoffset = size.yoffset = 0;\n    size.srcWidth = width;\n    size.srcHeight = height;\n  }\n  return size;\n}\n\n// Ensure file's extension matches mime content type\nexport function fileNameForMime(fname, mime) {\n  var idx = SUPPORTED_IMAGE_FORMATS.indexOf(mime);\n  var ext = MIME_EXTENSIONS[idx];\n\n  var at = fname.lastIndexOf('.');\n  if (at >= 0) {\n    fname = fname.substring(0, at);\n  }\n  return fname + '.' + ext;\n}\n\n// Convert uploaded image into a base64-encoded string possibly scaling\n// linear dimensions or constraining to a square.\nexport function imageFileScaledToBase64(file, width, height, forceSquare, onSuccess, onError) {\n  var img = new Image();\n  img.crossOrigin = 'Anonymous';\n  img.onerror = function(err) {\n    onError(\"Image format unrecognized\");\n  }\n  img.onload = function() {\n    var dim = fitImageSize(this.width, this.height, width, height, forceSquare);\n    if (!dim) {\n      onError(\"Invalid image\");\n      return;\n    }\n    var canvas = document.createElement('canvas');\n    canvas.width = dim.dstWidth;\n    canvas.height = dim.dstHeight;\n    var ctx = canvas.getContext('2d');\n    ctx.imageSmoothingEnabled = true;\n    ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n      0, 0, dim.dstWidth, dim.dstHeight);\n\n    var mime = (this.width != dim.dstWidth ||\n      this.height != dim.dstHeight ||\n      SUPPORTED_IMAGE_FORMATS.indexOf(file.type) < 0) ? 'image/jpeg' : file.type;\n    var imageBits = canvas.toDataURL(mime);\n    var parts = imageBits.split(',');\n    // Get actual image type: 'data:image/png;base64,'\n    mime = getMimeType(parts[0]);\n    if (!mime) {\n      onError(\"Unsupported image format\");\n      return;\n    }\n    // Ensure the image is not too large\n    var quality = 0.78;\n    if (base64DecodedLen(imageBits.length) > MAX_INBAND_ATTACHMENT_SIZE) {\n      mime = 'image/jpeg';\n    }\n    if (mime == 'image/jpeg') {\n      // Reduce size of the jpeg by reducing image quality\n      while (base64DecodedLen(imageBits.length) > MAX_INBAND_ATTACHMENT_SIZE && quality > 0.45) {\n        imageBits = canvas.toDataURL(mime, quality);\n        quality *= 0.84;\n      }\n    }\n    if (base64DecodedLen(imageBits.length) > MAX_INBAND_ATTACHMENT_SIZE) {\n      onError(\"The image size \" + bytesToHumanSize(base64DecodedLen(imageBits.length)) +\n        \" exceeds the \"  + bytesToHumanSize(MAX_INBAND_ATTACHMENT_SIZE) + \" limit.\", \"err\");\n      return;\n    }\n    canvas = null;\n    onSuccess(imageBits.split(',')[1], mime, dim.dstWidth, dim.dstHeight, fileNameForMime(file.name, mime));\n  };\n  img.src = URL.createObjectURL(file);\n}\n\n// Convert uploaded image file to base64-encoded string without scaling/converting the image\nexport function imageFileToBase64(file, onSuccess, onError) {\n  var reader = new FileReader();\n  reader.addEventListener('load', function() {\n    var parts = reader.result.split(',');\n    var mime = getMimeType(parts[0]);\n    if (!mime) {\n      onError(\"Failed to process image file\");\n      return;\n    }\n\n    // Get image size.\n    var img = new Image();\n    img.crossOrigin = 'Anonymous';\n    img.onload = function() {\n      onSuccess(parts[1], mime, this.width, this.height, fileNameForMime(file.name, mime));\n    }\n    img.onerror = function(err) {\n      onError(\"Image format not recognized\");\n    }\n    img.src = URL.createObjectURL(file);\n  }, false);\n  reader.readAsDataURL(file);\n}\n\nexport function fileToBase64(file, onSuccess, onError) {\n  var reader = new FileReader();\n  reader.addEventListener('load', function() {\n    onSuccess(file.type, reader.result.split(',')[1], file.name);\n  });\n  reader.readAsDataURL(file);\n}\n\n// File pasted from the clipboard. It's either an inline image or a file attachment.\n// FIXME: handle large files out of band.\nexport function filePasted(event, onImageSuccess, onAttachmentSuccess, onError) {\n  var items = (event.clipboardData || event.originalEvent.clipboardData || {}).items;\n  for (var i in items) {\n    var item = items[i];\n    if (item.kind === 'file') {\n      var file = item.getAsFile();\n      if (!file) {\n        console.log(\"Failed to get file object from pasted file item\", item.kind, item.type);\n        continue;\n      }\n      if (file.type && file.type.split('/')[0] == 'image') {\n        // Handle inline image\n        if (file.size > MAX_INBAND_ATTACHMENT_SIZE || SUPPORTED_IMAGE_FORMATS.indexOf(file.type) < 0) {\n          imageFileScaledToBase64(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, false, onImageSuccess, onError);\n        } else {\n          imageFileToBase64(file, onImageSuccess, onError);\n        }\n      } else {\n        // Handle file attachment\n        fileToBase64(file, onAttachmentSuccess, onError)\n      }\n      // Indicate that the pasted data contains a file.\n      return true;\n    }\n  }\n  // No file found.\n  return false;\n}\n\n// Get mime type from data URL header.\nexport function getMimeType(header) {\n  var mime = /^data:(image\\/[-+a-z0-9.]+);base64/.exec(header);\n  return (mime && mime.length > 1) ? mime[1] : null;\n}\n\n// Given length of a binary object in bytes, calculate the length after\n// base64 encoding.\nexport function base64EncodedLen(n) {\n  return Math.floor((n + 2) / 3) * 4;\n}\n\n// Given length of a base64-encoded object, calculate decoded size of the\n// pbject in bytes.\nexport function base64DecodedLen(n) {\n  return Math.floor(n / 4) * 3;\n}\n\n// Re-encode string to standard base64 encoding with padding.\n// The string may be base64-URL encoded without the padding.\nexport function base64ReEncode(str) {\n  if (str) {\n    str = str.replace(/-/g, '+').replace(/_/g, '/');\n    try {\n      str = btoa(atob(str));\n    } catch(err) {\n      console.log(\"Failed to base64 re-encode string.\", err);\n      str = null;\n    }\n  }\n  return str;\n}\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\n\nimport { AVATAR_SIZE } from '../config.js';\nimport { imageFileScaledToBase64, makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class AvatarUpload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dataUrl: props.avatar\n    };\n\n    this.handleFileUpload = this.handleFileUpload.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.avatar != prevProps.avatar) {\n      this.setState({dataUrl: this.props.avatar})\n    }\n  }\n\n  handleFileUpload(e) {\n    imageFileScaledToBase64(e.target.files[0], AVATAR_SIZE, AVATAR_SIZE, true,\n      // Success\n      (base64bits, mime) => {\n        var du = makeImageUrl({data: base64bits, type: mime});\n        this.setState({dataUrl: du});\n        this.props.onImageChanged(du);\n      },\n      // Failure\n      (err) => {\n        this.props.onError(err, 'err');\n      });\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  render() {\n    // Randomize id value in case more than one AvatarUpload is shown\n    // at the same time.\n    var randId = \"file-input-avatar-\" + (Math.random() + '').substr(2);\n    return (\n      <div className=\"avatar-upload\">\n        {this.props.readOnly || !this.state.dataUrl ?\n          null :\n          <a href=\"#\" className=\"clear-avatar\" onClick={(e) => {e.preventDefault(); this.props.onImageChanged(null);}}>\n            <i className=\"material-icons\">clear</i>\n          </a>}\n        {this.state.dataUrl ?\n          <img src={this.state.dataUrl} className=\"preview\" /> :\n          this.props.readOnly && this.props.uid ?\n            <div className=\"avatar-box\">\n              <LetterTile\n                avatar={true}\n                topic={this.props.uid}\n                title={this.props.title} />\n            </div>\n            :\n            <div className=\"blank\">{AVATAR_SIZE}&times;{AVATAR_SIZE}</div>}\n        {this.props.readOnly ? null :\n          <input type=\"file\" id={randId} className=\"inputfile hidden\"\n            accept=\"image/*\" onChange={this.handleFileUpload} />}\n        {this.props.readOnly ? null :\n        <label htmlFor={randId} className=\"round\">\n          <i className=\"material-icons\">file_upload</i>\n        </label>}\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\n/* BEGIN CheckBox: styled checkbox */\nexport default class CheckBox extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange() {\n    this.props.onChange(this.props.name, !this.props.checked);\n  }\n\n  render() {\n    return (\n      this.props.onChange ? (\n        this.props.checked ?\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box</i> :\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box_outline_blank</i>\n        ) : (\n          this.props.checked ?\n            <i className=\"material-icons\">check_box</i> :\n            <i className=\"material-icons\">check_box_outline_blank</i>\n        )\n    );\n  }\n}\n/* END CheckBox */\n","import React from 'react';\n\nconst icon_mapping = {'muted': 'notifications_off', 'banned': 'block'};\n\n/* Contact's labels: [you], or icons [muted], [blocked] */\nexport default class ContactBadges extends React.PureComponent {\n    render() {\n      let badges = null;\n      if (this.props.badges && this.props.badges.length > 0) {\n        badges = [];\n        this.props.badges.map(function(b) {\n          if (b.icon) {\n            badges.push(<i className=\"material-icons as-badge\" key={b.key || b.icon}>{icon_mapping[b.icon]}</i>);\n          } else {\n            const style = 'badge' + (b.color ? ' ' + b.color : '');\n            badges.push(<span className={style} key={b.key || b.name}>{b.name}</span>);\n          }\n        });\n        return <>{badges}</>;\n      }\n      return null;\n    }\n};\n","// The counter of unread messages in the topic.\nimport React from 'react';\n\nexport default class UnreadBadge extends React.PureComponent {\n  render() {\n    return (this.props.count > 0 ?\n      <span className=\"unread\">{this.props.count > 9 ? \"9+\" : this.props.count}</span>\n      : null);\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport LetterTile from './letter-tile.jsx';\nimport ContactBadges from './contact-badges.jsx';\nimport UnreadBadge from './unread-badge.jsx';\n\nexport default class Contact extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.props.onSelected) {\n      this.props.onSelected(this.props.item, this.props.index, this.props.now, this.props.acs);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.props.item, y: e.pageY, x: e.pageX });\n  }\n\n  render() {\n    let title = this.props.title;\n    if (!title) {\n      title = <i><FormattedMessage id=\"unnamed_topic\" /></i>;\n    } else if (title.length > 30) {\n      // FIXME: this is probably wrong for RTL languages.\n      title = title.substring(0, 28) + '...';\n    }\n    const online = this.props.now ? 'online' : 'offline';\n    const avatar = this.props.avatar ? this.props.avatar : true;\n    const badges = this.props.badges ? this.props.badges.slice() : [];\n    const icon_badges = [];\n    if (this.props.acs) {\n      if (this.props.showMode) {\n        badges.push({name: this.props.acs.getMode(), key: 'mode'});\n      }\n      if (this.props.acs.isMuted()) {\n        icon_badges.push({icon: 'muted'});\n      }\n      if (!this.props.acs.isJoiner()) {\n        icon_badges.push({icon: 'banned'});\n      }\n    }\n\n    return (\n      <li className={!this.props.showCheckmark && this.props.selected ? \"selected\" : null}\n        onClick={this.handleClick}>\n        <div className=\"avatar-box\">\n          <LetterTile\n            avatar={avatar}\n            title={this.props.title}\n            topic={this.props.item} />\n          {this.props.showOnline ? <span className={online} /> :\n            (this.props.showCheckmark && this.props.selected ?\n            <i className=\"checkmark material-icons\">check_circle</i>\n            : null)}\n        </div>\n        <div className=\"text-box\">\n          <div><span className=\"contact-title\">{title}</span>\n            <UnreadBadge count={this.props.unread} /><ContactBadges badges={icon_badges} />\n          </div>\n          {this.props.comment ? <div className=\"contact-comment\">{this.props.comment}</div> : null}\n          <span><ContactBadges badges={badges} /></span>\n        </div>\n        {this.props.showContextMenu ?\n          <span className=\"menuTrigger\">\n            <a href=\"#\" onClick={this.handleContextClick}>\n              <i className=\"material-icons\">expand_more</i>\n            </a>\n          </span> : null}\n      </li>\n    );\n  }\n};\n","// A panel included into a list of contacts with an action text.\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\n\nclass ContactAction extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.onAction(this.props.action);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <li onClick={this.handleClick} className=\"action\">\n        <div className=\"action-text\">{formatMessage(this.props.title, this.props.values)}</div>\n      </li>\n    );\n  }\n};\n\nexport default injectIntl(ContactAction);\n","// ContactList: component for showing a list of contacts,\n// such as a list of group members in a group chat.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport Contact from './contact.jsx';\nimport ContactAction from './contact-action.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nconst messages = defineMessages({\n  badge_you: {\n    id: 'badge_you',\n    defaultMessage: 'you',\n    description: 'Badge for indicating the current user'\n  },\n  badge_owner: {\n    id: 'badge_owner',\n    defaultMessage: 'owner',\n    description: 'Badge for indicating the owner'\n  }\n});\n\nclass ContactList extends React.Component {\n  render() {\n    const {formatMessage} = this.props.intl;\n    const showCheckmark = Array.isArray(this.props.topicSelected);\n    const contactNodes = [];\n    let contactsCount = 0;\n    if (this.props.contacts && this.props.contacts.length > 0) {\n      this.props.contacts.map((c) => {\n        if (c.action) {\n          // Action item\n          contactNodes.push(\n            <ContactAction\n              title={c.title} action={c.action} values={c.values}\n              key={c.action}\n              onAction={this.props.onAction}\n              />);\n        } else {\n          // Normal contact\n          const key = c.topic ? c.topic : c.user;\n          // If filter function is provided, filter out the items\n          // which don't satisfy the condition.\n          if (this.props.filterFunc && this.props.filter) {\n            let content = [key];\n            if (c.private && c.private.comment) {\n              content.push(('' + c.private.comment).toLowerCase());\n            }\n            if (c.public && c.public.fn) {\n              content.push(('' + c.public.fn).toLowerCase());\n            }\n            if (!this.props.filterFunc(this.props.filter, content)) {\n              return;\n            }\n          }\n\n          const selected = showCheckmark ?\n            (this.props.topicSelected.indexOf(key) > -1) :\n            (this.props.topicSelected === key);\n          const badges = [];\n          if (this.props.showMode) {\n            if (key === this.props.myUserId) {\n              badges.push({name: formatMessage(messages.badge_you), color: 'green'});\n            }\n            if (c.acs && c.acs.isOwner()) {\n              badges.push({name: formatMessage(messages.badge_owner), color: 'blue'});\n            }\n          }\n          const comment = Array.isArray(c.private) ?\n            c.private.join(',') : (c.private ? c.private.comment : null);\n\n          contactNodes.push(\n            <Contact\n              title={c.public ? c.public.fn : null}\n              avatar={makeImageUrl(c.public ? c.public.photo : null)}\n              comment={comment}\n              unread={this.props.showUnread ? c.unread : 0}\n              now={c.online && this.props.connected}\n              acs={c.acs}\n              showMode={this.props.showMode}\n              badges={badges}\n              showCheckmark={showCheckmark}\n              selected={selected}\n              showOnline={this.props.showOnline}\n              onSelected={this.props.onTopicSelected}\n              showContextMenu={this.props.showContextMenu}\n              item={key}\n              index={contactNodes.length}\n              key={key} />\n          );\n          contactsCount ++;\n        }\n      }, this);\n    }\n\n    return (\n      <div className={this.props.noScroll ? null : \"scrollable-panel\"}>\n        {contactsCount == 0 ?\n          <div className=\"center-medium-text\"\n            dangerouslySetInnerHTML={{__html: this.props.emptyListMessage}} />\n          :\n          null\n        }\n        {contactNodes.length > 0 ?\n          <ul className=\"contact-box\">\n            {contactNodes}\n          </ul>\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ContactList);\n","// The X menu to be displayed in title bars.\nimport React from 'react';\n\nexport default class MenuCancel extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}><i className=\"material-icons\">close</i></a>\n    );\n  }\n}\n","import React from 'react';\n\nimport MenuCancel from './menu-cancel.jsx';\n\nexport default class ErrorPanel extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      show: false,\n    };\n\n    this.hide = this.hide.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.level !== this.props.level) {\n      this.setState({\n        show: !(!this.props.level)\n      });\n    }\n  }\n\n  hide() {\n    this.setState({show: false});\n    if (this.props.onClearError) {\n      this.props.onClearError();\n    }\n  }\n\n  render() {\n    const icons = {err: 'error', warn: 'warning', info: 'info'}\n    const level = icons[this.props.level] || '';\n    const className = 'info-box ' + level;\n    return (\n      <div className={className}>\n        <div className=\"icon\"><i className=\"material-icons\">{level}</i></div>\n        <span>\n          <span dangerouslySetInnerHTML={{__html: this.props.text}} />\n          {this.props.action ?\n            <>\n              &#32;<a href=\"#\"\n                style={{ whiteSpace: 'nowrap' }}\n                onClick={(e) => {e.preventDefault(); this.props.action();}}>\n                {this.props.actionText}\n              </a>\n            </>\n          : null}\n        </span>\n        <div className=\"cancel\"><MenuCancel onCancel={this.hide} /></div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\n\nexport default class Chip extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel(this.props.topic, this.props.index);\n  }\n\n  render() {\n    const title = this.props.title || this.props.topic;\n    const className = this.props.invalid ? 'chip invalid' : 'chip';\n    return (\n      <div className={className}>\n        {this.props.noAvatar ?\n          <span className=\"spacer\" /> :\n          <div className=\"avatar-box\">\n            <LetterTile\n              avatar={this.props.avatar || true}\n              topic={this.props.topic}\n              title={this.props.title} />\n          </div>\n        }\n        <span>{title}</span>\n        {this.props.onCancel && !this.props.required ?\n          <a href=\"#\" onClick={this.handleCancel} >&times;</a>\n          : <span className=\"spacer\" />}\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport Chip from './chip.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n/* BEGIN ChipInput: group membership widget */\nexport default class ChipInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = ChipInput.deriveStateFromProps(props);\n    this.state.input = '';\n    this.state.focused = false;\n\n    this.handleTextInput = this.handleTextInput.bind(this);\n    this.removeChipAt = this.removeChipAt.bind(this);\n    this.handleChipCancel = this.handleChipCancel.bind(this);\n    this.handleFocusGained = this.handleFocusGained.bind(this);\n    this.handleFocusLost = this.handleFocusLost.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  static deriveStateFromProps(props) {\n    return {\n      placeholder: props.chips ? '' : props.prompt,\n      sortedChips: ChipInput.sortChips(props.chips, props.staticMembers),\n      chipIndex: ChipInput.indexChips(props.chips)\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chips != this.props.chips ||\n      prevProps.staticMembers != this.props.staticMembers ||\n      prevProps.prompt != this.props.prompt) {\n      this.setState(ChipInput.deriveStateFromProps(this.props));\n    }\n    if (!prevState || this.props.chips.length > prevState.sortedChips.length) {\n      this.setState({input: ''});\n    }\n  }\n\n  // Map chip index to user name\n  static indexChips(chips) {\n    const index = {};\n    let count = 0;\n    chips.map((item) => {\n      index[item.user] = count;\n      count ++;\n    });\n    return index;\n  }\n\n  // Have non-removable chips appear before all other chips.\n  static sortChips(chips, keep) {\n    const required = [];\n    const normal = [];\n    chips.map((item) => {\n      if (keep && keep.includes(item.user)) {\n        required.push(item);\n      } else {\n        normal.push(item);\n      }\n    });\n    return required.concat(normal);\n  }\n\n  handleTextInput(e) {\n    this.setState({input: e.target.value});\n    if (this.props.filterFunc) {\n      this.props.filterFunc(e.target.value);\n    }\n  }\n\n  removeChipAt(idx) {\n    const removed = this.state.sortedChips[idx];\n    this.props.onChipRemoved(removed.user, this.state.chipIndex[removed.user]);\n  }\n\n  handleChipCancel(item, idx) {\n    this.removeChipAt(idx);\n  }\n\n  handleFocusGained() {\n    this.setState({focused: true});\n  }\n\n  handleFocusLost() {\n    this.setState({focused: false});\n    if (this.props.onFocusLost) {\n      this.props.onFocusLost(this.state.input);\n    }\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Backspace') {\n      if (this.state.input.length == 0 && this.state.sortedChips.length > 0) {\n        const at = this.state.sortedChips.length - 1;\n        if (this.state.sortedChips[at].user !== this.props.staticMembers) {\n          this.removeChipAt(at);\n        }\n      }\n    } else if (e.key === 'Enter') {\n      if (this.props.onEnter) {\n        this.props.onEnter(this.state.input);\n      }\n    } else if (e.key === 'Escape') {\n      if (this.props.onCancel) {\n        this.props.onCancel();\n      }\n    }\n  }\n\n  render() {\n    const chips = [];\n    let count = 0;\n    const staticMembers = this.props.staticMembers || [];\n    this.state.sortedChips.map((item) => {\n      chips.push(\n        <Chip\n          onCancel={this.handleChipCancel}\n          avatar={makeImageUrl(item.public ? item.public.photo : null)}\n          title={item.public ? item.public.fn : undefined}\n          noAvatar={this.props.avatarDisabled}\n          topic={item.user}\n          required={staticMembers.includes(item.user)}\n          invalid={item.invalid}\n          index={count}\n          key={item.user} />\n      );\n      count++;\n    });\n    const className = \"chip-input\" + (this.state.focused ? ' focused' : '');\n    return (\n      <div className={className}>\n        {chips}\n        <input type=\"text\"\n          placeholder={this.state.placeholder}\n          onChange={this.handleTextInput}\n          onFocus={this.handleFocusGained}\n          onBlur={this.handleFocusLost}\n          onKeyDown={this.handleKeyDown}\n          value={this.state.input}\n          autoFocus />\n      </div>\n    );\n  }\n};\n","// GroupMembers: control for managing a list of group members.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\nimport ContactList from './contact-list.jsx';\n\nconst messages = defineMessages({\n  no_contacts: {\n    id: 'no_contacts',\n    defaultMessage: 'You have no contacts :-(',\n    description: 'Shown in ContactsView when the user has no contacts'\n  },\n  contacts_not_found: {\n    id: 'contacts_not_found_short',\n    defaultMessage: \"No contacts match '{query}'\",\n    description: 'Shown in ContactsView when search returned no results'\n  }\n});\n\nclass GroupManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Array of topic members\n      members: props.members,\n      index: GroupManager.indexMembers(props.members),\n      staticMembers: GroupManager.staticMembers(props.members, props.keepInitialMembers, props.requiredMember),\n      contactFilter: '',\n      noContactsMessage: props.intl.formatMessage(messages.no_contacts),\n      selectedContacts: GroupManager.selectedContacts(props.members)\n    };\n\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleMemberRemoved = this.handleMemberRemoved.bind(this);\n    this.handleContactFilter = this.handleContactFilter.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static indexMembers(members) {\n    let index = {};\n    members.map((m) => {\n      index[m.user] = {delta: 0, present: true}; // Delta: 0 unchanged, +1 added, -1 removed\n    });\n    return index;\n  }\n\n  static staticMembers(members, keepInitial, requiredMember) {\n    let stat = [];\n    members.map((m) => {\n      if (keepInitial || m.user == requiredMember) {\n        stat.push(m.user);\n      }\n    });\n    return stat;\n  }\n\n  static selectedContacts(members) {\n    let sel = [];\n    members.map((m) => {\n      sel.push(m.user);\n    });\n    return sel;\n  }\n\n  handleContactSelected(userId, index) {\n    let status = this.state.index[userId];\n    if (status) {\n      if (status.present) {\n        // Prevent duplicate members\n        return;\n      }\n      status.delta += 1;\n      status.present = true;\n    } else {\n      status = {delta: 1, present: true};\n    }\n\n    let m = this.state.members.slice();\n    m.push(this.props.contacts[index]);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleMemberRemoved(userId, index) {\n    const status = this.state.index[userId];\n    if (!status || !status.present) {\n      return;\n    }\n    status.present = false;\n    status.delta -= 1;\n\n    let m = this.state.members.slice();\n    m.splice(index, 1);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleContactFilter(val) {\n    const {formatMessage} = this.props.intl;\n    const msg = !val ?\n      formatMessage(messages.no_contacts) :\n      formatMessage(messages.contacts_not_found, {query: val});\n\n    this.setState({contactFilter: val, noContactsMessage: msg});\n  }\n\n  static doContactFiltering(filter, values) {\n    if (filter) {\n      for (let i=0; i<values.length; i++) {\n        if (values[i].indexOf(filter) >= 0) {\n          return true;\n        }\n      }\n      return false;\n    }\n    return true;\n  }\n\n  handleSubmit() {\n    var instance = this;\n    var members = [];\n    var added = [];\n    var removed = [];\n\n    var keys = Object.keys(this.state.index);\n    keys.map(function(k) {\n      if (instance.state.index[k].present) {\n        members.push(k);\n      }\n\n      if (instance.state.index[k].delta > 0) {\n        added.push(k);\n      } else if (instance.state.index[k].delta < 0) {\n        removed.push(k);\n      }\n    });\n    this.props.onSubmit(members, added, removed);\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <div id=\"group-manager\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_group_members\" defaultMessage=\"Group Members\" description=\"Section title\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ChipInput\n            chips={this.state.members}\n            staticMembers={this.state.staticMembers}\n            prompt=\"add members\"\n            filterFunc={this.handleContactFilter}\n            onChipRemoved={this.handleMemberRemoved} />\n        </div>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_all_contacts\" defaultMessage=\"All Contacts\"\n              description=\"Section title [All Contacts]\" />\n          </label>\n        </div>\n        <ContactList\n          contacts={this.props.contacts}\n          myUserId={this.props.myUserId}\n          topicSelected={this.state.selectedContacts}\n          filter={this.state.contactFilter}\n          filterFunc={GroupManager.doContactFiltering}\n          emptyListMessage={this.state.noContactsMessage}\n          showOnline={false}\n          showUnread={false}\n          onTopicSelected={this.handleContactSelected} />\n        <div id=\"group-manager-buttons\" className=\"panel-form-row\">\n          <button className=\"blue\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n          <button className=\"white\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(GroupManager);\n","// Password with a visiblity toggle.\nimport React from 'react';\n\nexport default class VisiblePassword extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: this.props.value,\n      visible: false\n    };\n\n    this.handleVisibility = this.handleVisibility.bind(this);\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n    if (this.props.onChange) {\n      this.props.onChange(e);\n    }\n  }\n\n  handleVisibility(e) {\n    e.preventDefault();\n    this.setState({visible: !this.state.visible});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode == 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, visible: false});\n      if (this.props.onFinished) {\n        this.props.onFinished();\n      }\n    } else if (e.keyCode == 13) {\n      // Enter pressed\n      this.handleEditingFinished();\n    }\n  }\n\n  handleEditingFinished(e) {\n    if (e) {\n      let currentTarget = e.currentTarget;\n      setTimeout(() => {\n        if (!currentTarget.contains(document.activeElement)) {\n          if (this.props.onFinished) {\n            this.props.onFinished(this.state.value);\n          }\n        }\n      }, 0);\n    } else if (this.props.onFinished) {\n      this.props.onFinished(this.state.value.trim());\n    }\n  }\n\n  render() {\n    return (\n      <div tabIndex=\"-1\" className=\"group-focus\"\n        onBlur={this.handleEditingFinished}>\n        <input className=\"with-visibility\"\n          type={this.state.visible ? \"text\" : \"password\"}\n          value={this.state.value}\n          placeholder={this.props.placeholder}\n          required={this.props.required ? 'required' : ''}\n          autoFocus={this.props.autoFocus ? 'autoFocus' : ''}\n          autoComplete={this.props.autoComplete}\n          onChange={this.handeTextChange}\n          onKeyDown={this.handleKeyDown} />\n        <span onClick={this.handleVisibility}>\n          <i className=\"material-icons clickable light-gray\">\n            {this.state.visible ? 'visibility' : 'visibility_off'}\n          </i>\n        </span>\n      </div>\n    );\n  }\n}\n","// In-place text editor. Shows text with an icon which toggles it into an input field.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport VisiblePassword from './visible-password.jsx';\n\nexport default class InPlaceEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      active: props.active,\n      initialValue: props.value || '',\n      value: props.value || ''\n    };\n\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleStartEditing = this.handleStartEditing.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n    this.handlePasswordFinished = this.handlePasswordFinished.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // If text has changed while in read mode, update text and discard changes.\n    // Ignore update if in edit mode.\n    const newValue = this.props.value || '';\n    if (prevState.initialValue != newValue && !prevState.active) {\n      this.setState({\n        initialValue: newValue,\n        value: newValue\n      });\n    }\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, active: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleEditingFinished(e);\n    }\n  }\n\n  handleStartEditing() {\n    if (!this.props.readOnly) {\n      ReactDOM.findDOMNode(this).focus();\n      this.setState({active: true});\n    }\n  }\n\n  handleEditingFinished(event) {\n    if (this.props.required && !event.target.checkValidity()) {\n      // Empty input\n      this.setState({value: this.props.value, active: false});\n      return;\n    }\n    this.setState({active: false});\n    let value = this.state.value.trim();\n    if ((value || this.props.value) && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  handlePasswordFinished(value) {\n    this.setState({active: false});\n    if (value && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  render() {\n    if (this.state.active) {\n      var fieldType = this.props.type || 'text';\n    } else {\n      var spanText = this.props.type == 'password' ? '••••••••' : this.state.value;\n      var spanClass = 'in-place-edit' +\n        (this.props.readOnly ? ' disabled' : '');\n      if (!spanText) {\n        spanText = this.props.placeholder;\n        spanClass += ' placeholder';\n      }\n      if (spanText.length > 20) {\n        // FIXME: this is wrong for RTL languages.\n        spanText = spanText.substring(0, 19) + '...';\n      }\n    }\n    return (\n      this.state.active ?\n        (fieldType == 'password' ?\n          <VisiblePassword\n            value={this.state.value}\n            placeholder={this.props.placeholder}\n            required={this.props.required ? 'required' : ''}\n            autoComplete={this.props.autoComplete}\n            autoFocus={true}\n            onFinished={this.handlePasswordFinished}/>\n          :\n          <input type={fieldType}\n            value={this.state.value}\n            placeholder={this.props.placeholder}\n            required={this.props.required ? 'required' : ''}\n            autoComplete={this.props.autoComplete}\n            autoFocus\n            onChange={this.handeTextChange}\n            onKeyDown={this.handleKeyDown}\n            onBlur={this.handleEditingFinished} />\n        )\n        :\n        <span className={spanClass} onClick={this.handleStartEditing}>\n          <span className=\"content\">{spanText}</span>\n        </span>\n    );\n  }\n};\n","// Toggle [Title text >] -> [Title text v]\n\nimport React from 'react';\n\nexport default class MoreButton extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: props.open\n    };\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n\n  handleToggle() {\n    const open = !this.state.open;\n    this.setState({open: open});\n    if (this.props.onToggle) {\n      this.props.onToggle(open);\n    }\n  }\n\n  render() {\n    return (<label className=\"small clean-clickable\" onClick={this.handleToggle}>{this.props.title}...\n      {this.state.open ? <i className=\"material-icons\">expand_more</i> :\n        <i className=\"material-icons\">chevron_right</i>}\n      </label>);\n  }\n}\n","// PermissionsEditor: Component for editing permissions\n// <PermissionsEditor mode=\"JWROD\" skip=\"O\" onChange={this.handleCheckboxTest} />\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport CheckBox from './checkbox.jsx';\nimport Contact from './contact.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n// Translatable permission names.\nconst messages = defineMessages({\n  'joiner': {\n    id: 'permission_join',\n    defaultMessage: \"Join ({val})\",\n    description: 'Name of J permission'\n  },\n  'reader': {\n    id: 'permission_read',\n    defaultMessage: \"Read ({val})\",\n    description: 'Name of R permission'\n  },\n  'writer': {\n    id: 'permission_write',\n    defaultMessage: \"Write ({val})\",\n    description: 'Name of W permission'\n  },\n  'preser': {\n    id: 'permission_pres',\n    defaultMessage: \"Get notified ({val})\",\n    description: 'Name of P permission'\n  },\n  'approver': {\n    id: 'permission_admin',\n    defaultMessage: \"Approve ({val})\",\n    description: 'Name of A permission'\n  },\n  'sharer': {\n    id: 'permission_share',\n    defaultMessage: \"Share ({val})\",\n    description: 'Name of S permission'\n  },\n  'deleter': {\n    id: 'permission_delete',\n    defaultMessage: \"Delete ({val})\",\n    description: 'Name of D permission'\n  },\n  'owner': {\n    id: 'permission_owner',\n    defaultMessage: \"Owner ({val})\",\n    description: 'Name of O permission'\n  }\n});\n\nclass PermissionsEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mode: (props.mode || '').replace('N', '')\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(val) {\n    let mode = this.state.mode;\n    let idx = mode.indexOf(val);\n    if (idx == -1) {\n      mode += val;\n    } else {\n      mode = mode.replace(val, '');\n    }\n    this.setState({mode: mode});\n  }\n\n  handleSubmit() {\n    // Normalize string, otherwise cannot check if mode has changed.\n    var mode = (this.state.mode || 'N').split('').sort().join('');\n    var before = (this.props.mode || 'N').split('').sort().join('')\n    if (mode !== before) {\n      this.props.onSubmit(mode);\n    } else {\n      this.props.onCancel();\n    }\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const all = 'JRWPASDO';\n    const names = {\n      'J': formatMessage(messages.joiner, {val: 'J'}),\n      'R': formatMessage(messages.reader, {val: 'R'}),\n      'W': formatMessage(messages.writer, {val: 'W'}),\n      'P': formatMessage(messages.preser, {val: 'P'}),\n      'A': formatMessage(messages.approver, {val: 'A'}),\n      'S': formatMessage(messages.sharer, {val: 'S'}),\n      'D': formatMessage(messages.deleter, {val: 'D'}),\n      'O': formatMessage(messages.owner, {val: 'O'})\n    };\n\n    let skip = this.props.skip || '';\n    let mode = this.state.mode;\n    let compare = (this.props.compare || '').replace('N', '');\n    let items = [];\n    for (let i=0; i<all.length; i++) {\n      let c = all.charAt(i);\n      if (skip.indexOf(c) >= 0 && mode.indexOf(c) < 0) {\n        // Permission is marked as inactive: hide unchecked permissions, disable checked permissions\n        continue;\n      }\n      items.push(\n        <tr key={c}>\n          <td>{names[c]}</td>\n          <td className=\"checkbox\">{skip.indexOf(c) < 0 ?\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} onChange={this.handleChange}/>\n            :\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} />\n          }</td>{this.props.compare ? <td className=\"checkbox\">\n            <CheckBox name={c} checked={(compare.indexOf(c) >= 0)}/>\n          </td> : null}\n        </tr>\n      );\n    }\n\n    return (\n      <div className=\"panel-form-column\">\n        {this.props.userTitle ?\n          <ul className=\"contact-box\"><Contact\n            item={this.props.item}\n            title={this.props.userTitle}\n            avatar={makeImageUrl(this.props.userAvatar ? this.props.userAvatar : null)} /></ul> : null}\n        <label className=\"small\"><FormattedMessage id=\"title_permissions\"\n          defaultMessage=\"Permissions\" description=\"Section title\"/></label>\n        <table className=\"permission-editor\">\n        {this.props.compare ?\n          <thead><tr>\n            <th></th><th>{this.props.modeTitle}</th>\n            <th>{this.props.compareTitle}</th>\n          </tr></thead> :\n          null}\n        <tbody>\n          {items}\n        </tbody></table>\n        <br />\n        <div className=\"dialog-buttons\">\n          <button className=\"outline\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" />\n          </button>\n          <button className=\"blue\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(PermissionsEditor);\n","// Odds and ends\n\n// Make shortcut icon appear with a green dot + show unread count in title.\nexport function updateFavicon(count) {\n  const oldIcon = document.getElementById('shortcut-icon');\n  const head = document.head || document.getElementsByTagName('head')[0];\n  const newIcon = document.createElement('link');\n  newIcon.type = 'image/png';\n  newIcon.id = 'shortcut-icon';\n  newIcon.rel = 'shortcut icon';\n  newIcon.href = 'img/logo32x32' + (count > 0 ? 'a' : '') + '.png';\n  if (oldIcon) {\n    head.removeChild(oldIcon);\n  }\n  head.appendChild(newIcon);\n\n  document.title = (count > 0 ? '('+count+') ' : '') + 'Tinode';\n}\n\n// Create VCard which represents topic 'public' info\nexport function vcard(fn, imageDataUrl) {\n  let card = null;\n\n  if ((fn && fn.trim()) || imageDataUrl) {\n    card = {};\n    if (fn) {\n      card.fn = fn.trim();\n    }\n    if (imageDataUrl) {\n      const dataStart = imageDataUrl.indexOf(',');\n      card.photo = dataStart >= 0 ? {\n        data: imageDataUrl.substring(dataStart+1),\n        type: 'jpg'\n      } : imageDataUrl;\n    }\n  }\n  return card;\n}\n\n// Deep-shallow compare two arrays: shallow compare each element.\nexport function arrayEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (!Array.isArray(a) || !Array.isArray(b)) {\n    return false;\n  }\n\n  // Compare lengths first.\n  if (a.length != b.length) {\n    return false;\n  }\n  // Order of elements is ignored.\n  a.sort();\n  b.sort();\n  for (let i = 0, l = a.length; i < l; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Checks (loosely) if the given string is a phone. If so, returns the phone number in a format\n// as close to E.164 as possible.\nexport function asPhone(val) {\n  val = val.trim();\n  if (/^(?:\\+?(\\d{1,3}))?[- (.]*(\\d{3})[- ).]*(\\d{3})[- .]*(\\d{2})[- .]*(\\d{2})?$/.test(val)) {\n    return val.replace(/[- ().]*/, '');\n  }\n  return null;\n}\n\n// Checks (loosely) if the given string is an email. If so returns the email.\nexport function asEmail(val) {\n  val = val.trim();\n  if (/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(val)) {\n    return val;\n  }\n  return null;\n}\n\n// Checks if URL is a relative url, i.e. has no 'scheme://', including the case of missing scheme '//'.\n// The scheme is expected to be RFC-compliant, e.g. [a-z][a-z0-9+.-]*\n// example.html - ok\n// https:example.com - not ok.\n// http:/example.com - not ok.\n// ' ↲ https://example.com' - not ok. (↲ means carriage return)\nexport function isUrlRelative(url) {\n  return !/^\\s*([a-z][a-z0-9+.-]*:|\\/\\/)/im.test(url);\n}\n\n// Ensure URL does not present an XSS risk. Optional allowedSchemes may contain an array of\n// strings with permitted URL schemes, such as ['ftp', 'ftps']; otherwise accept http and https only.\nexport function sanitizeUrl(url, allowedSchemes) {\n  if (!url) {\n    return null;\n  }\n\n  // Strip control characters and whitespace. They are not valid URL characters anyway.\n  url = url.replace(/[^\\x20-\\x7E]/gmi, '').trim();\n\n  // Relative URLs are safe.\n  if (!/^([a-z][a-z0-9+.-]*:|\\/\\/)/i.test(url)) {\n    return url;\n  }\n  // Blob URLs are safe.\n  if (/^blob:http/.test(url)) {\n    return url;\n  }\n\n  // Absolute URL. Accept only safe schemes, or no scheme.\n  const schemes = Array.isArray(allowedSchemes) ? allowedSchemes.join('|') : 'http|https';\n  const re = new RegExp('^((' + schemes + '):|//)', 'i');\n  if (!re.test(url)) {\n    return null;\n  }\n\n  return url;\n}\n\n// Ensure URL is suitable for <img src=\"url\"> field: the URL must be a relative URL or\n// have http:, https:, or data: scheme. In case of data: scheme, the URL must start with\n// a 'data:image/XXXX;base64,'.\nexport function sanitizeImageUrl(url) {\n  if (!url) {\n    return null;\n  }\n\n  const sanitizedUrl = sanitizeUrl(url);\n  if (sanitizedUrl) {\n    return sanitizedUrl;\n  }\n\n  // Is this a data: URL of an image?\n  if (/data:image\\/[a-z0-9.-]+;base64,/i.test(url.trim())) {\n    return url;\n  }\n\n  return null;\n}\n","// TagManager: edit topic or user tags.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\n\nimport { MIN_TAG_LENGTH } from '../config.js';\nimport { arrayEqual } from '../lib/utils.js';\n\nexport default class TagManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tags: this.props.tags,\n      tagInput: '',\n      activated: this.props.activated\n    };\n\n    this.handleTagInput = this.handleTagInput.bind(this);\n    this.handleAddTag = this.handleAddTag.bind(this);\n    this.handleRemoveTag = this.handleRemoveTag.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (!arrayEqual(nextProps.tags, prevState.tags) && !prevState.activated) {\n      return {tags: nextProps.tags};\n    }\n    return null;\n  }\n\n  handleTagInput(text) {\n    this.setState({tagInput: text});\n    if (text.length > 0) {\n      const last = text[text.length-1];\n      if (text[0] == '\"') {\n        // This is a quoted string.\n        if (text.length > 1 && last == '\"') {\n          this.handleAddTag(text.substring(1, text.length-1));\n        }\n      } else if (last == ',' || last == ' ' || last == ';' || last == '\"') {\n        // User entered ',', ' ' or ';'\n        this.handleAddTag(text.substring(0, text.length-1).trim());\n      }\n    }\n  }\n\n  handleAddTag(tag) {\n    if (tag.length > 0) {\n      const tags = this.state.tags.slice(0);\n      tags.push(tag);\n\n      this.setState({tags: tags, tagInput: ''});\n      if (this.props.onTagsChanged) {\n        this.props.onTagsChanged(tags);\n      }\n      return tags;\n    }\n    return this.state.tags;\n  }\n\n  handleRemoveTag(tag, index) {\n    const tags = this.state.tags.slice(0);\n    tags.splice(index, 1);\n    this.setState({tags: tags});\n    if (this.props.onTagsChanged) {\n      this.props.onTagsChanged(tags);\n    }\n  }\n\n  handleSubmit() {\n    // Add unprocessed input to tags, submit the list.\n    this.props.onSubmit(this.handleAddTag(this.state.tagInput.trim()));\n    this.setState({activated: false, tags: this.props.tags});\n  }\n\n  handleCancel() {\n    this.setState({activated: false, tagInput: '', tags: this.props.tags});\n    if (this.props.onCancel) {\n      this.props.onCancel();\n    }\n  }\n\n  render() {\n    let tags = [];\n    if (this.state.activated) {\n      this.state.tags.map((tag) => {\n        tags.push({user: tag, invalid: (tag.length < MIN_TAG_LENGTH)});\n      });\n    } else {\n      this.state.tags.map((tag) => {\n        tags.push(<span className=\"badge\" key={tags.length}>{tag}</span>);\n      });\n      if (tags.length == 0) {\n        tags = (\n          <i>\n            <FormattedMessage id=\"tags_not_found\" defaultMessage=\"No tags defined. Add some.\" description=\"\" />\n          </i>\n        );\n      }\n    }\n    return (\n      <div className=\"panel-form-column\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">{this.props.title}</label>\n        </div>\n        {this.state.activated ?\n        <div>\n          <FormattedMessage id=\"tags_editor_no_tags\" defaultMessage=\"Add some tags\"\n            description=\"Tag editor prompt when no tags are found.\">{\n            (add_tags_prompt) => <ChipInput\n              chips={tags}\n              avatarDisabled={true}\n              prompt={add_tags_prompt}\n              onEnter={this.handleAddTag}\n              onFocusLost={this.handleAddTag}\n              onCancel={this.handleCancel}\n              onChipRemoved={this.handleRemoveTag}\n              filterFunc={this.handleTagInput} />\n          }</FormattedMessage>\n          {this.props.onSubmit || this.props.onCancel ?\n            <div id=\"tag-manager-buttons\" className=\"dialog-buttons panel-form-row\">\n              <button className=\"outline\" onClick={this.handleCancel}>\n                <FormattedMessage id=\"button_cancel\" defautMessage=\"Cancel\" description=\"Rejection button [Cancel]\" />\n              </button>\n              <button className=\"blue\" onClick={this.handleSubmit}>\n                <FormattedMessage id=\"button_ok\" defautMessage=\"OK\" description=\"Confirmation button [OK]\" />\n              </button>\n            </div>\n          : null}\n        </div>\n        :\n        <div className=\"quoted\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.setState({activated: true});}}>\n            <i className=\"material-icons\">edit</i> &nbsp;<FormattedMessage id=\"title_manage_tags\" defaultMessage=\"Manage\"\n              description=\"Section title for the list of tags\" />\n          </a>\n          <>{tags}</>\n        </div>\n      }\n      </div>\n    );\n  }\n};\n","// InfoView: panel with topic/user info.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport ContactList from '../widgets/contact-list.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupManager from '../widgets/group-manager.jsx';\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport MenuCancel from '../widgets/menu-cancel.jsx';\nimport MoreButton from '../widgets/more-button.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\nimport TagManager from '../widgets/tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH, NO_ACCESS_MODE } from '../config.js';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, vcard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  requested: {\n    id: 'requested_permissions',\n    defaultMessage: 'Requested',\n    description: 'Title for permissions'\n  },\n  granted: {\n    id: 'granted_permissions',\n    defaultMessage: 'Granted',\n    description: 'Title for permissions'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n  other_user: {\n    id: 'label_other_user',\n    defaultMessage: 'Other',\n    description: 'Label for the other user when the user is unnamed'\n  },\n  clear_messages: {\n    id: 'action_clear_messages',\n    defaultMessage: 'Clear Messages',\n    description: 'Flat button [Clear Messages] (soft-delete messages)'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n  delete_messages: {\n    id: 'action_delete_messages',\n    defaultMessage: 'Clear Messages for All',\n    description: 'Flat button [Clear for All] (hard-delete all messages)'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  leave_chat: {\n    id: 'action_leave_chat',\n    defaultMessage: 'Leave Conversation',\n    description: 'Flat button [Leave Conversation]'\n  },\n  leave_chat_warning: {\n    id: 'leave_chat_warning',\n    defaultMessage: 'Are you sure you want to leave this conversation?',\n    description: 'Alert dialog warning when unsubscribing from a chat.'\n  },\n  block_contact: {\n    id: 'action_block_contact',\n    defaultMessage: \"Block Contact\",\n    description: \"Flat button [Block Contact]\"\n  },\n  block_contact_warning: {\n    id: 'block_contact_warning',\n    defaultMessage: 'Are you sure you want to block this contact?',\n    description: 'Alert dialog warning when blocking a contact.'\n  },\n  report_chat: {\n    id: 'action_report_chat',\n    defaultMessage: 'Report Conversation',\n    description: 'Flat button [Report Group]'\n  },\n  report_chat_warning: {\n    id: 'report_chat_warning',\n    defaultMessage: 'Are you sure you want to block and report this conversation?',\n    description: 'Alert dialog warning when reporting a conversation for abuse'\n  },\n});\n\nclass InfoView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      topic: null,\n      owner: false,\n      admin: false,\n      sharer: false,\n      deleter: false,\n      muted: false,\n      address: null,\n      groupTopic: undefined,\n      fullName: undefined,\n      avatar: null,\n      private: null,\n      selectedContact: null,\n      access: null,\n      modeGiven: null,\n      modeWant: null,\n      modeGiven2: null, // P2P topic, the other user mode given\n      modeWant2: null,  // P2P topic, the other user mode want\n      auth: null,\n      anon: null,\n      contactList: [],\n      tags: [],\n      showMemberPanel: false,\n      showPermissionEditorFor: undefined,\n      moreInfoExpanded: false,\n      previousMetaDesc: undefined,\n      previousSubsUpdated: undefined,\n      previousTagsUpdated: undefined\n    };\n\n    this.resetSubs = this.resetSubs.bind(this);\n    this.resetDesc = this.resetDesc.bind(this);\n    this.onMetaDesc = this.onMetaDesc.bind(this);\n    this.onSubsUpdated = this.onSubsUpdated.bind(this);\n    this.onTagsUpdated = this.onTagsUpdated.bind(this);\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\n    this.handlePrivateUpdate = this.handlePrivateUpdate.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleMuted = this.handleMuted.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handleShowAddMembers = this.handleShowAddMembers.bind(this);\n    this.handleHideAddMembers = this.handleHideAddMembers.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleDeleteMessages = this.handleDeleteMessages.bind(this);\n    this.handleLeave = this.handleLeave.bind(this);\n    this.handleBlock = this.handleBlock.bind(this);\n    this.handleReport = this.handleReport.bind(this);\n    this.handleMemberSelected = this.handleMemberSelected.bind(this);\n    this.handleMoreInfo = this.handleMoreInfo.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.handleContextMenu = this.handleContextMenu.bind(this);\n  }\n\n  // No need to separately handle component mount.\n  componentDidUpdate(props) {\n    const topic = this.props.tinode.getTopic(props.topic);\n    if (!topic) {\n      return;\n    }\n\n    if (this.onMetaDesc != topic.onMetaDesc) {\n      this.previousMetaDesc = topic.onMetaDesc;\n      topic.onMetaDesc = this.onMetaDesc;\n\n      this.previousSubsUpdated = topic.onSubsUpdated;\n      topic.onSubsUpdated = this.onSubsUpdated;\n\n      if (topic.getType() == 'grp') {\n        this.previousTagsUpdated = topic.onTagsUpdated;\n        topic.onTagsUpdated = this.onTagsUpdated;\n      } else {\n        this.previousTagsUpdated = undefined;\n      }\n    }\n\n    if (this.state.topic != props.topic) {\n      this.setState({topic: props.topic});\n      this.resetDesc(topic, props);\n      this.resetSubs(topic, props);\n    }\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.setState({topic: null});\n    topic.onMetaDesc = this.previousMetaDesc;\n    topic.onSubsUpdated = this.previousSubsUpdated;\n    topic.onTagsUpdated = this.previousTagsUpdated;\n  }\n\n  resetSubs(topic, props) {\n    const newState = {contactList: []};\n    if (topic.getType() == 'p2p') {\n      // Fetch the other party in the p2p conversation.\n      // Topic may not be ready yet, so check if user is found.\n      const user2 = topic.subscriber(props.topic);\n      if (user2) {\n        newState.modeGiven2 = user2.acs.getGiven();\n        newState.modeWant2 = user2.acs.getWant();\n      } else {\n        newState.modeGiven2 = NO_ACCESS_MODE;\n        newState.modeWant2 = NO_ACCESS_MODE;\n      }\n    } else {\n      topic.subscribers((sub) => {\n        newState.contactList.push(sub);\n      }, this);\n    }\n\n    this.setState(newState);\n  }\n\n  resetDesc(topic, props) {\n    const defacs = topic.getDefaultAccess() || {};\n    const acs = topic.getAccessMode();\n\n    this.setState({\n      owner: acs && acs.isOwner(),\n      admin: acs && acs.isAdmin(),\n      sharer: acs && acs.isSharer(),\n      deleter: acs && acs.isDeleter(),\n      muted: acs && acs.isMuted(),\n\n      fullName: topic.public ? topic.public.fn : undefined,\n      avatar: makeImageUrl(topic.public ? topic.public.photo : null),\n      private: topic.private ? topic.private.comment : null,\n      address: topic.name,\n      groupTopic: (topic.getType() == 'grp'),\n      showMemberPanel: false,\n      access: acs ? acs.getMode() : undefined,\n      modeGiven: acs ? acs.getGiven() : undefined,\n      modeWant: acs ? acs.getWant() : undefined,\n      auth: defacs.auth,\n      anon: defacs.anon\n    });\n\n    if (topic.getType() == 'grp' && acs && acs.isOwner()) {\n      // Requesting tags: owner is editing the topic.\n      topic.getMeta(topic.startMetaQuery().withTags().build());\n    }\n  }\n\n  onMetaDesc(desc) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetDesc(topic, this.props);\n\n    if (this.previousMetaDesc && this.previousMetaDesc != this.onMetaDesc) {\n      this.previousMetaDesc(desc);\n    }\n  }\n\n  onSubsUpdated(subs) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetSubs(topic, this.props);\n\n    if (this.previousSubsUpdated && this.previousSubsUpdated != this.onSubsUpdated) {\n      this.previousSubsUpdated(subs);\n    }\n  }\n\n  onTagsUpdated(tags) {\n    this.setState({tags: tags});\n\n    if (this.previousTagsUpdated && this.previousTagsUpdated != this.onTagsUpdated) {\n      this.previousTagsUpdated();\n    }\n  }\n\n  handleFullNameUpdate(fn) {\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.fullName !== fn) {\n      this.setState({fullName: fn});\n      this.props.onTopicDescUpdate(this.props.topic, vcard(fn, null), null);\n    }\n  }\n\n  handlePrivateUpdate(comment) {\n    comment = comment.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.private !== comment) {\n      this.setState({private: comment});\n      this.props.onTopicDescUpdate(this.props.topic, null, comment || Tinode.DEL_CHAR);\n    }\n  }\n\n  handleImageChanged(img) {\n    this.setState({avatar: img});\n    this.props.onTopicDescUpdate(this.props.topic, vcard(null, img || Tinode.DEL_CHAR), null);\n  }\n\n  handleMuted(ignored, checked) {\n    this.setState({muted: checked});\n    this.props.onChangePermissions(this.props.topic, checked ? '-P' : '+P');\n  }\n\n  handlePermissionsChanged(perm) {\n    switch (this.state.showPermissionEditorFor) {\n      case 'auth':\n        this.props.onTopicDescUpdate(this.props.topic, null, null, {auth: perm});\n        break;\n      case 'anon':\n        this.props.onTopicDescUpdate(this.props.topic, null, null, {anon: perm});\n        break;\n      case 'mode':\n      case 'want':\n        this.props.onChangePermissions(this.props.topic, perm);\n        break;\n      case 'given':\n        this.props.onChangePermissions(this.props.topic, perm, this.props.topic);\n        break;\n      case 'user':\n        this.props.onChangePermissions(this.props.topic, perm, this.state.userPermissionsEdited);\n        break;\n    }\n\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handleLaunchPermissionsEditor(which, uid) {\n    const {formatMessage} = this.props.intl;\n    let toEdit, toCompare, toSkip, titleEdit, titleCompare, userTitle, userAvatar;\n    switch (which) {\n      case 'mode':\n        toEdit = this.state.access;\n        break;\n      case 'want':\n        toEdit = this.state.modeWant;\n        toCompare = this.state.modeGiven;\n        toSkip = this.state.groupTopic ? 'O' : 'ASDO';\n        titleEdit = formatMessage(messages.requested);\n        titleCompare = formatMessage(messages.granted);\n        break;\n      case 'given':\n        toEdit = this.state.modeGiven2;\n        toCompare = this.state.modeWant2;\n        toSkip = this.state.groupTopic ? (this.state.owner ? '' : 'O') : 'ASDO';\n        titleEdit = formatMessage(messages.granted);\n        titleCompare = formatMessage(messages.requested);\n        break;\n      case 'auth':\n        toEdit = this.state.auth;\n        toSkip = 'O';\n        break;\n      case 'anon':\n        toEdit = this.state.anon;\n        toSkip = 'O';\n        break;\n      case 'user': {\n        let topic = this.props.tinode.getTopic(this.props.topic);\n        if (!topic) {\n          return;\n        }\n        var user = topic.subscriber(uid);\n        if (!user || !user.acs) {\n          return;\n        }\n        toEdit = user.acs.getGiven();\n        toCompare = user.acs.getWant();\n        toSkip = this.state.owner ? '' : 'O';\n        titleEdit = formatMessage(messages.granted);\n        titleCompare = formatMessage(messages.requested);\n        if (user.public) {\n          userTitle = user.public.fn;\n          userAvatar = user.public.photo;\n        }\n        break;\n      }\n      default:\n        console.log(\"Unknown permission editing mode '\" + which + \"'\");\n        break;\n    }\n    this.setState({\n      showPermissionEditorFor: which,\n      userPermissionsEdited: uid,\n      userPermissionsTitle: userTitle,\n      userPermissionsAvatar: userAvatar,\n      editedPermissions: toEdit,\n      immutablePermissions: toCompare,\n      editedPermissionsTitle: titleEdit,\n      immutablePermissionsTitle: titleCompare,\n      editedPermissionsSkipped: toSkip,\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handleShowAddMembers(e) {\n    e.preventDefault();\n    this.props.onInitFind();\n    this.setState({showMemberPanel: true});\n  }\n\n  handleHideAddMembers() {\n    this.setState({showMemberPanel: false});\n  }\n\n  handleMemberUpdateRequest(members, added, removed) {\n    this.props.onMemberUpdateRequest(this.props.topic, added, removed);\n    this.setState({showMemberPanel: false});\n  }\n\n  handleDeleteMessages(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(this.state.deleter ? messages.delete_messages : messages.clear_messages), // title\n      formatMessage(this.state.deleter ? messages.delete_messages_warning : messages.clear_messages_warning), // content\n      (() => { this.props.onDeleteMessages(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleLeave(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.leave_chat), // title\n      formatMessage(messages.leave_chat_warning), // content\n      (() => { this.props.onLeaveTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleBlock(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.block_contact), // title\n      formatMessage(messages.block_contact_warning), // content\n      (() => { this.props.onBlockTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleReport(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.report_chat), // title\n      formatMessage(messages.report_chat_warning), // content\n      (() => { this.props.onReportTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleMemberSelected(uid) {\n    this.setState({selectedContact: uid});\n  }\n\n  handleMoreInfo(open) {\n    this.setState({moreInfoExpanded: open});\n  }\n\n  handleTagsUpdated(tags) {\n    if (!arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      this.props.onTopicTagsUpdate(this.props.topic, tags);\n    }\n  }\n\n  handleContextMenu(params) {\n    const {formatMessage} = this.props.intl;\n    const instance = this;\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    const user = topic.subscriber(params.topicName);\n    if (!user || !user.acs) {\n      return;\n    }\n\n    const menuItems = [\n      {title: formatMessage(messages.edit_permissions), handler: function() {\n        instance.handleLaunchPermissionsEditor('user', params.topicName);\n      }},\n      'member_delete',\n      user.acs.isMuted() ? 'member_unmute' : 'member_mute',\n      user.acs.isJoiner() ? 'member_block' : 'member_unblock'\n    ];\n    this.props.showContextMenu({\n      topicName: this.props.topic,\n      x: params.x,\n      y: params.y,\n      user: params.topicName}, menuItems);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n\n    return (\n      <div id=\"info-view\">\n        <div className=\"caption-panel\" id=\"info-caption-panel\">\n          <div className=\"panel-title\" id=\"info-title\">\n            <FormattedMessage id=\"title_info\" defaultMessage=\"Info\" description=\"Title for InfoView\" />\n          </div>\n          <div>\n            <MenuCancel onCancel={this.props.onCancel} />\n          </div>\n        </div>\n        {this.props.displayMobile ?\n          <ErrorPanel\n            level={this.props.errorLevel}\n            text={this.props.errorText}\n            onClearError={this.props.onError} /> : null}\n        {this.state.showMemberPanel ?\n          <GroupManager\n            members={this.state.contactList}\n            requiredMember={this.props.myUserId}\n            keepInitialMembers={!this.state.admin && !this.state.owner}\n            myUserId={this.props.myUserId}\n            contacts={this.props.searchableContacts}\n            onCancel={this.handleHideAddMembers}\n            onSubmit={this.handleMemberUpdateRequest} />\n          :\n        this.state.showPermissionEditorFor ?\n          <PermissionsEditor\n            mode={this.state.editedPermissions}\n            compare={this.state.immutablePermissions}\n            skip={this.state.editedPermissionsSkipped}\n            modeTitle={this.state.editedPermissionsTitle}\n            compareTitle={this.state.immutablePermissionsTitle}\n            userTitle={this.state.userPermissionsTitle}\n            item={this.state.userPermissionsEdited}\n            userAvatar={this.state.userPermissionsAvatar}\n            onSubmit={this.handlePermissionsChanged}\n            onCancel={this.handleHidePermissionsEditor}\n            />\n          :\n          <div id=\"info-view-content\" className=\"scrollable-panel\">\n            <div className=\"panel-form-row\">\n              <div className=\"panel-form-column\">\n                <div><label className=\"small\">\n                  <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                    description=\"Label for editing topic name\" />\n                </label></div>\n                <div><InPlaceEdit\n                    placeholder={this.state.groupTopic ? \"Group name\" : <i>Unknown</i>}\n                    readOnly={!this.state.owner}\n                    value={this.state.fullName}\n                    required={true}\n                    onFinished={this.handleFullNameUpdate} /></div>\n                <div>\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                      description=\"Label for editing 'private'\" />\n                  </label>\n                </div>\n                <div>\n                  <FormattedMessage id=\"private_editing_placeholder\"\n                    defaultMessage=\"Visible to you only\"\n                    description=\"Placeholder for editing 'private'\">{\n                    (private_placeholder) => <InPlaceEdit\n                      placeholder={private_placeholder}\n                      value={this.state.private}\n                      onFinished={this.handlePrivateUpdate} />\n                  }</FormattedMessage>\n                </div>\n              </div>\n              <AvatarUpload\n                avatar={this.state.avatar}\n                readOnly={!this.state.owner}\n                uid={this.props.topic}\n                title={this.state.fullName}\n                onImageChanged={this.handleImageChanged}\n                onError={this.props.onError} />\n            </div>\n            <div className=\"hr\" />\n            <div className=\"panel-form-column\">\n              <div className=\"panel-form-row\">\n                <label>\n                  <FormattedMessage id=\"label_muting_topic\" defaultMessage=\"Muted:\"\n                    description=\"Label for Muting/unmuting the topic\" />\n                </label>\n                <CheckBox name=\"P\" checked={this.state.muted}\n                  onChange={this.handleMuted} />\n              </div>\n              <FormattedMessage id=\"action_more\" defaultMessage=\"More\"\n                description=\"Action for showing more content\">{\n                (more) => <MoreButton\n                  title={more}\n                  open={this.state.moreInfoExpanded}\n                  onToggle={this.handleMoreInfo} />\n              }</FormattedMessage>\n              {this.state.moreInfoExpanded ?\n                <div className=\"panel-form-column\">\n                  <div className=\"panel-form-row\">\n                    <label><FormattedMessage id=\"label_user_id\" /></label>\n                    <tt>{this.state.address}</tt>\n                  </div>\n                  {this.state.groupTopic ?\n                    <div className=\"panel-form-row\">\n                      <label>\n                        <FormattedMessage id=\"label_your_permissions\" defaultMessage=\"Your permissions:\"\n                          description=\"Label for current user permissions\" />\n                      </label>\n                      <tt className=\"clickable\"\n                        onClick={this.handleLaunchPermissionsEditor.bind(this, 'want')}>\n                        {this.state.access}\n                      </tt>\n                    </div>\n                    :\n                    <div>\n                      <div>\n                        <label className=\"small\">\n                          <FormattedMessage id=\"label_permissions\" defaultMessage=\"Permissions:\"\n                            description=\"Section title\" />\n                        </label>\n                      </div>\n                      <div className=\"quoted\">\n                        <div>\n                          <FormattedMessage id=\"label_you\" defaultMessage=\"You:\"\n                            description=\"Label for the current user\" /> &nbsp;<tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'want')}>\n                          {this.state.access}\n                        </tt></div>\n                        <div>{this.state.fullName ? this.state.fullName : formatMessage(messages.other_user)}:\n                          &nbsp;<tt className=\"clickable\" onClick={this.handleLaunchPermissionsEditor.bind(this, 'given')}>\n                          {this.state.modeGiven2}\n                          </tt>\n                        </div>\n                      </div>\n                    </div>\n                  }\n                  {this.state.sharer && (this.state.auth || this.state.anon) ?\n                  <div>\n                    <div>\n                      <label className=\"small\">\n                        <FormattedMessage id=\"label_default_access\" defaultMessage=\"Default access mode:\"\n                          description=\"Section title\" />\n                      </label>\n                    </div>\n                    <div className=\"quoted\">\n                      <div>Auth: {this.state.admin ?\n                        <tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>\n                          {this.state.auth}\n                        </tt>\n                        :\n                        <tt>{this.state.auth}</tt>\n                      }\n                      </div>\n                      <div>Anon: {this.state.admin ?\n                        <tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>\n                          {this.state.anon}\n                        </tt>\n                        :\n                        <tt>{this.state.anon}</tt>\n                      }\n                      </div>\n                    </div>\n                  </div>\n                  :\n                  null\n                }\n                </div>\n              :\n              null\n              }\n            </div>\n            <div className=\"hr\" />\n            {this.state.owner ?\n              <>\n                <FormattedMessage id=\"title_tag_manager\">{\n                  (tags) => <TagManager\n                    title={tags}\n                    tags={this.state.tags}\n                    activated={false}\n                    onSubmit={this.handleTagsUpdated} />\n                }</FormattedMessage>\n                <div className=\"hr\" />\n              </>\n              :\n              null\n            }\n            <div className=\"panel-form-column\">\n              <a href=\"#\" className=\"flat-button\" onClick={this.handleDeleteMessages}>\n                <i className=\"material-icons\">delete_outline</i> &nbsp;{\n                  formatMessage(this.state.deleter ? messages.delete_messages : messages.clear_messages)\n                }\n              </a>\n              <a href=\"#\" className=\"red flat-button\" onClick={this.handleLeave}>\n                <i className=\"material-icons\">exit_to_app</i> &nbsp;{formatMessage(messages.leave_chat)}\n              </a>\n              {!this.state.groupTopic ?\n                <a href=\"#\" className=\"red flat-button\" onClick={this.handleBlock}>\n                  <i className=\"material-icons\">block</i> &nbsp;{formatMessage(messages.block_contact)}\n                </a>\n                :\n                null\n              }\n              {!this.state.owner ?\n                <a href=\"#\" className=\"red flat-button\" onClick={this.handleReport}>\n                  <i className=\"material-icons\">report</i> &nbsp;{formatMessage(messages.report_chat)}\n                </a>\n                :\n                null\n              }\n            </div>\n            {this.state.groupTopic ?\n              <>\n                <div className=\"hr\" />\n                <div className=\"panel-form-column\">\n                  <div className=\"panel-form-row\">\n                    <label className=\"small\">\n                      <FormattedMessage id=\"label_group_members\" defaultMessage=\"Group members:\"\n                        description=\"Section title or label\" />\n                    </label>\n                  </div>\n                  <div className=\"panel-form-row\">\n                    {this.state.sharer ?\n                      <a href=\"#\" className=\"flat-button\" onClick={this.handleShowAddMembers}>\n                        <i className=\"material-icons\">person_add</i> &nbsp;<FormattedMessage id=\"button_add_members\"\n                          defaultMessage=\"Add members\" description=\"Flat button [Add members] (to topic)\" />\n                      </a>\n                      : null}\n                  </div>\n                  <FormattedMessage id=\"group_has_no_members\" defaultMessage=\"No members\"\n                    description=\"Shown in place of group members\">{\n                    (no_members) => <ContactList\n                      contacts={this.state.contactList}\n                      myUserId={this.props.myUserId}\n                      emptyListMessage={no_members}\n                      topicSelected={this.state.selectedContact}\n                      showOnline={false}\n                      showUnread={false}\n                      showMode={true}\n                      noScroll={true}\n                      onTopicSelected={this.handleMemberSelected}\n                      showContextMenu={this.state.admin ? this.handleContextMenu : false}\n                    />\n                  }</FormattedMessage>\n                </div>\n              </>\n              :\n              null\n            }\n          </div>\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(InfoView);\n","// File uload/download progress indicator with a cancel inside.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class FileProgress extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"uploader\">\n        <div><span style={{width: (this.props.progress * 100) + \"%\"}}></span></div>\n        {this.props.progress < 0.999 ?\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n            <i className=\"material-icons\">close</i> <FormattedMessage id=\"action_cancel\"\n              defaultMessage=\"cancel\" description=\"Call to action [cancel]\" />\n          </a>\n          :\n          <FormattedMessage id=\"upload_finishing\" defaultMessage=\"finishing...\"\n            description=\"Notification that upload is finishing\" />\n        }\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\nimport { bytesToHumanSize } from '../lib/strformat.js';\nimport { isUrlRelative, sanitizeUrl } from '../lib/utils.js';\n\nexport default class Attachment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      downloader: null,\n      progress: 0\n    };\n\n    this.downloadFile = this.downloadFile.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  downloadFile(url, filename, mimetype) {\n    var downloader = this.props.tinode.getLargeFileHelper();\n    this.setState({downloader: downloader});\n    downloader.download(url, filename, mimetype, (loaded) => {\n      this.setState({progress: loaded / this.props.size});\n    }).then(() => {\n      this.setState({downloader: null, progress: 0});\n    }).catch((err) => {\n      if (err) {\n        this.props.onError(\"Error downloading file: \" + err.message, 'err');\n      }\n      this.setState({downloader: null, progress: 0});\n    });\n  }\n\n  handleCancel() {\n    if (this.props.uploader) {\n      this.props.onCancelUpload();\n    } else if (this.state.downloader) {\n      this.state.downloader.cancel();\n    }\n  }\n\n  render() {\n    let filename = this.props.filename || 'file_attachment';\n    if (filename.length > 36) {\n      filename = filename.substr(0, 16) + '...' + filename.substr(-16);\n    }\n    let size = this.props.size > 0 ?\n      <span className=\"small gray\">({bytesToHumanSize(this.props.size)})</span> :\n      null;\n\n    // Detect if the download URL is relative or absolute.\n    // If the URL is relative use LargeFileHelper to attach authentication\n    // credentials to the request.\n    let url, helperFunc;\n    if (!this.props.uploader && !this.state.downloader && isUrlRelative(this.props.downloadUrl)) {\n      // Relative URL. Use download helper.\n      url = '#';\n      helperFunc = (e) => {\n        e.preventDefault();\n        this.downloadFile(this.props.downloadUrl, this.props.filename, this.props.mimetype);\n      };\n    } else {\n      url = sanitizeUrl(this.props.downloadUrl) || 'about:blank';\n      helperFunc = null;\n    }\n    return (\n      <div className=\"attachment\">\n        <div><i className=\"material-icons big gray\">insert_drive_file</i></div>\n        <div className=\"flex-column\">\n          <div>{filename} {size}</div>\n          {this.props.uploader || this.state.downloader ?\n            <FileProgress progress={this.props.uploader ? this.props.progress : this.state.progress}\n              onCancel={this.handleCancel} />\n            :\n            <div><a href={url} download={this.props.filename} onClick={helperFunc} >\n              <i className=\"material-icons\">file_download</i> <FormattedMessage id=\"save_attachment\"\n                defaultMessage=\"save\" description=\"Call to save an attachment\" />\n            </a></div>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n","// Received/read indicator.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { shortDateFormat } from '../lib/strformat.js';\n\nconst messages = defineMessages({\n  'sending': {\n    'id': 'message_sending',\n    'defaultMessage': 'sending...',\n    'description': 'Message being sent, in place of time stamp'\n  },\n  'failed': {\n    'id': 'message_sending_failed',\n    'defaultMessage': 'failed',\n    'description': 'Failed to send message, in place of time stamp'\n  }\n});\n\nclass ReceivedMarker extends React.PureComponent {\n  render() {\n    const {formatMessage} = this.props.intl;\n    let timestamp;\n    if (this.props.received <= Tinode.MESSAGE_STATUS_SENDING) {\n      timestamp = formatMessage(messages.sending);\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_FAILED) {\n      timestamp = formatMessage(messages.failed);\n    } else {\n      timestamp = shortDateFormat(this.props.timestamp, this.props.intl.locale);\n    }\n\n    let marker = null;\n    if (this.props.received <= Tinode.MESSAGE_STATUS_SENDING) {\n      marker = (<i className=\"material-icons small\">access_time</i>); // watch face\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_FAILED) {\n      marker = (<i className=\"material-icons small amber\">warning</i>); // yellow icon /!\\\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_SENT) {\n      marker = (<i className=\"material-icons small\">done</i>); // checkmark\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_RECEIVED) {\n      marker = (<i className=\"material-icons small\">done_all</i>); // double checkmark\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_READ) {\n      marker = (<i className=\"material-icons small blue\">done_all</i>); // blue double checkmark\n    }\n\n    return (\n      <span className=\"timestamp\">\n        {timestamp}{'\\u00a0'}{marker}\n      </span>\n    );\n  }\n};\n\nexport default injectIntl(ReceivedMarker);\n","// Single message, sent or received.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Drafty } from 'tinode-sdk'\n\nimport Attachment from './attachment.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\nimport { sanitizeImageUrl, sanitizeUrl } from '../lib/utils.js';\n\nexport default class ChatMessage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      progress: 0\n    };\n\n    if (props.uploader) {\n      props.uploader.onProgress = this.handleProgress.bind(this);\n    }\n\n    this.handleImagePreview = this.handleImagePreview.bind(this);\n    this.handleFormButtonClick = this.handleFormButtonClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n  }\n\n  handleImagePreview(e) {\n    e.preventDefault();\n    this.props.onImagePreview({\n      url: e.target.src,\n      filename: e.target.title,\n      width: e.target.dataset.width,\n      height: e.target.dataset.height,\n      size: e.target.dataset.size,\n      type: e.target.dataset.mime\n    });\n  }\n\n  handleFormButtonClick(e) {\n    e.preventDefault();\n    const data = {\n      seq: this.props.seq\n    };\n    data.resp = {};\n    if (e.target.dataset.name) {\n      data.resp[e.target.dataset.name] = e.target.dataset.val ? e.target.dataset.val :\n        e.target.dataset.val === undefined ? 1 : '' + e.target.dataset.val;\n    }\n    if (e.target.dataset.act == 'url') {\n      data.ref = sanitizeUrl(e.target.dataset.ref) || 'about:blank';\n    }\n    const text = e.target.dataset.title || 'unknown';\n    this.props.onFormResponse(e.target.dataset.act, text, data);\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const menuItems = this.props.received == Tinode.MESSAGE_STATUS_FAILED ? ['menu_item_send_retry'] : [];\n    this.props.showContextMenu({ seq: this.props.seq, content: this.props.content,\n                                 y: e.pageY, x: e.pageX }, menuItems);\n  }\n\n  handleProgress(ratio) {\n    this.setState({progress: ratio});\n  }\n\n  handleCancelUpload() {\n    this.props.uploader.cancel();\n  }\n\n  render() {\n    const sideClass = this.props.deleted ? 'center' :\n      (this.props.sequence + ' ' + (this.props.response ? 'left' : 'right'));\n    const bubbleClass = (this.props.sequence == 'single' || this.props.sequence == 'last') ? 'bubble tip' : 'bubble';\n    const avatar = this.props.deleted ? null : (this.props.userAvatar || true);\n    const fullDisplay = (this.props.userFrom && this.props.response &&\n      (this.props.sequence == 'single' || this.props.sequence == 'last'));\n\n    let content = this.props.content;\n    const attachments = [];\n    if (this.props.mimeType == Drafty.getContentType()) {\n      Drafty.attachments(content, function(att, i) {\n        if (att.mime == 'application/json') {\n          // Don't show json objects as attachments.\n          // They are not meant for users.\n          return;\n        }\n        attachments.push(<Attachment\n          tinode={this.props.tinode}\n          downloadUrl={Drafty.getDownloadUrl(att)}\n          filename={att.name} uploader={Drafty.isUploading(att)}\n          mimetype={att.mime} size={Drafty.getEntitySize(att)}\n          progress={this.state.progress}\n          onCancelUpload={this.handleCancelUpload}\n          onError={this.props.onError}\n          key={i} />);\n      }, this);\n      content = React.createElement('span', null, Drafty.format(content, draftyFormatter, this));\n    } else if (this.props.deleted) {\n      // Message represents a range of deleted messages.\n      content = <><i className=\"material-icons gray\">block</i> <i className=\"gray\">\n        <FormattedMessage id=\"deleted_content\"\n          defaultMessage=\"content deleted\" description=\"Shown when messages are deleted\" />\n      </i></>\n    } else if (typeof content != 'string') {\n      content = <><i className=\"material-icons gray\">error_outline</i> <i className=\"gray\">\n        <FormattedMessage id=\"invalid_content\"\n          defaultMessage=\"invalid content\" description=\"Shown when message is unreadable\" />\n      </i></>\n    }\n\n    return (\n      <li className={sideClass}>\n        {this.props.userFrom && this.props.response ?\n          <div className=\"avatar-box\">\n            {fullDisplay ?\n              <LetterTile\n                topic={this.props.userFrom}\n                title={this.props.userName}\n                avatar={avatar} /> :\n              null}\n          </div> :\n          null}\n        <div>\n          <div className={bubbleClass}>\n            <div className=\"message-content\">\n              {content}\n              {attachments}\n              {this.props.timestamp ?\n                <ReceivedMarker\n                  timestamp={this.props.timestamp}\n                  received={this.props.received} />\n                : null}\n            </div>\n            {this.props.deleted ?\n              null :\n              <span className=\"menuTrigger\">\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">expand_more</i>\n                </a>\n              </span>\n            }\n          </div>\n          {fullDisplay ?\n            <div className=\"author\">\n              <FormattedMessage id=\"user_not_found\" defaultMessage=\"Not found\"\n                description=\"In place of a user's full name when the user is not found.\">{\n                    (notFound) => {return this.props.userName || <i>{notFound}</i>}\n              }</FormattedMessage>\n            </div>\n            : null\n          }\n        </div>\n      </li>\n    );\n  }\n};\n\n// Convert Drafty object to a tree of React elements.\nimport { BROKEN_IMAGE_SIZE, REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\n\nfunction draftyFormatter(style, data, values, key) {\n  let el = Drafty.tagName(style);\n  if (el) {\n    let attr = Drafty.attrValue(style, data) || {};\n    attr.key = key;\n    switch (style) {\n      case 'IM':\n        // Additional processing for images\n        if (data) {\n          attr.className = 'inline-image';\n          let dim = fitImageSize(data.width, data.height,\n            Math.min(this.props.viewportWidth - REM_SIZE * 4, REM_SIZE * 36), REM_SIZE * 24, false);\n          dim = dim || {dstWidth: BROKEN_IMAGE_SIZE, dstHeight: BROKEN_IMAGE_SIZE};\n          attr.style = { width: dim.dstWidth + 'px', height: dim.dstHeight + 'px' };\n          attr.src = sanitizeImageUrl(attr.src);\n          if (attr.src) {\n            attr.onClick = this.handleImagePreview;\n            attr.className += ' image-clickable';\n          } else {\n            attr.src = 'img/broken_image.png';\n          }\n        }\n        break;\n      case 'BN':\n        // Button\n        attr.onClick = this.handleFormButtonClick;\n        let inner = React.Children.map(values, (child) => {\n          return typeof child == 'string' ? child : undefined;\n        });\n        if (!inner || inner.length == 0) {\n          inner = [attr.name]\n        }\n        // Get text which will be sent back when the button is clicked.\n        attr['data-title'] = inner.join('');\n        break;\n      case 'FM':\n        // Form\n        attr.className = 'bot-form';\n        break;\n      case 'FE':\n        // Form element formatting is dependent on element content.\n        break;\n    }\n    return React.createElement(el, attr, values);\n  } else {\n    return values;\n  }\n};\n","// Send message form.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport { KEYPRESS_DELAY } from '../config.js';\nimport { filePasted } from '../lib/blob-helpers.js';\n\nconst messages = defineMessages({\n  'messaging_disabled': {\n    id: 'messaging_disabled_prompt',\n    defaultMessage: 'Messaging disabled',\n    description: 'Prompt in SendMessage in read-only topic'\n  },\n  'type_new_message': {\n    id: 'new_message_prompt',\n    defaultMessage: 'New message',\n    description: 'Prompt in send message field'\n  },\n  'add_image_caption': {\n    id: 'image_caption_prompt',\n    defaultMessage: 'Image caption',\n    description: 'Prompt in SendMessage for attached image'\n  },\n  'file_attachment_too_large': {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  },\n  'cannot_initiate_upload': {\n    id: 'cannot_initiate_file_upload',\n    defaultMessage: 'Cannot initiate file upload.',\n    description: 'Generic error messagewhen attachment fails'\n  },\n});\n\nclass SendMessage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      message: '',\n      // Make initial keypress time as if it happened 5001 milliseconds in the past.\n      keypressTimestamp: new Date().getTime() - KEYPRESS_DELAY - 1\n    };\n\n    this.handlePasteEvent = this.handlePasteEvent.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleSend = this.handleSend.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleMessageTyping = this.handleMessageTyping.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.addEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.removeEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.messageEditArea) {\n      this.messageEditArea.focus();\n    }\n  }\n\n  handlePasteEvent(e) {\n    if (this.props.disabled) {\n      return;\n    }\n    // FIXME: handle large files too.\n    if (filePasted(e,\n      (bits, mime, width, height, fname) => {\n        this.props.onAttachImage(mime, bits, width, height, fname);\n      },\n      (mime, bits, fname) => {\n        this.props.onAttachFile(mime, bits, fname);\n      },\n      this.props.onError)) {\n\n      // If a file was pasted, don't paste base64 data into input field.\n      e.preventDefault();\n    }\n  }\n\n  handleAttachImage(e) {\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachImage(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleAttachFile(e) {\n    const {formatMessage} = this.props.intl;\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachFile(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleSend(e) {\n    e.preventDefault();\n    const message = this.state.message.trim();\n    if (message || this.props.acceptBlank || this.props.noInput) {\n      this.props.onSendMessage(message);\n      this.setState({message: ''});\n    }\n  }\n\n  /* Send on Enter key */\n  handleKeyPress(e) {\n    // Remove this if you don't want Enter to trigger send\n    if (e.key === 'Enter') {\n      // Have Shift-Enter insert a line break instead\n      if (!e.shiftKey) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.handleSend(e);\n      }\n    }\n  }\n\n  handleMessageTyping(e) {\n    const newState = {message: e.target.value};\n    if (this.props.onKeyPress) {\n      const now = new Date().getTime();\n      if (now - this.state.keypressTimestamp > KEYPRESS_DELAY) {\n        this.props.onKeyPress();\n        newState.keypressTimestamp = now;\n      }\n    }\n    this.setState(newState);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const prompt = this.props.disabled ?\n      formatMessage(messages.messaging_disabled) :\n      (this.props.messagePrompt ?\n        formatMessage(messages[this.props.messagePrompt]) :\n        formatMessage(messages.type_new_message));\n    return (\n      <div id=\"send-message-panel\">\n        {this.props.onAttachFile ?\n          (this.props.disabled ?\n            <>\n              <i className=\"material-icons disabled\">photo</i>\n              <i className=\"material-icons disabled\">attach_file</i>\n            </>\n            :\n            <>\n              <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachImage.click();}} title=\"Add image\">\n                <i className=\"material-icons secondary\">photo</i>\n              </a>\n              <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachFile.click();}} title=\"Attach file\">\n                <i className=\"material-icons secondary\">attach_file</i>\n              </a>\n            </>)\n          :\n          null}\n        {this.props.noInput ?\n          <div className=\"hr thin\" /> :\n          <textarea id=\"sendMessage\" placeholder={prompt}\n            disabled={this.props.disabled} value={this.state.message}\n            onChange={this.handleMessageTyping} onKeyPress={this.handleKeyPress}\n            ref={(ref) => {this.messageEditArea = ref;}}\n            autoFocus />}\n        {this.props.disabled ?\n          <i className=\"material-icons disabled\">send</i> :\n          <a href=\"#\" onClick={this.handleSend} title=\"Send\">\n            <i className=\"material-icons\">send</i>\n          </a>}\n        <input type=\"file\" ref={(ref) => {this.attachFile = ref;}}\n          onChange={this.handleAttachFile} style={{display: 'none'}} />\n        <input type=\"file\" ref={(ref) => {this.attachImage = ref;}} accept=\"image/*\"\n          onChange={this.handleAttachImage} style={{display: 'none'}} />\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SendMessage);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { bytesToHumanSize } from '../lib/strformat.js';\n\n// Get material icon name from mime type.\nfunction iconFromMime(mime) {\n  // If more icons become available in material icons, add them to this mime-to-icon mapping.\n  const mimeToIcon = {default: 'insert_drive_file', image: 'image', text: 'description', video: 'theaters'};\n\n  return mimeToIcon[mime] || mimeToIcon[(mime || '').split('/')[0]] || mimeToIcon['default'];\n}\n\nexport default class DocPreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleSendDoc = this.handleSendDoc.bind(this);\n  }\n\n  handleSendDoc(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(this.props.content.file);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          <span>{this.props.content.filename}</span>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\">\n          <div className=\"flex-column narrow\">\n            <i className=\"material-icons gray\">{iconFromMime(this.props.content.type)}</i>\n            <div><b><FormattedMessage id=\"label_content_type\" /></b> {this.props.content.type || 'application/octet-stream'}</div>\n            <div><b><FormattedMessage id=\"label_size\" /></b> {bytesToHumanSize(this.props.content.size)}</div>\n          </div>\n        </div>\n        <SendMessage\n          noInput={true}\n          onSendMessage={this.handleSendDoc}\n          onError={this.props.onError} />\n      </div>\n    );\n  }\n};\n","// GroupSubs: a list of group subscribers currently online.\n// Show in the topic title bar\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { MAX_ONLINE_IN_TOPIC } from '../config.js'\n\nimport LetterTile from './letter-tile.jsx';\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class GroupSubs extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const usersOnline = [];\n    const totalCount = (this.props.subscribers || []).length;\n    const countToShow = Math.min(MAX_ONLINE_IN_TOPIC, totalCount);\n\n    (this.props.subscribers || []).some((sub) => {\n      usersOnline.push(\n        <div className=\"avatar-box\" key={sub.user}>\n          <LetterTile\n            topic={sub.user}\n            avatar={makeImageUrl(sub.public ? sub.public.photo : null) || true}\n            title={sub.public ? sub.public.fn : null} />\n        </div>\n      );\n      return usersOnline.length == countToShow;\n    });\n\n    return (\n      <div id=\"topic-users\">{usersOnline} {totalCount > countToShow ?\n        <span>\n          <FormattedMessage id=\"more_online_members\" defaultMessage=\"+{overflow} more\"\n              description=\"Shown in MessagesView title bar when the number of online subscribers exceeds MAX_ONLINE_IN_TOPIC\"\n              values={{ overflow: (totalCount - countToShow) }} />\n        </span> : null}\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\nimport { bytesToHumanSize } from '../lib/strformat.js';\n\nexport default class ImagePreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      width: 0,\n      height: 0\n    };\n\n    this.handleSendImage = this.handleSendImage.bind(this);\n  }\n\n  assignWidth(node) {\n    if (node && !this.state.width) {\n      const bounds = node.getBoundingClientRect();\n      this.setState({\n        width: bounds.width | 0,\n        height: bounds.height | 0\n      });\n    }\n  }\n\n  handleSendImage(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(caption, this.props.content.type, this.props.content.bits,\n      this.props.content.width, this.props.content.height, this.props.content.filename);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n\n    const dim = fitImageSize(this.props.content.width, this.props.content.height,\n      this.state.width, this.state.height, false);\n    const size = dim ? { width: dim.dstWidth + 'px', height: dim.dstHeight + 'px' } :\n      ((this.props.content.width > this.props.content.height) ? {width: '100%'} : {height: '100%'});\n    size.maxWidth = '100%';\n    size.maxHeight = '100%';\n\n    let filename = this.props.content.filename;\n    // Averate font aspect ratio is ~0.5; File name takes 1/3 of the viewport width.\n    const maxlength = Math.max(((this.state.width / REM_SIZE / 1.5) | 0) - 2, 12);\n    if (filename.length > maxlength) {\n      filename = filename.slice(0, maxlength/2 - 1) + '…' + filename.slice(1 - maxlength/2);\n    }\n    const width = this.props.content.width || '-';\n    const height = this.props.content.height || '-';\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          {!this.props.onSendMessage ?\n            <a href={this.props.content.url} download={this.props.content.filename}>\n              <i className=\"material-icons\">file_download</i> <FormattedMessage\n                id=\"download_action\" defaultMessage=\"download\" description=\"Call to action [download]\" />\n            </a>\n            :\n            <span>{this.props.content.filename}</span>\n          }\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\" ref={(node) => this.assignWidth(node)}>\n          <img src={this.props.content.url} style={size} />\n        </div>\n        {this.props.onSendMessage ?\n          <SendMessage\n            messagePrompt=\"add_image_caption\"\n            acceptBlank={true}\n            onSendMessage={this.handleSendImage}\n            onError={this.props.onError} />\n          :\n          <div id=\"image-preview-footer\">\n            <div>\n              <div><b><FormattedMessage id=\"label_file_name\" defaultMessage=\"File name:\"\n                description=\"Label for a file name\" /></b></div>\n              <div><span title={this.props.content.filename}>{filename ? filename : '-'}</span></div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n                description=\"Label for file content type (mime)\" /></b></div>\n              <div>{this.props.content.type}</div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n                description=\"Label for file size\" /></b></div>\n              <div>{width} &times; {height} px; {bytesToHumanSize(this.props.content.size)}</div>\n            </div>\n          </div>}\n      </div>\n    );\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Invitation extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleButtonAction = this.handleButtonAction.bind(this);\n  }\n\n  handleButtonAction(evt, data) {\n    evt.preventDefault();\n    this.props.onAction(data);\n  }\n\n  render() {\n    return (\n      <div className=\"accept-invite-panel\">\n        <div className=\"title\">\n          <FormattedMessage id=\"chat_invitation\"\n            defaultMessage=\"You are invited to start a new chat. What would you like to do?\"\n            description=\"New chat invitation message: [Accept] [Ignore] [Block].\" />\n        </div>\n        <div className=\"footer\">\n          <button className=\"blue\" onClick={event => { this.handleButtonAction(event, \"accept\"); }}>\n            <FormattedMessage id=\"chat_invitation_accept\"\n              defaultMessage=\"Accept\" description=\"Action [Accept] for chat invitation.\" />\n          </button>\n          <button className=\"white\" onClick={event => { this.handleButtonAction(event, \"delete\"); }}>\n            <FormattedMessage id=\"chat_invitation_ignore\"\n              defaultMessage=\"Ignore\" description=\"Action [Ignore] for chat invitation.\" />\n          </button>\n          <button className=\"white\" onClick={event => { this.handleButtonAction(event, \"block\"); }}>\n            <FormattedMessage id=\"chat_invitation_block\"\n              defaultMessage=\"Block\" description=\"Action [Block] for chat invitation.\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nexport default class LoadSpinner extends React.PureComponent {\n  render() {\n    return (this.props.show ?\n      <div className=\"load-spinner-box\"><div className=\"loader-spinner\"></div></div> : null);\n  }\n}\n","/* This is just a static page to display when no conversation is selected. */\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME } from '../config.js';\n\nexport default class LogoView extends React.PureComponent {\n  render() {\n    var version = APP_NAME + ' (' + Tinode.getLibrary() + ')';\n    return (\n      <div id=\"dummy-view\" className={this.props.hideSelf ? 'nodisplay' : null}>\n        <div>\n          <a href=\"https://github.com/tinode/chat/\">\n            <img id=\"logo\" alt=\"logo\" src=\"img/logo.svg\" />\n            <h2>Tinode Web</h2>\n          </a>\n          <p><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\" /> {version}</p>\n          <p><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\" /> {this.props.serverVersion} ({this.props.serverAddress})</p>\n        </div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\nconst Drafty = Tinode.Drafty;\n\nimport ChatMessage from '../widgets/chat-message.jsx';\nimport DocPreview from '../widgets/doc-preview.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupSubs from '../widgets/group-subs.jsx';\nimport ImagePreview from '../widgets/image-preview.jsx';\nimport Invitation from '../widgets/Invitation.jsx';\nimport LetterTile from '../widgets/letter-tile.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport LogoView from './logo-view.jsx';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { DEFAULT_P2P_ACCESS_MODE, KEYPRESS_DELAY, MESSAGES_PAGE, MAX_EXTERN_ATTACHMENT_SIZE,\n  MAX_IMAGE_DIM, MAX_INBAND_ATTACHMENT_SIZE } from '../config.js';\nimport { SUPPORTED_IMAGE_FORMATS, filePasted, fileToBase64, imageFileToBase64,\n  imageFileScaledToBase64, makeImageUrl } from '../lib/blob-helpers.js';\nimport { bytesToHumanSize, shortDateFormat } from '../lib/strformat.js';\n\nconst messages = defineMessages({\n  online_now: {\n    id: 'online_now',\n    defaultMessage: 'online now',\n    description: 'Indicator that the user or topic is currently online',\n  },\n  last_seen: {\n    id: 'last_seen_timestamp',\n    defaultMessage: 'Last seen',\n    description: 'Label for the timestamp of when the user or topic was last online'\n  },\n  'not_found': {\n    id: 'title_not_found',\n    defaultMessage: 'Not found',\n    description: 'Title shown when topic is not found'\n  }\n});\n\n// Checks if the access permissions are granted but not yet accepted.\nfunction isUnconfirmed(acs) {\n  if (acs) {\n    const ex = acs.getExcessive() || '';\n    return acs.isJoiner('given') && (ex.includes('R') || ex.includes('W'));\n  }\n  return false;\n}\n\nfunction isPeerRestricted(acs) {\n  if (acs) {\n    const ms = acs.getMissing() || '';\n    return acs.isJoiner('want') && (ms.includes('R') || ms.includes('W'));\n  }\n  return false;\n}\n\nclass MessagesView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = MessagesView.getDerivedStateFromProps(props, {});\n\n    // this.propsChange = this.propsChange.bind(this);\n    this.leave = this.leave.bind(this);\n    this.sendImageAttachment = this.sendImageAttachment.bind(this);\n    this.sendFileAttachment = this.sendFileAttachment.bind(this);\n    this.sendKeyPress = this.sendKeyPress.bind(this);\n    this.handleScrollReference = this.handleScrollReference.bind(this);\n    this.handleScrollEvent = this.handleScrollEvent.bind(this);\n    this.handleDescChange = this.handleDescChange.bind(this);\n    this.handleSubsUpdated = this.handleSubsUpdated.bind(this);\n    this.handleNewMessage = this.handleNewMessage.bind(this);\n    this.handleAllMessagesReceived = this.handleAllMessagesReceived.bind(this);\n    this.handleInfoReceipt = this.handleInfoReceipt.bind(this);\n    this.handleImagePostview = this.handleImagePostview.bind(this);\n    this.handleClosePreview = this.handleClosePreview.bind(this);\n    this.handleFormResponse = this.handleFormResponse.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleShowContextMenuMessage = this.handleShowContextMenuMessage.bind(this);\n    this.handleNewChatAcceptance = this.handleNewChatAcceptance.bind(this);\n    this.handleEnablePeer = this.handleEnablePeer.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n  }\n\n  componentDidMount() {\n    // this.propsChange(this.props, this.state);\n    if (this.messagesScroller) {\n      this.messagesScroller.addEventListener('scroll', this.handleScrollEvent);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messagesScroller) {\n      this.messagesScroller.removeEventListener('scroll', this.handleScrollEvent);\n    }\n  }\n\n  // Scroll last message into view on component update e.g. on message received\n  // or vertical shrinking.\n  componentDidUpdate(prevProps, prevState) {\n    if (this.messagesScroller) {\n      if (prevState.topic != this.state.topic || prevState.messages.length != this.state.messages.length) {\n        this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n      } else if (prevProps.viewportHeight > this.props.viewportHeight) {\n        this.messagesScroller.scrollTop += prevProps.viewportHeight - this.props.viewportHeight;\n      }\n    }\n\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (this.state.topic != prevState.topic) {\n      if (prevState.topic && !Tinode.isNewGroupTopicName(prevState.topic)) {\n        this.leave(prevState.topic);\n        this.props.readTimerHandler(null);\n      }\n\n      if (topic) {\n        topic.onData = this.handleNewMessage;\n        topic.onAllMessagesReceived = this.handleAllMessagesReceived;\n        topic.onInfo = this.handleInfoReceipt;\n        topic.onMetaDesc = this.handleDescChange;\n        topic.onSubsUpdated = this.handleSubsUpdated;\n        topic.onPres = this.handleSubsUpdated;\n      }\n    }\n\n    if (topic && !topic.isSubscribed() && this.props.ready &&\n        ((this.state.topic != prevState.topic) || !prevProps.ready)) {\n      // Is this a new topic?\n      const newTopic = (this.props.newTopicParams && this.props.newTopicParams._topicName == this.props.topic);\n\n      // Don't request the tags. They are useless unless the user\n      // is the owner and is editing the topic.\n      let getQuery = topic.startMetaQuery().withLaterDesc().withLaterSub();\n      if (this.state.isReader || newTopic) {\n        // If reading is either permitted or we don't know because it's a new topic. Ask for messages.\n        getQuery = getQuery.withLaterData(MESSAGES_PAGE);\n        if (this.state.isReader) {\n          getQuery = getQuery.withLaterDel();\n        }\n        // And show \"loading\" spinner.\n        this.setState({ fetchingMessages: true });\n      }\n      const setQuery = newTopic ? this.props.newTopicParams : undefined;\n      topic.subscribe(getQuery.build(), setQuery)\n        .then((ctrl) => {\n          if (this.state.topic != ctrl.topic) {\n            this.setState({topic: ctrl.topic});\n          }\n          this.props.onNewTopicCreated(this.props.topic, ctrl.topic);\n          // If there are unsent messages, try sending them now.\n          topic.queuedMessages((pub) => {\n            if (!pub._sending && topic.isSubscribed()) {\n              topic.publishMessage(pub);\n            }\n          });\n        })\n        .catch((err) => {\n          console.log(\"Failed subscription to\", this.state.topic);\n          this.props.onError(err.message, 'err');\n          const blankState = MessagesView.getDerivedStateFromProps({}, {});\n          blankState.title = this.props.intl.formatMessage(messages.not_found);\n          this.setState(blankState);\n        });\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let nextState = {};\n    if (!nextProps.topic) {\n      // Default state: no topic.\n      nextState = {\n        messages: [],\n        onlineSubs: [],\n        topic: null,\n        title: '',\n        avatar: null,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false,\n        peerMessagingDisabled: false\n      };\n    } else if (nextProps.topic != prevState.topic) {\n      const topic = nextProps.tinode.getTopic(nextProps.topic);\n      nextState = {\n        topic: nextProps.topic,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false\n      };\n\n      if (topic) {\n        // Topic exists.\n        const msgs = [];\n        const subs = [];\n\n        if (nextProps.connected) {\n          topic.subscribers((sub) => {\n            if (sub.online && sub.user != nextProps.myUserId) {\n              subs.push(sub);\n            }\n          });\n        }\n\n        topic.messages(function(msg) {\n          if (!msg.deleted) {\n            msgs.push(msg);\n          }\n        });\n\n        Object.assign(nextState, {\n          messages: msgs,\n          onlineSubs: subs\n        });\n\n        if (topic.public) {\n          Object.assign(nextState, {\n            title: topic.public.fn,\n            avatar: makeImageUrl(topic.public.photo)\n          });\n        } else {\n          Object.assign(nextState, {\n            title: '',\n            avatar: null\n          });\n        }\n\n        const peer = topic.p2pPeerDesc();\n        if (peer) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: isPeerRestricted(peer.acs)\n          });\n        } else if (prevState.peerMessagingDisabled) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: false\n          });\n        }\n      } else {\n        // Invalid topic.\n        Object.assign(nextState, {\n          messages: [],\n          onlineSubs: [],\n          title: '',\n          avatar: null,\n          peerMessagingDisabled: false\n        });\n      }\n    }\n\n    if (nextProps.acs) {\n      if (nextProps.acs.isWriter() != prevState.isWriter) {\n        nextState.isWriter = !prevState.isWriter;\n      }\n      if (nextProps.acs.isReader() != prevState.isReader) {\n        nextState.isReader = !prevState.isReader;\n      }\n      if (!nextProps.acs.isReader('given') != prevState.readingBlocked) {\n        nextState.readingBlocked = !prevState.readingBlocked;\n      }\n    } else {\n      if (prevState.isWriter) {\n        nextState.isWriter = false;\n      }\n      if (prevState.isReader) {\n        nextState.isReader = false;\n      }\n      if (!prevState.readingBlocked) {\n        prevState.readingBlocked = true;\n      }\n    }\n\n    if (isUnconfirmed(nextProps.acs) == !prevState.unconformed) {\n      nextState.unconfirmed = !prevState.unconformed;\n    }\n\n    // Clear subscribers online when there is no connection.\n    if (!nextProps.connected && prevState.onlineSubs && prevState.onlineSubs.length > 0) {\n      nextState.onlineSubs = [];\n    }\n\n    return nextState;\n  }\n\n  leave(oldTopicName) {\n    if (!oldTopicName) {\n      return;\n    }\n    let oldTopic = this.props.tinode.getTopic(oldTopicName);\n    if (oldTopic && oldTopic.isSubscribed()) {\n      oldTopic.leave(false)\n        .catch(() => { /* do nothing here */ })\n        .finally(() => {\n          // We don't care if the request succeeded or failed.\n          // The topic is dead regardless.\n          this.setState({fetchingMessages: false});\n          oldTopic.onData = undefined;\n          oldTopic.onAllMessagesReceived = undefined;\n          oldTopic.onInfo = undefined;\n          oldTopic.onMetaDesc = undefined;\n          oldTopic.onSubsUpdated = undefined;\n          oldTopic.onPres = undefined;\n        });\n    }\n  }\n\n  handleScrollReference(node) {\n    if (node) {\n      node.addEventListener('scroll', this.handleScrollEvent);\n      this.messagesScroller = node;\n    }\n  }\n\n  // Get older messages\n  handleScrollEvent(event) {\n    this.setState({scrollPosition: event.target.scrollHeight - event.target.scrollTop});\n    if (event.target.scrollTop <= 0) {\n      this.setState((prevState, props) => {\n        const newState = {};\n        if (!prevState.fetchingMessages) {\n          const topic = this.props.tinode.getTopic(this.state.topic);\n          if (topic && topic.isSubscribed() && topic.msgHasMoreMessages()) {\n            newState.fetchingMessages = true;\n            topic.getMessagesPage(MESSAGES_PAGE).catch((err) => {\n              this.setState({fetchingMessages: false});\n              this.props.onError(err.message, 'err');\n            });\n          }\n        }\n        return newState;\n      });\n    }\n  }\n\n  handleDescChange(desc) {\n    if (desc.public) {\n      this.setState({\n        title: desc.public.fn,\n        avatar: makeImageUrl(desc.public.photo)\n      });\n    } else {\n      this.setState({\n        title: '',\n        avatar: null\n      });\n    }\n\n    if (desc.acs) {\n      this.setState({\n        isWriter: desc.acs.isWriter(),\n        isReader: desc.acs.isReader(),\n        readingBlocked: !desc.acs.isReader('given'),\n        unconfirmed: isUnconfirmed(desc.acs),\n      });\n    }\n  }\n\n  handleSubsUpdated() {\n    if (this.state.topic) {\n      const subs = [];\n      const topic = this.props.tinode.getTopic(this.state.topic);\n      topic.subscribers((sub) => {\n        if (sub.online && sub.user != this.props.myUserId) {\n          subs.push(sub);\n        }\n      });\n      const newState = {onlineSubs: subs};\n      const peer = topic.p2pPeerDesc();\n      if (peer) {\n        Object.assign(newState, {\n          peerMessagingDisabled: isPeerRestricted(peer.acs)\n        });\n      } else if (this.state.peerMessagingDisabled) {\n        Object.assign(newState, {\n          peerMessagingDisabled: false\n        });\n      }\n      this.setState(newState);\n    }\n  }\n\n  handleNewMessage(msg) {\n    // Regenerate messages list\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    const newState = {messages: []};\n    topic.messages((m) => {\n      if (!m.deleted) {\n        newState.messages.push(m);\n      }\n    });\n\n    // msg could be null if one or more messages were deleted.\n    if (msg && !msg.deleted) {\n      // If the message is added to the end of the message list,\n      // scroll to the bottom.\n      if (topic.isNewMessage(msg.seq)) {\n        newState.scrollPosition = 0;\n      }\n\n      // Aknowledge messages except own messages. They are\n      // automatically assumed to be read and recived.\n      const status = topic.msgStatus(msg);\n      if (status >= Tinode.MESSAGE_STATUS_SENT && msg.from != this.props.myUserId) {\n        this.props.readTimerHandler(() => {\n          topic.noteRead(msg.seq);\n        });\n      }\n      this.props.onData(msg);\n    }\n    this.setState(newState);\n  }\n\n  handleAllMessagesReceived(count) {\n    this.setState({fetchingMessages: false});\n  }\n\n  handleInfoReceipt(info) {\n    switch (info.what) {\n      case 'kp': {\n        clearTimeout(this.keyPressTimer);\n        var instance = this;\n        this.keyPressTimer = setTimeout(function() {\n          instance.setState({typingIndicator: false});\n        }, KEYPRESS_DELAY + 1000);\n        if (!this.state.typingIndicator) {\n          this.setState({typingIndicator: true});\n        }\n        break;\n      }\n      case 'read':\n      case 'recv':\n        // Redraw due to changed recv/read status.\n        this.forceUpdate();\n        break;\n      default:\n        console.log(\"Other change in topic: \", info.what);\n    }\n  }\n\n  handleImagePostview(content) {\n    this.setState({ imagePostview: content });\n  }\n\n  handleClosePreview() {\n    this.setState({ imagePostview: null, imagePreview: null, docPreview: null });\n  }\n\n  handleFormResponse(action, text, data) {\n    if (action == 'pub') {\n      this.props.sendMessage(Drafty.attachJSON(Drafty.parse(text), data));\n    } else if (action == 'url') {\n      const url = new URL(data.ref);\n      const params = url.searchParams;\n      for (let key in data.resp) {\n        if (data.resp.hasOwnProperty(key)) {\n          params.set(key, data.resp[key]);\n        }\n      }\n      ['name', 'seq'].map(function(key) {\n        if (data[key]) {\n          params.set(key, data[key]);\n        }\n      });\n      params.set('uid', this.props.myUserId);\n      url.search = params;\n      window.open(url, '_blank');\n    } else {\n      console.log(\"Unknown action in form\", action);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.state.topic, y: e.pageY, x: e.pageX });\n  }\n\n  handleShowContextMenuMessage(params, messageSpecificMenuItems) {\n    params.topicName = this.state.topic;\n    const menuItems = messageSpecificMenuItems || [];\n    menuItems.push('message_delete');\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (topic) {\n      const acs = topic.getAccessMode();\n      if (acs && acs.isDeleter()) {\n        menuItems.push('message_delete_hard');\n      }\n    }\n    this.props.showContextMenu(params, menuItems);\n  }\n\n  handleNewChatAcceptance(action) {\n    this.props.onNewChat(this.state.topic, action);\n  }\n\n  handleEnablePeer(e) {\n    e.preventDefault();\n    this.props.onChangePermissions(this.state.topic, DEFAULT_P2P_ACCESS_MODE, this.state.topic);\n  }\n\n  sendKeyPress() {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (topic.isSubscribed()) {\n      topic.noteKeyPress();\n    }\n  }\n\n  sendFileAttachment(file) {\n    if (file.size > MAX_INBAND_ATTACHMENT_SIZE) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      if (!uploader) {\n        this.props.onError(this.props.intl.formatMessage(messages.cannot_initiate_upload));\n        return;\n      }\n      const uploadCompletionPromise = uploader.upload(file);\n      const msg = Drafty.attachFile(null, file.type, null, file.name, file.size, uploadCompletionPromise);\n      // Pass data and the uploader to the TinodeWeb.\n      this.props.sendMessage(msg, uploadCompletionPromise, uploader);\n    } else {\n      // Small enough to send inband.\n      fileToBase64(file,\n        (mime, bits, fname) => {\n          this.props.sendMessage(Drafty.attachFile(null, mime, bits, fname));\n        },\n        this.props.onError\n      );\n    }\n  }\n\n  handleAttachFile(file) {\n    if (file.size > MAX_EXTERN_ATTACHMENT_SIZE) {\n      // Too large.\n      this.props.onError(this.props.intl.formatMessage(messages.file_attachment_too_large,\n          {size: bytesToHumanSize(file.size), limit: bytesToHumanSize(MAX_EXTERN_ATTACHMENT_SIZE)}), 'err');\n    } else {\n      this.setState({ docPreview: {\n        file: file,\n        filename: file.name,\n        size: file.size,\n        type: file.type\n      }});\n    }\n  }\n\n  sendImageAttachment(caption, mime, bits, width, height, fname) {\n    let msg = Drafty.insertImage(null, 0, mime, bits, width, height, fname);\n    if (caption) {\n      msg = Drafty.appendLineBreak(msg);\n      msg = Drafty.append(msg, Drafty.init(caption));\n    }\n    this.props.sendMessage(msg);\n  }\n\n  handleAttachImage(file) {\n    // Check if the uploaded file is indeed an image and if it isn't too large.\n    if (file.size > MAX_INBAND_ATTACHMENT_SIZE || SUPPORTED_IMAGE_FORMATS.indexOf(file.type) < 0) {\n      // Convert image for size or format.\n      imageFileScaledToBase64(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, false,\n        // Success\n        (bits, mime, width, height, fname) => {\n          this.setState({imagePreview: {\n            url: URL.createObjectURL(file),\n            bits: bits,\n            filename: fname,\n            width: width,\n            height: height,\n            size: bits.length,\n            type: mime\n          }});\n        },\n        // Failure\n        (err) => {\n          this.props.onError(err, 'err');\n        });\n    } else {\n      // Image can be uploaded as is. No conversion is needed.\n      imageFileToBase64(file,\n        // Success\n        (bits, mime, width, height, fname) => {\n          this.setState({imagePreview: {\n            url: URL.createObjectURL(file),\n            bits: bits,\n            filename: fname,\n            width: width,\n            height: height,\n            size: bits.length,\n            type: mime\n          }});\n        },\n        // Failure\n        (err) => {\n          this.props.onError(err, 'err');\n        }\n      );\n    }\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n\n    let component;\n    if (this.props.hideSelf) {\n      component = null;\n    } else if (!this.state.topic) {\n      component = (\n        <LogoView hideSelf={this.props.hideSelf}\n          serverVersion={this.props.serverVersion}\n          serverAddress={this.props.serverAddress} />\n      );\n    } else {\n      let component2;\n      if (this.state.imagePreview) {\n        // Preview image before sending.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePreview}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendImageAttachment} />\n        );\n      } else if (this.state.imagePostview) {\n        // Expand received image.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePostview}\n            onClose={this.handleClosePreview} />\n        );\n      } else if (this.state.docPreview) {\n        // Preview attachment before sending.\n        component2 = (\n          <DocPreview\n            content={this.state.docPreview}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendFileAttachment} />\n        );\n      } else {\n        const topic = this.props.tinode.getTopic(this.state.topic);\n        const groupTopic = topic.getType() == 'grp';\n        let messageNodes = [];\n        let previousFrom = null;\n        let chatBoxClass = null;\n        for (let i=0; i<this.state.messages.length; i++) {\n          let msg = this.state.messages[i];\n          let nextFrom = null;\n\n          if (i + 1 < this.state.messages.length) {\n            nextFrom = this.state.messages[i+1].from\n          }\n\n          let sequence = 'single';\n          if (msg.from == previousFrom) {\n            if (msg.from == nextFrom) {\n              sequence = 'middle';\n            } else {\n              sequence = 'last';\n            }\n          } else if (msg.from == nextFrom) {\n            sequence = 'first';\n          }\n          previousFrom = msg.from;\n\n          const isReply = !(msg.from == this.props.myUserId);\n          const deliveryStatus = topic.msgStatus(msg);\n\n          let userName, userAvatar, userFrom;\n          if (groupTopic) {\n            const user = topic.userDesc(msg.from);\n            if (user && user.public) {\n              userName = user.public.fn;\n              userAvatar = makeImageUrl(user.public.photo);\n            }\n            userFrom = msg.from;\n            chatBoxClass='chat-box group';\n          } else {\n            chatBoxClass='chat-box';\n          }\n\n          messageNodes.push(\n            <ChatMessage\n              tinode={this.props.tinode}\n              content={msg.content} deleted={msg.hi}\n              mimeType={msg.head ? msg.head.mime : null}\n              timestamp={msg.ts} response={isReply} seq={msg.seq}\n              userFrom={userFrom} userName={userName} userAvatar={userAvatar}\n              sequence={sequence} received={deliveryStatus} uploader={msg._uploader}\n              viewportWidth={this.props.viewportWidth}\n              showContextMenu={this.handleShowContextMenuMessage}\n              onImagePreview={this.handleImagePostview}\n              onFormResponse={this.handleFormResponse}\n              onError={this.props.onError}\n              key={msg.seq} />\n          );\n        }\n\n        let lastSeen = null;\n        const cont = this.props.tinode.getMeTopic().getContact(this.state.topic);\n        if (cont && Tinode.topicType(cont.topic) == 'p2p') {\n          if (cont.online) {\n            lastSeen = formatMessage(messages.online_now);\n          } else if (cont.seen) {\n            lastSeen = formatMessage(messages.last_seen) + \": \" +\n              shortDateFormat(cont.seen.when, this.props.intl.locale);\n            // TODO: also handle user agent in c.seen.ua\n          }\n        }\n        const avatar = this.state.avatar || true;\n        const online = this.props.online ? 'online' + (this.state.typingIndicator ? ' typing' : '') : 'offline';\n\n        component2 = (\n          <>\n            <div id=\"topic-caption-panel\" className=\"caption-panel\">\n              {this.props.displayMobile ?\n                <a href=\"#\" id=\"hide-message-view\" onClick={(e) => {e.preventDefault(); this.props.onHideMessagesView();}}>\n                  <i className=\"material-icons\">arrow_back</i>\n                </a>\n                :\n                null}\n              <div className=\"avatar-box\">\n                <LetterTile\n                  avatar={avatar}\n                  topic={this.state.topic}\n                  title={this.state.title} />\n                <span className={online} />\n              </div>\n              <div id=\"topic-title-group\">\n                <div id=\"topic-title\" className=\"panel-title\">{\n                  this.state.title ||\n                  <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n                    description=\"Title shown when the topic has no name\" /></i>\n                }</div>\n                <div id=\"topic-last-seen\">{lastSeen}</div>\n              </div>\n              {groupTopic ?\n                <GroupSubs\n                  subscribers={this.state.onlineSubs} /> :\n                <div id=\"topic-users\" />\n              }\n              <div>\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">more_vert</i>\n                </a>\n              </div>\n            </div>\n            {this.props.displayMobile ?\n              <ErrorPanel\n                level={this.props.errorLevel}\n                text={this.props.errorText}\n                onClearError={this.props.onError} />\n              : null}\n            <LoadSpinner show={this.state.fetchingMessages} />\n            <div id=\"messages-container\">\n              <div id=\"messages-panel\" ref={this.handleScrollReference}>\n                <ul id=\"scroller\" className={chatBoxClass}>\n                  {messageNodes}\n                </ul>\n              </div>\n              {!this.state.isReader ?\n              <div id=\"write-only-background\">\n                {this.state.readingBlocked ?\n                <div id=\"write-only-note\">\n                  <FormattedMessage id=\"messages_not_readable\" defaultMessage=\"no access to messages\"\n                    description=\"Message shown in topic without the read access\" />\n                </div>\n                : null }\n              </div>\n              : null }\n            </div>\n            {this.state.peerMessagingDisabled && !this.state.unconfirmed ?\n              <div id=\"peer-messaging-disabled-note\">\n                <i className=\"material-icons secondary\">block</i> <FormattedMessage\n                  id=\"peers_messaging_disabled\" defaultMessage=\"Peer's messaging is disabled.\"\n                  description=\"Shown when the p2p peer's messaging is disabled\" /> <a href=\"#\"\n                    onClick={this.handleEnablePeer}><FormattedMessage id=\"enable_peers_messaging\"\n                    defaultMessage=\"Enable\" description=\"Call to action to enable peer's messaging\" /></a>.\n              </div> : null}\n            {this.state.unconfirmed ?\n              <Invitation onAction={this.handleNewChatAcceptance} />\n              :\n              <SendMessage\n                disabled={!this.state.isWriter}\n                onSendMessage={this.props.sendMessage}\n                onKeyPress={this.sendKeyPress}\n                onAttachFile={this.handleAttachFile}\n                onAttachImage={this.handleAttachImage}\n                onError={this.props.onError} />}\n          </>\n        );\n      }\n\n      component = <div id=\"topic-view\">{component2}</div>\n    }\n    return component;\n  }\n};\n\nexport default injectIntl(MessagesView);\n","import React from 'react';\n\nexport default class MenuContacts extends React.PureComponent {\n  render() {\n    return (\n      <div>\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onNewTopic();}}><i className=\"material-icons\">chat</i></a>\n        &nbsp;\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nexport default class MenuStart extends React.PureComponent {\n  render() {\n    return (\n        <div>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSignUp();}}><i className=\"material-icons\">person_add</i></a>\n          &nbsp;\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n        </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\nimport MenuCancel from './menu-cancel.jsx';\nimport MenuContacts from './menu-contacts.jsx';\nimport MenuStart from './menu-start.jsx';\n\nexport default class SideNavbar extends React.PureComponent {\n  render() {\n    return (\n        <div id=\"side-caption-panel\" className=\"caption-panel\">\n          <div id=\"self-avatar\" className=\"avatar-box\">\n            <LetterTile\n              avatar={this.props.avatar}\n              topic={this.props.myUserId}\n              title={this.props.title} />\n          </div>\n          <div id=\"sidepanel-title\" className=\"panel-title\">{this.props.title}</div>\n          {this.props.state === 'login' ?\n              <MenuStart onSignUp={this.props.onSignUp} onSettings={this.props.onSettings} /> :\n            this.props.state === 'contacts' ?\n              <MenuContacts onNewTopic={this.props.onNewTopic} onSettings={this.props.onSettings} /> :\n            null}\n          {this.props.onCancel ?\n             <MenuCancel onCancel={this.props.onCancel} /> : null}\n        </div>\n    );\n  }\n};\n","/* ContactsView holds all contacts-related stuff */\nimport React from 'react';\nimport { FormattedHTMLMessage, defineMessages } from 'react-intl';\n\nimport ContactList from '../widgets/contact-list.jsx';\n\nimport { updateFavicon } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  archived_contacts_title: {\n    id: \"archived_contacts\",\n    defaultMessage: \"Archived contacts ({count})\",\n    description: \"Label for archived chats\"\n  }\n});\n\nexport default class ContactsView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAction = this.handleAction.bind(this);\n\n    this.state = ContactsView.deriveStateFromProps(props);\n  }\n\n  static deriveStateFromProps(props) {\n    const contacts = [];\n    let unreadThreads = 0;\n    let archivedCount = 0;\n    props.chatList.map((c) => {\n      if (c.private && c.private.arch) {\n        if (props.archive) {\n          contacts.push(c);\n        } else {\n          archivedCount ++;\n        }\n      } else if (!props.archive) {\n        contacts.push(c);\n        unreadThreads += c.unread > 0 ? 1 : 0;\n      }\n    });\n    contacts.sort(function(a, b) {\n      return (b.touched || 0) - (a.touched || 0);\n    });\n\n    if (archivedCount > 0) {\n      contacts.push({\n        action: 'archive',\n        title: messages.archived_contacts_title,\n        values: {count: archivedCount}\n      });\n    }\n\n    return {\n      contactList: contacts,\n      unreadThreads: unreadThreads\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chatList != this.props.chatList || prevProps.archive != this.props.archive) {\n      const newState = ContactsView.deriveStateFromProps(this.props);\n      this.setState(newState);\n      if (newState.unreadThreads != prevState.unreadThreads) {\n        updateFavicon(newState.unreadThreads);\n      }\n    }\n  }\n\n  handleAction(action_ignored) {\n    this.props.onShowArchive();\n  }\n\n  render() {\n    return (\n      <FormattedHTMLMessage id=\"contacts_not_found\"\n        defaultMessage=\"You have no chats<br />¯∖_(ツ)_/¯\"\n        description=\"HTML message shown in ContactList when no contacts are found\">{\n        (no_contacts) => <ContactList\n          connected={this.props.connected}\n          contacts={this.state.contactList}\n          emptyListMessage={no_contacts}\n          topicSelected={this.props.topicSelected}\n          myUserId={this.props.myUserId}\n          showOnline={true}\n          showUnread={true}\n          onTopicSelected={this.props.onTopicSelected}\n          showContextMenu={this.props.showContextMenu}\n          onAction={this.handleAction} />\n      }</FormattedHTMLMessage>\n    );\n  }\n};\n","// Helper functions for storing values in localStorage.\n// By default localStorage can store only strings, not objects or other types.\n\nexport default class LocalStorageUtil {\n  // Replace old object with the new one.\n  static setObject(key, value) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n\n  // Get stored object.\n  static getObject(key) {\n    const value = localStorage.getItem(key);\n    return value && JSON.parse(value);\n  }\n\n  // Partially or wholly update stored object.\n  static updateObject(key, value) {\n    const oldVal = this.getObject(key);\n    this.setObject(key, Object.assign(oldVal || {}, value));\n  }\n\n  // Just a wrapper.\n  static removeItem(key) {\n    localStorage.removeItem(key);\n  }\n}\n","// Account registration.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport { vcard } from '../lib/utils.js';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class CreateAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: '',\n      password: '',\n      email: '',\n      fn: '', // full/formatted name\n      imageDataUrl: null,\n      errorCleared: false,\n      saveToken: LocalStorageUtil.getObject('keep-logged-in')\n    };\n\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(password) {\n    this.setState({password: password});\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value})\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleToggleSaveToken() {\n    LocalStorageUtil.setObject('keep-logged-in', !this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({errorCleared: false});\n    this.props.onCreateAccount(\n      this.state.login.trim(),\n      this.state.password.trim(),\n      vcard(this.state.fn.trim().substring(0, MAX_TITLE_LENGTH), this.state.imageDataUrl),\n      {'meth': 'email', 'val': this.state.email});\n  }\n\n  render() {\n    let submitClasses = 'blue';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form className=\"panel-form-column\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <FormattedMessage id=\"login_prompt\">{\n              (login_prompt) => <input type=\"text\" placeholder={login_prompt} autoComplete=\"user-name\"\n                value={this.state.login} onChange={this.handleLoginChange} required autoFocus />\n            }</FormattedMessage>\n            <FormattedMessage id=\"password_prompt\">{\n              (password_prompt) => <VisiblePassword placeholder={password_prompt} autoComplete=\"new-password\"\n                value={this.state.password} onFinished={this.handlePasswordChange}\n                required={true} />\n            }</FormattedMessage>\n          </div>\n          <AvatarUpload\n            onImageChanged={this.handleImageChanged}\n            onError={this.props.onError} />\n        </div>\n        <div  className=\"panel-form-row\">\n          <FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n            description=\"Input placeholder for person's full name\">{\n            (full_name_prompt) => <input type=\"text\" placeholder={full_name_prompt} autoComplete=\"name\"\n              value={this.state.fn} onChange={this.handleFnChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <FormattedMessage id=\"email_prompt\" defaultMessage=\"Email, e.g. jdoe@example.com\"\n            description=\"Input placeholder for email entry\">{\n            (email_prompt) => <input type=\"email\" placeholder={email_prompt} autoComplete=\"email\"\n              value={this.state.email} onChange={this.handleEmailChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <FormattedMessage id=\"stay_logged_in\">{\n            (stay_logged_in) => <label htmlFor=\"save-token\">&nbsp;{stay_logged_in}</label>\n          }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_up\" defaultMessage=\"Sign up\"\n              description=\"Create account button [Sign Up]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\nimport TagManager from '../widgets/tag-manager.jsx';\n\nimport { LINK_CONTACT_US, LINK_PRIVACY_POLICY, LINK_TERMS_OF_SERVICE, MAX_TITLE_LENGTH } from '../config.js';\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, asEmail, asPhone, vcard } from '../lib/utils.js';\n\nexport default class EditAccountView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    const defacs = me.getDefaultAccess();\n    this.state = {\n      fullName: me.public ? me.public.fn : undefined,\n      avatar: makeImageUrl(me.public ? me.public.photo : null),\n      auth: defacs ? defacs.auth : null,\n      anon: defacs ? defacs.anon : null,\n      tags: me.tags(),\n      credentials: me.getCredentials() || [],\n      addCredActive: false,\n      addCredInvalid: false,\n      newCred: '',\n      showPermissionEditorFor: undefined,\n      previousOnTags: me.onTagsUpdated\n    };\n\n    this.tnNewTags = this.tnNewTags.bind(this);\n    this.tnCredsUpdated = this.tnCredsUpdated.bind(this);\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\n    this.handlePasswordUpdate = this.handlePasswordUpdate.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleCheckboxClick = this.handleCheckboxClick.bind(this);\n    this.handleCredChange = this.handleCredChange.bind(this);\n    this.handleCredKeyDown = this.handleCredKeyDown.bind(this);\n    this.handleCredEntered = this.handleCredEntered.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n  }\n\n  componentDidMount() {\n    const me = this.props.tinode.getMeTopic();\n    me.onCredsUpdated = this.tnCredsUpdated;\n    me.onTagsUpdated = this.tnNewTags;\n  }\n\n  componentWillUnmount() {\n    const me = this.props.tinode.getMeTopic();\n    me.onTagsUpdated = this.state.previousOnTags;\n    me.onCredsUpdated = undefined;\n  }\n\n  tnNewTags(tags) {\n    this.setState({tags: tags});\n  }\n\n  tnCredsUpdated(creds) {\n    this.setState({credentials: creds || []});\n  }\n\n  handleFullNameUpdate(fn) {\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\n    if (fn) {\n      this.setState({fullName: fn});\n      this.props.onUpdateAccount(undefined, vcard(fn, null));\n    }\n  }\n\n  handlePasswordUpdate(pwd) {\n    this.setState({password: pwd});\n    this.props.onUpdateAccount(pwd);\n  }\n\n  handleImageChanged(img) {\n    this.setState({avatar: img});\n    this.props.onUpdateAccount(undefined, vcard(null, img || Tinode.DEL_CHAR));\n  }\n\n  handleCheckboxClick(what, checked) {\n    if (what == 'sound') {\n      this.props.onToggleMessageSounds(checked);\n    } else if (what == 'alert') {\n      this.props.onTogglePushNotifications(checked);\n    }\n  }\n\n  handleCredChange(e) {\n    this.setState({newCred: e.target.value, addCredInvalid: false});\n  }\n\n  handleCredKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({newCred: '', addCredActive: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleCredEntered(e);\n    }\n  }\n\n  handleCredEntered(e) {\n    let value = this.state.newCred.trim();\n    if (!value) {\n      this.setState({addCredActive: false, addCredInvalid: false});\n      return;\n    }\n\n    let val = asPhone(value);\n    let method;\n    if (val) {\n      method = 'tel';\n    } else {\n      val = asEmail(value);\n      if (val) {\n        method = 'email';\n      }\n    }\n    if (method) {\n      this.props.onCredAdd(method, val);\n      this.setState({addCredActive: false, newCred: ''});\n    } else {\n      this.setState({addCredInvalid: true});\n    }\n  }\n\n  handleLaunchPermissionsEditor(which) {\n    this.setState({\n      showPermissionEditorFor: which,\n      editedPermissions: this.state[which]\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handlePermissionsChanged(perm) {\n    let defacs = {};\n    defacs[this.state.showPermissionEditorFor] = perm;\n    this.props.onUpdateAccount(undefined, undefined, defacs);\n\n    let newState = {showPermissionEditorFor: undefined};\n    newState[this.state.showPermissionEditorFor] = perm;\n    this.setState(newState);\n  }\n\n  handleTagsUpdated(tags) {\n    // Check if tags have actually changed.\n    if (arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      return;\n    }\n    this.props.onUpdateTags(tags);\n  }\n\n  render() {\n    let credentials = [];\n    this.state.credentials.map((cred) => {\n      credentials.push(<div key={cred.meth + \":\" + cred.val + \":\" + cred.done}>{cred.meth}: <tt>{cred.val}</tt>\n        <span > {!cred.done ?\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredConfirm(cred.meth, cred.val);}}>\n              <FormattedMessage id=\"validate_credential_action\" defaultMessage=\"confirm\"\n                description=\"Validate credentail call to action\" />\n            </a>\n          : null} <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredDelete(cred.meth, cred.val);}}><i\n            className=\"material-icons gray\">delete_outline</i></a></span></div>);\n    });\n\n    return (\n      <React.Fragment>{this.state.showPermissionEditorFor ?\n        <PermissionsEditor\n          mode={this.state.editedPermissions}\n          skip=\"O\"\n          onSubmit={this.handlePermissionsChanged}\n          onCancel={this.handleHidePermissionsEditor} />\n        :\n        <div id=\"edit-account\" className=\"scrollable-panel\">\n          <div className=\"panel-form-row\">\n            <div className=\"panel-form-column\">\n              <div><label className=\"small\">\n                <FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n                  description=\"Label for full name editing\" />\n              </label></div>\n              <div><FormattedMessage id=\"full_name_prompt\">{\n                (full_name_placeholder) => <InPlaceEdit\n                  placeholder={full_name_placeholder}\n                  value={this.state.fullName}\n                  onFinished={this.handleFullNameUpdate} />\n              }</FormattedMessage></div>\n              <div><label className=\"small\">\n                <FormattedMessage id=\"label_password\" defaultMessage=\"Password\"\n                  description=\"Label for password editing\" />\n              </label></div>\n              <div>\n                <FormattedMessage id=\"password_unchanged_prompt\" defaultMessage=\"Unchanged\"\n                  description=\"Message in editor while password is unchanged\">{\n                  (password_unchanged) => <InPlaceEdit\n                    placeholder={password_unchanged}\n                    type=\"password\"\n                    onFinished={this.handlePasswordUpdate} />\n                }</FormattedMessage>\n              </div>\n            </div>\n            <AvatarUpload\n              avatar={this.state.avatar}\n              uid={this.props.myUserId}\n              title={this.state.fullName}\n              onImageChanged={this.handleImageChanged}\n              onError={this.props.onError} />\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"message-sound\">\n              <FormattedMessage id=\"label_message_sound\" defaultMessage=\"Message sound:\"\n                description=\"Label for message sounds toggle\" />\n            </label>\n            <CheckBox name=\"sound\" id=\"message-sound\"\n              checked={this.props.messageSounds}\n              onChange={this.handleCheckboxClick} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"desktop-alerts\">\n            {this.props.desktopAlertsEnabled ?\n              <FormattedMessage id=\"label_push_notifications\" defaultMessage=\"Notification alerts:\"\n                description=\"Label for push notifications switch\" />\n              :\n              <FormattedMessage id=\"label_push_notifications_disabled\"\n                defaultMessage=\"Notification alerts (requires HTTPS):\"\n                description=\"Label for push notifications switch\" />\n            }\n            </label>\n            <CheckBox name=\"alert\" id=\"desktop-alerts\"\n              checked={this.props.desktopAlerts}\n              onChange={this.props.desktopAlertsEnabled ? this.handleCheckboxClick : null} />\n          </div>\n          <div className=\"hr\" />\n          <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (user discovery)\"\n            description=\"Section title for TagManager\">{\n            (title_tag_manager) => <TagManager\n              title={title_tag_manager}\n              activated={false}\n              tags={this.state.tags}\n              onSubmit={this.handleTagsUpdated} />\n          }</FormattedMessage>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <div>\n              <label className=\"small\">\n                <FormattedMessage id=\"label_user_contacts\" defaultMessage=\"Contacts:\"\n                description=\"Label for user contacts\" />\n              </label>\n            </div>\n            <div className=\"quoted\">\n              {credentials}\n              {this.state.addCredActive ?\n                <input type=\"text\" value={this.state.value}\n                  className={this.state.addCredInvalid ? \"invalid\" : null}\n                  placeholder=\"Phone number or email\" required=\"required\" autoFocus\n                  onChange={this.handleCredChange} onKeyDown={this.handleCredKeyDown} onBlur={this.handleCredEntered} />\n                : null}\n              <div><a href=\"#\" onClick={(e) => {e.preventDefault(); this.setState({addCredActive: true});}}>+ Add another</a></div>\n            </div>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <div className=\"panel-form-row\">\n              <label className=\"small\"><FormattedMessage id=\"label_user_id\" defaultMessage=\"Address:\"\n                description=\"Label for user address (ID)\" /></label>\n              <tt>{this.props.myUserId}</tt>\n            </div>\n            <div>\n              <label className=\"small\">\n                <FormattedMessage id=\"label_default_access_mode\" defaultMessage=\"Default access mode:\"\n                description=\"Label for default access mode\" />\n              </label>\n            </div>\n            <div className=\"quoted\">\n              <div>Auth: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>{this.state.auth}</tt></div>\n              <div>Anon: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>{this.state.anon}</tt></div>\n            </div>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <a href=\"#\" className=\"red flat-button\" onClick={(e) => {e.preventDefault(); this.props.onLogout();}}>\n              <i className=\"material-icons\">exit_to_app</i> &nbsp;<FormattedMessage id=\"button_logout\"\n                defaultMessage=\"Logout\" description=\"Button [Logout]\" />\n            </a>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <div>\n              <label className=\"small\">\n                <FormattedMessage id=\"label_legal\" defaultMessage=\"Legal\"\n                description=\"Section label\" />\n              </label>\n            </div>\n            <div className=\"quoted\">\n              <a href={LINK_CONTACT_US} className=\"flat-button\" target=\"_blank\">\n                <i className=\"material-icons\">email</i> &nbsp;<FormattedMessage id=\"link_contact_us\"\n                  defaultMessage=\"Contact Us\" description=\"Ancor text for contacting us by email\" />\n              </a>\n            </div>\n            <div className=\"quoted\">\n              <a href={LINK_TERMS_OF_SERVICE} className=\"flat-button\" target=\"_blank\">\n                <i className=\"material-icons\">description</i> &nbsp;<FormattedMessage id=\"link_terms_of_service\"\n                  defaultMessage=\"Terms of Service\" description=\"Ancor text for terms of service link\" />\n              </a>\n            </div>\n            <div className=\"quoted\">\n              <a href={LINK_PRIVACY_POLICY} className=\"flat-button\" target=\"_blank\">\n                <i className=\"material-icons\">policy</i> &nbsp;<FormattedMessage id=\"link_privacy_policy\"\n                  defaultMessage=\"Privacy Policy\" description=\"Ancor text for privacy policy link\" />\n              </a>\n            </div>\n          </div>\n        </div>\n      }</React.Fragment>\n    );\n  }\n};\n","// Login form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\n\nexport default class LoginView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: props.login,\n      password: '',\n      hostName: props.serverAddress,\n      saveToken: LocalStorageUtil.getObject('keep-logged-in')\n    };\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  handleToggleSaveToken() {\n    LocalStorageUtil.setObject('keep-logged-in', !this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onLogin(this.state.login.trim(), this.state.password.trim());\n  }\n\n  render() {\n    var submitClasses = 'blue';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form id=\"login-form\" onSubmit={this.handleSubmit}>\n        <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n          description=\"Login placeholder in LoginView\">\n        {\n          (login_prompt) => <input type=\"text\" id=\"inputLogin\"\n            placeholder={login_prompt}\n            autoComplete=\"username\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"none\"\n            value={this.state.login}\n            onChange={this.handleLoginChange}\n            required autoFocus />\n        }\n        </FormattedMessage>\n        <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n          description=\"Password placeholder in LoginView\">\n        {\n          (password_prompt) => <VisiblePassword type=\"password\" id=\"inputPassword\"\n            placeholder={password_prompt}\n            autoComplete=\"current-password\"\n            value={this.state.password}\n            onChange={this.handlePasswordChange}\n            required={true} />\n        }\n        </FormattedMessage>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <label htmlFor=\"save-token\">&nbsp;\n            <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n              description=\"Label for a checkbox\" />\n          </label>\n          <a href=\"#reset\">\n            <FormattedMessage id=\"forgot_password_link\" defaultMessage=\"Forgot password?\"\n              description=\"Link to Reset password form\" />\n          </a>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_in\" defaultMessage=\"Sign in\"\n              description=\"Button [Sign In]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n/* END Login */\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  invalid_id: {\n    id: 'error_invalid_id',\n    defaultMessage: 'Invalid ID',\n    description: 'Error message'\n  }\n});\n\nclass NewTopicById extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      groupId: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({groupId: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.groupId) {\n      var name = this.state.groupId.trim();\n      if (name.length > 3 && (name.substr(0, 3) == 'usr' || name.substr(0, 3) == 'grp')) {\n        this.props.onSubmit(name);\n      } else {\n        this.props.onError(this.props.intl.formatMessage(messages.invalid_id), 'err');\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"group_user_id_prompt\" defaultMessage=\"Group or User ID\"\n          description=\"Prompt for entering user or group ID\">{\n          (prompt) => <input type=\"text\" placeholder={prompt}\n            value={this.state.groupId} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"blue\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_subscribe\" defaultMessage=\"Subscribe\"\n              description=\"Button [Subscribe]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicById);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from './avatar-upload.jsx';\nimport TagManager from './tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class NewTopicGroup extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      fn: '', // full/formatted name\n      private: '',\n      imageDataUrl: null,\n      tags: []\n    };\n\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handlePrivateChange = this.handlePrivateChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleTagsChanged = this.handleTagsChanged.bind(this);\n    this.handleTagsChanged = this.handleTagsChanged.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handlePrivateChange(e) {\n    this.setState({private: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleTagsChanged(tags) {\n    this.setState({tags: tags});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const fn = this.state.fn.trim().substring(0, MAX_TITLE_LENGTH);\n    const comment = this.state.private.trim().substring(0, MAX_TITLE_LENGTH);\n    if (fn) {\n      this.props.onSubmit(fn, this.state.imageDataUrl, comment, this.state.tags);\n    }\n  }\n\n  render() {\n    var submitClasses = 'blue';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n    return (\n      <form className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\" htmlFor=\"new-topic-fn\">\n              <FormattedMessage id=\"label_topic_name\" />\n            </label>\n            <FormattedMessage id=\"topic_name_editing_placeholder\" defaultMessage=\"Freeform name of the group\"\n              description=\"Prompt for entering topic name\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-fn\" placeholder={placeholder}\n                value={this.state.fn} onChange={this.handleFnChange} autoFocus required />\n            }</FormattedMessage>\n            <br />\n            <label className=\"small\" htmlFor=\"new-topic-priv\">\n              <FormattedMessage id=\"label_private\" />\n            </label>\n            <FormattedMessage id=\"private_editing_placeholder\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-priv\" placeholder={placeholder}\n                value={this.state.private} onChange={this.handlePrivateChange} />\n            }</FormattedMessage>\n          </div>\n          <AvatarUpload\n            onError={this.props.onError}\n            onImageChanged={this.handleImageChanged} />\n        </div>\n        <FormattedMessage id=\"title_tag_manager\">{\n          (title) => <TagManager\n            tags={this.state.tags}\n            activated={true}\n            onTagsChanged={this.handleTagsChanged}\n            title={title} />\n        }</FormattedMessage>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses}>\n            <FormattedMessage id=\"button_create\" defaultMessage=\"Create\"\n              description=\"Button [Create]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nexport default class SearchContacts extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      edited: false,\n      search: ''\n    };\n\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  componentWillUnmount() {\n    if (this.state.edited) {\n      this.setState({search: '', edited: false});\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n  }\n\n  handleSearchChange(e) {\n    this.setState({search: e.target.value});\n  }\n\n  handleSearch(e) {\n    e.preventDefault();\n    var query = this.state.search.trim();\n    this.setState({edited: (query.length > 0)});\n    this.props.onSearchContacts(query.length > 0 ? query : Tinode.DEL_CHAR);\n  }\n\n  handleClear(e) {\n    e.preventDefault();\n    if (this.state.edited) {\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n    this.setState({search: '', edited: false});\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Enter') {\n      this.handleSearch(e);\n    } else if (e.key === 'Escape') {\n      this.handleClear();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <i className=\"material-icons search\">search</i>\n          <FormattedMessage id=\"search_placeholder\" defaultMessage=\"List like email:alice@example.com, tel:17025550003...\"\n            description=\"Placeholder in contacts search field\">{\n            (search_placeholder) => <input className=\"search\" type=\"text\"\n              placeholder={search_placeholder}\n              value={this.state.search} onChange={this.handleSearchChange}\n              onKeyDown={this.handleKeyDown} required autoFocus />\n          }</FormattedMessage>\n          <a href=\"#\" onClick={this.handleClear}>\n            <i className=\"material-icons\">close</i>\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","// Create new topic and invite users or send an invite.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport ContactList from '../widgets/contact-list.jsx';\nimport NewTopicById from '../widgets/new-topic-by-id.jsx';\nimport NewTopicGroup from '../widgets/new-topic-group.jsx';\nimport SearchContacts from '../widgets/search-contacts.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\nimport { vcard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  search_for_contacts: {\n    id: \"search_for_contacts\",\n    defaultMessage: \"Use search to find contacts\",\n    description: \"Text shown in contacts view when user entered no search query.\"\n  },\n  search_no_results: {\n    id: \"search_no_results\",\n    defaultMessage: \"Search returned no results\",\n    description: \"Text shown in contacts view when query returned no results.\"\n  }\n});\n\nclass NewTopicView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tabSelected: 'p2p',\n      searchQuery: null\n    };\n\n    this.handleTabClick = this.handleTabClick.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleNewGroupSubmit = this.handleNewGroupSubmit.bind(this);\n    this.handleGroupByID = this.handleGroupByID.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.onInitFind();\n  }\n\n  handleTabClick(e) {\n    e.preventDefault();\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'tab', e.currentTarget.dataset.id));\n    this.setState({tabSelected: e.currentTarget.dataset.id});\n  }\n\n  handleSearchContacts(query) {\n    this.props.onSearchContacts(query);\n    this.setState({searchQuery: Tinode.isNullValue(query) ? null : query});\n  }\n\n  handleContactSelected(sel) {\n    if (this.state.tabSelected === 'p2p') {\n      HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n      this.props.onCreateTopic(sel, undefined);\n    }\n  }\n\n  handleNewGroupSubmit(name, dataUrl, priv, tags) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(undefined, vcard(name, dataUrl), priv, tags);\n  }\n\n  handleGroupByID(topicName) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(topicName);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const no_contacts_placeholder = formatMessage(this.state.searchQuery ?\n      messages.search_no_results : messages.search_for_contacts);\n    return (\n      <div className=\"flex-column\">\n        <ul className=\"tabbar\">\n          <li className={this.state.tabSelected === \"p2p\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"p2p\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_find_user\" defaultMessage=\"find\"\n                description=\"Tab title Find\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"grp\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"grp\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_new_group\" defaultMessage=\"new group\"\n                description=\"Tab title New Group\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"byid\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"byid\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_group_by_id\" defaultMessage=\"by id\"\n                description=\"Tab title Find topic by ID\" />\n            </a>\n          </li>\n        </ul>\n        {this.state.tabSelected === 'grp' ?\n          <NewTopicGroup onSubmit={this.handleNewGroupSubmit} /> :\n          this.state.tabSelected === 'byid' ?\n          <NewTopicById\n            onSubmit={this.handleGroupByID}\n            onError={this.props.onError} /> :\n          <div className=\"flex-column\">\n            <SearchContacts\n              type=\"p2p\"\n              onSearchContacts={this.handleSearchContacts} />\n            <ContactList\n              contacts={this.props.searchResults}\n              myUserId={this.props.myUserId}\n              emptyListMessage={no_contacts_placeholder}\n              showOnline={false}\n              showUnread={false}\n              showContextMenu={false}\n              onTopicSelected={this.handleContactSelected} />\n          </div>}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicView);\n","// A password reset form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\n\nexport default class PasswordResetView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n  }\n\n  componentDidMount() {\n    let parsed = HashNavigation.parseUrlHash(window.location.hash);\n    this.setState({token: parsed.params.token, scheme: parsed.params.scheme});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.token) {\n      this.props.onReset(this.state.scheme, this.state.password.trim(), this.state.token);\n    } else {\n      this.props.onRequest('email', this.state.email.trim());\n    }\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  render() {\n    let reset = (this.state.token && this.state.scheme);\n    return (\n      <form id=\"password-reset-form\" onSubmit={this.handleSubmit}>\n        {reset ?\n          <FormattedMessage id=\"new_password_placeholder\" defaultMessage=\"Enter new password\"\n            description=\"Placeholder for entering new password\">{\n            (placeholder) => <VisiblePassword\n              placeholder={placeholder}\n              autoComplete=\"new-password\"\n              value={this.state.password}\n              required={true} autoFocus={true}\n              onChange={this.handlePasswordChange} />\n          }</FormattedMessage>\n          :\n          <>\n            <label htmlFor=\"inputEmail\">\n              <FormattedMessage id=\"label_reset_password\"\n                defaultMessage=\"Send a password reset email:\"\n                description=\"Label for password reset field\" />\n            </label>\n            <FormattedMessage id=\"credential_email_prompt\" defaultMessage=\"Your registration email\"\n              description=\"Placeholder for entering email\">{\n              (placeholder) => <input type=\"email\" id=\"inputEmail\"\n                placeholder={placeholder}\n                autoComplete=\"email\"\n                value={this.state.email}\n                onChange={this.handleEmailChange}\n                required autoFocus />\n            }</FormattedMessage>\n          </>\n        }\n        <div className=\"dialog-buttons\">\n          <button className=\"blue\" type=\"submit\">{reset ?\n            <FormattedMessage id=\"button_reset\" defaultMessage=\"Reset\" description=\"Button [Reset]\" /> :\n            <FormattedMessage id=\"button_send_request\" defaultMessage=\"Send request\"\n              description=\"Button [Send request]\" />\n          }</button>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react';\n\nimport { KNOWN_HOSTS } from '../config.js';\n\n/* Combobox for selecting host name */\n\nexport default class HostSelector extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hostName: props.serverAddress,\n      changed: false\n    };\n\n    this.handleHostNameChange = this.handleHostNameChange.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handleHostNameChange(e) {\n    this.setState({hostName: e.target.value, changed: true});\n  }\n\n  handleEditingFinished() {\n    if (this.state.changed) {\n      this.setState({changed: false});\n      this.props.onServerAddressChange(this.state.hostName.trim());\n    }\n  }\n\n  render() {\n    var hostOptions = [];\n    for (let key in KNOWN_HOSTS) {\n      let item = KNOWN_HOSTS[key];\n      hostOptions.push(\n        <option key={item} value={item} />\n      );\n    }\n    return (\n      <div className=\"panel-form-row\">\n        <input type=\"search\" id=\"host-name\" placeholder={this.props.hostName} list=\"known-hosts\"\n          className=\"quoted\" value={this.state.hostName} onChange={this.handleHostNameChange}\n          onBlur={this.handleEditingFinished} required />\n        <datalist id=\"known-hosts\">\n          {hostOptions}\n        </datalist>\n      </div>\n    );\n  }\n}\n","// Tinode config panel.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport HostSelector from '../widgets/host-selector.jsx';\n\nexport default class SettingsView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transport: props.transport || 'def',\n      serverAddress: props.serverAddress,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleTransportSelected = this.handleTransportSelected.bind(this);\n    this.handleServerAddressChange = this.handleServerAddressChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onUpdate({\n      transport: this.state.transport,\n      serverAddress: this.state.serverAddress\n    });\n  }\n\n  handleTransportSelected(e) {\n    this.setState({transport: e.currentTarget.value});\n  }\n\n  handleServerAddressChange(name) {\n    this.setState({serverAddress: name});\n  }\n\n  render() {\n    const names = {def: \"default\", ws: \"websocket\", lp: \"long polling\"};\n    var transportOptions = [];\n    var instance = this;\n    ['def', 'ws', 'lp'].map(function(item) {\n      var id = 'transport-' + item;\n      var name = names[item];\n      transportOptions.push(\n        <li key={item}>\n          <input type=\"radio\" id={id} name=\"transport-select\" value={item}\n            checked={instance.state.transport === item}\n            onChange={instance.handleTransportSelected} />\n          <label htmlFor={id}>{name}</label>\n        </li>\n      );\n    });\n\n    return (\n      <form id=\"settings-form\" className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_server_to_use\" defaultMessage=\"Server to use:\"\n              description=\"Label for server selector in SettingsView\" />\n          </label>\n        </div>\n        <HostSelector serverAddress={this.state.serverAddress}\n          onServerAddressChange={this.handleServerAddressChange} />\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_wire_transport\" defaultMessage=\"Wire transport:\"\n              description=\"Label for wire transport selection in SettingsView\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ul className=\"quoted\">\n            {transportOptions}\n          </ul>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button type=\"submit\" className=\"blue\">\n            <FormattedMessage id=\"button_update\" defaultMessage=\"Update\"\n              description=\"Button [Update]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// ValidationView: panel for confirming credentials, like email or phone.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  phone: {\n    id: 'phone_dative',\n    defaultMessage: 'phone',\n    description: \"Dative case of 'phone', i.e. 'phone' in 'by phone'\",\n  },\n  email: {\n    id: 'email_dative',\n    defaultMessage: 'email',\n    description: \"Dative case of 'email', i.e. 'email' in 'by email'\",\n  }\n});\n\nclass ValidationView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      code: props.credCode || ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({code: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    } else if (e.key == 'Escape') {\n      this.handleCancel(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.code && this.state.code.trim()) {\n      this.props.onSubmit(this.props.credMethod, this.state.code.trim());\n    }\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel();\n  }\n\n\n  render() {\n    const { formatMessage } = this.props.intl;\n    const methods = {'email': formatMessage(messages.email), 'tel': formatMessage(messages.phone)};\n    let method = methods[this.props.credMethod] || this.props.credMethod;\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\" htmlFor=\"enter-confirmation-code\">\n            <FormattedMessage id=\"enter_confirmation_code_prompt\"\n              defaultMessage=\"Enter confirmation code sent to you by {method}:\"\n              description=\"Request to enter confirmation code\"\n              values={{method: method}} />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"numeric_confirmation_code_prompt\"\n          defaultMessage=\"Numbers only\" description=\"Prompt for numeric conformation code\">{\n          (numbers_only) => <input type=\"text\" id=\"enter-confirmation-code\"\n            placeholder={numbers_only}\n            value={this.state.code} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"blue\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_confirm\" defaultMessage=\"Confirm\" description=\"Button [Confirm]\" />\n          </button>\n          <button className=\"white\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ValidationView);\n","import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport SideNavbar from '../widgets/side-navbar.jsx';\n\nimport ContactsView from './contacts-view.jsx';\nimport CreateAccountView from './create-account-view.jsx';\nimport EditAccountView from './edit-account-view.jsx';\nimport LoginView from './login-view.jsx';\nimport NewTopicView from './new-topic-view.jsx';\nimport PasswordResetView from './password-reset-view.jsx';\nimport SettingsView from './settings-view.jsx';\nimport ValidationView from './validation-view.jsx';\n\n// Panel titles for translation.\nconst messages = defineMessages({\n  'login': {\n    id: 'sidepanel_title_login',\n    description: 'Sidepanel title for LoginView.',\n    defaultMessage: 'Sign In'\n  },\n  'register': {\n    id: 'sidepanel_title_register',\n    description: 'Sidepanel title for CreateAccountView.',\n    defaultMessage: 'Create Account'\n  },\n  'settings': {\n    id: 'sidepanel_title_settings',\n    description: 'Sidepanel title for SettingsView.',\n    defaultMessage: 'Settings'\n  },\n  'edit': {\n    id: 'sidepanel_title_edit_account',\n    description: 'Sidepanel title for EditAccountView.',\n    defaultMessage: 'Edit Account'\n  },\n  'newtpk': {\n    id: 'sidepanel_title_newtpk',\n    description: 'Sidepanel title for NewTopicView.',\n    defaultMessage: 'Start New Chat'\n  },\n  'cred': {\n    id: 'sidepanel_title_cred',\n    description: 'Sidepanel title for ValidationView.',\n    defaultMessage: 'Confirm Credentials'\n  },\n  'reset': {\n    id: 'sidepanel_title_reset',\n    description: 'Sidepanel title for PasswordResetView.',\n    defaultMessage: 'Reset Password'\n  },\n  'archive': {\n    id: 'sidepanel_title_archive',\n    description: 'Sidepanel title for ContactsView-Archive.',\n    defaultMessage: 'Archived Chats'\n  }\n});\n\nclass SidepanelView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleLoginRequested = this.handleLoginRequested.bind(this);\n  }\n\n  handleLoginRequested(login, password) {\n    this.props.onLoginRequest(login, password);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const view = this.props.state || (this.props.myUserId ? 'contacts' : 'login');\n\n    let title, avatar;\n    if (view == 'contacts') {\n      title = this.props.title;\n      avatar = this.props.avatar ? this.props.avatar : true;\n    } else {\n      title = formatMessage(messages[view]);\n      avatar = false;\n    }\n\n    let onCancel;\n    if (['login', 'contacts'].indexOf(view) == -1) {\n      onCancel = this.props.onCancel;\n    }\n\n    return (\n      <div id=\"sidepanel\" className={this.props.hideSelf ? 'nodisplay' : null}>\n        <SideNavbar\n          state={view}\n          title={title}\n          avatar={avatar}\n          myUserId={this.props.myUserId}\n          onSignUp={this.props.onSignUp}\n          onSettings={this.props.onSettings}\n          onNewTopic={this.props.onNewTopic}\n          onCancel={onCancel} />\n\n        <ErrorPanel\n          level={this.props.errorLevel}\n          text={this.props.errorText}\n          action={this.props.errorAction}\n          actionText={this.props.errorActionText}\n          onClearError={this.props.onError} />\n\n        <LoadSpinner show={this.props.loadSpinnerVisible} />\n\n        {view === 'login' ?\n          <LoginView\n            login={this.props.login}\n            disabled={this.props.loginDisabled}\n            onLogin={this.handleLoginRequested} /> :\n\n          view === 'register' ?\n          <CreateAccountView\n            onCreateAccount={this.props.onCreateAccount}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'settings' ?\n          <SettingsView\n            transport={this.props.transport}\n            serverAddress={this.props.serverAddress}\n            onCancel={this.props.onCancel}\n            onUpdate={this.props.onGlobalSettings} /> :\n\n          view === 'edit' ?\n          <EditAccountView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            messageSounds={this.props.messageSounds}\n            desktopAlerts={this.props.desktopAlerts}\n            desktopAlertsEnabled={this.props.desktopAlertsEnabled}\n            onUpdateAccount={this.props.onUpdateAccount}\n            onUpdateTags={this.props.onUpdateAccountTags}\n            onTogglePushNotifications={this.props.onTogglePushNotifications}\n            onToggleMessageSounds={this.props.onToggleMessageSounds}\n            onCredAdd={this.props.onCredAdd}\n            onCredDelete={this.props.onCredDelete}\n            onCredConfirm={this.props.onCredConfirm}\n            onLogout={this.props.onLogout}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          (view === 'contacts' || view == 'archive') ?\n          <ContactsView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            connected={this.props.connected}\n            topicSelected={this.props.topicSelected}\n            archive={view == 'archive'}\n            chatList={this.props.chatList}\n            showContextMenu={this.props.showContextMenu}\n            onTopicSelected={this.props.onTopicSelected}\n            onShowArchive={this.props.onShowArchive} /> :\n\n          view === 'newtpk' ?\n          <NewTopicView\n            searchResults={this.props.searchResults}\n            onInitFind={this.props.onInitFind}\n            onSearchContacts={this.props.onSearchContacts}\n            onCreateTopic={this.props.onCreateTopic}\n            onError={this.props.onError} /> :\n\n          view === 'cred' ?\n          <ValidationView\n            credCode={this.props.credCode}\n            credMethod={this.props.credMethod}\n            onSubmit={this.props.onValidateCredentials}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'reset' ?\n          <PasswordResetView\n            onRequest={this.props.onPasswordResetRequest}\n            onReset={this.props.onResetPassword} /> :\n          null}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SidepanelView);\n","import { KNOWN_HOSTS, DEFAULT_HOST } from '../config.js';\n\n// Detect server address from the URL\nexport function detectServerAddress() {\n  let host = DEFAULT_HOST;\n  if (typeof window.location == 'object') {\n    if (window.location.protocol == 'file:' || window.location.hostname == 'localhost') {\n      host = KNOWN_HOSTS.local;\n    } else if (window.location.hostname) {\n      host = window.location.hostname + (window.location.port ? ':' + window.location.port : '');\n    }\n  }\n  return host;\n}\n\n// Detect if the page is served over HTTPS.\nexport function isSecureConnection() {\n  if (typeof window.location == 'object') {\n    return window.location.protocol == 'https:';\n  }\n  return false;\n}\n\nexport function isLocalHost() {\n  if (typeof window.location == 'object') {\n    return window.location.hostname == 'localhost';\n  }\n  return false;\n}\n","// The top-level class to hold all functionality together.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport * as firebase from 'firebase/app';\nimport 'firebase/messaging';\n\nimport Tinode from 'tinode-sdk';\n\nimport Alert from '../widgets/alert.jsx';\nimport ContextMenu from '../widgets/context-menu.jsx';\n\nimport InfoView from './info-view.jsx';\nimport MessagesView from './messages-view.jsx';\nimport SidepanelView from './sidepanel-view.jsx';\n\nimport { API_KEY, APP_NAME, DEFAULT_P2P_ACCESS_MODE, LOGGING_ENABLED, MEDIA_BREAKPOINT,\n  READ_DELAY, RECEIVED_DELAY } from '../config.js';\nimport { base64ReEncode, makeImageUrl } from '../lib/blob-helpers.js';\nimport { detectServerAddress, isLocalHost, isSecureConnection } from '../lib/host-name.js';\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { secondsToTime } from '../lib/strformat.js'\nimport { updateFavicon } from '../lib/utils.js';\n\n// Sound to play on message received.\nconst POP_SOUND = new Audio('audio/msg.mp3');\n\nconst messages = defineMessages({\n  update_available: {\n    id: 'update_available',\n    defaultMessage: 'Update available. <a href=\"\">Reload</a>.',\n    description: 'Message shown when an app update is available.'\n  },\n  reconnect_countdown: {\n    id: 'reconnect_countdown',\n    defaultMessage: 'Disconnected. Reconnecting in {seconds}…',\n    description: 'Message shown when an app update is available.'\n  },\n  reconnect_now: {\n    id: 'reconnect_now',\n    defaultMessage: 'Try now',\n    description: 'Prompt for reconnecting now'\n  }\n});\n\nclass TinodeWeb extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = this.getBlankState();\n\n    this.handleResize = this.handleResize.bind(this);\n    this.handleHashRoute = this.handleHashRoute.bind(this);\n    this.handleOnline = this.handleOnline.bind(this);\n    this.checkForAppUpdate = this.checkForAppUpdate.bind(this);\n    this.handleAppVisibility = this.handleAppVisibility.bind(this);\n    this.handleReadTimer = this.handleReadTimer.bind(this);\n    this.handleVisibilityEvent = this.handleVisibilityEvent.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.handleLoginRequest = this.handleLoginRequest.bind(this);\n    this.handleConnected = this.handleConnected.bind(this);\n    this.handleAutoreconnectIteration = this.handleAutoreconnectIteration.bind(this);\n    this.doLogin = this.doLogin.bind(this);\n    this.handleCredentialsRequest = this.handleCredentialsRequest.bind(this);\n    this.handleLoginSuccessful = this.handleLoginSuccessful.bind(this);\n    this.handleDisconnect = this.handleDisconnect.bind(this);\n    this.tnMeMetaDesc = this.tnMeMetaDesc.bind(this);\n    this.tnMeContactUpdate = this.tnMeContactUpdate.bind(this);\n    this.tnMeSubsUpdated = this.tnMeSubsUpdated.bind(this);\n    this.resetContactList = this.resetContactList.bind(this);\n    this.tnData = this.tnData.bind(this);\n    this.tnInitFind = this.tnInitFind.bind(this);\n    this.tnFndSubsUpdated = this.tnFndSubsUpdated.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleTopicSelected = this.handleTopicSelected.bind(this);\n    this.handleHideMessagesView = this.handleHideMessagesView.bind(this);\n    this.handleSendMessage = this.handleSendMessage.bind(this);\n    this.handleNewChatInvitation = this.handleNewChatInvitation.bind(this);\n    this.handleNewAccount = this.handleNewAccount.bind(this);\n    this.handleNewAccountRequest = this.handleNewAccountRequest.bind(this);\n    this.handleUpdateAccountRequest = this.handleUpdateAccountRequest.bind(this);\n    this.handleUpdateAccountTagsRequest = this.handleUpdateAccountTagsRequest.bind(this);\n    this.handleSettings = this.handleSettings.bind(this);\n    this.handleGlobalSettings = this.handleGlobalSettings.bind(this);\n    this.handleShowArchive = this.handleShowArchive.bind(this);\n    this.handleToggleMessageSounds = this.handleToggleMessageSounds.bind(this);\n    this.handleCredAdd = this.handleCredAdd.bind(this);\n    this.handleCredDelete = this.handleCredDelete.bind(this);\n    this.handleCredConfirm = this.handleCredConfirm.bind(this);\n    this.initDesktopAlerts = this.initDesktopAlerts.bind(this);\n    this.togglePushToken = this.togglePushToken.bind(this);\n    this.requestPushToken = this.requestPushToken.bind(this);\n    this.handleSidepanelCancel = this.handleSidepanelCancel.bind(this);\n    this.handleNewTopic = this.handleNewTopic.bind(this);\n    this.handleNewTopicRequest = this.handleNewTopicRequest.bind(this);\n    this.handleNewTopicCreated = this.handleNewTopicCreated.bind(this);\n    this.handleTopicUpdateRequest = this.handleTopicUpdateRequest.bind(this);\n    this.handleChangePermissions = this.handleChangePermissions.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleDeleteMessagesRequest = this.handleDeleteMessagesRequest.bind(this);\n    this.handleLeaveUnsubRequest = this.handleLeaveUnsubRequest.bind(this);\n    this.handleBlockTopicRequest = this.handleBlockTopicRequest.bind(this);\n    this.handleReportTopic = this.handleReportTopic.bind(this);\n    this.handleShowContextMenu = this.handleShowContextMenu.bind(this);\n    this.defaultTopicContextMenu = this.defaultTopicContextMenu.bind(this);\n    this.handleHideContextMenu = this.handleHideContextMenu.bind(this);\n    this.handleShowAlert = this.handleShowAlert.bind(this);\n    this.handleShowInfoView = this.handleShowInfoView.bind(this);\n    this.handleHideInfoView = this.handleHideInfoView.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleValidateCredentialsRequest = this.handleValidateCredentialsRequest.bind(this);\n    this.handlePasswordResetRequest = this.handlePasswordResetRequest.bind(this);\n    this.handleResetPassword = this.handleResetPassword.bind(this);\n    this.handleContextMenuAction = this.handleContextMenuAction.bind(this);\n  }\n\n  getBlankState() {\n    const settings = LocalStorageUtil.getObject('settings') || {};\n\n    return {\n      connected: false,\n      // Connected and subscribed to 'me'\n      ready: false,\n      transport: settings.transport || null,\n      serverAddress: settings.serverAddress || detectServerAddress(),\n      serverVersion: \"no connection\",\n      // \"On\" is the default, so saving the \"off\" state.\n      messageSounds: !settings.messageSoundsOff,\n      desktopAlerts: settings.desktopAlerts,\n      desktopAlertsEnabled: (isSecureConnection() || isLocalHost()) &&\n        (typeof firebase != 'undefined') && (typeof navigator != 'undefined') &&\n        (typeof FIREBASE_INIT != 'undefined'),\n      firebaseToken: LocalStorageUtil.getObject('firebase-token'),\n\n      errorText: '',\n      errorLevel: null,\n      errorAction: undefined,\n      errorActionText: null,\n\n      sidePanelSelected: 'login',\n      sidePanelTitle: null,\n      sidePanelAvatar: null,\n      loadSpinnerVisible: false,\n\n      login: '',\n      password: '',\n      myUserId: null,\n      liveConnection: navigator.onLine,\n      topicSelected: '',\n      topicSelectedOnline: false,\n      topicSelectedAcs: null,\n      newTopicParams: null,\n      loginDisabled: false,\n      displayMobile: (window.innerWidth <= MEDIA_BREAKPOINT),\n      showInfoPanel: false,\n      mobilePanel: 'sidepanel',\n\n      contextMenuVisible: false,\n      contextMenuBounds: null,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuItems: [],\n\n      // Modal alert dialog.\n      alertVisible: false,\n      alertParams: {},\n\n      // Chats as shown in the ContactsView\n      chatList: [],\n      // Contacts returned by a search query.\n      searchResults: [],\n      // Merged results of a search query and p2p chats.\n      searchableContacts: [],\n      credMethod: undefined,\n      credCode: undefined\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    window.addEventListener('online', (e) => { this.handleOnline(true); });\n    window.addEventListener('offline', (e) => { this.handleOnline(false); });\n    window.addEventListener('hashchange', this.handleHashRoute);\n    // Window/tab visible or invisible for pausing timers.\n    document.addEventListener('visibilitychange', this.handleVisibilityEvent);\n\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n\n    this.tinode = TinodeWeb.tnSetup(this.state.serverAddress, this.state.transport);\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n\n    // Initialize desktop alerts.\n    if (this.state.desktopAlertsEnabled) {\n      try {\n        this.fbPush = firebase.initializeApp(FIREBASE_INIT, APP_NAME).messaging();\n        this.fbPush.usePublicVapidKey(FIREBASE_INIT.messagingVapidKey);\n        navigator.serviceWorker.register('/service-worker.js').then((reg) => {\n          this.checkForAppUpdate(reg);\n          this.fbPush.useServiceWorker(reg);\n          this.initDesktopAlerts();\n          if (this.state.desktopAlerts) {\n            if (!this.state.firebaseToken) {\n              this.togglePushToken(true);\n            } else {\n              this.tinode.setDeviceToken(this.state.firebaseToken, true);\n            }\n          }\n        }).catch((err) => {\n          // registration failed :(\n          console.log(\"Failed to register service worker:\", err);\n        });\n      } catch (err) {\n        this.handleError(\"Failed to initialize push notifications\", 'err');\n        console.log(\"Failed to initialize push notifications\", err);\n        this.setState({desktopAlertsEnabled: false});\n      }\n    }\n\n    const token = LocalStorageUtil.getObject('keep-logged-in') ?\n      LocalStorageUtil.getObject('auth-token') : undefined;\n\n    const parsedNav = HashNavigation.parseUrlHash(window.location.hash);\n    if (token) {\n      // When reading from storage, date is returned as string.\n      token.expires = new Date(token.expires);\n      this.tinode.setAuthToken(token);\n      this.tinode.connect().catch((err) => {\n        // Socket error\n        this.handleError(err.message, 'err');\n      });\n      delete parsedNav.params.info;\n      delete parsedNav.params.tab;\n      parsedNav.path[0] = '';\n      HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsedNav.path, parsedNav.params));\n    } else if (!parsedNav.params.token) {\n      HashNavigation.navigateTo('');\n    }\n\n    this.readTimer = null;\n    this.readTimerCallback = null;\n\n    this.handleHashRoute();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n    window.removeEventListener('hashchange', this.handleHashRoute);\n    document.removeEventListener('visibilitychange', this.handleVisibilityEvent);\n  }\n\n  // Setup transport (usually websocket) and server address. This will terminate connection with the server.\n  static tnSetup(serverAddress, transport) {\n    let tinode = new Tinode(APP_NAME, serverAddress, API_KEY, transport, isSecureConnection());\n    tinode.enableLogging(LOGGING_ENABLED, true);\n    return tinode;\n  }\n\n  handleResize() {\n    var mobile = document.documentElement.clientWidth <= MEDIA_BREAKPOINT;\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n    if (this.state.displayMobile != mobile) {\n      this.setState({displayMobile: mobile});\n    }\n  }\n\n  // Check if a newer version of TinodeWeb app is available at the server.\n  checkForAppUpdate(reg) {\n    const {formatHTMLMessage} = this.props.intl;\n    reg.onupdatefound = () => {\n      const installingWorker = reg.installing;\n      installingWorker.onstatechange = () => {\n        if (installingWorker.state == 'installed' && navigator.serviceWorker.controller) {\n          this.handleError(formatHTMLMessage(messages.update_available), 'info');\n        }\n      }\n    }\n  }\n\n  // Handle for hashchange event: display appropriate panels.\n  handleHashRoute() {\n    var hash = HashNavigation.parseUrlHash(window.location.hash);\n    if (hash.path && hash.path.length > 0) {\n      // Left-side panel selector.\n      if (['register','settings','edit','cred','reset','newtpk','archive','contacts',''].includes(hash.path[0])) {\n        this.setState({sidePanelSelected: hash.path[0]});\n      } else {\n        console.log(\"Unknown sidepanel view\", hash.path[0]);\n      }\n\n      // Topic for MessagesView selector.\n      if (hash.path.length > 1 && hash.path[1] != this.state.topicSelected) {\n        this.setState({\n          topicSelected: Tinode.topicType(hash.path[1]) ? hash.path[1] : null\n        });\n      }\n    } else {\n      // Empty hashpath\n      this.setState({sidePanelSelected: ''});\n    }\n\n    // Save validation credentials, if available.\n    if (hash.params.method) {\n      this.setState({ credMethod: hash.params.method });\n    }\n    if (hash.params.code) {\n      this.setState({ credCode: hash.params.code });\n    }\n\n    // Additional parameters of panels.\n    this.setState({\n      showInfoPanel: hash.params.info,\n      newTopicTabSelected: hash.params.tab\n    });\n  }\n\n  handleOnline(online) {\n    var newState = {liveConnection: online};\n    if (online) {\n      this.handleError('', null);\n    } else {\n      this.handleError(\"No connection\", 'warn');\n    }\n    this.setState({liveConnection: online});\n  }\n\n  // Handling read notifications here to be able to pause\n  // them then the window/tab is not visible.\n  handleAppVisibility(visible, callback) {\n    clearTimeout(this.readTimer);\n    this.readTimerCallback = callback;\n    if (visible && callback) {\n      this.readTimer = setTimeout(callback, READ_DELAY);\n    } else {\n      this.readTimer = null;\n    }\n  }\n\n  handleReadTimer(callback) {\n    this.handleAppVisibility(!document.hidden, callback);\n  }\n\n  handleVisibilityEvent() {\n    this.handleAppVisibility(!document.hidden, this.readTimerCallback);\n  }\n\n  handleError(err, level, action, actionText) {\n    this.setState({errorText: err, errorLevel: level, errorAction: action, errorActionText: actionText});\n  }\n\n  // User clicked Login button in the side panel.\n  handleLoginRequest(login, password) {\n    this.setState({\n      loginDisabled: true,\n      login: login,\n      password: password,\n      loadSpinnerVisible: true\n    });\n    this.handleError('', null);\n\n    if (this.tinode.isConnected()) {\n      this.doLogin(login, password, {meth: this.state.credMethod, resp: this.state.credCode});\n    } else {\n      this.tinode.connect().catch((err) => {\n        // Socket error\n        this.setState({loginDisabled: false});\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // Connection succeeded.\n  handleConnected() {\n    var params = this.tinode.getServerInfo();\n    this.setState({\n      serverVersion: params.ver + ' ' + (params.build ? params.build : 'none') + '; '\n    });\n    this.doLogin(this.state.login, this.state.password, {meth: this.state.credMethod, resp: this.state.credCode});\n  }\n\n  // Called for each auto-reconnect iteration.\n  handleAutoreconnectIteration(sec, prom) {\n    clearInterval(this.reconnectCountdown);\n\n    if (sec < 0) {\n      // Clear error\n      this.handleError();\n      return;\n    }\n\n    if (prom) {\n      // Reconnecting now\n      prom.then(() => {\n        // Reconnected: clear error\n        this.handleError();\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n      return;\n    }\n\n    const {formatHTMLMessage} = this.props.intl;\n    let count = sec / 1000;\n    count = count | count;\n    this.reconnectCountdown = setInterval(() => {\n      const timeLeft = (count > 99) ? secondsToTime(count) : count;\n      this.handleError(\n        formatHTMLMessage(messages.reconnect_countdown, {seconds: timeLeft}),\n        'warn',\n        () => {\n          clearInterval(this.reconnectCountdown);\n          this.tinode.reconnect();\n        },\n        formatHTMLMessage(messages.reconnect_now)\n      );\n      count -= 1;\n    }, 1000);\n  }\n\n  // Connection lost\n  handleDisconnect(err) {\n    this.setState({\n      connected: false,\n      ready: false,\n      topicSelectedOnline: false,\n      errorText: err && err.message ? err.message : \"Disconnected\",\n      errorLevel: err && err.message ? 'err' : 'warn',\n      loginDisabled: false,\n      contextMenuVisible: false,\n      serverVersion: \"no connection\"\n    });\n  }\n\n  doLogin(login, password, cred) {\n    if (this.tinode.isAuthenticated()) {\n      // Already logged in. Go to default screen.\n      HashNavigation.navigateTo('');\n      return;\n    }\n    // Sanitize and package credentail.\n    cred = Tinode.credential(cred);\n    // Try to login with login/password. If they are not available, try token. If no token, ask for login/password.\n    let promise = null;\n    let token = this.tinode.getAuthToken();\n    if (login && password) {\n      this.setState({password: null});\n      promise = this.tinode.loginBasic(login, password, cred);\n    } else if (token) {\n      promise = this.tinode.loginToken(token.token, cred);\n    }\n\n    if (promise) {\n      promise.then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text === 'validate credentials') {\n          this.setState({loadSpinnerVisible: false});\n          if (cred) {\n            this.handleError(\"Code does not match\", 'warn');\n          }\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful();\n        }\n      }).catch((err) => {\n        // Login failed, report error.\n        this.setState({\n          loginDisabled: false,\n          credMethod: undefined,\n          credCode: undefined,\n          loadSpinnerVisible: false\n        });\n        this.handleError(err.message, 'err');\n        localStorage.removeItem('auth-token');\n        HashNavigation.navigateTo('');\n      });\n    } else {\n      // No login credentials provided.\n      // Make sure we are on the login page.\n      HashNavigation.navigateTo('');\n      this.setState({loginDisabled: false});\n    }\n  }\n\n  handleCredentialsRequest(params) {\n    var parsed = HashNavigation.parseUrlHash(window.location.hash);\n    parsed.path[0] = 'cred';\n    parsed.params['method'] = params.cred[0];\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n  }\n\n  handleLoginSuccessful() {\n    this.handleError('', null);\n\n    // Refresh authentication token.\n    if (LocalStorageUtil.getObject('keep-logged-in')) {\n      LocalStorageUtil.setObject('auth-token', this.tinode.getAuthToken());\n    }\n    // Logged in fine, subscribe to 'me' attaching callbacks from the contacts view.\n    var me = this.tinode.getMeTopic();\n    me.onMetaDesc = this.tnMeMetaDesc;\n    me.onContactUpdate = this.tnMeContactUpdate;\n    me.onSubsUpdated = this.tnMeSubsUpdated;\n    this.setState({\n      connected: true,\n      credMethod: undefined,\n      credCode: undefined,\n      myUserId: this.tinode.getCurrentUserID()\n    });\n    // Subscribe, fetch topic desc, the list of subscriptions. Messages are not fetched.\n    me.subscribe(\n      me.startMetaQuery().\n        withLaterSub().\n        withDesc().\n        withTags().\n        withCred().\n        build()\n      ).catch((err) => {\n        this.tinode.disconnect();\n        localStorage.removeItem('auth-token');\n        this.handleError(err.message, 'err');\n        HashNavigation.navigateTo('');\n      }).finally(() => {\n        this.setState({loadSpinnerVisible: false});\n      });\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, 'contacts'));\n  }\n\n  tnMeMetaDesc(desc) {\n    if (desc && desc.public) {\n      this.setState({\n        sidePanelTitle: desc.public.fn,\n        sidePanelAvatar: makeImageUrl(desc.public.photo)\n      });\n    }\n  }\n\n  // Reactions to updates to the contact list.\n  tnMeContactUpdate(what, cont) {\n    if (what == 'on' || what == 'off') {\n      this.resetContactList();\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedOnline: (what == 'on')});\n      }\n    } else if (what == 'read') {\n      this.resetContactList();\n    } else if (what == 'msg') {\n      // Check if the topic is archived. If so, don't play a sound.\n      const topic = this.tinode.getTopic(cont.topic);\n      const archived = topic && topic.isArchived();\n\n      // New message received. Maybe the message is from the current user, then unread is 0.\n      if (cont.unread > 0 && this.state.messageSounds && !archived) {\n        // Skip update if the topic is currently open, otherwise the badge will annoyingly flash.\n        if (document.hidden || this.state.topicSelected != cont.topic) {\n          POP_SOUND.play();\n        }\n      }\n      // Reorder contact list to use possibly updated 'touched'.\n      this.resetContactList();\n    } else if (what == 'recv') {\n      // Explicitly ignoring \"recv\" -- it causes no visible updates to contact list.\n    } else if (what == 'gone' || what == 'unsub') {\n      // Topic deleted or user unsubscribed. Remove topic from view.\n      // If the currently selected topic is gone, clear the selection.\n      if (this.state.topicSelected == cont.topic) {\n        this.handleTopicSelected(null);\n      }\n      // Redraw without the deleted topic.\n      this.resetContactList();\n    } else if (what == 'acs') {\n      // Permissions changed. If it's for the currently selected topic,\n      // update the views.\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedAcs: cont.acs});\n      }\n    } else if (what == 'del') {\n      // TODO: messages deleted (hard or soft) -- update pill counter.\n    } else if (what == 'upd') {\n      // upd - handled by the SDK. Explicitly ignoring here.\n    } else {\n      // TODO(gene): handle other types of notifications:\n      // * ua -- user agent changes (maybe display a pictogram for mobile/desktop).\n      console.log(\"Unsupported (yet) presence update:\" + what + \" in: \" + cont.topic);\n    }\n  }\n\n  tnMeSubsUpdated(unused) {\n    this.resetContactList();\n  }\n\n  // Merge search results and contact list to create a single flat\n  // list of kown contacts for GroupManager to use.\n  static prepareSearchableContacts(chatList, foundContacts) {\n    let merged = {};\n\n    // For chatList topics merge only p2p topics and convert them to the\n    // same format as foundContacts.\n    for (const c of chatList) {\n      if (Tinode.topicType(c.topic) == 'p2p') {\n          merged[c.topic] = {\n            user: c.topic,\n            updated: c.updated,\n            public: c.public,\n            private: c.private,\n            acs: c.acs\n          };\n      }\n    }\n\n    // Add all foundCountacts if they have not been added already.\n    for (const c of foundContacts) {\n      if (!merged[c.user]) {\n        merged[c.user] = c;\n      }\n    }\n\n    return Object.values(merged);\n  }\n\n  resetContactList() {\n    const newState = {\n      chatList: []\n    };\n\n    if (!this.state.ready) {\n      newState.ready = true;\n    }\n\n    this.tinode.getMeTopic().contacts((c) => {\n      newState.chatList.push(c);\n      if (this.state.topicSelected == c.topic) {\n        newState.topicSelectedOnline = c.online;\n        newState.topicSelectedAcs = c.acs;\n      }\n    });\n    // Merge search results and chat list.\n    newState.searchableContacts = TinodeWeb.prepareSearchableContacts(newState.chatList, this.state.searchResults);\n    this.setState(newState);\n  }\n\n  // Sending \"received\" notifications\n  tnData(data) {\n    const topic = this.tinode.getTopic(data.topic);\n    if (topic.msgStatus(data) >= Tinode.MESSAGE_STATUS_SENT && data.from != this.state.myUserId) {\n      clearTimeout(this.receivedTimer);\n      this.receivedTimer = setTimeout(() => {\n        this.receivedTimer = undefined;\n        topic.noteRecv(data.seq);\n      }, RECEIVED_DELAY);\n    }\n  }\n\n  /* Fnd topic: find contacts by tokens */\n  tnInitFind() {\n    const fnd = this.tinode.getFndTopic();\n    fnd.onSubsUpdated = this.tnFndSubsUpdated;\n    if (fnd.isSubscribed()) {\n      this.tnFndSubsUpdated();\n    } else {\n      fnd.subscribe(fnd.startMetaQuery().withSub().build()).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  tnFndSubsUpdated() {\n    const foundContacts = [];\n    // Don't attempt to create P2P topics which already exist. Server will reject the duplicates.\n    this.tinode.getFndTopic().contacts((s) => {\n      foundContacts.push(s);\n    });\n    this.setState({\n      searchResults: foundContacts,\n      searchableContacts: TinodeWeb.prepareSearchableContacts(this.state.chatList, foundContacts)\n    });\n  }\n\n  /** Called when the user enters a contact into the contact search field in the NewAccount panel\n    @param query {Array} is an array of contacts to search for\n   */\n  handleSearchContacts(query) {\n    const fnd = this.tinode.getFndTopic();\n    fnd.setMeta({desc: {public: query}}).then((ctrl) => {\n      return fnd.getMeta(fnd.startMetaQuery().withSub().build());\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  // User clicked on a contact in the side panel or deleted a contact.\n  handleTopicSelected(topicName, unused_index, online, acs) {\n    // Clear newTopicParams after use.\n    if (this.state.newTopicParams && this.state.newTopicParams._topicName != topicName) {\n      this.setState({\n        newTopicParams: null\n      });\n    }\n\n    if (topicName) {\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'topic-view',\n        showInfoPanel: false\n      });\n      // Different contact selected.\n      if (this.state.topicSelected != topicName) {\n        this.setState({\n          topicSelectedOnline: online,\n          topicSelectedAcs: acs\n        });\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', topicName));\n      }\n    } else {\n      // Currently selected contact deleted\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'sidepanel',\n        topicSelectedOnline: false,\n        topicSelectedAcs: null,\n        showInfoPanel: false\n      });\n\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic('', null));\n    }\n  }\n\n  // In mobile view user requested to show sidepanel\n  handleHideMessagesView() {\n    this.setState({\n      mobilePanel: 'sidepanel'\n    });\n    HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, null));\n  }\n\n  // User is sending a message, either plain text or a drafty object, possibly\n  // with attachments.\n  handleSendMessage(msg, promise, uploader) {\n    const topic = this.tinode.getTopic(this.state.topicSelected);\n\n    msg = topic.createMessage(msg, false);\n    // The uploader is used to show progress.\n    msg._uploader = uploader;\n\n    if (!topic.isSubscribed()) {\n      if (!promise) {\n        promise = Promise.resolve();\n      }\n      promise = promise.then(() => { return topic.subscribe(); });\n    }\n\n    if (promise) {\n      promise = promise.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n\n    topic.publishDraft(msg, promise)\n      .then((ctrl) => {\n        if (topic.isArchived()) {\n          return topic.archive(false);\n        }\n      })\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleNewChatInvitation(topicName, action) {\n    const topic = this.tinode.getTopic(topicName);\n    let response = null;\n    switch (action) {\n      case 'accept':\n        // Accept given permissions.\n        const mode = topic.getAccessMode().getGiven();\n        response = topic.setMeta({sub: {mode: mode}});\n        if (topic.getType() == 'p2p') {\n          // For P2P topics change 'given' permission of the peer too.\n          // In p2p topics the other user has the same name as the topic.\n          response = response.then((ctrl) => {\n            topic.setMeta({sub: {user: topicName, mode: mode}});\n          });\n        }\n        break;\n      case 'delete':\n        // Ignore invitation by deleting it.\n        response = topic.delTopic();\n        break;\n      case 'block':\n        // Ban the topic making futher invites impossible.\n        // Just self-ban.\n        const am = topic.getAccessMode().updateWant('-JP').getWant();\n        response = topic.setMeta({sub: {mode: am}}).then((ctrl) => {\n          return this.handleTopicSelected(null);\n        });\n        break;\n      default:\n        console.log(\"Unknown invitation action\", '\"' + action + '\"\"');\n    }\n\n    if (response != null) {\n      response.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // User chose a Sign Up menu item.\n  handleNewAccount() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, 'register'));\n  }\n\n  // Actual registration of a new account.\n  handleNewAccountRequest(login_, password_, public_, cred_, tags_) {\n    this.tinode.connect(this.state.serverAddress)\n      .then(() => {\n        return this.tinode.createAccountBasic(login_, password_,\n          {public: public_, tags: tags_, cred: Tinode.credential(cred_)});\n      }).then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text == 'validate credentials') {\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful(this);\n        }\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleUpdateAccountRequest(password, pub, defacs) {\n    if (pub || defacs) {\n      const params = {};\n      if (pub) {\n        params.public = pub;\n      }\n      if (defacs) {\n        params.defacs = defacs;\n      }\n      this.tinode.getMeTopic().setMeta({desc: params}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n    if (password) {\n      this.tinode.updateAccountBasic(null, this.tinode.getCurrentLogin(), password).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleUpdateAccountTagsRequest(tags) {\n    this.tinode.getMeTopic().setMeta({tags: tags})\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  // User chose Settings menu item.\n  handleSettings() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'edit' : 'settings'));\n  }\n\n  // User updated global parameters.\n  handleGlobalSettings(settings) {\n    let serverAddress = settings.serverAddress || this.state.serverAddress;\n    let transport = settings.transport || this.state.transport;\n    if (this.tinode) {\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.tinode = TinodeWeb.tnSetup(serverAddress, transport);\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n\n    this.setState({\n      serverAddress: serverAddress,\n      transport: transport\n    });\n    LocalStorageUtil.setObject('settings', {\n      serverAddress: serverAddress,\n      transport: transport\n    });\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, ''));\n  }\n\n  // User chose 'Archived chats'.\n  handleShowArchive() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'archive' : ''));\n  }\n\n  // Initialize desktop alerts = push notifications.\n  initDesktopAlerts() {\n    // Google could not be bothered to mention that\n    // onTokenRefresh is never called.\n    this.fbPush.onTokenRefresh(() => {\n      this.requestPushToken();\n    });\n\n    this.fbPush.onMessage((payload) => {\n      // No need to do anything about it.\n      // All the magic happends in the service worker.\n    });\n  }\n\n  togglePushToken(enabled) {\n    if (enabled) {\n      if (!this.state.firebaseToken) {\n        this.fbPush.requestPermission().then(() => {\n          this.requestPushToken();\n        }).catch((err) => {\n          this.handleError(err.message, 'err');\n          this.setState({desktopAlerts: false, firebaseToken: null});\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n          console.log(\"Failed to get permission to notify.\", err);\n        });\n      } else {\n        this.setState({desktopAlerts: true});\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n      }\n    } else if (this.state.firebaseToken) {\n      this.fbPush.deleteToken(this.state.firebaseToken).catch((err) => {\n        console.log(\"Unable to delete token.\", err);\n      }).finally(() => {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        localStorage.removeItem('firebase-token');\n        this.setState({desktopAlerts: false, firebaseToken: null});\n      });\n    } else {\n      this.setState({desktopAlerts: false, firebaseToken: null});\n      LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n    }\n  }\n\n  requestPushToken() {\n    this.fbPush.getToken().then((refreshedToken) => {\n      if (refreshedToken != this.state.firebaseToken) {\n        this.tinode.setDeviceToken(refreshedToken, true);\n        LocalStorageUtil.setObject('firebase-token', refreshedToken);\n      }\n      this.setState({firebaseToken: refreshedToken, desktopAlerts: true});\n      LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n      console.log(\"Failed to retrieve firebase token\", err);\n    });\n  }\n\n  handleToggleMessageSounds(enabled) {\n    this.setState({messageSounds: enabled});\n    LocalStorageUtil.updateObject('settings', {\n      messageSoundsOff: !enabled\n    });\n  }\n\n  handleCredAdd(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.setMeta({cred: {meth: method, val: value}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredDelete(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.delCredential(method, value).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredConfirm(method, response) {\n    this.handleCredentialsRequest({cred: [method]});\n  }\n\n  // User clicked Cancel button in Setting or Sign Up panel.\n  handleSidepanelCancel() {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    parsed.path[0] = this.state.myUserId ? 'contacts' : '';\n    if (parsed.params) {\n      delete parsed.params.code;\n      delete parsed.params.method;\n      delete parsed.params.tab;\n    }\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n    this.setState({errorText: '', errorLevel: null});\n  }\n\n  // User clicked a (+) menu item.\n  handleNewTopic() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, 'newtpk'));\n  }\n\n  // Request to start a new topic. New P2P topic requires peer's name.\n  handleNewTopicRequest(peerName, pub, priv, tags) {\n\n    const topicName = peerName || this.tinode.newGroupTopicName();\n    const params = {\n      _topicName: topicName,\n    };\n    if (peerName) {\n      // Because we are initialing the subscription, set 'want' to all permissions.\n      params.sub = {mode: DEFAULT_P2P_ACCESS_MODE};\n      // Give the other user all permissions too.\n      params.desc = {defacs: {auth: DEFAULT_P2P_ACCESS_MODE}};\n    } else {\n      params.desc = {public: pub, private: {comment: priv}};\n      params.tags = tags;\n    }\n    this.setState({newTopicParams: params}, () => {this.handleTopicSelected(topicName)});\n  }\n\n  // New topic was creted, here is the new topic name.\n  handleNewTopicCreated(oldName, newName) {\n    if (this.state.topicSelected == oldName && oldName != newName) {\n      // If the current URl contains the old topic name, replace it with new.\n      // Update the name of the selected topic first so the navigator doen't clear\n      // the state.\n      this.setState({topicSelected: newName}, () => {\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', newName));\n      });\n    }\n  }\n\n  handleTopicUpdateRequest(topicName, pub, priv, permissions) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const params = {};\n      if (pub) {\n        params.public = pub;\n      }\n      if (priv) {\n        params.private = (priv === Tinode.DEL_CHAR) ?\n          Tinode.DEL_CHAR : {comment: priv};\n      }\n      if (permissions) {\n        params.defacs = permissions;\n      }\n      topic.setMeta({desc: params}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleChangePermissions(topicName, mode, uid) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const am = topic.getAccessMode();\n      if (uid) {\n        am.updateGiven(mode);\n        mode = am.getGiven();\n      } else {\n        am.updateWant(mode);\n        mode = am.getWant();\n      }\n      topic.setMeta({sub: {user: uid, mode: mode}}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleTagsUpdated(topicName, tags) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      topic.setMeta({tags: tags}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleLogout() {\n    updateFavicon(0);\n\n    // Remove stored data.\n    localStorage.removeItem('auth-token');\n    localStorage.removeItem('firebase-token');\n    localStorage.removeItem('settings');\n    if (this.state.firebaseToken) {\n      this.fbPush.deleteToken(this.state.firebaseToken)\n    }\n\n    if (this.tinode) {\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.setState(this.getBlankState());\n    this.tinode = TinodeWeb.tnSetup(this.state.serverAddress, this.state.transport);\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    HashNavigation.navigateTo('');\n  }\n\n  handleDeleteMessagesRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Request hard-delete all messages.\n    topic.delMessagesAll(true).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleLeaveUnsubRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.leave(true).then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleBlockTopicRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleReportTopic(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Publish spam report.\n    this.tinode.publish(Tinode.TOPIC_SYS, Tinode.Drafty.attachJSON(null, {\n      'action': 'report',\n      'target': topicName\n    }));\n\n    // Remove J and P permissions.\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleShowContextMenu(params, menuItems) {\n    this.setState({\n      contextMenuVisible: true,\n      contextMenuClickAt: {x: params.x, y: params.y},\n      contextMenuParams: params,\n      contextMenuItems: menuItems || this.defaultTopicContextMenu(params.topicName),\n      contextMenuBounds: ReactDOM.findDOMNode(this).getBoundingClientRect()\n    });\n  }\n\n  defaultTopicContextMenu(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    const {formatMessage} = this.props.intl;\n\n    let muted = false, blocked = false, self_blocked = false, subscribed = false, deleter = false, archived = false;\n    if (topic) {\n      subscribed = topic.isSubscribed();\n      archived = topic.isArchived();\n\n      const acs = topic.getAccessMode();\n      if (acs) {\n        muted = acs.isMuted();\n        blocked = !acs.isJoiner();\n        self_blocked = !acs.isJoiner('want');\n        deleter = acs.isDeleter();\n      }\n    }\n\n    return [\n      subscribed ? {title: formatMessage({id: 'menu_item_info'}), handler: this.handleShowInfoView} : null,\n      subscribed ? 'messages_clear' : null,\n      subscribed && deleter ? 'messages_clear_hard' : null,\n      muted ? (blocked ? null : 'topic_unmute') : 'topic_mute',\n      self_blocked ? 'topic_unblock' : 'topic_block',\n      !archived ? 'topic_archive' : null,\n      'topic_delete'\n    ];\n  }\n\n  handleHideContextMenu() {\n    this.setState({\n      contextMenuVisible: false,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuBounds: null\n    });\n  }\n\n  handleContextMenuAction(action, promise, params) {\n    if (action == 'topic_archive') {\n      if (promise && params.topicName && params.topicName == this.state.topicSelected) {\n        promise.then(() => {\n          this.handleTopicSelected(null);\n        });\n      }\n    }\n  }\n\n  handleShowAlert(title, content, onConfirm, confirm, onReject, reject) {\n    this.setState({\n      alertVisible: true,\n      alertParams: {\n        title: title,\n        content: content,\n        onConfirm: onConfirm,\n        confirm: confirm,\n        onReject: onReject,\n        reject: reject\n      }\n    });\n  }\n\n  handleShowInfoView() {\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'info', true));\n    this.setState({showInfoPanel: true});\n  }\n\n  handleHideInfoView() {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'info'));\n    this.setState({showInfoPanel: false});\n  }\n\n  handleMemberUpdateRequest(topicName, added, removed) {\n    if (!topicName) {\n      return;\n    }\n\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    if (added && added.length > 0) {\n      added.map((uid) => {\n        topic.invite(uid, null).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n\n    if (removed && removed.length > 0) {\n      removed.map((uid) => {\n        topic.delSubscription(uid).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n  }\n\n  handleValidateCredentialsRequest(cred, code) {\n    if (this.tinode.isAuthenticated()) {\n      const me = this.tinode.getMeTopic();\n      me.setMeta({cred: {meth: cred, resp: code}})\n        .then(() => {\n          HashNavigation.navigateTo('');\n        })\n        .catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n    } else {\n      this.setState({credMethod: cred, credCode: code});\n      this.doLogin(null, null, {meth: cred, resp: code});\n    }\n  }\n\n  handlePasswordResetRequest(method, value) {\n    // If already connected, connnect() will return a resolved promise.\n    this.tinode.connect()\n      .then(() => {\n        return this.tinode.requestResetAuthSecret('basic', method, value);\n      })\n      .catch((err) => {\n        // Socket error\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleResetPassword(scheme, newPassword, token) {\n    token = base64ReEncode(token);\n    if (!token)  {\n      this.handleError(\"Invalid security token\", 'err');\n    } else {\n      this.tinode.connect()\n        .then(() => {\n          return this.tinode.updateAccountBasic(null, null, newPassword, {token: token});\n        })\n        .catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"app-container\">\n        {this.state.contextMenuVisible ?\n          <ContextMenu\n            tinode={this.tinode}\n            bounds={this.state.contextMenuBounds}\n            clickAt={this.state.contextMenuClickAt}\n            params={this.state.contextMenuParams}\n            items={this.state.contextMenuItems}\n            hide={this.handleHideContextMenu}\n            onShowAlert={this.handleShowAlert}\n            onAction={this.handleContextMenuAction}\n            onTopicRemoved={(topicName) => {\n              if (topicName == this.state.topicSelected) {\n                this.handleTopicSelected(null);\n              }\n            }}\n            onError={this.handleError} />\n          :\n          null\n        }\n        <Alert\n          visible={this.state.alertVisible}\n          title={this.state.alertParams.title}\n          content={this.state.alertParams.content}\n          onReject={this.state.alertParams.onReject ? (() => { this.setState({alertVisible: false}); }) : null}\n          reject={this.state.alertParams.reject}\n          onConfirm={() => { this.setState({alertVisible: false}); this.state.alertParams.onConfirm(); }}\n          confirm={this.state.alertParams.confirm}\n          />\n        <SidepanelView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          displayMobile={this.state.displayMobile}\n          hideSelf={this.state.displayMobile && this.state.mobilePanel !== 'sidepanel'}\n          state={this.state.sidePanelSelected}\n          title={this.state.sidePanelTitle}\n          avatar={this.state.sidePanelAvatar}\n          login={this.state.login}\n          myUserId={this.state.myUserId}\n          loginDisabled={this.state.loginDisabled}\n          loadSpinnerVisible={this.state.loadSpinnerVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          topicSelected={this.state.topicSelected}\n          chatList={this.state.chatList}\n          credMethod={this.state.credMethod}\n          credCode={this.state.credCode}\n\n          transport={this.state.transport}\n          messageSounds={this.state.messageSounds}\n          desktopAlerts={this.state.desktopAlerts}\n          desktopAlertsEnabled={this.state.desktopAlertsEnabled}\n          serverAddress={this.state.serverAddress}\n          onGlobalSettings={this.handleGlobalSettings}\n\n          onSignUp={this.handleNewAccount}\n          onSettings={this.handleSettings}\n          onLoginRequest={this.handleLoginRequest}\n          onCreateAccount={this.handleNewAccountRequest}\n          onUpdateAccount={this.handleUpdateAccountRequest}\n          onUpdateAccountTags={this.handleUpdateAccountTagsRequest}\n          onTogglePushNotifications={this.togglePushToken}\n          onToggleMessageSounds={this.handleToggleMessageSounds}\n          onCredAdd={this.handleCredAdd}\n          onCredDelete={this.handleCredDelete}\n          onCredConfirm={this.handleCredConfirm}\n          onTopicSelected={this.handleTopicSelected}\n          onCreateTopic={this.handleNewTopicRequest}\n          onNewTopic={this.handleNewTopic}\n          onLogout={this.handleLogout}\n          onCancel={this.handleSidepanelCancel}\n          onError={this.handleError}\n          onValidateCredentials={this.handleValidateCredentialsRequest}\n          onPasswordResetRequest={this.handlePasswordResetRequest}\n          onResetPassword={this.handleResetPassword}\n          onShowArchive={this.handleShowArchive}\n\n          onInitFind={this.tnInitFind}\n          searchResults={this.state.searchResults}\n          onSearchContacts={this.handleSearchContacts}\n\n          showContextMenu={this.handleShowContextMenu} />\n\n        <MessagesView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          ready={this.state.ready}\n          online={this.state.topicSelectedOnline}\n          acs={this.state.topicSelectedAcs}\n          displayMobile={this.state.displayMobile}\n          viewportWidth={this.state.viewportWidth}\n          viewportHeight={this.state.viewportHeight}\n          hideSelf={this.state.displayMobile &&\n            (this.state.mobilePanel !== 'topic-view' || this.state.showInfoPanel)}\n          topic={this.state.topicSelected}\n          myUserId={this.state.myUserId}\n          serverVersion={this.state.serverVersion}\n          serverAddress={this.state.serverAddress}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          newTopicParams={this.state.newTopicParams}\n\n          onHideMessagesView={this.handleHideMessagesView}\n          onData={this.tnData}\n          onError={this.handleError}\n          onNewTopicCreated={this.handleNewTopicCreated}\n          readTimerHandler={this.handleReadTimer}\n          showContextMenu={this.handleShowContextMenu}\n          onChangePermissions={this.handleChangePermissions}\n          onNewChat={this.handleNewChatInvitation}\n          sendMessage={this.handleSendMessage} />\n\n        {this.state.showInfoPanel ?\n          <InfoView\n            tinode={this.tinode}\n            connected={this.state.connected}\n            displayMobile={this.state.displayMobile}\n            topic={this.state.topicSelected}\n            searchableContacts={this.state.searchableContacts}\n            myUserId={this.state.myUserId}\n\n            errorText={this.state.errorText}\n            errorLevel={this.state.errorLevel}\n            errorAction={this.state.errorAction}\n            errorActionText={this.state.errorActionText}\n\n            onTopicDescUpdate={this.handleTopicUpdateRequest}\n            onCancel={this.handleHideInfoView}\n            onShowAlert={this.handleShowAlert}\n            onChangePermissions={this.handleChangePermissions}\n            onMemberUpdateRequest={this.handleMemberUpdateRequest}\n            onDeleteMessages={this.handleDeleteMessagesRequest}\n            onLeaveTopic={this.handleLeaveUnsubRequest}\n            onBlockTopic={this.handleBlockTopicRequest}\n            onReportTopic={this.handleReportTopic}\n            onAddMember={this.handleManageGroupMembers}\n            onTopicTagsUpdate={this.handleTagsUpdated}\n            onInitFind={this.tnInitFind}\n            onError={this.handleError}\n\n            showContextMenu={this.handleShowContextMenu}\n            />\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(TinodeWeb);\n","// Put all packages together.\n// Used to generate umd/index.prod.js\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { IntlProvider } from 'react-intl';\n\nimport allMessages from './messages.json';\nimport TinodeWeb from './views/tinode-web.jsx';\nimport HashNavigation from './lib/navigation.js';\n\n// Detect human language to use in the UI:\n//  Check parameters from URL hash #?hl=ru, then browser, then use 'en' as a fallback.\nconst { params } = HashNavigation.parseUrlHash(window.location.hash);\nconst language = (params && params.hl) ||\n  (navigator.languages && navigator.languages[0]) ||\n  navigator.language ||\n  navigator.userLanguage ||\n  'en';\n\n// Get the base language 'en' from a more specific 'en_GB' or 'en-US' as a partial fallback.\nconst baseLanguage = language.toLowerCase().split(/[-_]/)[0];\n\n// Try the full locale first, then the locale without the region code, fallback to 'en'.\nconst messages =\n  allMessages[language] ||\n  allMessages[baseLanguage] ||\n  allMessages.en;\n\nReactDOM.render(\n  <IntlProvider locale={language} messages={messages} textComponent={React.Fragment}>\n    <TinodeWeb />\n  </IntlProvider>,\n  document.getElementById('mountPoint')\n);\n"],"sourceRoot":""}