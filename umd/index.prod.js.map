{"version":3,"sources":["webpack://tinode-webapp/webpack/bootstrap","webpack://tinode-webapp/webpack/runtime/compat get default export","webpack://tinode-webapp/webpack/runtime/define property getters","webpack://tinode-webapp/webpack/runtime/hasOwnProperty shorthand","webpack://tinode-webapp/external \"React\"","webpack://tinode-webapp/external \"ReactDOM\"","webpack://tinode-webapp/external \"ReactIntl\"","webpack://tinode-webapp/external \"firebase\"","webpack://tinode-webapp/external \"Tinode\"","webpack://tinode-webapp/external [\"firebase\",\"messaging\"]","webpack://tinode-webapp/./src/widgets/alert.jsx","webpack://tinode-webapp/./src/version.js","webpack://tinode-webapp/./src/config.js","webpack://tinode-webapp/./src/widgets/context-menu.jsx","webpack://tinode-webapp/./src/lib/strformat.js","webpack://tinode-webapp/./src/widgets/letter-tile.jsx","webpack://tinode-webapp/./src/lib/blob-helpers.js","webpack://tinode-webapp/./src/widgets/avatar-upload.jsx","webpack://tinode-webapp/./src/widgets/checkbox.jsx","webpack://tinode-webapp/./src/widgets/contact-badges.jsx","webpack://tinode-webapp/./src/lib/utils.js","webpack://tinode-webapp/./src/widgets/received-marker.jsx","webpack://tinode-webapp/./src/widgets/unread-badge.jsx","webpack://tinode-webapp/./src/widgets/contact.jsx","webpack://tinode-webapp/./src/widgets/contact-action.jsx","webpack://tinode-webapp/./src/widgets/contact-list.jsx","webpack://tinode-webapp/./src/widgets/menu-cancel.jsx","webpack://tinode-webapp/./src/widgets/error-panel.jsx","webpack://tinode-webapp/./src/widgets/chip.jsx","webpack://tinode-webapp/./src/widgets/chip-input.jsx","webpack://tinode-webapp/./src/widgets/group-manager.jsx","webpack://tinode-webapp/./src/widgets/visible-password.jsx","webpack://tinode-webapp/./src/widgets/in-place-edit.jsx","webpack://tinode-webapp/./src/widgets/more-button.jsx","webpack://tinode-webapp/./src/widgets/permissions-editor.jsx","webpack://tinode-webapp/./src/widgets/tag-manager.jsx","webpack://tinode-webapp/./src/views/info-view.jsx","webpack://tinode-webapp/./src/widgets/file-progress.jsx","webpack://tinode-webapp/./src/widgets/attachment.jsx","webpack://tinode-webapp/./src/widgets/uploading-image.jsx","webpack://tinode-webapp/./src/widgets/chat-message.jsx","webpack://tinode-webapp/./src/widgets/send-message.jsx","webpack://tinode-webapp/./src/widgets/doc-preview.jsx","webpack://tinode-webapp/./src/widgets/group-subs.jsx","webpack://tinode-webapp/./src/widgets/image-preview.jsx","webpack://tinode-webapp/./src/widgets/invitation.jsx","webpack://tinode-webapp/./src/widgets/load-spinner.jsx","webpack://tinode-webapp/./src/views/logo-view.jsx","webpack://tinode-webapp/./src/lib/navigation.js","webpack://tinode-webapp/./src/views/messages-view.jsx","webpack://tinode-webapp/./src/widgets/button-back.jsx","webpack://tinode-webapp/./src/widgets/menu-contacts.jsx","webpack://tinode-webapp/./src/widgets/menu-start.jsx","webpack://tinode-webapp/./src/widgets/side-navbar.jsx","webpack://tinode-webapp/./src/views/contacts-view.jsx","webpack://tinode-webapp/./src/lib/local-storage.js","webpack://tinode-webapp/./src/views/create-account-view.jsx","webpack://tinode-webapp/./src/views/edit-account-view.jsx","webpack://tinode-webapp/./src/views/acc-general-view.jsx","webpack://tinode-webapp/./src/views/acc-notifications-view.jsx","webpack://tinode-webapp/./src/views/acc-security-view.jsx","webpack://tinode-webapp/./src/views/acc-support-view.jsx","webpack://tinode-webapp/./src/views/login-view.jsx","webpack://tinode-webapp/./src/widgets/new-topic-by-id.jsx","webpack://tinode-webapp/./src/widgets/new-topic-group.jsx","webpack://tinode-webapp/./src/widgets/search-contacts.jsx","webpack://tinode-webapp/./src/views/new-topic-view.jsx","webpack://tinode-webapp/./src/views/password-reset-view.jsx","webpack://tinode-webapp/./src/widgets/host-selector.jsx","webpack://tinode-webapp/./src/views/settings-view.jsx","webpack://tinode-webapp/./src/views/validation-view.jsx","webpack://tinode-webapp/./src/views/sidepanel-view.jsx","webpack://tinode-webapp/./src/lib/host-name.js","webpack://tinode-webapp/./src/views/tinode-web.jsx","webpack://tinode-webapp/./src/index.js"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","React","ReactDOM","ReactIntl","firebase","messaging","Tinode","Alert","render","this","props","visible","className","title","content","onReject","onClick","reject","FormattedMessage","id","onConfirm","confirm","APP_NAME","KNOWN_HOSTS","hosted","local","DEFAULT_HOST","KEYPRESS_DELAY","DEFAULT_P2P_ACCESS_MODE","REM_SIZE","AVATAR_SIZE","MAX_INBAND_ATTACHMENT_SIZE","MAX_EXTERN_ATTACHMENT_SIZE","MAX_IMAGE_DIM","MAX_TITLE_LENGTH","messages","defineMessages","info","clear_messages","clear_for_all","delete_for_all","send_retry","mute","unmute","topic_delete","topic_delete_warning","unblock","block","topic_block_warning","member_delete","archive","ContextMenu","constructor","super","formatMessage","intl","handlePageClick","bind","handleEscapeKey","handleClick","MenuItems","handler","params","errorHandler","onShowAlert","menu_item_clear_messages","deleteMessages","menu_item_clear_messages_for_all","delete","retryMessage","topicPermissionSetter","menu_item_block","then","ctrl","onTopicRemoved","topicName","menu_item_delete_topic","topic","tinode","getTopic","delTopic","catch","err","message","console","log","user","delSubscription","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","e","contains","target","preventDefault","stopPropagation","hide","keyCode","item","items","currentTarget","dataset","onAction","onError","all","hard","cancelSend","seq","delMessagesAll","delMessagesList","flushMessage","msg","createMessage","publishDraft","mode","result","updateMode","count","menu","map","push","data-id","vSize","length","position","left","bounds","right","clickAt","x","top","bottom","y","style","injectIntl","shortDateFormat","locale","window","navigator","userLanguage","language","now","Date","getFullYear","getMonth","getDate","toLocaleTimeString","hour12","hour","minute","toLocaleDateString","month","day","year","bytesToHumanSize","bytes","sizes","bucket","Math","min","floor","log2","pow","round","toFixed","LetterTile","avatar","isGroup","iconColor","abs","value","hash","i","charCodeAt","stringHash","trim","letter","charAt","alt","src","onerror","SUPPORTED_IMAGE_FORMATS","MIME_EXTENSIONS","makeImageUrl","photo","type","data","fitImageSize","width","height","maxWidth","maxHeight","forceSquare","scale","size","dstWidth","dstHeight","srcWidth","srcHeight","xoffset","yoffset","imageScaled","fileOrBlob","maxSize","onSuccess","img","Image","crossOrigin","onload","async","URL","revokeObjectURL","dim","canvas","createElement","ctx","getContext","imageSmoothingEnabled","drawImage","mime","indexOf","blob","Promise","resolve","toBlob","clearRect","fname","idx","ext","at","lastIndexOf","substring","fileNameForMime","name","createObjectURL","fileToBase64","file","reader","FileReader","split","readAsDataURL","blobToBase64","AvatarUpload","state","dataUrl","handleFileUpload","componentDidUpdate","prevProps","setState","files","unused","base64bits","du","onImageChanged","randId","random","substr","readOnly","href","uid","accept","onChange","htmlFor","CheckBox","handleChange","checked","icon_mapping","ContactBadges","badges","b","icon","color","updateFavicon","oldIcon","getElementById","head","getElementsByTagName","newIcon","rel","removeChild","appendChild","vcard","fn","imageDataUrl","card","dataStart","arrayEqual","Array","isArray","sort","l","sanitizeUrl","url","allowedSchemes","replace","test","schemes","join","RegExp","deliveryMarker","received","ReceivedMarker","timestamp","sending","failed","marker","UnreadBadge","Contact","handleContextClick","onSelected","index","showContextMenu","pageY","pageX","online","slice","icon_badges","acs","showMode","getMode","isMuted","isJoiner","subtitle","preview","Drafty","draftyFormatter","comment","showCheckmark","selected","showOnline","isChannel","unread","values","el","attr","ContactAction","action","badge_you","badge_owner","ContactList","topicSelected","contactNodes","contactsCount","contacts","c","filterFunc","filter","private","toLowerCase","public","myUserId","isOwner","deliveryStatus","latestMessage","msgStatus","showUnread","connected","onTopicSelected","noScroll","dangerouslySetInnerHTML","__html","emptyListMessage","MenuCancel","onCancel","ErrorPanel","show","level","onClearError","warn","text","whiteSpace","actionText","Chip","handleCancel","invalid","noAvatar","required","ChipInput","deriveStateFromProps","input","focused","handleTextInput","removeChipAt","handleChipCancel","handleFocusGained","handleFocusLost","handleKeyDown","placeholder","chips","prompt","sortedChips","sortChips","staticMembers","chipIndex","indexChips","prevState","keep","normal","includes","concat","removed","onChipRemoved","onFocusLost","onEnter","undefined","avatarDisabled","onFocus","onBlur","onKeyDown","autoFocus","no_contacts","contacts_not_found_short","GroupManager","members","indexMembers","keepInitialMembers","requiredMember","contactFilter","noContactsMessage","selectedContacts","handleContactSelected","handleMemberRemoved","handleContactFilter","handleSubmit","m","delta","present","keepInitial","stat","sel","userId","status","splice","val","query","instance","added","keys","k","onSubmit","defaultMessage","doContactFiltering","VisiblePassword","handleVisibility","handeTextChange","handleEditingFinished","onFinished","setTimeout","activeElement","tabIndex","autoComplete","InPlaceEdit","active","initialValue","handleStartEditing","handlePasswordFinished","newValue","focus","event","checkValidity","fieldType","spanText","spanClass","MoreButton","open","handleToggle","onToggle","PermissionsEditor","names","joiner","writer","preser","approver","sharer","deleter","owner","skip","compare","userTitle","userAvatar","modeTitle","compareTitle","TagManager","tags","tagInput","activated","handleTagInput","handleAddTag","handleRemoveTag","nextProps","last","tag","maxTagCount","getServerLimit","onTagsChanged","minTagLength","maxTagLength","add_tags_prompt","defautMessage","requested","granted","edit_permissions","other_user","clear_messages_warning","delete_messages","delete_messages_warning","leave_chat","leave_chat_warning","block_contact","block_contact_warning","report_chat","report_chat_warning","InfoView","admin","muted","address","groupTopic","channel","fullName","selectedContact","access","modeGiven","modeWant","modeGiven2","modeWant2","auth","anon","contactList","showMemberPanel","showPermissionEditorFor","moreInfoExpanded","previousMetaDesc","previousSubsUpdated","previousTagsUpdated","resetSubs","resetDesc","onMetaDesc","onSubsUpdated","onTagsUpdated","handleFullNameUpdate","handlePrivateUpdate","handleImageChanged","handleMuted","handlePermissionsChanged","handleLaunchPermissionsEditor","handleHidePermissionsEditor","handleShowAddMembers","handleHideAddMembers","handleMemberUpdateRequest","handleDeleteMessages","handleLeave","handleBlock","handleReport","handleMemberSelected","handleMoreInfo","handleTagsUpdated","handleContextMenu","getType","newState","user2","subscriber","getGiven","getWant","subscribers","sub","defacs","getDefaultAccess","getAccessMode","isAdmin","isSharer","isDeleter","isGroupType","isChannelType","getMeta","startMetaQuery","withTags","build","desc","subs","onTopicDescUpdate","ignored","onChangePermissions","perm","userPermissionsEdited","which","toEdit","toCompare","toSkip","titleEdit","titleCompare","userPermissionsTitle","userPermissionsAvatar","editedPermissions","immutablePermissions","editedPermissionsTitle","immutablePermissionsTitle","editedPermissionsSkipped","onInitFind","onMemberUpdateRequest","onDeleteMessages","onLeaveTopic","onBlockTopic","onReportTopic","onTopicTagsUpdate","menuItems","displayMobile","errorLevel","errorText","searchableContacts","private_placeholder","more","no_members","FileProgress","progress","Attachment","downloader","downloadFile","filename","mimetype","getLargeFileHelper","download","loaded","uploading","onCancelUpload","cancel","helperFunc","isUrlRelative","downloadUrl","downloadWidget","UploadingImage","ChatMessage","uploader","onProgress","handleProgress","handleImagePreview","handleFormButtonClick","handleCancelUpload","onImagePreview","resp","act","ref","onFormResponse","MESSAGE_STATUS_FAILED","ratio","sideClass","deleted","sequence","response","bubbleClass","fullDisplay","userFrom","attachments","mimeType","att","userName","notFound","viewportWidth","authorizeURL","sanitizeImageUrl","inner","child","SendMessage","keypressTimestamp","getTime","handlePasteEvent","handleAttachImage","handleAttachFile","handleSend","handleKeyPress","handleMessageTyping","messageEditArea","disabled","onImageSuccess","onAttachmentSuccess","clipboardData","originalEvent","kind","getAsFile","imageFileScaledToBase64","imageFileToBase64","filePasted","bits","onAttachImage","onAttachFile","acceptBlank","noInput","onSendMessage","shiftKey","onKeyPress","messaging_disabled","messagePrompt","type_new_message","attachImage","click","attachFile","display","DocPreview","handleSendDoc","caption","onClose","mimeToIcon","default","image","video","iconFromMime","GroupSubs","usersOnline","totalCount","countToShow","some","overflow","ImagePreview","handleSendImage","assignWidth","node","getBoundingClientRect","maxlength","max","Invitation","handleButtonAction","evt","LoadSpinner","LogoView","version","serverVersion","serverAddress","HashNavigation","parts","path","forEach","part","decodeURIComponent","location","args","parsed","parseUrlHash","composeUrlHash","sidepanel","isUnconfirmed","ex","getExcessive","isPeerRestricted","ms","getMissing","MessagesView","getDerivedStateFromProps","leave","sendImageAttachment","sendFileAttachment","sendKeyPress","handleScrollReference","handleScrollEvent","handleDescChange","handleSubsUpdated","handleNewMessage","handleAllMessagesReceived","handleInfoReceipt","handleImagePostview","handleClosePreview","handleFormResponse","handleShowContextMenuMessage","handleNewChatAcceptance","handleEnablePeer","postReadNotification","clearNotificationQueue","readNotificationQueue","readNotificationTimer","messagesScroller","scrollTop","scrollHeight","scrollPosition","viewportHeight","onData","onAllMessagesReceived","onInfo","onPres","applicationVisible","isSubscribed","ready","newTopic","newTopicParams","_topicName","getQuery","withLaterDesc","withLaterSub","isReader","withLaterData","withLaterDel","fetchingMessages","setQuery","subscribe","code","onNewTopicCreated","queuedMessages","pub","_sending","publishMessage","setUrlTopic","blankState","not_found","nextState","docPreview","imagePreview","imagePostview","typingIndicator","msgs","assign","onlineSubs","peer","p2pPeerDesc","peerMessagingDisabled","isWriter","readingBlocked","unconformed","unconfirmed","oldTopicName","oldTopic","finally","msgHasMoreMessages","getMessagesPage","setInterval","clearInterval","n","shift","sendAt","noteRead","setMilliseconds","getMilliseconds","isNewMessage","from","what","clearTimeout","keyPressTimer","forceUpdate","sendMessage","attachJSON","parse","searchParams","set","search","messageSpecificMenuItems","onNewChat","noteKeyPress","maxInbandAttachmentSize","cannot_initiate_upload","uploadCompletionPromise","upload","urlPromise","maxExternAttachmentSize","limit","tinyBlob","blobMime","tinyBits64","insertImage","_tempPreview","appendLineBreak","append","init","bits64","found","find","_cancelled","component","hideSelf","component2","messageNodes","previousFrom","chatBoxClass","nextFrom","thisFrom","isReply","userDesc","hi","ts","_uploader","lastSeen","cont","getMeTopic","getContact","online_now","seen","last_seen","when","onHideMessagesView","ButtonBack","onBack","MenuContacts","onNewTopic","onSettings","MenuStart","onSignUp","SideNavbar","archived_contacts_title","ContactsView","handleAction","unreadThreads","archivedCount","chatList","blocked","arch","touched","action_ignored","onShowArchive","LocalStorageUtil","localStorage","setItem","JSON","stringify","getItem","oldVal","getObject","setObject","removeItem","CreateAccountView","login","password","email","errorCleared","saveToken","handleLoginChange","handlePasswordChange","handleEmailChange","handleFnChange","handleToggleSaveToken","onCreateAccount","submitClasses","login_prompt","password_prompt","full_name_prompt","email_prompt","stay_logged_in","EditAccountView","me","onBasicNavigate","AccGeneralView","credentials","getCredentials","addCredActive","addCredInvalid","newCred","previousOnTags","tnNewTags","tnCredsUpdated","handleCredChange","handleCredKeyDown","handleCredEntered","onCredsUpdated","creds","onUpdateAccount","method","asPhone","asEmail","onCredAdd","onUpdateTags","cred","meth","done","onCredConfirm","onCredDelete","full_name_placeholder","title_tag_manager","handleCheckboxClick","onToggleMessageSounds","onTogglePushNotifications","onToggleIncognitoMode","messageSounds","desktopAlertsEnabled","desktopAlerts","incognitoMode","delete_account","delete_account_warning","AccSecurityView","blockedCount","handlePasswordUpdate","handleDeleteAccount","pwd","onDeleteAccount","password_unchanged","onLogout","onShowBlocked","AccSupportView","LoginView","hostName","onLogin","autoCorrect","autoCapitalize","invalid_id","NewTopicById","groupId","NewTopicGroup","handlePrivateChange","handleTagsChanged","handleChannelToggle","SearchContacts","edited","handleSearchChange","handleSearch","handleClear","onSearchContacts","search_placeholder","search_for_contacts","search_no_results","NewTopicView","tabSelected","searchQuery","handleTabClick","handleSearchContacts","handleNewGroupSubmit","handleGroupByID","addUrlParam","removeUrlParam","onCreateTopic","priv","no_contacts_placeholder","searchResults","PasswordResetView","token","scheme","onReset","onRequest","reset","HostSelector","changed","handleHostNameChange","onServerAddressChange","hostOptions","list","SettingsView","transport","handleTransportSelected","handleServerAddressChange","onUpdate","def","ws","lp","transportOptions","phone","ValidationView","credCode","credMethod","numbers_only","SidepanelView","handleLoginRequested","handleNewTopic","onLoginRequest","view","errorAction","errorActionText","loadSpinnerVisible","loginDisabled","onGlobalSettings","onUpdateAccountTags","onValidateCredentials","onPasswordResetRequest","onResetPassword","detectServerAddress","host","protocol","hostname","port","isSecureConnection","POP_SOUND","Audio","reconnect_countdown","reconnect_now","push_init_failed","invalid_security_token","no_connection","code_doesnot_match","TinodeWeb","getBlankState","handleResize","handleHashRoute","handleOnline","checkForAppUpdate","handleVisibilityEvent","handleError","handleLoginRequest","handleConnected","handleAutoreconnectIteration","doLogin","handleCredentialsRequest","handleLoginSuccessful","handleDisconnect","tnMeMetaDesc","tnMeContactUpdate","tnMeSubsUpdated","resetContactList","tnData","tnInitFind","tnFndSubsUpdated","handleTopicSelected","handleHideMessagesView","handleSendMessage","handleNewChatInvitation","handleNewAccount","handleNewAccountRequest","handleUpdateAccountRequest","handleUpdateAccountTagsRequest","handleToggleIncognitoMode","handleSettings","handleGlobalSettings","handleShowArchive","handleShowBlocked","handleToggleMessageSounds","handleCredAdd","handleCredDelete","handleCredConfirm","initDesktopAlerts","togglePushToken","requestPushToken","handleSidepanelCancel","handleStartTopicRequest","handleNewTopicCreated","handleTopicUpdateRequest","handleChangePermissions","handleLogout","handleDeleteMessagesRequest","handleLeaveUnsubRequest","handleBlockTopicRequest","handleReportTopic","handleShowContextMenu","defaultTopicContextMenu","handleHideContextMenu","handleShowAlert","handleShowInfoView","handleHideInfoView","handleValidateCredentialsRequest","handlePasswordResetRequest","handleResetPassword","handleContextMenuAction","settings","autoLogin","messageSoundsOff","FIREBASE_INIT","firebaseToken","hidden","sidePanelSelected","sidePanelTitle","sidePanelAvatar","liveConnection","onLine","topicSelectedOnline","topicSelectedAcs","innerWidth","showInfoPanel","mobilePanel","contextMenuVisible","contextMenuBounds","contextMenuClickAt","contextMenuParams","contextMenuItems","alertVisible","alertParams","documentElement","clientWidth","clientHeight","keepLoggedIn","tnSetup","onConnect","onDisconnect","onAutoreconnectIteration","fbPush","usePublicVapidKey","messagingVapidKey","serviceWorker","register","reg","useServiceWorker","postMessage","setDeviceToken","parsedNav","expires","setAuthToken","connect","tab","readTimer","readTimerCallback","persistentCache","onSetupCompleted","appName","apiKey","secure","persist","setHumanLanguage","enableLogging","mobile","onupdatefound","installingWorker","installing","onstatechange","controller","newTopicTabSelected","isConnected","getServerInfo","ver","sec","prom","reconnectCountdown","timeLeft","seconds","secondsToTime","reconnect","isAuthenticated","promise","getAuthToken","loginBasic","loginToken","onContactUpdate","getCurrentUserID","withDesc","withCred","disconnect","setUrlSidePanel","isPresencer","archived","isArchived","play","foundContacts","merged","updated","prepareSearchableContacts","receivedTimer","noteRecv","fnd","getFndTopic","withSub","s","setMeta","isTopicOnline","getTopicAccessMode","isP2PType","am","updateWant","login_","password_","public_","cred_","tags_","createAccountBasic","updateAccountBasic","getCurrentLogin","on","clearStorage","onTokenRefresh","onMessage","payload","enabled","requestPermission","deleteToken","getToken","refreshedToken","delCredential","basicNavigator","isTopicCached","newGroupTopicName","oldName","newName","permissions","updateGiven","delCurrentUser","publish","self_blocked","subscribed","confirmText","rejectText","invite","requestResetAuthSecret","newPassword","str","btoa","atob","base64ReEncode","onAddMember","handleManageGroupMembers","hl","languages","baseLanguage","allMessages","IntlProvider","textComponent"],"mappings":"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","file":"index.prod.js","sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var __WEBPACK_NAMESPACE_OBJECT__ = React;","var __WEBPACK_NAMESPACE_OBJECT__ = ReactDOM;","var __WEBPACK_NAMESPACE_OBJECT__ = ReactIntl;","var __WEBPACK_NAMESPACE_OBJECT__ = firebase;","var __WEBPACK_NAMESPACE_OBJECT__ = Tinode;","var __WEBPACK_NAMESPACE_OBJECT__ = firebase.messaging;","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Alert extends React.PureComponent {\n  render() {\n    return this.props.visible ?\n      <div className=\"alert-container\">\n        <div className=\"alert\">\n          <div className=\"title\">{this.props.title}</div>\n          <div className=\"content\">{this.props.content}</div>\n          <div className=\"dialog-buttons\">\n            {this.props.onReject ?\n              <button className=\"outline\" onClick={this.props.onReject}>\n                {this.props.reject || <FormattedMessage id=\"button_cancel\" />}\n              </button>\n              :\n              null\n            }\n            <button className=\"blue\" onClick={this.props.onConfirm}>\n              {this.props.confirm || <FormattedMessage id=\"button_ok\" />}\n            </button>\n          </div>\n        </div>\n      </div>\n    :\n    null;\n  }\n};\n","// This is a generated file. Don't edit.\n\nexport const PACKAGE_VERSION = \"0.17.0\";\n","import { PACKAGE_VERSION } from './version.js';\n\n// Name of this application, used in the User-Agent.\nexport const APP_NAME = 'TinodeWeb/' + (PACKAGE_VERSION || '0.16');\n\n// API key. Use https://github.com/tinode/chat/tree/master/keygen to generate your own\nexport const API_KEY = 'AQEAAAABAAD_rAp4DJh05a1HAwFT3A6K';\n\n// The array of possible hosts to connect to.\nexport const KNOWN_HOSTS = {hosted: 'web.tinode.co', local: 'localhost:6060'};\n\n// Default host name and port to connect to.\nexport const DEFAULT_HOST = KNOWN_HOSTS.hosted;\n\n// Enable console logging.\nexport const LOGGING_ENABLED = true;\n\n// Minimum time between two keypress notifications, milliseconds.\nexport const KEYPRESS_DELAY = 3*1000;\n// Delay before sending a {note} for reciving a message, milliseconds.\nexport const RECEIVED_DELAY = 500;\n// Delay before sending a read notification, milliseconds.\nexport const READ_DELAY = 1000;\n\n// The shortest allowed tag length. Matches the value on the server.\nexport const MIN_TAG_LENGTH = 2;\n// The greatest allowed tag length. Matches the value on the server.\nexport const MAX_TAG_LENGTH = 96;\n// The maximum number of tags allowed. Matches the value on the server.\nexport const MAX_TAG_COUNT = 16;\n\n// Access mode for P2P subscriptions initiated by the current user.\nexport const DEFAULT_P2P_ACCESS_MODE = 'JRWPS';\n// Access mode for new group topics created by the current user.\nexport const NEW_GRP_ACCESS_MODE = 'JRWPSAO';\n// Access mode for a channel.\nexport const CHANNEL_ACCESS_MODE = 'JR';\n\n// Access mode for no access.\nexport const NO_ACCESS_MODE = 'N';\n\n// Mediaquery breakpoint between desktop and mobile, in px. Should match the value\n// in @media (max-size: 640px) in base.css\nexport const MEDIA_BREAKPOINT = 640;\n// Size of css 'rem' unit in pixels. Default 1rem = 10pt = 13px.\nexport const REM_SIZE = 13;\n\n// Size of the avatar image: When an avatar image is uploaded, it's resized to\n// a square of this size.\nexport const AVATAR_SIZE = 128;\n\n// Size of the broken_image shown in MessagesView\nexport const BROKEN_IMAGE_SIZE = 32;\n\n// Number of chat messages to fetch in one call.\nexport const MESSAGES_PAGE = 24;\n\n// Default maximum in-band (included directly into the message) attachment size which fits into\n// a message of 256K in size. The actual binary size of the attachment should be smaller due to\n// base64 encoding expansion and some overhead, for instance 1024 bytes.\n// Increase this limit to a greater value in production, if desired. Also increase\n// max_message_size in the server config.\nexport const MAX_INBAND_ATTACHMENT_SIZE = 262144;\n\n// Absolute maximum attachment size to be used with the server = 8MB. Increase to\n// something like 100MB in production.\nexport const MAX_EXTERN_ATTACHMENT_SIZE = 1 << 23;\n\n// Maximum allowed linear dimension of an inline image in pixels. Larer images will be shrunk\n// to make the larger dimension fit under this size. You may want to adjust it to 1600 or\n// 2400 for production.\nexport const MAX_IMAGE_DIM = 1024;\n\n// Linear dimensions of image preview: shrink image under this size for previews.\nexport const IMAGE_PREVIEW_DIM = 64;\n\n// Maximum number of online users to be shown in a topic title bar. Others will be\n// hidden under \"+X more\"\nexport const MAX_ONLINE_IN_TOPIC = 4;\n\n// Maximum length of user name, topic title, and private comment.\nexport const MAX_TITLE_LENGTH = 60;\n\n// Length of message previews in chat list, in characters.\nexport const MESSAGE_PREVIEW_LENGTH = 80;\n\n// Link for \"Contact Us\".\nexport const LINK_CONTACT_US = 'email:info@tinode.co';\n\n// Link to Privacy Policy.\nexport const LINK_PRIVACY_POLICY = 'https://tinode.co/privacy.html';\n\n// Link to Terms of Service.\nexport const LINK_TERMS_OF_SERVICE = 'https://tinode.co/terms.html';\n","// Context Menu: popup/dropdown menu.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { injectIntl, defineMessages } from 'react-intl';\n\nimport { REM_SIZE } from '../config.js';\nimport HashNavigation from '../lib/navigation.js';\n\nconst messages = defineMessages({\n  info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  },\n  clear_messages: {\n    id: 'menu_item_clear_messages',\n    defaultMessage: 'Clear messages',\n    description: 'Delete all messages'\n  },\n  clear_for_all: {\n    id: 'menu_item_clear_messages_for_all',\n    defaultMessage: 'Clear for All',\n    description: 'Delete all message(s) for all members'\n  },\n  'delete': {\n    id: 'menu_item_delete',\n    defaultMessage: 'Delete',\n    description: 'Delete selected messages'\n  },\n  delete_for_all: {\n    id: 'menu_item_delete_for_all',\n    defaultMessage: 'Delete for All',\n    description: 'Delete selected message(s) for all members'\n  },\n  send_retry: {\n    id: 'menu_item_send_retry',\n    defaultMessage: 'Retry',\n    description: 'Retry sending message'\n  },\n  mute: {\n    id: 'menu_item_mute',\n    defaultMessage: 'Mute',\n    description: 'Turn off notifications'\n  },\n  unmute: {\n    id: 'menu_item_unmute',\n    defaultMessage: 'Unmute',\n    description: 'Turn notifications on'\n  },\n  topic_delete: {\n    id: 'menu_item_delete_topic',\n    defaultMessage: 'Delete',\n    description: 'Delete entire topic'\n  },\n  topic_delete_warning: {\n    id: 'topic_delete_warning',\n    defaultMessage: 'Are you sure you want to delete this conversation?',\n    description: 'Alert warning when deleting entire topic'\n  },\n  unblock: {\n    id: 'menu_item_unblock',\n    defaultMessage: 'Unblock',\n    description: 'Unblock topic or user'\n  },\n  // Generic string suitable for either topic or user.\n  block: {\n    id: 'menu_item_block',\n    defaultMessage: 'Block',\n    description: 'Block topic or user'\n  },\n  topic_block_warning: {\n    id: 'topic_block_warning',\n    defaultMessage: 'Are you sure you want to block this conversation?',\n    description: 'Alert warning when blocking a topic.'\n  },\n  member_delete: {\n    id: 'menu_item_member_delete',\n    defaultMessage: 'Remove',\n    description: 'Remove user from topic'\n  },\n  archive: {\n    id: 'menu_item_archive_topic',\n    defaultMessage: 'Archive',\n    description: 'Move topic from the list of active chats to archive'\n  }\n});\n\nclass ContextMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const {formatMessage} = props.intl;\n\n    this.handlePageClick = this.handlePageClick.bind(this);\n    this.handleEscapeKey = this.handleEscapeKey.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n\n    // Preconfigured menu items.\n    this.MenuItems = {\n      'topic_info': {\n        id: 'topic_info',\n        title: formatMessage(messages.info),\n        handler: null\n      },\n      'messages_clear': {\n        id: 'messages_clear',\n        title: formatMessage(messages.clear_messages),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.menu_item_clear_messages), // title\n            formatMessage({id: 'clear_messages_warning'}), // content\n            (() => { this.deleteMessages(true, false, params, errorHandler); }), // onConfirm\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'messages_clear_hard': {\n        id: 'messages_clear_hard',\n        title: formatMessage(messages.clear_for_all),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.menu_item_clear_messages_for_all), // title\n            formatMessage({id: 'delete_messages_warning'}), // content\n            (() => { return this.deleteMessages(true, true, params, errorHandler); }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'message_delete': {\n        id: 'message_delete',\n        title: formatMessage(messages.delete),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, false, params, errorHandler);\n        }\n      },\n      'message_delete_hard': {\n        id: 'message_delete_hard',\n        title: formatMessage(messages.delete_for_all),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, true, params, errorHandler);\n        }\n      },\n      'menu_item_send_retry': {\n        id: 'menu_item_send_retry',\n        title: formatMessage(messages.send_retry),\n        handler: (params, errorHandler) => {\n          return this.retryMessage(params, errorHandler);\n        }\n      },\n      'topic_unmute': {\n        id: 'topic_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'topic_mute': {\n        id: 'topic_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'topic_unblock': {\n        id: 'topic_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n      'topic_block': {\n        id: 'topic_block',\n        title: formatMessage(messages.block),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.menu_item_block), // title\n            formatMessage(messages.topic_block_warning), // content\n            (() => {\n              return this.topicPermissionSetter('-JP', params, errorHandler).then((ctrl) => {\n                this.props.onTopicRemoved(params.topicName);\n                return ctrl;\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_delete': {\n        id: 'topic_delete',\n        title: formatMessage(messages.topic_delete),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.menu_item_delete_topic), // title\n            formatMessage(messages.topic_delete_warning), // content\n            (() => {\n              const topic = this.props.tinode.getTopic(params.topicName);\n              if (!topic) {\n                console.log(\"Topic not found: \", params.topicName);\n                return;\n              }\n              return topic.delTopic(true).catch((err) => {\n                if (errorHandler) {\n                  errorHandler(err.message, 'err');\n                }\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_archive': {\n        id: 'topic_archive',\n        title: formatMessage(messages.archive),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic) {\n            console.log(\"Topic not found: \", params.topicName);\n            return;\n          }\n          return topic.archive(true).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      // menu_item_edit_permissions is defined elsewhere.\n      'permissions': {\n        id: 'permissions',\n        title: formatMessage({id: 'menu_item_edit_permissions'}),\n        handler: null\n      },\n      'member_delete': {\n        id: 'member_delete',\n        title: formatMessage(messages.member_delete),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic || !params.user) {\n            console.log(\"Topic or user not found: '\" + params.topicName + \"', '\" + params.user + \"'\");\n            return;\n          }\n          return topic.delSubscription(params.user).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      'member_mute': {\n        id: 'member_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'member_unmute': {\n        id: 'member_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'member_block': {\n        id: 'member_block',\n        title: formatMessage(messages.block),\n        handler: this.topicPermissionSetter.bind(this, '-JP')\n      },\n      'member_unblock': {\n        id: 'member_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handlePageClick, false);\n    document.addEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handlePageClick, false);\n    document.removeEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  handlePageClick(e) {\n    if (ReactDOM.findDOMNode(this).contains(e.target)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n  }\n\n  handleEscapeKey(e) {\n    if (e.keyCode === 27) {\n      this.props.hide();\n    }\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n    let item = this.props.items[e.currentTarget.dataset.id];\n    if (typeof item == 'string') {\n      item = this.MenuItems[item];\n    }\n\n    if (!item) {\n      console.log(\"Invalid menu item ID\", e.currentTarget.dataset.id);\n    } else {\n      this.props.onAction(\n        item.id,\n        item.handler(this.props.params, this.props.onError),\n        this.props.params);\n    }\n  }\n\n  // Menu Actions\n\n  deleteMessages(all, hard, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found: \", params.topicName);\n      return;\n    }\n\n    // We don't know if the message is still pending (e.g. attachment is being uploaded),\n    // so try cancelling first. No harm if we can't cancel.\n    // The message can be cancelled if transmission to the server has not\n    // started yet or if the message send has failed.\n    if (!all && topic.cancelSend(params.seq)) {\n      return;\n    }\n    // Can't cancel. Delete instead.\n    const promise = all ?\n      topic.delMessagesAll(hard) :\n      topic.delMessagesList([params.seq], hard);\n\n    return promise.catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Retries sending failed message.\n  retryMessage(params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    // Remove the existing message entry.\n    if (!topic || !topic.flushMessage(params.seq)) {\n      return;\n    }\n    const msg = topic.createMessage(params.content, false);\n    return topic.publishDraft(msg).catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Function is used by context menu to set permissions.\n  topicPermissionSetter(mode, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found\", params.topicName);\n      return;\n    }\n\n    let result = topic.updateMode(params.user, mode);\n    if (errorHandler) {\n      result = result.catch((err) => {\n        errorHandler(err.message, 'err');\n      });\n    }\n    return result;\n  }\n\n  render() {\n    let count = 0;\n    let menu = [];\n    this.props.items.map((item) => {\n      if (typeof item == 'string') {\n        item = this.MenuItems[item];\n      }\n      if (item && item.title) {\n        menu.push(\n          item.title == '-' ?\n            <li className=\"separator\" key={count} />\n            :\n            <li onClick={this.handleClick} data-id={count} key={count}>{item.title}</li>\n        );\n      }\n      count++;\n    });\n\n    // Ensure that menu is inside the app-container.\n    const hSize = 12 * REM_SIZE;\n    const vSize = REM_SIZE * (0.7 + menu.length * 2.5);\n    const left = (this.props.bounds.right - this.props.clickAt.x < hSize) ?\n        (this.props.clickAt.x - this.props.bounds.left - hSize) :\n        (this.props.clickAt.x - this.props.bounds.left);\n    const top = (this.props.bounds.bottom - this.props.clickAt.y < vSize) ?\n        (this.props.clickAt.y - this.props.bounds.top - vSize) :\n        (this.props.clickAt.y - this.props.bounds.top);\n\n    const position = {\n      left: left + 'px',\n      top: top + 'px'\n    };\n\n    return (\n      <ul className=\"menu\" style={position}>\n        {menu}\n      </ul>\n    );\n  }\n}\n\nexport default injectIntl(ContextMenu);\n","// Short representation of time in the past.\nexport function shortDateFormat(then, locale) {\n  locale = locale || window.navigator.userLanguage || window.navigator.language;\n  const now = new Date();\n  if (then.getFullYear() == now.getFullYear()) {\n    // Same year.\n    if (then.getMonth() == now.getMonth() && then.getDate() == now.getDate()) {\n      // Same month and day, show time only.\n      return then.toLocaleTimeString(locale, {hour12: false, hour: '2-digit', minute: '2-digit'});\n    }\n    // Different month and/or day, show month day, time.\n    return then.toLocaleDateString(locale,\n      {hour12: false, month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit'});\n  }\n  // Different year: just show the date.\n  return then.toLocaleDateString(locale, {year: 'numeric', month: 'short', day: 'numeric'});\n}\n\n// Convert seconds to minutes:seconds, i.e. 156 sec -> 2:36.\nexport function secondsToTime(seconds) {\n  const min = Math.floor(seconds / 60);\n  let sec = seconds % 60;\n  sec = sec < 10 ? `0${sec}` : sec;\n  return `${min}:${sec}`;\n}\n\n// Convert a number of bytes to human-readable format.\nexport function bytesToHumanSize(bytes) {\n  if (!bytes || bytes == 0) {\n    return '0 Bytes';\n  }\n\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n  const bucket = Math.min(Math.floor(Math.log2(bytes) / 10) | 0, sizes.length-1);\n  const count = bytes / Math.pow(1024, bucket);\n  const round = bucket > 0 ? (count < 3 ? 2 : (count < 30 ? 1 : 0)) : 0;\n  return count.toFixed(round) + ' ' + sizes[bucket];\n}\n\n// Get 32 bit integer hash value for a string. Ideally it should produce the same value\n// as Java's String#hash().\nexport function stringHash(value) {\n  let hash = 0;\n  value = '' + value;\n  for (let i = 0; i < value.length; i++) {\n    hash = ((hash << 5) - hash) + value.charCodeAt(i);\n    hash = hash & hash; // Convert to 32bit integer\n  }\n  return hash;\n}\n","import React from 'react';\n\nimport Tinode from 'tinode-sdk';\n\nimport { stringHash } from '../lib/strformat.js';\n\nexport default class LetterTile extends React.PureComponent {\n  render() {\n    let avatar;\n    if (this.props.avatar === true) {\n      const isGroup = (Tinode.topicType(this.props.topic) == 'grp');\n      const iconColor = (isGroup ? 'light-color' : 'dark-color')\n        + (Math.abs(stringHash(this.props.topic)) % 16);\n      if (this.props.topic && this.props.title && this.props.title.trim()) {\n        const letter = this.props.title.trim().charAt(0);\n        const className = 'lettertile ' + iconColor;\n        avatar = (<div className={className}><div>{letter}</div></div>)\n      } else {\n        const className = 'material-icons ' + iconColor;\n        avatar = isGroup ?\n          <i className={className}>group</i> : <i className={className}>person</i>;\n      }\n    } else if (this.props.avatar) {\n      // If avatar image is invalid, show a placeholder.\n      avatar = <img className=\"avatar\" alt=\"avatar\" src={this.props.avatar}\n        onError={(e)=>{e.target.onerror = null; e.target.src=\"/img/broken_image.png\"}} />;\n    } else {\n      avatar = null;\n    }\n    return avatar;\n  }\n}\n","// File and image helper functions.\nimport { MAX_INBAND_ATTACHMENT_SIZE, MAX_IMAGE_DIM } from '../config.js';\nimport { bytesToHumanSize } from './strformat.js'\n\n// Supported image MIME types and corresponding file extensions.\nexport const SUPPORTED_IMAGE_FORMATS = ['image/jpeg', 'image/gif', 'image/png', 'image/svg', 'image/svg+xml'];\nexport const MIME_EXTENSIONS         = ['jpg',        'gif',       'png',       'svg',       'svg'];\n\n// Make a data URL from public.photo\nexport function makeImageUrl(photo) {\n  return (photo && photo.type && photo.data) ?\n    'data:image/' + photo.type + ';base64,' + photo.data : null;\n}\n\n// Calculate linear dimensions for scaling image down to fit under a certain size.\n// Returns an object which contains destination sizes, source sizes, and offsets\n// into source (when making square images).\nexport function fitImageSize(width, height, maxWidth, maxHeight, forceSquare) {\n  // Sanitize input\n  width = width | 0;\n  height = height | 0;\n  maxWidth = maxWidth | 0;\n  maxHeight = maxHeight | 0;\n\n  if (width <= 0 || height <= 0 || maxWidth <= 0 || maxHeight <= 0) {\n    return null;\n  }\n\n  if (forceSquare) {\n    maxWidth = maxHeight = Math.min(maxWidth, maxHeight);\n  }\n\n  let scale = Math.min(\n    Math.min(width, maxWidth) / width,\n    Math.min(height, maxHeight) / height\n  );\n\n  let size = {\n    dstWidth: (width * scale) | 0,\n    dstHeight: (height * scale) | 0,\n  };\n\n  if (forceSquare) {\n    // Also calculate parameters for making the image square.\n    size.dstWidth = size.dstHeight = Math.min(size.dstWidth, size.dstHeight);\n    size.srcWidth = size.srcHeight = Math.min(width, height);\n    size.xoffset = ((width - size.srcWidth) / 2) | 0;\n    size.yoffset = ((height - size.srcWidth) / 2) | 0;\n  } else {\n    size.xoffset = size.yoffset = 0;\n    size.srcWidth = width;\n    size.srcHeight = height;\n  }\n  return size;\n}\n\n// Ensure file's extension matches mime content type\nexport function fileNameForMime(fname, mime) {\n  const idx = SUPPORTED_IMAGE_FORMATS.indexOf(mime);\n  if (idx < 0 || !fname) {\n    // Unknown mime or empty name.\n    return fname;\n  }\n  const ext = MIME_EXTENSIONS[idx];\n\n  const at = fname.lastIndexOf('.');\n  if (at >= 0) {\n    fname = fname.substring(0, at);\n  }\n  return fname + '.' + ext;\n}\n\n// Scale uploaded image to fit under certain dimensions and byte size, optionally constraining to a square.\n// On success calls onSuccess callback with the scaled image as Blob.\nexport function imageScaled(fileOrBlob, maxWidth, maxHeight, maxSize, forceSquare, onSuccess, onError) {\n  const img = new Image();\n  img.crossOrigin = 'Anonymous';\n  img.onerror = function(err) {\n    onError(\"Image format unrecognized\");\n  }\n  img.onload = async function() {\n    // Once the image is loaded, the URL is no longer needed.\n    URL.revokeObjectURL(img.src);\n\n    // Calculate the desired image dimensions.\n    const dim = fitImageSize(this.width, this.height, maxWidth, maxHeight, forceSquare);\n    if (!dim) {\n      onError(\"Invalid image\");\n      return;\n    }\n    let canvas = document.createElement('canvas');\n    canvas.width = dim.dstWidth;\n    canvas.height = dim.dstHeight;\n    let ctx = canvas.getContext('2d');\n    ctx.imageSmoothingEnabled = true;\n    ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n      0, 0, dim.dstWidth, dim.dstHeight);\n\n    const mime = SUPPORTED_IMAGE_FORMATS.indexOf(fileOrBlob.type) < 0 ? 'image/jpeg' : fileOrBlob.type;\n    // Generate blob to check size of the image.\n    let blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    if (!blob) {\n      onError(\"Unsupported image format\");\n      return;\n    }\n\n    // Ensure the image is not too large. Shrink the image keeping the aspect ratio.\n    // Do nothing if maxsize is <= 0.\n    while (maxSize > 0 && blob.length > maxSize) {\n      dim.dstWidth = (dim.dstWidth * 0.70710678118) | 0;\n      dim.dstHeight = (dim.dstHeight * 0.70710678118) | 0;\n      canvas.width = dim.dstWidth;\n      canvas.height = dim.dstHeight;\n      ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n        0, 0, dim.dstWidth, dim.dstHeight);\n      blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    }\n\n    canvas = null;\n    onSuccess(blob, mime, dim.dstWidth, dim.dstHeight, fileNameForMime(fileOrBlob.name, mime));\n  };\n  img.src = URL.createObjectURL(fileOrBlob);\n}\n\n// Convert File to base64 string.\nexport function fileToBase64(file, onSuccess) {\n  const reader = new FileReader();\n  reader.addEventListener('load', function() {\n    onSuccess(file.type, reader.result.split(',')[1], file.name);\n  });\n  reader.readAsDataURL(file);\n}\n\n// Convert Blob to base64 string.\nexport function blobToBase64(blob, onSuccess) {\n  const reader = new FileReader();\n  reader.addEventListener('load', function() {\n    onSuccess(blob.type, reader.result.split(',')[1]);\n  });\n  reader.readAsDataURL(blob);\n}\n\n// File pasted from the clipboard. It's either an inline image or a file attachment.\n// FIXME: handle large files out of band.\nexport function filePasted(event, onImageSuccess, onAttachmentSuccess, onError) {\n  var items = (event.clipboardData || event.originalEvent.clipboardData || {}).items;\n  for (var i in items) {\n    var item = items[i];\n    if (item.kind === 'file') {\n      var file = item.getAsFile();\n      if (!file) {\n        console.log(\"Failed to get file object from pasted file item\", item.kind, item.type);\n        continue;\n      }\n      if (file.type && file.type.split('/')[0] == 'image') {\n        // Handle inline image\n        if (file.size > MAX_INBAND_ATTACHMENT_SIZE || SUPPORTED_IMAGE_FORMATS.indexOf(file.type) < 0) {\n          imageFileScaledToBase64(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, false, onImageSuccess, onError);\n        } else {\n          imageFileToBase64(file, onImageSuccess, onError);\n        }\n      } else {\n        // Handle file attachment\n        fileToBase64(file, onAttachmentSuccess, onError)\n      }\n      // Indicate that the pasted data contains a file.\n      return true;\n    }\n  }\n  // No file found.\n  return false;\n}\n\n// Get mime type from data URL header.\nexport function getMimeType(header) {\n  var mime = /^data:(image\\/[-+a-z0-9.]+);base64/.exec(header);\n  return (mime && mime.length > 1) ? mime[1] : null;\n}\n\n// Given length of a binary object in bytes, calculate the length after\n// base64 encoding.\nexport function base64EncodedLen(n) {\n  return Math.floor((n + 2) / 3) * 4;\n}\n\n// Given length of a base64-encoded object, calculate decoded size of the\n// pbject in bytes.\nexport function base64DecodedLen(n) {\n  return Math.floor(n / 4) * 3;\n}\n\n// Re-encode string to standard base64 encoding with padding.\n// The string may be base64-URL encoded without the padding.\nexport function base64ReEncode(str) {\n  if (str) {\n    str = str.replace(/-/g, '+').replace(/_/g, '/');\n    try {\n      str = btoa(atob(str));\n    } catch(err) {\n      console.log(\"Failed to base64 re-encode string.\", err);\n      str = null;\n    }\n  }\n  return str;\n}\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\n\nimport { AVATAR_SIZE, MAX_EXTERN_ATTACHMENT_SIZE } from '../config.js';\nimport { imageScaled, blobToBase64, makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class AvatarUpload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dataUrl: props.avatar\n    };\n\n    this.handleFileUpload = this.handleFileUpload.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.avatar != prevProps.avatar) {\n      this.setState({dataUrl: this.props.avatar})\n    }\n  }\n\n  handleFileUpload(e) {\n    imageScaled(e.target.files[0], AVATAR_SIZE, AVATAR_SIZE, MAX_EXTERN_ATTACHMENT_SIZE, true,\n      // Image successfully scaled and converted.\n      (mime, blob) => {\n        // Convert blob to base64-encoded bits.\n        blobToBase64(blob, (unused, base64bits) => {\n          const du = makeImageUrl({data: base64bits, type: mime});\n          this.setState({dataUrl: du});\n          this.props.onImageChanged(du);\n        });\n      },\n      // Failure\n      (err) => {\n        this.props.onError(err, 'err');\n      });\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  render() {\n    // Randomize id value in case more than one AvatarUpload is shown\n    // at the same time.\n    const randId = 'file-input-avatar-' + (Math.random() + '').substr(2);\n    const className = 'avatar-upload' + (this.props.readOnly ? ' read-only' : '');\n    return (\n      <div className={className}>\n        {this.props.readOnly || !this.state.dataUrl ?\n          null :\n          <a href=\"#\" className=\"clear-avatar\" onClick={(e) => {e.preventDefault(); this.props.onImageChanged(null);}}>\n            <i className=\"material-icons\">clear</i>\n          </a>}\n        {this.state.dataUrl ?\n          <img src={this.state.dataUrl} className=\"preview\" /> :\n          this.props.readOnly && this.props.uid ?\n            <div className=\"avatar-box\">\n              <LetterTile\n                avatar={true}\n                topic={this.props.uid}\n                title={this.props.title} />\n            </div>\n            :\n            <div className=\"blank\">{AVATAR_SIZE}&times;{AVATAR_SIZE}</div>}\n        {this.props.readOnly ? null :\n          <input type=\"file\" id={randId} className=\"inputfile hidden\"\n            accept=\"image/*\" onChange={this.handleFileUpload} />}\n        {this.props.readOnly ? null :\n        <label htmlFor={randId} className=\"round\">\n          <i className=\"material-icons\">file_upload</i>\n        </label>}\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\n/* BEGIN CheckBox: styled checkbox */\nexport default class CheckBox extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange() {\n    this.props.onChange(this.props.name, !this.props.checked);\n  }\n\n  render() {\n    return (\n      this.props.onChange ? (\n        this.props.checked ?\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box</i> :\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box_outline_blank</i>\n        ) : (\n          this.props.checked ?\n            <i className=\"material-icons\">check_box</i> :\n            <i className=\"material-icons\">check_box_outline_blank</i>\n        )\n    );\n  }\n}\n/* END CheckBox */\n","import React from 'react';\n\nconst icon_mapping = {'muted': 'notifications_off', 'banned': 'block'};\n\n/* Contact's labels: [you], or icons [muted], [blocked] */\nexport default class ContactBadges extends React.PureComponent {\n    render() {\n      let badges = null;\n      if (this.props.badges && this.props.badges.length > 0) {\n        badges = [];\n        this.props.badges.map(function(b) {\n          if (b.icon) {\n            badges.push(<i className=\"material-icons as-badge\" key={b.key || b.icon}>{icon_mapping[b.icon]}</i>);\n          } else {\n            const style = 'badge' + (b.color ? ' ' + b.color : '');\n            badges.push(<span className={style} key={b.key || b.name}>{b.name}</span>);\n          }\n        });\n        return <>{badges}</>;\n      }\n      return null;\n    }\n};\n","// Odds and ends\n\nimport Tinode from 'tinode-sdk';\n\n// Make shortcut icon appear with a green dot + show unread count in title.\nexport function updateFavicon(count) {\n  const oldIcon = document.getElementById('shortcut-icon');\n  const head = document.head || document.getElementsByTagName('head')[0];\n  const newIcon = document.createElement('link');\n  newIcon.type = 'image/png';\n  newIcon.id = 'shortcut-icon';\n  newIcon.rel = 'shortcut icon';\n  newIcon.href = 'img/logo32x32' + (count > 0 ? 'a' : '') + '.png';\n  if (oldIcon) {\n    head.removeChild(oldIcon);\n  }\n  head.appendChild(newIcon);\n\n  document.title = (count > 0 ? '('+count+') ' : '') + 'Tinode';\n}\n\n// Create VCard which represents topic 'public' info\nexport function vcard(fn, imageDataUrl) {\n  let card = null;\n\n  if ((fn && fn.trim()) || imageDataUrl) {\n    card = {};\n    if (fn) {\n      card.fn = fn.trim();\n    }\n    if (imageDataUrl) {\n      const dataStart = imageDataUrl.indexOf(',');\n      card.photo = dataStart >= 0 ? {\n        data: imageDataUrl.substring(dataStart+1),\n        type: 'jpg'\n      } : imageDataUrl;\n    }\n  }\n  return card;\n}\n\n// Deep-shallow compare two arrays: shallow compare each element.\nexport function arrayEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (!Array.isArray(a) || !Array.isArray(b)) {\n    return false;\n  }\n\n  // Compare lengths first.\n  if (a.length != b.length) {\n    return false;\n  }\n  // Order of elements is ignored.\n  a.sort();\n  b.sort();\n  for (let i = 0, l = a.length; i < l; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Checks (loosely) if the given string is a phone. If so, returns the phone number in a format\n// as close to E.164 as possible.\nexport function asPhone(val) {\n  val = val.trim();\n  if (/^(?:\\+?(\\d{1,3}))?[- (.]*(\\d{3})[- ).]*(\\d{3})[- .]*(\\d{2})[- .]*(\\d{2})?$/.test(val)) {\n    return val.replace(/[- ().]*/, '');\n  }\n  return null;\n}\n\n// Checks (loosely) if the given string is an email. If so returns the email.\nexport function asEmail(val) {\n  val = val.trim();\n  if (/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(val)) {\n    return val;\n  }\n  return null;\n}\n\n// Checks if URL is a relative url, i.e. has no 'scheme://', including the case of missing scheme '//'.\n// The scheme is expected to be RFC-compliant, e.g. [a-z][a-z0-9+.-]*\n// example.html - ok\n// https:example.com - not ok.\n// http:/example.com - not ok.\n// ' ↲ https://example.com' - not ok. (↲ means carriage return)\nexport function isUrlRelative(url) {\n  return url && !/^\\s*([a-z][a-z0-9+.-]*:|\\/\\/)/im.test(url);\n}\n\n// Ensure URL does not present an XSS risk. Optional allowedSchemes may contain an array of\n// strings with permitted URL schemes, such as ['ftp', 'ftps']; otherwise accept http and https only.\n// If apikey and/or token is defined, it's appended to relative URL.\nexport function sanitizeUrl(url, allowedSchemes) {\n  if (!url) {\n    return null;\n  }\n\n  // Strip control characters and whitespace. They are not valid URL characters anyway.\n  url = url.replace(/[^\\x20-\\x7E]/gmi, '').trim();\n\n  // Relative URLs are safe.\n  // Relative URL does not start with ':', abcd123: or '//'.\n  if (!/^([a-z][a-z0-9+.-]*:|\\/\\/)/i.test(url)) {\n    return url;\n  }\n\n  // Blob URLs are safe.\n  if (/^blob:http/.test(url)) {\n    return url;\n  }\n\n  // Absolute URL. Accept only safe schemes, or no scheme.\n  const schemes = Array.isArray(allowedSchemes) ? allowedSchemes.join('|') : 'http|https';\n  const re = new RegExp('^((' + schemes + '):|//)', 'i');\n  if (!re.test(url)) {\n    return null;\n  }\n\n  return url;\n}\n\n// Ensure URL is suitable for <img src=\"url\"> field: the URL must be a relative URL or\n// have http:, https:, blob: or data: scheme.\n// The relative URL is appended with the API key and/or auth token.\n// In case of data: scheme, the URL must start with a 'data:image/XXXX;base64,'.\nexport function sanitizeImageUrl(url) {\n  if (!url) {\n    return null;\n  }\n\n  const sanitizedUrl = sanitizeUrl(url);\n  if (sanitizedUrl) {\n    return sanitizedUrl;\n  }\n\n  // Is this a data: URL of an image?\n  if (/data:image\\/[a-z0-9.-]+;base64,/i.test(url.trim())) {\n    return url;\n  }\n\n  return null;\n}\n\n// Given message's received status, return name and color of a delivery indicator icon.\nexport function deliveryMarker(received) {\n  switch (received) {\n    case Tinode.MESSAGE_STATUS_SENDING:\n      return { name: 'access_time' }; // watch face\n    case Tinode.MESSAGE_STATUS_FAILED:\n      return { name: 'warning', color: 'amber' }; // yellow icon /!\\\n    case Tinode.MESSAGE_STATUS_SENT:\n      return { name: 'done' }; // checkmark\n    case Tinode.MESSAGE_STATUS_RECEIVED:\n      return { name: 'done_all' }; // double checkmark\n    case Tinode.MESSAGE_STATUS_READ:\n      return { name: 'done_all', color: 'blue' }; // blue double checkmark\n  }\n  return null;\n}\n","// Received/read indicator.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { shortDateFormat } from '../lib/strformat.js';\nimport { deliveryMarker } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  'sending': {\n    'id': 'message_sending',\n    'defaultMessage': 'sending...',\n    'description': 'Message being sent, in place of time stamp'\n  },\n  'failed': {\n    'id': 'message_sending_failed',\n    'defaultMessage': 'failed',\n    'description': 'Failed to send message, in place of time stamp'\n  }\n});\n\nclass ReceivedMarker extends React.PureComponent {\n  render() {\n    const {formatMessage} = this.props.intl;\n    let timestamp;\n    if (this.props.received <= Tinode.MESSAGE_STATUS_SENDING) {\n      timestamp = formatMessage(messages.sending);\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_FAILED) {\n      timestamp = formatMessage(messages.failed);\n    } else {\n      timestamp = shortDateFormat(this.props.timestamp, this.props.intl.locale);\n    }\n\n    const icon = deliveryMarker(this.props.received);\n    const marker = icon ? <i className={'material-icons small ' + icon.color}>{icon.name}</i> : null;\n\n    return (\n      <span className=\"timestamp\">\n        {timestamp}{'\\u00a0'}{marker}\n      </span>\n    );\n  }\n};\n\nexport default injectIntl(ReceivedMarker);\n","// The counter of unread messages in the topic.\nimport React from 'react';\n\nexport default class UnreadBadge extends React.PureComponent {\n  render() {\n    return (this.props.count > 0 ?\n      <span className=\"unread\">{this.props.count > 9 ? \"9+\" : this.props.count}</span>\n      : null);\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport ContactBadges from './contact-badges.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\nimport UnreadBadge from './unread-badge.jsx';\n\nimport { Drafty } from 'tinode-sdk';\n\nimport { deliveryMarker } from '../lib/utils.js';\n\nexport default class Contact extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.props.onSelected) {\n      // Index this.props.index is used by GroupManager.\n      this.props.onSelected(this.props.item, this.props.index);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.props.item, y: e.pageY, x: e.pageX });\n  }\n\n  render() {\n    let title = this.props.title;\n    if (!title) {\n      title = <i><FormattedMessage id=\"unnamed_topic\" /></i>;\n    } else if (title.length > 30) {\n      // FIXME: this is probably wrong for RTL languages.\n      title = title.substring(0, 28) + '…';\n    }\n    const online = this.props.now ? 'online' : 'offline';\n    const avatar = this.props.avatar ? this.props.avatar : true;\n    const badges = this.props.badges ? this.props.badges.slice() : [];\n    const icon_badges = [];\n    if (this.props.acs) {\n      if (this.props.showMode) {\n        badges.push({name: this.props.acs.getMode(), key: 'mode'});\n      }\n      if (this.props.acs.isMuted()) {\n        icon_badges.push({icon: 'muted'});\n      }\n      if (!this.props.acs.isJoiner()) {\n        icon_badges.push({icon: 'banned'});\n      }\n    }\n\n    const subtitle = this.props.preview ?\n      (typeof this.props.preview == 'string' ? this.props.preview :\n        React.createElement(React.Fragment, null, Drafty.format(this.props.preview, draftyFormatter, this))) :\n      this.props.comment;\n\n    const icon = deliveryMarker(this.props.received);\n    const marker = icon ? <i className={'material-icons small space-right ' + icon.color}>{icon.name}</i> : null;\n\n    return (\n      <li className={!this.props.showCheckmark && this.props.selected ? 'selected' : null} onClick={this.handleClick}>\n        <div className=\"avatar-box\">\n          <LetterTile\n            avatar={avatar}\n            title={this.props.title}\n            topic={this.props.item} />\n          {this.props.showOnline ? <span className={online} /> :\n            (this.props.showCheckmark && this.props.selected ?\n            <i className=\"checkmark material-icons\">check_circle</i>\n            : null)}\n        </div>\n        <div className=\"text-box\">\n          <div><span className=\"contact-title\">{title}</span>\n            {this.props.isChannel ? <img src=\"/img/channel.png\" className=\"channel\" alt=\"channel\" /> : null}\n            <UnreadBadge count={this.props.unread} /><ContactBadges badges={icon_badges} />\n          </div>\n          <div className=\"contact-comment\">{marker}{subtitle || '\\u00A0'}</div>\n          <span><ContactBadges badges={badges} /></span>\n        </div>\n        {this.props.showContextMenu ?\n          <span className=\"menuTrigger\">\n            <a href=\"#\" onClick={this.handleContextClick}>\n              <i className=\"material-icons\">expand_more</i>\n            </a>\n          </span> : null}\n      </li>\n    );\n  }\n};\n\n\n// Converts Drafty object into a one-line preview.\nfunction draftyFormatter(style, data, values, key) {\n  let el = Drafty.tagName(style);\n  const attr = { key: key };\n  if (el) {\n    switch (style) {\n      case 'HL':\n        // Make highlight less prominent in preview.\n        attr.className = 'highlight preview';\n        break;\n      case 'LN':\n        // Disable links in previews.\n        el = 'span';\n        break;\n      case 'IM':\n        // Replace image with '[icon] Image'.\n        el = React.Fragment;\n        values = [<i className=\"material-icons\">photo</i>, 'Picture'];\n        break;\n      case 'BN':\n        el = 'span';\n        attr.className = 'flat-button faux';\n        break;\n      case 'FM':\n        el = React.Fragment;\n        values = [<i className=\"material-icons\">dashboard</i>, 'Form:'];\n        break;\n      case 'RW':\n        el = React.Fragment;\n        break;\n      case 'EX':\n        el = React.Fragment;\n        values = [<i className=\"material-icons\">attachment</i>, 'Attachment'];\n        break;\n      default:\n        if (el == '_UNKN') {\n          el = React.Fragment;\n          values = [<i className=\"material-icons\">extension</i>];\n        }\n        break;\n    }\n    return React.createElement(el, attr, values);\n  } else {\n    return values;\n  }\n};\n","// A panel included into a list of contacts with an action text.\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\n\nclass ContactAction extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.onAction(this.props.action);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <li onClick={this.handleClick} className=\"action\">\n        <div className=\"action-text\">{formatMessage(this.props.title, this.props.values)}</div>\n      </li>\n    );\n  }\n};\n\nexport default injectIntl(ContactAction);\n","// ContactList: component for showing a list of contacts,\n// such as a list of group members in a group chat.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { Drafty } from 'tinode-sdk';\nimport Tinode from 'tinode-sdk';\n\nimport Contact from './contact.jsx';\nimport ContactAction from './contact-action.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nimport { MESSAGE_PREVIEW_LENGTH } from '../config.js';\n\nconst messages = defineMessages({\n  badge_you: {\n    id: 'badge_you',\n    defaultMessage: 'you',\n    description: 'Badge for indicating the current user'\n  },\n  badge_owner: {\n    id: 'badge_owner',\n    defaultMessage: 'owner',\n    description: 'Badge for indicating the owner'\n  }\n});\n\nclass ContactList extends React.Component {\n  render() {\n    const { formatMessage } = this.props.intl;\n    const showCheckmark = Array.isArray(this.props.topicSelected);\n    const contactNodes = [];\n    let contactsCount = 0;\n    if (this.props.contacts && this.props.contacts.length > 0) {\n      this.props.contacts.map((c) => {\n        if (c.action) {\n          // Action item\n          contactNodes.push(\n            <ContactAction\n              title={c.title} action={c.action} values={c.values}\n              key={c.action}\n              onAction={this.props.onAction}\n              />);\n        } else {\n          // Normal contact\n          const key = this.props.showMode ? c.user : (c.topic || c.user);\n          // If filter function is provided, filter out the items\n          // which don't satisfy the condition.\n          if (this.props.filterFunc && this.props.filter) {\n            let content = [key];\n            if (c.private && c.private.comment) {\n              content.push(('' + c.private.comment).toLowerCase());\n            }\n            if (c.public && c.public.fn) {\n              content.push(('' + c.public.fn).toLowerCase());\n            }\n            if (!this.props.filterFunc(this.props.filter, content)) {\n              return;\n            }\n          }\n\n          const isChannel = Tinode.isChannelTopicName(key);\n          const selected = showCheckmark ?\n            (this.props.topicSelected.indexOf(key) > -1) :\n            (this.props.topicSelected === key);\n          const badges = [];\n          if (this.props.showMode) {\n            if (key == this.props.myUserId) {\n              badges.push({name: formatMessage(messages.badge_you), color: 'green'});\n            }\n            if (c.acs && c.acs.isOwner()) {\n              badges.push({name: formatMessage(messages.badge_owner), color: 'blue'});\n            }\n          }\n\n          const comment = Array.isArray(c.private) ?\n            c.private.join(',') : (c.private ? c.private.comment : null);\n          let preview;\n          let deliveryStatus;\n          if (!this.props.showMode) {\n            const msg = c.latestMessage();\n            if (msg) {\n              deliveryStatus = c.msgStatus(msg);\n              preview = typeof msg.content == 'string' ?\n                msg.content.substr(0, MESSAGE_PREVIEW_LENGTH) :\n                Drafty.preview(msg.content, MESSAGE_PREVIEW_LENGTH);\n            }\n          }\n          contactNodes.push(\n            <Contact\n              title={c.public ? c.public.fn : null}\n              avatar={makeImageUrl(c.public ? c.public.photo : null)}\n              comment={comment}\n              preview={preview}\n              received={deliveryStatus}\n              unread={this.props.showUnread ? c.unread : 0}\n              now={c.online && this.props.connected}\n              acs={c.acs}\n              showMode={this.props.showMode}\n              badges={badges}\n              showCheckmark={showCheckmark}\n              selected={selected}\n              showOnline={this.props.showOnline && !isChannel}\n              isChannel={isChannel}\n              onSelected={this.props.onTopicSelected}\n              showContextMenu={this.props.showContextMenu}\n              item={key}\n              index={contactNodes.length}\n              key={key} />\n          );\n          contactsCount ++;\n        }\n      }, this);\n    }\n\n    return (\n      <div className={this.props.noScroll ? null : \"scrollable-panel\"}>\n        {contactsCount == 0 ?\n          <div className=\"center-medium-text\"\n            dangerouslySetInnerHTML={{__html: this.props.emptyListMessage}} />\n          :\n          null\n        }\n        {contactNodes.length > 0 ?\n          <ul className=\"contact-box\">\n            {contactNodes}\n          </ul>\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ContactList);\n","// The X menu to be displayed in title bars.\nimport React from 'react';\n\nexport default class MenuCancel extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n        <i className=\"material-icons\">close</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nimport MenuCancel from './menu-cancel.jsx';\n\nexport default class ErrorPanel extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      show: false,\n    };\n\n    this.hide = this.hide.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.level !== this.props.level) {\n      this.setState({\n        show: !(!this.props.level)\n      });\n    }\n  }\n\n  hide() {\n    this.setState({show: false});\n    if (this.props.onClearError) {\n      this.props.onClearError();\n    }\n  }\n\n  render() {\n    const icons = {err: 'error', warn: 'warning', info: 'info'}\n    const level = icons[this.props.level] || '';\n    const className = 'info-box ' + level;\n    return (\n      <div className={className}>\n        <div className=\"icon\"><i className=\"material-icons\">{level}</i></div>\n        <span>\n          {this.props.text}\n          {this.props.action ?\n            <>\n              &#32;<a href=\"#\"\n                style={{ whiteSpace: 'nowrap' }}\n                onClick={(e) => {e.preventDefault(); this.props.action();}}>\n                {this.props.actionText}\n              </a>\n            </>\n          : null}\n        </span>\n        <div className=\"cancel\"><MenuCancel onCancel={this.hide} /></div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\n\nexport default class Chip extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel(this.props.topic, this.props.index);\n  }\n\n  render() {\n    const title = this.props.title || this.props.topic;\n    const className = this.props.invalid ? 'chip invalid' : 'chip';\n    return (\n      <div className={className}>\n        {this.props.noAvatar ?\n          <span className=\"spacer\" /> :\n          <div className=\"avatar-box\">\n            <LetterTile\n              avatar={this.props.avatar || true}\n              topic={this.props.topic}\n              title={this.props.title} />\n          </div>\n        }\n        <span>{title}</span>\n        {this.props.onCancel && !this.props.required ?\n          <a href=\"#\" onClick={this.handleCancel} >&times;</a>\n          : <span className=\"spacer\" />}\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport Chip from './chip.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n/* BEGIN ChipInput: group membership widget */\nexport default class ChipInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = ChipInput.deriveStateFromProps(props);\n    this.state.input = '';\n    this.state.focused = false;\n\n    this.handleTextInput = this.handleTextInput.bind(this);\n    this.removeChipAt = this.removeChipAt.bind(this);\n    this.handleChipCancel = this.handleChipCancel.bind(this);\n    this.handleFocusGained = this.handleFocusGained.bind(this);\n    this.handleFocusLost = this.handleFocusLost.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  static deriveStateFromProps(props) {\n    return {\n      placeholder: props.chips ? '' : props.prompt,\n      sortedChips: ChipInput.sortChips(props.chips, props.staticMembers),\n      chipIndex: ChipInput.indexChips(props.chips)\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chips != this.props.chips ||\n      prevProps.staticMembers != this.props.staticMembers ||\n      prevProps.prompt != this.props.prompt) {\n      this.setState(ChipInput.deriveStateFromProps(this.props));\n    }\n    if (!prevState || this.props.chips.length > prevState.sortedChips.length) {\n      this.setState({input: ''});\n    }\n  }\n\n  // Map chip index to user name\n  static indexChips(chips) {\n    const index = {};\n    let count = 0;\n    chips.map((item) => {\n      index[item.user] = count;\n      count ++;\n    });\n    return index;\n  }\n\n  // Have non-removable chips appear before all other chips.\n  static sortChips(chips, keep) {\n    const required = [];\n    const normal = [];\n    chips.map((item) => {\n      if (keep && keep.includes(item.user)) {\n        required.push(item);\n      } else {\n        normal.push(item);\n      }\n    });\n    return required.concat(normal);\n  }\n\n  handleTextInput(e) {\n    this.setState({input: e.target.value});\n    if (this.props.filterFunc) {\n      this.props.filterFunc(e.target.value);\n    }\n  }\n\n  removeChipAt(idx) {\n    const removed = this.state.sortedChips[idx];\n    this.props.onChipRemoved(removed.user, this.state.chipIndex[removed.user]);\n  }\n\n  handleChipCancel(item, idx) {\n    this.removeChipAt(idx);\n  }\n\n  handleFocusGained() {\n    this.setState({focused: true});\n  }\n\n  handleFocusLost() {\n    this.setState({focused: false});\n    if (this.props.onFocusLost) {\n      this.props.onFocusLost(this.state.input);\n    }\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Backspace') {\n      if (this.state.input.length == 0 && this.state.sortedChips.length > 0) {\n        const at = this.state.sortedChips.length - 1;\n        if (this.state.sortedChips[at].user !== this.props.staticMembers) {\n          this.removeChipAt(at);\n        }\n      }\n    } else if (e.key === 'Enter') {\n      if (this.props.onEnter) {\n        this.props.onEnter(this.state.input);\n      }\n    } else if (e.key === 'Escape') {\n      if (this.props.onCancel) {\n        this.props.onCancel();\n      }\n    }\n  }\n\n  render() {\n    const chips = [];\n    let count = 0;\n    const staticMembers = this.props.staticMembers || [];\n    this.state.sortedChips.map((item) => {\n      chips.push(\n        <Chip\n          onCancel={this.handleChipCancel}\n          avatar={makeImageUrl(item.public ? item.public.photo : null)}\n          title={item.public ? item.public.fn : undefined}\n          noAvatar={this.props.avatarDisabled}\n          topic={item.user}\n          required={staticMembers.includes(item.user)}\n          invalid={item.invalid}\n          index={count}\n          key={item.user} />\n      );\n      count++;\n    });\n    const className = \"chip-input\" + (this.state.focused ? ' focused' : '');\n    return (\n      <div className={className}>\n        {chips}\n        <input type=\"text\"\n          placeholder={this.state.placeholder}\n          onChange={this.handleTextInput}\n          onFocus={this.handleFocusGained}\n          onBlur={this.handleFocusLost}\n          onKeyDown={this.handleKeyDown}\n          value={this.state.input}\n          autoFocus />\n      </div>\n    );\n  }\n};\n","// GroupMembers: control for managing a list of group members.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\nimport ContactList from './contact-list.jsx';\n\nconst messages = defineMessages({\n  no_contacts: {\n    id: 'no_contacts',\n    defaultMessage: 'You have no contacts :-(',\n    description: 'Shown in ContactsView when the user has no contacts'\n  },\n  contacts_not_found_short: {\n    id: 'contacts_not_found_short',\n    defaultMessage: \"No contacts match ''{query}''\",\n    description: 'Shown in ContactsView when search returned no results'\n  }\n});\n\nclass GroupManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Array of topic members\n      members: props.members,\n      index: GroupManager.indexMembers(props.members),\n      staticMembers: GroupManager.staticMembers(props.members, props.keepInitialMembers, props.requiredMember),\n      contactFilter: '',\n      noContactsMessage: props.intl.formatMessage(messages.no_contacts),\n      selectedContacts: GroupManager.selectedContacts(props.members)\n    };\n\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleMemberRemoved = this.handleMemberRemoved.bind(this);\n    this.handleContactFilter = this.handleContactFilter.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static indexMembers(members) {\n    let index = {};\n    members.map((m) => {\n      index[m.user] = {delta: 0, present: true}; // Delta: 0 unchanged, +1 added, -1 removed\n    });\n    return index;\n  }\n\n  static staticMembers(members, keepInitial, requiredMember) {\n    let stat = [];\n    members.map((m) => {\n      if (keepInitial || m.user == requiredMember) {\n        stat.push(m.user);\n      }\n    });\n    return stat;\n  }\n\n  static selectedContacts(members) {\n    let sel = [];\n    members.map((m) => {\n      sel.push(m.user);\n    });\n    return sel;\n  }\n\n  handleContactSelected(userId, index) {\n    let status = this.state.index[userId];\n    if (status) {\n      if (status.present) {\n        // Prevent duplicate members\n        return;\n      }\n      status.delta += 1;\n      status.present = true;\n    } else {\n      status = {delta: 1, present: true};\n    }\n\n    let m = this.state.members.slice();\n    m.push(this.props.contacts[index]);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleMemberRemoved(userId, index) {\n    const status = this.state.index[userId];\n    if (!status || !status.present) {\n      return;\n    }\n    status.present = false;\n    status.delta -= 1;\n\n    let m = this.state.members.slice();\n    m.splice(index, 1);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleContactFilter(val) {\n    const {formatMessage} = this.props.intl;\n    const msg = !val ?\n      formatMessage(messages.no_contacts) :\n      formatMessage(messages.contacts_not_found_short, {query: val});\n\n    this.setState({contactFilter: val, noContactsMessage: msg});\n  }\n\n  static doContactFiltering(filter, values) {\n    if (filter) {\n      for (let i=0; i<values.length; i++) {\n        if (values[i].indexOf(filter) >= 0) {\n          return true;\n        }\n      }\n      return false;\n    }\n    return true;\n  }\n\n  handleSubmit() {\n    var instance = this;\n    var members = [];\n    var added = [];\n    var removed = [];\n\n    var keys = Object.keys(this.state.index);\n    keys.map(function(k) {\n      if (instance.state.index[k].present) {\n        members.push(k);\n      }\n\n      if (instance.state.index[k].delta > 0) {\n        added.push(k);\n      } else if (instance.state.index[k].delta < 0) {\n        removed.push(k);\n      }\n    });\n    this.props.onSubmit(members, added, removed);\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <div id=\"group-manager\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_group_members\" defaultMessage=\"Group Members\" description=\"Section title\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ChipInput\n            chips={this.state.members}\n            staticMembers={this.state.staticMembers}\n            prompt=\"add members\"\n            filterFunc={this.handleContactFilter}\n            onChipRemoved={this.handleMemberRemoved} />\n        </div>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_all_contacts\" defaultMessage=\"All Contacts\"\n              description=\"Section title [All Contacts]\" />\n          </label>\n        </div>\n        <ContactList\n          contacts={this.props.contacts}\n          myUserId={this.props.myUserId}\n          topicSelected={this.state.selectedContacts}\n          filter={this.state.contactFilter}\n          filterFunc={GroupManager.doContactFiltering}\n          emptyListMessage={this.state.noContactsMessage}\n          showOnline={false}\n          showUnread={false}\n          onTopicSelected={this.handleContactSelected} />\n        <div id=\"group-manager-buttons\" className=\"panel-form-row\">\n          <button className=\"blue\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n          <button className=\"white\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(GroupManager);\n","// Password with a visiblity toggle.\nimport React from 'react';\n\nexport default class VisiblePassword extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: this.props.value,\n      visible: false\n    };\n\n    this.handleVisibility = this.handleVisibility.bind(this);\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n    if (this.props.onChange) {\n      this.props.onChange(e);\n    }\n  }\n\n  handleVisibility(e) {\n    e.preventDefault();\n    this.setState({visible: !this.state.visible});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode == 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, visible: false});\n      if (this.props.onFinished) {\n        this.props.onFinished();\n      }\n    } else if (e.keyCode == 13) {\n      // Enter pressed\n      this.handleEditingFinished();\n    }\n  }\n\n  handleEditingFinished(e) {\n    if (e) {\n      let currentTarget = e.currentTarget;\n      setTimeout(() => {\n        if (!currentTarget.contains(document.activeElement)) {\n          if (this.props.onFinished) {\n            this.props.onFinished(this.state.value);\n          }\n        }\n      }, 0);\n    } else if (this.props.onFinished) {\n      this.props.onFinished(this.state.value.trim());\n    }\n  }\n\n  render() {\n    return (\n      <div tabIndex=\"-1\" className=\"group-focus\"\n        onBlur={this.handleEditingFinished}>\n        <input className=\"with-visibility\"\n          type={this.state.visible ? \"text\" : \"password\"}\n          value={this.state.value}\n          placeholder={this.props.placeholder}\n          required={this.props.required ? 'required' : ''}\n          autoFocus={this.props.autoFocus ? 'autoFocus' : ''}\n          autoComplete={this.props.autoComplete}\n          onChange={this.handeTextChange}\n          onKeyDown={this.handleKeyDown} />\n        <span onClick={this.handleVisibility}>\n          <i className=\"material-icons clickable light-gray\">\n            {this.state.visible ? 'visibility' : 'visibility_off'}\n          </i>\n        </span>\n      </div>\n    );\n  }\n}\n","// In-place text editor. Shows text with an icon which toggles it into an input field.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport VisiblePassword from './visible-password.jsx';\n\nexport default class InPlaceEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      active: props.active,\n      initialValue: props.value || '',\n      value: props.value || ''\n    };\n\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleStartEditing = this.handleStartEditing.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n    this.handlePasswordFinished = this.handlePasswordFinished.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // If text has changed while in read mode, update text and discard changes.\n    // Ignore update if in edit mode.\n    const newValue = this.props.value || '';\n    if (prevState.initialValue != newValue && !prevState.active) {\n      this.setState({\n        initialValue: newValue,\n        value: newValue\n      });\n    }\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, active: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleEditingFinished(e);\n    }\n  }\n\n  handleStartEditing() {\n    if (!this.props.readOnly) {\n      ReactDOM.findDOMNode(this).focus();\n      this.setState({active: true});\n    }\n  }\n\n  handleEditingFinished(event) {\n    if (this.props.required && !event.target.checkValidity()) {\n      // Empty input\n      this.setState({value: this.props.value, active: false});\n      return;\n    }\n    this.setState({active: false});\n    let value = this.state.value.trim();\n    if ((value || this.props.value) && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  handlePasswordFinished(value) {\n    this.setState({active: false});\n    if (value && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  render() {\n    if (this.state.active) {\n      var fieldType = this.props.type || 'text';\n    } else {\n      var spanText = this.props.type == 'password' ? '••••••••' : this.state.value;\n      var spanClass = 'in-place-edit' +\n        (this.props.readOnly ? ' disabled' : '');\n      if (!spanText) {\n        spanText = this.props.placeholder;\n        spanClass += ' placeholder';\n      }\n      if (spanText.length > 20) {\n        // FIXME: this is wrong for RTL languages.\n        spanText = spanText.substring(0, 19) + '...';\n      }\n    }\n    return (\n      this.state.active ?\n        (fieldType == 'password' ?\n          <VisiblePassword\n            value={this.state.value}\n            placeholder={this.props.placeholder}\n            required={this.props.required ? 'required' : ''}\n            autoComplete={this.props.autoComplete}\n            autoFocus={true}\n            onFinished={this.handlePasswordFinished}/>\n          :\n          <input type={fieldType}\n            value={this.state.value}\n            placeholder={this.props.placeholder}\n            required={this.props.required ? 'required' : ''}\n            autoComplete={this.props.autoComplete}\n            autoFocus\n            onChange={this.handeTextChange}\n            onKeyDown={this.handleKeyDown}\n            onBlur={this.handleEditingFinished} />\n        )\n        :\n        <span className={spanClass} onClick={this.handleStartEditing}>\n          <span className=\"content\">{spanText}</span>\n        </span>\n    );\n  }\n};\n","// Toggle [Title text >] -> [Title text v]\n\nimport React from 'react';\n\nexport default class MoreButton extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: props.open\n    };\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n\n  handleToggle() {\n    const open = !this.state.open;\n    this.setState({open: open});\n    if (this.props.onToggle) {\n      this.props.onToggle(open);\n    }\n  }\n\n  render() {\n    return (<label className=\"small clean-clickable\" onClick={this.handleToggle}>{this.props.title}...\n      {this.state.open ? <i className=\"material-icons\">expand_more</i> :\n        <i className=\"material-icons\">chevron_right</i>}\n      </label>);\n  }\n}\n","// PermissionsEditor: Component for editing permissions\n// <PermissionsEditor mode=\"JWROD\" skip=\"O\" onChange={this.handleCheckboxTest} />\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport CheckBox from './checkbox.jsx';\nimport Contact from './contact.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n// Translatable permission names.\nconst messages = defineMessages({\n  'joiner': {\n    id: 'permission_join',\n    defaultMessage: \"Join ({val})\",\n    description: 'Name of J permission'\n  },\n  'reader': {\n    id: 'permission_read',\n    defaultMessage: \"Read ({val})\",\n    description: 'Name of R permission'\n  },\n  'writer': {\n    id: 'permission_write',\n    defaultMessage: \"Write ({val})\",\n    description: 'Name of W permission'\n  },\n  'preser': {\n    id: 'permission_pres',\n    defaultMessage: \"Get notified ({val})\",\n    description: 'Name of P permission'\n  },\n  'approver': {\n    id: 'permission_admin',\n    defaultMessage: \"Approve ({val})\",\n    description: 'Name of A permission'\n  },\n  'sharer': {\n    id: 'permission_share',\n    defaultMessage: \"Share ({val})\",\n    description: 'Name of S permission'\n  },\n  'deleter': {\n    id: 'permission_delete',\n    defaultMessage: \"Delete ({val})\",\n    description: 'Name of D permission'\n  },\n  'owner': {\n    id: 'permission_owner',\n    defaultMessage: \"Owner ({val})\",\n    description: 'Name of O permission'\n  }\n});\n\nclass PermissionsEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mode: (props.mode || '').replace('N', '')\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(val) {\n    let mode = this.state.mode;\n    let idx = mode.indexOf(val);\n    if (idx == -1) {\n      mode += val;\n    } else {\n      mode = mode.replace(val, '');\n    }\n    this.setState({mode: mode});\n  }\n\n  handleSubmit() {\n    // Normalize string, otherwise cannot check if mode has changed.\n    var mode = (this.state.mode || 'N').split('').sort().join('');\n    var before = (this.props.mode || 'N').split('').sort().join('')\n    if (mode !== before) {\n      this.props.onSubmit(mode);\n    } else {\n      this.props.onCancel();\n    }\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const all = 'JRWPASDO';\n    const names = {\n      'J': formatMessage(messages.joiner, {val: 'J'}),\n      'R': formatMessage(messages.reader, {val: 'R'}),\n      'W': formatMessage(messages.writer, {val: 'W'}),\n      'P': formatMessage(messages.preser, {val: 'P'}),\n      'A': formatMessage(messages.approver, {val: 'A'}),\n      'S': formatMessage(messages.sharer, {val: 'S'}),\n      'D': formatMessage(messages.deleter, {val: 'D'}),\n      'O': formatMessage(messages.owner, {val: 'O'})\n    };\n\n    let skip = this.props.skip || '';\n    let mode = this.state.mode;\n    let compare = (this.props.compare || '').replace('N', '');\n    let items = [];\n    for (let i=0; i<all.length; i++) {\n      let c = all.charAt(i);\n      if (skip.indexOf(c) >= 0 && mode.indexOf(c) < 0) {\n        // Permission is marked as inactive: hide unchecked permissions, disable checked permissions\n        continue;\n      }\n      items.push(\n        <tr key={c}>\n          <td>{names[c]}</td>\n          <td className=\"checkbox\">{skip.indexOf(c) < 0 ?\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} onChange={this.handleChange}/>\n            :\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} />\n          }</td>{this.props.compare ? <td className=\"checkbox\">\n            <CheckBox name={c} checked={(compare.indexOf(c) >= 0)}/>\n          </td> : null}\n        </tr>\n      );\n    }\n\n    return (\n      <div className=\"panel-form-column\">\n        {this.props.userTitle ?\n          <ul className=\"contact-box\"><Contact\n            item={this.props.item}\n            title={this.props.userTitle}\n            avatar={makeImageUrl(this.props.userAvatar ? this.props.userAvatar : null)} /></ul> : null}\n        <label className=\"small\"><FormattedMessage id=\"title_permissions\"\n          defaultMessage=\"Permissions\" description=\"Section title\"/></label>\n        <table className=\"permission-editor\">\n        {this.props.compare ?\n          <thead><tr>\n            <th></th><th>{this.props.modeTitle}</th>\n            <th>{this.props.compareTitle}</th>\n          </tr></thead> :\n          null}\n        <tbody>\n          {items}\n        </tbody></table>\n        <br />\n        <div className=\"dialog-buttons\">\n          <button className=\"outline\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" />\n          </button>\n          <button className=\"blue\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(PermissionsEditor);\n","// TagManager: edit topic or user tags.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\n\nimport { MAX_TAG_COUNT, MAX_TAG_LENGTH, MIN_TAG_LENGTH } from '../config.js';\nimport { arrayEqual } from '../lib/utils.js';\n\nexport default class TagManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tags: this.props.tags,\n      tagInput: '',\n      activated: this.props.activated\n    };\n\n    this.handleTagInput = this.handleTagInput.bind(this);\n    this.handleAddTag = this.handleAddTag.bind(this);\n    this.handleRemoveTag = this.handleRemoveTag.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (!arrayEqual(nextProps.tags, prevState.tags) && !prevState.activated) {\n      return {tags: nextProps.tags};\n    }\n    return null;\n  }\n\n  handleTagInput(text) {\n    this.setState({tagInput: text});\n    if (text.length > 0) {\n      const last = text[text.length-1];\n      if (text[0] == '\"') {\n        // This is a quoted string.\n        if (text.length > 1 && last == '\"') {\n          this.handleAddTag(text.substring(1, text.length-1));\n        }\n      } else if (last == ',' || last == ' ' || last == ';' || last == '\"') {\n        // User entered ',', ' ' or ';'\n        this.handleAddTag(text.substring(0, text.length-1).trim());\n      }\n    }\n  }\n\n  handleAddTag(tag) {\n    const maxTagCount = this.props.tinode.getServerLimit('maxTagCount', MAX_TAG_COUNT);\n\n    if (tag.length > 0 && this.state.tags.length < maxTagCount) {\n      const tags = this.state.tags.slice(0);\n      tags.push(tag);\n\n      this.setState({tags: tags, tagInput: ''});\n      if (this.props.onTagsChanged) {\n        this.props.onTagsChanged(tags);\n      }\n      return tags;\n    }\n    return this.state.tags;\n  }\n\n  handleRemoveTag(tag, index) {\n    const tags = this.state.tags.slice(0);\n    tags.splice(index, 1);\n    this.setState({tags: tags});\n    if (this.props.onTagsChanged) {\n      this.props.onTagsChanged(tags);\n    }\n  }\n\n  handleSubmit() {\n    // Add unprocessed input to tags, submit the list.\n    this.props.onSubmit(this.handleAddTag(this.state.tagInput.trim()));\n    this.setState({activated: false, tags: this.props.tags});\n  }\n\n  handleCancel() {\n    this.setState({activated: false, tagInput: '', tags: this.props.tags});\n    if (this.props.onCancel) {\n      this.props.onCancel();\n    }\n  }\n\n  render() {\n    const minTagLength = this.props.tinode.getServerLimit('minTagLength', MIN_TAG_LENGTH);\n    const maxTagLength = this.props.tinode.getServerLimit('maxTagLength', MAX_TAG_LENGTH);\n\n    let tags = [];\n    if (this.state.activated) {\n      this.state.tags.map((tag) => {\n        tags.push({user: tag, invalid: (tag.length < minTagLength || tag.length > maxTagLength)});\n      });\n    } else {\n      this.state.tags.map((tag) => {\n        tags.push(<span className=\"badge\" key={tags.length}>{tag}</span>);\n      });\n      if (tags.length == 0) {\n        tags = (\n          <i>\n            <FormattedMessage id=\"tags_not_found\" defaultMessage=\"No tags defined. Add some.\" description=\"\" />\n          </i>\n        );\n      }\n    }\n    return (\n      <div className=\"panel-form-column\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">{this.props.title}</label>\n        </div>\n        {this.state.activated ?\n        <div>\n          <FormattedMessage id=\"tags_editor_no_tags\" defaultMessage=\"Add some tags\"\n            description=\"Tag editor prompt when no tags are found.\">{\n            (add_tags_prompt) => <ChipInput\n              chips={tags}\n              avatarDisabled={true}\n              prompt={add_tags_prompt}\n              onEnter={this.handleAddTag}\n              onFocusLost={this.handleAddTag}\n              onCancel={this.handleCancel}\n              onChipRemoved={this.handleRemoveTag}\n              filterFunc={this.handleTagInput} />\n          }</FormattedMessage>\n          {this.props.onSubmit || this.props.onCancel ?\n            <div id=\"tag-manager-buttons\" className=\"dialog-buttons panel-form-row\">\n              <button className=\"outline\" onClick={this.handleCancel}>\n                <FormattedMessage id=\"button_cancel\" defautMessage=\"Cancel\" description=\"Rejection button [Cancel]\" />\n              </button>\n              <button className=\"blue\" onClick={this.handleSubmit}>\n                <FormattedMessage id=\"button_ok\" defautMessage=\"OK\" description=\"Confirmation button [OK]\" />\n              </button>\n            </div>\n          : null}\n        </div>\n        :\n        <div className=\"quoted\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.setState({activated: true});}}>\n            <i className=\"material-icons\">edit</i> &nbsp;<FormattedMessage id=\"title_manage_tags\" defaultMessage=\"Manage\"\n              description=\"Section title for the list of tags\" />\n          </a>\n          <>{tags}</>\n        </div>\n      }\n      </div>\n    );\n  }\n};\n","// InfoView: panel with topic/user info.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport ContactList from '../widgets/contact-list.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupManager from '../widgets/group-manager.jsx';\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport MenuCancel from '../widgets/menu-cancel.jsx';\nimport MoreButton from '../widgets/more-button.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\nimport TagManager from '../widgets/tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH, NO_ACCESS_MODE } from '../config.js';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, vcard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  requested: {\n    id: 'requested_permissions',\n    defaultMessage: 'Requested',\n    description: 'Title for permissions'\n  },\n  granted: {\n    id: 'granted_permissions',\n    defaultMessage: 'Granted',\n    description: 'Title for permissions'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n  other_user: {\n    id: 'label_other_user',\n    defaultMessage: 'Other',\n    description: 'Label for the other user when the user is unnamed'\n  },\n  clear_messages: {\n    id: 'action_clear_messages',\n    defaultMessage: 'Clear Messages',\n    description: 'Flat button [Clear Messages] (soft-delete messages)'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n  delete_messages: {\n    id: 'action_delete_messages',\n    defaultMessage: 'Clear Messages for All',\n    description: 'Flat button [Clear for All] (hard-delete all messages)'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  leave_chat: {\n    id: 'action_leave_chat',\n    defaultMessage: 'Leave Conversation',\n    description: 'Flat button [Leave Conversation]'\n  },\n  leave_chat_warning: {\n    id: 'leave_chat_warning',\n    defaultMessage: 'Are you sure you want to leave this conversation?',\n    description: 'Alert dialog warning when unsubscribing from a chat.'\n  },\n  block_contact: {\n    id: 'action_block_contact',\n    defaultMessage: \"Block Contact\",\n    description: \"Flat button [Block Contact]\"\n  },\n  block_contact_warning: {\n    id: 'block_contact_warning',\n    defaultMessage: 'Are you sure you want to block this contact?',\n    description: 'Alert dialog warning when blocking a contact.'\n  },\n  report_chat: {\n    id: 'action_report_chat',\n    defaultMessage: 'Report Conversation',\n    description: 'Flat button [Report Group]'\n  },\n  report_chat_warning: {\n    id: 'report_chat_warning',\n    defaultMessage: 'Are you sure you want to block and report this conversation?',\n    description: 'Alert dialog warning when reporting a conversation for abuse'\n  },\n});\n\nclass InfoView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      topic: null,\n      owner: false,\n      admin: false,\n      sharer: false,\n      deleter: false,\n      muted: false,\n      address: null,\n      groupTopic: undefined,\n      channel: undefined,\n      fullName: undefined,\n      avatar: null,\n      private: null,\n      selectedContact: null,\n      access: null,\n      modeGiven: null,\n      modeWant: null,\n      modeGiven2: null, // P2P topic, the other user mode given\n      modeWant2: null,  // P2P topic, the other user mode want\n      auth: null,\n      anon: null,\n      contactList: [],\n      tags: [],\n      showMemberPanel: false,\n      showPermissionEditorFor: undefined,\n      moreInfoExpanded: false,\n      previousMetaDesc: undefined,\n      previousSubsUpdated: undefined,\n      previousTagsUpdated: undefined\n    };\n\n    this.resetSubs = this.resetSubs.bind(this);\n    this.resetDesc = this.resetDesc.bind(this);\n    this.onMetaDesc = this.onMetaDesc.bind(this);\n    this.onSubsUpdated = this.onSubsUpdated.bind(this);\n    this.onTagsUpdated = this.onTagsUpdated.bind(this);\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\n    this.handlePrivateUpdate = this.handlePrivateUpdate.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleMuted = this.handleMuted.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handleShowAddMembers = this.handleShowAddMembers.bind(this);\n    this.handleHideAddMembers = this.handleHideAddMembers.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleDeleteMessages = this.handleDeleteMessages.bind(this);\n    this.handleLeave = this.handleLeave.bind(this);\n    this.handleBlock = this.handleBlock.bind(this);\n    this.handleReport = this.handleReport.bind(this);\n    this.handleMemberSelected = this.handleMemberSelected.bind(this);\n    this.handleMoreInfo = this.handleMoreInfo.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.handleContextMenu = this.handleContextMenu.bind(this);\n  }\n\n  // No need to separately handle component mount.\n  componentDidUpdate(props) {\n    const topic = this.props.tinode.getTopic(props.topic);\n    if (!topic) {\n      return;\n    }\n\n    if (this.onMetaDesc != topic.onMetaDesc) {\n      this.previousMetaDesc = topic.onMetaDesc;\n      topic.onMetaDesc = this.onMetaDesc;\n\n      this.previousSubsUpdated = topic.onSubsUpdated;\n      topic.onSubsUpdated = this.onSubsUpdated;\n\n      if (topic.getType() == 'grp') {\n        this.previousTagsUpdated = topic.onTagsUpdated;\n        topic.onTagsUpdated = this.onTagsUpdated;\n      } else {\n        this.previousTagsUpdated = undefined;\n      }\n    }\n\n    if (this.state.topic != props.topic) {\n      this.setState({topic: props.topic});\n      this.resetDesc(topic, props);\n      this.resetSubs(topic, props);\n    }\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.setState({topic: null});\n    topic.onMetaDesc = this.previousMetaDesc;\n    topic.onSubsUpdated = this.previousSubsUpdated;\n    topic.onTagsUpdated = this.previousTagsUpdated;\n  }\n\n  resetSubs(topic, props) {\n    const newState = {contactList: []};\n    if (topic.getType() == 'p2p') {\n      // Fetch the other party in the p2p conversation.\n      // Topic may not be ready yet, so check if user is found.\n      const user2 = topic.subscriber(props.topic);\n      if (user2) {\n        newState.modeGiven2 = user2.acs.getGiven();\n        newState.modeWant2 = user2.acs.getWant();\n      } else {\n        newState.modeGiven2 = NO_ACCESS_MODE;\n        newState.modeWant2 = NO_ACCESS_MODE;\n      }\n    } else {\n      topic.subscribers((sub) => {\n        newState.contactList.push(sub);\n      }, this);\n    }\n\n    this.setState(newState);\n  }\n\n  resetDesc(topic, props) {\n    const defacs = topic.getDefaultAccess() || {};\n    const acs = topic.getAccessMode();\n\n    this.setState({\n      owner: acs && acs.isOwner(),\n      admin: acs && acs.isAdmin(),\n      sharer: acs && acs.isSharer(),\n      deleter: acs && acs.isDeleter(),\n      muted: acs && acs.isMuted(),\n\n      fullName: topic.public ? topic.public.fn : undefined,\n      avatar: makeImageUrl(topic.public ? topic.public.photo : null),\n      private: topic.private ? topic.private.comment : null,\n      address: topic.name,\n      groupTopic: topic.isGroupType(),\n      channel: topic.isChannelType(),\n      showMemberPanel: false,\n      access: acs ? acs.getMode() : undefined,\n      modeGiven: acs ? acs.getGiven() : undefined,\n      modeWant: acs ? acs.getWant() : undefined,\n      auth: defacs.auth,\n      anon: defacs.anon\n    });\n\n    if (topic.getType() == 'grp' && acs && acs.isOwner()) {\n      // Requesting tags: owner is editing the topic.\n      topic.getMeta(topic.startMetaQuery().withTags().build());\n    }\n  }\n\n  onMetaDesc(desc) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetDesc(topic, this.props);\n\n    if (this.previousMetaDesc && this.previousMetaDesc != this.onMetaDesc) {\n      this.previousMetaDesc(desc);\n    }\n  }\n\n  onSubsUpdated(subs) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetSubs(topic, this.props);\n\n    if (this.previousSubsUpdated && this.previousSubsUpdated != this.onSubsUpdated) {\n      this.previousSubsUpdated(subs);\n    }\n  }\n\n  onTagsUpdated(tags) {\n    this.setState({tags: tags});\n\n    if (this.previousTagsUpdated && this.previousTagsUpdated != this.onTagsUpdated) {\n      this.previousTagsUpdated();\n    }\n  }\n\n  handleFullNameUpdate(fn) {\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.fullName !== fn) {\n      this.setState({fullName: fn});\n      this.props.onTopicDescUpdate(this.props.topic, vcard(fn, null), null);\n    }\n  }\n\n  handlePrivateUpdate(comment) {\n    comment = comment.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.private !== comment) {\n      this.setState({private: comment});\n      this.props.onTopicDescUpdate(this.props.topic, null, comment || Tinode.DEL_CHAR);\n    }\n  }\n\n  handleImageChanged(img) {\n    this.setState({avatar: img});\n    this.props.onTopicDescUpdate(this.props.topic, vcard(null, img || Tinode.DEL_CHAR), null);\n  }\n\n  handleMuted(ignored, checked) {\n    this.setState({muted: checked});\n    this.props.onChangePermissions(this.props.topic, checked ? '-P' : '+P');\n  }\n\n  handlePermissionsChanged(perm) {\n    switch (this.state.showPermissionEditorFor) {\n      case 'auth':\n        this.props.onTopicDescUpdate(this.props.topic, null, null, {auth: perm});\n        break;\n      case 'anon':\n        this.props.onTopicDescUpdate(this.props.topic, null, null, {anon: perm});\n        break;\n      case 'mode':\n      case 'want':\n        this.props.onChangePermissions(this.props.topic, perm);\n        break;\n      case 'given':\n        this.props.onChangePermissions(this.props.topic, perm, this.props.topic);\n        break;\n      case 'user':\n        this.props.onChangePermissions(this.props.topic, perm, this.state.userPermissionsEdited);\n        break;\n    }\n\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handleLaunchPermissionsEditor(which, uid) {\n    const {formatMessage} = this.props.intl;\n    let toEdit, toCompare, toSkip, titleEdit, titleCompare, userTitle, userAvatar;\n    switch (which) {\n      case 'mode':\n        toEdit = this.state.access;\n        break;\n      case 'want':\n        toEdit = this.state.modeWant;\n        toCompare = this.state.modeGiven;\n        if (this.state.owner) {\n          // Don't allow owner to unset 'O' permission. All other permissions are OK.\n          toSkip = 'O';\n        } else {\n          // Allow accepting any of 'ASDO' permissions but don't allow asking for them.\n          toSkip = Tinode.AccessMode.encode(Tinode.AccessMode.diff('ASDO', this.state.modeGiven));\n          if (this.state.channel) {\n            // Channels are read-only.\n            toSkip += 'W';\n          }\n        }\n        titleEdit = formatMessage(messages.requested);\n        titleCompare = formatMessage(messages.granted);\n        break;\n      case 'given':\n        toEdit = this.state.modeGiven2;\n        toCompare = this.state.modeWant2;\n        toSkip = this.state.groupTopic ? (this.state.owner ? '' : 'O') : 'ASDO';\n        titleEdit = formatMessage(messages.granted);\n        titleCompare = formatMessage(messages.requested);\n        break;\n      case 'auth':\n        toEdit = this.state.auth;\n        toSkip = 'O';\n        break;\n      case 'anon':\n        toEdit = this.state.anon;\n        toSkip = 'O';\n        break;\n      case 'user': {\n        const topic = this.props.tinode.getTopic(this.props.topic);\n        if (!topic) {\n          return;\n        }\n        const user = topic.subscriber(uid);\n        if (!user || !user.acs) {\n          return;\n        }\n        toEdit = user.acs.getGiven();\n        toCompare = user.acs.getWant();\n        toSkip = this.state.owner ? '' : 'O';\n        titleEdit = formatMessage(messages.granted);\n        titleCompare = formatMessage(messages.requested);\n        if (user.public) {\n          userTitle = user.public.fn;\n          userAvatar = user.public.photo;\n        }\n        break;\n      }\n      default:\n        console.log(\"Unknown permission editing mode '\" + which + \"'\");\n        break;\n    }\n    this.setState({\n      showPermissionEditorFor: which,\n      userPermissionsEdited: uid,\n      userPermissionsTitle: userTitle,\n      userPermissionsAvatar: userAvatar,\n      editedPermissions: toEdit,\n      immutablePermissions: toCompare,\n      editedPermissionsTitle: titleEdit,\n      immutablePermissionsTitle: titleCompare,\n      editedPermissionsSkipped: toSkip,\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handleShowAddMembers(e) {\n    e.preventDefault();\n    this.props.onInitFind();\n    this.setState({showMemberPanel: true});\n  }\n\n  handleHideAddMembers() {\n    this.setState({showMemberPanel: false});\n  }\n\n  handleMemberUpdateRequest(members, added, removed) {\n    this.props.onMemberUpdateRequest(this.props.topic, added, removed);\n    this.setState({showMemberPanel: false});\n  }\n\n  handleDeleteMessages(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(this.state.deleter ? messages.delete_messages : messages.clear_messages), // title\n      formatMessage(this.state.deleter ? messages.delete_messages_warning : messages.clear_messages_warning), // content\n      (() => { this.props.onDeleteMessages(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleLeave(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.leave_chat), // title\n      formatMessage(messages.leave_chat_warning), // content\n      (() => { this.props.onLeaveTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleBlock(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.block_contact), // title\n      formatMessage(messages.block_contact_warning), // content\n      (() => { this.props.onBlockTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleReport(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.report_chat), // title\n      formatMessage(messages.report_chat_warning), // content\n      (() => { this.props.onReportTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleMemberSelected(uid) {\n    this.setState({selectedContact: uid});\n  }\n\n  handleMoreInfo(open) {\n    this.setState({moreInfoExpanded: open});\n  }\n\n  handleTagsUpdated(tags) {\n    if (!arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      this.props.onTopicTagsUpdate(this.props.topic, tags);\n    }\n  }\n\n  handleContextMenu(params) {\n    const {formatMessage} = this.props.intl;\n    const instance = this;\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    const user = topic.subscriber(params.topicName);\n    if (!user || !user.acs) {\n      return;\n    }\n\n    const menuItems = [\n      {title: formatMessage(messages.edit_permissions), handler: function() {\n        instance.handleLaunchPermissionsEditor('user', params.topicName);\n      }},\n      'member_delete',\n      user.acs.isMuted() ? 'member_unmute' : 'member_mute',\n      user.acs.isJoiner() ? 'member_block' : 'member_unblock'\n    ];\n    this.props.showContextMenu({\n      topicName: this.props.topic,\n      x: params.x,\n      y: params.y,\n      user: params.topicName}, menuItems);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n\n    return (\n      <div id=\"info-view\">\n        <div className=\"caption-panel\" id=\"info-caption-panel\">\n          <div className=\"panel-title\" id=\"info-title\">\n            <FormattedMessage id=\"title_info\" defaultMessage=\"Info\" description=\"Title for InfoView\" />\n          </div>\n          <div>\n            <MenuCancel onCancel={this.props.onCancel} />\n          </div>\n        </div>\n        {this.props.displayMobile ?\n          <ErrorPanel\n            level={this.props.errorLevel}\n            text={this.props.errorText}\n            onClearError={this.props.onError} /> : null}\n        {this.state.showMemberPanel ?\n          <GroupManager\n            members={this.state.contactList}\n            requiredMember={this.props.myUserId}\n            keepInitialMembers={!this.state.admin && !this.state.owner}\n            myUserId={this.props.myUserId}\n            contacts={this.props.searchableContacts}\n            onCancel={this.handleHideAddMembers}\n            onSubmit={this.handleMemberUpdateRequest} />\n          :\n        this.state.showPermissionEditorFor ?\n          <PermissionsEditor\n            mode={this.state.editedPermissions}\n            compare={this.state.immutablePermissions}\n            skip={this.state.editedPermissionsSkipped}\n            modeTitle={this.state.editedPermissionsTitle}\n            compareTitle={this.state.immutablePermissionsTitle}\n            userTitle={this.state.userPermissionsTitle}\n            item={this.state.userPermissionsEdited}\n            userAvatar={this.state.userPermissionsAvatar}\n            onSubmit={this.handlePermissionsChanged}\n            onCancel={this.handleHidePermissionsEditor}\n            />\n          :\n          <div id=\"info-view-content\" className=\"scrollable-panel\">\n            <div className=\"panel-form-row\">\n              <div className=\"panel-form-column\">\n                <div><label className=\"small\">\n                  <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                    description=\"Label for editing topic name\" />\n                </label></div>\n                <div><InPlaceEdit\n                    placeholder={this.state.groupTopic ? \"Group name\" : <i>Unknown</i>}\n                    readOnly={!this.state.owner}\n                    value={this.state.fullName}\n                    required={true}\n                    onFinished={this.handleFullNameUpdate} /></div>\n                <div>\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                      description=\"Label for editing 'private'\" />\n                  </label>\n                </div>\n                <div>\n                  <FormattedMessage id=\"private_editing_placeholder\"\n                    defaultMessage=\"Visible to you only\"\n                    description=\"Placeholder for editing 'private'\">{\n                    (private_placeholder) => <InPlaceEdit\n                      placeholder={private_placeholder}\n                      value={this.state.private}\n                      onFinished={this.handlePrivateUpdate} />\n                  }</FormattedMessage>\n                </div>\n              </div>\n              <AvatarUpload\n                avatar={this.state.avatar}\n                readOnly={!this.state.owner}\n                uid={this.props.topic}\n                title={this.state.fullName}\n                onImageChanged={this.handleImageChanged}\n                onError={this.props.onError} />\n            </div>\n            <div className=\"hr\" />\n            <div className=\"panel-form-column\">\n              <div className=\"panel-form-row\">\n                <label>\n                  <FormattedMessage id=\"label_muting_topic\" defaultMessage=\"Muted:\"\n                    description=\"Label for Muting/unmuting the topic\" />\n                </label>\n                <CheckBox name=\"P\" checked={this.state.muted}\n                  onChange={this.handleMuted} />\n              </div>\n              <FormattedMessage id=\"action_more\" defaultMessage=\"More\"\n                description=\"Action for showing more content\">{\n                (more) => <MoreButton\n                  title={more}\n                  open={this.state.moreInfoExpanded}\n                  onToggle={this.handleMoreInfo} />\n              }</FormattedMessage>\n              {this.state.moreInfoExpanded ?\n                <div className=\"panel-form-column\">\n                  <div className=\"panel-form-row\">\n                    <label><FormattedMessage id=\"label_user_id\" /></label>\n                    <tt>{this.state.address}</tt>\n                  </div>\n                  {this.state.groupTopic ?\n                    <div className=\"panel-form-row\">\n                      <label>\n                        <FormattedMessage id=\"label_your_permissions\" defaultMessage=\"Your permissions:\"\n                          description=\"Label for current user permissions\" />\n                      </label>\n                      <tt className=\"clickable\"\n                        onClick={this.handleLaunchPermissionsEditor.bind(this, 'want')}>\n                        {this.state.access}\n                      </tt>\n                    </div>\n                    :\n                    <div>\n                      <div>\n                        <label className=\"small\">\n                          <FormattedMessage id=\"label_permissions\" defaultMessage=\"Permissions:\"\n                            description=\"Section title\" />\n                        </label>\n                      </div>\n                      <div className=\"quoted\">\n                        <div>\n                          <FormattedMessage id=\"label_you\" defaultMessage=\"You:\"\n                            description=\"Label for the current user\" /> &nbsp;<tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'want')}>\n                          {this.state.access}\n                        </tt></div>\n                        <div>{this.state.fullName ? this.state.fullName : formatMessage(messages.other_user)}:\n                          &nbsp;<tt className=\"clickable\" onClick={this.handleLaunchPermissionsEditor.bind(this, 'given')}>\n                          {this.state.modeGiven2}\n                          </tt>\n                        </div>\n                      </div>\n                    </div>\n                  }\n                  {this.state.sharer && (this.state.auth || this.state.anon) ?\n                  <div>\n                    <div>\n                      <label className=\"small\">\n                        <FormattedMessage id=\"label_default_access\" defaultMessage=\"Default access mode:\"\n                          description=\"Section title\" />\n                      </label>\n                    </div>\n                    <div className=\"quoted\">\n                      <div>Auth: {this.state.admin ?\n                        <tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>\n                          {this.state.auth}\n                        </tt>\n                        :\n                        <tt>{this.state.auth}</tt>\n                      }\n                      </div>\n                      <div>Anon: {this.state.admin ?\n                        <tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>\n                          {this.state.anon}\n                        </tt>\n                        :\n                        <tt>{this.state.anon}</tt>\n                      }\n                      </div>\n                    </div>\n                  </div>\n                  :\n                  null\n                }\n                </div>\n              :\n              null\n              }\n            </div>\n            <div className=\"hr\" />\n            {this.state.owner ?\n              <>\n                <FormattedMessage id=\"title_tag_manager\">{\n                  (tags) => <TagManager\n                    title={tags}\n                    tags={this.state.tags}\n                    activated={false}\n                    tinode={this.props.tinode}\n                    onSubmit={this.handleTagsUpdated} />\n                }</FormattedMessage>\n                <div className=\"hr\" />\n              </>\n              :\n              null\n            }\n            <div className=\"panel-form-column\">\n              {!this.state.channel ?\n                <a href=\"#\" className=\"flat-button\" onClick={this.handleDeleteMessages}>\n                  <i className=\"material-icons\">delete_outline</i> &nbsp;{\n                    formatMessage(this.state.deleter ? messages.delete_messages : messages.clear_messages)\n                  }\n                </a>\n                :\n                null\n              }\n              <a href=\"#\" className=\"red flat-button\" onClick={this.handleLeave}>\n                <i className=\"material-icons\">exit_to_app</i> &nbsp;{formatMessage(messages.leave_chat)}\n              </a>\n              {!this.state.groupTopic ?\n                <a href=\"#\" className=\"red flat-button\" onClick={this.handleBlock}>\n                  <i className=\"material-icons\">block</i> &nbsp;{formatMessage(messages.block_contact)}\n                </a>\n                :\n                null\n              }\n              {!this.state.owner ?\n                <a href=\"#\" className=\"red flat-button\" onClick={this.handleReport}>\n                  <i className=\"material-icons\">report</i> &nbsp;{formatMessage(messages.report_chat)}\n                </a>\n                :\n                null\n              }\n            </div>\n            {this.state.groupTopic && this.state.sharer ?\n              <>\n                <div className=\"hr\" />\n                <div className=\"panel-form-column\">\n                  <div className=\"panel-form-row\">\n                    <label className=\"small\">\n                      <FormattedMessage id=\"label_group_members\" defaultMessage=\"Group members:\"\n                        description=\"Section title or label\" />\n                    </label>\n                  </div>\n                  <div className=\"panel-form-row\">\n                    <a href=\"#\" className=\"flat-button\" onClick={this.handleShowAddMembers}>\n                      <i className=\"material-icons\">person_add</i> &nbsp;<FormattedMessage id=\"button_add_members\"\n                        defaultMessage=\"Add members\" description=\"Flat button [Add members] (to topic)\" />\n                    </a>\n                  </div>\n                  <FormattedMessage id=\"group_has_no_members\" defaultMessage=\"No members\"\n                    description=\"Shown in place of group members\">{\n                    (no_members) => <ContactList\n                      contacts={this.state.contactList}\n                      myUserId={this.props.myUserId}\n                      emptyListMessage={no_members}\n                      topicSelected={this.state.selectedContact}\n                      showOnline={false}\n                      showUnread={false}\n                      showMode={true}\n                      noScroll={true}\n                      onTopicSelected={this.handleMemberSelected}\n                      showContextMenu={this.state.admin ? this.handleContextMenu : false}\n                    />\n                  }</FormattedMessage>\n                </div>\n              </>\n              :\n              null\n            }\n          </div>\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(InfoView);\n","// File uload/download progress indicator with a cancel inside.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class FileProgress extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"uploader\">\n        <div><span style={{width: (this.props.progress * 100) + \"%\"}}></span></div>\n        {this.props.progress < 0.999 ?\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n            <i className=\"material-icons\">close</i> <FormattedMessage id=\"action_cancel\"\n              defaultMessage=\"cancel\" description=\"Call to action [cancel]\" />\n          </a>\n          :\n          <FormattedMessage id=\"upload_finishing\" defaultMessage=\"finishing...\"\n            description=\"Notification that upload is finishing\" />\n        }\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\nimport { bytesToHumanSize } from '../lib/strformat.js';\nimport { isUrlRelative, sanitizeUrl } from '../lib/utils.js';\n\nexport default class Attachment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      downloader: null,\n      progress: 0\n    };\n\n    this.downloadFile = this.downloadFile.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  downloadFile(url, filename, mimetype) {\n    if (!url) {\n      this.props.onError(\"Invalid download URL '\" + url + \"'\");\n      return;\n    }\n\n    const downloader = this.props.tinode.getLargeFileHelper();\n    this.setState({downloader: downloader});\n    downloader.download(url, filename, mimetype,\n      (loaded) => {\n        this.setState({progress: loaded / this.props.size});\n      },\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    ).then(() => {\n      this.setState({downloader: null, progress: 0});\n    }).catch((err) => {\n      if (err) {\n        this.props.onError(\"Error downloading file: \" + err.message, 'err');\n      }\n      this.setState({downloader: null, progress: 0});\n    });\n  }\n\n  handleCancel() {\n    if (this.props.uploading) {\n      this.props.onCancelUpload();\n    } else if (this.state.downloader) {\n      this.state.downloader.cancel();\n    }\n  }\n\n  render() {\n    let filename = this.props.filename || 'file_attachment';\n    if (filename.length > 36) {\n      filename = filename.substr(0, 16) + '...' + filename.substr(-16);\n    }\n    let size = this.props.size > 0 ?\n      <span className=\"small gray\">({bytesToHumanSize(this.props.size)})</span> :\n      null;\n\n    // Detect if the download URL is relative or absolute.\n    // If the URL is relative use LargeFileHelper to attach authentication\n    // credentials to the request.\n    let url, helperFunc;\n    if (!this.props.uploading && !this.state.downloader && isUrlRelative(this.props.downloadUrl)) {\n      // Relative URL. Use download helper.\n      url = '#';\n      helperFunc = (e) => {\n        e.preventDefault();\n        this.downloadFile(this.props.downloadUrl, this.props.filename, this.props.mimetype);\n      };\n    } else {\n      url = sanitizeUrl(this.props.downloadUrl);\n      helperFunc = null;\n    }\n    const downloadWidget = <><i className=\"material-icons\">file_download</i> <FormattedMessage id=\"save_attachment\"\n      defaultMessage=\"save\" description=\"Call to save an attachment\" /></>;\n    return (\n      <div className=\"attachment\">\n        <div><i className=\"material-icons big gray\">insert_drive_file</i></div>\n        <div className=\"flex-column\">\n          <div>{filename} {size}</div>\n          {this.props.uploading || this.state.downloader ?\n            <FileProgress progress={this.props.uploading ? this.props.progress : this.state.progress}\n              onCancel={this.handleCancel} />\n            :\n            <div>{url ?\n              <a href={url} download={this.props.filename} onClick={helperFunc}>{downloadWidget}</a>\n              :\n              <span className=\"light-gray\">{downloadWidget}</span>\n            }</div>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n","// Image view with progress bar and a cancel button.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\n\nexport default class UploadingImage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"inline-image\">\n        {React.createElement('img', this.props)}\n        <div className=\"rounded-container\">\n          <FileProgress progress={this.props.progress} onCancel={this.props.onCancelUpload} />\n        </div>\n      </div>\n    );\n  }\n};\n","// Single message, sent or received.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport Attachment from './attachment.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\nimport UploadingImage from './uploading-image.jsx'\nimport { sanitizeImageUrl, sanitizeUrl } from '../lib/utils.js';\n\nexport default class ChatMessage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      progress: 0\n    };\n\n    if (props.uploader) {\n      props.uploader.onProgress = this.handleProgress.bind(this);\n    }\n\n    this.handleImagePreview = this.handleImagePreview.bind(this);\n    this.handleFormButtonClick = this.handleFormButtonClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n  }\n\n  handleImagePreview(e) {\n    e.preventDefault();\n    this.props.onImagePreview({\n      url: e.target.src,\n      filename: e.target.title,\n      width: e.target.dataset.width,\n      height: e.target.dataset.height,\n      size: e.target.dataset.size,\n      type: e.target.dataset.mime\n    });\n  }\n\n  handleFormButtonClick(e) {\n    e.preventDefault();\n    const data = {\n      seq: this.props.seq\n    };\n    data.resp = {};\n    if (e.target.dataset.name) {\n      data.resp[e.target.dataset.name] = e.target.dataset.val ? e.target.dataset.val :\n        e.target.dataset.val === undefined ? 1 : '' + e.target.dataset.val;\n    }\n    if (e.target.dataset.act == 'url') {\n      data.ref = sanitizeUrl(e.target.dataset.ref) || 'about:blank';\n    }\n    const text = e.target.dataset.title || 'unknown';\n    this.props.onFormResponse(e.target.dataset.act, text, data);\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const menuItems = this.props.received == Tinode.MESSAGE_STATUS_FAILED ? ['menu_item_send_retry'] : [];\n    this.props.showContextMenu({ seq: this.props.seq, content: this.props.content,\n                                 y: e.pageY, x: e.pageX }, menuItems);\n  }\n\n  handleProgress(ratio) {\n    this.setState({progress: ratio});\n  }\n\n  handleCancelUpload() {\n    this.props.onCancelUpload(this.props.seq, this.props.uploader);\n  }\n\n  render() {\n    const sideClass = this.props.deleted ? 'center' :\n      (this.props.sequence + ' ' + (this.props.response ? 'left' : 'right'));\n    const bubbleClass = (this.props.sequence == 'single' || this.props.sequence == 'last') ? 'bubble tip' : 'bubble';\n    const avatar = this.props.deleted ? null : (this.props.userAvatar || true);\n    const fullDisplay = (this.props.userFrom && this.props.response &&\n      (this.props.sequence == 'single' || this.props.sequence == 'last'));\n\n    let content = this.props.content;\n    const attachments = [];\n    if (this.props.mimeType == Drafty.getContentType() && Drafty.isValid(content)) {\n      Drafty.attachments(content, function(att, i) {\n        if (att.mime == 'application/json') {\n          // Don't show json objects as attachments.\n          // They are not meant for users.\n          return;\n        }\n        attachments.push(<Attachment\n          tinode={this.props.tinode}\n          downloadUrl={Drafty.getDownloadUrl(att)}\n          filename={att.name} uploading={Drafty.isProcessing(att)}\n          mimetype={att.mime} size={Drafty.getEntitySize(att)}\n          progress={this.state.progress}\n          onCancelUpload={this.handleCancelUpload}\n          onError={this.props.onError}\n          key={i} />);\n      }, this);\n      content = React.createElement(React.Fragment, null, Drafty.format(content, draftyFormatter, this));\n    } else if (this.props.deleted) {\n      // Message represents a range of deleted messages.\n      content = <><i className=\"material-icons gray\">block</i> <i className=\"gray\">\n        <FormattedMessage id=\"deleted_content\"\n          defaultMessage=\"content deleted\" description=\"Shown when messages are deleted\" />\n      </i></>\n    } else if (typeof content != 'string') {\n      content = <>\n          <i className=\"material-icons gray\">error_outline</i> <i className=\"gray\">\n            <FormattedMessage id=\"invalid_content\"\n              defaultMessage=\"invalid content\" description=\"Shown when message is unreadable\" /></i>\n        </>\n    }\n\n    return (\n      <li className={sideClass}>\n        {this.props.userFrom && this.props.response ?\n          <div className=\"avatar-box\">\n            {fullDisplay ?\n              <LetterTile\n                topic={this.props.userFrom}\n                title={this.props.userName}\n                avatar={avatar} /> :\n              null}\n          </div> :\n          null}\n        <div>\n          <div className={bubbleClass}>\n            <div className=\"message-content\">\n              {content}\n              {attachments}\n              {this.props.timestamp ?\n                <ReceivedMarker\n                  timestamp={this.props.timestamp}\n                  received={this.props.received} />\n                : null}\n            </div>\n            {this.props.deleted || !this.props.showContextMenu ?\n              null :\n              <span className=\"menuTrigger\">\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">expand_more</i>\n                </a>\n              </span>\n            }\n          </div>\n          {fullDisplay ?\n            <div className=\"author\">\n              <FormattedMessage id=\"user_not_found\" defaultMessage=\"Not found\"\n                description=\"In place of a user's full name when the user is not found.\">{\n                    (notFound) => {return this.props.userName || <i>{notFound}</i>}\n              }</FormattedMessage>\n            </div>\n            : null\n          }\n        </div>\n      </li>\n    );\n  }\n};\n\n// Convert Drafty object to a tree of React elements.\nimport { BROKEN_IMAGE_SIZE, REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\n\n// Converts Drafty elements into React classes.\n// 'this' is set by the caller.\nfunction draftyFormatter(style, data, values, key) {\n  if (style == 'EX') {\n    // attachments are handled elsewhere.\n    return null;\n  }\n\n  let el = Drafty.tagName(style);\n  if (el) {\n    const attr = Drafty.attrValue(style, data) || {};\n    attr.key = key;\n    switch (style) {\n      case 'HL':\n        // Highlighted text. Assign class name.\n        attr.className = 'highlight';\n        break;\n      case 'IM':\n        // Additional processing for images\n        if (data) {\n          attr.className = 'inline-image';\n          const dim = fitImageSize(data.width, data.height,\n            Math.min(this.props.viewportWidth - REM_SIZE * 4, REM_SIZE * 36), REM_SIZE * 24, false) ||\n            {dstWidth: BROKEN_IMAGE_SIZE, dstHeight: BROKEN_IMAGE_SIZE};\n          attr.style = { width: dim.dstWidth + 'px', height: dim.dstHeight + 'px' };\n          if (!Drafty.isProcessing(data)) {\n            attr.src = this.props.tinode.authorizeURL(sanitizeImageUrl(attr.src));\n            attr.alt = data.name;\n            if (attr.src) {\n              attr.onClick = this.handleImagePreview;\n              attr.className += ' image-clickable';\n            } else {\n              attr.src = 'img/broken_image.png';\n            }\n          } else {\n            // Use custom element instead of <img>.\n            el = UploadingImage;\n          }\n        }\n        break;\n      case 'BN':\n        // Button\n        attr.onClick = this.handleFormButtonClick;\n        let inner = React.Children.map(values, (child) => {\n          return typeof child == 'string' ? child : undefined;\n        });\n        if (!inner || inner.length == 0) {\n          inner = [attr.name]\n        }\n        // Get text which will be sent back when the button is clicked.\n        attr['data-title'] = inner.join('');\n        break;\n      case 'FM':\n        // Form\n        attr.className = 'bot-form';\n        break;\n      case 'RW':\n        // Form element formatting is dependent on element content.\n        break;\n      default:\n        if (el == '_UNKN') {\n          // Unknown element.\n          // TODO: make it prettier.\n          el = <><span className=\"material-icons\">extension</span></>;\n        }\n        break;\n    }\n    return React.createElement(el, attr, values);\n  } else {\n    return values;\n  }\n};\n","// Send message form.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport { KEYPRESS_DELAY } from '../config.js';\nimport { filePasted } from '../lib/blob-helpers.js';\n\nconst messages = defineMessages({\n  'messaging_disabled': {\n    id: 'messaging_disabled_prompt',\n    defaultMessage: 'Messaging disabled',\n    description: 'Prompt in SendMessage in read-only topic'\n  },\n  'type_new_message': {\n    id: 'new_message_prompt',\n    defaultMessage: 'New message',\n    description: 'Prompt in send message field'\n  },\n  'add_image_caption': {\n    id: 'image_caption_prompt',\n    defaultMessage: 'Image caption',\n    description: 'Prompt in SendMessage for attached image'\n  },\n  'file_attachment_too_large': {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  },\n  'cannot_initiate_upload': {\n    id: 'cannot_initiate_file_upload',\n    defaultMessage: 'Cannot initiate file upload.',\n    description: 'Generic error messagewhen attachment fails'\n  },\n});\n\nclass SendMessage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      message: '',\n      // Make initial keypress time as if it happened 5001 milliseconds in the past.\n      keypressTimestamp: new Date().getTime() - KEYPRESS_DELAY - 1\n    };\n\n    this.handlePasteEvent = this.handlePasteEvent.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleSend = this.handleSend.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleMessageTyping = this.handleMessageTyping.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.addEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.removeEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.messageEditArea) {\n      this.messageEditArea.focus();\n    }\n  }\n\n  handlePasteEvent(e) {\n    if (this.props.disabled) {\n      return;\n    }\n    // FIXME: handle large files too.\n    if (filePasted(e,\n      (bits, mime, width, height, fname) => {\n        this.props.onAttachImage(mime, bits, width, height, fname);\n      },\n      (mime, bits, fname) => {\n        this.props.onAttachFile(mime, bits, fname);\n      },\n      this.props.onError)) {\n\n      // If a file was pasted, don't paste base64 data into input field.\n      e.preventDefault();\n    }\n  }\n\n  handleAttachImage(e) {\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachImage(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleAttachFile(e) {\n    const {formatMessage} = this.props.intl;\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachFile(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleSend(e) {\n    e.preventDefault();\n    const message = this.state.message.trim();\n    if (message || this.props.acceptBlank || this.props.noInput) {\n      this.props.onSendMessage(message);\n      this.setState({message: ''});\n    }\n  }\n\n  /* Send on Enter key */\n  handleKeyPress(e) {\n    // Remove this if you don't want Enter to trigger send\n    if (e.key === 'Enter') {\n      // Have Shift-Enter insert a line break instead\n      if (!e.shiftKey) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.handleSend(e);\n      }\n    }\n  }\n\n  handleMessageTyping(e) {\n    const newState = {message: e.target.value};\n    if (this.props.onKeyPress) {\n      const now = new Date().getTime();\n      if (now - this.state.keypressTimestamp > KEYPRESS_DELAY) {\n        this.props.onKeyPress();\n        newState.keypressTimestamp = now;\n      }\n    }\n    this.setState(newState);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const prompt = this.props.disabled ?\n      formatMessage(messages.messaging_disabled) :\n      (this.props.messagePrompt ?\n        formatMessage(messages[this.props.messagePrompt]) :\n        formatMessage(messages.type_new_message));\n    return (\n      <div id=\"send-message-panel\">\n        {!this.props.disabled ?\n          <>\n            {this.props.onAttachFile ?\n              <>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachImage.click();}} title=\"Add image\">\n                  <i className=\"material-icons secondary\">photo</i>\n                </a>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachFile.click();}} title=\"Attach file\">\n                  <i className=\"material-icons secondary\">attach_file</i>\n                </a>\n              </>\n              :\n              null}\n            {this.props.noInput ?\n              <div className=\"hr thin\" /> :\n              <textarea id=\"sendMessage\" placeholder={prompt}\n                value={this.state.message} onChange={this.handleMessageTyping}\n                onKeyPress={this.handleKeyPress}\n                ref={(ref) => {this.messageEditArea = ref;}}\n                autoFocus />}\n            <a href=\"#\" onClick={this.handleSend} title=\"Send\">\n              <i className=\"material-icons\">send</i>\n            </a>\n            <input type=\"file\" ref={(ref) => {this.attachFile = ref;}}\n              onChange={this.handleAttachFile} style={{display: 'none'}} />\n            <input type=\"file\" ref={(ref) => {this.attachImage = ref;}} accept=\"image/*\"\n              onChange={this.handleAttachImage} style={{display: 'none'}} />\n          </>\n          :\n          <div id=\"writing-disabled\">{prompt}</div>\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SendMessage);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { bytesToHumanSize } from '../lib/strformat.js';\n\n// Get material icon name from mime type.\nfunction iconFromMime(mime) {\n  // If more icons become available in material icons, add them to this mime-to-icon mapping.\n  const mimeToIcon = {default: 'insert_drive_file', image: 'image', text: 'description', video: 'theaters'};\n\n  return mimeToIcon[mime] || mimeToIcon[(mime || '').split('/')[0]] || mimeToIcon['default'];\n}\n\nexport default class DocPreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleSendDoc = this.handleSendDoc.bind(this);\n  }\n\n  handleSendDoc(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(this.props.content.file);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          <span>{this.props.content.filename}</span>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\">\n          <div className=\"flex-column narrow\">\n            <i className=\"material-icons gray\">{iconFromMime(this.props.content.type)}</i>\n            <div><b><FormattedMessage id=\"label_content_type\" /></b> {this.props.content.type || 'application/octet-stream'}</div>\n            <div><b><FormattedMessage id=\"label_size\" /></b> {bytesToHumanSize(this.props.content.size)}</div>\n          </div>\n        </div>\n        <SendMessage\n          noInput={true}\n          onSendMessage={this.handleSendDoc}\n          onError={this.props.onError} />\n      </div>\n    );\n  }\n};\n","// GroupSubs: a list of group subscribers currently online.\n// Show in the topic title bar\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { MAX_ONLINE_IN_TOPIC } from '../config.js'\n\nimport LetterTile from './letter-tile.jsx';\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class GroupSubs extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const usersOnline = [];\n    const totalCount = (this.props.subscribers || []).length;\n    const countToShow = Math.min(MAX_ONLINE_IN_TOPIC, totalCount);\n\n    (this.props.subscribers || []).some((sub) => {\n      usersOnline.push(\n        <div className=\"avatar-box\" key={sub.user}>\n          <LetterTile\n            topic={sub.user}\n            avatar={makeImageUrl(sub.public ? sub.public.photo : null) || true}\n            title={sub.public ? sub.public.fn : null} />\n        </div>\n      );\n      return usersOnline.length == countToShow;\n    });\n\n    return (\n      <div id=\"topic-users\">{usersOnline} {totalCount > countToShow ?\n        <span>\n          <FormattedMessage id=\"more_online_members\" defaultMessage=\"+{overflow} more\"\n              description=\"Shown in MessagesView title bar when the number of online subscribers exceeds MAX_ONLINE_IN_TOPIC\"\n              values={{ overflow: (totalCount - countToShow) }} />\n        </span> : null}\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\nimport { bytesToHumanSize } from '../lib/strformat.js';\n\nexport default class ImagePreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      width: 0,\n      height: 0\n    };\n\n    this.handleSendImage = this.handleSendImage.bind(this);\n  }\n\n  assignWidth(node) {\n    if (node && !this.state.width) {\n      const bounds = node.getBoundingClientRect();\n      this.setState({\n        width: bounds.width | 0,\n        height: bounds.height | 0\n      });\n    }\n  }\n\n  handleSendImage(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(caption, this.props.content.blob);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n\n    const dim = fitImageSize(this.props.content.width, this.props.content.height,\n      this.state.width, this.state.height, false);\n    const size = dim ? { width: dim.dstWidth + 'px', height: dim.dstHeight + 'px' } :\n      ((this.props.content.width > this.props.content.height) ? {width: '100%'} : {height: '100%'});\n    size.maxWidth = '100%';\n    size.maxHeight = '100%';\n\n    let filename = this.props.content.filename;\n    // Average font aspect ratio is ~0.5; File name takes 1/3 of the viewport width.\n    const maxlength = Math.max(((this.state.width / REM_SIZE / 1.5) | 0) - 2, 12);\n    if (filename.length > maxlength) {\n      filename = filename.slice(0, maxlength/2 - 1) + '…' + filename.slice(1 - maxlength/2);\n    }\n    const width = this.props.content.width || '-';\n    const height = this.props.content.height || '-';\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          {!this.props.onSendMessage ?\n            <a href={this.props.content.url} download={this.props.content.filename}>\n              <i className=\"material-icons\">file_download</i> <FormattedMessage\n                id=\"download_action\" defaultMessage=\"download\" description=\"Call to action [download]\" />\n            </a>\n            :\n            <span>{this.props.content.filename}</span>\n          }\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\" ref={(node) => this.assignWidth(node)}>\n          <img src={this.props.content.url} style={size} className=\"image-preview\" alt={this.props.content.filename} />\n        </div>\n        {this.props.onSendMessage ?\n          <SendMessage\n            messagePrompt=\"add_image_caption\"\n            acceptBlank={true}\n            onSendMessage={this.handleSendImage}\n            onError={this.props.onError} />\n          :\n          <div id=\"image-preview-footer\">\n            <div>\n              <div><b><FormattedMessage id=\"label_file_name\" defaultMessage=\"File name:\"\n                description=\"Label for a file name\" /></b></div>\n              <div><span title={this.props.content.filename}>{filename ? filename : '-'}</span></div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n                description=\"Label for file content type (mime)\" /></b></div>\n              <div>{this.props.content.type}</div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n                description=\"Label for file size\" /></b></div>\n              <div>{width} &times; {height} px; {bytesToHumanSize(this.props.content.size)}</div>\n            </div>\n          </div>}\n      </div>\n    );\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Invitation extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleButtonAction = this.handleButtonAction.bind(this);\n  }\n\n  handleButtonAction(evt, data) {\n    evt.preventDefault();\n    this.props.onAction(data);\n  }\n\n  render() {\n    return (\n      <div className=\"accept-invite-panel\">\n        <div className=\"title\">\n          <FormattedMessage id=\"chat_invitation\"\n            defaultMessage=\"You are invited to start a new chat. What would you like to do?\"\n            description=\"New chat invitation message: [Accept] [Ignore] [Block].\" />\n        </div>\n        <div className=\"footer\">\n          <button className=\"blue\" onClick={event => { this.handleButtonAction(event, \"accept\"); }}>\n            <FormattedMessage id=\"chat_invitation_accept\"\n              defaultMessage=\"Accept\" description=\"Action [Accept] for chat invitation.\" />\n          </button>\n          <button className=\"white\" onClick={event => { this.handleButtonAction(event, \"delete\"); }}>\n            <FormattedMessage id=\"chat_invitation_ignore\"\n              defaultMessage=\"Ignore\" description=\"Action [Ignore] for chat invitation.\" />\n          </button>\n          <button className=\"white\" onClick={event => { this.handleButtonAction(event, \"block\"); }}>\n            <FormattedMessage id=\"chat_invitation_block\"\n              defaultMessage=\"Block\" description=\"Action [Block] for chat invitation.\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nexport default class LoadSpinner extends React.PureComponent {\n  render() {\n    return (this.props.show ?\n      <div className=\"load-spinner-box\"><div className=\"loader-spinner\"></div></div> : null);\n  }\n}\n","/* This is just a static page to display when no conversation is selected. */\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME } from '../config.js';\n\nexport default class LogoView extends React.PureComponent {\n  render() {\n    const version = APP_NAME + ' (' + Tinode.getLibrary() + ')';\n    return (\n      <div id=\"dummy-view\">\n        <div>\n          <a href=\"https://github.com/tinode/chat/\">\n            <img id=\"logo\" alt=\"logo\" src=\"img/logo.svg\" />\n            <h2>Tinode Web</h2>\n          </a>\n          <p><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\" /> {version}</p>\n          <p><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\" /> {this.props.serverVersion} ({this.props.serverAddress})</p>\n        </div>\n      </div>\n    );\n  }\n};\n","// Utility class for hash navigation.\n\n// Parse hash as in http://www.example.com/path#hash as if it were\n// path and arguments.\nexport default class HashNavigation {\n  static parseUrlHash(hash) {\n    // Split path from args, path -> parts[0], args->path[1]\n    const parts = hash.split('?', 2);\n    const params = {};\n    let path = [];\n    if (parts[0]) {\n      path = parts[0].substr(1).split('/');\n    }\n    if (parts[1]) {\n      parts[1].split('&').forEach(function(part) {\n        let item = part.split('=');\n        if (item[0]) {\n          params[decodeURIComponent(item[0])] = decodeURIComponent(item[1]);\n        }\n      });\n    }\n    return {path: path, params: params};\n  }\n\n  static navigateTo(url) {\n    window.location.hash = url;\n  }\n\n  static composeUrlHash(path, params) {\n    let url = path.join('/');\n    const args = [];\n    for (const key in params) {\n      if (params.hasOwnProperty(key)) {\n        args.push(key + '=' + params[key]);\n      }\n    }\n    if (args.length > 0) {\n      url += '?' + args.join('&');\n    }\n    return url;\n  }\n\n  static addUrlParam(hash, key, value) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.params[key] = value;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static removeUrlParam(hash, key) {\n    const parsed = this.parseUrlHash(hash);\n    delete parsed.params[key];\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlSidePanel(hash, sidepanel) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[0] = sidepanel;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlTopic(hash, topic) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[1] = topic;\n    // Close InfoView on topic change.\n    delete parsed.params.info;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n}\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\nconst Drafty = Tinode.Drafty;\n\nimport ChatMessage from '../widgets/chat-message.jsx';\nimport DocPreview from '../widgets/doc-preview.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupSubs from '../widgets/group-subs.jsx';\nimport ImagePreview from '../widgets/image-preview.jsx';\nimport Invitation from '../widgets/invitation.jsx';\nimport LetterTile from '../widgets/letter-tile.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport LogoView from './logo-view.jsx';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { DEFAULT_P2P_ACCESS_MODE, IMAGE_PREVIEW_DIM, KEYPRESS_DELAY, MESSAGES_PAGE,\n  MAX_EXTERN_ATTACHMENT_SIZE, MAX_IMAGE_DIM, MAX_INBAND_ATTACHMENT_SIZE, READ_DELAY } from '../config.js';\nimport { SUPPORTED_IMAGE_FORMATS, blobToBase64, filePasted, fileToBase64,\n  imageScaled, makeImageUrl } from '../lib/blob-helpers.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { bytesToHumanSize, shortDateFormat } from '../lib/strformat.js';\n\n// Run timer with this frequency (ms) for checking notification queue.\nconst NOTIFICATION_EXEC_INTERVAL = 300;\n\nconst messages = defineMessages({\n  'online_now': {\n    id: 'online_now',\n    defaultMessage: 'online now',\n    description: 'Indicator that the user or topic is currently online',\n  },\n  'last_seen': {\n    id: 'last_seen_timestamp',\n    defaultMessage: 'Last seen',\n    description: 'Label for the timestamp of when the user or topic was last online'\n  },\n  'not_found': {\n    id: 'title_not_found',\n    defaultMessage: 'Not found',\n    description: 'Title shown when topic is not found'\n  },\n  'channel': {\n    id: 'channel',\n    defaultMessage: 'channel',\n    description: 'Subtitle shown for channels in MessagesView instead of last seen'\n  }\n});\n\n// Checks if the access permissions are granted but not yet accepted.\nfunction isUnconfirmed(acs) {\n  if (acs) {\n    const ex = acs.getExcessive() || '';\n    return acs.isJoiner('given') && (ex.includes('R') || ex.includes('W'));\n  }\n  return false;\n}\n\nfunction isPeerRestricted(acs) {\n  if (acs) {\n    const ms = acs.getMissing() || '';\n    return acs.isJoiner('want') && (ms.includes('R') || ms.includes('W'));\n  }\n  return false;\n}\n\nclass MessagesView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = MessagesView.getDerivedStateFromProps(props, {});\n\n    this.leave = this.leave.bind(this);\n    this.sendImageAttachment = this.sendImageAttachment.bind(this);\n    this.sendFileAttachment = this.sendFileAttachment.bind(this);\n    this.sendKeyPress = this.sendKeyPress.bind(this);\n    this.handleScrollReference = this.handleScrollReference.bind(this);\n    this.handleScrollEvent = this.handleScrollEvent.bind(this);\n    this.handleDescChange = this.handleDescChange.bind(this);\n    this.handleSubsUpdated = this.handleSubsUpdated.bind(this);\n    this.handleNewMessage = this.handleNewMessage.bind(this);\n    this.handleAllMessagesReceived = this.handleAllMessagesReceived.bind(this);\n    this.handleInfoReceipt = this.handleInfoReceipt.bind(this);\n    this.handleImagePostview = this.handleImagePostview.bind(this);\n    this.handleClosePreview = this.handleClosePreview.bind(this);\n    this.handleFormResponse = this.handleFormResponse.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleShowContextMenuMessage = this.handleShowContextMenuMessage.bind(this);\n    this.handleNewChatAcceptance = this.handleNewChatAcceptance.bind(this);\n    this.handleEnablePeer = this.handleEnablePeer.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n    this.postReadNotification = this.postReadNotification.bind(this);\n    this.clearNotificationQueue = this.clearNotificationQueue.bind(this);\n\n    this.readNotificationQueue = [];\n    this.readNotificationTimer = null;\n  }\n\n  componentDidMount() {\n    // this.propsChange(this.props, this.state);\n    if (this.messagesScroller) {\n      this.messagesScroller.addEventListener('scroll', this.handleScrollEvent);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messagesScroller) {\n      this.messagesScroller.removeEventListener('scroll', this.handleScrollEvent);\n    }\n\n    // Flush all notifications.\n    this.clearNotificationQueue();\n  }\n\n  // Scroll last message into view on component update e.g. on message received\n  // or vertical shrinking.\n  componentDidUpdate(prevProps, prevState) {\n    if (this.messagesScroller) {\n      if (prevState.topic != this.state.topic || prevState.messages.length != this.state.messages.length) {\n        // New message\n        this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n      } else if (prevProps.viewportHeight > this.props.viewportHeight) {\n        // Componet changed height.\n        this.messagesScroller.scrollTop += prevProps.viewportHeight - this.props.viewportHeight;\n      }\n    }\n\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (this.state.topic != prevState.topic) {\n      if (prevState.topic && !Tinode.isNewGroupTopicName(prevState.topic)) {\n        this.leave(prevState.topic);\n      }\n\n      if (topic) {\n        topic.onData = this.handleNewMessage;\n        topic.onAllMessagesReceived = this.handleAllMessagesReceived;\n        topic.onInfo = this.handleInfoReceipt;\n        topic.onMetaDesc = this.handleDescChange;\n        topic.onSubsUpdated = this.handleSubsUpdated;\n        topic.onPres = this.handleSubsUpdated;\n      }\n    }\n\n    if (!this.props.applicationVisible) {\n      // If application is not visible, flush all unsent 'read' notifications.\n      this.clearNotificationQueue();\n    } else {\n      // Otherwise assume there are unread messages.\n      this.postReadNotification(0);\n    }\n\n    if (topic && !topic.isSubscribed() && this.props.ready &&\n        ((this.state.topic != prevState.topic) || !prevProps.ready)) {\n      // Is this a new topic?\n      const newTopic = (this.props.newTopicParams && this.props.newTopicParams._topicName == this.props.topic);\n\n      // Don't request the tags. They are useless unless the user\n      // is the owner and is editing the topic.\n      let getQuery = topic.startMetaQuery().withLaterDesc().withLaterSub();\n      if (this.state.isReader || newTopic) {\n        // Reading is either permitted or we don't know because it's a new topic. Ask for messages.\n        getQuery = getQuery.withLaterData(MESSAGES_PAGE);\n        if (this.state.isReader) {\n          getQuery = getQuery.withLaterDel();\n        }\n        // And show \"loading\" spinner.\n        this.setState({ fetchingMessages: true });\n      }\n      const setQuery = newTopic ? this.props.newTopicParams : undefined;\n      topic.subscribe(getQuery.build(), setQuery)\n        .then((ctrl) => {\n          if (ctrl.code == 303) {\n            // Redirect to another topic requested.\n            HashNavigation.navigateTo(HashNavigation.setUrlTopic('', ctrl.params.topic));\n            return;\n          }\n          if (this.state.topic != ctrl.topic) {\n            this.setState({topic: ctrl.topic});\n          }\n          this.props.onNewTopicCreated(this.props.topic, ctrl.topic);\n          // If there are unsent messages, try sending them now.\n          topic.queuedMessages((pub) => {\n            if (!pub._sending && topic.isSubscribed()) {\n              topic.publishMessage(pub);\n            }\n          });\n        })\n        .catch((err) => {\n          console.log(\"Failed subscription to\", this.state.topic);\n          this.props.onError(err.message, 'err');\n          const blankState = MessagesView.getDerivedStateFromProps({}, {});\n          blankState.title = this.props.intl.formatMessage(messages.not_found);\n          this.setState(blankState);\n        });\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let nextState = {};\n    if (!nextProps.topic) {\n      // Default state: no topic.\n      nextState = {\n        messages: [],\n        onlineSubs: [],\n        topic: null,\n        title: '',\n        avatar: null,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false,\n        peerMessagingDisabled: false,\n        channel: false\n      };\n    } else if (nextProps.topic != prevState.topic) {\n      const topic = nextProps.tinode.getTopic(nextProps.topic);\n      nextState = {\n        topic: nextProps.topic,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false\n      };\n\n      if (topic) {\n        // Topic exists.\n        const msgs = [];\n        const subs = [];\n\n        if (nextProps.connected) {\n          topic.subscribers((sub) => {\n            if (sub.online && sub.user != nextProps.myUserId) {\n              subs.push(sub);\n            }\n          });\n        }\n\n        topic.messages(function(msg) {\n          if (!msg.deleted) {\n            msgs.push(msg);\n          }\n        });\n\n        Object.assign(nextState, {\n          messages: msgs,\n          onlineSubs: subs\n        });\n\n        if (topic.public) {\n          Object.assign(nextState, {\n            title: topic.public.fn,\n            avatar: makeImageUrl(topic.public.photo)\n          });\n        } else {\n          Object.assign(nextState, {\n            title: '',\n            avatar: null\n          });\n        }\n\n        const peer = topic.p2pPeerDesc();\n        if (peer) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: isPeerRestricted(peer.acs)\n          });\n        } else if (prevState.peerMessagingDisabled) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: false\n          });\n        }\n        Object.assign(nextState, {\n          channel: topic.isChannelType()\n        });\n      } else {\n        // Invalid topic.\n        Object.assign(nextState, {\n          messages: [],\n          onlineSubs: [],\n          title: '',\n          avatar: null,\n          peerMessagingDisabled: false,\n          channel: false\n        });\n      }\n    }\n\n    if (nextProps.acs) {\n      if (nextProps.acs.isWriter() != prevState.isWriter) {\n        nextState.isWriter = !prevState.isWriter;\n      }\n      if (nextProps.acs.isReader() != prevState.isReader) {\n        nextState.isReader = !prevState.isReader;\n      }\n      if (!nextProps.acs.isReader('given') != prevState.readingBlocked) {\n        nextState.readingBlocked = !prevState.readingBlocked;\n      }\n      if (nextProps.acs.isSharer() != prevState.isSharer) {\n        nextState.isSharer = !prevState.isSharer;\n      }\n    } else {\n      if (prevState.isWriter) {\n        nextState.isWriter = false;\n      }\n      if (prevState.isReader) {\n        nextState.isReader = false;\n      }\n      if (!prevState.readingBlocked) {\n        prevState.readingBlocked = true;\n      }\n      if (prevState.isSharer) {\n        nextState.isSharer = false;\n      }\n    }\n\n    if (isUnconfirmed(nextProps.acs) == !prevState.unconformed) {\n      nextState.unconfirmed = !prevState.unconformed;\n    }\n\n    // Clear subscribers online when there is no connection.\n    if (!nextProps.connected && prevState.onlineSubs && prevState.onlineSubs.length > 0) {\n      nextState.onlineSubs = [];\n    }\n\n    return nextState;\n  }\n\n  leave(oldTopicName) {\n    if (!oldTopicName) {\n      return;\n    }\n    let oldTopic = this.props.tinode.getTopic(oldTopicName);\n    if (oldTopic && oldTopic.isSubscribed()) {\n      oldTopic.leave(false)\n        .catch(() => { /* do nothing here */ })\n        .finally(() => {\n          // We don't care if the request succeeded or failed.\n          // The topic is dead regardless.\n          this.setState({fetchingMessages: false});\n          oldTopic.onData = undefined;\n          oldTopic.onAllMessagesReceived = undefined;\n          oldTopic.onInfo = undefined;\n          oldTopic.onMetaDesc = undefined;\n          oldTopic.onSubsUpdated = undefined;\n          oldTopic.onPres = undefined;\n        });\n    }\n  }\n\n  handleScrollReference(node) {\n    if (node) {\n      node.addEventListener('scroll', this.handleScrollEvent);\n      this.messagesScroller = node;\n      this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n    }\n  }\n\n  // Get older messages\n  handleScrollEvent(event) {\n    this.setState({scrollPosition: event.target.scrollHeight - event.target.scrollTop});\n    if (event.target.scrollTop <= 0) {\n      this.setState((prevState, props) => {\n        const newState = {};\n        if (!prevState.fetchingMessages) {\n          const topic = this.props.tinode.getTopic(this.state.topic);\n          if (topic && topic.isSubscribed() && topic.msgHasMoreMessages()) {\n            newState.fetchingMessages = true;\n            topic.getMessagesPage(MESSAGES_PAGE).catch((err) => {\n              this.setState({fetchingMessages: false});\n              this.props.onError(err.message, 'err');\n            });\n          }\n        }\n        return newState;\n      });\n    }\n  }\n\n  handleDescChange(desc) {\n    if (desc.public) {\n      this.setState({\n        title: desc.public.fn,\n        avatar: makeImageUrl(desc.public.photo)\n      });\n    } else {\n      this.setState({\n        title: '',\n        avatar: null\n      });\n    }\n\n    if (desc.acs) {\n      this.setState({\n        isWriter: desc.acs.isWriter(),\n        isReader: desc.acs.isReader(),\n        readingBlocked: !desc.acs.isReader('given'),\n        unconfirmed: isUnconfirmed(desc.acs),\n      });\n    }\n  }\n\n  postReadNotification(seq) {\n    // Ignore notifications if the app is invisible.\n    if (!this.props.applicationVisible) {\n      return;\n    }\n\n    // Set up the timer if it's not running already.\n    if (!this.readNotificationTimer) {\n      this.readNotificationTimer = setInterval(() => {\n        if (this.readNotificationQueue.length == 0) {\n          // Shut down the timer if the queue is empty.\n          clearInterval(this.readNotificationTimer);\n          this.readNotificationTimer = null;\n          return;\n        }\n\n        let seq = -1;\n        while (this.readNotificationQueue.length > 0) {\n          const n = this.readNotificationQueue[0];\n          if (n.topicName != this.state.topic) {\n            // Topic has changed. Drop the notification.\n            this.readNotificationQueue.shift();\n            continue;\n          }\n\n          const now = new Date();\n          if (n.sendAt <= now) {\n            // Remove expired notification from queue.\n            this.readNotificationQueue.shift();\n            seq = Math.max(seq, n.seq);\n          } else {\n            break;\n          }\n        }\n\n        // Send only one notification for the whole batch of messages.\n        if (seq >= 0) {\n          const topic = this.props.tinode.getTopic(this.state.topic);\n          if (topic) {\n            topic.noteRead(seq);\n          }\n        }\n      }, NOTIFICATION_EXEC_INTERVAL);\n    }\n\n    const now = new Date();\n    this.readNotificationQueue.push({\n      topicName: this.state.topic,\n      seq: seq,\n      sendAt: now.setMilliseconds(now.getMilliseconds() + READ_DELAY)\n    });\n  }\n\n  // Clear notification queue and timer.\n  clearNotificationQueue() {\n    this.readNotificationQueue = [];\n    if (this.readNotificationTimer) {\n      clearInterval(this.readNotificationTimer);\n      this.readNotificationTimer = null;\n    }\n  }\n\n  handleSubsUpdated() {\n    if (this.state.topic) {\n      const subs = [];\n      const topic = this.props.tinode.getTopic(this.state.topic);\n      topic.subscribers((sub) => {\n        if (sub.online && sub.user != this.props.myUserId) {\n          subs.push(sub);\n        }\n      });\n      const newState = {onlineSubs: subs};\n      const peer = topic.p2pPeerDesc();\n      if (peer) {\n        Object.assign(newState, {\n          peerMessagingDisabled: isPeerRestricted(peer.acs)\n        });\n      } else if (this.state.peerMessagingDisabled) {\n        Object.assign(newState, {\n          peerMessagingDisabled: false\n        });\n      }\n      this.setState(newState);\n    }\n  }\n\n  handleNewMessage(msg) {\n    // Regenerate messages list\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    const newState = {messages: []};\n    topic.messages((m) => {\n      if (!m.deleted) {\n        newState.messages.push(m);\n      }\n    });\n\n    // msg could be null if one or more messages were deleted.\n    if (msg && !msg.deleted) {\n      // If the message is added to the end of the message list,\n      // scroll to the bottom.\n      if (topic.isNewMessage(msg.seq)) {\n        newState.scrollPosition = 0;\n      }\n\n      // Aknowledge messages except own messages. They are\n      // automatically assumed to be read and recived.\n      const status = topic.msgStatus(msg);\n      if (status >= Tinode.MESSAGE_STATUS_SENT && msg.from != this.props.myUserId) {\n        this.postReadNotification(msg.seq);\n      }\n      this.props.onData(msg);\n    }\n    this.setState(newState);\n  }\n\n  handleAllMessagesReceived(count) {\n    this.setState({fetchingMessages: false});\n    if (count > 0) {\n      // 0 means \"latest\".\n      this.postReadNotification(0);\n    }\n  }\n\n  handleInfoReceipt(info) {\n    switch (info.what) {\n      case 'kp': {\n        clearTimeout(this.keyPressTimer);\n        var instance = this;\n        this.keyPressTimer = setTimeout(function() {\n          instance.setState({typingIndicator: false});\n        }, KEYPRESS_DELAY + 1000);\n        if (!this.state.typingIndicator) {\n          this.setState({typingIndicator: true});\n        }\n        break;\n      }\n      case 'read':\n      case 'recv':\n        // Redraw due to changed recv/read status.\n        this.forceUpdate();\n        break;\n      default:\n        console.log(\"Other change in topic: \", info.what);\n    }\n  }\n\n  handleImagePostview(content) {\n    this.setState({ imagePostview: content });\n  }\n\n  handleClosePreview() {\n    if (this.state.imagePreview && this.state.imagePreview.url) {\n      URL.revokeObjectURL(this.state.imagePreview.url);\n    }\n    this.setState({ imagePostview: null, imagePreview: null, docPreview: null });\n  }\n\n  handleFormResponse(action, text, data) {\n    if (action == 'pub') {\n      this.props.sendMessage(Drafty.attachJSON(Drafty.parse(text), data));\n    } else if (action == 'url') {\n      const url = new URL(data.ref);\n      const params = url.searchParams;\n      for (let key in data.resp) {\n        if (data.resp.hasOwnProperty(key)) {\n          params.set(key, data.resp[key]);\n        }\n      }\n      ['name', 'seq'].map(function(key) {\n        if (data[key]) {\n          params.set(key, data[key]);\n        }\n      });\n      params.set('uid', this.props.myUserId);\n      url.search = params;\n      window.open(url, '_blank');\n    } else {\n      console.log(\"Unknown action in form\", action);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.state.topic, y: e.pageY, x: e.pageX });\n  }\n\n  handleShowContextMenuMessage(params, messageSpecificMenuItems) {\n    params.topicName = this.state.topic;\n    const menuItems = messageSpecificMenuItems || [];\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (topic) {\n      if (!topic.isChannelType()) {\n        menuItems.push('message_delete');\n      }\n      const acs = topic.getAccessMode();\n      if (acs && acs.isDeleter()) {\n        menuItems.push('message_delete_hard');\n      }\n    }\n    this.props.showContextMenu(params, menuItems);\n  }\n\n  handleNewChatAcceptance(action) {\n    this.props.onNewChat(this.state.topic, action);\n  }\n\n  handleEnablePeer(e) {\n    e.preventDefault();\n    this.props.onChangePermissions(this.state.topic, DEFAULT_P2P_ACCESS_MODE, this.state.topic);\n  }\n\n  sendKeyPress() {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (topic.isSubscribed()) {\n      topic.noteKeyPress();\n    }\n  }\n\n  // Send attachment as Drafty message:\n  // - if file is too large, upload it and send a s link.\n  // - if file is small enough, just send it in-band.\n  sendFileAttachment(file) {\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (file.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      if (!uploader) {\n        this.props.onError(this.props.intl.formatMessage(messages.cannot_initiate_upload));\n        return;\n      }\n      const uploadCompletionPromise = uploader.upload(file);\n      const msg = Drafty.attachFile(null, {\n        mime: file.type,\n        filename: file.name,\n        size: file.size,\n        urlPromise: uploadCompletionPromise\n      });\n      // Pass data and the uploader to the TinodeWeb.\n      this.props.sendMessage(msg, uploadCompletionPromise, uploader);\n    } else {\n      // Small enough to send inband.\n      fileToBase64(file,\n        (mime, bits, fname) => {\n          this.props.sendMessage(Drafty.attachFile(null, {mime: mime, data: bits, filename: fname}));\n        },\n        this.props.onError\n      );\n    }\n  }\n\n  // handleAttachFile method is called when [Attach file] button is clicked.\n  handleAttachFile(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    if (file.size > maxExternAttachmentSize) {\n      // Too large.\n      this.props.onError(this.props.intl.formatMessage({id: 'file_attachment_too_large'},\n          {size: bytesToHumanSize(file.size), limit: bytesToHumanSize(maxExternAttachmentSize)}), 'err');\n    } else {\n      this.setState({ docPreview: {\n        file: file,\n        filename: file.name,\n        size: file.size,\n        type: file.type\n      }});\n    }\n  }\n\n  // sendImageAttachment sends the image bits inband as Drafty message.\n  sendImageAttachment(caption, blob) {\n    const mime = this.state.imagePreview.type;\n    const width = this.state.imagePreview.width;\n    const height = this.state.imagePreview.height;\n    const fname = this.state.imagePreview.filename;\n\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (blob.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      if (!uploader) {\n        this.props.onError(this.props.intl.formatMessage(messages.cannot_initiate_upload));\n        return;\n      }\n      const uploadCompletionPromise = uploader.upload(blob);\n\n      // Make small preview to show while uploading.\n      imageScaled(blob, IMAGE_PREVIEW_DIM, IMAGE_PREVIEW_DIM, -1, false,\n        (tinyBlob) => {\n          // Convert tiny image into base64 for serialization and previewing.\n          blobToBase64(tinyBlob, (blobMime, tinyBits64) => {\n            let msg = Drafty.insertImage(null, 0, {\n              mime: mime,\n              _tempPreview: tinyBits64, // This preview will not be serialized.\n              width: width,\n              height: height,\n              filename: fname,\n              size: blob.size,\n              urlPromise: uploadCompletionPromise\n            });\n            if (caption) {\n              msg = Drafty.appendLineBreak(msg);\n              msg = Drafty.append(msg, Drafty.init(caption));\n            }\n            // Pass data and the uploader to the TinodeWeb.\n            this.props.sendMessage(msg, uploadCompletionPromise, uploader);\n          }\n        )},\n        // Failure\n        (err) => {\n          this.props.onError(err, 'err');\n        }\n      );\n      return;\n    }\n\n    // Upload the image if it's too big to be send inband.\n    blobToBase64(blob, (blobMime, bits64) => {\n      let msg = Drafty.insertImage(null, 0, {\n        mime: blobMime,\n        preview: bits64, // Serializable preview\n        width: width,\n        height: height,\n        filename: fname,\n        size: blob.size\n      });\n      if (caption) {\n        msg = Drafty.appendLineBreak(msg);\n        msg = Drafty.append(msg, Drafty.init(caption));\n      }\n      this.props.sendMessage(msg);\n    });\n  }\n\n  // handleAttachImage method is called when [Attach image] button is clicked.\n  handleAttachImage(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    // Get image dimensions and size, optionally scale it down.\n    imageScaled(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, maxExternAttachmentSize, false,\n      // Success\n      (blob, mime, width, height, fname) => {\n        this.setState({imagePreview: {\n          url: URL.createObjectURL(blob),\n          blob: blob,\n          filename: fname,\n          width: width,\n          height: height,\n          size: blob.size,\n          type: mime\n        }});\n      },\n      // Failure\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    );\n  }\n\n  handleCancelUpload(seq, uploader) {\n    const found = this.state.messages.find(msg => msg.seq == seq);\n    if (found) {\n      found._cancelled = true;\n    }\n    uploader.cancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n\n    let component;\n    if (this.props.hideSelf) {\n      component = null;\n    } else if (!this.state.topic) {\n      component = (\n        <LogoView\n          serverVersion={this.props.serverVersion}\n          serverAddress={this.props.serverAddress} />\n      );\n    } else {\n      let component2;\n      if (this.state.imagePreview) {\n        // Preview image before sending.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePreview}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendImageAttachment} />\n        );\n      } else if (this.state.imagePostview) {\n        // Expand received image.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePostview}\n            onClose={this.handleClosePreview} />\n        );\n      } else if (this.state.docPreview) {\n        // Preview attachment before sending.\n        component2 = (\n          <DocPreview\n            content={this.state.docPreview}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendFileAttachment} />\n        );\n      } else {\n        const topic = this.props.tinode.getTopic(this.state.topic);\n        const isChannel = topic.isChannelType();\n        const groupTopic = topic.isGroupType() && !isChannel;\n        let messageNodes = [];\n        let previousFrom = null;\n        let chatBoxClass = null;\n        for (let i=0; i<this.state.messages.length; i++) {\n          let msg = this.state.messages[i];\n          let nextFrom = null;\n\n          if (i + 1 < this.state.messages.length) {\n            nextFrom = this.state.messages[i+1].from || 'chan';\n          }\n\n          let sequence = 'single';\n          let thisFrom = msg.from || 'chan';\n          if (thisFrom == previousFrom) {\n            if (thisFrom == nextFrom) {\n              sequence = 'middle';\n            } else {\n              sequence = 'last';\n            }\n          } else if (thisFrom == nextFrom) {\n            sequence = 'first';\n          }\n          previousFrom = thisFrom;\n\n          const isReply = !(thisFrom == this.props.myUserId);\n          const deliveryStatus = topic.msgStatus(msg);\n\n          let userName, userAvatar, userFrom;\n          if (groupTopic) {\n            const user = topic.userDesc(thisFrom);\n            if (user && user.public) {\n              userName = user.public.fn;\n              userAvatar = makeImageUrl(user.public.photo);\n            }\n            userFrom = thisFrom;\n            chatBoxClass='chat-box group';\n          } else {\n            chatBoxClass='chat-box';\n          }\n\n          messageNodes.push(\n            <ChatMessage\n              tinode={this.props.tinode}\n              content={msg.content}\n              deleted={msg.hi}\n              mimeType={msg.head ? msg.head.mime : null}\n              timestamp={msg.ts}\n              response={isReply}\n              seq={msg.seq}\n              userFrom={userFrom}\n              userName={userName}\n              userAvatar={userAvatar}\n              sequence={sequence}\n              received={deliveryStatus}\n              uploader={msg._uploader}\n              viewportWidth={this.props.viewportWidth}\n              showContextMenu={this.state.channel? false : this.handleShowContextMenuMessage}\n              onImagePreview={this.handleImagePostview}\n              onFormResponse={this.handleFormResponse}\n              onError={this.props.onError}\n              onCancelUpload={this.handleCancelUpload}\n              key={msg.seq} />\n          );\n        }\n\n        let lastSeen = null;\n        if (isChannel) {\n          lastSeen = formatMessage(messages.channel);\n        } else {\n          const cont = this.props.tinode.getMeTopic().getContact(this.state.topic);\n          if (cont && Tinode.isP2PTopicName(cont.topic)) {\n            if (cont.online) {\n              lastSeen = formatMessage(messages.online_now);\n            } else if (cont.seen) {\n              lastSeen = formatMessage(messages.last_seen) + \": \" +\n                shortDateFormat(cont.seen.when, this.props.intl.locale);\n              // TODO: also handle user agent in c.seen.ua\n            }\n          }\n        }\n        const avatar = this.state.avatar || true;\n        const online = this.props.online ? 'online' + (this.state.typingIndicator ? ' typing' : '') : 'offline';\n\n        component2 = (\n          <>\n            <div id=\"topic-caption-panel\" className=\"caption-panel\">\n              {this.props.displayMobile ?\n                <a href=\"#\" id=\"hide-message-view\" onClick={(e) => {e.preventDefault(); this.props.onHideMessagesView();}}>\n                  <i className=\"material-icons\">arrow_back</i>\n                </a>\n                :\n                null}\n              <div className=\"avatar-box\">\n                <LetterTile\n                  avatar={avatar}\n                  topic={this.state.topic}\n                  title={this.state.title} />\n                {!isChannel ? <span className={online} /> : null}\n              </div>\n              <div id=\"topic-title-group\">\n                <div id=\"topic-title\" className=\"panel-title\">{\n                  this.state.title ||\n                  <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n                    description=\"Title shown when the topic has no name\" /></i>\n                }</div>\n                <div id=\"topic-last-seen\">{lastSeen}</div>\n              </div>\n              {groupTopic ?\n                <GroupSubs\n                  subscribers={this.state.onlineSubs} /> :\n                <div id=\"topic-users\" />\n              }\n              <div>\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">more_vert</i>\n                </a>\n              </div>\n            </div>\n            {this.props.displayMobile ?\n              <ErrorPanel\n                level={this.props.errorLevel}\n                text={this.props.errorText}\n                onClearError={this.props.onError} />\n              : null}\n            <LoadSpinner show={this.state.fetchingMessages} />\n            <div id=\"messages-container\">\n              <div id=\"messages-panel\" ref={this.handleScrollReference}>\n                <ul id=\"scroller\" className={chatBoxClass}>\n                  {messageNodes}\n                </ul>\n              </div>\n              {!this.state.isReader ?\n              <div id=\"write-only-background\">\n                {this.state.readingBlocked ?\n                <div id=\"write-only-note\">\n                  <FormattedMessage id=\"messages_not_readable\" defaultMessage=\"no access to messages\"\n                    description=\"Message shown in topic without the read access\" />\n                </div>\n                : null }\n              </div>\n              : null }\n            </div>\n            {this.state.peerMessagingDisabled && !this.state.unconfirmed ?\n              <div id=\"peer-messaging-disabled-note\">\n                <i className=\"material-icons secondary\">block</i> <FormattedMessage\n                  id=\"peers_messaging_disabled\" defaultMessage=\"Peer's messaging is disabled.\"\n                  description=\"Shown when the p2p peer's messaging is disabled\" /> <a href=\"#\"\n                    onClick={this.handleEnablePeer}><FormattedMessage id=\"enable_peers_messaging\"\n                    defaultMessage=\"Enable\" description=\"Call to action to enable peer's messaging\" /></a>.\n              </div> : null}\n            {this.state.unconfirmed ?\n              <Invitation onAction={this.handleNewChatAcceptance} />\n              :\n              <SendMessage\n                disabled={!this.state.isWriter}\n                onSendMessage={this.props.sendMessage}\n                onKeyPress={this.sendKeyPress}\n                onAttachFile={this.handleAttachFile}\n                onAttachImage={this.handleAttachImage}\n                onError={this.props.onError} />}\n          </>\n        );\n      }\n\n      component = <div id=\"topic-view\">{component2}</div>\n    }\n    return component;\n  }\n};\n\nexport default injectIntl(MessagesView);\n","// The <- button to be displayed in title bars.\nimport React from 'react';\n\nexport default class ButtonBack extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onBack();}}>\n        <i className=\"material-icons\">arrow_back</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class MenuContacts extends React.PureComponent {\n  render() {\n    return (\n      <div>\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onNewTopic();}}><i className=\"material-icons\">chat</i></a>\n        &nbsp;\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nexport default class MenuStart extends React.PureComponent {\n  render() {\n    return (\n        <div>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSignUp();}}><i className=\"material-icons\">person_add</i></a>\n          &nbsp;\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n        </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\nimport ButtonBack from './button-back.jsx';\nimport MenuContacts from './menu-contacts.jsx';\nimport MenuStart from './menu-start.jsx';\n\nexport default class SideNavbar extends React.PureComponent {\n  render() {\n    return (\n        <div id=\"side-caption-panel\" className=\"caption-panel\">\n          {this.props.onCancel ? <ButtonBack onBack={this.props.onCancel} /> : null}\n          {this.props.avatar ?\n            <div id=\"self-avatar\" className=\"avatar-box\">\n              <LetterTile\n                avatar={this.props.avatar}\n                topic={this.props.myUserId}\n                title={this.props.title} />\n            </div>\n            :\n            null}\n          <div id=\"sidepanel-title\" className=\"panel-title\">{this.props.title}</div>\n          {this.props.state === 'login' ?\n              <MenuStart onSignUp={this.props.onSignUp} onSettings={this.props.onSettings} /> :\n            this.props.state === 'contacts' ?\n              <MenuContacts onNewTopic={this.props.onNewTopic} onSettings={this.props.onSettings} /> :\n            null}\n        </div>\n    );\n  }\n};\n","/* ContactsView holds all contacts-related stuff */\nimport React from 'react';\nimport { FormattedMessage, defineMessages } from 'react-intl';\n\nimport ContactList from '../widgets/contact-list.jsx';\n\nimport { updateFavicon } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  archived_contacts_title: {\n    id: \"archived_contacts\",\n    defaultMessage: \"Archived contacts ({count})\",\n    description: \"Label for archived chats\"\n  }\n});\n\nexport default class ContactsView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAction = this.handleAction.bind(this);\n\n    this.state = ContactsView.deriveStateFromProps(props);\n  }\n\n  static deriveStateFromProps(props) {\n    const contacts = [];\n    let unreadThreads = 0;\n    let archivedCount = 0;\n    props.chatList.map((c) => {\n      const blocked = c.acs && !c.acs.isJoiner();\n      // Show only blocked contacts only when props.blocked == true.\n      if (blocked && props.blocked) {\n        contacts.push(c);\n      }\n      if (blocked || props.blocked) {\n        return;\n      }\n\n      if (c.private && c.private.arch) {\n        if (props.archive) {\n          contacts.push(c);\n        } else {\n          archivedCount ++;\n        }\n      } else if (!props.archive) {\n        contacts.push(c);\n        unreadThreads += c.unread > 0 ? 1 : 0;\n      }\n    });\n\n    contacts.sort((a, b) => {\n      return (b.touched || 0) - (a.touched || 0);\n    });\n\n    if (archivedCount > 0) {\n      contacts.push({\n        action: 'archive',\n        title: messages.archived_contacts_title,\n        values: {count: archivedCount}\n      });\n    }\n\n    return {\n      contactList: contacts,\n      unreadThreads: unreadThreads\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chatList != this.props.chatList ||\n        prevProps.archive != this.props.archive ||\n        prevProps.blocked != this.props.blocked) {\n      const newState = ContactsView.deriveStateFromProps(this.props);\n      this.setState(newState);\n      if (newState.unreadThreads != prevState.unreadThreads) {\n        updateFavicon(newState.unreadThreads);\n      }\n    }\n  }\n\n  handleAction(action_ignored) {\n    this.props.onShowArchive();\n  }\n\n  render() {\n    return (\n      <FormattedMessage id=\"contacts_not_found\"\n        defaultMessage=\"You have no chats<br />¯∖_(ツ)_/¯\"\n        description=\"HTML message shown in ContactList when no contacts are found\">{\n        (no_contacts) => <ContactList\n          connected={this.props.connected}\n          contacts={this.state.contactList}\n          emptyListMessage={no_contacts}\n          topicSelected={this.props.topicSelected}\n          myUserId={this.props.myUserId}\n          showOnline={true}\n          showUnread={true}\n          onTopicSelected={this.props.onTopicSelected}\n          showContextMenu={this.props.showContextMenu}\n          onAction={this.handleAction} />\n      }</FormattedMessage>\n    );\n  }\n};\n","// Helper functions for storing values in localStorage.\n// By default localStorage can store only strings, not objects or other types.\n\nexport default class LocalStorageUtil {\n  // Replace old object with the new one.\n  static setObject(key, value) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n\n  // Get stored object.\n  static getObject(key) {\n    const value = localStorage.getItem(key);\n    return value && JSON.parse(value);\n  }\n\n  // Partially or wholly update stored object.\n  static updateObject(key, value) {\n    const oldVal = this.getObject(key);\n    this.setObject(key, Object.assign(oldVal || {}, value));\n  }\n\n  // Just a wrapper.\n  static removeItem(key) {\n    localStorage.removeItem(key);\n  }\n}\n","// Account registration.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport { vcard } from '../lib/utils.js';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class CreateAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: '',\n      password: '',\n      email: '',\n      fn: '', // full/formatted name\n      imageDataUrl: null,\n      errorCleared: false,\n      saveToken: LocalStorageUtil.getObject('keep-logged-in')\n    };\n\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(password) {\n    this.setState({password: password});\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value})\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleToggleSaveToken() {\n    LocalStorageUtil.setObject('keep-logged-in', !this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({errorCleared: false});\n    this.props.onCreateAccount(\n      this.state.login.trim(),\n      this.state.password.trim(),\n      vcard(this.state.fn.trim().substring(0, MAX_TITLE_LENGTH), this.state.imageDataUrl),\n      {'meth': 'email', 'val': this.state.email});\n  }\n\n  render() {\n    let submitClasses = 'blue';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form className=\"panel-form-column\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <FormattedMessage id=\"login_prompt\">{\n              (login_prompt) => <input type=\"text\" placeholder={login_prompt} autoComplete=\"user-name\"\n                value={this.state.login} onChange={this.handleLoginChange} required autoFocus />\n            }</FormattedMessage>\n            <FormattedMessage id=\"password_prompt\">{\n              (password_prompt) => <VisiblePassword placeholder={password_prompt} autoComplete=\"new-password\"\n                value={this.state.password} onFinished={this.handlePasswordChange}\n                required={true} />\n            }</FormattedMessage>\n          </div>\n          <AvatarUpload\n            onImageChanged={this.handleImageChanged}\n            onError={this.props.onError} />\n        </div>\n        <div  className=\"panel-form-row\">\n          <FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n            description=\"Input placeholder for person's full name\">{\n            (full_name_prompt) => <input type=\"text\" placeholder={full_name_prompt} autoComplete=\"name\"\n              value={this.state.fn} onChange={this.handleFnChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <FormattedMessage id=\"email_prompt\" defaultMessage=\"Email, e.g. jdoe@example.com\"\n            description=\"Input placeholder for email entry\">{\n            (email_prompt) => <input type=\"email\" placeholder={email_prompt} autoComplete=\"email\"\n              value={this.state.email} onChange={this.handleEmailChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <FormattedMessage id=\"stay_logged_in\">{\n            (stay_logged_in) => <label htmlFor=\"save-token\">&nbsp;{stay_logged_in}</label>\n          }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_up\" defaultMessage=\"Sign up\"\n              description=\"Create account button [Sign Up]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class EditAccountView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    this.state = {\n      fullName: me.public ? me.public.fn : undefined,\n      avatar: makeImageUrl(me.public ? me.public.photo : null)\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n                description=\"Label for full name editing\" />\n            </label>\n            <div className=\"large\">{this.state.fullName}</div>\n            <div>\n              <label className=\"small\"><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n                description=\"Label for user address (ID)\" /></label>&nbsp;\n              <tt>{this.props.myUserId}</tt>\n            </div>\n          </div>\n          <AvatarUpload\n            avatar={this.state.avatar}\n            readOnly={!this.state.owner}\n            uid={this.props.myUserId}\n            title={this.state.fullName} />\n        </div>\n        <div className=\"panel-form-row\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('general');}}>\n            <i className=\"material-icons\">edit</i>&nbsp;\n            <FormattedMessage id=\"button_edit\" defaultMessage=\"Edit\" description=\"Call to action [Edit]\" />\n          </a>\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('notif');}}>\n            <i className=\"material-icons\">notifications</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_notifications\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('security');}}>\n            <i className=\"material-icons\">security</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_security\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('support');}}>\n            <i className=\"material-icons\">contact_support</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_support\" />\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport TagManager from '../widgets/tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, asEmail, asPhone, vcard } from '../lib/utils.js';\n\nexport default class AccGeneralView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    this.state = {\n      fullName: me.public ? me.public.fn : undefined,\n      avatar: makeImageUrl(me.public ? me.public.photo : null),\n      tags: me.tags(),\n      credentials: me.getCredentials() || [],\n      addCredActive: false,\n      addCredInvalid: false,\n      newCred: '',\n      previousOnTags: me.onTagsUpdated\n    };\n\n    this.tnNewTags = this.tnNewTags.bind(this);\n    this.tnCredsUpdated = this.tnCredsUpdated.bind(this);\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleCredChange = this.handleCredChange.bind(this);\n    this.handleCredKeyDown = this.handleCredKeyDown.bind(this);\n    this.handleCredEntered = this.handleCredEntered.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n  }\n\n  componentDidMount() {\n    const me = this.props.tinode.getMeTopic();\n    me.onCredsUpdated = this.tnCredsUpdated;\n    me.onTagsUpdated = this.tnNewTags;\n  }\n\n  componentWillUnmount() {\n    const me = this.props.tinode.getMeTopic();\n    me.onTagsUpdated = this.state.previousOnTags;\n    me.onCredsUpdated = undefined;\n  }\n\n  tnNewTags(tags) {\n    this.setState({tags: tags});\n  }\n\n  tnCredsUpdated(creds) {\n    this.setState({credentials: creds || []});\n  }\n\n  handleFullNameUpdate(fn) {\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\n    if (fn) {\n      this.setState({fullName: fn});\n      this.props.onUpdateAccount(undefined, vcard(fn, null));\n    }\n  }\n\n  handleImageChanged(img) {\n    this.setState({avatar: img});\n    this.props.onUpdateAccount(undefined, vcard(null, img || Tinode.DEL_CHAR));\n  }\n\n  handleCredChange(e) {\n    this.setState({newCred: e.target.value, addCredInvalid: false});\n  }\n\n  handleCredKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({newCred: '', addCredActive: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleCredEntered(e);\n    }\n  }\n\n  handleCredEntered(e) {\n    let value = this.state.newCred.trim();\n    if (!value) {\n      this.setState({addCredActive: false, addCredInvalid: false});\n      return;\n    }\n\n    let val = asPhone(value);\n    let method;\n    if (val) {\n      method = 'tel';\n    } else {\n      val = asEmail(value);\n      if (val) {\n        method = 'email';\n      }\n    }\n    if (method) {\n      this.props.onCredAdd(method, val);\n      this.setState({addCredActive: false, newCred: ''});\n    } else {\n      this.setState({addCredInvalid: true});\n    }\n  }\n\n  handleTagsUpdated(tags) {\n    // Check if tags have actually changed.\n    if (arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      return;\n    }\n    this.props.onUpdateTags(tags);\n  }\n\n  render() {\n    const credentials = [];\n    this.state.credentials.map((cred) => {\n      credentials.push(<div key={cred.meth + \":\" + cred.val + \":\" + cred.done}>{cred.meth}: <tt>{cred.val}</tt>\n        <span > {!cred.done ?\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredConfirm(cred.meth, cred.val);}}>\n              <FormattedMessage id=\"validate_credential_action\" defaultMessage=\"confirm\"\n                description=\"Validate credentail call to action\" />\n            </a>\n          : null} <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredDelete(cred.meth, cred.val);}}><i\n            className=\"material-icons gray\">delete_outline</i></a></span></div>);\n    });\n\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\"><FormattedMessage id=\"label_your_name\" /></label>\n            <div><FormattedMessage id=\"full_name_prompt\">{\n              (full_name_placeholder) => <InPlaceEdit\n                placeholder={full_name_placeholder}\n                value={this.state.fullName}\n                onFinished={this.handleFullNameUpdate} />\n            }</FormattedMessage></div>\n          </div>\n          <AvatarUpload\n            avatar={this.state.avatar}\n            uid={this.props.myUserId}\n            title={this.state.fullName}\n            onImageChanged={this.handleImageChanged}\n            onError={this.props.onError} />\n        </div>\n        <div className=\"hr\" />\n        <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (user discovery)\"\n          description=\"Section title for TagManager\">{\n          (title_tag_manager) => <TagManager\n            title={title_tag_manager}\n            activated={false}\n            tags={this.state.tags}\n            tinode={this.props.tinode}\n            onSubmit={this.handleTagsUpdated} />\n        }</FormattedMessage>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_user_contacts\" defaultMessage=\"Contacts:\"\n            description=\"Label for user contacts\" />\n          </label>\n          <div className=\"quoted\">\n            {credentials}\n            {this.state.addCredActive ?\n              <input type=\"text\" value={this.state.value}\n                className={this.state.addCredInvalid ? 'invalid' : null}\n                placeholder=\"Phone number or email\" required=\"required\" autoFocus\n                onChange={this.handleCredChange} onKeyDown={this.handleCredKeyDown} onBlur={this.handleCredEntered} />\n              : null}\n            <div>\n              <a href=\"#\" onClick={(e) => {e.preventDefault(); this.setState({addCredActive: true});}}>\n                <i className=\"material-icons\">add</i>\n                <FormattedMessage id=\"button_add_another\" defaultMessage=\"Add another\" description=\"Call to action [+ add another]\" />\n              </a></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\n\nexport default class EditAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckboxClick = this.handleCheckboxClick.bind(this);\n  }\n\n  handleCheckboxClick(what, checked) {\n    if (what == 'sound') {\n      this.props.onToggleMessageSounds(checked);\n    } else if (what == 'alert') {\n      this.props.onTogglePushNotifications(checked);\n    } else if (what == 'incognito') {\n      this.props.onToggleIncognitoMode(checked);\n    }\n  }\n\n  render() {\n    return (\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"message-sound\">\n              <FormattedMessage id=\"label_message_sound\" defaultMessage=\"Message sound:\"\n                description=\"Label for message sounds toggle\" />\n            </label>\n            <CheckBox name=\"sound\" id=\"message-sound\"\n              checked={this.props.messageSounds} onChange={this.handleCheckboxClick} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"desktop-alerts\">\n            {this.props.desktopAlertsEnabled ?\n              <FormattedMessage id=\"label_push_notifications\" defaultMessage=\"Notification alerts:\"\n                description=\"Label for push notifications switch\" />\n              :\n              <FormattedMessage id=\"label_push_notifications_disabled\"\n                defaultMessage=\"Notification alerts (requires HTTPS):\"\n                description=\"Label for push notifications switch\" />\n            }\n            </label>\n            <CheckBox name=\"alert\" id=\"desktop-alerts\"\n              checked={this.props.desktopAlerts}\n              onChange={this.props.desktopAlertsEnabled ? this.handleCheckboxClick : null} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"incognito-mode\">\n              <FormattedMessage id=\"label_incognito_mode\" defaultMessage=\"Incognito mode:\"\n                description=\"Label for incognito mode toggle\" />\n            </label>\n            <CheckBox name=\"incognito\" id=\"incognito-mode\"\n              checked={this.props.incognitoMode} onChange={this.handleCheckboxClick} />\n          </div>\n        </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\n\nconst messages = defineMessages({\n  delete_account: {\n    id: 'delete_account',\n    defaultMessage: 'Delete account',\n    description: 'Title for delete account warning'\n  },\n  delete_account_warning: {\n    id: 'delete_account_arning',\n    defaultMessage: 'Are you sure you want to delete your account? It cannot be undone.',\n    description: 'Warning message when deleting an account'\n  }\n});\n\nclass AccSecurityView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    let blockedCount = 0;\n    me.contacts((c) => {\n      if (c.acs && !c.acs.isJoiner()) {\n        blockedCount ++;\n      }\n    });\n    const defacs = me.getDefaultAccess();\n    this.state = {\n      auth: defacs ? defacs.auth : null,\n      anon: defacs ? defacs.anon : null,\n      showPermissionEditorFor: undefined,\n      blockedCount: blockedCount,\n    };\n\n    this.handlePasswordUpdate = this.handlePasswordUpdate.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n  }\n\n  handlePasswordUpdate(pwd) {\n    this.setState({password: pwd});\n    this.props.onUpdateAccount(pwd);\n  }\n\n  handleLaunchPermissionsEditor(which) {\n    this.setState({\n      showPermissionEditorFor: which,\n      editedPermissions: this.state[which]\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handlePermissionsChanged(perm) {\n    let defacs = {};\n    defacs[this.state.showPermissionEditorFor] = perm;\n    this.props.onUpdateAccount(undefined, undefined, defacs);\n\n    let newState = {showPermissionEditorFor: undefined};\n    newState[this.state.showPermissionEditorFor] = perm;\n    this.setState(newState);\n  }\n\n  handleDeleteAccount(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.delete_account), // title\n      formatMessage(messages.delete_account_warning), // content\n      (() => { this.props.onDeleteAccount(); }), // onConfirm\n      null, // use default text \"OK\"\n      true, // Show Reject button\n      null  // use default text \"Cancel\"\n    );\n  }\n\n  render() {\n    return (\n      <React.Fragment>{this.state.showPermissionEditorFor ?\n        <PermissionsEditor\n          mode={this.state.editedPermissions}\n          skip=\"O\"\n          onSubmit={this.handlePermissionsChanged}\n          onCancel={this.handleHidePermissionsEditor} />\n        :\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_password\" defaultMessage=\"Password\"\n                  description=\"Label for password editing\" />\n            </label>\n            <div>\n              <FormattedMessage id=\"password_unchanged_prompt\" defaultMessage=\"Unchanged\"\n                description=\"Message in editor while password is unchanged\">{\n                (password_unchanged) => <InPlaceEdit\n                  placeholder={password_unchanged}\n                  type=\"password\"\n                  onFinished={this.handlePasswordUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <a href=\"#\" className=\"red flat-button\" onClick={(e) => {e.preventDefault(); this.props.onLogout();}}>\n              <i className=\"material-icons\">exit_to_app</i> &nbsp;<FormattedMessage id=\"button_logout\"\n                defaultMessage=\"Logout\" description=\"Button [Logout]\" />\n            </a>\n            <a href=\"#\" className=\"red flat-button\" onClick={(e) => {this.handleDeleteAccount(e);}}>\n              <i className=\"material-icons\">delete</i> &nbsp;<FormattedMessage id=\"button_delete_account\"\n                defaultMessage=\"Delete account\" description=\"Button [Delete account]\" />\n            </a>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <div>\n              <label className=\"small\">\n                <FormattedMessage id=\"label_default_access_mode\" defaultMessage=\"Default access mode:\"\n                description=\"Label for default access mode\" />\n              </label>\n            </div>\n            <div className=\"quoted\">\n              <div>Auth: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>{this.state.auth}</tt></div>\n              <div>Anon: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>{this.state.anon}</tt></div>\n            </div>\n          </div>\n          {this.state.blockedCount > 0 ?\n            <>\n              <div className=\"hr\" />\n              <div className=\"panel-form-row\">\n                <i className=\"material-icons\">block</i>&nbsp;\n                <a href=\"#\" className=\"gray\" onClick={(e) => {e.preventDefault(); this.props.onShowBlocked();}}>\n                  <FormattedMessage id=\"blocked_contacts_link\" defaultMessage=\"Blocked contacts ({count})\"\n                    values={{ count: this.state.blockedCount }} description=\"Blocked contacts link\" />\n                </a>\n              </div>\n            </>\n            : null }\n        </div>\n      }</React.Fragment>\n    );\n  }\n};\n\nexport default injectIntl(AccSecurityView);\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME, LINK_CONTACT_US, LINK_PRIVACY_POLICY, LINK_TERMS_OF_SERVICE } from '../config.js';\n\nexport default class AccSupportView extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          <a href={LINK_CONTACT_US} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">email</i> &nbsp;<FormattedMessage id=\"link_contact_us\"\n              defaultMessage=\"Contact Us\" description=\"Ancor text for contacting us by email\" />\n          </a>\n          <a href={LINK_TERMS_OF_SERVICE} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">description</i> &nbsp;<FormattedMessage id=\"link_terms_of_service\"\n              defaultMessage=\"Terms of Service\" description=\"Ancor text for terms of service link\" />\n          </a>\n          <a href={LINK_PRIVACY_POLICY} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">policy</i> &nbsp;<FormattedMessage id=\"link_privacy_policy\"\n              defaultMessage=\"Privacy Policy\" description=\"Ancor text for privacy policy link\" />\n          </a>\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_client\" /></label>\n            {APP_NAME}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_sdk\" defaultMessage=\"SDK:\" /></label>\n            {Tinode.getLibrary()}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server\" /></label>\n            {this.props.serverVersion}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server_address\" defaultMessage=\"Server address:\" /></label>\n            {this.props.serverAddress}\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","// Login form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\n\nexport default class LoginView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: props.login,\n      password: '',\n      hostName: props.serverAddress,\n      saveToken: LocalStorageUtil.getObject('keep-logged-in')\n    };\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  handleToggleSaveToken() {\n    LocalStorageUtil.setObject('keep-logged-in', !this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onLogin(this.state.login.trim(), this.state.password.trim());\n  }\n\n  render() {\n    var submitClasses = 'blue';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form id=\"login-form\" onSubmit={this.handleSubmit}>\n        <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n          description=\"Login placeholder in LoginView\">\n        {\n          (login_prompt) => <input type=\"text\" id=\"inputLogin\"\n            placeholder={login_prompt}\n            autoComplete=\"username\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"none\"\n            value={this.state.login}\n            onChange={this.handleLoginChange}\n            required autoFocus />\n        }\n        </FormattedMessage>\n        <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n          description=\"Password placeholder in LoginView\">\n        {\n          (password_prompt) => <VisiblePassword type=\"password\" id=\"inputPassword\"\n            placeholder={password_prompt}\n            autoComplete=\"current-password\"\n            value={this.state.password}\n            onChange={this.handlePasswordChange}\n            required={true} />\n        }\n        </FormattedMessage>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <label htmlFor=\"save-token\">&nbsp;\n            <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n              description=\"Label for a checkbox\" />\n          </label>\n          <a href=\"#reset\">\n            <FormattedMessage id=\"forgot_password_link\" defaultMessage=\"Forgot password?\"\n              description=\"Link to Reset password form\" />\n          </a>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_in\" defaultMessage=\"Sign in\"\n              description=\"Button [Sign In]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n/* END Login */\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  invalid_id: {\n    id: 'error_invalid_id',\n    defaultMessage: 'Invalid ID',\n    description: 'Error message'\n  }\n});\n\nclass NewTopicById extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      groupId: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({groupId: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.groupId) {\n      var name = this.state.groupId.trim();\n      if (name.length > 3 && (name.substr(0, 3) == 'usr' || name.substr(0, 3) == 'grp')) {\n        this.props.onSubmit(name);\n      } else {\n        this.props.onError(this.props.intl.formatMessage(messages.invalid_id), 'err');\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"group_user_id_prompt\" defaultMessage=\"Group or User ID\"\n          description=\"Prompt for entering user or group ID\">{\n          (prompt) => <input type=\"text\" placeholder={prompt}\n            value={this.state.groupId} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required autoFocus />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"blue\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_subscribe\" defaultMessage=\"Subscribe\"\n              description=\"Button [Subscribe]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicById);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from './avatar-upload.jsx';\nimport CheckBox from './checkbox.jsx';\nimport TagManager from './tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class NewTopicGroup extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      fn: '', // full/formatted name\n      private: '',\n      imageDataUrl: null,\n      tags: [],\n      isChannel: false\n    };\n\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handlePrivateChange = this.handlePrivateChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleTagsChanged = this.handleTagsChanged.bind(this);\n    this.handleChannelToggle = this.handleChannelToggle.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handlePrivateChange(e) {\n    this.setState({private: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleTagsChanged(tags) {\n    this.setState({tags: tags});\n  }\n\n  handleChannelToggle() {\n    this.setState({isChannel: !this.state.isChannel});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const fn = this.state.fn.trim().substring(0, MAX_TITLE_LENGTH);\n    const comment = this.state.private.trim().substring(0, MAX_TITLE_LENGTH);\n    if (fn) {\n      this.props.onSubmit(fn, this.state.imageDataUrl, comment, this.state.tags, this.state.isChannel);\n    }\n  }\n\n  render() {\n    var submitClasses = 'blue';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n    return (\n      <form className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\" htmlFor=\"new-topic-fn\">\n              <FormattedMessage id=\"label_topic_name\" />\n            </label>\n            <FormattedMessage id=\"topic_name_editing_placeholder\" defaultMessage=\"Freeform name of the group\"\n              description=\"Prompt for entering topic name\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-fn\" placeholder={placeholder}\n                value={this.state.fn} onChange={this.handleFnChange} autoFocus required />\n            }</FormattedMessage>\n            <br />\n            <label className=\"small\" htmlFor=\"new-topic-priv\">\n              <FormattedMessage id=\"label_private\" />\n            </label>\n            <FormattedMessage id=\"private_editing_placeholder\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-priv\" placeholder={placeholder}\n                value={this.state.private} onChange={this.handlePrivateChange} />\n            }</FormattedMessage>\n          </div>\n          <AvatarUpload\n            onError={this.props.onError}\n            onImageChanged={this.handleImageChanged} />\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox checked={this.state.isChannel} onChange={this.handleChannelToggle}/>&nbsp;\n          <label onClick={this.handleChannelToggle}><FormattedMessage id=\"channel_prompt\"\n            defaultMessage=\"This is a channel\"\n            description=\"Checkbox label when creating a channel\" /></label>\n        </div>\n        <FormattedMessage id=\"title_tag_manager\">{\n          (title) => <TagManager\n            tags={this.state.tags}\n            activated={true}\n            onTagsChanged={this.handleTagsChanged}\n            tinode={this.props.tinode}\n            title={title} />\n        }</FormattedMessage>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses}>\n            <FormattedMessage id=\"button_create\" defaultMessage=\"Create\"\n              description=\"Button [Create]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nexport default class SearchContacts extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      edited: false,\n      search: ''\n    };\n\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  componentWillUnmount() {\n    if (this.state.edited) {\n      this.setState({search: '', edited: false});\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n  }\n\n  handleSearchChange(e) {\n    this.setState({search: e.target.value});\n  }\n\n  handleSearch(e) {\n    e.preventDefault();\n    var query = this.state.search.trim();\n    this.setState({edited: (query.length > 0)});\n    this.props.onSearchContacts(query.length > 0 ? query : Tinode.DEL_CHAR);\n  }\n\n  handleClear(e) {\n    e.preventDefault();\n    if (this.state.edited) {\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n    this.setState({search: '', edited: false});\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Enter') {\n      this.handleSearch(e);\n    } else if (e.key === 'Escape') {\n      this.handleClear();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <i className=\"material-icons search\">search</i>\n          <FormattedMessage id=\"search_placeholder\" defaultMessage=\"List like email:alice@example.com, tel:17025550003...\"\n            description=\"Placeholder in contacts search field\">{\n            (search_placeholder) => <input className=\"search\" type=\"text\"\n              placeholder={search_placeholder}\n              value={this.state.search} onChange={this.handleSearchChange}\n              onKeyDown={this.handleKeyDown} required autoFocus />\n          }</FormattedMessage>\n          <a href=\"#\" onClick={this.handleClear}>\n            <i className=\"material-icons\">close</i>\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","// Create new topic and invite users or send an invite.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport ContactList from '../widgets/contact-list.jsx';\nimport NewTopicById from '../widgets/new-topic-by-id.jsx';\nimport NewTopicGroup from '../widgets/new-topic-group.jsx';\nimport SearchContacts from '../widgets/search-contacts.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\nimport { vcard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  search_for_contacts: {\n    id: \"search_for_contacts\",\n    defaultMessage: \"Use search to find contacts\",\n    description: \"Text shown in contacts view when user entered no search query.\"\n  },\n  search_no_results: {\n    id: \"search_no_results\",\n    defaultMessage: \"Search returned no results\",\n    description: \"Text shown in contacts view when query returned no results.\"\n  }\n});\n\nclass NewTopicView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tabSelected: 'p2p',\n      searchQuery: null\n    };\n\n    this.handleTabClick = this.handleTabClick.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleNewGroupSubmit = this.handleNewGroupSubmit.bind(this);\n    this.handleGroupByID = this.handleGroupByID.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.onInitFind();\n  }\n\n  handleTabClick(e) {\n    e.preventDefault();\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'tab', e.currentTarget.dataset.id));\n    this.setState({tabSelected: e.currentTarget.dataset.id});\n  }\n\n  handleSearchContacts(query) {\n    this.props.onSearchContacts(query);\n    this.setState({searchQuery: Tinode.isNullValue(query) ? null : query});\n  }\n\n  handleContactSelected(sel) {\n    if (this.state.tabSelected === 'p2p') {\n      HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n      this.props.onCreateTopic(sel);\n    }\n  }\n\n  handleNewGroupSubmit(name, dataUrl, priv, tags, isChannel) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(undefined, vcard(name, dataUrl), priv, tags, isChannel);\n  }\n\n  handleGroupByID(topicName) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(topicName);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const no_contacts_placeholder = formatMessage(this.state.searchQuery ?\n      messages.search_no_results : messages.search_for_contacts);\n    return (\n      <div className=\"flex-column\">\n        <ul className=\"tabbar\">\n          <li className={this.state.tabSelected === \"p2p\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"p2p\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_find_user\" defaultMessage=\"find\"\n                description=\"Tab title Find\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"grp\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"grp\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_new_group\" defaultMessage=\"new group\"\n                description=\"Tab title New Group\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"byid\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"byid\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_group_by_id\" defaultMessage=\"by id\"\n                description=\"Tab title Find topic by ID\" />\n            </a>\n          </li>\n        </ul>\n        {this.state.tabSelected === 'grp' ?\n          <NewTopicGroup\n            tinode={this.props.tinode}\n            onSubmit={this.handleNewGroupSubmit} /> :\n          this.state.tabSelected === 'byid' ?\n            <NewTopicById\n              onSubmit={this.handleGroupByID}\n              onError={this.props.onError} /> :\n            <div className=\"flex-column\">\n              <SearchContacts\n                type=\"p2p\"\n                onSearchContacts={this.handleSearchContacts} />\n              <ContactList\n                contacts={this.props.searchResults}\n                myUserId={this.props.myUserId}\n                emptyListMessage={no_contacts_placeholder}\n                showOnline={false}\n                showUnread={false}\n                showContextMenu={false}\n                onTopicSelected={this.handleContactSelected} />\n            </div>}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicView);\n","// A password reset form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\n\nexport default class PasswordResetView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n  }\n\n  componentDidMount() {\n    let parsed = HashNavigation.parseUrlHash(window.location.hash);\n    this.setState({token: parsed.params.token, scheme: parsed.params.scheme});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.token) {\n      this.props.onReset(this.state.scheme, this.state.password.trim(), this.state.token);\n    } else {\n      this.props.onRequest('email', this.state.email.trim());\n    }\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  render() {\n    let reset = (this.state.token && this.state.scheme);\n    return (\n      <form id=\"password-reset-form\" onSubmit={this.handleSubmit}>\n        {reset ?\n          <FormattedMessage id=\"new_password_placeholder\" defaultMessage=\"Enter new password\"\n            description=\"Placeholder for entering new password\">{\n            (placeholder) => <VisiblePassword\n              placeholder={placeholder}\n              autoComplete=\"new-password\"\n              value={this.state.password}\n              required={true} autoFocus={true}\n              onChange={this.handlePasswordChange} />\n          }</FormattedMessage>\n          :\n          <>\n            <label htmlFor=\"inputEmail\">\n              <FormattedMessage id=\"label_reset_password\"\n                defaultMessage=\"Send a password reset email:\"\n                description=\"Label for password reset field\" />\n            </label>\n            <FormattedMessage id=\"credential_email_prompt\" defaultMessage=\"Your registration email\"\n              description=\"Placeholder for entering email\">{\n              (placeholder) => <input type=\"email\" id=\"inputEmail\"\n                placeholder={placeholder}\n                autoComplete=\"email\"\n                value={this.state.email}\n                onChange={this.handleEmailChange}\n                required autoFocus />\n            }</FormattedMessage>\n          </>\n        }\n        <div className=\"dialog-buttons\">\n          <button className=\"blue\" type=\"submit\">{reset ?\n            <FormattedMessage id=\"button_reset\" defaultMessage=\"Reset\" description=\"Button [Reset]\" /> :\n            <FormattedMessage id=\"button_send_request\" defaultMessage=\"Send request\"\n              description=\"Button [Send request]\" />\n          }</button>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react';\n\nimport { KNOWN_HOSTS } from '../config.js';\n\n/* Combobox for selecting host name */\n\nexport default class HostSelector extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hostName: props.serverAddress,\n      changed: false\n    };\n\n    this.handleHostNameChange = this.handleHostNameChange.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handleHostNameChange(e) {\n    this.setState({hostName: e.target.value, changed: true});\n  }\n\n  handleEditingFinished() {\n    if (this.state.changed) {\n      this.setState({changed: false});\n      this.props.onServerAddressChange(this.state.hostName.trim());\n    }\n  }\n\n  render() {\n    var hostOptions = [];\n    for (let key in KNOWN_HOSTS) {\n      let item = KNOWN_HOSTS[key];\n      hostOptions.push(\n        <option key={item} value={item} />\n      );\n    }\n    return (\n      <div className=\"panel-form-row\">\n        <input type=\"search\" id=\"host-name\" placeholder={this.props.hostName} list=\"known-hosts\"\n          className=\"quoted\" value={this.state.hostName} onChange={this.handleHostNameChange}\n          onBlur={this.handleEditingFinished} required />\n        <datalist id=\"known-hosts\">\n          {hostOptions}\n        </datalist>\n      </div>\n    );\n  }\n}\n","// Tinode config panel.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport HostSelector from '../widgets/host-selector.jsx';\n\nexport default class SettingsView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transport: props.transport || 'def',\n      serverAddress: props.serverAddress,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleTransportSelected = this.handleTransportSelected.bind(this);\n    this.handleServerAddressChange = this.handleServerAddressChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onUpdate({\n      transport: this.state.transport,\n      serverAddress: this.state.serverAddress\n    });\n  }\n\n  handleTransportSelected(e) {\n    this.setState({transport: e.currentTarget.value});\n  }\n\n  handleServerAddressChange(name) {\n    this.setState({serverAddress: name});\n  }\n\n  render() {\n    const names = {def: \"default\", ws: \"websocket\", lp: \"long polling\"};\n    var transportOptions = [];\n    var instance = this;\n    ['def', 'ws', 'lp'].map(function(item) {\n      var id = 'transport-' + item;\n      var name = names[item];\n      transportOptions.push(\n        <li key={item}>\n          <input type=\"radio\" id={id} name=\"transport-select\" value={item}\n            checked={instance.state.transport === item}\n            onChange={instance.handleTransportSelected} />\n          <label htmlFor={id}>{name}</label>\n        </li>\n      );\n    });\n\n    return (\n      <form id=\"settings-form\" className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_server_to_use\" defaultMessage=\"Server to use:\"\n              description=\"Label for server selector in SettingsView\" />\n          </label>\n        </div>\n        <HostSelector serverAddress={this.state.serverAddress}\n          onServerAddressChange={this.handleServerAddressChange} />\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_wire_transport\" defaultMessage=\"Wire transport:\"\n              description=\"Label for wire transport selection in SettingsView\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ul className=\"quoted\">\n            {transportOptions}\n          </ul>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button type=\"submit\" className=\"blue\">\n            <FormattedMessage id=\"button_update\" defaultMessage=\"Update\"\n              description=\"Button [Update]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// ValidationView: panel for confirming credentials, like email or phone.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  phone: {\n    id: 'phone_dative',\n    defaultMessage: 'phone',\n    description: \"Dative case of 'phone', i.e. 'phone' in 'by phone'\",\n  },\n  email: {\n    id: 'email_dative',\n    defaultMessage: 'email',\n    description: \"Dative case of 'email', i.e. 'email' in 'by email'\",\n  }\n});\n\nclass ValidationView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      code: props.credCode || ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({code: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    } else if (e.key == 'Escape') {\n      this.handleCancel(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.code && this.state.code.trim()) {\n      this.props.onSubmit(this.props.credMethod, this.state.code.trim());\n    }\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel();\n  }\n\n\n  render() {\n    const { formatMessage } = this.props.intl;\n    const methods = {'email': formatMessage(messages.email), 'tel': formatMessage(messages.phone)};\n    let method = methods[this.props.credMethod] || this.props.credMethod;\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\" htmlFor=\"enter-confirmation-code\">\n            <FormattedMessage id=\"enter_confirmation_code_prompt\"\n              defaultMessage=\"Enter confirmation code sent to you by {method}:\"\n              description=\"Request to enter confirmation code\"\n              values={{method: method}} />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"numeric_confirmation_code_prompt\"\n          defaultMessage=\"Numbers only\" description=\"Prompt for numeric conformation code\">{\n          (numbers_only) => <input type=\"text\" id=\"enter-confirmation-code\"\n            placeholder={numbers_only}\n            value={this.state.code} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"blue\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_confirm\" defaultMessage=\"Confirm\" description=\"Button [Confirm]\" />\n          </button>\n          <button className=\"white\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ValidationView);\n","import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport SideNavbar from '../widgets/side-navbar.jsx';\n\nimport ContactsView from './contacts-view.jsx';\nimport CreateAccountView from './create-account-view.jsx';\nimport EditAccountView from './edit-account-view.jsx';\nimport AccGeneralView from './acc-general-view.jsx';\nimport AccNotificationsView from './acc-notifications-view.jsx';\nimport AccSecurityView from './acc-security-view.jsx';\nimport AccSupportView from './acc-support-view.jsx';\nimport LoginView from './login-view.jsx';\nimport NewTopicView from './new-topic-view.jsx';\nimport PasswordResetView from './password-reset-view.jsx';\nimport SettingsView from './settings-view.jsx';\nimport ValidationView from './validation-view.jsx';\n\n// Panel titles for translation.\nconst messages = defineMessages({\n  'login': {\n    id: 'sidepanel_title_login',\n    description: 'Sidepanel title for LoginView.',\n    defaultMessage: 'Sign In'\n  },\n  'register': {\n    id: 'sidepanel_title_register',\n    description: 'Sidepanel title for CreateAccountView.',\n    defaultMessage: 'Create Account'\n  },\n  'settings': {\n    id: 'sidepanel_title_settings',\n    description: 'Sidepanel title for SettingsView.',\n    defaultMessage: 'Settings'\n  },\n  'edit': {\n    id: 'sidepanel_title_account_settings',\n    description: 'Sidepanel title for EditAccountView.',\n    defaultMessage: 'Account Settings'\n  },\n  'general': {\n    id: 'sidepanel_title_acc_general',\n    description: 'Sidepanel title for AccGeneralView.',\n    defaultMessage: 'General'\n  },\n  'security': {\n    id: 'sidepanel_title_acc_security',\n    description: 'Sidepanel title for AccSecurityView.',\n    defaultMessage: 'Security'\n  },\n  'notif': {\n    id: 'sidepanel_title_acc_notifications',\n    description: 'Sidepanel title for AccNotificationsView.',\n    defaultMessage: 'Notifications'\n  },\n  'support': {\n    id: 'sidepanel_title_acc_support',\n    description: 'Sidepanel title for AccSupportView.',\n    defaultMessage: 'Support'\n  },\n  'newtpk': {\n    id: 'sidepanel_title_newtpk',\n    description: 'Sidepanel title for NewTopicView.',\n    defaultMessage: 'Start New Chat'\n  },\n  'cred': {\n    id: 'sidepanel_title_cred',\n    description: 'Sidepanel title for ValidationView.',\n    defaultMessage: 'Confirm Credentials'\n  },\n  'reset': {\n    id: 'sidepanel_title_reset',\n    description: 'Sidepanel title for PasswordResetView.',\n    defaultMessage: 'Reset Password'\n  },\n  'archive': {\n    id: 'sidepanel_title_archive',\n    description: 'Sidepanel title for ContactsView-Archive.',\n    defaultMessage: 'Archived Chats'\n  },\n  'blocked': {\n    id: 'sidepanel_title_blocked',\n    description: 'Sidepanel title for ContactsView-Blocked.',\n    defaultMessage: 'Blocked Chats'\n  }\n});\n\nclass SidepanelView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleLoginRequested = this.handleLoginRequested.bind(this);\n    this.handleNewTopic = this.handleNewTopic.bind(this);\n  }\n\n  handleLoginRequested(login, password) {\n    this.props.onLoginRequest(login, password);\n  }\n\n  handleNewTopic() {\n    this.props.onBasicNavigate('newtpk');\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const view = this.props.state || (this.props.myUserId ? 'contacts' : 'login');\n\n    let title, avatar;\n    if (view == 'contacts') {\n      title = this.props.title;\n      avatar = this.props.avatar ? this.props.avatar : true;\n    } else {\n      title = formatMessage(messages[view]);\n      avatar = false;\n    }\n\n    let onCancel;\n    if (['login', 'contacts'].indexOf(view) == -1) {\n      onCancel = this.props.onCancel;\n    }\n\n    return (\n      <div id=\"sidepanel\" className={this.props.hideSelf ? 'nodisplay' : null}>\n        <SideNavbar\n          state={view}\n          title={title}\n          avatar={avatar}\n          myUserId={this.props.myUserId}\n          onSignUp={this.props.onSignUp}\n          onSettings={this.props.onSettings}\n          onNewTopic={this.handleNewTopic}\n          onCancel={onCancel} />\n\n        <ErrorPanel\n          level={this.props.errorLevel}\n          text={this.props.errorText}\n          action={this.props.errorAction}\n          actionText={this.props.errorActionText}\n          onClearError={this.props.onError} />\n\n        <LoadSpinner show={this.props.loadSpinnerVisible} />\n\n        {view === 'login' ?\n          <LoginView\n            login={this.props.login}\n            disabled={this.props.loginDisabled}\n            onLogin={this.handleLoginRequested} /> :\n\n          view === 'register' ?\n          <CreateAccountView\n            onCreateAccount={this.props.onCreateAccount}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'settings' ?\n          <SettingsView\n            transport={this.props.transport}\n            serverAddress={this.props.serverAddress}\n            onCancel={this.props.onCancel}\n            onUpdate={this.props.onGlobalSettings} /> :\n\n          view === 'edit' ?\n          <EditAccountView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            onBasicNavigate={this.props.onBasicNavigate} /> :\n\n          view === 'general' ?\n          <AccGeneralView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            onUpdateAccount={this.props.onUpdateAccount}\n            onUpdateTags={this.props.onUpdateAccountTags}\n            onCredAdd={this.props.onCredAdd}\n            onCredDelete={this.props.onCredDelete}\n            onCredConfirm={this.props.onCredConfirm}\n            onBasicNavigate={this.props.onBasicNavigate}\n            onError={this.props.onError} /> :\n\n          view === 'notif' ?\n          <AccNotificationsView\n            messageSounds={this.props.messageSounds}\n            desktopAlerts={this.props.desktopAlerts}\n            desktopAlertsEnabled={this.props.desktopAlertsEnabled}\n            incognitoMode={this.props.incognitoMode}\n            onTogglePushNotifications={this.props.onTogglePushNotifications}\n            onToggleMessageSounds={this.props.onToggleMessageSounds}\n            onToggleIncognitoMode={this.props.onToggleIncognitoMode} /> :\n\n          view === 'security' ?\n          <AccSecurityView\n            tinode={this.props.tinode}\n            onUpdateAccount={this.props.onUpdateAccount}\n            onLogout={this.props.onLogout}\n            onDeleteAccount={this.props.onDeleteAccount}\n            onShowAlert={this.props.onShowAlert}\n            onShowBlocked={this.props.onShowBlocked} /> :\n\n          view === 'support' ?\n          <AccSupportView\n            serverAddress={this.props.serverAddress}\n            serverVersion={this.props.serverVersion} /> :\n\n          (view === 'contacts' || view == 'archive' || view == 'blocked') ?\n          <ContactsView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            connected={this.props.connected}\n            topicSelected={this.props.topicSelected}\n            archive={view == 'archive'}\n            blocked={view == 'blocked'}\n            chatList={this.props.chatList}\n            showContextMenu={this.props.showContextMenu}\n            onTopicSelected={this.props.onTopicSelected}\n            onShowArchive={this.props.onShowArchive} /> :\n\n          view === 'newtpk' ?\n          <NewTopicView\n            tinode={this.props.tinode}\n            searchResults={this.props.searchResults}\n            onInitFind={this.props.onInitFind}\n            onSearchContacts={this.props.onSearchContacts}\n            onCreateTopic={this.props.onCreateTopic}\n            onError={this.props.onError} /> :\n\n          view === 'cred' ?\n          <ValidationView\n            credCode={this.props.credCode}\n            credMethod={this.props.credMethod}\n            onSubmit={this.props.onValidateCredentials}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'reset' ?\n          <PasswordResetView\n            onRequest={this.props.onPasswordResetRequest}\n            onReset={this.props.onResetPassword} /> :\n          null}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SidepanelView);\n","import { KNOWN_HOSTS, DEFAULT_HOST } from '../config.js';\n\n// Detect server address from the URL\nexport function detectServerAddress() {\n  let host = DEFAULT_HOST;\n  if (typeof window.location == 'object') {\n    if (window.location.protocol == 'file:' || window.location.hostname == 'localhost') {\n      host = KNOWN_HOSTS.local;\n    } else if (window.location.hostname) {\n      host = window.location.hostname + (window.location.port ? ':' + window.location.port : '');\n    }\n  }\n  return host;\n}\n\n// Detect if the page is served over HTTPS.\nexport function isSecureConnection() {\n  if (typeof window.location == 'object') {\n    return window.location.protocol == 'https:';\n  }\n  return false;\n}\n\nexport function isLocalHost() {\n  if (typeof window.location == 'object') {\n    return window.location.hostname == 'localhost';\n  }\n  return false;\n}\n","// The top-level class to hold all functionality together.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport * as firebase from 'firebase/app';\nimport 'firebase/messaging';\n\nimport Tinode from 'tinode-sdk';\n\nimport Alert from '../widgets/alert.jsx';\nimport ContextMenu from '../widgets/context-menu.jsx';\n\nimport InfoView from './info-view.jsx';\nimport MessagesView from './messages-view.jsx';\nimport SidepanelView from './sidepanel-view.jsx';\n\nimport { API_KEY, APP_NAME, DEFAULT_P2P_ACCESS_MODE, LOGGING_ENABLED,\n  MEDIA_BREAKPOINT, RECEIVED_DELAY } from '../config.js';\nimport { base64ReEncode, makeImageUrl } from '../lib/blob-helpers.js';\nimport { detectServerAddress, isLocalHost, isSecureConnection } from '../lib/host-name.js';\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { secondsToTime } from '../lib/strformat.js'\nimport { updateFavicon } from '../lib/utils.js';\n\n// Sound to play on message received.\nconst POP_SOUND = new Audio('audio/msg.mp3');\n\nconst messages = defineMessages({\n  reconnect_countdown: {\n    id: 'reconnect_countdown',\n    defaultMessage: 'Disconnected. Reconnecting in {seconds}…',\n    description: 'Message shown when an app update is available.'\n  },\n  reconnect_now: {\n    id: 'reconnect_now',\n    defaultMessage: 'Try now',\n    description: 'Prompt for reconnecting now'\n  },\n  push_init_failed: {\n    id: 'push_init_failed',\n    defaultMessage: 'Failed to initialize push notifications',\n    description: 'Error message when push notifications have failed to initialize.'\n  },\n  invalid_security_token: {\n    id: 'invalid_security_token',\n    defaultMessage: 'Invalid security token',\n    description: 'Error message when resetting password.'\n  },\n  no_connection: {\n    id: 'no_connection',\n    defaultMessage: 'No connection',\n    description: 'Warning that the user is offline.'\n  },\n  code_doesnot_match: {\n    id: 'code_doesnot_match',\n    defaultMessage: 'Code does not match',\n    description: 'Error message when the credential validation code is incorrect.'\n  }\n});\n\nclass TinodeWeb extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = this.getBlankState();\n\n    this.handleResize = this.handleResize.bind(this);\n    this.handleHashRoute = this.handleHashRoute.bind(this);\n    this.handleOnline = this.handleOnline.bind(this);\n    this.checkForAppUpdate = this.checkForAppUpdate.bind(this);\n    this.handleVisibilityEvent = this.handleVisibilityEvent.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.handleLoginRequest = this.handleLoginRequest.bind(this);\n    this.handleConnected = this.handleConnected.bind(this);\n    this.handleAutoreconnectIteration = this.handleAutoreconnectIteration.bind(this);\n    this.doLogin = this.doLogin.bind(this);\n    this.handleCredentialsRequest = this.handleCredentialsRequest.bind(this);\n    this.handleLoginSuccessful = this.handleLoginSuccessful.bind(this);\n    this.handleDisconnect = this.handleDisconnect.bind(this);\n    this.tnMeMetaDesc = this.tnMeMetaDesc.bind(this);\n    this.tnMeContactUpdate = this.tnMeContactUpdate.bind(this);\n    this.tnMeSubsUpdated = this.tnMeSubsUpdated.bind(this);\n    this.resetContactList = this.resetContactList.bind(this);\n    this.tnData = this.tnData.bind(this);\n    this.tnInitFind = this.tnInitFind.bind(this);\n    this.tnFndSubsUpdated = this.tnFndSubsUpdated.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleTopicSelected = this.handleTopicSelected.bind(this);\n    this.handleHideMessagesView = this.handleHideMessagesView.bind(this);\n    this.handleSendMessage = this.handleSendMessage.bind(this);\n    this.handleNewChatInvitation = this.handleNewChatInvitation.bind(this);\n    this.handleNewAccount = this.handleNewAccount.bind(this);\n    this.handleNewAccountRequest = this.handleNewAccountRequest.bind(this);\n    this.handleUpdateAccountRequest = this.handleUpdateAccountRequest.bind(this);\n    this.handleUpdateAccountTagsRequest = this.handleUpdateAccountTagsRequest.bind(this);\n    this.handleToggleIncognitoMode = this.handleToggleIncognitoMode.bind(this);\n    this.handleSettings = this.handleSettings.bind(this);\n    this.handleGlobalSettings = this.handleGlobalSettings.bind(this);\n    this.handleShowArchive = this.handleShowArchive.bind(this);\n    this.handleShowBlocked = this.handleShowBlocked.bind(this);\n    this.handleToggleMessageSounds = this.handleToggleMessageSounds.bind(this);\n    this.handleCredAdd = this.handleCredAdd.bind(this);\n    this.handleCredDelete = this.handleCredDelete.bind(this);\n    this.handleCredConfirm = this.handleCredConfirm.bind(this);\n    this.initDesktopAlerts = this.initDesktopAlerts.bind(this);\n    this.togglePushToken = this.togglePushToken.bind(this);\n    this.requestPushToken = this.requestPushToken.bind(this);\n    this.handleSidepanelCancel = this.handleSidepanelCancel.bind(this);\n    this.handleStartTopicRequest = this.handleStartTopicRequest.bind(this);\n    this.handleNewTopicCreated = this.handleNewTopicCreated.bind(this);\n    this.handleTopicUpdateRequest = this.handleTopicUpdateRequest.bind(this);\n    this.handleChangePermissions = this.handleChangePermissions.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n    this.handleDeleteMessagesRequest = this.handleDeleteMessagesRequest.bind(this);\n    this.handleLeaveUnsubRequest = this.handleLeaveUnsubRequest.bind(this);\n    this.handleBlockTopicRequest = this.handleBlockTopicRequest.bind(this);\n    this.handleReportTopic = this.handleReportTopic.bind(this);\n    this.handleShowContextMenu = this.handleShowContextMenu.bind(this);\n    this.defaultTopicContextMenu = this.defaultTopicContextMenu.bind(this);\n    this.handleHideContextMenu = this.handleHideContextMenu.bind(this);\n    this.handleShowAlert = this.handleShowAlert.bind(this);\n    this.handleShowInfoView = this.handleShowInfoView.bind(this);\n    this.handleHideInfoView = this.handleHideInfoView.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleValidateCredentialsRequest = this.handleValidateCredentialsRequest.bind(this);\n    this.handlePasswordResetRequest = this.handlePasswordResetRequest.bind(this);\n    this.handleResetPassword = this.handleResetPassword.bind(this);\n    this.handleContextMenuAction = this.handleContextMenuAction.bind(this);\n  }\n\n  getBlankState() {\n    const settings = LocalStorageUtil.getObject('settings') || {};\n\n    return {\n      connected: false,\n      // Connected and subscribed to 'me'\n      ready: false,\n      // Try to re-login on new connection.\n      autoLogin: false,\n      transport: settings.transport || null,\n      serverAddress: settings.serverAddress || detectServerAddress(),\n      serverVersion: \"no connection\",\n      // \"On\" is the default, so saving the \"off\" state.\n      messageSounds: !settings.messageSoundsOff,\n      incognitoMode: false,\n      desktopAlerts: settings.desktopAlerts,\n      desktopAlertsEnabled: (isSecureConnection() || isLocalHost()) &&\n        (typeof firebase != 'undefined') && (typeof navigator != 'undefined') &&\n        (typeof FIREBASE_INIT != 'undefined'),\n      firebaseToken: LocalStorageUtil.getObject('firebase-token'),\n\n      applicationVisible: !document.hidden,\n\n      errorText: '',\n      errorLevel: null,\n      errorAction: undefined,\n      errorActionText: null,\n\n      sidePanelSelected: 'login',\n      sidePanelTitle: null,\n      sidePanelAvatar: null,\n      loadSpinnerVisible: false,\n\n      login: '',\n      password: '',\n      myUserId: null,\n      liveConnection: navigator.onLine,\n      topicSelected: '',\n      topicSelectedOnline: false,\n      topicSelectedAcs: null,\n      newTopicParams: null,\n      loginDisabled: false,\n      displayMobile: (window.innerWidth <= MEDIA_BREAKPOINT),\n      showInfoPanel: false,\n      mobilePanel: 'sidepanel',\n\n      contextMenuVisible: false,\n      contextMenuBounds: null,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuItems: [],\n\n      // Modal alert dialog.\n      alertVisible: false,\n      alertParams: {},\n\n      // Chats as shown in the ContactsView\n      chatList: [],\n      // Contacts returned by a search query.\n      searchResults: [],\n      // Merged results of a search query and p2p chats.\n      searchableContacts: [],\n      credMethod: undefined,\n      credCode: undefined\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    window.addEventListener('online', (e) => { this.handleOnline(true); });\n    window.addEventListener('offline', (e) => { this.handleOnline(false); });\n    window.addEventListener('hashchange', this.handleHashRoute);\n    // Window/tab visible or invisible for pausing timers.\n    document.addEventListener('visibilitychange', this.handleVisibilityEvent);\n\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n\n    const keepLoggedIn = LocalStorageUtil.getObject('keep-logged-in');\n\n    const {formatMessage, locale} = this.props.intl;\n    new Promise((resolve, reject) => {\n      this.tinode = TinodeWeb.tnSetup(this.state.serverAddress, this.state.transport, locale, keepLoggedIn, resolve);\n      this.tinode.onConnect = this.handleConnected;\n      this.tinode.onDisconnect = this.handleDisconnect;\n      this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n    }).then(() => {\n      // Initialize desktop alerts.\n      if (this.state.desktopAlertsEnabled) {\n        try {\n          this.fbPush = firebase.initializeApp(FIREBASE_INIT, APP_NAME).messaging();\n          this.fbPush.usePublicVapidKey(FIREBASE_INIT.messagingVapidKey);\n          navigator.serviceWorker.register('/service-worker.js').then((reg) => {\n            this.checkForAppUpdate(reg);\n            this.fbPush.useServiceWorker(reg);\n            reg.active.postMessage(JSON.stringify({locale: locale}));\n            this.initDesktopAlerts();\n            if (this.state.desktopAlerts) {\n              if (!this.state.firebaseToken) {\n                this.togglePushToken(true);\n              } else {\n                this.tinode.setDeviceToken(this.state.firebaseToken, true);\n              }\n            }\n          }).catch((err) => {\n            // registration failed :(\n            console.log(\"Failed to register service worker:\", err);\n          });\n        } catch (err) {\n          this.handleError(formatMessage(messages.push_init_failed), 'err');\n          console.log(\"Failed to initialize push notifications\", err);\n          this.setState({desktopAlertsEnabled: false});\n        }\n      }\n\n      const token = keepLoggedIn ? LocalStorageUtil.getObject('auth-token') : undefined;\n\n      const parsedNav = HashNavigation.parseUrlHash(window.location.hash);\n      if (token) {\n        this.setState({autoLogin: true});\n\n        // When reading from storage, date is returned as string.\n        token.expires = new Date(token.expires);\n        this.tinode.setAuthToken(token);\n        this.tinode.connect().catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n        delete parsedNav.params.info;\n        delete parsedNav.params.tab;\n        parsedNav.path[0] = '';\n        HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsedNav.path, parsedNav.params));\n      } else if (!parsedNav.params.token) {\n        HashNavigation.navigateTo('');\n      }\n\n      this.readTimer = null;\n      this.readTimerCallback = null;\n\n      this.handleHashRoute();\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n    window.removeEventListener('hashchange', this.handleHashRoute);\n    document.removeEventListener('visibilitychange', this.handleVisibilityEvent);\n  }\n\n  // Setup transport (usually websocket) and server address. This will terminate connection with the server.\n  static tnSetup(serverAddress, transport, locale, persistentCache, onSetupCompleted) {\n    const tinode = new Tinode({appName: APP_NAME, host: serverAddress, apiKey: API_KEY, transport: transport,\n      secure: isSecureConnection(), persist: persistentCache}, onSetupCompleted);\n    tinode.setHumanLanguage(locale);\n    tinode.enableLogging(LOGGING_ENABLED, true);\n    return tinode;\n  }\n\n  handleResize() {\n    const mobile = document.documentElement.clientWidth <= MEDIA_BREAKPOINT;\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n    if (this.state.displayMobile != mobile) {\n      this.setState({displayMobile: mobile});\n    }\n  }\n\n  // Check if a newer version of TinodeWeb app is available at the server.\n  checkForAppUpdate(reg) {\n    reg.onupdatefound = () => {\n      const installingWorker = reg.installing;\n      installingWorker.onstatechange = () => {\n        if (installingWorker.state == 'installed' && navigator.serviceWorker.controller) {\n          const msg = <>\n            <FormattedMessage id=\"update_available\"\n              defaultMessage=\"Update available.\"\n              description=\"Message shown when an app update is available.\" /> <a href=\"\">\n              <FormattedMessage id=\"reload_update\"\n                defaultMessage=\"Reload\"\n                description=\"Call to action to reload application when update is available.\" />\n            </a>.</>;\n          this.handleError(msg, 'info');\n        }\n      }\n    }\n  }\n\n  // Handle for hashchange event: display appropriate panels.\n  handleHashRoute() {\n    const hash = HashNavigation.parseUrlHash(window.location.hash);\n    if (hash.path && hash.path.length > 0) {\n      // Left-side panel selector.\n      if (['register','settings','edit','notif','security','support','general',\n          'cred','reset','newtpk','archive','blocked','contacts',''].includes(hash.path[0])) {\n        this.setState({sidePanelSelected: hash.path[0]});\n      } else {\n        console.log(\"Unknown sidepanel view\", hash.path[0]);\n      }\n\n      // Topic for MessagesView selector.\n      if (hash.path.length > 1 && hash.path[1] != this.state.topicSelected) {\n        this.setState({\n          topicSelected: Tinode.topicType(hash.path[1]) ? hash.path[1] : null\n        });\n      }\n    } else {\n      // Empty hashpath\n      this.setState({sidePanelSelected: ''});\n    }\n\n    // Save validation credentials, if available.\n    if (hash.params.method) {\n      this.setState({ credMethod: hash.params.method });\n    }\n    if (hash.params.code) {\n      this.setState({ credCode: hash.params.code });\n    }\n\n    // Additional parameters of panels.\n    this.setState({\n      showInfoPanel: hash.params.info,\n      newTopicTabSelected: hash.params.tab\n    });\n  }\n\n  handleOnline(online) {\n    if (online) {\n      this.handleError();\n    } else {\n      this.handleError(this.props.intl.formatMessage(messages.no_connection), 'warn');\n    }\n    this.setState({liveConnection: online});\n  }\n\n  handleVisibilityEvent() {\n    this.setState({applicationVisible: !document.hidden});\n  }\n\n  handleError(err, level, action, actionText) {\n    this.setState({errorText: err, errorLevel: level, errorAction: action, errorActionText: actionText});\n  }\n\n  // User clicked Login button in the side panel.\n  handleLoginRequest(login, password) {\n    this.setState({\n      loginDisabled: true,\n      login: login,\n      password: password,\n      loadSpinnerVisible: true,\n      autoLogin: true\n    });\n    this.handleError('', null);\n\n    if (this.tinode.isConnected()) {\n      this.doLogin(login, password, {meth: this.state.credMethod, resp: this.state.credCode});\n    } else {\n      this.tinode.connect().catch((err) => {\n        // Socket error\n        this.setState({loginDisabled: false, autoLogin: false, loadSpinnerVisible: false});\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // Connection succeeded.\n  handleConnected() {\n    const params = this.tinode.getServerInfo();\n    this.setState({\n      serverVersion: params.ver + ' ' + (params.build ? params.build : 'none')\n    });\n\n    if (this.state.autoLogin) {\n      this.doLogin(this.state.login, this.state.password, {meth: this.state.credMethod, resp: this.state.credCode});\n    }\n  }\n\n  // Called for each auto-reconnect iteration.\n  handleAutoreconnectIteration(sec, prom) {\n    clearInterval(this.reconnectCountdown);\n\n    if (sec < 0) {\n      // Clear error\n      this.handleError();\n      return;\n    }\n\n    if (prom) {\n      // Reconnecting now\n      prom.then(() => {\n        // Reconnected: clear error\n        this.handleError();\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n      return;\n    }\n\n    const {formatMessage} = this.props.intl;\n    let count = sec / 1000;\n    count = count | count;\n    this.reconnectCountdown = setInterval(() => {\n      const timeLeft = (count > 99) ? secondsToTime(count) : count;\n      this.handleError(\n        formatMessage(messages.reconnect_countdown, {seconds: timeLeft}),\n        'warn',\n        () => {\n          clearInterval(this.reconnectCountdown);\n          this.tinode.reconnect();\n        },\n        formatMessage(messages.reconnect_now)\n      );\n      count -= 1;\n    }, 1000);\n  }\n\n  // Connection lost\n  handleDisconnect(err) {\n    this.setState({\n      connected: false,\n      ready: false,\n      topicSelectedOnline: false,\n      errorText: err && err.message ? err.message : \"Disconnected\",\n      errorLevel: err && err.message ? 'err' : 'warn',\n      loginDisabled: false,\n      contextMenuVisible: false,\n      serverVersion: \"no connection\"\n    });\n  }\n\n  doLogin(login, password, cred) {\n    if (this.tinode.isAuthenticated()) {\n      // Already logged in. Go to default screen.\n      HashNavigation.navigateTo('');\n      return;\n    }\n    // Sanitize and package credentail.\n    cred = Tinode.credential(cred);\n    // Try to login with login/password. If they are not available, try token. If no token, ask for login/password.\n    let promise = null;\n    const token = this.tinode.getAuthToken();\n    if (login && password) {\n      this.setState({password: null});\n      promise = this.tinode.loginBasic(login, password, cred);\n    } else if (token) {\n      promise = this.tinode.loginToken(token.token, cred);\n    }\n\n    if (promise) {\n      promise.then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text === 'validate credentials') {\n          this.setState({loadSpinnerVisible: false});\n          if (cred) {\n            this.handleError(this.props.intl.formatMessage(messages.code_doesnot_match), 'warn');\n          }\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful();\n        }\n      }).catch((err) => {\n        // Login failed, report error.\n        this.setState({\n          loginDisabled: false,\n          credMethod: undefined,\n          credCode: undefined,\n          loadSpinnerVisible: false,\n          autoLogin: false\n        });\n        this.handleError(err.message, 'err');\n        localStorage.removeItem('auth-token');\n        HashNavigation.navigateTo('');\n      });\n    } else {\n      // No login credentials provided.\n      // Make sure we are on the login page.\n      HashNavigation.navigateTo('');\n      this.setState({loginDisabled: false});\n    }\n  }\n\n  handleCredentialsRequest(params) {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    parsed.path[0] = 'cred';\n    parsed.params['method'] = params.cred[0];\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n  }\n\n  handleLoginSuccessful() {\n    this.handleError();\n\n    // Refresh authentication token.\n    if (LocalStorageUtil.getObject('keep-logged-in')) {\n      LocalStorageUtil.setObject('auth-token', this.tinode.getAuthToken());\n    }\n    // Logged in fine, subscribe to 'me' attaching callbacks from the contacts view.\n    const me = this.tinode.getMeTopic();\n    me.onMetaDesc = this.tnMeMetaDesc;\n    me.onContactUpdate = this.tnMeContactUpdate;\n    me.onSubsUpdated = this.tnMeSubsUpdated;\n    this.setState({\n      connected: true,\n      credMethod: undefined,\n      credCode: undefined,\n      myUserId: this.tinode.getCurrentUserID(),\n      autoLogin: true,\n    });\n    // Subscribe, fetch topic desc, the list of subscriptions. Messages are not fetched.\n    me.subscribe(\n      me.startMetaQuery().\n        withLaterSub().\n        withDesc().\n        withTags().\n        withCred().\n        build()\n      ).catch((err) => {\n        this.tinode.disconnect();\n        localStorage.removeItem('auth-token');\n        this.handleError(err.message, 'err');\n        HashNavigation.navigateTo('');\n      }).finally(() => {\n        this.setState({loadSpinnerVisible: false});\n      });\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, 'contacts'));\n  }\n\n  tnMeMetaDesc(desc) {\n    if (desc) {\n      if (desc.public) {\n        this.setState({\n          sidePanelTitle: desc.public.fn,\n          sidePanelAvatar: makeImageUrl(desc.public.photo)\n        });\n      }\n      if (desc.acs) {\n        this.setState({\n          incognitoMode: !desc.acs.isPresencer()\n        });\n      }\n    }\n  }\n\n  // Reactions to updates to the contact list.\n  tnMeContactUpdate(what, cont) {\n    if (what == 'on' || what == 'off') {\n      this.resetContactList();\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedOnline: (what == 'on')});\n      }\n    } else if (what == 'read') {\n      this.resetContactList();\n    } else if (what == 'msg') {\n      // Check if the topic is archived. If so, don't play a sound.\n      const topic = this.tinode.getTopic(cont.topic);\n      const archived = topic && topic.isArchived();\n\n      // New message received. Maybe the message is from the current user, then unread is 0.\n      if (cont.unread > 0 && this.state.messageSounds && !archived) {\n        // Skip update if the topic is currently open, otherwise the badge will annoyingly flash.\n        if (document.hidden || this.state.topicSelected != cont.topic) {\n          POP_SOUND.play();\n        }\n      }\n      // Reorder contact list to use possibly updated 'touched'.\n      this.resetContactList();\n    } else if (what == 'recv') {\n      // Explicitly ignoring \"recv\" -- it causes no visible updates to contact list.\n    } else if (what == 'gone' || what == 'unsub') {\n      // Topic deleted or user unsubscribed. Remove topic from view.\n      // If the currently selected topic is gone, clear the selection.\n      if (this.state.topicSelected == cont.topic) {\n        this.handleTopicSelected(null);\n      }\n      // Redraw without the deleted topic.\n      this.resetContactList();\n    } else if (what == 'acs') {\n      // Permissions changed. If it's for the currently selected topic,\n      // update the views.\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedAcs: cont.acs});\n      }\n    } else if (what == 'del') {\n      // TODO: messages deleted (hard or soft) -- update pill counter.\n    } else if (what == 'upd') {\n      // upd - handled by the SDK. Explicitly ignoring here.\n    } else {\n      // TODO(gene): handle other types of notifications:\n      // * ua -- user agent changes (maybe display a pictogram for mobile/desktop).\n      console.log(\"Unsupported (yet) presence update:\" + what + \" in: \" + cont.topic);\n    }\n  }\n\n  tnMeSubsUpdated(unused) {\n    this.resetContactList();\n  }\n\n  // Merge search results and contact list to create a single flat\n  // list of known contacts for GroupManager to use.\n  static prepareSearchableContacts(chatList, foundContacts) {\n    const merged = {};\n\n    // For chatList topics merge only p2p topics and convert them to the\n    // same format as foundContacts.\n    for (const c of chatList) {\n      if (Tinode.isP2PTopicName(c.topic)) {\n          merged[c.topic] = {\n            user: c.topic,\n            updated: c.updated,\n            public: c.public,\n            private: c.private,\n            acs: c.acs\n          };\n      }\n    }\n\n    // Add all foundCountacts if they have not been added already.\n    for (const c of foundContacts) {\n      if (!merged[c.user]) {\n        merged[c.user] = c;\n      }\n    }\n\n    return Object.values(merged);\n  }\n\n  resetContactList() {\n    const newState = {\n      chatList: []\n    };\n\n    if (!this.state.ready) {\n      newState.ready = true;\n    }\n\n    this.tinode.getMeTopic().contacts((c) => {\n      newState.chatList.push(c);\n      if (this.state.topicSelected == c.topic) {\n        newState.topicSelectedOnline = c.online;\n        newState.topicSelectedAcs = c.acs;\n      }\n    });\n    // Merge search results and chat list.\n    newState.searchableContacts = TinodeWeb.prepareSearchableContacts(newState.chatList, this.state.searchResults);\n    this.setState(newState);\n  }\n\n  // Sending \"received\" notifications\n  tnData(data) {\n    const topic = this.tinode.getTopic(data.topic);\n    if (topic.msgStatus(data) >= Tinode.MESSAGE_STATUS_SENT && data.from != this.state.myUserId) {\n      clearTimeout(this.receivedTimer);\n      this.receivedTimer = setTimeout(() => {\n        this.receivedTimer = undefined;\n        topic.noteRecv(data.seq);\n      }, RECEIVED_DELAY);\n    }\n  }\n\n  /* Fnd topic: find contacts by tokens */\n  tnInitFind() {\n    const fnd = this.tinode.getFndTopic();\n    fnd.onSubsUpdated = this.tnFndSubsUpdated;\n    if (fnd.isSubscribed()) {\n      this.tnFndSubsUpdated();\n    } else {\n      fnd.subscribe(fnd.startMetaQuery().withSub().build()).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  tnFndSubsUpdated() {\n    const foundContacts = [];\n    // Don't attempt to create P2P topics which already exist. Server will reject the duplicates.\n    this.tinode.getFndTopic().contacts((s) => {\n      foundContacts.push(s);\n    });\n    this.setState({\n      searchResults: foundContacts,\n      searchableContacts: TinodeWeb.prepareSearchableContacts(this.state.chatList, foundContacts)\n    });\n  }\n\n  /** Called when the user enters a contact into the contact search field in the NewAccount panel\n    @param query {Array} is an array of contacts to search for\n   */\n  handleSearchContacts(query) {\n    const fnd = this.tinode.getFndTopic();\n    fnd.setMeta({desc: {public: query}}).then((ctrl) => {\n      return fnd.getMeta(fnd.startMetaQuery().withSub().build());\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  // User clicked on a contact in the side panel or deleted a contact.\n  handleTopicSelected(topicName) {\n    // Clear newTopicParams after use.\n    if (this.state.newTopicParams && this.state.newTopicParams._topicName != topicName) {\n      this.setState({\n        newTopicParams: null\n      });\n    }\n\n    if (topicName) {\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'topic-view',\n        showInfoPanel: false\n      });\n      // Different contact selected.\n      if (this.state.topicSelected != topicName) {\n        this.setState({\n          topicSelectedOnline: this.tinode.isTopicOnline(topicName),\n          topicSelectedAcs: this.tinode.getTopicAccessMode(topicName)\n        });\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', topicName));\n      }\n    } else {\n      // Currently selected contact deleted\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'sidepanel',\n        topicSelectedOnline: false,\n        topicSelectedAcs: null,\n        showInfoPanel: false\n      });\n\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic('', null));\n    }\n  }\n\n  // In mobile view user requested to show sidepanel\n  handleHideMessagesView() {\n    this.setState({\n      mobilePanel: 'sidepanel'\n    });\n    HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, null));\n  }\n\n  // User is sending a message, either plain text or a drafty object, possibly\n  // with attachments.\n  //  - msg - Drafty message with content\n  //  - promise - Promise to be resolved when the upload is completed\n  //  - uploader - for tracking progress\n  handleSendMessage(msg, promise, uploader) {\n    const topic = this.tinode.getTopic(this.state.topicSelected);\n\n    msg = topic.createMessage(msg, false);\n    // The uploader is used to show progress.\n    msg._uploader = uploader;\n\n    if (!topic.isSubscribed()) {\n      if (!promise) {\n        promise = Promise.resolve();\n      }\n      promise = promise.then(() => { return topic.subscribe(); });\n    }\n\n    if (promise) {\n      promise = promise.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n\n    topic.publishDraft(msg, promise)\n      .then((ctrl) => {\n        if (topic.isArchived()) {\n          return topic.archive(false);\n        }\n      })\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleNewChatInvitation(topicName, action) {\n    const topic = this.tinode.getTopic(topicName);\n    let response = null;\n    switch (action) {\n      case 'accept':\n        // Accept given permissions.\n        const mode = topic.getAccessMode().getGiven();\n        response = topic.setMeta({sub: {mode: mode}});\n        if (topic.isP2PType()) {\n          // For P2P topics change 'given' permission of the peer too.\n          // In p2p topics the other user has the same name as the topic.\n          response = response.then((ctrl) => {\n            topic.setMeta({sub: {user: topicName, mode: mode}});\n          });\n        }\n        break;\n      case 'delete':\n        // Ignore invitation by deleting it.\n        response = topic.delTopic(true);\n        break;\n      case 'block':\n        // Ban the topic making futher invites impossible.\n        // Just self-ban.\n        const am = topic.getAccessMode().updateWant('-JP').getWant();\n        response = topic.setMeta({sub: {mode: am}}).then((ctrl) => {\n          return this.handleTopicSelected(null);\n        });\n        break;\n      default:\n        console.log(\"Unknown invitation action\", '\"' + action + '\"\"');\n    }\n\n    if (response != null) {\n      response.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // User chose a Sign Up menu item.\n  handleNewAccount() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, 'register'));\n  }\n\n  // Actual registration of a new account.\n  handleNewAccountRequest(login_, password_, public_, cred_, tags_) {\n    // Clear old error, if any.\n    this.handleError();\n\n    this.tinode.connect(this.state.serverAddress)\n      .then(() => {\n        return this.tinode.createAccountBasic(login_, password_,\n          {public: public_, tags: tags_, cred: Tinode.credential(cred_)});\n      }).then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text == 'validate credentials') {\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful(this);\n        }\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleUpdateAccountRequest(password, pub, defacs) {\n    this.handleError();\n\n    if (pub || defacs) {\n      const params = {};\n      if (pub) {\n        params.public = pub;\n      }\n      if (defacs) {\n        params.defacs = defacs;\n      }\n      this.tinode.getMeTopic().setMeta({desc: params}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n    if (password) {\n      this.tinode.updateAccountBasic(null, this.tinode.getCurrentLogin(), password).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleToggleIncognitoMode(on) {\n    const me = this.tinode.getMeTopic();\n    const am = me.getAccessMode().updateWant(on ? '-P' : '+P').getWant();\n    me.setMeta({sub: {mode: am}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleUpdateAccountTagsRequest(tags) {\n    this.tinode.getMeTopic().setMeta({tags: tags})\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  // User chose Settings menu item.\n  handleSettings() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'edit' : 'settings'));\n  }\n\n  // User updated global parameters.\n  handleGlobalSettings(settings) {\n    const serverAddress = settings.serverAddress || this.state.serverAddress;\n    const transport = settings.transport || this.state.transport;\n    if (this.tinode) {\n      this.tinode.clearStorage();\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.tinode = TinodeWeb.tnSetup(serverAddress, transport, this.props.intl.locale,\n      LocalStorageUtil.getObject('keep-logged-in'));\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n\n    this.setState({\n      serverAddress: serverAddress,\n      transport: transport\n    });\n    LocalStorageUtil.setObject('settings', {\n      serverAddress: serverAddress,\n      transport: transport\n    });\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, ''));\n  }\n\n  // User chose 'Archived chats'.\n  handleShowArchive() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'archive' : ''));\n  }\n\n  // User viewes 'Blocked chats'.\n  handleShowBlocked() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'blocked' : ''));\n  }\n\n  // Initialize desktop alerts = push notifications.\n  initDesktopAlerts() {\n    // Google could not be bothered to mention that\n    // onTokenRefresh is never called.\n    this.fbPush.onTokenRefresh(() => {\n      this.requestPushToken();\n    });\n\n    this.fbPush.onMessage((payload) => {\n      // No need to do anything about it.\n      // All the magic happends in the service worker.\n    });\n  }\n\n  togglePushToken(enabled) {\n    if (enabled) {\n      if (!this.state.firebaseToken) {\n        this.fbPush.requestPermission().then(() => {\n          this.requestPushToken();\n        }).catch((err) => {\n          this.handleError(err.message, 'err');\n          this.setState({desktopAlerts: false, firebaseToken: null});\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n          console.log(\"Failed to get permission to notify.\", err);\n        });\n      } else {\n        this.setState({desktopAlerts: true});\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n      }\n    } else if (this.state.firebaseToken) {\n      this.fbPush.deleteToken(this.state.firebaseToken).catch((err) => {\n        console.log(\"Unable to delete token.\", err);\n      }).finally(() => {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        localStorage.removeItem('firebase-token');\n        this.setState({desktopAlerts: false, firebaseToken: null});\n      });\n    } else {\n      this.setState({desktopAlerts: false, firebaseToken: null});\n      LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n    }\n  }\n\n  requestPushToken() {\n    this.fbPush.getToken().then((refreshedToken) => {\n      if (refreshedToken != this.state.firebaseToken) {\n        this.tinode.setDeviceToken(refreshedToken, true);\n        LocalStorageUtil.setObject('firebase-token', refreshedToken);\n      }\n      this.setState({firebaseToken: refreshedToken, desktopAlerts: true});\n      LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n      console.log(\"Failed to retrieve firebase token\", err);\n    });\n  }\n\n  handleToggleMessageSounds(enabled) {\n    this.setState({messageSounds: enabled});\n    LocalStorageUtil.updateObject('settings', {\n      messageSoundsOff: !enabled\n    });\n  }\n\n  handleCredAdd(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.setMeta({cred: {meth: method, val: value}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredDelete(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.delCredential(method, value).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredConfirm(method, response) {\n    this.handleCredentialsRequest({cred: [method]});\n  }\n\n  // User clicked Cancel button in Setting or Sign Up panel.\n  handleSidepanelCancel() {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    let path = '';\n    if (['security','support','general','notif'].includes(parsed.path[0])) {\n      path = 'edit';\n    } else if ('blocked' == parsed.path[0]) {\n      path = 'security';\n    } else if (this.state.myUserId) {\n      path = 'contacts';\n    }\n    parsed.path[0] = path;\n    if (parsed.params) {\n      delete parsed.params.code;\n      delete parsed.params.method;\n      delete parsed.params.tab;\n    }\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n    this.setState({errorText: '', errorLevel: null});\n  }\n\n  // Basic nagigator by hash value. No need to bind to this.\n  basicNavigator(hash) {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, hash));\n  }\n\n  // Request to start a topic, new or selected from search results, or \"by ID\".\n  handleStartTopicRequest(topicName, pub, priv, tags, isChannel) {\n    // Check if topic is indeed new. If not, launch it.\n    if (topicName && this.tinode.isTopicCached(topicName)) {\n      this.handleTopicSelected(topicName);\n      return;\n    }\n\n    const params = {};\n    if (Tinode.isP2PTopicName(topicName)) {\n      // Because we are initialing the subscription, set 'want' to all permissions.\n      params.sub = {mode: DEFAULT_P2P_ACCESS_MODE};\n      // Give the other user all permissions too.\n      params.desc = {defacs: {auth: DEFAULT_P2P_ACCESS_MODE}};\n    } else {\n      topicName = topicName || this.tinode.newGroupTopicName(isChannel);\n      params.desc = {public: pub, private: {comment: priv}};\n      params.tags = tags;\n    }\n    params._topicName = topicName;\n    this.setState({newTopicParams: params}, () => {this.handleTopicSelected(topicName)});\n  }\n\n  // New topic was creted, here is the new topic name.\n  handleNewTopicCreated(oldName, newName) {\n    if (this.state.topicSelected == oldName && oldName != newName) {\n      // If the current URl contains the old topic name, replace it with new.\n      // Update the name of the selected topic first so the navigator doen't clear\n      // the state.\n      this.setState({topicSelected: newName}, () => {\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', newName));\n      });\n    }\n  }\n\n  handleTopicUpdateRequest(topicName, pub, priv, permissions) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const params = {};\n      if (pub) {\n        params.public = pub;\n      }\n      if (priv) {\n        params.private = (priv === Tinode.DEL_CHAR) ?\n          Tinode.DEL_CHAR : {comment: priv};\n      }\n      if (permissions) {\n        params.defacs = permissions;\n      }\n      topic.setMeta({desc: params}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleChangePermissions(topicName, mode, uid) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const am = topic.getAccessMode();\n      if (uid) {\n        am.updateGiven(mode);\n        mode = am.getGiven();\n      } else {\n        am.updateWant(mode);\n        mode = am.getWant();\n      }\n      topic.setMeta({sub: {user: uid, mode: mode}}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleTagsUpdated(topicName, tags) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      topic.setMeta({tags: tags}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleLogout() {\n    updateFavicon(0);\n\n    // Remove stored data.\n    localStorage.removeItem('auth-token');\n    localStorage.removeItem('firebase-token');\n    localStorage.removeItem('settings');\n    if (this.state.firebaseToken) {\n      this.fbPush.deleteToken(this.state.firebaseToken)\n    }\n\n    if (this.tinode) {\n      this.tinode.clearStorage();\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.setState(this.getBlankState());\n\n    this.tinode = TinodeWeb.tnSetup(this.state.serverAddress,\n      this.state.transport, this.props.intl.locale, LocalStorageUtil.getObject('keep-logged-in'));\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    HashNavigation.navigateTo('');\n  }\n\n  handleDeleteAccount() {\n    this.tinode.delCurrentUser(true).then((ctrl) => {\n      this.handleLogout();\n    });\n  }\n\n  handleDeleteMessagesRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Request hard-delete all messages.\n    topic.delMessagesAll(true).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleLeaveUnsubRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.leave(true).then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleBlockTopicRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleReportTopic(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Publish spam report.\n    this.tinode.publish(Tinode.TOPIC_SYS, Tinode.Drafty.attachJSON(null, {\n      'action': 'report',\n      'target': topicName\n    }));\n\n    // Remove J and P permissions.\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleShowContextMenu(params, menuItems) {\n    this.setState({\n      contextMenuVisible: true,\n      contextMenuClickAt: {x: params.x, y: params.y},\n      contextMenuParams: params,\n      contextMenuItems: menuItems || this.defaultTopicContextMenu(params.topicName),\n      contextMenuBounds: ReactDOM.findDOMNode(this).getBoundingClientRect()\n    });\n  }\n\n  defaultTopicContextMenu(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n\n    let muted = false, blocked = false, self_blocked = false, subscribed = false, deleter = false, archived = false;\n    if (topic) {\n      subscribed = topic.isSubscribed();\n      archived = topic.isArchived();\n\n      const acs = topic.getAccessMode();\n      if (acs) {\n        muted = acs.isMuted();\n        blocked = !acs.isJoiner();\n        self_blocked = !acs.isJoiner('want');\n        deleter = acs.isDeleter();\n      }\n    }\n\n    return [\n      subscribed ? {\n        title: this.props.intl.formatMessage({id: 'menu_item_info'}),\n        handler: this.handleShowInfoView\n      } : null,\n      subscribed ? 'messages_clear' : null,\n      subscribed && deleter ? 'messages_clear_hard' : null,\n      muted ? (blocked ? null : 'topic_unmute') : 'topic_mute',\n      self_blocked ? 'topic_unblock' : 'topic_block',\n      !archived ? 'topic_archive' : null,\n      'topic_delete'\n    ];\n  }\n\n  handleHideContextMenu() {\n    this.setState({\n      contextMenuVisible: false,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuBounds: null\n    });\n  }\n\n  handleContextMenuAction(action, promise, params) {\n    if (action == 'topic_archive') {\n      if (promise && params.topicName && params.topicName == this.state.topicSelected) {\n        promise.then(() => {\n          this.handleTopicSelected(null);\n        });\n      }\n    }\n  }\n\n  handleShowAlert(title, content, onConfirm, confirmText, onReject, rejectText) {\n    this.setState({\n      alertVisible: true,\n      alertParams: {\n        title: title,\n        content: content,\n        onConfirm: onConfirm,\n        confirm: confirmText,\n        onReject: onReject,\n        reject: rejectText\n      }\n    });\n  }\n\n  handleShowInfoView() {\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'info', true));\n    this.setState({showInfoPanel: true});\n  }\n\n  handleHideInfoView() {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'info'));\n    this.setState({showInfoPanel: false});\n  }\n\n  handleMemberUpdateRequest(topicName, added, removed) {\n    if (!topicName) {\n      return;\n    }\n\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    if (added && added.length > 0) {\n      added.map((uid) => {\n        topic.invite(uid, null).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n\n    if (removed && removed.length > 0) {\n      removed.map((uid) => {\n        topic.delSubscription(uid).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n  }\n\n  handleValidateCredentialsRequest(cred, code) {\n    if (this.tinode.isAuthenticated()) {\n      const me = this.tinode.getMeTopic();\n      me.setMeta({cred: {meth: cred, resp: code}})\n        .then(() => {\n          HashNavigation.navigateTo('');\n        })\n        .catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n    } else {\n      this.setState({credMethod: cred, credCode: code});\n      this.doLogin(null, null, {meth: cred, resp: code});\n    }\n  }\n\n  handlePasswordResetRequest(method, value) {\n    // If already connected, connnect() will return a resolved promise.\n    this.tinode.connect()\n      .then(() => {\n        return this.tinode.requestResetAuthSecret('basic', method, value);\n      })\n      .catch((err) => {\n        // Socket error\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleResetPassword(scheme, newPassword, token) {\n    token = base64ReEncode(token);\n    if (!token) {\n      this.handleError(this.props.intl.formatMessage(messages.invalid_security_token), 'err');\n    } else {\n      this.tinode.connect()\n        .then(() => {\n          return this.tinode.updateAccountBasic(null, null, newPassword, {token: token});\n        })\n        .catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"app-container\">\n        {this.state.contextMenuVisible ?\n          <ContextMenu\n            tinode={this.tinode}\n            bounds={this.state.contextMenuBounds}\n            clickAt={this.state.contextMenuClickAt}\n            params={this.state.contextMenuParams}\n            items={this.state.contextMenuItems}\n            hide={this.handleHideContextMenu}\n            onShowAlert={this.handleShowAlert}\n            onAction={this.handleContextMenuAction}\n            onTopicRemoved={(topicName) => {\n              if (topicName == this.state.topicSelected) {\n                this.handleTopicSelected(null);\n              }\n            }}\n            onError={this.handleError} />\n          :\n          null\n        }\n        <Alert\n          visible={this.state.alertVisible}\n          title={this.state.alertParams.title}\n          content={this.state.alertParams.content}\n          onReject={this.state.alertParams.onReject ? (() => { this.setState({alertVisible: false}); }) : null}\n          reject={this.state.alertParams.reject}\n          onConfirm={() => { this.setState({alertVisible: false}); this.state.alertParams.onConfirm(); }}\n          confirm={this.state.alertParams.confirm}\n          />\n        <SidepanelView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          displayMobile={this.state.displayMobile}\n          hideSelf={this.state.displayMobile && this.state.mobilePanel !== 'sidepanel'}\n          state={this.state.sidePanelSelected}\n          title={this.state.sidePanelTitle}\n          avatar={this.state.sidePanelAvatar}\n          login={this.state.login}\n          myUserId={this.state.myUserId}\n          loginDisabled={this.state.loginDisabled}\n          loadSpinnerVisible={this.state.loadSpinnerVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          topicSelected={this.state.topicSelected}\n          chatList={this.state.chatList}\n          credMethod={this.state.credMethod}\n          credCode={this.state.credCode}\n\n          transport={this.state.transport}\n          messageSounds={this.state.messageSounds}\n          desktopAlerts={this.state.desktopAlerts}\n          desktopAlertsEnabled={this.state.desktopAlertsEnabled}\n          incognitoMode={this.state.incognitoMode}\n          serverAddress={this.state.serverAddress}\n          serverVersion={this.state.serverVersion}\n\n          onGlobalSettings={this.handleGlobalSettings}\n          onSignUp={this.handleNewAccount}\n          onSettings={this.handleSettings}\n          onBasicNavigate={this.basicNavigator}\n          onLoginRequest={this.handleLoginRequest}\n          onCreateAccount={this.handleNewAccountRequest}\n          onUpdateAccount={this.handleUpdateAccountRequest}\n          onUpdateAccountTags={this.handleUpdateAccountTagsRequest}\n          onTogglePushNotifications={this.togglePushToken}\n          onToggleMessageSounds={this.handleToggleMessageSounds}\n          onToggleIncognitoMode={this.handleToggleIncognitoMode}\n          onCredAdd={this.handleCredAdd}\n          onCredDelete={this.handleCredDelete}\n          onCredConfirm={this.handleCredConfirm}\n          onTopicSelected={this.handleTopicSelected}\n          onCreateTopic={this.handleStartTopicRequest}\n          onLogout={this.handleLogout}\n          onDeleteAccount={this.handleDeleteAccount}\n          onShowAlert={this.handleShowAlert}\n          onCancel={this.handleSidepanelCancel}\n          onError={this.handleError}\n          onValidateCredentials={this.handleValidateCredentialsRequest}\n          onPasswordResetRequest={this.handlePasswordResetRequest}\n          onResetPassword={this.handleResetPassword}\n          onShowArchive={this.handleShowArchive}\n          onShowBlocked={this.handleShowBlocked}\n\n          onInitFind={this.tnInitFind}\n          searchResults={this.state.searchResults}\n          onSearchContacts={this.handleSearchContacts}\n\n          showContextMenu={this.handleShowContextMenu} />\n\n        <MessagesView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          ready={this.state.ready}\n          online={this.state.topicSelectedOnline}\n          acs={this.state.topicSelectedAcs}\n          displayMobile={this.state.displayMobile}\n          viewportWidth={this.state.viewportWidth}\n          viewportHeight={this.state.viewportHeight}\n          hideSelf={this.state.displayMobile &&\n            (this.state.mobilePanel !== 'topic-view' || this.state.showInfoPanel)}\n          topic={this.state.topicSelected}\n          myUserId={this.state.myUserId}\n          serverVersion={this.state.serverVersion}\n          serverAddress={this.state.serverAddress}\n          applicationVisible={this.state.applicationVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          newTopicParams={this.state.newTopicParams}\n\n          onHideMessagesView={this.handleHideMessagesView}\n          onData={this.tnData}\n          onError={this.handleError}\n          onNewTopicCreated={this.handleNewTopicCreated}\n          showContextMenu={this.handleShowContextMenu}\n          onChangePermissions={this.handleChangePermissions}\n          onNewChat={this.handleNewChatInvitation}\n          sendMessage={this.handleSendMessage} />\n\n        {this.state.showInfoPanel ?\n          <InfoView\n            tinode={this.tinode}\n            connected={this.state.connected}\n            displayMobile={this.state.displayMobile}\n            topic={this.state.topicSelected}\n            searchableContacts={this.state.searchableContacts}\n            myUserId={this.state.myUserId}\n\n            errorText={this.state.errorText}\n            errorLevel={this.state.errorLevel}\n            errorAction={this.state.errorAction}\n            errorActionText={this.state.errorActionText}\n\n            onTopicDescUpdate={this.handleTopicUpdateRequest}\n            onCancel={this.handleHideInfoView}\n            onShowAlert={this.handleShowAlert}\n            onChangePermissions={this.handleChangePermissions}\n            onMemberUpdateRequest={this.handleMemberUpdateRequest}\n            onDeleteMessages={this.handleDeleteMessagesRequest}\n            onLeaveTopic={this.handleLeaveUnsubRequest}\n            onBlockTopic={this.handleBlockTopicRequest}\n            onReportTopic={this.handleReportTopic}\n            onAddMember={this.handleManageGroupMembers}\n            onTopicTagsUpdate={this.handleTagsUpdated}\n            onInitFind={this.tnInitFind}\n            onError={this.handleError}\n\n            showContextMenu={this.handleShowContextMenu}\n            />\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(TinodeWeb);\n","// Put all packages together.\n// Used to generate umd/index.prod.js\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { IntlProvider } from 'react-intl';\n\nimport allMessages from './messages.json';\nimport TinodeWeb from './views/tinode-web.jsx';\nimport HashNavigation from './lib/navigation.js';\n\n// Detect human language to use in the UI:\n//  Check parameters from URL hash #?hl=ru, then browser, then use 'en' as a fallback.\nconst { params } = HashNavigation.parseUrlHash(window.location.hash);\nconst language = (params && params.hl) ||\n  (navigator.languages && navigator.languages[0]) ||\n  navigator.language ||\n  navigator.userLanguage ||\n  'en';\n\n// Get the base language 'en' from a more specific 'en_GB' or 'en-US' as a partial fallback.\nconst baseLanguage = language.toLowerCase().split(/[-_]/)[0];\n\n// Try the full locale first, then the locale without the region code, fallback to 'en'.\nconst messages =\n  allMessages[language] ||\n  allMessages[baseLanguage] ||\n  allMessages.en;\n\nReactDOM.render(\n  <IntlProvider locale={language} messages={messages} textComponent={React.Fragment}>\n    <TinodeWeb />\n  </IntlProvider>,\n  document.getElementById('mountPoint')\n);\n"],"sourceRoot":""}