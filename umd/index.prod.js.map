{"version":3,"file":"index.prod.js","mappings":"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","sources":["webpack://tinode-webapp/external \"React\"","webpack://tinode-webapp/external \"ReactDOM\"","webpack://tinode-webapp/external \"ReactIntl\"","webpack://tinode-webapp/external \"firebase\"","webpack://tinode-webapp/external \"Tinode\"","webpack://tinode-webapp/external [\"firebase\",\"messaging\"]","webpack://tinode-webapp/./src/widgets/alert.jsx","webpack://tinode-webapp/./src/version.js","webpack://tinode-webapp/./src/config.js","webpack://tinode-webapp/./src/widgets/context-menu.jsx","webpack://tinode-webapp/./src/lib/strformat.js","webpack://tinode-webapp/./src/lib/utils.js","webpack://tinode-webapp/./src/widgets/letter-tile.jsx","webpack://tinode-webapp/./src/widgets/load-spinner.jsx","webpack://tinode-webapp/./src/widgets/avatar-upload.jsx","webpack://tinode-webapp/./src/widgets/badge-list.jsx","webpack://tinode-webapp/./src/widgets/checkbox.jsx","webpack://tinode-webapp/./src/widgets/contact-badges.jsx","webpack://tinode-webapp/./src/widgets/received-marker.jsx","webpack://tinode-webapp/./src/widgets/unread-badge.jsx","webpack://tinode-webapp/./src/widgets/lazy-image.jsx","webpack://tinode-webapp/./src/widgets/file-progress.jsx","webpack://tinode-webapp/./src/widgets/uploading-image.jsx","webpack://tinode-webapp/./src/lib/blob-helpers.js","webpack://tinode-webapp/./src/lib/formatters.js","webpack://tinode-webapp/./src/widgets/contact.jsx","webpack://tinode-webapp/./src/widgets/contact-action.jsx","webpack://tinode-webapp/./src/widgets/contact-list.jsx","webpack://tinode-webapp/./src/widgets/menu-cancel.jsx","webpack://tinode-webapp/./src/widgets/error-panel.jsx","webpack://tinode-webapp/./src/widgets/chip.jsx","webpack://tinode-webapp/./src/widgets/chip-input.jsx","webpack://tinode-webapp/./src/widgets/group-manager.jsx","webpack://tinode-webapp/./src/widgets/permissions-editor.jsx","webpack://tinode-webapp/./src/widgets/cropper.jsx","webpack://tinode-webapp/./src/widgets/avatar-crop.jsx","webpack://tinode-webapp/./src/widgets/visible-password.jsx","webpack://tinode-webapp/./src/widgets/in-place-edit.jsx","webpack://tinode-webapp/./src/widgets/tag-manager.jsx","webpack://tinode-webapp/./src/widgets/topic-desc-edit.jsx","webpack://tinode-webapp/./src/widgets/topic-common.jsx","webpack://tinode-webapp/./src/widgets/topic-security.jsx","webpack://tinode-webapp/./src/views/info-view.jsx","webpack://tinode-webapp/./src/widgets/attachment.jsx","webpack://tinode-webapp/./src/widgets/chat-message.jsx","webpack://tinode-webapp/./src/widgets/send-message.jsx","webpack://tinode-webapp/./src/widgets/doc-preview.jsx","webpack://tinode-webapp/./src/widgets/group-subs.jsx","webpack://tinode-webapp/./src/widgets/image-preview.jsx","webpack://tinode-webapp/./src/widgets/invitation.jsx","webpack://tinode-webapp/./src/views/logo-view.jsx","webpack://tinode-webapp/./src/lib/navigation.js","webpack://tinode-webapp/./src/views/messages-view.jsx","webpack://tinode-webapp/./src/widgets/button-back.jsx","webpack://tinode-webapp/./src/widgets/menu-contacts.jsx","webpack://tinode-webapp/./src/widgets/menu-start.jsx","webpack://tinode-webapp/./src/widgets/side-navbar.jsx","webpack://tinode-webapp/./src/views/account-settings-view.jsx","webpack://tinode-webapp/./src/views/contacts-view.jsx","webpack://tinode-webapp/./src/lib/local-storage.js","webpack://tinode-webapp/./src/views/create-account-view.jsx","webpack://tinode-webapp/./src/views/acc-notifications-view.jsx","webpack://tinode-webapp/./src/views/acc-security-view.jsx","webpack://tinode-webapp/./src/views/acc-support-view.jsx","webpack://tinode-webapp/./src/views/login-view.jsx","webpack://tinode-webapp/./src/widgets/new-topic-by-id.jsx","webpack://tinode-webapp/./src/widgets/new-topic-group.jsx","webpack://tinode-webapp/./src/widgets/search-contacts.jsx","webpack://tinode-webapp/./src/views/new-topic-view.jsx","webpack://tinode-webapp/./src/views/password-reset-view.jsx","webpack://tinode-webapp/./src/widgets/host-selector.jsx","webpack://tinode-webapp/./src/views/settings-view.jsx","webpack://tinode-webapp/./src/views/validation-view.jsx","webpack://tinode-webapp/./src/views/sidepanel-view.jsx","webpack://tinode-webapp/./src/lib/host-name.js","webpack://tinode-webapp/./src/views/tinode-web.jsx","webpack://tinode-webapp/./src/index.js","webpack://tinode-webapp/webpack/bootstrap","webpack://tinode-webapp/webpack/runtime/compat get default export","webpack://tinode-webapp/webpack/runtime/define property getters","webpack://tinode-webapp/webpack/runtime/hasOwnProperty shorthand","webpack://tinode-webapp/webpack/startup"],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = React;","const __WEBPACK_NAMESPACE_OBJECT__ = ReactDOM;","const __WEBPACK_NAMESPACE_OBJECT__ = ReactIntl;","const __WEBPACK_NAMESPACE_OBJECT__ = firebase;","const __WEBPACK_NAMESPACE_OBJECT__ = Tinode;","const __WEBPACK_NAMESPACE_OBJECT__ = firebase.messaging;","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Alert extends React.PureComponent {\n  render() {\n    return this.props.visible ?\n      <div className=\"alert-container\">\n        <div className=\"alert\">\n          <div className=\"title\">{this.props.title}</div>\n          <div className=\"content\">{this.props.content}</div>\n          <div className=\"dialog-buttons\">\n            {this.props.onReject ?\n              <button className=\"outline\" onClick={this.props.onReject}>\n                {this.props.reject || <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />}\n              </button>\n              :\n              null\n            }\n            <button className=\"primary\" onClick={this.props.onConfirm}>\n              {this.props.confirm || <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\"  />}\n            </button>\n          </div>\n        </div>\n      </div>\n    :\n    null;\n  }\n};\n","// This is a generated file. Don't edit.\n\nexport const PACKAGE_VERSION = \"0.18.0-alpha1\";\n","import { PACKAGE_VERSION } from './version.js';\n\n// Name of this application, used in the User-Agent.\nexport const APP_NAME = 'TinodeWeb/' + (PACKAGE_VERSION || '0.17');\n\n// API key. Use https://github.com/tinode/chat/tree/master/keygen to generate your own\nexport const API_KEY = 'AQEAAAABAAD_rAp4DJh05a1HAwFT3A6K';\n\n// The array of possible hosts to connect to.\nexport const KNOWN_HOSTS = {hosted: 'web.tinode.co', local: 'localhost:6060'};\n\n// Default host name and port to connect to.\nexport const DEFAULT_HOST = KNOWN_HOSTS.hosted;\n\n// Enable console logging.\nexport const LOGGING_ENABLED = true;\n\n// Minimum time between two keypress notifications, milliseconds.\nexport const KEYPRESS_DELAY = 3*1000;\n// Delay before sending a {note} for reciving a message, milliseconds.\nexport const RECEIVED_DELAY = 500;\n// Delay before sending a read notification, milliseconds.\nexport const READ_DELAY = 1000;\n\n// The default shortest allowed tag length. Matches the value on the server.\nexport const MIN_TAG_LENGTH = 2;\n// The default greatest allowed tag length. Matches the value on the server.\nexport const MAX_TAG_LENGTH = 96;\n// The default maximum number of tags allowed. Matches the value on the server.\nexport const MAX_TAG_COUNT = 16;\n\n// Access mode for P2P subscriptions initiated by the current user.\nexport const DEFAULT_P2P_ACCESS_MODE = 'JRWPS';\n// Access mode for new group topics created by the current user.\nexport const NEW_GRP_ACCESS_MODE = 'JRWPSAO';\n// Access mode for a channel.\nexport const CHANNEL_ACCESS_MODE = 'JR';\n\n// Access mode for no access.\nexport const NO_ACCESS_MODE = 'N';\n\n// Mediaquery breakpoint between desktop and mobile, in px. Should match the value\n// in @media (max-size: 640px) in base.css\nexport const MEDIA_BREAKPOINT = 640;\n// Size of css 'rem' unit in pixels. Default 1rem = 10pt = 13px.\nexport const REM_SIZE = 13;\n\n// Size of the avatar image: when image dimensions are greater or the image is not square, it's resized to\n// a square of this size or less.\nexport const AVATAR_SIZE = 384;\n\n// Maximum size of an avatar in bytes for sending in-band. Bigger avatars will be sent out of band (as uploads).\nexport const MAX_AVATAR_BYTES = 4096;\n\n// Size of the broken_image shown in MessagesView\nexport const BROKEN_IMAGE_SIZE = 32;\n\n// Number of chat messages to fetch in one call.\nexport const MESSAGES_PAGE = 24;\n\n// Default maximum in-band (included directly into the message) attachment size which fits into\n// a message of 256K in size. Used when the server-provided value is unavailable. The actual\n// binary size of the attachment should be smaller due to base64 encoding expansion and some overhead,\n// for instance 1024 bytes.\n// Increase this limit to a greater value in production, if desired. Also increase\n// max_message_size in the server config.\nexport const MAX_INBAND_ATTACHMENT_SIZE = 262144;\n\n// Default absolute maximum attachment size to be used with the server = 8MB.\n// Used when the server-provided value is unavailable. Increase to something like 100MB in production.\nexport const MAX_EXTERN_ATTACHMENT_SIZE = 1 << 23;\n\n// Maximum allowed linear dimension (pixels) of an image sent inline. Larger images will be shrunk\n// to make the larger dimension fit under this size. You may want to adjust it to 1600 or\n// 2400 for production.\nexport const MAX_IMAGE_DIM = 1024;\n\n// Linear dimensions of image preview: shrink image under this size for previews.\nexport const IMAGE_PREVIEW_DIM = 64;\n\n// Linear dimensions of image thumbnail: shrink image under this size for thumbnails in reply quote previews.\nexport const IMAGE_THUMBNAIL_DIM = 36;\n\n// Maximum number of online users to be shown in a topic title bar. Others will be\n// hidden under \"+X more\"\nexport const MAX_ONLINE_IN_TOPIC = 4;\n\n// Maximum length of user name, topic title, and private comment.\nexport const MAX_TITLE_LENGTH = 60;\n// Maximum length of topic description.\nexport const MAX_TOPIC_DESCRIPTION_LENGTH = 360;\n\n// Length of message previews in chat list, in characters.\nexport const MESSAGE_PREVIEW_LENGTH = 80;\n\n// Length of a quote in quoted reply (for outgoing messages).\nexport const QUOTED_REPLY_LENGTH = 30;\n\n// Link for \"Contact Us\".\nexport const LINK_CONTACT_US = 'email:support@tinode.co';\n\n// Link to Privacy Policy.\nexport const LINK_PRIVACY_POLICY = 'https://tinode.co/privacy.html';\n\n// Link to Terms of Service.\nexport const LINK_TERMS_OF_SERVICE = 'https://tinode.co/terms.html';\n","// Context Menu: popup/dropdown menu.\nimport React from 'react';\nimport { injectIntl, defineMessages } from 'react-intl';\n\nimport { REM_SIZE } from '../config.js';\n\nconst messages = defineMessages({\n  info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  },\n  clear_messages: {\n    id: 'menu_item_clear_messages',\n    defaultMessage: 'Clear messages',\n    description: 'Delete all messages'\n  },\n  clear_for_all: {\n    id: 'menu_item_clear_messages_for_all',\n    defaultMessage: 'Clear for All',\n    description: 'Delete all message(s) for all members'\n  },\n  delete: {\n    id: 'menu_item_delete',\n    defaultMessage: 'Delete',\n    description: 'Delete selected messages'\n  },\n  delete_for_all: {\n    id: 'menu_item_delete_for_all',\n    defaultMessage: 'Delete for All',\n    description: 'Delete selected message(s) for all members'\n  },\n  send_retry: {\n    id: 'menu_item_send_retry',\n    defaultMessage: 'Retry',\n    description: 'Retry sending message'\n  },\n  mute: {\n    id: 'menu_item_mute',\n    defaultMessage: 'Mute',\n    description: 'Turn off notifications'\n  },\n  unmute: {\n    id: 'menu_item_unmute',\n    defaultMessage: 'Unmute',\n    description: 'Turn notifications on'\n  },\n  reply: {\n    id: 'menu_item_reply',\n    defaultMessage: 'Reply',\n    description: 'Reply to message'\n  },\n  topic_delete: {\n    id: 'menu_item_delete_topic',\n    defaultMessage: 'Delete',\n    description: 'Delete entire topic'\n  },\n  topic_delete_warning: {\n    id: 'topic_delete_warning',\n    defaultMessage: 'Are you sure you want to delete this conversation? It cannot be undone.',\n    description: 'Alert warning when deleting entire topic'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  unblock: {\n    id: 'menu_item_unblock',\n    defaultMessage: 'Unblock',\n    description: 'Unblock topic or user'\n  },\n  // Generic string suitable for either topic or user.\n  block: {\n    id: 'menu_item_block',\n    defaultMessage: 'Block',\n    description: 'Block topic or user'\n  },\n  topic_block_warning: {\n    id: 'topic_block_warning',\n    defaultMessage: 'Are you sure you want to block this conversation?',\n    description: 'Alert warning when blocking a topic.'\n  },\n  member_delete: {\n    id: 'menu_item_member_delete',\n    defaultMessage: 'Remove',\n    description: 'Remove user from topic'\n  },\n  archive: {\n    id: 'menu_item_archive_topic',\n    defaultMessage: 'Archive',\n    description: 'Move topic from the list of active chats to archive'\n  },\n  unarchive: {\n    id: 'menu_item_restore_topic',\n    defaultMessage: 'Restore',\n    description: 'Restore topic from archive'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n});\n\nclass ContextMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selfRef = React.createRef();\n\n    const {formatMessage} = props.intl;\n\n    this.handlePageClick = this.handlePageClick.bind(this);\n    this.handleEscapeKey = this.handleEscapeKey.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n\n    // Preconfigured menu items.\n    this.MenuItems = {\n      'topic_info': {\n        id: 'topic_info',\n        title: formatMessage(messages.info),\n        handler: null\n      },\n      'messages_clear': {\n        id: 'messages_clear',\n        title: formatMessage(messages.clear_messages),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.clear_messages), // title\n            formatMessage(messages.clear_messages_warning), // content\n            (() => { this.deleteMessages(true, false, params, errorHandler); }), // onConfirm\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'messages_clear_hard': {\n        id: 'messages_clear_hard',\n        title: formatMessage(messages.clear_for_all),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.clear_for_all), // title\n            formatMessage(message.delete_messages_warning), // content\n            (() => { return this.deleteMessages(true, true, params, errorHandler); }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'message_delete': {\n        id: 'message_delete',\n        title: formatMessage(messages.delete),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, false, params, errorHandler);\n        }\n      },\n      'message_delete_hard': {\n        id: 'message_delete_hard',\n        title: formatMessage(messages.delete_for_all),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, true, params, errorHandler);\n        }\n      },\n      'menu_item_send_retry': {\n        id: 'menu_item_send_retry',\n        title: formatMessage(messages.send_retry),\n        handler: (params, errorHandler) => {\n          return this.retryMessage(params, errorHandler);\n        }\n      },\n      'menu_item_reply': {\n        id: 'menu_item_reply',\n        title: formatMessage(messages.reply),\n        handler: (params, errorHandler) => {\n          return this.replyToMessage(params, errorHandler);\n        }\n      },\n      'topic_unmute': {\n        id: 'topic_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'topic_mute': {\n        id: 'topic_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'topic_unblock': {\n        id: 'topic_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n      'topic_block': {\n        id: 'topic_block',\n        title: formatMessage(messages.block),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.block), // title\n            formatMessage(messages.topic_block_warning), // content\n            (() => {\n              return this.topicPermissionSetter('-JP', params, errorHandler).then((ctrl) => {\n                this.props.onTopicRemoved(params.topicName);\n                return ctrl;\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_delete': {\n        id: 'topic_delete',\n        title: formatMessage(messages.topic_delete),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.topic_delete), // title\n            formatMessage(messages.topic_delete_warning), // content\n            (() => {\n              const topic = this.props.tinode.getTopic(params.topicName);\n              if (!topic) {\n                console.log(\"Topic not found: \", params.topicName);\n                return;\n              }\n              return topic.delTopic(true).catch((err) => {\n                if (errorHandler) {\n                  errorHandler(err.message, 'err');\n                }\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_archive': {\n        id: 'topic_archive',\n        title: formatMessage(messages.archive),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic) {\n            console.log(\"Topic not found: \", params.topicName);\n            return;\n          }\n          return topic.archive(true).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      'topic_restore': {\n        id: 'topic_restore',\n        title: formatMessage(messages.unarchive),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic) {\n            console.log(\"Topic not found: \", params.topicName);\n            return;\n          }\n          return topic.archive(false).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      // menu_item_edit_permissions is defined elsewhere.\n      'permissions': {\n        id: 'permissions',\n        title: formatMessage(messages.edit_permissions),\n        handler: null\n      },\n      'member_delete': {\n        id: 'member_delete',\n        title: formatMessage(messages.member_delete),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic || !params.user) {\n            console.log(\"Topic or user not found: '\" + params.topicName + \"', '\" + params.user + \"'\");\n            return;\n          }\n          return topic.delSubscription(params.user).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      'member_mute': {\n        id: 'member_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'member_unmute': {\n        id: 'member_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'member_block': {\n        id: 'member_block',\n        title: formatMessage(messages.block),\n        handler: this.topicPermissionSetter.bind(this, '-JP')\n      },\n      'member_unblock': {\n        id: 'member_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handlePageClick, false);\n    document.addEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handlePageClick, false);\n    document.removeEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  handlePageClick(e) {\n    if (this.selfRef.current.contains(e.target)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n  }\n\n  handleEscapeKey(e) {\n    if (e.keyCode === 27) {\n      this.props.hide();\n    }\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n    let item = this.props.items[e.currentTarget.dataset.id];\n    if (typeof item == 'string') {\n      item = this.MenuItems[item];\n    }\n\n    if (!item) {\n      console.error(\"Invalid menu item ID\", e.currentTarget.dataset.id);\n    } else {\n      this.props.onAction(\n        item.id,\n        item.handler(this.props.params, this.props.onError),\n        this.props.params);\n    }\n  }\n\n  // Menu Actions\n\n  deleteMessages(all, hard, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found: \", params.topicName);\n      return;\n    }\n\n    // We don't know if the message is still pending (e.g. attachment is being uploaded),\n    // so try cancelling first. No harm if we can't cancel.\n    // The message can be cancelled if transmission to the server has not\n    // started yet or if the message send has failed.\n    if (!all && topic.cancelSend(params.seq)) {\n      return;\n    }\n    // Can't cancel. Delete instead.\n    const promise = all ?\n      topic.delMessagesAll(hard) :\n      topic.delMessagesList([params.seq], hard);\n\n    return promise.catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Retries sending failed message.\n  retryMessage(params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    // Remove the existing message entry.\n    if (!topic || !topic.flushMessage(params.seq)) {\n      return;\n    }\n    const msg = topic.createMessage(params.content, false);\n    return topic.publishDraft(msg).catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Function is used by context menu to set permissions.\n  topicPermissionSetter(mode, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found\", params.topicName);\n      return;\n    }\n\n    let result = topic.updateMode(params.user, mode);\n    if (errorHandler) {\n      result = result.catch((err) => {\n        errorHandler(err.message, 'err');\n      });\n    }\n    return result;\n  }\n\n  replyToMessage(params, errorHandler) {\n    params.pickReply(params.seq, params.content, errorHandler);\n  }\n\n  render() {\n    const menu = [];\n    let count = 0;\n    this.props.items.map((item) => {\n      if (typeof item == 'string') {\n        item = this.MenuItems[item];\n      }\n      if (item && item.title) {\n        menu.push(\n          item.title == '-' ?\n            <li className=\"separator\" key={count} />\n            :\n            <li onClick={this.handleClick} data-id={count} key={count}>{item.title}</li>\n        );\n      }\n      count++;\n    });\n\n    // Ensure that menu is inside the app-container.\n    const hSize = 12 * REM_SIZE;\n    const vSize = REM_SIZE * (0.7 + menu.length * 2.5);\n    const left = (this.props.bounds.right - this.props.clickAt.x < hSize) ?\n        (this.props.clickAt.x - this.props.bounds.left - hSize) :\n        (this.props.clickAt.x - this.props.bounds.left);\n    const top = (this.props.bounds.bottom - this.props.clickAt.y < vSize) ?\n        (this.props.clickAt.y - this.props.bounds.top - vSize) :\n        (this.props.clickAt.y - this.props.bounds.top);\n\n    const position = {\n      left: left + 'px',\n      top: top + 'px'\n    };\n\n    return (\n      <ul className=\"menu\" style={position} ref={this.selfRef}>\n        {menu}\n      </ul>\n    );\n  }\n}\n\nexport default injectIntl(ContextMenu);\n","// Short representation of time in the past.\nexport function shortDateFormat(then, locale) {\n  locale = locale || window.navigator.userLanguage || window.navigator.language;\n  const now = new Date();\n  if (then.getFullYear() == now.getFullYear()) {\n    // Same year.\n    if (then.getMonth() == now.getMonth() && then.getDate() == now.getDate()) {\n      // Same month and day, show time only.\n      return then.toLocaleTimeString(locale, {hour12: false, hour: '2-digit', minute: '2-digit'});\n    }\n    // Different month and/or day, show month day, time.\n    return then.toLocaleDateString(locale,\n      {hour12: false, month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit'});\n  }\n  // Different year: just show the date.\n  return then.toLocaleDateString(locale, {year: 'numeric', month: 'short', day: 'numeric'});\n}\n\n// Convert seconds to minutes:seconds, i.e. 156 sec -> 2:36.\nexport function secondsToTime(seconds) {\n  const min = Math.floor(seconds / 60);\n  let sec = seconds % 60;\n  sec = sec < 10 ? `0${sec}` : sec;\n  return `${min}:${sec}`;\n}\n\n// Convert a number of bytes to human-readable format.\nexport function bytesToHumanSize(bytes) {\n  if (!bytes || bytes == 0) {\n    return '0 Bytes';\n  }\n\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n  const bucket = Math.min(Math.floor(Math.log2(bytes) / 10) | 0, sizes.length-1);\n  const count = bytes / Math.pow(1024, bucket);\n  const round = bucket > 0 ? (count < 3 ? 2 : (count < 30 ? 1 : 0)) : 0;\n  return count.toFixed(round) + ' ' + sizes[bucket];\n}\n\n// Shorten a file name to be under maxLength by clipping out the middle.\nexport function shortenFileName(filename, maxLength) {\n  if (typeof filename != 'string') {\n    return filename;\n  }\n  return filename.length > maxLength ?\n    filename.slice(0, maxLength/2 - 1) + '…' + filename.slice(1 - maxLength/2) : filename;\n}\n\n// Get 32 bit integer hash value for a string. Ideally it should produce the same value\n// as Java's String#hash().\nfunction stringToColorHash(value) {\n  let hash = 0;\n  value = '' + value;\n  for (let i = 0; i < value.length; i++) {\n    hash = ((hash << 5) - hash) + value.charCodeAt(i);\n    hash = hash & hash; // Convert to 32bit integer\n  }\n  return hash;\n}\n\n// User avatar letter color id.\nexport function letterTileColorId(userId) {\n  return Math.abs(stringToColorHash(userId)) % 16;\n}\n\n// Converts user or topic ID to a CSS color class. Ideally it should produce the same color value as Java version.\n// params:\n// - {string} id: user or topic ID\n// - {boolean} light: light or dark version of the color.\n// - {boolean} fg: foreground (text) or background color.\nexport function idToColorClass(id, light, fg) {\n  return (light ? 'lt-' : 'dk-') + (fg ? 'fg-' : 'bg-') + letterTileColorId(id);\n}\n","// Odds and ends\n\nimport Tinode from 'tinode-sdk';\n\n// Make shortcut icon appear with a green dot + show unread count in title.\nexport function updateFavicon(count) {\n  const oldIcon = document.getElementById('shortcut-icon');\n  const head = document.head || document.getElementsByTagName('head')[0];\n  const newIcon = document.createElement('link');\n  newIcon.type = 'image/png';\n  newIcon.id = 'shortcut-icon';\n  newIcon.rel = 'shortcut icon';\n  newIcon.href = 'img/logo32x32' + (count > 0 ? 'a' : '') + '.png';\n  if (oldIcon) {\n    head.removeChild(oldIcon);\n  }\n  head.appendChild(newIcon);\n\n  document.title = (count > 0 ? '('+count+') ' : '') + 'Tinode';\n}\n\n// Create theCard which represents user's or topic's \"public\" info.\nexport function theCard(fn, imageUrl, imageMimeType, note) {\n  let card = null;\n  fn = fn && fn.trim();\n  note = note && note.trim();\n\n  if (fn) {\n    card = {\n      fn: fn\n    };\n  }\n\n  if (typeof note == 'string') {\n    card = card || {};\n    card.note = note ? note : Tinode.DEL_CHAR;\n  }\n\n  if (imageUrl) {\n    card = card || {};\n    let mimeType = imageMimeType;\n    // Is this a data URL \"data:[<mediatype>][;base64],<data>\"?\n    const matches = /^data:(image\\/[-a-z0-9+.]+)?(;base64)?,/i.exec(imageUrl);\n    if (matches) {\n      mimeType = matches[1];\n      card.photo = {\n        data: imageUrl.substring(imageUrl.indexOf(',') + 1),\n        ref: Tinode.DEL_CHAR\n      };\n    } else {\n      card.photo = {\n        data: Tinode.DEL_CHAR,\n        ref: imageUrl\n      };\n    }\n    card.photo.type = (mimeType || 'image/jpeg').substring('image/'.length);\n  }\n\n  return card;\n}\n\n// Deep-shallow compare two arrays: shallow compare each element.\nexport function arrayEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (!Array.isArray(a) || !Array.isArray(b)) {\n    return false;\n  }\n\n  // Compare lengths first.\n  if (a.length != b.length) {\n    return false;\n  }\n  // Order of elements is ignored.\n  a.sort();\n  b.sort();\n  for (let i = 0, l = a.length; i < l; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Checks (loosely) if the given string is a phone. If so, returns the phone number in a format\n// as close to E.164 as possible.\nexport function asPhone(val) {\n  val = val.trim();\n  if (/^(?:\\+?(\\d{1,3}))?[- (.]*(\\d{3})[- ).]*(\\d{3})[- .]*(\\d{2})[- .]*(\\d{2})?$/.test(val)) {\n    return val.replace(/[- ().]*/, '');\n  }\n  return null;\n}\n\n// Checks (loosely) if the given string is an email. If so returns the email.\nexport function asEmail(val) {\n  val = val.trim();\n  if (/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(val)) {\n    return val;\n  }\n  return null;\n}\n\n// Checks if URL is a relative url, i.e. has no 'scheme://', including the case of missing scheme '//'.\n// The scheme is expected to be RFC-compliant, e.g. [a-z][a-z0-9+.-]*\n// example.html - ok\n// https:example.com - not ok.\n// http:/example.com - not ok.\n// ' ↲ https://example.com' - not ok. (↲ means carriage return)\nexport function isUrlRelative(url) {\n  return url && !/^\\s*([a-z][a-z0-9+.-]*:|\\/\\/)/im.test(url);\n}\n\n// Ensure URL does not present an XSS risk. Optional allowedSchemes may contain an array of\n// strings with permitted URL schemes, such as ['ftp', 'ftps']; otherwise accept http and https only.\nexport function sanitizeUrl(url, allowedSchemes) {\n  if (typeof url != 'string') {\n    return url;\n  }\n\n  // Strip control characters and whitespace. They are not valid URL characters anyway.\n  url = url.replace(/[^\\x20-\\x7E]/gmi, '').trim();\n\n  // Relative URLs are safe.\n  // Relative URL does not start with ':', abcd123: or '//'.\n  if (!/^([a-z][a-z0-9+.-]*:|\\/\\/)/i.test(url)) {\n    return url;\n  }\n\n  // Blob URLs are safe.\n  if (/^blob:http/.test(url)) {\n    return url;\n  }\n\n  // Absolute URL. Accept only safe schemes, or no scheme.\n  const schemes = Array.isArray(allowedSchemes) ? allowedSchemes.join('|') : 'http|https';\n  const re = new RegExp('^((' + schemes + '):|//)', 'i');\n  if (!re.test(url)) {\n    return null;\n  }\n\n  return url;\n}\n\n// Ensure URL is suitable for <img src=\"url\"> field: the URL must be a relative URL or\n// have http:, https:, blob: or data: scheme.\n// In case of data: scheme, the URL must start with a 'data:image/XXXX;base64,'.\nexport function sanitizeImageUrl(url) {\n  if (!url) {\n    return null;\n  }\n\n  const sanitizedUrl = sanitizeUrl(url);\n  if (sanitizedUrl) {\n    return sanitizedUrl;\n  }\n\n  // Is this a data: URL of an image?\n  if (/data:image\\/[a-z0-9.-]+;base64,/i.test(url.trim())) {\n    return url;\n  }\n\n  return null;\n}\n\n// Given message's received status, return name and color of a delivery indicator icon.\nexport function deliveryMarker(received) {\n  switch (received) {\n    case Tinode.MESSAGE_STATUS_SENDING:\n      return { name: 'access_time' }; // watch face\n    case Tinode.MESSAGE_STATUS_FAILED:\n      return { name: 'warning', color: 'danger-color' }; // yellow icon /!\\\n    case Tinode.MESSAGE_STATUS_SENT:\n      return { name: 'done' }; // checkmark\n    case Tinode.MESSAGE_STATUS_RECEIVED:\n      return { name: 'done_all' }; // double checkmark\n    case Tinode.MESSAGE_STATUS_READ:\n      return { name: 'done_all', color: 'blue' }; // blue double checkmark\n  }\n  return null;\n}\n","import React from 'react';\n\nimport Tinode from 'tinode-sdk';\n\nimport { idToColorClass } from '../lib/strformat.js';\nimport { sanitizeImageUrl } from '../lib/utils.js';\n\nexport default class LetterTile extends React.PureComponent {\n  render() {\n    let avatar;\n    if (this.props.avatar === true) {\n      const isGroup = (Tinode.topicType(this.props.topic) == 'grp');\n      const iconColor = idToColorClass(this.props.topic, isGroup);\n      if (this.props.topic && this.props.title && this.props.title.trim()) {\n        const letter = this.props.title.trim().charAt(0);\n        const className = 'lettertile ' + iconColor;\n        avatar = (<div className={className}><div>{letter}</div></div>)\n      } else {\n        const className = 'material-icons ' + iconColor;\n        avatar = isGroup ?\n          <i className={className}>group</i> : <i className={className}>person</i>;\n      }\n    } else if (this.props.avatar) {\n      const url = this.props.tinode.authorizeURL(sanitizeImageUrl(this.props.avatar));\n      // If avatar image is invalid, show a placeholder.\n      avatar = <img className=\"avatar\" alt=\"avatar\" src={url}\n        onError={(e)=>{e.target.onerror = null; e.target.src=\"../img/broken_image.png\"}} />;\n    } else {\n      avatar = null;\n    }\n    return avatar;\n  }\n}\n","import React from 'react';\n\nexport default class LoadSpinner extends React.PureComponent {\n  render() {\n    const className = 'load-spinner-box' + (this.props.large ? ' large' : '')\n      + (this.props.clear ? ' clear' : '') + (this.props.centered ? ' centered' : '');\n    return (this.props.show ?\n      <div className={className}><div className=\"loader-spinner\"></div></div> : null);\n  }\n}\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\nimport LoadSpinner from './load-spinner.jsx';\n\nimport { sanitizeImageUrl } from '../lib/utils.js';\n\nimport { AVATAR_SIZE } from '../config.js';\n\nexport default class AvatarUpload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      source: props.avatar\n    };\n\n    this.handleFileReceived = this.handleFileReceived.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.avatar != prevProps.avatar) {\n      this.setState({source: this.props.avatar});\n    }\n  }\n\n  handleFileReceived(e) {\n    const image = e.target.files[0];\n    this.props.onImageUpdated(image.type, URL.createObjectURL(image), image.name);\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  render() {\n    // Randomize id value in case more than one AvatarUpload is shown\n    // at the same time.\n    const randId = 'file-input-avatar-' + (Math.random() + '').substr(2);\n    const className = 'avatar-upload' + (this.props.readOnly ? ' read-only' : '');\n    return (\n      <div className={className}>\n        {this.props.readOnly || !this.state.source ?\n          null :\n          <a href=\"#\" className=\"clear-avatar\" onClick={(e) => {e.preventDefault(); this.props.onImageUpdated();}}>\n            <i className=\"material-icons\">clear</i>\n          </a>}\n        {this.state.source ?\n          <img src={this.props.tinode.authorizeURL(sanitizeImageUrl(this.state.source))} className=\"preview\" /> :\n          this.props.readOnly && this.props.uid ?\n            <div className=\"avatar-box\">\n              <LetterTile\n                tinode={this.props.tinode}\n                avatar={true}\n                topic={this.props.uid}\n                title={this.props.title} />\n            </div>\n            :\n            <div className=\"blank\">{AVATAR_SIZE}&times;{AVATAR_SIZE}</div>}\n        {this.props.readOnly ? null :\n          <input type=\"file\" id={randId} className=\"inputfile hidden\"\n            accept=\"image/*\" onChange={this.handleFileReceived} />}\n        {this.props.readOnly ? null :\n        <label htmlFor={randId} className=\"round\">\n          <i className=\"material-icons\">file_upload</i>\n        </label>}\n        <LoadSpinner show={this.props.uploading} large={true} clear={true} centered={true} />\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nconst icon_mapping = {'staff': 'verified_user'};\n\nconst messages = defineMessages({\n  badge_verified: {\n    id: 'badge_verified',\n    defaultMessage: 'Verified/official',\n    description: 'Explanation of a verified account or topic badge'\n  },\n  badge_staff: {\n    id: 'badge_staff',\n    defaultMessage: 'Staff-managed',\n    description: 'Explanation of a staff-managed account or topic badge'\n  },\n  badge_danger: {\n    id: 'badge_danger',\n    defaultMessage: 'Untrustworthy',\n    description: 'Suspicious or untrustworthy account or topic badge'\n  },\n});\n\n\n/* Trusted badges with labels: verified, staff, danger */\nclass BadgeList extends React.PureComponent {\n  render() {\n    const {formatMessage} = this.props.intl;\n    let badges = null;\n    if (this.props.trustedBadges && this.props.trustedBadges.length > 0) {\n      badges = [];\n      this.props.trustedBadges.map((b) => {\n        const comment = formatMessage(messages['badge_' + b]);\n        const style = 'material-icons ' + b + '-color';\n        badges.push(<div className=\"trusted-badge\" key={b}><i className={style}>{icon_mapping[b] || b}</i> {comment}</div>);\n      });\n      return <>{badges}</>;\n    }\n    return null;\n  }\n};\n\nexport default injectIntl(BadgeList);\n","import React from 'react';\n\n/* BEGIN CheckBox: styled checkbox */\nexport default class CheckBox extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange() {\n    this.props.onChange(this.props.name, !this.props.checked);\n  }\n\n  render() {\n    return (\n      this.props.onChange ? (\n        this.props.checked === true ?\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box</i> :\n        this.props.checked === false ?\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box_outline_blank</i> :\n          <i className=\"material-icons lt-blue\">indeterminate_check_box</i>\n        ) : (\n          this.props.checked ?\n            <i className=\"material-icons\">check_box</i> :\n            <i className=\"material-icons\">check_box_outline_blank</i>\n        )\n    );\n  }\n}\n/* END CheckBox */\n","import React from 'react';\n\nconst icon_mapping = {'muted': 'notifications_off', 'banned': 'block', 'staff': 'verified_user'};\n\n/* Contact's labels: [you], or icons [muted], [blocked] */\nexport default class ContactBadges extends React.PureComponent {\n  render() {\n    let badges = null;\n    if (this.props.badges && this.props.badges.length > 0) {\n      badges = [];\n      this.props.badges.map((b) => {\n        const color = (b.color ? ' ' + b.color : '');\n        if (b.icon) {\n          badges.push(<i className={'material-icons as-badge' + color} key={b.key || b.icon}>{icon_mapping[b.icon] || b.icon}</i>);\n        } else {\n          badges.push(<span className={'badge' + color} key={b.key || b.name}>{b.name}</span>);\n        }\n      });\n      return <>{badges}</>;\n    }\n    return null;\n  }\n};\n","// Received/read indicator.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { shortDateFormat } from '../lib/strformat.js';\nimport { deliveryMarker } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  message_sending: {\n    id: 'message_sending',\n    defaultMessage: 'sending...',\n    description: 'Message being sent, in place of time stamp'\n  },\n  message_sending_failed: {\n    id: 'message_sending_failed',\n    defaultMessage: 'failed',\n    description: 'Failed to send message, in place of time stamp'\n  }\n});\n\nclass ReceivedMarker extends React.PureComponent {\n  render() {\n    const {formatMessage} = this.props.intl;\n    let timestamp;\n    if (this.props.received <= Tinode.MESSAGE_STATUS_SENDING) {\n      timestamp = formatMessage(messages.message_sending);\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_FAILED) {\n      timestamp = formatMessage(messages.message_sending_failed);\n    } else {\n      timestamp = shortDateFormat(this.props.timestamp, this.props.intl.locale);\n    }\n\n    const icon = deliveryMarker(this.props.received);\n    const marker = icon ? <i className={'material-icons small ' + icon.color}>{icon.name}</i> : null;\n\n    return (\n      <span className=\"timestamp\">\n        {timestamp}{'\\u00a0'}{marker}\n      </span>\n    );\n  }\n};\n\nexport default injectIntl(ReceivedMarker);\n","// The counter of unread messages in the topic.\nimport React from 'react';\n\nexport default class UnreadBadge extends React.PureComponent {\n  render() {\n    return (this.props.count > 0 ?\n      <span className=\"unread\">{this.props.count > 9 ? \"9+\" : this.props.count}</span>\n      : null);\n  }\n};\n","// Image with a placeholder which is replaced when the promise is resolved.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class LazyImage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      src: 'img/placeholder.png',\n      style: Object.assign({padding: '4px'}, this.props.style),\n      className: this.props.className,\n      alt: this.props.alt,\n      onClick: this.props.onClick,\n    };\n  }\n\n  componentDidMount() {\n    this.props.whenDone\n      .then(data => this.setState({src: data.src, style: {...this.state.style, padding: 0}}))\n      .catch(() => this.setState({src: 'img/broken_image.png'}));\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.whenDone != this.props.whenDone) {\n      this.setState({src: 'img/placeholder.png', style: {...this.state.style, padding: '4px'}});\n      this.props.whenDone\n        .then(data => this.setState({src: data.src, style: {...this.state.style, padding: 0}}))\n        .catch(() => this.setState({src: 'img/broken_image.png'}));\n    }\n  }\n\n  render() {\n    return React.createElement('img', this.state);\n  }\n};\n","// File uload/download progress indicator with a cancel inside.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class FileProgress extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"uploader\">\n        <div><span style={{width: (this.props.progress * 100) + \"%\"}}></span></div>\n        {this.props.progress < 0.999 ?\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n            <i className=\"material-icons\">close</i> <FormattedMessage id=\"action_cancel\"\n              defaultMessage=\"cancel\" description=\"Call to action [cancel]\" />\n          </a>\n          :\n          <FormattedMessage id=\"upload_finishing\" defaultMessage=\"finishing...\"\n            description=\"Notification that upload is finishing\" />\n        }\n      </div>\n    );\n  }\n}\n","// Image view with progress bar and a cancel button.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\n\nexport default class UploadingImage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"inline-image\">\n        {React.createElement('img', this.props)}\n        <div className=\"rounded-container\">\n          <FileProgress progress={this.props.progress} onCancel={this.props.onCancelUpload} />\n        </div>\n      </div>\n    );\n  }\n};\n","// File and image helper functions.\nimport { MAX_INBAND_ATTACHMENT_SIZE, MAX_IMAGE_DIM } from '../config.js';\nimport { bytesToHumanSize } from './strformat.js'\n\n// Supported image MIME types and corresponding file extensions.\nexport const SUPPORTED_IMAGE_FORMATS = ['image/jpeg', 'image/gif', 'image/png', 'image/svg', 'image/svg+xml'];\nexport const MIME_EXTENSIONS         = ['jpg',        'gif',       'png',       'svg',       'svg'];\n\n// Get an URL from a theCard photo: either create a data: URL or return reference URL.\nexport function makeImageUrl(photo) {\n  if (photo && typeof photo == 'object') {\n    if (photo.data && photo.type) {\n      const mime = photo.type.startsWith('image/') ? photo.type : ('image/' + photo.type);\n      return 'data:' + mime + ';base64,' + photo.data;\n    }\n    return photo.ref;\n  }\n  return null;\n}\n\n// Calculate linear dimensions for scaling image down to fit under a certain size.\n// Returns an object which contains destination sizes, source sizes, and offsets\n// into source (when making square images).\nexport function fitImageSize(width, height, maxWidth, maxHeight, forceSquare) {\n  // Sanitize input\n  width = width | 0;\n  height = height | 0;\n  maxWidth = maxWidth | 0;\n  maxHeight = maxHeight | 0;\n\n  if (width <= 0 || height <= 0 || maxWidth <= 0 || maxHeight <= 0) {\n    return null;\n  }\n\n  if (forceSquare) {\n    maxWidth = maxHeight = Math.min(maxWidth, maxHeight);\n  }\n\n  const scale = Math.min(\n    Math.min(width, maxWidth) / width,\n    Math.min(height, maxHeight) / height\n  );\n\n  const size = {\n    dstWidth: (width * scale) | 0,\n    dstHeight: (height * scale) | 0,\n  };\n\n  if (forceSquare) {\n    // Also calculate parameters for making the image square.\n    size.dstWidth = size.dstHeight = Math.min(size.dstWidth, size.dstHeight);\n    size.srcWidth = size.srcHeight = Math.min(width, height);\n    size.xoffset = ((width - size.srcWidth) / 2) | 0;\n    size.yoffset = ((height - size.srcWidth) / 2) | 0;\n  } else {\n    size.xoffset = size.yoffset = 0;\n    size.srcWidth = width;\n    size.srcHeight = height;\n  }\n  return size;\n}\n\n// Ensure file's extension matches mime content type\nexport function fileNameForMime(fname, mime) {\n  const idx = SUPPORTED_IMAGE_FORMATS.indexOf(mime);\n  if (idx < 0 || !fname) {\n    // Unknown mime or empty name.\n    return fname;\n  }\n  const ext = MIME_EXTENSIONS[idx];\n\n  const at = fname.lastIndexOf('.');\n  if (at >= 0) {\n    fname = fname.substring(0, at);\n  }\n  return fname + '.' + ext;\n}\n\n// Scale uploaded image to fit under certain dimensions and byte size, optionally constraining to a square.\n// Returns a promise which is resolven on success or rejected on failure.\nexport function imageScaled(fileOrBlob, maxWidth, maxHeight, maxSize, forceSquare) {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    img.crossOrigin = 'Anonymous';\n    img.onerror = function(err) {\n      reject(new Error(\"Image format unrecognized\"));\n    }\n    img.onload = async function() {\n      // Once the image is loaded, the URL is no longer needed.\n      URL.revokeObjectURL(img.src);\n\n      // Calculate the desired image dimensions.\n      const dim = fitImageSize(this.width, this.height, maxWidth, maxHeight, forceSquare);\n      if (!dim) {\n        reject(new Error(\"Invalid image\"));\n        return;\n      }\n      let canvas = document.createElement('canvas');\n      canvas.width = dim.dstWidth;\n      canvas.height = dim.dstHeight;\n      let ctx = canvas.getContext('2d');\n      ctx.imageSmoothingEnabled = true;\n      ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n        0, 0, dim.dstWidth, dim.dstHeight);\n\n      const mime = SUPPORTED_IMAGE_FORMATS.includes(fileOrBlob.type) ? fileOrBlob.type : 'image/jpeg';\n      // Generate blob to check size of the image.\n      let blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n      if (!blob) {\n        reject(new Error(\"Unsupported image format\"));\n        return;\n      }\n\n      // Ensure the image is not too large. Shrink the image keeping the aspect ratio.\n      // Do nothing if maxsize is <= 0.\n      while (maxSize > 0 && blob.length > maxSize) {\n        dim.dstWidth = (dim.dstWidth * 0.70710678118) | 0;\n        dim.dstHeight = (dim.dstHeight * 0.70710678118) | 0;\n        canvas.width = dim.dstWidth;\n        canvas.height = dim.dstHeight;\n        ctx = canvas.getContext('2d');\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n          0, 0, dim.dstWidth, dim.dstHeight);\n        blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n      }\n\n      canvas = null;\n      resolve({mime: mime, blob: blob, width: dim.dstWidth, height: dim.dstHeight, name: fileNameForMime(fileOrBlob.name, mime)});\n    };\n    img.src = URL.createObjectURL(fileOrBlob);\n  });\n}\n\n// Scale and crop image according to specified dimensions.\n// The coordinates are in unscaled image pixels, i.e. cut the rectangle first then scale it.\n// returns a promise.\nexport function imageCrop(mime, objURL, left, top, width, height, scale) {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    img.crossOrigin = 'Anonymous';\n    img.onerror = (err) => {\n      reject(new Error(\"Image format unrecognized\"));\n    };\n    img.onload = () => {\n      // Once the image is loaded, the URL is no longer needed.\n      URL.revokeObjectURL(img.src);\n\n      let canvas = document.createElement('canvas');\n      canvas.width = width * scale;\n      canvas.height = height * scale;\n      let ctx = canvas.getContext('2d');\n      ctx.imageSmoothingEnabled = true;\n      ctx.drawImage(this, left, top, width, height, 0, 0, canvas.width, canvas.height);\n\n      mime = SUPPORTED_IMAGE_FORMATS.includes(mime) ? mime : 'image/jpeg';\n      // Generate blob to check size of the image.\n      canvas.toBlob((blob) => {\n        // Allow GC.\n        canvas = null;\n        if (blob) {\n          resolve({mime: mime, blob: blob, width: width, height: height});\n        } else {\n          reject(new Error(\"Unsupported image format\"));\n        }\n      }, mime);\n    };\n    img.src = objURL;\n  });\n}\n\n// Convert file to base64 string.\nexport function fileToBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onerror = (evt) => {\n      reject(reader.error);\n    };\n    reader.onload = () => {\n      resolve({mime: file.type, bits: reader.result.split(',')[1], name: file.name});\n    };\n    reader.readAsDataURL(file);\n  });\n}\n\n// Convert Blob to base64 string. Returns a promise resolved with the base64 string and mime.\nexport function blobToBase64(blob) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onerror = (evt) => {\n      reject(reader.error);\n    };\n    reader.onload = () => {\n      resolve({mime: blob.type, bits: reader.result.split(',')[1]});\n    };\n    reader.readAsDataURL(blob);\n  });\n}\n\n// File pasted from the clipboard. It's either an inline image or a file attachment.\nexport function filePasted(event, onImageSuccess, onAttachmentSuccess, onError) {\n  const items = (event.clipboardData || event.originalEvent.clipboardData || {}).items;\n  if (!Array.isArray(items)) {\n    return false;\n  }\n\n  for (let i in items) {\n    const item = items[i];\n    if (item.kind === 'file') {\n      const file = item.getAsFile();\n      if (!file) {\n        console.error(\"Failed to get file object from pasted file item\", item.kind, item.type);\n        onError(\"Failed to get file object from pasted file item\");\n        continue;\n      }\n      if (file.type && file.type.split('/')[0] == 'image') {\n        onImageSuccess(file);\n      } else {\n        onAttachmentSuccess(file);\n      }\n      // Indicate that the pasted data contains a file.\n      return true;\n    }\n  }\n  // No file found.\n  return false;\n}\n\n// Get mime type from data URL header.\nexport function getMimeType(header) {\n  var mime = /^data:(image\\/[-+a-z0-9.]+);base64/.exec(header);\n  return (mime && mime.length > 1) ? mime[1] : null;\n}\n\n// Given length of a binary object in bytes, calculate the length after\n// base64 encoding.\nexport function base64EncodedLen(n) {\n  return Math.floor((n + 2) / 3) * 4;\n}\n\n// Given length of a base64-encoded object, calculate decoded size of the\n// pbject in bytes.\nexport function base64DecodedLen(n) {\n  return Math.floor(n / 4) * 3;\n}\n\n// Re-encode string to standard base64 encoding with padding.\n// The string may be base64-URL encoded without the padding.\nexport function base64ReEncode(str) {\n  if (str) {\n    str = str.replace(/-/g, '+').replace(/_/g, '/');\n    try {\n      str = btoa(atob(str));\n    } catch(err) {\n      console.error(\"Failed to base64 re-encode string.\", err);\n      str = null;\n    }\n  }\n  return str;\n}\n\n// Convert a base64 encoded string with the provided mime type into a Blob.\nexport function base64ToBlob(str, mime) {\n  if (!str) {\n    return null;\n  }\n\n  try {\n    // Make blob.\n    const bin = atob(str);\n    const length = bin.length;\n    const buf = new ArrayBuffer(length);\n    const arr = new Uint8Array(buf);\n    for (let i = 0; i < length; i++) {\n      arr[i] = bin.charCodeAt(i);\n    }\n\n    return new Blob([buf], { type: mime });\n  } catch(err) {\n    console.error(\"Failed to convert base64 to blob: \", err);\n  }\n\n  return null;\n}\n","import React from 'react';\nimport { defineMessages } from 'react-intl';\n\nimport { Drafty } from 'tinode-sdk';\n\nimport LazyImage from '../widgets/lazy-image.jsx'\nimport UploadingImage from '../widgets/uploading-image.jsx'\n\nimport { IMAGE_THUMBNAIL_DIM, BROKEN_IMAGE_SIZE, REM_SIZE } from '../config.js';\nimport { base64ToBlob, blobToBase64, fitImageSize, imageScaled } from './blob-helpers.js';\nimport { idToColorClass, shortenFileName } from './strformat.js';\nimport { sanitizeImageUrl } from './utils.js';\n\nconst messages = defineMessages({\n  drafty_form: {\n    id: 'drafty_form',\n    defaultMessage: 'Form: ',\n    description: 'Comment for form in drafty preview'\n  },\n  drafty_attachment: {\n    id: 'drafty_attachment',\n    defaultMessage: 'Attachment',\n    description: 'Comment for attachment in drafty preview'\n  },\n  drafty_image: {\n    id: 'drafty_image',\n    defaultMessage: 'Picture',\n    description: 'Comment for embedded images in drafty preview'\n  },\n});\n\n// Size the already scaled image.\nfunction handleImageData(el, data, attr) {\n  if (!data) {\n    attr.src = 'img/broken_image.png';\n    attr.style = {\n      width: IMAGE_THUMBNAIL_DIM + 'px',\n      height: IMAGE_THUMBNAIL_DIM + 'px',\n    };\n    return el;\n  }\n\n  attr.className = 'inline-image';\n  const dim = fitImageSize(data.width, data.height,\n    this.viewportWidth > 0 ? Math.min(this.viewportWidth - REM_SIZE * 6.5, REM_SIZE * 34.5) :\n      REM_SIZE * 34.5, REM_SIZE * 24, false) ||\n      {dstWidth: BROKEN_IMAGE_SIZE, dstHeight: BROKEN_IMAGE_SIZE};\n  attr.style = {\n    width: dim.dstWidth + 'px',\n    height: dim.dstHeight + 'px',\n    // Looks like a Chrome bug: broken image does not respect 'width' and 'height'.\n    minWidth: dim.dstWidth + 'px',\n    minHeight: dim.dstHeight + 'px'\n  };\n  if (!Drafty.isProcessing(data)) {\n    attr.src = this.authorizeURL(sanitizeImageUrl(attr.src));\n    attr.alt = data.name;\n    if (attr.src) {\n      if (Math.max(data.width || 0, data.height || 0) > IMAGE_THUMBNAIL_DIM) {\n        // Allow previews for large enough images.\n        attr.onClick = this.onImagePreview;\n        attr.className += ' image-clickable';\n      }\n      attr.loading = 'lazy';\n    } else {\n      attr.src = 'img/broken_image.png';\n    }\n  } else {\n    // Use custom element instead of <img>.\n    el = UploadingImage;\n  }\n\n  return el;\n}\n\nfunction quotedImage(data) {\n  let promise;\n  // Get the blob from the image data.\n  if (data.val) {\n    const blob = base64ToBlob(data.val, data.mime);\n    promise = blob ? Promise.resolve(blob) : Prmise.reject(new Error(\"Invalid image\"));\n  } else {\n    promise = fetch(this.authorizeURL(sanitizeImageUrl(data.ref))).then(evt => {\n      if (evt.ok) {\n        return evt.blob();\n      } else {\n        throw new Error(`Image fetch unsuccessful: ${evt.status} ${evt.statusText}`);\n      }\n    });\n  }\n\n  // Scale the blob.\n  return promise\n    .then(blob => {\n      return imageScaled(blob, IMAGE_THUMBNAIL_DIM, IMAGE_THUMBNAIL_DIM, -1, true)\n    }).then(scaled => {\n      data.mime = scaled.mime;\n      data.size = scaled.blob.size;\n      data.width = scaled.width;\n      data.height = scaled.height;\n      delete data.ref;\n      // Keeping the original file name, if provided: ex.data.name;\n\n      return blobToBase64(scaled.blob);\n    }).then(b64 => {\n      data.val = b64.bits;\n      return data;\n    }).catch(err => {\n      delete data.val;\n      delete data.name;\n      data.width = IMAGE_THUMBNAIL_DIM;\n      data.height = IMAGE_THUMBNAIL_DIM;\n      data.maxWidth = IMAGE_THUMBNAIL_DIM;\n      data.maxHeight = IMAGE_THUMBNAIL_DIM;\n      // Rethrow.\n      throw err;\n    });\n}\n\n// The main Drafty formatter: converts Drafty elements into React classes. 'this' is set by the caller.\n// 'this' must contain:\n//    viewportWidth: this.props.viewportWidth;\n//    authorizeURL: this.props.tinode.authorizeURL\n//    onImagePreview: this.handleImagePreview\n//    onFormButtonClick: this.handleFormButtonClick\n//    onQuoteClick: this.handleQuoteClick (optional)\nexport function fullFormatter(style, data, values, key) {\n  if (!style) {\n    // Unformatted.\n    return values;\n  }\n\n  if (style == 'HD') {\n    // Hidden.\n    return null;\n  }\n\n  let el = Drafty.tagName(style);\n  const attr = Drafty.attrValue(style, data) || {};\n  attr.key = key;\n  switch (style) {\n    case 'HL':\n      // Highlighted text. Assign class name.\n      attr.className = 'highlight';\n      break;\n    case 'IM':\n      // Additional processing for images\n      el = handleImageData.call(this, el, data, attr);\n      // Image element cannot have content.\n      values = null;\n      break;\n    case 'BN':\n      // Button\n      attr.onClick = this.onFormButtonClick;\n      let inner = React.Children.map(values, (child) => {\n        return typeof child == 'string' ? child : undefined;\n      });\n      if (!inner || inner.length == 0) {\n        inner = [attr.name]\n      }\n      // Get text which will be sent back when the button is clicked.\n      attr['data-title'] = inner.join('');\n      break;\n    case 'MN':\n      // Mention\n      attr.className = 'mention'\n      if (data) {\n        attr.className += ' ' + idToColorClass(data.val, false, true);\n      }\n      break;\n    case 'FM':\n      // Form\n      attr.className = 'bot-form';\n      break;\n    case 'RW':\n      // Form element formatting is dependent on element content.\n      break;\n    case 'QQ':\n      // Quote/citation.\n      attr.className = 'reply-quote'\n      attr.onClick = this.onQuoteClick;\n      break;\n    default:\n      if (el == '_UNKN') {\n        // Unknown element.\n        el = React.Fragment;\n        values = [<i className=\"material-icons gray\">extension</i>, ' '].concat(values || []);\n      }\n      break;\n  }\n  if (!el) {\n    return values;\n  }\n  return React.createElement(el, attr, values);\n};\n\n// Converts Drafty object into a one-line preview. 'this' is set by the caller.\n// 'this' must contain:\n//    formatMessage: this.props.intl.formatMessage\n//    messages: formatjs messages defined with defineMessages.\nexport function previewFormatter(style, data, values, key) {\n  if (!style) {\n    // Unformatted.\n    return values;\n  }\n\n  if (style == 'HD') {\n    // Hidden.\n    return null;\n  }\n\n  let el = Drafty.tagName(style);\n  const attr = { key: key };\n  switch (style) {\n    case 'BR':\n      // Replace new line with a space.\n      el = React.Fragment;\n      values = [' '];\n      break;\n    case 'HL':\n      // Make highlight less prominent in preview.\n      attr.className = 'highlight preview';\n      break;\n    case 'LN':\n    case 'MN':\n      // Disable links in previews.\n      el = 'span';\n      break;\n    case 'IM':\n      // Replace image with '[icon] Image'.\n      el = React.Fragment;\n      values = [<i key=\"im\" className=\"material-icons\">photo</i>, this.formatMessage(messages.drafty_image)];\n      break;\n    case 'BN':\n      el = 'span';\n      attr.className = 'flat-button faux';\n      break;\n    case 'FM':\n      el = React.Fragment;\n      values = [<i key=\"fm\" className=\"material-icons\">dashboard</i>,\n        this.formatMessage(messages.drafty_form)].concat(' ', values || []);\n      break;\n    case 'RW':\n      el = React.Fragment;\n      break;\n    case 'EX':\n      if (data) {\n        if (data.mime == 'application/json') {\n          // Ignore JSON attachments: they are form response payloads.\n          return null;\n        }\n        // Clear payload.\n        delete data.val;\n        delete data.ref;\n      }\n      el = React.Fragment;\n      values = [<i key=\"ex\" className=\"material-icons\">attachment</i>, this.formatMessage(messages.drafty_attachment)];\n      break;\n    default:\n      if (el == '_UNKN') {\n        el = React.Fragment;\n        values = [<i key=\"unkn\" className=\"material-icons\">extension</i>, ' '].concat(values || []);\n      }\n      break;\n  }\n  if (!el) {\n    return values;\n  }\n  return React.createElement(el, attr, values);\n};\n\n// Converts Drafty object into a quoted reply. 'this' is set by the caller.\nfunction inlineImageAttr(attr, data) {\n  attr.style = {\n    width: IMAGE_THUMBNAIL_DIM + 'px',\n    height: IMAGE_THUMBNAIL_DIM + 'px',\n    maxWidth: IMAGE_THUMBNAIL_DIM + 'px',\n    maxHeight: IMAGE_THUMBNAIL_DIM + 'px',\n  }\n  attr.className = 'inline-image';\n  attr.alt = shortenFileName(data && data.name, 16) || this.formatMessage(messages.drafty_image);\n  if (!data) {\n    attr.src = 'img/broken_image.png';\n  }\n  attr.title = attr.alt;\n  return attr;\n}\n\n// Displays a portion of Drafty within 'QQ' quotes. 'this' is set by the caller.\n// 'this' must contain:\n//    formatMessage: this.props.intl.formatMessage\n//    messages: formatjs messages defined with defineMessages.\n//    authorizeURL: this.props.tinode.authorizeURL\n//    onQuoteClick: this.handleQuoteClick (optional)\nexport function quoteFormatter(style, data, values, key) {\n  if (['BR', 'EX', 'IM', 'MN', 'QQ'].includes(style)) {\n    let el = Drafty.tagName(style);\n    let attr = Drafty.attrValue(style, data) || {};\n    attr.key = key;\n    switch(style) {\n      case 'IM':\n        attr = inlineImageAttr.call(this, attr, data);\n        values = [React.createElement('img', attr, null), ' ', attr.alt];\n        el = React.Fragment;\n        // Fragment attributes.\n        attr = {key: key};\n        break;\n      case 'MN':\n        el = 'span';\n        attr.className = 'mention'\n        if (data) {\n          attr.className += ' ' + idToColorClass(data.val, false, true);\n        }\n        break;\n      case 'QQ':\n        attr.className = 'reply-quote';\n        attr.onClick = this.onQuoteClick;\n        break;\n      case 'EX':\n        let fname;\n        if (data) {\n          if (data.mime == 'application/json') {\n            // Ignore JSON attachments: they are form response payloads.\n            return null;\n          }\n          fname = data.name;\n          // Clear payload.\n          delete data.val;\n          delete data.ref;\n        }\n        el = React.Fragment;\n        values = [<i key=\"ex\" className=\"material-icons\">attachment</i>,\n          shortenFileName(fname, 16) || this.formatMessage(messages.drafty_attachment)];\n        break;\n    }\n    return React.createElement(el, attr, values);\n  }\n  return previewFormatter.call(this, style, data, values, key);\n}\n\n// Create image thumbnail suitable for inclusion in a quote.\nfunction quoteImage(data) {\n  let promise;\n  // Get the blob from the image data.\n  if (data.val) {\n    const blob = base64ToBlob(data.val, data.mime);\n    promise = blob ? Promise.resolve(blob) : Promise.reject(new Error(\"Invalid image\"));\n  } else {\n    promise = fetch(this.authorizeURL(sanitizeImageUrl(data.ref))).then(evt => {\n      if (evt.ok) {\n        return evt.blob();\n      } else {\n        throw new Error(`Image fetch unsuccessful: ${evt.status} ${evt.statusText}`);\n      }\n    });\n  }\n\n  // Scale the blob.\n  return promise\n    .then(blob => {\n      // Cut the square from the center of the image and shrink it.\n      return imageScaled(blob, IMAGE_THUMBNAIL_DIM, IMAGE_THUMBNAIL_DIM, -1, true)\n    }).then(scaled => {\n      data.mime = scaled.mime;\n      data.size = scaled.blob.size;\n      data.width = scaled.width;\n      data.height = scaled.height;\n      delete data.ref;\n      // Keeping the original file name, if provided: ex.data.name;\n\n      data.src = URL.createObjectURL(scaled.blob);\n      return blobToBase64(scaled.blob);\n    }).then(b64 => {\n      data.val = b64.bits;\n      return data;\n    }).catch(err => {\n      delete data.val;\n      delete data.src;\n      data.width = IMAGE_THUMBNAIL_DIM;\n      data.height = IMAGE_THUMBNAIL_DIM;\n      // Rethrow.\n      throw err;\n    });\n}\n\n// Create a preview of a reply.\nexport function replyFormatter(style, data, values, key) {\n  if (style != 'IM') {\n    return quoteFormatter.call(this, style, data, values, key);\n  }\n  const attr = inlineImageAttr.call(this, {key: key}, data);\n  attr.whenDone = quoteImage.call(this, data);\n  values = [React.createElement(LazyImage, attr, null), ' ', attr.alt];\n  return React.createElement(React.Fragment, {key: key}, values);\n}\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport ContactBadges from './contact-badges.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\nimport UnreadBadge from './unread-badge.jsx';\n\nimport { Drafty } from 'tinode-sdk';\n\nimport { previewFormatter } from '../lib/formatters.js';\nimport { deliveryMarker } from '../lib/utils.js';\n\nclass Contact extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.props.onSelected) {\n      // Index this.props.index is used by GroupManager.\n      this.props.onSelected(this.props.item, this.props.index);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.props.item, y: e.pageY, x: e.pageX });\n  }\n\n  render() {\n    let title = this.props.title;\n    if (!title) {\n      title = <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n        description=\"Title shown when the topic has no name\" /></i>;\n    } else if (title.length > 30) {\n      // FIXME: this is probably wrong for RTL languages.\n      title = title.substring(0, 28) + '…';\n    }\n    const online = this.props.now ? 'online' : 'offline';\n    const avatar = this.props.avatar ? this.props.avatar : true;\n    const badges = this.props.badges ? this.props.badges.slice() : [];\n    const icon_badges = [];\n    if (this.props.isVerified) {\n      icon_badges.push({icon: 'verified', color: 'verified-color'});\n    }\n    if (this.props.isStaff) {\n      icon_badges.push({icon: 'staff', color: 'staff-color'});\n    }\n    if (this.props.isDangerous) {\n      icon_badges.push({icon: 'dangerous', color: 'danger-color'});\n    }\n    if (this.props.acs) {\n      if (this.props.showMode) {\n        badges.push({name: this.props.acs.getMode(), key: 'mode'});\n      }\n      if (this.props.acs.isMuted()) {\n        icon_badges.push({icon: 'muted'});\n      }\n      if (!this.props.acs.isJoiner()) {\n        icon_badges.push({icon: 'banned'});\n      }\n    }\n\n    const subtitle = this.props.preview ?\n      (typeof this.props.preview == 'string' ? this.props.preview :\n        Drafty.isValid(this.props.preview) ?\n        React.createElement(React.Fragment, null, Drafty.format(this.props.preview, previewFormatter,\n          {formatMessage: this.props.intl.formatMessage})) :\n        <><i className=\"material-icons gray\">warning_amber</i> <i className=\"gray\">\n          <FormattedMessage id=\"invalid_content\"\n            defaultMessage=\"invalid content\" description=\"Shown when the message is unreadable\" /></i>\n        </>\n      ) :\n      this.props.comment;\n\n    const icon = deliveryMarker(this.props.received);\n    const marker = icon ? <i className={'material-icons small space-right' +\n      (icon.color ? ' ' + icon.color : '')}>{icon.name}</i> : null;\n\n    return (\n      <li className={!this.props.showCheckmark && this.props.selected ? 'selected' : null} onClick={this.handleClick}>\n        <div className=\"avatar-box\">\n          <LetterTile\n            tinode={this.props.tinode}\n            avatar={avatar}\n            title={this.props.title}\n            topic={this.props.item} />\n          {this.props.showOnline ? <span className={online} /> :\n            (this.props.showCheckmark && this.props.selected ?\n            <i className=\"checkmark material-icons\">check_circle</i>\n            : null)}\n        </div>\n        <div className=\"text-box\">\n          <div><span className=\"contact-title\">{title}</span>\n            {this.props.isChannel ? <img src=\"/img/channel.png\" className=\"channel\" alt=\"channel\" /> : null}\n            <ContactBadges badges={icon_badges} /><UnreadBadge count={this.props.unread} />\n          </div>\n          {this.props.showMode ?\n            <span><ContactBadges badges={badges} /></span> :\n            this.props.small ? null : <div className=\"contact-comment\">{marker}<span>{subtitle || '\\u00A0'}</span></div>}\n        </div>\n        {this.props.showContextMenu ?\n          <span className=\"menuTrigger\">\n            <a href=\"#\" onClick={this.handleContextClick}>\n              <i className=\"material-icons\">expand_more</i>\n            </a>\n          </span> : null}\n      </li>\n    );\n  }\n};\n\nexport default injectIntl(Contact);\n","// A panel included into a list of contacts with an action text.\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\n\nclass ContactAction extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.onAction(this.props.action);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <li onClick={this.handleClick} className=\"action\">\n        <div className=\"action-text\">{formatMessage(this.props.title, this.props.values)}</div>\n      </li>\n    );\n  }\n};\n\nexport default injectIntl(ContactAction);\n","// ContactList: component for showing a list of contacts,\n// such as a list of group members in a group chat.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { Drafty } from 'tinode-sdk';\nimport Tinode from 'tinode-sdk';\n\nimport Contact from './contact.jsx';\nimport ContactAction from './contact-action.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nimport { MESSAGE_PREVIEW_LENGTH } from '../config.js';\n\nconst messages = defineMessages({\n  badge_you: {\n    id: 'badge_you',\n    defaultMessage: 'you',\n    description: 'Badge for indicating the current user'\n  },\n  badge_owner: {\n    id: 'badge_owner',\n    defaultMessage: 'owner',\n    description: 'Badge for indicating the owner'\n  }\n});\n\nclass ContactList extends React.Component {\n  render() {\n    const { formatMessage } = this.props.intl;\n    const showCheckmark = Array.isArray(this.props.topicSelected);\n    const contactNodes = [];\n    let contactsCount = 0;\n    if (this.props.contacts && this.props.contacts.length > 0) {\n      this.props.contacts.map((c) => {\n        if (c.action) {\n          // Action item\n          contactNodes.push(\n            <ContactAction\n              title={c.title} action={c.action} values={c.values}\n              key={c.action}\n              onAction={this.props.onAction}\n              />);\n        } else {\n          // Normal contact\n          const key = this.props.showMode ? c.user : (c.topic || c.user);\n          // If filter function is provided, filter out the items\n          // which don't satisfy the condition.\n          if (this.props.filterFunc && this.props.filter) {\n            const filterOn = [key];\n            if (c.private && c.private.comment) {\n              filterOn.push(('' + c.private.comment).toLowerCase());\n            }\n            if (c.public && c.public.fn) {\n              filterOn.push(('' + c.public.fn).toLowerCase());\n            }\n            if (!this.props.filterFunc(this.props.filter, filterOn)) {\n              return;\n            }\n          }\n\n          const isChannel = Tinode.isChannelTopicName(key);\n          const selected = showCheckmark ?\n            (this.props.topicSelected.indexOf(key) > -1) :\n            (this.props.topicSelected === key);\n          const badges = [];\n          if (this.props.showMode) {\n            if (key == this.props.myUserId) {\n              badges.push({name: formatMessage(messages.badge_you), color: 'green'});\n            }\n            if (c.acs && c.acs.isOwner()) {\n              badges.push({name: formatMessage(messages.badge_owner), color: 'blue'});\n            }\n          }\n\n          const comment = Array.isArray(c.private) ?\n            c.private.join(',') : (c.private ? c.private.comment : null);\n          let preview;\n          let deliveryStatus;\n          if (!this.props.showMode && c.latestMessage) {\n            const msg = c.latestMessage(true);\n            if (msg) {\n              deliveryStatus = msg._status || c.msgStatus(msg, true);\n              preview = typeof msg.content == 'string' ?\n                msg.content.substr(0, MESSAGE_PREVIEW_LENGTH) :\n                Drafty.preview(msg.content, MESSAGE_PREVIEW_LENGTH);\n            }\n          }\n          contactNodes.push(\n            <Contact\n              tinode={this.props.tinode}\n              title={c.public ? c.public.fn : null}\n              avatar={makeImageUrl(c.public ? c.public.photo : null)}\n              comment={comment}\n              preview={preview}\n              received={deliveryStatus}\n              unread={this.props.showUnread ? c.unread : 0}\n              now={c.online && this.props.connected}\n              acs={c.acs}\n              showMode={this.props.showMode}\n              badges={badges}\n              showCheckmark={showCheckmark}\n              selected={selected}\n              showOnline={this.props.showOnline && !isChannel}\n              isChannel={isChannel}\n              onSelected={this.props.onTopicSelected}\n              showContextMenu={this.props.showContextMenu}\n              isVerified={c.trusted && c.trusted.verified}\n              isStaff={c.trusted && c.trusted.staff}\n              isDangerous={c.trusted && c.trusted.danger}\n              item={key}\n              index={contactNodes.length}\n              key={key} />\n          );\n          contactsCount ++;\n        }\n      }, this);\n    }\n\n    return (\n      <div className={this.props.noScroll ? null : \"scrollable-panel\"}>\n        {contactsCount == 0 ?\n          <div className=\"center-medium-text\"\n            dangerouslySetInnerHTML={{__html: this.props.emptyListMessage}} />\n          :\n          null\n        }\n        {contactNodes.length > 0 ?\n          <ul className=\"contact-box\">\n            {contactNodes}\n          </ul>\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ContactList);\n","// The X menu to be displayed in title bars.\nimport React from 'react';\n\nexport default class MenuCancel extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n        <i className=\"material-icons\">close</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nimport MenuCancel from './menu-cancel.jsx';\n\nexport default class ErrorPanel extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      show: false,\n    };\n\n    this.hide = this.hide.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.level !== this.props.level) {\n      this.setState({\n        show: !(!this.props.level)\n      });\n    }\n  }\n\n  hide() {\n    this.setState({show: false});\n    if (this.props.onClearError) {\n      this.props.onClearError();\n    }\n  }\n\n  render() {\n    const icons = {err: 'error', warn: 'warning', info: 'info'}\n    const level = icons[this.props.level] || '';\n    const className = 'info-box ' + level;\n    return (\n      <div className={className}>\n        <div className=\"icon\"><i className=\"material-icons\">{level}</i></div>\n        <span>\n          {this.props.text}\n          {this.props.action ?\n            <>\n              &#32;<a href=\"#\"\n                style={{ whiteSpace: 'nowrap' }}\n                onClick={(e) => {e.preventDefault(); this.props.action();}}>\n                {this.props.actionText}\n              </a>\n            </>\n          : null}\n        </span>\n        <div className=\"cancel\"><MenuCancel onCancel={this.hide} /></div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\n\nexport default class Chip extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel(this.props.topic, this.props.index);\n  }\n\n  render() {\n    const title = this.props.title || this.props.topic;\n    const className = this.props.invalid ? 'chip invalid' : 'chip';\n    return (\n      <div className={className}>\n        {this.props.noAvatar ?\n          <span className=\"spacer\" /> :\n          <div className=\"avatar-box\">\n            <LetterTile\n              tinode={this.props.tinode}\n              avatar={this.props.avatar || true}\n              topic={this.props.topic}\n              title={this.props.title} />\n          </div>\n        }\n        <span>{title}</span>\n        {this.props.onCancel && !this.props.required ?\n          <a href=\"#\" onClick={this.handleCancel} >&times;</a>\n          : <span className=\"spacer\" />}\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport Chip from './chip.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n/* BEGIN ChipInput: group membership widget */\nexport default class ChipInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = ChipInput.deriveStateFromProps(props);\n    this.state.input = '';\n    this.state.focused = false;\n\n    this.handleTextInput = this.handleTextInput.bind(this);\n    this.removeChipAt = this.removeChipAt.bind(this);\n    this.handleChipCancel = this.handleChipCancel.bind(this);\n    this.handleFocusGained = this.handleFocusGained.bind(this);\n    this.handleFocusLost = this.handleFocusLost.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  static deriveStateFromProps(props) {\n    return {\n      placeholder: props.chips ? '' : props.prompt,\n      sortedChips: ChipInput.sortChips(props.chips, props.staticMembers),\n      chipIndex: ChipInput.indexChips(props.chips)\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chips != this.props.chips ||\n      prevProps.staticMembers != this.props.staticMembers ||\n      prevProps.prompt != this.props.prompt) {\n      this.setState(ChipInput.deriveStateFromProps(this.props));\n    }\n    if (!prevState || this.props.chips.length > prevState.sortedChips.length) {\n      this.setState({input: ''});\n    }\n  }\n\n  // Map chip index to user name\n  static indexChips(chips) {\n    const index = {};\n    let count = 0;\n    chips.map((item) => {\n      index[item.user] = count;\n      count ++;\n    });\n    return index;\n  }\n\n  // Have non-removable chips appear before all other chips.\n  static sortChips(chips, keep) {\n    const required = [];\n    const normal = [];\n    chips.map((item) => {\n      if (keep && keep.includes(item.user)) {\n        required.push(item);\n      } else {\n        normal.push(item);\n      }\n    });\n    return required.concat(normal);\n  }\n\n  handleTextInput(e) {\n    this.setState({input: e.target.value});\n    if (this.props.filterFunc) {\n      this.props.filterFunc(e.target.value);\n    }\n  }\n\n  removeChipAt(idx) {\n    const removed = this.state.sortedChips[idx];\n    this.props.onChipRemoved(removed.user, this.state.chipIndex[removed.user]);\n  }\n\n  handleChipCancel(item, idx) {\n    this.removeChipAt(idx);\n  }\n\n  handleFocusGained() {\n    this.setState({focused: true});\n  }\n\n  handleFocusLost() {\n    this.setState({focused: false});\n    if (this.props.onFocusLost) {\n      this.props.onFocusLost(this.state.input);\n    }\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Backspace') {\n      if (this.state.input.length == 0 && this.state.sortedChips.length > 0) {\n        const at = this.state.sortedChips.length - 1;\n        if (this.state.sortedChips[at].user !== this.props.staticMembers) {\n          this.removeChipAt(at);\n        }\n      }\n    } else if (e.key === 'Enter') {\n      if (this.props.onEnter) {\n        this.props.onEnter(this.state.input);\n      }\n    } else if (e.key === 'Escape') {\n      if (this.props.onCancel) {\n        this.props.onCancel();\n      }\n    }\n  }\n\n  render() {\n    const chips = [];\n    let count = 0;\n    const staticMembers = this.props.staticMembers || [];\n    this.state.sortedChips.map((item) => {\n      chips.push(\n        <Chip\n          tinode={this.props.tinode}\n          onCancel={this.handleChipCancel}\n          avatar={makeImageUrl(item.public ? item.public.photo : null)}\n          title={item.public ? item.public.fn : undefined}\n          noAvatar={this.props.avatarDisabled}\n          topic={item.user}\n          required={staticMembers.includes(item.user)}\n          invalid={item.invalid}\n          index={count}\n          key={item.user} />\n      );\n      count++;\n    });\n    const className = \"chip-input\" + (this.state.focused ? ' focused' : '');\n    const autoFocus = !(this.props.tabIndex > 0);\n    return (\n      <div className={className}>\n        {chips}\n        <input type=\"text\"\n          placeholder={this.state.placeholder}\n          onChange={this.handleTextInput}\n          onFocus={this.handleFocusGained}\n          onBlur={this.handleFocusLost}\n          onKeyDown={this.handleKeyDown}\n          value={this.state.input}\n          tabIndex={this.props.tabIndex}\n          autoFocus={autoFocus} />\n      </div>\n    );\n  }\n};\n","// GroupMembers: control for managing a list of group members.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\nimport ContactList from './contact-list.jsx';\n\nconst messages = defineMessages({\n  no_contacts: {\n    id: 'no_contacts',\n    defaultMessage: 'You have no contacts :-(',\n    description: 'Shown in ContactsView when the user has no contacts'\n  },\n  contacts_not_found_short: {\n    id: 'contacts_not_found_short',\n    defaultMessage: \"No contacts match ''{query}''\",\n    description: 'Shown in ContactsView when search returned no results'\n  }\n});\n\nclass GroupManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Array of topic members\n      members: props.members,\n      index: GroupManager.indexMembers(props.members),\n      staticMembers: GroupManager.staticMembers(props.members, props.keepInitialMembers, props.requiredMember),\n      contactFilter: '',\n      noContactsMessage: props.intl.formatMessage(messages.no_contacts),\n      selectedContacts: GroupManager.selectedContacts(props.members)\n    };\n\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleMemberRemoved = this.handleMemberRemoved.bind(this);\n    this.handleContactFilter = this.handleContactFilter.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static indexMembers(members) {\n    let index = {};\n    members.map((m) => {\n      index[m.user] = {delta: 0, present: true}; // Delta: 0 unchanged, +1 added, -1 removed\n    });\n    return index;\n  }\n\n  static staticMembers(members, keepInitial, requiredMember) {\n    let stat = [];\n    members.map((m) => {\n      if (keepInitial || m.user == requiredMember) {\n        stat.push(m.user);\n      }\n    });\n    return stat;\n  }\n\n  static selectedContacts(members) {\n    let sel = [];\n    members.map((m) => {\n      sel.push(m.user);\n    });\n    return sel;\n  }\n\n  handleContactSelected(userId, index) {\n    let status = this.state.index[userId];\n    if (status) {\n      if (status.present) {\n        // Prevent duplicate members\n        return;\n      }\n      status.delta += 1;\n      status.present = true;\n    } else {\n      status = {delta: 1, present: true};\n    }\n\n    let m = this.state.members.slice();\n    m.push(this.props.contacts[index]);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleMemberRemoved(userId, index) {\n    const status = this.state.index[userId];\n    if (!status || !status.present) {\n      return;\n    }\n    status.present = false;\n    status.delta -= 1;\n\n    let m = this.state.members.slice();\n    m.splice(index, 1);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleContactFilter(val) {\n    const {formatMessage} = this.props.intl;\n    const msg = !val ?\n      formatMessage(messages.no_contacts) :\n      formatMessage(messages.contacts_not_found_short, {query: val});\n\n    this.setState({contactFilter: val, noContactsMessage: msg});\n  }\n\n  static doContactFiltering(filter, values) {\n    if (filter) {\n      for (let i=0; i<values.length; i++) {\n        if (values[i].indexOf(filter) >= 0) {\n          return true;\n        }\n      }\n      return false;\n    }\n    return true;\n  }\n\n  handleSubmit() {\n    var instance = this;\n    var members = [];\n    var added = [];\n    var removed = [];\n\n    var keys = Object.keys(this.state.index);\n    keys.map(function(k) {\n      if (instance.state.index[k].present) {\n        members.push(k);\n      }\n\n      if (instance.state.index[k].delta > 0) {\n        added.push(k);\n      } else if (instance.state.index[k].delta < 0) {\n        removed.push(k);\n      }\n    });\n    this.props.onSubmit(members, added, removed);\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <div id=\"group-manager\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_group_members\" defaultMessage=\"Group Members\" description=\"Section title\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ChipInput\n            tinode={this.props.tinode}\n            chips={this.state.members}\n            staticMembers={this.state.staticMembers}\n            prompt=\"add members\"\n            filterFunc={this.handleContactFilter}\n            onChipRemoved={this.handleMemberRemoved} />\n        </div>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_all_contacts\" defaultMessage=\"All Contacts\"\n              description=\"Section title [All Contacts]\" />\n          </label>\n        </div>\n        <ContactList\n          tinode={this.props.tinode}\n          contacts={this.props.contacts}\n          myUserId={this.props.myUserId}\n          topicSelected={this.state.selectedContacts}\n          filter={this.state.contactFilter}\n          filterFunc={GroupManager.doContactFiltering}\n          emptyListMessage={this.state.noContactsMessage}\n          showOnline={false}\n          showUnread={false}\n          onTopicSelected={this.handleContactSelected} />\n        <div id=\"group-manager-buttons\" className=\"panel-form-row\">\n          <button className=\"secondary\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(GroupManager);\n","// PermissionsEditor: Component for editing permissions\n// <PermissionsEditor mode=\"JWROD\" skip=\"O\" onChange={this.handleCheckboxTest} />\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport CheckBox from './checkbox.jsx';\nimport Contact from './contact.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n// Translatable permission names.\nconst messages = defineMessages({\n  joiner: {\n    id: 'permission_join',\n    defaultMessage: \"Join ({val})\",\n    description: 'Name of J permission'\n  },\n  reader: {\n    id: 'permission_read',\n    defaultMessage: \"Read ({val})\",\n    description: 'Name of R permission'\n  },\n  writer: {\n    id: 'permission_write',\n    defaultMessage: \"Write ({val})\",\n    description: 'Name of W permission'\n  },\n  preser: {\n    id: 'permission_pres',\n    defaultMessage: \"Get notified ({val})\",\n    description: 'Name of P permission'\n  },\n  approver: {\n    id: 'permission_admin',\n    defaultMessage: \"Approve ({val})\",\n    description: 'Name of A permission'\n  },\n  sharer: {\n    id: 'permission_share',\n    defaultMessage: \"Share ({val})\",\n    description: 'Name of S permission'\n  },\n  deleter: {\n    id: 'permission_delete',\n    defaultMessage: \"Delete ({val})\",\n    description: 'Name of D permission'\n  },\n  owner: {\n    id: 'permission_owner',\n    defaultMessage: \"Owner ({val})\",\n    description: 'Name of O permission'\n  }\n});\n\nclass PermissionsEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mode: (props.mode || '').replace('N', '')\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(val) {\n    let mode = this.state.mode;\n    const idx = mode.indexOf(val);\n    if (idx == -1) {\n      mode += val;\n    } else {\n      mode = mode.replace(val, '');\n    }\n    this.setState({mode: mode});\n  }\n\n  handleSubmit() {\n    // Normalize string, otherwise cannot check if mode has changed.\n    const mode = (this.state.mode || 'N').split('').sort().join('');\n    const before = (this.props.mode || 'N').split('').sort().join('')\n    if (mode !== before) {\n      this.props.onSubmit(mode);\n    } else {\n      this.props.onCancel();\n    }\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const all = 'JRWPASDO';\n    const names = {\n      'J': formatMessage(messages.joiner, {val: 'J'}),\n      'R': formatMessage(messages.reader, {val: 'R'}),\n      'W': formatMessage(messages.writer, {val: 'W'}),\n      'P': formatMessage(messages.preser, {val: 'P'}),\n      'A': formatMessage(messages.approver, {val: 'A'}),\n      'S': formatMessage(messages.sharer, {val: 'S'}),\n      'D': formatMessage(messages.deleter, {val: 'D'}),\n      'O': formatMessage(messages.owner, {val: 'O'})\n    };\n\n    let skip = this.props.skip || '';\n    let mode = this.state.mode;\n    let compare = (this.props.compare || '').replace('N', '');\n    let items = [];\n    for (let i=0; i<all.length; i++) {\n      let c = all.charAt(i);\n      if (skip.indexOf(c) >= 0 && mode.indexOf(c) < 0) {\n        // Permission is marked as inactive: hide unchecked permissions, disable checked permissions\n        continue;\n      }\n      items.push(\n        <tr key={c}>\n          <td>{names[c]}</td>\n          <td className=\"checkbox\">{skip.indexOf(c) < 0 ?\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} onChange={this.handleChange}/>\n            :\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} />\n          }</td>{this.props.compare ? <td className=\"checkbox\">\n            <CheckBox name={c} checked={(compare.indexOf(c) >= 0)}/>\n          </td> : null}\n        </tr>\n      );\n    }\n\n    return (\n      <div className=\"panel-form-column\">\n        {this.props.userTitle ?\n          <ul className=\"contact-box small\"><Contact\n            tinode={this.props.tinode}\n            item={this.props.item}\n            title={this.props.userTitle}\n            small={true}\n            avatar={makeImageUrl(this.props.userAvatar ? this.props.userAvatar : null)} /></ul> : null}\n        <label className=\"small\"><FormattedMessage id=\"title_permissions\"\n          defaultMessage=\"Permissions\" description=\"Section title\"/></label>\n        <table className=\"permission-editor\">\n        {this.props.compare ?\n          <thead><tr>\n            <th></th><th>{this.props.modeTitle}</th>\n            <th>{this.props.compareTitle}</th>\n          </tr></thead> :\n          null}\n        <tbody>\n          {items}\n        </tbody></table>\n        <br />\n        <div className=\"dialog-buttons\">\n          <button className=\"outline\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(PermissionsEditor);\n","// Image zoom and crop widget.\n\nimport React from 'react';\n\nconst DEFAULT_MAX_ZOOM = 2.5;\n\nexport default class Cropper extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Coordinates of the top left corner of the image in container coordinates.\n      panX: 0,\n      panY: 0,\n      // Origin of the zoom in image coordinates.\n      originX: 0,\n      originY: 0,\n      // Zoom scale.\n      zoom: 1,\n      // Zoom min and max.\n      minZoom: 0,\n      maxZoom: DEFAULT_MAX_ZOOM,\n    };\n\n    // References to DOM elements for hooking up events and getting screen dimensions.\n    // The transparent element which captures mouse moves (moves with the image).\n    this.overlay = React.createRef();\n    // The image cutout window or view port (static).\n    this.cutout = React.createRef();\n    // Scaled and translated image preview.\n    this.preview = React.createRef();\n    // The main container (static).\n    this.boundingBox = React.createRef();\n\n    // The original image width and height before any scaling.\n    this.imageWidth = 0;\n    this.imageHeight = 0;\n\n    // Mouse position when dragging.\n    this.mouseX = 0\n    this.mouseY = 0;\n    // Length of the previous mouse move when dragging.\n    this.prevDistance = 0;\n\n    // Bounding rectangles of static elements.\n    this.cutoutRect = {};\n    this.bBoxRect = {};\n    // Center of the bounding box.\n    this.originX = 0;\n    this.originY = 0;\n\n    this.initScaling = this.initScaling.bind(this);\n    this.onZoom = this.onZoom.bind(this);\n    this.handleZoom = this.handleZoom.bind(this);\n    this.mouseDown = this.mouseDown.bind(this);\n    this.mouseUp = this.mouseUp.bind(this);\n    this.mouseMove = this.mouseMove.bind(this);\n    this.mouseTouch = this.mouseTouch.bind(this);\n    this.positionAll = this.positionAll.bind(this);\n    this.translate = this.translate.bind(this);\n  }\n\n  componentDidMount() {\n    this.overlay.current.addEventListener('mousedown', this.mouseDown, { passive: true });\n    this.overlay.current.addEventListener('touchstart', this.mouseDown, { passive: true });\n\n    // The rectangle position is in viewport coordinates.\n    this.bBoxRect = this.boundingBox.current.getBoundingClientRect();\n    // Center of the bounding box in container coordinates.\n    this.originX = this.bBoxRect.width / 2;\n    this.originY = this.bBoxRect.height / 2;\n\n    // The rectangle position is in viewport coordinates.\n    this.cutoutRect = this.cutout.current.getBoundingClientRect();\n  }\n\n  componentWillUnmount() {\n    this.overlay.current.removeEventListener('mousedown', this.mouseDown);\n    this.overlay.current.removeEventListener('touchstart', this.mouseDown);\n  }\n\n  // Position all elements.\n  positionAll(panX, panY, zoom) {\n    // Zoom origin in image preview coordinates.\n    this.setState({\n      panX: panX,\n      panY: panY,\n      zoom: zoom,\n      originX: this.originX - panX,\n      originY: this.originY - panY,\n    });\n\n    // Pass cut out coordinates to caller.\n    const left = (this.originX - panX) * zoom - this.originX;\n    const top = (this.originY - panY) * zoom - this.originY;\n    this.props.onChange(\n      (left + this.cutoutRect.left - this.bBoxRect.left) / zoom,\n      (top + this.cutoutRect.top - this.bBoxRect.top) / zoom,\n      this.cutoutRect.width / zoom,\n      this.cutoutRect.height / zoom,\n      zoom);\n  }\n\n  // Check if new location is within the limits.\n  static checkBound(currPan, img, cutout, delta) {\n    let nextDiff = Math.min(0, cutout[0] - img[0] - delta, img[1] - cutout[1] + delta);\n    if (nextDiff == 0) {\n      // Cutout is completely within the image.\n      currPan += delta;\n    } else if (Math.min(0, cutout[0] - img[0], img[1] - cutout[1]) < nextDiff) {\n      // Cutout is outside of the range but closer to the bound.\n      currPan += delta;\n    }\n    return currPan;\n  }\n\n  initScaling() {\n    // Initialize components.\n    const imgRect = this.preview.current.getBoundingClientRect();\n\n    this.imageWidth = imgRect.width;\n    this.imageHeight = imgRect.height;\n\n    // Set zoom slider's min and max values. Make sure the scaled image cannot be smaller than the cutout.\n    const minZoom = Math.max(this.cutoutRect.width / imgRect.width, this.cutoutRect.height / imgRect.height);\n    this.setState({\n      minZoom: minZoom,\n      maxZoom: Math.max(DEFAULT_MAX_ZOOM, minZoom + 1)\n    });\n\n    // Initial zoom level fills the bounding box at the smallest image dimension and overflows the largest, i.e. \"fill\" not \"fit\".\n    const zoom = Math.max(this.bBoxRect.width / imgRect.width, this.bBoxRect.height / imgRect.height);\n    // Converting from viewport coordinates to container, then panning.\n    const panX = this.cutoutRect.left - this.bBoxRect.left -\n      (imgRect.width - this.cutoutRect.width) / 2;\n    const panY = this.cutoutRect.top - this.bBoxRect.top -\n      (imgRect.height - this.cutoutRect.height) / 2;\n\n    this.positionAll(panX, panY, zoom);\n  }\n\n  onZoom(e) {\n    this.handleZoom(e.target.value);\n  }\n\n  handleZoom(zoom) {\n    let panX = this.state.panX;\n    let panY = this.state.panY;\n\n    // Ensure that the image at the new zoom is not outside of the cutout boundaries.\n    // Calculate image coordinates at the new zoom.\n    const imgLeft = this.originX - (this.originX - panX) * zoom;\n    const imgRight = imgLeft + this.imageWidth * zoom;\n    // Cutout in the same coordinates as the image.\n    const coLeft = this.cutoutRect.left - this.bBoxRect.left;\n    const coRight = coLeft + this.cutoutRect.width;\n    if (coLeft < imgLeft) {\n      panX -= imgLeft - coLeft;\n    } else if (coRight > imgRight) {\n      panX += coRight - imgRight;\n    }\n    const imgTop = this.originY - (this.originY - panY) * zoom;\n    const imgBottom = imgTop + this.imageHeight * zoom;\n    const coTop = this.cutoutRect.top - this.bBoxRect.top;\n    const coBottom = coTop + this.cutoutRect.height;\n    if (coTop < imgTop) {\n      panY -= imgTop - coTop;\n    } else if (coBottom > imgBottom) {\n      panY += coBottom - imgBottom;\n    }\n\n    this.positionAll(panX, panY, zoom);\n  }\n\n  mouseDown(e) {\n    if (e.touches) {\n      this.mouseX = e.touches[0].pageX;\n      this.mouseY = e.touches[0].pageY;\n    } else {\n      this.mouseX = e.pageX;\n      this.mouseY = e.pageY;\n    }\n\n    window.addEventListener('mousemove', this.mouseMove, { passive: false });\n    window.addEventListener('touchmove', this.mouseTouch, { passive: false });\n    window.addEventListener('mouseup', this.mouseUp, { passive: true });\n    window.addEventListener('touchend', this.mouseUp, { passive: true });\n    // Disable text selection in the entire document.\n    document.body.style['userSelect'] = 'none';\n  }\n\n  // Perform image panning.\n  translate(pageX, pageY) {\n    const dX = pageX - this.mouseX;\n    const dY = pageY - this.mouseY;\n\n    this.mouseX = pageX;\n    this.mouseY = pageY;\n\n    // Make sure the image is within the cutout window.\n    const imgRect = this.preview.current.getBoundingClientRect();\n\n    // Check if the new position is within the boundaries, and if not if it's closer to them.\n    let panX = Cropper.checkBound(this.state.panX, [imgRect.left, imgRect.right],\n      [this.cutoutRect.left, this.cutoutRect.right], dX);\n    let panY = Cropper.checkBound(this.state.panY, [imgRect.top, imgRect.bottom],\n      [this.cutoutRect.top, this.cutoutRect.bottom], dY);\n\n    this.positionAll(panX, panY, this.state.zoom);\n  }\n\n  // Image panning.\n  mouseMove(e) {\n    e.preventDefault();\n    this.translate(e.pageX, e.pageY);\n  }\n\n  mouseTouch(e) {\n    e.preventDefault();\n\n    if (e.touches.length == 1) {\n      this.translate(e.touches[0].pageX, e.touches[0].pageY);\n      return;\n    }\n\n    // Image zooming by pinching.\n    const [touch0, touch1] = e.touches;\n    const distance = Math.sqrt((touch0.pageX - touch1.pageX) * (touch0.pageX - touch1.pageX) +\n      (touch0.pageY - touch1.pageY) * (touch0.pageY - touch1.pageY));\n\n    if (!this.prevDistance) {\n        this.prevDistance = distance / this.state.zoom;\n    }\n\n    let scale = (distance / this.prevDistance);\n    this.handleZoom(Math.max(this.minZoom, Math.min(this.maxZoom, scale)));\n  }\n\n  mouseUp(e) {\n    window.removeEventListener('mousemove', this.mouseMove);\n    window.removeEventListener('touchmove', this.mouseTouch);\n    window.removeEventListener('mouseup', this.mouseUp);\n    window.removeEventListener('touchend', this.mouseUp);\n    // Re-enable text selection.\n    document.body.style['userSelect'] = '';\n\n    this.positionAll(this.state.panX, this.state.panY, this.state.zoom);\n  }\n\n  render() {\n    // transform3d: position and scale.\n    const t3d = `translate3d(${this.state.panX}px, ${this.state.panY}px, 0) scale(${this.state.zoom})`;\n    // transformOrigin: zoom origin.\n    const orig = `${this.state.originX}px ${this.state.originY}px`;\n\n    // Overlay position and size are exactly equal to the position and size of the transformed image\n    // except it uses different coordinates.\n    const overlay = {\n      top: `${this.originY - this.state.originY * this.state.zoom}px`,\n      left: `${this.originX - this.state.originX * this.state.zoom}px`,\n      width: `${this.imageWidth * this.state.zoom}px`,\n      height: `${this.imageHeight * this.state.zoom}px`\n    };\n    return (\n      <div className=\"cropper\">\n        <div className=\"bounding-box\" ref={this.boundingBox}>\n          <img src={this.props.source} className=\"preview\" alt=\"\"\n            style={{transform: t3d, transformOrigin: orig}} ref={this.preview} onLoad={this.initScaling} />\n          <div className=\"cutout circle\" ref={this.cutout} />\n          <div className=\"overlay\" style={overlay} ref={this.overlay} />\n        </div>\n        <div className=\"zoom-wrapper\">\n          <input type=\"range\" className=\"zoomer\"\n            step=\"0.001\" min={this.state.minZoom} max={this.state.maxZoom} value={this.state.zoom} onChange={this.onZoom} />\n        </div>\n      </div>\n    );\n  }\n}\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Cropper from './cropper.jsx';\nimport { imageCrop } from '../lib/blob-helpers.js';\n\nexport default class AvatarCrop extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      top: 0,\n      left: 0,\n      width: 0,\n      height: 0,\n      scale: 1\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  // Cut out in image coordinates and desired scale factor.\n  handleChange(left, top, width, height, scale) {\n    this.setState({\n      left: left,\n      top: top,\n      width: width,\n      height: height,\n      scale: scale\n    });\n  }\n\n  handleSubmit() {\n    imageCrop(this.props.mime, this.props.avatar,\n      this.state.left, this.state.top, this.state.width, this.state.height,\n      this.state.scale)\n      .then(img => {\n        this.props.onSubmit(img.mime, img.blob, img.width, img.height);\n      })\n      .catch(err => {\n        this.props.onError(err);\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <Cropper\n            source={this.props.avatar}\n            onChange={this.handleChange} />\n        </div>\n        <div className=\"dialog-buttons\">\n          {this.props.onCancel ?\n            <button className=\"secondary\" onClick={this.props.onCancel}>\n              <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n            </button>\n            : null}\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n","// Password with a visiblity toggle.\nimport React from 'react';\n\nexport default class VisiblePassword extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: this.props.value,\n      visible: false\n    };\n\n    this.handleVisibility = this.handleVisibility.bind(this);\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n    if (this.props.onChange) {\n      this.props.onChange(e);\n    }\n  }\n\n  handleVisibility(e) {\n    e.preventDefault();\n    this.setState({visible: !this.state.visible});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode == 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, visible: false});\n      if (this.props.onFinished) {\n        this.props.onFinished();\n      }\n    } else if (e.keyCode == 13) {\n      // Enter pressed\n      this.handleEditingFinished();\n    }\n  }\n\n  handleEditingFinished(e) {\n    if (e) {\n      let currentTarget = e.currentTarget;\n      setTimeout(() => {\n        if (!currentTarget.contains(document.activeElement)) {\n          if (this.props.onFinished) {\n            this.props.onFinished(this.state.value);\n          }\n        }\n      }, 0);\n    } else if (this.props.onFinished) {\n      this.props.onFinished(this.state.value.trim());\n    }\n  }\n\n  render() {\n    return (\n      <div tabIndex=\"-1\" className=\"group-focus\"\n        onBlur={this.handleEditingFinished}>\n        <input className=\"with-visibility\"\n          type={this.state.visible ? \"text\" : \"password\"}\n          value={this.state.value}\n          placeholder={this.props.placeholder}\n          required={this.props.required ? 'required' : ''}\n          autoFocus={this.props.autoFocus ? 'autoFocus' : ''}\n          autoComplete={this.props.autoComplete}\n          onChange={this.handeTextChange}\n          onKeyDown={this.handleKeyDown} />\n        <span onClick={this.handleVisibility}>\n          <i className=\"material-icons clickable light-gray\">\n            {this.state.visible ? 'visibility' : 'visibility_off'}\n          </i>\n        </span>\n      </div>\n    );\n  }\n}\n","// In-place text editor. Shows text with an icon which toggles it into an input field.\nimport React from 'react';\n\nimport VisiblePassword from './visible-password.jsx';\n\nexport default class InPlaceEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selfRef = React.createRef();\n\n    this.state = {\n      active: props.active,\n      initialValue: props.value || '',\n      value: props.value || ''\n    };\n\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleStartEditing = this.handleStartEditing.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n    this.handlePasswordFinished = this.handlePasswordFinished.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // If text has changed while in read mode, update text and discard changes.\n    // Ignore update if in edit mode.\n    const newValue = this.props.value || '';\n    if (prevState.initialValue != newValue && !prevState.active) {\n      this.setState({\n        initialValue: newValue,\n        value: newValue\n      });\n    }\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value || ''});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, active: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleEditingFinished(e);\n    }\n  }\n\n   handleStartEditing() {\n    if (!this.props.readOnly) {\n      this.setState({active: true}, () => {\n        if (this.selfRef.current) {\n          this.selfRef.current.focus();\n        }\n      });\n    }\n  }\n\n  handleEditingFinished(event) {\n    const value = this.state.value.trim();\n    if (this.props.required && (!event.target.checkValidity() || !value)) {\n      // Empty input\n      this.setState({value: this.props.value, active: false});\n      return;\n    }\n    this.setState({active: false});\n    if ((value || this.props.value) && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  handlePasswordFinished(value) {\n    this.setState({active: false});\n    if (value && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  render() {\n    if (!this.state.active) {\n      let spanText = this.props.type == 'password' ? '••••••••' : this.state.value;\n      let spanClass = 'in-place-edit' + (this.props.readOnly ? ' disabled' : '');\n      if (!spanText) {\n        spanText = this.props.placeholder;\n        spanClass += ' placeholder';\n      }\n      if (!this.props.multiline || this.props.multiline == 1) {\n        spanClass += ' short';\n      }\n\n      return (<span className={spanClass} onClick={this.handleStartEditing}>\n        <span>{spanText}</span>\n      </span>);\n    }\n\n    let element;\n    const attr = {};\n    if (this.props.type == 'password') {\n      element = VisiblePassword;\n      attr.onFinished = this.handlePasswordFinished;\n    } else {\n      if (this.props.multiline > 1) {\n        element = 'textarea';\n        attr.rows = this.props.multiline;\n        attr.className = 'inplace-edit';\n      } else {\n        element = 'input';\n        attr.type = this.props.type || 'text';\n      }\n      attr.value = this.state.value;\n      attr.onChange = this.handeTextChange;\n      attr.onKeyDown = this.handleKeyDown;\n      attr.onBlur = this.handleEditingFinished;\n    }\n    attr.placeholder = this.props.placeholder;\n    attr.required = this.props.required ? 'required' : '';\n    attr.autoComplete = this.props.autoComplete;\n    attr.autoFocus = true;\n    attr.ref = this.selfRef;\n\n    return React.createElement(element, attr, null);\n  }\n};\n","// TagManager: edit topic or user tags.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\n\nimport { MAX_TAG_COUNT, MAX_TAG_LENGTH, MIN_TAG_LENGTH } from '../config.js';\nimport { arrayEqual } from '../lib/utils.js';\n\nexport default class TagManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tags: this.props.tags || [],\n      tagInput: '',\n      activated: this.props.activated\n    };\n\n    this.handleTagInput = this.handleTagInput.bind(this);\n    this.handleAddTag = this.handleAddTag.bind(this);\n    this.handleRemoveTag = this.handleRemoveTag.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const tags = nextProps.tags || [];\n    if (!arrayEqual(tags, prevState.tags) && !prevState.activated) {\n      return {tags: tags};\n    }\n    return null;\n  }\n\n  handleTagInput(text) {\n    this.setState({tagInput: text});\n    if (text.length > 0) {\n      const last = text[text.length-1];\n      if (text[0] == '\"') {\n        // This is a quoted string.\n        if (text.length > 1 && last == '\"') {\n          this.handleAddTag(text.substring(1, text.length-1));\n        }\n      } else if (last == ',' || last == ' ' || last == ';' || last == '\"') {\n        // User entered ',', ' ' or ';'\n        this.handleAddTag(text.substring(0, text.length-1).trim());\n      }\n    }\n  }\n\n  handleAddTag(tag) {\n    const maxTagCount = this.props.tinode.getServerLimit('maxTagCount', MAX_TAG_COUNT);\n\n    if (tag.length > 0 && this.state.tags.length < maxTagCount) {\n      const tags = this.state.tags.slice(0);\n      tags.push(tag);\n\n      this.setState({tags: tags, tagInput: ''});\n      if (this.props.onTagsChanged) {\n        this.props.onTagsChanged(tags);\n      }\n      return tags;\n    }\n    return this.state.tags;\n  }\n\n  handleRemoveTag(tag, index) {\n    const tags = this.state.tags.slice(0);\n    tags.splice(index, 1);\n    this.setState({tags: tags});\n    if (this.props.onTagsChanged) {\n      this.props.onTagsChanged(tags);\n    }\n  }\n\n  handleSubmit() {\n    // Add unprocessed input to tags, submit the list.\n    this.props.onSubmit(this.handleAddTag(this.state.tagInput.trim()));\n    this.setState({activated: false, tags: this.props.tags || []});\n  }\n\n  handleCancel() {\n    this.setState({activated: false, tagInput: '', tags: this.props.tags || []});\n    if (this.props.onCancel) {\n      this.props.onCancel();\n    }\n  }\n\n  render() {\n    const minTagLength = this.props.tinode.getServerLimit('minTagLength', MIN_TAG_LENGTH);\n    const maxTagLength = this.props.tinode.getServerLimit('maxTagLength', MAX_TAG_LENGTH);\n\n    let tags = [];\n    if (this.state.activated) {\n      this.state.tags.map((tag) => {\n        tags.push({user: tag, invalid: (tag.length < minTagLength || tag.length > maxTagLength)});\n      });\n    } else {\n      this.state.tags.map((tag) => {\n        tags.push(<span className=\"badge\" key={tags.length}>{tag}</span>);\n      });\n      if (tags.length == 0) {\n        tags = (\n          <i>\n            <FormattedMessage id=\"tags_not_found\" defaultMessage=\"No tags defined. Add some.\" description=\"\" />\n          </i>\n        );\n      }\n    }\n    return (\n      <div className=\"panel-form-column\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">{this.props.title}</label>\n        </div>\n        {this.state.activated ?\n        <div>\n          <FormattedMessage id=\"tags_editor_no_tags\" defaultMessage=\"Add some tags\"\n            description=\"Tag editor prompt when no tags are found.\">{\n            (add_tags_prompt) => <ChipInput\n              tinode={this.props.tinode}\n              chips={tags}\n              avatarDisabled={true}\n              prompt={add_tags_prompt}\n              tabIndex={this.props.tabIndex}\n              onEnter={this.handleAddTag}\n              onFocusLost={this.handleAddTag}\n              onCancel={this.handleCancel}\n              onChipRemoved={this.handleRemoveTag}\n              filterFunc={this.handleTagInput} />\n          }</FormattedMessage>\n          {this.props.onSubmit || this.props.onCancel ?\n            <div id=\"tag-manager-buttons\" className=\"dialog-buttons panel-form-row\">\n              <button className=\"outline\" onClick={this.handleCancel}>\n                <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n              </button>\n              <button className=\"primary\" onClick={this.handleSubmit}>\n                <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n              </button>\n            </div>\n          : null}\n        </div>\n        :\n        <div className=\"quoted\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.setState({activated: true});}}>\n            <i className=\"material-icons\">edit</i> &nbsp;<FormattedMessage id=\"title_manage_tags\" defaultMessage=\"Manage\"\n              description=\"Section title for the list of tags\" />\n          </a>\n          <>{tags}</>\n        </div>\n      }\n      </div>\n    );\n  }\n};\n","// Widget for editing topic description.\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarCrop from './avatar-crop.jsx';\nimport AvatarUpload from './avatar-upload.jsx';\nimport InPlaceEdit from './in-place-edit.jsx';\nimport TagManager from './tag-manager.jsx';\n\nimport { AVATAR_SIZE, MAX_AVATAR_BYTES, MAX_EXTERN_ATTACHMENT_SIZE,\n  MAX_INBAND_ATTACHMENT_SIZE, MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH } from '../config.js';\nimport { imageScaled, blobToBase64, makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, theCard } from '../lib/utils.js';\n\nexport default class TopicDescEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    const acs = topic.getAccessMode();\n    this.state = {\n      isMe: Tinode.isMeTopicName(this.props.topic),\n      owner: acs && acs.isOwner(),\n      fullName: topic.public ? topic.public.fn : undefined,\n      private: topic.private ? topic.private.comment : null,\n      description: topic.public ? topic.public.note : undefined,\n      avatar: makeImageUrl(topic.public ? topic.public.photo : null),\n      tags: topic.tags() || [],\n      newAvatar: null,\n      newAvatarMime: null\n    };\n\n    this.previousOnTags = null;\n\n    this.tnNewTags = this.tnNewTags.bind(this);\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\n    this.handleImageUpdated = this.handleImageUpdated.bind(this);\n    this.handleAvatarCropped = this.handleAvatarCropped.bind(this);\n    this.handlePrivateUpdate = this.handlePrivateUpdate.bind(this);\n    this.handleDescriptionUpdate = this.handleDescriptionUpdate.bind(this);\n    this.uploadAvatar = this.uploadAvatar.bind(this);\n    this.handleAvatarCropCancel = this.handleAvatarCropCancel.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n  }\n\n  componentDidMount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    this.previousOnTags = topic.onTagsUpdated;\n    topic.onTagsUpdated = this.tnNewTags;\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    topic.onTagsUpdated = this.previousOnTags;\n  }\n\n  tnNewTags(tags) {\n    this.setState({tags: tags});\n  }\n\n  handleFullNameUpdate(fn) {\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\n    if (fn && this.state.fullName !== fn) {\n      this.setState({fullName: fn});\n      this.props.onUpdateTopicDesc(this.props.topic, theCard(fn, null));\n    }\n  }\n\n  handlePrivateUpdate(comment) {\n    comment = comment.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.private !== comment) {\n      this.setState({private: comment});\n      this.props.onUpdateTopicDesc(this.props.topic, null, comment || Tinode.DEL_CHAR);\n    }\n  }\n\n  handleDescriptionUpdate(desc) {\n    desc = desc.trim().substring(0, MAX_TOPIC_DESCRIPTION_LENGTH);\n    if (desc) {\n      this.setState({description: desc});\n      this.props.onUpdateTopicDesc(this.props.topic, theCard(null, null, null, desc));\n    }\n  }\n\n  // AvatarUpload widget has changed the avatar: received a new file or deleted the avatar.\n  handleImageUpdated(mime, img) {\n    // This will show the AvatarCropView is img is not null.\n    this.setState({newAvatar: img, newAvatarMime: mime});\n    if (!img) {\n      // Deleting the avatar.\n      this.setState({avatar: null});\n      this.props.onUpdateTopicDesc(this.props.topic, theCard(null, Tinode.DEL_CHAR));\n    }\n  }\n\n  // AvatarCropView calls this method when the user has cropped the image.\n  handleAvatarCropped(mime, blob, width, height) {\n    const url = blob ? URL.createObjectURL(blob) : null;\n    this.setState({avatar: url, newAvatar: null, newAvatarMime: null});\n    if (blob) {\n      this.uploadAvatar(mime, blob, width, height);\n    }\n  }\n\n  // Utility method for converting cropped avatar blob to bytes for sending inband or\n  // for uploading it to the server out of band.\n  uploadAvatar(mime, blob, width, height) {\n    const readyToUpload = (image) => {\n      let {mime, blob, width, height} = image;\n      if (blob.size > MAX_AVATAR_BYTES) {\n        // Too large to send inband - uploading out of band and sending as a link.\n        const uploader = this.props.tinode.getLargeFileHelper();\n\n        this.setState({uploading: true});\n        uploader.upload(blob)\n          .then((url) => {\n            this.props.onUpdateTopicDesc(this.props.topic, theCard(null, url));\n          })\n          .catch((err) => {\n            this.props.onError(err, 'err');\n          })\n          .finally(() => {\n            this.setState({uploading: false});\n          });\n      } else {\n        this.setState({uploading: true});\n        // Convert blob to base64-encoded bits.\n        blobToBase64(blob)\n          .then(b64 => {\n            const du = makeImageUrl({data: b64.bits, type: mime});\n            this.setState({source: du});\n            this.props.onUpdateTopicDesc(this.props.topic, theCard(null, du));\n            this.setState({uploading: false});\n          });\n      }\n    };\n\n    if (width > AVATAR_SIZE || height > AVATAR_SIZE || width != height) {\n      // Avatar is not square or too large even after cropping. Shrink it and make square.\n      imageScaled(blob, AVATAR_SIZE, AVATAR_SIZE, MAX_EXTERN_ATTACHMENT_SIZE, true)\n        .then(scaled => readyToUpload)\n        .catch(err => {\n          this.props.onError(err, 'err');\n        });\n    } else {\n      readyToUpload({mime: mime, blob: blob, width: width, height: height});\n    }\n  }\n\n  handleAvatarCropCancel(img) {\n    this.setState({newAvatar: null, newAvatarMime: null});\n  }\n\n  handleTagsUpdated(tags) {\n    // Check if tags have actually changed.\n    if (arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      return;\n    }\n    this.props.onUpdateTags(tags);\n  }\n\n  render() {\n    if (this.state.newAvatar) {\n      return (\n        <AvatarCrop\n          avatar={this.state.newAvatar}\n          mime={this.state.newAvatarMime}\n          onSubmit={this.handleAvatarCropped}\n          onCancel={this.handleAvatarCropCancel}\n          onError={this.props.onError} />\n      );\n    }\n\n    const editable = this.state.isMe || this.state.owner;\n\n    return (\n      <>\n      <div className=\"panel-form-column\">\n        <center>\n          <AvatarUpload\n            tinode={this.props.tinode}\n            avatar={this.state.avatar}\n            readOnly={!editable}\n            uid={this.props.topic}\n            title={this.state.fullName}\n            onImageUpdated={this.handleImageUpdated}\n            onError={this.props.onError} />\n        </center>\n        {this.state.isMe ?\n          <div className=\"group\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n              description=\"Label for full name editing\" />\n            </label>\n            <div>\n              <FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n                description=\"Input placeholder for person's full name\">{\n                (full_name_placeholder) => <InPlaceEdit\n                  placeholder={full_name_placeholder}\n                  value={this.state.fullName}\n                  required={true}\n                  onFinished={this.handleFullNameUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n        :\n          <>\n            <div className=\"group\">\n              <div><label className=\"small\">\n                <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                  description=\"Label for editing topic name\" />\n              </label></div>\n              <div>\n                <FormattedMessage id=\"topic_name_editing_placeholder\" defaultMessage=\"Freeform name of the group\"\n                  description=\"Prompt for entering topic name\">{\n                  (group_name_placeholder) => <InPlaceEdit\n                    placeholder={group_name_placeholder}\n                    readOnly={!editable}\n                    value={this.state.fullName}\n                    required={true}\n                    onFinished={this.handleFullNameUpdate} />\n                }</FormattedMessage>\n              </div>\n            </div>\n            <div className=\"group\">\n              <div>\n                <label className=\"small\">\n                  <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                    description=\"Label for editing 'private'\" />\n                </label>\n              </div>\n              <div>\n                <FormattedMessage id=\"private_editing_placeholder\" defaultMessage=\"Visible to you only\"\n                  description=\"Placeholder for editing 'private'\">{\n                  (private_placeholder) => <InPlaceEdit\n                    placeholder={private_placeholder}\n                    value={this.state.private}\n                    onFinished={this.handlePrivateUpdate} />\n                }</FormattedMessage>\n              </div>\n            </div>\n          </>\n        }\n        {editable || this.state.description ?\n          <div className=\"group\">\n            <div><label className=\"small\">\n              <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                description=\"Label for editing topic description\" />\n            </label></div>\n            <div>\n              <FormattedMessage id=\"description_editing_placeholder\"\n                defaultMessage=\"Description (optional)\"\n                description=\"Placeholder for editing topic description\">{\n                (private_placeholder) => <InPlaceEdit\n                  placeholder={private_placeholder}\n                  readOnly={!editable}\n                  value={this.state.description}\n                  multiline={2}\n                  onFinished={this.handleDescriptionUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n          : null\n        }\n      </div>\n      {editable ?\n        <>\n          <div className=\"hr\" />\n          <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (search & discovery)\"\n            description=\"Section title for TagManager\">{\n              (title_tag_manager) => <TagManager\n                tinode={this.props.tinode}\n                title={title_tag_manager}\n                activated={false}\n                tags={this.state.tags}\n                onSubmit={this.handleTagsUpdated} />\n          }</FormattedMessage>\n        </>\n        : null\n      }\n      </>\n    );\n  }\n};\n","// View for editing topic (including 'me' topic) parameters.\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport TopicDescEdit from '../widgets/topic-desc-edit.jsx';\n\nimport { arrayEqual, asEmail, asPhone } from '../lib/utils.js';\n\nexport default class TopicCommon extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    const acs = topic.getAccessMode();\n    this.state = {\n      isMe: this.props.topic == 'me',\n      owner: acs && acs.isOwner(),\n      credentials: (topic.getCredentials ? topic.getCredentials() : null) || [],\n      addCredActive: false,\n      addCredInvalid: false,\n      newCred: '',\n      tags: []\n    };\n\n    this.previousTagsUpdated = undefined;\n\n    this.onTagsUpdated = this.onTagsUpdated.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.tnCredsUpdated = this.tnCredsUpdated.bind(this);\n    this.handleCredChange = this.handleCredChange.bind(this);\n    this.handleCredKeyDown = this.handleCredKeyDown.bind(this);\n    this.handleCredEntered = this.handleCredEntered.bind(this);\n  }\n\n  // No need to separately handle component mount.\n  componentDidUpdate(props) {\n    const topic = this.props.tinode.getTopic(props.topic);\n    if (!topic) {\n      return;\n    }\n\n    topic.onCredsUpdated = this.tnCredsUpdated;\n\n    if (topic.onTagsUpdated != this.onTagsUpdated) {\n      if (topic.getType() == 'grp') {\n        this.previousTagsUpdated = topic.onTagsUpdated;\n        topic.onTagsUpdated = this.onTagsUpdated;\n      } else {\n        this.previousTagsUpdated = undefined;\n      }\n    }\n\n    if (this.state.topic != props.topic) {\n      this.setState({topic: props.topic});\n    }\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    topic.onCredsUpdated = undefined;\n    topic.onTagsUpdated = this.previousTagsUpdated;\n  }\n\n  tnCredsUpdated(creds) {\n    this.setState({credentials: creds || []});\n  }\n\n  handleCredChange(e) {\n    this.setState({newCred: e.target.value, addCredInvalid: false});\n  }\n\n  handleCredKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({newCred: '', addCredActive: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleCredEntered(e);\n    }\n  }\n\n  handleCredEntered(e) {\n    const value = this.state.newCred.trim();\n    if (!value) {\n      this.setState({addCredActive: false, addCredInvalid: false});\n      return;\n    }\n\n    let val = asPhone(value);\n    let method;\n    if (val) {\n      method = 'tel';\n    } else {\n      val = asEmail(value);\n      if (val) {\n        method = 'email';\n      }\n    }\n    if (method) {\n      this.props.onCredAdd(method, val);\n      this.setState({addCredActive: false, newCred: ''});\n    } else {\n      this.setState({addCredInvalid: true});\n    }\n  }\n\n  // Server informs that the tags have been updated.\n  onTagsUpdated(tags) {\n    this.setState({tags: tags});\n\n    if (this.previousTagsUpdated && this.previousTagsUpdated != this.onTagsUpdated) {\n      this.previousTagsUpdated(tags);\n    }\n  }\n\n  // Request server to change tags.\n  handleTagsUpdated(tags) {\n    if (!arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      this.props.onTopicTagsUpdateRequest(this.props.topic, tags);\n    }\n  }\n\n  render() {\n    const credentials = [];\n    if (this.state.isMe) {\n      this.state.credentials.map((cred) => {\n        credentials.push(\n          <div key={cred.meth + \":\" + cred.val + \":\" + cred.done}>{cred.meth}: <tt>{cred.val}</tt>\n            <span> {!cred.done ?\n              <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredConfirm(cred.meth, cred.val);}}>\n                <FormattedMessage id=\"validate_credential_action\" defaultMessage=\"confirm\"\n                  description=\"Validate credentail call to action\" />\n              </a>\n            : null} <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredDelete(cred.meth, cred.val);}}><i\n              className=\"material-icons gray\">delete_outline</i></a></span>\n          </div>\n        );\n      });\n    }\n\n    return (\n      <div className=\"scrollable-panel\">\n        <TopicDescEdit\n          tinode={this.props.tinode}\n          topic={this.props.topic}\n          onUpdateTopicDesc={this.props.onUpdateTopicDesc}\n          onUpdateTags={this.handleTagsUpdated}\n          onError={this.props.onError} />\n        {this.state.isMe ?\n          <>\n            <div className=\"hr\" />\n            <div className=\"panel-form-column\">\n              <label className=\"small\">\n                <FormattedMessage id=\"label_user_contacts\" defaultMessage=\"Contacts:\"\n                description=\"Label for user contacts\" />\n              </label>\n              <div className=\"quoted\">\n                {credentials}\n                {this.state.addCredActive ?\n                  <input type=\"text\" value={this.state.value}\n                    className={this.state.addCredInvalid ? 'invalid' : null}\n                    placeholder=\"Phone number or email\" required=\"required\" autoFocus\n                    onChange={this.handleCredChange} onKeyDown={this.handleCredKeyDown} onBlur={this.handleCredEntered} />\n                  : null}\n                <div>\n                  <a href=\"#\" onClick={(e) => {e.preventDefault(); this.setState({addCredActive: true});}}>\n                    <i className=\"material-icons\">add</i>\n                    <FormattedMessage id=\"button_add_another\" defaultMessage=\"Add another\" description=\"Call to action [+ add another]\" />\n                  </a></div>\n              </div>\n            </div>\n          </>\n        : null\n      }\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport InPlaceEdit from './in-place-edit.jsx';\n\nimport { NO_ACCESS_MODE } from '../config.js';\n\nconst messages = defineMessages({\n  clear_messages: {\n    id: 'action_clear_messages',\n    defaultMessage: 'Clear Messages',\n    description: 'Flat button [Clear Messages] (soft-delete messages)'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n  delete_messages: {\n    id: 'action_delete_messages',\n    defaultMessage: 'Clear Messages for All',\n    description: 'Flat button [Clear for All] (hard-delete all messages)'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  topic_delete: {\n    id: 'topic_delete',\n    defaultMessage: 'Delete Conversation',\n    description: 'Alert title when deleting the topic.'\n  },\n  topic_delete_warning: {\n    id: 'topic_delete_warning',\n    defaultMessage: 'Are you sure you want to delete this conversation? It cannot be undone.',\n    description: 'Alert warning when deleting entire topic'\n  },\n  leave_chat: {\n    id: 'action_leave_chat',\n    defaultMessage: 'Leave Conversation',\n    description: 'Flat button [Leave Conversation]'\n  },\n  leave_chat_warning: {\n    id: 'leave_chat_warning',\n    defaultMessage: 'Are you sure you want to leave this conversation?',\n    description: 'Alert dialog warning when unsubscribing from a chat.'\n  },\n  block_contact: {\n    id: 'action_block_contact',\n    defaultMessage: \"Block Contact\",\n    description: \"Flat button [Block Contact]\"\n  },\n  block_contact_warning: {\n    id: 'block_contact_warning',\n    defaultMessage: 'Are you sure you want to block this contact?',\n    description: 'Alert dialog warning when blocking a contact.'\n  },\n  report_chat: {\n    id: 'action_report_chat',\n    defaultMessage: 'Report Conversation',\n    description: 'Flat button [Report Group]'\n  },\n  report_chat_warning: {\n    id: 'report_chat_warning',\n    defaultMessage: 'Are you sure you want to block and report this conversation?',\n    description: 'Alert dialog warning when reporting a conversation for abuse'\n  },\n  other_user: {\n    id: 'label_other_user',\n    defaultMessage: 'Other',\n    description: 'Label for the other user when the user is unnamed'\n  },\n});\n\nclass TopicSecurity extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleDeleteTopic = this.handleDeleteTopic.bind(this);\n    this.handleDeleteMessages = this.handleDeleteMessages.bind(this);\n    this.handleLeave = this.handleLeave.bind(this);\n    this.handleBlock = this.handleBlock.bind(this);\n    this.handleReport = this.handleReport.bind(this);\n  }\n\n  handleDeleteTopic(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.topic_delete), // title\n      formatMessage(messages.topic_delete_warning), // content\n      (() => { this.props.onDeleteTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleDeleteMessages(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(this.props.deleter ? messages.delete_messages : messages.clear_messages), // title\n      formatMessage(this.props.deleter ? messages.delete_messages_warning : messages.clear_messages_warning), // content\n      (() => { this.props.onDeleteMessages(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleLeave(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.leave_chat), // title\n      formatMessage(messages.leave_chat_warning), // content\n      (() => { this.props.onLeaveTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleBlock(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.block_contact), // title\n      formatMessage(messages.block_contact_warning), // content\n      (() => { this.props.onBlockTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleReport(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.report_chat), // title\n      formatMessage(messages.report_chat_warning), // content\n      (() => { this.props.onReportTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          {!this.props.channel ?\n            <a href=\"#\" className=\"flat-button\" onClick={this.handleDeleteMessages}>\n              <i className=\"material-icons\">delete_outline</i> &nbsp;{\n                formatMessage(this.props.deleter ? messages.delete_messages : messages.clear_messages)\n              }\n            </a>\n            :\n            null\n          }\n          {this.props.owner ?\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleDeleteTopic}>\n              <i className=\"material-icons\">delete</i> &nbsp;{formatMessage(messages.topic_delete)}\n            </a>\n            :\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleLeave}>\n              <i className=\"material-icons\">exit_to_app</i> &nbsp;{formatMessage(messages.leave_chat)}\n            </a>\n          }\n          {!this.props.groupTopic ?\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleBlock}>\n              <i className=\"material-icons\">block</i> &nbsp;{formatMessage(messages.block_contact)}\n            </a>\n            :\n            null\n          }\n          {!this.props.owner ?\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleReport}>\n              <i className=\"material-icons\">report</i> &nbsp;{formatMessage(messages.report_chat)}\n            </a>\n            :\n            null\n          }\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          {this.props.groupTopic ?\n            <>\n              <div className=\"group\">\n                <label>\n                  <FormattedMessage id=\"label_your_permissions\" defaultMessage=\"Your permissions:\"\n                    description=\"Label for current user permissions\" />\n                </label> <tt className=\"clickable\"\n                  onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('want')}}>\n                  {this.props.access}\n                </tt>\n              </div>\n              <div className=\"group\">\n                <div>\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_default_access_mode\" defaultMessage=\"Default access mode:\"\n                    description=\"Label for default access mode\" />\n                  </label>\n                </div>\n                <div className=\"quoted\">\n                  <div>Auth: <tt className=\"clickable\"\n                    onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('auth')}}>{this.props.auth}</tt>\n                  </div>\n                  <div>Anon: <tt className=\"clickable\"\n                    onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('anon')}}>{this.props.anon}</tt>\n                  </div>\n                </div>\n              </div>\n            </>\n            :\n            <div className=\"group\">\n              <div>\n                <label className=\"small\">\n                  <FormattedMessage id=\"label_permissions\" defaultMessage=\"Permissions:\"\n                    description=\"Section title\" />\n                </label>\n              </div>\n              <div className=\"quoted\">\n                <div>\n                  <FormattedMessage id=\"label_you\" defaultMessage=\"You:\"\n                    description=\"Label for the current user\" /> <tt className=\"clickable\"\n                    onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('want')}}>\n                    {this.props.access}\n                  </tt>\n                </div>\n                <div>{this.props.fullName ? this.props.fullName : formatMessage(messages.other_user)}:\n                  &nbsp;<tt className=\"clickable\"\n                    onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('given')}}>\n                    {this.props.modeGiven2}\n                  </tt>\n                </div>\n              </div>\n            </div>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(TopicSecurity);\n","// InfoView: panel with topic/user info.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport BadgeList from '../widgets/badge-list.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport ContactList from '../widgets/contact-list.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupManager from '../widgets/group-manager.jsx';\nimport MenuCancel from '../widgets/menu-cancel.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\nimport TopicCommon from '../widgets/topic-common.jsx';\nimport TopicSecurity from '../widgets/topic-security.jsx';\n\nimport { MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH, NO_ACCESS_MODE } from '../config.js';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, theCard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  info: {\n    id: 'panel_title_info',\n    description: 'Title for InfoView',\n    defaultMessage: 'Info'\n  },\n  general: {\n    id: 'panel_title_general',\n    description: 'Title for TopicCommon.',\n    defaultMessage: 'General'\n  },\n  security: {\n    id: 'panel_title_security',\n    description: 'Title for TopicSecirity and AccSecurity.',\n    defaultMessage: 'Security'\n  },\n  members: {\n    id: 'panel_title_members',\n    description: 'Title for managing group members view.',\n    defaultMessage: 'Members'\n  },\n  crop: {\n    id: 'panel_title_crop',\n    description: 'Title for AvatarCropView.',\n    defaultMessage: 'Drag to Adjust'\n  },\n  perm_want: {\n    id: 'requested_permissions',\n    defaultMessage: 'Requested',\n    description: 'Title for permissions'\n  },\n  perm_given: {\n    id: 'granted_permissions',\n    defaultMessage: 'Granted',\n    description: 'Title for permissions'\n  },\n  perm_auth: {\n    id: 'permissions_authenticated',\n    defaultMessage: 'Authenticated',\n    description: 'Title for editing default authenticated permissions'\n  },\n  perm_anon: {\n    id: 'permissions_anonymous',\n    defaultMessage: 'Anonymous',\n    description: 'Title for editing default anonymous permissions'\n  },\n  perm_user: {\n    id: 'permissions_user',\n    defaultMessage: 'User\\'s Permissions',\n    description: 'Title for editing user\\'s permissions'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n});\n\nfunction _clip(str, length) {\n  return str && str.substring(0, length);\n}\n\nclass InfoView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      topic: null,\n      owner: false,\n      admin: false,\n      sharer: false,\n      deleter: false,\n      muted: false,\n      address: null,\n      groupTopic: undefined,\n      channel: undefined,\n      fullName: undefined,\n      description: undefined,\n      avatar: null,\n      private: null,\n      selectedContact: null,\n      access: null,\n      modeGiven: null,\n      modeWant: null,\n      modeGiven2: null, // P2P topic, the other user mode given\n      modeWant2: null,  // P2P topic, the other user mode want\n      auth: null,\n      anon: null,\n      contactList: [],\n      trustedBadges: [],\n      previousMetaDesc: undefined,\n      previousSubsUpdated: undefined,\n    };\n\n    this.resetSubs = this.resetSubs.bind(this);\n    this.resetDesc = this.resetDesc.bind(this);\n    this.resetTags = this.resetTags.bind(this);\n    this.onMetaDesc = this.onMetaDesc.bind(this);\n    this.onSubsUpdated = this.onSubsUpdated.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleMuted = this.handleMuted.bind(this);\n    this.handleUnarchive = this.handleUnarchive.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleShowAddMembers = this.handleShowAddMembers.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleMemberSelected = this.handleMemberSelected.bind(this);\n    this.handleContextMenu = this.handleContextMenu.bind(this);\n    this.handleBackNavigate = this.handleBackNavigate.bind(this);\n  }\n\n  // No need to separately handle component mount.\n  componentDidUpdate(props) {\n    const topic = this.props.tinode.getTopic(props.topic);\n    if (!topic) {\n      return;\n    }\n\n    if (this.onMetaDesc != topic.onMetaDesc) {\n      this.previousMetaDesc = topic.onMetaDesc;\n      topic.onMetaDesc = this.onMetaDesc;\n\n      this.previousSubsUpdated = topic.onSubsUpdated;\n      topic.onSubsUpdated = this.onSubsUpdated;\n    }\n\n    if (this.state.topic != props.topic) {\n      this.setState({topic: props.topic});\n      this.resetDesc(topic, props);\n      this.resetSubs(topic, props);\n      this.resetTags(topic);\n    }\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.setState({topic: null});\n    topic.onMetaDesc = this.previousMetaDesc;\n    topic.onSubsUpdated = this.previousSubsUpdated;\n  }\n\n  resetSubs(topic, props) {\n    const newState = {contactList: []};\n    if (topic.getType() == 'p2p') {\n      // Fetch the other party in the p2p conversation.\n      // Topic may not be ready yet, so check if user is found.\n      const user2 = topic.subscriber(props.topic);\n      if (user2) {\n        newState.modeGiven2 = user2.acs.getGiven();\n        newState.modeWant2 = user2.acs.getWant();\n      } else {\n        newState.modeGiven2 = NO_ACCESS_MODE;\n        newState.modeWant2 = NO_ACCESS_MODE;\n      }\n    } else {\n      topic.subscribers((sub) => {\n        newState.contactList.push(sub);\n      }, this);\n    }\n\n    this.setState(newState);\n  }\n\n  resetDesc(topic, props) {\n    const defacs = topic.getDefaultAccess() || {};\n    const acs = topic.getAccessMode();\n\n    const badges = [];\n    if (topic.trusted) {\n      for (const [key, val] of Object.entries(topic.trusted)) {\n        if (val) {\n          badges.push(key);\n        }\n      }\n    }\n\n    this.setState({\n      owner: acs && acs.isOwner(),\n      admin: acs && acs.isAdmin(),\n      sharer: acs && acs.isSharer(),\n      deleter: acs && acs.isDeleter(),\n      muted: acs && acs.isMuted(),\n\n      fullName: _clip(topic.public ? topic.public.fn : undefined, MAX_TITLE_LENGTH),\n      description: _clip(topic.public ? topic.public.note : undefined, MAX_TOPIC_DESCRIPTION_LENGTH),\n      avatar: makeImageUrl(topic.public ? topic.public.photo : null),\n      trustedBadges: badges,\n      private: _clip(topic.private ? topic.private.comment : null, MAX_TITLE_LENGTH),\n      archived: topic.isArchived(),\n      address: topic.name,\n      groupTopic: topic.isGroupType(),\n      channel: topic.isChannelType() || topic.chan,\n      access: acs ? acs.getMode() : undefined,\n      modeGiven: acs ? acs.getGiven() : undefined,\n      modeWant: acs ? acs.getWant() : undefined,\n      auth: defacs.auth,\n      anon: defacs.anon\n    });\n  }\n\n  resetTags(topic) {\n    if (topic.getType() != 'grp') {\n      return;\n    }\n\n    const acs = topic.getAccessMode();\n    if (acs && acs.isOwner()) {\n      // Requesting tags: owner is editing the topic.\n      topic.getMeta(topic.startMetaQuery().withTags().build());\n    }\n  }\n\n  onMetaDesc(desc) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetDesc(topic, this.props);\n\n    if (this.previousMetaDesc && this.previousMetaDesc != this.onMetaDesc) {\n      this.previousMetaDesc(desc);\n    }\n  }\n\n  onSubsUpdated(subs) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetSubs(topic, this.props);\n\n    if (this.previousSubsUpdated && this.previousSubsUpdated != this.onSubsUpdated) {\n      this.previousSubsUpdated(subs);\n    }\n  }\n\n  handleImageChanged(img) {\n    this.setState({avatar: img});\n    this.props.onTopicDescUpdate(this.props.topic, theCard(null, img || Tinode.DEL_CHAR), null);\n  }\n\n  handleMuted(ignored, checked) {\n    this.setState({muted: checked});\n    this.props.onChangePermissions(this.props.topic, checked ? '-P' : '+P');\n  }\n\n  handleUnarchive(ignored, ignored2) {\n    this.props.onTopicUnArchive(this.props.topic);\n  }\n\n  handlePermissionsChanged(which, perm) {\n    switch (which) {\n      case 'auth':\n        this.props.onTopicDescUpdateRequest(this.props.topic, null, null, {auth: perm});\n        break;\n      case 'anon':\n        this.props.onTopicDescUpdateRequest(this.props.topic, null, null, {anon: perm});\n        break;\n      case 'mode':\n      case 'want':\n        this.props.onChangePermissions(this.props.topic, perm);\n        break;\n      case 'given':\n        this.props.onChangePermissions(this.props.topic, perm, this.props.topic);\n        break;\n      case 'user':\n        this.props.onChangePermissions(this.props.topic, perm, this.state.userPermissionsEdited);\n        break;\n    }\n\n    this.handleBackNavigate();\n  }\n\n  handleLaunchPermissionsEditor(which, uid) {\n    const {formatMessage} = this.props.intl;\n    let toEdit, toCompare, toSkip, titleEdit, titleCompare, userTitle, userAvatar;\n    switch (which) {\n      case 'mode':\n        toEdit = this.state.access;\n        break;\n      case 'want':\n        toEdit = this.state.modeWant;\n        toCompare = this.state.modeGiven;\n        if (this.state.owner) {\n          // Don't allow owner to unset 'O' permission. All other permissions are OK.\n          toSkip = 'O';\n        } else {\n          // Allow accepting any of 'ASDO' permissions but don't allow asking for them.\n          toSkip = Tinode.AccessMode.encode(Tinode.AccessMode.diff('ASDO', this.state.modeGiven));\n          if (this.state.channel) {\n            // Channels are read-only.\n            toSkip += 'W';\n          }\n        }\n        titleEdit = formatMessage(messages.perm_want);\n        titleCompare = formatMessage(messages.perm_given);\n        break;\n      case 'given':\n        toEdit = this.state.modeGiven2;\n        toCompare = this.state.modeWant2;\n        toSkip = this.state.groupTopic ? (this.state.owner ? '' : 'O') : 'ASDO';\n        titleEdit = formatMessage(messages.perm_given);\n        titleCompare = formatMessage(messages.perm_want);\n        break;\n      case 'auth':\n        toEdit = this.state.auth;\n        toSkip = 'O';\n        break;\n      case 'anon':\n        toEdit = this.state.anon;\n        toSkip = 'O';\n        break;\n      case 'user': {\n        const topic = this.props.tinode.getTopic(this.props.topic);\n        if (!topic) {\n          return;\n        }\n        const user = topic.subscriber(uid);\n        if (!user || !user.acs) {\n          return;\n        }\n        toEdit = user.acs.getGiven();\n        toCompare = user.acs.getWant();\n        toSkip = this.state.owner ? '' : 'O';\n        titleEdit = formatMessage(messages.perm_given);\n        titleCompare = formatMessage(messages.perm_want);\n        if (user.public) {\n          userTitle = user.public.fn;\n          userAvatar = user.public.photo;\n        }\n        break;\n      }\n      default:\n        console.error(\"Unknown permission editing mode '\" + which + \"'\");\n        return;\n    }\n    this.setState({\n      userPermissionsEdited: uid,\n      userPermissionsTitle: userTitle,\n      userPermissionsAvatar: userAvatar,\n      editedPermissions: toEdit,\n      immutablePermissions: toCompare,\n      editedPermissionsTitle: titleEdit,\n      immutablePermissionsTitle: titleCompare,\n      editedPermissionsSkipped: toSkip,\n    });\n    this.props.onNavigate(`perm/${which}`);\n  }\n\n  handleShowAddMembers(e) {\n    e.preventDefault();\n    this.props.onInitFind();\n    this.props.onNavigate('members');\n  }\n\n  handleMemberUpdateRequest(members, added, removed) {\n    this.props.onMemberUpdateRequest(this.props.topic, added, removed);\n    this.props.onNavigate('info');\n  }\n\n  handleMemberSelected(uid) {\n    this.setState({selectedContact: uid});\n  }\n\n  handleBackNavigate() {\n    const args = (this.props.panel || 'info').split('/');\n    if (args[0] == 'info') {\n      this.props.onNavigate(null);\n    } else if (args[0] == 'perm') {\n      if (args[1] == 'user') {\n        this.props.onNavigate('info');\n      } else {\n        this.props.onNavigate('security');\n      }\n    } else {\n      this.props.onNavigate('info');\n    }\n  }\n\n  handleContextMenu(params) {\n    const {formatMessage} = this.props.intl;\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    const user = topic.subscriber(params.topicName);\n    if (!user || !user.acs) {\n      return;\n    }\n\n    const isMe = this.props.tinode.isMe(params.topicName);\n    const menuItems = [\n      {title: formatMessage(messages.edit_permissions), handler: () => {\n        this.handleLaunchPermissionsEditor(isMe ? 'want' : 'user', params.topicName);\n      }}\n    ];\n    if (!isMe) {\n      menuItems.push('member_delete');\n    }\n    menuItems.push(user.acs.isMuted() ? 'member_unmute' : 'member_mute');\n    if (!isMe) {\n      menuItems.push(user.acs.isJoiner() ? 'member_block' : 'member_unblock');\n    }\n    this.props.showContextMenu({\n      topicName: this.props.topic,\n      x: params.x,\n      y: params.y,\n      user: params.topicName}, menuItems);\n  }\n\n  render() {\n    const args = (this.props.panel || 'info').split('/');\n    const view = args[0];\n    args.shift();\n\n    const {formatMessage} = this.props.intl;\n    const panelTitle = formatMessage((view == 'perm' ? messages['perm_' + args[0]] : messages[view])\n      || messages['info']);\n\n    return (\n      <div id=\"info-view\">\n        <div className=\"caption-panel\" id=\"info-caption-panel\">\n          <div className=\"panel-title\" id=\"info-title\">{panelTitle}</div>\n          <div>\n            <MenuCancel onCancel={this.handleBackNavigate} />\n          </div>\n        </div>\n        {this.props.displayMobile ?\n          <ErrorPanel\n            level={this.props.errorLevel}\n            text={this.props.errorText}\n            onClearError={this.props.onError} /> : null}\n        {view == 'members' ?\n          <GroupManager\n            tinode={this.props.tinode}\n            members={this.state.contactList}\n            requiredMember={this.props.myUserId}\n            keepInitialMembers={!this.state.admin && !this.state.owner}\n            myUserId={this.props.myUserId}\n            contacts={this.props.searchableContacts}\n            onCancel={this.handleBackNavigate}\n            onSubmit={this.handleMemberUpdateRequest} />\n          :\n        view == 'perm' && args.length > 0 ?\n          <PermissionsEditor\n            tinode={this.props.tinode}\n            mode={this.state.editedPermissions}\n            compare={this.state.immutablePermissions}\n            skip={this.state.editedPermissionsSkipped}\n            modeTitle={this.state.editedPermissionsTitle}\n            compareTitle={this.state.immutablePermissionsTitle}\n            userTitle={this.state.userPermissionsTitle}\n            item={this.state.userPermissionsEdited}\n            userAvatar={this.state.userPermissionsAvatar}\n            onSubmit={(mode) => this.handlePermissionsChanged(args[0], mode)}\n            onCancel={this.handleBackNavigate} />\n          :\n        view == 'general' ?\n          <TopicCommon\n            tinode={this.props.tinode}\n            topic={this.props.topic}\n            onCredAdd={this.props.onCredAdd}\n            onTopicTagsUpdateRequest={this.props.onTopicTagsUpdateRequest}\n            onCredConfirm={this.props.onCredConfirm}\n            onCredDelete={this.props.onCredDelete}\n            onUpdateTopicDesc={this.props.onTopicDescUpdateRequest}\n            onError={this.props.onError} />\n          :\n        view == 'security' ?\n          <TopicSecurity\n            topic={this.props.topic}\n            owner={this.state.owner}\n            admin={this.state.admin}\n            sharer={this.state.sharer}\n            deleter={this.state.deleter}\n            muted={this.state.muted}\n\n            groupTopic={this.state.groupTopic}\n            channel={this.state.channel}\n            access={this.state.access}\n            modeGiven={this.state.modeGiven}\n            modeWant={this.state.modeWant}\n            modeGiven2={this.state.modeGiven2}\n            modeWant2={this.state.modeWant2}\n            auth={this.state.auth}\n            anon={this.state.anon}\n\n            onShowAlert={this.props.onShowAlert}\n            onDeleteMessages={this.props.onDeleteMessages}\n            onLeaveTopic={this.props.onLeaveTopic}\n            onBlockTopic={this.props.onBlockTopic}\n            onReportTopic={this.props.onReportTopic}\n            onLaunchPermissionsEditor={this.handleLaunchPermissionsEditor}\n            onNavigate={this.props.onNavigate} />\n          :\n          <div id=\"info-view-content\" className=\"scrollable-panel\">\n            <div className=\"panel-form-column\">\n              <a href=\"#\" className=\"flat-button float-right\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('general');}}>\n                <i className=\"material-icons\">edit</i>&nbsp;\n                <FormattedMessage id=\"button_edit\" defaultMessage=\"Edit\" description=\"Call to action [Edit]\" />\n              </a>\n              <center>\n                <AvatarUpload\n                  tinode={this.props.tinode}\n                  avatar={this.state.avatar}\n                  readOnly={true}\n                  uid={this.props.topic}\n                  title={this.state.fullName} />\n              </center>\n              <div className=\"group\">\n                <div><label className=\"small\">\n                  <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                    description=\"Label for editing topic name\" />\n                </label></div>\n                <div className=\"large ellipsized\">{this.state.fullName}\n                {this.state.channel ? <img src=\"/img/channel.png\" className=\"channel\" alt=\"channel\" /> : null}</div>\n              </div>\n              {this.state.private ?\n                <div className=\"group\">\n                  <div><label className=\"small\">\n                    <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                      description=\"Label for editing 'private'\" />\n                  </label></div>\n                  <div className=\"large ellipsized\">{this.state.private}</div>\n                </div>\n                : null\n              }\n              <div className=\"group\">\n                <label className=\"small\"><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n                  description=\"Label for user address (ID)\" /></label>&nbsp;\n                <tt>{this.state.address}</tt>\n              </div>\n              <div className=\"group\">\n                <BadgeList trustedBadges={this.state.trustedBadges} />\n              </div>\n              {this.state.description ?\n                <div className=\"group\">\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                      description=\"Label for editing topic description\" />\n                  </label>\n                  <div>{this.state.description}</div>\n                </div> : null}\n            </div>\n            <div className=\"hr\" />\n            <div className=\"panel-form-row\">\n              <label>\n                <FormattedMessage id=\"label_muting_topic\" defaultMessage=\"Muted:\"\n                  description=\"Label for Muting/unmuting the topic\" />\n              </label>\n              <CheckBox name=\"P\" checked={this.state.muted} onChange={this.handleMuted} />\n            </div>\n            {this.state.archived ?\n              <div className=\"panel-form-row\">\n                <label>\n                  <FormattedMessage id=\"label_unarchive_topic\" defaultMessage=\"Archived:\"\n                    description=\"Label for unarchiving the topic\" />\n                </label>\n                <CheckBox name=\"archived\" checked={true} onChange={this.handleUnarchive} />\n              </div>\n              :\n              null\n            }\n            <div className=\"hr\" />\n            <div className=\"panel-form-row\">\n              <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('security');}}>\n                <i className=\"material-icons\">security</i>&nbsp;<FormattedMessage id=\"button_security\"\n                  defaultMessage=\"Security\" description=\"Navigaton button for security panel.\" />\n              </a>\n            </div>\n            {this.state.groupTopic && this.state.sharer ?\n              <>\n                <div className=\"hr\" />\n                <div className=\"panel-form-row\">\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_group_members\" defaultMessage=\"Group members:\"\n                      description=\"Section title or label\" />\n                  </label>\n                </div>\n                <div className=\"panel-form-row\">\n                  <a href=\"#\" className=\"flat-button\" onClick={this.handleShowAddMembers}>\n                    <i className=\"material-icons\">person_add</i> &nbsp;<FormattedMessage id=\"button_add_members\"\n                      defaultMessage=\"Add members\" description=\"Flat button [Add members] (to topic)\" />\n                  </a>\n                </div>\n                <FormattedMessage id=\"group_has_no_members\" defaultMessage=\"No members\"\n                  description=\"Shown in place of group members\">{\n                  (no_members) => <ContactList\n                    tinode={this.props.tinode}\n                    contacts={this.state.contactList}\n                    myUserId={this.props.myUserId}\n                    emptyListMessage={no_members}\n                    topicSelected={this.state.selectedContact}\n                    showOnline={false}\n                    showUnread={false}\n                    showMode={true}\n                    noScroll={true}\n                    onTopicSelected={this.handleMemberSelected}\n                    showContextMenu={this.state.admin ? this.handleContextMenu : false}\n                  />\n                }</FormattedMessage>\n              </>\n              :\n              null\n            }\n          </div>\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(InfoView);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\nimport { bytesToHumanSize } from '../lib/strformat.js';\nimport { isUrlRelative, sanitizeUrl } from '../lib/utils.js';\n\nexport default class Attachment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      downloader: null,\n      progress: 0\n    };\n\n    this.downloadFile = this.downloadFile.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  downloadFile(url, filename, mimetype) {\n    if (!url) {\n      this.props.onError(\"Invalid download URL '\" + url + \"'\");\n      return;\n    }\n\n    const downloader = this.props.tinode.getLargeFileHelper();\n    this.setState({downloader: downloader});\n    downloader.download(url, filename, mimetype,\n      (loaded) => {\n        this.setState({progress: loaded / this.props.size});\n      },\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    ).then(() => {\n      this.setState({downloader: null, progress: 0});\n    }).catch((err) => {\n      if (err) {\n        this.props.onError(\"Error downloading file: \" + err.message, 'err');\n      }\n      this.setState({downloader: null, progress: 0});\n    });\n  }\n\n  handleCancel() {\n    if (this.props.uploading) {\n      this.props.onCancelUpload();\n    } else if (this.state.downloader) {\n      this.state.downloader.cancel();\n    }\n  }\n\n  render() {\n    let filename = this.props.filename || 'file_attachment';\n    if (filename.length > 36) {\n      filename = filename.substr(0, 16) + '...' + filename.substr(-16);\n    }\n    let size = this.props.size > 0 ?\n      <span className=\"small gray\">({bytesToHumanSize(this.props.size)})</span> :\n      null;\n\n    // Detect if the download URL is relative or absolute.\n    // If the URL is relative use LargeFileHelper to attach authentication\n    // credentials to the request.\n    let url, helperFunc;\n    if (!this.props.uploading && !this.state.downloader && isUrlRelative(this.props.downloadUrl)) {\n      // Relative URL. Use download helper.\n      url = '#';\n      helperFunc = (e) => {\n        e.preventDefault();\n        this.downloadFile(this.props.downloadUrl, this.props.filename, this.props.mimetype);\n      };\n    } else {\n      url = sanitizeUrl(this.props.downloadUrl);\n      helperFunc = null;\n    }\n    const downloadWidget = <><i className=\"material-icons\">file_download</i> <FormattedMessage id=\"save_attachment\"\n      defaultMessage=\"save\" description=\"Call to save an attachment\" /></>;\n    return (\n      <div className=\"attachment\">\n        <div><i className=\"material-icons big gray\">insert_drive_file</i></div>\n        <div className=\"flex-column\">\n          <div>{filename} {size}</div>\n          {this.props.uploading || this.state.downloader ?\n            <FileProgress progress={this.props.uploading ? this.props.progress : this.state.progress}\n              onCancel={this.handleCancel} />\n            :\n            <div>{url ?\n              <a href={url} download={this.props.filename} onClick={helperFunc}>{downloadWidget}</a>\n              :\n              <span className=\"light-gray\">{downloadWidget}</span>\n            }</div>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n","// Single message, sent or received.\nimport React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport Attachment from './attachment.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\n\nimport { fullFormatter, quoteFormatter } from '../lib/formatters.js';\nimport { sanitizeImageUrl, sanitizeUrl } from '../lib/utils.js';\n\nclass BaseChatMessage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      progress: 0\n    };\n\n    if (props.uploader) {\n      props.uploader.onProgress = this.handleProgress.bind(this);\n    }\n\n    this.handleImagePreview = this.handleImagePreview.bind(this);\n    this.handleFormButtonClick = this.handleFormButtonClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n    this.handleQuoteClick = this.handleQuoteClick.bind(this);\n\n    this.formatterContext = {\n      getFormatter: (tp) => { return tp == 'QQ' ? quoteFormatter : null; },\n      formatMessage: props.intl.formatMessage.bind(props.intl),\n      viewportWidth: props.viewportWidth,\n      authorizeURL: props.tinode.authorizeURL.bind(props.tinode),\n      onImagePreview: this.handleImagePreview,\n      onFormButtonClick: this.handleFormButtonClick,\n      onQuoteClick: this.handleQuoteClick\n    };\n  }\n\n  handleImagePreview(e) {\n    e.preventDefault();\n    this.props.onImagePreview({\n      url: e.target.src,\n      filename: e.target.title,\n      width: e.target.dataset.width,\n      height: e.target.dataset.height,\n      size: e.target.dataset.size,\n      type: e.target.dataset.mime\n    });\n  }\n\n  handleFormButtonClick(e) {\n    e.preventDefault();\n    const data = {\n      seq: this.props.seq\n    };\n    data.resp = {};\n    if (e.target.dataset.name) {\n      data.resp[e.target.dataset.name] = e.target.dataset.val ? e.target.dataset.val :\n        e.target.dataset.val === undefined ? 1 : '' + e.target.dataset.val;\n    }\n    if (e.target.dataset.act == 'url') {\n      data.ref = sanitizeUrl(e.target.dataset.ref) || 'about:blank';\n    }\n    const text = e.target.dataset.title || 'unknown';\n    this.props.onFormResponse(e.target.dataset.act, text, data);\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const menuItems = this.props.received == Tinode.MESSAGE_STATUS_FAILED ? ['menu_item_send_retry'] : [];\n    if (this.props.userIsWriter &&\n        this.props.received > Tinode.MESSAGE_STATUS_FAILED &&\n        this.props.received < Tinode.MESSAGE_STATUS_DEL_RANGE) {\n      menuItems.push('menu_item_reply');\n    }\n    this.props.showContextMenu({ seq: this.props.seq, content: this.props.content,\n                                 y: e.pageY, x: e.pageX, pickReply: this.props.pickReply }, menuItems);\n  }\n\n  handleProgress(ratio) {\n    this.setState({progress: ratio});\n  }\n\n  handleCancelUpload() {\n    this.props.onCancelUpload(this.props.seq, this.props.uploader);\n  }\n\n  handleQuoteClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const replyToSeq = this.props.replyToSeq;\n    if (replyToSeq) {\n      this.props.onQuoteClick(replyToSeq);\n    }\n  }\n\n  render() {\n    const sideClass = this.props.deleted ? 'center' :\n      (this.props.sequence + ' ' + (this.props.response ? 'left' : 'right'));\n    const bubbleClass = (this.props.sequence == 'single' || this.props.sequence == 'last') ? 'bubble tip' : 'bubble';\n    const avatar = this.props.deleted ? null : (this.props.userAvatar || true);\n    const fullDisplay = (this.props.userFrom && this.props.response && !this.props.deleted &&\n      (this.props.sequence == 'single' || this.props.sequence == 'last'));\n\n    let content = this.props.content;\n    const attachments = [];\n    if (this.props.mimeType == Drafty.getContentType() && Drafty.isValid(content)) {\n      Drafty.attachments(content, (att, i) => {\n        if (att.mime == 'application/json') {\n          // Don't show json objects as attachments.\n          // They are not meant for users.\n          return;\n        }\n        attachments.push(<Attachment\n          tinode={this.props.tinode}\n          downloadUrl={Drafty.getDownloadUrl(att)}\n          filename={att.name}\n          uploading={Drafty.isProcessing(att)}\n          mimetype={att.mime}\n          size={Drafty.getEntitySize(att)}\n          progress={this.state.progress}\n          onCancelUpload={this.handleCancelUpload}\n          onError={this.props.onError}\n          key={i} />);\n      }, this);\n      const tree = Drafty.format(content, fullFormatter, this.formatterContext);\n      content = React.createElement(React.Fragment, null, tree);\n    } else if (this.props.deleted) {\n      // Message represents a range of deleted messages.\n      content = <><i className=\"material-icons gray\">block</i> <i className=\"gray\">\n        <FormattedMessage id=\"deleted_content\"\n          defaultMessage=\"content deleted\" description=\"Shown when messages are deleted\" />\n      </i></>\n    } else if (typeof content != 'string') {\n      content = <><i className=\"material-icons gray\">warning_amber</i> <i className=\"gray\">\n        <FormattedMessage id=\"invalid_content\"\n          defaultMessage=\"invalid content\" description=\"Shown when the message is unreadable\" /></i></>\n    }\n\n    return (\n      <li ref={this.props.innerRef} className={sideClass}>\n        {this.props.userFrom && this.props.response ?\n          <div className=\"avatar-box\">\n            {fullDisplay ?\n              <LetterTile\n                tinode={this.props.tinode}\n                topic={this.props.userFrom}\n                title={this.props.userName}\n                avatar={avatar} /> :\n              null}\n          </div> :\n          null}\n        <div>\n          <div className={bubbleClass}>\n            <div className=\"content-meta\">\n              <div className=\"message-content\">\n                {content}\n                {attachments}\n              </div>\n              {this.props.timestamp ?\n                <ReceivedMarker\n                  timestamp={this.props.timestamp}\n                  received={this.props.received} />\n                : null}\n            </div>\n            {this.props.deleted || !this.props.showContextMenu ?\n              null :\n              <span className=\"menuTrigger\">\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">expand_more</i>\n                </a>\n              </span>\n            }\n          </div>\n          {fullDisplay ?\n            <div className=\"author\">\n              {this.props.userName ||\n                <i><FormattedMessage id=\"user_not_found\" defaultMessage=\"Not found\"\n                description=\"In place of a user's full name when the user is not found.\" /></i>\n              }\n            </div>\n            : null\n          }\n        </div>\n      </li>\n    );\n  }\n};\n\nconst IntlChatMessage = injectIntl(BaseChatMessage);\nconst ChatMessage = React.forwardRef((props, ref) => <IntlChatMessage innerRef = {ref} {...props} />);\n\nexport default ChatMessage;\n","// Send message form.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport { KEYPRESS_DELAY } from '../config.js';\nimport { filePasted } from '../lib/blob-helpers.js';\nimport { quoteFormatter, replyFormatter } from '../lib/formatters.js';\n\nconst messages = defineMessages({\n  messaging_disabled: {\n    id: 'messaging_disabled_prompt',\n    defaultMessage: 'Messaging disabled',\n    description: 'Prompt in SendMessage in read-only topic'\n  },\n  type_new_message: {\n    id: 'new_message_prompt',\n    defaultMessage: 'New message',\n    description: 'Prompt in send message field'\n  },\n  add_image_caption: {\n    id: 'image_caption_prompt',\n    defaultMessage: 'Image caption',\n    description: 'Prompt in SendMessage for attached image'\n  },\n  file_attachment_too_large: {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  },\n  cannot_initiate_upload: {\n    id: 'cannot_initiate_file_upload',\n    defaultMessage: 'Cannot initiate file upload.',\n    description: 'Generic error messagewhen attachment fails'\n  },\n});\n\nclass SendMessage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      message: '',\n      // Make initial keypress time as if it happened 5001 milliseconds in the past.\n      keypressTimestamp: new Date().getTime() - KEYPRESS_DELAY - 1\n    };\n\n    this.handlePasteEvent = this.handlePasteEvent.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleSend = this.handleSend.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleMessageTyping = this.handleMessageTyping.bind(this);\n\n    this.handleQuoteClick = this.handleQuoteClick.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.addEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.removeEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.messageEditArea) {\n      this.messageEditArea.focus();\n    }\n\n    if (prevProps.replyTo != this.props.replyTo) {\n      this.setState({quote: this.props.replyTo ?\n        Drafty.format(this.props.replyTo.content, replyFormatter, {\n          formatMessage: this.props.intl.formatMessage.bind(this.props.intl),\n          authorizeURL: this.props.tinode.authorizeURL.bind(this.props.tinode)\n        }) :\n        null});\n    }\n  }\n\n  handlePasteEvent(e) {\n    if (this.props.disabled) {\n      return;\n    }\n    // FIXME: handle large files too.\n    if (filePasted(e,\n      (bits, mime, width, height, fname) => {\n        this.props.onAttachImage(mime, bits, width, height, fname);\n      },\n      (mime, bits, fname) => {\n        this.props.onAttachFile(mime, bits, fname);\n      },\n      this.props.onError)) {\n\n      // If a file was pasted, don't paste base64 data into input field.\n      e.preventDefault();\n    }\n  }\n\n  handleAttachImage(e) {\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachImage(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleAttachFile(e) {\n    const {formatMessage} = this.props.intl;\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachFile(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleSend(e) {\n    e.preventDefault();\n    const message = this.state.message.trim();\n    if (message || this.props.acceptBlank || this.props.noInput) {\n      this.props.onSendMessage(message);\n      this.setState({message: ''});\n    }\n  }\n\n  /* Send on Enter key */\n  handleKeyPress(e) {\n    // Remove this if you don't want Enter to trigger send\n    if (e.key === 'Enter') {\n      // Have Shift-Enter insert a line break instead\n      if (!e.shiftKey) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.handleSend(e);\n      }\n    }\n  }\n\n  handleMessageTyping(e) {\n    const newState = {message: e.target.value};\n    if (this.props.onKeyPress) {\n      const now = new Date().getTime();\n      if (now - this.state.keypressTimestamp > KEYPRESS_DELAY) {\n        this.props.onKeyPress();\n        newState.keypressTimestamp = now;\n      }\n    }\n    this.setState(newState);\n  }\n\n  handleQuoteClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.props.replyTo && this.props.onQuoteClick) {\n      const replyToSeq = this.props.replyTo.seq;\n      this.props.onQuoteClick(replyToSeq);\n    }\n  }\n\n  render() {\n    const { formatMessage } = this.props.intl;\n    const prompt = this.props.disabled ?\n      formatMessage(messages.messaging_disabled) :\n      (this.props.messagePrompt ?\n        formatMessage(messages[this.props.messagePrompt]) :\n        formatMessage(messages.type_new_message));\n\n    return (\n      <div id=\"send-message-wrapper\">\n      {this.state.quote ?\n        <div id=\"reply-quote-preview\">\n          <div className=\"cancel\">\n            <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancelReply();}}><i className=\"material-icons gray\">close</i></a>\n          </div>\n          {this.state.quote}\n        </div>\n      :\n      null}\n\n      <div id=\"send-message-panel\">\n        {!this.props.disabled ?\n          <>\n            {this.props.onAttachFile ?\n              <>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachImage.click();}} title=\"Add image\">\n                  <i className=\"material-icons secondary\">photo</i>\n                </a>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachFile.click();}} title=\"Attach file\">\n                  <i className=\"material-icons secondary\">attach_file</i>\n                </a>\n              </>\n              :\n              null}\n            {this.props.noInput ?\n              <div className=\"hr thin\" /> :\n              <textarea id=\"sendMessage\" placeholder={prompt}\n                value={this.state.message} onChange={this.handleMessageTyping}\n                onKeyPress={this.handleKeyPress}\n                ref={(ref) => {this.messageEditArea = ref;}}\n                autoFocus />}\n            <a href=\"#\" onClick={this.handleSend} title=\"Send\">\n              <i className=\"material-icons\">send</i>\n            </a>\n            <input type=\"file\" ref={(ref) => {this.attachFile = ref;}}\n              onChange={this.handleAttachFile} style={{display: 'none'}} />\n            <input type=\"file\" ref={(ref) => {this.attachImage = ref;}} accept=\"image/*\"\n              onChange={this.handleAttachImage} style={{display: 'none'}} />\n          </>\n          :\n          <div id=\"writing-disabled\">{prompt}</div>\n        }\n      </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SendMessage);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { bytesToHumanSize, shortenFileName } from '../lib/strformat.js';\n\n// Get material icon name from mime type.\nfunction iconFromMime(mime) {\n  // If more icons become available in material icons, add them to this mime-to-icon mapping.\n  const mimeToIcon = {default: 'insert_drive_file', image: 'image', text: 'description', video: 'theaters'};\n\n  return mimeToIcon[mime] || mimeToIcon[(mime || '').split('/')[0]] || mimeToIcon['default'];\n}\n\nexport default class DocPreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleSendDoc = this.handleSendDoc.bind(this);\n  }\n\n  handleSendDoc(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(this.props.content.file);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          <span>{this.props.content.name}</span>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\">\n          <div className=\"flex-column narrow\">\n            <i className=\"material-icons gray\">{iconFromMime(this.props.content.type)}</i>\n            <div><b><FormattedMessage id=\"label_file_name\" defaultMessage=\"File name:\"\n              description=\"Label for a file name\" /></b> {shortenFileName(this.props.content.name, 24) || '-'}</div>\n            <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n              description=\"Label for file content type (mime)\" /></b> {this.props.content.type || 'application/octet-stream'}</div>\n            <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n              description=\"Label for file size\" /></b> {bytesToHumanSize(this.props.content.size)}</div>\n          </div>\n        </div>\n        <SendMessage\n          noInput={true}\n          tinode={this.props.tinode}\n          replyTo={this.props.replyTo}\n          onCancelReply={this.props.onCancelReply}\n          onSendMessage={this.handleSendDoc}\n          onError={this.props.onError} />\n      </div>\n    );\n  }\n};\n","// GroupSubs: a list of group subscribers currently online.\n// Show in the topic title bar\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { MAX_ONLINE_IN_TOPIC } from '../config.js'\n\nimport LetterTile from './letter-tile.jsx';\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class GroupSubs extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const usersOnline = [];\n    const totalCount = (this.props.subscribers || []).length;\n    const countToShow = Math.min(MAX_ONLINE_IN_TOPIC, totalCount);\n\n    (this.props.subscribers || []).some((sub) => {\n      usersOnline.push(\n        <div className=\"avatar-box\" key={sub.user}>\n          <LetterTile\n            tinode={this.props.tinode}\n            topic={sub.user}\n            avatar={makeImageUrl(sub.public ? sub.public.photo : null) || true}\n            title={sub.public ? sub.public.fn : null} />\n        </div>\n      );\n      return usersOnline.length == countToShow;\n    });\n\n    return (\n      <div id=\"topic-users\">{usersOnline} {totalCount > countToShow ?\n        <span>\n          <FormattedMessage id=\"more_online_members\" defaultMessage=\"+{overflow} more\"\n              description=\"Shown in MessagesView title bar when the number of online subscribers exceeds MAX_ONLINE_IN_TOPIC\"\n              values={{ overflow: (totalCount - countToShow) }} />\n        </span> : null}\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\nimport { bytesToHumanSize, shortenFileName } from '../lib/strformat.js';\n\nexport default class ImagePreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      width: 0,\n      height: 0\n    };\n\n    this.handleSendImage = this.handleSendImage.bind(this);\n  }\n\n  assignWidth(node) {\n    if (node && !this.state.width) {\n      const bounds = node.getBoundingClientRect();\n      this.setState({\n        width: bounds.width | 0,\n        height: bounds.height | 0\n      });\n    }\n  }\n\n  handleSendImage(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(caption, this.props.content.blob);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n\n    const dim = fitImageSize(this.props.content.width, this.props.content.height,\n      this.state.width, this.state.height, false);\n    const size = dim ? { width: dim.dstWidth + 'px', height: dim.dstHeight + 'px' } :\n      ((this.props.content.width > this.props.content.height) ? {width: '100%'} : {height: '100%'});\n    size.maxWidth = '100%';\n    size.maxHeight = '100%';\n\n    // Average font aspect ratio is ~0.5; File name takes 1/3 of the viewport width.\n    const maxlength = Math.max(((this.state.width / REM_SIZE / 1.5) | 0) - 2, 12);\n    const fname = shortenFileName(this.props.content.name, maxlength) || '-';\n\n    const width = this.props.content.width || '-';\n    const height = this.props.content.height || '-';\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          {!this.props.onSendMessage ?\n            <a href={this.props.content.url} download={this.props.content.name}>\n              <i className=\"material-icons\">file_download</i> <FormattedMessage\n                id=\"download_action\" defaultMessage=\"download\" description=\"Call to action [download]\" />\n            </a>\n            :\n            <span>{fname}</span>\n          }\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\" ref={(node) => this.assignWidth(node)}>\n          <img src={this.props.content.url} style={size} className=\"image-preview\" alt={this.props.content.name} />\n        </div>\n        {this.props.onSendMessage ?\n          <SendMessage\n            messagePrompt=\"add_image_caption\"\n            acceptBlank={true}\n            tinode={this.props.tinode}\n            replyTo={this.props.replyTo}\n            onCancelReply={this.props.onCancelReply}\n            onSendMessage={this.handleSendImage}\n            onError={this.props.onError} />\n          :\n          <div id=\"image-preview-footer\">\n            <div>\n              <div><b><FormattedMessage id=\"label_file_name\" defaultMessage=\"File name:\"\n                description=\"Label for a file name\" /></b></div>\n              <div><span title={this.props.content.name}>{fname}</span></div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n                description=\"Label for file content type (mime)\" /></b></div>\n              <div>{this.props.content.type}</div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n                description=\"Label for file size\" /></b></div>\n              <div>{width} &times; {height} px; {bytesToHumanSize(this.props.content.size)}</div>\n            </div>\n          </div>}\n      </div>\n    );\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Invitation extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleButtonAction = this.handleButtonAction.bind(this);\n  }\n\n  handleButtonAction(evt, data) {\n    evt.preventDefault();\n    this.props.onAction(data);\n  }\n\n  render() {\n    return (\n      <div className=\"accept-invite-panel\">\n        <div className=\"title\">\n          <FormattedMessage id=\"chat_invitation\"\n            defaultMessage=\"You are invited to start a new chat. What would you like to do?\"\n            description=\"New chat invitation message: [Accept] [Ignore] [Block].\" />\n        </div>\n        <div className=\"footer\">\n          <button className=\"primary\" onClick={event => { this.handleButtonAction(event, \"accept\"); }}>\n            <FormattedMessage id=\"chat_invitation_accept\"\n              defaultMessage=\"Accept\" description=\"Action [Accept] for chat invitation.\" />\n          </button>\n          <button className=\"secondary\" onClick={event => { this.handleButtonAction(event, \"delete\"); }}>\n            <FormattedMessage id=\"chat_invitation_ignore\"\n              defaultMessage=\"Ignore\" description=\"Action [Ignore] for chat invitation.\" />\n          </button>\n          <button className=\"secondary\" onClick={event => { this.handleButtonAction(event, \"block\"); }}>\n            <FormattedMessage id=\"chat_invitation_block\"\n              defaultMessage=\"Block\" description=\"Action [Block] for chat invitation.\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n","/* This is just a static page to display when no conversation is selected. */\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME } from '../config.js';\n\nexport default class LogoView extends React.PureComponent {\n  render() {\n    const version = APP_NAME + ' (' + Tinode.getLibrary() + ')';\n    return (\n      <div id=\"dummy-view\">\n        <div>\n          <a href=\"https://github.com/tinode/chat/\">\n            <img id=\"logo\" alt=\"logo\" src=\"img/logo.svg\" />\n            <h2>Tinode Web</h2>\n          </a>\n          <p><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\"\n            description=\"Label for a client version\" /> {version}</p>\n          <p><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\"\n            description=\"Label for a server version\" /> {this.props.serverVersion} ({this.props.serverAddress})</p>\n        </div>\n      </div>\n    );\n  }\n};\n","// Utility class for hash navigation.\n\n// Parse hash as in http://www.example.com/path#hash as if it were\n// path and arguments.\nexport default class HashNavigation {\n  static parseUrlHash(hash) {\n    // Split path from args, path -> parts[0], args->path[1]\n    const parts = hash.split('?', 2);\n    const params = {};\n    let path = [];\n    if (parts[0]) {\n      path = parts[0].replace('#', '').split('/');\n    }\n    if (parts[1]) {\n      parts[1].split('&').forEach(function(part) {\n        const item = part.split('=');\n        if (item[0]) {\n          params[decodeURIComponent(item[0])] = decodeURIComponent(item[1]);\n        }\n      });\n    }\n    return {path: path, params: params};\n  }\n\n  static navigateTo(url) {\n    window.location.hash = url;\n  }\n\n  static composeUrlHash(path, params) {\n    let url = path.join('/');\n    const args = [];\n    for (const key in params) {\n      if (params.hasOwnProperty(key)) {\n        args.push(key + '=' + params[key]);\n      }\n    }\n    if (args.length > 0) {\n      url += '?' + args.join('&');\n    }\n    return url;\n  }\n\n  static addUrlParam(hash, key, value) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.params[key] = value;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static removeUrlParam(hash, key) {\n    const parsed = this.parseUrlHash(hash);\n    delete parsed.params[key];\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlSidePanel(hash, sidepanel) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[0] = sidepanel;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlInfoPanel(hash, infopanel) {\n    const parsed = this.parseUrlHash(hash);\n    if (infopanel) {\n      parsed.params.info = infopanel;\n    } else {\n      delete parsed.params.info;\n    }\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlTopic(hash, topic) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[1] = topic;\n    // Close InfoView on topic change.\n    delete parsed.params.info;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n}\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\nconst Drafty = Tinode.Drafty;\n\nimport ChatMessage from '../widgets/chat-message.jsx';\nimport ContactBadges from '../widgets/contact-badges.jsx';\nimport DocPreview from '../widgets/doc-preview.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupSubs from '../widgets/group-subs.jsx';\nimport ImagePreview from '../widgets/image-preview.jsx';\nimport Invitation from '../widgets/invitation.jsx';\nimport LetterTile from '../widgets/letter-tile.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport LogoView from './logo-view.jsx';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { DEFAULT_P2P_ACCESS_MODE, IMAGE_PREVIEW_DIM, IMAGE_THUMBNAIL_DIM, KEYPRESS_DELAY,\n  MESSAGES_PAGE, MAX_EXTERN_ATTACHMENT_SIZE, MAX_IMAGE_DIM, MAX_INBAND_ATTACHMENT_SIZE,\n  READ_DELAY, QUOTED_REPLY_LENGTH } from '../config.js';\nimport { SUPPORTED_IMAGE_FORMATS, blobToBase64, base64ToBlob, filePasted, fileToBase64,\n  imageScaled, makeImageUrl } from '../lib/blob-helpers.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { bytesToHumanSize, shortDateFormat, letterTileColorId } from '../lib/strformat.js';\nimport { sanitizeImageUrl } from '../lib/utils.js';\n\n// Run timer with this frequency (ms) for checking notification queue.\nconst NOTIFICATION_EXEC_INTERVAL = 300;\n\nconst messages = defineMessages({\n  online_now: {\n    id: 'online_now',\n    defaultMessage: 'online now',\n    description: 'Indicator that the user or topic is currently online',\n  },\n  last_seen: {\n    id: 'last_seen_timestamp',\n    defaultMessage: 'Last seen',\n    description: 'Label for the timestamp of when the user or topic was last online'\n  },\n  not_found: {\n    id: 'title_not_found',\n    defaultMessage: 'Not found',\n    description: 'Title shown when topic is not found'\n  },\n  channel: {\n    id: 'channel',\n    defaultMessage: 'channel',\n    description: 'Subtitle shown for channels in MessagesView instead of last seen'\n  },\n  file_attachment_too_large: {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  },\n  invalid_content: {\n    id: 'invalid_content',\n    defaultMessage: 'invalid content',\n    description: 'Shown when the message is unreadable'\n  },\n});\n\n// Checks if the access permissions are granted but not yet accepted.\nfunction isUnconfirmed(acs) {\n  if (acs) {\n    const ex = acs.getExcessive() || '';\n    return acs.isJoiner('given') && (ex.includes('R') || ex.includes('W'));\n  }\n  return false;\n}\n\nfunction isPeerRestricted(acs) {\n  if (acs) {\n    const ms = acs.getMissing() || '';\n    return acs.isJoiner('want') && (ms.includes('R') || ms.includes('W'));\n  }\n  return false;\n}\n\nclass MessagesView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = MessagesView.getDerivedStateFromProps(props, {});\n\n    this.leave = this.leave.bind(this);\n    this.sendMessage = this.sendMessage.bind(this);\n    this.retrySend = this.retrySend.bind(this);\n    this.sendImageAttachment = this.sendImageAttachment.bind(this);\n    this.sendFileAttachment = this.sendFileAttachment.bind(this);\n    this.sendKeyPress = this.sendKeyPress.bind(this);\n    this.subscribe = this.subscribe.bind(this);\n    this.handleScrollReference = this.handleScrollReference.bind(this);\n    this.handleScrollEvent = this.handleScrollEvent.bind(this);\n    this.handleDescChange = this.handleDescChange.bind(this);\n    this.handleSubsUpdated = this.handleSubsUpdated.bind(this);\n    this.handleMessageUpdate = this.handleMessageUpdate.bind(this);\n    this.handleAllMessagesReceived = this.handleAllMessagesReceived.bind(this);\n    this.handleInfoReceipt = this.handleInfoReceipt.bind(this);\n    this.handleImagePostview = this.handleImagePostview.bind(this);\n    this.handleClosePreview = this.handleClosePreview.bind(this);\n    this.handleFormResponse = this.handleFormResponse.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleShowContextMenuMessage = this.handleShowContextMenuMessage.bind(this);\n    this.handleNewChatAcceptance = this.handleNewChatAcceptance.bind(this);\n    this.handleEnablePeer = this.handleEnablePeer.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n    this.postReadNotification = this.postReadNotification.bind(this);\n    this.clearNotificationQueue = this.clearNotificationQueue.bind(this);\n\n    this.handlePickReply = this.handlePickReply.bind(this);\n    this.handleCancelReply = this.handleCancelReply.bind(this);\n    this.handleQuoteClick = this.handleQuoteClick.bind(this);\n\n    this.chatMessageRefs = {};\n    this.getOrCreateMessageRef = this.getOrCreateMessageRef.bind(this);\n\n    this.readNotificationQueue = [];\n    this.readNotificationTimer = null;\n  }\n\n  getOrCreateMessageRef(seqId) {\n    if (this.chatMessageRefs.hasOwnProperty(seqId)) {\n      return this.chatMessageRefs[seqId];\n    }\n    const ref = React.createRef();\n    this.chatMessageRefs[seqId] = ref;\n    return ref;\n  }\n\n  componentDidMount() {\n    if (this.messagesScroller) {\n      this.messagesScroller.addEventListener('scroll', this.handleScrollEvent);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messagesScroller) {\n      this.messagesScroller.removeEventListener('scroll', this.handleScrollEvent);\n    }\n\n    // Flush all notifications.\n    this.clearNotificationQueue();\n  }\n\n  // Scroll last message into view on component update e.g. on message received\n  // or vertical shrinking.\n  componentDidUpdate(prevProps, prevState) {\n    if (this.messagesScroller) {\n      if (prevState.topic != this.state.topic || prevState.messageCount != this.state.messageCount) {\n        // New message\n        this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n      } else if (prevProps.viewportHeight > this.props.viewportHeight) {\n        // Componet changed height.\n        this.messagesScroller.scrollTop += prevProps.viewportHeight - this.props.viewportHeight;\n      }\n    }\n\n    const topic = this.props.tinode ? this.props.tinode.getTopic(this.state.topic) : undefined;\n    if (this.state.topic != prevState.topic) {\n      if (prevState.topic && !Tinode.isNewGroupTopicName(prevState.topic)) {\n        this.leave(prevState.topic);\n      }\n\n      if (topic) {\n        topic.onData = this.handleMessageUpdate;\n        topic.onAllMessagesReceived = this.handleAllMessagesReceived;\n        topic.onInfo = this.handleInfoReceipt;\n        topic.onMetaDesc = this.handleDescChange;\n        topic.onSubsUpdated = this.handleSubsUpdated;\n        topic.onPres = this.handleSubsUpdated;\n      }\n    }\n\n    if (!this.props.applicationVisible) {\n      // If application is not visible, flush all unsent 'read' notifications.\n      this.clearNotificationQueue();\n    } else {\n      // Otherwise assume there are unread messages.\n      this.postReadNotification(0);\n    }\n\n    if ((this.state.topic != prevState.topic) || !prevProps.ready) {\n      this.subscribe(topic);\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let nextState = {};\n    if (!nextProps.topic) {\n      // Default state: no topic.\n      nextState = {\n        messageCount: 0,\n        latestClearId: -1,\n        onlineSubs: [],\n        topic: null,\n        title: '',\n        avatar: null,\n        isVerified: false,\n        isStaff: false,\n        isDangerous: false,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false,\n        peerMessagingDisabled: false,\n        channel: false,\n        reply: null\n      };\n    } else if (nextProps.topic != prevState.topic) {\n      const topic = nextProps.tinode.getTopic(nextProps.topic);\n      nextState = {\n        topic: nextProps.topic,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false,\n        reply: null\n      };\n\n      if (topic) {\n        // Topic exists.\n        const subs = [];\n\n        if (nextProps.connected) {\n          topic.subscribers((sub) => {\n            if (sub.online && sub.user != nextProps.myUserId) {\n              subs.push(sub);\n            }\n          });\n        }\n\n        Object.assign(nextState, {\n          onlineSubs: subs\n        });\n\n        if (topic.public) {\n          Object.assign(nextState, {\n            title: topic.public.fn,\n            avatar: makeImageUrl(topic.public.photo)\n          });\n        } else {\n          Object.assign(nextState, {\n            title: '',\n            avatar: null\n          });\n        }\n\n        const peer = topic.p2pPeerDesc();\n        if (peer) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: isPeerRestricted(peer.acs)\n          });\n        } else if (prevState.peerMessagingDisabled) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: false\n          });\n        }\n        Object.assign(nextState, {\n          messageCount: topic.messageCount(),\n          latestClearId: topic.maxClearId(),\n          channel: topic.isChannelType()\n        });\n      } else {\n        // Invalid topic.\n        Object.assign(nextState, {\n          messageCount: 0,\n          latestClearId: -1,\n          onlineSubs: [],\n          title: '',\n          avatar: null,\n          peerMessagingDisabled: false,\n          channel: false\n        });\n      }\n    }\n\n    if (nextProps.acs) {\n      if (nextProps.acs.isWriter() != prevState.isWriter) {\n        nextState.isWriter = !prevState.isWriter;\n      }\n      if (nextProps.acs.isReader() != prevState.isReader) {\n        nextState.isReader = !prevState.isReader;\n      }\n      if (!nextProps.acs.isReader('given') != prevState.readingBlocked) {\n        nextState.readingBlocked = !prevState.readingBlocked;\n      }\n      if (nextProps.acs.isSharer() != prevState.isSharer) {\n        nextState.isSharer = !prevState.isSharer;\n      }\n    } else {\n      if (prevState.isWriter) {\n        nextState.isWriter = false;\n      }\n      if (prevState.isReader) {\n        nextState.isReader = false;\n      }\n      if (!prevState.readingBlocked) {\n        prevState.readingBlocked = true;\n      }\n      if (prevState.isSharer) {\n        nextState.isSharer = false;\n      }\n    }\n\n    if (isUnconfirmed(nextProps.acs) == !prevState.unconformed) {\n      nextState.unconfirmed = !prevState.unconformed;\n    }\n\n    // Clear subscribers online when there is no connection.\n    if (!nextProps.connected && prevState.onlineSubs && prevState.onlineSubs.length > 0) {\n      nextState.onlineSubs = [];\n    }\n\n    return nextState;\n  }\n\n  subscribe(topic) {\n    if (!topic || topic.isSubscribed() || !this.props.ready) {\n      return;\n    }\n\n    // Is this a new topic?\n    const newTopic = (this.props.newTopicParams && this.props.newTopicParams._topicName == this.props.topic);\n\n    // Don't request the tags. They are useless unless the user\n    // is the owner and is editing the topic.\n    let getQuery = topic.startMetaQuery().withLaterDesc().withLaterSub();\n    if (this.state.isReader || newTopic) {\n      // Reading is either permitted or we don't know because it's a new topic. Ask for messages.\n      getQuery = getQuery.withLaterData(MESSAGES_PAGE);\n      if (this.state.isReader) {\n        getQuery = getQuery.withLaterDel();\n      }\n      // And show \"loading\" spinner.\n      this.setState({ fetchingMessages: true });\n    }\n\n    const setQuery = newTopic ? this.props.newTopicParams : undefined;\n    topic.subscribe(getQuery.build(), setQuery)\n      .then((ctrl) => {\n        if (ctrl.code == 303) {\n          // Redirect to another topic requested.\n          HashNavigation.navigateTo(HashNavigation.setUrlTopic('', ctrl.params.topic));\n          return;\n        }\n        if (this.state.topic != ctrl.topic) {\n          this.setState({topic: ctrl.topic});\n        }\n        this.props.onNewTopicCreated(this.props.topic, ctrl.topic);\n        // If there are unsent messages, try sending them now.\n        topic.queuedMessages((pub) => {\n          if (!pub._sending && topic.isSubscribed()) {\n            this.retrySend(pub);\n          }\n        });\n      })\n      .catch((err) => {\n        console.error(\"Failed subscription to\", this.state.topic);\n        this.props.onError(err.message, 'err');\n        const blankState = MessagesView.getDerivedStateFromProps({}, {});\n        blankState.title = this.props.intl.formatMessage(messages.not_found);\n        this.setState(blankState);\n      });\n  }\n\n  leave(oldTopicName) {\n    if (!oldTopicName || !this.props.tinode.isTopicCached(oldTopicName)) {\n      return;\n    }\n    const oldTopic = this.props.tinode.getTopic(oldTopicName);\n    if (oldTopic && oldTopic.isSubscribed()) {\n      oldTopic.leave(false)\n        .catch(() => { /* do nothing here */ })\n        .finally(() => {\n          // We don't care if the request succeeded or failed.\n          // The topic is dead regardless.\n          this.setState({fetchingMessages: false});\n          oldTopic.onData = undefined;\n          oldTopic.onAllMessagesReceived = undefined;\n          oldTopic.onInfo = undefined;\n          oldTopic.onMetaDesc = undefined;\n          oldTopic.onSubsUpdated = undefined;\n          oldTopic.onPres = undefined;\n        });\n    }\n  }\n\n  handleScrollReference(node) {\n    if (node) {\n      node.addEventListener('scroll', this.handleScrollEvent);\n      this.messagesScroller = node;\n      this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n    }\n  }\n\n  // Get older messages\n  handleScrollEvent(event) {\n    this.setState({scrollPosition: event.target.scrollHeight - event.target.scrollTop});\n    if (this.state.fetchingMessages) {\n      return;\n    }\n\n    if (event.target.scrollTop <= 0) {\n      const topic = this.props.tinode.getTopic(this.state.topic);\n      if (topic && topic.isSubscribed() && topic.msgHasMoreMessages()) {\n        this.setState({fetchingMessages: true}, () => {\n          topic.getMessagesPage(MESSAGES_PAGE)\n            .catch((err) => this.props.onError(err.message, 'err'))\n            .finally(() => this.setState({fetchingMessages: false}));\n          });\n      }\n    }\n  }\n\n  handleDescChange(desc) {\n    if (desc.public) {\n      this.setState({\n        title: desc.public.fn,\n        avatar: makeImageUrl(desc.public.photo)\n      });\n    } else {\n      this.setState({\n        title: '',\n        avatar: null\n      });\n    }\n\n    if (desc.acs) {\n      this.setState({\n        isWriter: desc.acs.isWriter(),\n        isReader: desc.acs.isReader(),\n        readingBlocked: !desc.acs.isReader('given'),\n        unconfirmed: isUnconfirmed(desc.acs),\n      });\n    }\n  }\n\n  postReadNotification(seq) {\n    // Ignore notifications if the app is invisible.\n    if (!this.props.applicationVisible) {\n      return;\n    }\n\n    // Set up the timer if it's not running already.\n    if (!this.readNotificationTimer) {\n      this.readNotificationTimer = setInterval(() => {\n        if (this.readNotificationQueue.length == 0) {\n          // Shut down the timer if the queue is empty.\n          clearInterval(this.readNotificationTimer);\n          this.readNotificationTimer = null;\n          return;\n        }\n\n        let seq = -1;\n        while (this.readNotificationQueue.length > 0) {\n          const n = this.readNotificationQueue[0];\n          if (n.topicName != this.state.topic) {\n            // Topic has changed. Drop the notification.\n            this.readNotificationQueue.shift();\n            continue;\n          }\n\n          const now = new Date();\n          if (n.sendAt <= now) {\n            // Remove expired notification from queue.\n            this.readNotificationQueue.shift();\n            seq = Math.max(seq, n.seq);\n          } else {\n            break;\n          }\n        }\n\n        // Send only one notification for the whole batch of messages.\n        if (seq >= 0) {\n          const topic = this.props.tinode.getTopic(this.state.topic);\n          if (topic) {\n            topic.noteRead(seq);\n          }\n        }\n      }, NOTIFICATION_EXEC_INTERVAL);\n    }\n\n    const now = new Date();\n    this.readNotificationQueue.push({\n      topicName: this.state.topic,\n      seq: seq,\n      sendAt: now.setMilliseconds(now.getMilliseconds() + READ_DELAY)\n    });\n  }\n\n  // Clear notification queue and timer.\n  clearNotificationQueue() {\n    this.readNotificationQueue = [];\n    if (this.readNotificationTimer) {\n      clearInterval(this.readNotificationTimer);\n      this.readNotificationTimer = null;\n    }\n  }\n\n  handleSubsUpdated() {\n    if (this.state.topic) {\n      const subs = [];\n      const topic = this.props.tinode.getTopic(this.state.topic);\n      topic.subscribers((sub) => {\n        if (sub.online && sub.user != this.props.myUserId) {\n          subs.push(sub);\n        }\n      });\n      const newState = {onlineSubs: subs};\n      const peer = topic.p2pPeerDesc();\n      if (peer) {\n        Object.assign(newState, {\n          peerMessagingDisabled: isPeerRestricted(peer.acs)\n        });\n      } else if (this.state.peerMessagingDisabled) {\n        Object.assign(newState, {\n          peerMessagingDisabled: false\n        });\n      }\n      this.setState(newState);\n    }\n  }\n\n  // The 'msg' could be false-ish if some message ranges were deleted.\n  handleMessageUpdate(msg) {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (!msg) {\n      // msg could be null if one or more messages were deleted.\n      // Updating state to force redraw.\n      this.setState({latestClearId: topic.maxClearId()});\n      return;\n    }\n\n    clearTimeout(this.keyPressTimer)\n    this.setState({messageCount: topic.messageCount(), typingIndicator: false});\n\n    // Scroll to the bottom if the message is added to the end of the message list.\n    // TODO: This should be replaced by showing a \"scroll to bottom\" button.\n    if (topic.isNewMessage(msg.seq)) {\n      this.setState({scrollPosition: 0});\n    }\n\n    // Aknowledge messages except own messages. They are\n    // automatically assumed to be read and recived.\n    const status = topic.msgStatus(msg, true);\n    if (status >= Tinode.MESSAGE_STATUS_SENT && msg.from != this.props.myUserId) {\n      this.postReadNotification(msg.seq);\n    }\n    // This will send \"received\" notifications right away.\n    this.props.onData(msg);\n  }\n\n  handleAllMessagesReceived(count) {\n    this.setState({fetchingMessages: false});\n    if (count > 0) {\n      // 0 means \"latest\".\n      this.postReadNotification(0);\n    }\n  }\n\n  handleInfoReceipt(info) {\n    switch (info.what) {\n      case 'kp': {\n        clearTimeout(this.keyPressTimer);\n        this.keyPressTimer = setTimeout(() => {\n          this.setState({typingIndicator: false});\n        }, KEYPRESS_DELAY + 1000);\n        if (!this.state.typingIndicator) {\n          this.setState({typingIndicator: true});\n        }\n        break;\n      }\n      case 'read':\n      case 'recv':\n        // Redraw due to changed recv/read status.\n        this.forceUpdate();\n        break;\n      default:\n        console.info(\"Other change in topic: \", info.what);\n    }\n  }\n\n  handleImagePostview(content) {\n    this.setState({ imagePostview: content });\n  }\n\n  handleClosePreview() {\n    if (this.state.imagePreview && this.state.imagePreview.url) {\n      URL.revokeObjectURL(this.state.imagePreview.url);\n    }\n    this.setState({ imagePostview: null, imagePreview: null, docPreview: null });\n  }\n\n  handleFormResponse(action, text, data) {\n    if (action == 'pub') {\n      this.sendMessage(Drafty.attachJSON(Drafty.parse(text), data));\n    } else if (action == 'url') {\n      const url = new URL(data.ref);\n      const params = url.searchParams;\n      for (let key in data.resp) {\n        if (data.resp.hasOwnProperty(key)) {\n          params.set(key, data.resp[key]);\n        }\n      }\n      ['name', 'seq'].map((key) => {\n        if (data[key]) {\n          params.set(key, data[key]);\n        }\n      });\n      params.set('uid', this.props.myUserId);\n      params.set('topic', this.state.topic);\n      url.search = params;\n      window.open(url, '_blank');\n    } else {\n      console.info(\"Unknown action in form\", action);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.state.topic, y: e.pageY, x: e.pageX });\n  }\n\n  handleShowContextMenuMessage(params, messageSpecificMenuItems) {\n    params.topicName = this.state.topic;\n    const menuItems = messageSpecificMenuItems || [];\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (topic) {\n      if (!topic.isChannelType()) {\n        menuItems.push('message_delete');\n      }\n      const acs = topic.getAccessMode();\n      if (acs && acs.isDeleter()) {\n        menuItems.push('message_delete_hard');\n      }\n    }\n    this.props.showContextMenu(params, menuItems);\n  }\n\n  handleNewChatAcceptance(action) {\n    this.props.onNewChat(this.state.topic, action);\n  }\n\n  handleEnablePeer(e) {\n    e.preventDefault();\n    this.props.onChangePermissions(this.state.topic, DEFAULT_P2P_ACCESS_MODE, this.state.topic);\n  }\n\n  sendKeyPress() {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (topic.isSubscribed()) {\n      topic.noteKeyPress();\n    }\n  }\n\n  // sendMessage sends the message with an optional subscription to topic first.\n  sendMessage(msg, uploadCompletionPromise, uploader) {\n    let head;\n    if (this.state.reply && this.state.reply.content) {\n      head = {reply: '' + this.state.reply.seq};\n      // Turn it into Drafty so we can make a quoted Drafty object later.\n      if (typeof msg == 'string') {\n        msg = Drafty.parse(msg);\n      }\n      msg = Drafty.append(this.state.reply.content, msg);\n      this.setState({reply: null});\n    }\n    this.props.sendMessage(msg, uploadCompletionPromise, uploader, head);\n  }\n\n  // Retry sending a message.\n  retrySend(pub) {\n    this.props.sendMessage(pub.content, undefined, undefined, pub.head);\n  }\n\n  // Send attachment as Drafty message:\n  // - if file is too large, upload it and send a s link.\n  // - if file is small enough, just send it in-band.\n  sendFileAttachment(file) {\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (file.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      const uploadCompletionPromise = uploader.upload(file);\n      const msg = Drafty.attachFile(null, {\n        mime: file.type,\n        filename: file.name,\n        size: file.size,\n        urlPromise: uploadCompletionPromise\n      });\n      // Pass data and the uploader to the TinodeWeb.\n      this.sendMessage(msg, uploadCompletionPromise, uploader);\n    } else {\n      // Small enough to send inband.\n      fileToBase64(file)\n        .then(b64 => this.sendMessage(Drafty.attachFile(null, {mime: b64.mime, data: b64.bits, filename: b64.name})))\n        .catch(err => this.props.onError(err));\n    }\n  }\n\n  // handleAttachFile method is called when [Attach file] button is clicked.\n  handleAttachFile(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    if (file.size > maxExternAttachmentSize) {\n      // Too large.\n      this.props.onError(this.props.intl.formatMessage(messages.file_attachment_too_large,\n        {size: bytesToHumanSize(file.size), limit: bytesToHumanSize(maxExternAttachmentSize)}), 'err');\n    } else {\n      this.setState({ docPreview: {\n        file: file,\n        name: file.name,\n        size: file.size,\n        type: file.type\n      }});\n    }\n  }\n\n  // sendImageAttachment sends the image bits inband as Drafty message.\n  sendImageAttachment(caption, blob) {\n    const mime = this.state.imagePreview.mime;\n    const width = this.state.imagePreview.width;\n    const height = this.state.imagePreview.height;\n    const fname = this.state.imagePreview.name;\n\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (blob.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      if (!uploader) {\n        this.props.onError(this.props.intl.formatMessage(messages.cannot_initiate_upload));\n        return;\n      }\n      const uploadCompletionPromise = uploader.upload(blob);\n\n      // Make small preview to show while uploading.\n      imageScaled(blob, IMAGE_PREVIEW_DIM, IMAGE_PREVIEW_DIM, -1, false)\n        // Convert tiny image into base64 for serialization and previewing.\n        .then(scaled => blobToBase64(scaled.blob))\n        .then(b64 => {\n            let msg = Drafty.insertImage(null, 0, {\n              mime: mime,\n              _tempPreview: b64.bits, // This preview will not be serialized.\n              width: width,\n              height: height,\n              filename: fname,\n              size: blob.size,\n              urlPromise: uploadCompletionPromise\n            });\n            if (caption) {\n              msg = Drafty.appendLineBreak(msg);\n              msg = Drafty.append(msg, Drafty.parse(caption));\n            }\n            // Pass data and the uploader to the TinodeWeb.\n            this.sendMessage(msg, uploadCompletionPromise, uploader);\n        }).catch((err) => {\n          this.props.onError(err, 'err');\n        });\n        return;\n    }\n\n    // Upload the image if it's too big to be send inband.\n    blobToBase64(blob)\n      .then(b64 => {\n        let msg = Drafty.insertImage(null, 0, {\n          mime: b64.mime,\n          preview: b64.bits, // Serializable preview\n          width: width,\n          height: height,\n          filename: fname,\n          size: blob.size\n        });\n        if (caption) {\n          msg = Drafty.appendLineBreak(msg);\n          msg = Drafty.append(msg, Drafty.parse(caption));\n        }\n        this.sendMessage(msg);\n      });\n  }\n\n  // handleAttachImage method is called when [Attach image] button is clicked.\n  handleAttachImage(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    // Get image dimensions and size, optionally scale it down.\n    imageScaled(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, maxExternAttachmentSize, false)\n      .then(scaled => {\n        this.setState({imagePreview: {\n          url: URL.createObjectURL(scaled.blob),\n          blob: scaled.blob,\n          name: scaled.name,\n          width: scaled.width,\n          height: scaled.height,\n          size: scaled.blob.size,\n          mime: scaled.mime\n        }});\n      }).catch(err => {\n        this.props.onError(err, 'err');\n      });\n  }\n\n  handleCancelUpload(seq, uploader) {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    const found = topic.findMessage(seq);\n    if (found) {\n      found._cancelled = true;\n    }\n    uploader.cancel();\n  }\n\n  handlePickReply(seq, content) {\n    this.setState({reply: null});\n\n    if (!seq || !content) {\n      return;\n    }\n\n    if (typeof content == 'string') {\n      content = Drafty.init(content);\n    }\n    if (Drafty.isValid(content)) {\n      content = Drafty.preview(content, QUOTED_REPLY_LENGTH);\n    } else {\n      // /!\\ invalid content.\n      content = Drafty.append(Drafty.init('\\u26A0 '),\n        Drafty.wrapInto(this.props.intl.formatMessage(messages.invalid_content), 'EM'));\n    }\n\n    // Get the author.\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    const msg = topic.findMessage(seq);\n    let senderName, senderId;\n    if (msg) {\n      senderId = msg.from || 'chan';\n      if (senderId != this.props.myUserId) {\n        const topic = this.props.tinode.getTopic(this.state.topic);\n        const user = topic.userDesc(senderId);\n        if (user && user.public) {\n          senderName = user.public.fn;\n        }\n      } else {\n        senderName = this.props.myUserName;\n      }\n    }\n\n    this.setState({\n      reply: {\n        content: Drafty.quote(senderName, senderId, content),\n        seq: seq\n      }\n    });\n  }\n\n  handleCancelReply() {\n    this.setState({reply: null})\n  }\n\n  handleQuoteClick(replyToSeq) {\n    const ref = this.getOrCreateMessageRef(replyToSeq);\n    if (ref && ref.current) {\n      ref.current.scrollIntoView({block: \"center\", behavior: \"smooth\"});\n      ref.current.classList.add('flash');\n      setTimeout(() => { ref.current.classList.remove('flash') } , 1000);\n    } else {\n      console.error(\"Unresolved message ref\", replyToSeq);\n    }\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n\n    let component;\n    if (this.props.hideSelf) {\n      component = null;\n    } else if (!this.state.topic) {\n      component = (\n        <LogoView\n          serverVersion={this.props.serverVersion}\n          serverAddress={this.props.serverAddress} />\n      );\n    } else {\n      let component2;\n      if (this.state.imagePreview) {\n        // Preview image before sending.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePreview}\n            tinode={this.props.tinode}\n            replyTo={this.state.reply}\n            onCancelReply={this.handleCancelReply}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendImageAttachment} />\n        );\n      } else if (this.state.imagePostview) {\n        // Expand received image.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePostview}\n            onClose={this.handleClosePreview} />\n        );\n      } else if (this.state.docPreview) {\n        // Preview attachment before sending.\n        component2 = (\n          <DocPreview\n            content={this.state.docPreview}\n            tinode={this.props.tinode}\n            replyTo={this.state.reply}\n            onCancelReply={this.handleCancelReply}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendFileAttachment} />\n        );\n      } else {\n        const topic = this.props.tinode.getTopic(this.state.topic);\n        const isChannel = topic.isChannelType();\n        const groupTopic = topic.isGroupType() && !isChannel;\n        const icon_badges = [];\n        if (topic.trusted) {\n          if (topic.trusted.verified) {\n            icon_badges.push({icon: 'verified', color: 'badge-inv'});\n          }\n          if (topic.trusted.staff) {\n            icon_badges.push({icon: 'staff', color: 'badge-inv'});\n          }\n          if (topic.trusted.danger) {\n            icon_badges.push({icon: 'dangerous', color: 'badge-inv'});\n          }\n        }\n        let messageNodes = [];\n        let previousFrom = null;\n        let chatBoxClass = null;\n        topic.messages((msg, prev, next, i) => {\n          let nextFrom = next ? (next.from || null) : 'chan';\n\n          let sequence = 'single';\n          let thisFrom = msg.from || 'chan';\n          if (thisFrom == previousFrom) {\n            if (thisFrom == nextFrom) {\n              sequence = 'middle';\n            } else {\n              sequence = 'last';\n            }\n          } else if (thisFrom == nextFrom) {\n            sequence = 'first';\n          }\n          previousFrom = thisFrom;\n\n          const isReply = !(thisFrom == this.props.myUserId);\n          const deliveryStatus = topic.msgStatus(msg, true);\n\n          let userName, userAvatar, userFrom;\n          if (groupTopic) {\n            const user = topic.userDesc(thisFrom);\n            if (user && user.public) {\n              userName = user.public.fn;\n              userAvatar = makeImageUrl(user.public.photo);\n            }\n            userFrom = thisFrom;\n            chatBoxClass='chat-box group';\n          } else {\n            chatBoxClass='chat-box';\n          }\n\n          // Ref for this chat message.\n          const ref = this.getOrCreateMessageRef(msg.seq);\n          let replyToSeq = msg.head ? parseInt(msg.head.reply) : null;\n          if (!replyToSeq || isNaN(replyToSeq)) {\n            replyToSeq = null;\n          }\n\n          messageNodes.push(\n            <ChatMessage\n              tinode={this.props.tinode}\n              content={msg.content}\n              deleted={msg.hi}\n              mimeType={msg.head ? msg.head.mime : null}\n              timestamp={msg.ts}\n              response={isReply}\n              seq={msg.seq}\n              userFrom={userFrom}\n              userName={userName}\n              userAvatar={userAvatar}\n              sequence={sequence}\n              received={deliveryStatus}\n              uploader={msg._uploader}\n              viewportWidth={this.props.viewportWidth}  // Used by `formatter`.\n              showContextMenu={this.state.channel? false : this.handleShowContextMenuMessage}\n              onImagePreview={this.handleImagePostview}\n              onFormResponse={this.handleFormResponse}\n              onError={this.props.onError}\n              onCancelUpload={this.handleCancelUpload}\n              pickReply={this.handlePickReply}\n              replyToSeq={replyToSeq}\n              onQuoteClick={this.handleQuoteClick}\n              ref={ref}\n              userIsWriter={this.state.isWriter}\n              key={msg.seq} />\n          );\n        });\n\n        let lastSeen = null;\n        if (isChannel) {\n          lastSeen = formatMessage(messages.channel);\n        } else {\n          const cont = this.props.tinode.getMeTopic().getContact(this.state.topic);\n          if (cont && Tinode.isP2PTopicName(cont.topic)) {\n            if (cont.online) {\n              lastSeen = formatMessage(messages.online_now);\n            } else if (cont.seen) {\n              lastSeen = formatMessage(messages.last_seen) + \": \" +\n                shortDateFormat(cont.seen.when, this.props.intl.locale);\n              // TODO: also handle user agent in c.seen.ua\n            }\n          }\n        }\n        const avatar = this.state.avatar || true;\n        const online = this.props.online ? 'online' + (this.state.typingIndicator ? ' typing' : '') : 'offline';\n\n        component2 = (\n          <>\n            <div id=\"topic-caption-panel\" className=\"caption-panel\">\n              {this.props.displayMobile ?\n                <a href=\"#\" id=\"hide-message-view\" onClick={(e) => {e.preventDefault(); this.props.onHideMessagesView();}}>\n                  <i className=\"material-icons\">arrow_back</i>\n                </a>\n                :\n                null}\n              <div className=\"avatar-box\">\n                <LetterTile\n                  tinode={this.props.tinode}\n                  avatar={avatar}\n                  topic={this.state.topic}\n                  title={this.state.title} />\n                {!isChannel ? <span className={online} /> : null}\n              </div>\n              <div id=\"topic-title-group\">\n                <div id=\"topic-title\" className=\"panel-title\">{\n                  this.state.title ||\n                  <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n                    description=\"Title shown when the topic has no name\" /></i>\n                }<ContactBadges badges={icon_badges} /></div>\n                <div id=\"topic-last-seen\">{lastSeen}</div>\n              </div>\n              {groupTopic ?\n                <GroupSubs\n                  tinode={this.props.tinode}\n                  subscribers={this.state.onlineSubs} /> :\n                <div id=\"topic-users\" />\n              }\n              <div>\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">more_vert</i>\n                </a>\n              </div>\n            </div>\n            {this.props.displayMobile ?\n              <ErrorPanel\n                level={this.props.errorLevel}\n                text={this.props.errorText}\n                onClearError={this.props.onError} />\n              : null}\n            <LoadSpinner show={this.state.fetchingMessages} />\n            <div id=\"messages-container\">\n              <div id=\"messages-panel\" ref={this.handleScrollReference}>\n                <ul id=\"scroller\" className={chatBoxClass}>\n                  {messageNodes}\n                </ul>\n              </div>\n              {!this.state.isReader ?\n              <div id=\"write-only-background\">\n                {this.state.readingBlocked ?\n                <div id=\"write-only-note\">\n                  <FormattedMessage id=\"messages_not_readable\" defaultMessage=\"no access to messages\"\n                    description=\"Message shown in topic without the read access\" />\n                </div>\n                : null }\n              </div>\n              : null }\n            </div>\n            {this.state.peerMessagingDisabled && !this.state.unconfirmed ?\n              <div id=\"peer-messaging-disabled-note\">\n                <i className=\"material-icons secondary\">block</i> <FormattedMessage\n                  id=\"peers_messaging_disabled\" defaultMessage=\"Peer's messaging is disabled.\"\n                  description=\"Shown when the p2p peer's messaging is disabled\" /> <a href=\"#\"\n                    onClick={this.handleEnablePeer}><FormattedMessage id=\"enable_peers_messaging\"\n                    defaultMessage=\"Enable\" description=\"Call to action to enable peer's messaging\" /></a>.\n              </div> : null}\n            {this.state.unconfirmed ?\n              <Invitation onAction={this.handleNewChatAcceptance} />\n              :\n              <SendMessage\n                tinode={this.props.tinode}\n                disabled={!this.state.isWriter}\n                onKeyPress={this.sendKeyPress}\n                onSendMessage={this.sendMessage}\n                onAttachFile={this.handleAttachFile}\n                onAttachImage={this.handleAttachImage}\n                onError={this.props.onError}\n                replyTo={this.state.reply}\n                onQuoteClick={this.handleQuoteClick}\n                onCancelReply={this.handleCancelReply} />}\n          </>\n        );\n      }\n\n      component = <div id=\"topic-view\">{component2}</div>\n    }\n    return component;\n  }\n};\n\nexport default injectIntl(MessagesView);\n","// The <- button to be displayed in title bars.\nimport React from 'react';\n\nexport default class ButtonBack extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onBack();}}>\n        <i className=\"material-icons\">arrow_back</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class MenuContacts extends React.PureComponent {\n  render() {\n    return (\n      <div>\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onNewTopic();}}><i className=\"material-icons\">chat</i></a>\n        &nbsp;\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nexport default class MenuStart extends React.PureComponent {\n  render() {\n    return (\n        <div>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSignUp();}}><i className=\"material-icons\">person_add</i></a>\n          &nbsp;\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n        </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\nimport ButtonBack from './button-back.jsx';\nimport ContactBadges from './contact-badges.jsx';\nimport MenuContacts from './menu-contacts.jsx';\nimport MenuStart from './menu-start.jsx';\n\nimport { sanitizeImageUrl } from '../lib/utils.js';\n\nexport default class SideNavbar extends React.PureComponent {\n  render() {\n    const icon_badges = [];\n    if (this.props.trustedBadges) {\n      this.props.trustedBadges.map((b) => {\n        icon_badges.push({icon: b, color: 'badge-inv'});\n      });\n    }\n    let avatar = null;\n    if (this.props.tinode) {\n      avatar = this.props.tinode.authorizeURL(sanitizeImageUrl(this.props.avatar));\n    }\n    return (\n      <div id=\"side-caption-panel\" className=\"caption-panel\">\n        {this.props.onCancel ? <ButtonBack onBack={this.props.onCancel} /> : null}\n        {avatar ?\n          <div id=\"self-avatar\" className=\"avatar-box\">\n            <LetterTile\n              tinode={this.props.tinode}\n              avatar={avatar}\n              topic={this.props.myUserId}\n              title={this.props.title} />\n          </div>\n          :\n          null}\n        <div id=\"sidepanel-title\" className=\"panel-title\">{this.props.title}<ContactBadges badges={icon_badges}/></div>\n        {this.props.state === 'login' ?\n            <MenuStart onSignUp={this.props.onSignUp} onSettings={this.props.onSettings} /> :\n          this.props.state === 'contacts' ?\n            <MenuContacts onNewTopic={this.props.onNewTopic} onSettings={this.props.onSettings} /> :\n          null}\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport BadgeList from '../widgets/badge-list.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH } from '../config.js';\n\nfunction _clip(str, length) {\n  return str && str.substring(0, length);\n}\n\nexport default class AccountSettingsView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    this.state = {\n      fullName: _clip(me.public ? me.public.fn : undefined, MAX_TITLE_LENGTH),\n      description: _clip(me.public ? me.public.note : undefined, MAX_TOPIC_DESCRIPTION_LENGTH),\n      avatar: makeImageUrl(me.public ? me.public.photo : null)\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          <a href=\"#\" className=\"flat-button float-right\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('general');}}>\n            <i className=\"material-icons\">edit</i>&nbsp;\n            <FormattedMessage id=\"button_edit\" defaultMessage=\"Edit\" description=\"Call to action [Edit]\" />\n          </a>\n          <center>\n            <AvatarUpload\n              tinode={this.props.tinode}\n              avatar={this.state.avatar}\n              readOnly={true}\n              uid={this.props.myUserId}\n              title={this.state.fullName} />\n          </center>\n          <div className=\"group\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n                description=\"Label for full name editing\" />\n            </label>\n            <div className=\"large ellipsized\">{this.state.fullName}</div>\n          </div>\n          <div className=\"group\">\n            <label className=\"small\"><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n              description=\"Label for user address (ID)\" /></label>&nbsp;\n            <tt>{this.props.myUserId}</tt>\n          </div>\n          <div className=\"group\">\n            <BadgeList trustedBadges={this.props.trustedBadges} />\n          </div>\n          {this.state.description ?\n            <div className=\"group\">\n              <label className=\"small\">\n                <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                  description=\"Label for editing topic description\" />\n              </label>\n              <div>{this.state.description}</div>\n            </div> : null}\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('notif');}}>\n            <i className=\"material-icons\">notifications</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_notifications\"\n              defaultMessage=\"Notifications\" description=\"Sidepanel title for AccNotificationsView.\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('security');}}>\n            <i className=\"material-icons\">security</i>&nbsp;<FormattedMessage id=\"button_security\"\n              defaultMessage=\"Security\" description=\"Navigaton button for security panel.\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('support');}}>\n            <i className=\"material-icons\">contact_support</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_support\"\n              defaultMessage=\"Support\" description=\"Sidepanel title for AccSupportView.\" />\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","/* ContactsView holds all contacts-related stuff */\nimport React from 'react';\nimport { FormattedMessage, defineMessages } from 'react-intl';\n\nimport ContactList from '../widgets/contact-list.jsx';\n\nimport { updateFavicon } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  archived_contacts_title: {\n    id: \"archived_contacts\",\n    defaultMessage: \"Archived contacts ({count})\",\n    description: \"Label for archived chats\"\n  }\n});\n\nexport default class ContactsView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAction = this.handleAction.bind(this);\n\n    this.state = ContactsView.deriveStateFromProps(props);\n  }\n\n  static deriveStateFromProps(props) {\n    const contacts = [];\n    let unreadThreads = 0;\n    let archivedCount = 0;\n    props.chatList.map((c) => {\n      const blocked = c.acs && !c.acs.isJoiner();\n      // Show only blocked contacts only when props.blocked == true.\n      if (blocked && props.blocked) {\n        contacts.push(c);\n      }\n      if (blocked || props.blocked) {\n        return;\n      }\n\n      if (c.private && c.private.arch) {\n        if (props.archive) {\n          contacts.push(c);\n        } else {\n          archivedCount ++;\n        }\n      } else if (!props.archive) {\n        contacts.push(c);\n        unreadThreads += c.unread > 0 ? 1 : 0;\n      }\n    });\n\n    contacts.sort((a, b) => {\n      return (b.touched || 0) - (a.touched || 0);\n    });\n\n    if (archivedCount > 0) {\n      contacts.push({\n        action: 'archive',\n        title: messages.archived_contacts_title,\n        values: {count: archivedCount}\n      });\n    }\n\n    return {\n      contactList: contacts,\n      unreadThreads: unreadThreads\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chatList != this.props.chatList ||\n        prevProps.archive != this.props.archive ||\n        prevProps.blocked != this.props.blocked) {\n      const newState = ContactsView.deriveStateFromProps(this.props);\n      this.setState(newState);\n      if (newState.unreadThreads != prevState.unreadThreads) {\n        updateFavicon(newState.unreadThreads);\n      }\n    }\n  }\n\n  handleAction(action_ignored) {\n    this.props.onShowArchive();\n  }\n\n  render() {\n    return (\n      <FormattedMessage id=\"contacts_not_found\"\n        defaultMessage=\"You have no chats<br />¯∖_(ツ)_/¯\"\n        description=\"HTML message shown in ContactList when no contacts are found\">{\n        (no_contacts) => <ContactList\n          tinode={this.props.tinode}\n          connected={this.props.connected}\n          contacts={this.state.contactList}\n          emptyListMessage={no_contacts}\n          topicSelected={this.props.topicSelected}\n          myUserId={this.props.myUserId}\n          showOnline={true}\n          showUnread={true}\n          onTopicSelected={this.props.onTopicSelected}\n          showContextMenu={this.props.showContextMenu}\n          onAction={this.handleAction} />\n      }</FormattedMessage>\n    );\n  }\n};\n","// Helper functions for storing values in localStorage.\n// By default localStorage can store only strings, not objects or other types.\n\nexport default class LocalStorageUtil {\n  // Replace old object with the new one.\n  static setObject(key, value) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n\n  // Get stored object.\n  static getObject(key) {\n    const value = localStorage.getItem(key);\n    return value && JSON.parse(value);\n  }\n\n  // Partially or wholly update stored object.\n  static updateObject(key, value) {\n    const oldVal = this.getObject(key);\n    this.setObject(key, Object.assign(oldVal || {}, value));\n  }\n\n  // Just a wrapper.\n  static removeItem(key) {\n    localStorage.removeItem(key);\n  }\n}\n","// Account registration.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport { theCard } from '../lib/utils.js';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class CreateAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: '',\n      password: '',\n      email: '',\n      fn: '', // full/formatted name\n      imageDataUrl: null,\n      errorCleared: false,\n      saveToken: LocalStorageUtil.getObject('keep-logged-in')\n    };\n\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(password) {\n    this.setState({password: password});\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value})\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleToggleSaveToken() {\n    LocalStorageUtil.setObject('keep-logged-in', !this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({errorCleared: false});\n    this.props.onCreateAccount(\n      this.state.login.trim(),\n      this.state.password.trim(),\n      theCard(this.state.fn.trim().substring(0, MAX_TITLE_LENGTH), this.state.imageDataUrl),\n      {'meth': 'email', 'val': this.state.email});\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form className=\"panel-form-column\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n              description=\"Placeholer for username/login\">{\n              (login_prompt) => <input type=\"text\" placeholder={login_prompt} autoComplete=\"user-name\"\n                value={this.state.login} onChange={this.handleLoginChange} required autoFocus />\n            }</FormattedMessage>\n            <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n              description=\"Placeholder/prompt for entering password\">{\n              (password_prompt) => <VisiblePassword placeholder={password_prompt} autoComplete=\"new-password\"\n                value={this.state.password} onFinished={this.handlePasswordChange}\n                required={true} />\n            }</FormattedMessage>\n          </div>\n          <AvatarUpload\n            tinode={this.props.tinode}\n            onImageChanged={this.handleImageChanged}\n            onError={this.props.onError} />\n        </div>\n        <div  className=\"panel-form-row\">\n          <FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n            description=\"Input placeholder for person's full name\">{\n            (full_name_prompt) => <input type=\"text\" placeholder={full_name_prompt} autoComplete=\"name\"\n              value={this.state.fn} onChange={this.handleFnChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <FormattedMessage id=\"email_prompt\" defaultMessage=\"Email, e.g. jdoe@example.com\"\n            description=\"Input placeholder for email entry\">{\n            (email_prompt) => <input type=\"email\" placeholder={email_prompt} autoComplete=\"email\"\n              value={this.state.email} onChange={this.handleEmailChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n            description=\"Label for a checkbox\">{\n            (stay_logged_in) => <label htmlFor=\"save-token\">&nbsp;{stay_logged_in}</label>\n          }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_up\" defaultMessage=\"Sign up\"\n              description=\"Create account button [Sign Up]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\n\nexport default class EditAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckboxClick = this.handleCheckboxClick.bind(this);\n  }\n\n  handleCheckboxClick(what, checked) {\n    if (what == 'sound') {\n      this.props.onToggleMessageSounds(checked);\n    } else if (what == 'alert') {\n      this.props.onTogglePushNotifications(checked);\n    } else if (what == 'incognito') {\n      this.props.onToggleIncognitoMode(checked);\n    }\n  }\n\n  render() {\n    return (\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"message-sound\">\n              <FormattedMessage id=\"label_message_sound\" defaultMessage=\"Message sound:\"\n                description=\"Label for message sounds toggle\" />\n            </label>\n            <CheckBox name=\"sound\" id=\"message-sound\"\n              checked={this.props.messageSounds} onChange={this.handleCheckboxClick} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"desktop-alerts\">\n            {this.props.desktopAlertsEnabled ?\n              <FormattedMessage id=\"label_push_notifications\" defaultMessage=\"Notification alerts:\"\n                description=\"Label for push notifications switch\" />\n              :\n              <FormattedMessage id=\"label_push_notifications_disabled\"\n                defaultMessage=\"Notification alerts (requires HTTPS):\"\n                description=\"Label for push notifications switch\" />\n            }\n            </label>\n            <CheckBox name=\"alert\" id=\"desktop-alerts\"\n              checked={this.props.desktopAlerts}\n              onChange={this.props.desktopAlertsEnabled ? this.handleCheckboxClick : null} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"incognito-mode\">\n              <FormattedMessage id=\"label_incognito_mode\" defaultMessage=\"Incognito mode:\"\n                description=\"Label for incognito mode toggle\" />\n            </label>\n            <CheckBox name=\"incognito\" id=\"incognito-mode\"\n              checked={this.props.incognitoMode} onChange={this.handleCheckboxClick} />\n          </div>\n        </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\n\nconst messages = defineMessages({\n  delete_account: {\n    id: 'delete_account',\n    defaultMessage: 'Delete account',\n    description: 'Title for delete account warning'\n  },\n  delete_account_warning: {\n    id: 'delete_account_warning',\n    defaultMessage: 'Are you sure you want to delete your account? It cannot be undone.',\n    description: 'Warning message when deleting an account'\n  }\n});\n\nclass AccSecurityView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    let blockedCount = 0;\n    me.contacts((c) => {\n      if (c.acs && !c.acs.isJoiner()) {\n        blockedCount ++;\n      }\n    });\n    const defacs = me.getDefaultAccess();\n    this.state = {\n      auth: defacs ? defacs.auth : null,\n      anon: defacs ? defacs.anon : null,\n      showPermissionEditorFor: undefined,\n      blockedCount: blockedCount,\n    };\n\n    this.handlePasswordUpdate = this.handlePasswordUpdate.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n  }\n\n  handlePasswordUpdate(pwd) {\n    this.setState({password: pwd});\n    this.props.onUpdatePassword(pwd);\n  }\n\n  handleLaunchPermissionsEditor(which) {\n    this.setState({\n      showPermissionEditorFor: which,\n      editedPermissions: this.state[which]\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handlePermissionsChanged(perm) {\n    let defacs = {};\n    defacs[this.state.showPermissionEditorFor] = perm;\n    this.props.onUpdateAccountDesc('me', undefined, undefined, defacs);\n\n    let newState = {showPermissionEditorFor: undefined};\n    newState[this.state.showPermissionEditorFor] = perm;\n    this.setState(newState);\n  }\n\n  handleDeleteAccount(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.delete_account), // title\n      formatMessage(messages.delete_account_warning), // content\n      (() => { this.props.onDeleteAccount(); }), // onConfirm\n      null, // use default text \"OK\"\n      true, // Show Reject button\n      null  // use default text \"Cancel\"\n    );\n  }\n\n  render() {\n    return (\n      <React.Fragment>{this.state.showPermissionEditorFor ?\n        <PermissionsEditor\n          mode={this.state.editedPermissions}\n          skip=\"O\"\n          onSubmit={this.handlePermissionsChanged}\n          onCancel={this.handleHidePermissionsEditor} />\n        :\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_password\" defaultMessage=\"Password\"\n                  description=\"Label for password editing\" />\n            </label>\n            <div>\n              <FormattedMessage id=\"password_unchanged_prompt\" defaultMessage=\"Unchanged\"\n                description=\"Message in editor while password is unchanged\">{\n                (password_unchanged) => <InPlaceEdit\n                  placeholder={password_unchanged}\n                  type=\"password\"\n                  onFinished={this.handlePasswordUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <a href=\"#\" className=\"danger flat-button\" onClick={(e) => {e.preventDefault(); this.props.onLogout();}}>\n              <i className=\"material-icons\">exit_to_app</i> &nbsp;<FormattedMessage id=\"button_logout\"\n                defaultMessage=\"Logout\" description=\"Button [Logout]\" />\n            </a>\n            <a href=\"#\" className=\"danger flat-button\" onClick={(e) => {this.handleDeleteAccount(e);}}>\n              <i className=\"material-icons\">delete</i> &nbsp;<FormattedMessage id=\"button_delete_account\"\n                defaultMessage=\"Delete account\" description=\"Button [Delete account]\" />\n            </a>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <div>\n              <label className=\"small\">\n                <FormattedMessage id=\"label_default_access_mode\" defaultMessage=\"Default access mode:\"\n                description=\"Label for default access mode\" />\n              </label>\n            </div>\n            <div className=\"quoted\">\n              <div>Auth: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>{this.state.auth}</tt></div>\n              <div>Anon: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>{this.state.anon}</tt></div>\n            </div>\n          </div>\n          {this.state.blockedCount > 0 ?\n            <>\n              <div className=\"hr\" />\n              <div className=\"panel-form-row\">\n                <i className=\"material-icons\">block</i>&nbsp;\n                <a href=\"#\" className=\"gray\" onClick={(e) => {e.preventDefault(); this.props.onShowBlocked();}}>\n                  <FormattedMessage id=\"blocked_contacts_link\" defaultMessage=\"Blocked contacts ({count})\"\n                    values={{ count: this.state.blockedCount }} description=\"Blocked contacts link\" />\n                </a>\n              </div>\n            </>\n            : null }\n        </div>\n      }</React.Fragment>\n    );\n  }\n};\n\nexport default injectIntl(AccSecurityView);\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME, LINK_CONTACT_US, LINK_PRIVACY_POLICY, LINK_TERMS_OF_SERVICE } from '../config.js';\n\nexport default class AccSupportView extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          <a href={LINK_CONTACT_US} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">email</i> &nbsp;<FormattedMessage id=\"link_contact_us\"\n              defaultMessage=\"Contact Us\" description=\"Ancor text for contacting us by email\" />\n          </a>\n          <a href={LINK_TERMS_OF_SERVICE} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">description</i> &nbsp;<FormattedMessage id=\"link_terms_of_service\"\n              defaultMessage=\"Terms of Service\" description=\"Ancor text for terms of service link\" />\n          </a>\n          <a href={LINK_PRIVACY_POLICY} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">policy</i> &nbsp;<FormattedMessage id=\"link_privacy_policy\"\n              defaultMessage=\"Privacy Policy\" description=\"Ancor text for privacy policy link\" />\n          </a>\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\"\n              description=\"Label for a client version\" /></label>\n            {APP_NAME}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_sdk\" defaultMessage=\"SDK:\" /></label>\n            {Tinode.getLibrary()}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\"\n              description=\"Label for a server version\" /></label>\n            {this.props.serverVersion}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server_address\" defaultMessage=\"Server address:\" /></label>\n            {this.props.serverAddress}\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","// Login form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\n\nexport default class LoginView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: props.login,\n      password: '',\n      hostName: props.serverAddress,\n      saveToken: props.persist\n    };\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  handleToggleSaveToken() {\n    this.props.onPersistenceChange(!this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onLogin(this.state.login.trim(), this.state.password.trim());\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form id=\"login-form\" onSubmit={this.handleSubmit}>\n        <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n          description=\"Placeholer for username/login\">\n        {\n          (login_prompt) => <input type=\"text\" id=\"inputLogin\"\n            placeholder={login_prompt}\n            autoComplete=\"username\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"none\"\n            value={this.state.login}\n            onChange={this.handleLoginChange}\n            required autoFocus />\n        }\n        </FormattedMessage>\n        <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n          description=\"Placeholder/prompt for entering password\">\n        {\n          (password_prompt) => <VisiblePassword type=\"password\" id=\"inputPassword\"\n            placeholder={password_prompt}\n            autoComplete=\"current-password\"\n            value={this.state.password}\n            onChange={this.handlePasswordChange}\n            required={true} />\n        }\n        </FormattedMessage>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <label htmlFor=\"save-token\">&nbsp;\n            <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n              description=\"Label for a checkbox\" />\n          </label>\n          <a href=\"#reset\">\n            <FormattedMessage id=\"forgot_password_link\" defaultMessage=\"Forgot password?\"\n              description=\"Link to Reset password form\" />\n          </a>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_in\" defaultMessage=\"Sign in\"\n              description=\"Button [Sign In]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n/* END Login */\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  invalid_id: {\n    id: 'error_invalid_id',\n    defaultMessage: 'Invalid ID',\n    description: 'Error message'\n  }\n});\n\nclass NewTopicById extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      groupId: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({groupId: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.groupId) {\n      const name = this.state.groupId.trim();\n      const prefix = name.substr(0, 3);\n      if (name.length > 3 && ['usr', 'grp', 'chn'].includes(prefix)) {\n        this.props.onSubmit(name);\n      } else {\n        this.props.onError(this.props.intl.formatMessage(messages.invalid_id), 'err');\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"group_user_id_prompt\" defaultMessage=\"Group or User ID\"\n          description=\"Prompt for entering user or group ID\">{\n          (prompt) => <input type=\"text\" placeholder={prompt}\n            value={this.state.groupId} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required autoFocus />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_subscribe\" defaultMessage=\"Subscribe\"\n              description=\"Button [Subscribe]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicById);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from './avatar-upload.jsx';\nimport CheckBox from './checkbox.jsx';\nimport TagManager from './tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH } from '../config.js';\n\nexport default class NewTopicGroup extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.fullName = React.createRef();\n\n    this.state = {\n      fullName: '', // full/formatted name\n      private: '',\n      description: '',\n      imageDataUrl: null,\n      tags: [],\n      isChannel: false\n    };\n\n    this.handleFieldEdit = this.handleFieldEdit.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleTagsChanged = this.handleTagsChanged.bind(this);\n    this.handleChannelToggle = this.handleChannelToggle.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    // this.fullName.current.focus();\n  }\n\n  handleFieldEdit(name, e) {\n    this.setState({[name]: e.target.value || ''});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleTagsChanged(tags) {\n    this.setState({tags: tags});\n  }\n\n  handleChannelToggle() {\n    this.setState({isChannel: !this.state.isChannel});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const fn = this.state.fullName.trim().substring(0, MAX_TITLE_LENGTH);\n    const comment = this.state.private.trim().substring(0, MAX_TITLE_LENGTH);\n    const description = this.state.description.trim().substring(0, MAX_TOPIC_DESCRIPTION_LENGTH);\n    if (fn) {\n      this.props.onSubmit(fn, description, this.state.imageDataUrl, comment, this.state.tags, this.state.isChannel);\n    }\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n    return (\n      <form className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-column\">\n          <center>\n            <AvatarUpload\n              tinode={this.props.tinode}\n              onError={this.props.onError}\n              onImageChanged={this.handleImageChanged} />\n          </center>\n          <div className=\"group\">\n            <label className=\"small\" htmlFor=\"new-topic-fn\">\n              <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                description=\"Label for editing topic name\" />\n            </label>\n            <FormattedMessage id=\"topic_name_editing_placeholder\" defaultMessage=\"Freeform name of the group\"\n              description=\"Prompt for entering topic name\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-fn\" placeholder={placeholder}\n                ref={this.fullName} value={this.state.fullName} onChange={this.handleFieldEdit.bind(this, 'fullName')}\n                autoFocus required tabIndex={0} />\n            }</FormattedMessage>\n          </div>\n          <div className=\"group\">\n            <label className=\"small\" htmlFor=\"new-topic-priv\">\n              <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                description=\"Label for editing 'private'\" />\n            </label>\n            <FormattedMessage id=\"private_editing_placeholder\" defaultMessage=\"Visible to you only\"\n              description=\"Placeholder for editing 'private'\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-priv\" placeholder={placeholder}\n                value={this.state.private} onChange={this.handleFieldEdit.bind(this, 'private')} tabIndex={1} />\n            }</FormattedMessage>\n          </div>\n          <div className=\"group\">\n            <label className=\"small\" htmlFor=\"new-topic-desc\">\n              <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                description=\"Label for editing topic description\" />\n            </label>\n            <FormattedMessage id=\"description_editing_placeholder\" defaultMessage=\"Description (optional)\"\n              description=\"Placeholder for editing topic description\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-desc\" placeholder={placeholder}\n                value={this.state.description} onChange={this.handleFieldEdit.bind(this, 'description')} tabIndex={2} />\n            }</FormattedMessage>\n          </div>\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox checked={this.state.isChannel} tabIndex={3} onChange={this.handleChannelToggle} />&nbsp;\n          <label onClick={this.handleChannelToggle}><FormattedMessage id=\"channel_prompt\"\n            defaultMessage=\"This is a channel\"\n            description=\"Checkbox label when creating a channel\" /></label>\n        </div>\n        <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (search & discovery)\"\n          description=\"Section title for TagManager\">{\n          (title) => <TagManager\n            tinode={this.props.tinode}\n            tags={this.state.tags}\n            activated={true}\n            onTagsChanged={this.handleTagsChanged}\n            tabIndex={4}\n            title={title} />\n        }</FormattedMessage>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses}>\n            <FormattedMessage id=\"button_create\" defaultMessage=\"Create\"\n              description=\"Button [Create]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nexport default class SearchContacts extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      edited: false,\n      search: ''\n    };\n\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  componentWillUnmount() {\n    if (this.state.edited) {\n      this.setState({search: '', edited: false});\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n  }\n\n  handleSearchChange(e) {\n    this.setState({search: e.target.value});\n  }\n\n  handleSearch(e) {\n    e.preventDefault();\n    var query = this.state.search.trim();\n    this.setState({edited: (query.length > 0)});\n    this.props.onSearchContacts(query.length > 0 ? query : Tinode.DEL_CHAR);\n  }\n\n  handleClear(e) {\n    e.preventDefault();\n    if (this.state.edited) {\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n    this.setState({search: '', edited: false});\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Enter') {\n      this.handleSearch(e);\n    } else if (e.key === 'Escape') {\n      this.handleClear();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <i className=\"material-icons search\">search</i>\n          <FormattedMessage id=\"search_placeholder\" defaultMessage=\"List like email:alice@example.com, tel:17025550003...\"\n            description=\"Placeholder in contacts search field\">{\n            (search_placeholder) => <input className=\"search\" type=\"text\"\n              placeholder={search_placeholder}\n              value={this.state.search} onChange={this.handleSearchChange}\n              onKeyDown={this.handleKeyDown} required autoFocus />\n          }</FormattedMessage>\n          <a href=\"#\" onClick={this.handleClear}>\n            <i className=\"material-icons\">close</i>\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","// Create new topic and invite users or send an invite.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport ContactList from '../widgets/contact-list.jsx';\nimport NewTopicById from '../widgets/new-topic-by-id.jsx';\nimport NewTopicGroup from '../widgets/new-topic-group.jsx';\nimport SearchContacts from '../widgets/search-contacts.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\nimport { theCard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  search_for_contacts: {\n    id: \"search_for_contacts\",\n    defaultMessage: \"Use search to find contacts\",\n    description: \"Text shown in contacts view when user entered no search query.\"\n  },\n  search_no_results: {\n    id: \"search_no_results\",\n    defaultMessage: \"Search returned no results\",\n    description: \"Text shown in contacts view when query returned no results.\"\n  }\n});\n\nclass NewTopicView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tabSelected: 'p2p',\n      searchQuery: null\n    };\n\n    this.handleTabClick = this.handleTabClick.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleNewGroupSubmit = this.handleNewGroupSubmit.bind(this);\n    this.handleGroupByID = this.handleGroupByID.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.onInitFind();\n  }\n\n  handleTabClick(e) {\n    e.preventDefault();\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'tab', e.currentTarget.dataset.id));\n    this.setState({tabSelected: e.currentTarget.dataset.id});\n  }\n\n  handleSearchContacts(query) {\n    this.props.onSearchContacts(query);\n    this.setState({searchQuery: Tinode.isNullValue(query) ? null : query});\n  }\n\n  handleContactSelected(uid) {\n    if (this.state.tabSelected == 'p2p') {\n      HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n      this.props.onCreateTopic(uid);\n    }\n  }\n\n  handleNewGroupSubmit(name, description, dataUrl, priv, tags, isChannel) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(undefined,\n      {public: theCard(name, dataUrl, null, description), private: priv, tags: tags}, isChannel);\n  }\n\n  handleGroupByID(topicName) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(topicName);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const no_contacts_placeholder = formatMessage(this.state.searchQuery ?\n      messages.search_no_results : messages.search_for_contacts);\n    return (\n      <div className=\"flex-column\">\n        <ul className=\"tabbar\">\n          <li className={this.state.tabSelected === \"p2p\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"p2p\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_find_user\" defaultMessage=\"find\"\n                description=\"Tab title Find\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"grp\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"grp\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_new_group\" defaultMessage=\"new group\"\n                description=\"Tab title New Group\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"byid\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"byid\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_group_by_id\" defaultMessage=\"by id\"\n                description=\"Tab title Find topic by ID\" />\n            </a>\n          </li>\n        </ul>\n        {this.state.tabSelected === 'grp' ?\n          <NewTopicGroup\n            tinode={this.props.tinode}\n            onSubmit={this.handleNewGroupSubmit} /> :\n          this.state.tabSelected === 'byid' ?\n            <NewTopicById\n              onSubmit={this.handleGroupByID}\n              onError={this.props.onError} /> :\n            <div className=\"flex-column\">\n              <SearchContacts\n                type=\"p2p\"\n                onSearchContacts={this.handleSearchContacts} />\n              <ContactList\n                tinode={this.props.tinode}\n                contacts={this.props.searchResults}\n                myUserId={this.props.myUserId}\n                emptyListMessage={no_contacts_placeholder}\n                showOnline={false}\n                showUnread={false}\n                showContextMenu={false}\n                onTopicSelected={this.handleContactSelected} />\n            </div>}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicView);\n","// A password reset form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\n\nexport default class PasswordResetView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: '',\n      sent: false\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n  }\n\n  componentDidMount() {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    this.setState({token: parsed.params.token, scheme: parsed.params.scheme});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.token) {\n      this.props.onReset(this.state.scheme, this.state.password.trim(), this.state.token);\n    } else if (this.state.sent) {\n      this.props.onCancel();\n    } else {\n      const email = this.state.email.trim();\n      this.setState({email: email});\n      this.props.onRequest('email', email).then(() => {\n        this.setState({sent: true});\n      });\n    }\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  render() {\n    return (\n      <form id=\"password-reset-form\" onSubmit={this.handleSubmit}>\n        {(this.state.token && this.state.scheme) ?\n          <FormattedMessage id=\"new_password_placeholder\" defaultMessage=\"Enter new password\"\n            description=\"Placeholder for entering new password\">{\n            (placeholder) => <VisiblePassword\n              placeholder={placeholder}\n              autoComplete=\"new-password\"\n              value={this.state.password}\n              required={true} autoFocus={true}\n              onChange={this.handlePasswordChange} />\n          }</FormattedMessage>\n        : this.state.sent ?\n          <>\n            <br/>\n            <center><i className=\"material-icons huge green\">task_alt</i></center>\n            <br/>\n            <center><FormattedMessage id=\"password_reset_email_sent\"\n              defaultMessage=\"An email has been sent to {email}. Follow the directions in the email to reset your password.\"\n              values={{ email: <tt>{this.state.email}</tt> }}\n              description=\"Notification that the email with password reset instructions has been sent\" /></center>\n          </>\n        :\n          <>\n            <label htmlFor=\"inputEmail\">\n              <FormattedMessage id=\"label_reset_password\"\n                defaultMessage=\"Send a password reset email:\"\n                description=\"Label for password reset field\" />\n            </label>\n            <FormattedMessage id=\"credential_email_prompt\" defaultMessage=\"Your registration email\"\n              description=\"Placeholder for entering email\">{\n              (placeholder) => <input type=\"email\" id=\"inputEmail\"\n                placeholder={placeholder}\n                autoComplete=\"email\"\n                value={this.state.email}\n                onChange={this.handleEmailChange}\n                required autoFocus />\n            }</FormattedMessage>\n          </>\n        }\n        <div className=\"dialog-buttons\">\n          <button className=\"primary\" type=\"submit\">{\n            (this.state.token && this.state.scheme) ?\n            <FormattedMessage id=\"button_reset\" defaultMessage=\"Reset\" description=\"Button [Reset]\" />\n            : this.state.sent ?\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\"\n              description=\"Button [OK]\" />\n            :\n            <FormattedMessage id=\"button_send_request\" defaultMessage=\"Send request\"\n              description=\"Button [Send request]\" />\n          }</button>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react';\n\nimport { KNOWN_HOSTS } from '../config.js';\n\n/* Combobox for selecting host name */\n\nexport default class HostSelector extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hostName: props.serverAddress,\n      changed: false\n    };\n\n    this.handleHostNameChange = this.handleHostNameChange.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handleHostNameChange(e) {\n    this.setState({hostName: e.target.value, changed: true});\n  }\n\n  handleEditingFinished() {\n    if (this.state.changed) {\n      this.setState({changed: false});\n      this.props.onServerAddressChange(this.state.hostName.trim());\n    }\n  }\n\n  render() {\n    var hostOptions = [];\n    for (let key in KNOWN_HOSTS) {\n      let item = KNOWN_HOSTS[key];\n      hostOptions.push(\n        <option key={item} value={item} />\n      );\n    }\n    return (\n      <div className=\"panel-form-row\">\n        <input type=\"search\" id=\"host-name\" placeholder={this.props.hostName} list=\"known-hosts\"\n          className=\"quoted\" value={this.state.hostName} onChange={this.handleHostNameChange}\n          onBlur={this.handleEditingFinished} required />\n        <datalist id=\"known-hosts\">\n          {hostOptions}\n        </datalist>\n      </div>\n    );\n  }\n}\n","// Tinode config panel.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport HostSelector from '../widgets/host-selector.jsx';\n\nexport default class SettingsView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transport: props.transport || 'def',\n      serverAddress: props.serverAddress,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleTransportSelected = this.handleTransportSelected.bind(this);\n    this.handleServerAddressChange = this.handleServerAddressChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onUpdate({\n      transport: this.state.transport,\n      serverAddress: this.state.serverAddress\n    });\n  }\n\n  handleTransportSelected(e) {\n    this.setState({transport: e.currentTarget.value});\n  }\n\n  handleServerAddressChange(name) {\n    this.setState({serverAddress: name});\n  }\n\n  render() {\n    const names = {def: \"default\", ws: \"websocket\", lp: \"long polling\"};\n    const transportOptions = [];\n    ['def', 'ws', 'lp'].map((item) => {\n      const id = 'transport-' + item;\n      const name = names[item];\n      transportOptions.push(\n        <li key={item}>\n          <input type=\"radio\" id={id} name=\"transport-select\" value={item}\n            checked={this.state.transport === item}\n            onChange={this.handleTransportSelected} />\n          <label htmlFor={id}>{name}</label>\n        </li>\n      );\n    });\n\n    return (\n      <form id=\"settings-form\" className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_server_to_use\" defaultMessage=\"Server to use:\"\n              description=\"Label for server selector in SettingsView\" />\n          </label>\n        </div>\n        <HostSelector serverAddress={this.state.serverAddress}\n          onServerAddressChange={this.handleServerAddressChange} />\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_wire_transport\" defaultMessage=\"Wire transport:\"\n              description=\"Label for wire transport selection in SettingsView\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ul className=\"quoted\">\n            {transportOptions}\n          </ul>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button type=\"submit\" className=\"primary\">\n            <FormattedMessage id=\"button_update\" defaultMessage=\"Update\"\n              description=\"Button [Update]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// ValidationView: panel for confirming credentials, like email or phone.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  phone: {\n    id: 'phone_dative',\n    defaultMessage: 'phone',\n    description: \"Dative case of 'phone', i.e. 'phone' in 'by phone'\",\n  },\n  email: {\n    id: 'email_dative',\n    defaultMessage: 'email',\n    description: \"Dative case of 'email', i.e. 'email' in 'by email'\",\n  }\n});\n\nclass ValidationView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      code: props.credCode || ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({code: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    } else if (e.key == 'Escape') {\n      this.handleCancel(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.code && this.state.code.trim()) {\n      this.props.onSubmit(this.props.credMethod, this.state.code.trim());\n    }\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel();\n  }\n\n\n  render() {\n    const { formatMessage } = this.props.intl;\n    const methods = {'email': formatMessage(messages.email), 'tel': formatMessage(messages.phone)};\n    let method = methods[this.props.credMethod] || this.props.credMethod;\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\" htmlFor=\"enter-confirmation-code\">\n            <FormattedMessage id=\"enter_confirmation_code_prompt\"\n              defaultMessage=\"Enter confirmation code sent to you by {method}:\"\n              description=\"Request to enter confirmation code\"\n              values={{method: method}} />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"numeric_confirmation_code_prompt\"\n          defaultMessage=\"Numbers only\" description=\"Prompt for numeric conformation code\">{\n          (numbers_only) => <input type=\"text\" id=\"enter-confirmation-code\"\n            placeholder={numbers_only}\n            value={this.state.code} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"secondary\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_confirm\" defaultMessage=\"Confirm\" description=\"Button [Confirm]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ValidationView);\n","import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport SideNavbar from '../widgets/side-navbar.jsx';\nimport TopicCommon from '../widgets/topic-common.jsx';\n\nimport AccountSettingsView from './account-settings-view.jsx';\nimport ContactsView from './contacts-view.jsx';\nimport CreateAccountView from './create-account-view.jsx';\nimport AccNotificationsView from './acc-notifications-view.jsx';\nimport AccSecurityView from './acc-security-view.jsx';\nimport AccSupportView from './acc-support-view.jsx';\nimport LoginView from './login-view.jsx';\nimport NewTopicView from './new-topic-view.jsx';\nimport PasswordResetView from './password-reset-view.jsx';\nimport SettingsView from './settings-view.jsx';\nimport ValidationView from './validation-view.jsx';\n\n// Panel titles for translation.\nconst messages = defineMessages({\n  login: {\n    id: 'sidepanel_title_login',\n    description: 'Sidepanel title for LoginView.',\n    defaultMessage: 'Sign In'\n  },\n  register: {\n    id: 'sidepanel_title_register',\n    description: 'Sidepanel title for CreateAccountView.',\n    defaultMessage: 'Create Account'\n  },\n  settings: {\n    id: 'sidepanel_title_settings',\n    description: 'Sidepanel title for SettingsView.',\n    defaultMessage: 'Settings'\n  },\n  edit: {\n    id: 'sidepanel_title_account_settings',\n    description: 'Sidepanel title for AccountSettingsView.',\n    defaultMessage: 'Account Settings'\n  },\n  general: {\n    id: 'panel_title_general',\n    description: 'Title for TopicCommon.',\n    defaultMessage: 'General'\n  },\n  security: {\n    id: 'panel_title_security',\n    description: 'Title for TopicSecirity and AccSecurity.',\n    defaultMessage: 'Security'\n  },\n  crop: {\n    id: 'panel_title_crop',\n    description: 'Title for AvatarCropView.',\n    defaultMessage: 'Drag to Adjust'\n  },\n  notif: {\n    id: 'sidepanel_title_acc_notifications',\n    description: 'Sidepanel title for AccNotificationsView.',\n    defaultMessage: 'Notifications'\n  },\n  support: {\n    id: 'sidepanel_title_acc_support',\n    description: 'Sidepanel title for AccSupportView.',\n    defaultMessage: 'Support'\n  },\n  newtpk: {\n    id: 'sidepanel_title_newtpk',\n    description: 'Sidepanel title for NewTopicView.',\n    defaultMessage: 'Start New Chat'\n  },\n  cred: {\n    id: 'sidepanel_title_cred',\n    description: 'Sidepanel title for ValidationView.',\n    defaultMessage: 'Confirm Credentials'\n  },\n  reset: {\n    id: 'sidepanel_title_reset',\n    description: 'Sidepanel title for PasswordResetView.',\n    defaultMessage: 'Reset Password'\n  },\n  archive: {\n    id: 'sidepanel_title_archive',\n    description: 'Sidepanel title for ContactsView-Archive.',\n    defaultMessage: 'Archived Chats'\n  },\n  blocked: {\n    id: 'sidepanel_title_blocked',\n    description: 'Sidepanel title for ContactsView-Blocked.',\n    defaultMessage: 'Blocked Chats'\n  }\n});\n\nclass SidepanelView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNewTopic = this.handleNewTopic.bind(this);\n  }\n\n  handleNewTopic() {\n    this.props.onNavigate('newtpk');\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const view = this.props.state || (this.props.myUserId ? 'contacts' : 'login');\n\n    let title, avatar, badges;\n    if (view == 'contacts') {\n      title = this.props.title;\n      avatar = this.props.avatar ? this.props.avatar : true;\n      badges = this.props.trustedBadges;\n    } else {\n      title = formatMessage(messages[view]);\n      avatar = false;\n      badges = null;\n    }\n\n    let onCancel;\n    if (['login', 'contacts'].indexOf(view) == -1) {\n      onCancel = this.props.onCancel;\n    }\n\n    return (\n      <div id=\"sidepanel\" className={this.props.hideSelf ? 'nodisplay' : null}>\n        <SideNavbar\n          state={view}\n          title={title}\n          avatar={avatar}\n          tinode={this.props.tinode}\n          trustedBadges={badges}\n          myUserId={this.props.myUserId}\n          onSignUp={this.props.onSignUp}\n          onSettings={this.props.onSettings}\n          onNewTopic={this.handleNewTopic}\n          onCancel={onCancel} />\n\n        <ErrorPanel\n          level={this.props.errorLevel}\n          text={this.props.errorText}\n          action={this.props.errorAction}\n          actionText={this.props.errorActionText}\n          onClearError={this.props.onError} />\n\n        <LoadSpinner show={this.props.loadSpinnerVisible} />\n\n        {view === 'login' ?\n          <LoginView\n            login={this.props.login}\n            disabled={this.props.loginDisabled}\n            persist={this.props.persist}\n            onLogin={this.props.onLoginRequest}\n            onPersistenceChange={this.props.onPersistenceChange} /> :\n\n          view === 'register' ?\n          <CreateAccountView\n            tinode={this.props.tinode}\n            onCreateAccount={this.props.onCreateAccount}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'settings' ?\n          <SettingsView\n            transport={this.props.transport}\n            serverAddress={this.props.serverAddress}\n            onCancel={this.props.onCancel}\n            onUpdate={this.props.onGlobalSettings} /> :\n\n          view === 'edit' ?\n          <AccountSettingsView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            trustedBadges={this.props.trustedBadges}\n            onNavigate={this.props.onNavigate} /> :\n\n          (view === 'general' || view === 'crop') ?\n          <TopicCommon\n            topic=\"me\"\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            onUpdateTopicDesc={this.props.onUpdateAccountDesc}\n            onUpdateTags={this.props.onUpdateAccountTags}\n            onCredAdd={this.props.onCredAdd}\n            onCredDelete={this.props.onCredDelete}\n            onCredConfirm={this.props.onCredConfirm}\n            onError={this.props.onError} /> :\n\n          view === 'notif' ?\n          <AccNotificationsView\n            messageSounds={this.props.messageSounds}\n            desktopAlerts={this.props.desktopAlerts}\n            desktopAlertsEnabled={this.props.desktopAlertsEnabled}\n            incognitoMode={this.props.incognitoMode}\n            onTogglePushNotifications={this.props.onTogglePushNotifications}\n            onToggleMessageSounds={this.props.onToggleMessageSounds}\n            onToggleIncognitoMode={this.props.onToggleIncognitoMode} /> :\n\n          view === 'security' ?\n          <AccSecurityView\n            tinode={this.props.tinode}\n            onUpdateAccountDesc={this.props.onUpdateAccountDesc}\n            onUpdatePassword={this.props.onUpdatePassword}\n            onLogout={this.props.onLogout}\n            onDeleteAccount={this.props.onDeleteAccount}\n            onShowAlert={this.props.onShowAlert}\n            onShowBlocked={this.props.onShowBlocked} /> :\n\n          view === 'support' ?\n          <AccSupportView\n            serverAddress={this.props.serverAddress}\n            serverVersion={this.props.serverVersion} /> :\n\n          (view === 'contacts' || view == 'archive' || view == 'blocked') ?\n          <ContactsView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            connected={this.props.connected}\n            topicSelected={this.props.topicSelected}\n            archive={view == 'archive'}\n            blocked={view == 'blocked'}\n            chatList={this.props.chatList}\n            showContextMenu={this.props.showContextMenu}\n            onTopicSelected={this.props.onTopicSelected}\n            onShowArchive={this.props.onShowArchive} /> :\n\n          view === 'newtpk' ?\n          <NewTopicView\n            tinode={this.props.tinode}\n            searchResults={this.props.searchResults}\n            onInitFind={this.props.onInitFind}\n            onSearchContacts={this.props.onSearchContacts}\n            onCreateTopic={this.props.onCreateTopic}\n            onError={this.props.onError} /> :\n\n          view === 'cred' ?\n          <ValidationView\n            credCode={this.props.credCode}\n            credMethod={this.props.credMethod}\n            onSubmit={this.props.onValidateCredentials}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'reset' ?\n          <PasswordResetView\n            onRequest={this.props.onPasswordResetRequest}\n            onReset={this.props.onResetPassword}\n            onCancel={this.props.onCancel} /> :\n          null}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SidepanelView);\n","import { KNOWN_HOSTS, DEFAULT_HOST } from '../config.js';\n\n// Detect server address from the URL\nexport function detectServerAddress() {\n  let host = DEFAULT_HOST;\n  if (typeof window.location == 'object') {\n    if (window.location.protocol == 'file:' || window.location.hostname == 'localhost') {\n      host = KNOWN_HOSTS.local;\n    } else if (window.location.hostname) {\n      host = window.location.hostname + (window.location.port ? ':' + window.location.port : '');\n    }\n  }\n  return host;\n}\n\n// Detect if the page is served over HTTPS.\nexport function isSecureConnection() {\n  if (typeof window.location == 'object') {\n    return window.location.protocol == 'https:';\n  }\n  return false;\n}\n\nexport function isLocalHost() {\n  if (typeof window.location == 'object') {\n    return window.location.hostname == 'localhost';\n  }\n  return false;\n}\n","// The top-level class to hold all functionality together.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport * as firebase from 'firebase/app';\nimport 'firebase/messaging';\n\nimport Tinode from 'tinode-sdk';\n\nimport Alert from '../widgets/alert.jsx';\nimport ContextMenu from '../widgets/context-menu.jsx';\n\nimport InfoView from './info-view.jsx';\nimport MessagesView from './messages-view.jsx';\nimport SidepanelView from './sidepanel-view.jsx';\n\nimport { API_KEY, APP_NAME, DEFAULT_P2P_ACCESS_MODE, LOGGING_ENABLED,\n  MEDIA_BREAKPOINT, RECEIVED_DELAY } from '../config.js';\nimport { PACKAGE_VERSION } from '../version.js';\nimport { base64ReEncode, makeImageUrl } from '../lib/blob-helpers.js';\nimport { detectServerAddress, isLocalHost, isSecureConnection } from '../lib/host-name.js';\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { secondsToTime } from '../lib/strformat.js'\nimport { updateFavicon } from '../lib/utils.js';\n\n// Sound to play on message received.\nconst POP_SOUND = new Audio('audio/msg.mp3');\n\nconst messages = defineMessages({\n  reconnect_countdown: {\n    id: 'reconnect_countdown',\n    defaultMessage: 'Disconnected. Reconnecting in {seconds}…',\n    description: 'Message shown when an app update is available.'\n  },\n  reconnect_now: {\n    id: 'reconnect_now',\n    defaultMessage: 'Try now',\n    description: 'Prompt for reconnecting now'\n  },\n  push_init_failed: {\n    id: 'push_init_failed',\n    defaultMessage: 'Failed to initialize push notifications',\n    description: 'Error message when push notifications have failed to initialize.'\n  },\n  invalid_security_token: {\n    id: 'invalid_security_token',\n    defaultMessage: 'Invalid security token',\n    description: 'Error message when resetting password.'\n  },\n  no_connection: {\n    id: 'no_connection',\n    defaultMessage: 'No connection',\n    description: 'Warning that the user is offline.'\n  },\n  code_doesnot_match: {\n    id: 'code_doesnot_match',\n    defaultMessage: 'Code does not match',\n    description: 'Error message when the credential validation code is incorrect.'\n  },\n  menu_item_info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  }\n});\n\nclass TinodeWeb extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selfRef = React.createRef();\n\n    this.state = this.getBlankState();\n\n    this.handleResize = this.handleResize.bind(this);\n    this.handleHashRoute = this.handleHashRoute.bind(this);\n    this.handleOnline = this.handleOnline.bind(this);\n    this.checkForAppUpdate = this.checkForAppUpdate.bind(this);\n    this.handleVisibilityEvent = this.handleVisibilityEvent.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.handleLoginRequest = this.handleLoginRequest.bind(this);\n    this.handlePersistenceChange = this.handlePersistenceChange.bind(this);\n    this.handleConnected = this.handleConnected.bind(this);\n    this.handleAutoreconnectIteration = this.handleAutoreconnectIteration.bind(this);\n    this.doLogin = this.doLogin.bind(this);\n    this.handleCredentialsRequest = this.handleCredentialsRequest.bind(this);\n    this.handleLoginSuccessful = this.handleLoginSuccessful.bind(this);\n    this.handleDisconnect = this.handleDisconnect.bind(this);\n    this.tnMeMetaDesc = this.tnMeMetaDesc.bind(this);\n    this.tnMeContactUpdate = this.tnMeContactUpdate.bind(this);\n    this.tnMeSubsUpdated = this.tnMeSubsUpdated.bind(this);\n    this.resetContactList = this.resetContactList.bind(this);\n    this.tnData = this.tnData.bind(this);\n    this.tnInitFind = this.tnInitFind.bind(this);\n    this.tnFndSubsUpdated = this.tnFndSubsUpdated.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleTopicSelected = this.handleTopicSelected.bind(this);\n    this.handleHideMessagesView = this.handleHideMessagesView.bind(this);\n    this.handleSendMessage = this.handleSendMessage.bind(this);\n    this.handleNewChatInvitation = this.handleNewChatInvitation.bind(this);\n    this.handleNewAccount = this.handleNewAccount.bind(this);\n    this.handleNewAccountRequest = this.handleNewAccountRequest.bind(this);\n    this.handleUpdatePasswordRequest = this.handleUpdatePasswordRequest.bind(this);\n    this.handleUpdateAccountTagsRequest = this.handleUpdateAccountTagsRequest.bind(this);\n    this.handleToggleIncognitoMode = this.handleToggleIncognitoMode.bind(this);\n    this.handleSettings = this.handleSettings.bind(this);\n    this.handleGlobalSettings = this.handleGlobalSettings.bind(this);\n    this.handleShowArchive = this.handleShowArchive.bind(this);\n    this.handleShowBlocked = this.handleShowBlocked.bind(this);\n    this.handleToggleMessageSounds = this.handleToggleMessageSounds.bind(this);\n    this.handleCredAdd = this.handleCredAdd.bind(this);\n    this.handleCredDelete = this.handleCredDelete.bind(this);\n    this.handleCredConfirm = this.handleCredConfirm.bind(this);\n    this.initFCMessaging = this.initFCMessaging.bind(this);\n    this.togglePushToken = this.togglePushToken.bind(this);\n    this.requestPushToken = this.requestPushToken.bind(this);\n    this.handlePushMessage = this.handlePushMessage.bind(this);\n    this.handleSidepanelCancel = this.handleSidepanelCancel.bind(this);\n    this.handleStartTopicRequest = this.handleStartTopicRequest.bind(this);\n    this.handleNewTopicCreated = this.handleNewTopicCreated.bind(this);\n    this.handleTopicUpdateRequest = this.handleTopicUpdateRequest.bind(this);\n    this.handleUnarchive = this.handleUnarchive.bind(this);\n    this.handleChangePermissions = this.handleChangePermissions.bind(this);\n    this.handleTagsUpdateRequest = this.handleTagsUpdateRequest.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n    this.handleDeleteTopicRequest = this.handleDeleteTopicRequest.bind(this);\n    this.handleDeleteMessagesRequest = this.handleDeleteMessagesRequest.bind(this);\n    this.handleLeaveUnsubRequest = this.handleLeaveUnsubRequest.bind(this);\n    this.handleBlockTopicRequest = this.handleBlockTopicRequest.bind(this);\n    this.handleReportTopic = this.handleReportTopic.bind(this);\n    this.handleShowContextMenu = this.handleShowContextMenu.bind(this);\n    this.defaultTopicContextMenu = this.defaultTopicContextMenu.bind(this);\n    this.handleHideContextMenu = this.handleHideContextMenu.bind(this);\n    this.handleShowAlert = this.handleShowAlert.bind(this);\n    this.handleShowInfoView = this.handleShowInfoView.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleValidateCredentialsRequest = this.handleValidateCredentialsRequest.bind(this);\n    this.handlePasswordResetRequest = this.handlePasswordResetRequest.bind(this);\n    this.handleResetPassword = this.handleResetPassword.bind(this);\n    this.handleContextMenuAction = this.handleContextMenuAction.bind(this);\n  }\n\n  getBlankState() {\n    const settings = LocalStorageUtil.getObject('settings') || {};\n    const persist = !!LocalStorageUtil.getObject('keep-logged-in');\n\n    return {\n      connected: false,\n      // Connected and subscribed to 'me'\n      ready: false,\n      // Try to re-login on new connection.\n      autoLogin: false,\n      transport: settings.transport || null,\n      serverAddress: settings.serverAddress || detectServerAddress(),\n      serverVersion: \"no connection\",\n      // \"On\" is the default, so saving the \"off\" state.\n      messageSounds: !settings.messageSoundsOff,\n      incognitoMode: false,\n      desktopAlerts: persist && !!settings.desktopAlerts,\n      desktopAlertsEnabled: (isSecureConnection() || isLocalHost()) &&\n        (typeof firebase != 'undefined') && (typeof navigator != 'undefined') &&\n        (typeof FIREBASE_INIT != 'undefined'),\n      firebaseToken: persist ? LocalStorageUtil.getObject('firebase-token') : null,\n\n      applicationVisible: !document.hidden,\n\n      errorText: '',\n      errorLevel: null,\n      errorAction: undefined,\n      errorActionText: null,\n\n      sidePanelSelected: 'login',\n      sidePanelTitle: null,\n      sidePanelAvatar: null,\n      myTrustedBadges: [],\n      loadSpinnerVisible: false,\n\n      login: '',\n      password: '',\n      persist: persist,\n      myUserId: null,\n      liveConnection: navigator.onLine,\n      topicSelected: '',\n      topicSelectedOnline: false,\n      topicSelectedAcs: null,\n      newTopicParams: null,\n      loginDisabled: false,\n      displayMobile: (window.innerWidth <= MEDIA_BREAKPOINT),\n      infoPanel: undefined,\n      mobilePanel: 'sidepanel',\n\n      contextMenuVisible: false,\n      contextMenuBounds: null,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuItems: [],\n\n      // Modal alert dialog.\n      alertVisible: false,\n      alertParams: {},\n\n      // Chats as shown in the ContactsView\n      chatList: [],\n      // Contacts returned by a search query.\n      searchResults: [],\n      // Merged results of a search query and p2p chats.\n      searchableContacts: [],\n      credMethod: undefined,\n      credCode: undefined,\n      // Topic to go to after login.\n      requestedTopic: undefined\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    window.addEventListener('online', (e) => { this.handleOnline(true); });\n    window.addEventListener('offline', (e) => { this.handleOnline(false); });\n    window.addEventListener('hashchange', this.handleHashRoute);\n\n    // Process background notifications from the service worker.\n    if (typeof BroadcastChannel == 'function') {\n      const serviceWorkerChannel = new BroadcastChannel('tinode-sw');\n      serviceWorkerChannel.addEventListener('message', this.handlePushMessage);\n    } else {\n      // Safari is broken by design.\n      console.warn(\"Your browser does not support BroadcastChannel. Some features will not be available\");\n    }\n\n    // Window/tab visible or invisible for pausing timers.\n    document.addEventListener('visibilitychange', this.handleVisibilityEvent);\n\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n\n    new Promise((resolve, reject) => {\n      this.tinode = TinodeWeb.tnSetup(this.state.serverAddress, this.state.transport,\n        this.props.intl.locale, this.state.persist, resolve);\n      this.tinode.onConnect = this.handleConnected;\n      this.tinode.onDisconnect = this.handleDisconnect;\n      this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n    }).then(() => {\n      // Initialize desktop alerts.\n      if (this.state.desktopAlertsEnabled) {\n        this.initFCMessaging().then(() => {\n          if (this.state.desktopAlerts) {\n            if (!this.state.firebaseToken) {\n              this.togglePushToken(true);\n            } else {\n              this.tinode.setDeviceToken(this.state.firebaseToken);\n            }\n          }\n        }).catch(() => {\n          // do nothing: handled earlier.\n          // catch needed to pervent unnecessary logging of error.\n        });\n      }\n\n      // Parse and save the hash navigation params.\n      const parsedNav = HashNavigation.parseUrlHash(window.location.hash);\n\n      // Read contacts from cache.\n      this.resetContactList();\n\n      const token = this.state.persist ? LocalStorageUtil.getObject('auth-token') : undefined;\n      if (token) {\n        this.setState({autoLogin: true});\n\n        // When reading from storage, date is returned as string.\n        token.expires = new Date(token.expires);\n        this.tinode.setAuthToken(token);\n        this.tinode.connect().catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n      }\n\n      // Save possible topic name and navigate to blank state.\n      this.setState({requestedTopic: parsedNav.path[1]});\n      HashNavigation.navigateTo('');\n\n      this.readTimer = null;\n      this.readTimerCallback = null;\n\n      this.handleHashRoute();\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n    window.removeEventListener('hashchange', this.handleHashRoute);\n    document.removeEventListener('visibilitychange', this.handleVisibilityEvent);\n  }\n\n  // Setup transport (usually websocket) and server address. This will terminate connection with the server.\n  static tnSetup(serverAddress, transport, locale, persistentCache, onSetupCompleted) {\n    const tinode = new Tinode({appName: APP_NAME, host: serverAddress, apiKey: API_KEY, transport: transport,\n      secure: isSecureConnection(), persist: persistentCache}, onSetupCompleted);\n    tinode.setHumanLanguage(locale);\n    tinode.enableLogging(LOGGING_ENABLED, true);\n    return tinode;\n  }\n\n  // Notifiy Tinode that a push message was received from the server.\n  handlePushMessage(data) {\n    if (data.what == 'msg' && Tinode.isChannelTopicName(data.topic)) {\n      // The last argument is a fake user Id: otherwise the update is seen as one from the current user.\n      this.tinode.oobNotification(data.topic, data.seq, 'fake-uid');\n    }\n  }\n\n  initFCMessaging() {\n    const {formatMessage, locale} = this.props.intl;\n    const onError = (msg, err) => {\n      console.error(msg, err);\n      this.handleError(formatMessage(messages.push_init_failed), 'err');\n      this.setState({desktopAlertsEnabled: false});\n    }\n\n    try {\n      this.fbPush = firebase.initializeApp(FIREBASE_INIT, APP_NAME).messaging();\n      this.fbPush.usePublicVapidKey(FIREBASE_INIT.messagingVapidKey);\n\n      return navigator.serviceWorker.register('/service-worker.js').then((reg) => {\n        this.checkForAppUpdate(reg);\n        this.fbPush.useServiceWorker(reg);\n        reg.active.postMessage(JSON.stringify({locale: locale, version: PACKAGE_VERSION}));\n\n        // Google could not be bothered to mention that onTokenRefresh is never called.\n        this.fbPush.onTokenRefresh(() => {\n          this.requestPushToken();\n        });\n\n        // Handhe FCM pushes\n        // (a) for channels always,\n        // (b) pushes when the app is in foreground but has not focus.\n        this.fbPush.onMessage(payload => { this.handlePushMessage(payload.data); });\n\n        return reg;\n      }).catch((err) => {\n        // registration failed :(\n        onError(\"Failed to register service worker:\", err);\n        return Promise.reject(err);\n      });\n    } catch (err) {\n      onError(\"Failed to initialize push notifications\", err);\n      return Promise.reject(err);\n    }\n  }\n\n  handleResize() {\n    const mobile = document.documentElement.clientWidth <= MEDIA_BREAKPOINT;\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n    if (this.state.displayMobile != mobile) {\n      this.setState({displayMobile: mobile});\n    }\n  }\n\n  // Check if a newer version of TinodeWeb app is available at the server.\n  checkForAppUpdate(reg) {\n    reg.onupdatefound = () => {\n      const installingWorker = reg.installing;\n      installingWorker.onstatechange = () => {\n        if (installingWorker.state == 'installed' && navigator.serviceWorker.controller) {\n          const msg = <>\n            <FormattedMessage id=\"update_available\"\n              defaultMessage=\"Update available.\"\n              description=\"Message shown when an app update is available.\" /> <a href=\"\">\n              <FormattedMessage id=\"reload_update\"\n                defaultMessage=\"Reload\"\n                description=\"Call to action to reload application when update is available.\" />\n            </a>.</>;\n          this.handleError(msg, 'info');\n        }\n      }\n    }\n  }\n\n  // Handle for hashchange event: display appropriate panels.\n  handleHashRoute() {\n    const hash = HashNavigation.parseUrlHash(window.location.hash);\n    if (hash.path && hash.path.length > 0) {\n      // Left-side panel selector.\n      if (['register','settings','edit','notif','security','support','general','crop',\n          'cred','reset','newtpk','archive','blocked','contacts',''].includes(hash.path[0])) {\n        this.setState({sidePanelSelected: hash.path[0]});\n      } else {\n        console.warn(\"Unknown sidepanel view\", hash.path[0]);\n      }\n\n      // Topic for MessagesView selector.\n      let topicName = hash.path[1] || null;\n      if (topicName != this.state.topicSelected) {\n        if (!Tinode.topicType(topicName)) {\n          // Clear invalid topic name.\n          topicName = null;\n        }\n        const newState = {\n          topicSelected: topicName\n        };\n        const acs = this.tinode.getTopicAccessMode(topicName);\n        if (acs) {\n          newState.topicSelectedAcs = acs;\n        }\n        this.setState(newState);\n      }\n    } else {\n      // Empty hashpath\n      this.setState({sidePanelSelected: '', topicSelected: null});\n    }\n\n    // Save validation credentials, if available.\n    if (hash.params.method) {\n      this.setState({ credMethod: hash.params.method });\n    }\n    if (hash.params.code) {\n      this.setState({ credCode: hash.params.code });\n    }\n\n    // Additional parameters of panels.\n    this.setState({\n      infoPanel: hash.params.info,\n      newTopicTabSelected: hash.params.tab\n    });\n  }\n\n  handleOnline(online) {\n    if (online) {\n      this.handleError();\n      clearInterval(this.reconnectCountdown);\n      this.tinode.reconnect();\n    } else {\n      this.handleError(this.props.intl.formatMessage(messages.no_connection), 'warn');\n    }\n    this.setState({liveConnection: online});\n  }\n\n  handleVisibilityEvent() {\n    this.setState({applicationVisible: !document.hidden});\n  }\n\n  handleError(err, level, action, actionText) {\n    this.setState({errorText: err, errorLevel: level, errorAction: action, errorActionText: actionText});\n  }\n\n  // User clicked Login button in the side panel.\n  handleLoginRequest(login, password) {\n    this.setState({\n      loginDisabled: true,\n      login: login,\n      password: password,\n      loadSpinnerVisible: true,\n      autoLogin: true\n    });\n    this.handleError('', null);\n\n    if (this.tinode.isConnected()) {\n      this.doLogin(login, password, {meth: this.state.credMethod, resp: this.state.credCode});\n    } else {\n      this.tinode.connect().catch((err) => {\n        // Socket error\n        this.setState({loginDisabled: false, autoLogin: false, loadSpinnerVisible: false});\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // Enable or disable saving the password and IndexedDB.\n  handlePersistenceChange(persist) {\n    if (persist) {\n      this.tinode.initStorage().then(() => {\n        LocalStorageUtil.setObject('keep-logged-in', true);\n        this.setState({persist: true});\n      });\n    } else {\n      this.tinode.clearStorage().then(() => {\n        LocalStorageUtil.setObject('keep-logged-in', false);\n        this.setState({persist: false});\n      });\n    }\n  }\n\n  // Connection succeeded.\n  handleConnected() {\n    // Just to be sure.\n    clearInterval(this.reconnectCountdown);\n    this.handleError();\n\n    const params = this.tinode.getServerInfo();\n    this.setState({\n      serverVersion: params.ver + ' ' + (params.build ? params.build : 'none')\n    });\n\n    if (this.state.autoLogin) {\n      this.doLogin(this.state.login, this.state.password, {meth: this.state.credMethod, resp: this.state.credCode});\n    }\n  }\n\n  // Called for each auto-reconnect iteration.\n  handleAutoreconnectIteration(sec, prom) {\n    clearInterval(this.reconnectCountdown);\n\n    if (sec < 0) {\n      // Clear error\n      this.handleError();\n      return;\n    }\n\n    if (prom) {\n      // Reconnecting now\n      prom.then(() => {\n        // Reconnected: clear error\n        this.handleError();\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n      return;\n    }\n\n    const {formatMessage} = this.props.intl;\n    let count = sec / 1000;\n    count = count | count;\n    this.reconnectCountdown = setInterval(() => {\n      const timeLeft = (count > 99) ? secondsToTime(count) : count;\n      this.handleError(\n        formatMessage(messages.reconnect_countdown, {seconds: timeLeft}),\n        'warn',\n        () => {\n          clearInterval(this.reconnectCountdown);\n          this.tinode.reconnect();\n        },\n        formatMessage(messages.reconnect_now)\n      );\n      count -= 1;\n    }, 1000);\n  }\n\n  // Connection lost\n  handleDisconnect(err) {\n    this.setState({\n      connected: false,\n      ready: false,\n      topicSelectedOnline: false,\n      errorText: err && err.message ? err.message : \"Disconnected\",\n      errorLevel: err && err.message ? 'err' : 'warn',\n      loginDisabled: false,\n      contextMenuVisible: false,\n      serverVersion: \"no connection\"\n    });\n  }\n\n  doLogin(login, password, cred) {\n    if (this.tinode.isAuthenticated()) {\n      // Already logged in. Go to default screen.\n      HashNavigation.navigateTo('');\n      return;\n    }\n    // Sanitize and package credentail.\n    cred = Tinode.credential(cred);\n    // Try to login with login/password. If they are not available, try token. If no token, ask for login/password.\n    let promise = null;\n    let token = this.tinode.getAuthToken();\n    if (login && password) {\n      token = null;\n      this.setState({password: null});\n      promise = this.tinode.loginBasic(login, password, cred);\n    } else if (token) {\n      promise = this.tinode.loginToken(token.token, cred);\n    }\n\n    if (promise) {\n      promise.then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text === 'validate credentials') {\n          this.setState({loadSpinnerVisible: false});\n          if (cred) {\n            this.handleError(this.props.intl.formatMessage(messages.code_doesnot_match), 'warn');\n          }\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful();\n        }\n      }).catch((err) => {\n        // Login failed, report error.\n        this.setState({\n          loginDisabled: false,\n          credMethod: undefined,\n          credCode: undefined,\n          loadSpinnerVisible: false,\n          autoLogin: false\n        });\n        this.handleError(err.message, 'err');\n        if (token) {\n          this.handleLogout();\n        }\n        HashNavigation.navigateTo('');\n      });\n    } else {\n      // No login credentials provided.\n      // Make sure we are on the login page.\n      HashNavigation.navigateTo('');\n      this.setState({loginDisabled: false});\n    }\n  }\n\n  handleCredentialsRequest(params) {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    parsed.path[0] = 'cred';\n    parsed.params['method'] = params.cred[0];\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n  }\n\n  handleLoginSuccessful() {\n    this.handleError();\n\n    // Refresh authentication token.\n    if (LocalStorageUtil.getObject('keep-logged-in')) {\n      LocalStorageUtil.setObject('auth-token', this.tinode.getAuthToken());\n    }\n\n    const goToTopic = this.state.requestedTopic;\n    // Logged in fine, subscribe to 'me' attaching callbacks from the contacts view.\n    const me = this.tinode.getMeTopic();\n    me.onMetaDesc = this.tnMeMetaDesc;\n    me.onContactUpdate = this.tnMeContactUpdate;\n    me.onSubsUpdated = this.tnMeSubsUpdated;\n    this.setState({\n      connected: true,\n      credMethod: undefined,\n      credCode: undefined,\n      myUserId: this.tinode.getCurrentUserID(),\n      autoLogin: true,\n      requestedTopic: undefined,\n    });\n    // Subscribe, fetch topic desc, the list of subscriptions. Messages are not fetched.\n    me.subscribe(\n      me.startMetaQuery().\n        withLaterSub().\n        withDesc().\n        withTags().\n        withCred().\n        build()\n      ).catch((err) => {\n        this.tinode.disconnect();\n        localStorage.removeItem('auth-token');\n        this.handleError(err.message, 'err');\n        HashNavigation.navigateTo('');\n      }).finally(() => {\n        this.setState({loadSpinnerVisible: false});\n      });\n    let urlHash = HashNavigation.setUrlSidePanel(window.location.hash, 'contacts');\n    if (goToTopic) {\n      urlHash = HashNavigation.setUrlTopic(urlHash, goToTopic);\n    }\n    HashNavigation.navigateTo(urlHash);\n  }\n\n  tnMeMetaDesc(desc) {\n    if (desc) {\n      if (desc.public) {\n        this.setState({\n          sidePanelTitle: desc.public.fn,\n          sidePanelAvatar: makeImageUrl(desc.public.photo)\n        });\n      }\n      if (desc.trusted) {\n        const badges = [];\n        for (const [key, val] of Object.entries(desc.trusted)) {\n          if (val) {\n            badges.push(key);\n          }\n        }\n        this.setState({\n          myTrustedBadges: badges,\n        });\n      }\n      if (desc.acs) {\n        this.setState({\n          incognitoMode: !desc.acs.isPresencer()\n        });\n      }\n    }\n  }\n\n  // Reactions to updates to the contact list.\n  tnMeContactUpdate(what, cont) {\n    if (what == 'on' || what == 'off') {\n      this.resetContactList();\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedOnline: (what == 'on')});\n      }\n    } else if (what == 'read') {\n      this.resetContactList();\n    } else if (what == 'msg') {\n      // Check if the topic is archived. If so, don't play a sound.\n      const topic = this.tinode.getTopic(cont.topic);\n      const archived = topic && topic.isArchived();\n\n      // New message received. Maybe the message is from the current user, then unread is 0.\n      if (cont.unread > 0 && this.state.messageSounds && !archived) {\n        // Skip update if the topic is currently open, otherwise the badge will annoyingly flash.\n        if (document.hidden || this.state.topicSelected != cont.topic) {\n          POP_SOUND.play();\n        }\n      }\n      // Reorder contact list to use possibly updated 'touched'.\n      this.resetContactList();\n    } else if (what == 'recv') {\n      // Explicitly ignoring \"recv\" -- it causes no visible updates to contact list.\n    } else if (what == 'gone' || what == 'unsub') {\n      // Topic deleted or user unsubscribed. Remove topic from view.\n      // If the currently selected topic is gone, clear the selection.\n      if (this.state.topicSelected == cont.topic) {\n        this.handleTopicSelected(null);\n      }\n      // Redraw without the deleted topic.\n      this.resetContactList();\n    } else if (what == 'acs') {\n      // Permissions changed. If it's for the currently selected topic,\n      // update the views.\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedAcs: cont.acs});\n      }\n    } else if (what == 'del') {\n      // TODO: messages deleted (hard or soft) -- update pill counter.\n    } else if (what == 'upd') {\n      // upd - handled by the SDK. Explicitly ignoring here.\n    } else {\n      // TODO(gene): handle other types of notifications:\n      // * ua -- user agent changes (maybe display a pictogram for mobile/desktop).\n      console.info(\"Unsupported (yet) presence update:\" + what + \" in: \" + cont.topic);\n    }\n  }\n\n  tnMeSubsUpdated(unused) {\n    this.resetContactList();\n  }\n\n  // Merge search results and contact list to create a single flat\n  // list of known contacts for GroupManager to use.\n  static prepareSearchableContacts(chatList, foundContacts) {\n    const merged = {};\n\n    // For chatList topics merge only p2p topics and convert them to the\n    // same format as foundContacts.\n    for (const c of chatList) {\n      if (Tinode.isP2PTopicName(c.topic)) {\n          merged[c.topic] = {\n            user: c.topic,\n            updated: c.updated,\n            public: c.public,\n            private: c.private,\n            acs: c.acs\n          };\n      }\n    }\n\n    // Add all foundCountacts if they have not been added already.\n    for (const c of foundContacts) {\n      if (!merged[c.user]) {\n        merged[c.user] = c;\n      }\n    }\n\n    return Object.values(merged);\n  }\n\n  resetContactList() {\n    const newState = {\n      chatList: []\n    };\n\n    if (!this.state.ready) {\n      newState.ready = true;\n    }\n\n    this.tinode.getMeTopic().contacts((c) => {\n      if (!c.topic && !c.user) {\n        // Contacts expect c.topic to be set.\n        c.topic = c.name;\n      }\n\n      newState.chatList.push(c);\n      if (this.state.topicSelected == c.topic) {\n        newState.topicSelectedOnline = c.online;\n        newState.topicSelectedAcs = c.acs;\n      }\n    });\n\n    const past = new Date(0);\n    newState.chatList.sort((a, b) => {\n      return (a.touched || past).getTime() - (b.touched || past).getTime();\n    });\n\n    // Merge search results and chat list.\n    newState.searchableContacts = TinodeWeb.prepareSearchableContacts(newState.chatList, this.state.searchResults);\n    this.setState(newState);\n  }\n\n  // Sending \"received\" notifications\n  tnData(data) {\n    const topic = this.tinode.getTopic(data.topic);\n    if (topic.msgStatus(data, true) >= Tinode.MESSAGE_STATUS_SENT && data.from != this.state.myUserId) {\n      clearTimeout(this.receivedTimer);\n      this.receivedTimer = setTimeout(() => {\n        this.receivedTimer = undefined;\n        topic.noteRecv(data.seq);\n      }, RECEIVED_DELAY);\n    }\n  }\n\n  /* Fnd topic: find contacts by tokens */\n  tnInitFind() {\n    const fnd = this.tinode.getFndTopic();\n    fnd.onSubsUpdated = this.tnFndSubsUpdated;\n    if (fnd.isSubscribed()) {\n      this.tnFndSubsUpdated();\n    } else {\n      fnd.subscribe(fnd.startMetaQuery().withSub().build()).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  tnFndSubsUpdated() {\n    const foundContacts = [];\n    // Don't attempt to create P2P topics which already exist. Server will reject the duplicates.\n    this.tinode.getFndTopic().contacts((s) => {\n      foundContacts.push(s);\n    });\n    this.setState({\n      searchResults: foundContacts,\n      searchableContacts: TinodeWeb.prepareSearchableContacts(this.state.chatList, foundContacts)\n    });\n  }\n\n  /** Called when the user enters a contact into the contact search field in the NewAccount panel\n    @param query {Array} is an array of contacts to search for\n   */\n  handleSearchContacts(query) {\n    const fnd = this.tinode.getFndTopic();\n    fnd.setMeta({desc: {public: query}}).then((ctrl) => {\n      return fnd.getMeta(fnd.startMetaQuery().withSub().build());\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  // User clicked on a contact in the side panel or deleted a contact.\n  handleTopicSelected(topicName) {\n    // Clear newTopicParams after use.\n    if (this.state.newTopicParams && this.state.newTopicParams._topicName != topicName) {\n      this.setState({\n        newTopicParams: null\n      });\n    }\n\n    if (topicName) {\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'topic-view',\n        infoPanel: undefined\n      });\n      // Different contact selected.\n      if (this.state.topicSelected != topicName) {\n        this.setState({\n          topicSelectedOnline: this.tinode.isTopicOnline(topicName),\n          topicSelectedAcs: this.tinode.getTopicAccessMode(topicName)\n        });\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', topicName));\n      }\n    } else {\n      // Currently selected contact deleted\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'sidepanel',\n        topicSelectedOnline: false,\n        topicSelectedAcs: null,\n        infoPanel: undefined\n      });\n\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic('', null));\n    }\n  }\n\n  // In mobile view user requested to show sidepanel\n  handleHideMessagesView() {\n    this.setState({\n      mobilePanel: 'sidepanel'\n    });\n    HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, null));\n  }\n\n  // User is sending a message, either plain text or a drafty object, possibly\n  // with attachments.\n  //  - msg - Drafty message with content\n  //  - promise - Promise to be resolved when the upload is completed\n  //  - uploader - for tracking progress\n  //  - head - head dictionary to be attached to the message\n  handleSendMessage(msg, promise, uploader, head) {\n    const topic = this.tinode.getTopic(this.state.topicSelected);\n\n    msg = topic.createMessage(msg, false);\n    // The uploader is used to show progress.\n    msg._uploader = uploader;\n\n    if (head) {\n      msg.head = Object.assign(msg.head || {}, head);\n    }\n\n    if (!topic.isSubscribed()) {\n      // Topic is not subscribed yet. Subscribe.\n      if (!promise) {\n        promise = Promise.resolve();\n      }\n      promise = promise\n        .then(() => topic.subscribe())\n        .then(() => {\n          // If there are unsent messages, try sending them now.\n          topic.queuedMessages((pub) => {\n            if (!pub._sending && topic.isSubscribed()) {\n              this.sendMessage(pub);\n            }\n          });\n        });\n    }\n\n    if (promise) {\n      promise = promise.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n\n    topic.publishDraft(msg, promise)\n      .then((ctrl) => {\n        if (topic.isArchived()) {\n          return topic.archive(false);\n        }\n      })\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleNewChatInvitation(topicName, action) {\n    const topic = this.tinode.getTopic(topicName);\n    let response = null;\n    switch (action) {\n      case 'accept':\n        // Accept given permissions.\n        const mode = topic.getAccessMode().getGiven();\n        response = topic.setMeta({sub: {mode: mode}});\n        if (topic.isP2PType()) {\n          // For P2P topics change 'given' permission of the peer too.\n          // In p2p topics the other user has the same name as the topic.\n          response = response.then((ctrl) => {\n            topic.setMeta({sub: {user: topicName, mode: mode}});\n          });\n        }\n        break;\n      case 'delete':\n        // Ignore invitation by deleting it.\n        response = topic.delTopic(true);\n        break;\n      case 'block':\n        // Ban the topic making futher invites impossible.\n        // Just self-ban.\n        const am = topic.getAccessMode().updateWant('-JP').getWant();\n        response = topic.setMeta({sub: {mode: am}}).then((ctrl) => {\n          return this.handleTopicSelected(null);\n        });\n        break;\n      default:\n        console.warn(\"Unknown invitation action\", '\"' + action + '\"\"');\n    }\n\n    if (response != null) {\n      response.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // User chose a Sign Up menu item.\n  handleNewAccount() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, 'register'));\n  }\n\n  // Actual registration of a new account.\n  handleNewAccountRequest(login_, password_, public_, cred_, tags_) {\n    // Clear old error, if any.\n    this.handleError();\n\n    this.tinode.connect(this.state.serverAddress)\n      .then(() => {\n        return this.tinode.createAccountBasic(login_, password_,\n          {public: public_, tags: tags_, cred: Tinode.credential(cred_)});\n      }).then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text == 'validate credentials') {\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful(this);\n        }\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleToggleIncognitoMode(on) {\n    // Make state undefined.\n    this.setState({incognitoMode: null});\n\n    const me = this.tinode.getMeTopic();\n    const am = me.getAccessMode().updateWant(on ? '-P' : '+P').getWant();\n    me.setMeta({sub: {mode: am}}).catch((err) => {\n      // Request failed, keep existing state.\n      this.setState({incognitoMode: !on});\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleUpdateAccountTagsRequest(tags) {\n    this.tinode.getMeTopic().setMeta({tags: tags})\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  // User chose Settings menu item.\n  handleSettings() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'edit' : 'settings'));\n  }\n\n  // User updated global parameters.\n  handleGlobalSettings(settings) {\n    const serverAddress = settings.serverAddress || this.state.serverAddress;\n    const transport = settings.transport || this.state.transport;\n    if (this.tinode) {\n      this.tinode.clearStorage();\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.tinode = TinodeWeb.tnSetup(serverAddress, transport, this.props.intl.locale,\n      LocalStorageUtil.getObject('keep-logged-in'));\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n\n    this.setState({\n      serverAddress: serverAddress,\n      transport: transport\n    });\n    LocalStorageUtil.setObject('settings', {\n      serverAddress: serverAddress,\n      transport: transport\n    });\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, ''));\n  }\n\n  // User chose 'Archived chats'.\n  handleShowArchive() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'archive' : ''));\n  }\n\n  // User viewes 'Blocked chats'.\n  handleShowBlocked() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'blocked' : ''));\n  }\n\n  togglePushToken(enabled) {\n    if (enabled) {\n      this.setState({desktopAlerts: null});\n      if (!this.state.firebaseToken) {\n        const fcm = this.fbPush ?\n          Promise.resolve() :\n          this.initFCMessaging();\n        fcm.then(() => {\n          return this.fbPush.requestPermission();\n        }).then(() => {\n          this.requestPushToken();\n        }).catch((err) => {\n          console.error(\"Failed to get notification permission.\", err);\n          this.handleError(err.message, 'err');\n          this.setState({desktopAlerts: false, firebaseToken: null});\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        });\n      } else {\n        this.setState({desktopAlerts: true});\n        if (LocalStorageUtil.getObject('keep-logged-in')) {\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n        }\n      }\n    } else if (this.state.firebaseToken && this.fbPush) {\n      this.fbPush.deleteToken(this.state.firebaseToken).catch((err) => {\n        console.error(\"Unable to delete token.\", err);\n      }).finally(() => {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        localStorage.removeItem('firebase-token');\n        this.setState({desktopAlerts: false, firebaseToken: null});\n        // Inform the server that the token was deleted.\n        this.tinode.setDeviceToken(null);\n      });\n    } else {\n      this.setState({desktopAlerts: false, firebaseToken: null});\n      LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n    }\n  }\n\n  requestPushToken() {\n    this.fbPush.getToken().then((refreshedToken) => {\n      const persist = LocalStorageUtil.getObject('keep-logged-in');\n      if (refreshedToken != this.state.firebaseToken) {\n        this.tinode.setDeviceToken(refreshedToken);\n        if (persist) {\n          LocalStorageUtil.setObject('firebase-token', refreshedToken);\n        }\n      }\n      this.setState({firebaseToken: refreshedToken, desktopAlerts: true});\n      if (persist) {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n      }\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n      console.error(\"Failed to retrieve firebase token\", err);\n    });\n  }\n\n  handleToggleMessageSounds(enabled) {\n    this.setState({messageSounds: enabled});\n    LocalStorageUtil.updateObject('settings', {\n      messageSoundsOff: !enabled\n    });\n  }\n\n  handleCredAdd(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.setMeta({cred: {meth: method, val: value}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredDelete(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.delCredential(method, value).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredConfirm(method, response) {\n    this.handleCredentialsRequest({cred: [method]});\n  }\n\n  // User clicked Cancel button in Setting or Sign Up panel.\n  handleSidepanelCancel() {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    let path = '';\n    if (['security','support','general','notif'].includes(parsed.path[0])) {\n      path = 'edit';\n    } else if ('crop' == parsed.path[0]) {\n      path = 'general';\n    } else if ('blocked' == parsed.path[0]) {\n      path = 'security';\n    } else if (this.state.myUserId) {\n      path = 'contacts';\n    }\n    parsed.path[0] = path;\n    if (parsed.params) {\n      delete parsed.params.code;\n      delete parsed.params.method;\n      delete parsed.params.tab;\n    }\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n    this.setState({errorText: '', errorLevel: null});\n  }\n\n  // Sidepanel navigator. No need to bind to 'this'.\n  basicNavigator(hash) {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, hash));\n  }\n\n  // Topic info navigator. No need to bind to 'this'.\n  infoNavigator(hash) {\n    HashNavigation.navigateTo(HashNavigation.setUrlInfoPanel(window.location.hash, hash));\n  }\n\n  // Request to start a topic, new or selected from search results, or \"by ID\".\n  handleStartTopicRequest(topicName, newTopicParams, isChannel) {\n    // Check if topic is indeed new. If not, launch it.\n    if (topicName && this.tinode.isTopicCached(topicName)) {\n      this.handleTopicSelected(topicName);\n      return;\n    }\n\n    const params = {};\n    if (Tinode.isP2PTopicName(topicName)) {\n      // Because we are initialing the subscription, set 'want' to all permissions.\n      params.sub = {mode: DEFAULT_P2P_ACCESS_MODE};\n      // Give the other user all permissions too.\n      params.desc = {defacs: {auth: DEFAULT_P2P_ACCESS_MODE}};\n    } else {\n      topicName = topicName || this.tinode.newGroupTopicName(isChannel);\n      params.desc = {public: newTopicParams.public, private: {comment: newTopicParams.private}};\n      params.tags = newTopicParams.tags;\n    }\n    params._topicName = topicName;\n    this.setState({newTopicParams: params}, () => {this.handleTopicSelected(topicName)});\n  }\n\n  // New topic was created, here is the new topic name.\n  handleNewTopicCreated(oldName, newName) {\n    if (this.state.topicSelected == oldName && oldName != newName) {\n      // If the current URl contains the old topic name, replace it with new.\n      // Update the name of the selected topic first so the navigator doen't clear\n      // the state.\n      this.setState({topicSelected: newName}, () => {\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', newName));\n      });\n    }\n  }\n\n  handleTopicUpdateRequest(topicName, pub, priv, defacs) {\n    this.handleError();\n\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const params = {};\n      let attachments;\n      if (pub) {\n        if (pub.photo) {\n          if (pub.photo.ref && pub.photo.ref != Tinode.DEL_CHAR) {\n            attachments = [pub.photo.ref];\n          } else if (!pub.photo.data || pub.photo.data == Tinode.DEL_CHAR) {\n            pub.photo = Tinode.DEL_CHAR;\n          }\n        }\n        params.public = pub;\n      }\n\n      if (typeof priv == 'string') {\n        params.private = (priv === Tinode.DEL_CHAR) ?\n          Tinode.DEL_CHAR : {comment: priv};\n      }\n      if (defacs) {\n        params.defacs = defacs;\n      }\n      topic.setMeta({desc: params, attachments: attachments}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleUnarchive(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      topic.archive(false);\n    }\n  }\n\n  handleUpdatePasswordRequest(password)  {\n    this.handleError();\n\n    if (password) {\n      this.tinode.updateAccountBasic(null, this.tinode.getCurrentLogin(), password).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleChangePermissions(topicName, mode, uid) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const am = topic.getAccessMode();\n      if (uid) {\n        am.updateGiven(mode);\n        mode = am.getGiven();\n      } else {\n        am.updateWant(mode);\n        mode = am.getWant();\n      }\n      topic.setMeta({sub: {user: uid, mode: mode}}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleTagsUpdateRequest(topicName, tags) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      topic.setMeta({tags: tags}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleLogout() {\n    updateFavicon(0);\n\n    // Remove stored data.\n    localStorage.removeItem('auth-token');\n    localStorage.removeItem('firebase-token');\n    localStorage.removeItem('settings');\n    if (this.state.firebaseToken) {\n      this.fbPush.deleteToken(this.state.firebaseToken)\n    }\n\n    clearInterval(this.reconnectCountdown);\n\n    if (this.tinode) {\n      this.tinode.clearStorage();\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.setState(this.getBlankState());\n\n    this.tinode = TinodeWeb.tnSetup(this.state.serverAddress,\n      this.state.transport, this.props.intl.locale, LocalStorageUtil.getObject('keep-logged-in'));\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n    HashNavigation.navigateTo('');\n  }\n\n  handleDeleteAccount() {\n    this.tinode.delCurrentUser(true).then((ctrl) => {\n      this.handleLogout();\n    });\n  }\n\n  handleDeleteTopicRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Request to hard-delete topic.\n    topic.delTopic(true).then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleDeleteMessagesRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Request hard-delete all messages.\n    topic.delMessagesAll(true).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleLeaveUnsubRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.leave(true).then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleBlockTopicRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleReportTopic(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Publish spam report.\n    this.tinode.publish(Tinode.TOPIC_SYS, Tinode.Drafty.attachJSON(null, {\n      'action': 'report',\n      'target': topicName\n    }));\n\n    // Remove J and P permissions.\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleShowContextMenu(params, menuItems) {\n    this.setState({\n      contextMenuVisible: true,\n      contextMenuClickAt: {x: params.x, y: params.y},\n      contextMenuParams: params,\n      contextMenuItems: menuItems || this.defaultTopicContextMenu(params.topicName),\n      contextMenuBounds: this.selfRef.current.getBoundingClientRect()\n    });\n  }\n\n  defaultTopicContextMenu(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n\n    let muted = false, blocked = false, self_blocked = false, subscribed = false, deleter = false, archived = false;\n    if (topic) {\n      subscribed = topic.isSubscribed();\n      archived = topic.isArchived();\n\n      const acs = topic.getAccessMode();\n      if (acs) {\n        muted = acs.isMuted();\n        blocked = !acs.isJoiner();\n        self_blocked = !acs.isJoiner('want');\n        deleter = acs.isDeleter();\n      }\n    }\n\n    return [\n      subscribed ? {\n        title: this.props.intl.formatMessage(messages.menu_item_info),\n        handler: this.handleShowInfoView\n      } : null,\n      subscribed ? 'messages_clear' : null,\n      subscribed && deleter ? 'messages_clear_hard' : null,\n      muted ? (blocked ? null : 'topic_unmute') : 'topic_mute',\n      self_blocked ? 'topic_unblock' : 'topic_block',\n      archived ? 'topic_restore' : 'topic_archive',\n      'topic_delete'\n    ];\n  }\n\n  handleHideContextMenu() {\n    this.setState({\n      contextMenuVisible: false,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuBounds: null\n    });\n  }\n\n  handleContextMenuAction(action, promise, params) {\n    if (action == 'topic_archive') {\n      if (promise && params.topicName && params.topicName == this.state.topicSelected) {\n        promise.then(() => {\n          this.handleTopicSelected(null);\n        });\n      }\n    }\n  }\n\n  handleShowAlert(title, content, onConfirm, confirmText, onReject, rejectText) {\n    this.setState({\n      alertVisible: true,\n      alertParams: {\n        title: title,\n        content: content,\n        onConfirm: onConfirm,\n        confirm: confirmText,\n        onReject: onReject,\n        reject: rejectText\n      }\n    });\n  }\n\n  handleShowInfoView() {\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'info', 'info'));\n    this.setState({infoPanel: 'info'});\n  }\n\n  handleMemberUpdateRequest(topicName, added, removed) {\n    if (!topicName) {\n      return;\n    }\n\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    if (added && added.length > 0) {\n      added.map((uid) => {\n        topic.invite(uid, null).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n\n    if (removed && removed.length > 0) {\n      removed.map((uid) => {\n        topic.delSubscription(uid).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n  }\n\n  handleValidateCredentialsRequest(cred, code) {\n    if (this.tinode.isAuthenticated()) {\n      const me = this.tinode.getMeTopic();\n      me.setMeta({cred: {meth: cred, resp: code}})\n        .then(() => {\n          HashNavigation.navigateTo('');\n        })\n        .catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n    } else {\n      this.setState({credMethod: cred, credCode: code});\n      this.doLogin(null, null, {meth: cred, resp: code});\n    }\n  }\n\n  handlePasswordResetRequest(method, value) {\n    // If already connected, connnect() will return a resolved promise.\n    return this.tinode.connect()\n      .then(() => {\n        return this.tinode.requestResetAuthSecret('basic', method, value);\n      })\n      .catch((err) => {\n        // Socket error\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleResetPassword(scheme, newPassword, token) {\n    token = base64ReEncode(token);\n    if (!token) {\n      this.handleError(this.props.intl.formatMessage(messages.invalid_security_token), 'err');\n    } else {\n      this.tinode.connect()\n        .then(() => {\n          return this.tinode.updateAccountBasic(null, null, newPassword, {token: token});\n        })\n        .catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"app-container\" ref={this.selfRef}>\n        {this.state.contextMenuVisible ?\n          <ContextMenu\n            tinode={this.tinode}\n            bounds={this.state.contextMenuBounds}\n            clickAt={this.state.contextMenuClickAt}\n            params={this.state.contextMenuParams}\n            items={this.state.contextMenuItems}\n            hide={this.handleHideContextMenu}\n            onShowAlert={this.handleShowAlert}\n            onAction={this.handleContextMenuAction}\n            onTopicRemoved={(topicName) => {\n              if (topicName == this.state.topicSelected) {\n                this.handleTopicSelected(null);\n              }\n            }}\n            onError={this.handleError} />\n          :\n          null\n        }\n        <Alert\n          visible={this.state.alertVisible}\n          title={this.state.alertParams.title}\n          content={this.state.alertParams.content}\n          onReject={this.state.alertParams.onReject ? (() => { this.setState({alertVisible: false}); }) : null}\n          reject={this.state.alertParams.reject}\n          onConfirm={() => { this.setState({alertVisible: false}); this.state.alertParams.onConfirm(); }}\n          confirm={this.state.alertParams.confirm}\n          />\n        <SidepanelView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          displayMobile={this.state.displayMobile}\n          hideSelf={this.state.displayMobile && this.state.mobilePanel !== 'sidepanel'}\n          state={this.state.sidePanelSelected}\n          title={this.state.sidePanelTitle}\n          avatar={this.state.sidePanelAvatar}\n          trustedBadges={this.state.myTrustedBadges}\n          login={this.state.login}\n          persist={this.state.persist}\n          myUserId={this.state.myUserId}\n          loginDisabled={this.state.loginDisabled}\n          loadSpinnerVisible={this.state.loadSpinnerVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          topicSelected={this.state.topicSelected}\n          chatList={this.state.chatList}\n          credMethod={this.state.credMethod}\n          credCode={this.state.credCode}\n\n          transport={this.state.transport}\n          messageSounds={this.state.messageSounds}\n          desktopAlerts={this.state.desktopAlerts}\n          desktopAlertsEnabled={this.state.desktopAlertsEnabled}\n          incognitoMode={this.state.incognitoMode}\n          serverAddress={this.state.serverAddress}\n          serverVersion={this.state.serverVersion}\n\n          onGlobalSettings={this.handleGlobalSettings}\n          onSignUp={this.handleNewAccount}\n          onSettings={this.handleSettings}\n          onNavigate={this.basicNavigator}\n          onLoginRequest={this.handleLoginRequest}\n          onPersistenceChange={this.handlePersistenceChange}\n          onCreateAccount={this.handleNewAccountRequest}\n          onUpdateAccountDesc={this.handleTopicUpdateRequest}\n          onUpdatePassword={this.handleUpdatePasswordRequest}\n          onUpdateAccountTags={this.handleUpdateAccountTagsRequest}\n          onTogglePushNotifications={this.togglePushToken}\n          onToggleMessageSounds={this.handleToggleMessageSounds}\n          onToggleIncognitoMode={this.handleToggleIncognitoMode}\n          onCredAdd={this.handleCredAdd}\n          onCredDelete={this.handleCredDelete}\n          onCredConfirm={this.handleCredConfirm}\n          onTopicSelected={this.handleTopicSelected}\n          onCreateTopic={this.handleStartTopicRequest}\n          onLogout={this.handleLogout}\n          onDeleteAccount={this.handleDeleteAccount}\n          onShowAlert={this.handleShowAlert}\n          onCancel={this.handleSidepanelCancel}\n          onError={this.handleError}\n          onValidateCredentials={this.handleValidateCredentialsRequest}\n          onPasswordResetRequest={this.handlePasswordResetRequest}\n          onResetPassword={this.handleResetPassword}\n          onShowArchive={this.handleShowArchive}\n          onShowBlocked={this.handleShowBlocked}\n\n          onInitFind={this.tnInitFind}\n          searchResults={this.state.searchResults}\n          onSearchContacts={this.handleSearchContacts}\n\n          showContextMenu={this.handleShowContextMenu} />\n\n        <MessagesView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          ready={this.state.ready}\n          online={this.state.topicSelectedOnline}\n          acs={this.state.topicSelectedAcs}\n          displayMobile={this.state.displayMobile}\n          viewportWidth={this.state.viewportWidth}\n          viewportHeight={this.state.viewportHeight}\n          hideSelf={this.state.displayMobile &&\n            (this.state.mobilePanel !== 'topic-view' || this.state.infoPanel)}\n          topic={this.state.topicSelected}\n          myUserId={this.state.myUserId}\n          // User public.fn.\n          myUserName={this.state.sidePanelTitle}\n          serverVersion={this.state.serverVersion}\n          serverAddress={this.state.serverAddress}\n          applicationVisible={this.state.applicationVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          newTopicParams={this.state.newTopicParams}\n\n          onHideMessagesView={this.handleHideMessagesView}\n          onData={this.tnData}\n          onError={this.handleError}\n          onNewTopicCreated={this.handleNewTopicCreated}\n          showContextMenu={this.handleShowContextMenu}\n          onChangePermissions={this.handleChangePermissions}\n          onNewChat={this.handleNewChatInvitation}\n          sendMessage={this.handleSendMessage} />\n\n        {this.state.infoPanel ?\n          <InfoView\n            tinode={this.tinode}\n            connected={this.state.connected}\n            displayMobile={this.state.displayMobile}\n            topic={this.state.topicSelected}\n            searchableContacts={this.state.searchableContacts}\n            myUserId={this.state.myUserId}\n            panel={this.state.infoPanel}\n\n            errorText={this.state.errorText}\n            errorLevel={this.state.errorLevel}\n            errorAction={this.state.errorAction}\n            errorActionText={this.state.errorActionText}\n\n            onNavigate={this.infoNavigator}\n            onTopicDescUpdateRequest={this.handleTopicUpdateRequest}\n            onShowAlert={this.handleShowAlert}\n            onChangePermissions={this.handleChangePermissions}\n            onMemberUpdateRequest={this.handleMemberUpdateRequest}\n            onDeleteTopic={this.handleDeleteTopicRequest}\n            onDeleteMessages={this.handleDeleteMessagesRequest}\n            onLeaveTopic={this.handleLeaveUnsubRequest}\n            onBlockTopic={this.handleBlockTopicRequest}\n            onReportTopic={this.handleReportTopic}\n            onAddMember={this.handleManageGroupMembers}\n            onTopicTagsUpdateRequest={this.handleTagsUpdateRequest}\n            onTopicUnArchive={this.handleUnarchive}\n            onInitFind={this.tnInitFind}\n            onError={this.handleError}\n\n            showContextMenu={this.handleShowContextMenu}\n            />\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(TinodeWeb);\n","// Put all packages together.\n// Used to generate umd/index.prod.js\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { IntlProvider } from 'react-intl';\n\nimport allMessages from './messages.json';\nimport TinodeWeb from './views/tinode-web.jsx';\nimport HashNavigation from './lib/navigation.js';\n\n// Detect human language to use in the UI:\n//  Check parameters from URL hash #?hl=ru, then browser, then use 'en' as a fallback.\nconst { params } = HashNavigation.parseUrlHash(window.location.hash);\nconst language = (params && params.hl) ||\n  (navigator.languages && navigator.languages[0]) ||\n  navigator.language ||\n  navigator.userLanguage ||\n  'en';\n\n// Get the base language 'en' from a more specific 'en_GB' or 'en-US' as a partial fallback.\nconst baseLanguage = language.toLowerCase().split(/[-_]/)[0];\n\n// Try the full locale first, then the locale without the region code, fallback to 'en'.\nconst htmlLang = allMessages[language] ? langauge : allMessages[baseLanguage] ? baseLanguage : 'en';\nconst messages = allMessages[htmlLang];\n\n// Set lang attribute of the HTML element: <html lang=\"XX\">\ndocument.getElementsByTagName('html')[0].setAttribute('lang', htmlLang);\n\nReactDOM.render(\n  <React.StrictMode>\n    <IntlProvider locale={language} messages={messages} textComponent={React.Fragment}>\n      <TinodeWeb />\n    </IntlProvider>\n  </React.StrictMode>,\n  document.getElementById('mountPoint')\n);\n","// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// startup\n// Load entry module and return exports\n// This entry module doesn't tell about it's top-level declarations so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[478](0, __webpack_exports__, __webpack_require__);\n"],"names":["React","ReactDOM","ReactIntl","firebase","messaging","Tinode","Alert","render","this","props","visible","className","title","content","onReject","onClick","reject","FormattedMessage","id","defaultMessage","onConfirm","confirm","PACKAGE_VERSION","APP_NAME","KNOWN_HOSTS","hosted","local","DEFAULT_HOST","KEYPRESS_DELAY","DEFAULT_P2P_ACCESS_MODE","REM_SIZE","AVATAR_SIZE","MAX_INBAND_ATTACHMENT_SIZE","MAX_EXTERN_ATTACHMENT_SIZE","IMAGE_THUMBNAIL_DIM","MAX_TITLE_LENGTH","MAX_TOPIC_DESCRIPTION_LENGTH","messages","defineMessages","info","clear_messages","clear_for_all","delete","delete_for_all","send_retry","mute","unmute","reply","topic_delete","topic_delete_warning","delete_messages_warning","unblock","block","topic_block_warning","member_delete","archive","unarchive","edit_permissions","clear_messages_warning","ContextMenu","constructor","super","selfRef","formatMessage","intl","handlePageClick","bind","handleEscapeKey","handleClick","MenuItems","handler","params","errorHandler","onShowAlert","deleteMessages","message","retryMessage","replyToMessage","topicPermissionSetter","then","ctrl","onTopicRemoved","topicName","topic","tinode","getTopic","delTopic","catch","err","console","log","user","delSubscription","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","e","current","contains","target","preventDefault","stopPropagation","hide","keyCode","item","items","currentTarget","dataset","onAction","onError","error","all","hard","cancelSend","seq","delMessagesAll","delMessagesList","flushMessage","msg","createMessage","publishDraft","mode","result","updateMode","pickReply","menu","count","map","push","key","vSize","length","position","left","bounds","right","clickAt","x","top","bottom","y","style","ref","injectIntl","shortDateFormat","locale","window","navigator","userLanguage","language","now","Date","getFullYear","getMonth","getDate","toLocaleTimeString","hour12","hour","minute","toLocaleDateString","month","day","year","bytesToHumanSize","bytes","sizes","bucket","Math","min","floor","log2","pow","round","toFixed","shortenFileName","filename","maxLength","slice","idToColorClass","light","fg","userId","abs","value","hash","i","charCodeAt","stringToColorHash","updateFavicon","oldIcon","getElementById","head","getElementsByTagName","newIcon","createElement","type","rel","href","removeChild","appendChild","theCard","fn","imageUrl","imageMimeType","note","card","trim","mimeType","matches","exec","photo","data","substring","indexOf","arrayEqual","a","b","Array","isArray","sort","l","sanitizeUrl","url","allowedSchemes","replace","test","schemes","join","RegExp","sanitizeImageUrl","sanitizedUrl","deliveryMarker","received","name","color","LetterTile","avatar","isGroup","iconColor","letter","charAt","authorizeURL","alt","src","onerror","LoadSpinner","large","clear","centered","show","AvatarUpload","state","source","handleFileReceived","componentDidUpdate","prevProps","setState","image","files","onImageUpdated","URL","createObjectURL","randId","random","substr","readOnly","uid","accept","onChange","htmlFor","uploading","icon_mapping","badge_verified","badge_staff","badge_danger","BadgeList","badges","trustedBadges","comment","CheckBox","handleChange","checked","ContactBadges","icon","message_sending","message_sending_failed","ReceivedMarker","timestamp","marker","UnreadBadge","LazyImage","Object","assign","padding","whenDone","FileProgress","width","progress","onCancel","UploadingImage","onCancelUpload","SUPPORTED_IMAGE_FORMATS","MIME_EXTENSIONS","makeImageUrl","startsWith","fitImageSize","height","maxWidth","maxHeight","forceSquare","scale","size","dstWidth","dstHeight","srcWidth","srcHeight","xoffset","yoffset","fileNameForMime","fname","mime","idx","ext","at","lastIndexOf","imageScaled","fileOrBlob","maxSize","Promise","resolve","img","Image","crossOrigin","Error","onload","async","revokeObjectURL","dim","canvas","ctx","getContext","imageSmoothingEnabled","drawImage","includes","blob","toBlob","clearRect","blobToBase64","reader","FileReader","evt","bits","split","readAsDataURL","drafty_form","drafty_attachment","drafty_image","handleImageData","el","attr","viewportWidth","minWidth","minHeight","Drafty","max","onImagePreview","loading","fullFormatter","values","call","onFormButtonClick","inner","child","undefined","val","onQuoteClick","concat","previewFormatter","inlineImageAttr","quoteFormatter","quoteImage","promise","str","bin","atob","buf","ArrayBuffer","arr","Uint8Array","Blob","base64ToBlob","fetch","ok","status","statusText","scaled","b64","replyFormatter","Contact","handleContextClick","onSelected","index","showContextMenu","pageY","pageX","online","icon_badges","isVerified","isStaff","isDangerous","acs","showMode","getMode","isMuted","isJoiner","subtitle","preview","showCheckmark","selected","showOnline","isChannel","unread","small","ContactAction","action","badge_you","badge_owner","ContactList","topicSelected","contactNodes","contactsCount","contacts","c","filterFunc","filter","filterOn","private","toLowerCase","public","myUserId","isOwner","deliveryStatus","latestMessage","_status","msgStatus","showUnread","connected","onTopicSelected","trusted","verified","staff","danger","noScroll","dangerouslySetInnerHTML","__html","emptyListMessage","MenuCancel","ErrorPanel","level","onClearError","warn","text","whiteSpace","actionText","Chip","handleCancel","invalid","noAvatar","required","ChipInput","deriveStateFromProps","input","focused","handleTextInput","removeChipAt","handleChipCancel","handleFocusGained","handleFocusLost","handleKeyDown","placeholder","chips","prompt","sortedChips","sortChips","staticMembers","chipIndex","indexChips","prevState","keep","normal","removed","onChipRemoved","onFocusLost","onEnter","avatarDisabled","autoFocus","tabIndex","onFocus","onBlur","onKeyDown","no_contacts","contacts_not_found_short","GroupManager","members","indexMembers","keepInitialMembers","requiredMember","contactFilter","noContactsMessage","selectedContacts","handleContactSelected","handleMemberRemoved","handleContactFilter","handleSubmit","m","delta","present","keepInitial","stat","sel","splice","query","instance","added","keys","k","onSubmit","doContactFiltering","joiner","writer","preser","approver","sharer","deleter","owner","PermissionsEditor","names","skip","compare","userTitle","userAvatar","modeTitle","compareTitle","Cropper","panX","panY","originX","originY","zoom","minZoom","maxZoom","overlay","cutout","boundingBox","imageWidth","imageHeight","mouseX","mouseY","prevDistance","cutoutRect","bBoxRect","initScaling","onZoom","handleZoom","mouseDown","mouseUp","mouseMove","mouseTouch","positionAll","translate","passive","getBoundingClientRect","currPan","nextDiff","imgRect","imgLeft","imgRight","coLeft","coRight","imgTop","imgBottom","coTop","coBottom","touches","body","dX","dY","checkBound","touch0","touch1","distance","sqrt","t3d","orig","transform","transformOrigin","onLoad","step","AvatarCrop","objURL","imageCrop","VisiblePassword","handleVisibility","handeTextChange","handleEditingFinished","onFinished","setTimeout","activeElement","autoComplete","InPlaceEdit","active","initialValue","handleStartEditing","handlePasswordFinished","newValue","focus","event","checkValidity","spanText","spanClass","multiline","element","rows","TagManager","tags","tagInput","activated","handleTagInput","handleAddTag","handleRemoveTag","nextProps","last","tag","maxTagCount","getServerLimit","onTagsChanged","minTagLength","maxTagLength","add_tags_prompt","TopicDescEdit","getAccessMode","isMe","fullName","description","newAvatar","newAvatarMime","previousOnTags","tnNewTags","handleFullNameUpdate","handleImageUpdated","handleAvatarCropped","handlePrivateUpdate","handleDescriptionUpdate","uploadAvatar","handleAvatarCropCancel","handleTagsUpdated","onTagsUpdated","onUpdateTopicDesc","desc","readyToUpload","uploader","getLargeFileHelper","upload","finally","du","onUpdateTags","editable","full_name_placeholder","group_name_placeholder","private_placeholder","title_tag_manager","TopicCommon","credentials","getCredentials","addCredActive","addCredInvalid","newCred","previousTagsUpdated","tnCredsUpdated","handleCredChange","handleCredKeyDown","handleCredEntered","onCredsUpdated","getType","creds","method","asPhone","asEmail","onCredAdd","onTopicTagsUpdateRequest","cred","meth","done","onCredConfirm","onCredDelete","delete_messages","leave_chat","leave_chat_warning","block_contact","block_contact_warning","report_chat","report_chat_warning","other_user","TopicSecurity","handleDeleteTopic","handleDeleteMessages","handleLeave","handleBlock","handleReport","onDeleteTopic","onDeleteMessages","onLeaveTopic","onBlockTopic","onReportTopic","channel","groupTopic","onLaunchPermissionsEditor","access","auth","anon","modeGiven2","general","security","crop","perm_want","perm_given","perm_auth","perm_anon","perm_user","_clip","InfoView","admin","muted","address","selectedContact","modeGiven","modeWant","modeWant2","contactList","previousMetaDesc","previousSubsUpdated","resetSubs","resetDesc","resetTags","onMetaDesc","onSubsUpdated","handleImageChanged","handleMuted","handleUnarchive","handlePermissionsChanged","handleLaunchPermissionsEditor","handleShowAddMembers","handleMemberUpdateRequest","handleMemberSelected","handleContextMenu","handleBackNavigate","newState","user2","subscriber","getGiven","getWant","subscribers","sub","defacs","getDefaultAccess","entries","isAdmin","isSharer","isDeleter","archived","isArchived","isGroupType","isChannelType","chan","getMeta","startMetaQuery","withTags","build","subs","onTopicDescUpdate","ignored","onChangePermissions","ignored2","onTopicUnArchive","which","perm","onTopicDescUpdateRequest","userPermissionsEdited","toEdit","toCompare","toSkip","titleEdit","titleCompare","userPermissionsTitle","userPermissionsAvatar","editedPermissions","immutablePermissions","editedPermissionsTitle","immutablePermissionsTitle","editedPermissionsSkipped","onNavigate","onInitFind","onMemberUpdateRequest","args","panel","menuItems","view","shift","panelTitle","displayMobile","errorLevel","errorText","searchableContacts","no_members","Attachment","downloader","downloadFile","mimetype","download","loaded","cancel","helperFunc","isUrlRelative","downloadUrl","downloadWidget","BaseChatMessage","onProgress","handleProgress","handleImagePreview","handleFormButtonClick","handleCancelUpload","handleQuoteClick","formatterContext","getFormatter","tp","resp","act","onFormResponse","MESSAGE_STATUS_FAILED","userIsWriter","MESSAGE_STATUS_DEL_RANGE","ratio","replyToSeq","sideClass","deleted","sequence","response","bubbleClass","fullDisplay","userFrom","attachments","att","tree","innerRef","userName","IntlChatMessage","messaging_disabled","type_new_message","add_image_caption","file_attachment_too_large","cannot_initiate_upload","SendMessage","keypressTimestamp","getTime","handlePasteEvent","handleAttachImage","handleAttachFile","handleSend","handleKeyPress","handleMessageTyping","messageEditArea","replyTo","quote","disabled","onImageSuccess","onAttachmentSuccess","clipboardData","originalEvent","kind","file","getAsFile","filePasted","onAttachImage","onAttachFile","acceptBlank","noInput","onSendMessage","shiftKey","onKeyPress","messagePrompt","onCancelReply","attachImage","click","attachFile","display","DocPreview","handleSendDoc","caption","onClose","mimeToIcon","default","video","iconFromMime","GroupSubs","usersOnline","totalCount","countToShow","some","overflow","ImagePreview","handleSendImage","assignWidth","node","maxlength","Invitation","handleButtonAction","LogoView","version","serverVersion","serverAddress","HashNavigation","parts","path","forEach","part","decodeURIComponent","location","hasOwnProperty","parsed","parseUrlHash","composeUrlHash","sidepanel","infopanel","online_now","last_seen","not_found","invalid_content","isUnconfirmed","ex","getExcessive","isPeerRestricted","ms","getMissing","MessagesView","getDerivedStateFromProps","leave","sendMessage","retrySend","sendImageAttachment","sendFileAttachment","sendKeyPress","subscribe","handleScrollReference","handleScrollEvent","handleDescChange","handleSubsUpdated","handleMessageUpdate","handleAllMessagesReceived","handleInfoReceipt","handleImagePostview","handleClosePreview","handleFormResponse","handleShowContextMenuMessage","handleNewChatAcceptance","handleEnablePeer","postReadNotification","clearNotificationQueue","handlePickReply","handleCancelReply","chatMessageRefs","getOrCreateMessageRef","readNotificationQueue","readNotificationTimer","seqId","messagesScroller","messageCount","scrollTop","scrollHeight","scrollPosition","viewportHeight","onData","onAllMessagesReceived","onInfo","onPres","applicationVisible","ready","nextState","docPreview","imagePreview","imagePostview","typingIndicator","fetchingMessages","onlineSubs","peer","p2pPeerDesc","peerMessagingDisabled","latestClearId","maxClearId","isWriter","isReader","readingBlocked","unconformed","unconfirmed","isSubscribed","newTopic","newTopicParams","_topicName","getQuery","withLaterDesc","withLaterSub","withLaterData","withLaterDel","setQuery","code","onNewTopicCreated","queuedMessages","pub","_sending","navigateTo","setUrlTopic","blankState","oldTopicName","isTopicCached","oldTopic","msgHasMoreMessages","getMessagesPage","setInterval","clearInterval","n","sendAt","noteRead","setMilliseconds","getMilliseconds","clearTimeout","keyPressTimer","isNewMessage","from","what","forceUpdate","attachJSON","parse","searchParams","set","search","open","messageSpecificMenuItems","onNewChat","noteKeyPress","uploadCompletionPromise","append","maxInbandAttachmentSize","urlPromise","fileToBase64","maxExternAttachmentSize","limit","insertImage","_tempPreview","appendLineBreak","found","findMessage","_cancelled","init","isValid","wrapInto","senderName","senderId","userDesc","myUserName","scrollIntoView","behavior","classList","add","remove","component","hideSelf","component2","messageNodes","previousFrom","chatBoxClass","prev","next","nextFrom","thisFrom","isReply","parseInt","isNaN","hi","ts","_uploader","lastSeen","cont","getMeTopic","getContact","seen","when","onHideMessagesView","ButtonBack","onBack","MenuContacts","onNewTopic","onSettings","MenuStart","onSignUp","SideNavbar","AccountSettingsView","me","archived_contacts_title","ContactsView","handleAction","unreadThreads","archivedCount","chatList","blocked","arch","touched","action_ignored","onShowArchive","LocalStorageUtil","localStorage","setItem","JSON","stringify","getItem","oldVal","getObject","setObject","removeItem","CreateAccountView","login","password","email","imageDataUrl","errorCleared","saveToken","handleLoginChange","handlePasswordChange","handleEmailChange","handleFnChange","handleToggleSaveToken","onCreateAccount","submitClasses","login_prompt","password_prompt","onImageChanged","full_name_prompt","email_prompt","stay_logged_in","EditAccountView","handleCheckboxClick","onToggleMessageSounds","onTogglePushNotifications","onToggleIncognitoMode","messageSounds","desktopAlertsEnabled","desktopAlerts","incognitoMode","delete_account","delete_account_warning","AccSecurityView","blockedCount","showPermissionEditorFor","handlePasswordUpdate","handleHidePermissionsEditor","handleDeleteAccount","pwd","onUpdatePassword","onUpdateAccountDesc","onDeleteAccount","password_unchanged","onLogout","onShowBlocked","AccSupportView","LoginView","hostName","persist","onPersistenceChange","onLogin","autoCorrect","autoCapitalize","invalid_id","NewTopicById","groupId","prefix","NewTopicGroup","handleFieldEdit","handleTagsChanged","handleChannelToggle","SearchContacts","edited","handleSearchChange","handleSearch","handleClear","onSearchContacts","search_placeholder","search_for_contacts","search_no_results","NewTopicView","tabSelected","searchQuery","handleTabClick","handleSearchContacts","handleNewGroupSubmit","handleGroupByID","addUrlParam","removeUrlParam","onCreateTopic","dataUrl","priv","no_contacts_placeholder","searchResults","PasswordResetView","sent","token","scheme","onReset","onRequest","HostSelector","changed","handleHostNameChange","onServerAddressChange","hostOptions","list","SettingsView","transport","handleTransportSelected","handleServerAddressChange","onUpdate","def","ws","lp","transportOptions","phone","ValidationView","credCode","credMethod","numbers_only","register","settings","edit","notif","support","newtpk","reset","SidepanelView","handleNewTopic","errorAction","errorActionText","loadSpinnerVisible","loginDisabled","onLoginRequest","onGlobalSettings","onUpdateAccountTags","onValidateCredentials","onPasswordResetRequest","onResetPassword","detectServerAddress","host","protocol","hostname","port","isSecureConnection","POP_SOUND","Audio","reconnect_countdown","reconnect_now","push_init_failed","invalid_security_token","no_connection","code_doesnot_match","menu_item_info","TinodeWeb","getBlankState","handleResize","handleHashRoute","handleOnline","checkForAppUpdate","handleVisibilityEvent","handleError","handleLoginRequest","handlePersistenceChange","handleConnected","handleAutoreconnectIteration","doLogin","handleCredentialsRequest","handleLoginSuccessful","handleDisconnect","tnMeMetaDesc","tnMeContactUpdate","tnMeSubsUpdated","resetContactList","tnData","tnInitFind","tnFndSubsUpdated","handleTopicSelected","handleHideMessagesView","handleSendMessage","handleNewChatInvitation","handleNewAccount","handleNewAccountRequest","handleUpdatePasswordRequest","handleUpdateAccountTagsRequest","handleToggleIncognitoMode","handleSettings","handleGlobalSettings","handleShowArchive","handleShowBlocked","handleToggleMessageSounds","handleCredAdd","handleCredDelete","handleCredConfirm","initFCMessaging","togglePushToken","requestPushToken","handlePushMessage","handleSidepanelCancel","handleStartTopicRequest","handleNewTopicCreated","handleTopicUpdateRequest","handleChangePermissions","handleTagsUpdateRequest","handleLogout","handleDeleteTopicRequest","handleDeleteMessagesRequest","handleLeaveUnsubRequest","handleBlockTopicRequest","handleReportTopic","handleShowContextMenu","defaultTopicContextMenu","handleHideContextMenu","handleShowAlert","handleShowInfoView","handleValidateCredentialsRequest","handlePasswordResetRequest","handleResetPassword","handleContextMenuAction","autoLogin","messageSoundsOff","FIREBASE_INIT","firebaseToken","hidden","sidePanelSelected","sidePanelTitle","sidePanelAvatar","myTrustedBadges","liveConnection","onLine","topicSelectedOnline","topicSelectedAcs","innerWidth","infoPanel","mobilePanel","contextMenuVisible","contextMenuBounds","contextMenuClickAt","contextMenuParams","contextMenuItems","alertVisible","alertParams","requestedTopic","BroadcastChannel","documentElement","clientWidth","clientHeight","tnSetup","onConnect","onDisconnect","onAutoreconnectIteration","setDeviceToken","parsedNav","expires","setAuthToken","connect","readTimer","readTimerCallback","persistentCache","onSetupCompleted","appName","apiKey","secure","setHumanLanguage","enableLogging","oobNotification","fbPush","usePublicVapidKey","messagingVapidKey","serviceWorker","reg","useServiceWorker","postMessage","onTokenRefresh","onMessage","payload","mobile","onupdatefound","installingWorker","installing","onstatechange","controller","getTopicAccessMode","newTopicTabSelected","tab","reconnectCountdown","reconnect","isConnected","initStorage","clearStorage","getServerInfo","ver","sec","prom","timeLeft","seconds","secondsToTime","isAuthenticated","getAuthToken","loginBasic","loginToken","goToTopic","onContactUpdate","getCurrentUserID","withDesc","withCred","disconnect","urlHash","setUrlSidePanel","isPresencer","play","unused","foundContacts","merged","updated","past","prepareSearchableContacts","receivedTimer","noteRecv","fnd","getFndTopic","withSub","s","setMeta","isTopicOnline","isP2PType","am","updateWant","login_","password_","public_","cred_","tags_","createAccountBasic","on","enabled","updateObject","requestPermission","deleteToken","getToken","refreshedToken","delCredential","basicNavigator","infoNavigator","setUrlInfoPanel","newGroupTopicName","oldName","newName","updateAccountBasic","getCurrentLogin","updateGiven","delCurrentUser","publish","self_blocked","subscribed","confirmText","rejectText","invite","requestResetAuthSecret","newPassword","btoa","base64ReEncode","onAddMember","handleManageGroupMembers","hl","languages","baseLanguage","htmlLang","allMessages","langauge","setAttribute","IntlProvider","textComponent","__webpack_require__","module","getter","__esModule","d","exports","definition","o","defineProperty","enumerable","get","obj","prop","prototype","__webpack_modules__"],"sourceRoot":""}