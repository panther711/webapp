{"version":3,"file":"index.prod.js","mappings":"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","sources":["webpack://tinode-webapp/external var \"React\"","webpack://tinode-webapp/external var \"ReactDOM\"","webpack://tinode-webapp/external var \"ReactIntl\"","webpack://tinode-webapp/external var \"firebase\"","webpack://tinode-webapp/external var \"Tinode\"","webpack://tinode-webapp/external var [\"firebase\",\"messaging\"]","webpack://tinode-webapp/./src/widgets/alert.jsx","webpack://tinode-webapp/./src/version.js","webpack://tinode-webapp/./src/config.js","webpack://tinode-webapp/./src/widgets/context-menu.jsx","webpack://tinode-webapp/./src/widgets/contact-badges.jsx","webpack://tinode-webapp/./src/lib/strformat.js","webpack://tinode-webapp/./src/lib/utils.js","webpack://tinode-webapp/./src/widgets/letter-tile.jsx","webpack://tinode-webapp/./src/widgets/received-marker.jsx","webpack://tinode-webapp/./src/widgets/unread-badge.jsx","webpack://tinode-webapp/./src/widgets/lazy-image.jsx","webpack://tinode-webapp/./src/widgets/file-progress.jsx","webpack://tinode-webapp/./src/widgets/uploading-image.jsx","webpack://tinode-webapp/./src/lib/blob-helpers.js","webpack://tinode-webapp/./src/lib/formatters.js","webpack://tinode-webapp/./src/widgets/contact.jsx","webpack://tinode-webapp/./src/widgets/contact-action.jsx","webpack://tinode-webapp/./src/widgets/contact-list.jsx","webpack://tinode-webapp/./src/widgets/search-contacts.jsx","webpack://tinode-webapp/./src/widgets/forward-dialog.jsx","webpack://tinode-webapp/./src/widgets/load-spinner.jsx","webpack://tinode-webapp/./src/widgets/avatar-upload.jsx","webpack://tinode-webapp/./src/widgets/badge-list.jsx","webpack://tinode-webapp/./src/widgets/checkbox.jsx","webpack://tinode-webapp/./src/widgets/menu-cancel.jsx","webpack://tinode-webapp/./src/widgets/error-panel.jsx","webpack://tinode-webapp/./src/widgets/chip.jsx","webpack://tinode-webapp/./src/widgets/chip-input.jsx","webpack://tinode-webapp/./src/widgets/group-manager.jsx","webpack://tinode-webapp/./src/widgets/permissions-editor.jsx","webpack://tinode-webapp/./src/widgets/cropper.jsx","webpack://tinode-webapp/./src/widgets/avatar-crop.jsx","webpack://tinode-webapp/./src/widgets/visible-password.jsx","webpack://tinode-webapp/./src/widgets/in-place-edit.jsx","webpack://tinode-webapp/./src/widgets/tag-manager.jsx","webpack://tinode-webapp/./src/widgets/topic-desc-edit.jsx","webpack://tinode-webapp/./src/widgets/topic-common.jsx","webpack://tinode-webapp/./src/widgets/topic-security.jsx","webpack://tinode-webapp/./src/views/info-view.jsx","webpack://tinode-webapp/./src/widgets/attachment.jsx","webpack://tinode-webapp/./src/widgets/chat-message.jsx","webpack://tinode-webapp/./src/widgets/send-message.jsx","webpack://tinode-webapp/./src/widgets/doc-preview.jsx","webpack://tinode-webapp/./src/widgets/group-subs.jsx","webpack://tinode-webapp/./src/widgets/image-preview.jsx","webpack://tinode-webapp/./src/widgets/invitation.jsx","webpack://tinode-webapp/./src/views/logo-view.jsx","webpack://tinode-webapp/./src/lib/navigation.js","webpack://tinode-webapp/./src/views/messages-view.jsx","webpack://tinode-webapp/./src/widgets/button-back.jsx","webpack://tinode-webapp/./src/widgets/menu-contacts.jsx","webpack://tinode-webapp/./src/widgets/menu-start.jsx","webpack://tinode-webapp/./src/widgets/side-navbar.jsx","webpack://tinode-webapp/./src/views/account-settings-view.jsx","webpack://tinode-webapp/./src/views/contacts-view.jsx","webpack://tinode-webapp/./src/lib/local-storage.js","webpack://tinode-webapp/./src/views/create-account-view.jsx","webpack://tinode-webapp/./src/views/acc-notifications-view.jsx","webpack://tinode-webapp/./src/views/acc-security-view.jsx","webpack://tinode-webapp/./src/views/acc-support-view.jsx","webpack://tinode-webapp/./src/views/login-view.jsx","webpack://tinode-webapp/./src/widgets/new-topic-by-id.jsx","webpack://tinode-webapp/./src/widgets/new-topic-group.jsx","webpack://tinode-webapp/./src/views/new-topic-view.jsx","webpack://tinode-webapp/./src/views/password-reset-view.jsx","webpack://tinode-webapp/./src/widgets/host-selector.jsx","webpack://tinode-webapp/./src/views/settings-view.jsx","webpack://tinode-webapp/./src/views/validation-view.jsx","webpack://tinode-webapp/./src/views/sidepanel-view.jsx","webpack://tinode-webapp/./src/lib/host-name.js","webpack://tinode-webapp/./src/views/tinode-web.jsx","webpack://tinode-webapp/./src/index.js","webpack://tinode-webapp/webpack/bootstrap","webpack://tinode-webapp/webpack/runtime/compat get default export","webpack://tinode-webapp/webpack/runtime/define property getters","webpack://tinode-webapp/webpack/runtime/hasOwnProperty shorthand","webpack://tinode-webapp/webpack/startup"],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = React;","const __WEBPACK_NAMESPACE_OBJECT__ = ReactDOM;","const __WEBPACK_NAMESPACE_OBJECT__ = ReactIntl;","const __WEBPACK_NAMESPACE_OBJECT__ = firebase;","const __WEBPACK_NAMESPACE_OBJECT__ = Tinode;","const __WEBPACK_NAMESPACE_OBJECT__ = firebase.messaging;","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Alert extends React.PureComponent {\n  render() {\n    return this.props.visible ?\n      <div className=\"alert-container\">\n        <div className=\"alert\">\n          <div className=\"title\">{this.props.title}</div>\n          <div className=\"content\">{this.props.content}</div>\n          <div className=\"dialog-buttons\">\n            {this.props.onReject ?\n              <button className=\"outline\" onClick={this.props.onReject}>\n                {this.props.reject || <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />}\n              </button>\n              :\n              null\n            }\n            <button className=\"primary\" onClick={this.props.onConfirm}>\n              {this.props.confirm || <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\"  />}\n            </button>\n          </div>\n        </div>\n      </div>\n    :\n    null;\n  }\n};\n","// This is a generated file. Don't edit.\n\nexport const PACKAGE_VERSION = \"0.18.0-alpha1\";\n","import { PACKAGE_VERSION } from './version.js';\n\n// Name of this application, used in the User-Agent.\nexport const APP_NAME = 'TinodeWeb/' + (PACKAGE_VERSION || '0.17');\n\n// API key. Use https://github.com/tinode/chat/tree/master/keygen to generate your own\nexport const API_KEY = 'AQEAAAABAAD_rAp4DJh05a1HAwFT3A6K';\n\n// The array of possible hosts to connect to.\nexport const KNOWN_HOSTS = {hosted: 'web.tinode.co', local: 'localhost:6060'};\n\n// Default host name and port to connect to.\nexport const DEFAULT_HOST = KNOWN_HOSTS.hosted;\n\n// Enable console logging.\nexport const LOGGING_ENABLED = true;\n\n// Minimum time between two keypress notifications, milliseconds.\nexport const KEYPRESS_DELAY = 3*1000;\n// Delay before sending a {note} for reciving a message, milliseconds.\nexport const RECEIVED_DELAY = 500;\n// Delay before sending a read notification, milliseconds.\nexport const READ_DELAY = 1000;\n\n// The default shortest allowed tag length. Matches the value on the server.\nexport const MIN_TAG_LENGTH = 2;\n// The default greatest allowed tag length. Matches the value on the server.\nexport const MAX_TAG_LENGTH = 96;\n// The default maximum number of tags allowed. Matches the value on the server.\nexport const MAX_TAG_COUNT = 16;\n\n// Access mode for P2P subscriptions initiated by the current user.\nexport const DEFAULT_P2P_ACCESS_MODE = 'JRWPS';\n// Access mode for new group topics created by the current user.\nexport const NEW_GRP_ACCESS_MODE = 'JRWPSAO';\n// Access mode for a channel.\nexport const CHANNEL_ACCESS_MODE = 'JR';\n\n// Access mode for no access.\nexport const NO_ACCESS_MODE = 'N';\n\n// Mediaquery breakpoint between desktop and mobile, in px. Should match the value\n// in @media (max-size: 640px) in base.css\nexport const MEDIA_BREAKPOINT = 640;\n// Size of css 'rem' unit in pixels. Default 1rem = 10pt = 13px.\nexport const REM_SIZE = 13;\n\n// Size of the avatar image: when image dimensions are greater or the image is not square, it's resized to\n// a square of this size or less.\nexport const AVATAR_SIZE = 384;\n\n// Maximum size of an avatar in bytes for sending in-band. Bigger avatars will be sent out of band (as uploads).\nexport const MAX_AVATAR_BYTES = 4096;\n\n// Size of the broken_image shown in MessagesView\nexport const BROKEN_IMAGE_SIZE = 32;\n\n// Number of chat messages to fetch in one call.\nexport const MESSAGES_PAGE = 24;\n\n// Default maximum in-band (included directly into the message) attachment size which fits into\n// a message of 256K in size. Used when the server-provided value is unavailable. The actual\n// binary size of the attachment should be smaller due to base64 encoding expansion and some overhead,\n// for instance 1024 bytes.\n// Increase this limit to a greater value in production, if desired. Also increase\n// max_message_size in the server config.\nexport const MAX_INBAND_ATTACHMENT_SIZE = 262144;\n\n// Default absolute maximum attachment size to be used with the server = 8MB.\n// Used when the server-provided value is unavailable. Increase to something like 100MB in production.\nexport const MAX_EXTERN_ATTACHMENT_SIZE = 1 << 23;\n\n// Maximum allowed linear dimension (pixels) of an image sent inline. Larger images will be shrunk\n// to make the larger dimension fit under this size. You may want to adjust it to 1600 or\n// 2400 for production.\nexport const MAX_IMAGE_DIM = 1024;\n\n// Linear dimensions of image preview: shrink image under this size for previews.\nexport const IMAGE_PREVIEW_DIM = 64;\n\n// Linear dimensions of image thumbnail: shrink image under this size for thumbnails in reply quote previews.\nexport const IMAGE_THUMBNAIL_DIM = 36;\n\n// Maximum number of online users to be shown in a topic title bar. Others will be\n// hidden under \"+X more\"\nexport const MAX_ONLINE_IN_TOPIC = 4;\n\n// Maximum length of user name, topic title, and private comment.\nexport const MAX_TITLE_LENGTH = 60;\n// Maximum length of topic description.\nexport const MAX_TOPIC_DESCRIPTION_LENGTH = 360;\n\n// Length of message previews in chat list, in characters.\nexport const MESSAGE_PREVIEW_LENGTH = 80;\n\n// Length of a quote in quoted reply (for outgoing messages).\nexport const QUOTED_REPLY_LENGTH = 30;\n\n// Link for \"Contact Us\".\nexport const LINK_CONTACT_US = 'email:support@tinode.co';\n\n// Link to Privacy Policy.\nexport const LINK_PRIVACY_POLICY = 'https://tinode.co/privacy.html';\n\n// Link to Terms of Service.\nexport const LINK_TERMS_OF_SERVICE = 'https://tinode.co/terms.html';\n","// Context Menu: popup/dropdown menu.\nimport React from 'react';\nimport { injectIntl, defineMessages } from 'react-intl';\n\nimport { REM_SIZE } from '../config.js';\n\nconst messages = defineMessages({\n  info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  },\n  clear_messages: {\n    id: 'menu_item_clear_messages',\n    defaultMessage: 'Clear messages',\n    description: 'Delete all messages'\n  },\n  clear_for_all: {\n    id: 'menu_item_clear_messages_for_all',\n    defaultMessage: 'Clear for All',\n    description: 'Delete all message(s) for all members'\n  },\n  delete: {\n    id: 'menu_item_delete',\n    defaultMessage: 'Delete',\n    description: 'Delete selected messages'\n  },\n  delete_for_all: {\n    id: 'menu_item_delete_for_all',\n    defaultMessage: 'Delete for All',\n    description: 'Delete selected message(s) for all members'\n  },\n  send_retry: {\n    id: 'menu_item_send_retry',\n    defaultMessage: 'Retry',\n    description: 'Retry sending message'\n  },\n  mute: {\n    id: 'menu_item_mute',\n    defaultMessage: 'Mute',\n    description: 'Turn off notifications'\n  },\n  unmute: {\n    id: 'menu_item_unmute',\n    defaultMessage: 'Unmute',\n    description: 'Turn notifications on'\n  },\n  reply: {\n    id: 'menu_item_reply',\n    defaultMessage: 'Reply',\n    description: 'Reply to message'\n  },\n  forward: {\n    id: 'menu_item_forward',\n    defaultMessage: 'Forward',\n    description: 'Forward message'\n  },\n  topic_delete: {\n    id: 'menu_item_delete_topic',\n    defaultMessage: 'Delete',\n    description: 'Delete entire topic'\n  },\n  topic_delete_warning: {\n    id: 'topic_delete_warning',\n    defaultMessage: 'Are you sure you want to delete this conversation? It cannot be undone.',\n    description: 'Alert warning when deleting entire topic'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  unblock: {\n    id: 'menu_item_unblock',\n    defaultMessage: 'Unblock',\n    description: 'Unblock topic or user'\n  },\n  // Generic string suitable for either topic or user.\n  block: {\n    id: 'menu_item_block',\n    defaultMessage: 'Block',\n    description: 'Block topic or user'\n  },\n  topic_block_warning: {\n    id: 'topic_block_warning',\n    defaultMessage: 'Are you sure you want to block this conversation?',\n    description: 'Alert warning when blocking a topic.'\n  },\n  member_delete: {\n    id: 'menu_item_member_delete',\n    defaultMessage: 'Remove',\n    description: 'Remove user from topic'\n  },\n  archive: {\n    id: 'menu_item_archive_topic',\n    defaultMessage: 'Archive',\n    description: 'Move topic from the list of active chats to archive'\n  },\n  unarchive: {\n    id: 'menu_item_restore_topic',\n    defaultMessage: 'Restore',\n    description: 'Restore topic from archive'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n});\n\nclass ContextMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selfRef = React.createRef();\n\n    const {formatMessage} = props.intl;\n\n    this.handlePageClick = this.handlePageClick.bind(this);\n    this.handleEscapeKey = this.handleEscapeKey.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n\n    // Preconfigured menu items.\n    this.MenuItems = {\n      'topic_info': {\n        id: 'topic_info',\n        title: formatMessage(messages.info),\n        handler: null\n      },\n      'messages_clear': {\n        id: 'messages_clear',\n        title: formatMessage(messages.clear_messages),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.clear_messages), // title\n            formatMessage(messages.clear_messages_warning), // content\n            (() => { this.deleteMessages(true, false, params, errorHandler); }), // onConfirm\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'messages_clear_hard': {\n        id: 'messages_clear_hard',\n        title: formatMessage(messages.clear_for_all),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.clear_for_all), // title\n            formatMessage(message.delete_messages_warning), // content\n            (() => { return this.deleteMessages(true, true, params, errorHandler); }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'message_delete': {\n        id: 'message_delete',\n        title: formatMessage(messages.delete),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, false, params, errorHandler);\n        }\n      },\n      'message_delete_hard': {\n        id: 'message_delete_hard',\n        title: formatMessage(messages.delete_for_all),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, true, params, errorHandler);\n        }\n      },\n      'menu_item_send_retry': {\n        id: 'menu_item_send_retry',\n        title: formatMessage(messages.send_retry),\n        handler: (params, errorHandler) => {\n          return this.retryMessage(params, errorHandler);\n        }\n      },\n      'menu_item_reply': {\n        id: 'menu_item_reply',\n        title: formatMessage(messages.reply),\n        handler: (params, errorHandler) => {\n          return this.replyToMessage(params, errorHandler);\n        }\n      },\n      'menu_item_forward': {\n        id: 'menu_item_forward',\n        title: formatMessage(messages.forward),\n        handler: (params, errorHandler) => {\n          return this.forwardMessage(params, errorHandler);\n        }\n      },\n      'topic_unmute': {\n        id: 'topic_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'topic_mute': {\n        id: 'topic_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'topic_unblock': {\n        id: 'topic_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n      'topic_block': {\n        id: 'topic_block',\n        title: formatMessage(messages.block),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.block), // title\n            formatMessage(messages.topic_block_warning), // content\n            (() => {\n              return this.topicPermissionSetter('-JP', params, errorHandler).then((ctrl) => {\n                this.props.onTopicRemoved(params.topicName);\n                return ctrl;\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_delete': {\n        id: 'topic_delete',\n        title: formatMessage(messages.topic_delete),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.topic_delete), // title\n            formatMessage(messages.topic_delete_warning), // content\n            (() => {\n              const topic = this.props.tinode.getTopic(params.topicName);\n              if (!topic) {\n                console.log(\"Topic not found: \", params.topicName);\n                return;\n              }\n              return topic.delTopic(true).catch((err) => {\n                if (errorHandler) {\n                  errorHandler(err.message, 'err');\n                }\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_archive': {\n        id: 'topic_archive',\n        title: formatMessage(messages.archive),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic) {\n            console.log(\"Topic not found: \", params.topicName);\n            return;\n          }\n          return topic.archive(true).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      'topic_restore': {\n        id: 'topic_restore',\n        title: formatMessage(messages.unarchive),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic) {\n            console.log(\"Topic not found: \", params.topicName);\n            return;\n          }\n          return topic.archive(false).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      // menu_item_edit_permissions is defined elsewhere.\n      'permissions': {\n        id: 'permissions',\n        title: formatMessage(messages.edit_permissions),\n        handler: null\n      },\n      'member_delete': {\n        id: 'member_delete',\n        title: formatMessage(messages.member_delete),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic || !params.user) {\n            console.log(\"Topic or user not found: '\" + params.topicName + \"', '\" + params.user + \"'\");\n            return;\n          }\n          return topic.delSubscription(params.user).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      'member_mute': {\n        id: 'member_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'member_unmute': {\n        id: 'member_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'member_block': {\n        id: 'member_block',\n        title: formatMessage(messages.block),\n        handler: this.topicPermissionSetter.bind(this, '-JP')\n      },\n      'member_unblock': {\n        id: 'member_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handlePageClick, false);\n    document.addEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handlePageClick, false);\n    document.removeEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  handlePageClick(e) {\n    if (this.selfRef.current.contains(e.target)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n  }\n\n  handleEscapeKey(e) {\n    if (e.keyCode === 27) {\n      this.props.hide();\n    }\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n    let item = this.props.items[e.currentTarget.dataset.id];\n    if (typeof item == 'string') {\n      item = this.MenuItems[item];\n    }\n\n    if (!item) {\n      console.error(\"Invalid menu item ID\", e.currentTarget.dataset.id);\n    } else {\n      this.props.onAction(\n        item.id,\n        item.handler(this.props.params, this.props.onError),\n        this.props.params);\n    }\n  }\n\n  // Menu Actions\n\n  deleteMessages(all, hard, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found: \", params.topicName);\n      return;\n    }\n\n    // We don't know if the message is still pending (e.g. attachment is being uploaded),\n    // so try cancelling first. No harm if we can't cancel.\n    // The message can be cancelled if transmission to the server has not\n    // started yet or if the message send has failed.\n    if (!all && topic.cancelSend(params.seq)) {\n      return;\n    }\n    // Can't cancel. Delete instead.\n    const promise = all ?\n      topic.delMessagesAll(hard) :\n      topic.delMessagesList([params.seq], hard);\n\n    return promise.catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Retries sending failed message.\n  retryMessage(params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    // Remove the existing message entry.\n    if (!topic || !topic.flushMessage(params.seq)) {\n      return;\n    }\n    const msg = topic.createMessage(params.content, false);\n    return topic.publishDraft(msg).catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  replyToMessage(params, errorHandler) {\n    console.log(\"Reply to message\", params);\n  }\n\n  // Function is used by context menu to set permissions.\n  topicPermissionSetter(mode, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found\", params.topicName);\n      return;\n    }\n\n    let result = topic.updateMode(params.user, mode);\n    if (errorHandler) {\n      result = result.catch((err) => {\n        errorHandler(err.message, 'err');\n      });\n    }\n    return result;\n  }\n\n  replyToMessage(params, errorHandler) {\n    params.pickReply(params.seq, params.content, params.forwarded, params.userFrom, params.userName, errorHandler);\n  }\n\n  forwardMessage(params, errorHandler) {\n    //params.pickReply({ seq: params.seq, content: params.content });\n    //this.props.\n    console.log('forwarding msg ', params);\n  }\n\n  render() {\n    const menu = [];\n    let count = 0;\n    this.props.items.map((item) => {\n      if (typeof item == 'string') {\n        item = this.MenuItems[item];\n      }\n      if (item && item.title) {\n        menu.push(\n          item.title == '-' ?\n            <li className=\"separator\" key={count} />\n            :\n            <li onClick={this.handleClick} data-id={count} key={count}>{item.title}</li>\n        );\n      }\n      count++;\n    });\n\n    // Ensure that menu is inside the app-container.\n    const hSize = 12 * REM_SIZE;\n    const vSize = REM_SIZE * (0.7 + menu.length * 2.5);\n    const left = (this.props.bounds.right - this.props.clickAt.x < hSize) ?\n        (this.props.clickAt.x - this.props.bounds.left - hSize) :\n        (this.props.clickAt.x - this.props.bounds.left);\n    const top = (this.props.bounds.bottom - this.props.clickAt.y < vSize) ?\n        (this.props.clickAt.y - this.props.bounds.top - vSize) :\n        (this.props.clickAt.y - this.props.bounds.top);\n\n    const position = {\n      left: left + 'px',\n      top: top + 'px'\n    };\n\n    return (\n      <ul className=\"menu\" style={position} ref={this.selfRef}>\n        {menu}\n      </ul>\n    );\n  }\n}\n\nexport default injectIntl(ContextMenu);\n","import React from 'react';\n\nconst icon_mapping = {'muted': 'notifications_off', 'banned': 'block', 'staff': 'verified_user'};\n\n/* Contact's labels: [you], or icons [muted], [blocked] */\nexport default class ContactBadges extends React.PureComponent {\n  render() {\n    let badges = null;\n    if (this.props.badges && this.props.badges.length > 0) {\n      badges = [];\n      this.props.badges.map((b) => {\n        const color = (b.color ? ' ' + b.color : '');\n        if (b.icon) {\n          badges.push(<i className={'material-icons as-badge' + color} key={b.key || b.icon}>{icon_mapping[b.icon] || b.icon}</i>);\n        } else {\n          badges.push(<span className={'badge' + color} key={b.key || b.name}>{b.name}</span>);\n        }\n      });\n      return <>{badges}</>;\n    }\n    return null;\n  }\n};\n","// Short representation of time in the past.\nexport function shortDateFormat(then, locale) {\n  locale = locale || window.navigator.userLanguage || window.navigator.language;\n  const now = new Date();\n  if (then.getFullYear() == now.getFullYear()) {\n    // Same year.\n    if (then.getMonth() == now.getMonth() && then.getDate() == now.getDate()) {\n      // Same month and day, show time only.\n      return then.toLocaleTimeString(locale, {hour12: false, hour: '2-digit', minute: '2-digit'});\n    }\n    // Different month and/or day, show month day, time.\n    return then.toLocaleDateString(locale,\n      {hour12: false, month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit'});\n  }\n  // Different year: just show the date.\n  return then.toLocaleDateString(locale, {year: 'numeric', month: 'short', day: 'numeric'});\n}\n\n// Convert seconds to minutes:seconds, i.e. 156 sec -> 2:36.\nexport function secondsToTime(seconds) {\n  const min = Math.floor(seconds / 60);\n  let sec = seconds % 60;\n  sec = sec < 10 ? `0${sec}` : sec;\n  return `${min}:${sec}`;\n}\n\n// Convert a number of bytes to human-readable format.\nexport function bytesToHumanSize(bytes) {\n  if (!bytes || bytes == 0) {\n    return '0 Bytes';\n  }\n\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n  const bucket = Math.min(Math.floor(Math.log2(bytes) / 10) | 0, sizes.length-1);\n  const count = bytes / Math.pow(1024, bucket);\n  const round = bucket > 0 ? (count < 3 ? 2 : (count < 30 ? 1 : 0)) : 0;\n  return count.toFixed(round) + ' ' + sizes[bucket];\n}\n\n// Shorten a file name to be under maxLength by clipping out the middle.\nexport function shortenFileName(filename, maxLength) {\n  if (typeof filename != 'string') {\n    return filename;\n  }\n  return filename.length > maxLength ?\n    filename.slice(0, maxLength/2 - 1) + '…' + filename.slice(1 - maxLength/2) : filename;\n}\n\n// Get 32 bit integer hash value for a string. Ideally it should produce the same value\n// as Java's String#hash().\nfunction stringToColorHash(value) {\n  let hash = 0;\n  value = '' + value;\n  for (let i = 0; i < value.length; i++) {\n    hash = ((hash << 5) - hash) + value.charCodeAt(i);\n    hash = hash & hash; // Convert to 32bit integer\n  }\n  return hash;\n}\n\n// User avatar letter color id.\nexport function letterTileColorId(userId) {\n  return Math.abs(stringToColorHash(userId)) % 16;\n}\n\n// Converts user or topic ID to a CSS color class. Ideally it should produce the same color value as Java version.\n// params:\n// - {string} id: user or topic ID\n// - {boolean} light: light or dark version of the color.\n// - {boolean} fg: foreground (text) or background color.\nexport function idToColorClass(id, light, fg) {\n  return (light ? 'lt-' : 'dk-') + (fg ? 'fg-' : 'bg-') + letterTileColorId(id);\n}\n","// Odds and ends\n\nimport Tinode from 'tinode-sdk';\n\n// Make shortcut icon appear with a green dot + show unread count in title.\nexport function updateFavicon(count) {\n  const oldIcon = document.getElementById('shortcut-icon');\n  const head = document.head || document.getElementsByTagName('head')[0];\n  const newIcon = document.createElement('link');\n  newIcon.type = 'image/png';\n  newIcon.id = 'shortcut-icon';\n  newIcon.rel = 'shortcut icon';\n  newIcon.href = 'img/logo32x32' + (count > 0 ? 'a' : '') + '.png';\n  if (oldIcon) {\n    head.removeChild(oldIcon);\n  }\n  head.appendChild(newIcon);\n\n  document.title = (count > 0 ? '('+count+') ' : '') + 'Tinode';\n}\n\n// Create theCard which represents user's or topic's \"public\" info.\nexport function theCard(fn, imageUrl, imageMimeType, note) {\n  let card = null;\n  fn = fn && fn.trim();\n  note = note && note.trim();\n\n  if (fn) {\n    card = {\n      fn: fn\n    };\n  }\n\n  if (typeof note == 'string') {\n    card = card || {};\n    card.note = note ? note : Tinode.DEL_CHAR;\n  }\n\n  if (imageUrl) {\n    card = card || {};\n    let mimeType = imageMimeType;\n    // Is this a data URL \"data:[<mediatype>][;base64],<data>\"?\n    const matches = /^data:(image\\/[-a-z0-9+.]+)?(;base64)?,/i.exec(imageUrl);\n    if (matches) {\n      mimeType = matches[1];\n      card.photo = {\n        data: imageUrl.substring(imageUrl.indexOf(',') + 1),\n        ref: Tinode.DEL_CHAR\n      };\n    } else {\n      card.photo = {\n        data: Tinode.DEL_CHAR,\n        ref: imageUrl\n      };\n    }\n    card.photo.type = (mimeType || 'image/jpeg').substring('image/'.length);\n  }\n\n  return card;\n}\n\n// Deep-shallow compare two arrays: shallow compare each element.\nexport function arrayEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (!Array.isArray(a) || !Array.isArray(b)) {\n    return false;\n  }\n\n  // Compare lengths first.\n  if (a.length != b.length) {\n    return false;\n  }\n  // Order of elements is ignored.\n  a.sort();\n  b.sort();\n  for (let i = 0, l = a.length; i < l; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Checks (loosely) if the given string is a phone. If so, returns the phone number in a format\n// as close to E.164 as possible.\nexport function asPhone(val) {\n  val = val.trim();\n  if (/^(?:\\+?(\\d{1,3}))?[- (.]*(\\d{3})[- ).]*(\\d{3})[- .]*(\\d{2})[- .]*(\\d{2})?$/.test(val)) {\n    return val.replace(/[- ().]*/, '');\n  }\n  return null;\n}\n\n// Checks (loosely) if the given string is an email. If so returns the email.\nexport function asEmail(val) {\n  val = val.trim();\n  if (/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(val)) {\n    return val;\n  }\n  return null;\n}\n\n// Checks if URL is a relative url, i.e. has no 'scheme://', including the case of missing scheme '//'.\n// The scheme is expected to be RFC-compliant, e.g. [a-z][a-z0-9+.-]*\n// example.html - ok\n// https:example.com - not ok.\n// http:/example.com - not ok.\n// ' ↲ https://example.com' - not ok. (↲ means carriage return)\nexport function isUrlRelative(url) {\n  return url && !/^\\s*([a-z][a-z0-9+.-]*:|\\/\\/)/im.test(url);\n}\n\n// Ensure URL does not present an XSS risk. Optional allowedSchemes may contain an array of\n// strings with permitted URL schemes, such as ['ftp', 'ftps']; otherwise accept http and https only.\nexport function sanitizeUrl(url, allowedSchemes) {\n  if (typeof url != 'string') {\n    return url;\n  }\n\n  // Strip control characters and whitespace. They are not valid URL characters anyway.\n  url = url.replace(/[^\\x20-\\x7E]/gmi, '').trim();\n\n  // Relative URLs are safe.\n  // Relative URL does not start with ':', abcd123: or '//'.\n  if (!/^([a-z][a-z0-9+.-]*:|\\/\\/)/i.test(url)) {\n    return url;\n  }\n\n  // Blob URLs are safe.\n  if (/^blob:http/.test(url)) {\n    return url;\n  }\n\n  // Absolute URL. Accept only safe schemes, or no scheme.\n  const schemes = Array.isArray(allowedSchemes) ? allowedSchemes.join('|') : 'http|https';\n  const re = new RegExp('^((' + schemes + '):|//)', 'i');\n  if (!re.test(url)) {\n    return null;\n  }\n\n  return url;\n}\n\n// Ensure URL is suitable for <img src=\"url\"> field: the URL must be a relative URL or\n// have http:, https:, blob: or data: scheme.\n// In case of data: scheme, the URL must start with a 'data:image/XXXX;base64,'.\nexport function sanitizeImageUrl(url) {\n  if (!url) {\n    return null;\n  }\n\n  const sanitizedUrl = sanitizeUrl(url);\n  if (sanitizedUrl) {\n    return sanitizedUrl;\n  }\n\n  // Is this a data: URL of an image?\n  if (/data:image\\/[a-z0-9.-]+;base64,/i.test(url.trim())) {\n    return url;\n  }\n\n  return null;\n}\n\n// Given message's received status, return name and color of a delivery indicator icon.\nexport function deliveryMarker(received) {\n  switch (received) {\n    case Tinode.MESSAGE_STATUS_SENDING:\n      return { name: 'access_time' }; // watch face\n    case Tinode.MESSAGE_STATUS_FAILED:\n      return { name: 'warning', color: 'danger-color' }; // yellow icon /!\\\n    case Tinode.MESSAGE_STATUS_SENT:\n      return { name: 'done' }; // checkmark\n    case Tinode.MESSAGE_STATUS_RECEIVED:\n      return { name: 'done_all' }; // double checkmark\n    case Tinode.MESSAGE_STATUS_READ:\n      return { name: 'done_all', color: 'blue' }; // blue double checkmark\n  }\n  return null;\n}\n\n// Wraps a promise to make it cancelable.\nexport function cancelablePromise(promise) {\n  let hasCanceled = false;\n\n  const wrappedPromise = new Promise((resolve, reject) => {\n    promise.then(\n      result => hasCanceled ? reject({isCanceled: true}) : resolve(result),\n      error => hasCanceled ? reject({isCanceled: true}) : reject(error)\n    );\n  });\n\n  return {\n    promise: wrappedPromise,\n    cancel( ) {\n      hasCanceled = true;\n    },\n  };\n};\n","import React from 'react';\n\nimport Tinode from 'tinode-sdk';\n\nimport { idToColorClass } from '../lib/strformat.js';\nimport { sanitizeImageUrl } from '../lib/utils.js';\n\nexport default class LetterTile extends React.PureComponent {\n  render() {\n    let avatar;\n    if (this.props.avatar === true) {\n      const isGroup = (Tinode.topicType(this.props.topic) == 'grp');\n      const iconColor = idToColorClass(this.props.topic, isGroup);\n      if (this.props.topic && this.props.title && this.props.title.trim()) {\n        const letter = this.props.title.trim().charAt(0);\n        const className = 'lettertile ' + iconColor;\n        avatar = (<div className={className}><div>{letter}</div></div>)\n      } else {\n        const className = 'material-icons ' + iconColor;\n        avatar = isGroup ?\n          <i className={className}>group</i> : <i className={className}>person</i>;\n      }\n    } else if (this.props.avatar) {\n      const url = this.props.tinode.authorizeURL(sanitizeImageUrl(this.props.avatar));\n      // If avatar image is invalid, show a placeholder.\n      avatar = <img className=\"avatar\" alt=\"avatar\" src={url}\n        onError={(e)=>{e.target.onerror = null; e.target.src=\"../img/broken_image.png\"}} />;\n    } else {\n      avatar = null;\n    }\n    return avatar;\n  }\n}\n","// Received/read indicator.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { shortDateFormat } from '../lib/strformat.js';\nimport { deliveryMarker } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  message_sending: {\n    id: 'message_sending',\n    defaultMessage: 'sending...',\n    description: 'Message being sent, in place of time stamp'\n  },\n  message_sending_failed: {\n    id: 'message_sending_failed',\n    defaultMessage: 'failed',\n    description: 'Failed to send message, in place of time stamp'\n  }\n});\n\nclass ReceivedMarker extends React.PureComponent {\n  render() {\n    const {formatMessage} = this.props.intl;\n    let timestamp;\n    if (this.props.received <= Tinode.MESSAGE_STATUS_SENDING) {\n      timestamp = formatMessage(messages.message_sending);\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_FAILED) {\n      timestamp = formatMessage(messages.message_sending_failed);\n    } else {\n      timestamp = shortDateFormat(this.props.timestamp, this.props.intl.locale);\n    }\n\n    const icon = deliveryMarker(this.props.received);\n    const marker = icon ? <i className={'material-icons small ' + icon.color}>{icon.name}</i> : null;\n\n    return (\n      <span className=\"timestamp\">\n        {timestamp}{'\\u00a0'}{marker}\n      </span>\n    );\n  }\n};\n\nexport default injectIntl(ReceivedMarker);\n","// The counter of unread messages in the topic.\nimport React from 'react';\n\nexport default class UnreadBadge extends React.PureComponent {\n  render() {\n    return (this.props.count > 0 ?\n      <span className=\"unread\">{this.props.count > 9 ? \"9+\" : this.props.count}</span>\n      : null);\n  }\n};\n","// Image with a placeholder which is replaced when the promise is resolved.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class LazyImage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      src: 'img/placeholder.png',\n      style: Object.assign({padding: '4px'}, this.props.style),\n      className: this.props.className,\n      alt: this.props.alt,\n      onClick: this.props.onClick,\n    };\n  }\n\n  componentDidMount() {\n    // whenDone is a wrapper around an actual promise to be able to cancel it.\n    this.props.whenDone\n      .promise\n      .then(data => this.setState({src: data.src, style: {...this.state.style, padding: 0}}))\n      .catch(() => this.setState({src: 'img/broken_image.png'}));\n  }\n\n  componentWillUnmount() {\n    this.props.whenDone.cancel();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.whenDone != this.props.whenDone) {\n      this.setState({src: 'img/placeholder.png', style: {...this.state.style, padding: '4px'}});\n      this.props.whenDone\n        .then(data => this.setState({src: data.src, style: {...this.state.style, padding: 0}}))\n        .catch(() => this.setState({src: 'img/broken_image.png'}));\n    }\n  }\n\n  render() {\n    return React.createElement('img', this.state);\n  }\n};\n","// File uload/download progress indicator with a cancel inside.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class FileProgress extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"uploader\">\n        <div><span style={{width: (this.props.progress * 100) + \"%\"}}></span></div>\n        {this.props.progress < 0.999 ?\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n            <i className=\"material-icons\">close</i> <FormattedMessage id=\"action_cancel\"\n              defaultMessage=\"cancel\" description=\"Call to action [cancel]\" />\n          </a>\n          :\n          <FormattedMessage id=\"upload_finishing\" defaultMessage=\"finishing...\"\n            description=\"Notification that upload is finishing\" />\n        }\n      </div>\n    );\n  }\n}\n","// Image view with progress bar and a cancel button.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\n\nexport default class UploadingImage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"inline-image\">\n        {React.createElement('img', this.props)}\n        <div className=\"rounded-container\">\n          <FileProgress progress={this.props.progress} onCancel={this.props.onCancelUpload} />\n        </div>\n      </div>\n    );\n  }\n};\n","// File and image helper functions.\nimport { MAX_INBAND_ATTACHMENT_SIZE, MAX_IMAGE_DIM } from '../config.js';\nimport { bytesToHumanSize } from './strformat.js'\n\n// Supported image MIME types and corresponding file extensions.\nexport const SUPPORTED_IMAGE_FORMATS = ['image/jpeg', 'image/gif', 'image/png', 'image/svg', 'image/svg+xml'];\nexport const MIME_EXTENSIONS         = ['jpg',        'gif',       'png',       'svg',       'svg'];\n\n// Get an URL from a theCard photo: either create a data: URL or return reference URL.\nexport function makeImageUrl(photo) {\n  if (photo && typeof photo == 'object') {\n    if (photo.data && photo.type) {\n      const mime = photo.type.startsWith('image/') ? photo.type : ('image/' + photo.type);\n      return 'data:' + mime + ';base64,' + photo.data;\n    }\n    return photo.ref;\n  }\n  return null;\n}\n\n// Calculate linear dimensions for scaling image down to fit under a certain size.\n// Returns an object which contains destination sizes, source sizes, and offsets\n// into source (when making square images).\nexport function fitImageSize(width, height, maxWidth, maxHeight, forceSquare) {\n  // Sanitize input\n  width = width | 0;\n  height = height | 0;\n  maxWidth = maxWidth | 0;\n  maxHeight = maxHeight | 0;\n\n  if (width <= 0 || height <= 0 || maxWidth <= 0 || maxHeight <= 0) {\n    return null;\n  }\n\n  if (forceSquare) {\n    maxWidth = maxHeight = Math.min(maxWidth, maxHeight);\n  }\n\n  const scale = Math.min(\n    Math.min(width, maxWidth) / width,\n    Math.min(height, maxHeight) / height\n  );\n\n  const size = {\n    dstWidth: (width * scale) | 0,\n    dstHeight: (height * scale) | 0,\n  };\n\n  if (forceSquare) {\n    // Also calculate parameters for making the image square.\n    size.dstWidth = size.dstHeight = Math.min(size.dstWidth, size.dstHeight);\n    size.srcWidth = size.srcHeight = Math.min(width, height);\n    size.xoffset = ((width - size.srcWidth) / 2) | 0;\n    size.yoffset = ((height - size.srcWidth) / 2) | 0;\n  } else {\n    size.xoffset = size.yoffset = 0;\n    size.srcWidth = width;\n    size.srcHeight = height;\n  }\n  return size;\n}\n\n// Ensure file's extension matches mime content type\nexport function fileNameForMime(fname, mime) {\n  const idx = SUPPORTED_IMAGE_FORMATS.indexOf(mime);\n  if (idx < 0 || !fname) {\n    // Unknown mime or empty name.\n    return fname;\n  }\n  const ext = MIME_EXTENSIONS[idx];\n\n  const at = fname.lastIndexOf('.');\n  if (at >= 0) {\n    fname = fname.substring(0, at);\n  }\n  return fname + '.' + ext;\n}\n\n// Scale uploaded image to fit under certain dimensions and byte size, optionally constraining to a square.\n// Returns a promise which is resolven on success or rejected on failure.\nexport function imageScaled(fileOrBlob, maxWidth, maxHeight, maxSize, forceSquare) {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    img.crossOrigin = 'Anonymous';\n    img.onerror = function(err) {\n      reject(new Error(\"Image format unrecognized\"));\n    }\n    img.onload = async function() {\n      // Once the image is loaded, the URL is no longer needed.\n      URL.revokeObjectURL(img.src);\n\n      // Calculate the desired image dimensions.\n      const dim = fitImageSize(this.width, this.height, maxWidth, maxHeight, forceSquare);\n      if (!dim) {\n        reject(new Error(\"Invalid image\"));\n        return;\n      }\n      let canvas = document.createElement('canvas');\n      canvas.width = dim.dstWidth;\n      canvas.height = dim.dstHeight;\n      let ctx = canvas.getContext('2d');\n      ctx.imageSmoothingEnabled = true;\n      ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n        0, 0, dim.dstWidth, dim.dstHeight);\n\n      const mime = SUPPORTED_IMAGE_FORMATS.includes(fileOrBlob.type) ? fileOrBlob.type : 'image/jpeg';\n      // Generate blob to check size of the image.\n      let blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n      if (!blob) {\n        reject(new Error(\"Unsupported image format\"));\n        return;\n      }\n\n      // Ensure the image is not too large. Shrink the image keeping the aspect ratio.\n      // Do nothing if maxsize is <= 0.\n      while (maxSize > 0 && blob.length > maxSize) {\n        dim.dstWidth = (dim.dstWidth * 0.70710678118) | 0;\n        dim.dstHeight = (dim.dstHeight * 0.70710678118) | 0;\n        canvas.width = dim.dstWidth;\n        canvas.height = dim.dstHeight;\n        ctx = canvas.getContext('2d');\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n          0, 0, dim.dstWidth, dim.dstHeight);\n        blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n      }\n\n      canvas = null;\n      resolve({mime: mime, blob: blob, width: dim.dstWidth, height: dim.dstHeight, name: fileNameForMime(fileOrBlob.name, mime)});\n    };\n    img.src = URL.createObjectURL(fileOrBlob);\n  });\n}\n\n// Scale and crop image according to specified dimensions.\n// The coordinates are in unscaled image pixels, i.e. cut the rectangle first then scale it.\n// returns a promise.\nexport function imageCrop(mime, objURL, left, top, width, height, scale) {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    img.crossOrigin = 'Anonymous';\n    img.onerror = (err) => {\n      reject(new Error(\"Image format unrecognized\"));\n    };\n    img.onload = () => {\n      // Once the image is loaded, the URL is no longer needed.\n      URL.revokeObjectURL(img.src);\n\n      let canvas = document.createElement('canvas');\n      canvas.width = width * scale;\n      canvas.height = height * scale;\n      let ctx = canvas.getContext('2d');\n      ctx.imageSmoothingEnabled = true;\n      ctx.drawImage(this, left, top, width, height, 0, 0, canvas.width, canvas.height);\n\n      mime = SUPPORTED_IMAGE_FORMATS.includes(mime) ? mime : 'image/jpeg';\n      // Generate blob to check size of the image.\n      canvas.toBlob((blob) => {\n        // Allow GC.\n        canvas = null;\n        if (blob) {\n          resolve({mime: mime, blob: blob, width: width, height: height});\n        } else {\n          reject(new Error(\"Unsupported image format\"));\n        }\n      }, mime);\n    };\n    img.src = objURL;\n  });\n}\n\n// Convert file to base64 string.\nexport function fileToBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onerror = (evt) => {\n      reject(reader.error);\n    };\n    reader.onload = () => {\n      resolve({mime: file.type, bits: reader.result.split(',')[1], name: file.name});\n    };\n    reader.readAsDataURL(file);\n  });\n}\n\n// Convert Blob to base64 string. Returns a promise resolved with the base64 string and mime.\nexport function blobToBase64(blob) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onerror = (evt) => {\n      reject(reader.error);\n    };\n    reader.onload = () => {\n      resolve({mime: blob.type, bits: reader.result.split(',')[1]});\n    };\n    reader.readAsDataURL(blob);\n  });\n}\n\n// File pasted from the clipboard. It's either an inline image or a file attachment.\nexport function filePasted(event, onImageSuccess, onAttachmentSuccess, onError) {\n  const items = (event.clipboardData || event.originalEvent.clipboardData || {}).items;\n  if (!Array.isArray(items)) {\n    return false;\n  }\n\n  for (let i in items) {\n    const item = items[i];\n    if (item.kind === 'file') {\n      const file = item.getAsFile();\n      if (!file) {\n        console.error(\"Failed to get file object from pasted file item\", item.kind, item.type);\n        onError(\"Failed to get file object from pasted file item\");\n        continue;\n      }\n      if (file.type && file.type.split('/')[0] == 'image') {\n        onImageSuccess(file);\n      } else {\n        onAttachmentSuccess(file);\n      }\n      // Indicate that the pasted data contains a file.\n      return true;\n    }\n  }\n  // No file found.\n  return false;\n}\n\n// Get mime type from data URL header.\nexport function getMimeType(header) {\n  var mime = /^data:(image\\/[-+a-z0-9.]+);base64/.exec(header);\n  return (mime && mime.length > 1) ? mime[1] : null;\n}\n\n// Given length of a binary object in bytes, calculate the length after\n// base64 encoding.\nexport function base64EncodedLen(n) {\n  return Math.floor((n + 2) / 3) * 4;\n}\n\n// Given length of a base64-encoded object, calculate decoded size of the\n// pbject in bytes.\nexport function base64DecodedLen(n) {\n  return Math.floor(n / 4) * 3;\n}\n\n// Re-encode string to standard base64 encoding with padding.\n// The string may be base64-URL encoded without the padding.\nexport function base64ReEncode(str) {\n  if (str) {\n    str = str.replace(/-/g, '+').replace(/_/g, '/');\n    try {\n      str = btoa(atob(str));\n    } catch(err) {\n      console.error(\"Failed to base64 re-encode string.\", err);\n      str = null;\n    }\n  }\n  return str;\n}\n\n// Convert a base64 encoded string with the provided mime type into a Blob.\nexport function base64ToBlob(str, mime) {\n  if (!str) {\n    return null;\n  }\n\n  try {\n    // Make blob.\n    const bin = atob(str);\n    const length = bin.length;\n    const buf = new ArrayBuffer(length);\n    const arr = new Uint8Array(buf);\n    for (let i = 0; i < length; i++) {\n      arr[i] = bin.charCodeAt(i);\n    }\n\n    return new Blob([buf], { type: mime });\n  } catch(err) {\n    console.error(\"Failed to convert base64 to blob: \", err);\n  }\n\n  return null;\n}\n","import React from 'react';\nimport { defineMessages } from 'react-intl';\n\nimport { Drafty } from 'tinode-sdk';\n\nimport LazyImage from '../widgets/lazy-image.jsx'\nimport UploadingImage from '../widgets/uploading-image.jsx'\n\nimport { IMAGE_THUMBNAIL_DIM, BROKEN_IMAGE_SIZE, REM_SIZE } from '../config.js';\nimport { base64ToBlob, blobToBase64, fitImageSize, imageScaled } from './blob-helpers.js';\nimport { idToColorClass, shortenFileName } from './strformat.js';\nimport { cancelablePromise, sanitizeImageUrl } from './utils.js';\n\nconst messages = defineMessages({\n  drafty_form: {\n    id: 'drafty_form',\n    defaultMessage: 'Form: ',\n    description: 'Comment for form in drafty preview'\n  },\n  drafty_attachment: {\n    id: 'drafty_attachment',\n    defaultMessage: 'Attachment',\n    description: 'Comment for attachment in drafty preview'\n  },\n  drafty_image: {\n    id: 'drafty_image',\n    defaultMessage: 'Picture',\n    description: 'Comment for embedded images in drafty preview'\n  }\n});\n\n// Size the already scaled image.\nfunction handleImageData(el, data, attr) {\n  if (!data) {\n    attr.src = 'img/broken_image.png';\n    attr.style = {\n      width: IMAGE_THUMBNAIL_DIM + 'px',\n      height: IMAGE_THUMBNAIL_DIM + 'px',\n    };\n    return el;\n  }\n\n  attr.className = 'inline-image';\n  const dim = fitImageSize(data.width, data.height,\n    this.viewportWidth > 0 ? Math.min(this.viewportWidth - REM_SIZE * 6.5, REM_SIZE * 34.5) :\n      REM_SIZE * 34.5, REM_SIZE * 24, false) ||\n      {dstWidth: BROKEN_IMAGE_SIZE, dstHeight: BROKEN_IMAGE_SIZE};\n  attr.style = {\n    width: dim.dstWidth + 'px',\n    height: dim.dstHeight + 'px',\n    // Looks like a Chrome bug: broken image does not respect 'width' and 'height'.\n    minWidth: dim.dstWidth + 'px',\n    minHeight: dim.dstHeight + 'px'\n  };\n  if (!Drafty.isProcessing(data)) {\n    attr.src = this.authorizeURL(sanitizeImageUrl(attr.src));\n    attr.alt = data.name;\n    if (attr.src) {\n      if (Math.max(data.width || 0, data.height || 0) > IMAGE_THUMBNAIL_DIM) {\n        // Allow previews for large enough images.\n        attr.onClick = this.onImagePreview;\n        attr.className += ' image-clickable';\n      }\n      attr.loading = 'lazy';\n    } else {\n      attr.src = 'img/broken_image.png';\n    }\n  } else {\n    // Use custom element instead of <img>.\n    el = UploadingImage;\n  }\n\n  return el;\n}\n\nfunction quotedImage(data) {\n  let promise;\n  // Get the blob from the image data.\n  if (data.val) {\n    const blob = base64ToBlob(data.val, data.mime);\n    promise = blob ? Promise.resolve(blob) : Prmise.reject(new Error(\"Invalid image\"));\n  } else {\n    promise = fetch(this.authorizeURL(sanitizeImageUrl(data.ref))).then(evt => {\n      if (evt.ok) {\n        return evt.blob();\n      } else {\n        throw new Error(`Image fetch unsuccessful: ${evt.status} ${evt.statusText}`);\n      }\n    });\n  }\n\n  // Scale the blob.\n  return promise\n    .then(blob => {\n      return imageScaled(blob, IMAGE_THUMBNAIL_DIM, IMAGE_THUMBNAIL_DIM, -1, true)\n    }).then(scaled => {\n      data.mime = scaled.mime;\n      data.size = scaled.blob.size;\n      data.width = scaled.width;\n      data.height = scaled.height;\n      delete data.ref;\n      // Keeping the original file name, if provided: ex.data.name;\n\n      return blobToBase64(scaled.blob);\n    }).then(b64 => {\n      data.val = b64.bits;\n      return data;\n    }).catch(err => {\n      delete data.val;\n      delete data.name;\n      data.width = IMAGE_THUMBNAIL_DIM;\n      data.height = IMAGE_THUMBNAIL_DIM;\n      data.maxWidth = IMAGE_THUMBNAIL_DIM;\n      data.maxHeight = IMAGE_THUMBNAIL_DIM;\n      // Rethrow.\n      throw err;\n    });\n}\n\n// The main Drafty formatter: converts Drafty elements into React classes. 'this' is set by the caller.\n// 'this' must contain:\n//    viewportWidth: this.props.viewportWidth;\n//    authorizeURL: this.props.tinode.authorizeURL\n//    onImagePreview: this.handleImagePreview\n//    onFormButtonClick: this.handleFormButtonClick\n//    onQuoteClick: this.handleQuoteClick (optional)\nexport function fullFormatter(style, data, values, key) {\n  if (!style) {\n    // Unformatted.\n    return values;\n  }\n\n  if (style == 'HD') {\n    // Hidden.\n    return null;\n  }\n\n  let el = Drafty.tagName(style);\n  const attr = Drafty.attrValue(style, data) || {};\n  attr.key = key;\n  switch (style) {\n    case 'HL':\n      // Highlighted text. Assign class name.\n      attr.className = 'highlight';\n      break;\n    case 'IM':\n      // Additional processing for images\n      el = handleImageData.call(this, el, data, attr);\n      // Image element cannot have content.\n      values = null;\n      break;\n    case 'BN':\n      // Button\n      attr.onClick = this.onFormButtonClick;\n      let inner = React.Children.map(values, (child) => {\n        return typeof child == 'string' ? child : undefined;\n      });\n      if (!inner || inner.length == 0) {\n        inner = [attr.name]\n      }\n      // Get text which will be sent back when the button is clicked.\n      attr['data-title'] = inner.join('');\n      break;\n    case 'MN':\n      // Mention\n      attr.className = 'mention'\n      if (data) {\n        attr.className += ' ' + idToColorClass(data.val, false, true);\n      }\n      break;\n    case 'FM':\n      // Form\n      attr.className = 'bot-form';\n      break;\n    case 'RW':\n      // Form element formatting is dependent on element content.\n      break;\n    case 'QQ':\n      // Quote/citation.\n      attr.className = 'reply-quote'\n      attr.onClick = this.onQuoteClick;\n      break;\n    default:\n      if (el == '_UNKN') {\n        // Unknown element.\n        el = React.Fragment;\n        values = [<i className=\"material-icons gray\">extension</i>, ' '].concat(values || []);\n      }\n      break;\n  }\n  if (!el) {\n    return values;\n  }\n  return React.createElement(el, attr, values);\n};\n\n// Converts Drafty object into a one-line preview. 'this' is set by the caller.\n// 'this' must contain:\n//    formatMessage: this.props.intl.formatMessage\n//    messages: formatjs messages defined with defineMessages.\nexport function previewFormatter(style, data, values, key) {\n  if (!style) {\n    // Unformatted.\n    return values;\n  }\n\n  if (style == 'HD') {\n    // Hidden.\n    return null;\n  }\n\n  let el = Drafty.tagName(style);\n  const attr = { key: key };\n  switch (style) {\n    case 'BR':\n      // Replace new line with a space.\n      el = React.Fragment;\n      values = [' '];\n      break;\n    case 'HL':\n      // Make highlight less prominent in preview.\n      attr.className = 'highlight preview';\n      break;\n    case 'LN':\n    case 'MN':\n      // Disable links in previews.\n      el = 'span';\n      break;\n    case 'IM':\n      // Replace image with '[icon] Image'.\n      el = React.Fragment;\n      values = [<i key=\"im\" className=\"material-icons\">photo</i>, this.formatMessage(messages.drafty_image)];\n      break;\n    case 'BN':\n      el = 'span';\n      attr.className = 'flat-button faux';\n      break;\n    case 'FM':\n      el = React.Fragment;\n      values = [<i key=\"fm\" className=\"material-icons\">dashboard</i>,\n        this.formatMessage(messages.drafty_form)].concat(' ', values || []);\n      break;\n    case 'RW':\n      el = React.Fragment;\n      break;\n    case 'EX':\n      if (data) {\n        if (data.mime == 'application/json') {\n          // Ignore JSON attachments: they are form response payloads.\n          return null;\n        }\n        // Clear payload.\n        delete data.val;\n        delete data.ref;\n      }\n      el = React.Fragment;\n      values = [<i key=\"ex\" className=\"material-icons\">attachment</i>, this.formatMessage(messages.drafty_attachment)];\n      break;\n    default:\n      if (el == '_UNKN') {\n        el = React.Fragment;\n        values = [<i key=\"unkn\" className=\"material-icons\">extension</i>, ' '].concat(values || []);\n      }\n      break;\n  }\n  if (!el) {\n    return values;\n  }\n  return React.createElement(el, attr, values);\n};\n\n// Converts Drafty object into a quoted reply. 'this' is set by the caller.\nfunction inlineImageAttr(attr, data) {\n  attr.style = {\n    width: IMAGE_THUMBNAIL_DIM + 'px',\n    height: IMAGE_THUMBNAIL_DIM + 'px',\n    maxWidth: IMAGE_THUMBNAIL_DIM + 'px',\n    maxHeight: IMAGE_THUMBNAIL_DIM + 'px',\n  }\n  attr.className = 'inline-image';\n  attr.alt = this.formatMessage(messages.drafty_image);\n  if (!data) {\n    attr.src = 'img/broken_image.png';\n  }\n  attr.title = attr.alt;\n  return attr;\n}\n\n// Displays a portion of Drafty within 'QQ' quotes. 'this' is set by the caller.\n// 'this' must contain:\n//    formatMessage: this.props.intl.formatMessage\n//    messages: formatjs messages defined with defineMessages.\n//    authorizeURL: this.props.tinode.authorizeURL\n//    onQuoteClick: this.handleQuoteClick (optional)\nexport function quoteFormatter(style, data, values, key) {\n  if (['BR', 'EX', 'IM', 'MN', 'QQ'].includes(style)) {\n    let el = Drafty.tagName(style);\n    let attr = Drafty.attrValue(style, data) || {};\n    attr.key = key;\n    switch(style) {\n      case 'IM':\n        attr = inlineImageAttr.call(this, attr, data);\n        values = [React.createElement('img', attr, null), ' ', attr.alt];\n        el = React.Fragment;\n        // Fragment attributes.\n        attr = {key: key};\n        break;\n      case 'MN':\n        el = 'span';\n        attr.className = 'mention'\n        if (data) {\n          attr.className += ' ' + idToColorClass(data.val, false, true);\n        }\n        break;\n      case 'QQ':\n        attr.className = 'reply-quote';\n        attr.onClick = this.onQuoteClick;\n        break;\n      case 'EX':\n        let fname;\n        if (data) {\n          if (data.mime == 'application/json') {\n            // Ignore JSON attachments: they are form response payloads.\n            return null;\n          }\n          fname = data.name;\n          // Clear payload.\n          delete data.val;\n          delete data.ref;\n        }\n        el = React.Fragment;\n        values = [<i key=\"ex\" className=\"material-icons\">attachment</i>,\n          shortenFileName(fname, 16) || this.formatMessage(messages.drafty_attachment)];\n        break;\n    }\n    return React.createElement(el, attr, values);\n  }\n  return previewFormatter.call(this, style, data, values, key);\n}\n\n// Create image thumbnail suitable for inclusion in a quote.\nfunction quoteImage(data) {\n  let promise;\n  // Get the blob from the image data.\n  if (data.val) {\n    const blob = base64ToBlob(data.val, data.mime);\n    promise = blob ? Promise.resolve(blob) : Promise.reject(new Error(\"Invalid image\"));\n  } else {\n    promise = fetch(this.authorizeURL(sanitizeImageUrl(data.ref))).then(evt => {\n      if (evt.ok) {\n        return evt.blob();\n      } else {\n        throw new Error(`Image fetch unsuccessful: ${evt.status} ${evt.statusText}`);\n      }\n    });\n  }\n\n  // Scale the blob.\n  return promise\n    .then(blob => {\n      // Cut the square from the center of the image and shrink it.\n      return imageScaled(blob, IMAGE_THUMBNAIL_DIM, IMAGE_THUMBNAIL_DIM, -1, true)\n    }).then(scaled => {\n      data.mime = scaled.mime;\n      data.size = scaled.blob.size;\n      data.width = scaled.width;\n      data.height = scaled.height;\n      delete data.ref;\n      // Keeping the original file name, if provided: ex.data.name;\n\n      data.src = URL.createObjectURL(scaled.blob);\n      return blobToBase64(scaled.blob);\n    }).then(b64 => {\n      data.val = b64.bits;\n      return data;\n    }).catch(err => {\n      delete data.val;\n      delete data.src;\n      data.width = IMAGE_THUMBNAIL_DIM;\n      data.height = IMAGE_THUMBNAIL_DIM;\n      // Rethrow.\n      throw err;\n    });\n}\n\n// Create a preview of a reply.\nexport function replyFormatter(style, data, values, key) {\n  if (style != 'IM') {\n    return quoteFormatter.call(this, style, data, values, key);\n  }\n  const attr = inlineImageAttr.call(this, {key: key}, data);\n  attr.whenDone = cancelablePromise(quoteImage.call(this, data));\n  values = [React.createElement(LazyImage, attr, null), ' ', attr.alt];\n  return React.createElement(React.Fragment, {key: key}, values);\n}\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport ContactBadges from './contact-badges.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\nimport UnreadBadge from './unread-badge.jsx';\n\nimport { Drafty } from 'tinode-sdk';\n\nimport { previewFormatter } from '../lib/formatters.js';\nimport { deliveryMarker } from '../lib/utils.js';\n\nclass Contact extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.props.onSelected) {\n      // Index this.props.index is used by GroupManager.\n      this.props.onSelected(this.props.item, this.props.index);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.props.item, y: e.pageY, x: e.pageX });\n  }\n\n  render() {\n    let title = this.props.title;\n    if (!title) {\n      title = <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n        description=\"Title shown when the topic has no name\" /></i>;\n    } else if (title.length > 30) {\n      // FIXME: this is probably wrong for RTL languages.\n      title = title.substring(0, 28) + '…';\n    }\n    const online = this.props.now ? 'online' : 'offline';\n    const avatar = this.props.avatar ? this.props.avatar : true;\n    const badges = this.props.badges ? this.props.badges.slice() : [];\n    const icon_badges = [];\n    if (this.props.isVerified) {\n      icon_badges.push({icon: 'verified', color: 'verified-color'});\n    }\n    if (this.props.isStaff) {\n      icon_badges.push({icon: 'staff', color: 'staff-color'});\n    }\n    if (this.props.isDangerous) {\n      icon_badges.push({icon: 'dangerous', color: 'danger-color'});\n    }\n    if (this.props.acs) {\n      if (this.props.showMode) {\n        badges.push({name: this.props.acs.getMode(), key: 'mode'});\n      }\n      if (this.props.acs.isMuted()) {\n        icon_badges.push({icon: 'muted'});\n      }\n      if (!this.props.acs.isJoiner()) {\n        icon_badges.push({icon: 'banned'});\n      }\n    }\n\n    const subtitle = this.props.preview ?\n      (typeof this.props.preview == 'string' ? this.props.preview :\n        Drafty.isValid(this.props.preview) ?\n        React.createElement(React.Fragment, null, Drafty.format(this.props.preview, previewFormatter,\n          {formatMessage: this.props.intl.formatMessage})) :\n        <><i className=\"material-icons gray\">warning_amber</i> <i className=\"gray\">\n          <FormattedMessage id=\"invalid_content\"\n            defaultMessage=\"invalid content\" description=\"Shown when the message is unreadable\" /></i>\n        </>\n      ) :\n      this.props.comment;\n\n    const icon = deliveryMarker(this.props.received);\n    const marker = icon ? <i className={'material-icons small space-right' +\n      (icon.color ? ' ' + icon.color : '')}>{icon.name}</i> : null;\n\n    return (\n      <li className={!this.props.showCheckmark && this.props.selected ? 'selected' : null} onClick={this.handleClick}>\n        <div className=\"avatar-box\">\n          <LetterTile\n            tinode={this.props.tinode}\n            avatar={avatar}\n            title={this.props.title}\n            topic={this.props.item} />\n          {this.props.showOnline ? <span className={online} /> :\n            (this.props.showCheckmark && this.props.selected ?\n            <i className=\"checkmark material-icons\">check_circle</i>\n            : null)}\n        </div>\n        <div className=\"text-box\">\n          <div><span className=\"contact-title\">{title}</span>\n            {this.props.isChannel ? <img src=\"/img/channel.png\" className=\"channel\" alt=\"channel\" /> : null}\n            <ContactBadges badges={icon_badges} /><UnreadBadge count={this.props.unread} />\n          </div>\n          {this.props.showMode ?\n            <span><ContactBadges badges={badges} /></span> :\n            this.props.small ? null : <div className=\"contact-comment\">{marker}<span>{subtitle || '\\u00A0'}</span></div>}\n        </div>\n        {this.props.showContextMenu ?\n          <span className=\"menuTrigger\">\n            <a href=\"#\" onClick={this.handleContextClick}>\n              <i className=\"material-icons\">expand_more</i>\n            </a>\n          </span> : null}\n      </li>\n    );\n  }\n};\n\nexport default injectIntl(Contact);\n","// A panel included into a list of contacts with an action text.\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\n\nclass ContactAction extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.onAction(this.props.action);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <li onClick={this.handleClick} className=\"action\">\n        <div className=\"action-text\">{formatMessage(this.props.title, this.props.values)}</div>\n      </li>\n    );\n  }\n};\n\nexport default injectIntl(ContactAction);\n","// ContactList: component for showing a list of contacts,\n// such as a list of group members in a group chat.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { Drafty } from 'tinode-sdk';\nimport Tinode from 'tinode-sdk';\n\nimport Contact from './contact.jsx';\nimport ContactAction from './contact-action.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nimport { MESSAGE_PREVIEW_LENGTH } from '../config.js';\n\nconst messages = defineMessages({\n  badge_you: {\n    id: 'badge_you',\n    defaultMessage: 'you',\n    description: 'Badge for indicating the current user'\n  },\n  badge_owner: {\n    id: 'badge_owner',\n    defaultMessage: 'owner',\n    description: 'Badge for indicating the owner'\n  }\n});\n\nclass ContactList extends React.Component {\n  render() {\n    const { formatMessage } = this.props.intl;\n    const showCheckmark = Array.isArray(this.props.topicSelected);\n    const contactNodes = [];\n    let contactsCount = 0;\n    if (this.props.contacts && this.props.contacts.length > 0) {\n      this.props.contacts.map((c) => {\n        if (c.action) {\n          // Action item\n          contactNodes.push(\n            <ContactAction\n              title={c.title} action={c.action} values={c.values}\n              key={c.action}\n              onAction={this.props.onAction}\n              />);\n        } else {\n          // Normal contact\n          const key = this.props.showMode ? c.user : (c.topic || c.user);\n          // If filter function is provided, filter out the items\n          // which don't satisfy the condition.\n          if (this.props.filterFunc && this.props.filter) {\n            const filterOn = [key];\n            if (c.private && c.private.comment) {\n              filterOn.push(('' + c.private.comment).toLowerCase());\n            }\n            if (c.public && c.public.fn) {\n              filterOn.push(('' + c.public.fn).toLowerCase());\n            }\n            if (!this.props.filterFunc(this.props.filter, filterOn)) {\n              return;\n            }\n          }\n\n          const isChannel = Tinode.isChannelTopicName(key);\n          const selected = showCheckmark ?\n            (this.props.topicSelected.indexOf(key) > -1) :\n            (this.props.topicSelected === key);\n          const badges = [];\n          if (this.props.showMode) {\n            if (key == this.props.myUserId) {\n              badges.push({name: formatMessage(messages.badge_you), color: 'green'});\n            }\n            if (c.acs && c.acs.isOwner()) {\n              badges.push({name: formatMessage(messages.badge_owner), color: 'blue'});\n            }\n          }\n\n          const comment = Array.isArray(c.private) ?\n            c.private.join(',') : (c.private ? c.private.comment : null);\n          let preview;\n          let forwarded;\n          let deliveryStatus;\n          if (!this.props.showMode && c.latestMessage) {\n            const msg = c.latestMessage(true);\n            if (msg) {\n              forwarded = msg.head ? msg.head.forwarded : null;\n              deliveryStatus = msg._status || c.msgStatus(msg, true);\n              preview = typeof msg.content == 'string' ?\n                msg.content.substr(0, MESSAGE_PREVIEW_LENGTH) :\n                Drafty.preview(msg.content, MESSAGE_PREVIEW_LENGTH, undefined, forwarded != null);\n            }\n          }\n          contactNodes.push(\n            <Contact\n              tinode={this.props.tinode}\n              title={c.public ? c.public.fn : null}\n              avatar={makeImageUrl(c.public ? c.public.photo : null)}\n              comment={comment}\n              preview={preview}\n              forwarded={forwarded}\n              received={deliveryStatus}\n              unread={this.props.showUnread ? c.unread : 0}\n              now={c.online && this.props.connected}\n              acs={c.acs}\n              showMode={this.props.showMode}\n              badges={badges}\n              showCheckmark={showCheckmark}\n              selected={selected}\n              showOnline={this.props.showOnline && !isChannel}\n              isChannel={isChannel}\n              onSelected={this.props.onTopicSelected}\n              showContextMenu={this.props.showContextMenu}\n              isVerified={c.trusted && c.trusted.verified}\n              isStaff={c.trusted && c.trusted.staff}\n              isDangerous={c.trusted && c.trusted.danger}\n              item={key}\n              index={contactNodes.length}\n              key={key} />\n          );\n          contactsCount ++;\n        }\n      }, this);\n    }\n\n    return (\n      <div className={this.props.noScroll ? null : \"scrollable-panel\"}>\n        {contactsCount == 0 ?\n          <div className=\"center-medium-text\"\n            dangerouslySetInnerHTML={{__html: this.props.emptyListMessage}} />\n          :\n          null\n        }\n        {contactNodes.length > 0 ?\n          <ul className=\"contact-box\">\n            {contactNodes}\n          </ul>\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ContactList);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nexport default class SearchContacts extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      edited: false,\n      search: ''\n    };\n\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  componentWillUnmount() {\n    if (this.state.edited) {\n      this.setState({search: '', edited: false});\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n  }\n\n  handleSearchChange(e) {\n    this.setState({search: e.target.value});\n  }\n\n  handleSearch(e) {\n    e.preventDefault();\n    var query = this.state.search.trim();\n    this.setState({edited: (query.length > 0)});\n    this.props.onSearchContacts(query.length > 0 ? query : Tinode.DEL_CHAR);\n  }\n\n  handleClear(e) {\n    e.preventDefault();\n    if (this.state.edited) {\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n    this.setState({search: '', edited: false});\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Enter') {\n      this.handleSearch(e);\n    } else if (e.key === 'Escape') {\n      this.handleClear();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <i className=\"material-icons search\">search</i>\n          <FormattedMessage id=\"search_placeholder\" defaultMessage=\"List like email:alice@example.com, tel:17025550003...\"\n            description=\"Placeholder in contacts search field\">{\n            (search_placeholder) => <input className=\"search\" type=\"text\"\n              placeholder={search_placeholder}\n              value={this.state.search} onChange={this.handleSearchChange}\n              onKeyDown={this.handleKeyDown} required autoFocus />\n          }</FormattedMessage>\n          {this.state.search ?\n            <a href=\"#\" onClick={this.handleClear}><i className=\"material-icons\">highlight_off</i></a>\n            :\n            <span><i className=\"material-icons\">&nbsp;</i></span>}\n        </div>\n      </div>\n    );\n  }\n};\n","// Forward Menu: message forwarding popup/dropdown menu.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport ContactList from './contact-list.jsx';\nimport SearchContacts from './search-contacts.jsx';\n\nexport default class ForwardDialog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      query: null\n    };\n\n    this.handleEscapeKey = this.handleEscapeKey.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.onInitFind();\n  }\n\n  handleEscapeKey(e) {\n    if (e.keyCode === 27) {\n      // Not forwarding the message.\n      this.props.hide(false);\n    }\n  }\n\n  handleClose(e) {\n    e.preventDefault();\n    this.props.hide(false);\n  }\n\n  handleSearchContacts(query) {\n    this.setState({ query: Tinode.isNullValue(query) ? null : query });\n    this.props.onSearchContacts(query);\n  }\n\n  handleContactSelected(uid) {\n    this.props.onTopicSelected(uid);\n    this.props.hide(true);\n  }\n\n  render() {\n    let contacts = this.state.query != null ? this.props.searchResults : this.props.contacts;\n    // Filter out contacts without a 'W' permission.\n    contacts = contacts.filter((c) => { return c.acs.isJoiner() && c.acs.isWriter(); });\n\n    return (\n      <div className=\"alert-container\">\n        <div className=\"forward-dialog\">\n          <div className=\"title with-control\">\n            <div><FormattedMessage id=\"forward_to\" defaultMessage=\"Forward to\"\n              desription=\"Title of the contact selector dialog when forwarding a message\" /></div>\n            <div><a href=\"#\" onClick={this.handleClose}><i className=\"material-icons\">close</i></a></div>\n          </div>\n          <SearchContacts\n            onSearchContacts={this.handleSearchContacts} />\n          <ContactList\n            tinode={this.props.tinode}\n            contacts={contacts}\n            myUserId={this.props.myUserId}\n            emptyListMessage={null}\n            showOnline={false}\n            showUnread={false}\n            showContextMenu={false}\n            onTopicSelected={this.handleContactSelected} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class LoadSpinner extends React.PureComponent {\n  render() {\n    const className = 'load-spinner-box' + (this.props.large ? ' large' : '')\n      + (this.props.clear ? ' clear' : '') + (this.props.centered ? ' centered' : '');\n    return (this.props.show ?\n      <div className={className}><div className=\"loader-spinner\"></div></div> : null);\n  }\n}\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\nimport LoadSpinner from './load-spinner.jsx';\n\nimport { sanitizeImageUrl } from '../lib/utils.js';\n\nimport { AVATAR_SIZE } from '../config.js';\n\nexport default class AvatarUpload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      source: props.avatar\n    };\n\n    this.handleFileReceived = this.handleFileReceived.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.avatar != prevProps.avatar) {\n      this.setState({source: this.props.avatar});\n    }\n  }\n\n  handleFileReceived(e) {\n    const image = e.target.files[0];\n    this.props.onImageUpdated(image.type, URL.createObjectURL(image), image.name);\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  render() {\n    // Randomize id value in case more than one AvatarUpload is shown\n    // at the same time.\n    const randId = 'file-input-avatar-' + (Math.random() + '').substr(2);\n    const className = 'avatar-upload' + (this.props.readOnly ? ' read-only' : '');\n    return (\n      <div className={className}>\n        {this.props.readOnly || !this.state.source ?\n          null :\n          <a href=\"#\" className=\"clear-avatar\" onClick={(e) => {e.preventDefault(); this.props.onImageUpdated();}}>\n            <i className=\"material-icons\">clear</i>\n          </a>}\n        {this.state.source ?\n          <img src={this.props.tinode.authorizeURL(sanitizeImageUrl(this.state.source))} className=\"preview\" /> :\n          this.props.readOnly && this.props.uid ?\n            <div className=\"avatar-box\">\n              <LetterTile\n                tinode={this.props.tinode}\n                avatar={true}\n                topic={this.props.uid}\n                title={this.props.title} />\n            </div>\n            :\n            <div className=\"blank\">{AVATAR_SIZE}&times;{AVATAR_SIZE}</div>}\n        {this.props.readOnly ? null :\n          <input type=\"file\" id={randId} className=\"inputfile hidden\"\n            accept=\"image/*\" onChange={this.handleFileReceived} />}\n        {this.props.readOnly ? null :\n        <label htmlFor={randId} className=\"round\">\n          <i className=\"material-icons\">file_upload</i>\n        </label>}\n        <LoadSpinner show={this.props.uploading} large={true} clear={true} centered={true} />\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nconst icon_mapping = {'staff': 'verified_user'};\n\nconst messages = defineMessages({\n  badge_verified: {\n    id: 'badge_verified',\n    defaultMessage: 'Verified/official',\n    description: 'Explanation of a verified account or topic badge'\n  },\n  badge_staff: {\n    id: 'badge_staff',\n    defaultMessage: 'Staff-managed',\n    description: 'Explanation of a staff-managed account or topic badge'\n  },\n  badge_danger: {\n    id: 'badge_danger',\n    defaultMessage: 'Untrustworthy',\n    description: 'Suspicious or untrustworthy account or topic badge'\n  },\n});\n\n\n/* Trusted badges with labels: verified, staff, danger */\nclass BadgeList extends React.PureComponent {\n  render() {\n    const {formatMessage} = this.props.intl;\n    let badges = null;\n    if (this.props.trustedBadges && this.props.trustedBadges.length > 0) {\n      badges = [];\n      this.props.trustedBadges.map((b) => {\n        const comment = formatMessage(messages['badge_' + b]);\n        const style = 'material-icons ' + b + '-color';\n        badges.push(<div className=\"trusted-badge\" key={b}><i className={style}>{icon_mapping[b] || b}</i> {comment}</div>);\n      });\n      return <>{badges}</>;\n    }\n    return null;\n  }\n};\n\nexport default injectIntl(BadgeList);\n","import React from 'react';\n\n/* BEGIN CheckBox: styled checkbox */\nexport default class CheckBox extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange() {\n    this.props.onChange(this.props.name, !this.props.checked);\n  }\n\n  render() {\n    return (\n      this.props.onChange ? (\n        this.props.checked === true ?\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box</i> :\n        this.props.checked === false ?\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box_outline_blank</i> :\n          <i className=\"material-icons lt-blue\">indeterminate_check_box</i>\n        ) : (\n          this.props.checked ?\n            <i className=\"material-icons\">check_box</i> :\n            <i className=\"material-icons\">check_box_outline_blank</i>\n        )\n    );\n  }\n}\n/* END CheckBox */\n","// The X menu to be displayed in title bars.\nimport React from 'react';\n\nexport default class MenuCancel extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n        <i className=\"material-icons\">close</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nimport MenuCancel from './menu-cancel.jsx';\n\nexport default class ErrorPanel extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      show: false,\n    };\n\n    this.hide = this.hide.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.level !== this.props.level) {\n      this.setState({\n        show: !(!this.props.level)\n      });\n    }\n  }\n\n  hide() {\n    this.setState({show: false});\n    if (this.props.onClearError) {\n      this.props.onClearError();\n    }\n  }\n\n  render() {\n    const icons = {err: 'error', warn: 'warning', info: 'info'}\n    const level = icons[this.props.level] || '';\n    const className = 'info-box ' + level;\n    return (\n      <div className={className}>\n        <div className=\"icon\"><i className=\"material-icons\">{level}</i></div>\n        <span>\n          {this.props.text}\n          {this.props.action ?\n            <>\n              &#32;<a href=\"#\"\n                style={{ whiteSpace: 'nowrap' }}\n                onClick={(e) => {e.preventDefault(); this.props.action();}}>\n                {this.props.actionText}\n              </a>\n            </>\n          : null}\n        </span>\n        <div className=\"cancel\"><MenuCancel onCancel={this.hide} /></div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\n\nexport default class Chip extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel(this.props.topic, this.props.index);\n  }\n\n  render() {\n    const title = this.props.title || this.props.topic;\n    const className = this.props.invalid ? 'chip invalid' : 'chip';\n    return (\n      <div className={className}>\n        {this.props.noAvatar ?\n          <span className=\"spacer\" /> :\n          <div className=\"avatar-box\">\n            <LetterTile\n              tinode={this.props.tinode}\n              avatar={this.props.avatar || true}\n              topic={this.props.topic}\n              title={this.props.title} />\n          </div>\n        }\n        <span>{title}</span>\n        {this.props.onCancel && !this.props.required ?\n          <a href=\"#\" onClick={this.handleCancel} >&times;</a>\n          : <span className=\"spacer\" />}\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport Chip from './chip.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n/* BEGIN ChipInput: group membership widget */\nexport default class ChipInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = ChipInput.deriveStateFromProps(props);\n    this.state.input = '';\n    this.state.focused = false;\n\n    this.handleTextInput = this.handleTextInput.bind(this);\n    this.removeChipAt = this.removeChipAt.bind(this);\n    this.handleChipCancel = this.handleChipCancel.bind(this);\n    this.handleFocusGained = this.handleFocusGained.bind(this);\n    this.handleFocusLost = this.handleFocusLost.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  static deriveStateFromProps(props) {\n    return {\n      placeholder: props.chips ? '' : props.prompt,\n      sortedChips: ChipInput.sortChips(props.chips, props.staticMembers),\n      chipIndex: ChipInput.indexChips(props.chips)\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chips != this.props.chips ||\n      prevProps.staticMembers != this.props.staticMembers ||\n      prevProps.prompt != this.props.prompt) {\n      this.setState(ChipInput.deriveStateFromProps(this.props));\n    }\n    if (!prevState || this.props.chips.length > prevState.sortedChips.length) {\n      this.setState({input: ''});\n    }\n  }\n\n  // Map chip index to user name\n  static indexChips(chips) {\n    const index = {};\n    let count = 0;\n    chips.map((item) => {\n      index[item.user] = count;\n      count ++;\n    });\n    return index;\n  }\n\n  // Have non-removable chips appear before all other chips.\n  static sortChips(chips, keep) {\n    const required = [];\n    const normal = [];\n    chips.map((item) => {\n      if (keep && keep.includes(item.user)) {\n        required.push(item);\n      } else {\n        normal.push(item);\n      }\n    });\n    return required.concat(normal);\n  }\n\n  handleTextInput(e) {\n    this.setState({input: e.target.value});\n    if (this.props.filterFunc) {\n      this.props.filterFunc(e.target.value);\n    }\n  }\n\n  removeChipAt(idx) {\n    const removed = this.state.sortedChips[idx];\n    this.props.onChipRemoved(removed.user, this.state.chipIndex[removed.user]);\n  }\n\n  handleChipCancel(item, idx) {\n    this.removeChipAt(idx);\n  }\n\n  handleFocusGained() {\n    this.setState({focused: true});\n  }\n\n  handleFocusLost() {\n    this.setState({focused: false});\n    if (this.props.onFocusLost) {\n      this.props.onFocusLost(this.state.input);\n    }\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Backspace') {\n      if (this.state.input.length == 0 && this.state.sortedChips.length > 0) {\n        const at = this.state.sortedChips.length - 1;\n        if (this.state.sortedChips[at].user !== this.props.staticMembers) {\n          this.removeChipAt(at);\n        }\n      }\n    } else if (e.key === 'Enter') {\n      if (this.props.onEnter) {\n        this.props.onEnter(this.state.input);\n      }\n    } else if (e.key === 'Escape') {\n      if (this.props.onCancel) {\n        this.props.onCancel();\n      }\n    }\n  }\n\n  render() {\n    const chips = [];\n    let count = 0;\n    const staticMembers = this.props.staticMembers || [];\n    this.state.sortedChips.map((item) => {\n      chips.push(\n        <Chip\n          tinode={this.props.tinode}\n          onCancel={this.handleChipCancel}\n          avatar={makeImageUrl(item.public ? item.public.photo : null)}\n          title={item.public ? item.public.fn : undefined}\n          noAvatar={this.props.avatarDisabled}\n          topic={item.user}\n          required={staticMembers.includes(item.user)}\n          invalid={item.invalid}\n          index={count}\n          key={item.user} />\n      );\n      count++;\n    });\n    const className = \"chip-input\" + (this.state.focused ? ' focused' : '');\n    const autoFocus = !(this.props.tabIndex > 0);\n    return (\n      <div className={className}>\n        {chips}\n        <input type=\"text\"\n          placeholder={this.state.placeholder}\n          onChange={this.handleTextInput}\n          onFocus={this.handleFocusGained}\n          onBlur={this.handleFocusLost}\n          onKeyDown={this.handleKeyDown}\n          value={this.state.input}\n          tabIndex={this.props.tabIndex}\n          autoFocus={autoFocus} />\n      </div>\n    );\n  }\n};\n","// GroupMembers: control for managing a list of group members.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\nimport ContactList from './contact-list.jsx';\n\nconst messages = defineMessages({\n  no_contacts: {\n    id: 'no_contacts',\n    defaultMessage: 'You have no contacts :-(',\n    description: 'Shown in ContactsView when the user has no contacts'\n  },\n  contacts_not_found_short: {\n    id: 'contacts_not_found_short',\n    defaultMessage: \"No contacts match ''{query}''\",\n    description: 'Shown in ContactsView when search returned no results'\n  }\n});\n\nclass GroupManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Array of topic members\n      members: props.members,\n      index: GroupManager.indexMembers(props.members),\n      staticMembers: GroupManager.staticMembers(props.members, props.keepInitialMembers, props.requiredMember),\n      contactFilter: '',\n      noContactsMessage: props.intl.formatMessage(messages.no_contacts),\n      selectedContacts: GroupManager.selectedContacts(props.members)\n    };\n\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleMemberRemoved = this.handleMemberRemoved.bind(this);\n    this.handleContactFilter = this.handleContactFilter.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static indexMembers(members) {\n    let index = {};\n    members.map((m) => {\n      index[m.user] = {delta: 0, present: true}; // Delta: 0 unchanged, +1 added, -1 removed\n    });\n    return index;\n  }\n\n  static staticMembers(members, keepInitial, requiredMember) {\n    let stat = [];\n    members.map((m) => {\n      if (keepInitial || m.user == requiredMember) {\n        stat.push(m.user);\n      }\n    });\n    return stat;\n  }\n\n  static selectedContacts(members) {\n    let sel = [];\n    members.map((m) => {\n      sel.push(m.user);\n    });\n    return sel;\n  }\n\n  handleContactSelected(userId, index) {\n    let status = this.state.index[userId];\n    if (status) {\n      if (status.present) {\n        // Prevent duplicate members\n        return;\n      }\n      status.delta += 1;\n      status.present = true;\n    } else {\n      status = {delta: 1, present: true};\n    }\n\n    let m = this.state.members.slice();\n    m.push(this.props.contacts[index]);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleMemberRemoved(userId, index) {\n    const status = this.state.index[userId];\n    if (!status || !status.present) {\n      return;\n    }\n    status.present = false;\n    status.delta -= 1;\n\n    let m = this.state.members.slice();\n    m.splice(index, 1);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleContactFilter(val) {\n    const {formatMessage} = this.props.intl;\n    const msg = !val ?\n      formatMessage(messages.no_contacts) :\n      formatMessage(messages.contacts_not_found_short, {query: val});\n\n    this.setState({contactFilter: val, noContactsMessage: msg});\n  }\n\n  static doContactFiltering(filter, values) {\n    if (filter) {\n      for (let i=0; i<values.length; i++) {\n        if (values[i].indexOf(filter) >= 0) {\n          return true;\n        }\n      }\n      return false;\n    }\n    return true;\n  }\n\n  handleSubmit() {\n    var instance = this;\n    var members = [];\n    var added = [];\n    var removed = [];\n\n    var keys = Object.keys(this.state.index);\n    keys.map(function(k) {\n      if (instance.state.index[k].present) {\n        members.push(k);\n      }\n\n      if (instance.state.index[k].delta > 0) {\n        added.push(k);\n      } else if (instance.state.index[k].delta < 0) {\n        removed.push(k);\n      }\n    });\n    this.props.onSubmit(members, added, removed);\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <div id=\"group-manager\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_group_members\" defaultMessage=\"Group Members\" description=\"Section title\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ChipInput\n            tinode={this.props.tinode}\n            chips={this.state.members}\n            staticMembers={this.state.staticMembers}\n            prompt=\"add members\"\n            filterFunc={this.handleContactFilter}\n            onChipRemoved={this.handleMemberRemoved} />\n        </div>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_all_contacts\" defaultMessage=\"All Contacts\"\n              description=\"Section title [All Contacts]\" />\n          </label>\n        </div>\n        <ContactList\n          tinode={this.props.tinode}\n          contacts={this.props.contacts}\n          myUserId={this.props.myUserId}\n          topicSelected={this.state.selectedContacts}\n          filter={this.state.contactFilter}\n          filterFunc={GroupManager.doContactFiltering}\n          emptyListMessage={this.state.noContactsMessage}\n          showOnline={false}\n          showUnread={false}\n          onTopicSelected={this.handleContactSelected} />\n        <div id=\"group-manager-buttons\" className=\"panel-form-row\">\n          <button className=\"secondary\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(GroupManager);\n","// PermissionsEditor: Component for editing permissions\n// <PermissionsEditor mode=\"JWROD\" skip=\"O\" onChange={this.handleCheckboxTest} />\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport CheckBox from './checkbox.jsx';\nimport Contact from './contact.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n// Translatable permission names.\nconst messages = defineMessages({\n  joiner: {\n    id: 'permission_join',\n    defaultMessage: \"Join ({val})\",\n    description: 'Name of J permission'\n  },\n  reader: {\n    id: 'permission_read',\n    defaultMessage: \"Read ({val})\",\n    description: 'Name of R permission'\n  },\n  writer: {\n    id: 'permission_write',\n    defaultMessage: \"Write ({val})\",\n    description: 'Name of W permission'\n  },\n  preser: {\n    id: 'permission_pres',\n    defaultMessage: \"Get notified ({val})\",\n    description: 'Name of P permission'\n  },\n  approver: {\n    id: 'permission_admin',\n    defaultMessage: \"Approve ({val})\",\n    description: 'Name of A permission'\n  },\n  sharer: {\n    id: 'permission_share',\n    defaultMessage: \"Share ({val})\",\n    description: 'Name of S permission'\n  },\n  deleter: {\n    id: 'permission_delete',\n    defaultMessage: \"Delete ({val})\",\n    description: 'Name of D permission'\n  },\n  owner: {\n    id: 'permission_owner',\n    defaultMessage: \"Owner ({val})\",\n    description: 'Name of O permission'\n  }\n});\n\nclass PermissionsEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mode: (props.mode || '').replace('N', '')\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(val) {\n    let mode = this.state.mode;\n    const idx = mode.indexOf(val);\n    if (idx == -1) {\n      mode += val;\n    } else {\n      mode = mode.replace(val, '');\n    }\n    this.setState({mode: mode});\n  }\n\n  handleSubmit() {\n    // Normalize string, otherwise cannot check if mode has changed.\n    const mode = (this.state.mode || 'N').split('').sort().join('');\n    const before = (this.props.mode || 'N').split('').sort().join('')\n    if (mode !== before) {\n      this.props.onSubmit(mode);\n    } else {\n      this.props.onCancel();\n    }\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const all = 'JRWPASDO';\n    const names = {\n      'J': formatMessage(messages.joiner, {val: 'J'}),\n      'R': formatMessage(messages.reader, {val: 'R'}),\n      'W': formatMessage(messages.writer, {val: 'W'}),\n      'P': formatMessage(messages.preser, {val: 'P'}),\n      'A': formatMessage(messages.approver, {val: 'A'}),\n      'S': formatMessage(messages.sharer, {val: 'S'}),\n      'D': formatMessage(messages.deleter, {val: 'D'}),\n      'O': formatMessage(messages.owner, {val: 'O'})\n    };\n\n    let skip = this.props.skip || '';\n    let mode = this.state.mode;\n    let compare = (this.props.compare || '').replace('N', '');\n    let items = [];\n    for (let i=0; i<all.length; i++) {\n      let c = all.charAt(i);\n      if (skip.indexOf(c) >= 0 && mode.indexOf(c) < 0) {\n        // Permission is marked as inactive: hide unchecked permissions, disable checked permissions\n        continue;\n      }\n      items.push(\n        <tr key={c}>\n          <td>{names[c]}</td>\n          <td className=\"checkbox\">{skip.indexOf(c) < 0 ?\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} onChange={this.handleChange}/>\n            :\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} />\n          }</td>{this.props.compare ? <td className=\"checkbox\">\n            <CheckBox name={c} checked={(compare.indexOf(c) >= 0)}/>\n          </td> : null}\n        </tr>\n      );\n    }\n\n    return (\n      <div className=\"panel-form-column\">\n        {this.props.userTitle ?\n          <ul className=\"contact-box small\"><Contact\n            tinode={this.props.tinode}\n            item={this.props.item}\n            title={this.props.userTitle}\n            small={true}\n            avatar={makeImageUrl(this.props.userAvatar ? this.props.userAvatar : null)} /></ul> : null}\n        <label className=\"small\"><FormattedMessage id=\"title_permissions\"\n          defaultMessage=\"Permissions\" description=\"Section title\"/></label>\n        <table className=\"permission-editor\">\n        {this.props.compare ?\n          <thead><tr>\n            <th></th><th>{this.props.modeTitle}</th>\n            <th>{this.props.compareTitle}</th>\n          </tr></thead> :\n          null}\n        <tbody>\n          {items}\n        </tbody></table>\n        <br />\n        <div className=\"dialog-buttons\">\n          <button className=\"outline\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(PermissionsEditor);\n","// Image zoom and crop widget.\n\nimport React from 'react';\n\nconst DEFAULT_MAX_ZOOM = 2.5;\n\nexport default class Cropper extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Coordinates of the top left corner of the image in container coordinates.\n      panX: 0,\n      panY: 0,\n      // Origin of the zoom in image coordinates.\n      originX: 0,\n      originY: 0,\n      // Zoom scale.\n      zoom: 1,\n      // Zoom min and max.\n      minZoom: 0,\n      maxZoom: DEFAULT_MAX_ZOOM,\n    };\n\n    // References to DOM elements for hooking up events and getting screen dimensions.\n    // The transparent element which captures mouse moves (moves with the image).\n    this.overlay = React.createRef();\n    // The image cutout window or view port (static).\n    this.cutout = React.createRef();\n    // Scaled and translated image preview.\n    this.preview = React.createRef();\n    // The main container (static).\n    this.boundingBox = React.createRef();\n\n    // The original image width and height before any scaling.\n    this.imageWidth = 0;\n    this.imageHeight = 0;\n\n    // Mouse position when dragging.\n    this.mouseX = 0\n    this.mouseY = 0;\n    // Length of the previous mouse move when dragging.\n    this.prevDistance = 0;\n\n    // Bounding rectangles of static elements.\n    this.cutoutRect = {};\n    this.bBoxRect = {};\n    // Center of the bounding box.\n    this.originX = 0;\n    this.originY = 0;\n\n    this.initScaling = this.initScaling.bind(this);\n    this.onZoom = this.onZoom.bind(this);\n    this.handleZoom = this.handleZoom.bind(this);\n    this.mouseDown = this.mouseDown.bind(this);\n    this.mouseUp = this.mouseUp.bind(this);\n    this.mouseMove = this.mouseMove.bind(this);\n    this.mouseTouch = this.mouseTouch.bind(this);\n    this.positionAll = this.positionAll.bind(this);\n    this.translate = this.translate.bind(this);\n  }\n\n  componentDidMount() {\n    this.overlay.current.addEventListener('mousedown', this.mouseDown, { passive: true });\n    this.overlay.current.addEventListener('touchstart', this.mouseDown, { passive: true });\n\n    // The rectangle position is in viewport coordinates.\n    this.bBoxRect = this.boundingBox.current.getBoundingClientRect();\n    // Center of the bounding box in container coordinates.\n    this.originX = this.bBoxRect.width / 2;\n    this.originY = this.bBoxRect.height / 2;\n\n    // The rectangle position is in viewport coordinates.\n    this.cutoutRect = this.cutout.current.getBoundingClientRect();\n  }\n\n  componentWillUnmount() {\n    this.overlay.current.removeEventListener('mousedown', this.mouseDown);\n    this.overlay.current.removeEventListener('touchstart', this.mouseDown);\n  }\n\n  // Position all elements.\n  positionAll(panX, panY, zoom) {\n    // Zoom origin in image preview coordinates.\n    this.setState({\n      panX: panX,\n      panY: panY,\n      zoom: zoom,\n      originX: this.originX - panX,\n      originY: this.originY - panY,\n    });\n\n    // Pass cut out coordinates to caller.\n    const left = (this.originX - panX) * zoom - this.originX;\n    const top = (this.originY - panY) * zoom - this.originY;\n    this.props.onChange(\n      (left + this.cutoutRect.left - this.bBoxRect.left) / zoom,\n      (top + this.cutoutRect.top - this.bBoxRect.top) / zoom,\n      this.cutoutRect.width / zoom,\n      this.cutoutRect.height / zoom,\n      zoom);\n  }\n\n  // Check if new location is within the limits.\n  static checkBound(currPan, img, cutout, delta) {\n    let nextDiff = Math.min(0, cutout[0] - img[0] - delta, img[1] - cutout[1] + delta);\n    if (nextDiff == 0) {\n      // Cutout is completely within the image.\n      currPan += delta;\n    } else if (Math.min(0, cutout[0] - img[0], img[1] - cutout[1]) < nextDiff) {\n      // Cutout is outside of the range but closer to the bound.\n      currPan += delta;\n    }\n    return currPan;\n  }\n\n  initScaling() {\n    // Initialize components.\n    const imgRect = this.preview.current.getBoundingClientRect();\n\n    this.imageWidth = imgRect.width;\n    this.imageHeight = imgRect.height;\n\n    // Set zoom slider's min and max values. Make sure the scaled image cannot be smaller than the cutout.\n    const minZoom = Math.max(this.cutoutRect.width / imgRect.width, this.cutoutRect.height / imgRect.height);\n    this.setState({\n      minZoom: minZoom,\n      maxZoom: Math.max(DEFAULT_MAX_ZOOM, minZoom + 1)\n    });\n\n    // Initial zoom level fills the bounding box at the smallest image dimension and overflows the largest, i.e. \"fill\" not \"fit\".\n    const zoom = Math.max(this.bBoxRect.width / imgRect.width, this.bBoxRect.height / imgRect.height);\n    // Converting from viewport coordinates to container, then panning.\n    const panX = this.cutoutRect.left - this.bBoxRect.left -\n      (imgRect.width - this.cutoutRect.width) / 2;\n    const panY = this.cutoutRect.top - this.bBoxRect.top -\n      (imgRect.height - this.cutoutRect.height) / 2;\n\n    this.positionAll(panX, panY, zoom);\n  }\n\n  onZoom(e) {\n    this.handleZoom(e.target.value);\n  }\n\n  handleZoom(zoom) {\n    let panX = this.state.panX;\n    let panY = this.state.panY;\n\n    // Ensure that the image at the new zoom is not outside of the cutout boundaries.\n    // Calculate image coordinates at the new zoom.\n    const imgLeft = this.originX - (this.originX - panX) * zoom;\n    const imgRight = imgLeft + this.imageWidth * zoom;\n    // Cutout in the same coordinates as the image.\n    const coLeft = this.cutoutRect.left - this.bBoxRect.left;\n    const coRight = coLeft + this.cutoutRect.width;\n    if (coLeft < imgLeft) {\n      panX -= imgLeft - coLeft;\n    } else if (coRight > imgRight) {\n      panX += coRight - imgRight;\n    }\n    const imgTop = this.originY - (this.originY - panY) * zoom;\n    const imgBottom = imgTop + this.imageHeight * zoom;\n    const coTop = this.cutoutRect.top - this.bBoxRect.top;\n    const coBottom = coTop + this.cutoutRect.height;\n    if (coTop < imgTop) {\n      panY -= imgTop - coTop;\n    } else if (coBottom > imgBottom) {\n      panY += coBottom - imgBottom;\n    }\n\n    this.positionAll(panX, panY, zoom);\n  }\n\n  mouseDown(e) {\n    if (e.touches) {\n      this.mouseX = e.touches[0].pageX;\n      this.mouseY = e.touches[0].pageY;\n    } else {\n      this.mouseX = e.pageX;\n      this.mouseY = e.pageY;\n    }\n\n    window.addEventListener('mousemove', this.mouseMove, { passive: false });\n    window.addEventListener('touchmove', this.mouseTouch, { passive: false });\n    window.addEventListener('mouseup', this.mouseUp, { passive: true });\n    window.addEventListener('touchend', this.mouseUp, { passive: true });\n    // Disable text selection in the entire document.\n    document.body.style['userSelect'] = 'none';\n  }\n\n  // Perform image panning.\n  translate(pageX, pageY) {\n    const dX = pageX - this.mouseX;\n    const dY = pageY - this.mouseY;\n\n    this.mouseX = pageX;\n    this.mouseY = pageY;\n\n    // Make sure the image is within the cutout window.\n    const imgRect = this.preview.current.getBoundingClientRect();\n\n    // Check if the new position is within the boundaries, and if not if it's closer to them.\n    let panX = Cropper.checkBound(this.state.panX, [imgRect.left, imgRect.right],\n      [this.cutoutRect.left, this.cutoutRect.right], dX);\n    let panY = Cropper.checkBound(this.state.panY, [imgRect.top, imgRect.bottom],\n      [this.cutoutRect.top, this.cutoutRect.bottom], dY);\n\n    this.positionAll(panX, panY, this.state.zoom);\n  }\n\n  // Image panning.\n  mouseMove(e) {\n    e.preventDefault();\n    this.translate(e.pageX, e.pageY);\n  }\n\n  mouseTouch(e) {\n    e.preventDefault();\n\n    if (e.touches.length == 1) {\n      this.translate(e.touches[0].pageX, e.touches[0].pageY);\n      return;\n    }\n\n    // Image zooming by pinching.\n    const [touch0, touch1] = e.touches;\n    const distance = Math.sqrt((touch0.pageX - touch1.pageX) * (touch0.pageX - touch1.pageX) +\n      (touch0.pageY - touch1.pageY) * (touch0.pageY - touch1.pageY));\n\n    if (!this.prevDistance) {\n        this.prevDistance = distance / this.state.zoom;\n    }\n\n    let scale = (distance / this.prevDistance);\n    this.handleZoom(Math.max(this.minZoom, Math.min(this.maxZoom, scale)));\n  }\n\n  mouseUp(e) {\n    window.removeEventListener('mousemove', this.mouseMove);\n    window.removeEventListener('touchmove', this.mouseTouch);\n    window.removeEventListener('mouseup', this.mouseUp);\n    window.removeEventListener('touchend', this.mouseUp);\n    // Re-enable text selection.\n    document.body.style['userSelect'] = '';\n\n    this.positionAll(this.state.panX, this.state.panY, this.state.zoom);\n  }\n\n  render() {\n    // transform3d: position and scale.\n    const t3d = `translate3d(${this.state.panX}px, ${this.state.panY}px, 0) scale(${this.state.zoom})`;\n    // transformOrigin: zoom origin.\n    const orig = `${this.state.originX}px ${this.state.originY}px`;\n\n    // Overlay position and size are exactly equal to the position and size of the transformed image\n    // except it uses different coordinates.\n    const overlay = {\n      top: `${this.originY - this.state.originY * this.state.zoom}px`,\n      left: `${this.originX - this.state.originX * this.state.zoom}px`,\n      width: `${this.imageWidth * this.state.zoom}px`,\n      height: `${this.imageHeight * this.state.zoom}px`\n    };\n    return (\n      <div className=\"cropper\">\n        <div className=\"bounding-box\" ref={this.boundingBox}>\n          <img src={this.props.source} className=\"preview\" alt=\"\"\n            style={{transform: t3d, transformOrigin: orig}} ref={this.preview} onLoad={this.initScaling} />\n          <div className=\"cutout circle\" ref={this.cutout} />\n          <div className=\"overlay\" style={overlay} ref={this.overlay} />\n        </div>\n        <div className=\"zoom-wrapper\">\n          <input type=\"range\" className=\"zoomer\"\n            step=\"0.001\" min={this.state.minZoom} max={this.state.maxZoom} value={this.state.zoom} onChange={this.onZoom} />\n        </div>\n      </div>\n    );\n  }\n}\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Cropper from './cropper.jsx';\nimport { imageCrop } from '../lib/blob-helpers.js';\n\nexport default class AvatarCrop extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      top: 0,\n      left: 0,\n      width: 0,\n      height: 0,\n      scale: 1\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  // Cut out in image coordinates and desired scale factor.\n  handleChange(left, top, width, height, scale) {\n    this.setState({\n      left: left,\n      top: top,\n      width: width,\n      height: height,\n      scale: scale\n    });\n  }\n\n  handleSubmit() {\n    imageCrop(this.props.mime, this.props.avatar,\n      this.state.left, this.state.top, this.state.width, this.state.height,\n      this.state.scale)\n      .then(img => {\n        this.props.onSubmit(img.mime, img.blob, img.width, img.height);\n      })\n      .catch(err => {\n        this.props.onError(err);\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <Cropper\n            source={this.props.avatar}\n            onChange={this.handleChange} />\n        </div>\n        <div className=\"dialog-buttons\">\n          {this.props.onCancel ?\n            <button className=\"secondary\" onClick={this.props.onCancel}>\n              <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n            </button>\n            : null}\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n","// Password with a visiblity toggle.\nimport React from 'react';\n\nexport default class VisiblePassword extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: this.props.value,\n      visible: false\n    };\n\n    this.handleVisibility = this.handleVisibility.bind(this);\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n    if (this.props.onChange) {\n      this.props.onChange(e);\n    }\n  }\n\n  handleVisibility(e) {\n    e.preventDefault();\n    this.setState({visible: !this.state.visible});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode == 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, visible: false});\n      if (this.props.onFinished) {\n        this.props.onFinished();\n      }\n    } else if (e.keyCode == 13) {\n      // Enter pressed\n      this.handleEditingFinished();\n    }\n  }\n\n  handleEditingFinished(e) {\n    if (e) {\n      let currentTarget = e.currentTarget;\n      setTimeout(() => {\n        if (!currentTarget.contains(document.activeElement)) {\n          if (this.props.onFinished) {\n            this.props.onFinished(this.state.value);\n          }\n        }\n      }, 0);\n    } else if (this.props.onFinished) {\n      this.props.onFinished(this.state.value.trim());\n    }\n  }\n\n  render() {\n    return (\n      <div tabIndex=\"-1\" className=\"group-focus\"\n        onBlur={this.handleEditingFinished}>\n        <input className=\"with-visibility\"\n          type={this.state.visible ? \"text\" : \"password\"}\n          value={this.state.value}\n          placeholder={this.props.placeholder}\n          required={this.props.required ? 'required' : ''}\n          autoFocus={this.props.autoFocus ? 'autoFocus' : ''}\n          autoComplete={this.props.autoComplete}\n          onChange={this.handeTextChange}\n          onKeyDown={this.handleKeyDown} />\n        <span onClick={this.handleVisibility}>\n          <i className=\"material-icons clickable light-gray\">\n            {this.state.visible ? 'visibility' : 'visibility_off'}\n          </i>\n        </span>\n      </div>\n    );\n  }\n}\n","// In-place text editor. Shows text with an icon which toggles it into an input field.\nimport React from 'react';\n\nimport VisiblePassword from './visible-password.jsx';\n\nexport default class InPlaceEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selfRef = React.createRef();\n\n    this.state = {\n      active: props.active,\n      initialValue: props.value || '',\n      value: props.value || ''\n    };\n\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleStartEditing = this.handleStartEditing.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n    this.handlePasswordFinished = this.handlePasswordFinished.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // If text has changed while in read mode, update text and discard changes.\n    // Ignore update if in edit mode.\n    const newValue = this.props.value || '';\n    if (prevState.initialValue != newValue && !prevState.active) {\n      this.setState({\n        initialValue: newValue,\n        value: newValue\n      });\n    }\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value || ''});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, active: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleEditingFinished(e);\n    }\n  }\n\n   handleStartEditing() {\n    if (!this.props.readOnly) {\n      this.setState({active: true}, () => {\n        if (this.selfRef.current) {\n          this.selfRef.current.focus();\n        }\n      });\n    }\n  }\n\n  handleEditingFinished(event) {\n    const value = this.state.value.trim();\n    if (this.props.required && (!event.target.checkValidity() || !value)) {\n      // Empty input\n      this.setState({value: this.props.value, active: false});\n      return;\n    }\n    this.setState({active: false});\n    if ((value || this.props.value) && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  handlePasswordFinished(value) {\n    this.setState({active: false});\n    if (value && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  render() {\n    if (!this.state.active) {\n      let spanText = this.props.type == 'password' ? '••••••••' : this.state.value;\n      let spanClass = 'in-place-edit' + (this.props.readOnly ? ' disabled' : '');\n      if (!spanText) {\n        spanText = this.props.placeholder;\n        spanClass += ' placeholder';\n      }\n      if (!this.props.multiline || this.props.multiline == 1) {\n        spanClass += ' short';\n      }\n\n      return (<span className={spanClass} onClick={this.handleStartEditing}>\n        <span>{spanText}</span>\n      </span>);\n    }\n\n    let element;\n    const attr = {};\n    if (this.props.type == 'password') {\n      element = VisiblePassword;\n      attr.onFinished = this.handlePasswordFinished;\n    } else {\n      if (this.props.multiline > 1) {\n        element = 'textarea';\n        attr.rows = this.props.multiline;\n        attr.className = 'inplace-edit';\n      } else {\n        element = 'input';\n        attr.type = this.props.type || 'text';\n      }\n      attr.value = this.state.value;\n      attr.onChange = this.handeTextChange;\n      attr.onKeyDown = this.handleKeyDown;\n      attr.onBlur = this.handleEditingFinished;\n    }\n    attr.placeholder = this.props.placeholder;\n    attr.required = this.props.required ? 'required' : '';\n    attr.autoComplete = this.props.autoComplete;\n    attr.autoFocus = true;\n    attr.ref = this.selfRef;\n\n    return React.createElement(element, attr, null);\n  }\n};\n","// TagManager: edit topic or user tags.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\n\nimport { MAX_TAG_COUNT, MAX_TAG_LENGTH, MIN_TAG_LENGTH } from '../config.js';\nimport { arrayEqual } from '../lib/utils.js';\n\nexport default class TagManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tags: this.props.tags || [],\n      tagInput: '',\n      activated: this.props.activated\n    };\n\n    this.handleTagInput = this.handleTagInput.bind(this);\n    this.handleAddTag = this.handleAddTag.bind(this);\n    this.handleRemoveTag = this.handleRemoveTag.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const tags = nextProps.tags || [];\n    if (!arrayEqual(tags, prevState.tags) && !prevState.activated) {\n      return {tags: tags};\n    }\n    return null;\n  }\n\n  handleTagInput(text) {\n    this.setState({tagInput: text});\n    if (text.length > 0) {\n      const last = text[text.length-1];\n      if (text[0] == '\"') {\n        // This is a quoted string.\n        if (text.length > 1 && last == '\"') {\n          this.handleAddTag(text.substring(1, text.length-1));\n        }\n      } else if (last == ',' || last == ' ' || last == ';' || last == '\"') {\n        // User entered ',', ' ' or ';'\n        this.handleAddTag(text.substring(0, text.length-1).trim());\n      }\n    }\n  }\n\n  handleAddTag(tag) {\n    const maxTagCount = this.props.tinode.getServerLimit('maxTagCount', MAX_TAG_COUNT);\n\n    if (tag.length > 0 && this.state.tags.length < maxTagCount) {\n      const tags = this.state.tags.slice(0);\n      tags.push(tag);\n\n      this.setState({tags: tags, tagInput: ''});\n      if (this.props.onTagsChanged) {\n        this.props.onTagsChanged(tags);\n      }\n      return tags;\n    }\n    return this.state.tags;\n  }\n\n  handleRemoveTag(tag, index) {\n    const tags = this.state.tags.slice(0);\n    tags.splice(index, 1);\n    this.setState({tags: tags});\n    if (this.props.onTagsChanged) {\n      this.props.onTagsChanged(tags);\n    }\n  }\n\n  handleSubmit() {\n    // Add unprocessed input to tags, submit the list.\n    this.props.onSubmit(this.handleAddTag(this.state.tagInput.trim()));\n    this.setState({activated: false, tags: this.props.tags || []});\n  }\n\n  handleCancel() {\n    this.setState({activated: false, tagInput: '', tags: this.props.tags || []});\n    if (this.props.onCancel) {\n      this.props.onCancel();\n    }\n  }\n\n  render() {\n    const minTagLength = this.props.tinode.getServerLimit('minTagLength', MIN_TAG_LENGTH);\n    const maxTagLength = this.props.tinode.getServerLimit('maxTagLength', MAX_TAG_LENGTH);\n\n    let tags = [];\n    if (this.state.activated) {\n      this.state.tags.map((tag) => {\n        tags.push({user: tag, invalid: (tag.length < minTagLength || tag.length > maxTagLength)});\n      });\n    } else {\n      this.state.tags.map((tag) => {\n        tags.push(<span className=\"badge\" key={tags.length}>{tag}</span>);\n      });\n      if (tags.length == 0) {\n        tags = (\n          <i>\n            <FormattedMessage id=\"tags_not_found\" defaultMessage=\"No tags defined. Add some.\" description=\"\" />\n          </i>\n        );\n      }\n    }\n    return (\n      <div className=\"panel-form-column\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">{this.props.title}</label>\n        </div>\n        {this.state.activated ?\n        <div>\n          <FormattedMessage id=\"tags_editor_no_tags\" defaultMessage=\"Add some tags\"\n            description=\"Tag editor prompt when no tags are found.\">{\n            (add_tags_prompt) => <ChipInput\n              tinode={this.props.tinode}\n              chips={tags}\n              avatarDisabled={true}\n              prompt={add_tags_prompt}\n              tabIndex={this.props.tabIndex}\n              onEnter={this.handleAddTag}\n              onFocusLost={this.handleAddTag}\n              onCancel={this.handleCancel}\n              onChipRemoved={this.handleRemoveTag}\n              filterFunc={this.handleTagInput} />\n          }</FormattedMessage>\n          {this.props.onSubmit || this.props.onCancel ?\n            <div id=\"tag-manager-buttons\" className=\"dialog-buttons panel-form-row\">\n              <button className=\"outline\" onClick={this.handleCancel}>\n                <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n              </button>\n              <button className=\"primary\" onClick={this.handleSubmit}>\n                <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n              </button>\n            </div>\n          : null}\n        </div>\n        :\n        <div className=\"quoted\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.setState({activated: true});}}>\n            <i className=\"material-icons\">edit</i> &nbsp;<FormattedMessage id=\"title_manage_tags\" defaultMessage=\"Manage\"\n              description=\"Section title for the list of tags\" />\n          </a>\n          <>{tags}</>\n        </div>\n      }\n      </div>\n    );\n  }\n};\n","// Widget for editing topic description.\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarCrop from './avatar-crop.jsx';\nimport AvatarUpload from './avatar-upload.jsx';\nimport InPlaceEdit from './in-place-edit.jsx';\nimport TagManager from './tag-manager.jsx';\n\nimport { AVATAR_SIZE, MAX_AVATAR_BYTES, MAX_EXTERN_ATTACHMENT_SIZE,\n  MAX_INBAND_ATTACHMENT_SIZE, MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH } from '../config.js';\nimport { imageScaled, blobToBase64, makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, theCard } from '../lib/utils.js';\n\nexport default class TopicDescEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    const acs = topic.getAccessMode();\n    this.state = {\n      isMe: Tinode.isMeTopicName(this.props.topic),\n      owner: acs && acs.isOwner(),\n      fullName: topic.public ? topic.public.fn : undefined,\n      private: topic.private ? topic.private.comment : null,\n      description: topic.public ? topic.public.note : undefined,\n      avatar: makeImageUrl(topic.public ? topic.public.photo : null),\n      tags: topic.tags() || [],\n      newAvatar: null,\n      newAvatarMime: null\n    };\n\n    this.previousOnTags = null;\n\n    this.tnNewTags = this.tnNewTags.bind(this);\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\n    this.handleImageUpdated = this.handleImageUpdated.bind(this);\n    this.handleAvatarCropped = this.handleAvatarCropped.bind(this);\n    this.handlePrivateUpdate = this.handlePrivateUpdate.bind(this);\n    this.handleDescriptionUpdate = this.handleDescriptionUpdate.bind(this);\n    this.uploadAvatar = this.uploadAvatar.bind(this);\n    this.handleAvatarCropCancel = this.handleAvatarCropCancel.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n  }\n\n  componentDidMount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    this.previousOnTags = topic.onTagsUpdated;\n    topic.onTagsUpdated = this.tnNewTags;\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    topic.onTagsUpdated = this.previousOnTags;\n  }\n\n  tnNewTags(tags) {\n    this.setState({tags: tags});\n  }\n\n  handleFullNameUpdate(fn) {\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\n    if (fn && this.state.fullName !== fn) {\n      this.setState({fullName: fn});\n      this.props.onUpdateTopicDesc(this.props.topic, theCard(fn, null));\n    }\n  }\n\n  handlePrivateUpdate(comment) {\n    comment = comment.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.private !== comment) {\n      this.setState({private: comment});\n      this.props.onUpdateTopicDesc(this.props.topic, null, comment || Tinode.DEL_CHAR);\n    }\n  }\n\n  handleDescriptionUpdate(desc) {\n    desc = desc.trim().substring(0, MAX_TOPIC_DESCRIPTION_LENGTH);\n    if (desc) {\n      this.setState({description: desc});\n      this.props.onUpdateTopicDesc(this.props.topic, theCard(null, null, null, desc));\n    }\n  }\n\n  // AvatarUpload widget has changed the avatar: received a new file or deleted the avatar.\n  handleImageUpdated(mime, img) {\n    // This will show the AvatarCropView is img is not null.\n    this.setState({newAvatar: img, newAvatarMime: mime});\n    if (!img) {\n      // Deleting the avatar.\n      this.setState({avatar: null});\n      this.props.onUpdateTopicDesc(this.props.topic, theCard(null, Tinode.DEL_CHAR));\n    }\n  }\n\n  // AvatarCropView calls this method when the user has cropped the image.\n  handleAvatarCropped(mime, blob, width, height) {\n    const url = blob ? URL.createObjectURL(blob) : null;\n    this.setState({avatar: url, newAvatar: null, newAvatarMime: null});\n    if (blob) {\n      this.uploadAvatar(mime, blob, width, height);\n    }\n  }\n\n  // Utility method for converting cropped avatar blob to bytes for sending inband or\n  // for uploading it to the server out of band.\n  uploadAvatar(mime, blob, width, height) {\n    const readyToUpload = (image) => {\n      let {mime, blob, width, height} = image;\n      if (blob.size > MAX_AVATAR_BYTES) {\n        // Too large to send inband - uploading out of band and sending as a link.\n        const uploader = this.props.tinode.getLargeFileHelper();\n\n        this.setState({uploading: true});\n        uploader.upload(blob)\n          .then((url) => {\n            this.props.onUpdateTopicDesc(this.props.topic, theCard(null, url));\n          })\n          .catch((err) => {\n            this.props.onError(err, 'err');\n          })\n          .finally(() => {\n            this.setState({uploading: false});\n          });\n      } else {\n        this.setState({uploading: true});\n        // Convert blob to base64-encoded bits.\n        blobToBase64(blob)\n          .then(b64 => {\n            const du = makeImageUrl({data: b64.bits, type: mime});\n            this.setState({source: du});\n            this.props.onUpdateTopicDesc(this.props.topic, theCard(null, du));\n            this.setState({uploading: false});\n          });\n      }\n    };\n\n    if (width > AVATAR_SIZE || height > AVATAR_SIZE || width != height) {\n      // Avatar is not square or too large even after cropping. Shrink it and make square.\n      imageScaled(blob, AVATAR_SIZE, AVATAR_SIZE, MAX_EXTERN_ATTACHMENT_SIZE, true)\n        .then(scaled => readyToUpload)\n        .catch(err => {\n          this.props.onError(err, 'err');\n        });\n    } else {\n      readyToUpload({mime: mime, blob: blob, width: width, height: height});\n    }\n  }\n\n  handleAvatarCropCancel(img) {\n    this.setState({newAvatar: null, newAvatarMime: null});\n  }\n\n  handleTagsUpdated(tags) {\n    // Check if tags have actually changed.\n    if (arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      return;\n    }\n    this.props.onUpdateTags(tags);\n  }\n\n  render() {\n    if (this.state.newAvatar) {\n      return (\n        <AvatarCrop\n          avatar={this.state.newAvatar}\n          mime={this.state.newAvatarMime}\n          onSubmit={this.handleAvatarCropped}\n          onCancel={this.handleAvatarCropCancel}\n          onError={this.props.onError} />\n      );\n    }\n\n    const editable = this.state.isMe || this.state.owner;\n\n    return (\n      <>\n      <div className=\"panel-form-column\">\n        <center>\n          <AvatarUpload\n            tinode={this.props.tinode}\n            avatar={this.state.avatar}\n            readOnly={!editable}\n            uid={this.props.topic}\n            title={this.state.fullName}\n            onImageUpdated={this.handleImageUpdated}\n            onError={this.props.onError} />\n        </center>\n        {this.state.isMe ?\n          <div className=\"group\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n              description=\"Label for full name editing\" />\n            </label>\n            <div>\n              <FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n                description=\"Input placeholder for person's full name\">{\n                (full_name_placeholder) => <InPlaceEdit\n                  placeholder={full_name_placeholder}\n                  value={this.state.fullName}\n                  required={true}\n                  onFinished={this.handleFullNameUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n        :\n          <>\n            <div className=\"group\">\n              <div><label className=\"small\">\n                <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                  description=\"Label for editing topic name\" />\n              </label></div>\n              <div>\n                <FormattedMessage id=\"topic_name_editing_placeholder\" defaultMessage=\"Freeform name of the group\"\n                  description=\"Prompt for entering topic name\">{\n                  (group_name_placeholder) => <InPlaceEdit\n                    placeholder={group_name_placeholder}\n                    readOnly={!editable}\n                    value={this.state.fullName}\n                    required={true}\n                    onFinished={this.handleFullNameUpdate} />\n                }</FormattedMessage>\n              </div>\n            </div>\n            <div className=\"group\">\n              <div>\n                <label className=\"small\">\n                  <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                    description=\"Label for editing 'private'\" />\n                </label>\n              </div>\n              <div>\n                <FormattedMessage id=\"private_editing_placeholder\" defaultMessage=\"Visible to you only\"\n                  description=\"Placeholder for editing 'private'\">{\n                  (private_placeholder) => <InPlaceEdit\n                    placeholder={private_placeholder}\n                    value={this.state.private}\n                    onFinished={this.handlePrivateUpdate} />\n                }</FormattedMessage>\n              </div>\n            </div>\n          </>\n        }\n        {editable || this.state.description ?\n          <div className=\"group\">\n            <div><label className=\"small\">\n              <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                description=\"Label for editing topic description\" />\n            </label></div>\n            <div>\n              <FormattedMessage id=\"description_editing_placeholder\"\n                defaultMessage=\"Description (optional)\"\n                description=\"Placeholder for editing topic description\">{\n                (private_placeholder) => <InPlaceEdit\n                  placeholder={private_placeholder}\n                  readOnly={!editable}\n                  value={this.state.description}\n                  multiline={2}\n                  onFinished={this.handleDescriptionUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n          : null\n        }\n      </div>\n      {editable ?\n        <>\n          <div className=\"hr\" />\n          <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (search & discovery)\"\n            description=\"Section title for TagManager\">{\n              (title_tag_manager) => <TagManager\n                tinode={this.props.tinode}\n                title={title_tag_manager}\n                activated={false}\n                tags={this.state.tags}\n                onSubmit={this.handleTagsUpdated} />\n          }</FormattedMessage>\n        </>\n        : null\n      }\n      </>\n    );\n  }\n};\n","// View for editing topic (including 'me' topic) parameters.\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport TopicDescEdit from '../widgets/topic-desc-edit.jsx';\n\nimport { arrayEqual, asEmail, asPhone } from '../lib/utils.js';\n\nexport default class TopicCommon extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    const acs = topic.getAccessMode();\n    this.state = {\n      isMe: this.props.topic == 'me',\n      owner: acs && acs.isOwner(),\n      credentials: (topic.getCredentials ? topic.getCredentials() : null) || [],\n      addCredActive: false,\n      addCredInvalid: false,\n      newCred: '',\n      tags: []\n    };\n\n    this.previousTagsUpdated = undefined;\n\n    this.onTagsUpdated = this.onTagsUpdated.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.tnCredsUpdated = this.tnCredsUpdated.bind(this);\n    this.handleCredChange = this.handleCredChange.bind(this);\n    this.handleCredKeyDown = this.handleCredKeyDown.bind(this);\n    this.handleCredEntered = this.handleCredEntered.bind(this);\n  }\n\n  // No need to separately handle component mount.\n  componentDidUpdate(props) {\n    const topic = this.props.tinode.getTopic(props.topic);\n    if (!topic) {\n      return;\n    }\n\n    topic.onCredsUpdated = this.tnCredsUpdated;\n\n    if (topic.onTagsUpdated != this.onTagsUpdated) {\n      if (topic.getType() == 'grp') {\n        this.previousTagsUpdated = topic.onTagsUpdated;\n        topic.onTagsUpdated = this.onTagsUpdated;\n      } else {\n        this.previousTagsUpdated = undefined;\n      }\n    }\n\n    if (this.state.topic != props.topic) {\n      this.setState({topic: props.topic});\n    }\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    topic.onCredsUpdated = undefined;\n    topic.onTagsUpdated = this.previousTagsUpdated;\n  }\n\n  tnCredsUpdated(creds) {\n    this.setState({credentials: creds || []});\n  }\n\n  handleCredChange(e) {\n    this.setState({newCred: e.target.value, addCredInvalid: false});\n  }\n\n  handleCredKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({newCred: '', addCredActive: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleCredEntered(e);\n    }\n  }\n\n  handleCredEntered(e) {\n    const value = this.state.newCred.trim();\n    if (!value) {\n      this.setState({addCredActive: false, addCredInvalid: false});\n      return;\n    }\n\n    let val = asPhone(value);\n    let method;\n    if (val) {\n      method = 'tel';\n    } else {\n      val = asEmail(value);\n      if (val) {\n        method = 'email';\n      }\n    }\n    if (method) {\n      this.props.onCredAdd(method, val);\n      this.setState({addCredActive: false, newCred: ''});\n    } else {\n      this.setState({addCredInvalid: true});\n    }\n  }\n\n  // Server informs that the tags have been updated.\n  onTagsUpdated(tags) {\n    this.setState({tags: tags});\n\n    if (this.previousTagsUpdated && this.previousTagsUpdated != this.onTagsUpdated) {\n      this.previousTagsUpdated(tags);\n    }\n  }\n\n  // Request server to change tags.\n  handleTagsUpdated(tags) {\n    if (!arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      this.props.onTopicTagsUpdateRequest(this.props.topic, tags);\n    }\n  }\n\n  render() {\n    const credentials = [];\n    if (this.state.isMe) {\n      this.state.credentials.map((cred) => {\n        credentials.push(\n          <div key={cred.meth + \":\" + cred.val + \":\" + cred.done}>{cred.meth}: <tt>{cred.val}</tt>\n            <span> {!cred.done ?\n              <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredConfirm(cred.meth, cred.val);}}>\n                <FormattedMessage id=\"validate_credential_action\" defaultMessage=\"confirm\"\n                  description=\"Validate credentail call to action\" />\n              </a>\n            : null} <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredDelete(cred.meth, cred.val);}}><i\n              className=\"material-icons gray\">delete_outline</i></a></span>\n          </div>\n        );\n      });\n    }\n\n    return (\n      <div className=\"scrollable-panel\">\n        <TopicDescEdit\n          tinode={this.props.tinode}\n          topic={this.props.topic}\n          onUpdateTopicDesc={this.props.onUpdateTopicDesc}\n          onUpdateTags={this.handleTagsUpdated}\n          onError={this.props.onError} />\n        {this.state.isMe ?\n          <>\n            <div className=\"hr\" />\n            <div className=\"panel-form-column\">\n              <label className=\"small\">\n                <FormattedMessage id=\"label_user_contacts\" defaultMessage=\"Contacts:\"\n                description=\"Label for user contacts\" />\n              </label>\n              <div className=\"quoted\">\n                {credentials}\n                {this.state.addCredActive ?\n                  <input type=\"text\" value={this.state.value}\n                    className={this.state.addCredInvalid ? 'invalid' : null}\n                    placeholder=\"Phone number or email\" required=\"required\" autoFocus\n                    onChange={this.handleCredChange} onKeyDown={this.handleCredKeyDown} onBlur={this.handleCredEntered} />\n                  : null}\n                <div>\n                  <a href=\"#\" onClick={(e) => {e.preventDefault(); this.setState({addCredActive: true});}}>\n                    <i className=\"material-icons\">add</i>\n                    <FormattedMessage id=\"button_add_another\" defaultMessage=\"Add another\" description=\"Call to action [+ add another]\" />\n                  </a></div>\n              </div>\n            </div>\n          </>\n        : null\n      }\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport InPlaceEdit from './in-place-edit.jsx';\n\nimport { NO_ACCESS_MODE } from '../config.js';\n\nconst messages = defineMessages({\n  clear_messages: {\n    id: 'action_clear_messages',\n    defaultMessage: 'Clear Messages',\n    description: 'Flat button [Clear Messages] (soft-delete messages)'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n  delete_messages: {\n    id: 'action_delete_messages',\n    defaultMessage: 'Clear Messages for All',\n    description: 'Flat button [Clear for All] (hard-delete all messages)'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  topic_delete: {\n    id: 'topic_delete',\n    defaultMessage: 'Delete Conversation',\n    description: 'Alert title when deleting the topic.'\n  },\n  topic_delete_warning: {\n    id: 'topic_delete_warning',\n    defaultMessage: 'Are you sure you want to delete this conversation? It cannot be undone.',\n    description: 'Alert warning when deleting entire topic'\n  },\n  leave_chat: {\n    id: 'action_leave_chat',\n    defaultMessage: 'Leave Conversation',\n    description: 'Flat button [Leave Conversation]'\n  },\n  leave_chat_warning: {\n    id: 'leave_chat_warning',\n    defaultMessage: 'Are you sure you want to leave this conversation?',\n    description: 'Alert dialog warning when unsubscribing from a chat.'\n  },\n  block_contact: {\n    id: 'action_block_contact',\n    defaultMessage: \"Block Contact\",\n    description: \"Flat button [Block Contact]\"\n  },\n  block_contact_warning: {\n    id: 'block_contact_warning',\n    defaultMessage: 'Are you sure you want to block this contact?',\n    description: 'Alert dialog warning when blocking a contact.'\n  },\n  report_chat: {\n    id: 'action_report_chat',\n    defaultMessage: 'Report Conversation',\n    description: 'Flat button [Report Group]'\n  },\n  report_chat_warning: {\n    id: 'report_chat_warning',\n    defaultMessage: 'Are you sure you want to block and report this conversation?',\n    description: 'Alert dialog warning when reporting a conversation for abuse'\n  },\n  other_user: {\n    id: 'label_other_user',\n    defaultMessage: 'Other',\n    description: 'Label for the other user when the user is unnamed'\n  },\n});\n\nclass TopicSecurity extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleDeleteTopic = this.handleDeleteTopic.bind(this);\n    this.handleDeleteMessages = this.handleDeleteMessages.bind(this);\n    this.handleLeave = this.handleLeave.bind(this);\n    this.handleBlock = this.handleBlock.bind(this);\n    this.handleReport = this.handleReport.bind(this);\n  }\n\n  handleDeleteTopic(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.topic_delete), // title\n      formatMessage(messages.topic_delete_warning), // content\n      (() => { this.props.onDeleteTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleDeleteMessages(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(this.props.deleter ? messages.delete_messages : messages.clear_messages), // title\n      formatMessage(this.props.deleter ? messages.delete_messages_warning : messages.clear_messages_warning), // content\n      (() => { this.props.onDeleteMessages(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleLeave(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.leave_chat), // title\n      formatMessage(messages.leave_chat_warning), // content\n      (() => { this.props.onLeaveTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleBlock(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.block_contact), // title\n      formatMessage(messages.block_contact_warning), // content\n      (() => { this.props.onBlockTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleReport(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.report_chat), // title\n      formatMessage(messages.report_chat_warning), // content\n      (() => { this.props.onReportTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          {!this.props.channel ?\n            <a href=\"#\" className=\"flat-button\" onClick={this.handleDeleteMessages}>\n              <i className=\"material-icons\">delete_outline</i> &nbsp;{\n                formatMessage(this.props.deleter ? messages.delete_messages : messages.clear_messages)\n              }\n            </a>\n            :\n            null\n          }\n          {this.props.owner ?\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleDeleteTopic}>\n              <i className=\"material-icons\">delete</i> &nbsp;{formatMessage(messages.topic_delete)}\n            </a>\n            :\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleLeave}>\n              <i className=\"material-icons\">exit_to_app</i> &nbsp;{formatMessage(messages.leave_chat)}\n            </a>\n          }\n          {!this.props.groupTopic ?\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleBlock}>\n              <i className=\"material-icons\">block</i> &nbsp;{formatMessage(messages.block_contact)}\n            </a>\n            :\n            null\n          }\n          {!this.props.owner ?\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleReport}>\n              <i className=\"material-icons\">report</i> &nbsp;{formatMessage(messages.report_chat)}\n            </a>\n            :\n            null\n          }\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          {this.props.groupTopic ?\n            <>\n              <div className=\"group\">\n                <label>\n                  <FormattedMessage id=\"label_your_permissions\" defaultMessage=\"Your permissions:\"\n                    description=\"Label for current user permissions\" />\n                </label> <tt className=\"clickable\"\n                  onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('want')}}>\n                  {this.props.access}\n                </tt>\n              </div>\n              <div className=\"group\">\n                <div>\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_default_access_mode\" defaultMessage=\"Default access mode:\"\n                    description=\"Label for default access mode\" />\n                  </label>\n                </div>\n                <div className=\"quoted\">\n                  <div>Auth: <tt className=\"clickable\"\n                    onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('auth')}}>{this.props.auth}</tt>\n                  </div>\n                  <div>Anon: <tt className=\"clickable\"\n                    onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('anon')}}>{this.props.anon}</tt>\n                  </div>\n                </div>\n              </div>\n            </>\n            :\n            <div className=\"group\">\n              <div>\n                <label className=\"small\">\n                  <FormattedMessage id=\"label_permissions\" defaultMessage=\"Permissions:\"\n                    description=\"Section title\" />\n                </label>\n              </div>\n              <div className=\"quoted\">\n                <div>\n                  <FormattedMessage id=\"label_you\" defaultMessage=\"You:\"\n                    description=\"Label for the current user\" /> <tt className=\"clickable\"\n                    onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('want')}}>\n                    {this.props.access}\n                  </tt>\n                </div>\n                <div>{this.props.fullName ? this.props.fullName : formatMessage(messages.other_user)}:\n                  &nbsp;<tt className=\"clickable\"\n                    onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('given')}}>\n                    {this.props.modeGiven2}\n                  </tt>\n                </div>\n              </div>\n            </div>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(TopicSecurity);\n","// InfoView: panel with topic/user info.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport BadgeList from '../widgets/badge-list.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport ContactList from '../widgets/contact-list.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupManager from '../widgets/group-manager.jsx';\nimport MenuCancel from '../widgets/menu-cancel.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\nimport TopicCommon from '../widgets/topic-common.jsx';\nimport TopicSecurity from '../widgets/topic-security.jsx';\n\nimport { MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH, NO_ACCESS_MODE } from '../config.js';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, theCard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  info: {\n    id: 'panel_title_info',\n    description: 'Title for InfoView',\n    defaultMessage: 'Info'\n  },\n  general: {\n    id: 'panel_title_general',\n    description: 'Title for TopicCommon.',\n    defaultMessage: 'General'\n  },\n  security: {\n    id: 'panel_title_security',\n    description: 'Title for TopicSecirity and AccSecurity.',\n    defaultMessage: 'Security'\n  },\n  members: {\n    id: 'panel_title_members',\n    description: 'Title for managing group members view.',\n    defaultMessage: 'Members'\n  },\n  crop: {\n    id: 'panel_title_crop',\n    description: 'Title for AvatarCropView.',\n    defaultMessage: 'Drag to Adjust'\n  },\n  perm_want: {\n    id: 'requested_permissions',\n    defaultMessage: 'Requested',\n    description: 'Title for permissions'\n  },\n  perm_given: {\n    id: 'granted_permissions',\n    defaultMessage: 'Granted',\n    description: 'Title for permissions'\n  },\n  perm_auth: {\n    id: 'permissions_authenticated',\n    defaultMessage: 'Authenticated',\n    description: 'Title for editing default authenticated permissions'\n  },\n  perm_anon: {\n    id: 'permissions_anonymous',\n    defaultMessage: 'Anonymous',\n    description: 'Title for editing default anonymous permissions'\n  },\n  perm_user: {\n    id: 'permissions_user',\n    defaultMessage: 'User\\'s Permissions',\n    description: 'Title for editing user\\'s permissions'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n});\n\nfunction _clip(str, length) {\n  return str && str.substring(0, length);\n}\n\nclass InfoView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      topic: null,\n      owner: false,\n      admin: false,\n      sharer: false,\n      deleter: false,\n      muted: false,\n      address: null,\n      groupTopic: undefined,\n      channel: undefined,\n      fullName: undefined,\n      description: undefined,\n      avatar: null,\n      private: null,\n      selectedContact: null,\n      access: null,\n      modeGiven: null,\n      modeWant: null,\n      modeGiven2: null, // P2P topic, the other user mode given\n      modeWant2: null,  // P2P topic, the other user mode want\n      auth: null,\n      anon: null,\n      contactList: [],\n      trustedBadges: [],\n      previousMetaDesc: undefined,\n      previousSubsUpdated: undefined,\n    };\n\n    this.resetSubs = this.resetSubs.bind(this);\n    this.resetDesc = this.resetDesc.bind(this);\n    this.resetTags = this.resetTags.bind(this);\n    this.onMetaDesc = this.onMetaDesc.bind(this);\n    this.onSubsUpdated = this.onSubsUpdated.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleMuted = this.handleMuted.bind(this);\n    this.handleUnarchive = this.handleUnarchive.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleShowAddMembers = this.handleShowAddMembers.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleMemberSelected = this.handleMemberSelected.bind(this);\n    this.handleContextMenu = this.handleContextMenu.bind(this);\n    this.handleBackNavigate = this.handleBackNavigate.bind(this);\n  }\n\n  // No need to separately handle component mount.\n  componentDidUpdate(props) {\n    const topic = this.props.tinode.getTopic(props.topic);\n    if (!topic) {\n      return;\n    }\n\n    if (this.onMetaDesc != topic.onMetaDesc) {\n      this.previousMetaDesc = topic.onMetaDesc;\n      topic.onMetaDesc = this.onMetaDesc;\n\n      this.previousSubsUpdated = topic.onSubsUpdated;\n      topic.onSubsUpdated = this.onSubsUpdated;\n    }\n\n    if (this.state.topic != props.topic) {\n      this.setState({topic: props.topic});\n      this.resetDesc(topic, props);\n      this.resetSubs(topic, props);\n      this.resetTags(topic);\n    }\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.setState({topic: null});\n    topic.onMetaDesc = this.previousMetaDesc;\n    topic.onSubsUpdated = this.previousSubsUpdated;\n  }\n\n  resetSubs(topic, props) {\n    const newState = {contactList: []};\n    if (topic.getType() == 'p2p') {\n      // Fetch the other party in the p2p conversation.\n      // Topic may not be ready yet, so check if user is found.\n      const user2 = topic.subscriber(props.topic);\n      if (user2) {\n        newState.modeGiven2 = user2.acs.getGiven();\n        newState.modeWant2 = user2.acs.getWant();\n      } else {\n        newState.modeGiven2 = NO_ACCESS_MODE;\n        newState.modeWant2 = NO_ACCESS_MODE;\n      }\n    } else {\n      topic.subscribers((sub) => {\n        newState.contactList.push(sub);\n      }, this);\n    }\n\n    this.setState(newState);\n  }\n\n  resetDesc(topic, props) {\n    const defacs = topic.getDefaultAccess() || {};\n    const acs = topic.getAccessMode();\n\n    const badges = [];\n    if (topic.trusted) {\n      for (const [key, val] of Object.entries(topic.trusted)) {\n        if (val) {\n          badges.push(key);\n        }\n      }\n    }\n\n    this.setState({\n      owner: acs && acs.isOwner(),\n      admin: acs && acs.isAdmin(),\n      sharer: acs && acs.isSharer(),\n      deleter: acs && acs.isDeleter(),\n      muted: acs && acs.isMuted(),\n\n      fullName: _clip(topic.public ? topic.public.fn : undefined, MAX_TITLE_LENGTH),\n      description: _clip(topic.public ? topic.public.note : undefined, MAX_TOPIC_DESCRIPTION_LENGTH),\n      avatar: makeImageUrl(topic.public ? topic.public.photo : null),\n      trustedBadges: badges,\n      private: _clip(topic.private ? topic.private.comment : null, MAX_TITLE_LENGTH),\n      archived: topic.isArchived(),\n      address: topic.name,\n      groupTopic: topic.isGroupType(),\n      channel: topic.isChannelType() || topic.chan,\n      access: acs ? acs.getMode() : undefined,\n      modeGiven: acs ? acs.getGiven() : undefined,\n      modeWant: acs ? acs.getWant() : undefined,\n      auth: defacs.auth,\n      anon: defacs.anon\n    });\n  }\n\n  resetTags(topic) {\n    if (topic.getType() != 'grp') {\n      return;\n    }\n\n    const acs = topic.getAccessMode();\n    if (acs && acs.isOwner()) {\n      // Requesting tags: owner is editing the topic.\n      topic.getMeta(topic.startMetaQuery().withTags().build());\n    }\n  }\n\n  onMetaDesc(desc) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetDesc(topic, this.props);\n\n    if (this.previousMetaDesc && this.previousMetaDesc != this.onMetaDesc) {\n      this.previousMetaDesc(desc);\n    }\n  }\n\n  onSubsUpdated(subs) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetSubs(topic, this.props);\n\n    if (this.previousSubsUpdated && this.previousSubsUpdated != this.onSubsUpdated) {\n      this.previousSubsUpdated(subs);\n    }\n  }\n\n  handleImageChanged(img) {\n    this.setState({avatar: img});\n    this.props.onTopicDescUpdate(this.props.topic, theCard(null, img || Tinode.DEL_CHAR), null);\n  }\n\n  handleMuted(ignored, checked) {\n    this.setState({muted: checked});\n    this.props.onChangePermissions(this.props.topic, checked ? '-P' : '+P');\n  }\n\n  handleUnarchive(ignored, ignored2) {\n    this.props.onTopicUnArchive(this.props.topic);\n  }\n\n  handlePermissionsChanged(which, perm) {\n    switch (which) {\n      case 'auth':\n        this.props.onTopicDescUpdateRequest(this.props.topic, null, null, {auth: perm});\n        break;\n      case 'anon':\n        this.props.onTopicDescUpdateRequest(this.props.topic, null, null, {anon: perm});\n        break;\n      case 'mode':\n      case 'want':\n        this.props.onChangePermissions(this.props.topic, perm);\n        break;\n      case 'given':\n        this.props.onChangePermissions(this.props.topic, perm, this.props.topic);\n        break;\n      case 'user':\n        this.props.onChangePermissions(this.props.topic, perm, this.state.userPermissionsEdited);\n        break;\n    }\n\n    this.handleBackNavigate();\n  }\n\n  handleLaunchPermissionsEditor(which, uid) {\n    const {formatMessage} = this.props.intl;\n    let toEdit, toCompare, toSkip, titleEdit, titleCompare, userTitle, userAvatar;\n    switch (which) {\n      case 'mode':\n        toEdit = this.state.access;\n        break;\n      case 'want':\n        toEdit = this.state.modeWant;\n        toCompare = this.state.modeGiven;\n        if (this.state.owner) {\n          // Don't allow owner to unset 'O' permission. All other permissions are OK.\n          toSkip = 'O';\n        } else {\n          // Allow accepting any of 'ASDO' permissions but don't allow asking for them.\n          toSkip = Tinode.AccessMode.encode(Tinode.AccessMode.diff('ASDO', this.state.modeGiven));\n          if (this.state.channel) {\n            // Channels are read-only.\n            toSkip += 'W';\n          }\n        }\n        titleEdit = formatMessage(messages.perm_want);\n        titleCompare = formatMessage(messages.perm_given);\n        break;\n      case 'given':\n        toEdit = this.state.modeGiven2;\n        toCompare = this.state.modeWant2;\n        toSkip = this.state.groupTopic ? (this.state.owner ? '' : 'O') : 'ASDO';\n        titleEdit = formatMessage(messages.perm_given);\n        titleCompare = formatMessage(messages.perm_want);\n        break;\n      case 'auth':\n        toEdit = this.state.auth;\n        toSkip = 'O';\n        break;\n      case 'anon':\n        toEdit = this.state.anon;\n        toSkip = 'O';\n        break;\n      case 'user': {\n        const topic = this.props.tinode.getTopic(this.props.topic);\n        if (!topic) {\n          return;\n        }\n        const user = topic.subscriber(uid);\n        if (!user || !user.acs) {\n          return;\n        }\n        toEdit = user.acs.getGiven();\n        toCompare = user.acs.getWant();\n        toSkip = this.state.owner ? '' : 'O';\n        titleEdit = formatMessage(messages.perm_given);\n        titleCompare = formatMessage(messages.perm_want);\n        if (user.public) {\n          userTitle = user.public.fn;\n          userAvatar = user.public.photo;\n        }\n        break;\n      }\n      default:\n        console.error(\"Unknown permission editing mode '\" + which + \"'\");\n        return;\n    }\n    this.setState({\n      userPermissionsEdited: uid,\n      userPermissionsTitle: userTitle,\n      userPermissionsAvatar: userAvatar,\n      editedPermissions: toEdit,\n      immutablePermissions: toCompare,\n      editedPermissionsTitle: titleEdit,\n      immutablePermissionsTitle: titleCompare,\n      editedPermissionsSkipped: toSkip,\n    });\n    this.props.onNavigate(`perm/${which}`);\n  }\n\n  handleShowAddMembers(e) {\n    e.preventDefault();\n    this.props.onInitFind();\n    this.props.onNavigate('members');\n  }\n\n  handleMemberUpdateRequest(members, added, removed) {\n    this.props.onMemberUpdateRequest(this.props.topic, added, removed);\n    this.props.onNavigate('info');\n  }\n\n  handleMemberSelected(uid) {\n    this.setState({selectedContact: uid});\n  }\n\n  handleBackNavigate() {\n    const args = (this.props.panel || 'info').split('/');\n    if (args[0] == 'info') {\n      this.props.onNavigate(null);\n    } else if (args[0] == 'perm') {\n      if (args[1] == 'user') {\n        this.props.onNavigate('info');\n      } else {\n        this.props.onNavigate('security');\n      }\n    } else {\n      this.props.onNavigate('info');\n    }\n  }\n\n  handleContextMenu(params) {\n    const {formatMessage} = this.props.intl;\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    const user = topic.subscriber(params.topicName);\n    if (!user || !user.acs) {\n      return;\n    }\n\n    const isMe = this.props.tinode.isMe(params.topicName);\n    const menuItems = [\n      {title: formatMessage(messages.edit_permissions), handler: () => {\n        this.handleLaunchPermissionsEditor(isMe ? 'want' : 'user', params.topicName);\n      }}\n    ];\n    if (!isMe) {\n      menuItems.push('member_delete');\n    }\n    menuItems.push(user.acs.isMuted() ? 'member_unmute' : 'member_mute');\n    if (!isMe) {\n      menuItems.push(user.acs.isJoiner() ? 'member_block' : 'member_unblock');\n    }\n    this.props.showContextMenu({\n      topicName: this.props.topic,\n      x: params.x,\n      y: params.y,\n      user: params.topicName}, menuItems);\n  }\n\n  render() {\n    const args = (this.props.panel || 'info').split('/');\n    const view = args[0];\n    args.shift();\n\n    const {formatMessage} = this.props.intl;\n    const panelTitle = formatMessage((view == 'perm' ? messages['perm_' + args[0]] : messages[view])\n      || messages['info']);\n\n    return (\n      <div id=\"info-view\">\n        <div className=\"caption-panel\" id=\"info-caption-panel\">\n          <div className=\"panel-title\" id=\"info-title\">{panelTitle}</div>\n          <div>\n            <MenuCancel onCancel={this.handleBackNavigate} />\n          </div>\n        </div>\n        {this.props.displayMobile ?\n          <ErrorPanel\n            level={this.props.errorLevel}\n            text={this.props.errorText}\n            onClearError={this.props.onError} /> : null}\n        {view == 'members' ?\n          <GroupManager\n            tinode={this.props.tinode}\n            members={this.state.contactList}\n            requiredMember={this.props.myUserId}\n            keepInitialMembers={!this.state.admin && !this.state.owner}\n            myUserId={this.props.myUserId}\n            contacts={this.props.searchableContacts}\n            onCancel={this.handleBackNavigate}\n            onSubmit={this.handleMemberUpdateRequest} />\n          :\n        view == 'perm' && args.length > 0 ?\n          <PermissionsEditor\n            tinode={this.props.tinode}\n            mode={this.state.editedPermissions}\n            compare={this.state.immutablePermissions}\n            skip={this.state.editedPermissionsSkipped}\n            modeTitle={this.state.editedPermissionsTitle}\n            compareTitle={this.state.immutablePermissionsTitle}\n            userTitle={this.state.userPermissionsTitle}\n            item={this.state.userPermissionsEdited}\n            userAvatar={this.state.userPermissionsAvatar}\n            onSubmit={(mode) => this.handlePermissionsChanged(args[0], mode)}\n            onCancel={this.handleBackNavigate} />\n          :\n        view == 'general' ?\n          <TopicCommon\n            tinode={this.props.tinode}\n            topic={this.props.topic}\n            onCredAdd={this.props.onCredAdd}\n            onTopicTagsUpdateRequest={this.props.onTopicTagsUpdateRequest}\n            onCredConfirm={this.props.onCredConfirm}\n            onCredDelete={this.props.onCredDelete}\n            onUpdateTopicDesc={this.props.onTopicDescUpdateRequest}\n            onError={this.props.onError} />\n          :\n        view == 'security' ?\n          <TopicSecurity\n            topic={this.props.topic}\n            owner={this.state.owner}\n            admin={this.state.admin}\n            sharer={this.state.sharer}\n            deleter={this.state.deleter}\n            muted={this.state.muted}\n\n            groupTopic={this.state.groupTopic}\n            channel={this.state.channel}\n            access={this.state.access}\n            modeGiven={this.state.modeGiven}\n            modeWant={this.state.modeWant}\n            modeGiven2={this.state.modeGiven2}\n            modeWant2={this.state.modeWant2}\n            auth={this.state.auth}\n            anon={this.state.anon}\n\n            onShowAlert={this.props.onShowAlert}\n            onDeleteMessages={this.props.onDeleteMessages}\n            onLeaveTopic={this.props.onLeaveTopic}\n            onBlockTopic={this.props.onBlockTopic}\n            onReportTopic={this.props.onReportTopic}\n            onLaunchPermissionsEditor={this.handleLaunchPermissionsEditor}\n            onNavigate={this.props.onNavigate} />\n          :\n          <div id=\"info-view-content\" className=\"scrollable-panel\">\n            <div className=\"panel-form-column\">\n              <a href=\"#\" className=\"flat-button float-right\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('general');}}>\n                <i className=\"material-icons\">edit</i>&nbsp;\n                <FormattedMessage id=\"button_edit\" defaultMessage=\"Edit\" description=\"Call to action [Edit]\" />\n              </a>\n              <center>\n                <AvatarUpload\n                  tinode={this.props.tinode}\n                  avatar={this.state.avatar}\n                  readOnly={true}\n                  uid={this.props.topic}\n                  title={this.state.fullName} />\n              </center>\n              <div className=\"group\">\n                <div><label className=\"small\">\n                  <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                    description=\"Label for editing topic name\" />\n                </label></div>\n                <div className=\"large ellipsized\">{this.state.fullName}\n                {this.state.channel ? <img src=\"/img/channel.png\" className=\"channel\" alt=\"channel\" /> : null}</div>\n              </div>\n              {this.state.private ?\n                <div className=\"group\">\n                  <div><label className=\"small\">\n                    <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                      description=\"Label for editing 'private'\" />\n                  </label></div>\n                  <div className=\"large ellipsized\">{this.state.private}</div>\n                </div>\n                : null\n              }\n              <div className=\"group\">\n                <label className=\"small\"><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n                  description=\"Label for user address (ID)\" /></label>&nbsp;\n                <tt>{this.state.address}</tt>\n              </div>\n              <div className=\"group\">\n                <BadgeList trustedBadges={this.state.trustedBadges} />\n              </div>\n              {this.state.description ?\n                <div className=\"group\">\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                      description=\"Label for editing topic description\" />\n                  </label>\n                  <div>{this.state.description}</div>\n                </div> : null}\n            </div>\n            <div className=\"hr\" />\n            <div className=\"panel-form-row\">\n              <label>\n                <FormattedMessage id=\"label_muting_topic\" defaultMessage=\"Muted:\"\n                  description=\"Label for Muting/unmuting the topic\" />\n              </label>\n              <CheckBox name=\"P\" checked={this.state.muted} onChange={this.handleMuted} />\n            </div>\n            {this.state.archived ?\n              <div className=\"panel-form-row\">\n                <label>\n                  <FormattedMessage id=\"label_unarchive_topic\" defaultMessage=\"Archived:\"\n                    description=\"Label for unarchiving the topic\" />\n                </label>\n                <CheckBox name=\"archived\" checked={true} onChange={this.handleUnarchive} />\n              </div>\n              :\n              null\n            }\n            <div className=\"hr\" />\n            <div className=\"panel-form-row\">\n              <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('security');}}>\n                <i className=\"material-icons\">security</i>&nbsp;<FormattedMessage id=\"button_security\"\n                  defaultMessage=\"Security\" description=\"Navigaton button for security panel.\" />\n              </a>\n            </div>\n            {this.state.groupTopic && this.state.sharer ?\n              <>\n                <div className=\"hr\" />\n                <div className=\"panel-form-row\">\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_group_members\" defaultMessage=\"Group members:\"\n                      description=\"Section title or label\" />\n                  </label>\n                </div>\n                <div className=\"panel-form-row\">\n                  <a href=\"#\" className=\"flat-button\" onClick={this.handleShowAddMembers}>\n                    <i className=\"material-icons\">person_add</i> &nbsp;<FormattedMessage id=\"button_add_members\"\n                      defaultMessage=\"Add members\" description=\"Flat button [Add members] (to topic)\" />\n                  </a>\n                </div>\n                <FormattedMessage id=\"group_has_no_members\" defaultMessage=\"No members\"\n                  description=\"Shown in place of group members\">{\n                  (no_members) => <ContactList\n                    tinode={this.props.tinode}\n                    contacts={this.state.contactList}\n                    myUserId={this.props.myUserId}\n                    emptyListMessage={no_members}\n                    topicSelected={this.state.selectedContact}\n                    showOnline={false}\n                    showUnread={false}\n                    showMode={true}\n                    noScroll={true}\n                    onTopicSelected={this.handleMemberSelected}\n                    showContextMenu={this.state.admin ? this.handleContextMenu : false}\n                  />\n                }</FormattedMessage>\n              </>\n              :\n              null\n            }\n          </div>\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(InfoView);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\nimport { bytesToHumanSize } from '../lib/strformat.js';\nimport { isUrlRelative, sanitizeUrl } from '../lib/utils.js';\n\nexport default class Attachment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      downloader: null,\n      progress: 0\n    };\n\n    this.downloadFile = this.downloadFile.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  downloadFile(url, filename, mimetype) {\n    if (!url) {\n      this.props.onError(\"Invalid download URL '\" + url + \"'\");\n      return;\n    }\n\n    const downloader = this.props.tinode.getLargeFileHelper();\n    this.setState({downloader: downloader});\n    downloader.download(url, filename, mimetype,\n      (loaded) => {\n        this.setState({progress: loaded / this.props.size});\n      },\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    ).then(() => {\n      this.setState({downloader: null, progress: 0});\n    }).catch((err) => {\n      if (err) {\n        this.props.onError(\"Error downloading file: \" + err.message, 'err');\n      }\n      this.setState({downloader: null, progress: 0});\n    });\n  }\n\n  handleCancel() {\n    if (this.props.uploading) {\n      this.props.onCancelUpload();\n    } else if (this.state.downloader) {\n      this.state.downloader.cancel();\n    }\n  }\n\n  render() {\n    let filename = this.props.filename || 'file_attachment';\n    if (filename.length > 36) {\n      filename = filename.substr(0, 16) + '...' + filename.substr(-16);\n    }\n    let size = this.props.size > 0 ?\n      <span className=\"small gray\">({bytesToHumanSize(this.props.size)})</span> :\n      null;\n\n    // Detect if the download URL is relative or absolute.\n    // If the URL is relative use LargeFileHelper to attach authentication\n    // credentials to the request.\n    let url, helperFunc;\n    if (!this.props.uploading && !this.state.downloader && isUrlRelative(this.props.downloadUrl)) {\n      // Relative URL. Use download helper.\n      url = '#';\n      helperFunc = (e) => {\n        e.preventDefault();\n        this.downloadFile(this.props.downloadUrl, this.props.filename, this.props.mimetype);\n      };\n    } else {\n      url = sanitizeUrl(this.props.downloadUrl);\n      helperFunc = null;\n    }\n    const downloadWidget = <><i className=\"material-icons\">file_download</i> <FormattedMessage id=\"save_attachment\"\n      defaultMessage=\"save\" description=\"Call to save an attachment\" /></>;\n    return (\n      <div className=\"attachment\">\n        <div><i className=\"material-icons big gray\">insert_drive_file</i></div>\n        <div className=\"flex-column\">\n          <div>{filename} {size}</div>\n          {this.props.uploading || this.state.downloader ?\n            <FileProgress progress={this.props.uploading ? this.props.progress : this.state.progress}\n              onCancel={this.handleCancel} />\n            :\n            <div>{url ?\n              <a href={url} download={this.props.filename} onClick={helperFunc}>{downloadWidget}</a>\n              :\n              <span className=\"light-gray\">{downloadWidget}</span>\n            }</div>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n","// Single message, sent or received.\nimport React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport Attachment from './attachment.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\n\nimport { fullFormatter, quoteFormatter } from '../lib/formatters.js';\nimport { sanitizeImageUrl, sanitizeUrl } from '../lib/utils.js';\n\nclass BaseChatMessage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      progress: 0\n    };\n\n    if (props.uploader) {\n      props.uploader.onProgress = this.handleProgress.bind(this);\n    }\n\n    this.handleImagePreview = this.handleImagePreview.bind(this);\n    this.handleFormButtonClick = this.handleFormButtonClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n    this.handleQuoteClick = this.handleQuoteClick.bind(this);\n\n    this.formatterContext = {\n      getFormatter: (tp) => { return tp == 'QQ' ? quoteFormatter : null; },\n      formatMessage: props.intl.formatMessage.bind(props.intl),\n      viewportWidth: props.viewportWidth,\n      authorizeURL: props.tinode.authorizeURL.bind(props.tinode),\n      onImagePreview: this.handleImagePreview,\n      onFormButtonClick: this.handleFormButtonClick,\n      onQuoteClick: this.handleQuoteClick\n    };\n  }\n\n  handleImagePreview(e) {\n    e.preventDefault();\n    this.props.onImagePreview({\n      url: e.target.src,\n      filename: e.target.title,\n      width: e.target.dataset.width,\n      height: e.target.dataset.height,\n      size: e.target.dataset.size,\n      type: e.target.dataset.mime\n    });\n  }\n\n  handleFormButtonClick(e) {\n    e.preventDefault();\n    const data = {\n      seq: this.props.seq\n    };\n    data.resp = {};\n    if (e.target.dataset.name) {\n      data.resp[e.target.dataset.name] = e.target.dataset.val ? e.target.dataset.val :\n        e.target.dataset.val === undefined ? 1 : '' + e.target.dataset.val;\n    }\n    if (e.target.dataset.act == 'url') {\n      data.ref = sanitizeUrl(e.target.dataset.ref) || 'about:blank';\n    }\n    const text = e.target.dataset.title || 'unknown';\n    this.props.onFormResponse(e.target.dataset.act, text, data);\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const menuItems = this.props.received == Tinode.MESSAGE_STATUS_FAILED ? ['menu_item_send_retry'] : [];\n    if (this.props.userIsWriter &&\n        this.props.received > Tinode.MESSAGE_STATUS_FAILED &&\n        this.props.received < Tinode.MESSAGE_STATUS_DEL_RANGE) {\n      menuItems.push('menu_item_reply');\n      menuItems.push('menu_item_forward');\n    }\n    this.props.showContextMenu({\n      seq: this.props.seq,\n      content: this.props.content,\n      userFrom: this.props.userFrom,\n      userName: this.props.userName,\n      forwarded: this.props.forwarded,\n      y: e.pageY,\n      x: e.pageX,\n      pickReply: this.props.pickReply\n    }, menuItems);\n  }\n\n  handleProgress(ratio) {\n    this.setState({progress: ratio});\n  }\n\n  handleCancelUpload() {\n    this.props.onCancelUpload(this.props.seq, this.props.uploader);\n  }\n\n  handleQuoteClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const replyToSeq = this.props.replyToSeq;\n    if (replyToSeq) {\n      this.props.onQuoteClick(replyToSeq);\n    }\n  }\n\n  render() {\n    const sideClass = this.props.deleted ? 'center' :\n      (this.props.sequence + ' ' + (this.props.response ? 'left' : 'right'));\n    const bubbleClass = (this.props.sequence == 'single' || this.props.sequence == 'last') ? 'bubble tip' : 'bubble';\n    const avatar = this.props.deleted ? null : (this.props.userAvatar || true);\n    const fullDisplay = (this.props.isGroup && this.props.response && !this.props.deleted &&\n      (this.props.sequence == 'single' || this.props.sequence == 'last'));\n\n    let content = this.props.content;\n    const attachments = [];\n    if (this.props.mimeType == Drafty.getContentType() && Drafty.isValid(content)) {\n      Drafty.attachments(content, (att, i) => {\n        if (att.mime == 'application/json') {\n          // Don't show json objects as attachments.\n          // They are not meant for users.\n          return;\n        }\n        attachments.push(<Attachment\n          tinode={this.props.tinode}\n          downloadUrl={Drafty.getDownloadUrl(att)}\n          filename={att.name}\n          uploading={Drafty.isProcessing(att)}\n          mimetype={att.mime}\n          size={Drafty.getEntitySize(att)}\n          progress={this.state.progress}\n          onCancelUpload={this.handleCancelUpload}\n          onError={this.props.onError}\n          key={i} />);\n      }, this);\n      const tree = Drafty.format(content, fullFormatter, this.formatterContext);\n      content = React.createElement(React.Fragment, null, tree);\n    } else if (this.props.deleted) {\n      // Message represents a range of deleted messages.\n      content = <><i className=\"material-icons gray\">block</i> <i className=\"gray\">\n        <FormattedMessage id=\"deleted_content\"\n          defaultMessage=\"content deleted\" description=\"Shown when messages are deleted\" />\n      </i></>\n    } else if (typeof content != 'string') {\n      content = <><i className=\"material-icons gray\">warning_amber</i> <i className=\"gray\">\n        <FormattedMessage id=\"invalid_content\"\n          defaultMessage=\"invalid content\" description=\"Shown when the message is unreadable\" /></i></>\n    }\n\n    return (\n      <li ref={this.props.innerRef} className={sideClass}>\n        {this.props.isGroup && this.props.response ?\n          <div className=\"avatar-box\">\n            {fullDisplay ?\n              <LetterTile\n                tinode={this.props.tinode}\n                topic={this.props.userFrom}\n                title={this.props.userName}\n                avatar={avatar} /> :\n              null}\n          </div> :\n          null}\n        <div>\n          <div className={bubbleClass}>\n            <div className=\"content-meta\">\n              <div className=\"message-content\">\n                {content}\n                {attachments}\n              </div>\n              {this.props.timestamp ?\n                <ReceivedMarker\n                  timestamp={this.props.timestamp}\n                  received={this.props.received} />\n                : null}\n            </div>\n            {this.props.deleted || !this.props.showContextMenu ?\n              null :\n              <span className=\"menuTrigger\">\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">expand_more</i>\n                </a>\n              </span>\n            }\n          </div>\n          {fullDisplay ?\n            <div className=\"author\">\n              {this.props.userName ||\n                <i><FormattedMessage id=\"user_not_found\" defaultMessage=\"Not found\"\n                description=\"In place of a user's full name when the user is not found.\" /></i>\n              }\n            </div>\n            : null\n          }\n        </div>\n      </li>\n    );\n  }\n};\n\nconst IntlChatMessage = injectIntl(BaseChatMessage);\nconst ChatMessage = React.forwardRef((props, ref) => <IntlChatMessage innerRef = {ref} {...props} />);\n\nexport default ChatMessage;\n","// Send message form.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport { KEYPRESS_DELAY } from '../config.js';\nimport { filePasted } from '../lib/blob-helpers.js';\nimport { quoteFormatter, replyFormatter } from '../lib/formatters.js';\n\nconst messages = defineMessages({\n  messaging_disabled: {\n    id: 'messaging_disabled_prompt',\n    defaultMessage: 'Messaging disabled',\n    description: 'Prompt in SendMessage in read-only topic'\n  },\n  type_new_message: {\n    id: 'new_message_prompt',\n    defaultMessage: 'New message',\n    description: 'Prompt in send message field'\n  },\n  add_image_caption: {\n    id: 'image_caption_prompt',\n    defaultMessage: 'Image caption',\n    description: 'Prompt in SendMessage for attached image'\n  },\n  file_attachment_too_large: {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  },\n  cannot_initiate_upload: {\n    id: 'cannot_initiate_file_upload',\n    defaultMessage: 'Cannot initiate file upload.',\n    description: 'Generic error messagewhen attachment fails'\n  },\n});\n\nclass SendMessage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      message: '',\n      // Make initial keypress time as if it happened 5001 milliseconds in the past.\n      keypressTimestamp: new Date().getTime() - KEYPRESS_DELAY - 1\n    };\n\n    this.handlePasteEvent = this.handlePasteEvent.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleSend = this.handleSend.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleMessageTyping = this.handleMessageTyping.bind(this);\n\n    this.handleQuoteClick = this.handleQuoteClick.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.addEventListener('paste', this.handlePasteEvent, false);\n    }\n\n    this.setState({quote: this.props.replyTo ?\n      Drafty.format(this.props.replyTo.content, replyFormatter, {\n        formatMessage: this.props.intl.formatMessage.bind(this.props.intl),\n        authorizeURL: this.props.tinode.authorizeURL.bind(this.props.tinode)\n      }) :\n      null});\n  }\n\n  componentWillUnmount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.removeEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.messageEditArea) {\n      this.messageEditArea.focus();\n    }\n\n    if (prevProps.replyTo != this.props.replyTo) {\n      this.setState({quote: this.props.replyTo ?\n        Drafty.format(this.props.replyTo.content, replyFormatter, {\n          formatMessage: this.props.intl.formatMessage.bind(this.props.intl),\n          authorizeURL: this.props.tinode.authorizeURL.bind(this.props.tinode)\n        }) :\n        null});\n    }\n  }\n\n  handlePasteEvent(e) {\n    if (this.props.disabled) {\n      return;\n    }\n    // FIXME: handle large files too.\n    if (filePasted(e,\n      (bits, mime, width, height, fname) => {\n        this.props.onAttachImage(mime, bits, width, height, fname);\n      },\n      (mime, bits, fname) => {\n        this.props.onAttachFile(mime, bits, fname);\n      },\n      this.props.onError)) {\n\n      // If a file was pasted, don't paste base64 data into input field.\n      e.preventDefault();\n    }\n  }\n\n  handleAttachImage(e) {\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachImage(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleAttachFile(e) {\n    const {formatMessage} = this.props.intl;\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachFile(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleSend(e) {\n    e.preventDefault();\n    const message = this.state.message.trim();\n    if (message || this.props.acceptBlank || this.props.noInput) {\n      this.props.onSendMessage(message);\n      this.setState({message: ''});\n    }\n  }\n\n  /* Send on Enter key */\n  handleKeyPress(e) {\n    // Remove this if you don't want Enter to trigger send\n    if (e.key === 'Enter') {\n      // Have Shift-Enter insert a line break instead\n      if (!e.shiftKey) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.handleSend(e);\n      }\n    }\n  }\n\n  handleMessageTyping(e) {\n    const newState = {message: e.target.value};\n    if (this.props.onKeyPress) {\n      const now = new Date().getTime();\n      if (now - this.state.keypressTimestamp > KEYPRESS_DELAY) {\n        this.props.onKeyPress();\n        newState.keypressTimestamp = now;\n      }\n    }\n    this.setState(newState);\n  }\n\n  handleQuoteClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.props.replyTo && this.props.onQuoteClick) {\n      const replyToSeq = this.props.replyTo.seq;\n      this.props.onQuoteClick(replyToSeq);\n    }\n  }\n\n  render() {\n    const { formatMessage } = this.props.intl;\n    const prompt = this.props.disabled ?\n      formatMessage(messages.messaging_disabled) :\n      (this.props.messagePrompt ?\n        formatMessage(messages[this.props.messagePrompt]) :\n        formatMessage(messages.type_new_message));\n\n    return (\n      <div id=\"send-message-wrapper\">\n      {this.state.quote ?\n        <div id=\"reply-quote-preview\">\n          <div className=\"cancel\">\n            <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancelReply();}}><i className=\"material-icons gray\">close</i></a>\n          </div>\n          {this.state.quote}\n        </div>\n      :\n      null}\n\n      <div id=\"send-message-panel\">\n        {!this.props.disabled ?\n          <>\n            {this.props.onAttachFile ?\n              <>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachImage.click();}} title=\"Add image\">\n                  <i className=\"material-icons secondary\">photo</i>\n                </a>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachFile.click();}} title=\"Attach file\">\n                  <i className=\"material-icons secondary\">attach_file</i>\n                </a>\n              </>\n              :\n              null}\n            {this.props.noInput ?\n              <div className=\"hr thin\" /> :\n              <textarea id=\"sendMessage\" placeholder={prompt}\n                value={this.state.message} onChange={this.handleMessageTyping}\n                onKeyPress={this.handleKeyPress}\n                ref={(ref) => {this.messageEditArea = ref;}}\n                autoFocus />}\n            <a href=\"#\" onClick={this.handleSend} title=\"Send\">\n              <i className=\"material-icons\">send</i>\n            </a>\n            <input type=\"file\" ref={(ref) => {this.attachFile = ref;}}\n              onChange={this.handleAttachFile} style={{display: 'none'}} />\n            <input type=\"file\" ref={(ref) => {this.attachImage = ref;}} accept=\"image/*\"\n              onChange={this.handleAttachImage} style={{display: 'none'}} />\n          </>\n          :\n          <div id=\"writing-disabled\">{prompt}</div>\n        }\n      </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SendMessage);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { bytesToHumanSize, shortenFileName } from '../lib/strformat.js';\n\n// Get material icon name from mime type.\nfunction iconFromMime(mime) {\n  // If more icons become available in material icons, add them to this mime-to-icon mapping.\n  const mimeToIcon = {default: 'insert_drive_file', image: 'image', text: 'description', video: 'theaters'};\n\n  return mimeToIcon[mime] || mimeToIcon[(mime || '').split('/')[0]] || mimeToIcon['default'];\n}\n\nexport default class DocPreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleSendDoc = this.handleSendDoc.bind(this);\n  }\n\n  handleSendDoc(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(this.props.content.file);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          <span>{this.props.content.name}</span>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\">\n          <div className=\"flex-column narrow\">\n            <i className=\"material-icons gray\">{iconFromMime(this.props.content.type)}</i>\n            <div><b><FormattedMessage id=\"label_file_name\" defaultMessage=\"File name:\"\n              description=\"Label for a file name\" /></b> {shortenFileName(this.props.content.name, 24) || '-'}</div>\n            <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n              description=\"Label for file content type (mime)\" /></b> {this.props.content.type || 'application/octet-stream'}</div>\n            <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n              description=\"Label for file size\" /></b> {bytesToHumanSize(this.props.content.size)}</div>\n          </div>\n        </div>\n        <SendMessage\n          noInput={true}\n          tinode={this.props.tinode}\n          replyTo={this.props.replyTo}\n          onCancelReply={this.props.onCancelReply}\n          onSendMessage={this.handleSendDoc}\n          onError={this.props.onError} />\n      </div>\n    );\n  }\n};\n","// GroupSubs: a list of group subscribers currently online.\n// Show in the topic title bar\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { MAX_ONLINE_IN_TOPIC } from '../config.js'\n\nimport LetterTile from './letter-tile.jsx';\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class GroupSubs extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const usersOnline = [];\n    const totalCount = (this.props.subscribers || []).length;\n    const countToShow = Math.min(MAX_ONLINE_IN_TOPIC, totalCount);\n\n    (this.props.subscribers || []).some((sub) => {\n      usersOnline.push(\n        <div className=\"avatar-box\" key={sub.user}>\n          <LetterTile\n            tinode={this.props.tinode}\n            topic={sub.user}\n            avatar={makeImageUrl(sub.public ? sub.public.photo : null) || true}\n            title={sub.public ? sub.public.fn : null} />\n        </div>\n      );\n      return usersOnline.length == countToShow;\n    });\n\n    return (\n      <div id=\"topic-users\">{usersOnline} {totalCount > countToShow ?\n        <span>\n          <FormattedMessage id=\"more_online_members\" defaultMessage=\"+{overflow} more\"\n              description=\"Shown in MessagesView title bar when the number of online subscribers exceeds MAX_ONLINE_IN_TOPIC\"\n              values={{ overflow: (totalCount - countToShow) }} />\n        </span> : null}\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\nimport { bytesToHumanSize, shortenFileName } from '../lib/strformat.js';\n\nexport default class ImagePreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      width: 0,\n      height: 0\n    };\n\n    this.handleSendImage = this.handleSendImage.bind(this);\n  }\n\n  assignWidth(node) {\n    if (node && !this.state.width) {\n      const bounds = node.getBoundingClientRect();\n      this.setState({\n        width: bounds.width | 0,\n        height: bounds.height | 0\n      });\n    }\n  }\n\n  handleSendImage(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(caption, this.props.content.blob);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n\n    const dim = fitImageSize(this.props.content.width, this.props.content.height,\n      this.state.width, this.state.height, false);\n    const size = dim ? { width: dim.dstWidth + 'px', height: dim.dstHeight + 'px' } :\n      ((this.props.content.width > this.props.content.height) ? {width: '100%'} : {height: '100%'});\n    size.maxWidth = '100%';\n    size.maxHeight = '100%';\n\n    // Average font aspect ratio is ~0.5; File name takes 1/3 of the viewport width.\n    const maxlength = Math.max(((this.state.width / REM_SIZE / 1.5) | 0) - 2, 12);\n    const fname = shortenFileName(this.props.content.name, maxlength) || '-';\n\n    const width = this.props.content.width || '-';\n    const height = this.props.content.height || '-';\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          {!this.props.onSendMessage ?\n            <a href={this.props.content.url} download={this.props.content.name}>\n              <i className=\"material-icons\">file_download</i> <FormattedMessage\n                id=\"download_action\" defaultMessage=\"download\" description=\"Call to action [download]\" />\n            </a>\n            :\n            <span>{fname}</span>\n          }\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\" ref={(node) => this.assignWidth(node)}>\n          <img src={this.props.content.url} style={size} className=\"image-preview\" alt={this.props.content.name} />\n        </div>\n        {this.props.onSendMessage ?\n          <SendMessage\n            messagePrompt=\"add_image_caption\"\n            acceptBlank={true}\n            tinode={this.props.tinode}\n            replyTo={this.props.replyTo}\n            onCancelReply={this.props.onCancelReply}\n            onSendMessage={this.handleSendImage}\n            onError={this.props.onError} />\n          :\n          <div id=\"image-preview-footer\">\n            <div>\n              <div><b><FormattedMessage id=\"label_file_name\" defaultMessage=\"File name:\"\n                description=\"Label for a file name\" /></b></div>\n              <div><span title={this.props.content.name}>{fname}</span></div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n                description=\"Label for file content type (mime)\" /></b></div>\n              <div>{this.props.content.type}</div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n                description=\"Label for file size\" /></b></div>\n              <div>{width} &times; {height} px; {bytesToHumanSize(this.props.content.size)}</div>\n            </div>\n          </div>}\n      </div>\n    );\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Invitation extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleButtonAction = this.handleButtonAction.bind(this);\n  }\n\n  handleButtonAction(evt, data) {\n    evt.preventDefault();\n    this.props.onAction(data);\n  }\n\n  render() {\n    return (\n      <div className=\"accept-invite-panel\">\n        <div className=\"title\">\n          <FormattedMessage id=\"chat_invitation\"\n            defaultMessage=\"You are invited to start a new chat. What would you like to do?\"\n            description=\"New chat invitation message: [Accept] [Ignore] [Block].\" />\n        </div>\n        <div className=\"footer\">\n          <button className=\"primary\" onClick={event => { this.handleButtonAction(event, \"accept\"); }}>\n            <FormattedMessage id=\"chat_invitation_accept\"\n              defaultMessage=\"Accept\" description=\"Action [Accept] for chat invitation.\" />\n          </button>\n          <button className=\"secondary\" onClick={event => { this.handleButtonAction(event, \"delete\"); }}>\n            <FormattedMessage id=\"chat_invitation_ignore\"\n              defaultMessage=\"Ignore\" description=\"Action [Ignore] for chat invitation.\" />\n          </button>\n          <button className=\"secondary\" onClick={event => { this.handleButtonAction(event, \"block\"); }}>\n            <FormattedMessage id=\"chat_invitation_block\"\n              defaultMessage=\"Block\" description=\"Action [Block] for chat invitation.\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n","/* This is just a static page to display when no conversation is selected. */\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME } from '../config.js';\n\nexport default class LogoView extends React.PureComponent {\n  render() {\n    const version = APP_NAME + ' (' + Tinode.getLibrary() + ')';\n    return (\n      <div id=\"dummy-view\">\n        <div>\n          <a href=\"https://github.com/tinode/chat/\">\n            <img id=\"logo\" alt=\"logo\" src=\"img/logo.svg\" />\n            <h2>Tinode Web</h2>\n          </a>\n          <p><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\"\n            description=\"Label for a client version\" /> {version}</p>\n          <p><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\"\n            description=\"Label for a server version\" /> {this.props.serverVersion} ({this.props.serverAddress})</p>\n        </div>\n      </div>\n    );\n  }\n};\n","// Utility class for hash navigation.\n\n// Parse hash as in http://www.example.com/path#hash as if it were\n// path and arguments.\nexport default class HashNavigation {\n  static parseUrlHash(hash) {\n    // Split path from args, path -> parts[0], args->path[1]\n    const parts = hash.split('?', 2);\n    const params = {};\n    let path = [];\n    if (parts[0]) {\n      path = parts[0].replace('#', '').split('/');\n    }\n    if (parts[1]) {\n      parts[1].split('&').forEach(function(part) {\n        const item = part.split('=');\n        if (item[0]) {\n          params[decodeURIComponent(item[0])] = decodeURIComponent(item[1]);\n        }\n      });\n    }\n    return {path: path, params: params};\n  }\n\n  static navigateTo(url) {\n    window.location.hash = url;\n  }\n\n  static composeUrlHash(path, params) {\n    let url = path.join('/');\n    const args = [];\n    for (const key in params) {\n      if (params.hasOwnProperty(key)) {\n        args.push(key + '=' + params[key]);\n      }\n    }\n    if (args.length > 0) {\n      url += '?' + args.join('&');\n    }\n    return url;\n  }\n\n  static addUrlParam(hash, key, value) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.params[key] = value;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static removeUrlParam(hash, key) {\n    const parsed = this.parseUrlHash(hash);\n    delete parsed.params[key];\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlSidePanel(hash, sidepanel) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[0] = sidepanel;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlInfoPanel(hash, infopanel) {\n    const parsed = this.parseUrlHash(hash);\n    if (infopanel) {\n      parsed.params.info = infopanel;\n    } else {\n      delete parsed.params.info;\n    }\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlTopic(hash, topic) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[1] = topic;\n    // Close InfoView on topic change.\n    delete parsed.params.info;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n}\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\nconst Drafty = Tinode.Drafty;\n\nimport ChatMessage from '../widgets/chat-message.jsx';\nimport ContactBadges from '../widgets/contact-badges.jsx';\nimport DocPreview from '../widgets/doc-preview.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupSubs from '../widgets/group-subs.jsx';\nimport ImagePreview from '../widgets/image-preview.jsx';\nimport Invitation from '../widgets/invitation.jsx';\nimport LetterTile from '../widgets/letter-tile.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport LogoView from './logo-view.jsx';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { DEFAULT_P2P_ACCESS_MODE, IMAGE_PREVIEW_DIM, IMAGE_THUMBNAIL_DIM, KEYPRESS_DELAY,\n  MESSAGES_PAGE, MAX_EXTERN_ATTACHMENT_SIZE, MAX_IMAGE_DIM, MAX_INBAND_ATTACHMENT_SIZE,\n  READ_DELAY, QUOTED_REPLY_LENGTH } from '../config.js';\nimport { SUPPORTED_IMAGE_FORMATS, blobToBase64, base64ToBlob, filePasted, fileToBase64,\n  imageScaled, makeImageUrl } from '../lib/blob-helpers.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { bytesToHumanSize, shortDateFormat, letterTileColorId } from '../lib/strformat.js';\nimport { sanitizeImageUrl } from '../lib/utils.js';\n\n// Run timer with this frequency (ms) for checking notification queue.\nconst NOTIFICATION_EXEC_INTERVAL = 300;\n\nconst messages = defineMessages({\n  online_now: {\n    id: 'online_now',\n    defaultMessage: 'online now',\n    description: 'Indicator that the user or topic is currently online',\n  },\n  last_seen: {\n    id: 'last_seen_timestamp',\n    defaultMessage: 'Last seen',\n    description: 'Label for the timestamp of when the user or topic was last online'\n  },\n  not_found: {\n    id: 'title_not_found',\n    defaultMessage: 'Not found',\n    description: 'Title shown when topic is not found'\n  },\n  channel: {\n    id: 'channel',\n    defaultMessage: 'channel',\n    description: 'Subtitle shown for channels in MessagesView instead of last seen'\n  },\n  file_attachment_too_large: {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  },\n  invalid_content: {\n    id: 'invalid_content',\n    defaultMessage: 'invalid content',\n    description: 'Shown when the message is unreadable'\n  },\n});\n\n// Checks if the access permissions are granted but not yet accepted.\nfunction isUnconfirmed(acs) {\n  if (acs) {\n    const ex = acs.getExcessive() || '';\n    return acs.isJoiner('given') && (ex.includes('R') || ex.includes('W'));\n  }\n  return false;\n}\n\nfunction isPeerRestricted(acs) {\n  if (acs) {\n    const ms = acs.getMissing() || '';\n    return acs.isJoiner('want') && (ms.includes('R') || ms.includes('W'));\n  }\n  return false;\n}\n\nclass MessagesView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = MessagesView.getDerivedStateFromProps(props, {});\n\n    this.leave = this.leave.bind(this);\n    this.sendMessage = this.sendMessage.bind(this);\n    this.retrySend = this.retrySend.bind(this);\n    this.sendImageAttachment = this.sendImageAttachment.bind(this);\n    this.sendFileAttachment = this.sendFileAttachment.bind(this);\n    this.sendKeyPress = this.sendKeyPress.bind(this);\n    this.subscribe = this.subscribe.bind(this);\n    this.handleScrollReference = this.handleScrollReference.bind(this);\n    this.handleScrollEvent = this.handleScrollEvent.bind(this);\n    this.handleDescChange = this.handleDescChange.bind(this);\n    this.handleSubsUpdated = this.handleSubsUpdated.bind(this);\n    this.handleMessageUpdate = this.handleMessageUpdate.bind(this);\n    this.handleAllMessagesReceived = this.handleAllMessagesReceived.bind(this);\n    this.handleInfoReceipt = this.handleInfoReceipt.bind(this);\n    this.handleImagePostview = this.handleImagePostview.bind(this);\n    this.handleClosePreview = this.handleClosePreview.bind(this);\n    this.handleFormResponse = this.handleFormResponse.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleShowContextMenuMessage = this.handleShowContextMenuMessage.bind(this);\n    this.handleNewChatAcceptance = this.handleNewChatAcceptance.bind(this);\n    this.handleEnablePeer = this.handleEnablePeer.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n    this.postReadNotification = this.postReadNotification.bind(this);\n    this.clearNotificationQueue = this.clearNotificationQueue.bind(this);\n\n    this.handlePickReply = this.handlePickReply.bind(this);\n    this.handleCancelReply = this.handleCancelReply.bind(this);\n    this.handleQuoteClick = this.handleQuoteClick.bind(this);\n\n    this.chatMessageRefs = {};\n    this.getOrCreateMessageRef = this.getOrCreateMessageRef.bind(this);\n\n    this.readNotificationQueue = [];\n    this.readNotificationTimer = null;\n  }\n\n  getOrCreateMessageRef(seqId) {\n    if (this.chatMessageRefs.hasOwnProperty(seqId)) {\n      return this.chatMessageRefs[seqId];\n    }\n    const ref = React.createRef();\n    this.chatMessageRefs[seqId] = ref;\n    return ref;\n  }\n\n  componentDidMount() {\n    if (this.messagesScroller) {\n      this.messagesScroller.addEventListener('scroll', this.handleScrollEvent);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messagesScroller) {\n      this.messagesScroller.removeEventListener('scroll', this.handleScrollEvent);\n    }\n\n    // Flush all notifications.\n    this.clearNotificationQueue();\n  }\n\n  // Scroll last message into view on component update e.g. on message received\n  // or vertical shrinking.\n  componentDidUpdate(prevProps, prevState) {\n    if (this.messagesScroller) {\n      if (prevState.topic != this.state.topic || prevState.messageCount != this.state.messageCount) {\n        // New message\n        this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n      } else if (prevProps.viewportHeight > this.props.viewportHeight) {\n        // Componet changed height.\n        this.messagesScroller.scrollTop += prevProps.viewportHeight - this.props.viewportHeight;\n      }\n    }\n\n    const topic = this.props.tinode ? this.props.tinode.getTopic(this.state.topic) : undefined;\n    if (this.state.topic != prevState.topic) {\n      if (prevState.topic && !Tinode.isNewGroupTopicName(prevState.topic)) {\n        this.leave(prevState.topic);\n      }\n\n      if (topic) {\n        topic.onData = this.handleMessageUpdate;\n        topic.onAllMessagesReceived = this.handleAllMessagesReceived;\n        topic.onInfo = this.handleInfoReceipt;\n        topic.onMetaDesc = this.handleDescChange;\n        topic.onSubsUpdated = this.handleSubsUpdated;\n        topic.onPres = this.handleSubsUpdated;\n      }\n    }\n\n    if (!this.props.applicationVisible) {\n      // If application is not visible, flush all unsent 'read' notifications.\n      this.clearNotificationQueue();\n    } else {\n      // Otherwise assume there are unread messages.\n      this.postReadNotification(0);\n    }\n\n    if ((this.state.topic != prevState.topic) || !prevProps.ready) {\n      this.subscribe(topic);\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let nextState = {};\n    if (!nextProps.topic) {\n      // Default state: no topic.\n      nextState = {\n        messageCount: 0,\n        latestClearId: -1,\n        onlineSubs: [],\n        topic: null,\n        title: '',\n        avatar: null,\n        isVerified: false,\n        isStaff: false,\n        isDangerous: false,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false,\n        peerMessagingDisabled: false,\n        channel: false,\n        reply: null\n      };\n    } else if (nextProps.topic != prevState.topic) {\n      const topic = nextProps.tinode.getTopic(nextProps.topic);\n\n      let reply = null;\n      if (nextProps.forwardedMessage) {\n        // We are forwarding a message. Show preview.\n        const preview = nextProps.forwardedMessage.preview;\n        reply = {\n          content: preview,\n          forwarded: nextProps.forwardedMessage.head.forwarded,\n          seq: null\n        };\n      }\n\n      nextState = {\n        topic: nextProps.topic,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false,\n        reply: reply\n      };\n\n      if (topic) {\n        // Topic exists.\n        const subs = [];\n\n        if (nextProps.connected) {\n          topic.subscribers((sub) => {\n            if (sub.online && sub.user != nextProps.myUserId) {\n              subs.push(sub);\n            }\n          });\n        }\n\n        Object.assign(nextState, {\n          onlineSubs: subs\n        });\n\n        if (topic.public) {\n          Object.assign(nextState, {\n            title: topic.public.fn,\n            avatar: makeImageUrl(topic.public.photo)\n          });\n        } else {\n          Object.assign(nextState, {\n            title: '',\n            avatar: null\n          });\n        }\n\n        const peer = topic.p2pPeerDesc();\n        if (peer) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: isPeerRestricted(peer.acs)\n          });\n        } else if (prevState.peerMessagingDisabled) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: false\n          });\n        }\n        Object.assign(nextState, {\n          messageCount: topic.messageCount(),\n          latestClearId: topic.maxClearId(),\n          channel: topic.isChannelType()\n        });\n      } else {\n        // Invalid topic.\n        Object.assign(nextState, {\n          messageCount: 0,\n          latestClearId: -1,\n          onlineSubs: [],\n          title: '',\n          avatar: null,\n          peerMessagingDisabled: false,\n          channel: false\n        });\n      }\n    }\n\n    if (nextProps.acs) {\n      if (nextProps.acs.isWriter() != prevState.isWriter) {\n        nextState.isWriter = !prevState.isWriter;\n      }\n      if (nextProps.acs.isReader() != prevState.isReader) {\n        nextState.isReader = !prevState.isReader;\n      }\n      if (!nextProps.acs.isReader('given') != prevState.readingBlocked) {\n        nextState.readingBlocked = !prevState.readingBlocked;\n      }\n      if (nextProps.acs.isSharer() != prevState.isSharer) {\n        nextState.isSharer = !prevState.isSharer;\n      }\n    } else {\n      if (prevState.isWriter) {\n        nextState.isWriter = false;\n      }\n      if (prevState.isReader) {\n        nextState.isReader = false;\n      }\n      if (!prevState.readingBlocked) {\n        prevState.readingBlocked = true;\n      }\n      if (prevState.isSharer) {\n        nextState.isSharer = false;\n      }\n    }\n\n    if (isUnconfirmed(nextProps.acs) == !prevState.unconformed) {\n      nextState.unconfirmed = !prevState.unconformed;\n    }\n\n    // Clear subscribers online when there is no connection.\n    if (!nextProps.connected && prevState.onlineSubs && prevState.onlineSubs.length > 0) {\n      nextState.onlineSubs = [];\n    }\n\n    return nextState;\n  }\n\n  subscribe(topic) {\n    if (!topic || topic.isSubscribed() || !this.props.ready) {\n      return;\n    }\n\n    // Is this a new topic?\n    const newTopic = (this.props.newTopicParams && this.props.newTopicParams._topicName == this.props.topic);\n\n    // Don't request the tags. They are useless unless the user\n    // is the owner and is editing the topic.\n    let getQuery = topic.startMetaQuery().withLaterDesc().withLaterSub();\n    if (this.state.isReader || newTopic) {\n      // Reading is either permitted or we don't know because it's a new topic. Ask for messages.\n      getQuery = getQuery.withLaterData(MESSAGES_PAGE);\n      if (this.state.isReader) {\n        getQuery = getQuery.withLaterDel();\n      }\n      // And show \"loading\" spinner.\n      this.setState({ fetchingMessages: true });\n    }\n\n    const setQuery = newTopic ? this.props.newTopicParams : undefined;\n    topic.subscribe(getQuery.build(), setQuery)\n      .then((ctrl) => {\n        if (ctrl.code == 303) {\n          // Redirect to another topic requested.\n          HashNavigation.navigateTo(HashNavigation.setUrlTopic('', ctrl.params.topic));\n          return;\n        }\n        if (this.state.topic != ctrl.topic) {\n          this.setState({topic: ctrl.topic});\n        }\n        this.props.onNewTopicCreated(this.props.topic, ctrl.topic);\n        // If there are unsent messages, try sending them now.\n        topic.queuedMessages((pub) => {\n          if (!pub._sending && topic.isSubscribed()) {\n            this.retrySend(pub);\n          }\n        });\n      })\n      .catch((err) => {\n        console.error(\"Failed subscription to\", this.state.topic);\n        this.props.onError(err.message, 'err');\n        const blankState = MessagesView.getDerivedStateFromProps({}, {});\n        blankState.title = this.props.intl.formatMessage(messages.not_found);\n        this.setState(blankState);\n      });\n  }\n\n  leave(oldTopicName) {\n    if (!oldTopicName || !this.props.tinode.isTopicCached(oldTopicName)) {\n      return;\n    }\n    const oldTopic = this.props.tinode.getTopic(oldTopicName);\n    if (oldTopic && oldTopic.isSubscribed()) {\n      oldTopic.leave(false)\n        .catch(() => { /* do nothing here */ })\n        .finally(() => {\n          // We don't care if the request succeeded or failed.\n          // The topic is dead regardless.\n          this.setState({fetchingMessages: false});\n          oldTopic.onData = undefined;\n          oldTopic.onAllMessagesReceived = undefined;\n          oldTopic.onInfo = undefined;\n          oldTopic.onMetaDesc = undefined;\n          oldTopic.onSubsUpdated = undefined;\n          oldTopic.onPres = undefined;\n        });\n    }\n  }\n\n  handleScrollReference(node) {\n    if (node) {\n      node.addEventListener('scroll', this.handleScrollEvent);\n      this.messagesScroller = node;\n      this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n    }\n  }\n\n  // Get older messages\n  handleScrollEvent(event) {\n    this.setState({scrollPosition: event.target.scrollHeight - event.target.scrollTop});\n    if (this.state.fetchingMessages) {\n      return;\n    }\n\n    if (event.target.scrollTop <= 0) {\n      const topic = this.props.tinode.getTopic(this.state.topic);\n      if (topic && topic.isSubscribed() && topic.msgHasMoreMessages()) {\n        this.setState({fetchingMessages: true}, () => {\n          topic.getMessagesPage(MESSAGES_PAGE)\n            .catch((err) => this.props.onError(err.message, 'err'))\n            .finally(() => this.setState({fetchingMessages: false}));\n          });\n      }\n    }\n  }\n\n  handleDescChange(desc) {\n    if (desc.public) {\n      this.setState({\n        title: desc.public.fn,\n        avatar: makeImageUrl(desc.public.photo)\n      });\n    } else {\n      this.setState({\n        title: '',\n        avatar: null\n      });\n    }\n\n    if (desc.acs) {\n      this.setState({\n        isWriter: desc.acs.isWriter(),\n        isReader: desc.acs.isReader(),\n        readingBlocked: !desc.acs.isReader('given'),\n        unconfirmed: isUnconfirmed(desc.acs),\n      });\n    }\n  }\n\n  postReadNotification(seq) {\n    // Ignore notifications if the app is invisible.\n    if (!this.props.applicationVisible) {\n      return;\n    }\n\n    // Set up the timer if it's not running already.\n    if (!this.readNotificationTimer) {\n      this.readNotificationTimer = setInterval(() => {\n        if (this.readNotificationQueue.length == 0) {\n          // Shut down the timer if the queue is empty.\n          clearInterval(this.readNotificationTimer);\n          this.readNotificationTimer = null;\n          return;\n        }\n\n        let seq = -1;\n        while (this.readNotificationQueue.length > 0) {\n          const n = this.readNotificationQueue[0];\n          if (n.topicName != this.state.topic) {\n            // Topic has changed. Drop the notification.\n            this.readNotificationQueue.shift();\n            continue;\n          }\n\n          const now = new Date();\n          if (n.sendAt <= now) {\n            // Remove expired notification from queue.\n            this.readNotificationQueue.shift();\n            seq = Math.max(seq, n.seq);\n          } else {\n            break;\n          }\n        }\n\n        // Send only one notification for the whole batch of messages.\n        if (seq >= 0) {\n          const topic = this.props.tinode.getTopic(this.state.topic);\n          if (topic) {\n            topic.noteRead(seq);\n          }\n        }\n      }, NOTIFICATION_EXEC_INTERVAL);\n    }\n\n    const now = new Date();\n    this.readNotificationQueue.push({\n      topicName: this.state.topic,\n      seq: seq,\n      sendAt: now.setMilliseconds(now.getMilliseconds() + READ_DELAY)\n    });\n  }\n\n  // Clear notification queue and timer.\n  clearNotificationQueue() {\n    this.readNotificationQueue = [];\n    if (this.readNotificationTimer) {\n      clearInterval(this.readNotificationTimer);\n      this.readNotificationTimer = null;\n    }\n  }\n\n  handleSubsUpdated() {\n    if (this.state.topic) {\n      const subs = [];\n      const topic = this.props.tinode.getTopic(this.state.topic);\n      topic.subscribers((sub) => {\n        if (sub.online && sub.user != this.props.myUserId) {\n          subs.push(sub);\n        }\n      });\n      const newState = {onlineSubs: subs};\n      const peer = topic.p2pPeerDesc();\n      if (peer) {\n        Object.assign(newState, {\n          peerMessagingDisabled: isPeerRestricted(peer.acs)\n        });\n      } else if (this.state.peerMessagingDisabled) {\n        Object.assign(newState, {\n          peerMessagingDisabled: false\n        });\n      }\n      this.setState(newState);\n    }\n  }\n\n  // The 'msg' could be false-ish if some message ranges were deleted.\n  handleMessageUpdate(msg) {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (!msg) {\n      // msg could be null if one or more messages were deleted.\n      // Updating state to force redraw.\n      this.setState({latestClearId: topic.maxClearId()});\n      return;\n    }\n\n    clearTimeout(this.keyPressTimer)\n    this.setState({messageCount: topic.messageCount(), typingIndicator: false});\n\n    // Scroll to the bottom if the message is added to the end of the message list.\n    // TODO: This should be replaced by showing a \"scroll to bottom\" button.\n    if (topic.isNewMessage(msg.seq)) {\n      this.setState({scrollPosition: 0});\n    }\n\n    // Aknowledge messages except own messages. They are\n    // automatically assumed to be read and recived.\n    const status = topic.msgStatus(msg, true);\n    if (status >= Tinode.MESSAGE_STATUS_SENT && msg.from != this.props.myUserId) {\n      this.postReadNotification(msg.seq);\n    }\n    // This will send \"received\" notifications right away.\n    this.props.onData(msg);\n  }\n\n  handleAllMessagesReceived(count) {\n    this.setState({fetchingMessages: false});\n    if (count > 0) {\n      // 0 means \"latest\".\n      this.postReadNotification(0);\n    }\n  }\n\n  handleInfoReceipt(info) {\n    switch (info.what) {\n      case 'kp': {\n        clearTimeout(this.keyPressTimer);\n        this.keyPressTimer = setTimeout(() => {\n          this.setState({typingIndicator: false});\n        }, KEYPRESS_DELAY + 1000);\n        if (!this.state.typingIndicator) {\n          this.setState({typingIndicator: true});\n        }\n        break;\n      }\n      case 'read':\n      case 'recv':\n        // Redraw due to changed recv/read status.\n        this.forceUpdate();\n        break;\n      default:\n        console.info(\"Other change in topic: \", info.what);\n    }\n  }\n\n  handleImagePostview(content) {\n    this.setState({ imagePostview: content });\n  }\n\n  handleClosePreview() {\n    if (this.state.imagePreview && this.state.imagePreview.url) {\n      URL.revokeObjectURL(this.state.imagePreview.url);\n    }\n    this.setState({ imagePostview: null, imagePreview: null, docPreview: null });\n  }\n\n  handleFormResponse(action, text, data) {\n    if (action == 'pub') {\n      this.sendMessage(Drafty.attachJSON(Drafty.parse(text), data));\n    } else if (action == 'url') {\n      const url = new URL(data.ref);\n      const params = url.searchParams;\n      for (let key in data.resp) {\n        if (data.resp.hasOwnProperty(key)) {\n          params.set(key, data.resp[key]);\n        }\n      }\n      ['name', 'seq'].map((key) => {\n        if (data[key]) {\n          params.set(key, data[key]);\n        }\n      });\n      params.set('uid', this.props.myUserId);\n      params.set('topic', this.state.topic);\n      url.search = params;\n      window.open(url, '_blank');\n    } else {\n      console.info(\"Unknown action in form\", action);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.state.topic, y: e.pageY, x: e.pageX });\n  }\n\n  handleShowContextMenuMessage(params, messageSpecificMenuItems) {\n    params.topicName = this.state.topic;\n    const menuItems = messageSpecificMenuItems || [];\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (topic) {\n      if (!topic.isChannelType()) {\n        menuItems.push('message_delete');\n      }\n      const acs = topic.getAccessMode();\n      if (acs && acs.isDeleter()) {\n        menuItems.push('message_delete_hard');\n      }\n    }\n    this.props.showContextMenu(params, menuItems);\n  }\n\n  handleNewChatAcceptance(action) {\n    this.props.onNewChat(this.state.topic, action);\n  }\n\n  handleEnablePeer(e) {\n    e.preventDefault();\n    this.props.onChangePermissions(this.state.topic, DEFAULT_P2P_ACCESS_MODE, this.state.topic);\n  }\n\n  sendKeyPress() {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (topic.isSubscribed()) {\n      topic.noteKeyPress();\n    }\n  }\n\n  // sendMessage sends the message with an optional subscription to topic first.\n  sendMessage(msg, uploadCompletionPromise, uploader) {\n    let head;\n    if (this.props.forwardedMessage) {\n      // We are forwarding a message.\n      msg = this.props.forwardedMessage.msg;\n      head = this.props.forwardedMessage.head;\n      this.handleCancelReply();\n    } else if (this.state.reply && this.state.reply.content) {\n      // We are replying to a message in this topic.\n      head = {reply: '' + this.state.reply.seq};\n      // Turn it into Drafty so we can make a quoted Drafty object later.\n      if (typeof msg == 'string') {\n        msg = Drafty.parse(msg);\n      }\n      msg = Drafty.append(this.state.reply.content, msg);\n      this.handleCancelReply();\n    }\n    this.props.sendMessage(msg, uploadCompletionPromise, uploader, head);\n  }\n\n  // Retry sending a message.\n  retrySend(pub) {\n    this.props.sendMessage(pub.content, undefined, undefined, pub.head);\n  }\n\n  // Send attachment as Drafty message:\n  // - if file is too large, upload it and send a s link.\n  // - if file is small enough, just send it in-band.\n  sendFileAttachment(file) {\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (file.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      const uploadCompletionPromise = uploader.upload(file);\n      const msg = Drafty.attachFile(null, {\n        mime: file.type,\n        filename: file.name,\n        size: file.size,\n        urlPromise: uploadCompletionPromise\n      });\n      // Pass data and the uploader to the TinodeWeb.\n      this.sendMessage(msg, uploadCompletionPromise, uploader);\n    } else {\n      // Small enough to send inband.\n      fileToBase64(file)\n        .then(b64 => this.sendMessage(Drafty.attachFile(null, {mime: b64.mime, data: b64.bits, filename: b64.name})))\n        .catch(err => this.props.onError(err));\n    }\n  }\n\n  // handleAttachFile method is called when [Attach file] button is clicked.\n  handleAttachFile(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    if (file.size > maxExternAttachmentSize) {\n      // Too large.\n      this.props.onError(this.props.intl.formatMessage(messages.file_attachment_too_large,\n        {size: bytesToHumanSize(file.size), limit: bytesToHumanSize(maxExternAttachmentSize)}), 'err');\n    } else {\n      this.setState({\n        docPreview: {\n          file: file,\n          name: file.name,\n          size: file.size,\n          type: file.type\n        }\n      });\n    }\n  }\n\n  // sendImageAttachment sends the image bits inband as Drafty message.\n  sendImageAttachment(caption, blob) {\n    const mime = this.state.imagePreview.mime;\n    const width = this.state.imagePreview.width;\n    const height = this.state.imagePreview.height;\n    const fname = this.state.imagePreview.name;\n\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (blob.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      if (!uploader) {\n        this.props.onError(this.props.intl.formatMessage(messages.cannot_initiate_upload));\n        return;\n      }\n      const uploadCompletionPromise = uploader.upload(blob);\n\n      // Make small preview to show while uploading.\n      imageScaled(blob, IMAGE_PREVIEW_DIM, IMAGE_PREVIEW_DIM, -1, false)\n        // Convert tiny image into base64 for serialization and previewing.\n        .then(scaled => blobToBase64(scaled.blob))\n        .then(b64 => {\n            let msg = Drafty.insertImage(null, 0, {\n              mime: mime,\n              _tempPreview: b64.bits, // This preview will not be serialized.\n              width: width,\n              height: height,\n              filename: fname,\n              size: blob.size,\n              urlPromise: uploadCompletionPromise\n            });\n            if (caption) {\n              msg = Drafty.appendLineBreak(msg);\n              msg = Drafty.append(msg, Drafty.parse(caption));\n            }\n            // Pass data and the uploader to the TinodeWeb.\n            this.sendMessage(msg, uploadCompletionPromise, uploader);\n        }).catch((err) => {\n          this.props.onError(err, 'err');\n        });\n        return;\n    }\n\n    // Upload the image if it's too big to be send inband.\n    blobToBase64(blob)\n      .then(b64 => {\n        let msg = Drafty.insertImage(null, 0, {\n          mime: b64.mime,\n          preview: b64.bits, // Serializable preview\n          width: width,\n          height: height,\n          filename: fname,\n          size: blob.size\n        });\n        if (caption) {\n          msg = Drafty.appendLineBreak(msg);\n          msg = Drafty.append(msg, Drafty.parse(caption));\n        }\n        this.sendMessage(msg);\n      });\n  }\n\n  // handleAttachImage method is called when [Attach image] button is clicked.\n  handleAttachImage(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    // Get image dimensions and size, optionally scale it down.\n    imageScaled(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, maxExternAttachmentSize, false)\n      .then(scaled => {\n        this.setState({imagePreview: {\n          url: URL.createObjectURL(scaled.blob),\n          blob: scaled.blob,\n          name: scaled.name,\n          width: scaled.width,\n          height: scaled.height,\n          size: scaled.blob.size,\n          mime: scaled.mime\n        }});\n      }).catch(err => {\n        this.props.onError(err, 'err');\n      });\n  }\n\n  handleCancelUpload(seq, uploader) {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    const found = topic.findMessage(seq);\n    if (found) {\n      found._cancelled = true;\n    }\n    uploader.cancel();\n  }\n\n  handlePickReply(seq, content, forwarded, senderId, senderName) {\n    this.setState({reply: null});\n\n    if (!seq || !content) {\n      return;\n    }\n\n    content = forwarded ?\n        Drafty.forwardedContent(content) :\n        typeof content == 'string' ? Drafty.init(content) : content;\n    if (Drafty.isValid(content)) {\n      content = Drafty.preview(content, QUOTED_REPLY_LENGTH, undefined, !forwarded);\n    } else {\n      // /!\\ invalid content.\n      content = Drafty.append(Drafty.init('\\u26A0 '),\n        Drafty.wrapInto(this.props.intl.formatMessage(messages.invalid_content), 'EM'));\n    }\n\n    this.setState({\n      reply: {\n        content: Drafty.quote(senderName, senderId, content),\n        seq: seq\n      }\n    });\n  }\n\n  handleCancelReply() {\n    this.setState({reply: null});\n    this.props.onCancelForwardMessage();\n  }\n\n  handleQuoteClick(replyToSeq) {\n    const ref = this.getOrCreateMessageRef(replyToSeq);\n    if (ref && ref.current) {\n      ref.current.scrollIntoView({block: \"center\", behavior: \"smooth\"});\n      ref.current.classList.add('flash');\n      setTimeout(() => { ref.current.classList.remove('flash') } , 1000);\n    } else {\n      console.error(\"Unresolved message ref\", replyToSeq);\n    }\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n\n    let component;\n    if (this.props.hideSelf) {\n      component = null;\n    } else if (!this.state.topic) {\n      component = (\n        <LogoView\n          serverVersion={this.props.serverVersion}\n          serverAddress={this.props.serverAddress} />\n      );\n    } else {\n      let component2;\n      if (this.state.imagePreview) {\n        // Preview image before sending.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePreview}\n            tinode={this.props.tinode}\n            replyTo={this.state.reply}\n            onCancelReply={this.handleCancelReply}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendImageAttachment} />\n        );\n      } else if (this.state.imagePostview) {\n        // Expand received image.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePostview}\n            onClose={this.handleClosePreview} />\n        );\n      } else if (this.state.docPreview) {\n        // Preview attachment before sending.\n        component2 = (\n          <DocPreview\n            content={this.state.docPreview}\n            tinode={this.props.tinode}\n            replyTo={this.state.reply}\n            onCancelReply={this.handleCancelReply}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendFileAttachment} />\n        );\n      } else {\n        const topic = this.props.tinode.getTopic(this.state.topic);\n        const isChannel = topic.isChannelType();\n        const groupTopic = topic.isGroupType() && !isChannel;\n        const icon_badges = [];\n        if (topic.trusted) {\n          if (topic.trusted.verified) {\n            icon_badges.push({icon: 'verified', color: 'badge-inv'});\n          }\n          if (topic.trusted.staff) {\n            icon_badges.push({icon: 'staff', color: 'badge-inv'});\n          }\n          if (topic.trusted.danger) {\n            icon_badges.push({icon: 'dangerous', color: 'badge-inv'});\n          }\n        }\n        let messageNodes = [];\n        let previousFrom = null;\n        let chatBoxClass = null;\n        topic.messages((msg, prev, next, i) => {\n          let nextFrom = next ? (next.from || null) : 'chan';\n\n          let sequence = 'single';\n          let thisFrom = msg.from || 'chan';\n          if (thisFrom == previousFrom) {\n            if (thisFrom == nextFrom) {\n              sequence = 'middle';\n            } else {\n              sequence = 'last';\n            }\n          } else if (thisFrom == nextFrom) {\n            sequence = 'first';\n          }\n          previousFrom = thisFrom;\n\n          const isReply = !(thisFrom == this.props.myUserId);\n          const deliveryStatus = topic.msgStatus(msg, true);\n\n          let userFrom = thisFrom, userName, userAvatar;\n          const user = topic.userDesc(thisFrom);\n          if (user && user.public) {\n            userName = user.public.fn;\n            userAvatar = makeImageUrl(user.public.photo);\n          }\n          chatBoxClass = groupTopic ? 'chat-box group' : 'chat-box';\n\n          // Ref for this chat message.\n          const ref = this.getOrCreateMessageRef(msg.seq);\n          let replyToSeq = msg.head ? parseInt(msg.head.reply) : null;\n          if (!replyToSeq || isNaN(replyToSeq)) {\n            replyToSeq = null;\n          }\n\n          messageNodes.push(\n            <ChatMessage\n              tinode={this.props.tinode}\n              content={msg.content}\n              forwarded={msg.head ? msg.head.forwarded : null}\n              deleted={msg.hi}\n              mimeType={msg.head ? msg.head.mime : null}\n              timestamp={msg.ts}\n              response={isReply}\n              seq={msg.seq}\n              isGroup={groupTopic}\n              userFrom={userFrom}\n              userName={userName}\n              userAvatar={userAvatar}\n              sequence={sequence}\n              received={deliveryStatus}\n              uploader={msg._uploader}\n              viewportWidth={this.props.viewportWidth}  // Used by `formatter`.\n              showContextMenu={this.state.channel? false : this.handleShowContextMenuMessage}\n              onImagePreview={this.handleImagePostview}\n              onFormResponse={this.handleFormResponse}\n              onError={this.props.onError}\n              onCancelUpload={this.handleCancelUpload}\n              pickReply={this.handlePickReply}\n              replyToSeq={replyToSeq}\n              onQuoteClick={this.handleQuoteClick}\n              ref={ref}\n              userIsWriter={this.state.isWriter}\n              key={msg.seq} />\n          );\n        });\n\n        let lastSeen = null;\n        if (isChannel) {\n          lastSeen = formatMessage(messages.channel);\n        } else {\n          const cont = this.props.tinode.getMeTopic().getContact(this.state.topic);\n          if (cont && Tinode.isP2PTopicName(cont.topic)) {\n            if (cont.online) {\n              lastSeen = formatMessage(messages.online_now);\n            } else if (cont.seen) {\n              lastSeen = formatMessage(messages.last_seen) + \": \" +\n                shortDateFormat(cont.seen.when, this.props.intl.locale);\n              // TODO: also handle user agent in c.seen.ua\n            }\n          }\n        }\n        const avatar = this.state.avatar || true;\n        const online = this.props.online ? 'online' + (this.state.typingIndicator ? ' typing' : '') : 'offline';\n\n        component2 = (\n          <>\n            <div id=\"topic-caption-panel\" className=\"caption-panel\">\n              {this.props.displayMobile ?\n                <a href=\"#\" id=\"hide-message-view\" onClick={(e) => {e.preventDefault(); this.props.onHideMessagesView();}}>\n                  <i className=\"material-icons\">arrow_back</i>\n                </a>\n                :\n                null}\n              <div className=\"avatar-box\">\n                <LetterTile\n                  tinode={this.props.tinode}\n                  avatar={avatar}\n                  topic={this.state.topic}\n                  title={this.state.title} />\n                {!isChannel ? <span className={online} /> : null}\n              </div>\n              <div id=\"topic-title-group\">\n                <div id=\"topic-title\" className=\"panel-title\">{\n                  this.state.title ||\n                  <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n                    description=\"Title shown when the topic has no name\" /></i>\n                }<ContactBadges badges={icon_badges} /></div>\n                <div id=\"topic-last-seen\">{lastSeen}</div>\n              </div>\n              {groupTopic ?\n                <GroupSubs\n                  tinode={this.props.tinode}\n                  subscribers={this.state.onlineSubs} /> :\n                <div id=\"topic-users\" />\n              }\n              <div>\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">more_vert</i>\n                </a>\n              </div>\n            </div>\n            {this.props.displayMobile ?\n              <ErrorPanel\n                level={this.props.errorLevel}\n                text={this.props.errorText}\n                onClearError={this.props.onError} />\n              : null}\n            <LoadSpinner show={this.state.fetchingMessages} />\n            <div id=\"messages-container\">\n              <div id=\"messages-panel\" ref={this.handleScrollReference}>\n                <ul id=\"scroller\" className={chatBoxClass}>\n                  {messageNodes}\n                </ul>\n              </div>\n              {!this.state.isReader ?\n              <div id=\"write-only-background\">\n                {this.state.readingBlocked ?\n                <div id=\"write-only-note\">\n                  <FormattedMessage id=\"messages_not_readable\" defaultMessage=\"no access to messages\"\n                    description=\"Message shown in topic without the read access\" />\n                </div>\n                : null }\n              </div>\n              : null }\n            </div>\n            {this.state.peerMessagingDisabled && !this.state.unconfirmed ?\n              <div id=\"peer-messaging-disabled-note\">\n                <i className=\"material-icons secondary\">block</i> <FormattedMessage\n                  id=\"peers_messaging_disabled\" defaultMessage=\"Peer's messaging is disabled.\"\n                  description=\"Shown when the p2p peer's messaging is disabled\" /> <a href=\"#\"\n                    onClick={this.handleEnablePeer}><FormattedMessage id=\"enable_peers_messaging\"\n                    defaultMessage=\"Enable\" description=\"Call to action to enable peer's messaging\" /></a>.\n              </div> : null}\n            {this.state.unconfirmed ?\n              <Invitation onAction={this.handleNewChatAcceptance} />\n              :\n              <SendMessage\n                tinode={this.props.tinode}\n                noInput={this.props.forwardedMessage != null}\n                disabled={!this.state.isWriter}\n                onKeyPress={this.sendKeyPress}\n                onSendMessage={this.sendMessage}\n                onAttachFile={this.props.forwardedMessage == null ? this.handleAttachFile : null}\n                onAttachImage={this.props.forwardedMessage == null ? this.handleAttachImage : null}\n                onError={this.props.onError}\n                replyTo={this.state.reply}\n                onQuoteClick={this.handleQuoteClick}\n                onCancelReply={this.handleCancelReply} />}\n          </>\n        );\n      }\n\n      component = <div id=\"topic-view\">{component2}</div>\n    }\n    return component;\n  }\n};\n\nexport default injectIntl(MessagesView);\n","// The <- button to be displayed in title bars.\nimport React from 'react';\n\nexport default class ButtonBack extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onBack();}}>\n        <i className=\"material-icons\">arrow_back</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class MenuContacts extends React.PureComponent {\n  render() {\n    return (\n      <div>\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onNewTopic();}}><i className=\"material-icons\">chat</i></a>\n        &nbsp;\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nexport default class MenuStart extends React.PureComponent {\n  render() {\n    return (\n        <div>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSignUp();}}><i className=\"material-icons\">person_add</i></a>\n          &nbsp;\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n        </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\nimport ButtonBack from './button-back.jsx';\nimport ContactBadges from './contact-badges.jsx';\nimport MenuContacts from './menu-contacts.jsx';\nimport MenuStart from './menu-start.jsx';\n\nimport { sanitizeImageUrl } from '../lib/utils.js';\n\nexport default class SideNavbar extends React.PureComponent {\n  render() {\n    const icon_badges = [];\n    if (this.props.trustedBadges) {\n      this.props.trustedBadges.map((b) => {\n        icon_badges.push({icon: b, color: 'badge-inv'});\n      });\n    }\n    let avatar = null;\n    if (this.props.tinode) {\n      avatar = this.props.tinode.authorizeURL(sanitizeImageUrl(this.props.avatar));\n    }\n    return (\n      <div id=\"side-caption-panel\" className=\"caption-panel\">\n        {this.props.onCancel ? <ButtonBack onBack={this.props.onCancel} /> : null}\n        {avatar ?\n          <div id=\"self-avatar\" className=\"avatar-box\">\n            <LetterTile\n              tinode={this.props.tinode}\n              avatar={avatar}\n              topic={this.props.myUserId}\n              title={this.props.title} />\n          </div>\n          :\n          null}\n        <div id=\"sidepanel-title\" className=\"panel-title\">{this.props.title}<ContactBadges badges={icon_badges}/></div>\n        {this.props.state === 'login' ?\n            <MenuStart onSignUp={this.props.onSignUp} onSettings={this.props.onSettings} /> :\n          this.props.state === 'contacts' ?\n            <MenuContacts onNewTopic={this.props.onNewTopic} onSettings={this.props.onSettings} /> :\n          null}\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport BadgeList from '../widgets/badge-list.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH } from '../config.js';\n\nfunction _clip(str, length) {\n  return str && str.substring(0, length);\n}\n\nexport default class AccountSettingsView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    this.state = {\n      fullName: _clip(me.public ? me.public.fn : undefined, MAX_TITLE_LENGTH),\n      description: _clip(me.public ? me.public.note : undefined, MAX_TOPIC_DESCRIPTION_LENGTH),\n      avatar: makeImageUrl(me.public ? me.public.photo : null)\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          <a href=\"#\" className=\"flat-button float-right\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('general');}}>\n            <i className=\"material-icons\">edit</i>&nbsp;\n            <FormattedMessage id=\"button_edit\" defaultMessage=\"Edit\" description=\"Call to action [Edit]\" />\n          </a>\n          <center>\n            <AvatarUpload\n              tinode={this.props.tinode}\n              avatar={this.state.avatar}\n              readOnly={true}\n              uid={this.props.myUserId}\n              title={this.state.fullName} />\n          </center>\n          <div className=\"group\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n                description=\"Label for full name editing\" />\n            </label>\n            <div className=\"large ellipsized\">{this.state.fullName}</div>\n          </div>\n          <div className=\"group\">\n            <label className=\"small\"><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n              description=\"Label for user address (ID)\" /></label>&nbsp;\n            <tt>{this.props.myUserId}</tt>\n          </div>\n          <div className=\"group\">\n            <BadgeList trustedBadges={this.props.trustedBadges} />\n          </div>\n          {this.state.description ?\n            <div className=\"group\">\n              <label className=\"small\">\n                <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                  description=\"Label for editing topic description\" />\n              </label>\n              <div>{this.state.description}</div>\n            </div> : null}\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('notif');}}>\n            <i className=\"material-icons\">notifications</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_notifications\"\n              defaultMessage=\"Notifications\" description=\"Sidepanel title for AccNotificationsView.\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('security');}}>\n            <i className=\"material-icons\">security</i>&nbsp;<FormattedMessage id=\"button_security\"\n              defaultMessage=\"Security\" description=\"Navigaton button for security panel.\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('support');}}>\n            <i className=\"material-icons\">contact_support</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_support\"\n              defaultMessage=\"Support\" description=\"Sidepanel title for AccSupportView.\" />\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","/* ContactsView holds all contacts-related stuff */\nimport React from 'react';\nimport { FormattedMessage, defineMessages } from 'react-intl';\n\nimport ContactList from '../widgets/contact-list.jsx';\n\nimport { updateFavicon } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  archived_contacts_title: {\n    id: \"archived_contacts\",\n    defaultMessage: \"Archived contacts ({count})\",\n    description: \"Label for archived chats\"\n  }\n});\n\nexport default class ContactsView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAction = this.handleAction.bind(this);\n\n    this.state = ContactsView.deriveStateFromProps(props);\n  }\n\n  static deriveStateFromProps(props) {\n    const contacts = [];\n    let unreadThreads = 0;\n    let archivedCount = 0;\n    props.chatList.map((c) => {\n      const blocked = c.acs && !c.acs.isJoiner();\n      // Show only blocked contacts only when props.blocked == true.\n      if (blocked && props.blocked) {\n        contacts.push(c);\n      }\n      if (blocked || props.blocked) {\n        return;\n      }\n\n      if (c.private && c.private.arch) {\n        if (props.archive) {\n          contacts.push(c);\n        } else {\n          archivedCount ++;\n        }\n      } else if (!props.archive) {\n        contacts.push(c);\n        unreadThreads += c.unread > 0 ? 1 : 0;\n      }\n    });\n\n    contacts.sort((a, b) => {\n      return (b.touched || 0) - (a.touched || 0);\n    });\n\n    if (archivedCount > 0) {\n      contacts.push({\n        action: 'archive',\n        title: messages.archived_contacts_title,\n        values: {count: archivedCount}\n      });\n    }\n\n    return {\n      contactList: contacts,\n      unreadThreads: unreadThreads\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chatList != this.props.chatList ||\n        prevProps.archive != this.props.archive ||\n        prevProps.blocked != this.props.blocked) {\n      const newState = ContactsView.deriveStateFromProps(this.props);\n      this.setState(newState);\n      if (newState.unreadThreads != prevState.unreadThreads) {\n        updateFavicon(newState.unreadThreads);\n      }\n    }\n  }\n\n  handleAction(action_ignored) {\n    this.props.onShowArchive();\n  }\n\n  render() {\n    return (\n      <FormattedMessage id=\"contacts_not_found\"\n        defaultMessage=\"You have no chats<br />¯∖_(ツ)_/¯\"\n        description=\"HTML message shown in ContactList when no contacts are found\">{\n        (no_contacts) => <ContactList\n          tinode={this.props.tinode}\n          connected={this.props.connected}\n          contacts={this.state.contactList}\n          emptyListMessage={no_contacts}\n          topicSelected={this.props.topicSelected}\n          myUserId={this.props.myUserId}\n          showOnline={true}\n          showUnread={true}\n          onTopicSelected={this.props.onTopicSelected}\n          showContextMenu={this.props.showContextMenu}\n          onAction={this.handleAction} />\n      }</FormattedMessage>\n    );\n  }\n};\n","// Helper functions for storing values in localStorage.\n// By default localStorage can store only strings, not objects or other types.\n\nexport default class LocalStorageUtil {\n  // Replace old object with the new one.\n  static setObject(key, value) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n\n  // Get stored object.\n  static getObject(key) {\n    const value = localStorage.getItem(key);\n    return value && JSON.parse(value);\n  }\n\n  // Partially or wholly update stored object.\n  static updateObject(key, value) {\n    const oldVal = this.getObject(key);\n    this.setObject(key, Object.assign(oldVal || {}, value));\n  }\n\n  // Just a wrapper.\n  static removeItem(key) {\n    localStorage.removeItem(key);\n  }\n}\n","// Account registration.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport { theCard } from '../lib/utils.js';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class CreateAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: '',\n      password: '',\n      email: '',\n      fn: '', // full/formatted name\n      imageDataUrl: null,\n      errorCleared: false,\n      saveToken: LocalStorageUtil.getObject('keep-logged-in')\n    };\n\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(password) {\n    this.setState({password: password});\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value})\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleToggleSaveToken() {\n    LocalStorageUtil.setObject('keep-logged-in', !this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({errorCleared: false});\n    this.props.onCreateAccount(\n      this.state.login.trim(),\n      this.state.password.trim(),\n      theCard(this.state.fn.trim().substring(0, MAX_TITLE_LENGTH), this.state.imageDataUrl),\n      {'meth': 'email', 'val': this.state.email});\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form className=\"panel-form-column\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n              description=\"Placeholer for username/login\">{\n              (login_prompt) => <input type=\"text\" placeholder={login_prompt} autoComplete=\"user-name\"\n                value={this.state.login} onChange={this.handleLoginChange} required autoFocus />\n            }</FormattedMessage>\n            <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n              description=\"Placeholder/prompt for entering password\">{\n              (password_prompt) => <VisiblePassword placeholder={password_prompt} autoComplete=\"new-password\"\n                value={this.state.password} onFinished={this.handlePasswordChange}\n                required={true} />\n            }</FormattedMessage>\n          </div>\n          <AvatarUpload\n            tinode={this.props.tinode}\n            onImageChanged={this.handleImageChanged}\n            onError={this.props.onError} />\n        </div>\n        <div  className=\"panel-form-row\">\n          <FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n            description=\"Input placeholder for person's full name\">{\n            (full_name_prompt) => <input type=\"text\" placeholder={full_name_prompt} autoComplete=\"name\"\n              value={this.state.fn} onChange={this.handleFnChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <FormattedMessage id=\"email_prompt\" defaultMessage=\"Email, e.g. jdoe@example.com\"\n            description=\"Input placeholder for email entry\">{\n            (email_prompt) => <input type=\"email\" placeholder={email_prompt} autoComplete=\"email\"\n              value={this.state.email} onChange={this.handleEmailChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n            description=\"Label for a checkbox\">{\n            (stay_logged_in) => <label htmlFor=\"save-token\">&nbsp;{stay_logged_in}</label>\n          }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_up\" defaultMessage=\"Sign up\"\n              description=\"Create account button [Sign Up]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\n\nexport default class EditAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckboxClick = this.handleCheckboxClick.bind(this);\n  }\n\n  handleCheckboxClick(what, checked) {\n    if (what == 'sound') {\n      this.props.onToggleMessageSounds(checked);\n    } else if (what == 'alert') {\n      this.props.onTogglePushNotifications(checked);\n    } else if (what == 'incognito') {\n      this.props.onToggleIncognitoMode(checked);\n    }\n  }\n\n  render() {\n    return (\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"message-sound\">\n              <FormattedMessage id=\"label_message_sound\" defaultMessage=\"Message sound:\"\n                description=\"Label for message sounds toggle\" />\n            </label>\n            <CheckBox name=\"sound\" id=\"message-sound\"\n              checked={this.props.messageSounds} onChange={this.handleCheckboxClick} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"desktop-alerts\">\n            {this.props.desktopAlertsEnabled ?\n              <FormattedMessage id=\"label_push_notifications\" defaultMessage=\"Notification alerts:\"\n                description=\"Label for push notifications switch\" />\n              :\n              <FormattedMessage id=\"label_push_notifications_disabled\"\n                defaultMessage=\"Notification alerts (requires HTTPS):\"\n                description=\"Label for push notifications switch\" />\n            }\n            </label>\n            <CheckBox name=\"alert\" id=\"desktop-alerts\"\n              checked={this.props.desktopAlerts}\n              onChange={this.props.desktopAlertsEnabled ? this.handleCheckboxClick : null} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"incognito-mode\">\n              <FormattedMessage id=\"label_incognito_mode\" defaultMessage=\"Incognito mode:\"\n                description=\"Label for incognito mode toggle\" />\n            </label>\n            <CheckBox name=\"incognito\" id=\"incognito-mode\"\n              checked={this.props.incognitoMode} onChange={this.handleCheckboxClick} />\n          </div>\n        </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\n\nconst messages = defineMessages({\n  delete_account: {\n    id: 'delete_account',\n    defaultMessage: 'Delete account',\n    description: 'Title for delete account warning'\n  },\n  delete_account_warning: {\n    id: 'delete_account_warning',\n    defaultMessage: 'Are you sure you want to delete your account? It cannot be undone.',\n    description: 'Warning message when deleting an account'\n  }\n});\n\nclass AccSecurityView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    let blockedCount = 0;\n    me.contacts((c) => {\n      if (c.acs && !c.acs.isJoiner()) {\n        blockedCount ++;\n      }\n    });\n    const defacs = me.getDefaultAccess();\n    this.state = {\n      auth: defacs ? defacs.auth : null,\n      anon: defacs ? defacs.anon : null,\n      showPermissionEditorFor: undefined,\n      blockedCount: blockedCount,\n    };\n\n    this.handlePasswordUpdate = this.handlePasswordUpdate.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n  }\n\n  handlePasswordUpdate(pwd) {\n    this.setState({password: pwd});\n    this.props.onUpdatePassword(pwd);\n  }\n\n  handleLaunchPermissionsEditor(which) {\n    this.setState({\n      showPermissionEditorFor: which,\n      editedPermissions: this.state[which]\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handlePermissionsChanged(perm) {\n    let defacs = {};\n    defacs[this.state.showPermissionEditorFor] = perm;\n    this.props.onUpdateAccountDesc('me', undefined, undefined, defacs);\n\n    let newState = {showPermissionEditorFor: undefined};\n    newState[this.state.showPermissionEditorFor] = perm;\n    this.setState(newState);\n  }\n\n  handleDeleteAccount(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.delete_account), // title\n      formatMessage(messages.delete_account_warning), // content\n      (() => { this.props.onDeleteAccount(); }), // onConfirm\n      null, // use default text \"OK\"\n      true, // Show Reject button\n      null  // use default text \"Cancel\"\n    );\n  }\n\n  render() {\n    return (\n      <React.Fragment>{this.state.showPermissionEditorFor ?\n        <PermissionsEditor\n          mode={this.state.editedPermissions}\n          skip=\"O\"\n          onSubmit={this.handlePermissionsChanged}\n          onCancel={this.handleHidePermissionsEditor} />\n        :\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_password\" defaultMessage=\"Password\"\n                  description=\"Label for password editing\" />\n            </label>\n            <div>\n              <FormattedMessage id=\"password_unchanged_prompt\" defaultMessage=\"Unchanged\"\n                description=\"Message in editor while password is unchanged\">{\n                (password_unchanged) => <InPlaceEdit\n                  placeholder={password_unchanged}\n                  type=\"password\"\n                  onFinished={this.handlePasswordUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <a href=\"#\" className=\"danger flat-button\" onClick={(e) => {e.preventDefault(); this.props.onLogout();}}>\n              <i className=\"material-icons\">exit_to_app</i> &nbsp;<FormattedMessage id=\"button_logout\"\n                defaultMessage=\"Logout\" description=\"Button [Logout]\" />\n            </a>\n            <a href=\"#\" className=\"danger flat-button\" onClick={(e) => {this.handleDeleteAccount(e);}}>\n              <i className=\"material-icons\">delete</i> &nbsp;<FormattedMessage id=\"button_delete_account\"\n                defaultMessage=\"Delete account\" description=\"Button [Delete account]\" />\n            </a>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <div>\n              <label className=\"small\">\n                <FormattedMessage id=\"label_default_access_mode\" defaultMessage=\"Default access mode:\"\n                description=\"Label for default access mode\" />\n              </label>\n            </div>\n            <div className=\"quoted\">\n              <div>Auth: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>{this.state.auth}</tt></div>\n              <div>Anon: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>{this.state.anon}</tt></div>\n            </div>\n          </div>\n          {this.state.blockedCount > 0 ?\n            <>\n              <div className=\"hr\" />\n              <div className=\"panel-form-row\">\n                <i className=\"material-icons\">block</i>&nbsp;\n                <a href=\"#\" className=\"gray\" onClick={(e) => {e.preventDefault(); this.props.onShowBlocked();}}>\n                  <FormattedMessage id=\"blocked_contacts_link\" defaultMessage=\"Blocked contacts ({count})\"\n                    values={{ count: this.state.blockedCount }} description=\"Blocked contacts link\" />\n                </a>\n              </div>\n            </>\n            : null }\n        </div>\n      }</React.Fragment>\n    );\n  }\n};\n\nexport default injectIntl(AccSecurityView);\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME, LINK_CONTACT_US, LINK_PRIVACY_POLICY, LINK_TERMS_OF_SERVICE } from '../config.js';\n\nexport default class AccSupportView extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          <a href={LINK_CONTACT_US} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">email</i> &nbsp;<FormattedMessage id=\"link_contact_us\"\n              defaultMessage=\"Contact Us\" description=\"Ancor text for contacting us by email\" />\n          </a>\n          <a href={LINK_TERMS_OF_SERVICE} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">description</i> &nbsp;<FormattedMessage id=\"link_terms_of_service\"\n              defaultMessage=\"Terms of Service\" description=\"Ancor text for terms of service link\" />\n          </a>\n          <a href={LINK_PRIVACY_POLICY} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">policy</i> &nbsp;<FormattedMessage id=\"link_privacy_policy\"\n              defaultMessage=\"Privacy Policy\" description=\"Ancor text for privacy policy link\" />\n          </a>\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\"\n              description=\"Label for a client version\" /></label>\n            {APP_NAME}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_sdk\" defaultMessage=\"SDK:\" /></label>\n            {Tinode.getLibrary()}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\"\n              description=\"Label for a server version\" /></label>\n            {this.props.serverVersion}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server_address\" defaultMessage=\"Server address:\" /></label>\n            {this.props.serverAddress}\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","// Login form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\n\nexport default class LoginView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: props.login,\n      password: '',\n      hostName: props.serverAddress,\n      saveToken: props.persist\n    };\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  handleToggleSaveToken() {\n    this.props.onPersistenceChange(!this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onLogin(this.state.login.trim(), this.state.password.trim());\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form id=\"login-form\" onSubmit={this.handleSubmit}>\n        <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n          description=\"Placeholer for username/login\">\n        {\n          (login_prompt) => <input type=\"text\" id=\"inputLogin\"\n            placeholder={login_prompt}\n            autoComplete=\"username\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"none\"\n            value={this.state.login}\n            onChange={this.handleLoginChange}\n            required autoFocus />\n        }\n        </FormattedMessage>\n        <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n          description=\"Placeholder/prompt for entering password\">\n        {\n          (password_prompt) => <VisiblePassword type=\"password\" id=\"inputPassword\"\n            placeholder={password_prompt}\n            autoComplete=\"current-password\"\n            value={this.state.password}\n            onChange={this.handlePasswordChange}\n            required={true} />\n        }\n        </FormattedMessage>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <label htmlFor=\"save-token\">&nbsp;\n            <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n              description=\"Label for a checkbox\" />\n          </label>\n          <a href=\"#reset\">\n            <FormattedMessage id=\"forgot_password_link\" defaultMessage=\"Forgot password?\"\n              description=\"Link to Reset password form\" />\n          </a>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_in\" defaultMessage=\"Sign in\"\n              description=\"Button [Sign In]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n/* END Login */\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  invalid_id: {\n    id: 'error_invalid_id',\n    defaultMessage: 'Invalid ID',\n    description: 'Error message'\n  }\n});\n\nclass NewTopicById extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      groupId: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({groupId: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.groupId) {\n      const name = this.state.groupId.trim();\n      const prefix = name.substr(0, 3);\n      if (name.length > 3 && ['usr', 'grp', 'chn'].includes(prefix)) {\n        this.props.onSubmit(name);\n      } else {\n        this.props.onError(this.props.intl.formatMessage(messages.invalid_id), 'err');\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"group_user_id_prompt\" defaultMessage=\"Group or User ID\"\n          description=\"Prompt for entering user or group ID\">{\n          (prompt) => <input type=\"text\" placeholder={prompt}\n            value={this.state.groupId} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required autoFocus />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_subscribe\" defaultMessage=\"Subscribe\"\n              description=\"Button [Subscribe]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicById);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from './avatar-upload.jsx';\nimport CheckBox from './checkbox.jsx';\nimport TagManager from './tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH } from '../config.js';\n\nexport default class NewTopicGroup extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.fullName = React.createRef();\n\n    this.state = {\n      fullName: '', // full/formatted name\n      private: '',\n      description: '',\n      imageDataUrl: null,\n      tags: [],\n      isChannel: false\n    };\n\n    this.handleFieldEdit = this.handleFieldEdit.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleTagsChanged = this.handleTagsChanged.bind(this);\n    this.handleChannelToggle = this.handleChannelToggle.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    // this.fullName.current.focus();\n  }\n\n  handleFieldEdit(name, e) {\n    this.setState({[name]: e.target.value || ''});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleTagsChanged(tags) {\n    this.setState({tags: tags});\n  }\n\n  handleChannelToggle() {\n    this.setState({isChannel: !this.state.isChannel});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const fn = this.state.fullName.trim().substring(0, MAX_TITLE_LENGTH);\n    const comment = this.state.private.trim().substring(0, MAX_TITLE_LENGTH);\n    const description = this.state.description.trim().substring(0, MAX_TOPIC_DESCRIPTION_LENGTH);\n    if (fn) {\n      this.props.onSubmit(fn, description, this.state.imageDataUrl, comment, this.state.tags, this.state.isChannel);\n    }\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n    return (\n      <form className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-column\">\n          <center>\n            <AvatarUpload\n              tinode={this.props.tinode}\n              onError={this.props.onError}\n              onImageChanged={this.handleImageChanged} />\n          </center>\n          <div className=\"group\">\n            <label className=\"small\" htmlFor=\"new-topic-fn\">\n              <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                description=\"Label for editing topic name\" />\n            </label>\n            <FormattedMessage id=\"topic_name_editing_placeholder\" defaultMessage=\"Freeform name of the group\"\n              description=\"Prompt for entering topic name\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-fn\" placeholder={placeholder}\n                ref={this.fullName} value={this.state.fullName} onChange={this.handleFieldEdit.bind(this, 'fullName')}\n                autoFocus required tabIndex={0} />\n            }</FormattedMessage>\n          </div>\n          <div className=\"group\">\n            <label className=\"small\" htmlFor=\"new-topic-priv\">\n              <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                description=\"Label for editing 'private'\" />\n            </label>\n            <FormattedMessage id=\"private_editing_placeholder\" defaultMessage=\"Visible to you only\"\n              description=\"Placeholder for editing 'private'\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-priv\" placeholder={placeholder}\n                value={this.state.private} onChange={this.handleFieldEdit.bind(this, 'private')} tabIndex={1} />\n            }</FormattedMessage>\n          </div>\n          <div className=\"group\">\n            <label className=\"small\" htmlFor=\"new-topic-desc\">\n              <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                description=\"Label for editing topic description\" />\n            </label>\n            <FormattedMessage id=\"description_editing_placeholder\" defaultMessage=\"Description (optional)\"\n              description=\"Placeholder for editing topic description\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-desc\" placeholder={placeholder}\n                value={this.state.description} onChange={this.handleFieldEdit.bind(this, 'description')} tabIndex={2} />\n            }</FormattedMessage>\n          </div>\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox checked={this.state.isChannel} tabIndex={3} onChange={this.handleChannelToggle} />&nbsp;\n          <label onClick={this.handleChannelToggle}><FormattedMessage id=\"channel_prompt\"\n            defaultMessage=\"This is a channel\"\n            description=\"Checkbox label when creating a channel\" /></label>\n        </div>\n        <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (search & discovery)\"\n          description=\"Section title for TagManager\">{\n          (title) => <TagManager\n            tinode={this.props.tinode}\n            tags={this.state.tags}\n            activated={true}\n            onTagsChanged={this.handleTagsChanged}\n            tabIndex={4}\n            title={title} />\n        }</FormattedMessage>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses}>\n            <FormattedMessage id=\"button_create\" defaultMessage=\"Create\"\n              description=\"Button [Create]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// Create new topic and invite users or send an invite.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport ContactList from '../widgets/contact-list.jsx';\nimport NewTopicById from '../widgets/new-topic-by-id.jsx';\nimport NewTopicGroup from '../widgets/new-topic-group.jsx';\nimport SearchContacts from '../widgets/search-contacts.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\nimport { theCard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  search_for_contacts: {\n    id: \"search_for_contacts\",\n    defaultMessage: \"Use search to find contacts\",\n    description: \"Text shown in contacts view when user entered no search query.\"\n  },\n  search_no_results: {\n    id: \"search_no_results\",\n    defaultMessage: \"Search returned no results\",\n    description: \"Text shown in contacts view when query returned no results.\"\n  }\n});\n\nclass NewTopicView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tabSelected: 'p2p',\n      searchQuery: null\n    };\n\n    this.handleTabClick = this.handleTabClick.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleNewGroupSubmit = this.handleNewGroupSubmit.bind(this);\n    this.handleGroupByID = this.handleGroupByID.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.onInitFind();\n  }\n\n  handleTabClick(e) {\n    e.preventDefault();\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'tab', e.currentTarget.dataset.id));\n    this.setState({tabSelected: e.currentTarget.dataset.id});\n  }\n\n  handleSearchContacts(query) {\n    this.props.onSearchContacts(query);\n    this.setState({searchQuery: Tinode.isNullValue(query) ? null : query});\n  }\n\n  handleContactSelected(uid) {\n    if (this.state.tabSelected == 'p2p') {\n      HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n      this.props.onCreateTopic(uid);\n    }\n  }\n\n  handleNewGroupSubmit(name, description, dataUrl, priv, tags, isChannel) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(undefined,\n      {public: theCard(name, dataUrl, null, description), private: priv, tags: tags}, isChannel);\n  }\n\n  handleGroupByID(topicName) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(topicName);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const no_contacts_placeholder = formatMessage(this.state.searchQuery ?\n      messages.search_no_results : messages.search_for_contacts);\n    return (\n      <div className=\"flex-column\">\n        <ul className=\"tabbar\">\n          <li className={this.state.tabSelected === \"p2p\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"p2p\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_find_user\" defaultMessage=\"find\"\n                description=\"Tab title Find\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"grp\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"grp\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_new_group\" defaultMessage=\"new group\"\n                description=\"Tab title New Group\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"byid\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"byid\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_group_by_id\" defaultMessage=\"by id\"\n                description=\"Tab title Find topic by ID\" />\n            </a>\n          </li>\n        </ul>\n        {this.state.tabSelected === 'grp' ?\n          <NewTopicGroup\n            tinode={this.props.tinode}\n            onSubmit={this.handleNewGroupSubmit} /> :\n          this.state.tabSelected === 'byid' ?\n            <NewTopicById\n              onSubmit={this.handleGroupByID}\n              onError={this.props.onError} /> :\n            <div className=\"flex-column\">\n              <SearchContacts\n                type=\"p2p\"\n                onSearchContacts={this.handleSearchContacts} />\n              <ContactList\n                tinode={this.props.tinode}\n                contacts={this.props.searchResults}\n                myUserId={this.props.myUserId}\n                emptyListMessage={no_contacts_placeholder}\n                showOnline={false}\n                showUnread={false}\n                showContextMenu={false}\n                onTopicSelected={this.handleContactSelected} />\n            </div>}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicView);\n","// A password reset form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\n\nexport default class PasswordResetView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: '',\n      sent: false\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n  }\n\n  componentDidMount() {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    this.setState({token: parsed.params.token, scheme: parsed.params.scheme});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.token) {\n      this.props.onReset(this.state.scheme, this.state.password.trim(), this.state.token);\n    } else if (this.state.sent) {\n      this.props.onCancel();\n    } else {\n      const email = this.state.email.trim();\n      this.setState({email: email});\n      this.props.onRequest('email', email).then(() => {\n        this.setState({sent: true});\n      });\n    }\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  render() {\n    return (\n      <form id=\"password-reset-form\" onSubmit={this.handleSubmit}>\n        {(this.state.token && this.state.scheme) ?\n          <FormattedMessage id=\"new_password_placeholder\" defaultMessage=\"Enter new password\"\n            description=\"Placeholder for entering new password\">{\n            (placeholder) => <VisiblePassword\n              placeholder={placeholder}\n              autoComplete=\"new-password\"\n              value={this.state.password}\n              required={true} autoFocus={true}\n              onChange={this.handlePasswordChange} />\n          }</FormattedMessage>\n        : this.state.sent ?\n          <>\n            <br/>\n            <center><i className=\"material-icons huge green\">task_alt</i></center>\n            <br/>\n            <center><FormattedMessage id=\"password_reset_email_sent\"\n              defaultMessage=\"An email has been sent to {email}. Follow the directions in the email to reset your password.\"\n              values={{ email: <tt>{this.state.email}</tt> }}\n              description=\"Notification that the email with password reset instructions has been sent\" /></center>\n          </>\n        :\n          <>\n            <label htmlFor=\"inputEmail\">\n              <FormattedMessage id=\"label_reset_password\"\n                defaultMessage=\"Send a password reset email:\"\n                description=\"Label for password reset field\" />\n            </label>\n            <FormattedMessage id=\"credential_email_prompt\" defaultMessage=\"Your registration email\"\n              description=\"Placeholder for entering email\">{\n              (placeholder) => <input type=\"email\" id=\"inputEmail\"\n                placeholder={placeholder}\n                autoComplete=\"email\"\n                value={this.state.email}\n                onChange={this.handleEmailChange}\n                required autoFocus />\n            }</FormattedMessage>\n          </>\n        }\n        <div className=\"dialog-buttons\">\n          <button className=\"primary\" type=\"submit\">{\n            (this.state.token && this.state.scheme) ?\n            <FormattedMessage id=\"button_reset\" defaultMessage=\"Reset\" description=\"Button [Reset]\" />\n            : this.state.sent ?\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\"\n              description=\"Button [OK]\" />\n            :\n            <FormattedMessage id=\"button_send_request\" defaultMessage=\"Send request\"\n              description=\"Button [Send request]\" />\n          }</button>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react';\n\nimport { KNOWN_HOSTS } from '../config.js';\n\n/* Combobox for selecting host name */\n\nexport default class HostSelector extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hostName: props.serverAddress,\n      changed: false\n    };\n\n    this.handleHostNameChange = this.handleHostNameChange.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handleHostNameChange(e) {\n    this.setState({hostName: e.target.value, changed: true});\n  }\n\n  handleEditingFinished() {\n    if (this.state.changed) {\n      this.setState({changed: false});\n      this.props.onServerAddressChange(this.state.hostName.trim());\n    }\n  }\n\n  render() {\n    var hostOptions = [];\n    for (let key in KNOWN_HOSTS) {\n      let item = KNOWN_HOSTS[key];\n      hostOptions.push(\n        <option key={item} value={item} />\n      );\n    }\n    return (\n      <div className=\"panel-form-row\">\n        <input type=\"search\" id=\"host-name\" placeholder={this.props.hostName} list=\"known-hosts\"\n          className=\"quoted\" value={this.state.hostName} onChange={this.handleHostNameChange}\n          onBlur={this.handleEditingFinished} required />\n        <datalist id=\"known-hosts\">\n          {hostOptions}\n        </datalist>\n      </div>\n    );\n  }\n}\n","// Tinode config panel.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport HostSelector from '../widgets/host-selector.jsx';\n\nexport default class SettingsView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transport: props.transport || 'def',\n      serverAddress: props.serverAddress,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleTransportSelected = this.handleTransportSelected.bind(this);\n    this.handleServerAddressChange = this.handleServerAddressChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onUpdate({\n      transport: this.state.transport,\n      serverAddress: this.state.serverAddress\n    });\n  }\n\n  handleTransportSelected(e) {\n    this.setState({transport: e.currentTarget.value});\n  }\n\n  handleServerAddressChange(name) {\n    this.setState({serverAddress: name});\n  }\n\n  render() {\n    const names = {def: \"default\", ws: \"websocket\", lp: \"long polling\"};\n    const transportOptions = [];\n    ['def', 'ws', 'lp'].map((item) => {\n      const id = 'transport-' + item;\n      const name = names[item];\n      transportOptions.push(\n        <li key={item}>\n          <input type=\"radio\" id={id} name=\"transport-select\" value={item}\n            checked={this.state.transport === item}\n            onChange={this.handleTransportSelected} />\n          <label htmlFor={id}>{name}</label>\n        </li>\n      );\n    });\n\n    return (\n      <form id=\"settings-form\" className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_server_to_use\" defaultMessage=\"Server to use:\"\n              description=\"Label for server selector in SettingsView\" />\n          </label>\n        </div>\n        <HostSelector serverAddress={this.state.serverAddress}\n          onServerAddressChange={this.handleServerAddressChange} />\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_wire_transport\" defaultMessage=\"Wire transport:\"\n              description=\"Label for wire transport selection in SettingsView\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ul className=\"quoted\">\n            {transportOptions}\n          </ul>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button type=\"submit\" className=\"primary\">\n            <FormattedMessage id=\"button_update\" defaultMessage=\"Update\"\n              description=\"Button [Update]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// ValidationView: panel for confirming credentials, like email or phone.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  phone: {\n    id: 'phone_dative',\n    defaultMessage: 'phone',\n    description: \"Dative case of 'phone', i.e. 'phone' in 'by phone'\",\n  },\n  email: {\n    id: 'email_dative',\n    defaultMessage: 'email',\n    description: \"Dative case of 'email', i.e. 'email' in 'by email'\",\n  }\n});\n\nclass ValidationView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      code: props.credCode || ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({code: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    } else if (e.key == 'Escape') {\n      this.handleCancel(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.code && this.state.code.trim()) {\n      this.props.onSubmit(this.props.credMethod, this.state.code.trim());\n    }\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel();\n  }\n\n\n  render() {\n    const { formatMessage } = this.props.intl;\n    const methods = {'email': formatMessage(messages.email), 'tel': formatMessage(messages.phone)};\n    let method = methods[this.props.credMethod] || this.props.credMethod;\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\" htmlFor=\"enter-confirmation-code\">\n            <FormattedMessage id=\"enter_confirmation_code_prompt\"\n              defaultMessage=\"Enter confirmation code sent to you by {method}:\"\n              description=\"Request to enter confirmation code\"\n              values={{method: method}} />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"numeric_confirmation_code_prompt\"\n          defaultMessage=\"Numbers only\" description=\"Prompt for numeric conformation code\">{\n          (numbers_only) => <input type=\"text\" id=\"enter-confirmation-code\"\n            placeholder={numbers_only}\n            value={this.state.code} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"secondary\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_confirm\" defaultMessage=\"Confirm\" description=\"Button [Confirm]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ValidationView);\n","import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport SideNavbar from '../widgets/side-navbar.jsx';\nimport TopicCommon from '../widgets/topic-common.jsx';\n\nimport AccountSettingsView from './account-settings-view.jsx';\nimport ContactsView from './contacts-view.jsx';\nimport CreateAccountView from './create-account-view.jsx';\nimport AccNotificationsView from './acc-notifications-view.jsx';\nimport AccSecurityView from './acc-security-view.jsx';\nimport AccSupportView from './acc-support-view.jsx';\nimport LoginView from './login-view.jsx';\nimport NewTopicView from './new-topic-view.jsx';\nimport PasswordResetView from './password-reset-view.jsx';\nimport SettingsView from './settings-view.jsx';\nimport ValidationView from './validation-view.jsx';\n\n// Panel titles for translation.\nconst messages = defineMessages({\n  login: {\n    id: 'sidepanel_title_login',\n    description: 'Sidepanel title for LoginView.',\n    defaultMessage: 'Sign In'\n  },\n  register: {\n    id: 'sidepanel_title_register',\n    description: 'Sidepanel title for CreateAccountView.',\n    defaultMessage: 'Create Account'\n  },\n  settings: {\n    id: 'sidepanel_title_settings',\n    description: 'Sidepanel title for SettingsView.',\n    defaultMessage: 'Settings'\n  },\n  edit: {\n    id: 'sidepanel_title_account_settings',\n    description: 'Sidepanel title for AccountSettingsView.',\n    defaultMessage: 'Account Settings'\n  },\n  general: {\n    id: 'panel_title_general',\n    description: 'Title for TopicCommon.',\n    defaultMessage: 'General'\n  },\n  security: {\n    id: 'panel_title_security',\n    description: 'Title for TopicSecirity and AccSecurity.',\n    defaultMessage: 'Security'\n  },\n  crop: {\n    id: 'panel_title_crop',\n    description: 'Title for AvatarCropView.',\n    defaultMessage: 'Drag to Adjust'\n  },\n  notif: {\n    id: 'sidepanel_title_acc_notifications',\n    description: 'Sidepanel title for AccNotificationsView.',\n    defaultMessage: 'Notifications'\n  },\n  support: {\n    id: 'sidepanel_title_acc_support',\n    description: 'Sidepanel title for AccSupportView.',\n    defaultMessage: 'Support'\n  },\n  newtpk: {\n    id: 'sidepanel_title_newtpk',\n    description: 'Sidepanel title for NewTopicView.',\n    defaultMessage: 'Start New Chat'\n  },\n  cred: {\n    id: 'sidepanel_title_cred',\n    description: 'Sidepanel title for ValidationView.',\n    defaultMessage: 'Confirm Credentials'\n  },\n  reset: {\n    id: 'sidepanel_title_reset',\n    description: 'Sidepanel title for PasswordResetView.',\n    defaultMessage: 'Reset Password'\n  },\n  archive: {\n    id: 'sidepanel_title_archive',\n    description: 'Sidepanel title for ContactsView-Archive.',\n    defaultMessage: 'Archived Chats'\n  },\n  blocked: {\n    id: 'sidepanel_title_blocked',\n    description: 'Sidepanel title for ContactsView-Blocked.',\n    defaultMessage: 'Blocked Chats'\n  }\n});\n\nclass SidepanelView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNewTopic = this.handleNewTopic.bind(this);\n  }\n\n  handleNewTopic() {\n    this.props.onNavigate('newtpk');\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const view = this.props.state || (this.props.myUserId ? 'contacts' : 'login');\n\n    let title, avatar, badges;\n    if (view == 'contacts') {\n      title = this.props.title;\n      avatar = this.props.avatar ? this.props.avatar : true;\n      badges = this.props.trustedBadges;\n    } else {\n      title = formatMessage(messages[view]);\n      avatar = false;\n      badges = null;\n    }\n\n    let onCancel;\n    if (['login', 'contacts'].indexOf(view) == -1) {\n      onCancel = this.props.onCancel;\n    }\n\n    return (\n      <div id=\"sidepanel\" className={this.props.hideSelf ? 'nodisplay' : null}>\n        <SideNavbar\n          state={view}\n          title={title}\n          avatar={avatar}\n          tinode={this.props.tinode}\n          trustedBadges={badges}\n          myUserId={this.props.myUserId}\n          onSignUp={this.props.onSignUp}\n          onSettings={this.props.onSettings}\n          onNewTopic={this.handleNewTopic}\n          onCancel={onCancel} />\n\n        <ErrorPanel\n          level={this.props.errorLevel}\n          text={this.props.errorText}\n          action={this.props.errorAction}\n          actionText={this.props.errorActionText}\n          onClearError={this.props.onError} />\n\n        <LoadSpinner show={this.props.loadSpinnerVisible} />\n\n        {view === 'login' ?\n          <LoginView\n            login={this.props.login}\n            disabled={this.props.loginDisabled}\n            persist={this.props.persist}\n            onLogin={this.props.onLoginRequest}\n            onPersistenceChange={this.props.onPersistenceChange} /> :\n\n          view === 'register' ?\n          <CreateAccountView\n            tinode={this.props.tinode}\n            onCreateAccount={this.props.onCreateAccount}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'settings' ?\n          <SettingsView\n            transport={this.props.transport}\n            serverAddress={this.props.serverAddress}\n            onCancel={this.props.onCancel}\n            onUpdate={this.props.onGlobalSettings} /> :\n\n          view === 'edit' ?\n          <AccountSettingsView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            trustedBadges={this.props.trustedBadges}\n            onNavigate={this.props.onNavigate} /> :\n\n          (view === 'general' || view === 'crop') ?\n          <TopicCommon\n            topic=\"me\"\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            onUpdateTopicDesc={this.props.onUpdateAccountDesc}\n            onUpdateTags={this.props.onUpdateAccountTags}\n            onCredAdd={this.props.onCredAdd}\n            onCredDelete={this.props.onCredDelete}\n            onCredConfirm={this.props.onCredConfirm}\n            onError={this.props.onError} /> :\n\n          view === 'notif' ?\n          <AccNotificationsView\n            messageSounds={this.props.messageSounds}\n            desktopAlerts={this.props.desktopAlerts}\n            desktopAlertsEnabled={this.props.desktopAlertsEnabled}\n            incognitoMode={this.props.incognitoMode}\n            onTogglePushNotifications={this.props.onTogglePushNotifications}\n            onToggleMessageSounds={this.props.onToggleMessageSounds}\n            onToggleIncognitoMode={this.props.onToggleIncognitoMode} /> :\n\n          view === 'security' ?\n          <AccSecurityView\n            tinode={this.props.tinode}\n            onUpdateAccountDesc={this.props.onUpdateAccountDesc}\n            onUpdatePassword={this.props.onUpdatePassword}\n            onLogout={this.props.onLogout}\n            onDeleteAccount={this.props.onDeleteAccount}\n            onShowAlert={this.props.onShowAlert}\n            onShowBlocked={this.props.onShowBlocked} /> :\n\n          view === 'support' ?\n          <AccSupportView\n            serverAddress={this.props.serverAddress}\n            serverVersion={this.props.serverVersion} /> :\n\n          (view === 'contacts' || view == 'archive' || view == 'blocked') ?\n          <ContactsView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            connected={this.props.connected}\n            topicSelected={this.props.topicSelected}\n            archive={view == 'archive'}\n            blocked={view == 'blocked'}\n            chatList={this.props.chatList}\n            showContextMenu={this.props.showContextMenu}\n            onTopicSelected={this.props.onTopicSelected}\n            onShowArchive={this.props.onShowArchive} /> :\n\n          view === 'newtpk' ?\n          <NewTopicView\n            tinode={this.props.tinode}\n            searchResults={this.props.searchResults}\n            onInitFind={this.props.onInitFind}\n            onSearchContacts={this.props.onSearchContacts}\n            onCreateTopic={this.props.onCreateTopic}\n            onError={this.props.onError} /> :\n\n          view === 'cred' ?\n          <ValidationView\n            credCode={this.props.credCode}\n            credMethod={this.props.credMethod}\n            onSubmit={this.props.onValidateCredentials}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'reset' ?\n          <PasswordResetView\n            onRequest={this.props.onPasswordResetRequest}\n            onReset={this.props.onResetPassword}\n            onCancel={this.props.onCancel} /> :\n          null}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SidepanelView);\n","import { KNOWN_HOSTS, DEFAULT_HOST } from '../config.js';\n\n// Detect server address from the URL\nexport function detectServerAddress() {\n  let host = DEFAULT_HOST;\n  if (typeof window.location == 'object') {\n    if (window.location.protocol == 'file:' || window.location.hostname == 'localhost') {\n      host = KNOWN_HOSTS.local;\n    } else if (window.location.hostname) {\n      host = window.location.hostname + (window.location.port ? ':' + window.location.port : '');\n    }\n  }\n  return host;\n}\n\n// Detect if the page is served over HTTPS.\nexport function isSecureConnection() {\n  if (typeof window.location == 'object') {\n    return window.location.protocol == 'https:';\n  }\n  return false;\n}\n\nexport function isLocalHost() {\n  if (typeof window.location == 'object') {\n    return window.location.hostname == 'localhost';\n  }\n  return false;\n}\n","// The top-level class to hold all functionality together.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport * as firebase from 'firebase/app';\nimport 'firebase/messaging';\n\nimport Tinode from 'tinode-sdk';\n\nimport Alert from '../widgets/alert.jsx';\nimport ContextMenu from '../widgets/context-menu.jsx';\nimport ForwardDialog from '../widgets/forward-dialog.jsx';\n\nimport InfoView from './info-view.jsx';\nimport MessagesView from './messages-view.jsx';\nimport SidepanelView from './sidepanel-view.jsx';\n\nimport { API_KEY, APP_NAME, DEFAULT_P2P_ACCESS_MODE, LOGGING_ENABLED,\n  MEDIA_BREAKPOINT, QUOTED_REPLY_LENGTH, RECEIVED_DELAY } from '../config.js';\nimport { PACKAGE_VERSION } from '../version.js';\nimport { base64ReEncode, makeImageUrl } from '../lib/blob-helpers.js';\nimport { detectServerAddress, isLocalHost, isSecureConnection } from '../lib/host-name.js';\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { secondsToTime } from '../lib/strformat.js'\nimport { updateFavicon } from '../lib/utils.js';\n\n// Sound to play on message received.\nconst POP_SOUND = new Audio('audio/msg.mp3');\n\nconst messages = defineMessages({\n  reconnect_countdown: {\n    id: 'reconnect_countdown',\n    defaultMessage: 'Disconnected. Reconnecting in {seconds}…',\n    description: 'Message shown when an app update is available.'\n  },\n  reconnect_now: {\n    id: 'reconnect_now',\n    defaultMessage: 'Try now',\n    description: 'Prompt for reconnecting now'\n  },\n  push_init_failed: {\n    id: 'push_init_failed',\n    defaultMessage: 'Failed to initialize push notifications',\n    description: 'Error message when push notifications have failed to initialize.'\n  },\n  invalid_security_token: {\n    id: 'invalid_security_token',\n    defaultMessage: 'Invalid security token',\n    description: 'Error message when resetting password.'\n  },\n  no_connection: {\n    id: 'no_connection',\n    defaultMessage: 'No connection',\n    description: 'Warning that the user is offline.'\n  },\n  code_doesnot_match: {\n    id: 'code_doesnot_match',\n    defaultMessage: 'Code does not match',\n    description: 'Error message when the credential validation code is incorrect.'\n  },\n  menu_item_info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  }\n});\n\nclass TinodeWeb extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selfRef = React.createRef();\n\n    this.state = this.getBlankState();\n\n    this.handleResize = this.handleResize.bind(this);\n    this.handleHashRoute = this.handleHashRoute.bind(this);\n    this.handleOnline = this.handleOnline.bind(this);\n    this.checkForAppUpdate = this.checkForAppUpdate.bind(this);\n    this.handleVisibilityEvent = this.handleVisibilityEvent.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.handleLoginRequest = this.handleLoginRequest.bind(this);\n    this.handlePersistenceChange = this.handlePersistenceChange.bind(this);\n    this.handleConnected = this.handleConnected.bind(this);\n    this.handleAutoreconnectIteration = this.handleAutoreconnectIteration.bind(this);\n    this.doLogin = this.doLogin.bind(this);\n    this.handleCredentialsRequest = this.handleCredentialsRequest.bind(this);\n    this.handleLoginSuccessful = this.handleLoginSuccessful.bind(this);\n    this.handleDisconnect = this.handleDisconnect.bind(this);\n    this.tnMeMetaDesc = this.tnMeMetaDesc.bind(this);\n    this.tnMeContactUpdate = this.tnMeContactUpdate.bind(this);\n    this.tnMeSubsUpdated = this.tnMeSubsUpdated.bind(this);\n    this.resetContactList = this.resetContactList.bind(this);\n    this.tnData = this.tnData.bind(this);\n    this.tnInitFind = this.tnInitFind.bind(this);\n    this.tnFndSubsUpdated = this.tnFndSubsUpdated.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleTopicSelected = this.handleTopicSelected.bind(this);\n    this.handleHideMessagesView = this.handleHideMessagesView.bind(this);\n    this.handleSendMessage = this.handleSendMessage.bind(this);\n    this.handleNewChatInvitation = this.handleNewChatInvitation.bind(this);\n    this.handleNewAccount = this.handleNewAccount.bind(this);\n    this.handleNewAccountRequest = this.handleNewAccountRequest.bind(this);\n    this.handleUpdatePasswordRequest = this.handleUpdatePasswordRequest.bind(this);\n    this.handleUpdateAccountTagsRequest = this.handleUpdateAccountTagsRequest.bind(this);\n    this.handleToggleIncognitoMode = this.handleToggleIncognitoMode.bind(this);\n    this.handleSettings = this.handleSettings.bind(this);\n    this.handleGlobalSettings = this.handleGlobalSettings.bind(this);\n    this.handleShowArchive = this.handleShowArchive.bind(this);\n    this.handleShowBlocked = this.handleShowBlocked.bind(this);\n    this.handleToggleMessageSounds = this.handleToggleMessageSounds.bind(this);\n    this.handleCredAdd = this.handleCredAdd.bind(this);\n    this.handleCredDelete = this.handleCredDelete.bind(this);\n    this.handleCredConfirm = this.handleCredConfirm.bind(this);\n    this.initFCMessaging = this.initFCMessaging.bind(this);\n    this.togglePushToken = this.togglePushToken.bind(this);\n    this.requestPushToken = this.requestPushToken.bind(this);\n    this.handlePushMessage = this.handlePushMessage.bind(this);\n    this.handleSidepanelCancel = this.handleSidepanelCancel.bind(this);\n    this.handleStartTopicRequest = this.handleStartTopicRequest.bind(this);\n    this.handleNewTopicCreated = this.handleNewTopicCreated.bind(this);\n    this.handleTopicUpdateRequest = this.handleTopicUpdateRequest.bind(this);\n    this.handleUnarchive = this.handleUnarchive.bind(this);\n    this.handleChangePermissions = this.handleChangePermissions.bind(this);\n    this.handleTagsUpdateRequest = this.handleTagsUpdateRequest.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n    this.handleDeleteTopicRequest = this.handleDeleteTopicRequest.bind(this);\n    this.handleDeleteMessagesRequest = this.handleDeleteMessagesRequest.bind(this);\n    this.handleLeaveUnsubRequest = this.handleLeaveUnsubRequest.bind(this);\n    this.handleBlockTopicRequest = this.handleBlockTopicRequest.bind(this);\n    this.handleReportTopic = this.handleReportTopic.bind(this);\n    this.handleShowContextMenu = this.handleShowContextMenu.bind(this);\n    this.defaultTopicContextMenu = this.defaultTopicContextMenu.bind(this);\n    this.handleHideContextMenu = this.handleHideContextMenu.bind(this);\n    this.handleShowAlert = this.handleShowAlert.bind(this);\n    this.handleShowInfoView = this.handleShowInfoView.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleValidateCredentialsRequest = this.handleValidateCredentialsRequest.bind(this);\n    this.handlePasswordResetRequest = this.handlePasswordResetRequest.bind(this);\n    this.handleResetPassword = this.handleResetPassword.bind(this);\n    this.handleContextMenuAction = this.handleContextMenuAction.bind(this);\n\n    this.handleShowForwardDialog = this.handleShowForwardDialog.bind(this);\n    this.handleHideForwardDialog = this.handleHideForwardDialog.bind(this);\n\n    this.sendMessageToTopic = this.sendMessageToTopic.bind(this);\n  }\n\n  getBlankState() {\n    const settings = LocalStorageUtil.getObject('settings') || {};\n    const persist = !!LocalStorageUtil.getObject('keep-logged-in');\n\n    return {\n      connected: false,\n      // Connected and subscribed to 'me'\n      ready: false,\n      // Try to re-login on new connection.\n      autoLogin: false,\n      transport: settings.transport || null,\n      serverAddress: settings.serverAddress || detectServerAddress(),\n      serverVersion: \"no connection\",\n      // \"On\" is the default, so saving the \"off\" state.\n      messageSounds: !settings.messageSoundsOff,\n      incognitoMode: false,\n      desktopAlerts: persist && !!settings.desktopAlerts,\n      desktopAlertsEnabled: (isSecureConnection() || isLocalHost()) &&\n        (typeof firebase != 'undefined') && (typeof navigator != 'undefined') &&\n        (typeof FIREBASE_INIT != 'undefined'),\n      firebaseToken: persist ? LocalStorageUtil.getObject('firebase-token') : null,\n\n      applicationVisible: !document.hidden,\n\n      errorText: '',\n      errorLevel: null,\n      errorAction: undefined,\n      errorActionText: null,\n\n      sidePanelSelected: 'login',\n      sidePanelTitle: null,\n      sidePanelAvatar: null,\n      myTrustedBadges: [],\n      loadSpinnerVisible: false,\n\n      login: '',\n      password: '',\n      persist: persist,\n      myUserId: null,\n      liveConnection: navigator.onLine,\n      topicSelected: '',\n      topicSelectedOnline: false,\n      topicSelectedAcs: null,\n      newTopicParams: null,\n      loginDisabled: false,\n      displayMobile: (window.innerWidth <= MEDIA_BREAKPOINT),\n      infoPanel: undefined,\n      mobilePanel: 'sidepanel',\n\n      contextMenuVisible: false,\n      contextMenuBounds: null,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuItems: [],\n\n      forwardDialogVisible: false,\n      forwardDialogClickAt: null,\n      forwardMessage: null,\n\n      // Modal alert dialog.\n      alertVisible: false,\n      alertParams: {},\n\n      // Chats as shown in the ContactsView\n      chatList: [],\n      // Contacts returned by a search query.\n      searchResults: [],\n      // Merged results of a search query and p2p chats.\n      searchableContacts: [],\n      credMethod: undefined,\n      credCode: undefined,\n      // Topic to go to after login.\n      requestedTopic: undefined\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    window.addEventListener('online', (e) => { this.handleOnline(true); });\n    window.addEventListener('offline', (e) => { this.handleOnline(false); });\n    window.addEventListener('hashchange', this.handleHashRoute);\n\n    // Process background notifications from the service worker.\n    if (typeof BroadcastChannel == 'function') {\n      const serviceWorkerChannel = new BroadcastChannel('tinode-sw');\n      serviceWorkerChannel.addEventListener('message', this.handlePushMessage);\n    } else {\n      // Safari is broken by design.\n      console.warn(\"Your browser does not support BroadcastChannel. Some features will not be available\");\n    }\n\n    // Window/tab visible or invisible for pausing timers.\n    document.addEventListener('visibilitychange', this.handleVisibilityEvent);\n\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n\n    new Promise((resolve, reject) => {\n      this.tinode = TinodeWeb.tnSetup(this.state.serverAddress, this.state.transport,\n        this.props.intl.locale, this.state.persist, resolve);\n      this.tinode.onConnect = this.handleConnected;\n      this.tinode.onDisconnect = this.handleDisconnect;\n      this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n    }).then(() => {\n      // Initialize desktop alerts.\n      if (this.state.desktopAlertsEnabled) {\n        this.initFCMessaging().then(() => {\n          if (this.state.desktopAlerts) {\n            if (!this.state.firebaseToken) {\n              this.togglePushToken(true);\n            } else {\n              this.tinode.setDeviceToken(this.state.firebaseToken);\n            }\n          }\n        }).catch(() => {\n          // do nothing: handled earlier.\n          // catch needed to pervent unnecessary logging of error.\n        });\n      }\n\n      // Parse and save the hash navigation params.\n      const parsedNav = HashNavigation.parseUrlHash(window.location.hash);\n\n      // Read contacts from cache.\n      this.resetContactList();\n\n      const token = this.state.persist ? LocalStorageUtil.getObject('auth-token') : undefined;\n      if (token) {\n        this.setState({autoLogin: true});\n\n        // When reading from storage, date is returned as string.\n        token.expires = new Date(token.expires);\n        this.tinode.setAuthToken(token);\n        this.tinode.connect().catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n      }\n\n      // Save possible topic name and navigate to blank state.\n      this.setState({requestedTopic: parsedNav.path[1]});\n      HashNavigation.navigateTo('');\n\n      this.readTimer = null;\n      this.readTimerCallback = null;\n\n      this.handleHashRoute();\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n    window.removeEventListener('hashchange', this.handleHashRoute);\n    document.removeEventListener('visibilitychange', this.handleVisibilityEvent);\n  }\n\n  // Setup transport (usually websocket) and server address. This will terminate connection with the server.\n  static tnSetup(serverAddress, transport, locale, persistentCache, onSetupCompleted) {\n    const tinode = new Tinode({appName: APP_NAME, host: serverAddress, apiKey: API_KEY, transport: transport,\n      secure: isSecureConnection(), persist: persistentCache}, onSetupCompleted);\n    tinode.setHumanLanguage(locale);\n    tinode.enableLogging(LOGGING_ENABLED, true);\n    return tinode;\n  }\n\n  // Notifiy Tinode that a push message was received from the server.\n  handlePushMessage(data) {\n    if (data.what == 'msg' && Tinode.isChannelTopicName(data.topic)) {\n      // The last argument is a fake user Id: otherwise the update is seen as one from the current user.\n      this.tinode.oobNotification(data.topic, data.seq, 'fake-uid');\n    }\n  }\n\n  initFCMessaging() {\n    const {formatMessage, locale} = this.props.intl;\n    const onError = (msg, err) => {\n      console.error(msg, err);\n      this.handleError(formatMessage(messages.push_init_failed), 'err');\n      this.setState({desktopAlertsEnabled: false});\n    }\n\n    try {\n      this.fbPush = firebase.initializeApp(FIREBASE_INIT, APP_NAME).messaging();\n      this.fbPush.usePublicVapidKey(FIREBASE_INIT.messagingVapidKey);\n\n      return navigator.serviceWorker.register('/service-worker.js').then((reg) => {\n        this.checkForAppUpdate(reg);\n        this.fbPush.useServiceWorker(reg);\n        reg.active.postMessage(JSON.stringify({locale: locale, version: PACKAGE_VERSION}));\n\n        // Google could not be bothered to mention that onTokenRefresh is never called.\n        this.fbPush.onTokenRefresh(() => {\n          this.requestPushToken();\n        });\n\n        // Handhe FCM pushes\n        // (a) for channels always,\n        // (b) pushes when the app is in foreground but has not focus.\n        this.fbPush.onMessage(payload => { this.handlePushMessage(payload.data); });\n\n        return reg;\n      }).catch((err) => {\n        // registration failed :(\n        onError(\"Failed to register service worker:\", err);\n        return Promise.reject(err);\n      });\n    } catch (err) {\n      onError(\"Failed to initialize push notifications\", err);\n      return Promise.reject(err);\n    }\n  }\n\n  handleResize() {\n    const mobile = document.documentElement.clientWidth <= MEDIA_BREAKPOINT;\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n    if (this.state.displayMobile != mobile) {\n      this.setState({displayMobile: mobile});\n    }\n  }\n\n  // Check if a newer version of TinodeWeb app is available at the server.\n  checkForAppUpdate(reg) {\n    reg.onupdatefound = () => {\n      const installingWorker = reg.installing;\n      installingWorker.onstatechange = () => {\n        if (installingWorker.state == 'installed' && navigator.serviceWorker.controller) {\n          const msg = <>\n            <FormattedMessage id=\"update_available\"\n              defaultMessage=\"Update available.\"\n              description=\"Message shown when an app update is available.\" /> <a href=\"\">\n              <FormattedMessage id=\"reload_update\"\n                defaultMessage=\"Reload\"\n                description=\"Call to action to reload application when update is available.\" />\n            </a>.</>;\n          this.handleError(msg, 'info');\n        }\n      }\n    }\n  }\n\n  // Handle for hashchange event: display appropriate panels.\n  handleHashRoute() {\n    const hash = HashNavigation.parseUrlHash(window.location.hash);\n    if (hash.path && hash.path.length > 0) {\n      // Left-side panel selector.\n      if (['register','settings','edit','notif','security','support','general','crop',\n          'cred','reset','newtpk','archive','blocked','contacts',''].includes(hash.path[0])) {\n        this.setState({sidePanelSelected: hash.path[0]});\n      } else {\n        console.warn(\"Unknown sidepanel view\", hash.path[0]);\n      }\n\n      // Topic for MessagesView selector.\n      let topicName = hash.path[1] || null;\n      if (topicName != this.state.topicSelected) {\n        if (!Tinode.topicType(topicName)) {\n          // Clear invalid topic name.\n          topicName = null;\n        }\n        const newState = {\n          topicSelected: topicName\n        };\n        const acs = this.tinode.getTopicAccessMode(topicName);\n        if (acs) {\n          newState.topicSelectedAcs = acs;\n        }\n        this.setState(newState);\n      }\n    } else {\n      // Empty hashpath\n      this.setState({sidePanelSelected: '', topicSelected: null});\n    }\n\n    // Save validation credentials, if available.\n    if (hash.params.method) {\n      this.setState({ credMethod: hash.params.method });\n    }\n    if (hash.params.code) {\n      this.setState({ credCode: hash.params.code });\n    }\n\n    // Additional parameters of panels.\n    this.setState({\n      infoPanel: hash.params.info,\n      newTopicTabSelected: hash.params.tab\n    });\n  }\n\n  handleOnline(online) {\n    if (online) {\n      this.handleError();\n      clearInterval(this.reconnectCountdown);\n      this.tinode.reconnect();\n    } else {\n      this.handleError(this.props.intl.formatMessage(messages.no_connection), 'warn');\n    }\n    this.setState({liveConnection: online});\n  }\n\n  handleVisibilityEvent() {\n    this.setState({applicationVisible: !document.hidden});\n  }\n\n  handleError(err, level, action, actionText) {\n    this.setState({errorText: err, errorLevel: level, errorAction: action, errorActionText: actionText});\n  }\n\n  // User clicked Login button in the side panel.\n  handleLoginRequest(login, password) {\n    this.setState({\n      loginDisabled: true,\n      login: login,\n      password: password,\n      loadSpinnerVisible: true,\n      autoLogin: true\n    });\n    this.handleError('', null);\n\n    if (this.tinode.isConnected()) {\n      this.doLogin(login, password, {meth: this.state.credMethod, resp: this.state.credCode});\n    } else {\n      this.tinode.connect().catch((err) => {\n        // Socket error\n        this.setState({loginDisabled: false, autoLogin: false, loadSpinnerVisible: false});\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // Enable or disable saving the password and IndexedDB.\n  handlePersistenceChange(persist) {\n    if (persist) {\n      this.tinode.initStorage().then(() => {\n        LocalStorageUtil.setObject('keep-logged-in', true);\n        this.setState({persist: true});\n      });\n    } else {\n      this.tinode.clearStorage().then(() => {\n        LocalStorageUtil.setObject('keep-logged-in', false);\n        this.setState({persist: false});\n      });\n    }\n  }\n\n  // Connection succeeded.\n  handleConnected() {\n    // Just to be sure.\n    clearInterval(this.reconnectCountdown);\n    this.handleError();\n\n    const params = this.tinode.getServerInfo();\n    this.setState({\n      serverVersion: params.ver + ' ' + (params.build ? params.build : 'none')\n    });\n\n    if (this.state.autoLogin) {\n      this.doLogin(this.state.login, this.state.password, {meth: this.state.credMethod, resp: this.state.credCode});\n    }\n  }\n\n  // Called for each auto-reconnect iteration.\n  handleAutoreconnectIteration(sec, prom) {\n    clearInterval(this.reconnectCountdown);\n\n    if (sec < 0) {\n      // Clear error\n      this.handleError();\n      return;\n    }\n\n    if (prom) {\n      // Reconnecting now\n      prom.then(() => {\n        // Reconnected: clear error\n        this.handleError();\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n      return;\n    }\n\n    const {formatMessage} = this.props.intl;\n    let count = sec / 1000;\n    count = count | count;\n    this.reconnectCountdown = setInterval(() => {\n      const timeLeft = (count > 99) ? secondsToTime(count) : count;\n      this.handleError(\n        formatMessage(messages.reconnect_countdown, {seconds: timeLeft}),\n        'warn',\n        () => {\n          clearInterval(this.reconnectCountdown);\n          this.tinode.reconnect();\n        },\n        formatMessage(messages.reconnect_now)\n      );\n      count -= 1;\n    }, 1000);\n  }\n\n  // Connection lost\n  handleDisconnect(err) {\n    this.setState({\n      connected: false,\n      ready: false,\n      topicSelectedOnline: false,\n      errorText: err && err.message ? err.message : \"Disconnected\",\n      errorLevel: err && err.message ? 'err' : 'warn',\n      loginDisabled: false,\n      contextMenuVisible: false,\n      forwardDialogVisible: false,\n      serverVersion: \"no connection\"\n    });\n  }\n\n  doLogin(login, password, cred) {\n    if (this.tinode.isAuthenticated()) {\n      // Already logged in. Go to default screen.\n      HashNavigation.navigateTo('');\n      return;\n    }\n    // Sanitize and package credentail.\n    cred = Tinode.credential(cred);\n    // Try to login with login/password. If they are not available, try token. If no token, ask for login/password.\n    let promise = null;\n    let token = this.tinode.getAuthToken();\n    if (login && password) {\n      token = null;\n      this.setState({password: null});\n      promise = this.tinode.loginBasic(login, password, cred);\n    } else if (token) {\n      promise = this.tinode.loginToken(token.token, cred);\n    }\n\n    if (promise) {\n      promise.then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text === 'validate credentials') {\n          this.setState({loadSpinnerVisible: false});\n          if (cred) {\n            this.handleError(this.props.intl.formatMessage(messages.code_doesnot_match), 'warn');\n          }\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful();\n        }\n      }).catch((err) => {\n        // Login failed, report error.\n        this.setState({\n          loginDisabled: false,\n          credMethod: undefined,\n          credCode: undefined,\n          loadSpinnerVisible: false,\n          autoLogin: false\n        });\n        this.handleError(err.message, 'err');\n        if (token) {\n          this.handleLogout();\n        }\n        HashNavigation.navigateTo('');\n      });\n    } else {\n      // No login credentials provided.\n      // Make sure we are on the login page.\n      HashNavigation.navigateTo('');\n      this.setState({loginDisabled: false});\n    }\n  }\n\n  handleCredentialsRequest(params) {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    parsed.path[0] = 'cred';\n    parsed.params['method'] = params.cred[0];\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n  }\n\n  handleLoginSuccessful() {\n    this.handleError();\n\n    // Refresh authentication token.\n    if (LocalStorageUtil.getObject('keep-logged-in')) {\n      LocalStorageUtil.setObject('auth-token', this.tinode.getAuthToken());\n    }\n\n    const goToTopic = this.state.requestedTopic;\n    // Logged in fine, subscribe to 'me' attaching callbacks from the contacts view.\n    const me = this.tinode.getMeTopic();\n    me.onMetaDesc = this.tnMeMetaDesc;\n    me.onContactUpdate = this.tnMeContactUpdate;\n    me.onSubsUpdated = this.tnMeSubsUpdated;\n    this.setState({\n      connected: true,\n      credMethod: undefined,\n      credCode: undefined,\n      myUserId: this.tinode.getCurrentUserID(),\n      autoLogin: true,\n      requestedTopic: undefined,\n    });\n    // Subscribe, fetch topic desc, the list of subscriptions. Messages are not fetched.\n    me.subscribe(\n      me.startMetaQuery().\n        withLaterSub().\n        withDesc().\n        withTags().\n        withCred().\n        build()\n      ).catch((err) => {\n        this.tinode.disconnect();\n        localStorage.removeItem('auth-token');\n        this.handleError(err.message, 'err');\n        HashNavigation.navigateTo('');\n      }).finally(() => {\n        this.setState({loadSpinnerVisible: false});\n      });\n    let urlHash = HashNavigation.setUrlSidePanel(window.location.hash, 'contacts');\n    if (goToTopic) {\n      urlHash = HashNavigation.setUrlTopic(urlHash, goToTopic);\n    }\n    HashNavigation.navigateTo(urlHash);\n  }\n\n  tnMeMetaDesc(desc) {\n    if (desc) {\n      if (desc.public) {\n        this.setState({\n          sidePanelTitle: desc.public.fn,\n          sidePanelAvatar: makeImageUrl(desc.public.photo)\n        });\n      }\n      if (desc.trusted) {\n        const badges = [];\n        for (const [key, val] of Object.entries(desc.trusted)) {\n          if (val) {\n            badges.push(key);\n          }\n        }\n        this.setState({\n          myTrustedBadges: badges,\n        });\n      }\n      if (desc.acs) {\n        this.setState({\n          incognitoMode: !desc.acs.isPresencer()\n        });\n      }\n    }\n  }\n\n  // Reactions to updates to the contact list.\n  tnMeContactUpdate(what, cont) {\n    if (what == 'on' || what == 'off') {\n      this.resetContactList();\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedOnline: (what == 'on')});\n      }\n    } else if (what == 'read') {\n      this.resetContactList();\n    } else if (what == 'msg') {\n      // Check if the topic is archived. If so, don't play a sound.\n      const topic = this.tinode.getTopic(cont.topic);\n      const archived = topic && topic.isArchived();\n\n      // New message received. Maybe the message is from the current user, then unread is 0.\n      if (cont.unread > 0 && this.state.messageSounds && !archived) {\n        // Skip update if the topic is currently open, otherwise the badge will annoyingly flash.\n        if (document.hidden || this.state.topicSelected != cont.topic) {\n          POP_SOUND.play();\n        }\n      }\n      // Reorder contact list to use possibly updated 'touched'.\n      this.resetContactList();\n    } else if (what == 'recv') {\n      // Explicitly ignoring \"recv\" -- it causes no visible updates to contact list.\n    } else if (what == 'gone' || what == 'unsub') {\n      // Topic deleted or user unsubscribed. Remove topic from view.\n      // If the currently selected topic is gone, clear the selection.\n      if (this.state.topicSelected == cont.topic) {\n        this.handleTopicSelected(null);\n      }\n      // Redraw without the deleted topic.\n      this.resetContactList();\n    } else if (what == 'acs') {\n      // Permissions changed. If it's for the currently selected topic,\n      // update the views.\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedAcs: cont.acs});\n      }\n    } else if (what == 'del') {\n      // TODO: messages deleted (hard or soft) -- update pill counter.\n    } else if (what == 'upd') {\n      // upd - handled by the SDK. Explicitly ignoring here.\n    } else {\n      // TODO(gene): handle other types of notifications:\n      // * ua -- user agent changes (maybe display a pictogram for mobile/desktop).\n      console.info(\"Unsupported (yet) presence update:\" + what + \" in: \" + cont.topic);\n    }\n  }\n\n  tnMeSubsUpdated(unused) {\n    this.resetContactList();\n  }\n\n  // Merge search results and contact list to create a single flat\n  // list of known contacts for GroupManager to use.\n  static prepareSearchableContacts(chatList, foundContacts) {\n    const merged = {};\n\n    // For chatList topics merge only p2p topics and convert them to the\n    // same format as foundContacts.\n    for (const c of chatList) {\n      if (Tinode.isP2PTopicName(c.topic)) {\n          merged[c.topic] = {\n            user: c.topic,\n            updated: c.updated,\n            public: c.public,\n            private: c.private,\n            acs: c.acs\n          };\n      }\n    }\n\n    // Add all foundCountacts if they have not been added already.\n    for (const c of foundContacts) {\n      if (!merged[c.user]) {\n        merged[c.user] = c;\n      }\n    }\n\n    return Object.values(merged);\n  }\n\n  resetContactList() {\n    const newState = {\n      chatList: []\n    };\n\n    if (!this.state.ready) {\n      newState.ready = true;\n    }\n\n    this.tinode.getMeTopic().contacts((c) => {\n      if (!c.topic && !c.user) {\n        // Contacts expect c.topic to be set.\n        c.topic = c.name;\n      }\n\n      newState.chatList.push(c);\n      if (this.state.topicSelected == c.topic) {\n        newState.topicSelectedOnline = c.online;\n        newState.topicSelectedAcs = c.acs;\n      }\n    });\n\n    const past = new Date(0);\n    newState.chatList.sort((a, b) => {\n      return (a.touched || past).getTime() - (b.touched || past).getTime();\n    });\n\n    // Merge search results and chat list.\n    newState.searchableContacts = TinodeWeb.prepareSearchableContacts(newState.chatList, this.state.searchResults);\n    this.setState(newState);\n  }\n\n  // Sending \"received\" notifications\n  tnData(data) {\n    const topic = this.tinode.getTopic(data.topic);\n    if (topic.msgStatus(data, true) >= Tinode.MESSAGE_STATUS_SENT && data.from != this.state.myUserId) {\n      clearTimeout(this.receivedTimer);\n      this.receivedTimer = setTimeout(() => {\n        this.receivedTimer = undefined;\n        topic.noteRecv(data.seq);\n      }, RECEIVED_DELAY);\n    }\n  }\n\n  /* Fnd topic: find contacts by tokens */\n  tnInitFind() {\n    const fnd = this.tinode.getFndTopic();\n    fnd.onSubsUpdated = this.tnFndSubsUpdated;\n    if (fnd.isSubscribed()) {\n      this.tnFndSubsUpdated();\n    } else {\n      fnd.subscribe(fnd.startMetaQuery().withSub().build()).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  tnFndSubsUpdated() {\n    const foundContacts = [];\n    // Don't attempt to create P2P topics which already exist. Server will reject the duplicates.\n    this.tinode.getFndTopic().contacts((s) => {\n      foundContacts.push(s);\n    });\n    this.setState({\n      searchResults: foundContacts,\n      searchableContacts: TinodeWeb.prepareSearchableContacts(this.state.chatList, foundContacts)\n    });\n  }\n\n  /** Called when the user enters a contact into the contact search field in the NewAccount panel\n    @param query {Array} is an array of contacts to search for\n   */\n  handleSearchContacts(query) {\n    const fnd = this.tinode.getFndTopic();\n    fnd.setMeta({desc: {public: query}}).then((ctrl) => {\n      return fnd.getMeta(fnd.startMetaQuery().withSub().build());\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  // User clicked on a contact in the side panel or deleted a contact.\n  handleTopicSelected(topicName) {\n    // Clear newTopicParams after use.\n    if (this.state.newTopicParams && this.state.newTopicParams._topicName != topicName) {\n      this.setState({\n        newTopicParams: null\n      });\n    }\n\n    if (topicName) {\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'topic-view',\n        infoPanel: undefined\n      });\n      // Different contact selected.\n      if (this.state.topicSelected != topicName) {\n        this.setState({\n          topicSelectedOnline: this.tinode.isTopicOnline(topicName),\n          topicSelectedAcs: this.tinode.getTopicAccessMode(topicName),\n          forwardMessage: null\n        });\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', topicName));\n      }\n    } else {\n      // Currently selected contact deleted\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'sidepanel',\n        topicSelectedOnline: false,\n        topicSelectedAcs: null,\n        infoPanel: undefined,\n        forwardMessage: null\n      });\n\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic('', null));\n    }\n  }\n\n  // In mobile view user requested to show sidepanel\n  handleHideMessagesView() {\n    this.setState({\n      mobilePanel: 'sidepanel'\n    });\n    HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, null));\n  }\n\n  // User is sending a message, either plain text or a drafty object, possibly\n  // with attachments.\n  //  - msg - Drafty message with content\n  //  - promise - Promise to be resolved when the upload is completed\n  //  - uploader - for tracking progress\n  //  - head - head dictionary to be attached to the message\n  handleSendMessage(msg, promise, uploader, head) {\n    const topic = this.tinode.getTopic(this.state.topicSelected);\n    this.sendMessageToTopic(topic, msg, promise, uploader, head);\n  }\n\n  sendMessageToTopic(topic, msg, promise, uploader, head) {\n    msg = topic.createMessage(msg, false);\n    // The uploader is used to show progress.\n    msg._uploader = uploader;\n\n    if (head) {\n      msg.head = Object.assign(msg.head || {}, head);\n    }\n\n    if (!topic.isSubscribed()) {\n      // Topic is not subscribed yet. Subscribe.\n      if (!promise) {\n        promise = Promise.resolve();\n      }\n      promise = promise\n        .then(() => topic.subscribe())\n        .then(() => {\n          // If there are unsent messages, try sending them now.\n          topic.queuedMessages((pub) => {\n            if (!pub._sending && topic.isSubscribed()) {\n              this.sendMessage(pub);\n            }\n          });\n        });\n    }\n\n    if (promise) {\n      promise = promise.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n\n    topic.publishDraft(msg, promise)\n      .then((ctrl) => {\n        if (topic.isArchived()) {\n          return topic.archive(false);\n        }\n      })\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleNewChatInvitation(topicName, action) {\n    const topic = this.tinode.getTopic(topicName);\n    let response = null;\n    switch (action) {\n      case 'accept':\n        // Accept given permissions.\n        const mode = topic.getAccessMode().getGiven();\n        response = topic.setMeta({sub: {mode: mode}});\n        if (topic.isP2PType()) {\n          // For P2P topics change 'given' permission of the peer too.\n          // In p2p topics the other user has the same name as the topic.\n          response = response.then((ctrl) => {\n            topic.setMeta({sub: {user: topicName, mode: mode}});\n          });\n        }\n        break;\n      case 'delete':\n        // Ignore invitation by deleting it.\n        response = topic.delTopic(true);\n        break;\n      case 'block':\n        // Ban the topic making futher invites impossible.\n        // Just self-ban.\n        const am = topic.getAccessMode().updateWant('-JP').getWant();\n        response = topic.setMeta({sub: {mode: am}}).then((ctrl) => {\n          return this.handleTopicSelected(null);\n        });\n        break;\n      default:\n        console.warn(\"Unknown invitation action\", '\"' + action + '\"\"');\n    }\n\n    if (response != null) {\n      response.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // User chose a Sign Up menu item.\n  handleNewAccount() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, 'register'));\n  }\n\n  // Actual registration of a new account.\n  handleNewAccountRequest(login_, password_, public_, cred_, tags_) {\n    // Clear old error, if any.\n    this.handleError();\n\n    this.tinode.connect(this.state.serverAddress)\n      .then(() => {\n        return this.tinode.createAccountBasic(login_, password_,\n          {public: public_, tags: tags_, cred: Tinode.credential(cred_)});\n      }).then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text == 'validate credentials') {\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful(this);\n        }\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleToggleIncognitoMode(on) {\n    // Make state undefined.\n    this.setState({incognitoMode: null});\n\n    const me = this.tinode.getMeTopic();\n    const am = me.getAccessMode().updateWant(on ? '-P' : '+P').getWant();\n    me.setMeta({sub: {mode: am}}).catch((err) => {\n      // Request failed, keep existing state.\n      this.setState({incognitoMode: !on});\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleUpdateAccountTagsRequest(tags) {\n    this.tinode.getMeTopic().setMeta({tags: tags})\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  // User chose Settings menu item.\n  handleSettings() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'edit' : 'settings'));\n  }\n\n  // User updated global parameters.\n  handleGlobalSettings(settings) {\n    const serverAddress = settings.serverAddress || this.state.serverAddress;\n    const transport = settings.transport || this.state.transport;\n    if (this.tinode) {\n      this.tinode.clearStorage();\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.tinode = TinodeWeb.tnSetup(serverAddress, transport, this.props.intl.locale,\n      LocalStorageUtil.getObject('keep-logged-in'));\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n\n    this.setState({\n      serverAddress: serverAddress,\n      transport: transport\n    });\n    LocalStorageUtil.setObject('settings', {\n      serverAddress: serverAddress,\n      transport: transport\n    });\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, ''));\n  }\n\n  // User chose 'Archived chats'.\n  handleShowArchive() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'archive' : ''));\n  }\n\n  // User viewes 'Blocked chats'.\n  handleShowBlocked() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'blocked' : ''));\n  }\n\n  togglePushToken(enabled) {\n    if (enabled) {\n      this.setState({desktopAlerts: null});\n      if (!this.state.firebaseToken) {\n        const fcm = this.fbPush ?\n          Promise.resolve() :\n          this.initFCMessaging();\n        fcm.then(() => {\n          return this.fbPush.requestPermission();\n        }).then(() => {\n          this.requestPushToken();\n        }).catch((err) => {\n          console.error(\"Failed to get notification permission.\", err);\n          this.handleError(err.message, 'err');\n          this.setState({desktopAlerts: false, firebaseToken: null});\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        });\n      } else {\n        this.setState({desktopAlerts: true});\n        if (LocalStorageUtil.getObject('keep-logged-in')) {\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n        }\n      }\n    } else if (this.state.firebaseToken && this.fbPush) {\n      this.fbPush.deleteToken(this.state.firebaseToken).catch((err) => {\n        console.error(\"Unable to delete token.\", err);\n      }).finally(() => {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        localStorage.removeItem('firebase-token');\n        this.setState({desktopAlerts: false, firebaseToken: null});\n        // Inform the server that the token was deleted.\n        this.tinode.setDeviceToken(null);\n      });\n    } else {\n      this.setState({desktopAlerts: false, firebaseToken: null});\n      LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n    }\n  }\n\n  requestPushToken() {\n    this.fbPush.getToken().then((refreshedToken) => {\n      const persist = LocalStorageUtil.getObject('keep-logged-in');\n      if (refreshedToken != this.state.firebaseToken) {\n        this.tinode.setDeviceToken(refreshedToken);\n        if (persist) {\n          LocalStorageUtil.setObject('firebase-token', refreshedToken);\n        }\n      }\n      this.setState({firebaseToken: refreshedToken, desktopAlerts: true});\n      if (persist) {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n      }\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n      console.error(\"Failed to retrieve firebase token\", err);\n    });\n  }\n\n  handleToggleMessageSounds(enabled) {\n    this.setState({messageSounds: enabled});\n    LocalStorageUtil.updateObject('settings', {\n      messageSoundsOff: !enabled\n    });\n  }\n\n  handleCredAdd(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.setMeta({cred: {meth: method, val: value}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredDelete(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.delCredential(method, value).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredConfirm(method, response) {\n    this.handleCredentialsRequest({cred: [method]});\n  }\n\n  // User clicked Cancel button in Setting or Sign Up panel.\n  handleSidepanelCancel() {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    let path = '';\n    if (['security','support','general','notif'].includes(parsed.path[0])) {\n      path = 'edit';\n    } else if ('crop' == parsed.path[0]) {\n      path = 'general';\n    } else if ('blocked' == parsed.path[0]) {\n      path = 'security';\n    } else if (this.state.myUserId) {\n      path = 'contacts';\n    }\n    parsed.path[0] = path;\n    if (parsed.params) {\n      delete parsed.params.code;\n      delete parsed.params.method;\n      delete parsed.params.tab;\n    }\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n    this.setState({errorText: '', errorLevel: null});\n  }\n\n  // Sidepanel navigator. No need to bind to 'this'.\n  basicNavigator(hash) {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, hash));\n  }\n\n  // Topic info navigator. No need to bind to 'this'.\n  infoNavigator(hash) {\n    HashNavigation.navigateTo(HashNavigation.setUrlInfoPanel(window.location.hash, hash));\n  }\n\n  // Request to start a topic, new or selected from search results, or \"by ID\".\n  handleStartTopicRequest(topicName, newTopicParams, isChannel) {\n    // Check if topic is indeed new. If not, launch it.\n    if (topicName && this.tinode.isTopicCached(topicName)) {\n      this.handleTopicSelected(topicName);\n      return;\n    }\n\n    const params = {};\n    if (Tinode.isP2PTopicName(topicName)) {\n      // Because we are initialing the subscription, set 'want' to all permissions.\n      params.sub = {mode: DEFAULT_P2P_ACCESS_MODE};\n      // Give the other user all permissions too.\n      params.desc = {defacs: {auth: DEFAULT_P2P_ACCESS_MODE}};\n    } else {\n      topicName = topicName || this.tinode.newGroupTopicName(isChannel);\n      params.desc = {public: newTopicParams.public, private: {comment: newTopicParams.private}};\n      params.tags = newTopicParams.tags;\n    }\n    params._topicName = topicName;\n    this.setState({newTopicParams: params}, () => {this.handleTopicSelected(topicName)});\n  }\n\n  // New topic was created, here is the new topic name.\n  handleNewTopicCreated(oldName, newName) {\n    if (this.state.topicSelected == oldName && oldName != newName) {\n      // If the current URl contains the old topic name, replace it with new.\n      // Update the name of the selected topic first so the navigator doen't clear\n      // the state.\n      this.setState({topicSelected: newName}, () => {\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', newName));\n      });\n    }\n  }\n\n  handleTopicUpdateRequest(topicName, pub, priv, defacs) {\n    this.handleError();\n\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const params = {};\n      let attachments;\n      if (pub) {\n        if (pub.photo) {\n          if (pub.photo.ref && pub.photo.ref != Tinode.DEL_CHAR) {\n            attachments = [pub.photo.ref];\n          } else if (!pub.photo.data || pub.photo.data == Tinode.DEL_CHAR) {\n            pub.photo = Tinode.DEL_CHAR;\n          }\n        }\n        params.public = pub;\n      }\n\n      if (typeof priv == 'string') {\n        params.private = (priv === Tinode.DEL_CHAR) ?\n          Tinode.DEL_CHAR : {comment: priv};\n      }\n      if (defacs) {\n        params.defacs = defacs;\n      }\n      topic.setMeta({desc: params, attachments: attachments}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleUnarchive(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      topic.archive(false);\n    }\n  }\n\n  handleUpdatePasswordRequest(password)  {\n    this.handleError();\n\n    if (password) {\n      this.tinode.updateAccountBasic(null, this.tinode.getCurrentLogin(), password).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleChangePermissions(topicName, mode, uid) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const am = topic.getAccessMode();\n      if (uid) {\n        am.updateGiven(mode);\n        mode = am.getGiven();\n      } else {\n        am.updateWant(mode);\n        mode = am.getWant();\n      }\n      topic.setMeta({sub: {user: uid, mode: mode}}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleTagsUpdateRequest(topicName, tags) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      topic.setMeta({tags: tags}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleLogout() {\n    updateFavicon(0);\n\n    // Remove stored data.\n    localStorage.removeItem('auth-token');\n    localStorage.removeItem('firebase-token');\n    localStorage.removeItem('settings');\n    if (this.state.firebaseToken) {\n      this.fbPush.deleteToken(this.state.firebaseToken)\n    }\n\n    clearInterval(this.reconnectCountdown);\n\n    if (this.tinode) {\n      this.tinode.clearStorage();\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.setState(this.getBlankState());\n\n    this.tinode = TinodeWeb.tnSetup(this.state.serverAddress,\n      this.state.transport, this.props.intl.locale, LocalStorageUtil.getObject('keep-logged-in'));\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n    HashNavigation.navigateTo('');\n  }\n\n  handleDeleteAccount() {\n    this.tinode.delCurrentUser(true).then((ctrl) => {\n      this.handleLogout();\n    });\n  }\n\n  handleDeleteTopicRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Request to hard-delete topic.\n    topic.delTopic(true).then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleDeleteMessagesRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Request hard-delete all messages.\n    topic.delMessagesAll(true).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleLeaveUnsubRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.leave(true).then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleBlockTopicRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleReportTopic(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Publish spam report.\n    this.tinode.publish(Tinode.TOPIC_SYS, Tinode.Drafty.attachJSON(null, {\n      'action': 'report',\n      'target': topicName\n    }));\n\n    // Remove J and P permissions.\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleShowContextMenu(params, menuItems) {\n    this.setState({\n      contextMenuVisible: true,\n      contextMenuClickAt: {x: params.x, y: params.y},\n      contextMenuParams: params,\n      contextMenuItems: menuItems || this.defaultTopicContextMenu(params.topicName),\n      contextMenuBounds: this.selfRef.current.getBoundingClientRect()\n    });\n  }\n\n  handleShowForwardDialog(params) {\n    if (this.state.sidePanelSelected == 'newtpk') {\n      // If the Find panel is active, close it.\n      this.handleSidepanelCancel();\n    }\n    const header = '➦ ' + params.userName;\n    const content = params.forwarded ?\n        Tinode.Drafty.forwardedContent(params.content) :\n        typeof params.content == 'string' ?\n            Tinode.Drafty.init(params.content) : params.content;\n    const preview = Tinode.Drafty.preview(content, QUOTED_REPLY_LENGTH,\n                                          undefined, params.forwarded != null);\n    const msg = Tinode.Drafty.append(\n        Tinode.Drafty.appendLineBreak(\n            Tinode.Drafty.mention(header, params.userFrom)),\n        content);\n    const msgPreview = Tinode.Drafty.quote(header, params.userFrom, preview);\n    const head = {\n      forwarded: params.topicName + ':' + params.seq\n    };\n    this.setState({\n      forwardDialogVisible: true,\n      forwardMessage: { head: head, msg: msg, preview: msgPreview }\n    });\n  }\n\n  defaultTopicContextMenu(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n\n    let muted = false, blocked = false, self_blocked = false, subscribed = false, deleter = false, archived = false;\n    if (topic) {\n      subscribed = topic.isSubscribed();\n      archived = topic.isArchived();\n\n      const acs = topic.getAccessMode();\n      if (acs) {\n        muted = acs.isMuted();\n        blocked = !acs.isJoiner();\n        self_blocked = !acs.isJoiner('want');\n        deleter = acs.isDeleter();\n      }\n    }\n\n    return [\n      subscribed ? {\n        title: this.props.intl.formatMessage(messages.menu_item_info),\n        handler: this.handleShowInfoView\n      } : null,\n      subscribed ? 'messages_clear' : null,\n      subscribed && deleter ? 'messages_clear_hard' : null,\n      muted ? (blocked ? null : 'topic_unmute') : 'topic_mute',\n      self_blocked ? 'topic_unblock' : 'topic_block',\n      archived ? 'topic_restore' : 'topic_archive',\n      'topic_delete'\n    ];\n  }\n\n  handleHideContextMenu() {\n    this.setState({\n      contextMenuVisible: false,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuBounds: null\n    });\n  }\n\n  handleHideForwardDialog(keepForwardedMessage) {\n    this.setState({\n      forwardDialogVisible: false,\n      forwardMessage: keepForwardedMessage ? this.state.forwardMessage : null\n    });\n  }\n\n  handleContextMenuAction(action, promise, params) {\n    if (action == 'topic_archive') {\n      if (promise && params.topicName && params.topicName == this.state.topicSelected) {\n        promise.then(() => {\n          this.handleTopicSelected(null);\n        });\n      }\n    } else if (action == 'menu_item_forward') {\n      this.handleShowForwardDialog(params);\n    }\n  }\n\n  handleShowAlert(title, content, onConfirm, confirmText, onReject, rejectText) {\n    this.setState({\n      alertVisible: true,\n      alertParams: {\n        title: title,\n        content: content,\n        onConfirm: onConfirm,\n        confirm: confirmText,\n        onReject: onReject,\n        reject: rejectText\n      }\n    });\n  }\n\n  handleShowInfoView() {\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'info', 'info'));\n    this.setState({infoPanel: 'info'});\n  }\n\n  handleMemberUpdateRequest(topicName, added, removed) {\n    if (!topicName) {\n      return;\n    }\n\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    if (added && added.length > 0) {\n      added.map((uid) => {\n        topic.invite(uid, null).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n\n    if (removed && removed.length > 0) {\n      removed.map((uid) => {\n        topic.delSubscription(uid).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n  }\n\n  handleValidateCredentialsRequest(cred, code) {\n    if (this.tinode.isAuthenticated()) {\n      const me = this.tinode.getMeTopic();\n      me.setMeta({cred: {meth: cred, resp: code}})\n        .then(() => {\n          HashNavigation.navigateTo('');\n        })\n        .catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n    } else {\n      this.setState({credMethod: cred, credCode: code});\n      this.doLogin(null, null, {meth: cred, resp: code});\n    }\n  }\n\n  handlePasswordResetRequest(method, value) {\n    // If already connected, connnect() will return a resolved promise.\n    return this.tinode.connect()\n      .then(() => {\n        return this.tinode.requestResetAuthSecret('basic', method, value);\n      })\n      .catch((err) => {\n        // Socket error\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleResetPassword(scheme, newPassword, token) {\n    token = base64ReEncode(token);\n    if (!token) {\n      this.handleError(this.props.intl.formatMessage(messages.invalid_security_token), 'err');\n    } else {\n      this.tinode.connect()\n        .then(() => {\n          return this.tinode.updateAccountBasic(null, null, newPassword, {token: token});\n        })\n        .catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"app-container\" ref={this.selfRef}>\n        {this.state.contextMenuVisible ?\n          <ContextMenu\n            tinode={this.tinode}\n            bounds={this.state.contextMenuBounds}\n            clickAt={this.state.contextMenuClickAt}\n            params={this.state.contextMenuParams}\n            items={this.state.contextMenuItems}\n            hide={this.handleHideContextMenu}\n            onShowAlert={this.handleShowAlert}\n            onAction={this.handleContextMenuAction}\n            onTopicRemoved={(topicName) => {\n              if (topicName == this.state.topicSelected) {\n                this.handleTopicSelected(null);\n              }\n            }}\n            onError={this.handleError} />\n          :\n          null\n        }\n        {this.state.forwardDialogVisible ?\n          <ForwardDialog\n            tinode={this.tinode}\n            contacts={this.state.chatList}\n            topicSelected={this.props.topicSelected}\n            myUserId={this.state.myUserId}\n\n            hide={this.handleHideForwardDialog}\n            onInitFind={this.tnInitFind}\n            searchResults={this.state.searchResults}\n            onSearchContacts={this.handleSearchContacts}\n            onTopicSelected={this.handleStartTopicRequest}\n          />\n          :\n          null\n        }\n        <Alert\n          visible={this.state.alertVisible}\n          title={this.state.alertParams.title}\n          content={this.state.alertParams.content}\n          onReject={this.state.alertParams.onReject ? (() => { this.setState({alertVisible: false}); }) : null}\n          reject={this.state.alertParams.reject}\n          onConfirm={() => { this.setState({alertVisible: false}); this.state.alertParams.onConfirm(); }}\n          confirm={this.state.alertParams.confirm}\n          />\n        <SidepanelView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          displayMobile={this.state.displayMobile}\n          hideSelf={this.state.displayMobile && this.state.mobilePanel !== 'sidepanel'}\n          state={this.state.sidePanelSelected}\n          title={this.state.sidePanelTitle}\n          avatar={this.state.sidePanelAvatar}\n          trustedBadges={this.state.myTrustedBadges}\n          login={this.state.login}\n          persist={this.state.persist}\n          myUserId={this.state.myUserId}\n          loginDisabled={this.state.loginDisabled}\n          loadSpinnerVisible={this.state.loadSpinnerVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          topicSelected={this.state.topicSelected}\n          chatList={this.state.chatList}\n          credMethod={this.state.credMethod}\n          credCode={this.state.credCode}\n\n          transport={this.state.transport}\n          messageSounds={this.state.messageSounds}\n          desktopAlerts={this.state.desktopAlerts}\n          desktopAlertsEnabled={this.state.desktopAlertsEnabled}\n          incognitoMode={this.state.incognitoMode}\n          serverAddress={this.state.serverAddress}\n          serverVersion={this.state.serverVersion}\n\n          onGlobalSettings={this.handleGlobalSettings}\n          onSignUp={this.handleNewAccount}\n          onSettings={this.handleSettings}\n          onNavigate={this.basicNavigator}\n          onLoginRequest={this.handleLoginRequest}\n          onPersistenceChange={this.handlePersistenceChange}\n          onCreateAccount={this.handleNewAccountRequest}\n          onUpdateAccountDesc={this.handleTopicUpdateRequest}\n          onUpdatePassword={this.handleUpdatePasswordRequest}\n          onUpdateAccountTags={this.handleUpdateAccountTagsRequest}\n          onTogglePushNotifications={this.togglePushToken}\n          onToggleMessageSounds={this.handleToggleMessageSounds}\n          onToggleIncognitoMode={this.handleToggleIncognitoMode}\n          onCredAdd={this.handleCredAdd}\n          onCredDelete={this.handleCredDelete}\n          onCredConfirm={this.handleCredConfirm}\n          onTopicSelected={this.handleTopicSelected}\n          onCreateTopic={this.handleStartTopicRequest}\n          onLogout={this.handleLogout}\n          onDeleteAccount={this.handleDeleteAccount}\n          onShowAlert={this.handleShowAlert}\n          onCancel={this.handleSidepanelCancel}\n          onError={this.handleError}\n          onValidateCredentials={this.handleValidateCredentialsRequest}\n          onPasswordResetRequest={this.handlePasswordResetRequest}\n          onResetPassword={this.handleResetPassword}\n          onShowArchive={this.handleShowArchive}\n          onShowBlocked={this.handleShowBlocked}\n\n          onInitFind={this.tnInitFind}\n          searchResults={this.state.searchResults}\n          onSearchContacts={this.handleSearchContacts}\n\n          showContextMenu={this.handleShowContextMenu} />\n\n        <MessagesView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          ready={this.state.ready}\n          online={this.state.topicSelectedOnline}\n          acs={this.state.topicSelectedAcs}\n          displayMobile={this.state.displayMobile}\n          viewportWidth={this.state.viewportWidth}\n          viewportHeight={this.state.viewportHeight}\n          hideSelf={this.state.displayMobile &&\n            (this.state.mobilePanel !== 'topic-view' || this.state.infoPanel)}\n          topic={this.state.topicSelected}\n          myUserId={this.state.myUserId}\n          // User public.fn.\n          myUserName={this.state.sidePanelTitle}\n          serverVersion={this.state.serverVersion}\n          serverAddress={this.state.serverAddress}\n          applicationVisible={this.state.applicationVisible}\n\n          // Show the forwareded message if the user has selected a topic to forward this message to.\n          forwardedMessage={this.state.forwardMessage && !this.state.forwardMessage.head.forwarded.startsWith(this.stateTopicSelected) ? this.state.forwardMessage : null}\n          onCancelForwardMessage={this.handleHideForwardDialog}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          newTopicParams={this.state.newTopicParams}\n\n          onHideMessagesView={this.handleHideMessagesView}\n          onData={this.tnData}\n          onError={this.handleError}\n          onNewTopicCreated={this.handleNewTopicCreated}\n          showContextMenu={this.handleShowContextMenu}\n          onChangePermissions={this.handleChangePermissions}\n          onNewChat={this.handleNewChatInvitation}\n          sendMessage={this.handleSendMessage} />\n\n        {this.state.infoPanel ?\n          <InfoView\n            tinode={this.tinode}\n            connected={this.state.connected}\n            displayMobile={this.state.displayMobile}\n            topic={this.state.topicSelected}\n            searchableContacts={this.state.searchableContacts}\n            myUserId={this.state.myUserId}\n            panel={this.state.infoPanel}\n\n            errorText={this.state.errorText}\n            errorLevel={this.state.errorLevel}\n            errorAction={this.state.errorAction}\n            errorActionText={this.state.errorActionText}\n\n            onNavigate={this.infoNavigator}\n            onTopicDescUpdateRequest={this.handleTopicUpdateRequest}\n            onShowAlert={this.handleShowAlert}\n            onChangePermissions={this.handleChangePermissions}\n            onMemberUpdateRequest={this.handleMemberUpdateRequest}\n            onDeleteTopic={this.handleDeleteTopicRequest}\n            onDeleteMessages={this.handleDeleteMessagesRequest}\n            onLeaveTopic={this.handleLeaveUnsubRequest}\n            onBlockTopic={this.handleBlockTopicRequest}\n            onReportTopic={this.handleReportTopic}\n            onAddMember={this.handleManageGroupMembers}\n            onTopicTagsUpdateRequest={this.handleTagsUpdateRequest}\n            onTopicUnArchive={this.handleUnarchive}\n            onInitFind={this.tnInitFind}\n            onError={this.handleError}\n\n            showContextMenu={this.handleShowContextMenu}\n            />\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(TinodeWeb);\n","// Put all packages together.\n// Used to generate umd/index.prod.js\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { IntlProvider } from 'react-intl';\n\nimport allMessages from './messages.json';\nimport TinodeWeb from './views/tinode-web.jsx';\nimport HashNavigation from './lib/navigation.js';\n\n// Detect human language to use in the UI:\n//  Check parameters from URL hash #?hl=ru, then browser, then use 'en' as a fallback.\nconst { params } = HashNavigation.parseUrlHash(window.location.hash);\nconst language = (params && params.hl) ||\n  (navigator.languages && navigator.languages[0]) ||\n  navigator.language ||\n  navigator.userLanguage ||\n  'en';\n\n// Get the base language 'en' from a more specific 'en_GB' or 'en-US' as a partial fallback.\nconst baseLanguage = language.toLowerCase().split(/[-_]/)[0];\n\n// Try the full locale first, then the locale without the region code, fallback to 'en'.\nconst htmlLang = allMessages[language] ? langauge : allMessages[baseLanguage] ? baseLanguage : 'en';\nconst messages = allMessages[htmlLang];\n\n// Set lang attribute of the HTML element: <html lang=\"XX\">\ndocument.getElementsByTagName('html')[0].setAttribute('lang', htmlLang);\n\nReactDOM.render(\n  <React.StrictMode>\n    <IntlProvider locale={language} messages={messages} textComponent={React.Fragment}>\n      <TinodeWeb />\n    </IntlProvider>\n  </React.StrictMode>,\n  document.getElementById('mountPoint')\n);\n","// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// startup\n// Load entry module and return exports\n// This entry module doesn't tell about it's top-level declarations so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[141](0, __webpack_exports__, __webpack_require__);\n"],"names":["React","ReactDOM","ReactIntl","firebase","messaging","Tinode","Alert","render","this","props","visible","className","title","content","onReject","onClick","reject","FormattedMessage","id","defaultMessage","onConfirm","confirm","PACKAGE_VERSION","APP_NAME","KNOWN_HOSTS","hosted","local","DEFAULT_HOST","KEYPRESS_DELAY","DEFAULT_P2P_ACCESS_MODE","REM_SIZE","AVATAR_SIZE","MAX_INBAND_ATTACHMENT_SIZE","MAX_EXTERN_ATTACHMENT_SIZE","IMAGE_THUMBNAIL_DIM","MAX_TITLE_LENGTH","MAX_TOPIC_DESCRIPTION_LENGTH","messages","defineMessages","info","clear_messages","clear_for_all","delete","delete_for_all","send_retry","mute","unmute","reply","forward","topic_delete","topic_delete_warning","delete_messages_warning","unblock","block","topic_block_warning","member_delete","archive","unarchive","edit_permissions","clear_messages_warning","ContextMenu","constructor","super","selfRef","formatMessage","intl","handlePageClick","bind","handleEscapeKey","handleClick","MenuItems","handler","params","errorHandler","onShowAlert","deleteMessages","message","retryMessage","replyToMessage","forwardMessage","topicPermissionSetter","then","ctrl","onTopicRemoved","topicName","topic","tinode","getTopic","delTopic","catch","err","console","log","user","delSubscription","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","e","current","contains","target","preventDefault","stopPropagation","hide","keyCode","item","items","currentTarget","dataset","onAction","onError","error","all","hard","cancelSend","seq","delMessagesAll","delMessagesList","flushMessage","msg","createMessage","publishDraft","mode","result","updateMode","pickReply","forwarded","userFrom","userName","menu","count","map","push","key","vSize","length","position","left","bounds","right","clickAt","x","top","bottom","y","style","ref","injectIntl","icon_mapping","ContactBadges","badges","b","color","icon","name","shortDateFormat","locale","window","navigator","userLanguage","language","now","Date","getFullYear","getMonth","getDate","toLocaleTimeString","hour12","hour","minute","toLocaleDateString","month","day","year","bytesToHumanSize","bytes","sizes","bucket","Math","min","floor","log2","pow","round","toFixed","shortenFileName","filename","maxLength","slice","idToColorClass","light","fg","userId","abs","value","hash","i","charCodeAt","stringToColorHash","updateFavicon","oldIcon","getElementById","head","getElementsByTagName","newIcon","createElement","type","rel","href","removeChild","appendChild","theCard","fn","imageUrl","imageMimeType","note","card","trim","mimeType","matches","exec","photo","data","substring","indexOf","arrayEqual","a","Array","isArray","sort","l","sanitizeUrl","url","allowedSchemes","replace","test","schemes","join","RegExp","sanitizeImageUrl","sanitizedUrl","deliveryMarker","received","LetterTile","avatar","isGroup","iconColor","letter","charAt","authorizeURL","alt","src","onerror","message_sending","message_sending_failed","ReceivedMarker","timestamp","marker","UnreadBadge","LazyImage","state","Object","assign","padding","whenDone","promise","setState","cancel","componentDidUpdate","prevProps","FileProgress","width","progress","onCancel","UploadingImage","onCancelUpload","SUPPORTED_IMAGE_FORMATS","MIME_EXTENSIONS","makeImageUrl","startsWith","fitImageSize","height","maxWidth","maxHeight","forceSquare","scale","size","dstWidth","dstHeight","srcWidth","srcHeight","xoffset","yoffset","fileNameForMime","fname","mime","idx","ext","at","lastIndexOf","imageScaled","fileOrBlob","maxSize","Promise","resolve","img","Image","crossOrigin","Error","onload","async","URL","revokeObjectURL","dim","canvas","ctx","getContext","imageSmoothingEnabled","drawImage","includes","blob","toBlob","clearRect","createObjectURL","blobToBase64","reader","FileReader","evt","bits","split","readAsDataURL","drafty_form","drafty_attachment","drafty_image","handleImageData","el","attr","viewportWidth","minWidth","minHeight","Drafty","max","onImagePreview","loading","fullFormatter","values","call","onFormButtonClick","inner","child","undefined","val","onQuoteClick","concat","previewFormatter","inlineImageAttr","quoteFormatter","quoteImage","str","bin","atob","buf","ArrayBuffer","arr","Uint8Array","Blob","base64ToBlob","fetch","ok","status","statusText","scaled","b64","replyFormatter","hasCanceled","isCanceled","cancelablePromise","Contact","handleContextClick","onSelected","index","showContextMenu","pageY","pageX","online","icon_badges","isVerified","isStaff","isDangerous","acs","showMode","getMode","isMuted","isJoiner","subtitle","preview","comment","showCheckmark","selected","showOnline","isChannel","unread","small","ContactAction","action","badge_you","badge_owner","ContactList","topicSelected","contactNodes","contactsCount","contacts","c","filterFunc","filter","filterOn","private","toLowerCase","public","myUserId","isOwner","deliveryStatus","latestMessage","_status","msgStatus","substr","showUnread","connected","onTopicSelected","trusted","verified","staff","danger","noScroll","dangerouslySetInnerHTML","__html","emptyListMessage","SearchContacts","edited","search","handleSearchChange","handleSearch","handleClear","handleKeyDown","onSearchContacts","query","search_placeholder","placeholder","onChange","onKeyDown","required","autoFocus","ForwardDialog","handleClose","handleSearchContacts","handleContactSelected","onInitFind","uid","searchResults","isWriter","desription","LoadSpinner","large","clear","centered","show","AvatarUpload","source","handleFileReceived","image","files","onImageUpdated","randId","random","readOnly","accept","htmlFor","uploading","badge_verified","badge_staff","badge_danger","BadgeList","trustedBadges","CheckBox","handleChange","checked","MenuCancel","ErrorPanel","level","onClearError","warn","text","whiteSpace","actionText","Chip","handleCancel","invalid","noAvatar","ChipInput","deriveStateFromProps","input","focused","handleTextInput","removeChipAt","handleChipCancel","handleFocusGained","handleFocusLost","chips","prompt","sortedChips","sortChips","staticMembers","chipIndex","indexChips","prevState","keep","normal","removed","onChipRemoved","onFocusLost","onEnter","avatarDisabled","tabIndex","onFocus","onBlur","no_contacts","contacts_not_found_short","GroupManager","members","indexMembers","keepInitialMembers","requiredMember","contactFilter","noContactsMessage","selectedContacts","handleMemberRemoved","handleContactFilter","handleSubmit","m","delta","present","keepInitial","stat","sel","splice","instance","added","keys","k","onSubmit","doContactFiltering","joiner","writer","preser","approver","sharer","deleter","owner","PermissionsEditor","names","skip","compare","userTitle","userAvatar","modeTitle","compareTitle","Cropper","panX","panY","originX","originY","zoom","minZoom","maxZoom","overlay","cutout","boundingBox","imageWidth","imageHeight","mouseX","mouseY","prevDistance","cutoutRect","bBoxRect","initScaling","onZoom","handleZoom","mouseDown","mouseUp","mouseMove","mouseTouch","positionAll","translate","passive","getBoundingClientRect","currPan","nextDiff","imgRect","imgLeft","imgRight","coLeft","coRight","imgTop","imgBottom","coTop","coBottom","touches","body","dX","dY","checkBound","touch0","touch1","distance","sqrt","t3d","orig","transform","transformOrigin","onLoad","step","AvatarCrop","objURL","imageCrop","VisiblePassword","handleVisibility","handeTextChange","handleEditingFinished","onFinished","setTimeout","activeElement","autoComplete","InPlaceEdit","active","initialValue","handleStartEditing","handlePasswordFinished","newValue","focus","event","checkValidity","spanText","spanClass","multiline","element","rows","TagManager","tags","tagInput","activated","handleTagInput","handleAddTag","handleRemoveTag","nextProps","last","tag","maxTagCount","getServerLimit","onTagsChanged","minTagLength","maxTagLength","add_tags_prompt","TopicDescEdit","getAccessMode","isMe","fullName","description","newAvatar","newAvatarMime","previousOnTags","tnNewTags","handleFullNameUpdate","handleImageUpdated","handleAvatarCropped","handlePrivateUpdate","handleDescriptionUpdate","uploadAvatar","handleAvatarCropCancel","handleTagsUpdated","onTagsUpdated","onUpdateTopicDesc","desc","readyToUpload","uploader","getLargeFileHelper","upload","finally","du","onUpdateTags","editable","full_name_placeholder","group_name_placeholder","private_placeholder","title_tag_manager","TopicCommon","credentials","getCredentials","addCredActive","addCredInvalid","newCred","previousTagsUpdated","tnCredsUpdated","handleCredChange","handleCredKeyDown","handleCredEntered","onCredsUpdated","getType","creds","method","asPhone","asEmail","onCredAdd","onTopicTagsUpdateRequest","cred","meth","done","onCredConfirm","onCredDelete","delete_messages","leave_chat","leave_chat_warning","block_contact","block_contact_warning","report_chat","report_chat_warning","other_user","TopicSecurity","handleDeleteTopic","handleDeleteMessages","handleLeave","handleBlock","handleReport","onDeleteTopic","onDeleteMessages","onLeaveTopic","onBlockTopic","onReportTopic","channel","groupTopic","onLaunchPermissionsEditor","access","auth","anon","modeGiven2","general","security","crop","perm_want","perm_given","perm_auth","perm_anon","perm_user","_clip","InfoView","admin","muted","address","selectedContact","modeGiven","modeWant","modeWant2","contactList","previousMetaDesc","previousSubsUpdated","resetSubs","resetDesc","resetTags","onMetaDesc","onSubsUpdated","handleImageChanged","handleMuted","handleUnarchive","handlePermissionsChanged","handleLaunchPermissionsEditor","handleShowAddMembers","handleMemberUpdateRequest","handleMemberSelected","handleContextMenu","handleBackNavigate","newState","user2","subscriber","getGiven","getWant","subscribers","sub","defacs","getDefaultAccess","entries","isAdmin","isSharer","isDeleter","archived","isArchived","isGroupType","isChannelType","chan","getMeta","startMetaQuery","withTags","build","subs","onTopicDescUpdate","ignored","onChangePermissions","ignored2","onTopicUnArchive","which","perm","onTopicDescUpdateRequest","userPermissionsEdited","toEdit","toCompare","toSkip","titleEdit","titleCompare","userPermissionsTitle","userPermissionsAvatar","editedPermissions","immutablePermissions","editedPermissionsTitle","immutablePermissionsTitle","editedPermissionsSkipped","onNavigate","onMemberUpdateRequest","args","panel","menuItems","view","shift","panelTitle","displayMobile","errorLevel","errorText","searchableContacts","no_members","Attachment","downloader","downloadFile","mimetype","download","loaded","helperFunc","isUrlRelative","downloadUrl","downloadWidget","BaseChatMessage","onProgress","handleProgress","handleImagePreview","handleFormButtonClick","handleCancelUpload","handleQuoteClick","formatterContext","getFormatter","tp","resp","act","onFormResponse","MESSAGE_STATUS_FAILED","userIsWriter","MESSAGE_STATUS_DEL_RANGE","ratio","replyToSeq","sideClass","deleted","sequence","response","bubbleClass","fullDisplay","attachments","att","tree","innerRef","IntlChatMessage","messaging_disabled","type_new_message","add_image_caption","file_attachment_too_large","cannot_initiate_upload","SendMessage","keypressTimestamp","getTime","handlePasteEvent","handleAttachImage","handleAttachFile","handleSend","handleKeyPress","handleMessageTyping","messageEditArea","quote","replyTo","disabled","onImageSuccess","onAttachmentSuccess","clipboardData","originalEvent","kind","file","getAsFile","filePasted","onAttachImage","onAttachFile","acceptBlank","noInput","onSendMessage","shiftKey","onKeyPress","messagePrompt","onCancelReply","attachImage","click","attachFile","display","DocPreview","handleSendDoc","caption","onClose","mimeToIcon","default","video","iconFromMime","GroupSubs","usersOnline","totalCount","countToShow","some","overflow","ImagePreview","handleSendImage","assignWidth","node","maxlength","Invitation","handleButtonAction","LogoView","version","serverVersion","serverAddress","HashNavigation","parts","path","forEach","part","decodeURIComponent","location","hasOwnProperty","parsed","parseUrlHash","composeUrlHash","sidepanel","infopanel","online_now","last_seen","not_found","invalid_content","isUnconfirmed","ex","getExcessive","isPeerRestricted","ms","getMissing","MessagesView","getDerivedStateFromProps","leave","sendMessage","retrySend","sendImageAttachment","sendFileAttachment","sendKeyPress","subscribe","handleScrollReference","handleScrollEvent","handleDescChange","handleSubsUpdated","handleMessageUpdate","handleAllMessagesReceived","handleInfoReceipt","handleImagePostview","handleClosePreview","handleFormResponse","handleShowContextMenuMessage","handleNewChatAcceptance","handleEnablePeer","postReadNotification","clearNotificationQueue","handlePickReply","handleCancelReply","chatMessageRefs","getOrCreateMessageRef","readNotificationQueue","readNotificationTimer","seqId","messagesScroller","messageCount","scrollTop","scrollHeight","scrollPosition","viewportHeight","onData","onAllMessagesReceived","onInfo","onPres","applicationVisible","ready","nextState","forwardedMessage","docPreview","imagePreview","imagePostview","typingIndicator","fetchingMessages","onlineSubs","peer","p2pPeerDesc","peerMessagingDisabled","latestClearId","maxClearId","isReader","readingBlocked","unconformed","unconfirmed","isSubscribed","newTopic","newTopicParams","_topicName","getQuery","withLaterDesc","withLaterSub","withLaterData","withLaterDel","setQuery","code","onNewTopicCreated","queuedMessages","pub","_sending","navigateTo","setUrlTopic","blankState","oldTopicName","isTopicCached","oldTopic","msgHasMoreMessages","getMessagesPage","setInterval","clearInterval","n","sendAt","noteRead","setMilliseconds","getMilliseconds","clearTimeout","keyPressTimer","isNewMessage","from","what","forceUpdate","attachJSON","parse","searchParams","set","open","messageSpecificMenuItems","onNewChat","noteKeyPress","uploadCompletionPromise","append","maxInbandAttachmentSize","urlPromise","fileToBase64","maxExternAttachmentSize","limit","insertImage","_tempPreview","appendLineBreak","found","findMessage","_cancelled","senderId","senderName","forwardedContent","init","isValid","wrapInto","onCancelForwardMessage","scrollIntoView","behavior","classList","add","remove","component","hideSelf","component2","messageNodes","previousFrom","chatBoxClass","prev","next","nextFrom","thisFrom","isReply","userDesc","parseInt","isNaN","hi","ts","_uploader","lastSeen","cont","getMeTopic","getContact","seen","when","onHideMessagesView","ButtonBack","onBack","MenuContacts","onNewTopic","onSettings","MenuStart","onSignUp","SideNavbar","AccountSettingsView","me","archived_contacts_title","ContactsView","handleAction","unreadThreads","archivedCount","chatList","blocked","arch","touched","action_ignored","onShowArchive","LocalStorageUtil","localStorage","setItem","JSON","stringify","getItem","oldVal","getObject","setObject","removeItem","CreateAccountView","login","password","email","imageDataUrl","errorCleared","saveToken","handleLoginChange","handlePasswordChange","handleEmailChange","handleFnChange","handleToggleSaveToken","onCreateAccount","submitClasses","login_prompt","password_prompt","onImageChanged","full_name_prompt","email_prompt","stay_logged_in","EditAccountView","handleCheckboxClick","onToggleMessageSounds","onTogglePushNotifications","onToggleIncognitoMode","messageSounds","desktopAlertsEnabled","desktopAlerts","incognitoMode","delete_account","delete_account_warning","AccSecurityView","blockedCount","showPermissionEditorFor","handlePasswordUpdate","handleHidePermissionsEditor","handleDeleteAccount","pwd","onUpdatePassword","onUpdateAccountDesc","onDeleteAccount","password_unchanged","onLogout","onShowBlocked","AccSupportView","LoginView","hostName","persist","onPersistenceChange","onLogin","autoCorrect","autoCapitalize","invalid_id","NewTopicById","groupId","prefix","NewTopicGroup","handleFieldEdit","handleTagsChanged","handleChannelToggle","search_for_contacts","search_no_results","NewTopicView","tabSelected","searchQuery","handleTabClick","handleNewGroupSubmit","handleGroupByID","addUrlParam","removeUrlParam","onCreateTopic","dataUrl","priv","no_contacts_placeholder","PasswordResetView","sent","token","scheme","onReset","onRequest","HostSelector","changed","handleHostNameChange","onServerAddressChange","hostOptions","list","SettingsView","transport","handleTransportSelected","handleServerAddressChange","onUpdate","def","ws","lp","transportOptions","phone","ValidationView","credCode","credMethod","numbers_only","register","settings","edit","notif","support","newtpk","reset","SidepanelView","handleNewTopic","errorAction","errorActionText","loadSpinnerVisible","loginDisabled","onLoginRequest","onGlobalSettings","onUpdateAccountTags","onValidateCredentials","onPasswordResetRequest","onResetPassword","detectServerAddress","host","protocol","hostname","port","isSecureConnection","POP_SOUND","Audio","reconnect_countdown","reconnect_now","push_init_failed","invalid_security_token","no_connection","code_doesnot_match","menu_item_info","TinodeWeb","getBlankState","handleResize","handleHashRoute","handleOnline","checkForAppUpdate","handleVisibilityEvent","handleError","handleLoginRequest","handlePersistenceChange","handleConnected","handleAutoreconnectIteration","doLogin","handleCredentialsRequest","handleLoginSuccessful","handleDisconnect","tnMeMetaDesc","tnMeContactUpdate","tnMeSubsUpdated","resetContactList","tnData","tnInitFind","tnFndSubsUpdated","handleTopicSelected","handleHideMessagesView","handleSendMessage","handleNewChatInvitation","handleNewAccount","handleNewAccountRequest","handleUpdatePasswordRequest","handleUpdateAccountTagsRequest","handleToggleIncognitoMode","handleSettings","handleGlobalSettings","handleShowArchive","handleShowBlocked","handleToggleMessageSounds","handleCredAdd","handleCredDelete","handleCredConfirm","initFCMessaging","togglePushToken","requestPushToken","handlePushMessage","handleSidepanelCancel","handleStartTopicRequest","handleNewTopicCreated","handleTopicUpdateRequest","handleChangePermissions","handleTagsUpdateRequest","handleLogout","handleDeleteTopicRequest","handleDeleteMessagesRequest","handleLeaveUnsubRequest","handleBlockTopicRequest","handleReportTopic","handleShowContextMenu","defaultTopicContextMenu","handleHideContextMenu","handleShowAlert","handleShowInfoView","handleValidateCredentialsRequest","handlePasswordResetRequest","handleResetPassword","handleContextMenuAction","handleShowForwardDialog","handleHideForwardDialog","sendMessageToTopic","autoLogin","messageSoundsOff","FIREBASE_INIT","firebaseToken","hidden","sidePanelSelected","sidePanelTitle","sidePanelAvatar","myTrustedBadges","liveConnection","onLine","topicSelectedOnline","topicSelectedAcs","innerWidth","infoPanel","mobilePanel","contextMenuVisible","contextMenuBounds","contextMenuClickAt","contextMenuParams","contextMenuItems","forwardDialogVisible","forwardDialogClickAt","alertVisible","alertParams","requestedTopic","BroadcastChannel","documentElement","clientWidth","clientHeight","tnSetup","onConnect","onDisconnect","onAutoreconnectIteration","setDeviceToken","parsedNav","expires","setAuthToken","connect","readTimer","readTimerCallback","persistentCache","onSetupCompleted","appName","apiKey","secure","setHumanLanguage","enableLogging","oobNotification","fbPush","usePublicVapidKey","messagingVapidKey","serviceWorker","reg","useServiceWorker","postMessage","onTokenRefresh","onMessage","payload","mobile","onupdatefound","installingWorker","installing","onstatechange","controller","getTopicAccessMode","newTopicTabSelected","tab","reconnectCountdown","reconnect","isConnected","initStorage","clearStorage","getServerInfo","ver","sec","prom","timeLeft","seconds","secondsToTime","isAuthenticated","getAuthToken","loginBasic","loginToken","goToTopic","onContactUpdate","getCurrentUserID","withDesc","withCred","disconnect","urlHash","setUrlSidePanel","isPresencer","play","unused","foundContacts","merged","updated","past","prepareSearchableContacts","receivedTimer","noteRecv","fnd","getFndTopic","withSub","s","setMeta","isTopicOnline","isP2PType","am","updateWant","login_","password_","public_","cred_","tags_","createAccountBasic","on","enabled","updateObject","requestPermission","deleteToken","getToken","refreshedToken","delCredential","basicNavigator","infoNavigator","setUrlInfoPanel","newGroupTopicName","oldName","newName","updateAccountBasic","getCurrentLogin","updateGiven","delCurrentUser","publish","header","msgPreview","self_blocked","subscribed","keepForwardedMessage","confirmText","rejectText","invite","requestResetAuthSecret","newPassword","btoa","base64ReEncode","myUserName","stateTopicSelected","onAddMember","handleManageGroupMembers","hl","languages","baseLanguage","htmlLang","allMessages","langauge","setAttribute","IntlProvider","textComponent","__webpack_require__","module","getter","__esModule","d","exports","definition","o","defineProperty","enumerable","get","obj","prop","prototype","__webpack_modules__"],"sourceRoot":""}