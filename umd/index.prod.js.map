{"version":3,"sources":["webpack://tinode-webapp/external \"React\"","webpack://tinode-webapp/external \"ReactDOM\"","webpack://tinode-webapp/external \"ReactIntl\"","webpack://tinode-webapp/external \"firebase\"","webpack://tinode-webapp/external \"Tinode\"","webpack://tinode-webapp/external [\"firebase\",\"messaging\"]","webpack://tinode-webapp/./src/widgets/alert.jsx","webpack://tinode-webapp/./src/version.js","webpack://tinode-webapp/./src/config.js","webpack://tinode-webapp/./src/widgets/context-menu.jsx","webpack://tinode-webapp/./src/lib/strformat.js","webpack://tinode-webapp/./src/widgets/letter-tile.jsx","webpack://tinode-webapp/./src/lib/blob-helpers.js","webpack://tinode-webapp/./src/widgets/avatar-upload.jsx","webpack://tinode-webapp/./src/widgets/checkbox.jsx","webpack://tinode-webapp/./src/widgets/contact-badges.jsx","webpack://tinode-webapp/./src/lib/utils.js","webpack://tinode-webapp/./src/widgets/received-marker.jsx","webpack://tinode-webapp/./src/widgets/unread-badge.jsx","webpack://tinode-webapp/./src/widgets/contact.jsx","webpack://tinode-webapp/./src/widgets/contact-action.jsx","webpack://tinode-webapp/./src/widgets/contact-list.jsx","webpack://tinode-webapp/./src/widgets/menu-cancel.jsx","webpack://tinode-webapp/./src/widgets/error-panel.jsx","webpack://tinode-webapp/./src/widgets/chip.jsx","webpack://tinode-webapp/./src/widgets/chip-input.jsx","webpack://tinode-webapp/./src/widgets/group-manager.jsx","webpack://tinode-webapp/./src/widgets/visible-password.jsx","webpack://tinode-webapp/./src/widgets/in-place-edit.jsx","webpack://tinode-webapp/./src/widgets/more-button.jsx","webpack://tinode-webapp/./src/widgets/permissions-editor.jsx","webpack://tinode-webapp/./src/widgets/tag-manager.jsx","webpack://tinode-webapp/./src/views/info-view.jsx","webpack://tinode-webapp/./src/widgets/file-progress.jsx","webpack://tinode-webapp/./src/widgets/attachment.jsx","webpack://tinode-webapp/./src/widgets/uploading-image.jsx","webpack://tinode-webapp/./src/widgets/chat-message.jsx","webpack://tinode-webapp/./src/widgets/send-message.jsx","webpack://tinode-webapp/./src/widgets/doc-preview.jsx","webpack://tinode-webapp/./src/widgets/group-subs.jsx","webpack://tinode-webapp/./src/widgets/image-preview.jsx","webpack://tinode-webapp/./src/widgets/invitation.jsx","webpack://tinode-webapp/./src/widgets/load-spinner.jsx","webpack://tinode-webapp/./src/views/logo-view.jsx","webpack://tinode-webapp/./src/lib/navigation.js","webpack://tinode-webapp/./src/views/messages-view.jsx","webpack://tinode-webapp/./src/widgets/button-back.jsx","webpack://tinode-webapp/./src/widgets/menu-contacts.jsx","webpack://tinode-webapp/./src/widgets/menu-start.jsx","webpack://tinode-webapp/./src/widgets/side-navbar.jsx","webpack://tinode-webapp/./src/views/contacts-view.jsx","webpack://tinode-webapp/./src/lib/local-storage.js","webpack://tinode-webapp/./src/views/create-account-view.jsx","webpack://tinode-webapp/./src/views/edit-account-view.jsx","webpack://tinode-webapp/./src/views/acc-general-view.jsx","webpack://tinode-webapp/./src/views/acc-notifications-view.jsx","webpack://tinode-webapp/./src/views/acc-security-view.jsx","webpack://tinode-webapp/./src/views/acc-support-view.jsx","webpack://tinode-webapp/./src/views/login-view.jsx","webpack://tinode-webapp/./src/widgets/new-topic-by-id.jsx","webpack://tinode-webapp/./src/widgets/new-topic-group.jsx","webpack://tinode-webapp/./src/widgets/search-contacts.jsx","webpack://tinode-webapp/./src/views/new-topic-view.jsx","webpack://tinode-webapp/./src/views/password-reset-view.jsx","webpack://tinode-webapp/./src/widgets/host-selector.jsx","webpack://tinode-webapp/./src/views/settings-view.jsx","webpack://tinode-webapp/./src/views/validation-view.jsx","webpack://tinode-webapp/./src/views/sidepanel-view.jsx","webpack://tinode-webapp/./src/lib/host-name.js","webpack://tinode-webapp/./src/views/tinode-web.jsx","webpack://tinode-webapp/./src/index.js","webpack://tinode-webapp/webpack/bootstrap","webpack://tinode-webapp/webpack/runtime/compat get default export","webpack://tinode-webapp/webpack/runtime/define property getters","webpack://tinode-webapp/webpack/runtime/hasOwnProperty shorthand","webpack://tinode-webapp/webpack/startup"],"names":["React","ReactDOM","ReactIntl","firebase","messaging","Tinode","Alert","render","this","props","visible","className","title","content","onReject","onClick","reject","FormattedMessage","id","defaultMessage","onConfirm","confirm","PACKAGE_VERSION","APP_NAME","KNOWN_HOSTS","hosted","local","DEFAULT_HOST","KEYPRESS_DELAY","DEFAULT_P2P_ACCESS_MODE","REM_SIZE","AVATAR_SIZE","MAX_INBAND_ATTACHMENT_SIZE","MAX_EXTERN_ATTACHMENT_SIZE","MAX_IMAGE_DIM","MAX_TITLE_LENGTH","messages","defineMessages","info","clear_messages","clear_for_all","delete","delete_for_all","send_retry","mute","unmute","topic_delete","topic_delete_warning","delete_messages_warning","unblock","block","topic_block_warning","member_delete","archive","edit_permissions","clear_messages_warning","ContextMenu","constructor","super","formatMessage","intl","handlePageClick","bind","handleEscapeKey","handleClick","MenuItems","handler","params","errorHandler","onShowAlert","deleteMessages","message","retryMessage","topicPermissionSetter","then","ctrl","onTopicRemoved","topicName","topic","tinode","getTopic","delTopic","catch","err","console","log","user","delSubscription","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","e","contains","target","preventDefault","stopPropagation","hide","keyCode","item","items","currentTarget","dataset","onAction","onError","all","hard","cancelSend","seq","delMessagesAll","delMessagesList","flushMessage","msg","createMessage","publishDraft","mode","result","updateMode","count","menu","map","push","key","data-id","vSize","length","position","left","bounds","right","clickAt","x","top","bottom","y","style","injectIntl","shortDateFormat","locale","window","navigator","userLanguage","language","now","Date","getFullYear","getMonth","getDate","toLocaleTimeString","hour12","hour","minute","toLocaleDateString","month","day","year","bytesToHumanSize","bytes","sizes","bucket","Math","min","floor","log2","pow","round","toFixed","LetterTile","avatar","isGroup","iconColor","abs","value","hash","i","charCodeAt","stringHash","trim","letter","charAt","alt","src","onerror","SUPPORTED_IMAGE_FORMATS","MIME_EXTENSIONS","makeImageUrl","photo","type","data","fitImageSize","width","height","maxWidth","maxHeight","forceSquare","scale","size","dstWidth","dstHeight","srcWidth","srcHeight","xoffset","yoffset","imageScaled","fileOrBlob","maxSize","onSuccess","img","Image","crossOrigin","onload","async","URL","revokeObjectURL","dim","canvas","createElement","ctx","getContext","imageSmoothingEnabled","drawImage","mime","indexOf","blob","Promise","resolve","toBlob","clearRect","fname","idx","ext","at","lastIndexOf","substring","fileNameForMime","name","createObjectURL","fileToBase64","file","reader","FileReader","split","readAsDataURL","blobToBase64","AvatarUpload","state","dataUrl","handleFileUpload","componentDidUpdate","prevProps","setState","files","unused","base64bits","du","onImageChanged","randId","random","substr","readOnly","href","uid","accept","onChange","htmlFor","CheckBox","handleChange","checked","icon_mapping","ContactBadges","badges","b","icon","color","updateFavicon","oldIcon","getElementById","head","getElementsByTagName","newIcon","rel","removeChild","appendChild","vcard","fn","imageDataUrl","card","dataStart","arrayEqual","a","Array","isArray","sort","l","sanitizeUrl","url","allowedSchemes","replace","test","schemes","join","RegExp","deliveryMarker","received","message_sending","message_sending_failed","ReceivedMarker","timestamp","marker","UnreadBadge","Contact","handleContextClick","onSelected","index","showContextMenu","pageY","pageX","online","slice","icon_badges","acs","showMode","getMode","isMuted","isJoiner","subtitle","preview","Drafty","draftyFormatter","comment","showCheckmark","selected","showOnline","isChannel","unread","values","el","attr","concat","ContactAction","action","badge_you","badge_owner","ContactList","topicSelected","contactNodes","contactsCount","contacts","c","filterFunc","filter","filterOn","private","toLowerCase","public","myUserId","isOwner","deliveryStatus","latestMessage","_status","msgStatus","showUnread","connected","onTopicSelected","noScroll","dangerouslySetInnerHTML","__html","emptyListMessage","MenuCancel","onCancel","ErrorPanel","show","level","onClearError","warn","text","whiteSpace","actionText","Chip","handleCancel","invalid","noAvatar","required","ChipInput","deriveStateFromProps","input","focused","handleTextInput","removeChipAt","handleChipCancel","handleFocusGained","handleFocusLost","handleKeyDown","placeholder","chips","prompt","sortedChips","sortChips","staticMembers","chipIndex","indexChips","prevState","keep","normal","includes","removed","onChipRemoved","onFocusLost","onEnter","undefined","avatarDisabled","onFocus","onBlur","onKeyDown","autoFocus","no_contacts","contacts_not_found_short","GroupManager","members","indexMembers","keepInitialMembers","requiredMember","contactFilter","noContactsMessage","selectedContacts","handleContactSelected","handleMemberRemoved","handleContactFilter","handleSubmit","m","delta","present","keepInitial","stat","sel","userId","status","splice","val","query","instance","added","Object","keys","k","onSubmit","doContactFiltering","VisiblePassword","handleVisibility","handeTextChange","handleEditingFinished","onFinished","setTimeout","activeElement","tabIndex","autoComplete","InPlaceEdit","active","initialValue","handleStartEditing","handlePasswordFinished","newValue","focus","event","checkValidity","fieldType","spanText","spanClass","MoreButton","open","handleToggle","onToggle","joiner","writer","preser","approver","sharer","deleter","owner","PermissionsEditor","names","skip","compare","userTitle","userAvatar","modeTitle","compareTitle","TagManager","tags","tagInput","activated","handleTagInput","handleAddTag","handleRemoveTag","nextProps","last","tag","maxTagCount","getServerLimit","onTagsChanged","minTagLength","maxTagLength","add_tags_prompt","requested","granted","other_user","delete_messages","leave_chat","leave_chat_warning","block_contact","block_contact_warning","report_chat","report_chat_warning","InfoView","admin","muted","address","groupTopic","channel","fullName","selectedContact","access","modeGiven","modeWant","modeGiven2","modeWant2","auth","anon","contactList","showMemberPanel","showPermissionEditorFor","moreInfoExpanded","previousMetaDesc","previousSubsUpdated","previousTagsUpdated","resetSubs","resetDesc","onMetaDesc","onSubsUpdated","onTagsUpdated","handleFullNameUpdate","handlePrivateUpdate","handleImageChanged","handleMuted","handlePermissionsChanged","handleLaunchPermissionsEditor","handleHidePermissionsEditor","handleShowAddMembers","handleHideAddMembers","handleMemberUpdateRequest","handleDeleteMessages","handleLeave","handleBlock","handleReport","handleMemberSelected","handleMoreInfo","handleTagsUpdated","handleContextMenu","getType","newState","user2","subscriber","getGiven","getWant","subscribers","sub","defacs","getDefaultAccess","getAccessMode","isAdmin","isSharer","isDeleter","isGroupType","isChannelType","getMeta","startMetaQuery","withTags","build","desc","subs","onTopicDescUpdate","ignored","onChangePermissions","perm","userPermissionsEdited","which","toEdit","toCompare","toSkip","titleEdit","titleCompare","userPermissionsTitle","userPermissionsAvatar","editedPermissions","immutablePermissions","editedPermissionsTitle","immutablePermissionsTitle","editedPermissionsSkipped","onInitFind","onMemberUpdateRequest","onDeleteMessages","onLeaveTopic","onBlockTopic","onReportTopic","onTopicTagsUpdate","menuItems","displayMobile","errorLevel","errorText","searchableContacts","private_placeholder","more","no_members","FileProgress","progress","Attachment","downloader","downloadFile","filename","mimetype","getLargeFileHelper","download","loaded","uploading","onCancelUpload","cancel","helperFunc","isUrlRelative","downloadUrl","downloadWidget","UploadingImage","ChatMessage","uploader","onProgress","handleProgress","handleImagePreview","handleFormButtonClick","handleCancelUpload","onImagePreview","resp","act","ref","onFormResponse","MESSAGE_STATUS_FAILED","ratio","sideClass","deleted","sequence","response","bubbleClass","fullDisplay","userFrom","attachments","mimeType","att","userName","notFound","viewportWidth","authorizeURL","sanitizeImageUrl","inner","child","messaging_disabled","type_new_message","add_image_caption","file_attachment_too_large","cannot_initiate_upload","SendMessage","keypressTimestamp","getTime","handlePasteEvent","handleAttachImage","handleAttachFile","handleSend","handleKeyPress","handleMessageTyping","messageEditArea","disabled","onImageSuccess","onAttachmentSuccess","clipboardData","originalEvent","kind","getAsFile","imageFileScaledToBase64","imageFileToBase64","filePasted","bits","onAttachImage","onAttachFile","acceptBlank","noInput","onSendMessage","shiftKey","onKeyPress","messagePrompt","attachImage","click","attachFile","display","DocPreview","handleSendDoc","caption","onClose","mimeToIcon","default","image","video","iconFromMime","GroupSubs","usersOnline","totalCount","countToShow","some","overflow","ImagePreview","handleSendImage","assignWidth","node","getBoundingClientRect","maxlength","max","Invitation","handleButtonAction","evt","LoadSpinner","LogoView","version","serverVersion","serverAddress","HashNavigation","parts","path","forEach","part","decodeURIComponent","location","args","hasOwnProperty","parsed","parseUrlHash","composeUrlHash","sidepanel","online_now","last_seen","not_found","isUnconfirmed","ex","getExcessive","isPeerRestricted","ms","getMissing","MessagesView","getDerivedStateFromProps","leave","sendImageAttachment","sendFileAttachment","sendKeyPress","handleScrollReference","handleScrollEvent","handleDescChange","handleSubsUpdated","handleNewMessage","handleAllMessagesReceived","handleInfoReceipt","handleImagePostview","handleClosePreview","handleFormResponse","handleShowContextMenuMessage","handleNewChatAcceptance","handleEnablePeer","postReadNotification","clearNotificationQueue","readNotificationQueue","readNotificationTimer","messagesScroller","scrollTop","scrollHeight","scrollPosition","viewportHeight","onData","onAllMessagesReceived","onInfo","onPres","applicationVisible","isSubscribed","ready","newTopic","newTopicParams","_topicName","getQuery","withLaterDesc","withLaterSub","isReader","withLaterData","withLaterDel","fetchingMessages","setQuery","subscribe","code","onNewTopicCreated","queuedMessages","pub","_sending","publishMessage","setUrlTopic","blankState","nextState","docPreview","imagePreview","imagePostview","typingIndicator","msgs","assign","onlineSubs","peer","p2pPeerDesc","peerMessagingDisabled","isWriter","readingBlocked","unconformed","unconfirmed","oldTopicName","oldTopic","finally","msgHasMoreMessages","getMessagesPage","setInterval","clearInterval","n","shift","sendAt","noteRead","setMilliseconds","getMilliseconds","isNewMessage","from","what","clearTimeout","keyPressTimer","forceUpdate","sendMessage","attachJSON","parse","searchParams","set","search","messageSpecificMenuItems","onNewChat","noteKeyPress","maxInbandAttachmentSize","uploadCompletionPromise","upload","urlPromise","maxExternAttachmentSize","limit","tinyBlob","blobMime","tinyBits64","insertImage","_tempPreview","appendLineBreak","append","init","bits64","found","find","_cancelled","component","hideSelf","component2","messageNodes","previousFrom","chatBoxClass","nextFrom","thisFrom","isReply","userDesc","hi","ts","_uploader","lastSeen","cont","getMeTopic","getContact","seen","when","onHideMessagesView","ButtonBack","onBack","MenuContacts","onNewTopic","onSettings","MenuStart","onSignUp","SideNavbar","archived_contacts_title","ContactsView","handleAction","unreadThreads","archivedCount","chatList","blocked","arch","touched","action_ignored","onShowArchive","LocalStorageUtil","localStorage","setItem","JSON","stringify","getItem","oldVal","getObject","setObject","removeItem","CreateAccountView","login","password","email","errorCleared","saveToken","handleLoginChange","handlePasswordChange","handleEmailChange","handleFnChange","handleToggleSaveToken","onCreateAccount","submitClasses","login_prompt","password_prompt","full_name_prompt","email_prompt","stay_logged_in","EditAccountView","me","onBasicNavigate","AccGeneralView","credentials","getCredentials","addCredActive","addCredInvalid","newCred","previousOnTags","tnNewTags","tnCredsUpdated","handleCredChange","handleCredKeyDown","handleCredEntered","onCredsUpdated","creds","onUpdateAccount","method","asPhone","asEmail","onCredAdd","onUpdateTags","cred","meth","done","onCredConfirm","onCredDelete","full_name_placeholder","title_tag_manager","handleCheckboxClick","onToggleMessageSounds","onTogglePushNotifications","onToggleIncognitoMode","messageSounds","desktopAlertsEnabled","desktopAlerts","incognitoMode","delete_account","delete_account_warning","AccSecurityView","blockedCount","handlePasswordUpdate","handleDeleteAccount","pwd","onDeleteAccount","password_unchanged","onLogout","onShowBlocked","AccSupportView","LoginView","hostName","onLogin","autoCorrect","autoCapitalize","invalid_id","NewTopicById","groupId","prefix","NewTopicGroup","handlePrivateChange","handleTagsChanged","handleChannelToggle","SearchContacts","edited","handleSearchChange","handleSearch","handleClear","onSearchContacts","search_placeholder","search_for_contacts","search_no_results","NewTopicView","tabSelected","searchQuery","handleTabClick","handleSearchContacts","handleNewGroupSubmit","handleGroupByID","addUrlParam","removeUrlParam","onCreateTopic","priv","no_contacts_placeholder","searchResults","PasswordResetView","token","scheme","onReset","onRequest","reset","HostSelector","changed","handleHostNameChange","onServerAddressChange","hostOptions","list","SettingsView","transport","handleTransportSelected","handleServerAddressChange","onUpdate","def","ws","lp","transportOptions","phone","ValidationView","credCode","credMethod","numbers_only","register","settings","edit","general","security","notif","support","newtpk","SidepanelView","handleLoginRequested","handleNewTopic","onLoginRequest","view","errorAction","errorActionText","loadSpinnerVisible","loginDisabled","onGlobalSettings","onUpdateAccountTags","onValidateCredentials","onPasswordResetRequest","onResetPassword","detectServerAddress","host","protocol","hostname","port","isSecureConnection","POP_SOUND","Audio","reconnect_countdown","reconnect_now","push_init_failed","invalid_security_token","no_connection","code_doesnot_match","menu_item_info","TinodeWeb","getBlankState","handleResize","handleHashRoute","handleOnline","checkForAppUpdate","handleVisibilityEvent","handleError","handleLoginRequest","handleConnected","handleAutoreconnectIteration","doLogin","handleCredentialsRequest","handleLoginSuccessful","handleDisconnect","tnMeMetaDesc","tnMeContactUpdate","tnMeSubsUpdated","resetContactList","tnData","tnInitFind","tnFndSubsUpdated","handleTopicSelected","handleHideMessagesView","handleSendMessage","handleNewChatInvitation","handleNewAccount","handleNewAccountRequest","handleUpdateAccountRequest","handleUpdateAccountTagsRequest","handleToggleIncognitoMode","handleSettings","handleGlobalSettings","handleShowArchive","handleShowBlocked","handleToggleMessageSounds","handleCredAdd","handleCredDelete","handleCredConfirm","initFCMessaging","togglePushToken","requestPushToken","handlePushMessage","handleSidepanelCancel","handleStartTopicRequest","handleNewTopicCreated","handleTopicUpdateRequest","handleChangePermissions","handleLogout","handleDeleteMessagesRequest","handleLeaveUnsubRequest","handleBlockTopicRequest","handleReportTopic","handleShowContextMenu","defaultTopicContextMenu","handleHideContextMenu","handleShowAlert","handleShowInfoView","handleHideInfoView","handleValidateCredentialsRequest","handlePasswordResetRequest","handleResetPassword","handleContextMenuAction","persist","autoLogin","messageSoundsOff","FIREBASE_INIT","firebaseToken","hidden","sidePanelSelected","sidePanelTitle","sidePanelAvatar","liveConnection","onLine","topicSelectedOnline","topicSelectedAcs","innerWidth","showInfoPanel","mobilePanel","contextMenuVisible","contextMenuBounds","contextMenuClickAt","contextMenuParams","contextMenuItems","alertVisible","alertParams","BroadcastChannel","documentElement","clientWidth","clientHeight","keepLoggedIn","tnSetup","onConnect","onDisconnect","onAutoreconnectIteration","setDeviceToken","parsedNav","expires","setAuthToken","connect","tab","readTimer","readTimerCallback","persistentCache","onSetupCompleted","appName","apiKey","secure","setHumanLanguage","enableLogging","payload","oobNotification","fbPush","usePublicVapidKey","messagingVapidKey","serviceWorker","reg","useServiceWorker","postMessage","onTokenRefresh","onMessage","mobile","onupdatefound","installingWorker","installing","onstatechange","controller","newTopicTabSelected","reconnectCountdown","reconnect","isConnected","getServerInfo","ver","sec","prom","timeLeft","seconds","secondsToTime","isAuthenticated","promise","getAuthToken","loginBasic","loginToken","onContactUpdate","getCurrentUserID","withDesc","withCred","disconnect","setUrlSidePanel","isPresencer","archived","isArchived","play","foundContacts","merged","updated","prepareSearchableContacts","receivedTimer","noteRecv","fnd","getFndTopic","withSub","s","setMeta","isTopicOnline","getTopicAccessMode","isP2PType","am","updateWant","login_","password_","public_","cred_","tags_","createAccountBasic","updateAccountBasic","getCurrentLogin","on","clearStorage","enabled","requestPermission","deleteToken","getToken","refreshedToken","delCredential","basicNavigator","isTopicCached","newGroupTopicName","oldName","newName","permissions","updateGiven","delCurrentUser","publish","self_blocked","subscribed","confirmText","rejectText","invite","requestResetAuthSecret","newPassword","str","btoa","atob","base64ReEncode","onAddMember","handleManageGroupMembers","hl","languages","baseLanguage","allMessages","IntlProvider","textComponent","__webpack_require__","module","getter","__esModule","d","exports","definition","o","defineProperty","enumerable","get","obj","prop","prototype","call","__webpack_modules__"],"mappings":"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","file":"index.prod.js","sourcesContent":["var __WEBPACK_NAMESPACE_OBJECT__ = React;","var __WEBPACK_NAMESPACE_OBJECT__ = ReactDOM;","var __WEBPACK_NAMESPACE_OBJECT__ = ReactIntl;","var __WEBPACK_NAMESPACE_OBJECT__ = firebase;","var __WEBPACK_NAMESPACE_OBJECT__ = Tinode;","var __WEBPACK_NAMESPACE_OBJECT__ = firebase.messaging;","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Alert extends React.PureComponent {\n  render() {\n    return this.props.visible ?\n      <div className=\"alert-container\">\n        <div className=\"alert\">\n          <div className=\"title\">{this.props.title}</div>\n          <div className=\"content\">{this.props.content}</div>\n          <div className=\"dialog-buttons\">\n            {this.props.onReject ?\n              <button className=\"outline\" onClick={this.props.onReject}>\n                {this.props.reject || <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />}\n              </button>\n              :\n              null\n            }\n            <button className=\"primary\" onClick={this.props.onConfirm}>\n              {this.props.confirm || <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\"  />}\n            </button>\n          </div>\n        </div>\n      </div>\n    :\n    null;\n  }\n};\n","// This is a generated file. Don't edit.\n\nexport const PACKAGE_VERSION = \"0.17.0-rc1\";\n","import { PACKAGE_VERSION } from './version.js';\n\n// Name of this application, used in the User-Agent.\nexport const APP_NAME = 'TinodeWeb/' + (PACKAGE_VERSION || '0.16');\n\n// API key. Use https://github.com/tinode/chat/tree/master/keygen to generate your own\nexport const API_KEY = 'AQEAAAABAAD_rAp4DJh05a1HAwFT3A6K';\n\n// The array of possible hosts to connect to.\nexport const KNOWN_HOSTS = {hosted: 'web.tinode.co', local: 'localhost:6060'};\n\n// Default host name and port to connect to.\nexport const DEFAULT_HOST = KNOWN_HOSTS.hosted;\n\n// Enable console logging.\nexport const LOGGING_ENABLED = true;\n\n// Minimum time between two keypress notifications, milliseconds.\nexport const KEYPRESS_DELAY = 3*1000;\n// Delay before sending a {note} for reciving a message, milliseconds.\nexport const RECEIVED_DELAY = 500;\n// Delay before sending a read notification, milliseconds.\nexport const READ_DELAY = 1000;\n\n// The shortest allowed tag length. Matches the value on the server.\nexport const MIN_TAG_LENGTH = 2;\n// The greatest allowed tag length. Matches the value on the server.\nexport const MAX_TAG_LENGTH = 96;\n// The maximum number of tags allowed. Matches the value on the server.\nexport const MAX_TAG_COUNT = 16;\n\n// Access mode for P2P subscriptions initiated by the current user.\nexport const DEFAULT_P2P_ACCESS_MODE = 'JRWPS';\n// Access mode for new group topics created by the current user.\nexport const NEW_GRP_ACCESS_MODE = 'JRWPSAO';\n// Access mode for a channel.\nexport const CHANNEL_ACCESS_MODE = 'JR';\n\n// Access mode for no access.\nexport const NO_ACCESS_MODE = 'N';\n\n// Mediaquery breakpoint between desktop and mobile, in px. Should match the value\n// in @media (max-size: 640px) in base.css\nexport const MEDIA_BREAKPOINT = 640;\n// Size of css 'rem' unit in pixels. Default 1rem = 10pt = 13px.\nexport const REM_SIZE = 13;\n\n// Size of the avatar image: When an avatar image is uploaded, it's resized to\n// a square of this size.\nexport const AVATAR_SIZE = 128;\n\n// Size of the broken_image shown in MessagesView\nexport const BROKEN_IMAGE_SIZE = 32;\n\n// Number of chat messages to fetch in one call.\nexport const MESSAGES_PAGE = 24;\n\n// Default maximum in-band (included directly into the message) attachment size which fits into\n// a message of 256K in size. The actual binary size of the attachment should be smaller due to\n// base64 encoding expansion and some overhead, for instance 1024 bytes.\n// Increase this limit to a greater value in production, if desired. Also increase\n// max_message_size in the server config.\nexport const MAX_INBAND_ATTACHMENT_SIZE = 262144;\n\n// Absolute maximum attachment size to be used with the server = 8MB. Increase to\n// something like 100MB in production.\nexport const MAX_EXTERN_ATTACHMENT_SIZE = 1 << 23;\n\n// Maximum allowed linear dimension of an inline image in pixels. Larer images will be shrunk\n// to make the larger dimension fit under this size. You may want to adjust it to 1600 or\n// 2400 for production.\nexport const MAX_IMAGE_DIM = 1024;\n\n// Linear dimensions of image preview: shrink image under this size for previews.\nexport const IMAGE_PREVIEW_DIM = 64;\n\n// Maximum number of online users to be shown in a topic title bar. Others will be\n// hidden under \"+X more\"\nexport const MAX_ONLINE_IN_TOPIC = 4;\n\n// Maximum length of user name, topic title, and private comment.\nexport const MAX_TITLE_LENGTH = 60;\n\n// Length of message previews in chat list, in characters.\nexport const MESSAGE_PREVIEW_LENGTH = 80;\n\n// Link for \"Contact Us\".\nexport const LINK_CONTACT_US = 'email:info@tinode.co';\n\n// Link to Privacy Policy.\nexport const LINK_PRIVACY_POLICY = 'https://tinode.co/privacy.html';\n\n// Link to Terms of Service.\nexport const LINK_TERMS_OF_SERVICE = 'https://tinode.co/terms.html';\n","// Context Menu: popup/dropdown menu.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { injectIntl, defineMessages } from 'react-intl';\n\nimport { REM_SIZE } from '../config.js';\nimport HashNavigation from '../lib/navigation.js';\n\nconst messages = defineMessages({\n  info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  },\n  clear_messages: {\n    id: 'menu_item_clear_messages',\n    defaultMessage: 'Clear messages',\n    description: 'Delete all messages'\n  },\n  clear_for_all: {\n    id: 'menu_item_clear_messages_for_all',\n    defaultMessage: 'Clear for All',\n    description: 'Delete all message(s) for all members'\n  },\n  delete: {\n    id: 'menu_item_delete',\n    defaultMessage: 'Delete',\n    description: 'Delete selected messages'\n  },\n  delete_for_all: {\n    id: 'menu_item_delete_for_all',\n    defaultMessage: 'Delete for All',\n    description: 'Delete selected message(s) for all members'\n  },\n  send_retry: {\n    id: 'menu_item_send_retry',\n    defaultMessage: 'Retry',\n    description: 'Retry sending message'\n  },\n  mute: {\n    id: 'menu_item_mute',\n    defaultMessage: 'Mute',\n    description: 'Turn off notifications'\n  },\n  unmute: {\n    id: 'menu_item_unmute',\n    defaultMessage: 'Unmute',\n    description: 'Turn notifications on'\n  },\n  topic_delete: {\n    id: 'menu_item_delete_topic',\n    defaultMessage: 'Delete',\n    description: 'Delete entire topic'\n  },\n  topic_delete_warning: {\n    id: 'topic_delete_warning',\n    defaultMessage: 'Are you sure you want to delete this conversation?',\n    description: 'Alert warning when deleting entire topic'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  unblock: {\n    id: 'menu_item_unblock',\n    defaultMessage: 'Unblock',\n    description: 'Unblock topic or user'\n  },\n  // Generic string suitable for either topic or user.\n  block: {\n    id: 'menu_item_block',\n    defaultMessage: 'Block',\n    description: 'Block topic or user'\n  },\n  topic_block_warning: {\n    id: 'topic_block_warning',\n    defaultMessage: 'Are you sure you want to block this conversation?',\n    description: 'Alert warning when blocking a topic.'\n  },\n  member_delete: {\n    id: 'menu_item_member_delete',\n    defaultMessage: 'Remove',\n    description: 'Remove user from topic'\n  },\n  archive: {\n    id: 'menu_item_archive_topic',\n    defaultMessage: 'Archive',\n    description: 'Move topic from the list of active chats to archive'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n});\n\nclass ContextMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const {formatMessage} = props.intl;\n\n    this.handlePageClick = this.handlePageClick.bind(this);\n    this.handleEscapeKey = this.handleEscapeKey.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n\n    // Preconfigured menu items.\n    this.MenuItems = {\n      'topic_info': {\n        id: 'topic_info',\n        title: formatMessage(messages.info),\n        handler: null\n      },\n      'messages_clear': {\n        id: 'messages_clear',\n        title: formatMessage(messages.clear_messages),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.clear_messages), // title\n            formatMessage(messages.clear_messages_warning), // content\n            (() => { this.deleteMessages(true, false, params, errorHandler); }), // onConfirm\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'messages_clear_hard': {\n        id: 'messages_clear_hard',\n        title: formatMessage(messages.clear_for_all),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.clear_for_all), // title\n            formatMessage(message.delete_messages_warning), // content\n            (() => { return this.deleteMessages(true, true, params, errorHandler); }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'message_delete': {\n        id: 'message_delete',\n        title: formatMessage(messages.delete),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, false, params, errorHandler);\n        }\n      },\n      'message_delete_hard': {\n        id: 'message_delete_hard',\n        title: formatMessage(messages.delete_for_all),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, true, params, errorHandler);\n        }\n      },\n      'menu_item_send_retry': {\n        id: 'menu_item_send_retry',\n        title: formatMessage(messages.send_retry),\n        handler: (params, errorHandler) => {\n          return this.retryMessage(params, errorHandler);\n        }\n      },\n      'topic_unmute': {\n        id: 'topic_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'topic_mute': {\n        id: 'topic_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'topic_unblock': {\n        id: 'topic_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n      'topic_block': {\n        id: 'topic_block',\n        title: formatMessage(messages.block),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.block), // title\n            formatMessage(messages.topic_block_warning), // content\n            (() => {\n              return this.topicPermissionSetter('-JP', params, errorHandler).then((ctrl) => {\n                this.props.onTopicRemoved(params.topicName);\n                return ctrl;\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_delete': {\n        id: 'topic_delete',\n        title: formatMessage(messages.topic_delete),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.topic_delete), // title\n            formatMessage(messages.topic_delete_warning), // content\n            (() => {\n              const topic = this.props.tinode.getTopic(params.topicName);\n              if (!topic) {\n                console.log(\"Topic not found: \", params.topicName);\n                return;\n              }\n              return topic.delTopic(true).catch((err) => {\n                if (errorHandler) {\n                  errorHandler(err.message, 'err');\n                }\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_archive': {\n        id: 'topic_archive',\n        title: formatMessage(messages.archive),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic) {\n            console.log(\"Topic not found: \", params.topicName);\n            return;\n          }\n          return topic.archive(true).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      // menu_item_edit_permissions is defined elsewhere.\n      'permissions': {\n        id: 'permissions',\n        title: formatMessage(messages.edit_permissions),\n        handler: null\n      },\n      'member_delete': {\n        id: 'member_delete',\n        title: formatMessage(messages.member_delete),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic || !params.user) {\n            console.log(\"Topic or user not found: '\" + params.topicName + \"', '\" + params.user + \"'\");\n            return;\n          }\n          return topic.delSubscription(params.user).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      'member_mute': {\n        id: 'member_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'member_unmute': {\n        id: 'member_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'member_block': {\n        id: 'member_block',\n        title: formatMessage(messages.block),\n        handler: this.topicPermissionSetter.bind(this, '-JP')\n      },\n      'member_unblock': {\n        id: 'member_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handlePageClick, false);\n    document.addEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handlePageClick, false);\n    document.removeEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  handlePageClick(e) {\n    if (ReactDOM.findDOMNode(this).contains(e.target)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n  }\n\n  handleEscapeKey(e) {\n    if (e.keyCode === 27) {\n      this.props.hide();\n    }\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n    let item = this.props.items[e.currentTarget.dataset.id];\n    if (typeof item == 'string') {\n      item = this.MenuItems[item];\n    }\n\n    if (!item) {\n      console.log(\"Invalid menu item ID\", e.currentTarget.dataset.id);\n    } else {\n      this.props.onAction(\n        item.id,\n        item.handler(this.props.params, this.props.onError),\n        this.props.params);\n    }\n  }\n\n  // Menu Actions\n\n  deleteMessages(all, hard, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found: \", params.topicName);\n      return;\n    }\n\n    // We don't know if the message is still pending (e.g. attachment is being uploaded),\n    // so try cancelling first. No harm if we can't cancel.\n    // The message can be cancelled if transmission to the server has not\n    // started yet or if the message send has failed.\n    if (!all && topic.cancelSend(params.seq)) {\n      return;\n    }\n    // Can't cancel. Delete instead.\n    const promise = all ?\n      topic.delMessagesAll(hard) :\n      topic.delMessagesList([params.seq], hard);\n\n    return promise.catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Retries sending failed message.\n  retryMessage(params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    // Remove the existing message entry.\n    if (!topic || !topic.flushMessage(params.seq)) {\n      return;\n    }\n    const msg = topic.createMessage(params.content, false);\n    return topic.publishDraft(msg).catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Function is used by context menu to set permissions.\n  topicPermissionSetter(mode, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found\", params.topicName);\n      return;\n    }\n\n    let result = topic.updateMode(params.user, mode);\n    if (errorHandler) {\n      result = result.catch((err) => {\n        errorHandler(err.message, 'err');\n      });\n    }\n    return result;\n  }\n\n  render() {\n    let count = 0;\n    let menu = [];\n    this.props.items.map((item) => {\n      if (typeof item == 'string') {\n        item = this.MenuItems[item];\n      }\n      if (item && item.title) {\n        menu.push(\n          item.title == '-' ?\n            <li className=\"separator\" key={count} />\n            :\n            <li onClick={this.handleClick} data-id={count} key={count}>{item.title}</li>\n        );\n      }\n      count++;\n    });\n\n    // Ensure that menu is inside the app-container.\n    const hSize = 12 * REM_SIZE;\n    const vSize = REM_SIZE * (0.7 + menu.length * 2.5);\n    const left = (this.props.bounds.right - this.props.clickAt.x < hSize) ?\n        (this.props.clickAt.x - this.props.bounds.left - hSize) :\n        (this.props.clickAt.x - this.props.bounds.left);\n    const top = (this.props.bounds.bottom - this.props.clickAt.y < vSize) ?\n        (this.props.clickAt.y - this.props.bounds.top - vSize) :\n        (this.props.clickAt.y - this.props.bounds.top);\n\n    const position = {\n      left: left + 'px',\n      top: top + 'px'\n    };\n\n    return (\n      <ul className=\"menu\" style={position}>\n        {menu}\n      </ul>\n    );\n  }\n}\n\nexport default injectIntl(ContextMenu);\n","// Short representation of time in the past.\nexport function shortDateFormat(then, locale) {\n  locale = locale || window.navigator.userLanguage || window.navigator.language;\n  const now = new Date();\n  if (then.getFullYear() == now.getFullYear()) {\n    // Same year.\n    if (then.getMonth() == now.getMonth() && then.getDate() == now.getDate()) {\n      // Same month and day, show time only.\n      return then.toLocaleTimeString(locale, {hour12: false, hour: '2-digit', minute: '2-digit'});\n    }\n    // Different month and/or day, show month day, time.\n    return then.toLocaleDateString(locale,\n      {hour12: false, month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit'});\n  }\n  // Different year: just show the date.\n  return then.toLocaleDateString(locale, {year: 'numeric', month: 'short', day: 'numeric'});\n}\n\n// Convert seconds to minutes:seconds, i.e. 156 sec -> 2:36.\nexport function secondsToTime(seconds) {\n  const min = Math.floor(seconds / 60);\n  let sec = seconds % 60;\n  sec = sec < 10 ? `0${sec}` : sec;\n  return `${min}:${sec}`;\n}\n\n// Convert a number of bytes to human-readable format.\nexport function bytesToHumanSize(bytes) {\n  if (!bytes || bytes == 0) {\n    return '0 Bytes';\n  }\n\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n  const bucket = Math.min(Math.floor(Math.log2(bytes) / 10) | 0, sizes.length-1);\n  const count = bytes / Math.pow(1024, bucket);\n  const round = bucket > 0 ? (count < 3 ? 2 : (count < 30 ? 1 : 0)) : 0;\n  return count.toFixed(round) + ' ' + sizes[bucket];\n}\n\n// Get 32 bit integer hash value for a string. Ideally it should produce the same value\n// as Java's String#hash().\nexport function stringHash(value) {\n  let hash = 0;\n  value = '' + value;\n  for (let i = 0; i < value.length; i++) {\n    hash = ((hash << 5) - hash) + value.charCodeAt(i);\n    hash = hash & hash; // Convert to 32bit integer\n  }\n  return hash;\n}\n","import React from 'react';\n\nimport Tinode from 'tinode-sdk';\n\nimport { stringHash } from '../lib/strformat.js';\n\nexport default class LetterTile extends React.PureComponent {\n  render() {\n    let avatar;\n    if (this.props.avatar === true) {\n      const isGroup = (Tinode.topicType(this.props.topic) == 'grp');\n      const iconColor = (isGroup ? 'light-color' : 'dark-color')\n        + (Math.abs(stringHash(this.props.topic)) % 16);\n      if (this.props.topic && this.props.title && this.props.title.trim()) {\n        const letter = this.props.title.trim().charAt(0);\n        const className = 'lettertile ' + iconColor;\n        avatar = (<div className={className}><div>{letter}</div></div>)\n      } else {\n        const className = 'material-icons ' + iconColor;\n        avatar = isGroup ?\n          <i className={className}>group</i> : <i className={className}>person</i>;\n      }\n    } else if (this.props.avatar) {\n      // If avatar image is invalid, show a placeholder.\n      avatar = <img className=\"avatar\" alt=\"avatar\" src={this.props.avatar}\n        onError={(e)=>{e.target.onerror = null; e.target.src=\"/img/broken_image.png\"}} />;\n    } else {\n      avatar = null;\n    }\n    return avatar;\n  }\n}\n","// File and image helper functions.\nimport { MAX_INBAND_ATTACHMENT_SIZE, MAX_IMAGE_DIM } from '../config.js';\nimport { bytesToHumanSize } from './strformat.js'\n\n// Supported image MIME types and corresponding file extensions.\nexport const SUPPORTED_IMAGE_FORMATS = ['image/jpeg', 'image/gif', 'image/png', 'image/svg', 'image/svg+xml'];\nexport const MIME_EXTENSIONS         = ['jpg',        'gif',       'png',       'svg',       'svg'];\n\n// Make a data URL from public.photo\nexport function makeImageUrl(photo) {\n  return (photo && photo.type && photo.data) ?\n    'data:image/' + photo.type + ';base64,' + photo.data : null;\n}\n\n// Calculate linear dimensions for scaling image down to fit under a certain size.\n// Returns an object which contains destination sizes, source sizes, and offsets\n// into source (when making square images).\nexport function fitImageSize(width, height, maxWidth, maxHeight, forceSquare) {\n  // Sanitize input\n  width = width | 0;\n  height = height | 0;\n  maxWidth = maxWidth | 0;\n  maxHeight = maxHeight | 0;\n\n  if (width <= 0 || height <= 0 || maxWidth <= 0 || maxHeight <= 0) {\n    return null;\n  }\n\n  if (forceSquare) {\n    maxWidth = maxHeight = Math.min(maxWidth, maxHeight);\n  }\n\n  let scale = Math.min(\n    Math.min(width, maxWidth) / width,\n    Math.min(height, maxHeight) / height\n  );\n\n  let size = {\n    dstWidth: (width * scale) | 0,\n    dstHeight: (height * scale) | 0,\n  };\n\n  if (forceSquare) {\n    // Also calculate parameters for making the image square.\n    size.dstWidth = size.dstHeight = Math.min(size.dstWidth, size.dstHeight);\n    size.srcWidth = size.srcHeight = Math.min(width, height);\n    size.xoffset = ((width - size.srcWidth) / 2) | 0;\n    size.yoffset = ((height - size.srcWidth) / 2) | 0;\n  } else {\n    size.xoffset = size.yoffset = 0;\n    size.srcWidth = width;\n    size.srcHeight = height;\n  }\n  return size;\n}\n\n// Ensure file's extension matches mime content type\nexport function fileNameForMime(fname, mime) {\n  const idx = SUPPORTED_IMAGE_FORMATS.indexOf(mime);\n  if (idx < 0 || !fname) {\n    // Unknown mime or empty name.\n    return fname;\n  }\n  const ext = MIME_EXTENSIONS[idx];\n\n  const at = fname.lastIndexOf('.');\n  if (at >= 0) {\n    fname = fname.substring(0, at);\n  }\n  return fname + '.' + ext;\n}\n\n// Scale uploaded image to fit under certain dimensions and byte size, optionally constraining to a square.\n// On success calls onSuccess callback with the scaled image as Blob.\nexport function imageScaled(fileOrBlob, maxWidth, maxHeight, maxSize, forceSquare, onSuccess, onError) {\n  const img = new Image();\n  img.crossOrigin = 'Anonymous';\n  img.onerror = function(err) {\n    onError(\"Image format unrecognized\");\n  }\n  img.onload = async function() {\n    // Once the image is loaded, the URL is no longer needed.\n    URL.revokeObjectURL(img.src);\n\n    // Calculate the desired image dimensions.\n    const dim = fitImageSize(this.width, this.height, maxWidth, maxHeight, forceSquare);\n    if (!dim) {\n      onError(\"Invalid image\");\n      return;\n    }\n    let canvas = document.createElement('canvas');\n    canvas.width = dim.dstWidth;\n    canvas.height = dim.dstHeight;\n    let ctx = canvas.getContext('2d');\n    ctx.imageSmoothingEnabled = true;\n    ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n      0, 0, dim.dstWidth, dim.dstHeight);\n\n    const mime = SUPPORTED_IMAGE_FORMATS.indexOf(fileOrBlob.type) < 0 ? 'image/jpeg' : fileOrBlob.type;\n    // Generate blob to check size of the image.\n    let blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    if (!blob) {\n      onError(\"Unsupported image format\");\n      return;\n    }\n\n    // Ensure the image is not too large. Shrink the image keeping the aspect ratio.\n    // Do nothing if maxsize is <= 0.\n    while (maxSize > 0 && blob.length > maxSize) {\n      dim.dstWidth = (dim.dstWidth * 0.70710678118) | 0;\n      dim.dstHeight = (dim.dstHeight * 0.70710678118) | 0;\n      canvas.width = dim.dstWidth;\n      canvas.height = dim.dstHeight;\n      ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n        0, 0, dim.dstWidth, dim.dstHeight);\n      blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    }\n\n    canvas = null;\n    onSuccess(blob, mime, dim.dstWidth, dim.dstHeight, fileNameForMime(fileOrBlob.name, mime));\n  };\n  img.src = URL.createObjectURL(fileOrBlob);\n}\n\n// Convert File to base64 string.\nexport function fileToBase64(file, onSuccess) {\n  const reader = new FileReader();\n  reader.addEventListener('load', function() {\n    onSuccess(file.type, reader.result.split(',')[1], file.name);\n  });\n  reader.readAsDataURL(file);\n}\n\n// Convert Blob to base64 string.\nexport function blobToBase64(blob, onSuccess) {\n  const reader = new FileReader();\n  reader.addEventListener('load', function() {\n    onSuccess(blob.type, reader.result.split(',')[1]);\n  });\n  reader.readAsDataURL(blob);\n}\n\n// File pasted from the clipboard. It's either an inline image or a file attachment.\n// FIXME: handle large files out of band.\nexport function filePasted(event, onImageSuccess, onAttachmentSuccess, onError) {\n  var items = (event.clipboardData || event.originalEvent.clipboardData || {}).items;\n  for (var i in items) {\n    var item = items[i];\n    if (item.kind === 'file') {\n      var file = item.getAsFile();\n      if (!file) {\n        console.log(\"Failed to get file object from pasted file item\", item.kind, item.type);\n        continue;\n      }\n      if (file.type && file.type.split('/')[0] == 'image') {\n        // Handle inline image\n        if (file.size > MAX_INBAND_ATTACHMENT_SIZE || SUPPORTED_IMAGE_FORMATS.indexOf(file.type) < 0) {\n          imageFileScaledToBase64(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, false, onImageSuccess, onError);\n        } else {\n          imageFileToBase64(file, onImageSuccess, onError);\n        }\n      } else {\n        // Handle file attachment\n        fileToBase64(file, onAttachmentSuccess, onError)\n      }\n      // Indicate that the pasted data contains a file.\n      return true;\n    }\n  }\n  // No file found.\n  return false;\n}\n\n// Get mime type from data URL header.\nexport function getMimeType(header) {\n  var mime = /^data:(image\\/[-+a-z0-9.]+);base64/.exec(header);\n  return (mime && mime.length > 1) ? mime[1] : null;\n}\n\n// Given length of a binary object in bytes, calculate the length after\n// base64 encoding.\nexport function base64EncodedLen(n) {\n  return Math.floor((n + 2) / 3) * 4;\n}\n\n// Given length of a base64-encoded object, calculate decoded size of the\n// pbject in bytes.\nexport function base64DecodedLen(n) {\n  return Math.floor(n / 4) * 3;\n}\n\n// Re-encode string to standard base64 encoding with padding.\n// The string may be base64-URL encoded without the padding.\nexport function base64ReEncode(str) {\n  if (str) {\n    str = str.replace(/-/g, '+').replace(/_/g, '/');\n    try {\n      str = btoa(atob(str));\n    } catch(err) {\n      console.log(\"Failed to base64 re-encode string.\", err);\n      str = null;\n    }\n  }\n  return str;\n}\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\n\nimport { AVATAR_SIZE, MAX_EXTERN_ATTACHMENT_SIZE } from '../config.js';\nimport { imageScaled, blobToBase64, makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class AvatarUpload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dataUrl: props.avatar\n    };\n\n    this.handleFileUpload = this.handleFileUpload.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.avatar != prevProps.avatar) {\n      this.setState({dataUrl: this.props.avatar})\n    }\n  }\n\n  handleFileUpload(e) {\n    imageScaled(e.target.files[0], AVATAR_SIZE, AVATAR_SIZE, MAX_EXTERN_ATTACHMENT_SIZE, true,\n      // Image successfully scaled and converted.\n      (mime, blob) => {\n        // Convert blob to base64-encoded bits.\n        blobToBase64(blob, (unused, base64bits) => {\n          const du = makeImageUrl({data: base64bits, type: mime});\n          this.setState({dataUrl: du});\n          this.props.onImageChanged(du);\n        });\n      },\n      // Failure\n      (err) => {\n        this.props.onError(err, 'err');\n      });\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  render() {\n    // Randomize id value in case more than one AvatarUpload is shown\n    // at the same time.\n    const randId = 'file-input-avatar-' + (Math.random() + '').substr(2);\n    const className = 'avatar-upload' + (this.props.readOnly ? ' read-only' : '');\n    return (\n      <div className={className}>\n        {this.props.readOnly || !this.state.dataUrl ?\n          null :\n          <a href=\"#\" className=\"clear-avatar\" onClick={(e) => {e.preventDefault(); this.props.onImageChanged(null);}}>\n            <i className=\"material-icons\">clear</i>\n          </a>}\n        {this.state.dataUrl ?\n          <img src={this.state.dataUrl} className=\"preview\" /> :\n          this.props.readOnly && this.props.uid ?\n            <div className=\"avatar-box\">\n              <LetterTile\n                avatar={true}\n                topic={this.props.uid}\n                title={this.props.title} />\n            </div>\n            :\n            <div className=\"blank\">{AVATAR_SIZE}&times;{AVATAR_SIZE}</div>}\n        {this.props.readOnly ? null :\n          <input type=\"file\" id={randId} className=\"inputfile hidden\"\n            accept=\"image/*\" onChange={this.handleFileUpload} />}\n        {this.props.readOnly ? null :\n        <label htmlFor={randId} className=\"round\">\n          <i className=\"material-icons\">file_upload</i>\n        </label>}\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\n/* BEGIN CheckBox: styled checkbox */\nexport default class CheckBox extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange() {\n    this.props.onChange(this.props.name, !this.props.checked);\n  }\n\n  render() {\n    return (\n      this.props.onChange ? (\n        this.props.checked ?\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box</i> :\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box_outline_blank</i>\n        ) : (\n          this.props.checked ?\n            <i className=\"material-icons\">check_box</i> :\n            <i className=\"material-icons\">check_box_outline_blank</i>\n        )\n    );\n  }\n}\n/* END CheckBox */\n","import React from 'react';\n\nconst icon_mapping = {'muted': 'notifications_off', 'banned': 'block'};\n\n/* Contact's labels: [you], or icons [muted], [blocked] */\nexport default class ContactBadges extends React.PureComponent {\n    render() {\n      let badges = null;\n      if (this.props.badges && this.props.badges.length > 0) {\n        badges = [];\n        this.props.badges.map(function(b) {\n          if (b.icon) {\n            badges.push(<i className=\"material-icons as-badge\" key={b.key || b.icon}>{icon_mapping[b.icon]}</i>);\n          } else {\n            const style = 'badge' + (b.color ? ' ' + b.color : '');\n            badges.push(<span className={style} key={b.key || b.name}>{b.name}</span>);\n          }\n        });\n        return <>{badges}</>;\n      }\n      return null;\n    }\n};\n","// Odds and ends\n\nimport Tinode from 'tinode-sdk';\n\n// Make shortcut icon appear with a green dot + show unread count in title.\nexport function updateFavicon(count) {\n  const oldIcon = document.getElementById('shortcut-icon');\n  const head = document.head || document.getElementsByTagName('head')[0];\n  const newIcon = document.createElement('link');\n  newIcon.type = 'image/png';\n  newIcon.id = 'shortcut-icon';\n  newIcon.rel = 'shortcut icon';\n  newIcon.href = 'img/logo32x32' + (count > 0 ? 'a' : '') + '.png';\n  if (oldIcon) {\n    head.removeChild(oldIcon);\n  }\n  head.appendChild(newIcon);\n\n  document.title = (count > 0 ? '('+count+') ' : '') + 'Tinode';\n}\n\n// Create VCard which represents topic 'public' info\nexport function vcard(fn, imageDataUrl) {\n  let card = null;\n\n  if ((fn && fn.trim()) || imageDataUrl) {\n    card = {};\n    if (fn) {\n      card.fn = fn.trim();\n    }\n    if (imageDataUrl) {\n      const dataStart = imageDataUrl.indexOf(',');\n      card.photo = dataStart >= 0 ? {\n        data: imageDataUrl.substring(dataStart+1),\n        type: 'jpg'\n      } : imageDataUrl;\n    }\n  }\n  return card;\n}\n\n// Deep-shallow compare two arrays: shallow compare each element.\nexport function arrayEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (!Array.isArray(a) || !Array.isArray(b)) {\n    return false;\n  }\n\n  // Compare lengths first.\n  if (a.length != b.length) {\n    return false;\n  }\n  // Order of elements is ignored.\n  a.sort();\n  b.sort();\n  for (let i = 0, l = a.length; i < l; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Checks (loosely) if the given string is a phone. If so, returns the phone number in a format\n// as close to E.164 as possible.\nexport function asPhone(val) {\n  val = val.trim();\n  if (/^(?:\\+?(\\d{1,3}))?[- (.]*(\\d{3})[- ).]*(\\d{3})[- .]*(\\d{2})[- .]*(\\d{2})?$/.test(val)) {\n    return val.replace(/[- ().]*/, '');\n  }\n  return null;\n}\n\n// Checks (loosely) if the given string is an email. If so returns the email.\nexport function asEmail(val) {\n  val = val.trim();\n  if (/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(val)) {\n    return val;\n  }\n  return null;\n}\n\n// Checks if URL is a relative url, i.e. has no 'scheme://', including the case of missing scheme '//'.\n// The scheme is expected to be RFC-compliant, e.g. [a-z][a-z0-9+.-]*\n// example.html - ok\n// https:example.com - not ok.\n// http:/example.com - not ok.\n// ' ↲ https://example.com' - not ok. (↲ means carriage return)\nexport function isUrlRelative(url) {\n  return url && !/^\\s*([a-z][a-z0-9+.-]*:|\\/\\/)/im.test(url);\n}\n\n// Ensure URL does not present an XSS risk. Optional allowedSchemes may contain an array of\n// strings with permitted URL schemes, such as ['ftp', 'ftps']; otherwise accept http and https only.\n// If apikey and/or token is defined, it's appended to relative URL.\nexport function sanitizeUrl(url, allowedSchemes) {\n  if (!url) {\n    return null;\n  }\n\n  // Strip control characters and whitespace. They are not valid URL characters anyway.\n  url = url.replace(/[^\\x20-\\x7E]/gmi, '').trim();\n\n  // Relative URLs are safe.\n  // Relative URL does not start with ':', abcd123: or '//'.\n  if (!/^([a-z][a-z0-9+.-]*:|\\/\\/)/i.test(url)) {\n    return url;\n  }\n\n  // Blob URLs are safe.\n  if (/^blob:http/.test(url)) {\n    return url;\n  }\n\n  // Absolute URL. Accept only safe schemes, or no scheme.\n  const schemes = Array.isArray(allowedSchemes) ? allowedSchemes.join('|') : 'http|https';\n  const re = new RegExp('^((' + schemes + '):|//)', 'i');\n  if (!re.test(url)) {\n    return null;\n  }\n\n  return url;\n}\n\n// Ensure URL is suitable for <img src=\"url\"> field: the URL must be a relative URL or\n// have http:, https:, blob: or data: scheme.\n// The relative URL is appended with the API key and/or auth token.\n// In case of data: scheme, the URL must start with a 'data:image/XXXX;base64,'.\nexport function sanitizeImageUrl(url) {\n  if (!url) {\n    return null;\n  }\n\n  const sanitizedUrl = sanitizeUrl(url);\n  if (sanitizedUrl) {\n    return sanitizedUrl;\n  }\n\n  // Is this a data: URL of an image?\n  if (/data:image\\/[a-z0-9.-]+;base64,/i.test(url.trim())) {\n    return url;\n  }\n\n  return null;\n}\n\n// Given message's received status, return name and color of a delivery indicator icon.\nexport function deliveryMarker(received) {\n  switch (received) {\n    case Tinode.MESSAGE_STATUS_SENDING:\n      return { name: 'access_time' }; // watch face\n    case Tinode.MESSAGE_STATUS_FAILED:\n      return { name: 'warning', color: 'amber' }; // yellow icon /!\\\n    case Tinode.MESSAGE_STATUS_SENT:\n      return { name: 'done' }; // checkmark\n    case Tinode.MESSAGE_STATUS_RECEIVED:\n      return { name: 'done_all' }; // double checkmark\n    case Tinode.MESSAGE_STATUS_READ:\n      return { name: 'done_all', color: 'blue' }; // blue double checkmark\n  }\n  return null;\n}\n","// Received/read indicator.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { shortDateFormat } from '../lib/strformat.js';\nimport { deliveryMarker } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  message_sending: {\n    id: 'message_sending',\n    defaultMessage: 'sending...',\n    description: 'Message being sent, in place of time stamp'\n  },\n  message_sending_failed: {\n    id: 'message_sending_failed',\n    defaultMessage: 'failed',\n    description: 'Failed to send message, in place of time stamp'\n  }\n});\n\nclass ReceivedMarker extends React.PureComponent {\n  render() {\n    const {formatMessage} = this.props.intl;\n    let timestamp;\n    if (this.props.received <= Tinode.MESSAGE_STATUS_SENDING) {\n      timestamp = formatMessage(messages.message_sending);\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_FAILED) {\n      timestamp = formatMessage(messages.message_sending_failed);\n    } else {\n      timestamp = shortDateFormat(this.props.timestamp, this.props.intl.locale);\n    }\n\n    const icon = deliveryMarker(this.props.received);\n    const marker = icon ? <i className={'material-icons small ' + icon.color}>{icon.name}</i> : null;\n\n    return (\n      <span className=\"timestamp\">\n        {timestamp}{'\\u00a0'}{marker}\n      </span>\n    );\n  }\n};\n\nexport default injectIntl(ReceivedMarker);\n","// The counter of unread messages in the topic.\nimport React from 'react';\n\nexport default class UnreadBadge extends React.PureComponent {\n  render() {\n    return (this.props.count > 0 ?\n      <span className=\"unread\">{this.props.count > 9 ? \"9+\" : this.props.count}</span>\n      : null);\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport ContactBadges from './contact-badges.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\nimport UnreadBadge from './unread-badge.jsx';\n\nimport { Drafty } from 'tinode-sdk';\n\nimport { deliveryMarker } from '../lib/utils.js';\n\nexport default class Contact extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.props.onSelected) {\n      // Index this.props.index is used by GroupManager.\n      this.props.onSelected(this.props.item, this.props.index);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.props.item, y: e.pageY, x: e.pageX });\n  }\n\n  render() {\n    let title = this.props.title;\n    if (!title) {\n      title = <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n        description=\"Title shown when the topic has no name\" /></i>;\n    } else if (title.length > 30) {\n      // FIXME: this is probably wrong for RTL languages.\n      title = title.substring(0, 28) + '…';\n    }\n    const online = this.props.now ? 'online' : 'offline';\n    const avatar = this.props.avatar ? this.props.avatar : true;\n    const badges = this.props.badges ? this.props.badges.slice() : [];\n    const icon_badges = [];\n    if (this.props.acs) {\n      if (this.props.showMode) {\n        badges.push({name: this.props.acs.getMode(), key: 'mode'});\n      }\n      if (this.props.acs.isMuted()) {\n        icon_badges.push({icon: 'muted'});\n      }\n      if (!this.props.acs.isJoiner()) {\n        icon_badges.push({icon: 'banned'});\n      }\n    }\n\n    const subtitle = this.props.preview ?\n      (typeof this.props.preview == 'string' ? this.props.preview :\n        React.createElement(React.Fragment, null, Drafty.format(this.props.preview, draftyFormatter, this))) :\n      this.props.comment;\n\n    const icon = deliveryMarker(this.props.received);\n    const marker = icon ? <i className={'material-icons small space-right ' + icon.color}>{icon.name}</i> : null;\n\n    return (\n      <li className={!this.props.showCheckmark && this.props.selected ? 'selected' : null} onClick={this.handleClick}>\n        <div className=\"avatar-box\">\n          <LetterTile\n            avatar={avatar}\n            title={this.props.title}\n            topic={this.props.item} />\n          {this.props.showOnline ? <span className={online} /> :\n            (this.props.showCheckmark && this.props.selected ?\n            <i className=\"checkmark material-icons\">check_circle</i>\n            : null)}\n        </div>\n        <div className=\"text-box\">\n          <div><span className=\"contact-title\">{title}</span>\n            {this.props.isChannel ? <img src=\"/img/channel.png\" className=\"channel\" alt=\"channel\" /> : null}\n            <UnreadBadge count={this.props.unread} /><ContactBadges badges={icon_badges} />\n          </div>\n          {this.props.showMode ?\n            <span><ContactBadges badges={badges} /></span> :\n            <div className=\"contact-comment\">{marker}{subtitle || '\\u00A0'}</div>}\n        </div>\n        {this.props.showContextMenu ?\n          <span className=\"menuTrigger\">\n            <a href=\"#\" onClick={this.handleContextClick}>\n              <i className=\"material-icons\">expand_more</i>\n            </a>\n          </span> : null}\n      </li>\n    );\n  }\n};\n\n\n// Converts Drafty object into a one-line preview.\nfunction draftyFormatter(style, data, values, key) {\n  let el = Drafty.tagName(style);\n  const attr = { key: key };\n  if (el) {\n    switch (style) {\n      case 'BR':\n        // Replace new line with a space.\n        el = React.Fragment;\n        values = [' '];\n        break;\n      case 'HL':\n        // Make highlight less prominent in preview.\n        attr.className = 'highlight preview';\n        break;\n      case 'LN':\n        // Disable links in previews.\n        el = 'span';\n        break;\n      case 'IM':\n        // Replace image with '[icon] Image'.\n        el = React.Fragment;\n        values = [<i key=\"im\" className=\"material-icons\">photo</i>, 'Picture'];\n        break;\n      case 'BN':\n        el = 'span';\n        attr.className = 'flat-button faux';\n        break;\n      case 'FM':\n        el = React.Fragment;\n        values = [<i key=\"fm\" className=\"material-icons\">dashboard</i>, 'Form: '].concat(values || []);\n        break;\n      case 'RW':\n        el = React.Fragment;\n        break;\n      case 'EX':\n        el = React.Fragment;\n        values = [<i key=\"ex\" className=\"material-icons\">attachment</i>, 'Attachment'];\n        break;\n      default:\n        if (el == '_UNKN') {\n          el = React.Fragment;\n          values = [<i key=\"unkn\" className=\"material-icons\">extension</i>];\n        }\n        break;\n    }\n    return React.createElement(el, attr, values);\n  } else {\n    return values;\n  }\n};\n","// A panel included into a list of contacts with an action text.\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\n\nclass ContactAction extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.onAction(this.props.action);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <li onClick={this.handleClick} className=\"action\">\n        <div className=\"action-text\">{formatMessage(this.props.title, this.props.values)}</div>\n      </li>\n    );\n  }\n};\n\nexport default injectIntl(ContactAction);\n","// ContactList: component for showing a list of contacts,\n// such as a list of group members in a group chat.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { Drafty } from 'tinode-sdk';\nimport Tinode from 'tinode-sdk';\n\nimport Contact from './contact.jsx';\nimport ContactAction from './contact-action.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nimport { MESSAGE_PREVIEW_LENGTH } from '../config.js';\n\nconst messages = defineMessages({\n  badge_you: {\n    id: 'badge_you',\n    defaultMessage: 'you',\n    description: 'Badge for indicating the current user'\n  },\n  badge_owner: {\n    id: 'badge_owner',\n    defaultMessage: 'owner',\n    description: 'Badge for indicating the owner'\n  }\n});\n\nclass ContactList extends React.Component {\n  render() {\n    const { formatMessage } = this.props.intl;\n    const showCheckmark = Array.isArray(this.props.topicSelected);\n    const contactNodes = [];\n    let contactsCount = 0;\n    if (this.props.contacts && this.props.contacts.length > 0) {\n      this.props.contacts.map((c) => {\n        if (c.action) {\n          // Action item\n          contactNodes.push(\n            <ContactAction\n              title={c.title} action={c.action} values={c.values}\n              key={c.action}\n              onAction={this.props.onAction}\n              />);\n        } else {\n          // Normal contact\n          const key = this.props.showMode ? c.user : (c.topic || c.user);\n          // If filter function is provided, filter out the items\n          // which don't satisfy the condition.\n          if (this.props.filterFunc && this.props.filter) {\n            const filterOn = [key];\n            if (c.private && c.private.comment) {\n              filterOn.push(('' + c.private.comment).toLowerCase());\n            }\n            if (c.public && c.public.fn) {\n              filterOn.push(('' + c.public.fn).toLowerCase());\n            }\n            if (!this.props.filterFunc(this.props.filter, filterOn)) {\n              return;\n            }\n          }\n\n          const isChannel = Tinode.isChannelTopicName(key);\n          const selected = showCheckmark ?\n            (this.props.topicSelected.indexOf(key) > -1) :\n            (this.props.topicSelected === key);\n          const badges = [];\n          if (this.props.showMode) {\n            if (key == this.props.myUserId) {\n              badges.push({name: formatMessage(messages.badge_you), color: 'green'});\n            }\n            if (c.acs && c.acs.isOwner()) {\n              badges.push({name: formatMessage(messages.badge_owner), color: 'blue'});\n            }\n          }\n\n          const comment = Array.isArray(c.private) ?\n            c.private.join(',') : (c.private ? c.private.comment : null);\n          let preview;\n          let deliveryStatus;\n          if (!this.props.showMode && c.latestMessage) {\n            const msg = c.latestMessage();\n            if (msg) {\n              deliveryStatus = msg._status || c.msgStatus(msg, true);\n              preview = typeof msg.content == 'string' ?\n                msg.content.substr(0, MESSAGE_PREVIEW_LENGTH) :\n                Drafty.preview(msg.content, MESSAGE_PREVIEW_LENGTH);\n            }\n          }\n          contactNodes.push(\n            <Contact\n              title={c.public ? c.public.fn : null}\n              avatar={makeImageUrl(c.public ? c.public.photo : null)}\n              comment={comment}\n              preview={preview}\n              received={deliveryStatus}\n              unread={this.props.showUnread ? c.unread : 0}\n              now={c.online && this.props.connected}\n              acs={c.acs}\n              showMode={this.props.showMode}\n              badges={badges}\n              showCheckmark={showCheckmark}\n              selected={selected}\n              showOnline={this.props.showOnline && !isChannel}\n              isChannel={isChannel}\n              onSelected={this.props.onTopicSelected}\n              showContextMenu={this.props.showContextMenu}\n              item={key}\n              index={contactNodes.length}\n              key={key} />\n          );\n          contactsCount ++;\n        }\n      }, this);\n    }\n\n    return (\n      <div className={this.props.noScroll ? null : \"scrollable-panel\"}>\n        {contactsCount == 0 ?\n          <div className=\"center-medium-text\"\n            dangerouslySetInnerHTML={{__html: this.props.emptyListMessage}} />\n          :\n          null\n        }\n        {contactNodes.length > 0 ?\n          <ul className=\"contact-box\">\n            {contactNodes}\n          </ul>\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ContactList);\n","// The X menu to be displayed in title bars.\nimport React from 'react';\n\nexport default class MenuCancel extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n        <i className=\"material-icons\">close</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nimport MenuCancel from './menu-cancel.jsx';\n\nexport default class ErrorPanel extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      show: false,\n    };\n\n    this.hide = this.hide.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.level !== this.props.level) {\n      this.setState({\n        show: !(!this.props.level)\n      });\n    }\n  }\n\n  hide() {\n    this.setState({show: false});\n    if (this.props.onClearError) {\n      this.props.onClearError();\n    }\n  }\n\n  render() {\n    const icons = {err: 'error', warn: 'warning', info: 'info'}\n    const level = icons[this.props.level] || '';\n    const className = 'info-box ' + level;\n    return (\n      <div className={className}>\n        <div className=\"icon\"><i className=\"material-icons\">{level}</i></div>\n        <span>\n          {this.props.text}\n          {this.props.action ?\n            <>\n              &#32;<a href=\"#\"\n                style={{ whiteSpace: 'nowrap' }}\n                onClick={(e) => {e.preventDefault(); this.props.action();}}>\n                {this.props.actionText}\n              </a>\n            </>\n          : null}\n        </span>\n        <div className=\"cancel\"><MenuCancel onCancel={this.hide} /></div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\n\nexport default class Chip extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel(this.props.topic, this.props.index);\n  }\n\n  render() {\n    const title = this.props.title || this.props.topic;\n    const className = this.props.invalid ? 'chip invalid' : 'chip';\n    return (\n      <div className={className}>\n        {this.props.noAvatar ?\n          <span className=\"spacer\" /> :\n          <div className=\"avatar-box\">\n            <LetterTile\n              avatar={this.props.avatar || true}\n              topic={this.props.topic}\n              title={this.props.title} />\n          </div>\n        }\n        <span>{title}</span>\n        {this.props.onCancel && !this.props.required ?\n          <a href=\"#\" onClick={this.handleCancel} >&times;</a>\n          : <span className=\"spacer\" />}\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport Chip from './chip.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n/* BEGIN ChipInput: group membership widget */\nexport default class ChipInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = ChipInput.deriveStateFromProps(props);\n    this.state.input = '';\n    this.state.focused = false;\n\n    this.handleTextInput = this.handleTextInput.bind(this);\n    this.removeChipAt = this.removeChipAt.bind(this);\n    this.handleChipCancel = this.handleChipCancel.bind(this);\n    this.handleFocusGained = this.handleFocusGained.bind(this);\n    this.handleFocusLost = this.handleFocusLost.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  static deriveStateFromProps(props) {\n    return {\n      placeholder: props.chips ? '' : props.prompt,\n      sortedChips: ChipInput.sortChips(props.chips, props.staticMembers),\n      chipIndex: ChipInput.indexChips(props.chips)\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chips != this.props.chips ||\n      prevProps.staticMembers != this.props.staticMembers ||\n      prevProps.prompt != this.props.prompt) {\n      this.setState(ChipInput.deriveStateFromProps(this.props));\n    }\n    if (!prevState || this.props.chips.length > prevState.sortedChips.length) {\n      this.setState({input: ''});\n    }\n  }\n\n  // Map chip index to user name\n  static indexChips(chips) {\n    const index = {};\n    let count = 0;\n    chips.map((item) => {\n      index[item.user] = count;\n      count ++;\n    });\n    return index;\n  }\n\n  // Have non-removable chips appear before all other chips.\n  static sortChips(chips, keep) {\n    const required = [];\n    const normal = [];\n    chips.map((item) => {\n      if (keep && keep.includes(item.user)) {\n        required.push(item);\n      } else {\n        normal.push(item);\n      }\n    });\n    return required.concat(normal);\n  }\n\n  handleTextInput(e) {\n    this.setState({input: e.target.value});\n    if (this.props.filterFunc) {\n      this.props.filterFunc(e.target.value);\n    }\n  }\n\n  removeChipAt(idx) {\n    const removed = this.state.sortedChips[idx];\n    this.props.onChipRemoved(removed.user, this.state.chipIndex[removed.user]);\n  }\n\n  handleChipCancel(item, idx) {\n    this.removeChipAt(idx);\n  }\n\n  handleFocusGained() {\n    this.setState({focused: true});\n  }\n\n  handleFocusLost() {\n    this.setState({focused: false});\n    if (this.props.onFocusLost) {\n      this.props.onFocusLost(this.state.input);\n    }\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Backspace') {\n      if (this.state.input.length == 0 && this.state.sortedChips.length > 0) {\n        const at = this.state.sortedChips.length - 1;\n        if (this.state.sortedChips[at].user !== this.props.staticMembers) {\n          this.removeChipAt(at);\n        }\n      }\n    } else if (e.key === 'Enter') {\n      if (this.props.onEnter) {\n        this.props.onEnter(this.state.input);\n      }\n    } else if (e.key === 'Escape') {\n      if (this.props.onCancel) {\n        this.props.onCancel();\n      }\n    }\n  }\n\n  render() {\n    const chips = [];\n    let count = 0;\n    const staticMembers = this.props.staticMembers || [];\n    this.state.sortedChips.map((item) => {\n      chips.push(\n        <Chip\n          onCancel={this.handleChipCancel}\n          avatar={makeImageUrl(item.public ? item.public.photo : null)}\n          title={item.public ? item.public.fn : undefined}\n          noAvatar={this.props.avatarDisabled}\n          topic={item.user}\n          required={staticMembers.includes(item.user)}\n          invalid={item.invalid}\n          index={count}\n          key={item.user} />\n      );\n      count++;\n    });\n    const className = \"chip-input\" + (this.state.focused ? ' focused' : '');\n    return (\n      <div className={className}>\n        {chips}\n        <input type=\"text\"\n          placeholder={this.state.placeholder}\n          onChange={this.handleTextInput}\n          onFocus={this.handleFocusGained}\n          onBlur={this.handleFocusLost}\n          onKeyDown={this.handleKeyDown}\n          value={this.state.input}\n          autoFocus />\n      </div>\n    );\n  }\n};\n","// GroupMembers: control for managing a list of group members.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\nimport ContactList from './contact-list.jsx';\n\nconst messages = defineMessages({\n  no_contacts: {\n    id: 'no_contacts',\n    defaultMessage: 'You have no contacts :-(',\n    description: 'Shown in ContactsView when the user has no contacts'\n  },\n  contacts_not_found_short: {\n    id: 'contacts_not_found_short',\n    defaultMessage: \"No contacts match ''{query}''\",\n    description: 'Shown in ContactsView when search returned no results'\n  }\n});\n\nclass GroupManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Array of topic members\n      members: props.members,\n      index: GroupManager.indexMembers(props.members),\n      staticMembers: GroupManager.staticMembers(props.members, props.keepInitialMembers, props.requiredMember),\n      contactFilter: '',\n      noContactsMessage: props.intl.formatMessage(messages.no_contacts),\n      selectedContacts: GroupManager.selectedContacts(props.members)\n    };\n\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleMemberRemoved = this.handleMemberRemoved.bind(this);\n    this.handleContactFilter = this.handleContactFilter.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static indexMembers(members) {\n    let index = {};\n    members.map((m) => {\n      index[m.user] = {delta: 0, present: true}; // Delta: 0 unchanged, +1 added, -1 removed\n    });\n    return index;\n  }\n\n  static staticMembers(members, keepInitial, requiredMember) {\n    let stat = [];\n    members.map((m) => {\n      if (keepInitial || m.user == requiredMember) {\n        stat.push(m.user);\n      }\n    });\n    return stat;\n  }\n\n  static selectedContacts(members) {\n    let sel = [];\n    members.map((m) => {\n      sel.push(m.user);\n    });\n    return sel;\n  }\n\n  handleContactSelected(userId, index) {\n    let status = this.state.index[userId];\n    if (status) {\n      if (status.present) {\n        // Prevent duplicate members\n        return;\n      }\n      status.delta += 1;\n      status.present = true;\n    } else {\n      status = {delta: 1, present: true};\n    }\n\n    let m = this.state.members.slice();\n    m.push(this.props.contacts[index]);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleMemberRemoved(userId, index) {\n    const status = this.state.index[userId];\n    if (!status || !status.present) {\n      return;\n    }\n    status.present = false;\n    status.delta -= 1;\n\n    let m = this.state.members.slice();\n    m.splice(index, 1);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleContactFilter(val) {\n    const {formatMessage} = this.props.intl;\n    const msg = !val ?\n      formatMessage(messages.no_contacts) :\n      formatMessage(messages.contacts_not_found_short, {query: val});\n\n    this.setState({contactFilter: val, noContactsMessage: msg});\n  }\n\n  static doContactFiltering(filter, values) {\n    if (filter) {\n      for (let i=0; i<values.length; i++) {\n        if (values[i].indexOf(filter) >= 0) {\n          return true;\n        }\n      }\n      return false;\n    }\n    return true;\n  }\n\n  handleSubmit() {\n    var instance = this;\n    var members = [];\n    var added = [];\n    var removed = [];\n\n    var keys = Object.keys(this.state.index);\n    keys.map(function(k) {\n      if (instance.state.index[k].present) {\n        members.push(k);\n      }\n\n      if (instance.state.index[k].delta > 0) {\n        added.push(k);\n      } else if (instance.state.index[k].delta < 0) {\n        removed.push(k);\n      }\n    });\n    this.props.onSubmit(members, added, removed);\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <div id=\"group-manager\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_group_members\" defaultMessage=\"Group Members\" description=\"Section title\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ChipInput\n            chips={this.state.members}\n            staticMembers={this.state.staticMembers}\n            prompt=\"add members\"\n            filterFunc={this.handleContactFilter}\n            onChipRemoved={this.handleMemberRemoved} />\n        </div>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_all_contacts\" defaultMessage=\"All Contacts\"\n              description=\"Section title [All Contacts]\" />\n          </label>\n        </div>\n        <ContactList\n          contacts={this.props.contacts}\n          myUserId={this.props.myUserId}\n          topicSelected={this.state.selectedContacts}\n          filter={this.state.contactFilter}\n          filterFunc={GroupManager.doContactFiltering}\n          emptyListMessage={this.state.noContactsMessage}\n          showOnline={false}\n          showUnread={false}\n          onTopicSelected={this.handleContactSelected} />\n        <div id=\"group-manager-buttons\" className=\"panel-form-row\">\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n          <button className=\"secondary\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(GroupManager);\n","// Password with a visiblity toggle.\nimport React from 'react';\n\nexport default class VisiblePassword extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: this.props.value,\n      visible: false\n    };\n\n    this.handleVisibility = this.handleVisibility.bind(this);\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n    if (this.props.onChange) {\n      this.props.onChange(e);\n    }\n  }\n\n  handleVisibility(e) {\n    e.preventDefault();\n    this.setState({visible: !this.state.visible});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode == 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, visible: false});\n      if (this.props.onFinished) {\n        this.props.onFinished();\n      }\n    } else if (e.keyCode == 13) {\n      // Enter pressed\n      this.handleEditingFinished();\n    }\n  }\n\n  handleEditingFinished(e) {\n    if (e) {\n      let currentTarget = e.currentTarget;\n      setTimeout(() => {\n        if (!currentTarget.contains(document.activeElement)) {\n          if (this.props.onFinished) {\n            this.props.onFinished(this.state.value);\n          }\n        }\n      }, 0);\n    } else if (this.props.onFinished) {\n      this.props.onFinished(this.state.value.trim());\n    }\n  }\n\n  render() {\n    return (\n      <div tabIndex=\"-1\" className=\"group-focus\"\n        onBlur={this.handleEditingFinished}>\n        <input className=\"with-visibility\"\n          type={this.state.visible ? \"text\" : \"password\"}\n          value={this.state.value}\n          placeholder={this.props.placeholder}\n          required={this.props.required ? 'required' : ''}\n          autoFocus={this.props.autoFocus ? 'autoFocus' : ''}\n          autoComplete={this.props.autoComplete}\n          onChange={this.handeTextChange}\n          onKeyDown={this.handleKeyDown} />\n        <span onClick={this.handleVisibility}>\n          <i className=\"material-icons clickable light-gray\">\n            {this.state.visible ? 'visibility' : 'visibility_off'}\n          </i>\n        </span>\n      </div>\n    );\n  }\n}\n","// In-place text editor. Shows text with an icon which toggles it into an input field.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport VisiblePassword from './visible-password.jsx';\n\nexport default class InPlaceEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      active: props.active,\n      initialValue: props.value || '',\n      value: props.value || ''\n    };\n\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleStartEditing = this.handleStartEditing.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n    this.handlePasswordFinished = this.handlePasswordFinished.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // If text has changed while in read mode, update text and discard changes.\n    // Ignore update if in edit mode.\n    const newValue = this.props.value || '';\n    if (prevState.initialValue != newValue && !prevState.active) {\n      this.setState({\n        initialValue: newValue,\n        value: newValue\n      });\n    }\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, active: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleEditingFinished(e);\n    }\n  }\n\n  handleStartEditing() {\n    if (!this.props.readOnly) {\n      ReactDOM.findDOMNode(this).focus();\n      this.setState({active: true});\n    }\n  }\n\n  handleEditingFinished(event) {\n    if (this.props.required && !event.target.checkValidity()) {\n      // Empty input\n      this.setState({value: this.props.value, active: false});\n      return;\n    }\n    this.setState({active: false});\n    let value = this.state.value.trim();\n    if ((value || this.props.value) && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  handlePasswordFinished(value) {\n    this.setState({active: false});\n    if (value && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  render() {\n    if (this.state.active) {\n      var fieldType = this.props.type || 'text';\n    } else {\n      var spanText = this.props.type == 'password' ? '••••••••' : this.state.value;\n      var spanClass = 'in-place-edit' +\n        (this.props.readOnly ? ' disabled' : '');\n      if (!spanText) {\n        spanText = this.props.placeholder;\n        spanClass += ' placeholder';\n      }\n      if (spanText.length > 20) {\n        // FIXME: this is wrong for RTL languages.\n        spanText = spanText.substring(0, 19) + '...';\n      }\n    }\n    return (\n      this.state.active ?\n        (fieldType == 'password' ?\n          <VisiblePassword\n            value={this.state.value}\n            placeholder={this.props.placeholder}\n            required={this.props.required ? 'required' : ''}\n            autoComplete={this.props.autoComplete}\n            autoFocus={true}\n            onFinished={this.handlePasswordFinished}/>\n          :\n          <input type={fieldType}\n            value={this.state.value}\n            placeholder={this.props.placeholder}\n            required={this.props.required ? 'required' : ''}\n            autoComplete={this.props.autoComplete}\n            autoFocus\n            onChange={this.handeTextChange}\n            onKeyDown={this.handleKeyDown}\n            onBlur={this.handleEditingFinished} />\n        )\n        :\n        <span className={spanClass} onClick={this.handleStartEditing}>\n          <span className=\"content\">{spanText}</span>\n        </span>\n    );\n  }\n};\n","// Toggle [Title text >] -> [Title text v]\n\nimport React from 'react';\n\nexport default class MoreButton extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: props.open\n    };\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n\n  handleToggle() {\n    const open = !this.state.open;\n    this.setState({open: open});\n    if (this.props.onToggle) {\n      this.props.onToggle(open);\n    }\n  }\n\n  render() {\n    return (<label className=\"small clean-clickable\" onClick={this.handleToggle}>{this.props.title}...\n      {this.state.open ? <i className=\"material-icons\">expand_more</i> :\n        <i className=\"material-icons\">chevron_right</i>}\n      </label>);\n  }\n}\n","// PermissionsEditor: Component for editing permissions\n// <PermissionsEditor mode=\"JWROD\" skip=\"O\" onChange={this.handleCheckboxTest} />\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport CheckBox from './checkbox.jsx';\nimport Contact from './contact.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n// Translatable permission names.\nconst messages = defineMessages({\n  joiner: {\n    id: 'permission_join',\n    defaultMessage: \"Join ({val})\",\n    description: 'Name of J permission'\n  },\n  reader: {\n    id: 'permission_read',\n    defaultMessage: \"Read ({val})\",\n    description: 'Name of R permission'\n  },\n  writer: {\n    id: 'permission_write',\n    defaultMessage: \"Write ({val})\",\n    description: 'Name of W permission'\n  },\n  preser: {\n    id: 'permission_pres',\n    defaultMessage: \"Get notified ({val})\",\n    description: 'Name of P permission'\n  },\n  approver: {\n    id: 'permission_admin',\n    defaultMessage: \"Approve ({val})\",\n    description: 'Name of A permission'\n  },\n  sharer: {\n    id: 'permission_share',\n    defaultMessage: \"Share ({val})\",\n    description: 'Name of S permission'\n  },\n  deleter: {\n    id: 'permission_delete',\n    defaultMessage: \"Delete ({val})\",\n    description: 'Name of D permission'\n  },\n  owner: {\n    id: 'permission_owner',\n    defaultMessage: \"Owner ({val})\",\n    description: 'Name of O permission'\n  }\n});\n\nclass PermissionsEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mode: (props.mode || '').replace('N', '')\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(val) {\n    let mode = this.state.mode;\n    let idx = mode.indexOf(val);\n    if (idx == -1) {\n      mode += val;\n    } else {\n      mode = mode.replace(val, '');\n    }\n    this.setState({mode: mode});\n  }\n\n  handleSubmit() {\n    // Normalize string, otherwise cannot check if mode has changed.\n    var mode = (this.state.mode || 'N').split('').sort().join('');\n    var before = (this.props.mode || 'N').split('').sort().join('')\n    if (mode !== before) {\n      this.props.onSubmit(mode);\n    } else {\n      this.props.onCancel();\n    }\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const all = 'JRWPASDO';\n    const names = {\n      'J': formatMessage(messages.joiner, {val: 'J'}),\n      'R': formatMessage(messages.reader, {val: 'R'}),\n      'W': formatMessage(messages.writer, {val: 'W'}),\n      'P': formatMessage(messages.preser, {val: 'P'}),\n      'A': formatMessage(messages.approver, {val: 'A'}),\n      'S': formatMessage(messages.sharer, {val: 'S'}),\n      'D': formatMessage(messages.deleter, {val: 'D'}),\n      'O': formatMessage(messages.owner, {val: 'O'})\n    };\n\n    let skip = this.props.skip || '';\n    let mode = this.state.mode;\n    let compare = (this.props.compare || '').replace('N', '');\n    let items = [];\n    for (let i=0; i<all.length; i++) {\n      let c = all.charAt(i);\n      if (skip.indexOf(c) >= 0 && mode.indexOf(c) < 0) {\n        // Permission is marked as inactive: hide unchecked permissions, disable checked permissions\n        continue;\n      }\n      items.push(\n        <tr key={c}>\n          <td>{names[c]}</td>\n          <td className=\"checkbox\">{skip.indexOf(c) < 0 ?\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} onChange={this.handleChange}/>\n            :\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} />\n          }</td>{this.props.compare ? <td className=\"checkbox\">\n            <CheckBox name={c} checked={(compare.indexOf(c) >= 0)}/>\n          </td> : null}\n        </tr>\n      );\n    }\n\n    return (\n      <div className=\"panel-form-column\">\n        {this.props.userTitle ?\n          <ul className=\"contact-box\"><Contact\n            item={this.props.item}\n            title={this.props.userTitle}\n            avatar={makeImageUrl(this.props.userAvatar ? this.props.userAvatar : null)} /></ul> : null}\n        <label className=\"small\"><FormattedMessage id=\"title_permissions\"\n          defaultMessage=\"Permissions\" description=\"Section title\"/></label>\n        <table className=\"permission-editor\">\n        {this.props.compare ?\n          <thead><tr>\n            <th></th><th>{this.props.modeTitle}</th>\n            <th>{this.props.compareTitle}</th>\n          </tr></thead> :\n          null}\n        <tbody>\n          {items}\n        </tbody></table>\n        <br />\n        <div className=\"dialog-buttons\">\n          <button className=\"outline\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(PermissionsEditor);\n","// TagManager: edit topic or user tags.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\n\nimport { MAX_TAG_COUNT, MAX_TAG_LENGTH, MIN_TAG_LENGTH } from '../config.js';\nimport { arrayEqual } from '../lib/utils.js';\n\nexport default class TagManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tags: this.props.tags,\n      tagInput: '',\n      activated: this.props.activated\n    };\n\n    this.handleTagInput = this.handleTagInput.bind(this);\n    this.handleAddTag = this.handleAddTag.bind(this);\n    this.handleRemoveTag = this.handleRemoveTag.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (!arrayEqual(nextProps.tags, prevState.tags) && !prevState.activated) {\n      return {tags: nextProps.tags};\n    }\n    return null;\n  }\n\n  handleTagInput(text) {\n    this.setState({tagInput: text});\n    if (text.length > 0) {\n      const last = text[text.length-1];\n      if (text[0] == '\"') {\n        // This is a quoted string.\n        if (text.length > 1 && last == '\"') {\n          this.handleAddTag(text.substring(1, text.length-1));\n        }\n      } else if (last == ',' || last == ' ' || last == ';' || last == '\"') {\n        // User entered ',', ' ' or ';'\n        this.handleAddTag(text.substring(0, text.length-1).trim());\n      }\n    }\n  }\n\n  handleAddTag(tag) {\n    const maxTagCount = this.props.tinode.getServerLimit('maxTagCount', MAX_TAG_COUNT);\n\n    if (tag.length > 0 && this.state.tags.length < maxTagCount) {\n      const tags = this.state.tags.slice(0);\n      tags.push(tag);\n\n      this.setState({tags: tags, tagInput: ''});\n      if (this.props.onTagsChanged) {\n        this.props.onTagsChanged(tags);\n      }\n      return tags;\n    }\n    return this.state.tags;\n  }\n\n  handleRemoveTag(tag, index) {\n    const tags = this.state.tags.slice(0);\n    tags.splice(index, 1);\n    this.setState({tags: tags});\n    if (this.props.onTagsChanged) {\n      this.props.onTagsChanged(tags);\n    }\n  }\n\n  handleSubmit() {\n    // Add unprocessed input to tags, submit the list.\n    this.props.onSubmit(this.handleAddTag(this.state.tagInput.trim()));\n    this.setState({activated: false, tags: this.props.tags});\n  }\n\n  handleCancel() {\n    this.setState({activated: false, tagInput: '', tags: this.props.tags});\n    if (this.props.onCancel) {\n      this.props.onCancel();\n    }\n  }\n\n  render() {\n    const minTagLength = this.props.tinode.getServerLimit('minTagLength', MIN_TAG_LENGTH);\n    const maxTagLength = this.props.tinode.getServerLimit('maxTagLength', MAX_TAG_LENGTH);\n\n    let tags = [];\n    if (this.state.activated) {\n      this.state.tags.map((tag) => {\n        tags.push({user: tag, invalid: (tag.length < minTagLength || tag.length > maxTagLength)});\n      });\n    } else {\n      this.state.tags.map((tag) => {\n        tags.push(<span className=\"badge\" key={tags.length}>{tag}</span>);\n      });\n      if (tags.length == 0) {\n        tags = (\n          <i>\n            <FormattedMessage id=\"tags_not_found\" defaultMessage=\"No tags defined. Add some.\" description=\"\" />\n          </i>\n        );\n      }\n    }\n    return (\n      <div className=\"panel-form-column\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">{this.props.title}</label>\n        </div>\n        {this.state.activated ?\n        <div>\n          <FormattedMessage id=\"tags_editor_no_tags\" defaultMessage=\"Add some tags\"\n            description=\"Tag editor prompt when no tags are found.\">{\n            (add_tags_prompt) => <ChipInput\n              chips={tags}\n              avatarDisabled={true}\n              prompt={add_tags_prompt}\n              onEnter={this.handleAddTag}\n              onFocusLost={this.handleAddTag}\n              onCancel={this.handleCancel}\n              onChipRemoved={this.handleRemoveTag}\n              filterFunc={this.handleTagInput} />\n          }</FormattedMessage>\n          {this.props.onSubmit || this.props.onCancel ?\n            <div id=\"tag-manager-buttons\" className=\"dialog-buttons panel-form-row\">\n              <button className=\"outline\" onClick={this.handleCancel}>\n                <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n              </button>\n              <button className=\"primary\" onClick={this.handleSubmit}>\n                <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n              </button>\n            </div>\n          : null}\n        </div>\n        :\n        <div className=\"quoted\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.setState({activated: true});}}>\n            <i className=\"material-icons\">edit</i> &nbsp;<FormattedMessage id=\"title_manage_tags\" defaultMessage=\"Manage\"\n              description=\"Section title for the list of tags\" />\n          </a>\n          <>{tags}</>\n        </div>\n      }\n      </div>\n    );\n  }\n};\n","// InfoView: panel with topic/user info.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport ContactList from '../widgets/contact-list.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupManager from '../widgets/group-manager.jsx';\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport MenuCancel from '../widgets/menu-cancel.jsx';\nimport MoreButton from '../widgets/more-button.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\nimport TagManager from '../widgets/tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH, NO_ACCESS_MODE } from '../config.js';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, vcard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  requested: {\n    id: 'requested_permissions',\n    defaultMessage: 'Requested',\n    description: 'Title for permissions'\n  },\n  granted: {\n    id: 'granted_permissions',\n    defaultMessage: 'Granted',\n    description: 'Title for permissions'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n  other_user: {\n    id: 'label_other_user',\n    defaultMessage: 'Other',\n    description: 'Label for the other user when the user is unnamed'\n  },\n  clear_messages: {\n    id: 'action_clear_messages',\n    defaultMessage: 'Clear Messages',\n    description: 'Flat button [Clear Messages] (soft-delete messages)'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n  delete_messages: {\n    id: 'action_delete_messages',\n    defaultMessage: 'Clear Messages for All',\n    description: 'Flat button [Clear for All] (hard-delete all messages)'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  leave_chat: {\n    id: 'action_leave_chat',\n    defaultMessage: 'Leave Conversation',\n    description: 'Flat button [Leave Conversation]'\n  },\n  leave_chat_warning: {\n    id: 'leave_chat_warning',\n    defaultMessage: 'Are you sure you want to leave this conversation?',\n    description: 'Alert dialog warning when unsubscribing from a chat.'\n  },\n  block_contact: {\n    id: 'action_block_contact',\n    defaultMessage: \"Block Contact\",\n    description: \"Flat button [Block Contact]\"\n  },\n  block_contact_warning: {\n    id: 'block_contact_warning',\n    defaultMessage: 'Are you sure you want to block this contact?',\n    description: 'Alert dialog warning when blocking a contact.'\n  },\n  report_chat: {\n    id: 'action_report_chat',\n    defaultMessage: 'Report Conversation',\n    description: 'Flat button [Report Group]'\n  },\n  report_chat_warning: {\n    id: 'report_chat_warning',\n    defaultMessage: 'Are you sure you want to block and report this conversation?',\n    description: 'Alert dialog warning when reporting a conversation for abuse'\n  },\n});\n\nclass InfoView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      topic: null,\n      owner: false,\n      admin: false,\n      sharer: false,\n      deleter: false,\n      muted: false,\n      address: null,\n      groupTopic: undefined,\n      channel: undefined,\n      fullName: undefined,\n      avatar: null,\n      private: null,\n      selectedContact: null,\n      access: null,\n      modeGiven: null,\n      modeWant: null,\n      modeGiven2: null, // P2P topic, the other user mode given\n      modeWant2: null,  // P2P topic, the other user mode want\n      auth: null,\n      anon: null,\n      contactList: [],\n      tags: [],\n      showMemberPanel: false,\n      showPermissionEditorFor: undefined,\n      moreInfoExpanded: false,\n      previousMetaDesc: undefined,\n      previousSubsUpdated: undefined,\n      previousTagsUpdated: undefined\n    };\n\n    this.resetSubs = this.resetSubs.bind(this);\n    this.resetDesc = this.resetDesc.bind(this);\n    this.onMetaDesc = this.onMetaDesc.bind(this);\n    this.onSubsUpdated = this.onSubsUpdated.bind(this);\n    this.onTagsUpdated = this.onTagsUpdated.bind(this);\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\n    this.handlePrivateUpdate = this.handlePrivateUpdate.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleMuted = this.handleMuted.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handleShowAddMembers = this.handleShowAddMembers.bind(this);\n    this.handleHideAddMembers = this.handleHideAddMembers.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleDeleteMessages = this.handleDeleteMessages.bind(this);\n    this.handleLeave = this.handleLeave.bind(this);\n    this.handleBlock = this.handleBlock.bind(this);\n    this.handleReport = this.handleReport.bind(this);\n    this.handleMemberSelected = this.handleMemberSelected.bind(this);\n    this.handleMoreInfo = this.handleMoreInfo.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.handleContextMenu = this.handleContextMenu.bind(this);\n  }\n\n  // No need to separately handle component mount.\n  componentDidUpdate(props) {\n    const topic = this.props.tinode.getTopic(props.topic);\n    if (!topic) {\n      return;\n    }\n\n    if (this.onMetaDesc != topic.onMetaDesc) {\n      this.previousMetaDesc = topic.onMetaDesc;\n      topic.onMetaDesc = this.onMetaDesc;\n\n      this.previousSubsUpdated = topic.onSubsUpdated;\n      topic.onSubsUpdated = this.onSubsUpdated;\n\n      if (topic.getType() == 'grp') {\n        this.previousTagsUpdated = topic.onTagsUpdated;\n        topic.onTagsUpdated = this.onTagsUpdated;\n      } else {\n        this.previousTagsUpdated = undefined;\n      }\n    }\n\n    if (this.state.topic != props.topic) {\n      this.setState({topic: props.topic});\n      this.resetDesc(topic, props);\n      this.resetSubs(topic, props);\n    }\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.setState({topic: null});\n    topic.onMetaDesc = this.previousMetaDesc;\n    topic.onSubsUpdated = this.previousSubsUpdated;\n    topic.onTagsUpdated = this.previousTagsUpdated;\n  }\n\n  resetSubs(topic, props) {\n    const newState = {contactList: []};\n    if (topic.getType() == 'p2p') {\n      // Fetch the other party in the p2p conversation.\n      // Topic may not be ready yet, so check if user is found.\n      const user2 = topic.subscriber(props.topic);\n      if (user2) {\n        newState.modeGiven2 = user2.acs.getGiven();\n        newState.modeWant2 = user2.acs.getWant();\n      } else {\n        newState.modeGiven2 = NO_ACCESS_MODE;\n        newState.modeWant2 = NO_ACCESS_MODE;\n      }\n    } else {\n      topic.subscribers((sub) => {\n        newState.contactList.push(sub);\n      }, this);\n    }\n\n    this.setState(newState);\n  }\n\n  resetDesc(topic, props) {\n    const defacs = topic.getDefaultAccess() || {};\n    const acs = topic.getAccessMode();\n\n    this.setState({\n      owner: acs && acs.isOwner(),\n      admin: acs && acs.isAdmin(),\n      sharer: acs && acs.isSharer(),\n      deleter: acs && acs.isDeleter(),\n      muted: acs && acs.isMuted(),\n\n      fullName: topic.public ? topic.public.fn : undefined,\n      avatar: makeImageUrl(topic.public ? topic.public.photo : null),\n      private: topic.private ? topic.private.comment : null,\n      address: topic.name,\n      groupTopic: topic.isGroupType(),\n      channel: topic.isChannelType(),\n      showMemberPanel: false,\n      access: acs ? acs.getMode() : undefined,\n      modeGiven: acs ? acs.getGiven() : undefined,\n      modeWant: acs ? acs.getWant() : undefined,\n      auth: defacs.auth,\n      anon: defacs.anon\n    });\n\n    if (topic.getType() == 'grp' && acs && acs.isOwner()) {\n      // Requesting tags: owner is editing the topic.\n      topic.getMeta(topic.startMetaQuery().withTags().build());\n    }\n  }\n\n  onMetaDesc(desc) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetDesc(topic, this.props);\n\n    if (this.previousMetaDesc && this.previousMetaDesc != this.onMetaDesc) {\n      this.previousMetaDesc(desc);\n    }\n  }\n\n  onSubsUpdated(subs) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetSubs(topic, this.props);\n\n    if (this.previousSubsUpdated && this.previousSubsUpdated != this.onSubsUpdated) {\n      this.previousSubsUpdated(subs);\n    }\n  }\n\n  onTagsUpdated(tags) {\n    this.setState({tags: tags});\n\n    if (this.previousTagsUpdated && this.previousTagsUpdated != this.onTagsUpdated) {\n      this.previousTagsUpdated();\n    }\n  }\n\n  handleFullNameUpdate(fn) {\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.fullName !== fn) {\n      this.setState({fullName: fn});\n      this.props.onTopicDescUpdate(this.props.topic, vcard(fn, null), null);\n    }\n  }\n\n  handlePrivateUpdate(comment) {\n    comment = comment.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.private !== comment) {\n      this.setState({private: comment});\n      this.props.onTopicDescUpdate(this.props.topic, null, comment || Tinode.DEL_CHAR);\n    }\n  }\n\n  handleImageChanged(img) {\n    this.setState({avatar: img});\n    this.props.onTopicDescUpdate(this.props.topic, vcard(null, img || Tinode.DEL_CHAR), null);\n  }\n\n  handleMuted(ignored, checked) {\n    this.setState({muted: checked});\n    this.props.onChangePermissions(this.props.topic, checked ? '-P' : '+P');\n  }\n\n  handlePermissionsChanged(perm) {\n    switch (this.state.showPermissionEditorFor) {\n      case 'auth':\n        this.props.onTopicDescUpdate(this.props.topic, null, null, {auth: perm});\n        break;\n      case 'anon':\n        this.props.onTopicDescUpdate(this.props.topic, null, null, {anon: perm});\n        break;\n      case 'mode':\n      case 'want':\n        this.props.onChangePermissions(this.props.topic, perm);\n        break;\n      case 'given':\n        this.props.onChangePermissions(this.props.topic, perm, this.props.topic);\n        break;\n      case 'user':\n        this.props.onChangePermissions(this.props.topic, perm, this.state.userPermissionsEdited);\n        break;\n    }\n\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handleLaunchPermissionsEditor(which, uid) {\n    const {formatMessage} = this.props.intl;\n    let toEdit, toCompare, toSkip, titleEdit, titleCompare, userTitle, userAvatar;\n    switch (which) {\n      case 'mode':\n        toEdit = this.state.access;\n        break;\n      case 'want':\n        toEdit = this.state.modeWant;\n        toCompare = this.state.modeGiven;\n        if (this.state.owner) {\n          // Don't allow owner to unset 'O' permission. All other permissions are OK.\n          toSkip = 'O';\n        } else {\n          // Allow accepting any of 'ASDO' permissions but don't allow asking for them.\n          toSkip = Tinode.AccessMode.encode(Tinode.AccessMode.diff('ASDO', this.state.modeGiven));\n          if (this.state.channel) {\n            // Channels are read-only.\n            toSkip += 'W';\n          }\n        }\n        titleEdit = formatMessage(messages.requested);\n        titleCompare = formatMessage(messages.granted);\n        break;\n      case 'given':\n        toEdit = this.state.modeGiven2;\n        toCompare = this.state.modeWant2;\n        toSkip = this.state.groupTopic ? (this.state.owner ? '' : 'O') : 'ASDO';\n        titleEdit = formatMessage(messages.granted);\n        titleCompare = formatMessage(messages.requested);\n        break;\n      case 'auth':\n        toEdit = this.state.auth;\n        toSkip = 'O';\n        break;\n      case 'anon':\n        toEdit = this.state.anon;\n        toSkip = 'O';\n        break;\n      case 'user': {\n        const topic = this.props.tinode.getTopic(this.props.topic);\n        if (!topic) {\n          return;\n        }\n        const user = topic.subscriber(uid);\n        if (!user || !user.acs) {\n          return;\n        }\n        toEdit = user.acs.getGiven();\n        toCompare = user.acs.getWant();\n        toSkip = this.state.owner ? '' : 'O';\n        titleEdit = formatMessage(messages.granted);\n        titleCompare = formatMessage(messages.requested);\n        if (user.public) {\n          userTitle = user.public.fn;\n          userAvatar = user.public.photo;\n        }\n        break;\n      }\n      default:\n        console.log(\"Unknown permission editing mode '\" + which + \"'\");\n        break;\n    }\n    this.setState({\n      showPermissionEditorFor: which,\n      userPermissionsEdited: uid,\n      userPermissionsTitle: userTitle,\n      userPermissionsAvatar: userAvatar,\n      editedPermissions: toEdit,\n      immutablePermissions: toCompare,\n      editedPermissionsTitle: titleEdit,\n      immutablePermissionsTitle: titleCompare,\n      editedPermissionsSkipped: toSkip,\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handleShowAddMembers(e) {\n    e.preventDefault();\n    this.props.onInitFind();\n    this.setState({showMemberPanel: true});\n  }\n\n  handleHideAddMembers() {\n    this.setState({showMemberPanel: false});\n  }\n\n  handleMemberUpdateRequest(members, added, removed) {\n    this.props.onMemberUpdateRequest(this.props.topic, added, removed);\n    this.setState({showMemberPanel: false});\n  }\n\n  handleDeleteMessages(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(this.state.deleter ? messages.delete_messages : messages.clear_messages), // title\n      formatMessage(this.state.deleter ? messages.delete_messages_warning : messages.clear_messages_warning), // content\n      (() => { this.props.onDeleteMessages(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleLeave(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.leave_chat), // title\n      formatMessage(messages.leave_chat_warning), // content\n      (() => { this.props.onLeaveTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleBlock(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.block_contact), // title\n      formatMessage(messages.block_contact_warning), // content\n      (() => { this.props.onBlockTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleReport(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.report_chat), // title\n      formatMessage(messages.report_chat_warning), // content\n      (() => { this.props.onReportTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleMemberSelected(uid) {\n    this.setState({selectedContact: uid});\n  }\n\n  handleMoreInfo(open) {\n    this.setState({moreInfoExpanded: open});\n  }\n\n  handleTagsUpdated(tags) {\n    if (!arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      this.props.onTopicTagsUpdate(this.props.topic, tags);\n    }\n  }\n\n  handleContextMenu(params) {\n    const {formatMessage} = this.props.intl;\n    const instance = this;\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    const user = topic.subscriber(params.topicName);\n    if (!user || !user.acs) {\n      return;\n    }\n\n    const menuItems = [\n      {title: formatMessage(messages.edit_permissions), handler: function() {\n        instance.handleLaunchPermissionsEditor('user', params.topicName);\n      }},\n      'member_delete',\n      user.acs.isMuted() ? 'member_unmute' : 'member_mute',\n      user.acs.isJoiner() ? 'member_block' : 'member_unblock'\n    ];\n    this.props.showContextMenu({\n      topicName: this.props.topic,\n      x: params.x,\n      y: params.y,\n      user: params.topicName}, menuItems);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n\n    return (\n      <div id=\"info-view\">\n        <div className=\"caption-panel\" id=\"info-caption-panel\">\n          <div className=\"panel-title\" id=\"info-title\">\n            <FormattedMessage id=\"title_info\" defaultMessage=\"Info\" description=\"Title for InfoView\" />\n          </div>\n          <div>\n            <MenuCancel onCancel={this.props.onCancel} />\n          </div>\n        </div>\n        {this.props.displayMobile ?\n          <ErrorPanel\n            level={this.props.errorLevel}\n            text={this.props.errorText}\n            onClearError={this.props.onError} /> : null}\n        {this.state.showMemberPanel ?\n          <GroupManager\n            members={this.state.contactList}\n            requiredMember={this.props.myUserId}\n            keepInitialMembers={!this.state.admin && !this.state.owner}\n            myUserId={this.props.myUserId}\n            contacts={this.props.searchableContacts}\n            onCancel={this.handleHideAddMembers}\n            onSubmit={this.handleMemberUpdateRequest} />\n          :\n        this.state.showPermissionEditorFor ?\n          <PermissionsEditor\n            mode={this.state.editedPermissions}\n            compare={this.state.immutablePermissions}\n            skip={this.state.editedPermissionsSkipped}\n            modeTitle={this.state.editedPermissionsTitle}\n            compareTitle={this.state.immutablePermissionsTitle}\n            userTitle={this.state.userPermissionsTitle}\n            item={this.state.userPermissionsEdited}\n            userAvatar={this.state.userPermissionsAvatar}\n            onSubmit={this.handlePermissionsChanged}\n            onCancel={this.handleHidePermissionsEditor}\n            />\n          :\n          <div id=\"info-view-content\" className=\"scrollable-panel\">\n            <div className=\"panel-form-row\">\n              <div className=\"panel-form-column\">\n                <div><label className=\"small\">\n                  <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                    description=\"Label for editing topic name\" />\n                </label></div>\n                <div><InPlaceEdit\n                    placeholder={this.state.groupTopic ? \"Group name\" : <i>Unknown</i>}\n                    readOnly={!this.state.owner}\n                    value={this.state.fullName}\n                    required={true}\n                    onFinished={this.handleFullNameUpdate} /></div>\n                <div>\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                      description=\"Label for editing 'private'\" />\n                  </label>\n                </div>\n                <div>\n                  <FormattedMessage id=\"private_editing_placeholder\"\n                    defaultMessage=\"Visible to you only\"\n                    description=\"Placeholder for editing 'private'\">{\n                    (private_placeholder) => <InPlaceEdit\n                      placeholder={private_placeholder}\n                      value={this.state.private}\n                      onFinished={this.handlePrivateUpdate} />\n                  }</FormattedMessage>\n                </div>\n              </div>\n              <AvatarUpload\n                avatar={this.state.avatar}\n                readOnly={!this.state.owner}\n                uid={this.props.topic}\n                title={this.state.fullName}\n                onImageChanged={this.handleImageChanged}\n                onError={this.props.onError} />\n            </div>\n            <div className=\"hr\" />\n            <div className=\"panel-form-column\">\n              <div className=\"panel-form-row\">\n                <label>\n                  <FormattedMessage id=\"label_muting_topic\" defaultMessage=\"Muted:\"\n                    description=\"Label for Muting/unmuting the topic\" />\n                </label>\n                <CheckBox name=\"P\" checked={this.state.muted}\n                  onChange={this.handleMuted} />\n              </div>\n              <FormattedMessage id=\"action_more\" defaultMessage=\"More\"\n                description=\"Action for showing more content\">{\n                (more) => <MoreButton\n                  title={more}\n                  open={this.state.moreInfoExpanded}\n                  onToggle={this.handleMoreInfo} />\n              }</FormattedMessage>\n              {this.state.moreInfoExpanded ?\n                <div className=\"panel-form-column\">\n                  <div className=\"panel-form-row\">\n                    <label><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n                      description=\"Label for user address (ID)\" /></label>\n                    <tt>{this.state.address}</tt>\n                  </div>\n                  {this.state.groupTopic ?\n                    <div className=\"panel-form-row\">\n                      <label>\n                        <FormattedMessage id=\"label_your_permissions\" defaultMessage=\"Your permissions:\"\n                          description=\"Label for current user permissions\" />\n                      </label>\n                      <tt className=\"clickable\"\n                        onClick={this.handleLaunchPermissionsEditor.bind(this, 'want')}>\n                        {this.state.access}\n                      </tt>\n                    </div>\n                    :\n                    <div>\n                      <div>\n                        <label className=\"small\">\n                          <FormattedMessage id=\"label_permissions\" defaultMessage=\"Permissions:\"\n                            description=\"Section title\" />\n                        </label>\n                      </div>\n                      <div className=\"quoted\">\n                        <div>\n                          <FormattedMessage id=\"label_you\" defaultMessage=\"You:\"\n                            description=\"Label for the current user\" /> &nbsp;<tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'want')}>\n                          {this.state.access}\n                        </tt></div>\n                        <div>{this.state.fullName ? this.state.fullName : formatMessage(messages.other_user)}:\n                          &nbsp;<tt className=\"clickable\" onClick={this.handleLaunchPermissionsEditor.bind(this, 'given')}>\n                          {this.state.modeGiven2}\n                          </tt>\n                        </div>\n                      </div>\n                    </div>\n                  }\n                  {this.state.sharer && (this.state.auth || this.state.anon) ?\n                  <div>\n                    <div>\n                      <label className=\"small\">\n                        <FormattedMessage id=\"label_default_access\" defaultMessage=\"Default access mode:\"\n                          description=\"Section title\" />\n                      </label>\n                    </div>\n                    <div className=\"quoted\">\n                      <div>Auth: {this.state.admin ?\n                        <tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>\n                          {this.state.auth}\n                        </tt>\n                        :\n                        <tt>{this.state.auth}</tt>\n                      }\n                      </div>\n                      <div>Anon: {this.state.admin ?\n                        <tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>\n                          {this.state.anon}\n                        </tt>\n                        :\n                        <tt>{this.state.anon}</tt>\n                      }\n                      </div>\n                    </div>\n                  </div>\n                  :\n                  null\n                }\n                </div>\n              :\n              null\n              }\n            </div>\n            <div className=\"hr\" />\n            {this.state.owner ?\n              <>\n                <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (user discovery)\"\n                  description=\"Section title for TagManager\">{\n                  (tags) => <TagManager\n                    title={tags}\n                    tags={this.state.tags}\n                    activated={false}\n                    tinode={this.props.tinode}\n                    onSubmit={this.handleTagsUpdated} />\n                }</FormattedMessage>\n                <div className=\"hr\" />\n              </>\n              :\n              null\n            }\n            <div className=\"panel-form-column\">\n              {!this.state.channel ?\n                <a href=\"#\" className=\"flat-button\" onClick={this.handleDeleteMessages}>\n                  <i className=\"material-icons\">delete_outline</i> &nbsp;{\n                    formatMessage(this.state.deleter ? messages.delete_messages : messages.clear_messages)\n                  }\n                </a>\n                :\n                null\n              }\n              <a href=\"#\" className=\"danger flat-button\" onClick={this.handleLeave}>\n                <i className=\"material-icons\">exit_to_app</i> &nbsp;{formatMessage(messages.leave_chat)}\n              </a>\n              {!this.state.groupTopic ?\n                <a href=\"#\" className=\"danger flat-button\" onClick={this.handleBlock}>\n                  <i className=\"material-icons\">block</i> &nbsp;{formatMessage(messages.block_contact)}\n                </a>\n                :\n                null\n              }\n              {!this.state.owner ?\n                <a href=\"#\" className=\"danger flat-button\" onClick={this.handleReport}>\n                  <i className=\"material-icons\">report</i> &nbsp;{formatMessage(messages.report_chat)}\n                </a>\n                :\n                null\n              }\n            </div>\n            {this.state.groupTopic && this.state.sharer ?\n              <>\n                <div className=\"hr\" />\n                <div className=\"panel-form-column\">\n                  <div className=\"panel-form-row\">\n                    <label className=\"small\">\n                      <FormattedMessage id=\"label_group_members\" defaultMessage=\"Group members:\"\n                        description=\"Section title or label\" />\n                    </label>\n                  </div>\n                  <div className=\"panel-form-row\">\n                    <a href=\"#\" className=\"flat-button\" onClick={this.handleShowAddMembers}>\n                      <i className=\"material-icons\">person_add</i> &nbsp;<FormattedMessage id=\"button_add_members\"\n                        defaultMessage=\"Add members\" description=\"Flat button [Add members] (to topic)\" />\n                    </a>\n                  </div>\n                  <FormattedMessage id=\"group_has_no_members\" defaultMessage=\"No members\"\n                    description=\"Shown in place of group members\">{\n                    (no_members) => <ContactList\n                      contacts={this.state.contactList}\n                      myUserId={this.props.myUserId}\n                      emptyListMessage={no_members}\n                      topicSelected={this.state.selectedContact}\n                      showOnline={false}\n                      showUnread={false}\n                      showMode={true}\n                      noScroll={true}\n                      onTopicSelected={this.handleMemberSelected}\n                      showContextMenu={this.state.admin ? this.handleContextMenu : false}\n                    />\n                  }</FormattedMessage>\n                </div>\n              </>\n              :\n              null\n            }\n          </div>\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(InfoView);\n","// File uload/download progress indicator with a cancel inside.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class FileProgress extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"uploader\">\n        <div><span style={{width: (this.props.progress * 100) + \"%\"}}></span></div>\n        {this.props.progress < 0.999 ?\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n            <i className=\"material-icons\">close</i> <FormattedMessage id=\"action_cancel\"\n              defaultMessage=\"cancel\" description=\"Call to action [cancel]\" />\n          </a>\n          :\n          <FormattedMessage id=\"upload_finishing\" defaultMessage=\"finishing...\"\n            description=\"Notification that upload is finishing\" />\n        }\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\nimport { bytesToHumanSize } from '../lib/strformat.js';\nimport { isUrlRelative, sanitizeUrl } from '../lib/utils.js';\n\nexport default class Attachment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      downloader: null,\n      progress: 0\n    };\n\n    this.downloadFile = this.downloadFile.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  downloadFile(url, filename, mimetype) {\n    if (!url) {\n      this.props.onError(\"Invalid download URL '\" + url + \"'\");\n      return;\n    }\n\n    const downloader = this.props.tinode.getLargeFileHelper();\n    this.setState({downloader: downloader});\n    downloader.download(url, filename, mimetype,\n      (loaded) => {\n        this.setState({progress: loaded / this.props.size});\n      },\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    ).then(() => {\n      this.setState({downloader: null, progress: 0});\n    }).catch((err) => {\n      if (err) {\n        this.props.onError(\"Error downloading file: \" + err.message, 'err');\n      }\n      this.setState({downloader: null, progress: 0});\n    });\n  }\n\n  handleCancel() {\n    if (this.props.uploading) {\n      this.props.onCancelUpload();\n    } else if (this.state.downloader) {\n      this.state.downloader.cancel();\n    }\n  }\n\n  render() {\n    let filename = this.props.filename || 'file_attachment';\n    if (filename.length > 36) {\n      filename = filename.substr(0, 16) + '...' + filename.substr(-16);\n    }\n    let size = this.props.size > 0 ?\n      <span className=\"small gray\">({bytesToHumanSize(this.props.size)})</span> :\n      null;\n\n    // Detect if the download URL is relative or absolute.\n    // If the URL is relative use LargeFileHelper to attach authentication\n    // credentials to the request.\n    let url, helperFunc;\n    if (!this.props.uploading && !this.state.downloader && isUrlRelative(this.props.downloadUrl)) {\n      // Relative URL. Use download helper.\n      url = '#';\n      helperFunc = (e) => {\n        e.preventDefault();\n        this.downloadFile(this.props.downloadUrl, this.props.filename, this.props.mimetype);\n      };\n    } else {\n      url = sanitizeUrl(this.props.downloadUrl);\n      helperFunc = null;\n    }\n    const downloadWidget = <><i className=\"material-icons\">file_download</i> <FormattedMessage id=\"save_attachment\"\n      defaultMessage=\"save\" description=\"Call to save an attachment\" /></>;\n    return (\n      <div className=\"attachment\">\n        <div><i className=\"material-icons big gray\">insert_drive_file</i></div>\n        <div className=\"flex-column\">\n          <div>{filename} {size}</div>\n          {this.props.uploading || this.state.downloader ?\n            <FileProgress progress={this.props.uploading ? this.props.progress : this.state.progress}\n              onCancel={this.handleCancel} />\n            :\n            <div>{url ?\n              <a href={url} download={this.props.filename} onClick={helperFunc}>{downloadWidget}</a>\n              :\n              <span className=\"light-gray\">{downloadWidget}</span>\n            }</div>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n","// Image view with progress bar and a cancel button.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\n\nexport default class UploadingImage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"inline-image\">\n        {React.createElement('img', this.props)}\n        <div className=\"rounded-container\">\n          <FileProgress progress={this.props.progress} onCancel={this.props.onCancelUpload} />\n        </div>\n      </div>\n    );\n  }\n};\n","// Single message, sent or received.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport Attachment from './attachment.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\nimport UploadingImage from './uploading-image.jsx'\nimport { sanitizeImageUrl, sanitizeUrl } from '../lib/utils.js';\n\nexport default class ChatMessage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      progress: 0\n    };\n\n    if (props.uploader) {\n      props.uploader.onProgress = this.handleProgress.bind(this);\n    }\n\n    this.handleImagePreview = this.handleImagePreview.bind(this);\n    this.handleFormButtonClick = this.handleFormButtonClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n  }\n\n  handleImagePreview(e) {\n    e.preventDefault();\n    this.props.onImagePreview({\n      url: e.target.src,\n      filename: e.target.title,\n      width: e.target.dataset.width,\n      height: e.target.dataset.height,\n      size: e.target.dataset.size,\n      type: e.target.dataset.mime\n    });\n  }\n\n  handleFormButtonClick(e) {\n    e.preventDefault();\n    const data = {\n      seq: this.props.seq\n    };\n    data.resp = {};\n    if (e.target.dataset.name) {\n      data.resp[e.target.dataset.name] = e.target.dataset.val ? e.target.dataset.val :\n        e.target.dataset.val === undefined ? 1 : '' + e.target.dataset.val;\n    }\n    if (e.target.dataset.act == 'url') {\n      data.ref = sanitizeUrl(e.target.dataset.ref) || 'about:blank';\n    }\n    const text = e.target.dataset.title || 'unknown';\n    this.props.onFormResponse(e.target.dataset.act, text, data);\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const menuItems = this.props.received == Tinode.MESSAGE_STATUS_FAILED ? ['menu_item_send_retry'] : [];\n    this.props.showContextMenu({ seq: this.props.seq, content: this.props.content,\n                                 y: e.pageY, x: e.pageX }, menuItems);\n  }\n\n  handleProgress(ratio) {\n    this.setState({progress: ratio});\n  }\n\n  handleCancelUpload() {\n    this.props.onCancelUpload(this.props.seq, this.props.uploader);\n  }\n\n  render() {\n    const sideClass = this.props.deleted ? 'center' :\n      (this.props.sequence + ' ' + (this.props.response ? 'left' : 'right'));\n    const bubbleClass = (this.props.sequence == 'single' || this.props.sequence == 'last') ? 'bubble tip' : 'bubble';\n    const avatar = this.props.deleted ? null : (this.props.userAvatar || true);\n    const fullDisplay = (this.props.userFrom && this.props.response && !this.props.deleted &&\n      (this.props.sequence == 'single' || this.props.sequence == 'last'));\n\n    let content = this.props.content;\n    const attachments = [];\n    if (this.props.mimeType == Drafty.getContentType() && Drafty.isValid(content)) {\n      Drafty.attachments(content, function(att, i) {\n        if (att.mime == 'application/json') {\n          // Don't show json objects as attachments.\n          // They are not meant for users.\n          return;\n        }\n        attachments.push(<Attachment\n          tinode={this.props.tinode}\n          downloadUrl={Drafty.getDownloadUrl(att)}\n          filename={att.name} uploading={Drafty.isProcessing(att)}\n          mimetype={att.mime} size={Drafty.getEntitySize(att)}\n          progress={this.state.progress}\n          onCancelUpload={this.handleCancelUpload}\n          onError={this.props.onError}\n          key={i} />);\n      }, this);\n      content = React.createElement(React.Fragment, null, Drafty.format(content, draftyFormatter, this));\n    } else if (this.props.deleted) {\n      // Message represents a range of deleted messages.\n      content = <><i className=\"material-icons gray\">block</i> <i className=\"gray\">\n        <FormattedMessage id=\"deleted_content\"\n          defaultMessage=\"content deleted\" description=\"Shown when messages are deleted\" />\n      </i></>\n    } else if (typeof content != 'string') {\n      content = <>\n          <i className=\"material-icons gray\">error_outline</i> <i className=\"gray\">\n            <FormattedMessage id=\"invalid_content\"\n              defaultMessage=\"invalid content\" description=\"Shown when message is unreadable\" /></i>\n        </>\n    }\n\n    return (\n      <li className={sideClass}>\n        {this.props.userFrom && this.props.response ?\n          <div className=\"avatar-box\">\n            {fullDisplay ?\n              <LetterTile\n                topic={this.props.userFrom}\n                title={this.props.userName}\n                avatar={avatar} /> :\n              null}\n          </div> :\n          null}\n        <div>\n          <div className={bubbleClass}>\n            <div className=\"message-content\">\n              {content}\n              {attachments}\n              {this.props.timestamp ?\n                <ReceivedMarker\n                  timestamp={this.props.timestamp}\n                  received={this.props.received} />\n                : null}\n            </div>\n            {this.props.deleted || !this.props.showContextMenu ?\n              null :\n              <span className=\"menuTrigger\">\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">expand_more</i>\n                </a>\n              </span>\n            }\n          </div>\n          {fullDisplay ?\n            <div className=\"author\">\n              <FormattedMessage id=\"user_not_found\" defaultMessage=\"Not found\"\n                description=\"In place of a user's full name when the user is not found.\">{\n                    (notFound) => {return this.props.userName || <i>{notFound}</i>}\n              }</FormattedMessage>\n            </div>\n            : null\n          }\n        </div>\n      </li>\n    );\n  }\n};\n\n// Convert Drafty object to a tree of React elements.\nimport { BROKEN_IMAGE_SIZE, REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\n\n// Converts Drafty elements into React classes.\n// 'this' is set by the caller.\nfunction draftyFormatter(style, data, values, key) {\n  if (style == 'EX') {\n    // attachments are handled elsewhere.\n    return null;\n  }\n\n  let el = Drafty.tagName(style);\n  if (el) {\n    const attr = Drafty.attrValue(style, data) || {};\n    attr.key = key;\n    switch (style) {\n      case 'HL':\n        // Highlighted text. Assign class name.\n        attr.className = 'highlight';\n        break;\n      case 'IM':\n        // Additional processing for images\n        if (data) {\n          attr.className = 'inline-image';\n          const dim = fitImageSize(data.width, data.height,\n            Math.min(this.props.viewportWidth - REM_SIZE * 4, REM_SIZE * 36), REM_SIZE * 24, false) ||\n            {dstWidth: BROKEN_IMAGE_SIZE, dstHeight: BROKEN_IMAGE_SIZE};\n          attr.style = { width: dim.dstWidth + 'px', height: dim.dstHeight + 'px' };\n          if (!Drafty.isProcessing(data)) {\n            attr.src = this.props.tinode.authorizeURL(sanitizeImageUrl(attr.src));\n            attr.alt = data.name;\n            if (attr.src) {\n              attr.onClick = this.handleImagePreview;\n              attr.className += ' image-clickable';\n            } else {\n              attr.src = 'img/broken_image.png';\n            }\n          } else {\n            // Use custom element instead of <img>.\n            el = UploadingImage;\n          }\n        }\n        break;\n      case 'BN':\n        // Button\n        attr.onClick = this.handleFormButtonClick;\n        let inner = React.Children.map(values, (child) => {\n          return typeof child == 'string' ? child : undefined;\n        });\n        if (!inner || inner.length == 0) {\n          inner = [attr.name]\n        }\n        // Get text which will be sent back when the button is clicked.\n        attr['data-title'] = inner.join('');\n        break;\n      case 'FM':\n        // Form\n        attr.className = 'bot-form';\n        break;\n      case 'RW':\n        // Form element formatting is dependent on element content.\n        break;\n      default:\n        if (el == '_UNKN') {\n          // Unknown element.\n          // TODO: make it prettier.\n          el = <><span className=\"material-icons\">extension</span></>;\n        }\n        break;\n    }\n    return React.createElement(el, attr, values);\n  } else {\n    return values;\n  }\n};\n","// Send message form.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport { KEYPRESS_DELAY } from '../config.js';\nimport { filePasted } from '../lib/blob-helpers.js';\n\nconst messages = defineMessages({\n  messaging_disabled: {\n    id: 'messaging_disabled_prompt',\n    defaultMessage: 'Messaging disabled',\n    description: 'Prompt in SendMessage in read-only topic'\n  },\n  type_new_message: {\n    id: 'new_message_prompt',\n    defaultMessage: 'New message',\n    description: 'Prompt in send message field'\n  },\n  add_image_caption: {\n    id: 'image_caption_prompt',\n    defaultMessage: 'Image caption',\n    description: 'Prompt in SendMessage for attached image'\n  },\n  file_attachment_too_large: {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  },\n  cannot_initiate_upload: {\n    id: 'cannot_initiate_file_upload',\n    defaultMessage: 'Cannot initiate file upload.',\n    description: 'Generic error messagewhen attachment fails'\n  },\n});\n\nclass SendMessage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      message: '',\n      // Make initial keypress time as if it happened 5001 milliseconds in the past.\n      keypressTimestamp: new Date().getTime() - KEYPRESS_DELAY - 1\n    };\n\n    this.handlePasteEvent = this.handlePasteEvent.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleSend = this.handleSend.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleMessageTyping = this.handleMessageTyping.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.addEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.removeEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.messageEditArea) {\n      this.messageEditArea.focus();\n    }\n  }\n\n  handlePasteEvent(e) {\n    if (this.props.disabled) {\n      return;\n    }\n    // FIXME: handle large files too.\n    if (filePasted(e,\n      (bits, mime, width, height, fname) => {\n        this.props.onAttachImage(mime, bits, width, height, fname);\n      },\n      (mime, bits, fname) => {\n        this.props.onAttachFile(mime, bits, fname);\n      },\n      this.props.onError)) {\n\n      // If a file was pasted, don't paste base64 data into input field.\n      e.preventDefault();\n    }\n  }\n\n  handleAttachImage(e) {\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachImage(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleAttachFile(e) {\n    const {formatMessage} = this.props.intl;\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachFile(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleSend(e) {\n    e.preventDefault();\n    const message = this.state.message.trim();\n    if (message || this.props.acceptBlank || this.props.noInput) {\n      this.props.onSendMessage(message);\n      this.setState({message: ''});\n    }\n  }\n\n  /* Send on Enter key */\n  handleKeyPress(e) {\n    // Remove this if you don't want Enter to trigger send\n    if (e.key === 'Enter') {\n      // Have Shift-Enter insert a line break instead\n      if (!e.shiftKey) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.handleSend(e);\n      }\n    }\n  }\n\n  handleMessageTyping(e) {\n    const newState = {message: e.target.value};\n    if (this.props.onKeyPress) {\n      const now = new Date().getTime();\n      if (now - this.state.keypressTimestamp > KEYPRESS_DELAY) {\n        this.props.onKeyPress();\n        newState.keypressTimestamp = now;\n      }\n    }\n    this.setState(newState);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const prompt = this.props.disabled ?\n      formatMessage(messages.messaging_disabled) :\n      (this.props.messagePrompt ?\n        formatMessage(messages[this.props.messagePrompt]) :\n        formatMessage(messages.type_new_message));\n    return (\n      <div id=\"send-message-panel\">\n        {!this.props.disabled ?\n          <>\n            {this.props.onAttachFile ?\n              <>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachImage.click();}} title=\"Add image\">\n                  <i className=\"material-icons secondary\">photo</i>\n                </a>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachFile.click();}} title=\"Attach file\">\n                  <i className=\"material-icons secondary\">attach_file</i>\n                </a>\n              </>\n              :\n              null}\n            {this.props.noInput ?\n              <div className=\"hr thin\" /> :\n              <textarea id=\"sendMessage\" placeholder={prompt}\n                value={this.state.message} onChange={this.handleMessageTyping}\n                onKeyPress={this.handleKeyPress}\n                ref={(ref) => {this.messageEditArea = ref;}}\n                autoFocus />}\n            <a href=\"#\" onClick={this.handleSend} title=\"Send\">\n              <i className=\"material-icons\">send</i>\n            </a>\n            <input type=\"file\" ref={(ref) => {this.attachFile = ref;}}\n              onChange={this.handleAttachFile} style={{display: 'none'}} />\n            <input type=\"file\" ref={(ref) => {this.attachImage = ref;}} accept=\"image/*\"\n              onChange={this.handleAttachImage} style={{display: 'none'}} />\n          </>\n          :\n          <div id=\"writing-disabled\">{prompt}</div>\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SendMessage);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { bytesToHumanSize } from '../lib/strformat.js';\n\n// Get material icon name from mime type.\nfunction iconFromMime(mime) {\n  // If more icons become available in material icons, add them to this mime-to-icon mapping.\n  const mimeToIcon = {default: 'insert_drive_file', image: 'image', text: 'description', video: 'theaters'};\n\n  return mimeToIcon[mime] || mimeToIcon[(mime || '').split('/')[0]] || mimeToIcon['default'];\n}\n\nexport default class DocPreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleSendDoc = this.handleSendDoc.bind(this);\n  }\n\n  handleSendDoc(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(this.props.content.file);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          <span>{this.props.content.filename}</span>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\">\n          <div className=\"flex-column narrow\">\n            <i className=\"material-icons gray\">{iconFromMime(this.props.content.type)}</i>\n            <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n              description=\"Label for file content type (mime)\" /></b> {this.props.content.type || 'application/octet-stream'}</div>\n            <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n              description=\"Label for file size\" /></b> {bytesToHumanSize(this.props.content.size)}</div>\n          </div>\n        </div>\n        <SendMessage\n          noInput={true}\n          onSendMessage={this.handleSendDoc}\n          onError={this.props.onError} />\n      </div>\n    );\n  }\n};\n","// GroupSubs: a list of group subscribers currently online.\n// Show in the topic title bar\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { MAX_ONLINE_IN_TOPIC } from '../config.js'\n\nimport LetterTile from './letter-tile.jsx';\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class GroupSubs extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const usersOnline = [];\n    const totalCount = (this.props.subscribers || []).length;\n    const countToShow = Math.min(MAX_ONLINE_IN_TOPIC, totalCount);\n\n    (this.props.subscribers || []).some((sub) => {\n      usersOnline.push(\n        <div className=\"avatar-box\" key={sub.user}>\n          <LetterTile\n            topic={sub.user}\n            avatar={makeImageUrl(sub.public ? sub.public.photo : null) || true}\n            title={sub.public ? sub.public.fn : null} />\n        </div>\n      );\n      return usersOnline.length == countToShow;\n    });\n\n    return (\n      <div id=\"topic-users\">{usersOnline} {totalCount > countToShow ?\n        <span>\n          <FormattedMessage id=\"more_online_members\" defaultMessage=\"+{overflow} more\"\n              description=\"Shown in MessagesView title bar when the number of online subscribers exceeds MAX_ONLINE_IN_TOPIC\"\n              values={{ overflow: (totalCount - countToShow) }} />\n        </span> : null}\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\nimport { bytesToHumanSize } from '../lib/strformat.js';\n\nexport default class ImagePreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      width: 0,\n      height: 0\n    };\n\n    this.handleSendImage = this.handleSendImage.bind(this);\n  }\n\n  assignWidth(node) {\n    if (node && !this.state.width) {\n      const bounds = node.getBoundingClientRect();\n      this.setState({\n        width: bounds.width | 0,\n        height: bounds.height | 0\n      });\n    }\n  }\n\n  handleSendImage(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(caption, this.props.content.blob);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n\n    const dim = fitImageSize(this.props.content.width, this.props.content.height,\n      this.state.width, this.state.height, false);\n    const size = dim ? { width: dim.dstWidth + 'px', height: dim.dstHeight + 'px' } :\n      ((this.props.content.width > this.props.content.height) ? {width: '100%'} : {height: '100%'});\n    size.maxWidth = '100%';\n    size.maxHeight = '100%';\n\n    let filename = this.props.content.filename;\n    // Average font aspect ratio is ~0.5; File name takes 1/3 of the viewport width.\n    const maxlength = Math.max(((this.state.width / REM_SIZE / 1.5) | 0) - 2, 12);\n    if (filename.length > maxlength) {\n      filename = filename.slice(0, maxlength/2 - 1) + '…' + filename.slice(1 - maxlength/2);\n    }\n    const width = this.props.content.width || '-';\n    const height = this.props.content.height || '-';\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          {!this.props.onSendMessage ?\n            <a href={this.props.content.url} download={this.props.content.filename}>\n              <i className=\"material-icons\">file_download</i> <FormattedMessage\n                id=\"download_action\" defaultMessage=\"download\" description=\"Call to action [download]\" />\n            </a>\n            :\n            <span>{this.props.content.filename}</span>\n          }\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\" ref={(node) => this.assignWidth(node)}>\n          <img src={this.props.content.url} style={size} className=\"image-preview\" alt={this.props.content.filename} />\n        </div>\n        {this.props.onSendMessage ?\n          <SendMessage\n            messagePrompt=\"add_image_caption\"\n            acceptBlank={true}\n            onSendMessage={this.handleSendImage}\n            onError={this.props.onError} />\n          :\n          <div id=\"image-preview-footer\">\n            <div>\n              <div><b><FormattedMessage id=\"label_file_name\" defaultMessage=\"File name:\"\n                description=\"Label for a file name\" /></b></div>\n              <div><span title={this.props.content.filename}>{filename ? filename : '-'}</span></div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n                description=\"Label for file content type (mime)\" /></b></div>\n              <div>{this.props.content.type}</div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n                description=\"Label for file size\" /></b></div>\n              <div>{width} &times; {height} px; {bytesToHumanSize(this.props.content.size)}</div>\n            </div>\n          </div>}\n      </div>\n    );\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Invitation extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleButtonAction = this.handleButtonAction.bind(this);\n  }\n\n  handleButtonAction(evt, data) {\n    evt.preventDefault();\n    this.props.onAction(data);\n  }\n\n  render() {\n    return (\n      <div className=\"accept-invite-panel\">\n        <div className=\"title\">\n          <FormattedMessage id=\"chat_invitation\"\n            defaultMessage=\"You are invited to start a new chat. What would you like to do?\"\n            description=\"New chat invitation message: [Accept] [Ignore] [Block].\" />\n        </div>\n        <div className=\"footer\">\n          <button className=\"primary\" onClick={event => { this.handleButtonAction(event, \"accept\"); }}>\n            <FormattedMessage id=\"chat_invitation_accept\"\n              defaultMessage=\"Accept\" description=\"Action [Accept] for chat invitation.\" />\n          </button>\n          <button className=\"secondary\" onClick={event => { this.handleButtonAction(event, \"delete\"); }}>\n            <FormattedMessage id=\"chat_invitation_ignore\"\n              defaultMessage=\"Ignore\" description=\"Action [Ignore] for chat invitation.\" />\n          </button>\n          <button className=\"secondary\" onClick={event => { this.handleButtonAction(event, \"block\"); }}>\n            <FormattedMessage id=\"chat_invitation_block\"\n              defaultMessage=\"Block\" description=\"Action [Block] for chat invitation.\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nexport default class LoadSpinner extends React.PureComponent {\n  render() {\n    return (this.props.show ?\n      <div className=\"load-spinner-box\"><div className=\"loader-spinner\"></div></div> : null);\n  }\n}\n","/* This is just a static page to display when no conversation is selected. */\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME } from '../config.js';\n\nexport default class LogoView extends React.PureComponent {\n  render() {\n    const version = APP_NAME + ' (' + Tinode.getLibrary() + ')';\n    return (\n      <div id=\"dummy-view\">\n        <div>\n          <a href=\"https://github.com/tinode/chat/\">\n            <img id=\"logo\" alt=\"logo\" src=\"img/logo.svg\" />\n            <h2>Tinode Web</h2>\n          </a>\n          <p><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\" \n            description=\"Label for a client version\" /> {version}</p>\n          <p><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\"\n            description=\"Label for a server version\" /> {this.props.serverVersion} ({this.props.serverAddress})</p>\n        </div>\n      </div>\n    );\n  }\n};\n","// Utility class for hash navigation.\n\n// Parse hash as in http://www.example.com/path#hash as if it were\n// path and arguments.\nexport default class HashNavigation {\n  static parseUrlHash(hash) {\n    // Split path from args, path -> parts[0], args->path[1]\n    const parts = hash.split('?', 2);\n    const params = {};\n    let path = [];\n    if (parts[0]) {\n      path = parts[0].substr(1).split('/');\n    }\n    if (parts[1]) {\n      parts[1].split('&').forEach(function(part) {\n        let item = part.split('=');\n        if (item[0]) {\n          params[decodeURIComponent(item[0])] = decodeURIComponent(item[1]);\n        }\n      });\n    }\n    return {path: path, params: params};\n  }\n\n  static navigateTo(url) {\n    window.location.hash = url;\n  }\n\n  static composeUrlHash(path, params) {\n    let url = path.join('/');\n    const args = [];\n    for (const key in params) {\n      if (params.hasOwnProperty(key)) {\n        args.push(key + '=' + params[key]);\n      }\n    }\n    if (args.length > 0) {\n      url += '?' + args.join('&');\n    }\n    return url;\n  }\n\n  static addUrlParam(hash, key, value) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.params[key] = value;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static removeUrlParam(hash, key) {\n    const parsed = this.parseUrlHash(hash);\n    delete parsed.params[key];\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlSidePanel(hash, sidepanel) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[0] = sidepanel;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlTopic(hash, topic) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[1] = topic;\n    // Close InfoView on topic change.\n    delete parsed.params.info;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n}\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\nconst Drafty = Tinode.Drafty;\n\nimport ChatMessage from '../widgets/chat-message.jsx';\nimport DocPreview from '../widgets/doc-preview.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupSubs from '../widgets/group-subs.jsx';\nimport ImagePreview from '../widgets/image-preview.jsx';\nimport Invitation from '../widgets/invitation.jsx';\nimport LetterTile from '../widgets/letter-tile.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport LogoView from './logo-view.jsx';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { DEFAULT_P2P_ACCESS_MODE, IMAGE_PREVIEW_DIM, KEYPRESS_DELAY, MESSAGES_PAGE,\n  MAX_EXTERN_ATTACHMENT_SIZE, MAX_IMAGE_DIM, MAX_INBAND_ATTACHMENT_SIZE, READ_DELAY } from '../config.js';\nimport { SUPPORTED_IMAGE_FORMATS, blobToBase64, filePasted, fileToBase64,\n  imageScaled, makeImageUrl } from '../lib/blob-helpers.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { bytesToHumanSize, shortDateFormat } from '../lib/strformat.js';\n\n// Run timer with this frequency (ms) for checking notification queue.\nconst NOTIFICATION_EXEC_INTERVAL = 300;\n\nconst messages = defineMessages({\n  online_now: {\n    id: 'online_now',\n    defaultMessage: 'online now',\n    description: 'Indicator that the user or topic is currently online',\n  },\n  last_seen: {\n    id: 'last_seen_timestamp',\n    defaultMessage: 'Last seen',\n    description: 'Label for the timestamp of when the user or topic was last online'\n  },\n  not_found: {\n    id: 'title_not_found',\n    defaultMessage: 'Not found',\n    description: 'Title shown when topic is not found'\n  },\n  channel: {\n    id: 'channel',\n    defaultMessage: 'channel',\n    description: 'Subtitle shown for channels in MessagesView instead of last seen'\n  },\n  file_attachment_too_large: {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  }\n});\n\n// Checks if the access permissions are granted but not yet accepted.\nfunction isUnconfirmed(acs) {\n  if (acs) {\n    const ex = acs.getExcessive() || '';\n    return acs.isJoiner('given') && (ex.includes('R') || ex.includes('W'));\n  }\n  return false;\n}\n\nfunction isPeerRestricted(acs) {\n  if (acs) {\n    const ms = acs.getMissing() || '';\n    return acs.isJoiner('want') && (ms.includes('R') || ms.includes('W'));\n  }\n  return false;\n}\n\nclass MessagesView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = MessagesView.getDerivedStateFromProps(props, {});\n\n    this.leave = this.leave.bind(this);\n    this.sendImageAttachment = this.sendImageAttachment.bind(this);\n    this.sendFileAttachment = this.sendFileAttachment.bind(this);\n    this.sendKeyPress = this.sendKeyPress.bind(this);\n    this.handleScrollReference = this.handleScrollReference.bind(this);\n    this.handleScrollEvent = this.handleScrollEvent.bind(this);\n    this.handleDescChange = this.handleDescChange.bind(this);\n    this.handleSubsUpdated = this.handleSubsUpdated.bind(this);\n    this.handleNewMessage = this.handleNewMessage.bind(this);\n    this.handleAllMessagesReceived = this.handleAllMessagesReceived.bind(this);\n    this.handleInfoReceipt = this.handleInfoReceipt.bind(this);\n    this.handleImagePostview = this.handleImagePostview.bind(this);\n    this.handleClosePreview = this.handleClosePreview.bind(this);\n    this.handleFormResponse = this.handleFormResponse.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleShowContextMenuMessage = this.handleShowContextMenuMessage.bind(this);\n    this.handleNewChatAcceptance = this.handleNewChatAcceptance.bind(this);\n    this.handleEnablePeer = this.handleEnablePeer.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n    this.postReadNotification = this.postReadNotification.bind(this);\n    this.clearNotificationQueue = this.clearNotificationQueue.bind(this);\n\n    this.readNotificationQueue = [];\n    this.readNotificationTimer = null;\n  }\n\n  componentDidMount() {\n    // this.propsChange(this.props, this.state);\n    if (this.messagesScroller) {\n      this.messagesScroller.addEventListener('scroll', this.handleScrollEvent);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messagesScroller) {\n      this.messagesScroller.removeEventListener('scroll', this.handleScrollEvent);\n    }\n\n    // Flush all notifications.\n    this.clearNotificationQueue();\n  }\n\n  // Scroll last message into view on component update e.g. on message received\n  // or vertical shrinking.\n  componentDidUpdate(prevProps, prevState) {\n    if (this.messagesScroller) {\n      if (prevState.topic != this.state.topic || prevState.messages.length != this.state.messages.length) {\n        // New message\n        this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n      } else if (prevProps.viewportHeight > this.props.viewportHeight) {\n        // Componet changed height.\n        this.messagesScroller.scrollTop += prevProps.viewportHeight - this.props.viewportHeight;\n      }\n    }\n\n    const topic = this.props.tinode ? this.props.tinode.getTopic(this.state.topic) : undefined;\n    if (this.state.topic != prevState.topic) {\n      if (prevState.topic && !Tinode.isNewGroupTopicName(prevState.topic)) {\n        this.leave(prevState.topic);\n      }\n\n      if (topic) {\n        topic.onData = this.handleNewMessage;\n        topic.onAllMessagesReceived = this.handleAllMessagesReceived;\n        topic.onInfo = this.handleInfoReceipt;\n        topic.onMetaDesc = this.handleDescChange;\n        topic.onSubsUpdated = this.handleSubsUpdated;\n        topic.onPres = this.handleSubsUpdated;\n      }\n    }\n\n    if (!this.props.applicationVisible) {\n      // If application is not visible, flush all unsent 'read' notifications.\n      this.clearNotificationQueue();\n    } else {\n      // Otherwise assume there are unread messages.\n      this.postReadNotification(0);\n    }\n\n    if (topic && !topic.isSubscribed() && this.props.ready &&\n        ((this.state.topic != prevState.topic) || !prevProps.ready)) {\n      // Is this a new topic?\n      const newTopic = (this.props.newTopicParams && this.props.newTopicParams._topicName == this.props.topic);\n\n      // Don't request the tags. They are useless unless the user\n      // is the owner and is editing the topic.\n      let getQuery = topic.startMetaQuery().withLaterDesc().withLaterSub();\n      if (this.state.isReader || newTopic) {\n        // Reading is either permitted or we don't know because it's a new topic. Ask for messages.\n        getQuery = getQuery.withLaterData(MESSAGES_PAGE);\n        if (this.state.isReader) {\n          getQuery = getQuery.withLaterDel();\n        }\n        // And show \"loading\" spinner.\n        this.setState({ fetchingMessages: true });\n      }\n      const setQuery = newTopic ? this.props.newTopicParams : undefined;\n      topic.subscribe(getQuery.build(), setQuery)\n        .then((ctrl) => {\n          if (ctrl.code == 303) {\n            // Redirect to another topic requested.\n            HashNavigation.navigateTo(HashNavigation.setUrlTopic('', ctrl.params.topic));\n            return;\n          }\n          if (this.state.topic != ctrl.topic) {\n            this.setState({topic: ctrl.topic});\n          }\n          this.props.onNewTopicCreated(this.props.topic, ctrl.topic);\n          // If there are unsent messages, try sending them now.\n          topic.queuedMessages((pub) => {\n            if (!pub._sending && topic.isSubscribed()) {\n              topic.publishMessage(pub);\n            }\n          });\n        })\n        .catch((err) => {\n          console.log(\"Failed subscription to\", this.state.topic);\n          this.props.onError(err.message, 'err');\n          const blankState = MessagesView.getDerivedStateFromProps({}, {});\n          blankState.title = this.props.intl.formatMessage(messages.not_found);\n          this.setState(blankState);\n        });\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let nextState = {};\n    if (!nextProps.topic) {\n      // Default state: no topic.\n      nextState = {\n        messages: [],\n        onlineSubs: [],\n        topic: null,\n        title: '',\n        avatar: null,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false,\n        peerMessagingDisabled: false,\n        channel: false\n      };\n    } else if (nextProps.topic != prevState.topic) {\n      const topic = nextProps.tinode.getTopic(nextProps.topic);\n      nextState = {\n        topic: nextProps.topic,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false\n      };\n\n      if (topic) {\n        // Topic exists.\n        const msgs = [];\n        const subs = [];\n\n        if (nextProps.connected) {\n          topic.subscribers((sub) => {\n            if (sub.online && sub.user != nextProps.myUserId) {\n              subs.push(sub);\n            }\n          });\n        }\n\n        topic.messages(function(msg) {\n          if (!msg.deleted) {\n            msgs.push(msg);\n          }\n        });\n\n        Object.assign(nextState, {\n          messages: msgs,\n          onlineSubs: subs\n        });\n\n        if (topic.public) {\n          Object.assign(nextState, {\n            title: topic.public.fn,\n            avatar: makeImageUrl(topic.public.photo)\n          });\n        } else {\n          Object.assign(nextState, {\n            title: '',\n            avatar: null\n          });\n        }\n\n        const peer = topic.p2pPeerDesc();\n        if (peer) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: isPeerRestricted(peer.acs)\n          });\n        } else if (prevState.peerMessagingDisabled) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: false\n          });\n        }\n        Object.assign(nextState, {\n          channel: topic.isChannelType()\n        });\n      } else {\n        // Invalid topic.\n        Object.assign(nextState, {\n          messages: [],\n          onlineSubs: [],\n          title: '',\n          avatar: null,\n          peerMessagingDisabled: false,\n          channel: false\n        });\n      }\n    }\n\n    if (nextProps.acs) {\n      if (nextProps.acs.isWriter() != prevState.isWriter) {\n        nextState.isWriter = !prevState.isWriter;\n      }\n      if (nextProps.acs.isReader() != prevState.isReader) {\n        nextState.isReader = !prevState.isReader;\n      }\n      if (!nextProps.acs.isReader('given') != prevState.readingBlocked) {\n        nextState.readingBlocked = !prevState.readingBlocked;\n      }\n      if (nextProps.acs.isSharer() != prevState.isSharer) {\n        nextState.isSharer = !prevState.isSharer;\n      }\n    } else {\n      if (prevState.isWriter) {\n        nextState.isWriter = false;\n      }\n      if (prevState.isReader) {\n        nextState.isReader = false;\n      }\n      if (!prevState.readingBlocked) {\n        prevState.readingBlocked = true;\n      }\n      if (prevState.isSharer) {\n        nextState.isSharer = false;\n      }\n    }\n\n    if (isUnconfirmed(nextProps.acs) == !prevState.unconformed) {\n      nextState.unconfirmed = !prevState.unconformed;\n    }\n\n    // Clear subscribers online when there is no connection.\n    if (!nextProps.connected && prevState.onlineSubs && prevState.onlineSubs.length > 0) {\n      nextState.onlineSubs = [];\n    }\n\n    return nextState;\n  }\n\n  leave(oldTopicName) {\n    if (!oldTopicName) {\n      return;\n    }\n    let oldTopic = this.props.tinode.getTopic(oldTopicName);\n    if (oldTopic && oldTopic.isSubscribed()) {\n      oldTopic.leave(false)\n        .catch(() => { /* do nothing here */ })\n        .finally(() => {\n          // We don't care if the request succeeded or failed.\n          // The topic is dead regardless.\n          this.setState({fetchingMessages: false});\n          oldTopic.onData = undefined;\n          oldTopic.onAllMessagesReceived = undefined;\n          oldTopic.onInfo = undefined;\n          oldTopic.onMetaDesc = undefined;\n          oldTopic.onSubsUpdated = undefined;\n          oldTopic.onPres = undefined;\n        });\n    }\n  }\n\n  handleScrollReference(node) {\n    if (node) {\n      node.addEventListener('scroll', this.handleScrollEvent);\n      this.messagesScroller = node;\n      this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n    }\n  }\n\n  // Get older messages\n  handleScrollEvent(event) {\n    this.setState({scrollPosition: event.target.scrollHeight - event.target.scrollTop});\n    if (event.target.scrollTop <= 0) {\n      this.setState((prevState, props) => {\n        const newState = {};\n        if (!prevState.fetchingMessages) {\n          const topic = this.props.tinode.getTopic(this.state.topic);\n          if (topic && topic.isSubscribed() && topic.msgHasMoreMessages()) {\n            newState.fetchingMessages = true;\n            topic.getMessagesPage(MESSAGES_PAGE).catch((err) => {\n              this.setState({fetchingMessages: false});\n              this.props.onError(err.message, 'err');\n            });\n          }\n        }\n        return newState;\n      });\n    }\n  }\n\n  handleDescChange(desc) {\n    if (desc.public) {\n      this.setState({\n        title: desc.public.fn,\n        avatar: makeImageUrl(desc.public.photo)\n      });\n    } else {\n      this.setState({\n        title: '',\n        avatar: null\n      });\n    }\n\n    if (desc.acs) {\n      this.setState({\n        isWriter: desc.acs.isWriter(),\n        isReader: desc.acs.isReader(),\n        readingBlocked: !desc.acs.isReader('given'),\n        unconfirmed: isUnconfirmed(desc.acs),\n      });\n    }\n  }\n\n  postReadNotification(seq) {\n    // Ignore notifications if the app is invisible.\n    if (!this.props.applicationVisible) {\n      return;\n    }\n\n    // Set up the timer if it's not running already.\n    if (!this.readNotificationTimer) {\n      this.readNotificationTimer = setInterval(() => {\n        if (this.readNotificationQueue.length == 0) {\n          // Shut down the timer if the queue is empty.\n          clearInterval(this.readNotificationTimer);\n          this.readNotificationTimer = null;\n          return;\n        }\n\n        let seq = -1;\n        while (this.readNotificationQueue.length > 0) {\n          const n = this.readNotificationQueue[0];\n          if (n.topicName != this.state.topic) {\n            // Topic has changed. Drop the notification.\n            this.readNotificationQueue.shift();\n            continue;\n          }\n\n          const now = new Date();\n          if (n.sendAt <= now) {\n            // Remove expired notification from queue.\n            this.readNotificationQueue.shift();\n            seq = Math.max(seq, n.seq);\n          } else {\n            break;\n          }\n        }\n\n        // Send only one notification for the whole batch of messages.\n        if (seq >= 0) {\n          const topic = this.props.tinode.getTopic(this.state.topic);\n          if (topic) {\n            topic.noteRead(seq);\n          }\n        }\n      }, NOTIFICATION_EXEC_INTERVAL);\n    }\n\n    const now = new Date();\n    this.readNotificationQueue.push({\n      topicName: this.state.topic,\n      seq: seq,\n      sendAt: now.setMilliseconds(now.getMilliseconds() + READ_DELAY)\n    });\n  }\n\n  // Clear notification queue and timer.\n  clearNotificationQueue() {\n    this.readNotificationQueue = [];\n    if (this.readNotificationTimer) {\n      clearInterval(this.readNotificationTimer);\n      this.readNotificationTimer = null;\n    }\n  }\n\n  handleSubsUpdated() {\n    if (this.state.topic) {\n      const subs = [];\n      const topic = this.props.tinode.getTopic(this.state.topic);\n      topic.subscribers((sub) => {\n        if (sub.online && sub.user != this.props.myUserId) {\n          subs.push(sub);\n        }\n      });\n      const newState = {onlineSubs: subs};\n      const peer = topic.p2pPeerDesc();\n      if (peer) {\n        Object.assign(newState, {\n          peerMessagingDisabled: isPeerRestricted(peer.acs)\n        });\n      } else if (this.state.peerMessagingDisabled) {\n        Object.assign(newState, {\n          peerMessagingDisabled: false\n        });\n      }\n      this.setState(newState);\n    }\n  }\n\n  handleNewMessage(msg) {\n    // Regenerate messages list\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    const newState = {messages: []};\n    topic.messages((m) => {\n      if (!m.deleted) {\n        newState.messages.push(m);\n      }\n    });\n\n    // msg could be null if one or more messages were deleted.\n    if (msg && !msg.deleted) {\n      // If the message is added to the end of the message list,\n      // scroll to the bottom.\n      if (topic.isNewMessage(msg.seq)) {\n        newState.scrollPosition = 0;\n      }\n\n      // Aknowledge messages except own messages. They are\n      // automatically assumed to be read and recived.\n      const status = topic.msgStatus(msg, true);\n      if (status >= Tinode.MESSAGE_STATUS_SENT && msg.from != this.props.myUserId) {\n        this.postReadNotification(msg.seq);\n      }\n      this.props.onData(msg);\n    }\n    this.setState(newState);\n  }\n\n  handleAllMessagesReceived(count) {\n    this.setState({fetchingMessages: false});\n    if (count > 0) {\n      // 0 means \"latest\".\n      this.postReadNotification(0);\n    }\n  }\n\n  handleInfoReceipt(info) {\n    switch (info.what) {\n      case 'kp': {\n        clearTimeout(this.keyPressTimer);\n        var instance = this;\n        this.keyPressTimer = setTimeout(function() {\n          instance.setState({typingIndicator: false});\n        }, KEYPRESS_DELAY + 1000);\n        if (!this.state.typingIndicator) {\n          this.setState({typingIndicator: true});\n        }\n        break;\n      }\n      case 'read':\n      case 'recv':\n        // Redraw due to changed recv/read status.\n        this.forceUpdate();\n        break;\n      default:\n        console.log(\"Other change in topic: \", info.what);\n    }\n  }\n\n  handleImagePostview(content) {\n    this.setState({ imagePostview: content });\n  }\n\n  handleClosePreview() {\n    if (this.state.imagePreview && this.state.imagePreview.url) {\n      URL.revokeObjectURL(this.state.imagePreview.url);\n    }\n    this.setState({ imagePostview: null, imagePreview: null, docPreview: null });\n  }\n\n  handleFormResponse(action, text, data) {\n    if (action == 'pub') {\n      this.props.sendMessage(Drafty.attachJSON(Drafty.parse(text), data));\n    } else if (action == 'url') {\n      const url = new URL(data.ref);\n      const params = url.searchParams;\n      for (let key in data.resp) {\n        if (data.resp.hasOwnProperty(key)) {\n          params.set(key, data.resp[key]);\n        }\n      }\n      ['name', 'seq'].map(function(key) {\n        if (data[key]) {\n          params.set(key, data[key]);\n        }\n      });\n      params.set('uid', this.props.myUserId);\n      url.search = params;\n      window.open(url, '_blank');\n    } else {\n      console.log(\"Unknown action in form\", action);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.state.topic, y: e.pageY, x: e.pageX });\n  }\n\n  handleShowContextMenuMessage(params, messageSpecificMenuItems) {\n    params.topicName = this.state.topic;\n    const menuItems = messageSpecificMenuItems || [];\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (topic) {\n      if (!topic.isChannelType()) {\n        menuItems.push('message_delete');\n      }\n      const acs = topic.getAccessMode();\n      if (acs && acs.isDeleter()) {\n        menuItems.push('message_delete_hard');\n      }\n    }\n    this.props.showContextMenu(params, menuItems);\n  }\n\n  handleNewChatAcceptance(action) {\n    this.props.onNewChat(this.state.topic, action);\n  }\n\n  handleEnablePeer(e) {\n    e.preventDefault();\n    this.props.onChangePermissions(this.state.topic, DEFAULT_P2P_ACCESS_MODE, this.state.topic);\n  }\n\n  sendKeyPress() {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (topic.isSubscribed()) {\n      topic.noteKeyPress();\n    }\n  }\n\n  // Send attachment as Drafty message:\n  // - if file is too large, upload it and send a s link.\n  // - if file is small enough, just send it in-band.\n  sendFileAttachment(file) {\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (file.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      if (!uploader) {\n        this.props.onError(this.props.intl.formatMessage(messages.cannot_initiate_upload));\n        return;\n      }\n      const uploadCompletionPromise = uploader.upload(file);\n      const msg = Drafty.attachFile(null, {\n        mime: file.type,\n        filename: file.name,\n        size: file.size,\n        urlPromise: uploadCompletionPromise\n      });\n      // Pass data and the uploader to the TinodeWeb.\n      this.props.sendMessage(msg, uploadCompletionPromise, uploader);\n    } else {\n      // Small enough to send inband.\n      fileToBase64(file,\n        (mime, bits, fname) => {\n          this.props.sendMessage(Drafty.attachFile(null, {mime: mime, data: bits, filename: fname}));\n        },\n        this.props.onError\n      );\n    }\n  }\n\n  // handleAttachFile method is called when [Attach file] button is clicked.\n  handleAttachFile(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    if (file.size > maxExternAttachmentSize) {\n      // Too large.\n      this.props.onError(this.props.intl.formatMessage(messages.file_attachment_too_large,\n        {size: bytesToHumanSize(file.size), limit: bytesToHumanSize(maxExternAttachmentSize)}), 'err');\n    } else {\n      this.setState({ docPreview: {\n        file: file,\n        filename: file.name,\n        size: file.size,\n        type: file.type\n      }});\n    }\n  }\n\n  // sendImageAttachment sends the image bits inband as Drafty message.\n  sendImageAttachment(caption, blob) {\n    const mime = this.state.imagePreview.type;\n    const width = this.state.imagePreview.width;\n    const height = this.state.imagePreview.height;\n    const fname = this.state.imagePreview.filename;\n\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (blob.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      if (!uploader) {\n        this.props.onError(this.props.intl.formatMessage(messages.cannot_initiate_upload));\n        return;\n      }\n      const uploadCompletionPromise = uploader.upload(blob);\n\n      // Make small preview to show while uploading.\n      imageScaled(blob, IMAGE_PREVIEW_DIM, IMAGE_PREVIEW_DIM, -1, false,\n        (tinyBlob) => {\n          // Convert tiny image into base64 for serialization and previewing.\n          blobToBase64(tinyBlob, (blobMime, tinyBits64) => {\n            let msg = Drafty.insertImage(null, 0, {\n              mime: mime,\n              _tempPreview: tinyBits64, // This preview will not be serialized.\n              width: width,\n              height: height,\n              filename: fname,\n              size: blob.size,\n              urlPromise: uploadCompletionPromise\n            });\n            if (caption) {\n              msg = Drafty.appendLineBreak(msg);\n              msg = Drafty.append(msg, Drafty.init(caption));\n            }\n            // Pass data and the uploader to the TinodeWeb.\n            this.props.sendMessage(msg, uploadCompletionPromise, uploader);\n          }\n        )},\n        // Failure\n        (err) => {\n          this.props.onError(err, 'err');\n        }\n      );\n      return;\n    }\n\n    // Upload the image if it's too big to be send inband.\n    blobToBase64(blob, (blobMime, bits64) => {\n      let msg = Drafty.insertImage(null, 0, {\n        mime: blobMime,\n        preview: bits64, // Serializable preview\n        width: width,\n        height: height,\n        filename: fname,\n        size: blob.size\n      });\n      if (caption) {\n        msg = Drafty.appendLineBreak(msg);\n        msg = Drafty.append(msg, Drafty.init(caption));\n      }\n      this.props.sendMessage(msg);\n    });\n  }\n\n  // handleAttachImage method is called when [Attach image] button is clicked.\n  handleAttachImage(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    // Get image dimensions and size, optionally scale it down.\n    imageScaled(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, maxExternAttachmentSize, false,\n      // Success\n      (blob, mime, width, height, fname) => {\n        this.setState({imagePreview: {\n          url: URL.createObjectURL(blob),\n          blob: blob,\n          filename: fname,\n          width: width,\n          height: height,\n          size: blob.size,\n          type: mime\n        }});\n      },\n      // Failure\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    );\n  }\n\n  handleCancelUpload(seq, uploader) {\n    const found = this.state.messages.find(msg => msg.seq == seq);\n    if (found) {\n      found._cancelled = true;\n    }\n    uploader.cancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n\n    let component;\n    if (this.props.hideSelf) {\n      component = null;\n    } else if (!this.state.topic) {\n      component = (\n        <LogoView\n          serverVersion={this.props.serverVersion}\n          serverAddress={this.props.serverAddress} />\n      );\n    } else {\n      let component2;\n      if (this.state.imagePreview) {\n        // Preview image before sending.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePreview}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendImageAttachment} />\n        );\n      } else if (this.state.imagePostview) {\n        // Expand received image.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePostview}\n            onClose={this.handleClosePreview} />\n        );\n      } else if (this.state.docPreview) {\n        // Preview attachment before sending.\n        component2 = (\n          <DocPreview\n            content={this.state.docPreview}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendFileAttachment} />\n        );\n      } else {\n        const topic = this.props.tinode.getTopic(this.state.topic);\n        const isChannel = topic.isChannelType();\n        const groupTopic = topic.isGroupType() && !isChannel;\n        let messageNodes = [];\n        let previousFrom = null;\n        let chatBoxClass = null;\n        for (let i=0; i<this.state.messages.length; i++) {\n          let msg = this.state.messages[i];\n          let nextFrom = null;\n\n          if (i + 1 < this.state.messages.length) {\n            nextFrom = this.state.messages[i+1].from || 'chan';\n          }\n\n          let sequence = 'single';\n          let thisFrom = msg.from || 'chan';\n          if (thisFrom == previousFrom) {\n            if (thisFrom == nextFrom) {\n              sequence = 'middle';\n            } else {\n              sequence = 'last';\n            }\n          } else if (thisFrom == nextFrom) {\n            sequence = 'first';\n          }\n          previousFrom = thisFrom;\n\n          const isReply = !(thisFrom == this.props.myUserId);\n          const deliveryStatus = topic.msgStatus(msg, true);\n\n          let userName, userAvatar, userFrom;\n          if (groupTopic) {\n            const user = topic.userDesc(thisFrom);\n            if (user && user.public) {\n              userName = user.public.fn;\n              userAvatar = makeImageUrl(user.public.photo);\n            }\n            userFrom = thisFrom;\n            chatBoxClass='chat-box group';\n          } else {\n            chatBoxClass='chat-box';\n          }\n\n          messageNodes.push(\n            <ChatMessage\n              tinode={this.props.tinode}\n              content={msg.content}\n              deleted={msg.hi}\n              mimeType={msg.head ? msg.head.mime : null}\n              timestamp={msg.ts}\n              response={isReply}\n              seq={msg.seq}\n              userFrom={userFrom}\n              userName={userName}\n              userAvatar={userAvatar}\n              sequence={sequence}\n              received={deliveryStatus}\n              uploader={msg._uploader}\n              viewportWidth={this.props.viewportWidth}\n              showContextMenu={this.state.channel? false : this.handleShowContextMenuMessage}\n              onImagePreview={this.handleImagePostview}\n              onFormResponse={this.handleFormResponse}\n              onError={this.props.onError}\n              onCancelUpload={this.handleCancelUpload}\n              key={msg.seq} />\n          );\n        }\n\n        let lastSeen = null;\n        if (isChannel) {\n          lastSeen = formatMessage(messages.channel);\n        } else {\n          const cont = this.props.tinode.getMeTopic().getContact(this.state.topic);\n          if (cont && Tinode.isP2PTopicName(cont.topic)) {\n            if (cont.online) {\n              lastSeen = formatMessage(messages.online_now);\n            } else if (cont.seen) {\n              lastSeen = formatMessage(messages.last_seen) + \": \" +\n                shortDateFormat(cont.seen.when, this.props.intl.locale);\n              // TODO: also handle user agent in c.seen.ua\n            }\n          }\n        }\n        const avatar = this.state.avatar || true;\n        const online = this.props.online ? 'online' + (this.state.typingIndicator ? ' typing' : '') : 'offline';\n\n        component2 = (\n          <>\n            <div id=\"topic-caption-panel\" className=\"caption-panel\">\n              {this.props.displayMobile ?\n                <a href=\"#\" id=\"hide-message-view\" onClick={(e) => {e.preventDefault(); this.props.onHideMessagesView();}}>\n                  <i className=\"material-icons\">arrow_back</i>\n                </a>\n                :\n                null}\n              <div className=\"avatar-box\">\n                <LetterTile\n                  avatar={avatar}\n                  topic={this.state.topic}\n                  title={this.state.title} />\n                {!isChannel ? <span className={online} /> : null}\n              </div>\n              <div id=\"topic-title-group\">\n                <div id=\"topic-title\" className=\"panel-title\">{\n                  this.state.title ||\n                  <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n                    description=\"Title shown when the topic has no name\" /></i>\n                }</div>\n                <div id=\"topic-last-seen\">{lastSeen}</div>\n              </div>\n              {groupTopic ?\n                <GroupSubs\n                  subscribers={this.state.onlineSubs} /> :\n                <div id=\"topic-users\" />\n              }\n              <div>\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">more_vert</i>\n                </a>\n              </div>\n            </div>\n            {this.props.displayMobile ?\n              <ErrorPanel\n                level={this.props.errorLevel}\n                text={this.props.errorText}\n                onClearError={this.props.onError} />\n              : null}\n            <LoadSpinner show={this.state.fetchingMessages} />\n            <div id=\"messages-container\">\n              <div id=\"messages-panel\" ref={this.handleScrollReference}>\n                <ul id=\"scroller\" className={chatBoxClass}>\n                  {messageNodes}\n                </ul>\n              </div>\n              {!this.state.isReader ?\n              <div id=\"write-only-background\">\n                {this.state.readingBlocked ?\n                <div id=\"write-only-note\">\n                  <FormattedMessage id=\"messages_not_readable\" defaultMessage=\"no access to messages\"\n                    description=\"Message shown in topic without the read access\" />\n                </div>\n                : null }\n              </div>\n              : null }\n            </div>\n            {this.state.peerMessagingDisabled && !this.state.unconfirmed ?\n              <div id=\"peer-messaging-disabled-note\">\n                <i className=\"material-icons secondary\">block</i> <FormattedMessage\n                  id=\"peers_messaging_disabled\" defaultMessage=\"Peer's messaging is disabled.\"\n                  description=\"Shown when the p2p peer's messaging is disabled\" /> <a href=\"#\"\n                    onClick={this.handleEnablePeer}><FormattedMessage id=\"enable_peers_messaging\"\n                    defaultMessage=\"Enable\" description=\"Call to action to enable peer's messaging\" /></a>.\n              </div> : null}\n            {this.state.unconfirmed ?\n              <Invitation onAction={this.handleNewChatAcceptance} />\n              :\n              <SendMessage\n                disabled={!this.state.isWriter}\n                onSendMessage={this.props.sendMessage}\n                onKeyPress={this.sendKeyPress}\n                onAttachFile={this.handleAttachFile}\n                onAttachImage={this.handleAttachImage}\n                onError={this.props.onError} />}\n          </>\n        );\n      }\n\n      component = <div id=\"topic-view\">{component2}</div>\n    }\n    return component;\n  }\n};\n\nexport default injectIntl(MessagesView);\n","// The <- button to be displayed in title bars.\nimport React from 'react';\n\nexport default class ButtonBack extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onBack();}}>\n        <i className=\"material-icons\">arrow_back</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class MenuContacts extends React.PureComponent {\n  render() {\n    return (\n      <div>\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onNewTopic();}}><i className=\"material-icons\">chat</i></a>\n        &nbsp;\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nexport default class MenuStart extends React.PureComponent {\n  render() {\n    return (\n        <div>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSignUp();}}><i className=\"material-icons\">person_add</i></a>\n          &nbsp;\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n        </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\nimport ButtonBack from './button-back.jsx';\nimport MenuContacts from './menu-contacts.jsx';\nimport MenuStart from './menu-start.jsx';\n\nexport default class SideNavbar extends React.PureComponent {\n  render() {\n    return (\n        <div id=\"side-caption-panel\" className=\"caption-panel\">\n          {this.props.onCancel ? <ButtonBack onBack={this.props.onCancel} /> : null}\n          {this.props.avatar ?\n            <div id=\"self-avatar\" className=\"avatar-box\">\n              <LetterTile\n                avatar={this.props.avatar}\n                topic={this.props.myUserId}\n                title={this.props.title} />\n            </div>\n            :\n            null}\n          <div id=\"sidepanel-title\" className=\"panel-title\">{this.props.title}</div>\n          {this.props.state === 'login' ?\n              <MenuStart onSignUp={this.props.onSignUp} onSettings={this.props.onSettings} /> :\n            this.props.state === 'contacts' ?\n              <MenuContacts onNewTopic={this.props.onNewTopic} onSettings={this.props.onSettings} /> :\n            null}\n        </div>\n    );\n  }\n};\n","/* ContactsView holds all contacts-related stuff */\nimport React from 'react';\nimport { FormattedMessage, defineMessages } from 'react-intl';\n\nimport ContactList from '../widgets/contact-list.jsx';\n\nimport { updateFavicon } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  archived_contacts_title: {\n    id: \"archived_contacts\",\n    defaultMessage: \"Archived contacts ({count})\",\n    description: \"Label for archived chats\"\n  }\n});\n\nexport default class ContactsView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAction = this.handleAction.bind(this);\n\n    this.state = ContactsView.deriveStateFromProps(props);\n  }\n\n  static deriveStateFromProps(props) {\n    const contacts = [];\n    let unreadThreads = 0;\n    let archivedCount = 0;\n    props.chatList.map((c) => {\n      const blocked = c.acs && !c.acs.isJoiner();\n      // Show only blocked contacts only when props.blocked == true.\n      if (blocked && props.blocked) {\n        contacts.push(c);\n      }\n      if (blocked || props.blocked) {\n        return;\n      }\n\n      if (c.private && c.private.arch) {\n        if (props.archive) {\n          contacts.push(c);\n        } else {\n          archivedCount ++;\n        }\n      } else if (!props.archive) {\n        contacts.push(c);\n        unreadThreads += c.unread > 0 ? 1 : 0;\n      }\n    });\n\n    contacts.sort((a, b) => {\n      return (b.touched || 0) - (a.touched || 0);\n    });\n\n    if (archivedCount > 0) {\n      contacts.push({\n        action: 'archive',\n        title: messages.archived_contacts_title,\n        values: {count: archivedCount}\n      });\n    }\n\n    return {\n      contactList: contacts,\n      unreadThreads: unreadThreads\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chatList != this.props.chatList ||\n        prevProps.archive != this.props.archive ||\n        prevProps.blocked != this.props.blocked) {\n      const newState = ContactsView.deriveStateFromProps(this.props);\n      this.setState(newState);\n      if (newState.unreadThreads != prevState.unreadThreads) {\n        updateFavicon(newState.unreadThreads);\n      }\n    }\n  }\n\n  handleAction(action_ignored) {\n    this.props.onShowArchive();\n  }\n\n  render() {\n    return (\n      <FormattedMessage id=\"contacts_not_found\"\n        defaultMessage=\"You have no chats<br />¯∖_(ツ)_/¯\"\n        description=\"HTML message shown in ContactList when no contacts are found\">{\n        (no_contacts) => <ContactList\n          connected={this.props.connected}\n          contacts={this.state.contactList}\n          emptyListMessage={no_contacts}\n          topicSelected={this.props.topicSelected}\n          myUserId={this.props.myUserId}\n          showOnline={true}\n          showUnread={true}\n          onTopicSelected={this.props.onTopicSelected}\n          showContextMenu={this.props.showContextMenu}\n          onAction={this.handleAction} />\n      }</FormattedMessage>\n    );\n  }\n};\n","// Helper functions for storing values in localStorage.\n// By default localStorage can store only strings, not objects or other types.\n\nexport default class LocalStorageUtil {\n  // Replace old object with the new one.\n  static setObject(key, value) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n\n  // Get stored object.\n  static getObject(key) {\n    const value = localStorage.getItem(key);\n    return value && JSON.parse(value);\n  }\n\n  // Partially or wholly update stored object.\n  static updateObject(key, value) {\n    const oldVal = this.getObject(key);\n    this.setObject(key, Object.assign(oldVal || {}, value));\n  }\n\n  // Just a wrapper.\n  static removeItem(key) {\n    localStorage.removeItem(key);\n  }\n}\n","// Account registration.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport { vcard } from '../lib/utils.js';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class CreateAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: '',\n      password: '',\n      email: '',\n      fn: '', // full/formatted name\n      imageDataUrl: null,\n      errorCleared: false,\n      saveToken: LocalStorageUtil.getObject('keep-logged-in')\n    };\n\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(password) {\n    this.setState({password: password});\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value})\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleToggleSaveToken() {\n    LocalStorageUtil.setObject('keep-logged-in', !this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({errorCleared: false});\n    this.props.onCreateAccount(\n      this.state.login.trim(),\n      this.state.password.trim(),\n      vcard(this.state.fn.trim().substring(0, MAX_TITLE_LENGTH), this.state.imageDataUrl),\n      {'meth': 'email', 'val': this.state.email});\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form className=\"panel-form-column\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n              description=\"Placeholer for username/login\">{\n              (login_prompt) => <input type=\"text\" placeholder={login_prompt} autoComplete=\"user-name\"\n                value={this.state.login} onChange={this.handleLoginChange} required autoFocus />\n            }</FormattedMessage>\n            <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n              description=\"Placeholder/prompt for entering password\">{\n              (password_prompt) => <VisiblePassword placeholder={password_prompt} autoComplete=\"new-password\"\n                value={this.state.password} onFinished={this.handlePasswordChange}\n                required={true} />\n            }</FormattedMessage>\n          </div>\n          <AvatarUpload\n            onImageChanged={this.handleImageChanged}\n            onError={this.props.onError} />\n        </div>\n        <div  className=\"panel-form-row\">\n          <FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n            description=\"Input placeholder for person's full name\">{\n            (full_name_prompt) => <input type=\"text\" placeholder={full_name_prompt} autoComplete=\"name\"\n              value={this.state.fn} onChange={this.handleFnChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <FormattedMessage id=\"email_prompt\" defaultMessage=\"Email, e.g. jdoe@example.com\"\n            description=\"Input placeholder for email entry\">{\n            (email_prompt) => <input type=\"email\" placeholder={email_prompt} autoComplete=\"email\"\n              value={this.state.email} onChange={this.handleEmailChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n            description=\"Label for a checkbox\">{\n            (stay_logged_in) => <label htmlFor=\"save-token\">&nbsp;{stay_logged_in}</label>\n          }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_up\" defaultMessage=\"Sign up\"\n              description=\"Create account button [Sign Up]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class EditAccountView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    this.state = {\n      fullName: me.public ? me.public.fn : undefined,\n      avatar: makeImageUrl(me.public ? me.public.photo : null)\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n                description=\"Label for full name editing\" />\n            </label>\n            <div className=\"large\">{this.state.fullName}</div>\n            <div>\n              <label className=\"small\"><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n                description=\"Label for user address (ID)\" /></label>&nbsp;\n              <tt>{this.props.myUserId}</tt>\n            </div>\n          </div>\n          <AvatarUpload\n            avatar={this.state.avatar}\n            readOnly={!this.state.owner}\n            uid={this.props.myUserId}\n            title={this.state.fullName} />\n        </div>\n        <div className=\"panel-form-row\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('general');}}>\n            <i className=\"material-icons\">edit</i>&nbsp;\n            <FormattedMessage id=\"button_edit\" defaultMessage=\"Edit\" description=\"Call to action [Edit]\" />\n          </a>\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('notif');}}>\n            <i className=\"material-icons\">notifications</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_notifications\"\n              defaultMessage=\"Notifications\" description=\"Sidepanel title for AccNotificationsView.\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('security');}}>\n            <i className=\"material-icons\">security</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_security\"\n              defaultMessage=\"Security\" description=\"Sidepanel title for AccSecurityView.\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('support');}}>\n            <i className=\"material-icons\">contact_support</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_support\"\n              defaultMessage=\"Support\" description=\"Sidepanel title for AccSupportView.\" />\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport TagManager from '../widgets/tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, asEmail, asPhone, vcard } from '../lib/utils.js';\n\nexport default class AccGeneralView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    this.state = {\n      fullName: me.public ? me.public.fn : undefined,\n      avatar: makeImageUrl(me.public ? me.public.photo : null),\n      tags: me.tags(),\n      credentials: me.getCredentials() || [],\n      addCredActive: false,\n      addCredInvalid: false,\n      newCred: '',\n      previousOnTags: me.onTagsUpdated\n    };\n\n    this.tnNewTags = this.tnNewTags.bind(this);\n    this.tnCredsUpdated = this.tnCredsUpdated.bind(this);\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleCredChange = this.handleCredChange.bind(this);\n    this.handleCredKeyDown = this.handleCredKeyDown.bind(this);\n    this.handleCredEntered = this.handleCredEntered.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n  }\n\n  componentDidMount() {\n    const me = this.props.tinode.getMeTopic();\n    me.onCredsUpdated = this.tnCredsUpdated;\n    me.onTagsUpdated = this.tnNewTags;\n  }\n\n  componentWillUnmount() {\n    const me = this.props.tinode.getMeTopic();\n    me.onTagsUpdated = this.state.previousOnTags;\n    me.onCredsUpdated = undefined;\n  }\n\n  tnNewTags(tags) {\n    this.setState({tags: tags});\n  }\n\n  tnCredsUpdated(creds) {\n    this.setState({credentials: creds || []});\n  }\n\n  handleFullNameUpdate(fn) {\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\n    if (fn) {\n      this.setState({fullName: fn});\n      this.props.onUpdateAccount(undefined, vcard(fn, null));\n    }\n  }\n\n  handleImageChanged(img) {\n    this.setState({avatar: img});\n    this.props.onUpdateAccount(undefined, vcard(null, img || Tinode.DEL_CHAR));\n  }\n\n  handleCredChange(e) {\n    this.setState({newCred: e.target.value, addCredInvalid: false});\n  }\n\n  handleCredKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({newCred: '', addCredActive: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleCredEntered(e);\n    }\n  }\n\n  handleCredEntered(e) {\n    let value = this.state.newCred.trim();\n    if (!value) {\n      this.setState({addCredActive: false, addCredInvalid: false});\n      return;\n    }\n\n    let val = asPhone(value);\n    let method;\n    if (val) {\n      method = 'tel';\n    } else {\n      val = asEmail(value);\n      if (val) {\n        method = 'email';\n      }\n    }\n    if (method) {\n      this.props.onCredAdd(method, val);\n      this.setState({addCredActive: false, newCred: ''});\n    } else {\n      this.setState({addCredInvalid: true});\n    }\n  }\n\n  handleTagsUpdated(tags) {\n    // Check if tags have actually changed.\n    if (arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      return;\n    }\n    this.props.onUpdateTags(tags);\n  }\n\n  render() {\n    const credentials = [];\n    this.state.credentials.map((cred) => {\n      credentials.push(<div key={cred.meth + \":\" + cred.val + \":\" + cred.done}>{cred.meth}: <tt>{cred.val}</tt>\n        <span > {!cred.done ?\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredConfirm(cred.meth, cred.val);}}>\n              <FormattedMessage id=\"validate_credential_action\" defaultMessage=\"confirm\"\n                description=\"Validate credentail call to action\" />\n            </a>\n          : null} <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredDelete(cred.meth, cred.val);}}><i\n            className=\"material-icons gray\">delete_outline</i></a></span></div>);\n    });\n\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\"><FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n              description=\"Label for full name editing\" /></label>\n            <div><FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n              description=\"Input placeholder for person's full name\">{\n              (full_name_placeholder) => <InPlaceEdit\n                placeholder={full_name_placeholder}\n                value={this.state.fullName}\n                onFinished={this.handleFullNameUpdate} />\n            }</FormattedMessage></div>\n          </div>\n          <AvatarUpload\n            avatar={this.state.avatar}\n            uid={this.props.myUserId}\n            title={this.state.fullName}\n            onImageChanged={this.handleImageChanged}\n            onError={this.props.onError} />\n        </div>\n        <div className=\"hr\" />\n        <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (user discovery)\"\n          description=\"Section title for TagManager\">{\n          (title_tag_manager) => <TagManager\n            title={title_tag_manager}\n            activated={false}\n            tags={this.state.tags}\n            tinode={this.props.tinode}\n            onSubmit={this.handleTagsUpdated} />\n        }</FormattedMessage>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_user_contacts\" defaultMessage=\"Contacts:\"\n            description=\"Label for user contacts\" />\n          </label>\n          <div className=\"quoted\">\n            {credentials}\n            {this.state.addCredActive ?\n              <input type=\"text\" value={this.state.value}\n                className={this.state.addCredInvalid ? 'invalid' : null}\n                placeholder=\"Phone number or email\" required=\"required\" autoFocus\n                onChange={this.handleCredChange} onKeyDown={this.handleCredKeyDown} onBlur={this.handleCredEntered} />\n              : null}\n            <div>\n              <a href=\"#\" onClick={(e) => {e.preventDefault(); this.setState({addCredActive: true});}}>\n                <i className=\"material-icons\">add</i>\n                <FormattedMessage id=\"button_add_another\" defaultMessage=\"Add another\" description=\"Call to action [+ add another]\" />\n              </a></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\n\nexport default class EditAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckboxClick = this.handleCheckboxClick.bind(this);\n  }\n\n  handleCheckboxClick(what, checked) {\n    if (what == 'sound') {\n      this.props.onToggleMessageSounds(checked);\n    } else if (what == 'alert') {\n      this.props.onTogglePushNotifications(checked);\n    } else if (what == 'incognito') {\n      this.props.onToggleIncognitoMode(checked);\n    }\n  }\n\n  render() {\n    return (\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"message-sound\">\n              <FormattedMessage id=\"label_message_sound\" defaultMessage=\"Message sound:\"\n                description=\"Label for message sounds toggle\" />\n            </label>\n            <CheckBox name=\"sound\" id=\"message-sound\"\n              checked={this.props.messageSounds} onChange={this.handleCheckboxClick} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"desktop-alerts\">\n            {this.props.desktopAlertsEnabled ?\n              <FormattedMessage id=\"label_push_notifications\" defaultMessage=\"Notification alerts:\"\n                description=\"Label for push notifications switch\" />\n              :\n              <FormattedMessage id=\"label_push_notifications_disabled\"\n                defaultMessage=\"Notification alerts (requires HTTPS):\"\n                description=\"Label for push notifications switch\" />\n            }\n            </label>\n            <CheckBox name=\"alert\" id=\"desktop-alerts\"\n              checked={this.props.desktopAlerts}\n              onChange={this.props.desktopAlertsEnabled ? this.handleCheckboxClick : null} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"incognito-mode\">\n              <FormattedMessage id=\"label_incognito_mode\" defaultMessage=\"Incognito mode:\"\n                description=\"Label for incognito mode toggle\" />\n            </label>\n            <CheckBox name=\"incognito\" id=\"incognito-mode\"\n              checked={this.props.incognitoMode} onChange={this.handleCheckboxClick} />\n          </div>\n        </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\n\nconst messages = defineMessages({\n  delete_account: {\n    id: 'delete_account',\n    defaultMessage: 'Delete account',\n    description: 'Title for delete account warning'\n  },\n  delete_account_warning: {\n    id: 'delete_account_arning',\n    defaultMessage: 'Are you sure you want to delete your account? It cannot be undone.',\n    description: 'Warning message when deleting an account'\n  }\n});\n\nclass AccSecurityView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    let blockedCount = 0;\n    me.contacts((c) => {\n      if (c.acs && !c.acs.isJoiner()) {\n        blockedCount ++;\n      }\n    });\n    const defacs = me.getDefaultAccess();\n    this.state = {\n      auth: defacs ? defacs.auth : null,\n      anon: defacs ? defacs.anon : null,\n      showPermissionEditorFor: undefined,\n      blockedCount: blockedCount,\n    };\n\n    this.handlePasswordUpdate = this.handlePasswordUpdate.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n  }\n\n  handlePasswordUpdate(pwd) {\n    this.setState({password: pwd});\n    this.props.onUpdateAccount(pwd);\n  }\n\n  handleLaunchPermissionsEditor(which) {\n    this.setState({\n      showPermissionEditorFor: which,\n      editedPermissions: this.state[which]\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handlePermissionsChanged(perm) {\n    let defacs = {};\n    defacs[this.state.showPermissionEditorFor] = perm;\n    this.props.onUpdateAccount(undefined, undefined, defacs);\n\n    let newState = {showPermissionEditorFor: undefined};\n    newState[this.state.showPermissionEditorFor] = perm;\n    this.setState(newState);\n  }\n\n  handleDeleteAccount(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.delete_account), // title\n      formatMessage(messages.delete_account_warning), // content\n      (() => { this.props.onDeleteAccount(); }), // onConfirm\n      null, // use default text \"OK\"\n      true, // Show Reject button\n      null  // use default text \"Cancel\"\n    );\n  }\n\n  render() {\n    return (\n      <React.Fragment>{this.state.showPermissionEditorFor ?\n        <PermissionsEditor\n          mode={this.state.editedPermissions}\n          skip=\"O\"\n          onSubmit={this.handlePermissionsChanged}\n          onCancel={this.handleHidePermissionsEditor} />\n        :\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_password\" defaultMessage=\"Password\"\n                  description=\"Label for password editing\" />\n            </label>\n            <div>\n              <FormattedMessage id=\"password_unchanged_prompt\" defaultMessage=\"Unchanged\"\n                description=\"Message in editor while password is unchanged\">{\n                (password_unchanged) => <InPlaceEdit\n                  placeholder={password_unchanged}\n                  type=\"password\"\n                  onFinished={this.handlePasswordUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <a href=\"#\" className=\"danger flat-button\" onClick={(e) => {e.preventDefault(); this.props.onLogout();}}>\n              <i className=\"material-icons\">exit_to_app</i> &nbsp;<FormattedMessage id=\"button_logout\"\n                defaultMessage=\"Logout\" description=\"Button [Logout]\" />\n            </a>\n            <a href=\"#\" className=\"danger flat-button\" onClick={(e) => {this.handleDeleteAccount(e);}}>\n              <i className=\"material-icons\">delete</i> &nbsp;<FormattedMessage id=\"button_delete_account\"\n                defaultMessage=\"Delete account\" description=\"Button [Delete account]\" />\n            </a>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <div>\n              <label className=\"small\">\n                <FormattedMessage id=\"label_default_access_mode\" defaultMessage=\"Default access mode:\"\n                description=\"Label for default access mode\" />\n              </label>\n            </div>\n            <div className=\"quoted\">\n              <div>Auth: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>{this.state.auth}</tt></div>\n              <div>Anon: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>{this.state.anon}</tt></div>\n            </div>\n          </div>\n          {this.state.blockedCount > 0 ?\n            <>\n              <div className=\"hr\" />\n              <div className=\"panel-form-row\">\n                <i className=\"material-icons\">block</i>&nbsp;\n                <a href=\"#\" className=\"gray\" onClick={(e) => {e.preventDefault(); this.props.onShowBlocked();}}>\n                  <FormattedMessage id=\"blocked_contacts_link\" defaultMessage=\"Blocked contacts ({count})\"\n                    values={{ count: this.state.blockedCount }} description=\"Blocked contacts link\" />\n                </a>\n              </div>\n            </>\n            : null }\n        </div>\n      }</React.Fragment>\n    );\n  }\n};\n\nexport default injectIntl(AccSecurityView);\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME, LINK_CONTACT_US, LINK_PRIVACY_POLICY, LINK_TERMS_OF_SERVICE } from '../config.js';\n\nexport default class AccSupportView extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          <a href={LINK_CONTACT_US} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">email</i> &nbsp;<FormattedMessage id=\"link_contact_us\"\n              defaultMessage=\"Contact Us\" description=\"Ancor text for contacting us by email\" />\n          </a>\n          <a href={LINK_TERMS_OF_SERVICE} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">description</i> &nbsp;<FormattedMessage id=\"link_terms_of_service\"\n              defaultMessage=\"Terms of Service\" description=\"Ancor text for terms of service link\" />\n          </a>\n          <a href={LINK_PRIVACY_POLICY} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">policy</i> &nbsp;<FormattedMessage id=\"link_privacy_policy\"\n              defaultMessage=\"Privacy Policy\" description=\"Ancor text for privacy policy link\" />\n          </a>\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\"\n              description=\"Label for a client version\" /></label>\n            {APP_NAME}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_sdk\" defaultMessage=\"SDK:\" /></label>\n            {Tinode.getLibrary()}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\"\n              description=\"Label for a server version\" /></label>\n            {this.props.serverVersion}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server_address\" defaultMessage=\"Server address:\" /></label>\n            {this.props.serverAddress}\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","// Login form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\n\nexport default class LoginView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: props.login,\n      password: '',\n      hostName: props.serverAddress,\n      saveToken: LocalStorageUtil.getObject('keep-logged-in')\n    };\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  handleToggleSaveToken() {\n    LocalStorageUtil.setObject('keep-logged-in', !this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onLogin(this.state.login.trim(), this.state.password.trim());\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form id=\"login-form\" onSubmit={this.handleSubmit}>\n        <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n          description=\"Placeholer for username/login\">\n        {\n          (login_prompt) => <input type=\"text\" id=\"inputLogin\"\n            placeholder={login_prompt}\n            autoComplete=\"username\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"none\"\n            value={this.state.login}\n            onChange={this.handleLoginChange}\n            required autoFocus />\n        }\n        </FormattedMessage>\n        <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n          description=\"Placeholder/prompt for entering password\">\n        {\n          (password_prompt) => <VisiblePassword type=\"password\" id=\"inputPassword\"\n            placeholder={password_prompt}\n            autoComplete=\"current-password\"\n            value={this.state.password}\n            onChange={this.handlePasswordChange}\n            required={true} />\n        }\n        </FormattedMessage>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <label htmlFor=\"save-token\">&nbsp;\n            <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n              description=\"Label for a checkbox\" />\n          </label>\n          <a href=\"#reset\">\n            <FormattedMessage id=\"forgot_password_link\" defaultMessage=\"Forgot password?\"\n              description=\"Link to Reset password form\" />\n          </a>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_in\" defaultMessage=\"Sign in\"\n              description=\"Button [Sign In]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n/* END Login */\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  invalid_id: {\n    id: 'error_invalid_id',\n    defaultMessage: 'Invalid ID',\n    description: 'Error message'\n  }\n});\n\nclass NewTopicById extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      groupId: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({groupId: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.groupId) {\n      const name = this.state.groupId.trim();\n      const prefix = name.substr(0, 3);\n      if (name.length > 3 && ['usr', 'grp', 'chn'].includes(prefix)) {\n        this.props.onSubmit(name);\n      } else {\n        this.props.onError(this.props.intl.formatMessage(messages.invalid_id), 'err');\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"group_user_id_prompt\" defaultMessage=\"Group or User ID\"\n          description=\"Prompt for entering user or group ID\">{\n          (prompt) => <input type=\"text\" placeholder={prompt}\n            value={this.state.groupId} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required autoFocus />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_subscribe\" defaultMessage=\"Subscribe\"\n              description=\"Button [Subscribe]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicById);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from './avatar-upload.jsx';\nimport CheckBox from './checkbox.jsx';\nimport TagManager from './tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class NewTopicGroup extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      fn: '', // full/formatted name\n      private: '',\n      imageDataUrl: null,\n      tags: [],\n      isChannel: false\n    };\n\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handlePrivateChange = this.handlePrivateChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleTagsChanged = this.handleTagsChanged.bind(this);\n    this.handleChannelToggle = this.handleChannelToggle.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handlePrivateChange(e) {\n    this.setState({private: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleTagsChanged(tags) {\n    this.setState({tags: tags});\n  }\n\n  handleChannelToggle() {\n    this.setState({isChannel: !this.state.isChannel});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const fn = this.state.fn.trim().substring(0, MAX_TITLE_LENGTH);\n    const comment = this.state.private.trim().substring(0, MAX_TITLE_LENGTH);\n    if (fn) {\n      this.props.onSubmit(fn, this.state.imageDataUrl, comment, this.state.tags, this.state.isChannel);\n    }\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n    return (\n      <form className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\" htmlFor=\"new-topic-fn\">\n              <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                description=\"Label for editing topic name\" />\n            </label>\n            <FormattedMessage id=\"topic_name_editing_placeholder\" defaultMessage=\"Freeform name of the group\"\n              description=\"Prompt for entering topic name\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-fn\" placeholder={placeholder}\n                value={this.state.fn} onChange={this.handleFnChange} autoFocus required />\n            }</FormattedMessage>\n            <br />\n            <label className=\"small\" htmlFor=\"new-topic-priv\">\n              <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                description=\"Label for editing 'private'\" />\n            </label>\n            <FormattedMessage id=\"private_editing_placeholder\" defaultMessage=\"Visible to you only\"\n              description=\"Placeholder for editing 'private'\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-priv\" placeholder={placeholder}\n                value={this.state.private} onChange={this.handlePrivateChange} />\n            }</FormattedMessage>\n          </div>\n          <AvatarUpload\n            onError={this.props.onError}\n            onImageChanged={this.handleImageChanged} />\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox checked={this.state.isChannel} onChange={this.handleChannelToggle}/>&nbsp;\n          <label onClick={this.handleChannelToggle}><FormattedMessage id=\"channel_prompt\"\n            defaultMessage=\"This is a channel\"\n            description=\"Checkbox label when creating a channel\" /></label>\n        </div>\n        <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (user discovery)\"\n          description=\"Section title for TagManager\">{\n          (title) => <TagManager\n            tags={this.state.tags}\n            activated={true}\n            onTagsChanged={this.handleTagsChanged}\n            tinode={this.props.tinode}\n            title={title} />\n        }</FormattedMessage>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses}>\n            <FormattedMessage id=\"button_create\" defaultMessage=\"Create\"\n              description=\"Button [Create]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nexport default class SearchContacts extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      edited: false,\n      search: ''\n    };\n\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  componentWillUnmount() {\n    if (this.state.edited) {\n      this.setState({search: '', edited: false});\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n  }\n\n  handleSearchChange(e) {\n    this.setState({search: e.target.value});\n  }\n\n  handleSearch(e) {\n    e.preventDefault();\n    var query = this.state.search.trim();\n    this.setState({edited: (query.length > 0)});\n    this.props.onSearchContacts(query.length > 0 ? query : Tinode.DEL_CHAR);\n  }\n\n  handleClear(e) {\n    e.preventDefault();\n    if (this.state.edited) {\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n    this.setState({search: '', edited: false});\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Enter') {\n      this.handleSearch(e);\n    } else if (e.key === 'Escape') {\n      this.handleClear();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <i className=\"material-icons search\">search</i>\n          <FormattedMessage id=\"search_placeholder\" defaultMessage=\"List like email:alice@example.com, tel:17025550003...\"\n            description=\"Placeholder in contacts search field\">{\n            (search_placeholder) => <input className=\"search\" type=\"text\"\n              placeholder={search_placeholder}\n              value={this.state.search} onChange={this.handleSearchChange}\n              onKeyDown={this.handleKeyDown} required autoFocus />\n          }</FormattedMessage>\n          <a href=\"#\" onClick={this.handleClear}>\n            <i className=\"material-icons\">close</i>\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","// Create new topic and invite users or send an invite.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport ContactList from '../widgets/contact-list.jsx';\nimport NewTopicById from '../widgets/new-topic-by-id.jsx';\nimport NewTopicGroup from '../widgets/new-topic-group.jsx';\nimport SearchContacts from '../widgets/search-contacts.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\nimport { vcard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  search_for_contacts: {\n    id: \"search_for_contacts\",\n    defaultMessage: \"Use search to find contacts\",\n    description: \"Text shown in contacts view when user entered no search query.\"\n  },\n  search_no_results: {\n    id: \"search_no_results\",\n    defaultMessage: \"Search returned no results\",\n    description: \"Text shown in contacts view when query returned no results.\"\n  }\n});\n\nclass NewTopicView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tabSelected: 'p2p',\n      searchQuery: null\n    };\n\n    this.handleTabClick = this.handleTabClick.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleNewGroupSubmit = this.handleNewGroupSubmit.bind(this);\n    this.handleGroupByID = this.handleGroupByID.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.onInitFind();\n  }\n\n  handleTabClick(e) {\n    e.preventDefault();\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'tab', e.currentTarget.dataset.id));\n    this.setState({tabSelected: e.currentTarget.dataset.id});\n  }\n\n  handleSearchContacts(query) {\n    this.props.onSearchContacts(query);\n    this.setState({searchQuery: Tinode.isNullValue(query) ? null : query});\n  }\n\n  handleContactSelected(sel) {\n    if (this.state.tabSelected === 'p2p') {\n      HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n      this.props.onCreateTopic(sel);\n    }\n  }\n\n  handleNewGroupSubmit(name, dataUrl, priv, tags, isChannel) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(undefined, vcard(name, dataUrl), priv, tags, isChannel);\n  }\n\n  handleGroupByID(topicName) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(topicName);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const no_contacts_placeholder = formatMessage(this.state.searchQuery ?\n      messages.search_no_results : messages.search_for_contacts);\n    return (\n      <div className=\"flex-column\">\n        <ul className=\"tabbar\">\n          <li className={this.state.tabSelected === \"p2p\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"p2p\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_find_user\" defaultMessage=\"find\"\n                description=\"Tab title Find\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"grp\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"grp\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_new_group\" defaultMessage=\"new group\"\n                description=\"Tab title New Group\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"byid\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"byid\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_group_by_id\" defaultMessage=\"by id\"\n                description=\"Tab title Find topic by ID\" />\n            </a>\n          </li>\n        </ul>\n        {this.state.tabSelected === 'grp' ?\n          <NewTopicGroup\n            tinode={this.props.tinode}\n            onSubmit={this.handleNewGroupSubmit} /> :\n          this.state.tabSelected === 'byid' ?\n            <NewTopicById\n              onSubmit={this.handleGroupByID}\n              onError={this.props.onError} /> :\n            <div className=\"flex-column\">\n              <SearchContacts\n                type=\"p2p\"\n                onSearchContacts={this.handleSearchContacts} />\n              <ContactList\n                contacts={this.props.searchResults}\n                myUserId={this.props.myUserId}\n                emptyListMessage={no_contacts_placeholder}\n                showOnline={false}\n                showUnread={false}\n                showContextMenu={false}\n                onTopicSelected={this.handleContactSelected} />\n            </div>}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicView);\n","// A password reset form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\n\nexport default class PasswordResetView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n  }\n\n  componentDidMount() {\n    let parsed = HashNavigation.parseUrlHash(window.location.hash);\n    this.setState({token: parsed.params.token, scheme: parsed.params.scheme});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.token) {\n      this.props.onReset(this.state.scheme, this.state.password.trim(), this.state.token);\n    } else {\n      this.props.onRequest('email', this.state.email.trim());\n    }\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  render() {\n    let reset = (this.state.token && this.state.scheme);\n    return (\n      <form id=\"password-reset-form\" onSubmit={this.handleSubmit}>\n        {reset ?\n          <FormattedMessage id=\"new_password_placeholder\" defaultMessage=\"Enter new password\"\n            description=\"Placeholder for entering new password\">{\n            (placeholder) => <VisiblePassword\n              placeholder={placeholder}\n              autoComplete=\"new-password\"\n              value={this.state.password}\n              required={true} autoFocus={true}\n              onChange={this.handlePasswordChange} />\n          }</FormattedMessage>\n          :\n          <>\n            <label htmlFor=\"inputEmail\">\n              <FormattedMessage id=\"label_reset_password\"\n                defaultMessage=\"Send a password reset email:\"\n                description=\"Label for password reset field\" />\n            </label>\n            <FormattedMessage id=\"credential_email_prompt\" defaultMessage=\"Your registration email\"\n              description=\"Placeholder for entering email\">{\n              (placeholder) => <input type=\"email\" id=\"inputEmail\"\n                placeholder={placeholder}\n                autoComplete=\"email\"\n                value={this.state.email}\n                onChange={this.handleEmailChange}\n                required autoFocus />\n            }</FormattedMessage>\n          </>\n        }\n        <div className=\"dialog-buttons\">\n          <button className=\"primary\" type=\"submit\">{reset ?\n            <FormattedMessage id=\"button_reset\" defaultMessage=\"Reset\" description=\"Button [Reset]\" /> :\n            <FormattedMessage id=\"button_send_request\" defaultMessage=\"Send request\"\n              description=\"Button [Send request]\" />\n          }</button>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react';\n\nimport { KNOWN_HOSTS } from '../config.js';\n\n/* Combobox for selecting host name */\n\nexport default class HostSelector extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hostName: props.serverAddress,\n      changed: false\n    };\n\n    this.handleHostNameChange = this.handleHostNameChange.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handleHostNameChange(e) {\n    this.setState({hostName: e.target.value, changed: true});\n  }\n\n  handleEditingFinished() {\n    if (this.state.changed) {\n      this.setState({changed: false});\n      this.props.onServerAddressChange(this.state.hostName.trim());\n    }\n  }\n\n  render() {\n    var hostOptions = [];\n    for (let key in KNOWN_HOSTS) {\n      let item = KNOWN_HOSTS[key];\n      hostOptions.push(\n        <option key={item} value={item} />\n      );\n    }\n    return (\n      <div className=\"panel-form-row\">\n        <input type=\"search\" id=\"host-name\" placeholder={this.props.hostName} list=\"known-hosts\"\n          className=\"quoted\" value={this.state.hostName} onChange={this.handleHostNameChange}\n          onBlur={this.handleEditingFinished} required />\n        <datalist id=\"known-hosts\">\n          {hostOptions}\n        </datalist>\n      </div>\n    );\n  }\n}\n","// Tinode config panel.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport HostSelector from '../widgets/host-selector.jsx';\n\nexport default class SettingsView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transport: props.transport || 'def',\n      serverAddress: props.serverAddress,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleTransportSelected = this.handleTransportSelected.bind(this);\n    this.handleServerAddressChange = this.handleServerAddressChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onUpdate({\n      transport: this.state.transport,\n      serverAddress: this.state.serverAddress\n    });\n  }\n\n  handleTransportSelected(e) {\n    this.setState({transport: e.currentTarget.value});\n  }\n\n  handleServerAddressChange(name) {\n    this.setState({serverAddress: name});\n  }\n\n  render() {\n    const names = {def: \"default\", ws: \"websocket\", lp: \"long polling\"};\n    var transportOptions = [];\n    var instance = this;\n    ['def', 'ws', 'lp'].map(function(item) {\n      var id = 'transport-' + item;\n      var name = names[item];\n      transportOptions.push(\n        <li key={item}>\n          <input type=\"radio\" id={id} name=\"transport-select\" value={item}\n            checked={instance.state.transport === item}\n            onChange={instance.handleTransportSelected} />\n          <label htmlFor={id}>{name}</label>\n        </li>\n      );\n    });\n\n    return (\n      <form id=\"settings-form\" className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_server_to_use\" defaultMessage=\"Server to use:\"\n              description=\"Label for server selector in SettingsView\" />\n          </label>\n        </div>\n        <HostSelector serverAddress={this.state.serverAddress}\n          onServerAddressChange={this.handleServerAddressChange} />\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_wire_transport\" defaultMessage=\"Wire transport:\"\n              description=\"Label for wire transport selection in SettingsView\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ul className=\"quoted\">\n            {transportOptions}\n          </ul>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button type=\"submit\" className=\"primary\">\n            <FormattedMessage id=\"button_update\" defaultMessage=\"Update\"\n              description=\"Button [Update]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// ValidationView: panel for confirming credentials, like email or phone.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  phone: {\n    id: 'phone_dative',\n    defaultMessage: 'phone',\n    description: \"Dative case of 'phone', i.e. 'phone' in 'by phone'\",\n  },\n  email: {\n    id: 'email_dative',\n    defaultMessage: 'email',\n    description: \"Dative case of 'email', i.e. 'email' in 'by email'\",\n  }\n});\n\nclass ValidationView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      code: props.credCode || ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({code: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    } else if (e.key == 'Escape') {\n      this.handleCancel(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.code && this.state.code.trim()) {\n      this.props.onSubmit(this.props.credMethod, this.state.code.trim());\n    }\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel();\n  }\n\n\n  render() {\n    const { formatMessage } = this.props.intl;\n    const methods = {'email': formatMessage(messages.email), 'tel': formatMessage(messages.phone)};\n    let method = methods[this.props.credMethod] || this.props.credMethod;\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\" htmlFor=\"enter-confirmation-code\">\n            <FormattedMessage id=\"enter_confirmation_code_prompt\"\n              defaultMessage=\"Enter confirmation code sent to you by {method}:\"\n              description=\"Request to enter confirmation code\"\n              values={{method: method}} />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"numeric_confirmation_code_prompt\"\n          defaultMessage=\"Numbers only\" description=\"Prompt for numeric conformation code\">{\n          (numbers_only) => <input type=\"text\" id=\"enter-confirmation-code\"\n            placeholder={numbers_only}\n            value={this.state.code} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_confirm\" defaultMessage=\"Confirm\" description=\"Button [Confirm]\" />\n          </button>\n          <button className=\"secondary\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ValidationView);\n","import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport SideNavbar from '../widgets/side-navbar.jsx';\n\nimport ContactsView from './contacts-view.jsx';\nimport CreateAccountView from './create-account-view.jsx';\nimport EditAccountView from './edit-account-view.jsx';\nimport AccGeneralView from './acc-general-view.jsx';\nimport AccNotificationsView from './acc-notifications-view.jsx';\nimport AccSecurityView from './acc-security-view.jsx';\nimport AccSupportView from './acc-support-view.jsx';\nimport LoginView from './login-view.jsx';\nimport NewTopicView from './new-topic-view.jsx';\nimport PasswordResetView from './password-reset-view.jsx';\nimport SettingsView from './settings-view.jsx';\nimport ValidationView from './validation-view.jsx';\n\n// Panel titles for translation.\nconst messages = defineMessages({\n  login: {\n    id: 'sidepanel_title_login',\n    description: 'Sidepanel title for LoginView.',\n    defaultMessage: 'Sign In'\n  },\n  register: {\n    id: 'sidepanel_title_register',\n    description: 'Sidepanel title for CreateAccountView.',\n    defaultMessage: 'Create Account'\n  },\n  settings: {\n    id: 'sidepanel_title_settings',\n    description: 'Sidepanel title for SettingsView.',\n    defaultMessage: 'Settings'\n  },\n  edit: {\n    id: 'sidepanel_title_account_settings',\n    description: 'Sidepanel title for EditAccountView.',\n    defaultMessage: 'Account Settings'\n  },\n  general: {\n    id: 'sidepanel_title_acc_general',\n    description: 'Sidepanel title for AccGeneralView.',\n    defaultMessage: 'General'\n  },\n  security: {\n    id: 'sidepanel_title_acc_security',\n    description: 'Sidepanel title for AccSecurityView.',\n    defaultMessage: 'Security'\n  },\n  notif: {\n    id: 'sidepanel_title_acc_notifications',\n    description: 'Sidepanel title for AccNotificationsView.',\n    defaultMessage: 'Notifications'\n  },\n  support: {\n    id: 'sidepanel_title_acc_support',\n    description: 'Sidepanel title for AccSupportView.',\n    defaultMessage: 'Support'\n  },\n  newtpk: {\n    id: 'sidepanel_title_newtpk',\n    description: 'Sidepanel title for NewTopicView.',\n    defaultMessage: 'Start New Chat'\n  },\n  cred: {\n    id: 'sidepanel_title_cred',\n    description: 'Sidepanel title for ValidationView.',\n    defaultMessage: 'Confirm Credentials'\n  },\n  reset: {\n    id: 'sidepanel_title_reset',\n    description: 'Sidepanel title for PasswordResetView.',\n    defaultMessage: 'Reset Password'\n  },\n  archive: {\n    id: 'sidepanel_title_archive',\n    description: 'Sidepanel title for ContactsView-Archive.',\n    defaultMessage: 'Archived Chats'\n  },\n  blocked: {\n    id: 'sidepanel_title_blocked',\n    description: 'Sidepanel title for ContactsView-Blocked.',\n    defaultMessage: 'Blocked Chats'\n  }\n});\n\nclass SidepanelView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleLoginRequested = this.handleLoginRequested.bind(this);\n    this.handleNewTopic = this.handleNewTopic.bind(this);\n  }\n\n  handleLoginRequested(login, password) {\n    this.props.onLoginRequest(login, password);\n  }\n\n  handleNewTopic() {\n    this.props.onBasicNavigate('newtpk');\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const view = this.props.state || (this.props.myUserId ? 'contacts' : 'login');\n\n    let title, avatar;\n    if (view == 'contacts') {\n      title = this.props.title;\n      avatar = this.props.avatar ? this.props.avatar : true;\n    } else {\n      title = formatMessage(messages[view]);\n      avatar = false;\n    }\n\n    let onCancel;\n    if (['login', 'contacts'].indexOf(view) == -1) {\n      onCancel = this.props.onCancel;\n    }\n\n    return (\n      <div id=\"sidepanel\" className={this.props.hideSelf ? 'nodisplay' : null}>\n        <SideNavbar\n          state={view}\n          title={title}\n          avatar={avatar}\n          myUserId={this.props.myUserId}\n          onSignUp={this.props.onSignUp}\n          onSettings={this.props.onSettings}\n          onNewTopic={this.handleNewTopic}\n          onCancel={onCancel} />\n\n        <ErrorPanel\n          level={this.props.errorLevel}\n          text={this.props.errorText}\n          action={this.props.errorAction}\n          actionText={this.props.errorActionText}\n          onClearError={this.props.onError} />\n\n        <LoadSpinner show={this.props.loadSpinnerVisible} />\n\n        {view === 'login' ?\n          <LoginView\n            login={this.props.login}\n            disabled={this.props.loginDisabled}\n            onLogin={this.handleLoginRequested} /> :\n\n          view === 'register' ?\n          <CreateAccountView\n            onCreateAccount={this.props.onCreateAccount}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'settings' ?\n          <SettingsView\n            transport={this.props.transport}\n            serverAddress={this.props.serverAddress}\n            onCancel={this.props.onCancel}\n            onUpdate={this.props.onGlobalSettings} /> :\n\n          view === 'edit' ?\n          <EditAccountView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            onBasicNavigate={this.props.onBasicNavigate} /> :\n\n          view === 'general' ?\n          <AccGeneralView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            onUpdateAccount={this.props.onUpdateAccount}\n            onUpdateTags={this.props.onUpdateAccountTags}\n            onCredAdd={this.props.onCredAdd}\n            onCredDelete={this.props.onCredDelete}\n            onCredConfirm={this.props.onCredConfirm}\n            onBasicNavigate={this.props.onBasicNavigate}\n            onError={this.props.onError} /> :\n\n          view === 'notif' ?\n          <AccNotificationsView\n            messageSounds={this.props.messageSounds}\n            desktopAlerts={this.props.desktopAlerts}\n            desktopAlertsEnabled={this.props.desktopAlertsEnabled}\n            incognitoMode={this.props.incognitoMode}\n            onTogglePushNotifications={this.props.onTogglePushNotifications}\n            onToggleMessageSounds={this.props.onToggleMessageSounds}\n            onToggleIncognitoMode={this.props.onToggleIncognitoMode} /> :\n\n          view === 'security' ?\n          <AccSecurityView\n            tinode={this.props.tinode}\n            onUpdateAccount={this.props.onUpdateAccount}\n            onLogout={this.props.onLogout}\n            onDeleteAccount={this.props.onDeleteAccount}\n            onShowAlert={this.props.onShowAlert}\n            onShowBlocked={this.props.onShowBlocked} /> :\n\n          view === 'support' ?\n          <AccSupportView\n            serverAddress={this.props.serverAddress}\n            serverVersion={this.props.serverVersion} /> :\n\n          (view === 'contacts' || view == 'archive' || view == 'blocked') ?\n          <ContactsView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            connected={this.props.connected}\n            topicSelected={this.props.topicSelected}\n            archive={view == 'archive'}\n            blocked={view == 'blocked'}\n            chatList={this.props.chatList}\n            showContextMenu={this.props.showContextMenu}\n            onTopicSelected={this.props.onTopicSelected}\n            onShowArchive={this.props.onShowArchive} /> :\n\n          view === 'newtpk' ?\n          <NewTopicView\n            tinode={this.props.tinode}\n            searchResults={this.props.searchResults}\n            onInitFind={this.props.onInitFind}\n            onSearchContacts={this.props.onSearchContacts}\n            onCreateTopic={this.props.onCreateTopic}\n            onError={this.props.onError} /> :\n\n          view === 'cred' ?\n          <ValidationView\n            credCode={this.props.credCode}\n            credMethod={this.props.credMethod}\n            onSubmit={this.props.onValidateCredentials}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'reset' ?\n          <PasswordResetView\n            onRequest={this.props.onPasswordResetRequest}\n            onReset={this.props.onResetPassword} /> :\n          null}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SidepanelView);\n","import { KNOWN_HOSTS, DEFAULT_HOST } from '../config.js';\n\n// Detect server address from the URL\nexport function detectServerAddress() {\n  let host = DEFAULT_HOST;\n  if (typeof window.location == 'object') {\n    if (window.location.protocol == 'file:' || window.location.hostname == 'localhost') {\n      host = KNOWN_HOSTS.local;\n    } else if (window.location.hostname) {\n      host = window.location.hostname + (window.location.port ? ':' + window.location.port : '');\n    }\n  }\n  return host;\n}\n\n// Detect if the page is served over HTTPS.\nexport function isSecureConnection() {\n  if (typeof window.location == 'object') {\n    return window.location.protocol == 'https:';\n  }\n  return false;\n}\n\nexport function isLocalHost() {\n  if (typeof window.location == 'object') {\n    return window.location.hostname == 'localhost';\n  }\n  return false;\n}\n","// The top-level class to hold all functionality together.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport * as firebase from 'firebase/app';\nimport 'firebase/messaging';\n\nimport Tinode from 'tinode-sdk';\n\nimport Alert from '../widgets/alert.jsx';\nimport ContextMenu from '../widgets/context-menu.jsx';\n\nimport InfoView from './info-view.jsx';\nimport MessagesView from './messages-view.jsx';\nimport SidepanelView from './sidepanel-view.jsx';\n\nimport { API_KEY, APP_NAME, DEFAULT_P2P_ACCESS_MODE, LOGGING_ENABLED,\n  MEDIA_BREAKPOINT, RECEIVED_DELAY } from '../config.js';\nimport { PACKAGE_VERSION } from '../version.js';\nimport { base64ReEncode, makeImageUrl } from '../lib/blob-helpers.js';\nimport { detectServerAddress, isLocalHost, isSecureConnection } from '../lib/host-name.js';\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { secondsToTime } from '../lib/strformat.js'\nimport { updateFavicon } from '../lib/utils.js';\n\n// Sound to play on message received.\nconst POP_SOUND = new Audio('audio/msg.mp3');\n\nconst messages = defineMessages({\n  reconnect_countdown: {\n    id: 'reconnect_countdown',\n    defaultMessage: 'Disconnected. Reconnecting in {seconds}…',\n    description: 'Message shown when an app update is available.'\n  },\n  reconnect_now: {\n    id: 'reconnect_now',\n    defaultMessage: 'Try now',\n    description: 'Prompt for reconnecting now'\n  },\n  push_init_failed: {\n    id: 'push_init_failed',\n    defaultMessage: 'Failed to initialize push notifications',\n    description: 'Error message when push notifications have failed to initialize.'\n  },\n  invalid_security_token: {\n    id: 'invalid_security_token',\n    defaultMessage: 'Invalid security token',\n    description: 'Error message when resetting password.'\n  },\n  no_connection: {\n    id: 'no_connection',\n    defaultMessage: 'No connection',\n    description: 'Warning that the user is offline.'\n  },\n  code_doesnot_match: {\n    id: 'code_doesnot_match',\n    defaultMessage: 'Code does not match',\n    description: 'Error message when the credential validation code is incorrect.'\n  },\n  menu_item_info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  }\n});\n\nclass TinodeWeb extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = this.getBlankState();\n\n    this.handleResize = this.handleResize.bind(this);\n    this.handleHashRoute = this.handleHashRoute.bind(this);\n    this.handleOnline = this.handleOnline.bind(this);\n    this.checkForAppUpdate = this.checkForAppUpdate.bind(this);\n    this.handleVisibilityEvent = this.handleVisibilityEvent.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.handleLoginRequest = this.handleLoginRequest.bind(this);\n    this.handleConnected = this.handleConnected.bind(this);\n    this.handleAutoreconnectIteration = this.handleAutoreconnectIteration.bind(this);\n    this.doLogin = this.doLogin.bind(this);\n    this.handleCredentialsRequest = this.handleCredentialsRequest.bind(this);\n    this.handleLoginSuccessful = this.handleLoginSuccessful.bind(this);\n    this.handleDisconnect = this.handleDisconnect.bind(this);\n    this.tnMeMetaDesc = this.tnMeMetaDesc.bind(this);\n    this.tnMeContactUpdate = this.tnMeContactUpdate.bind(this);\n    this.tnMeSubsUpdated = this.tnMeSubsUpdated.bind(this);\n    this.resetContactList = this.resetContactList.bind(this);\n    this.tnData = this.tnData.bind(this);\n    this.tnInitFind = this.tnInitFind.bind(this);\n    this.tnFndSubsUpdated = this.tnFndSubsUpdated.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleTopicSelected = this.handleTopicSelected.bind(this);\n    this.handleHideMessagesView = this.handleHideMessagesView.bind(this);\n    this.handleSendMessage = this.handleSendMessage.bind(this);\n    this.handleNewChatInvitation = this.handleNewChatInvitation.bind(this);\n    this.handleNewAccount = this.handleNewAccount.bind(this);\n    this.handleNewAccountRequest = this.handleNewAccountRequest.bind(this);\n    this.handleUpdateAccountRequest = this.handleUpdateAccountRequest.bind(this);\n    this.handleUpdateAccountTagsRequest = this.handleUpdateAccountTagsRequest.bind(this);\n    this.handleToggleIncognitoMode = this.handleToggleIncognitoMode.bind(this);\n    this.handleSettings = this.handleSettings.bind(this);\n    this.handleGlobalSettings = this.handleGlobalSettings.bind(this);\n    this.handleShowArchive = this.handleShowArchive.bind(this);\n    this.handleShowBlocked = this.handleShowBlocked.bind(this);\n    this.handleToggleMessageSounds = this.handleToggleMessageSounds.bind(this);\n    this.handleCredAdd = this.handleCredAdd.bind(this);\n    this.handleCredDelete = this.handleCredDelete.bind(this);\n    this.handleCredConfirm = this.handleCredConfirm.bind(this);\n    this.initFCMessaging = this.initFCMessaging.bind(this);\n    this.togglePushToken = this.togglePushToken.bind(this);\n    this.requestPushToken = this.requestPushToken.bind(this);\n    this.handlePushMessage = this.handlePushMessage.bind(this);\n    this.handleSidepanelCancel = this.handleSidepanelCancel.bind(this);\n    this.handleStartTopicRequest = this.handleStartTopicRequest.bind(this);\n    this.handleNewTopicCreated = this.handleNewTopicCreated.bind(this);\n    this.handleTopicUpdateRequest = this.handleTopicUpdateRequest.bind(this);\n    this.handleChangePermissions = this.handleChangePermissions.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n    this.handleDeleteMessagesRequest = this.handleDeleteMessagesRequest.bind(this);\n    this.handleLeaveUnsubRequest = this.handleLeaveUnsubRequest.bind(this);\n    this.handleBlockTopicRequest = this.handleBlockTopicRequest.bind(this);\n    this.handleReportTopic = this.handleReportTopic.bind(this);\n    this.handleShowContextMenu = this.handleShowContextMenu.bind(this);\n    this.defaultTopicContextMenu = this.defaultTopicContextMenu.bind(this);\n    this.handleHideContextMenu = this.handleHideContextMenu.bind(this);\n    this.handleShowAlert = this.handleShowAlert.bind(this);\n    this.handleShowInfoView = this.handleShowInfoView.bind(this);\n    this.handleHideInfoView = this.handleHideInfoView.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleValidateCredentialsRequest = this.handleValidateCredentialsRequest.bind(this);\n    this.handlePasswordResetRequest = this.handlePasswordResetRequest.bind(this);\n    this.handleResetPassword = this.handleResetPassword.bind(this);\n    this.handleContextMenuAction = this.handleContextMenuAction.bind(this);\n  }\n\n  getBlankState() {\n    const settings = LocalStorageUtil.getObject('settings') || {};\n    const persist = !!LocalStorageUtil.getObject('keep-logged-in');\n\n    return {\n      connected: false,\n      // Connected and subscribed to 'me'\n      ready: false,\n      // Try to re-login on new connection.\n      autoLogin: false,\n      transport: settings.transport || null,\n      serverAddress: settings.serverAddress || detectServerAddress(),\n      serverVersion: \"no connection\",\n      // \"On\" is the default, so saving the \"off\" state.\n      messageSounds: !settings.messageSoundsOff,\n      incognitoMode: false,\n      desktopAlerts: persist && settings.desktopAlerts,\n      desktopAlertsEnabled: (isSecureConnection() || isLocalHost()) &&\n        (typeof firebase != 'undefined') && (typeof navigator != 'undefined') &&\n        (typeof FIREBASE_INIT != 'undefined'),\n      firebaseToken: persist ? LocalStorageUtil.getObject('firebase-token') : null,\n\n      applicationVisible: !document.hidden,\n\n      errorText: '',\n      errorLevel: null,\n      errorAction: undefined,\n      errorActionText: null,\n\n      sidePanelSelected: 'login',\n      sidePanelTitle: null,\n      sidePanelAvatar: null,\n      loadSpinnerVisible: false,\n\n      login: '',\n      password: '',\n      myUserId: null,\n      liveConnection: navigator.onLine,\n      topicSelected: '',\n      topicSelectedOnline: false,\n      topicSelectedAcs: null,\n      newTopicParams: null,\n      loginDisabled: false,\n      displayMobile: (window.innerWidth <= MEDIA_BREAKPOINT),\n      showInfoPanel: false,\n      mobilePanel: 'sidepanel',\n\n      contextMenuVisible: false,\n      contextMenuBounds: null,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuItems: [],\n\n      // Modal alert dialog.\n      alertVisible: false,\n      alertParams: {},\n\n      // Chats as shown in the ContactsView\n      chatList: [],\n      // Contacts returned by a search query.\n      searchResults: [],\n      // Merged results of a search query and p2p chats.\n      searchableContacts: [],\n      credMethod: undefined,\n      credCode: undefined\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    window.addEventListener('online', (e) => { this.handleOnline(true); });\n    window.addEventListener('offline', (e) => { this.handleOnline(false); });\n    window.addEventListener('hashchange', this.handleHashRoute);\n    // Process background notifications from the service worker.\n    const serviceWorkerChannel = new BroadcastChannel('tinode-sw');\n    serviceWorkerChannel.addEventListener('message', this.handlePushMessage);\n\n    // Window/tab visible or invisible for pausing timers.\n    document.addEventListener('visibilitychange', this.handleVisibilityEvent);\n\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n\n    const keepLoggedIn = LocalStorageUtil.getObject('keep-logged-in');\n\n    new Promise((resolve, reject) => {\n      this.tinode = TinodeWeb.tnSetup(this.state.serverAddress, this.state.transport,\n        this.props.intl.locale, keepLoggedIn, resolve);\n      this.tinode.onConnect = this.handleConnected;\n      this.tinode.onDisconnect = this.handleDisconnect;\n      this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n    }).then(() => {\n      // Initialize desktop alerts.\n      if (this.state.desktopAlertsEnabled) {\n        initFCMessaging().then(() => {\n          if (this.state.desktopAlerts) {\n            if (!this.state.firebaseToken) {\n              this.togglePushToken(true);\n            } else {\n              this.tinode.setDeviceToken(this.state.firebaseToken);\n            }\n          }\n        }).catch(() => {\n          // do nothing: handled earlier.\n          // catch needed to pervent unnecessary logging of error.\n        });\n      }\n\n      const token = keepLoggedIn ? LocalStorageUtil.getObject('auth-token') : undefined;\n\n      const parsedNav = HashNavigation.parseUrlHash(window.location.hash);\n      if (token) {\n        this.setState({autoLogin: true});\n\n        // When reading from storage, date is returned as string.\n        token.expires = new Date(token.expires);\n        this.tinode.setAuthToken(token);\n        this.tinode.connect().catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n        delete parsedNav.params.info;\n        delete parsedNav.params.tab;\n        parsedNav.path[0] = '';\n        HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsedNav.path, parsedNav.params));\n      } else if (!parsedNav.params.token) {\n        HashNavigation.navigateTo('');\n      }\n\n      this.readTimer = null;\n      this.readTimerCallback = null;\n\n      this.handleHashRoute();\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n    window.removeEventListener('hashchange', this.handleHashRoute);\n    document.removeEventListener('visibilitychange', this.handleVisibilityEvent);\n  }\n\n  // Setup transport (usually websocket) and server address. This will terminate connection with the server.\n  static tnSetup(serverAddress, transport, locale, persistentCache, onSetupCompleted) {\n    const tinode = new Tinode({appName: APP_NAME, host: serverAddress, apiKey: API_KEY, transport: transport,\n      secure: isSecureConnection(), persist: persistentCache}, onSetupCompleted);\n    tinode.setHumanLanguage(locale);\n    tinode.enableLogging(LOGGING_ENABLED, true);\n    return tinode;\n  }\n\n  // Notifiy Tinode that a push message was received from the server.\n  handlePushMessage(payload) {\n    if (payload.data.what == 'msg' && Tinode.isChannelTopicName(payload.data.topic)) {\n      // The last argument is a fake user Id: otherwise the update is seen as one from the current user.\n      this.tinode.oobNotification(payload.data.topic, payload.data.seq, 'fake-uid');\n    }\n  }\n\n  initFCMessaging() {\n    const {formatMessage, locale} = this.props.intl;\n    const onError = (msg, err) => {\n      console.log(msg, err);\n      this.handleError(formatMessage(messages.push_init_failed), 'err');\n      this.setState({desktopAlertsEnabled: false});\n    }\n\n    try {\n      this.fbPush = firebase.initializeApp(FIREBASE_INIT, APP_NAME).messaging();\n      this.fbPush.usePublicVapidKey(FIREBASE_INIT.messagingVapidKey);\n\n      return navigator.serviceWorker.register('/service-worker.js').then((reg) => {\n        this.checkForAppUpdate(reg);\n        this.fbPush.useServiceWorker(reg);\n        reg.active.postMessage(JSON.stringify({locale: locale, version: PACKAGE_VERSION}));\n        // Google could not be bothered to mention that\n        // onTokenRefresh is never called.\n        this.fbPush.onTokenRefresh(() => {\n          this.requestPushToken();\n        });\n\n        // FCM pushes for channels have to be handled even when the app is in the foreground.\n        this.fbPush.onMessage(this.handlePushMessage);\n\n        return reg;\n      }).catch((err) => {\n        // registration failed :(\n        onError(\"Failed to register service worker:\", err);\n        return new Promise.reject(err);\n      });\n    } catch (err) {\n      onError(\"Failed to initialize push notifications\", err);\n      return new Promise.reject(err);\n    }\n  }\n\n  handleResize() {\n    const mobile = document.documentElement.clientWidth <= MEDIA_BREAKPOINT;\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n    if (this.state.displayMobile != mobile) {\n      this.setState({displayMobile: mobile});\n    }\n  }\n\n  // Check if a newer version of TinodeWeb app is available at the server.\n  checkForAppUpdate(reg) {\n    reg.onupdatefound = () => {\n      const installingWorker = reg.installing;\n      installingWorker.onstatechange = () => {\n        if (installingWorker.state == 'installed' && navigator.serviceWorker.controller) {\n          const msg = <>\n            <FormattedMessage id=\"update_available\"\n              defaultMessage=\"Update available.\"\n              description=\"Message shown when an app update is available.\" /> <a href=\"\">\n              <FormattedMessage id=\"reload_update\"\n                defaultMessage=\"Reload\"\n                description=\"Call to action to reload application when update is available.\" />\n            </a>.</>;\n          this.handleError(msg, 'info');\n        }\n      }\n    }\n  }\n\n  // Handle for hashchange event: display appropriate panels.\n  handleHashRoute() {\n    const hash = HashNavigation.parseUrlHash(window.location.hash);\n    if (hash.path && hash.path.length > 0) {\n      // Left-side panel selector.\n      if (['register','settings','edit','notif','security','support','general',\n          'cred','reset','newtpk','archive','blocked','contacts',''].includes(hash.path[0])) {\n        this.setState({sidePanelSelected: hash.path[0]});\n      } else {\n        console.log(\"Unknown sidepanel view\", hash.path[0]);\n      }\n\n      // Topic for MessagesView selector.\n      if (hash.path.length > 1 && hash.path[1] != this.state.topicSelected) {\n        this.setState({\n          topicSelected: Tinode.topicType(hash.path[1]) ? hash.path[1] : null\n        });\n      }\n    } else {\n      // Empty hashpath\n      this.setState({sidePanelSelected: ''});\n    }\n\n    // Save validation credentials, if available.\n    if (hash.params.method) {\n      this.setState({ credMethod: hash.params.method });\n    }\n    if (hash.params.code) {\n      this.setState({ credCode: hash.params.code });\n    }\n\n    // Additional parameters of panels.\n    this.setState({\n      showInfoPanel: hash.params.info,\n      newTopicTabSelected: hash.params.tab\n    });\n  }\n\n  handleOnline(online) {\n    if (online) {\n      this.handleError();\n      clearInterval(this.reconnectCountdown);\n      this.tinode.reconnect();\n    } else {\n      this.handleError(this.props.intl.formatMessage(messages.no_connection), 'warn');\n    }\n    this.setState({liveConnection: online});\n  }\n\n  handleVisibilityEvent() {\n    this.setState({applicationVisible: !document.hidden});\n  }\n\n  handleError(err, level, action, actionText) {\n    this.setState({errorText: err, errorLevel: level, errorAction: action, errorActionText: actionText});\n  }\n\n  // User clicked Login button in the side panel.\n  handleLoginRequest(login, password) {\n    this.setState({\n      loginDisabled: true,\n      login: login,\n      password: password,\n      loadSpinnerVisible: true,\n      autoLogin: true\n    });\n    this.handleError('', null);\n\n    if (this.tinode.isConnected()) {\n      this.doLogin(login, password, {meth: this.state.credMethod, resp: this.state.credCode});\n    } else {\n      this.tinode.connect().catch((err) => {\n        // Socket error\n        this.setState({loginDisabled: false, autoLogin: false, loadSpinnerVisible: false});\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // Connection succeeded.\n  handleConnected() {\n    const params = this.tinode.getServerInfo();\n    this.setState({\n      serverVersion: params.ver + ' ' + (params.build ? params.build : 'none')\n    });\n\n    if (this.state.autoLogin) {\n      this.doLogin(this.state.login, this.state.password, {meth: this.state.credMethod, resp: this.state.credCode});\n    }\n  }\n\n  // Called for each auto-reconnect iteration.\n  handleAutoreconnectIteration(sec, prom) {\n    clearInterval(this.reconnectCountdown);\n\n    if (sec < 0) {\n      // Clear error\n      this.handleError();\n      return;\n    }\n\n    if (prom) {\n      // Reconnecting now\n      prom.then(() => {\n        // Reconnected: clear error\n        this.handleError();\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n      return;\n    }\n\n    const {formatMessage} = this.props.intl;\n    let count = sec / 1000;\n    count = count | count;\n    this.reconnectCountdown = setInterval(() => {\n      const timeLeft = (count > 99) ? secondsToTime(count) : count;\n      this.handleError(\n        formatMessage(messages.reconnect_countdown, {seconds: timeLeft}),\n        'warn',\n        () => {\n          clearInterval(this.reconnectCountdown);\n          this.tinode.reconnect();\n        },\n        formatMessage(messages.reconnect_now)\n      );\n      count -= 1;\n    }, 1000);\n  }\n\n  // Connection lost\n  handleDisconnect(err) {\n    this.setState({\n      connected: false,\n      ready: false,\n      topicSelectedOnline: false,\n      errorText: err && err.message ? err.message : \"Disconnected\",\n      errorLevel: err && err.message ? 'err' : 'warn',\n      loginDisabled: false,\n      contextMenuVisible: false,\n      serverVersion: \"no connection\"\n    });\n  }\n\n  doLogin(login, password, cred) {\n    if (this.tinode.isAuthenticated()) {\n      // Already logged in. Go to default screen.\n      HashNavigation.navigateTo('');\n      return;\n    }\n    // Sanitize and package credentail.\n    cred = Tinode.credential(cred);\n    // Try to login with login/password. If they are not available, try token. If no token, ask for login/password.\n    let promise = null;\n    const token = this.tinode.getAuthToken();\n    if (login && password) {\n      this.setState({password: null});\n      promise = this.tinode.loginBasic(login, password, cred);\n    } else if (token) {\n      promise = this.tinode.loginToken(token.token, cred);\n    }\n\n    if (promise) {\n      promise.then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text === 'validate credentials') {\n          this.setState({loadSpinnerVisible: false});\n          if (cred) {\n            this.handleError(this.props.intl.formatMessage(messages.code_doesnot_match), 'warn');\n          }\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful();\n        }\n      }).catch((err) => {\n        // Login failed, report error.\n        this.setState({\n          loginDisabled: false,\n          credMethod: undefined,\n          credCode: undefined,\n          loadSpinnerVisible: false,\n          autoLogin: false\n        });\n        this.handleError(err.message, 'err');\n        localStorage.removeItem('auth-token');\n        HashNavigation.navigateTo('');\n      });\n    } else {\n      // No login credentials provided.\n      // Make sure we are on the login page.\n      HashNavigation.navigateTo('');\n      this.setState({loginDisabled: false});\n    }\n  }\n\n  handleCredentialsRequest(params) {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    parsed.path[0] = 'cred';\n    parsed.params['method'] = params.cred[0];\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n  }\n\n  handleLoginSuccessful() {\n    this.handleError();\n\n    // Refresh authentication token.\n    if (LocalStorageUtil.getObject('keep-logged-in')) {\n      LocalStorageUtil.setObject('auth-token', this.tinode.getAuthToken());\n    }\n    // Logged in fine, subscribe to 'me' attaching callbacks from the contacts view.\n    const me = this.tinode.getMeTopic();\n    me.onMetaDesc = this.tnMeMetaDesc;\n    me.onContactUpdate = this.tnMeContactUpdate;\n    me.onSubsUpdated = this.tnMeSubsUpdated;\n    this.setState({\n      connected: true,\n      credMethod: undefined,\n      credCode: undefined,\n      myUserId: this.tinode.getCurrentUserID(),\n      autoLogin: true,\n    });\n    // Subscribe, fetch topic desc, the list of subscriptions. Messages are not fetched.\n    me.subscribe(\n      me.startMetaQuery().\n        withLaterSub().\n        withDesc().\n        withTags().\n        withCred().\n        build()\n      ).catch((err) => {\n        this.tinode.disconnect();\n        localStorage.removeItem('auth-token');\n        this.handleError(err.message, 'err');\n        HashNavigation.navigateTo('');\n      }).finally(() => {\n        this.setState({loadSpinnerVisible: false});\n      });\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, 'contacts'));\n  }\n\n  tnMeMetaDesc(desc) {\n    if (desc) {\n      if (desc.public) {\n        this.setState({\n          sidePanelTitle: desc.public.fn,\n          sidePanelAvatar: makeImageUrl(desc.public.photo)\n        });\n      }\n      if (desc.acs) {\n        this.setState({\n          incognitoMode: !desc.acs.isPresencer()\n        });\n      }\n    }\n  }\n\n  // Reactions to updates to the contact list.\n  tnMeContactUpdate(what, cont) {\n    if (what == 'on' || what == 'off') {\n      this.resetContactList();\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedOnline: (what == 'on')});\n      }\n    } else if (what == 'read') {\n      this.resetContactList();\n    } else if (what == 'msg') {\n      // Check if the topic is archived. If so, don't play a sound.\n      const topic = this.tinode.getTopic(cont.topic);\n      const archived = topic && topic.isArchived();\n\n      // New message received. Maybe the message is from the current user, then unread is 0.\n      if (cont.unread > 0 && this.state.messageSounds && !archived) {\n        // Skip update if the topic is currently open, otherwise the badge will annoyingly flash.\n        if (document.hidden || this.state.topicSelected != cont.topic) {\n          POP_SOUND.play();\n        }\n      }\n      // Reorder contact list to use possibly updated 'touched'.\n      this.resetContactList();\n    } else if (what == 'recv') {\n      // Explicitly ignoring \"recv\" -- it causes no visible updates to contact list.\n    } else if (what == 'gone' || what == 'unsub') {\n      // Topic deleted or user unsubscribed. Remove topic from view.\n      // If the currently selected topic is gone, clear the selection.\n      if (this.state.topicSelected == cont.topic) {\n        this.handleTopicSelected(null);\n      }\n      // Redraw without the deleted topic.\n      this.resetContactList();\n    } else if (what == 'acs') {\n      // Permissions changed. If it's for the currently selected topic,\n      // update the views.\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedAcs: cont.acs});\n      }\n    } else if (what == 'del') {\n      // TODO: messages deleted (hard or soft) -- update pill counter.\n    } else if (what == 'upd') {\n      // upd - handled by the SDK. Explicitly ignoring here.\n    } else {\n      // TODO(gene): handle other types of notifications:\n      // * ua -- user agent changes (maybe display a pictogram for mobile/desktop).\n      console.log(\"Unsupported (yet) presence update:\" + what + \" in: \" + cont.topic);\n    }\n  }\n\n  tnMeSubsUpdated(unused) {\n    this.resetContactList();\n  }\n\n  // Merge search results and contact list to create a single flat\n  // list of known contacts for GroupManager to use.\n  static prepareSearchableContacts(chatList, foundContacts) {\n    const merged = {};\n\n    // For chatList topics merge only p2p topics and convert them to the\n    // same format as foundContacts.\n    for (const c of chatList) {\n      if (Tinode.isP2PTopicName(c.topic)) {\n          merged[c.topic] = {\n            user: c.topic,\n            updated: c.updated,\n            public: c.public,\n            private: c.private,\n            acs: c.acs\n          };\n      }\n    }\n\n    // Add all foundCountacts if they have not been added already.\n    for (const c of foundContacts) {\n      if (!merged[c.user]) {\n        merged[c.user] = c;\n      }\n    }\n\n    return Object.values(merged);\n  }\n\n  resetContactList() {\n    const newState = {\n      chatList: []\n    };\n\n    if (!this.state.ready) {\n      newState.ready = true;\n    }\n\n    this.tinode.getMeTopic().contacts((c) => {\n      if (!c.topic && !c.user) {\n        // Contacts expect c.topic to be set.\n        c.topic = c.name;\n      }\n      newState.chatList.push(c);\n      if (this.state.topicSelected == c.topic) {\n        newState.topicSelectedOnline = c.online;\n        newState.topicSelectedAcs = c.acs;\n      }\n    });\n    // Merge search results and chat list.\n    newState.searchableContacts = TinodeWeb.prepareSearchableContacts(newState.chatList, this.state.searchResults);\n    this.setState(newState);\n  }\n\n  // Sending \"received\" notifications\n  tnData(data) {\n    const topic = this.tinode.getTopic(data.topic);\n    if (topic.msgStatus(data, true) >= Tinode.MESSAGE_STATUS_SENT && data.from != this.state.myUserId) {\n      clearTimeout(this.receivedTimer);\n      this.receivedTimer = setTimeout(() => {\n        this.receivedTimer = undefined;\n        topic.noteRecv(data.seq);\n      }, RECEIVED_DELAY);\n    }\n  }\n\n  /* Fnd topic: find contacts by tokens */\n  tnInitFind() {\n    const fnd = this.tinode.getFndTopic();\n    fnd.onSubsUpdated = this.tnFndSubsUpdated;\n    if (fnd.isSubscribed()) {\n      this.tnFndSubsUpdated();\n    } else {\n      fnd.subscribe(fnd.startMetaQuery().withSub().build()).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  tnFndSubsUpdated() {\n    const foundContacts = [];\n    // Don't attempt to create P2P topics which already exist. Server will reject the duplicates.\n    this.tinode.getFndTopic().contacts((s) => {\n      foundContacts.push(s);\n    });\n    this.setState({\n      searchResults: foundContacts,\n      searchableContacts: TinodeWeb.prepareSearchableContacts(this.state.chatList, foundContacts)\n    });\n  }\n\n  /** Called when the user enters a contact into the contact search field in the NewAccount panel\n    @param query {Array} is an array of contacts to search for\n   */\n  handleSearchContacts(query) {\n    const fnd = this.tinode.getFndTopic();\n    fnd.setMeta({desc: {public: query}}).then((ctrl) => {\n      return fnd.getMeta(fnd.startMetaQuery().withSub().build());\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  // User clicked on a contact in the side panel or deleted a contact.\n  handleTopicSelected(topicName) {\n    // Clear newTopicParams after use.\n    if (this.state.newTopicParams && this.state.newTopicParams._topicName != topicName) {\n      this.setState({\n        newTopicParams: null\n      });\n    }\n\n    if (topicName) {\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'topic-view',\n        showInfoPanel: false\n      });\n      // Different contact selected.\n      if (this.state.topicSelected != topicName) {\n        this.setState({\n          topicSelectedOnline: this.tinode.isTopicOnline(topicName),\n          topicSelectedAcs: this.tinode.getTopicAccessMode(topicName)\n        });\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', topicName));\n      }\n    } else {\n      // Currently selected contact deleted\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'sidepanel',\n        topicSelectedOnline: false,\n        topicSelectedAcs: null,\n        showInfoPanel: false\n      });\n\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic('', null));\n    }\n  }\n\n  // In mobile view user requested to show sidepanel\n  handleHideMessagesView() {\n    this.setState({\n      mobilePanel: 'sidepanel'\n    });\n    HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, null));\n  }\n\n  // User is sending a message, either plain text or a drafty object, possibly\n  // with attachments.\n  //  - msg - Drafty message with content\n  //  - promise - Promise to be resolved when the upload is completed\n  //  - uploader - for tracking progress\n  handleSendMessage(msg, promise, uploader) {\n    const topic = this.tinode.getTopic(this.state.topicSelected);\n\n    msg = topic.createMessage(msg, false);\n    // The uploader is used to show progress.\n    msg._uploader = uploader;\n\n    if (!topic.isSubscribed()) {\n      if (!promise) {\n        promise = Promise.resolve();\n      }\n      promise = promise.then(() => { return topic.subscribe(); });\n    }\n\n    if (promise) {\n      promise = promise.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n\n    topic.publishDraft(msg, promise)\n      .then((ctrl) => {\n        if (topic.isArchived()) {\n          return topic.archive(false);\n        }\n      })\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleNewChatInvitation(topicName, action) {\n    const topic = this.tinode.getTopic(topicName);\n    let response = null;\n    switch (action) {\n      case 'accept':\n        // Accept given permissions.\n        const mode = topic.getAccessMode().getGiven();\n        response = topic.setMeta({sub: {mode: mode}});\n        if (topic.isP2PType()) {\n          // For P2P topics change 'given' permission of the peer too.\n          // In p2p topics the other user has the same name as the topic.\n          response = response.then((ctrl) => {\n            topic.setMeta({sub: {user: topicName, mode: mode}});\n          });\n        }\n        break;\n      case 'delete':\n        // Ignore invitation by deleting it.\n        response = topic.delTopic(true);\n        break;\n      case 'block':\n        // Ban the topic making futher invites impossible.\n        // Just self-ban.\n        const am = topic.getAccessMode().updateWant('-JP').getWant();\n        response = topic.setMeta({sub: {mode: am}}).then((ctrl) => {\n          return this.handleTopicSelected(null);\n        });\n        break;\n      default:\n        console.log(\"Unknown invitation action\", '\"' + action + '\"\"');\n    }\n\n    if (response != null) {\n      response.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // User chose a Sign Up menu item.\n  handleNewAccount() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, 'register'));\n  }\n\n  // Actual registration of a new account.\n  handleNewAccountRequest(login_, password_, public_, cred_, tags_) {\n    // Clear old error, if any.\n    this.handleError();\n\n    this.tinode.connect(this.state.serverAddress)\n      .then(() => {\n        return this.tinode.createAccountBasic(login_, password_,\n          {public: public_, tags: tags_, cred: Tinode.credential(cred_)});\n      }).then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text == 'validate credentials') {\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful(this);\n        }\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleUpdateAccountRequest(password, pub, defacs) {\n    this.handleError();\n\n    if (pub || defacs) {\n      const params = {};\n      if (pub) {\n        params.public = pub;\n      }\n      if (defacs) {\n        params.defacs = defacs;\n      }\n      this.tinode.getMeTopic().setMeta({desc: params}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n    if (password) {\n      this.tinode.updateAccountBasic(null, this.tinode.getCurrentLogin(), password).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleToggleIncognitoMode(on) {\n    const me = this.tinode.getMeTopic();\n    const am = me.getAccessMode().updateWant(on ? '-P' : '+P').getWant();\n    me.setMeta({sub: {mode: am}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleUpdateAccountTagsRequest(tags) {\n    this.tinode.getMeTopic().setMeta({tags: tags})\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  // User chose Settings menu item.\n  handleSettings() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'edit' : 'settings'));\n  }\n\n  // User updated global parameters.\n  handleGlobalSettings(settings) {\n    const serverAddress = settings.serverAddress || this.state.serverAddress;\n    const transport = settings.transport || this.state.transport;\n    if (this.tinode) {\n      this.tinode.clearStorage();\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.tinode = TinodeWeb.tnSetup(serverAddress, transport, this.props.intl.locale,\n      LocalStorageUtil.getObject('keep-logged-in'));\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n\n    this.setState({\n      serverAddress: serverAddress,\n      transport: transport\n    });\n    LocalStorageUtil.setObject('settings', {\n      serverAddress: serverAddress,\n      transport: transport\n    });\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, ''));\n  }\n\n  // User chose 'Archived chats'.\n  handleShowArchive() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'archive' : ''));\n  }\n\n  // User viewes 'Blocked chats'.\n  handleShowBlocked() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'blocked' : ''));\n  }\n\n  togglePushToken(enabled) {\n    if (enabled) {\n      if (!this.state.firebaseToken) {\n        const fcm = this.fbPush ?\n          new Promise().resolve() :\n          this.initFCMessaging();\n        fcm.then(() => {\n          return this.fbPush.requestPermission();\n        }).then(() => {\n          this.requestPushToken();\n        }).catch((err) => {\n          console.log(\"Failed to get notification permission.\", err);\n          this.handleError(err.message, 'err');\n          this.setState({desktopAlerts: false, firebaseToken: null});\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        });\n      } else {\n        this.setState({desktopAlerts: true});\n        if (LocalStorageUtil.getObject('keep-logged-in')) {\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n        }\n      }\n    } else if (this.state.firebaseToken && this.fbPush) {\n      this.fbPush.deleteToken(this.state.firebaseToken).catch((err) => {\n        console.log(\"Unable to delete token.\", err);\n      }).finally(() => {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        localStorage.removeItem('firebase-token');\n        this.setState({desktopAlerts: false, firebaseToken: null});\n        // Inform the server that the token was deleted.\n        this.tinode.setDeviceToken(null);\n      });\n    } else {\n      this.setState({desktopAlerts: false, firebaseToken: null});\n      LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n    }\n  }\n\n  requestPushToken() {\n    this.fbPush.getToken().then((refreshedToken) => {\n      const persist = LocalStorageUtil.getObject('keep-logged-in');\n      if (refreshedToken != this.state.firebaseToken) {\n        this.tinode.setDeviceToken(refreshedToken);\n        if (persist) {\n          LocalStorageUtil.setObject('firebase-token', refreshedToken);\n        }\n      }\n      this.setState({firebaseToken: refreshedToken, desktopAlerts: true});\n      if (persist) {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n      }\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n      console.log(\"Failed to retrieve firebase token\", err);\n    });\n  }\n\n  handleToggleMessageSounds(enabled) {\n    this.setState({messageSounds: enabled});\n    LocalStorageUtil.updateObject('settings', {\n      messageSoundsOff: !enabled\n    });\n  }\n\n  handleCredAdd(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.setMeta({cred: {meth: method, val: value}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredDelete(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.delCredential(method, value).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredConfirm(method, response) {\n    this.handleCredentialsRequest({cred: [method]});\n  }\n\n  // User clicked Cancel button in Setting or Sign Up panel.\n  handleSidepanelCancel() {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    let path = '';\n    if (['security','support','general','notif'].includes(parsed.path[0])) {\n      path = 'edit';\n    } else if ('blocked' == parsed.path[0]) {\n      path = 'security';\n    } else if (this.state.myUserId) {\n      path = 'contacts';\n    }\n    parsed.path[0] = path;\n    if (parsed.params) {\n      delete parsed.params.code;\n      delete parsed.params.method;\n      delete parsed.params.tab;\n    }\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n    this.setState({errorText: '', errorLevel: null});\n  }\n\n  // Basic nagigator by hash value. No need to bind to this.\n  basicNavigator(hash) {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, hash));\n  }\n\n  // Request to start a topic, new or selected from search results, or \"by ID\".\n  handleStartTopicRequest(topicName, pub, priv, tags, isChannel) {\n    // Check if topic is indeed new. If not, launch it.\n    if (topicName && this.tinode.isTopicCached(topicName)) {\n      this.handleTopicSelected(topicName);\n      return;\n    }\n\n    const params = {};\n    if (Tinode.isP2PTopicName(topicName)) {\n      // Because we are initialing the subscription, set 'want' to all permissions.\n      params.sub = {mode: DEFAULT_P2P_ACCESS_MODE};\n      // Give the other user all permissions too.\n      params.desc = {defacs: {auth: DEFAULT_P2P_ACCESS_MODE}};\n    } else {\n      topicName = topicName || this.tinode.newGroupTopicName(isChannel);\n      params.desc = {public: pub, private: {comment: priv}};\n      params.tags = tags;\n    }\n    params._topicName = topicName;\n    this.setState({newTopicParams: params}, () => {this.handleTopicSelected(topicName)});\n  }\n\n  // New topic was creted, here is the new topic name.\n  handleNewTopicCreated(oldName, newName) {\n    if (this.state.topicSelected == oldName && oldName != newName) {\n      // If the current URl contains the old topic name, replace it with new.\n      // Update the name of the selected topic first so the navigator doen't clear\n      // the state.\n      this.setState({topicSelected: newName}, () => {\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', newName));\n      });\n    }\n  }\n\n  handleTopicUpdateRequest(topicName, pub, priv, permissions) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const params = {};\n      if (pub) {\n        params.public = pub;\n      }\n      if (priv) {\n        params.private = (priv === Tinode.DEL_CHAR) ?\n          Tinode.DEL_CHAR : {comment: priv};\n      }\n      if (permissions) {\n        params.defacs = permissions;\n      }\n      topic.setMeta({desc: params}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleChangePermissions(topicName, mode, uid) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const am = topic.getAccessMode();\n      if (uid) {\n        am.updateGiven(mode);\n        mode = am.getGiven();\n      } else {\n        am.updateWant(mode);\n        mode = am.getWant();\n      }\n      topic.setMeta({sub: {user: uid, mode: mode}}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleTagsUpdated(topicName, tags) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      topic.setMeta({tags: tags}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleLogout() {\n    updateFavicon(0);\n\n    // Remove stored data.\n    localStorage.removeItem('auth-token');\n    localStorage.removeItem('firebase-token');\n    localStorage.removeItem('settings');\n    if (this.state.firebaseToken) {\n      this.fbPush.deleteToken(this.state.firebaseToken)\n    }\n\n    if (this.tinode) {\n      this.tinode.clearStorage();\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.setState(this.getBlankState());\n\n    this.tinode = TinodeWeb.tnSetup(this.state.serverAddress,\n      this.state.transport, this.props.intl.locale, LocalStorageUtil.getObject('keep-logged-in'));\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    HashNavigation.navigateTo('');\n  }\n\n  handleDeleteAccount() {\n    this.tinode.delCurrentUser(true).then((ctrl) => {\n      this.handleLogout();\n    });\n  }\n\n  handleDeleteMessagesRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Request hard-delete all messages.\n    topic.delMessagesAll(true).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleLeaveUnsubRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.leave(true).then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleBlockTopicRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleReportTopic(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Publish spam report.\n    this.tinode.publish(Tinode.TOPIC_SYS, Tinode.Drafty.attachJSON(null, {\n      'action': 'report',\n      'target': topicName\n    }));\n\n    // Remove J and P permissions.\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleShowContextMenu(params, menuItems) {\n    this.setState({\n      contextMenuVisible: true,\n      contextMenuClickAt: {x: params.x, y: params.y},\n      contextMenuParams: params,\n      contextMenuItems: menuItems || this.defaultTopicContextMenu(params.topicName),\n      contextMenuBounds: ReactDOM.findDOMNode(this).getBoundingClientRect()\n    });\n  }\n\n  defaultTopicContextMenu(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n\n    let muted = false, blocked = false, self_blocked = false, subscribed = false, deleter = false, archived = false;\n    if (topic) {\n      subscribed = topic.isSubscribed();\n      archived = topic.isArchived();\n\n      const acs = topic.getAccessMode();\n      if (acs) {\n        muted = acs.isMuted();\n        blocked = !acs.isJoiner();\n        self_blocked = !acs.isJoiner('want');\n        deleter = acs.isDeleter();\n      }\n    }\n\n    return [\n      subscribed ? {\n        title: this.props.intl.formatMessage(messages.menu_item_info),\n        handler: this.handleShowInfoView\n      } : null,\n      subscribed ? 'messages_clear' : null,\n      subscribed && deleter ? 'messages_clear_hard' : null,\n      muted ? (blocked ? null : 'topic_unmute') : 'topic_mute',\n      self_blocked ? 'topic_unblock' : 'topic_block',\n      !archived ? 'topic_archive' : null,\n      'topic_delete'\n    ];\n  }\n\n  handleHideContextMenu() {\n    this.setState({\n      contextMenuVisible: false,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuBounds: null\n    });\n  }\n\n  handleContextMenuAction(action, promise, params) {\n    if (action == 'topic_archive') {\n      if (promise && params.topicName && params.topicName == this.state.topicSelected) {\n        promise.then(() => {\n          this.handleTopicSelected(null);\n        });\n      }\n    }\n  }\n\n  handleShowAlert(title, content, onConfirm, confirmText, onReject, rejectText) {\n    this.setState({\n      alertVisible: true,\n      alertParams: {\n        title: title,\n        content: content,\n        onConfirm: onConfirm,\n        confirm: confirmText,\n        onReject: onReject,\n        reject: rejectText\n      }\n    });\n  }\n\n  handleShowInfoView() {\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'info', true));\n    this.setState({showInfoPanel: true});\n  }\n\n  handleHideInfoView() {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'info'));\n    this.setState({showInfoPanel: false});\n  }\n\n  handleMemberUpdateRequest(topicName, added, removed) {\n    if (!topicName) {\n      return;\n    }\n\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    if (added && added.length > 0) {\n      added.map((uid) => {\n        topic.invite(uid, null).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n\n    if (removed && removed.length > 0) {\n      removed.map((uid) => {\n        topic.delSubscription(uid).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n  }\n\n  handleValidateCredentialsRequest(cred, code) {\n    if (this.tinode.isAuthenticated()) {\n      const me = this.tinode.getMeTopic();\n      me.setMeta({cred: {meth: cred, resp: code}})\n        .then(() => {\n          HashNavigation.navigateTo('');\n        })\n        .catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n    } else {\n      this.setState({credMethod: cred, credCode: code});\n      this.doLogin(null, null, {meth: cred, resp: code});\n    }\n  }\n\n  handlePasswordResetRequest(method, value) {\n    // If already connected, connnect() will return a resolved promise.\n    this.tinode.connect()\n      .then(() => {\n        return this.tinode.requestResetAuthSecret('basic', method, value);\n      })\n      .catch((err) => {\n        // Socket error\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleResetPassword(scheme, newPassword, token) {\n    token = base64ReEncode(token);\n    if (!token) {\n      this.handleError(this.props.intl.formatMessage(messages.invalid_security_token), 'err');\n    } else {\n      this.tinode.connect()\n        .then(() => {\n          return this.tinode.updateAccountBasic(null, null, newPassword, {token: token});\n        })\n        .catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"app-container\">\n        {this.state.contextMenuVisible ?\n          <ContextMenu\n            tinode={this.tinode}\n            bounds={this.state.contextMenuBounds}\n            clickAt={this.state.contextMenuClickAt}\n            params={this.state.contextMenuParams}\n            items={this.state.contextMenuItems}\n            hide={this.handleHideContextMenu}\n            onShowAlert={this.handleShowAlert}\n            onAction={this.handleContextMenuAction}\n            onTopicRemoved={(topicName) => {\n              if (topicName == this.state.topicSelected) {\n                this.handleTopicSelected(null);\n              }\n            }}\n            onError={this.handleError} />\n          :\n          null\n        }\n        <Alert\n          visible={this.state.alertVisible}\n          title={this.state.alertParams.title}\n          content={this.state.alertParams.content}\n          onReject={this.state.alertParams.onReject ? (() => { this.setState({alertVisible: false}); }) : null}\n          reject={this.state.alertParams.reject}\n          onConfirm={() => { this.setState({alertVisible: false}); this.state.alertParams.onConfirm(); }}\n          confirm={this.state.alertParams.confirm}\n          />\n        <SidepanelView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          displayMobile={this.state.displayMobile}\n          hideSelf={this.state.displayMobile && this.state.mobilePanel !== 'sidepanel'}\n          state={this.state.sidePanelSelected}\n          title={this.state.sidePanelTitle}\n          avatar={this.state.sidePanelAvatar}\n          login={this.state.login}\n          myUserId={this.state.myUserId}\n          loginDisabled={this.state.loginDisabled}\n          loadSpinnerVisible={this.state.loadSpinnerVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          topicSelected={this.state.topicSelected}\n          chatList={this.state.chatList}\n          credMethod={this.state.credMethod}\n          credCode={this.state.credCode}\n\n          transport={this.state.transport}\n          messageSounds={this.state.messageSounds}\n          desktopAlerts={this.state.desktopAlerts}\n          desktopAlertsEnabled={this.state.desktopAlertsEnabled}\n          incognitoMode={this.state.incognitoMode}\n          serverAddress={this.state.serverAddress}\n          serverVersion={this.state.serverVersion}\n\n          onGlobalSettings={this.handleGlobalSettings}\n          onSignUp={this.handleNewAccount}\n          onSettings={this.handleSettings}\n          onBasicNavigate={this.basicNavigator}\n          onLoginRequest={this.handleLoginRequest}\n          onCreateAccount={this.handleNewAccountRequest}\n          onUpdateAccount={this.handleUpdateAccountRequest}\n          onUpdateAccountTags={this.handleUpdateAccountTagsRequest}\n          onTogglePushNotifications={this.togglePushToken}\n          onToggleMessageSounds={this.handleToggleMessageSounds}\n          onToggleIncognitoMode={this.handleToggleIncognitoMode}\n          onCredAdd={this.handleCredAdd}\n          onCredDelete={this.handleCredDelete}\n          onCredConfirm={this.handleCredConfirm}\n          onTopicSelected={this.handleTopicSelected}\n          onCreateTopic={this.handleStartTopicRequest}\n          onLogout={this.handleLogout}\n          onDeleteAccount={this.handleDeleteAccount}\n          onShowAlert={this.handleShowAlert}\n          onCancel={this.handleSidepanelCancel}\n          onError={this.handleError}\n          onValidateCredentials={this.handleValidateCredentialsRequest}\n          onPasswordResetRequest={this.handlePasswordResetRequest}\n          onResetPassword={this.handleResetPassword}\n          onShowArchive={this.handleShowArchive}\n          onShowBlocked={this.handleShowBlocked}\n\n          onInitFind={this.tnInitFind}\n          searchResults={this.state.searchResults}\n          onSearchContacts={this.handleSearchContacts}\n\n          showContextMenu={this.handleShowContextMenu} />\n\n        <MessagesView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          ready={this.state.ready}\n          online={this.state.topicSelectedOnline}\n          acs={this.state.topicSelectedAcs}\n          displayMobile={this.state.displayMobile}\n          viewportWidth={this.state.viewportWidth}\n          viewportHeight={this.state.viewportHeight}\n          hideSelf={this.state.displayMobile &&\n            (this.state.mobilePanel !== 'topic-view' || this.state.showInfoPanel)}\n          topic={this.state.topicSelected}\n          myUserId={this.state.myUserId}\n          serverVersion={this.state.serverVersion}\n          serverAddress={this.state.serverAddress}\n          applicationVisible={this.state.applicationVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          newTopicParams={this.state.newTopicParams}\n\n          onHideMessagesView={this.handleHideMessagesView}\n          onData={this.tnData}\n          onError={this.handleError}\n          onNewTopicCreated={this.handleNewTopicCreated}\n          showContextMenu={this.handleShowContextMenu}\n          onChangePermissions={this.handleChangePermissions}\n          onNewChat={this.handleNewChatInvitation}\n          sendMessage={this.handleSendMessage} />\n\n        {this.state.showInfoPanel ?\n          <InfoView\n            tinode={this.tinode}\n            connected={this.state.connected}\n            displayMobile={this.state.displayMobile}\n            topic={this.state.topicSelected}\n            searchableContacts={this.state.searchableContacts}\n            myUserId={this.state.myUserId}\n\n            errorText={this.state.errorText}\n            errorLevel={this.state.errorLevel}\n            errorAction={this.state.errorAction}\n            errorActionText={this.state.errorActionText}\n\n            onTopicDescUpdate={this.handleTopicUpdateRequest}\n            onCancel={this.handleHideInfoView}\n            onShowAlert={this.handleShowAlert}\n            onChangePermissions={this.handleChangePermissions}\n            onMemberUpdateRequest={this.handleMemberUpdateRequest}\n            onDeleteMessages={this.handleDeleteMessagesRequest}\n            onLeaveTopic={this.handleLeaveUnsubRequest}\n            onBlockTopic={this.handleBlockTopicRequest}\n            onReportTopic={this.handleReportTopic}\n            onAddMember={this.handleManageGroupMembers}\n            onTopicTagsUpdate={this.handleTagsUpdated}\n            onInitFind={this.tnInitFind}\n            onError={this.handleError}\n\n            showContextMenu={this.handleShowContextMenu}\n            />\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(TinodeWeb);\n","// Put all packages together.\n// Used to generate umd/index.prod.js\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { IntlProvider } from 'react-intl';\n\nimport allMessages from './messages.json';\nimport TinodeWeb from './views/tinode-web.jsx';\nimport HashNavigation from './lib/navigation.js';\n\n// Detect human language to use in the UI:\n//  Check parameters from URL hash #?hl=ru, then browser, then use 'en' as a fallback.\nconst { params } = HashNavigation.parseUrlHash(window.location.hash);\nconst language = (params && params.hl) ||\n  (navigator.languages && navigator.languages[0]) ||\n  navigator.language ||\n  navigator.userLanguage ||\n  'en';\n\n// Get the base language 'en' from a more specific 'en_GB' or 'en-US' as a partial fallback.\nconst baseLanguage = language.toLowerCase().split(/[-_]/)[0];\n\n// Try the full locale first, then the locale without the region code, fallback to 'en'.\nconst messages =\n  allMessages[language] ||\n  allMessages[baseLanguage] ||\n  allMessages.en;\n\nReactDOM.render(\n  <IntlProvider locale={language} messages={messages} textComponent={React.Fragment}>\n    <TinodeWeb />\n  </IntlProvider>,\n  document.getElementById('mountPoint')\n);\n","// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// startup\n// Load entry module and return exports\n// This entry module doesn't tell about it's top-level declarations so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[619](0, __webpack_exports__, __webpack_require__);\n"],"sourceRoot":""}