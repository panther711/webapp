{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"React\"","webpack:///external \"ReactIntl\"","webpack:///external \"Tinode\"","webpack:///external \"ReactDOM\"","webpack:///external \"firebase\"","webpack:///external [\"firebase\",\"messaging\"]","webpack:///./src/widgets/alert.jsx","webpack:///./src/version.js","webpack:///./src/config.js","webpack:///./src/lib/navigation.js","webpack:///./src/widgets/context-menu.jsx","webpack:///./src/lib/strformat.js","webpack:///./src/widgets/letter-tile.jsx","webpack:///./src/lib/blob-helpers.js","webpack:///./src/widgets/avatar-upload.jsx","webpack:///./src/widgets/checkbox.jsx","webpack:///./src/widgets/contact-badges.jsx","webpack:///./src/widgets/unread-badge.jsx","webpack:///./src/widgets/contact.jsx","webpack:///./src/widgets/contact-action.jsx","webpack:///./src/widgets/contact-list.jsx","webpack:///./src/widgets/menu-cancel.jsx","webpack:///./src/widgets/error-panel.jsx","webpack:///./src/widgets/chip.jsx","webpack:///./src/widgets/chip-input.jsx","webpack:///./src/widgets/group-manager.jsx","webpack:///./src/widgets/visible-password.jsx","webpack:///./src/widgets/in-place-edit.jsx","webpack:///./src/widgets/more-button.jsx","webpack:///./src/widgets/permissions-editor.jsx","webpack:///./src/lib/utils.js","webpack:///./src/widgets/tag-manager.jsx","webpack:///./src/views/info-view.jsx","webpack:///./src/widgets/file-progress.jsx","webpack:///./src/widgets/attachment.jsx","webpack:///./src/widgets/received-marker.jsx","webpack:///./src/widgets/chat-message.jsx","webpack:///./src/widgets/group-subs.jsx","webpack:///./src/widgets/image-preview.jsx","webpack:///./src/widgets/Invitation.jsx","webpack:///./src/widgets/load-spinner.jsx","webpack:///./src/views/logo-view.jsx","webpack:///./src/widgets/send-message.jsx","webpack:///./src/views/messages-view.jsx","webpack:///./src/widgets/menu-contacts.jsx","webpack:///./src/widgets/menu-start.jsx","webpack:///./src/widgets/side-navbar.jsx","webpack:///./src/views/contacts-view.jsx","webpack:///./src/lib/local-storage.js","webpack:///./src/views/create-account-view.jsx","webpack:///./src/views/edit-account-view.jsx","webpack:///./src/views/login-view.jsx","webpack:///./src/widgets/new-topic-by-id.jsx","webpack:///./src/widgets/new-topic-group.jsx","webpack:///./src/widgets/search-contacts.jsx","webpack:///./src/views/new-topic-view.jsx","webpack:///./src/views/password-reset-view.jsx","webpack:///./src/widgets/host-selector.jsx","webpack:///./src/views/settings-view.jsx","webpack:///./src/views/validation-view.jsx","webpack:///./src/views/sidepanel-view.jsx","webpack:///./src/lib/host-name.js","webpack:///./src/views/tinode-web.jsx","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","React","ReactIntl","Tinode","ReactDOM","firebase","Alert","PureComponent","this","props","visible","className","title","content","onReject","onClick","reject","id","onConfirm","confirm","APP_NAME","KNOWN_HOSTS","hosted","local","DEFAULT_HOST","DEFAULT_P2P_ACCESS_MODE","MAX_INBAND_ATTACHMENT_SIZE","HashNavigation","hash","parts","split","params","path","substr","forEach","part","item","decodeURIComponent","url","window","location","join","args","push","length","parsed","parseUrlHash","composeUrlHash","sidepanel","topic","info","messages","defineMessages","clear_messages","clear_for_all","delete_for_all","mute","unmute","topic_delete","topic_delete_warning","unblock","block","topic_block_warning","member_delete","archive","ContextMenu","Component","document","addEventListener","handlePageClick","handleEscapeKey","removeEventListener","e","findDOMNode","contains","target","preventDefault","stopPropagation","hide","keyCode","items","currentTarget","dataset","MenuItems","onAction","handler","onError","console","log","all","hard","errorHandler","tinode","getTopic","topicName","cancelSend","seq","delMessagesAll","delMessagesList","catch","err","message","result","updateMode","user","count","menu","map","handleClick","data-id","vSize","position","left","bounds","right","clickAt","x","top","bottom","y","style","formatMessage","intl","onShowAlert","deleteMessages","delete","topicPermissionSetter","then","ctrl","onTopicRemoved","delTopic","delSubscription","injectIntl","shortDateFormat","locale","navigator","userLanguage","language","now","Date","getFullYear","getMonth","getDate","toLocaleTimeString","hour12","hour","minute","toLocaleDateString","month","day","year","bytesToHumanSize","bytes","sizes","bucket","Math","min","floor","log2","pow","round","toFixed","LetterTile","avatar","isGroup","topicType","iconColor","abs","charCodeAt","stringHash","trim","letter","charAt","alt","src","onerror","SUPPORTED_IMAGE_FORMATS","MIME_EXTENSIONS","makeImageUrl","photo","type","data","fitImageSize","width","height","maxWidth","maxHeight","forceSquare","scale","size","dstWidth","dstHeight","srcWidth","srcHeight","xoffset","yoffset","fileNameForMime","fname","mime","idx","indexOf","ext","at","lastIndexOf","substring","imageFileScaledToBase64","file","onSuccess","img","Image","crossOrigin","onload","dim","canvas","createElement","ctx","getContext","imageSmoothingEnabled","drawImage","imageBits","toDataURL","getMimeType","quality","base64DecodedLen","URL","createObjectURL","imageFileToBase64","reader","FileReader","readAsDataURL","fileToBase64","header","exec","AvatarUpload","prevProps","setState","dataUrl","files","base64bits","du","onImageChanged","randId","random","readOnly","state","href","uid","accept","onChange","handleFileUpload","htmlFor","CheckBox","checked","handleChange","icon_mapping","ContactBadges","badges","b","icon","color","UnreadBadge","Contact","onSelected","index","acs","showContextMenu","pageY","pageX","online","slice","icon_badges","showMode","getMode","isMuted","isJoiner","showCheckmark","selected","showOnline","unread","comment","handleContextClick","ContactAction","action","values","badge_you","badge_owner","ContactList","Array","isArray","topicSelected","contactNodes","contactsCount","contacts","filterFunc","filter","private","toLowerCase","public","fn","myUserId","isOwner","showUnread","connected","onTopicSelected","noScroll","dangerouslySetInnerHTML","__html","emptyListMessage","MenuCancel","onCancel","ErrorPanel","level","show","onClearError","warn","text","whiteSpace","actionText","Chip","invalid","noAvatar","required","handleCancel","ChipInput","placeholder","chips","prompt","sortedChips","sortChips","staticMembers","chipIndex","indexChips","keep","normal","includes","concat","prevState","deriveStateFromProps","input","removed","onChipRemoved","removeChipAt","focused","onFocusLost","onEnter","handleChipCancel","undefined","avatarDisabled","handleTextInput","onFocus","handleFocusGained","onBlur","handleFocusLost","onKeyDown","handleKeyDown","autoFocus","no_contacts","contacts_not_found","GroupManager","members","delta","present","keepInitial","requiredMember","stat","sel","userId","status","selectedContacts","splice","val","msg","query","contactFilter","noContactsMessage","instance","added","keys","k","onSubmit","defaultMessage","handleContactFilter","handleMemberRemoved","doContactFiltering","handleContactSelected","handleSubmit","indexMembers","keepInitialMembers","VisiblePassword","onFinished","handleEditingFinished","setTimeout","activeElement","tabIndex","autoComplete","handeTextChange","handleVisibility","InPlaceEdit","newValue","initialValue","active","focus","event","checkValidity","fieldType","spanText","spanClass","handlePasswordFinished","handleStartEditing","MoreButton","open","onToggle","handleToggle","PermissionsEditor","replace","sort","names","joiner","writer","preser","approver","sharer","deleter","owner","skip","compare","userTitle","userAvatar","modeTitle","compareTitle","updateFavicon","oldIcon","getElementById","head","getElementsByTagName","newIcon","rel","removeChild","appendChild","vcard","imageDataUrl","card","dataStart","arrayEqual","a","sanitizeUrl","allowedSchemes","test","schemes","RegExp","TagManager","nextProps","tags","activated","tagInput","last","handleAddTag","tag","onTagsChanged","add_tags_prompt","handleRemoveTag","handleTagInput","defautMessage","description","requested","granted","edit_permissions","other_user","clear_messages_warning","delete_messages","delete_messages_warning","leave_chat","leave_chat_warning","block_contact","block_contact_warning","report_chat","report_chat_warning","InfoView","onMetaDesc","previousMetaDesc","previousSubsUpdated","onSubsUpdated","getType","previousTagsUpdated","onTagsUpdated","resetDesc","resetSubs","newState","contactList","user2","subscriber","modeGiven2","getGiven","modeWant2","getWant","subscribers","sub","defacs","getDefaultAccess","getAccessMode","admin","isAdmin","isSharer","isDeleter","muted","fullName","address","groupTopic","showMemberPanel","access","modeGiven","modeWant","auth","anon","getMeta","startMetaQuery","withTags","build","desc","subs","onTopicDescUpdate","DEL_CHAR","ignored","onChangePermissions","perm","showPermissionEditorFor","userPermissionsEdited","which","toEdit","toCompare","toSkip","titleEdit","titleCompare","userPermissionsTitle","userPermissionsAvatar","editedPermissions","immutablePermissions","editedPermissionsTitle","immutablePermissionsTitle","editedPermissionsSkipped","onInitFind","onMemberUpdateRequest","onDeleteMessages","onLeaveTopic","onBlockTopic","onReportTopic","selectedContact","moreInfoExpanded","onTopicTagsUpdate","menuItems","handleLaunchPermissionsEditor","displayMobile","errorLevel","errorText","searchableContacts","handleHideAddMembers","handleMemberUpdateRequest","handlePermissionsChanged","handleHidePermissionsEditor","handleFullNameUpdate","private_placeholder","handlePrivateUpdate","handleImageChanged","handleMuted","more","handleMoreInfo","handleTagsUpdated","handleDeleteMessages","handleLeave","handleBlock","handleReport","handleShowAddMembers","no_members","handleMemberSelected","handleContextMenu","FileProgress","progress","Attachment","filename","mimetype","downloader","getLargeFileHelper","download","loaded","uploader","onCancelUpload","cancel","helperFunc","isUrlRelative","downloadUrl","downloadFile","ReceivedMarker","timestamp","received","MESSAGE_STATUS_SENDING","sending","MESSAGE_STATUS_FAILED","failed","marker","MESSAGE_STATUS_SENT","MESSAGE_STATUS_RECEIVED","MESSAGE_STATUS_READ","ChatMessage","onImagePreview","resp","act","ref","onFormResponse","ratio","sideClass","sequence","response","bubbleClass","fullDisplay","userFrom","attachments","mimeType","Drafty","getContentType","att","getDownloadUrl","isUploading","getEntitySize","handleCancelUpload","format","draftyFormatter","userName","notFound","onProgress","handleProgress","handlePreviewImage","handleFormButtonClick","el","tagName","attr","attrValue","viewportWidth","REM_SIZE","sanitizedUrl","sanitizeImageUrl","inner","Children","child","GroupSubs","usersOnline","totalCount","countToShow","some","overflow","ImagePreview","node","getBoundingClientRect","maxlength","max","onClose","assignWidth","Invitation","evt","handleButtonAction","LoadSpinner","LogoView","version","getLibrary","hideSelf","serverVersion","serverAddress","SendMessage","messageEditArea","handlePasteEvent","disabled","onImageSuccess","onAttachmentSuccess","clipboardData","originalEvent","kind","getAsFile","filePasted","bits","sendMessage","insertImage","attachFile","file_attachment_too_large","limit","cannot_initiate_upload","uploadCompletionPromise","upload","shiftKey","handleSend","getTime","keypressTimestamp","isSubscribed","noteKeyPress","messaging_disabled","type_new_message","attachImage","click","handleMessageTyping","onKeyPress","handleKeyPress","handleAttachFile","display","handleAttachImage","online_now","last_seen","isUnconfirmed","ex","getExcessive","isPeerRestricted","ms","getMissing","MessagesView","nextState","imagePreview","typingIndicator","scrollPosition","fetchingMessages","msgs","deleted","assign","onlineSubs","peer","p2pPeerDesc","peerMessagingDisabled","isWriter","isReader","readingBlocked","unconformed","unconfirmed","messagesScroller","handleScrollEvent","scrollTop","scrollHeight","viewportHeight","isNewGroupTopicName","leave","readTimerHandler","onData","handleNewMessage","onAllMessagesReceived","handleAllMessagesReceived","onInfo","handleInfoReceipt","handleDescChange","handleSubsUpdated","onPres","ready","newTopic","newTopicParams","_topicName","getQuery","withLaterDesc","withLaterSub","withLaterData","withLaterDel","setQuery","subscribe","onNewTopicCreated","queuedMessages","pub","_sending","publishMessage","blankState","getDerivedStateFromProps","not_found","oldTopicName","oldTopic","finally","msgHasMoreMessages","getMessagesPage","isNewMessage","msgStatus","from","noteRead","what","clearTimeout","keyPressTimer","KEYPRESS_DELAY","forceUpdate","attachJSON","parse","searchParams","set","search","onNewChat","component","messageNodes","previousFrom","chatBoxClass","nextFrom","isReply","deliveryStatus","userDesc","ts","_uploader","handleShowContextMenuMessage","handleImagePreview","handleFormResponse","lastSeen","cont","getMeTopic","getContact","seen","when","onHideMessagesView","handleScrollReference","handleEnablePeer","handleNewChatAcceptance","handleCloseImagePreview","MenuContacts","onNewTopic","onSettings","MenuStart","onSignUp","SideNavbar","archived_contacts_title","ContactsView","unreadThreads","archivedCount","chatList","arch","touched","action_ignored","onShowArchive","handleAction","LocalStorageUtil","localStorage","setItem","JSON","stringify","getItem","oldVal","getObject","setObject","removeItem","CreateAccountView","login","password","email","saveToken","errorCleared","onCreateAccount","submitClasses","login_prompt","handleLoginChange","password_prompt","handlePasswordChange","full_name_prompt","handleFnChange","email_prompt","handleEmailChange","handleToggleSaveToken","stay_logged_in","EditAccountView","me","onCredsUpdated","tnCredsUpdated","tnNewTags","previousOnTags","creds","credentials","onUpdateAccount","pwd","onToggleMessageSounds","onTogglePushNotifications","newCred","addCredInvalid","addCredActive","handleCredEntered","method","asPhone","asEmail","onCredAdd","onUpdateTags","cred","meth","done","onCredConfirm","onCredDelete","Fragment","full_name_placeholder","password_unchanged","handlePasswordUpdate","messageSounds","handleCheckboxClick","desktopAlertsEnabled","desktopAlerts","title_tag_manager","handleCredChange","handleCredKeyDown","onLogout","getCredentials","LoginView","onLogin","autoCorrect","autoCapitalize","hostName","invalid_id","NewTopicById","groupId","NewTopicGroup","handlePrivateChange","handleTagsChanged","SearchContacts","edited","onSearchContacts","handleSearch","handleClear","search_placeholder","handleSearchChange","search_for_contacts","search_no_results","NewTopicView","navigateTo","addUrlParam","tabSelected","searchQuery","isNullValue","removeUrlParam","onCreateTopic","priv","no_contacts_placeholder","handleTabClick","handleNewGroupSubmit","handleGroupByID","handleSearchContacts","searchResults","PasswordResetView","token","scheme","onReset","onRequest","reset","HostSelector","changed","onServerAddressChange","hostOptions","list","handleHostNameChange","SettingsView","onUpdate","transport","def","ws","lp","transportOptions","handleTransportSelected","handleServerAddressChange","phone","ValidationView","code","credMethod","numbers_only","credCode","SidepanelView","onLoginRequest","view","errorAction","errorActionText","loadSpinnerVisible","loginDisabled","handleLoginRequested","onGlobalSettings","onUpdateAccountTags","onValidateCredentials","onPasswordResetRequest","onResetPassword","isSecureConnection","protocol","POP_SOUND","Audio","update_available","reconnect_countdown","reconnect_now","TinodeWeb","enableLogging","foundContacts","merged","updated","settings","host","hostname","port","detectServerAddress","messageSoundsOff","FIREBASE_INIT","firebaseToken","sidePanelSelected","sidePanelTitle","sidePanelAvatar","liveConnection","onLine","topicSelectedOnline","topicSelectedAcs","innerWidth","showInfoPanel","mobilePanel","contextMenuVisible","contextMenuBounds","contextMenuClickAt","contextMenuParams","contextMenuItems","alertVisible","alertParams","handleResize","handleOnline","handleHashRoute","handleVisibilityEvent","documentElement","clientWidth","clientHeight","tnSetup","onConnect","handleConnected","onDisconnect","handleDisconnect","onAutoreconnectIteration","handleAutoreconnectIteration","fbPush","messaging","usePublicVapidKey","messagingVapidKey","serviceWorker","register","reg","checkForAppUpdate","useServiceWorker","initDesktopAlerts","setDeviceToken","togglePushToken","handleError","parsedNav","expires","setAuthToken","connect","tab","readTimer","readTimerCallback","mobile","formatHTMLMessage","onupdatefound","installingWorker","installing","onstatechange","controller","newTopicTabSelected","callback","handleAppVisibility","hidden","isConnected","doLogin","getServerInfo","ver","sec","prom","clearInterval","reconnectCountdown","setInterval","timeLeft","seconds","secondsToTime","reconnect","isAuthenticated","credential","promise","getAuthToken","loginBasic","loginToken","handleCredentialsRequest","handleLoginSuccessful","tnMeMetaDesc","onContactUpdate","tnMeContactUpdate","tnMeSubsUpdated","getCurrentUserID","withDesc","withCred","disconnect","setUrlSidePanel","resetContactList","archived","isArchived","play","handleTopicSelected","unused","prepareSearchableContacts","receivedTimer","noteRecv","fnd","getFndTopic","tnFndSubsUpdated","withSub","setMeta","unused_index","setUrlTopic","createMessage","Promise","resolve","publishDraft","am","updateWant","login_","password_","public_","cred_","tags_","createAccountBasic","updateAccountBasic","getCurrentLogin","onTokenRefresh","requestPushToken","onMessage","payload","enabled","updateObject","requestPermission","deleteToken","getToken","refreshedToken","delCredential","peerName","newGroupTopicName","oldName","newName","permissions","updateGiven","getBlankState","publish","TOPIC_SYS","defaultTopicContextMenu","blocked","self_blocked","subscribed","handleShowInfoView","invite","requestResetAuthSecret","newPassword","str","btoa","atob","base64ReEncode","handleHideContextMenu","handleShowAlert","handleContextMenuAction","handleGlobalSettings","handleNewAccount","handleSettings","handleLoginRequest","handleNewAccountRequest","handleUpdateAccountRequest","handleUpdateAccountTagsRequest","handleToggleMessageSounds","handleCredAdd","handleCredDelete","handleCredConfirm","handleNewTopicRequest","handleNewTopic","handleLogout","handleSidepanelCancel","handleValidateCredentialsRequest","handlePasswordResetRequest","handleResetPassword","handleShowArchive","tnInitFind","handleShowContextMenu","handleHideMessagesView","tnData","handleNewTopicCreated","handleReadTimer","handleChangePermissions","handleNewChatInvitation","handleSendMessage","handleTopicUpdateRequest","handleHideInfoView","handleDeleteMessagesRequest","handleLeaveUnsubRequest","handleBlockTopicRequest","handleReportTopic","onAddMember","handleManageGroupMembers","hl","languages","baseLanguage","allMessages","en","render","textComponent"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,QAIjBlC,EAAoBA,EAAoBmC,EAAI,G,gBClFrDhC,EAAOD,QAAUkC,O,cCAjBjC,EAAOD,QAAUmC,W,cCAjBlC,EAAOD,QAAUoC,Q,cCAjBnC,EAAOD,QAAUqC,U,qngBCAjBpC,EAAOD,QAAUsC,U,cCAjBrC,EAAOD,QAAUsC,SAAoB,W,msBCGhBC,G,qOAAcL,IAAMM,e,uCAErC,OAAOC,KAAKC,MAAMC,QAChB,yBAAKC,UAAU,mBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,SAASH,KAAKC,MAAMG,OACnC,yBAAKD,UAAU,WAAWH,KAAKC,MAAMI,SACrC,yBAAKF,UAAU,kBACZH,KAAKC,MAAMK,SACV,4BAAQH,UAAU,UAAUI,QAASP,KAAKC,MAAMK,UAC7CN,KAAKC,MAAMO,QAAU,kBAAC,mBAAD,CAAkBC,GAAG,mBAG7C,KAEF,4BAAQN,UAAU,OAAOI,QAASP,KAAKC,MAAMS,WAC1CV,KAAKC,MAAMU,SAAW,kBAAC,mBAAD,CAAkBF,GAAG,kBAMtD,U,gMCvBG,ICCMG,EAAW,mBAMXC,EAAc,CAACC,OAAQ,gBAAiBC,MAAO,kBAG/CC,EAAeH,EAAYC,OAgB3BG,EAA0B,QA6B1BC,EAA6B,O,gLCrDrBC,G,0CACCC,GAElB,IAAIC,EAAQD,EAAKE,MAAM,IAAK,GACxBC,EAAS,GACTC,EAAO,GAYX,OAXIH,EAAM,KACRG,EAAOH,EAAM,GAAGI,OAAO,GAAGH,MAAM,MAE9BD,EAAM,IACRA,EAAM,GAAGC,MAAM,KAAKI,QAAQ,SAASC,GACnC,IAAIC,EAAOD,EAAKL,MAAM,KAClBM,EAAK,KACPL,EAAOM,mBAAmBD,EAAK,KAAOC,mBAAmBD,EAAK,OAI7D,CAACJ,KAAMA,EAAMD,OAAQA,K,iCAGZO,GAChBC,OAAOC,SAASZ,KAAOU,I,qCAGHN,EAAMD,GAC1B,IAAIO,EAAMN,EAAKS,KAAK,KAChBC,EAAO,GACX,IAAK,IAAIlD,KAAOuC,EACVA,EAAOjC,eAAeN,IACxBkD,EAAKC,KAAKnD,EAAM,IAAMuC,EAAOvC,IAMjC,OAHkB,EAAdkD,EAAKE,SACPN,GAAO,IAAMI,EAAKD,KAAK,MAElBH,I,kCAGUV,EAAMpC,EAAKN,GAC5B,IAAI2D,EAASrC,KAAKsC,aAAalB,GAE/B,OADAiB,EAAOd,OAAOvC,GAAON,EACdsB,KAAKuC,eAAeF,EAAOb,KAAMa,EAAOd,U,qCAG3BH,EAAMpC,GAC1B,IAAIqD,EAASrC,KAAKsC,aAAalB,GAE/B,cADOiB,EAAOd,OAAOvC,GACdgB,KAAKuC,eAAeF,EAAOb,KAAMa,EAAOd,U,sCAG1BH,EAAMoB,GAC3B,IAAIH,EAASrC,KAAKsC,aAAalB,GAE/B,OADAiB,EAAOb,KAAK,GAAKgB,EACVxC,KAAKuC,eAAeF,EAAOb,KAAMa,EAAOd,U,kCAG9BH,EAAMqB,GACvB,IAAIJ,EAASrC,KAAKsC,aAAalB,GAI/B,OAHAiB,EAAOb,KAAK,GAAKiB,SAEVJ,EAAOd,OAAOmB,KACd1C,KAAKuC,eAAeF,EAAOb,KAAMa,EAAOd,Y,8pBCzDnD,I,MAAMoB,EAAWC,yBAAe,CAC9BF,KAAM,CAAF,2CAKJG,eAAgB,CAAF,+DAKdC,cAAe,CAAF,sEAKb,uDAKAC,eAAgB,CAAF,+DAKdC,KAAM,CAAF,2CAKJC,OAAQ,CAAF,+CAKNC,aAAc,CAAF,qDAKZC,qBAAsB,CAAF,+FAKpBC,QAAS,CAAF,iDAMPC,MAAO,CAAF,6CAKLC,oBAAqB,CAAF,6FAKnBC,cAAe,CAAF,sDAKbC,QAAS,CAAF,yDAOHC,G,qOAAoBhE,IAAMiE,W,kDAoL5BC,SAASC,iBAAiB,YAAa5D,KAAK6D,iBAAiB,GAC7DF,SAASC,iBAAiB,QAAS5D,KAAK8D,iBAAiB,K,6CAIzDH,SAASI,oBAAoB,YAAa/D,KAAK6D,iBAAiB,GAChEF,SAASI,oBAAoB,QAAS/D,KAAK8D,iBAAiB,K,sCAG9CE,GACVpE,IAASqE,YAAYjE,MAAMkE,SAASF,EAAEG,UAG1CH,EAAEI,iBACFJ,EAAEK,kBACFrE,KAAKC,MAAMqE,U,sCAGGN,GACI,KAAdA,EAAEO,SACJvE,KAAKC,MAAMqE,S,kCAIHN,GACVA,EAAEI,iBACFJ,EAAEK,kBACFrE,KAAKC,MAAMqE,OACX,IAAI1C,EAAO5B,KAAKC,MAAMuE,MAAMR,EAAES,cAAcC,QAAQjE,IACjC,iBAARmB,IACTA,EAAO5B,KAAK2E,UAAU/C,IAGnBA,EAGH5B,KAAKC,MAAM2E,SACThD,EAAKnB,GACLmB,EAAKiD,QAAQ7E,KAAKC,MAAMsB,OAAQvB,KAAKC,MAAM6E,SAC3C9E,KAAKC,MAAMsB,QALbwD,QAAQC,IAAI,uBAAwBhB,EAAES,cAAcC,QAAQjE,M,qCAWjDwE,EAAKC,EAAM3D,EAAQ4D,GAChC,IAAM1C,EAAQzC,KAAKC,MAAMmF,OAAOC,SAAS9D,EAAO+D,WAChD,GAAK7C,GASL,GAAKwC,IAAOxC,EAAM8C,WAAWhE,EAAOiE,KAQpC,OAJgBP,EACdxC,EAAMgD,eAAeP,GACrBzC,EAAMiD,gBAAgB,CAACnE,EAAOiE,KAAMN,IAEvBS,MAAM,SAACC,GAChBT,GACFA,EAAaS,EAAIC,QAAS,cAlB5Bd,QAAQC,IAAI,oBAAqBzD,EAAO+D,a,4CAwBtB1G,EAAM2C,EAAQ4D,GAClC,IAAM1C,EAAQzC,KAAKC,MAAMmF,OAAOC,SAAS9D,EAAO+D,WAChD,GAAK7C,EAAL,CAKA,IAAIqD,EAASrD,EAAMsD,WAAWxE,EAAOyE,KAAMpH,GAM3C,OALIuG,IACFW,EAASA,EAAOH,MAAM,SAACC,GACrBT,EAAaS,EAAIC,QAAS,UAGvBC,EAVLf,QAAQC,IAAI,kBAAmBzD,EAAO+D,a,+BAajC,WACHW,EAAQ,EACRC,EAAO,GACXlG,KAAKC,MAAMuE,MAAM2B,IAAI,SAACvE,GACD,iBAARA,IACTA,EAAO,EAAK+C,UAAU/C,IAEpBA,GAAQA,EAAKxB,OACf8F,EAAK/D,KACW,KAAdP,EAAKxB,MACH,wBAAID,UAAU,YAAYnB,IAAKiH,IAE/B,wBAAI1F,QAAS,EAAK6F,YAAaC,UAASJ,EAAOjH,IAAKiH,GAAQrE,EAAKxB,QAGvE6F,MAIF,IACMK,EF3Uc,IE2UM,GAAoB,IAAdJ,EAAK9D,QAQ/BmE,EAAW,CACfC,MARYxG,KAAKC,MAAMwG,OAAOC,MAAQ1G,KAAKC,MAAM0G,QAAQC,EAF7C,IAGT5G,KAAKC,MAAM0G,QAAQC,EAAI5G,KAAKC,MAAMwG,OAAOD,KAHhC,IAITxG,KAAKC,MAAM0G,QAAQC,EAAI5G,KAAKC,MAAMwG,OAAOD,MAM/B,KACbK,KANW7G,KAAKC,MAAMwG,OAAOK,OAAS9G,KAAKC,MAAM0G,QAAQI,EAAIT,EAC1DtG,KAAKC,MAAM0G,QAAQI,EAAI/G,KAAKC,MAAMwG,OAAOI,IAAMP,EAC/CtG,KAAKC,MAAM0G,QAAQI,EAAI/G,KAAKC,MAAMwG,OAAOI,KAIjC,MAGb,OACE,wBAAI1G,UAAU,OAAO6G,MAAOT,GACzBL,Q,oCA9SP,WAAYjG,GAAO,O,4FAAA,SACjB,E,wEAAA,qBAAMA,IADW,IAGVgH,EAAiBhH,EAAMiH,KAAvBD,cAHU,OAKjB,EAAKpD,gBAAkB,EAAKA,gBAAgB5E,KAArB,MACvB,EAAK6E,gBAAkB,EAAKA,gBAAgB7E,KAArB,MACvB,EAAKmH,YAAc,EAAKA,YAAYnH,KAAjB,MAGnB,EAAK0F,UAAY,CACf,WAAc,CACZlE,GAAI,aACJL,MAAO6G,EAActE,EAASD,MAC9BmC,QAAS,MAEX,eAAkB,CAChBpE,GAAI,iBACJL,MAAO6G,EAActE,EAASE,gBAC9BgC,QAAS,SAACtD,EAAQ4D,GAChB,OAAOlF,EAAMkH,YACXF,EAAc,CAACxG,GAAI,6BACnBwG,EAAc,CAACxG,GAAI,2BAClB,WAAQ,EAAK2G,gBAAe,GAAM,EAAO7F,EAAQ4D,IAClD,MACA,EACA,QAIN,oBAAuB,CACrB1E,GAAI,sBACJL,MAAO6G,EAActE,EAASG,eAC9B+B,QAAS,SAACtD,EAAQ4D,GAChB,OAAOlF,EAAMkH,YACXF,EAAc,CAACxG,GAAI,qCACnBwG,EAAc,CAACxG,GAAI,4BAClB,WAAQ,OAAO,EAAK2G,gBAAe,GAAM,EAAM7F,EAAQ4D,IACxD,MACA,EACA,QAIN,eAAkB,CAChB1E,GAAI,iBACJL,MAAO6G,EAActE,EAAS0E,QAC9BxC,QAAS,SAACtD,EAAQ4D,GAChB,OAAO,EAAKiC,gBAAe,GAAO,EAAO7F,EAAQ4D,KAGrD,oBAAuB,CACrB1E,GAAI,sBACJL,MAAO6G,EAActE,EAASI,gBAC9B8B,QAAS,SAACtD,EAAQ4D,GAChB,OAAO,EAAKiC,gBAAe,GAAO,EAAM7F,EAAQ4D,KAGpD,aAAgB,CACd1E,GAAI,eACJL,MAAO6G,EAActE,EAASM,QAC9B4B,QAAS,EAAKyC,sBAAsBrI,KAA3B,KAAsC,OAEjD,WAAc,CACZwB,GAAI,aACJL,MAAO6G,EAActE,EAASK,MAC9B6B,QAAS,EAAKyC,sBAAsBrI,KAA3B,KAAsC,OAEjD,cAAiB,CACfwB,GAAI,gBACJL,MAAO6G,EAActE,EAASS,SAC9ByB,QAAS,EAAKyC,sBAAsBrI,KAA3B,KAAsC,QAEjD,YAAe,CACbwB,GAAI,cACJL,MAAO6G,EAActE,EAASU,OAC9BwB,QAAS,SAACtD,EAAQ4D,GAChB,OAAOlF,EAAMkH,YACXF,EAAc,CAACxG,GAAI,oBACnBwG,EAActE,EAASW,qBACtB,WACC,OAAO,EAAKgE,sBAAsB,MAAO/F,EAAQ4D,GAAcoC,KAAK,SAACC,GAEnE,OADA,EAAKvH,MAAMwH,eAAelG,EAAO+D,WAC1BkC,KAGX,MACA,EACA,QAIN,aAAgB,CACd/G,GAAI,eACJL,MAAO6G,EAActE,EAASO,cAC9B2B,QAAS,SAACtD,EAAQ4D,GAChB,OAAOlF,EAAMkH,YACXF,EAAc,CAACxG,GAAI,2BACnBwG,EAActE,EAASQ,sBACtB,WACC,IAAMV,EAAQ,EAAKxC,MAAMmF,OAAOC,SAAS9D,EAAO+D,WAChD,GAAK7C,EAIL,OAAOA,EAAMiF,WAAW/B,MAAM,SAACC,GACzBT,GACFA,EAAaS,EAAIC,QAAS,SAL5Bd,QAAQC,IAAI,oBAAqBzD,EAAO+D,YAS5C,MACA,EACA,QAIN,cAAiB,CACf7E,GAAI,gBACJL,MAAO6G,EAActE,EAASa,SAC9BqB,QAAS,SAACtD,EAAQ4D,GAChB,IAAM1C,EAAQ,EAAKxC,MAAMmF,OAAOC,SAAS9D,EAAO+D,WAChD,GAAK7C,EAIL,OAAOA,EAAMe,SAAQ,GAAMmC,MAAM,SAACC,GAC5BT,GACFA,EAAaS,EAAIC,QAAS,SAL5Bd,QAAQC,IAAI,oBAAqBzD,EAAO+D,aAW9C,YAAe,CACb7E,GAAI,cACJL,MAAO6G,EAAc,CAACxG,GAAI,+BAC1BoE,QAAS,MAEX,cAAiB,CACfpE,GAAI,gBACJL,MAAO6G,EAActE,EAASY,eAC9BsB,QAAS,SAACtD,EAAQ4D,GAChB,IAAM1C,EAAQ,EAAKxC,MAAMmF,OAAOC,SAAS9D,EAAO+D,WAChD,GAAK7C,GAAUlB,EAAOyE,KAItB,OAAOvD,EAAMkF,gBAAgBpG,EAAOyE,MAAML,MAAM,SAACC,GAC3CT,GACFA,EAAaS,EAAIC,QAAS,SAL5Bd,QAAQC,IAAI,6BAA+BzD,EAAO+D,UAAY,OAAS/D,EAAOyE,KAAO,OAU3F,YAAe,CACbvF,GAAI,cACJL,MAAO6G,EAActE,EAASK,MAC9B6B,QAAS,EAAKyC,sBAAsBrI,KAA3B,KAAsC,OAEjD,cAAiB,CACfwB,GAAI,gBACJL,MAAO6G,EAActE,EAASM,QAC9B4B,QAAS,EAAKyC,sBAAsBrI,KAA3B,KAAsC,OAEjD,aAAgB,CACdwB,GAAI,eACJL,MAAO6G,EAActE,EAASU,OAC9BwB,QAAS,EAAKyC,sBAAsBrI,KAA3B,KAAsC,OAEjD,eAAkB,CAChBwB,GAAI,iBACJL,MAAO6G,EAActE,EAASS,SAC9ByB,QAAS,EAAKyC,sBAAsBrI,KAA3B,KAAsC,QA7KlC,EAoTN2I,2BAAWnE,GCtYnB,SAASoE,EAAgBN,EAAMO,GACpCA,EAASA,GAAU/F,OAAOgG,UAAUC,cAAgBjG,OAAOgG,UAAUE,SACrE,IAAMC,EAAM,IAAIC,KAChB,OAAIZ,EAAKa,eAAiBF,EAAIE,cACxBb,EAAKc,YAAcH,EAAIG,YAAcd,EAAKe,WAAaJ,EAAII,UACvDf,EAAKgB,mBAAmBT,EAAQ,CAACU,QAAQ,EAAOC,KAAM,UAAWC,OAAQ,YAEzEnB,EAAKoB,mBAAmBb,EAC5B,CAACU,QAAQ,EAAOI,MAAO,QAASC,IAAK,UAAWJ,KAAM,UAAWC,OAAQ,YAGxEnB,EAAKoB,mBAAmBb,EAC7B,CAACU,QAAQ,EAAOM,KAAM,UAAWF,MAAO,QAASC,IAAK,UAAWJ,KAAM,UAAWC,OAAQ,YAYvF,SAASK,EAAiBC,GAC/B,IAAKA,GAAkB,GAATA,EACZ,MAAO,UAGT,IAAMC,EAAQ,CAAC,QAAS,KAAM,KAAM,KAAM,KAAM,MAC1CC,EAASC,KAAKC,IAAwC,EAApCD,KAAKE,MAAMF,KAAKG,KAAKN,GAAS,IAASC,EAAM7G,OAAO,GACtE6D,EAAQ+C,EAAQG,KAAKI,IAAI,KAAML,GAC/BM,EAAiB,EAATN,EAAcjD,EAAQ,EAAI,EAAKA,EAAQ,GAAK,EAAI,EAAM,EACpE,OAAOA,EAAMwD,QAAQD,GAAS,IAAMP,EAAMC,G,+kBC5BvBQ,G,qOAAmBjK,IAAMM,e,uCAE1C,IAAI4J,EACJ,IAA0B,IAAtB3J,KAAKC,MAAM0J,OAAiB,CAC9B,IAAMC,EAAiD,OAAtCjK,IAAOkK,UAAU7J,KAAKC,MAAMwC,OACvCqH,GAAaF,EAAU,cAAgB,cACxCT,KAAKY,ID2BT,SAAoBrL,GACzB,IAAI0C,EAAO,EACX1C,EAAQ,GAAKA,EACb,IAAK,IAAIjB,EAAI,EAAGA,EAAIiB,EAAM0D,OAAQ3E,IAChC2D,GAASA,GAAQ,GAAKA,EAAQ1C,EAAMsL,WAAWvM,GAC/C2D,GAAcA,EAEhB,OAAOA,EClCW6I,CAAWjK,KAAKC,MAAMwC,QAAU,GAC9C,GAAIzC,KAAKC,MAAMwC,OAASzC,KAAKC,MAAMG,OAASJ,KAAKC,MAAMG,MAAM8J,OAAQ,CACnE,IAAMC,EAASnK,KAAKC,MAAMG,MAAM8J,OAAOE,OAAO,GACxCjK,EAAY,cAAgB2J,EAClCH,EAAU,yBAAKxJ,UAAWA,GAAW,6BAAMgK,QACtC,CACL,IAAMhK,EAAY,kBAAoB2J,EACtCH,EAASC,EACP,uBAAGzJ,UAAWA,GAAd,SAAqC,uBAAGA,UAAWA,GAAd,gBAIzCwJ,EAFS3J,KAAKC,MAAM0J,OAEX,yBAAKxJ,UAAU,SAASkK,IAAI,SAASC,IAAKtK,KAAKC,MAAM0J,OAC5D7E,QAAS,SAACd,GAAKA,EAAEG,OAAOoG,QAAU,KAAMvG,EAAEG,OAAOmG,IAAI,2BAE9C,KAEX,OAAOX,O,gMCzBJ,IAAMa,GAA0B,CAAC,aAAc,YAAa,YAAa,YAAa,iBAChFC,GAA0B,CAAC,MAAc,MAAa,MAAa,MAAa,OAGtF,SAASC,GAAaC,GAC3B,OAAQA,GAASA,EAAMC,MAAQD,EAAME,KACnC,cAAgBF,EAAMC,KAAO,WAAaD,EAAME,KAAO,KAMpD,SAASC,GAAaC,EAAOC,EAAQC,EAAUC,EAAWC,GAO/D,GAJAH,GAAkB,EAClBC,GAAsB,EACtBC,GAAwB,GAHxBH,GAAgB,IAKH,GAAKC,GAAU,GAAKC,GAAY,GAAKC,GAAa,EAC7D,OAAO,KAGLC,IACFF,EAAWC,EAAY/B,KAAKC,IAAI6B,EAAUC,IAG5C,IAAIE,EAAQjC,KAAKC,IACfD,KAAKC,IAAI2B,EAAOE,GAAYF,EAC5B5B,KAAKC,IAAI4B,EAAQE,GAAaF,GAG5BK,EAAO,CACTC,SAAWP,EAAQK,EAAS,EAC5BG,UAAYP,EAASI,EAAS,GAchC,OAXID,GAEFE,EAAKC,SAAWD,EAAKE,UAAYpC,KAAKC,IAAIiC,EAAKC,SAAUD,EAAKE,WAC9DF,EAAKG,SAAWH,EAAKI,UAAYtC,KAAKC,IAAI2B,EAAOC,GACjDK,EAAKK,SAAYX,EAAQM,EAAKG,UAAY,EAAK,EAC/CH,EAAKM,SAAYX,EAASK,EAAKG,UAAY,EAAK,IAEhDH,EAAKK,QAAUL,EAAKM,QAAU,EAC9BN,EAAKG,SAAWT,EAChBM,EAAKI,UAAYT,GAEZK,EAIF,SAASO,GAAgBC,EAAOC,GACrC,IAAIC,EAAMvB,GAAwBwB,QAAQF,GACtCG,EAAMxB,GAAgBsB,GAEtBG,EAAKL,EAAMM,YAAY,KAI3B,OAHU,GAAND,IACFL,EAAQA,EAAMO,UAAU,EAAGF,IAEtBL,EAAQ,IAAMI,EAKhB,SAASI,GAAwBC,EAAMvB,EAAOC,EAAQG,EAAaoB,EAAWzH,GACnF,IAAI0H,EAAM,IAAIC,MACdD,EAAIE,YAAc,YAClBF,EAAIjC,QAAU,SAAS3E,GACrBd,EAAQ,8BAEV0H,EAAIG,OAAS,WACX,IAAIC,EAAM9B,GAAa9K,KAAK+K,MAAO/K,KAAKgL,OAAQD,EAAOC,EAAQG,GAC/D,GAAKyB,EAAL,CAIA,IAAIC,EAASlJ,SAASmJ,cAAc,UACpCD,EAAO9B,MAAQ6B,EAAItB,SACnBuB,EAAO7B,OAAS4B,EAAIrB,UACpB,IAAIwB,EAAMF,EAAOG,WAAW,MAC5BD,EAAIE,uBAAwB,EAC5BF,EAAIG,UAAUlN,KAAM4M,EAAIlB,QAASkB,EAAIjB,QAASiB,EAAIpB,SAAUoB,EAAInB,UAC9D,EAAG,EAAGmB,EAAItB,SAAUsB,EAAIrB,WAE1B,IAAIO,EAAQ9L,KAAK+K,OAAS6B,EAAItB,UAC5BtL,KAAKgL,QAAU4B,EAAIrB,WACnBf,GAAwBwB,QAAQM,EAAK1B,MAAQ,EAAK,aAAe0B,EAAK1B,KACpEuC,EAAYN,EAAOO,UAAUtB,GAIjC,GADAA,EAAOuB,GAFKF,EAAU7L,MAAM,KAEH,IACzB,CAKA,IAAIgM,EAAU,IAId,GAHIC,GAAiBJ,EAAU/K,QAAUlB,IACvC4K,EAAO,cAEG,cAARA,EAEF,KAAOyB,GAAiBJ,EAAU/K,QAAUlB,GAAwC,IAAVoM,GACxEH,EAAYN,EAAOO,UAAUtB,EAAMwB,GACnCA,GAAW,IAGXC,GAAiBJ,EAAU/K,QAAUlB,EACvC4D,EAAQ,kBAAoBiE,iBAAiBwE,GAAiBJ,EAAU/K,SACtE,gBAAmB2G,iBAAiB7H,GAA8B,UAAW,QAGjF2L,EAAS,KACTN,EAAUY,EAAU7L,MAAM,KAAK,GAAIwK,EAAMc,EAAItB,SAAUsB,EAAIrB,UAAWK,GAAgBU,EAAKtO,KAAM8N,UArB/FhH,EAAQ,iCAnBRA,EAAQ,kBA0CZ0H,EAAIlC,IAAMkD,IAAIC,gBAAgBnB,GAIzB,SAASoB,GAAkBpB,EAAMC,EAAWzH,GACjD,IAAI6I,EAAS,IAAIC,WACjBD,EAAO/J,iBAAiB,OAAQ,WAC9B,IAAIvC,EAAQsM,EAAO7H,OAAOxE,MAAM,KAC5BwK,EAAOuB,GAAYhM,EAAM,IAC7B,GAAKyK,EAAL,CAMA,IAAIU,EAAM,IAAIC,MACdD,EAAIE,YAAc,YAClBF,EAAIG,OAAS,WACXJ,EAAUlL,EAAM,GAAIyK,EAAM9L,KAAK+K,MAAO/K,KAAKgL,OAAQY,GAAgBU,EAAKtO,KAAM8N,KAEhFU,EAAIjC,QAAU,SAAS3E,GACrBd,EAAQ,gCAEV0H,EAAIlC,IAAMkD,IAAIC,gBAAgBnB,QAb5BxH,EAAQ,kCAcT,GACH6I,EAAOE,cAAcvB,GAGhB,SAASwB,GAAaxB,EAAMC,GACjC,IAAIoB,EAAS,IAAIC,WACjBD,EAAO/J,iBAAiB,OAAQ,WAC9B2I,EAAUD,EAAK1B,KAAM+C,EAAO7H,OAAOxE,MAAM,KAAK,GAAIgL,EAAKtO,QAEzD2P,EAAOE,cAAcvB,GAmChB,SAASe,GAAYU,GAC1B,IAAIjC,EAAO,qCAAqCkC,KAAKD,GACrD,OAAQjC,GAAsB,EAAdA,EAAK1J,OAAc0J,EAAK,GAAK,KAWxC,SAASyB,GAAiBrO,GAC/B,OAA2B,EAApBiK,KAAKE,MAAMnK,EAAI,G,ihBCnMH+O,I,uOAAqBxO,IAAMiE,W,oDAW3BwK,GACblO,KAAKC,MAAM0J,QAAUuE,EAAUvE,QACjC3J,KAAKmO,SAAS,CAACC,QAASpO,KAAKC,MAAM0J,W,uCAItB3F,GAAG,WAClBqI,GAAwBrI,EAAEG,OAAOkK,MAAM,GNkBhB,SMlB8C,EAEnE,SAACC,EAAYxC,GACX,IAAIyC,EAAK7D,GAAa,CAACG,KAAMyD,EAAY1D,KAAMkB,IAC/C,EAAKqC,SAAS,CAACC,QAASG,IACxB,EAAKtO,MAAMuO,eAAeD,IAG5B,SAAC3I,GACC,EAAK3F,MAAM6E,QAAQc,EAAK,SAG5B5B,EAAEG,OAAOzF,MAAQ,K,+BAGV,WAGH+P,EAAS,sBAAwBtF,KAAKuF,SAAW,IAAIjN,OAAO,GAChE,OACE,yBAAKtB,UAAU,iBACZH,KAAKC,MAAM0O,WAAa3O,KAAK4O,MAAMR,QAClC,KACA,uBAAGS,KAAK,IAAI1O,UAAU,eAAeI,QAAS,SAACyD,GAAOA,EAAEI,iBAAkB,EAAKnE,MAAMuO,eAAe,QAClG,uBAAGrO,UAAU,kBAAb,UAEHH,KAAK4O,MAAMR,QACV,yBAAK9D,IAAKtK,KAAK4O,MAAMR,QAASjO,UAAU,YACxCH,KAAKC,MAAM0O,UAAY3O,KAAKC,MAAM6O,IAChC,yBAAK3O,UAAU,cACb,kBAAC,EAAD,CACEwJ,QAAQ,EACRlH,MAAOzC,KAAKC,MAAM6O,IAClB1O,MAAOJ,KAAKC,MAAMG,SAGtB,yBAAKD,UAAU,SNlBA,IMkBf,INlBe,KMmBlBH,KAAKC,MAAM0O,SAAW,KACrB,2BAAO/D,KAAK,OAAOnK,GAAIgO,EAAQtO,UAAU,mBACvC4O,OAAO,UAAUC,SAAUhP,KAAKiP,mBACnCjP,KAAKC,MAAM0O,SAAW,KACvB,2BAAOO,QAAST,EAAQtO,UAAU,SAChC,uBAAGA,UAAU,kBAAb,sB,4CA3DR,YAAYF,GAAO,a,4FAAA,WACjB,E,yEAAA,uBAAMA,KAED2O,MAAQ,CACXR,QAASnO,EAAM0J,QAGjB,EAAKsF,iBAAmB,EAAKA,iBAAiBhQ,KAAtB,OAPP,E,ihBCLAkQ,I,uOAAiB1P,IAAMM,e,gDAQxCC,KAAKC,MAAM+O,SAAShP,KAAKC,MAAMjC,MAAOgC,KAAKC,MAAMmP,W,+BAIjD,OACEpP,KAAKC,MAAM+O,SACThP,KAAKC,MAAMmP,QACT,uBAAGjP,UAAU,gCAAgCI,QAASP,KAAKqP,cAA3D,aACA,uBAAGlP,UAAU,gCAAgCI,QAASP,KAAKqP,cAA3D,2BAEArP,KAAKC,MAAMmP,QACT,uBAAGjP,UAAU,kBAAb,aACA,uBAAGA,UAAU,kBAAb,gC,4CAnBV,YAAYF,GAAO,a,4FAAA,WACjB,E,yEAAA,uBAAMA,KAEDoP,aAAe,EAAKA,aAAapQ,KAAlB,OAHH,E,2kBCFrB,I,SAAMqQ,GAAe,CAAC,MAAS,oBAAqB,OAAU,SAGzCC,I,uOAAsB9P,IAAMM,e,0CAE3C,IAAIyP,EAAS,KACb,OAAIxP,KAAKC,MAAMuP,QAAqC,EAA3BxP,KAAKC,MAAMuP,OAAOpN,QACzCoN,EAAS,GACTxP,KAAKC,MAAMuP,OAAOrJ,IAAI,SAASsJ,GAC7B,GAAIA,EAAEC,KACJF,EAAOrN,KAAK,uBAAGhC,UAAU,0BAA0BnB,IAAKyQ,EAAEzQ,KAAOyQ,EAAEC,MAAOJ,GAAaG,EAAEC,YACpF,CACL,IAAM1I,EAAQ,SAAWyI,EAAEE,MAAQ,IAAMF,EAAEE,MAAQ,IACnDH,EAAOrN,KAAK,0BAAMhC,UAAW6G,EAAOhI,IAAKyQ,EAAEzQ,KAAOyQ,EAAEzR,MAAOyR,EAAEzR,UAG1D,oCAAGwR,IAEL,U,qyBCjBQI,I,uOAAoBnQ,IAAMM,e,0CAE3C,OAA2B,EAAnBC,KAAKC,MAAMgG,MACjB,0BAAM9F,UAAU,UAA6B,EAAnBH,KAAKC,MAAMgG,MAAY,KAAOjG,KAAKC,MAAMgG,OACjE,U,8tBCCa4J,I,uOAAgBpQ,IAAMiE,W,6CAQ7BM,GACVA,EAAEI,iBACFJ,EAAEK,kBACErE,KAAKC,MAAM6P,YACb9P,KAAKC,MAAM6P,WAAW9P,KAAKC,MAAM2B,KAAM5B,KAAKC,MAAM8P,MAAO/P,KAAKC,MAAMiI,IAAKlI,KAAKC,MAAM+P,O,yCAIrEhM,GACjBA,EAAEI,iBACFJ,EAAEK,kBACFrE,KAAKC,MAAMgQ,gBAAgB,CAAE3K,UAAWtF,KAAKC,MAAM2B,KAAMmF,EAAG/C,EAAEkM,MAAOtJ,EAAG5C,EAAEmM,U,+BAI1E,IAAI/P,EAAQJ,KAAKC,MAAMG,MAClBA,EAEqB,GAAfA,EAAMgC,SAEfhC,EAAQA,EAAMgM,UAAU,EAAG,IAAM,OAHjChM,EAAQ,2BAAG,kBAAC,mBAAD,CAAkBK,GAAG,mBAKlC,IAAM2P,EAASpQ,KAAKC,MAAMiI,IAAM,SAAW,UACrCyB,GAAS3J,KAAKC,MAAM0J,QAAS3J,KAAKC,MAAM0J,OACxC6F,EAASxP,KAAKC,MAAMuP,OAASxP,KAAKC,MAAMuP,OAAOa,QAAU,GACzDC,EAAc,GAapB,OAZItQ,KAAKC,MAAM+P,MACThQ,KAAKC,MAAMsQ,UACbf,EAAOrN,KAAK,CAACnE,KAAMgC,KAAKC,MAAM+P,IAAIQ,UAAWxR,IAAK,SAEhDgB,KAAKC,MAAM+P,IAAIS,WACjBH,EAAYnO,KAAK,CAACuN,KAAM,UAErB1P,KAAKC,MAAM+P,IAAIU,YAClBJ,EAAYnO,KAAK,CAACuN,KAAM,YAK1B,wBAAIvP,WAAYH,KAAKC,MAAM0Q,eAAiB3Q,KAAKC,MAAM2Q,SAAW,WAAa,KAC7ErQ,QAASP,KAAKoG,aACd,yBAAKjG,UAAU,cACb,kBAAC,EAAD,CACEwJ,OAAQA,EACRvJ,MAAOJ,KAAKC,MAAMG,MAClBqC,MAAOzC,KAAKC,MAAM2B,OACnB5B,KAAKC,MAAM4Q,WAAa,0BAAM1Q,UAAWiQ,IACvCpQ,KAAKC,MAAM0Q,eAAiB3Q,KAAKC,MAAM2Q,SACxC,uBAAGzQ,UAAU,4BAAb,gBACE,MAEN,yBAAKA,UAAU,YACb,6BAAK,0BAAMA,UAAU,iBAAiBC,GACpC,kBAAC,GAAD,CAAa6F,MAAOjG,KAAKC,MAAM6Q,SAAU,kBAAC,GAAD,CAAetB,OAAQc,KAEjEtQ,KAAKC,MAAM8Q,QAAU,yBAAK5Q,UAAU,mBAAmBH,KAAKC,MAAM8Q,SAAiB,KACpF,8BAAM,kBAAC,GAAD,CAAevB,OAAQA,MAE9BxP,KAAKC,MAAMgQ,gBACV,0BAAM9P,UAAU,eACd,uBAAG0O,KAAK,IAAItO,QAASP,KAAKgR,oBACxB,uBAAG7Q,UAAU,kBAAb,iBAEM,W,4CAtElB,YAAYF,GAAO,a,4FAAA,WACjB,E,yEAAA,uBAAMA,KAEDmG,YAAc,EAAKA,YAAYnH,KAAjB,OACnB,EAAK+R,mBAAqB,EAAKA,mBAAmB/R,KAAxB,OAJT,E,ihBCLfgS,I,uOAAsBxR,IAAMM,e,6CAOpBiE,GACVA,EAAEI,iBACFJ,EAAEK,kBACFrE,KAAKC,MAAM2E,SAAS5E,KAAKC,MAAMiR,U,+BAGxB,IACAjK,EAAiBjH,KAAKC,MAAMiH,KAA5BD,cACP,OACE,wBAAI1G,QAASP,KAAKoG,YAAajG,UAAU,UACvC,yBAAKA,UAAU,eAAe8G,EAAcjH,KAAKC,MAAMG,MAAOJ,KAAKC,MAAMkR,e,4CAhB/E,YAAYlR,GAAO,a,4FAAA,WACjB,E,yEAAA,uBAAMA,KAEDmG,YAAc,EAAKA,YAAYnH,KAAjB,OAHF,EAsBN2I,4BAAWqJ,I,2kBCjB1B,I,SAAMtO,GAAWC,yBAAe,CAC9BwO,UAAW,CAAF,qCAKTC,YAAa,CAAF,2CAOPC,I,uOAAoB7R,IAAMiE,W,0CACrB,WACAuD,EAAiBjH,KAAKC,MAAMiH,KAA5BD,cACD0J,EAAgBY,MAAMC,QAAQxR,KAAKC,MAAMwR,eACzCC,EAAe,GACjBC,EAAgB,EAoEpB,OAnEI3R,KAAKC,MAAM2R,UAAyC,EAA7B5R,KAAKC,MAAM2R,SAASxP,QAC7CpC,KAAKC,MAAM2R,SAASzL,IAAI,SAACrI,GACvB,GAAIA,EAAEoT,OAEJQ,EAAavP,KACX,kBAAC,GAAD,CACE/B,MAAOtC,EAAEsC,MAAO8Q,OAAQpT,EAAEoT,OAAQC,OAAQrT,EAAEqT,OAC5CnS,IAAKlB,EAAEoT,OACPtM,SAAU,EAAK3E,MAAM2E,gBAEpB,CAEL,IAAM5F,EAAMlB,EAAE2E,MAAQ3E,EAAE2E,MAAQ3E,EAAEkI,KAGlC,GAAI,EAAK/F,MAAM4R,YAAc,EAAK5R,MAAM6R,OAAQ,CAC9C,IAAIzR,EAAU,CAACrB,GAOf,GANIlB,EAAEiU,SAAWjU,EAAEiU,QAAQhB,SACzB1Q,EAAQ8B,MAAM,GAAKrE,EAAEiU,QAAQhB,SAASiB,eAEpClU,EAAEmU,QAAUnU,EAAEmU,OAAOC,IACvB7R,EAAQ8B,MAAM,GAAKrE,EAAEmU,OAAOC,IAAIF,gBAE7B,EAAK/R,MAAM4R,WAAW,EAAK5R,MAAM6R,OAAQzR,GAC5C,OAIJ,IAAMuQ,EAAWD,GAC2B,EAAzC,EAAK1Q,MAAMwR,cAAczF,QAAQhN,GACjC,EAAKiB,MAAMwR,gBAAkBzS,EAC1BwQ,EAAS,GACX,EAAKvP,MAAMsQ,WACTvR,IAAQ,EAAKiB,MAAMkS,UACrB3C,EAAOrN,KAAK,CAACnE,KAAMiJ,EAActE,GAASyO,WAAYzB,MAAO,UAE3D7R,EAAEkS,KAAOlS,EAAEkS,IAAIoC,WACjB5C,EAAOrN,KAAK,CAACnE,KAAMiJ,EAActE,GAAS0O,aAAc1B,MAAO,UAGnE,IAAMoB,EAAUQ,MAAMC,QAAQ1T,EAAEiU,SAC9BjU,EAAEiU,QAAQ9P,KAAK,KAAQnE,EAAEiU,QAAUjU,EAAEiU,QAAQhB,QAAU,KAEzDW,EAAavP,KACX,kBAAC,GAAD,CACE/B,MAAOtC,EAAEmU,OAASnU,EAAEmU,OAAOC,GAAK,KAChCvI,OAAQe,GAAa5M,EAAEmU,OAASnU,EAAEmU,OAAOtH,MAAQ,MACjDoG,QAASA,EACTD,OAAQ,EAAK7Q,MAAMoS,WAAavU,EAAEgT,OAAS,EAC3C5I,IAAKpK,EAAEsS,QAAU,EAAKnQ,MAAMqS,UAC5BtC,IAAKlS,EAAEkS,IACPO,SAAU,EAAKtQ,MAAMsQ,SACrBf,OAAQA,EACRmB,cAAeA,EACfC,SAAUA,EACVC,WAAY,EAAK5Q,MAAM4Q,WACvBf,WAAY,EAAK7P,MAAMsS,gBACvBtC,gBAAiB,EAAKhQ,MAAMgQ,gBAC5BrO,KAAM5C,EACN+Q,MAAO2B,EAAatP,OACpBpD,IAAKA,KAET2S,MAED3R,MAIH,yBAAKG,UAAWH,KAAKC,MAAMuS,SAAW,KAAO,oBACzB,GAAjBb,EACC,yBAAKxR,UAAU,qBACbsS,wBAAyB,CAACC,OAAQ1S,KAAKC,MAAM0S,oBAE/C,KAEqB,EAAtBjB,EAAatP,OACZ,wBAAIjC,UAAU,eACXuR,GAGH,W,6MAOK9J,4BAAW0J,I,wlBCjHLsB,I,uOAAmBnT,IAAMM,e,0CACnC,WACP,OACE,uBAAG8O,KAAK,IAAItO,QAAS,SAACyD,GAAOA,EAAEI,iBAAkB,EAAKnE,MAAM4S,aAAc,uBAAG1S,UAAU,kBAAb,e,8tBCF3D2S,I,uOAAmBrT,IAAMM,e,oDAWzBmO,GACbA,EAAU6E,QAAU/S,KAAKC,MAAM8S,OACjC/S,KAAKmO,SAAS,CACZ6E,OAAShT,KAAKC,MAAM8S,U,6BAMxB/S,KAAKmO,SAAS,CAAC6E,MAAM,IACjBhT,KAAKC,MAAMgT,cACbjT,KAAKC,MAAMgT,iB,+BAIN,WAEDF,EADQ,CAACnN,IAAK,QAASsN,KAAM,UAAWxQ,KAAM,QAChC1C,KAAKC,MAAM8S,QAAU,GACnC5S,EAAY,YAAc4S,EAChC,OACE,yBAAK5S,UAAWA,GACd,yBAAKA,UAAU,QAAO,uBAAGA,UAAU,kBAAkB4S,IACrD,8BACE,0BAAMN,wBAAyB,CAACC,OAAQ1S,KAAKC,MAAMkT,QAClDnT,KAAKC,MAAMiR,OACV,oCACO,uBAAGrC,KAAK,IACX7H,MAAO,CAAEoM,WAAY,UACrB7S,QAAS,SAACyD,GAAOA,EAAEI,iBAAkB,EAAKnE,MAAMiR,WAC/ClR,KAAKC,MAAMoT,aAGhB,MAEJ,yBAAKlT,UAAU,UAAS,kBAAC,GAAD,CAAY0S,SAAU7S,KAAKsE,c,4CA5CzD,YAAYrE,GAAO,a,4FAAA,WACjB,E,yEAAA,uBAAMA,KAED2O,MAAQ,CACXoE,MAAM,GAGR,EAAK1O,KAAO,EAAKA,KAAKrF,KAAV,OAPK,E,ihBCDAqU,I,uOAAa7T,IAAMM,e,8CAOzBiE,GACXA,EAAEI,iBACFpE,KAAKC,MAAM4S,SAAS7S,KAAKC,MAAMwC,MAAOzC,KAAKC,MAAM8P,S,+BAIjD,IAAM3P,EAAQJ,KAAKC,MAAMG,OAASJ,KAAKC,MAAMwC,MACvCtC,EAAYH,KAAKC,MAAMsT,QAAU,eAAiB,OACxD,OACE,yBAAKpT,UAAWA,GACbH,KAAKC,MAAMuT,SACV,0BAAMrT,UAAU,WAChB,yBAAKA,UAAU,cACb,kBAAC,EAAD,CACEwJ,OAAQ3J,KAAKC,MAAM0J,SAAU,EAC7BlH,MAAOzC,KAAKC,MAAMwC,MAClBrC,MAAOJ,KAAKC,MAAMG,SAGxB,8BAAOA,GACNJ,KAAKC,MAAM4S,WAAa7S,KAAKC,MAAMwT,SAClC,uBAAG5E,KAAK,IAAItO,QAASP,KAAK0T,cAA1B,KACE,0BAAMvT,UAAU,iB,4CA5B1B,YAAYF,GAAO,a,4FAAA,WACjB,E,yEAAA,uBAAMA,KAEDyT,aAAe,EAAKA,aAAazU,KAAlB,OAHH,E,ihBCEA0U,I,uOAAkBlU,IAAMiE,W,qDAgBfzD,GAC1B,MAAO,CACL2T,YAAa3T,EAAM4T,MAAQ,GAAK5T,EAAM6T,OACtCC,YAAaJ,GAAUK,UAAU/T,EAAM4T,MAAO5T,EAAMgU,eACpDC,UAAWP,GAAUQ,WAAWlU,EAAM4T,U,iCAgBxBA,GAChB,IAAM9D,EAAQ,GACV9J,EAAQ,EAKZ,OAJA4N,EAAM1N,IAAI,SAACvE,GACTmO,EAAMnO,EAAKoE,MAAQC,EACnBA,MAEK8J,I,gCAIQ8D,EAAOO,GACtB,IAAMX,EAAW,GACXY,EAAS,GAQf,OAPAR,EAAM1N,IAAI,SAACvE,GACLwS,GAAQA,EAAKE,SAAS1S,EAAKoE,MAC7ByN,EAAStR,KAAKP,GAEdyS,EAAOlS,KAAKP,KAGT6R,EAASc,OAAOF,O,6CAjCNnG,EAAWsG,GACxBtG,EAAU2F,OAAS7T,KAAKC,MAAM4T,OAChC3F,EAAU+F,eAAiBjU,KAAKC,MAAMgU,eACtC/F,EAAU4F,QAAU9T,KAAKC,MAAM6T,QAC/B9T,KAAKmO,SAASwF,GAAUc,qBAAqBzU,KAAKC,UAE/CuU,GAAaxU,KAAKC,MAAM4T,MAAMzR,OAASoS,EAAUT,YAAY3R,SAChEpC,KAAKmO,SAAS,CAACuG,MAAO,O,sCA6BV1Q,GACdhE,KAAKmO,SAAS,CAACuG,MAAO1Q,EAAEG,OAAOzF,QAC3BsB,KAAKC,MAAM4R,YACb7R,KAAKC,MAAM4R,WAAW7N,EAAEG,OAAOzF,S,mCAItBqN,GACX,IAAM4I,EAAU3U,KAAK4O,MAAMmF,YAAYhI,GACvC/L,KAAKC,MAAM2U,cAAcD,EAAQ3O,KAAMhG,KAAK4O,MAAMsF,UAAUS,EAAQ3O,S,uCAGrDpE,EAAMmK,GACrB/L,KAAK6U,aAAa9I,K,0CAIlB/L,KAAKmO,SAAS,CAAC2G,SAAS,M,wCAIxB9U,KAAKmO,SAAS,CAAC2G,SAAS,IACpB9U,KAAKC,MAAM8U,aACb/U,KAAKC,MAAM8U,YAAY/U,KAAK4O,MAAM8F,S,oCAIxB1Q,GACZ,GAAc,cAAVA,EAAEhF,KACJ,GAA+B,GAA3BgB,KAAK4O,MAAM8F,MAAMtS,QAA+C,EAAhCpC,KAAK4O,MAAMmF,YAAY3R,OAAY,CACrE,IAAM8J,EAAKlM,KAAK4O,MAAMmF,YAAY3R,OAAS,EACvCpC,KAAK4O,MAAMmF,YAAY7H,GAAIlG,OAAShG,KAAKC,MAAMgU,eACjDjU,KAAK6U,aAAa3I,QAGH,UAAVlI,EAAEhF,IACPgB,KAAKC,MAAM+U,SACbhV,KAAKC,MAAM+U,QAAQhV,KAAK4O,MAAM8F,OAEb,WAAV1Q,EAAEhF,KACPgB,KAAKC,MAAM4S,UACb7S,KAAKC,MAAM4S,a,+BAKR,WACDgB,EAAQ,GACV5N,EAAQ,EACNgO,EAAgBjU,KAAKC,MAAMgU,eAAiB,GAClDjU,KAAK4O,MAAMmF,YAAY5N,IAAI,SAACvE,GAC1BiS,EAAM1R,KACJ,kBAAC,GAAD,CACE0Q,SAAU,EAAKoC,iBACftL,OAAQe,GAAa9I,EAAKqQ,OAASrQ,EAAKqQ,OAAOtH,MAAQ,MACvDvK,MAAOwB,EAAKqQ,OAASrQ,EAAKqQ,OAAOC,QAAKgD,EACtC1B,SAAU,EAAKvT,MAAMkV,eACrB1S,MAAOb,EAAKoE,KACZyN,SAAUQ,EAAcK,SAAS1S,EAAKoE,MACtCuN,QAAS3R,EAAK2R,QACdxD,MAAO9J,EACPjH,IAAK4C,EAAKoE,QAEdC,MAEF,IAAM9F,EAAY,cAAgBH,KAAK4O,MAAMkG,QAAU,WAAa,IACpE,OACE,yBAAK3U,UAAWA,GACb0T,EACD,2BAAOjJ,KAAK,OACVgJ,YAAa5T,KAAK4O,MAAMgF,YACxB5E,SAAUhP,KAAKoV,gBACfC,QAASrV,KAAKsV,kBACdC,OAAQvV,KAAKwV,gBACbC,UAAWzV,KAAK0V,cAChBhX,MAAOsB,KAAK4O,MAAM8F,MAClBiB,WAAS,U,4CAvIjB,YAAY1V,GAAO,a,4FAAA,WACjB,E,yEAAA,uBAAMA,KAED2O,MAAQ+E,GAAUc,qBAAqBxU,GAC5C,EAAK2O,MAAM8F,MAAQ,GACnB,EAAK9F,MAAMkG,SAAU,EAErB,EAAKM,gBAAkB,EAAKA,gBAAgBnW,KAArB,OACvB,EAAK4V,aAAe,EAAKA,aAAa5V,KAAlB,OACpB,EAAKgW,iBAAmB,EAAKA,iBAAiBhW,KAAtB,OACxB,EAAKqW,kBAAoB,EAAKA,kBAAkBrW,KAAvB,OACzB,EAAKuW,gBAAkB,EAAKA,gBAAgBvW,KAArB,OACvB,EAAKyW,cAAgB,EAAKA,cAAczW,KAAnB,OAZJ,E,ogBCDrB,I,SAAM0D,GAAWC,yBAAe,CAC9BgT,YAAa,CAAF,4DAKXC,mBAAoB,CAAF,8EAOdC,I,uOAAqBrW,IAAMiE,W,6CAqBXqS,GAClB,IAAIhG,EAAQ,GAIZ,OAHAgG,EAAQ5P,IAAI,SAACtI,GACXkS,EAAMlS,EAAEmI,MAAQ,CAACgQ,MAAO,EAAGC,SAAS,KAE/BlG,I,oCAGYgG,EAASG,EAAaC,GACzC,IAAIC,EAAO,GAMX,OALAL,EAAQ5P,IAAI,SAACtI,IACPqY,GAAerY,EAAEmI,MAAQmQ,GAC3BC,EAAKjU,KAAKtE,EAAEmI,QAGToQ,I,uCAGeL,GACtB,IAAIM,EAAM,GAIV,OAHAN,EAAQ5P,IAAI,SAACtI,GACXwY,EAAIlU,KAAKtE,EAAEmI,QAENqQ,I,yCAuDiBvE,EAAQX,GAChC,GAAIW,EAAQ,CACV,IAAK,IAAIrU,EAAE,EAAGA,EAAE0T,EAAO/O,OAAQ3E,IAC7B,GAAiC,GAA7B0T,EAAO1T,GAAGuO,QAAQ8F,GACpB,OAAO,EAGX,OAAO,EAET,OAAO,M,gDA7DawE,EAAQvG,GAC5B,IAAIwG,EAASvW,KAAK4O,MAAMmB,MAAMuG,GAC9B,GAAIC,EAAQ,CACV,GAAIA,EAAON,QAET,OAEFM,EAAOP,OAAS,EAChBO,EAAON,SAAU,OAEjBM,EAAS,CAACP,MAAO,EAAGC,SAAS,GAG/B,IAAIpY,EAAImC,KAAK4O,MAAMmH,QAAQ1F,QAC3BxS,EAAEsE,KAAKnC,KAAKC,MAAM2R,SAAS7B,IAE3B,IAAMsG,EAAMP,GAAaU,iBAAiB3Y,GAEpCJ,EAAIuC,KAAK4O,MAAMmB,MACrBtS,EAAE6Y,GAAUC,EAEZvW,KAAKmO,SAAS,CAAC4H,QAASlY,EAAGkS,MAAOtS,EAAG+Y,iBAAkBH,M,0CAGrCC,EAAQvG,GAC1B,IAAMwG,EAASvW,KAAK4O,MAAMmB,MAAMuG,GAChC,GAAKC,GAAWA,EAAON,QAAvB,CAGAM,EAAON,SAAU,EACjBM,EAAOP,OAAS,EAEhB,IAAInY,EAAImC,KAAK4O,MAAMmH,QAAQ1F,QAC3BxS,EAAE4Y,OAAO1G,EAAO,GAEhB,IAAMsG,EAAMP,GAAaU,iBAAiB3Y,GAEpCJ,EAAIuC,KAAK4O,MAAMmB,MACrBtS,EAAE6Y,GAAUC,EAEZvW,KAAKmO,SAAS,CAAC4H,QAASlY,EAAGkS,MAAOtS,EAAG+Y,iBAAkBH,O,0CAGrCK,GAAK,IAChBzP,EAAiBjH,KAAKC,MAAMiH,KAA5BD,cACD0P,EAAOD,EAEXzP,EAActE,GAASkT,mBAAoB,CAACe,MAAOF,IADnDzP,EAActE,GAASiT,aAGzB5V,KAAKmO,SAAS,CAAC0I,cAAeH,EAAKI,kBAAmBH,M,qCAgBtD,IAAII,EAAW/W,KACX+V,EAAU,GACViB,EAAQ,GACRrC,EAAU,GAEHxW,OAAO8Y,KAAKjX,KAAK4O,MAAMmB,OAC7B5J,IAAI,SAAS+Q,GACZH,EAASnI,MAAMmB,MAAMmH,GAAGjB,SAC1BF,EAAQ5T,KAAK+U,GAGqB,EAAhCH,EAASnI,MAAMmB,MAAMmH,GAAGlB,MAC1BgB,EAAM7U,KAAK+U,GACFH,EAASnI,MAAMmB,MAAMmH,GAAGlB,MAAQ,GACzCrB,EAAQxS,KAAK+U,KAGjBlX,KAAKC,MAAMkX,SAASpB,EAASiB,EAAOrC,K,qCAIpC3U,KAAKC,MAAM4S,a,+BAKX,OADwB7S,KAAKC,MAAMiH,KAA5BD,cAEL,yBAAKxG,GAAG,iBACN,yBAAKN,UAAU,kBACb,2BAAOA,UAAU,SACf,kBAAC,mBAAD,CAAkBM,GAAG,sBAAsB2W,eAAe,oBAG9D,yBAAKjX,UAAU,kBACb,kBAAC,GAAD,CACE0T,MAAO7T,KAAK4O,MAAMmH,QAClB9B,cAAejU,KAAK4O,MAAMqF,cAC1BH,OAAO,cACPjC,WAAY7R,KAAKqX,oBACjBzC,cAAe5U,KAAKsX,uBAExB,yBAAKnX,UAAU,kBACb,2BAAOA,UAAU,SACf,kBAAC,mBAAD,CAAkBM,GAAG,qBAAqB2W,eAAe,mBAI7D,kBAAC,GAAD,CACExF,SAAU5R,KAAKC,MAAM2R,SACrBO,SAAUnS,KAAKC,MAAMkS,SACrBV,cAAezR,KAAK4O,MAAM4H,iBAC1B1E,OAAQ9R,KAAK4O,MAAMiI,cACnBhF,WAAYiE,GAAayB,mBACzB5E,iBAAkB3S,KAAK4O,MAAMkI,kBAC7BjG,YAAY,EACZwB,YAAY,EACZE,gBAAiBvS,KAAKwX,wBACxB,yBAAK/W,GAAG,wBAAwBN,UAAU,kBACxC,4BAAQA,UAAU,OAAOI,QAASP,KAAKyX,cACrC,kBAAC,mBAAD,CAAkBhX,GAAG,YAAY2W,eAAe,QAElD,4BAAQjX,UAAU,QAAQI,QAASP,KAAK0T,cACtC,kBAAC,mBAAD,CAAkBjT,GAAG,gBAAgB2W,eAAe,mB,4CA7K9D,YAAYnX,GAAO,a,4FAAA,WACjB,E,yEAAA,uBAAMA,KAED2O,MAAQ,CAEXmH,QAAS9V,EAAM8V,QACfhG,MAAO+F,GAAa4B,aAAazX,EAAM8V,SACvC9B,cAAe6B,GAAa7B,cAAchU,EAAM8V,QAAS9V,EAAM0X,mBAAoB1X,EAAMkW,gBACzFU,cAAe,GACfC,kBAAmB7W,EAAMiH,KAAKD,cAActE,GAASiT,aACrDY,iBAAkBV,GAAaU,iBAAiBvW,EAAM8V,UAGxD,EAAKyB,sBAAwB,EAAKA,sBAAsBvY,KAA3B,OAC7B,EAAKqY,oBAAsB,EAAKA,oBAAoBrY,KAAzB,OAC3B,EAAKoY,oBAAsB,EAAKA,oBAAoBpY,KAAzB,OAC3B,EAAKwY,aAAe,EAAKA,aAAaxY,KAAlB,OACpB,EAAKyU,aAAe,EAAKA,aAAazU,KAAlB,OAjBH,EAqLN2I,4BAAWkO,I,ihBCvML8B,I,uOAAwBnY,IAAMM,e,iDAejCiE,GACdhE,KAAKmO,SAAS,CAACzP,MAAOsF,EAAEG,OAAOzF,QAC3BsB,KAAKC,MAAM+O,UACbhP,KAAKC,MAAM+O,SAAShL,K,uCAIPA,GACfA,EAAEI,iBACFpE,KAAKmO,SAAS,CAACjO,SAAUF,KAAK4O,MAAM1O,Y,oCAGxB8D,GACK,IAAbA,EAAEO,SAEJvE,KAAKmO,SAAS,CAACzP,MAAOsB,KAAKC,MAAMvB,MAAOwB,SAAS,IAC7CF,KAAKC,MAAM4X,YACb7X,KAAKC,MAAM4X,cAES,IAAb7T,EAAEO,SAEXvE,KAAK8X,0B,4CAIa9T,GAAG,WACvB,GAAIA,EAAG,CACL,IAAIS,EAAgBT,EAAES,cACtBsT,WAAW,WACJtT,EAAcP,SAASP,SAASqU,gBAC/B,EAAK/X,MAAM4X,YACb,EAAK5X,MAAM4X,WAAW,EAAKjJ,MAAMlQ,QAGpC,QACMsB,KAAKC,MAAM4X,YACpB7X,KAAKC,MAAM4X,WAAW7X,KAAK4O,MAAMlQ,MAAMwL,U,+BAKzC,OACE,yBAAK+N,SAAS,KAAK9X,UAAU,cAC3BoV,OAAQvV,KAAK8X,uBACb,2BAAO3X,UAAU,kBACfyK,KAAM5K,KAAK4O,MAAM1O,QAAU,OAAS,WACpCxB,MAAOsB,KAAK4O,MAAMlQ,MAClBkV,YAAa5T,KAAKC,MAAM2T,YACxBH,SAAUzT,KAAKC,MAAMwT,SAAW,WAAa,GAC7CkC,UAAW3V,KAAKC,MAAM0V,UAAY,YAAc,GAChDuC,aAAclY,KAAKC,MAAMiY,aACzBlJ,SAAUhP,KAAKmY,gBACf1C,UAAWzV,KAAK0V,gBAClB,0BAAMnV,QAASP,KAAKoY,kBAClB,uBAAGjY,UAAU,uCACVH,KAAK4O,MAAM1O,QAAU,aAAe,yB,4CArE/C,YAAYD,GAAO,a,4FAAA,WACjB,E,yEAAA,uBAAMA,KAED2O,MAAQ,CACXlQ,MAAO,EAAKuB,MAAMvB,MAClBwB,SAAS,GAGX,EAAKkY,iBAAmB,EAAKA,iBAAiBnZ,KAAtB,OACxB,EAAKkZ,gBAAkB,EAAKA,gBAAgBlZ,KAArB,OACvB,EAAKyW,cAAgB,EAAKA,cAAczW,KAAnB,OACrB,EAAK6Y,sBAAwB,EAAKA,sBAAsB7Y,KAA3B,OAXZ,E,ihBCEAoZ,I,uOAAoB5Y,IAAMiE,W,oDAiB1BwK,EAAWsG,GAG5B,IAAM8D,EAAWtY,KAAKC,MAAMvB,OAAS,GACjC8V,EAAU+D,cAAgBD,GAAa9D,EAAUgE,QACnDxY,KAAKmO,SAAS,CACZoK,aAAcD,EACd5Z,MAAO4Z,M,sCAKGtU,GACdhE,KAAKmO,SAAS,CAACzP,MAAOsF,EAAEG,OAAOzF,U,oCAGnBsF,GACM,KAAdA,EAAEO,QAEJvE,KAAKmO,SAAS,CAACzP,MAAOsB,KAAKC,MAAMvB,MAAO8Z,QAAQ,IACzB,KAAdxU,EAAEO,SAEXvE,KAAK8X,sBAAsB9T,K,2CAKxBhE,KAAKC,MAAM0O,WACd/O,IAASqE,YAAYjE,MAAMyY,QAC3BzY,KAAKmO,SAAS,CAACqK,QAAQ,O,4CAILE,GACpB,IAAI1Y,KAAKC,MAAMwT,UAAaiF,EAAMvU,OAAOwU,gBAAzC,CAKA3Y,KAAKmO,SAAS,CAACqK,QAAQ,IACvB,IAAI9Z,EAAQsB,KAAK4O,MAAMlQ,MAAMwL,QACxBxL,GAASsB,KAAKC,MAAMvB,QAAWA,IAAUsB,KAAKC,MAAMvB,OACvDsB,KAAKC,MAAM4X,WAAWnZ,QANtBsB,KAAKmO,SAAS,CAACzP,MAAOsB,KAAKC,MAAMvB,MAAO8Z,QAAQ,M,6CAU7B9Z,GACrBsB,KAAKmO,SAAS,CAACqK,QAAQ,IACnB9Z,GAAUA,IAAUsB,KAAKC,MAAMvB,OACjCsB,KAAKC,MAAM4X,WAAWnZ,K,+BAKxB,GAAIsB,KAAK4O,MAAM4J,OACb,IAAII,EAAY5Y,KAAKC,MAAM2K,MAAQ,WAC9B,CACL,IAAIiO,EAA8B,YAAnB7Y,KAAKC,MAAM2K,KAAqB,WAAa5K,KAAK4O,MAAMlQ,MACnEoa,EAAY,iBACb9Y,KAAKC,MAAM0O,SAAW,YAAc,IAClCkK,IACHA,EAAW7Y,KAAKC,MAAM2T,YACtBkF,GAAa,gBAEO,GAAlBD,EAASzW,SAEXyW,EAAWA,EAASzM,UAAU,EAAG,IAAM,OAG3C,OACEpM,KAAK4O,MAAM4J,OACK,YAAbI,EACC,kBAAC,GAAD,CACEla,MAAOsB,KAAK4O,MAAMlQ,MAClBkV,YAAa5T,KAAKC,MAAM2T,YACxBH,SAAUzT,KAAKC,MAAMwT,SAAW,WAAa,GAC7CyE,aAAclY,KAAKC,MAAMiY,aACzBvC,WAAW,EACXkC,WAAY7X,KAAK+Y,yBAEnB,2BAAOnO,KAAMgO,EACXla,MAAOsB,KAAK4O,MAAMlQ,MAClBkV,YAAa5T,KAAKC,MAAM2T,YACxBH,SAAUzT,KAAKC,MAAMwT,SAAW,WAAa,GAC7CyE,aAAclY,KAAKC,MAAMiY,aACzBvC,WAAS,EACT3G,SAAUhP,KAAKmY,gBACf1C,UAAWzV,KAAK0V,cAChBH,OAAQvV,KAAK8X,wBAGjB,0BAAM3X,UAAW2Y,EAAWvY,QAASP,KAAKgZ,oBACxC,0BAAM7Y,UAAU,WAAW0Y,S,4CA5GnC,YAAY5Y,GAAO,a,4FAAA,WACjB,E,yEAAA,uBAAMA,KAED2O,MAAQ,CACX4J,OAAQvY,EAAMuY,OACdD,aAActY,EAAMvB,OAAS,GAC7BA,MAAOuB,EAAMvB,OAAS,IAGxB,EAAKyZ,gBAAkB,EAAKA,gBAAgBlZ,KAArB,OACvB,EAAKyW,cAAgB,EAAKA,cAAczW,KAAnB,OACrB,EAAK+Z,mBAAqB,EAAKA,mBAAmB/Z,KAAxB,OAC1B,EAAK6Y,sBAAwB,EAAKA,sBAAsB7Y,KAA3B,OAC7B,EAAK8Z,uBAAyB,EAAKA,uBAAuB9Z,KAA5B,OAbb,E,ihBCHAga,I,uOAAmBxZ,IAAMM,e,gDAW1C,IAAMmZ,GAAQlZ,KAAK4O,MAAMsK,KACzBlZ,KAAKmO,SAAS,CAAC+K,KAAMA,IACjBlZ,KAAKC,MAAMkZ,UACbnZ,KAAKC,MAAMkZ,SAASD,K,+BAKtB,OAAQ,2BAAO/Y,UAAU,wBAAwBI,QAASP,KAAKoZ,cAAepZ,KAAKC,MAAMG,MAAjF,MACLJ,KAAK4O,MAAMsK,KAAO,uBAAG/Y,UAAU,kBAAb,eACjB,uBAAGA,UAAU,kBAAb,uB,4CApBN,YAAYF,GAAO,a,4FAAA,WACjB,E,yEAAA,uBAAMA,KAED2O,MAAQ,CACXsK,KAAMjZ,EAAMiZ,MAEd,EAAKE,aAAe,EAAKA,aAAana,KAAlB,OANH,E,ogBCMrB,I,SAAM0D,GAAWC,yBAAe,CAC9B,4DAKA,4DAKA,8DAKA,oEAKA,kEAKA,8DAKA,iEAKA,+DAOIyW,I,uOAA0B5Z,IAAMiE,W,8CAavBgT,GACX,IAAI9X,EAAOoB,KAAK4O,MAAMhQ,MAEV,GADFA,EAAKoN,QAAQ0K,GAErB9X,GAAQ8X,EAER9X,EAAOA,EAAK0a,QAAQ5C,EAAK,IAE3B1W,KAAKmO,SAAS,CAACvP,KAAMA,M,qCAKrB,IAAIA,GAAQoB,KAAK4O,MAAMhQ,MAAQ,KAAK0C,MAAM,IAAIiY,OAAOtX,KAAK,IAEtDrD,KADUoB,KAAKC,MAAMrB,MAAQ,KAAK0C,MAAM,IAAIiY,OAAOtX,KAAK,IAE1DjC,KAAKC,MAAMkX,SAASvY,GAEpBoB,KAAKC,MAAM4S,a,qCAKb7S,KAAKC,MAAM4S,a,+BAqBX,IAlBO,IACA5L,EAAiBjH,KAAKC,MAAMiH,KAA5BD,cACDhC,EAAM,WACNuU,EAAQ,CACZ,EAAKvS,EAActE,GAAS8W,OAAQ,CAAC/C,IAAK,MAC1C,EAAKzP,EAActE,GAASgL,OAAQ,CAAC+I,IAAK,MAC1C,EAAKzP,EAActE,GAAS+W,OAAQ,CAAChD,IAAK,MAC1C,EAAKzP,EAActE,GAASgX,OAAQ,CAACjD,IAAK,MAC1C,EAAKzP,EAActE,GAASiX,SAAU,CAAClD,IAAK,MAC5C,EAAKzP,EAActE,GAASkX,OAAQ,CAACnD,IAAK,MAC1C,EAAKzP,EAActE,GAASmX,QAAS,CAACpD,IAAK,MAC3C,EAAKzP,EAActE,GAASoX,MAAO,CAACrD,IAAK,OAGvCsD,EAAOha,KAAKC,MAAM+Z,MAAQ,GAC1Bpb,EAAOoB,KAAK4O,MAAMhQ,KAClBqb,GAAWja,KAAKC,MAAMga,SAAW,IAAIX,QAAQ,IAAK,IAClD9U,EAAQ,GACH/G,EAAE,EAAGA,EAAEwH,EAAI7C,OAAQ3E,IAAK,CAC/B,IAAIK,EAAImH,EAAImF,OAAO3M,GACI,GAAnBuc,EAAKhO,QAAQlO,IAAWc,EAAKoN,QAAQlO,GAAK,GAI9C0G,EAAMrC,KACJ,wBAAInD,IAAKlB,GACP,4BAAK0b,EAAM1b,IACX,wBAAIqC,UAAU,YAAY6Z,EAAKhO,QAAQlO,GAAK,EAC1C,kBAAC,GAAD,CAAUE,KAAMF,EAAGsR,QAA6B,GAAnBxQ,EAAKoN,QAAQlO,GAAUkR,SAAUhP,KAAKqP,eAEnE,kBAAC,GAAD,CAAUrR,KAAMF,EAAGsR,QAA6B,GAAnBxQ,EAAKoN,QAAQlO,MACrCkC,KAAKC,MAAMga,QAAU,wBAAI9Z,UAAU,YACxC,kBAAC,GAAD,CAAUnC,KAAMF,EAAGsR,QAAgC,GAAtB6K,EAAQjO,QAAQlO,MACvC,OAKd,OACE,yBAAKqC,UAAU,qBACZH,KAAKC,MAAMia,UACV,wBAAI/Z,UAAU,eAAc,kBAAC,GAAD,CAC1ByB,KAAM5B,KAAKC,MAAM2B,KACjBxB,MAAOJ,KAAKC,MAAMia,UAClBvQ,OAAQe,GAAa1K,KAAKC,MAAMka,WAAana,KAAKC,MAAMka,WAAa,SAAiB,KAC1F,2BAAOha,UAAU,SAAQ,kBAAC,mBAAD,CAAkBM,GAAG,oBAC5C2W,eAAe,iBACjB,2BAAOjX,UAAU,qBAChBH,KAAKC,MAAMga,QACV,+BAAO,4BACL,6BAAS,4BAAKja,KAAKC,MAAMma,WACzB,4BAAKpa,KAAKC,MAAMoa,gBAElB,KACF,+BACG7V,IAEH,6BACA,yBAAKrE,UAAU,kBACb,4BAAQA,UAAU,UAAUI,QAASP,KAAK0T,cACxC,kBAAC,mBAAD,CAAkBjT,GAAG,mBAEvB,4BAAQN,UAAU,OAAOI,QAASP,KAAKyX,cACrC,kBAAC,mBAAD,CAAkBhX,GAAG,sB,4CArG/B,YAAYR,GAAO,a,4FAAA,WACjB,E,yEAAA,uBAAMA,KAED2O,MAAQ,CACXhQ,MAAOqB,EAAMrB,MAAQ,IAAI0a,QAAQ,IAAK,KAGxC,EAAKjK,aAAe,EAAKA,aAAapQ,KAAlB,OACpB,EAAKwY,aAAe,EAAKA,aAAaxY,KAAlB,OACpB,EAAKyU,aAAe,EAAKA,aAAazU,KAAlB,OATH,EA6GN2I,4BAAWyR,ICjKnB,SAASiB,GAAcrU,GAC5B,IAAMsU,EAAU5W,SAAS6W,eAAe,iBAClCC,EAAO9W,SAAS8W,MAAQ9W,SAAS+W,qBAAqB,QAAQ,GAC9DC,EAAUhX,SAASmJ,cAAc,QACvC6N,EAAQ/P,KAAO,YACf+P,EAAQla,GAAK,gBACbka,EAAQC,IAAM,gBACdD,EAAQ9L,KAAO,iBAA2B,EAAR5I,EAAY,IAAM,IAAM,OACtDsU,GACFE,EAAKI,YAAYN,GAEnBE,EAAKK,YAAYH,GAEjBhX,SAASvD,OAAiB,EAAR6F,EAAY,IAAIA,EAAM,KAAO,IAAM,SAIhD,SAAS8U,GAAM7I,EAAI8I,GACxB,IAAIC,EAAO,KAEX,IAAK/I,GAAMA,EAAGhI,QAAW8Q,KACvBC,EAAO,GACH/I,IACF+I,EAAK/I,GAAKA,EAAGhI,QAEX8Q,GAAc,CAChB,IAAME,EAAYF,EAAahP,QAAQ,KACvCiP,EAAKtQ,MAAqB,GAAbuQ,EAAiB,CAC5BrQ,KAAMmQ,EAAa5O,UAAU8O,EAAU,GACvCtQ,KAAM,OACJoQ,EAGR,OAAOC,EAIF,SAASE,GAAWC,EAAG3L,GAC5B,GAAI2L,IAAM3L,EACR,OAAO,EAGT,IAAK8B,MAAMC,QAAQ4J,KAAO7J,MAAMC,QAAQ/B,GACtC,OAAO,EAIT,GAAI2L,EAAEhZ,QAAUqN,EAAErN,OAChB,OAAO,EAGTgZ,EAAE7B,OACF9J,EAAE8J,OACF,IAAK,IAAI9b,EAAI,EAAGC,EAAI0d,EAAEhZ,OAAQ3E,EAAIC,EAAGD,IACnC,GAAI2d,EAAE3d,KAAOgS,EAAEhS,GACb,OAAO,EAGX,OAAO,EAkCF,SAAS4d,GAAYvZ,EAAKwZ,GAC/B,IAAKxZ,EACH,OAAO,KAOT,GAHAA,EAAMA,EAAIwX,QAAQ,kBAAmB,IAAIpP,QAGpC,8BAA8BqR,KAAKzZ,GACtC,OAAOA,EAGT,GAAI,aAAayZ,KAAKzZ,GACpB,OAAOA,EAIT,IAAM0Z,EAAUjK,MAAMC,QAAQ8J,GAAkBA,EAAerZ,KAAK,KAAO,aAE3E,OADW,IAAIwZ,OAAO,MAAQD,EAAU,SAAU,KAC1CD,KAAKzZ,GAINA,EAHE,K,ihBC3GU4Z,I,uOAAmBjc,IAAMiE,W,yDAiBZiY,EAAWnH,GACzC,OAAK2G,GAAWQ,EAAUC,KAAMpH,EAAUoH,OAAUpH,EAAUqH,UAGvD,KAFE,CAACD,KAAMD,EAAUC,U,yCAKbzI,GAEb,GADAnT,KAAKmO,SAAS,CAAC2N,SAAU3I,IACP,EAAdA,EAAK/Q,OAAY,CACnB,IAAM2Z,EAAO5I,EAAKA,EAAK/Q,OAAO,GACf,KAAX+Q,EAAK,GAEW,EAAdA,EAAK/Q,QAAsB,KAAR2Z,GACrB/b,KAAKgc,aAAa7I,EAAK/G,UAAU,EAAG+G,EAAK/Q,OAAO,IAEjC,KAAR2Z,GAAuB,KAARA,GAAuB,KAARA,GAAuB,KAARA,GAEtD/b,KAAKgc,aAAa7I,EAAK/G,UAAU,EAAG+G,EAAK/Q,OAAO,GAAG8H,W,mCAK5C+R,GACX,GAAiB,EAAbA,EAAI7Z,OAAY,CAClB,IAAMwZ,EAAO5b,KAAK4O,MAAMgN,KAAKvL,MAAM,GAOnC,OANAuL,EAAKzZ,KAAK8Z,GAEVjc,KAAKmO,SAAS,CAACyN,KAAMA,EAAME,SAAU,KACjC9b,KAAKC,MAAMic,eACblc,KAAKC,MAAMic,cAAcN,GAEpBA,EAET,OAAO5b,KAAK4O,MAAMgN,O,sCAGJK,EAAKlM,GACnB,IAAM6L,EAAO5b,KAAK4O,MAAMgN,KAAKvL,MAAM,GACnCuL,EAAKnF,OAAO1G,EAAO,GACnB/P,KAAKmO,SAAS,CAACyN,KAAMA,IACjB5b,KAAKC,MAAMic,eACblc,KAAKC,MAAMic,cAAcN,K,qCAM3B5b,KAAKC,MAAMkX,SAASnX,KAAKgc,aAAahc,KAAK4O,MAAMkN,SAAS5R,SAC1DlK,KAAKmO,SAAS,CAAC0N,WAAW,EAAOD,KAAM5b,KAAKC,MAAM2b,S,qCAIlD5b,KAAKmO,SAAS,CAAC0N,WAAW,EAAOC,SAAU,GAAIF,KAAM5b,KAAKC,MAAM2b,OAC5D5b,KAAKC,MAAM4S,UACb7S,KAAKC,MAAM4S,a,+BAIN,WACH+I,EAAO,GAiBX,OAhBI5b,KAAK4O,MAAMiN,UACb7b,KAAK4O,MAAMgN,KAAKzV,IAAI,SAAC8V,GACnBL,EAAKzZ,KAAK,CAAC6D,KAAMiW,EAAK1I,QAAU0I,EAAI7Z,OvBhEd,OuBmExBpC,KAAK4O,MAAMgN,KAAKzV,IAAI,SAAC8V,GACnBL,EAAKzZ,KAAK,0BAAMhC,UAAU,QAAQnB,IAAK4c,EAAKxZ,QAAS6Z,MAEpC,GAAfL,EAAKxZ,SACPwZ,EACE,2BACE,kBAAC,mBAAD,CAAkBnb,GAAG,iBAAiB2W,eAAe,kCAM3D,yBAAKjX,UAAU,qBACb,yBAAKA,UAAU,kBACb,2BAAOA,UAAU,SAASH,KAAKC,MAAMG,QAEtCJ,KAAK4O,MAAMiN,UACZ,6BACE,kBAAC,mBAAD,CAAkBpb,GAAG,sBAAsB2W,eAAe,iBAExD,SAAC+E,GAAD,OAAqB,kBAAC,GAAD,CACnBtI,MAAO+H,EACPzG,gBAAgB,EAChBrB,OAAQqI,EACRnH,QAAS,EAAKgH,aACdjH,YAAa,EAAKiH,aAClBnJ,SAAU,EAAKa,aACfkB,cAAe,EAAKwH,gBACpBvK,WAAY,EAAKwK,mBAEpBrc,KAAKC,MAAMkX,UAAYnX,KAAKC,MAAM4S,SACjC,yBAAKpS,GAAG,sBAAsBN,UAAU,iCACtC,4BAAQA,UAAU,UAAUI,QAASP,KAAK0T,cACxC,kBAAC,mBAAD,CAAkBjT,GAAG,gBAAgB6b,cAAc,SAASC,YAAY,+BAE1E,4BAAQpc,UAAU,OAAOI,QAASP,KAAKyX,cACrC,kBAAC,mBAAD,CAAkBhX,GAAG,YAAY6b,cAAc,KAAKC,YAAY,+BAGpE,MAGJ,yBAAKpc,UAAU,UACb,uBAAG0O,KAAK,IAAI1O,UAAU,cAAcI,QAAS,SAACyD,GAAOA,EAAEI,iBAAkB,EAAK+J,SAAS,CAAC0N,WAAW,MACjG,uBAAG1b,UAAU,kBAAb,QADF,KAC+C,kBAAC,mBAAD,CAAkBM,GAAG,oBAAoB2W,eAAe,YAGvG,oCAAGwE,U,4CAjIX,YAAY3b,GAAO,a,4FAAA,WACjB,E,yEAAA,uBAAMA,KAED2O,MAAQ,CACXgN,KAAM,EAAK3b,MAAM2b,KACjBE,SAAU,GACVD,UAAW,EAAK5b,MAAM4b,WAGxB,EAAKQ,eAAiB,EAAKA,eAAepd,KAApB,OACtB,EAAK+c,aAAe,EAAKA,aAAa/c,KAAlB,OACpB,EAAKmd,gBAAkB,EAAKA,gBAAgBnd,KAArB,OACvB,EAAKwY,aAAe,EAAKA,aAAaxY,KAAlB,OACpB,EAAKyU,aAAe,EAAKA,aAAazU,KAAlB,OAbH,E,ogBCYrB,I,SAAM0D,GAAWC,yBAAe,CAC9B4Z,UAAW,CAAF,uDAKTC,QAAS,CAAF,mDAKPC,iBAAkB,CAAF,mEAKhBC,WAAY,CAAF,8CAKV9Z,eAAgB,CAAF,4DAKd+Z,uBAAwB,CAAF,gHAKtBC,gBAAiB,CAAF,qEAKfC,wBAAyB,CAAF,+HAKvBC,WAAY,CAAF,4DAKVC,mBAAoB,CAAF,4FAKlBC,cAAe,CAAF,0DAKbC,sBAAuB,CAAF,0FAKrBC,YAAa,CAAF,8DAKXC,oBAAqB,CAAF,0GAOfC,I,uOAAiB5d,IAAMiE,W,oDA4DRzD,GACjB,IAAMwC,EAAQzC,KAAKC,MAAMmF,OAAOC,SAASpF,EAAMwC,OAC1CA,IAIDzC,KAAKsd,YAAc7a,EAAM6a,aAC3Btd,KAAKud,iBAAmB9a,EAAM6a,WAC9B7a,EAAM6a,WAAatd,KAAKsd,WAExBtd,KAAKwd,oBAAsB/a,EAAMgb,cACjChb,EAAMgb,cAAgBzd,KAAKyd,cAEJ,OAAnBhb,EAAMib,WACR1d,KAAK2d,oBAAsBlb,EAAMmb,cACjCnb,EAAMmb,cAAgB5d,KAAK4d,eAE3B5d,KAAK2d,yBAAsBzI,GAI3BlV,KAAK4O,MAAMnM,OAASxC,EAAMwC,QAC5BzC,KAAKmO,SAAS,CAAC1L,MAAOxC,EAAMwC,QAC5BzC,KAAK6d,UAAUpb,EAAOxC,GACtBD,KAAK8d,UAAUrb,EAAOxC,O,6CAKxB,IAAMwC,EAAQzC,KAAKC,MAAMmF,OAAOC,SAASrF,KAAKC,MAAMwC,OAC/CA,IAGLzC,KAAKmO,SAAS,CAAC1L,MAAO,OACtBA,EAAM6a,WAAatd,KAAKud,iBACxB9a,EAAMgb,cAAgBzd,KAAKwd,oBAC3B/a,EAAMmb,cAAgB5d,KAAK2d,uB,gCAGnBlb,EAAOxC,GACf,IAAM8d,EAAW,CAACC,YAAa,IAC/B,GAAuB,OAAnBvb,EAAMib,UAAoB,CAG5B,IAAMO,EAAQxb,EAAMyb,WAAWje,EAAMwC,OACjCwb,GACFF,EAASI,WAAaF,EAAMjO,IAAIoO,WAChCL,EAASM,UAAYJ,EAAMjO,IAAIsO,YAE/BP,EAASI,WxB3Ka,IwB4KtBJ,EAASM,UxB5Ka,UwB+KxB5b,EAAM8b,YAAY,SAACC,GACjBT,EAASC,YAAY7b,KAAKqc,IACzBxe,MAGLA,KAAKmO,SAAS4P,K,gCAGNtb,EAAOxC,GACf,IAAMwe,EAAShc,EAAMic,oBAAsB,GACrC1O,EAAMvN,EAAMkc,gBAElB3e,KAAKmO,SAAS,CACZ4L,MAAO/J,GAAOA,EAAIoC,UAClBwM,MAAO5O,GAAOA,EAAI6O,UAClBhF,OAAQ7J,GAAOA,EAAI8O,WACnBhF,QAAS9J,GAAOA,EAAI+O,YACpBC,MAAOhP,GAAOA,EAAIS,UAElBwO,SAAUxc,EAAMwP,OAASxP,EAAMwP,OAAOC,QAAKgD,EAC3CvL,OAAQe,GAAajI,EAAMwP,OAASxP,EAAMwP,OAAOtH,MAAQ,MACzDoH,QAAStP,EAAMsP,QAAUtP,EAAMsP,QAAQhB,QAAU,KACjDmO,QAASzc,EAAMzE,KACfmhB,WAAgC,OAAnB1c,EAAMib,UACnB0B,iBAAiB,EACjBC,OAAQrP,EAAMA,EAAIQ,eAAY0E,EAC9BoK,UAAWtP,EAAMA,EAAIoO,gBAAalJ,EAClCqK,SAAUvP,EAAMA,EAAIsO,eAAYpJ,EAChCsK,KAAMf,EAAOe,KACbC,KAAMhB,EAAOgB,OAGQ,OAAnBhd,EAAMib,WAAsB1N,GAAOA,EAAIoC,WAEzC3P,EAAMid,QAAQjd,EAAMkd,iBAAiBC,WAAWC,W,iCAIzCC,GACT,IAAMrd,EAAQzC,KAAKC,MAAMmF,OAAOC,SAASrF,KAAKC,MAAMwC,OAC/CA,IAGLzC,KAAK6d,UAAUpb,EAAOzC,KAAKC,OAEvBD,KAAKud,kBAAoBvd,KAAKud,kBAAoBvd,KAAKsd,YACzDtd,KAAKud,iBAAiBuC,M,oCAIZC,GACZ,IAAMtd,EAAQzC,KAAKC,MAAMmF,OAAOC,SAASrF,KAAKC,MAAMwC,OAC/CA,IAGLzC,KAAK8d,UAAUrb,EAAOzC,KAAKC,OAEvBD,KAAKwd,qBAAuBxd,KAAKwd,qBAAuBxd,KAAKyd,eAC/Dzd,KAAKwd,oBAAoBuC,M,oCAIfnE,GACZ5b,KAAKmO,SAAS,CAACyN,KAAMA,IAEjB5b,KAAK2d,qBAAuB3d,KAAK2d,qBAAuB3d,KAAK4d,eAC/D5d,KAAK2d,wB,2CAIYzL,GACnBA,EAAKA,EAAGhI,OAAOkC,UAAU,ExB/MG,IwBgNxBpM,KAAK4O,MAAMqQ,WAAa/M,IAC1BlS,KAAKmO,SAAS,CAAC8Q,SAAU/M,IACzBlS,KAAKC,MAAM+f,kBAAkBhgB,KAAKC,MAAMwC,MAAOsY,GAAM7I,EAAI,MAAO,S,0CAIhDnB,GAClBA,EAAUA,EAAQ7G,OAAOkC,UAAU,ExBvNP,IwBwNxBpM,KAAK4O,MAAMmD,UAAYhB,IACzB/Q,KAAKmO,SAAS,CAAC4D,QAAShB,IACxB/Q,KAAKC,MAAM+f,kBAAkBhgB,KAAKC,MAAMwC,MAAO,KAAMsO,GAAWpR,IAAOsgB,a,yCAIxDzT,GACjBxM,KAAKmO,SAAS,CAACxE,OAAQ6C,IACvBxM,KAAKC,MAAM+f,kBAAkBhgB,KAAKC,MAAMwC,MAAOsY,GAAM,KAAMvO,GAAO7M,IAAOsgB,UAAW,Q,kCAG1EC,EAAS9Q,GACnBpP,KAAKmO,SAAS,CAAC6Q,MAAO5P,IACtBpP,KAAKC,MAAMkgB,oBAAoBngB,KAAKC,MAAMwC,MAAO2M,EAAU,KAAO,Q,+CAG3CgR,GACvB,OAAQpgB,KAAK4O,MAAMyR,yBACjB,IAAK,OACHrgB,KAAKC,MAAM+f,kBAAkBhgB,KAAKC,MAAMwC,MAAO,KAAM,KAAM,CAAC+c,KAAMY,IAClE,MACF,IAAK,OACHpgB,KAAKC,MAAM+f,kBAAkBhgB,KAAKC,MAAMwC,MAAO,KAAM,KAAM,CAACgd,KAAMW,IAClE,MACF,IAAK,OACL,IAAK,OACHpgB,KAAKC,MAAMkgB,oBAAoBngB,KAAKC,MAAMwC,MAAO2d,GACjD,MACF,IAAK,QACHpgB,KAAKC,MAAMkgB,oBAAoBngB,KAAKC,MAAMwC,MAAO2d,EAAMpgB,KAAKC,MAAMwC,OAClE,MACF,IAAK,OACHzC,KAAKC,MAAMkgB,oBAAoBngB,KAAKC,MAAMwC,MAAO2d,EAAMpgB,KAAK4O,MAAM0R,uBAItEtgB,KAAKmO,SAAS,CAACkS,6BAAyBnL,M,oDAGZqL,EAAOzR,GAAK,IAEpC0R,EAAQC,EAAWC,EAAQC,EAAWC,EAAc1G,EAAWC,EAD5DlT,EAAiBjH,KAAKC,MAAMiH,KAA5BD,cAEP,OAAQsZ,GACN,IAAK,OACHC,EAASxgB,KAAK4O,MAAMyQ,OACpB,MACF,IAAK,OACHmB,EAASxgB,KAAK4O,MAAM2Q,SACpBkB,EAAYzgB,KAAK4O,MAAM0Q,UACvBoB,EAAS1gB,KAAK4O,MAAMuQ,WAAa,IAAM,OACvCwB,EAAY1Z,EAActE,GAAS6Z,WACnCoE,EAAe3Z,EAActE,GAAS8Z,SACtC,MACF,IAAK,QACH+D,EAASxgB,KAAK4O,MAAMuP,WACpBsC,EAAYzgB,KAAK4O,MAAMyP,UACvBqC,EAAS1gB,KAAK4O,MAAMuQ,WAAcnf,KAAK4O,MAAMmL,MAAQ,GAAK,IAAO,OACjE4G,EAAY1Z,EAActE,GAAS8Z,SACnCmE,EAAe3Z,EAActE,GAAS6Z,WACtC,MACF,IAAK,OACHgE,EAASxgB,KAAK4O,MAAM4Q,KACpBkB,EAAS,IACT,MACF,IAAK,OACHF,EAASxgB,KAAK4O,MAAM6Q,KACpBiB,EAAS,IACT,MACF,IAAK,OACH,IAAIje,EAAQzC,KAAKC,MAAMmF,OAAOC,SAASrF,KAAKC,MAAMwC,OAClD,IAAKA,EACH,OAEF,IAAIuD,EAAOvD,EAAMyb,WAAWpP,GAC5B,IAAK9I,IAASA,EAAKgK,IACjB,OAEFwQ,EAASxa,EAAKgK,IAAIoO,WAClBqC,EAAYza,EAAKgK,IAAIsO,UACrBoC,EAAS1gB,KAAK4O,MAAMmL,MAAQ,GAAK,IACjC4G,EAAY1Z,EAActE,GAAS8Z,SACnCmE,EAAe3Z,EAActE,GAAS6Z,WAClCxW,EAAKiM,SACPiI,EAAYlU,EAAKiM,OAAOC,GACxBiI,EAAanU,EAAKiM,OAAOtH,OAE3B,MAEF,QACE5F,QAAQC,IAAI,oCAAsCub,EAAQ,KAG9DvgB,KAAKmO,SAAS,CACZkS,wBAAyBE,EACzBD,sBAAuBxR,EACvB+R,qBAAsB3G,EACtB4G,sBAAuB3G,EACvB4G,kBAAmBP,EACnBQ,qBAAsBP,EACtBQ,uBAAwBN,EACxBO,0BAA2BN,EAC3BO,yBAA0BT,M,oDAK5B1gB,KAAKmO,SAAS,CAACkS,6BAAyBnL,M,2CAGrBlR,GACnBA,EAAEI,iBACFpE,KAAKC,MAAMmhB,aACXphB,KAAKmO,SAAS,CAACiR,iBAAiB,M,6CAIhCpf,KAAKmO,SAAS,CAACiR,iBAAiB,M,gDAGRrJ,EAASiB,EAAOrC,GACxC3U,KAAKC,MAAMohB,sBAAsBrhB,KAAKC,MAAMwC,MAAOuU,EAAOrC,GAC1D3U,KAAKmO,SAAS,CAACiR,iBAAiB,M,2CAGbpb,GAAG,WACtBA,EAAEI,iBADoB,IAEf6C,EAAiBjH,KAAKC,MAAMiH,KAA5BD,cACPjH,KAAKC,MAAMkH,YACTF,EAAcjH,KAAK4O,MAAMkL,QAAUnX,GAASka,gBAAkBla,GAASE,gBACvEoE,EAAcjH,KAAK4O,MAAMkL,QAAUnX,GAASma,wBAA0Bna,GAASia,wBAC9E,WAAQ,EAAK3c,MAAMqhB,iBAAiB,EAAKrhB,MAAMwC,QAChD,MACA,EACA,Q,kCAIQuB,GAAG,WACbA,EAAEI,iBADW,IAEN6C,EAAiBjH,KAAKC,MAAMiH,KAA5BD,cACPjH,KAAKC,MAAMkH,YACTF,EAActE,GAASoa,YACvB9V,EAActE,GAASqa,oBACtB,WAAQ,EAAK/c,MAAMshB,aAAa,EAAKthB,MAAMwC,QAC5C,MACA,EACA,Q,kCAIQuB,GAAG,WACbA,EAAEI,iBADW,IAEN6C,EAAiBjH,KAAKC,MAAMiH,KAA5BD,cACPjH,KAAKC,MAAMkH,YACTF,EAActE,GAASsa,eACvBhW,EAActE,GAASua,uBACtB,WAAQ,EAAKjd,MAAMuhB,aAAa,EAAKvhB,MAAMwC,QAC5C,MACA,EACA,Q,mCAISuB,GAAG,WACdA,EAAEI,iBADY,IAEP6C,EAAiBjH,KAAKC,MAAMiH,KAA5BD,cACPjH,KAAKC,MAAMkH,YACTF,EAActE,GAASwa,aACvBlW,EAActE,GAASya,qBACtB,WAAQ,EAAKnd,MAAMwhB,cAAc,EAAKxhB,MAAMwC,QAC7C,MACA,EACA,Q,2CAIiBqM,GACnB9O,KAAKmO,SAAS,CAACuT,gBAAiB5S,M,qCAGnBoK,GACblZ,KAAKmO,SAAS,CAACwT,iBAAkBzI,M,wCAGjB0C,GACXT,GAAWnb,KAAK4O,MAAMgN,KAAKvL,MAAM,GAAIuL,EAAKvL,MAAM,KACnDrQ,KAAKC,MAAM2hB,kBAAkB5hB,KAAKC,MAAMwC,MAAOmZ,K,wCAIjCra,GAAQ,IACjB0F,EAAiBjH,KAAKC,MAAMiH,KAA5BD,cACD8P,EAAW/W,KACXyC,EAAQzC,KAAKC,MAAMmF,OAAOC,SAASrF,KAAKC,MAAMwC,OACpD,GAAKA,EAAL,CAGA,IAAMuD,EAAOvD,EAAMyb,WAAW3c,EAAO+D,WACrC,GAAKU,GAASA,EAAKgK,IAAnB,CAIA,IAAM6R,EAAY,CAChB,CAACzhB,MAAO6G,EAActE,GAAS+Z,kBAAmB7X,QAAS,WACzDkS,EAAS+K,8BAA8B,OAAQvgB,EAAO+D,aAExD,gBACAU,EAAKgK,IAAIS,UAAY,gBAAkB,cACvCzK,EAAKgK,IAAIU,WAAa,eAAiB,kBAEzC1Q,KAAKC,MAAMgQ,gBAAgB,CACzB3K,UAAWtF,KAAKC,MAAMwC,MACtBmE,EAAGrF,EAAOqF,EACVG,EAAGxF,EAAOwF,EACVf,KAAMzE,EAAO+D,WAAYuc,O,+BAGpB,WACA5a,EAAiBjH,KAAKC,MAAMiH,KAA5BD,cAEP,OACE,yBAAKxG,GAAG,aACN,yBAAKN,UAAU,gBAAgBM,GAAG,sBAChC,yBAAKN,UAAU,cAAcM,GAAG,cAC9B,kBAAC,mBAAD,CAAkBA,GAAG,aAAa2W,eAAe,UAEnD,6BACE,kBAAC,GAAD,CAAYvE,SAAU7S,KAAKC,MAAM4S,aAGpC7S,KAAKC,MAAM8hB,cACV,kBAAC,GAAD,CACEhP,MAAO/S,KAAKC,MAAM+hB,WAClB7O,KAAMnT,KAAKC,MAAMgiB,UACjBhP,aAAcjT,KAAKC,MAAM6E,UAAc,KAC1C9E,KAAK4O,MAAMwQ,gBACV,kBAAC,GAAD,CACErJ,QAAS/V,KAAK4O,MAAMoP,YACpB7H,eAAgBnW,KAAKC,MAAMkS,SAC3BwF,oBAAqB3X,KAAK4O,MAAMgQ,QAAU5e,KAAK4O,MAAMmL,MACrD5H,SAAUnS,KAAKC,MAAMkS,SACrBP,SAAU5R,KAAKC,MAAMiiB,mBACrBrP,SAAU7S,KAAKmiB,qBACfhL,SAAUnX,KAAKoiB,4BAEnBpiB,KAAK4O,MAAMyR,wBACT,kBAAC,GAAD,CACEzhB,KAAMoB,KAAK4O,MAAMmS,kBACjB9G,QAASja,KAAK4O,MAAMoS,qBACpBhH,KAAMha,KAAK4O,MAAMuS,yBACjB/G,UAAWpa,KAAK4O,MAAMqS,uBACtB5G,aAAcra,KAAK4O,MAAMsS,0BACzBhH,UAAWla,KAAK4O,MAAMiS,qBACtBjf,KAAM5B,KAAK4O,MAAM0R,sBACjBnG,WAAYna,KAAK4O,MAAMkS,sBACvB3J,SAAUnX,KAAKqiB,yBACfxP,SAAU7S,KAAKsiB,8BAGjB,yBAAK7hB,GAAG,oBAAoBN,UAAU,oBACpC,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,qBACb,6BAAK,2BAAOA,UAAU,SACpB,kBAAC,mBAAD,CAAkBM,GAAG,mBAAmB2W,eAAe,WAGzD,6BAAK,kBAAC,GAAD,CACDxD,YAAa5T,KAAK4O,MAAMuQ,WAAa,aAAe,sCACpDxQ,UAAW3O,KAAK4O,MAAMmL,MACtBrb,MAAOsB,KAAK4O,MAAMqQ,SAClBxL,UAAU,EACVoE,WAAY7X,KAAKuiB,wBACrB,6BACE,2BAAOpiB,UAAU,SACf,kBAAC,mBAAD,CAAkBM,GAAG,gBAAgB2W,eAAe,sBAIxD,6BACE,kBAAC,mBAAD,CAAkB3W,GAAG,8BACnB2W,eAAe,uBAEf,SAACoL,GAAD,OAAyB,kBAAC,GAAD,CACvB5O,YAAa4O,EACb9jB,MAAO,EAAKkQ,MAAMmD,QAClB8F,WAAY,EAAK4K,0BAIzB,kBAAC,GAAD,CACE9Y,OAAQ3J,KAAK4O,MAAMjF,OACnBgF,UAAW3O,KAAK4O,MAAMmL,MACtBjL,IAAK9O,KAAKC,MAAMwC,MAChBrC,MAAOJ,KAAK4O,MAAMqQ,SAClBzQ,eAAgBxO,KAAK0iB,mBACrB5d,QAAS9E,KAAKC,MAAM6E,WAExB,yBAAK3E,UAAU,OACf,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,kBACb,+BACE,kBAAC,mBAAD,CAAkBM,GAAG,qBAAqB2W,eAAe,YAG3D,kBAAC,GAAD,CAAUpZ,KAAK,IAAIoR,QAASpP,KAAK4O,MAAMoQ,MACrChQ,SAAUhP,KAAK2iB,eAEnB,kBAAC,mBAAD,CAAkBliB,GAAG,cAAc2W,eAAe,QAEhD,SAACwL,GAAD,OAAU,kBAAC,GAAD,CACRxiB,MAAOwiB,EACP1J,KAAM,EAAKtK,MAAM+S,iBACjBxI,SAAU,EAAK0J,mBAElB7iB,KAAK4O,MAAM+S,iBACV,yBAAKxhB,UAAU,qBACb,yBAAKA,UAAU,kBACb,+BAAO,kBAAC,mBAAD,CAAkBM,GAAG,mBAC5B,4BAAKT,KAAK4O,MAAMsQ,UAEjBlf,KAAK4O,MAAMuQ,WACV,yBAAKhf,UAAU,kBACb,+BACE,kBAAC,mBAAD,CAAkBM,GAAG,yBAAyB2W,eAAe,uBAG/D,wBAAIjX,UAAU,YACZI,QAASP,KAAK8hB,8BAA8B7iB,KAAKe,KAAM,SACtDA,KAAK4O,MAAMyQ,SAIhB,6BACE,6BACE,2BAAOlf,UAAU,SACf,kBAAC,mBAAD,CAAkBM,GAAG,oBAAoB2W,eAAe,mBAI5D,yBAAKjX,UAAU,UACb,6BACE,kBAAC,mBAAD,CAAkBM,GAAG,YAAY2W,eAAe,SADlD,KAEsD,wBAAIjX,UAAU,YAClEI,QAASP,KAAK8hB,8BAA8B7iB,KAAKe,KAAM,SACtDA,KAAK4O,MAAMyQ,SAEd,6BAAMrf,KAAK4O,MAAMqQ,SAAWjf,KAAK4O,MAAMqQ,SAAWhY,EAActE,GAASga,YAAzE,MACQ,wBAAIxc,UAAU,YAAYI,QAASP,KAAK8hB,8BAA8B7iB,KAAKe,KAAM,UACtFA,KAAK4O,MAAMuP,eAMnBne,KAAK4O,MAAMiL,SAAW7Z,KAAK4O,MAAM4Q,MAAQxf,KAAK4O,MAAM6Q,MACrD,6BACE,6BACE,2BAAOtf,UAAU,SACf,kBAAC,mBAAD,CAAkBM,GAAG,uBAAuB2W,eAAe,2BAI/D,yBAAKjX,UAAU,UACb,sCAAYH,KAAK4O,MAAMgQ,MACrB,wBAAIze,UAAU,YACZI,QAASP,KAAK8hB,8BAA8B7iB,KAAKe,KAAM,SACtDA,KAAK4O,MAAM4Q,MAGd,4BAAKxf,KAAK4O,MAAM4Q,OAGlB,sCAAYxf,KAAK4O,MAAMgQ,MACrB,wBAAIze,UAAU,YACZI,QAASP,KAAK8hB,8BAA8B7iB,KAAKe,KAAM,SACtDA,KAAK4O,MAAM6Q,MAGd,4BAAKzf,KAAK4O,MAAM6Q,SAMtB,MAIJ,MAGF,yBAAKtf,UAAU,OACdH,KAAK4O,MAAMmL,MACV,oCACE,kBAAC,mBAAD,CAAkBtZ,GAAG,qBACnB,SAACmb,GAAD,OAAU,kBAAC,GAAD,CACRxb,MAAOwb,EACPA,KAAM,EAAKhN,MAAMgN,KACjBC,WAAW,EACX1E,SAAU,EAAK2L,sBAEnB,yBAAK3iB,UAAU,QAGjB,KAEF,yBAAKA,UAAU,qBACb,uBAAG0O,KAAK,IAAI1O,UAAU,cAAcI,QAASP,KAAK+iB,sBAChD,uBAAG5iB,UAAU,kBAAb,kBADF,KAEI8G,EAAcjH,KAAK4O,MAAMkL,QAAUnX,GAASka,gBAAkBla,GAASE,iBAG3E,uBAAGgM,KAAK,IAAI1O,UAAU,kBAAkBI,QAASP,KAAKgjB,aACpD,uBAAG7iB,UAAU,kBAAb,eADF,KACuD8G,EAActE,GAASoa,aAE5E/c,KAAK4O,MAAMuQ,WAKX,KAJA,uBAAGtQ,KAAK,IAAI1O,UAAU,kBAAkBI,QAASP,KAAKijB,aACpD,uBAAG9iB,UAAU,kBAAb,SADF,KACiD8G,EAActE,GAASsa,gBAKxEjd,KAAK4O,MAAMmL,MAKX,KAJA,uBAAGlL,KAAK,IAAI1O,UAAU,kBAAkBI,QAASP,KAAKkjB,cACpD,uBAAG/iB,UAAU,kBAAb,UADF,KACkD8G,EAActE,GAASwa,eAM5End,KAAK4O,MAAMuQ,WACV,oCACE,yBAAKhf,UAAU,OACf,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,kBACb,2BAAOA,UAAU,SACf,kBAAC,mBAAD,CAAkBM,GAAG,sBAAsB2W,eAAe,qBAI9D,yBAAKjX,UAAU,kBACZH,KAAK4O,MAAMiL,OACV,uBAAGhL,KAAK,IAAI1O,UAAU,cAAcI,QAASP,KAAKmjB,sBAChD,uBAAGhjB,UAAU,kBAAb,cADF,KACqD,kBAAC,mBAAD,CAAkBM,GAAG,qBACtE2W,eAAe,iBAEjB,MAEN,kBAAC,mBAAD,CAAkB3W,GAAG,uBAAuB2W,eAAe,cAEzD,SAACgM,GAAD,OAAgB,kBAAC,GAAD,CACdxR,SAAU,EAAKhD,MAAMoP,YACrB7L,SAAU,EAAKlS,MAAMkS,SACrBQ,iBAAkByQ,EAClB3R,cAAe,EAAK7C,MAAM8S,gBAC1B7Q,YAAY,EACZwB,YAAY,EACZ9B,UAAU,EACViC,UAAU,EACVD,gBAAiB,EAAK8Q,qBACtBpT,kBAAiB,EAAKrB,MAAMgQ,OAAQ,EAAK0E,wBAMjD,Y,4CAlpBZ,YAAYrjB,GAAO,a,4FAAA,WACjB,E,yEAAA,uBAAMA,KAED2O,MAAQ,CACXnM,MAAO,KACPsX,OAAO,EACP6E,OAAO,EACP/E,QAAQ,EACRC,SAAS,EACTkF,OAAO,EACPE,QAAS,KACTC,gBAAYjK,EACZ+J,cAAU/J,EACVvL,OAAQ,KACRoI,QAAS,KACT2P,gBAAiB,KACjBrC,OAAQ,KACRC,UAAW,KACXC,SAAU,KACVpB,WAAY,KACZE,UAAW,KACXmB,KAAM,KACNC,KAAM,KACNzB,YAAa,GACbpC,KAAM,GACNwD,iBAAiB,EACjBiB,6BAAyBnL,EACzByM,kBAAkB,EAClBpE,sBAAkBrI,EAClBsI,yBAAqBtI,EACrByI,yBAAqBzI,GAGvB,EAAK4I,UAAY,EAAKA,UAAU7e,KAAf,OACjB,EAAK4e,UAAY,EAAKA,UAAU5e,KAAf,OACjB,EAAKqe,WAAa,EAAKA,WAAWre,KAAhB,OAClB,EAAKwe,cAAgB,EAAKA,cAAcxe,KAAnB,OACrB,EAAK2e,cAAgB,EAAKA,cAAc3e,KAAnB,OACrB,EAAKsjB,qBAAuB,EAAKA,qBAAqBtjB,KAA1B,OAC5B,EAAKwjB,oBAAsB,EAAKA,oBAAoBxjB,KAAzB,OAC3B,EAAKyjB,mBAAqB,EAAKA,mBAAmBzjB,KAAxB,OAC1B,EAAK0jB,YAAc,EAAKA,YAAY1jB,KAAjB,OACnB,EAAKojB,yBAA2B,EAAKA,yBAAyBpjB,KAA9B,OAChC,EAAK6iB,8BAAgC,EAAKA,8BAA8B7iB,KAAnC,OACrC,EAAKqjB,4BAA8B,EAAKA,4BAA4BrjB,KAAjC,OACnC,EAAKkkB,qBAAuB,EAAKA,qBAAqBlkB,KAA1B,OAC5B,EAAKkjB,qBAAuB,EAAKA,qBAAqBljB,KAA1B,OAC5B,EAAKmjB,0BAA4B,EAAKA,0BAA0BnjB,KAA/B,OACjC,EAAK8jB,qBAAuB,EAAKA,qBAAqB9jB,KAA1B,OAC5B,EAAK+jB,YAAc,EAAKA,YAAY/jB,KAAjB,OACnB,EAAKgkB,YAAc,EAAKA,YAAYhkB,KAAjB,OACnB,EAAKikB,aAAe,EAAKA,aAAajkB,KAAlB,OACpB,EAAKokB,qBAAuB,EAAKA,qBAAqBpkB,KAA1B,OAC5B,EAAK4jB,eAAiB,EAAKA,eAAe5jB,KAApB,OACtB,EAAK6jB,kBAAoB,EAAKA,kBAAkB7jB,KAAvB,OACzB,EAAKqkB,kBAAoB,EAAKA,kBAAkBrkB,KAAvB,OAvDR,EA2pBN2I,4BAAWyV,I,wlBCvvBLkG,I,uOAAqB9jB,IAAMM,e,0CACrC,WACP,OACE,yBAAKI,UAAU,YACb,6BAAK,0BAAM6G,MAAO,CAAC+D,MAA8B,IAAtB/K,KAAKC,MAAMujB,SAAkB,QACvDxjB,KAAKC,MAAMujB,SAAW,KACrB,uBAAG3U,KAAK,IAAItO,QAAS,SAACyD,GAAOA,EAAEI,iBAAkB,EAAKnE,MAAM4S,aAC1D,uBAAG1S,UAAU,kBAAb,SADF,IAC0C,kBAAC,mBAAD,CAAkBM,GAAG,gBAC3D2W,eAAe,YAGnB,kBAAC,mBAAD,CAAkB3W,GAAG,mBAAmB2W,eAAe,uB,8tBCR5CqM,I,uOAAmBhkB,IAAMiE,W,8CAa/B5B,EAAK4hB,EAAUC,GAAU,WAChCC,EAAa5jB,KAAKC,MAAMmF,OAAOye,qBACnC7jB,KAAKmO,SAAS,CAACyV,WAAYA,IAC3BA,EAAWE,SAAShiB,EAAK4hB,EAAUC,EAAU,SAACI,GAC5C,EAAK5V,SAAS,CAACqV,SAAUO,EAAS,EAAK9jB,MAAMoL,SAC5C9D,KAAK,WACN,EAAK4G,SAAS,CAACyV,WAAY,KAAMJ,SAAU,MAC1C7d,MAAM,SAACC,GACJA,GACF,EAAK3F,MAAM6E,QAAQ,2BAA6Bc,EAAIC,QAAS,OAE/D,EAAKsI,SAAS,CAACyV,WAAY,KAAMJ,SAAU,Q,qCAKzCxjB,KAAKC,MAAM+jB,SACbhkB,KAAKC,MAAMgkB,iBACFjkB,KAAK4O,MAAMgV,YACpB5jB,KAAK4O,MAAMgV,WAAWM,W,+BAIjB,WACHR,EAAW1jB,KAAKC,MAAMyjB,UAAY,kBAChB,GAAlBA,EAASthB,SACXshB,EAAWA,EAASjiB,OAAO,EAAG,IAAM,MAAQiiB,EAASjiB,QAAQ,KAE/D,IAOIK,EAAKqiB,EAPL9Y,EAAyB,EAAlBrL,KAAKC,MAAMoL,KACpB,0BAAMlL,UAAU,cAAhB,IAA+B4I,EAAiB/I,KAAKC,MAAMoL,MAA3D,KACA,KAiBF,OAFE8Y,EATGnkB,KAAKC,MAAM+jB,UAAahkB,KAAK4O,MAAMgV,aJiCrC,SAAuB9hB,GAC5B,OAAQ,kCAAkCyZ,KAAKzZ,GIlCSsiB,CAAcpkB,KAAKC,MAAMokB,cAQ7EviB,EAAMuZ,GAAYrb,KAAKC,MAAMokB,cAAgB,cAChC,OAPbviB,EAAM,IACO,SAACkC,GACZA,EAAEI,iBACF,EAAKkgB,aAAa,EAAKrkB,MAAMokB,YAAa,EAAKpkB,MAAMyjB,SAAU,EAAKzjB,MAAM0jB,YAO5E,yBAAKxjB,UAAU,cACb,6BAAK,uBAAGA,UAAU,2BAAb,sBACL,yBAAKA,UAAU,eACb,6BAAMujB,EAAN,IAAiBrY,GAChBrL,KAAKC,MAAM+jB,UAAYhkB,KAAK4O,MAAMgV,WACjC,kBAAC,GAAD,CAAcJ,SAAUxjB,KAAKC,MAAM+jB,SAAWhkB,KAAKC,MAAMujB,SAAWxjB,KAAK4O,MAAM4U,SAC7E3Q,SAAU7S,KAAK0T,eAEjB,6BAAK,uBAAG7E,KAAM/M,EAAKgiB,SAAU9jB,KAAKC,MAAMyjB,SAAUnjB,QAAS4jB,GACzD,uBAAGhkB,UAAU,kBAAb,iBADG,IAC6C,kBAAC,mBAAD,CAAkBM,GAAG,kBACnE2W,eAAe,kB,4CAtE7B,YAAYnX,GAAO,a,4FAAA,WACjB,E,yEAAA,uBAAMA,KAED2O,MAAQ,CACXgV,WAAY,KACZJ,SAAU,GAGZ,EAAKc,aAAe,EAAKA,aAAarlB,KAAlB,OACpB,EAAKyU,aAAe,EAAKA,aAAazU,KAAlB,OATH,E,2kBCArB,I,SAAM0D,GAAWC,yBAAe,CAC9B,2DAKA,+DAOI2hB,I,uOAAuB9kB,IAAMM,e,0CACxB,IAEHykB,EADGvd,EAAiBjH,KAAKC,MAAMiH,KAA5BD,cAGLud,EADExkB,KAAKC,MAAMwkB,UAAY9kB,IAAO+kB,uBACpBzd,EAActE,GAASgiB,SAC1B3kB,KAAKC,MAAMwkB,UAAY9kB,IAAOilB,sBAC3B3d,EAActE,GAASkiB,QAEvBhd,EAAgB7H,KAAKC,MAAMukB,UAAWxkB,KAAKC,MAAMiH,KAAKY,QAGpE,IAAIgd,EAAS,KAab,OAZI9kB,KAAKC,MAAMwkB,UAAY9kB,IAAO+kB,uBAChCI,EAAU,uBAAG3kB,UAAU,wBAAb,eACDH,KAAKC,MAAMwkB,UAAY9kB,IAAOilB,sBACvCE,EAAU,uBAAG3kB,UAAU,8BAAb,WACDH,KAAKC,MAAMwkB,UAAY9kB,IAAOolB,oBACvCD,EAAU,uBAAG3kB,UAAU,wBAAb,QACDH,KAAKC,MAAMwkB,UAAY9kB,IAAOqlB,wBACvCF,EAAU,uBAAG3kB,UAAU,wBAAb,YACDH,KAAKC,MAAMwkB,UAAY9kB,IAAOslB,sBACvCH,EAAU,uBAAG3kB,UAAU,6BAAb,aAIV,0BAAMA,UAAU,aACbqkB,EAAW,IAAUM,Q,6MAMfld,4BAAW2c,I,ihBC5CLW,I,uOAAoBzlB,IAAMiE,W,oDAkB1BM,GACjBA,EAAEI,iBACFpE,KAAKC,MAAMklB,eAAe,CACxBrjB,IAAKkC,EAAEG,OAAOmG,IACdoZ,SAAU1f,EAAEG,OAAO/D,MACnB2K,MAAO/G,EAAEG,OAAOO,QAAQqG,MACxBC,OAAQhH,EAAEG,OAAOO,QAAQsG,OACzBK,KAAMrH,EAAEG,OAAOO,QAAQ2G,KACvBT,KAAM5G,EAAEG,OAAOO,QAAQoH,S,4CAIL9H,GACpBA,EAAEI,iBACF,IAAMyG,EAAO,CACXrF,IAAKxF,KAAKC,MAAMuF,IAElBqF,KAAY,IACR7G,EAAEG,OAAOO,QAAQ1G,OACnB6M,EAAKua,KAAKphB,EAAEG,OAAOO,QAAQ1G,MAAQgG,EAAEG,OAAOO,QAAQgS,IAAM1S,EAAEG,OAAOO,QAAQgS,SAChDxB,IAAzBlR,EAAEG,OAAOO,QAAQgS,IAAoB,EAAI,GAAK1S,EAAEG,OAAOO,QAAQgS,KAEvC,OAAxB1S,EAAEG,OAAOO,QAAQ2gB,MACnBxa,EAAKya,IAAMjK,GAAYrX,EAAEG,OAAOO,QAAQ4gB,MAAQ,eAElD,IAAMnS,EAAOnP,EAAEG,OAAOO,QAAQtE,OAAS,UACvCJ,KAAKC,MAAMslB,eAAevhB,EAAEG,OAAOO,QAAQ2gB,IAAKlS,EAAMtI,K,yCAGrC7G,GACjBA,EAAEI,iBACFJ,EAAEK,kBACFrE,KAAKC,MAAMgQ,gBAAgB,CAAEzK,IAAKxF,KAAKC,MAAMuF,IAAKuB,EAAG/C,EAAEkM,MAAOtJ,EAAG5C,EAAEmM,U,qCAGtDqV,GACbxlB,KAAKmO,SAAS,CAACqV,SAAUgC,M,2CAIzBxlB,KAAKC,MAAM+jB,SAASE,W,+BAGb,WACDuB,EAAYzlB,KAAKC,MAAMylB,SAAW,KAAO1lB,KAAKC,MAAM0lB,SAAW,OAAS,SACxEC,EAAsC,UAAvB5lB,KAAKC,MAAMylB,UAA+C,QAAvB1lB,KAAKC,MAAMylB,SACjE,aAAe,SACX/b,EAAS3J,KAAKC,MAAMka,aAAc,EAClC0L,EAAe7lB,KAAKC,MAAM6lB,UAAY9lB,KAAKC,MAAM0lB,WAC7B,UAAvB3lB,KAAKC,MAAMylB,UAA+C,QAAvB1lB,KAAKC,MAAMylB,UAE7CrlB,EAAUL,KAAKC,MAAMI,QACnB0lB,EAAc,GA0BpB,OAzBI/lB,KAAKC,MAAM+lB,UAAYC,SAAOC,kBAChCD,SAAOF,YAAY1lB,EAAS,SAAS8lB,EAAK1oB,GACxB,oBAAZ0oB,EAAIra,MAKRia,EAAY5jB,KAAK,kBAAC,GAAD,CACfiD,OAAQpF,KAAKC,MAAMmF,OACnBif,YAAa4B,SAAOG,eAAeD,GACnCzC,SAAUyC,EAAInoB,KAAMgmB,SAAUiC,SAAOI,YAAYF,GACjDxC,SAAUwC,EAAIra,KAAMT,KAAM4a,SAAOK,cAAcH,GAC/C3C,SAAUxjB,KAAK4O,MAAM4U,SACrBS,eAAgBjkB,KAAKumB,mBACrBzhB,QAAS9E,KAAKC,MAAM6E,QACpB9F,IAAKvB,MACNuC,MACHK,EAAUZ,IAAMqN,cAAc,OAAQ,KAAMmZ,SAAOO,OAAOnmB,EAASomB,GAAiBzmB,QACzD,iBAAXK,IAChBA,EAAU,oCAAE,uBAAGF,UAAU,kBAAb,iBAAF,IAAkD,2BAC1D,kBAAC,mBAAD,CAAkBM,GAAG,kBACnB2W,eAAe,uBAKnB,wBAAIjX,UAAWslB,GACZzlB,KAAKC,MAAM6lB,UAAY9lB,KAAKC,MAAM0lB,SACjC,yBAAKxlB,UAAU,cACZ0lB,EACC,kBAAC,EAAD,CACEpjB,MAAOzC,KAAKC,MAAM6lB,SAClB1lB,MAAOJ,KAAKC,MAAMymB,SAClB/c,OAAQA,IACV,MAEJ,KACF,6BACE,yBAAKxJ,UAAWylB,GACd,yBAAKzlB,UAAU,mBACZE,EACA0lB,EACD,kBAAC,GAAD,CACEvB,UAAWxkB,KAAKC,MAAMukB,UACtBC,SAAUzkB,KAAKC,MAAMwkB,YAEzB,0BAAMtkB,UAAU,eACd,uBAAG0O,KAAK,IAAItO,QAASP,KAAKgR,oBACxB,uBAAG7Q,UAAU,kBAAb,kBAIL0lB,EACC,yBAAK1lB,UAAU,UACb,kBAAC,mBAAD,CAAkBM,GAAG,iBAAiB2W,eAAe,aAE/C,SAACuP,GAAc,OAAO,EAAK1mB,MAAMymB,UAAY,2BAAIC,MAGvD,Y,4CAjIZ,YAAY1mB,GAAO,a,4FAAA,WACjB,E,yEAAA,uBAAMA,KAED2O,MAAQ,CACX4U,SAAU,GAGRvjB,EAAM+jB,WACR/jB,EAAM+jB,SAAS4C,WAAa,EAAKC,eAAe5nB,KAApB,QAG9B,EAAK6nB,mBAAqB,EAAKA,mBAAmB7nB,KAAxB,OAC1B,EAAK8nB,sBAAwB,EAAKA,sBAAsB9nB,KAA3B,OAC7B,EAAK+R,mBAAqB,EAAKA,mBAAmB/R,KAAxB,OAC1B,EAAKsnB,mBAAqB,EAAKA,mBAAmBtnB,KAAxB,OAdT,EA6IrB,SAASwnB,GAAgBzf,EAAO6D,EAAMsG,EAAQnS,GAC5C,IAAIgoB,EAAKf,SAAOgB,QAAQjgB,GACxB,GAAIggB,EAAI,CACN,IAAIE,EAAOjB,SAAOkB,UAAUngB,EAAO6D,IAAS,GAE5C,OADAqc,EAAKloB,IAAMA,EACHgI,GACN,IAAK,KAEH,GAAI6D,EAAM,CACRqc,EAAK/mB,UAAY,eACjB,IAAIyM,EAAM9B,GAAaD,EAAKE,MAAOF,EAAKG,OACtC7B,KAAKC,IAAIpJ,KAAKC,MAAMmnB,cAAgBC,GAAcA,KAAgBA,KAAe,GACnFza,EAAMA,GAAO,CAACtB,S5BtHS,G4BsHoBC,U5BtHpB,I4BuHvB2b,EAAKlgB,MAAQ,CAAE+D,MAAO6B,EAAItB,SAAW,KAAMN,OAAQ4B,EAAIrB,UAAY,MACnE2b,EAAK5c,INzCR,SAA0BxI,GAC/B,IAAKA,EACH,OAAO,KAGT,IAAMwlB,EAAejM,GAAYvZ,GACjC,OAAIwlB,IAKA,mCAAmC/L,KAAKzZ,EAAIoI,QACvCpI,EAGF,MM0BYylB,CAAiBL,EAAK5c,KAC7B4c,EAAK5c,KACP4c,EAAK3mB,QAAUP,KAAK8mB,mBACpBI,EAAK/mB,WAAa,oBAElB+mB,EAAK5c,IAAM,uBAGf,MACF,IAAK,KAEH4c,EAAK3mB,QAAUP,KAAK+mB,sBACpB,IAAIS,EAAQ/nB,IAAMgoB,SAASthB,IAAIgL,EAAQ,SAACuW,GACtC,MAAuB,iBAATA,EAAoBA,OAAQxS,IAEvCsS,GAAyB,GAAhBA,EAAMplB,SAClBolB,EAAQ,CAACN,EAAKlpB,OAGhBkpB,EAAK,cAAgBM,EAAMvlB,KAAK,IAChC,MACF,IAAK,KAEHilB,EAAK/mB,UAAY,WAMrB,OAAOV,IAAMqN,cAAcka,EAAIE,EAAM/V,GAErC,OAAOA,E,wlBC3LUwW,I,uOAAkBloB,IAAMiE,W,0CAMzC,IAAMkkB,EAAc,GACdC,GAAc7nB,KAAKC,MAAMse,aAAe,IAAInc,OAC5C0lB,EAAc3e,KAAKC,I7BmDM,E6BnDmBye,GAclD,OAZC7nB,KAAKC,MAAMse,aAAe,IAAIwJ,KAAK,SAACvJ,GASnC,OARAoJ,EAAYzlB,KACV,yBAAKhC,UAAU,aAAanB,IAAKwf,EAAIxY,MACnC,kBAAC,EAAD,CACEvD,MAAO+b,EAAIxY,KACX2D,OAAQe,GAAa8T,EAAIvM,OAASuM,EAAIvM,OAAOtH,MAAQ,QAAS,EAC9DvK,MAAOoe,EAAIvM,OAASuM,EAAIvM,OAAOC,GAAK,SAGnC0V,EAAYxlB,QAAU0lB,IAI7B,yBAAKrnB,GAAG,eAAemnB,EAAvB,IAAkDE,EAAbD,EACnC,8BACE,kBAAC,mBAAD,CAAkBpnB,GAAG,sBAAsB2W,eAAe,mBAEtDjG,OAAQ,CAAE6W,SAAWH,EAAaC,MAC9B,W,4CA3BhB,YAAY7nB,GAAO,O,4FAAA,mCACXA,I,wlBCLWgoB,I,uOAAqBxoB,IAAMM,e,6CAUlCmoB,GACV,GAAIA,IAASloB,KAAK4O,MAAM7D,MAAO,CAC7B,IAAMtE,EAASyhB,EAAKC,wBACpBnoB,KAAKmO,SAAS,CACZpD,MAAsB,EAAftE,EAAOsE,MACdC,OAAwB,EAAhBvE,EAAOuE,Y,+BAKZ,WACP,IAAKhL,KAAKC,MAAMI,QACd,OAAO,KAGT,IAAMuM,EAAM9B,GAAa9K,KAAKC,MAAMI,QAAQ0K,MAAO/K,KAAKC,MAAMI,QAAQ2K,OACpEhL,KAAK4O,MAAM7D,MAAO/K,KAAK4O,MAAM5D,QAAQ,GACjCK,EAAOuB,EAAM,CAAE7B,MAAO6B,EAAItB,SAAW,KAAMN,OAAQ4B,EAAIrB,UAAY,MACrEvL,KAAKC,MAAMI,QAAQ0K,MAAQ/K,KAAKC,MAAMI,QAAQ2K,OAAU,CAACD,MAAO,QAAU,CAACC,OAAQ,QACvFK,EAAKJ,SAAW,OAChBI,EAAKH,UAAY,OAEjB,IAAIwY,EAAW1jB,KAAKC,MAAMI,QAAQqjB,SAE5B0E,EAAYjf,KAAKkf,KAAMroB,KAAK4O,MAAM7D,M9BFpB,G8BEuC,IAAO,GAAK,EAAG,IACtE2Y,EAASthB,OAASgmB,IACpB1E,EAAWA,EAASrT,MAAM,EAAG+X,EAAU,EAAI,GAAK,MAAQ1E,EAASrT,MAAM,EAAI+X,EAAU,IAEvF,IAAMrd,EAAQ/K,KAAKC,MAAMI,QAAQ0K,OAAS,IACpCC,EAAShL,KAAKC,MAAMI,QAAQ2K,QAAU,IAC5C,OACE,yBAAKvK,GAAG,gBAAgBF,QAASP,KAAKC,MAAMqoB,SAC1C,yBAAK7nB,GAAG,+BACN,uBAAGoO,KAAM7O,KAAKC,MAAMI,QAAQyB,IAAKgiB,SAAU9jB,KAAKC,MAAMI,QAAQqjB,UAC5D,uBAAGvjB,UAAU,kBAAb,iBADF,IACkD,kBAAC,mBAAD,CAC9CM,GAAG,kBAAkB2W,eAAe,cAExC,uBAAGvI,KAAK,IAAItO,QAAS,SAACyD,GAAOA,EAAEI,iBAAkB,EAAKnE,MAAMqoB,YAAa,uBAAGnoB,UAAU,uBAAb,WAE3E,yBAAKM,GAAG,0BAA0B6kB,IAAK,SAAC4C,GAAD,OAAU,EAAKK,YAAYL,KAChE,yBAAK5d,IAAKtK,KAAKC,MAAMI,QAAQyB,IAAKkF,MAAOqE,KAE3C,yBAAK5K,GAAG,wBACN,6BACE,6BAAK,2BAAG,kBAAC,mBAAD,CAAkBA,GAAG,kBAAkB2W,eAAe,iBAE9D,6BAAK,0BAAMhX,MAAOJ,KAAKC,MAAMI,QAAQqjB,UAAWA,GAAsB,OAExE,6BACE,6BAAK,2BAAG,kBAAC,mBAAD,CAAkBjjB,GAAG,qBAAqB2W,eAAe,oBAEjE,6BAAMpX,KAAKC,MAAMI,QAAQuK,OAE3B,6BACE,6BAAK,2BAAG,kBAAC,mBAAD,CAAkBnK,GAAG,aAAa2W,eAAe,YAEzD,6BAAMrM,EAAN,MAAsBC,EAAtB,QAAmCjC,EAAiB/I,KAAKC,MAAMI,QAAQgL,e,4CAjEjF,YAAYpL,GAAO,a,4FAAA,WACjB,2BAAMA,KAED2O,MAAQ,CACX7D,MAAO,EACPC,OAAQ,GALO,E,ihBCJAwd,I,uOAAmB/oB,IAAMM,e,oDAOzB0oB,EAAK5d,GACtB4d,EAAIrkB,iBACJpE,KAAKC,MAAM2E,SAASiG,K,+BAGb,WACP,OACE,yBAAK1K,UAAU,uBACb,yBAAKA,UAAU,SACb,kBAAC,mBAAD,CAAkBM,GAAG,kBACnB2W,eAAe,qEAGnB,yBAAKjX,UAAU,UACb,4BAAQA,UAAU,OAAOI,QAAS,SAAAmY,GAAW,EAAKgQ,mBAAmBhQ,EAAO,YAC1E,kBAAC,mBAAD,CAAkBjY,GAAG,yBACnB2W,eAAe,YAEnB,4BAAQjX,UAAU,QAAQI,QAAS,SAAAmY,GAAW,EAAKgQ,mBAAmBhQ,EAAO,YAC3E,kBAAC,mBAAD,CAAkBjY,GAAG,yBACnB2W,eAAe,YAEnB,4BAAQjX,UAAU,QAAQI,QAAS,SAAAmY,GAAW,EAAKgQ,mBAAmBhQ,EAAO,WAC3E,kBAAC,mBAAD,CAAkBjY,GAAG,wBACnB2W,eAAe,kB,4CA9B3B,YAAYnX,GAAO,a,4FAAA,WACjB,E,yEAAA,uBAAMA,KAEDyoB,mBAAqB,EAAKA,mBAAmBzpB,KAAxB,OAHT,E,wlBCHA0pB,I,uOAAoBlpB,IAAMM,e,0CAE3C,OAAQC,KAAKC,MAAM+S,KACjB,yBAAK7S,UAAU,oBAAmB,yBAAKA,UAAU,oBAAgC,U,qyBCGlEyoB,I,uOAAiBnpB,IAAMM,e,0CAExC,IAAI8oB,EAAUjoB,EAAW,KAAOjB,IAAOmpB,aAAe,IACtD,OACE,yBAAKroB,GAAG,aAAaN,UAAWH,KAAKC,MAAM8oB,SAAW,YAAc,MAClE,6BACE,uBAAGla,KAAK,mCACN,yBAAKpO,GAAG,OAAO4J,IAAI,OAAOC,IAAI,iBAC9B,2CAEF,2BAAG,kBAAC,mBAAD,CAAkB7J,GAAG,eAAe2W,eAAe,YAAtD,IAAoEyR,GACpE,2BAAG,kBAAC,mBAAD,CAAkBpoB,GAAG,eAAe2W,eAAe,YAAtD,IAAoEpX,KAAKC,MAAM+oB,cAA/E,KAAgGhpB,KAAKC,MAAMgpB,cAA3G,Y,itBCVV,I,SAAMtmB,GAAWC,yBAAe,CAC9B,wFAKA,wEAKA,4HAKA,0GAOIsmB,I,uOAAoBzpB,IAAMM,e,qDAmB5BC,KAAKmpB,gBAAgBvlB,iBAAiB,QAAS5D,KAAKopB,kBAAkB,K,6CAItEppB,KAAKmpB,gBAAgBplB,oBAAoB,QAAS/D,KAAKopB,kBAAkB,K,2CAIzEppB,KAAKmpB,gBAAgB1Q,U,uCAGNzU,GAAG,WACdhE,KAAKC,MAAMopB,W7B+FZ,SAAoB3Q,EAAO4Q,EAAgBC,EAAqBzkB,GACrE,IAAIN,GAASkU,EAAM8Q,eAAiB9Q,EAAM+Q,cAAcD,eAAiB,IAAIhlB,MAC7E,IAAK,IAAI/G,KAAK+G,EAAO,CACnB,IAAI5C,EAAO4C,EAAM/G,GACjB,GAAkB,SAAdmE,EAAK8nB,UAAT,CACE,IAAIpd,EAAO1K,EAAK+nB,YAChB,GAAKrd,EAgBL,OAZIA,EAAK1B,MAAmC,SAA3B0B,EAAK1B,KAAKtJ,MAAM,KAAK,GAEhCgL,EAAKjB,KAAOnK,GAA8BsJ,GAAwBwB,QAAQM,EAAK1B,MAAQ,EACzFyB,GAAwBC,EL1GL,SK0GyC,EAAOgd,EAAgBxkB,GAEnF4I,GAAkBpB,EAAMgd,EAAgBxkB,GAI1CgJ,GAAaxB,EAAMid,IAGd,EAfLxkB,QAAQC,IAAI,kDAAmDpD,EAAK8nB,KAAM9nB,EAAKgJ,OAmBrF,OAAO,E6BrHDgf,CAAW5lB,EACb,SAAC6lB,EAAM/d,EAAMf,EAAOC,EAAQa,GAC1B,EAAK5L,MAAM6pB,YAAY7D,SAAO8D,YAAY,KACxC,EAAGje,EAAM+d,EAAM9e,EAAOC,EAAQa,KAElC,SAACC,EAAM+d,EAAMhe,GACX,EAAK5L,MAAM6pB,YAAY7D,SAAO+D,WAAW,KAAMle,EAAM+d,EAAMhe,KAE7D7L,KAAKC,MAAM6E,UAGXd,EAAEI,mB,wCAIYJ,GAAG,WACnB,GAAIA,EAAEG,OAAOkK,OAAiC,EAAxBrK,EAAEG,OAAOkK,MAAMjM,OAAY,CAC/C,IAAMkK,EAAOtI,EAAEG,OAAOkK,MAAM,GAExB/B,EAAKjB,KAAOnK,GAA8BsJ,GAAwBwB,QAAQM,EAAK1B,MAAQ,EAEzFyB,GAAwBC,ElCvBH,SkCuBuC,EAE1D,SAACud,EAAM/d,EAAMf,EAAOC,EAAQa,GAC1B,EAAK5L,MAAM6pB,YAAY7D,SAAO8D,YAAY,KACxC,EAAGje,EAAM+d,EAAM9e,EAAOC,EAAQa,KAGlC,SAACjG,GACC,EAAK3F,MAAM6E,QAAQc,EAAK,SAI5B8H,GAAkBpB,EAEhB,SAACud,EAAM/d,EAAMf,EAAOC,EAAQa,GAC1B,EAAK5L,MAAM6pB,YAAY7D,SAAO8D,YAAY,KACxC,EAAGje,EAAM+d,EAAM9e,EAAOC,EAAQa,KAGlC,SAACjG,GACC,EAAK3F,MAAM6E,QAAQc,EAAK,SAMhC5B,EAAEG,OAAOzF,MAAQ,K,uCAGFsF,GAAG,WACXiD,EAAiBjH,KAAKC,MAAMiH,KAA5BD,cACP,GAAIjD,EAAEG,OAAOkK,OAAiC,EAAxBrK,EAAEG,OAAOkK,MAAMjM,OAAY,CAC/C,IAAMkK,EAAOtI,EAAEG,OAAOkK,MAAM,GAC5B,GAAI/B,EAAKjB,KlC5D2B,GAAK,GkC8DvCrL,KAAKC,MAAM6E,QAAQmC,EAActE,GAASsnB,0BACtC,CAAC5e,KAAMtC,EAAiBuD,EAAKjB,MAAO6e,MAAOnhB,ElC/Db,GAAK,MkC+DwD,YAC1F,GAAIuD,EAAKjB,KAAOnK,EAA4B,CAEjD,IAAM8iB,EAAWhkB,KAAKC,MAAMmF,OAAOye,qBACnC,IAAKG,EAEH,YADAhkB,KAAKC,MAAM6E,QAAQmC,EAActE,GAASwnB,yBAI5C,IAAMC,EAA0BpG,EAASqG,OAAO/d,GAC1CqK,EAAMsP,SAAO+D,WAAW,KAAM1d,EAAK1B,KAAM,KAAM0B,EAAKtO,KAAMsO,EAAKjB,KAAM+e,GAE3EpqB,KAAKC,MAAM6pB,YAAYnT,EAAKyT,EAAyBpG,QAGrDlW,GAAaxB,EACX,SAACR,EAAM+d,EAAMhe,GACX,EAAK5L,MAAM6pB,YAAY7D,SAAO+D,WAAW,KAAMle,EAAM+d,EAAMhe,KAE7D7L,KAAKC,MAAM6E,SAKjBd,EAAEG,OAAOzF,MAAQ,K,iCAGRsF,GACTA,EAAEI,iBACcpE,KAAK4O,MAAM/I,QAAQqE,SAEjClK,KAAKC,MAAM6pB,YAAY9pB,KAAK4O,MAAM/I,QAAQqE,QAC1ClK,KAAKmO,SAAS,CAACtI,QAAS,Q,qCAKb7B,GAEC,UAAVA,EAAEhF,MAECgF,EAAEsmB,WACLtmB,EAAEI,iBACFJ,EAAEK,kBAEFrE,KAAKuqB,WAAWvmB,O,0CAKFA,GAClB,IAAM+Z,EAAW,CAAClY,QAAS7B,EAAEG,OAAOzF,OAC9BwJ,GAAM,IAAIC,MAAOqiB,UACvB,GlC/J0B,IkC+JtBtiB,EAAMlI,KAAK4O,MAAM6b,kBAAoC,CACvD,IAAMhoB,EAAQzC,KAAKC,MAAMmF,OAAOC,SAASrF,KAAKC,MAAMwC,OAChDA,EAAMioB,gBACRjoB,EAAMkoB,eAER5M,EAAS0M,kBAAoBviB,EAE/BlI,KAAKmO,SAAS4P,K,+BAGP,WACA9W,EAAiBjH,KAAKC,MAAMiH,KAA5BD,cACD6M,EAAS9T,KAAKC,MAAMopB,SACxBpiB,EAActE,GAASioB,oBACvB3jB,EAActE,GAASkoB,kBACzB,OACE,yBAAKpqB,GAAG,sBACLT,KAAKC,MAAMopB,SACV,uBAAGlpB,UAAU,2BAAb,SACA,uBAAG0O,KAAK,IAAItO,QAAS,SAACyD,GAAOA,EAAEI,iBAAkB,EAAK0mB,YAAYC,SAAW3qB,MAAM,aACjF,uBAAGD,UAAU,4BAAb,UAEHH,KAAKC,MAAMopB,SACV,uBAAGlpB,UAAU,2BAAb,eACA,uBAAG0O,KAAK,IAAItO,QAAS,SAACyD,GAAOA,EAAEI,iBAAkB,EAAK4lB,WAAWe,SAAW3qB,MAAM,eAChF,uBAAGD,UAAU,4BAAb,gBAEJ,8BAAUM,GAAG,cAAcmT,YAAaE,EACtCuV,SAAUrpB,KAAKC,MAAMopB,SAAU3qB,MAAOsB,KAAK4O,MAAM/I,QACjDmJ,SAAUhP,KAAKgrB,oBAAqBC,WAAYjrB,KAAKkrB,eACrD5F,IAAK,SAACA,GAAS,EAAK6D,gBAAkB7D,GACtC3P,WAAS,IACR3V,KAAKC,MAAMopB,SACV,uBAAGlpB,UAAU,2BAAb,QACA,uBAAG0O,KAAK,IAAItO,QAASP,KAAKuqB,WAAYnqB,MAAM,QAC1C,uBAAGD,UAAU,kBAAb,SAER,2BAAOyK,KAAK,OAAO0a,IAAK,SAACA,GAAS,EAAK0E,WAAa1E,GAClDtW,SAAUhP,KAAKmrB,iBAAkBnkB,MAAO,CAACokB,QAAS,UACpD,2BAAOxgB,KAAK,OAAO0a,IAAK,SAACA,GAAS,EAAKwF,YAAcxF,GAAOvW,OAAO,UACjEC,SAAUhP,KAAKqrB,kBAAmBrkB,MAAO,CAACokB,QAAS,gB,4CAxLzD,YAAYnrB,GAAO,a,4FAAA,WACjB,E,yEAAA,uBAAMA,KAED2O,MAAQ,CACX/I,QAAS,GAET4kB,mBAAmB,IAAItiB,MAAOqiB,UlCrBN,IkCqBmC,GAG7D,EAAKpB,iBAAmB,EAAKA,iBAAiBnqB,KAAtB,OACxB,EAAKosB,kBAAoB,EAAKA,kBAAkBpsB,KAAvB,OACzB,EAAKksB,iBAAmB,EAAKA,iBAAiBlsB,KAAtB,OACxB,EAAKsrB,WAAa,EAAKA,WAAWtrB,KAAhB,OAClB,EAAKisB,eAAiB,EAAKA,eAAejsB,KAApB,OACtB,EAAK+rB,oBAAsB,EAAKA,oBAAoB/rB,KAAzB,OAdV,EA8LN2I,4BAAWshB,I,ogBC3N1B,IAAMjD,GAAStmB,IAAOsmB,OAgBhBtjB,GAAWC,yBAAe,CAC9B0oB,WAAY,CAAF,6CAKVC,UAAW,CAAF,qDAKT,8DAQF,SAASC,GAAcxb,GACrB,GAAIA,EAAK,CACP,IAAMyb,EAAKzb,EAAI0b,gBAAkB,GACjC,OAAO1b,EAAIU,SAAS,WAAa+a,EAAGnX,SAAS,MAAQmX,EAAGnX,SAAS,MAEnE,OAAO,EAGT,SAASqX,GAAiB3b,GACxB,GAAIA,EAAK,CACP,IAAM4b,EAAK5b,EAAI6b,cAAgB,GAC/B,OAAO7b,EAAIU,SAAS,UAAYkb,EAAGtX,SAAS,MAAQsX,EAAGtX,SAAS,MAElE,OAAO,E,aAGHwX,I,uOAAqBrsB,IAAMiE,W,yDA0GCiY,EAAWnH,GACzC,IAAIuX,EAAY,GAChB,GAAKpQ,EAAUlZ,OAcR,GAAIkZ,EAAUlZ,OAAS+R,EAAU/R,MAAO,CAC7C,IAAMA,EAAQkZ,EAAUvW,OAAOC,SAASsW,EAAUlZ,OASlD,GARAspB,EAAY,CACVtpB,MAAOkZ,EAAUlZ,MACjBupB,aAAc,KACdC,iBAAiB,EACjBC,eAAgB,EAChBC,kBAAkB,GAGhB1pB,EAAO,CAET,IAAM2pB,EAAO,GACPrM,EAAO,GAETpE,EAAUrJ,WACZ7P,EAAM8b,YAAY,SAACC,GACbA,EAAIpO,QAAUoO,EAAIxY,MAAQ2V,EAAUxJ,UACtC4N,EAAK5d,KAAKqc,KAKhB/b,EAAME,SAAS,SAASgU,GACjBA,EAAI0V,SACPD,EAAKjqB,KAAKwU,KAIdxY,OAAOmuB,OAAOP,EAAW,CACvBppB,SAAUypB,EACVG,WAAYxM,IAGVtd,EAAMwP,OACR9T,OAAOmuB,OAAOP,EAAW,CACvB3rB,MAAOqC,EAAMwP,OAAOC,GACpBvI,OAAQe,GAAajI,EAAMwP,OAAOtH,SAGpCxM,OAAOmuB,OAAOP,EAAW,CACvB3rB,MAAO,GACPuJ,OAAQ,OAIZ,IAAM6iB,EAAO/pB,EAAMgqB,cACfD,EACFruB,OAAOmuB,OAAOP,EAAW,CACvBW,sBAAuBf,GAAiBa,EAAKxc,OAEtCwE,EAAUkY,uBACnBvuB,OAAOmuB,OAAOP,EAAW,CACvBW,uBAAuB,SAK3BvuB,OAAOmuB,OAAOP,EAAW,CACvBppB,SAAU,GACV4pB,WAAY,GACZnsB,MAAO,GACPuJ,OAAQ,KACR+iB,uBAAuB,UA3E3BX,EAAY,CACVppB,SAAU,GACV4pB,WAAY,GACZ9pB,MAAO,KACPrC,MAAO,GACPuJ,OAAQ,KACRqiB,aAAc,KACdC,iBAAiB,EACjBC,eAAgB,EAChBC,kBAAkB,EAClBO,uBAAuB,GAqG3B,OA/BI/Q,EAAU3L,KACR2L,EAAU3L,IAAI2c,YAAcnY,EAAUmY,WACxCZ,EAAUY,UAAYnY,EAAUmY,UAE9BhR,EAAU3L,IAAI4c,YAAcpY,EAAUoY,WACxCb,EAAUa,UAAYpY,EAAUoY,WAE7BjR,EAAU3L,IAAI4c,SAAS,UAAYpY,EAAUqY,iBAChDd,EAAUc,gBAAkBrY,EAAUqY,kBAGpCrY,EAAUmY,WACZZ,EAAUY,UAAW,GAEnBnY,EAAUoY,WACZb,EAAUa,UAAW,GAElBpY,EAAUqY,iBACbrY,EAAUqY,gBAAiB,IAI3BrB,GAAc7P,EAAU3L,OAASwE,EAAUsY,cAC7Cf,EAAUgB,aAAevY,EAAUsY,cAIhCnR,EAAUrJ,WAAakC,EAAU+X,YAA4C,EAA9B/X,EAAU+X,WAAWnqB,SACvE2pB,EAAUQ,WAAa,IAGlBR,M,8CAnMH/rB,KAAKgtB,kBACPhtB,KAAKgtB,iBAAiBppB,iBAAiB,SAAU5D,KAAKitB,qB,6CAKpDjtB,KAAKgtB,kBACPhtB,KAAKgtB,iBAAiBjpB,oBAAoB,SAAU/D,KAAKitB,qB,yCAM1C/e,EAAWsG,GAAW,WACnCxU,KAAKgtB,mBACHxY,EAAU/R,OAASzC,KAAK4O,MAAMnM,OAAS+R,EAAU7R,SAASP,QAAUpC,KAAK4O,MAAMjM,SAASP,OAC1FpC,KAAKgtB,iBAAiBE,UAAYltB,KAAKgtB,iBAAiBG,aAAentB,KAAK4O,MAAMsd,eACzEhe,EAAUkf,eAAiBptB,KAAKC,MAAMmtB,iBAC/CptB,KAAKgtB,iBAAiBE,WAAahf,EAAUkf,eAAiBptB,KAAKC,MAAMmtB,iBAI7E,IAAM3qB,EAAQzC,KAAKC,MAAMmF,OAAOC,SAASrF,KAAK4O,MAAMnM,OAiBpD,GAhBIzC,KAAK4O,MAAMnM,OAAS+R,EAAU/R,QAC5B+R,EAAU/R,QAAU9C,IAAO0tB,oBAAoB7Y,EAAU/R,SAC3DzC,KAAKstB,MAAM9Y,EAAU/R,OACrBzC,KAAKC,MAAMstB,iBAAiB,OAG1B9qB,IACFA,EAAM+qB,OAASxtB,KAAKytB,iBACpBhrB,EAAMirB,sBAAwB1tB,KAAK2tB,0BACnClrB,EAAMmrB,OAAS5tB,KAAK6tB,kBACpBprB,EAAM6a,WAAatd,KAAK8tB,iBACxBrrB,EAAMgb,cAAgBzd,KAAK+tB,kBAC3BtrB,EAAMurB,OAAShuB,KAAK+tB,oBAIpBtrB,IAAUA,EAAMioB,gBAAkB1qB,KAAKC,MAAMguB,QAC3CjuB,KAAK4O,MAAMnM,OAAS+R,EAAU/R,QAAWyL,EAAU+f,OAAQ,CAE/D,IAAMC,EAAYluB,KAAKC,MAAMkuB,gBAAkBnuB,KAAKC,MAAMkuB,eAAeC,YAAcpuB,KAAKC,MAAMwC,MAI9F4rB,EAAW5rB,EAAMkd,iBAAiB2O,gBAAgBC,gBAClDvuB,KAAK4O,MAAMge,UAAYsB,KAEzBG,EAAWA,EAASG,cnCjFC,ImCkFjBxuB,KAAK4O,MAAMge,WACbyB,EAAWA,EAASI,gBAGtBzuB,KAAKmO,SAAS,CAAEge,kBAAkB,KAEpC,IAAMuC,EAAWR,EAAWluB,KAAKC,MAAMkuB,oBAAiBjZ,EACxDzS,EAAMksB,UAAUN,EAASxO,QAAS6O,GAC/BnnB,KAAK,SAACC,GACD,EAAKoH,MAAMnM,OAAS+E,EAAK/E,OAC3B,EAAK0L,SAAS,CAAC1L,MAAO+E,EAAK/E,QAE7B,EAAKxC,MAAM2uB,kBAAkB,EAAK3uB,MAAMwC,MAAO+E,EAAK/E,OAEpDA,EAAMosB,eAAe,SAACC,IACfA,EAAIC,UAAYtsB,EAAMioB,gBACzBjoB,EAAMusB,eAAeF,OAI1BnpB,MAAM,SAACC,GACNb,QAAQC,IAAI,yBAA0B,EAAK4J,MAAMnM,OACjD,EAAKxC,MAAM6E,QAAQc,EAAIC,QAAS,OAChC,IAAMopB,EAAanD,GAAaoD,yBAAyB,GAAI,IAC7DD,EAAW7uB,MAAQ,EAAKH,MAAMiH,KAAKD,cAActE,GAASwsB,WAC1D,EAAKhhB,SAAS8gB,Q,4BA2HhBG,GAAc,WAClB,GAAKA,EAAL,CAGA,IAAIC,EAAWrvB,KAAKC,MAAMmF,OAAOC,SAAS+pB,GACtCC,GAAYA,EAAS3E,gBACvB2E,EAAS/B,OAAM,GACZ3nB,MAAM,cACN2pB,QAAQ,WAGP,EAAKnhB,SAAS,CAACge,kBAAkB,IACjCkD,EAAS7B,YAAStY,EAClBma,EAAS3B,2BAAwBxY,EACjCma,EAASzB,YAAS1Y,EAClBma,EAAS/R,gBAAapI,EACtBma,EAAS5R,mBAAgBvI,EACzBma,EAASrB,YAAS9Y,O,4CAKJgT,GAChBA,IACFA,EAAKtkB,iBAAiB,SAAU5D,KAAKitB,mBACrCjtB,KAAKgtB,iBAAmB9E,K,wCAKVxP,GAAO,WACvB1Y,KAAKmO,SAAS,CAAC+d,eAAgBxT,EAAMvU,OAAOgpB,aAAezU,EAAMvU,OAAO+oB,YACpExU,EAAMvU,OAAO+oB,WAAa,GAC5BltB,KAAKmO,SAAS,SAACqG,EAAWvU,GACxB,IAAM8d,EAAW,GACjB,IAAKvJ,EAAU2X,iBAAkB,CAC/B,IAAM1pB,EAAQ,EAAKxC,MAAMmF,OAAOC,SAAS,EAAKuJ,MAAMnM,OAChDA,GAASA,EAAMioB,gBAAkBjoB,EAAM8sB,uBACzCxR,EAASoO,kBAAmB,EAC5B1pB,EAAM+sB,gBnC7QW,ImC6QoB7pB,MAAM,SAACC,GAC1C,EAAKuI,SAAS,CAACge,kBAAkB,IACjC,EAAKlsB,MAAM6E,QAAQc,EAAIC,QAAS,UAItC,OAAOkY,M,uCAKI+B,GACXA,EAAK7N,OACPjS,KAAKmO,SAAS,CACZ/N,MAAO0f,EAAK7N,OAAOC,GACnBvI,OAAQe,GAAaoV,EAAK7N,OAAOtH,SAGnC3K,KAAKmO,SAAS,CACZ/N,MAAO,GACPuJ,OAAQ,OAIRmW,EAAK9P,KACPhQ,KAAKmO,SAAS,CACZwe,SAAU7M,EAAK9P,IAAI2c,WACnBC,SAAU9M,EAAK9P,IAAI4c,WACnBC,gBAAiB/M,EAAK9P,IAAI4c,SAAS,SACnCG,YAAavB,GAAc1L,EAAK9P,S,0CAKlB,WAClB,GAAIhQ,KAAK4O,MAAMnM,MAAO,CACpB,IAAMsd,EAAO,GACPtd,EAAQzC,KAAKC,MAAMmF,OAAOC,SAASrF,KAAK4O,MAAMnM,OACpDA,EAAM8b,YAAY,SAACC,GACbA,EAAIpO,QAAUoO,EAAIxY,MAAQ,EAAK/F,MAAMkS,UACvC4N,EAAK5d,KAAKqc,KAGd,IAAMT,EAAW,CAACwO,WAAYxM,GACxByM,EAAO/pB,EAAMgqB,cACfD,EACFruB,OAAOmuB,OAAOvO,EAAU,CACtB2O,sBAAuBf,GAAiBa,EAAKxc,OAEtChQ,KAAK4O,MAAM8d,uBACpBvuB,OAAOmuB,OAAOvO,EAAU,CACtB2O,uBAAuB,IAG3B1sB,KAAKmO,SAAS4P,M,uCAIDpH,GAEf,IAAMlU,EAAQzC,KAAKC,MAAMmF,OAAOC,SAASrF,KAAK4O,MAAMnM,OAC9Csb,EAAW,CAACpb,SAAU,IAC5BF,EAAME,SAAS,SAAC9E,GACTA,EAAEwuB,SACLtO,EAASpb,SAASR,KAAKtE,KAKvB8Y,IAAQA,EAAI0V,UAGV5pB,EAAMgtB,aAAa9Y,EAAInR,OACzBuY,EAASmO,eAAiB,GAKbzpB,EAAMitB,UAAU/Y,IACjBhX,IAAOolB,qBAAuBpO,EAAIgZ,MAAQ3vB,KAAKC,MAAMkS,UACjEnS,KAAKC,MAAMstB,iBAAiB,WAC1B9qB,EAAMmtB,SAASjZ,EAAInR,OAGvBxF,KAAKC,MAAMutB,OAAO7W,IAEpB3W,KAAKmO,SAAS4P,K,gDAGU9X,GACxBjG,KAAKmO,SAAS,CAACge,kBAAkB,M,wCAGjBzpB,GAChB,OAAQA,EAAKmtB,MACX,IAAK,KACHC,aAAa9vB,KAAK+vB,eAClB,IAAIhZ,EAAW/W,KACfA,KAAK+vB,cAAgBhY,WAAW,WAC9BhB,EAAS5I,SAAS,CAAC8d,iBAAiB,KACnC+D,KACEhwB,KAAK4O,MAAMqd,iBACdjsB,KAAKmO,SAAS,CAAC8d,iBAAiB,IAElC,MAEF,IAAK,OACL,IAAK,OAEHjsB,KAAKiwB,cACL,MACF,QACElrB,QAAQC,IAAI,0BAA2BtC,EAAKmtB,S,yCAI/BxvB,GACjBL,KAAKmO,SAAS,CAAE6d,aAAc3rB,M,gDAI9BL,KAAKmO,SAAS,CAAE6d,aAAc,S,yCAGb9a,EAAQiC,EAAMtI,GAC/B,GAAc,OAAVqG,EACFlR,KAAKC,MAAM6pB,YAAY7D,GAAOiK,WAAWjK,GAAOkK,MAAMhd,GAAOtI,SACxD,GAAc,OAAVqG,EAAiB,CAC1B,IAAMpP,EAAM,IAAI0L,IAAI3C,EAAKya,KACnB/jB,EAASO,EAAIsuB,aACnB,IAAK,IAAIpxB,KAAO6L,EAAKua,KACfva,EAAKua,KAAK9lB,eAAeN,IAC3BuC,EAAO8uB,IAAIrxB,EAAK6L,EAAKua,KAAKpmB,IAG9B,CAAC,OAAQ,OAAOmH,IAAI,SAASnH,GACvB6L,EAAK7L,IACPuC,EAAO8uB,IAAIrxB,EAAK6L,EAAK7L,MAGzBuC,EAAO8uB,IAAI,MAAOrwB,KAAKC,MAAMkS,UAC7BrQ,EAAIwuB,OAAS/uB,EACbQ,OAAOmX,KAAKpX,EAAK,eAEjBiD,QAAQC,IAAI,yBAA0BkM,K,yCAIvBlN,GACjBA,EAAEI,iBACFJ,EAAEK,kBACFrE,KAAKC,MAAMgQ,gBAAgB,CAAE3K,UAAWtF,KAAK4O,MAAMnM,MAAOsE,EAAG/C,EAAEkM,MAAOtJ,EAAG5C,EAAEmM,U,mDAGhD5O,GAC3BA,EAAO+D,UAAYtF,KAAK4O,MAAMnM,MAC9B,IAAMof,EAAY,CAAC,kBACbpf,EAAQzC,KAAKC,MAAMmF,OAAOC,SAAS9D,EAAO+D,WAChD,GAAI7C,EAAO,CACT,IAAMuN,EAAMvN,EAAMkc,gBACd3O,GAAOA,EAAI+O,aACb8C,EAAU1f,KAAK,uBAGnBnC,KAAKC,MAAMgQ,gBAAgB1O,EAAQsgB,K,8CAGb3Q,GACtBlR,KAAKC,MAAMswB,UAAUvwB,KAAK4O,MAAMnM,MAAOyO,K,uCAGxBlN,GACfA,EAAEI,iBACFpE,KAAKC,MAAMkgB,oBAAoBngB,KAAK4O,MAAMnM,MAAOxB,EAAyBjB,KAAK4O,MAAMnM,S,+BAG9E,IAGH+tB,EAHG,OACAvpB,EAAiBjH,KAAKC,MAAMiH,KAA5BD,cAGP,GAAIjH,KAAK4O,MAAMnM,MAAO,CAMpB,IALA,IAAMA,EAAQzC,KAAKC,MAAMmF,OAAOC,SAASrF,KAAK4O,MAAMnM,OAC9C0c,EAAgC,OAAnB1c,EAAMib,UACrB+S,EAAe,GACfC,EAAe,KACfC,EAAe,KACVlzB,EAAE,EAAGA,EAAEuC,KAAK4O,MAAMjM,SAASP,OAAQ3E,IAAK,CAC/C,IAAIkZ,EAAM3W,KAAK4O,MAAMjM,SAASlF,GAC1BmzB,EAAW,KAEXnzB,EAAI,EAAIuC,KAAK4O,MAAMjM,SAASP,SAC9BwuB,EAAW5wB,KAAK4O,MAAMjM,SAASlF,EAAE,GAAGkyB,MAGtC,IAAIjK,EAAW,SACX/O,EAAIgZ,MAAQe,EAEZhL,EADE/O,EAAIgZ,MAAQiB,EACH,SAEA,OAEJja,EAAIgZ,MAAQiB,IACrBlL,EAAW,SAEbgL,EAAe/Z,EAAIgZ,KAEnB,IAAMkB,IAAYla,EAAIgZ,MAAQ3vB,KAAKC,MAAMkS,UACnC2e,EAAiBruB,EAAMitB,UAAU/Y,GAEnC+P,OAAQ,EAAEvM,OAAU,EAAE2L,OAAQ,EAClC,GAAI3G,EAAY,CACd,IAAMnZ,EAAOvD,EAAMsuB,SAASpa,EAAIgZ,MAC5B3pB,GAAQA,EAAKiM,SACfyU,EAAW1gB,EAAKiM,OAAOC,GACvBiI,EAAazP,GAAa1E,EAAKiM,OAAOtH,QAExCmb,EAAWnP,EAAIgZ,KACfgB,EAAa,sBAEbA,EAAa,WAGfF,EAAatuB,KACX,kBAAC,GAAD,CACEiD,OAAQpF,KAAKC,MAAMmF,OACnB/E,QAASsW,EAAItW,QACb2lB,SAAUrP,EAAI8D,KAAO9D,EAAI8D,KAAK3O,KAAO,KACrC0Y,UAAW7N,EAAIqa,GAAIrL,SAAUkL,EAASrrB,IAAKmR,EAAInR,IAC/CsgB,SAAUA,EAAUY,SAAUA,EAAUvM,WAAYA,EACpDuL,SAAUA,EAAUjB,SAAUqM,EAAgB9M,SAAUrN,EAAIsa,UAC5D7J,cAAepnB,KAAKC,MAAMmnB,cAC1BnX,gBAAiBjQ,KAAKkxB,6BACtB/L,eAAgBnlB,KAAKmxB,mBACrB5L,eAAgBvlB,KAAKoxB,mBACrBtsB,QAAS9E,KAAKC,MAAM6E,QACpB9F,IAAK2X,EAAInR,OAIf,IAAI6rB,EAAW,KACTC,EAAOtxB,KAAKC,MAAMmF,OAAOmsB,aAAaC,WAAWxxB,KAAK4O,MAAMnM,OAC9D6uB,GAAwC,OAAhC3xB,IAAOkK,UAAUynB,EAAK7uB,SAC5B6uB,EAAKlhB,OACPihB,EAAWpqB,EAActE,GAAS2oB,YACzBgG,EAAKG,OACdJ,EAAWpqB,EAActE,GAAS4oB,WAAa,KAC7C1jB,EAAgBypB,EAAKG,KAAKC,KAAM1xB,KAAKC,MAAMiH,KAAKY,UAItD,IAAM6B,EAAS3J,KAAK4O,MAAMjF,SAAU,EAC9ByG,EAASpQ,KAAKC,MAAMmQ,OAAS,UAAYpQ,KAAK4O,MAAMqd,gBAAkB,UAAY,IAAM,UAE9FuE,EACE,yBAAK/vB,GAAG,aAAaN,UAAWH,KAAKC,MAAM8oB,SAAW,YAAc,MAClE,yBAAKtoB,GAAG,sBAAsBN,UAAU,iBACrCH,KAAKC,MAAM8hB,cACV,uBAAGlT,KAAK,IAAIpO,GAAG,oBAAoBF,QAAS,SAACyD,GAAOA,EAAEI,iBAAkB,EAAKnE,MAAM0xB,uBACjF,uBAAGxxB,UAAU,kBAAb,eAGF,KACF,yBAAKA,UAAU,cACb,kBAAC,EAAD,CACEwJ,OAAQA,EACRlH,MAAOzC,KAAK4O,MAAMnM,MAClBrC,MAAOJ,KAAK4O,MAAMxO,QACpB,0BAAMD,UAAWiQ,KAEnB,yBAAK3P,GAAG,qBACN,yBAAKA,GAAG,cAAcN,UAAU,eAC9BH,KAAK4O,MAAMxO,OACX,2BAAG,kBAAC,mBAAD,CAAkBK,GAAG,gBAAgB2W,eAAe,cAGzD,yBAAK3W,GAAG,mBAAmB4wB,IAE5BlS,EACC,kBAAC,GAAD,CACEZ,YAAave,KAAK4O,MAAM2d,aAC1B,yBAAK9rB,GAAG,gBAEV,6BACE,uBAAGoO,KAAK,IAAItO,QAASP,KAAKgR,oBACxB,uBAAG7Q,UAAU,kBAAb,gBAILH,KAAKC,MAAM8hB,cACV,kBAAC,GAAD,CACEhP,MAAO/S,KAAKC,MAAM+hB,WAClB7O,KAAMnT,KAAKC,MAAMgiB,UACjBhP,aAAcjT,KAAKC,MAAM6E,UACzB,KACJ,kBAAC,GAAD,CAAakO,KAAMhT,KAAK4O,MAAMud,mBAC9B,yBAAK1rB,GAAG,sBACN,yBAAKA,GAAG,iBAAiB6kB,IAAKtlB,KAAK4xB,uBACjC,wBAAInxB,GAAG,WAAWN,UAAWwwB,GAC1BF,IAGHzwB,KAAK4O,MAAMge,SASX,KARF,yBAAKnsB,GAAG,yBACLT,KAAK4O,MAAMie,eACZ,yBAAKpsB,GAAG,mBACN,kBAAC,mBAAD,CAAkBA,GAAG,wBAAwB2W,eAAe,2BAG5D,OAILpX,KAAK4O,MAAM8d,wBAA0B1sB,KAAK4O,MAAMme,YAC/C,yBAAKtsB,GAAG,gCACN,uBAAGN,UAAU,4BAAb,SADF,IACoD,kBAAC,mBAAD,CAChDM,GAAG,2BAA2B2W,eAAe,kCAFjD,IAGqE,uBAAGvI,KAAK,IACvEtO,QAASP,KAAK6xB,kBAAkB,kBAAC,mBAAD,CAAkBpxB,GAAG,yBACrD2W,eAAe,YALrB,KAMS,KACVpX,KAAK4O,MAAMme,YACV,kBAAC,GAAD,CAAYnoB,SAAU5E,KAAK8xB,0BAE3B,kBAAC,GAAD,CACE1sB,OAAQpF,KAAKC,MAAMmF,OACnB3C,MAAOzC,KAAKC,MAAMwC,MAClB4mB,UAAWrpB,KAAK4O,MAAM+d,SACtB7C,YAAa9pB,KAAKC,MAAM6pB,YACxBhlB,QAAS9E,KAAKC,MAAM6E,UACvB9E,KAAK4O,MAAMod,aACV,kBAAC,GAAD,CAAc3rB,QAASL,KAAK4O,MAAMod,aAChC1D,QAAStoB,KAAK+xB,0BAA8B,WAIpDvB,EACE,kBAAC,GAAD,CAAUzH,SAAU/oB,KAAKC,MAAM8oB,SAC7BC,cAAehpB,KAAKC,MAAM+oB,cAC1BC,cAAejpB,KAAKC,MAAMgpB,gBAGhC,OAAOuH,O,4CA3lBT,YAAYvwB,GAAO,a,4FAAA,WACjB,E,yEAAA,uBAAMA,KAED2O,MAAQkd,GAAaoD,yBAAyBjvB,EAAO,IAG1D,EAAKqtB,MAAQ,EAAKA,MAAMruB,KAAX,OACb,EAAK2yB,sBAAwB,EAAKA,sBAAsB3yB,KAA3B,OAC7B,EAAKguB,kBAAoB,EAAKA,kBAAkBhuB,KAAvB,OACzB,EAAK6uB,iBAAmB,EAAKA,iBAAiB7uB,KAAtB,OACxB,EAAK8uB,kBAAoB,EAAKA,kBAAkB9uB,KAAvB,OACzB,EAAKwuB,iBAAmB,EAAKA,iBAAiBxuB,KAAtB,OACxB,EAAK0uB,0BAA4B,EAAKA,0BAA0B1uB,KAA/B,OACjC,EAAK4uB,kBAAoB,EAAKA,kBAAkB5uB,KAAvB,OACzB,EAAKkyB,mBAAqB,EAAKA,mBAAmBlyB,KAAxB,OAC1B,EAAK8yB,wBAA0B,EAAKA,wBAAwB9yB,KAA7B,OAC/B,EAAKmyB,mBAAqB,EAAKA,mBAAmBnyB,KAAxB,OAC1B,EAAK+R,mBAAqB,EAAKA,mBAAmB/R,KAAxB,OAC1B,EAAKiyB,6BAA+B,EAAKA,6BAA6BjyB,KAAlC,OACpC,EAAK6yB,wBAA0B,EAAKA,wBAAwB7yB,KAA7B,OAC/B,EAAK4yB,iBAAmB,EAAKA,iBAAiB5yB,KAAtB,OApBP,EA+lBN2I,4BAAWkkB,I,wlBCrpBLkG,I,uOAAqBvyB,IAAMM,e,0CACrC,WACP,OACE,6BACE,uBAAG8O,KAAK,IAAItO,QAAS,SAACyD,GAAOA,EAAEI,iBAAkB,EAAKnE,MAAMgyB,eAAgB,uBAAG9xB,UAAU,kBAAb,SAD9E,IAGE,uBAAG0O,KAAK,IAAItO,QAAS,SAACyD,GAAOA,EAAEI,iBAAkB,EAAKnE,MAAMiyB,eAAgB,uBAAG/xB,UAAU,kBAAb,mB,qyBCN/DgyB,I,uOAAkB1yB,IAAMM,e,0CAClC,WACP,OACI,6BACE,uBAAG8O,KAAK,IAAItO,QAAS,SAACyD,GAAOA,EAAEI,iBAAkB,EAAKnE,MAAMmyB,aAAc,uBAAGjyB,UAAU,kBAAb,eAD5E,IAGE,uBAAG0O,KAAK,IAAItO,QAAS,SAACyD,GAAOA,EAAEI,iBAAkB,EAAKnE,MAAMiyB,eAAgB,uBAAG/xB,UAAU,kBAAb,mB,qyBCDjEkyB,I,uOAAmB5yB,IAAMM,e,0CAE1C,OACI,yBAAKU,GAAG,qBAAqBN,UAAU,iBACrC,yBAAKM,GAAG,cAAcN,UAAU,cAC9B,kBAAC,EAAD,CACEwJ,OAAQ3J,KAAKC,MAAM0J,OACnBlH,MAAOzC,KAAKC,MAAMkS,SAClB/R,MAAOJ,KAAKC,MAAMG,SAEtB,yBAAKK,GAAG,kBAAkBN,UAAU,eAAeH,KAAKC,MAAMG,OACxC,UAArBJ,KAAKC,MAAM2O,MACR,kBAAC,GAAD,CAAWwjB,SAAUpyB,KAAKC,MAAMmyB,SAAUF,WAAYlyB,KAAKC,MAAMiyB,aAC9C,aAArBlyB,KAAKC,MAAM2O,MACT,kBAAC,GAAD,CAAcqjB,WAAYjyB,KAAKC,MAAMgyB,WAAYC,WAAYlyB,KAAKC,MAAMiyB,aAC1E,KACDlyB,KAAKC,MAAM4S,SACT,kBAAC,GAAD,CAAYA,SAAU7S,KAAKC,MAAM4S,WAAe,W,itBChB7D,I,SAAMlQ,GAAWC,yBAAe,CAC9B0vB,wBAAyB,CAAF,uEAOJC,I,uOAAqB9yB,IAAMiE,W,qDASlBzD,GAC1B,IAAM2R,EAAW,GACb4gB,EAAgB,EAChBC,EAAgB,EAyBpB,OAxBAxyB,EAAMyyB,SAASvsB,IAAI,SAACrI,GACdA,EAAEiU,SAAWjU,EAAEiU,QAAQ4gB,KACrB1yB,EAAMuD,QACRoO,EAASzP,KAAKrE,GAEd20B,IAEQxyB,EAAMuD,UAChBoO,EAASzP,KAAKrE,GACd00B,GAA4B,EAAX10B,EAAEgT,OAAa,EAAI,KAGxCc,EAAS2H,KAAK,SAAS6B,EAAG3L,GACxB,OAAQA,EAAEmjB,SAAW,IAAMxX,EAAEwX,SAAW,KAGtB,EAAhBH,GACF7gB,EAASzP,KAAK,CACZ+O,OAAQ,UACR9Q,MAAOuC,GAAS2vB,wBAChBnhB,OAAQ,CAAClL,MAAOwsB,KAIb,CACLzU,YAAapM,EACb4gB,cAAeA,O,6CAIAtkB,EAAWsG,GAC5B,GAAItG,EAAUwkB,UAAY1yB,KAAKC,MAAMyyB,UAAYxkB,EAAU1K,SAAWxD,KAAKC,MAAMuD,QAAS,CACxF,IAAMua,EAAWwU,GAAa9d,qBAAqBzU,KAAKC,OACxDD,KAAKmO,SAAS4P,GACVA,EAASyU,eAAiBhe,EAAUge,eACtClY,GAAcyD,EAASyU,kB,mCAKhBK,GACX7yB,KAAKC,MAAM6yB,kB,+BAGJ,WACP,OACE,kBAAC,uBAAD,CAAsBryB,GAAG,qBACvB2W,eAAe,oCAEf,SAACxB,GAAD,OAAiB,kBAAC,GAAD,CACftD,UAAW,EAAKrS,MAAMqS,UACtBV,SAAU,EAAKhD,MAAMoP,YACrBrL,iBAAkBiD,EAClBnE,cAAe,EAAKxR,MAAMwR,cAC1BU,SAAU,EAAKlS,MAAMkS,SACrBtB,YAAY,EACZwB,YAAY,EACZE,gBAAiB,EAAKtS,MAAMsS,gBAC5BtC,gBAAiB,EAAKhQ,MAAMgQ,gBAC5BrL,SAAU,EAAKmuB,sB,4CAvEvB,YAAY9yB,GAAO,a,4FAAA,WACjB,E,yEAAA,uBAAMA,KAED8yB,aAAe,EAAKA,aAAa9zB,KAAlB,OAEpB,EAAK2P,MAAQ2jB,GAAa9d,qBAAqBxU,GAL9B,E,oLCdA+yB,I,0CAEFh0B,EAAKN,GACpBu0B,aAAaC,QAAQl0B,EAAKm0B,KAAKC,UAAU10B,M,gCAI1BM,GACf,IAAMN,EAAQu0B,aAAaI,QAAQr0B,GACnC,OAAON,GAASy0B,KAAKhD,MAAMzxB,K,mCAITM,EAAKN,GACvB,IAAM40B,EAAStzB,KAAKuzB,UAAUv0B,GAC9BgB,KAAKwzB,UAAUx0B,EAAKb,OAAOmuB,OAAOgH,GAAU,GAAI50B,M,iCAIhCM,GAChBi0B,aAAaQ,WAAWz0B,O,4rBCVP00B,I,uOAA0Bj0B,IAAMM,e,mDAuBjCiE,GAChBhE,KAAKmO,SAAS,CAACwlB,MAAO3vB,EAAEG,OAAOzF,U,2CAGZk1B,GACnB5zB,KAAKmO,SAAS,CAACylB,SAAUA,M,wCAGT5vB,GAChBhE,KAAKmO,SAAS,CAAC0lB,MAAO7vB,EAAEG,OAAOzF,U,qCAGlBsF,GACbhE,KAAKmO,SAAS,CAAC+D,GAAIlO,EAAEG,OAAOzF,U,yCAGX8N,GACjBxM,KAAKmO,SAAS,CAAC6M,aAAcxO,M,8CAI7BwmB,GAAiBQ,UAAU,kBAAmBxzB,KAAK4O,MAAMklB,WACzD9zB,KAAKmO,SAAS,CAAC2lB,WAAY9zB,KAAK4O,MAAMklB,c,mCAG3B9vB,GACXA,EAAEI,iBACFpE,KAAKmO,SAAS,CAAC4lB,cAAc,IAC7B/zB,KAAKC,MAAM+zB,gBACTh0B,KAAK4O,MAAM+kB,MAAMzpB,OACjBlK,KAAK4O,MAAMglB,SAAS1pB,OACpB6Q,GAAM/a,KAAK4O,MAAMsD,GAAGhI,OAAOkC,UAAU,EzCKX,IyCLiCpM,KAAK4O,MAAMoM,cACtE,CAAC,KAAQ,QAAS,IAAOhb,KAAK4O,MAAMilB,U,+BAG/B,WACHI,EAAgB,OAKpB,OAJIj0B,KAAKC,MAAMopB,WACb4K,GAAiB,aAIjB,0BAAM9zB,UAAU,oBAAoBgX,SAAUnX,KAAKyX,cACjD,yBAAKtX,UAAU,kBACb,yBAAKA,UAAU,qBACb,kBAAC,mBAAD,CAAkBM,GAAG,gBACnB,SAACyzB,GAAD,OAAkB,2BAAOtpB,KAAK,OAAOgJ,YAAasgB,EAAchc,aAAa,YAC3ExZ,MAAO,EAAKkQ,MAAM+kB,MAAO3kB,SAAU,EAAKmlB,kBAAmB1gB,UAAQ,EAACkC,WAAS,MAEjF,kBAAC,mBAAD,CAAkBlV,GAAG,mBACnB,SAAC2zB,GAAD,OAAqB,kBAAC,GAAD,CAAiBxgB,YAAawgB,EAAiBlc,aAAa,eAC/ExZ,MAAO,EAAKkQ,MAAMglB,SAAU/b,WAAY,EAAKwc,qBAC7C5gB,UAAU,OAGhB,kBAAC,GAAD,CACEjF,eAAgBxO,KAAK0iB,mBACrB5d,QAAS9E,KAAKC,MAAM6E,WAExB,yBAAM3E,UAAU,kBACd,kBAAC,mBAAD,CAAkBM,GAAG,mBAAmB2W,eAAe,4BAErD,SAACkd,GAAD,OAAsB,2BAAO1pB,KAAK,OAAOgJ,YAAa0gB,EAAkBpc,aAAa,OACnFxZ,MAAO,EAAKkQ,MAAMsD,GAAIlD,SAAU,EAAKulB,eAAgB9gB,UAAQ,OAGnE,yBAAKtT,UAAU,kBACb,kBAAC,mBAAD,CAAkBM,GAAG,eAAe2W,eAAe,gCAEjD,SAACod,GAAD,OAAkB,2BAAO5pB,KAAK,QAAQgJ,YAAa4gB,EAActc,aAAa,QAC5ExZ,MAAO,EAAKkQ,MAAMilB,MAAO7kB,SAAU,EAAKylB,kBAAmBhhB,UAAQ,OAGzE,yBAAKtT,UAAU,kBACb,kBAAC,GAAD,CAAUM,GAAG,aAAazC,KAAK,aAAaoR,QAASpP,KAAK4O,MAAMklB,UAC9D9kB,SAAUhP,KAAK00B,wBACjB,kBAAC,mBAAD,CAAkBj0B,GAAG,kBACnB,SAACk0B,GAAD,OAAoB,2BAAOzlB,QAAQ,cAAf,IAAmCylB,MAG3D,yBAAKx0B,UAAU,kBACb,4BAAQA,UAAW8zB,EAAerpB,KAAK,UACrC,kBAAC,mBAAD,CAAkBnK,GAAG,iBAAiB2W,eAAe,oB,4CAxG/D,YAAYnX,GAAO,a,4FAAA,WACjB,E,yEAAA,uBAAMA,KAED2O,MAAQ,CACX+kB,MAAO,GACPC,SAAU,GACVC,MAAO,GACP3hB,GAAI,GACJ8I,aAAc,KACd+Y,cAAc,EACdD,UAAWd,GAAiBO,UAAU,mBAGxC,EAAKY,kBAAoB,EAAKA,kBAAkBl1B,KAAvB,OACzB,EAAKo1B,qBAAuB,EAAKA,qBAAqBp1B,KAA1B,OAC5B,EAAKw1B,kBAAoB,EAAKA,kBAAkBx1B,KAAvB,OACzB,EAAKs1B,eAAiB,EAAKA,eAAet1B,KAApB,OACtB,EAAKyjB,mBAAqB,EAAKA,mBAAmBzjB,KAAxB,OAC1B,EAAKy1B,sBAAwB,EAAKA,sBAAsBz1B,KAA3B,OAC7B,EAAKwY,aAAe,EAAKA,aAAaxY,KAAlB,OAnBH,E,ihBCEA21B,I,uOAAwBn1B,IAAMiE,W,qDAoC/C,IAAMmxB,EAAK70B,KAAKC,MAAMmF,OAAOmsB,aAC7BsD,EAAGC,eAAiB90B,KAAK+0B,eACzBF,EAAGjX,cAAgB5d,KAAKg1B,Y,6CAIxB,IAAMH,EAAK70B,KAAKC,MAAMmF,OAAOmsB,aAC7BsD,EAAGjX,cAAgB5d,KAAK4O,MAAMqmB,eAC9BJ,EAAGC,oBAAiB5f,I,gCAGZ0G,GACR5b,KAAKmO,SAAS,CAACyN,KAAMA,M,qCAGRsZ,GACbl1B,KAAKmO,SAAS,CAACgnB,YAAaD,GAAS,O,2CAGlBhjB,IACnBA,EAAKA,EAAGhI,OAAOkC,UAAU,E1CAG,O0CE1BpM,KAAKmO,SAAS,CAAC8Q,SAAU/M,IACzBlS,KAAKC,MAAMm1B,qBAAgBlgB,EAAW6F,GAAM7I,EAAI,U,2CAI/BmjB,GACnBr1B,KAAKmO,SAAS,CAACylB,SAAUyB,IACzBr1B,KAAKC,MAAMm1B,gBAAgBC,K,yCAGV7oB,GACjBxM,KAAKmO,SAAS,CAACxE,OAAQ6C,IACvBxM,KAAKC,MAAMm1B,qBAAgBlgB,EAAW6F,GAAM,KAAMvO,GAAO7M,IAAOsgB,a,0CAG9C4P,EAAMzgB,GACZ,SAARygB,EACF7vB,KAAKC,MAAMq1B,sBAAsBlmB,GAChB,SAARygB,GACT7vB,KAAKC,MAAMs1B,0BAA0BnmB,K,uCAIxBpL,GACfhE,KAAKmO,SAAS,CAACqnB,QAASxxB,EAAEG,OAAOzF,MAAO+2B,gBAAgB,M,wCAGxCzxB,GACE,KAAdA,EAAEO,QAEJvE,KAAKmO,SAAS,CAACqnB,QAAS,GAAIE,eAAe,IACpB,KAAd1xB,EAAEO,SAEXvE,KAAK21B,kBAAkB3xB,K,wCAITA,GAChB,IAAItF,EAAQsB,KAAK4O,MAAM4mB,QAAQtrB,OAC/B,GAAKxL,EAAL,CAKA,IACIk3B,EADAlf,EpBpDD,SAAiBA,GAEtB,OADAA,EAAMA,EAAIxM,OACN,6EAA6EqR,KAAK7E,GAC7EA,EAAI4C,QAAQ,WAAY,IAE1B,KoB+CKuc,CAAQn3B,GAEdgY,EACFkf,EAAS,OAETlf,EpBhDC,SAAiBA,GAEtB,OADAA,EAAMA,EAAIxM,OACN,mDAAmDqR,KAAK7E,GACnDA,EAEF,KoB2CGof,CAAQp3B,MAEZk3B,EAAS,SAGTA,GACF51B,KAAKC,MAAM81B,UAAUH,EAAQlf,GAC7B1W,KAAKmO,SAAS,CAACunB,eAAe,EAAOF,QAAS,MAE9Cx1B,KAAKmO,SAAS,CAACsnB,gBAAgB,SAlB/Bz1B,KAAKmO,SAAS,CAACunB,eAAe,EAAOD,gBAAgB,M,oDAsB3BlV,GAC5BvgB,KAAKmO,SAAS,CACZkS,wBAAyBE,EACzBQ,kBAAmB/gB,KAAK4O,MAAM2R,O,oDAKhCvgB,KAAKmO,SAAS,CAACkS,6BAAyBnL,M,+CAGjBkL,GACvB,IAAI3B,EAAS,GACbA,EAAOze,KAAK4O,MAAMyR,yBAA2BD,EAC7CpgB,KAAKC,MAAMm1B,qBAAgBlgB,OAAWA,EAAWuJ,GAEjD,IAAIV,EAAW,CAACsC,6BAAyBnL,GACzC6I,EAAS/d,KAAK4O,MAAMyR,yBAA2BD,EAC/CpgB,KAAKmO,SAAS4P,K,wCAGEnC,GAEZT,GAAWnb,KAAK4O,MAAMgN,KAAKvL,MAAM,GAAIuL,EAAKvL,MAAM,KAGpDrQ,KAAKC,MAAM+1B,aAAapa,K,+BAGjB,WACHuZ,EAAc,GAYlB,OAXAn1B,KAAK4O,MAAMumB,YAAYhvB,IAAI,SAAC8vB,GAC1Bd,EAAYhzB,KAAK,yBAAKnD,IAAKi3B,EAAKC,KAAO,IAAMD,EAAKvf,IAAM,IAAMuf,EAAKE,MAAOF,EAAKC,KAA9D,KAAqE,4BAAKD,EAAKvf,KAC9F,kCAAUuf,EAAKE,KAKX,KAJF,uBAAGtnB,KAAK,IAAItO,QAAS,SAACyD,GAAOA,EAAEI,iBAAkB,EAAKnE,MAAMm2B,cAAcH,EAAKC,KAAMD,EAAKvf,OACtF,kBAAC,mBAAD,CAAkBjW,GAAG,6BAA6B2W,eAAe,aAFvE,IAKU,uBAAGvI,KAAK,IAAItO,QAAS,SAACyD,GAAOA,EAAEI,iBAAkB,EAAKnE,MAAMo2B,aAAaJ,EAAKC,KAAMD,EAAKvf,OAAQ,uBACvGvW,UAAU,uBAD6F,wBAK7G,kBAAC,IAAMm2B,SAAP,KAAiBt2B,KAAK4O,MAAMyR,wBAC1B,kBAAC,GAAD,CACEzhB,KAAMoB,KAAK4O,MAAMmS,kBACjB/G,KAAK,IACL7C,SAAUnX,KAAKqiB,yBACfxP,SAAU7S,KAAKsiB,8BAEjB,yBAAK7hB,GAAG,eAAeN,UAAU,oBAC/B,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,qBACb,6BAAK,2BAAOA,UAAU,SACpB,kBAAC,mBAAD,CAAkBM,GAAG,kBAAkB2W,eAAe,gBAGxD,6BAAK,kBAAC,mBAAD,CAAkB3W,GAAG,oBACxB,SAAC81B,GAAD,OAA2B,kBAAC,GAAD,CACzB3iB,YAAa2iB,EACb73B,MAAO,EAAKkQ,MAAMqQ,SAClBpH,WAAY,EAAK0K,0BAErB,6BAAK,2BAAOpiB,UAAU,SACpB,kBAAC,mBAAD,CAAkBM,GAAG,iBAAiB2W,eAAe,eAGvD,6BACE,kBAAC,mBAAD,CAAkB3W,GAAG,4BAA4B2W,eAAe,aAE9D,SAACof,GAAD,OAAwB,kBAAC,GAAD,CACtB5iB,YAAa4iB,EACb5rB,KAAK,WACLiN,WAAY,EAAK4e,2BAIzB,kBAAC,GAAD,CACE9sB,OAAQ3J,KAAK4O,MAAMjF,OACnBmF,IAAK9O,KAAKC,MAAMkS,SAChB/R,MAAOJ,KAAK4O,MAAMqQ,SAClBzQ,eAAgBxO,KAAK0iB,mBACrB5d,QAAS9E,KAAKC,MAAM6E,WAExB,yBAAK3E,UAAU,OACf,yBAAKA,UAAU,kBACb,2BAAO+O,QAAQ,iBACb,kBAAC,mBAAD,CAAkBzO,GAAG,sBAAsB2W,eAAe,oBAG5D,kBAAC,GAAD,CAAUpZ,KAAK,QAAQyC,GAAG,gBACxB2O,QAASpP,KAAKC,MAAMy2B,cACpB1nB,SAAUhP,KAAK22B,uBAEnB,yBAAKx2B,UAAU,kBACb,2BAAO+O,QAAQ,kBACdlP,KAAKC,MAAM22B,qBACV,kBAAC,mBAAD,CAAkBn2B,GAAG,2BAA2B2W,eAAe,yBAG/D,kBAAC,mBAAD,CAAkB3W,GAAG,oCACnB2W,eAAe,2CAInB,kBAAC,GAAD,CAAUpZ,KAAK,QAAQyC,GAAG,iBACxB2O,QAASpP,KAAKC,MAAM42B,cACpB7nB,SAAUhP,KAAKC,MAAM22B,qBAAuB52B,KAAK22B,oBAAsB,QAE3E,yBAAKx2B,UAAU,OACf,kBAAC,mBAAD,CAAkBM,GAAG,oBAAoB2W,eAAe,yBAEtD,SAAC0f,GAAD,OAAuB,kBAAC,GAAD,CACrB12B,MAAO02B,EACPjb,WAAW,EACXD,KAAM,EAAKhN,MAAMgN,KACjBzE,SAAU,EAAK2L,sBAEnB,yBAAK3iB,UAAU,OACf,yBAAKA,UAAU,qBACb,6BACE,2BAAOA,UAAU,SACf,kBAAC,mBAAD,CAAkBM,GAAG,sBAAsB2W,eAAe,gBAI9D,yBAAKjX,UAAU,UACZg1B,EACAn1B,KAAK4O,MAAM8mB,cACV,2BAAO9qB,KAAK,OAAOlM,MAAOsB,KAAK4O,MAAMlQ,MACnCyB,UAAWH,KAAK4O,MAAM6mB,eAAiB,UAAY,KACnD7hB,YAAY,wBAAwBH,SAAS,WAAWkC,WAAS,EACjE3G,SAAUhP,KAAK+2B,iBAAkBthB,UAAWzV,KAAKg3B,kBAAmBzhB,OAAQvV,KAAK21B,oBACjF,KACJ,6BAAK,uBAAG9mB,KAAK,IAAItO,QAAS,SAACyD,GAAOA,EAAEI,iBAAkB,EAAK+J,SAAS,CAACunB,eAAe,MAA/E,oBAGT,yBAAKv1B,UAAU,OACf,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,kBACb,2BAAOA,UAAU,SAAQ,kBAAC,mBAAD,CAAkBM,GAAG,gBAAgB2W,eAAe,cAE7E,4BAAKpX,KAAKC,MAAMkS,WAElB,6BACE,2BAAOhS,UAAU,SACf,kBAAC,mBAAD,CAAkBM,GAAG,4BAA4B2W,eAAe,2BAIpE,yBAAKjX,UAAU,UACb,sCAAW,wBAAIA,UAAU,YACvBI,QAASP,KAAK8hB,8BAA8B7iB,KAAKe,KAAM,SAAUA,KAAK4O,MAAM4Q,OAC9E,sCAAW,wBAAIrf,UAAU,YACvBI,QAASP,KAAK8hB,8BAA8B7iB,KAAKe,KAAM,SAAUA,KAAK4O,MAAM6Q,SAGlF,yBAAKtf,UAAU,OACf,yBAAKA,UAAU,qBACb,uBAAG0O,KAAK,IAAI1O,UAAU,kBAAkBI,QAAS,SAACyD,GAAOA,EAAEI,iBAAkB,EAAKnE,MAAMg3B,aACtF,uBAAG92B,UAAU,kBAAb,eADF,KACsD,kBAAC,mBAAD,CAAkBM,GAAG,gBACvE2W,eAAe,aAGrB,yBAAKjX,UAAU,OACf,yBAAKA,UAAU,qBACb,6BACE,2BAAOA,UAAU,SACf,kBAAC,mBAAD,CAAkBM,GAAG,cAAc2W,eAAe,YAItD,yBAAKjX,UAAU,UACb,uBAAG0O,K1C1Oc,uB0C0OS1O,UAAU,cAAcgE,OAAO,UACvD,uBAAGhE,UAAU,kBAAb,SADF,KACgD,kBAAC,mBAAD,CAAkBM,GAAG,kBACjE2W,eAAe,iBAGrB,yBAAKjX,UAAU,UACb,uBAAG0O,K1C1OoB,+B0C0OS1O,UAAU,cAAcgE,OAAO,UAC7D,uBAAGhE,UAAU,kBAAb,eADF,KACsD,kBAAC,mBAAD,CAAkBM,GAAG,wBACvE2W,eAAe,uBAGrB,yBAAKjX,UAAU,UACb,uBAAG0O,K1CnPkB,iC0CmPS1O,UAAU,cAAcgE,OAAO,UAC3D,uBAAGhE,UAAU,kBAAb,UADF,KACiD,kBAAC,mBAAD,CAAkBM,GAAG,sBAClE2W,eAAe,6B,4CAlT/B,YAAYnX,GAAO,O,4FAAA,UAGjB,IAAM40B,GAFN,E,yEAAA,uBAAM50B,KAEUA,MAAMmF,OAAOmsB,aACvB9S,EAASoW,EAAGnW,mBAJD,OAKjB,EAAK9P,MAAQ,CACXqQ,SAAU4V,EAAG5iB,OAAS4iB,EAAG5iB,OAAOC,QAAKgD,EACrCvL,OAAQe,GAAamqB,EAAG5iB,OAAS4iB,EAAG5iB,OAAOtH,MAAQ,MACnD6U,KAAMf,EAASA,EAAOe,KAAO,KAC7BC,KAAMhB,EAASA,EAAOgB,KAAO,KAC7B7D,KAAMiZ,EAAGjZ,OACTuZ,YAAaN,EAAGqC,kBAAoB,GACpCxB,eAAe,EACfD,gBAAgB,EAChBD,QAAS,GACTnV,6BAAyBnL,EACzB+f,eAAgBJ,EAAGjX,eAGrB,EAAKoX,UAAY,EAAKA,UAAU/1B,KAAf,OACjB,EAAK81B,eAAiB,EAAKA,eAAe91B,KAApB,OACtB,EAAKsjB,qBAAuB,EAAKA,qBAAqBtjB,KAA1B,OAC5B,EAAKw3B,qBAAuB,EAAKA,qBAAqBx3B,KAA1B,OAC5B,EAAKyjB,mBAAqB,EAAKA,mBAAmBzjB,KAAxB,OAC1B,EAAK03B,oBAAsB,EAAKA,oBAAoB13B,KAAzB,OAC3B,EAAK83B,iBAAmB,EAAKA,iBAAiB93B,KAAtB,OACxB,EAAK+3B,kBAAoB,EAAKA,kBAAkB/3B,KAAvB,OACzB,EAAK02B,kBAAoB,EAAKA,kBAAkB12B,KAAvB,OACzB,EAAK6iB,8BAAgC,EAAKA,8BAA8B7iB,KAAnC,OACrC,EAAKqjB,4BAA8B,EAAKA,4BAA4BrjB,KAAjC,OACnC,EAAKojB,yBAA2B,EAAKA,yBAAyBpjB,KAA9B,OAChC,EAAK6jB,kBAAoB,EAAKA,kBAAkB7jB,KAAvB,OA/BR,E,ihBCRAk4B,I,uOAAkB13B,IAAMiE,W,mDAgBzBM,GAChBhE,KAAKmO,SAAS,CAACwlB,MAAO3vB,EAAEG,OAAOzF,U,2CAGZsF,GACnBhE,KAAKmO,SAAS,CAACylB,SAAU5vB,EAAEG,OAAOzF,U,8CAIlCs0B,GAAiBQ,UAAU,kBAAmBxzB,KAAK4O,MAAMklB,WACzD9zB,KAAKmO,SAAS,CAAC2lB,WAAY9zB,KAAK4O,MAAMklB,c,mCAG3B9vB,GACXA,EAAEI,iBACFpE,KAAKC,MAAMm3B,QAAQp3B,KAAK4O,MAAM+kB,MAAMzpB,OAAQlK,KAAK4O,MAAMglB,SAAS1pB,U,+BAGzD,WACH+pB,EAAgB,OAKpB,OAJIj0B,KAAKC,MAAMopB,WACb4K,GAAiB,aAIjB,0BAAMxzB,GAAG,aAAa0W,SAAUnX,KAAKyX,cACnC,kBAAC,mBAAD,CAAkBhX,GAAG,eAAe2W,eAAe,SAGjD,SAAC8c,GAAD,OAAkB,2BAAOtpB,KAAK,OAAOnK,GAAG,aACtCmT,YAAasgB,EACbhc,aAAa,WACbmf,YAAY,MACZC,eAAe,OACf54B,MAAO,EAAKkQ,MAAM+kB,MAClB3kB,SAAU,EAAKmlB,kBACf1gB,UAAQ,EAACkC,WAAS,MAGtB,kBAAC,mBAAD,CAAkBlV,GAAG,kBAAkB2W,eAAe,YAGpD,SAACgd,GAAD,OAAqB,kBAAC,GAAD,CAAiBxpB,KAAK,WAAWnK,GAAG,gBACvDmT,YAAawgB,EACblc,aAAa,mBACbxZ,MAAO,EAAKkQ,MAAMglB,SAClB5kB,SAAU,EAAKqlB,qBACf5gB,UAAU,MAGd,yBAAKtT,UAAU,kBACb,kBAAC,GAAD,CAAUM,GAAG,aAAazC,KAAK,aAAaoR,QAASpP,KAAK4O,MAAMklB,UAC9D9kB,SAAUhP,KAAK00B,wBACjB,2BAAOxlB,QAAQ,cAAf,IACE,kBAAC,mBAAD,CAAkBzO,GAAG,iBAAiB2W,eAAe,oBAGvD,uBAAGvI,KAAK,UACN,kBAAC,mBAAD,CAAkBpO,GAAG,uBAAuB2W,eAAe,uBAI/D,yBAAKjX,UAAU,kBACb,4BAAQA,UAAW8zB,EAAerpB,KAAK,UACrC,kBAAC,mBAAD,CAAkBnK,GAAG,iBAAiB2W,eAAe,oB,4CA/E/D,YAAYnX,GAAO,a,4FAAA,WACjB,E,yEAAA,uBAAMA,KAED2O,MAAQ,CACX+kB,MAAO1zB,EAAM0zB,MACbC,SAAU,GACV2D,SAAUt3B,EAAMgpB,cAChB6K,UAAWd,GAAiBO,UAAU,mBAExC,EAAKY,kBAAoB,EAAKA,kBAAkBl1B,KAAvB,OACzB,EAAKo1B,qBAAuB,EAAKA,qBAAqBp1B,KAA1B,OAC5B,EAAKy1B,sBAAwB,EAAKA,sBAAsBz1B,KAA3B,OAC7B,EAAKwY,aAAe,EAAKA,aAAaxY,KAAlB,OAZH,E,ogBCPrB,I,SAAM0D,GAAWC,yBAAe,CAC9B40B,WAAY,CAAF,qDAONC,I,uOAAqBh4B,IAAMM,e,8CAalBiE,GACXhE,KAAKmO,SAAS,CAACupB,QAAS1zB,EAAEG,OAAOzF,U,qCAGpBsF,GACC,UAAVA,EAAEhF,KACJgB,KAAKyX,aAAazT,K,mCAITA,GAEX,GADAA,EAAEI,iBACEpE,KAAK4O,MAAM8oB,QAAS,CACtB,IAAI15B,EAAOgC,KAAK4O,MAAM8oB,QAAQxtB,OACZ,EAAdlM,EAAKoE,SAAoC,OAArBpE,EAAKyD,OAAO,EAAG,IAAoC,OAArBzD,EAAKyD,OAAO,EAAG,IACnEzB,KAAKC,MAAMkX,SAASnZ,GAEpBgC,KAAKC,MAAM6E,QAAQ9E,KAAKC,MAAMiH,KAAKD,cAActE,GAAS60B,YAAa,U,+BAKpE,WACP,OACE,yBAAKr3B,UAAU,cACb,yBAAKA,UAAU,kBACf,kBAAC,mBAAD,CAAkBM,GAAG,uBAAuB2W,eAAe,oBAEzD,SAACtD,GAAD,OAAY,2BAAOlJ,KAAK,OAAOgJ,YAAaE,EAC1CpV,MAAO,EAAKkQ,MAAM8oB,QAAS1oB,SAAU,EAAKK,aAC1C4b,WAAY,EAAKC,eAAgBzX,UAAQ,OAG7C,yBAAKtT,UAAU,kBACb,4BAAQA,UAAU,OAAOI,QAASP,KAAKyX,cACrC,kBAAC,mBAAD,CAAkBhX,GAAG,mBAAmB2W,eAAe,sB,4CA/CjE,YAAYnX,GAAO,a,4FAAA,WACjB,E,yEAAA,uBAAMA,KAED2O,MAAQ,CACX8oB,QAAS,IAGX,EAAKroB,aAAe,EAAKA,aAAapQ,KAAlB,OACpB,EAAKisB,eAAiB,EAAKA,eAAejsB,KAApB,OACtB,EAAKwY,aAAe,EAAKA,aAAaxY,KAAlB,OATH,EAwDN2I,4BAAW6vB,I,ihBC5DLE,I,uOAAsBl4B,IAAMM,e,gDAmBhCiE,GACbhE,KAAKmO,SAAS,CAAC+D,GAAIlO,EAAEG,OAAOzF,U,0CAGVsF,GAClBhE,KAAKmO,SAAS,CAAC4D,QAAS/N,EAAEG,OAAOzF,U,yCAGhB8N,GACjBxM,KAAKmO,SAAS,CAAC6M,aAAcxO,M,wCAGboP,GAChB5b,KAAKmO,SAAS,CAACyN,KAAMA,M,mCAGV5X,GACXA,EAAEI,iBAEF,IAAM8N,EAAKlS,KAAK4O,MAAMsD,GAAGhI,OAAOkC,UAAU,E7C0Bd,I6CzBtB2E,EAAU/Q,KAAK4O,MAAMmD,QAAQ7H,OAAOkC,UAAU,E7CyBxB,I6CxBxB8F,GACFlS,KAAKC,MAAMkX,SAASjF,EAAIlS,KAAK4O,MAAMoM,aAAcjK,EAAS/Q,KAAK4O,MAAMgN,Q,+BAIhE,WACHqY,EAAgB,OAIpB,OAHIj0B,KAAKC,MAAMopB,WACb4K,GAAiB,aAGjB,0BAAM9zB,UAAU,aAAagX,SAAUnX,KAAKyX,cAC1C,yBAAKtX,UAAU,kBACb,yBAAKA,UAAU,qBACb,2BAAOA,UAAU,QAAQ+O,QAAQ,gBAC/B,kBAAC,mBAAD,CAAkBzO,GAAG,sBAEvB,kBAAC,mBAAD,CAAkBA,GAAG,iCAAiC2W,eAAe,8BAEnE,SAACxD,GAAD,OAAiB,2BAAOhJ,KAAK,OAAOnK,GAAG,eAAemT,YAAaA,EACjElV,MAAO,EAAKkQ,MAAMsD,GAAIlD,SAAU,EAAKulB,eAAgB5e,WAAS,EAAClC,UAAQ,MAE3E,6BACA,2BAAOtT,UAAU,QAAQ+O,QAAQ,kBAC/B,kBAAC,mBAAD,CAAkBzO,GAAG,mBAEvB,kBAAC,mBAAD,CAAkBA,GAAG,+BACnB,SAACmT,GAAD,OAAiB,2BAAOhJ,KAAK,OAAOnK,GAAG,iBAAiBmT,YAAaA,EACnElV,MAAO,EAAKkQ,MAAMmD,QAAS/C,SAAU,EAAK4oB,yBAGhD,kBAAC,GAAD,CACE9yB,QAAS9E,KAAKC,MAAM6E,QACpB0J,eAAgBxO,KAAK0iB,sBAEzB,kBAAC,mBAAD,CAAkBjiB,GAAG,qBACnB,SAACL,GAAD,OAAW,kBAAC,GAAD,CACTwb,KAAM,EAAKhN,MAAMgN,KACjBC,WAAW,EACXK,cAAe,EAAK2b,kBACpBz3B,MAAOA,MAEX,yBAAKD,UAAU,kBACb,4BAAQA,UAAW8zB,GACjB,kBAAC,mBAAD,CAAkBxzB,GAAG,gBAAgB2W,eAAe,mB,4CAnF9D,YAAYnX,GAAO,a,4FAAA,WACjB,E,yEAAA,uBAAMA,KAED2O,MAAQ,CACXsD,GAAI,GACJH,QAAS,GACTiJ,aAAc,KACdY,KAAM,IAGR,EAAK2Y,eAAiB,EAAKA,eAAet1B,KAApB,OACtB,EAAK24B,oBAAsB,EAAKA,oBAAoB34B,KAAzB,OAC3B,EAAKyjB,mBAAqB,EAAKA,mBAAmBzjB,KAAxB,OAC1B,EAAK44B,kBAAoB,EAAKA,kBAAkB54B,KAAvB,OACzB,EAAK44B,kBAAoB,EAAKA,kBAAkB54B,KAAvB,OACzB,EAAKwY,aAAe,EAAKA,aAAaxY,KAAlB,OAfH,E,ihBCJA64B,I,uOAAuBr4B,IAAMM,e,wDAgB1CC,KAAK4O,MAAMmpB,SACb/3B,KAAKmO,SAAS,CAACmiB,OAAQ,GAAIyH,QAAQ,IACnC/3B,KAAKC,MAAM+3B,iBAAiBr4B,IAAOsgB,a,yCAIpBjc,GACjBhE,KAAKmO,SAAS,CAACmiB,OAAQtsB,EAAEG,OAAOzF,U,mCAGrBsF,GACXA,EAAEI,iBACF,IAAIwS,EAAQ5W,KAAK4O,MAAM0hB,OAAOpmB,OAC9BlK,KAAKmO,SAAS,CAAC4pB,OAAwB,EAAfnhB,EAAMxU,SAC9BpC,KAAKC,MAAM+3B,iBAAgC,EAAfphB,EAAMxU,OAAawU,EAAQjX,IAAOsgB,Y,kCAGpDjc,GACVA,EAAEI,iBACEpE,KAAK4O,MAAMmpB,QACb/3B,KAAKC,MAAM+3B,iBAAiBr4B,IAAOsgB,UAErCjgB,KAAKmO,SAAS,CAACmiB,OAAQ,GAAIyH,QAAQ,M,oCAGvB/zB,GACE,UAAVA,EAAEhF,IACJgB,KAAKi4B,aAAaj0B,GACC,WAAVA,EAAEhF,KACXgB,KAAKk4B,gB,+BAIA,WACP,OACE,yBAAK/3B,UAAU,cACb,yBAAKA,UAAU,kBACb,uBAAGA,UAAU,yBAAb,UACA,kBAAC,mBAAD,CAAkBM,GAAG,qBAAqB2W,eAAe,yDAEvD,SAAC+gB,GAAD,OAAwB,2BAAOh4B,UAAU,SAASyK,KAAK,OACrDgJ,YAAaukB,EACbz5B,MAAO,EAAKkQ,MAAM0hB,OAAQthB,SAAU,EAAKopB,mBACzC3iB,UAAW,EAAKC,cAAejC,UAAQ,EAACkC,WAAS,MAErD,uBAAG9G,KAAK,IAAItO,QAASP,KAAKk4B,aACxB,uBAAG/3B,UAAU,kBAAb,iB,4CA7DV,YAAYF,GAAO,a,4FAAA,WACjB,E,yEAAA,uBAAMA,KAED2O,MAAQ,CACXmpB,QAAQ,EACRzH,OAAQ,IAGV,EAAK8H,mBAAqB,EAAKA,mBAAmBn5B,KAAxB,OAC1B,EAAKg5B,aAAe,EAAKA,aAAah5B,KAAlB,OACpB,EAAKi5B,YAAc,EAAKA,YAAYj5B,KAAjB,OACnB,EAAKyW,cAAgB,EAAKA,cAAczW,KAAnB,OAXJ,E,ogBCQrB,I,SAAM0D,GAAWC,yBAAe,CAC9By1B,oBAAqB,CAAF,uEAKnBC,kBAAmB,CAAF,sEAObC,I,uOAAqB94B,IAAMiE,W,qDAiB7B1D,KAAKC,MAAMmhB,e,qCAGEpd,GACbA,EAAEI,iBACFjD,EAAeq3B,WAAWr3B,EAAes3B,YAAY12B,OAAOC,SAASZ,KAAM,MAAO4C,EAAES,cAAcC,QAAQjE,KAC1GT,KAAKmO,SAAS,CAACuqB,YAAa10B,EAAES,cAAcC,QAAQjE,O,2CAGjCmW,GACnB5W,KAAKC,MAAM+3B,iBAAiBphB,GAC5B5W,KAAKmO,SAAS,CAACwqB,YAAah5B,IAAOi5B,YAAYhiB,GAAS,KAAOA,M,4CAG3CP,GACW,QAA3BrW,KAAK4O,MAAM8pB,cACbv3B,EAAeq3B,WAAWr3B,EAAe03B,eAAe92B,OAAOC,SAASZ,KAAM,QAC9EpB,KAAKC,MAAM64B,cAAcziB,OAAKnB,M,2CAIblX,EAAMoQ,EAAS2qB,EAAMnd,GACxCza,EAAeq3B,WAAWr3B,EAAe03B,eAAe92B,OAAOC,SAASZ,KAAM,QAC9EpB,KAAKC,MAAM64B,mBAAc5jB,EAAW6F,GAAM/c,EAAMoQ,GAAU2qB,EAAMnd,K,sCAGlDtW,GACdnE,EAAeq3B,WAAWr3B,EAAe03B,eAAe92B,OAAOC,SAASZ,KAAM,QAC9EpB,KAAKC,MAAM64B,cAAcxzB,K,+BAGlB,IAED0zB,GAA0B/xB,EADRjH,KAAKC,MAAMiH,KAA5BD,eACuCjH,KAAK4O,MAAM+pB,YACvDh2B,GAAS21B,kBAAoB31B,GAAS01B,qBACxC,OACE,yBAAKl4B,UAAU,eACb,wBAAIA,UAAU,UACZ,wBAAIA,UAAsC,QAA3BH,KAAK4O,MAAM8pB,YAAwB,SAAW,MAC3D,uBAAG7pB,KAAK,IAAIxI,UAAQ,MAAM9F,QAASP,KAAKi5B,gBACtC,kBAAC,mBAAD,CAAkBx4B,GAAG,qBAAqB2W,eAAe,WAI7D,wBAAIjX,UAAsC,QAA3BH,KAAK4O,MAAM8pB,YAAwB,SAAW,MAC3D,uBAAG7pB,KAAK,IAAIxI,UAAQ,MAAM9F,QAASP,KAAKi5B,gBACtC,kBAAC,mBAAD,CAAkBx4B,GAAG,qBAAqB2W,eAAe,gBAI7D,wBAAIjX,UAAsC,SAA3BH,KAAK4O,MAAM8pB,YAAyB,SAAW,MAC5D,uBAAG7pB,KAAK,IAAIxI,UAAQ,OAAO9F,QAASP,KAAKi5B,gBACvC,kBAAC,mBAAD,CAAkBx4B,GAAG,uBAAuB2W,eAAe,aAKrC,QAA3BpX,KAAK4O,MAAM8pB,YACV,kBAAC,GAAD,CAAevhB,SAAUnX,KAAKk5B,uBACH,SAA3Bl5B,KAAK4O,MAAM8pB,YACX,kBAAC,GAAD,CACEvhB,SAAUnX,KAAKm5B,gBACfr0B,QAAS9E,KAAKC,MAAM6E,UACtB,yBAAK3E,UAAU,eACb,kBAAC,GAAD,CACEyK,KAAK,MACLotB,iBAAkBh4B,KAAKo5B,uBACzB,kBAAC,GAAD,CACExnB,SAAU5R,KAAKC,MAAMo5B,cACrBlnB,SAAUnS,KAAKC,MAAMkS,SACrBQ,iBAAkBqmB,EAClBnoB,YAAY,EACZwB,YAAY,EACZpC,iBAAiB,EACjBsC,gBAAiBvS,KAAKwX,+B,4CA1FlC,YAAYvX,GAAO,a,4FAAA,WACjB,E,yEAAA,uBAAMA,KAED2O,MAAQ,CACX8pB,YAAa,MACbC,YAAa,MAGf,EAAKM,eAAiB,EAAKA,eAAeh6B,KAApB,OACtB,EAAKm6B,qBAAuB,EAAKA,qBAAqBn6B,KAA1B,OAC5B,EAAKuY,sBAAwB,EAAKA,sBAAsBvY,KAA3B,OAC7B,EAAKi6B,qBAAuB,EAAKA,qBAAqBj6B,KAA1B,OAC5B,EAAKk6B,gBAAkB,EAAKA,gBAAgBl6B,KAArB,OAZN,EAiGN2I,4BAAW2wB,I,ihBCrHLe,I,uOAA0B75B,IAAMM,e,qDAejD,IAAIsC,EAASlB,EAAemB,aAAaP,OAAOC,SAASZ,MACzDpB,KAAKmO,SAAS,CAACorB,MAAOl3B,EAAOd,OAAOg4B,MAAOC,OAAQn3B,EAAOd,OAAOi4B,W,mCAGtDx1B,GACXA,EAAEI,iBACEpE,KAAK4O,MAAM2qB,MACbv5B,KAAKC,MAAMw5B,QAAQz5B,KAAK4O,MAAM4qB,OAAQx5B,KAAK4O,MAAMglB,SAAS1pB,OAAQlK,KAAK4O,MAAM2qB,OAE7Ev5B,KAAKC,MAAMy5B,UAAU,QAAS15B,KAAK4O,MAAMilB,MAAM3pB,U,wCAIjClG,GAChBhE,KAAKmO,SAAS,CAAC0lB,MAAO7vB,EAAEG,OAAOzF,U,2CAGZsF,GACnBhE,KAAKmO,SAAS,CAACylB,SAAU5vB,EAAEG,OAAOzF,U,+BAG3B,WACHi7B,EAAS35B,KAAK4O,MAAM2qB,OAASv5B,KAAK4O,MAAM4qB,OAC5C,OACE,0BAAM/4B,GAAG,sBAAsB0W,SAAUnX,KAAKyX,cAC3CkiB,EACC,kBAAC,mBAAD,CAAkBl5B,GAAG,2BAA2B2W,eAAe,sBAE7D,SAACxD,GAAD,OAAiB,kBAAC,GAAD,CACfA,YAAaA,EACbsE,aAAa,eACbxZ,MAAO,EAAKkQ,MAAMglB,SAClBngB,UAAU,EAAMkC,WAAW,EAC3B3G,SAAU,EAAKqlB,yBAGnB,oCACE,2BAAOnlB,QAAQ,cACb,kBAAC,mBAAD,CAAkBzO,GAAG,uBACnB2W,eAAe,kCAGnB,kBAAC,mBAAD,CAAkB3W,GAAG,0BAA0B2W,eAAe,2BAE5D,SAACxD,GAAD,OAAiB,2BAAOhJ,KAAK,QAAQnK,GAAG,aACtCmT,YAAaA,EACbsE,aAAa,QACbxZ,MAAO,EAAKkQ,MAAMilB,MAClB7kB,SAAU,EAAKylB,kBACfhhB,UAAQ,EAACkC,WAAS,OAI1B,yBAAKxV,UAAU,kBACb,4BAAQA,UAAU,OAAOyK,KAAK,UAAU+uB,EACtC,kBAAC,mBAAD,CAAkBl5B,GAAG,eAAe2W,eAAe,UACnD,kBAAC,mBAAD,CAAkB3W,GAAG,sBAAsB2W,eAAe,yB,4CAtEpE,YAAYnX,GAAO,a,4FAAA,WACjB,E,yEAAA,uBAAMA,KAED2O,MAAQ,CACXilB,MAAO,GACPD,SAAU,IAGZ,EAAKnc,aAAe,EAAKA,aAAaxY,KAAlB,OACpB,EAAKw1B,kBAAoB,EAAKA,kBAAkBx1B,KAAvB,OACzB,EAAKo1B,qBAAuB,EAAKA,qBAAqBp1B,KAA1B,OAVX,E,ihBCHA26B,I,uOAAqBn6B,IAAMM,e,sDAazBiE,GACnBhE,KAAKmO,SAAS,CAACopB,SAAUvzB,EAAEG,OAAOzF,MAAOm7B,SAAS,M,8CAI9C75B,KAAK4O,MAAMirB,UACb75B,KAAKmO,SAAS,CAAC0rB,SAAS,IACxB75B,KAAKC,MAAM65B,sBAAsB95B,KAAK4O,MAAM2oB,SAASrtB,W,+BAKvD,IAAI6vB,EAAc,GAClB,IAAK,IAAI/6B,KAAO6B,EAAa,CAC3B,IAAIe,EAAOf,EAAY7B,GACvB+6B,EAAY53B,KACV,4BAAQnD,IAAK4C,EAAMlD,MAAOkD,KAG9B,OACE,yBAAKzB,UAAU,kBACb,2BAAOyK,KAAK,SAASnK,GAAG,YAAYmT,YAAa5T,KAAKC,MAAMs3B,SAAUyC,KAAK,cACzE75B,UAAU,SAASzB,MAAOsB,KAAK4O,MAAM2oB,SAAUvoB,SAAUhP,KAAKi6B,qBAC9D1kB,OAAQvV,KAAK8X,sBAAuBrE,UAAQ,IAC9C,8BAAUhT,GAAG,eACVs5B,S,4CArCT,YAAY95B,GAAO,a,4FAAA,WACjB,E,yEAAA,uBAAMA,KAED2O,MAAQ,CACX2oB,SAAUt3B,EAAMgpB,cAChB4Q,SAAS,GAGX,EAAKI,qBAAuB,EAAKA,qBAAqBh7B,KAA1B,OAC5B,EAAK6Y,sBAAwB,EAAKA,sBAAsB7Y,KAA3B,OATZ,E,ihBCDAi7B,I,uOAAqBz6B,IAAMM,e,8CAcjCiE,GACXA,EAAEI,iBACFpE,KAAKC,MAAMk6B,SAAS,CAClBC,UAAWp6B,KAAK4O,MAAMwrB,UACtBnR,cAAejpB,KAAK4O,MAAMqa,kB,8CAINjlB,GACtBhE,KAAKmO,SAAS,CAACisB,UAAWp2B,EAAES,cAAc/F,U,gDAGlBV,GACxBgC,KAAKmO,SAAS,CAAC8a,cAAejrB,M,+BAI9B,IAAMwb,EAAQ,CAAC6gB,IAAK,UAAWC,GAAI,YAAaC,GAAI,gBAChDC,EAAmB,GACnBzjB,EAAW/W,KAcf,MAbA,CAAC,MAAO,KAAM,MAAMmG,IAAI,SAASvE,GAC/B,IAAInB,EAAK,aAAemB,EACpB5D,EAAOwb,EAAM5X,GACjB44B,EAAiBr4B,KACf,wBAAInD,IAAK4C,GACP,2BAAOgJ,KAAK,QAAQnK,GAAIA,EAAIzC,KAAK,mBAAmBU,MAAOkD,EACzDwN,QAAS2H,EAASnI,MAAMwrB,YAAcx4B,EACtCoN,SAAU+H,EAAS0jB,0BACrB,2BAAOvrB,QAASzO,GAAKzC,OAMzB,0BAAMyC,GAAG,gBAAgBN,UAAU,aAAagX,SAAUnX,KAAKyX,cAC7D,yBAAKtX,UAAU,kBACb,2BAAOA,UAAU,SACf,kBAAC,mBAAD,CAAkBM,GAAG,sBAAsB2W,eAAe,qBAI9D,kBAAC,GAAD,CAAc6R,cAAejpB,KAAK4O,MAAMqa,cACtC6Q,sBAAuB95B,KAAK06B,4BAC9B,yBAAKv6B,UAAU,kBACb,2BAAOA,UAAU,SACf,kBAAC,mBAAD,CAAkBM,GAAG,uBAAuB2W,eAAe,sBAI/D,yBAAKjX,UAAU,kBACb,wBAAIA,UAAU,UACXq6B,IAGL,yBAAKr6B,UAAU,kBACb,4BAAQyK,KAAK,SAASzK,UAAU,QAC9B,kBAAC,mBAAD,CAAkBM,GAAG,gBAAgB2W,eAAe,mB,4CArE9D,YAAYnX,GAAO,a,4FAAA,WACjB,E,yEAAA,uBAAMA,KAED2O,MAAQ,CACXwrB,UAAWn6B,EAAMm6B,WAAa,MAC9BnR,cAAehpB,EAAMgpB,eAGvB,EAAKxR,aAAe,EAAKA,aAAaxY,KAAlB,OACpB,EAAKw7B,wBAA0B,EAAKA,wBAAwBx7B,KAA7B,OAC/B,EAAKy7B,0BAA4B,EAAKA,0BAA0Bz7B,KAA/B,OAVhB,E,ogBCHrB,I,SAAM0D,GAAWC,yBAAe,CAC9B+3B,MAAO,CAAF,0CAKL9G,MAAO,CAAF,4CAOD+G,I,uOAAuBn7B,IAAMM,e,8CAcpBiE,GACXhE,KAAKmO,SAAS,CAAC0sB,KAAM72B,EAAEG,OAAOzF,U,qCAGjBsF,GACC,UAAVA,EAAEhF,IACJgB,KAAKyX,aAAazT,GACA,UAATA,EAAEhF,KACXgB,KAAK0T,aAAa1P,K,mCAITA,GACXA,EAAEI,iBACEpE,KAAK4O,MAAMisB,MAAQ76B,KAAK4O,MAAMisB,KAAK3wB,QACrClK,KAAKC,MAAMkX,SAASnX,KAAKC,MAAM66B,WAAY96B,KAAK4O,MAAMisB,KAAK3wB,U,mCAIlDlG,GACXA,EAAEI,iBACFpE,KAAKC,MAAM4S,a,+BAIJ,WACC5L,EAAkBjH,KAAKC,MAAMiH,KAA7BD,cAEJ2uB,EADY,CAAC,MAAS3uB,EAActE,GAASkxB,OAAQ,IAAO5sB,EAActE,GAASg4B,QAClE36B,KAAKC,MAAM66B,aAAe96B,KAAKC,MAAM66B,WAC1D,OACE,yBAAK36B,UAAU,cACb,yBAAKA,UAAU,kBACb,2BAAOA,UAAU,QAAQ+O,QAAQ,2BAC/B,kBAAC,mBAAD,CAAkBzO,GAAG,iCACnB2W,eAAe,mDAEfjG,OAAQ,CAACykB,OAAQA,OAGvB,yBAAKz1B,UAAU,kBACf,kBAAC,mBAAD,CAAkBM,GAAG,mCACnB2W,eAAe,gBACf,SAAC2jB,GAAD,OAAkB,2BAAOnwB,KAAK,OAAOnK,GAAG,0BACtCmT,YAAamnB,EACbr8B,MAAO,EAAKkQ,MAAMisB,KAAM7rB,SAAU,EAAKK,aACvC4b,WAAY,EAAKC,eAAgBzX,UAAQ,OAG7C,yBAAKtT,UAAU,kBACb,4BAAQA,UAAU,OAAOI,QAASP,KAAKyX,cACrC,kBAAC,mBAAD,CAAkBhX,GAAG,iBAAiB2W,eAAe,aAEvD,4BAAQjX,UAAU,QAAQI,QAASP,KAAK0T,cACtC,kBAAC,mBAAD,CAAkBjT,GAAG,0B,4CAlE/B,YAAYR,GAAO,a,4FAAA,WACjB,E,yEAAA,uBAAMA,KAED2O,MAAQ,CACXisB,KAAM56B,EAAM+6B,UAAY,IAG1B,EAAK3rB,aAAe,EAAKA,aAAapQ,KAAlB,OACpB,EAAKisB,eAAiB,EAAKA,eAAejsB,KAApB,OACtB,EAAKwY,aAAe,EAAKA,aAAaxY,KAAlB,OACpB,EAAKyU,aAAe,EAAKA,aAAazU,KAAlB,OAVH,EA0EN2I,4BAAWgzB,I,ogBC3E1B,I,SAAMj4B,GAAWC,yBAAe,CAC9B,4DAKA,yEAKA,mEAKA,uEAKA,qEAKA,sEAKA,mEAKA,yEAOIq4B,I,uOAAsBx7B,IAAMiE,W,sDAOXiwB,EAAOC,GAC1B5zB,KAAKC,MAAMi7B,eAAevH,EAAOC,K,+BAG1B,IAIHxzB,EAAOuJ,EASPkJ,EAZG5L,EAAiBjH,KAAKC,MAAMiH,KAA5BD,cACDk0B,EAAOn7B,KAAKC,MAAM2O,QAAU5O,KAAKC,MAAMkS,SAAW,WAAa,SAgBrE,OAXExI,EAFU,YAARwxB,GACF/6B,EAAQJ,KAAKC,MAAMG,OACVJ,KAAKC,MAAM0J,QAAS3J,KAAKC,MAAM0J,SAExCvJ,EAAQ6G,EAActE,GAASw4B,KACtB,IAIiC,GAAxC,CAAC,QAAS,YAAYnvB,QAAQmvB,KAChCtoB,EAAW7S,KAAKC,MAAM4S,UAItB,yBAAKpS,GAAG,YAAYN,UAAWH,KAAKC,MAAM8oB,SAAW,YAAc,MACjE,kBAAC,GAAD,CACEna,MAAOusB,EACP/6B,MAAOA,EACPuJ,OAAQA,EACRwI,SAAUnS,KAAKC,MAAMkS,SACrBigB,SAAUpyB,KAAKC,MAAMmyB,SACrBF,WAAYlyB,KAAKC,MAAMiyB,WACvBD,WAAYjyB,KAAKC,MAAMgyB,WACvBpf,SAAUA,IAEZ,kBAAC,GAAD,CACEE,MAAO/S,KAAKC,MAAM+hB,WAClB7O,KAAMnT,KAAKC,MAAMgiB,UACjB/Q,OAAQlR,KAAKC,MAAMm7B,YACnB/nB,WAAYrT,KAAKC,MAAMo7B,gBACvBpoB,aAAcjT,KAAKC,MAAM6E,UAE3B,kBAAC,GAAD,CAAakO,KAAMhT,KAAKC,MAAMq7B,qBAEpB,UAATH,EACC,kBAAC,GAAD,CACExH,MAAO3zB,KAAKC,MAAM0zB,MAClBtK,SAAUrpB,KAAKC,MAAMs7B,cACrBnE,QAASp3B,KAAKw7B,uBAEP,aAATL,EACA,kBAAC,GAAD,CACEnH,gBAAiBh0B,KAAKC,MAAM+zB,gBAC5BnhB,SAAU7S,KAAKC,MAAM4S,SACrB/N,QAAS9E,KAAKC,MAAM6E,UAEb,aAATq2B,EACA,kBAAC,GAAD,CACEf,UAAWp6B,KAAKC,MAAMm6B,UACtBnR,cAAejpB,KAAKC,MAAMgpB,cAC1BpW,SAAU7S,KAAKC,MAAM4S,SACrBsnB,SAAUn6B,KAAKC,MAAMw7B,mBAEd,SAATN,EACA,kBAAC,GAAD,CACE/1B,OAAQpF,KAAKC,MAAMmF,OACnB+M,SAAUnS,KAAKC,MAAMkS,SACrBukB,cAAe12B,KAAKC,MAAMy2B,cAC1BG,cAAe72B,KAAKC,MAAM42B,cAC1BD,qBAAsB52B,KAAKC,MAAM22B,qBACjCxB,gBAAiBp1B,KAAKC,MAAMm1B,gBAC5BY,aAAch2B,KAAKC,MAAMy7B,oBACzBnG,0BAA2Bv1B,KAAKC,MAAMs1B,0BACtCD,sBAAuBt1B,KAAKC,MAAMq1B,sBAClCS,UAAW/1B,KAAKC,MAAM81B,UACtBM,aAAcr2B,KAAKC,MAAMo2B,aACzBD,cAAep2B,KAAKC,MAAMm2B,cAC1Ba,SAAUj3B,KAAKC,MAAMg3B,SACrBpkB,SAAU7S,KAAKC,MAAM4S,SACrB/N,QAAS9E,KAAKC,MAAM6E,UAEZ,aAATq2B,GAA+B,WAARA,EACxB,kBAAC,GAAD,CACE/1B,OAAQpF,KAAKC,MAAMmF,OACnB+M,SAAUnS,KAAKC,MAAMkS,SACrBG,UAAWtS,KAAKC,MAAMqS,UACtBb,cAAezR,KAAKC,MAAMwR,cAC1BjO,QAAiB,WAAR23B,EACTzI,SAAU1yB,KAAKC,MAAMyyB,SACrBziB,gBAAiBjQ,KAAKC,MAAMgQ,gBAC5BsC,gBAAiBvS,KAAKC,MAAMsS,gBAC5BugB,cAAe9yB,KAAKC,MAAM6yB,gBAEnB,WAATqI,EACA,kBAAC,GAAD,CACE9B,cAAer5B,KAAKC,MAAMo5B,cAC1BjY,WAAYphB,KAAKC,MAAMmhB,WACvB4W,iBAAkBh4B,KAAKC,MAAM+3B,iBAC7Bc,cAAe94B,KAAKC,MAAM64B,cAC1Bh0B,QAAS9E,KAAKC,MAAM6E,UAEb,SAATq2B,EACA,kBAAC,GAAD,CACEH,SAAUh7B,KAAKC,MAAM+6B,SACrBF,WAAY96B,KAAKC,MAAM66B,WACvB3jB,SAAUnX,KAAKC,MAAM07B,sBACrB9oB,SAAU7S,KAAKC,MAAM4S,SACrB/N,QAAS9E,KAAKC,MAAM6E,UAEb,UAATq2B,EACA,kBAAC,GAAD,CACEzB,UAAW15B,KAAKC,MAAM27B,uBACtBnC,QAASz5B,KAAKC,MAAM47B,kBACtB,W,4CAtHR,YAAY57B,GAAO,a,4FAAA,WACjB,E,yEAAA,uBAAMA,KAEDu7B,qBAAuB,EAAKA,qBAAqBv8B,KAA1B,OAHX,EA4HN2I,4BAAWqzB,ICzKnB,SAASa,KACd,MAA8B,iBAAnB/5B,OAAOC,UACmB,UAA5BD,OAAOC,SAAS+5B,S,ogBCS3B,I,SAAMC,GAAY,IAAIC,MAAM,iBAEtBt5B,GAAWC,yBAAe,CAC9Bs5B,iBAAkB,CAAF,iFAKhBC,oBAAqB,CAAF,oFAKnBC,cAAe,CAAF,+CAOTC,I,uOAAkB58B,IAAMiE,W,wCAoNbulB,EAAemR,GAC5B,IAAIh1B,EAAS,IAAIzF,IAAOiB,EAAUqoB,EtD9Pf,mCsD8PuCmR,EAAW0B,MAErE,OADA12B,EAAOk3B,etDtPoB,GsDsPW,GAC/Bl3B,I,gDAwVwBstB,EAAU6J,GACzC,IAAIC,EAAS,GAD2C,uBAKxD,YAAgB9J,EAAhB,+CAA0B,KAAf50B,EAAe,QACS,OAA7B6B,IAAOkK,UAAU/L,EAAE2E,SACnB+5B,EAAO1+B,EAAE2E,OAAS,CAChBuD,KAAMlI,EAAE2E,MACRg6B,QAAS3+B,EAAE2+B,QACXxqB,OAAQnU,EAAEmU,OACVF,QAASjU,EAAEiU,QACX/B,IAAKlS,EAAEkS,OAZyC,6GAkBxD,YAAgBusB,EAAhB,+CAA+B,KAApBz+B,EAAoB,QACxB0+B,EAAO1+B,EAAEkI,QACZw2B,EAAO1+B,EAAEkI,MAAQlI,IApBmC,kFAwBxD,OAAOK,OAAOgT,OAAOqrB,O,0CA9frB,IAAME,EAAW1J,GAAiBO,UAAU,aAAe,GAE3D,MAAO,CACLjhB,WAAW,EAEX2b,OAAO,EACPmM,UAAWsC,EAAStC,WAAa,KACjCnR,cAAeyT,EAASzT,eD5HvB,WACL,IAAI0T,EAAO37B,EAQX,MAP8B,iBAAnBe,OAAOC,WACgB,SAA5BD,OAAOC,SAAS+5B,UAAmD,aAA5Bh6B,OAAOC,SAAS46B,SACzDD,EAAO97B,EAAYE,MACVgB,OAAOC,SAAS46B,WACzBD,EAAO56B,OAAOC,SAAS46B,UAAY76B,OAAOC,SAAS66B,KAAO,IAAM96B,OAAOC,SAAS66B,KAAO,MAGpFF,ECmHsCG,GACzC9T,cAAe,gBAEf0N,eAAgBgG,EAASK,iBACzBlG,cAAe6F,EAAS7F,cACxBD,sBAAuBkF,MD5GG,iBAAnB/5B,OAAOC,UACmB,aAA5BD,OAAOC,SAAS46B,gBC4GC,IAAZ/8B,GAAiD,oBAAbkI,WACnB,oBAAjBi1B,cACVC,cAAejK,GAAiBO,UAAU,kBAE1CtR,UAAW,GACXD,WAAY,KACZoZ,iBAAalmB,EACbmmB,gBAAiB,KAEjB6B,kBAAmB,QACnBC,eAAgB,KAChBC,gBAAiB,KACjB9B,oBAAoB,EAEpB3H,MAAO,GACPC,SAAU,GACVzhB,SAAU,KACVkrB,eAAgBt1B,UAAUu1B,OAC1B7rB,cAAe,GACf8rB,qBAAqB,EACrBC,iBAAkB,KAClBrP,eAAgB,KAChBoN,eAAe,EACfxZ,cAAgBhgB,OAAO07B,YtDvHG,IsDwH1BC,eAAe,EACfC,YAAa,YAEbC,oBAAoB,EACpBC,kBAAmB,KACnBC,mBAAoB,KACpBC,kBAAmB,KACnBC,iBAAkB,GAGlBC,cAAc,EACdC,YAAa,GAGbxL,SAAU,GAEV2G,cAAe,GAEfnX,mBAAoB,GACpB4Y,gBAAY5lB,EACZ8lB,cAAU9lB,K,0CAIM,WAmBlB,GAlBAnT,OAAO6B,iBAAiB,SAAU5D,KAAKm+B,cACvCp8B,OAAO6B,iBAAiB,SAAU,SAACI,GAAQ,EAAKo6B,cAAa,KAC7Dr8B,OAAO6B,iBAAiB,UAAW,SAACI,GAAQ,EAAKo6B,cAAa,KAC9Dr8B,OAAO6B,iBAAiB,aAAc5D,KAAKq+B,iBAE3C16B,SAASC,iBAAiB,mBAAoB5D,KAAKs+B,uBAEnDt+B,KAAKmO,SAAS,CACZiZ,cAAezjB,SAAS46B,gBAAgBC,YACxCpR,eAAgBzpB,SAAS46B,gBAAgBE,eAG3Cz+B,KAAKoF,OAASi3B,GAAUqC,QAAQ1+B,KAAK4O,MAAMqa,cAAejpB,KAAK4O,MAAMwrB,WACrEp6B,KAAKoF,OAAOu5B,UAAY3+B,KAAK4+B,gBAC7B5+B,KAAKoF,OAAOy5B,aAAe7+B,KAAK8+B,iBAChC9+B,KAAKoF,OAAO25B,yBAA2B/+B,KAAKg/B,6BAGxCh/B,KAAK4O,MAAMgoB,qBACb,IACE52B,KAAKi/B,OAASp/B,gBAAuBm9B,cAAep8B,GAAUs+B,YAC9Dl/B,KAAKi/B,OAAOE,kBAAkBnC,cAAcoC,mBAC5Cr3B,UAAUs3B,cAAcC,SAAS,sBAAsB/3B,KAAK,SAACg4B,GAC3D,EAAKC,kBAAkBD,GACvB,EAAKN,OAAOQ,iBAAiBF,GAC7B,EAAKG,oBACD,EAAK9wB,MAAMioB,gBACR,EAAKjoB,MAAMquB,cAGd,EAAK73B,OAAOu6B,eAAe,EAAK/wB,MAAMquB,eAAe,GAFrD,EAAK2C,iBAAgB,MAKxBj6B,MAAM,SAACC,GAERb,QAAQC,IAAI,qCAAsCY,KAEpD,MAAOA,GACP5F,KAAK6/B,YAAY,0CAA2C,OAC5D96B,QAAQC,IAAI,0CAA2CY,GACvD5F,KAAKmO,SAAS,CAACyoB,sBAAsB,IAIzC,IAAM2C,EAAQvG,GAAiBO,UAAU,kBACvCP,GAAiBO,UAAU,mBAAgBre,EAEvC4qB,EAAY3+B,EAAemB,aAAaP,OAAOC,SAASZ,MAC1Dm4B,GAEFA,EAAMwG,QAAU,IAAI53B,KAAKoxB,EAAMwG,SAC/B//B,KAAKoF,OAAO46B,aAAazG,GACzBv5B,KAAKoF,OAAO66B,UAAUt6B,MAAM,SAACC,GAE3B,EAAKi6B,YAAYj6B,EAAIC,QAAS,gBAEzBi6B,EAAUv+B,OAAOmB,YACjBo9B,EAAUv+B,OAAO2+B,IACxBJ,EAAUt+B,KAAK,GAAK,GACpBL,EAAeq3B,WAAWr3B,EAAeoB,eAAeu9B,EAAUt+B,KAAMs+B,EAAUv+B,UACxEu+B,EAAUv+B,OAAOg4B,OAC3Bp4B,EAAeq3B,WAAW,IAG5Bx4B,KAAKmgC,UAAY,KACjBngC,KAAKogC,kBAAoB,KAEzBpgC,KAAKq+B,oB,6CAILt8B,OAAOgC,oBAAoB,SAAU/D,KAAKm+B,cAC1Cp8B,OAAOgC,oBAAoB,aAAc/D,KAAKq+B,iBAC9C16B,SAASI,oBAAoB,mBAAoB/D,KAAKs+B,yB,qCAWtD,IAAI+B,EAAS18B,SAAS46B,gBAAgBC,atDrOV,IsDsO5Bx+B,KAAKmO,SAAS,CACZiZ,cAAezjB,SAAS46B,gBAAgBC,YACxCpR,eAAgBzpB,SAAS46B,gBAAgBE,eAEvCz+B,KAAK4O,MAAMmT,eAAiBse,GAC9BrgC,KAAKmO,SAAS,CAAC4T,cAAese,M,wCAKhBd,GAAK,WACde,EAAqBtgC,KAAKC,MAAMiH,KAAhCo5B,kBACPf,EAAIgB,cAAgB,WAClB,IAAMC,EAAmBjB,EAAIkB,WAC7BD,EAAiBE,cAAgB,WACD,aAA1BF,EAAiB5xB,OAAwB7G,UAAUs3B,cAAcsB,YACnE,EAAKd,YAAYS,EAAkB39B,GAASu5B,kBAAmB,Y,wCAQrE,IAAI96B,EAAOD,EAAemB,aAAaP,OAAOC,SAASZ,MACnDA,EAAKI,MAA2B,EAAnBJ,EAAKI,KAAKY,QAErB,CAAC,WAAW,WAAW,OAAO,OAAO,QAAQ,SAAS,UAAU,WAAW,IAAIkS,SAASlT,EAAKI,KAAK,IACpGxB,KAAKmO,SAAS,CAAC+uB,kBAAmB97B,EAAKI,KAAK,KAE5CuD,QAAQC,IAAI,yBAA0B5D,EAAKI,KAAK,IAI3B,EAAnBJ,EAAKI,KAAKY,QAAchB,EAAKI,KAAK,IAAMxB,KAAK4O,MAAM6C,eACrDzR,KAAKmO,SAAS,CACZsD,cAAe9R,IAAOkK,UAAUzI,EAAKI,KAAK,IAAMJ,EAAKI,KAAK,GAAK,QAKnExB,KAAKmO,SAAS,CAAC+uB,kBAAmB,KAIhC97B,EAAKG,OAAOq0B,QACd51B,KAAKmO,SAAS,CAAE2sB,WAAY15B,EAAKG,OAAOq0B,SAEtCx0B,EAAKG,OAAOs5B,MACd76B,KAAKmO,SAAS,CAAE6sB,SAAU55B,EAAKG,OAAOs5B,OAIxC76B,KAAKmO,SAAS,CACZuvB,cAAet8B,EAAKG,OAAOmB,KAC3Bk+B,oBAAqBx/B,EAAKG,OAAO2+B,Q,mCAIxB9vB,GAEPA,EACFpQ,KAAK6/B,YAAY,GAAI,MAErB7/B,KAAK6/B,YAAY,gBAAiB,QAEpC7/B,KAAKmO,SAAS,CAACkvB,eAAgBjtB,M,0CAKblQ,EAAS2gC,GAC3B/Q,aAAa9vB,KAAKmgC,WAClBngC,KAAKogC,kBAAoBS,EAEvB7gC,KAAKmgC,UADHjgC,GAAW2gC,EACI9oB,WAAW8oB,EtDhUR,KsDkUH,O,sCAILA,GACd7gC,KAAK8gC,qBAAqBn9B,SAASo9B,OAAQF,K,8CAI3C7gC,KAAK8gC,qBAAqBn9B,SAASo9B,OAAQ/gC,KAAKogC,qB,kCAGtCx6B,EAAKmN,EAAO7B,EAAQmC,GAC9BrT,KAAKmO,SAAS,CAAC8T,UAAWrc,EAAKoc,WAAYjP,EAAOqoB,YAAalqB,EAAQmqB,gBAAiBhoB,M,yCAIvEsgB,EAAOC,GAAU,WAClC5zB,KAAKmO,SAAS,CACZotB,eAAe,EACf5H,MAAOA,EACPC,SAAUA,EACV0H,oBAAoB,IAEtBt7B,KAAK6/B,YAAY,GAAI,MAEjB7/B,KAAKoF,OAAO47B,cACdhhC,KAAKihC,QAAQtN,EAAOC,EAAU,CAACsC,KAAMl2B,KAAK4O,MAAMksB,WAAY1V,KAAMplB,KAAK4O,MAAMosB,WAE7Eh7B,KAAKoF,OAAO66B,UAAUt6B,MAAM,SAACC,GAE3B,EAAKuI,SAAS,CAACotB,eAAe,IAC9B,EAAKsE,YAAYj6B,EAAIC,QAAS,W,wCAOlC,IAAItE,EAASvB,KAAKoF,OAAO87B,gBACzBlhC,KAAKmO,SAAS,CACZ6a,cAAeznB,EAAO4/B,IAAM,KAAO5/B,EAAOse,MAAQte,EAAOse,MAAQ,QAAU,OAE7E7f,KAAKihC,QAAQjhC,KAAK4O,MAAM+kB,MAAO3zB,KAAK4O,MAAMglB,SAAU,CAACsC,KAAMl2B,KAAK4O,MAAMksB,WAAY1V,KAAMplB,KAAK4O,MAAMosB,a,mDAIxEoG,EAAKC,GAAM,WAGtC,GAFAC,cAActhC,KAAKuhC,oBAEfH,EAAM,EAERphC,KAAK6/B,mBAIP,GAAIwB,EAEFA,EAAK95B,KAAK,WAER,EAAKs4B,gBACJl6B,MAAM,SAACC,GACR,EAAKi6B,YAAYj6B,EAAIC,QAAS,aANlC,CATsC,IAoB/By6B,EAAqBtgC,KAAKC,MAAMiH,KAAhCo5B,kBACHr6B,EAAQm7B,EAAM,IAClBn7B,GAAgBA,EAChBjG,KAAKuhC,mBAAqBC,YAAY,WACpC,IAAMC,EAAoB,GAARx7B,EnD9YjB,SAAuBy7B,GAC5B,IAAMt4B,EAAMD,KAAKE,MAAMq4B,EAAU,IAC7BN,EAAMM,EAAU,GAEpB,OADAN,EAAMA,EAAM,GAAN,WAAeA,GAAQA,EAC7B,UAAUh4B,EAAV,YAAiBg4B,GmD0YmBO,CAAc17B,GAASA,EACvD,EAAK45B,YACHS,EAAkB39B,GAASw5B,oBAAqB,CAACuF,QAASD,IAC1D,OACA,WACEH,cAAc,EAAKC,oBACnB,EAAKn8B,OAAOw8B,aAEdtB,EAAkB39B,GAASy5B,gBAE7Bn2B,GAAS,GACR,Q,uCAIYL,GACf5F,KAAKmO,SAAS,CACZmE,WAAW,EACX2b,OAAO,EACPsP,qBAAqB,EACrBtb,UAAWrc,GAAOA,EAAIC,QAAUD,EAAIC,QAAU,eAC9Cmc,WAAYpc,GAAOA,EAAIC,QAAU,MAAQ,OACzC01B,eAAe,EACfqC,oBAAoB,EACpB5U,cAAe,oB,8BAIX2K,EAAOC,EAAUqC,GAAM,WAC7B,GAAIj2B,KAAKoF,OAAOy8B,kBAEd1gC,EAAeq3B,WAAW,QAF5B,CAMAvC,EAAOt2B,IAAOmiC,WAAW7L,GAEzB,IAAI8L,EAAU,KACVxI,EAAQv5B,KAAKoF,OAAO48B,eACpBrO,GAASC,GACX5zB,KAAKmO,SAAS,CAACylB,SAAU,OACzBmO,EAAU/hC,KAAKoF,OAAO68B,WAAWtO,EAAOC,EAAUqC,IACzCsD,IACTwI,EAAU/hC,KAAKoF,OAAO88B,WAAW3I,EAAMA,MAAOtD,IAG5C8L,EACFA,EAAQx6B,KAAK,SAACC,GACK,KAAbA,EAAKqzB,MAA6B,yBAAdrzB,EAAK2L,MAC3B,EAAKhF,SAAS,CAACmtB,oBAAoB,IAC/BrF,GACF,EAAK4J,YAAY,sBAAuB,QAE1C,EAAKsC,yBAAyB36B,EAAKjG,SAEnC,EAAK6gC,0BAENz8B,MAAM,SAACC,GAER,EAAKuI,SAAS,CACZotB,eAAe,EACfT,gBAAY5lB,EACZ8lB,cAAU9lB,EACVomB,oBAAoB,IAEtB,EAAKuE,YAAYj6B,EAAIC,QAAS,OAC9BotB,aAAaQ,WAAW,cACxBtyB,EAAeq3B,WAAW,OAK5Br3B,EAAeq3B,WAAW,IAC1Bx4B,KAAKmO,SAAS,CAACotB,eAAe,Q,+CAITh6B,GACvB,IAAIc,EAASlB,EAAemB,aAAaP,OAAOC,SAASZ,MACzDiB,EAAOb,KAAK,GAAK,OACjBa,EAAOd,OAAP,OAA0BA,EAAO00B,KAAK,GACtC90B,EAAeq3B,WAAWr3B,EAAeoB,eAAeF,EAAOb,KAAMa,EAAOd,W,8CAGtD,WACtBvB,KAAK6/B,YAAY,GAAI,MAGjB7M,GAAiBO,UAAU,mBAC7BP,GAAiBQ,UAAU,aAAcxzB,KAAKoF,OAAO48B,gBAGvD,IAAInN,EAAK70B,KAAKoF,OAAOmsB,aACrBsD,EAAGvX,WAAatd,KAAKqiC,aACrBxN,EAAGyN,gBAAkBtiC,KAAKuiC,kBAC1B1N,EAAGpX,cAAgBzd,KAAKwiC,gBACxBxiC,KAAKmO,SAAS,CACZmE,WAAW,EACXwoB,gBAAY5lB,EACZ8lB,cAAU9lB,EACV/C,SAAUnS,KAAKoF,OAAOq9B,qBAGxB5N,EAAGlG,UACDkG,EAAGlV,iBACD4O,eACAmU,WACA9iB,WACA+iB,WACA9iB,SACAla,MAAM,SAACC,GACP,EAAKR,OAAOw9B,aACZ3P,aAAaQ,WAAW,cACxB,EAAKoM,YAAYj6B,EAAIC,QAAS,OAC9B1E,EAAeq3B,WAAW,MACzBlJ,QAAQ,WACT,EAAKnhB,SAAS,CAACmtB,oBAAoB,MAEvCn6B,EAAeq3B,WAAWr3B,EAAe0hC,gBAAgB9gC,OAAOC,SAASZ,KAAM,e,mCAGpE0e,GACPA,GAAQA,EAAK7N,QACfjS,KAAKmO,SAAS,CACZgvB,eAAgBrd,EAAK7N,OAAOC,GAC5BkrB,gBAAiB1yB,GAAaoV,EAAK7N,OAAOtH,W,wCAM9BklB,EAAMyB,GACtB,GAAY,MAARzB,GAAwB,OAARA,EAClB7vB,KAAK8iC,mBACD9iC,KAAK4O,MAAM6C,eAAiB6f,EAAK7uB,OACnCzC,KAAKmO,SAAS,CAACovB,oBAA8B,MAAR1N,SAElC,GAAY,QAARA,EACT7vB,KAAK8iC,wBACA,GAAY,OAARjT,EAAe,CAExB,IAAMptB,EAAQzC,KAAKoF,OAAOC,SAASisB,EAAK7uB,OAClCsgC,EAAWtgC,GAASA,EAAMugC,aAG5Br/B,SAASo9B,QACP/gC,KAAK4O,MAAM8nB,gBAAkBqM,GAC/B/G,GAAUiH,OAEZjjC,KAAK8iC,oBAGI9iC,KAAK4O,MAAM6C,eAAiB6f,EAAK7uB,QACtCzC,KAAK4O,MAAM8nB,gBAAkBqM,GAC/B/G,GAAUiH,OAEZjjC,KAAK8iC,wBAEU,QAARjT,IAEQ,QAARA,GAA0B,SAARA,GAGvB7vB,KAAK4O,MAAM6C,eAAiB6f,EAAK7uB,OACnCzC,KAAKkjC,oBAAoB,MAG3BljC,KAAK8iC,oBACY,OAARjT,EAGL7vB,KAAK4O,MAAM6C,eAAiB6f,EAAK7uB,OACnCzC,KAAKmO,SAAS,CAACqvB,iBAAkBlM,EAAKthB,MAEvB,OAAR6f,GAEQ,OAARA,GAKT9qB,QAAQC,IAAI,qCAAuC6qB,EAAO,QAAUyB,EAAK7uB,U,sCAI7D0gC,GACdnjC,KAAK8iC,qB,yCAgCY,WACX/kB,EAAW,CACf2U,SAAU,IAGP1yB,KAAK4O,MAAMqf,QACdlQ,EAASkQ,OAAQ,GAGnBjuB,KAAKoF,OAAOmsB,aAAa3f,SAAS,SAAC9T,GACjCigB,EAAS2U,SAASvwB,KAAKrE,GACnB,EAAK8Q,MAAM6C,eAAiB3T,EAAE2E,QAChCsb,EAASwf,oBAAsBz/B,EAAEsS,OACjC2N,EAASyf,iBAAmB1/B,EAAEkS,OAIlC+N,EAASmE,mBAAqBma,GAAU+G,0BAA0BrlB,EAAS2U,SAAU1yB,KAAK4O,MAAMyqB,eAChGr5B,KAAKmO,SAAS4P,K,6BAITlT,GAAM,WACLpI,EAAQzC,KAAKoF,OAAOC,SAASwF,EAAKpI,OACpCA,EAAMitB,UAAU7kB,IAASlL,IAAOolB,qBAAuBla,EAAK8kB,MAAQ3vB,KAAK4O,MAAMuD,WACjF2d,aAAa9vB,KAAKqjC,eAClBrjC,KAAKqjC,cAAgBtrB,WAAW,WAC9B,EAAKsrB,mBAAgBnuB,EACrBzS,EAAM6gC,SAASz4B,EAAKrF,MtDjoBE,Q,mCsDuoBf,WACL+9B,EAAMvjC,KAAKoF,OAAOo+B,cACxBD,EAAI9lB,cAAgBzd,KAAKyjC,iBACrBF,EAAI7Y,eACN1qB,KAAKyjC,mBAELF,EAAI5U,UAAU4U,EAAI5jB,iBAAiB+jB,UAAU7jB,SAASla,MAAM,SAACC,GAC3D,EAAKi6B,YAAYj6B,EAAIC,QAAS,W,yCAMlC,IAAM02B,EAAgB,GAEtBv8B,KAAKoF,OAAOo+B,cAAc5xB,SAAS,SAACpS,GAClC+8B,EAAcp6B,KAAK3C,KAErBQ,KAAKmO,SAAS,CACZkrB,cAAekD,EACfra,mBAAoBma,GAAU+G,0BAA0BpjC,KAAK4O,MAAM8jB,SAAU6J,O,2CAO5D3lB,GAAO,WACpB2sB,EAAMvjC,KAAKoF,OAAOo+B,cACxBD,EAAII,QAAQ,CAAC7jB,KAAM,CAAC7N,OAAQ2E,KAASrP,KAAK,SAACC,GACzC,OAAO+7B,EAAI7jB,QAAQ6jB,EAAI5jB,iBAAiB+jB,UAAU7jB,WACjDla,MAAM,SAACC,GACR,EAAKi6B,YAAYj6B,EAAIC,QAAS,W,0CAKdP,EAAWs+B,EAAcxzB,EAAQJ,GAE/ChQ,KAAK4O,MAAMuf,gBAAkBnuB,KAAK4O,MAAMuf,eAAeC,YAAc9oB,GACvEtF,KAAKmO,SAAS,CACZggB,eAAgB,OAIhB7oB,GACFtF,KAAKmO,SAAS,CACZ8T,UAAW,GACXD,WAAY,KACZ2b,YAAa,aACbD,eAAe,IAGb19B,KAAK4O,MAAM6C,eAAiBnM,IAC9BtF,KAAKmO,SAAS,CACZovB,oBAAqBntB,EACrBotB,iBAAkBxtB,IAEpB7O,EAAeq3B,WAAWr3B,EAAe0iC,YAAY,GAAIv+B,OAI3DtF,KAAKmO,SAAS,CACZ8T,UAAW,GACXD,WAAY,KACZ2b,YAAa,YACbJ,qBAAqB,EACrBC,iBAAkB,KAClBE,eAAe,IAGjBv8B,EAAeq3B,WAAWr3B,EAAe0iC,YAAY,GAAI,U,+CAM3D7jC,KAAKmO,SAAS,CACZwvB,YAAa,cAEfx8B,EAAeq3B,WAAWr3B,EAAe0iC,YAAY9hC,OAAOC,SAASZ,KAAM,S,wCAK3DuV,EAAKorB,EAAS/d,GAAU,WAClCvhB,EAAQzC,KAAKoF,OAAOC,SAASrF,KAAK4O,MAAM6C,gBAE9CkF,EAAMlU,EAAMqhC,cAAcntB,GAAK,IAE3Bsa,UAAYjN,EAEXvhB,EAAMioB,iBAITqX,GAFEA,EADGA,GACOgC,QAAQC,WAEFz8B,KAAK,WAAQ,OAAO9E,EAAMksB,eAI5CoT,EADEA,GACQA,EAAQp8B,MAAM,SAACC,GACvB,EAAKi6B,YAAYj6B,EAAIC,QAAS,SAIlCpD,EAAMwhC,aAAattB,EAAKorB,GACrBx6B,KAAK,SAACC,GACL,GAAI/E,EAAMugC,aACR,OAAOvgC,EAAMe,SAAQ,KAGxBmC,MAAM,SAACC,GACN,EAAKi6B,YAAYj6B,EAAIC,QAAS,W,8CAIZP,EAAW4L,GAAQ,WACnCzO,EAAQzC,KAAKoF,OAAOC,SAASC,GAC/BqgB,EAAW,KACf,OAAQzU,GACN,IAAK,SAEH,IAAMtS,EAAO6D,EAAMkc,gBAAgBP,WACnCuH,EAAWljB,EAAMkhC,QAAQ,CAACnlB,IAAK,CAAC5f,KAAMA,KACf,OAAnB6D,EAAMib,YAGRiI,EAAWA,EAASpe,KAAK,SAACC,GACxB/E,EAAMkhC,QAAQ,CAACnlB,IAAK,CAACxY,KAAMV,EAAW1G,KAAMA,QAGhD,MACF,IAAK,SAEH+mB,EAAWljB,EAAMiF,WACjB,MACF,IAAK,QAGH,IAAMw8B,EAAKzhC,EAAMkc,gBAAgBwlB,WAAW,OAAO7lB,UACnDqH,EAAWljB,EAAMkhC,QAAQ,CAACnlB,IAAK,CAAC5f,KAAMslC,KAAM38B,KAAK,SAACC,GAChD,OAAO,EAAK07B,oBAAoB,QAElC,MACF,QACEn+B,QAAQC,IAAI,4BAA6B,IAAMkM,EAAS,MAG5C,MAAZyU,GACFA,EAAShgB,MAAM,SAACC,GACd,EAAKi6B,YAAYj6B,EAAIC,QAAS,W,yCAOlC1E,EAAeq3B,WAAWr3B,EAAe0hC,gBAAgB9gC,OAAOC,SAASZ,KAAM,e,8CAIzDgjC,EAAQC,EAAWC,EAASC,EAAOC,GAAO,WAChExkC,KAAKoF,OAAO66B,QAAQjgC,KAAK4O,MAAMqa,eAC5B1hB,KAAK,WACJ,OAAO,EAAKnC,OAAOq/B,mBAAmBL,EAAQC,EAC5C,CAACpyB,OAAQqyB,EAAS1oB,KAAM4oB,EAAOvO,KAAMt2B,IAAOmiC,WAAWyC,OACxDh9B,KAAK,SAACC,GACU,KAAbA,EAAKqzB,MAA4B,wBAAbrzB,EAAK2L,KAC3B,EAAKgvB,yBAAyB36B,EAAKjG,QAEnC,EAAK6gC,sBAAsB,KAE5Bz8B,MAAM,SAACC,GACR,EAAKi6B,YAAYj6B,EAAIC,QAAS,W,iDAIT+tB,EAAU9E,EAAKrQ,GAAQ,WAChD,GAAIqQ,GAAOrQ,EAAQ,CACjB,IAAMld,EAAS,GACXutB,IACFvtB,EAAO0Q,OAAS6c,GAEdrQ,IACFld,EAAOkd,OAASA,GAElBze,KAAKoF,OAAOmsB,aAAaoS,QAAQ,CAAC7jB,KAAMve,IAASoE,MAAM,SAACC,GACtD,EAAKi6B,YAAYj6B,EAAIC,QAAS,SAG9B+tB,GACF5zB,KAAKoF,OAAOs/B,mBAAmB,KAAM1kC,KAAKoF,OAAOu/B,kBAAmB/Q,GAAUjuB,MAAM,SAACC,GACnF,EAAKi6B,YAAYj6B,EAAIC,QAAS,W,qDAKL+V,GAAM,WACnC5b,KAAKoF,OAAOmsB,aAAaoS,QAAQ,CAAC/nB,KAAMA,IACrCjW,MAAM,SAACC,GACN,EAAKi6B,YAAYj6B,EAAIC,QAAS,W,uCAMlC1E,EAAeq3B,WAAWr3B,EAAe0hC,gBAAgB9gC,OAAOC,SAASZ,KACvEpB,KAAK4O,MAAMuD,SAAW,OAAS,e,2CAIduqB,GACnB,IAAIzT,EAAgByT,EAASzT,eAAiBjpB,KAAK4O,MAAMqa,cACrDmR,EAAYsC,EAAStC,WAAap6B,KAAK4O,MAAMwrB,UAC7Cp6B,KAAKoF,SACPpF,KAAKoF,OAAOy5B,kBAAe3pB,EAC3BlV,KAAKoF,OAAOw9B,cAEd5iC,KAAKoF,OAASi3B,GAAUqC,QAAQzV,EAAemR,GAC/Cp6B,KAAKoF,OAAOu5B,UAAY3+B,KAAK4+B,gBAC7B5+B,KAAKoF,OAAOy5B,aAAe7+B,KAAK8+B,iBAEhC9+B,KAAKmO,SAAS,CACZ8a,cAAeA,EACfmR,UAAWA,IAEbpH,GAAiBQ,UAAU,WAAY,CACrCvK,cAAeA,EACfmR,UAAWA,IAGbj5B,EAAeq3B,WAAWr3B,EAAe0hC,gBAAgB9gC,OAAOC,SAASZ,KAAM,O,0CAK/ED,EAAeq3B,WAAWr3B,EAAe0hC,gBAAgB9gC,OAAOC,SAASZ,KACvEpB,KAAK4O,MAAMuD,SAAW,UAAY,O,0CAIlB,WAGlBnS,KAAKi/B,OAAO2F,eAAe,WACzB,EAAKC,qBAGP7kC,KAAKi/B,OAAO6F,UAAU,SAACC,Q,sCAMTC,GAAS,WACnBA,EACGhlC,KAAK4O,MAAMquB,eAUdj9B,KAAKmO,SAAS,CAAC0oB,eAAe,IAC9B7D,GAAiBiS,aAAa,WAAY,CAACpO,eAAe,KAV1D72B,KAAKi/B,OAAOiG,oBAAoB39B,KAAK,WACnC,EAAKs9B,qBACJl/B,MAAM,SAACC,GACR,EAAKi6B,YAAYj6B,EAAIC,QAAS,OAC9B,EAAKsI,SAAS,CAAC0oB,eAAe,EAAOoG,cAAe,OACpDjK,GAAiBiS,aAAa,WAAY,CAACpO,eAAe,IAC1D9xB,QAAQC,IAAI,sCAAuCY,KAM9C5F,KAAK4O,MAAMquB,cACpBj9B,KAAKi/B,OAAOkG,YAAYnlC,KAAK4O,MAAMquB,eAAet3B,MAAM,SAACC,GACvDb,QAAQC,IAAI,0BAA2BY,KACtC0pB,QAAQ,WACT0D,GAAiBiS,aAAa,WAAY,CAACpO,eAAe,IAC1D5D,aAAaQ,WAAW,kBACxB,EAAKtlB,SAAS,CAAC0oB,eAAe,EAAOoG,cAAe,UAGtDj9B,KAAKmO,SAAS,CAAC0oB,eAAe,EAAOoG,cAAe,OACpDjK,GAAiBiS,aAAa,WAAY,CAACpO,eAAe,O,yCAI3C,WACjB72B,KAAKi/B,OAAOmG,WAAW79B,KAAK,SAAC89B,GACvBA,GAAkB,EAAKz2B,MAAMquB,gBAC/B,EAAK73B,OAAOu6B,eAAe0F,GAAgB,GAC3CrS,GAAiBQ,UAAU,iBAAkB6R,IAE/C,EAAKl3B,SAAS,CAAC8uB,cAAeoI,EAAgBxO,eAAe,IAC7D7D,GAAiBiS,aAAa,WAAY,CAACpO,eAAe,MACzDlxB,MAAM,SAACC,GACR,EAAKi6B,YAAYj6B,EAAIC,QAAS,OAC9Bd,QAAQC,IAAI,oCAAqCY,O,gDAI3Bo/B,GACxBhlC,KAAKmO,SAAS,CAACuoB,cAAesO,IAC9BhS,GAAiBiS,aAAa,WAAY,CACxClI,kBAAmBiI,M,oCAITpP,EAAQl3B,GAAO,WAChBsB,KAAKoF,OAAOmsB,aACpBoS,QAAQ,CAAC1N,KAAM,CAACC,KAAMN,EAAQlf,IAAKhY,KAASiH,MAAM,SAACC,GACpD,EAAKi6B,YAAYj6B,EAAIC,QAAS,W,uCAIjB+vB,EAAQl3B,GAAO,WACnBsB,KAAKoF,OAAOmsB,aACpB+T,cAAc1P,EAAQl3B,GAAOiH,MAAM,SAACC,GACrC,EAAKi6B,YAAYj6B,EAAIC,QAAS,W,wCAIhB+vB,EAAQjQ,GACxB3lB,KAAKmiC,yBAAyB,CAAClM,KAAM,CAACL,O,8CAKtC,IAAMvzB,EAASlB,EAAemB,aAAaP,OAAOC,SAASZ,MAC3DiB,EAAOb,KAAK,GAAKxB,KAAK4O,MAAMuD,SAAW,WAAa,GAChD9P,EAAOd,gBACFc,EAAOd,OAAOs5B,YACdx4B,EAAOd,OAAOq0B,cACdvzB,EAAOd,OAAO2+B,KAEvB/+B,EAAeq3B,WAAWr3B,EAAeoB,eAAeF,EAAOb,KAAMa,EAAOd,SAC5EvB,KAAKmO,SAAS,CAAC8T,UAAW,GAAID,WAAY,S,uCAK1C7gB,EAAeq3B,WAAWr3B,EAAe0hC,gBAAgB9gC,OAAOC,SAASZ,KAAM,a,4CAI3DmkC,EAAUzW,EAAKiK,EAAMnd,GAAM,WAEzCtW,EAAYigC,GAAYvlC,KAAKoF,OAAOogC,oBACpCjkC,EAAS,CACb6sB,WAAY9oB,GAEVigC,GAEFhkC,EAAOid,IAAM,CAAC5f,KAAMqC,GAEpBM,EAAOue,KAAO,CAACrB,OAAQ,CAACe,KAAMve,MAE9BM,EAAOue,KAAO,CAAC7N,OAAQ6c,EAAK/c,QAAS,CAAChB,QAASgoB,IAC/Cx3B,EAAOqa,KAAOA,GAEhB5b,KAAKmO,SAAS,CAACggB,eAAgB5sB,GAAS,WAAO,EAAK2hC,oBAAoB59B,O,4CAIpDmgC,EAASC,GACzB1lC,KAAK4O,MAAM6C,eAAiBg0B,GAAWA,GAAWC,GAIpD1lC,KAAKmO,SAAS,CAACsD,cAAei0B,GAAU,WACtCvkC,EAAeq3B,WAAWr3B,EAAe0iC,YAAY,GAAI6B,Q,+CAKtCpgC,EAAWwpB,EAAKiK,EAAM4M,GAAa,WACpDljC,EAAQzC,KAAKoF,OAAOC,SAASC,GACnC,GAAI7C,EAAO,CACT,IAAMlB,EAAS,GACXutB,IACFvtB,EAAO0Q,OAAS6c,GAEdiK,IACFx3B,EAAOwQ,QAAWgnB,IAASp5B,IAAOsgB,SAChCtgB,IAAOsgB,SAAW,CAAClP,QAASgoB,IAE5B4M,IACFpkC,EAAOkd,OAASknB,GAElBljC,EAAMkhC,QAAQ,CAAC7jB,KAAMve,IAASoE,MAAM,SAACC,GACnC,EAAKi6B,YAAYj6B,EAAIC,QAAS,Y,8CAKZP,EAAW1G,EAAMkQ,GAAK,WACtCrM,EAAQzC,KAAKoF,OAAOC,SAASC,GACnC,GAAI7C,EAAO,CACT,IAAMyhC,EAAKzhC,EAAMkc,gBAGf/f,EAFEkQ,GACFo1B,EAAG0B,YAAYhnC,GACRslC,EAAG9lB,aAEV8lB,EAAGC,WAAWvlC,GACPslC,EAAG5lB,WAEZ7b,EAAMkhC,QAAQ,CAACnlB,IAAK,CAACxY,KAAM8I,EAAKlQ,KAAMA,KAAQ+G,MAAM,SAACC,GACnD,EAAKi6B,YAAYj6B,EAAIC,QAAS,Y,wCAKlBP,EAAWsW,GAAM,WAC3BnZ,EAAQzC,KAAKoF,OAAOC,SAASC,GAC/B7C,GACFA,EAAMkhC,QAAQ,CAAC/nB,KAAMA,IAAOjW,MAAM,SAACC,GACjC,EAAKi6B,YAAYj6B,EAAIC,QAAS,W,qCAMlCyU,GAAc,GAGd2Y,aAAaQ,WAAW,cACxBR,aAAaQ,WAAW,kBACxBR,aAAaQ,WAAW,YACpBzzB,KAAK4O,MAAMquB,eACbj9B,KAAKi/B,OAAOkG,YAAYnlC,KAAK4O,MAAMquB,eAGjCj9B,KAAKoF,SACPpF,KAAKoF,OAAOy5B,kBAAe3pB,EAC3BlV,KAAKoF,OAAOw9B,cAEd5iC,KAAKmO,SAASnO,KAAK6lC,iBACnB7lC,KAAKoF,OAASi3B,GAAUqC,QAAQ1+B,KAAK4O,MAAMqa,cAAejpB,KAAK4O,MAAMwrB,WACrEp6B,KAAKoF,OAAOu5B,UAAY3+B,KAAK4+B,gBAC7B5+B,KAAKoF,OAAOy5B,aAAe7+B,KAAK8+B,iBAChC39B,EAAeq3B,WAAW,M,kDAGAlzB,GAAW,WAC/B7C,EAAQzC,KAAKoF,OAAOC,SAASC,GAC9B7C,GAKLA,EAAMgD,gBAAe,GAAME,MAAM,SAACC,GAChC,EAAKi6B,YAAYj6B,EAAIC,QAAS,W,8CAIVP,GAAW,WAC3B7C,EAAQzC,KAAKoF,OAAOC,SAASC,GAC9B7C,GAILA,EAAM6qB,OAAM,GAAM/lB,KAAK,SAACC,GAEtBrG,EAAeq3B,WAAWr3B,EAAe0iC,YAAY9hC,OAAOC,SAASZ,KAAM,OAC1EuE,MAAM,SAACC,GACR,EAAKi6B,YAAYj6B,EAAIC,QAAS,W,8CAIVP,GAAW,WAC3B7C,EAAQzC,KAAKoF,OAAOC,SAASC,GAC9B7C,GAILA,EAAMsD,WAAW,KAAM,OAAOwB,KAAK,SAACC,GAElCrG,EAAeq3B,WAAWr3B,EAAe0iC,YAAY9hC,OAAOC,SAASZ,KAAM,OAC1EuE,MAAM,SAACC,GACR,EAAKi6B,YAAYj6B,EAAIC,QAAS,W,wCAIhBP,GAAW,WACrB7C,EAAQzC,KAAKoF,OAAOC,SAASC,GAC9B7C,IAKLzC,KAAKoF,OAAO0gC,QAAQnmC,IAAOomC,UAAWpmC,IAAOsmB,OAAOiK,WAAW,KAAM,CACnE,OAAU,SACV,OAAU5qB,KAIZ7C,EAAMsD,WAAW,KAAM,OAAOwB,KAAK,SAACC,GAElCrG,EAAeq3B,WAAWr3B,EAAe0iC,YAAY9hC,OAAOC,SAASZ,KAAM,OAC1EuE,MAAM,SAACC,GACR,EAAKi6B,YAAYj6B,EAAIC,QAAS,Y,4CAIZtE,EAAQsgB,GAC5B7hB,KAAKmO,SAAS,CACZyvB,oBAAoB,EACpBE,mBAAoB,CAACl3B,EAAGrF,EAAOqF,EAAGG,EAAGxF,EAAOwF,GAC5Cg3B,kBAAmBx8B,EACnBy8B,iBAAkBnc,GAAa7hB,KAAKgmC,wBAAwBzkC,EAAO+D,WACnEu4B,kBAAmBj+B,IAASqE,YAAYjE,MAAMmoB,4B,8CAI1B7iB,GACtB,IAAM7C,EAAQzC,KAAKoF,OAAOC,SAASC,GAC5B2B,EAAiBjH,KAAKC,MAAMiH,KAA5BD,cAEH+X,GAAQ,EAAOinB,GAAU,EAAOC,GAAe,EAAOC,GAAa,EAAOrsB,GAAU,EAAOipB,GAAW,EAC1G,GAAItgC,EAAO,CACT0jC,EAAa1jC,EAAMioB,eACnBqY,EAAWtgC,EAAMugC,aAEjB,IAAMhzB,EAAMvN,EAAMkc,gBACd3O,IACFgP,EAAQhP,EAAIS,UACZw1B,GAAWj2B,EAAIU,WACfw1B,GAAgBl2B,EAAIU,SAAS,QAC7BoJ,EAAU9J,EAAI+O,aAIlB,MAAO,CACLonB,EAAa,CAAC/lC,MAAO6G,EAAc,CAACxG,GAAI,mBAAoBoE,QAAS7E,KAAKomC,oBAAsB,KAChGD,EAAa,iBAAmB,KAChCA,GAAcrsB,EAAU,sBAAwB,KAChDkF,EAASinB,EAAU,KAAO,eAAkB,aAC5CC,EAAe,gBAAkB,cAChCnD,EAA6B,KAAlB,gBACZ,kB,8CAKF/iC,KAAKmO,SAAS,CACZyvB,oBAAoB,EACpBE,mBAAoB,KACpBC,kBAAmB,KACnBF,kBAAmB,S,8CAIC3sB,EAAQ6wB,EAASxgC,GAAQ,WACjC,iBAAV2P,GACE6wB,GAAWxgC,EAAO+D,WAAa/D,EAAO+D,WAAatF,KAAK4O,MAAM6C,eAChEswB,EAAQx6B,KAAK,WACX,EAAK27B,oBAAoB,U,sCAMjB9iC,EAAOC,EAASK,EAAWC,EAASL,EAAUE,GAC5DR,KAAKmO,SAAS,CACZ8vB,cAAc,EACdC,YAAa,CACX99B,MAAOA,EACPC,QAASA,EACTK,UAAWA,EACXC,QAASA,EACTL,SAAUA,EACVE,OAAQA,O,2CAMZW,EAAeq3B,WAAWr3B,EAAes3B,YAAY12B,OAAOC,SAASZ,KAAM,QAAQ,IACnFpB,KAAKmO,SAAS,CAACuvB,eAAe,M,2CAI9Bv8B,EAAeq3B,WAAWr3B,EAAe03B,eAAe92B,OAAOC,SAASZ,KAAM,SAC9EpB,KAAKmO,SAAS,CAACuvB,eAAe,M,gDAGNp4B,EAAW0R,EAAOrC,GAAS,WACnD,GAAKrP,EAAL,CAIA,IAAM7C,EAAQzC,KAAKoF,OAAOC,SAASC,GAC9B7C,IAIDuU,GAAwB,EAAfA,EAAM5U,QACjB4U,EAAM7Q,IAAI,SAAC2I,GACTrM,EAAM4jC,OAAOv3B,EAAK,MAAMnJ,MAAM,SAACC,GAC7B,EAAKi6B,YAAYj6B,EAAIC,QAAS,WAKhC8O,GAA4B,EAAjBA,EAAQvS,QACrBuS,EAAQxO,IAAI,SAAC2I,GACXrM,EAAMkF,gBAAgBmH,GAAKnJ,MAAM,SAACC,GAChC,EAAKi6B,YAAYj6B,EAAIC,QAAS,e,uDAMLowB,EAAM4E,GAAM,WACvC76B,KAAKoF,OAAOy8B,kBACH7hC,KAAKoF,OAAOmsB,aACpBoS,QAAQ,CAAC1N,KAAM,CAACC,KAAMD,EAAM7Q,KAAMyV,KAClCtzB,KAAK,WACJpG,EAAeq3B,WAAW,MAE3B7yB,MAAM,SAACC,GACN,EAAKi6B,YAAYj6B,EAAIC,QAAS,UAGlC7F,KAAKmO,SAAS,CAAC2sB,WAAY7E,EAAM+E,SAAUH,IAC3C76B,KAAKihC,QAAQ,KAAM,KAAM,CAAC/K,KAAMD,EAAM7Q,KAAMyV,O,iDAIrBjF,EAAQl3B,GAAO,WAExCsB,KAAKoF,OAAO66B,UACT14B,KAAK,WACJ,OAAO,EAAKnC,OAAOkhC,uBAAuB,QAAS1Q,EAAQl3B,KAE5DiH,MAAM,SAACC,GAEN,EAAKi6B,YAAYj6B,EAAIC,QAAS,W,0CAIhB2zB,EAAQ+M,EAAahN,GAAO,YAC9CA,EjD1kCG,SAAwBiN,GAC7B,GAAIA,EAAK,CACPA,EAAMA,EAAIltB,QAAQ,KAAM,KAAKA,QAAQ,KAAM,KAC3C,IACEktB,EAAMC,KAAKC,KAAKF,IAChB,MAAM5gC,GACNb,QAAQC,IAAI,qCAAsCY,GAClD4gC,EAAM,MAGV,OAAOA,EiDgkCGG,CAAepN,IAIrBv5B,KAAKoF,OAAO66B,UACT14B,KAAK,WACJ,OAAO,EAAKnC,OAAOs/B,mBAAmB,KAAM,KAAM6B,EAAa,CAAChN,MAAOA,MAExE5zB,MAAM,SAACC,GAEN,EAAKi6B,YAAYj6B,EAAIC,QAAS,SARlC7F,KAAK6/B,YAAY,yBAA0B,S,+BAatC,WACP,OACE,yBAAKp/B,GAAG,iBACLT,KAAK4O,MAAMgvB,mBACV,kBAAC,EAAD,CACEx4B,OAAQpF,KAAKoF,OACbqB,OAAQzG,KAAK4O,MAAMivB,kBACnBl3B,QAAS3G,KAAK4O,MAAMkvB,mBACpBv8B,OAAQvB,KAAK4O,MAAMmvB,kBACnBv5B,MAAOxE,KAAK4O,MAAMovB,iBAClB15B,KAAMtE,KAAK4mC,sBACXz/B,YAAanH,KAAK6mC,gBAClBjiC,SAAU5E,KAAK8mC,wBACfr/B,eAAgB,SAACnC,GACXA,GAAa,EAAKsJ,MAAM6C,eAC1B,EAAKyxB,oBAAoB,OAG7Bp+B,QAAS9E,KAAK6/B,cAEhB,KAEF,kBAAC,EAAD,CACE3/B,QAASF,KAAK4O,MAAMqvB,aACpB79B,MAAOJ,KAAK4O,MAAMsvB,YAAY99B,MAC9BC,QAASL,KAAK4O,MAAMsvB,YAAY79B,QAChCC,SAAUN,KAAK4O,MAAMsvB,YAAY59B,SAAY,WAAQ,EAAK6N,SAAS,CAAC8vB,cAAc,KAAc,KAChGz9B,OAAQR,KAAK4O,MAAMsvB,YAAY19B,OAC/BE,UAAW,WAAQ,EAAKyN,SAAS,CAAC8vB,cAAc,IAAS,EAAKrvB,MAAMsvB,YAAYx9B,aAChFC,QAASX,KAAK4O,MAAMsvB,YAAYv9B,UAElC,kBAAC,GAAD,CACEyE,OAAQpF,KAAKoF,OACbkN,UAAWtS,KAAK4O,MAAM0D,UACtByP,cAAe/hB,KAAK4O,MAAMmT,cAC1BgH,SAAU/oB,KAAK4O,MAAMmT,eAA4C,cAA3B/hB,KAAK4O,MAAM+uB,YACjD/uB,MAAO5O,KAAK4O,MAAMsuB,kBAClB98B,MAAOJ,KAAK4O,MAAMuuB,eAClBxzB,OAAQ3J,KAAK4O,MAAMwuB,gBACnBzJ,MAAO3zB,KAAK4O,MAAM+kB,MAClBxhB,SAAUnS,KAAK4O,MAAMuD,SACrBopB,cAAev7B,KAAK4O,MAAM2sB,cAC1BD,mBAAoBt7B,KAAK4O,MAAM0sB,mBAE/BrZ,UAAWjiB,KAAK4O,MAAMqT,UACtBD,WAAYhiB,KAAK4O,MAAMoT,WACvBoZ,YAAap7B,KAAK4O,MAAMwsB,YACxBC,gBAAiBr7B,KAAK4O,MAAMysB,gBAE5B5pB,cAAezR,KAAK4O,MAAM6C,cAC1BihB,SAAU1yB,KAAK4O,MAAM8jB,SACrBoI,WAAY96B,KAAK4O,MAAMksB,WACvBE,SAAUh7B,KAAK4O,MAAMosB,SAErBZ,UAAWp6B,KAAK4O,MAAMwrB,UACtB1D,cAAe12B,KAAK4O,MAAM8nB,cAC1BG,cAAe72B,KAAK4O,MAAMioB,cAC1BD,qBAAsB52B,KAAK4O,MAAMgoB,qBACjC3N,cAAejpB,KAAK4O,MAAMqa,cAC1BwS,iBAAkBz7B,KAAK+mC,qBAEvB3U,SAAUpyB,KAAKgnC,iBACf9U,WAAYlyB,KAAKinC,eACjB/L,eAAgBl7B,KAAKknC,mBACrBlT,gBAAiBh0B,KAAKmnC,wBACtB/R,gBAAiBp1B,KAAKonC,2BACtB1L,oBAAqB17B,KAAKqnC,+BAC1B9R,0BAA2Bv1B,KAAK4/B,gBAChCtK,sBAAuBt1B,KAAKsnC,0BAC5BvR,UAAW/1B,KAAKunC,cAChBlR,aAAcr2B,KAAKwnC,iBACnBpR,cAAep2B,KAAKynC,kBACpBl1B,gBAAiBvS,KAAKkjC,oBACtBpK,cAAe94B,KAAK0nC,sBACpBzV,WAAYjyB,KAAK2nC,eACjB1Q,SAAUj3B,KAAK4nC,aACf/0B,SAAU7S,KAAK6nC,sBACf/iC,QAAS9E,KAAK6/B,YACdlE,sBAAuB37B,KAAK8nC,iCAC5BlM,uBAAwB57B,KAAK+nC,2BAC7BlM,gBAAiB77B,KAAKgoC,oBACtBlV,cAAe9yB,KAAKioC,kBAEpB7mB,WAAYphB,KAAKkoC,WACjB7O,cAAer5B,KAAK4O,MAAMyqB,cAC1BrB,iBAAkBh4B,KAAKo5B,qBAEvBnpB,gBAAiBjQ,KAAKmoC,wBAExB,kBAAC,GAAD,CACE/iC,OAAQpF,KAAKoF,OACbkN,UAAWtS,KAAK4O,MAAM0D,UACtB2b,MAAOjuB,KAAK4O,MAAMqf,MAClB7d,OAAQpQ,KAAK4O,MAAM2uB,oBACnBvtB,IAAKhQ,KAAK4O,MAAM4uB,iBAChBzb,cAAe/hB,KAAK4O,MAAMmT,cAC1BqF,cAAepnB,KAAK4O,MAAMwY,cAC1BgG,eAAgBptB,KAAK4O,MAAMwe,eAC3BrE,SAAU/oB,KAAK4O,MAAMmT,gBACS,eAA3B/hB,KAAK4O,MAAM+uB,aAAgC39B,KAAK4O,MAAM8uB,eACzDj7B,MAAOzC,KAAK4O,MAAM6C,cAClBU,SAAUnS,KAAK4O,MAAMuD,SACrB6W,cAAehpB,KAAK4O,MAAMoa,cAC1BC,cAAejpB,KAAK4O,MAAMqa,cAE1BhH,UAAWjiB,KAAK4O,MAAMqT,UACtBD,WAAYhiB,KAAK4O,MAAMoT,WACvBoZ,YAAap7B,KAAK4O,MAAMwsB,YACxBC,gBAAiBr7B,KAAK4O,MAAMysB,gBAE5BlN,eAAgBnuB,KAAK4O,MAAMuf,eAE3BwD,mBAAoB3xB,KAAKooC,uBACzB5a,OAAQxtB,KAAKqoC,OACbvjC,QAAS9E,KAAK6/B,YACdjR,kBAAmB5uB,KAAKsoC,sBACxB/a,iBAAkBvtB,KAAKuoC,gBACvBt4B,gBAAiBjQ,KAAKmoC,sBACtBhoB,oBAAqBngB,KAAKwoC,wBAC1BjY,UAAWvwB,KAAKyoC,wBAChB3e,YAAa9pB,KAAK0oC,oBAEnB1oC,KAAK4O,MAAM8uB,cACV,kBAAC,GAAD,CACEt4B,OAAQpF,KAAKoF,OACbkN,UAAWtS,KAAK4O,MAAM0D,UACtByP,cAAe/hB,KAAK4O,MAAMmT,cAC1Btf,MAAOzC,KAAK4O,MAAM6C,cAClByQ,mBAAoBliB,KAAK4O,MAAMsT,mBAC/B/P,SAAUnS,KAAK4O,MAAMuD,SAErB8P,UAAWjiB,KAAK4O,MAAMqT,UACtBD,WAAYhiB,KAAK4O,MAAMoT,WACvBoZ,YAAap7B,KAAK4O,MAAMwsB,YACxBC,gBAAiBr7B,KAAK4O,MAAMysB,gBAE5Brb,kBAAmBhgB,KAAK2oC,yBACxB91B,SAAU7S,KAAK4oC,mBACfzhC,YAAanH,KAAK6mC,gBAClB1mB,oBAAqBngB,KAAKwoC,wBAC1BnnB,sBAAuBrhB,KAAKoiB,0BAC5Bd,iBAAkBthB,KAAK6oC,4BACvBtnB,aAAcvhB,KAAK8oC,wBACnBtnB,aAAcxhB,KAAK+oC,wBACnBtnB,cAAezhB,KAAKgpC,kBACpBC,YAAajpC,KAAKkpC,yBAClBtnB,kBAAmB5hB,KAAK8iB,kBACxB1B,WAAYphB,KAAKkoC,WACjBpjC,QAAS9E,KAAK6/B,YAEd5vB,gBAAiBjQ,KAAKmoC,wBAGxB,W,4CAj5CR,YAAYloC,GAAO,a,4FAAA,WACjB,E,yEAAA,uBAAMA,KAED2O,MAAQ,EAAKi3B,gBAElB,EAAK1H,aAAe,EAAKA,aAAal/B,KAAlB,OACpB,EAAKo/B,gBAAkB,EAAKA,gBAAgBp/B,KAArB,OACvB,EAAKm/B,aAAe,EAAKA,aAAan/B,KAAlB,OACpB,EAAKugC,kBAAoB,EAAKA,kBAAkBvgC,KAAvB,OACzB,EAAK6hC,oBAAsB,EAAKA,oBAAoB7hC,KAAzB,OAC3B,EAAKspC,gBAAkB,EAAKA,gBAAgBtpC,KAArB,OACvB,EAAKq/B,sBAAwB,EAAKA,sBAAsBr/B,KAA3B,OAC7B,EAAK4gC,YAAc,EAAKA,YAAY5gC,KAAjB,OACnB,EAAKioC,mBAAqB,EAAKA,mBAAmBjoC,KAAxB,OAC1B,EAAK2/B,gBAAkB,EAAKA,gBAAgB3/B,KAArB,OACvB,EAAK+/B,6BAA+B,EAAKA,6BAA6B//B,KAAlC,OACpC,EAAKgiC,QAAU,EAAKA,QAAQhiC,KAAb,OACf,EAAKkjC,yBAA2B,EAAKA,yBAAyBljC,KAA9B,OAChC,EAAKmjC,sBAAwB,EAAKA,sBAAsBnjC,KAA3B,OAC7B,EAAK6/B,iBAAmB,EAAKA,iBAAiB7/B,KAAtB,OACxB,EAAKojC,aAAe,EAAKA,aAAapjC,KAAlB,OACpB,EAAKsjC,kBAAoB,EAAKA,kBAAkBtjC,KAAvB,OACzB,EAAKujC,gBAAkB,EAAKA,gBAAgBvjC,KAArB,OACvB,EAAK6jC,iBAAmB,EAAKA,iBAAiB7jC,KAAtB,OACxB,EAAKopC,OAAS,EAAKA,OAAOppC,KAAZ,OACd,EAAKipC,WAAa,EAAKA,WAAWjpC,KAAhB,OAClB,EAAKwkC,iBAAmB,EAAKA,iBAAiBxkC,KAAtB,OACxB,EAAKm6B,qBAAuB,EAAKA,qBAAqBn6B,KAA1B,OAC5B,EAAKikC,oBAAsB,EAAKA,oBAAoBjkC,KAAzB,OAC3B,EAAKmpC,uBAAyB,EAAKA,uBAAuBnpC,KAA5B,OAC9B,EAAKypC,kBAAoB,EAAKA,kBAAkBzpC,KAAvB,OACzB,EAAKwpC,wBAA0B,EAAKA,wBAAwBxpC,KAA7B,OAC/B,EAAK+nC,iBAAmB,EAAKA,iBAAiB/nC,KAAtB,OACxB,EAAKkoC,wBAA0B,EAAKA,wBAAwBloC,KAA7B,OAC/B,EAAKmoC,2BAA6B,EAAKA,2BAA2BnoC,KAAhC,OAClC,EAAKooC,+BAAiC,EAAKA,+BAA+BpoC,KAApC,OACtC,EAAKgoC,eAAiB,EAAKA,eAAehoC,KAApB,OACtB,EAAK8nC,qBAAuB,EAAKA,qBAAqB9nC,KAA1B,OAC5B,EAAKgpC,kBAAoB,EAAKA,kBAAkBhpC,KAAvB,OACzB,EAAKqoC,0BAA4B,EAAKA,0BAA0BroC,KAA/B,OACjC,EAAKsoC,cAAgB,EAAKA,cAActoC,KAAnB,OACrB,EAAKuoC,iBAAmB,EAAKA,iBAAiBvoC,KAAtB,OACxB,EAAKwoC,kBAAoB,EAAKA,kBAAkBxoC,KAAvB,OACzB,EAAKygC,kBAAoB,EAAKA,kBAAkBzgC,KAAvB,OACzB,EAAK2gC,gBAAkB,EAAKA,gBAAgB3gC,KAArB,OACvB,EAAK4lC,iBAAmB,EAAKA,iBAAiB5lC,KAAtB,OACxB,EAAK4oC,sBAAwB,EAAKA,sBAAsB5oC,KAA3B,OAC7B,EAAK0oC,eAAiB,EAAKA,eAAe1oC,KAApB,OACtB,EAAKyoC,sBAAwB,EAAKA,sBAAsBzoC,KAA3B,OAC7B,EAAKqpC,sBAAwB,EAAKA,sBAAsBrpC,KAA3B,OAC7B,EAAK0pC,yBAA2B,EAAKA,yBAAyB1pC,KAA9B,OAChC,EAAKupC,wBAA0B,EAAKA,wBAAwBvpC,KAA7B,OAC/B,EAAK6jB,kBAAoB,EAAKA,kBAAkB7jB,KAAvB,OACzB,EAAK2oC,aAAe,EAAKA,aAAa3oC,KAAlB,OACpB,EAAK4pC,4BAA8B,EAAKA,4BAA4B5pC,KAAjC,OACnC,EAAK6pC,wBAA0B,EAAKA,wBAAwB7pC,KAA7B,OAC/B,EAAK8pC,wBAA0B,EAAKA,wBAAwB9pC,KAA7B,OAC/B,EAAK+pC,kBAAoB,EAAKA,kBAAkB/pC,KAAvB,OACzB,EAAKkpC,sBAAwB,EAAKA,sBAAsBlpC,KAA3B,OAC7B,EAAK+mC,wBAA0B,EAAKA,wBAAwB/mC,KAA7B,OAC/B,EAAK2nC,sBAAwB,EAAKA,sBAAsB3nC,KAA3B,OAC7B,EAAK4nC,gBAAkB,EAAKA,gBAAgB5nC,KAArB,OACvB,EAAKmnC,mBAAqB,EAAKA,mBAAmBnnC,KAAxB,OAC1B,EAAK2pC,mBAAqB,EAAKA,mBAAmB3pC,KAAxB,OAC1B,EAAKmjB,0BAA4B,EAAKA,0BAA0BnjB,KAA/B,OACjC,EAAK6oC,iCAAmC,EAAKA,iCAAiC7oC,KAAtC,OACxC,EAAK8oC,2BAA6B,EAAKA,2BAA2B9oC,KAAhC,OAClC,EAAK+oC,oBAAsB,EAAKA,oBAAoB/oC,KAAzB,OAC3B,EAAK6nC,wBAA0B,EAAKA,wBAAwB7nC,KAA7B,OApEd,EAw5CN2I,4BAAWy0B,IC17ClB96B,GAAWJ,EAAemB,aAAaP,OAAOC,SAASZ,MAAvDG,OACF0G,GAAY1G,IAAUA,GAAO4nC,IAChCphC,UAAUqhC,WAAarhC,UAAUqhC,UAAU,IAC5CrhC,UAAUE,UACVF,UAAUC,cACV,KAGIqhC,GAAephC,GAAS+J,cAAc1Q,MAAM,QAAQ,GAGpDqB,GACJ2mC,EAAYrhC,KACZqhC,EAAYD,KACZC,EAAYC,GAEd3pC,IAAS4pC,OACP,kBAAC,eAAD,CAAc1hC,OAAQG,GAAUtF,SAAUA,GAAU8mC,cAAehqC,IAAM62B,UACvE,kBAAC,GAAD,OAEF3yB,SAAS6W,eAAe","file":"index.prod.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/umd/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","module.exports = React;","module.exports = ReactIntl;","module.exports = Tinode;","module.exports = ReactDOM;","module.exports = firebase;","module.exports = firebase[\"messaging\"];","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Alert extends React.PureComponent {\n  render() {\n    return this.props.visible ?\n      <div className=\"alert-container\">\n        <div className=\"alert\">\n          <div className=\"title\">{this.props.title}</div>\n          <div className=\"content\">{this.props.content}</div>\n          <div className=\"dialog-buttons\">\n            {this.props.onReject ?\n              <button className=\"outline\" onClick={this.props.onReject}>\n                {this.props.reject || <FormattedMessage id=\"button_cancel\" />}\n              </button>\n              :\n              null\n            }\n            <button className=\"blue\" onClick={this.props.onConfirm}>\n              {this.props.confirm || <FormattedMessage id=\"button_ok\" />}\n            </button>\n          </div>\n        </div>\n      </div>\n    :\n    null;\n  }\n};\n","// This is a generated file. Don't edit.\n\nexport const PACKAGE_VERSION = \"0.16.2\";\n","import { PACKAGE_VERSION } from './version.js';\n\n// Name of this application, used in the User-Agent.\nexport const APP_NAME = 'TinodeWeb/' + (PACKAGE_VERSION || '0.16');\n\n// API key. Use https://github.com/tinode/chat/tree/master/keygen to generate your own\nexport const API_KEY = 'AQEAAAABAAD_rAp4DJh05a1HAwFT3A6K';\n\n// The array of possible hosts to connect to.\nexport const KNOWN_HOSTS = {hosted: 'web.tinode.co', local: 'localhost:6060'};\n\n// Default host name and port to connect to.\nexport const DEFAULT_HOST = KNOWN_HOSTS.hosted;\n\n// Enable console logging.\nexport const LOGGING_ENABLED = true;\n\n// Minimum time between two keypress notifications, milliseconds.\nexport const KEYPRESS_DELAY = 3*1000;\n// Delay before sending a {note} for reciving a message, milliseconds.\nexport const RECEIVED_DELAY = 500;\n// Delay before sending a read notification, milliseconds.\nexport const READ_DELAY = 1000;\n\n// The shortest allowed tag length. Matches the value on the server.\nexport const MIN_TAG_LENGTH = 4;\n\n// Access mode for P2P subscriptions initiated by the current user.\nexport const DEFAULT_P2P_ACCESS_MODE = 'JRWPS';\n// Access mode for new group topics created by the current user.\nexport const NEW_GRP_ACCESS_MODE = 'JRWPSAO';\n\n// Access mode for no access.\nexport const NO_ACCESS_MODE = 'N';\n\n// Mediaquery breakpoint between desktop and mobile, in px. Should match the value\n// in @media (max-size: 640px) in base.css\nexport const MEDIA_BREAKPOINT = 640;\n// Size of css 'rem' unit in pixels. Default 1rem = 10pt = 13px.\nexport const REM_SIZE = 13;\n\n// Size of the avatar image: When an avatar image is uploaded, it's resized to\n// a square of this size.\nexport const AVATAR_SIZE = 128;\n\n// Size of the broken_image shown in MessagesView\nexport const BROKEN_IMAGE_SIZE = 32;\n\n// Number of chat messages to fetch in one call.\nexport const MESSAGES_PAGE = 24;\n\n// Maximum in-band (included directly into the message) attachment size which fits into\n// a message of 256K in size, assuming base64 encoding and 1024 bytes of overhead.\n// This is size of an object *before* base64 encoding is applied.\n// Increase this limit to a greater value in production, if desired. Also increase\n// max_message_size in server config.\n//  MAX_INBAND_ATTACHMENT_SIZE = base64DecodedLen(max_message_size - overhead);\nexport const MAX_INBAND_ATTACHMENT_SIZE = 195840;\n\n// Absolute maximum attachment size to be used with the server = 8MB. Increase to\n// something like 100MB in production.\nexport const MAX_EXTERN_ATTACHMENT_SIZE = 1 << 23;\n\n// Maximum allowed linear dimension of an inline image in pixels. You may want\n// to adjust it to 1600 or 2400 for production.\nexport const MAX_IMAGE_DIM = 768;\n\n// Maximum number of online users to be shown in a topic title bar. Others will be\n// hidden under \"+X more\"\nexport const MAX_ONLINE_IN_TOPIC = 4;\n\n// Maximum length of user name, topic title, and private comment.\nexport const MAX_TITLE_LENGTH = 60;\n\n// Link for \"Contact Us\".\nexport const LINK_CONTACT_US = 'email:info@tinode.co';\n\n// Link to Privacy Policy.\nexport const LINK_PRIVACY_POLICY = 'https://tinode.co/privacy.html';\n\n// Link to Terms of Service.\nexport const LINK_TERMS_OF_SERVICE = 'https://tinode.co/terms.html';\n","// Utility class for hash navigation.\n\n// Parse hash as in http://www.example.com/path#hash as if it were\n// path and arguments.\nexport default class HashNavigation {\n  static parseUrlHash(hash) {\n    // Split path from args, path -> parts[0], args->path[1]\n    let parts = hash.split('?', 2);\n    let params = {};\n    let path = [];\n    if (parts[0]) {\n      path = parts[0].substr(1).split('/');\n    }\n    if (parts[1]) {\n      parts[1].split('&').forEach(function(part) {\n        let item = part.split('=');\n        if (item[0]) {\n          params[decodeURIComponent(item[0])] = decodeURIComponent(item[1]);\n        }\n      });\n    }\n    return {path: path, params: params};\n  }\n\n  static navigateTo(url) {\n    window.location.hash = url;\n  }\n\n  static composeUrlHash(path, params) {\n    var url = path.join('/');\n    var args = [];\n    for (var key in params) {\n      if (params.hasOwnProperty(key)) {\n        args.push(key + '=' + params[key]);\n      }\n    }\n    if (args.length > 0) {\n      url += '?' + args.join('&');\n    }\n    return url;\n  }\n\n  static addUrlParam(hash, key, value) {\n    var parsed = this.parseUrlHash(hash);\n    parsed.params[key] = value;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static removeUrlParam(hash, key) {\n    var parsed = this.parseUrlHash(hash);\n    delete parsed.params[key];\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlSidePanel(hash, sidepanel) {\n    var parsed = this.parseUrlHash(hash);\n    parsed.path[0] = sidepanel;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlTopic(hash, topic) {\n    var parsed = this.parseUrlHash(hash);\n    parsed.path[1] = topic;\n    // Close InfoView on topic change.\n    delete parsed.params.info;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n}\n","// Context Menu: popup/dropdown menu.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { injectIntl, defineMessages } from 'react-intl';\n\nimport { REM_SIZE } from '../config.js';\nimport HashNavigation from '../lib/navigation.js';\n\nconst messages = defineMessages({\n  info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  },\n  clear_messages: {\n    id: 'menu_item_clear_messages',\n    defaultMessage: 'Clear messages',\n    description: 'Delete all messages'\n  },\n  clear_for_all: {\n    id: 'menu_item_clear_messages_for_all',\n    defaultMessage: 'Clear for All',\n    description: 'Delete all message(s) for all members'\n  },\n  'delete': {\n    id: 'menu_item_delete',\n    defaultMessage: 'Delete',\n    description: 'Delete selected messages'\n  },\n  delete_for_all: {\n    id: 'menu_item_delete_for_all',\n    defaultMessage: 'Delete for All',\n    description: 'Delete selected message(s) for all members'\n  },\n  mute: {\n    id: 'menu_item_mute',\n    defaultMessage: 'Mute',\n    description: 'Turn off notifications'\n  },\n  unmute: {\n    id: 'menu_item_unmute',\n    defaultMessage: 'Unmute',\n    description: 'Turn notifications on'\n  },\n  topic_delete: {\n    id: 'menu_item_delete_topic',\n    defaultMessage: 'Delete',\n    description: 'Delete entire topic'\n  },\n  topic_delete_warning: {\n    id: 'topic_delete_warning',\n    defaultMessage: 'Are you sure you want to delete this conversation?',\n    description: 'Alert warning when deleting entire topic'\n  },\n  unblock: {\n    id: 'menu_item_unblock',\n    defaultMessage: 'Unblock',\n    description: 'Unblock topic or user'\n  },\n  // Generic string suitable for either topic or user.\n  block: {\n    id: 'menu_item_block',\n    defaultMessage: 'Block',\n    description: 'Block topic or user'\n  },\n  topic_block_warning: {\n    id: 'topic_block_warning',\n    defaultMessage: 'Are you sure you want to block this conversation?',\n    description: 'Alert warning when blocking a topic.'\n  },\n  member_delete: {\n    id: 'menu_item_member_delete',\n    defaultMessage: 'Remove',\n    description: 'Remove user from topic'\n  },\n  archive: {\n    id: 'menu_item_archive_topic',\n    defaultMessage: 'Archive',\n    description: 'Move topic from the list of active chats to archive'\n  }\n});\n\nclass ContextMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const {formatMessage} = props.intl;\n\n    this.handlePageClick = this.handlePageClick.bind(this);\n    this.handleEscapeKey = this.handleEscapeKey.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n\n    // Preconfigured menu items.\n    this.MenuItems = {\n      'topic_info': {\n        id: 'topic_info',\n        title: formatMessage(messages.info),\n        handler: null\n      },\n      'messages_clear': {\n        id: 'messages_clear',\n        title: formatMessage(messages.clear_messages),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage({id: 'menu_item_clear_messages'}), // title\n            formatMessage({id: 'clear_messages_warning'}), // content\n            (() => { this.deleteMessages(true, false, params, errorHandler); }), // onConfirm\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'messages_clear_hard': {\n        id: 'messages_clear_hard',\n        title: formatMessage(messages.clear_for_all),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage({id: 'menu_item_clear_messages_for_all'}), // title\n            formatMessage({id: 'delete_messages_warning'}), // content\n            (() => { return this.deleteMessages(true, true, params, errorHandler); }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'message_delete': {\n        id: 'message_delete',\n        title: formatMessage(messages.delete),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, false, params, errorHandler);\n        }\n      },\n      'message_delete_hard': {\n        id: 'message_delete_hard',\n        title: formatMessage(messages.delete_for_all),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, true, params, errorHandler);\n        }\n      },\n      'topic_unmute': {\n        id: 'topic_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'topic_mute': {\n        id: 'topic_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'topic_unblock': {\n        id: 'topic_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n      'topic_block': {\n        id: 'topic_block',\n        title: formatMessage(messages.block),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage({id: 'menu_item_block'}), // title\n            formatMessage(messages.topic_block_warning), // content\n            (() => {\n              return this.topicPermissionSetter('-JP', params, errorHandler).then((ctrl) => {\n                this.props.onTopicRemoved(params.topicName);\n                return ctrl;\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_delete': {\n        id: 'topic_delete',\n        title: formatMessage(messages.topic_delete),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage({id: 'menu_item_delete_topic'}), // title\n            formatMessage(messages.topic_delete_warning), // content\n            (() => {\n              const topic = this.props.tinode.getTopic(params.topicName);\n              if (!topic) {\n                console.log(\"Topic not found: \", params.topicName);\n                return;\n              }\n              return topic.delTopic().catch((err) => {\n                if (errorHandler) {\n                  errorHandler(err.message, 'err');\n                }\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_archive': {\n        id: 'topic_archive',\n        title: formatMessage(messages.archive),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic) {\n            console.log(\"Topic not found: \", params.topicName);\n            return;\n          }\n          return topic.archive(true).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      // menu_item_edit_permissions is defined elsewhere.\n      'permissions': {\n        id: 'permissions',\n        title: formatMessage({id: 'menu_item_edit_permissions'}),\n        handler: null\n      },\n      'member_delete': {\n        id: 'member_delete',\n        title: formatMessage(messages.member_delete),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic || !params.user) {\n            console.log(\"Topic or user not found: '\" + params.topicName + \"', '\" + params.user + \"'\");\n            return;\n          }\n          return topic.delSubscription(params.user).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      'member_mute': {\n        id: 'member_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'member_unmute': {\n        id: 'member_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'member_block': {\n        id: 'member_block',\n        title: formatMessage(messages.block),\n        handler: this.topicPermissionSetter.bind(this, '-J')\n      },\n      'member_unblock': {\n        id: 'member_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+J')\n      },\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handlePageClick, false);\n    document.addEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handlePageClick, false);\n    document.removeEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  handlePageClick(e) {\n    if (ReactDOM.findDOMNode(this).contains(e.target)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n  }\n\n  handleEscapeKey(e) {\n    if (e.keyCode === 27) {\n      this.props.hide();\n    }\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n    let item = this.props.items[e.currentTarget.dataset.id];\n    if (typeof item == 'string') {\n      item = this.MenuItems[item];\n    }\n\n    if (!item) {\n      console.log(\"Invalid menu item ID\", e.currentTarget.dataset.id);\n    } else {\n      this.props.onAction(\n        item.id,\n        item.handler(this.props.params, this.props.onError),\n        this.props.params);\n    }\n  }\n\n  // Menu Actions\n\n  deleteMessages(all, hard, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found: \", params.topicName);\n      return;\n    }\n\n    // We don't know if the message is still pending (e.g. attachment is being uploaded),\n    // so try cancelling first. No harm if we can't cancel.\n    // The message can be cancelled if transmission to the server has not\n    // started yet or if the message send has failed.\n    if (!all && topic.cancelSend(params.seq)) {\n      return;\n    }\n    // Can't cancel. Delete instead.\n    const promise = all ?\n      topic.delMessagesAll(hard) :\n      topic.delMessagesList([params.seq], hard);\n\n    return promise.catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Function is used by context menu to set permissions.\n  topicPermissionSetter(mode, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found\", params.topicName);\n      return;\n    }\n\n    let result = topic.updateMode(params.user, mode);\n    if (errorHandler) {\n      result = result.catch((err) => {\n        errorHandler(err.message, 'err');\n      });\n    }\n    return result;\n  }\n\n  render() {\n    let count = 0;\n    let menu = [];\n    this.props.items.map((item) => {\n      if (typeof item == 'string') {\n        item = this.MenuItems[item];\n      }\n      if (item && item.title) {\n        menu.push(\n          item.title == '-' ?\n            <li className=\"separator\" key={count} />\n            :\n            <li onClick={this.handleClick} data-id={count} key={count}>{item.title}</li>\n        );\n      }\n      count++;\n    });\n\n    // Ensure that menu is inside the app-container.\n    const hSize = 12 * REM_SIZE;\n    const vSize = REM_SIZE * (0.7 + menu.length * 2.5);\n    const left = (this.props.bounds.right - this.props.clickAt.x < hSize) ?\n        (this.props.clickAt.x - this.props.bounds.left - hSize) :\n        (this.props.clickAt.x - this.props.bounds.left);\n    const top = (this.props.bounds.bottom - this.props.clickAt.y < vSize) ?\n        (this.props.clickAt.y - this.props.bounds.top - vSize) :\n        (this.props.clickAt.y - this.props.bounds.top);\n\n    const position = {\n      left: left + 'px',\n      top: top + 'px'\n    };\n\n    return (\n      <ul className=\"menu\" style={position}>\n        {menu}\n      </ul>\n    );\n  }\n}\n\nexport default injectIntl(ContextMenu);\n","// Short representation of time in the past.\nexport function shortDateFormat(then, locale) {\n  locale = locale || window.navigator.userLanguage || window.navigator.language;\n  const now = new Date();\n  if (then.getFullYear() == now.getFullYear()) {\n    if (then.getMonth() == now.getMonth() && then.getDate() == now.getDate()) {\n\t    return then.toLocaleTimeString(locale, {hour12: false, hour: '2-digit', minute: '2-digit'});\n    } else {\n\t    return then.toLocaleDateString(locale,\n        {hour12: false, month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit'});\n    }\n  }\n  return then.toLocaleDateString(locale,\n    {hour12: false, year: 'numeric', month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit'});\n}\n\n// Convert seconds to minutes:seconds, i.e. 156 sec -> 2:36.\nexport function secondsToTime(seconds) {\n  const min = Math.floor(seconds / 60);\n  let sec = seconds % 60;\n  sec = sec < 10 ? `0${sec}` : sec;\n  return `${min}:${sec}`;\n}\n\n// Convert a number of bytes to human-readable format.\nexport function bytesToHumanSize(bytes) {\n  if (!bytes || bytes == 0) {\n    return '0 Bytes';\n  }\n\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n  const bucket = Math.min(Math.floor(Math.log2(bytes) / 10) | 0, sizes.length-1);\n  const count = bytes / Math.pow(1024, bucket);\n  const round = bucket > 0 ? (count < 3 ? 2 : (count < 30 ? 1 : 0)) : 0;\n  return count.toFixed(round) + ' ' + sizes[bucket];\n}\n\n// Get 32 bit integer hash value for a string. Ideally it should produce the same value\n// as Java's String#hash().\nexport function stringHash(value) {\n  let hash = 0;\n  value = '' + value;\n  for (let i = 0; i < value.length; i++) {\n    hash = ((hash << 5) - hash) + value.charCodeAt(i);\n    hash = hash & hash; // Convert to 32bit integer\n  }\n  return hash;\n}\n","import React from 'react';\n\nimport Tinode from 'tinode-sdk';\n\nimport { stringHash } from '../lib/strformat.js';\n\nexport default class LetterTile extends React.PureComponent {\n  render() {\n    let avatar;\n    if (this.props.avatar === true) {\n      const isGroup = (Tinode.topicType(this.props.topic) == 'grp');\n      const iconColor = (isGroup ? 'light-color' : 'dark-color')\n        + (Math.abs(stringHash(this.props.topic)) % 16);\n      if (this.props.topic && this.props.title && this.props.title.trim()) {\n        const letter = this.props.title.trim().charAt(0);\n        const className = 'lettertile ' + iconColor;\n        avatar = (<div className={className}><div>{letter}</div></div>)\n      } else {\n        const className = 'material-icons ' + iconColor;\n        avatar = isGroup ?\n          <i className={className}>group</i> : <i className={className}>person</i>;\n      }\n    } else if (this.props.avatar) {\n      // If avatar image is invalid, show a placeholder.\n      avatar = <img className=\"avatar\" alt=\"avatar\" src={this.props.avatar}\n        onError={(e)=>{e.target.onerror = null; e.target.src=\"/img/broken_image.png\"}} />;\n    } else {\n      avatar = null;\n    }\n    return avatar;\n  }\n}\n","// File and image helper functions.\nimport { MAX_INBAND_ATTACHMENT_SIZE, MAX_IMAGE_DIM } from '../config.js';\n\n// Supported image MIME types and corresponding file extensions.\nexport const SUPPORTED_IMAGE_FORMATS = ['image/jpeg', 'image/gif', 'image/png', 'image/svg', 'image/svg+xml'];\nexport const MIME_EXTENSIONS         = ['jpg',        'gif',       'png',       'svg',       'svg'];\n\n// Make a data URL from public.photo\nexport function makeImageUrl(photo) {\n  return (photo && photo.type && photo.data) ?\n    'data:image/' + photo.type + ';base64,' + photo.data : null;\n}\n\n// Calculate linear dimensions for scaling image down to fit under a certain size.\n// Returns an object which contains destination sizes, source sizes, and offsets\n// into source (when making square images).\nexport function fitImageSize(width, height, maxWidth, maxHeight, forceSquare) {\n  // Sanitize input\n  width = width | 0;\n  height = height | 0;\n  maxWidth = maxWidth | 0;\n  maxHeight = maxHeight | 0;\n\n  if (width <= 0 || height <= 0 || maxWidth <= 0 || maxHeight <= 0) {\n    return null;\n  }\n\n  if (forceSquare) {\n    maxWidth = maxHeight = Math.min(maxWidth, maxHeight);\n  }\n\n  let scale = Math.min(\n    Math.min(width, maxWidth) / width,\n    Math.min(height, maxHeight) / height\n  );\n\n  let size = {\n    dstWidth: (width * scale) | 0,\n    dstHeight: (height * scale) | 0,\n  };\n\n  if (forceSquare) {\n    // Also calculate parameters for making the image square.\n    size.dstWidth = size.dstHeight = Math.min(size.dstWidth, size.dstHeight);\n    size.srcWidth = size.srcHeight = Math.min(width, height);\n    size.xoffset = ((width - size.srcWidth) / 2) | 0;\n    size.yoffset = ((height - size.srcWidth) / 2) | 0;\n  } else {\n    size.xoffset = size.yoffset = 0;\n    size.srcWidth = width;\n    size.srcHeight = height;\n  }\n  return size;\n}\n\n// Ensure file's extension matches mime content type\nexport function fileNameForMime(fname, mime) {\n  var idx = SUPPORTED_IMAGE_FORMATS.indexOf(mime);\n  var ext = MIME_EXTENSIONS[idx];\n\n  var at = fname.lastIndexOf('.');\n  if (at >= 0) {\n    fname = fname.substring(0, at);\n  }\n  return fname + '.' + ext;\n}\n\n// Convert uploaded image into a base64-encoded string possibly scaling\n// linear dimensions or constraining to a square.\nexport function imageFileScaledToBase64(file, width, height, forceSquare, onSuccess, onError) {\n  var img = new Image();\n  img.crossOrigin = 'Anonymous';\n  img.onerror = function(err) {\n    onError(\"Image format unrecognized\");\n  }\n  img.onload = function() {\n    var dim = fitImageSize(this.width, this.height, width, height, forceSquare);\n    if (!dim) {\n      onError(\"Invalid image\");\n      return;\n    }\n    var canvas = document.createElement('canvas');\n    canvas.width = dim.dstWidth;\n    canvas.height = dim.dstHeight;\n    var ctx = canvas.getContext('2d');\n    ctx.imageSmoothingEnabled = true;\n    ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n      0, 0, dim.dstWidth, dim.dstHeight);\n\n    var mime = (this.width != dim.dstWidth ||\n      this.height != dim.dstHeight ||\n      SUPPORTED_IMAGE_FORMATS.indexOf(file.type) < 0) ? 'image/jpeg' : file.type;\n    var imageBits = canvas.toDataURL(mime);\n    var parts = imageBits.split(',');\n    // Get actual image type: 'data:image/png;base64,'\n    mime = getMimeType(parts[0]);\n    if (!mime) {\n      onError(\"Unsupported image format\");\n      return;\n    }\n    // Ensure the image is not too large\n    var quality = 0.78;\n    if (base64DecodedLen(imageBits.length) > MAX_INBAND_ATTACHMENT_SIZE) {\n      mime = 'image/jpeg';\n    }\n    if (mime == 'image/jpeg') {\n      // Reduce size of the jpeg by reducing image quality\n      while (base64DecodedLen(imageBits.length) > MAX_INBAND_ATTACHMENT_SIZE && quality > 0.45) {\n        imageBits = canvas.toDataURL(mime, quality);\n        quality *= 0.84;\n      }\n    }\n    if (base64DecodedLen(imageBits.length) > MAX_INBAND_ATTACHMENT_SIZE) {\n      onError(\"The image size \" + bytesToHumanSize(base64DecodedLen(imageBits.length)) +\n        \" exceeds the \"  + bytesToHumanSize(MAX_INBAND_ATTACHMENT_SIZE) + \" limit.\", \"err\");\n      return;\n    }\n    canvas = null;\n    onSuccess(imageBits.split(',')[1], mime, dim.dstWidth, dim.dstHeight, fileNameForMime(file.name, mime));\n  };\n  img.src = URL.createObjectURL(file);\n}\n\n// Convert uploaded image file to base64-encoded string without scaling/converting the image\nexport function imageFileToBase64(file, onSuccess, onError) {\n  var reader = new FileReader();\n  reader.addEventListener('load', function() {\n    var parts = reader.result.split(',');\n    var mime = getMimeType(parts[0]);\n    if (!mime) {\n      onError(\"Failed to process image file\");\n      return;\n    }\n\n    // Get image size.\n    var img = new Image();\n    img.crossOrigin = 'Anonymous';\n    img.onload = function() {\n      onSuccess(parts[1], mime, this.width, this.height, fileNameForMime(file.name, mime));\n    }\n    img.onerror = function(err) {\n      onError(\"Image format not recognized\");\n    }\n    img.src = URL.createObjectURL(file);\n  }, false);\n  reader.readAsDataURL(file);\n}\n\nexport function fileToBase64(file, onSuccess, onError) {\n  var reader = new FileReader();\n  reader.addEventListener('load', function() {\n    onSuccess(file.type, reader.result.split(',')[1], file.name);\n  });\n  reader.readAsDataURL(file);\n}\n\n// File pasted from the clipboard. It's either an inline image or a file attachment.\n// FIXME: handle large files out of band.\nexport function filePasted(event, onImageSuccess, onAttachmentSuccess, onError) {\n  var items = (event.clipboardData || event.originalEvent.clipboardData || {}).items;\n  for (var i in items) {\n    var item = items[i];\n    if (item.kind === 'file') {\n      var file = item.getAsFile();\n      if (!file) {\n        console.log(\"Failed to get file object from pasted file item\", item.kind, item.type);\n        continue;\n      }\n      if (file.type && file.type.split('/')[0] == 'image') {\n        // Handle inline image\n        if (file.size > MAX_INBAND_ATTACHMENT_SIZE || SUPPORTED_IMAGE_FORMATS.indexOf(file.type) < 0) {\n          imageFileScaledToBase64(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, false, onImageSuccess, onError);\n        } else {\n          imageFileToBase64(file, onImageSuccess, onError);\n        }\n      } else {\n        // Handle file attachment\n        fileToBase64(file, onAttachmentSuccess, onError)\n      }\n      // Indicate that the pasted data contains a file.\n      return true;\n    }\n  }\n  // No file found.\n  return false;\n}\n\n// Get mime type from data URL header.\nexport function getMimeType(header) {\n  var mime = /^data:(image\\/[-+a-z0-9.]+);base64/.exec(header);\n  return (mime && mime.length > 1) ? mime[1] : null;\n}\n\n// Given length of a binary object in bytes, calculate the length after\n// base64 encoding.\nexport function base64EncodedLen(n) {\n  return Math.floor((n + 2) / 3) * 4;\n}\n\n// Given length of a base64-encoded object, calculate decoded size of the\n// pbject in bytes.\nexport function base64DecodedLen(n) {\n  return Math.floor(n / 4) * 3;\n}\n\n// Re-encode string to standard base64 encoding with padding.\n// The string may be base64-URL encoded without the padding.\nexport function base64ReEncode(str) {\n  if (str) {\n    str = str.replace(/-/g, '+').replace(/_/g, '/');\n    try {\n      str = btoa(atob(str));\n    } catch(err) {\n      console.log(\"Failed to base64 re-encode string.\", err);\n      str = null;\n    }\n  }\n  return str;\n}\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\n\nimport { AVATAR_SIZE } from '../config.js';\nimport { imageFileScaledToBase64, makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class AvatarUpload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dataUrl: props.avatar\n    };\n\n    this.handleFileUpload = this.handleFileUpload.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.avatar != prevProps.avatar) {\n      this.setState({dataUrl: this.props.avatar})\n    }\n  }\n\n  handleFileUpload(e) {\n    imageFileScaledToBase64(e.target.files[0], AVATAR_SIZE, AVATAR_SIZE, true,\n      // Success\n      (base64bits, mime) => {\n        var du = makeImageUrl({data: base64bits, type: mime});\n        this.setState({dataUrl: du});\n        this.props.onImageChanged(du);\n      },\n      // Failure\n      (err) => {\n        this.props.onError(err, 'err');\n      });\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  render() {\n    // Randomize id value in case more than one AvatarUpload is shown\n    // at the same time.\n    var randId = \"file-input-avatar-\" + (Math.random() + '').substr(2);\n    return (\n      <div className=\"avatar-upload\">\n        {this.props.readOnly || !this.state.dataUrl ?\n          null :\n          <a href=\"#\" className=\"clear-avatar\" onClick={(e) => {e.preventDefault(); this.props.onImageChanged(null);}}>\n            <i className=\"material-icons\">clear</i>\n          </a>}\n        {this.state.dataUrl ?\n          <img src={this.state.dataUrl} className=\"preview\" /> :\n          this.props.readOnly && this.props.uid ?\n            <div className=\"avatar-box\">\n              <LetterTile\n                avatar={true}\n                topic={this.props.uid}\n                title={this.props.title} />\n            </div>\n            :\n            <div className=\"blank\">{AVATAR_SIZE}&times;{AVATAR_SIZE}</div>}\n        {this.props.readOnly ? null :\n          <input type=\"file\" id={randId} className=\"inputfile hidden\"\n            accept=\"image/*\" onChange={this.handleFileUpload} />}\n        {this.props.readOnly ? null :\n        <label htmlFor={randId} className=\"round\">\n          <i className=\"material-icons\">file_upload</i>\n        </label>}\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\n/* BEGIN CheckBox: styled checkbox */\nexport default class CheckBox extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange() {\n    this.props.onChange(this.props.name, !this.props.checked);\n  }\n\n  render() {\n    return (\n      this.props.onChange ? (\n        this.props.checked ?\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box</i> :\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box_outline_blank</i>\n        ) : (\n          this.props.checked ?\n            <i className=\"material-icons\">check_box</i> :\n            <i className=\"material-icons\">check_box_outline_blank</i>\n        )\n    );\n  }\n}\n/* END CheckBox */\n","import React from 'react';\n\nconst icon_mapping = {'muted': 'notifications_off', 'banned': 'block'};\n\n/* Contact's labels: [you], or icons [muted], [blocked] */\nexport default class ContactBadges extends React.PureComponent {\n    render() {\n      let badges = null;\n      if (this.props.badges && this.props.badges.length > 0) {\n        badges = [];\n        this.props.badges.map(function(b) {\n          if (b.icon) {\n            badges.push(<i className=\"material-icons as-badge\" key={b.key || b.icon}>{icon_mapping[b.icon]}</i>);\n          } else {\n            const style = 'badge' + (b.color ? ' ' + b.color : '');\n            badges.push(<span className={style} key={b.key || b.name}>{b.name}</span>);\n          }\n        });\n        return <>{badges}</>;\n      }\n      return null;\n    }\n};\n","// The counter of unread messages in the topic.\nimport React from 'react';\n\nexport default class UnreadBadge extends React.PureComponent {\n  render() {\n    return (this.props.count > 0 ?\n      <span className=\"unread\">{this.props.count > 9 ? \"9+\" : this.props.count}</span>\n      : null);\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport LetterTile from './letter-tile.jsx';\nimport ContactBadges from './contact-badges.jsx';\nimport UnreadBadge from './unread-badge.jsx';\n\nexport default class Contact extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.props.onSelected) {\n      this.props.onSelected(this.props.item, this.props.index, this.props.now, this.props.acs);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.props.item, y: e.pageY, x: e.pageX });\n  }\n\n  render() {\n    let title = this.props.title;\n    if (!title) {\n      title = <i><FormattedMessage id=\"unnamed_topic\" /></i>;\n    } else if (title.length > 30) {\n      // FIXME: this is probably wrong for RTL languages.\n      title = title.substring(0, 28) + '...';\n    }\n    const online = this.props.now ? 'online' : 'offline';\n    const avatar = this.props.avatar ? this.props.avatar : true;\n    const badges = this.props.badges ? this.props.badges.slice() : [];\n    const icon_badges = [];\n    if (this.props.acs) {\n      if (this.props.showMode) {\n        badges.push({name: this.props.acs.getMode(), key: 'mode'});\n      }\n      if (this.props.acs.isMuted()) {\n        icon_badges.push({icon: 'muted'});\n      }\n      if (!this.props.acs.isJoiner()) {\n        icon_badges.push({icon: 'banned'});\n      }\n    }\n\n    return (\n      <li className={!this.props.showCheckmark && this.props.selected ? \"selected\" : null}\n        onClick={this.handleClick}>\n        <div className=\"avatar-box\">\n          <LetterTile\n            avatar={avatar}\n            title={this.props.title}\n            topic={this.props.item} />\n          {this.props.showOnline ? <span className={online} /> :\n            (this.props.showCheckmark && this.props.selected ?\n            <i className=\"checkmark material-icons\">check_circle</i>\n            : null)}\n        </div>\n        <div className=\"text-box\">\n          <div><span className=\"contact-title\">{title}</span>\n            <UnreadBadge count={this.props.unread} /><ContactBadges badges={icon_badges} />\n          </div>\n          {this.props.comment ? <div className=\"contact-comment\">{this.props.comment}</div> : null}\n          <span><ContactBadges badges={badges} /></span>\n        </div>\n        {this.props.showContextMenu ?\n          <span className=\"menuTrigger\">\n            <a href=\"#\" onClick={this.handleContextClick}>\n              <i className=\"material-icons\">expand_more</i>\n            </a>\n          </span> : null}\n      </li>\n    );\n  }\n};\n","// A panel included into a list of contacts with an action text.\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\n\nclass ContactAction extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.onAction(this.props.action);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <li onClick={this.handleClick} className=\"action\">\n        <div className=\"action-text\">{formatMessage(this.props.title, this.props.values)}</div>\n      </li>\n    );\n  }\n};\n\nexport default injectIntl(ContactAction);\n","// ContactList: component for showing a list of contacts,\n// such as a list of group members in a group chat.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport Contact from './contact.jsx';\nimport ContactAction from './contact-action.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nconst messages = defineMessages({\n  badge_you: {\n    id: 'badge_you',\n    defaultMessage: 'you',\n    description: 'Badge for indicating the current user'\n  },\n  badge_owner: {\n    id: 'badge_owner',\n    defaultMessage: 'owner',\n    description: 'Badge for indicating the owner'\n  }\n});\n\nclass ContactList extends React.Component {\n  render() {\n    const {formatMessage} = this.props.intl;\n    const showCheckmark = Array.isArray(this.props.topicSelected);\n    const contactNodes = [];\n    let contactsCount = 0;\n    if (this.props.contacts && this.props.contacts.length > 0) {\n      this.props.contacts.map((c) => {\n        if (c.action) {\n          // Action item\n          contactNodes.push(\n            <ContactAction\n              title={c.title} action={c.action} values={c.values}\n              key={c.action}\n              onAction={this.props.onAction}\n              />);\n        } else {\n          // Normal contact\n          const key = c.topic ? c.topic : c.user;\n          // If filter function is provided, filter out the items\n          // which don't satisfy the condition.\n          if (this.props.filterFunc && this.props.filter) {\n            let content = [key];\n            if (c.private && c.private.comment) {\n              content.push(('' + c.private.comment).toLowerCase());\n            }\n            if (c.public && c.public.fn) {\n              content.push(('' + c.public.fn).toLowerCase());\n            }\n            if (!this.props.filterFunc(this.props.filter, content)) {\n              return;\n            }\n          }\n\n          const selected = showCheckmark ?\n            (this.props.topicSelected.indexOf(key) > -1) :\n            (this.props.topicSelected === key);\n          const badges = [];\n          if (this.props.showMode) {\n            if (key === this.props.myUserId) {\n              badges.push({name: formatMessage(messages.badge_you), color: 'green'});\n            }\n            if (c.acs && c.acs.isOwner()) {\n              badges.push({name: formatMessage(messages.badge_owner), color: 'blue'});\n            }\n          }\n          const comment = Array.isArray(c.private) ?\n            c.private.join(',') : (c.private ? c.private.comment : null);\n\n          contactNodes.push(\n            <Contact\n              title={c.public ? c.public.fn : null}\n              avatar={makeImageUrl(c.public ? c.public.photo : null)}\n              comment={comment}\n              unread={this.props.showUnread ? c.unread : 0}\n              now={c.online && this.props.connected}\n              acs={c.acs}\n              showMode={this.props.showMode}\n              badges={badges}\n              showCheckmark={showCheckmark}\n              selected={selected}\n              showOnline={this.props.showOnline}\n              onSelected={this.props.onTopicSelected}\n              showContextMenu={this.props.showContextMenu}\n              item={key}\n              index={contactNodes.length}\n              key={key} />\n          );\n          contactsCount ++;\n        }\n      }, this);\n    }\n\n    return (\n      <div className={this.props.noScroll ? null : \"scrollable-panel\"}>\n        {contactsCount == 0 ?\n          <div className=\"center-medium-text\"\n            dangerouslySetInnerHTML={{__html: this.props.emptyListMessage}} />\n          :\n          null\n        }\n        {contactNodes.length > 0 ?\n          <ul className=\"contact-box\">\n            {contactNodes}\n          </ul>\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ContactList);\n","// The X menu to be displayed in title bars.\nimport React from 'react';\n\nexport default class MenuCancel extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}><i className=\"material-icons\">close</i></a>\n    );\n  }\n}\n","import React from 'react';\n\nimport MenuCancel from './menu-cancel.jsx';\n\nexport default class ErrorPanel extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      show: false,\n    };\n\n    this.hide = this.hide.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.level !== this.props.level) {\n      this.setState({\n        show: !(!this.props.level)\n      });\n    }\n  }\n\n  hide() {\n    this.setState({show: false});\n    if (this.props.onClearError) {\n      this.props.onClearError();\n    }\n  }\n\n  render() {\n    const icons = {err: 'error', warn: 'warning', info: 'info'}\n    const level = icons[this.props.level] || '';\n    const className = 'info-box ' + level;\n    return (\n      <div className={className}>\n        <div className=\"icon\"><i className=\"material-icons\">{level}</i></div>\n        <span>\n          <span dangerouslySetInnerHTML={{__html: this.props.text}} />\n          {this.props.action ?\n            <>\n              &#32;<a href=\"#\"\n                style={{ whiteSpace: 'nowrap' }}\n                onClick={(e) => {e.preventDefault(); this.props.action();}}>\n                {this.props.actionText}\n              </a>\n            </>\n          : null}\n        </span>\n        <div className=\"cancel\"><MenuCancel onCancel={this.hide} /></div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\n\nexport default class Chip extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel(this.props.topic, this.props.index);\n  }\n\n  render() {\n    const title = this.props.title || this.props.topic;\n    const className = this.props.invalid ? 'chip invalid' : 'chip';\n    return (\n      <div className={className}>\n        {this.props.noAvatar ?\n          <span className=\"spacer\" /> :\n          <div className=\"avatar-box\">\n            <LetterTile\n              avatar={this.props.avatar || true}\n              topic={this.props.topic}\n              title={this.props.title} />\n          </div>\n        }\n        <span>{title}</span>\n        {this.props.onCancel && !this.props.required ?\n          <a href=\"#\" onClick={this.handleCancel} >&times;</a>\n          : <span className=\"spacer\" />}\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport Chip from './chip.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n/* BEGIN ChipInput: group membership widget */\nexport default class ChipInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = ChipInput.deriveStateFromProps(props);\n    this.state.input = '';\n    this.state.focused = false;\n\n    this.handleTextInput = this.handleTextInput.bind(this);\n    this.removeChipAt = this.removeChipAt.bind(this);\n    this.handleChipCancel = this.handleChipCancel.bind(this);\n    this.handleFocusGained = this.handleFocusGained.bind(this);\n    this.handleFocusLost = this.handleFocusLost.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  static deriveStateFromProps(props) {\n    return {\n      placeholder: props.chips ? '' : props.prompt,\n      sortedChips: ChipInput.sortChips(props.chips, props.staticMembers),\n      chipIndex: ChipInput.indexChips(props.chips)\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chips != this.props.chips ||\n      prevProps.staticMembers != this.props.staticMembers ||\n      prevProps.prompt != this.props.prompt) {\n      this.setState(ChipInput.deriveStateFromProps(this.props));\n    }\n    if (!prevState || this.props.chips.length > prevState.sortedChips.length) {\n      this.setState({input: ''});\n    }\n  }\n\n  // Map chip index to user name\n  static indexChips(chips) {\n    const index = {};\n    let count = 0;\n    chips.map((item) => {\n      index[item.user] = count;\n      count ++;\n    });\n    return index;\n  }\n\n  // Have non-removable chips appear before all other chips.\n  static sortChips(chips, keep) {\n    const required = [];\n    const normal = [];\n    chips.map((item) => {\n      if (keep && keep.includes(item.user)) {\n        required.push(item);\n      } else {\n        normal.push(item);\n      }\n    });\n    return required.concat(normal);\n  }\n\n  handleTextInput(e) {\n    this.setState({input: e.target.value});\n    if (this.props.filterFunc) {\n      this.props.filterFunc(e.target.value);\n    }\n  }\n\n  removeChipAt(idx) {\n    const removed = this.state.sortedChips[idx];\n    this.props.onChipRemoved(removed.user, this.state.chipIndex[removed.user]);\n  }\n\n  handleChipCancel(item, idx) {\n    this.removeChipAt(idx);\n  }\n\n  handleFocusGained() {\n    this.setState({focused: true});\n  }\n\n  handleFocusLost() {\n    this.setState({focused: false});\n    if (this.props.onFocusLost) {\n      this.props.onFocusLost(this.state.input);\n    }\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Backspace') {\n      if (this.state.input.length == 0 && this.state.sortedChips.length > 0) {\n        const at = this.state.sortedChips.length - 1;\n        if (this.state.sortedChips[at].user !== this.props.staticMembers) {\n          this.removeChipAt(at);\n        }\n      }\n    } else if (e.key === 'Enter') {\n      if (this.props.onEnter) {\n        this.props.onEnter(this.state.input);\n      }\n    } else if (e.key === 'Escape') {\n      if (this.props.onCancel) {\n        this.props.onCancel();\n      }\n    }\n  }\n\n  render() {\n    const chips = [];\n    let count = 0;\n    const staticMembers = this.props.staticMembers || [];\n    this.state.sortedChips.map((item) => {\n      chips.push(\n        <Chip\n          onCancel={this.handleChipCancel}\n          avatar={makeImageUrl(item.public ? item.public.photo : null)}\n          title={item.public ? item.public.fn : undefined}\n          noAvatar={this.props.avatarDisabled}\n          topic={item.user}\n          required={staticMembers.includes(item.user)}\n          invalid={item.invalid}\n          index={count}\n          key={item.user} />\n      );\n      count++;\n    });\n    const className = \"chip-input\" + (this.state.focused ? ' focused' : '');\n    return (\n      <div className={className}>\n        {chips}\n        <input type=\"text\"\n          placeholder={this.state.placeholder}\n          onChange={this.handleTextInput}\n          onFocus={this.handleFocusGained}\n          onBlur={this.handleFocusLost}\n          onKeyDown={this.handleKeyDown}\n          value={this.state.input}\n          autoFocus />\n      </div>\n    );\n  }\n};\n","// GroupMembers: control for managing a list of group members.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\nimport ContactList from './contact-list.jsx';\n\nconst messages = defineMessages({\n  no_contacts: {\n    id: 'no_contacts',\n    defaultMessage: 'You have no contacts :-(',\n    description: 'Shown in ContactsView when the user has no contacts'\n  },\n  contacts_not_found: {\n    id: 'contacts_not_found_short',\n    defaultMessage: \"No contacts match '{query}'\",\n    description: 'Shown in ContactsView when search returned no results'\n  }\n});\n\nclass GroupManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Array of topic members\n      members: props.members,\n      index: GroupManager.indexMembers(props.members),\n      staticMembers: GroupManager.staticMembers(props.members, props.keepInitialMembers, props.requiredMember),\n      contactFilter: '',\n      noContactsMessage: props.intl.formatMessage(messages.no_contacts),\n      selectedContacts: GroupManager.selectedContacts(props.members)\n    };\n\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleMemberRemoved = this.handleMemberRemoved.bind(this);\n    this.handleContactFilter = this.handleContactFilter.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static indexMembers(members) {\n    let index = {};\n    members.map((m) => {\n      index[m.user] = {delta: 0, present: true}; // Delta: 0 unchanged, +1 added, -1 removed\n    });\n    return index;\n  }\n\n  static staticMembers(members, keepInitial, requiredMember) {\n    let stat = [];\n    members.map((m) => {\n      if (keepInitial || m.user == requiredMember) {\n        stat.push(m.user);\n      }\n    });\n    return stat;\n  }\n\n  static selectedContacts(members) {\n    let sel = [];\n    members.map((m) => {\n      sel.push(m.user);\n    });\n    return sel;\n  }\n\n  handleContactSelected(userId, index) {\n    let status = this.state.index[userId];\n    if (status) {\n      if (status.present) {\n        // Prevent duplicate members\n        return;\n      }\n      status.delta += 1;\n      status.present = true;\n    } else {\n      status = {delta: 1, present: true};\n    }\n\n    let m = this.state.members.slice();\n    m.push(this.props.contacts[index]);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleMemberRemoved(userId, index) {\n    const status = this.state.index[userId];\n    if (!status || !status.present) {\n      return;\n    }\n    status.present = false;\n    status.delta -= 1;\n\n    let m = this.state.members.slice();\n    m.splice(index, 1);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleContactFilter(val) {\n    const {formatMessage} = this.props.intl;\n    const msg = !val ?\n      formatMessage(messages.no_contacts) :\n      formatMessage(messages.contacts_not_found, {query: val});\n\n    this.setState({contactFilter: val, noContactsMessage: msg});\n  }\n\n  static doContactFiltering(filter, values) {\n    if (filter) {\n      for (let i=0; i<values.length; i++) {\n        if (values[i].indexOf(filter) >= 0) {\n          return true;\n        }\n      }\n      return false;\n    }\n    return true;\n  }\n\n  handleSubmit() {\n    var instance = this;\n    var members = [];\n    var added = [];\n    var removed = [];\n\n    var keys = Object.keys(this.state.index);\n    keys.map(function(k) {\n      if (instance.state.index[k].present) {\n        members.push(k);\n      }\n\n      if (instance.state.index[k].delta > 0) {\n        added.push(k);\n      } else if (instance.state.index[k].delta < 0) {\n        removed.push(k);\n      }\n    });\n    this.props.onSubmit(members, added, removed);\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <div id=\"group-manager\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_group_members\" defaultMessage=\"Group Members\" description=\"Section title\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ChipInput\n            chips={this.state.members}\n            staticMembers={this.state.staticMembers}\n            prompt=\"add members\"\n            filterFunc={this.handleContactFilter}\n            onChipRemoved={this.handleMemberRemoved} />\n        </div>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_all_contacts\" defaultMessage=\"All Contacts\"\n              description=\"Section title [All Contacts]\" />\n          </label>\n        </div>\n        <ContactList\n          contacts={this.props.contacts}\n          myUserId={this.props.myUserId}\n          topicSelected={this.state.selectedContacts}\n          filter={this.state.contactFilter}\n          filterFunc={GroupManager.doContactFiltering}\n          emptyListMessage={this.state.noContactsMessage}\n          showOnline={false}\n          showUnread={false}\n          onTopicSelected={this.handleContactSelected} />\n        <div id=\"group-manager-buttons\" className=\"panel-form-row\">\n          <button className=\"blue\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n          <button className=\"white\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(GroupManager);\n","// Password with a visiblity toggle.\nimport React from 'react';\n\nexport default class VisiblePassword extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: this.props.value,\n      visible: false\n    };\n\n    this.handleVisibility = this.handleVisibility.bind(this);\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n    if (this.props.onChange) {\n      this.props.onChange(e);\n    }\n  }\n\n  handleVisibility(e) {\n    e.preventDefault();\n    this.setState({visible: !this.state.visible});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode == 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, visible: false});\n      if (this.props.onFinished) {\n        this.props.onFinished();\n      }\n    } else if (e.keyCode == 13) {\n      // Enter pressed\n      this.handleEditingFinished();\n    }\n  }\n\n  handleEditingFinished(e) {\n    if (e) {\n      let currentTarget = e.currentTarget;\n      setTimeout(() => {\n        if (!currentTarget.contains(document.activeElement)) {\n          if (this.props.onFinished) {\n            this.props.onFinished(this.state.value);\n          }\n        }\n      }, 0);\n    } else if (this.props.onFinished) {\n      this.props.onFinished(this.state.value.trim());\n    }\n  }\n\n  render() {\n    return (\n      <div tabIndex=\"-1\" className=\"group-focus\"\n        onBlur={this.handleEditingFinished}>\n        <input className=\"with-visibility\"\n          type={this.state.visible ? \"text\" : \"password\"}\n          value={this.state.value}\n          placeholder={this.props.placeholder}\n          required={this.props.required ? 'required' : ''}\n          autoFocus={this.props.autoFocus ? 'autoFocus' : ''}\n          autoComplete={this.props.autoComplete}\n          onChange={this.handeTextChange}\n          onKeyDown={this.handleKeyDown} />\n        <span onClick={this.handleVisibility}>\n          <i className=\"material-icons clickable light-gray\">\n            {this.state.visible ? 'visibility' : 'visibility_off'}\n          </i>\n        </span>\n      </div>\n    );\n  }\n}\n","// In-place text editor. Shows text with an icon which toggles it into an input field.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport VisiblePassword from './visible-password.jsx';\n\nexport default class InPlaceEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      active: props.active,\n      initialValue: props.value || '',\n      value: props.value || ''\n    };\n\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleStartEditing = this.handleStartEditing.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n    this.handlePasswordFinished = this.handlePasswordFinished.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // If text has changed while in read mode, update text and discard changes.\n    // Ignore update if in edit mode.\n    const newValue = this.props.value || '';\n    if (prevState.initialValue != newValue && !prevState.active) {\n      this.setState({\n        initialValue: newValue,\n        value: newValue\n      });\n    }\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, active: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleEditingFinished(e);\n    }\n  }\n\n  handleStartEditing() {\n    if (!this.props.readOnly) {\n      ReactDOM.findDOMNode(this).focus();\n      this.setState({active: true});\n    }\n  }\n\n  handleEditingFinished(event) {\n    if (this.props.required && !event.target.checkValidity()) {\n      // Empty input\n      this.setState({value: this.props.value, active: false});\n      return;\n    }\n    this.setState({active: false});\n    let value = this.state.value.trim();\n    if ((value || this.props.value) && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  handlePasswordFinished(value) {\n    this.setState({active: false});\n    if (value && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  render() {\n    if (this.state.active) {\n      var fieldType = this.props.type || 'text';\n    } else {\n      var spanText = this.props.type == 'password' ? '••••••••' : this.state.value;\n      var spanClass = 'in-place-edit' +\n        (this.props.readOnly ? ' disabled' : '');\n      if (!spanText) {\n        spanText = this.props.placeholder;\n        spanClass += ' placeholder';\n      }\n      if (spanText.length > 20) {\n        // FIXME: this is wrong for RTL languages.\n        spanText = spanText.substring(0, 19) + '...';\n      }\n    }\n    return (\n      this.state.active ?\n        (fieldType == 'password' ?\n          <VisiblePassword\n            value={this.state.value}\n            placeholder={this.props.placeholder}\n            required={this.props.required ? 'required' : ''}\n            autoComplete={this.props.autoComplete}\n            autoFocus={true}\n            onFinished={this.handlePasswordFinished}/>\n          :\n          <input type={fieldType}\n            value={this.state.value}\n            placeholder={this.props.placeholder}\n            required={this.props.required ? 'required' : ''}\n            autoComplete={this.props.autoComplete}\n            autoFocus\n            onChange={this.handeTextChange}\n            onKeyDown={this.handleKeyDown}\n            onBlur={this.handleEditingFinished} />\n        )\n        :\n        <span className={spanClass} onClick={this.handleStartEditing}>\n          <span className=\"content\">{spanText}</span>\n        </span>\n    );\n  }\n};\n","// Toggle [Title text >] -> [Title text v]\n\nimport React from 'react';\n\nexport default class MoreButton extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: props.open\n    };\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n\n  handleToggle() {\n    const open = !this.state.open;\n    this.setState({open: open});\n    if (this.props.onToggle) {\n      this.props.onToggle(open);\n    }\n  }\n\n  render() {\n    return (<label className=\"small clean-clickable\" onClick={this.handleToggle}>{this.props.title}...\n      {this.state.open ? <i className=\"material-icons\">expand_more</i> :\n        <i className=\"material-icons\">chevron_right</i>}\n      </label>);\n  }\n}\n","// PermissionsEditor: Component for editing permissions\n// <PermissionsEditor mode=\"JWROD\" skip=\"O\" onChange={this.handleCheckboxTest} />\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport CheckBox from './checkbox.jsx';\nimport Contact from './contact.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n// Translatable permission names.\nconst messages = defineMessages({\n  'joiner': {\n    id: 'permission_join',\n    defaultMessage: \"Join ({val})\",\n    description: 'Name of J permission'\n  },\n  'reader': {\n    id: 'permission_read',\n    defaultMessage: \"Read ({val})\",\n    description: 'Name of R permission'\n  },\n  'writer': {\n    id: 'permission_write',\n    defaultMessage: \"Write ({val})\",\n    description: 'Name of W permission'\n  },\n  'preser': {\n    id: 'permission_pres',\n    defaultMessage: \"Get notified ({val})\",\n    description: 'Name of P permission'\n  },\n  'approver': {\n    id: 'permission_admin',\n    defaultMessage: \"Approve ({val})\",\n    description: 'Name of A permission'\n  },\n  'sharer': {\n    id: 'permission_share',\n    defaultMessage: \"Share ({val})\",\n    description: 'Name of S permission'\n  },\n  'deleter': {\n    id: 'permission_delete',\n    defaultMessage: \"Delete ({val})\",\n    description: 'Name of D permission'\n  },\n  'owner': {\n    id: 'permission_owner',\n    defaultMessage: \"Owner ({val})\",\n    description: 'Name of O permission'\n  }\n});\n\nclass PermissionsEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mode: (props.mode || '').replace('N', '')\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(val) {\n    let mode = this.state.mode;\n    let idx = mode.indexOf(val);\n    if (idx == -1) {\n      mode += val;\n    } else {\n      mode = mode.replace(val, '');\n    }\n    this.setState({mode: mode});\n  }\n\n  handleSubmit() {\n    // Normalize string, otherwise cannot check if mode has changed.\n    var mode = (this.state.mode || 'N').split('').sort().join('');\n    var before = (this.props.mode || 'N').split('').sort().join('')\n    if (mode !== before) {\n      this.props.onSubmit(mode);\n    } else {\n      this.props.onCancel();\n    }\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const all = 'JRWPASDO';\n    const names = {\n      'J': formatMessage(messages.joiner, {val: 'J'}),\n      'R': formatMessage(messages.reader, {val: 'R'}),\n      'W': formatMessage(messages.writer, {val: 'W'}),\n      'P': formatMessage(messages.preser, {val: 'P'}),\n      'A': formatMessage(messages.approver, {val: 'A'}),\n      'S': formatMessage(messages.sharer, {val: 'S'}),\n      'D': formatMessage(messages.deleter, {val: 'D'}),\n      'O': formatMessage(messages.owner, {val: 'O'})\n    };\n\n    let skip = this.props.skip || '';\n    let mode = this.state.mode;\n    let compare = (this.props.compare || '').replace('N', '');\n    let items = [];\n    for (let i=0; i<all.length; i++) {\n      let c = all.charAt(i);\n      if (skip.indexOf(c) >= 0 && mode.indexOf(c) < 0) {\n        // Permission is marked as inactive: hide unchecked permissions, disable checked permissions\n        continue;\n      }\n      items.push(\n        <tr key={c}>\n          <td>{names[c]}</td>\n          <td className=\"checkbox\">{skip.indexOf(c) < 0 ?\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} onChange={this.handleChange}/>\n            :\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} />\n          }</td>{this.props.compare ? <td className=\"checkbox\">\n            <CheckBox name={c} checked={(compare.indexOf(c) >= 0)}/>\n          </td> : null}\n        </tr>\n      );\n    }\n\n    return (\n      <div className=\"panel-form-column\">\n        {this.props.userTitle ?\n          <ul className=\"contact-box\"><Contact\n            item={this.props.item}\n            title={this.props.userTitle}\n            avatar={makeImageUrl(this.props.userAvatar ? this.props.userAvatar : null)} /></ul> : null}\n        <label className=\"small\"><FormattedMessage id=\"title_permissions\"\n          defaultMessage=\"Permissions\" description=\"Section title\"/></label>\n        <table className=\"permission-editor\">\n        {this.props.compare ?\n          <thead><tr>\n            <th></th><th>{this.props.modeTitle}</th>\n            <th>{this.props.compareTitle}</th>\n          </tr></thead> :\n          null}\n        <tbody>\n          {items}\n        </tbody></table>\n        <br />\n        <div className=\"dialog-buttons\">\n          <button className=\"outline\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" />\n          </button>\n          <button className=\"blue\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(PermissionsEditor);\n","// Odds and ends\n\n// Make shortcut icon appear with a green dot + show unread count in title.\nexport function updateFavicon(count) {\n  const oldIcon = document.getElementById('shortcut-icon');\n  const head = document.head || document.getElementsByTagName('head')[0];\n  const newIcon = document.createElement('link');\n  newIcon.type = 'image/png';\n  newIcon.id = 'shortcut-icon';\n  newIcon.rel = 'shortcut icon';\n  newIcon.href = 'img/logo32x32' + (count > 0 ? 'a' : '') + '.png';\n  if (oldIcon) {\n    head.removeChild(oldIcon);\n  }\n  head.appendChild(newIcon);\n\n  document.title = (count > 0 ? '('+count+') ' : '') + 'Tinode';\n}\n\n// Create VCard which represents topic 'public' info\nexport function vcard(fn, imageDataUrl) {\n  let card = null;\n\n  if ((fn && fn.trim()) || imageDataUrl) {\n    card = {};\n    if (fn) {\n      card.fn = fn.trim();\n    }\n    if (imageDataUrl) {\n      const dataStart = imageDataUrl.indexOf(',');\n      card.photo = dataStart >= 0 ? {\n        data: imageDataUrl.substring(dataStart+1),\n        type: 'jpg'\n      } : imageDataUrl;\n    }\n  }\n  return card;\n}\n\n// Deep-shallow compare two arrays: shallow compare each element.\nexport function arrayEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (!Array.isArray(a) || !Array.isArray(b)) {\n    return false;\n  }\n\n  // Compare lengths first.\n  if (a.length != b.length) {\n    return false;\n  }\n  // Order of elements is ignored.\n  a.sort();\n  b.sort();\n  for (let i = 0, l = a.length; i < l; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Checks (loosely) if the given string is a phone. If so, returns the phone number in a format\n// as close to E.164 as possible.\nexport function asPhone(val) {\n  val = val.trim();\n  if (/^(?:\\+?(\\d{1,3}))?[- (.]*(\\d{3})[- ).]*(\\d{3})[- .]*(\\d{2})[- .]*(\\d{2})?$/.test(val)) {\n    return val.replace(/[- ().]*/, '');\n  }\n  return null;\n}\n\n// Checks (loosely) if the given string is an email. If so returns the email.\nexport function asEmail(val) {\n  val = val.trim();\n  if (/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(val)) {\n    return val;\n  }\n  return null;\n}\n\n// Checks if URL is a relative url, i.e. has no 'scheme://', including the case of missing scheme '//'.\n// The scheme is expected to be RFC-compliant, e.g. [a-z][a-z0-9+.-]*\n// example.html - ok\n// https:example.com - not ok.\n// http:/example.com - not ok.\n// ' ↲ https://example.com' - not ok. (↲ means carriage return)\nexport function isUrlRelative(url) {\n  return !/^\\s*([a-z][a-z0-9+.-]*:|\\/\\/)/im.test(url);\n}\n\n// Ensure URL does not present an XSS risk. Optional allowedSchemes may contain an array of\n// strings with permitted URL schemes, such as ['ftp', 'ftps']; otherwise accept http and https only.\nexport function sanitizeUrl(url, allowedSchemes) {\n  if (!url) {\n    return null;\n  }\n\n  // Strip control characters and whitespace. They are not valid URL characters anyway.\n  url = url.replace(/[^\\x20-\\x7E]/gmi, '').trim();\n\n  // Relative URLs are safe.\n  if (!/^([a-z][a-z0-9+.-]*:|\\/\\/)/i.test(url)) {\n    return url;\n  }\n  // Blob URLs are safe.\n  if (/^blob:http/.test(url)) {\n    return url;\n  }\n\n  // Absolute URL. Accept only safe schemes, or no scheme.\n  const schemes = Array.isArray(allowedSchemes) ? allowedSchemes.join('|') : 'http|https';\n  const re = new RegExp('^((' + schemes + '):|//)', 'i');\n  if (!re.test(url)) {\n    return null;\n  }\n\n  return url;\n}\n\n// Ensure URL is suitable for <img src=\"url\"> field: the URL must be a relative URL or\n// have http:, https:, or data: scheme. In case of data: scheme, the URL must start with\n// a 'data:image/XXXX;base64,'.\nexport function sanitizeImageUrl(url) {\n  if (!url) {\n    return null;\n  }\n\n  const sanitizedUrl = sanitizeUrl(url);\n  if (sanitizedUrl) {\n    return sanitizedUrl;\n  }\n\n  // Is this a data: URL of an image?\n  if (/data:image\\/[a-z0-9.-]+;base64,/i.test(url.trim())) {\n    return url;\n  }\n\n  return null;\n}\n","// TagManager: edit topic or user tags.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\n\nimport { MIN_TAG_LENGTH } from '../config.js';\nimport { arrayEqual } from '../lib/utils.js';\n\nexport default class TagManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tags: this.props.tags,\n      tagInput: '',\n      activated: this.props.activated\n    };\n\n    this.handleTagInput = this.handleTagInput.bind(this);\n    this.handleAddTag = this.handleAddTag.bind(this);\n    this.handleRemoveTag = this.handleRemoveTag.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (!arrayEqual(nextProps.tags, prevState.tags) && !prevState.activated) {\n      return {tags: nextProps.tags};\n    }\n    return null;\n  }\n\n  handleTagInput(text) {\n    this.setState({tagInput: text});\n    if (text.length > 0) {\n      const last = text[text.length-1];\n      if (text[0] == '\"') {\n        // This is a quoted string.\n        if (text.length > 1 && last == '\"') {\n          this.handleAddTag(text.substring(1, text.length-1));\n        }\n      } else if (last == ',' || last == ' ' || last == ';' || last == '\"') {\n        // User entered ',', ' ' or ';'\n        this.handleAddTag(text.substring(0, text.length-1).trim());\n      }\n    }\n  }\n\n  handleAddTag(tag) {\n    if (tag.length > 0) {\n      const tags = this.state.tags.slice(0);\n      tags.push(tag);\n\n      this.setState({tags: tags, tagInput: ''});\n      if (this.props.onTagsChanged) {\n        this.props.onTagsChanged(tags);\n      }\n      return tags;\n    }\n    return this.state.tags;\n  }\n\n  handleRemoveTag(tag, index) {\n    const tags = this.state.tags.slice(0);\n    tags.splice(index, 1);\n    this.setState({tags: tags});\n    if (this.props.onTagsChanged) {\n      this.props.onTagsChanged(tags);\n    }\n  }\n\n  handleSubmit() {\n    // Add unprocessed input to tags, submit the list.\n    this.props.onSubmit(this.handleAddTag(this.state.tagInput.trim()));\n    this.setState({activated: false, tags: this.props.tags});\n  }\n\n  handleCancel() {\n    this.setState({activated: false, tagInput: '', tags: this.props.tags});\n    if (this.props.onCancel) {\n      this.props.onCancel();\n    }\n  }\n\n  render() {\n    let tags = [];\n    if (this.state.activated) {\n      this.state.tags.map((tag) => {\n        tags.push({user: tag, invalid: (tag.length < MIN_TAG_LENGTH)});\n      });\n    } else {\n      this.state.tags.map((tag) => {\n        tags.push(<span className=\"badge\" key={tags.length}>{tag}</span>);\n      });\n      if (tags.length == 0) {\n        tags = (\n          <i>\n            <FormattedMessage id=\"tags_not_found\" defaultMessage=\"No tags defined. Add some.\" description=\"\" />\n          </i>\n        );\n      }\n    }\n    return (\n      <div className=\"panel-form-column\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">{this.props.title}</label>\n        </div>\n        {this.state.activated ?\n        <div>\n          <FormattedMessage id=\"tags_editor_no_tags\" defaultMessage=\"Add some tags\"\n            description=\"Tag editor prompt when no tags are found.\">{\n            (add_tags_prompt) => <ChipInput\n              chips={tags}\n              avatarDisabled={true}\n              prompt={add_tags_prompt}\n              onEnter={this.handleAddTag}\n              onFocusLost={this.handleAddTag}\n              onCancel={this.handleCancel}\n              onChipRemoved={this.handleRemoveTag}\n              filterFunc={this.handleTagInput} />\n          }</FormattedMessage>\n          {this.props.onSubmit || this.props.onCancel ?\n            <div id=\"tag-manager-buttons\" className=\"dialog-buttons panel-form-row\">\n              <button className=\"outline\" onClick={this.handleCancel}>\n                <FormattedMessage id=\"button_cancel\" defautMessage=\"Cancel\" description=\"Rejection button [Cancel]\" />\n              </button>\n              <button className=\"blue\" onClick={this.handleSubmit}>\n                <FormattedMessage id=\"button_ok\" defautMessage=\"OK\" description=\"Confirmation button [OK]\" />\n              </button>\n            </div>\n          : null}\n        </div>\n        :\n        <div className=\"quoted\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.setState({activated: true});}}>\n            <i className=\"material-icons\">edit</i> &nbsp;<FormattedMessage id=\"title_manage_tags\" defaultMessage=\"Manage\"\n              description=\"Section title for the list of tags\" />\n          </a>\n          <>{tags}</>\n        </div>\n      }\n      </div>\n    );\n  }\n};\n","// InfoView: panel with topic/user info.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport ContactList from '../widgets/contact-list.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupManager from '../widgets/group-manager.jsx';\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport MenuCancel from '../widgets/menu-cancel.jsx';\nimport MoreButton from '../widgets/more-button.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\nimport TagManager from '../widgets/tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH, NO_ACCESS_MODE } from '../config.js';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, vcard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  requested: {\n    id: 'requested_permissions',\n    defaultMessage: 'Requested',\n    description: 'Title for permissions'\n  },\n  granted: {\n    id: 'granted_permissions',\n    defaultMessage: 'Granted',\n    description: 'Title for permissions'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n  other_user: {\n    id: 'label_other_user',\n    defaultMessage: 'Other',\n    description: 'Label for the other user when the user is unnamed'\n  },\n  clear_messages: {\n    id: 'action_clear_messages',\n    defaultMessage: 'Clear Messages',\n    description: 'Flat button [Clear Messages] (soft-delete messages)'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n  delete_messages: {\n    id: 'action_delete_messages',\n    defaultMessage: 'Clear Messages for All',\n    description: 'Flat button [Clear for All] (hard-delete all messages)'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  leave_chat: {\n    id: 'action_leave_chat',\n    defaultMessage: 'Leave Conversation',\n    description: 'Flat button [Leave Conversation]'\n  },\n  leave_chat_warning: {\n    id: 'leave_chat_warning',\n    defaultMessage: 'Are you sure you want to leave this conversation?',\n    description: 'Alert dialog warning when unsubscribing from a chat.'\n  },\n  block_contact: {\n    id: 'action_block_contact',\n    defaultMessage: \"Block Contact\",\n    description: \"Flat button [Block Contact]\"\n  },\n  block_contact_warning: {\n    id: 'block_contact_warning',\n    defaultMessage: 'Are you sure you want to block this contact?',\n    description: 'Alert dialog warning when blocking a contact.'\n  },\n  report_chat: {\n    id: 'action_report_chat',\n    defaultMessage: 'Report Conversation',\n    description: 'Flat button [Report Group]'\n  },\n  report_chat_warning: {\n    id: 'report_chat_warning',\n    defaultMessage: 'Are you sure you want to block and report this conversation?',\n    description: 'Alert dialog warning when reporting a conversation for abuse'\n  },\n});\n\nclass InfoView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      topic: null,\n      owner: false,\n      admin: false,\n      sharer: false,\n      deleter: false,\n      muted: false,\n      address: null,\n      groupTopic: undefined,\n      fullName: undefined,\n      avatar: null,\n      private: null,\n      selectedContact: null,\n      access: null,\n      modeGiven: null,\n      modeWant: null,\n      modeGiven2: null, // P2P topic, the other user mode given\n      modeWant2: null,  // P2P topic, the other user mode want\n      auth: null,\n      anon: null,\n      contactList: [],\n      tags: [],\n      showMemberPanel: false,\n      showPermissionEditorFor: undefined,\n      moreInfoExpanded: false,\n      previousMetaDesc: undefined,\n      previousSubsUpdated: undefined,\n      previousTagsUpdated: undefined\n    };\n\n    this.resetSubs = this.resetSubs.bind(this);\n    this.resetDesc = this.resetDesc.bind(this);\n    this.onMetaDesc = this.onMetaDesc.bind(this);\n    this.onSubsUpdated = this.onSubsUpdated.bind(this);\n    this.onTagsUpdated = this.onTagsUpdated.bind(this);\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\n    this.handlePrivateUpdate = this.handlePrivateUpdate.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleMuted = this.handleMuted.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handleShowAddMembers = this.handleShowAddMembers.bind(this);\n    this.handleHideAddMembers = this.handleHideAddMembers.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleDeleteMessages = this.handleDeleteMessages.bind(this);\n    this.handleLeave = this.handleLeave.bind(this);\n    this.handleBlock = this.handleBlock.bind(this);\n    this.handleReport = this.handleReport.bind(this);\n    this.handleMemberSelected = this.handleMemberSelected.bind(this);\n    this.handleMoreInfo = this.handleMoreInfo.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.handleContextMenu = this.handleContextMenu.bind(this);\n  }\n\n  // No need to separately handle component mount.\n  componentDidUpdate(props) {\n    const topic = this.props.tinode.getTopic(props.topic);\n    if (!topic) {\n      return;\n    }\n\n    if (this.onMetaDesc != topic.onMetaDesc) {\n      this.previousMetaDesc = topic.onMetaDesc;\n      topic.onMetaDesc = this.onMetaDesc;\n\n      this.previousSubsUpdated = topic.onSubsUpdated;\n      topic.onSubsUpdated = this.onSubsUpdated;\n\n      if (topic.getType() == 'grp') {\n        this.previousTagsUpdated = topic.onTagsUpdated;\n        topic.onTagsUpdated = this.onTagsUpdated;\n      } else {\n        this.previousTagsUpdated = undefined;\n      }\n    }\n\n    if (this.state.topic != props.topic) {\n      this.setState({topic: props.topic});\n      this.resetDesc(topic, props);\n      this.resetSubs(topic, props);\n    }\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.setState({topic: null});\n    topic.onMetaDesc = this.previousMetaDesc;\n    topic.onSubsUpdated = this.previousSubsUpdated;\n    topic.onTagsUpdated = this.previousTagsUpdated;\n  }\n\n  resetSubs(topic, props) {\n    const newState = {contactList: []};\n    if (topic.getType() == 'p2p') {\n      // Fetch the other party in the p2p conversation.\n      // Topic may not be ready yet, so check if user is found.\n      const user2 = topic.subscriber(props.topic);\n      if (user2) {\n        newState.modeGiven2 = user2.acs.getGiven();\n        newState.modeWant2 = user2.acs.getWant();\n      } else {\n        newState.modeGiven2 = NO_ACCESS_MODE;\n        newState.modeWant2 = NO_ACCESS_MODE;\n      }\n    } else {\n      topic.subscribers((sub) => {\n        newState.contactList.push(sub);\n      }, this);\n    }\n\n    this.setState(newState);\n  }\n\n  resetDesc(topic, props) {\n    const defacs = topic.getDefaultAccess() || {};\n    const acs = topic.getAccessMode();\n\n    this.setState({\n      owner: acs && acs.isOwner(),\n      admin: acs && acs.isAdmin(),\n      sharer: acs && acs.isSharer(),\n      deleter: acs && acs.isDeleter(),\n      muted: acs && acs.isMuted(),\n\n      fullName: topic.public ? topic.public.fn : undefined,\n      avatar: makeImageUrl(topic.public ? topic.public.photo : null),\n      private: topic.private ? topic.private.comment : null,\n      address: topic.name,\n      groupTopic: (topic.getType() == 'grp'),\n      showMemberPanel: false,\n      access: acs ? acs.getMode() : undefined,\n      modeGiven: acs ? acs.getGiven() : undefined,\n      modeWant: acs ? acs.getWant() : undefined,\n      auth: defacs.auth,\n      anon: defacs.anon\n    });\n\n    if (topic.getType() == 'grp' && acs && acs.isOwner()) {\n      // Requesting tags: owner is editing the topic.\n      topic.getMeta(topic.startMetaQuery().withTags().build());\n    }\n  }\n\n  onMetaDesc(desc) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetDesc(topic, this.props);\n\n    if (this.previousMetaDesc && this.previousMetaDesc != this.onMetaDesc) {\n      this.previousMetaDesc(desc);\n    }\n  }\n\n  onSubsUpdated(subs) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetSubs(topic, this.props);\n\n    if (this.previousSubsUpdated && this.previousSubsUpdated != this.onSubsUpdated) {\n      this.previousSubsUpdated(subs);\n    }\n  }\n\n  onTagsUpdated(tags) {\n    this.setState({tags: tags});\n\n    if (this.previousTagsUpdated && this.previousTagsUpdated != this.onTagsUpdated) {\n      this.previousTagsUpdated();\n    }\n  }\n\n  handleFullNameUpdate(fn) {\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.fullName !== fn) {\n      this.setState({fullName: fn});\n      this.props.onTopicDescUpdate(this.props.topic, vcard(fn, null), null);\n    }\n  }\n\n  handlePrivateUpdate(comment) {\n    comment = comment.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.private !== comment) {\n      this.setState({private: comment});\n      this.props.onTopicDescUpdate(this.props.topic, null, comment || Tinode.DEL_CHAR);\n    }\n  }\n\n  handleImageChanged(img) {\n    this.setState({avatar: img});\n    this.props.onTopicDescUpdate(this.props.topic, vcard(null, img || Tinode.DEL_CHAR), null);\n  }\n\n  handleMuted(ignored, checked) {\n    this.setState({muted: checked});\n    this.props.onChangePermissions(this.props.topic, checked ? '-P' : '+P');\n  }\n\n  handlePermissionsChanged(perm) {\n    switch (this.state.showPermissionEditorFor) {\n      case 'auth':\n        this.props.onTopicDescUpdate(this.props.topic, null, null, {auth: perm});\n        break;\n      case 'anon':\n        this.props.onTopicDescUpdate(this.props.topic, null, null, {anon: perm});\n        break;\n      case 'mode':\n      case 'want':\n        this.props.onChangePermissions(this.props.topic, perm);\n        break;\n      case 'given':\n        this.props.onChangePermissions(this.props.topic, perm, this.props.topic);\n        break;\n      case 'user':\n        this.props.onChangePermissions(this.props.topic, perm, this.state.userPermissionsEdited);\n        break;\n    }\n\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handleLaunchPermissionsEditor(which, uid) {\n    const {formatMessage} = this.props.intl;\n    let toEdit, toCompare, toSkip, titleEdit, titleCompare, userTitle, userAvatar;\n    switch (which) {\n      case 'mode':\n        toEdit = this.state.access;\n        break;\n      case 'want':\n        toEdit = this.state.modeWant;\n        toCompare = this.state.modeGiven;\n        toSkip = this.state.groupTopic ? 'O' : 'ASDO';\n        titleEdit = formatMessage(messages.requested);\n        titleCompare = formatMessage(messages.granted);\n        break;\n      case 'given':\n        toEdit = this.state.modeGiven2;\n        toCompare = this.state.modeWant2;\n        toSkip = this.state.groupTopic ? (this.state.owner ? '' : 'O') : 'ASDO';\n        titleEdit = formatMessage(messages.granted);\n        titleCompare = formatMessage(messages.requested);\n        break;\n      case 'auth':\n        toEdit = this.state.auth;\n        toSkip = 'O';\n        break;\n      case 'anon':\n        toEdit = this.state.anon;\n        toSkip = 'O';\n        break;\n      case 'user': {\n        let topic = this.props.tinode.getTopic(this.props.topic);\n        if (!topic) {\n          return;\n        }\n        var user = topic.subscriber(uid);\n        if (!user || !user.acs) {\n          return;\n        }\n        toEdit = user.acs.getGiven();\n        toCompare = user.acs.getWant();\n        toSkip = this.state.owner ? '' : 'O';\n        titleEdit = formatMessage(messages.granted);\n        titleCompare = formatMessage(messages.requested);\n        if (user.public) {\n          userTitle = user.public.fn;\n          userAvatar = user.public.photo;\n        }\n        break;\n      }\n      default:\n        console.log(\"Unknown permission editing mode '\" + which + \"'\");\n        break;\n    }\n    this.setState({\n      showPermissionEditorFor: which,\n      userPermissionsEdited: uid,\n      userPermissionsTitle: userTitle,\n      userPermissionsAvatar: userAvatar,\n      editedPermissions: toEdit,\n      immutablePermissions: toCompare,\n      editedPermissionsTitle: titleEdit,\n      immutablePermissionsTitle: titleCompare,\n      editedPermissionsSkipped: toSkip,\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handleShowAddMembers(e) {\n    e.preventDefault();\n    this.props.onInitFind();\n    this.setState({showMemberPanel: true});\n  }\n\n  handleHideAddMembers() {\n    this.setState({showMemberPanel: false});\n  }\n\n  handleMemberUpdateRequest(members, added, removed) {\n    this.props.onMemberUpdateRequest(this.props.topic, added, removed);\n    this.setState({showMemberPanel: false});\n  }\n\n  handleDeleteMessages(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(this.state.deleter ? messages.delete_messages : messages.clear_messages), // title\n      formatMessage(this.state.deleter ? messages.delete_messages_warning : messages.clear_messages_warning), // content\n      (() => { this.props.onDeleteMessages(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleLeave(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.leave_chat), // title\n      formatMessage(messages.leave_chat_warning), // content\n      (() => { this.props.onLeaveTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleBlock(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.block_contact), // title\n      formatMessage(messages.block_contact_warning), // content\n      (() => { this.props.onBlockTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleReport(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.report_chat), // title\n      formatMessage(messages.report_chat_warning), // content\n      (() => { this.props.onReportTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleMemberSelected(uid) {\n    this.setState({selectedContact: uid});\n  }\n\n  handleMoreInfo(open) {\n    this.setState({moreInfoExpanded: open});\n  }\n\n  handleTagsUpdated(tags) {\n    if (!arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      this.props.onTopicTagsUpdate(this.props.topic, tags);\n    }\n  }\n\n  handleContextMenu(params) {\n    const {formatMessage} = this.props.intl;\n    const instance = this;\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    const user = topic.subscriber(params.topicName);\n    if (!user || !user.acs) {\n      return;\n    }\n\n    const menuItems = [\n      {title: formatMessage(messages.edit_permissions), handler: function() {\n        instance.handleLaunchPermissionsEditor('user', params.topicName);\n      }},\n      'member_delete',\n      user.acs.isMuted() ? 'member_unmute' : 'member_mute',\n      user.acs.isJoiner() ? 'member_block' : 'member_unblock'\n    ];\n    this.props.showContextMenu({\n      topicName: this.props.topic,\n      x: params.x,\n      y: params.y,\n      user: params.topicName}, menuItems);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n\n    return (\n      <div id=\"info-view\">\n        <div className=\"caption-panel\" id=\"info-caption-panel\">\n          <div className=\"panel-title\" id=\"info-title\">\n            <FormattedMessage id=\"title_info\" defaultMessage=\"Info\" description=\"Title for InfoView\" />\n          </div>\n          <div>\n            <MenuCancel onCancel={this.props.onCancel} />\n          </div>\n        </div>\n        {this.props.displayMobile ?\n          <ErrorPanel\n            level={this.props.errorLevel}\n            text={this.props.errorText}\n            onClearError={this.props.onError} /> : null}\n        {this.state.showMemberPanel ?\n          <GroupManager\n            members={this.state.contactList}\n            requiredMember={this.props.myUserId}\n            keepInitialMembers={!this.state.admin && !this.state.owner}\n            myUserId={this.props.myUserId}\n            contacts={this.props.searchableContacts}\n            onCancel={this.handleHideAddMembers}\n            onSubmit={this.handleMemberUpdateRequest} />\n          :\n        this.state.showPermissionEditorFor ?\n          <PermissionsEditor\n            mode={this.state.editedPermissions}\n            compare={this.state.immutablePermissions}\n            skip={this.state.editedPermissionsSkipped}\n            modeTitle={this.state.editedPermissionsTitle}\n            compareTitle={this.state.immutablePermissionsTitle}\n            userTitle={this.state.userPermissionsTitle}\n            item={this.state.userPermissionsEdited}\n            userAvatar={this.state.userPermissionsAvatar}\n            onSubmit={this.handlePermissionsChanged}\n            onCancel={this.handleHidePermissionsEditor}\n            />\n          :\n          <div id=\"info-view-content\" className=\"scrollable-panel\">\n            <div className=\"panel-form-row\">\n              <div className=\"panel-form-column\">\n                <div><label className=\"small\">\n                  <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                    description=\"Label for editing topic name\" />\n                </label></div>\n                <div><InPlaceEdit\n                    placeholder={this.state.groupTopic ? \"Group name\" : <i>Unknown</i>}\n                    readOnly={!this.state.owner}\n                    value={this.state.fullName}\n                    required={true}\n                    onFinished={this.handleFullNameUpdate} /></div>\n                <div>\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                      description=\"Label for editing 'private'\" />\n                  </label>\n                </div>\n                <div>\n                  <FormattedMessage id=\"private_editing_placeholder\"\n                    defaultMessage=\"Visible to you only\"\n                    description=\"Placeholder for editing 'private'\">{\n                    (private_placeholder) => <InPlaceEdit\n                      placeholder={private_placeholder}\n                      value={this.state.private}\n                      onFinished={this.handlePrivateUpdate} />\n                  }</FormattedMessage>\n                </div>\n              </div>\n              <AvatarUpload\n                avatar={this.state.avatar}\n                readOnly={!this.state.owner}\n                uid={this.props.topic}\n                title={this.state.fullName}\n                onImageChanged={this.handleImageChanged}\n                onError={this.props.onError} />\n            </div>\n            <div className=\"hr\" />\n            <div className=\"panel-form-column\">\n              <div className=\"panel-form-row\">\n                <label>\n                  <FormattedMessage id=\"label_muting_topic\" defaultMessage=\"Muted:\"\n                    description=\"Label for Muting/unmuting the topic\" />\n                </label>\n                <CheckBox name=\"P\" checked={this.state.muted}\n                  onChange={this.handleMuted} />\n              </div>\n              <FormattedMessage id=\"action_more\" defaultMessage=\"More\"\n                description=\"Action for showing more content\">{\n                (more) => <MoreButton\n                  title={more}\n                  open={this.state.moreInfoExpanded}\n                  onToggle={this.handleMoreInfo} />\n              }</FormattedMessage>\n              {this.state.moreInfoExpanded ?\n                <div className=\"panel-form-column\">\n                  <div className=\"panel-form-row\">\n                    <label><FormattedMessage id=\"label_user_id\" /></label>\n                    <tt>{this.state.address}</tt>\n                  </div>\n                  {this.state.groupTopic ?\n                    <div className=\"panel-form-row\">\n                      <label>\n                        <FormattedMessage id=\"label_your_permissions\" defaultMessage=\"Your permissions:\"\n                          description=\"Label for current user permissions\" />\n                      </label>\n                      <tt className=\"clickable\"\n                        onClick={this.handleLaunchPermissionsEditor.bind(this, 'want')}>\n                        {this.state.access}\n                      </tt>\n                    </div>\n                    :\n                    <div>\n                      <div>\n                        <label className=\"small\">\n                          <FormattedMessage id=\"label_permissions\" defaultMessage=\"Permissions:\"\n                            description=\"Section title\" />\n                        </label>\n                      </div>\n                      <div className=\"quoted\">\n                        <div>\n                          <FormattedMessage id=\"label_you\" defaultMessage=\"You:\"\n                            description=\"Label for the current user\" /> &nbsp;<tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'want')}>\n                          {this.state.access}\n                        </tt></div>\n                        <div>{this.state.fullName ? this.state.fullName : formatMessage(messages.other_user)}:\n                          &nbsp;<tt className=\"clickable\" onClick={this.handleLaunchPermissionsEditor.bind(this, 'given')}>\n                          {this.state.modeGiven2}\n                          </tt>\n                        </div>\n                      </div>\n                    </div>\n                  }\n                  {this.state.sharer && (this.state.auth || this.state.anon) ?\n                  <div>\n                    <div>\n                      <label className=\"small\">\n                        <FormattedMessage id=\"label_default_access\" defaultMessage=\"Default access mode:\"\n                          description=\"Section title\" />\n                      </label>\n                    </div>\n                    <div className=\"quoted\">\n                      <div>Auth: {this.state.admin ?\n                        <tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>\n                          {this.state.auth}\n                        </tt>\n                        :\n                        <tt>{this.state.auth}</tt>\n                      }\n                      </div>\n                      <div>Anon: {this.state.admin ?\n                        <tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>\n                          {this.state.anon}\n                        </tt>\n                        :\n                        <tt>{this.state.anon}</tt>\n                      }\n                      </div>\n                    </div>\n                  </div>\n                  :\n                  null\n                }\n                </div>\n              :\n              null\n              }\n            </div>\n            <div className=\"hr\" />\n            {this.state.owner ?\n              <>\n                <FormattedMessage id=\"title_tag_manager\">{\n                  (tags) => <TagManager\n                    title={tags}\n                    tags={this.state.tags}\n                    activated={false}\n                    onSubmit={this.handleTagsUpdated} />\n                }</FormattedMessage>\n                <div className=\"hr\" />\n              </>\n              :\n              null\n            }\n            <div className=\"panel-form-column\">\n              <a href=\"#\" className=\"flat-button\" onClick={this.handleDeleteMessages}>\n                <i className=\"material-icons\">delete_outline</i> &nbsp;{\n                  formatMessage(this.state.deleter ? messages.delete_messages : messages.clear_messages)\n                }\n              </a>\n              <a href=\"#\" className=\"red flat-button\" onClick={this.handleLeave}>\n                <i className=\"material-icons\">exit_to_app</i> &nbsp;{formatMessage(messages.leave_chat)}\n              </a>\n              {!this.state.groupTopic ?\n                <a href=\"#\" className=\"red flat-button\" onClick={this.handleBlock}>\n                  <i className=\"material-icons\">block</i> &nbsp;{formatMessage(messages.block_contact)}\n                </a>\n                :\n                null\n              }\n              {!this.state.owner ?\n                <a href=\"#\" className=\"red flat-button\" onClick={this.handleReport}>\n                  <i className=\"material-icons\">report</i> &nbsp;{formatMessage(messages.report_chat)}\n                </a>\n                :\n                null\n              }\n            </div>\n            {this.state.groupTopic ?\n              <>\n                <div className=\"hr\" />\n                <div className=\"panel-form-column\">\n                  <div className=\"panel-form-row\">\n                    <label className=\"small\">\n                      <FormattedMessage id=\"label_group_members\" defaultMessage=\"Group members:\"\n                        description=\"Section title or label\" />\n                    </label>\n                  </div>\n                  <div className=\"panel-form-row\">\n                    {this.state.sharer ?\n                      <a href=\"#\" className=\"flat-button\" onClick={this.handleShowAddMembers}>\n                        <i className=\"material-icons\">person_add</i> &nbsp;<FormattedMessage id=\"button_add_members\"\n                          defaultMessage=\"Add members\" description=\"Flat button [Add members] (to topic)\" />\n                      </a>\n                      : null}\n                  </div>\n                  <FormattedMessage id=\"group_has_no_members\" defaultMessage=\"No members\"\n                    description=\"Shown in place of group members\">{\n                    (no_members) => <ContactList\n                      contacts={this.state.contactList}\n                      myUserId={this.props.myUserId}\n                      emptyListMessage={no_members}\n                      topicSelected={this.state.selectedContact}\n                      showOnline={false}\n                      showUnread={false}\n                      showMode={true}\n                      noScroll={true}\n                      onTopicSelected={this.handleMemberSelected}\n                      showContextMenu={this.state.admin ? this.handleContextMenu : false}\n                    />\n                  }</FormattedMessage>\n                </div>\n              </>\n              :\n              null\n            }\n          </div>\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(InfoView);\n","// File uload/download progress indicator with a cancel inside.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class FileProgress extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"uploader\">\n        <div><span style={{width: (this.props.progress * 100) + \"%\"}}></span></div>\n        {this.props.progress < 0.999 ?\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n            <i className=\"material-icons\">close</i> <FormattedMessage id=\"action_cancel\"\n              defaultMessage=\"cancel\" description=\"Call to action [cancel]\" />\n          </a>\n          :\n          <FormattedMessage id=\"upload_finishing\" defaultMessage=\"finishing...\"\n            description=\"Notification that upload is finishing\" />\n        }\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\nimport { bytesToHumanSize } from '../lib/strformat.js';\nimport { isUrlRelative, sanitizeUrl } from '../lib/utils.js';\n\nexport default class Attachment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      downloader: null,\n      progress: 0\n    };\n\n    this.downloadFile = this.downloadFile.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  downloadFile(url, filename, mimetype) {\n    var downloader = this.props.tinode.getLargeFileHelper();\n    this.setState({downloader: downloader});\n    downloader.download(url, filename, mimetype, (loaded) => {\n      this.setState({progress: loaded / this.props.size});\n    }).then(() => {\n      this.setState({downloader: null, progress: 0});\n    }).catch((err) => {\n      if (err) {\n        this.props.onError(\"Error downloading file: \" + err.message, 'err');\n      }\n      this.setState({downloader: null, progress: 0});\n    });\n  }\n\n  handleCancel() {\n    if (this.props.uploader) {\n      this.props.onCancelUpload();\n    } else if (this.state.downloader) {\n      this.state.downloader.cancel();\n    }\n  }\n\n  render() {\n    let filename = this.props.filename || 'file_attachment';\n    if (filename.length > 36) {\n      filename = filename.substr(0, 16) + '...' + filename.substr(-16);\n    }\n    let size = this.props.size > 0 ?\n      <span className=\"small gray\">({bytesToHumanSize(this.props.size)})</span> :\n      null;\n\n    // Detect if the download URL is relative or absolute.\n    // If the URL is relative use LargeFileHelper to attach authentication\n    // credentials to the request.\n    let url, helperFunc;\n    if (!this.props.uploader && !this.state.downloader && isUrlRelative(this.props.downloadUrl)) {\n      // Relative URL. Use download helper.\n      url = '#';\n      helperFunc = (e) => {\n        e.preventDefault();\n        this.downloadFile(this.props.downloadUrl, this.props.filename, this.props.mimetype);\n      };\n    } else {\n      url = sanitizeUrl(this.props.downloadUrl) || 'about:blank';\n      helperFunc = null;\n    }\n    return (\n      <div className=\"attachment\">\n        <div><i className=\"material-icons big gray\">insert_drive_file</i></div>\n        <div className=\"flex-column\">\n          <div>{filename} {size}</div>\n          {this.props.uploader || this.state.downloader ?\n            <FileProgress progress={this.props.uploader ? this.props.progress : this.state.progress}\n              onCancel={this.handleCancel} />\n            :\n            <div><a href={url} download={this.props.filename} onClick={helperFunc} >\n              <i className=\"material-icons\">file_download</i> <FormattedMessage id=\"save_attachment\"\n                defaultMessage=\"save\" description=\"Call to save an attachment\" />\n            </a></div>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n","// Received/read indicator.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { shortDateFormat } from '../lib/strformat.js';\n\nconst messages = defineMessages({\n  'sending': {\n    'id': 'message_sending',\n    'defaultMessage': 'sending...',\n    'description': 'Message being sent, in place of time stamp'\n  },\n  'failed': {\n    'id': 'message_sending_failed',\n    'defaultMessage': 'failed',\n    'description': 'Failed to send message, in place of time stamp'\n  }\n});\n\nclass ReceivedMarker extends React.PureComponent {\n  render() {\n    const {formatMessage} = this.props.intl;\n    let timestamp;\n    if (this.props.received <= Tinode.MESSAGE_STATUS_SENDING) {\n      timestamp = formatMessage(messages.sending);\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_FAILED) {\n      timestamp = formatMessage(messages.failed);\n    } else {\n      timestamp = shortDateFormat(this.props.timestamp, this.props.intl.locale);\n    }\n\n    let marker = null;\n    if (this.props.received <= Tinode.MESSAGE_STATUS_SENDING) {\n      marker = (<i className=\"material-icons small\">access_time</i>); // watch face\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_FAILED) {\n      marker = (<i className=\"material-icons small amber\">warning</i>); // yellow icon /!\\\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_SENT) {\n      marker = (<i className=\"material-icons small\">done</i>); // checkmark\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_RECEIVED) {\n      marker = (<i className=\"material-icons small\">done_all</i>); // double checkmark\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_READ) {\n      marker = (<i className=\"material-icons small blue\">done_all</i>); // blue double checkmark\n    }\n\n    return (\n      <span className=\"timestamp\">\n        {timestamp}{'\\u00a0'}{marker}\n      </span>\n    );\n  }\n};\n\nexport default injectIntl(ReceivedMarker);\n","// Single message, sent or received.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Drafty } from 'tinode-sdk'\n\nimport Attachment from './attachment.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\nimport { sanitizeImageUrl, sanitizeUrl } from '../lib/utils.js';\n\nexport default class ChatMessage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      progress: 0\n    };\n\n    if (props.uploader) {\n      props.uploader.onProgress = this.handleProgress.bind(this);\n    }\n\n    this.handlePreviewImage = this.handlePreviewImage.bind(this);\n    this.handleFormButtonClick = this.handleFormButtonClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n  }\n\n  handlePreviewImage(e) {\n    e.preventDefault();\n    this.props.onImagePreview({\n      url: e.target.src,\n      filename: e.target.title,\n      width: e.target.dataset.width,\n      height: e.target.dataset.height,\n      size: e.target.dataset.size,\n      type: e.target.dataset.mime\n    });\n  }\n\n  handleFormButtonClick(e) {\n    e.preventDefault();\n    const data = {\n      seq: this.props.seq\n    };\n    data.resp = {};\n    if (e.target.dataset.name) {\n      data.resp[e.target.dataset.name] = e.target.dataset.val ? e.target.dataset.val :\n        e.target.dataset.val === undefined ? 1 : '' + e.target.dataset.val;\n    }\n    if (e.target.dataset.act == 'url') {\n      data.ref = sanitizeUrl(e.target.dataset.ref) || 'about:blank';\n    }\n    const text = e.target.dataset.title || 'unknown';\n    this.props.onFormResponse(e.target.dataset.act, text, data);\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ seq: this.props.seq, y: e.pageY, x: e.pageX });\n  }\n\n  handleProgress(ratio) {\n    this.setState({progress: ratio});\n  }\n\n  handleCancelUpload() {\n    this.props.uploader.cancel();\n  }\n\n  render() {\n    const sideClass = this.props.sequence + ' ' + (this.props.response ? 'left' : 'right');\n    const bubbleClass = (this.props.sequence == 'single' || this.props.sequence == 'last') ?\n      'bubble tip' : 'bubble';\n    const avatar = this.props.userAvatar || true;\n    const fullDisplay = (this.props.userFrom && this.props.response &&\n      (this.props.sequence == 'single' || this.props.sequence == 'last'));\n\n    let content = this.props.content;\n    const attachments = [];\n    if (this.props.mimeType == Drafty.getContentType()) {\n      Drafty.attachments(content, function(att, i) {\n        if (att.mime == 'application/json') {\n          // Don't show json objects as attachments.\n          // They are not meant for users.\n          return;\n        }\n        attachments.push(<Attachment\n          tinode={this.props.tinode}\n          downloadUrl={Drafty.getDownloadUrl(att)}\n          filename={att.name} uploader={Drafty.isUploading(att)}\n          mimetype={att.mime} size={Drafty.getEntitySize(att)}\n          progress={this.state.progress}\n          onCancelUpload={this.handleCancelUpload}\n          onError={this.props.onError}\n          key={i} />);\n      }, this);\n      content = React.createElement('span', null, Drafty.format(content, draftyFormatter, this));\n    } else if (typeof content != 'string') {\n      content = <><i className=\"material-icons\">error_outline</i> <i>\n        <FormattedMessage id=\"invalid_content\"\n          defaultMessage=\"invalid content\" description=\"Shown when message is unreadable\" />\n      </i></>\n    }\n\n    return (\n      <li className={sideClass}>\n        {this.props.userFrom && this.props.response ?\n          <div className=\"avatar-box\">\n            {fullDisplay ?\n              <LetterTile\n                topic={this.props.userFrom}\n                title={this.props.userName}\n                avatar={avatar} /> :\n              null}\n          </div> :\n          null}\n        <div>\n          <div className={bubbleClass}>\n            <div className=\"message-content\">\n              {content}\n              {attachments}\n              <ReceivedMarker\n                timestamp={this.props.timestamp}\n                received={this.props.received} />\n            </div>\n            <span className=\"menuTrigger\">\n              <a href=\"#\" onClick={this.handleContextClick}>\n                <i className=\"material-icons\">expand_more</i>\n              </a>\n            </span>\n          </div>\n          {fullDisplay ?\n            <div className=\"author\">\n              <FormattedMessage id=\"user_not_found\" defaultMessage=\"Not found\"\n                description=\"In place of a user's full name when the user is not found.\">{\n                    (notFound) => {return this.props.userName || <i>{notFound}</i>}\n              }</FormattedMessage>\n            </div>\n            : null\n          }\n        </div>\n      </li>\n    );\n  }\n};\n\n// Convert Drafty object to a tree of React elements.\nimport { BROKEN_IMAGE_SIZE, REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\n\nfunction draftyFormatter(style, data, values, key) {\n  let el = Drafty.tagName(style);\n  if (el) {\n    let attr = Drafty.attrValue(style, data) || {};\n    attr.key = key;\n    switch (style) {\n      case 'IM':\n        // Additional processing for images\n        if (data) {\n          attr.className = 'inline-image';\n          let dim = fitImageSize(data.width, data.height,\n            Math.min(this.props.viewportWidth - REM_SIZE * 4, REM_SIZE * 36), REM_SIZE * 24, false);\n          dim = dim || {dstWidth: BROKEN_IMAGE_SIZE, dstHeight: BROKEN_IMAGE_SIZE};\n          attr.style = { width: dim.dstWidth + 'px', height: dim.dstHeight + 'px' };\n          attr.src = sanitizeImageUrl(attr.src);\n          if (attr.src) {\n            attr.onClick = this.handlePreviewImage;\n            attr.className += ' image-clickable';\n          } else {\n            attr.src = 'img/broken_image.png';\n          }\n        }\n        break;\n      case 'BN':\n        // Button\n        attr.onClick = this.handleFormButtonClick;\n        let inner = React.Children.map(values, (child) => {\n          return typeof child == 'string' ? child : undefined;\n        });\n        if (!inner || inner.length == 0) {\n          inner = [attr.name]\n        }\n        // Get text which will be sent back when the button is clicked.\n        attr['data-title'] = inner.join('');\n        break;\n      case 'FM':\n        // Form\n        attr.className = 'bot-form';\n        break;\n      case 'FE':\n        // Form element formatting is dependent on element content.\n        break;\n    }\n    return React.createElement(el, attr, values);\n  } else {\n    return values;\n  }\n};\n","// GroupSubs: a list of group subscribers currently online.\n// Show in the topic title bar\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { MAX_ONLINE_IN_TOPIC } from '../config.js'\n\nimport LetterTile from './letter-tile.jsx';\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class GroupSubs extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const usersOnline = [];\n    const totalCount = (this.props.subscribers || []).length;\n    const countToShow = Math.min(MAX_ONLINE_IN_TOPIC, totalCount);\n\n    (this.props.subscribers || []).some((sub) => {\n      usersOnline.push(\n        <div className=\"avatar-box\" key={sub.user}>\n          <LetterTile\n            topic={sub.user}\n            avatar={makeImageUrl(sub.public ? sub.public.photo : null) || true}\n            title={sub.public ? sub.public.fn : null} />\n        </div>\n      );\n      return usersOnline.length == countToShow;\n    });\n\n    return (\n      <div id=\"topic-users\">{usersOnline} {totalCount > countToShow ?\n        <span>\n          <FormattedMessage id=\"more_online_members\" defaultMessage=\"+{overflow} more\"\n              description=\"Shown in MessagesView title bar when the number of online subscribers exceeds MAX_ONLINE_IN_TOPIC\"\n              values={{ overflow: (totalCount - countToShow) }} />\n        </span> : null}\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\nimport { bytesToHumanSize } from '../lib/strformat.js';\n\nexport default class ImagePreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      width: 0,\n      height: 0\n    };\n  }\n\n  assignWidth(node) {\n    if (node && !this.state.width) {\n      const bounds = node.getBoundingClientRect();\n      this.setState({\n        width: bounds.width | 0,\n        height: bounds.height | 0\n      });\n    }\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n\n    const dim = fitImageSize(this.props.content.width, this.props.content.height,\n      this.state.width, this.state.height, false);\n    const size = dim ? { width: dim.dstWidth + 'px', height: dim.dstHeight + 'px' } :\n      ((this.props.content.width > this.props.content.height) ? {width: '100%'} : {height: '100%'});\n    size.maxWidth = '100%';\n    size.maxHeight = '100%';\n\n    let filename = this.props.content.filename;\n    // Averate font aspect ratio is ~0.5; File name takes 1/3 of the viewport width.\n    const maxlength = Math.max(((this.state.width / REM_SIZE / 1.5) | 0) - 2, 12);\n    if (filename.length > maxlength) {\n      filename = filename.slice(0, maxlength/2 - 1) + '...' + filename.slice(1 - maxlength/2);\n    }\n    const width = this.props.content.width || '-';\n    const height = this.props.content.height || '-';\n    return (\n      <div id=\"image-preview\" onClick={this.props.onClose}>\n        <div id=\"image-preview-caption-panel\">\n          <a href={this.props.content.url} download={this.props.content.filename}>\n            <i className=\"material-icons\">file_download</i> <FormattedMessage\n              id=\"download_action\" defaultMessage=\"download\" description=\"Call to action [download]\" />\n          </a>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\" ref={(node) => this.assignWidth(node)}>\n          <img src={this.props.content.url} style={size} />\n        </div>\n        <div id=\"image-preview-footer\">\n          <div>\n            <div><b><FormattedMessage id=\"label_file_name\" defaultMessage=\"File name:\"\n              description=\"Label for a file name\" /></b></div>\n            <div><span title={this.props.content.filename}>{filename ? filename : '-'}</span></div>\n          </div>\n          <div>\n            <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n              description=\"Label for file content type (mime)\" /></b></div>\n            <div>{this.props.content.type}</div>\n          </div>\n          <div>\n            <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n              description=\"Label for file size\" /></b></div>\n            <div>{width} &times; {height} px; {bytesToHumanSize(this.props.content.size)}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Invitation extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleButtonAction = this.handleButtonAction.bind(this);\n  }\n\n  handleButtonAction(evt, data) {\n    evt.preventDefault();\n    this.props.onAction(data);\n  }\n\n  render() {\n    return (\n      <div className=\"accept-invite-panel\">\n        <div className=\"title\">\n          <FormattedMessage id=\"chat_invitation\"\n            defaultMessage=\"You are invited to start a new chat. What would you like to do?\"\n            description=\"New chat invitation message: [Accept] [Ignore] [Block].\" />\n        </div>\n        <div className=\"footer\">\n          <button className=\"blue\" onClick={event => { this.handleButtonAction(event, \"accept\"); }}>\n            <FormattedMessage id=\"chat_invitation_accept\"\n              defaultMessage=\"Accept\" description=\"Action [Accept] for chat invitation.\" />\n          </button>\n          <button className=\"white\" onClick={event => { this.handleButtonAction(event, \"delete\"); }}>\n            <FormattedMessage id=\"chat_invitation_ignore\"\n              defaultMessage=\"Ignore\" description=\"Action [Ignore] for chat invitation.\" />\n          </button>\n          <button className=\"white\" onClick={event => { this.handleButtonAction(event, \"block\"); }}>\n            <FormattedMessage id=\"chat_invitation_block\"\n              defaultMessage=\"Block\" description=\"Action [Block] for chat invitation.\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nexport default class LoadSpinner extends React.PureComponent {\n  render() {\n    return (this.props.show ?\n      <div className=\"load-spinner-box\"><div className=\"loader-spinner\"></div></div> : null);\n  }\n}\n","/* This is just a static page to display when no conversation is selected. */\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME } from '../config.js';\n\nexport default class LogoView extends React.PureComponent {\n  render() {\n    var version = APP_NAME + ' (' + Tinode.getLibrary() + ')';\n    return (\n      <div id=\"dummy-view\" className={this.props.hideSelf ? 'nodisplay' : null}>\n        <div>\n          <a href=\"https://github.com/tinode/chat/\">\n            <img id=\"logo\" alt=\"logo\" src=\"img/logo.svg\" />\n            <h2>Tinode Web</h2>\n          </a>\n          <p><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\" /> {version}</p>\n          <p><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\" /> {this.props.serverVersion} ({this.props.serverAddress})</p>\n        </div>\n      </div>\n    );\n  }\n};\n","// Send message form.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport { KEYPRESS_DELAY, MAX_EXTERN_ATTACHMENT_SIZE, MAX_IMAGE_DIM, MAX_INBAND_ATTACHMENT_SIZE } from '../config.js';\nimport { SUPPORTED_IMAGE_FORMATS, filePasted, fileToBase64, imageFileToBase64, imageFileScaledToBase64 } from '../lib/blob-helpers.js';\nimport { bytesToHumanSize } from '../lib/strformat.js';\n\nconst messages = defineMessages({\n  'messaging_disabled': {\n    id: 'messaging_disabled_prompt',\n    defaultMessage: 'Messaging disabled',\n    description: 'Prompt in SendMessage in read-only topic'\n  },\n  'type_new_message': {\n    id: 'new_message_prompt',\n    defaultMessage: 'New message',\n    description: 'Prompt in SendMessage in read-only topic'\n  },\n  'file_attachment_too_large': {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  },\n  'cannot_initiate_upload': {\n    id: 'cannot_initiate_file_upload',\n    defaultMessage: 'Cannot initiate file upload.',\n    description: 'Generic error messagewhen attachment fails'\n  },\n});\n\nclass SendMessage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      message: '',\n      // Make initial keypress time as if it happened 5001 milliseconds in the past.\n      keypressTimestamp: new Date().getTime() - KEYPRESS_DELAY - 1\n    };\n\n    this.handlePasteEvent = this.handlePasteEvent.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleSend = this.handleSend.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleMessageTyping = this.handleMessageTyping.bind(this);\n  }\n\n  componentDidMount() {\n    this.messageEditArea.addEventListener('paste', this.handlePasteEvent, false);\n  }\n\n  componentWillUnmount() {\n    this.messageEditArea.removeEventListener('paste', this.handlePasteEvent, false);\n  }\n\n  componentDidUpdate() {\n    this.messageEditArea.focus();\n  }\n\n  handlePasteEvent(e) {\n    if (this.props.disabled) {\n      return;\n    }\n    // FIXME: handle large files too.\n    if (filePasted(e,\n      (bits, mime, width, height, fname) => {\n        this.props.sendMessage(Drafty.insertImage(null,\n          0, mime, bits, width, height, fname));\n      },\n      (mime, bits, fname) => {\n        this.props.sendMessage(Drafty.attachFile(null, mime, bits, fname));\n      },\n      this.props.onError)) {\n\n      // If a file was pasted, don't paste base64 data into input field.\n      e.preventDefault();\n    }\n  }\n\n  handleAttachImage(e) {\n    if (e.target.files && e.target.files.length > 0) {\n      const file = e.target.files[0];\n      // Check if the uploaded file is indeed an image and if it isn't too large.\n      if (file.size > MAX_INBAND_ATTACHMENT_SIZE || SUPPORTED_IMAGE_FORMATS.indexOf(file.type) < 0) {\n        // Convert image for size or format.\n        imageFileScaledToBase64(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, false,\n          // Success\n          (bits, mime, width, height, fname) => {\n            this.props.sendMessage(Drafty.insertImage(null,\n              0, mime, bits, width, height, fname));\n          },\n          // Failure\n          (err) => {\n            this.props.onError(err, 'err');\n          });\n      } else {\n        // Image can be uploaded as is. No conversion is needed.\n        imageFileToBase64(file,\n          // Success\n          (bits, mime, width, height, fname) => {\n            this.props.sendMessage(Drafty.insertImage(null,\n              0, mime, bits, width, height, fname));\n          },\n          // Failure\n          (err) => {\n            this.props.onError(err, 'err');\n          }\n        );\n      }\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleAttachFile(e) {\n    const {formatMessage} = this.props.intl;\n    if (e.target.files && e.target.files.length > 0) {\n      const file = e.target.files[0];\n      if (file.size > MAX_EXTERN_ATTACHMENT_SIZE) {\n        // Too large.\n        this.props.onError(formatMessage(messages.file_attachment_too_large,\n            {size: bytesToHumanSize(file.size), limit: bytesToHumanSize(MAX_EXTERN_ATTACHMENT_SIZE)}), 'err');\n      } else if (file.size > MAX_INBAND_ATTACHMENT_SIZE) {\n        // Too large to send inband - uploading out of band and sending as a link.\n        const uploader = this.props.tinode.getLargeFileHelper();\n        if (!uploader) {\n          this.props.onError(formatMessage(messages.cannot_initiate_upload));\n          return;\n        }\n        // Format data and initiate upload.\n        const uploadCompletionPromise = uploader.upload(file);\n        const msg = Drafty.attachFile(null, file.type, null, file.name, file.size, uploadCompletionPromise);\n        // Pass data and the uploader to the TinodeWeb.\n        this.props.sendMessage(msg, uploadCompletionPromise, uploader);\n      } else {\n        // Small enough to send inband.\n        fileToBase64(file,\n          (mime, bits, fname) => {\n            this.props.sendMessage(Drafty.attachFile(null, mime, bits, fname));\n          },\n          this.props.onError\n        );\n      }\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleSend(e) {\n    e.preventDefault();\n    const message = this.state.message.trim();\n    if (message) {\n      this.props.sendMessage(this.state.message.trim());\n      this.setState({message: ''});\n    }\n  }\n\n  /* Send on Enter key */\n  handleKeyPress(e) {\n    // Remove this if you don't want Enter to trigger send\n    if (e.key === 'Enter') {\n      // Have Shift-Enter insert a line break instead\n      if (!e.shiftKey) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.handleSend(e);\n      }\n    }\n  }\n\n  handleMessageTyping(e) {\n    const newState = {message: e.target.value};\n    const now = new Date().getTime();\n    if (now - this.state.keypressTimestamp > KEYPRESS_DELAY) {\n      const topic = this.props.tinode.getTopic(this.props.topic);\n      if (topic.isSubscribed()) {\n        topic.noteKeyPress();\n      }\n      newState.keypressTimestamp = now;\n    }\n    this.setState(newState);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const prompt = this.props.disabled ?\n      formatMessage(messages.messaging_disabled) :\n      formatMessage(messages.type_new_message);\n    return (\n      <div id=\"send-message-panel\">\n        {this.props.disabled ?\n          <i className=\"material-icons disabled\">photo</i> :\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachImage.click();}} title=\"Add image\">\n            <i className=\"material-icons secondary\">photo</i>\n          </a>}\n        {this.props.disabled ?\n          <i className=\"material-icons disabled\">attach_file</i> :\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachFile.click();}} title=\"Attach file\">\n            <i className=\"material-icons secondary\">attach_file</i>\n          </a>}\n        <textarea id=\"sendMessage\" placeholder={prompt}\n          disabled={this.props.disabled} value={this.state.message}\n          onChange={this.handleMessageTyping} onKeyPress={this.handleKeyPress}\n          ref={(ref) => {this.messageEditArea = ref;}}\n          autoFocus />\n          {this.props.disabled ?\n            <i className=\"material-icons disabled\">send</i> :\n            <a href=\"#\" onClick={this.handleSend} title=\"Send\">\n              <i className=\"material-icons\">send</i>\n            </a>}\n      <input type=\"file\" ref={(ref) => {this.attachFile = ref;}}\n        onChange={this.handleAttachFile} style={{display: 'none'}} />\n      <input type=\"file\" ref={(ref) => {this.attachImage = ref;}} accept=\"image/*\"\n        onChange={this.handleAttachImage} style={{display: 'none'}} />\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SendMessage);\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\nconst Drafty = Tinode.Drafty;\n\nimport ChatMessage from '../widgets/chat-message.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupSubs from '../widgets/group-subs.jsx';\nimport ImagePreview from '../widgets/image-preview.jsx';\nimport Invitation from '../widgets/Invitation.jsx';\nimport LetterTile from '../widgets/letter-tile.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport LogoView from './logo-view.jsx';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { DEFAULT_P2P_ACCESS_MODE, KEYPRESS_DELAY, MESSAGES_PAGE } from '../config.js';\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { shortDateFormat } from '../lib/strformat.js';\n\nconst messages = defineMessages({\n  online_now: {\n    id: 'online_now',\n    defaultMessage: 'online now',\n    description: 'Indicator that the user or topic is currently online',\n  },\n  last_seen: {\n    id: 'last_seen_timestamp',\n    defaultMessage: 'Last seen',\n    description: 'Label for the timestamp of when the user or topic was last online'\n  },\n  'not_found': {\n    id: 'title_not_found',\n    defaultMessage: 'Not found',\n    description: 'Title shown when topic is not found'\n  }\n});\n\n// Checks if the access permissions are granted but not yet accepted.\nfunction isUnconfirmed(acs) {\n  if (acs) {\n    const ex = acs.getExcessive() || '';\n    return acs.isJoiner('given') && (ex.includes('R') || ex.includes('W'));\n  }\n  return false;\n}\n\nfunction isPeerRestricted(acs) {\n  if (acs) {\n    const ms = acs.getMissing() || '';\n    return acs.isJoiner('want') && (ms.includes('R') || ms.includes('W'));\n  }\n  return false;\n}\n\nclass MessagesView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = MessagesView.getDerivedStateFromProps(props, {});\n\n    // this.propsChange = this.propsChange.bind(this);\n    this.leave = this.leave.bind(this);\n    this.handleScrollReference = this.handleScrollReference.bind(this);\n    this.handleScrollEvent = this.handleScrollEvent.bind(this);\n    this.handleDescChange = this.handleDescChange.bind(this);\n    this.handleSubsUpdated = this.handleSubsUpdated.bind(this);\n    this.handleNewMessage = this.handleNewMessage.bind(this);\n    this.handleAllMessagesReceived = this.handleAllMessagesReceived.bind(this);\n    this.handleInfoReceipt = this.handleInfoReceipt.bind(this);\n    this.handleImagePreview = this.handleImagePreview.bind(this);\n    this.handleCloseImagePreview = this.handleCloseImagePreview.bind(this);\n    this.handleFormResponse = this.handleFormResponse.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleShowContextMenuMessage = this.handleShowContextMenuMessage.bind(this);\n    this.handleNewChatAcceptance = this.handleNewChatAcceptance.bind(this);\n    this.handleEnablePeer = this.handleEnablePeer.bind(this);\n  }\n\n  componentDidMount() {\n    // this.propsChange(this.props, this.state);\n    if (this.messagesScroller) {\n      this.messagesScroller.addEventListener('scroll', this.handleScrollEvent);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messagesScroller) {\n      this.messagesScroller.removeEventListener('scroll', this.handleScrollEvent);\n    }\n  }\n\n  // Scroll last message into view on component update e.g. on message received\n  // or vertical shrinking.\n  componentDidUpdate(prevProps, prevState) {\n    if (this.messagesScroller) {\n      if (prevState.topic != this.state.topic || prevState.messages.length != this.state.messages.length) {\n        this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n      } else if (prevProps.viewportHeight > this.props.viewportHeight) {\n        this.messagesScroller.scrollTop += prevProps.viewportHeight - this.props.viewportHeight;\n      }\n    }\n\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (this.state.topic != prevState.topic) {\n      if (prevState.topic && !Tinode.isNewGroupTopicName(prevState.topic)) {\n        this.leave(prevState.topic);\n        this.props.readTimerHandler(null);\n      }\n\n      if (topic) {\n        topic.onData = this.handleNewMessage;\n        topic.onAllMessagesReceived = this.handleAllMessagesReceived;\n        topic.onInfo = this.handleInfoReceipt;\n        topic.onMetaDesc = this.handleDescChange;\n        topic.onSubsUpdated = this.handleSubsUpdated;\n        topic.onPres = this.handleSubsUpdated;\n      }\n    }\n\n    if (topic && !topic.isSubscribed() && this.props.ready &&\n        ((this.state.topic != prevState.topic) || !prevProps.ready)) {\n      // Is this a new topic?\n      const newTopic = (this.props.newTopicParams && this.props.newTopicParams._topicName == this.props.topic);\n\n      // Don't request the tags. They are useless unless the user\n      // is the owner and is editing the topic.\n      let getQuery = topic.startMetaQuery().withLaterDesc().withLaterSub();\n      if (this.state.isReader || newTopic) {\n        // If reading is either permitted or we don't know because it's a new topic. Ask for messages.\n        getQuery = getQuery.withLaterData(MESSAGES_PAGE);\n        if (this.state.isReader) {\n          getQuery = getQuery.withLaterDel();\n        }\n        // And show \"loading\" spinner.\n        this.setState({ fetchingMessages: true });\n      }\n      const setQuery = newTopic ? this.props.newTopicParams : undefined;\n      topic.subscribe(getQuery.build(), setQuery)\n        .then((ctrl) => {\n          if (this.state.topic != ctrl.topic) {\n            this.setState({topic: ctrl.topic});\n          }\n          this.props.onNewTopicCreated(this.props.topic, ctrl.topic);\n          // If there are unsent messages, try sending them now.\n          topic.queuedMessages((pub) => {\n            if (!pub._sending && topic.isSubscribed()) {\n              topic.publishMessage(pub);\n            }\n          });\n        })\n        .catch((err) => {\n          console.log(\"Failed subscription to\", this.state.topic);\n          this.props.onError(err.message, 'err');\n          const blankState = MessagesView.getDerivedStateFromProps({}, {});\n          blankState.title = this.props.intl.formatMessage(messages.not_found);\n          this.setState(blankState);\n        });\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let nextState = {};\n    if (!nextProps.topic) {\n      // Default state: no topic.\n      nextState = {\n        messages: [],\n        onlineSubs: [],\n        topic: null,\n        title: '',\n        avatar: null,\n        imagePreview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false,\n        peerMessagingDisabled: false\n      };\n    } else if (nextProps.topic != prevState.topic) {\n      const topic = nextProps.tinode.getTopic(nextProps.topic);\n      nextState = {\n        topic: nextProps.topic,\n        imagePreview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false\n      };\n\n      if (topic) {\n        // Topic exists.\n        const msgs = [];\n        const subs = [];\n\n        if (nextProps.connected) {\n          topic.subscribers((sub) => {\n            if (sub.online && sub.user != nextProps.myUserId) {\n              subs.push(sub);\n            }\n          });\n        }\n\n        topic.messages(function(msg) {\n          if (!msg.deleted) {\n            msgs.push(msg);\n          }\n        });\n\n        Object.assign(nextState, {\n          messages: msgs,\n          onlineSubs: subs\n        });\n\n        if (topic.public) {\n          Object.assign(nextState, {\n            title: topic.public.fn,\n            avatar: makeImageUrl(topic.public.photo)\n          });\n        } else {\n          Object.assign(nextState, {\n            title: '',\n            avatar: null\n          });\n        }\n\n        const peer = topic.p2pPeerDesc();\n        if (peer) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: isPeerRestricted(peer.acs)\n          });\n        } else if (prevState.peerMessagingDisabled) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: false\n          });\n        }\n      } else {\n        // Invalid topic.\n        Object.assign(nextState, {\n          messages: [],\n          onlineSubs: [],\n          title: '',\n          avatar: null,\n          peerMessagingDisabled: false\n        });\n      }\n    }\n\n    if (nextProps.acs) {\n      if (nextProps.acs.isWriter() != prevState.isWriter) {\n        nextState.isWriter = !prevState.isWriter;\n      }\n      if (nextProps.acs.isReader() != prevState.isReader) {\n        nextState.isReader = !prevState.isReader;\n      }\n      if (!nextProps.acs.isReader('given') != prevState.readingBlocked) {\n        nextState.readingBlocked = !prevState.readingBlocked;\n      }\n    } else {\n      if (prevState.isWriter) {\n        nextState.isWriter = false;\n      }\n      if (prevState.isReader) {\n        nextState.isReader = false;\n      }\n      if (!prevState.readingBlocked) {\n        prevState.readingBlocked = true;\n      }\n    }\n\n    if (isUnconfirmed(nextProps.acs) == !prevState.unconformed) {\n      nextState.unconfirmed = !prevState.unconformed;\n    }\n\n    // Clear subscribers online when there is no connection.\n    if (!nextProps.connected && prevState.onlineSubs && prevState.onlineSubs.length > 0) {\n      nextState.onlineSubs = [];\n    }\n\n    return nextState;\n  }\n\n  leave(oldTopicName) {\n    if (!oldTopicName) {\n      return;\n    }\n    let oldTopic = this.props.tinode.getTopic(oldTopicName);\n    if (oldTopic && oldTopic.isSubscribed()) {\n      oldTopic.leave(false)\n        .catch(() => { /* do nothing here */ })\n        .finally(() => {\n          // We don't care if the request succeeded or failed.\n          // The topic is dead regardless.\n          this.setState({fetchingMessages: false});\n          oldTopic.onData = undefined;\n          oldTopic.onAllMessagesReceived = undefined;\n          oldTopic.onInfo = undefined;\n          oldTopic.onMetaDesc = undefined;\n          oldTopic.onSubsUpdated = undefined;\n          oldTopic.onPres = undefined;\n        });\n    }\n  }\n\n  handleScrollReference(node) {\n    if (node) {\n      node.addEventListener('scroll', this.handleScrollEvent);\n      this.messagesScroller = node;\n    }\n  }\n\n  // Get older messages\n  handleScrollEvent(event) {\n    this.setState({scrollPosition: event.target.scrollHeight - event.target.scrollTop});\n    if (event.target.scrollTop <= 0) {\n      this.setState((prevState, props) => {\n        const newState = {};\n        if (!prevState.fetchingMessages) {\n          const topic = this.props.tinode.getTopic(this.state.topic);\n          if (topic && topic.isSubscribed() && topic.msgHasMoreMessages()) {\n            newState.fetchingMessages = true;\n            topic.getMessagesPage(MESSAGES_PAGE).catch((err) => {\n              this.setState({fetchingMessages: false});\n              this.props.onError(err.message, 'err');\n            });\n          }\n        }\n        return newState;\n      });\n    }\n  }\n\n  handleDescChange(desc) {\n    if (desc.public) {\n      this.setState({\n        title: desc.public.fn,\n        avatar: makeImageUrl(desc.public.photo)\n      });\n    } else {\n      this.setState({\n        title: '',\n        avatar: null\n      });\n    }\n\n    if (desc.acs) {\n      this.setState({\n        isWriter: desc.acs.isWriter(),\n        isReader: desc.acs.isReader(),\n        readingBlocked: !desc.acs.isReader('given'),\n        unconfirmed: isUnconfirmed(desc.acs),\n      });\n    }\n  }\n\n  handleSubsUpdated() {\n    if (this.state.topic) {\n      const subs = [];\n      const topic = this.props.tinode.getTopic(this.state.topic);\n      topic.subscribers((sub) => {\n        if (sub.online && sub.user != this.props.myUserId) {\n          subs.push(sub);\n        }\n      });\n      const newState = {onlineSubs: subs};\n      const peer = topic.p2pPeerDesc();\n      if (peer) {\n        Object.assign(newState, {\n          peerMessagingDisabled: isPeerRestricted(peer.acs)\n        });\n      } else if (this.state.peerMessagingDisabled) {\n        Object.assign(newState, {\n          peerMessagingDisabled: false\n        });\n      }\n      this.setState(newState);\n    }\n  }\n\n  handleNewMessage(msg) {\n    // Regenerate messages list\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    const newState = {messages: []};\n    topic.messages((m) => {\n      if (!m.deleted) {\n        newState.messages.push(m);\n      }\n    });\n\n    // msg could be null if one or more messages were deleted.\n    if (msg && !msg.deleted) {\n      // If the message is added to the end of the message list,\n      // scroll to the bottom.\n      if (topic.isNewMessage(msg.seq)) {\n        newState.scrollPosition = 0;\n      }\n\n      // Aknowledge messages except own messages. They are\n      // automatically assumed to be read and recived.\n      const status = topic.msgStatus(msg);\n      if (status >= Tinode.MESSAGE_STATUS_SENT && msg.from != this.props.myUserId) {\n        this.props.readTimerHandler(() => {\n          topic.noteRead(msg.seq);\n        });\n      }\n      this.props.onData(msg);\n    }\n    this.setState(newState);\n  }\n\n  handleAllMessagesReceived(count) {\n    this.setState({fetchingMessages: false});\n  }\n\n  handleInfoReceipt(info) {\n    switch (info.what) {\n      case 'kp': {\n        clearTimeout(this.keyPressTimer);\n        var instance = this;\n        this.keyPressTimer = setTimeout(function() {\n          instance.setState({typingIndicator: false});\n        }, KEYPRESS_DELAY + 1000);\n        if (!this.state.typingIndicator) {\n          this.setState({typingIndicator: true});\n        }\n        break;\n      }\n      case 'read':\n      case 'recv':\n        // Redraw due to changed recv/read status.\n        this.forceUpdate();\n        break;\n      default:\n        console.log(\"Other change in topic: \", info.what);\n    }\n  }\n\n  handleImagePreview(content) {\n    this.setState({ imagePreview: content });\n  }\n\n  handleCloseImagePreview() {\n    this.setState({ imagePreview: null });\n  }\n\n  handleFormResponse(action, text, data) {\n    if (action == 'pub') {\n      this.props.sendMessage(Drafty.attachJSON(Drafty.parse(text), data));\n    } else if (action == 'url') {\n      const url = new URL(data.ref);\n      const params = url.searchParams;\n      for (let key in data.resp) {\n        if (data.resp.hasOwnProperty(key)) {\n          params.set(key, data.resp[key]);\n        }\n      }\n      ['name', 'seq'].map(function(key) {\n        if (data[key]) {\n          params.set(key, data[key]);\n        }\n      });\n      params.set('uid', this.props.myUserId);\n      url.search = params;\n      window.open(url, '_blank');\n    } else {\n      console.log(\"Unknown action in form\", action);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.state.topic, y: e.pageY, x: e.pageX });\n  }\n\n  handleShowContextMenuMessage(params) {\n    params.topicName = this.state.topic;\n    const menuItems = ['message_delete'];\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (topic) {\n      const acs = topic.getAccessMode();\n      if (acs && acs.isDeleter()) {\n        menuItems.push('message_delete_hard');\n      }\n    }\n    this.props.showContextMenu(params, menuItems);\n  }\n\n  handleNewChatAcceptance(action) {\n    this.props.onNewChat(this.state.topic, action);\n  }\n\n  handleEnablePeer(e) {\n    e.preventDefault();\n    this.props.onChangePermissions(this.state.topic, DEFAULT_P2P_ACCESS_MODE, this.state.topic);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n\n    let component;\n    if (this.state.topic) {\n      const topic = this.props.tinode.getTopic(this.state.topic);\n      const groupTopic = topic.getType() == 'grp';\n      let messageNodes = [];\n      let previousFrom = null;\n      let chatBoxClass = null;\n      for (let i=0; i<this.state.messages.length; i++) {\n        let msg = this.state.messages[i];\n        let nextFrom = null;\n\n        if (i + 1 < this.state.messages.length) {\n          nextFrom = this.state.messages[i+1].from\n        }\n\n        let sequence = 'single';\n        if (msg.from == previousFrom) {\n          if (msg.from == nextFrom) {\n            sequence = 'middle';\n          } else {\n            sequence = 'last';\n          }\n        } else if (msg.from == nextFrom) {\n          sequence = 'first';\n        }\n        previousFrom = msg.from;\n\n        const isReply = !(msg.from == this.props.myUserId);\n        const deliveryStatus = topic.msgStatus(msg);\n\n        let userName, userAvatar, userFrom;\n        if (groupTopic) {\n          const user = topic.userDesc(msg.from);\n          if (user && user.public) {\n            userName = user.public.fn;\n            userAvatar = makeImageUrl(user.public.photo);\n          }\n          userFrom = msg.from;\n          chatBoxClass='chat-box group';\n        } else {\n          chatBoxClass='chat-box';\n        }\n\n        messageNodes.push(\n          <ChatMessage\n            tinode={this.props.tinode}\n            content={msg.content}\n            mimeType={msg.head ? msg.head.mime : null}\n            timestamp={msg.ts} response={isReply} seq={msg.seq}\n            userFrom={userFrom} userName={userName} userAvatar={userAvatar}\n            sequence={sequence} received={deliveryStatus} uploader={msg._uploader}\n            viewportWidth={this.props.viewportWidth}\n            showContextMenu={this.handleShowContextMenuMessage}\n            onImagePreview={this.handleImagePreview}\n            onFormResponse={this.handleFormResponse}\n            onError={this.props.onError}\n            key={msg.seq} />\n        );\n      }\n\n      let lastSeen = null;\n      const cont = this.props.tinode.getMeTopic().getContact(this.state.topic);\n      if (cont && Tinode.topicType(cont.topic) == 'p2p') {\n        if (cont.online) {\n          lastSeen = formatMessage(messages.online_now);\n        } else if (cont.seen) {\n          lastSeen = formatMessage(messages.last_seen) + \": \" +\n            shortDateFormat(cont.seen.when, this.props.intl.locale);\n          // TODO: also handle user agent in c.seen.ua\n        }\n      }\n      const avatar = this.state.avatar || true;\n      const online = this.props.online ? 'online' + (this.state.typingIndicator ? ' typing' : '') : 'offline';\n\n      component = (\n        <div id=\"topic-view\" className={this.props.hideSelf ? 'nodisplay' : null}>\n          <div id=\"topic-caption-panel\" className=\"caption-panel\">\n            {this.props.displayMobile ?\n              <a href=\"#\" id=\"hide-message-view\" onClick={(e) => {e.preventDefault(); this.props.onHideMessagesView();}}>\n                <i className=\"material-icons\">arrow_back</i>\n              </a>\n              :\n              null}\n            <div className=\"avatar-box\">\n              <LetterTile\n                avatar={avatar}\n                topic={this.state.topic}\n                title={this.state.title} />\n              <span className={online} />\n            </div>\n            <div id=\"topic-title-group\">\n              <div id=\"topic-title\" className=\"panel-title\">{\n                this.state.title ||\n                <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n                  description=\"Title shown when the topic has no name\" /></i>\n              }</div>\n              <div id=\"topic-last-seen\">{lastSeen}</div>\n            </div>\n            {groupTopic ?\n              <GroupSubs\n                subscribers={this.state.onlineSubs} /> :\n              <div id=\"topic-users\" />\n            }\n            <div>\n              <a href=\"#\" onClick={this.handleContextClick}>\n                <i className=\"material-icons\">more_vert</i>\n              </a>\n            </div>\n          </div>\n          {this.props.displayMobile ?\n            <ErrorPanel\n              level={this.props.errorLevel}\n              text={this.props.errorText}\n              onClearError={this.props.onError} />\n            : null}\n          <LoadSpinner show={this.state.fetchingMessages} />\n          <div id=\"messages-container\">\n            <div id=\"messages-panel\" ref={this.handleScrollReference}>\n              <ul id=\"scroller\" className={chatBoxClass}>\n                {messageNodes}\n              </ul>\n            </div>\n            {!this.state.isReader ?\n            <div id=\"write-only-background\">\n              {this.state.readingBlocked ?\n              <div id=\"write-only-note\">\n                <FormattedMessage id=\"messages_not_readable\" defaultMessage=\"no access to messages\"\n                  description=\"Message shown in topic without the read access\" />\n              </div>\n              : null }\n            </div>\n            : null }\n          </div>\n          {this.state.peerMessagingDisabled && !this.state.unconfirmed ?\n            <div id=\"peer-messaging-disabled-note\">\n              <i className=\"material-icons secondary\">block</i> <FormattedMessage\n                id=\"peers_messaging_disabled\" defaultMessage=\"Peer's messaging is disabled.\"\n                description=\"Shown when the p2p peer's messaging is disabled\" /> <a href=\"#\"\n                  onClick={this.handleEnablePeer}><FormattedMessage id=\"enable_peers_messaging\"\n                  defaultMessage=\"Enable\" description=\"Call to action to enable peer's messaging\" /></a>.\n            </div> : null}\n          {this.state.unconfirmed ?\n            <Invitation onAction={this.handleNewChatAcceptance} />\n            :\n            <SendMessage\n              tinode={this.props.tinode}\n              topic={this.props.topic}\n              disabled={!this.state.isWriter}\n              sendMessage={this.props.sendMessage}\n              onError={this.props.onError} />}\n          {this.state.imagePreview ?\n            <ImagePreview content={this.state.imagePreview}\n              onClose={this.handleCloseImagePreview} /> : null}\n        </div>\n      );\n    } else {\n      component = (\n        <LogoView hideSelf={this.props.hideSelf}\n          serverVersion={this.props.serverVersion}\n          serverAddress={this.props.serverAddress} />\n      );\n    }\n    return component;\n  }\n};\n\nexport default injectIntl(MessagesView);\n","import React from 'react';\n\nexport default class MenuContacts extends React.PureComponent {\n  render() {\n    return (\n      <div>\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onNewTopic();}}><i className=\"material-icons\">chat</i></a>\n        &nbsp;\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nexport default class MenuStart extends React.PureComponent {\n  render() {\n    return (\n        <div>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSignUp();}}><i className=\"material-icons\">person_add</i></a>\n          &nbsp;\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n        </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\nimport MenuCancel from './menu-cancel.jsx';\nimport MenuContacts from './menu-contacts.jsx';\nimport MenuStart from './menu-start.jsx';\n\nexport default class SideNavbar extends React.PureComponent {\n  render() {\n    return (\n        <div id=\"side-caption-panel\" className=\"caption-panel\">\n          <div id=\"self-avatar\" className=\"avatar-box\">\n            <LetterTile\n              avatar={this.props.avatar}\n              topic={this.props.myUserId}\n              title={this.props.title} />\n          </div>\n          <div id=\"sidepanel-title\" className=\"panel-title\">{this.props.title}</div>\n          {this.props.state === 'login' ?\n              <MenuStart onSignUp={this.props.onSignUp} onSettings={this.props.onSettings} /> :\n            this.props.state === 'contacts' ?\n              <MenuContacts onNewTopic={this.props.onNewTopic} onSettings={this.props.onSettings} /> :\n            null}\n          {this.props.onCancel ?\n             <MenuCancel onCancel={this.props.onCancel} /> : null}\n        </div>\n    );\n  }\n};\n","/* ContactsView holds all contacts-related stuff */\nimport React from 'react';\nimport { FormattedHTMLMessage, defineMessages } from 'react-intl';\n\nimport ContactList from '../widgets/contact-list.jsx';\n\nimport { updateFavicon } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  archived_contacts_title: {\n    id: \"archived_contacts\",\n    defaultMessage: \"Archived contacts ({count})\",\n    description: \"Label for archived chats\"\n  }\n});\n\nexport default class ContactsView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAction = this.handleAction.bind(this);\n\n    this.state = ContactsView.deriveStateFromProps(props);\n  }\n\n  static deriveStateFromProps(props) {\n    const contacts = [];\n    let unreadThreads = 0;\n    let archivedCount = 0;\n    props.chatList.map((c) => {\n      if (c.private && c.private.arch) {\n        if (props.archive) {\n          contacts.push(c);\n        } else {\n          archivedCount ++;\n        }\n      } else if (!props.archive) {\n        contacts.push(c);\n        unreadThreads += c.unread > 0 ? 1 : 0;\n      }\n    });\n    contacts.sort(function(a, b) {\n      return (b.touched || 0) - (a.touched || 0);\n    });\n\n    if (archivedCount > 0) {\n      contacts.push({\n        action: 'archive',\n        title: messages.archived_contacts_title,\n        values: {count: archivedCount}\n      });\n    }\n\n    return {\n      contactList: contacts,\n      unreadThreads: unreadThreads\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chatList != this.props.chatList || prevProps.archive != this.props.archive) {\n      const newState = ContactsView.deriveStateFromProps(this.props);\n      this.setState(newState);\n      if (newState.unreadThreads != prevState.unreadThreads) {\n        updateFavicon(newState.unreadThreads);\n      }\n    }\n  }\n\n  handleAction(action_ignored) {\n    this.props.onShowArchive();\n  }\n\n  render() {\n    return (\n      <FormattedHTMLMessage id=\"contacts_not_found\"\n        defaultMessage=\"You have no chats<br />¯∖_(ツ)_/¯\"\n        description=\"HTML message shown in ContactList when no contacts are found\">{\n        (no_contacts) => <ContactList\n          connected={this.props.connected}\n          contacts={this.state.contactList}\n          emptyListMessage={no_contacts}\n          topicSelected={this.props.topicSelected}\n          myUserId={this.props.myUserId}\n          showOnline={true}\n          showUnread={true}\n          onTopicSelected={this.props.onTopicSelected}\n          showContextMenu={this.props.showContextMenu}\n          onAction={this.handleAction} />\n      }</FormattedHTMLMessage>\n    );\n  }\n};\n","// Helper functions for storing values in localStorage.\n// By default localStorage can store only strings, not objects or other types.\n\nexport default class LocalStorageUtil {\n  // Replace old object with the new one.\n  static setObject(key, value) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n\n  // Get stored object.\n  static getObject(key) {\n    const value = localStorage.getItem(key);\n    return value && JSON.parse(value);\n  }\n\n  // Partially or wholly update stored object.\n  static updateObject(key, value) {\n    const oldVal = this.getObject(key);\n    this.setObject(key, Object.assign(oldVal || {}, value));\n  }\n\n  // Just a wrapper.\n  static removeItem(key) {\n    localStorage.removeItem(key);\n  }\n}\n","// Account registration.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport { vcard } from '../lib/utils.js';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class CreateAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: '',\n      password: '',\n      email: '',\n      fn: '', // full/formatted name\n      imageDataUrl: null,\n      errorCleared: false,\n      saveToken: LocalStorageUtil.getObject('keep-logged-in')\n    };\n\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(password) {\n    this.setState({password: password});\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value})\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleToggleSaveToken() {\n    LocalStorageUtil.setObject('keep-logged-in', !this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({errorCleared: false});\n    this.props.onCreateAccount(\n      this.state.login.trim(),\n      this.state.password.trim(),\n      vcard(this.state.fn.trim().substring(0, MAX_TITLE_LENGTH), this.state.imageDataUrl),\n      {'meth': 'email', 'val': this.state.email});\n  }\n\n  render() {\n    let submitClasses = 'blue';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form className=\"panel-form-column\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <FormattedMessage id=\"login_prompt\">{\n              (login_prompt) => <input type=\"text\" placeholder={login_prompt} autoComplete=\"user-name\"\n                value={this.state.login} onChange={this.handleLoginChange} required autoFocus />\n            }</FormattedMessage>\n            <FormattedMessage id=\"password_prompt\">{\n              (password_prompt) => <VisiblePassword placeholder={password_prompt} autoComplete=\"new-password\"\n                value={this.state.password} onFinished={this.handlePasswordChange}\n                required={true} />\n            }</FormattedMessage>\n          </div>\n          <AvatarUpload\n            onImageChanged={this.handleImageChanged}\n            onError={this.props.onError} />\n        </div>\n        <div  className=\"panel-form-row\">\n          <FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n            description=\"Input placeholder for person's full name\">{\n            (full_name_prompt) => <input type=\"text\" placeholder={full_name_prompt} autoComplete=\"name\"\n              value={this.state.fn} onChange={this.handleFnChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <FormattedMessage id=\"email_prompt\" defaultMessage=\"Email, e.g. jdoe@example.com\"\n            description=\"Input placeholder for email entry\">{\n            (email_prompt) => <input type=\"email\" placeholder={email_prompt} autoComplete=\"email\"\n              value={this.state.email} onChange={this.handleEmailChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <FormattedMessage id=\"stay_logged_in\">{\n            (stay_logged_in) => <label htmlFor=\"save-token\">&nbsp;{stay_logged_in}</label>\n          }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_up\" defaultMessage=\"Sign up\"\n              description=\"Create account button [Sign Up]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\nimport TagManager from '../widgets/tag-manager.jsx';\n\nimport { LINK_CONTACT_US, LINK_PRIVACY_POLICY, LINK_TERMS_OF_SERVICE, MAX_TITLE_LENGTH } from '../config.js';\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, asEmail, asPhone, vcard } from '../lib/utils.js';\n\nexport default class EditAccountView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    const defacs = me.getDefaultAccess();\n    this.state = {\n      fullName: me.public ? me.public.fn : undefined,\n      avatar: makeImageUrl(me.public ? me.public.photo : null),\n      auth: defacs ? defacs.auth : null,\n      anon: defacs ? defacs.anon : null,\n      tags: me.tags(),\n      credentials: me.getCredentials() || [],\n      addCredActive: false,\n      addCredInvalid: false,\n      newCred: '',\n      showPermissionEditorFor: undefined,\n      previousOnTags: me.onTagsUpdated\n    };\n\n    this.tnNewTags = this.tnNewTags.bind(this);\n    this.tnCredsUpdated = this.tnCredsUpdated.bind(this);\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\n    this.handlePasswordUpdate = this.handlePasswordUpdate.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleCheckboxClick = this.handleCheckboxClick.bind(this);\n    this.handleCredChange = this.handleCredChange.bind(this);\n    this.handleCredKeyDown = this.handleCredKeyDown.bind(this);\n    this.handleCredEntered = this.handleCredEntered.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n  }\n\n  componentDidMount() {\n    const me = this.props.tinode.getMeTopic();\n    me.onCredsUpdated = this.tnCredsUpdated;\n    me.onTagsUpdated = this.tnNewTags;\n  }\n\n  componentWillUnmount() {\n    const me = this.props.tinode.getMeTopic();\n    me.onTagsUpdated = this.state.previousOnTags;\n    me.onCredsUpdated = undefined;\n  }\n\n  tnNewTags(tags) {\n    this.setState({tags: tags});\n  }\n\n  tnCredsUpdated(creds) {\n    this.setState({credentials: creds || []});\n  }\n\n  handleFullNameUpdate(fn) {\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\n    if (fn) {\n      this.setState({fullName: fn});\n      this.props.onUpdateAccount(undefined, vcard(fn, null));\n    }\n  }\n\n  handlePasswordUpdate(pwd) {\n    this.setState({password: pwd});\n    this.props.onUpdateAccount(pwd);\n  }\n\n  handleImageChanged(img) {\n    this.setState({avatar: img});\n    this.props.onUpdateAccount(undefined, vcard(null, img || Tinode.DEL_CHAR));\n  }\n\n  handleCheckboxClick(what, checked) {\n    if (what == 'sound') {\n      this.props.onToggleMessageSounds(checked);\n    } else if (what == 'alert') {\n      this.props.onTogglePushNotifications(checked);\n    }\n  }\n\n  handleCredChange(e) {\n    this.setState({newCred: e.target.value, addCredInvalid: false});\n  }\n\n  handleCredKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({newCred: '', addCredActive: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleCredEntered(e);\n    }\n  }\n\n  handleCredEntered(e) {\n    let value = this.state.newCred.trim();\n    if (!value) {\n      this.setState({addCredActive: false, addCredInvalid: false});\n      return;\n    }\n\n    let val = asPhone(value);\n    let method;\n    if (val) {\n      method = 'tel';\n    } else {\n      val = asEmail(value);\n      if (val) {\n        method = 'email';\n      }\n    }\n    if (method) {\n      this.props.onCredAdd(method, val);\n      this.setState({addCredActive: false, newCred: ''});\n    } else {\n      this.setState({addCredInvalid: true});\n    }\n  }\n\n  handleLaunchPermissionsEditor(which) {\n    this.setState({\n      showPermissionEditorFor: which,\n      editedPermissions: this.state[which]\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handlePermissionsChanged(perm) {\n    let defacs = {};\n    defacs[this.state.showPermissionEditorFor] = perm;\n    this.props.onUpdateAccount(undefined, undefined, defacs);\n\n    let newState = {showPermissionEditorFor: undefined};\n    newState[this.state.showPermissionEditorFor] = perm;\n    this.setState(newState);\n  }\n\n  handleTagsUpdated(tags) {\n    // Check if tags have actually changed.\n    if (arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      return;\n    }\n    this.props.onUpdateTags(tags);\n  }\n\n  render() {\n    let credentials = [];\n    this.state.credentials.map((cred) => {\n      credentials.push(<div key={cred.meth + \":\" + cred.val + \":\" + cred.done}>{cred.meth}: <tt>{cred.val}</tt>\n        <span > {!cred.done ?\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredConfirm(cred.meth, cred.val);}}>\n              <FormattedMessage id=\"validate_credential_action\" defaultMessage=\"confirm\"\n                description=\"Validate credentail call to action\" />\n            </a>\n          : null} <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredDelete(cred.meth, cred.val);}}><i\n            className=\"material-icons gray\">delete_outline</i></a></span></div>);\n    });\n\n    return (\n      <React.Fragment>{this.state.showPermissionEditorFor ?\n        <PermissionsEditor\n          mode={this.state.editedPermissions}\n          skip=\"O\"\n          onSubmit={this.handlePermissionsChanged}\n          onCancel={this.handleHidePermissionsEditor} />\n        :\n        <div id=\"edit-account\" className=\"scrollable-panel\">\n          <div className=\"panel-form-row\">\n            <div className=\"panel-form-column\">\n              <div><label className=\"small\">\n                <FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n                  description=\"Label for full name editing\" />\n              </label></div>\n              <div><FormattedMessage id=\"full_name_prompt\">{\n                (full_name_placeholder) => <InPlaceEdit\n                  placeholder={full_name_placeholder}\n                  value={this.state.fullName}\n                  onFinished={this.handleFullNameUpdate} />\n              }</FormattedMessage></div>\n              <div><label className=\"small\">\n                <FormattedMessage id=\"label_password\" defaultMessage=\"Password\"\n                  description=\"Label for password editing\" />\n              </label></div>\n              <div>\n                <FormattedMessage id=\"password_unchanged_prompt\" defaultMessage=\"Unchanged\"\n                  description=\"Message in editor while password is unchanged\">{\n                  (password_unchanged) => <InPlaceEdit\n                    placeholder={password_unchanged}\n                    type=\"password\"\n                    onFinished={this.handlePasswordUpdate} />\n                }</FormattedMessage>\n              </div>\n            </div>\n            <AvatarUpload\n              avatar={this.state.avatar}\n              uid={this.props.myUserId}\n              title={this.state.fullName}\n              onImageChanged={this.handleImageChanged}\n              onError={this.props.onError} />\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"message-sound\">\n              <FormattedMessage id=\"label_message_sound\" defaultMessage=\"Message sound:\"\n                description=\"Label for message sounds toggle\" />\n            </label>\n            <CheckBox name=\"sound\" id=\"message-sound\"\n              checked={this.props.messageSounds}\n              onChange={this.handleCheckboxClick} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"desktop-alerts\">\n            {this.props.desktopAlertsEnabled ?\n              <FormattedMessage id=\"label_push_notifications\" defaultMessage=\"Notification alerts:\"\n                description=\"Label for push notifications switch\" />\n              :\n              <FormattedMessage id=\"label_push_notifications_disabled\"\n                defaultMessage=\"Notification alerts (requires HTTPS):\"\n                description=\"Label for push notifications switch\" />\n            }\n            </label>\n            <CheckBox name=\"alert\" id=\"desktop-alerts\"\n              checked={this.props.desktopAlerts}\n              onChange={this.props.desktopAlertsEnabled ? this.handleCheckboxClick : null} />\n          </div>\n          <div className=\"hr\" />\n          <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (user discovery)\"\n            description=\"Section title for TagManager\">{\n            (title_tag_manager) => <TagManager\n              title={title_tag_manager}\n              activated={false}\n              tags={this.state.tags}\n              onSubmit={this.handleTagsUpdated} />\n          }</FormattedMessage>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <div>\n              <label className=\"small\">\n                <FormattedMessage id=\"label_user_contacts\" defaultMessage=\"Contacts:\"\n                description=\"Label for user contacts\" />\n              </label>\n            </div>\n            <div className=\"quoted\">\n              {credentials}\n              {this.state.addCredActive ?\n                <input type=\"text\" value={this.state.value}\n                  className={this.state.addCredInvalid ? \"invalid\" : null}\n                  placeholder=\"Phone number or email\" required=\"required\" autoFocus\n                  onChange={this.handleCredChange} onKeyDown={this.handleCredKeyDown} onBlur={this.handleCredEntered} />\n                : null}\n              <div><a href=\"#\" onClick={(e) => {e.preventDefault(); this.setState({addCredActive: true});}}>+ Add another</a></div>\n            </div>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <div className=\"panel-form-row\">\n              <label className=\"small\"><FormattedMessage id=\"label_user_id\" defaultMessage=\"Address:\"\n                description=\"Label for user address (ID)\" /></label>\n              <tt>{this.props.myUserId}</tt>\n            </div>\n            <div>\n              <label className=\"small\">\n                <FormattedMessage id=\"label_default_access_mode\" defaultMessage=\"Default access mode:\"\n                description=\"Label for default access mode\" />\n              </label>\n            </div>\n            <div className=\"quoted\">\n              <div>Auth: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>{this.state.auth}</tt></div>\n              <div>Anon: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>{this.state.anon}</tt></div>\n            </div>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <a href=\"#\" className=\"red flat-button\" onClick={(e) => {e.preventDefault(); this.props.onLogout();}}>\n              <i className=\"material-icons\">exit_to_app</i> &nbsp;<FormattedMessage id=\"button_logout\"\n                defaultMessage=\"Logout\" description=\"Button [Logout]\" />\n            </a>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <div>\n              <label className=\"small\">\n                <FormattedMessage id=\"label_legal\" defaultMessage=\"Legal\"\n                description=\"Section label\" />\n              </label>\n            </div>\n            <div className=\"quoted\">\n              <a href={LINK_CONTACT_US} className=\"flat-button\" target=\"_blank\">\n                <i className=\"material-icons\">email</i> &nbsp;<FormattedMessage id=\"link_contact_us\"\n                  defaultMessage=\"Contact Us\" description=\"Ancor text for contacting us by email\" />\n              </a>\n            </div>\n            <div className=\"quoted\">\n              <a href={LINK_TERMS_OF_SERVICE} className=\"flat-button\" target=\"_blank\">\n                <i className=\"material-icons\">description</i> &nbsp;<FormattedMessage id=\"link_terms_of_service\"\n                  defaultMessage=\"Terms of Service\" description=\"Ancor text for terms of service link\" />\n              </a>\n            </div>\n            <div className=\"quoted\">\n              <a href={LINK_PRIVACY_POLICY} className=\"flat-button\" target=\"_blank\">\n                <i className=\"material-icons\">policy</i> &nbsp;<FormattedMessage id=\"link_privacy_policy\"\n                  defaultMessage=\"Privacy Policy\" description=\"Ancor text for privacy policy link\" />\n              </a>\n            </div>\n          </div>\n        </div>\n      }</React.Fragment>\n    );\n  }\n};\n","// Login form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\n\nexport default class LoginView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: props.login,\n      password: '',\n      hostName: props.serverAddress,\n      saveToken: LocalStorageUtil.getObject('keep-logged-in')\n    };\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  handleToggleSaveToken() {\n    LocalStorageUtil.setObject('keep-logged-in', !this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onLogin(this.state.login.trim(), this.state.password.trim());\n  }\n\n  render() {\n    var submitClasses = 'blue';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form id=\"login-form\" onSubmit={this.handleSubmit}>\n        <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n          description=\"Login placeholder in LoginView\">\n        {\n          (login_prompt) => <input type=\"text\" id=\"inputLogin\"\n            placeholder={login_prompt}\n            autoComplete=\"username\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"none\"\n            value={this.state.login}\n            onChange={this.handleLoginChange}\n            required autoFocus />\n        }\n        </FormattedMessage>\n        <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n          description=\"Password placeholder in LoginView\">\n        {\n          (password_prompt) => <VisiblePassword type=\"password\" id=\"inputPassword\"\n            placeholder={password_prompt}\n            autoComplete=\"current-password\"\n            value={this.state.password}\n            onChange={this.handlePasswordChange}\n            required={true} />\n        }\n        </FormattedMessage>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <label htmlFor=\"save-token\">&nbsp;\n            <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n              description=\"Label for a checkbox\" />\n          </label>\n          <a href=\"#reset\">\n            <FormattedMessage id=\"forgot_password_link\" defaultMessage=\"Forgot password?\"\n              description=\"Link to Reset password form\" />\n          </a>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_in\" defaultMessage=\"Sign in\"\n              description=\"Button [Sign In]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n/* END Login */\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  invalid_id: {\n    id: 'error_invalid_id',\n    defaultMessage: 'Invalid ID',\n    description: 'Error message'\n  }\n});\n\nclass NewTopicById extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      groupId: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({groupId: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.groupId) {\n      var name = this.state.groupId.trim();\n      if (name.length > 3 && (name.substr(0, 3) == 'usr' || name.substr(0, 3) == 'grp')) {\n        this.props.onSubmit(name);\n      } else {\n        this.props.onError(this.props.intl.formatMessage(messages.invalid_id), 'err');\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"group_user_id_prompt\" defaultMessage=\"Group or User ID\"\n          description=\"Prompt for entering user or group ID\">{\n          (prompt) => <input type=\"text\" placeholder={prompt}\n            value={this.state.groupId} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"blue\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_subscribe\" defaultMessage=\"Subscribe\"\n              description=\"Button [Subscribe]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicById);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from './avatar-upload.jsx';\nimport TagManager from './tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class NewTopicGroup extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      fn: '', // full/formatted name\n      private: '',\n      imageDataUrl: null,\n      tags: []\n    };\n\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handlePrivateChange = this.handlePrivateChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleTagsChanged = this.handleTagsChanged.bind(this);\n    this.handleTagsChanged = this.handleTagsChanged.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handlePrivateChange(e) {\n    this.setState({private: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleTagsChanged(tags) {\n    this.setState({tags: tags});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const fn = this.state.fn.trim().substring(0, MAX_TITLE_LENGTH);\n    const comment = this.state.private.trim().substring(0, MAX_TITLE_LENGTH);\n    if (fn) {\n      this.props.onSubmit(fn, this.state.imageDataUrl, comment, this.state.tags);\n    }\n  }\n\n  render() {\n    var submitClasses = 'blue';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n    return (\n      <form className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\" htmlFor=\"new-topic-fn\">\n              <FormattedMessage id=\"label_topic_name\" />\n            </label>\n            <FormattedMessage id=\"topic_name_editing_placeholder\" defaultMessage=\"Freeform name of the group\"\n              description=\"Prompt for entering topic name\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-fn\" placeholder={placeholder}\n                value={this.state.fn} onChange={this.handleFnChange} autoFocus required />\n            }</FormattedMessage>\n            <br />\n            <label className=\"small\" htmlFor=\"new-topic-priv\">\n              <FormattedMessage id=\"label_private\" />\n            </label>\n            <FormattedMessage id=\"private_editing_placeholder\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-priv\" placeholder={placeholder}\n                value={this.state.private} onChange={this.handlePrivateChange} />\n            }</FormattedMessage>\n          </div>\n          <AvatarUpload\n            onError={this.props.onError}\n            onImageChanged={this.handleImageChanged} />\n        </div>\n        <FormattedMessage id=\"title_tag_manager\">{\n          (title) => <TagManager\n            tags={this.state.tags}\n            activated={true}\n            onTagsChanged={this.handleTagsChanged}\n            title={title} />\n        }</FormattedMessage>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses}>\n            <FormattedMessage id=\"button_create\" defaultMessage=\"Create\"\n              description=\"Button [Create]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nexport default class SearchContacts extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      edited: false,\n      search: ''\n    };\n\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  componentWillUnmount() {\n    if (this.state.edited) {\n      this.setState({search: '', edited: false});\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n  }\n\n  handleSearchChange(e) {\n    this.setState({search: e.target.value});\n  }\n\n  handleSearch(e) {\n    e.preventDefault();\n    var query = this.state.search.trim();\n    this.setState({edited: (query.length > 0)});\n    this.props.onSearchContacts(query.length > 0 ? query : Tinode.DEL_CHAR);\n  }\n\n  handleClear(e) {\n    e.preventDefault();\n    if (this.state.edited) {\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n    this.setState({search: '', edited: false});\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Enter') {\n      this.handleSearch(e);\n    } else if (e.key === 'Escape') {\n      this.handleClear();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <i className=\"material-icons search\">search</i>\n          <FormattedMessage id=\"search_placeholder\" defaultMessage=\"List like email:alice@example.com, tel:17025550003...\"\n            description=\"Placeholder in contacts search field\">{\n            (search_placeholder) => <input className=\"search\" type=\"text\"\n              placeholder={search_placeholder}\n              value={this.state.search} onChange={this.handleSearchChange}\n              onKeyDown={this.handleKeyDown} required autoFocus />\n          }</FormattedMessage>\n          <a href=\"#\" onClick={this.handleClear}>\n            <i className=\"material-icons\">close</i>\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","// Create new topic and invite users or send an invite.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport ContactList from '../widgets/contact-list.jsx';\nimport NewTopicById from '../widgets/new-topic-by-id.jsx';\nimport NewTopicGroup from '../widgets/new-topic-group.jsx';\nimport SearchContacts from '../widgets/search-contacts.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\nimport { vcard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  search_for_contacts: {\n    id: \"search_for_contacts\",\n    defaultMessage: \"Use search to find contacts\",\n    description: \"Text shown in contacts view when user entered no search query.\"\n  },\n  search_no_results: {\n    id: \"search_no_results\",\n    defaultMessage: \"Search returned no results\",\n    description: \"Text shown in contacts view when query returned no results.\"\n  }\n});\n\nclass NewTopicView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tabSelected: 'p2p',\n      searchQuery: null\n    };\n\n    this.handleTabClick = this.handleTabClick.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleNewGroupSubmit = this.handleNewGroupSubmit.bind(this);\n    this.handleGroupByID = this.handleGroupByID.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.onInitFind();\n  }\n\n  handleTabClick(e) {\n    e.preventDefault();\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'tab', e.currentTarget.dataset.id));\n    this.setState({tabSelected: e.currentTarget.dataset.id});\n  }\n\n  handleSearchContacts(query) {\n    this.props.onSearchContacts(query);\n    this.setState({searchQuery: Tinode.isNullValue(query) ? null : query});\n  }\n\n  handleContactSelected(sel) {\n    if (this.state.tabSelected === 'p2p') {\n      HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n      this.props.onCreateTopic(sel, undefined);\n    }\n  }\n\n  handleNewGroupSubmit(name, dataUrl, priv, tags) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(undefined, vcard(name, dataUrl), priv, tags);\n  }\n\n  handleGroupByID(topicName) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(topicName);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const no_contacts_placeholder = formatMessage(this.state.searchQuery ?\n      messages.search_no_results : messages.search_for_contacts);\n    return (\n      <div className=\"flex-column\">\n        <ul className=\"tabbar\">\n          <li className={this.state.tabSelected === \"p2p\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"p2p\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_find_user\" defaultMessage=\"find\"\n                description=\"Tab title Find\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"grp\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"grp\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_new_group\" defaultMessage=\"new group\"\n                description=\"Tab title New Group\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"byid\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"byid\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_group_by_id\" defaultMessage=\"by id\"\n                description=\"Tab title Find topic by ID\" />\n            </a>\n          </li>\n        </ul>\n        {this.state.tabSelected === 'grp' ?\n          <NewTopicGroup onSubmit={this.handleNewGroupSubmit} /> :\n          this.state.tabSelected === 'byid' ?\n          <NewTopicById\n            onSubmit={this.handleGroupByID}\n            onError={this.props.onError} /> :\n          <div className=\"flex-column\">\n            <SearchContacts\n              type=\"p2p\"\n              onSearchContacts={this.handleSearchContacts} />\n            <ContactList\n              contacts={this.props.searchResults}\n              myUserId={this.props.myUserId}\n              emptyListMessage={no_contacts_placeholder}\n              showOnline={false}\n              showUnread={false}\n              showContextMenu={false}\n              onTopicSelected={this.handleContactSelected} />\n          </div>}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicView);\n","// A password reset form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\n\nexport default class PasswordResetView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n  }\n\n  componentDidMount() {\n    let parsed = HashNavigation.parseUrlHash(window.location.hash);\n    this.setState({token: parsed.params.token, scheme: parsed.params.scheme});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.token) {\n      this.props.onReset(this.state.scheme, this.state.password.trim(), this.state.token);\n    } else {\n      this.props.onRequest('email', this.state.email.trim());\n    }\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  render() {\n    let reset = (this.state.token && this.state.scheme);\n    return (\n      <form id=\"password-reset-form\" onSubmit={this.handleSubmit}>\n        {reset ?\n          <FormattedMessage id=\"new_password_placeholder\" defaultMessage=\"Enter new password\"\n            description=\"Placeholder for entering new password\">{\n            (placeholder) => <VisiblePassword\n              placeholder={placeholder}\n              autoComplete=\"new-password\"\n              value={this.state.password}\n              required={true} autoFocus={true}\n              onChange={this.handlePasswordChange} />\n          }</FormattedMessage>\n          :\n          <>\n            <label htmlFor=\"inputEmail\">\n              <FormattedMessage id=\"label_reset_password\"\n                defaultMessage=\"Send a password reset email:\"\n                description=\"Label for password reset field\" />\n            </label>\n            <FormattedMessage id=\"credential_email_prompt\" defaultMessage=\"Your registration email\"\n              description=\"Placeholder for entering email\">{\n              (placeholder) => <input type=\"email\" id=\"inputEmail\"\n                placeholder={placeholder}\n                autoComplete=\"email\"\n                value={this.state.email}\n                onChange={this.handleEmailChange}\n                required autoFocus />\n            }</FormattedMessage>\n          </>\n        }\n        <div className=\"dialog-buttons\">\n          <button className=\"blue\" type=\"submit\">{reset ?\n            <FormattedMessage id=\"button_reset\" defaultMessage=\"Reset\" description=\"Button [Reset]\" /> :\n            <FormattedMessage id=\"button_send_request\" defaultMessage=\"Send request\"\n              description=\"Button [Send request]\" />\n          }</button>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react';\n\nimport { KNOWN_HOSTS } from '../config.js';\n\n/* Combobox for selecting host name */\n\nexport default class HostSelector extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hostName: props.serverAddress,\n      changed: false\n    };\n\n    this.handleHostNameChange = this.handleHostNameChange.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handleHostNameChange(e) {\n    this.setState({hostName: e.target.value, changed: true});\n  }\n\n  handleEditingFinished() {\n    if (this.state.changed) {\n      this.setState({changed: false});\n      this.props.onServerAddressChange(this.state.hostName.trim());\n    }\n  }\n\n  render() {\n    var hostOptions = [];\n    for (let key in KNOWN_HOSTS) {\n      let item = KNOWN_HOSTS[key];\n      hostOptions.push(\n        <option key={item} value={item} />\n      );\n    }\n    return (\n      <div className=\"panel-form-row\">\n        <input type=\"search\" id=\"host-name\" placeholder={this.props.hostName} list=\"known-hosts\"\n          className=\"quoted\" value={this.state.hostName} onChange={this.handleHostNameChange}\n          onBlur={this.handleEditingFinished} required />\n        <datalist id=\"known-hosts\">\n          {hostOptions}\n        </datalist>\n      </div>\n    );\n  }\n}\n","// Tinode config panel.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport HostSelector from '../widgets/host-selector.jsx';\n\nexport default class SettingsView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transport: props.transport || 'def',\n      serverAddress: props.serverAddress,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleTransportSelected = this.handleTransportSelected.bind(this);\n    this.handleServerAddressChange = this.handleServerAddressChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onUpdate({\n      transport: this.state.transport,\n      serverAddress: this.state.serverAddress\n    });\n  }\n\n  handleTransportSelected(e) {\n    this.setState({transport: e.currentTarget.value});\n  }\n\n  handleServerAddressChange(name) {\n    this.setState({serverAddress: name});\n  }\n\n  render() {\n    const names = {def: \"default\", ws: \"websocket\", lp: \"long polling\"};\n    var transportOptions = [];\n    var instance = this;\n    ['def', 'ws', 'lp'].map(function(item) {\n      var id = 'transport-' + item;\n      var name = names[item];\n      transportOptions.push(\n        <li key={item}>\n          <input type=\"radio\" id={id} name=\"transport-select\" value={item}\n            checked={instance.state.transport === item}\n            onChange={instance.handleTransportSelected} />\n          <label htmlFor={id}>{name}</label>\n        </li>\n      );\n    });\n\n    return (\n      <form id=\"settings-form\" className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_server_to_use\" defaultMessage=\"Server to use:\"\n              description=\"Label for server selector in SettingsView\" />\n          </label>\n        </div>\n        <HostSelector serverAddress={this.state.serverAddress}\n          onServerAddressChange={this.handleServerAddressChange} />\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_wire_transport\" defaultMessage=\"Wire transport:\"\n              description=\"Label for wire transport selection in SettingsView\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ul className=\"quoted\">\n            {transportOptions}\n          </ul>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button type=\"submit\" className=\"blue\">\n            <FormattedMessage id=\"button_update\" defaultMessage=\"Update\"\n              description=\"Button [Update]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// ValidationView: panel for confirming credentials, like email or phone.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  phone: {\n    id: 'phone_dative',\n    defaultMessage: 'phone',\n    description: \"Dative case of 'phone', i.e. 'phone' in 'by phone'\",\n  },\n  email: {\n    id: 'email_dative',\n    defaultMessage: 'email',\n    description: \"Dative case of 'email', i.e. 'email' in 'by email'\",\n  }\n});\n\nclass ValidationView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      code: props.credCode || ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({code: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    } else if (e.key == 'Escape') {\n      this.handleCancel(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.code && this.state.code.trim()) {\n      this.props.onSubmit(this.props.credMethod, this.state.code.trim());\n    }\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel();\n  }\n\n\n  render() {\n    const { formatMessage } = this.props.intl;\n    const methods = {'email': formatMessage(messages.email), 'tel': formatMessage(messages.phone)};\n    let method = methods[this.props.credMethod] || this.props.credMethod;\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\" htmlFor=\"enter-confirmation-code\">\n            <FormattedMessage id=\"enter_confirmation_code_prompt\"\n              defaultMessage=\"Enter confirmation code sent to you by {method}:\"\n              description=\"Request to enter confirmation code\"\n              values={{method: method}} />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"numeric_confirmation_code_prompt\"\n          defaultMessage=\"Numbers only\" description=\"Prompt for numeric conformation code\">{\n          (numbers_only) => <input type=\"text\" id=\"enter-confirmation-code\"\n            placeholder={numbers_only}\n            value={this.state.code} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"blue\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_confirm\" defaultMessage=\"Confirm\" description=\"Button [Confirm]\" />\n          </button>\n          <button className=\"white\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ValidationView);\n","import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport SideNavbar from '../widgets/side-navbar.jsx';\n\nimport ContactsView from './contacts-view.jsx';\nimport CreateAccountView from './create-account-view.jsx';\nimport EditAccountView from './edit-account-view.jsx';\nimport LoginView from './login-view.jsx';\nimport NewTopicView from './new-topic-view.jsx';\nimport PasswordResetView from './password-reset-view.jsx';\nimport SettingsView from './settings-view.jsx';\nimport ValidationView from './validation-view.jsx';\n\n// Panel titles for translation.\nconst messages = defineMessages({\n  'login': {\n    id: 'sidepanel_title_login',\n    description: 'Sidepanel title for LoginView.',\n    defaultMessage: 'Sign In'\n  },\n  'register': {\n    id: 'sidepanel_title_register',\n    description: 'Sidepanel title for CreateAccountView.',\n    defaultMessage: 'Create Account'\n  },\n  'settings': {\n    id: 'sidepanel_title_settings',\n    description: 'Sidepanel title for SettingsView.',\n    defaultMessage: 'Settings'\n  },\n  'edit': {\n    id: 'sidepanel_title_edit_account',\n    description: 'Sidepanel title for EditAccountView.',\n    defaultMessage: 'Edit Account'\n  },\n  'newtpk': {\n    id: 'sidepanel_title_newtpk',\n    description: 'Sidepanel title for NewTopicView.',\n    defaultMessage: 'Start New Chat'\n  },\n  'cred': {\n    id: 'sidepanel_title_cred',\n    description: 'Sidepanel title for ValidationView.',\n    defaultMessage: 'Confirm Credentials'\n  },\n  'reset': {\n    id: 'sidepanel_title_reset',\n    description: 'Sidepanel title for PasswordResetView.',\n    defaultMessage: 'Reset Password'\n  },\n  'archive': {\n    id: 'sidepanel_title_archive',\n    description: 'Sidepanel title for ContactsView-Archive.',\n    defaultMessage: 'Archived Chats'\n  }\n});\n\nclass SidepanelView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleLoginRequested = this.handleLoginRequested.bind(this);\n  }\n\n  handleLoginRequested(login, password) {\n    this.props.onLoginRequest(login, password);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const view = this.props.state || (this.props.myUserId ? 'contacts' : 'login');\n\n    let title, avatar;\n    if (view == 'contacts') {\n      title = this.props.title;\n      avatar = this.props.avatar ? this.props.avatar : true;\n    } else {\n      title = formatMessage(messages[view]);\n      avatar = false;\n    }\n\n    let onCancel;\n    if (['login', 'contacts'].indexOf(view) == -1) {\n      onCancel = this.props.onCancel;\n    }\n\n    return (\n      <div id=\"sidepanel\" className={this.props.hideSelf ? 'nodisplay' : null}>\n        <SideNavbar\n          state={view}\n          title={title}\n          avatar={avatar}\n          myUserId={this.props.myUserId}\n          onSignUp={this.props.onSignUp}\n          onSettings={this.props.onSettings}\n          onNewTopic={this.props.onNewTopic}\n          onCancel={onCancel} />\n\n        <ErrorPanel\n          level={this.props.errorLevel}\n          text={this.props.errorText}\n          action={this.props.errorAction}\n          actionText={this.props.errorActionText}\n          onClearError={this.props.onError} />\n\n        <LoadSpinner show={this.props.loadSpinnerVisible} />\n\n        {view === 'login' ?\n          <LoginView\n            login={this.props.login}\n            disabled={this.props.loginDisabled}\n            onLogin={this.handleLoginRequested} /> :\n\n          view === 'register' ?\n          <CreateAccountView\n            onCreateAccount={this.props.onCreateAccount}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'settings' ?\n          <SettingsView\n            transport={this.props.transport}\n            serverAddress={this.props.serverAddress}\n            onCancel={this.props.onCancel}\n            onUpdate={this.props.onGlobalSettings} /> :\n\n          view === 'edit' ?\n          <EditAccountView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            messageSounds={this.props.messageSounds}\n            desktopAlerts={this.props.desktopAlerts}\n            desktopAlertsEnabled={this.props.desktopAlertsEnabled}\n            onUpdateAccount={this.props.onUpdateAccount}\n            onUpdateTags={this.props.onUpdateAccountTags}\n            onTogglePushNotifications={this.props.onTogglePushNotifications}\n            onToggleMessageSounds={this.props.onToggleMessageSounds}\n            onCredAdd={this.props.onCredAdd}\n            onCredDelete={this.props.onCredDelete}\n            onCredConfirm={this.props.onCredConfirm}\n            onLogout={this.props.onLogout}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          (view === 'contacts' || view == 'archive') ?\n          <ContactsView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            connected={this.props.connected}\n            topicSelected={this.props.topicSelected}\n            archive={view == 'archive'}\n            chatList={this.props.chatList}\n            showContextMenu={this.props.showContextMenu}\n            onTopicSelected={this.props.onTopicSelected}\n            onShowArchive={this.props.onShowArchive} /> :\n\n          view === 'newtpk' ?\n          <NewTopicView\n            searchResults={this.props.searchResults}\n            onInitFind={this.props.onInitFind}\n            onSearchContacts={this.props.onSearchContacts}\n            onCreateTopic={this.props.onCreateTopic}\n            onError={this.props.onError} /> :\n\n          view === 'cred' ?\n          <ValidationView\n            credCode={this.props.credCode}\n            credMethod={this.props.credMethod}\n            onSubmit={this.props.onValidateCredentials}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'reset' ?\n          <PasswordResetView\n            onRequest={this.props.onPasswordResetRequest}\n            onReset={this.props.onResetPassword} /> :\n          null}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SidepanelView);\n","import { KNOWN_HOSTS, DEFAULT_HOST } from '../config.js';\n\n// Detect server address from the URL\nexport function detectServerAddress() {\n  let host = DEFAULT_HOST;\n  if (typeof window.location == 'object') {\n    if (window.location.protocol == 'file:' || window.location.hostname == 'localhost') {\n      host = KNOWN_HOSTS.local;\n    } else if (window.location.hostname) {\n      host = window.location.hostname + (window.location.port ? ':' + window.location.port : '');\n    }\n  }\n  return host;\n}\n\n// Detect if the page is served over HTTPS.\nexport function isSecureConnection() {\n  if (typeof window.location == 'object') {\n    return window.location.protocol == 'https:';\n  }\n  return false;\n}\n\nexport function isLocalHost() {\n  if (typeof window.location == 'object') {\n    return window.location.hostname == 'localhost';\n  }\n  return false;\n}\n","// The top-level class to hold all functionality together.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport * as firebase from 'firebase/app';\nimport 'firebase/messaging';\n\nimport Tinode from 'tinode-sdk';\n\nimport Alert from '../widgets/alert.jsx';\nimport ContextMenu from '../widgets/context-menu.jsx';\n\nimport InfoView from './info-view.jsx';\nimport MessagesView from './messages-view.jsx';\nimport SidepanelView from './sidepanel-view.jsx';\n\nimport { API_KEY, APP_NAME, DEFAULT_P2P_ACCESS_MODE, LOGGING_ENABLED, MEDIA_BREAKPOINT,\n  READ_DELAY, RECEIVED_DELAY } from '../config.js';\nimport { base64ReEncode, makeImageUrl } from '../lib/blob-helpers.js';\nimport { detectServerAddress, isLocalHost, isSecureConnection } from '../lib/host-name.js';\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { secondsToTime } from '../lib/strformat.js'\nimport { updateFavicon } from '../lib/utils.js';\n\n// Sound to play on message received.\nconst POP_SOUND = new Audio('audio/msg.mp3');\n\nconst messages = defineMessages({\n  update_available: {\n    id: 'update_available',\n    defaultMessage: 'Update available. <a href=\"\">Reload</a>.',\n    description: 'Message shown when an app update is available.'\n  },\n  reconnect_countdown: {\n    id: 'reconnect_countdown',\n    defaultMessage: 'Disconnected. Reconnecting in {seconds}…',\n    description: 'Message shown when an app update is available.'\n  },\n  reconnect_now: {\n    id: 'reconnect_now',\n    defaultMessage: 'Try now',\n    description: 'Prompt for reconnecting now'\n  }\n});\n\nclass TinodeWeb extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = this.getBlankState();\n\n    this.handleResize = this.handleResize.bind(this);\n    this.handleHashRoute = this.handleHashRoute.bind(this);\n    this.handleOnline = this.handleOnline.bind(this);\n    this.checkForAppUpdate = this.checkForAppUpdate.bind(this);\n    this.handleAppVisibility = this.handleAppVisibility.bind(this);\n    this.handleReadTimer = this.handleReadTimer.bind(this);\n    this.handleVisibilityEvent = this.handleVisibilityEvent.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.handleLoginRequest = this.handleLoginRequest.bind(this);\n    this.handleConnected = this.handleConnected.bind(this);\n    this.handleAutoreconnectIteration = this.handleAutoreconnectIteration.bind(this);\n    this.doLogin = this.doLogin.bind(this);\n    this.handleCredentialsRequest = this.handleCredentialsRequest.bind(this);\n    this.handleLoginSuccessful = this.handleLoginSuccessful.bind(this);\n    this.handleDisconnect = this.handleDisconnect.bind(this);\n    this.tnMeMetaDesc = this.tnMeMetaDesc.bind(this);\n    this.tnMeContactUpdate = this.tnMeContactUpdate.bind(this);\n    this.tnMeSubsUpdated = this.tnMeSubsUpdated.bind(this);\n    this.resetContactList = this.resetContactList.bind(this);\n    this.tnData = this.tnData.bind(this);\n    this.tnInitFind = this.tnInitFind.bind(this);\n    this.tnFndSubsUpdated = this.tnFndSubsUpdated.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleTopicSelected = this.handleTopicSelected.bind(this);\n    this.handleHideMessagesView = this.handleHideMessagesView.bind(this);\n    this.handleSendMessage = this.handleSendMessage.bind(this);\n    this.handleNewChatInvitation = this.handleNewChatInvitation.bind(this);\n    this.handleNewAccount = this.handleNewAccount.bind(this);\n    this.handleNewAccountRequest = this.handleNewAccountRequest.bind(this);\n    this.handleUpdateAccountRequest = this.handleUpdateAccountRequest.bind(this);\n    this.handleUpdateAccountTagsRequest = this.handleUpdateAccountTagsRequest.bind(this);\n    this.handleSettings = this.handleSettings.bind(this);\n    this.handleGlobalSettings = this.handleGlobalSettings.bind(this);\n    this.handleShowArchive = this.handleShowArchive.bind(this);\n    this.handleToggleMessageSounds = this.handleToggleMessageSounds.bind(this);\n    this.handleCredAdd = this.handleCredAdd.bind(this);\n    this.handleCredDelete = this.handleCredDelete.bind(this);\n    this.handleCredConfirm = this.handleCredConfirm.bind(this);\n    this.initDesktopAlerts = this.initDesktopAlerts.bind(this);\n    this.togglePushToken = this.togglePushToken.bind(this);\n    this.requestPushToken = this.requestPushToken.bind(this);\n    this.handleSidepanelCancel = this.handleSidepanelCancel.bind(this);\n    this.handleNewTopic = this.handleNewTopic.bind(this);\n    this.handleNewTopicRequest = this.handleNewTopicRequest.bind(this);\n    this.handleNewTopicCreated = this.handleNewTopicCreated.bind(this);\n    this.handleTopicUpdateRequest = this.handleTopicUpdateRequest.bind(this);\n    this.handleChangePermissions = this.handleChangePermissions.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleDeleteMessagesRequest = this.handleDeleteMessagesRequest.bind(this);\n    this.handleLeaveUnsubRequest = this.handleLeaveUnsubRequest.bind(this);\n    this.handleBlockTopicRequest = this.handleBlockTopicRequest.bind(this);\n    this.handleReportTopic = this.handleReportTopic.bind(this);\n    this.handleShowContextMenu = this.handleShowContextMenu.bind(this);\n    this.defaultTopicContextMenu = this.defaultTopicContextMenu.bind(this);\n    this.handleHideContextMenu = this.handleHideContextMenu.bind(this);\n    this.handleShowAlert = this.handleShowAlert.bind(this);\n    this.handleShowInfoView = this.handleShowInfoView.bind(this);\n    this.handleHideInfoView = this.handleHideInfoView.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleValidateCredentialsRequest = this.handleValidateCredentialsRequest.bind(this);\n    this.handlePasswordResetRequest = this.handlePasswordResetRequest.bind(this);\n    this.handleResetPassword = this.handleResetPassword.bind(this);\n    this.handleContextMenuAction = this.handleContextMenuAction.bind(this);\n  }\n\n  getBlankState() {\n    const settings = LocalStorageUtil.getObject('settings') || {};\n\n    return {\n      connected: false,\n      // Connected and subscribed to 'me'\n      ready: false,\n      transport: settings.transport || null,\n      serverAddress: settings.serverAddress || detectServerAddress(),\n      serverVersion: \"no connection\",\n      // \"On\" is the default, so saving the \"off\" state.\n      messageSounds: !settings.messageSoundsOff,\n      desktopAlerts: settings.desktopAlerts,\n      desktopAlertsEnabled: (isSecureConnection() || isLocalHost()) &&\n        (typeof firebase != 'undefined') && (typeof navigator != 'undefined') &&\n        (typeof FIREBASE_INIT != 'undefined'),\n      firebaseToken: LocalStorageUtil.getObject('firebase-token'),\n\n      errorText: '',\n      errorLevel: null,\n      errorAction: undefined,\n      errorActionText: null,\n\n      sidePanelSelected: 'login',\n      sidePanelTitle: null,\n      sidePanelAvatar: null,\n      loadSpinnerVisible: false,\n\n      login: '',\n      password: '',\n      myUserId: null,\n      liveConnection: navigator.onLine,\n      topicSelected: '',\n      topicSelectedOnline: false,\n      topicSelectedAcs: null,\n      newTopicParams: null,\n      loginDisabled: false,\n      displayMobile: (window.innerWidth <= MEDIA_BREAKPOINT),\n      showInfoPanel: false,\n      mobilePanel: 'sidepanel',\n\n      contextMenuVisible: false,\n      contextMenuBounds: null,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuItems: [],\n\n      // Modal alert dialog.\n      alertVisible: false,\n      alertParams: {},\n\n      // Chats as shown in the ContactsView\n      chatList: [],\n      // Contacts returned by a search query.\n      searchResults: [],\n      // Merged results of a search query and p2p chats.\n      searchableContacts: [],\n      credMethod: undefined,\n      credCode: undefined\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    window.addEventListener('online', (e) => { this.handleOnline(true); });\n    window.addEventListener('offline', (e) => { this.handleOnline(false); });\n    window.addEventListener('hashchange', this.handleHashRoute);\n    // Window/tab visible or invisible for pausing timers.\n    document.addEventListener('visibilitychange', this.handleVisibilityEvent);\n\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n\n    this.tinode = TinodeWeb.tnSetup(this.state.serverAddress, this.state.transport);\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n\n    // Initialize desktop alerts.\n    if (this.state.desktopAlertsEnabled) {\n      try {\n        this.fbPush = firebase.initializeApp(FIREBASE_INIT, APP_NAME).messaging();\n        this.fbPush.usePublicVapidKey(FIREBASE_INIT.messagingVapidKey);\n        navigator.serviceWorker.register('/service-worker.js').then((reg) => {\n          this.checkForAppUpdate(reg);\n          this.fbPush.useServiceWorker(reg);\n          this.initDesktopAlerts();\n          if (this.state.desktopAlerts) {\n            if (!this.state.firebaseToken) {\n              this.togglePushToken(true);\n            } else {\n              this.tinode.setDeviceToken(this.state.firebaseToken, true);\n            }\n          }\n        }).catch((err) => {\n          // registration failed :(\n          console.log(\"Failed to register service worker:\", err);\n        });\n      } catch (err) {\n        this.handleError(\"Failed to initialize push notifications\", 'err');\n        console.log(\"Failed to initialize push notifications\", err);\n        this.setState({desktopAlertsEnabled: false});\n      }\n    }\n\n    const token = LocalStorageUtil.getObject('keep-logged-in') ?\n      LocalStorageUtil.getObject('auth-token') : undefined;\n\n    const parsedNav = HashNavigation.parseUrlHash(window.location.hash);\n    if (token) {\n      // When reading from storage, date is returned as string.\n      token.expires = new Date(token.expires);\n      this.tinode.setAuthToken(token);\n      this.tinode.connect().catch((err) => {\n        // Socket error\n        this.handleError(err.message, 'err');\n      });\n      delete parsedNav.params.info;\n      delete parsedNav.params.tab;\n      parsedNav.path[0] = '';\n      HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsedNav.path, parsedNav.params));\n    } else if (!parsedNav.params.token) {\n      HashNavigation.navigateTo('');\n    }\n\n    this.readTimer = null;\n    this.readTimerCallback = null;\n\n    this.handleHashRoute();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n    window.removeEventListener('hashchange', this.handleHashRoute);\n    document.removeEventListener('visibilitychange', this.handleVisibilityEvent);\n  }\n\n  // Setup transport (usually websocket) and server address. This will terminate connection with the server.\n  static tnSetup(serverAddress, transport) {\n    let tinode = new Tinode(APP_NAME, serverAddress, API_KEY, transport, isSecureConnection());\n    tinode.enableLogging(LOGGING_ENABLED, true);\n    return tinode;\n  }\n\n  handleResize() {\n    var mobile = document.documentElement.clientWidth <= MEDIA_BREAKPOINT;\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n    if (this.state.displayMobile != mobile) {\n      this.setState({displayMobile: mobile});\n    }\n  }\n\n  // Check if a newer version of TinodeWeb app is available at the server.\n  checkForAppUpdate(reg) {\n    const {formatHTMLMessage} = this.props.intl;\n    reg.onupdatefound = () => {\n      const installingWorker = reg.installing;\n      installingWorker.onstatechange = () => {\n        if (installingWorker.state == 'installed' && navigator.serviceWorker.controller) {\n          this.handleError(formatHTMLMessage(messages.update_available), 'info');\n        }\n      }\n    }\n  }\n\n  // Handle for hashchange event: display appropriate panels.\n  handleHashRoute() {\n    var hash = HashNavigation.parseUrlHash(window.location.hash);\n    if (hash.path && hash.path.length > 0) {\n      // Left-side panel selector.\n      if (['register','settings','edit','cred','reset','newtpk','archive','contacts',''].includes(hash.path[0])) {\n        this.setState({sidePanelSelected: hash.path[0]});\n      } else {\n        console.log(\"Unknown sidepanel view\", hash.path[0]);\n      }\n\n      // Topic for MessagesView selector.\n      if (hash.path.length > 1 && hash.path[1] != this.state.topicSelected) {\n        this.setState({\n          topicSelected: Tinode.topicType(hash.path[1]) ? hash.path[1] : null\n        });\n      }\n    } else {\n      // Empty hashpath\n      this.setState({sidePanelSelected: ''});\n    }\n\n    // Save validation credentials, if available.\n    if (hash.params.method) {\n      this.setState({ credMethod: hash.params.method });\n    }\n    if (hash.params.code) {\n      this.setState({ credCode: hash.params.code });\n    }\n\n    // Additional parameters of panels.\n    this.setState({\n      showInfoPanel: hash.params.info,\n      newTopicTabSelected: hash.params.tab\n    });\n  }\n\n  handleOnline(online) {\n    var newState = {liveConnection: online};\n    if (online) {\n      this.handleError('', null);\n    } else {\n      this.handleError(\"No connection\", 'warn');\n    }\n    this.setState({liveConnection: online});\n  }\n\n  // Handling read notifications here to be able to pause\n  // them then the window/tab is not visible.\n  handleAppVisibility(visible, callback) {\n    clearTimeout(this.readTimer);\n    this.readTimerCallback = callback;\n    if (visible && callback) {\n      this.readTimer = setTimeout(callback, READ_DELAY);\n    } else {\n      this.readTimer = null;\n    }\n  }\n\n  handleReadTimer(callback) {\n    this.handleAppVisibility(!document.hidden, callback);\n  }\n\n  handleVisibilityEvent() {\n    this.handleAppVisibility(!document.hidden, this.readTimerCallback);\n  }\n\n  handleError(err, level, action, actionText) {\n    this.setState({errorText: err, errorLevel: level, errorAction: action, errorActionText: actionText});\n  }\n\n  // User clicked Login button in the side panel.\n  handleLoginRequest(login, password) {\n    this.setState({\n      loginDisabled: true,\n      login: login,\n      password: password,\n      loadSpinnerVisible: true\n    });\n    this.handleError('', null);\n\n    if (this.tinode.isConnected()) {\n      this.doLogin(login, password, {meth: this.state.credMethod, resp: this.state.credCode});\n    } else {\n      this.tinode.connect().catch((err) => {\n        // Socket error\n        this.setState({loginDisabled: false});\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // Connection succeeded.\n  handleConnected() {\n    var params = this.tinode.getServerInfo();\n    this.setState({\n      serverVersion: params.ver + ' ' + (params.build ? params.build : 'none') + '; '\n    });\n    this.doLogin(this.state.login, this.state.password, {meth: this.state.credMethod, resp: this.state.credCode});\n  }\n\n  // Called for each auto-reconnect iteration.\n  handleAutoreconnectIteration(sec, prom) {\n    clearInterval(this.reconnectCountdown);\n\n    if (sec < 0) {\n      // Clear error\n      this.handleError();\n      return;\n    }\n\n    if (prom) {\n      // Reconnecting now\n      prom.then(() => {\n        // Reconnected: clear error\n        this.handleError();\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n      return;\n    }\n\n    const {formatHTMLMessage} = this.props.intl;\n    let count = sec / 1000;\n    count = count | count;\n    this.reconnectCountdown = setInterval(() => {\n      const timeLeft = (count > 99) ? secondsToTime(count) : count;\n      this.handleError(\n        formatHTMLMessage(messages.reconnect_countdown, {seconds: timeLeft}),\n        'warn',\n        () => {\n          clearInterval(this.reconnectCountdown);\n          this.tinode.reconnect();\n        },\n        formatHTMLMessage(messages.reconnect_now)\n      );\n      count -= 1;\n    }, 1000);\n  }\n\n  // Connection lost\n  handleDisconnect(err) {\n    this.setState({\n      connected: false,\n      ready: false,\n      topicSelectedOnline: false,\n      errorText: err && err.message ? err.message : \"Disconnected\",\n      errorLevel: err && err.message ? 'err' : 'warn',\n      loginDisabled: false,\n      contextMenuVisible: false,\n      serverVersion: \"no connection\"\n    });\n  }\n\n  doLogin(login, password, cred) {\n    if (this.tinode.isAuthenticated()) {\n      // Already logged in. Go to default screen.\n      HashNavigation.navigateTo('');\n      return;\n    }\n    // Sanitize and package credentail.\n    cred = Tinode.credential(cred);\n    // Try to login with login/password. If they are not available, try token. If no token, ask for login/password.\n    let promise = null;\n    let token = this.tinode.getAuthToken();\n    if (login && password) {\n      this.setState({password: null});\n      promise = this.tinode.loginBasic(login, password, cred);\n    } else if (token) {\n      promise = this.tinode.loginToken(token.token, cred);\n    }\n\n    if (promise) {\n      promise.then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text === 'validate credentials') {\n          this.setState({loadSpinnerVisible: false});\n          if (cred) {\n            this.handleError(\"Code does not match\", 'warn');\n          }\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful();\n        }\n      }).catch((err) => {\n        // Login failed, report error.\n        this.setState({\n          loginDisabled: false,\n          credMethod: undefined,\n          credCode: undefined,\n          loadSpinnerVisible: false\n        });\n        this.handleError(err.message, 'err');\n        localStorage.removeItem('auth-token');\n        HashNavigation.navigateTo('');\n      });\n    } else {\n      // No login credentials provided.\n      // Make sure we are on the login page.\n      HashNavigation.navigateTo('');\n      this.setState({loginDisabled: false});\n    }\n  }\n\n  handleCredentialsRequest(params) {\n    var parsed = HashNavigation.parseUrlHash(window.location.hash);\n    parsed.path[0] = 'cred';\n    parsed.params['method'] = params.cred[0];\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n  }\n\n  handleLoginSuccessful() {\n    this.handleError('', null);\n\n    // Refresh authentication token.\n    if (LocalStorageUtil.getObject('keep-logged-in')) {\n      LocalStorageUtil.setObject('auth-token', this.tinode.getAuthToken());\n    }\n    // Logged in fine, subscribe to 'me' attaching callbacks from the contacts view.\n    var me = this.tinode.getMeTopic();\n    me.onMetaDesc = this.tnMeMetaDesc;\n    me.onContactUpdate = this.tnMeContactUpdate;\n    me.onSubsUpdated = this.tnMeSubsUpdated;\n    this.setState({\n      connected: true,\n      credMethod: undefined,\n      credCode: undefined,\n      myUserId: this.tinode.getCurrentUserID()\n    });\n    // Subscribe, fetch topic desc, the list of subscriptions. Messages are not fetched.\n    me.subscribe(\n      me.startMetaQuery().\n        withLaterSub().\n        withDesc().\n        withTags().\n        withCred().\n        build()\n      ).catch((err) => {\n        this.tinode.disconnect();\n        localStorage.removeItem('auth-token');\n        this.handleError(err.message, 'err');\n        HashNavigation.navigateTo('');\n      }).finally(() => {\n        this.setState({loadSpinnerVisible: false});\n      });\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, 'contacts'));\n  }\n\n  tnMeMetaDesc(desc) {\n    if (desc && desc.public) {\n      this.setState({\n        sidePanelTitle: desc.public.fn,\n        sidePanelAvatar: makeImageUrl(desc.public.photo)\n      });\n    }\n  }\n\n  // Reactions to updates to the contact list.\n  tnMeContactUpdate(what, cont) {\n    if (what == 'on' || what == 'off') {\n      this.resetContactList();\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedOnline: (what == 'on')});\n      }\n    } else if (what == 'read') {\n      this.resetContactList();\n    } else if (what == 'msg') {\n      // Check if the topic is archived. If so, don't play a sound.\n      const topic = this.tinode.getTopic(cont.topic);\n      const archived = topic && topic.isArchived();\n\n      // New message received\n      if (document.hidden) {\n        if (this.state.messageSounds && !archived) {\n          POP_SOUND.play();\n        }\n        this.resetContactList();\n\n      // Skip update if the topic is currently open, otherwise the badge will annoyingly flash.\n      } else if (this.state.topicSelected != cont.topic) {\n        if (this.state.messageSounds && !archived) {\n          POP_SOUND.play();\n        }\n        this.resetContactList();\n      }\n    } else if (what == 'recv') {\n      // Explicitly ignoring \"recv\" -- it causes no visible updates to contact list.\n    } else if (what == 'gone' || what == 'unsub') {\n      // Topic deleted or user unsubscribed. Remove topic from view.\n      // If the currently selected topic is gone, clear the selection.\n      if (this.state.topicSelected == cont.topic) {\n        this.handleTopicSelected(null);\n      }\n      // Redraw without the deleted topic.\n      this.resetContactList();\n    } else if (what == 'acs') {\n      // Permissions changed. If it's for the currently selected topic,\n      // update the views.\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedAcs: cont.acs});\n      }\n    } else if (what == 'del') {\n      // TODO: messages deleted (hard or soft) -- update pill counter.\n    } else if (what == 'upd') {\n      // upd - handled by the SDK. Explicitly ignoring here.\n    } else {\n      // TODO(gene): handle other types of notifications:\n      // * ua -- user agent changes (maybe display a pictogram for mobile/desktop).\n      console.log(\"Unsupported (yet) presence update:\" + what + \" in: \" + cont.topic);\n    }\n  }\n\n  tnMeSubsUpdated(unused) {\n    this.resetContactList();\n  }\n\n  // Merge search results and contact list to create a single flat\n  // list of kown contacts for GroupManager to use.\n  static prepareSearchableContacts(chatList, foundContacts) {\n    let merged = {};\n\n    // For chatList topics merge only p2p topics and convert them to the\n    // same format as foundContacts.\n    for (const c of chatList) {\n      if (Tinode.topicType(c.topic) == 'p2p') {\n          merged[c.topic] = {\n            user: c.topic,\n            updated: c.updated,\n            public: c.public,\n            private: c.private,\n            acs: c.acs\n          };\n      }\n    }\n\n    // Add all foundCountacts if they have not been added already.\n    for (const c of foundContacts) {\n      if (!merged[c.user]) {\n        merged[c.user] = c;\n      }\n    }\n\n    return Object.values(merged);\n  }\n\n  resetContactList() {\n    const newState = {\n      chatList: []\n    };\n\n    if (!this.state.ready) {\n      newState.ready = true;\n    }\n\n    this.tinode.getMeTopic().contacts((c) => {\n      newState.chatList.push(c);\n      if (this.state.topicSelected == c.topic) {\n        newState.topicSelectedOnline = c.online;\n        newState.topicSelectedAcs = c.acs;\n      }\n    });\n    // Merge search results and chat list.\n    newState.searchableContacts = TinodeWeb.prepareSearchableContacts(newState.chatList, this.state.searchResults);\n    this.setState(newState);\n  }\n\n  // Sending \"received\" notifications\n  tnData(data) {\n    const topic = this.tinode.getTopic(data.topic);\n    if (topic.msgStatus(data) >= Tinode.MESSAGE_STATUS_SENT && data.from != this.state.myUserId) {\n      clearTimeout(this.receivedTimer);\n      this.receivedTimer = setTimeout(() => {\n        this.receivedTimer = undefined;\n        topic.noteRecv(data.seq);\n      }, RECEIVED_DELAY);\n    }\n  }\n\n  /* Fnd topic: find contacts by tokens */\n  tnInitFind() {\n    const fnd = this.tinode.getFndTopic();\n    fnd.onSubsUpdated = this.tnFndSubsUpdated;\n    if (fnd.isSubscribed()) {\n      this.tnFndSubsUpdated();\n    } else {\n      fnd.subscribe(fnd.startMetaQuery().withSub().build()).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  tnFndSubsUpdated() {\n    const foundContacts = [];\n    // Don't attempt to create P2P topics which already exist. Server will reject the duplicates.\n    this.tinode.getFndTopic().contacts((s) => {\n      foundContacts.push(s);\n    });\n    this.setState({\n      searchResults: foundContacts,\n      searchableContacts: TinodeWeb.prepareSearchableContacts(this.state.chatList, foundContacts)\n    });\n  }\n\n  /** Called when the user enters a contact into the contact search field in the NewAccount panel\n    @param query {Array} is an array of contacts to search for\n   */\n  handleSearchContacts(query) {\n    const fnd = this.tinode.getFndTopic();\n    fnd.setMeta({desc: {public: query}}).then((ctrl) => {\n      return fnd.getMeta(fnd.startMetaQuery().withSub().build());\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  // User clicked on a contact in the side panel or deleted a contact.\n  handleTopicSelected(topicName, unused_index, online, acs) {\n    // Clear newTopicParams after use.\n    if (this.state.newTopicParams && this.state.newTopicParams._topicName != topicName) {\n      this.setState({\n        newTopicParams: null\n      });\n    }\n\n    if (topicName) {\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'topic-view',\n        showInfoPanel: false\n      });\n      // Different contact selected.\n      if (this.state.topicSelected != topicName) {\n        this.setState({\n          topicSelectedOnline: online,\n          topicSelectedAcs: acs\n        });\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', topicName));\n      }\n    } else {\n      // Currently selected contact deleted\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'sidepanel',\n        topicSelectedOnline: false,\n        topicSelectedAcs: null,\n        showInfoPanel: false\n      });\n\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic('', null));\n    }\n  }\n\n  // In mobile view user requested to show sidepanel\n  handleHideMessagesView() {\n    this.setState({\n      mobilePanel: 'sidepanel'\n    });\n    HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, null));\n  }\n\n  // User is sending a message, either plain text or a drafty object, possibly\n  // with attachments.\n  handleSendMessage(msg, promise, uploader) {\n    const topic = this.tinode.getTopic(this.state.topicSelected);\n\n    msg = topic.createMessage(msg, false);\n    // The uploader is used to show progress.\n    msg._uploader = uploader;\n\n    if (!topic.isSubscribed()) {\n      if (!promise) {\n        promise = Promise.resolve();\n      }\n      promise = promise.then(() => { return topic.subscribe(); });\n    }\n\n    if (promise) {\n      promise = promise.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n\n    topic.publishDraft(msg, promise)\n      .then((ctrl) => {\n        if (topic.isArchived()) {\n          return topic.archive(false);\n        }\n      })\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleNewChatInvitation(topicName, action) {\n    const topic = this.tinode.getTopic(topicName);\n    let response = null;\n    switch (action) {\n      case 'accept':\n        // Accept given permissions.\n        const mode = topic.getAccessMode().getGiven();\n        response = topic.setMeta({sub: {mode: mode}});\n        if (topic.getType() == 'p2p') {\n          // For P2P topics change 'given' permission of the peer too.\n          // In p2p topics the other user has the same name as the topic.\n          response = response.then((ctrl) => {\n            topic.setMeta({sub: {user: topicName, mode: mode}});\n          });\n        }\n        break;\n      case 'delete':\n        // Ignore invitation by deleting it.\n        response = topic.delTopic();\n        break;\n      case 'block':\n        // Ban the topic making futher invites impossible.\n        // Just self-ban.\n        const am = topic.getAccessMode().updateWant('-JP').getWant();\n        response = topic.setMeta({sub: {mode: am}}).then((ctrl) => {\n          return this.handleTopicSelected(null);\n        });\n        break;\n      default:\n        console.log(\"Unknown invitation action\", '\"' + action + '\"\"');\n    }\n\n    if (response != null) {\n      response.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // User chose a Sign Up menu item.\n  handleNewAccount() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, 'register'));\n  }\n\n  // Actual registration of a new account.\n  handleNewAccountRequest(login_, password_, public_, cred_, tags_) {\n    this.tinode.connect(this.state.serverAddress)\n      .then(() => {\n        return this.tinode.createAccountBasic(login_, password_,\n          {public: public_, tags: tags_, cred: Tinode.credential(cred_)});\n      }).then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text == 'validate credentials') {\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful(this);\n        }\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleUpdateAccountRequest(password, pub, defacs) {\n    if (pub || defacs) {\n      const params = {};\n      if (pub) {\n        params.public = pub;\n      }\n      if (defacs) {\n        params.defacs = defacs;\n      }\n      this.tinode.getMeTopic().setMeta({desc: params}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n    if (password) {\n      this.tinode.updateAccountBasic(null, this.tinode.getCurrentLogin(), password).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleUpdateAccountTagsRequest(tags) {\n    this.tinode.getMeTopic().setMeta({tags: tags})\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  // User chose Settings menu item.\n  handleSettings() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'edit' : 'settings'));\n  }\n\n  // User updated global parameters.\n  handleGlobalSettings(settings) {\n    let serverAddress = settings.serverAddress || this.state.serverAddress;\n    let transport = settings.transport || this.state.transport;\n    if (this.tinode) {\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.tinode = TinodeWeb.tnSetup(serverAddress, transport);\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n\n    this.setState({\n      serverAddress: serverAddress,\n      transport: transport\n    });\n    LocalStorageUtil.setObject('settings', {\n      serverAddress: serverAddress,\n      transport: transport\n    });\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, ''));\n  }\n\n  // User chose 'Archived chats'.\n  handleShowArchive() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'archive' : ''));\n  }\n\n  // Initialize desktop alerts = push notifications.\n  initDesktopAlerts() {\n    // Google could not be bothered to mention that\n    // onTokenRefresh is never called.\n    this.fbPush.onTokenRefresh(() => {\n      this.requestPushToken();\n    });\n\n    this.fbPush.onMessage((payload) => {\n      // No need to do anything about it.\n      // All the magic happends in the service worker.\n    });\n  }\n\n  togglePushToken(enabled) {\n    if (enabled) {\n      if (!this.state.firebaseToken) {\n        this.fbPush.requestPermission().then(() => {\n          this.requestPushToken();\n        }).catch((err) => {\n          this.handleError(err.message, 'err');\n          this.setState({desktopAlerts: false, firebaseToken: null});\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n          console.log(\"Failed to get permission to notify.\", err);\n        });\n      } else {\n        this.setState({desktopAlerts: true});\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n      }\n    } else if (this.state.firebaseToken) {\n      this.fbPush.deleteToken(this.state.firebaseToken).catch((err) => {\n        console.log(\"Unable to delete token.\", err);\n      }).finally(() => {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        localStorage.removeItem('firebase-token');\n        this.setState({desktopAlerts: false, firebaseToken: null});\n      });\n    } else {\n      this.setState({desktopAlerts: false, firebaseToken: null});\n      LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n    }\n  }\n\n  requestPushToken() {\n    this.fbPush.getToken().then((refreshedToken) => {\n      if (refreshedToken != this.state.firebaseToken) {\n        this.tinode.setDeviceToken(refreshedToken, true);\n        LocalStorageUtil.setObject('firebase-token', refreshedToken);\n      }\n      this.setState({firebaseToken: refreshedToken, desktopAlerts: true});\n      LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n      console.log(\"Failed to retrieve firebase token\", err);\n    });\n  }\n\n  handleToggleMessageSounds(enabled) {\n    this.setState({messageSounds: enabled});\n    LocalStorageUtil.updateObject('settings', {\n      messageSoundsOff: !enabled\n    });\n  }\n\n  handleCredAdd(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.setMeta({cred: {meth: method, val: value}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredDelete(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.delCredential(method, value).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredConfirm(method, response) {\n    this.handleCredentialsRequest({cred: [method]});\n  }\n\n  // User clicked Cancel button in Setting or Sign Up panel.\n  handleSidepanelCancel() {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    parsed.path[0] = this.state.myUserId ? 'contacts' : '';\n    if (parsed.params) {\n      delete parsed.params.code;\n      delete parsed.params.method;\n      delete parsed.params.tab;\n    }\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n    this.setState({errorText: '', errorLevel: null});\n  }\n\n  // User clicked a (+) menu item.\n  handleNewTopic() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, 'newtpk'));\n  }\n\n  // Request to start a new topic. New P2P topic requires peer's name.\n  handleNewTopicRequest(peerName, pub, priv, tags) {\n\n    const topicName = peerName || this.tinode.newGroupTopicName();\n    const params = {\n      _topicName: topicName,\n    };\n    if (peerName) {\n      // Because we are initialing the subscription, set 'want' to all permissions.\n      params.sub = {mode: DEFAULT_P2P_ACCESS_MODE};\n      // Give the other user all permissions too.\n      params.desc = {defacs: {auth: DEFAULT_P2P_ACCESS_MODE}};\n    } else {\n      params.desc = {public: pub, private: {comment: priv}};\n      params.tags = tags;\n    }\n    this.setState({newTopicParams: params}, () => {this.handleTopicSelected(topicName)});\n  }\n\n  // New topic was creted, here is the new topic name.\n  handleNewTopicCreated(oldName, newName) {\n    if (this.state.topicSelected == oldName && oldName != newName) {\n      // If the current URl contains the old topic name, replace it with new.\n      // Update the name of the selected topic first so the navigator doen't clear\n      // the state.\n      this.setState({topicSelected: newName}, () => {\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', newName));\n      });\n    }\n  }\n\n  handleTopicUpdateRequest(topicName, pub, priv, permissions) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const params = {};\n      if (pub) {\n        params.public = pub;\n      }\n      if (priv) {\n        params.private = (priv === Tinode.DEL_CHAR) ?\n          Tinode.DEL_CHAR : {comment: priv};\n      }\n      if (permissions) {\n        params.defacs = permissions;\n      }\n      topic.setMeta({desc: params}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleChangePermissions(topicName, mode, uid) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const am = topic.getAccessMode();\n      if (uid) {\n        am.updateGiven(mode);\n        mode = am.getGiven();\n      } else {\n        am.updateWant(mode);\n        mode = am.getWant();\n      }\n      topic.setMeta({sub: {user: uid, mode: mode}}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleTagsUpdated(topicName, tags) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      topic.setMeta({tags: tags}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleLogout() {\n    updateFavicon(0);\n\n    // Remove stored data.\n    localStorage.removeItem('auth-token');\n    localStorage.removeItem('firebase-token');\n    localStorage.removeItem('settings');\n    if (this.state.firebaseToken) {\n      this.fbPush.deleteToken(this.state.firebaseToken)\n    }\n\n    if (this.tinode) {\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.setState(this.getBlankState());\n    this.tinode = TinodeWeb.tnSetup(this.state.serverAddress, this.state.transport);\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    HashNavigation.navigateTo('');\n  }\n\n  handleDeleteMessagesRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Request hard-delete all messages.\n    topic.delMessagesAll(true).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleLeaveUnsubRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.leave(true).then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleBlockTopicRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleReportTopic(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Publish spam report.\n    this.tinode.publish(Tinode.TOPIC_SYS, Tinode.Drafty.attachJSON(null, {\n      'action': 'report',\n      'target': topicName\n    }));\n\n    // Remove J and P permissions.\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleShowContextMenu(params, menuItems) {\n    this.setState({\n      contextMenuVisible: true,\n      contextMenuClickAt: {x: params.x, y: params.y},\n      contextMenuParams: params,\n      contextMenuItems: menuItems || this.defaultTopicContextMenu(params.topicName),\n      contextMenuBounds: ReactDOM.findDOMNode(this).getBoundingClientRect()\n    });\n  }\n\n  defaultTopicContextMenu(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    const {formatMessage} = this.props.intl;\n\n    let muted = false, blocked = false, self_blocked = false, subscribed = false, deleter = false, archived = false;\n    if (topic) {\n      subscribed = topic.isSubscribed();\n      archived = topic.isArchived();\n\n      const acs = topic.getAccessMode();\n      if (acs) {\n        muted = acs.isMuted();\n        blocked = !acs.isJoiner();\n        self_blocked = !acs.isJoiner('want');\n        deleter = acs.isDeleter();\n      }\n    }\n\n    return [\n      subscribed ? {title: formatMessage({id: 'menu_item_info'}), handler: this.handleShowInfoView} : null,\n      subscribed ? 'messages_clear' : null,\n      subscribed && deleter ? 'messages_clear_hard' : null,\n      muted ? (blocked ? null : 'topic_unmute') : 'topic_mute',\n      self_blocked ? 'topic_unblock' : 'topic_block',\n      !archived ? 'topic_archive' : null,\n      'topic_delete'\n    ];\n  }\n\n  handleHideContextMenu() {\n    this.setState({\n      contextMenuVisible: false,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuBounds: null\n    });\n  }\n\n  handleContextMenuAction(action, promise, params) {\n    if (action == 'topic_archive') {\n      if (promise && params.topicName && params.topicName == this.state.topicSelected) {\n        promise.then(() => {\n          this.handleTopicSelected(null);\n        });\n      }\n    }\n  }\n\n  handleShowAlert(title, content, onConfirm, confirm, onReject, reject) {\n    this.setState({\n      alertVisible: true,\n      alertParams: {\n        title: title,\n        content: content,\n        onConfirm: onConfirm,\n        confirm: confirm,\n        onReject: onReject,\n        reject: reject\n      }\n    });\n  }\n\n  handleShowInfoView() {\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'info', true));\n    this.setState({showInfoPanel: true});\n  }\n\n  handleHideInfoView() {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'info'));\n    this.setState({showInfoPanel: false});\n  }\n\n  handleMemberUpdateRequest(topicName, added, removed) {\n    if (!topicName) {\n      return;\n    }\n\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    if (added && added.length > 0) {\n      added.map((uid) => {\n        topic.invite(uid, null).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n\n    if (removed && removed.length > 0) {\n      removed.map((uid) => {\n        topic.delSubscription(uid).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n  }\n\n  handleValidateCredentialsRequest(cred, code) {\n    if (this.tinode.isAuthenticated()) {\n      const me = this.tinode.getMeTopic();\n      me.setMeta({cred: {meth: cred, resp: code}})\n        .then(() => {\n          HashNavigation.navigateTo('');\n        })\n        .catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n    } else {\n      this.setState({credMethod: cred, credCode: code});\n      this.doLogin(null, null, {meth: cred, resp: code});\n    }\n  }\n\n  handlePasswordResetRequest(method, value) {\n    // If already connected, connnect() will return a resolved promise.\n    this.tinode.connect()\n      .then(() => {\n        return this.tinode.requestResetAuthSecret('basic', method, value);\n      })\n      .catch((err) => {\n        // Socket error\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleResetPassword(scheme, newPassword, token) {\n    token = base64ReEncode(token);\n    if (!token)  {\n      this.handleError(\"Invalid security token\", 'err');\n    } else {\n      this.tinode.connect()\n        .then(() => {\n          return this.tinode.updateAccountBasic(null, null, newPassword, {token: token});\n        })\n        .catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"app-container\">\n        {this.state.contextMenuVisible ?\n          <ContextMenu\n            tinode={this.tinode}\n            bounds={this.state.contextMenuBounds}\n            clickAt={this.state.contextMenuClickAt}\n            params={this.state.contextMenuParams}\n            items={this.state.contextMenuItems}\n            hide={this.handleHideContextMenu}\n            onShowAlert={this.handleShowAlert}\n            onAction={this.handleContextMenuAction}\n            onTopicRemoved={(topicName) => {\n              if (topicName == this.state.topicSelected) {\n                this.handleTopicSelected(null);\n              }\n            }}\n            onError={this.handleError} />\n          :\n          null\n        }\n        <Alert\n          visible={this.state.alertVisible}\n          title={this.state.alertParams.title}\n          content={this.state.alertParams.content}\n          onReject={this.state.alertParams.onReject ? (() => { this.setState({alertVisible: false}); }) : null}\n          reject={this.state.alertParams.reject}\n          onConfirm={() => { this.setState({alertVisible: false}); this.state.alertParams.onConfirm(); }}\n          confirm={this.state.alertParams.confirm}\n          />\n        <SidepanelView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          displayMobile={this.state.displayMobile}\n          hideSelf={this.state.displayMobile && this.state.mobilePanel !== 'sidepanel'}\n          state={this.state.sidePanelSelected}\n          title={this.state.sidePanelTitle}\n          avatar={this.state.sidePanelAvatar}\n          login={this.state.login}\n          myUserId={this.state.myUserId}\n          loginDisabled={this.state.loginDisabled}\n          loadSpinnerVisible={this.state.loadSpinnerVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          topicSelected={this.state.topicSelected}\n          chatList={this.state.chatList}\n          credMethod={this.state.credMethod}\n          credCode={this.state.credCode}\n\n          transport={this.state.transport}\n          messageSounds={this.state.messageSounds}\n          desktopAlerts={this.state.desktopAlerts}\n          desktopAlertsEnabled={this.state.desktopAlertsEnabled}\n          serverAddress={this.state.serverAddress}\n          onGlobalSettings={this.handleGlobalSettings}\n\n          onSignUp={this.handleNewAccount}\n          onSettings={this.handleSettings}\n          onLoginRequest={this.handleLoginRequest}\n          onCreateAccount={this.handleNewAccountRequest}\n          onUpdateAccount={this.handleUpdateAccountRequest}\n          onUpdateAccountTags={this.handleUpdateAccountTagsRequest}\n          onTogglePushNotifications={this.togglePushToken}\n          onToggleMessageSounds={this.handleToggleMessageSounds}\n          onCredAdd={this.handleCredAdd}\n          onCredDelete={this.handleCredDelete}\n          onCredConfirm={this.handleCredConfirm}\n          onTopicSelected={this.handleTopicSelected}\n          onCreateTopic={this.handleNewTopicRequest}\n          onNewTopic={this.handleNewTopic}\n          onLogout={this.handleLogout}\n          onCancel={this.handleSidepanelCancel}\n          onError={this.handleError}\n          onValidateCredentials={this.handleValidateCredentialsRequest}\n          onPasswordResetRequest={this.handlePasswordResetRequest}\n          onResetPassword={this.handleResetPassword}\n          onShowArchive={this.handleShowArchive}\n\n          onInitFind={this.tnInitFind}\n          searchResults={this.state.searchResults}\n          onSearchContacts={this.handleSearchContacts}\n\n          showContextMenu={this.handleShowContextMenu} />\n\n        <MessagesView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          ready={this.state.ready}\n          online={this.state.topicSelectedOnline}\n          acs={this.state.topicSelectedAcs}\n          displayMobile={this.state.displayMobile}\n          viewportWidth={this.state.viewportWidth}\n          viewportHeight={this.state.viewportHeight}\n          hideSelf={this.state.displayMobile &&\n            (this.state.mobilePanel !== 'topic-view' || this.state.showInfoPanel)}\n          topic={this.state.topicSelected}\n          myUserId={this.state.myUserId}\n          serverVersion={this.state.serverVersion}\n          serverAddress={this.state.serverAddress}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          newTopicParams={this.state.newTopicParams}\n\n          onHideMessagesView={this.handleHideMessagesView}\n          onData={this.tnData}\n          onError={this.handleError}\n          onNewTopicCreated={this.handleNewTopicCreated}\n          readTimerHandler={this.handleReadTimer}\n          showContextMenu={this.handleShowContextMenu}\n          onChangePermissions={this.handleChangePermissions}\n          onNewChat={this.handleNewChatInvitation}\n          sendMessage={this.handleSendMessage} />\n\n        {this.state.showInfoPanel ?\n          <InfoView\n            tinode={this.tinode}\n            connected={this.state.connected}\n            displayMobile={this.state.displayMobile}\n            topic={this.state.topicSelected}\n            searchableContacts={this.state.searchableContacts}\n            myUserId={this.state.myUserId}\n\n            errorText={this.state.errorText}\n            errorLevel={this.state.errorLevel}\n            errorAction={this.state.errorAction}\n            errorActionText={this.state.errorActionText}\n\n            onTopicDescUpdate={this.handleTopicUpdateRequest}\n            onCancel={this.handleHideInfoView}\n            onShowAlert={this.handleShowAlert}\n            onChangePermissions={this.handleChangePermissions}\n            onMemberUpdateRequest={this.handleMemberUpdateRequest}\n            onDeleteMessages={this.handleDeleteMessagesRequest}\n            onLeaveTopic={this.handleLeaveUnsubRequest}\n            onBlockTopic={this.handleBlockTopicRequest}\n            onReportTopic={this.handleReportTopic}\n            onAddMember={this.handleManageGroupMembers}\n            onTopicTagsUpdate={this.handleTagsUpdated}\n            onInitFind={this.tnInitFind}\n            onError={this.handleError}\n\n            showContextMenu={this.handleShowContextMenu}\n            />\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(TinodeWeb);\n","// Put all packages together.\n// Used to generate umd/index.prod.js\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { IntlProvider } from 'react-intl';\n\nimport allMessages from './messages.json';\nimport TinodeWeb from './views/tinode-web.jsx';\nimport HashNavigation from './lib/navigation.js';\n\n// Detect human language to use in the UI:\n//  Check parameters from URL hash #?hl=ru, then browser, then use 'en' as a fallback.\nconst { params } = HashNavigation.parseUrlHash(window.location.hash);\nconst language = (params && params.hl) ||\n  (navigator.languages && navigator.languages[0]) ||\n  navigator.language ||\n  navigator.userLanguage ||\n  'en';\n\n// Get the base language 'en' from a more specific 'en_GB' or 'en-US' as a partial fallback.\nconst baseLanguage = language.toLowerCase().split(/[-_]/)[0];\n\n// Try the full locale first, then the locale without the region code, fallback to 'en'.\nconst messages =\n  allMessages[language] ||\n  allMessages[baseLanguage] ||\n  allMessages.en;\n\nReactDOM.render(\n  <IntlProvider locale={language} messages={messages} textComponent={React.Fragment}>\n    <TinodeWeb />\n  </IntlProvider>,\n  document.getElementById('mountPoint')\n);\n"],"sourceRoot":""}