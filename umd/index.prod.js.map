{"version":3,"sources":["webpack://tinode-webapp/external \"React\"","webpack://tinode-webapp/external \"ReactDOM\"","webpack://tinode-webapp/external \"ReactIntl\"","webpack://tinode-webapp/external \"firebase\"","webpack://tinode-webapp/external \"Tinode\"","webpack://tinode-webapp/external [\"firebase\",\"messaging\"]","webpack://tinode-webapp/./src/widgets/alert.jsx","webpack://tinode-webapp/./src/version.js","webpack://tinode-webapp/./src/config.js","webpack://tinode-webapp/./src/widgets/context-menu.jsx","webpack://tinode-webapp/./src/lib/strformat.js","webpack://tinode-webapp/./src/widgets/letter-tile.jsx","webpack://tinode-webapp/./src/lib/blob-helpers.js","webpack://tinode-webapp/./src/widgets/avatar-upload.jsx","webpack://tinode-webapp/./src/widgets/checkbox.jsx","webpack://tinode-webapp/./src/widgets/contact-badges.jsx","webpack://tinode-webapp/./src/lib/utils.js","webpack://tinode-webapp/./src/widgets/received-marker.jsx","webpack://tinode-webapp/./src/widgets/unread-badge.jsx","webpack://tinode-webapp/./src/widgets/contact.jsx","webpack://tinode-webapp/./src/widgets/contact-action.jsx","webpack://tinode-webapp/./src/widgets/contact-list.jsx","webpack://tinode-webapp/./src/widgets/menu-cancel.jsx","webpack://tinode-webapp/./src/widgets/error-panel.jsx","webpack://tinode-webapp/./src/widgets/chip.jsx","webpack://tinode-webapp/./src/widgets/chip-input.jsx","webpack://tinode-webapp/./src/widgets/group-manager.jsx","webpack://tinode-webapp/./src/widgets/visible-password.jsx","webpack://tinode-webapp/./src/widgets/in-place-edit.jsx","webpack://tinode-webapp/./src/widgets/more-button.jsx","webpack://tinode-webapp/./src/widgets/permissions-editor.jsx","webpack://tinode-webapp/./src/widgets/tag-manager.jsx","webpack://tinode-webapp/./src/views/info-view.jsx","webpack://tinode-webapp/./src/widgets/file-progress.jsx","webpack://tinode-webapp/./src/widgets/attachment.jsx","webpack://tinode-webapp/./src/widgets/uploading-image.jsx","webpack://tinode-webapp/./src/widgets/chat-message.jsx","webpack://tinode-webapp/./src/widgets/send-message.jsx","webpack://tinode-webapp/./src/widgets/doc-preview.jsx","webpack://tinode-webapp/./src/widgets/group-subs.jsx","webpack://tinode-webapp/./src/widgets/image-preview.jsx","webpack://tinode-webapp/./src/widgets/invitation.jsx","webpack://tinode-webapp/./src/widgets/load-spinner.jsx","webpack://tinode-webapp/./src/views/logo-view.jsx","webpack://tinode-webapp/./src/lib/navigation.js","webpack://tinode-webapp/./src/views/messages-view.jsx","webpack://tinode-webapp/./src/widgets/button-back.jsx","webpack://tinode-webapp/./src/widgets/menu-contacts.jsx","webpack://tinode-webapp/./src/widgets/menu-start.jsx","webpack://tinode-webapp/./src/widgets/side-navbar.jsx","webpack://tinode-webapp/./src/views/contacts-view.jsx","webpack://tinode-webapp/./src/lib/local-storage.js","webpack://tinode-webapp/./src/views/create-account-view.jsx","webpack://tinode-webapp/./src/views/edit-account-view.jsx","webpack://tinode-webapp/./src/views/acc-general-view.jsx","webpack://tinode-webapp/./src/views/acc-notifications-view.jsx","webpack://tinode-webapp/./src/views/acc-security-view.jsx","webpack://tinode-webapp/./src/views/acc-support-view.jsx","webpack://tinode-webapp/./src/views/login-view.jsx","webpack://tinode-webapp/./src/widgets/new-topic-by-id.jsx","webpack://tinode-webapp/./src/widgets/new-topic-group.jsx","webpack://tinode-webapp/./src/widgets/search-contacts.jsx","webpack://tinode-webapp/./src/views/new-topic-view.jsx","webpack://tinode-webapp/./src/views/password-reset-view.jsx","webpack://tinode-webapp/./src/widgets/host-selector.jsx","webpack://tinode-webapp/./src/views/settings-view.jsx","webpack://tinode-webapp/./src/views/validation-view.jsx","webpack://tinode-webapp/./src/views/sidepanel-view.jsx","webpack://tinode-webapp/./src/lib/host-name.js","webpack://tinode-webapp/./src/views/tinode-web.jsx","webpack://tinode-webapp/./src/index.js","webpack://tinode-webapp/webpack/bootstrap","webpack://tinode-webapp/webpack/runtime/compat get default export","webpack://tinode-webapp/webpack/runtime/define property getters","webpack://tinode-webapp/webpack/runtime/hasOwnProperty shorthand","webpack://tinode-webapp/webpack/startup"],"names":["React","ReactDOM","ReactIntl","firebase","messaging","Tinode","Alert","render","this","props","visible","className","title","content","onReject","onClick","reject","FormattedMessage","id","defaultMessage","onConfirm","confirm","APP_NAME","KNOWN_HOSTS","hosted","local","DEFAULT_HOST","KEYPRESS_DELAY","DEFAULT_P2P_ACCESS_MODE","REM_SIZE","AVATAR_SIZE","MAX_INBAND_ATTACHMENT_SIZE","MAX_EXTERN_ATTACHMENT_SIZE","MAX_IMAGE_DIM","MAX_TITLE_LENGTH","messages","defineMessages","info","clear_messages","clear_for_all","delete","delete_for_all","send_retry","mute","unmute","topic_delete","topic_delete_warning","delete_messages_warning","unblock","block","topic_block_warning","member_delete","archive","edit_permissions","clear_messages_warning","ContextMenu","constructor","super","formatMessage","intl","handlePageClick","bind","handleEscapeKey","handleClick","MenuItems","handler","params","errorHandler","onShowAlert","menu_item_clear_messages","deleteMessages","menu_item_clear_messages_for_all","message","retryMessage","topicPermissionSetter","then","ctrl","onTopicRemoved","topicName","menu_item_delete_topic","topic","tinode","getTopic","delTopic","catch","err","console","log","user","delSubscription","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","e","contains","target","preventDefault","stopPropagation","hide","keyCode","item","items","currentTarget","dataset","onAction","onError","all","hard","cancelSend","seq","delMessagesAll","delMessagesList","flushMessage","msg","createMessage","publishDraft","mode","result","updateMode","count","menu","map","push","key","data-id","vSize","length","position","left","bounds","right","clickAt","x","top","bottom","y","style","injectIntl","shortDateFormat","locale","window","navigator","userLanguage","language","now","Date","getFullYear","getMonth","getDate","toLocaleTimeString","hour12","hour","minute","toLocaleDateString","month","day","year","bytesToHumanSize","bytes","sizes","bucket","Math","min","floor","log2","pow","round","toFixed","LetterTile","avatar","isGroup","iconColor","abs","value","hash","i","charCodeAt","stringHash","trim","letter","charAt","alt","src","onerror","SUPPORTED_IMAGE_FORMATS","MIME_EXTENSIONS","makeImageUrl","photo","type","data","fitImageSize","width","height","maxWidth","maxHeight","forceSquare","scale","size","dstWidth","dstHeight","srcWidth","srcHeight","xoffset","yoffset","imageScaled","fileOrBlob","maxSize","onSuccess","img","Image","crossOrigin","onload","async","URL","revokeObjectURL","dim","canvas","createElement","ctx","getContext","imageSmoothingEnabled","drawImage","mime","indexOf","blob","Promise","resolve","toBlob","clearRect","fname","idx","ext","at","lastIndexOf","substring","fileNameForMime","name","createObjectURL","fileToBase64","file","reader","FileReader","split","readAsDataURL","blobToBase64","AvatarUpload","state","dataUrl","handleFileUpload","componentDidUpdate","prevProps","setState","files","unused","base64bits","du","onImageChanged","randId","random","substr","readOnly","href","uid","accept","onChange","htmlFor","CheckBox","handleChange","checked","icon_mapping","ContactBadges","badges","b","icon","color","updateFavicon","oldIcon","getElementById","head","getElementsByTagName","newIcon","rel","removeChild","appendChild","vcard","fn","imageDataUrl","card","dataStart","arrayEqual","a","Array","isArray","sort","l","sanitizeUrl","url","allowedSchemes","replace","test","schemes","join","RegExp","deliveryMarker","received","message_sending","message_sending_failed","ReceivedMarker","timestamp","marker","UnreadBadge","Contact","handleContextClick","onSelected","index","showContextMenu","pageY","pageX","online","slice","icon_badges","acs","showMode","getMode","isMuted","isJoiner","subtitle","preview","Drafty","draftyFormatter","comment","showCheckmark","selected","showOnline","isChannel","unread","values","el","attr","concat","ContactAction","action","badge_you","badge_owner","ContactList","topicSelected","contactNodes","contactsCount","contacts","c","filterFunc","filter","private","toLowerCase","public","myUserId","isOwner","deliveryStatus","latestMessage","_status","msgStatus","showUnread","connected","onTopicSelected","noScroll","dangerouslySetInnerHTML","__html","emptyListMessage","MenuCancel","onCancel","ErrorPanel","show","level","onClearError","warn","text","whiteSpace","actionText","Chip","handleCancel","invalid","noAvatar","required","ChipInput","deriveStateFromProps","input","focused","handleTextInput","removeChipAt","handleChipCancel","handleFocusGained","handleFocusLost","handleKeyDown","placeholder","chips","prompt","sortedChips","sortChips","staticMembers","chipIndex","indexChips","prevState","keep","normal","includes","removed","onChipRemoved","onFocusLost","onEnter","undefined","avatarDisabled","onFocus","onBlur","onKeyDown","autoFocus","no_contacts","contacts_not_found_short","GroupManager","members","indexMembers","keepInitialMembers","requiredMember","contactFilter","noContactsMessage","selectedContacts","handleContactSelected","handleMemberRemoved","handleContactFilter","handleSubmit","m","delta","present","keepInitial","stat","sel","userId","status","splice","val","query","instance","added","Object","keys","k","onSubmit","doContactFiltering","VisiblePassword","handleVisibility","handeTextChange","handleEditingFinished","onFinished","setTimeout","activeElement","tabIndex","autoComplete","InPlaceEdit","active","initialValue","handleStartEditing","handlePasswordFinished","newValue","focus","event","checkValidity","fieldType","spanText","spanClass","MoreButton","open","handleToggle","onToggle","joiner","writer","preser","approver","sharer","deleter","owner","PermissionsEditor","names","skip","compare","userTitle","userAvatar","modeTitle","compareTitle","TagManager","tags","tagInput","activated","handleTagInput","handleAddTag","handleRemoveTag","nextProps","last","tag","maxTagCount","getServerLimit","onTagsChanged","minTagLength","maxTagLength","add_tags_prompt","requested","granted","other_user","delete_messages","leave_chat","leave_chat_warning","block_contact","block_contact_warning","report_chat","report_chat_warning","InfoView","admin","muted","address","groupTopic","channel","fullName","selectedContact","access","modeGiven","modeWant","modeGiven2","modeWant2","auth","anon","contactList","showMemberPanel","showPermissionEditorFor","moreInfoExpanded","previousMetaDesc","previousSubsUpdated","previousTagsUpdated","resetSubs","resetDesc","onMetaDesc","onSubsUpdated","onTagsUpdated","handleFullNameUpdate","handlePrivateUpdate","handleImageChanged","handleMuted","handlePermissionsChanged","handleLaunchPermissionsEditor","handleHidePermissionsEditor","handleShowAddMembers","handleHideAddMembers","handleMemberUpdateRequest","handleDeleteMessages","handleLeave","handleBlock","handleReport","handleMemberSelected","handleMoreInfo","handleTagsUpdated","handleContextMenu","getType","newState","user2","subscriber","getGiven","getWant","subscribers","sub","defacs","getDefaultAccess","getAccessMode","isAdmin","isSharer","isDeleter","isGroupType","isChannelType","getMeta","startMetaQuery","withTags","build","desc","subs","onTopicDescUpdate","ignored","onChangePermissions","perm","userPermissionsEdited","which","toEdit","toCompare","toSkip","titleEdit","titleCompare","userPermissionsTitle","userPermissionsAvatar","editedPermissions","immutablePermissions","editedPermissionsTitle","immutablePermissionsTitle","editedPermissionsSkipped","onInitFind","onMemberUpdateRequest","onDeleteMessages","onLeaveTopic","onBlockTopic","onReportTopic","onTopicTagsUpdate","menuItems","displayMobile","errorLevel","errorText","searchableContacts","private_placeholder","more","no_members","FileProgress","progress","Attachment","downloader","downloadFile","filename","mimetype","getLargeFileHelper","download","loaded","uploading","onCancelUpload","cancel","helperFunc","isUrlRelative","downloadUrl","downloadWidget","UploadingImage","ChatMessage","uploader","onProgress","handleProgress","handleImagePreview","handleFormButtonClick","handleCancelUpload","onImagePreview","resp","act","ref","onFormResponse","MESSAGE_STATUS_FAILED","ratio","sideClass","deleted","sequence","response","bubbleClass","fullDisplay","userFrom","attachments","mimeType","att","userName","notFound","viewportWidth","authorizeURL","sanitizeImageUrl","inner","child","messaging_disabled","type_new_message","add_image_caption","file_attachment_too_large","cannot_initiate_upload","SendMessage","keypressTimestamp","getTime","handlePasteEvent","handleAttachImage","handleAttachFile","handleSend","handleKeyPress","handleMessageTyping","messageEditArea","disabled","onImageSuccess","onAttachmentSuccess","clipboardData","originalEvent","kind","getAsFile","imageFileScaledToBase64","imageFileToBase64","filePasted","bits","onAttachImage","onAttachFile","acceptBlank","noInput","onSendMessage","shiftKey","onKeyPress","messagePrompt","attachImage","click","attachFile","display","DocPreview","handleSendDoc","caption","onClose","mimeToIcon","default","image","video","iconFromMime","GroupSubs","usersOnline","totalCount","countToShow","some","overflow","ImagePreview","handleSendImage","assignWidth","node","getBoundingClientRect","maxlength","max","Invitation","handleButtonAction","evt","LoadSpinner","LogoView","version","serverVersion","serverAddress","HashNavigation","parts","path","forEach","part","decodeURIComponent","location","args","hasOwnProperty","parsed","parseUrlHash","composeUrlHash","sidepanel","online_now","last_seen","not_found","isUnconfirmed","ex","getExcessive","isPeerRestricted","ms","getMissing","MessagesView","getDerivedStateFromProps","leave","sendImageAttachment","sendFileAttachment","sendKeyPress","handleScrollReference","handleScrollEvent","handleDescChange","handleSubsUpdated","handleNewMessage","handleAllMessagesReceived","handleInfoReceipt","handleImagePostview","handleClosePreview","handleFormResponse","handleShowContextMenuMessage","handleNewChatAcceptance","handleEnablePeer","postReadNotification","clearNotificationQueue","readNotificationQueue","readNotificationTimer","messagesScroller","scrollTop","scrollHeight","scrollPosition","viewportHeight","onData","onAllMessagesReceived","onInfo","onPres","applicationVisible","isSubscribed","ready","newTopic","newTopicParams","_topicName","getQuery","withLaterDesc","withLaterSub","isReader","withLaterData","withLaterDel","fetchingMessages","setQuery","subscribe","code","onNewTopicCreated","queuedMessages","pub","_sending","publishMessage","setUrlTopic","blankState","nextState","docPreview","imagePreview","imagePostview","typingIndicator","msgs","assign","onlineSubs","peer","p2pPeerDesc","peerMessagingDisabled","isWriter","readingBlocked","unconformed","unconfirmed","oldTopicName","oldTopic","finally","msgHasMoreMessages","getMessagesPage","setInterval","clearInterval","n","shift","sendAt","noteRead","setMilliseconds","getMilliseconds","isNewMessage","from","what","clearTimeout","keyPressTimer","forceUpdate","sendMessage","attachJSON","parse","searchParams","set","search","messageSpecificMenuItems","onNewChat","noteKeyPress","maxInbandAttachmentSize","uploadCompletionPromise","upload","urlPromise","maxExternAttachmentSize","limit","tinyBlob","blobMime","tinyBits64","insertImage","_tempPreview","appendLineBreak","append","init","bits64","found","find","_cancelled","component","hideSelf","component2","messageNodes","previousFrom","chatBoxClass","nextFrom","thisFrom","isReply","userDesc","hi","ts","_uploader","lastSeen","cont","getMeTopic","getContact","seen","when","onHideMessagesView","ButtonBack","onBack","MenuContacts","onNewTopic","onSettings","MenuStart","onSignUp","SideNavbar","archived_contacts_title","ContactsView","handleAction","unreadThreads","archivedCount","chatList","blocked","arch","touched","action_ignored","onShowArchive","LocalStorageUtil","localStorage","setItem","JSON","stringify","getItem","oldVal","getObject","setObject","removeItem","CreateAccountView","login","password","email","errorCleared","saveToken","handleLoginChange","handlePasswordChange","handleEmailChange","handleFnChange","handleToggleSaveToken","onCreateAccount","submitClasses","login_prompt","password_prompt","full_name_prompt","email_prompt","stay_logged_in","EditAccountView","me","onBasicNavigate","AccGeneralView","credentials","getCredentials","addCredActive","addCredInvalid","newCred","previousOnTags","tnNewTags","tnCredsUpdated","handleCredChange","handleCredKeyDown","handleCredEntered","onCredsUpdated","creds","onUpdateAccount","method","asPhone","asEmail","onCredAdd","onUpdateTags","cred","meth","done","onCredConfirm","onCredDelete","full_name_placeholder","title_tag_manager","handleCheckboxClick","onToggleMessageSounds","onTogglePushNotifications","onToggleIncognitoMode","messageSounds","desktopAlertsEnabled","desktopAlerts","incognitoMode","delete_account","delete_account_warning","AccSecurityView","blockedCount","handlePasswordUpdate","handleDeleteAccount","pwd","onDeleteAccount","password_unchanged","onLogout","onShowBlocked","AccSupportView","LoginView","hostName","onLogin","autoCorrect","autoCapitalize","invalid_id","NewTopicById","groupId","NewTopicGroup","handlePrivateChange","handleTagsChanged","handleChannelToggle","SearchContacts","edited","handleSearchChange","handleSearch","handleClear","onSearchContacts","search_placeholder","search_for_contacts","search_no_results","NewTopicView","tabSelected","searchQuery","handleTabClick","handleSearchContacts","handleNewGroupSubmit","handleGroupByID","addUrlParam","removeUrlParam","onCreateTopic","priv","no_contacts_placeholder","searchResults","PasswordResetView","token","scheme","onReset","onRequest","reset","HostSelector","changed","handleHostNameChange","onServerAddressChange","hostOptions","list","SettingsView","transport","handleTransportSelected","handleServerAddressChange","onUpdate","def","ws","lp","transportOptions","phone","ValidationView","credCode","credMethod","numbers_only","register","settings","edit","general","security","notif","support","newtpk","SidepanelView","handleLoginRequested","handleNewTopic","onLoginRequest","view","errorAction","errorActionText","loadSpinnerVisible","loginDisabled","onGlobalSettings","onUpdateAccountTags","onValidateCredentials","onPasswordResetRequest","onResetPassword","detectServerAddress","host","protocol","hostname","port","isSecureConnection","POP_SOUND","Audio","reconnect_countdown","reconnect_now","push_init_failed","invalid_security_token","no_connection","code_doesnot_match","menu_item_info","TinodeWeb","getBlankState","handleResize","handleHashRoute","handleOnline","checkForAppUpdate","handleVisibilityEvent","handleError","handleLoginRequest","handleConnected","handleAutoreconnectIteration","doLogin","handleCredentialsRequest","handleLoginSuccessful","handleDisconnect","tnMeMetaDesc","tnMeContactUpdate","tnMeSubsUpdated","resetContactList","tnData","tnInitFind","tnFndSubsUpdated","handleTopicSelected","handleHideMessagesView","handleSendMessage","handleNewChatInvitation","handleNewAccount","handleNewAccountRequest","handleUpdateAccountRequest","handleUpdateAccountTagsRequest","handleToggleIncognitoMode","handleSettings","handleGlobalSettings","handleShowArchive","handleShowBlocked","handleToggleMessageSounds","handleCredAdd","handleCredDelete","handleCredConfirm","initDesktopAlerts","togglePushToken","requestPushToken","handleSidepanelCancel","handleStartTopicRequest","handleNewTopicCreated","handleTopicUpdateRequest","handleChangePermissions","handleLogout","handleDeleteMessagesRequest","handleLeaveUnsubRequest","handleBlockTopicRequest","handleReportTopic","handleShowContextMenu","defaultTopicContextMenu","handleHideContextMenu","handleShowAlert","handleShowInfoView","handleHideInfoView","handleValidateCredentialsRequest","handlePasswordResetRequest","handleResetPassword","handleContextMenuAction","autoLogin","messageSoundsOff","FIREBASE_INIT","firebaseToken","hidden","sidePanelSelected","sidePanelTitle","sidePanelAvatar","liveConnection","onLine","topicSelectedOnline","topicSelectedAcs","innerWidth","showInfoPanel","mobilePanel","contextMenuVisible","contextMenuBounds","contextMenuClickAt","contextMenuParams","contextMenuItems","alertVisible","alertParams","documentElement","clientWidth","clientHeight","keepLoggedIn","tnSetup","onConnect","onDisconnect","onAutoreconnectIteration","fbPush","usePublicVapidKey","messagingVapidKey","serviceWorker","reg","useServiceWorker","postMessage","setDeviceToken","parsedNav","expires","setAuthToken","connect","tab","readTimer","readTimerCallback","persistentCache","onSetupCompleted","appName","apiKey","secure","persist","setHumanLanguage","enableLogging","mobile","onupdatefound","installingWorker","installing","onstatechange","controller","newTopicTabSelected","isConnected","getServerInfo","ver","sec","prom","reconnectCountdown","timeLeft","seconds","secondsToTime","reconnect","isAuthenticated","promise","getAuthToken","loginBasic","loginToken","onContactUpdate","getCurrentUserID","withDesc","withCred","disconnect","setUrlSidePanel","isPresencer","archived","isArchived","play","foundContacts","merged","updated","prepareSearchableContacts","receivedTimer","noteRecv","fnd","getFndTopic","withSub","s","setMeta","isTopicOnline","getTopicAccessMode","isP2PType","am","updateWant","login_","password_","public_","cred_","tags_","createAccountBasic","updateAccountBasic","getCurrentLogin","on","clearStorage","onTokenRefresh","onMessage","payload","enabled","requestPermission","deleteToken","getToken","refreshedToken","delCredential","basicNavigator","isTopicCached","newGroupTopicName","oldName","newName","permissions","updateGiven","delCurrentUser","publish","self_blocked","subscribed","confirmText","rejectText","invite","requestResetAuthSecret","newPassword","str","btoa","atob","base64ReEncode","onAddMember","handleManageGroupMembers","hl","languages","baseLanguage","allMessages","IntlProvider","textComponent","__webpack_require__","module","getter","__esModule","d","exports","definition","o","defineProperty","enumerable","get","obj","prop","prototype","call","__webpack_modules__"],"mappings":"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","file":"index.prod.js","sourcesContent":["var __WEBPACK_NAMESPACE_OBJECT__ = React;","var __WEBPACK_NAMESPACE_OBJECT__ = ReactDOM;","var __WEBPACK_NAMESPACE_OBJECT__ = ReactIntl;","var __WEBPACK_NAMESPACE_OBJECT__ = firebase;","var __WEBPACK_NAMESPACE_OBJECT__ = Tinode;","var __WEBPACK_NAMESPACE_OBJECT__ = firebase.messaging;","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Alert extends React.PureComponent {\n  render() {\n    return this.props.visible ?\n      <div className=\"alert-container\">\n        <div className=\"alert\">\n          <div className=\"title\">{this.props.title}</div>\n          <div className=\"content\">{this.props.content}</div>\n          <div className=\"dialog-buttons\">\n            {this.props.onReject ?\n              <button className=\"outline\" onClick={this.props.onReject}>\n                {this.props.reject || <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />}\n              </button>\n              :\n              null\n            }\n            <button className=\"blue\" onClick={this.props.onConfirm}>\n              {this.props.confirm || <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\"  />}\n            </button>\n          </div>\n        </div>\n      </div>\n    :\n    null;\n  }\n};\n","// This is a generated file. Don't edit.\n\nexport const PACKAGE_VERSION = \"0.17.0-alpha1\";\n","import { PACKAGE_VERSION } from './version.js';\n\n// Name of this application, used in the User-Agent.\nexport const APP_NAME = 'TinodeWeb/' + (PACKAGE_VERSION || '0.16');\n\n// API key. Use https://github.com/tinode/chat/tree/master/keygen to generate your own\nexport const API_KEY = 'AQEAAAABAAD_rAp4DJh05a1HAwFT3A6K';\n\n// The array of possible hosts to connect to.\nexport const KNOWN_HOSTS = {hosted: 'web.tinode.co', local: 'localhost:6060'};\n\n// Default host name and port to connect to.\nexport const DEFAULT_HOST = KNOWN_HOSTS.hosted;\n\n// Enable console logging.\nexport const LOGGING_ENABLED = true;\n\n// Minimum time between two keypress notifications, milliseconds.\nexport const KEYPRESS_DELAY = 3*1000;\n// Delay before sending a {note} for reciving a message, milliseconds.\nexport const RECEIVED_DELAY = 500;\n// Delay before sending a read notification, milliseconds.\nexport const READ_DELAY = 1000;\n\n// The shortest allowed tag length. Matches the value on the server.\nexport const MIN_TAG_LENGTH = 2;\n// The greatest allowed tag length. Matches the value on the server.\nexport const MAX_TAG_LENGTH = 96;\n// The maximum number of tags allowed. Matches the value on the server.\nexport const MAX_TAG_COUNT = 16;\n\n// Access mode for P2P subscriptions initiated by the current user.\nexport const DEFAULT_P2P_ACCESS_MODE = 'JRWPS';\n// Access mode for new group topics created by the current user.\nexport const NEW_GRP_ACCESS_MODE = 'JRWPSAO';\n// Access mode for a channel.\nexport const CHANNEL_ACCESS_MODE = 'JR';\n\n// Access mode for no access.\nexport const NO_ACCESS_MODE = 'N';\n\n// Mediaquery breakpoint between desktop and mobile, in px. Should match the value\n// in @media (max-size: 640px) in base.css\nexport const MEDIA_BREAKPOINT = 640;\n// Size of css 'rem' unit in pixels. Default 1rem = 10pt = 13px.\nexport const REM_SIZE = 13;\n\n// Size of the avatar image: When an avatar image is uploaded, it's resized to\n// a square of this size.\nexport const AVATAR_SIZE = 128;\n\n// Size of the broken_image shown in MessagesView\nexport const BROKEN_IMAGE_SIZE = 32;\n\n// Number of chat messages to fetch in one call.\nexport const MESSAGES_PAGE = 24;\n\n// Default maximum in-band (included directly into the message) attachment size which fits into\n// a message of 256K in size. The actual binary size of the attachment should be smaller due to\n// base64 encoding expansion and some overhead, for instance 1024 bytes.\n// Increase this limit to a greater value in production, if desired. Also increase\n// max_message_size in the server config.\nexport const MAX_INBAND_ATTACHMENT_SIZE = 262144;\n\n// Absolute maximum attachment size to be used with the server = 8MB. Increase to\n// something like 100MB in production.\nexport const MAX_EXTERN_ATTACHMENT_SIZE = 1 << 23;\n\n// Maximum allowed linear dimension of an inline image in pixels. Larer images will be shrunk\n// to make the larger dimension fit under this size. You may want to adjust it to 1600 or\n// 2400 for production.\nexport const MAX_IMAGE_DIM = 1024;\n\n// Linear dimensions of image preview: shrink image under this size for previews.\nexport const IMAGE_PREVIEW_DIM = 64;\n\n// Maximum number of online users to be shown in a topic title bar. Others will be\n// hidden under \"+X more\"\nexport const MAX_ONLINE_IN_TOPIC = 4;\n\n// Maximum length of user name, topic title, and private comment.\nexport const MAX_TITLE_LENGTH = 60;\n\n// Length of message previews in chat list, in characters.\nexport const MESSAGE_PREVIEW_LENGTH = 80;\n\n// Link for \"Contact Us\".\nexport const LINK_CONTACT_US = 'email:info@tinode.co';\n\n// Link to Privacy Policy.\nexport const LINK_PRIVACY_POLICY = 'https://tinode.co/privacy.html';\n\n// Link to Terms of Service.\nexport const LINK_TERMS_OF_SERVICE = 'https://tinode.co/terms.html';\n","// Context Menu: popup/dropdown menu.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { injectIntl, defineMessages } from 'react-intl';\n\nimport { REM_SIZE } from '../config.js';\nimport HashNavigation from '../lib/navigation.js';\n\nconst messages = defineMessages({\n  info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  },\n  clear_messages: {\n    id: 'menu_item_clear_messages',\n    defaultMessage: 'Clear messages',\n    description: 'Delete all messages'\n  },\n  clear_for_all: {\n    id: 'menu_item_clear_messages_for_all',\n    defaultMessage: 'Clear for All',\n    description: 'Delete all message(s) for all members'\n  },\n  delete: {\n    id: 'menu_item_delete',\n    defaultMessage: 'Delete',\n    description: 'Delete selected messages'\n  },\n  delete_for_all: {\n    id: 'menu_item_delete_for_all',\n    defaultMessage: 'Delete for All',\n    description: 'Delete selected message(s) for all members'\n  },\n  send_retry: {\n    id: 'menu_item_send_retry',\n    defaultMessage: 'Retry',\n    description: 'Retry sending message'\n  },\n  mute: {\n    id: 'menu_item_mute',\n    defaultMessage: 'Mute',\n    description: 'Turn off notifications'\n  },\n  unmute: {\n    id: 'menu_item_unmute',\n    defaultMessage: 'Unmute',\n    description: 'Turn notifications on'\n  },\n  topic_delete: {\n    id: 'menu_item_delete_topic',\n    defaultMessage: 'Delete',\n    description: 'Delete entire topic'\n  },\n  topic_delete_warning: {\n    id: 'topic_delete_warning',\n    defaultMessage: 'Are you sure you want to delete this conversation?',\n    description: 'Alert warning when deleting entire topic'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  unblock: {\n    id: 'menu_item_unblock',\n    defaultMessage: 'Unblock',\n    description: 'Unblock topic or user'\n  },\n  // Generic string suitable for either topic or user.\n  block: {\n    id: 'menu_item_block',\n    defaultMessage: 'Block',\n    description: 'Block topic or user'\n  },\n  topic_block_warning: {\n    id: 'topic_block_warning',\n    defaultMessage: 'Are you sure you want to block this conversation?',\n    description: 'Alert warning when blocking a topic.'\n  },\n  member_delete: {\n    id: 'menu_item_member_delete',\n    defaultMessage: 'Remove',\n    description: 'Remove user from topic'\n  },\n  archive: {\n    id: 'menu_item_archive_topic',\n    defaultMessage: 'Archive',\n    description: 'Move topic from the list of active chats to archive'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n});\n\nclass ContextMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const {formatMessage} = props.intl;\n\n    this.handlePageClick = this.handlePageClick.bind(this);\n    this.handleEscapeKey = this.handleEscapeKey.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n\n    // Preconfigured menu items.\n    this.MenuItems = {\n      'topic_info': {\n        id: 'topic_info',\n        title: formatMessage(messages.info),\n        handler: null\n      },\n      'messages_clear': {\n        id: 'messages_clear',\n        title: formatMessage(messages.clear_messages),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.menu_item_clear_messages), // title\n            formatMessage(messages.clear_messages_warning), // content\n            (() => { this.deleteMessages(true, false, params, errorHandler); }), // onConfirm\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'messages_clear_hard': {\n        id: 'messages_clear_hard',\n        title: formatMessage(messages.clear_for_all),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.menu_item_clear_messages_for_all), // title\n            formatMessage(message.delete_messages_warning), // content\n            (() => { return this.deleteMessages(true, true, params, errorHandler); }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'message_delete': {\n        id: 'message_delete',\n        title: formatMessage(messages.delete),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, false, params, errorHandler);\n        }\n      },\n      'message_delete_hard': {\n        id: 'message_delete_hard',\n        title: formatMessage(messages.delete_for_all),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, true, params, errorHandler);\n        }\n      },\n      'menu_item_send_retry': {\n        id: 'menu_item_send_retry',\n        title: formatMessage(messages.send_retry),\n        handler: (params, errorHandler) => {\n          return this.retryMessage(params, errorHandler);\n        }\n      },\n      'topic_unmute': {\n        id: 'topic_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'topic_mute': {\n        id: 'topic_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'topic_unblock': {\n        id: 'topic_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n      'topic_block': {\n        id: 'topic_block',\n        title: formatMessage(messages.block),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.block), // title\n            formatMessage(messages.topic_block_warning), // content\n            (() => {\n              return this.topicPermissionSetter('-JP', params, errorHandler).then((ctrl) => {\n                this.props.onTopicRemoved(params.topicName);\n                return ctrl;\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_delete': {\n        id: 'topic_delete',\n        title: formatMessage(messages.topic_delete),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.menu_item_delete_topic), // title\n            formatMessage(messages.topic_delete_warning), // content\n            (() => {\n              const topic = this.props.tinode.getTopic(params.topicName);\n              if (!topic) {\n                console.log(\"Topic not found: \", params.topicName);\n                return;\n              }\n              return topic.delTopic(true).catch((err) => {\n                if (errorHandler) {\n                  errorHandler(err.message, 'err');\n                }\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_archive': {\n        id: 'topic_archive',\n        title: formatMessage(messages.archive),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic) {\n            console.log(\"Topic not found: \", params.topicName);\n            return;\n          }\n          return topic.archive(true).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      // menu_item_edit_permissions is defined elsewhere.\n      'permissions': {\n        id: 'permissions',\n        title: formatMessage(messages.edit_permissions),\n        handler: null\n      },\n      'member_delete': {\n        id: 'member_delete',\n        title: formatMessage(messages.member_delete),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic || !params.user) {\n            console.log(\"Topic or user not found: '\" + params.topicName + \"', '\" + params.user + \"'\");\n            return;\n          }\n          return topic.delSubscription(params.user).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      'member_mute': {\n        id: 'member_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'member_unmute': {\n        id: 'member_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'member_block': {\n        id: 'member_block',\n        title: formatMessage(messages.block),\n        handler: this.topicPermissionSetter.bind(this, '-JP')\n      },\n      'member_unblock': {\n        id: 'member_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handlePageClick, false);\n    document.addEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handlePageClick, false);\n    document.removeEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  handlePageClick(e) {\n    if (ReactDOM.findDOMNode(this).contains(e.target)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n  }\n\n  handleEscapeKey(e) {\n    if (e.keyCode === 27) {\n      this.props.hide();\n    }\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n    let item = this.props.items[e.currentTarget.dataset.id];\n    if (typeof item == 'string') {\n      item = this.MenuItems[item];\n    }\n\n    if (!item) {\n      console.log(\"Invalid menu item ID\", e.currentTarget.dataset.id);\n    } else {\n      this.props.onAction(\n        item.id,\n        item.handler(this.props.params, this.props.onError),\n        this.props.params);\n    }\n  }\n\n  // Menu Actions\n\n  deleteMessages(all, hard, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found: \", params.topicName);\n      return;\n    }\n\n    // We don't know if the message is still pending (e.g. attachment is being uploaded),\n    // so try cancelling first. No harm if we can't cancel.\n    // The message can be cancelled if transmission to the server has not\n    // started yet or if the message send has failed.\n    if (!all && topic.cancelSend(params.seq)) {\n      return;\n    }\n    // Can't cancel. Delete instead.\n    const promise = all ?\n      topic.delMessagesAll(hard) :\n      topic.delMessagesList([params.seq], hard);\n\n    return promise.catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Retries sending failed message.\n  retryMessage(params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    // Remove the existing message entry.\n    if (!topic || !topic.flushMessage(params.seq)) {\n      return;\n    }\n    const msg = topic.createMessage(params.content, false);\n    return topic.publishDraft(msg).catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Function is used by context menu to set permissions.\n  topicPermissionSetter(mode, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found\", params.topicName);\n      return;\n    }\n\n    let result = topic.updateMode(params.user, mode);\n    if (errorHandler) {\n      result = result.catch((err) => {\n        errorHandler(err.message, 'err');\n      });\n    }\n    return result;\n  }\n\n  render() {\n    let count = 0;\n    let menu = [];\n    this.props.items.map((item) => {\n      if (typeof item == 'string') {\n        item = this.MenuItems[item];\n      }\n      if (item && item.title) {\n        menu.push(\n          item.title == '-' ?\n            <li className=\"separator\" key={count} />\n            :\n            <li onClick={this.handleClick} data-id={count} key={count}>{item.title}</li>\n        );\n      }\n      count++;\n    });\n\n    // Ensure that menu is inside the app-container.\n    const hSize = 12 * REM_SIZE;\n    const vSize = REM_SIZE * (0.7 + menu.length * 2.5);\n    const left = (this.props.bounds.right - this.props.clickAt.x < hSize) ?\n        (this.props.clickAt.x - this.props.bounds.left - hSize) :\n        (this.props.clickAt.x - this.props.bounds.left);\n    const top = (this.props.bounds.bottom - this.props.clickAt.y < vSize) ?\n        (this.props.clickAt.y - this.props.bounds.top - vSize) :\n        (this.props.clickAt.y - this.props.bounds.top);\n\n    const position = {\n      left: left + 'px',\n      top: top + 'px'\n    };\n\n    return (\n      <ul className=\"menu\" style={position}>\n        {menu}\n      </ul>\n    );\n  }\n}\n\nexport default injectIntl(ContextMenu);\n","// Short representation of time in the past.\nexport function shortDateFormat(then, locale) {\n  locale = locale || window.navigator.userLanguage || window.navigator.language;\n  const now = new Date();\n  if (then.getFullYear() == now.getFullYear()) {\n    // Same year.\n    if (then.getMonth() == now.getMonth() && then.getDate() == now.getDate()) {\n      // Same month and day, show time only.\n      return then.toLocaleTimeString(locale, {hour12: false, hour: '2-digit', minute: '2-digit'});\n    }\n    // Different month and/or day, show month day, time.\n    return then.toLocaleDateString(locale,\n      {hour12: false, month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit'});\n  }\n  // Different year: just show the date.\n  return then.toLocaleDateString(locale, {year: 'numeric', month: 'short', day: 'numeric'});\n}\n\n// Convert seconds to minutes:seconds, i.e. 156 sec -> 2:36.\nexport function secondsToTime(seconds) {\n  const min = Math.floor(seconds / 60);\n  let sec = seconds % 60;\n  sec = sec < 10 ? `0${sec}` : sec;\n  return `${min}:${sec}`;\n}\n\n// Convert a number of bytes to human-readable format.\nexport function bytesToHumanSize(bytes) {\n  if (!bytes || bytes == 0) {\n    return '0 Bytes';\n  }\n\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n  const bucket = Math.min(Math.floor(Math.log2(bytes) / 10) | 0, sizes.length-1);\n  const count = bytes / Math.pow(1024, bucket);\n  const round = bucket > 0 ? (count < 3 ? 2 : (count < 30 ? 1 : 0)) : 0;\n  return count.toFixed(round) + ' ' + sizes[bucket];\n}\n\n// Get 32 bit integer hash value for a string. Ideally it should produce the same value\n// as Java's String#hash().\nexport function stringHash(value) {\n  let hash = 0;\n  value = '' + value;\n  for (let i = 0; i < value.length; i++) {\n    hash = ((hash << 5) - hash) + value.charCodeAt(i);\n    hash = hash & hash; // Convert to 32bit integer\n  }\n  return hash;\n}\n","import React from 'react';\n\nimport Tinode from 'tinode-sdk';\n\nimport { stringHash } from '../lib/strformat.js';\n\nexport default class LetterTile extends React.PureComponent {\n  render() {\n    let avatar;\n    if (this.props.avatar === true) {\n      const isGroup = (Tinode.topicType(this.props.topic) == 'grp');\n      const iconColor = (isGroup ? 'light-color' : 'dark-color')\n        + (Math.abs(stringHash(this.props.topic)) % 16);\n      if (this.props.topic && this.props.title && this.props.title.trim()) {\n        const letter = this.props.title.trim().charAt(0);\n        const className = 'lettertile ' + iconColor;\n        avatar = (<div className={className}><div>{letter}</div></div>)\n      } else {\n        const className = 'material-icons ' + iconColor;\n        avatar = isGroup ?\n          <i className={className}>group</i> : <i className={className}>person</i>;\n      }\n    } else if (this.props.avatar) {\n      // If avatar image is invalid, show a placeholder.\n      avatar = <img className=\"avatar\" alt=\"avatar\" src={this.props.avatar}\n        onError={(e)=>{e.target.onerror = null; e.target.src=\"/img/broken_image.png\"}} />;\n    } else {\n      avatar = null;\n    }\n    return avatar;\n  }\n}\n","// File and image helper functions.\nimport { MAX_INBAND_ATTACHMENT_SIZE, MAX_IMAGE_DIM } from '../config.js';\nimport { bytesToHumanSize } from './strformat.js'\n\n// Supported image MIME types and corresponding file extensions.\nexport const SUPPORTED_IMAGE_FORMATS = ['image/jpeg', 'image/gif', 'image/png', 'image/svg', 'image/svg+xml'];\nexport const MIME_EXTENSIONS         = ['jpg',        'gif',       'png',       'svg',       'svg'];\n\n// Make a data URL from public.photo\nexport function makeImageUrl(photo) {\n  return (photo && photo.type && photo.data) ?\n    'data:image/' + photo.type + ';base64,' + photo.data : null;\n}\n\n// Calculate linear dimensions for scaling image down to fit under a certain size.\n// Returns an object which contains destination sizes, source sizes, and offsets\n// into source (when making square images).\nexport function fitImageSize(width, height, maxWidth, maxHeight, forceSquare) {\n  // Sanitize input\n  width = width | 0;\n  height = height | 0;\n  maxWidth = maxWidth | 0;\n  maxHeight = maxHeight | 0;\n\n  if (width <= 0 || height <= 0 || maxWidth <= 0 || maxHeight <= 0) {\n    return null;\n  }\n\n  if (forceSquare) {\n    maxWidth = maxHeight = Math.min(maxWidth, maxHeight);\n  }\n\n  let scale = Math.min(\n    Math.min(width, maxWidth) / width,\n    Math.min(height, maxHeight) / height\n  );\n\n  let size = {\n    dstWidth: (width * scale) | 0,\n    dstHeight: (height * scale) | 0,\n  };\n\n  if (forceSquare) {\n    // Also calculate parameters for making the image square.\n    size.dstWidth = size.dstHeight = Math.min(size.dstWidth, size.dstHeight);\n    size.srcWidth = size.srcHeight = Math.min(width, height);\n    size.xoffset = ((width - size.srcWidth) / 2) | 0;\n    size.yoffset = ((height - size.srcWidth) / 2) | 0;\n  } else {\n    size.xoffset = size.yoffset = 0;\n    size.srcWidth = width;\n    size.srcHeight = height;\n  }\n  return size;\n}\n\n// Ensure file's extension matches mime content type\nexport function fileNameForMime(fname, mime) {\n  const idx = SUPPORTED_IMAGE_FORMATS.indexOf(mime);\n  if (idx < 0 || !fname) {\n    // Unknown mime or empty name.\n    return fname;\n  }\n  const ext = MIME_EXTENSIONS[idx];\n\n  const at = fname.lastIndexOf('.');\n  if (at >= 0) {\n    fname = fname.substring(0, at);\n  }\n  return fname + '.' + ext;\n}\n\n// Scale uploaded image to fit under certain dimensions and byte size, optionally constraining to a square.\n// On success calls onSuccess callback with the scaled image as Blob.\nexport function imageScaled(fileOrBlob, maxWidth, maxHeight, maxSize, forceSquare, onSuccess, onError) {\n  const img = new Image();\n  img.crossOrigin = 'Anonymous';\n  img.onerror = function(err) {\n    onError(\"Image format unrecognized\");\n  }\n  img.onload = async function() {\n    // Once the image is loaded, the URL is no longer needed.\n    URL.revokeObjectURL(img.src);\n\n    // Calculate the desired image dimensions.\n    const dim = fitImageSize(this.width, this.height, maxWidth, maxHeight, forceSquare);\n    if (!dim) {\n      onError(\"Invalid image\");\n      return;\n    }\n    let canvas = document.createElement('canvas');\n    canvas.width = dim.dstWidth;\n    canvas.height = dim.dstHeight;\n    let ctx = canvas.getContext('2d');\n    ctx.imageSmoothingEnabled = true;\n    ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n      0, 0, dim.dstWidth, dim.dstHeight);\n\n    const mime = SUPPORTED_IMAGE_FORMATS.indexOf(fileOrBlob.type) < 0 ? 'image/jpeg' : fileOrBlob.type;\n    // Generate blob to check size of the image.\n    let blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    if (!blob) {\n      onError(\"Unsupported image format\");\n      return;\n    }\n\n    // Ensure the image is not too large. Shrink the image keeping the aspect ratio.\n    // Do nothing if maxsize is <= 0.\n    while (maxSize > 0 && blob.length > maxSize) {\n      dim.dstWidth = (dim.dstWidth * 0.70710678118) | 0;\n      dim.dstHeight = (dim.dstHeight * 0.70710678118) | 0;\n      canvas.width = dim.dstWidth;\n      canvas.height = dim.dstHeight;\n      ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n        0, 0, dim.dstWidth, dim.dstHeight);\n      blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    }\n\n    canvas = null;\n    onSuccess(blob, mime, dim.dstWidth, dim.dstHeight, fileNameForMime(fileOrBlob.name, mime));\n  };\n  img.src = URL.createObjectURL(fileOrBlob);\n}\n\n// Convert File to base64 string.\nexport function fileToBase64(file, onSuccess) {\n  const reader = new FileReader();\n  reader.addEventListener('load', function() {\n    onSuccess(file.type, reader.result.split(',')[1], file.name);\n  });\n  reader.readAsDataURL(file);\n}\n\n// Convert Blob to base64 string.\nexport function blobToBase64(blob, onSuccess) {\n  const reader = new FileReader();\n  reader.addEventListener('load', function() {\n    onSuccess(blob.type, reader.result.split(',')[1]);\n  });\n  reader.readAsDataURL(blob);\n}\n\n// File pasted from the clipboard. It's either an inline image or a file attachment.\n// FIXME: handle large files out of band.\nexport function filePasted(event, onImageSuccess, onAttachmentSuccess, onError) {\n  var items = (event.clipboardData || event.originalEvent.clipboardData || {}).items;\n  for (var i in items) {\n    var item = items[i];\n    if (item.kind === 'file') {\n      var file = item.getAsFile();\n      if (!file) {\n        console.log(\"Failed to get file object from pasted file item\", item.kind, item.type);\n        continue;\n      }\n      if (file.type && file.type.split('/')[0] == 'image') {\n        // Handle inline image\n        if (file.size > MAX_INBAND_ATTACHMENT_SIZE || SUPPORTED_IMAGE_FORMATS.indexOf(file.type) < 0) {\n          imageFileScaledToBase64(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, false, onImageSuccess, onError);\n        } else {\n          imageFileToBase64(file, onImageSuccess, onError);\n        }\n      } else {\n        // Handle file attachment\n        fileToBase64(file, onAttachmentSuccess, onError)\n      }\n      // Indicate that the pasted data contains a file.\n      return true;\n    }\n  }\n  // No file found.\n  return false;\n}\n\n// Get mime type from data URL header.\nexport function getMimeType(header) {\n  var mime = /^data:(image\\/[-+a-z0-9.]+);base64/.exec(header);\n  return (mime && mime.length > 1) ? mime[1] : null;\n}\n\n// Given length of a binary object in bytes, calculate the length after\n// base64 encoding.\nexport function base64EncodedLen(n) {\n  return Math.floor((n + 2) / 3) * 4;\n}\n\n// Given length of a base64-encoded object, calculate decoded size of the\n// pbject in bytes.\nexport function base64DecodedLen(n) {\n  return Math.floor(n / 4) * 3;\n}\n\n// Re-encode string to standard base64 encoding with padding.\n// The string may be base64-URL encoded without the padding.\nexport function base64ReEncode(str) {\n  if (str) {\n    str = str.replace(/-/g, '+').replace(/_/g, '/');\n    try {\n      str = btoa(atob(str));\n    } catch(err) {\n      console.log(\"Failed to base64 re-encode string.\", err);\n      str = null;\n    }\n  }\n  return str;\n}\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\n\nimport { AVATAR_SIZE, MAX_EXTERN_ATTACHMENT_SIZE } from '../config.js';\nimport { imageScaled, blobToBase64, makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class AvatarUpload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dataUrl: props.avatar\n    };\n\n    this.handleFileUpload = this.handleFileUpload.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.avatar != prevProps.avatar) {\n      this.setState({dataUrl: this.props.avatar})\n    }\n  }\n\n  handleFileUpload(e) {\n    imageScaled(e.target.files[0], AVATAR_SIZE, AVATAR_SIZE, MAX_EXTERN_ATTACHMENT_SIZE, true,\n      // Image successfully scaled and converted.\n      (mime, blob) => {\n        // Convert blob to base64-encoded bits.\n        blobToBase64(blob, (unused, base64bits) => {\n          const du = makeImageUrl({data: base64bits, type: mime});\n          this.setState({dataUrl: du});\n          this.props.onImageChanged(du);\n        });\n      },\n      // Failure\n      (err) => {\n        this.props.onError(err, 'err');\n      });\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  render() {\n    // Randomize id value in case more than one AvatarUpload is shown\n    // at the same time.\n    const randId = 'file-input-avatar-' + (Math.random() + '').substr(2);\n    const className = 'avatar-upload' + (this.props.readOnly ? ' read-only' : '');\n    return (\n      <div className={className}>\n        {this.props.readOnly || !this.state.dataUrl ?\n          null :\n          <a href=\"#\" className=\"clear-avatar\" onClick={(e) => {e.preventDefault(); this.props.onImageChanged(null);}}>\n            <i className=\"material-icons\">clear</i>\n          </a>}\n        {this.state.dataUrl ?\n          <img src={this.state.dataUrl} className=\"preview\" /> :\n          this.props.readOnly && this.props.uid ?\n            <div className=\"avatar-box\">\n              <LetterTile\n                avatar={true}\n                topic={this.props.uid}\n                title={this.props.title} />\n            </div>\n            :\n            <div className=\"blank\">{AVATAR_SIZE}&times;{AVATAR_SIZE}</div>}\n        {this.props.readOnly ? null :\n          <input type=\"file\" id={randId} className=\"inputfile hidden\"\n            accept=\"image/*\" onChange={this.handleFileUpload} />}\n        {this.props.readOnly ? null :\n        <label htmlFor={randId} className=\"round\">\n          <i className=\"material-icons\">file_upload</i>\n        </label>}\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\n/* BEGIN CheckBox: styled checkbox */\nexport default class CheckBox extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange() {\n    this.props.onChange(this.props.name, !this.props.checked);\n  }\n\n  render() {\n    return (\n      this.props.onChange ? (\n        this.props.checked ?\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box</i> :\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box_outline_blank</i>\n        ) : (\n          this.props.checked ?\n            <i className=\"material-icons\">check_box</i> :\n            <i className=\"material-icons\">check_box_outline_blank</i>\n        )\n    );\n  }\n}\n/* END CheckBox */\n","import React from 'react';\n\nconst icon_mapping = {'muted': 'notifications_off', 'banned': 'block'};\n\n/* Contact's labels: [you], or icons [muted], [blocked] */\nexport default class ContactBadges extends React.PureComponent {\n    render() {\n      let badges = null;\n      if (this.props.badges && this.props.badges.length > 0) {\n        badges = [];\n        this.props.badges.map(function(b) {\n          if (b.icon) {\n            badges.push(<i className=\"material-icons as-badge\" key={b.key || b.icon}>{icon_mapping[b.icon]}</i>);\n          } else {\n            const style = 'badge' + (b.color ? ' ' + b.color : '');\n            badges.push(<span className={style} key={b.key || b.name}>{b.name}</span>);\n          }\n        });\n        return <>{badges}</>;\n      }\n      return null;\n    }\n};\n","// Odds and ends\n\nimport Tinode from 'tinode-sdk';\n\n// Make shortcut icon appear with a green dot + show unread count in title.\nexport function updateFavicon(count) {\n  const oldIcon = document.getElementById('shortcut-icon');\n  const head = document.head || document.getElementsByTagName('head')[0];\n  const newIcon = document.createElement('link');\n  newIcon.type = 'image/png';\n  newIcon.id = 'shortcut-icon';\n  newIcon.rel = 'shortcut icon';\n  newIcon.href = 'img/logo32x32' + (count > 0 ? 'a' : '') + '.png';\n  if (oldIcon) {\n    head.removeChild(oldIcon);\n  }\n  head.appendChild(newIcon);\n\n  document.title = (count > 0 ? '('+count+') ' : '') + 'Tinode';\n}\n\n// Create VCard which represents topic 'public' info\nexport function vcard(fn, imageDataUrl) {\n  let card = null;\n\n  if ((fn && fn.trim()) || imageDataUrl) {\n    card = {};\n    if (fn) {\n      card.fn = fn.trim();\n    }\n    if (imageDataUrl) {\n      const dataStart = imageDataUrl.indexOf(',');\n      card.photo = dataStart >= 0 ? {\n        data: imageDataUrl.substring(dataStart+1),\n        type: 'jpg'\n      } : imageDataUrl;\n    }\n  }\n  return card;\n}\n\n// Deep-shallow compare two arrays: shallow compare each element.\nexport function arrayEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (!Array.isArray(a) || !Array.isArray(b)) {\n    return false;\n  }\n\n  // Compare lengths first.\n  if (a.length != b.length) {\n    return false;\n  }\n  // Order of elements is ignored.\n  a.sort();\n  b.sort();\n  for (let i = 0, l = a.length; i < l; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Checks (loosely) if the given string is a phone. If so, returns the phone number in a format\n// as close to E.164 as possible.\nexport function asPhone(val) {\n  val = val.trim();\n  if (/^(?:\\+?(\\d{1,3}))?[- (.]*(\\d{3})[- ).]*(\\d{3})[- .]*(\\d{2})[- .]*(\\d{2})?$/.test(val)) {\n    return val.replace(/[- ().]*/, '');\n  }\n  return null;\n}\n\n// Checks (loosely) if the given string is an email. If so returns the email.\nexport function asEmail(val) {\n  val = val.trim();\n  if (/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(val)) {\n    return val;\n  }\n  return null;\n}\n\n// Checks if URL is a relative url, i.e. has no 'scheme://', including the case of missing scheme '//'.\n// The scheme is expected to be RFC-compliant, e.g. [a-z][a-z0-9+.-]*\n// example.html - ok\n// https:example.com - not ok.\n// http:/example.com - not ok.\n// ' ↲ https://example.com' - not ok. (↲ means carriage return)\nexport function isUrlRelative(url) {\n  return url && !/^\\s*([a-z][a-z0-9+.-]*:|\\/\\/)/im.test(url);\n}\n\n// Ensure URL does not present an XSS risk. Optional allowedSchemes may contain an array of\n// strings with permitted URL schemes, such as ['ftp', 'ftps']; otherwise accept http and https only.\n// If apikey and/or token is defined, it's appended to relative URL.\nexport function sanitizeUrl(url, allowedSchemes) {\n  if (!url) {\n    return null;\n  }\n\n  // Strip control characters and whitespace. They are not valid URL characters anyway.\n  url = url.replace(/[^\\x20-\\x7E]/gmi, '').trim();\n\n  // Relative URLs are safe.\n  // Relative URL does not start with ':', abcd123: or '//'.\n  if (!/^([a-z][a-z0-9+.-]*:|\\/\\/)/i.test(url)) {\n    return url;\n  }\n\n  // Blob URLs are safe.\n  if (/^blob:http/.test(url)) {\n    return url;\n  }\n\n  // Absolute URL. Accept only safe schemes, or no scheme.\n  const schemes = Array.isArray(allowedSchemes) ? allowedSchemes.join('|') : 'http|https';\n  const re = new RegExp('^((' + schemes + '):|//)', 'i');\n  if (!re.test(url)) {\n    return null;\n  }\n\n  return url;\n}\n\n// Ensure URL is suitable for <img src=\"url\"> field: the URL must be a relative URL or\n// have http:, https:, blob: or data: scheme.\n// The relative URL is appended with the API key and/or auth token.\n// In case of data: scheme, the URL must start with a 'data:image/XXXX;base64,'.\nexport function sanitizeImageUrl(url) {\n  if (!url) {\n    return null;\n  }\n\n  const sanitizedUrl = sanitizeUrl(url);\n  if (sanitizedUrl) {\n    return sanitizedUrl;\n  }\n\n  // Is this a data: URL of an image?\n  if (/data:image\\/[a-z0-9.-]+;base64,/i.test(url.trim())) {\n    return url;\n  }\n\n  return null;\n}\n\n// Given message's received status, return name and color of a delivery indicator icon.\nexport function deliveryMarker(received) {\n  switch (received) {\n    case Tinode.MESSAGE_STATUS_SENDING:\n      return { name: 'access_time' }; // watch face\n    case Tinode.MESSAGE_STATUS_FAILED:\n      return { name: 'warning', color: 'amber' }; // yellow icon /!\\\n    case Tinode.MESSAGE_STATUS_SENT:\n      return { name: 'done' }; // checkmark\n    case Tinode.MESSAGE_STATUS_RECEIVED:\n      return { name: 'done_all' }; // double checkmark\n    case Tinode.MESSAGE_STATUS_READ:\n      return { name: 'done_all', color: 'blue' }; // blue double checkmark\n  }\n  return null;\n}\n","// Received/read indicator.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { shortDateFormat } from '../lib/strformat.js';\nimport { deliveryMarker } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  message_sending: {\n    id: 'message_sending',\n    defaultMessage: 'sending...',\n    description: 'Message being sent, in place of time stamp'\n  },\n  message_sending_failed: {\n    id: 'message_sending_failed',\n    defaultMessage: 'failed',\n    description: 'Failed to send message, in place of time stamp'\n  }\n});\n\nclass ReceivedMarker extends React.PureComponent {\n  render() {\n    const {formatMessage} = this.props.intl;\n    let timestamp;\n    if (this.props.received <= Tinode.MESSAGE_STATUS_SENDING) {\n      timestamp = formatMessage(messages.message_sending);\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_FAILED) {\n      timestamp = formatMessage(messages.message_sending_failed);\n    } else {\n      timestamp = shortDateFormat(this.props.timestamp, this.props.intl.locale);\n    }\n\n    const icon = deliveryMarker(this.props.received);\n    const marker = icon ? <i className={'material-icons small ' + icon.color}>{icon.name}</i> : null;\n\n    return (\n      <span className=\"timestamp\">\n        {timestamp}{'\\u00a0'}{marker}\n      </span>\n    );\n  }\n};\n\nexport default injectIntl(ReceivedMarker);\n","// The counter of unread messages in the topic.\nimport React from 'react';\n\nexport default class UnreadBadge extends React.PureComponent {\n  render() {\n    return (this.props.count > 0 ?\n      <span className=\"unread\">{this.props.count > 9 ? \"9+\" : this.props.count}</span>\n      : null);\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport ContactBadges from './contact-badges.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\nimport UnreadBadge from './unread-badge.jsx';\n\nimport { Drafty } from 'tinode-sdk';\n\nimport { deliveryMarker } from '../lib/utils.js';\n\nexport default class Contact extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.props.onSelected) {\n      // Index this.props.index is used by GroupManager.\n      this.props.onSelected(this.props.item, this.props.index);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.props.item, y: e.pageY, x: e.pageX });\n  }\n\n  render() {\n    let title = this.props.title;\n    if (!title) {\n      title = <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n        description=\"Title shown when the topic has no name\" /></i>;\n    } else if (title.length > 30) {\n      // FIXME: this is probably wrong for RTL languages.\n      title = title.substring(0, 28) + '…';\n    }\n    const online = this.props.now ? 'online' : 'offline';\n    const avatar = this.props.avatar ? this.props.avatar : true;\n    const badges = this.props.badges ? this.props.badges.slice() : [];\n    const icon_badges = [];\n    if (this.props.acs) {\n      if (this.props.showMode) {\n        badges.push({name: this.props.acs.getMode(), key: 'mode'});\n      }\n      if (this.props.acs.isMuted()) {\n        icon_badges.push({icon: 'muted'});\n      }\n      if (!this.props.acs.isJoiner()) {\n        icon_badges.push({icon: 'banned'});\n      }\n    }\n\n    const subtitle = this.props.preview ?\n      (typeof this.props.preview == 'string' ? this.props.preview :\n        React.createElement(React.Fragment, null, Drafty.format(this.props.preview, draftyFormatter, this))) :\n      this.props.comment;\n\n    const icon = deliveryMarker(this.props.received);\n    const marker = icon ? <i className={'material-icons small space-right ' + icon.color}>{icon.name}</i> : null;\n\n    return (\n      <li className={!this.props.showCheckmark && this.props.selected ? 'selected' : null} onClick={this.handleClick}>\n        <div className=\"avatar-box\">\n          <LetterTile\n            avatar={avatar}\n            title={this.props.title}\n            topic={this.props.item} />\n          {this.props.showOnline ? <span className={online} /> :\n            (this.props.showCheckmark && this.props.selected ?\n            <i className=\"checkmark material-icons\">check_circle</i>\n            : null)}\n        </div>\n        <div className=\"text-box\">\n          <div><span className=\"contact-title\">{title}</span>\n            {this.props.isChannel ? <img src=\"/img/channel.png\" className=\"channel\" alt=\"channel\" /> : null}\n            <UnreadBadge count={this.props.unread} /><ContactBadges badges={icon_badges} />\n          </div>\n          <div className=\"contact-comment\">{marker}{subtitle || '\\u00A0'}</div>\n          <span><ContactBadges badges={badges} /></span>\n        </div>\n        {this.props.showContextMenu ?\n          <span className=\"menuTrigger\">\n            <a href=\"#\" onClick={this.handleContextClick}>\n              <i className=\"material-icons\">expand_more</i>\n            </a>\n          </span> : null}\n      </li>\n    );\n  }\n};\n\n\n// Converts Drafty object into a one-line preview.\nfunction draftyFormatter(style, data, values, key) {\n  let el = Drafty.tagName(style);\n  const attr = { key: key };\n  if (el) {\n    switch (style) {\n      case 'BR':\n        // Replace new line with a space.\n        el = React.Fragment;\n        values = [' '];\n        break;\n      case 'HL':\n        // Make highlight less prominent in preview.\n        attr.className = 'highlight preview';\n        break;\n      case 'LN':\n        // Disable links in previews.\n        el = 'span';\n        break;\n      case 'IM':\n        // Replace image with '[icon] Image'.\n        el = React.Fragment;\n        values = [<i key=\"im\" className=\"material-icons\">photo</i>, 'Picture'];\n        break;\n      case 'BN':\n        el = 'span';\n        attr.className = 'flat-button faux';\n        break;\n      case 'FM':\n        el = React.Fragment;\n        values = [<i key=\"fm\" className=\"material-icons\">dashboard</i>, 'Form: '].concat(values || []);\n        break;\n      case 'RW':\n        el = React.Fragment;\n        break;\n      case 'EX':\n        el = React.Fragment;\n        values = [<i key=\"ex\" className=\"material-icons\">attachment</i>, 'Attachment'];\n        break;\n      default:\n        if (el == '_UNKN') {\n          el = React.Fragment;\n          values = [<i key=\"unkn\" className=\"material-icons\">extension</i>];\n        }\n        break;\n    }\n    return React.createElement(el, attr, values);\n  } else {\n    return values;\n  }\n};\n","// A panel included into a list of contacts with an action text.\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\n\nclass ContactAction extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.onAction(this.props.action);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <li onClick={this.handleClick} className=\"action\">\n        <div className=\"action-text\">{formatMessage(this.props.title, this.props.values)}</div>\n      </li>\n    );\n  }\n};\n\nexport default injectIntl(ContactAction);\n","// ContactList: component for showing a list of contacts,\n// such as a list of group members in a group chat.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { Drafty } from 'tinode-sdk';\nimport Tinode from 'tinode-sdk';\n\nimport Contact from './contact.jsx';\nimport ContactAction from './contact-action.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nimport { MESSAGE_PREVIEW_LENGTH } from '../config.js';\n\nconst messages = defineMessages({\n  badge_you: {\n    id: 'badge_you',\n    defaultMessage: 'you',\n    description: 'Badge for indicating the current user'\n  },\n  badge_owner: {\n    id: 'badge_owner',\n    defaultMessage: 'owner',\n    description: 'Badge for indicating the owner'\n  }\n});\n\nclass ContactList extends React.Component {\n  render() {\n    const { formatMessage } = this.props.intl;\n    const showCheckmark = Array.isArray(this.props.topicSelected);\n    const contactNodes = [];\n    let contactsCount = 0;\n    if (this.props.contacts && this.props.contacts.length > 0) {\n      this.props.contacts.map((c) => {\n        if (c.action) {\n          // Action item\n          contactNodes.push(\n            <ContactAction\n              title={c.title} action={c.action} values={c.values}\n              key={c.action}\n              onAction={this.props.onAction}\n              />);\n        } else {\n          // Normal contact\n          const key = this.props.showMode ? c.user : (c.topic || c.user);\n          // If filter function is provided, filter out the items\n          // which don't satisfy the condition.\n          if (this.props.filterFunc && this.props.filter) {\n            let content = [key];\n            if (c.private && c.private.comment) {\n              content.push(('' + c.private.comment).toLowerCase());\n            }\n            if (c.public && c.public.fn) {\n              content.push(('' + c.public.fn).toLowerCase());\n            }\n            if (!this.props.filterFunc(this.props.filter, content)) {\n              return;\n            }\n          }\n\n          const isChannel = Tinode.isChannelTopicName(key);\n          const selected = showCheckmark ?\n            (this.props.topicSelected.indexOf(key) > -1) :\n            (this.props.topicSelected === key);\n          const badges = [];\n          if (this.props.showMode) {\n            if (key == this.props.myUserId) {\n              badges.push({name: formatMessage(messages.badge_you), color: 'green'});\n            }\n            if (c.acs && c.acs.isOwner()) {\n              badges.push({name: formatMessage(messages.badge_owner), color: 'blue'});\n            }\n          }\n\n          const comment = Array.isArray(c.private) ?\n            c.private.join(',') : (c.private ? c.private.comment : null);\n          let preview;\n          let deliveryStatus;\n          if (!this.props.showMode) {\n            const msg = c.latestMessage();\n            if (msg) {\n              deliveryStatus = msg._status || c.msgStatus(msg, true);\n              preview = typeof msg.content == 'string' ?\n                msg.content.substr(0, MESSAGE_PREVIEW_LENGTH) :\n                Drafty.preview(msg.content, MESSAGE_PREVIEW_LENGTH);\n            }\n          }\n          contactNodes.push(\n            <Contact\n              title={c.public ? c.public.fn : null}\n              avatar={makeImageUrl(c.public ? c.public.photo : null)}\n              comment={comment}\n              preview={preview}\n              received={deliveryStatus}\n              unread={this.props.showUnread ? c.unread : 0}\n              now={c.online && this.props.connected}\n              acs={c.acs}\n              showMode={this.props.showMode}\n              badges={badges}\n              showCheckmark={showCheckmark}\n              selected={selected}\n              showOnline={this.props.showOnline && !isChannel}\n              isChannel={isChannel}\n              onSelected={this.props.onTopicSelected}\n              showContextMenu={this.props.showContextMenu}\n              item={key}\n              index={contactNodes.length}\n              key={key} />\n          );\n          contactsCount ++;\n        }\n      }, this);\n    }\n\n    return (\n      <div className={this.props.noScroll ? null : \"scrollable-panel\"}>\n        {contactsCount == 0 ?\n          <div className=\"center-medium-text\"\n            dangerouslySetInnerHTML={{__html: this.props.emptyListMessage}} />\n          :\n          null\n        }\n        {contactNodes.length > 0 ?\n          <ul className=\"contact-box\">\n            {contactNodes}\n          </ul>\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ContactList);\n","// The X menu to be displayed in title bars.\nimport React from 'react';\n\nexport default class MenuCancel extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n        <i className=\"material-icons\">close</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nimport MenuCancel from './menu-cancel.jsx';\n\nexport default class ErrorPanel extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      show: false,\n    };\n\n    this.hide = this.hide.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.level !== this.props.level) {\n      this.setState({\n        show: !(!this.props.level)\n      });\n    }\n  }\n\n  hide() {\n    this.setState({show: false});\n    if (this.props.onClearError) {\n      this.props.onClearError();\n    }\n  }\n\n  render() {\n    const icons = {err: 'error', warn: 'warning', info: 'info'}\n    const level = icons[this.props.level] || '';\n    const className = 'info-box ' + level;\n    return (\n      <div className={className}>\n        <div className=\"icon\"><i className=\"material-icons\">{level}</i></div>\n        <span>\n          {this.props.text}\n          {this.props.action ?\n            <>\n              &#32;<a href=\"#\"\n                style={{ whiteSpace: 'nowrap' }}\n                onClick={(e) => {e.preventDefault(); this.props.action();}}>\n                {this.props.actionText}\n              </a>\n            </>\n          : null}\n        </span>\n        <div className=\"cancel\"><MenuCancel onCancel={this.hide} /></div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\n\nexport default class Chip extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel(this.props.topic, this.props.index);\n  }\n\n  render() {\n    const title = this.props.title || this.props.topic;\n    const className = this.props.invalid ? 'chip invalid' : 'chip';\n    return (\n      <div className={className}>\n        {this.props.noAvatar ?\n          <span className=\"spacer\" /> :\n          <div className=\"avatar-box\">\n            <LetterTile\n              avatar={this.props.avatar || true}\n              topic={this.props.topic}\n              title={this.props.title} />\n          </div>\n        }\n        <span>{title}</span>\n        {this.props.onCancel && !this.props.required ?\n          <a href=\"#\" onClick={this.handleCancel} >&times;</a>\n          : <span className=\"spacer\" />}\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport Chip from './chip.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n/* BEGIN ChipInput: group membership widget */\nexport default class ChipInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = ChipInput.deriveStateFromProps(props);\n    this.state.input = '';\n    this.state.focused = false;\n\n    this.handleTextInput = this.handleTextInput.bind(this);\n    this.removeChipAt = this.removeChipAt.bind(this);\n    this.handleChipCancel = this.handleChipCancel.bind(this);\n    this.handleFocusGained = this.handleFocusGained.bind(this);\n    this.handleFocusLost = this.handleFocusLost.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  static deriveStateFromProps(props) {\n    return {\n      placeholder: props.chips ? '' : props.prompt,\n      sortedChips: ChipInput.sortChips(props.chips, props.staticMembers),\n      chipIndex: ChipInput.indexChips(props.chips)\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chips != this.props.chips ||\n      prevProps.staticMembers != this.props.staticMembers ||\n      prevProps.prompt != this.props.prompt) {\n      this.setState(ChipInput.deriveStateFromProps(this.props));\n    }\n    if (!prevState || this.props.chips.length > prevState.sortedChips.length) {\n      this.setState({input: ''});\n    }\n  }\n\n  // Map chip index to user name\n  static indexChips(chips) {\n    const index = {};\n    let count = 0;\n    chips.map((item) => {\n      index[item.user] = count;\n      count ++;\n    });\n    return index;\n  }\n\n  // Have non-removable chips appear before all other chips.\n  static sortChips(chips, keep) {\n    const required = [];\n    const normal = [];\n    chips.map((item) => {\n      if (keep && keep.includes(item.user)) {\n        required.push(item);\n      } else {\n        normal.push(item);\n      }\n    });\n    return required.concat(normal);\n  }\n\n  handleTextInput(e) {\n    this.setState({input: e.target.value});\n    if (this.props.filterFunc) {\n      this.props.filterFunc(e.target.value);\n    }\n  }\n\n  removeChipAt(idx) {\n    const removed = this.state.sortedChips[idx];\n    this.props.onChipRemoved(removed.user, this.state.chipIndex[removed.user]);\n  }\n\n  handleChipCancel(item, idx) {\n    this.removeChipAt(idx);\n  }\n\n  handleFocusGained() {\n    this.setState({focused: true});\n  }\n\n  handleFocusLost() {\n    this.setState({focused: false});\n    if (this.props.onFocusLost) {\n      this.props.onFocusLost(this.state.input);\n    }\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Backspace') {\n      if (this.state.input.length == 0 && this.state.sortedChips.length > 0) {\n        const at = this.state.sortedChips.length - 1;\n        if (this.state.sortedChips[at].user !== this.props.staticMembers) {\n          this.removeChipAt(at);\n        }\n      }\n    } else if (e.key === 'Enter') {\n      if (this.props.onEnter) {\n        this.props.onEnter(this.state.input);\n      }\n    } else if (e.key === 'Escape') {\n      if (this.props.onCancel) {\n        this.props.onCancel();\n      }\n    }\n  }\n\n  render() {\n    const chips = [];\n    let count = 0;\n    const staticMembers = this.props.staticMembers || [];\n    this.state.sortedChips.map((item) => {\n      chips.push(\n        <Chip\n          onCancel={this.handleChipCancel}\n          avatar={makeImageUrl(item.public ? item.public.photo : null)}\n          title={item.public ? item.public.fn : undefined}\n          noAvatar={this.props.avatarDisabled}\n          topic={item.user}\n          required={staticMembers.includes(item.user)}\n          invalid={item.invalid}\n          index={count}\n          key={item.user} />\n      );\n      count++;\n    });\n    const className = \"chip-input\" + (this.state.focused ? ' focused' : '');\n    return (\n      <div className={className}>\n        {chips}\n        <input type=\"text\"\n          placeholder={this.state.placeholder}\n          onChange={this.handleTextInput}\n          onFocus={this.handleFocusGained}\n          onBlur={this.handleFocusLost}\n          onKeyDown={this.handleKeyDown}\n          value={this.state.input}\n          autoFocus />\n      </div>\n    );\n  }\n};\n","// GroupMembers: control for managing a list of group members.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\nimport ContactList from './contact-list.jsx';\n\nconst messages = defineMessages({\n  no_contacts: {\n    id: 'no_contacts',\n    defaultMessage: 'You have no contacts :-(',\n    description: 'Shown in ContactsView when the user has no contacts'\n  },\n  contacts_not_found_short: {\n    id: 'contacts_not_found_short',\n    defaultMessage: \"No contacts match ''{query}''\",\n    description: 'Shown in ContactsView when search returned no results'\n  }\n});\n\nclass GroupManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Array of topic members\n      members: props.members,\n      index: GroupManager.indexMembers(props.members),\n      staticMembers: GroupManager.staticMembers(props.members, props.keepInitialMembers, props.requiredMember),\n      contactFilter: '',\n      noContactsMessage: props.intl.formatMessage(messages.no_contacts),\n      selectedContacts: GroupManager.selectedContacts(props.members)\n    };\n\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleMemberRemoved = this.handleMemberRemoved.bind(this);\n    this.handleContactFilter = this.handleContactFilter.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static indexMembers(members) {\n    let index = {};\n    members.map((m) => {\n      index[m.user] = {delta: 0, present: true}; // Delta: 0 unchanged, +1 added, -1 removed\n    });\n    return index;\n  }\n\n  static staticMembers(members, keepInitial, requiredMember) {\n    let stat = [];\n    members.map((m) => {\n      if (keepInitial || m.user == requiredMember) {\n        stat.push(m.user);\n      }\n    });\n    return stat;\n  }\n\n  static selectedContacts(members) {\n    let sel = [];\n    members.map((m) => {\n      sel.push(m.user);\n    });\n    return sel;\n  }\n\n  handleContactSelected(userId, index) {\n    let status = this.state.index[userId];\n    if (status) {\n      if (status.present) {\n        // Prevent duplicate members\n        return;\n      }\n      status.delta += 1;\n      status.present = true;\n    } else {\n      status = {delta: 1, present: true};\n    }\n\n    let m = this.state.members.slice();\n    m.push(this.props.contacts[index]);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleMemberRemoved(userId, index) {\n    const status = this.state.index[userId];\n    if (!status || !status.present) {\n      return;\n    }\n    status.present = false;\n    status.delta -= 1;\n\n    let m = this.state.members.slice();\n    m.splice(index, 1);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleContactFilter(val) {\n    const {formatMessage} = this.props.intl;\n    const msg = !val ?\n      formatMessage(messages.no_contacts) :\n      formatMessage(messages.contacts_not_found_short, {query: val});\n\n    this.setState({contactFilter: val, noContactsMessage: msg});\n  }\n\n  static doContactFiltering(filter, values) {\n    if (filter) {\n      for (let i=0; i<values.length; i++) {\n        if (values[i].indexOf(filter) >= 0) {\n          return true;\n        }\n      }\n      return false;\n    }\n    return true;\n  }\n\n  handleSubmit() {\n    var instance = this;\n    var members = [];\n    var added = [];\n    var removed = [];\n\n    var keys = Object.keys(this.state.index);\n    keys.map(function(k) {\n      if (instance.state.index[k].present) {\n        members.push(k);\n      }\n\n      if (instance.state.index[k].delta > 0) {\n        added.push(k);\n      } else if (instance.state.index[k].delta < 0) {\n        removed.push(k);\n      }\n    });\n    this.props.onSubmit(members, added, removed);\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <div id=\"group-manager\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_group_members\" defaultMessage=\"Group Members\" description=\"Section title\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ChipInput\n            chips={this.state.members}\n            staticMembers={this.state.staticMembers}\n            prompt=\"add members\"\n            filterFunc={this.handleContactFilter}\n            onChipRemoved={this.handleMemberRemoved} />\n        </div>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_all_contacts\" defaultMessage=\"All Contacts\"\n              description=\"Section title [All Contacts]\" />\n          </label>\n        </div>\n        <ContactList\n          contacts={this.props.contacts}\n          myUserId={this.props.myUserId}\n          topicSelected={this.state.selectedContacts}\n          filter={this.state.contactFilter}\n          filterFunc={GroupManager.doContactFiltering}\n          emptyListMessage={this.state.noContactsMessage}\n          showOnline={false}\n          showUnread={false}\n          onTopicSelected={this.handleContactSelected} />\n        <div id=\"group-manager-buttons\" className=\"panel-form-row\">\n          <button className=\"blue\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n          <button className=\"white\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(GroupManager);\n","// Password with a visiblity toggle.\nimport React from 'react';\n\nexport default class VisiblePassword extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: this.props.value,\n      visible: false\n    };\n\n    this.handleVisibility = this.handleVisibility.bind(this);\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n    if (this.props.onChange) {\n      this.props.onChange(e);\n    }\n  }\n\n  handleVisibility(e) {\n    e.preventDefault();\n    this.setState({visible: !this.state.visible});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode == 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, visible: false});\n      if (this.props.onFinished) {\n        this.props.onFinished();\n      }\n    } else if (e.keyCode == 13) {\n      // Enter pressed\n      this.handleEditingFinished();\n    }\n  }\n\n  handleEditingFinished(e) {\n    if (e) {\n      let currentTarget = e.currentTarget;\n      setTimeout(() => {\n        if (!currentTarget.contains(document.activeElement)) {\n          if (this.props.onFinished) {\n            this.props.onFinished(this.state.value);\n          }\n        }\n      }, 0);\n    } else if (this.props.onFinished) {\n      this.props.onFinished(this.state.value.trim());\n    }\n  }\n\n  render() {\n    return (\n      <div tabIndex=\"-1\" className=\"group-focus\"\n        onBlur={this.handleEditingFinished}>\n        <input className=\"with-visibility\"\n          type={this.state.visible ? \"text\" : \"password\"}\n          value={this.state.value}\n          placeholder={this.props.placeholder}\n          required={this.props.required ? 'required' : ''}\n          autoFocus={this.props.autoFocus ? 'autoFocus' : ''}\n          autoComplete={this.props.autoComplete}\n          onChange={this.handeTextChange}\n          onKeyDown={this.handleKeyDown} />\n        <span onClick={this.handleVisibility}>\n          <i className=\"material-icons clickable light-gray\">\n            {this.state.visible ? 'visibility' : 'visibility_off'}\n          </i>\n        </span>\n      </div>\n    );\n  }\n}\n","// In-place text editor. Shows text with an icon which toggles it into an input field.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport VisiblePassword from './visible-password.jsx';\n\nexport default class InPlaceEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      active: props.active,\n      initialValue: props.value || '',\n      value: props.value || ''\n    };\n\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleStartEditing = this.handleStartEditing.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n    this.handlePasswordFinished = this.handlePasswordFinished.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // If text has changed while in read mode, update text and discard changes.\n    // Ignore update if in edit mode.\n    const newValue = this.props.value || '';\n    if (prevState.initialValue != newValue && !prevState.active) {\n      this.setState({\n        initialValue: newValue,\n        value: newValue\n      });\n    }\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, active: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleEditingFinished(e);\n    }\n  }\n\n  handleStartEditing() {\n    if (!this.props.readOnly) {\n      ReactDOM.findDOMNode(this).focus();\n      this.setState({active: true});\n    }\n  }\n\n  handleEditingFinished(event) {\n    if (this.props.required && !event.target.checkValidity()) {\n      // Empty input\n      this.setState({value: this.props.value, active: false});\n      return;\n    }\n    this.setState({active: false});\n    let value = this.state.value.trim();\n    if ((value || this.props.value) && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  handlePasswordFinished(value) {\n    this.setState({active: false});\n    if (value && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  render() {\n    if (this.state.active) {\n      var fieldType = this.props.type || 'text';\n    } else {\n      var spanText = this.props.type == 'password' ? '••••••••' : this.state.value;\n      var spanClass = 'in-place-edit' +\n        (this.props.readOnly ? ' disabled' : '');\n      if (!spanText) {\n        spanText = this.props.placeholder;\n        spanClass += ' placeholder';\n      }\n      if (spanText.length > 20) {\n        // FIXME: this is wrong for RTL languages.\n        spanText = spanText.substring(0, 19) + '...';\n      }\n    }\n    return (\n      this.state.active ?\n        (fieldType == 'password' ?\n          <VisiblePassword\n            value={this.state.value}\n            placeholder={this.props.placeholder}\n            required={this.props.required ? 'required' : ''}\n            autoComplete={this.props.autoComplete}\n            autoFocus={true}\n            onFinished={this.handlePasswordFinished}/>\n          :\n          <input type={fieldType}\n            value={this.state.value}\n            placeholder={this.props.placeholder}\n            required={this.props.required ? 'required' : ''}\n            autoComplete={this.props.autoComplete}\n            autoFocus\n            onChange={this.handeTextChange}\n            onKeyDown={this.handleKeyDown}\n            onBlur={this.handleEditingFinished} />\n        )\n        :\n        <span className={spanClass} onClick={this.handleStartEditing}>\n          <span className=\"content\">{spanText}</span>\n        </span>\n    );\n  }\n};\n","// Toggle [Title text >] -> [Title text v]\n\nimport React from 'react';\n\nexport default class MoreButton extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: props.open\n    };\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n\n  handleToggle() {\n    const open = !this.state.open;\n    this.setState({open: open});\n    if (this.props.onToggle) {\n      this.props.onToggle(open);\n    }\n  }\n\n  render() {\n    return (<label className=\"small clean-clickable\" onClick={this.handleToggle}>{this.props.title}...\n      {this.state.open ? <i className=\"material-icons\">expand_more</i> :\n        <i className=\"material-icons\">chevron_right</i>}\n      </label>);\n  }\n}\n","// PermissionsEditor: Component for editing permissions\n// <PermissionsEditor mode=\"JWROD\" skip=\"O\" onChange={this.handleCheckboxTest} />\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport CheckBox from './checkbox.jsx';\nimport Contact from './contact.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n// Translatable permission names.\nconst messages = defineMessages({\n  joiner: {\n    id: 'permission_join',\n    defaultMessage: \"Join ({val})\",\n    description: 'Name of J permission'\n  },\n  reader: {\n    id: 'permission_read',\n    defaultMessage: \"Read ({val})\",\n    description: 'Name of R permission'\n  },\n  writer: {\n    id: 'permission_write',\n    defaultMessage: \"Write ({val})\",\n    description: 'Name of W permission'\n  },\n  preser: {\n    id: 'permission_pres',\n    defaultMessage: \"Get notified ({val})\",\n    description: 'Name of P permission'\n  },\n  approver: {\n    id: 'permission_admin',\n    defaultMessage: \"Approve ({val})\",\n    description: 'Name of A permission'\n  },\n  sharer: {\n    id: 'permission_share',\n    defaultMessage: \"Share ({val})\",\n    description: 'Name of S permission'\n  },\n  deleter: {\n    id: 'permission_delete',\n    defaultMessage: \"Delete ({val})\",\n    description: 'Name of D permission'\n  },\n  owner: {\n    id: 'permission_owner',\n    defaultMessage: \"Owner ({val})\",\n    description: 'Name of O permission'\n  }\n});\n\nclass PermissionsEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mode: (props.mode || '').replace('N', '')\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(val) {\n    let mode = this.state.mode;\n    let idx = mode.indexOf(val);\n    if (idx == -1) {\n      mode += val;\n    } else {\n      mode = mode.replace(val, '');\n    }\n    this.setState({mode: mode});\n  }\n\n  handleSubmit() {\n    // Normalize string, otherwise cannot check if mode has changed.\n    var mode = (this.state.mode || 'N').split('').sort().join('');\n    var before = (this.props.mode || 'N').split('').sort().join('')\n    if (mode !== before) {\n      this.props.onSubmit(mode);\n    } else {\n      this.props.onCancel();\n    }\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const all = 'JRWPASDO';\n    const names = {\n      'J': formatMessage(messages.joiner, {val: 'J'}),\n      'R': formatMessage(messages.reader, {val: 'R'}),\n      'W': formatMessage(messages.writer, {val: 'W'}),\n      'P': formatMessage(messages.preser, {val: 'P'}),\n      'A': formatMessage(messages.approver, {val: 'A'}),\n      'S': formatMessage(messages.sharer, {val: 'S'}),\n      'D': formatMessage(messages.deleter, {val: 'D'}),\n      'O': formatMessage(messages.owner, {val: 'O'})\n    };\n\n    let skip = this.props.skip || '';\n    let mode = this.state.mode;\n    let compare = (this.props.compare || '').replace('N', '');\n    let items = [];\n    for (let i=0; i<all.length; i++) {\n      let c = all.charAt(i);\n      if (skip.indexOf(c) >= 0 && mode.indexOf(c) < 0) {\n        // Permission is marked as inactive: hide unchecked permissions, disable checked permissions\n        continue;\n      }\n      items.push(\n        <tr key={c}>\n          <td>{names[c]}</td>\n          <td className=\"checkbox\">{skip.indexOf(c) < 0 ?\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} onChange={this.handleChange}/>\n            :\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} />\n          }</td>{this.props.compare ? <td className=\"checkbox\">\n            <CheckBox name={c} checked={(compare.indexOf(c) >= 0)}/>\n          </td> : null}\n        </tr>\n      );\n    }\n\n    return (\n      <div className=\"panel-form-column\">\n        {this.props.userTitle ?\n          <ul className=\"contact-box\"><Contact\n            item={this.props.item}\n            title={this.props.userTitle}\n            avatar={makeImageUrl(this.props.userAvatar ? this.props.userAvatar : null)} /></ul> : null}\n        <label className=\"small\"><FormattedMessage id=\"title_permissions\"\n          defaultMessage=\"Permissions\" description=\"Section title\"/></label>\n        <table className=\"permission-editor\">\n        {this.props.compare ?\n          <thead><tr>\n            <th></th><th>{this.props.modeTitle}</th>\n            <th>{this.props.compareTitle}</th>\n          </tr></thead> :\n          null}\n        <tbody>\n          {items}\n        </tbody></table>\n        <br />\n        <div className=\"dialog-buttons\">\n          <button className=\"outline\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"blue\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(PermissionsEditor);\n","// TagManager: edit topic or user tags.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\n\nimport { MAX_TAG_COUNT, MAX_TAG_LENGTH, MIN_TAG_LENGTH } from '../config.js';\nimport { arrayEqual } from '../lib/utils.js';\n\nexport default class TagManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tags: this.props.tags,\n      tagInput: '',\n      activated: this.props.activated\n    };\n\n    this.handleTagInput = this.handleTagInput.bind(this);\n    this.handleAddTag = this.handleAddTag.bind(this);\n    this.handleRemoveTag = this.handleRemoveTag.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (!arrayEqual(nextProps.tags, prevState.tags) && !prevState.activated) {\n      return {tags: nextProps.tags};\n    }\n    return null;\n  }\n\n  handleTagInput(text) {\n    this.setState({tagInput: text});\n    if (text.length > 0) {\n      const last = text[text.length-1];\n      if (text[0] == '\"') {\n        // This is a quoted string.\n        if (text.length > 1 && last == '\"') {\n          this.handleAddTag(text.substring(1, text.length-1));\n        }\n      } else if (last == ',' || last == ' ' || last == ';' || last == '\"') {\n        // User entered ',', ' ' or ';'\n        this.handleAddTag(text.substring(0, text.length-1).trim());\n      }\n    }\n  }\n\n  handleAddTag(tag) {\n    const maxTagCount = this.props.tinode.getServerLimit('maxTagCount', MAX_TAG_COUNT);\n\n    if (tag.length > 0 && this.state.tags.length < maxTagCount) {\n      const tags = this.state.tags.slice(0);\n      tags.push(tag);\n\n      this.setState({tags: tags, tagInput: ''});\n      if (this.props.onTagsChanged) {\n        this.props.onTagsChanged(tags);\n      }\n      return tags;\n    }\n    return this.state.tags;\n  }\n\n  handleRemoveTag(tag, index) {\n    const tags = this.state.tags.slice(0);\n    tags.splice(index, 1);\n    this.setState({tags: tags});\n    if (this.props.onTagsChanged) {\n      this.props.onTagsChanged(tags);\n    }\n  }\n\n  handleSubmit() {\n    // Add unprocessed input to tags, submit the list.\n    this.props.onSubmit(this.handleAddTag(this.state.tagInput.trim()));\n    this.setState({activated: false, tags: this.props.tags});\n  }\n\n  handleCancel() {\n    this.setState({activated: false, tagInput: '', tags: this.props.tags});\n    if (this.props.onCancel) {\n      this.props.onCancel();\n    }\n  }\n\n  render() {\n    const minTagLength = this.props.tinode.getServerLimit('minTagLength', MIN_TAG_LENGTH);\n    const maxTagLength = this.props.tinode.getServerLimit('maxTagLength', MAX_TAG_LENGTH);\n\n    let tags = [];\n    if (this.state.activated) {\n      this.state.tags.map((tag) => {\n        tags.push({user: tag, invalid: (tag.length < minTagLength || tag.length > maxTagLength)});\n      });\n    } else {\n      this.state.tags.map((tag) => {\n        tags.push(<span className=\"badge\" key={tags.length}>{tag}</span>);\n      });\n      if (tags.length == 0) {\n        tags = (\n          <i>\n            <FormattedMessage id=\"tags_not_found\" defaultMessage=\"No tags defined. Add some.\" description=\"\" />\n          </i>\n        );\n      }\n    }\n    return (\n      <div className=\"panel-form-column\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">{this.props.title}</label>\n        </div>\n        {this.state.activated ?\n        <div>\n          <FormattedMessage id=\"tags_editor_no_tags\" defaultMessage=\"Add some tags\"\n            description=\"Tag editor prompt when no tags are found.\">{\n            (add_tags_prompt) => <ChipInput\n              chips={tags}\n              avatarDisabled={true}\n              prompt={add_tags_prompt}\n              onEnter={this.handleAddTag}\n              onFocusLost={this.handleAddTag}\n              onCancel={this.handleCancel}\n              onChipRemoved={this.handleRemoveTag}\n              filterFunc={this.handleTagInput} />\n          }</FormattedMessage>\n          {this.props.onSubmit || this.props.onCancel ?\n            <div id=\"tag-manager-buttons\" className=\"dialog-buttons panel-form-row\">\n              <button className=\"outline\" onClick={this.handleCancel}>\n                <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n              </button>\n              <button className=\"blue\" onClick={this.handleSubmit}>\n                <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n              </button>\n            </div>\n          : null}\n        </div>\n        :\n        <div className=\"quoted\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.setState({activated: true});}}>\n            <i className=\"material-icons\">edit</i> &nbsp;<FormattedMessage id=\"title_manage_tags\" defaultMessage=\"Manage\"\n              description=\"Section title for the list of tags\" />\n          </a>\n          <>{tags}</>\n        </div>\n      }\n      </div>\n    );\n  }\n};\n","// InfoView: panel with topic/user info.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport ContactList from '../widgets/contact-list.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupManager from '../widgets/group-manager.jsx';\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport MenuCancel from '../widgets/menu-cancel.jsx';\nimport MoreButton from '../widgets/more-button.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\nimport TagManager from '../widgets/tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH, NO_ACCESS_MODE } from '../config.js';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, vcard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  requested: {\n    id: 'requested_permissions',\n    defaultMessage: 'Requested',\n    description: 'Title for permissions'\n  },\n  granted: {\n    id: 'granted_permissions',\n    defaultMessage: 'Granted',\n    description: 'Title for permissions'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n  other_user: {\n    id: 'label_other_user',\n    defaultMessage: 'Other',\n    description: 'Label for the other user when the user is unnamed'\n  },\n  clear_messages: {\n    id: 'action_clear_messages',\n    defaultMessage: 'Clear Messages',\n    description: 'Flat button [Clear Messages] (soft-delete messages)'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n  delete_messages: {\n    id: 'action_delete_messages',\n    defaultMessage: 'Clear Messages for All',\n    description: 'Flat button [Clear for All] (hard-delete all messages)'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  leave_chat: {\n    id: 'action_leave_chat',\n    defaultMessage: 'Leave Conversation',\n    description: 'Flat button [Leave Conversation]'\n  },\n  leave_chat_warning: {\n    id: 'leave_chat_warning',\n    defaultMessage: 'Are you sure you want to leave this conversation?',\n    description: 'Alert dialog warning when unsubscribing from a chat.'\n  },\n  block_contact: {\n    id: 'action_block_contact',\n    defaultMessage: \"Block Contact\",\n    description: \"Flat button [Block Contact]\"\n  },\n  block_contact_warning: {\n    id: 'block_contact_warning',\n    defaultMessage: 'Are you sure you want to block this contact?',\n    description: 'Alert dialog warning when blocking a contact.'\n  },\n  report_chat: {\n    id: 'action_report_chat',\n    defaultMessage: 'Report Conversation',\n    description: 'Flat button [Report Group]'\n  },\n  report_chat_warning: {\n    id: 'report_chat_warning',\n    defaultMessage: 'Are you sure you want to block and report this conversation?',\n    description: 'Alert dialog warning when reporting a conversation for abuse'\n  },\n});\n\nclass InfoView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      topic: null,\n      owner: false,\n      admin: false,\n      sharer: false,\n      deleter: false,\n      muted: false,\n      address: null,\n      groupTopic: undefined,\n      channel: undefined,\n      fullName: undefined,\n      avatar: null,\n      private: null,\n      selectedContact: null,\n      access: null,\n      modeGiven: null,\n      modeWant: null,\n      modeGiven2: null, // P2P topic, the other user mode given\n      modeWant2: null,  // P2P topic, the other user mode want\n      auth: null,\n      anon: null,\n      contactList: [],\n      tags: [],\n      showMemberPanel: false,\n      showPermissionEditorFor: undefined,\n      moreInfoExpanded: false,\n      previousMetaDesc: undefined,\n      previousSubsUpdated: undefined,\n      previousTagsUpdated: undefined\n    };\n\n    this.resetSubs = this.resetSubs.bind(this);\n    this.resetDesc = this.resetDesc.bind(this);\n    this.onMetaDesc = this.onMetaDesc.bind(this);\n    this.onSubsUpdated = this.onSubsUpdated.bind(this);\n    this.onTagsUpdated = this.onTagsUpdated.bind(this);\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\n    this.handlePrivateUpdate = this.handlePrivateUpdate.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleMuted = this.handleMuted.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handleShowAddMembers = this.handleShowAddMembers.bind(this);\n    this.handleHideAddMembers = this.handleHideAddMembers.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleDeleteMessages = this.handleDeleteMessages.bind(this);\n    this.handleLeave = this.handleLeave.bind(this);\n    this.handleBlock = this.handleBlock.bind(this);\n    this.handleReport = this.handleReport.bind(this);\n    this.handleMemberSelected = this.handleMemberSelected.bind(this);\n    this.handleMoreInfo = this.handleMoreInfo.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.handleContextMenu = this.handleContextMenu.bind(this);\n  }\n\n  // No need to separately handle component mount.\n  componentDidUpdate(props) {\n    const topic = this.props.tinode.getTopic(props.topic);\n    if (!topic) {\n      return;\n    }\n\n    if (this.onMetaDesc != topic.onMetaDesc) {\n      this.previousMetaDesc = topic.onMetaDesc;\n      topic.onMetaDesc = this.onMetaDesc;\n\n      this.previousSubsUpdated = topic.onSubsUpdated;\n      topic.onSubsUpdated = this.onSubsUpdated;\n\n      if (topic.getType() == 'grp') {\n        this.previousTagsUpdated = topic.onTagsUpdated;\n        topic.onTagsUpdated = this.onTagsUpdated;\n      } else {\n        this.previousTagsUpdated = undefined;\n      }\n    }\n\n    if (this.state.topic != props.topic) {\n      this.setState({topic: props.topic});\n      this.resetDesc(topic, props);\n      this.resetSubs(topic, props);\n    }\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.setState({topic: null});\n    topic.onMetaDesc = this.previousMetaDesc;\n    topic.onSubsUpdated = this.previousSubsUpdated;\n    topic.onTagsUpdated = this.previousTagsUpdated;\n  }\n\n  resetSubs(topic, props) {\n    const newState = {contactList: []};\n    if (topic.getType() == 'p2p') {\n      // Fetch the other party in the p2p conversation.\n      // Topic may not be ready yet, so check if user is found.\n      const user2 = topic.subscriber(props.topic);\n      if (user2) {\n        newState.modeGiven2 = user2.acs.getGiven();\n        newState.modeWant2 = user2.acs.getWant();\n      } else {\n        newState.modeGiven2 = NO_ACCESS_MODE;\n        newState.modeWant2 = NO_ACCESS_MODE;\n      }\n    } else {\n      topic.subscribers((sub) => {\n        newState.contactList.push(sub);\n      }, this);\n    }\n\n    this.setState(newState);\n  }\n\n  resetDesc(topic, props) {\n    const defacs = topic.getDefaultAccess() || {};\n    const acs = topic.getAccessMode();\n\n    this.setState({\n      owner: acs && acs.isOwner(),\n      admin: acs && acs.isAdmin(),\n      sharer: acs && acs.isSharer(),\n      deleter: acs && acs.isDeleter(),\n      muted: acs && acs.isMuted(),\n\n      fullName: topic.public ? topic.public.fn : undefined,\n      avatar: makeImageUrl(topic.public ? topic.public.photo : null),\n      private: topic.private ? topic.private.comment : null,\n      address: topic.name,\n      groupTopic: topic.isGroupType(),\n      channel: topic.isChannelType(),\n      showMemberPanel: false,\n      access: acs ? acs.getMode() : undefined,\n      modeGiven: acs ? acs.getGiven() : undefined,\n      modeWant: acs ? acs.getWant() : undefined,\n      auth: defacs.auth,\n      anon: defacs.anon\n    });\n\n    if (topic.getType() == 'grp' && acs && acs.isOwner()) {\n      // Requesting tags: owner is editing the topic.\n      topic.getMeta(topic.startMetaQuery().withTags().build());\n    }\n  }\n\n  onMetaDesc(desc) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetDesc(topic, this.props);\n\n    if (this.previousMetaDesc && this.previousMetaDesc != this.onMetaDesc) {\n      this.previousMetaDesc(desc);\n    }\n  }\n\n  onSubsUpdated(subs) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetSubs(topic, this.props);\n\n    if (this.previousSubsUpdated && this.previousSubsUpdated != this.onSubsUpdated) {\n      this.previousSubsUpdated(subs);\n    }\n  }\n\n  onTagsUpdated(tags) {\n    this.setState({tags: tags});\n\n    if (this.previousTagsUpdated && this.previousTagsUpdated != this.onTagsUpdated) {\n      this.previousTagsUpdated();\n    }\n  }\n\n  handleFullNameUpdate(fn) {\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.fullName !== fn) {\n      this.setState({fullName: fn});\n      this.props.onTopicDescUpdate(this.props.topic, vcard(fn, null), null);\n    }\n  }\n\n  handlePrivateUpdate(comment) {\n    comment = comment.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.private !== comment) {\n      this.setState({private: comment});\n      this.props.onTopicDescUpdate(this.props.topic, null, comment || Tinode.DEL_CHAR);\n    }\n  }\n\n  handleImageChanged(img) {\n    this.setState({avatar: img});\n    this.props.onTopicDescUpdate(this.props.topic, vcard(null, img || Tinode.DEL_CHAR), null);\n  }\n\n  handleMuted(ignored, checked) {\n    this.setState({muted: checked});\n    this.props.onChangePermissions(this.props.topic, checked ? '-P' : '+P');\n  }\n\n  handlePermissionsChanged(perm) {\n    switch (this.state.showPermissionEditorFor) {\n      case 'auth':\n        this.props.onTopicDescUpdate(this.props.topic, null, null, {auth: perm});\n        break;\n      case 'anon':\n        this.props.onTopicDescUpdate(this.props.topic, null, null, {anon: perm});\n        break;\n      case 'mode':\n      case 'want':\n        this.props.onChangePermissions(this.props.topic, perm);\n        break;\n      case 'given':\n        this.props.onChangePermissions(this.props.topic, perm, this.props.topic);\n        break;\n      case 'user':\n        this.props.onChangePermissions(this.props.topic, perm, this.state.userPermissionsEdited);\n        break;\n    }\n\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handleLaunchPermissionsEditor(which, uid) {\n    const {formatMessage} = this.props.intl;\n    let toEdit, toCompare, toSkip, titleEdit, titleCompare, userTitle, userAvatar;\n    switch (which) {\n      case 'mode':\n        toEdit = this.state.access;\n        break;\n      case 'want':\n        toEdit = this.state.modeWant;\n        toCompare = this.state.modeGiven;\n        if (this.state.owner) {\n          // Don't allow owner to unset 'O' permission. All other permissions are OK.\n          toSkip = 'O';\n        } else {\n          // Allow accepting any of 'ASDO' permissions but don't allow asking for them.\n          toSkip = Tinode.AccessMode.encode(Tinode.AccessMode.diff('ASDO', this.state.modeGiven));\n          if (this.state.channel) {\n            // Channels are read-only.\n            toSkip += 'W';\n          }\n        }\n        titleEdit = formatMessage(messages.requested);\n        titleCompare = formatMessage(messages.granted);\n        break;\n      case 'given':\n        toEdit = this.state.modeGiven2;\n        toCompare = this.state.modeWant2;\n        toSkip = this.state.groupTopic ? (this.state.owner ? '' : 'O') : 'ASDO';\n        titleEdit = formatMessage(messages.granted);\n        titleCompare = formatMessage(messages.requested);\n        break;\n      case 'auth':\n        toEdit = this.state.auth;\n        toSkip = 'O';\n        break;\n      case 'anon':\n        toEdit = this.state.anon;\n        toSkip = 'O';\n        break;\n      case 'user': {\n        const topic = this.props.tinode.getTopic(this.props.topic);\n        if (!topic) {\n          return;\n        }\n        const user = topic.subscriber(uid);\n        if (!user || !user.acs) {\n          return;\n        }\n        toEdit = user.acs.getGiven();\n        toCompare = user.acs.getWant();\n        toSkip = this.state.owner ? '' : 'O';\n        titleEdit = formatMessage(messages.granted);\n        titleCompare = formatMessage(messages.requested);\n        if (user.public) {\n          userTitle = user.public.fn;\n          userAvatar = user.public.photo;\n        }\n        break;\n      }\n      default:\n        console.log(\"Unknown permission editing mode '\" + which + \"'\");\n        break;\n    }\n    this.setState({\n      showPermissionEditorFor: which,\n      userPermissionsEdited: uid,\n      userPermissionsTitle: userTitle,\n      userPermissionsAvatar: userAvatar,\n      editedPermissions: toEdit,\n      immutablePermissions: toCompare,\n      editedPermissionsTitle: titleEdit,\n      immutablePermissionsTitle: titleCompare,\n      editedPermissionsSkipped: toSkip,\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handleShowAddMembers(e) {\n    e.preventDefault();\n    this.props.onInitFind();\n    this.setState({showMemberPanel: true});\n  }\n\n  handleHideAddMembers() {\n    this.setState({showMemberPanel: false});\n  }\n\n  handleMemberUpdateRequest(members, added, removed) {\n    this.props.onMemberUpdateRequest(this.props.topic, added, removed);\n    this.setState({showMemberPanel: false});\n  }\n\n  handleDeleteMessages(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(this.state.deleter ? messages.delete_messages : messages.clear_messages), // title\n      formatMessage(this.state.deleter ? messages.delete_messages_warning : messages.clear_messages_warning), // content\n      (() => { this.props.onDeleteMessages(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleLeave(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.leave_chat), // title\n      formatMessage(messages.leave_chat_warning), // content\n      (() => { this.props.onLeaveTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleBlock(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.block_contact), // title\n      formatMessage(messages.block_contact_warning), // content\n      (() => { this.props.onBlockTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleReport(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.report_chat), // title\n      formatMessage(messages.report_chat_warning), // content\n      (() => { this.props.onReportTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleMemberSelected(uid) {\n    this.setState({selectedContact: uid});\n  }\n\n  handleMoreInfo(open) {\n    this.setState({moreInfoExpanded: open});\n  }\n\n  handleTagsUpdated(tags) {\n    if (!arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      this.props.onTopicTagsUpdate(this.props.topic, tags);\n    }\n  }\n\n  handleContextMenu(params) {\n    const {formatMessage} = this.props.intl;\n    const instance = this;\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    const user = topic.subscriber(params.topicName);\n    if (!user || !user.acs) {\n      return;\n    }\n\n    const menuItems = [\n      {title: formatMessage(messages.edit_permissions), handler: function() {\n        instance.handleLaunchPermissionsEditor('user', params.topicName);\n      }},\n      'member_delete',\n      user.acs.isMuted() ? 'member_unmute' : 'member_mute',\n      user.acs.isJoiner() ? 'member_block' : 'member_unblock'\n    ];\n    this.props.showContextMenu({\n      topicName: this.props.topic,\n      x: params.x,\n      y: params.y,\n      user: params.topicName}, menuItems);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n\n    return (\n      <div id=\"info-view\">\n        <div className=\"caption-panel\" id=\"info-caption-panel\">\n          <div className=\"panel-title\" id=\"info-title\">\n            <FormattedMessage id=\"title_info\" defaultMessage=\"Info\" description=\"Title for InfoView\" />\n          </div>\n          <div>\n            <MenuCancel onCancel={this.props.onCancel} />\n          </div>\n        </div>\n        {this.props.displayMobile ?\n          <ErrorPanel\n            level={this.props.errorLevel}\n            text={this.props.errorText}\n            onClearError={this.props.onError} /> : null}\n        {this.state.showMemberPanel ?\n          <GroupManager\n            members={this.state.contactList}\n            requiredMember={this.props.myUserId}\n            keepInitialMembers={!this.state.admin && !this.state.owner}\n            myUserId={this.props.myUserId}\n            contacts={this.props.searchableContacts}\n            onCancel={this.handleHideAddMembers}\n            onSubmit={this.handleMemberUpdateRequest} />\n          :\n        this.state.showPermissionEditorFor ?\n          <PermissionsEditor\n            mode={this.state.editedPermissions}\n            compare={this.state.immutablePermissions}\n            skip={this.state.editedPermissionsSkipped}\n            modeTitle={this.state.editedPermissionsTitle}\n            compareTitle={this.state.immutablePermissionsTitle}\n            userTitle={this.state.userPermissionsTitle}\n            item={this.state.userPermissionsEdited}\n            userAvatar={this.state.userPermissionsAvatar}\n            onSubmit={this.handlePermissionsChanged}\n            onCancel={this.handleHidePermissionsEditor}\n            />\n          :\n          <div id=\"info-view-content\" className=\"scrollable-panel\">\n            <div className=\"panel-form-row\">\n              <div className=\"panel-form-column\">\n                <div><label className=\"small\">\n                  <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                    description=\"Label for editing topic name\" />\n                </label></div>\n                <div><InPlaceEdit\n                    placeholder={this.state.groupTopic ? \"Group name\" : <i>Unknown</i>}\n                    readOnly={!this.state.owner}\n                    value={this.state.fullName}\n                    required={true}\n                    onFinished={this.handleFullNameUpdate} /></div>\n                <div>\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                      description=\"Label for editing 'private'\" />\n                  </label>\n                </div>\n                <div>\n                  <FormattedMessage id=\"private_editing_placeholder\"\n                    defaultMessage=\"Visible to you only\"\n                    description=\"Placeholder for editing 'private'\">{\n                    (private_placeholder) => <InPlaceEdit\n                      placeholder={private_placeholder}\n                      value={this.state.private}\n                      onFinished={this.handlePrivateUpdate} />\n                  }</FormattedMessage>\n                </div>\n              </div>\n              <AvatarUpload\n                avatar={this.state.avatar}\n                readOnly={!this.state.owner}\n                uid={this.props.topic}\n                title={this.state.fullName}\n                onImageChanged={this.handleImageChanged}\n                onError={this.props.onError} />\n            </div>\n            <div className=\"hr\" />\n            <div className=\"panel-form-column\">\n              <div className=\"panel-form-row\">\n                <label>\n                  <FormattedMessage id=\"label_muting_topic\" defaultMessage=\"Muted:\"\n                    description=\"Label for Muting/unmuting the topic\" />\n                </label>\n                <CheckBox name=\"P\" checked={this.state.muted}\n                  onChange={this.handleMuted} />\n              </div>\n              <FormattedMessage id=\"action_more\" defaultMessage=\"More\"\n                description=\"Action for showing more content\">{\n                (more) => <MoreButton\n                  title={more}\n                  open={this.state.moreInfoExpanded}\n                  onToggle={this.handleMoreInfo} />\n              }</FormattedMessage>\n              {this.state.moreInfoExpanded ?\n                <div className=\"panel-form-column\">\n                  <div className=\"panel-form-row\">\n                    <label><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n                      description=\"Label for user address (ID)\" /></label>\n                    <tt>{this.state.address}</tt>\n                  </div>\n                  {this.state.groupTopic ?\n                    <div className=\"panel-form-row\">\n                      <label>\n                        <FormattedMessage id=\"label_your_permissions\" defaultMessage=\"Your permissions:\"\n                          description=\"Label for current user permissions\" />\n                      </label>\n                      <tt className=\"clickable\"\n                        onClick={this.handleLaunchPermissionsEditor.bind(this, 'want')}>\n                        {this.state.access}\n                      </tt>\n                    </div>\n                    :\n                    <div>\n                      <div>\n                        <label className=\"small\">\n                          <FormattedMessage id=\"label_permissions\" defaultMessage=\"Permissions:\"\n                            description=\"Section title\" />\n                        </label>\n                      </div>\n                      <div className=\"quoted\">\n                        <div>\n                          <FormattedMessage id=\"label_you\" defaultMessage=\"You:\"\n                            description=\"Label for the current user\" /> &nbsp;<tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'want')}>\n                          {this.state.access}\n                        </tt></div>\n                        <div>{this.state.fullName ? this.state.fullName : formatMessage(messages.other_user)}:\n                          &nbsp;<tt className=\"clickable\" onClick={this.handleLaunchPermissionsEditor.bind(this, 'given')}>\n                          {this.state.modeGiven2}\n                          </tt>\n                        </div>\n                      </div>\n                    </div>\n                  }\n                  {this.state.sharer && (this.state.auth || this.state.anon) ?\n                  <div>\n                    <div>\n                      <label className=\"small\">\n                        <FormattedMessage id=\"label_default_access\" defaultMessage=\"Default access mode:\"\n                          description=\"Section title\" />\n                      </label>\n                    </div>\n                    <div className=\"quoted\">\n                      <div>Auth: {this.state.admin ?\n                        <tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>\n                          {this.state.auth}\n                        </tt>\n                        :\n                        <tt>{this.state.auth}</tt>\n                      }\n                      </div>\n                      <div>Anon: {this.state.admin ?\n                        <tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>\n                          {this.state.anon}\n                        </tt>\n                        :\n                        <tt>{this.state.anon}</tt>\n                      }\n                      </div>\n                    </div>\n                  </div>\n                  :\n                  null\n                }\n                </div>\n              :\n              null\n              }\n            </div>\n            <div className=\"hr\" />\n            {this.state.owner ?\n              <>\n                <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (user discovery)\"\n                  description=\"Section title for TagManager\">{\n                  (tags) => <TagManager\n                    title={tags}\n                    tags={this.state.tags}\n                    activated={false}\n                    tinode={this.props.tinode}\n                    onSubmit={this.handleTagsUpdated} />\n                }</FormattedMessage>\n                <div className=\"hr\" />\n              </>\n              :\n              null\n            }\n            <div className=\"panel-form-column\">\n              {!this.state.channel ?\n                <a href=\"#\" className=\"flat-button\" onClick={this.handleDeleteMessages}>\n                  <i className=\"material-icons\">delete_outline</i> &nbsp;{\n                    formatMessage(this.state.deleter ? messages.delete_messages : messages.clear_messages)\n                  }\n                </a>\n                :\n                null\n              }\n              <a href=\"#\" className=\"red flat-button\" onClick={this.handleLeave}>\n                <i className=\"material-icons\">exit_to_app</i> &nbsp;{formatMessage(messages.leave_chat)}\n              </a>\n              {!this.state.groupTopic ?\n                <a href=\"#\" className=\"red flat-button\" onClick={this.handleBlock}>\n                  <i className=\"material-icons\">block</i> &nbsp;{formatMessage(messages.block_contact)}\n                </a>\n                :\n                null\n              }\n              {!this.state.owner ?\n                <a href=\"#\" className=\"red flat-button\" onClick={this.handleReport}>\n                  <i className=\"material-icons\">report</i> &nbsp;{formatMessage(messages.report_chat)}\n                </a>\n                :\n                null\n              }\n            </div>\n            {this.state.groupTopic && this.state.sharer ?\n              <>\n                <div className=\"hr\" />\n                <div className=\"panel-form-column\">\n                  <div className=\"panel-form-row\">\n                    <label className=\"small\">\n                      <FormattedMessage id=\"label_group_members\" defaultMessage=\"Group members:\"\n                        description=\"Section title or label\" />\n                    </label>\n                  </div>\n                  <div className=\"panel-form-row\">\n                    <a href=\"#\" className=\"flat-button\" onClick={this.handleShowAddMembers}>\n                      <i className=\"material-icons\">person_add</i> &nbsp;<FormattedMessage id=\"button_add_members\"\n                        defaultMessage=\"Add members\" description=\"Flat button [Add members] (to topic)\" />\n                    </a>\n                  </div>\n                  <FormattedMessage id=\"group_has_no_members\" defaultMessage=\"No members\"\n                    description=\"Shown in place of group members\">{\n                    (no_members) => <ContactList\n                      contacts={this.state.contactList}\n                      myUserId={this.props.myUserId}\n                      emptyListMessage={no_members}\n                      topicSelected={this.state.selectedContact}\n                      showOnline={false}\n                      showUnread={false}\n                      showMode={true}\n                      noScroll={true}\n                      onTopicSelected={this.handleMemberSelected}\n                      showContextMenu={this.state.admin ? this.handleContextMenu : false}\n                    />\n                  }</FormattedMessage>\n                </div>\n              </>\n              :\n              null\n            }\n          </div>\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(InfoView);\n","// File uload/download progress indicator with a cancel inside.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class FileProgress extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"uploader\">\n        <div><span style={{width: (this.props.progress * 100) + \"%\"}}></span></div>\n        {this.props.progress < 0.999 ?\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n            <i className=\"material-icons\">close</i> <FormattedMessage id=\"action_cancel\"\n              defaultMessage=\"cancel\" description=\"Call to action [cancel]\" />\n          </a>\n          :\n          <FormattedMessage id=\"upload_finishing\" defaultMessage=\"finishing...\"\n            description=\"Notification that upload is finishing\" />\n        }\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\nimport { bytesToHumanSize } from '../lib/strformat.js';\nimport { isUrlRelative, sanitizeUrl } from '../lib/utils.js';\n\nexport default class Attachment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      downloader: null,\n      progress: 0\n    };\n\n    this.downloadFile = this.downloadFile.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  downloadFile(url, filename, mimetype) {\n    if (!url) {\n      this.props.onError(\"Invalid download URL '\" + url + \"'\");\n      return;\n    }\n\n    const downloader = this.props.tinode.getLargeFileHelper();\n    this.setState({downloader: downloader});\n    downloader.download(url, filename, mimetype,\n      (loaded) => {\n        this.setState({progress: loaded / this.props.size});\n      },\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    ).then(() => {\n      this.setState({downloader: null, progress: 0});\n    }).catch((err) => {\n      if (err) {\n        this.props.onError(\"Error downloading file: \" + err.message, 'err');\n      }\n      this.setState({downloader: null, progress: 0});\n    });\n  }\n\n  handleCancel() {\n    if (this.props.uploading) {\n      this.props.onCancelUpload();\n    } else if (this.state.downloader) {\n      this.state.downloader.cancel();\n    }\n  }\n\n  render() {\n    let filename = this.props.filename || 'file_attachment';\n    if (filename.length > 36) {\n      filename = filename.substr(0, 16) + '...' + filename.substr(-16);\n    }\n    let size = this.props.size > 0 ?\n      <span className=\"small gray\">({bytesToHumanSize(this.props.size)})</span> :\n      null;\n\n    // Detect if the download URL is relative or absolute.\n    // If the URL is relative use LargeFileHelper to attach authentication\n    // credentials to the request.\n    let url, helperFunc;\n    if (!this.props.uploading && !this.state.downloader && isUrlRelative(this.props.downloadUrl)) {\n      // Relative URL. Use download helper.\n      url = '#';\n      helperFunc = (e) => {\n        e.preventDefault();\n        this.downloadFile(this.props.downloadUrl, this.props.filename, this.props.mimetype);\n      };\n    } else {\n      url = sanitizeUrl(this.props.downloadUrl);\n      helperFunc = null;\n    }\n    const downloadWidget = <><i className=\"material-icons\">file_download</i> <FormattedMessage id=\"save_attachment\"\n      defaultMessage=\"save\" description=\"Call to save an attachment\" /></>;\n    return (\n      <div className=\"attachment\">\n        <div><i className=\"material-icons big gray\">insert_drive_file</i></div>\n        <div className=\"flex-column\">\n          <div>{filename} {size}</div>\n          {this.props.uploading || this.state.downloader ?\n            <FileProgress progress={this.props.uploading ? this.props.progress : this.state.progress}\n              onCancel={this.handleCancel} />\n            :\n            <div>{url ?\n              <a href={url} download={this.props.filename} onClick={helperFunc}>{downloadWidget}</a>\n              :\n              <span className=\"light-gray\">{downloadWidget}</span>\n            }</div>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n","// Image view with progress bar and a cancel button.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\n\nexport default class UploadingImage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"inline-image\">\n        {React.createElement('img', this.props)}\n        <div className=\"rounded-container\">\n          <FileProgress progress={this.props.progress} onCancel={this.props.onCancelUpload} />\n        </div>\n      </div>\n    );\n  }\n};\n","// Single message, sent or received.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport Attachment from './attachment.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\nimport UploadingImage from './uploading-image.jsx'\nimport { sanitizeImageUrl, sanitizeUrl } from '../lib/utils.js';\n\nexport default class ChatMessage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      progress: 0\n    };\n\n    if (props.uploader) {\n      props.uploader.onProgress = this.handleProgress.bind(this);\n    }\n\n    this.handleImagePreview = this.handleImagePreview.bind(this);\n    this.handleFormButtonClick = this.handleFormButtonClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n  }\n\n  handleImagePreview(e) {\n    e.preventDefault();\n    this.props.onImagePreview({\n      url: e.target.src,\n      filename: e.target.title,\n      width: e.target.dataset.width,\n      height: e.target.dataset.height,\n      size: e.target.dataset.size,\n      type: e.target.dataset.mime\n    });\n  }\n\n  handleFormButtonClick(e) {\n    e.preventDefault();\n    const data = {\n      seq: this.props.seq\n    };\n    data.resp = {};\n    if (e.target.dataset.name) {\n      data.resp[e.target.dataset.name] = e.target.dataset.val ? e.target.dataset.val :\n        e.target.dataset.val === undefined ? 1 : '' + e.target.dataset.val;\n    }\n    if (e.target.dataset.act == 'url') {\n      data.ref = sanitizeUrl(e.target.dataset.ref) || 'about:blank';\n    }\n    const text = e.target.dataset.title || 'unknown';\n    this.props.onFormResponse(e.target.dataset.act, text, data);\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const menuItems = this.props.received == Tinode.MESSAGE_STATUS_FAILED ? ['menu_item_send_retry'] : [];\n    this.props.showContextMenu({ seq: this.props.seq, content: this.props.content,\n                                 y: e.pageY, x: e.pageX }, menuItems);\n  }\n\n  handleProgress(ratio) {\n    this.setState({progress: ratio});\n  }\n\n  handleCancelUpload() {\n    this.props.onCancelUpload(this.props.seq, this.props.uploader);\n  }\n\n  render() {\n    const sideClass = this.props.deleted ? 'center' :\n      (this.props.sequence + ' ' + (this.props.response ? 'left' : 'right'));\n    const bubbleClass = (this.props.sequence == 'single' || this.props.sequence == 'last') ? 'bubble tip' : 'bubble';\n    const avatar = this.props.deleted ? null : (this.props.userAvatar || true);\n    const fullDisplay = (this.props.userFrom && this.props.response &&\n      (this.props.sequence == 'single' || this.props.sequence == 'last'));\n\n    let content = this.props.content;\n    const attachments = [];\n    if (this.props.mimeType == Drafty.getContentType() && Drafty.isValid(content)) {\n      Drafty.attachments(content, function(att, i) {\n        if (att.mime == 'application/json') {\n          // Don't show json objects as attachments.\n          // They are not meant for users.\n          return;\n        }\n        attachments.push(<Attachment\n          tinode={this.props.tinode}\n          downloadUrl={Drafty.getDownloadUrl(att)}\n          filename={att.name} uploading={Drafty.isProcessing(att)}\n          mimetype={att.mime} size={Drafty.getEntitySize(att)}\n          progress={this.state.progress}\n          onCancelUpload={this.handleCancelUpload}\n          onError={this.props.onError}\n          key={i} />);\n      }, this);\n      content = React.createElement(React.Fragment, null, Drafty.format(content, draftyFormatter, this));\n    } else if (this.props.deleted) {\n      // Message represents a range of deleted messages.\n      content = <><i className=\"material-icons gray\">block</i> <i className=\"gray\">\n        <FormattedMessage id=\"deleted_content\"\n          defaultMessage=\"content deleted\" description=\"Shown when messages are deleted\" />\n      </i></>\n    } else if (typeof content != 'string') {\n      content = <>\n          <i className=\"material-icons gray\">error_outline</i> <i className=\"gray\">\n            <FormattedMessage id=\"invalid_content\"\n              defaultMessage=\"invalid content\" description=\"Shown when message is unreadable\" /></i>\n        </>\n    }\n\n    return (\n      <li className={sideClass}>\n        {this.props.userFrom && this.props.response ?\n          <div className=\"avatar-box\">\n            {fullDisplay ?\n              <LetterTile\n                topic={this.props.userFrom}\n                title={this.props.userName}\n                avatar={avatar} /> :\n              null}\n          </div> :\n          null}\n        <div>\n          <div className={bubbleClass}>\n            <div className=\"message-content\">\n              {content}\n              {attachments}\n              {this.props.timestamp ?\n                <ReceivedMarker\n                  timestamp={this.props.timestamp}\n                  received={this.props.received} />\n                : null}\n            </div>\n            {this.props.deleted || !this.props.showContextMenu ?\n              null :\n              <span className=\"menuTrigger\">\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">expand_more</i>\n                </a>\n              </span>\n            }\n          </div>\n          {fullDisplay ?\n            <div className=\"author\">\n              <FormattedMessage id=\"user_not_found\" defaultMessage=\"Not found\"\n                description=\"In place of a user's full name when the user is not found.\">{\n                    (notFound) => {return this.props.userName || <i>{notFound}</i>}\n              }</FormattedMessage>\n            </div>\n            : null\n          }\n        </div>\n      </li>\n    );\n  }\n};\n\n// Convert Drafty object to a tree of React elements.\nimport { BROKEN_IMAGE_SIZE, REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\n\n// Converts Drafty elements into React classes.\n// 'this' is set by the caller.\nfunction draftyFormatter(style, data, values, key) {\n  if (style == 'EX') {\n    // attachments are handled elsewhere.\n    return null;\n  }\n\n  let el = Drafty.tagName(style);\n  if (el) {\n    const attr = Drafty.attrValue(style, data) || {};\n    attr.key = key;\n    switch (style) {\n      case 'HL':\n        // Highlighted text. Assign class name.\n        attr.className = 'highlight';\n        break;\n      case 'IM':\n        // Additional processing for images\n        if (data) {\n          attr.className = 'inline-image';\n          const dim = fitImageSize(data.width, data.height,\n            Math.min(this.props.viewportWidth - REM_SIZE * 4, REM_SIZE * 36), REM_SIZE * 24, false) ||\n            {dstWidth: BROKEN_IMAGE_SIZE, dstHeight: BROKEN_IMAGE_SIZE};\n          attr.style = { width: dim.dstWidth + 'px', height: dim.dstHeight + 'px' };\n          if (!Drafty.isProcessing(data)) {\n            attr.src = this.props.tinode.authorizeURL(sanitizeImageUrl(attr.src));\n            attr.alt = data.name;\n            if (attr.src) {\n              attr.onClick = this.handleImagePreview;\n              attr.className += ' image-clickable';\n            } else {\n              attr.src = 'img/broken_image.png';\n            }\n          } else {\n            // Use custom element instead of <img>.\n            el = UploadingImage;\n          }\n        }\n        break;\n      case 'BN':\n        // Button\n        attr.onClick = this.handleFormButtonClick;\n        let inner = React.Children.map(values, (child) => {\n          return typeof child == 'string' ? child : undefined;\n        });\n        if (!inner || inner.length == 0) {\n          inner = [attr.name]\n        }\n        // Get text which will be sent back when the button is clicked.\n        attr['data-title'] = inner.join('');\n        break;\n      case 'FM':\n        // Form\n        attr.className = 'bot-form';\n        break;\n      case 'RW':\n        // Form element formatting is dependent on element content.\n        break;\n      default:\n        if (el == '_UNKN') {\n          // Unknown element.\n          // TODO: make it prettier.\n          el = <><span className=\"material-icons\">extension</span></>;\n        }\n        break;\n    }\n    return React.createElement(el, attr, values);\n  } else {\n    return values;\n  }\n};\n","// Send message form.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport { KEYPRESS_DELAY } from '../config.js';\nimport { filePasted } from '../lib/blob-helpers.js';\n\nconst messages = defineMessages({\n  messaging_disabled: {\n    id: 'messaging_disabled_prompt',\n    defaultMessage: 'Messaging disabled',\n    description: 'Prompt in SendMessage in read-only topic'\n  },\n  type_new_message: {\n    id: 'new_message_prompt',\n    defaultMessage: 'New message',\n    description: 'Prompt in send message field'\n  },\n  add_image_caption: {\n    id: 'image_caption_prompt',\n    defaultMessage: 'Image caption',\n    description: 'Prompt in SendMessage for attached image'\n  },\n  file_attachment_too_large: {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  },\n  cannot_initiate_upload: {\n    id: 'cannot_initiate_file_upload',\n    defaultMessage: 'Cannot initiate file upload.',\n    description: 'Generic error messagewhen attachment fails'\n  },\n});\n\nclass SendMessage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      message: '',\n      // Make initial keypress time as if it happened 5001 milliseconds in the past.\n      keypressTimestamp: new Date().getTime() - KEYPRESS_DELAY - 1\n    };\n\n    this.handlePasteEvent = this.handlePasteEvent.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleSend = this.handleSend.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleMessageTyping = this.handleMessageTyping.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.addEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.removeEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.messageEditArea) {\n      this.messageEditArea.focus();\n    }\n  }\n\n  handlePasteEvent(e) {\n    if (this.props.disabled) {\n      return;\n    }\n    // FIXME: handle large files too.\n    if (filePasted(e,\n      (bits, mime, width, height, fname) => {\n        this.props.onAttachImage(mime, bits, width, height, fname);\n      },\n      (mime, bits, fname) => {\n        this.props.onAttachFile(mime, bits, fname);\n      },\n      this.props.onError)) {\n\n      // If a file was pasted, don't paste base64 data into input field.\n      e.preventDefault();\n    }\n  }\n\n  handleAttachImage(e) {\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachImage(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleAttachFile(e) {\n    const {formatMessage} = this.props.intl;\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachFile(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleSend(e) {\n    e.preventDefault();\n    const message = this.state.message.trim();\n    if (message || this.props.acceptBlank || this.props.noInput) {\n      this.props.onSendMessage(message);\n      this.setState({message: ''});\n    }\n  }\n\n  /* Send on Enter key */\n  handleKeyPress(e) {\n    // Remove this if you don't want Enter to trigger send\n    if (e.key === 'Enter') {\n      // Have Shift-Enter insert a line break instead\n      if (!e.shiftKey) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.handleSend(e);\n      }\n    }\n  }\n\n  handleMessageTyping(e) {\n    const newState = {message: e.target.value};\n    if (this.props.onKeyPress) {\n      const now = new Date().getTime();\n      if (now - this.state.keypressTimestamp > KEYPRESS_DELAY) {\n        this.props.onKeyPress();\n        newState.keypressTimestamp = now;\n      }\n    }\n    this.setState(newState);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const prompt = this.props.disabled ?\n      formatMessage(messages.messaging_disabled) :\n      (this.props.messagePrompt ?\n        formatMessage(messages[this.props.messagePrompt]) :\n        formatMessage(messages.type_new_message));\n    return (\n      <div id=\"send-message-panel\">\n        {!this.props.disabled ?\n          <>\n            {this.props.onAttachFile ?\n              <>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachImage.click();}} title=\"Add image\">\n                  <i className=\"material-icons secondary\">photo</i>\n                </a>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachFile.click();}} title=\"Attach file\">\n                  <i className=\"material-icons secondary\">attach_file</i>\n                </a>\n              </>\n              :\n              null}\n            {this.props.noInput ?\n              <div className=\"hr thin\" /> :\n              <textarea id=\"sendMessage\" placeholder={prompt}\n                value={this.state.message} onChange={this.handleMessageTyping}\n                onKeyPress={this.handleKeyPress}\n                ref={(ref) => {this.messageEditArea = ref;}}\n                autoFocus />}\n            <a href=\"#\" onClick={this.handleSend} title=\"Send\">\n              <i className=\"material-icons\">send</i>\n            </a>\n            <input type=\"file\" ref={(ref) => {this.attachFile = ref;}}\n              onChange={this.handleAttachFile} style={{display: 'none'}} />\n            <input type=\"file\" ref={(ref) => {this.attachImage = ref;}} accept=\"image/*\"\n              onChange={this.handleAttachImage} style={{display: 'none'}} />\n          </>\n          :\n          <div id=\"writing-disabled\">{prompt}</div>\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SendMessage);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { bytesToHumanSize } from '../lib/strformat.js';\n\n// Get material icon name from mime type.\nfunction iconFromMime(mime) {\n  // If more icons become available in material icons, add them to this mime-to-icon mapping.\n  const mimeToIcon = {default: 'insert_drive_file', image: 'image', text: 'description', video: 'theaters'};\n\n  return mimeToIcon[mime] || mimeToIcon[(mime || '').split('/')[0]] || mimeToIcon['default'];\n}\n\nexport default class DocPreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleSendDoc = this.handleSendDoc.bind(this);\n  }\n\n  handleSendDoc(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(this.props.content.file);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          <span>{this.props.content.filename}</span>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\">\n          <div className=\"flex-column narrow\">\n            <i className=\"material-icons gray\">{iconFromMime(this.props.content.type)}</i>\n            <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n              description=\"Label for file content type (mime)\" /></b> {this.props.content.type || 'application/octet-stream'}</div>\n            <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n              description=\"Label for file size\" /></b> {bytesToHumanSize(this.props.content.size)}</div>\n          </div>\n        </div>\n        <SendMessage\n          noInput={true}\n          onSendMessage={this.handleSendDoc}\n          onError={this.props.onError} />\n      </div>\n    );\n  }\n};\n","// GroupSubs: a list of group subscribers currently online.\n// Show in the topic title bar\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { MAX_ONLINE_IN_TOPIC } from '../config.js'\n\nimport LetterTile from './letter-tile.jsx';\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class GroupSubs extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const usersOnline = [];\n    const totalCount = (this.props.subscribers || []).length;\n    const countToShow = Math.min(MAX_ONLINE_IN_TOPIC, totalCount);\n\n    (this.props.subscribers || []).some((sub) => {\n      usersOnline.push(\n        <div className=\"avatar-box\" key={sub.user}>\n          <LetterTile\n            topic={sub.user}\n            avatar={makeImageUrl(sub.public ? sub.public.photo : null) || true}\n            title={sub.public ? sub.public.fn : null} />\n        </div>\n      );\n      return usersOnline.length == countToShow;\n    });\n\n    return (\n      <div id=\"topic-users\">{usersOnline} {totalCount > countToShow ?\n        <span>\n          <FormattedMessage id=\"more_online_members\" defaultMessage=\"+{overflow} more\"\n              description=\"Shown in MessagesView title bar when the number of online subscribers exceeds MAX_ONLINE_IN_TOPIC\"\n              values={{ overflow: (totalCount - countToShow) }} />\n        </span> : null}\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\nimport { bytesToHumanSize } from '../lib/strformat.js';\n\nexport default class ImagePreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      width: 0,\n      height: 0\n    };\n\n    this.handleSendImage = this.handleSendImage.bind(this);\n  }\n\n  assignWidth(node) {\n    if (node && !this.state.width) {\n      const bounds = node.getBoundingClientRect();\n      this.setState({\n        width: bounds.width | 0,\n        height: bounds.height | 0\n      });\n    }\n  }\n\n  handleSendImage(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(caption, this.props.content.blob);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n\n    const dim = fitImageSize(this.props.content.width, this.props.content.height,\n      this.state.width, this.state.height, false);\n    const size = dim ? { width: dim.dstWidth + 'px', height: dim.dstHeight + 'px' } :\n      ((this.props.content.width > this.props.content.height) ? {width: '100%'} : {height: '100%'});\n    size.maxWidth = '100%';\n    size.maxHeight = '100%';\n\n    let filename = this.props.content.filename;\n    // Average font aspect ratio is ~0.5; File name takes 1/3 of the viewport width.\n    const maxlength = Math.max(((this.state.width / REM_SIZE / 1.5) | 0) - 2, 12);\n    if (filename.length > maxlength) {\n      filename = filename.slice(0, maxlength/2 - 1) + '…' + filename.slice(1 - maxlength/2);\n    }\n    const width = this.props.content.width || '-';\n    const height = this.props.content.height || '-';\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          {!this.props.onSendMessage ?\n            <a href={this.props.content.url} download={this.props.content.filename}>\n              <i className=\"material-icons\">file_download</i> <FormattedMessage\n                id=\"download_action\" defaultMessage=\"download\" description=\"Call to action [download]\" />\n            </a>\n            :\n            <span>{this.props.content.filename}</span>\n          }\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\" ref={(node) => this.assignWidth(node)}>\n          <img src={this.props.content.url} style={size} className=\"image-preview\" alt={this.props.content.filename} />\n        </div>\n        {this.props.onSendMessage ?\n          <SendMessage\n            messagePrompt=\"add_image_caption\"\n            acceptBlank={true}\n            onSendMessage={this.handleSendImage}\n            onError={this.props.onError} />\n          :\n          <div id=\"image-preview-footer\">\n            <div>\n              <div><b><FormattedMessage id=\"label_file_name\" defaultMessage=\"File name:\"\n                description=\"Label for a file name\" /></b></div>\n              <div><span title={this.props.content.filename}>{filename ? filename : '-'}</span></div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n                description=\"Label for file content type (mime)\" /></b></div>\n              <div>{this.props.content.type}</div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n                description=\"Label for file size\" /></b></div>\n              <div>{width} &times; {height} px; {bytesToHumanSize(this.props.content.size)}</div>\n            </div>\n          </div>}\n      </div>\n    );\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Invitation extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleButtonAction = this.handleButtonAction.bind(this);\n  }\n\n  handleButtonAction(evt, data) {\n    evt.preventDefault();\n    this.props.onAction(data);\n  }\n\n  render() {\n    return (\n      <div className=\"accept-invite-panel\">\n        <div className=\"title\">\n          <FormattedMessage id=\"chat_invitation\"\n            defaultMessage=\"You are invited to start a new chat. What would you like to do?\"\n            description=\"New chat invitation message: [Accept] [Ignore] [Block].\" />\n        </div>\n        <div className=\"footer\">\n          <button className=\"blue\" onClick={event => { this.handleButtonAction(event, \"accept\"); }}>\n            <FormattedMessage id=\"chat_invitation_accept\"\n              defaultMessage=\"Accept\" description=\"Action [Accept] for chat invitation.\" />\n          </button>\n          <button className=\"white\" onClick={event => { this.handleButtonAction(event, \"delete\"); }}>\n            <FormattedMessage id=\"chat_invitation_ignore\"\n              defaultMessage=\"Ignore\" description=\"Action [Ignore] for chat invitation.\" />\n          </button>\n          <button className=\"white\" onClick={event => { this.handleButtonAction(event, \"block\"); }}>\n            <FormattedMessage id=\"chat_invitation_block\"\n              defaultMessage=\"Block\" description=\"Action [Block] for chat invitation.\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nexport default class LoadSpinner extends React.PureComponent {\n  render() {\n    return (this.props.show ?\n      <div className=\"load-spinner-box\"><div className=\"loader-spinner\"></div></div> : null);\n  }\n}\n","/* This is just a static page to display when no conversation is selected. */\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME } from '../config.js';\n\nexport default class LogoView extends React.PureComponent {\n  render() {\n    const version = APP_NAME + ' (' + Tinode.getLibrary() + ')';\n    return (\n      <div id=\"dummy-view\">\n        <div>\n          <a href=\"https://github.com/tinode/chat/\">\n            <img id=\"logo\" alt=\"logo\" src=\"img/logo.svg\" />\n            <h2>Tinode Web</h2>\n          </a>\n          <p><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\" \n            description=\"Label for a client version\" /> {version}</p>\n          <p><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\"\n            description=\"Label for a server version\" /> {this.props.serverVersion} ({this.props.serverAddress})</p>\n        </div>\n      </div>\n    );\n  }\n};\n","// Utility class for hash navigation.\n\n// Parse hash as in http://www.example.com/path#hash as if it were\n// path and arguments.\nexport default class HashNavigation {\n  static parseUrlHash(hash) {\n    // Split path from args, path -> parts[0], args->path[1]\n    const parts = hash.split('?', 2);\n    const params = {};\n    let path = [];\n    if (parts[0]) {\n      path = parts[0].substr(1).split('/');\n    }\n    if (parts[1]) {\n      parts[1].split('&').forEach(function(part) {\n        let item = part.split('=');\n        if (item[0]) {\n          params[decodeURIComponent(item[0])] = decodeURIComponent(item[1]);\n        }\n      });\n    }\n    return {path: path, params: params};\n  }\n\n  static navigateTo(url) {\n    window.location.hash = url;\n  }\n\n  static composeUrlHash(path, params) {\n    let url = path.join('/');\n    const args = [];\n    for (const key in params) {\n      if (params.hasOwnProperty(key)) {\n        args.push(key + '=' + params[key]);\n      }\n    }\n    if (args.length > 0) {\n      url += '?' + args.join('&');\n    }\n    return url;\n  }\n\n  static addUrlParam(hash, key, value) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.params[key] = value;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static removeUrlParam(hash, key) {\n    const parsed = this.parseUrlHash(hash);\n    delete parsed.params[key];\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlSidePanel(hash, sidepanel) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[0] = sidepanel;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlTopic(hash, topic) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[1] = topic;\n    // Close InfoView on topic change.\n    delete parsed.params.info;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n}\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\nconst Drafty = Tinode.Drafty;\n\nimport ChatMessage from '../widgets/chat-message.jsx';\nimport DocPreview from '../widgets/doc-preview.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupSubs from '../widgets/group-subs.jsx';\nimport ImagePreview from '../widgets/image-preview.jsx';\nimport Invitation from '../widgets/invitation.jsx';\nimport LetterTile from '../widgets/letter-tile.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport LogoView from './logo-view.jsx';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { DEFAULT_P2P_ACCESS_MODE, IMAGE_PREVIEW_DIM, KEYPRESS_DELAY, MESSAGES_PAGE,\n  MAX_EXTERN_ATTACHMENT_SIZE, MAX_IMAGE_DIM, MAX_INBAND_ATTACHMENT_SIZE, READ_DELAY } from '../config.js';\nimport { SUPPORTED_IMAGE_FORMATS, blobToBase64, filePasted, fileToBase64,\n  imageScaled, makeImageUrl } from '../lib/blob-helpers.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { bytesToHumanSize, shortDateFormat } from '../lib/strformat.js';\n\n// Run timer with this frequency (ms) for checking notification queue.\nconst NOTIFICATION_EXEC_INTERVAL = 300;\n\nconst messages = defineMessages({\n  online_now: {\n    id: 'online_now',\n    defaultMessage: 'online now',\n    description: 'Indicator that the user or topic is currently online',\n  },\n  last_seen: {\n    id: 'last_seen_timestamp',\n    defaultMessage: 'Last seen',\n    description: 'Label for the timestamp of when the user or topic was last online'\n  },\n  not_found: {\n    id: 'title_not_found',\n    defaultMessage: 'Not found',\n    description: 'Title shown when topic is not found'\n  },\n  channel: {\n    id: 'channel',\n    defaultMessage: 'channel',\n    description: 'Subtitle shown for channels in MessagesView instead of last seen'\n  },\n  file_attachment_too_large: {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  }\n});\n\n// Checks if the access permissions are granted but not yet accepted.\nfunction isUnconfirmed(acs) {\n  if (acs) {\n    const ex = acs.getExcessive() || '';\n    return acs.isJoiner('given') && (ex.includes('R') || ex.includes('W'));\n  }\n  return false;\n}\n\nfunction isPeerRestricted(acs) {\n  if (acs) {\n    const ms = acs.getMissing() || '';\n    return acs.isJoiner('want') && (ms.includes('R') || ms.includes('W'));\n  }\n  return false;\n}\n\nclass MessagesView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = MessagesView.getDerivedStateFromProps(props, {});\n\n    this.leave = this.leave.bind(this);\n    this.sendImageAttachment = this.sendImageAttachment.bind(this);\n    this.sendFileAttachment = this.sendFileAttachment.bind(this);\n    this.sendKeyPress = this.sendKeyPress.bind(this);\n    this.handleScrollReference = this.handleScrollReference.bind(this);\n    this.handleScrollEvent = this.handleScrollEvent.bind(this);\n    this.handleDescChange = this.handleDescChange.bind(this);\n    this.handleSubsUpdated = this.handleSubsUpdated.bind(this);\n    this.handleNewMessage = this.handleNewMessage.bind(this);\n    this.handleAllMessagesReceived = this.handleAllMessagesReceived.bind(this);\n    this.handleInfoReceipt = this.handleInfoReceipt.bind(this);\n    this.handleImagePostview = this.handleImagePostview.bind(this);\n    this.handleClosePreview = this.handleClosePreview.bind(this);\n    this.handleFormResponse = this.handleFormResponse.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleShowContextMenuMessage = this.handleShowContextMenuMessage.bind(this);\n    this.handleNewChatAcceptance = this.handleNewChatAcceptance.bind(this);\n    this.handleEnablePeer = this.handleEnablePeer.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n    this.postReadNotification = this.postReadNotification.bind(this);\n    this.clearNotificationQueue = this.clearNotificationQueue.bind(this);\n\n    this.readNotificationQueue = [];\n    this.readNotificationTimer = null;\n  }\n\n  componentDidMount() {\n    // this.propsChange(this.props, this.state);\n    if (this.messagesScroller) {\n      this.messagesScroller.addEventListener('scroll', this.handleScrollEvent);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messagesScroller) {\n      this.messagesScroller.removeEventListener('scroll', this.handleScrollEvent);\n    }\n\n    // Flush all notifications.\n    this.clearNotificationQueue();\n  }\n\n  // Scroll last message into view on component update e.g. on message received\n  // or vertical shrinking.\n  componentDidUpdate(prevProps, prevState) {\n    if (this.messagesScroller) {\n      if (prevState.topic != this.state.topic || prevState.messages.length != this.state.messages.length) {\n        // New message\n        this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n      } else if (prevProps.viewportHeight > this.props.viewportHeight) {\n        // Componet changed height.\n        this.messagesScroller.scrollTop += prevProps.viewportHeight - this.props.viewportHeight;\n      }\n    }\n\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (this.state.topic != prevState.topic) {\n      if (prevState.topic && !Tinode.isNewGroupTopicName(prevState.topic)) {\n        this.leave(prevState.topic);\n      }\n\n      if (topic) {\n        topic.onData = this.handleNewMessage;\n        topic.onAllMessagesReceived = this.handleAllMessagesReceived;\n        topic.onInfo = this.handleInfoReceipt;\n        topic.onMetaDesc = this.handleDescChange;\n        topic.onSubsUpdated = this.handleSubsUpdated;\n        topic.onPres = this.handleSubsUpdated;\n      }\n    }\n\n    if (!this.props.applicationVisible) {\n      // If application is not visible, flush all unsent 'read' notifications.\n      this.clearNotificationQueue();\n    } else {\n      // Otherwise assume there are unread messages.\n      this.postReadNotification(0);\n    }\n\n    if (topic && !topic.isSubscribed() && this.props.ready &&\n        ((this.state.topic != prevState.topic) || !prevProps.ready)) {\n      // Is this a new topic?\n      const newTopic = (this.props.newTopicParams && this.props.newTopicParams._topicName == this.props.topic);\n\n      // Don't request the tags. They are useless unless the user\n      // is the owner and is editing the topic.\n      let getQuery = topic.startMetaQuery().withLaterDesc().withLaterSub();\n      if (this.state.isReader || newTopic) {\n        // Reading is either permitted or we don't know because it's a new topic. Ask for messages.\n        getQuery = getQuery.withLaterData(MESSAGES_PAGE);\n        if (this.state.isReader) {\n          getQuery = getQuery.withLaterDel();\n        }\n        // And show \"loading\" spinner.\n        this.setState({ fetchingMessages: true });\n      }\n      const setQuery = newTopic ? this.props.newTopicParams : undefined;\n      topic.subscribe(getQuery.build(), setQuery)\n        .then((ctrl) => {\n          if (ctrl.code == 303) {\n            // Redirect to another topic requested.\n            HashNavigation.navigateTo(HashNavigation.setUrlTopic('', ctrl.params.topic));\n            return;\n          }\n          if (this.state.topic != ctrl.topic) {\n            this.setState({topic: ctrl.topic});\n          }\n          this.props.onNewTopicCreated(this.props.topic, ctrl.topic);\n          // If there are unsent messages, try sending them now.\n          topic.queuedMessages((pub) => {\n            if (!pub._sending && topic.isSubscribed()) {\n              topic.publishMessage(pub);\n            }\n          });\n        })\n        .catch((err) => {\n          console.log(\"Failed subscription to\", this.state.topic);\n          this.props.onError(err.message, 'err');\n          const blankState = MessagesView.getDerivedStateFromProps({}, {});\n          blankState.title = this.props.intl.formatMessage(messages.not_found);\n          this.setState(blankState);\n        });\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let nextState = {};\n    if (!nextProps.topic) {\n      // Default state: no topic.\n      nextState = {\n        messages: [],\n        onlineSubs: [],\n        topic: null,\n        title: '',\n        avatar: null,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false,\n        peerMessagingDisabled: false,\n        channel: false\n      };\n    } else if (nextProps.topic != prevState.topic) {\n      const topic = nextProps.tinode.getTopic(nextProps.topic);\n      nextState = {\n        topic: nextProps.topic,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false\n      };\n\n      if (topic) {\n        // Topic exists.\n        const msgs = [];\n        const subs = [];\n\n        if (nextProps.connected) {\n          topic.subscribers((sub) => {\n            if (sub.online && sub.user != nextProps.myUserId) {\n              subs.push(sub);\n            }\n          });\n        }\n\n        topic.messages(function(msg) {\n          if (!msg.deleted) {\n            msgs.push(msg);\n          }\n        });\n\n        Object.assign(nextState, {\n          messages: msgs,\n          onlineSubs: subs\n        });\n\n        if (topic.public) {\n          Object.assign(nextState, {\n            title: topic.public.fn,\n            avatar: makeImageUrl(topic.public.photo)\n          });\n        } else {\n          Object.assign(nextState, {\n            title: '',\n            avatar: null\n          });\n        }\n\n        const peer = topic.p2pPeerDesc();\n        if (peer) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: isPeerRestricted(peer.acs)\n          });\n        } else if (prevState.peerMessagingDisabled) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: false\n          });\n        }\n        Object.assign(nextState, {\n          channel: topic.isChannelType()\n        });\n      } else {\n        // Invalid topic.\n        Object.assign(nextState, {\n          messages: [],\n          onlineSubs: [],\n          title: '',\n          avatar: null,\n          peerMessagingDisabled: false,\n          channel: false\n        });\n      }\n    }\n\n    if (nextProps.acs) {\n      if (nextProps.acs.isWriter() != prevState.isWriter) {\n        nextState.isWriter = !prevState.isWriter;\n      }\n      if (nextProps.acs.isReader() != prevState.isReader) {\n        nextState.isReader = !prevState.isReader;\n      }\n      if (!nextProps.acs.isReader('given') != prevState.readingBlocked) {\n        nextState.readingBlocked = !prevState.readingBlocked;\n      }\n      if (nextProps.acs.isSharer() != prevState.isSharer) {\n        nextState.isSharer = !prevState.isSharer;\n      }\n    } else {\n      if (prevState.isWriter) {\n        nextState.isWriter = false;\n      }\n      if (prevState.isReader) {\n        nextState.isReader = false;\n      }\n      if (!prevState.readingBlocked) {\n        prevState.readingBlocked = true;\n      }\n      if (prevState.isSharer) {\n        nextState.isSharer = false;\n      }\n    }\n\n    if (isUnconfirmed(nextProps.acs) == !prevState.unconformed) {\n      nextState.unconfirmed = !prevState.unconformed;\n    }\n\n    // Clear subscribers online when there is no connection.\n    if (!nextProps.connected && prevState.onlineSubs && prevState.onlineSubs.length > 0) {\n      nextState.onlineSubs = [];\n    }\n\n    return nextState;\n  }\n\n  leave(oldTopicName) {\n    if (!oldTopicName) {\n      return;\n    }\n    let oldTopic = this.props.tinode.getTopic(oldTopicName);\n    if (oldTopic && oldTopic.isSubscribed()) {\n      oldTopic.leave(false)\n        .catch(() => { /* do nothing here */ })\n        .finally(() => {\n          // We don't care if the request succeeded or failed.\n          // The topic is dead regardless.\n          this.setState({fetchingMessages: false});\n          oldTopic.onData = undefined;\n          oldTopic.onAllMessagesReceived = undefined;\n          oldTopic.onInfo = undefined;\n          oldTopic.onMetaDesc = undefined;\n          oldTopic.onSubsUpdated = undefined;\n          oldTopic.onPres = undefined;\n        });\n    }\n  }\n\n  handleScrollReference(node) {\n    if (node) {\n      node.addEventListener('scroll', this.handleScrollEvent);\n      this.messagesScroller = node;\n      this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n    }\n  }\n\n  // Get older messages\n  handleScrollEvent(event) {\n    this.setState({scrollPosition: event.target.scrollHeight - event.target.scrollTop});\n    if (event.target.scrollTop <= 0) {\n      this.setState((prevState, props) => {\n        const newState = {};\n        if (!prevState.fetchingMessages) {\n          const topic = this.props.tinode.getTopic(this.state.topic);\n          if (topic && topic.isSubscribed() && topic.msgHasMoreMessages()) {\n            newState.fetchingMessages = true;\n            topic.getMessagesPage(MESSAGES_PAGE).catch((err) => {\n              this.setState({fetchingMessages: false});\n              this.props.onError(err.message, 'err');\n            });\n          }\n        }\n        return newState;\n      });\n    }\n  }\n\n  handleDescChange(desc) {\n    if (desc.public) {\n      this.setState({\n        title: desc.public.fn,\n        avatar: makeImageUrl(desc.public.photo)\n      });\n    } else {\n      this.setState({\n        title: '',\n        avatar: null\n      });\n    }\n\n    if (desc.acs) {\n      this.setState({\n        isWriter: desc.acs.isWriter(),\n        isReader: desc.acs.isReader(),\n        readingBlocked: !desc.acs.isReader('given'),\n        unconfirmed: isUnconfirmed(desc.acs),\n      });\n    }\n  }\n\n  postReadNotification(seq) {\n    // Ignore notifications if the app is invisible.\n    if (!this.props.applicationVisible) {\n      return;\n    }\n\n    // Set up the timer if it's not running already.\n    if (!this.readNotificationTimer) {\n      this.readNotificationTimer = setInterval(() => {\n        if (this.readNotificationQueue.length == 0) {\n          // Shut down the timer if the queue is empty.\n          clearInterval(this.readNotificationTimer);\n          this.readNotificationTimer = null;\n          return;\n        }\n\n        let seq = -1;\n        while (this.readNotificationQueue.length > 0) {\n          const n = this.readNotificationQueue[0];\n          if (n.topicName != this.state.topic) {\n            // Topic has changed. Drop the notification.\n            this.readNotificationQueue.shift();\n            continue;\n          }\n\n          const now = new Date();\n          if (n.sendAt <= now) {\n            // Remove expired notification from queue.\n            this.readNotificationQueue.shift();\n            seq = Math.max(seq, n.seq);\n          } else {\n            break;\n          }\n        }\n\n        // Send only one notification for the whole batch of messages.\n        if (seq >= 0) {\n          const topic = this.props.tinode.getTopic(this.state.topic);\n          if (topic) {\n            topic.noteRead(seq);\n          }\n        }\n      }, NOTIFICATION_EXEC_INTERVAL);\n    }\n\n    const now = new Date();\n    this.readNotificationQueue.push({\n      topicName: this.state.topic,\n      seq: seq,\n      sendAt: now.setMilliseconds(now.getMilliseconds() + READ_DELAY)\n    });\n  }\n\n  // Clear notification queue and timer.\n  clearNotificationQueue() {\n    this.readNotificationQueue = [];\n    if (this.readNotificationTimer) {\n      clearInterval(this.readNotificationTimer);\n      this.readNotificationTimer = null;\n    }\n  }\n\n  handleSubsUpdated() {\n    if (this.state.topic) {\n      const subs = [];\n      const topic = this.props.tinode.getTopic(this.state.topic);\n      topic.subscribers((sub) => {\n        if (sub.online && sub.user != this.props.myUserId) {\n          subs.push(sub);\n        }\n      });\n      const newState = {onlineSubs: subs};\n      const peer = topic.p2pPeerDesc();\n      if (peer) {\n        Object.assign(newState, {\n          peerMessagingDisabled: isPeerRestricted(peer.acs)\n        });\n      } else if (this.state.peerMessagingDisabled) {\n        Object.assign(newState, {\n          peerMessagingDisabled: false\n        });\n      }\n      this.setState(newState);\n    }\n  }\n\n  handleNewMessage(msg) {\n    // Regenerate messages list\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    const newState = {messages: []};\n    topic.messages((m) => {\n      if (!m.deleted) {\n        newState.messages.push(m);\n      }\n    });\n\n    // msg could be null if one or more messages were deleted.\n    if (msg && !msg.deleted) {\n      // If the message is added to the end of the message list,\n      // scroll to the bottom.\n      if (topic.isNewMessage(msg.seq)) {\n        newState.scrollPosition = 0;\n      }\n\n      // Aknowledge messages except own messages. They are\n      // automatically assumed to be read and recived.\n      const status = topic.msgStatus(msg, true);\n      if (status >= Tinode.MESSAGE_STATUS_SENT && msg.from != this.props.myUserId) {\n        this.postReadNotification(msg.seq);\n      }\n      this.props.onData(msg);\n    }\n    this.setState(newState);\n  }\n\n  handleAllMessagesReceived(count) {\n    this.setState({fetchingMessages: false});\n    if (count > 0) {\n      // 0 means \"latest\".\n      this.postReadNotification(0);\n    }\n  }\n\n  handleInfoReceipt(info) {\n    switch (info.what) {\n      case 'kp': {\n        clearTimeout(this.keyPressTimer);\n        var instance = this;\n        this.keyPressTimer = setTimeout(function() {\n          instance.setState({typingIndicator: false});\n        }, KEYPRESS_DELAY + 1000);\n        if (!this.state.typingIndicator) {\n          this.setState({typingIndicator: true});\n        }\n        break;\n      }\n      case 'read':\n      case 'recv':\n        // Redraw due to changed recv/read status.\n        this.forceUpdate();\n        break;\n      default:\n        console.log(\"Other change in topic: \", info.what);\n    }\n  }\n\n  handleImagePostview(content) {\n    this.setState({ imagePostview: content });\n  }\n\n  handleClosePreview() {\n    if (this.state.imagePreview && this.state.imagePreview.url) {\n      URL.revokeObjectURL(this.state.imagePreview.url);\n    }\n    this.setState({ imagePostview: null, imagePreview: null, docPreview: null });\n  }\n\n  handleFormResponse(action, text, data) {\n    if (action == 'pub') {\n      this.props.sendMessage(Drafty.attachJSON(Drafty.parse(text), data));\n    } else if (action == 'url') {\n      const url = new URL(data.ref);\n      const params = url.searchParams;\n      for (let key in data.resp) {\n        if (data.resp.hasOwnProperty(key)) {\n          params.set(key, data.resp[key]);\n        }\n      }\n      ['name', 'seq'].map(function(key) {\n        if (data[key]) {\n          params.set(key, data[key]);\n        }\n      });\n      params.set('uid', this.props.myUserId);\n      url.search = params;\n      window.open(url, '_blank');\n    } else {\n      console.log(\"Unknown action in form\", action);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.state.topic, y: e.pageY, x: e.pageX });\n  }\n\n  handleShowContextMenuMessage(params, messageSpecificMenuItems) {\n    params.topicName = this.state.topic;\n    const menuItems = messageSpecificMenuItems || [];\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (topic) {\n      if (!topic.isChannelType()) {\n        menuItems.push('message_delete');\n      }\n      const acs = topic.getAccessMode();\n      if (acs && acs.isDeleter()) {\n        menuItems.push('message_delete_hard');\n      }\n    }\n    this.props.showContextMenu(params, menuItems);\n  }\n\n  handleNewChatAcceptance(action) {\n    this.props.onNewChat(this.state.topic, action);\n  }\n\n  handleEnablePeer(e) {\n    e.preventDefault();\n    this.props.onChangePermissions(this.state.topic, DEFAULT_P2P_ACCESS_MODE, this.state.topic);\n  }\n\n  sendKeyPress() {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (topic.isSubscribed()) {\n      topic.noteKeyPress();\n    }\n  }\n\n  // Send attachment as Drafty message:\n  // - if file is too large, upload it and send a s link.\n  // - if file is small enough, just send it in-band.\n  sendFileAttachment(file) {\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (file.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      if (!uploader) {\n        this.props.onError(this.props.intl.formatMessage(messages.cannot_initiate_upload));\n        return;\n      }\n      const uploadCompletionPromise = uploader.upload(file);\n      const msg = Drafty.attachFile(null, {\n        mime: file.type,\n        filename: file.name,\n        size: file.size,\n        urlPromise: uploadCompletionPromise\n      });\n      // Pass data and the uploader to the TinodeWeb.\n      this.props.sendMessage(msg, uploadCompletionPromise, uploader);\n    } else {\n      // Small enough to send inband.\n      fileToBase64(file,\n        (mime, bits, fname) => {\n          this.props.sendMessage(Drafty.attachFile(null, {mime: mime, data: bits, filename: fname}));\n        },\n        this.props.onError\n      );\n    }\n  }\n\n  // handleAttachFile method is called when [Attach file] button is clicked.\n  handleAttachFile(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    if (file.size > maxExternAttachmentSize) {\n      // Too large.\n      this.props.onError(this.props.intl.formatMessage(messages.file_attachment_too_large,\n        {size: bytesToHumanSize(file.size), limit: bytesToHumanSize(maxExternAttachmentSize)}), 'err');\n    } else {\n      this.setState({ docPreview: {\n        file: file,\n        filename: file.name,\n        size: file.size,\n        type: file.type\n      }});\n    }\n  }\n\n  // sendImageAttachment sends the image bits inband as Drafty message.\n  sendImageAttachment(caption, blob) {\n    const mime = this.state.imagePreview.type;\n    const width = this.state.imagePreview.width;\n    const height = this.state.imagePreview.height;\n    const fname = this.state.imagePreview.filename;\n\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (blob.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      if (!uploader) {\n        this.props.onError(this.props.intl.formatMessage(messages.cannot_initiate_upload));\n        return;\n      }\n      const uploadCompletionPromise = uploader.upload(blob);\n\n      // Make small preview to show while uploading.\n      imageScaled(blob, IMAGE_PREVIEW_DIM, IMAGE_PREVIEW_DIM, -1, false,\n        (tinyBlob) => {\n          // Convert tiny image into base64 for serialization and previewing.\n          blobToBase64(tinyBlob, (blobMime, tinyBits64) => {\n            let msg = Drafty.insertImage(null, 0, {\n              mime: mime,\n              _tempPreview: tinyBits64, // This preview will not be serialized.\n              width: width,\n              height: height,\n              filename: fname,\n              size: blob.size,\n              urlPromise: uploadCompletionPromise\n            });\n            if (caption) {\n              msg = Drafty.appendLineBreak(msg);\n              msg = Drafty.append(msg, Drafty.init(caption));\n            }\n            // Pass data and the uploader to the TinodeWeb.\n            this.props.sendMessage(msg, uploadCompletionPromise, uploader);\n          }\n        )},\n        // Failure\n        (err) => {\n          this.props.onError(err, 'err');\n        }\n      );\n      return;\n    }\n\n    // Upload the image if it's too big to be send inband.\n    blobToBase64(blob, (blobMime, bits64) => {\n      let msg = Drafty.insertImage(null, 0, {\n        mime: blobMime,\n        preview: bits64, // Serializable preview\n        width: width,\n        height: height,\n        filename: fname,\n        size: blob.size\n      });\n      if (caption) {\n        msg = Drafty.appendLineBreak(msg);\n        msg = Drafty.append(msg, Drafty.init(caption));\n      }\n      this.props.sendMessage(msg);\n    });\n  }\n\n  // handleAttachImage method is called when [Attach image] button is clicked.\n  handleAttachImage(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    // Get image dimensions and size, optionally scale it down.\n    imageScaled(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, maxExternAttachmentSize, false,\n      // Success\n      (blob, mime, width, height, fname) => {\n        this.setState({imagePreview: {\n          url: URL.createObjectURL(blob),\n          blob: blob,\n          filename: fname,\n          width: width,\n          height: height,\n          size: blob.size,\n          type: mime\n        }});\n      },\n      // Failure\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    );\n  }\n\n  handleCancelUpload(seq, uploader) {\n    const found = this.state.messages.find(msg => msg.seq == seq);\n    if (found) {\n      found._cancelled = true;\n    }\n    uploader.cancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n\n    let component;\n    if (this.props.hideSelf) {\n      component = null;\n    } else if (!this.state.topic) {\n      component = (\n        <LogoView\n          serverVersion={this.props.serverVersion}\n          serverAddress={this.props.serverAddress} />\n      );\n    } else {\n      let component2;\n      if (this.state.imagePreview) {\n        // Preview image before sending.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePreview}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendImageAttachment} />\n        );\n      } else if (this.state.imagePostview) {\n        // Expand received image.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePostview}\n            onClose={this.handleClosePreview} />\n        );\n      } else if (this.state.docPreview) {\n        // Preview attachment before sending.\n        component2 = (\n          <DocPreview\n            content={this.state.docPreview}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendFileAttachment} />\n        );\n      } else {\n        const topic = this.props.tinode.getTopic(this.state.topic);\n        const isChannel = topic.isChannelType();\n        const groupTopic = topic.isGroupType() && !isChannel;\n        let messageNodes = [];\n        let previousFrom = null;\n        let chatBoxClass = null;\n        for (let i=0; i<this.state.messages.length; i++) {\n          let msg = this.state.messages[i];\n          let nextFrom = null;\n\n          if (i + 1 < this.state.messages.length) {\n            nextFrom = this.state.messages[i+1].from || 'chan';\n          }\n\n          let sequence = 'single';\n          let thisFrom = msg.from || 'chan';\n          if (thisFrom == previousFrom) {\n            if (thisFrom == nextFrom) {\n              sequence = 'middle';\n            } else {\n              sequence = 'last';\n            }\n          } else if (thisFrom == nextFrom) {\n            sequence = 'first';\n          }\n          previousFrom = thisFrom;\n\n          const isReply = !(thisFrom == this.props.myUserId);\n          const deliveryStatus = topic.msgStatus(msg, true);\n\n          let userName, userAvatar, userFrom;\n          if (groupTopic) {\n            const user = topic.userDesc(thisFrom);\n            if (user && user.public) {\n              userName = user.public.fn;\n              userAvatar = makeImageUrl(user.public.photo);\n            }\n            userFrom = thisFrom;\n            chatBoxClass='chat-box group';\n          } else {\n            chatBoxClass='chat-box';\n          }\n\n          messageNodes.push(\n            <ChatMessage\n              tinode={this.props.tinode}\n              content={msg.content}\n              deleted={msg.hi}\n              mimeType={msg.head ? msg.head.mime : null}\n              timestamp={msg.ts}\n              response={isReply}\n              seq={msg.seq}\n              userFrom={userFrom}\n              userName={userName}\n              userAvatar={userAvatar}\n              sequence={sequence}\n              received={deliveryStatus}\n              uploader={msg._uploader}\n              viewportWidth={this.props.viewportWidth}\n              showContextMenu={this.state.channel? false : this.handleShowContextMenuMessage}\n              onImagePreview={this.handleImagePostview}\n              onFormResponse={this.handleFormResponse}\n              onError={this.props.onError}\n              onCancelUpload={this.handleCancelUpload}\n              key={msg.seq} />\n          );\n        }\n\n        let lastSeen = null;\n        if (isChannel) {\n          lastSeen = formatMessage(messages.channel);\n        } else {\n          const cont = this.props.tinode.getMeTopic().getContact(this.state.topic);\n          if (cont && Tinode.isP2PTopicName(cont.topic)) {\n            if (cont.online) {\n              lastSeen = formatMessage(messages.online_now);\n            } else if (cont.seen) {\n              lastSeen = formatMessage(messages.last_seen) + \": \" +\n                shortDateFormat(cont.seen.when, this.props.intl.locale);\n              // TODO: also handle user agent in c.seen.ua\n            }\n          }\n        }\n        const avatar = this.state.avatar || true;\n        const online = this.props.online ? 'online' + (this.state.typingIndicator ? ' typing' : '') : 'offline';\n\n        component2 = (\n          <>\n            <div id=\"topic-caption-panel\" className=\"caption-panel\">\n              {this.props.displayMobile ?\n                <a href=\"#\" id=\"hide-message-view\" onClick={(e) => {e.preventDefault(); this.props.onHideMessagesView();}}>\n                  <i className=\"material-icons\">arrow_back</i>\n                </a>\n                :\n                null}\n              <div className=\"avatar-box\">\n                <LetterTile\n                  avatar={avatar}\n                  topic={this.state.topic}\n                  title={this.state.title} />\n                {!isChannel ? <span className={online} /> : null}\n              </div>\n              <div id=\"topic-title-group\">\n                <div id=\"topic-title\" className=\"panel-title\">{\n                  this.state.title ||\n                  <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n                    description=\"Title shown when the topic has no name\" /></i>\n                }</div>\n                <div id=\"topic-last-seen\">{lastSeen}</div>\n              </div>\n              {groupTopic ?\n                <GroupSubs\n                  subscribers={this.state.onlineSubs} /> :\n                <div id=\"topic-users\" />\n              }\n              <div>\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">more_vert</i>\n                </a>\n              </div>\n            </div>\n            {this.props.displayMobile ?\n              <ErrorPanel\n                level={this.props.errorLevel}\n                text={this.props.errorText}\n                onClearError={this.props.onError} />\n              : null}\n            <LoadSpinner show={this.state.fetchingMessages} />\n            <div id=\"messages-container\">\n              <div id=\"messages-panel\" ref={this.handleScrollReference}>\n                <ul id=\"scroller\" className={chatBoxClass}>\n                  {messageNodes}\n                </ul>\n              </div>\n              {!this.state.isReader ?\n              <div id=\"write-only-background\">\n                {this.state.readingBlocked ?\n                <div id=\"write-only-note\">\n                  <FormattedMessage id=\"messages_not_readable\" defaultMessage=\"no access to messages\"\n                    description=\"Message shown in topic without the read access\" />\n                </div>\n                : null }\n              </div>\n              : null }\n            </div>\n            {this.state.peerMessagingDisabled && !this.state.unconfirmed ?\n              <div id=\"peer-messaging-disabled-note\">\n                <i className=\"material-icons secondary\">block</i> <FormattedMessage\n                  id=\"peers_messaging_disabled\" defaultMessage=\"Peer's messaging is disabled.\"\n                  description=\"Shown when the p2p peer's messaging is disabled\" /> <a href=\"#\"\n                    onClick={this.handleEnablePeer}><FormattedMessage id=\"enable_peers_messaging\"\n                    defaultMessage=\"Enable\" description=\"Call to action to enable peer's messaging\" /></a>.\n              </div> : null}\n            {this.state.unconfirmed ?\n              <Invitation onAction={this.handleNewChatAcceptance} />\n              :\n              <SendMessage\n                disabled={!this.state.isWriter}\n                onSendMessage={this.props.sendMessage}\n                onKeyPress={this.sendKeyPress}\n                onAttachFile={this.handleAttachFile}\n                onAttachImage={this.handleAttachImage}\n                onError={this.props.onError} />}\n          </>\n        );\n      }\n\n      component = <div id=\"topic-view\">{component2}</div>\n    }\n    return component;\n  }\n};\n\nexport default injectIntl(MessagesView);\n","// The <- button to be displayed in title bars.\nimport React from 'react';\n\nexport default class ButtonBack extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onBack();}}>\n        <i className=\"material-icons\">arrow_back</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class MenuContacts extends React.PureComponent {\n  render() {\n    return (\n      <div>\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onNewTopic();}}><i className=\"material-icons\">chat</i></a>\n        &nbsp;\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nexport default class MenuStart extends React.PureComponent {\n  render() {\n    return (\n        <div>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSignUp();}}><i className=\"material-icons\">person_add</i></a>\n          &nbsp;\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n        </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\nimport ButtonBack from './button-back.jsx';\nimport MenuContacts from './menu-contacts.jsx';\nimport MenuStart from './menu-start.jsx';\n\nexport default class SideNavbar extends React.PureComponent {\n  render() {\n    return (\n        <div id=\"side-caption-panel\" className=\"caption-panel\">\n          {this.props.onCancel ? <ButtonBack onBack={this.props.onCancel} /> : null}\n          {this.props.avatar ?\n            <div id=\"self-avatar\" className=\"avatar-box\">\n              <LetterTile\n                avatar={this.props.avatar}\n                topic={this.props.myUserId}\n                title={this.props.title} />\n            </div>\n            :\n            null}\n          <div id=\"sidepanel-title\" className=\"panel-title\">{this.props.title}</div>\n          {this.props.state === 'login' ?\n              <MenuStart onSignUp={this.props.onSignUp} onSettings={this.props.onSettings} /> :\n            this.props.state === 'contacts' ?\n              <MenuContacts onNewTopic={this.props.onNewTopic} onSettings={this.props.onSettings} /> :\n            null}\n        </div>\n    );\n  }\n};\n","/* ContactsView holds all contacts-related stuff */\nimport React from 'react';\nimport { FormattedMessage, defineMessages } from 'react-intl';\n\nimport ContactList from '../widgets/contact-list.jsx';\n\nimport { updateFavicon } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  archived_contacts_title: {\n    id: \"archived_contacts\",\n    defaultMessage: \"Archived contacts ({count})\",\n    description: \"Label for archived chats\"\n  }\n});\n\nexport default class ContactsView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAction = this.handleAction.bind(this);\n\n    this.state = ContactsView.deriveStateFromProps(props);\n  }\n\n  static deriveStateFromProps(props) {\n    const contacts = [];\n    let unreadThreads = 0;\n    let archivedCount = 0;\n    props.chatList.map((c) => {\n      const blocked = c.acs && !c.acs.isJoiner();\n      // Show only blocked contacts only when props.blocked == true.\n      if (blocked && props.blocked) {\n        contacts.push(c);\n      }\n      if (blocked || props.blocked) {\n        return;\n      }\n\n      if (c.private && c.private.arch) {\n        if (props.archive) {\n          contacts.push(c);\n        } else {\n          archivedCount ++;\n        }\n      } else if (!props.archive) {\n        contacts.push(c);\n        unreadThreads += c.unread > 0 ? 1 : 0;\n      }\n    });\n\n    contacts.sort((a, b) => {\n      return (b.touched || 0) - (a.touched || 0);\n    });\n\n    if (archivedCount > 0) {\n      contacts.push({\n        action: 'archive',\n        title: messages.archived_contacts_title,\n        values: {count: archivedCount}\n      });\n    }\n\n    return {\n      contactList: contacts,\n      unreadThreads: unreadThreads\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chatList != this.props.chatList ||\n        prevProps.archive != this.props.archive ||\n        prevProps.blocked != this.props.blocked) {\n      const newState = ContactsView.deriveStateFromProps(this.props);\n      this.setState(newState);\n      if (newState.unreadThreads != prevState.unreadThreads) {\n        updateFavicon(newState.unreadThreads);\n      }\n    }\n  }\n\n  handleAction(action_ignored) {\n    this.props.onShowArchive();\n  }\n\n  render() {\n    return (\n      <FormattedMessage id=\"contacts_not_found\"\n        defaultMessage=\"You have no chats<br />¯∖_(ツ)_/¯\"\n        description=\"HTML message shown in ContactList when no contacts are found\">{\n        (no_contacts) => <ContactList\n          connected={this.props.connected}\n          contacts={this.state.contactList}\n          emptyListMessage={no_contacts}\n          topicSelected={this.props.topicSelected}\n          myUserId={this.props.myUserId}\n          showOnline={true}\n          showUnread={true}\n          onTopicSelected={this.props.onTopicSelected}\n          showContextMenu={this.props.showContextMenu}\n          onAction={this.handleAction} />\n      }</FormattedMessage>\n    );\n  }\n};\n","// Helper functions for storing values in localStorage.\n// By default localStorage can store only strings, not objects or other types.\n\nexport default class LocalStorageUtil {\n  // Replace old object with the new one.\n  static setObject(key, value) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n\n  // Get stored object.\n  static getObject(key) {\n    const value = localStorage.getItem(key);\n    return value && JSON.parse(value);\n  }\n\n  // Partially or wholly update stored object.\n  static updateObject(key, value) {\n    const oldVal = this.getObject(key);\n    this.setObject(key, Object.assign(oldVal || {}, value));\n  }\n\n  // Just a wrapper.\n  static removeItem(key) {\n    localStorage.removeItem(key);\n  }\n}\n","// Account registration.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport { vcard } from '../lib/utils.js';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class CreateAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: '',\n      password: '',\n      email: '',\n      fn: '', // full/formatted name\n      imageDataUrl: null,\n      errorCleared: false,\n      saveToken: LocalStorageUtil.getObject('keep-logged-in')\n    };\n\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(password) {\n    this.setState({password: password});\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value})\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleToggleSaveToken() {\n    LocalStorageUtil.setObject('keep-logged-in', !this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({errorCleared: false});\n    this.props.onCreateAccount(\n      this.state.login.trim(),\n      this.state.password.trim(),\n      vcard(this.state.fn.trim().substring(0, MAX_TITLE_LENGTH), this.state.imageDataUrl),\n      {'meth': 'email', 'val': this.state.email});\n  }\n\n  render() {\n    let submitClasses = 'blue';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form className=\"panel-form-column\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n              description=\"Placeholer for username/login\">{\n              (login_prompt) => <input type=\"text\" placeholder={login_prompt} autoComplete=\"user-name\"\n                value={this.state.login} onChange={this.handleLoginChange} required autoFocus />\n            }</FormattedMessage>\n            <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n              description=\"Placeholder/prompt for entering password\">{\n              (password_prompt) => <VisiblePassword placeholder={password_prompt} autoComplete=\"new-password\"\n                value={this.state.password} onFinished={this.handlePasswordChange}\n                required={true} />\n            }</FormattedMessage>\n          </div>\n          <AvatarUpload\n            onImageChanged={this.handleImageChanged}\n            onError={this.props.onError} />\n        </div>\n        <div  className=\"panel-form-row\">\n          <FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n            description=\"Input placeholder for person's full name\">{\n            (full_name_prompt) => <input type=\"text\" placeholder={full_name_prompt} autoComplete=\"name\"\n              value={this.state.fn} onChange={this.handleFnChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <FormattedMessage id=\"email_prompt\" defaultMessage=\"Email, e.g. jdoe@example.com\"\n            description=\"Input placeholder for email entry\">{\n            (email_prompt) => <input type=\"email\" placeholder={email_prompt} autoComplete=\"email\"\n              value={this.state.email} onChange={this.handleEmailChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n            description=\"Label for a checkbox\">{\n            (stay_logged_in) => <label htmlFor=\"save-token\">&nbsp;{stay_logged_in}</label>\n          }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_up\" defaultMessage=\"Sign up\"\n              description=\"Create account button [Sign Up]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class EditAccountView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    this.state = {\n      fullName: me.public ? me.public.fn : undefined,\n      avatar: makeImageUrl(me.public ? me.public.photo : null)\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n                description=\"Label for full name editing\" />\n            </label>\n            <div className=\"large\">{this.state.fullName}</div>\n            <div>\n              <label className=\"small\"><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n                description=\"Label for user address (ID)\" /></label>&nbsp;\n              <tt>{this.props.myUserId}</tt>\n            </div>\n          </div>\n          <AvatarUpload\n            avatar={this.state.avatar}\n            readOnly={!this.state.owner}\n            uid={this.props.myUserId}\n            title={this.state.fullName} />\n        </div>\n        <div className=\"panel-form-row\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('general');}}>\n            <i className=\"material-icons\">edit</i>&nbsp;\n            <FormattedMessage id=\"button_edit\" defaultMessage=\"Edit\" description=\"Call to action [Edit]\" />\n          </a>\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('notif');}}>\n            <i className=\"material-icons\">notifications</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_notifications\"\n              defaultMessage=\"Notifications\" description=\"Sidepanel title for AccNotificationsView.\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('security');}}>\n            <i className=\"material-icons\">security</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_security\"\n              defaultMessage=\"Security\" description=\"Sidepanel title for AccSecurityView.\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('support');}}>\n            <i className=\"material-icons\">contact_support</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_support\"\n              defaultMessage=\"Support\" description=\"Sidepanel title for AccSupportView.\" />\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport TagManager from '../widgets/tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, asEmail, asPhone, vcard } from '../lib/utils.js';\n\nexport default class AccGeneralView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    this.state = {\n      fullName: me.public ? me.public.fn : undefined,\n      avatar: makeImageUrl(me.public ? me.public.photo : null),\n      tags: me.tags(),\n      credentials: me.getCredentials() || [],\n      addCredActive: false,\n      addCredInvalid: false,\n      newCred: '',\n      previousOnTags: me.onTagsUpdated\n    };\n\n    this.tnNewTags = this.tnNewTags.bind(this);\n    this.tnCredsUpdated = this.tnCredsUpdated.bind(this);\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleCredChange = this.handleCredChange.bind(this);\n    this.handleCredKeyDown = this.handleCredKeyDown.bind(this);\n    this.handleCredEntered = this.handleCredEntered.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n  }\n\n  componentDidMount() {\n    const me = this.props.tinode.getMeTopic();\n    me.onCredsUpdated = this.tnCredsUpdated;\n    me.onTagsUpdated = this.tnNewTags;\n  }\n\n  componentWillUnmount() {\n    const me = this.props.tinode.getMeTopic();\n    me.onTagsUpdated = this.state.previousOnTags;\n    me.onCredsUpdated = undefined;\n  }\n\n  tnNewTags(tags) {\n    this.setState({tags: tags});\n  }\n\n  tnCredsUpdated(creds) {\n    this.setState({credentials: creds || []});\n  }\n\n  handleFullNameUpdate(fn) {\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\n    if (fn) {\n      this.setState({fullName: fn});\n      this.props.onUpdateAccount(undefined, vcard(fn, null));\n    }\n  }\n\n  handleImageChanged(img) {\n    this.setState({avatar: img});\n    this.props.onUpdateAccount(undefined, vcard(null, img || Tinode.DEL_CHAR));\n  }\n\n  handleCredChange(e) {\n    this.setState({newCred: e.target.value, addCredInvalid: false});\n  }\n\n  handleCredKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({newCred: '', addCredActive: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleCredEntered(e);\n    }\n  }\n\n  handleCredEntered(e) {\n    let value = this.state.newCred.trim();\n    if (!value) {\n      this.setState({addCredActive: false, addCredInvalid: false});\n      return;\n    }\n\n    let val = asPhone(value);\n    let method;\n    if (val) {\n      method = 'tel';\n    } else {\n      val = asEmail(value);\n      if (val) {\n        method = 'email';\n      }\n    }\n    if (method) {\n      this.props.onCredAdd(method, val);\n      this.setState({addCredActive: false, newCred: ''});\n    } else {\n      this.setState({addCredInvalid: true});\n    }\n  }\n\n  handleTagsUpdated(tags) {\n    // Check if tags have actually changed.\n    if (arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      return;\n    }\n    this.props.onUpdateTags(tags);\n  }\n\n  render() {\n    const credentials = [];\n    this.state.credentials.map((cred) => {\n      credentials.push(<div key={cred.meth + \":\" + cred.val + \":\" + cred.done}>{cred.meth}: <tt>{cred.val}</tt>\n        <span > {!cred.done ?\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredConfirm(cred.meth, cred.val);}}>\n              <FormattedMessage id=\"validate_credential_action\" defaultMessage=\"confirm\"\n                description=\"Validate credentail call to action\" />\n            </a>\n          : null} <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredDelete(cred.meth, cred.val);}}><i\n            className=\"material-icons gray\">delete_outline</i></a></span></div>);\n    });\n\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\"><FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n              description=\"Label for full name editing\" /></label>\n            <div><FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n              description=\"Input placeholder for person's full name\">{\n              (full_name_placeholder) => <InPlaceEdit\n                placeholder={full_name_placeholder}\n                value={this.state.fullName}\n                onFinished={this.handleFullNameUpdate} />\n            }</FormattedMessage></div>\n          </div>\n          <AvatarUpload\n            avatar={this.state.avatar}\n            uid={this.props.myUserId}\n            title={this.state.fullName}\n            onImageChanged={this.handleImageChanged}\n            onError={this.props.onError} />\n        </div>\n        <div className=\"hr\" />\n        <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (user discovery)\"\n          description=\"Section title for TagManager\">{\n          (title_tag_manager) => <TagManager\n            title={title_tag_manager}\n            activated={false}\n            tags={this.state.tags}\n            tinode={this.props.tinode}\n            onSubmit={this.handleTagsUpdated} />\n        }</FormattedMessage>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_user_contacts\" defaultMessage=\"Contacts:\"\n            description=\"Label for user contacts\" />\n          </label>\n          <div className=\"quoted\">\n            {credentials}\n            {this.state.addCredActive ?\n              <input type=\"text\" value={this.state.value}\n                className={this.state.addCredInvalid ? 'invalid' : null}\n                placeholder=\"Phone number or email\" required=\"required\" autoFocus\n                onChange={this.handleCredChange} onKeyDown={this.handleCredKeyDown} onBlur={this.handleCredEntered} />\n              : null}\n            <div>\n              <a href=\"#\" onClick={(e) => {e.preventDefault(); this.setState({addCredActive: true});}}>\n                <i className=\"material-icons\">add</i>\n                <FormattedMessage id=\"button_add_another\" defaultMessage=\"Add another\" description=\"Call to action [+ add another]\" />\n              </a></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\n\nexport default class EditAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckboxClick = this.handleCheckboxClick.bind(this);\n  }\n\n  handleCheckboxClick(what, checked) {\n    if (what == 'sound') {\n      this.props.onToggleMessageSounds(checked);\n    } else if (what == 'alert') {\n      this.props.onTogglePushNotifications(checked);\n    } else if (what == 'incognito') {\n      this.props.onToggleIncognitoMode(checked);\n    }\n  }\n\n  render() {\n    return (\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"message-sound\">\n              <FormattedMessage id=\"label_message_sound\" defaultMessage=\"Message sound:\"\n                description=\"Label for message sounds toggle\" />\n            </label>\n            <CheckBox name=\"sound\" id=\"message-sound\"\n              checked={this.props.messageSounds} onChange={this.handleCheckboxClick} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"desktop-alerts\">\n            {this.props.desktopAlertsEnabled ?\n              <FormattedMessage id=\"label_push_notifications\" defaultMessage=\"Notification alerts:\"\n                description=\"Label for push notifications switch\" />\n              :\n              <FormattedMessage id=\"label_push_notifications_disabled\"\n                defaultMessage=\"Notification alerts (requires HTTPS):\"\n                description=\"Label for push notifications switch\" />\n            }\n            </label>\n            <CheckBox name=\"alert\" id=\"desktop-alerts\"\n              checked={this.props.desktopAlerts}\n              onChange={this.props.desktopAlertsEnabled ? this.handleCheckboxClick : null} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"incognito-mode\">\n              <FormattedMessage id=\"label_incognito_mode\" defaultMessage=\"Incognito mode:\"\n                description=\"Label for incognito mode toggle\" />\n            </label>\n            <CheckBox name=\"incognito\" id=\"incognito-mode\"\n              checked={this.props.incognitoMode} onChange={this.handleCheckboxClick} />\n          </div>\n        </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\n\nconst messages = defineMessages({\n  delete_account: {\n    id: 'delete_account',\n    defaultMessage: 'Delete account',\n    description: 'Title for delete account warning'\n  },\n  delete_account_warning: {\n    id: 'delete_account_arning',\n    defaultMessage: 'Are you sure you want to delete your account? It cannot be undone.',\n    description: 'Warning message when deleting an account'\n  }\n});\n\nclass AccSecurityView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    let blockedCount = 0;\n    me.contacts((c) => {\n      if (c.acs && !c.acs.isJoiner()) {\n        blockedCount ++;\n      }\n    });\n    const defacs = me.getDefaultAccess();\n    this.state = {\n      auth: defacs ? defacs.auth : null,\n      anon: defacs ? defacs.anon : null,\n      showPermissionEditorFor: undefined,\n      blockedCount: blockedCount,\n    };\n\n    this.handlePasswordUpdate = this.handlePasswordUpdate.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n  }\n\n  handlePasswordUpdate(pwd) {\n    this.setState({password: pwd});\n    this.props.onUpdateAccount(pwd);\n  }\n\n  handleLaunchPermissionsEditor(which) {\n    this.setState({\n      showPermissionEditorFor: which,\n      editedPermissions: this.state[which]\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handlePermissionsChanged(perm) {\n    let defacs = {};\n    defacs[this.state.showPermissionEditorFor] = perm;\n    this.props.onUpdateAccount(undefined, undefined, defacs);\n\n    let newState = {showPermissionEditorFor: undefined};\n    newState[this.state.showPermissionEditorFor] = perm;\n    this.setState(newState);\n  }\n\n  handleDeleteAccount(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.delete_account), // title\n      formatMessage(messages.delete_account_warning), // content\n      (() => { this.props.onDeleteAccount(); }), // onConfirm\n      null, // use default text \"OK\"\n      true, // Show Reject button\n      null  // use default text \"Cancel\"\n    );\n  }\n\n  render() {\n    return (\n      <React.Fragment>{this.state.showPermissionEditorFor ?\n        <PermissionsEditor\n          mode={this.state.editedPermissions}\n          skip=\"O\"\n          onSubmit={this.handlePermissionsChanged}\n          onCancel={this.handleHidePermissionsEditor} />\n        :\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_password\" defaultMessage=\"Password\"\n                  description=\"Label for password editing\" />\n            </label>\n            <div>\n              <FormattedMessage id=\"password_unchanged_prompt\" defaultMessage=\"Unchanged\"\n                description=\"Message in editor while password is unchanged\">{\n                (password_unchanged) => <InPlaceEdit\n                  placeholder={password_unchanged}\n                  type=\"password\"\n                  onFinished={this.handlePasswordUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <a href=\"#\" className=\"red flat-button\" onClick={(e) => {e.preventDefault(); this.props.onLogout();}}>\n              <i className=\"material-icons\">exit_to_app</i> &nbsp;<FormattedMessage id=\"button_logout\"\n                defaultMessage=\"Logout\" description=\"Button [Logout]\" />\n            </a>\n            <a href=\"#\" className=\"red flat-button\" onClick={(e) => {this.handleDeleteAccount(e);}}>\n              <i className=\"material-icons\">delete</i> &nbsp;<FormattedMessage id=\"button_delete_account\"\n                defaultMessage=\"Delete account\" description=\"Button [Delete account]\" />\n            </a>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <div>\n              <label className=\"small\">\n                <FormattedMessage id=\"label_default_access_mode\" defaultMessage=\"Default access mode:\"\n                description=\"Label for default access mode\" />\n              </label>\n            </div>\n            <div className=\"quoted\">\n              <div>Auth: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>{this.state.auth}</tt></div>\n              <div>Anon: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>{this.state.anon}</tt></div>\n            </div>\n          </div>\n          {this.state.blockedCount > 0 ?\n            <>\n              <div className=\"hr\" />\n              <div className=\"panel-form-row\">\n                <i className=\"material-icons\">block</i>&nbsp;\n                <a href=\"#\" className=\"gray\" onClick={(e) => {e.preventDefault(); this.props.onShowBlocked();}}>\n                  <FormattedMessage id=\"blocked_contacts_link\" defaultMessage=\"Blocked contacts ({count})\"\n                    values={{ count: this.state.blockedCount }} description=\"Blocked contacts link\" />\n                </a>\n              </div>\n            </>\n            : null }\n        </div>\n      }</React.Fragment>\n    );\n  }\n};\n\nexport default injectIntl(AccSecurityView);\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME, LINK_CONTACT_US, LINK_PRIVACY_POLICY, LINK_TERMS_OF_SERVICE } from '../config.js';\n\nexport default class AccSupportView extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          <a href={LINK_CONTACT_US} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">email</i> &nbsp;<FormattedMessage id=\"link_contact_us\"\n              defaultMessage=\"Contact Us\" description=\"Ancor text for contacting us by email\" />\n          </a>\n          <a href={LINK_TERMS_OF_SERVICE} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">description</i> &nbsp;<FormattedMessage id=\"link_terms_of_service\"\n              defaultMessage=\"Terms of Service\" description=\"Ancor text for terms of service link\" />\n          </a>\n          <a href={LINK_PRIVACY_POLICY} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">policy</i> &nbsp;<FormattedMessage id=\"link_privacy_policy\"\n              defaultMessage=\"Privacy Policy\" description=\"Ancor text for privacy policy link\" />\n          </a>\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\"\n              description=\"Label for a client version\" /></label>\n            {APP_NAME}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_sdk\" defaultMessage=\"SDK:\" /></label>\n            {Tinode.getLibrary()}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\"\n              description=\"Label for a server version\" /></label>\n            {this.props.serverVersion}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server_address\" defaultMessage=\"Server address:\" /></label>\n            {this.props.serverAddress}\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","// Login form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\n\nexport default class LoginView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: props.login,\n      password: '',\n      hostName: props.serverAddress,\n      saveToken: LocalStorageUtil.getObject('keep-logged-in')\n    };\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  handleToggleSaveToken() {\n    LocalStorageUtil.setObject('keep-logged-in', !this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onLogin(this.state.login.trim(), this.state.password.trim());\n  }\n\n  render() {\n    var submitClasses = 'blue';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form id=\"login-form\" onSubmit={this.handleSubmit}>\n        <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n          description=\"Placeholer for username/login\">\n        {\n          (login_prompt) => <input type=\"text\" id=\"inputLogin\"\n            placeholder={login_prompt}\n            autoComplete=\"username\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"none\"\n            value={this.state.login}\n            onChange={this.handleLoginChange}\n            required autoFocus />\n        }\n        </FormattedMessage>\n        <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n          description=\"Placeholder/prompt for entering password\">\n        {\n          (password_prompt) => <VisiblePassword type=\"password\" id=\"inputPassword\"\n            placeholder={password_prompt}\n            autoComplete=\"current-password\"\n            value={this.state.password}\n            onChange={this.handlePasswordChange}\n            required={true} />\n        }\n        </FormattedMessage>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <label htmlFor=\"save-token\">&nbsp;\n            <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n              description=\"Label for a checkbox\" />\n          </label>\n          <a href=\"#reset\">\n            <FormattedMessage id=\"forgot_password_link\" defaultMessage=\"Forgot password?\"\n              description=\"Link to Reset password form\" />\n          </a>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_in\" defaultMessage=\"Sign in\"\n              description=\"Button [Sign In]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n/* END Login */\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  invalid_id: {\n    id: 'error_invalid_id',\n    defaultMessage: 'Invalid ID',\n    description: 'Error message'\n  }\n});\n\nclass NewTopicById extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      groupId: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({groupId: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.groupId) {\n      var name = this.state.groupId.trim();\n      if (name.length > 3 && (name.substr(0, 3) == 'usr' || name.substr(0, 3) == 'grp')) {\n        this.props.onSubmit(name);\n      } else {\n        this.props.onError(this.props.intl.formatMessage(messages.invalid_id), 'err');\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"group_user_id_prompt\" defaultMessage=\"Group or User ID\"\n          description=\"Prompt for entering user or group ID\">{\n          (prompt) => <input type=\"text\" placeholder={prompt}\n            value={this.state.groupId} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required autoFocus />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"blue\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_subscribe\" defaultMessage=\"Subscribe\"\n              description=\"Button [Subscribe]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicById);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from './avatar-upload.jsx';\nimport CheckBox from './checkbox.jsx';\nimport TagManager from './tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class NewTopicGroup extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      fn: '', // full/formatted name\n      private: '',\n      imageDataUrl: null,\n      tags: [],\n      isChannel: false\n    };\n\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handlePrivateChange = this.handlePrivateChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleTagsChanged = this.handleTagsChanged.bind(this);\n    this.handleChannelToggle = this.handleChannelToggle.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handlePrivateChange(e) {\n    this.setState({private: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleTagsChanged(tags) {\n    this.setState({tags: tags});\n  }\n\n  handleChannelToggle() {\n    this.setState({isChannel: !this.state.isChannel});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const fn = this.state.fn.trim().substring(0, MAX_TITLE_LENGTH);\n    const comment = this.state.private.trim().substring(0, MAX_TITLE_LENGTH);\n    if (fn) {\n      this.props.onSubmit(fn, this.state.imageDataUrl, comment, this.state.tags, this.state.isChannel);\n    }\n  }\n\n  render() {\n    var submitClasses = 'blue';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n    return (\n      <form className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\" htmlFor=\"new-topic-fn\">\n              <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                description=\"Label for editing topic name\" />\n            </label>\n            <FormattedMessage id=\"topic_name_editing_placeholder\" defaultMessage=\"Freeform name of the group\"\n              description=\"Prompt for entering topic name\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-fn\" placeholder={placeholder}\n                value={this.state.fn} onChange={this.handleFnChange} autoFocus required />\n            }</FormattedMessage>\n            <br />\n            <label className=\"small\" htmlFor=\"new-topic-priv\">\n              <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                description=\"Label for editing 'private'\" />\n            </label>\n            <FormattedMessage id=\"private_editing_placeholder\" defaultMessage=\"Visible to you only\"\n              description=\"Placeholder for editing 'private'\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-priv\" placeholder={placeholder}\n                value={this.state.private} onChange={this.handlePrivateChange} />\n            }</FormattedMessage>\n          </div>\n          <AvatarUpload\n            onError={this.props.onError}\n            onImageChanged={this.handleImageChanged} />\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox checked={this.state.isChannel} onChange={this.handleChannelToggle}/>&nbsp;\n          <label onClick={this.handleChannelToggle}><FormattedMessage id=\"channel_prompt\"\n            defaultMessage=\"This is a channel\"\n            description=\"Checkbox label when creating a channel\" /></label>\n        </div>\n        <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (user discovery)\"\n          description=\"Section title for TagManager\">{\n          (title) => <TagManager\n            tags={this.state.tags}\n            activated={true}\n            onTagsChanged={this.handleTagsChanged}\n            tinode={this.props.tinode}\n            title={title} />\n        }</FormattedMessage>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses}>\n            <FormattedMessage id=\"button_create\" defaultMessage=\"Create\"\n              description=\"Button [Create]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nexport default class SearchContacts extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      edited: false,\n      search: ''\n    };\n\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  componentWillUnmount() {\n    if (this.state.edited) {\n      this.setState({search: '', edited: false});\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n  }\n\n  handleSearchChange(e) {\n    this.setState({search: e.target.value});\n  }\n\n  handleSearch(e) {\n    e.preventDefault();\n    var query = this.state.search.trim();\n    this.setState({edited: (query.length > 0)});\n    this.props.onSearchContacts(query.length > 0 ? query : Tinode.DEL_CHAR);\n  }\n\n  handleClear(e) {\n    e.preventDefault();\n    if (this.state.edited) {\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n    this.setState({search: '', edited: false});\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Enter') {\n      this.handleSearch(e);\n    } else if (e.key === 'Escape') {\n      this.handleClear();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <i className=\"material-icons search\">search</i>\n          <FormattedMessage id=\"search_placeholder\" defaultMessage=\"List like email:alice@example.com, tel:17025550003...\"\n            description=\"Placeholder in contacts search field\">{\n            (search_placeholder) => <input className=\"search\" type=\"text\"\n              placeholder={search_placeholder}\n              value={this.state.search} onChange={this.handleSearchChange}\n              onKeyDown={this.handleKeyDown} required autoFocus />\n          }</FormattedMessage>\n          <a href=\"#\" onClick={this.handleClear}>\n            <i className=\"material-icons\">close</i>\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","// Create new topic and invite users or send an invite.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport ContactList from '../widgets/contact-list.jsx';\nimport NewTopicById from '../widgets/new-topic-by-id.jsx';\nimport NewTopicGroup from '../widgets/new-topic-group.jsx';\nimport SearchContacts from '../widgets/search-contacts.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\nimport { vcard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  search_for_contacts: {\n    id: \"search_for_contacts\",\n    defaultMessage: \"Use search to find contacts\",\n    description: \"Text shown in contacts view when user entered no search query.\"\n  },\n  search_no_results: {\n    id: \"search_no_results\",\n    defaultMessage: \"Search returned no results\",\n    description: \"Text shown in contacts view when query returned no results.\"\n  }\n});\n\nclass NewTopicView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tabSelected: 'p2p',\n      searchQuery: null\n    };\n\n    this.handleTabClick = this.handleTabClick.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleNewGroupSubmit = this.handleNewGroupSubmit.bind(this);\n    this.handleGroupByID = this.handleGroupByID.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.onInitFind();\n  }\n\n  handleTabClick(e) {\n    e.preventDefault();\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'tab', e.currentTarget.dataset.id));\n    this.setState({tabSelected: e.currentTarget.dataset.id});\n  }\n\n  handleSearchContacts(query) {\n    this.props.onSearchContacts(query);\n    this.setState({searchQuery: Tinode.isNullValue(query) ? null : query});\n  }\n\n  handleContactSelected(sel) {\n    if (this.state.tabSelected === 'p2p') {\n      HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n      this.props.onCreateTopic(sel);\n    }\n  }\n\n  handleNewGroupSubmit(name, dataUrl, priv, tags, isChannel) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(undefined, vcard(name, dataUrl), priv, tags, isChannel);\n  }\n\n  handleGroupByID(topicName) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(topicName);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const no_contacts_placeholder = formatMessage(this.state.searchQuery ?\n      messages.search_no_results : messages.search_for_contacts);\n    return (\n      <div className=\"flex-column\">\n        <ul className=\"tabbar\">\n          <li className={this.state.tabSelected === \"p2p\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"p2p\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_find_user\" defaultMessage=\"find\"\n                description=\"Tab title Find\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"grp\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"grp\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_new_group\" defaultMessage=\"new group\"\n                description=\"Tab title New Group\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"byid\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"byid\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_group_by_id\" defaultMessage=\"by id\"\n                description=\"Tab title Find topic by ID\" />\n            </a>\n          </li>\n        </ul>\n        {this.state.tabSelected === 'grp' ?\n          <NewTopicGroup\n            tinode={this.props.tinode}\n            onSubmit={this.handleNewGroupSubmit} /> :\n          this.state.tabSelected === 'byid' ?\n            <NewTopicById\n              onSubmit={this.handleGroupByID}\n              onError={this.props.onError} /> :\n            <div className=\"flex-column\">\n              <SearchContacts\n                type=\"p2p\"\n                onSearchContacts={this.handleSearchContacts} />\n              <ContactList\n                contacts={this.props.searchResults}\n                myUserId={this.props.myUserId}\n                emptyListMessage={no_contacts_placeholder}\n                showOnline={false}\n                showUnread={false}\n                showContextMenu={false}\n                onTopicSelected={this.handleContactSelected} />\n            </div>}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicView);\n","// A password reset form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\n\nexport default class PasswordResetView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n  }\n\n  componentDidMount() {\n    let parsed = HashNavigation.parseUrlHash(window.location.hash);\n    this.setState({token: parsed.params.token, scheme: parsed.params.scheme});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.token) {\n      this.props.onReset(this.state.scheme, this.state.password.trim(), this.state.token);\n    } else {\n      this.props.onRequest('email', this.state.email.trim());\n    }\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  render() {\n    let reset = (this.state.token && this.state.scheme);\n    return (\n      <form id=\"password-reset-form\" onSubmit={this.handleSubmit}>\n        {reset ?\n          <FormattedMessage id=\"new_password_placeholder\" defaultMessage=\"Enter new password\"\n            description=\"Placeholder for entering new password\">{\n            (placeholder) => <VisiblePassword\n              placeholder={placeholder}\n              autoComplete=\"new-password\"\n              value={this.state.password}\n              required={true} autoFocus={true}\n              onChange={this.handlePasswordChange} />\n          }</FormattedMessage>\n          :\n          <>\n            <label htmlFor=\"inputEmail\">\n              <FormattedMessage id=\"label_reset_password\"\n                defaultMessage=\"Send a password reset email:\"\n                description=\"Label for password reset field\" />\n            </label>\n            <FormattedMessage id=\"credential_email_prompt\" defaultMessage=\"Your registration email\"\n              description=\"Placeholder for entering email\">{\n              (placeholder) => <input type=\"email\" id=\"inputEmail\"\n                placeholder={placeholder}\n                autoComplete=\"email\"\n                value={this.state.email}\n                onChange={this.handleEmailChange}\n                required autoFocus />\n            }</FormattedMessage>\n          </>\n        }\n        <div className=\"dialog-buttons\">\n          <button className=\"blue\" type=\"submit\">{reset ?\n            <FormattedMessage id=\"button_reset\" defaultMessage=\"Reset\" description=\"Button [Reset]\" /> :\n            <FormattedMessage id=\"button_send_request\" defaultMessage=\"Send request\"\n              description=\"Button [Send request]\" />\n          }</button>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react';\n\nimport { KNOWN_HOSTS } from '../config.js';\n\n/* Combobox for selecting host name */\n\nexport default class HostSelector extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hostName: props.serverAddress,\n      changed: false\n    };\n\n    this.handleHostNameChange = this.handleHostNameChange.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handleHostNameChange(e) {\n    this.setState({hostName: e.target.value, changed: true});\n  }\n\n  handleEditingFinished() {\n    if (this.state.changed) {\n      this.setState({changed: false});\n      this.props.onServerAddressChange(this.state.hostName.trim());\n    }\n  }\n\n  render() {\n    var hostOptions = [];\n    for (let key in KNOWN_HOSTS) {\n      let item = KNOWN_HOSTS[key];\n      hostOptions.push(\n        <option key={item} value={item} />\n      );\n    }\n    return (\n      <div className=\"panel-form-row\">\n        <input type=\"search\" id=\"host-name\" placeholder={this.props.hostName} list=\"known-hosts\"\n          className=\"quoted\" value={this.state.hostName} onChange={this.handleHostNameChange}\n          onBlur={this.handleEditingFinished} required />\n        <datalist id=\"known-hosts\">\n          {hostOptions}\n        </datalist>\n      </div>\n    );\n  }\n}\n","// Tinode config panel.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport HostSelector from '../widgets/host-selector.jsx';\n\nexport default class SettingsView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transport: props.transport || 'def',\n      serverAddress: props.serverAddress,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleTransportSelected = this.handleTransportSelected.bind(this);\n    this.handleServerAddressChange = this.handleServerAddressChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onUpdate({\n      transport: this.state.transport,\n      serverAddress: this.state.serverAddress\n    });\n  }\n\n  handleTransportSelected(e) {\n    this.setState({transport: e.currentTarget.value});\n  }\n\n  handleServerAddressChange(name) {\n    this.setState({serverAddress: name});\n  }\n\n  render() {\n    const names = {def: \"default\", ws: \"websocket\", lp: \"long polling\"};\n    var transportOptions = [];\n    var instance = this;\n    ['def', 'ws', 'lp'].map(function(item) {\n      var id = 'transport-' + item;\n      var name = names[item];\n      transportOptions.push(\n        <li key={item}>\n          <input type=\"radio\" id={id} name=\"transport-select\" value={item}\n            checked={instance.state.transport === item}\n            onChange={instance.handleTransportSelected} />\n          <label htmlFor={id}>{name}</label>\n        </li>\n      );\n    });\n\n    return (\n      <form id=\"settings-form\" className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_server_to_use\" defaultMessage=\"Server to use:\"\n              description=\"Label for server selector in SettingsView\" />\n          </label>\n        </div>\n        <HostSelector serverAddress={this.state.serverAddress}\n          onServerAddressChange={this.handleServerAddressChange} />\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_wire_transport\" defaultMessage=\"Wire transport:\"\n              description=\"Label for wire transport selection in SettingsView\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ul className=\"quoted\">\n            {transportOptions}\n          </ul>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button type=\"submit\" className=\"blue\">\n            <FormattedMessage id=\"button_update\" defaultMessage=\"Update\"\n              description=\"Button [Update]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// ValidationView: panel for confirming credentials, like email or phone.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  phone: {\n    id: 'phone_dative',\n    defaultMessage: 'phone',\n    description: \"Dative case of 'phone', i.e. 'phone' in 'by phone'\",\n  },\n  email: {\n    id: 'email_dative',\n    defaultMessage: 'email',\n    description: \"Dative case of 'email', i.e. 'email' in 'by email'\",\n  }\n});\n\nclass ValidationView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      code: props.credCode || ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({code: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    } else if (e.key == 'Escape') {\n      this.handleCancel(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.code && this.state.code.trim()) {\n      this.props.onSubmit(this.props.credMethod, this.state.code.trim());\n    }\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel();\n  }\n\n\n  render() {\n    const { formatMessage } = this.props.intl;\n    const methods = {'email': formatMessage(messages.email), 'tel': formatMessage(messages.phone)};\n    let method = methods[this.props.credMethod] || this.props.credMethod;\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\" htmlFor=\"enter-confirmation-code\">\n            <FormattedMessage id=\"enter_confirmation_code_prompt\"\n              defaultMessage=\"Enter confirmation code sent to you by {method}:\"\n              description=\"Request to enter confirmation code\"\n              values={{method: method}} />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"numeric_confirmation_code_prompt\"\n          defaultMessage=\"Numbers only\" description=\"Prompt for numeric conformation code\">{\n          (numbers_only) => <input type=\"text\" id=\"enter-confirmation-code\"\n            placeholder={numbers_only}\n            value={this.state.code} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"blue\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_confirm\" defaultMessage=\"Confirm\" description=\"Button [Confirm]\" />\n          </button>\n          <button className=\"white\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ValidationView);\n","import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport SideNavbar from '../widgets/side-navbar.jsx';\n\nimport ContactsView from './contacts-view.jsx';\nimport CreateAccountView from './create-account-view.jsx';\nimport EditAccountView from './edit-account-view.jsx';\nimport AccGeneralView from './acc-general-view.jsx';\nimport AccNotificationsView from './acc-notifications-view.jsx';\nimport AccSecurityView from './acc-security-view.jsx';\nimport AccSupportView from './acc-support-view.jsx';\nimport LoginView from './login-view.jsx';\nimport NewTopicView from './new-topic-view.jsx';\nimport PasswordResetView from './password-reset-view.jsx';\nimport SettingsView from './settings-view.jsx';\nimport ValidationView from './validation-view.jsx';\n\n// Panel titles for translation.\nconst messages = defineMessages({\n  login: {\n    id: 'sidepanel_title_login',\n    description: 'Sidepanel title for LoginView.',\n    defaultMessage: 'Sign In'\n  },\n  register: {\n    id: 'sidepanel_title_register',\n    description: 'Sidepanel title for CreateAccountView.',\n    defaultMessage: 'Create Account'\n  },\n  settings: {\n    id: 'sidepanel_title_settings',\n    description: 'Sidepanel title for SettingsView.',\n    defaultMessage: 'Settings'\n  },\n  edit: {\n    id: 'sidepanel_title_account_settings',\n    description: 'Sidepanel title for EditAccountView.',\n    defaultMessage: 'Account Settings'\n  },\n  general: {\n    id: 'sidepanel_title_acc_general',\n    description: 'Sidepanel title for AccGeneralView.',\n    defaultMessage: 'General'\n  },\n  security: {\n    id: 'sidepanel_title_acc_security',\n    description: 'Sidepanel title for AccSecurityView.',\n    defaultMessage: 'Security'\n  },\n  notif: {\n    id: 'sidepanel_title_acc_notifications',\n    description: 'Sidepanel title for AccNotificationsView.',\n    defaultMessage: 'Notifications'\n  },\n  support: {\n    id: 'sidepanel_title_acc_support',\n    description: 'Sidepanel title for AccSupportView.',\n    defaultMessage: 'Support'\n  },\n  newtpk: {\n    id: 'sidepanel_title_newtpk',\n    description: 'Sidepanel title for NewTopicView.',\n    defaultMessage: 'Start New Chat'\n  },\n  cred: {\n    id: 'sidepanel_title_cred',\n    description: 'Sidepanel title for ValidationView.',\n    defaultMessage: 'Confirm Credentials'\n  },\n  reset: {\n    id: 'sidepanel_title_reset',\n    description: 'Sidepanel title for PasswordResetView.',\n    defaultMessage: 'Reset Password'\n  },\n  archive: {\n    id: 'sidepanel_title_archive',\n    description: 'Sidepanel title for ContactsView-Archive.',\n    defaultMessage: 'Archived Chats'\n  },\n  blocked: {\n    id: 'sidepanel_title_blocked',\n    description: 'Sidepanel title for ContactsView-Blocked.',\n    defaultMessage: 'Blocked Chats'\n  }\n});\n\nclass SidepanelView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleLoginRequested = this.handleLoginRequested.bind(this);\n    this.handleNewTopic = this.handleNewTopic.bind(this);\n  }\n\n  handleLoginRequested(login, password) {\n    this.props.onLoginRequest(login, password);\n  }\n\n  handleNewTopic() {\n    this.props.onBasicNavigate('newtpk');\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const view = this.props.state || (this.props.myUserId ? 'contacts' : 'login');\n\n    let title, avatar;\n    if (view == 'contacts') {\n      title = this.props.title;\n      avatar = this.props.avatar ? this.props.avatar : true;\n    } else {\n      title = formatMessage(messages[view]);\n      avatar = false;\n    }\n\n    let onCancel;\n    if (['login', 'contacts'].indexOf(view) == -1) {\n      onCancel = this.props.onCancel;\n    }\n\n    return (\n      <div id=\"sidepanel\" className={this.props.hideSelf ? 'nodisplay' : null}>\n        <SideNavbar\n          state={view}\n          title={title}\n          avatar={avatar}\n          myUserId={this.props.myUserId}\n          onSignUp={this.props.onSignUp}\n          onSettings={this.props.onSettings}\n          onNewTopic={this.handleNewTopic}\n          onCancel={onCancel} />\n\n        <ErrorPanel\n          level={this.props.errorLevel}\n          text={this.props.errorText}\n          action={this.props.errorAction}\n          actionText={this.props.errorActionText}\n          onClearError={this.props.onError} />\n\n        <LoadSpinner show={this.props.loadSpinnerVisible} />\n\n        {view === 'login' ?\n          <LoginView\n            login={this.props.login}\n            disabled={this.props.loginDisabled}\n            onLogin={this.handleLoginRequested} /> :\n\n          view === 'register' ?\n          <CreateAccountView\n            onCreateAccount={this.props.onCreateAccount}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'settings' ?\n          <SettingsView\n            transport={this.props.transport}\n            serverAddress={this.props.serverAddress}\n            onCancel={this.props.onCancel}\n            onUpdate={this.props.onGlobalSettings} /> :\n\n          view === 'edit' ?\n          <EditAccountView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            onBasicNavigate={this.props.onBasicNavigate} /> :\n\n          view === 'general' ?\n          <AccGeneralView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            onUpdateAccount={this.props.onUpdateAccount}\n            onUpdateTags={this.props.onUpdateAccountTags}\n            onCredAdd={this.props.onCredAdd}\n            onCredDelete={this.props.onCredDelete}\n            onCredConfirm={this.props.onCredConfirm}\n            onBasicNavigate={this.props.onBasicNavigate}\n            onError={this.props.onError} /> :\n\n          view === 'notif' ?\n          <AccNotificationsView\n            messageSounds={this.props.messageSounds}\n            desktopAlerts={this.props.desktopAlerts}\n            desktopAlertsEnabled={this.props.desktopAlertsEnabled}\n            incognitoMode={this.props.incognitoMode}\n            onTogglePushNotifications={this.props.onTogglePushNotifications}\n            onToggleMessageSounds={this.props.onToggleMessageSounds}\n            onToggleIncognitoMode={this.props.onToggleIncognitoMode} /> :\n\n          view === 'security' ?\n          <AccSecurityView\n            tinode={this.props.tinode}\n            onUpdateAccount={this.props.onUpdateAccount}\n            onLogout={this.props.onLogout}\n            onDeleteAccount={this.props.onDeleteAccount}\n            onShowAlert={this.props.onShowAlert}\n            onShowBlocked={this.props.onShowBlocked} /> :\n\n          view === 'support' ?\n          <AccSupportView\n            serverAddress={this.props.serverAddress}\n            serverVersion={this.props.serverVersion} /> :\n\n          (view === 'contacts' || view == 'archive' || view == 'blocked') ?\n          <ContactsView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            connected={this.props.connected}\n            topicSelected={this.props.topicSelected}\n            archive={view == 'archive'}\n            blocked={view == 'blocked'}\n            chatList={this.props.chatList}\n            showContextMenu={this.props.showContextMenu}\n            onTopicSelected={this.props.onTopicSelected}\n            onShowArchive={this.props.onShowArchive} /> :\n\n          view === 'newtpk' ?\n          <NewTopicView\n            tinode={this.props.tinode}\n            searchResults={this.props.searchResults}\n            onInitFind={this.props.onInitFind}\n            onSearchContacts={this.props.onSearchContacts}\n            onCreateTopic={this.props.onCreateTopic}\n            onError={this.props.onError} /> :\n\n          view === 'cred' ?\n          <ValidationView\n            credCode={this.props.credCode}\n            credMethod={this.props.credMethod}\n            onSubmit={this.props.onValidateCredentials}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'reset' ?\n          <PasswordResetView\n            onRequest={this.props.onPasswordResetRequest}\n            onReset={this.props.onResetPassword} /> :\n          null}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SidepanelView);\n","import { KNOWN_HOSTS, DEFAULT_HOST } from '../config.js';\n\n// Detect server address from the URL\nexport function detectServerAddress() {\n  let host = DEFAULT_HOST;\n  if (typeof window.location == 'object') {\n    if (window.location.protocol == 'file:' || window.location.hostname == 'localhost') {\n      host = KNOWN_HOSTS.local;\n    } else if (window.location.hostname) {\n      host = window.location.hostname + (window.location.port ? ':' + window.location.port : '');\n    }\n  }\n  return host;\n}\n\n// Detect if the page is served over HTTPS.\nexport function isSecureConnection() {\n  if (typeof window.location == 'object') {\n    return window.location.protocol == 'https:';\n  }\n  return false;\n}\n\nexport function isLocalHost() {\n  if (typeof window.location == 'object') {\n    return window.location.hostname == 'localhost';\n  }\n  return false;\n}\n","// The top-level class to hold all functionality together.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport * as firebase from 'firebase/app';\nimport 'firebase/messaging';\n\nimport Tinode from 'tinode-sdk';\n\nimport Alert from '../widgets/alert.jsx';\nimport ContextMenu from '../widgets/context-menu.jsx';\n\nimport InfoView from './info-view.jsx';\nimport MessagesView from './messages-view.jsx';\nimport SidepanelView from './sidepanel-view.jsx';\n\nimport { API_KEY, APP_NAME, DEFAULT_P2P_ACCESS_MODE, LOGGING_ENABLED,\n  MEDIA_BREAKPOINT, RECEIVED_DELAY } from '../config.js';\nimport { base64ReEncode, makeImageUrl } from '../lib/blob-helpers.js';\nimport { detectServerAddress, isLocalHost, isSecureConnection } from '../lib/host-name.js';\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { secondsToTime } from '../lib/strformat.js'\nimport { updateFavicon } from '../lib/utils.js';\n\n// Sound to play on message received.\nconst POP_SOUND = new Audio('audio/msg.mp3');\n\nconst messages = defineMessages({\n  reconnect_countdown: {\n    id: 'reconnect_countdown',\n    defaultMessage: 'Disconnected. Reconnecting in {seconds}…',\n    description: 'Message shown when an app update is available.'\n  },\n  reconnect_now: {\n    id: 'reconnect_now',\n    defaultMessage: 'Try now',\n    description: 'Prompt for reconnecting now'\n  },\n  push_init_failed: {\n    id: 'push_init_failed',\n    defaultMessage: 'Failed to initialize push notifications',\n    description: 'Error message when push notifications have failed to initialize.'\n  },\n  invalid_security_token: {\n    id: 'invalid_security_token',\n    defaultMessage: 'Invalid security token',\n    description: 'Error message when resetting password.'\n  },\n  no_connection: {\n    id: 'no_connection',\n    defaultMessage: 'No connection',\n    description: 'Warning that the user is offline.'\n  },\n  code_doesnot_match: {\n    id: 'code_doesnot_match',\n    defaultMessage: 'Code does not match',\n    description: 'Error message when the credential validation code is incorrect.'\n  },\n  menu_item_info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  }\n});\n\nclass TinodeWeb extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = this.getBlankState();\n\n    this.handleResize = this.handleResize.bind(this);\n    this.handleHashRoute = this.handleHashRoute.bind(this);\n    this.handleOnline = this.handleOnline.bind(this);\n    this.checkForAppUpdate = this.checkForAppUpdate.bind(this);\n    this.handleVisibilityEvent = this.handleVisibilityEvent.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.handleLoginRequest = this.handleLoginRequest.bind(this);\n    this.handleConnected = this.handleConnected.bind(this);\n    this.handleAutoreconnectIteration = this.handleAutoreconnectIteration.bind(this);\n    this.doLogin = this.doLogin.bind(this);\n    this.handleCredentialsRequest = this.handleCredentialsRequest.bind(this);\n    this.handleLoginSuccessful = this.handleLoginSuccessful.bind(this);\n    this.handleDisconnect = this.handleDisconnect.bind(this);\n    this.tnMeMetaDesc = this.tnMeMetaDesc.bind(this);\n    this.tnMeContactUpdate = this.tnMeContactUpdate.bind(this);\n    this.tnMeSubsUpdated = this.tnMeSubsUpdated.bind(this);\n    this.resetContactList = this.resetContactList.bind(this);\n    this.tnData = this.tnData.bind(this);\n    this.tnInitFind = this.tnInitFind.bind(this);\n    this.tnFndSubsUpdated = this.tnFndSubsUpdated.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleTopicSelected = this.handleTopicSelected.bind(this);\n    this.handleHideMessagesView = this.handleHideMessagesView.bind(this);\n    this.handleSendMessage = this.handleSendMessage.bind(this);\n    this.handleNewChatInvitation = this.handleNewChatInvitation.bind(this);\n    this.handleNewAccount = this.handleNewAccount.bind(this);\n    this.handleNewAccountRequest = this.handleNewAccountRequest.bind(this);\n    this.handleUpdateAccountRequest = this.handleUpdateAccountRequest.bind(this);\n    this.handleUpdateAccountTagsRequest = this.handleUpdateAccountTagsRequest.bind(this);\n    this.handleToggleIncognitoMode = this.handleToggleIncognitoMode.bind(this);\n    this.handleSettings = this.handleSettings.bind(this);\n    this.handleGlobalSettings = this.handleGlobalSettings.bind(this);\n    this.handleShowArchive = this.handleShowArchive.bind(this);\n    this.handleShowBlocked = this.handleShowBlocked.bind(this);\n    this.handleToggleMessageSounds = this.handleToggleMessageSounds.bind(this);\n    this.handleCredAdd = this.handleCredAdd.bind(this);\n    this.handleCredDelete = this.handleCredDelete.bind(this);\n    this.handleCredConfirm = this.handleCredConfirm.bind(this);\n    this.initDesktopAlerts = this.initDesktopAlerts.bind(this);\n    this.togglePushToken = this.togglePushToken.bind(this);\n    this.requestPushToken = this.requestPushToken.bind(this);\n    this.handleSidepanelCancel = this.handleSidepanelCancel.bind(this);\n    this.handleStartTopicRequest = this.handleStartTopicRequest.bind(this);\n    this.handleNewTopicCreated = this.handleNewTopicCreated.bind(this);\n    this.handleTopicUpdateRequest = this.handleTopicUpdateRequest.bind(this);\n    this.handleChangePermissions = this.handleChangePermissions.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n    this.handleDeleteMessagesRequest = this.handleDeleteMessagesRequest.bind(this);\n    this.handleLeaveUnsubRequest = this.handleLeaveUnsubRequest.bind(this);\n    this.handleBlockTopicRequest = this.handleBlockTopicRequest.bind(this);\n    this.handleReportTopic = this.handleReportTopic.bind(this);\n    this.handleShowContextMenu = this.handleShowContextMenu.bind(this);\n    this.defaultTopicContextMenu = this.defaultTopicContextMenu.bind(this);\n    this.handleHideContextMenu = this.handleHideContextMenu.bind(this);\n    this.handleShowAlert = this.handleShowAlert.bind(this);\n    this.handleShowInfoView = this.handleShowInfoView.bind(this);\n    this.handleHideInfoView = this.handleHideInfoView.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleValidateCredentialsRequest = this.handleValidateCredentialsRequest.bind(this);\n    this.handlePasswordResetRequest = this.handlePasswordResetRequest.bind(this);\n    this.handleResetPassword = this.handleResetPassword.bind(this);\n    this.handleContextMenuAction = this.handleContextMenuAction.bind(this);\n  }\n\n  getBlankState() {\n    const settings = LocalStorageUtil.getObject('settings') || {};\n\n    return {\n      connected: false,\n      // Connected and subscribed to 'me'\n      ready: false,\n      // Try to re-login on new connection.\n      autoLogin: false,\n      transport: settings.transport || null,\n      serverAddress: settings.serverAddress || detectServerAddress(),\n      serverVersion: \"no connection\",\n      // \"On\" is the default, so saving the \"off\" state.\n      messageSounds: !settings.messageSoundsOff,\n      incognitoMode: false,\n      desktopAlerts: settings.desktopAlerts,\n      desktopAlertsEnabled: (isSecureConnection() || isLocalHost()) &&\n        (typeof firebase != 'undefined') && (typeof navigator != 'undefined') &&\n        (typeof FIREBASE_INIT != 'undefined'),\n      firebaseToken: LocalStorageUtil.getObject('firebase-token'),\n\n      applicationVisible: !document.hidden,\n\n      errorText: '',\n      errorLevel: null,\n      errorAction: undefined,\n      errorActionText: null,\n\n      sidePanelSelected: 'login',\n      sidePanelTitle: null,\n      sidePanelAvatar: null,\n      loadSpinnerVisible: false,\n\n      login: '',\n      password: '',\n      myUserId: null,\n      liveConnection: navigator.onLine,\n      topicSelected: '',\n      topicSelectedOnline: false,\n      topicSelectedAcs: null,\n      newTopicParams: null,\n      loginDisabled: false,\n      displayMobile: (window.innerWidth <= MEDIA_BREAKPOINT),\n      showInfoPanel: false,\n      mobilePanel: 'sidepanel',\n\n      contextMenuVisible: false,\n      contextMenuBounds: null,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuItems: [],\n\n      // Modal alert dialog.\n      alertVisible: false,\n      alertParams: {},\n\n      // Chats as shown in the ContactsView\n      chatList: [],\n      // Contacts returned by a search query.\n      searchResults: [],\n      // Merged results of a search query and p2p chats.\n      searchableContacts: [],\n      credMethod: undefined,\n      credCode: undefined\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    window.addEventListener('online', (e) => { this.handleOnline(true); });\n    window.addEventListener('offline', (e) => { this.handleOnline(false); });\n    window.addEventListener('hashchange', this.handleHashRoute);\n    // Window/tab visible or invisible for pausing timers.\n    document.addEventListener('visibilitychange', this.handleVisibilityEvent);\n\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n\n    const keepLoggedIn = LocalStorageUtil.getObject('keep-logged-in');\n\n    const {formatMessage, locale} = this.props.intl;\n    new Promise((resolve, reject) => {\n      this.tinode = TinodeWeb.tnSetup(this.state.serverAddress, this.state.transport, locale, keepLoggedIn, resolve);\n      this.tinode.onConnect = this.handleConnected;\n      this.tinode.onDisconnect = this.handleDisconnect;\n      this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n    }).then(() => {\n      // Initialize desktop alerts.\n      if (this.state.desktopAlertsEnabled) {\n        try {\n          this.fbPush = firebase.initializeApp(FIREBASE_INIT, APP_NAME).messaging();\n          this.fbPush.usePublicVapidKey(FIREBASE_INIT.messagingVapidKey);\n\n          navigator.serviceWorker.register('/service-worker.js').then((reg) => {\n            this.checkForAppUpdate(reg);\n            this.fbPush.useServiceWorker(reg);\n            reg.active.postMessage(JSON.stringify({locale: locale}));\n            this.initDesktopAlerts();\n            if (this.state.desktopAlerts) {\n              if (!this.state.firebaseToken) {\n                this.togglePushToken(true);\n              } else {\n                this.tinode.setDeviceToken(this.state.firebaseToken);\n              }\n            }\n          }).catch((err) => {\n            // registration failed :(\n            console.log(\"Failed to register service worker:\", err);\n          });\n        } catch (err) {\n          this.handleError(formatMessage(messages.push_init_failed), 'err');\n          console.log(\"Failed to initialize push notifications\", err);\n          this.setState({desktopAlertsEnabled: false});\n        }\n      }\n\n      const token = keepLoggedIn ? LocalStorageUtil.getObject('auth-token') : undefined;\n\n      const parsedNav = HashNavigation.parseUrlHash(window.location.hash);\n      if (token) {\n        this.setState({autoLogin: true});\n\n        // When reading from storage, date is returned as string.\n        token.expires = new Date(token.expires);\n        this.tinode.setAuthToken(token);\n        this.tinode.connect().catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n        delete parsedNav.params.info;\n        delete parsedNav.params.tab;\n        parsedNav.path[0] = '';\n        HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsedNav.path, parsedNav.params));\n      } else if (!parsedNav.params.token) {\n        HashNavigation.navigateTo('');\n      }\n\n      this.readTimer = null;\n      this.readTimerCallback = null;\n\n      this.handleHashRoute();\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n    window.removeEventListener('hashchange', this.handleHashRoute);\n    document.removeEventListener('visibilitychange', this.handleVisibilityEvent);\n  }\n\n  // Setup transport (usually websocket) and server address. This will terminate connection with the server.\n  static tnSetup(serverAddress, transport, locale, persistentCache, onSetupCompleted) {\n    const tinode = new Tinode({appName: APP_NAME, host: serverAddress, apiKey: API_KEY, transport: transport,\n      secure: isSecureConnection(), persist: persistentCache}, onSetupCompleted);\n    tinode.setHumanLanguage(locale);\n    tinode.enableLogging(LOGGING_ENABLED, true);\n    return tinode;\n  }\n\n  handleResize() {\n    const mobile = document.documentElement.clientWidth <= MEDIA_BREAKPOINT;\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n    if (this.state.displayMobile != mobile) {\n      this.setState({displayMobile: mobile});\n    }\n  }\n\n  // Check if a newer version of TinodeWeb app is available at the server.\n  checkForAppUpdate(reg) {\n    reg.onupdatefound = () => {\n      const installingWorker = reg.installing;\n      installingWorker.onstatechange = () => {\n        if (installingWorker.state == 'installed' && navigator.serviceWorker.controller) {\n          const msg = <>\n            <FormattedMessage id=\"update_available\"\n              defaultMessage=\"Update available.\"\n              description=\"Message shown when an app update is available.\" /> <a href=\"\">\n              <FormattedMessage id=\"reload_update\"\n                defaultMessage=\"Reload\"\n                description=\"Call to action to reload application when update is available.\" />\n            </a>.</>;\n          this.handleError(msg, 'info');\n        }\n      }\n    }\n  }\n\n  // Handle for hashchange event: display appropriate panels.\n  handleHashRoute() {\n    const hash = HashNavigation.parseUrlHash(window.location.hash);\n    if (hash.path && hash.path.length > 0) {\n      // Left-side panel selector.\n      if (['register','settings','edit','notif','security','support','general',\n          'cred','reset','newtpk','archive','blocked','contacts',''].includes(hash.path[0])) {\n        this.setState({sidePanelSelected: hash.path[0]});\n      } else {\n        console.log(\"Unknown sidepanel view\", hash.path[0]);\n      }\n\n      // Topic for MessagesView selector.\n      if (hash.path.length > 1 && hash.path[1] != this.state.topicSelected) {\n        this.setState({\n          topicSelected: Tinode.topicType(hash.path[1]) ? hash.path[1] : null\n        });\n      }\n    } else {\n      // Empty hashpath\n      this.setState({sidePanelSelected: ''});\n    }\n\n    // Save validation credentials, if available.\n    if (hash.params.method) {\n      this.setState({ credMethod: hash.params.method });\n    }\n    if (hash.params.code) {\n      this.setState({ credCode: hash.params.code });\n    }\n\n    // Additional parameters of panels.\n    this.setState({\n      showInfoPanel: hash.params.info,\n      newTopicTabSelected: hash.params.tab\n    });\n  }\n\n  handleOnline(online) {\n    if (online) {\n      this.handleError();\n    } else {\n      this.handleError(this.props.intl.formatMessage(messages.no_connection), 'warn');\n    }\n    this.setState({liveConnection: online});\n  }\n\n  handleVisibilityEvent() {\n    this.setState({applicationVisible: !document.hidden});\n  }\n\n  handleError(err, level, action, actionText) {\n    this.setState({errorText: err, errorLevel: level, errorAction: action, errorActionText: actionText});\n  }\n\n  // User clicked Login button in the side panel.\n  handleLoginRequest(login, password) {\n    this.setState({\n      loginDisabled: true,\n      login: login,\n      password: password,\n      loadSpinnerVisible: true,\n      autoLogin: true\n    });\n    this.handleError('', null);\n\n    if (this.tinode.isConnected()) {\n      this.doLogin(login, password, {meth: this.state.credMethod, resp: this.state.credCode});\n    } else {\n      this.tinode.connect().catch((err) => {\n        // Socket error\n        this.setState({loginDisabled: false, autoLogin: false, loadSpinnerVisible: false});\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // Connection succeeded.\n  handleConnected() {\n    const params = this.tinode.getServerInfo();\n    this.setState({\n      serverVersion: params.ver + ' ' + (params.build ? params.build : 'none')\n    });\n\n    if (this.state.autoLogin) {\n      this.doLogin(this.state.login, this.state.password, {meth: this.state.credMethod, resp: this.state.credCode});\n    }\n  }\n\n  // Called for each auto-reconnect iteration.\n  handleAutoreconnectIteration(sec, prom) {\n    clearInterval(this.reconnectCountdown);\n\n    if (sec < 0) {\n      // Clear error\n      this.handleError();\n      return;\n    }\n\n    if (prom) {\n      // Reconnecting now\n      prom.then(() => {\n        // Reconnected: clear error\n        this.handleError();\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n      return;\n    }\n\n    const {formatMessage} = this.props.intl;\n    let count = sec / 1000;\n    count = count | count;\n    this.reconnectCountdown = setInterval(() => {\n      const timeLeft = (count > 99) ? secondsToTime(count) : count;\n      this.handleError(\n        formatMessage(messages.reconnect_countdown, {seconds: timeLeft}),\n        'warn',\n        () => {\n          clearInterval(this.reconnectCountdown);\n          this.tinode.reconnect();\n        },\n        formatMessage(messages.reconnect_now)\n      );\n      count -= 1;\n    }, 1000);\n  }\n\n  // Connection lost\n  handleDisconnect(err) {\n    this.setState({\n      connected: false,\n      ready: false,\n      topicSelectedOnline: false,\n      errorText: err && err.message ? err.message : \"Disconnected\",\n      errorLevel: err && err.message ? 'err' : 'warn',\n      loginDisabled: false,\n      contextMenuVisible: false,\n      serverVersion: \"no connection\"\n    });\n  }\n\n  doLogin(login, password, cred) {\n    if (this.tinode.isAuthenticated()) {\n      // Already logged in. Go to default screen.\n      HashNavigation.navigateTo('');\n      return;\n    }\n    // Sanitize and package credentail.\n    cred = Tinode.credential(cred);\n    // Try to login with login/password. If they are not available, try token. If no token, ask for login/password.\n    let promise = null;\n    const token = this.tinode.getAuthToken();\n    if (login && password) {\n      this.setState({password: null});\n      promise = this.tinode.loginBasic(login, password, cred);\n    } else if (token) {\n      promise = this.tinode.loginToken(token.token, cred);\n    }\n\n    if (promise) {\n      promise.then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text === 'validate credentials') {\n          this.setState({loadSpinnerVisible: false});\n          if (cred) {\n            this.handleError(this.props.intl.formatMessage(messages.code_doesnot_match), 'warn');\n          }\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful();\n        }\n      }).catch((err) => {\n        // Login failed, report error.\n        this.setState({\n          loginDisabled: false,\n          credMethod: undefined,\n          credCode: undefined,\n          loadSpinnerVisible: false,\n          autoLogin: false\n        });\n        this.handleError(err.message, 'err');\n        localStorage.removeItem('auth-token');\n        HashNavigation.navigateTo('');\n      });\n    } else {\n      // No login credentials provided.\n      // Make sure we are on the login page.\n      HashNavigation.navigateTo('');\n      this.setState({loginDisabled: false});\n    }\n  }\n\n  handleCredentialsRequest(params) {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    parsed.path[0] = 'cred';\n    parsed.params['method'] = params.cred[0];\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n  }\n\n  handleLoginSuccessful() {\n    this.handleError();\n\n    // Refresh authentication token.\n    if (LocalStorageUtil.getObject('keep-logged-in')) {\n      LocalStorageUtil.setObject('auth-token', this.tinode.getAuthToken());\n    }\n    // Logged in fine, subscribe to 'me' attaching callbacks from the contacts view.\n    const me = this.tinode.getMeTopic();\n    me.onMetaDesc = this.tnMeMetaDesc;\n    me.onContactUpdate = this.tnMeContactUpdate;\n    me.onSubsUpdated = this.tnMeSubsUpdated;\n    this.setState({\n      connected: true,\n      credMethod: undefined,\n      credCode: undefined,\n      myUserId: this.tinode.getCurrentUserID(),\n      autoLogin: true,\n    });\n    // Subscribe, fetch topic desc, the list of subscriptions. Messages are not fetched.\n    me.subscribe(\n      me.startMetaQuery().\n        withLaterSub().\n        withDesc().\n        withTags().\n        withCred().\n        build()\n      ).catch((err) => {\n        this.tinode.disconnect();\n        localStorage.removeItem('auth-token');\n        this.handleError(err.message, 'err');\n        HashNavigation.navigateTo('');\n      }).finally(() => {\n        this.setState({loadSpinnerVisible: false});\n      });\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, 'contacts'));\n  }\n\n  tnMeMetaDesc(desc) {\n    if (desc) {\n      if (desc.public) {\n        this.setState({\n          sidePanelTitle: desc.public.fn,\n          sidePanelAvatar: makeImageUrl(desc.public.photo)\n        });\n      }\n      if (desc.acs) {\n        this.setState({\n          incognitoMode: !desc.acs.isPresencer()\n        });\n      }\n    }\n  }\n\n  // Reactions to updates to the contact list.\n  tnMeContactUpdate(what, cont) {\n    if (what == 'on' || what == 'off') {\n      this.resetContactList();\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedOnline: (what == 'on')});\n      }\n    } else if (what == 'read') {\n      this.resetContactList();\n    } else if (what == 'msg') {\n      // Check if the topic is archived. If so, don't play a sound.\n      const topic = this.tinode.getTopic(cont.topic);\n      const archived = topic && topic.isArchived();\n\n      // New message received. Maybe the message is from the current user, then unread is 0.\n      if (cont.unread > 0 && this.state.messageSounds && !archived) {\n        // Skip update if the topic is currently open, otherwise the badge will annoyingly flash.\n        if (document.hidden || this.state.topicSelected != cont.topic) {\n          POP_SOUND.play();\n        }\n      }\n      // Reorder contact list to use possibly updated 'touched'.\n      this.resetContactList();\n    } else if (what == 'recv') {\n      // Explicitly ignoring \"recv\" -- it causes no visible updates to contact list.\n    } else if (what == 'gone' || what == 'unsub') {\n      // Topic deleted or user unsubscribed. Remove topic from view.\n      // If the currently selected topic is gone, clear the selection.\n      if (this.state.topicSelected == cont.topic) {\n        this.handleTopicSelected(null);\n      }\n      // Redraw without the deleted topic.\n      this.resetContactList();\n    } else if (what == 'acs') {\n      // Permissions changed. If it's for the currently selected topic,\n      // update the views.\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedAcs: cont.acs});\n      }\n    } else if (what == 'del') {\n      // TODO: messages deleted (hard or soft) -- update pill counter.\n    } else if (what == 'upd') {\n      // upd - handled by the SDK. Explicitly ignoring here.\n    } else {\n      // TODO(gene): handle other types of notifications:\n      // * ua -- user agent changes (maybe display a pictogram for mobile/desktop).\n      console.log(\"Unsupported (yet) presence update:\" + what + \" in: \" + cont.topic);\n    }\n  }\n\n  tnMeSubsUpdated(unused) {\n    this.resetContactList();\n  }\n\n  // Merge search results and contact list to create a single flat\n  // list of known contacts for GroupManager to use.\n  static prepareSearchableContacts(chatList, foundContacts) {\n    const merged = {};\n\n    // For chatList topics merge only p2p topics and convert them to the\n    // same format as foundContacts.\n    for (const c of chatList) {\n      if (Tinode.isP2PTopicName(c.topic)) {\n          merged[c.topic] = {\n            user: c.topic,\n            updated: c.updated,\n            public: c.public,\n            private: c.private,\n            acs: c.acs\n          };\n      }\n    }\n\n    // Add all foundCountacts if they have not been added already.\n    for (const c of foundContacts) {\n      if (!merged[c.user]) {\n        merged[c.user] = c;\n      }\n    }\n\n    return Object.values(merged);\n  }\n\n  resetContactList() {\n    const newState = {\n      chatList: []\n    };\n\n    if (!this.state.ready) {\n      newState.ready = true;\n    }\n\n    this.tinode.getMeTopic().contacts((c) => {\n      newState.chatList.push(c);\n      if (this.state.topicSelected == c.topic) {\n        newState.topicSelectedOnline = c.online;\n        newState.topicSelectedAcs = c.acs;\n      }\n    });\n    // Merge search results and chat list.\n    newState.searchableContacts = TinodeWeb.prepareSearchableContacts(newState.chatList, this.state.searchResults);\n    this.setState(newState);\n  }\n\n  // Sending \"received\" notifications\n  tnData(data) {\n    const topic = this.tinode.getTopic(data.topic);\n    if (topic.msgStatus(data, true) >= Tinode.MESSAGE_STATUS_SENT && data.from != this.state.myUserId) {\n      clearTimeout(this.receivedTimer);\n      this.receivedTimer = setTimeout(() => {\n        this.receivedTimer = undefined;\n        topic.noteRecv(data.seq);\n      }, RECEIVED_DELAY);\n    }\n  }\n\n  /* Fnd topic: find contacts by tokens */\n  tnInitFind() {\n    const fnd = this.tinode.getFndTopic();\n    fnd.onSubsUpdated = this.tnFndSubsUpdated;\n    if (fnd.isSubscribed()) {\n      this.tnFndSubsUpdated();\n    } else {\n      fnd.subscribe(fnd.startMetaQuery().withSub().build()).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  tnFndSubsUpdated() {\n    const foundContacts = [];\n    // Don't attempt to create P2P topics which already exist. Server will reject the duplicates.\n    this.tinode.getFndTopic().contacts((s) => {\n      foundContacts.push(s);\n    });\n    this.setState({\n      searchResults: foundContacts,\n      searchableContacts: TinodeWeb.prepareSearchableContacts(this.state.chatList, foundContacts)\n    });\n  }\n\n  /** Called when the user enters a contact into the contact search field in the NewAccount panel\n    @param query {Array} is an array of contacts to search for\n   */\n  handleSearchContacts(query) {\n    const fnd = this.tinode.getFndTopic();\n    fnd.setMeta({desc: {public: query}}).then((ctrl) => {\n      return fnd.getMeta(fnd.startMetaQuery().withSub().build());\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  // User clicked on a contact in the side panel or deleted a contact.\n  handleTopicSelected(topicName) {\n    // Clear newTopicParams after use.\n    if (this.state.newTopicParams && this.state.newTopicParams._topicName != topicName) {\n      this.setState({\n        newTopicParams: null\n      });\n    }\n\n    if (topicName) {\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'topic-view',\n        showInfoPanel: false\n      });\n      // Different contact selected.\n      if (this.state.topicSelected != topicName) {\n        this.setState({\n          topicSelectedOnline: this.tinode.isTopicOnline(topicName),\n          topicSelectedAcs: this.tinode.getTopicAccessMode(topicName)\n        });\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', topicName));\n      }\n    } else {\n      // Currently selected contact deleted\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'sidepanel',\n        topicSelectedOnline: false,\n        topicSelectedAcs: null,\n        showInfoPanel: false\n      });\n\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic('', null));\n    }\n  }\n\n  // In mobile view user requested to show sidepanel\n  handleHideMessagesView() {\n    this.setState({\n      mobilePanel: 'sidepanel'\n    });\n    HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, null));\n  }\n\n  // User is sending a message, either plain text or a drafty object, possibly\n  // with attachments.\n  //  - msg - Drafty message with content\n  //  - promise - Promise to be resolved when the upload is completed\n  //  - uploader - for tracking progress\n  handleSendMessage(msg, promise, uploader) {\n    const topic = this.tinode.getTopic(this.state.topicSelected);\n\n    msg = topic.createMessage(msg, false);\n    // The uploader is used to show progress.\n    msg._uploader = uploader;\n\n    if (!topic.isSubscribed()) {\n      if (!promise) {\n        promise = Promise.resolve();\n      }\n      promise = promise.then(() => { return topic.subscribe(); });\n    }\n\n    if (promise) {\n      promise = promise.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n\n    topic.publishDraft(msg, promise)\n      .then((ctrl) => {\n        if (topic.isArchived()) {\n          return topic.archive(false);\n        }\n      })\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleNewChatInvitation(topicName, action) {\n    const topic = this.tinode.getTopic(topicName);\n    let response = null;\n    switch (action) {\n      case 'accept':\n        // Accept given permissions.\n        const mode = topic.getAccessMode().getGiven();\n        response = topic.setMeta({sub: {mode: mode}});\n        if (topic.isP2PType()) {\n          // For P2P topics change 'given' permission of the peer too.\n          // In p2p topics the other user has the same name as the topic.\n          response = response.then((ctrl) => {\n            topic.setMeta({sub: {user: topicName, mode: mode}});\n          });\n        }\n        break;\n      case 'delete':\n        // Ignore invitation by deleting it.\n        response = topic.delTopic(true);\n        break;\n      case 'block':\n        // Ban the topic making futher invites impossible.\n        // Just self-ban.\n        const am = topic.getAccessMode().updateWant('-JP').getWant();\n        response = topic.setMeta({sub: {mode: am}}).then((ctrl) => {\n          return this.handleTopicSelected(null);\n        });\n        break;\n      default:\n        console.log(\"Unknown invitation action\", '\"' + action + '\"\"');\n    }\n\n    if (response != null) {\n      response.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // User chose a Sign Up menu item.\n  handleNewAccount() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, 'register'));\n  }\n\n  // Actual registration of a new account.\n  handleNewAccountRequest(login_, password_, public_, cred_, tags_) {\n    // Clear old error, if any.\n    this.handleError();\n\n    this.tinode.connect(this.state.serverAddress)\n      .then(() => {\n        return this.tinode.createAccountBasic(login_, password_,\n          {public: public_, tags: tags_, cred: Tinode.credential(cred_)});\n      }).then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text == 'validate credentials') {\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful(this);\n        }\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleUpdateAccountRequest(password, pub, defacs) {\n    this.handleError();\n\n    if (pub || defacs) {\n      const params = {};\n      if (pub) {\n        params.public = pub;\n      }\n      if (defacs) {\n        params.defacs = defacs;\n      }\n      this.tinode.getMeTopic().setMeta({desc: params}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n    if (password) {\n      this.tinode.updateAccountBasic(null, this.tinode.getCurrentLogin(), password).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleToggleIncognitoMode(on) {\n    const me = this.tinode.getMeTopic();\n    const am = me.getAccessMode().updateWant(on ? '-P' : '+P').getWant();\n    me.setMeta({sub: {mode: am}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleUpdateAccountTagsRequest(tags) {\n    this.tinode.getMeTopic().setMeta({tags: tags})\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  // User chose Settings menu item.\n  handleSettings() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'edit' : 'settings'));\n  }\n\n  // User updated global parameters.\n  handleGlobalSettings(settings) {\n    const serverAddress = settings.serverAddress || this.state.serverAddress;\n    const transport = settings.transport || this.state.transport;\n    if (this.tinode) {\n      this.tinode.clearStorage();\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.tinode = TinodeWeb.tnSetup(serverAddress, transport, this.props.intl.locale,\n      LocalStorageUtil.getObject('keep-logged-in'));\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n\n    this.setState({\n      serverAddress: serverAddress,\n      transport: transport\n    });\n    LocalStorageUtil.setObject('settings', {\n      serverAddress: serverAddress,\n      transport: transport\n    });\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, ''));\n  }\n\n  // User chose 'Archived chats'.\n  handleShowArchive() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'archive' : ''));\n  }\n\n  // User viewes 'Blocked chats'.\n  handleShowBlocked() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'blocked' : ''));\n  }\n\n  // Initialize desktop alerts = push notifications.\n  initDesktopAlerts() {\n    // Google could not be bothered to mention that\n    // onTokenRefresh is never called.\n    this.fbPush.onTokenRefresh(() => {\n      this.requestPushToken();\n    });\n\n    // TODO: add handler for FCM topic pushes (pushes for channels).\n    // They have to be handled even when the app is in the foreground.\n    this.fbPush.onMessage((payload) => {\n      console.log(\"got fg push message\", payload.data);\n    });\n  }\n\n  togglePushToken(enabled) {\n    if (enabled) {\n      if (!this.state.firebaseToken) {\n        this.fbPush.requestPermission().then(() => {\n          this.requestPushToken();\n        }).catch((err) => {\n          this.handleError(err.message, 'err');\n          this.setState({desktopAlerts: false, firebaseToken: null});\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n          console.log(\"Failed to get permission to notify.\", err);\n        });\n      } else {\n        this.setState({desktopAlerts: true});\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n      }\n    } else if (this.state.firebaseToken) {\n      this.fbPush.deleteToken(this.state.firebaseToken).catch((err) => {\n        console.log(\"Unable to delete token.\", err);\n      }).finally(() => {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        localStorage.removeItem('firebase-token');\n        this.setState({desktopAlerts: false, firebaseToken: null});\n        // Inform the server that the token was deleted.\n        this.tinode.setDeviceToken(null);\n      });\n    } else {\n      this.setState({desktopAlerts: false, firebaseToken: null});\n      LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n    }\n  }\n\n  requestPushToken() {\n    this.fbPush.getToken().then((refreshedToken) => {\n      if (refreshedToken != this.state.firebaseToken) {\n        this.tinode.setDeviceToken(refreshedToken);\n        LocalStorageUtil.setObject('firebase-token', refreshedToken);\n      }\n      this.setState({firebaseToken: refreshedToken, desktopAlerts: true});\n      LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n      console.log(\"Failed to retrieve firebase token\", err);\n    });\n  }\n\n  handleToggleMessageSounds(enabled) {\n    this.setState({messageSounds: enabled});\n    LocalStorageUtil.updateObject('settings', {\n      messageSoundsOff: !enabled\n    });\n  }\n\n  handleCredAdd(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.setMeta({cred: {meth: method, val: value}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredDelete(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.delCredential(method, value).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredConfirm(method, response) {\n    this.handleCredentialsRequest({cred: [method]});\n  }\n\n  // User clicked Cancel button in Setting or Sign Up panel.\n  handleSidepanelCancel() {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    let path = '';\n    if (['security','support','general','notif'].includes(parsed.path[0])) {\n      path = 'edit';\n    } else if ('blocked' == parsed.path[0]) {\n      path = 'security';\n    } else if (this.state.myUserId) {\n      path = 'contacts';\n    }\n    parsed.path[0] = path;\n    if (parsed.params) {\n      delete parsed.params.code;\n      delete parsed.params.method;\n      delete parsed.params.tab;\n    }\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n    this.setState({errorText: '', errorLevel: null});\n  }\n\n  // Basic nagigator by hash value. No need to bind to this.\n  basicNavigator(hash) {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, hash));\n  }\n\n  // Request to start a topic, new or selected from search results, or \"by ID\".\n  handleStartTopicRequest(topicName, pub, priv, tags, isChannel) {\n    // Check if topic is indeed new. If not, launch it.\n    if (topicName && this.tinode.isTopicCached(topicName)) {\n      this.handleTopicSelected(topicName);\n      return;\n    }\n\n    const params = {};\n    if (Tinode.isP2PTopicName(topicName)) {\n      // Because we are initialing the subscription, set 'want' to all permissions.\n      params.sub = {mode: DEFAULT_P2P_ACCESS_MODE};\n      // Give the other user all permissions too.\n      params.desc = {defacs: {auth: DEFAULT_P2P_ACCESS_MODE}};\n    } else {\n      topicName = topicName || this.tinode.newGroupTopicName(isChannel);\n      params.desc = {public: pub, private: {comment: priv}};\n      params.tags = tags;\n    }\n    params._topicName = topicName;\n    this.setState({newTopicParams: params}, () => {this.handleTopicSelected(topicName)});\n  }\n\n  // New topic was creted, here is the new topic name.\n  handleNewTopicCreated(oldName, newName) {\n    if (this.state.topicSelected == oldName && oldName != newName) {\n      // If the current URl contains the old topic name, replace it with new.\n      // Update the name of the selected topic first so the navigator doen't clear\n      // the state.\n      this.setState({topicSelected: newName}, () => {\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', newName));\n      });\n    }\n  }\n\n  handleTopicUpdateRequest(topicName, pub, priv, permissions) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const params = {};\n      if (pub) {\n        params.public = pub;\n      }\n      if (priv) {\n        params.private = (priv === Tinode.DEL_CHAR) ?\n          Tinode.DEL_CHAR : {comment: priv};\n      }\n      if (permissions) {\n        params.defacs = permissions;\n      }\n      topic.setMeta({desc: params}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleChangePermissions(topicName, mode, uid) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const am = topic.getAccessMode();\n      if (uid) {\n        am.updateGiven(mode);\n        mode = am.getGiven();\n      } else {\n        am.updateWant(mode);\n        mode = am.getWant();\n      }\n      topic.setMeta({sub: {user: uid, mode: mode}}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleTagsUpdated(topicName, tags) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      topic.setMeta({tags: tags}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleLogout() {\n    updateFavicon(0);\n\n    // Remove stored data.\n    localStorage.removeItem('auth-token');\n    localStorage.removeItem('firebase-token');\n    localStorage.removeItem('settings');\n    if (this.state.firebaseToken) {\n      this.fbPush.deleteToken(this.state.firebaseToken)\n    }\n\n    if (this.tinode) {\n      this.tinode.clearStorage();\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.setState(this.getBlankState());\n\n    this.tinode = TinodeWeb.tnSetup(this.state.serverAddress,\n      this.state.transport, this.props.intl.locale, LocalStorageUtil.getObject('keep-logged-in'));\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    HashNavigation.navigateTo('');\n  }\n\n  handleDeleteAccount() {\n    this.tinode.delCurrentUser(true).then((ctrl) => {\n      this.handleLogout();\n    });\n  }\n\n  handleDeleteMessagesRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Request hard-delete all messages.\n    topic.delMessagesAll(true).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleLeaveUnsubRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.leave(true).then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleBlockTopicRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleReportTopic(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Publish spam report.\n    this.tinode.publish(Tinode.TOPIC_SYS, Tinode.Drafty.attachJSON(null, {\n      'action': 'report',\n      'target': topicName\n    }));\n\n    // Remove J and P permissions.\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleShowContextMenu(params, menuItems) {\n    this.setState({\n      contextMenuVisible: true,\n      contextMenuClickAt: {x: params.x, y: params.y},\n      contextMenuParams: params,\n      contextMenuItems: menuItems || this.defaultTopicContextMenu(params.topicName),\n      contextMenuBounds: ReactDOM.findDOMNode(this).getBoundingClientRect()\n    });\n  }\n\n  defaultTopicContextMenu(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n\n    let muted = false, blocked = false, self_blocked = false, subscribed = false, deleter = false, archived = false;\n    if (topic) {\n      subscribed = topic.isSubscribed();\n      archived = topic.isArchived();\n\n      const acs = topic.getAccessMode();\n      if (acs) {\n        muted = acs.isMuted();\n        blocked = !acs.isJoiner();\n        self_blocked = !acs.isJoiner('want');\n        deleter = acs.isDeleter();\n      }\n    }\n\n    return [\n      subscribed ? {\n        title: this.props.intl.formatMessage(messages.menu_item_info),\n        handler: this.handleShowInfoView\n      } : null,\n      subscribed ? 'messages_clear' : null,\n      subscribed && deleter ? 'messages_clear_hard' : null,\n      muted ? (blocked ? null : 'topic_unmute') : 'topic_mute',\n      self_blocked ? 'topic_unblock' : 'topic_block',\n      !archived ? 'topic_archive' : null,\n      'topic_delete'\n    ];\n  }\n\n  handleHideContextMenu() {\n    this.setState({\n      contextMenuVisible: false,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuBounds: null\n    });\n  }\n\n  handleContextMenuAction(action, promise, params) {\n    if (action == 'topic_archive') {\n      if (promise && params.topicName && params.topicName == this.state.topicSelected) {\n        promise.then(() => {\n          this.handleTopicSelected(null);\n        });\n      }\n    }\n  }\n\n  handleShowAlert(title, content, onConfirm, confirmText, onReject, rejectText) {\n    this.setState({\n      alertVisible: true,\n      alertParams: {\n        title: title,\n        content: content,\n        onConfirm: onConfirm,\n        confirm: confirmText,\n        onReject: onReject,\n        reject: rejectText\n      }\n    });\n  }\n\n  handleShowInfoView() {\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'info', true));\n    this.setState({showInfoPanel: true});\n  }\n\n  handleHideInfoView() {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'info'));\n    this.setState({showInfoPanel: false});\n  }\n\n  handleMemberUpdateRequest(topicName, added, removed) {\n    if (!topicName) {\n      return;\n    }\n\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    if (added && added.length > 0) {\n      added.map((uid) => {\n        topic.invite(uid, null).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n\n    if (removed && removed.length > 0) {\n      removed.map((uid) => {\n        topic.delSubscription(uid).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n  }\n\n  handleValidateCredentialsRequest(cred, code) {\n    if (this.tinode.isAuthenticated()) {\n      const me = this.tinode.getMeTopic();\n      me.setMeta({cred: {meth: cred, resp: code}})\n        .then(() => {\n          HashNavigation.navigateTo('');\n        })\n        .catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n    } else {\n      this.setState({credMethod: cred, credCode: code});\n      this.doLogin(null, null, {meth: cred, resp: code});\n    }\n  }\n\n  handlePasswordResetRequest(method, value) {\n    // If already connected, connnect() will return a resolved promise.\n    this.tinode.connect()\n      .then(() => {\n        return this.tinode.requestResetAuthSecret('basic', method, value);\n      })\n      .catch((err) => {\n        // Socket error\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleResetPassword(scheme, newPassword, token) {\n    token = base64ReEncode(token);\n    if (!token) {\n      this.handleError(this.props.intl.formatMessage(messages.invalid_security_token), 'err');\n    } else {\n      this.tinode.connect()\n        .then(() => {\n          return this.tinode.updateAccountBasic(null, null, newPassword, {token: token});\n        })\n        .catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"app-container\">\n        {this.state.contextMenuVisible ?\n          <ContextMenu\n            tinode={this.tinode}\n            bounds={this.state.contextMenuBounds}\n            clickAt={this.state.contextMenuClickAt}\n            params={this.state.contextMenuParams}\n            items={this.state.contextMenuItems}\n            hide={this.handleHideContextMenu}\n            onShowAlert={this.handleShowAlert}\n            onAction={this.handleContextMenuAction}\n            onTopicRemoved={(topicName) => {\n              if (topicName == this.state.topicSelected) {\n                this.handleTopicSelected(null);\n              }\n            }}\n            onError={this.handleError} />\n          :\n          null\n        }\n        <Alert\n          visible={this.state.alertVisible}\n          title={this.state.alertParams.title}\n          content={this.state.alertParams.content}\n          onReject={this.state.alertParams.onReject ? (() => { this.setState({alertVisible: false}); }) : null}\n          reject={this.state.alertParams.reject}\n          onConfirm={() => { this.setState({alertVisible: false}); this.state.alertParams.onConfirm(); }}\n          confirm={this.state.alertParams.confirm}\n          />\n        <SidepanelView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          displayMobile={this.state.displayMobile}\n          hideSelf={this.state.displayMobile && this.state.mobilePanel !== 'sidepanel'}\n          state={this.state.sidePanelSelected}\n          title={this.state.sidePanelTitle}\n          avatar={this.state.sidePanelAvatar}\n          login={this.state.login}\n          myUserId={this.state.myUserId}\n          loginDisabled={this.state.loginDisabled}\n          loadSpinnerVisible={this.state.loadSpinnerVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          topicSelected={this.state.topicSelected}\n          chatList={this.state.chatList}\n          credMethod={this.state.credMethod}\n          credCode={this.state.credCode}\n\n          transport={this.state.transport}\n          messageSounds={this.state.messageSounds}\n          desktopAlerts={this.state.desktopAlerts}\n          desktopAlertsEnabled={this.state.desktopAlertsEnabled}\n          incognitoMode={this.state.incognitoMode}\n          serverAddress={this.state.serverAddress}\n          serverVersion={this.state.serverVersion}\n\n          onGlobalSettings={this.handleGlobalSettings}\n          onSignUp={this.handleNewAccount}\n          onSettings={this.handleSettings}\n          onBasicNavigate={this.basicNavigator}\n          onLoginRequest={this.handleLoginRequest}\n          onCreateAccount={this.handleNewAccountRequest}\n          onUpdateAccount={this.handleUpdateAccountRequest}\n          onUpdateAccountTags={this.handleUpdateAccountTagsRequest}\n          onTogglePushNotifications={this.togglePushToken}\n          onToggleMessageSounds={this.handleToggleMessageSounds}\n          onToggleIncognitoMode={this.handleToggleIncognitoMode}\n          onCredAdd={this.handleCredAdd}\n          onCredDelete={this.handleCredDelete}\n          onCredConfirm={this.handleCredConfirm}\n          onTopicSelected={this.handleTopicSelected}\n          onCreateTopic={this.handleStartTopicRequest}\n          onLogout={this.handleLogout}\n          onDeleteAccount={this.handleDeleteAccount}\n          onShowAlert={this.handleShowAlert}\n          onCancel={this.handleSidepanelCancel}\n          onError={this.handleError}\n          onValidateCredentials={this.handleValidateCredentialsRequest}\n          onPasswordResetRequest={this.handlePasswordResetRequest}\n          onResetPassword={this.handleResetPassword}\n          onShowArchive={this.handleShowArchive}\n          onShowBlocked={this.handleShowBlocked}\n\n          onInitFind={this.tnInitFind}\n          searchResults={this.state.searchResults}\n          onSearchContacts={this.handleSearchContacts}\n\n          showContextMenu={this.handleShowContextMenu} />\n\n        <MessagesView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          ready={this.state.ready}\n          online={this.state.topicSelectedOnline}\n          acs={this.state.topicSelectedAcs}\n          displayMobile={this.state.displayMobile}\n          viewportWidth={this.state.viewportWidth}\n          viewportHeight={this.state.viewportHeight}\n          hideSelf={this.state.displayMobile &&\n            (this.state.mobilePanel !== 'topic-view' || this.state.showInfoPanel)}\n          topic={this.state.topicSelected}\n          myUserId={this.state.myUserId}\n          serverVersion={this.state.serverVersion}\n          serverAddress={this.state.serverAddress}\n          applicationVisible={this.state.applicationVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          newTopicParams={this.state.newTopicParams}\n\n          onHideMessagesView={this.handleHideMessagesView}\n          onData={this.tnData}\n          onError={this.handleError}\n          onNewTopicCreated={this.handleNewTopicCreated}\n          showContextMenu={this.handleShowContextMenu}\n          onChangePermissions={this.handleChangePermissions}\n          onNewChat={this.handleNewChatInvitation}\n          sendMessage={this.handleSendMessage} />\n\n        {this.state.showInfoPanel ?\n          <InfoView\n            tinode={this.tinode}\n            connected={this.state.connected}\n            displayMobile={this.state.displayMobile}\n            topic={this.state.topicSelected}\n            searchableContacts={this.state.searchableContacts}\n            myUserId={this.state.myUserId}\n\n            errorText={this.state.errorText}\n            errorLevel={this.state.errorLevel}\n            errorAction={this.state.errorAction}\n            errorActionText={this.state.errorActionText}\n\n            onTopicDescUpdate={this.handleTopicUpdateRequest}\n            onCancel={this.handleHideInfoView}\n            onShowAlert={this.handleShowAlert}\n            onChangePermissions={this.handleChangePermissions}\n            onMemberUpdateRequest={this.handleMemberUpdateRequest}\n            onDeleteMessages={this.handleDeleteMessagesRequest}\n            onLeaveTopic={this.handleLeaveUnsubRequest}\n            onBlockTopic={this.handleBlockTopicRequest}\n            onReportTopic={this.handleReportTopic}\n            onAddMember={this.handleManageGroupMembers}\n            onTopicTagsUpdate={this.handleTagsUpdated}\n            onInitFind={this.tnInitFind}\n            onError={this.handleError}\n\n            showContextMenu={this.handleShowContextMenu}\n            />\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(TinodeWeb);\n","// Put all packages together.\n// Used to generate umd/index.prod.js\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { IntlProvider } from 'react-intl';\n\nimport allMessages from './messages.json';\nimport TinodeWeb from './views/tinode-web.jsx';\nimport HashNavigation from './lib/navigation.js';\n\n// Detect human language to use in the UI:\n//  Check parameters from URL hash #?hl=ru, then browser, then use 'en' as a fallback.\nconst { params } = HashNavigation.parseUrlHash(window.location.hash);\nconst language = (params && params.hl) ||\n  (navigator.languages && navigator.languages[0]) ||\n  navigator.language ||\n  navigator.userLanguage ||\n  'en';\n\n// Get the base language 'en' from a more specific 'en_GB' or 'en-US' as a partial fallback.\nconst baseLanguage = language.toLowerCase().split(/[-_]/)[0];\n\n// Try the full locale first, then the locale without the region code, fallback to 'en'.\nconst messages =\n  allMessages[language] ||\n  allMessages[baseLanguage] ||\n  allMessages.en;\n\nReactDOM.render(\n  <IntlProvider locale={language} messages={messages} textComponent={React.Fragment}>\n    <TinodeWeb />\n  </IntlProvider>,\n  document.getElementById('mountPoint')\n);\n","// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// startup\n// Load entry module and return exports\n// This entry module doesn't tell about it's top-level declarations so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[619](0, __webpack_exports__, __webpack_require__);\n"],"sourceRoot":""}