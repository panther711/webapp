{"version":3,"file":"src_views_create-account-view_jsx.dev.js","mappings":"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","sources":["webpack://tinode-webapp/./src/views/create-account-view.jsx","webpack://tinode-webapp/./src/widgets/phone-edit.jsx"],"sourcesContent":["// Account registration.\nimport React, { Suspense } from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarCrop from '../widgets/avatar-crop.jsx';\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport PhoneEdit from '../widgets/phone-edit.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport { imageScaled, blobToBase64, makeImageUrl } from '../lib/blob-helpers.js';\nimport { theCard } from '../lib/utils.js';\n\nimport { AVATAR_SIZE, MAX_AVATAR_BYTES, MAX_EXTERN_ATTACHMENT_SIZE,\n  MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class CreateAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: '',\n      password: '',\n      meth: '',\n      email: '',\n      tel: '',\n      fn: '', // full/formatted name\n      imageUrl: null,\n      uploadUrl: null,\n      newAvatar: null,\n      newAvatarMime: null,\n      buttonDisabled: false,\n      saveToken: LocalStorageUtil.getObject('keep-logged-in')\n    };\n\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePhoneChange = this.handlePhoneChange.bind(this);\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleAvatarCropped = this.handleAvatarCropped.bind(this);\n    this.handleAvatarCropCancel = this.handleAvatarCropCancel.bind(this);\n    this.uploadAvatar = this.uploadAvatar.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    // Connection will trigger change by changing the this.props.serverVersion.\n    props.tinode.connect()\n      .catch(err => {\n        this.props.onError(err.message, 'err');\n      });\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(password) {\n    this.setState({password: password});\n  }\n\n  handleEmailChange(e) {\n    this.setState({meth: 'email', email: e.target.value});\n  }\n\n  handlePhoneChange(number) {\n    this.setState({meth: 'tel', tel: number});\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handleImageChanged(mime, img) {\n    this.setState({newAvatar: img, newAvatarMime: mime});\n  }\n\n  handleToggleSaveToken() {\n    LocalStorageUtil.setObject('keep-logged-in', !this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onCreateAccount(\n      this.state.login.trim(),\n      this.state.password.trim(),\n      theCard(this.state.fn.trim().substring(0, MAX_TITLE_LENGTH), this.state.uploadUrl),\n      {\n        'meth': this.state.meth,\n        'val': this.state.meth == 'email' ?\n          this.state.email :\n            this.state.meth == 'tel' ? this.state.tel : null\n      }\n    );\n  }\n\n  // AvatarCropView calls this method when the user has cropped the image.\n  handleAvatarCropped(mime, blob, width, height) {\n    const url = blob ? URL.createObjectURL(blob) : null;\n    this.setState({avatar: url, newAvatar: null, newAvatarMime: null});\n    if (blob) {\n      this.uploadAvatar(mime, blob, width, height);\n    }\n  }\n\n  handleAvatarCropCancel() {\n    this.setState({newAvatar: null, newAvatarMime: null});\n  }\n\n    // Utility method for converting cropped avatar blob to bytes for sending inband or\n  // for uploading it to the server out of band.\n  uploadAvatar(mime, blob, width, height) {\n    const readyToUpload = image => {\n      let {mime, blob} = image;\n      this.setState({imageUrl: URL.createObjectURL(blob), buttonDisabled: true});\n      if (blob.size > MAX_AVATAR_BYTES) {\n        // Too large to send inband - uploading out of band and sending as a link.\n        const uploader = this.props.tinode.getLargeFileHelper();\n        uploader.upload(blob, 'newacc')\n          .then(url => this.setState({uploadUrl: url}))\n          .catch(err => this.props.onError(err.message, 'err'))\n          .finally(_ => this.setState({buttonDisabled: false}));\n      } else {\n        // Convert blob to base64-encoded bits.\n        blobToBase64(blob)\n          .then(b64 => this.setState({uploadUrl: makeImageUrl({data: b64.bits, type: mime})}))\n          .finally(_ => this.setState({buttonDisabled: false}));\n      }\n    };\n\n    if (width > AVATAR_SIZE || height > AVATAR_SIZE || width != height) {\n      // Avatar is not square or too large even after cropping. Shrink it and make square.\n      imageScaled(blob, AVATAR_SIZE, AVATAR_SIZE, MAX_EXTERN_ATTACHMENT_SIZE, true)\n        .then(scaled => readyToUpload(scaled))\n        .catch(err => this.props.onError(err.message, 'err'));\n    } else {\n      readyToUpload({mime: mime, blob: blob, width: width, height: height});\n    }\n  }\n\n  render() {\n    if (this.state.newAvatar) {\n      return (\n        <AvatarCrop\n          avatar={this.state.newAvatar}\n          mime={this.state.newAvatarMime}\n          onSubmit={this.handleAvatarCropped}\n          onCancel={this.handleAvatarCropCancel}\n          onError={this.props.onError} />\n      );\n    }\n\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form className=\"panel-form-column\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"umn\">\n            <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n              description=\"Placeholer for username/login\">{\n              (login_prompt) => <input type=\"text\" placeholder={login_prompt} autoComplete=\"user-name\"\n                value={this.state.login} onChange={this.handleLoginChange} required autoFocus />\n            }</FormattedMessage>\n            <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n              description=\"Placeholder/prompt for entering password\">{\n              (password_prompt) => <VisiblePassword placeholder={password_prompt} autoComplete=\"new-password\"\n                value={this.state.password} onFinished={this.handlePasswordChange}\n                required={true} />\n            }</FormattedMessage>\n          </div>\n          <AvatarUpload\n            tinode={this.props.tinode}\n            avatar={this.state.imageUrl}\n            onImageUpdated={this.handleImageChanged}\n            onError={this.props.onError} />\n        </div>\n        <div  className=\"panel-form-row\">\n          <FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n            description=\"Input placeholder for person's full name\">{\n            (full_name_prompt) => <input type=\"text\" placeholder={full_name_prompt} autoComplete=\"name\"\n              value={this.state.fn} onChange={this.handleFnChange} required/>\n          }</FormattedMessage>\n        </div>\n        {this.props.reqCredMethod == 'email' ?\n          <div className=\"panel-form-row\">\n            <FormattedMessage id=\"email_prompt\" defaultMessage=\"Email, e.g. jdoe@example.com\"\n              description=\"Input placeholder for email entry\">{\n              (email_prompt) => <input type=\"email\" placeholder={email_prompt} autoComplete=\"email\"\n                value={this.state.email} onChange={this.handleEmailChange} required/>\n            }</FormattedMessage>\n          </div>\n          : this.props.reqCredMethod == 'tel' ?\n          <><div className=\"panel-form-row\">\n            <label className=\"small gray\"><FormattedMessage id=\"mobile_phone_number\" defaultMessage=\"Mobile phone number\"\n              description=\"Prompt for entering a mobile phone number\" /></label>\n          </div>\n          <div className=\"panel-form-row\">\n            <PhoneEdit\n              autoFocus={false}\n              onShowCountrySelector={this.props.onShowCountrySelector}\n              onSubmit={this.handlePhoneChange} />\n          </div></>\n          : null\n        }\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n            description=\"Label for a checkbox\">{\n            (stay_logged_in) => <label htmlFor=\"save-token\">&nbsp;{stay_logged_in}</label>\n          }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\" disabled={this.state.buttonDisabled}>\n            <FormattedMessage id=\"button_sign_up\" defaultMessage=\"Sign up\"\n              description=\"Create account button [Sign Up]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// Editor for a phone number.\n\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { getExampleNumber, parsePhoneNumber } from 'libphonenumber-js/mobile';\nimport examples from 'libphonenumber-js/mobile/examples'\n\nimport * as dcodes from '../dcodes.json';\nimport { flagEmoji } from '../lib/strformat';\n\nconst messages = defineMessages({\n  mobile_number_required: {\n    id: 'mobile_number_required',\n    defaultMessage: 'Mobile phone number required',\n    description: 'Error message'\n  }\n});\n\nclass PhoneEdit extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.codeMap = {};\n    dcodes.default.forEach(dc => { this.codeMap[dc.code] = dc.dial; });\n\n    const code = props.countryCode || 'US';\n    const dial = this.codeMap[code];\n\n    this.state = {\n      countryCode: code,\n      dialCode: dial,\n      localNumber: '',\n      placeholderNumber: this.placeholderNumber(code, dial)\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleFinished = this.handleFinished.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.showCountrySelector = this.showCountrySelector.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({localNumber: this.filterNumber(e.target.value)});\n  }\n\n  handleFinished(e) {\n    e.preventDefault();\n    const raw = `${this.state.dialCode}${this.state.localNumber.trim()}`.replace(/[^\\d]/g, '');\n    let number = null;\n    try {\n      number = parsePhoneNumber(`+${raw}`);\n    } catch (err) {}\n\n    if (!number || !number.isValid()) {\n      this.inputField.setCustomValidity(this.props.intl.formatMessage(messages.mobile_number_required));\n      return;\n    }\n\n    this.inputField.setCustomValidity('');\n    this.props.onSubmit(number.format('E.164'));\n  }\n\n\n  handleKeyDown(e) {\n    if (e.key === 'Enter') {\n      this.handleFinished(e);\n    }\n  }\n\n  showCountrySelector() {\n    this.props.onShowCountrySelector(this.state.countryCode, this.state.dialCode,\n      (code, dial) => {\n          this.setState({\n            countryCode: code,\n            dialCode: dial,\n            placeholderNumber: this.placeholderNumber(code, dial)\n        })\n      });\n  }\n\n  // Filter out characters not permitted in a phone number.\n  filterNumber(number) {\n    if (!number) {\n      return number;\n    }\n    // Leave numbers, space, (, ), -, and .\n    // The + is not allowed: it's handled by the country code portion.\n    return number.replace(/[^-\\s().\\d]/g, '');\n  }\n\n  placeholderNumber(code, dial) {\n    const sample = getExampleNumber(code, examples);\n    return sample ? sample.formatInternational().substring(dial.length + 1).trim() : '123 0123';\n  }\n\n  render() {\n    return (\n      <>\n        <span className=\"dial-code\" onClick={this.showCountrySelector}>\n          <span className=\"country-flag\">{flagEmoji(this.state.countryCode)}&nbsp;</span>\n          +{this.state.dialCode}&nbsp;</span>\n        <input type=\"tel\" ref={ref => {this.inputField = ref}} placeholder={this.state.placeholderNumber}\n            value={this.state.localNumber} onChange={this.handleChange}\n            maxLength={17} onKeyDown={this.handleKeyDown} onBlur={this.handleFinished}\n            required autoFocus={this.props.autoFocus} />\n      </>\n    );\n  }\n}\n\nexport default injectIntl(PhoneEdit);\n"],"names":["React","Suspense","FormattedMessage","AvatarCrop","AvatarUpload","CheckBox","PhoneEdit","VisiblePassword","LocalStorageUtil","imageScaled","blobToBase64","makeImageUrl","theCard","AVATAR_SIZE","MAX_AVATAR_BYTES","MAX_EXTERN_ATTACHMENT_SIZE","MAX_TITLE_LENGTH","CreateAccountView","PureComponent","constructor","props","state","login","password","meth","email","tel","fn","imageUrl","uploadUrl","newAvatar","newAvatarMime","buttonDisabled","saveToken","getObject","handleLoginChange","bind","handlePasswordChange","handleEmailChange","handlePhoneChange","handleFnChange","handleImageChanged","handleToggleSaveToken","handleAvatarCropped","handleAvatarCropCancel","uploadAvatar","handleSubmit","tinode","connect","catch","err","onError","message","e","setState","target","value","number","mime","img","setObject","preventDefault","onCreateAccount","trim","substring","blob","width","height","url","URL","createObjectURL","avatar","readyToUpload","image","size","uploader","getLargeFileHelper","upload","then","finally","_","b64","data","bits","type","scaled","render","submitClasses","disabled","login_prompt","password_prompt","full_name_prompt","reqCredMethod","email_prompt","onShowCountrySelector","stay_logged_in","defineMessages","injectIntl","getExampleNumber","parsePhoneNumber","examples","dcodes","flagEmoji","messages","mobile_number_required","id","defaultMessage","codeMap","default","forEach","dc","code","dial","countryCode","dialCode","localNumber","placeholderNumber","handleChange","handleFinished","handleKeyDown","showCountrySelector","filterNumber","raw","replace","isValid","inputField","setCustomValidity","intl","formatMessage","onSubmit","format","key","sample","formatInternational","length","ref","autoFocus"],"sourceRoot":""}