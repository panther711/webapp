{"version":3,"sources":["webpack://tinode-webapp/./src/config.js","webpack://tinode-webapp/./src/index.js","webpack://tinode-webapp/./src/lib/blob-helpers.js","webpack://tinode-webapp/./src/lib/host-name.js","webpack://tinode-webapp/./src/lib/local-storage.js","webpack://tinode-webapp/./src/lib/navigation.js","webpack://tinode-webapp/./src/lib/strformat.js","webpack://tinode-webapp/./src/lib/utils.js","webpack://tinode-webapp/./src/version.js","webpack://tinode-webapp/./src/views/acc-general-view.jsx","webpack://tinode-webapp/./src/views/acc-notifications-view.jsx","webpack://tinode-webapp/./src/views/acc-security-view.jsx","webpack://tinode-webapp/./src/views/acc-support-view.jsx","webpack://tinode-webapp/./src/views/contacts-view.jsx","webpack://tinode-webapp/./src/views/create-account-view.jsx","webpack://tinode-webapp/./src/views/edit-account-view.jsx","webpack://tinode-webapp/./src/views/info-view.jsx","webpack://tinode-webapp/./src/views/login-view.jsx","webpack://tinode-webapp/./src/views/logo-view.jsx","webpack://tinode-webapp/./src/views/messages-view.jsx","webpack://tinode-webapp/./src/views/new-topic-view.jsx","webpack://tinode-webapp/./src/views/password-reset-view.jsx","webpack://tinode-webapp/./src/views/settings-view.jsx","webpack://tinode-webapp/./src/views/sidepanel-view.jsx","webpack://tinode-webapp/./src/views/tinode-web.jsx","webpack://tinode-webapp/./src/views/validation-view.jsx","webpack://tinode-webapp/./src/widgets/alert.jsx","webpack://tinode-webapp/./src/widgets/attachment.jsx","webpack://tinode-webapp/./src/widgets/avatar-upload.jsx","webpack://tinode-webapp/./src/widgets/button-back.jsx","webpack://tinode-webapp/./src/widgets/chat-message.jsx","webpack://tinode-webapp/./src/widgets/checkbox.jsx","webpack://tinode-webapp/./src/widgets/chip-input.jsx","webpack://tinode-webapp/./src/widgets/chip.jsx","webpack://tinode-webapp/./src/widgets/contact-action.jsx","webpack://tinode-webapp/./src/widgets/contact-badges.jsx","webpack://tinode-webapp/./src/widgets/contact-list.jsx","webpack://tinode-webapp/./src/widgets/contact.jsx","webpack://tinode-webapp/./src/widgets/context-menu.jsx","webpack://tinode-webapp/./src/widgets/doc-preview.jsx","webpack://tinode-webapp/./src/widgets/error-panel.jsx","webpack://tinode-webapp/./src/widgets/file-progress.jsx","webpack://tinode-webapp/./src/widgets/group-manager.jsx","webpack://tinode-webapp/./src/widgets/group-subs.jsx","webpack://tinode-webapp/./src/widgets/host-selector.jsx","webpack://tinode-webapp/./src/widgets/image-preview.jsx","webpack://tinode-webapp/./src/widgets/in-place-edit.jsx","webpack://tinode-webapp/./src/widgets/invitation.jsx","webpack://tinode-webapp/./src/widgets/letter-tile.jsx","webpack://tinode-webapp/./src/widgets/load-spinner.jsx","webpack://tinode-webapp/./src/widgets/menu-cancel.jsx","webpack://tinode-webapp/./src/widgets/menu-contacts.jsx","webpack://tinode-webapp/./src/widgets/menu-start.jsx","webpack://tinode-webapp/./src/widgets/more-button.jsx","webpack://tinode-webapp/./src/widgets/new-topic-by-id.jsx","webpack://tinode-webapp/./src/widgets/new-topic-group.jsx","webpack://tinode-webapp/./src/widgets/permissions-editor.jsx","webpack://tinode-webapp/./src/widgets/received-marker.jsx","webpack://tinode-webapp/./src/widgets/search-contacts.jsx","webpack://tinode-webapp/./src/widgets/send-message.jsx","webpack://tinode-webapp/./src/widgets/side-navbar.jsx","webpack://tinode-webapp/./src/widgets/tag-manager.jsx","webpack://tinode-webapp/./src/widgets/unread-badge.jsx","webpack://tinode-webapp/./src/widgets/uploading-image.jsx","webpack://tinode-webapp/./src/widgets/visible-password.jsx","webpack://tinode-webapp/external \"React\"","webpack://tinode-webapp/external \"ReactDOM\"","webpack://tinode-webapp/external \"ReactIntl\"","webpack://tinode-webapp/external \"Tinode\"","webpack://tinode-webapp/external \"firebase\"","webpack://tinode-webapp/external [\"firebase\",\"messaging\"]","webpack://tinode-webapp/webpack/bootstrap","webpack://tinode-webapp/webpack/runtime/compat get default export","webpack://tinode-webapp/webpack/runtime/define property getters","webpack://tinode-webapp/webpack/runtime/hasOwnProperty shorthand","webpack://tinode-webapp/webpack/runtime/make namespace object","webpack://tinode-webapp/webpack/startup"],"names":["APP_NAME","PACKAGE_VERSION","API_KEY","KNOWN_HOSTS","hosted","local","DEFAULT_HOST","LOGGING_ENABLED","KEYPRESS_DELAY","RECEIVED_DELAY","READ_DELAY","MIN_TAG_LENGTH","MAX_TAG_LENGTH","MAX_TAG_COUNT","DEFAULT_P2P_ACCESS_MODE","NEW_GRP_ACCESS_MODE","CHANNEL_ACCESS_MODE","NO_ACCESS_MODE","MEDIA_BREAKPOINT","REM_SIZE","AVATAR_SIZE","BROKEN_IMAGE_SIZE","MESSAGES_PAGE","MAX_INBAND_ATTACHMENT_SIZE","MAX_EXTERN_ATTACHMENT_SIZE","MAX_IMAGE_DIM","IMAGE_PREVIEW_DIM","MAX_ONLINE_IN_TOPIC","MAX_TITLE_LENGTH","LINK_CONTACT_US","LINK_PRIVACY_POLICY","LINK_TERMS_OF_SERVICE","params","HashNavigation","window","location","hash","language","hl","navigator","languages","userLanguage","baseLanguage","toLowerCase","split","messages","allMessages","ReactDOM","IntlProvider","locale","textComponent","React","document","getElementById","SUPPORTED_IMAGE_FORMATS","MIME_EXTENSIONS","makeImageUrl","photo","type","data","fitImageSize","width","height","maxWidth","maxHeight","forceSquare","Math","min","scale","size","dstWidth","dstHeight","srcWidth","srcHeight","xoffset","yoffset","fileNameForMime","fname","mime","idx","indexOf","ext","at","lastIndexOf","substring","imageScaled","fileOrBlob","maxSize","onSuccess","onError","img","Image","crossOrigin","onerror","err","onload","async","URL","revokeObjectURL","src","dim","this","canvas","createElement","ctx","getContext","imageSmoothingEnabled","drawImage","blob","Promise","resolve","toBlob","length","clearRect","name","createObjectURL","fileToBase64","file","reader","FileReader","addEventListener","result","readAsDataURL","blobToBase64","filePasted","event","onImageSuccess","onAttachmentSuccess","items","clipboardData","originalEvent","i","item","kind","getAsFile","console","log","imageFileScaledToBase64","imageFileToBase64","getMimeType","header","exec","base64EncodedLen","n","floor","base64DecodedLen","base64ReEncode","str","replace","btoa","atob","detectServerAddress","host","protocol","hostname","port","isSecureConnection","isLocalHost","LocalStorageUtil","key","value","localStorage","setItem","JSON","stringify","getItem","parse","oldVal","getObject","setObject","Object","assign","removeItem","parts","path","substr","forEach","part","decodeURIComponent","url","join","args","hasOwnProperty","push","parsed","parseUrlHash","composeUrlHash","sidepanel","topic","info","shortDateFormat","then","now","Date","getFullYear","getMonth","getDate","toLocaleTimeString","hour12","hour","minute","toLocaleDateString","month","day","year","secondsToTime","seconds","sec","bytesToHumanSize","bytes","sizes","bucket","log2","count","pow","round","toFixed","stringHash","charCodeAt","updateFavicon","oldIcon","head","getElementsByTagName","newIcon","id","rel","href","removeChild","appendChild","title","vcard","fn","imageDataUrl","card","trim","dataStart","arrayEqual","a","b","Array","isArray","sort","l","asPhone","val","test","asEmail","isUrlRelative","sanitizeUrl","allowedSchemes","schemes","RegExp","sanitizeImageUrl","sanitizedUrl","AccGeneralView","constructor","props","super","me","tinode","getMeTopic","state","fullName","public","undefined","avatar","tags","credentials","getCredentials","addCredActive","addCredInvalid","newCred","previousOnTags","onTagsUpdated","tnNewTags","bind","tnCredsUpdated","handleFullNameUpdate","handleImageChanged","handleCredChange","handleCredKeyDown","handleCredEntered","handleTagsUpdated","componentDidMount","onCredsUpdated","componentWillUnmount","setState","creds","onUpdateAccount","Tinode","e","target","keyCode","method","onCredAdd","slice","onUpdateTags","render","map","cred","meth","done","onClick","preventDefault","onCredConfirm","FormattedMessage","defaultMessage","description","onCredDelete","className","full_name_placeholder","placeholder","onFinished","uid","myUserId","onImageChanged","title_tag_manager","activated","onSubmit","required","autoFocus","onChange","onKeyDown","onBlur","EditAccountView","handleCheckboxClick","what","checked","onToggleMessageSounds","onTogglePushNotifications","onToggleIncognitoMode","htmlFor","messageSounds","desktopAlertsEnabled","desktopAlerts","incognitoMode","defineMessages","delete_account","delete_account_warning","AccSecurityView","blockedCount","contacts","c","acs","isJoiner","defacs","getDefaultAccess","auth","anon","showPermissionEditorFor","handlePasswordUpdate","handleLaunchPermissionsEditor","handleHidePermissionsEditor","handlePermissionsChanged","handleDeleteAccount","pwd","password","which","editedPermissions","perm","newState","formatMessage","intl","onShowAlert","onDeleteAccount","mode","skip","onCancel","password_unchanged","onLogout","onShowBlocked","values","injectIntl","AccSupportView","serverVersion","serverAddress","archived_contacts_title","ContactsView","handleAction","deriveStateFromProps","unreadThreads","archivedCount","chatList","blocked","private","arch","archive","unread","touched","action","contactList","componentDidUpdate","prevProps","prevState","action_ignored","onShowArchive","no_contacts","connected","emptyListMessage","topicSelected","showOnline","showUnread","onTopicSelected","showContextMenu","onAction","CreateAccountView","login","email","errorCleared","saveToken","handleLoginChange","handlePasswordChange","handleEmailChange","handleFnChange","handleToggleSaveToken","handleSubmit","onCreateAccount","submitClasses","disabled","login_prompt","autoComplete","password_prompt","full_name_prompt","email_prompt","stay_logged_in","readOnly","owner","onBasicNavigate","requested","granted","edit_permissions","other_user","clear_messages","clear_messages_warning","delete_messages","delete_messages_warning","leave_chat","leave_chat_warning","block_contact","block_contact_warning","report_chat","report_chat_warning","InfoView","admin","sharer","deleter","muted","address","groupTopic","channel","selectedContact","access","modeGiven","modeWant","modeGiven2","modeWant2","showMemberPanel","moreInfoExpanded","previousMetaDesc","previousSubsUpdated","previousTagsUpdated","resetSubs","resetDesc","onMetaDesc","onSubsUpdated","handlePrivateUpdate","handleMuted","handleShowAddMembers","handleHideAddMembers","handleMemberUpdateRequest","handleDeleteMessages","handleLeave","handleBlock","handleReport","handleMemberSelected","handleMoreInfo","handleContextMenu","getTopic","getType","user2","subscriber","getGiven","getWant","subscribers","sub","getAccessMode","isOwner","isAdmin","isSharer","isDeleter","isMuted","comment","isChannel","getMode","getMeta","startMetaQuery","withTags","build","desc","subs","onTopicDescUpdate","ignored","onChangePermissions","userPermissionsEdited","toEdit","toCompare","toSkip","titleEdit","titleCompare","userTitle","userAvatar","user","userPermissionsTitle","userPermissionsAvatar","immutablePermissions","editedPermissionsTitle","immutablePermissionsTitle","editedPermissionsSkipped","onInitFind","members","added","removed","onMemberUpdateRequest","onDeleteMessages","onLeaveTopic","onBlockTopic","onReportTopic","open","onTopicTagsUpdate","instance","topicName","menuItems","handler","x","y","displayMobile","level","errorLevel","text","errorText","onClearError","requiredMember","keepInitialMembers","searchableContacts","compare","modeTitle","compareTitle","private_placeholder","more","onToggle","no_members","showMode","noScroll","LoginView","hostName","onLogin","autoCorrect","autoCapitalize","LogoView","version","alt","Drafty","isUnconfirmed","ex","getExcessive","includes","isPeerRestricted","ms","getMissing","MessagesView","getDerivedStateFromProps","leave","sendImageAttachment","sendFileAttachment","sendKeyPress","handleScrollReference","handleScrollEvent","handleDescChange","handleSubsUpdated","handleNewMessage","handleAllMessagesReceived","handleInfoReceipt","handleImagePostview","handleClosePreview","handleFormResponse","handleContextClick","handleShowContextMenuMessage","handleNewChatAcceptance","handleEnablePeer","handleAttachFile","handleAttachImage","handleCancelUpload","postReadNotification","clearNotificationQueue","readNotificationQueue","readNotificationTimer","messagesScroller","removeEventListener","scrollTop","scrollHeight","scrollPosition","viewportHeight","onData","onAllMessagesReceived","onInfo","onPres","applicationVisible","isSubscribed","ready","newTopic","newTopicParams","_topicName","getQuery","withLaterDesc","withLaterSub","isReader","withLaterData","withLaterDel","fetchingMessages","setQuery","subscribe","ctrl","code","onNewTopicCreated","queuedMessages","pub","_sending","publishMessage","catch","message","blankState","not_found","nextProps","nextState","docPreview","imagePreview","imagePostview","typingIndicator","msgs","online","msg","deleted","onlineSubs","peer","p2pPeerDesc","peerMessagingDisabled","isWriter","readingBlocked","unconformed","unconfirmed","oldTopicName","oldTopic","finally","node","msgHasMoreMessages","getMessagesPage","seq","setInterval","clearInterval","shift","sendAt","max","noteRead","setMilliseconds","getMilliseconds","m","isNewMessage","msgStatus","from","clearTimeout","keyPressTimer","setTimeout","forceUpdate","content","sendMessage","attachJSON","ref","searchParams","resp","set","search","stopPropagation","pageY","pageX","messageSpecificMenuItems","onNewChat","noteKeyPress","maxInbandAttachmentSize","getServerLimit","uploader","getLargeFileHelper","cannot_initiate_upload","uploadCompletionPromise","upload","attachFile","filename","urlPromise","bits","maxExternAttachmentSize","limit","caption","tinyBlob","blobMime","tinyBits64","insertImage","_tempPreview","appendLineBreak","append","init","bits64","preview","found","find","_cancelled","cancel","component","hideSelf","component2","onClose","onSendMessage","messageNodes","previousFrom","chatBoxClass","nextFrom","sequence","thisFrom","isReply","deliveryStatus","userName","userFrom","userDesc","hi","mimeType","timestamp","ts","response","received","_uploader","viewportWidth","onImagePreview","onFormResponse","onCancelUpload","lastSeen","cont","getContact","online_now","seen","last_seen","when","onHideMessagesView","show","onKeyPress","onAttachFile","onAttachImage","search_for_contacts","search_no_results","NewTopicView","tabSelected","searchQuery","handleTabClick","handleSearchContacts","handleContactSelected","handleNewGroupSubmit","handleGroupByID","currentTarget","dataset","query","onSearchContacts","sel","onCreateTopic","dataUrl","priv","no_contacts_placeholder","data-id","searchResults","PasswordResetView","token","scheme","onReset","onRequest","reset","SettingsView","transport","handleTransportSelected","handleServerAddressChange","onUpdate","names","def","ws","lp","transportOptions","onServerAddressChange","SidepanelView","handleLoginRequested","handleNewTopic","onLoginRequest","view","onSignUp","onSettings","onNewTopic","errorAction","actionText","errorActionText","loadSpinnerVisible","loginDisabled","onGlobalSettings","onUpdateAccountTags","credCode","credMethod","onValidateCredentials","onPasswordResetRequest","onResetPassword","POP_SOUND","Audio","reconnect_countdown","reconnect_now","push_init_failed","invalid_security_token","no_connection","code_doesnot_match","TinodeWeb","getBlankState","handleResize","handleHashRoute","handleOnline","checkForAppUpdate","handleVisibilityEvent","handleError","handleLoginRequest","handleConnected","handleAutoreconnectIteration","doLogin","handleCredentialsRequest","handleLoginSuccessful","handleDisconnect","tnMeMetaDesc","tnMeContactUpdate","tnMeSubsUpdated","resetContactList","tnData","tnInitFind","tnFndSubsUpdated","handleTopicSelected","handleHideMessagesView","handleSendMessage","handleNewChatInvitation","handleNewAccount","handleNewAccountRequest","handleUpdateAccountRequest","handleUpdateAccountTagsRequest","handleToggleIncognitoMode","handleSettings","handleGlobalSettings","handleShowArchive","handleShowBlocked","handleToggleMessageSounds","handleCredAdd","handleCredDelete","handleCredConfirm","initDesktopAlerts","togglePushToken","requestPushToken","handleSidepanelCancel","handleStartTopicRequest","handleNewTopicCreated","handleTopicUpdateRequest","handleChangePermissions","handleLogout","handleDeleteMessagesRequest","handleLeaveUnsubRequest","handleBlockTopicRequest","handleReportTopic","handleShowContextMenu","defaultTopicContextMenu","handleHideContextMenu","handleShowAlert","handleShowInfoView","handleHideInfoView","handleValidateCredentialsRequest","handlePasswordResetRequest","handleResetPassword","handleContextMenuAction","settings","autoLogin","messageSoundsOff","firebase","FIREBASE_INIT","firebaseToken","hidden","sidePanelSelected","sidePanelTitle","sidePanelAvatar","liveConnection","onLine","topicSelectedOnline","topicSelectedAcs","innerWidth","showInfoPanel","mobilePanel","contextMenuVisible","contextMenuBounds","contextMenuClickAt","contextMenuParams","contextMenuItems","alertVisible","alertParams","documentElement","clientWidth","clientHeight","tnSetup","onConnect","onDisconnect","onAutoreconnectIteration","fbPush","messaging","usePublicVapidKey","messagingVapidKey","serviceWorker","register","reg","useServiceWorker","active","postMessage","setDeviceToken","parsedNav","expires","setAuthToken","connect","tab","readTimer","readTimerCallback","setHumanLanguage","enableLogging","mobile","onupdatefound","installingWorker","installing","onstatechange","controller","newTopicTabSelected","isConnected","getServerInfo","ver","prom","reconnectCountdown","timeLeft","reconnect","isAuthenticated","promise","getAuthToken","loginBasic","loginToken","onContactUpdate","getCurrentUserID","withDesc","withCred","disconnect","isPresencer","archived","isArchived","play","unused","foundContacts","merged","updated","prepareSearchableContacts","receivedTimer","noteRecv","fnd","getFndTopic","withSub","s","setMeta","isTopicOnline","getTopicAccessMode","createMessage","publishDraft","isP2P","delTopic","am","updateWant","login_","password_","public_","cred_","tags_","createAccountBasic","updateAccountBasic","getCurrentLogin","on","onTokenRefresh","onMessage","payload","enabled","requestPermission","deleteToken","getToken","refreshedToken","delCredential","basicNavigator","isTopicCached","newGroupTopicName","oldName","newName","permissions","updateGiven","delCurrentUser","delMessagesAll","updateMode","publish","getBoundingClientRect","self_blocked","subscribed","onConfirm","confirmText","onReject","rejectText","confirm","reject","invite","delSubscription","requestResetAuthSecret","newPassword","bounds","clickAt","hide","onTopicRemoved","visible","onAddMember","handleManageGroupMembers","phone","ValidationView","handleChange","handleKeyPress","handleCancel","numbers_only","Alert","Attachment","downloader","progress","downloadFile","mimetype","download","loaded","uploading","helperFunc","downloadUrl","downloadWidget","AvatarUpload","handleFileUpload","files","base64bits","du","randId","random","accept","ButtonBack","onBack","ChatMessage","onProgress","handleProgress","handleImagePreview","handleFormButtonClick","act","MESSAGE_STATUS_FAILED","ratio","sideClass","bubbleClass","fullDisplay","attachments","att","draftyFormatter","notFound","style","el","attr","UploadingImage","authorizeURL","inner","child","CheckBox","ChipInput","input","focused","handleTextInput","removeChipAt","handleChipCancel","handleFocusGained","handleFocusLost","handleKeyDown","chips","prompt","sortedChips","sortChips","staticMembers","chipIndex","indexChips","index","keep","normal","concat","filterFunc","onChipRemoved","onFocusLost","onEnter","noAvatar","avatarDisabled","invalid","onFocus","Chip","ContactAction","handleClick","icon_mapping","ContactBadges","badges","icon","color","badge_you","badge_owner","ContactList","showCheckmark","contactNodes","contactsCount","filter","selected","onSelected","dangerouslySetInnerHTML","__html","Contact","icon_badges","clear_for_all","delete_for_all","send_retry","mute","unmute","topic_delete","topic_delete_warning","unblock","block","topic_block_warning","member_delete","ContextMenu","handlePageClick","handleEscapeKey","MenuItems","errorHandler","deleteMessages","delete","retryMessage","topicPermissionSetter","contains","all","hard","cancelSend","delMessagesList","flushMessage","menu","hSize","vSize","position","left","right","top","bottom","DocPreview","handleSendDoc","mimeToIcon","default","image","video","iconFromMime","noInput","ErrorPanel","warn","whiteSpace","FileProgress","contacts_not_found_short","GroupManager","indexMembers","contactFilter","noContactsMessage","selectedContacts","handleMemberRemoved","handleContactFilter","delta","present","keepInitial","stat","userId","status","splice","keys","k","doContactFiltering","GroupSubs","usersOnline","totalCount","countToShow","some","overflow","HostSelector","changed","handleHostNameChange","handleEditingFinished","hostOptions","list","ImagePreview","handleSendImage","assignWidth","maxlength","messagePrompt","acceptBlank","InPlaceEdit","initialValue","handeTextChange","handleStartEditing","handlePasswordFinished","newValue","focus","checkValidity","fieldType","spanText","spanClass","Invitation","handleButtonAction","evt","LetterTile","isGroup","iconColor","abs","letter","charAt","LoadSpinner","MenuCancel","MenuContacts","MenuStart","MoreButton","handleToggle","invalid_id","NewTopicById","groupId","NewTopicGroup","handlePrivateChange","handleTagsChanged","handleChannelToggle","onTagsChanged","PermissionsEditor","joiner","writer","preser","approver","ReceivedMarker","sending","failed","marker","SearchContacts","edited","handleSearchChange","handleSearch","handleClear","search_placeholder","SendMessage","keypressTimestamp","getTime","handlePasteEvent","handleSend","handleMessageTyping","messageEditArea","shiftKey","messaging_disabled","type_new_message","attachImage","click","display","SideNavbar","TagManager","tagInput","handleTagInput","handleAddTag","handleRemoveTag","last","tag","maxTagCount","minTagLength","maxTagLength","add_tags_prompt","defautMessage","UnreadBadge","VisiblePassword","handleVisibility","activeElement","tabIndex","module","exports","ReactIntl","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","getter","__esModule","d","definition","o","defineProperty","enumerable","get","obj","prop","prototype","call","r","Symbol","toStringTag"],"mappings":"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","file":"index.dev.js","sourcesContent":["import { PACKAGE_VERSION } from './version.js';\n\n// Name of this application, used in the User-Agent.\nexport const APP_NAME = 'TinodeWeb/' + (PACKAGE_VERSION || '0.16');\n\n// API key. Use https://github.com/tinode/chat/tree/master/keygen to generate your own\nexport const API_KEY = 'AQEAAAABAAD_rAp4DJh05a1HAwFT3A6K';\n\n// The array of possible hosts to connect to.\nexport const KNOWN_HOSTS = {hosted: 'web.tinode.co', local: 'localhost:6060'};\n\n// Default host name and port to connect to.\nexport const DEFAULT_HOST = KNOWN_HOSTS.hosted;\n\n// Enable console logging.\nexport const LOGGING_ENABLED = true;\n\n// Minimum time between two keypress notifications, milliseconds.\nexport const KEYPRESS_DELAY = 3*1000;\n// Delay before sending a {note} for reciving a message, milliseconds.\nexport const RECEIVED_DELAY = 500;\n// Delay before sending a read notification, milliseconds.\nexport const READ_DELAY = 1000;\n\n// The shortest allowed tag length. Matches the value on the server.\nexport const MIN_TAG_LENGTH = 2;\n// The greatest allowed tag length. Matches the value on the server.\nexport const MAX_TAG_LENGTH = 96;\n// The maximum number of tags allowed. Matches the value on the server.\nexport const MAX_TAG_COUNT = 16;\n\n// Access mode for P2P subscriptions initiated by the current user.\nexport const DEFAULT_P2P_ACCESS_MODE = 'JRWPS';\n// Access mode for new group topics created by the current user.\nexport const NEW_GRP_ACCESS_MODE = 'JRWPSAO';\n// Access mode for a channel.\nexport const CHANNEL_ACCESS_MODE = 'JR';\n\n// Access mode for no access.\nexport const NO_ACCESS_MODE = 'N';\n\n// Mediaquery breakpoint between desktop and mobile, in px. Should match the value\n// in @media (max-size: 640px) in base.css\nexport const MEDIA_BREAKPOINT = 640;\n// Size of css 'rem' unit in pixels. Default 1rem = 10pt = 13px.\nexport const REM_SIZE = 13;\n\n// Size of the avatar image: When an avatar image is uploaded, it's resized to\n// a square of this size.\nexport const AVATAR_SIZE = 128;\n\n// Size of the broken_image shown in MessagesView\nexport const BROKEN_IMAGE_SIZE = 32;\n\n// Number of chat messages to fetch in one call.\nexport const MESSAGES_PAGE = 24;\n\n// Default maximum in-band (included directly into the message) attachment size which fits into\n// a message of 256K in size. The actual binary size of the attachment should be smaller due to\n// base64 encoding expansion and some overhead, for instance 1024 bytes.\n// Increase this limit to a greater value in production, if desired. Also increase\n// max_message_size in the server config.\nexport const MAX_INBAND_ATTACHMENT_SIZE = 262144;\n\n// Absolute maximum attachment size to be used with the server = 8MB. Increase to\n// something like 100MB in production.\nexport const MAX_EXTERN_ATTACHMENT_SIZE = 1 << 23;\n\n// Maximum allowed linear dimension of an inline image in pixels. Larer images will be shrunk\n// to make the larger dimension fit under this size. You may want to adjust it to 1600 or\n// 2400 for production.\nexport const MAX_IMAGE_DIM = 1024;\n\n// Linear dimensions of image preview: shrink image under this size for previews.\nexport const IMAGE_PREVIEW_DIM = 64;\n\n// Maximum number of online users to be shown in a topic title bar. Others will be\n// hidden under \"+X more\"\nexport const MAX_ONLINE_IN_TOPIC = 4;\n\n// Maximum length of user name, topic title, and private comment.\nexport const MAX_TITLE_LENGTH = 60;\n\n// Link for \"Contact Us\".\nexport const LINK_CONTACT_US = 'email:info@tinode.co';\n\n// Link to Privacy Policy.\nexport const LINK_PRIVACY_POLICY = 'https://tinode.co/privacy.html';\n\n// Link to Terms of Service.\nexport const LINK_TERMS_OF_SERVICE = 'https://tinode.co/terms.html';\n","// Put all packages together.\n// Used to generate umd/index.prod.js\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { IntlProvider } from 'react-intl';\n\nimport allMessages from './messages.json';\nimport TinodeWeb from './views/tinode-web.jsx';\nimport HashNavigation from './lib/navigation.js';\n\n// Detect human language to use in the UI:\n//  Check parameters from URL hash #?hl=ru, then browser, then use 'en' as a fallback.\nconst { params } = HashNavigation.parseUrlHash(window.location.hash);\nconst language = (params && params.hl) ||\n  (navigator.languages && navigator.languages[0]) ||\n  navigator.language ||\n  navigator.userLanguage ||\n  'en';\n\n// Get the base language 'en' from a more specific 'en_GB' or 'en-US' as a partial fallback.\nconst baseLanguage = language.toLowerCase().split(/[-_]/)[0];\n\n// Try the full locale first, then the locale without the region code, fallback to 'en'.\nconst messages =\n  allMessages[language] ||\n  allMessages[baseLanguage] ||\n  allMessages.en;\n\nReactDOM.render(\n  <IntlProvider locale={language} messages={messages} textComponent={React.Fragment}>\n    <TinodeWeb />\n  </IntlProvider>,\n  document.getElementById('mountPoint')\n);\n","// File and image helper functions.\nimport { MAX_INBAND_ATTACHMENT_SIZE, MAX_IMAGE_DIM } from '../config.js';\nimport { bytesToHumanSize } from './strformat.js'\n\n// Supported image MIME types and corresponding file extensions.\nexport const SUPPORTED_IMAGE_FORMATS = ['image/jpeg', 'image/gif', 'image/png', 'image/svg', 'image/svg+xml'];\nexport const MIME_EXTENSIONS         = ['jpg',        'gif',       'png',       'svg',       'svg'];\n\n// Make a data URL from public.photo\nexport function makeImageUrl(photo) {\n  return (photo && photo.type && photo.data) ?\n    'data:image/' + photo.type + ';base64,' + photo.data : null;\n}\n\n// Calculate linear dimensions for scaling image down to fit under a certain size.\n// Returns an object which contains destination sizes, source sizes, and offsets\n// into source (when making square images).\nexport function fitImageSize(width, height, maxWidth, maxHeight, forceSquare) {\n  // Sanitize input\n  width = width | 0;\n  height = height | 0;\n  maxWidth = maxWidth | 0;\n  maxHeight = maxHeight | 0;\n\n  if (width <= 0 || height <= 0 || maxWidth <= 0 || maxHeight <= 0) {\n    return null;\n  }\n\n  if (forceSquare) {\n    maxWidth = maxHeight = Math.min(maxWidth, maxHeight);\n  }\n\n  let scale = Math.min(\n    Math.min(width, maxWidth) / width,\n    Math.min(height, maxHeight) / height\n  );\n\n  let size = {\n    dstWidth: (width * scale) | 0,\n    dstHeight: (height * scale) | 0,\n  };\n\n  if (forceSquare) {\n    // Also calculate parameters for making the image square.\n    size.dstWidth = size.dstHeight = Math.min(size.dstWidth, size.dstHeight);\n    size.srcWidth = size.srcHeight = Math.min(width, height);\n    size.xoffset = ((width - size.srcWidth) / 2) | 0;\n    size.yoffset = ((height - size.srcWidth) / 2) | 0;\n  } else {\n    size.xoffset = size.yoffset = 0;\n    size.srcWidth = width;\n    size.srcHeight = height;\n  }\n  return size;\n}\n\n// Ensure file's extension matches mime content type\nexport function fileNameForMime(fname, mime) {\n  const idx = SUPPORTED_IMAGE_FORMATS.indexOf(mime);\n  if (idx < 0 || !fname) {\n    // Unknown mime or empty name.\n    return fname;\n  }\n  const ext = MIME_EXTENSIONS[idx];\n\n  const at = fname.lastIndexOf('.');\n  if (at >= 0) {\n    fname = fname.substring(0, at);\n  }\n  return fname + '.' + ext;\n}\n\n// Scale uploaded image to fit under certain dimensions and byte size, optionally constraining to a square.\n// On success calls onSuccess callback with the scaled image as Blob.\nexport function imageScaled(fileOrBlob, maxWidth, maxHeight, maxSize, forceSquare, onSuccess, onError) {\n  const img = new Image();\n  img.crossOrigin = 'Anonymous';\n  img.onerror = function(err) {\n    onError(\"Image format unrecognized\");\n  }\n  img.onload = async function() {\n    // Once the image is loaded, the URL is no longer needed.\n    URL.revokeObjectURL(img.src);\n\n    // Calculate the desired image dimensions.\n    const dim = fitImageSize(this.width, this.height, maxWidth, maxHeight, forceSquare);\n    if (!dim) {\n      onError(\"Invalid image\");\n      return;\n    }\n    let canvas = document.createElement('canvas');\n    canvas.width = dim.dstWidth;\n    canvas.height = dim.dstHeight;\n    let ctx = canvas.getContext('2d');\n    ctx.imageSmoothingEnabled = true;\n    ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n      0, 0, dim.dstWidth, dim.dstHeight);\n\n    const mime = SUPPORTED_IMAGE_FORMATS.indexOf(fileOrBlob.type) < 0 ? 'image/jpeg' : fileOrBlob.type;\n    // Generate blob to check size of the image.\n    let blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    if (!blob) {\n      onError(\"Unsupported image format\");\n      return;\n    }\n\n    // Ensure the image is not too large. Shrink the image keeping the aspect ratio.\n    // Do nothing if maxsize is <= 0.\n    while (maxSize > 0 && blob.length > maxSize) {\n      dim.dstWidth = (dim.dstWidth * 0.70710678118) | 0;\n      dim.dstHeight = (dim.dstHeight * 0.70710678118) | 0;\n      canvas.width = dim.dstWidth;\n      canvas.height = dim.dstHeight;\n      ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n        0, 0, dim.dstWidth, dim.dstHeight);\n      blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    }\n\n    canvas = null;\n    onSuccess(blob, mime, dim.dstWidth, dim.dstHeight, fileNameForMime(fileOrBlob.name, mime));\n  };\n  img.src = URL.createObjectURL(fileOrBlob);\n}\n\n// Convert File to base64 string.\nexport function fileToBase64(file, onSuccess) {\n  const reader = new FileReader();\n  reader.addEventListener('load', function() {\n    onSuccess(file.type, reader.result.split(',')[1], file.name);\n  });\n  reader.readAsDataURL(file);\n}\n\n// Convert Blob to base64 string.\nexport function blobToBase64(blob, onSuccess) {\n  const reader = new FileReader();\n  reader.addEventListener('load', function() {\n    onSuccess(blob.type, reader.result.split(',')[1]);\n  });\n  reader.readAsDataURL(blob);\n}\n\n// File pasted from the clipboard. It's either an inline image or a file attachment.\n// FIXME: handle large files out of band.\nexport function filePasted(event, onImageSuccess, onAttachmentSuccess, onError) {\n  var items = (event.clipboardData || event.originalEvent.clipboardData || {}).items;\n  for (var i in items) {\n    var item = items[i];\n    if (item.kind === 'file') {\n      var file = item.getAsFile();\n      if (!file) {\n        console.log(\"Failed to get file object from pasted file item\", item.kind, item.type);\n        continue;\n      }\n      if (file.type && file.type.split('/')[0] == 'image') {\n        // Handle inline image\n        if (file.size > MAX_INBAND_ATTACHMENT_SIZE || SUPPORTED_IMAGE_FORMATS.indexOf(file.type) < 0) {\n          imageFileScaledToBase64(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, false, onImageSuccess, onError);\n        } else {\n          imageFileToBase64(file, onImageSuccess, onError);\n        }\n      } else {\n        // Handle file attachment\n        fileToBase64(file, onAttachmentSuccess, onError)\n      }\n      // Indicate that the pasted data contains a file.\n      return true;\n    }\n  }\n  // No file found.\n  return false;\n}\n\n// Get mime type from data URL header.\nexport function getMimeType(header) {\n  var mime = /^data:(image\\/[-+a-z0-9.]+);base64/.exec(header);\n  return (mime && mime.length > 1) ? mime[1] : null;\n}\n\n// Given length of a binary object in bytes, calculate the length after\n// base64 encoding.\nexport function base64EncodedLen(n) {\n  return Math.floor((n + 2) / 3) * 4;\n}\n\n// Given length of a base64-encoded object, calculate decoded size of the\n// pbject in bytes.\nexport function base64DecodedLen(n) {\n  return Math.floor(n / 4) * 3;\n}\n\n// Re-encode string to standard base64 encoding with padding.\n// The string may be base64-URL encoded without the padding.\nexport function base64ReEncode(str) {\n  if (str) {\n    str = str.replace(/-/g, '+').replace(/_/g, '/');\n    try {\n      str = btoa(atob(str));\n    } catch(err) {\n      console.log(\"Failed to base64 re-encode string.\", err);\n      str = null;\n    }\n  }\n  return str;\n}\n","import { KNOWN_HOSTS, DEFAULT_HOST } from '../config.js';\n\n// Detect server address from the URL\nexport function detectServerAddress() {\n  let host = DEFAULT_HOST;\n  if (typeof window.location == 'object') {\n    if (window.location.protocol == 'file:' || window.location.hostname == 'localhost') {\n      host = KNOWN_HOSTS.local;\n    } else if (window.location.hostname) {\n      host = window.location.hostname + (window.location.port ? ':' + window.location.port : '');\n    }\n  }\n  return host;\n}\n\n// Detect if the page is served over HTTPS.\nexport function isSecureConnection() {\n  if (typeof window.location == 'object') {\n    return window.location.protocol == 'https:';\n  }\n  return false;\n}\n\nexport function isLocalHost() {\n  if (typeof window.location == 'object') {\n    return window.location.hostname == 'localhost';\n  }\n  return false;\n}\n","// Helper functions for storing values in localStorage.\n// By default localStorage can store only strings, not objects or other types.\n\nexport default class LocalStorageUtil {\n  // Replace old object with the new one.\n  static setObject(key, value) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n\n  // Get stored object.\n  static getObject(key) {\n    const value = localStorage.getItem(key);\n    return value && JSON.parse(value);\n  }\n\n  // Partially or wholly update stored object.\n  static updateObject(key, value) {\n    const oldVal = this.getObject(key);\n    this.setObject(key, Object.assign(oldVal || {}, value));\n  }\n\n  // Just a wrapper.\n  static removeItem(key) {\n    localStorage.removeItem(key);\n  }\n}\n","// Utility class for hash navigation.\n\n// Parse hash as in http://www.example.com/path#hash as if it were\n// path and arguments.\nexport default class HashNavigation {\n  static parseUrlHash(hash) {\n    // Split path from args, path -> parts[0], args->path[1]\n    const parts = hash.split('?', 2);\n    const params = {};\n    let path = [];\n    if (parts[0]) {\n      path = parts[0].substr(1).split('/');\n    }\n    if (parts[1]) {\n      parts[1].split('&').forEach(function(part) {\n        let item = part.split('=');\n        if (item[0]) {\n          params[decodeURIComponent(item[0])] = decodeURIComponent(item[1]);\n        }\n      });\n    }\n    return {path: path, params: params};\n  }\n\n  static navigateTo(url) {\n    window.location.hash = url;\n  }\n\n  static composeUrlHash(path, params) {\n    let url = path.join('/');\n    const args = [];\n    for (const key in params) {\n      if (params.hasOwnProperty(key)) {\n        args.push(key + '=' + params[key]);\n      }\n    }\n    if (args.length > 0) {\n      url += '?' + args.join('&');\n    }\n    return url;\n  }\n\n  static addUrlParam(hash, key, value) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.params[key] = value;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static removeUrlParam(hash, key) {\n    const parsed = this.parseUrlHash(hash);\n    delete parsed.params[key];\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlSidePanel(hash, sidepanel) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[0] = sidepanel;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlTopic(hash, topic) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[1] = topic;\n    // Close InfoView on topic change.\n    delete parsed.params.info;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n}\n","// Short representation of time in the past.\nexport function shortDateFormat(then, locale) {\n  locale = locale || window.navigator.userLanguage || window.navigator.language;\n  const now = new Date();\n  if (then.getFullYear() == now.getFullYear()) {\n    if (then.getMonth() == now.getMonth() && then.getDate() == now.getDate()) {\n\t    return then.toLocaleTimeString(locale, {hour12: false, hour: '2-digit', minute: '2-digit'});\n    } else {\n\t    return then.toLocaleDateString(locale,\n        {hour12: false, month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit'});\n    }\n  }\n  return then.toLocaleDateString(locale,\n    {hour12: false, year: 'numeric', month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit'});\n}\n\n// Convert seconds to minutes:seconds, i.e. 156 sec -> 2:36.\nexport function secondsToTime(seconds) {\n  const min = Math.floor(seconds / 60);\n  let sec = seconds % 60;\n  sec = sec < 10 ? `0${sec}` : sec;\n  return `${min}:${sec}`;\n}\n\n// Convert a number of bytes to human-readable format.\nexport function bytesToHumanSize(bytes) {\n  if (!bytes || bytes == 0) {\n    return '0 Bytes';\n  }\n\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n  const bucket = Math.min(Math.floor(Math.log2(bytes) / 10) | 0, sizes.length-1);\n  const count = bytes / Math.pow(1024, bucket);\n  const round = bucket > 0 ? (count < 3 ? 2 : (count < 30 ? 1 : 0)) : 0;\n  return count.toFixed(round) + ' ' + sizes[bucket];\n}\n\n// Get 32 bit integer hash value for a string. Ideally it should produce the same value\n// as Java's String#hash().\nexport function stringHash(value) {\n  let hash = 0;\n  value = '' + value;\n  for (let i = 0; i < value.length; i++) {\n    hash = ((hash << 5) - hash) + value.charCodeAt(i);\n    hash = hash & hash; // Convert to 32bit integer\n  }\n  return hash;\n}\n","// Odds and ends\n\n// Make shortcut icon appear with a green dot + show unread count in title.\nexport function updateFavicon(count) {\n  const oldIcon = document.getElementById('shortcut-icon');\n  const head = document.head || document.getElementsByTagName('head')[0];\n  const newIcon = document.createElement('link');\n  newIcon.type = 'image/png';\n  newIcon.id = 'shortcut-icon';\n  newIcon.rel = 'shortcut icon';\n  newIcon.href = 'img/logo32x32' + (count > 0 ? 'a' : '') + '.png';\n  if (oldIcon) {\n    head.removeChild(oldIcon);\n  }\n  head.appendChild(newIcon);\n\n  document.title = (count > 0 ? '('+count+') ' : '') + 'Tinode';\n}\n\n// Create VCard which represents topic 'public' info\nexport function vcard(fn, imageDataUrl) {\n  let card = null;\n\n  if ((fn && fn.trim()) || imageDataUrl) {\n    card = {};\n    if (fn) {\n      card.fn = fn.trim();\n    }\n    if (imageDataUrl) {\n      const dataStart = imageDataUrl.indexOf(',');\n      card.photo = dataStart >= 0 ? {\n        data: imageDataUrl.substring(dataStart+1),\n        type: 'jpg'\n      } : imageDataUrl;\n    }\n  }\n  return card;\n}\n\n// Deep-shallow compare two arrays: shallow compare each element.\nexport function arrayEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (!Array.isArray(a) || !Array.isArray(b)) {\n    return false;\n  }\n\n  // Compare lengths first.\n  if (a.length != b.length) {\n    return false;\n  }\n  // Order of elements is ignored.\n  a.sort();\n  b.sort();\n  for (let i = 0, l = a.length; i < l; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Checks (loosely) if the given string is a phone. If so, returns the phone number in a format\n// as close to E.164 as possible.\nexport function asPhone(val) {\n  val = val.trim();\n  if (/^(?:\\+?(\\d{1,3}))?[- (.]*(\\d{3})[- ).]*(\\d{3})[- .]*(\\d{2})[- .]*(\\d{2})?$/.test(val)) {\n    return val.replace(/[- ().]*/, '');\n  }\n  return null;\n}\n\n// Checks (loosely) if the given string is an email. If so returns the email.\nexport function asEmail(val) {\n  val = val.trim();\n  if (/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(val)) {\n    return val;\n  }\n  return null;\n}\n\n// Checks if URL is a relative url, i.e. has no 'scheme://', including the case of missing scheme '//'.\n// The scheme is expected to be RFC-compliant, e.g. [a-z][a-z0-9+.-]*\n// example.html - ok\n// https:example.com - not ok.\n// http:/example.com - not ok.\n// ' ↲ https://example.com' - not ok. (↲ means carriage return)\nexport function isUrlRelative(url) {\n  return url && !/^\\s*([a-z][a-z0-9+.-]*:|\\/\\/)/im.test(url);\n}\n\n// Ensure URL does not present an XSS risk. Optional allowedSchemes may contain an array of\n// strings with permitted URL schemes, such as ['ftp', 'ftps']; otherwise accept http and https only.\n// If apikey and/or token is defined, it's appended to relative URL.\nexport function sanitizeUrl(url, allowedSchemes) {\n  if (!url) {\n    return null;\n  }\n\n  // Strip control characters and whitespace. They are not valid URL characters anyway.\n  url = url.replace(/[^\\x20-\\x7E]/gmi, '').trim();\n\n  // Relative URLs are safe.\n  // Relative URL does not start with ':', abcd123: or '//'.\n  if (!/^([a-z][a-z0-9+.-]*:|\\/\\/)/i.test(url)) {\n    return url;\n  }\n\n  // Blob URLs are safe.\n  if (/^blob:http/.test(url)) {\n    return url;\n  }\n\n  // Absolute URL. Accept only safe schemes, or no scheme.\n  const schemes = Array.isArray(allowedSchemes) ? allowedSchemes.join('|') : 'http|https';\n  const re = new RegExp('^((' + schemes + '):|//)', 'i');\n  if (!re.test(url)) {\n    return null;\n  }\n\n  return url;\n}\n\n// Ensure URL is suitable for <img src=\"url\"> field: the URL must be a relative URL or\n// have http:, https:, blob: or data: scheme.\n// The relative URL is appended with the API key and/or auth token.\n// In case of data: scheme, the URL must start with a 'data:image/XXXX;base64,'.\nexport function sanitizeImageUrl(url) {\n  if (!url) {\n    return null;\n  }\n\n  const sanitizedUrl = sanitizeUrl(url);\n  if (sanitizedUrl) {\n    return sanitizedUrl;\n  }\n\n  // Is this a data: URL of an image?\n  if (/data:image\\/[a-z0-9.-]+;base64,/i.test(url.trim())) {\n    return url;\n  }\n\n  return null;\n}\n","// This is a generated file. Don't edit.\n\nexport const PACKAGE_VERSION = \"0.16.10\";\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport TagManager from '../widgets/tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, asEmail, asPhone, vcard } from '../lib/utils.js';\n\nexport default class AccGeneralView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    this.state = {\n      fullName: me.public ? me.public.fn : undefined,\n      avatar: makeImageUrl(me.public ? me.public.photo : null),\n      tags: me.tags(),\n      credentials: me.getCredentials() || [],\n      addCredActive: false,\n      addCredInvalid: false,\n      newCred: '',\n      previousOnTags: me.onTagsUpdated\n    };\n\n    this.tnNewTags = this.tnNewTags.bind(this);\n    this.tnCredsUpdated = this.tnCredsUpdated.bind(this);\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleCredChange = this.handleCredChange.bind(this);\n    this.handleCredKeyDown = this.handleCredKeyDown.bind(this);\n    this.handleCredEntered = this.handleCredEntered.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n  }\n\n  componentDidMount() {\n    const me = this.props.tinode.getMeTopic();\n    me.onCredsUpdated = this.tnCredsUpdated;\n    me.onTagsUpdated = this.tnNewTags;\n  }\n\n  componentWillUnmount() {\n    const me = this.props.tinode.getMeTopic();\n    me.onTagsUpdated = this.state.previousOnTags;\n    me.onCredsUpdated = undefined;\n  }\n\n  tnNewTags(tags) {\n    this.setState({tags: tags});\n  }\n\n  tnCredsUpdated(creds) {\n    this.setState({credentials: creds || []});\n  }\n\n  handleFullNameUpdate(fn) {\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\n    if (fn) {\n      this.setState({fullName: fn});\n      this.props.onUpdateAccount(undefined, vcard(fn, null));\n    }\n  }\n\n  handleImageChanged(img) {\n    this.setState({avatar: img});\n    this.props.onUpdateAccount(undefined, vcard(null, img || Tinode.DEL_CHAR));\n  }\n\n  handleCredChange(e) {\n    this.setState({newCred: e.target.value, addCredInvalid: false});\n  }\n\n  handleCredKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({newCred: '', addCredActive: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleCredEntered(e);\n    }\n  }\n\n  handleCredEntered(e) {\n    let value = this.state.newCred.trim();\n    if (!value) {\n      this.setState({addCredActive: false, addCredInvalid: false});\n      return;\n    }\n\n    let val = asPhone(value);\n    let method;\n    if (val) {\n      method = 'tel';\n    } else {\n      val = asEmail(value);\n      if (val) {\n        method = 'email';\n      }\n    }\n    if (method) {\n      this.props.onCredAdd(method, val);\n      this.setState({addCredActive: false, newCred: ''});\n    } else {\n      this.setState({addCredInvalid: true});\n    }\n  }\n\n  handleTagsUpdated(tags) {\n    // Check if tags have actually changed.\n    if (arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      return;\n    }\n    this.props.onUpdateTags(tags);\n  }\n\n  render() {\n    const credentials = [];\n    this.state.credentials.map((cred) => {\n      credentials.push(<div key={cred.meth + \":\" + cred.val + \":\" + cred.done}>{cred.meth}: <tt>{cred.val}</tt>\n        <span > {!cred.done ?\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredConfirm(cred.meth, cred.val);}}>\n              <FormattedMessage id=\"validate_credential_action\" defaultMessage=\"confirm\"\n                description=\"Validate credentail call to action\" />\n            </a>\n          : null} <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredDelete(cred.meth, cred.val);}}><i\n            className=\"material-icons gray\">delete_outline</i></a></span></div>);\n    });\n\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\"><FormattedMessage id=\"label_your_name\" /></label>\n            <div><FormattedMessage id=\"full_name_prompt\">{\n              (full_name_placeholder) => <InPlaceEdit\n                placeholder={full_name_placeholder}\n                value={this.state.fullName}\n                onFinished={this.handleFullNameUpdate} />\n            }</FormattedMessage></div>\n          </div>\n          <AvatarUpload\n            avatar={this.state.avatar}\n            uid={this.props.myUserId}\n            title={this.state.fullName}\n            onImageChanged={this.handleImageChanged}\n            onError={this.props.onError} />\n        </div>\n        <div className=\"hr\" />\n        <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (user discovery)\"\n          description=\"Section title for TagManager\">{\n          (title_tag_manager) => <TagManager\n            title={title_tag_manager}\n            activated={false}\n            tags={this.state.tags}\n            tinode={this.props.tinode}\n            onSubmit={this.handleTagsUpdated} />\n        }</FormattedMessage>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_user_contacts\" defaultMessage=\"Contacts:\"\n            description=\"Label for user contacts\" />\n          </label>\n          <div className=\"quoted\">\n            {credentials}\n            {this.state.addCredActive ?\n              <input type=\"text\" value={this.state.value}\n                className={this.state.addCredInvalid ? 'invalid' : null}\n                placeholder=\"Phone number or email\" required=\"required\" autoFocus\n                onChange={this.handleCredChange} onKeyDown={this.handleCredKeyDown} onBlur={this.handleCredEntered} />\n              : null}\n            <div>\n              <a href=\"#\" onClick={(e) => {e.preventDefault(); this.setState({addCredActive: true});}}>\n                <i className=\"material-icons\">add</i>\n                <FormattedMessage id=\"button_add_another\" defaultMessage=\"Add another\" description=\"Call to action [+ add another]\" />\n              </a></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\n\nexport default class EditAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckboxClick = this.handleCheckboxClick.bind(this);\n  }\n\n  handleCheckboxClick(what, checked) {\n    if (what == 'sound') {\n      this.props.onToggleMessageSounds(checked);\n    } else if (what == 'alert') {\n      this.props.onTogglePushNotifications(checked);\n    } else if (what == 'incognito') {\n      this.props.onToggleIncognitoMode(checked);\n    }\n  }\n\n  render() {\n    return (\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"message-sound\">\n              <FormattedMessage id=\"label_message_sound\" defaultMessage=\"Message sound:\"\n                description=\"Label for message sounds toggle\" />\n            </label>\n            <CheckBox name=\"sound\" id=\"message-sound\"\n              checked={this.props.messageSounds} onChange={this.handleCheckboxClick} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"desktop-alerts\">\n            {this.props.desktopAlertsEnabled ?\n              <FormattedMessage id=\"label_push_notifications\" defaultMessage=\"Notification alerts:\"\n                description=\"Label for push notifications switch\" />\n              :\n              <FormattedMessage id=\"label_push_notifications_disabled\"\n                defaultMessage=\"Notification alerts (requires HTTPS):\"\n                description=\"Label for push notifications switch\" />\n            }\n            </label>\n            <CheckBox name=\"alert\" id=\"desktop-alerts\"\n              checked={this.props.desktopAlerts}\n              onChange={this.props.desktopAlertsEnabled ? this.handleCheckboxClick : null} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"incognito-mode\">\n              <FormattedMessage id=\"label_incognito_mode\" defaultMessage=\"Incognito mode:\"\n                description=\"Label for incognito mode toggle\" />\n            </label>\n            <CheckBox name=\"incognito\" id=\"incognito-mode\"\n              checked={this.props.incognitoMode} onChange={this.handleCheckboxClick} />\n          </div>\n        </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\n\nconst messages = defineMessages({\n  delete_account: {\n    id: 'delete_account',\n    defaultMessage: 'Delete account',\n    description: 'Title for delete account warning'\n  },\n  delete_account_warning: {\n    id: 'delete_account_arning',\n    defaultMessage: 'Are you sure you want to delete your account? It cannot be undone.',\n    description: 'Warning message when deleting an account'\n  }\n});\n\nclass AccSecurityView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    let blockedCount = 0;\n    me.contacts((c) => {\n      if (c.acs && !c.acs.isJoiner()) {\n        blockedCount ++;\n      }\n    });\n    const defacs = me.getDefaultAccess();\n    this.state = {\n      auth: defacs ? defacs.auth : null,\n      anon: defacs ? defacs.anon : null,\n      showPermissionEditorFor: undefined,\n      blockedCount: blockedCount,\n    };\n\n    this.handlePasswordUpdate = this.handlePasswordUpdate.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n  }\n\n  handlePasswordUpdate(pwd) {\n    this.setState({password: pwd});\n    this.props.onUpdateAccount(pwd);\n  }\n\n  handleLaunchPermissionsEditor(which) {\n    this.setState({\n      showPermissionEditorFor: which,\n      editedPermissions: this.state[which]\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handlePermissionsChanged(perm) {\n    let defacs = {};\n    defacs[this.state.showPermissionEditorFor] = perm;\n    this.props.onUpdateAccount(undefined, undefined, defacs);\n\n    let newState = {showPermissionEditorFor: undefined};\n    newState[this.state.showPermissionEditorFor] = perm;\n    this.setState(newState);\n  }\n\n  handleDeleteAccount(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.delete_account), // title\n      formatMessage(messages.delete_account_warning), // content\n      (() => { this.props.onDeleteAccount(); }), // onConfirm\n      null, // use default text \"OK\"\n      true, // Show Reject button\n      null  // use default text \"Cancel\"\n    );\n  }\n\n  render() {\n    return (\n      <React.Fragment>{this.state.showPermissionEditorFor ?\n        <PermissionsEditor\n          mode={this.state.editedPermissions}\n          skip=\"O\"\n          onSubmit={this.handlePermissionsChanged}\n          onCancel={this.handleHidePermissionsEditor} />\n        :\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_password\" defaultMessage=\"Password\"\n                  description=\"Label for password editing\" />\n            </label>\n            <div>\n              <FormattedMessage id=\"password_unchanged_prompt\" defaultMessage=\"Unchanged\"\n                description=\"Message in editor while password is unchanged\">{\n                (password_unchanged) => <InPlaceEdit\n                  placeholder={password_unchanged}\n                  type=\"password\"\n                  onFinished={this.handlePasswordUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <a href=\"#\" className=\"red flat-button\" onClick={(e) => {e.preventDefault(); this.props.onLogout();}}>\n              <i className=\"material-icons\">exit_to_app</i> &nbsp;<FormattedMessage id=\"button_logout\"\n                defaultMessage=\"Logout\" description=\"Button [Logout]\" />\n            </a>\n            <a href=\"#\" className=\"red flat-button\" onClick={(e) => {this.handleDeleteAccount(e);}}>\n              <i className=\"material-icons\">delete</i> &nbsp;<FormattedMessage id=\"button_delete_account\"\n                defaultMessage=\"Delete account\" description=\"Button [Delete account]\" />\n            </a>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <div>\n              <label className=\"small\">\n                <FormattedMessage id=\"label_default_access_mode\" defaultMessage=\"Default access mode:\"\n                description=\"Label for default access mode\" />\n              </label>\n            </div>\n            <div className=\"quoted\">\n              <div>Auth: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>{this.state.auth}</tt></div>\n              <div>Anon: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>{this.state.anon}</tt></div>\n            </div>\n          </div>\n          {this.state.blockedCount > 0 ?\n            <>\n              <div className=\"hr\" />\n              <div className=\"panel-form-row\">\n                <i className=\"material-icons\">block</i>&nbsp;\n                <a href=\"#\" className=\"gray\" onClick={(e) => {e.preventDefault(); this.props.onShowBlocked();}}>\n                  <FormattedMessage id=\"blocked_contacts_link\" defaultMessage=\"Blocked contacts ({count})\"\n                    values={{ count: this.state.blockedCount }} description=\"Blocked contacts link\" />\n                </a>\n              </div>\n            </>\n            : null }\n        </div>\n      }</React.Fragment>\n    );\n  }\n};\n\nexport default injectIntl(AccSecurityView);\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME, LINK_CONTACT_US, LINK_PRIVACY_POLICY, LINK_TERMS_OF_SERVICE } from '../config.js';\n\nexport default class AccSupportView extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          <a href={LINK_CONTACT_US} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">email</i> &nbsp;<FormattedMessage id=\"link_contact_us\"\n              defaultMessage=\"Contact Us\" description=\"Ancor text for contacting us by email\" />\n          </a>\n          <a href={LINK_TERMS_OF_SERVICE} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">description</i> &nbsp;<FormattedMessage id=\"link_terms_of_service\"\n              defaultMessage=\"Terms of Service\" description=\"Ancor text for terms of service link\" />\n          </a>\n          <a href={LINK_PRIVACY_POLICY} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">policy</i> &nbsp;<FormattedMessage id=\"link_privacy_policy\"\n              defaultMessage=\"Privacy Policy\" description=\"Ancor text for privacy policy link\" />\n          </a>\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_client\" /></label>\n            {APP_NAME}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_sdk\" defaultMessage=\"SDK:\" /></label>\n            {Tinode.getLibrary()}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server\" /></label>\n            {this.props.serverVersion}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server_address\" defaultMessage=\"Server address:\" /></label>\n            {this.props.serverAddress}\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","/* ContactsView holds all contacts-related stuff */\nimport React from 'react';\nimport { FormattedMessage, defineMessages } from 'react-intl';\n\nimport ContactList from '../widgets/contact-list.jsx';\n\nimport { updateFavicon } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  archived_contacts_title: {\n    id: \"archived_contacts\",\n    defaultMessage: \"Archived contacts ({count})\",\n    description: \"Label for archived chats\"\n  }\n});\n\nexport default class ContactsView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAction = this.handleAction.bind(this);\n\n    this.state = ContactsView.deriveStateFromProps(props);\n  }\n\n  static deriveStateFromProps(props) {\n    const contacts = [];\n    let unreadThreads = 0;\n    let archivedCount = 0;\n    props.chatList.map((c) => {\n      const blocked = c.acs && !c.acs.isJoiner();\n      // Show only blocked contacts only when props.blocked == true.\n      if (blocked && props.blocked) {\n        contacts.push(c);\n      }\n      if (blocked || props.blocked) {\n        return;\n      }\n\n      if (c.private && c.private.arch) {\n        if (props.archive) {\n          contacts.push(c);\n        } else {\n          archivedCount ++;\n        }\n      } else if (!props.archive) {\n        contacts.push(c);\n        unreadThreads += c.unread > 0 ? 1 : 0;\n      }\n    });\n\n    contacts.sort((a, b) => {\n      return (b.touched || 0) - (a.touched || 0);\n    });\n\n    if (archivedCount > 0) {\n      contacts.push({\n        action: 'archive',\n        title: messages.archived_contacts_title,\n        values: {count: archivedCount}\n      });\n    }\n\n    return {\n      contactList: contacts,\n      unreadThreads: unreadThreads\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chatList != this.props.chatList ||\n        prevProps.archive != this.props.archive ||\n        prevProps.blocked != this.props.blocked) {\n      const newState = ContactsView.deriveStateFromProps(this.props);\n      this.setState(newState);\n      if (newState.unreadThreads != prevState.unreadThreads) {\n        updateFavicon(newState.unreadThreads);\n      }\n    }\n  }\n\n  handleAction(action_ignored) {\n    this.props.onShowArchive();\n  }\n\n  render() {\n    return (\n      <FormattedMessage id=\"contacts_not_found\"\n        defaultMessage=\"You have no chats<br />¯∖_(ツ)_/¯\"\n        description=\"HTML message shown in ContactList when no contacts are found\">{\n        (no_contacts) => <ContactList\n          connected={this.props.connected}\n          contacts={this.state.contactList}\n          emptyListMessage={no_contacts}\n          topicSelected={this.props.topicSelected}\n          myUserId={this.props.myUserId}\n          showOnline={true}\n          showUnread={true}\n          onTopicSelected={this.props.onTopicSelected}\n          showContextMenu={this.props.showContextMenu}\n          onAction={this.handleAction} />\n      }</FormattedMessage>\n    );\n  }\n};\n","// Account registration.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport { vcard } from '../lib/utils.js';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class CreateAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: '',\n      password: '',\n      email: '',\n      fn: '', // full/formatted name\n      imageDataUrl: null,\n      errorCleared: false,\n      saveToken: LocalStorageUtil.getObject('keep-logged-in')\n    };\n\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(password) {\n    this.setState({password: password});\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value})\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleToggleSaveToken() {\n    LocalStorageUtil.setObject('keep-logged-in', !this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({errorCleared: false});\n    this.props.onCreateAccount(\n      this.state.login.trim(),\n      this.state.password.trim(),\n      vcard(this.state.fn.trim().substring(0, MAX_TITLE_LENGTH), this.state.imageDataUrl),\n      {'meth': 'email', 'val': this.state.email});\n  }\n\n  render() {\n    let submitClasses = 'blue';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form className=\"panel-form-column\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <FormattedMessage id=\"login_prompt\">{\n              (login_prompt) => <input type=\"text\" placeholder={login_prompt} autoComplete=\"user-name\"\n                value={this.state.login} onChange={this.handleLoginChange} required autoFocus />\n            }</FormattedMessage>\n            <FormattedMessage id=\"password_prompt\">{\n              (password_prompt) => <VisiblePassword placeholder={password_prompt} autoComplete=\"new-password\"\n                value={this.state.password} onFinished={this.handlePasswordChange}\n                required={true} />\n            }</FormattedMessage>\n          </div>\n          <AvatarUpload\n            onImageChanged={this.handleImageChanged}\n            onError={this.props.onError} />\n        </div>\n        <div  className=\"panel-form-row\">\n          <FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n            description=\"Input placeholder for person's full name\">{\n            (full_name_prompt) => <input type=\"text\" placeholder={full_name_prompt} autoComplete=\"name\"\n              value={this.state.fn} onChange={this.handleFnChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <FormattedMessage id=\"email_prompt\" defaultMessage=\"Email, e.g. jdoe@example.com\"\n            description=\"Input placeholder for email entry\">{\n            (email_prompt) => <input type=\"email\" placeholder={email_prompt} autoComplete=\"email\"\n              value={this.state.email} onChange={this.handleEmailChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <FormattedMessage id=\"stay_logged_in\">{\n            (stay_logged_in) => <label htmlFor=\"save-token\">&nbsp;{stay_logged_in}</label>\n          }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_up\" defaultMessage=\"Sign up\"\n              description=\"Create account button [Sign Up]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class EditAccountView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    this.state = {\n      fullName: me.public ? me.public.fn : undefined,\n      avatar: makeImageUrl(me.public ? me.public.photo : null)\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n                description=\"Label for full name editing\" />\n            </label>\n            <div className=\"large\">{this.state.fullName}</div>\n            <div>\n              <label className=\"small\"><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n                description=\"Label for user address (ID)\" /></label>&nbsp;\n              <tt>{this.props.myUserId}</tt>\n            </div>\n          </div>\n          <AvatarUpload\n            avatar={this.state.avatar}\n            readOnly={!this.state.owner}\n            uid={this.props.myUserId}\n            title={this.state.fullName} />\n        </div>\n        <div className=\"panel-form-row\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('general');}}>\n            <i className=\"material-icons\">edit</i>&nbsp;\n            <FormattedMessage id=\"button_edit\" defaultMessage=\"Edit\" description=\"Call to action [Edit]\" />\n          </a>\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('notif');}}>\n            <i className=\"material-icons\">notifications</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_notifications\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('security');}}>\n            <i className=\"material-icons\">security</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_security\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('support');}}>\n            <i className=\"material-icons\">contact_support</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_support\" />\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","// InfoView: panel with topic/user info.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport ContactList from '../widgets/contact-list.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupManager from '../widgets/group-manager.jsx';\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport MenuCancel from '../widgets/menu-cancel.jsx';\nimport MoreButton from '../widgets/more-button.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\nimport TagManager from '../widgets/tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH, NO_ACCESS_MODE } from '../config.js';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, vcard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  requested: {\n    id: 'requested_permissions',\n    defaultMessage: 'Requested',\n    description: 'Title for permissions'\n  },\n  granted: {\n    id: 'granted_permissions',\n    defaultMessage: 'Granted',\n    description: 'Title for permissions'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n  other_user: {\n    id: 'label_other_user',\n    defaultMessage: 'Other',\n    description: 'Label for the other user when the user is unnamed'\n  },\n  clear_messages: {\n    id: 'action_clear_messages',\n    defaultMessage: 'Clear Messages',\n    description: 'Flat button [Clear Messages] (soft-delete messages)'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n  delete_messages: {\n    id: 'action_delete_messages',\n    defaultMessage: 'Clear Messages for All',\n    description: 'Flat button [Clear for All] (hard-delete all messages)'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  leave_chat: {\n    id: 'action_leave_chat',\n    defaultMessage: 'Leave Conversation',\n    description: 'Flat button [Leave Conversation]'\n  },\n  leave_chat_warning: {\n    id: 'leave_chat_warning',\n    defaultMessage: 'Are you sure you want to leave this conversation?',\n    description: 'Alert dialog warning when unsubscribing from a chat.'\n  },\n  block_contact: {\n    id: 'action_block_contact',\n    defaultMessage: \"Block Contact\",\n    description: \"Flat button [Block Contact]\"\n  },\n  block_contact_warning: {\n    id: 'block_contact_warning',\n    defaultMessage: 'Are you sure you want to block this contact?',\n    description: 'Alert dialog warning when blocking a contact.'\n  },\n  report_chat: {\n    id: 'action_report_chat',\n    defaultMessage: 'Report Conversation',\n    description: 'Flat button [Report Group]'\n  },\n  report_chat_warning: {\n    id: 'report_chat_warning',\n    defaultMessage: 'Are you sure you want to block and report this conversation?',\n    description: 'Alert dialog warning when reporting a conversation for abuse'\n  },\n});\n\nclass InfoView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      topic: null,\n      owner: false,\n      admin: false,\n      sharer: false,\n      deleter: false,\n      muted: false,\n      address: null,\n      groupTopic: undefined,\n      channel: undefined,\n      fullName: undefined,\n      avatar: null,\n      private: null,\n      selectedContact: null,\n      access: null,\n      modeGiven: null,\n      modeWant: null,\n      modeGiven2: null, // P2P topic, the other user mode given\n      modeWant2: null,  // P2P topic, the other user mode want\n      auth: null,\n      anon: null,\n      contactList: [],\n      tags: [],\n      showMemberPanel: false,\n      showPermissionEditorFor: undefined,\n      moreInfoExpanded: false,\n      previousMetaDesc: undefined,\n      previousSubsUpdated: undefined,\n      previousTagsUpdated: undefined\n    };\n\n    this.resetSubs = this.resetSubs.bind(this);\n    this.resetDesc = this.resetDesc.bind(this);\n    this.onMetaDesc = this.onMetaDesc.bind(this);\n    this.onSubsUpdated = this.onSubsUpdated.bind(this);\n    this.onTagsUpdated = this.onTagsUpdated.bind(this);\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\n    this.handlePrivateUpdate = this.handlePrivateUpdate.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleMuted = this.handleMuted.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handleShowAddMembers = this.handleShowAddMembers.bind(this);\n    this.handleHideAddMembers = this.handleHideAddMembers.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleDeleteMessages = this.handleDeleteMessages.bind(this);\n    this.handleLeave = this.handleLeave.bind(this);\n    this.handleBlock = this.handleBlock.bind(this);\n    this.handleReport = this.handleReport.bind(this);\n    this.handleMemberSelected = this.handleMemberSelected.bind(this);\n    this.handleMoreInfo = this.handleMoreInfo.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.handleContextMenu = this.handleContextMenu.bind(this);\n  }\n\n  // No need to separately handle component mount.\n  componentDidUpdate(props) {\n    const topic = this.props.tinode.getTopic(props.topic);\n    if (!topic) {\n      return;\n    }\n\n    if (this.onMetaDesc != topic.onMetaDesc) {\n      this.previousMetaDesc = topic.onMetaDesc;\n      topic.onMetaDesc = this.onMetaDesc;\n\n      this.previousSubsUpdated = topic.onSubsUpdated;\n      topic.onSubsUpdated = this.onSubsUpdated;\n\n      if (topic.getType() == 'grp') {\n        this.previousTagsUpdated = topic.onTagsUpdated;\n        topic.onTagsUpdated = this.onTagsUpdated;\n      } else {\n        this.previousTagsUpdated = undefined;\n      }\n    }\n\n    if (this.state.topic != props.topic) {\n      this.setState({topic: props.topic});\n      this.resetDesc(topic, props);\n      this.resetSubs(topic, props);\n    }\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.setState({topic: null});\n    topic.onMetaDesc = this.previousMetaDesc;\n    topic.onSubsUpdated = this.previousSubsUpdated;\n    topic.onTagsUpdated = this.previousTagsUpdated;\n  }\n\n  resetSubs(topic, props) {\n    const newState = {contactList: []};\n    if (topic.getType() == 'p2p') {\n      // Fetch the other party in the p2p conversation.\n      // Topic may not be ready yet, so check if user is found.\n      const user2 = topic.subscriber(props.topic);\n      if (user2) {\n        newState.modeGiven2 = user2.acs.getGiven();\n        newState.modeWant2 = user2.acs.getWant();\n      } else {\n        newState.modeGiven2 = NO_ACCESS_MODE;\n        newState.modeWant2 = NO_ACCESS_MODE;\n      }\n    } else {\n      topic.subscribers((sub) => {\n        newState.contactList.push(sub);\n      }, this);\n    }\n\n    this.setState(newState);\n  }\n\n  resetDesc(topic, props) {\n    const defacs = topic.getDefaultAccess() || {};\n    const acs = topic.getAccessMode();\n\n    this.setState({\n      owner: acs && acs.isOwner(),\n      admin: acs && acs.isAdmin(),\n      sharer: acs && acs.isSharer(),\n      deleter: acs && acs.isDeleter(),\n      muted: acs && acs.isMuted(),\n\n      fullName: topic.public ? topic.public.fn : undefined,\n      avatar: makeImageUrl(topic.public ? topic.public.photo : null),\n      private: topic.private ? topic.private.comment : null,\n      address: topic.name,\n      groupTopic: (topic.getType() == 'grp'),\n      channel: topic.isChannel(),\n      showMemberPanel: false,\n      access: acs ? acs.getMode() : undefined,\n      modeGiven: acs ? acs.getGiven() : undefined,\n      modeWant: acs ? acs.getWant() : undefined,\n      auth: defacs.auth,\n      anon: defacs.anon\n    });\n\n    if (topic.getType() == 'grp' && acs && acs.isOwner()) {\n      // Requesting tags: owner is editing the topic.\n      topic.getMeta(topic.startMetaQuery().withTags().build());\n    }\n  }\n\n  onMetaDesc(desc) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetDesc(topic, this.props);\n\n    if (this.previousMetaDesc && this.previousMetaDesc != this.onMetaDesc) {\n      this.previousMetaDesc(desc);\n    }\n  }\n\n  onSubsUpdated(subs) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetSubs(topic, this.props);\n\n    if (this.previousSubsUpdated && this.previousSubsUpdated != this.onSubsUpdated) {\n      this.previousSubsUpdated(subs);\n    }\n  }\n\n  onTagsUpdated(tags) {\n    this.setState({tags: tags});\n\n    if (this.previousTagsUpdated && this.previousTagsUpdated != this.onTagsUpdated) {\n      this.previousTagsUpdated();\n    }\n  }\n\n  handleFullNameUpdate(fn) {\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.fullName !== fn) {\n      this.setState({fullName: fn});\n      this.props.onTopicDescUpdate(this.props.topic, vcard(fn, null), null);\n    }\n  }\n\n  handlePrivateUpdate(comment) {\n    comment = comment.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.private !== comment) {\n      this.setState({private: comment});\n      this.props.onTopicDescUpdate(this.props.topic, null, comment || Tinode.DEL_CHAR);\n    }\n  }\n\n  handleImageChanged(img) {\n    this.setState({avatar: img});\n    this.props.onTopicDescUpdate(this.props.topic, vcard(null, img || Tinode.DEL_CHAR), null);\n  }\n\n  handleMuted(ignored, checked) {\n    this.setState({muted: checked});\n    this.props.onChangePermissions(this.props.topic, checked ? '-P' : '+P');\n  }\n\n  handlePermissionsChanged(perm) {\n    switch (this.state.showPermissionEditorFor) {\n      case 'auth':\n        this.props.onTopicDescUpdate(this.props.topic, null, null, {auth: perm});\n        break;\n      case 'anon':\n        this.props.onTopicDescUpdate(this.props.topic, null, null, {anon: perm});\n        break;\n      case 'mode':\n      case 'want':\n        this.props.onChangePermissions(this.props.topic, perm);\n        break;\n      case 'given':\n        this.props.onChangePermissions(this.props.topic, perm, this.props.topic);\n        break;\n      case 'user':\n        this.props.onChangePermissions(this.props.topic, perm, this.state.userPermissionsEdited);\n        break;\n    }\n\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handleLaunchPermissionsEditor(which, uid) {\n    const {formatMessage} = this.props.intl;\n    let toEdit, toCompare, toSkip, titleEdit, titleCompare, userTitle, userAvatar;\n    switch (which) {\n      case 'mode':\n        toEdit = this.state.access;\n        break;\n      case 'want':\n        toEdit = this.state.modeWant;\n        toCompare = this.state.modeGiven;\n        if (this.state.owner) {\n          // Don't allow owner to unset 'O' permission. All other permissions are OK.\n          toSkip = 'O';\n        } else {\n          // Allow accepting any of 'ASDO' permissions but don't allow asking for them.\n          toSkip = Tinode.AccessMode.encode(Tinode.AccessMode.diff('ASDO', this.state.modeGiven));\n          if (this.state.channel) {\n            // Channels are read-only.\n            toSkip += 'W';\n          }\n        }\n        titleEdit = formatMessage(messages.requested);\n        titleCompare = formatMessage(messages.granted);\n        break;\n      case 'given':\n        toEdit = this.state.modeGiven2;\n        toCompare = this.state.modeWant2;\n        toSkip = this.state.groupTopic ? (this.state.owner ? '' : 'O') : 'ASDO';\n        titleEdit = formatMessage(messages.granted);\n        titleCompare = formatMessage(messages.requested);\n        break;\n      case 'auth':\n        toEdit = this.state.auth;\n        toSkip = 'O';\n        break;\n      case 'anon':\n        toEdit = this.state.anon;\n        toSkip = 'O';\n        break;\n      case 'user': {\n        const topic = this.props.tinode.getTopic(this.props.topic);\n        if (!topic) {\n          return;\n        }\n        const user = topic.subscriber(uid);\n        if (!user || !user.acs) {\n          return;\n        }\n        toEdit = user.acs.getGiven();\n        toCompare = user.acs.getWant();\n        toSkip = this.state.owner ? '' : 'O';\n        titleEdit = formatMessage(messages.granted);\n        titleCompare = formatMessage(messages.requested);\n        if (user.public) {\n          userTitle = user.public.fn;\n          userAvatar = user.public.photo;\n        }\n        break;\n      }\n      default:\n        console.log(\"Unknown permission editing mode '\" + which + \"'\");\n        break;\n    }\n    this.setState({\n      showPermissionEditorFor: which,\n      userPermissionsEdited: uid,\n      userPermissionsTitle: userTitle,\n      userPermissionsAvatar: userAvatar,\n      editedPermissions: toEdit,\n      immutablePermissions: toCompare,\n      editedPermissionsTitle: titleEdit,\n      immutablePermissionsTitle: titleCompare,\n      editedPermissionsSkipped: toSkip,\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handleShowAddMembers(e) {\n    e.preventDefault();\n    this.props.onInitFind();\n    this.setState({showMemberPanel: true});\n  }\n\n  handleHideAddMembers() {\n    this.setState({showMemberPanel: false});\n  }\n\n  handleMemberUpdateRequest(members, added, removed) {\n    this.props.onMemberUpdateRequest(this.props.topic, added, removed);\n    this.setState({showMemberPanel: false});\n  }\n\n  handleDeleteMessages(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(this.state.deleter ? messages.delete_messages : messages.clear_messages), // title\n      formatMessage(this.state.deleter ? messages.delete_messages_warning : messages.clear_messages_warning), // content\n      (() => { this.props.onDeleteMessages(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleLeave(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.leave_chat), // title\n      formatMessage(messages.leave_chat_warning), // content\n      (() => { this.props.onLeaveTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleBlock(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.block_contact), // title\n      formatMessage(messages.block_contact_warning), // content\n      (() => { this.props.onBlockTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleReport(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.report_chat), // title\n      formatMessage(messages.report_chat_warning), // content\n      (() => { this.props.onReportTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleMemberSelected(uid) {\n    this.setState({selectedContact: uid});\n  }\n\n  handleMoreInfo(open) {\n    this.setState({moreInfoExpanded: open});\n  }\n\n  handleTagsUpdated(tags) {\n    if (!arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      this.props.onTopicTagsUpdate(this.props.topic, tags);\n    }\n  }\n\n  handleContextMenu(params) {\n    const {formatMessage} = this.props.intl;\n    const instance = this;\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    const user = topic.subscriber(params.topicName);\n    if (!user || !user.acs) {\n      return;\n    }\n\n    const menuItems = [\n      {title: formatMessage(messages.edit_permissions), handler: function() {\n        instance.handleLaunchPermissionsEditor('user', params.topicName);\n      }},\n      'member_delete',\n      user.acs.isMuted() ? 'member_unmute' : 'member_mute',\n      user.acs.isJoiner() ? 'member_block' : 'member_unblock'\n    ];\n    this.props.showContextMenu({\n      topicName: this.props.topic,\n      x: params.x,\n      y: params.y,\n      user: params.topicName}, menuItems);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n\n    return (\n      <div id=\"info-view\">\n        <div className=\"caption-panel\" id=\"info-caption-panel\">\n          <div className=\"panel-title\" id=\"info-title\">\n            <FormattedMessage id=\"title_info\" defaultMessage=\"Info\" description=\"Title for InfoView\" />\n          </div>\n          <div>\n            <MenuCancel onCancel={this.props.onCancel} />\n          </div>\n        </div>\n        {this.props.displayMobile ?\n          <ErrorPanel\n            level={this.props.errorLevel}\n            text={this.props.errorText}\n            onClearError={this.props.onError} /> : null}\n        {this.state.showMemberPanel ?\n          <GroupManager\n            members={this.state.contactList}\n            requiredMember={this.props.myUserId}\n            keepInitialMembers={!this.state.admin && !this.state.owner}\n            myUserId={this.props.myUserId}\n            contacts={this.props.searchableContacts}\n            onCancel={this.handleHideAddMembers}\n            onSubmit={this.handleMemberUpdateRequest} />\n          :\n        this.state.showPermissionEditorFor ?\n          <PermissionsEditor\n            mode={this.state.editedPermissions}\n            compare={this.state.immutablePermissions}\n            skip={this.state.editedPermissionsSkipped}\n            modeTitle={this.state.editedPermissionsTitle}\n            compareTitle={this.state.immutablePermissionsTitle}\n            userTitle={this.state.userPermissionsTitle}\n            item={this.state.userPermissionsEdited}\n            userAvatar={this.state.userPermissionsAvatar}\n            onSubmit={this.handlePermissionsChanged}\n            onCancel={this.handleHidePermissionsEditor}\n            />\n          :\n          <div id=\"info-view-content\" className=\"scrollable-panel\">\n            <div className=\"panel-form-row\">\n              <div className=\"panel-form-column\">\n                <div><label className=\"small\">\n                  <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                    description=\"Label for editing topic name\" />\n                </label></div>\n                <div><InPlaceEdit\n                    placeholder={this.state.groupTopic ? \"Group name\" : <i>Unknown</i>}\n                    readOnly={!this.state.owner}\n                    value={this.state.fullName}\n                    required={true}\n                    onFinished={this.handleFullNameUpdate} /></div>\n                <div>\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                      description=\"Label for editing 'private'\" />\n                  </label>\n                </div>\n                <div>\n                  <FormattedMessage id=\"private_editing_placeholder\"\n                    defaultMessage=\"Visible to you only\"\n                    description=\"Placeholder for editing 'private'\">{\n                    (private_placeholder) => <InPlaceEdit\n                      placeholder={private_placeholder}\n                      value={this.state.private}\n                      onFinished={this.handlePrivateUpdate} />\n                  }</FormattedMessage>\n                </div>\n              </div>\n              <AvatarUpload\n                avatar={this.state.avatar}\n                readOnly={!this.state.owner}\n                uid={this.props.topic}\n                title={this.state.fullName}\n                onImageChanged={this.handleImageChanged}\n                onError={this.props.onError} />\n            </div>\n            <div className=\"hr\" />\n            <div className=\"panel-form-column\">\n              <div className=\"panel-form-row\">\n                <label>\n                  <FormattedMessage id=\"label_muting_topic\" defaultMessage=\"Muted:\"\n                    description=\"Label for Muting/unmuting the topic\" />\n                </label>\n                <CheckBox name=\"P\" checked={this.state.muted}\n                  onChange={this.handleMuted} />\n              </div>\n              <FormattedMessage id=\"action_more\" defaultMessage=\"More\"\n                description=\"Action for showing more content\">{\n                (more) => <MoreButton\n                  title={more}\n                  open={this.state.moreInfoExpanded}\n                  onToggle={this.handleMoreInfo} />\n              }</FormattedMessage>\n              {this.state.moreInfoExpanded ?\n                <div className=\"panel-form-column\">\n                  <div className=\"panel-form-row\">\n                    <label><FormattedMessage id=\"label_user_id\" /></label>\n                    <tt>{this.state.address}</tt>\n                  </div>\n                  {this.state.groupTopic ?\n                    <div className=\"panel-form-row\">\n                      <label>\n                        <FormattedMessage id=\"label_your_permissions\" defaultMessage=\"Your permissions:\"\n                          description=\"Label for current user permissions\" />\n                      </label>\n                      <tt className=\"clickable\"\n                        onClick={this.handleLaunchPermissionsEditor.bind(this, 'want')}>\n                        {this.state.access}\n                      </tt>\n                    </div>\n                    :\n                    <div>\n                      <div>\n                        <label className=\"small\">\n                          <FormattedMessage id=\"label_permissions\" defaultMessage=\"Permissions:\"\n                            description=\"Section title\" />\n                        </label>\n                      </div>\n                      <div className=\"quoted\">\n                        <div>\n                          <FormattedMessage id=\"label_you\" defaultMessage=\"You:\"\n                            description=\"Label for the current user\" /> &nbsp;<tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'want')}>\n                          {this.state.access}\n                        </tt></div>\n                        <div>{this.state.fullName ? this.state.fullName : formatMessage(messages.other_user)}:\n                          &nbsp;<tt className=\"clickable\" onClick={this.handleLaunchPermissionsEditor.bind(this, 'given')}>\n                          {this.state.modeGiven2}\n                          </tt>\n                        </div>\n                      </div>\n                    </div>\n                  }\n                  {this.state.sharer && (this.state.auth || this.state.anon) ?\n                  <div>\n                    <div>\n                      <label className=\"small\">\n                        <FormattedMessage id=\"label_default_access\" defaultMessage=\"Default access mode:\"\n                          description=\"Section title\" />\n                      </label>\n                    </div>\n                    <div className=\"quoted\">\n                      <div>Auth: {this.state.admin ?\n                        <tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>\n                          {this.state.auth}\n                        </tt>\n                        :\n                        <tt>{this.state.auth}</tt>\n                      }\n                      </div>\n                      <div>Anon: {this.state.admin ?\n                        <tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>\n                          {this.state.anon}\n                        </tt>\n                        :\n                        <tt>{this.state.anon}</tt>\n                      }\n                      </div>\n                    </div>\n                  </div>\n                  :\n                  null\n                }\n                </div>\n              :\n              null\n              }\n            </div>\n            <div className=\"hr\" />\n            {this.state.owner ?\n              <>\n                <FormattedMessage id=\"title_tag_manager\">{\n                  (tags) => <TagManager\n                    title={tags}\n                    tags={this.state.tags}\n                    activated={false}\n                    tinode={this.props.tinode}\n                    onSubmit={this.handleTagsUpdated} />\n                }</FormattedMessage>\n                <div className=\"hr\" />\n              </>\n              :\n              null\n            }\n            <div className=\"panel-form-column\">\n              {!this.state.channel ?\n                <a href=\"#\" className=\"flat-button\" onClick={this.handleDeleteMessages}>\n                  <i className=\"material-icons\">delete_outline</i> &nbsp;{\n                    formatMessage(this.state.deleter ? messages.delete_messages : messages.clear_messages)\n                  }\n                </a>\n                :\n                null\n              }\n              <a href=\"#\" className=\"red flat-button\" onClick={this.handleLeave}>\n                <i className=\"material-icons\">exit_to_app</i> &nbsp;{formatMessage(messages.leave_chat)}\n              </a>\n              {!this.state.groupTopic ?\n                <a href=\"#\" className=\"red flat-button\" onClick={this.handleBlock}>\n                  <i className=\"material-icons\">block</i> &nbsp;{formatMessage(messages.block_contact)}\n                </a>\n                :\n                null\n              }\n              {!this.state.owner ?\n                <a href=\"#\" className=\"red flat-button\" onClick={this.handleReport}>\n                  <i className=\"material-icons\">report</i> &nbsp;{formatMessage(messages.report_chat)}\n                </a>\n                :\n                null\n              }\n            </div>\n            {this.state.groupTopic && this.state.sharer ?\n              <>\n                <div className=\"hr\" />\n                <div className=\"panel-form-column\">\n                  <div className=\"panel-form-row\">\n                    <label className=\"small\">\n                      <FormattedMessage id=\"label_group_members\" defaultMessage=\"Group members:\"\n                        description=\"Section title or label\" />\n                    </label>\n                  </div>\n                  <div className=\"panel-form-row\">\n                    <a href=\"#\" className=\"flat-button\" onClick={this.handleShowAddMembers}>\n                      <i className=\"material-icons\">person_add</i> &nbsp;<FormattedMessage id=\"button_add_members\"\n                        defaultMessage=\"Add members\" description=\"Flat button [Add members] (to topic)\" />\n                    </a>\n                  </div>\n                  <FormattedMessage id=\"group_has_no_members\" defaultMessage=\"No members\"\n                    description=\"Shown in place of group members\">{\n                    (no_members) => <ContactList\n                      contacts={this.state.contactList}\n                      myUserId={this.props.myUserId}\n                      emptyListMessage={no_members}\n                      topicSelected={this.state.selectedContact}\n                      showOnline={false}\n                      showUnread={false}\n                      showMode={true}\n                      noScroll={true}\n                      onTopicSelected={this.handleMemberSelected}\n                      showContextMenu={this.state.admin ? this.handleContextMenu : false}\n                    />\n                  }</FormattedMessage>\n                </div>\n              </>\n              :\n              null\n            }\n          </div>\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(InfoView);\n","// Login form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\n\nexport default class LoginView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: props.login,\n      password: '',\n      hostName: props.serverAddress,\n      saveToken: LocalStorageUtil.getObject('keep-logged-in')\n    };\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  handleToggleSaveToken() {\n    LocalStorageUtil.setObject('keep-logged-in', !this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onLogin(this.state.login.trim(), this.state.password.trim());\n  }\n\n  render() {\n    var submitClasses = 'blue';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form id=\"login-form\" onSubmit={this.handleSubmit}>\n        <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n          description=\"Login placeholder in LoginView\">\n        {\n          (login_prompt) => <input type=\"text\" id=\"inputLogin\"\n            placeholder={login_prompt}\n            autoComplete=\"username\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"none\"\n            value={this.state.login}\n            onChange={this.handleLoginChange}\n            required autoFocus />\n        }\n        </FormattedMessage>\n        <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n          description=\"Password placeholder in LoginView\">\n        {\n          (password_prompt) => <VisiblePassword type=\"password\" id=\"inputPassword\"\n            placeholder={password_prompt}\n            autoComplete=\"current-password\"\n            value={this.state.password}\n            onChange={this.handlePasswordChange}\n            required={true} />\n        }\n        </FormattedMessage>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <label htmlFor=\"save-token\">&nbsp;\n            <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n              description=\"Label for a checkbox\" />\n          </label>\n          <a href=\"#reset\">\n            <FormattedMessage id=\"forgot_password_link\" defaultMessage=\"Forgot password?\"\n              description=\"Link to Reset password form\" />\n          </a>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_in\" defaultMessage=\"Sign in\"\n              description=\"Button [Sign In]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n/* END Login */\n","/* This is just a static page to display when no conversation is selected. */\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME } from '../config.js';\n\nexport default class LogoView extends React.PureComponent {\n  render() {\n    const version = APP_NAME + ' (' + Tinode.getLibrary() + ')';\n    return (\n      <div id=\"dummy-view\">\n        <div>\n          <a href=\"https://github.com/tinode/chat/\">\n            <img id=\"logo\" alt=\"logo\" src=\"img/logo.svg\" />\n            <h2>Tinode Web</h2>\n          </a>\n          <p><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\" /> {version}</p>\n          <p><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\" /> {this.props.serverVersion} ({this.props.serverAddress})</p>\n        </div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\nconst Drafty = Tinode.Drafty;\n\nimport ChatMessage from '../widgets/chat-message.jsx';\nimport DocPreview from '../widgets/doc-preview.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupSubs from '../widgets/group-subs.jsx';\nimport ImagePreview from '../widgets/image-preview.jsx';\nimport Invitation from '../widgets/invitation.jsx';\nimport LetterTile from '../widgets/letter-tile.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport LogoView from './logo-view.jsx';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { DEFAULT_P2P_ACCESS_MODE, IMAGE_PREVIEW_DIM, KEYPRESS_DELAY, MESSAGES_PAGE,\n  MAX_EXTERN_ATTACHMENT_SIZE, MAX_IMAGE_DIM, MAX_INBAND_ATTACHMENT_SIZE, READ_DELAY } from '../config.js';\nimport { SUPPORTED_IMAGE_FORMATS, blobToBase64, filePasted, fileToBase64,\n  imageScaled, makeImageUrl } from '../lib/blob-helpers.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { bytesToHumanSize, shortDateFormat } from '../lib/strformat.js';\n\n// Run timer with this frequency (ms) for checking notification queue.\nconst NOTIFICATION_EXEC_INTERVAL = 300;\n\nconst messages = defineMessages({\n  'online_now': {\n    id: 'online_now',\n    defaultMessage: 'online now',\n    description: 'Indicator that the user or topic is currently online',\n  },\n  'last_seen': {\n    id: 'last_seen_timestamp',\n    defaultMessage: 'Last seen',\n    description: 'Label for the timestamp of when the user or topic was last online'\n  },\n  'not_found': {\n    id: 'title_not_found',\n    defaultMessage: 'Not found',\n    description: 'Title shown when topic is not found'\n  },\n  'channel': {\n    id: 'channel',\n    defaultMessage: 'channel',\n    description: 'Subtitle shown for channels in MessagesView instead of last seen'\n  }\n});\n\n// Checks if the access permissions are granted but not yet accepted.\nfunction isUnconfirmed(acs) {\n  if (acs) {\n    const ex = acs.getExcessive() || '';\n    return acs.isJoiner('given') && (ex.includes('R') || ex.includes('W'));\n  }\n  return false;\n}\n\nfunction isPeerRestricted(acs) {\n  if (acs) {\n    const ms = acs.getMissing() || '';\n    return acs.isJoiner('want') && (ms.includes('R') || ms.includes('W'));\n  }\n  return false;\n}\n\nclass MessagesView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = MessagesView.getDerivedStateFromProps(props, {});\n\n    this.leave = this.leave.bind(this);\n    this.sendImageAttachment = this.sendImageAttachment.bind(this);\n    this.sendFileAttachment = this.sendFileAttachment.bind(this);\n    this.sendKeyPress = this.sendKeyPress.bind(this);\n    this.handleScrollReference = this.handleScrollReference.bind(this);\n    this.handleScrollEvent = this.handleScrollEvent.bind(this);\n    this.handleDescChange = this.handleDescChange.bind(this);\n    this.handleSubsUpdated = this.handleSubsUpdated.bind(this);\n    this.handleNewMessage = this.handleNewMessage.bind(this);\n    this.handleAllMessagesReceived = this.handleAllMessagesReceived.bind(this);\n    this.handleInfoReceipt = this.handleInfoReceipt.bind(this);\n    this.handleImagePostview = this.handleImagePostview.bind(this);\n    this.handleClosePreview = this.handleClosePreview.bind(this);\n    this.handleFormResponse = this.handleFormResponse.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleShowContextMenuMessage = this.handleShowContextMenuMessage.bind(this);\n    this.handleNewChatAcceptance = this.handleNewChatAcceptance.bind(this);\n    this.handleEnablePeer = this.handleEnablePeer.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n    this.postReadNotification = this.postReadNotification.bind(this);\n    this.clearNotificationQueue = this.clearNotificationQueue.bind(this);\n\n    this.readNotificationQueue = [];\n    this.readNotificationTimer = null;\n  }\n\n  componentDidMount() {\n    // this.propsChange(this.props, this.state);\n    if (this.messagesScroller) {\n      this.messagesScroller.addEventListener('scroll', this.handleScrollEvent);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messagesScroller) {\n      this.messagesScroller.removeEventListener('scroll', this.handleScrollEvent);\n    }\n\n    // Flush all notifications.\n    this.clearNotificationQueue();\n  }\n\n  // Scroll last message into view on component update e.g. on message received\n  // or vertical shrinking.\n  componentDidUpdate(prevProps, prevState) {\n    if (this.messagesScroller) {\n      if (prevState.topic != this.state.topic || prevState.messages.length != this.state.messages.length) {\n        // New message\n        this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n      } else if (prevProps.viewportHeight > this.props.viewportHeight) {\n        // Componet changed height.\n        this.messagesScroller.scrollTop += prevProps.viewportHeight - this.props.viewportHeight;\n      }\n    }\n\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (this.state.topic != prevState.topic) {\n      if (prevState.topic && !Tinode.isNewGroupTopicName(prevState.topic)) {\n        this.leave(prevState.topic);\n      }\n\n      if (topic) {\n        topic.onData = this.handleNewMessage;\n        topic.onAllMessagesReceived = this.handleAllMessagesReceived;\n        topic.onInfo = this.handleInfoReceipt;\n        topic.onMetaDesc = this.handleDescChange;\n        topic.onSubsUpdated = this.handleSubsUpdated;\n        topic.onPres = this.handleSubsUpdated;\n      }\n    }\n\n    if (!this.props.applicationVisible) {\n      // If application is not visible, flush all unsent 'read' notifications.\n      this.clearNotificationQueue();\n    } else {\n      // Otherwise assume there are unread messages.\n      this.postReadNotification(0);\n    }\n\n    if (topic && !topic.isSubscribed() && this.props.ready &&\n        ((this.state.topic != prevState.topic) || !prevProps.ready)) {\n      // Is this a new topic?\n      const newTopic = (this.props.newTopicParams && this.props.newTopicParams._topicName == this.props.topic);\n\n      // Don't request the tags. They are useless unless the user\n      // is the owner and is editing the topic.\n      let getQuery = topic.startMetaQuery().withLaterDesc();\n      if (this.state.isSharer || (newTopic && !topic.isChannel())) {\n        // Request subscriptions only if one of S,O,A is given or it's a new non-channel topic.\n        getQuery = getQuery.withLaterSub();\n      }\n      if (this.state.isReader || newTopic) {\n        // Reading is either permitted or we don't know because it's a new topic. Ask for messages.\n        getQuery = getQuery.withLaterData(MESSAGES_PAGE);\n        if (this.state.isReader) {\n          getQuery = getQuery.withLaterDel();\n        }\n        // And show \"loading\" spinner.\n        this.setState({ fetchingMessages: true });\n      }\n      const setQuery = newTopic ? this.props.newTopicParams : undefined;\n      topic.subscribe(getQuery.build(), setQuery)\n        .then((ctrl) => {\n          if (ctrl.code == 303) {\n            // Redirect to another topic requested.\n            HashNavigation.navigateTo(HashNavigation.setUrlTopic('', ctrl.params.topic));\n            return;\n          }\n          if (this.state.topic != ctrl.topic) {\n            this.setState({topic: ctrl.topic});\n          }\n          this.props.onNewTopicCreated(this.props.topic, ctrl.topic);\n          // If there are unsent messages, try sending them now.\n          topic.queuedMessages((pub) => {\n            if (!pub._sending && topic.isSubscribed()) {\n              topic.publishMessage(pub);\n            }\n          });\n        })\n        .catch((err) => {\n          console.log(\"Failed subscription to\", this.state.topic);\n          this.props.onError(err.message, 'err');\n          const blankState = MessagesView.getDerivedStateFromProps({}, {});\n          blankState.title = this.props.intl.formatMessage(messages.not_found);\n          this.setState(blankState);\n        });\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let nextState = {};\n    if (!nextProps.topic) {\n      // Default state: no topic.\n      nextState = {\n        messages: [],\n        onlineSubs: [],\n        topic: null,\n        title: '',\n        avatar: null,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false,\n        peerMessagingDisabled: false,\n        channel: false\n      };\n    } else if (nextProps.topic != prevState.topic) {\n      const topic = nextProps.tinode.getTopic(nextProps.topic);\n      nextState = {\n        topic: nextProps.topic,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false\n      };\n\n      if (topic) {\n        // Topic exists.\n        const msgs = [];\n        const subs = [];\n\n        if (nextProps.connected) {\n          topic.subscribers((sub) => {\n            if (sub.online && sub.user != nextProps.myUserId) {\n              subs.push(sub);\n            }\n          });\n        }\n\n        topic.messages(function(msg) {\n          if (!msg.deleted) {\n            msgs.push(msg);\n          }\n        });\n\n        Object.assign(nextState, {\n          messages: msgs,\n          onlineSubs: subs\n        });\n\n        if (topic.public) {\n          Object.assign(nextState, {\n            title: topic.public.fn,\n            avatar: makeImageUrl(topic.public.photo)\n          });\n        } else {\n          Object.assign(nextState, {\n            title: '',\n            avatar: null\n          });\n        }\n\n        const peer = topic.p2pPeerDesc();\n        if (peer) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: isPeerRestricted(peer.acs)\n          });\n        } else if (prevState.peerMessagingDisabled) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: false\n          });\n        }\n        Object.assign(nextState, {\n          channel: topic.isChannel()\n        });\n      } else {\n        // Invalid topic.\n        Object.assign(nextState, {\n          messages: [],\n          onlineSubs: [],\n          title: '',\n          avatar: null,\n          peerMessagingDisabled: false,\n          channel: false\n        });\n      }\n    }\n\n    if (nextProps.acs) {\n      if (nextProps.acs.isWriter() != prevState.isWriter) {\n        nextState.isWriter = !prevState.isWriter;\n      }\n      if (nextProps.acs.isReader() != prevState.isReader) {\n        nextState.isReader = !prevState.isReader;\n      }\n      if (!nextProps.acs.isReader('given') != prevState.readingBlocked) {\n        nextState.readingBlocked = !prevState.readingBlocked;\n      }\n      if (nextProps.acs.isSharer() != prevState.isSharer) {\n        nextState.isSharer = !prevState.isSharer;\n      }\n    } else {\n      if (prevState.isWriter) {\n        nextState.isWriter = false;\n      }\n      if (prevState.isReader) {\n        nextState.isReader = false;\n      }\n      if (!prevState.readingBlocked) {\n        prevState.readingBlocked = true;\n      }\n      if (prevState.isSharer) {\n        nextState.isSharer = false;\n      }\n    }\n\n    if (isUnconfirmed(nextProps.acs) == !prevState.unconformed) {\n      nextState.unconfirmed = !prevState.unconformed;\n    }\n\n    // Clear subscribers online when there is no connection.\n    if (!nextProps.connected && prevState.onlineSubs && prevState.onlineSubs.length > 0) {\n      nextState.onlineSubs = [];\n    }\n\n    return nextState;\n  }\n\n  leave(oldTopicName) {\n    if (!oldTopicName) {\n      return;\n    }\n    let oldTopic = this.props.tinode.getTopic(oldTopicName);\n    if (oldTopic && oldTopic.isSubscribed()) {\n      oldTopic.leave(false)\n        .catch(() => { /* do nothing here */ })\n        .finally(() => {\n          // We don't care if the request succeeded or failed.\n          // The topic is dead regardless.\n          this.setState({fetchingMessages: false});\n          oldTopic.onData = undefined;\n          oldTopic.onAllMessagesReceived = undefined;\n          oldTopic.onInfo = undefined;\n          oldTopic.onMetaDesc = undefined;\n          oldTopic.onSubsUpdated = undefined;\n          oldTopic.onPres = undefined;\n        });\n    }\n  }\n\n  handleScrollReference(node) {\n    if (node) {\n      node.addEventListener('scroll', this.handleScrollEvent);\n      this.messagesScroller = node;\n      this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n    }\n  }\n\n  // Get older messages\n  handleScrollEvent(event) {\n    this.setState({scrollPosition: event.target.scrollHeight - event.target.scrollTop});\n    if (event.target.scrollTop <= 0) {\n      this.setState((prevState, props) => {\n        const newState = {};\n        if (!prevState.fetchingMessages) {\n          const topic = this.props.tinode.getTopic(this.state.topic);\n          if (topic && topic.isSubscribed() && topic.msgHasMoreMessages()) {\n            newState.fetchingMessages = true;\n            topic.getMessagesPage(MESSAGES_PAGE).catch((err) => {\n              this.setState({fetchingMessages: false});\n              this.props.onError(err.message, 'err');\n            });\n          }\n        }\n        return newState;\n      });\n    }\n  }\n\n  handleDescChange(desc) {\n    if (desc.public) {\n      this.setState({\n        title: desc.public.fn,\n        avatar: makeImageUrl(desc.public.photo)\n      });\n    } else {\n      this.setState({\n        title: '',\n        avatar: null\n      });\n    }\n\n    if (desc.acs) {\n      this.setState({\n        isWriter: desc.acs.isWriter(),\n        isReader: desc.acs.isReader(),\n        readingBlocked: !desc.acs.isReader('given'),\n        unconfirmed: isUnconfirmed(desc.acs),\n      });\n    }\n  }\n\n  postReadNotification(seq) {\n    // Ignore notifications if the app is invisible.\n    if (!this.props.applicationVisible) {\n      return;\n    }\n\n    // Set up the timer if it's not running already.\n    if (!this.readNotificationTimer) {\n      this.readNotificationTimer = setInterval(() => {\n        if (this.readNotificationQueue.length == 0) {\n          // Shut down the timer if the queue is empty.\n          clearInterval(this.readNotificationTimer);\n          this.readNotificationTimer = null;\n          return;\n        }\n\n        let seq = -1;\n        while (this.readNotificationQueue.length > 0) {\n          const n = this.readNotificationQueue[0];\n          if (n.topicName != this.state.topic) {\n            // Topic has changed. Drop the notification.\n            this.readNotificationQueue.shift();\n            continue;\n          }\n\n          const now = new Date();\n          if (n.sendAt <= now) {\n            // Remove expired notification from queue.\n            this.readNotificationQueue.shift();\n            seq = Math.max(seq, n.seq);\n          } else {\n            break;\n          }\n        }\n\n        // Send only one notification for the whole batch of messages.\n        if (seq >= 0) {\n          const topic = this.props.tinode.getTopic(this.state.topic);\n          if (topic) {\n            topic.noteRead(seq);\n          }\n        }\n      }, NOTIFICATION_EXEC_INTERVAL);\n    }\n\n    const now = new Date();\n    this.readNotificationQueue.push({\n      topicName: this.state.topic,\n      seq: seq,\n      sendAt: now.setMilliseconds(now.getMilliseconds() + READ_DELAY)\n    });\n  }\n\n  // Clear notification queue and timer.\n  clearNotificationQueue() {\n    this.readNotificationQueue = [];\n    if (this.readNotificationTimer) {\n      clearInterval(this.readNotificationTimer);\n      this.readNotificationTimer = null;\n    }\n  }\n\n  handleSubsUpdated() {\n    if (this.state.topic) {\n      const subs = [];\n      const topic = this.props.tinode.getTopic(this.state.topic);\n      topic.subscribers((sub) => {\n        if (sub.online && sub.user != this.props.myUserId) {\n          subs.push(sub);\n        }\n      });\n      const newState = {onlineSubs: subs};\n      const peer = topic.p2pPeerDesc();\n      if (peer) {\n        Object.assign(newState, {\n          peerMessagingDisabled: isPeerRestricted(peer.acs)\n        });\n      } else if (this.state.peerMessagingDisabled) {\n        Object.assign(newState, {\n          peerMessagingDisabled: false\n        });\n      }\n      this.setState(newState);\n    }\n  }\n\n  handleNewMessage(msg) {\n    // Regenerate messages list\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    const newState = {messages: []};\n    topic.messages((m) => {\n      if (!m.deleted) {\n        newState.messages.push(m);\n      }\n    });\n\n    // msg could be null if one or more messages were deleted.\n    if (msg && !msg.deleted) {\n      // If the message is added to the end of the message list,\n      // scroll to the bottom.\n      if (topic.isNewMessage(msg.seq)) {\n        newState.scrollPosition = 0;\n      }\n\n      // Aknowledge messages except own messages. They are\n      // automatically assumed to be read and recived.\n      const status = topic.msgStatus(msg);\n      if (status >= Tinode.MESSAGE_STATUS_SENT && msg.from != this.props.myUserId) {\n        this.postReadNotification(msg.seq);\n      }\n      this.props.onData(msg);\n    }\n    this.setState(newState);\n  }\n\n  handleAllMessagesReceived(count) {\n    this.setState({fetchingMessages: false});\n    if (count > 0) {\n      // 0 means \"latest\".\n      this.postReadNotification(0);\n    }\n  }\n\n  handleInfoReceipt(info) {\n    switch (info.what) {\n      case 'kp': {\n        clearTimeout(this.keyPressTimer);\n        var instance = this;\n        this.keyPressTimer = setTimeout(function() {\n          instance.setState({typingIndicator: false});\n        }, KEYPRESS_DELAY + 1000);\n        if (!this.state.typingIndicator) {\n          this.setState({typingIndicator: true});\n        }\n        break;\n      }\n      case 'read':\n      case 'recv':\n        // Redraw due to changed recv/read status.\n        this.forceUpdate();\n        break;\n      default:\n        console.log(\"Other change in topic: \", info.what);\n    }\n  }\n\n  handleImagePostview(content) {\n    this.setState({ imagePostview: content });\n  }\n\n  handleClosePreview() {\n    if (this.state.imagePreview && this.state.imagePreview.url) {\n      URL.revokeObjectURL(this.state.imagePreview.url);\n    }\n    this.setState({ imagePostview: null, imagePreview: null, docPreview: null });\n  }\n\n  handleFormResponse(action, text, data) {\n    if (action == 'pub') {\n      this.props.sendMessage(Drafty.attachJSON(Drafty.parse(text), data));\n    } else if (action == 'url') {\n      const url = new URL(data.ref);\n      const params = url.searchParams;\n      for (let key in data.resp) {\n        if (data.resp.hasOwnProperty(key)) {\n          params.set(key, data.resp[key]);\n        }\n      }\n      ['name', 'seq'].map(function(key) {\n        if (data[key]) {\n          params.set(key, data[key]);\n        }\n      });\n      params.set('uid', this.props.myUserId);\n      url.search = params;\n      window.open(url, '_blank');\n    } else {\n      console.log(\"Unknown action in form\", action);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.state.topic, y: e.pageY, x: e.pageX });\n  }\n\n  handleShowContextMenuMessage(params, messageSpecificMenuItems) {\n    params.topicName = this.state.topic;\n    const menuItems = messageSpecificMenuItems || [];\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (topic) {\n      if (!topic.isChannel()) {\n        menuItems.push('message_delete');\n      }\n      const acs = topic.getAccessMode();\n      if (acs && acs.isDeleter()) {\n        menuItems.push('message_delete_hard');\n      }\n    }\n    this.props.showContextMenu(params, menuItems);\n  }\n\n  handleNewChatAcceptance(action) {\n    this.props.onNewChat(this.state.topic, action);\n  }\n\n  handleEnablePeer(e) {\n    e.preventDefault();\n    this.props.onChangePermissions(this.state.topic, DEFAULT_P2P_ACCESS_MODE, this.state.topic);\n  }\n\n  sendKeyPress() {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (topic.isSubscribed()) {\n      topic.noteKeyPress();\n    }\n  }\n\n  // Send attachment as Drafty message:\n  // - if file is too large, upload it and send a s link.\n  // - if file is small enough, just send it in-band.\n  sendFileAttachment(file) {\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (file.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      if (!uploader) {\n        this.props.onError(this.props.intl.formatMessage(messages.cannot_initiate_upload));\n        return;\n      }\n      const uploadCompletionPromise = uploader.upload(file);\n      const msg = Drafty.attachFile(null, {\n        mime: file.type,\n        filename: file.name,\n        size: file.size,\n        urlPromise: uploadCompletionPromise\n      });\n      // Pass data and the uploader to the TinodeWeb.\n      this.props.sendMessage(msg, uploadCompletionPromise, uploader);\n    } else {\n      // Small enough to send inband.\n      fileToBase64(file,\n        (mime, bits, fname) => {\n          this.props.sendMessage(Drafty.attachFile(null, {mime: mime, data: bits, filename: fname}));\n        },\n        this.props.onError\n      );\n    }\n  }\n\n  // handleAttachFile method is called when [Attach file] button is clicked.\n  handleAttachFile(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    if (file.size > maxExternAttachmentSize) {\n      // Too large.\n      this.props.onError(this.props.intl.formatMessage({id: 'file_attachment_too_large'},\n          {size: bytesToHumanSize(file.size), limit: bytesToHumanSize(maxExternAttachmentSize)}), 'err');\n    } else {\n      this.setState({ docPreview: {\n        file: file,\n        filename: file.name,\n        size: file.size,\n        type: file.type\n      }});\n    }\n  }\n\n  // sendImageAttachment sends the image bits inband as Drafty message.\n  sendImageAttachment(caption, blob) {\n    const mime = this.state.imagePreview.type;\n    const width = this.state.imagePreview.width;\n    const height = this.state.imagePreview.height;\n    const fname = this.state.imagePreview.filename;\n\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (blob.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      if (!uploader) {\n        this.props.onError(this.props.intl.formatMessage(messages.cannot_initiate_upload));\n        return;\n      }\n      const uploadCompletionPromise = uploader.upload(blob);\n\n      // Make small preview to show while uploading.\n      imageScaled(blob, IMAGE_PREVIEW_DIM, IMAGE_PREVIEW_DIM, -1, false,\n        (tinyBlob) => {\n          // Convert tiny image into base64 for serialization and previewing.\n          blobToBase64(tinyBlob, (blobMime, tinyBits64) => {\n            let msg = Drafty.insertImage(null, 0, {\n              mime: mime,\n              _tempPreview: tinyBits64, // This preview will not be serialized.\n              width: width,\n              height: height,\n              filename: fname,\n              size: blob.size,\n              urlPromise: uploadCompletionPromise\n            });\n            if (caption) {\n              msg = Drafty.appendLineBreak(msg);\n              msg = Drafty.append(msg, Drafty.init(caption));\n            }\n            // Pass data and the uploader to the TinodeWeb.\n            this.props.sendMessage(msg, uploadCompletionPromise, uploader);\n          }\n        )},\n        // Failure\n        (err) => {\n          this.props.onError(err, 'err');\n        }\n      );\n      return;\n    }\n\n    // Upload the image if it's too big to be send inband.\n    blobToBase64(blob, (blobMime, bits64) => {\n      let msg = Drafty.insertImage(null, 0, {\n        mime: blobMime,\n        preview: bits64, // Serializable preview\n        width: width,\n        height: height,\n        filename: fname,\n        size: blob.size\n      });\n      if (caption) {\n        msg = Drafty.appendLineBreak(msg);\n        msg = Drafty.append(msg, Drafty.init(caption));\n      }\n      this.props.sendMessage(msg);\n    });\n  }\n\n  // handleAttachImage method is called when [Attach image] button is clicked.\n  handleAttachImage(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    // Get image dimensions and size, optionally scale it down.\n    imageScaled(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, maxExternAttachmentSize, false,\n      // Success\n      (blob, mime, width, height, fname) => {\n        this.setState({imagePreview: {\n          url: URL.createObjectURL(blob),\n          blob: blob,\n          filename: fname,\n          width: width,\n          height: height,\n          size: blob.size,\n          type: mime\n        }});\n      },\n      // Failure\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    );\n  }\n\n  handleCancelUpload(seq, uploader) {\n    const found = this.state.messages.find(msg => msg.seq == seq);\n    if (found) {\n      found._cancelled = true;\n    }\n    uploader.cancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n\n    let component;\n    if (this.props.hideSelf) {\n      component = null;\n    } else if (!this.state.topic) {\n      component = (\n        <LogoView\n          serverVersion={this.props.serverVersion}\n          serverAddress={this.props.serverAddress} />\n      );\n    } else {\n      let component2;\n      if (this.state.imagePreview) {\n        // Preview image before sending.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePreview}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendImageAttachment} />\n        );\n      } else if (this.state.imagePostview) {\n        // Expand received image.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePostview}\n            onClose={this.handleClosePreview} />\n        );\n      } else if (this.state.docPreview) {\n        // Preview attachment before sending.\n        component2 = (\n          <DocPreview\n            content={this.state.docPreview}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendFileAttachment} />\n        );\n      } else {\n        const topic = this.props.tinode.getTopic(this.state.topic);\n        const isChannel = topic.isChannel();\n        const groupTopic = topic.getType() == 'grp' && !isChannel;\n        let messageNodes = [];\n        let previousFrom = null;\n        let chatBoxClass = null;\n        for (let i=0; i<this.state.messages.length; i++) {\n          let msg = this.state.messages[i];\n          let nextFrom = null;\n\n          if (i + 1 < this.state.messages.length) {\n            nextFrom = this.state.messages[i+1].from || 'chan';\n          }\n\n          let sequence = 'single';\n          let thisFrom = msg.from || 'chan';\n          if (thisFrom == previousFrom) {\n            if (thisFrom == nextFrom) {\n              sequence = 'middle';\n            } else {\n              sequence = 'last';\n            }\n          } else if (thisFrom == nextFrom) {\n            sequence = 'first';\n          }\n          previousFrom = thisFrom;\n\n          const isReply = !(thisFrom == this.props.myUserId);\n          const deliveryStatus = topic.msgStatus(msg);\n\n          let userName, userAvatar, userFrom;\n          if (groupTopic) {\n            const user = topic.userDesc(thisFrom);\n            if (user && user.public) {\n              userName = user.public.fn;\n              userAvatar = makeImageUrl(user.public.photo);\n            }\n            userFrom = thisFrom;\n            chatBoxClass='chat-box group';\n          } else {\n            chatBoxClass='chat-box';\n          }\n\n          messageNodes.push(\n            <ChatMessage\n              tinode={this.props.tinode}\n              content={msg.content}\n              deleted={msg.hi}\n              mimeType={msg.head ? msg.head.mime : null}\n              timestamp={msg.ts}\n              response={isReply}\n              seq={msg.seq}\n              userFrom={userFrom}\n              userName={userName}\n              userAvatar={userAvatar}\n              sequence={sequence}\n              received={deliveryStatus}\n              uploader={msg._uploader}\n              viewportWidth={this.props.viewportWidth}\n              showContextMenu={this.state.channel? false : this.handleShowContextMenuMessage}\n              onImagePreview={this.handleImagePostview}\n              onFormResponse={this.handleFormResponse}\n              onError={this.props.onError}\n              onCancelUpload={this.handleCancelUpload}\n              key={msg.seq} />\n          );\n        }\n\n        let lastSeen = null;\n        if (isChannel) {\n          lastSeen = formatMessage(messages.channel);\n        } else {\n          const cont = this.props.tinode.getMeTopic().getContact(this.state.topic);\n          if (cont && Tinode.isP2PTopicName(cont.topic)) {\n            if (cont.online) {\n              lastSeen = formatMessage(messages.online_now);\n            } else if (cont.seen) {\n              lastSeen = formatMessage(messages.last_seen) + \": \" +\n                shortDateFormat(cont.seen.when, this.props.intl.locale);\n              // TODO: also handle user agent in c.seen.ua\n            }\n          }\n        }\n        const avatar = this.state.avatar || true;\n        const online = this.props.online ? 'online' + (this.state.typingIndicator ? ' typing' : '') : 'offline';\n\n        component2 = (\n          <>\n            <div id=\"topic-caption-panel\" className=\"caption-panel\">\n              {this.props.displayMobile ?\n                <a href=\"#\" id=\"hide-message-view\" onClick={(e) => {e.preventDefault(); this.props.onHideMessagesView();}}>\n                  <i className=\"material-icons\">arrow_back</i>\n                </a>\n                :\n                null}\n              <div className=\"avatar-box\">\n                <LetterTile\n                  avatar={avatar}\n                  topic={this.state.topic}\n                  title={this.state.title} />\n                {!isChannel ? <span className={online} /> : null}\n              </div>\n              <div id=\"topic-title-group\">\n                <div id=\"topic-title\" className=\"panel-title\">{\n                  this.state.title ||\n                  <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n                    description=\"Title shown when the topic has no name\" /></i>\n                }</div>\n                <div id=\"topic-last-seen\">{lastSeen}</div>\n              </div>\n              {groupTopic ?\n                <GroupSubs\n                  subscribers={this.state.onlineSubs} /> :\n                <div id=\"topic-users\" />\n              }\n              <div>\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">more_vert</i>\n                </a>\n              </div>\n            </div>\n            {this.props.displayMobile ?\n              <ErrorPanel\n                level={this.props.errorLevel}\n                text={this.props.errorText}\n                onClearError={this.props.onError} />\n              : null}\n            <LoadSpinner show={this.state.fetchingMessages} />\n            <div id=\"messages-container\">\n              <div id=\"messages-panel\" ref={this.handleScrollReference}>\n                <ul id=\"scroller\" className={chatBoxClass}>\n                  {messageNodes}\n                </ul>\n              </div>\n              {!this.state.isReader ?\n              <div id=\"write-only-background\">\n                {this.state.readingBlocked ?\n                <div id=\"write-only-note\">\n                  <FormattedMessage id=\"messages_not_readable\" defaultMessage=\"no access to messages\"\n                    description=\"Message shown in topic without the read access\" />\n                </div>\n                : null }\n              </div>\n              : null }\n            </div>\n            {this.state.peerMessagingDisabled && !this.state.unconfirmed ?\n              <div id=\"peer-messaging-disabled-note\">\n                <i className=\"material-icons secondary\">block</i> <FormattedMessage\n                  id=\"peers_messaging_disabled\" defaultMessage=\"Peer's messaging is disabled.\"\n                  description=\"Shown when the p2p peer's messaging is disabled\" /> <a href=\"#\"\n                    onClick={this.handleEnablePeer}><FormattedMessage id=\"enable_peers_messaging\"\n                    defaultMessage=\"Enable\" description=\"Call to action to enable peer's messaging\" /></a>.\n              </div> : null}\n            {this.state.unconfirmed ?\n              <Invitation onAction={this.handleNewChatAcceptance} />\n              :\n              <SendMessage\n                disabled={!this.state.isWriter}\n                onSendMessage={this.props.sendMessage}\n                onKeyPress={this.sendKeyPress}\n                onAttachFile={this.handleAttachFile}\n                onAttachImage={this.handleAttachImage}\n                onError={this.props.onError} />}\n          </>\n        );\n      }\n\n      component = <div id=\"topic-view\">{component2}</div>\n    }\n    return component;\n  }\n};\n\nexport default injectIntl(MessagesView);\n","// Create new topic and invite users or send an invite.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport ContactList from '../widgets/contact-list.jsx';\nimport NewTopicById from '../widgets/new-topic-by-id.jsx';\nimport NewTopicGroup from '../widgets/new-topic-group.jsx';\nimport SearchContacts from '../widgets/search-contacts.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\nimport { vcard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  search_for_contacts: {\n    id: \"search_for_contacts\",\n    defaultMessage: \"Use search to find contacts\",\n    description: \"Text shown in contacts view when user entered no search query.\"\n  },\n  search_no_results: {\n    id: \"search_no_results\",\n    defaultMessage: \"Search returned no results\",\n    description: \"Text shown in contacts view when query returned no results.\"\n  }\n});\n\nclass NewTopicView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tabSelected: 'p2p',\n      searchQuery: null\n    };\n\n    this.handleTabClick = this.handleTabClick.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleNewGroupSubmit = this.handleNewGroupSubmit.bind(this);\n    this.handleGroupByID = this.handleGroupByID.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.onInitFind();\n  }\n\n  handleTabClick(e) {\n    e.preventDefault();\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'tab', e.currentTarget.dataset.id));\n    this.setState({tabSelected: e.currentTarget.dataset.id});\n  }\n\n  handleSearchContacts(query) {\n    this.props.onSearchContacts(query);\n    this.setState({searchQuery: Tinode.isNullValue(query) ? null : query});\n  }\n\n  handleContactSelected(sel) {\n    if (this.state.tabSelected === 'p2p') {\n      HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n      this.props.onCreateTopic(sel);\n    }\n  }\n\n  handleNewGroupSubmit(name, dataUrl, priv, tags, isChannel) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(undefined, vcard(name, dataUrl), priv, tags, isChannel);\n  }\n\n  handleGroupByID(topicName) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(topicName);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const no_contacts_placeholder = formatMessage(this.state.searchQuery ?\n      messages.search_no_results : messages.search_for_contacts);\n    return (\n      <div className=\"flex-column\">\n        <ul className=\"tabbar\">\n          <li className={this.state.tabSelected === \"p2p\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"p2p\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_find_user\" defaultMessage=\"find\"\n                description=\"Tab title Find\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"grp\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"grp\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_new_group\" defaultMessage=\"new group\"\n                description=\"Tab title New Group\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"byid\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"byid\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_group_by_id\" defaultMessage=\"by id\"\n                description=\"Tab title Find topic by ID\" />\n            </a>\n          </li>\n        </ul>\n        {this.state.tabSelected === 'grp' ?\n          <NewTopicGroup\n            tinode={this.props.tinode}\n            onSubmit={this.handleNewGroupSubmit} /> :\n          this.state.tabSelected === 'byid' ?\n            <NewTopicById\n              onSubmit={this.handleGroupByID}\n              onError={this.props.onError} /> :\n            <div className=\"flex-column\">\n              <SearchContacts\n                type=\"p2p\"\n                onSearchContacts={this.handleSearchContacts} />\n              <ContactList\n                contacts={this.props.searchResults}\n                myUserId={this.props.myUserId}\n                emptyListMessage={no_contacts_placeholder}\n                showOnline={false}\n                showUnread={false}\n                showContextMenu={false}\n                onTopicSelected={this.handleContactSelected} />\n            </div>}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicView);\n","// A password reset form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\n\nexport default class PasswordResetView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n  }\n\n  componentDidMount() {\n    let parsed = HashNavigation.parseUrlHash(window.location.hash);\n    this.setState({token: parsed.params.token, scheme: parsed.params.scheme});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.token) {\n      this.props.onReset(this.state.scheme, this.state.password.trim(), this.state.token);\n    } else {\n      this.props.onRequest('email', this.state.email.trim());\n    }\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  render() {\n    let reset = (this.state.token && this.state.scheme);\n    return (\n      <form id=\"password-reset-form\" onSubmit={this.handleSubmit}>\n        {reset ?\n          <FormattedMessage id=\"new_password_placeholder\" defaultMessage=\"Enter new password\"\n            description=\"Placeholder for entering new password\">{\n            (placeholder) => <VisiblePassword\n              placeholder={placeholder}\n              autoComplete=\"new-password\"\n              value={this.state.password}\n              required={true} autoFocus={true}\n              onChange={this.handlePasswordChange} />\n          }</FormattedMessage>\n          :\n          <>\n            <label htmlFor=\"inputEmail\">\n              <FormattedMessage id=\"label_reset_password\"\n                defaultMessage=\"Send a password reset email:\"\n                description=\"Label for password reset field\" />\n            </label>\n            <FormattedMessage id=\"credential_email_prompt\" defaultMessage=\"Your registration email\"\n              description=\"Placeholder for entering email\">{\n              (placeholder) => <input type=\"email\" id=\"inputEmail\"\n                placeholder={placeholder}\n                autoComplete=\"email\"\n                value={this.state.email}\n                onChange={this.handleEmailChange}\n                required autoFocus />\n            }</FormattedMessage>\n          </>\n        }\n        <div className=\"dialog-buttons\">\n          <button className=\"blue\" type=\"submit\">{reset ?\n            <FormattedMessage id=\"button_reset\" defaultMessage=\"Reset\" description=\"Button [Reset]\" /> :\n            <FormattedMessage id=\"button_send_request\" defaultMessage=\"Send request\"\n              description=\"Button [Send request]\" />\n          }</button>\n        </div>\n      </form>\n    );\n  }\n}\n","// Tinode config panel.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport HostSelector from '../widgets/host-selector.jsx';\n\nexport default class SettingsView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transport: props.transport || 'def',\n      serverAddress: props.serverAddress,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleTransportSelected = this.handleTransportSelected.bind(this);\n    this.handleServerAddressChange = this.handleServerAddressChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onUpdate({\n      transport: this.state.transport,\n      serverAddress: this.state.serverAddress\n    });\n  }\n\n  handleTransportSelected(e) {\n    this.setState({transport: e.currentTarget.value});\n  }\n\n  handleServerAddressChange(name) {\n    this.setState({serverAddress: name});\n  }\n\n  render() {\n    const names = {def: \"default\", ws: \"websocket\", lp: \"long polling\"};\n    var transportOptions = [];\n    var instance = this;\n    ['def', 'ws', 'lp'].map(function(item) {\n      var id = 'transport-' + item;\n      var name = names[item];\n      transportOptions.push(\n        <li key={item}>\n          <input type=\"radio\" id={id} name=\"transport-select\" value={item}\n            checked={instance.state.transport === item}\n            onChange={instance.handleTransportSelected} />\n          <label htmlFor={id}>{name}</label>\n        </li>\n      );\n    });\n\n    return (\n      <form id=\"settings-form\" className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_server_to_use\" defaultMessage=\"Server to use:\"\n              description=\"Label for server selector in SettingsView\" />\n          </label>\n        </div>\n        <HostSelector serverAddress={this.state.serverAddress}\n          onServerAddressChange={this.handleServerAddressChange} />\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_wire_transport\" defaultMessage=\"Wire transport:\"\n              description=\"Label for wire transport selection in SettingsView\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ul className=\"quoted\">\n            {transportOptions}\n          </ul>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button type=\"submit\" className=\"blue\">\n            <FormattedMessage id=\"button_update\" defaultMessage=\"Update\"\n              description=\"Button [Update]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport SideNavbar from '../widgets/side-navbar.jsx';\n\nimport ContactsView from './contacts-view.jsx';\nimport CreateAccountView from './create-account-view.jsx';\nimport EditAccountView from './edit-account-view.jsx';\nimport AccGeneralView from './acc-general-view.jsx';\nimport AccNotificationsView from './acc-notifications-view.jsx';\nimport AccSecurityView from './acc-security-view.jsx';\nimport AccSupportView from './acc-support-view.jsx';\nimport LoginView from './login-view.jsx';\nimport NewTopicView from './new-topic-view.jsx';\nimport PasswordResetView from './password-reset-view.jsx';\nimport SettingsView from './settings-view.jsx';\nimport ValidationView from './validation-view.jsx';\n\n// Panel titles for translation.\nconst messages = defineMessages({\n  'login': {\n    id: 'sidepanel_title_login',\n    description: 'Sidepanel title for LoginView.',\n    defaultMessage: 'Sign In'\n  },\n  'register': {\n    id: 'sidepanel_title_register',\n    description: 'Sidepanel title for CreateAccountView.',\n    defaultMessage: 'Create Account'\n  },\n  'settings': {\n    id: 'sidepanel_title_settings',\n    description: 'Sidepanel title for SettingsView.',\n    defaultMessage: 'Settings'\n  },\n  'edit': {\n    id: 'sidepanel_title_account_settings',\n    description: 'Sidepanel title for EditAccountView.',\n    defaultMessage: 'Account Settings'\n  },\n  'general': {\n    id: 'sidepanel_title_acc_general',\n    description: 'Sidepanel title for AccGeneralView.',\n    defaultMessage: 'General'\n  },\n  'security': {\n    id: 'sidepanel_title_acc_security',\n    description: 'Sidepanel title for AccSecurityView.',\n    defaultMessage: 'Security'\n  },\n  'notif': {\n    id: 'sidepanel_title_acc_notifications',\n    description: 'Sidepanel title for AccNotificationsView.',\n    defaultMessage: 'Notifications'\n  },\n  'support': {\n    id: 'sidepanel_title_acc_support',\n    description: 'Sidepanel title for AccSupportView.',\n    defaultMessage: 'Support'\n  },\n  'newtpk': {\n    id: 'sidepanel_title_newtpk',\n    description: 'Sidepanel title for NewTopicView.',\n    defaultMessage: 'Start New Chat'\n  },\n  'cred': {\n    id: 'sidepanel_title_cred',\n    description: 'Sidepanel title for ValidationView.',\n    defaultMessage: 'Confirm Credentials'\n  },\n  'reset': {\n    id: 'sidepanel_title_reset',\n    description: 'Sidepanel title for PasswordResetView.',\n    defaultMessage: 'Reset Password'\n  },\n  'archive': {\n    id: 'sidepanel_title_archive',\n    description: 'Sidepanel title for ContactsView-Archive.',\n    defaultMessage: 'Archived Chats'\n  },\n  'blocked': {\n    id: 'sidepanel_title_blocked',\n    description: 'Sidepanel title for ContactsView-Blocked.',\n    defaultMessage: 'Blocked Chats'\n  }\n});\n\nclass SidepanelView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleLoginRequested = this.handleLoginRequested.bind(this);\n    this.handleNewTopic = this.handleNewTopic.bind(this);\n  }\n\n  handleLoginRequested(login, password) {\n    this.props.onLoginRequest(login, password);\n  }\n\n  handleNewTopic() {\n    this.props.onBasicNavigate('newtpk');\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const view = this.props.state || (this.props.myUserId ? 'contacts' : 'login');\n\n    let title, avatar;\n    if (view == 'contacts') {\n      title = this.props.title;\n      avatar = this.props.avatar ? this.props.avatar : true;\n    } else {\n      title = formatMessage(messages[view]);\n      avatar = false;\n    }\n\n    let onCancel;\n    if (['login', 'contacts'].indexOf(view) == -1) {\n      onCancel = this.props.onCancel;\n    }\n\n    return (\n      <div id=\"sidepanel\" className={this.props.hideSelf ? 'nodisplay' : null}>\n        <SideNavbar\n          state={view}\n          title={title}\n          avatar={avatar}\n          myUserId={this.props.myUserId}\n          onSignUp={this.props.onSignUp}\n          onSettings={this.props.onSettings}\n          onNewTopic={this.handleNewTopic}\n          onCancel={onCancel} />\n\n        <ErrorPanel\n          level={this.props.errorLevel}\n          text={this.props.errorText}\n          action={this.props.errorAction}\n          actionText={this.props.errorActionText}\n          onClearError={this.props.onError} />\n\n        <LoadSpinner show={this.props.loadSpinnerVisible} />\n\n        {view === 'login' ?\n          <LoginView\n            login={this.props.login}\n            disabled={this.props.loginDisabled}\n            onLogin={this.handleLoginRequested} /> :\n\n          view === 'register' ?\n          <CreateAccountView\n            onCreateAccount={this.props.onCreateAccount}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'settings' ?\n          <SettingsView\n            transport={this.props.transport}\n            serverAddress={this.props.serverAddress}\n            onCancel={this.props.onCancel}\n            onUpdate={this.props.onGlobalSettings} /> :\n\n          view === 'edit' ?\n          <EditAccountView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            onBasicNavigate={this.props.onBasicNavigate} /> :\n\n          view === 'general' ?\n          <AccGeneralView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            onUpdateAccount={this.props.onUpdateAccount}\n            onUpdateTags={this.props.onUpdateAccountTags}\n            onCredAdd={this.props.onCredAdd}\n            onCredDelete={this.props.onCredDelete}\n            onCredConfirm={this.props.onCredConfirm}\n            onBasicNavigate={this.props.onBasicNavigate}\n            onError={this.props.onError} /> :\n\n          view === 'notif' ?\n          <AccNotificationsView\n            messageSounds={this.props.messageSounds}\n            desktopAlerts={this.props.desktopAlerts}\n            desktopAlertsEnabled={this.props.desktopAlertsEnabled}\n            incognitoMode={this.props.incognitoMode}\n            onTogglePushNotifications={this.props.onTogglePushNotifications}\n            onToggleMessageSounds={this.props.onToggleMessageSounds}\n            onToggleIncognitoMode={this.props.onToggleIncognitoMode} /> :\n\n          view === 'security' ?\n          <AccSecurityView\n            tinode={this.props.tinode}\n            onUpdateAccount={this.props.onUpdateAccount}\n            onLogout={this.props.onLogout}\n            onDeleteAccount={this.props.onDeleteAccount}\n            onShowAlert={this.props.onShowAlert}\n            onShowBlocked={this.props.onShowBlocked} /> :\n\n          view === 'support' ?\n          <AccSupportView\n            serverAddress={this.props.serverAddress}\n            serverVersion={this.props.serverVersion} /> :\n\n          (view === 'contacts' || view == 'archive' || view == 'blocked') ?\n          <ContactsView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            connected={this.props.connected}\n            topicSelected={this.props.topicSelected}\n            archive={view == 'archive'}\n            blocked={view == 'blocked'}\n            chatList={this.props.chatList}\n            showContextMenu={this.props.showContextMenu}\n            onTopicSelected={this.props.onTopicSelected}\n            onShowArchive={this.props.onShowArchive} /> :\n\n          view === 'newtpk' ?\n          <NewTopicView\n            tinode={this.props.tinode}\n            searchResults={this.props.searchResults}\n            onInitFind={this.props.onInitFind}\n            onSearchContacts={this.props.onSearchContacts}\n            onCreateTopic={this.props.onCreateTopic}\n            onError={this.props.onError} /> :\n\n          view === 'cred' ?\n          <ValidationView\n            credCode={this.props.credCode}\n            credMethod={this.props.credMethod}\n            onSubmit={this.props.onValidateCredentials}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'reset' ?\n          <PasswordResetView\n            onRequest={this.props.onPasswordResetRequest}\n            onReset={this.props.onResetPassword} /> :\n          null}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SidepanelView);\n","// The top-level class to hold all functionality together.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport * as firebase from 'firebase/app';\nimport 'firebase/messaging';\n\nimport Tinode from 'tinode-sdk';\n\nimport Alert from '../widgets/alert.jsx';\nimport ContextMenu from '../widgets/context-menu.jsx';\n\nimport InfoView from './info-view.jsx';\nimport MessagesView from './messages-view.jsx';\nimport SidepanelView from './sidepanel-view.jsx';\n\nimport { API_KEY, APP_NAME, DEFAULT_P2P_ACCESS_MODE, LOGGING_ENABLED,\n  MEDIA_BREAKPOINT, RECEIVED_DELAY } from '../config.js';\nimport { base64ReEncode, makeImageUrl } from '../lib/blob-helpers.js';\nimport { detectServerAddress, isLocalHost, isSecureConnection } from '../lib/host-name.js';\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { secondsToTime } from '../lib/strformat.js'\nimport { updateFavicon } from '../lib/utils.js';\n\n// Sound to play on message received.\nconst POP_SOUND = new Audio('audio/msg.mp3');\n\nconst messages = defineMessages({\n  reconnect_countdown: {\n    id: 'reconnect_countdown',\n    defaultMessage: 'Disconnected. Reconnecting in {seconds}…',\n    description: 'Message shown when an app update is available.'\n  },\n  reconnect_now: {\n    id: 'reconnect_now',\n    defaultMessage: 'Try now',\n    description: 'Prompt for reconnecting now'\n  },\n  push_init_failed: {\n    id: 'push_init_failed',\n    defaultMessage: 'Failed to initialize push notifications',\n    description: 'Error message when push notifications have failed to initialize.'\n  },\n  invalid_security_token: {\n    id: 'invalid_security_token',\n    defaultMessage: 'Invalid security token',\n    description: 'Error message when resetting password.'\n  },\n  no_connection: {\n    id: 'no_connection',\n    defaultMessage: 'No connection',\n    description: 'Warning that the user is offline.'\n  },\n  code_doesnot_match: {\n    id: 'code_doesnot_match',\n    defaultMessage: 'Code does not match',\n    description: 'Error message when the credential validation code is incorrect.'\n  }\n});\n\nclass TinodeWeb extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = this.getBlankState();\n\n    this.handleResize = this.handleResize.bind(this);\n    this.handleHashRoute = this.handleHashRoute.bind(this);\n    this.handleOnline = this.handleOnline.bind(this);\n    this.checkForAppUpdate = this.checkForAppUpdate.bind(this);\n    this.handleVisibilityEvent = this.handleVisibilityEvent.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.handleLoginRequest = this.handleLoginRequest.bind(this);\n    this.handleConnected = this.handleConnected.bind(this);\n    this.handleAutoreconnectIteration = this.handleAutoreconnectIteration.bind(this);\n    this.doLogin = this.doLogin.bind(this);\n    this.handleCredentialsRequest = this.handleCredentialsRequest.bind(this);\n    this.handleLoginSuccessful = this.handleLoginSuccessful.bind(this);\n    this.handleDisconnect = this.handleDisconnect.bind(this);\n    this.tnMeMetaDesc = this.tnMeMetaDesc.bind(this);\n    this.tnMeContactUpdate = this.tnMeContactUpdate.bind(this);\n    this.tnMeSubsUpdated = this.tnMeSubsUpdated.bind(this);\n    this.resetContactList = this.resetContactList.bind(this);\n    this.tnData = this.tnData.bind(this);\n    this.tnInitFind = this.tnInitFind.bind(this);\n    this.tnFndSubsUpdated = this.tnFndSubsUpdated.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleTopicSelected = this.handleTopicSelected.bind(this);\n    this.handleHideMessagesView = this.handleHideMessagesView.bind(this);\n    this.handleSendMessage = this.handleSendMessage.bind(this);\n    this.handleNewChatInvitation = this.handleNewChatInvitation.bind(this);\n    this.handleNewAccount = this.handleNewAccount.bind(this);\n    this.handleNewAccountRequest = this.handleNewAccountRequest.bind(this);\n    this.handleUpdateAccountRequest = this.handleUpdateAccountRequest.bind(this);\n    this.handleUpdateAccountTagsRequest = this.handleUpdateAccountTagsRequest.bind(this);\n    this.handleToggleIncognitoMode = this.handleToggleIncognitoMode.bind(this);\n    this.handleSettings = this.handleSettings.bind(this);\n    this.handleGlobalSettings = this.handleGlobalSettings.bind(this);\n    this.handleShowArchive = this.handleShowArchive.bind(this);\n    this.handleShowBlocked = this.handleShowBlocked.bind(this);\n    this.handleToggleMessageSounds = this.handleToggleMessageSounds.bind(this);\n    this.handleCredAdd = this.handleCredAdd.bind(this);\n    this.handleCredDelete = this.handleCredDelete.bind(this);\n    this.handleCredConfirm = this.handleCredConfirm.bind(this);\n    this.initDesktopAlerts = this.initDesktopAlerts.bind(this);\n    this.togglePushToken = this.togglePushToken.bind(this);\n    this.requestPushToken = this.requestPushToken.bind(this);\n    this.handleSidepanelCancel = this.handleSidepanelCancel.bind(this);\n    this.handleStartTopicRequest = this.handleStartTopicRequest.bind(this);\n    this.handleNewTopicCreated = this.handleNewTopicCreated.bind(this);\n    this.handleTopicUpdateRequest = this.handleTopicUpdateRequest.bind(this);\n    this.handleChangePermissions = this.handleChangePermissions.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n    this.handleDeleteMessagesRequest = this.handleDeleteMessagesRequest.bind(this);\n    this.handleLeaveUnsubRequest = this.handleLeaveUnsubRequest.bind(this);\n    this.handleBlockTopicRequest = this.handleBlockTopicRequest.bind(this);\n    this.handleReportTopic = this.handleReportTopic.bind(this);\n    this.handleShowContextMenu = this.handleShowContextMenu.bind(this);\n    this.defaultTopicContextMenu = this.defaultTopicContextMenu.bind(this);\n    this.handleHideContextMenu = this.handleHideContextMenu.bind(this);\n    this.handleShowAlert = this.handleShowAlert.bind(this);\n    this.handleShowInfoView = this.handleShowInfoView.bind(this);\n    this.handleHideInfoView = this.handleHideInfoView.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleValidateCredentialsRequest = this.handleValidateCredentialsRequest.bind(this);\n    this.handlePasswordResetRequest = this.handlePasswordResetRequest.bind(this);\n    this.handleResetPassword = this.handleResetPassword.bind(this);\n    this.handleContextMenuAction = this.handleContextMenuAction.bind(this);\n  }\n\n  getBlankState() {\n    const settings = LocalStorageUtil.getObject('settings') || {};\n\n    return {\n      connected: false,\n      // Connected and subscribed to 'me'\n      ready: false,\n      // Try to re-login on new connection.\n      autoLogin: false,\n      transport: settings.transport || null,\n      serverAddress: settings.serverAddress || detectServerAddress(),\n      serverVersion: \"no connection\",\n      // \"On\" is the default, so saving the \"off\" state.\n      messageSounds: !settings.messageSoundsOff,\n      incognitoMode: false,\n      desktopAlerts: settings.desktopAlerts,\n      desktopAlertsEnabled: (isSecureConnection() || isLocalHost()) &&\n        (typeof firebase != 'undefined') && (typeof navigator != 'undefined') &&\n        (typeof FIREBASE_INIT != 'undefined'),\n      firebaseToken: LocalStorageUtil.getObject('firebase-token'),\n\n      applicationVisible: !document.hidden,\n\n      errorText: '',\n      errorLevel: null,\n      errorAction: undefined,\n      errorActionText: null,\n\n      sidePanelSelected: 'login',\n      sidePanelTitle: null,\n      sidePanelAvatar: null,\n      loadSpinnerVisible: false,\n\n      login: '',\n      password: '',\n      myUserId: null,\n      liveConnection: navigator.onLine,\n      topicSelected: '',\n      topicSelectedOnline: false,\n      topicSelectedAcs: null,\n      newTopicParams: null,\n      loginDisabled: false,\n      displayMobile: (window.innerWidth <= MEDIA_BREAKPOINT),\n      showInfoPanel: false,\n      mobilePanel: 'sidepanel',\n\n      contextMenuVisible: false,\n      contextMenuBounds: null,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuItems: [],\n\n      // Modal alert dialog.\n      alertVisible: false,\n      alertParams: {},\n\n      // Chats as shown in the ContactsView\n      chatList: [],\n      // Contacts returned by a search query.\n      searchResults: [],\n      // Merged results of a search query and p2p chats.\n      searchableContacts: [],\n      credMethod: undefined,\n      credCode: undefined\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    window.addEventListener('online', (e) => { this.handleOnline(true); });\n    window.addEventListener('offline', (e) => { this.handleOnline(false); });\n    window.addEventListener('hashchange', this.handleHashRoute);\n    // Window/tab visible or invisible for pausing timers.\n    document.addEventListener('visibilitychange', this.handleVisibilityEvent);\n\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n\n    const {formatMessage, locale} = this.props.intl;\n    this.tinode = TinodeWeb.tnSetup(this.state.serverAddress, this.state.transport, locale);\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n\n    // Initialize desktop alerts.\n    if (this.state.desktopAlertsEnabled) {\n      try {\n        this.fbPush = firebase.initializeApp(FIREBASE_INIT, APP_NAME).messaging();\n        this.fbPush.usePublicVapidKey(FIREBASE_INIT.messagingVapidKey);\n        navigator.serviceWorker.register('/service-worker.js').then((reg) => {\n          this.checkForAppUpdate(reg);\n          this.fbPush.useServiceWorker(reg);\n          reg.active.postMessage(JSON.stringify({locale: locale}));\n          this.initDesktopAlerts();\n          if (this.state.desktopAlerts) {\n            if (!this.state.firebaseToken) {\n              this.togglePushToken(true);\n            } else {\n              this.tinode.setDeviceToken(this.state.firebaseToken, true);\n            }\n          }\n        }).catch((err) => {\n          // registration failed :(\n          console.log(\"Failed to register service worker:\", err);\n        });\n      } catch (err) {\n        this.handleError(formatMessage({id: 'push_init_failed'}), 'err');\n        console.log(\"Failed to initialize push notifications\", err);\n        this.setState({desktopAlertsEnabled: false});\n      }\n    }\n\n    const token = LocalStorageUtil.getObject('keep-logged-in') ?\n      LocalStorageUtil.getObject('auth-token') : undefined;\n\n    const parsedNav = HashNavigation.parseUrlHash(window.location.hash);\n    if (token) {\n      this.setState({autoLogin: true});\n\n      // When reading from storage, date is returned as string.\n      token.expires = new Date(token.expires);\n      this.tinode.setAuthToken(token);\n      this.tinode.connect().catch((err) => {\n        // Socket error\n        this.handleError(err.message, 'err');\n      });\n      delete parsedNav.params.info;\n      delete parsedNav.params.tab;\n      parsedNav.path[0] = '';\n      HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsedNav.path, parsedNav.params));\n    } else if (!parsedNav.params.token) {\n      HashNavigation.navigateTo('');\n    }\n\n    this.readTimer = null;\n    this.readTimerCallback = null;\n\n    this.handleHashRoute();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n    window.removeEventListener('hashchange', this.handleHashRoute);\n    document.removeEventListener('visibilitychange', this.handleVisibilityEvent);\n  }\n\n  // Setup transport (usually websocket) and server address. This will terminate connection with the server.\n  static tnSetup(serverAddress, transport, locale) {\n    const tinode = new Tinode(APP_NAME, serverAddress, API_KEY, transport, isSecureConnection());\n    tinode.setHumanLanguage(locale);\n    tinode.enableLogging(LOGGING_ENABLED, true);\n    return tinode;\n  }\n\n  handleResize() {\n    const mobile = document.documentElement.clientWidth <= MEDIA_BREAKPOINT;\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n    if (this.state.displayMobile != mobile) {\n      this.setState({displayMobile: mobile});\n    }\n  }\n\n  // Check if a newer version of TinodeWeb app is available at the server.\n  checkForAppUpdate(reg) {\n    reg.onupdatefound = () => {\n      const installingWorker = reg.installing;\n      installingWorker.onstatechange = () => {\n        if (installingWorker.state == 'installed' && navigator.serviceWorker.controller) {\n          const msg = <>\n            <FormattedMessage id=\"update_available\"\n              defaultMessage=\"Update available.\"\n              description=\"Message shown when an app update is available.\" /> <a href=\"\">\n              <FormattedMessage id=\"reload_update\"\n                defaultMessage=\"Reload\"\n                description=\"Call to action to reload application when update is available.\" />\n            </a>.</>;\n          this.handleError(msg, 'info');\n        }\n      }\n    }\n  }\n\n  // Handle for hashchange event: display appropriate panels.\n  handleHashRoute() {\n    const hash = HashNavigation.parseUrlHash(window.location.hash);\n    if (hash.path && hash.path.length > 0) {\n      // Left-side panel selector.\n      if (['register','settings','edit','notif','security','support','general',\n          'cred','reset','newtpk','archive','blocked','contacts',''].includes(hash.path[0])) {\n        this.setState({sidePanelSelected: hash.path[0]});\n      } else {\n        console.log(\"Unknown sidepanel view\", hash.path[0]);\n      }\n\n      // Topic for MessagesView selector.\n      if (hash.path.length > 1 && hash.path[1] != this.state.topicSelected) {\n        this.setState({\n          topicSelected: Tinode.topicType(hash.path[1]) ? hash.path[1] : null\n        });\n      }\n    } else {\n      // Empty hashpath\n      this.setState({sidePanelSelected: ''});\n    }\n\n    // Save validation credentials, if available.\n    if (hash.params.method) {\n      this.setState({ credMethod: hash.params.method });\n    }\n    if (hash.params.code) {\n      this.setState({ credCode: hash.params.code });\n    }\n\n    // Additional parameters of panels.\n    this.setState({\n      showInfoPanel: hash.params.info,\n      newTopicTabSelected: hash.params.tab\n    });\n  }\n\n  handleOnline(online) {\n    if (online) {\n      this.handleError();\n    } else {\n      this.handleError(this.props.intl.formatMessage({id: 'no_connection'}), 'warn');\n    }\n    this.setState({liveConnection: online});\n  }\n\n  handleVisibilityEvent() {\n    this.setState({applicationVisible: !document.hidden});\n  }\n\n  handleError(err, level, action, actionText) {\n    this.setState({errorText: err, errorLevel: level, errorAction: action, errorActionText: actionText});\n  }\n\n  // User clicked Login button in the side panel.\n  handleLoginRequest(login, password) {\n    this.setState({\n      loginDisabled: true,\n      login: login,\n      password: password,\n      loadSpinnerVisible: true,\n      autoLogin: true\n    });\n    this.handleError('', null);\n\n    if (this.tinode.isConnected()) {\n      this.doLogin(login, password, {meth: this.state.credMethod, resp: this.state.credCode});\n    } else {\n      this.tinode.connect().catch((err) => {\n        // Socket error\n        this.setState({loginDisabled: false, autoLogin: false, loadSpinnerVisible: false});\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // Connection succeeded.\n  handleConnected() {\n    const params = this.tinode.getServerInfo();\n    this.setState({\n      serverVersion: params.ver + ' ' + (params.build ? params.build : 'none')\n    });\n\n    if (this.state.autoLogin) {\n      this.doLogin(this.state.login, this.state.password, {meth: this.state.credMethod, resp: this.state.credCode});\n    }\n  }\n\n  // Called for each auto-reconnect iteration.\n  handleAutoreconnectIteration(sec, prom) {\n    clearInterval(this.reconnectCountdown);\n\n    if (sec < 0) {\n      // Clear error\n      this.handleError();\n      return;\n    }\n\n    if (prom) {\n      // Reconnecting now\n      prom.then(() => {\n        // Reconnected: clear error\n        this.handleError();\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n      return;\n    }\n\n    const {formatMessage} = this.props.intl;\n    let count = sec / 1000;\n    count = count | count;\n    this.reconnectCountdown = setInterval(() => {\n      const timeLeft = (count > 99) ? secondsToTime(count) : count;\n      this.handleError(\n        formatMessage(messages.reconnect_countdown, {seconds: timeLeft}),\n        'warn',\n        () => {\n          clearInterval(this.reconnectCountdown);\n          this.tinode.reconnect();\n        },\n        formatMessage(messages.reconnect_now)\n      );\n      count -= 1;\n    }, 1000);\n  }\n\n  // Connection lost\n  handleDisconnect(err) {\n    this.setState({\n      connected: false,\n      ready: false,\n      topicSelectedOnline: false,\n      errorText: err && err.message ? err.message : \"Disconnected\",\n      errorLevel: err && err.message ? 'err' : 'warn',\n      loginDisabled: false,\n      contextMenuVisible: false,\n      serverVersion: \"no connection\"\n    });\n  }\n\n  doLogin(login, password, cred) {\n    if (this.tinode.isAuthenticated()) {\n      // Already logged in. Go to default screen.\n      HashNavigation.navigateTo('');\n      return;\n    }\n    // Sanitize and package credentail.\n    cred = Tinode.credential(cred);\n    // Try to login with login/password. If they are not available, try token. If no token, ask for login/password.\n    let promise = null;\n    const token = this.tinode.getAuthToken();\n    if (login && password) {\n      this.setState({password: null});\n      promise = this.tinode.loginBasic(login, password, cred);\n    } else if (token) {\n      promise = this.tinode.loginToken(token.token, cred);\n    }\n\n    if (promise) {\n      promise.then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text === 'validate credentials') {\n          this.setState({loadSpinnerVisible: false});\n          if (cred) {\n            this.handleError(this.props.intl.formatMessage({id: 'code_doesnot_match'}), 'warn');\n          }\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful();\n        }\n      }).catch((err) => {\n        // Login failed, report error.\n        this.setState({\n          loginDisabled: false,\n          credMethod: undefined,\n          credCode: undefined,\n          loadSpinnerVisible: false,\n          autoLogin: false\n        });\n        this.handleError(err.message, 'err');\n        localStorage.removeItem('auth-token');\n        HashNavigation.navigateTo('');\n      });\n    } else {\n      // No login credentials provided.\n      // Make sure we are on the login page.\n      HashNavigation.navigateTo('');\n      this.setState({loginDisabled: false});\n    }\n  }\n\n  handleCredentialsRequest(params) {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    parsed.path[0] = 'cred';\n    parsed.params['method'] = params.cred[0];\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n  }\n\n  handleLoginSuccessful() {\n    this.handleError();\n\n    // Refresh authentication token.\n    if (LocalStorageUtil.getObject('keep-logged-in')) {\n      LocalStorageUtil.setObject('auth-token', this.tinode.getAuthToken());\n    }\n    // Logged in fine, subscribe to 'me' attaching callbacks from the contacts view.\n    const me = this.tinode.getMeTopic();\n    me.onMetaDesc = this.tnMeMetaDesc;\n    me.onContactUpdate = this.tnMeContactUpdate;\n    me.onSubsUpdated = this.tnMeSubsUpdated;\n    this.setState({\n      connected: true,\n      credMethod: undefined,\n      credCode: undefined,\n      myUserId: this.tinode.getCurrentUserID(),\n      autoLogin: true,\n    });\n    // Subscribe, fetch topic desc, the list of subscriptions. Messages are not fetched.\n    me.subscribe(\n      me.startMetaQuery().\n        withLaterSub().\n        withDesc().\n        withTags().\n        withCred().\n        build()\n      ).catch((err) => {\n        this.tinode.disconnect();\n        localStorage.removeItem('auth-token');\n        this.handleError(err.message, 'err');\n        HashNavigation.navigateTo('');\n      }).finally(() => {\n        this.setState({loadSpinnerVisible: false});\n      });\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, 'contacts'));\n  }\n\n  tnMeMetaDesc(desc) {\n    if (desc) {\n      if (desc.public) {\n        this.setState({\n          sidePanelTitle: desc.public.fn,\n          sidePanelAvatar: makeImageUrl(desc.public.photo)\n        });\n      }\n      if (desc.acs) {\n        this.setState({\n          incognitoMode: !desc.acs.isPresencer()\n        });\n      }\n    }\n  }\n\n  // Reactions to updates to the contact list.\n  tnMeContactUpdate(what, cont) {\n    if (what == 'on' || what == 'off') {\n      this.resetContactList();\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedOnline: (what == 'on')});\n      }\n    } else if (what == 'read') {\n      this.resetContactList();\n    } else if (what == 'msg') {\n      // Check if the topic is archived. If so, don't play a sound.\n      const topic = this.tinode.getTopic(cont.topic);\n      const archived = topic && topic.isArchived();\n\n      // New message received. Maybe the message is from the current user, then unread is 0.\n      if (cont.unread > 0 && this.state.messageSounds && !archived) {\n        // Skip update if the topic is currently open, otherwise the badge will annoyingly flash.\n        if (document.hidden || this.state.topicSelected != cont.topic) {\n          POP_SOUND.play();\n        }\n      }\n      // Reorder contact list to use possibly updated 'touched'.\n      this.resetContactList();\n    } else if (what == 'recv') {\n      // Explicitly ignoring \"recv\" -- it causes no visible updates to contact list.\n    } else if (what == 'gone' || what == 'unsub') {\n      // Topic deleted or user unsubscribed. Remove topic from view.\n      // If the currently selected topic is gone, clear the selection.\n      if (this.state.topicSelected == cont.topic) {\n        this.handleTopicSelected(null);\n      }\n      // Redraw without the deleted topic.\n      this.resetContactList();\n    } else if (what == 'acs') {\n      // Permissions changed. If it's for the currently selected topic,\n      // update the views.\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedAcs: cont.acs});\n      }\n    } else if (what == 'del') {\n      // TODO: messages deleted (hard or soft) -- update pill counter.\n    } else if (what == 'upd') {\n      // upd - handled by the SDK. Explicitly ignoring here.\n    } else {\n      // TODO(gene): handle other types of notifications:\n      // * ua -- user agent changes (maybe display a pictogram for mobile/desktop).\n      console.log(\"Unsupported (yet) presence update:\" + what + \" in: \" + cont.topic);\n    }\n  }\n\n  tnMeSubsUpdated(unused) {\n    this.resetContactList();\n  }\n\n  // Merge search results and contact list to create a single flat\n  // list of kown contacts for GroupManager to use.\n  static prepareSearchableContacts(chatList, foundContacts) {\n    const merged = {};\n\n    // For chatList topics merge only p2p topics and convert them to the\n    // same format as foundContacts.\n    for (const c of chatList) {\n      if (Tinode.isP2PTopicName(c.topic)) {\n          merged[c.topic] = {\n            user: c.topic,\n            updated: c.updated,\n            public: c.public,\n            private: c.private,\n            acs: c.acs\n          };\n      }\n    }\n\n    // Add all foundCountacts if they have not been added already.\n    for (const c of foundContacts) {\n      if (!merged[c.user]) {\n        merged[c.user] = c;\n      }\n    }\n\n    return Object.values(merged);\n  }\n\n  resetContactList() {\n    const newState = {\n      chatList: []\n    };\n\n    if (!this.state.ready) {\n      newState.ready = true;\n    }\n\n    this.tinode.getMeTopic().contacts((c) => {\n      newState.chatList.push(c);\n      if (this.state.topicSelected == c.topic) {\n        newState.topicSelectedOnline = c.online;\n        newState.topicSelectedAcs = c.acs;\n      }\n    });\n    // Merge search results and chat list.\n    newState.searchableContacts = TinodeWeb.prepareSearchableContacts(newState.chatList, this.state.searchResults);\n    this.setState(newState);\n  }\n\n  // Sending \"received\" notifications\n  tnData(data) {\n    const topic = this.tinode.getTopic(data.topic);\n    if (topic.msgStatus(data) >= Tinode.MESSAGE_STATUS_SENT && data.from != this.state.myUserId) {\n      clearTimeout(this.receivedTimer);\n      this.receivedTimer = setTimeout(() => {\n        this.receivedTimer = undefined;\n        topic.noteRecv(data.seq);\n      }, RECEIVED_DELAY);\n    }\n  }\n\n  /* Fnd topic: find contacts by tokens */\n  tnInitFind() {\n    const fnd = this.tinode.getFndTopic();\n    fnd.onSubsUpdated = this.tnFndSubsUpdated;\n    if (fnd.isSubscribed()) {\n      this.tnFndSubsUpdated();\n    } else {\n      fnd.subscribe(fnd.startMetaQuery().withSub().build()).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  tnFndSubsUpdated() {\n    const foundContacts = [];\n    // Don't attempt to create P2P topics which already exist. Server will reject the duplicates.\n    this.tinode.getFndTopic().contacts((s) => {\n      foundContacts.push(s);\n    });\n    this.setState({\n      searchResults: foundContacts,\n      searchableContacts: TinodeWeb.prepareSearchableContacts(this.state.chatList, foundContacts)\n    });\n  }\n\n  /** Called when the user enters a contact into the contact search field in the NewAccount panel\n    @param query {Array} is an array of contacts to search for\n   */\n  handleSearchContacts(query) {\n    const fnd = this.tinode.getFndTopic();\n    fnd.setMeta({desc: {public: query}}).then((ctrl) => {\n      return fnd.getMeta(fnd.startMetaQuery().withSub().build());\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  // User clicked on a contact in the side panel or deleted a contact.\n  handleTopicSelected(topicName) {\n    // Clear newTopicParams after use.\n    if (this.state.newTopicParams && this.state.newTopicParams._topicName != topicName) {\n      this.setState({\n        newTopicParams: null\n      });\n    }\n\n    if (topicName) {\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'topic-view',\n        showInfoPanel: false\n      });\n      // Different contact selected.\n      if (this.state.topicSelected != topicName) {\n        this.setState({\n          topicSelectedOnline: this.tinode.isTopicOnline(topicName),\n          topicSelectedAcs: this.tinode.getTopicAccessMode(topicName)\n        });\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', topicName));\n      }\n    } else {\n      // Currently selected contact deleted\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'sidepanel',\n        topicSelectedOnline: false,\n        topicSelectedAcs: null,\n        showInfoPanel: false\n      });\n\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic('', null));\n    }\n  }\n\n  // In mobile view user requested to show sidepanel\n  handleHideMessagesView() {\n    this.setState({\n      mobilePanel: 'sidepanel'\n    });\n    HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, null));\n  }\n\n  // User is sending a message, either plain text or a drafty object, possibly\n  // with attachments.\n  //  - msg - Drafty message with content\n  //  - promise - Promise to be resolved when the upload is completed\n  //  - uploader - for tracking progress\n  handleSendMessage(msg, promise, uploader) {\n    const topic = this.tinode.getTopic(this.state.topicSelected);\n\n    msg = topic.createMessage(msg, false);\n    // The uploader is used to show progress.\n    msg._uploader = uploader;\n\n    if (!topic.isSubscribed()) {\n      if (!promise) {\n        promise = Promise.resolve();\n      }\n      promise = promise.then(() => { return topic.subscribe(); });\n    }\n\n    if (promise) {\n      promise = promise.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n\n    topic.publishDraft(msg, promise)\n      .then((ctrl) => {\n        if (topic.isArchived()) {\n          return topic.archive(false);\n        }\n      })\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleNewChatInvitation(topicName, action) {\n    const topic = this.tinode.getTopic(topicName);\n    let response = null;\n    switch (action) {\n      case 'accept':\n        // Accept given permissions.\n        const mode = topic.getAccessMode().getGiven();\n        response = topic.setMeta({sub: {mode: mode}});\n        if (topic.isP2P()) {\n          // For P2P topics change 'given' permission of the peer too.\n          // In p2p topics the other user has the same name as the topic.\n          response = response.then((ctrl) => {\n            topic.setMeta({sub: {user: topicName, mode: mode}});\n          });\n        }\n        break;\n      case 'delete':\n        // Ignore invitation by deleting it.\n        response = topic.delTopic(true);\n        break;\n      case 'block':\n        // Ban the topic making futher invites impossible.\n        // Just self-ban.\n        const am = topic.getAccessMode().updateWant('-JP').getWant();\n        response = topic.setMeta({sub: {mode: am}}).then((ctrl) => {\n          return this.handleTopicSelected(null);\n        });\n        break;\n      default:\n        console.log(\"Unknown invitation action\", '\"' + action + '\"\"');\n    }\n\n    if (response != null) {\n      response.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // User chose a Sign Up menu item.\n  handleNewAccount() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, 'register'));\n  }\n\n  // Actual registration of a new account.\n  handleNewAccountRequest(login_, password_, public_, cred_, tags_) {\n    // Clear old error, if any.\n    this.handleError();\n\n    this.tinode.connect(this.state.serverAddress)\n      .then(() => {\n        return this.tinode.createAccountBasic(login_, password_,\n          {public: public_, tags: tags_, cred: Tinode.credential(cred_)});\n      }).then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text == 'validate credentials') {\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful(this);\n        }\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleUpdateAccountRequest(password, pub, defacs) {\n    this.handleError();\n\n    if (pub || defacs) {\n      const params = {};\n      if (pub) {\n        params.public = pub;\n      }\n      if (defacs) {\n        params.defacs = defacs;\n      }\n      this.tinode.getMeTopic().setMeta({desc: params}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n    if (password) {\n      this.tinode.updateAccountBasic(null, this.tinode.getCurrentLogin(), password).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleToggleIncognitoMode(on) {\n    const me = this.tinode.getMeTopic();\n    const am = me.getAccessMode().updateWant(on ? '-P' : '+P').getWant();\n    me.setMeta({sub: {mode: am}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleUpdateAccountTagsRequest(tags) {\n    this.tinode.getMeTopic().setMeta({tags: tags})\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  // User chose Settings menu item.\n  handleSettings() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'edit' : 'settings'));\n  }\n\n  // User updated global parameters.\n  handleGlobalSettings(settings) {\n    const serverAddress = settings.serverAddress || this.state.serverAddress;\n    const transport = settings.transport || this.state.transport;\n    if (this.tinode) {\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.tinode = TinodeWeb.tnSetup(serverAddress, transport, this.props.intl.locale);\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n\n    this.setState({\n      serverAddress: serverAddress,\n      transport: transport\n    });\n    LocalStorageUtil.setObject('settings', {\n      serverAddress: serverAddress,\n      transport: transport\n    });\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, ''));\n  }\n\n  // User chose 'Archived chats'.\n  handleShowArchive() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'archive' : ''));\n  }\n\n  // User viewes 'Blocked chats'.\n  handleShowBlocked() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'blocked' : ''));\n  }\n\n  // Initialize desktop alerts = push notifications.\n  initDesktopAlerts() {\n    // Google could not be bothered to mention that\n    // onTokenRefresh is never called.\n    this.fbPush.onTokenRefresh(() => {\n      this.requestPushToken();\n    });\n\n    this.fbPush.onMessage((payload) => {\n      // No need to do anything about it.\n      // All the magic happends in the service worker.\n    });\n  }\n\n  togglePushToken(enabled) {\n    if (enabled) {\n      if (!this.state.firebaseToken) {\n        this.fbPush.requestPermission().then(() => {\n          this.requestPushToken();\n        }).catch((err) => {\n          this.handleError(err.message, 'err');\n          this.setState({desktopAlerts: false, firebaseToken: null});\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n          console.log(\"Failed to get permission to notify.\", err);\n        });\n      } else {\n        this.setState({desktopAlerts: true});\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n      }\n    } else if (this.state.firebaseToken) {\n      this.fbPush.deleteToken(this.state.firebaseToken).catch((err) => {\n        console.log(\"Unable to delete token.\", err);\n      }).finally(() => {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        localStorage.removeItem('firebase-token');\n        this.setState({desktopAlerts: false, firebaseToken: null});\n      });\n    } else {\n      this.setState({desktopAlerts: false, firebaseToken: null});\n      LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n    }\n  }\n\n  requestPushToken() {\n    this.fbPush.getToken().then((refreshedToken) => {\n      if (refreshedToken != this.state.firebaseToken) {\n        this.tinode.setDeviceToken(refreshedToken, true);\n        LocalStorageUtil.setObject('firebase-token', refreshedToken);\n      }\n      this.setState({firebaseToken: refreshedToken, desktopAlerts: true});\n      LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n      console.log(\"Failed to retrieve firebase token\", err);\n    });\n  }\n\n  handleToggleMessageSounds(enabled) {\n    this.setState({messageSounds: enabled});\n    LocalStorageUtil.updateObject('settings', {\n      messageSoundsOff: !enabled\n    });\n  }\n\n  handleCredAdd(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.setMeta({cred: {meth: method, val: value}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredDelete(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.delCredential(method, value).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredConfirm(method, response) {\n    this.handleCredentialsRequest({cred: [method]});\n  }\n\n  // User clicked Cancel button in Setting or Sign Up panel.\n  handleSidepanelCancel() {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    let path = '';\n    if (['security','support','general','notif'].includes(parsed.path[0])) {\n      path = 'edit';\n    } else if ('blocked' == parsed.path[0]) {\n      path = 'security';\n    } else if (this.state.myUserId) {\n      path = 'contacts';\n    }\n    parsed.path[0] = path;\n    if (parsed.params) {\n      delete parsed.params.code;\n      delete parsed.params.method;\n      delete parsed.params.tab;\n    }\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n    this.setState({errorText: '', errorLevel: null});\n  }\n\n  // Basic nagigator by hash value. No need to bind to this.\n  basicNavigator(hash) {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, hash));\n  }\n\n  // Request to start a topic, new or selected from search results, or \"by ID\".\n  handleStartTopicRequest(topicName, pub, priv, tags, isChannel) {\n    // Check if topic is indeed new. If not, launch it.\n    if (topicName && this.tinode.isTopicCached(topicName)) {\n      this.handleTopicSelected(topicName);\n      return;\n    }\n\n    const params = {};\n    if (Tinode.isP2PTopicName(topicName)) {\n      // Because we are initialing the subscription, set 'want' to all permissions.\n      params.sub = {mode: DEFAULT_P2P_ACCESS_MODE};\n      // Give the other user all permissions too.\n      params.desc = {defacs: {auth: DEFAULT_P2P_ACCESS_MODE}};\n    } else {\n      topicName = topicName || this.tinode.newGroupTopicName(isChannel);\n      params.desc = {public: pub, private: {comment: priv}};\n      params.tags = tags;\n    }\n    params._topicName = topicName;\n    this.setState({newTopicParams: params}, () => {this.handleTopicSelected(topicName)});\n  }\n\n  // New topic was creted, here is the new topic name.\n  handleNewTopicCreated(oldName, newName) {\n    if (this.state.topicSelected == oldName && oldName != newName) {\n      // If the current URl contains the old topic name, replace it with new.\n      // Update the name of the selected topic first so the navigator doen't clear\n      // the state.\n      this.setState({topicSelected: newName}, () => {\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', newName));\n      });\n    }\n  }\n\n  handleTopicUpdateRequest(topicName, pub, priv, permissions) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const params = {};\n      if (pub) {\n        params.public = pub;\n      }\n      if (priv) {\n        params.private = (priv === Tinode.DEL_CHAR) ?\n          Tinode.DEL_CHAR : {comment: priv};\n      }\n      if (permissions) {\n        params.defacs = permissions;\n      }\n      topic.setMeta({desc: params}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleChangePermissions(topicName, mode, uid) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const am = topic.getAccessMode();\n      if (uid) {\n        am.updateGiven(mode);\n        mode = am.getGiven();\n      } else {\n        am.updateWant(mode);\n        mode = am.getWant();\n      }\n      topic.setMeta({sub: {user: uid, mode: mode}}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleTagsUpdated(topicName, tags) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      topic.setMeta({tags: tags}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleLogout() {\n    updateFavicon(0);\n\n    // Remove stored data.\n    localStorage.removeItem('auth-token');\n    localStorage.removeItem('firebase-token');\n    localStorage.removeItem('settings');\n    if (this.state.firebaseToken) {\n      this.fbPush.deleteToken(this.state.firebaseToken)\n    }\n\n    if (this.tinode) {\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.setState(this.getBlankState());\n    this.tinode = TinodeWeb.tnSetup(this.state.serverAddress, this.state.transport, this.props.intl.locale);\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    HashNavigation.navigateTo('');\n  }\n\n  handleDeleteAccount() {\n    this.tinode.delCurrentUser(true).then((ctrl) => {\n      this.handleLogout();\n    });\n  }\n\n  handleDeleteMessagesRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Request hard-delete all messages.\n    topic.delMessagesAll(true).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleLeaveUnsubRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.leave(true).then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleBlockTopicRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleReportTopic(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Publish spam report.\n    this.tinode.publish(Tinode.TOPIC_SYS, Tinode.Drafty.attachJSON(null, {\n      'action': 'report',\n      'target': topicName\n    }));\n\n    // Remove J and P permissions.\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleShowContextMenu(params, menuItems) {\n    this.setState({\n      contextMenuVisible: true,\n      contextMenuClickAt: {x: params.x, y: params.y},\n      contextMenuParams: params,\n      contextMenuItems: menuItems || this.defaultTopicContextMenu(params.topicName),\n      contextMenuBounds: ReactDOM.findDOMNode(this).getBoundingClientRect()\n    });\n  }\n\n  defaultTopicContextMenu(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n\n    let muted = false, blocked = false, self_blocked = false, subscribed = false, deleter = false, archived = false;\n    if (topic) {\n      subscribed = topic.isSubscribed();\n      archived = topic.isArchived();\n\n      const acs = topic.getAccessMode();\n      if (acs) {\n        muted = acs.isMuted();\n        blocked = !acs.isJoiner();\n        self_blocked = !acs.isJoiner('want');\n        deleter = acs.isDeleter();\n      }\n    }\n\n    return [\n      subscribed ? {\n        title: this.props.intl.formatMessage({id: 'menu_item_info'}),\n        handler: this.handleShowInfoView\n      } : null,\n      subscribed ? 'messages_clear' : null,\n      subscribed && deleter ? 'messages_clear_hard' : null,\n      muted ? (blocked ? null : 'topic_unmute') : 'topic_mute',\n      self_blocked ? 'topic_unblock' : 'topic_block',\n      !archived ? 'topic_archive' : null,\n      'topic_delete'\n    ];\n  }\n\n  handleHideContextMenu() {\n    this.setState({\n      contextMenuVisible: false,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuBounds: null\n    });\n  }\n\n  handleContextMenuAction(action, promise, params) {\n    if (action == 'topic_archive') {\n      if (promise && params.topicName && params.topicName == this.state.topicSelected) {\n        promise.then(() => {\n          this.handleTopicSelected(null);\n        });\n      }\n    }\n  }\n\n  handleShowAlert(title, content, onConfirm, confirmText, onReject, rejectText) {\n    this.setState({\n      alertVisible: true,\n      alertParams: {\n        title: title,\n        content: content,\n        onConfirm: onConfirm,\n        confirm: confirmText,\n        onReject: onReject,\n        reject: rejectText\n      }\n    });\n  }\n\n  handleShowInfoView() {\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'info', true));\n    this.setState({showInfoPanel: true});\n  }\n\n  handleHideInfoView() {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'info'));\n    this.setState({showInfoPanel: false});\n  }\n\n  handleMemberUpdateRequest(topicName, added, removed) {\n    if (!topicName) {\n      return;\n    }\n\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    if (added && added.length > 0) {\n      added.map((uid) => {\n        topic.invite(uid, null).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n\n    if (removed && removed.length > 0) {\n      removed.map((uid) => {\n        topic.delSubscription(uid).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n  }\n\n  handleValidateCredentialsRequest(cred, code) {\n    if (this.tinode.isAuthenticated()) {\n      const me = this.tinode.getMeTopic();\n      me.setMeta({cred: {meth: cred, resp: code}})\n        .then(() => {\n          HashNavigation.navigateTo('');\n        })\n        .catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n    } else {\n      this.setState({credMethod: cred, credCode: code});\n      this.doLogin(null, null, {meth: cred, resp: code});\n    }\n  }\n\n  handlePasswordResetRequest(method, value) {\n    // If already connected, connnect() will return a resolved promise.\n    this.tinode.connect()\n      .then(() => {\n        return this.tinode.requestResetAuthSecret('basic', method, value);\n      })\n      .catch((err) => {\n        // Socket error\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleResetPassword(scheme, newPassword, token) {\n    token = base64ReEncode(token);\n    if (!token) {\n      this.handleError(this.props.intl.formatMessage({id: 'invalid_security_token'}), 'err');\n    } else {\n      this.tinode.connect()\n        .then(() => {\n          return this.tinode.updateAccountBasic(null, null, newPassword, {token: token});\n        })\n        .catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"app-container\">\n        {this.state.contextMenuVisible ?\n          <ContextMenu\n            tinode={this.tinode}\n            bounds={this.state.contextMenuBounds}\n            clickAt={this.state.contextMenuClickAt}\n            params={this.state.contextMenuParams}\n            items={this.state.contextMenuItems}\n            hide={this.handleHideContextMenu}\n            onShowAlert={this.handleShowAlert}\n            onAction={this.handleContextMenuAction}\n            onTopicRemoved={(topicName) => {\n              if (topicName == this.state.topicSelected) {\n                this.handleTopicSelected(null);\n              }\n            }}\n            onError={this.handleError} />\n          :\n          null\n        }\n        <Alert\n          visible={this.state.alertVisible}\n          title={this.state.alertParams.title}\n          content={this.state.alertParams.content}\n          onReject={this.state.alertParams.onReject ? (() => { this.setState({alertVisible: false}); }) : null}\n          reject={this.state.alertParams.reject}\n          onConfirm={() => { this.setState({alertVisible: false}); this.state.alertParams.onConfirm(); }}\n          confirm={this.state.alertParams.confirm}\n          />\n        <SidepanelView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          displayMobile={this.state.displayMobile}\n          hideSelf={this.state.displayMobile && this.state.mobilePanel !== 'sidepanel'}\n          state={this.state.sidePanelSelected}\n          title={this.state.sidePanelTitle}\n          avatar={this.state.sidePanelAvatar}\n          login={this.state.login}\n          myUserId={this.state.myUserId}\n          loginDisabled={this.state.loginDisabled}\n          loadSpinnerVisible={this.state.loadSpinnerVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          topicSelected={this.state.topicSelected}\n          chatList={this.state.chatList}\n          credMethod={this.state.credMethod}\n          credCode={this.state.credCode}\n\n          transport={this.state.transport}\n          messageSounds={this.state.messageSounds}\n          desktopAlerts={this.state.desktopAlerts}\n          desktopAlertsEnabled={this.state.desktopAlertsEnabled}\n          incognitoMode={this.state.incognitoMode}\n          serverAddress={this.state.serverAddress}\n          serverVersion={this.state.serverVersion}\n\n          onGlobalSettings={this.handleGlobalSettings}\n          onSignUp={this.handleNewAccount}\n          onSettings={this.handleSettings}\n          onBasicNavigate={this.basicNavigator}\n          onLoginRequest={this.handleLoginRequest}\n          onCreateAccount={this.handleNewAccountRequest}\n          onUpdateAccount={this.handleUpdateAccountRequest}\n          onUpdateAccountTags={this.handleUpdateAccountTagsRequest}\n          onTogglePushNotifications={this.togglePushToken}\n          onToggleMessageSounds={this.handleToggleMessageSounds}\n          onToggleIncognitoMode={this.handleToggleIncognitoMode}\n          onCredAdd={this.handleCredAdd}\n          onCredDelete={this.handleCredDelete}\n          onCredConfirm={this.handleCredConfirm}\n          onTopicSelected={this.handleTopicSelected}\n          onCreateTopic={this.handleStartTopicRequest}\n          onLogout={this.handleLogout}\n          onDeleteAccount={this.handleDeleteAccount}\n          onShowAlert={this.handleShowAlert}\n          onCancel={this.handleSidepanelCancel}\n          onError={this.handleError}\n          onValidateCredentials={this.handleValidateCredentialsRequest}\n          onPasswordResetRequest={this.handlePasswordResetRequest}\n          onResetPassword={this.handleResetPassword}\n          onShowArchive={this.handleShowArchive}\n          onShowBlocked={this.handleShowBlocked}\n\n          onInitFind={this.tnInitFind}\n          searchResults={this.state.searchResults}\n          onSearchContacts={this.handleSearchContacts}\n\n          showContextMenu={this.handleShowContextMenu} />\n\n        <MessagesView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          ready={this.state.ready}\n          online={this.state.topicSelectedOnline}\n          acs={this.state.topicSelectedAcs}\n          displayMobile={this.state.displayMobile}\n          viewportWidth={this.state.viewportWidth}\n          viewportHeight={this.state.viewportHeight}\n          hideSelf={this.state.displayMobile &&\n            (this.state.mobilePanel !== 'topic-view' || this.state.showInfoPanel)}\n          topic={this.state.topicSelected}\n          myUserId={this.state.myUserId}\n          serverVersion={this.state.serverVersion}\n          serverAddress={this.state.serverAddress}\n          applicationVisible={this.state.applicationVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          newTopicParams={this.state.newTopicParams}\n\n          onHideMessagesView={this.handleHideMessagesView}\n          onData={this.tnData}\n          onError={this.handleError}\n          onNewTopicCreated={this.handleNewTopicCreated}\n          showContextMenu={this.handleShowContextMenu}\n          onChangePermissions={this.handleChangePermissions}\n          onNewChat={this.handleNewChatInvitation}\n          sendMessage={this.handleSendMessage} />\n\n        {this.state.showInfoPanel ?\n          <InfoView\n            tinode={this.tinode}\n            connected={this.state.connected}\n            displayMobile={this.state.displayMobile}\n            topic={this.state.topicSelected}\n            searchableContacts={this.state.searchableContacts}\n            myUserId={this.state.myUserId}\n\n            errorText={this.state.errorText}\n            errorLevel={this.state.errorLevel}\n            errorAction={this.state.errorAction}\n            errorActionText={this.state.errorActionText}\n\n            onTopicDescUpdate={this.handleTopicUpdateRequest}\n            onCancel={this.handleHideInfoView}\n            onShowAlert={this.handleShowAlert}\n            onChangePermissions={this.handleChangePermissions}\n            onMemberUpdateRequest={this.handleMemberUpdateRequest}\n            onDeleteMessages={this.handleDeleteMessagesRequest}\n            onLeaveTopic={this.handleLeaveUnsubRequest}\n            onBlockTopic={this.handleBlockTopicRequest}\n            onReportTopic={this.handleReportTopic}\n            onAddMember={this.handleManageGroupMembers}\n            onTopicTagsUpdate={this.handleTagsUpdated}\n            onInitFind={this.tnInitFind}\n            onError={this.handleError}\n\n            showContextMenu={this.handleShowContextMenu}\n            />\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(TinodeWeb);\n","// ValidationView: panel for confirming credentials, like email or phone.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  phone: {\n    id: 'phone_dative',\n    defaultMessage: 'phone',\n    description: \"Dative case of 'phone', i.e. 'phone' in 'by phone'\",\n  },\n  email: {\n    id: 'email_dative',\n    defaultMessage: 'email',\n    description: \"Dative case of 'email', i.e. 'email' in 'by email'\",\n  }\n});\n\nclass ValidationView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      code: props.credCode || ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({code: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    } else if (e.key == 'Escape') {\n      this.handleCancel(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.code && this.state.code.trim()) {\n      this.props.onSubmit(this.props.credMethod, this.state.code.trim());\n    }\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel();\n  }\n\n\n  render() {\n    const { formatMessage } = this.props.intl;\n    const methods = {'email': formatMessage(messages.email), 'tel': formatMessage(messages.phone)};\n    let method = methods[this.props.credMethod] || this.props.credMethod;\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\" htmlFor=\"enter-confirmation-code\">\n            <FormattedMessage id=\"enter_confirmation_code_prompt\"\n              defaultMessage=\"Enter confirmation code sent to you by {method}:\"\n              description=\"Request to enter confirmation code\"\n              values={{method: method}} />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"numeric_confirmation_code_prompt\"\n          defaultMessage=\"Numbers only\" description=\"Prompt for numeric conformation code\">{\n          (numbers_only) => <input type=\"text\" id=\"enter-confirmation-code\"\n            placeholder={numbers_only}\n            value={this.state.code} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"blue\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_confirm\" defaultMessage=\"Confirm\" description=\"Button [Confirm]\" />\n          </button>\n          <button className=\"white\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ValidationView);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Alert extends React.PureComponent {\n  render() {\n    return this.props.visible ?\n      <div className=\"alert-container\">\n        <div className=\"alert\">\n          <div className=\"title\">{this.props.title}</div>\n          <div className=\"content\">{this.props.content}</div>\n          <div className=\"dialog-buttons\">\n            {this.props.onReject ?\n              <button className=\"outline\" onClick={this.props.onReject}>\n                {this.props.reject || <FormattedMessage id=\"button_cancel\" />}\n              </button>\n              :\n              null\n            }\n            <button className=\"blue\" onClick={this.props.onConfirm}>\n              {this.props.confirm || <FormattedMessage id=\"button_ok\" />}\n            </button>\n          </div>\n        </div>\n      </div>\n    :\n    null;\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\nimport { bytesToHumanSize } from '../lib/strformat.js';\nimport { isUrlRelative, sanitizeUrl } from '../lib/utils.js';\n\nexport default class Attachment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      downloader: null,\n      progress: 0\n    };\n\n    this.downloadFile = this.downloadFile.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  downloadFile(url, filename, mimetype) {\n    if (!url) {\n      this.props.onError(\"Invalid download URL '\" + url + \"'\");\n      return;\n    }\n\n    const downloader = this.props.tinode.getLargeFileHelper();\n    this.setState({downloader: downloader});\n    downloader.download(url, filename, mimetype,\n      (loaded) => {\n        this.setState({progress: loaded / this.props.size});\n      },\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    ).then(() => {\n      this.setState({downloader: null, progress: 0});\n    }).catch((err) => {\n      if (err) {\n        this.props.onError(\"Error downloading file: \" + err.message, 'err');\n      }\n      this.setState({downloader: null, progress: 0});\n    });\n  }\n\n  handleCancel() {\n    if (this.props.uploading) {\n      this.props.onCancelUpload();\n    } else if (this.state.downloader) {\n      this.state.downloader.cancel();\n    }\n  }\n\n  render() {\n    let filename = this.props.filename || 'file_attachment';\n    if (filename.length > 36) {\n      filename = filename.substr(0, 16) + '...' + filename.substr(-16);\n    }\n    let size = this.props.size > 0 ?\n      <span className=\"small gray\">({bytesToHumanSize(this.props.size)})</span> :\n      null;\n\n    // Detect if the download URL is relative or absolute.\n    // If the URL is relative use LargeFileHelper to attach authentication\n    // credentials to the request.\n    let url, helperFunc;\n    if (!this.props.uploading && !this.state.downloader && isUrlRelative(this.props.downloadUrl)) {\n      // Relative URL. Use download helper.\n      url = '#';\n      helperFunc = (e) => {\n        e.preventDefault();\n        this.downloadFile(this.props.downloadUrl, this.props.filename, this.props.mimetype);\n      };\n    } else {\n      url = sanitizeUrl(this.props.downloadUrl);\n      helperFunc = null;\n    }\n    const downloadWidget = <><i className=\"material-icons\">file_download</i> <FormattedMessage id=\"save_attachment\"\n      defaultMessage=\"save\" description=\"Call to save an attachment\" /></>;\n    return (\n      <div className=\"attachment\">\n        <div><i className=\"material-icons big gray\">insert_drive_file</i></div>\n        <div className=\"flex-column\">\n          <div>{filename} {size}</div>\n          {this.props.uploading || this.state.downloader ?\n            <FileProgress progress={this.props.uploading ? this.props.progress : this.state.progress}\n              onCancel={this.handleCancel} />\n            :\n            <div>{url ?\n              <a href={url} download={this.props.filename} onClick={helperFunc}>{downloadWidget}</a>\n              :\n              <span className=\"light-gray\">{downloadWidget}</span>\n            }</div>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\n\nimport { AVATAR_SIZE, MAX_EXTERN_ATTACHMENT_SIZE } from '../config.js';\nimport { imageScaled, blobToBase64, makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class AvatarUpload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dataUrl: props.avatar\n    };\n\n    this.handleFileUpload = this.handleFileUpload.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.avatar != prevProps.avatar) {\n      this.setState({dataUrl: this.props.avatar})\n    }\n  }\n\n  handleFileUpload(e) {\n    imageScaled(e.target.files[0], AVATAR_SIZE, AVATAR_SIZE, MAX_EXTERN_ATTACHMENT_SIZE, true,\n      // Image successfully scaled and converted.\n      (mime, blob) => {\n        // Convert blob to base64-encoded bits.\n        blobToBase64(blob, (unused, base64bits) => {\n          const du = makeImageUrl({data: base64bits, type: mime});\n          this.setState({dataUrl: du});\n          this.props.onImageChanged(du);\n        });\n      },\n      // Failure\n      (err) => {\n        this.props.onError(err, 'err');\n      });\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  render() {\n    // Randomize id value in case more than one AvatarUpload is shown\n    // at the same time.\n    const randId = 'file-input-avatar-' + (Math.random() + '').substr(2);\n    const className = 'avatar-upload' + (this.props.readOnly ? ' read-only' : '');\n    return (\n      <div className={className}>\n        {this.props.readOnly || !this.state.dataUrl ?\n          null :\n          <a href=\"#\" className=\"clear-avatar\" onClick={(e) => {e.preventDefault(); this.props.onImageChanged(null);}}>\n            <i className=\"material-icons\">clear</i>\n          </a>}\n        {this.state.dataUrl ?\n          <img src={this.state.dataUrl} className=\"preview\" /> :\n          this.props.readOnly && this.props.uid ?\n            <div className=\"avatar-box\">\n              <LetterTile\n                avatar={true}\n                topic={this.props.uid}\n                title={this.props.title} />\n            </div>\n            :\n            <div className=\"blank\">{AVATAR_SIZE}&times;{AVATAR_SIZE}</div>}\n        {this.props.readOnly ? null :\n          <input type=\"file\" id={randId} className=\"inputfile hidden\"\n            accept=\"image/*\" onChange={this.handleFileUpload} />}\n        {this.props.readOnly ? null :\n        <label htmlFor={randId} className=\"round\">\n          <i className=\"material-icons\">file_upload</i>\n        </label>}\n      </div>\n    );\n  }\n};\n","// The <- button to be displayed in title bars.\nimport React from 'react';\n\nexport default class ButtonBack extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onBack();}}>\n        <i className=\"material-icons\">arrow_back</i>\n      </a>\n    );\n  }\n}\n","// Single message, sent or received.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Drafty } from 'tinode-sdk'\n\nimport Attachment from './attachment.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\nimport UploadingImage from './uploading-image.jsx'\nimport { sanitizeImageUrl, sanitizeUrl } from '../lib/utils.js';\n\nexport default class ChatMessage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      progress: 0\n    };\n\n    if (props.uploader) {\n      props.uploader.onProgress = this.handleProgress.bind(this);\n    }\n\n    this.handleImagePreview = this.handleImagePreview.bind(this);\n    this.handleFormButtonClick = this.handleFormButtonClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n  }\n\n  handleImagePreview(e) {\n    e.preventDefault();\n    this.props.onImagePreview({\n      url: e.target.src,\n      filename: e.target.title,\n      width: e.target.dataset.width,\n      height: e.target.dataset.height,\n      size: e.target.dataset.size,\n      type: e.target.dataset.mime\n    });\n  }\n\n  handleFormButtonClick(e) {\n    e.preventDefault();\n    const data = {\n      seq: this.props.seq\n    };\n    data.resp = {};\n    if (e.target.dataset.name) {\n      data.resp[e.target.dataset.name] = e.target.dataset.val ? e.target.dataset.val :\n        e.target.dataset.val === undefined ? 1 : '' + e.target.dataset.val;\n    }\n    if (e.target.dataset.act == 'url') {\n      data.ref = sanitizeUrl(e.target.dataset.ref) || 'about:blank';\n    }\n    const text = e.target.dataset.title || 'unknown';\n    this.props.onFormResponse(e.target.dataset.act, text, data);\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const menuItems = this.props.received == Tinode.MESSAGE_STATUS_FAILED ? ['menu_item_send_retry'] : [];\n    this.props.showContextMenu({ seq: this.props.seq, content: this.props.content,\n                                 y: e.pageY, x: e.pageX }, menuItems);\n  }\n\n  handleProgress(ratio) {\n    this.setState({progress: ratio});\n  }\n\n  handleCancelUpload() {\n    this.props.onCancelUpload(this.props.seq, this.props.uploader);\n  }\n\n  render() {\n    const sideClass = this.props.deleted ? 'center' :\n      (this.props.sequence + ' ' + (this.props.response ? 'left' : 'right'));\n    const bubbleClass = (this.props.sequence == 'single' || this.props.sequence == 'last') ? 'bubble tip' : 'bubble';\n    const avatar = this.props.deleted ? null : (this.props.userAvatar || true);\n    const fullDisplay = (this.props.userFrom && this.props.response &&\n      (this.props.sequence == 'single' || this.props.sequence == 'last'));\n\n    let content = this.props.content;\n    const attachments = [];\n    if (this.props.mimeType == Drafty.getContentType() && Drafty.isValid(content)) {\n      Drafty.attachments(content, function(att, i) {\n        if (att.mime == 'application/json') {\n          // Don't show json objects as attachments.\n          // They are not meant for users.\n          return;\n        }\n        attachments.push(<Attachment\n          tinode={this.props.tinode}\n          downloadUrl={Drafty.getDownloadUrl(att)}\n          filename={att.name} uploading={Drafty.isProcessing(att)}\n          mimetype={att.mime} size={Drafty.getEntitySize(att)}\n          progress={this.state.progress}\n          onCancelUpload={this.handleCancelUpload}\n          onError={this.props.onError}\n          key={i} />);\n      }, this);\n      content = React.createElement(React.Fragment, null, Drafty.format(content, draftyFormatter, this));\n    } else if (this.props.deleted) {\n      // Message represents a range of deleted messages.\n      content = <><i className=\"material-icons gray\">block</i> <i className=\"gray\">\n        <FormattedMessage id=\"deleted_content\"\n          defaultMessage=\"content deleted\" description=\"Shown when messages are deleted\" />\n      </i></>\n    } else if (typeof content != 'string') {\n      content = <>\n          <i className=\"material-icons gray\">error_outline</i> <i className=\"gray\">\n            <FormattedMessage id=\"invalid_content\"\n              defaultMessage=\"invalid content\" description=\"Shown when message is unreadable\" /></i>\n        </>\n    }\n\n    return (\n      <li className={sideClass}>\n        {this.props.userFrom && this.props.response ?\n          <div className=\"avatar-box\">\n            {fullDisplay ?\n              <LetterTile\n                topic={this.props.userFrom}\n                title={this.props.userName}\n                avatar={avatar} /> :\n              null}\n          </div> :\n          null}\n        <div>\n          <div className={bubbleClass}>\n            <div className=\"message-content\">\n              {content}\n              {attachments}\n              {this.props.timestamp ?\n                <ReceivedMarker\n                  timestamp={this.props.timestamp}\n                  received={this.props.received} />\n                : null}\n            </div>\n            {this.props.deleted || !this.props.showContextMenu ?\n              null :\n              <span className=\"menuTrigger\">\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">expand_more</i>\n                </a>\n              </span>\n            }\n          </div>\n          {fullDisplay ?\n            <div className=\"author\">\n              <FormattedMessage id=\"user_not_found\" defaultMessage=\"Not found\"\n                description=\"In place of a user's full name when the user is not found.\">{\n                    (notFound) => {return this.props.userName || <i>{notFound}</i>}\n              }</FormattedMessage>\n            </div>\n            : null\n          }\n        </div>\n      </li>\n    );\n  }\n};\n\n// Convert Drafty object to a tree of React elements.\nimport { BROKEN_IMAGE_SIZE, REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\n\nfunction draftyFormatter(style, data, values, key) {\n  let el = Drafty.tagName(style);\n  if (el) {\n    const attr = Drafty.attrValue(style, data) || {};\n    attr.key = key;\n    switch (style) {\n      case 'IM':\n        // Additional processing for images\n        if (data) {\n          attr.className = 'inline-image';\n          const dim = fitImageSize(data.width, data.height,\n            Math.min(this.props.viewportWidth - REM_SIZE * 4, REM_SIZE * 36), REM_SIZE * 24, false) ||\n            {dstWidth: BROKEN_IMAGE_SIZE, dstHeight: BROKEN_IMAGE_SIZE};\n          attr.style = { width: dim.dstWidth + 'px', height: dim.dstHeight + 'px' };\n          if (!Drafty.isProcessing(data)) {\n            attr.src = this.props.tinode.authorizeURL(sanitizeImageUrl(attr.src));\n            attr.alt = data.name;\n            if (attr.src) {\n              attr.onClick = this.handleImagePreview;\n              attr.className += ' image-clickable';\n            } else {\n              attr.src = 'img/broken_image.png';\n            }\n          } else {\n            // Use custom element instead of <img>.\n            el = UploadingImage;\n          }\n        }\n        break;\n      case 'BN':\n        // Button\n        attr.onClick = this.handleFormButtonClick;\n        let inner = React.Children.map(values, (child) => {\n          return typeof child == 'string' ? child : undefined;\n        });\n        if (!inner || inner.length == 0) {\n          inner = [attr.name]\n        }\n        // Get text which will be sent back when the button is clicked.\n        attr['data-title'] = inner.join('');\n        break;\n      case 'FM':\n        // Form\n        attr.className = 'bot-form';\n        break;\n      case 'FE':\n        // Form element formatting is dependent on element content.\n        break;\n    }\n    return React.createElement(el, attr, values);\n  } else {\n    return values;\n  }\n};\n","import React from 'react';\n\n/* BEGIN CheckBox: styled checkbox */\nexport default class CheckBox extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange() {\n    this.props.onChange(this.props.name, !this.props.checked);\n  }\n\n  render() {\n    return (\n      this.props.onChange ? (\n        this.props.checked ?\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box</i> :\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box_outline_blank</i>\n        ) : (\n          this.props.checked ?\n            <i className=\"material-icons\">check_box</i> :\n            <i className=\"material-icons\">check_box_outline_blank</i>\n        )\n    );\n  }\n}\n/* END CheckBox */\n","import React from 'react';\n\nimport Chip from './chip.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n/* BEGIN ChipInput: group membership widget */\nexport default class ChipInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = ChipInput.deriveStateFromProps(props);\n    this.state.input = '';\n    this.state.focused = false;\n\n    this.handleTextInput = this.handleTextInput.bind(this);\n    this.removeChipAt = this.removeChipAt.bind(this);\n    this.handleChipCancel = this.handleChipCancel.bind(this);\n    this.handleFocusGained = this.handleFocusGained.bind(this);\n    this.handleFocusLost = this.handleFocusLost.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  static deriveStateFromProps(props) {\n    return {\n      placeholder: props.chips ? '' : props.prompt,\n      sortedChips: ChipInput.sortChips(props.chips, props.staticMembers),\n      chipIndex: ChipInput.indexChips(props.chips)\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chips != this.props.chips ||\n      prevProps.staticMembers != this.props.staticMembers ||\n      prevProps.prompt != this.props.prompt) {\n      this.setState(ChipInput.deriveStateFromProps(this.props));\n    }\n    if (!prevState || this.props.chips.length > prevState.sortedChips.length) {\n      this.setState({input: ''});\n    }\n  }\n\n  // Map chip index to user name\n  static indexChips(chips) {\n    const index = {};\n    let count = 0;\n    chips.map((item) => {\n      index[item.user] = count;\n      count ++;\n    });\n    return index;\n  }\n\n  // Have non-removable chips appear before all other chips.\n  static sortChips(chips, keep) {\n    const required = [];\n    const normal = [];\n    chips.map((item) => {\n      if (keep && keep.includes(item.user)) {\n        required.push(item);\n      } else {\n        normal.push(item);\n      }\n    });\n    return required.concat(normal);\n  }\n\n  handleTextInput(e) {\n    this.setState({input: e.target.value});\n    if (this.props.filterFunc) {\n      this.props.filterFunc(e.target.value);\n    }\n  }\n\n  removeChipAt(idx) {\n    const removed = this.state.sortedChips[idx];\n    this.props.onChipRemoved(removed.user, this.state.chipIndex[removed.user]);\n  }\n\n  handleChipCancel(item, idx) {\n    this.removeChipAt(idx);\n  }\n\n  handleFocusGained() {\n    this.setState({focused: true});\n  }\n\n  handleFocusLost() {\n    this.setState({focused: false});\n    if (this.props.onFocusLost) {\n      this.props.onFocusLost(this.state.input);\n    }\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Backspace') {\n      if (this.state.input.length == 0 && this.state.sortedChips.length > 0) {\n        const at = this.state.sortedChips.length - 1;\n        if (this.state.sortedChips[at].user !== this.props.staticMembers) {\n          this.removeChipAt(at);\n        }\n      }\n    } else if (e.key === 'Enter') {\n      if (this.props.onEnter) {\n        this.props.onEnter(this.state.input);\n      }\n    } else if (e.key === 'Escape') {\n      if (this.props.onCancel) {\n        this.props.onCancel();\n      }\n    }\n  }\n\n  render() {\n    const chips = [];\n    let count = 0;\n    const staticMembers = this.props.staticMembers || [];\n    this.state.sortedChips.map((item) => {\n      chips.push(\n        <Chip\n          onCancel={this.handleChipCancel}\n          avatar={makeImageUrl(item.public ? item.public.photo : null)}\n          title={item.public ? item.public.fn : undefined}\n          noAvatar={this.props.avatarDisabled}\n          topic={item.user}\n          required={staticMembers.includes(item.user)}\n          invalid={item.invalid}\n          index={count}\n          key={item.user} />\n      );\n      count++;\n    });\n    const className = \"chip-input\" + (this.state.focused ? ' focused' : '');\n    return (\n      <div className={className}>\n        {chips}\n        <input type=\"text\"\n          placeholder={this.state.placeholder}\n          onChange={this.handleTextInput}\n          onFocus={this.handleFocusGained}\n          onBlur={this.handleFocusLost}\n          onKeyDown={this.handleKeyDown}\n          value={this.state.input}\n          autoFocus />\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\n\nexport default class Chip extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel(this.props.topic, this.props.index);\n  }\n\n  render() {\n    const title = this.props.title || this.props.topic;\n    const className = this.props.invalid ? 'chip invalid' : 'chip';\n    return (\n      <div className={className}>\n        {this.props.noAvatar ?\n          <span className=\"spacer\" /> :\n          <div className=\"avatar-box\">\n            <LetterTile\n              avatar={this.props.avatar || true}\n              topic={this.props.topic}\n              title={this.props.title} />\n          </div>\n        }\n        <span>{title}</span>\n        {this.props.onCancel && !this.props.required ?\n          <a href=\"#\" onClick={this.handleCancel} >&times;</a>\n          : <span className=\"spacer\" />}\n      </div>\n    );\n  }\n};\n","// A panel included into a list of contacts with an action text.\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\n\nclass ContactAction extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.onAction(this.props.action);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <li onClick={this.handleClick} className=\"action\">\n        <div className=\"action-text\">{formatMessage(this.props.title, this.props.values)}</div>\n      </li>\n    );\n  }\n};\n\nexport default injectIntl(ContactAction);\n","import React from 'react';\n\nconst icon_mapping = {'muted': 'notifications_off', 'banned': 'block'};\n\n/* Contact's labels: [you], or icons [muted], [blocked] */\nexport default class ContactBadges extends React.PureComponent {\n    render() {\n      let badges = null;\n      if (this.props.badges && this.props.badges.length > 0) {\n        badges = [];\n        this.props.badges.map(function(b) {\n          if (b.icon) {\n            badges.push(<i className=\"material-icons as-badge\" key={b.key || b.icon}>{icon_mapping[b.icon]}</i>);\n          } else {\n            const style = 'badge' + (b.color ? ' ' + b.color : '');\n            badges.push(<span className={style} key={b.key || b.name}>{b.name}</span>);\n          }\n        });\n        return <>{badges}</>;\n      }\n      return null;\n    }\n};\n","// ContactList: component for showing a list of contacts,\n// such as a list of group members in a group chat.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport Contact from './contact.jsx';\nimport ContactAction from './contact-action.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nconst messages = defineMessages({\n  badge_you: {\n    id: 'badge_you',\n    defaultMessage: 'you',\n    description: 'Badge for indicating the current user'\n  },\n  badge_owner: {\n    id: 'badge_owner',\n    defaultMessage: 'owner',\n    description: 'Badge for indicating the owner'\n  }\n});\n\nclass ContactList extends React.Component {\n  render() {\n    const {formatMessage} = this.props.intl;\n    const showCheckmark = Array.isArray(this.props.topicSelected);\n    const contactNodes = [];\n    let contactsCount = 0;\n    if (this.props.contacts && this.props.contacts.length > 0) {\n      this.props.contacts.map((c) => {\n        if (c.action) {\n          // Action item\n          contactNodes.push(\n            <ContactAction\n              title={c.title} action={c.action} values={c.values}\n              key={c.action}\n              onAction={this.props.onAction}\n              />);\n        } else {\n          // Normal contact\n          const key = this.props.showMode ? c.user : (c.topic || c.user);\n          // If filter function is provided, filter out the items\n          // which don't satisfy the condition.\n          if (this.props.filterFunc && this.props.filter) {\n            let content = [key];\n            if (c.private && c.private.comment) {\n              content.push(('' + c.private.comment).toLowerCase());\n            }\n            if (c.public && c.public.fn) {\n              content.push(('' + c.public.fn).toLowerCase());\n            }\n            if (!this.props.filterFunc(this.props.filter, content)) {\n              return;\n            }\n          }\n\n          const isChannel = Tinode.isChannelTopicName(key);\n          const selected = showCheckmark ?\n            (this.props.topicSelected.indexOf(key) > -1) :\n            (this.props.topicSelected === key);\n          const badges = [];\n          if (this.props.showMode) {\n            if (key == this.props.myUserId) {\n              badges.push({name: formatMessage(messages.badge_you), color: 'green'});\n            }\n            if (c.acs && c.acs.isOwner()) {\n              badges.push({name: formatMessage(messages.badge_owner), color: 'blue'});\n            }\n          }\n          const comment = Array.isArray(c.private) ?\n            c.private.join(',') : (c.private ? c.private.comment : null);\n\n          contactNodes.push(\n            <Contact\n              title={c.public ? c.public.fn : null}\n              avatar={makeImageUrl(c.public ? c.public.photo : null)}\n              comment={comment}\n              unread={this.props.showUnread ? c.unread : 0}\n              now={c.online && this.props.connected}\n              acs={c.acs}\n              showMode={this.props.showMode}\n              badges={badges}\n              showCheckmark={showCheckmark}\n              selected={selected}\n              showOnline={this.props.showOnline && !isChannel}\n              isChannel={isChannel}\n              onSelected={this.props.onTopicSelected}\n              showContextMenu={this.props.showContextMenu}\n              item={key}\n              index={contactNodes.length}\n              key={key} />\n          );\n          contactsCount ++;\n        }\n      }, this);\n    }\n\n    return (\n      <div className={this.props.noScroll ? null : \"scrollable-panel\"}>\n        {contactsCount == 0 ?\n          <div className=\"center-medium-text\"\n            dangerouslySetInnerHTML={{__html: this.props.emptyListMessage}} />\n          :\n          null\n        }\n        {contactNodes.length > 0 ?\n          <ul className=\"contact-box\">\n            {contactNodes}\n          </ul>\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ContactList);\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport LetterTile from './letter-tile.jsx';\nimport ContactBadges from './contact-badges.jsx';\nimport UnreadBadge from './unread-badge.jsx';\n\nexport default class Contact extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.props.onSelected) {\n      // Index this.props.index is used by GroupManager.\n      this.props.onSelected(this.props.item, this.props.index);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.props.item, y: e.pageY, x: e.pageX });\n  }\n\n  render() {\n    let title = this.props.title;\n    if (!title) {\n      title = <i><FormattedMessage id=\"unnamed_topic\" /></i>;\n    } else if (title.length > 30) {\n      // FIXME: this is probably wrong for RTL languages.\n      title = title.substring(0, 28) + '...';\n    }\n    const online = this.props.now ? 'online' : 'offline';\n    const avatar = this.props.avatar ? this.props.avatar : true;\n    const badges = this.props.badges ? this.props.badges.slice() : [];\n    const icon_badges = [];\n    if (this.props.acs) {\n      if (this.props.showMode) {\n        badges.push({name: this.props.acs.getMode(), key: 'mode'});\n      }\n      if (this.props.acs.isMuted()) {\n        icon_badges.push({icon: 'muted'});\n      }\n      if (!this.props.acs.isJoiner()) {\n        icon_badges.push({icon: 'banned'});\n      }\n    }\n\n    return (\n      <li className={!this.props.showCheckmark && this.props.selected ? \"selected\" : null}\n        onClick={this.handleClick}>\n        <div className=\"avatar-box\">\n          <LetterTile\n            avatar={avatar}\n            title={this.props.title}\n            topic={this.props.item} />\n          {this.props.showOnline ? <span className={online} /> :\n            (this.props.showCheckmark && this.props.selected ?\n            <i className=\"checkmark material-icons\">check_circle</i>\n            : null)}\n        </div>\n        <div className=\"text-box\">\n          <div><span className=\"contact-title\">{title}</span>\n            {this.props.isChannel ? <img src=\"/img/channel.png\" className=\"channel\" alt=\"channel\" /> : null}\n            <UnreadBadge count={this.props.unread} /><ContactBadges badges={icon_badges} />\n          </div>\n          {this.props.comment ? <div className=\"contact-comment\">{this.props.comment}</div> : null}\n          <span><ContactBadges badges={badges} /></span>\n        </div>\n        {this.props.showContextMenu ?\n          <span className=\"menuTrigger\">\n            <a href=\"#\" onClick={this.handleContextClick}>\n              <i className=\"material-icons\">expand_more</i>\n            </a>\n          </span> : null}\n      </li>\n    );\n  }\n};\n","// Context Menu: popup/dropdown menu.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { injectIntl, defineMessages } from 'react-intl';\n\nimport { REM_SIZE } from '../config.js';\nimport HashNavigation from '../lib/navigation.js';\n\nconst messages = defineMessages({\n  info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  },\n  clear_messages: {\n    id: 'menu_item_clear_messages',\n    defaultMessage: 'Clear messages',\n    description: 'Delete all messages'\n  },\n  clear_for_all: {\n    id: 'menu_item_clear_messages_for_all',\n    defaultMessage: 'Clear for All',\n    description: 'Delete all message(s) for all members'\n  },\n  'delete': {\n    id: 'menu_item_delete',\n    defaultMessage: 'Delete',\n    description: 'Delete selected messages'\n  },\n  delete_for_all: {\n    id: 'menu_item_delete_for_all',\n    defaultMessage: 'Delete for All',\n    description: 'Delete selected message(s) for all members'\n  },\n  send_retry: {\n    id: 'menu_item_send_retry',\n    defaultMessage: 'Retry',\n    description: 'Retry sending message'\n  },\n  mute: {\n    id: 'menu_item_mute',\n    defaultMessage: 'Mute',\n    description: 'Turn off notifications'\n  },\n  unmute: {\n    id: 'menu_item_unmute',\n    defaultMessage: 'Unmute',\n    description: 'Turn notifications on'\n  },\n  topic_delete: {\n    id: 'menu_item_delete_topic',\n    defaultMessage: 'Delete',\n    description: 'Delete entire topic'\n  },\n  topic_delete_warning: {\n    id: 'topic_delete_warning',\n    defaultMessage: 'Are you sure you want to delete this conversation?',\n    description: 'Alert warning when deleting entire topic'\n  },\n  unblock: {\n    id: 'menu_item_unblock',\n    defaultMessage: 'Unblock',\n    description: 'Unblock topic or user'\n  },\n  // Generic string suitable for either topic or user.\n  block: {\n    id: 'menu_item_block',\n    defaultMessage: 'Block',\n    description: 'Block topic or user'\n  },\n  topic_block_warning: {\n    id: 'topic_block_warning',\n    defaultMessage: 'Are you sure you want to block this conversation?',\n    description: 'Alert warning when blocking a topic.'\n  },\n  member_delete: {\n    id: 'menu_item_member_delete',\n    defaultMessage: 'Remove',\n    description: 'Remove user from topic'\n  },\n  archive: {\n    id: 'menu_item_archive_topic',\n    defaultMessage: 'Archive',\n    description: 'Move topic from the list of active chats to archive'\n  }\n});\n\nclass ContextMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const {formatMessage} = props.intl;\n\n    this.handlePageClick = this.handlePageClick.bind(this);\n    this.handleEscapeKey = this.handleEscapeKey.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n\n    // Preconfigured menu items.\n    this.MenuItems = {\n      'topic_info': {\n        id: 'topic_info',\n        title: formatMessage(messages.info),\n        handler: null\n      },\n      'messages_clear': {\n        id: 'messages_clear',\n        title: formatMessage(messages.clear_messages),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage({id: 'menu_item_clear_messages'}), // title\n            formatMessage({id: 'clear_messages_warning'}), // content\n            (() => { this.deleteMessages(true, false, params, errorHandler); }), // onConfirm\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'messages_clear_hard': {\n        id: 'messages_clear_hard',\n        title: formatMessage(messages.clear_for_all),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage({id: 'menu_item_clear_messages_for_all'}), // title\n            formatMessage({id: 'delete_messages_warning'}), // content\n            (() => { return this.deleteMessages(true, true, params, errorHandler); }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'message_delete': {\n        id: 'message_delete',\n        title: formatMessage(messages.delete),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, false, params, errorHandler);\n        }\n      },\n      'message_delete_hard': {\n        id: 'message_delete_hard',\n        title: formatMessage(messages.delete_for_all),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, true, params, errorHandler);\n        }\n      },\n      'menu_item_send_retry': {\n        id: 'menu_item_send_retry',\n        title: formatMessage(messages.send_retry),\n        handler: (params, errorHandler) => {\n          return this.retryMessage(params, errorHandler);\n        }\n      },\n      'topic_unmute': {\n        id: 'topic_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'topic_mute': {\n        id: 'topic_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'topic_unblock': {\n        id: 'topic_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n      'topic_block': {\n        id: 'topic_block',\n        title: formatMessage(messages.block),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage({id: 'menu_item_block'}), // title\n            formatMessage(messages.topic_block_warning), // content\n            (() => {\n              return this.topicPermissionSetter('-JP', params, errorHandler).then((ctrl) => {\n                this.props.onTopicRemoved(params.topicName);\n                return ctrl;\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_delete': {\n        id: 'topic_delete',\n        title: formatMessage(messages.topic_delete),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage({id: 'menu_item_delete_topic'}), // title\n            formatMessage(messages.topic_delete_warning), // content\n            (() => {\n              const topic = this.props.tinode.getTopic(params.topicName);\n              if (!topic) {\n                console.log(\"Topic not found: \", params.topicName);\n                return;\n              }\n              return topic.delTopic(true).catch((err) => {\n                if (errorHandler) {\n                  errorHandler(err.message, 'err');\n                }\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_archive': {\n        id: 'topic_archive',\n        title: formatMessage(messages.archive),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic) {\n            console.log(\"Topic not found: \", params.topicName);\n            return;\n          }\n          return topic.archive(true).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      // menu_item_edit_permissions is defined elsewhere.\n      'permissions': {\n        id: 'permissions',\n        title: formatMessage({id: 'menu_item_edit_permissions'}),\n        handler: null\n      },\n      'member_delete': {\n        id: 'member_delete',\n        title: formatMessage(messages.member_delete),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic || !params.user) {\n            console.log(\"Topic or user not found: '\" + params.topicName + \"', '\" + params.user + \"'\");\n            return;\n          }\n          return topic.delSubscription(params.user).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      'member_mute': {\n        id: 'member_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'member_unmute': {\n        id: 'member_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'member_block': {\n        id: 'member_block',\n        title: formatMessage(messages.block),\n        handler: this.topicPermissionSetter.bind(this, '-JP')\n      },\n      'member_unblock': {\n        id: 'member_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handlePageClick, false);\n    document.addEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handlePageClick, false);\n    document.removeEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  handlePageClick(e) {\n    if (ReactDOM.findDOMNode(this).contains(e.target)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n  }\n\n  handleEscapeKey(e) {\n    if (e.keyCode === 27) {\n      this.props.hide();\n    }\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n    let item = this.props.items[e.currentTarget.dataset.id];\n    if (typeof item == 'string') {\n      item = this.MenuItems[item];\n    }\n\n    if (!item) {\n      console.log(\"Invalid menu item ID\", e.currentTarget.dataset.id);\n    } else {\n      this.props.onAction(\n        item.id,\n        item.handler(this.props.params, this.props.onError),\n        this.props.params);\n    }\n  }\n\n  // Menu Actions\n\n  deleteMessages(all, hard, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found: \", params.topicName);\n      return;\n    }\n\n    // We don't know if the message is still pending (e.g. attachment is being uploaded),\n    // so try cancelling first. No harm if we can't cancel.\n    // The message can be cancelled if transmission to the server has not\n    // started yet or if the message send has failed.\n    if (!all && topic.cancelSend(params.seq)) {\n      return;\n    }\n    // Can't cancel. Delete instead.\n    const promise = all ?\n      topic.delMessagesAll(hard) :\n      topic.delMessagesList([params.seq], hard);\n\n    return promise.catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Retries sending failed message.\n  retryMessage(params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    // Remove the existing message entry.\n    if (!topic || !topic.flushMessage(params.seq)) {\n      return;\n    }\n    const msg = topic.createMessage(params.content, false);\n    return topic.publishDraft(msg).catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Function is used by context menu to set permissions.\n  topicPermissionSetter(mode, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found\", params.topicName);\n      return;\n    }\n\n    let result = topic.updateMode(params.user, mode);\n    if (errorHandler) {\n      result = result.catch((err) => {\n        errorHandler(err.message, 'err');\n      });\n    }\n    return result;\n  }\n\n  render() {\n    let count = 0;\n    let menu = [];\n    this.props.items.map((item) => {\n      if (typeof item == 'string') {\n        item = this.MenuItems[item];\n      }\n      if (item && item.title) {\n        menu.push(\n          item.title == '-' ?\n            <li className=\"separator\" key={count} />\n            :\n            <li onClick={this.handleClick} data-id={count} key={count}>{item.title}</li>\n        );\n      }\n      count++;\n    });\n\n    // Ensure that menu is inside the app-container.\n    const hSize = 12 * REM_SIZE;\n    const vSize = REM_SIZE * (0.7 + menu.length * 2.5);\n    const left = (this.props.bounds.right - this.props.clickAt.x < hSize) ?\n        (this.props.clickAt.x - this.props.bounds.left - hSize) :\n        (this.props.clickAt.x - this.props.bounds.left);\n    const top = (this.props.bounds.bottom - this.props.clickAt.y < vSize) ?\n        (this.props.clickAt.y - this.props.bounds.top - vSize) :\n        (this.props.clickAt.y - this.props.bounds.top);\n\n    const position = {\n      left: left + 'px',\n      top: top + 'px'\n    };\n\n    return (\n      <ul className=\"menu\" style={position}>\n        {menu}\n      </ul>\n    );\n  }\n}\n\nexport default injectIntl(ContextMenu);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { bytesToHumanSize } from '../lib/strformat.js';\n\n// Get material icon name from mime type.\nfunction iconFromMime(mime) {\n  // If more icons become available in material icons, add them to this mime-to-icon mapping.\n  const mimeToIcon = {default: 'insert_drive_file', image: 'image', text: 'description', video: 'theaters'};\n\n  return mimeToIcon[mime] || mimeToIcon[(mime || '').split('/')[0]] || mimeToIcon['default'];\n}\n\nexport default class DocPreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleSendDoc = this.handleSendDoc.bind(this);\n  }\n\n  handleSendDoc(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(this.props.content.file);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          <span>{this.props.content.filename}</span>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\">\n          <div className=\"flex-column narrow\">\n            <i className=\"material-icons gray\">{iconFromMime(this.props.content.type)}</i>\n            <div><b><FormattedMessage id=\"label_content_type\" /></b> {this.props.content.type || 'application/octet-stream'}</div>\n            <div><b><FormattedMessage id=\"label_size\" /></b> {bytesToHumanSize(this.props.content.size)}</div>\n          </div>\n        </div>\n        <SendMessage\n          noInput={true}\n          onSendMessage={this.handleSendDoc}\n          onError={this.props.onError} />\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport MenuCancel from './menu-cancel.jsx';\n\nexport default class ErrorPanel extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      show: false,\n    };\n\n    this.hide = this.hide.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.level !== this.props.level) {\n      this.setState({\n        show: !(!this.props.level)\n      });\n    }\n  }\n\n  hide() {\n    this.setState({show: false});\n    if (this.props.onClearError) {\n      this.props.onClearError();\n    }\n  }\n\n  render() {\n    const icons = {err: 'error', warn: 'warning', info: 'info'}\n    const level = icons[this.props.level] || '';\n    const className = 'info-box ' + level;\n    return (\n      <div className={className}>\n        <div className=\"icon\"><i className=\"material-icons\">{level}</i></div>\n        <span>\n          {this.props.text}\n          {this.props.action ?\n            <>\n              &#32;<a href=\"#\"\n                style={{ whiteSpace: 'nowrap' }}\n                onClick={(e) => {e.preventDefault(); this.props.action();}}>\n                {this.props.actionText}\n              </a>\n            </>\n          : null}\n        </span>\n        <div className=\"cancel\"><MenuCancel onCancel={this.hide} /></div>\n      </div>\n    );\n  }\n};\n","// File uload/download progress indicator with a cancel inside.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class FileProgress extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"uploader\">\n        <div><span style={{width: (this.props.progress * 100) + \"%\"}}></span></div>\n        {this.props.progress < 0.999 ?\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n            <i className=\"material-icons\">close</i> <FormattedMessage id=\"action_cancel\"\n              defaultMessage=\"cancel\" description=\"Call to action [cancel]\" />\n          </a>\n          :\n          <FormattedMessage id=\"upload_finishing\" defaultMessage=\"finishing...\"\n            description=\"Notification that upload is finishing\" />\n        }\n      </div>\n    );\n  }\n}\n","// GroupMembers: control for managing a list of group members.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\nimport ContactList from './contact-list.jsx';\n\nconst messages = defineMessages({\n  no_contacts: {\n    id: 'no_contacts',\n    defaultMessage: 'You have no contacts :-(',\n    description: 'Shown in ContactsView when the user has no contacts'\n  },\n  contacts_not_found_short: {\n    id: 'contacts_not_found_short',\n    defaultMessage: \"No contacts match ''{query}''\",\n    description: 'Shown in ContactsView when search returned no results'\n  }\n});\n\nclass GroupManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Array of topic members\n      members: props.members,\n      index: GroupManager.indexMembers(props.members),\n      staticMembers: GroupManager.staticMembers(props.members, props.keepInitialMembers, props.requiredMember),\n      contactFilter: '',\n      noContactsMessage: props.intl.formatMessage(messages.no_contacts),\n      selectedContacts: GroupManager.selectedContacts(props.members)\n    };\n\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleMemberRemoved = this.handleMemberRemoved.bind(this);\n    this.handleContactFilter = this.handleContactFilter.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static indexMembers(members) {\n    let index = {};\n    members.map((m) => {\n      index[m.user] = {delta: 0, present: true}; // Delta: 0 unchanged, +1 added, -1 removed\n    });\n    return index;\n  }\n\n  static staticMembers(members, keepInitial, requiredMember) {\n    let stat = [];\n    members.map((m) => {\n      if (keepInitial || m.user == requiredMember) {\n        stat.push(m.user);\n      }\n    });\n    return stat;\n  }\n\n  static selectedContacts(members) {\n    let sel = [];\n    members.map((m) => {\n      sel.push(m.user);\n    });\n    return sel;\n  }\n\n  handleContactSelected(userId, index) {\n    let status = this.state.index[userId];\n    if (status) {\n      if (status.present) {\n        // Prevent duplicate members\n        return;\n      }\n      status.delta += 1;\n      status.present = true;\n    } else {\n      status = {delta: 1, present: true};\n    }\n\n    let m = this.state.members.slice();\n    m.push(this.props.contacts[index]);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleMemberRemoved(userId, index) {\n    const status = this.state.index[userId];\n    if (!status || !status.present) {\n      return;\n    }\n    status.present = false;\n    status.delta -= 1;\n\n    let m = this.state.members.slice();\n    m.splice(index, 1);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleContactFilter(val) {\n    const {formatMessage} = this.props.intl;\n    const msg = !val ?\n      formatMessage(messages.no_contacts) :\n      formatMessage(messages.contacts_not_found_short, {query: val});\n\n    this.setState({contactFilter: val, noContactsMessage: msg});\n  }\n\n  static doContactFiltering(filter, values) {\n    if (filter) {\n      for (let i=0; i<values.length; i++) {\n        if (values[i].indexOf(filter) >= 0) {\n          return true;\n        }\n      }\n      return false;\n    }\n    return true;\n  }\n\n  handleSubmit() {\n    var instance = this;\n    var members = [];\n    var added = [];\n    var removed = [];\n\n    var keys = Object.keys(this.state.index);\n    keys.map(function(k) {\n      if (instance.state.index[k].present) {\n        members.push(k);\n      }\n\n      if (instance.state.index[k].delta > 0) {\n        added.push(k);\n      } else if (instance.state.index[k].delta < 0) {\n        removed.push(k);\n      }\n    });\n    this.props.onSubmit(members, added, removed);\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <div id=\"group-manager\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_group_members\" defaultMessage=\"Group Members\" description=\"Section title\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ChipInput\n            chips={this.state.members}\n            staticMembers={this.state.staticMembers}\n            prompt=\"add members\"\n            filterFunc={this.handleContactFilter}\n            onChipRemoved={this.handleMemberRemoved} />\n        </div>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_all_contacts\" defaultMessage=\"All Contacts\"\n              description=\"Section title [All Contacts]\" />\n          </label>\n        </div>\n        <ContactList\n          contacts={this.props.contacts}\n          myUserId={this.props.myUserId}\n          topicSelected={this.state.selectedContacts}\n          filter={this.state.contactFilter}\n          filterFunc={GroupManager.doContactFiltering}\n          emptyListMessage={this.state.noContactsMessage}\n          showOnline={false}\n          showUnread={false}\n          onTopicSelected={this.handleContactSelected} />\n        <div id=\"group-manager-buttons\" className=\"panel-form-row\">\n          <button className=\"blue\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n          <button className=\"white\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(GroupManager);\n","// GroupSubs: a list of group subscribers currently online.\n// Show in the topic title bar\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { MAX_ONLINE_IN_TOPIC } from '../config.js'\n\nimport LetterTile from './letter-tile.jsx';\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class GroupSubs extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const usersOnline = [];\n    const totalCount = (this.props.subscribers || []).length;\n    const countToShow = Math.min(MAX_ONLINE_IN_TOPIC, totalCount);\n\n    (this.props.subscribers || []).some((sub) => {\n      usersOnline.push(\n        <div className=\"avatar-box\" key={sub.user}>\n          <LetterTile\n            topic={sub.user}\n            avatar={makeImageUrl(sub.public ? sub.public.photo : null) || true}\n            title={sub.public ? sub.public.fn : null} />\n        </div>\n      );\n      return usersOnline.length == countToShow;\n    });\n\n    return (\n      <div id=\"topic-users\">{usersOnline} {totalCount > countToShow ?\n        <span>\n          <FormattedMessage id=\"more_online_members\" defaultMessage=\"+{overflow} more\"\n              description=\"Shown in MessagesView title bar when the number of online subscribers exceeds MAX_ONLINE_IN_TOPIC\"\n              values={{ overflow: (totalCount - countToShow) }} />\n        </span> : null}\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport { KNOWN_HOSTS } from '../config.js';\n\n/* Combobox for selecting host name */\n\nexport default class HostSelector extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hostName: props.serverAddress,\n      changed: false\n    };\n\n    this.handleHostNameChange = this.handleHostNameChange.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handleHostNameChange(e) {\n    this.setState({hostName: e.target.value, changed: true});\n  }\n\n  handleEditingFinished() {\n    if (this.state.changed) {\n      this.setState({changed: false});\n      this.props.onServerAddressChange(this.state.hostName.trim());\n    }\n  }\n\n  render() {\n    var hostOptions = [];\n    for (let key in KNOWN_HOSTS) {\n      let item = KNOWN_HOSTS[key];\n      hostOptions.push(\n        <option key={item} value={item} />\n      );\n    }\n    return (\n      <div className=\"panel-form-row\">\n        <input type=\"search\" id=\"host-name\" placeholder={this.props.hostName} list=\"known-hosts\"\n          className=\"quoted\" value={this.state.hostName} onChange={this.handleHostNameChange}\n          onBlur={this.handleEditingFinished} required />\n        <datalist id=\"known-hosts\">\n          {hostOptions}\n        </datalist>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\nimport { bytesToHumanSize } from '../lib/strformat.js';\n\nexport default class ImagePreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      width: 0,\n      height: 0\n    };\n\n    this.handleSendImage = this.handleSendImage.bind(this);\n  }\n\n  assignWidth(node) {\n    if (node && !this.state.width) {\n      const bounds = node.getBoundingClientRect();\n      this.setState({\n        width: bounds.width | 0,\n        height: bounds.height | 0\n      });\n    }\n  }\n\n  handleSendImage(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(caption, this.props.content.blob);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n\n    const dim = fitImageSize(this.props.content.width, this.props.content.height,\n      this.state.width, this.state.height, false);\n    const size = dim ? { width: dim.dstWidth + 'px', height: dim.dstHeight + 'px' } :\n      ((this.props.content.width > this.props.content.height) ? {width: '100%'} : {height: '100%'});\n    size.maxWidth = '100%';\n    size.maxHeight = '100%';\n\n    let filename = this.props.content.filename;\n    // Average font aspect ratio is ~0.5; File name takes 1/3 of the viewport width.\n    const maxlength = Math.max(((this.state.width / REM_SIZE / 1.5) | 0) - 2, 12);\n    if (filename.length > maxlength) {\n      filename = filename.slice(0, maxlength/2 - 1) + '…' + filename.slice(1 - maxlength/2);\n    }\n    const width = this.props.content.width || '-';\n    const height = this.props.content.height || '-';\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          {!this.props.onSendMessage ?\n            <a href={this.props.content.url} download={this.props.content.filename}>\n              <i className=\"material-icons\">file_download</i> <FormattedMessage\n                id=\"download_action\" defaultMessage=\"download\" description=\"Call to action [download]\" />\n            </a>\n            :\n            <span>{this.props.content.filename}</span>\n          }\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\" ref={(node) => this.assignWidth(node)}>\n          <img src={this.props.content.url} style={size} className=\"image-preview\" alt={this.props.content.filename} />\n        </div>\n        {this.props.onSendMessage ?\n          <SendMessage\n            messagePrompt=\"add_image_caption\"\n            acceptBlank={true}\n            onSendMessage={this.handleSendImage}\n            onError={this.props.onError} />\n          :\n          <div id=\"image-preview-footer\">\n            <div>\n              <div><b><FormattedMessage id=\"label_file_name\" defaultMessage=\"File name:\"\n                description=\"Label for a file name\" /></b></div>\n              <div><span title={this.props.content.filename}>{filename ? filename : '-'}</span></div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n                description=\"Label for file content type (mime)\" /></b></div>\n              <div>{this.props.content.type}</div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n                description=\"Label for file size\" /></b></div>\n              <div>{width} &times; {height} px; {bytesToHumanSize(this.props.content.size)}</div>\n            </div>\n          </div>}\n      </div>\n    );\n  }\n};\n","// In-place text editor. Shows text with an icon which toggles it into an input field.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport VisiblePassword from './visible-password.jsx';\n\nexport default class InPlaceEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      active: props.active,\n      initialValue: props.value || '',\n      value: props.value || ''\n    };\n\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleStartEditing = this.handleStartEditing.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n    this.handlePasswordFinished = this.handlePasswordFinished.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // If text has changed while in read mode, update text and discard changes.\n    // Ignore update if in edit mode.\n    const newValue = this.props.value || '';\n    if (prevState.initialValue != newValue && !prevState.active) {\n      this.setState({\n        initialValue: newValue,\n        value: newValue\n      });\n    }\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, active: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleEditingFinished(e);\n    }\n  }\n\n  handleStartEditing() {\n    if (!this.props.readOnly) {\n      ReactDOM.findDOMNode(this).focus();\n      this.setState({active: true});\n    }\n  }\n\n  handleEditingFinished(event) {\n    if (this.props.required && !event.target.checkValidity()) {\n      // Empty input\n      this.setState({value: this.props.value, active: false});\n      return;\n    }\n    this.setState({active: false});\n    let value = this.state.value.trim();\n    if ((value || this.props.value) && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  handlePasswordFinished(value) {\n    this.setState({active: false});\n    if (value && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  render() {\n    if (this.state.active) {\n      var fieldType = this.props.type || 'text';\n    } else {\n      var spanText = this.props.type == 'password' ? '••••••••' : this.state.value;\n      var spanClass = 'in-place-edit' +\n        (this.props.readOnly ? ' disabled' : '');\n      if (!spanText) {\n        spanText = this.props.placeholder;\n        spanClass += ' placeholder';\n      }\n      if (spanText.length > 20) {\n        // FIXME: this is wrong for RTL languages.\n        spanText = spanText.substring(0, 19) + '...';\n      }\n    }\n    return (\n      this.state.active ?\n        (fieldType == 'password' ?\n          <VisiblePassword\n            value={this.state.value}\n            placeholder={this.props.placeholder}\n            required={this.props.required ? 'required' : ''}\n            autoComplete={this.props.autoComplete}\n            autoFocus={true}\n            onFinished={this.handlePasswordFinished}/>\n          :\n          <input type={fieldType}\n            value={this.state.value}\n            placeholder={this.props.placeholder}\n            required={this.props.required ? 'required' : ''}\n            autoComplete={this.props.autoComplete}\n            autoFocus\n            onChange={this.handeTextChange}\n            onKeyDown={this.handleKeyDown}\n            onBlur={this.handleEditingFinished} />\n        )\n        :\n        <span className={spanClass} onClick={this.handleStartEditing}>\n          <span className=\"content\">{spanText}</span>\n        </span>\n    );\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Invitation extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleButtonAction = this.handleButtonAction.bind(this);\n  }\n\n  handleButtonAction(evt, data) {\n    evt.preventDefault();\n    this.props.onAction(data);\n  }\n\n  render() {\n    return (\n      <div className=\"accept-invite-panel\">\n        <div className=\"title\">\n          <FormattedMessage id=\"chat_invitation\"\n            defaultMessage=\"You are invited to start a new chat. What would you like to do?\"\n            description=\"New chat invitation message: [Accept] [Ignore] [Block].\" />\n        </div>\n        <div className=\"footer\">\n          <button className=\"blue\" onClick={event => { this.handleButtonAction(event, \"accept\"); }}>\n            <FormattedMessage id=\"chat_invitation_accept\"\n              defaultMessage=\"Accept\" description=\"Action [Accept] for chat invitation.\" />\n          </button>\n          <button className=\"white\" onClick={event => { this.handleButtonAction(event, \"delete\"); }}>\n            <FormattedMessage id=\"chat_invitation_ignore\"\n              defaultMessage=\"Ignore\" description=\"Action [Ignore] for chat invitation.\" />\n          </button>\n          <button className=\"white\" onClick={event => { this.handleButtonAction(event, \"block\"); }}>\n            <FormattedMessage id=\"chat_invitation_block\"\n              defaultMessage=\"Block\" description=\"Action [Block] for chat invitation.\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport Tinode from 'tinode-sdk';\n\nimport { stringHash } from '../lib/strformat.js';\n\nexport default class LetterTile extends React.PureComponent {\n  render() {\n    let avatar;\n    if (this.props.avatar === true) {\n      const isGroup = (Tinode.topicType(this.props.topic) == 'grp');\n      const iconColor = (isGroup ? 'light-color' : 'dark-color')\n        + (Math.abs(stringHash(this.props.topic)) % 16);\n      if (this.props.topic && this.props.title && this.props.title.trim()) {\n        const letter = this.props.title.trim().charAt(0);\n        const className = 'lettertile ' + iconColor;\n        avatar = (<div className={className}><div>{letter}</div></div>)\n      } else {\n        const className = 'material-icons ' + iconColor;\n        avatar = isGroup ?\n          <i className={className}>group</i> : <i className={className}>person</i>;\n      }\n    } else if (this.props.avatar) {\n      // If avatar image is invalid, show a placeholder.\n      avatar = <img className=\"avatar\" alt=\"avatar\" src={this.props.avatar}\n        onError={(e)=>{e.target.onerror = null; e.target.src=\"/img/broken_image.png\"}} />;\n    } else {\n      avatar = null;\n    }\n    return avatar;\n  }\n}\n","import React from 'react';\n\nexport default class LoadSpinner extends React.PureComponent {\n  render() {\n    return (this.props.show ?\n      <div className=\"load-spinner-box\"><div className=\"loader-spinner\"></div></div> : null);\n  }\n}\n","// The X menu to be displayed in title bars.\nimport React from 'react';\n\nexport default class MenuCancel extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n        <i className=\"material-icons\">close</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class MenuContacts extends React.PureComponent {\n  render() {\n    return (\n      <div>\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onNewTopic();}}><i className=\"material-icons\">chat</i></a>\n        &nbsp;\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nexport default class MenuStart extends React.PureComponent {\n  render() {\n    return (\n        <div>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSignUp();}}><i className=\"material-icons\">person_add</i></a>\n          &nbsp;\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n        </div>\n    );\n  }\n};\n","// Toggle [Title text >] -> [Title text v]\n\nimport React from 'react';\n\nexport default class MoreButton extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: props.open\n    };\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n\n  handleToggle() {\n    const open = !this.state.open;\n    this.setState({open: open});\n    if (this.props.onToggle) {\n      this.props.onToggle(open);\n    }\n  }\n\n  render() {\n    return (<label className=\"small clean-clickable\" onClick={this.handleToggle}>{this.props.title}...\n      {this.state.open ? <i className=\"material-icons\">expand_more</i> :\n        <i className=\"material-icons\">chevron_right</i>}\n      </label>);\n  }\n}\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  invalid_id: {\n    id: 'error_invalid_id',\n    defaultMessage: 'Invalid ID',\n    description: 'Error message'\n  }\n});\n\nclass NewTopicById extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      groupId: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({groupId: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.groupId) {\n      var name = this.state.groupId.trim();\n      if (name.length > 3 && (name.substr(0, 3) == 'usr' || name.substr(0, 3) == 'grp')) {\n        this.props.onSubmit(name);\n      } else {\n        this.props.onError(this.props.intl.formatMessage(messages.invalid_id), 'err');\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"group_user_id_prompt\" defaultMessage=\"Group or User ID\"\n          description=\"Prompt for entering user or group ID\">{\n          (prompt) => <input type=\"text\" placeholder={prompt}\n            value={this.state.groupId} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required autoFocus />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"blue\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_subscribe\" defaultMessage=\"Subscribe\"\n              description=\"Button [Subscribe]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicById);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from './avatar-upload.jsx';\nimport CheckBox from './checkbox.jsx';\nimport TagManager from './tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class NewTopicGroup extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      fn: '', // full/formatted name\n      private: '',\n      imageDataUrl: null,\n      tags: [],\n      isChannel: false\n    };\n\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handlePrivateChange = this.handlePrivateChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleTagsChanged = this.handleTagsChanged.bind(this);\n    this.handleChannelToggle = this.handleChannelToggle.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handlePrivateChange(e) {\n    this.setState({private: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleTagsChanged(tags) {\n    this.setState({tags: tags});\n  }\n\n  handleChannelToggle() {\n    this.setState({isChannel: !this.state.isChannel});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const fn = this.state.fn.trim().substring(0, MAX_TITLE_LENGTH);\n    const comment = this.state.private.trim().substring(0, MAX_TITLE_LENGTH);\n    if (fn) {\n      this.props.onSubmit(fn, this.state.imageDataUrl, comment, this.state.tags, this.state.isChannel);\n    }\n  }\n\n  render() {\n    var submitClasses = 'blue';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n    return (\n      <form className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\" htmlFor=\"new-topic-fn\">\n              <FormattedMessage id=\"label_topic_name\" />\n            </label>\n            <FormattedMessage id=\"topic_name_editing_placeholder\" defaultMessage=\"Freeform name of the group\"\n              description=\"Prompt for entering topic name\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-fn\" placeholder={placeholder}\n                value={this.state.fn} onChange={this.handleFnChange} autoFocus required />\n            }</FormattedMessage>\n            <br />\n            <label className=\"small\" htmlFor=\"new-topic-priv\">\n              <FormattedMessage id=\"label_private\" />\n            </label>\n            <FormattedMessage id=\"private_editing_placeholder\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-priv\" placeholder={placeholder}\n                value={this.state.private} onChange={this.handlePrivateChange} />\n            }</FormattedMessage>\n          </div>\n          <AvatarUpload\n            onError={this.props.onError}\n            onImageChanged={this.handleImageChanged} />\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox checked={this.state.isChannel} onChange={this.handleChannelToggle}/>&nbsp;\n          <label onClick={this.handleChannelToggle}><FormattedMessage id=\"channel_prompt\"\n            defaultMessage=\"This is a channel\"\n            description=\"Checkbox label when creating a channel\" /></label>\n        </div>\n        <FormattedMessage id=\"title_tag_manager\">{\n          (title) => <TagManager\n            tags={this.state.tags}\n            activated={true}\n            onTagsChanged={this.handleTagsChanged}\n            tinode={this.props.tinode}\n            title={title} />\n        }</FormattedMessage>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses}>\n            <FormattedMessage id=\"button_create\" defaultMessage=\"Create\"\n              description=\"Button [Create]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// PermissionsEditor: Component for editing permissions\n// <PermissionsEditor mode=\"JWROD\" skip=\"O\" onChange={this.handleCheckboxTest} />\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport CheckBox from './checkbox.jsx';\nimport Contact from './contact.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n// Translatable permission names.\nconst messages = defineMessages({\n  'joiner': {\n    id: 'permission_join',\n    defaultMessage: \"Join ({val})\",\n    description: 'Name of J permission'\n  },\n  'reader': {\n    id: 'permission_read',\n    defaultMessage: \"Read ({val})\",\n    description: 'Name of R permission'\n  },\n  'writer': {\n    id: 'permission_write',\n    defaultMessage: \"Write ({val})\",\n    description: 'Name of W permission'\n  },\n  'preser': {\n    id: 'permission_pres',\n    defaultMessage: \"Get notified ({val})\",\n    description: 'Name of P permission'\n  },\n  'approver': {\n    id: 'permission_admin',\n    defaultMessage: \"Approve ({val})\",\n    description: 'Name of A permission'\n  },\n  'sharer': {\n    id: 'permission_share',\n    defaultMessage: \"Share ({val})\",\n    description: 'Name of S permission'\n  },\n  'deleter': {\n    id: 'permission_delete',\n    defaultMessage: \"Delete ({val})\",\n    description: 'Name of D permission'\n  },\n  'owner': {\n    id: 'permission_owner',\n    defaultMessage: \"Owner ({val})\",\n    description: 'Name of O permission'\n  }\n});\n\nclass PermissionsEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mode: (props.mode || '').replace('N', '')\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(val) {\n    let mode = this.state.mode;\n    let idx = mode.indexOf(val);\n    if (idx == -1) {\n      mode += val;\n    } else {\n      mode = mode.replace(val, '');\n    }\n    this.setState({mode: mode});\n  }\n\n  handleSubmit() {\n    // Normalize string, otherwise cannot check if mode has changed.\n    var mode = (this.state.mode || 'N').split('').sort().join('');\n    var before = (this.props.mode || 'N').split('').sort().join('')\n    if (mode !== before) {\n      this.props.onSubmit(mode);\n    } else {\n      this.props.onCancel();\n    }\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const all = 'JRWPASDO';\n    const names = {\n      'J': formatMessage(messages.joiner, {val: 'J'}),\n      'R': formatMessage(messages.reader, {val: 'R'}),\n      'W': formatMessage(messages.writer, {val: 'W'}),\n      'P': formatMessage(messages.preser, {val: 'P'}),\n      'A': formatMessage(messages.approver, {val: 'A'}),\n      'S': formatMessage(messages.sharer, {val: 'S'}),\n      'D': formatMessage(messages.deleter, {val: 'D'}),\n      'O': formatMessage(messages.owner, {val: 'O'})\n    };\n\n    let skip = this.props.skip || '';\n    let mode = this.state.mode;\n    let compare = (this.props.compare || '').replace('N', '');\n    let items = [];\n    for (let i=0; i<all.length; i++) {\n      let c = all.charAt(i);\n      if (skip.indexOf(c) >= 0 && mode.indexOf(c) < 0) {\n        // Permission is marked as inactive: hide unchecked permissions, disable checked permissions\n        continue;\n      }\n      items.push(\n        <tr key={c}>\n          <td>{names[c]}</td>\n          <td className=\"checkbox\">{skip.indexOf(c) < 0 ?\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} onChange={this.handleChange}/>\n            :\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} />\n          }</td>{this.props.compare ? <td className=\"checkbox\">\n            <CheckBox name={c} checked={(compare.indexOf(c) >= 0)}/>\n          </td> : null}\n        </tr>\n      );\n    }\n\n    return (\n      <div className=\"panel-form-column\">\n        {this.props.userTitle ?\n          <ul className=\"contact-box\"><Contact\n            item={this.props.item}\n            title={this.props.userTitle}\n            avatar={makeImageUrl(this.props.userAvatar ? this.props.userAvatar : null)} /></ul> : null}\n        <label className=\"small\"><FormattedMessage id=\"title_permissions\"\n          defaultMessage=\"Permissions\" description=\"Section title\"/></label>\n        <table className=\"permission-editor\">\n        {this.props.compare ?\n          <thead><tr>\n            <th></th><th>{this.props.modeTitle}</th>\n            <th>{this.props.compareTitle}</th>\n          </tr></thead> :\n          null}\n        <tbody>\n          {items}\n        </tbody></table>\n        <br />\n        <div className=\"dialog-buttons\">\n          <button className=\"outline\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" />\n          </button>\n          <button className=\"blue\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(PermissionsEditor);\n","// Received/read indicator.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { shortDateFormat } from '../lib/strformat.js';\n\nconst messages = defineMessages({\n  'sending': {\n    'id': 'message_sending',\n    'defaultMessage': 'sending...',\n    'description': 'Message being sent, in place of time stamp'\n  },\n  'failed': {\n    'id': 'message_sending_failed',\n    'defaultMessage': 'failed',\n    'description': 'Failed to send message, in place of time stamp'\n  }\n});\n\nclass ReceivedMarker extends React.PureComponent {\n  render() {\n    const {formatMessage} = this.props.intl;\n    let timestamp;\n    if (this.props.received <= Tinode.MESSAGE_STATUS_SENDING) {\n      timestamp = formatMessage(messages.sending);\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_FAILED) {\n      timestamp = formatMessage(messages.failed);\n    } else {\n      timestamp = shortDateFormat(this.props.timestamp, this.props.intl.locale);\n    }\n\n    let marker = null;\n    if (this.props.received <= Tinode.MESSAGE_STATUS_SENDING) {\n      marker = (<i className=\"material-icons small\">access_time</i>); // watch face\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_FAILED) {\n      marker = (<i className=\"material-icons small amber\">warning</i>); // yellow icon /!\\\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_SENT) {\n      marker = (<i className=\"material-icons small\">done</i>); // checkmark\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_RECEIVED) {\n      marker = (<i className=\"material-icons small\">done_all</i>); // double checkmark\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_READ) {\n      marker = (<i className=\"material-icons small blue\">done_all</i>); // blue double checkmark\n    }\n\n    return (\n      <span className=\"timestamp\">\n        {timestamp}{'\\u00a0'}{marker}\n      </span>\n    );\n  }\n};\n\nexport default injectIntl(ReceivedMarker);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nexport default class SearchContacts extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      edited: false,\n      search: ''\n    };\n\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  componentWillUnmount() {\n    if (this.state.edited) {\n      this.setState({search: '', edited: false});\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n  }\n\n  handleSearchChange(e) {\n    this.setState({search: e.target.value});\n  }\n\n  handleSearch(e) {\n    e.preventDefault();\n    var query = this.state.search.trim();\n    this.setState({edited: (query.length > 0)});\n    this.props.onSearchContacts(query.length > 0 ? query : Tinode.DEL_CHAR);\n  }\n\n  handleClear(e) {\n    e.preventDefault();\n    if (this.state.edited) {\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n    this.setState({search: '', edited: false});\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Enter') {\n      this.handleSearch(e);\n    } else if (e.key === 'Escape') {\n      this.handleClear();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <i className=\"material-icons search\">search</i>\n          <FormattedMessage id=\"search_placeholder\" defaultMessage=\"List like email:alice@example.com, tel:17025550003...\"\n            description=\"Placeholder in contacts search field\">{\n            (search_placeholder) => <input className=\"search\" type=\"text\"\n              placeholder={search_placeholder}\n              value={this.state.search} onChange={this.handleSearchChange}\n              onKeyDown={this.handleKeyDown} required autoFocus />\n          }</FormattedMessage>\n          <a href=\"#\" onClick={this.handleClear}>\n            <i className=\"material-icons\">close</i>\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","// Send message form.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport { KEYPRESS_DELAY } from '../config.js';\nimport { filePasted } from '../lib/blob-helpers.js';\n\nconst messages = defineMessages({\n  'messaging_disabled': {\n    id: 'messaging_disabled_prompt',\n    defaultMessage: 'Messaging disabled',\n    description: 'Prompt in SendMessage in read-only topic'\n  },\n  'type_new_message': {\n    id: 'new_message_prompt',\n    defaultMessage: 'New message',\n    description: 'Prompt in send message field'\n  },\n  'add_image_caption': {\n    id: 'image_caption_prompt',\n    defaultMessage: 'Image caption',\n    description: 'Prompt in SendMessage for attached image'\n  },\n  'file_attachment_too_large': {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  },\n  'cannot_initiate_upload': {\n    id: 'cannot_initiate_file_upload',\n    defaultMessage: 'Cannot initiate file upload.',\n    description: 'Generic error messagewhen attachment fails'\n  },\n});\n\nclass SendMessage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      message: '',\n      // Make initial keypress time as if it happened 5001 milliseconds in the past.\n      keypressTimestamp: new Date().getTime() - KEYPRESS_DELAY - 1\n    };\n\n    this.handlePasteEvent = this.handlePasteEvent.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleSend = this.handleSend.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleMessageTyping = this.handleMessageTyping.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.addEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.removeEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.messageEditArea) {\n      this.messageEditArea.focus();\n    }\n  }\n\n  handlePasteEvent(e) {\n    if (this.props.disabled) {\n      return;\n    }\n    // FIXME: handle large files too.\n    if (filePasted(e,\n      (bits, mime, width, height, fname) => {\n        this.props.onAttachImage(mime, bits, width, height, fname);\n      },\n      (mime, bits, fname) => {\n        this.props.onAttachFile(mime, bits, fname);\n      },\n      this.props.onError)) {\n\n      // If a file was pasted, don't paste base64 data into input field.\n      e.preventDefault();\n    }\n  }\n\n  handleAttachImage(e) {\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachImage(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleAttachFile(e) {\n    const {formatMessage} = this.props.intl;\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachFile(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleSend(e) {\n    e.preventDefault();\n    const message = this.state.message.trim();\n    if (message || this.props.acceptBlank || this.props.noInput) {\n      this.props.onSendMessage(message);\n      this.setState({message: ''});\n    }\n  }\n\n  /* Send on Enter key */\n  handleKeyPress(e) {\n    // Remove this if you don't want Enter to trigger send\n    if (e.key === 'Enter') {\n      // Have Shift-Enter insert a line break instead\n      if (!e.shiftKey) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.handleSend(e);\n      }\n    }\n  }\n\n  handleMessageTyping(e) {\n    const newState = {message: e.target.value};\n    if (this.props.onKeyPress) {\n      const now = new Date().getTime();\n      if (now - this.state.keypressTimestamp > KEYPRESS_DELAY) {\n        this.props.onKeyPress();\n        newState.keypressTimestamp = now;\n      }\n    }\n    this.setState(newState);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const prompt = this.props.disabled ?\n      formatMessage(messages.messaging_disabled) :\n      (this.props.messagePrompt ?\n        formatMessage(messages[this.props.messagePrompt]) :\n        formatMessage(messages.type_new_message));\n    return (\n      <div id=\"send-message-panel\">\n        {!this.props.disabled ?\n          <>\n            {this.props.onAttachFile ?\n              <>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachImage.click();}} title=\"Add image\">\n                  <i className=\"material-icons secondary\">photo</i>\n                </a>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachFile.click();}} title=\"Attach file\">\n                  <i className=\"material-icons secondary\">attach_file</i>\n                </a>\n              </>\n              :\n              null}\n            {this.props.noInput ?\n              <div className=\"hr thin\" /> :\n              <textarea id=\"sendMessage\" placeholder={prompt}\n                value={this.state.message} onChange={this.handleMessageTyping}\n                onKeyPress={this.handleKeyPress}\n                ref={(ref) => {this.messageEditArea = ref;}}\n                autoFocus />}\n            <a href=\"#\" onClick={this.handleSend} title=\"Send\">\n              <i className=\"material-icons\">send</i>\n            </a>\n            <input type=\"file\" ref={(ref) => {this.attachFile = ref;}}\n              onChange={this.handleAttachFile} style={{display: 'none'}} />\n            <input type=\"file\" ref={(ref) => {this.attachImage = ref;}} accept=\"image/*\"\n              onChange={this.handleAttachImage} style={{display: 'none'}} />\n          </>\n          :\n          <div id=\"writing-disabled\">{prompt}</div>\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SendMessage);\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\nimport ButtonBack from './button-back.jsx';\nimport MenuContacts from './menu-contacts.jsx';\nimport MenuStart from './menu-start.jsx';\n\nexport default class SideNavbar extends React.PureComponent {\n  render() {\n    return (\n        <div id=\"side-caption-panel\" className=\"caption-panel\">\n          {this.props.onCancel ? <ButtonBack onBack={this.props.onCancel} /> : null}\n          {this.props.avatar ?\n            <div id=\"self-avatar\" className=\"avatar-box\">\n              <LetterTile\n                avatar={this.props.avatar}\n                topic={this.props.myUserId}\n                title={this.props.title} />\n            </div>\n            :\n            null}\n          <div id=\"sidepanel-title\" className=\"panel-title\">{this.props.title}</div>\n          {this.props.state === 'login' ?\n              <MenuStart onSignUp={this.props.onSignUp} onSettings={this.props.onSettings} /> :\n            this.props.state === 'contacts' ?\n              <MenuContacts onNewTopic={this.props.onNewTopic} onSettings={this.props.onSettings} /> :\n            null}\n        </div>\n    );\n  }\n};\n","// TagManager: edit topic or user tags.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\n\nimport { MAX_TAG_COUNT, MAX_TAG_LENGTH, MIN_TAG_LENGTH } from '../config.js';\nimport { arrayEqual } from '../lib/utils.js';\n\nexport default class TagManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tags: this.props.tags,\n      tagInput: '',\n      activated: this.props.activated\n    };\n\n    this.handleTagInput = this.handleTagInput.bind(this);\n    this.handleAddTag = this.handleAddTag.bind(this);\n    this.handleRemoveTag = this.handleRemoveTag.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (!arrayEqual(nextProps.tags, prevState.tags) && !prevState.activated) {\n      return {tags: nextProps.tags};\n    }\n    return null;\n  }\n\n  handleTagInput(text) {\n    this.setState({tagInput: text});\n    if (text.length > 0) {\n      const last = text[text.length-1];\n      if (text[0] == '\"') {\n        // This is a quoted string.\n        if (text.length > 1 && last == '\"') {\n          this.handleAddTag(text.substring(1, text.length-1));\n        }\n      } else if (last == ',' || last == ' ' || last == ';' || last == '\"') {\n        // User entered ',', ' ' or ';'\n        this.handleAddTag(text.substring(0, text.length-1).trim());\n      }\n    }\n  }\n\n  handleAddTag(tag) {\n    const maxTagCount = this.props.tinode.getServerLimit('maxTagCount', MAX_TAG_COUNT);\n\n    if (tag.length > 0 && this.state.tags.length < maxTagCount) {\n      const tags = this.state.tags.slice(0);\n      tags.push(tag);\n\n      this.setState({tags: tags, tagInput: ''});\n      if (this.props.onTagsChanged) {\n        this.props.onTagsChanged(tags);\n      }\n      return tags;\n    }\n    return this.state.tags;\n  }\n\n  handleRemoveTag(tag, index) {\n    const tags = this.state.tags.slice(0);\n    tags.splice(index, 1);\n    this.setState({tags: tags});\n    if (this.props.onTagsChanged) {\n      this.props.onTagsChanged(tags);\n    }\n  }\n\n  handleSubmit() {\n    // Add unprocessed input to tags, submit the list.\n    this.props.onSubmit(this.handleAddTag(this.state.tagInput.trim()));\n    this.setState({activated: false, tags: this.props.tags});\n  }\n\n  handleCancel() {\n    this.setState({activated: false, tagInput: '', tags: this.props.tags});\n    if (this.props.onCancel) {\n      this.props.onCancel();\n    }\n  }\n\n  render() {\n    const minTagLength = this.props.tinode.getServerLimit('minTagLength', MIN_TAG_LENGTH);\n    const maxTagLength = this.props.tinode.getServerLimit('maxTagLength', MAX_TAG_LENGTH);\n\n    let tags = [];\n    if (this.state.activated) {\n      this.state.tags.map((tag) => {\n        tags.push({user: tag, invalid: (tag.length < minTagLength || tag.length > maxTagLength)});\n      });\n    } else {\n      this.state.tags.map((tag) => {\n        tags.push(<span className=\"badge\" key={tags.length}>{tag}</span>);\n      });\n      if (tags.length == 0) {\n        tags = (\n          <i>\n            <FormattedMessage id=\"tags_not_found\" defaultMessage=\"No tags defined. Add some.\" description=\"\" />\n          </i>\n        );\n      }\n    }\n    return (\n      <div className=\"panel-form-column\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">{this.props.title}</label>\n        </div>\n        {this.state.activated ?\n        <div>\n          <FormattedMessage id=\"tags_editor_no_tags\" defaultMessage=\"Add some tags\"\n            description=\"Tag editor prompt when no tags are found.\">{\n            (add_tags_prompt) => <ChipInput\n              chips={tags}\n              avatarDisabled={true}\n              prompt={add_tags_prompt}\n              onEnter={this.handleAddTag}\n              onFocusLost={this.handleAddTag}\n              onCancel={this.handleCancel}\n              onChipRemoved={this.handleRemoveTag}\n              filterFunc={this.handleTagInput} />\n          }</FormattedMessage>\n          {this.props.onSubmit || this.props.onCancel ?\n            <div id=\"tag-manager-buttons\" className=\"dialog-buttons panel-form-row\">\n              <button className=\"outline\" onClick={this.handleCancel}>\n                <FormattedMessage id=\"button_cancel\" defautMessage=\"Cancel\" description=\"Rejection button [Cancel]\" />\n              </button>\n              <button className=\"blue\" onClick={this.handleSubmit}>\n                <FormattedMessage id=\"button_ok\" defautMessage=\"OK\" description=\"Confirmation button [OK]\" />\n              </button>\n            </div>\n          : null}\n        </div>\n        :\n        <div className=\"quoted\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.setState({activated: true});}}>\n            <i className=\"material-icons\">edit</i> &nbsp;<FormattedMessage id=\"title_manage_tags\" defaultMessage=\"Manage\"\n              description=\"Section title for the list of tags\" />\n          </a>\n          <>{tags}</>\n        </div>\n      }\n      </div>\n    );\n  }\n};\n","// The counter of unread messages in the topic.\nimport React from 'react';\n\nexport default class UnreadBadge extends React.PureComponent {\n  render() {\n    return (this.props.count > 0 ?\n      <span className=\"unread\">{this.props.count > 9 ? \"9+\" : this.props.count}</span>\n      : null);\n  }\n};\n","// Image view with progress bar and a cancel button.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\n\nexport default class UploadingImage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"inline-image\">\n        {React.createElement('img', this.props)}\n        <div className=\"rounded-container\">\n          <FileProgress progress={this.props.progress} onCancel={this.props.onCancelUpload} />\n        </div>\n      </div>\n    );\n  }\n};\n","// Password with a visiblity toggle.\nimport React from 'react';\n\nexport default class VisiblePassword extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: this.props.value,\n      visible: false\n    };\n\n    this.handleVisibility = this.handleVisibility.bind(this);\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n    if (this.props.onChange) {\n      this.props.onChange(e);\n    }\n  }\n\n  handleVisibility(e) {\n    e.preventDefault();\n    this.setState({visible: !this.state.visible});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode == 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, visible: false});\n      if (this.props.onFinished) {\n        this.props.onFinished();\n      }\n    } else if (e.keyCode == 13) {\n      // Enter pressed\n      this.handleEditingFinished();\n    }\n  }\n\n  handleEditingFinished(e) {\n    if (e) {\n      let currentTarget = e.currentTarget;\n      setTimeout(() => {\n        if (!currentTarget.contains(document.activeElement)) {\n          if (this.props.onFinished) {\n            this.props.onFinished(this.state.value);\n          }\n        }\n      }, 0);\n    } else if (this.props.onFinished) {\n      this.props.onFinished(this.state.value.trim());\n    }\n  }\n\n  render() {\n    return (\n      <div tabIndex=\"-1\" className=\"group-focus\"\n        onBlur={this.handleEditingFinished}>\n        <input className=\"with-visibility\"\n          type={this.state.visible ? \"text\" : \"password\"}\n          value={this.state.value}\n          placeholder={this.props.placeholder}\n          required={this.props.required ? 'required' : ''}\n          autoFocus={this.props.autoFocus ? 'autoFocus' : ''}\n          autoComplete={this.props.autoComplete}\n          onChange={this.handeTextChange}\n          onKeyDown={this.handleKeyDown} />\n        <span onClick={this.handleVisibility}>\n          <i className=\"material-icons clickable light-gray\">\n            {this.state.visible ? 'visibility' : 'visibility_off'}\n          </i>\n        </span>\n      </div>\n    );\n  }\n}\n","module.exports = React;","module.exports = ReactDOM;","module.exports = ReactIntl;","module.exports = Tinode;","module.exports = firebase;","module.exports = firebase.messaging;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(\"./src/index.js\");\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}