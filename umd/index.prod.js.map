{"version":3,"sources":["webpack://tinode-webapp/external \"React\"","webpack://tinode-webapp/external \"ReactDOM\"","webpack://tinode-webapp/external \"ReactIntl\"","webpack://tinode-webapp/external \"firebase\"","webpack://tinode-webapp/external \"Tinode\"","webpack://tinode-webapp/external [\"firebase\",\"messaging\"]","webpack://tinode-webapp/./src/widgets/alert.jsx","webpack://tinode-webapp/./src/version.js","webpack://tinode-webapp/./src/config.js","webpack://tinode-webapp/./src/widgets/context-menu.jsx","webpack://tinode-webapp/./src/lib/strformat.js","webpack://tinode-webapp/./src/lib/utils.js","webpack://tinode-webapp/./src/widgets/letter-tile.jsx","webpack://tinode-webapp/./src/widgets/load-spinner.jsx","webpack://tinode-webapp/./src/widgets/avatar-upload.jsx","webpack://tinode-webapp/./src/widgets/badge-list.jsx","webpack://tinode-webapp/./src/widgets/checkbox.jsx","webpack://tinode-webapp/./src/widgets/contact-badges.jsx","webpack://tinode-webapp/./src/widgets/received-marker.jsx","webpack://tinode-webapp/./src/widgets/unread-badge.jsx","webpack://tinode-webapp/./src/widgets/contact.jsx","webpack://tinode-webapp/./src/widgets/contact-action.jsx","webpack://tinode-webapp/./src/lib/blob-helpers.js","webpack://tinode-webapp/./src/widgets/contact-list.jsx","webpack://tinode-webapp/./src/widgets/menu-cancel.jsx","webpack://tinode-webapp/./src/widgets/error-panel.jsx","webpack://tinode-webapp/./src/widgets/chip.jsx","webpack://tinode-webapp/./src/widgets/chip-input.jsx","webpack://tinode-webapp/./src/widgets/group-manager.jsx","webpack://tinode-webapp/./src/widgets/permissions-editor.jsx","webpack://tinode-webapp/./src/widgets/cropper.jsx","webpack://tinode-webapp/./src/widgets/avatar-crop.jsx","webpack://tinode-webapp/./src/widgets/visible-password.jsx","webpack://tinode-webapp/./src/widgets/in-place-edit.jsx","webpack://tinode-webapp/./src/widgets/tag-manager.jsx","webpack://tinode-webapp/./src/widgets/topic-desc-edit.jsx","webpack://tinode-webapp/./src/widgets/topic-common.jsx","webpack://tinode-webapp/./src/widgets/topic-security.jsx","webpack://tinode-webapp/./src/views/info-view.jsx","webpack://tinode-webapp/./src/widgets/file-progress.jsx","webpack://tinode-webapp/./src/widgets/attachment.jsx","webpack://tinode-webapp/./src/widgets/uploading-image.jsx","webpack://tinode-webapp/./src/widgets/chat-message.jsx","webpack://tinode-webapp/./src/widgets/send-message.jsx","webpack://tinode-webapp/./src/widgets/doc-preview.jsx","webpack://tinode-webapp/./src/widgets/group-subs.jsx","webpack://tinode-webapp/./src/widgets/image-preview.jsx","webpack://tinode-webapp/./src/widgets/invitation.jsx","webpack://tinode-webapp/./src/views/logo-view.jsx","webpack://tinode-webapp/./src/lib/navigation.js","webpack://tinode-webapp/./src/views/messages-view.jsx","webpack://tinode-webapp/./src/widgets/button-back.jsx","webpack://tinode-webapp/./src/widgets/menu-contacts.jsx","webpack://tinode-webapp/./src/widgets/menu-start.jsx","webpack://tinode-webapp/./src/widgets/side-navbar.jsx","webpack://tinode-webapp/./src/views/account-settings-view.jsx","webpack://tinode-webapp/./src/views/contacts-view.jsx","webpack://tinode-webapp/./src/lib/local-storage.js","webpack://tinode-webapp/./src/views/create-account-view.jsx","webpack://tinode-webapp/./src/views/acc-notifications-view.jsx","webpack://tinode-webapp/./src/views/acc-security-view.jsx","webpack://tinode-webapp/./src/views/acc-support-view.jsx","webpack://tinode-webapp/./src/views/login-view.jsx","webpack://tinode-webapp/./src/widgets/new-topic-by-id.jsx","webpack://tinode-webapp/./src/widgets/new-topic-group.jsx","webpack://tinode-webapp/./src/widgets/search-contacts.jsx","webpack://tinode-webapp/./src/views/new-topic-view.jsx","webpack://tinode-webapp/./src/views/password-reset-view.jsx","webpack://tinode-webapp/./src/widgets/host-selector.jsx","webpack://tinode-webapp/./src/views/settings-view.jsx","webpack://tinode-webapp/./src/views/validation-view.jsx","webpack://tinode-webapp/./src/views/sidepanel-view.jsx","webpack://tinode-webapp/./src/lib/host-name.js","webpack://tinode-webapp/./src/views/tinode-web.jsx","webpack://tinode-webapp/./src/index.js","webpack://tinode-webapp/webpack/bootstrap","webpack://tinode-webapp/webpack/runtime/compat get default export","webpack://tinode-webapp/webpack/runtime/define property getters","webpack://tinode-webapp/webpack/runtime/hasOwnProperty shorthand","webpack://tinode-webapp/webpack/startup"],"names":["React","ReactDOM","ReactIntl","firebase","messaging","Tinode","Alert","render","this","props","visible","className","title","content","onReject","onClick","reject","FormattedMessage","id","defaultMessage","onConfirm","confirm","PACKAGE_VERSION","APP_NAME","KNOWN_HOSTS","hosted","local","DEFAULT_HOST","KEYPRESS_DELAY","DEFAULT_P2P_ACCESS_MODE","REM_SIZE","AVATAR_SIZE","MAX_INBAND_ATTACHMENT_SIZE","MAX_EXTERN_ATTACHMENT_SIZE","MAX_IMAGE_DIM","MAX_TITLE_LENGTH","MAX_TOPIC_DESCRIPTION_LENGTH","messages","defineMessages","info","clear_messages","clear_for_all","delete","delete_for_all","send_retry","mute","unmute","reply","topic_delete","topic_delete_warning","delete_messages_warning","unblock","block","topic_block_warning","member_delete","archive","unarchive","edit_permissions","clear_messages_warning","ContextMenu","constructor","super","selfRef","formatMessage","intl","handlePageClick","bind","handleEscapeKey","handleClick","MenuItems","handler","params","errorHandler","onShowAlert","deleteMessages","message","retryMessage","replyToMessage","topicPermissionSetter","then","ctrl","onTopicRemoved","topicName","topic","tinode","getTopic","delTopic","catch","err","console","log","user","delSubscription","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","e","current","contains","target","preventDefault","stopPropagation","hide","keyCode","item","items","currentTarget","dataset","onAction","onError","all","hard","cancelSend","seq","delMessagesAll","delMessagesList","flushMessage","msg","createMessage","publishDraft","mode","result","updateMode","pickReply","count","menu","map","push","key","vSize","length","position","left","bounds","right","clickAt","x","top","bottom","y","style","ref","injectIntl","shortDateFormat","locale","window","navigator","userLanguage","language","now","Date","getFullYear","getMonth","getDate","toLocaleTimeString","hour12","hour","minute","toLocaleDateString","month","day","year","bytesToHumanSize","bytes","sizes","bucket","Math","min","floor","log2","pow","round","toFixed","updateFavicon","oldIcon","getElementById","head","getElementsByTagName","newIcon","createElement","type","rel","href","removeChild","appendChild","theCard","fn","imageUrl","imageMimeType","note","card","trim","mimeType","matches","exec","photo","data","substring","indexOf","arrayEqual","a","b","Array","isArray","sort","i","l","sanitizeUrl","url","allowedSchemes","replace","test","schemes","join","RegExp","sanitizeImageUrl","sanitizedUrl","deliveryMarker","received","name","color","LetterTile","avatar","isGroup","iconColor","fg","abs","value","hash","charCodeAt","stringToColorHash","letter","charAt","authorizeURL","alt","src","onerror","LoadSpinner","large","clear","centered","show","AvatarUpload","state","source","handleFileReceived","componentDidUpdate","prevProps","setState","image","files","onImageUpdated","URL","createObjectURL","randId","random","substr","readOnly","uid","accept","onChange","htmlFor","uploading","icon_mapping","badge_verified","badge_staff","badge_danger","BadgeList","badges","trustedBadges","comment","CheckBox","handleChange","checked","ContactBadges","icon","message_sending","message_sending_failed","ReceivedMarker","timestamp","marker","UnreadBadge","drafty_image","drafty_form","drafty_attachment","Contact","handleContextClick","onSelected","index","showContextMenu","pageY","pageX","online","slice","icon_badges","isVerified","isStaff","isDangerous","acs","showMode","getMode","isMuted","isJoiner","subtitle","preview","Drafty","draftyFormatter","showCheckmark","selected","showOnline","isChannel","unread","small","values","el","attr","concat","mime","ContactAction","action","SUPPORTED_IMAGE_FORMATS","MIME_EXTENSIONS","makeImageUrl","startsWith","fitImageSize","width","height","maxWidth","maxHeight","forceSquare","scale","size","dstWidth","dstHeight","srcWidth","srcHeight","xoffset","yoffset","imageScaled","fileOrBlob","maxSize","onSuccess","img","Image","crossOrigin","onload","async","revokeObjectURL","dim","canvas","ctx","getContext","imageSmoothingEnabled","drawImage","includes","blob","Promise","resolve","toBlob","clearRect","fname","idx","ext","at","lastIndexOf","fileNameForMime","fileToBase64","file","reader","FileReader","split","readAsDataURL","blobToBase64","badge_you","badge_owner","ContactList","topicSelected","contactNodes","contactsCount","contacts","c","filterFunc","filter","filterOn","private","toLowerCase","public","myUserId","isOwner","deliveryStatus","latestMessage","_status","msgStatus","showUnread","connected","onTopicSelected","trusted","verified","staff","danger","noScroll","dangerouslySetInnerHTML","__html","emptyListMessage","MenuCancel","onCancel","ErrorPanel","level","onClearError","warn","text","whiteSpace","actionText","Chip","handleCancel","invalid","noAvatar","required","ChipInput","deriveStateFromProps","input","focused","handleTextInput","removeChipAt","handleChipCancel","handleFocusGained","handleFocusLost","handleKeyDown","placeholder","chips","prompt","sortedChips","sortChips","staticMembers","chipIndex","indexChips","prevState","keep","normal","removed","onChipRemoved","onFocusLost","onEnter","undefined","avatarDisabled","autoFocus","tabIndex","onFocus","onBlur","onKeyDown","no_contacts","contacts_not_found_short","GroupManager","members","indexMembers","keepInitialMembers","requiredMember","contactFilter","noContactsMessage","selectedContacts","handleContactSelected","handleMemberRemoved","handleContactFilter","handleSubmit","m","delta","present","keepInitial","stat","sel","userId","status","splice","val","query","instance","added","Object","keys","k","onSubmit","doContactFiltering","joiner","writer","preser","approver","sharer","deleter","owner","PermissionsEditor","names","skip","compare","userTitle","userAvatar","modeTitle","compareTitle","Cropper","panX","panY","originX","originY","zoom","minZoom","maxZoom","overlay","cutout","boundingBox","imageWidth","imageHeight","mouseX","mouseY","prevDistance","cutoutRect","bBoxRect","initScaling","onZoom","handleZoom","mouseDown","mouseUp","mouseMove","mouseTouch","positionAll","translate","passive","getBoundingClientRect","currPan","nextDiff","imgRect","max","imgLeft","imgRight","coLeft","coRight","imgTop","imgBottom","coTop","coBottom","touches","body","dX","dY","checkBound","touch0","touch1","distance","sqrt","t3d","orig","transform","transformOrigin","onLoad","step","AvatarCrop","objURL","imageCrop","VisiblePassword","handleVisibility","handeTextChange","handleEditingFinished","onFinished","setTimeout","activeElement","autoComplete","InPlaceEdit","active","initialValue","handleStartEditing","handlePasswordFinished","newValue","focus","event","checkValidity","spanText","spanClass","multiline","element","rows","TagManager","tags","tagInput","activated","handleTagInput","handleAddTag","handleRemoveTag","nextProps","last","tag","maxTagCount","getServerLimit","onTagsChanged","minTagLength","maxTagLength","add_tags_prompt","TopicDescEdit","getAccessMode","isMe","fullName","description","newAvatar","newAvatarMime","previousOnTags","tnNewTags","handleFullNameUpdate","handleImageUpdated","handleAvatarCropped","handlePrivateUpdate","handleDescriptionUpdate","uploadAvatar","handleAvatarCropCancel","handleTagsUpdated","onTagsUpdated","onUpdateTopicDesc","desc","readyToUpload","uploader","getLargeFileHelper","upload","finally","unused","base64bits","du","onUpdateTags","editable","full_name_placeholder","groupTopic","private_placeholder","title_tag_manager","TopicCommon","credentials","getCredentials","addCredActive","addCredInvalid","newCred","previousTagsUpdated","tnCredsUpdated","handleCredChange","handleCredKeyDown","handleCredEntered","onCredsUpdated","getType","creds","method","asPhone","asEmail","onCredAdd","onTopicTagsUpdateRequest","cred","meth","done","onCredConfirm","onCredDelete","delete_messages","leave_chat","leave_chat_warning","block_contact","block_contact_warning","report_chat","report_chat_warning","other_user","TopicSecurity","handleDeleteTopic","handleDeleteMessages","handleLeave","handleBlock","handleReport","onDeleteTopic","onDeleteMessages","onLeaveTopic","onBlockTopic","onReportTopic","channel","onLaunchPermissionsEditor","access","auth","anon","modeGiven2","general","security","crop","perm_want","perm_given","perm_auth","perm_anon","perm_user","_clip","str","InfoView","admin","muted","address","selectedContact","modeGiven","modeWant","modeWant2","contactList","previousMetaDesc","previousSubsUpdated","resetSubs","resetDesc","resetTags","onMetaDesc","onSubsUpdated","handleImageChanged","handleMuted","handleUnarchive","handlePermissionsChanged","handleLaunchPermissionsEditor","handleShowAddMembers","handleMemberUpdateRequest","handleMemberSelected","handleContextMenu","handleBackNavigate","newState","user2","subscriber","getGiven","getWant","subscribers","sub","defacs","getDefaultAccess","entries","isAdmin","isSharer","isDeleter","archived","isArchived","isGroupType","isChannelType","chan","getMeta","startMetaQuery","withTags","build","subs","onTopicDescUpdate","ignored","onChangePermissions","ignored2","onTopicUnArchive","which","perm","onTopicDescUpdateRequest","userPermissionsEdited","toEdit","toCompare","toSkip","titleEdit","titleCompare","error","userPermissionsTitle","userPermissionsAvatar","editedPermissions","immutablePermissions","editedPermissionsTitle","immutablePermissionsTitle","editedPermissionsSkipped","onNavigate","onInitFind","onMemberUpdateRequest","args","panel","menuItems","view","shift","panelTitle","displayMobile","errorLevel","errorText","searchableContacts","no_members","FileProgress","progress","Attachment","downloader","downloadFile","filename","mimetype","download","loaded","onCancelUpload","cancel","helperFunc","isUrlRelative","downloadUrl","downloadWidget","UploadingImage","ChatMessage","onProgress","handleProgress","handleImagePreview","handleFormButtonClick","handleCancelUpload","handleQuoteClick","onImagePreview","resp","act","onFormResponse","MESSAGE_STATUS_FAILED","MESSAGE_STATUS_DEL_RANGE","ratio","replyToSeq","onQuoteClick","sideClass","deleted","sequence","response","bubbleClass","fullDisplay","userFrom","msgId","attachments","att","qte","onFormatQuote","lf","tree","userName","viewportWidth","minWidth","minHeight","loading","inner","child","messaging_disabled","type_new_message","add_image_caption","file_attachment_too_large","cannot_initiate_upload","SendMessage","keypressTimestamp","getTime","handlePasteEvent","handleAttachImage","handleAttachFile","handleSend","handleKeyPress","handleMessageTyping","messageEditArea","disabled","onImageSuccess","onAttachmentSuccess","clipboardData","originalEvent","kind","getAsFile","imageFileScaledToBase64","imageFileToBase64","filePasted","bits","onAttachImage","onAttachFile","acceptBlank","noInput","onSendMessage","shiftKey","onKeyPress","replyTo","messagePrompt","quote","onCancelReply","attachImage","click","attachFile","display","DocPreview","handleSendDoc","caption","onClose","mimeToIcon","default","video","iconFromMime","GroupSubs","usersOnline","totalCount","countToShow","some","overflow","ImagePreview","handleSendImage","assignWidth","node","maxlength","Invitation","handleButtonAction","evt","LogoView","version","serverVersion","serverAddress","HashNavigation","parts","path","forEach","part","decodeURIComponent","location","hasOwnProperty","parsed","parseUrlHash","composeUrlHash","sidepanel","infopanel","online_now","last_seen","not_found","isUnconfirmed","ex","getExcessive","isPeerRestricted","ms","getMissing","MessagesView","getDerivedStateFromProps","leave","sendImageAttachment","sendFileAttachment","sendKeyPress","handleScrollReference","handleScrollEvent","handleDescChange","handleSubsUpdated","handleMessageUpdate","handleAllMessagesReceived","handleInfoReceipt","handleImagePostview","handleClosePreview","handleFormResponse","handleShowContextMenuMessage","handleNewChatAcceptance","handleEnablePeer","postReadNotification","clearNotificationQueue","handleSendMessage","handlePickReply","handleCancelReply","convertIntoThumbnails","readNotificationQueue","readNotificationTimer","messagesScroller","latestMsgSeq","scrollTop","scrollHeight","scrollPosition","viewportHeight","onData","onAllMessagesReceived","onInfo","onPres","applicationVisible","isSubscribed","ready","newTopic","newTopicParams","_topicName","getQuery","withLaterDesc","withLaterSub","isReader","withLaterData","withLaterDel","fetchingMessages","setQuery","subscribe","code","onNewTopicCreated","queuedMessages","pub","_sending","publishMessage","setUrlTopic","blankState","nextState","docPreview","imagePreview","imagePostview","typingIndicator","assign","onlineSubs","peer","p2pPeerDesc","peerMessagingDisabled","maxMsgSeq","latestClearId","maxClearId","isWriter","readingBlocked","unconformed","unconfirmed","oldTopicName","isTopicCached","oldTopic","msgHasMoreMessages","getMessagesPage","setInterval","clearInterval","n","sendAt","noteRead","setMilliseconds","getMilliseconds","isNewMessage","from","what","clearTimeout","keyPressTimer","forceUpdate","sendMessage","attachJSON","parse","searchParams","set","search","open","messageSpecificMenuItems","onNewChat","noteKeyPress","maxInbandAttachmentSize","uploadCompletionPromise","urlPromise","maxExternAttachmentSize","limit","tinyMine","tinyBlob","blobMime","tinyBits64","insertImage","_tempPreview","appendLineBreak","append","init","bits64","found","findMessage","_cancelled","cont","tp","header","msgIndex","thisFrom","userDesc","myUserName","ents","ent","entities","success","createQuote","r","origBlob","bin","atob","buf","ArrayBuffer","arr","Uint8Array","Blob","base64ToBlob","call","saveThis","fetch","attachQuote","scrollIntoView","behavior","backgroundColor","component","hideSelf","component2","messageNodes","previousFrom","chatBoxClass","prev","next","nextFrom","isReply","hi","ts","_uploader","quoteFormatter","lastSeen","getMeTopic","getContact","seen","when","onHideMessagesView","tagName","attrValue","ButtonBack","onBack","MenuContacts","onNewTopic","onSettings","MenuStart","onSignUp","SideNavbar","AccountSettingsView","me","archived_contacts_title","ContactsView","handleAction","unreadThreads","archivedCount","chatList","blocked","arch","touched","action_ignored","onShowArchive","LocalStorageUtil","localStorage","setItem","JSON","stringify","getItem","oldVal","getObject","setObject","removeItem","CreateAccountView","login","password","email","imageDataUrl","errorCleared","saveToken","handleLoginChange","handlePasswordChange","handleEmailChange","handleFnChange","handleToggleSaveToken","onCreateAccount","submitClasses","login_prompt","password_prompt","onImageChanged","full_name_prompt","email_prompt","stay_logged_in","EditAccountView","handleCheckboxClick","onToggleMessageSounds","onTogglePushNotifications","onToggleIncognitoMode","messageSounds","desktopAlertsEnabled","desktopAlerts","incognitoMode","delete_account","delete_account_warning","AccSecurityView","blockedCount","showPermissionEditorFor","handlePasswordUpdate","handleHidePermissionsEditor","handleDeleteAccount","pwd","onUpdatePassword","onUpdateAccountDesc","onDeleteAccount","password_unchanged","onLogout","onShowBlocked","AccSupportView","LoginView","hostName","persist","onPersistenceChange","onLogin","autoCorrect","autoCapitalize","invalid_id","NewTopicById","groupId","prefix","NewTopicGroup","handleFieldEdit","handleTagsChanged","handleChannelToggle","SearchContacts","edited","handleSearchChange","handleSearch","handleClear","onSearchContacts","search_placeholder","search_for_contacts","search_no_results","NewTopicView","tabSelected","searchQuery","handleTabClick","handleSearchContacts","handleNewGroupSubmit","handleGroupByID","addUrlParam","removeUrlParam","onCreateTopic","dataUrl","priv","no_contacts_placeholder","searchResults","PasswordResetView","sent","token","scheme","onReset","onRequest","HostSelector","changed","handleHostNameChange","onServerAddressChange","hostOptions","list","SettingsView","transport","handleTransportSelected","handleServerAddressChange","onUpdate","def","ws","lp","transportOptions","phone","ValidationView","credCode","credMethod","numbers_only","register","settings","edit","notif","support","newtpk","reset","SidepanelView","handleNewTopic","errorAction","errorActionText","loadSpinnerVisible","loginDisabled","onLoginRequest","onGlobalSettings","onUpdateAccountTags","onValidateCredentials","onPasswordResetRequest","onResetPassword","detectServerAddress","host","protocol","hostname","port","isSecureConnection","POP_SOUND","Audio","reconnect_countdown","reconnect_now","push_init_failed","invalid_security_token","no_connection","code_doesnot_match","menu_item_info","TinodeWeb","getBlankState","handleResize","handleHashRoute","handleOnline","checkForAppUpdate","handleVisibilityEvent","handleError","handleLoginRequest","handlePersistenceChange","handleConnected","handleAutoreconnectIteration","doLogin","handleCredentialsRequest","handleLoginSuccessful","handleDisconnect","tnMeMetaDesc","tnMeContactUpdate","tnMeSubsUpdated","resetContactList","tnData","tnInitFind","tnFndSubsUpdated","handleTopicSelected","handleHideMessagesView","handleNewChatInvitation","handleNewAccount","handleNewAccountRequest","handleUpdatePasswordRequest","handleUpdateAccountTagsRequest","handleToggleIncognitoMode","handleSettings","handleGlobalSettings","handleShowArchive","handleShowBlocked","handleToggleMessageSounds","handleCredAdd","handleCredDelete","handleCredConfirm","initFCMessaging","togglePushToken","requestPushToken","handlePushMessage","handleSidepanelCancel","handleStartTopicRequest","handleNewTopicCreated","handleTopicUpdateRequest","handleChangePermissions","handleTagsUpdateRequest","handleLogout","handleDeleteTopicRequest","handleDeleteMessagesRequest","handleLeaveUnsubRequest","handleBlockTopicRequest","handleReportTopic","handleShowContextMenu","defaultTopicContextMenu","handleHideContextMenu","handleShowAlert","handleShowInfoView","handleValidateCredentialsRequest","handlePasswordResetRequest","handleResetPassword","handleContextMenuAction","autoLogin","messageSoundsOff","FIREBASE_INIT","firebaseToken","hidden","sidePanelSelected","sidePanelTitle","sidePanelAvatar","myTrustedBadges","liveConnection","onLine","topicSelectedOnline","topicSelectedAcs","innerWidth","infoPanel","mobilePanel","contextMenuVisible","contextMenuBounds","contextMenuClickAt","contextMenuParams","contextMenuItems","alertVisible","alertParams","requestedTopic","BroadcastChannel","documentElement","clientWidth","clientHeight","tnSetup","onConnect","onDisconnect","onAutoreconnectIteration","setDeviceToken","parsedNav","expires","setAuthToken","connect","readTimer","readTimerCallback","persistentCache","onSetupCompleted","appName","apiKey","secure","setHumanLanguage","enableLogging","oobNotification","fbPush","usePublicVapidKey","messagingVapidKey","serviceWorker","reg","useServiceWorker","postMessage","onTokenRefresh","onMessage","payload","mobile","onupdatefound","installingWorker","installing","onstatechange","controller","getTopicAccessMode","newTopicTabSelected","tab","reconnectCountdown","reconnect","isConnected","initStorage","clearStorage","getServerInfo","ver","sec","prom","timeLeft","seconds","secondsToTime","isAuthenticated","promise","getAuthToken","loginBasic","loginToken","goToTopic","onContactUpdate","getCurrentUserID","withDesc","withCred","disconnect","urlHash","setUrlSidePanel","isPresencer","play","foundContacts","merged","updated","past","prepareSearchableContacts","receivedTimer","noteRecv","fnd","getFndTopic","withSub","s","setMeta","isTopicOnline","isP2PType","am","updateWant","login_","password_","public_","cred_","tags_","createAccountBasic","on","enabled","requestPermission","deleteToken","getToken","refreshedToken","delCredential","basicNavigator","infoNavigator","setUrlInfoPanel","newGroupTopicName","oldName","newName","updateAccountBasic","getCurrentLogin","updateGiven","delCurrentUser","publish","self_blocked","subscribed","confirmText","rejectText","invite","requestResetAuthSecret","newPassword","btoa","base64ReEncode","onAddMember","handleManageGroupMembers","hl","languages","baseLanguage","allMessages","IntlProvider","textComponent","__webpack_require__","module","getter","__esModule","d","exports","definition","o","defineProperty","enumerable","get","obj","prop","prototype","__webpack_modules__"],"mappings":"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","file":"index.prod.js","sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = React;","const __WEBPACK_NAMESPACE_OBJECT__ = ReactDOM;","const __WEBPACK_NAMESPACE_OBJECT__ = ReactIntl;","const __WEBPACK_NAMESPACE_OBJECT__ = firebase;","const __WEBPACK_NAMESPACE_OBJECT__ = Tinode;","const __WEBPACK_NAMESPACE_OBJECT__ = firebase.messaging;","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Alert extends React.PureComponent {\n  render() {\n    return this.props.visible ?\n      <div className=\"alert-container\">\n        <div className=\"alert\">\n          <div className=\"title\">{this.props.title}</div>\n          <div className=\"content\">{this.props.content}</div>\n          <div className=\"dialog-buttons\">\n            {this.props.onReject ?\n              <button className=\"outline\" onClick={this.props.onReject}>\n                {this.props.reject || <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />}\n              </button>\n              :\n              null\n            }\n            <button className=\"primary\" onClick={this.props.onConfirm}>\n              {this.props.confirm || <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\"  />}\n            </button>\n          </div>\n        </div>\n      </div>\n    :\n    null;\n  }\n};\n","// This is a generated file. Don't edit.\n\nexport const PACKAGE_VERSION = \"0.18.0-alpha1\";\n","import { PACKAGE_VERSION } from './version.js';\n\n// Name of this application, used in the User-Agent.\nexport const APP_NAME = 'TinodeWeb/' + (PACKAGE_VERSION || '0.17');\n\n// API key. Use https://github.com/tinode/chat/tree/master/keygen to generate your own\nexport const API_KEY = 'AQEAAAABAAD_rAp4DJh05a1HAwFT3A6K';\n\n// The array of possible hosts to connect to.\nexport const KNOWN_HOSTS = {hosted: 'web.tinode.co', local: 'localhost:6060'};\n\n// Default host name and port to connect to.\nexport const DEFAULT_HOST = KNOWN_HOSTS.hosted;\n\n// Enable console logging.\nexport const LOGGING_ENABLED = true;\n\n// Minimum time between two keypress notifications, milliseconds.\nexport const KEYPRESS_DELAY = 3*1000;\n// Delay before sending a {note} for reciving a message, milliseconds.\nexport const RECEIVED_DELAY = 500;\n// Delay before sending a read notification, milliseconds.\nexport const READ_DELAY = 1000;\n\n// The default shortest allowed tag length. Matches the value on the server.\nexport const MIN_TAG_LENGTH = 2;\n// The default greatest allowed tag length. Matches the value on the server.\nexport const MAX_TAG_LENGTH = 96;\n// The default maximum number of tags allowed. Matches the value on the server.\nexport const MAX_TAG_COUNT = 16;\n\n// Access mode for P2P subscriptions initiated by the current user.\nexport const DEFAULT_P2P_ACCESS_MODE = 'JRWPS';\n// Access mode for new group topics created by the current user.\nexport const NEW_GRP_ACCESS_MODE = 'JRWPSAO';\n// Access mode for a channel.\nexport const CHANNEL_ACCESS_MODE = 'JR';\n\n// Access mode for no access.\nexport const NO_ACCESS_MODE = 'N';\n\n// Mediaquery breakpoint between desktop and mobile, in px. Should match the value\n// in @media (max-size: 640px) in base.css\nexport const MEDIA_BREAKPOINT = 640;\n// Size of css 'rem' unit in pixels. Default 1rem = 10pt = 13px.\nexport const REM_SIZE = 13;\n\n// Size of the avatar image: when image dimensions are greater or the image is not square, it's resized to\n// a square of this size or less.\nexport const AVATAR_SIZE = 384;\n\n// Maximum size of an avatar in bytes for sending in-band. Bigger avatars will be sent out of band (as uploads).\nexport const MAX_AVATAR_BYTES = 4096;\n\n// Size of the broken_image shown in MessagesView\nexport const BROKEN_IMAGE_SIZE = 32;\n\n// Number of chat messages to fetch in one call.\nexport const MESSAGES_PAGE = 24;\n\n// Default maximum in-band (included directly into the message) attachment size which fits into\n// a message of 256K in size. Used when the server-provided value is unavailable. The actual\n// binary size of the attachment should be smaller due to base64 encoding expansion and some overhead,\n// for instance 1024 bytes.\n// Increase this limit to a greater value in production, if desired. Also increase\n// max_message_size in the server config.\nexport const MAX_INBAND_ATTACHMENT_SIZE = 262144;\n\n// Default absolute maximum attachment size to be used with the server = 8MB.\n// Used when the server-provided value is unavailable. Increase to something like 100MB in production.\nexport const MAX_EXTERN_ATTACHMENT_SIZE = 1 << 23;\n\n// Maximum allowed linear dimension (pixels) of an image sent inline. Larger images will be shrunk\n// to make the larger dimension fit under this size. You may want to adjust it to 1600 or\n// 2400 for production.\nexport const MAX_IMAGE_DIM = 1024;\n\n// Linear dimensions of image preview: shrink image under this size for previews.\nexport const IMAGE_PREVIEW_DIM = 64;\n\n// Linear dimensions of image thumbnail: shrink image under this size for thumbnails in reply quote previews.\nexport const IMAGE_THUMBNAIL_DIM = 25;\n\n// Maximum number of online users to be shown in a topic title bar. Others will be\n// hidden under \"+X more\"\nexport const MAX_ONLINE_IN_TOPIC = 4;\n\n// Maximum length of user name, topic title, and private comment.\nexport const MAX_TITLE_LENGTH = 60;\n// Maximum length of topic description.\nexport const MAX_TOPIC_DESCRIPTION_LENGTH = 360;\n\n// Length of message previews in chat list, in characters.\nexport const MESSAGE_PREVIEW_LENGTH = 80;\n\n// Link for \"Contact Us\".\nexport const LINK_CONTACT_US = 'email:support@tinode.co';\n\n// Link to Privacy Policy.\nexport const LINK_PRIVACY_POLICY = 'https://tinode.co/privacy.html';\n\n// Link to Terms of Service.\nexport const LINK_TERMS_OF_SERVICE = 'https://tinode.co/terms.html';\n","// Context Menu: popup/dropdown menu.\nimport React from 'react';\nimport { injectIntl, defineMessages } from 'react-intl';\n\nimport { REM_SIZE } from '../config.js';\n\nconst messages = defineMessages({\n  info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  },\n  clear_messages: {\n    id: 'menu_item_clear_messages',\n    defaultMessage: 'Clear messages',\n    description: 'Delete all messages'\n  },\n  clear_for_all: {\n    id: 'menu_item_clear_messages_for_all',\n    defaultMessage: 'Clear for All',\n    description: 'Delete all message(s) for all members'\n  },\n  delete: {\n    id: 'menu_item_delete',\n    defaultMessage: 'Delete',\n    description: 'Delete selected messages'\n  },\n  delete_for_all: {\n    id: 'menu_item_delete_for_all',\n    defaultMessage: 'Delete for All',\n    description: 'Delete selected message(s) for all members'\n  },\n  send_retry: {\n    id: 'menu_item_send_retry',\n    defaultMessage: 'Retry',\n    description: 'Retry sending message'\n  },\n  mute: {\n    id: 'menu_item_mute',\n    defaultMessage: 'Mute',\n    description: 'Turn off notifications'\n  },\n  unmute: {\n    id: 'menu_item_unmute',\n    defaultMessage: 'Unmute',\n    description: 'Turn notifications on'\n  },\n  reply: {\n    id: 'menu_item_reply',\n    defaultMessage: 'Reply',\n    description: 'Reply to message'\n  },\n  topic_delete: {\n    id: 'menu_item_delete_topic',\n    defaultMessage: 'Delete',\n    description: 'Delete entire topic'\n  },\n  topic_delete_warning: {\n    id: 'topic_delete_warning',\n    defaultMessage: 'Are you sure you want to delete this conversation? It cannot be undone.',\n    description: 'Alert warning when deleting entire topic'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  unblock: {\n    id: 'menu_item_unblock',\n    defaultMessage: 'Unblock',\n    description: 'Unblock topic or user'\n  },\n  // Generic string suitable for either topic or user.\n  block: {\n    id: 'menu_item_block',\n    defaultMessage: 'Block',\n    description: 'Block topic or user'\n  },\n  topic_block_warning: {\n    id: 'topic_block_warning',\n    defaultMessage: 'Are you sure you want to block this conversation?',\n    description: 'Alert warning when blocking a topic.'\n  },\n  member_delete: {\n    id: 'menu_item_member_delete',\n    defaultMessage: 'Remove',\n    description: 'Remove user from topic'\n  },\n  archive: {\n    id: 'menu_item_archive_topic',\n    defaultMessage: 'Archive',\n    description: 'Move topic from the list of active chats to archive'\n  },\n  unarchive: {\n    id: 'menu_item_restore_topic',\n    defaultMessage: 'Restore',\n    description: 'Restore topic from archive'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n});\n\nclass ContextMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selfRef = React.createRef();\n\n    const {formatMessage} = props.intl;\n\n    this.handlePageClick = this.handlePageClick.bind(this);\n    this.handleEscapeKey = this.handleEscapeKey.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n\n    // Preconfigured menu items.\n    this.MenuItems = {\n      'topic_info': {\n        id: 'topic_info',\n        title: formatMessage(messages.info),\n        handler: null\n      },\n      'messages_clear': {\n        id: 'messages_clear',\n        title: formatMessage(messages.clear_messages),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.clear_messages), // title\n            formatMessage(messages.clear_messages_warning), // content\n            (() => { this.deleteMessages(true, false, params, errorHandler); }), // onConfirm\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'messages_clear_hard': {\n        id: 'messages_clear_hard',\n        title: formatMessage(messages.clear_for_all),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.clear_for_all), // title\n            formatMessage(message.delete_messages_warning), // content\n            (() => { return this.deleteMessages(true, true, params, errorHandler); }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'message_delete': {\n        id: 'message_delete',\n        title: formatMessage(messages.delete),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, false, params, errorHandler);\n        }\n      },\n      'message_delete_hard': {\n        id: 'message_delete_hard',\n        title: formatMessage(messages.delete_for_all),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, true, params, errorHandler);\n        }\n      },\n      'menu_item_send_retry': {\n        id: 'menu_item_send_retry',\n        title: formatMessage(messages.send_retry),\n        handler: (params, errorHandler) => {\n          return this.retryMessage(params, errorHandler);\n        }\n      },\n      'menu_item_reply': {\n        id: 'menu_item_reply',\n        title: formatMessage(messages.reply),\n        handler: (params, errorHandler) => {\n          return this.replyToMessage(params, errorHandler);\n        }\n      },\n      'topic_unmute': {\n        id: 'topic_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'topic_mute': {\n        id: 'topic_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'topic_unblock': {\n        id: 'topic_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n      'topic_block': {\n        id: 'topic_block',\n        title: formatMessage(messages.block),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.block), // title\n            formatMessage(messages.topic_block_warning), // content\n            (() => {\n              return this.topicPermissionSetter('-JP', params, errorHandler).then((ctrl) => {\n                this.props.onTopicRemoved(params.topicName);\n                return ctrl;\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_delete': {\n        id: 'topic_delete',\n        title: formatMessage(messages.topic_delete),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.topic_delete), // title\n            formatMessage(messages.topic_delete_warning), // content\n            (() => {\n              const topic = this.props.tinode.getTopic(params.topicName);\n              if (!topic) {\n                console.log(\"Topic not found: \", params.topicName);\n                return;\n              }\n              return topic.delTopic(true).catch((err) => {\n                if (errorHandler) {\n                  errorHandler(err.message, 'err');\n                }\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_archive': {\n        id: 'topic_archive',\n        title: formatMessage(messages.archive),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic) {\n            console.log(\"Topic not found: \", params.topicName);\n            return;\n          }\n          return topic.archive(true).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      'topic_restore': {\n        id: 'topic_restore',\n        title: formatMessage(messages.unarchive),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic) {\n            console.log(\"Topic not found: \", params.topicName);\n            return;\n          }\n          return topic.archive(false).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      // menu_item_edit_permissions is defined elsewhere.\n      'permissions': {\n        id: 'permissions',\n        title: formatMessage(messages.edit_permissions),\n        handler: null\n      },\n      'member_delete': {\n        id: 'member_delete',\n        title: formatMessage(messages.member_delete),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic || !params.user) {\n            console.log(\"Topic or user not found: '\" + params.topicName + \"', '\" + params.user + \"'\");\n            return;\n          }\n          return topic.delSubscription(params.user).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      'member_mute': {\n        id: 'member_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'member_unmute': {\n        id: 'member_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'member_block': {\n        id: 'member_block',\n        title: formatMessage(messages.block),\n        handler: this.topicPermissionSetter.bind(this, '-JP')\n      },\n      'member_unblock': {\n        id: 'member_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handlePageClick, false);\n    document.addEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handlePageClick, false);\n    document.removeEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  handlePageClick(e) {\n    if (this.selfRef.current.contains(e.target)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n  }\n\n  handleEscapeKey(e) {\n    if (e.keyCode === 27) {\n      this.props.hide();\n    }\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n    let item = this.props.items[e.currentTarget.dataset.id];\n    if (typeof item == 'string') {\n      item = this.MenuItems[item];\n    }\n\n    if (!item) {\n      console.log(\"Invalid menu item ID\", e.currentTarget.dataset.id);\n    } else {\n      this.props.onAction(\n        item.id,\n        item.handler(this.props.params, this.props.onError),\n        this.props.params);\n    }\n  }\n\n  // Menu Actions\n\n  deleteMessages(all, hard, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found: \", params.topicName);\n      return;\n    }\n\n    // We don't know if the message is still pending (e.g. attachment is being uploaded),\n    // so try cancelling first. No harm if we can't cancel.\n    // The message can be cancelled if transmission to the server has not\n    // started yet or if the message send has failed.\n    if (!all && topic.cancelSend(params.seq)) {\n      return;\n    }\n    // Can't cancel. Delete instead.\n    const promise = all ?\n      topic.delMessagesAll(hard) :\n      topic.delMessagesList([params.seq], hard);\n\n    return promise.catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Retries sending failed message.\n  retryMessage(params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    // Remove the existing message entry.\n    if (!topic || !topic.flushMessage(params.seq)) {\n      return;\n    }\n    const msg = topic.createMessage(params.content, false);\n    return topic.publishDraft(msg).catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Function is used by context menu to set permissions.\n  topicPermissionSetter(mode, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found\", params.topicName);\n      return;\n    }\n\n    let result = topic.updateMode(params.user, mode);\n    if (errorHandler) {\n      result = result.catch((err) => {\n        errorHandler(err.message, 'err');\n      });\n    }\n    return result;\n  }\n\n  replyToMessage(params, errorHandler) {\n    console.log(\"Reply to message\", params);\n    params.pickReply({ seq: params.seq, content: params.content })\n  }\n\n  render() {\n    let count = 0;\n    let menu = [];\n    this.props.items.map((item) => {\n      if (typeof item == 'string') {\n        item = this.MenuItems[item];\n      }\n      if (item && item.title) {\n        menu.push(\n          item.title == '-' ?\n            <li className=\"separator\" key={count} />\n            :\n            <li onClick={this.handleClick} data-id={count} key={count}>{item.title}</li>\n        );\n      }\n      count++;\n    });\n\n    // Ensure that menu is inside the app-container.\n    const hSize = 12 * REM_SIZE;\n    const vSize = REM_SIZE * (0.7 + menu.length * 2.5);\n    const left = (this.props.bounds.right - this.props.clickAt.x < hSize) ?\n        (this.props.clickAt.x - this.props.bounds.left - hSize) :\n        (this.props.clickAt.x - this.props.bounds.left);\n    const top = (this.props.bounds.bottom - this.props.clickAt.y < vSize) ?\n        (this.props.clickAt.y - this.props.bounds.top - vSize) :\n        (this.props.clickAt.y - this.props.bounds.top);\n\n    const position = {\n      left: left + 'px',\n      top: top + 'px'\n    };\n\n    return (\n      <ul className=\"menu\" style={position} ref={this.selfRef}>\n        {menu}\n      </ul>\n    );\n  }\n}\n\nexport default injectIntl(ContextMenu);\n","// Short representation of time in the past.\nexport function shortDateFormat(then, locale) {\n  locale = locale || window.navigator.userLanguage || window.navigator.language;\n  const now = new Date();\n  if (then.getFullYear() == now.getFullYear()) {\n    // Same year.\n    if (then.getMonth() == now.getMonth() && then.getDate() == now.getDate()) {\n      // Same month and day, show time only.\n      return then.toLocaleTimeString(locale, {hour12: false, hour: '2-digit', minute: '2-digit'});\n    }\n    // Different month and/or day, show month day, time.\n    return then.toLocaleDateString(locale,\n      {hour12: false, month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit'});\n  }\n  // Different year: just show the date.\n  return then.toLocaleDateString(locale, {year: 'numeric', month: 'short', day: 'numeric'});\n}\n\n// Convert seconds to minutes:seconds, i.e. 156 sec -> 2:36.\nexport function secondsToTime(seconds) {\n  const min = Math.floor(seconds / 60);\n  let sec = seconds % 60;\n  sec = sec < 10 ? `0${sec}` : sec;\n  return `${min}:${sec}`;\n}\n\n// Convert a number of bytes to human-readable format.\nexport function bytesToHumanSize(bytes) {\n  if (!bytes || bytes == 0) {\n    return '0 Bytes';\n  }\n\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n  const bucket = Math.min(Math.floor(Math.log2(bytes) / 10) | 0, sizes.length-1);\n  const count = bytes / Math.pow(1024, bucket);\n  const round = bucket > 0 ? (count < 3 ? 2 : (count < 30 ? 1 : 0)) : 0;\n  return count.toFixed(round) + ' ' + sizes[bucket];\n}\n\n// Get 32 bit integer hash value for a string. Ideally it should produce the same value\n// as Java's String#hash().\nfunction stringToColorHash(value) {\n  let hash = 0;\n  value = '' + value;\n  for (let i = 0; i < value.length; i++) {\n    hash = ((hash << 5) - hash) + value.charCodeAt(i);\n    hash = hash & hash; // Convert to 32bit integer\n  }\n  return hash;\n}\n\n// Converts user or topic ID to a CSS color class. Ideally it should produce the same color value as Java version.\n// params:\n// - {string} id: user or topic ID\n// - {boolean} light: light or dark version of the color.\n// - {boolean} fg: foreground or background color.\nexport function idToColorClass(id, light, fg) {\n  return (light ? 'lt-' : 'dk-') + (fg ? 'fg-' : 'bg-') + (Math.abs(stringToColorHash(id)) % 16);\n}\n","// Odds and ends\n\nimport Tinode from 'tinode-sdk';\n\n// Make shortcut icon appear with a green dot + show unread count in title.\nexport function updateFavicon(count) {\n  const oldIcon = document.getElementById('shortcut-icon');\n  const head = document.head || document.getElementsByTagName('head')[0];\n  const newIcon = document.createElement('link');\n  newIcon.type = 'image/png';\n  newIcon.id = 'shortcut-icon';\n  newIcon.rel = 'shortcut icon';\n  newIcon.href = 'img/logo32x32' + (count > 0 ? 'a' : '') + '.png';\n  if (oldIcon) {\n    head.removeChild(oldIcon);\n  }\n  head.appendChild(newIcon);\n\n  document.title = (count > 0 ? '('+count+') ' : '') + 'Tinode';\n}\n\n// Create theCard which represents user's or topic's \"public\" info.\nexport function theCard(fn, imageUrl, imageMimeType, note) {\n  let card = null;\n  fn = fn && fn.trim();\n  note = note && note.trim();\n\n  if (fn) {\n    card = {\n      fn: fn\n    };\n  }\n\n  if (typeof note == 'string') {\n    card = card || {};\n    card.note = note ? note : Tinode.DEL_CHAR;\n  }\n\n  if (imageUrl) {\n    card = card || {};\n    let mimeType = imageMimeType;\n    // Is this a data URL \"data:[<mediatype>][;base64],<data>\"?\n    const matches = /^data:(image\\/[-a-z0-9+.]+)?(;base64)?,/i.exec(imageUrl);\n    if (matches) {\n      mimeType = matches[1];\n      card.photo = {\n        data: imageUrl.substring(imageUrl.indexOf(',') + 1),\n        ref: Tinode.DEL_CHAR\n      };\n    } else {\n      card.photo = {\n        data: Tinode.DEL_CHAR,\n        ref: imageUrl\n      };\n    }\n    card.photo.type = (mimeType || 'image/jpeg').substring('image/'.length);\n  }\n\n  return card;\n}\n\n// Deep-shallow compare two arrays: shallow compare each element.\nexport function arrayEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (!Array.isArray(a) || !Array.isArray(b)) {\n    return false;\n  }\n\n  // Compare lengths first.\n  if (a.length != b.length) {\n    return false;\n  }\n  // Order of elements is ignored.\n  a.sort();\n  b.sort();\n  for (let i = 0, l = a.length; i < l; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Checks (loosely) if the given string is a phone. If so, returns the phone number in a format\n// as close to E.164 as possible.\nexport function asPhone(val) {\n  val = val.trim();\n  if (/^(?:\\+?(\\d{1,3}))?[- (.]*(\\d{3})[- ).]*(\\d{3})[- .]*(\\d{2})[- .]*(\\d{2})?$/.test(val)) {\n    return val.replace(/[- ().]*/, '');\n  }\n  return null;\n}\n\n// Checks (loosely) if the given string is an email. If so returns the email.\nexport function asEmail(val) {\n  val = val.trim();\n  if (/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(val)) {\n    return val;\n  }\n  return null;\n}\n\n// Checks if URL is a relative url, i.e. has no 'scheme://', including the case of missing scheme '//'.\n// The scheme is expected to be RFC-compliant, e.g. [a-z][a-z0-9+.-]*\n// example.html - ok\n// https:example.com - not ok.\n// http:/example.com - not ok.\n// ' ↲ https://example.com' - not ok. (↲ means carriage return)\nexport function isUrlRelative(url) {\n  return url && !/^\\s*([a-z][a-z0-9+.-]*:|\\/\\/)/im.test(url);\n}\n\n// Ensure URL does not present an XSS risk. Optional allowedSchemes may contain an array of\n// strings with permitted URL schemes, such as ['ftp', 'ftps']; otherwise accept http and https only.\nexport function sanitizeUrl(url, allowedSchemes) {\n  if (typeof url != 'string') {\n    return url;\n  }\n\n  // Strip control characters and whitespace. They are not valid URL characters anyway.\n  url = url.replace(/[^\\x20-\\x7E]/gmi, '').trim();\n\n  // Relative URLs are safe.\n  // Relative URL does not start with ':', abcd123: or '//'.\n  if (!/^([a-z][a-z0-9+.-]*:|\\/\\/)/i.test(url)) {\n    return url;\n  }\n\n  // Blob URLs are safe.\n  if (/^blob:http/.test(url)) {\n    return url;\n  }\n\n  // Absolute URL. Accept only safe schemes, or no scheme.\n  const schemes = Array.isArray(allowedSchemes) ? allowedSchemes.join('|') : 'http|https';\n  const re = new RegExp('^((' + schemes + '):|//)', 'i');\n  if (!re.test(url)) {\n    return null;\n  }\n\n  return url;\n}\n\n// Ensure URL is suitable for <img src=\"url\"> field: the URL must be a relative URL or\n// have http:, https:, blob: or data: scheme.\n// In case of data: scheme, the URL must start with a 'data:image/XXXX;base64,'.\nexport function sanitizeImageUrl(url) {\n  if (!url) {\n    return null;\n  }\n\n  const sanitizedUrl = sanitizeUrl(url);\n  if (sanitizedUrl) {\n    return sanitizedUrl;\n  }\n\n  // Is this a data: URL of an image?\n  if (/data:image\\/[a-z0-9.-]+;base64,/i.test(url.trim())) {\n    return url;\n  }\n\n  return null;\n}\n\n// Given message's received status, return name and color of a delivery indicator icon.\nexport function deliveryMarker(received) {\n  switch (received) {\n    case Tinode.MESSAGE_STATUS_SENDING:\n      return { name: 'access_time' }; // watch face\n    case Tinode.MESSAGE_STATUS_FAILED:\n      return { name: 'warning', color: 'danger-color' }; // yellow icon /!\\\n    case Tinode.MESSAGE_STATUS_SENT:\n      return { name: 'done' }; // checkmark\n    case Tinode.MESSAGE_STATUS_RECEIVED:\n      return { name: 'done_all' }; // double checkmark\n    case Tinode.MESSAGE_STATUS_READ:\n      return { name: 'done_all', color: 'blue' }; // blue double checkmark\n  }\n  return null;\n}\n","import React from 'react';\n\nimport Tinode from 'tinode-sdk';\n\nimport { idToColorClass } from '../lib/strformat.js';\nimport { sanitizeImageUrl } from '../lib/utils.js';\n\nexport default class LetterTile extends React.PureComponent {\n  render() {\n    let avatar;\n    if (this.props.avatar === true) {\n      const isGroup = (Tinode.topicType(this.props.topic) == 'grp');\n      const iconColor = idToColorClass(this.props.topic, isGroup);\n      if (this.props.topic && this.props.title && this.props.title.trim()) {\n        const letter = this.props.title.trim().charAt(0);\n        const className = 'lettertile ' + iconColor;\n        avatar = (<div className={className}><div>{letter}</div></div>)\n      } else {\n        const className = 'material-icons ' + iconColor;\n        avatar = isGroup ?\n          <i className={className}>group</i> : <i className={className}>person</i>;\n      }\n    } else if (this.props.avatar) {\n      const url = this.props.tinode.authorizeURL(sanitizeImageUrl(this.props.avatar));\n      // If avatar image is invalid, show a placeholder.\n      avatar = <img className=\"avatar\" alt=\"avatar\" src={url}\n        onError={(e)=>{e.target.onerror = null; e.target.src=\"../img/broken_image.png\"}} />;\n    } else {\n      avatar = null;\n    }\n    return avatar;\n  }\n}\n","import React from 'react';\n\nexport default class LoadSpinner extends React.PureComponent {\n  render() {\n    const className = 'load-spinner-box' + (this.props.large ? ' large' : '')\n      + (this.props.clear ? ' clear' : '') + (this.props.centered ? ' centered' : '');\n    return (this.props.show ?\n      <div className={className}><div className=\"loader-spinner\"></div></div> : null);\n  }\n}\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\nimport LoadSpinner from './load-spinner.jsx';\n\nimport { sanitizeImageUrl } from '../lib/utils.js';\n\nimport { AVATAR_SIZE } from '../config.js';\n\nexport default class AvatarUpload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      source: props.avatar\n    };\n\n    this.handleFileReceived = this.handleFileReceived.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.avatar != prevProps.avatar) {\n      this.setState({source: this.props.avatar});\n    }\n  }\n\n  handleFileReceived(e) {\n    const image = e.target.files[0];\n    this.props.onImageUpdated(image.type, URL.createObjectURL(image), image.name);\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  render() {\n    // Randomize id value in case more than one AvatarUpload is shown\n    // at the same time.\n    const randId = 'file-input-avatar-' + (Math.random() + '').substr(2);\n    const className = 'avatar-upload' + (this.props.readOnly ? ' read-only' : '');\n    return (\n      <div className={className}>\n        {this.props.readOnly || !this.state.source ?\n          null :\n          <a href=\"#\" className=\"clear-avatar\" onClick={(e) => {e.preventDefault(); this.props.onImageUpdated();}}>\n            <i className=\"material-icons\">clear</i>\n          </a>}\n        {this.state.source ?\n          <img src={this.props.tinode.authorizeURL(sanitizeImageUrl(this.state.source))} className=\"preview\" /> :\n          this.props.readOnly && this.props.uid ?\n            <div className=\"avatar-box\">\n              <LetterTile\n                tinode={this.props.tinode}\n                avatar={true}\n                topic={this.props.uid}\n                title={this.props.title} />\n            </div>\n            :\n            <div className=\"blank\">{AVATAR_SIZE}&times;{AVATAR_SIZE}</div>}\n        {this.props.readOnly ? null :\n          <input type=\"file\" id={randId} className=\"inputfile hidden\"\n            accept=\"image/*\" onChange={this.handleFileReceived} />}\n        {this.props.readOnly ? null :\n        <label htmlFor={randId} className=\"round\">\n          <i className=\"material-icons\">file_upload</i>\n        </label>}\n        <LoadSpinner show={this.props.uploading} large={true} clear={true} centered={true} />\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nconst icon_mapping = {'staff': 'verified_user'};\n\nconst messages = defineMessages({\n  badge_verified: {\n    id: 'badge_verified',\n    defaultMessage: 'Verified/official',\n    description: 'Explanation of a verified account or topic badge'\n  },\n  badge_staff: {\n    id: 'badge_staff',\n    defaultMessage: 'Staff-managed',\n    description: 'Explanation of a staff-managed account or topic badge'\n  },\n  badge_danger: {\n    id: 'badge_danger',\n    defaultMessage: 'Untrustworthy',\n    description: 'Suspicious or untrustworthy account or topic badge'\n  },\n});\n\n\n/* Trusted badges with labels: verified, staff, danger */\nclass BadgeList extends React.PureComponent {\n  render() {\n    const {formatMessage} = this.props.intl;\n    let badges = null;\n    if (this.props.trustedBadges && this.props.trustedBadges.length > 0) {\n      badges = [];\n      this.props.trustedBadges.map((b) => {\n        const comment = formatMessage(messages['badge_' + b]);\n        const style = 'material-icons ' + b + '-color';\n        badges.push(<div className=\"trusted-badge\" key={b}><i className={style}>{icon_mapping[b] || b}</i> {comment}</div>);\n      });\n      return <>{badges}</>;\n    }\n    return null;\n  }\n};\n\nexport default injectIntl(BadgeList);\n","import React from 'react';\n\n/* BEGIN CheckBox: styled checkbox */\nexport default class CheckBox extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange() {\n    this.props.onChange(this.props.name, !this.props.checked);\n  }\n\n  render() {\n    return (\n      this.props.onChange ? (\n        this.props.checked ?\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box</i> :\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box_outline_blank</i>\n        ) : (\n          this.props.checked ?\n            <i className=\"material-icons\">check_box</i> :\n            <i className=\"material-icons\">check_box_outline_blank</i>\n        )\n    );\n  }\n}\n/* END CheckBox */\n","import React from 'react';\n\nconst icon_mapping = {'muted': 'notifications_off', 'banned': 'block', 'staff': 'verified_user'};\n\n/* Contact's labels: [you], or icons [muted], [blocked] */\nexport default class ContactBadges extends React.PureComponent {\n  render() {\n    let badges = null;\n    if (this.props.badges && this.props.badges.length > 0) {\n      badges = [];\n      this.props.badges.map((b) => {\n        const color = (b.color ? ' ' + b.color : '');\n        if (b.icon) {\n          badges.push(<i className={'material-icons as-badge' + color} key={b.key || b.icon}>{icon_mapping[b.icon] || b.icon}</i>);\n        } else {\n          badges.push(<span className={'badge' + color} key={b.key || b.name}>{b.name}</span>);\n        }\n      });\n      return <>{badges}</>;\n    }\n    return null;\n  }\n};\n","// Received/read indicator.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { shortDateFormat } from '../lib/strformat.js';\nimport { deliveryMarker } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  message_sending: {\n    id: 'message_sending',\n    defaultMessage: 'sending...',\n    description: 'Message being sent, in place of time stamp'\n  },\n  message_sending_failed: {\n    id: 'message_sending_failed',\n    defaultMessage: 'failed',\n    description: 'Failed to send message, in place of time stamp'\n  }\n});\n\nclass ReceivedMarker extends React.PureComponent {\n  render() {\n    const {formatMessage} = this.props.intl;\n    let timestamp;\n    if (this.props.received <= Tinode.MESSAGE_STATUS_SENDING) {\n      timestamp = formatMessage(messages.message_sending);\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_FAILED) {\n      timestamp = formatMessage(messages.message_sending_failed);\n    } else {\n      timestamp = shortDateFormat(this.props.timestamp, this.props.intl.locale);\n    }\n\n    const icon = deliveryMarker(this.props.received);\n    const marker = icon ? <i className={'material-icons small ' + icon.color}>{icon.name}</i> : null;\n\n    return (\n      <span className=\"timestamp\">\n        {timestamp}{'\\u00a0'}{marker}\n      </span>\n    );\n  }\n};\n\nexport default injectIntl(ReceivedMarker);\n","// The counter of unread messages in the topic.\nimport React from 'react';\n\nexport default class UnreadBadge extends React.PureComponent {\n  render() {\n    return (this.props.count > 0 ?\n      <span className=\"unread\">{this.props.count > 9 ? \"9+\" : this.props.count}</span>\n      : null);\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\n\nimport ContactBadges from './contact-badges.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\nimport UnreadBadge from './unread-badge.jsx';\n\nimport { Drafty } from 'tinode-sdk';\n\nimport { deliveryMarker } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  drafty_image: {\n    id: 'drafty_image',\n    defaultMessage: 'Picture',\n    description: 'Comment for embedded images in drafty preview'\n  },\n  drafty_form: {\n    id: 'drafty_form',\n    defaultMessage: 'Form: ',\n    description: 'Comment for form in drafty preview'\n  },\n  drafty_attachment: {\n    id: 'drafty_attachment',\n    defaultMessage: 'Attachment',\n    description: 'Comment for attachment in drafty preview'\n  },\n});\n\nclass Contact extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.props.onSelected) {\n      // Index this.props.index is used by GroupManager.\n      this.props.onSelected(this.props.item, this.props.index);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.props.item, y: e.pageY, x: e.pageX });\n  }\n\n  render() {\n    let title = this.props.title;\n    if (!title) {\n      title = <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n        description=\"Title shown when the topic has no name\" /></i>;\n    } else if (title.length > 30) {\n      // FIXME: this is probably wrong for RTL languages.\n      title = title.substring(0, 28) + '…';\n    }\n    const online = this.props.now ? 'online' : 'offline';\n    const avatar = this.props.avatar ? this.props.avatar : true;\n    const badges = this.props.badges ? this.props.badges.slice() : [];\n    const icon_badges = [];\n    if (this.props.isVerified) {\n      icon_badges.push({icon: 'verified', color: 'verified-color'});\n    }\n    if (this.props.isStaff) {\n      icon_badges.push({icon: 'staff', color: 'staff-color'});\n    }\n    if (this.props.isDangerous) {\n      icon_badges.push({icon: 'dangerous', color: 'danger-color'});\n    }\n    if (this.props.acs) {\n      if (this.props.showMode) {\n        badges.push({name: this.props.acs.getMode(), key: 'mode'});\n      }\n      if (this.props.acs.isMuted()) {\n        icon_badges.push({icon: 'muted'});\n      }\n      if (!this.props.acs.isJoiner()) {\n        icon_badges.push({icon: 'banned'});\n      }\n    }\n\n    const subtitle = this.props.preview ?\n      (typeof this.props.preview == 'string' ? this.props.preview :\n        React.createElement(React.Fragment, null, Drafty.format(this.props.preview, draftyFormatter, this))) :\n      this.props.comment;\n\n    const icon = deliveryMarker(this.props.received);\n    const marker = icon ? <i className={'material-icons small space-right' +\n      (icon.color ? ' ' + icon.color : '')}>{icon.name}</i> : null;\n\n    return (\n      <li className={!this.props.showCheckmark && this.props.selected ? 'selected' : null} onClick={this.handleClick}>\n        <div className=\"avatar-box\">\n          <LetterTile\n            tinode={this.props.tinode}\n            avatar={avatar}\n            title={this.props.title}\n            topic={this.props.item} />\n          {this.props.showOnline ? <span className={online} /> :\n            (this.props.showCheckmark && this.props.selected ?\n            <i className=\"checkmark material-icons\">check_circle</i>\n            : null)}\n        </div>\n        <div className=\"text-box\">\n          <div><span className=\"contact-title\">{title}</span>\n            {this.props.isChannel ? <img src=\"/img/channel.png\" className=\"channel\" alt=\"channel\" /> : null}\n            <ContactBadges badges={icon_badges} /><UnreadBadge count={this.props.unread} />\n          </div>\n          {this.props.showMode ?\n            <span><ContactBadges badges={badges} /></span> :\n            this.props.small ? null : <div className=\"contact-comment\">{marker}<span>{subtitle || '\\u00A0'}</span></div>}\n        </div>\n        {this.props.showContextMenu ?\n          <span className=\"menuTrigger\">\n            <a href=\"#\" onClick={this.handleContextClick}>\n              <i className=\"material-icons\">expand_more</i>\n            </a>\n          </span> : null}\n      </li>\n    );\n  }\n};\n\n\n// Converts Drafty object into a one-line preview.\nfunction draftyFormatter(style, data, values, key) {\n  let el = Drafty.tagName(style);\n  const attr = { key: key };\n  if (el) {\n    const { formatMessage } = this.props.intl;\n    switch (style) {\n      case 'BR':\n        // Replace new line with a space.\n        el = React.Fragment;\n        values = [' '];\n        break;\n      case 'HL':\n        // Make highlight less prominent in preview.\n        attr.className = 'highlight preview';\n        break;\n      case 'LN':\n        // Disable links in previews.\n        el = 'span';\n        break;\n      case 'IM':\n        // Replace image with '[icon] Image'.\n        el = React.Fragment;\n        values = [<i key=\"im\" className=\"material-icons\">photo</i>, formatMessage(messages.drafty_image)];\n        break;\n      case 'BN':\n        el = 'span';\n        attr.className = 'flat-button faux';\n        break;\n      case 'FM':\n        el = React.Fragment;\n        values = [<i key=\"fm\" className=\"material-icons\">dashboard</i>,\n          formatMessage(messages.drafty_form)].concat(' ', values || []);\n        break;\n      case 'RW':\n        el = React.Fragment;\n        break;\n      case 'EX':\n        if (data && data.mime == 'application/json') {\n          // Ignore JSON attachments: they are form response payloads.\n          return null;\n        }\n        el = React.Fragment;\n        values = [<i key=\"ex\" className=\"material-icons\">attachment</i>, formatMessage(messages.drafty_attachment)];\n        break;\n      default:\n        if (el == '_UNKN') {\n          el = React.Fragment;\n          values = [<i key=\"unkn\" className=\"material-icons\">extension</i>];\n        }\n        break;\n    }\n    return React.createElement(el, attr, values);\n  } else {\n    return values;\n  }\n};\n\nexport default injectIntl(Contact);\n","// A panel included into a list of contacts with an action text.\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\n\nclass ContactAction extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.onAction(this.props.action);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <li onClick={this.handleClick} className=\"action\">\n        <div className=\"action-text\">{formatMessage(this.props.title, this.props.values)}</div>\n      </li>\n    );\n  }\n};\n\nexport default injectIntl(ContactAction);\n","// File and image helper functions.\nimport { MAX_INBAND_ATTACHMENT_SIZE, MAX_IMAGE_DIM } from '../config.js';\nimport { bytesToHumanSize } from './strformat.js'\n\n// Supported image MIME types and corresponding file extensions.\nexport const SUPPORTED_IMAGE_FORMATS = ['image/jpeg', 'image/gif', 'image/png', 'image/svg', 'image/svg+xml'];\nexport const MIME_EXTENSIONS         = ['jpg',        'gif',       'png',       'svg',       'svg'];\n\n// Get an URL from a theCard photo: either create a data: URL or return reference URL.\nexport function makeImageUrl(photo) {\n  if (photo && typeof photo == 'object') {\n    if (photo.data && photo.type) {\n      const mime = photo.type.startsWith('image/') ? photo.type : ('image/' + photo.type);\n      return 'data:' + mime + ';base64,' + photo.data;\n    }\n    return photo.ref;\n  }\n  return null;\n}\n\n// Calculate linear dimensions for scaling image down to fit under a certain size.\n// Returns an object which contains destination sizes, source sizes, and offsets\n// into source (when making square images).\nexport function fitImageSize(width, height, maxWidth, maxHeight, forceSquare) {\n  // Sanitize input\n  width = width | 0;\n  height = height | 0;\n  maxWidth = maxWidth | 0;\n  maxHeight = maxHeight | 0;\n\n  if (width <= 0 || height <= 0 || maxWidth <= 0 || maxHeight <= 0) {\n    return null;\n  }\n\n  if (forceSquare) {\n    maxWidth = maxHeight = Math.min(maxWidth, maxHeight);\n  }\n\n  const scale = Math.min(\n    Math.min(width, maxWidth) / width,\n    Math.min(height, maxHeight) / height\n  );\n\n  const size = {\n    dstWidth: (width * scale) | 0,\n    dstHeight: (height * scale) | 0,\n  };\n\n  if (forceSquare) {\n    // Also calculate parameters for making the image square.\n    size.dstWidth = size.dstHeight = Math.min(size.dstWidth, size.dstHeight);\n    size.srcWidth = size.srcHeight = Math.min(width, height);\n    size.xoffset = ((width - size.srcWidth) / 2) | 0;\n    size.yoffset = ((height - size.srcWidth) / 2) | 0;\n  } else {\n    size.xoffset = size.yoffset = 0;\n    size.srcWidth = width;\n    size.srcHeight = height;\n  }\n  return size;\n}\n\n// Ensure file's extension matches mime content type\nexport function fileNameForMime(fname, mime) {\n  const idx = SUPPORTED_IMAGE_FORMATS.indexOf(mime);\n  if (idx < 0 || !fname) {\n    // Unknown mime or empty name.\n    return fname;\n  }\n  const ext = MIME_EXTENSIONS[idx];\n\n  const at = fname.lastIndexOf('.');\n  if (at >= 0) {\n    fname = fname.substring(0, at);\n  }\n  return fname + '.' + ext;\n}\n\n// Scale uploaded image to fit under certain dimensions and byte size, optionally constraining to a square.\n// On success calls onSuccess callback with the scaled image as Blob.\nexport function imageScaled(fileOrBlob, maxWidth, maxHeight, maxSize, forceSquare, onSuccess, onError) {\n  const img = new Image();\n  img.crossOrigin = 'Anonymous';\n  img.onerror = function(err) {\n    onError(\"Image format unrecognized\");\n  }\n  img.onload = async function() {\n    // Once the image is loaded, the URL is no longer needed.\n    URL.revokeObjectURL(img.src);\n\n    // Calculate the desired image dimensions.\n    const dim = fitImageSize(this.width, this.height, maxWidth, maxHeight, forceSquare);\n    if (!dim) {\n      onError(\"Invalid image\");\n      return;\n    }\n    let canvas = document.createElement('canvas');\n    canvas.width = dim.dstWidth;\n    canvas.height = dim.dstHeight;\n    let ctx = canvas.getContext('2d');\n    ctx.imageSmoothingEnabled = true;\n    ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n      0, 0, dim.dstWidth, dim.dstHeight);\n\n    const mime = SUPPORTED_IMAGE_FORMATS.includes(fileOrBlob.type) ? fileOrBlob.type : 'image/jpeg';\n    // Generate blob to check size of the image.\n    let blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    if (!blob) {\n      onError(\"Unsupported image format\");\n      return;\n    }\n\n    // Ensure the image is not too large. Shrink the image keeping the aspect ratio.\n    // Do nothing if maxsize is <= 0.\n    while (maxSize > 0 && blob.length > maxSize) {\n      dim.dstWidth = (dim.dstWidth * 0.70710678118) | 0;\n      dim.dstHeight = (dim.dstHeight * 0.70710678118) | 0;\n      canvas.width = dim.dstWidth;\n      canvas.height = dim.dstHeight;\n      ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n        0, 0, dim.dstWidth, dim.dstHeight);\n      blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    }\n\n    canvas = null;\n    onSuccess(mime, blob, dim.dstWidth, dim.dstHeight, fileNameForMime(fileOrBlob.name, mime));\n  };\n  img.src = URL.createObjectURL(fileOrBlob);\n}\n\n// Scale and crop image according to specified dimensions.\n// The coordinates are in unscaled image pixels, i.e. cut the rectangle first then scale it.\nexport function imageCrop(mime, objURL, left, top, width, height, scale, onSuccess, onError) {\n  const img = new Image();\n  img.crossOrigin = 'Anonymous';\n  img.onerror = function(err) {\n    onError(\"Image format unrecognized\");\n  }\n  img.onload = async function() {\n    // Once the image is loaded, the URL is no longer needed.\n    URL.revokeObjectURL(img.src);\n\n    let canvas = document.createElement('canvas');\n    canvas.width = width * scale;\n    canvas.height = height * scale;\n    let ctx = canvas.getContext('2d');\n    ctx.imageSmoothingEnabled = true;\n    ctx.drawImage(this, left, top, width, height, 0, 0, canvas.width, canvas.height);\n\n    mime = SUPPORTED_IMAGE_FORMATS.includes(mime) ? mime : 'image/jpeg';\n    // Generate blob to check size of the image.\n    let blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    if (!blob) {\n      onError(\"Unsupported image format\");\n      return;\n    }\n    // Allow GC.\n    canvas = null;\n    onSuccess(mime, blob, width, height);\n  };\n  img.src = objURL;\n}\n\n// Convert File to base64 string.\nexport function fileToBase64(file, onSuccess) {\n  const reader = new FileReader();\n  reader.addEventListener('load', function() {\n    onSuccess(file.type, reader.result.split(',')[1], file.name);\n  });\n  reader.readAsDataURL(file);\n}\n\n// Convert Blob to base64 string.\nexport function blobToBase64(blob, onSuccess) {\n  const reader = new FileReader();\n  reader.addEventListener('load', function() {\n    onSuccess(blob.type, reader.result.split(',')[1]);\n  });\n  reader.readAsDataURL(blob);\n}\n\n// File pasted from the clipboard. It's either an inline image or a file attachment.\n// FIXME: handle large files out of band.\nexport function filePasted(event, onImageSuccess, onAttachmentSuccess, onError) {\n  var items = (event.clipboardData || event.originalEvent.clipboardData || {}).items;\n  for (var i in items) {\n    var item = items[i];\n    if (item.kind === 'file') {\n      var file = item.getAsFile();\n      if (!file) {\n        console.error(\"Failed to get file object from pasted file item\", item.kind, item.type);\n        continue;\n      }\n      if (file.type && file.type.split('/')[0] == 'image') {\n        // Handle inline image\n        if (file.size > MAX_INBAND_ATTACHMENT_SIZE || SUPPORTED_IMAGE_FORMATS.indexOf(file.type) < 0) {\n          imageFileScaledToBase64(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, false, onImageSuccess, onError);\n        } else {\n          imageFileToBase64(file, onImageSuccess, onError);\n        }\n      } else {\n        // Handle file attachment\n        fileToBase64(file, onAttachmentSuccess, onError)\n      }\n      // Indicate that the pasted data contains a file.\n      return true;\n    }\n  }\n  // No file found.\n  return false;\n}\n\n// Get mime type from data URL header.\nexport function getMimeType(header) {\n  var mime = /^data:(image\\/[-+a-z0-9.]+);base64/.exec(header);\n  return (mime && mime.length > 1) ? mime[1] : null;\n}\n\n// Given length of a binary object in bytes, calculate the length after\n// base64 encoding.\nexport function base64EncodedLen(n) {\n  return Math.floor((n + 2) / 3) * 4;\n}\n\n// Given length of a base64-encoded object, calculate decoded size of the\n// pbject in bytes.\nexport function base64DecodedLen(n) {\n  return Math.floor(n / 4) * 3;\n}\n\n// Re-encode string to standard base64 encoding with padding.\n// The string may be base64-URL encoded without the padding.\nexport function base64ReEncode(str) {\n  if (str) {\n    str = str.replace(/-/g, '+').replace(/_/g, '/');\n    try {\n      str = btoa(atob(str));\n    } catch(err) {\n      console.error(\"Failed to base64 re-encode string.\", err);\n      str = null;\n    }\n  }\n  return str;\n}\n\n// Convert a base64 encoded string with the provided mime type into a Blob.\nexport function base64ToBlob(str, mime) {\n  if (!str) {\n    return null;\n  }\n\n  try {\n    // Make blob.\n    const bin = atob(str);\n    const length = bin.length;\n    const buf = new ArrayBuffer(length);\n    const arr = new Uint8Array(buf);\n    for (let i = 0; i < length; i++) {\n      arr[i] = bin.charCodeAt(i);\n    }\n\n    return new Blob([buf], { type: mime });\n  } catch(err) {\n    console.log(\"Failed to convert base64 to blob: \", err);\n  }\n\n  return null;\n}\n","// ContactList: component for showing a list of contacts,\n// such as a list of group members in a group chat.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { Drafty } from 'tinode-sdk';\nimport Tinode from 'tinode-sdk';\n\nimport Contact from './contact.jsx';\nimport ContactAction from './contact-action.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nimport { MESSAGE_PREVIEW_LENGTH } from '../config.js';\n\nconst messages = defineMessages({\n  badge_you: {\n    id: 'badge_you',\n    defaultMessage: 'you',\n    description: 'Badge for indicating the current user'\n  },\n  badge_owner: {\n    id: 'badge_owner',\n    defaultMessage: 'owner',\n    description: 'Badge for indicating the owner'\n  }\n});\n\nclass ContactList extends React.Component {\n  render() {\n    const { formatMessage } = this.props.intl;\n    const showCheckmark = Array.isArray(this.props.topicSelected);\n    const contactNodes = [];\n    let contactsCount = 0;\n    if (this.props.contacts && this.props.contacts.length > 0) {\n      this.props.contacts.map((c) => {\n        if (c.action) {\n          // Action item\n          contactNodes.push(\n            <ContactAction\n              title={c.title} action={c.action} values={c.values}\n              key={c.action}\n              onAction={this.props.onAction}\n              />);\n        } else {\n          // Normal contact\n          const key = this.props.showMode ? c.user : (c.topic || c.user);\n          // If filter function is provided, filter out the items\n          // which don't satisfy the condition.\n          if (this.props.filterFunc && this.props.filter) {\n            const filterOn = [key];\n            if (c.private && c.private.comment) {\n              filterOn.push(('' + c.private.comment).toLowerCase());\n            }\n            if (c.public && c.public.fn) {\n              filterOn.push(('' + c.public.fn).toLowerCase());\n            }\n            if (!this.props.filterFunc(this.props.filter, filterOn)) {\n              return;\n            }\n          }\n\n          const isChannel = Tinode.isChannelTopicName(key);\n          const selected = showCheckmark ?\n            (this.props.topicSelected.indexOf(key) > -1) :\n            (this.props.topicSelected === key);\n          const badges = [];\n          if (this.props.showMode) {\n            if (key == this.props.myUserId) {\n              badges.push({name: formatMessage(messages.badge_you), color: 'green'});\n            }\n            if (c.acs && c.acs.isOwner()) {\n              badges.push({name: formatMessage(messages.badge_owner), color: 'blue'});\n            }\n          }\n\n          const comment = Array.isArray(c.private) ?\n            c.private.join(',') : (c.private ? c.private.comment : null);\n          let preview;\n          let deliveryStatus;\n          if (!this.props.showMode && c.latestMessage) {\n            const msg = c.latestMessage(true);\n            if (msg) {\n              deliveryStatus = msg._status || c.msgStatus(msg, true);\n              preview = typeof msg.content == 'string' ?\n                msg.content.substr(0, MESSAGE_PREVIEW_LENGTH) :\n                Drafty.preview(msg.content, MESSAGE_PREVIEW_LENGTH);\n            }\n          }\n          contactNodes.push(\n            <Contact\n              tinode={this.props.tinode}\n              title={c.public ? c.public.fn : null}\n              avatar={makeImageUrl(c.public ? c.public.photo : null)}\n              comment={comment}\n              preview={preview}\n              received={deliveryStatus}\n              unread={this.props.showUnread ? c.unread : 0}\n              now={c.online && this.props.connected}\n              acs={c.acs}\n              showMode={this.props.showMode}\n              badges={badges}\n              showCheckmark={showCheckmark}\n              selected={selected}\n              showOnline={this.props.showOnline && !isChannel}\n              isChannel={isChannel}\n              onSelected={this.props.onTopicSelected}\n              showContextMenu={this.props.showContextMenu}\n              isVerified={c.trusted && c.trusted.verified}\n              isStaff={c.trusted && c.trusted.staff}\n              isDangerous={c.trusted && c.trusted.danger}\n              item={key}\n              index={contactNodes.length}\n              key={key} />\n          );\n          contactsCount ++;\n        }\n      }, this);\n    }\n\n    return (\n      <div className={this.props.noScroll ? null : \"scrollable-panel\"}>\n        {contactsCount == 0 ?\n          <div className=\"center-medium-text\"\n            dangerouslySetInnerHTML={{__html: this.props.emptyListMessage}} />\n          :\n          null\n        }\n        {contactNodes.length > 0 ?\n          <ul className=\"contact-box\">\n            {contactNodes}\n          </ul>\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ContactList);\n","// The X menu to be displayed in title bars.\nimport React from 'react';\n\nexport default class MenuCancel extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n        <i className=\"material-icons\">close</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nimport MenuCancel from './menu-cancel.jsx';\n\nexport default class ErrorPanel extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      show: false,\n    };\n\n    this.hide = this.hide.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.level !== this.props.level) {\n      this.setState({\n        show: !(!this.props.level)\n      });\n    }\n  }\n\n  hide() {\n    this.setState({show: false});\n    if (this.props.onClearError) {\n      this.props.onClearError();\n    }\n  }\n\n  render() {\n    const icons = {err: 'error', warn: 'warning', info: 'info'}\n    const level = icons[this.props.level] || '';\n    const className = 'info-box ' + level;\n    return (\n      <div className={className}>\n        <div className=\"icon\"><i className=\"material-icons\">{level}</i></div>\n        <span>\n          {this.props.text}\n          {this.props.action ?\n            <>\n              &#32;<a href=\"#\"\n                style={{ whiteSpace: 'nowrap' }}\n                onClick={(e) => {e.preventDefault(); this.props.action();}}>\n                {this.props.actionText}\n              </a>\n            </>\n          : null}\n        </span>\n        <div className=\"cancel\"><MenuCancel onCancel={this.hide} /></div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\n\nexport default class Chip extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel(this.props.topic, this.props.index);\n  }\n\n  render() {\n    const title = this.props.title || this.props.topic;\n    const className = this.props.invalid ? 'chip invalid' : 'chip';\n    return (\n      <div className={className}>\n        {this.props.noAvatar ?\n          <span className=\"spacer\" /> :\n          <div className=\"avatar-box\">\n            <LetterTile\n              tinode={this.props.tinode}\n              avatar={this.props.avatar || true}\n              topic={this.props.topic}\n              title={this.props.title} />\n          </div>\n        }\n        <span>{title}</span>\n        {this.props.onCancel && !this.props.required ?\n          <a href=\"#\" onClick={this.handleCancel} >&times;</a>\n          : <span className=\"spacer\" />}\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport Chip from './chip.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n/* BEGIN ChipInput: group membership widget */\nexport default class ChipInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = ChipInput.deriveStateFromProps(props);\n    this.state.input = '';\n    this.state.focused = false;\n\n    this.handleTextInput = this.handleTextInput.bind(this);\n    this.removeChipAt = this.removeChipAt.bind(this);\n    this.handleChipCancel = this.handleChipCancel.bind(this);\n    this.handleFocusGained = this.handleFocusGained.bind(this);\n    this.handleFocusLost = this.handleFocusLost.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  static deriveStateFromProps(props) {\n    return {\n      placeholder: props.chips ? '' : props.prompt,\n      sortedChips: ChipInput.sortChips(props.chips, props.staticMembers),\n      chipIndex: ChipInput.indexChips(props.chips)\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chips != this.props.chips ||\n      prevProps.staticMembers != this.props.staticMembers ||\n      prevProps.prompt != this.props.prompt) {\n      this.setState(ChipInput.deriveStateFromProps(this.props));\n    }\n    if (!prevState || this.props.chips.length > prevState.sortedChips.length) {\n      this.setState({input: ''});\n    }\n  }\n\n  // Map chip index to user name\n  static indexChips(chips) {\n    const index = {};\n    let count = 0;\n    chips.map((item) => {\n      index[item.user] = count;\n      count ++;\n    });\n    return index;\n  }\n\n  // Have non-removable chips appear before all other chips.\n  static sortChips(chips, keep) {\n    const required = [];\n    const normal = [];\n    chips.map((item) => {\n      if (keep && keep.includes(item.user)) {\n        required.push(item);\n      } else {\n        normal.push(item);\n      }\n    });\n    return required.concat(normal);\n  }\n\n  handleTextInput(e) {\n    this.setState({input: e.target.value});\n    if (this.props.filterFunc) {\n      this.props.filterFunc(e.target.value);\n    }\n  }\n\n  removeChipAt(idx) {\n    const removed = this.state.sortedChips[idx];\n    this.props.onChipRemoved(removed.user, this.state.chipIndex[removed.user]);\n  }\n\n  handleChipCancel(item, idx) {\n    this.removeChipAt(idx);\n  }\n\n  handleFocusGained() {\n    this.setState({focused: true});\n  }\n\n  handleFocusLost() {\n    this.setState({focused: false});\n    if (this.props.onFocusLost) {\n      this.props.onFocusLost(this.state.input);\n    }\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Backspace') {\n      if (this.state.input.length == 0 && this.state.sortedChips.length > 0) {\n        const at = this.state.sortedChips.length - 1;\n        if (this.state.sortedChips[at].user !== this.props.staticMembers) {\n          this.removeChipAt(at);\n        }\n      }\n    } else if (e.key === 'Enter') {\n      if (this.props.onEnter) {\n        this.props.onEnter(this.state.input);\n      }\n    } else if (e.key === 'Escape') {\n      if (this.props.onCancel) {\n        this.props.onCancel();\n      }\n    }\n  }\n\n  render() {\n    const chips = [];\n    let count = 0;\n    const staticMembers = this.props.staticMembers || [];\n    this.state.sortedChips.map((item) => {\n      chips.push(\n        <Chip\n          tinode={this.props.tinode}\n          onCancel={this.handleChipCancel}\n          avatar={makeImageUrl(item.public ? item.public.photo : null)}\n          title={item.public ? item.public.fn : undefined}\n          noAvatar={this.props.avatarDisabled}\n          topic={item.user}\n          required={staticMembers.includes(item.user)}\n          invalid={item.invalid}\n          index={count}\n          key={item.user} />\n      );\n      count++;\n    });\n    const className = \"chip-input\" + (this.state.focused ? ' focused' : '');\n    const autoFocus = !(this.props.tabIndex > 0);\n    return (\n      <div className={className}>\n        {chips}\n        <input type=\"text\"\n          placeholder={this.state.placeholder}\n          onChange={this.handleTextInput}\n          onFocus={this.handleFocusGained}\n          onBlur={this.handleFocusLost}\n          onKeyDown={this.handleKeyDown}\n          value={this.state.input}\n          tabIndex={this.props.tabIndex}\n          autoFocus={autoFocus} />\n      </div>\n    );\n  }\n};\n","// GroupMembers: control for managing a list of group members.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\nimport ContactList from './contact-list.jsx';\n\nconst messages = defineMessages({\n  no_contacts: {\n    id: 'no_contacts',\n    defaultMessage: 'You have no contacts :-(',\n    description: 'Shown in ContactsView when the user has no contacts'\n  },\n  contacts_not_found_short: {\n    id: 'contacts_not_found_short',\n    defaultMessage: \"No contacts match ''{query}''\",\n    description: 'Shown in ContactsView when search returned no results'\n  }\n});\n\nclass GroupManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Array of topic members\n      members: props.members,\n      index: GroupManager.indexMembers(props.members),\n      staticMembers: GroupManager.staticMembers(props.members, props.keepInitialMembers, props.requiredMember),\n      contactFilter: '',\n      noContactsMessage: props.intl.formatMessage(messages.no_contacts),\n      selectedContacts: GroupManager.selectedContacts(props.members)\n    };\n\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleMemberRemoved = this.handleMemberRemoved.bind(this);\n    this.handleContactFilter = this.handleContactFilter.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static indexMembers(members) {\n    let index = {};\n    members.map((m) => {\n      index[m.user] = {delta: 0, present: true}; // Delta: 0 unchanged, +1 added, -1 removed\n    });\n    return index;\n  }\n\n  static staticMembers(members, keepInitial, requiredMember) {\n    let stat = [];\n    members.map((m) => {\n      if (keepInitial || m.user == requiredMember) {\n        stat.push(m.user);\n      }\n    });\n    return stat;\n  }\n\n  static selectedContacts(members) {\n    let sel = [];\n    members.map((m) => {\n      sel.push(m.user);\n    });\n    return sel;\n  }\n\n  handleContactSelected(userId, index) {\n    let status = this.state.index[userId];\n    if (status) {\n      if (status.present) {\n        // Prevent duplicate members\n        return;\n      }\n      status.delta += 1;\n      status.present = true;\n    } else {\n      status = {delta: 1, present: true};\n    }\n\n    let m = this.state.members.slice();\n    m.push(this.props.contacts[index]);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleMemberRemoved(userId, index) {\n    const status = this.state.index[userId];\n    if (!status || !status.present) {\n      return;\n    }\n    status.present = false;\n    status.delta -= 1;\n\n    let m = this.state.members.slice();\n    m.splice(index, 1);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleContactFilter(val) {\n    const {formatMessage} = this.props.intl;\n    const msg = !val ?\n      formatMessage(messages.no_contacts) :\n      formatMessage(messages.contacts_not_found_short, {query: val});\n\n    this.setState({contactFilter: val, noContactsMessage: msg});\n  }\n\n  static doContactFiltering(filter, values) {\n    if (filter) {\n      for (let i=0; i<values.length; i++) {\n        if (values[i].indexOf(filter) >= 0) {\n          return true;\n        }\n      }\n      return false;\n    }\n    return true;\n  }\n\n  handleSubmit() {\n    var instance = this;\n    var members = [];\n    var added = [];\n    var removed = [];\n\n    var keys = Object.keys(this.state.index);\n    keys.map(function(k) {\n      if (instance.state.index[k].present) {\n        members.push(k);\n      }\n\n      if (instance.state.index[k].delta > 0) {\n        added.push(k);\n      } else if (instance.state.index[k].delta < 0) {\n        removed.push(k);\n      }\n    });\n    this.props.onSubmit(members, added, removed);\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <div id=\"group-manager\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_group_members\" defaultMessage=\"Group Members\" description=\"Section title\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ChipInput\n            tinode={this.props.tinode}\n            chips={this.state.members}\n            staticMembers={this.state.staticMembers}\n            prompt=\"add members\"\n            filterFunc={this.handleContactFilter}\n            onChipRemoved={this.handleMemberRemoved} />\n        </div>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_all_contacts\" defaultMessage=\"All Contacts\"\n              description=\"Section title [All Contacts]\" />\n          </label>\n        </div>\n        <ContactList\n          tinode={this.props.tinode}\n          contacts={this.props.contacts}\n          myUserId={this.props.myUserId}\n          topicSelected={this.state.selectedContacts}\n          filter={this.state.contactFilter}\n          filterFunc={GroupManager.doContactFiltering}\n          emptyListMessage={this.state.noContactsMessage}\n          showOnline={false}\n          showUnread={false}\n          onTopicSelected={this.handleContactSelected} />\n        <div id=\"group-manager-buttons\" className=\"panel-form-row\">\n          <button className=\"secondary\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(GroupManager);\n","// PermissionsEditor: Component for editing permissions\n// <PermissionsEditor mode=\"JWROD\" skip=\"O\" onChange={this.handleCheckboxTest} />\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport CheckBox from './checkbox.jsx';\nimport Contact from './contact.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n// Translatable permission names.\nconst messages = defineMessages({\n  joiner: {\n    id: 'permission_join',\n    defaultMessage: \"Join ({val})\",\n    description: 'Name of J permission'\n  },\n  reader: {\n    id: 'permission_read',\n    defaultMessage: \"Read ({val})\",\n    description: 'Name of R permission'\n  },\n  writer: {\n    id: 'permission_write',\n    defaultMessage: \"Write ({val})\",\n    description: 'Name of W permission'\n  },\n  preser: {\n    id: 'permission_pres',\n    defaultMessage: \"Get notified ({val})\",\n    description: 'Name of P permission'\n  },\n  approver: {\n    id: 'permission_admin',\n    defaultMessage: \"Approve ({val})\",\n    description: 'Name of A permission'\n  },\n  sharer: {\n    id: 'permission_share',\n    defaultMessage: \"Share ({val})\",\n    description: 'Name of S permission'\n  },\n  deleter: {\n    id: 'permission_delete',\n    defaultMessage: \"Delete ({val})\",\n    description: 'Name of D permission'\n  },\n  owner: {\n    id: 'permission_owner',\n    defaultMessage: \"Owner ({val})\",\n    description: 'Name of O permission'\n  }\n});\n\nclass PermissionsEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mode: (props.mode || '').replace('N', '')\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(val) {\n    let mode = this.state.mode;\n    const idx = mode.indexOf(val);\n    if (idx == -1) {\n      mode += val;\n    } else {\n      mode = mode.replace(val, '');\n    }\n    this.setState({mode: mode});\n  }\n\n  handleSubmit() {\n    // Normalize string, otherwise cannot check if mode has changed.\n    const mode = (this.state.mode || 'N').split('').sort().join('');\n    const before = (this.props.mode || 'N').split('').sort().join('')\n    if (mode !== before) {\n      this.props.onSubmit(mode);\n    } else {\n      this.props.onCancel();\n    }\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const all = 'JRWPASDO';\n    const names = {\n      'J': formatMessage(messages.joiner, {val: 'J'}),\n      'R': formatMessage(messages.reader, {val: 'R'}),\n      'W': formatMessage(messages.writer, {val: 'W'}),\n      'P': formatMessage(messages.preser, {val: 'P'}),\n      'A': formatMessage(messages.approver, {val: 'A'}),\n      'S': formatMessage(messages.sharer, {val: 'S'}),\n      'D': formatMessage(messages.deleter, {val: 'D'}),\n      'O': formatMessage(messages.owner, {val: 'O'})\n    };\n\n    let skip = this.props.skip || '';\n    let mode = this.state.mode;\n    let compare = (this.props.compare || '').replace('N', '');\n    let items = [];\n    for (let i=0; i<all.length; i++) {\n      let c = all.charAt(i);\n      if (skip.indexOf(c) >= 0 && mode.indexOf(c) < 0) {\n        // Permission is marked as inactive: hide unchecked permissions, disable checked permissions\n        continue;\n      }\n      items.push(\n        <tr key={c}>\n          <td>{names[c]}</td>\n          <td className=\"checkbox\">{skip.indexOf(c) < 0 ?\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} onChange={this.handleChange}/>\n            :\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} />\n          }</td>{this.props.compare ? <td className=\"checkbox\">\n            <CheckBox name={c} checked={(compare.indexOf(c) >= 0)}/>\n          </td> : null}\n        </tr>\n      );\n    }\n\n    return (\n      <div className=\"panel-form-column\">\n        {this.props.userTitle ?\n          <ul className=\"contact-box small\"><Contact\n            tinode={this.props.tinode}\n            item={this.props.item}\n            title={this.props.userTitle}\n            small={true}\n            avatar={makeImageUrl(this.props.userAvatar ? this.props.userAvatar : null)} /></ul> : null}\n        <label className=\"small\"><FormattedMessage id=\"title_permissions\"\n          defaultMessage=\"Permissions\" description=\"Section title\"/></label>\n        <table className=\"permission-editor\">\n        {this.props.compare ?\n          <thead><tr>\n            <th></th><th>{this.props.modeTitle}</th>\n            <th>{this.props.compareTitle}</th>\n          </tr></thead> :\n          null}\n        <tbody>\n          {items}\n        </tbody></table>\n        <br />\n        <div className=\"dialog-buttons\">\n          <button className=\"outline\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(PermissionsEditor);\n","// Image zoom and crop widget.\n\nimport React from 'react';\n\nconst DEFAULT_MAX_ZOOM = 2.5;\n\nexport default class Cropper extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Coordinates of the top left corner of the image in container coordinates.\n      panX: 0,\n      panY: 0,\n      // Origin of the zoom in image coordinates.\n      originX: 0,\n      originY: 0,\n      // Zoom scale.\n      zoom: 1,\n      // Zoom min and max.\n      minZoom: 0,\n      maxZoom: DEFAULT_MAX_ZOOM,\n    };\n\n    // References to DOM elements for hooking up events and getting screen dimensions.\n    // The transparent element which captures mouse moves (moves with the image).\n    this.overlay = React.createRef();\n    // The image cutout window or view port (static).\n    this.cutout = React.createRef();\n    // Scaled and translated image preview.\n    this.preview = React.createRef();\n    // The main container (static).\n    this.boundingBox = React.createRef();\n\n    // The original image width and height before any scaling.\n    this.imageWidth = 0;\n    this.imageHeight = 0;\n\n    // Mouse position when dragging.\n    this.mouseX = 0\n    this.mouseY = 0;\n    // Length of the previous mouse move when dragging.\n    this.prevDistance = 0;\n\n    // Bounding rectangles of static elements.\n    this.cutoutRect = {};\n    this.bBoxRect = {};\n    // Center of the bounding box.\n    this.originX = 0;\n    this.originY = 0;\n\n    this.initScaling = this.initScaling.bind(this);\n    this.onZoom = this.onZoom.bind(this);\n    this.handleZoom = this.handleZoom.bind(this);\n    this.mouseDown = this.mouseDown.bind(this);\n    this.mouseUp = this.mouseUp.bind(this);\n    this.mouseMove = this.mouseMove.bind(this);\n    this.mouseTouch = this.mouseTouch.bind(this);\n    this.positionAll = this.positionAll.bind(this);\n    this.translate = this.translate.bind(this);\n  }\n\n  componentDidMount() {\n    this.overlay.current.addEventListener('mousedown', this.mouseDown, { passive: true });\n    this.overlay.current.addEventListener('touchstart', this.mouseDown, { passive: true });\n\n    // The rectangle position is in viewport coordinates.\n    this.bBoxRect = this.boundingBox.current.getBoundingClientRect();\n    // Center of the bounding box in container coordinates.\n    this.originX = this.bBoxRect.width / 2;\n    this.originY = this.bBoxRect.height / 2;\n\n    // The rectangle position is in viewport coordinates.\n    this.cutoutRect = this.cutout.current.getBoundingClientRect();\n  }\n\n  componentWillUnmount() {\n    this.overlay.current.removeEventListener('mousedown', this.mouseDown);\n    this.overlay.current.removeEventListener('touchstart', this.mouseDown);\n  }\n\n  // Position all elements.\n  positionAll(panX, panY, zoom) {\n    // Zoom origin in image preview coordinates.\n    this.setState({\n      panX: panX,\n      panY: panY,\n      zoom: zoom,\n      originX: this.originX - panX,\n      originY: this.originY - panY,\n    });\n\n    // Pass cut out coordinates to caller.\n    const left = (this.originX - panX) * zoom - this.originX;\n    const top = (this.originY - panY) * zoom - this.originY;\n    this.props.onChange(\n      (left + this.cutoutRect.left - this.bBoxRect.left) / zoom,\n      (top + this.cutoutRect.top - this.bBoxRect.top) / zoom,\n      this.cutoutRect.width / zoom,\n      this.cutoutRect.height / zoom,\n      zoom);\n  }\n\n  // Check if new location is within the limits.\n  static checkBound(currPan, img, cutout, delta) {\n    let nextDiff = Math.min(0, cutout[0] - img[0] - delta, img[1] - cutout[1] + delta);\n    if (nextDiff == 0) {\n      // Cutout is completely within the image.\n      currPan += delta;\n    } else if (Math.min(0, cutout[0] - img[0], img[1] - cutout[1]) < nextDiff) {\n      // Cutout is outside of the range but closer to the bound.\n      currPan += delta;\n    }\n    return currPan;\n  }\n\n  initScaling() {\n    // Initialize components.\n    const imgRect = this.preview.current.getBoundingClientRect();\n\n    this.imageWidth = imgRect.width;\n    this.imageHeight = imgRect.height;\n\n    // Set zoom slider's min and max values. Make sure the scaled image cannot be smaller than the cutout.\n    const minZoom = Math.max(this.cutoutRect.width / imgRect.width, this.cutoutRect.height / imgRect.height);\n    this.setState({\n      minZoom: minZoom,\n      maxZoom: Math.max(DEFAULT_MAX_ZOOM, minZoom + 1)\n    });\n\n    // Initial zoom level fills the bounding box at the smallest image dimension and overflows the largest, i.e. \"fill\" not \"fit\".\n    const zoom = Math.max(this.bBoxRect.width / imgRect.width, this.bBoxRect.height / imgRect.height);\n    // Converting from viewport coordinates to container, then panning.\n    const panX = this.cutoutRect.left - this.bBoxRect.left -\n      (imgRect.width - this.cutoutRect.width) / 2;\n    const panY = this.cutoutRect.top - this.bBoxRect.top -\n      (imgRect.height - this.cutoutRect.height) / 2;\n\n    this.positionAll(panX, panY, zoom);\n  }\n\n  onZoom(e) {\n    this.handleZoom(e.target.value);\n  }\n\n  handleZoom(zoom) {\n    let panX = this.state.panX;\n    let panY = this.state.panY;\n\n    // Ensure that the image at the new zoom is not outside of the cutout boundaries.\n    // Calculate image coordinates at the new zoom.\n    const imgLeft = this.originX - (this.originX - panX) * zoom;\n    const imgRight = imgLeft + this.imageWidth * zoom;\n    // Cutout in the same coordinates as the image.\n    const coLeft = this.cutoutRect.left - this.bBoxRect.left;\n    const coRight = coLeft + this.cutoutRect.width;\n    if (coLeft < imgLeft) {\n      panX -= imgLeft - coLeft;\n    } else if (coRight > imgRight) {\n      panX += coRight - imgRight;\n    }\n    const imgTop = this.originY - (this.originY - panY) * zoom;\n    const imgBottom = imgTop + this.imageHeight * zoom;\n    const coTop = this.cutoutRect.top - this.bBoxRect.top;\n    const coBottom = coTop + this.cutoutRect.height;\n    if (coTop < imgTop) {\n      panY -= imgTop - coTop;\n    } else if (coBottom > imgBottom) {\n      panY += coBottom - imgBottom;\n    }\n\n    this.positionAll(panX, panY, zoom);\n  }\n\n  mouseDown(e) {\n    if (e.touches) {\n      this.mouseX = e.touches[0].pageX;\n      this.mouseY = e.touches[0].pageY;\n    } else {\n      this.mouseX = e.pageX;\n      this.mouseY = e.pageY;\n    }\n\n    window.addEventListener('mousemove', this.mouseMove, { passive: false });\n    window.addEventListener('touchmove', this.mouseTouch, { passive: false });\n    window.addEventListener('mouseup', this.mouseUp, { passive: true });\n    window.addEventListener('touchend', this.mouseUp, { passive: true });\n    // Disable text selection in the entire document.\n    document.body.style['userSelect'] = 'none';\n  }\n\n  // Perform image panning.\n  translate(pageX, pageY) {\n    const dX = pageX - this.mouseX;\n    const dY = pageY - this.mouseY;\n\n    this.mouseX = pageX;\n    this.mouseY = pageY;\n\n    // Make sure the image is within the cutout window.\n    const imgRect = this.preview.current.getBoundingClientRect();\n\n    // Check if the new position is within the boundaries, and if not if it's closer to them.\n    let panX = Cropper.checkBound(this.state.panX, [imgRect.left, imgRect.right],\n      [this.cutoutRect.left, this.cutoutRect.right], dX);\n    let panY = Cropper.checkBound(this.state.panY, [imgRect.top, imgRect.bottom],\n      [this.cutoutRect.top, this.cutoutRect.bottom], dY);\n\n    this.positionAll(panX, panY, this.state.zoom);\n  }\n\n  // Image panning.\n  mouseMove(e) {\n    e.preventDefault();\n    this.translate(e.pageX, e.pageY);\n  }\n\n  mouseTouch(e) {\n    e.preventDefault();\n\n    if (e.touches.length == 1) {\n      this.translate(e.touches[0].pageX, e.touches[0].pageY);\n      return;\n    }\n\n    // Image zooming by pinching.\n    const [touch0, touch1] = e.touches;\n    const distance = Math.sqrt((touch0.pageX - touch1.pageX) * (touch0.pageX - touch1.pageX) +\n      (touch0.pageY - touch1.pageY) * (touch0.pageY - touch1.pageY));\n\n    if (!this.prevDistance) {\n        this.prevDistance = distance / this.state.zoom;\n    }\n\n    let scale = (distance / this.prevDistance);\n    this.handleZoom(Math.max(this.minZoom, Math.min(this.maxZoom, scale)));\n  }\n\n  mouseUp(e) {\n    window.removeEventListener('mousemove', this.mouseMove);\n    window.removeEventListener('touchmove', this.mouseTouch);\n    window.removeEventListener('mouseup', this.mouseUp);\n    window.removeEventListener('touchend', this.mouseUp);\n    // Re-enable text selection.\n    document.body.style['userSelect'] = '';\n\n    this.positionAll(this.state.panX, this.state.panY, this.state.zoom);\n  }\n\n  render() {\n    // transform3d: position and scale.\n    const t3d = `translate3d(${this.state.panX}px, ${this.state.panY}px, 0) scale(${this.state.zoom})`;\n    // transformOrigin: zoom origin.\n    const orig = `${this.state.originX}px ${this.state.originY}px`;\n\n    // Overlay position and size are exactly equal to the position and size of the transformed image\n    // except it uses different coordinates.\n    const overlay = {\n      top: `${this.originY - this.state.originY * this.state.zoom}px`,\n      left: `${this.originX - this.state.originX * this.state.zoom}px`,\n      width: `${this.imageWidth * this.state.zoom}px`,\n      height: `${this.imageHeight * this.state.zoom}px`\n    };\n    return (\n      <div className=\"cropper\">\n        <div className=\"bounding-box\" ref={this.boundingBox}>\n          <img src={this.props.source} className=\"preview\" alt=\"\"\n            style={{transform: t3d, transformOrigin: orig}} ref={this.preview} onLoad={this.initScaling} />\n          <div className=\"cutout circle\" ref={this.cutout} />\n          <div className=\"overlay\" style={overlay} ref={this.overlay} />\n        </div>\n        <div className=\"zoom-wrapper\">\n          <input type=\"range\" className=\"zoomer\"\n            step=\"0.001\" min={this.state.minZoom} max={this.state.maxZoom} value={this.state.zoom} onChange={this.onZoom} />\n        </div>\n      </div>\n    );\n  }\n}\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Cropper from './cropper.jsx';\nimport { imageCrop } from '../lib/blob-helpers.js';\n\nexport default class AvatarCrop extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      top: 0,\n      left: 0,\n      width: 0,\n      height: 0,\n      scale: 1\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  // Cut out in image coordinates and desired scale factor.\n  handleChange(left, top, width, height, scale) {\n    this.setState({\n      left: left,\n      top: top,\n      width: width,\n      height: height,\n      scale: scale\n    });\n  }\n\n  handleSubmit() {\n    imageCrop(this.props.mime, this.props.avatar,\n      this.state.left, this.state.top,\n      this.state.width, this.state.height,\n      this.state.scale,\n      (mime, blob, width, height) => {\n        this.props.onSubmit(mime, blob, width, height);\n      },\n      (err) => {\n        this.props.onError(err);\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <Cropper\n            source={this.props.avatar}\n            onChange={this.handleChange} />\n        </div>\n        <div className=\"dialog-buttons\">\n          {this.props.onCancel ?\n            <button className=\"secondary\" onClick={this.props.onCancel}>\n              <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n            </button>\n            : null}\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n","// Password with a visiblity toggle.\nimport React from 'react';\n\nexport default class VisiblePassword extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: this.props.value,\n      visible: false\n    };\n\n    this.handleVisibility = this.handleVisibility.bind(this);\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n    if (this.props.onChange) {\n      this.props.onChange(e);\n    }\n  }\n\n  handleVisibility(e) {\n    e.preventDefault();\n    this.setState({visible: !this.state.visible});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode == 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, visible: false});\n      if (this.props.onFinished) {\n        this.props.onFinished();\n      }\n    } else if (e.keyCode == 13) {\n      // Enter pressed\n      this.handleEditingFinished();\n    }\n  }\n\n  handleEditingFinished(e) {\n    if (e) {\n      let currentTarget = e.currentTarget;\n      setTimeout(() => {\n        if (!currentTarget.contains(document.activeElement)) {\n          if (this.props.onFinished) {\n            this.props.onFinished(this.state.value);\n          }\n        }\n      }, 0);\n    } else if (this.props.onFinished) {\n      this.props.onFinished(this.state.value.trim());\n    }\n  }\n\n  render() {\n    return (\n      <div tabIndex=\"-1\" className=\"group-focus\"\n        onBlur={this.handleEditingFinished}>\n        <input className=\"with-visibility\"\n          type={this.state.visible ? \"text\" : \"password\"}\n          value={this.state.value}\n          placeholder={this.props.placeholder}\n          required={this.props.required ? 'required' : ''}\n          autoFocus={this.props.autoFocus ? 'autoFocus' : ''}\n          autoComplete={this.props.autoComplete}\n          onChange={this.handeTextChange}\n          onKeyDown={this.handleKeyDown} />\n        <span onClick={this.handleVisibility}>\n          <i className=\"material-icons clickable light-gray\">\n            {this.state.visible ? 'visibility' : 'visibility_off'}\n          </i>\n        </span>\n      </div>\n    );\n  }\n}\n","// In-place text editor. Shows text with an icon which toggles it into an input field.\nimport React from 'react';\n\nimport VisiblePassword from './visible-password.jsx';\n\nexport default class InPlaceEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selfRef = React.createRef();\n\n    this.state = {\n      active: props.active,\n      initialValue: props.value || '',\n      value: props.value || ''\n    };\n\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleStartEditing = this.handleStartEditing.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n    this.handlePasswordFinished = this.handlePasswordFinished.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // If text has changed while in read mode, update text and discard changes.\n    // Ignore update if in edit mode.\n    const newValue = this.props.value || '';\n    if (prevState.initialValue != newValue && !prevState.active) {\n      this.setState({\n        initialValue: newValue,\n        value: newValue\n      });\n    }\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, active: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleEditingFinished(e);\n    }\n  }\n\n   handleStartEditing() {\n    if (!this.props.readOnly) {\n      this.setState({active: true}, () => {\n        if (this.selfRef.current) {\n          this.selfRef.current.focus();\n        }\n      });\n    }\n  }\n\n  handleEditingFinished(event) {\n    if (this.props.required && !event.target.checkValidity()) {\n      // Empty input\n      this.setState({value: this.props.value, active: false});\n      return;\n    }\n    this.setState({active: false});\n    const value = this.state.value.trim();\n    if ((value || this.props.value) && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  handlePasswordFinished(value) {\n    this.setState({active: false});\n    if (value && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  render() {\n    if (!this.state.active) {\n      let spanText = this.props.type == 'password' ? '••••••••' : this.state.value;\n      let spanClass = 'in-place-edit' + (this.props.readOnly ? ' disabled' : '');\n      if (!spanText) {\n        spanText = this.props.placeholder;\n        spanClass += ' placeholder';\n      }\n      if (!this.props.multiline || this.props.multiline == 1) {\n        spanClass += ' short';\n      }\n\n      return (<span className={spanClass} onClick={this.handleStartEditing}>\n        <span>{spanText}</span>\n      </span>);\n    }\n\n    let element;\n    const attr = {};\n    if (this.props.type == 'password') {\n      element = VisiblePassword;\n      attr.onFinished = this.handlePasswordFinished;\n    } else {\n      if (this.props.multiline > 1) {\n        element = 'textarea';\n        attr.rows = this.props.multiline;\n        attr.className = 'inplace-edit';\n      } else {\n        element = 'input';\n        attr.type = this.props.type || 'text';\n      }\n      attr.value = this.state.value;\n      attr.onChange = this.handeTextChange;\n      attr.onKeyDown = this.handleKeyDown;\n      attr.onBlur = this.handleEditingFinished;\n    }\n    attr.placeholder = this.props.placeholder;\n    attr.required = this.props.required ? 'required' : '';\n    attr.autoComplete = this.props.autoComplete;\n    attr.autoFocus = true;\n    attr.ref = this.selfRef;\n\n    return React.createElement(element, attr, null);\n  }\n};\n","// TagManager: edit topic or user tags.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\n\nimport { MAX_TAG_COUNT, MAX_TAG_LENGTH, MIN_TAG_LENGTH } from '../config.js';\nimport { arrayEqual } from '../lib/utils.js';\n\nexport default class TagManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tags: this.props.tags || [],\n      tagInput: '',\n      activated: this.props.activated\n    };\n\n    this.handleTagInput = this.handleTagInput.bind(this);\n    this.handleAddTag = this.handleAddTag.bind(this);\n    this.handleRemoveTag = this.handleRemoveTag.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const tags = nextProps.tags || [];\n    if (!arrayEqual(tags, prevState.tags) && !prevState.activated) {\n      return {tags: tags};\n    }\n    return null;\n  }\n\n  handleTagInput(text) {\n    this.setState({tagInput: text});\n    if (text.length > 0) {\n      const last = text[text.length-1];\n      if (text[0] == '\"') {\n        // This is a quoted string.\n        if (text.length > 1 && last == '\"') {\n          this.handleAddTag(text.substring(1, text.length-1));\n        }\n      } else if (last == ',' || last == ' ' || last == ';' || last == '\"') {\n        // User entered ',', ' ' or ';'\n        this.handleAddTag(text.substring(0, text.length-1).trim());\n      }\n    }\n  }\n\n  handleAddTag(tag) {\n    const maxTagCount = this.props.tinode.getServerLimit('maxTagCount', MAX_TAG_COUNT);\n\n    if (tag.length > 0 && this.state.tags.length < maxTagCount) {\n      const tags = this.state.tags.slice(0);\n      tags.push(tag);\n\n      this.setState({tags: tags, tagInput: ''});\n      if (this.props.onTagsChanged) {\n        this.props.onTagsChanged(tags);\n      }\n      return tags;\n    }\n    return this.state.tags;\n  }\n\n  handleRemoveTag(tag, index) {\n    const tags = this.state.tags.slice(0);\n    tags.splice(index, 1);\n    this.setState({tags: tags});\n    if (this.props.onTagsChanged) {\n      this.props.onTagsChanged(tags);\n    }\n  }\n\n  handleSubmit() {\n    // Add unprocessed input to tags, submit the list.\n    this.props.onSubmit(this.handleAddTag(this.state.tagInput.trim()));\n    this.setState({activated: false, tags: this.props.tags || []});\n  }\n\n  handleCancel() {\n    this.setState({activated: false, tagInput: '', tags: this.props.tags || []});\n    if (this.props.onCancel) {\n      this.props.onCancel();\n    }\n  }\n\n  render() {\n    const minTagLength = this.props.tinode.getServerLimit('minTagLength', MIN_TAG_LENGTH);\n    const maxTagLength = this.props.tinode.getServerLimit('maxTagLength', MAX_TAG_LENGTH);\n\n    let tags = [];\n    if (this.state.activated) {\n      this.state.tags.map((tag) => {\n        tags.push({user: tag, invalid: (tag.length < minTagLength || tag.length > maxTagLength)});\n      });\n    } else {\n      this.state.tags.map((tag) => {\n        tags.push(<span className=\"badge\" key={tags.length}>{tag}</span>);\n      });\n      if (tags.length == 0) {\n        tags = (\n          <i>\n            <FormattedMessage id=\"tags_not_found\" defaultMessage=\"No tags defined. Add some.\" description=\"\" />\n          </i>\n        );\n      }\n    }\n    return (\n      <div className=\"panel-form-column\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">{this.props.title}</label>\n        </div>\n        {this.state.activated ?\n        <div>\n          <FormattedMessage id=\"tags_editor_no_tags\" defaultMessage=\"Add some tags\"\n            description=\"Tag editor prompt when no tags are found.\">{\n            (add_tags_prompt) => <ChipInput\n              tinode={this.props.tinode}\n              chips={tags}\n              avatarDisabled={true}\n              prompt={add_tags_prompt}\n              tabIndex={this.props.tabIndex}\n              onEnter={this.handleAddTag}\n              onFocusLost={this.handleAddTag}\n              onCancel={this.handleCancel}\n              onChipRemoved={this.handleRemoveTag}\n              filterFunc={this.handleTagInput} />\n          }</FormattedMessage>\n          {this.props.onSubmit || this.props.onCancel ?\n            <div id=\"tag-manager-buttons\" className=\"dialog-buttons panel-form-row\">\n              <button className=\"outline\" onClick={this.handleCancel}>\n                <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n              </button>\n              <button className=\"primary\" onClick={this.handleSubmit}>\n                <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n              </button>\n            </div>\n          : null}\n        </div>\n        :\n        <div className=\"quoted\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.setState({activated: true});}}>\n            <i className=\"material-icons\">edit</i> &nbsp;<FormattedMessage id=\"title_manage_tags\" defaultMessage=\"Manage\"\n              description=\"Section title for the list of tags\" />\n          </a>\n          <>{tags}</>\n        </div>\n      }\n      </div>\n    );\n  }\n};\n","// Widget for editing topic description.\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarCrop from './avatar-crop.jsx';\nimport AvatarUpload from './avatar-upload.jsx';\nimport InPlaceEdit from './in-place-edit.jsx';\nimport TagManager from './tag-manager.jsx';\n\nimport { AVATAR_SIZE, MAX_AVATAR_BYTES, MAX_EXTERN_ATTACHMENT_SIZE,\n  MAX_INBAND_ATTACHMENT_SIZE, MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH } from '../config.js';\nimport { imageScaled, blobToBase64, makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, theCard } from '../lib/utils.js';\n\nexport default class TopicDescEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    const acs = topic.getAccessMode();\n    this.state = {\n      isMe: Tinode.isMeTopicName(this.props.topic),\n      owner: acs && acs.isOwner(),\n      fullName: topic.public ? topic.public.fn : undefined,\n      private: topic.private ? topic.private.comment : null,\n      description: topic.public ? topic.public.note : undefined,\n      avatar: makeImageUrl(topic.public ? topic.public.photo : null),\n      tags: topic.tags() || [],\n      newAvatar: null,\n      newAvatarMime: null\n    };\n\n    this.previousOnTags = null;\n\n    this.tnNewTags = this.tnNewTags.bind(this);\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\n    this.handleImageUpdated = this.handleImageUpdated.bind(this);\n    this.handleAvatarCropped = this.handleAvatarCropped.bind(this);\n    this.handlePrivateUpdate = this.handlePrivateUpdate.bind(this);\n    this.handleDescriptionUpdate = this.handleDescriptionUpdate.bind(this);\n    this.uploadAvatar = this.uploadAvatar.bind(this);\n    this.handleAvatarCropCancel = this.handleAvatarCropCancel.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n  }\n\n  componentDidMount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    this.previousOnTags = topic.onTagsUpdated;\n    topic.onTagsUpdated = this.tnNewTags;\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    topic.onTagsUpdated = this.previousOnTags;\n  }\n\n  tnNewTags(tags) {\n    this.setState({tags: tags});\n  }\n\n  handleFullNameUpdate(fn) {\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\n    if (fn && this.state.fullName !== fn) {\n      this.setState({fullName: fn});\n      this.props.onUpdateTopicDesc(this.props.topic, theCard(fn, null));\n    }\n  }\n\n  handlePrivateUpdate(comment) {\n    comment = comment.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.private !== comment) {\n      this.setState({private: comment});\n      this.props.onUpdateTopicDesc(this.props.topic, null, comment || Tinode.DEL_CHAR);\n    }\n  }\n\n  handleDescriptionUpdate(desc) {\n    desc = desc.trim().substring(0, MAX_TOPIC_DESCRIPTION_LENGTH);\n    if (desc) {\n      this.setState({description: desc});\n      this.props.onUpdateTopicDesc(this.props.topic, theCard(null, null, null, desc));\n    }\n  }\n\n  // AvatarUpload widget has changed the avatar: received a new file or deleted the avatar.\n  handleImageUpdated(mime, img) {\n    // This will show the AvatarCropView is img is not null.\n    this.setState({newAvatar: img, newAvatarMime: mime});\n    if (!img) {\n      // Deleting the avatar.\n      this.setState({avatar: null});\n      this.props.onUpdateTopicDesc(this.props.topic, theCard(null, Tinode.DEL_CHAR));\n    }\n  }\n\n  // AvatarCropView calls this method when the user has cropped the image.\n  handleAvatarCropped(mime, blob, width, height) {\n    const url = blob ? URL.createObjectURL(blob) : null;\n    this.setState({avatar: url, newAvatar: null, newAvatarMime: null});\n    if (blob) {\n      this.uploadAvatar(mime, blob, width, height);\n    }\n  }\n\n  // Utility method for converting cropped avatar blob to bytes for sending inband or\n  // for uploading it to the server out of band.\n  uploadAvatar(mime, blob, width, height) {\n    const readyToUpload = (mime, blob, width, height) => {\n      if (blob.size > MAX_AVATAR_BYTES) {\n        // Too large to send inband - uploading out of band and sending as a link.\n        const uploader = this.props.tinode.getLargeFileHelper();\n\n        this.setState({uploading: true});\n        uploader.upload(blob)\n          .then((url) => {\n            this.props.onUpdateTopicDesc(this.props.topic, theCard(null, url));\n          })\n          .catch((err) => {\n            this.props.onError(err, 'err');\n          })\n          .finally(() => {\n            this.setState({uploading: false});\n          });\n      } else {\n        this.setState({uploading: true});\n        // Convert blob to base64-encoded bits.\n        blobToBase64(blob, (unused, base64bits) => {\n          const du = makeImageUrl({data: base64bits, type: mime});\n          this.setState({source: du});\n          this.props.onUpdateTopicDesc(this.props.topic, theCard(null, du));\n          this.setState({uploading: false});\n        });\n      }\n    };\n\n    if (width > AVATAR_SIZE || height > AVATAR_SIZE || width != height) {\n      // Avatar is not square or too large even after cropping. Shrink it and make square.\n      imageScaled(blob, AVATAR_SIZE, AVATAR_SIZE, MAX_EXTERN_ATTACHMENT_SIZE, true,\n        readyToUpload,\n        (err) => {\n          this.props.onError(err, 'err');\n        });\n    } else {\n      readyToUpload(mime, blob, width, height);\n    }\n  }\n\n  handleAvatarCropCancel(img) {\n    this.setState({newAvatar: null, newAvatarMime: null});\n  }\n\n  handleTagsUpdated(tags) {\n    // Check if tags have actually changed.\n    if (arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      return;\n    }\n    this.props.onUpdateTags(tags);\n  }\n\n  render() {\n    if (this.state.newAvatar) {\n      return (\n        <AvatarCrop\n          avatar={this.state.newAvatar}\n          mime={this.state.newAvatarMime}\n          onSubmit={this.handleAvatarCropped}\n          onCancel={this.handleAvatarCropCancel}\n          onError={this.props.onError} />\n      );\n    }\n\n    const editable = this.state.isMe || this.state.owner;\n\n    return (\n      <>\n      <div className=\"panel-form-column\">\n        <center>\n          <AvatarUpload\n            tinode={this.props.tinode}\n            avatar={this.state.avatar}\n            readOnly={!editable}\n            uid={this.props.topic}\n            title={this.state.fullName}\n            onImageUpdated={this.handleImageUpdated}\n            onError={this.props.onError} />\n        </center>\n        {this.state.isMe ?\n          <div className=\"group\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n              description=\"Label for full name editing\" />\n            </label>\n            <div>\n              <FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n                description=\"Input placeholder for person's full name\">{\n              (full_name_placeholder) => <InPlaceEdit\n                placeholder={full_name_placeholder}\n                value={this.state.fullName}\n                required={true}\n                onFinished={this.handleFullNameUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n        :\n          <>\n            <div className=\"group\">\n              <div><label className=\"small\">\n                <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                  description=\"Label for editing topic name\" />\n              </label></div>\n              <div>\n                <InPlaceEdit\n                  placeholder={this.state.groupTopic ? \"Group name\" : <i>Unknown</i>}\n                  readOnly={!editable}\n                  value={this.state.fullName}\n                  required={true}\n                  onFinished={this.handleFullNameUpdate} />\n              </div>\n            </div>\n            <div className=\"group\">\n              <div>\n                <label className=\"small\">\n                  <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                    description=\"Label for editing 'private'\" />\n                </label>\n              </div>\n              <div>\n                <FormattedMessage id=\"private_editing_placeholder\"\n                  defaultMessage=\"Visible to you only\"\n                  description=\"Placeholder for editing 'private'\">{\n                  (private_placeholder) => <InPlaceEdit\n                    placeholder={private_placeholder}\n                    value={this.state.private}\n                    onFinished={this.handlePrivateUpdate} />\n                }</FormattedMessage>\n              </div>\n            </div>\n          </>\n        }\n        {editable || this.state.description ?\n          <div className=\"group\">\n            <div><label className=\"small\">\n              <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                description=\"Label for editing topic description\" />\n            </label></div>\n            <div>\n              <FormattedMessage id=\"description_editing_placeholder\"\n                defaultMessage=\"Description (optional)\"\n                description=\"Placeholder for editing topic description\">{\n                (private_placeholder) => <InPlaceEdit\n                  placeholder={private_placeholder}\n                  readOnly={!editable}\n                  value={this.state.description}\n                  multiline={2}\n                  onFinished={this.handleDescriptionUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n          : null\n        }\n      </div>\n      {editable ?\n        <>\n          <div className=\"hr\" />\n          <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (search & discovery)\"\n            description=\"Section title for TagManager\">{\n              (title_tag_manager) => <TagManager\n                tinode={this.props.tinode}\n                title={title_tag_manager}\n                activated={false}\n                tags={this.state.tags}\n                onSubmit={this.handleTagsUpdated} />\n          }</FormattedMessage>\n        </>\n        : null\n      }\n      </>\n    );\n  }\n};\n","// View for editing topic (including 'me' topic) parameters.\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport TopicDescEdit from '../widgets/topic-desc-edit.jsx';\n\nimport { arrayEqual, asEmail, asPhone } from '../lib/utils.js';\n\nexport default class TopicCommon extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    const acs = topic.getAccessMode();\n    this.state = {\n      isMe: this.props.topic == 'me',\n      owner: acs && acs.isOwner(),\n      credentials: (topic.getCredentials ? topic.getCredentials() : null) || [],\n      addCredActive: false,\n      addCredInvalid: false,\n      newCred: '',\n      tags: []\n    };\n\n    this.previousTagsUpdated = undefined;\n\n    this.onTagsUpdated = this.onTagsUpdated.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.tnCredsUpdated = this.tnCredsUpdated.bind(this);\n    this.handleCredChange = this.handleCredChange.bind(this);\n    this.handleCredKeyDown = this.handleCredKeyDown.bind(this);\n    this.handleCredEntered = this.handleCredEntered.bind(this);\n  }\n\n  // No need to separately handle component mount.\n  componentDidUpdate(props) {\n    const topic = this.props.tinode.getTopic(props.topic);\n    if (!topic) {\n      return;\n    }\n\n    topic.onCredsUpdated = this.tnCredsUpdated;\n\n    if (topic.onTagsUpdated != this.onTagsUpdated) {\n      if (topic.getType() == 'grp') {\n        this.previousTagsUpdated = topic.onTagsUpdated;\n        topic.onTagsUpdated = this.onTagsUpdated;\n      } else {\n        this.previousTagsUpdated = undefined;\n      }\n    }\n\n    if (this.state.topic != props.topic) {\n      this.setState({topic: props.topic});\n    }\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    topic.onCredsUpdated = undefined;\n    topic.onTagsUpdated = this.previousTagsUpdated;\n  }\n\n  tnCredsUpdated(creds) {\n    this.setState({credentials: creds || []});\n  }\n\n  handleCredChange(e) {\n    this.setState({newCred: e.target.value, addCredInvalid: false});\n  }\n\n  handleCredKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({newCred: '', addCredActive: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleCredEntered(e);\n    }\n  }\n\n  handleCredEntered(e) {\n    const value = this.state.newCred.trim();\n    if (!value) {\n      this.setState({addCredActive: false, addCredInvalid: false});\n      return;\n    }\n\n    let val = asPhone(value);\n    let method;\n    if (val) {\n      method = 'tel';\n    } else {\n      val = asEmail(value);\n      if (val) {\n        method = 'email';\n      }\n    }\n    if (method) {\n      this.props.onCredAdd(method, val);\n      this.setState({addCredActive: false, newCred: ''});\n    } else {\n      this.setState({addCredInvalid: true});\n    }\n  }\n\n  // Server informs that the tags have been updated.\n  onTagsUpdated(tags) {\n    this.setState({tags: tags});\n\n    if (this.previousTagsUpdated && this.previousTagsUpdated != this.onTagsUpdated) {\n      this.previousTagsUpdated(tags);\n    }\n  }\n\n  // Request server to change tags.\n  handleTagsUpdated(tags) {\n    if (!arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      this.props.onTopicTagsUpdateRequest(this.props.topic, tags);\n    }\n  }\n\n  render() {\n    const credentials = [];\n    if (this.state.isMe) {\n      this.state.credentials.map((cred) => {\n        credentials.push(\n          <div key={cred.meth + \":\" + cred.val + \":\" + cred.done}>{cred.meth}: <tt>{cred.val}</tt>\n            <span> {!cred.done ?\n              <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredConfirm(cred.meth, cred.val);}}>\n                <FormattedMessage id=\"validate_credential_action\" defaultMessage=\"confirm\"\n                  description=\"Validate credentail call to action\" />\n              </a>\n            : null} <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredDelete(cred.meth, cred.val);}}><i\n              className=\"material-icons gray\">delete_outline</i></a></span>\n          </div>\n        );\n      });\n    }\n\n    return (\n      <div className=\"scrollable-panel\">\n        <TopicDescEdit\n          tinode={this.props.tinode}\n          topic={this.props.topic}\n          onUpdateTopicDesc={this.props.onUpdateTopicDesc}\n          onUpdateTags={this.handleTagsUpdated}\n          onError={this.props.onError} />\n        {this.state.isMe ?\n          <>\n            <div className=\"hr\" />\n            <div className=\"panel-form-column\">\n              <label className=\"small\">\n                <FormattedMessage id=\"label_user_contacts\" defaultMessage=\"Contacts:\"\n                description=\"Label for user contacts\" />\n              </label>\n              <div className=\"quoted\">\n                {credentials}\n                {this.state.addCredActive ?\n                  <input type=\"text\" value={this.state.value}\n                    className={this.state.addCredInvalid ? 'invalid' : null}\n                    placeholder=\"Phone number or email\" required=\"required\" autoFocus\n                    onChange={this.handleCredChange} onKeyDown={this.handleCredKeyDown} onBlur={this.handleCredEntered} />\n                  : null}\n                <div>\n                  <a href=\"#\" onClick={(e) => {e.preventDefault(); this.setState({addCredActive: true});}}>\n                    <i className=\"material-icons\">add</i>\n                    <FormattedMessage id=\"button_add_another\" defaultMessage=\"Add another\" description=\"Call to action [+ add another]\" />\n                  </a></div>\n              </div>\n            </div>\n          </>\n        : null\n      }\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport InPlaceEdit from './in-place-edit.jsx';\n\nimport { NO_ACCESS_MODE } from '../config.js';\n\nconst messages = defineMessages({\n  clear_messages: {\n    id: 'action_clear_messages',\n    defaultMessage: 'Clear Messages',\n    description: 'Flat button [Clear Messages] (soft-delete messages)'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n  delete_messages: {\n    id: 'action_delete_messages',\n    defaultMessage: 'Clear Messages for All',\n    description: 'Flat button [Clear for All] (hard-delete all messages)'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  topic_delete: {\n    id: 'topic_delete',\n    defaultMessage: 'Delete Conversation',\n    description: 'Alert title when deleting the topic.'\n  },\n  topic_delete_warning: {\n    id: 'topic_delete_warning',\n    defaultMessage: 'Are you sure you want to delete this conversation? It cannot be undone.',\n    description: 'Alert warning when deleting entire topic'\n  },\n  leave_chat: {\n    id: 'action_leave_chat',\n    defaultMessage: 'Leave Conversation',\n    description: 'Flat button [Leave Conversation]'\n  },\n  leave_chat_warning: {\n    id: 'leave_chat_warning',\n    defaultMessage: 'Are you sure you want to leave this conversation?',\n    description: 'Alert dialog warning when unsubscribing from a chat.'\n  },\n  block_contact: {\n    id: 'action_block_contact',\n    defaultMessage: \"Block Contact\",\n    description: \"Flat button [Block Contact]\"\n  },\n  block_contact_warning: {\n    id: 'block_contact_warning',\n    defaultMessage: 'Are you sure you want to block this contact?',\n    description: 'Alert dialog warning when blocking a contact.'\n  },\n  report_chat: {\n    id: 'action_report_chat',\n    defaultMessage: 'Report Conversation',\n    description: 'Flat button [Report Group]'\n  },\n  report_chat_warning: {\n    id: 'report_chat_warning',\n    defaultMessage: 'Are you sure you want to block and report this conversation?',\n    description: 'Alert dialog warning when reporting a conversation for abuse'\n  },\n  other_user: {\n    id: 'label_other_user',\n    defaultMessage: 'Other',\n    description: 'Label for the other user when the user is unnamed'\n  },\n});\n\nclass TopicSecurity extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleDeleteTopic = this.handleDeleteTopic.bind(this);\n    this.handleDeleteMessages = this.handleDeleteMessages.bind(this);\n    this.handleLeave = this.handleLeave.bind(this);\n    this.handleBlock = this.handleBlock.bind(this);\n    this.handleReport = this.handleReport.bind(this);\n  }\n\n  handleDeleteTopic(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.topic_delete), // title\n      formatMessage(messages.topic_delete_warning), // content\n      (() => { this.props.onDeleteTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleDeleteMessages(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(this.props.deleter ? messages.delete_messages : messages.clear_messages), // title\n      formatMessage(this.props.deleter ? messages.delete_messages_warning : messages.clear_messages_warning), // content\n      (() => { this.props.onDeleteMessages(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleLeave(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.leave_chat), // title\n      formatMessage(messages.leave_chat_warning), // content\n      (() => { this.props.onLeaveTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleBlock(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.block_contact), // title\n      formatMessage(messages.block_contact_warning), // content\n      (() => { this.props.onBlockTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleReport(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.report_chat), // title\n      formatMessage(messages.report_chat_warning), // content\n      (() => { this.props.onReportTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          {!this.props.channel ?\n            <a href=\"#\" className=\"flat-button\" onClick={this.handleDeleteMessages}>\n              <i className=\"material-icons\">delete_outline</i> &nbsp;{\n                formatMessage(this.props.deleter ? messages.delete_messages : messages.clear_messages)\n              }\n            </a>\n            :\n            null\n          }\n          {this.props.owner ?\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleDeleteTopic}>\n              <i className=\"material-icons\">delete</i> &nbsp;{formatMessage(messages.topic_delete)}\n            </a>\n            :\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleLeave}>\n              <i className=\"material-icons\">exit_to_app</i> &nbsp;{formatMessage(messages.leave_chat)}\n            </a>\n          }\n          {!this.props.groupTopic ?\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleBlock}>\n              <i className=\"material-icons\">block</i> &nbsp;{formatMessage(messages.block_contact)}\n            </a>\n            :\n            null\n          }\n          {!this.props.owner ?\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleReport}>\n              <i className=\"material-icons\">report</i> &nbsp;{formatMessage(messages.report_chat)}\n            </a>\n            :\n            null\n          }\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          {this.props.groupTopic ?\n            <>\n              <div className=\"group\">\n                <label>\n                  <FormattedMessage id=\"label_your_permissions\" defaultMessage=\"Your permissions:\"\n                    description=\"Label for current user permissions\" />\n                </label> <tt className=\"clickable\"\n                  onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('want')}}>\n                  {this.props.access}\n                </tt>\n              </div>\n              <div className=\"group\">\n                <div>\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_default_access_mode\" defaultMessage=\"Default access mode:\"\n                    description=\"Label for default access mode\" />\n                  </label>\n                </div>\n                <div className=\"quoted\">\n                  <div>Auth: <tt className=\"clickable\"\n                    onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('auth')}}>{this.props.auth}</tt>\n                  </div>\n                  <div>Anon: <tt className=\"clickable\"\n                    onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('anon')}}>{this.props.anon}</tt>\n                  </div>\n                </div>\n              </div>\n            </>\n            :\n            <div className=\"group\">\n              <div>\n                <label className=\"small\">\n                  <FormattedMessage id=\"label_permissions\" defaultMessage=\"Permissions:\"\n                    description=\"Section title\" />\n                </label>\n              </div>\n              <div className=\"quoted\">\n                <div>\n                  <FormattedMessage id=\"label_you\" defaultMessage=\"You:\"\n                    description=\"Label for the current user\" /> <tt className=\"clickable\"\n                    onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('want')}}>\n                    {this.props.access}\n                  </tt>\n                </div>\n                <div>{this.props.fullName ? this.props.fullName : formatMessage(messages.other_user)}:\n                  &nbsp;<tt className=\"clickable\"\n                    onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('given')}}>\n                    {this.props.modeGiven2}\n                  </tt>\n                </div>\n              </div>\n            </div>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(TopicSecurity);\n","// InfoView: panel with topic/user info.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport BadgeList from '../widgets/badge-list.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport ContactList from '../widgets/contact-list.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupManager from '../widgets/group-manager.jsx';\nimport MenuCancel from '../widgets/menu-cancel.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\nimport TopicCommon from '../widgets/topic-common.jsx';\nimport TopicSecurity from '../widgets/topic-security.jsx';\n\nimport { MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH, NO_ACCESS_MODE } from '../config.js';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, theCard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  info: {\n    id: 'panel_title_info',\n    description: 'Title for InfoView',\n    defaultMessage: 'Info'\n  },\n  general: {\n    id: 'panel_title_general',\n    description: 'Title for TopicCommon.',\n    defaultMessage: 'General'\n  },\n  security: {\n    id: 'panel_title_security',\n    description: 'Title for TopicSecirity and AccSecurity.',\n    defaultMessage: 'Security'\n  },\n  members: {\n    id: 'panel_title_members',\n    description: 'Title for managing group members view.',\n    defaultMessage: 'Members'\n  },\n  crop: {\n    id: 'panel_title_crop',\n    description: 'Title for AvatarCropView.',\n    defaultMessage: 'Drag to Adjust'\n  },\n  perm_want: {\n    id: 'requested_permissions',\n    defaultMessage: 'Requested',\n    description: 'Title for permissions'\n  },\n  perm_given: {\n    id: 'granted_permissions',\n    defaultMessage: 'Granted',\n    description: 'Title for permissions'\n  },\n  perm_auth: {\n    id: 'permissions_authenticated',\n    defaultMessage: 'Authenticated',\n    description: 'Title for editing default authenticated permissions'\n  },\n  perm_anon: {\n    id: 'permissions_anonymous',\n    defaultMessage: 'Anonymous',\n    description: 'Title for editing default anonymous permissions'\n  },\n  perm_user: {\n    id: 'permissions_user',\n    defaultMessage: 'User\\'s Permissions',\n    description: 'Title for editing user\\'s permissions'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n});\n\nfunction _clip(str, length) {\n  return str && str.substring(0, length);\n}\n\nclass InfoView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      topic: null,\n      owner: false,\n      admin: false,\n      sharer: false,\n      deleter: false,\n      muted: false,\n      address: null,\n      groupTopic: undefined,\n      channel: undefined,\n      fullName: undefined,\n      description: undefined,\n      avatar: null,\n      private: null,\n      selectedContact: null,\n      access: null,\n      modeGiven: null,\n      modeWant: null,\n      modeGiven2: null, // P2P topic, the other user mode given\n      modeWant2: null,  // P2P topic, the other user mode want\n      auth: null,\n      anon: null,\n      contactList: [],\n      trustedBadges: [],\n      previousMetaDesc: undefined,\n      previousSubsUpdated: undefined,\n    };\n\n    this.resetSubs = this.resetSubs.bind(this);\n    this.resetDesc = this.resetDesc.bind(this);\n    this.resetTags = this.resetTags.bind(this);\n    this.onMetaDesc = this.onMetaDesc.bind(this);\n    this.onSubsUpdated = this.onSubsUpdated.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleMuted = this.handleMuted.bind(this);\n    this.handleUnarchive = this.handleUnarchive.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleShowAddMembers = this.handleShowAddMembers.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleMemberSelected = this.handleMemberSelected.bind(this);\n    this.handleContextMenu = this.handleContextMenu.bind(this);\n    this.handleBackNavigate = this.handleBackNavigate.bind(this);\n  }\n\n  // No need to separately handle component mount.\n  componentDidUpdate(props) {\n    const topic = this.props.tinode.getTopic(props.topic);\n    if (!topic) {\n      return;\n    }\n\n    if (this.onMetaDesc != topic.onMetaDesc) {\n      this.previousMetaDesc = topic.onMetaDesc;\n      topic.onMetaDesc = this.onMetaDesc;\n\n      this.previousSubsUpdated = topic.onSubsUpdated;\n      topic.onSubsUpdated = this.onSubsUpdated;\n    }\n\n    if (this.state.topic != props.topic) {\n      this.setState({topic: props.topic});\n      this.resetDesc(topic, props);\n      this.resetSubs(topic, props);\n      this.resetTags(topic);\n    }\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.setState({topic: null});\n    topic.onMetaDesc = this.previousMetaDesc;\n    topic.onSubsUpdated = this.previousSubsUpdated;\n  }\n\n  resetSubs(topic, props) {\n    const newState = {contactList: []};\n    if (topic.getType() == 'p2p') {\n      // Fetch the other party in the p2p conversation.\n      // Topic may not be ready yet, so check if user is found.\n      const user2 = topic.subscriber(props.topic);\n      if (user2) {\n        newState.modeGiven2 = user2.acs.getGiven();\n        newState.modeWant2 = user2.acs.getWant();\n      } else {\n        newState.modeGiven2 = NO_ACCESS_MODE;\n        newState.modeWant2 = NO_ACCESS_MODE;\n      }\n    } else {\n      topic.subscribers((sub) => {\n        newState.contactList.push(sub);\n      }, this);\n    }\n\n    this.setState(newState);\n  }\n\n  resetDesc(topic, props) {\n    const defacs = topic.getDefaultAccess() || {};\n    const acs = topic.getAccessMode();\n\n    const badges = [];\n    if (topic.trusted) {\n      for (const [key, val] of Object.entries(topic.trusted)) {\n        if (val) {\n          badges.push(key);\n        }\n      }\n    }\n\n    this.setState({\n      owner: acs && acs.isOwner(),\n      admin: acs && acs.isAdmin(),\n      sharer: acs && acs.isSharer(),\n      deleter: acs && acs.isDeleter(),\n      muted: acs && acs.isMuted(),\n\n      fullName: _clip(topic.public ? topic.public.fn : undefined, MAX_TITLE_LENGTH),\n      description: _clip(topic.public ? topic.public.note : undefined, MAX_TOPIC_DESCRIPTION_LENGTH),\n      avatar: makeImageUrl(topic.public ? topic.public.photo : null),\n      trustedBadges: badges,\n      private: _clip(topic.private ? topic.private.comment : null, MAX_TITLE_LENGTH),\n      archived: topic.isArchived(),\n      address: topic.name,\n      groupTopic: topic.isGroupType(),\n      channel: topic.isChannelType() || topic.chan,\n      access: acs ? acs.getMode() : undefined,\n      modeGiven: acs ? acs.getGiven() : undefined,\n      modeWant: acs ? acs.getWant() : undefined,\n      auth: defacs.auth,\n      anon: defacs.anon\n    });\n  }\n\n  resetTags(topic) {\n    if (topic.getType() != 'grp') {\n      return;\n    }\n\n    const acs = topic.getAccessMode();\n    if (acs && acs.isOwner()) {\n      // Requesting tags: owner is editing the topic.\n      topic.getMeta(topic.startMetaQuery().withTags().build());\n    }\n  }\n\n  onMetaDesc(desc) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetDesc(topic, this.props);\n\n    if (this.previousMetaDesc && this.previousMetaDesc != this.onMetaDesc) {\n      this.previousMetaDesc(desc);\n    }\n  }\n\n  onSubsUpdated(subs) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetSubs(topic, this.props);\n\n    if (this.previousSubsUpdated && this.previousSubsUpdated != this.onSubsUpdated) {\n      this.previousSubsUpdated(subs);\n    }\n  }\n\n  handleImageChanged(img) {\n    this.setState({avatar: img});\n    this.props.onTopicDescUpdate(this.props.topic, theCard(null, img || Tinode.DEL_CHAR), null);\n  }\n\n  handleMuted(ignored, checked) {\n    this.setState({muted: checked});\n    this.props.onChangePermissions(this.props.topic, checked ? '-P' : '+P');\n  }\n\n  handleUnarchive(ignored, ignored2) {\n    this.props.onTopicUnArchive(this.props.topic);\n  }\n\n  handlePermissionsChanged(which, perm) {\n    switch (which) {\n      case 'auth':\n        this.props.onTopicDescUpdateRequest(this.props.topic, null, null, {auth: perm});\n        break;\n      case 'anon':\n        this.props.onTopicDescUpdateRequest(this.props.topic, null, null, {anon: perm});\n        break;\n      case 'mode':\n      case 'want':\n        this.props.onChangePermissions(this.props.topic, perm);\n        break;\n      case 'given':\n        this.props.onChangePermissions(this.props.topic, perm, this.props.topic);\n        break;\n      case 'user':\n        this.props.onChangePermissions(this.props.topic, perm, this.state.userPermissionsEdited);\n        break;\n    }\n\n    this.handleBackNavigate();\n  }\n\n  handleLaunchPermissionsEditor(which, uid) {\n    const {formatMessage} = this.props.intl;\n    let toEdit, toCompare, toSkip, titleEdit, titleCompare, userTitle, userAvatar;\n    switch (which) {\n      case 'mode':\n        toEdit = this.state.access;\n        break;\n      case 'want':\n        toEdit = this.state.modeWant;\n        toCompare = this.state.modeGiven;\n        if (this.state.owner) {\n          // Don't allow owner to unset 'O' permission. All other permissions are OK.\n          toSkip = 'O';\n        } else {\n          // Allow accepting any of 'ASDO' permissions but don't allow asking for them.\n          toSkip = Tinode.AccessMode.encode(Tinode.AccessMode.diff('ASDO', this.state.modeGiven));\n          if (this.state.channel) {\n            // Channels are read-only.\n            toSkip += 'W';\n          }\n        }\n        titleEdit = formatMessage(messages.perm_want);\n        titleCompare = formatMessage(messages.perm_given);\n        break;\n      case 'given':\n        toEdit = this.state.modeGiven2;\n        toCompare = this.state.modeWant2;\n        toSkip = this.state.groupTopic ? (this.state.owner ? '' : 'O') : 'ASDO';\n        titleEdit = formatMessage(messages.perm_given);\n        titleCompare = formatMessage(messages.perm_want);\n        break;\n      case 'auth':\n        toEdit = this.state.auth;\n        toSkip = 'O';\n        break;\n      case 'anon':\n        toEdit = this.state.anon;\n        toSkip = 'O';\n        break;\n      case 'user': {\n        const topic = this.props.tinode.getTopic(this.props.topic);\n        if (!topic) {\n          return;\n        }\n        const user = topic.subscriber(uid);\n        if (!user || !user.acs) {\n          return;\n        }\n        toEdit = user.acs.getGiven();\n        toCompare = user.acs.getWant();\n        toSkip = this.state.owner ? '' : 'O';\n        titleEdit = formatMessage(messages.perm_given);\n        titleCompare = formatMessage(messages.perm_want);\n        if (user.public) {\n          userTitle = user.public.fn;\n          userAvatar = user.public.photo;\n        }\n        break;\n      }\n      default:\n        console.error(\"Unknown permission editing mode '\" + which + \"'\");\n        return;\n    }\n    this.setState({\n      userPermissionsEdited: uid,\n      userPermissionsTitle: userTitle,\n      userPermissionsAvatar: userAvatar,\n      editedPermissions: toEdit,\n      immutablePermissions: toCompare,\n      editedPermissionsTitle: titleEdit,\n      immutablePermissionsTitle: titleCompare,\n      editedPermissionsSkipped: toSkip,\n    });\n    this.props.onNavigate(`perm/${which}`);\n  }\n\n  handleShowAddMembers(e) {\n    e.preventDefault();\n    this.props.onInitFind();\n    this.props.onNavigate('members');\n  }\n\n  handleMemberUpdateRequest(members, added, removed) {\n    this.props.onMemberUpdateRequest(this.props.topic, added, removed);\n    this.props.onNavigate('info');\n  }\n\n  handleMemberSelected(uid) {\n    this.setState({selectedContact: uid});\n  }\n\n  handleBackNavigate() {\n    const args = (this.props.panel || 'info').split('/');\n    if (args[0] == 'info') {\n      this.props.onNavigate(null);\n    } else if (args[0] == 'perm') {\n      if (args[1] == 'user') {\n        this.props.onNavigate('info');\n      } else {\n        this.props.onNavigate('security');\n      }\n    } else {\n      this.props.onNavigate('info');\n    }\n  }\n\n  handleContextMenu(params) {\n    const {formatMessage} = this.props.intl;\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    const user = topic.subscriber(params.topicName);\n    if (!user || !user.acs) {\n      return;\n    }\n\n    const isMe = this.props.tinode.isMe(params.topicName);\n    const menuItems = [\n      {title: formatMessage(messages.edit_permissions), handler: () => {\n        this.handleLaunchPermissionsEditor(isMe ? 'want' : 'user', params.topicName);\n      }}\n    ];\n    if (!isMe) {\n      menuItems.push('member_delete');\n    }\n    menuItems.push(user.acs.isMuted() ? 'member_unmute' : 'member_mute');\n    if (!isMe) {\n      menuItems.push(user.acs.isJoiner() ? 'member_block' : 'member_unblock');\n    }\n    this.props.showContextMenu({\n      topicName: this.props.topic,\n      x: params.x,\n      y: params.y,\n      user: params.topicName}, menuItems);\n  }\n\n  render() {\n    const args = (this.props.panel || 'info').split('/');\n    const view = args[0];\n    args.shift();\n\n    const {formatMessage} = this.props.intl;\n    const panelTitle = formatMessage((view == 'perm' ? messages['perm_' + args[0]] : messages[view])\n      || messages['info']);\n\n    return (\n      <div id=\"info-view\">\n        <div className=\"caption-panel\" id=\"info-caption-panel\">\n          <div className=\"panel-title\" id=\"info-title\">{panelTitle}</div>\n          <div>\n            <MenuCancel onCancel={this.handleBackNavigate} />\n          </div>\n        </div>\n        {this.props.displayMobile ?\n          <ErrorPanel\n            level={this.props.errorLevel}\n            text={this.props.errorText}\n            onClearError={this.props.onError} /> : null}\n        {view == 'members' ?\n          <GroupManager\n            tinode={this.props.tinode}\n            members={this.state.contactList}\n            requiredMember={this.props.myUserId}\n            keepInitialMembers={!this.state.admin && !this.state.owner}\n            myUserId={this.props.myUserId}\n            contacts={this.props.searchableContacts}\n            onCancel={this.handleBackNavigate}\n            onSubmit={this.handleMemberUpdateRequest} />\n          :\n        view == 'perm' && args.length > 0 ?\n          <PermissionsEditor\n            tinode={this.props.tinode}\n            mode={this.state.editedPermissions}\n            compare={this.state.immutablePermissions}\n            skip={this.state.editedPermissionsSkipped}\n            modeTitle={this.state.editedPermissionsTitle}\n            compareTitle={this.state.immutablePermissionsTitle}\n            userTitle={this.state.userPermissionsTitle}\n            item={this.state.userPermissionsEdited}\n            userAvatar={this.state.userPermissionsAvatar}\n            onSubmit={(mode) => this.handlePermissionsChanged(args[0], mode)}\n            onCancel={this.handleBackNavigate} />\n          :\n        view == 'general' ?\n          <TopicCommon\n            tinode={this.props.tinode}\n            topic={this.props.topic}\n            onCredAdd={this.props.onCredAdd}\n            onTopicTagsUpdateRequest={this.props.onTopicTagsUpdateRequest}\n            onCredConfirm={this.props.onCredConfirm}\n            onCredDelete={this.props.onCredDelete}\n            onUpdateTopicDesc={this.props.onTopicDescUpdateRequest}\n            onError={this.props.onError} />\n          :\n        view == 'security' ?\n          <TopicSecurity\n            topic={this.props.topic}\n            owner={this.state.owner}\n            admin={this.state.admin}\n            sharer={this.state.sharer}\n            deleter={this.state.deleter}\n            muted={this.state.muted}\n\n            groupTopic={this.state.groupTopic}\n            channel={this.state.channel}\n            access={this.state.access}\n            modeGiven={this.state.modeGiven}\n            modeWant={this.state.modeWant}\n            modeGiven2={this.state.modeGiven2}\n            modeWant2={this.state.modeWant2}\n            auth={this.state.auth}\n            anon={this.state.anon}\n\n            onShowAlert={this.props.onShowAlert}\n            onDeleteMessages={this.props.onDeleteMessages}\n            onLeaveTopic={this.props.onLeaveTopic}\n            onBlockTopic={this.props.onBlockTopic}\n            onReportTopic={this.props.onReportTopic}\n            onLaunchPermissionsEditor={this.handleLaunchPermissionsEditor}\n            onNavigate={this.props.onNavigate} />\n          :\n          <div id=\"info-view-content\" className=\"scrollable-panel\">\n            <div className=\"panel-form-column\">\n              <a href=\"#\" className=\"flat-button float-right\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('general');}}>\n                <i className=\"material-icons\">edit</i>&nbsp;\n                <FormattedMessage id=\"button_edit\" defaultMessage=\"Edit\" description=\"Call to action [Edit]\" />\n              </a>\n              <center>\n                <AvatarUpload\n                  tinode={this.props.tinode}\n                  avatar={this.state.avatar}\n                  readOnly={true}\n                  uid={this.props.topic}\n                  title={this.state.fullName} />\n              </center>\n              <div className=\"group\">\n                <div><label className=\"small\">\n                  <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                    description=\"Label for editing topic name\" />\n                </label></div>\n                <div className=\"large ellipsized\">{this.state.fullName}\n                {this.state.channel ? <img src=\"/img/channel.png\" className=\"channel\" alt=\"channel\" /> : null}</div>\n              </div>\n              {this.state.private ?\n                <div className=\"group\">\n                  <div><label className=\"small\">\n                    <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                      description=\"Label for editing 'private'\" />\n                  </label></div>\n                  <div className=\"large ellipsized\">{this.state.private}</div>\n                </div>\n                : null\n              }\n              <div className=\"group\">\n                <label className=\"small\"><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n                  description=\"Label for user address (ID)\" /></label>&nbsp;\n                <tt>{this.state.address}</tt>\n              </div>\n              <div className=\"group\">\n                <BadgeList trustedBadges={this.state.trustedBadges} />\n              </div>\n              {this.state.description ?\n                <div className=\"group\">\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                      description=\"Label for editing topic description\" />\n                  </label>\n                  <div>{this.state.description}</div>\n                </div> : null}\n            </div>\n            <div className=\"hr\" />\n            <div className=\"panel-form-row\">\n              <label>\n                <FormattedMessage id=\"label_muting_topic\" defaultMessage=\"Muted:\"\n                  description=\"Label for Muting/unmuting the topic\" />\n              </label>\n              <CheckBox name=\"P\" checked={this.state.muted} onChange={this.handleMuted} />\n            </div>\n            {this.state.archived ?\n              <div className=\"panel-form-row\">\n                <label>\n                  <FormattedMessage id=\"label_unarchive_topic\" defaultMessage=\"Archived:\"\n                    description=\"Label for unarchiving the topic\" />\n                </label>\n                <CheckBox name=\"archived\" checked={true} onChange={this.handleUnarchive} />\n              </div>\n              :\n              null\n            }\n            <div className=\"hr\" />\n            <div className=\"panel-form-row\">\n              <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('security');}}>\n                <i className=\"material-icons\">security</i>&nbsp;<FormattedMessage id=\"button_security\"\n                  defaultMessage=\"Security\" description=\"Navigaton button for security panel.\" />\n              </a>\n            </div>\n            {this.state.groupTopic && this.state.sharer ?\n              <>\n                <div className=\"hr\" />\n                <div className=\"panel-form-row\">\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_group_members\" defaultMessage=\"Group members:\"\n                      description=\"Section title or label\" />\n                  </label>\n                </div>\n                <div className=\"panel-form-row\">\n                  <a href=\"#\" className=\"flat-button\" onClick={this.handleShowAddMembers}>\n                    <i className=\"material-icons\">person_add</i> &nbsp;<FormattedMessage id=\"button_add_members\"\n                      defaultMessage=\"Add members\" description=\"Flat button [Add members] (to topic)\" />\n                  </a>\n                </div>\n                <FormattedMessage id=\"group_has_no_members\" defaultMessage=\"No members\"\n                  description=\"Shown in place of group members\">{\n                  (no_members) => <ContactList\n                    tinode={this.props.tinode}\n                    contacts={this.state.contactList}\n                    myUserId={this.props.myUserId}\n                    emptyListMessage={no_members}\n                    topicSelected={this.state.selectedContact}\n                    showOnline={false}\n                    showUnread={false}\n                    showMode={true}\n                    noScroll={true}\n                    onTopicSelected={this.handleMemberSelected}\n                    showContextMenu={this.state.admin ? this.handleContextMenu : false}\n                  />\n                }</FormattedMessage>\n              </>\n              :\n              null\n            }\n          </div>\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(InfoView);\n","// File uload/download progress indicator with a cancel inside.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class FileProgress extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"uploader\">\n        <div><span style={{width: (this.props.progress * 100) + \"%\"}}></span></div>\n        {this.props.progress < 0.999 ?\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n            <i className=\"material-icons\">close</i> <FormattedMessage id=\"action_cancel\"\n              defaultMessage=\"cancel\" description=\"Call to action [cancel]\" />\n          </a>\n          :\n          <FormattedMessage id=\"upload_finishing\" defaultMessage=\"finishing...\"\n            description=\"Notification that upload is finishing\" />\n        }\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\nimport { bytesToHumanSize } from '../lib/strformat.js';\nimport { isUrlRelative, sanitizeUrl } from '../lib/utils.js';\n\nexport default class Attachment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      downloader: null,\n      progress: 0\n    };\n\n    this.downloadFile = this.downloadFile.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  downloadFile(url, filename, mimetype) {\n    if (!url) {\n      this.props.onError(\"Invalid download URL '\" + url + \"'\");\n      return;\n    }\n\n    const downloader = this.props.tinode.getLargeFileHelper();\n    this.setState({downloader: downloader});\n    downloader.download(url, filename, mimetype,\n      (loaded) => {\n        this.setState({progress: loaded / this.props.size});\n      },\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    ).then(() => {\n      this.setState({downloader: null, progress: 0});\n    }).catch((err) => {\n      if (err) {\n        this.props.onError(\"Error downloading file: \" + err.message, 'err');\n      }\n      this.setState({downloader: null, progress: 0});\n    });\n  }\n\n  handleCancel() {\n    if (this.props.uploading) {\n      this.props.onCancelUpload();\n    } else if (this.state.downloader) {\n      this.state.downloader.cancel();\n    }\n  }\n\n  render() {\n    let filename = this.props.filename || 'file_attachment';\n    if (filename.length > 36) {\n      filename = filename.substr(0, 16) + '...' + filename.substr(-16);\n    }\n    let size = this.props.size > 0 ?\n      <span className=\"small gray\">({bytesToHumanSize(this.props.size)})</span> :\n      null;\n\n    // Detect if the download URL is relative or absolute.\n    // If the URL is relative use LargeFileHelper to attach authentication\n    // credentials to the request.\n    let url, helperFunc;\n    if (!this.props.uploading && !this.state.downloader && isUrlRelative(this.props.downloadUrl)) {\n      // Relative URL. Use download helper.\n      url = '#';\n      helperFunc = (e) => {\n        e.preventDefault();\n        this.downloadFile(this.props.downloadUrl, this.props.filename, this.props.mimetype);\n      };\n    } else {\n      url = sanitizeUrl(this.props.downloadUrl);\n      helperFunc = null;\n    }\n    const downloadWidget = <><i className=\"material-icons\">file_download</i> <FormattedMessage id=\"save_attachment\"\n      defaultMessage=\"save\" description=\"Call to save an attachment\" /></>;\n    return (\n      <div className=\"attachment\">\n        <div><i className=\"material-icons big gray\">insert_drive_file</i></div>\n        <div className=\"flex-column\">\n          <div>{filename} {size}</div>\n          {this.props.uploading || this.state.downloader ?\n            <FileProgress progress={this.props.uploading ? this.props.progress : this.state.progress}\n              onCancel={this.handleCancel} />\n            :\n            <div>{url ?\n              <a href={url} download={this.props.filename} onClick={helperFunc}>{downloadWidget}</a>\n              :\n              <span className=\"light-gray\">{downloadWidget}</span>\n            }</div>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n","// Image view with progress bar and a cancel button.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\n\nexport default class UploadingImage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"inline-image\">\n        {React.createElement('img', this.props)}\n        <div className=\"rounded-container\">\n          <FileProgress progress={this.props.progress} onCancel={this.props.onCancelUpload} />\n        </div>\n      </div>\n    );\n  }\n};\n","// Single message, sent or received.\nimport React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport Attachment from './attachment.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\nimport UploadingImage from './uploading-image.jsx'\n\nimport { sanitizeImageUrl, sanitizeUrl } from '../lib/utils.js';\n\nclass ChatMessage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      progress: 0\n    };\n\n    if (props.uploader) {\n      props.uploader.onProgress = this.handleProgress.bind(this);\n    }\n\n    this.handleImagePreview = this.handleImagePreview.bind(this);\n    this.handleFormButtonClick = this.handleFormButtonClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n\n    this.handleQuoteClick = this.handleQuoteClick.bind(this);\n  }\n\n  handleImagePreview(e) {\n    e.preventDefault();\n    this.props.onImagePreview({\n      url: e.target.src,\n      filename: e.target.title,\n      width: e.target.dataset.width,\n      height: e.target.dataset.height,\n      size: e.target.dataset.size,\n      type: e.target.dataset.mime\n    });\n  }\n\n  handleFormButtonClick(e) {\n    e.preventDefault();\n    const data = {\n      seq: this.props.seq\n    };\n    data.resp = {};\n    if (e.target.dataset.name) {\n      data.resp[e.target.dataset.name] = e.target.dataset.val ? e.target.dataset.val :\n        e.target.dataset.val === undefined ? 1 : '' + e.target.dataset.val;\n    }\n    if (e.target.dataset.act == 'url') {\n      data.ref = sanitizeUrl(e.target.dataset.ref) || 'about:blank';\n    }\n    const text = e.target.dataset.title || 'unknown';\n    this.props.onFormResponse(e.target.dataset.act, text, data);\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const menuItems = this.props.received == Tinode.MESSAGE_STATUS_FAILED ? ['menu_item_send_retry'] : [];\n    if (this.props.received >= Tinode.MESSAGE_STATUS_FAILED &&\n        this.props.received < Tinode.MESSAGE_STATUS_DEL_RANGE) {\n      menuItems.push('menu_item_reply');\n    }\n    this.props.showContextMenu({ seq: this.props.seq, content: this.props.content,\n                                 y: e.pageY, x: e.pageX, pickReply: this.props.pickReply }, menuItems);\n  }\n\n  handleProgress(ratio) {\n    this.setState({progress: ratio});\n  }\n\n  handleCancelUpload() {\n    this.props.onCancelUpload(this.props.seq, this.props.uploader);\n  }\n\n  handleQuoteClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const replyToSeq = this.props.replyToSeq;\n    this.props.onQuoteClick(replyToSeq);\n  }\n\n  render() {\n    const sideClass = this.props.deleted ? 'center' :\n      (this.props.sequence + ' ' + (this.props.response ? 'left' : 'right'));\n    const bubbleClass = (this.props.sequence == 'single' || this.props.sequence == 'last') ? 'bubble tip' : 'bubble';\n    const avatar = this.props.deleted ? null : (this.props.userAvatar || true);\n    const fullDisplay = (this.props.userFrom && this.props.response && !this.props.deleted &&\n      (this.props.sequence == 'single' || this.props.sequence == 'last'));\n\n    const msgId = 'msg-' + this.props.seq;\n    let content = this.props.content;\n    const attachments = [];\n    if (this.props.mimeType == Drafty.getContentType() && Drafty.isValid(content)) {\n      Drafty.attachments(content, function(att, i) {\n        if (att.mime == 'application/json') {\n          // Don't show json objects as attachments.\n          // They are not meant for users.\n          return;\n        }\n        attachments.push(<Attachment\n          tinode={this.props.tinode}\n          downloadUrl={Drafty.getDownloadUrl(att)}\n          filename={att.name}\n          uploading={Drafty.isProcessing(att)}\n          mimetype={att.mime}\n          size={Drafty.getEntitySize(att)}\n          progress={this.state.progress}\n          onCancelUpload={this.handleCancelUpload}\n          onError={this.props.onError}\n          key={i} />);\n      }, this);\n\n      let qte = [];\n      if (content.qte) {\n        qte = Drafty.format(content.qte, this.props.onFormatQuote, this);\n        // Append a line break.\n        const lf = Drafty.appendLineBreak(null);\n        qte = qte.concat(Drafty.format(lf, draftyFormatter, this, qte.length));\n      }\n      let tree = Drafty.format(content, draftyFormatter, this, qte.length);\n      tree = qte.concat(tree);\n      content = React.createElement(React.Fragment, null, tree);\n    } else if (this.props.deleted) {\n      // Message represents a range of deleted messages.\n      content = <><i className=\"material-icons gray\">block</i> <i className=\"gray\">\n        <FormattedMessage id=\"deleted_content\"\n          defaultMessage=\"content deleted\" description=\"Shown when messages are deleted\" />\n      </i></>\n    } else if (typeof content != 'string') {\n      content = <>\n          <i className=\"material-icons gray\">error_outline</i> <i className=\"gray\">\n            <FormattedMessage id=\"invalid_content\"\n              defaultMessage=\"invalid content\" description=\"Shown when message is unreadable\" /></i>\n        </>\n    }\n\n    return (\n      <li id={msgId} className={sideClass}>\n        {this.props.userFrom && this.props.response ?\n          <div className=\"avatar-box\">\n            {fullDisplay ?\n              <LetterTile\n                tinode={this.props.tinode}\n                topic={this.props.userFrom}\n                title={this.props.userName}\n                avatar={avatar} /> :\n              null}\n          </div> :\n          null}\n        <div>\n          <div className={bubbleClass}>\n            <div className=\"content-meta\">\n              <div className=\"message-content\">\n                {content}\n                {attachments}\n              </div>\n              {this.props.timestamp ?\n                <ReceivedMarker\n                  timestamp={this.props.timestamp}\n                  received={this.props.received} />\n                : null}\n            </div>\n            {this.props.deleted || !this.props.showContextMenu ?\n              null :\n              <span className=\"menuTrigger\">\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">expand_more</i>\n                </a>\n              </span>\n            }\n          </div>\n          {fullDisplay ?\n            <div className=\"author\">\n              {this.props.userName ||\n                <i><FormattedMessage id=\"user_not_found\" defaultMessage=\"Not found\"\n                description=\"In place of a user's full name when the user is not found.\" /></i>\n              }\n            </div>\n            : null\n          }\n        </div>\n      </li>\n    );\n  }\n};\n\n// Convert Drafty object to a tree of React elements.\nimport { BROKEN_IMAGE_SIZE, REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\n\n// Converts Drafty elements into React classes.\n// 'this' is set by the caller.\nfunction draftyFormatter(style, data, values, key) {\n  if (style == 'EX') {\n    // attachments are handled elsewhere.\n    return null;\n  }\n\n  let el = Drafty.tagName(style);\n  if (el) {\n    const attr = Drafty.attrValue(style, data) || {};\n    attr.key = key;\n    switch (style) {\n      case 'HL':\n        // Highlighted text. Assign class name.\n        attr.className = 'highlight';\n        break;\n      case 'IM':\n        // Additional processing for images\n        if (data) {\n          attr.className = 'inline-image';\n          const dim = fitImageSize(data.width, data.height,\n            Math.min(this.props.viewportWidth - REM_SIZE * 6.5, REM_SIZE * 34.5), REM_SIZE * 24, false) ||\n            {dstWidth: BROKEN_IMAGE_SIZE, dstHeight: BROKEN_IMAGE_SIZE};\n          attr.style = {\n            width: dim.dstWidth + 'px',\n            height: dim.dstHeight + 'px',\n            // Looks like a Chrome bug: broken image does not respect 'width' and 'height'.\n            minWidth: dim.dstWidth + 'px',\n            minHeight: dim.dstHeight + 'px'\n          };\n          if (!Drafty.isProcessing(data)) {\n            attr.src = this.props.tinode.authorizeURL(sanitizeImageUrl(attr.src));\n            attr.alt = data.name;\n            if (attr.src) {\n              attr.onClick = this.handleImagePreview;\n              attr.className += ' image-clickable';\n              attr.loading = 'lazy';\n            } else {\n              attr.src = 'img/broken_image.png';\n            }\n          } else {\n            // Use custom element instead of <img>.\n            el = UploadingImage;\n          }\n        }\n        break;\n      case 'BN':\n        // Button\n        attr.onClick = this.handleFormButtonClick;\n        let inner = React.Children.map(values, (child) => {\n          return typeof child == 'string' ? child : undefined;\n        });\n        if (!inner || inner.length == 0) {\n          inner = [attr.name]\n        }\n        // Get text which will be sent back when the button is clicked.\n        attr['data-title'] = inner.join('');\n        break;\n      case 'FM':\n        // Form\n        attr.className = 'bot-form';\n        break;\n      case 'RW':\n        // Form element formatting is dependent on element content.\n        break;\n      case 'QQ':\n        // Quote/citation.\n        attr.className = 'reply-quote'\n        attr.onClick = this.handleQuoteClick;\n        break;\n      case 'QH':\n        // Quote header.\n        attr.className = 'reply-quote-header';\n        break;\n      case 'QB':\n        // Quote body.\n        break;\n      default:\n        if (el == '_UNKN') {\n          // Unknown element.\n          // TODO: make it prettier.\n          el = <><span className=\"material-icons\">extension</span></>;\n        }\n        break;\n    }\n    return React.createElement(el, attr, values);\n  } else {\n    return values;\n  }\n};\n\nexport default injectIntl(ChatMessage);\n","// Send message form.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport { KEYPRESS_DELAY } from '../config.js';\nimport { filePasted } from '../lib/blob-helpers.js';\n\nconst messages = defineMessages({\n  messaging_disabled: {\n    id: 'messaging_disabled_prompt',\n    defaultMessage: 'Messaging disabled',\n    description: 'Prompt in SendMessage in read-only topic'\n  },\n  type_new_message: {\n    id: 'new_message_prompt',\n    defaultMessage: 'New message',\n    description: 'Prompt in send message field'\n  },\n  add_image_caption: {\n    id: 'image_caption_prompt',\n    defaultMessage: 'Image caption',\n    description: 'Prompt in SendMessage for attached image'\n  },\n  file_attachment_too_large: {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  },\n  cannot_initiate_upload: {\n    id: 'cannot_initiate_file_upload',\n    defaultMessage: 'Cannot initiate file upload.',\n    description: 'Generic error messagewhen attachment fails'\n  },\n});\n\nclass SendMessage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      message: '',\n      // Make initial keypress time as if it happened 5001 milliseconds in the past.\n      keypressTimestamp: new Date().getTime() - KEYPRESS_DELAY - 1\n    };\n\n    this.handlePasteEvent = this.handlePasteEvent.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleSend = this.handleSend.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleMessageTyping = this.handleMessageTyping.bind(this);\n\n    this.handleQuoteClick = this.handleQuoteClick.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.addEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.removeEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.messageEditArea) {\n      this.messageEditArea.focus();\n    }\n  }\n\n  handlePasteEvent(e) {\n    if (this.props.disabled) {\n      return;\n    }\n    // FIXME: handle large files too.\n    if (filePasted(e,\n      (bits, mime, width, height, fname) => {\n        this.props.onAttachImage(mime, bits, width, height, fname);\n      },\n      (mime, bits, fname) => {\n        this.props.onAttachFile(mime, bits, fname);\n      },\n      this.props.onError)) {\n\n      // If a file was pasted, don't paste base64 data into input field.\n      e.preventDefault();\n    }\n  }\n\n  handleAttachImage(e) {\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachImage(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleAttachFile(e) {\n    const {formatMessage} = this.props.intl;\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachFile(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleSend(e) {\n    e.preventDefault();\n    const message = this.state.message.trim();\n    if (message || this.props.acceptBlank || this.props.noInput) {\n      this.props.onSendMessage(message);\n      this.setState({message: ''});\n    }\n  }\n\n  /* Send on Enter key */\n  handleKeyPress(e) {\n    // Remove this if you don't want Enter to trigger send\n    if (e.key === 'Enter') {\n      // Have Shift-Enter insert a line break instead\n      if (!e.shiftKey) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.handleSend(e);\n      }\n    }\n  }\n\n  handleMessageTyping(e) {\n    const newState = {message: e.target.value};\n    if (this.props.onKeyPress) {\n      const now = new Date().getTime();\n      if (now - this.state.keypressTimestamp > KEYPRESS_DELAY) {\n        this.props.onKeyPress();\n        newState.keypressTimestamp = now;\n      }\n    }\n    this.setState(newState);\n  }\n\n  handleQuoteClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.props.replyTo) {\n      //quote = Drafty.format(this.props.replyTo.content, quoteFormatter, this);\n      //quote = Drafty.format(this.props.replyTo.content, this.props.onFormatQuote, this);\n      const replyToSeq = this.props.replyTo.seq;\n      this.props.onQuoteClick(replyToSeq);\n    }\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const prompt = this.props.disabled ?\n      formatMessage(messages.messaging_disabled) :\n      (this.props.messagePrompt ?\n        formatMessage(messages[this.props.messagePrompt]) :\n        formatMessage(messages.type_new_message));\n\n    let quote = null;\n    if (this.props.replyTo) {\n      quote = Drafty.format(this.props.replyTo.content, this.props.onFormatQuote, this);\n    }\n\n    return (\n      <div id=\"send-message-wrapper\">\n      {quote ?\n        <div className=\"reply-quote-preview\">\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancelReply();}}><i className=\"material-icons gray\">close</i></a>\n          {quote}\n        </div>\n      :\n      null}\n\n      <div id=\"send-message-panel\">\n        {!this.props.disabled ?\n          <>\n            {this.props.onAttachFile ?\n              <>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachImage.click();}} title=\"Add image\">\n                  <i className=\"material-icons secondary\">photo</i>\n                </a>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachFile.click();}} title=\"Attach file\">\n                  <i className=\"material-icons secondary\">attach_file</i>\n                </a>\n              </>\n              :\n              null}\n            {this.props.noInput ?\n              <div className=\"hr thin\" /> :\n              <textarea id=\"sendMessage\" placeholder={prompt}\n                value={this.state.message} onChange={this.handleMessageTyping}\n                onKeyPress={this.handleKeyPress}\n                ref={(ref) => {this.messageEditArea = ref;}}\n                autoFocus />}\n            <a href=\"#\" onClick={this.handleSend} title=\"Send\">\n              <i className=\"material-icons\">send</i>\n            </a>\n            <input type=\"file\" ref={(ref) => {this.attachFile = ref;}}\n              onChange={this.handleAttachFile} style={{display: 'none'}} />\n            <input type=\"file\" ref={(ref) => {this.attachImage = ref;}} accept=\"image/*\"\n              onChange={this.handleAttachImage} style={{display: 'none'}} />\n          </>\n          :\n          <div id=\"writing-disabled\">{prompt}</div>\n        }\n      </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SendMessage);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { bytesToHumanSize } from '../lib/strformat.js';\n\n// Get material icon name from mime type.\nfunction iconFromMime(mime) {\n  // If more icons become available in material icons, add them to this mime-to-icon mapping.\n  const mimeToIcon = {default: 'insert_drive_file', image: 'image', text: 'description', video: 'theaters'};\n\n  return mimeToIcon[mime] || mimeToIcon[(mime || '').split('/')[0]] || mimeToIcon['default'];\n}\n\nexport default class DocPreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleSendDoc = this.handleSendDoc.bind(this);\n  }\n\n  handleSendDoc(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(this.props.content.file);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          <span>{this.props.content.filename}</span>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\">\n          <div className=\"flex-column narrow\">\n            <i className=\"material-icons gray\">{iconFromMime(this.props.content.type)}</i>\n            <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n              description=\"Label for file content type (mime)\" /></b> {this.props.content.type || 'application/octet-stream'}</div>\n            <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n              description=\"Label for file size\" /></b> {bytesToHumanSize(this.props.content.size)}</div>\n          </div>\n        </div>\n        <SendMessage\n          noInput={true}\n          onSendMessage={this.handleSendDoc}\n          onError={this.props.onError} />\n      </div>\n    );\n  }\n};\n","// GroupSubs: a list of group subscribers currently online.\n// Show in the topic title bar\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { MAX_ONLINE_IN_TOPIC } from '../config.js'\n\nimport LetterTile from './letter-tile.jsx';\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class GroupSubs extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const usersOnline = [];\n    const totalCount = (this.props.subscribers || []).length;\n    const countToShow = Math.min(MAX_ONLINE_IN_TOPIC, totalCount);\n\n    (this.props.subscribers || []).some((sub) => {\n      usersOnline.push(\n        <div className=\"avatar-box\" key={sub.user}>\n          <LetterTile\n            tinode={this.props.tinode}\n            topic={sub.user}\n            avatar={makeImageUrl(sub.public ? sub.public.photo : null) || true}\n            title={sub.public ? sub.public.fn : null} />\n        </div>\n      );\n      return usersOnline.length == countToShow;\n    });\n\n    return (\n      <div id=\"topic-users\">{usersOnline} {totalCount > countToShow ?\n        <span>\n          <FormattedMessage id=\"more_online_members\" defaultMessage=\"+{overflow} more\"\n              description=\"Shown in MessagesView title bar when the number of online subscribers exceeds MAX_ONLINE_IN_TOPIC\"\n              values={{ overflow: (totalCount - countToShow) }} />\n        </span> : null}\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\nimport { bytesToHumanSize } from '../lib/strformat.js';\n\nexport default class ImagePreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      width: 0,\n      height: 0\n    };\n\n    this.handleSendImage = this.handleSendImage.bind(this);\n  }\n\n  assignWidth(node) {\n    if (node && !this.state.width) {\n      const bounds = node.getBoundingClientRect();\n      this.setState({\n        width: bounds.width | 0,\n        height: bounds.height | 0\n      });\n    }\n  }\n\n  handleSendImage(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(caption, this.props.content.blob);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n\n    const dim = fitImageSize(this.props.content.width, this.props.content.height,\n      this.state.width, this.state.height, false);\n    const size = dim ? { width: dim.dstWidth + 'px', height: dim.dstHeight + 'px' } :\n      ((this.props.content.width > this.props.content.height) ? {width: '100%'} : {height: '100%'});\n    size.maxWidth = '100%';\n    size.maxHeight = '100%';\n\n    let filename = this.props.content.filename;\n    // Average font aspect ratio is ~0.5; File name takes 1/3 of the viewport width.\n    const maxlength = Math.max(((this.state.width / REM_SIZE / 1.5) | 0) - 2, 12);\n    if (filename.length > maxlength) {\n      filename = filename.slice(0, maxlength/2 - 1) + '…' + filename.slice(1 - maxlength/2);\n    }\n    const width = this.props.content.width || '-';\n    const height = this.props.content.height || '-';\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          {!this.props.onSendMessage ?\n            <a href={this.props.content.url} download={this.props.content.filename}>\n              <i className=\"material-icons\">file_download</i> <FormattedMessage\n                id=\"download_action\" defaultMessage=\"download\" description=\"Call to action [download]\" />\n            </a>\n            :\n            <span>{this.props.content.filename}</span>\n          }\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\" ref={(node) => this.assignWidth(node)}>\n          <img src={this.props.content.url} style={size} className=\"image-preview\" alt={this.props.content.filename} />\n        </div>\n        {this.props.onSendMessage ?\n          <SendMessage\n            messagePrompt=\"add_image_caption\"\n            acceptBlank={true}\n            onSendMessage={this.handleSendImage}\n            onError={this.props.onError} />\n          :\n          <div id=\"image-preview-footer\">\n            <div>\n              <div><b><FormattedMessage id=\"label_file_name\" defaultMessage=\"File name:\"\n                description=\"Label for a file name\" /></b></div>\n              <div><span title={this.props.content.filename}>{filename ? filename : '-'}</span></div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n                description=\"Label for file content type (mime)\" /></b></div>\n              <div>{this.props.content.type}</div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n                description=\"Label for file size\" /></b></div>\n              <div>{width} &times; {height} px; {bytesToHumanSize(this.props.content.size)}</div>\n            </div>\n          </div>}\n      </div>\n    );\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Invitation extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleButtonAction = this.handleButtonAction.bind(this);\n  }\n\n  handleButtonAction(evt, data) {\n    evt.preventDefault();\n    this.props.onAction(data);\n  }\n\n  render() {\n    return (\n      <div className=\"accept-invite-panel\">\n        <div className=\"title\">\n          <FormattedMessage id=\"chat_invitation\"\n            defaultMessage=\"You are invited to start a new chat. What would you like to do?\"\n            description=\"New chat invitation message: [Accept] [Ignore] [Block].\" />\n        </div>\n        <div className=\"footer\">\n          <button className=\"primary\" onClick={event => { this.handleButtonAction(event, \"accept\"); }}>\n            <FormattedMessage id=\"chat_invitation_accept\"\n              defaultMessage=\"Accept\" description=\"Action [Accept] for chat invitation.\" />\n          </button>\n          <button className=\"secondary\" onClick={event => { this.handleButtonAction(event, \"delete\"); }}>\n            <FormattedMessage id=\"chat_invitation_ignore\"\n              defaultMessage=\"Ignore\" description=\"Action [Ignore] for chat invitation.\" />\n          </button>\n          <button className=\"secondary\" onClick={event => { this.handleButtonAction(event, \"block\"); }}>\n            <FormattedMessage id=\"chat_invitation_block\"\n              defaultMessage=\"Block\" description=\"Action [Block] for chat invitation.\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n","/* This is just a static page to display when no conversation is selected. */\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME } from '../config.js';\n\nexport default class LogoView extends React.PureComponent {\n  render() {\n    const version = APP_NAME + ' (' + Tinode.getLibrary() + ')';\n    return (\n      <div id=\"dummy-view\">\n        <div>\n          <a href=\"https://github.com/tinode/chat/\">\n            <img id=\"logo\" alt=\"logo\" src=\"img/logo.svg\" />\n            <h2>Tinode Web</h2>\n          </a>\n          <p><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\"\n            description=\"Label for a client version\" /> {version}</p>\n          <p><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\"\n            description=\"Label for a server version\" /> {this.props.serverVersion} ({this.props.serverAddress})</p>\n        </div>\n      </div>\n    );\n  }\n};\n","// Utility class for hash navigation.\n\n// Parse hash as in http://www.example.com/path#hash as if it were\n// path and arguments.\nexport default class HashNavigation {\n  static parseUrlHash(hash) {\n    // Split path from args, path -> parts[0], args->path[1]\n    const parts = hash.split('?', 2);\n    const params = {};\n    let path = [];\n    if (parts[0]) {\n      path = parts[0].replace('#', '').split('/');\n    }\n    if (parts[1]) {\n      parts[1].split('&').forEach(function(part) {\n        const item = part.split('=');\n        if (item[0]) {\n          params[decodeURIComponent(item[0])] = decodeURIComponent(item[1]);\n        }\n      });\n    }\n    return {path: path, params: params};\n  }\n\n  static navigateTo(url) {\n    window.location.hash = url;\n  }\n\n  static composeUrlHash(path, params) {\n    let url = path.join('/');\n    const args = [];\n    for (const key in params) {\n      if (params.hasOwnProperty(key)) {\n        args.push(key + '=' + params[key]);\n      }\n    }\n    if (args.length > 0) {\n      url += '?' + args.join('&');\n    }\n    return url;\n  }\n\n  static addUrlParam(hash, key, value) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.params[key] = value;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static removeUrlParam(hash, key) {\n    const parsed = this.parseUrlHash(hash);\n    delete parsed.params[key];\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlSidePanel(hash, sidepanel) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[0] = sidepanel;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlInfoPanel(hash, infopanel) {\n    const parsed = this.parseUrlHash(hash);\n    if (infopanel) {\n      parsed.params.info = infopanel;\n    } else {\n      delete parsed.params.info;\n    }\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlTopic(hash, topic) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[1] = topic;\n    // Close InfoView on topic change.\n    delete parsed.params.info;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n}\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\nconst Drafty = Tinode.Drafty;\n\nimport ChatMessage from '../widgets/chat-message.jsx';\nimport ContactBadges from '../widgets/contact-badges.jsx';\nimport DocPreview from '../widgets/doc-preview.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupSubs from '../widgets/group-subs.jsx';\nimport ImagePreview from '../widgets/image-preview.jsx';\nimport Invitation from '../widgets/invitation.jsx';\nimport LetterTile from '../widgets/letter-tile.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport LogoView from './logo-view.jsx';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { DEFAULT_P2P_ACCESS_MODE, IMAGE_PREVIEW_DIM, KEYPRESS_DELAY, MESSAGES_PAGE,\n  MAX_EXTERN_ATTACHMENT_SIZE, MAX_IMAGE_DIM, MAX_INBAND_ATTACHMENT_SIZE, READ_DELAY,\n  IMAGE_THUMBNAIL_DIM, BROKEN_IMAGE_SIZE, REM_SIZE } from '../config.js';\nimport { SUPPORTED_IMAGE_FORMATS, blobToBase64, base64ToBlob, filePasted, fileToBase64,\n  imageScaled, makeImageUrl, fitImageSize } from '../lib/blob-helpers.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { bytesToHumanSize, shortDateFormat } from '../lib/strformat.js';\nimport { sanitizeImageUrl } from '../lib/utils.js';\n\n// Run timer with this frequency (ms) for checking notification queue.\nconst NOTIFICATION_EXEC_INTERVAL = 300;\n\nconst messages = defineMessages({\n  online_now: {\n    id: 'online_now',\n    defaultMessage: 'online now',\n    description: 'Indicator that the user or topic is currently online',\n  },\n  last_seen: {\n    id: 'last_seen_timestamp',\n    defaultMessage: 'Last seen',\n    description: 'Label for the timestamp of when the user or topic was last online'\n  },\n  not_found: {\n    id: 'title_not_found',\n    defaultMessage: 'Not found',\n    description: 'Title shown when topic is not found'\n  },\n  channel: {\n    id: 'channel',\n    defaultMessage: 'channel',\n    description: 'Subtitle shown for channels in MessagesView instead of last seen'\n  },\n  file_attachment_too_large: {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  },\n\n  drafty_form: {\n    id: 'drafty_form',\n    defaultMessage: 'Form: ',\n    description: 'Comment for form in drafty preview'\n  },\n  drafty_attachment: {\n    id: 'drafty_attachment',\n    defaultMessage: 'Attachment',\n    description: 'Comment for attachment in drafty preview'\n  },\n});\n\n// Checks if the access permissions are granted but not yet accepted.\nfunction isUnconfirmed(acs) {\n  if (acs) {\n    const ex = acs.getExcessive() || '';\n    return acs.isJoiner('given') && (ex.includes('R') || ex.includes('W'));\n  }\n  return false;\n}\n\nfunction isPeerRestricted(acs) {\n  if (acs) {\n    const ms = acs.getMissing() || '';\n    return acs.isJoiner('want') && (ms.includes('R') || ms.includes('W'));\n  }\n  return false;\n}\n\nclass MessagesView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = MessagesView.getDerivedStateFromProps(props, {});\n\n    this.leave = this.leave.bind(this);\n    this.sendImageAttachment = this.sendImageAttachment.bind(this);\n    this.sendFileAttachment = this.sendFileAttachment.bind(this);\n    this.sendKeyPress = this.sendKeyPress.bind(this);\n    this.handleScrollReference = this.handleScrollReference.bind(this);\n    this.handleScrollEvent = this.handleScrollEvent.bind(this);\n    this.handleDescChange = this.handleDescChange.bind(this);\n    this.handleSubsUpdated = this.handleSubsUpdated.bind(this);\n    this.handleMessageUpdate = this.handleMessageUpdate.bind(this);\n    this.handleAllMessagesReceived = this.handleAllMessagesReceived.bind(this);\n    this.handleInfoReceipt = this.handleInfoReceipt.bind(this);\n    this.handleImagePostview = this.handleImagePostview.bind(this);\n    this.handleClosePreview = this.handleClosePreview.bind(this);\n    this.handleFormResponse = this.handleFormResponse.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleShowContextMenuMessage = this.handleShowContextMenuMessage.bind(this);\n    this.handleNewChatAcceptance = this.handleNewChatAcceptance.bind(this);\n    this.handleEnablePeer = this.handleEnablePeer.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n    this.postReadNotification = this.postReadNotification.bind(this);\n    this.clearNotificationQueue = this.clearNotificationQueue.bind(this);\n\n    this.handleSendMessage = this.handleSendMessage.bind(this);\n    this.handlePickReply = this.handlePickReply.bind(this);\n    this.handleCancelReply = this.handleCancelReply.bind(this);\n    this.handleQuoteClick = this.handleQuoteClick.bind(this);\n    this.convertIntoThumbnails = this.convertIntoThumbnails.bind(this);\n\n    this.readNotificationQueue = [];\n    this.readNotificationTimer = null;\n  }\n\n  componentDidMount() {\n    // this.propsChange(this.props, this.state);\n    if (this.messagesScroller) {\n      this.messagesScroller.addEventListener('scroll', this.handleScrollEvent);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messagesScroller) {\n      this.messagesScroller.removeEventListener('scroll', this.handleScrollEvent);\n    }\n\n    // Flush all notifications.\n    this.clearNotificationQueue();\n  }\n\n  // Scroll last message into view on component update e.g. on message received\n  // or vertical shrinking.\n  componentDidUpdate(prevProps, prevState) {\n    if (this.messagesScroller) {\n      if (prevState.topic != this.state.topic || prevState.latestMsgSeq != this.state.latestMsgSeq) {\n        // New message\n        this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n      } else if (prevProps.viewportHeight > this.props.viewportHeight) {\n        // Componet changed height.\n        this.messagesScroller.scrollTop += prevProps.viewportHeight - this.props.viewportHeight;\n      }\n    }\n\n    const topic = this.props.tinode ? this.props.tinode.getTopic(this.state.topic) : undefined;\n    if (this.state.topic != prevState.topic) {\n      if (prevState.topic && !Tinode.isNewGroupTopicName(prevState.topic)) {\n        this.leave(prevState.topic);\n      }\n\n      if (topic) {\n        topic.onData = this.handleMessageUpdate;\n        topic.onAllMessagesReceived = this.handleAllMessagesReceived;\n        topic.onInfo = this.handleInfoReceipt;\n        topic.onMetaDesc = this.handleDescChange;\n        topic.onSubsUpdated = this.handleSubsUpdated;\n        topic.onPres = this.handleSubsUpdated;\n      }\n    }\n\n    if (!this.props.applicationVisible) {\n      // If application is not visible, flush all unsent 'read' notifications.\n      this.clearNotificationQueue();\n    } else {\n      // Otherwise assume there are unread messages.\n      this.postReadNotification(0);\n    }\n\n    if (topic && !topic.isSubscribed() && this.props.ready &&\n        ((this.state.topic != prevState.topic) || !prevProps.ready)) {\n      // Is this a new topic?\n      const newTopic = (this.props.newTopicParams && this.props.newTopicParams._topicName == this.props.topic);\n\n      // Don't request the tags. They are useless unless the user\n      // is the owner and is editing the topic.\n      let getQuery = topic.startMetaQuery().withLaterDesc().withLaterSub();\n      if (this.state.isReader || newTopic) {\n        // Reading is either permitted or we don't know because it's a new topic. Ask for messages.\n        getQuery = getQuery.withLaterData(MESSAGES_PAGE);\n        if (this.state.isReader) {\n          getQuery = getQuery.withLaterDel();\n        }\n        // And show \"loading\" spinner.\n        this.setState({ fetchingMessages: true });\n      }\n      const setQuery = newTopic ? this.props.newTopicParams : undefined;\n      topic.subscribe(getQuery.build(), setQuery)\n        .then((ctrl) => {\n          if (ctrl.code == 303) {\n            // Redirect to another topic requested.\n            HashNavigation.navigateTo(HashNavigation.setUrlTopic('', ctrl.params.topic));\n            return;\n          }\n          if (this.state.topic != ctrl.topic) {\n            this.setState({topic: ctrl.topic});\n          }\n          this.props.onNewTopicCreated(this.props.topic, ctrl.topic);\n          // If there are unsent messages, try sending them now.\n          topic.queuedMessages((pub) => {\n            if (!pub._sending && topic.isSubscribed()) {\n              topic.publishMessage(pub);\n            }\n          });\n        })\n        .catch((err) => {\n          console.log(\"Failed subscription to\", this.state.topic);\n          this.props.onError(err.message, 'err');\n          const blankState = MessagesView.getDerivedStateFromProps({}, {});\n          blankState.title = this.props.intl.formatMessage(messages.not_found);\n          this.setState(blankState);\n        });\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let nextState = {};\n    if (!nextProps.topic) {\n      // Default state: no topic.\n      nextState = {\n        latestMsgSeq: -1,\n        latestClearId: -1,\n        onlineSubs: [],\n        topic: null,\n        title: '',\n        avatar: null,\n        isVerified: false,\n        isStaff: false,\n        isDangerous: false,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false,\n        peerMessagingDisabled: false,\n        channel: false,\n        reply: null\n      };\n    } else if (nextProps.topic != prevState.topic) {\n      const topic = nextProps.tinode.getTopic(nextProps.topic);\n      nextState = {\n        topic: nextProps.topic,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false,\n        reply: null\n      };\n\n      if (topic) {\n        // Topic exists.\n        const subs = [];\n\n        if (nextProps.connected) {\n          topic.subscribers((sub) => {\n            if (sub.online && sub.user != nextProps.myUserId) {\n              subs.push(sub);\n            }\n          });\n        }\n\n        Object.assign(nextState, {\n          onlineSubs: subs\n        });\n\n        if (topic.public) {\n          Object.assign(nextState, {\n            title: topic.public.fn,\n            avatar: makeImageUrl(topic.public.photo)\n          });\n        } else {\n          Object.assign(nextState, {\n            title: '',\n            avatar: null\n          });\n        }\n\n        const peer = topic.p2pPeerDesc();\n        if (peer) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: isPeerRestricted(peer.acs)\n          });\n        } else if (prevState.peerMessagingDisabled) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: false\n          });\n        }\n        Object.assign(nextState, {\n          latestMsgSeq: topic.maxMsgSeq(),\n          latestClearId: topic.maxClearId(),\n          channel: topic.isChannelType()\n        });\n      } else {\n        // Invalid topic.\n        Object.assign(nextState, {\n          latestMsgSeq: -1,\n          latestClearId: -1,\n          onlineSubs: [],\n          title: '',\n          avatar: null,\n          peerMessagingDisabled: false,\n          channel: false\n        });\n      }\n    }\n\n    if (nextProps.acs) {\n      if (nextProps.acs.isWriter() != prevState.isWriter) {\n        nextState.isWriter = !prevState.isWriter;\n      }\n      if (nextProps.acs.isReader() != prevState.isReader) {\n        nextState.isReader = !prevState.isReader;\n      }\n      if (!nextProps.acs.isReader('given') != prevState.readingBlocked) {\n        nextState.readingBlocked = !prevState.readingBlocked;\n      }\n      if (nextProps.acs.isSharer() != prevState.isSharer) {\n        nextState.isSharer = !prevState.isSharer;\n      }\n    } else {\n      if (prevState.isWriter) {\n        nextState.isWriter = false;\n      }\n      if (prevState.isReader) {\n        nextState.isReader = false;\n      }\n      if (!prevState.readingBlocked) {\n        prevState.readingBlocked = true;\n      }\n      if (prevState.isSharer) {\n        nextState.isSharer = false;\n      }\n    }\n\n    if (isUnconfirmed(nextProps.acs) == !prevState.unconformed) {\n      nextState.unconfirmed = !prevState.unconformed;\n    }\n\n    // Clear subscribers online when there is no connection.\n    if (!nextProps.connected && prevState.onlineSubs && prevState.onlineSubs.length > 0) {\n      nextState.onlineSubs = [];\n    }\n\n    return nextState;\n  }\n\n  leave(oldTopicName) {\n    if (!oldTopicName || !this.props.tinode.isTopicCached(oldTopicName)) {\n      return;\n    }\n    const oldTopic = this.props.tinode.getTopic(oldTopicName);\n    if (oldTopic && oldTopic.isSubscribed()) {\n      oldTopic.leave(false)\n        .catch(() => { /* do nothing here */ })\n        .finally(() => {\n          // We don't care if the request succeeded or failed.\n          // The topic is dead regardless.\n          this.setState({fetchingMessages: false});\n          oldTopic.onData = undefined;\n          oldTopic.onAllMessagesReceived = undefined;\n          oldTopic.onInfo = undefined;\n          oldTopic.onMetaDesc = undefined;\n          oldTopic.onSubsUpdated = undefined;\n          oldTopic.onPres = undefined;\n        });\n    }\n  }\n\n  handleScrollReference(node) {\n    if (node) {\n      node.addEventListener('scroll', this.handleScrollEvent);\n      this.messagesScroller = node;\n      this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n    }\n  }\n\n  // Get older messages\n  handleScrollEvent(event) {\n    this.setState({scrollPosition: event.target.scrollHeight - event.target.scrollTop});\n    if (event.target.scrollTop <= 0) {\n      this.setState((prevState, props) => {\n        const newState = {};\n        if (!prevState.fetchingMessages) {\n          const topic = this.props.tinode.getTopic(this.state.topic);\n          if (topic && topic.isSubscribed() && topic.msgHasMoreMessages()) {\n            newState.fetchingMessages = true;\n            topic.getMessagesPage(MESSAGES_PAGE)\n              .then(() => this.setState({fetchingMessages: false}))\n              .catch((err) => {\n                this.setState({fetchingMessages: false});\n                this.props.onError(err.message, 'err');\n              });\n          }\n        }\n        return newState;\n      });\n    }\n  }\n\n  handleDescChange(desc) {\n    if (desc.public) {\n      this.setState({\n        title: desc.public.fn,\n        avatar: makeImageUrl(desc.public.photo)\n      });\n    } else {\n      this.setState({\n        title: '',\n        avatar: null\n      });\n    }\n\n    if (desc.acs) {\n      this.setState({\n        isWriter: desc.acs.isWriter(),\n        isReader: desc.acs.isReader(),\n        readingBlocked: !desc.acs.isReader('given'),\n        unconfirmed: isUnconfirmed(desc.acs),\n      });\n    }\n  }\n\n  postReadNotification(seq) {\n    // Ignore notifications if the app is invisible.\n    if (!this.props.applicationVisible) {\n      return;\n    }\n\n    // Set up the timer if it's not running already.\n    if (!this.readNotificationTimer) {\n      this.readNotificationTimer = setInterval(() => {\n        if (this.readNotificationQueue.length == 0) {\n          // Shut down the timer if the queue is empty.\n          clearInterval(this.readNotificationTimer);\n          this.readNotificationTimer = null;\n          return;\n        }\n\n        let seq = -1;\n        while (this.readNotificationQueue.length > 0) {\n          const n = this.readNotificationQueue[0];\n          if (n.topicName != this.state.topic) {\n            // Topic has changed. Drop the notification.\n            this.readNotificationQueue.shift();\n            continue;\n          }\n\n          const now = new Date();\n          if (n.sendAt <= now) {\n            // Remove expired notification from queue.\n            this.readNotificationQueue.shift();\n            seq = Math.max(seq, n.seq);\n          } else {\n            break;\n          }\n        }\n\n        // Send only one notification for the whole batch of messages.\n        if (seq >= 0) {\n          const topic = this.props.tinode.getTopic(this.state.topic);\n          if (topic) {\n            topic.noteRead(seq);\n          }\n        }\n      }, NOTIFICATION_EXEC_INTERVAL);\n    }\n\n    const now = new Date();\n    this.readNotificationQueue.push({\n      topicName: this.state.topic,\n      seq: seq,\n      sendAt: now.setMilliseconds(now.getMilliseconds() + READ_DELAY)\n    });\n  }\n\n  // Clear notification queue and timer.\n  clearNotificationQueue() {\n    this.readNotificationQueue = [];\n    if (this.readNotificationTimer) {\n      clearInterval(this.readNotificationTimer);\n      this.readNotificationTimer = null;\n    }\n  }\n\n  handleSubsUpdated() {\n    if (this.state.topic) {\n      const subs = [];\n      const topic = this.props.tinode.getTopic(this.state.topic);\n      topic.subscribers((sub) => {\n        if (sub.online && sub.user != this.props.myUserId) {\n          subs.push(sub);\n        }\n      });\n      const newState = {onlineSubs: subs};\n      const peer = topic.p2pPeerDesc();\n      if (peer) {\n        Object.assign(newState, {\n          peerMessagingDisabled: isPeerRestricted(peer.acs)\n        });\n      } else if (this.state.peerMessagingDisabled) {\n        Object.assign(newState, {\n          peerMessagingDisabled: false\n        });\n      }\n      this.setState(newState);\n    }\n  }\n\n  // The 'msg' could be false-ish if some message ranges were deleted.\n  handleMessageUpdate(msg) {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (!msg) {\n      // msg could be null if one or more messages were deleted.\n      // Updating state to force redraw.\n      this.setState({latestClearId: topic.maxClearId()});\n      return;\n    }\n\n    this.setState({latestMsgSeq: topic.maxMsgSeq()});\n\n    // If the message is added to the end of the message list,\n    // scroll to the bottom.\n    if (topic.isNewMessage(msg.seq)) {\n      this.setState({scrollPosition: 0});\n    }\n\n    // Aknowledge messages except own messages. They are\n    // automatically assumed to be read and recived.\n    const status = topic.msgStatus(msg, true);\n    if (status >= Tinode.MESSAGE_STATUS_SENT && msg.from != this.props.myUserId) {\n      this.postReadNotification(msg.seq);\n    }\n    // This will send \"received\" notifications right away.\n    this.props.onData(msg);\n  }\n\n  handleAllMessagesReceived(count) {\n    this.setState({fetchingMessages: false});\n    if (count > 0) {\n      // 0 means \"latest\".\n      this.postReadNotification(0);\n    }\n  }\n\n  handleInfoReceipt(info) {\n    switch (info.what) {\n      case 'kp': {\n        clearTimeout(this.keyPressTimer);\n        var instance = this;\n        this.keyPressTimer = setTimeout(function() {\n          instance.setState({typingIndicator: false});\n        }, KEYPRESS_DELAY + 1000);\n        if (!this.state.typingIndicator) {\n          this.setState({typingIndicator: true});\n        }\n        break;\n      }\n      case 'read':\n      case 'recv':\n        // Redraw due to changed recv/read status.\n        this.forceUpdate();\n        break;\n      default:\n        console.log(\"Other change in topic: \", info.what);\n    }\n  }\n\n  handleImagePostview(content) {\n    this.setState({ imagePostview: content });\n  }\n\n  handleClosePreview() {\n    if (this.state.imagePreview && this.state.imagePreview.url) {\n      URL.revokeObjectURL(this.state.imagePreview.url);\n    }\n    this.setState({ imagePostview: null, imagePreview: null, docPreview: null });\n  }\n\n  handleFormResponse(action, text, data) {\n    if (action == 'pub') {\n      this.props.sendMessage(Drafty.attachJSON(Drafty.parse(text), data));\n    } else if (action == 'url') {\n      const url = new URL(data.ref);\n      const params = url.searchParams;\n      for (let key in data.resp) {\n        if (data.resp.hasOwnProperty(key)) {\n          params.set(key, data.resp[key]);\n        }\n      }\n      ['name', 'seq'].map((key) => {\n        if (data[key]) {\n          params.set(key, data[key]);\n        }\n      });\n      params.set('uid', this.props.myUserId);\n      params.set('topic', this.state.topic);\n      url.search = params;\n      window.open(url, '_blank');\n    } else {\n      console.log(\"Unknown action in form\", action);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.state.topic, y: e.pageY, x: e.pageX });\n  }\n\n  handleShowContextMenuMessage(params, messageSpecificMenuItems) {\n    params.topicName = this.state.topic;\n    const menuItems = messageSpecificMenuItems || [];\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (topic) {\n      if (!topic.isChannelType()) {\n        menuItems.push('message_delete');\n      }\n      const acs = topic.getAccessMode();\n      if (acs && acs.isDeleter()) {\n        menuItems.push('message_delete_hard');\n      }\n    }\n    this.props.showContextMenu(params, menuItems);\n  }\n\n  handleNewChatAcceptance(action) {\n    this.props.onNewChat(this.state.topic, action);\n  }\n\n  handleEnablePeer(e) {\n    e.preventDefault();\n    this.props.onChangePermissions(this.state.topic, DEFAULT_P2P_ACCESS_MODE, this.state.topic);\n  }\n\n  sendKeyPress() {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (topic.isSubscribed()) {\n      topic.noteKeyPress();\n    }\n  }\n\n  // Send attachment as Drafty message:\n  // - if file is too large, upload it and send a s link.\n  // - if file is small enough, just send it in-band.\n  sendFileAttachment(file) {\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (file.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      const uploadCompletionPromise = uploader.upload(file);\n      const msg = Drafty.attachFile(null, {\n        mime: file.type,\n        filename: file.name,\n        size: file.size,\n        urlPromise: uploadCompletionPromise\n      });\n      // Pass data and the uploader to the TinodeWeb.\n      this.props.sendMessage(msg, uploadCompletionPromise, uploader);\n    } else {\n      // Small enough to send inband.\n      fileToBase64(file,\n        (mime, bits, fname) => {\n          this.props.sendMessage(Drafty.attachFile(null, {mime: mime, data: bits, filename: fname}));\n        },\n        this.props.onError\n      );\n    }\n  }\n\n  // handleAttachFile method is called when [Attach file] button is clicked.\n  handleAttachFile(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    if (file.size > maxExternAttachmentSize) {\n      // Too large.\n      this.props.onError(this.props.intl.formatMessage(messages.file_attachment_too_large,\n        {size: bytesToHumanSize(file.size), limit: bytesToHumanSize(maxExternAttachmentSize)}), 'err');\n    } else {\n      this.setState({ docPreview: {\n        file: file,\n        filename: file.name,\n        size: file.size,\n        type: file.type\n      }});\n    }\n  }\n\n  // sendImageAttachment sends the image bits inband as Drafty message.\n  sendImageAttachment(caption, blob) {\n    const mime = this.state.imagePreview.type;\n    const width = this.state.imagePreview.width;\n    const height = this.state.imagePreview.height;\n    const fname = this.state.imagePreview.filename;\n\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (blob.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      if (!uploader) {\n        this.props.onError(this.props.intl.formatMessage(messages.cannot_initiate_upload));\n        return;\n      }\n      const uploadCompletionPromise = uploader.upload(blob);\n\n      // Make small preview to show while uploading.\n      imageScaled(blob, IMAGE_PREVIEW_DIM, IMAGE_PREVIEW_DIM, -1, false,\n        (tinyMine, tinyBlob) => {\n          // Convert tiny image into base64 for serialization and previewing.\n          blobToBase64(tinyBlob, (blobMime, tinyBits64) => {\n            let msg = Drafty.insertImage(null, 0, {\n              mime: mime,\n              _tempPreview: tinyBits64, // This preview will not be serialized.\n              width: width,\n              height: height,\n              filename: fname,\n              size: blob.size,\n              urlPromise: uploadCompletionPromise\n            });\n            if (caption) {\n              msg = Drafty.appendLineBreak(msg);\n              msg = Drafty.append(msg, Drafty.init(caption));\n            }\n            // Pass data and the uploader to the TinodeWeb.\n            this.props.sendMessage(msg, uploadCompletionPromise, uploader);\n          }\n        )},\n        // Failure\n        (err) => {\n          this.props.onError(err, 'err');\n        }\n      );\n      return;\n    }\n\n    // Upload the image if it's too big to be send inband.\n    blobToBase64(blob, (blobMime, bits64) => {\n      let msg = Drafty.insertImage(null, 0, {\n        mime: blobMime,\n        preview: bits64, // Serializable preview\n        width: width,\n        height: height,\n        filename: fname,\n        size: blob.size\n      });\n      if (caption) {\n        msg = Drafty.appendLineBreak(msg);\n        msg = Drafty.append(msg, Drafty.init(caption));\n      }\n      this.props.sendMessage(msg);\n    });\n  }\n\n  // handleAttachImage method is called when [Attach image] button is clicked.\n  handleAttachImage(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    // Get image dimensions and size, optionally scale it down.\n    imageScaled(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, maxExternAttachmentSize, false,\n      // Success\n      (mime, blob, width, height, fname) => {\n        this.setState({imagePreview: {\n          url: URL.createObjectURL(blob),\n          blob: blob,\n          filename: fname,\n          width: width,\n          height: height,\n          size: blob.size,\n          type: mime\n        }});\n      },\n      // Failure\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    );\n  }\n\n  handleCancelUpload(seq, uploader) {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    const found = topic.findMessage(seq);\n    if (found) {\n      found._cancelled = true;\n    }\n    uploader.cancel();\n  }\n\n  handlePickReply(m) {\n    this.setState({reply: null})\n    //instance.setState({typingIndicator: false});\n    if (m) {\n      let cont = m.content\n      if (cont) {\n        if (typeof cont == 'string') {\n          cont = Drafty.init(cont);\n        }\n        cont = Drafty.preview(cont, 30, (src, target) => {\n          if (src.data && src.tp && src.tp == 'IM') {\n            // For images, copy val and ref fields.\n            ['val', 'ref'].forEach(key => {\n              const val = src.data[key];\n              if (val) {\n                target.data[key] = val;\n              }\n            });\n          }\n        });\n\n        let header = '';\n        const seq = m.seq;\n        const idx = this.msgIndex(seq);\n        if (idx < this.state.messages.length) {\n          const m0 = this.state.messages[idx];\n\n          let thisFrom = m0.from || 'chan';\n          if (thisFrom != this.props.myUserId) {\n            const topic = this.props.tinode.getTopic(this.state.topic);\n            const user = topic.userDesc(thisFrom);\n            if (user && user.public) {\n              header = user.public.fn;\n            }\n          } else {\n            header = this.props.myUserName;\n          }\n        }\n\n        header = Drafty.init(header);\n        // Make small image previews.\n        let ents = [];\n        if (cont.ent) {\n          Drafty.entities(cont, (data, idx, tp) => {\n            if (tp == 'IM') {\n              ents.push({\n                tp: tp,\n                data: data\n              });\n            }\n\n          }, this);\n        }\n        this.convertIntoThumbnails(ents, 0, (success) => {\n          if (success) {\n            const msg = Drafty.createQuote(header, cont);\n            this.setState({reply: {content: msg, seq: m.seq}});\n          }\n        });\n\n        return;\n      }\n    }\n  }\n\n  msgIndex(seq) {\n    let l = -1;\n    let r = this.state.messages.length;\n    while (r > l + 1) {\n      const m = Math.floor((l + r) / 2);\n      if (this.state.messages[m].seq < seq) {\n        l = m;\n      } else {\n        r = m;\n      }\n    }\n    return r;\n  }\n\n  // Turn images in the provided Drafty.ent entries into thumbnails.\n  convertIntoThumbnails(ents, idx, done) {\n    if (idx >= ents.length) {\n      done(true);\n      return;\n    }\n\n    function scale(origBlob) {\n      imageScaled(origBlob, IMAGE_THUMBNAIL_DIM, IMAGE_THUMBNAIL_DIM, -1, false,\n        // Success\n        (mime, blob, width, height, fname) => {\n          let ex = ents[idx];\n          ex.data.mime = mime;\n          ex.data.val = blob;\n          ex.data.width = width;\n          ex.data.height = height;\n          ex.data.name = fname;\n          ex.data.ref = undefined;\n\n          blobToBase64(blob, (blobMime, tinyBits64) => {\n            ex.data.val = tinyBits64;\n            this.convertIntoThumbnails(ents, idx + 1, done);\n          });\n        },\n        // Failure\n        (err) => {\n          done(false);\n          this.props.onError(err, 'err');\n        });\n    }\n    const ex = ents[idx];\n    if (ex.data.val) {\n      const b = base64ToBlob(ex.data.val, ex.data.mime);\n      if (b) {\n        scale.call(this, b);\n      }\n    } else {\n      let saveThis = this;\n      const from = this.props.tinode.authorizeURL(sanitizeImageUrl(ex.data.ref));\n      fetch(from)\n        .then(e => e.blob())\n        .then(function(b) {\n          scale.call(saveThis, b);\n        });\n      return;\n    }\n  }\n\n  handleSendMessage(msg) {\n    if (this.state.reply) {\n      let quote = this.state.reply.content;\n      if (quote) {\n        if (typeof msg == 'string') {\n          msg = Drafty.init(msg);\n        }\n        msg = Drafty.attachQuote(msg, quote);\n        let head = {replyToSeq: this.state.reply.seq};\n\n        this.props.sendMessage(msg, undefined, undefined, head);\n        this.setState({reply: null})\n        return;\n      }\n    }\n    this.props.sendMessage(msg)\n  }\n\n  handleCancelReply() {\n    this.setState({reply: null})\n  }\n\n  handleQuoteClick(replyToSeq) {\n    const element = document.getElementById(\"msg-\" + replyToSeq);\n    if (element) {\n      element.scrollIntoView({block: \"center\", behavior: \"smooth\"});\n      element.style.backgroundColor = 'rgb(0, 0, 0, 0.4)';\n      setTimeout(() => { element.style.backgroundColor = ''; } , 1000);\n    }\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n\n    let component;\n    if (this.props.hideSelf) {\n      component = null;\n    } else if (!this.state.topic) {\n      component = (\n        <LogoView\n          serverVersion={this.props.serverVersion}\n          serverAddress={this.props.serverAddress} />\n      );\n    } else {\n      let component2;\n      if (this.state.imagePreview) {\n        // Preview image before sending.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePreview}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendImageAttachment} />\n        );\n      } else if (this.state.imagePostview) {\n        // Expand received image.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePostview}\n            onClose={this.handleClosePreview} />\n        );\n      } else if (this.state.docPreview) {\n        // Preview attachment before sending.\n        component2 = (\n          <DocPreview\n            content={this.state.docPreview}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendFileAttachment} />\n        );\n      } else {\n        const topic = this.props.tinode.getTopic(this.state.topic);\n        const isChannel = topic.isChannelType();\n        const groupTopic = topic.isGroupType() && !isChannel;\n        const icon_badges = [];\n        if (topic.trusted) {\n          if (topic.trusted.verified) {\n            icon_badges.push({icon: 'verified', color: 'badge-inv'});\n          }\n          if (topic.trusted.staff) {\n            icon_badges.push({icon: 'staff', color: 'badge-inv'});\n          }\n          if (topic.trusted.danger) {\n            icon_badges.push({icon: 'dangerous', color: 'badge-inv'});\n          }\n        }\n        let messageNodes = [];\n        let previousFrom = null;\n        let chatBoxClass = null;\n        topic.messages((msg, prev, next, i) => {\n          let nextFrom = next ? (next.from || null) : 'chan';\n\n          let sequence = 'single';\n          let thisFrom = msg.from || 'chan';\n          if (thisFrom == previousFrom) {\n            if (thisFrom == nextFrom) {\n              sequence = 'middle';\n            } else {\n              sequence = 'last';\n            }\n          } else if (thisFrom == nextFrom) {\n            sequence = 'first';\n          }\n          previousFrom = thisFrom;\n\n          const isReply = !(thisFrom == this.props.myUserId);\n          const deliveryStatus = topic.msgStatus(msg, true);\n\n          let userName, userAvatar, userFrom;\n          if (groupTopic) {\n            const user = topic.userDesc(thisFrom);\n            if (user && user.public) {\n              userName = user.public.fn;\n              userAvatar = makeImageUrl(user.public.photo);\n            }\n            userFrom = thisFrom;\n            chatBoxClass='chat-box group';\n          } else {\n            chatBoxClass='chat-box';\n          }\n\n          messageNodes.push(\n            <ChatMessage\n              tinode={this.props.tinode}\n              content={msg.content}\n              deleted={msg.hi}\n              mimeType={msg.head ? msg.head.mime : null}\n              timestamp={msg.ts}\n              response={isReply}\n              seq={msg.seq}\n              userFrom={userFrom}\n              userName={userName}\n              userAvatar={userAvatar}\n              sequence={sequence}\n              received={deliveryStatus}\n              uploader={msg._uploader}\n              viewportWidth={this.props.viewportWidth}\n              showContextMenu={this.state.channel? false : this.handleShowContextMenuMessage}\n              onImagePreview={this.handleImagePostview}\n              onFormResponse={this.handleFormResponse}\n              onError={this.props.onError}\n              onCancelUpload={this.handleCancelUpload}\n\n              pickReply={this.handlePickReply}\n              replyToSeq={msg.head ? msg.head.replyToSeq : null}\n              onQuoteClick={this.handleQuoteClick}\n              onFormatQuote={quoteFormatter}\n\n              key={msg.seq} />\n          );\n        });\n\n        let lastSeen = null;\n        if (isChannel) {\n          lastSeen = formatMessage(messages.channel);\n        } else {\n          const cont = this.props.tinode.getMeTopic().getContact(this.state.topic);\n          if (cont && Tinode.isP2PTopicName(cont.topic)) {\n            if (cont.online) {\n              lastSeen = formatMessage(messages.online_now);\n            } else if (cont.seen) {\n              lastSeen = formatMessage(messages.last_seen) + \": \" +\n                shortDateFormat(cont.seen.when, this.props.intl.locale);\n              // TODO: also handle user agent in c.seen.ua\n            }\n          }\n        }\n        const avatar = this.state.avatar || true;\n        const online = this.props.online ? 'online' + (this.state.typingIndicator ? ' typing' : '') : 'offline';\n\n        component2 = (\n          <>\n            <div id=\"topic-caption-panel\" className=\"caption-panel\">\n              {this.props.displayMobile ?\n                <a href=\"#\" id=\"hide-message-view\" onClick={(e) => {e.preventDefault(); this.props.onHideMessagesView();}}>\n                  <i className=\"material-icons\">arrow_back</i>\n                </a>\n                :\n                null}\n              <div className=\"avatar-box\">\n                <LetterTile\n                  tinode={this.props.tinode}\n                  avatar={avatar}\n                  topic={this.state.topic}\n                  title={this.state.title} />\n                {!isChannel ? <span className={online} /> : null}\n              </div>\n              <div id=\"topic-title-group\">\n                <div id=\"topic-title\" className=\"panel-title\">{\n                  this.state.title ||\n                  <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n                    description=\"Title shown when the topic has no name\" /></i>\n                }<ContactBadges badges={icon_badges} /></div>\n                <div id=\"topic-last-seen\">{lastSeen}</div>\n              </div>\n              {groupTopic ?\n                <GroupSubs\n                  tinode={this.props.tinode}\n                  subscribers={this.state.onlineSubs} /> :\n                <div id=\"topic-users\" />\n              }\n              <div>\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">more_vert</i>\n                </a>\n              </div>\n            </div>\n            {this.props.displayMobile ?\n              <ErrorPanel\n                level={this.props.errorLevel}\n                text={this.props.errorText}\n                onClearError={this.props.onError} />\n              : null}\n            <LoadSpinner show={this.state.fetchingMessages} />\n            <div id=\"messages-container\">\n              <div id=\"messages-panel\" ref={this.handleScrollReference}>\n                <ul id=\"scroller\" className={chatBoxClass}>\n                  {messageNodes}\n                </ul>\n              </div>\n              {!this.state.isReader ?\n              <div id=\"write-only-background\">\n                {this.state.readingBlocked ?\n                <div id=\"write-only-note\">\n                  <FormattedMessage id=\"messages_not_readable\" defaultMessage=\"no access to messages\"\n                    description=\"Message shown in topic without the read access\" />\n                </div>\n                : null }\n              </div>\n              : null }\n            </div>\n            {this.state.peerMessagingDisabled && !this.state.unconfirmed ?\n              <div id=\"peer-messaging-disabled-note\">\n                <i className=\"material-icons secondary\">block</i> <FormattedMessage\n                  id=\"peers_messaging_disabled\" defaultMessage=\"Peer's messaging is disabled.\"\n                  description=\"Shown when the p2p peer's messaging is disabled\" /> <a href=\"#\"\n                    onClick={this.handleEnablePeer}><FormattedMessage id=\"enable_peers_messaging\"\n                    defaultMessage=\"Enable\" description=\"Call to action to enable peer's messaging\" /></a>.\n              </div> : null}\n            {this.state.unconfirmed ?\n              <Invitation onAction={this.handleNewChatAcceptance} />\n              :\n              <SendMessage\n                disabled={!this.state.isWriter}\n                //onSendMessage={this.props.sendMessage}\n                onKeyPress={this.sendKeyPress}\n                onAttachFile={this.handleAttachFile}\n                onAttachImage={this.handleAttachImage}\n                onError={this.props.onError}\n\n                tinode={this.props.tinode}\n                replyTo={this.state.reply}\n                onQuoteClick={this.handleQuoteClick}\n                onSendMessage={this.handleSendMessage}\n                onFormatQuote={quoteFormatter}\n                onCancelReply={this.handleCancelReply} />}\n          </>\n        );\n      }\n\n      component = <div id=\"topic-view\">{component2}</div>\n    }\n    return component;\n  }\n};\n\n// Converts Drafty object into a one-line reply quote.\nfunction quoteFormatter(style, data, values, key) {\n  let el = Drafty.tagName(style);\n  let attr = { key: key };\n  if (el) {\n    const { formatMessage } = this.props.intl;\n    switch (style) {\n      case 'BR':\n        // Replace new line with a space.\n        el = React.Fragment;\n        values = [' '];\n        break;\n      case 'HL':\n        // Make highlight less prominent in preview.\n        attr.className = 'highlight preview';\n        break;\n      case 'LN':\n        // Disable links in previews.\n        el = 'span';\n        break;\n      case 'IM':\n        // We show image thumbnails stored inline.\n        if (data) {\n          attr = Drafty.attrValue(style, data) || {};\n          attr.key = key;\n          attr.className = 'inline-image';\n          const dim = fitImageSize(data.width, data.height,\n            Math.min(this.props.viewportWidth - REM_SIZE * 6.5, REM_SIZE * 34.5), REM_SIZE * 24, false) ||\n            {dstWidth: BROKEN_IMAGE_SIZE, dstHeight: BROKEN_IMAGE_SIZE};\n          attr.style = {\n            width: dim.dstWidth + 'px',\n            height: dim.dstHeight + 'px',\n            // Looks like a Chrome bug: broken image does not respect 'width' and 'height'.\n            minWidth: dim.dstWidth + 'px',\n            minHeight: dim.dstHeight + 'px'\n          };\n          attr.src = this.props.tinode.authorizeURL(sanitizeImageUrl(attr.src));\n          attr.alt = data.name;\n          if (!attr.src) {\n            attr.src = 'img/broken_image.png';\n          }\n        }\n        break;\n      case 'BN':\n        el = 'span';\n        attr.className = 'flat-button faux';\n        break;\n      case 'FM':\n        el = React.Fragment;\n        values = [<i key=\"fm\" className=\"material-icons\">dashboard</i>,\n          //messages.drafty_form].concat(values || []);\n          formatMessage(messages.drafty_form)].concat(values || []);\n        break;\n      case 'RW':\n        el = React.Fragment;\n        break;\n      case 'EX':\n        if (data && data.mime == 'application/json') {\n          // Ignore JSON attachments: they are form response payloads.\n          return null;\n        }\n        el = React.Fragment;\n        values = [<i key=\"ex\" className=\"material-icons\">attachment</i>,\n                  //messages.drafty_attachment];\n                  formatMessage(messages.drafty_attachment)];\n        break;\n      case 'QQ':\n        // Quote/citation.\n        attr.className = 'reply-quote';\n        attr.onClick = this.handleQuoteClick;\n        break;\n      case 'QH':\n        // Quote/citation.\n        attr.className = 'reply-quote-header';\n        break;\n      case 'QB':\n        // Nothing.\n        break;\n      default:\n        if (el == '_UNKN') {\n          el = React.Fragment;\n          values = [<i key=\"unkn\" className=\"material-icons\">extension</i>];\n        }\n        break;\n    }\n    return React.createElement(el, attr, values);\n  } else {\n    return values;\n  }\n};\n\nexport default injectIntl(MessagesView);\n","// The <- button to be displayed in title bars.\nimport React from 'react';\n\nexport default class ButtonBack extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onBack();}}>\n        <i className=\"material-icons\">arrow_back</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class MenuContacts extends React.PureComponent {\n  render() {\n    return (\n      <div>\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onNewTopic();}}><i className=\"material-icons\">chat</i></a>\n        &nbsp;\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nexport default class MenuStart extends React.PureComponent {\n  render() {\n    return (\n        <div>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSignUp();}}><i className=\"material-icons\">person_add</i></a>\n          &nbsp;\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n        </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\nimport ButtonBack from './button-back.jsx';\nimport ContactBadges from './contact-badges.jsx';\nimport MenuContacts from './menu-contacts.jsx';\nimport MenuStart from './menu-start.jsx';\n\nimport { sanitizeImageUrl } from '../lib/utils.js';\n\nexport default class SideNavbar extends React.PureComponent {\n  render() {\n    const icon_badges = [];\n    if (this.props.trustedBadges) {\n      this.props.trustedBadges.map((b) => {\n        icon_badges.push({icon: b, color: 'badge-inv'});\n      });\n    }\n    let avatar = null;\n    if (this.props.tinode) {\n      avatar = this.props.tinode.authorizeURL(sanitizeImageUrl(this.props.avatar));\n    }\n    return (\n      <div id=\"side-caption-panel\" className=\"caption-panel\">\n        {this.props.onCancel ? <ButtonBack onBack={this.props.onCancel} /> : null}\n        {avatar ?\n          <div id=\"self-avatar\" className=\"avatar-box\">\n            <LetterTile\n              tinode={this.props.tinode}\n              avatar={avatar}\n              topic={this.props.myUserId}\n              title={this.props.title} />\n          </div>\n          :\n          null}\n        <div id=\"sidepanel-title\" className=\"panel-title\">{this.props.title}<ContactBadges badges={icon_badges}/></div>\n        {this.props.state === 'login' ?\n            <MenuStart onSignUp={this.props.onSignUp} onSettings={this.props.onSettings} /> :\n          this.props.state === 'contacts' ?\n            <MenuContacts onNewTopic={this.props.onNewTopic} onSettings={this.props.onSettings} /> :\n          null}\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport BadgeList from '../widgets/badge-list.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH } from '../config.js';\n\nfunction _clip(str, length) {\n  return str && str.substring(0, length);\n}\n\nexport default class AccountSettingsView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    this.state = {\n      fullName: _clip(me.public ? me.public.fn : undefined, MAX_TITLE_LENGTH),\n      description: _clip(me.public ? me.public.note : undefined, MAX_TOPIC_DESCRIPTION_LENGTH),\n      avatar: makeImageUrl(me.public ? me.public.photo : null)\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          <a href=\"#\" className=\"flat-button float-right\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('general');}}>\n            <i className=\"material-icons\">edit</i>&nbsp;\n            <FormattedMessage id=\"button_edit\" defaultMessage=\"Edit\" description=\"Call to action [Edit]\" />\n          </a>\n          <center>\n            <AvatarUpload\n              tinode={this.props.tinode}\n              avatar={this.state.avatar}\n              readOnly={true}\n              uid={this.props.myUserId}\n              title={this.state.fullName} />\n          </center>\n          <div className=\"group\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n                description=\"Label for full name editing\" />\n            </label>\n            <div className=\"large ellipsized\">{this.state.fullName}</div>\n          </div>\n          <div className=\"group\">\n            <label className=\"small\"><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n              description=\"Label for user address (ID)\" /></label>&nbsp;\n            <tt>{this.props.myUserId}</tt>\n          </div>\n          <div className=\"group\">\n            <BadgeList trustedBadges={this.props.trustedBadges} />\n          </div>\n          {this.state.description ?\n            <div className=\"group\">\n              <label className=\"small\">\n                <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                  description=\"Label for editing topic description\" />\n              </label>\n              <div>{this.state.description}</div>\n            </div> : null}\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('notif');}}>\n            <i className=\"material-icons\">notifications</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_notifications\"\n              defaultMessage=\"Notifications\" description=\"Sidepanel title for AccNotificationsView.\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('security');}}>\n            <i className=\"material-icons\">security</i>&nbsp;<FormattedMessage id=\"button_security\"\n              defaultMessage=\"Security\" description=\"Navigaton button for security panel.\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('support');}}>\n            <i className=\"material-icons\">contact_support</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_support\"\n              defaultMessage=\"Support\" description=\"Sidepanel title for AccSupportView.\" />\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","/* ContactsView holds all contacts-related stuff */\nimport React from 'react';\nimport { FormattedMessage, defineMessages } from 'react-intl';\n\nimport ContactList from '../widgets/contact-list.jsx';\n\nimport { updateFavicon } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  archived_contacts_title: {\n    id: \"archived_contacts\",\n    defaultMessage: \"Archived contacts ({count})\",\n    description: \"Label for archived chats\"\n  }\n});\n\nexport default class ContactsView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAction = this.handleAction.bind(this);\n\n    this.state = ContactsView.deriveStateFromProps(props);\n  }\n\n  static deriveStateFromProps(props) {\n    const contacts = [];\n    let unreadThreads = 0;\n    let archivedCount = 0;\n    props.chatList.map((c) => {\n      const blocked = c.acs && !c.acs.isJoiner();\n      // Show only blocked contacts only when props.blocked == true.\n      if (blocked && props.blocked) {\n        contacts.push(c);\n      }\n      if (blocked || props.blocked) {\n        return;\n      }\n\n      if (c.private && c.private.arch) {\n        if (props.archive) {\n          contacts.push(c);\n        } else {\n          archivedCount ++;\n        }\n      } else if (!props.archive) {\n        contacts.push(c);\n        unreadThreads += c.unread > 0 ? 1 : 0;\n      }\n    });\n\n    contacts.sort((a, b) => {\n      return (b.touched || 0) - (a.touched || 0);\n    });\n\n    if (archivedCount > 0) {\n      contacts.push({\n        action: 'archive',\n        title: messages.archived_contacts_title,\n        values: {count: archivedCount}\n      });\n    }\n\n    return {\n      contactList: contacts,\n      unreadThreads: unreadThreads\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chatList != this.props.chatList ||\n        prevProps.archive != this.props.archive ||\n        prevProps.blocked != this.props.blocked) {\n      const newState = ContactsView.deriveStateFromProps(this.props);\n      this.setState(newState);\n      if (newState.unreadThreads != prevState.unreadThreads) {\n        updateFavicon(newState.unreadThreads);\n      }\n    }\n  }\n\n  handleAction(action_ignored) {\n    this.props.onShowArchive();\n  }\n\n  render() {\n    return (\n      <FormattedMessage id=\"contacts_not_found\"\n        defaultMessage=\"You have no chats<br />¯∖_(ツ)_/¯\"\n        description=\"HTML message shown in ContactList when no contacts are found\">{\n        (no_contacts) => <ContactList\n          tinode={this.props.tinode}\n          connected={this.props.connected}\n          contacts={this.state.contactList}\n          emptyListMessage={no_contacts}\n          topicSelected={this.props.topicSelected}\n          myUserId={this.props.myUserId}\n          showOnline={true}\n          showUnread={true}\n          onTopicSelected={this.props.onTopicSelected}\n          showContextMenu={this.props.showContextMenu}\n          onAction={this.handleAction} />\n      }</FormattedMessage>\n    );\n  }\n};\n","// Helper functions for storing values in localStorage.\n// By default localStorage can store only strings, not objects or other types.\n\nexport default class LocalStorageUtil {\n  // Replace old object with the new one.\n  static setObject(key, value) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n\n  // Get stored object.\n  static getObject(key) {\n    const value = localStorage.getItem(key);\n    return value && JSON.parse(value);\n  }\n\n  // Partially or wholly update stored object.\n  static updateObject(key, value) {\n    const oldVal = this.getObject(key);\n    this.setObject(key, Object.assign(oldVal || {}, value));\n  }\n\n  // Just a wrapper.\n  static removeItem(key) {\n    localStorage.removeItem(key);\n  }\n}\n","// Account registration.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport { theCard } from '../lib/utils.js';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class CreateAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: '',\n      password: '',\n      email: '',\n      fn: '', // full/formatted name\n      imageDataUrl: null,\n      errorCleared: false,\n      saveToken: LocalStorageUtil.getObject('keep-logged-in')\n    };\n\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(password) {\n    this.setState({password: password});\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value})\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleToggleSaveToken() {\n    LocalStorageUtil.setObject('keep-logged-in', !this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({errorCleared: false});\n    this.props.onCreateAccount(\n      this.state.login.trim(),\n      this.state.password.trim(),\n      theCard(this.state.fn.trim().substring(0, MAX_TITLE_LENGTH), this.state.imageDataUrl),\n      {'meth': 'email', 'val': this.state.email});\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form className=\"panel-form-column\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n              description=\"Placeholer for username/login\">{\n              (login_prompt) => <input type=\"text\" placeholder={login_prompt} autoComplete=\"user-name\"\n                value={this.state.login} onChange={this.handleLoginChange} required autoFocus />\n            }</FormattedMessage>\n            <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n              description=\"Placeholder/prompt for entering password\">{\n              (password_prompt) => <VisiblePassword placeholder={password_prompt} autoComplete=\"new-password\"\n                value={this.state.password} onFinished={this.handlePasswordChange}\n                required={true} />\n            }</FormattedMessage>\n          </div>\n          <AvatarUpload\n            tinode={this.props.tinode}\n            onImageChanged={this.handleImageChanged}\n            onError={this.props.onError} />\n        </div>\n        <div  className=\"panel-form-row\">\n          <FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n            description=\"Input placeholder for person's full name\">{\n            (full_name_prompt) => <input type=\"text\" placeholder={full_name_prompt} autoComplete=\"name\"\n              value={this.state.fn} onChange={this.handleFnChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <FormattedMessage id=\"email_prompt\" defaultMessage=\"Email, e.g. jdoe@example.com\"\n            description=\"Input placeholder for email entry\">{\n            (email_prompt) => <input type=\"email\" placeholder={email_prompt} autoComplete=\"email\"\n              value={this.state.email} onChange={this.handleEmailChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n            description=\"Label for a checkbox\">{\n            (stay_logged_in) => <label htmlFor=\"save-token\">&nbsp;{stay_logged_in}</label>\n          }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_up\" defaultMessage=\"Sign up\"\n              description=\"Create account button [Sign Up]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\n\nexport default class EditAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckboxClick = this.handleCheckboxClick.bind(this);\n  }\n\n  handleCheckboxClick(what, checked) {\n    if (what == 'sound') {\n      this.props.onToggleMessageSounds(checked);\n    } else if (what == 'alert') {\n      this.props.onTogglePushNotifications(checked);\n    } else if (what == 'incognito') {\n      this.props.onToggleIncognitoMode(checked);\n    }\n  }\n\n  render() {\n    return (\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"message-sound\">\n              <FormattedMessage id=\"label_message_sound\" defaultMessage=\"Message sound:\"\n                description=\"Label for message sounds toggle\" />\n            </label>\n            <CheckBox name=\"sound\" id=\"message-sound\"\n              checked={this.props.messageSounds} onChange={this.handleCheckboxClick} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"desktop-alerts\">\n            {this.props.desktopAlertsEnabled ?\n              <FormattedMessage id=\"label_push_notifications\" defaultMessage=\"Notification alerts:\"\n                description=\"Label for push notifications switch\" />\n              :\n              <FormattedMessage id=\"label_push_notifications_disabled\"\n                defaultMessage=\"Notification alerts (requires HTTPS):\"\n                description=\"Label for push notifications switch\" />\n            }\n            </label>\n            <CheckBox name=\"alert\" id=\"desktop-alerts\"\n              checked={this.props.desktopAlerts}\n              onChange={this.props.desktopAlertsEnabled ? this.handleCheckboxClick : null} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"incognito-mode\">\n              <FormattedMessage id=\"label_incognito_mode\" defaultMessage=\"Incognito mode:\"\n                description=\"Label for incognito mode toggle\" />\n            </label>\n            <CheckBox name=\"incognito\" id=\"incognito-mode\"\n              checked={this.props.incognitoMode} onChange={this.handleCheckboxClick} />\n          </div>\n        </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\n\nconst messages = defineMessages({\n  delete_account: {\n    id: 'delete_account',\n    defaultMessage: 'Delete account',\n    description: 'Title for delete account warning'\n  },\n  delete_account_warning: {\n    id: 'delete_account_warning',\n    defaultMessage: 'Are you sure you want to delete your account? It cannot be undone.',\n    description: 'Warning message when deleting an account'\n  }\n});\n\nclass AccSecurityView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    let blockedCount = 0;\n    me.contacts((c) => {\n      if (c.acs && !c.acs.isJoiner()) {\n        blockedCount ++;\n      }\n    });\n    const defacs = me.getDefaultAccess();\n    this.state = {\n      auth: defacs ? defacs.auth : null,\n      anon: defacs ? defacs.anon : null,\n      showPermissionEditorFor: undefined,\n      blockedCount: blockedCount,\n    };\n\n    this.handlePasswordUpdate = this.handlePasswordUpdate.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n  }\n\n  handlePasswordUpdate(pwd) {\n    this.setState({password: pwd});\n    this.props.onUpdatePassword(pwd);\n  }\n\n  handleLaunchPermissionsEditor(which) {\n    this.setState({\n      showPermissionEditorFor: which,\n      editedPermissions: this.state[which]\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handlePermissionsChanged(perm) {\n    let defacs = {};\n    defacs[this.state.showPermissionEditorFor] = perm;\n    this.props.onUpdateAccountDesc('me', undefined, undefined, defacs);\n\n    let newState = {showPermissionEditorFor: undefined};\n    newState[this.state.showPermissionEditorFor] = perm;\n    this.setState(newState);\n  }\n\n  handleDeleteAccount(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.delete_account), // title\n      formatMessage(messages.delete_account_warning), // content\n      (() => { this.props.onDeleteAccount(); }), // onConfirm\n      null, // use default text \"OK\"\n      true, // Show Reject button\n      null  // use default text \"Cancel\"\n    );\n  }\n\n  render() {\n    return (\n      <React.Fragment>{this.state.showPermissionEditorFor ?\n        <PermissionsEditor\n          mode={this.state.editedPermissions}\n          skip=\"O\"\n          onSubmit={this.handlePermissionsChanged}\n          onCancel={this.handleHidePermissionsEditor} />\n        :\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_password\" defaultMessage=\"Password\"\n                  description=\"Label for password editing\" />\n            </label>\n            <div>\n              <FormattedMessage id=\"password_unchanged_prompt\" defaultMessage=\"Unchanged\"\n                description=\"Message in editor while password is unchanged\">{\n                (password_unchanged) => <InPlaceEdit\n                  placeholder={password_unchanged}\n                  type=\"password\"\n                  onFinished={this.handlePasswordUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <a href=\"#\" className=\"danger flat-button\" onClick={(e) => {e.preventDefault(); this.props.onLogout();}}>\n              <i className=\"material-icons\">exit_to_app</i> &nbsp;<FormattedMessage id=\"button_logout\"\n                defaultMessage=\"Logout\" description=\"Button [Logout]\" />\n            </a>\n            <a href=\"#\" className=\"danger flat-button\" onClick={(e) => {this.handleDeleteAccount(e);}}>\n              <i className=\"material-icons\">delete</i> &nbsp;<FormattedMessage id=\"button_delete_account\"\n                defaultMessage=\"Delete account\" description=\"Button [Delete account]\" />\n            </a>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <div>\n              <label className=\"small\">\n                <FormattedMessage id=\"label_default_access_mode\" defaultMessage=\"Default access mode:\"\n                description=\"Label for default access mode\" />\n              </label>\n            </div>\n            <div className=\"quoted\">\n              <div>Auth: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>{this.state.auth}</tt></div>\n              <div>Anon: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>{this.state.anon}</tt></div>\n            </div>\n          </div>\n          {this.state.blockedCount > 0 ?\n            <>\n              <div className=\"hr\" />\n              <div className=\"panel-form-row\">\n                <i className=\"material-icons\">block</i>&nbsp;\n                <a href=\"#\" className=\"gray\" onClick={(e) => {e.preventDefault(); this.props.onShowBlocked();}}>\n                  <FormattedMessage id=\"blocked_contacts_link\" defaultMessage=\"Blocked contacts ({count})\"\n                    values={{ count: this.state.blockedCount }} description=\"Blocked contacts link\" />\n                </a>\n              </div>\n            </>\n            : null }\n        </div>\n      }</React.Fragment>\n    );\n  }\n};\n\nexport default injectIntl(AccSecurityView);\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME, LINK_CONTACT_US, LINK_PRIVACY_POLICY, LINK_TERMS_OF_SERVICE } from '../config.js';\n\nexport default class AccSupportView extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          <a href={LINK_CONTACT_US} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">email</i> &nbsp;<FormattedMessage id=\"link_contact_us\"\n              defaultMessage=\"Contact Us\" description=\"Ancor text for contacting us by email\" />\n          </a>\n          <a href={LINK_TERMS_OF_SERVICE} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">description</i> &nbsp;<FormattedMessage id=\"link_terms_of_service\"\n              defaultMessage=\"Terms of Service\" description=\"Ancor text for terms of service link\" />\n          </a>\n          <a href={LINK_PRIVACY_POLICY} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">policy</i> &nbsp;<FormattedMessage id=\"link_privacy_policy\"\n              defaultMessage=\"Privacy Policy\" description=\"Ancor text for privacy policy link\" />\n          </a>\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\"\n              description=\"Label for a client version\" /></label>\n            {APP_NAME}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_sdk\" defaultMessage=\"SDK:\" /></label>\n            {Tinode.getLibrary()}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\"\n              description=\"Label for a server version\" /></label>\n            {this.props.serverVersion}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server_address\" defaultMessage=\"Server address:\" /></label>\n            {this.props.serverAddress}\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","// Login form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\n\nexport default class LoginView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: props.login,\n      password: '',\n      hostName: props.serverAddress,\n      saveToken: props.persist\n    };\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  handleToggleSaveToken() {\n    this.props.onPersistenceChange(!this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onLogin(this.state.login.trim(), this.state.password.trim());\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form id=\"login-form\" onSubmit={this.handleSubmit}>\n        <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n          description=\"Placeholer for username/login\">\n        {\n          (login_prompt) => <input type=\"text\" id=\"inputLogin\"\n            placeholder={login_prompt}\n            autoComplete=\"username\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"none\"\n            value={this.state.login}\n            onChange={this.handleLoginChange}\n            required autoFocus />\n        }\n        </FormattedMessage>\n        <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n          description=\"Placeholder/prompt for entering password\">\n        {\n          (password_prompt) => <VisiblePassword type=\"password\" id=\"inputPassword\"\n            placeholder={password_prompt}\n            autoComplete=\"current-password\"\n            value={this.state.password}\n            onChange={this.handlePasswordChange}\n            required={true} />\n        }\n        </FormattedMessage>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <label htmlFor=\"save-token\">&nbsp;\n            <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n              description=\"Label for a checkbox\" />\n          </label>\n          <a href=\"#reset\">\n            <FormattedMessage id=\"forgot_password_link\" defaultMessage=\"Forgot password?\"\n              description=\"Link to Reset password form\" />\n          </a>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_in\" defaultMessage=\"Sign in\"\n              description=\"Button [Sign In]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n/* END Login */\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  invalid_id: {\n    id: 'error_invalid_id',\n    defaultMessage: 'Invalid ID',\n    description: 'Error message'\n  }\n});\n\nclass NewTopicById extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      groupId: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({groupId: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.groupId) {\n      const name = this.state.groupId.trim();\n      const prefix = name.substr(0, 3);\n      if (name.length > 3 && ['usr', 'grp', 'chn'].includes(prefix)) {\n        this.props.onSubmit(name);\n      } else {\n        this.props.onError(this.props.intl.formatMessage(messages.invalid_id), 'err');\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"group_user_id_prompt\" defaultMessage=\"Group or User ID\"\n          description=\"Prompt for entering user or group ID\">{\n          (prompt) => <input type=\"text\" placeholder={prompt}\n            value={this.state.groupId} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required autoFocus />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_subscribe\" defaultMessage=\"Subscribe\"\n              description=\"Button [Subscribe]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicById);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from './avatar-upload.jsx';\nimport CheckBox from './checkbox.jsx';\nimport TagManager from './tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH } from '../config.js';\n\nexport default class NewTopicGroup extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.fullName = React.createRef();\n\n    this.state = {\n      fullName: '', // full/formatted name\n      private: '',\n      description: '',\n      imageDataUrl: null,\n      tags: [],\n      isChannel: false\n    };\n\n    this.handleFieldEdit = this.handleFieldEdit.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleTagsChanged = this.handleTagsChanged.bind(this);\n    this.handleChannelToggle = this.handleChannelToggle.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    // this.fullName.current.focus();\n  }\n\n  handleFieldEdit(name, e) {\n    this.setState({[name]: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleTagsChanged(tags) {\n    this.setState({tags: tags});\n  }\n\n  handleChannelToggle() {\n    this.setState({isChannel: !this.state.isChannel});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const fn = this.state.fullName.trim().substring(0, MAX_TITLE_LENGTH);\n    const comment = this.state.private.trim().substring(0, MAX_TITLE_LENGTH);\n    const description = this.state.description.trim().substring(0, MAX_TOPIC_DESCRIPTION_LENGTH);\n    if (fn) {\n      this.props.onSubmit(fn, description, this.state.imageDataUrl, comment, this.state.tags, this.state.isChannel);\n    }\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n    return (\n      <form className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-column\">\n          <center>\n            <AvatarUpload\n              tinode={this.props.tinode}\n              onError={this.props.onError}\n              onImageChanged={this.handleImageChanged} />\n          </center>\n          <div className=\"group\">\n            <label className=\"small\" htmlFor=\"new-topic-fn\">\n              <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                description=\"Label for editing topic name\" />\n            </label>\n            <FormattedMessage id=\"topic_name_editing_placeholder\" defaultMessage=\"Freeform name of the group\"\n              description=\"Prompt for entering topic name\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-fn\" placeholder={placeholder}\n                ref={this.fullName} value={this.state.fullName} onChange={this.handleFieldEdit.bind('fullName')}\n                autoFocus required tabIndex={0} />\n            }</FormattedMessage>\n          </div>\n          <div className=\"group\">\n            <label className=\"small\" htmlFor=\"new-topic-priv\">\n              <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                description=\"Label for editing 'private'\" />\n            </label>\n            <FormattedMessage id=\"private_editing_placeholder\" defaultMessage=\"Visible to you only\"\n              description=\"Placeholder for editing 'private'\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-priv\" placeholder={placeholder}\n                value={this.state.private} onChange={this.handleFieldEdit.bind('private')} tabIndex={1} />\n            }</FormattedMessage>\n          </div>\n          <div className=\"group\">\n            <label className=\"small\" htmlFor=\"new-topic-desc\">\n              <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                description=\"Label for editing topic description\" />\n            </label>\n            <FormattedMessage id=\"description_editing_placeholder\" defaultMessage=\"Description (optional)\"\n              description=\"Placeholder for editing topic description\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-desc\" placeholder={placeholder}\n                value={this.state.description} onChange={this.handleFieldEdit.bind('description')} tabIndex={2} />\n            }</FormattedMessage>\n          </div>\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox checked={this.state.isChannel} tabIndex={3} onChange={this.handleChannelToggle} />&nbsp;\n          <label onClick={this.handleChannelToggle}><FormattedMessage id=\"channel_prompt\"\n            defaultMessage=\"This is a channel\"\n            description=\"Checkbox label when creating a channel\" /></label>\n        </div>\n        <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (search & discovery)\"\n          description=\"Section title for TagManager\">{\n          (title) => <TagManager\n            tinode={this.props.tinode}\n            tags={this.state.tags}\n            activated={true}\n            onTagsChanged={this.handleTagsChanged}\n            tabIndex={4}\n            title={title} />\n        }</FormattedMessage>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses}>\n            <FormattedMessage id=\"button_create\" defaultMessage=\"Create\"\n              description=\"Button [Create]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nexport default class SearchContacts extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      edited: false,\n      search: ''\n    };\n\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  componentWillUnmount() {\n    if (this.state.edited) {\n      this.setState({search: '', edited: false});\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n  }\n\n  handleSearchChange(e) {\n    this.setState({search: e.target.value});\n  }\n\n  handleSearch(e) {\n    e.preventDefault();\n    var query = this.state.search.trim();\n    this.setState({edited: (query.length > 0)});\n    this.props.onSearchContacts(query.length > 0 ? query : Tinode.DEL_CHAR);\n  }\n\n  handleClear(e) {\n    e.preventDefault();\n    if (this.state.edited) {\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n    this.setState({search: '', edited: false});\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Enter') {\n      this.handleSearch(e);\n    } else if (e.key === 'Escape') {\n      this.handleClear();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <i className=\"material-icons search\">search</i>\n          <FormattedMessage id=\"search_placeholder\" defaultMessage=\"List like email:alice@example.com, tel:17025550003...\"\n            description=\"Placeholder in contacts search field\">{\n            (search_placeholder) => <input className=\"search\" type=\"text\"\n              placeholder={search_placeholder}\n              value={this.state.search} onChange={this.handleSearchChange}\n              onKeyDown={this.handleKeyDown} required autoFocus />\n          }</FormattedMessage>\n          <a href=\"#\" onClick={this.handleClear}>\n            <i className=\"material-icons\">close</i>\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","// Create new topic and invite users or send an invite.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport ContactList from '../widgets/contact-list.jsx';\nimport NewTopicById from '../widgets/new-topic-by-id.jsx';\nimport NewTopicGroup from '../widgets/new-topic-group.jsx';\nimport SearchContacts from '../widgets/search-contacts.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\nimport { theCard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  search_for_contacts: {\n    id: \"search_for_contacts\",\n    defaultMessage: \"Use search to find contacts\",\n    description: \"Text shown in contacts view when user entered no search query.\"\n  },\n  search_no_results: {\n    id: \"search_no_results\",\n    defaultMessage: \"Search returned no results\",\n    description: \"Text shown in contacts view when query returned no results.\"\n  }\n});\n\nclass NewTopicView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tabSelected: 'p2p',\n      searchQuery: null\n    };\n\n    this.handleTabClick = this.handleTabClick.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleNewGroupSubmit = this.handleNewGroupSubmit.bind(this);\n    this.handleGroupByID = this.handleGroupByID.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.onInitFind();\n  }\n\n  handleTabClick(e) {\n    e.preventDefault();\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'tab', e.currentTarget.dataset.id));\n    this.setState({tabSelected: e.currentTarget.dataset.id});\n  }\n\n  handleSearchContacts(query) {\n    this.props.onSearchContacts(query);\n    this.setState({searchQuery: Tinode.isNullValue(query) ? null : query});\n  }\n\n  handleContactSelected(sel) {\n    if (this.state.tabSelected === 'p2p') {\n      HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n      this.props.onCreateTopic(sel);\n    }\n  }\n\n  handleNewGroupSubmit(name, description, dataUrl, priv, tags, isChannel) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(undefined, theCard(name, dataUrl, null, description), priv, tags, isChannel);\n  }\n\n  handleGroupByID(topicName) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(topicName);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const no_contacts_placeholder = formatMessage(this.state.searchQuery ?\n      messages.search_no_results : messages.search_for_contacts);\n    return (\n      <div className=\"flex-column\">\n        <ul className=\"tabbar\">\n          <li className={this.state.tabSelected === \"p2p\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"p2p\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_find_user\" defaultMessage=\"find\"\n                description=\"Tab title Find\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"grp\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"grp\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_new_group\" defaultMessage=\"new group\"\n                description=\"Tab title New Group\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"byid\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"byid\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_group_by_id\" defaultMessage=\"by id\"\n                description=\"Tab title Find topic by ID\" />\n            </a>\n          </li>\n        </ul>\n        {this.state.tabSelected === 'grp' ?\n          <NewTopicGroup\n            tinode={this.props.tinode}\n            onSubmit={this.handleNewGroupSubmit} /> :\n          this.state.tabSelected === 'byid' ?\n            <NewTopicById\n              onSubmit={this.handleGroupByID}\n              onError={this.props.onError} /> :\n            <div className=\"flex-column\">\n              <SearchContacts\n                type=\"p2p\"\n                onSearchContacts={this.handleSearchContacts} />\n              <ContactList\n                contacts={this.props.searchResults}\n                myUserId={this.props.myUserId}\n                emptyListMessage={no_contacts_placeholder}\n                showOnline={false}\n                showUnread={false}\n                showContextMenu={false}\n                onTopicSelected={this.handleContactSelected} />\n            </div>}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicView);\n","// A password reset form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\n\nexport default class PasswordResetView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: '',\n      sent: false\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n  }\n\n  componentDidMount() {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    this.setState({token: parsed.params.token, scheme: parsed.params.scheme});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.token) {\n      this.props.onReset(this.state.scheme, this.state.password.trim(), this.state.token);\n    } else if (this.state.sent) {\n      this.props.onCancel();\n    } else {\n      const email = this.state.email.trim();\n      this.setState({email: email});\n      this.props.onRequest('email', email).then(() => {\n        this.setState({sent: true});\n      });\n    }\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  render() {\n    return (\n      <form id=\"password-reset-form\" onSubmit={this.handleSubmit}>\n        {(this.state.token && this.state.scheme) ?\n          <FormattedMessage id=\"new_password_placeholder\" defaultMessage=\"Enter new password\"\n            description=\"Placeholder for entering new password\">{\n            (placeholder) => <VisiblePassword\n              placeholder={placeholder}\n              autoComplete=\"new-password\"\n              value={this.state.password}\n              required={true} autoFocus={true}\n              onChange={this.handlePasswordChange} />\n          }</FormattedMessage>\n        : this.state.sent ?\n          <>\n            <br/>\n            <center><i className=\"material-icons huge green\">task_alt</i></center>\n            <br/>\n            <center><FormattedMessage id=\"password_reset_email_sent\"\n              defaultMessage=\"An email has been sent to {email}. Follow the directions in the email to reset your password.\"\n              values={{ email: <tt>{this.state.email}</tt> }}\n              description=\"Notification that the email with password reset instructions has been sent\" /></center>\n          </>\n        :\n          <>\n            <label htmlFor=\"inputEmail\">\n              <FormattedMessage id=\"label_reset_password\"\n                defaultMessage=\"Send a password reset email:\"\n                description=\"Label for password reset field\" />\n            </label>\n            <FormattedMessage id=\"credential_email_prompt\" defaultMessage=\"Your registration email\"\n              description=\"Placeholder for entering email\">{\n              (placeholder) => <input type=\"email\" id=\"inputEmail\"\n                placeholder={placeholder}\n                autoComplete=\"email\"\n                value={this.state.email}\n                onChange={this.handleEmailChange}\n                required autoFocus />\n            }</FormattedMessage>\n          </>\n        }\n        <div className=\"dialog-buttons\">\n          <button className=\"primary\" type=\"submit\">{\n            (this.state.token && this.state.scheme) ?\n            <FormattedMessage id=\"button_reset\" defaultMessage=\"Reset\" description=\"Button [Reset]\" />\n            : this.state.sent ?\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\"\n              description=\"Button [OK]\" />\n            :\n            <FormattedMessage id=\"button_send_request\" defaultMessage=\"Send request\"\n              description=\"Button [Send request]\" />\n          }</button>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react';\n\nimport { KNOWN_HOSTS } from '../config.js';\n\n/* Combobox for selecting host name */\n\nexport default class HostSelector extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hostName: props.serverAddress,\n      changed: false\n    };\n\n    this.handleHostNameChange = this.handleHostNameChange.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handleHostNameChange(e) {\n    this.setState({hostName: e.target.value, changed: true});\n  }\n\n  handleEditingFinished() {\n    if (this.state.changed) {\n      this.setState({changed: false});\n      this.props.onServerAddressChange(this.state.hostName.trim());\n    }\n  }\n\n  render() {\n    var hostOptions = [];\n    for (let key in KNOWN_HOSTS) {\n      let item = KNOWN_HOSTS[key];\n      hostOptions.push(\n        <option key={item} value={item} />\n      );\n    }\n    return (\n      <div className=\"panel-form-row\">\n        <input type=\"search\" id=\"host-name\" placeholder={this.props.hostName} list=\"known-hosts\"\n          className=\"quoted\" value={this.state.hostName} onChange={this.handleHostNameChange}\n          onBlur={this.handleEditingFinished} required />\n        <datalist id=\"known-hosts\">\n          {hostOptions}\n        </datalist>\n      </div>\n    );\n  }\n}\n","// Tinode config panel.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport HostSelector from '../widgets/host-selector.jsx';\n\nexport default class SettingsView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transport: props.transport || 'def',\n      serverAddress: props.serverAddress,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleTransportSelected = this.handleTransportSelected.bind(this);\n    this.handleServerAddressChange = this.handleServerAddressChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onUpdate({\n      transport: this.state.transport,\n      serverAddress: this.state.serverAddress\n    });\n  }\n\n  handleTransportSelected(e) {\n    this.setState({transport: e.currentTarget.value});\n  }\n\n  handleServerAddressChange(name) {\n    this.setState({serverAddress: name});\n  }\n\n  render() {\n    const names = {def: \"default\", ws: \"websocket\", lp: \"long polling\"};\n    const transportOptions = [];\n    ['def', 'ws', 'lp'].map((item) => {\n      const id = 'transport-' + item;\n      const name = names[item];\n      transportOptions.push(\n        <li key={item}>\n          <input type=\"radio\" id={id} name=\"transport-select\" value={item}\n            checked={this.state.transport === item}\n            onChange={this.handleTransportSelected} />\n          <label htmlFor={id}>{name}</label>\n        </li>\n      );\n    });\n\n    return (\n      <form id=\"settings-form\" className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_server_to_use\" defaultMessage=\"Server to use:\"\n              description=\"Label for server selector in SettingsView\" />\n          </label>\n        </div>\n        <HostSelector serverAddress={this.state.serverAddress}\n          onServerAddressChange={this.handleServerAddressChange} />\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_wire_transport\" defaultMessage=\"Wire transport:\"\n              description=\"Label for wire transport selection in SettingsView\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ul className=\"quoted\">\n            {transportOptions}\n          </ul>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button type=\"submit\" className=\"primary\">\n            <FormattedMessage id=\"button_update\" defaultMessage=\"Update\"\n              description=\"Button [Update]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// ValidationView: panel for confirming credentials, like email or phone.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  phone: {\n    id: 'phone_dative',\n    defaultMessage: 'phone',\n    description: \"Dative case of 'phone', i.e. 'phone' in 'by phone'\",\n  },\n  email: {\n    id: 'email_dative',\n    defaultMessage: 'email',\n    description: \"Dative case of 'email', i.e. 'email' in 'by email'\",\n  }\n});\n\nclass ValidationView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      code: props.credCode || ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({code: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    } else if (e.key == 'Escape') {\n      this.handleCancel(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.code && this.state.code.trim()) {\n      this.props.onSubmit(this.props.credMethod, this.state.code.trim());\n    }\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel();\n  }\n\n\n  render() {\n    const { formatMessage } = this.props.intl;\n    const methods = {'email': formatMessage(messages.email), 'tel': formatMessage(messages.phone)};\n    let method = methods[this.props.credMethod] || this.props.credMethod;\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\" htmlFor=\"enter-confirmation-code\">\n            <FormattedMessage id=\"enter_confirmation_code_prompt\"\n              defaultMessage=\"Enter confirmation code sent to you by {method}:\"\n              description=\"Request to enter confirmation code\"\n              values={{method: method}} />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"numeric_confirmation_code_prompt\"\n          defaultMessage=\"Numbers only\" description=\"Prompt for numeric conformation code\">{\n          (numbers_only) => <input type=\"text\" id=\"enter-confirmation-code\"\n            placeholder={numbers_only}\n            value={this.state.code} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"secondary\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_confirm\" defaultMessage=\"Confirm\" description=\"Button [Confirm]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ValidationView);\n","import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport SideNavbar from '../widgets/side-navbar.jsx';\nimport TopicCommon from '../widgets/topic-common.jsx';\n\nimport AccountSettingsView from './account-settings-view.jsx';\nimport ContactsView from './contacts-view.jsx';\nimport CreateAccountView from './create-account-view.jsx';\nimport AccNotificationsView from './acc-notifications-view.jsx';\nimport AccSecurityView from './acc-security-view.jsx';\nimport AccSupportView from './acc-support-view.jsx';\nimport LoginView from './login-view.jsx';\nimport NewTopicView from './new-topic-view.jsx';\nimport PasswordResetView from './password-reset-view.jsx';\nimport SettingsView from './settings-view.jsx';\nimport ValidationView from './validation-view.jsx';\n\n// Panel titles for translation.\nconst messages = defineMessages({\n  login: {\n    id: 'sidepanel_title_login',\n    description: 'Sidepanel title for LoginView.',\n    defaultMessage: 'Sign In'\n  },\n  register: {\n    id: 'sidepanel_title_register',\n    description: 'Sidepanel title for CreateAccountView.',\n    defaultMessage: 'Create Account'\n  },\n  settings: {\n    id: 'sidepanel_title_settings',\n    description: 'Sidepanel title for SettingsView.',\n    defaultMessage: 'Settings'\n  },\n  edit: {\n    id: 'sidepanel_title_account_settings',\n    description: 'Sidepanel title for AccountSettingsView.',\n    defaultMessage: 'Account Settings'\n  },\n  general: {\n    id: 'panel_title_general',\n    description: 'Title for TopicCommon.',\n    defaultMessage: 'General'\n  },\n  security: {\n    id: 'panel_title_security',\n    description: 'Title for TopicSecirity and AccSecurity.',\n    defaultMessage: 'Security'\n  },\n  crop: {\n    id: 'panel_title_crop',\n    description: 'Title for AvatarCropView.',\n    defaultMessage: 'Drag to Adjust'\n  },\n  notif: {\n    id: 'sidepanel_title_acc_notifications',\n    description: 'Sidepanel title for AccNotificationsView.',\n    defaultMessage: 'Notifications'\n  },\n  support: {\n    id: 'sidepanel_title_acc_support',\n    description: 'Sidepanel title for AccSupportView.',\n    defaultMessage: 'Support'\n  },\n  newtpk: {\n    id: 'sidepanel_title_newtpk',\n    description: 'Sidepanel title for NewTopicView.',\n    defaultMessage: 'Start New Chat'\n  },\n  cred: {\n    id: 'sidepanel_title_cred',\n    description: 'Sidepanel title for ValidationView.',\n    defaultMessage: 'Confirm Credentials'\n  },\n  reset: {\n    id: 'sidepanel_title_reset',\n    description: 'Sidepanel title for PasswordResetView.',\n    defaultMessage: 'Reset Password'\n  },\n  archive: {\n    id: 'sidepanel_title_archive',\n    description: 'Sidepanel title for ContactsView-Archive.',\n    defaultMessage: 'Archived Chats'\n  },\n  blocked: {\n    id: 'sidepanel_title_blocked',\n    description: 'Sidepanel title for ContactsView-Blocked.',\n    defaultMessage: 'Blocked Chats'\n  }\n});\n\nclass SidepanelView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNewTopic = this.handleNewTopic.bind(this);\n  }\n\n  handleNewTopic() {\n    this.props.onNavigate('newtpk');\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const view = this.props.state || (this.props.myUserId ? 'contacts' : 'login');\n\n    let title, avatar, badges;\n    if (view == 'contacts') {\n      title = this.props.title;\n      avatar = this.props.avatar ? this.props.avatar : true;\n      badges = this.props.trustedBadges;\n    } else {\n      title = formatMessage(messages[view]);\n      avatar = false;\n      badges = null;\n    }\n\n    let onCancel;\n    if (['login', 'contacts'].indexOf(view) == -1) {\n      onCancel = this.props.onCancel;\n    }\n\n    return (\n      <div id=\"sidepanel\" className={this.props.hideSelf ? 'nodisplay' : null}>\n        <SideNavbar\n          state={view}\n          title={title}\n          avatar={avatar}\n          tinode={this.props.tinode}\n          trustedBadges={badges}\n          myUserId={this.props.myUserId}\n          onSignUp={this.props.onSignUp}\n          onSettings={this.props.onSettings}\n          onNewTopic={this.handleNewTopic}\n          onCancel={onCancel} />\n\n        <ErrorPanel\n          level={this.props.errorLevel}\n          text={this.props.errorText}\n          action={this.props.errorAction}\n          actionText={this.props.errorActionText}\n          onClearError={this.props.onError} />\n\n        <LoadSpinner show={this.props.loadSpinnerVisible} />\n\n        {view === 'login' ?\n          <LoginView\n            login={this.props.login}\n            disabled={this.props.loginDisabled}\n            persist={this.props.persist}\n            onLogin={this.props.onLoginRequest}\n            onPersistenceChange={this.props.onPersistenceChange} /> :\n\n          view === 'register' ?\n          <CreateAccountView\n            tinode={this.props.tinode}\n            onCreateAccount={this.props.onCreateAccount}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'settings' ?\n          <SettingsView\n            transport={this.props.transport}\n            serverAddress={this.props.serverAddress}\n            onCancel={this.props.onCancel}\n            onUpdate={this.props.onGlobalSettings} /> :\n\n          view === 'edit' ?\n          <AccountSettingsView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            trustedBadges={this.props.trustedBadges}\n            onNavigate={this.props.onNavigate} /> :\n\n          (view === 'general' || view === 'crop') ?\n          <TopicCommon\n            topic=\"me\"\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            onUpdateTopicDesc={this.props.onUpdateAccountDesc}\n            onUpdateTags={this.props.onUpdateAccountTags}\n            onCredAdd={this.props.onCredAdd}\n            onCredDelete={this.props.onCredDelete}\n            onCredConfirm={this.props.onCredConfirm}\n            onError={this.props.onError} /> :\n\n          view === 'notif' ?\n          <AccNotificationsView\n            messageSounds={this.props.messageSounds}\n            desktopAlerts={this.props.desktopAlerts}\n            desktopAlertsEnabled={this.props.desktopAlertsEnabled}\n            incognitoMode={this.props.incognitoMode}\n            onTogglePushNotifications={this.props.onTogglePushNotifications}\n            onToggleMessageSounds={this.props.onToggleMessageSounds}\n            onToggleIncognitoMode={this.props.onToggleIncognitoMode} /> :\n\n          view === 'security' ?\n          <AccSecurityView\n            tinode={this.props.tinode}\n            onUpdateAccountDesc={this.props.onUpdateAccountDesc}\n            onUpdatePassword={this.props.onUpdatePassword}\n            onLogout={this.props.onLogout}\n            onDeleteAccount={this.props.onDeleteAccount}\n            onShowAlert={this.props.onShowAlert}\n            onShowBlocked={this.props.onShowBlocked} /> :\n\n          view === 'support' ?\n          <AccSupportView\n            serverAddress={this.props.serverAddress}\n            serverVersion={this.props.serverVersion} /> :\n\n          (view === 'contacts' || view == 'archive' || view == 'blocked') ?\n          <ContactsView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            connected={this.props.connected}\n            topicSelected={this.props.topicSelected}\n            archive={view == 'archive'}\n            blocked={view == 'blocked'}\n            chatList={this.props.chatList}\n            showContextMenu={this.props.showContextMenu}\n            onTopicSelected={this.props.onTopicSelected}\n            onShowArchive={this.props.onShowArchive} /> :\n\n          view === 'newtpk' ?\n          <NewTopicView\n            tinode={this.props.tinode}\n            searchResults={this.props.searchResults}\n            onInitFind={this.props.onInitFind}\n            onSearchContacts={this.props.onSearchContacts}\n            onCreateTopic={this.props.onCreateTopic}\n            onError={this.props.onError} /> :\n\n          view === 'cred' ?\n          <ValidationView\n            credCode={this.props.credCode}\n            credMethod={this.props.credMethod}\n            onSubmit={this.props.onValidateCredentials}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'reset' ?\n          <PasswordResetView\n            onRequest={this.props.onPasswordResetRequest}\n            onReset={this.props.onResetPassword}\n            onCancel={this.props.onCancel} /> :\n          null}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SidepanelView);\n","import { KNOWN_HOSTS, DEFAULT_HOST } from '../config.js';\n\n// Detect server address from the URL\nexport function detectServerAddress() {\n  let host = DEFAULT_HOST;\n  if (typeof window.location == 'object') {\n    if (window.location.protocol == 'file:' || window.location.hostname == 'localhost') {\n      host = KNOWN_HOSTS.local;\n    } else if (window.location.hostname) {\n      host = window.location.hostname + (window.location.port ? ':' + window.location.port : '');\n    }\n  }\n  return host;\n}\n\n// Detect if the page is served over HTTPS.\nexport function isSecureConnection() {\n  if (typeof window.location == 'object') {\n    return window.location.protocol == 'https:';\n  }\n  return false;\n}\n\nexport function isLocalHost() {\n  if (typeof window.location == 'object') {\n    return window.location.hostname == 'localhost';\n  }\n  return false;\n}\n","// The top-level class to hold all functionality together.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport * as firebase from 'firebase/app';\nimport 'firebase/messaging';\n\nimport Tinode from 'tinode-sdk';\n\nimport Alert from '../widgets/alert.jsx';\nimport ContextMenu from '../widgets/context-menu.jsx';\n\nimport InfoView from './info-view.jsx';\nimport MessagesView from './messages-view.jsx';\nimport SidepanelView from './sidepanel-view.jsx';\n\nimport { API_KEY, APP_NAME, DEFAULT_P2P_ACCESS_MODE, LOGGING_ENABLED,\n  MEDIA_BREAKPOINT, RECEIVED_DELAY } from '../config.js';\nimport { PACKAGE_VERSION } from '../version.js';\nimport { base64ReEncode, makeImageUrl } from '../lib/blob-helpers.js';\nimport { detectServerAddress, isLocalHost, isSecureConnection } from '../lib/host-name.js';\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { secondsToTime } from '../lib/strformat.js'\nimport { updateFavicon } from '../lib/utils.js';\n\n// Sound to play on message received.\nconst POP_SOUND = new Audio('audio/msg.mp3');\n\nconst messages = defineMessages({\n  reconnect_countdown: {\n    id: 'reconnect_countdown',\n    defaultMessage: 'Disconnected. Reconnecting in {seconds}…',\n    description: 'Message shown when an app update is available.'\n  },\n  reconnect_now: {\n    id: 'reconnect_now',\n    defaultMessage: 'Try now',\n    description: 'Prompt for reconnecting now'\n  },\n  push_init_failed: {\n    id: 'push_init_failed',\n    defaultMessage: 'Failed to initialize push notifications',\n    description: 'Error message when push notifications have failed to initialize.'\n  },\n  invalid_security_token: {\n    id: 'invalid_security_token',\n    defaultMessage: 'Invalid security token',\n    description: 'Error message when resetting password.'\n  },\n  no_connection: {\n    id: 'no_connection',\n    defaultMessage: 'No connection',\n    description: 'Warning that the user is offline.'\n  },\n  code_doesnot_match: {\n    id: 'code_doesnot_match',\n    defaultMessage: 'Code does not match',\n    description: 'Error message when the credential validation code is incorrect.'\n  },\n  menu_item_info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  }\n});\n\nclass TinodeWeb extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selfRef = React.createRef();\n\n    this.state = this.getBlankState();\n\n    this.handleResize = this.handleResize.bind(this);\n    this.handleHashRoute = this.handleHashRoute.bind(this);\n    this.handleOnline = this.handleOnline.bind(this);\n    this.checkForAppUpdate = this.checkForAppUpdate.bind(this);\n    this.handleVisibilityEvent = this.handleVisibilityEvent.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.handleLoginRequest = this.handleLoginRequest.bind(this);\n    this.handlePersistenceChange = this.handlePersistenceChange.bind(this);\n    this.handleConnected = this.handleConnected.bind(this);\n    this.handleAutoreconnectIteration = this.handleAutoreconnectIteration.bind(this);\n    this.doLogin = this.doLogin.bind(this);\n    this.handleCredentialsRequest = this.handleCredentialsRequest.bind(this);\n    this.handleLoginSuccessful = this.handleLoginSuccessful.bind(this);\n    this.handleDisconnect = this.handleDisconnect.bind(this);\n    this.tnMeMetaDesc = this.tnMeMetaDesc.bind(this);\n    this.tnMeContactUpdate = this.tnMeContactUpdate.bind(this);\n    this.tnMeSubsUpdated = this.tnMeSubsUpdated.bind(this);\n    this.resetContactList = this.resetContactList.bind(this);\n    this.tnData = this.tnData.bind(this);\n    this.tnInitFind = this.tnInitFind.bind(this);\n    this.tnFndSubsUpdated = this.tnFndSubsUpdated.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleTopicSelected = this.handleTopicSelected.bind(this);\n    this.handleHideMessagesView = this.handleHideMessagesView.bind(this);\n    this.handleSendMessage = this.handleSendMessage.bind(this);\n    this.handleNewChatInvitation = this.handleNewChatInvitation.bind(this);\n    this.handleNewAccount = this.handleNewAccount.bind(this);\n    this.handleNewAccountRequest = this.handleNewAccountRequest.bind(this);\n    this.handleUpdatePasswordRequest = this.handleUpdatePasswordRequest.bind(this);\n    this.handleUpdateAccountTagsRequest = this.handleUpdateAccountTagsRequest.bind(this);\n    this.handleToggleIncognitoMode = this.handleToggleIncognitoMode.bind(this);\n    this.handleSettings = this.handleSettings.bind(this);\n    this.handleGlobalSettings = this.handleGlobalSettings.bind(this);\n    this.handleShowArchive = this.handleShowArchive.bind(this);\n    this.handleShowBlocked = this.handleShowBlocked.bind(this);\n    this.handleToggleMessageSounds = this.handleToggleMessageSounds.bind(this);\n    this.handleCredAdd = this.handleCredAdd.bind(this);\n    this.handleCredDelete = this.handleCredDelete.bind(this);\n    this.handleCredConfirm = this.handleCredConfirm.bind(this);\n    this.initFCMessaging = this.initFCMessaging.bind(this);\n    this.togglePushToken = this.togglePushToken.bind(this);\n    this.requestPushToken = this.requestPushToken.bind(this);\n    this.handlePushMessage = this.handlePushMessage.bind(this);\n    this.handleSidepanelCancel = this.handleSidepanelCancel.bind(this);\n    this.handleStartTopicRequest = this.handleStartTopicRequest.bind(this);\n    this.handleNewTopicCreated = this.handleNewTopicCreated.bind(this);\n    this.handleTopicUpdateRequest = this.handleTopicUpdateRequest.bind(this);\n    this.handleUnarchive = this.handleUnarchive.bind(this);\n    this.handleChangePermissions = this.handleChangePermissions.bind(this);\n    this.handleTagsUpdateRequest = this.handleTagsUpdateRequest.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n    this.handleDeleteTopicRequest = this.handleDeleteTopicRequest.bind(this);\n    this.handleDeleteMessagesRequest = this.handleDeleteMessagesRequest.bind(this);\n    this.handleLeaveUnsubRequest = this.handleLeaveUnsubRequest.bind(this);\n    this.handleBlockTopicRequest = this.handleBlockTopicRequest.bind(this);\n    this.handleReportTopic = this.handleReportTopic.bind(this);\n    this.handleShowContextMenu = this.handleShowContextMenu.bind(this);\n    this.defaultTopicContextMenu = this.defaultTopicContextMenu.bind(this);\n    this.handleHideContextMenu = this.handleHideContextMenu.bind(this);\n    this.handleShowAlert = this.handleShowAlert.bind(this);\n    this.handleShowInfoView = this.handleShowInfoView.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleValidateCredentialsRequest = this.handleValidateCredentialsRequest.bind(this);\n    this.handlePasswordResetRequest = this.handlePasswordResetRequest.bind(this);\n    this.handleResetPassword = this.handleResetPassword.bind(this);\n    this.handleContextMenuAction = this.handleContextMenuAction.bind(this);\n  }\n\n  getBlankState() {\n    const settings = LocalStorageUtil.getObject('settings') || {};\n    const persist = !!LocalStorageUtil.getObject('keep-logged-in');\n\n    return {\n      connected: false,\n      // Connected and subscribed to 'me'\n      ready: false,\n      // Try to re-login on new connection.\n      autoLogin: false,\n      transport: settings.transport || null,\n      serverAddress: settings.serverAddress || detectServerAddress(),\n      serverVersion: \"no connection\",\n      // \"On\" is the default, so saving the \"off\" state.\n      messageSounds: !settings.messageSoundsOff,\n      incognitoMode: false,\n      desktopAlerts: persist && settings.desktopAlerts,\n      desktopAlertsEnabled: (isSecureConnection() || isLocalHost()) &&\n        (typeof firebase != 'undefined') && (typeof navigator != 'undefined') &&\n        (typeof FIREBASE_INIT != 'undefined'),\n      firebaseToken: persist ? LocalStorageUtil.getObject('firebase-token') : null,\n\n      applicationVisible: !document.hidden,\n\n      errorText: '',\n      errorLevel: null,\n      errorAction: undefined,\n      errorActionText: null,\n\n      sidePanelSelected: 'login',\n      sidePanelTitle: null,\n      sidePanelAvatar: null,\n      myTrustedBadges: [],\n      loadSpinnerVisible: false,\n\n      login: '',\n      password: '',\n      persist: persist,\n      myUserId: null,\n      liveConnection: navigator.onLine,\n      topicSelected: '',\n      topicSelectedOnline: false,\n      topicSelectedAcs: null,\n      newTopicParams: null,\n      loginDisabled: false,\n      displayMobile: (window.innerWidth <= MEDIA_BREAKPOINT),\n      infoPanel: undefined,\n      mobilePanel: 'sidepanel',\n\n      contextMenuVisible: false,\n      contextMenuBounds: null,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuItems: [],\n\n      // Modal alert dialog.\n      alertVisible: false,\n      alertParams: {},\n\n      // Chats as shown in the ContactsView\n      chatList: [],\n      // Contacts returned by a search query.\n      searchResults: [],\n      // Merged results of a search query and p2p chats.\n      searchableContacts: [],\n      credMethod: undefined,\n      credCode: undefined,\n      // Topic to go to after login.\n      requestedTopic: undefined\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    window.addEventListener('online', (e) => { this.handleOnline(true); });\n    window.addEventListener('offline', (e) => { this.handleOnline(false); });\n    window.addEventListener('hashchange', this.handleHashRoute);\n\n    // Process background notifications from the service worker.\n    if (typeof BroadcastChannel == 'function') {\n      const serviceWorkerChannel = new BroadcastChannel('tinode-sw');\n      serviceWorkerChannel.addEventListener('message', this.handlePushMessage);\n    } else {\n      // Safari is broken by design.\n      console.warn(\"Your browser does not support BroadcastChannel. Some features will not be available\");\n    }\n\n    // Window/tab visible or invisible for pausing timers.\n    document.addEventListener('visibilitychange', this.handleVisibilityEvent);\n\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n\n    new Promise((resolve, reject) => {\n      this.tinode = TinodeWeb.tnSetup(this.state.serverAddress, this.state.transport,\n        this.props.intl.locale, this.state.persist, resolve);\n      this.tinode.onConnect = this.handleConnected;\n      this.tinode.onDisconnect = this.handleDisconnect;\n      this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n    }).then(() => {\n      // Initialize desktop alerts.\n      if (this.state.desktopAlertsEnabled) {\n        this.initFCMessaging().then(() => {\n          if (this.state.desktopAlerts) {\n            if (!this.state.firebaseToken) {\n              this.togglePushToken(true);\n            } else {\n              this.tinode.setDeviceToken(this.state.firebaseToken);\n            }\n          }\n        }).catch(() => {\n          // do nothing: handled earlier.\n          // catch needed to pervent unnecessary logging of error.\n        });\n      }\n\n      // Parse and save the hash navigation params.\n      const parsedNav = HashNavigation.parseUrlHash(window.location.hash);\n\n      // Read contacts from cache.\n      this.resetContactList();\n\n      const token = this.state.persist ? LocalStorageUtil.getObject('auth-token') : undefined;\n      if (token) {\n        this.setState({autoLogin: true});\n\n        // When reading from storage, date is returned as string.\n        token.expires = new Date(token.expires);\n        this.tinode.setAuthToken(token);\n        this.tinode.connect().catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n      }\n\n      // Save possible topic name and navigate to blank state.\n      this.setState({requestedTopic: parsedNav.path[1]});\n      HashNavigation.navigateTo('');\n\n      this.readTimer = null;\n      this.readTimerCallback = null;\n\n      this.handleHashRoute();\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n    window.removeEventListener('hashchange', this.handleHashRoute);\n    document.removeEventListener('visibilitychange', this.handleVisibilityEvent);\n  }\n\n  // Setup transport (usually websocket) and server address. This will terminate connection with the server.\n  static tnSetup(serverAddress, transport, locale, persistentCache, onSetupCompleted) {\n    const tinode = new Tinode({appName: APP_NAME, host: serverAddress, apiKey: API_KEY, transport: transport,\n      secure: isSecureConnection(), persist: persistentCache}, onSetupCompleted);\n    tinode.setHumanLanguage(locale);\n    tinode.enableLogging(LOGGING_ENABLED, true);\n    return tinode;\n  }\n\n  // Notifiy Tinode that a push message was received from the server.\n  handlePushMessage(data) {\n    if (data.what == 'msg' && Tinode.isChannelTopicName(data.topic)) {\n      // The last argument is a fake user Id: otherwise the update is seen as one from the current user.\n      this.tinode.oobNotification(data.topic, data.seq, 'fake-uid');\n    }\n  }\n\n  initFCMessaging() {\n    const {formatMessage, locale} = this.props.intl;\n    const onError = (msg, err) => {\n      console.error(msg, err);\n      this.handleError(formatMessage(messages.push_init_failed), 'err');\n      this.setState({desktopAlertsEnabled: false});\n    }\n\n    try {\n      this.fbPush = firebase.initializeApp(FIREBASE_INIT, APP_NAME).messaging();\n      this.fbPush.usePublicVapidKey(FIREBASE_INIT.messagingVapidKey);\n\n      return navigator.serviceWorker.register('/service-worker.js').then((reg) => {\n        this.checkForAppUpdate(reg);\n        this.fbPush.useServiceWorker(reg);\n        reg.active.postMessage(JSON.stringify({locale: locale, version: PACKAGE_VERSION}));\n\n        // Google could not be bothered to mention that onTokenRefresh is never called.\n        this.fbPush.onTokenRefresh(() => {\n          this.requestPushToken();\n        });\n\n        // Handhe FCM pushes\n        // (a) for channels always,\n        // (b) pushes when the app is in foreground but has not focus.\n        this.fbPush.onMessage(payload => { this.handlePushMessage(payload.data); });\n\n        return reg;\n      }).catch((err) => {\n        // registration failed :(\n        onError(\"Failed to register service worker:\", err);\n        return Promise.reject(err);\n      });\n    } catch (err) {\n      onError(\"Failed to initialize push notifications\", err);\n      return Promise.reject(err);\n    }\n  }\n\n  handleResize() {\n    const mobile = document.documentElement.clientWidth <= MEDIA_BREAKPOINT;\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n    if (this.state.displayMobile != mobile) {\n      this.setState({displayMobile: mobile});\n    }\n  }\n\n  // Check if a newer version of TinodeWeb app is available at the server.\n  checkForAppUpdate(reg) {\n    reg.onupdatefound = () => {\n      const installingWorker = reg.installing;\n      installingWorker.onstatechange = () => {\n        if (installingWorker.state == 'installed' && navigator.serviceWorker.controller) {\n          const msg = <>\n            <FormattedMessage id=\"update_available\"\n              defaultMessage=\"Update available.\"\n              description=\"Message shown when an app update is available.\" /> <a href=\"\">\n              <FormattedMessage id=\"reload_update\"\n                defaultMessage=\"Reload\"\n                description=\"Call to action to reload application when update is available.\" />\n            </a>.</>;\n          this.handleError(msg, 'info');\n        }\n      }\n    }\n  }\n\n  // Handle for hashchange event: display appropriate panels.\n  handleHashRoute() {\n    const hash = HashNavigation.parseUrlHash(window.location.hash);\n    if (hash.path && hash.path.length > 0) {\n      // Left-side panel selector.\n      if (['register','settings','edit','notif','security','support','general','crop',\n          'cred','reset','newtpk','archive','blocked','contacts',''].includes(hash.path[0])) {\n        this.setState({sidePanelSelected: hash.path[0]});\n      } else {\n        console.warn(\"Unknown sidepanel view\", hash.path[0]);\n      }\n\n      // Topic for MessagesView selector.\n      let topicName = hash.path[1] || null;\n      if (topicName != this.state.topicSelected) {\n        if (!Tinode.topicType(topicName)) {\n          // Clear invalid topic name.\n          topicName = null;\n        }\n        const newState = {\n          topicSelected: topicName\n        };\n        const acs = this.tinode.getTopicAccessMode(topicName);\n        if (acs) {\n          newState.topicSelectedAcs = acs;\n        }\n        this.setState(newState);\n      }\n    } else {\n      // Empty hashpath\n      this.setState({sidePanelSelected: '', topicSelected: null});\n    }\n\n    // Save validation credentials, if available.\n    if (hash.params.method) {\n      this.setState({ credMethod: hash.params.method });\n    }\n    if (hash.params.code) {\n      this.setState({ credCode: hash.params.code });\n    }\n\n    // Additional parameters of panels.\n    this.setState({\n      infoPanel: hash.params.info,\n      newTopicTabSelected: hash.params.tab\n    });\n  }\n\n  handleOnline(online) {\n    if (online) {\n      this.handleError();\n      clearInterval(this.reconnectCountdown);\n      this.tinode.reconnect();\n    } else {\n      this.handleError(this.props.intl.formatMessage(messages.no_connection), 'warn');\n    }\n    this.setState({liveConnection: online});\n  }\n\n  handleVisibilityEvent() {\n    this.setState({applicationVisible: !document.hidden});\n  }\n\n  handleError(err, level, action, actionText) {\n    this.setState({errorText: err, errorLevel: level, errorAction: action, errorActionText: actionText});\n  }\n\n  // User clicked Login button in the side panel.\n  handleLoginRequest(login, password) {\n    this.setState({\n      loginDisabled: true,\n      login: login,\n      password: password,\n      loadSpinnerVisible: true,\n      autoLogin: true\n    });\n    this.handleError('', null);\n\n    if (this.tinode.isConnected()) {\n      this.doLogin(login, password, {meth: this.state.credMethod, resp: this.state.credCode});\n    } else {\n      this.tinode.connect().catch((err) => {\n        // Socket error\n        this.setState({loginDisabled: false, autoLogin: false, loadSpinnerVisible: false});\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // Enable or disable saving the password and IndexedDB.\n  handlePersistenceChange(persist) {\n    if (persist) {\n      this.tinode.initStorage().then(() => {\n        LocalStorageUtil.setObject('keep-logged-in', true);\n        this.setState({persist: true});\n      });\n    } else {\n      this.tinode.clearStorage().then(() => {\n        LocalStorageUtil.setObject('keep-logged-in', false);\n        this.setState({persist: false});\n      });\n    }\n  }\n\n  // Connection succeeded.\n  handleConnected() {\n    // Just to be sure.\n    clearInterval(this.reconnectCountdown);\n    this.handleError();\n\n    const params = this.tinode.getServerInfo();\n    this.setState({\n      serverVersion: params.ver + ' ' + (params.build ? params.build : 'none')\n    });\n\n    if (this.state.autoLogin) {\n      this.doLogin(this.state.login, this.state.password, {meth: this.state.credMethod, resp: this.state.credCode});\n    }\n  }\n\n  // Called for each auto-reconnect iteration.\n  handleAutoreconnectIteration(sec, prom) {\n    clearInterval(this.reconnectCountdown);\n\n    if (sec < 0) {\n      // Clear error\n      this.handleError();\n      return;\n    }\n\n    if (prom) {\n      // Reconnecting now\n      prom.then(() => {\n        // Reconnected: clear error\n        this.handleError();\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n      return;\n    }\n\n    const {formatMessage} = this.props.intl;\n    let count = sec / 1000;\n    count = count | count;\n    this.reconnectCountdown = setInterval(() => {\n      const timeLeft = (count > 99) ? secondsToTime(count) : count;\n      this.handleError(\n        formatMessage(messages.reconnect_countdown, {seconds: timeLeft}),\n        'warn',\n        () => {\n          clearInterval(this.reconnectCountdown);\n          this.tinode.reconnect();\n        },\n        formatMessage(messages.reconnect_now)\n      );\n      count -= 1;\n    }, 1000);\n  }\n\n  // Connection lost\n  handleDisconnect(err) {\n    this.setState({\n      connected: false,\n      ready: false,\n      topicSelectedOnline: false,\n      errorText: err && err.message ? err.message : \"Disconnected\",\n      errorLevel: err && err.message ? 'err' : 'warn',\n      loginDisabled: false,\n      contextMenuVisible: false,\n      serverVersion: \"no connection\"\n    });\n  }\n\n  doLogin(login, password, cred) {\n    if (this.tinode.isAuthenticated()) {\n      // Already logged in. Go to default screen.\n      HashNavigation.navigateTo('');\n      return;\n    }\n    // Sanitize and package credentail.\n    cred = Tinode.credential(cred);\n    // Try to login with login/password. If they are not available, try token. If no token, ask for login/password.\n    let promise = null;\n    let token = this.tinode.getAuthToken();\n    if (login && password) {\n      token = null;\n      this.setState({password: null});\n      promise = this.tinode.loginBasic(login, password, cred);\n    } else if (token) {\n      promise = this.tinode.loginToken(token.token, cred);\n    }\n\n    if (promise) {\n      promise.then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text === 'validate credentials') {\n          this.setState({loadSpinnerVisible: false});\n          if (cred) {\n            this.handleError(this.props.intl.formatMessage(messages.code_doesnot_match), 'warn');\n          }\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful();\n        }\n      }).catch((err) => {\n        // Login failed, report error.\n        this.setState({\n          loginDisabled: false,\n          credMethod: undefined,\n          credCode: undefined,\n          loadSpinnerVisible: false,\n          autoLogin: false\n        });\n        this.handleError(err.message, 'err');\n        if (token) {\n          this.handleLogout();\n        }\n        HashNavigation.navigateTo('');\n      });\n    } else {\n      // No login credentials provided.\n      // Make sure we are on the login page.\n      HashNavigation.navigateTo('');\n      this.setState({loginDisabled: false});\n    }\n  }\n\n  handleCredentialsRequest(params) {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    parsed.path[0] = 'cred';\n    parsed.params['method'] = params.cred[0];\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n  }\n\n  handleLoginSuccessful() {\n    this.handleError();\n\n    // Refresh authentication token.\n    if (LocalStorageUtil.getObject('keep-logged-in')) {\n      LocalStorageUtil.setObject('auth-token', this.tinode.getAuthToken());\n    }\n\n    const goToTopic = this.state.requestedTopic;\n    // Logged in fine, subscribe to 'me' attaching callbacks from the contacts view.\n    const me = this.tinode.getMeTopic();\n    me.onMetaDesc = this.tnMeMetaDesc;\n    me.onContactUpdate = this.tnMeContactUpdate;\n    me.onSubsUpdated = this.tnMeSubsUpdated;\n    this.setState({\n      connected: true,\n      credMethod: undefined,\n      credCode: undefined,\n      myUserId: this.tinode.getCurrentUserID(),\n      autoLogin: true,\n      requestedTopic: undefined,\n    });\n    // Subscribe, fetch topic desc, the list of subscriptions. Messages are not fetched.\n    me.subscribe(\n      me.startMetaQuery().\n        withLaterSub().\n        withDesc().\n        withTags().\n        withCred().\n        build()\n      ).catch((err) => {\n        this.tinode.disconnect();\n        localStorage.removeItem('auth-token');\n        this.handleError(err.message, 'err');\n        HashNavigation.navigateTo('');\n      }).finally(() => {\n        this.setState({loadSpinnerVisible: false});\n      });\n    let urlHash = HashNavigation.setUrlSidePanel(window.location.hash, 'contacts');\n    if (goToTopic) {\n      urlHash = HashNavigation.setUrlTopic(urlHash, goToTopic);\n    }\n    HashNavigation.navigateTo(urlHash);\n  }\n\n  tnMeMetaDesc(desc) {\n    if (desc) {\n      if (desc.public) {\n        this.setState({\n          sidePanelTitle: desc.public.fn,\n          sidePanelAvatar: makeImageUrl(desc.public.photo)\n        });\n      }\n      if (desc.trusted) {\n        const badges = [];\n        for (const [key, val] of Object.entries(desc.trusted)) {\n          if (val) {\n            badges.push(key);\n          }\n        }\n        this.setState({\n          myTrustedBadges: badges,\n        });\n      }\n      if (desc.acs) {\n        this.setState({\n          incognitoMode: !desc.acs.isPresencer()\n        });\n      }\n    }\n  }\n\n  // Reactions to updates to the contact list.\n  tnMeContactUpdate(what, cont) {\n    if (what == 'on' || what == 'off') {\n      this.resetContactList();\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedOnline: (what == 'on')});\n      }\n    } else if (what == 'read') {\n      this.resetContactList();\n    } else if (what == 'msg') {\n      // Check if the topic is archived. If so, don't play a sound.\n      const topic = this.tinode.getTopic(cont.topic);\n      const archived = topic && topic.isArchived();\n\n      // New message received. Maybe the message is from the current user, then unread is 0.\n      if (cont.unread > 0 && this.state.messageSounds && !archived) {\n        // Skip update if the topic is currently open, otherwise the badge will annoyingly flash.\n        if (document.hidden || this.state.topicSelected != cont.topic) {\n          POP_SOUND.play();\n        }\n      }\n      // Reorder contact list to use possibly updated 'touched'.\n      this.resetContactList();\n    } else if (what == 'recv') {\n      // Explicitly ignoring \"recv\" -- it causes no visible updates to contact list.\n    } else if (what == 'gone' || what == 'unsub') {\n      // Topic deleted or user unsubscribed. Remove topic from view.\n      // If the currently selected topic is gone, clear the selection.\n      if (this.state.topicSelected == cont.topic) {\n        this.handleTopicSelected(null);\n      }\n      // Redraw without the deleted topic.\n      this.resetContactList();\n    } else if (what == 'acs') {\n      // Permissions changed. If it's for the currently selected topic,\n      // update the views.\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedAcs: cont.acs});\n      }\n    } else if (what == 'del') {\n      // TODO: messages deleted (hard or soft) -- update pill counter.\n    } else if (what == 'upd') {\n      // upd - handled by the SDK. Explicitly ignoring here.\n    } else {\n      // TODO(gene): handle other types of notifications:\n      // * ua -- user agent changes (maybe display a pictogram for mobile/desktop).\n      console.info(\"Unsupported (yet) presence update:\" + what + \" in: \" + cont.topic);\n    }\n  }\n\n  tnMeSubsUpdated(unused) {\n    this.resetContactList();\n  }\n\n  // Merge search results and contact list to create a single flat\n  // list of known contacts for GroupManager to use.\n  static prepareSearchableContacts(chatList, foundContacts) {\n    const merged = {};\n\n    // For chatList topics merge only p2p topics and convert them to the\n    // same format as foundContacts.\n    for (const c of chatList) {\n      if (Tinode.isP2PTopicName(c.topic)) {\n          merged[c.topic] = {\n            user: c.topic,\n            updated: c.updated,\n            public: c.public,\n            private: c.private,\n            acs: c.acs\n          };\n      }\n    }\n\n    // Add all foundCountacts if they have not been added already.\n    for (const c of foundContacts) {\n      if (!merged[c.user]) {\n        merged[c.user] = c;\n      }\n    }\n\n    return Object.values(merged);\n  }\n\n  resetContactList() {\n    const newState = {\n      chatList: []\n    };\n\n    if (!this.state.ready) {\n      newState.ready = true;\n    }\n\n    this.tinode.getMeTopic().contacts((c) => {\n      if (!c.topic && !c.user) {\n        // Contacts expect c.topic to be set.\n        c.topic = c.name;\n      }\n\n      newState.chatList.push(c);\n      if (this.state.topicSelected == c.topic) {\n        newState.topicSelectedOnline = c.online;\n        newState.topicSelectedAcs = c.acs;\n      }\n    });\n\n    const past = new Date(0);\n    newState.chatList.sort((a, b) => {\n      return (a.touched || past).getTime() - (b.touched || past).getTime();\n    });\n\n    // Merge search results and chat list.\n    newState.searchableContacts = TinodeWeb.prepareSearchableContacts(newState.chatList, this.state.searchResults);\n    this.setState(newState);\n  }\n\n  // Sending \"received\" notifications\n  tnData(data) {\n    const topic = this.tinode.getTopic(data.topic);\n    if (topic.msgStatus(data, true) >= Tinode.MESSAGE_STATUS_SENT && data.from != this.state.myUserId) {\n      clearTimeout(this.receivedTimer);\n      this.receivedTimer = setTimeout(() => {\n        this.receivedTimer = undefined;\n        topic.noteRecv(data.seq);\n      }, RECEIVED_DELAY);\n    }\n  }\n\n  /* Fnd topic: find contacts by tokens */\n  tnInitFind() {\n    const fnd = this.tinode.getFndTopic();\n    fnd.onSubsUpdated = this.tnFndSubsUpdated;\n    if (fnd.isSubscribed()) {\n      this.tnFndSubsUpdated();\n    } else {\n      fnd.subscribe(fnd.startMetaQuery().withSub().build()).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  tnFndSubsUpdated() {\n    const foundContacts = [];\n    // Don't attempt to create P2P topics which already exist. Server will reject the duplicates.\n    this.tinode.getFndTopic().contacts((s) => {\n      foundContacts.push(s);\n    });\n    this.setState({\n      searchResults: foundContacts,\n      searchableContacts: TinodeWeb.prepareSearchableContacts(this.state.chatList, foundContacts)\n    });\n  }\n\n  /** Called when the user enters a contact into the contact search field in the NewAccount panel\n    @param query {Array} is an array of contacts to search for\n   */\n  handleSearchContacts(query) {\n    const fnd = this.tinode.getFndTopic();\n    fnd.setMeta({desc: {public: query}}).then((ctrl) => {\n      return fnd.getMeta(fnd.startMetaQuery().withSub().build());\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  // User clicked on a contact in the side panel or deleted a contact.\n  handleTopicSelected(topicName) {\n    // Clear newTopicParams after use.\n    if (this.state.newTopicParams && this.state.newTopicParams._topicName != topicName) {\n      this.setState({\n        newTopicParams: null\n      });\n    }\n\n    if (topicName) {\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'topic-view',\n        infoPanel: undefined\n      });\n      // Different contact selected.\n      if (this.state.topicSelected != topicName) {\n        this.setState({\n          topicSelectedOnline: this.tinode.isTopicOnline(topicName),\n          topicSelectedAcs: this.tinode.getTopicAccessMode(topicName)\n        });\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', topicName));\n      }\n    } else {\n      // Currently selected contact deleted\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'sidepanel',\n        topicSelectedOnline: false,\n        topicSelectedAcs: null,\n        infoPanel: undefined\n      });\n\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic('', null));\n    }\n  }\n\n  // In mobile view user requested to show sidepanel\n  handleHideMessagesView() {\n    this.setState({\n      mobilePanel: 'sidepanel'\n    });\n    HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, null));\n  }\n\n  // User is sending a message, either plain text or a drafty object, possibly\n  // with attachments.\n  //  - msg - Drafty message with content\n  //  - promise - Promise to be resolved when the upload is completed\n  //  - uploader - for tracking progress\n  handleSendMessage(msg, promise, uploader, head) {\n    const topic = this.tinode.getTopic(this.state.topicSelected);\n\n    msg = topic.createMessage(msg, false);\n    // The uploader is used to show progress.\n    msg._uploader = uploader;\n\n    if (head) {\n      if (!msg.hasOwnProperty('head')) {\n        msg.head = {};\n      }\n      for (const [key, value] of Object.entries(head)) {\n        msg.head[key] = value;\n      }\n    }\n\n    if (!topic.isSubscribed()) {\n      if (!promise) {\n        promise = Promise.resolve();\n      }\n      promise = promise.then(() => { return topic.subscribe(); });\n    }\n\n    if (promise) {\n      promise = promise.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n\n    topic.publishDraft(msg, promise)\n      .then((ctrl) => {\n        if (topic.isArchived()) {\n          return topic.archive(false);\n        }\n      })\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleNewChatInvitation(topicName, action) {\n    const topic = this.tinode.getTopic(topicName);\n    let response = null;\n    switch (action) {\n      case 'accept':\n        // Accept given permissions.\n        const mode = topic.getAccessMode().getGiven();\n        response = topic.setMeta({sub: {mode: mode}});\n        if (topic.isP2PType()) {\n          // For P2P topics change 'given' permission of the peer too.\n          // In p2p topics the other user has the same name as the topic.\n          response = response.then((ctrl) => {\n            topic.setMeta({sub: {user: topicName, mode: mode}});\n          });\n        }\n        break;\n      case 'delete':\n        // Ignore invitation by deleting it.\n        response = topic.delTopic(true);\n        break;\n      case 'block':\n        // Ban the topic making futher invites impossible.\n        // Just self-ban.\n        const am = topic.getAccessMode().updateWant('-JP').getWant();\n        response = topic.setMeta({sub: {mode: am}}).then((ctrl) => {\n          return this.handleTopicSelected(null);\n        });\n        break;\n      default:\n        console.warn(\"Unknown invitation action\", '\"' + action + '\"\"');\n    }\n\n    if (response != null) {\n      response.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // User chose a Sign Up menu item.\n  handleNewAccount() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, 'register'));\n  }\n\n  // Actual registration of a new account.\n  handleNewAccountRequest(login_, password_, public_, cred_, tags_) {\n    // Clear old error, if any.\n    this.handleError();\n\n    this.tinode.connect(this.state.serverAddress)\n      .then(() => {\n        return this.tinode.createAccountBasic(login_, password_,\n          {public: public_, tags: tags_, cred: Tinode.credential(cred_)});\n      }).then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text == 'validate credentials') {\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful(this);\n        }\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleToggleIncognitoMode(on) {\n    const me = this.tinode.getMeTopic();\n    const am = me.getAccessMode().updateWant(on ? '-P' : '+P').getWant();\n    me.setMeta({sub: {mode: am}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleUpdateAccountTagsRequest(tags) {\n    this.tinode.getMeTopic().setMeta({tags: tags})\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  // User chose Settings menu item.\n  handleSettings() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'edit' : 'settings'));\n  }\n\n  // User updated global parameters.\n  handleGlobalSettings(settings) {\n    const serverAddress = settings.serverAddress || this.state.serverAddress;\n    const transport = settings.transport || this.state.transport;\n    if (this.tinode) {\n      this.tinode.clearStorage();\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.tinode = TinodeWeb.tnSetup(serverAddress, transport, this.props.intl.locale,\n      LocalStorageUtil.getObject('keep-logged-in'));\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n\n    this.setState({\n      serverAddress: serverAddress,\n      transport: transport\n    });\n    LocalStorageUtil.setObject('settings', {\n      serverAddress: serverAddress,\n      transport: transport\n    });\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, ''));\n  }\n\n  // User chose 'Archived chats'.\n  handleShowArchive() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'archive' : ''));\n  }\n\n  // User viewes 'Blocked chats'.\n  handleShowBlocked() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'blocked' : ''));\n  }\n\n  togglePushToken(enabled) {\n    if (enabled) {\n      if (!this.state.firebaseToken) {\n        const fcm = this.fbPush ?\n          Promise.resolve() :\n          this.initFCMessaging();\n        fcm.then(() => {\n          return this.fbPush.requestPermission();\n        }).then(() => {\n          this.requestPushToken();\n        }).catch((err) => {\n          console.error(\"Failed to get notification permission.\", err);\n          this.handleError(err.message, 'err');\n          this.setState({desktopAlerts: false, firebaseToken: null});\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        });\n      } else {\n        this.setState({desktopAlerts: true});\n        if (LocalStorageUtil.getObject('keep-logged-in')) {\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n        }\n      }\n    } else if (this.state.firebaseToken && this.fbPush) {\n      this.fbPush.deleteToken(this.state.firebaseToken).catch((err) => {\n        console.error(\"Unable to delete token.\", err);\n      }).finally(() => {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        localStorage.removeItem('firebase-token');\n        this.setState({desktopAlerts: false, firebaseToken: null});\n        // Inform the server that the token was deleted.\n        this.tinode.setDeviceToken(null);\n      });\n    } else {\n      this.setState({desktopAlerts: false, firebaseToken: null});\n      LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n    }\n  }\n\n  requestPushToken() {\n    this.fbPush.getToken().then((refreshedToken) => {\n      const persist = LocalStorageUtil.getObject('keep-logged-in');\n      if (refreshedToken != this.state.firebaseToken) {\n        this.tinode.setDeviceToken(refreshedToken);\n        if (persist) {\n          LocalStorageUtil.setObject('firebase-token', refreshedToken);\n        }\n      }\n      this.setState({firebaseToken: refreshedToken, desktopAlerts: true});\n      if (persist) {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n      }\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n      console.error(\"Failed to retrieve firebase token\", err);\n    });\n  }\n\n  handleToggleMessageSounds(enabled) {\n    this.setState({messageSounds: enabled});\n    LocalStorageUtil.updateObject('settings', {\n      messageSoundsOff: !enabled\n    });\n  }\n\n  handleCredAdd(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.setMeta({cred: {meth: method, val: value}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredDelete(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.delCredential(method, value).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredConfirm(method, response) {\n    this.handleCredentialsRequest({cred: [method]});\n  }\n\n  // User clicked Cancel button in Setting or Sign Up panel.\n  handleSidepanelCancel() {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    let path = '';\n    if (['security','support','general','notif'].includes(parsed.path[0])) {\n      path = 'edit';\n    } else if ('crop' == parsed.path[0]) {\n      path = 'general';\n    } else if ('blocked' == parsed.path[0]) {\n      path = 'security';\n    } else if (this.state.myUserId) {\n      path = 'contacts';\n    }\n    parsed.path[0] = path;\n    if (parsed.params) {\n      delete parsed.params.code;\n      delete parsed.params.method;\n      delete parsed.params.tab;\n    }\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n    this.setState({errorText: '', errorLevel: null});\n  }\n\n  // Sidepanel navigator. No need to bind to 'this'.\n  basicNavigator(hash) {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, hash));\n  }\n\n  // Topic info navigator. No need to bind to 'this'.\n  infoNavigator(hash) {\n    HashNavigation.navigateTo(HashNavigation.setUrlInfoPanel(window.location.hash, hash));\n  }\n\n  // Request to start a topic, new or selected from search results, or \"by ID\".\n  handleStartTopicRequest(topicName, pub, priv, tags, isChannel) {\n    // Check if topic is indeed new. If not, launch it.\n    if (topicName && this.tinode.isTopicCached(topicName)) {\n      this.handleTopicSelected(topicName);\n      return;\n    }\n\n    const params = {};\n    if (Tinode.isP2PTopicName(topicName)) {\n      // Because we are initialing the subscription, set 'want' to all permissions.\n      params.sub = {mode: DEFAULT_P2P_ACCESS_MODE};\n      // Give the other user all permissions too.\n      params.desc = {defacs: {auth: DEFAULT_P2P_ACCESS_MODE}};\n    } else {\n      topicName = topicName || this.tinode.newGroupTopicName(isChannel);\n      params.desc = {public: pub, private: {comment: priv}};\n      params.tags = tags;\n    }\n    params._topicName = topicName;\n    this.setState({newTopicParams: params}, () => {this.handleTopicSelected(topicName)});\n  }\n\n  // New topic was creted, here is the new topic name.\n  handleNewTopicCreated(oldName, newName) {\n    if (this.state.topicSelected == oldName && oldName != newName) {\n      // If the current URl contains the old topic name, replace it with new.\n      // Update the name of the selected topic first so the navigator doen't clear\n      // the state.\n      this.setState({topicSelected: newName}, () => {\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', newName));\n      });\n    }\n  }\n\n  handleTopicUpdateRequest(topicName, pub, priv, defacs) {\n    this.handleError();\n\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const params = {};\n      let attachments;\n      if (pub) {\n        if (pub.photo) {\n          if (pub.photo.ref && pub.photo.ref != Tinode.DEL_CHAR) {\n            attachments = [pub.photo.ref];\n          } else if (!pub.photo.data || pub.photo.data == Tinode.DEL_CHAR) {\n            pub.photo = Tinode.DEL_CHAR;\n          }\n        }\n        params.public = pub;\n      }\n\n      if (typeof priv == 'string') {\n        params.private = (priv === Tinode.DEL_CHAR) ?\n          Tinode.DEL_CHAR : {comment: priv};\n      }\n      if (defacs) {\n        params.defacs = defacs;\n      }\n      topic.setMeta({desc: params, attachments: attachments}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleUnarchive(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      topic.archive(false);\n    }\n  }\n\n  handleUpdatePasswordRequest(password)  {\n    this.handleError();\n\n    if (password) {\n      this.tinode.updateAccountBasic(null, this.tinode.getCurrentLogin(), password).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleChangePermissions(topicName, mode, uid) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const am = topic.getAccessMode();\n      if (uid) {\n        am.updateGiven(mode);\n        mode = am.getGiven();\n      } else {\n        am.updateWant(mode);\n        mode = am.getWant();\n      }\n      topic.setMeta({sub: {user: uid, mode: mode}}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleTagsUpdateRequest(topicName, tags) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      topic.setMeta({tags: tags}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleLogout() {\n    updateFavicon(0);\n\n    // Remove stored data.\n    localStorage.removeItem('auth-token');\n    localStorage.removeItem('firebase-token');\n    localStorage.removeItem('settings');\n    if (this.state.firebaseToken) {\n      this.fbPush.deleteToken(this.state.firebaseToken)\n    }\n\n    clearInterval(this.reconnectCountdown);\n\n    if (this.tinode) {\n      this.tinode.clearStorage();\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.setState(this.getBlankState());\n\n    this.tinode = TinodeWeb.tnSetup(this.state.serverAddress,\n      this.state.transport, this.props.intl.locale, LocalStorageUtil.getObject('keep-logged-in'));\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n    HashNavigation.navigateTo('');\n  }\n\n  handleDeleteAccount() {\n    this.tinode.delCurrentUser(true).then((ctrl) => {\n      this.handleLogout();\n    });\n  }\n\n  handleDeleteTopicRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Request to hard-delete topic.\n    topic.delTopic(true).then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleDeleteMessagesRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Request hard-delete all messages.\n    topic.delMessagesAll(true).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleLeaveUnsubRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.leave(true).then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleBlockTopicRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleReportTopic(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Publish spam report.\n    this.tinode.publish(Tinode.TOPIC_SYS, Tinode.Drafty.attachJSON(null, {\n      'action': 'report',\n      'target': topicName\n    }));\n\n    // Remove J and P permissions.\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleShowContextMenu(params, menuItems) {\n    this.setState({\n      contextMenuVisible: true,\n      contextMenuClickAt: {x: params.x, y: params.y},\n      contextMenuParams: params,\n      contextMenuItems: menuItems || this.defaultTopicContextMenu(params.topicName),\n      contextMenuBounds: this.selfRef.current.getBoundingClientRect()\n    });\n  }\n\n  defaultTopicContextMenu(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n\n    let muted = false, blocked = false, self_blocked = false, subscribed = false, deleter = false, archived = false;\n    if (topic) {\n      subscribed = topic.isSubscribed();\n      archived = topic.isArchived();\n\n      const acs = topic.getAccessMode();\n      if (acs) {\n        muted = acs.isMuted();\n        blocked = !acs.isJoiner();\n        self_blocked = !acs.isJoiner('want');\n        deleter = acs.isDeleter();\n      }\n    }\n\n    return [\n      subscribed ? {\n        title: this.props.intl.formatMessage(messages.menu_item_info),\n        handler: this.handleShowInfoView\n      } : null,\n      subscribed ? 'messages_clear' : null,\n      subscribed && deleter ? 'messages_clear_hard' : null,\n      muted ? (blocked ? null : 'topic_unmute') : 'topic_mute',\n      self_blocked ? 'topic_unblock' : 'topic_block',\n      archived ? 'topic_restore' : 'topic_archive',\n      'topic_delete'\n    ];\n  }\n\n  handleHideContextMenu() {\n    this.setState({\n      contextMenuVisible: false,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuBounds: null\n    });\n  }\n\n  handleContextMenuAction(action, promise, params) {\n    if (action == 'topic_archive') {\n      if (promise && params.topicName && params.topicName == this.state.topicSelected) {\n        promise.then(() => {\n          this.handleTopicSelected(null);\n        });\n      }\n    }\n  }\n\n  handleShowAlert(title, content, onConfirm, confirmText, onReject, rejectText) {\n    this.setState({\n      alertVisible: true,\n      alertParams: {\n        title: title,\n        content: content,\n        onConfirm: onConfirm,\n        confirm: confirmText,\n        onReject: onReject,\n        reject: rejectText\n      }\n    });\n  }\n\n  handleShowInfoView() {\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'info', 'info'));\n    this.setState({infoPanel: 'info'});\n  }\n\n  handleMemberUpdateRequest(topicName, added, removed) {\n    if (!topicName) {\n      return;\n    }\n\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    if (added && added.length > 0) {\n      added.map((uid) => {\n        topic.invite(uid, null).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n\n    if (removed && removed.length > 0) {\n      removed.map((uid) => {\n        topic.delSubscription(uid).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n  }\n\n  handleValidateCredentialsRequest(cred, code) {\n    if (this.tinode.isAuthenticated()) {\n      const me = this.tinode.getMeTopic();\n      me.setMeta({cred: {meth: cred, resp: code}})\n        .then(() => {\n          HashNavigation.navigateTo('');\n        })\n        .catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n    } else {\n      this.setState({credMethod: cred, credCode: code});\n      this.doLogin(null, null, {meth: cred, resp: code});\n    }\n  }\n\n  handlePasswordResetRequest(method, value) {\n    // If already connected, connnect() will return a resolved promise.\n    return this.tinode.connect()\n      .then(() => {\n        return this.tinode.requestResetAuthSecret('basic', method, value);\n      })\n      .catch((err) => {\n        // Socket error\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleResetPassword(scheme, newPassword, token) {\n    token = base64ReEncode(token);\n    if (!token) {\n      this.handleError(this.props.intl.formatMessage(messages.invalid_security_token), 'err');\n    } else {\n      this.tinode.connect()\n        .then(() => {\n          return this.tinode.updateAccountBasic(null, null, newPassword, {token: token});\n        })\n        .catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"app-container\" ref={this.selfRef}>\n        {this.state.contextMenuVisible ?\n          <ContextMenu\n            tinode={this.tinode}\n            bounds={this.state.contextMenuBounds}\n            clickAt={this.state.contextMenuClickAt}\n            params={this.state.contextMenuParams}\n            items={this.state.contextMenuItems}\n            hide={this.handleHideContextMenu}\n            onShowAlert={this.handleShowAlert}\n            onAction={this.handleContextMenuAction}\n            onTopicRemoved={(topicName) => {\n              if (topicName == this.state.topicSelected) {\n                this.handleTopicSelected(null);\n              }\n            }}\n            onError={this.handleError} />\n          :\n          null\n        }\n        <Alert\n          visible={this.state.alertVisible}\n          title={this.state.alertParams.title}\n          content={this.state.alertParams.content}\n          onReject={this.state.alertParams.onReject ? (() => { this.setState({alertVisible: false}); }) : null}\n          reject={this.state.alertParams.reject}\n          onConfirm={() => { this.setState({alertVisible: false}); this.state.alertParams.onConfirm(); }}\n          confirm={this.state.alertParams.confirm}\n          />\n        <SidepanelView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          displayMobile={this.state.displayMobile}\n          hideSelf={this.state.displayMobile && this.state.mobilePanel !== 'sidepanel'}\n          state={this.state.sidePanelSelected}\n          title={this.state.sidePanelTitle}\n          avatar={this.state.sidePanelAvatar}\n          trustedBadges={this.state.myTrustedBadges}\n          login={this.state.login}\n          persist={this.state.persist}\n          myUserId={this.state.myUserId}\n          loginDisabled={this.state.loginDisabled}\n          loadSpinnerVisible={this.state.loadSpinnerVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          topicSelected={this.state.topicSelected}\n          chatList={this.state.chatList}\n          credMethod={this.state.credMethod}\n          credCode={this.state.credCode}\n\n          transport={this.state.transport}\n          messageSounds={this.state.messageSounds}\n          desktopAlerts={this.state.desktopAlerts}\n          desktopAlertsEnabled={this.state.desktopAlertsEnabled}\n          incognitoMode={this.state.incognitoMode}\n          serverAddress={this.state.serverAddress}\n          serverVersion={this.state.serverVersion}\n\n          onGlobalSettings={this.handleGlobalSettings}\n          onSignUp={this.handleNewAccount}\n          onSettings={this.handleSettings}\n          onNavigate={this.basicNavigator}\n          onLoginRequest={this.handleLoginRequest}\n          onPersistenceChange={this.handlePersistenceChange}\n          onCreateAccount={this.handleNewAccountRequest}\n          onUpdateAccountDesc={this.handleTopicUpdateRequest}\n          onUpdatePassword={this.handleUpdatePasswordRequest}\n          onUpdateAccountTags={this.handleUpdateAccountTagsRequest}\n          onTogglePushNotifications={this.togglePushToken}\n          onToggleMessageSounds={this.handleToggleMessageSounds}\n          onToggleIncognitoMode={this.handleToggleIncognitoMode}\n          onCredAdd={this.handleCredAdd}\n          onCredDelete={this.handleCredDelete}\n          onCredConfirm={this.handleCredConfirm}\n          onTopicSelected={this.handleTopicSelected}\n          onCreateTopic={this.handleStartTopicRequest}\n          onLogout={this.handleLogout}\n          onDeleteAccount={this.handleDeleteAccount}\n          onShowAlert={this.handleShowAlert}\n          onCancel={this.handleSidepanelCancel}\n          onError={this.handleError}\n          onValidateCredentials={this.handleValidateCredentialsRequest}\n          onPasswordResetRequest={this.handlePasswordResetRequest}\n          onResetPassword={this.handleResetPassword}\n          onShowArchive={this.handleShowArchive}\n          onShowBlocked={this.handleShowBlocked}\n\n          onInitFind={this.tnInitFind}\n          searchResults={this.state.searchResults}\n          onSearchContacts={this.handleSearchContacts}\n\n          showContextMenu={this.handleShowContextMenu} />\n\n        <MessagesView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          ready={this.state.ready}\n          online={this.state.topicSelectedOnline}\n          acs={this.state.topicSelectedAcs}\n          displayMobile={this.state.displayMobile}\n          viewportWidth={this.state.viewportWidth}\n          viewportHeight={this.state.viewportHeight}\n          hideSelf={this.state.displayMobile &&\n            (this.state.mobilePanel !== 'topic-view' || this.state.infoPanel)}\n          topic={this.state.topicSelected}\n          myUserId={this.state.myUserId}\n          // User public.fn.\n          myUserName={this.state.sidePanelTitle}\n          serverVersion={this.state.serverVersion}\n          serverAddress={this.state.serverAddress}\n          applicationVisible={this.state.applicationVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          newTopicParams={this.state.newTopicParams}\n\n          onHideMessagesView={this.handleHideMessagesView}\n          onData={this.tnData}\n          onError={this.handleError}\n          onNewTopicCreated={this.handleNewTopicCreated}\n          showContextMenu={this.handleShowContextMenu}\n          onChangePermissions={this.handleChangePermissions}\n          onNewChat={this.handleNewChatInvitation}\n          sendMessage={this.handleSendMessage} />\n\n        {this.state.infoPanel ?\n          <InfoView\n            tinode={this.tinode}\n            connected={this.state.connected}\n            displayMobile={this.state.displayMobile}\n            topic={this.state.topicSelected}\n            searchableContacts={this.state.searchableContacts}\n            myUserId={this.state.myUserId}\n            panel={this.state.infoPanel}\n\n            errorText={this.state.errorText}\n            errorLevel={this.state.errorLevel}\n            errorAction={this.state.errorAction}\n            errorActionText={this.state.errorActionText}\n\n            onNavigate={this.infoNavigator}\n            onTopicDescUpdateRequest={this.handleTopicUpdateRequest}\n            onShowAlert={this.handleShowAlert}\n            onChangePermissions={this.handleChangePermissions}\n            onMemberUpdateRequest={this.handleMemberUpdateRequest}\n            onDeleteTopic={this.handleDeleteTopicRequest}\n            onDeleteMessages={this.handleDeleteMessagesRequest}\n            onLeaveTopic={this.handleLeaveUnsubRequest}\n            onBlockTopic={this.handleBlockTopicRequest}\n            onReportTopic={this.handleReportTopic}\n            onAddMember={this.handleManageGroupMembers}\n            onTopicTagsUpdateRequest={this.handleTagsUpdateRequest}\n            onTopicUnArchive={this.handleUnarchive}\n            onInitFind={this.tnInitFind}\n            onError={this.handleError}\n\n            showContextMenu={this.handleShowContextMenu}\n            />\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(TinodeWeb);\n","// Put all packages together.\n// Used to generate umd/index.prod.js\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { IntlProvider } from 'react-intl';\n\nimport allMessages from './messages.json';\nimport TinodeWeb from './views/tinode-web.jsx';\nimport HashNavigation from './lib/navigation.js';\n\n// Detect human language to use in the UI:\n//  Check parameters from URL hash #?hl=ru, then browser, then use 'en' as a fallback.\nconst { params } = HashNavigation.parseUrlHash(window.location.hash);\nconst language = (params && params.hl) ||\n  (navigator.languages && navigator.languages[0]) ||\n  navigator.language ||\n  navigator.userLanguage ||\n  'en';\n\n// Get the base language 'en' from a more specific 'en_GB' or 'en-US' as a partial fallback.\nconst baseLanguage = language.toLowerCase().split(/[-_]/)[0];\n\n// Try the full locale first, then the locale without the region code, fallback to 'en'.\nconst messages =\n  allMessages[language] ||\n  allMessages[baseLanguage] ||\n  allMessages.en;\n\nReactDOM.render(\n  <React.StrictMode>\n    <IntlProvider locale={language} messages={messages} textComponent={React.Fragment}>\n      <TinodeWeb />\n    </IntlProvider>\n  </React.StrictMode>,\n  document.getElementById('mountPoint')\n);\n","// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// startup\n// Load entry module and return exports\n// This entry module doesn't tell about it's top-level declarations so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[789](0, __webpack_exports__, __webpack_require__);\n"],"sourceRoot":""}