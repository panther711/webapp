{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"React\"","webpack:///external \"ReactIntl\"","webpack:///external \"Tinode\"","webpack:///external \"ReactDOM\"","webpack:///external \"firebase\"","webpack:///external [\"firebase\",\"messaging\"]","webpack:///./src/widgets/alert.jsx","webpack:///./src/version.js","webpack:///./src/config.js","webpack:///./src/lib/navigation.js","webpack:///./src/widgets/context-menu.jsx","webpack:///./src/lib/strformat.js","webpack:///./src/widgets/letter-tile.jsx","webpack:///./src/lib/blob-helpers.js","webpack:///./src/widgets/avatar-upload.jsx","webpack:///./src/widgets/checkbox.jsx","webpack:///./src/widgets/contact-badges.jsx","webpack:///./src/widgets/unread-badge.jsx","webpack:///./src/widgets/contact.jsx","webpack:///./src/widgets/contact-action.jsx","webpack:///./src/widgets/contact-list.jsx","webpack:///./src/widgets/menu-cancel.jsx","webpack:///./src/widgets/error-panel.jsx","webpack:///./src/widgets/chip.jsx","webpack:///./src/widgets/chip-input.jsx","webpack:///./src/widgets/group-manager.jsx","webpack:///./src/widgets/visible-password.jsx","webpack:///./src/widgets/in-place-edit.jsx","webpack:///./src/widgets/more-button.jsx","webpack:///./src/widgets/permissions-editor.jsx","webpack:///./src/lib/utils.js","webpack:///./src/widgets/tag-manager.jsx","webpack:///./src/views/info-view.jsx","webpack:///./src/widgets/file-progress.jsx","webpack:///./src/widgets/attachment.jsx","webpack:///./src/widgets/received-marker.jsx","webpack:///./src/widgets/uploading-image.jsx","webpack:///./src/widgets/chat-message.jsx","webpack:///./src/widgets/send-message.jsx","webpack:///./src/widgets/doc-preview.jsx","webpack:///./src/widgets/group-subs.jsx","webpack:///./src/widgets/image-preview.jsx","webpack:///./src/widgets/invitation.jsx","webpack:///./src/widgets/load-spinner.jsx","webpack:///./src/views/logo-view.jsx","webpack:///./src/views/messages-view.jsx","webpack:///./src/widgets/button-back.jsx","webpack:///./src/widgets/menu-contacts.jsx","webpack:///./src/widgets/menu-start.jsx","webpack:///./src/widgets/side-navbar.jsx","webpack:///./src/views/contacts-view.jsx","webpack:///./src/lib/local-storage.js","webpack:///./src/views/create-account-view.jsx","webpack:///./src/views/edit-account-view.jsx","webpack:///./src/views/acc-general-view.jsx","webpack:///./src/views/acc-notifications-view.jsx","webpack:///./src/views/acc-security-view.jsx","webpack:///./src/views/acc-support-view.jsx","webpack:///./src/views/login-view.jsx","webpack:///./src/widgets/new-topic-by-id.jsx","webpack:///./src/widgets/new-topic-group.jsx","webpack:///./src/widgets/search-contacts.jsx","webpack:///./src/views/new-topic-view.jsx","webpack:///./src/views/password-reset-view.jsx","webpack:///./src/widgets/host-selector.jsx","webpack:///./src/views/settings-view.jsx","webpack:///./src/views/validation-view.jsx","webpack:///./src/views/sidepanel-view.jsx","webpack:///./src/lib/host-name.js","webpack:///./src/views/tinode-web.jsx","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","React","ReactIntl","Tinode","ReactDOM","firebase","Alert","PureComponent","render","this","props","visible","className","title","content","onReject","onClick","reject","id","onConfirm","confirm","APP_NAME","KNOWN_HOSTS","hosted","local","DEFAULT_HOST","HashNavigation","hash","parts","split","params","path","substr","forEach","part","item","decodeURIComponent","url","window","location","join","args","push","length","parsed","parseUrlHash","composeUrlHash","sidepanel","topic","info","messages","defineMessages","clear_messages","clear_for_all","delete_for_all","send_retry","mute","unmute","topic_delete","topic_delete_warning","unblock","block","topic_block_warning","member_delete","archive","ContextMenu","Component","constructor","super","formatMessage","intl","handlePageClick","handleEscapeKey","handleClick","MenuItems","handler","errorHandler","onShowAlert","deleteMessages","delete","retryMessage","topicPermissionSetter","then","ctrl","onTopicRemoved","topicName","tinode","getTopic","delTopic","catch","err","message","console","log","user","delSubscription","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","e","findDOMNode","contains","target","preventDefault","stopPropagation","hide","keyCode","items","currentTarget","dataset","onAction","onError","all","hard","cancelSend","seq","delMessagesAll","delMessagesList","flushMessage","msg","createMessage","publishDraft","result","updateMode","count","menu","map","data-id","vSize","position","left","bounds","right","clickAt","x","top","bottom","y","style","injectIntl","shortDateFormat","locale","navigator","userLanguage","language","now","Date","getFullYear","getMonth","getDate","toLocaleTimeString","hour12","hour","minute","toLocaleDateString","month","day","year","bytesToHumanSize","bytes","sizes","bucket","Math","min","floor","log2","pow","round","toFixed","LetterTile","avatar","isGroup","topicType","iconColor","abs","charCodeAt","stringHash","trim","letter","charAt","alt","src","onerror","SUPPORTED_IMAGE_FORMATS","MIME_EXTENSIONS","makeImageUrl","photo","type","data","fitImageSize","width","height","maxWidth","maxHeight","forceSquare","scale","size","dstWidth","dstHeight","srcWidth","srcHeight","xoffset","yoffset","fileNameForMime","fname","mime","idx","indexOf","ext","at","lastIndexOf","substring","imageScaled","file","maxSize","onSuccess","img","Image","crossOrigin","onload","async","URL","revokeObjectURL","dim","canvas","createElement","ctx","getContext","imageSmoothingEnabled","drawImage","blob","Promise","resolve","toBlob","clearRect","createObjectURL","imageFileScaledToBase64","imageBits","toDataURL","getMimeType","quality","base64DecodedLen","imageFileToBase64","reader","FileReader","readAsDataURL","fileToBase64","blobToBase64","header","exec","AvatarUpload","state","dataUrl","handleFileUpload","componentDidUpdate","prevProps","setState","files","unused","base64bits","du","onImageChanged","randId","random","readOnly","href","uid","accept","onChange","htmlFor","CheckBox","handleChange","checked","icon_mapping","ContactBadges","badges","b","icon","color","UnreadBadge","Contact","handleContextClick","onSelected","index","showContextMenu","pageY","pageX","online","slice","icon_badges","acs","showMode","getMode","isMuted","isJoiner","showCheckmark","selected","showOnline","unread","comment","ContactAction","action","values","badge_you","badge_owner","ContactList","Array","isArray","topicSelected","contactNodes","contactsCount","contacts","filterFunc","filter","private","toLowerCase","public","fn","isChannel","isChannelTopicName","myUserId","isOwner","showUnread","connected","onTopicSelected","noScroll","dangerouslySetInnerHTML","__html","emptyListMessage","MenuCancel","onCancel","ErrorPanel","show","level","onClearError","warn","text","whiteSpace","actionText","Chip","handleCancel","invalid","noAvatar","required","ChipInput","deriveStateFromProps","input","focused","handleTextInput","removeChipAt","handleChipCancel","handleFocusGained","handleFocusLost","handleKeyDown","placeholder","chips","prompt","sortedChips","sortChips","staticMembers","chipIndex","indexChips","prevState","keep","normal","includes","concat","removed","onChipRemoved","onFocusLost","onEnter","undefined","avatarDisabled","onFocus","onBlur","onKeyDown","autoFocus","no_contacts","contacts_not_found_short","GroupManager","members","indexMembers","keepInitialMembers","requiredMember","contactFilter","noContactsMessage","selectedContacts","handleContactSelected","handleMemberRemoved","handleContactFilter","handleSubmit","delta","present","keepInitial","stat","sel","userId","status","splice","val","query","instance","added","keys","k","onSubmit","defaultMessage","doContactFiltering","VisiblePassword","handleVisibility","handeTextChange","handleEditingFinished","onFinished","setTimeout","activeElement","tabIndex","autoComplete","InPlaceEdit","active","initialValue","handleStartEditing","handlePasswordFinished","newValue","focus","event","checkValidity","fieldType","spanText","spanClass","MoreButton","open","handleToggle","onToggle","PermissionsEditor","replace","sort","names","joiner","writer","preser","approver","sharer","deleter","owner","skip","compare","userTitle","userAvatar","modeTitle","compareTitle","updateFavicon","oldIcon","getElementById","head","getElementsByTagName","newIcon","rel","removeChild","appendChild","vcard","imageDataUrl","card","dataStart","arrayEqual","a","sanitizeUrl","allowedSchemes","test","schemes","RegExp","TagManager","tags","tagInput","activated","handleTagInput","handleAddTag","handleRemoveTag","nextProps","last","tag","onTagsChanged","add_tags_prompt","defautMessage","requested","granted","edit_permissions","other_user","clear_messages_warning","delete_messages","delete_messages_warning","leave_chat","leave_chat_warning","block_contact","block_contact_warning","report_chat","report_chat_warning","InfoView","admin","muted","address","groupTopic","channel","fullName","selectedContact","access","modeGiven","modeWant","modeGiven2","modeWant2","auth","anon","contactList","showMemberPanel","showPermissionEditorFor","moreInfoExpanded","previousMetaDesc","previousSubsUpdated","previousTagsUpdated","resetSubs","resetDesc","onMetaDesc","onSubsUpdated","onTagsUpdated","handleFullNameUpdate","handlePrivateUpdate","handleImageChanged","handleMuted","handlePermissionsChanged","handleLaunchPermissionsEditor","handleHidePermissionsEditor","handleShowAddMembers","handleHideAddMembers","handleMemberUpdateRequest","handleDeleteMessages","handleLeave","handleBlock","handleReport","handleMemberSelected","handleMoreInfo","handleTagsUpdated","handleContextMenu","getType","newState","user2","subscriber","getGiven","getWant","subscribers","sub","defacs","getDefaultAccess","getAccessMode","isAdmin","isSharer","isDeleter","getMeta","startMetaQuery","withTags","build","desc","subs","onTopicDescUpdate","DEL_CHAR","ignored","onChangePermissions","perm","userPermissionsEdited","which","toEdit","toCompare","toSkip","titleEdit","titleCompare","AccessMode","encode","diff","userPermissionsTitle","userPermissionsAvatar","editedPermissions","immutablePermissions","editedPermissionsTitle","immutablePermissionsTitle","editedPermissionsSkipped","onInitFind","onMemberUpdateRequest","onDeleteMessages","onLeaveTopic","onBlockTopic","onReportTopic","onTopicTagsUpdate","menuItems","displayMobile","errorLevel","errorText","searchableContacts","private_placeholder","more","no_members","FileProgress","progress","Attachment","downloader","downloadFile","filename","mimetype","getLargeFileHelper","download","loaded","uploader","onCancelUpload","cancel","helperFunc","isUrlRelative","downloadUrl","ReceivedMarker","timestamp","received","MESSAGE_STATUS_SENDING","sending","MESSAGE_STATUS_FAILED","failed","marker","MESSAGE_STATUS_SENT","MESSAGE_STATUS_RECEIVED","MESSAGE_STATUS_READ","ChatMessage","onProgress","handleProgress","handleImagePreview","handleFormButtonClick","handleCancelUpload","onImagePreview","resp","act","ref","onFormResponse","ratio","sideClass","deleted","sequence","response","bubbleClass","fullDisplay","userFrom","attachments","mimeType","Drafty","getContentType","isValid","att","getDownloadUrl","isUploading","getEntitySize","Fragment","format","draftyFormatter","userName","notFound","el","tagName","attr","attrValue","viewportWidth","REM_SIZE","sanitizedUrl","sanitizeImageUrl","inner","Children","child","SendMessage","keypressTimestamp","getTime","handlePasteEvent","handleAttachImage","handleAttachFile","handleSend","handleKeyPress","handleMessageTyping","messageEditArea","disabled","onImageSuccess","onAttachmentSuccess","clipboardData","originalEvent","kind","getAsFile","filePasted","bits","onAttachImage","onAttachFile","acceptBlank","noInput","onSendMessage","shiftKey","onKeyPress","messaging_disabled","messagePrompt","type_new_message","attachImage","click","attachFile","display","DocPreview","handleSendDoc","caption","onClose","mimeToIcon","default","image","video","iconFromMime","GroupSubs","usersOnline","totalCount","countToShow","some","overflow","ImagePreview","handleSendImage","assignWidth","node","getBoundingClientRect","maxlength","max","Invitation","handleButtonAction","evt","LoadSpinner","LogoView","version","getLibrary","serverVersion","serverAddress","isUnconfirmed","ex","getExcessive","isPeerRestricted","ms","getMissing","MessagesView","getDerivedStateFromProps","leave","sendImageAttachment","sendFileAttachment","sendKeyPress","handleScrollReference","handleScrollEvent","handleDescChange","handleSubsUpdated","handleNewMessage","handleAllMessagesReceived","handleInfoReceipt","handleImagePostview","handleClosePreview","handleFormResponse","handleShowContextMenuMessage","handleNewChatAcceptance","handleEnablePeer","postReadNotification","clearNotificationQueue","readNotificationQueue","readNotificationTimer","messagesScroller","scrollTop","scrollHeight","scrollPosition","viewportHeight","isNewGroupTopicName","onData","onAllMessagesReceived","onInfo","onPres","applicationVisible","isSubscribed","ready","newTopic","newTopicParams","_topicName","getQuery","withLaterDesc","withLaterSub","isReader","withLaterData","withLaterDel","fetchingMessages","setQuery","subscribe","code","onNewTopicCreated","queuedMessages","pub","_sending","publishMessage","navigateTo","setUrlTopic","blankState","not_found","nextState","docPreview","imagePreview","imagePostview","typingIndicator","msgs","assign","onlineSubs","peer","p2pPeerDesc","peerMessagingDisabled","isWriter","readingBlocked","unconformed","unconfirmed","oldTopicName","oldTopic","finally","msgHasMoreMessages","getMessagesPage","setInterval","clearInterval","shift","sendAt","noteRead","setMilliseconds","getMilliseconds","isNewMessage","msgStatus","from","what","clearTimeout","keyPressTimer","KEYPRESS_DELAY","forceUpdate","sendMessage","attachJSON","parse","searchParams","set","search","messageSpecificMenuItems","onNewChat","noteKeyPress","cannot_initiate_upload","uploadCompletionPromise","upload","file_attachment_too_large","limit","insertImage","appendLineBreak","append","init","component","hideSelf","component2","messageNodes","previousFrom","chatBoxClass","nextFrom","thisFrom","isReply","deliveryStatus","userDesc","hi","ts","_uploader","lastSeen","cont","getMeTopic","getContact","isP2PTopicName","online_now","seen","last_seen","when","onHideMessagesView","ButtonBack","onBack","MenuContacts","onNewTopic","onSettings","MenuStart","onSignUp","SideNavbar","archived_contacts_title","ContactsView","handleAction","unreadThreads","archivedCount","chatList","blocked","arch","touched","action_ignored","onShowArchive","LocalStorageUtil","localStorage","setItem","JSON","stringify","getItem","oldVal","getObject","setObject","removeItem","CreateAccountView","login","password","email","errorCleared","saveToken","handleLoginChange","handlePasswordChange","handleEmailChange","handleFnChange","handleToggleSaveToken","onCreateAccount","submitClasses","login_prompt","password_prompt","full_name_prompt","email_prompt","stay_logged_in","EditAccountView","me","onBasicNavigate","AccGeneralView","credentials","getCredentials","addCredActive","addCredInvalid","newCred","previousOnTags","tnNewTags","tnCredsUpdated","handleCredChange","handleCredKeyDown","handleCredEntered","onCredsUpdated","creds","onUpdateAccount","method","asPhone","asEmail","onCredAdd","onUpdateTags","cred","meth","done","onCredConfirm","onCredDelete","full_name_placeholder","title_tag_manager","handleCheckboxClick","onToggleMessageSounds","onTogglePushNotifications","onToggleIncognitoMode","messageSounds","desktopAlertsEnabled","desktopAlerts","incognitoMode","delete_account","delete_account_warning","AccSecurityView","blockedCount","handlePasswordUpdate","handleDeleteAccount","pwd","onDeleteAccount","password_unchanged","onLogout","onShowBlocked","AccSupportView","LoginView","hostName","onLogin","autoCorrect","autoCapitalize","invalid_id","NewTopicById","groupId","NewTopicGroup","handlePrivateChange","handleTagsChanged","handleChannelToggle","SearchContacts","edited","handleSearchChange","handleSearch","handleClear","onSearchContacts","search_placeholder","search_for_contacts","search_no_results","NewTopicView","tabSelected","searchQuery","handleTabClick","handleSearchContacts","handleNewGroupSubmit","handleGroupByID","addUrlParam","isNullValue","removeUrlParam","onCreateTopic","priv","no_contacts_placeholder","searchResults","PasswordResetView","token","scheme","onReset","onRequest","reset","HostSelector","changed","handleHostNameChange","onServerAddressChange","hostOptions","list","SettingsView","transport","handleTransportSelected","handleServerAddressChange","onUpdate","def","ws","lp","transportOptions","phone","ValidationView","credCode","credMethod","numbers_only","SidepanelView","handleLoginRequested","handleNewTopic","onLoginRequest","view","errorAction","errorActionText","loadSpinnerVisible","loginDisabled","onGlobalSettings","onUpdateAccountTags","onValidateCredentials","onPasswordResetRequest","onResetPassword","detectServerAddress","host","protocol","hostname","port","isSecureConnection","POP_SOUND","Audio","reconnect_countdown","reconnect_now","push_init_failed","invalid_security_token","no_connection","code_doesnot_match","TinodeWeb","getBlankState","handleResize","handleHashRoute","handleOnline","checkForAppUpdate","handleVisibilityEvent","handleError","handleLoginRequest","handleConnected","handleAutoreconnectIteration","doLogin","handleCredentialsRequest","handleLoginSuccessful","handleDisconnect","tnMeMetaDesc","tnMeContactUpdate","tnMeSubsUpdated","resetContactList","tnData","tnInitFind","tnFndSubsUpdated","handleTopicSelected","handleHideMessagesView","handleSendMessage","handleNewChatInvitation","handleNewAccount","handleNewAccountRequest","handleUpdateAccountRequest","handleUpdateAccountTagsRequest","handleToggleIncognitoMode","handleSettings","handleGlobalSettings","handleShowArchive","handleShowBlocked","handleToggleMessageSounds","handleCredAdd","handleCredDelete","handleCredConfirm","initDesktopAlerts","togglePushToken","requestPushToken","handleSidepanelCancel","handleStartTopicRequest","handleNewTopicCreated","handleTopicUpdateRequest","handleChangePermissions","handleLogout","handleDeleteMessagesRequest","handleLeaveUnsubRequest","handleBlockTopicRequest","handleReportTopic","handleShowContextMenu","defaultTopicContextMenu","handleHideContextMenu","handleShowAlert","handleShowInfoView","handleHideInfoView","handleValidateCredentialsRequest","handlePasswordResetRequest","handleResetPassword","handleContextMenuAction","settings","autoLogin","messageSoundsOff","FIREBASE_INIT","firebaseToken","hidden","sidePanelSelected","sidePanelTitle","sidePanelAvatar","liveConnection","onLine","topicSelectedOnline","topicSelectedAcs","innerWidth","showInfoPanel","mobilePanel","contextMenuVisible","contextMenuBounds","contextMenuClickAt","contextMenuParams","contextMenuItems","alertVisible","alertParams","documentElement","clientWidth","clientHeight","tnSetup","onConnect","onDisconnect","onAutoreconnectIteration","fbPush","messaging","usePublicVapidKey","messagingVapidKey","serviceWorker","register","reg","useServiceWorker","postMessage","setDeviceToken","parsedNav","expires","setAuthToken","connect","tab","readTimer","readTimerCallback","setHumanLanguage","enableLogging","mobile","onupdatefound","installingWorker","installing","onstatechange","controller","newTopicTabSelected","isConnected","getServerInfo","ver","sec","prom","reconnectCountdown","timeLeft","seconds","secondsToTime","reconnect","isAuthenticated","credential","promise","getAuthToken","loginBasic","loginToken","onContactUpdate","getCurrentUserID","withDesc","withCred","disconnect","setUrlSidePanel","isPresencer","archived","isArchived","play","foundContacts","merged","updated","prepareSearchableContacts","receivedTimer","noteRecv","fnd","getFndTopic","withSub","setMeta","isTopicOnline","getTopicAccessMode","isP2P","am","updateWant","login_","password_","public_","cred_","tags_","createAccountBasic","updateAccountBasic","getCurrentLogin","on","onTokenRefresh","onMessage","payload","enabled","updateObject","requestPermission","deleteToken","getToken","refreshedToken","delCredential","basicNavigator","newGroupTopicName","oldName","newName","permissions","updateGiven","delCurrentUser","publish","TOPIC_SYS","self_blocked","subscribed","confirmText","rejectText","invite","requestResetAuthSecret","newPassword","str","btoa","atob","base64ReEncode","onAddMember","handleManageGroupMembers","hl","languages","baseLanguage","allMessages","en","textComponent"],"mappings":"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","file":"index.prod.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/umd/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","module.exports = React;","module.exports = ReactIntl;","module.exports = Tinode;","module.exports = ReactDOM;","module.exports = firebase;","module.exports = firebase[\"messaging\"];","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Alert extends React.PureComponent {\n  render() {\n    return this.props.visible ?\n      <div className=\"alert-container\">\n        <div className=\"alert\">\n          <div className=\"title\">{this.props.title}</div>\n          <div className=\"content\">{this.props.content}</div>\n          <div className=\"dialog-buttons\">\n            {this.props.onReject ?\n              <button className=\"outline\" onClick={this.props.onReject}>\n                {this.props.reject || <FormattedMessage id=\"button_cancel\" />}\n              </button>\n              :\n              null\n            }\n            <button className=\"blue\" onClick={this.props.onConfirm}>\n              {this.props.confirm || <FormattedMessage id=\"button_ok\" />}\n            </button>\n          </div>\n        </div>\n      </div>\n    :\n    null;\n  }\n};\n","// This is a generated file. Don't edit.\n\nexport const PACKAGE_VERSION = \"0.16.9-beta1\";\n","import { PACKAGE_VERSION } from './version.js';\n\n// Name of this application, used in the User-Agent.\nexport const APP_NAME = 'TinodeWeb/' + (PACKAGE_VERSION || '0.16');\n\n// API key. Use https://github.com/tinode/chat/tree/master/keygen to generate your own\nexport const API_KEY = 'AQEAAAABAAD_rAp4DJh05a1HAwFT3A6K';\n\n// The array of possible hosts to connect to.\nexport const KNOWN_HOSTS = {hosted: 'web.tinode.co', local: 'localhost:6060'};\n\n// Default host name and port to connect to.\nexport const DEFAULT_HOST = KNOWN_HOSTS.hosted;\n\n// Enable console logging.\nexport const LOGGING_ENABLED = true;\n\n// Minimum time between two keypress notifications, milliseconds.\nexport const KEYPRESS_DELAY = 3*1000;\n// Delay before sending a {note} for reciving a message, milliseconds.\nexport const RECEIVED_DELAY = 500;\n// Delay before sending a read notification, milliseconds.\nexport const READ_DELAY = 1000;\n\n// The shortest allowed tag length. Matches the value on the server.\nexport const MIN_TAG_LENGTH = 4;\n// The maximum number of tags allowed. Matches the value on the server.\nexport const MAX_TAG_COUNT = 16;\n\n// Access mode for P2P subscriptions initiated by the current user.\nexport const DEFAULT_P2P_ACCESS_MODE = 'JRWPS';\n// Access mode for new group topics created by the current user.\nexport const NEW_GRP_ACCESS_MODE = 'JRWPSAO';\n// Access mode for a channel.\nexport const CHANNEL_ACCESS_MODE = 'JR';\n\n// Access mode for no access.\nexport const NO_ACCESS_MODE = 'N';\n\n// Mediaquery breakpoint between desktop and mobile, in px. Should match the value\n// in @media (max-size: 640px) in base.css\nexport const MEDIA_BREAKPOINT = 640;\n// Size of css 'rem' unit in pixels. Default 1rem = 10pt = 13px.\nexport const REM_SIZE = 13;\n\n// Size of the avatar image: When an avatar image is uploaded, it's resized to\n// a square of this size.\nexport const AVATAR_SIZE = 128;\n\n// Size of the broken_image shown in MessagesView\nexport const BROKEN_IMAGE_SIZE = 32;\n\n// Number of chat messages to fetch in one call.\nexport const MESSAGES_PAGE = 24;\n\n// Maximum in-band (included directly into the message) attachment size which fits into\n// a message of 256K in size, assuming base64 encoding and 1024 bytes of overhead.\n// This is size of an object *before* base64 encoding is applied.\n// Increase this limit to a greater value in production, if desired. Also increase\n// max_message_size in server config.\n//  MAX_INBAND_ATTACHMENT_SIZE = base64DecodedLen(max_message_size) - 1024;\nexport const MAX_INBAND_ATTACHMENT_SIZE = 195584;\n\n// Absolute maximum attachment size to be used with the server = 8MB. Increase to\n// something like 100MB in production.\nexport const MAX_EXTERN_ATTACHMENT_SIZE = 1 << 23;\n\n// Maximum allowed linear dimension of an inline image in pixels. You may want\n// to adjust it to 1600 or 2400 for production.\nexport const MAX_IMAGE_DIM = 768;\n\n// Maximum number of online users to be shown in a topic title bar. Others will be\n// hidden under \"+X more\"\nexport const MAX_ONLINE_IN_TOPIC = 4;\n\n// Maximum length of user name, topic title, and private comment.\nexport const MAX_TITLE_LENGTH = 60;\n\n// Link for \"Contact Us\".\nexport const LINK_CONTACT_US = 'email:info@tinode.co';\n\n// Link to Privacy Policy.\nexport const LINK_PRIVACY_POLICY = 'https://tinode.co/privacy.html';\n\n// Link to Terms of Service.\nexport const LINK_TERMS_OF_SERVICE = 'https://tinode.co/terms.html';\n","// Utility class for hash navigation.\n\n// Parse hash as in http://www.example.com/path#hash as if it were\n// path and arguments.\nexport default class HashNavigation {\n  static parseUrlHash(hash) {\n    // Split path from args, path -> parts[0], args->path[1]\n    const parts = hash.split('?', 2);\n    const params = {};\n    let path = [];\n    if (parts[0]) {\n      path = parts[0].substr(1).split('/');\n    }\n    if (parts[1]) {\n      parts[1].split('&').forEach(function(part) {\n        let item = part.split('=');\n        if (item[0]) {\n          params[decodeURIComponent(item[0])] = decodeURIComponent(item[1]);\n        }\n      });\n    }\n    return {path: path, params: params};\n  }\n\n  static navigateTo(url) {\n    window.location.hash = url;\n  }\n\n  static composeUrlHash(path, params) {\n    let url = path.join('/');\n    const args = [];\n    for (const key in params) {\n      if (params.hasOwnProperty(key)) {\n        args.push(key + '=' + params[key]);\n      }\n    }\n    if (args.length > 0) {\n      url += '?' + args.join('&');\n    }\n    return url;\n  }\n\n  static addUrlParam(hash, key, value) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.params[key] = value;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static removeUrlParam(hash, key) {\n    const parsed = this.parseUrlHash(hash);\n    delete parsed.params[key];\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlSidePanel(hash, sidepanel) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[0] = sidepanel;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlTopic(hash, topic) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[1] = topic;\n    // Close InfoView on topic change.\n    delete parsed.params.info;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n}\n","// Context Menu: popup/dropdown menu.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { injectIntl, defineMessages } from 'react-intl';\n\nimport { REM_SIZE } from '../config.js';\nimport HashNavigation from '../lib/navigation.js';\n\nconst messages = defineMessages({\n  info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  },\n  clear_messages: {\n    id: 'menu_item_clear_messages',\n    defaultMessage: 'Clear messages',\n    description: 'Delete all messages'\n  },\n  clear_for_all: {\n    id: 'menu_item_clear_messages_for_all',\n    defaultMessage: 'Clear for All',\n    description: 'Delete all message(s) for all members'\n  },\n  'delete': {\n    id: 'menu_item_delete',\n    defaultMessage: 'Delete',\n    description: 'Delete selected messages'\n  },\n  delete_for_all: {\n    id: 'menu_item_delete_for_all',\n    defaultMessage: 'Delete for All',\n    description: 'Delete selected message(s) for all members'\n  },\n  send_retry: {\n    id: 'menu_item_send_retry',\n    defaultMessage: 'Retry',\n    description: 'Retry sending message'\n  },\n  mute: {\n    id: 'menu_item_mute',\n    defaultMessage: 'Mute',\n    description: 'Turn off notifications'\n  },\n  unmute: {\n    id: 'menu_item_unmute',\n    defaultMessage: 'Unmute',\n    description: 'Turn notifications on'\n  },\n  topic_delete: {\n    id: 'menu_item_delete_topic',\n    defaultMessage: 'Delete',\n    description: 'Delete entire topic'\n  },\n  topic_delete_warning: {\n    id: 'topic_delete_warning',\n    defaultMessage: 'Are you sure you want to delete this conversation?',\n    description: 'Alert warning when deleting entire topic'\n  },\n  unblock: {\n    id: 'menu_item_unblock',\n    defaultMessage: 'Unblock',\n    description: 'Unblock topic or user'\n  },\n  // Generic string suitable for either topic or user.\n  block: {\n    id: 'menu_item_block',\n    defaultMessage: 'Block',\n    description: 'Block topic or user'\n  },\n  topic_block_warning: {\n    id: 'topic_block_warning',\n    defaultMessage: 'Are you sure you want to block this conversation?',\n    description: 'Alert warning when blocking a topic.'\n  },\n  member_delete: {\n    id: 'menu_item_member_delete',\n    defaultMessage: 'Remove',\n    description: 'Remove user from topic'\n  },\n  archive: {\n    id: 'menu_item_archive_topic',\n    defaultMessage: 'Archive',\n    description: 'Move topic from the list of active chats to archive'\n  }\n});\n\nclass ContextMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const {formatMessage} = props.intl;\n\n    this.handlePageClick = this.handlePageClick.bind(this);\n    this.handleEscapeKey = this.handleEscapeKey.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n\n    // Preconfigured menu items.\n    this.MenuItems = {\n      'topic_info': {\n        id: 'topic_info',\n        title: formatMessage(messages.info),\n        handler: null\n      },\n      'messages_clear': {\n        id: 'messages_clear',\n        title: formatMessage(messages.clear_messages),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage({id: 'menu_item_clear_messages'}), // title\n            formatMessage({id: 'clear_messages_warning'}), // content\n            (() => { this.deleteMessages(true, false, params, errorHandler); }), // onConfirm\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'messages_clear_hard': {\n        id: 'messages_clear_hard',\n        title: formatMessage(messages.clear_for_all),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage({id: 'menu_item_clear_messages_for_all'}), // title\n            formatMessage({id: 'delete_messages_warning'}), // content\n            (() => { return this.deleteMessages(true, true, params, errorHandler); }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'message_delete': {\n        id: 'message_delete',\n        title: formatMessage(messages.delete),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, false, params, errorHandler);\n        }\n      },\n      'message_delete_hard': {\n        id: 'message_delete_hard',\n        title: formatMessage(messages.delete_for_all),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, true, params, errorHandler);\n        }\n      },\n      'menu_item_send_retry': {\n        id: 'menu_item_send_retry',\n        title: formatMessage(messages.send_retry),\n        handler: (params, errorHandler) => {\n          return this.retryMessage(params, errorHandler);\n        }\n      },\n      'topic_unmute': {\n        id: 'topic_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'topic_mute': {\n        id: 'topic_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'topic_unblock': {\n        id: 'topic_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n      'topic_block': {\n        id: 'topic_block',\n        title: formatMessage(messages.block),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage({id: 'menu_item_block'}), // title\n            formatMessage(messages.topic_block_warning), // content\n            (() => {\n              return this.topicPermissionSetter('-JP', params, errorHandler).then((ctrl) => {\n                this.props.onTopicRemoved(params.topicName);\n                return ctrl;\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_delete': {\n        id: 'topic_delete',\n        title: formatMessage(messages.topic_delete),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage({id: 'menu_item_delete_topic'}), // title\n            formatMessage(messages.topic_delete_warning), // content\n            (() => {\n              const topic = this.props.tinode.getTopic(params.topicName);\n              if (!topic) {\n                console.log(\"Topic not found: \", params.topicName);\n                return;\n              }\n              return topic.delTopic(true).catch((err) => {\n                if (errorHandler) {\n                  errorHandler(err.message, 'err');\n                }\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_archive': {\n        id: 'topic_archive',\n        title: formatMessage(messages.archive),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic) {\n            console.log(\"Topic not found: \", params.topicName);\n            return;\n          }\n          return topic.archive(true).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      // menu_item_edit_permissions is defined elsewhere.\n      'permissions': {\n        id: 'permissions',\n        title: formatMessage({id: 'menu_item_edit_permissions'}),\n        handler: null\n      },\n      'member_delete': {\n        id: 'member_delete',\n        title: formatMessage(messages.member_delete),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic || !params.user) {\n            console.log(\"Topic or user not found: '\" + params.topicName + \"', '\" + params.user + \"'\");\n            return;\n          }\n          return topic.delSubscription(params.user).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      'member_mute': {\n        id: 'member_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'member_unmute': {\n        id: 'member_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'member_block': {\n        id: 'member_block',\n        title: formatMessage(messages.block),\n        handler: this.topicPermissionSetter.bind(this, '-JP')\n      },\n      'member_unblock': {\n        id: 'member_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handlePageClick, false);\n    document.addEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handlePageClick, false);\n    document.removeEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  handlePageClick(e) {\n    if (ReactDOM.findDOMNode(this).contains(e.target)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n  }\n\n  handleEscapeKey(e) {\n    if (e.keyCode === 27) {\n      this.props.hide();\n    }\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n    let item = this.props.items[e.currentTarget.dataset.id];\n    if (typeof item == 'string') {\n      item = this.MenuItems[item];\n    }\n\n    if (!item) {\n      console.log(\"Invalid menu item ID\", e.currentTarget.dataset.id);\n    } else {\n      this.props.onAction(\n        item.id,\n        item.handler(this.props.params, this.props.onError),\n        this.props.params);\n    }\n  }\n\n  // Menu Actions\n\n  deleteMessages(all, hard, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found: \", params.topicName);\n      return;\n    }\n\n    // We don't know if the message is still pending (e.g. attachment is being uploaded),\n    // so try cancelling first. No harm if we can't cancel.\n    // The message can be cancelled if transmission to the server has not\n    // started yet or if the message send has failed.\n    if (!all && topic.cancelSend(params.seq)) {\n      return;\n    }\n    // Can't cancel. Delete instead.\n    const promise = all ?\n      topic.delMessagesAll(hard) :\n      topic.delMessagesList([params.seq], hard);\n\n    return promise.catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Retries sending failed message.\n  retryMessage(params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    // Remove the existing message entry.\n    if (!topic || !topic.flushMessage(params.seq)) {\n      return;\n    }\n    const msg = topic.createMessage(params.content, false);\n    return topic.publishDraft(msg).catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Function is used by context menu to set permissions.\n  topicPermissionSetter(mode, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found\", params.topicName);\n      return;\n    }\n\n    let result = topic.updateMode(params.user, mode);\n    if (errorHandler) {\n      result = result.catch((err) => {\n        errorHandler(err.message, 'err');\n      });\n    }\n    return result;\n  }\n\n  render() {\n    let count = 0;\n    let menu = [];\n    this.props.items.map((item) => {\n      if (typeof item == 'string') {\n        item = this.MenuItems[item];\n      }\n      if (item && item.title) {\n        menu.push(\n          item.title == '-' ?\n            <li className=\"separator\" key={count} />\n            :\n            <li onClick={this.handleClick} data-id={count} key={count}>{item.title}</li>\n        );\n      }\n      count++;\n    });\n\n    // Ensure that menu is inside the app-container.\n    const hSize = 12 * REM_SIZE;\n    const vSize = REM_SIZE * (0.7 + menu.length * 2.5);\n    const left = (this.props.bounds.right - this.props.clickAt.x < hSize) ?\n        (this.props.clickAt.x - this.props.bounds.left - hSize) :\n        (this.props.clickAt.x - this.props.bounds.left);\n    const top = (this.props.bounds.bottom - this.props.clickAt.y < vSize) ?\n        (this.props.clickAt.y - this.props.bounds.top - vSize) :\n        (this.props.clickAt.y - this.props.bounds.top);\n\n    const position = {\n      left: left + 'px',\n      top: top + 'px'\n    };\n\n    return (\n      <ul className=\"menu\" style={position}>\n        {menu}\n      </ul>\n    );\n  }\n}\n\nexport default injectIntl(ContextMenu);\n","// Short representation of time in the past.\nexport function shortDateFormat(then, locale) {\n  locale = locale || window.navigator.userLanguage || window.navigator.language;\n  const now = new Date();\n  if (then.getFullYear() == now.getFullYear()) {\n    if (then.getMonth() == now.getMonth() && then.getDate() == now.getDate()) {\n\t    return then.toLocaleTimeString(locale, {hour12: false, hour: '2-digit', minute: '2-digit'});\n    } else {\n\t    return then.toLocaleDateString(locale,\n        {hour12: false, month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit'});\n    }\n  }\n  return then.toLocaleDateString(locale,\n    {hour12: false, year: 'numeric', month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit'});\n}\n\n// Convert seconds to minutes:seconds, i.e. 156 sec -> 2:36.\nexport function secondsToTime(seconds) {\n  const min = Math.floor(seconds / 60);\n  let sec = seconds % 60;\n  sec = sec < 10 ? `0${sec}` : sec;\n  return `${min}:${sec}`;\n}\n\n// Convert a number of bytes to human-readable format.\nexport function bytesToHumanSize(bytes) {\n  if (!bytes || bytes == 0) {\n    return '0 Bytes';\n  }\n\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n  const bucket = Math.min(Math.floor(Math.log2(bytes) / 10) | 0, sizes.length-1);\n  const count = bytes / Math.pow(1024, bucket);\n  const round = bucket > 0 ? (count < 3 ? 2 : (count < 30 ? 1 : 0)) : 0;\n  return count.toFixed(round) + ' ' + sizes[bucket];\n}\n\n// Get 32 bit integer hash value for a string. Ideally it should produce the same value\n// as Java's String#hash().\nexport function stringHash(value) {\n  let hash = 0;\n  value = '' + value;\n  for (let i = 0; i < value.length; i++) {\n    hash = ((hash << 5) - hash) + value.charCodeAt(i);\n    hash = hash & hash; // Convert to 32bit integer\n  }\n  return hash;\n}\n","import React from 'react';\n\nimport Tinode from 'tinode-sdk';\n\nimport { stringHash } from '../lib/strformat.js';\n\nexport default class LetterTile extends React.PureComponent {\n  render() {\n    let avatar;\n    if (this.props.avatar === true) {\n      const isGroup = (Tinode.topicType(this.props.topic) == 'grp');\n      const iconColor = (isGroup ? 'light-color' : 'dark-color')\n        + (Math.abs(stringHash(this.props.topic)) % 16);\n      if (this.props.topic && this.props.title && this.props.title.trim()) {\n        const letter = this.props.title.trim().charAt(0);\n        const className = 'lettertile ' + iconColor;\n        avatar = (<div className={className}><div>{letter}</div></div>)\n      } else {\n        const className = 'material-icons ' + iconColor;\n        avatar = isGroup ?\n          <i className={className}>group</i> : <i className={className}>person</i>;\n      }\n    } else if (this.props.avatar) {\n      // If avatar image is invalid, show a placeholder.\n      avatar = <img className=\"avatar\" alt=\"avatar\" src={this.props.avatar}\n        onError={(e)=>{e.target.onerror = null; e.target.src=\"/img/broken_image.png\"}} />;\n    } else {\n      avatar = null;\n    }\n    return avatar;\n  }\n}\n","// File and image helper functions.\nimport { MAX_INBAND_ATTACHMENT_SIZE, MAX_IMAGE_DIM } from '../config.js';\nimport { bytesToHumanSize } from './strformat.js'\n\n// Supported image MIME types and corresponding file extensions.\nexport const SUPPORTED_IMAGE_FORMATS = ['image/jpeg', 'image/gif', 'image/png', 'image/svg', 'image/svg+xml'];\nexport const MIME_EXTENSIONS         = ['jpg',        'gif',       'png',       'svg',       'svg'];\n\n// Make a data URL from public.photo\nexport function makeImageUrl(photo) {\n  return (photo && photo.type && photo.data) ?\n    'data:image/' + photo.type + ';base64,' + photo.data : null;\n}\n\n// Calculate linear dimensions for scaling image down to fit under a certain size.\n// Returns an object which contains destination sizes, source sizes, and offsets\n// into source (when making square images).\nexport function fitImageSize(width, height, maxWidth, maxHeight, forceSquare) {\n  // Sanitize input\n  width = width | 0;\n  height = height | 0;\n  maxWidth = maxWidth | 0;\n  maxHeight = maxHeight | 0;\n\n  if (width <= 0 || height <= 0 || maxWidth <= 0 || maxHeight <= 0) {\n    return null;\n  }\n\n  if (forceSquare) {\n    maxWidth = maxHeight = Math.min(maxWidth, maxHeight);\n  }\n\n  let scale = Math.min(\n    Math.min(width, maxWidth) / width,\n    Math.min(height, maxHeight) / height\n  );\n\n  let size = {\n    dstWidth: (width * scale) | 0,\n    dstHeight: (height * scale) | 0,\n  };\n\n  if (forceSquare) {\n    // Also calculate parameters for making the image square.\n    size.dstWidth = size.dstHeight = Math.min(size.dstWidth, size.dstHeight);\n    size.srcWidth = size.srcHeight = Math.min(width, height);\n    size.xoffset = ((width - size.srcWidth) / 2) | 0;\n    size.yoffset = ((height - size.srcWidth) / 2) | 0;\n  } else {\n    size.xoffset = size.yoffset = 0;\n    size.srcWidth = width;\n    size.srcHeight = height;\n  }\n  return size;\n}\n\n// Ensure file's extension matches mime content type\nexport function fileNameForMime(fname, mime) {\n  var idx = SUPPORTED_IMAGE_FORMATS.indexOf(mime);\n  var ext = MIME_EXTENSIONS[idx];\n\n  var at = fname.lastIndexOf('.');\n  if (at >= 0) {\n    fname = fname.substring(0, at);\n  }\n  return fname + '.' + ext;\n}\n\n// Scale uploaded image to fit under certain dimensions and byte size, optionally constraining to a square.\n// On success calls onSuccess callback with the scaled image as Blob.\nexport function imageScaled(file, maxWidth, maxHeight, maxSize, forceSquare, onSuccess, onError) {\n  const img = new Image();\n  img.crossOrigin = 'Anonymous';\n  img.onerror = function(err) {\n    onError(\"Image format unrecognized\");\n  }\n  img.onload = async function() {\n    // Once the image is loaded, the URL is no longer needed.\n    URL.revokeObjectURL(img.src);\n\n    // Calculate the desired image dimensions.\n    const dim = fitImageSize(this.width, this.height, maxWidth, maxHeight, forceSquare);\n    if (!dim) {\n      onError(\"Invalid image\");\n      return;\n    }\n    let canvas = document.createElement('canvas');\n    canvas.width = dim.dstWidth;\n    canvas.height = dim.dstHeight;\n    let ctx = canvas.getContext('2d');\n    ctx.imageSmoothingEnabled = true;\n    ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n      0, 0, dim.dstWidth, dim.dstHeight);\n\n    const mime = SUPPORTED_IMAGE_FORMATS.indexOf(file.type) < 0 ? 'image/jpeg' : file.type;\n    // Generate blob to check size of the image.\n    let blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    if (!blob) {\n      onError(\"Unsupported image format\");\n      return;\n    }\n\n    // Ensure the image is not too large. Shrink the image keeping the aspect ratio.\n    while (blob.length > maxSize) {\n      dim.dstWidth = (dim.dstWidth * 0.70710678118) | 0;\n      dim.dstHeight = (dim.dstHeight * 0.70710678118) | 0;\n      canvas.width = dim.dstWidth;\n      canvas.height = dim.dstHeight;\n      ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n        0, 0, dim.dstWidth, dim.dstHeight);\n      blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    }\n\n    canvas = null;\n    onSuccess(blob, mime, dim.dstWidth, dim.dstHeight, fileNameForMime(file.name, mime));\n  };\n  img.src = URL.createObjectURL(file);\n}\n\n// Convert uploaded image into a base64-encoded string possibly scaling\n// linear dimensions or constraining to a square.\nexport function imageFileScaledToBase64(file, width, height, forceSquare, onSuccess, onError) {\n  const img = new Image();\n  img.crossOrigin = 'Anonymous';\n  img.onerror = function(err) {\n    onError(\"Image format unrecognized\");\n  }\n  img.onload = function() {\n    var dim = fitImageSize(this.width, this.height, width, height, forceSquare);\n    if (!dim) {\n      onError(\"Invalid image\");\n      return;\n    }\n    var canvas = document.createElement('canvas');\n    canvas.width = dim.dstWidth;\n    canvas.height = dim.dstHeight;\n    var ctx = canvas.getContext('2d');\n    ctx.imageSmoothingEnabled = true;\n    ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n      0, 0, dim.dstWidth, dim.dstHeight);\n\n    var mime = (this.width != dim.dstWidth ||\n      this.height != dim.dstHeight ||\n      SUPPORTED_IMAGE_FORMATS.indexOf(file.type) < 0) ? 'image/jpeg' : file.type;\n    var imageBits = canvas.toDataURL(mime);\n    var parts = imageBits.split(',');\n    // Get actual image type: 'data:image/png;base64,'\n    mime = getMimeType(parts[0]);\n    if (!mime) {\n      onError(\"Unsupported image format\");\n      return;\n    }\n    // Ensure the image is not too large\n    let quality = 0.78;\n    if (base64DecodedLen(imageBits.length) > MAX_INBAND_ATTACHMENT_SIZE) {\n      mime = 'image/jpeg';\n    }\n    if (mime == 'image/jpeg') {\n      // Reduce size of the jpeg by reducing image quality\n      while (base64DecodedLen(imageBits.length) > MAX_INBAND_ATTACHMENT_SIZE && quality > 0.45) {\n        imageBits = canvas.toDataURL(mime, quality);\n        quality *= 0.84;\n      }\n    }\n    if (base64DecodedLen(imageBits.length) > MAX_INBAND_ATTACHMENT_SIZE) {\n      onError(\"The image size \" + bytesToHumanSize(base64DecodedLen(imageBits.length)) +\n        \" exceeds the \"  + bytesToHumanSize(MAX_INBAND_ATTACHMENT_SIZE) + \" limit.\", \"err\");\n      return;\n    }\n    canvas = null;\n    onSuccess(imageBits.split(',')[1], mime, dim.dstWidth, dim.dstHeight, fileNameForMime(file.name, mime));\n  };\n  img.src = URL.createObjectURL(file);\n}\n\n// Convert uploaded image file to base64-encoded string without scaling/converting the image\nexport function imageFileToBase64(file, onSuccess, onError) {\n  var reader = new FileReader();\n  reader.addEventListener('load', function() {\n    var parts = reader.result.split(',');\n    var mime = getMimeType(parts[0]);\n    if (!mime) {\n      onError(\"Failed to process image file\");\n      return;\n    }\n\n    // Get image size.\n    var img = new Image();\n    img.crossOrigin = 'Anonymous';\n    img.onload = function() {\n      onSuccess(parts[1], mime, this.width, this.height, fileNameForMime(file.name, mime));\n    }\n    img.onerror = function(err) {\n      onError(\"Image format not recognized\");\n    }\n    img.src = URL.createObjectURL(file);\n  }, false);\n  reader.readAsDataURL(file);\n}\n\n// Convert File to base64 string.\nexport function fileToBase64(file, onSuccess) {\n  const reader = new FileReader();\n  reader.addEventListener('load', function() {\n    onSuccess(file.type, reader.result.split(',')[1], file.name);\n  });\n  reader.readAsDataURL(file);\n}\n\n// Convert Blob to base64 string.\nexport function blobToBase64(blob, onSuccess) {\n  const reader = new FileReader();\n  reader.addEventListener('load', function() {\n    onSuccess(blob.type, reader.result.split(',')[1]);\n  });\n  reader.readAsDataURL(blob);\n}\n\n// File pasted from the clipboard. It's either an inline image or a file attachment.\n// FIXME: handle large files out of band.\nexport function filePasted(event, onImageSuccess, onAttachmentSuccess, onError) {\n  var items = (event.clipboardData || event.originalEvent.clipboardData || {}).items;\n  for (var i in items) {\n    var item = items[i];\n    if (item.kind === 'file') {\n      var file = item.getAsFile();\n      if (!file) {\n        console.log(\"Failed to get file object from pasted file item\", item.kind, item.type);\n        continue;\n      }\n      if (file.type && file.type.split('/')[0] == 'image') {\n        // Handle inline image\n        if (file.size > MAX_INBAND_ATTACHMENT_SIZE || SUPPORTED_IMAGE_FORMATS.indexOf(file.type) < 0) {\n          imageFileScaledToBase64(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, false, onImageSuccess, onError);\n        } else {\n          imageFileToBase64(file, onImageSuccess, onError);\n        }\n      } else {\n        // Handle file attachment\n        fileToBase64(file, onAttachmentSuccess, onError)\n      }\n      // Indicate that the pasted data contains a file.\n      return true;\n    }\n  }\n  // No file found.\n  return false;\n}\n\n// Get mime type from data URL header.\nexport function getMimeType(header) {\n  var mime = /^data:(image\\/[-+a-z0-9.]+);base64/.exec(header);\n  return (mime && mime.length > 1) ? mime[1] : null;\n}\n\n// Given length of a binary object in bytes, calculate the length after\n// base64 encoding.\nexport function base64EncodedLen(n) {\n  return Math.floor((n + 2) / 3) * 4;\n}\n\n// Given length of a base64-encoded object, calculate decoded size of the\n// pbject in bytes.\nexport function base64DecodedLen(n) {\n  return Math.floor(n / 4) * 3;\n}\n\n// Re-encode string to standard base64 encoding with padding.\n// The string may be base64-URL encoded without the padding.\nexport function base64ReEncode(str) {\n  if (str) {\n    str = str.replace(/-/g, '+').replace(/_/g, '/');\n    try {\n      str = btoa(atob(str));\n    } catch(err) {\n      console.log(\"Failed to base64 re-encode string.\", err);\n      str = null;\n    }\n  }\n  return str;\n}\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\n\nimport { AVATAR_SIZE, MAX_EXTERN_ATTACHMENT_SIZE } from '../config.js';\nimport { imageScaled, blobToBase64, makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class AvatarUpload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dataUrl: props.avatar\n    };\n\n    this.handleFileUpload = this.handleFileUpload.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.avatar != prevProps.avatar) {\n      this.setState({dataUrl: this.props.avatar})\n    }\n  }\n\n  handleFileUpload(e) {\n    imageScaled(e.target.files[0], AVATAR_SIZE, AVATAR_SIZE, MAX_EXTERN_ATTACHMENT_SIZE, true,\n      // Image successfully scaled and converted.\n      (mime, blob) => {\n        // Convert blob to base64-encoded bits.\n        blobToBase64(blob, (unused, base64bits) => {\n          const du = makeImageUrl({data: base64bits, type: mime});\n          this.setState({dataUrl: du});\n          this.props.onImageChanged(du);\n        });\n      },\n      // Failure\n      (err) => {\n        this.props.onError(err, 'err');\n      });\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  render() {\n    // Randomize id value in case more than one AvatarUpload is shown\n    // at the same time.\n    const randId = 'file-input-avatar-' + (Math.random() + '').substr(2);\n    const className = 'avatar-upload' + (this.props.readOnly ? ' read-only' : '');\n    return (\n      <div className={className}>\n        {this.props.readOnly || !this.state.dataUrl ?\n          null :\n          <a href=\"#\" className=\"clear-avatar\" onClick={(e) => {e.preventDefault(); this.props.onImageChanged(null);}}>\n            <i className=\"material-icons\">clear</i>\n          </a>}\n        {this.state.dataUrl ?\n          <img src={this.state.dataUrl} className=\"preview\" /> :\n          this.props.readOnly && this.props.uid ?\n            <div className=\"avatar-box\">\n              <LetterTile\n                avatar={true}\n                topic={this.props.uid}\n                title={this.props.title} />\n            </div>\n            :\n            <div className=\"blank\">{AVATAR_SIZE}&times;{AVATAR_SIZE}</div>}\n        {this.props.readOnly ? null :\n          <input type=\"file\" id={randId} className=\"inputfile hidden\"\n            accept=\"image/*\" onChange={this.handleFileUpload} />}\n        {this.props.readOnly ? null :\n        <label htmlFor={randId} className=\"round\">\n          <i className=\"material-icons\">file_upload</i>\n        </label>}\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\n/* BEGIN CheckBox: styled checkbox */\nexport default class CheckBox extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange() {\n    this.props.onChange(this.props.name, !this.props.checked);\n  }\n\n  render() {\n    return (\n      this.props.onChange ? (\n        this.props.checked ?\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box</i> :\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box_outline_blank</i>\n        ) : (\n          this.props.checked ?\n            <i className=\"material-icons\">check_box</i> :\n            <i className=\"material-icons\">check_box_outline_blank</i>\n        )\n    );\n  }\n}\n/* END CheckBox */\n","import React from 'react';\n\nconst icon_mapping = {'muted': 'notifications_off', 'banned': 'block'};\n\n/* Contact's labels: [you], or icons [muted], [blocked] */\nexport default class ContactBadges extends React.PureComponent {\n    render() {\n      let badges = null;\n      if (this.props.badges && this.props.badges.length > 0) {\n        badges = [];\n        this.props.badges.map(function(b) {\n          if (b.icon) {\n            badges.push(<i className=\"material-icons as-badge\" key={b.key || b.icon}>{icon_mapping[b.icon]}</i>);\n          } else {\n            const style = 'badge' + (b.color ? ' ' + b.color : '');\n            badges.push(<span className={style} key={b.key || b.name}>{b.name}</span>);\n          }\n        });\n        return <>{badges}</>;\n      }\n      return null;\n    }\n};\n","// The counter of unread messages in the topic.\nimport React from 'react';\n\nexport default class UnreadBadge extends React.PureComponent {\n  render() {\n    return (this.props.count > 0 ?\n      <span className=\"unread\">{this.props.count > 9 ? \"9+\" : this.props.count}</span>\n      : null);\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport LetterTile from './letter-tile.jsx';\nimport ContactBadges from './contact-badges.jsx';\nimport UnreadBadge from './unread-badge.jsx';\n\nexport default class Contact extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.props.onSelected) {\n      // Index this.props.index is used by GroupManager.\n      this.props.onSelected(this.props.item, this.props.index);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.props.item, y: e.pageY, x: e.pageX });\n  }\n\n  render() {\n    let title = this.props.title;\n    if (!title) {\n      title = <i><FormattedMessage id=\"unnamed_topic\" /></i>;\n    } else if (title.length > 30) {\n      // FIXME: this is probably wrong for RTL languages.\n      title = title.substring(0, 28) + '...';\n    }\n    const online = this.props.now ? 'online' : 'offline';\n    const avatar = this.props.avatar ? this.props.avatar : true;\n    const badges = this.props.badges ? this.props.badges.slice() : [];\n    const icon_badges = [];\n    if (this.props.acs) {\n      if (this.props.showMode) {\n        badges.push({name: this.props.acs.getMode(), key: 'mode'});\n      }\n      if (this.props.acs.isMuted()) {\n        icon_badges.push({icon: 'muted'});\n      }\n      if (!this.props.acs.isJoiner()) {\n        icon_badges.push({icon: 'banned'});\n      }\n    }\n\n    return (\n      <li className={!this.props.showCheckmark && this.props.selected ? \"selected\" : null}\n        onClick={this.handleClick}>\n        <div className=\"avatar-box\">\n          <LetterTile\n            avatar={avatar}\n            title={this.props.title}\n            topic={this.props.item} />\n          {this.props.showOnline ? <span className={online} /> :\n            (this.props.showCheckmark && this.props.selected ?\n            <i className=\"checkmark material-icons\">check_circle</i>\n            : null)}\n        </div>\n        <div className=\"text-box\">\n          <div><span className=\"contact-title\">{title}</span>\n            <UnreadBadge count={this.props.unread} /><ContactBadges badges={icon_badges} />\n          </div>\n          {this.props.comment ? <div className=\"contact-comment\">{this.props.comment}</div> : null}\n          <span><ContactBadges badges={badges} /></span>\n        </div>\n        {this.props.showContextMenu ?\n          <span className=\"menuTrigger\">\n            <a href=\"#\" onClick={this.handleContextClick}>\n              <i className=\"material-icons\">expand_more</i>\n            </a>\n          </span> : null}\n      </li>\n    );\n  }\n};\n","// A panel included into a list of contacts with an action text.\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\n\nclass ContactAction extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.onAction(this.props.action);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <li onClick={this.handleClick} className=\"action\">\n        <div className=\"action-text\">{formatMessage(this.props.title, this.props.values)}</div>\n      </li>\n    );\n  }\n};\n\nexport default injectIntl(ContactAction);\n","// ContactList: component for showing a list of contacts,\n// such as a list of group members in a group chat.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport Contact from './contact.jsx';\nimport ContactAction from './contact-action.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nconst messages = defineMessages({\n  badge_you: {\n    id: 'badge_you',\n    defaultMessage: 'you',\n    description: 'Badge for indicating the current user'\n  },\n  badge_owner: {\n    id: 'badge_owner',\n    defaultMessage: 'owner',\n    description: 'Badge for indicating the owner'\n  }\n});\n\nclass ContactList extends React.Component {\n  render() {\n    const {formatMessage} = this.props.intl;\n    const showCheckmark = Array.isArray(this.props.topicSelected);\n    const contactNodes = [];\n    let contactsCount = 0;\n    if (this.props.contacts && this.props.contacts.length > 0) {\n      this.props.contacts.map((c) => {\n        if (c.action) {\n          // Action item\n          contactNodes.push(\n            <ContactAction\n              title={c.title} action={c.action} values={c.values}\n              key={c.action}\n              onAction={this.props.onAction}\n              />);\n        } else {\n          // Normal contact\n          const key = this.props.showMode ? c.user : (c.topic || c.user);\n          // If filter function is provided, filter out the items\n          // which don't satisfy the condition.\n          if (this.props.filterFunc && this.props.filter) {\n            let content = [key];\n            if (c.private && c.private.comment) {\n              content.push(('' + c.private.comment).toLowerCase());\n            }\n            if (c.public && c.public.fn) {\n              content.push(('' + c.public.fn).toLowerCase());\n            }\n            if (!this.props.filterFunc(this.props.filter, content)) {\n              return;\n            }\n          }\n\n          const isChannel = Tinode.isChannelTopicName(key);\n          const selected = showCheckmark ?\n            (this.props.topicSelected.indexOf(key) > -1) :\n            (this.props.topicSelected === key);\n          const badges = [];\n          if (this.props.showMode) {\n            if (key == this.props.myUserId) {\n              badges.push({name: formatMessage(messages.badge_you), color: 'green'});\n            }\n            if (c.acs && c.acs.isOwner()) {\n              badges.push({name: formatMessage(messages.badge_owner), color: 'blue'});\n            }\n          }\n          const comment = Array.isArray(c.private) ?\n            c.private.join(',') : (c.private ? c.private.comment : null);\n\n          contactNodes.push(\n            <Contact\n              title={c.public ? c.public.fn : null}\n              avatar={makeImageUrl(c.public ? c.public.photo : null)}\n              comment={comment}\n              unread={this.props.showUnread ? c.unread : 0}\n              now={c.online && this.props.connected}\n              acs={c.acs}\n              showMode={this.props.showMode}\n              badges={badges}\n              showCheckmark={showCheckmark}\n              selected={selected}\n              showOnline={this.props.showOnline && !isChannel}\n              onSelected={this.props.onTopicSelected}\n              showContextMenu={this.props.showContextMenu}\n              item={key}\n              index={contactNodes.length}\n              key={key} />\n          );\n          contactsCount ++;\n        }\n      }, this);\n    }\n\n    return (\n      <div className={this.props.noScroll ? null : \"scrollable-panel\"}>\n        {contactsCount == 0 ?\n          <div className=\"center-medium-text\"\n            dangerouslySetInnerHTML={{__html: this.props.emptyListMessage}} />\n          :\n          null\n        }\n        {contactNodes.length > 0 ?\n          <ul className=\"contact-box\">\n            {contactNodes}\n          </ul>\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ContactList);\n","// The X menu to be displayed in title bars.\nimport React from 'react';\n\nexport default class MenuCancel extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n        <i className=\"material-icons\">close</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nimport MenuCancel from './menu-cancel.jsx';\n\nexport default class ErrorPanel extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      show: false,\n    };\n\n    this.hide = this.hide.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.level !== this.props.level) {\n      this.setState({\n        show: !(!this.props.level)\n      });\n    }\n  }\n\n  hide() {\n    this.setState({show: false});\n    if (this.props.onClearError) {\n      this.props.onClearError();\n    }\n  }\n\n  render() {\n    const icons = {err: 'error', warn: 'warning', info: 'info'}\n    const level = icons[this.props.level] || '';\n    const className = 'info-box ' + level;\n    return (\n      <div className={className}>\n        <div className=\"icon\"><i className=\"material-icons\">{level}</i></div>\n        <span>\n          {this.props.text}\n          {this.props.action ?\n            <>\n              &#32;<a href=\"#\"\n                style={{ whiteSpace: 'nowrap' }}\n                onClick={(e) => {e.preventDefault(); this.props.action();}}>\n                {this.props.actionText}\n              </a>\n            </>\n          : null}\n        </span>\n        <div className=\"cancel\"><MenuCancel onCancel={this.hide} /></div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\n\nexport default class Chip extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel(this.props.topic, this.props.index);\n  }\n\n  render() {\n    const title = this.props.title || this.props.topic;\n    const className = this.props.invalid ? 'chip invalid' : 'chip';\n    return (\n      <div className={className}>\n        {this.props.noAvatar ?\n          <span className=\"spacer\" /> :\n          <div className=\"avatar-box\">\n            <LetterTile\n              avatar={this.props.avatar || true}\n              topic={this.props.topic}\n              title={this.props.title} />\n          </div>\n        }\n        <span>{title}</span>\n        {this.props.onCancel && !this.props.required ?\n          <a href=\"#\" onClick={this.handleCancel} >&times;</a>\n          : <span className=\"spacer\" />}\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport Chip from './chip.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n/* BEGIN ChipInput: group membership widget */\nexport default class ChipInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = ChipInput.deriveStateFromProps(props);\n    this.state.input = '';\n    this.state.focused = false;\n\n    this.handleTextInput = this.handleTextInput.bind(this);\n    this.removeChipAt = this.removeChipAt.bind(this);\n    this.handleChipCancel = this.handleChipCancel.bind(this);\n    this.handleFocusGained = this.handleFocusGained.bind(this);\n    this.handleFocusLost = this.handleFocusLost.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  static deriveStateFromProps(props) {\n    return {\n      placeholder: props.chips ? '' : props.prompt,\n      sortedChips: ChipInput.sortChips(props.chips, props.staticMembers),\n      chipIndex: ChipInput.indexChips(props.chips)\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chips != this.props.chips ||\n      prevProps.staticMembers != this.props.staticMembers ||\n      prevProps.prompt != this.props.prompt) {\n      this.setState(ChipInput.deriveStateFromProps(this.props));\n    }\n    if (!prevState || this.props.chips.length > prevState.sortedChips.length) {\n      this.setState({input: ''});\n    }\n  }\n\n  // Map chip index to user name\n  static indexChips(chips) {\n    const index = {};\n    let count = 0;\n    chips.map((item) => {\n      index[item.user] = count;\n      count ++;\n    });\n    return index;\n  }\n\n  // Have non-removable chips appear before all other chips.\n  static sortChips(chips, keep) {\n    const required = [];\n    const normal = [];\n    chips.map((item) => {\n      if (keep && keep.includes(item.user)) {\n        required.push(item);\n      } else {\n        normal.push(item);\n      }\n    });\n    return required.concat(normal);\n  }\n\n  handleTextInput(e) {\n    this.setState({input: e.target.value});\n    if (this.props.filterFunc) {\n      this.props.filterFunc(e.target.value);\n    }\n  }\n\n  removeChipAt(idx) {\n    const removed = this.state.sortedChips[idx];\n    this.props.onChipRemoved(removed.user, this.state.chipIndex[removed.user]);\n  }\n\n  handleChipCancel(item, idx) {\n    this.removeChipAt(idx);\n  }\n\n  handleFocusGained() {\n    this.setState({focused: true});\n  }\n\n  handleFocusLost() {\n    this.setState({focused: false});\n    if (this.props.onFocusLost) {\n      this.props.onFocusLost(this.state.input);\n    }\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Backspace') {\n      if (this.state.input.length == 0 && this.state.sortedChips.length > 0) {\n        const at = this.state.sortedChips.length - 1;\n        if (this.state.sortedChips[at].user !== this.props.staticMembers) {\n          this.removeChipAt(at);\n        }\n      }\n    } else if (e.key === 'Enter') {\n      if (this.props.onEnter) {\n        this.props.onEnter(this.state.input);\n      }\n    } else if (e.key === 'Escape') {\n      if (this.props.onCancel) {\n        this.props.onCancel();\n      }\n    }\n  }\n\n  render() {\n    const chips = [];\n    let count = 0;\n    const staticMembers = this.props.staticMembers || [];\n    this.state.sortedChips.map((item) => {\n      chips.push(\n        <Chip\n          onCancel={this.handleChipCancel}\n          avatar={makeImageUrl(item.public ? item.public.photo : null)}\n          title={item.public ? item.public.fn : undefined}\n          noAvatar={this.props.avatarDisabled}\n          topic={item.user}\n          required={staticMembers.includes(item.user)}\n          invalid={item.invalid}\n          index={count}\n          key={item.user} />\n      );\n      count++;\n    });\n    const className = \"chip-input\" + (this.state.focused ? ' focused' : '');\n    return (\n      <div className={className}>\n        {chips}\n        <input type=\"text\"\n          placeholder={this.state.placeholder}\n          onChange={this.handleTextInput}\n          onFocus={this.handleFocusGained}\n          onBlur={this.handleFocusLost}\n          onKeyDown={this.handleKeyDown}\n          value={this.state.input}\n          autoFocus />\n      </div>\n    );\n  }\n};\n","// GroupMembers: control for managing a list of group members.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\nimport ContactList from './contact-list.jsx';\n\nconst messages = defineMessages({\n  no_contacts: {\n    id: 'no_contacts',\n    defaultMessage: 'You have no contacts :-(',\n    description: 'Shown in ContactsView when the user has no contacts'\n  },\n  contacts_not_found_short: {\n    id: 'contacts_not_found_short',\n    defaultMessage: \"No contacts match ''{query}''\",\n    description: 'Shown in ContactsView when search returned no results'\n  }\n});\n\nclass GroupManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Array of topic members\n      members: props.members,\n      index: GroupManager.indexMembers(props.members),\n      staticMembers: GroupManager.staticMembers(props.members, props.keepInitialMembers, props.requiredMember),\n      contactFilter: '',\n      noContactsMessage: props.intl.formatMessage(messages.no_contacts),\n      selectedContacts: GroupManager.selectedContacts(props.members)\n    };\n\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleMemberRemoved = this.handleMemberRemoved.bind(this);\n    this.handleContactFilter = this.handleContactFilter.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static indexMembers(members) {\n    let index = {};\n    members.map((m) => {\n      index[m.user] = {delta: 0, present: true}; // Delta: 0 unchanged, +1 added, -1 removed\n    });\n    return index;\n  }\n\n  static staticMembers(members, keepInitial, requiredMember) {\n    let stat = [];\n    members.map((m) => {\n      if (keepInitial || m.user == requiredMember) {\n        stat.push(m.user);\n      }\n    });\n    return stat;\n  }\n\n  static selectedContacts(members) {\n    let sel = [];\n    members.map((m) => {\n      sel.push(m.user);\n    });\n    return sel;\n  }\n\n  handleContactSelected(userId, index) {\n    let status = this.state.index[userId];\n    if (status) {\n      if (status.present) {\n        // Prevent duplicate members\n        return;\n      }\n      status.delta += 1;\n      status.present = true;\n    } else {\n      status = {delta: 1, present: true};\n    }\n\n    let m = this.state.members.slice();\n    m.push(this.props.contacts[index]);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleMemberRemoved(userId, index) {\n    const status = this.state.index[userId];\n    if (!status || !status.present) {\n      return;\n    }\n    status.present = false;\n    status.delta -= 1;\n\n    let m = this.state.members.slice();\n    m.splice(index, 1);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleContactFilter(val) {\n    const {formatMessage} = this.props.intl;\n    const msg = !val ?\n      formatMessage(messages.no_contacts) :\n      formatMessage(messages.contacts_not_found_short, {query: val});\n\n    this.setState({contactFilter: val, noContactsMessage: msg});\n  }\n\n  static doContactFiltering(filter, values) {\n    if (filter) {\n      for (let i=0; i<values.length; i++) {\n        if (values[i].indexOf(filter) >= 0) {\n          return true;\n        }\n      }\n      return false;\n    }\n    return true;\n  }\n\n  handleSubmit() {\n    var instance = this;\n    var members = [];\n    var added = [];\n    var removed = [];\n\n    var keys = Object.keys(this.state.index);\n    keys.map(function(k) {\n      if (instance.state.index[k].present) {\n        members.push(k);\n      }\n\n      if (instance.state.index[k].delta > 0) {\n        added.push(k);\n      } else if (instance.state.index[k].delta < 0) {\n        removed.push(k);\n      }\n    });\n    this.props.onSubmit(members, added, removed);\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <div id=\"group-manager\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_group_members\" defaultMessage=\"Group Members\" description=\"Section title\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ChipInput\n            chips={this.state.members}\n            staticMembers={this.state.staticMembers}\n            prompt=\"add members\"\n            filterFunc={this.handleContactFilter}\n            onChipRemoved={this.handleMemberRemoved} />\n        </div>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_all_contacts\" defaultMessage=\"All Contacts\"\n              description=\"Section title [All Contacts]\" />\n          </label>\n        </div>\n        <ContactList\n          contacts={this.props.contacts}\n          myUserId={this.props.myUserId}\n          topicSelected={this.state.selectedContacts}\n          filter={this.state.contactFilter}\n          filterFunc={GroupManager.doContactFiltering}\n          emptyListMessage={this.state.noContactsMessage}\n          showOnline={false}\n          showUnread={false}\n          onTopicSelected={this.handleContactSelected} />\n        <div id=\"group-manager-buttons\" className=\"panel-form-row\">\n          <button className=\"blue\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n          <button className=\"white\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(GroupManager);\n","// Password with a visiblity toggle.\nimport React from 'react';\n\nexport default class VisiblePassword extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: this.props.value,\n      visible: false\n    };\n\n    this.handleVisibility = this.handleVisibility.bind(this);\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n    if (this.props.onChange) {\n      this.props.onChange(e);\n    }\n  }\n\n  handleVisibility(e) {\n    e.preventDefault();\n    this.setState({visible: !this.state.visible});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode == 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, visible: false});\n      if (this.props.onFinished) {\n        this.props.onFinished();\n      }\n    } else if (e.keyCode == 13) {\n      // Enter pressed\n      this.handleEditingFinished();\n    }\n  }\n\n  handleEditingFinished(e) {\n    if (e) {\n      let currentTarget = e.currentTarget;\n      setTimeout(() => {\n        if (!currentTarget.contains(document.activeElement)) {\n          if (this.props.onFinished) {\n            this.props.onFinished(this.state.value);\n          }\n        }\n      }, 0);\n    } else if (this.props.onFinished) {\n      this.props.onFinished(this.state.value.trim());\n    }\n  }\n\n  render() {\n    return (\n      <div tabIndex=\"-1\" className=\"group-focus\"\n        onBlur={this.handleEditingFinished}>\n        <input className=\"with-visibility\"\n          type={this.state.visible ? \"text\" : \"password\"}\n          value={this.state.value}\n          placeholder={this.props.placeholder}\n          required={this.props.required ? 'required' : ''}\n          autoFocus={this.props.autoFocus ? 'autoFocus' : ''}\n          autoComplete={this.props.autoComplete}\n          onChange={this.handeTextChange}\n          onKeyDown={this.handleKeyDown} />\n        <span onClick={this.handleVisibility}>\n          <i className=\"material-icons clickable light-gray\">\n            {this.state.visible ? 'visibility' : 'visibility_off'}\n          </i>\n        </span>\n      </div>\n    );\n  }\n}\n","// In-place text editor. Shows text with an icon which toggles it into an input field.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport VisiblePassword from './visible-password.jsx';\n\nexport default class InPlaceEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      active: props.active,\n      initialValue: props.value || '',\n      value: props.value || ''\n    };\n\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleStartEditing = this.handleStartEditing.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n    this.handlePasswordFinished = this.handlePasswordFinished.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // If text has changed while in read mode, update text and discard changes.\n    // Ignore update if in edit mode.\n    const newValue = this.props.value || '';\n    if (prevState.initialValue != newValue && !prevState.active) {\n      this.setState({\n        initialValue: newValue,\n        value: newValue\n      });\n    }\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, active: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleEditingFinished(e);\n    }\n  }\n\n  handleStartEditing() {\n    if (!this.props.readOnly) {\n      ReactDOM.findDOMNode(this).focus();\n      this.setState({active: true});\n    }\n  }\n\n  handleEditingFinished(event) {\n    if (this.props.required && !event.target.checkValidity()) {\n      // Empty input\n      this.setState({value: this.props.value, active: false});\n      return;\n    }\n    this.setState({active: false});\n    let value = this.state.value.trim();\n    if ((value || this.props.value) && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  handlePasswordFinished(value) {\n    this.setState({active: false});\n    if (value && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  render() {\n    if (this.state.active) {\n      var fieldType = this.props.type || 'text';\n    } else {\n      var spanText = this.props.type == 'password' ? '••••••••' : this.state.value;\n      var spanClass = 'in-place-edit' +\n        (this.props.readOnly ? ' disabled' : '');\n      if (!spanText) {\n        spanText = this.props.placeholder;\n        spanClass += ' placeholder';\n      }\n      if (spanText.length > 20) {\n        // FIXME: this is wrong for RTL languages.\n        spanText = spanText.substring(0, 19) + '...';\n      }\n    }\n    return (\n      this.state.active ?\n        (fieldType == 'password' ?\n          <VisiblePassword\n            value={this.state.value}\n            placeholder={this.props.placeholder}\n            required={this.props.required ? 'required' : ''}\n            autoComplete={this.props.autoComplete}\n            autoFocus={true}\n            onFinished={this.handlePasswordFinished}/>\n          :\n          <input type={fieldType}\n            value={this.state.value}\n            placeholder={this.props.placeholder}\n            required={this.props.required ? 'required' : ''}\n            autoComplete={this.props.autoComplete}\n            autoFocus\n            onChange={this.handeTextChange}\n            onKeyDown={this.handleKeyDown}\n            onBlur={this.handleEditingFinished} />\n        )\n        :\n        <span className={spanClass} onClick={this.handleStartEditing}>\n          <span className=\"content\">{spanText}</span>\n        </span>\n    );\n  }\n};\n","// Toggle [Title text >] -> [Title text v]\n\nimport React from 'react';\n\nexport default class MoreButton extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: props.open\n    };\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n\n  handleToggle() {\n    const open = !this.state.open;\n    this.setState({open: open});\n    if (this.props.onToggle) {\n      this.props.onToggle(open);\n    }\n  }\n\n  render() {\n    return (<label className=\"small clean-clickable\" onClick={this.handleToggle}>{this.props.title}...\n      {this.state.open ? <i className=\"material-icons\">expand_more</i> :\n        <i className=\"material-icons\">chevron_right</i>}\n      </label>);\n  }\n}\n","// PermissionsEditor: Component for editing permissions\n// <PermissionsEditor mode=\"JWROD\" skip=\"O\" onChange={this.handleCheckboxTest} />\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport CheckBox from './checkbox.jsx';\nimport Contact from './contact.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n// Translatable permission names.\nconst messages = defineMessages({\n  'joiner': {\n    id: 'permission_join',\n    defaultMessage: \"Join ({val})\",\n    description: 'Name of J permission'\n  },\n  'reader': {\n    id: 'permission_read',\n    defaultMessage: \"Read ({val})\",\n    description: 'Name of R permission'\n  },\n  'writer': {\n    id: 'permission_write',\n    defaultMessage: \"Write ({val})\",\n    description: 'Name of W permission'\n  },\n  'preser': {\n    id: 'permission_pres',\n    defaultMessage: \"Get notified ({val})\",\n    description: 'Name of P permission'\n  },\n  'approver': {\n    id: 'permission_admin',\n    defaultMessage: \"Approve ({val})\",\n    description: 'Name of A permission'\n  },\n  'sharer': {\n    id: 'permission_share',\n    defaultMessage: \"Share ({val})\",\n    description: 'Name of S permission'\n  },\n  'deleter': {\n    id: 'permission_delete',\n    defaultMessage: \"Delete ({val})\",\n    description: 'Name of D permission'\n  },\n  'owner': {\n    id: 'permission_owner',\n    defaultMessage: \"Owner ({val})\",\n    description: 'Name of O permission'\n  }\n});\n\nclass PermissionsEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mode: (props.mode || '').replace('N', '')\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(val) {\n    let mode = this.state.mode;\n    let idx = mode.indexOf(val);\n    if (idx == -1) {\n      mode += val;\n    } else {\n      mode = mode.replace(val, '');\n    }\n    this.setState({mode: mode});\n  }\n\n  handleSubmit() {\n    // Normalize string, otherwise cannot check if mode has changed.\n    var mode = (this.state.mode || 'N').split('').sort().join('');\n    var before = (this.props.mode || 'N').split('').sort().join('')\n    if (mode !== before) {\n      this.props.onSubmit(mode);\n    } else {\n      this.props.onCancel();\n    }\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const all = 'JRWPASDO';\n    const names = {\n      'J': formatMessage(messages.joiner, {val: 'J'}),\n      'R': formatMessage(messages.reader, {val: 'R'}),\n      'W': formatMessage(messages.writer, {val: 'W'}),\n      'P': formatMessage(messages.preser, {val: 'P'}),\n      'A': formatMessage(messages.approver, {val: 'A'}),\n      'S': formatMessage(messages.sharer, {val: 'S'}),\n      'D': formatMessage(messages.deleter, {val: 'D'}),\n      'O': formatMessage(messages.owner, {val: 'O'})\n    };\n\n    let skip = this.props.skip || '';\n    let mode = this.state.mode;\n    let compare = (this.props.compare || '').replace('N', '');\n    let items = [];\n    for (let i=0; i<all.length; i++) {\n      let c = all.charAt(i);\n      if (skip.indexOf(c) >= 0 && mode.indexOf(c) < 0) {\n        // Permission is marked as inactive: hide unchecked permissions, disable checked permissions\n        continue;\n      }\n      items.push(\n        <tr key={c}>\n          <td>{names[c]}</td>\n          <td className=\"checkbox\">{skip.indexOf(c) < 0 ?\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} onChange={this.handleChange}/>\n            :\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} />\n          }</td>{this.props.compare ? <td className=\"checkbox\">\n            <CheckBox name={c} checked={(compare.indexOf(c) >= 0)}/>\n          </td> : null}\n        </tr>\n      );\n    }\n\n    return (\n      <div className=\"panel-form-column\">\n        {this.props.userTitle ?\n          <ul className=\"contact-box\"><Contact\n            item={this.props.item}\n            title={this.props.userTitle}\n            avatar={makeImageUrl(this.props.userAvatar ? this.props.userAvatar : null)} /></ul> : null}\n        <label className=\"small\"><FormattedMessage id=\"title_permissions\"\n          defaultMessage=\"Permissions\" description=\"Section title\"/></label>\n        <table className=\"permission-editor\">\n        {this.props.compare ?\n          <thead><tr>\n            <th></th><th>{this.props.modeTitle}</th>\n            <th>{this.props.compareTitle}</th>\n          </tr></thead> :\n          null}\n        <tbody>\n          {items}\n        </tbody></table>\n        <br />\n        <div className=\"dialog-buttons\">\n          <button className=\"outline\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" />\n          </button>\n          <button className=\"blue\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(PermissionsEditor);\n","// Odds and ends\n\n// Make shortcut icon appear with a green dot + show unread count in title.\nexport function updateFavicon(count) {\n  const oldIcon = document.getElementById('shortcut-icon');\n  const head = document.head || document.getElementsByTagName('head')[0];\n  const newIcon = document.createElement('link');\n  newIcon.type = 'image/png';\n  newIcon.id = 'shortcut-icon';\n  newIcon.rel = 'shortcut icon';\n  newIcon.href = 'img/logo32x32' + (count > 0 ? 'a' : '') + '.png';\n  if (oldIcon) {\n    head.removeChild(oldIcon);\n  }\n  head.appendChild(newIcon);\n\n  document.title = (count > 0 ? '('+count+') ' : '') + 'Tinode';\n}\n\n// Create VCard which represents topic 'public' info\nexport function vcard(fn, imageDataUrl) {\n  let card = null;\n\n  if ((fn && fn.trim()) || imageDataUrl) {\n    card = {};\n    if (fn) {\n      card.fn = fn.trim();\n    }\n    if (imageDataUrl) {\n      const dataStart = imageDataUrl.indexOf(',');\n      card.photo = dataStart >= 0 ? {\n        data: imageDataUrl.substring(dataStart+1),\n        type: 'jpg'\n      } : imageDataUrl;\n    }\n  }\n  return card;\n}\n\n// Deep-shallow compare two arrays: shallow compare each element.\nexport function arrayEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (!Array.isArray(a) || !Array.isArray(b)) {\n    return false;\n  }\n\n  // Compare lengths first.\n  if (a.length != b.length) {\n    return false;\n  }\n  // Order of elements is ignored.\n  a.sort();\n  b.sort();\n  for (let i = 0, l = a.length; i < l; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Checks (loosely) if the given string is a phone. If so, returns the phone number in a format\n// as close to E.164 as possible.\nexport function asPhone(val) {\n  val = val.trim();\n  if (/^(?:\\+?(\\d{1,3}))?[- (.]*(\\d{3})[- ).]*(\\d{3})[- .]*(\\d{2})[- .]*(\\d{2})?$/.test(val)) {\n    return val.replace(/[- ().]*/, '');\n  }\n  return null;\n}\n\n// Checks (loosely) if the given string is an email. If so returns the email.\nexport function asEmail(val) {\n  val = val.trim();\n  if (/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(val)) {\n    return val;\n  }\n  return null;\n}\n\n// Checks if URL is a relative url, i.e. has no 'scheme://', including the case of missing scheme '//'.\n// The scheme is expected to be RFC-compliant, e.g. [a-z][a-z0-9+.-]*\n// example.html - ok\n// https:example.com - not ok.\n// http:/example.com - not ok.\n// ' ↲ https://example.com' - not ok. (↲ means carriage return)\nexport function isUrlRelative(url) {\n  return !/^\\s*([a-z][a-z0-9+.-]*:|\\/\\/)/im.test(url);\n}\n\n// Ensure URL does not present an XSS risk. Optional allowedSchemes may contain an array of\n// strings with permitted URL schemes, such as ['ftp', 'ftps']; otherwise accept http and https only.\nexport function sanitizeUrl(url, allowedSchemes) {\n  if (!url) {\n    return null;\n  }\n\n  // Strip control characters and whitespace. They are not valid URL characters anyway.\n  url = url.replace(/[^\\x20-\\x7E]/gmi, '').trim();\n\n  // Relative URLs are safe.\n  if (!/^([a-z][a-z0-9+.-]*:|\\/\\/)/i.test(url)) {\n    return url;\n  }\n  // Blob URLs are safe.\n  if (/^blob:http/.test(url)) {\n    return url;\n  }\n\n  // Absolute URL. Accept only safe schemes, or no scheme.\n  const schemes = Array.isArray(allowedSchemes) ? allowedSchemes.join('|') : 'http|https';\n  const re = new RegExp('^((' + schemes + '):|//)', 'i');\n  if (!re.test(url)) {\n    return null;\n  }\n\n  return url;\n}\n\n// Ensure URL is suitable for <img src=\"url\"> field: the URL must be a relative URL or\n// have http:, https:, or data: scheme. In case of data: scheme, the URL must start with\n// a 'data:image/XXXX;base64,'.\nexport function sanitizeImageUrl(url) {\n  if (!url) {\n    return null;\n  }\n\n  const sanitizedUrl = sanitizeUrl(url);\n  if (sanitizedUrl) {\n    return sanitizedUrl;\n  }\n\n  // Is this a data: URL of an image?\n  if (/data:image\\/[a-z0-9.-]+;base64,/i.test(url.trim())) {\n    return url;\n  }\n\n  return null;\n}\n","// TagManager: edit topic or user tags.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\n\nimport { MAX_TAG_COUNT, MIN_TAG_LENGTH } from '../config.js';\nimport { arrayEqual } from '../lib/utils.js';\n\nexport default class TagManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tags: this.props.tags,\n      tagInput: '',\n      activated: this.props.activated\n    };\n\n    this.handleTagInput = this.handleTagInput.bind(this);\n    this.handleAddTag = this.handleAddTag.bind(this);\n    this.handleRemoveTag = this.handleRemoveTag.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (!arrayEqual(nextProps.tags, prevState.tags) && !prevState.activated) {\n      return {tags: nextProps.tags};\n    }\n    return null;\n  }\n\n  handleTagInput(text) {\n    this.setState({tagInput: text});\n    if (text.length > 0) {\n      const last = text[text.length-1];\n      if (text[0] == '\"') {\n        // This is a quoted string.\n        if (text.length > 1 && last == '\"') {\n          this.handleAddTag(text.substring(1, text.length-1));\n        }\n      } else if (last == ',' || last == ' ' || last == ';' || last == '\"') {\n        // User entered ',', ' ' or ';'\n        this.handleAddTag(text.substring(0, text.length-1).trim());\n      }\n    }\n  }\n\n  handleAddTag(tag) {\n    if (tag.length > 0 && this.state.tags.length < MAX_TAG_COUNT) {\n      const tags = this.state.tags.slice(0);\n      tags.push(tag);\n\n      this.setState({tags: tags, tagInput: ''});\n      if (this.props.onTagsChanged) {\n        this.props.onTagsChanged(tags);\n      }\n      return tags;\n    }\n    return this.state.tags;\n  }\n\n  handleRemoveTag(tag, index) {\n    const tags = this.state.tags.slice(0);\n    tags.splice(index, 1);\n    this.setState({tags: tags});\n    if (this.props.onTagsChanged) {\n      this.props.onTagsChanged(tags);\n    }\n  }\n\n  handleSubmit() {\n    // Add unprocessed input to tags, submit the list.\n    this.props.onSubmit(this.handleAddTag(this.state.tagInput.trim()));\n    this.setState({activated: false, tags: this.props.tags});\n  }\n\n  handleCancel() {\n    this.setState({activated: false, tagInput: '', tags: this.props.tags});\n    if (this.props.onCancel) {\n      this.props.onCancel();\n    }\n  }\n\n  render() {\n    let tags = [];\n    if (this.state.activated) {\n      this.state.tags.map((tag) => {\n        tags.push({user: tag, invalid: (tag.length < MIN_TAG_LENGTH)});\n      });\n    } else {\n      this.state.tags.map((tag) => {\n        tags.push(<span className=\"badge\" key={tags.length}>{tag}</span>);\n      });\n      if (tags.length == 0) {\n        tags = (\n          <i>\n            <FormattedMessage id=\"tags_not_found\" defaultMessage=\"No tags defined. Add some.\" description=\"\" />\n          </i>\n        );\n      }\n    }\n    return (\n      <div className=\"panel-form-column\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">{this.props.title}</label>\n        </div>\n        {this.state.activated ?\n        <div>\n          <FormattedMessage id=\"tags_editor_no_tags\" defaultMessage=\"Add some tags\"\n            description=\"Tag editor prompt when no tags are found.\">{\n            (add_tags_prompt) => <ChipInput\n              chips={tags}\n              avatarDisabled={true}\n              prompt={add_tags_prompt}\n              onEnter={this.handleAddTag}\n              onFocusLost={this.handleAddTag}\n              onCancel={this.handleCancel}\n              onChipRemoved={this.handleRemoveTag}\n              filterFunc={this.handleTagInput} />\n          }</FormattedMessage>\n          {this.props.onSubmit || this.props.onCancel ?\n            <div id=\"tag-manager-buttons\" className=\"dialog-buttons panel-form-row\">\n              <button className=\"outline\" onClick={this.handleCancel}>\n                <FormattedMessage id=\"button_cancel\" defautMessage=\"Cancel\" description=\"Rejection button [Cancel]\" />\n              </button>\n              <button className=\"blue\" onClick={this.handleSubmit}>\n                <FormattedMessage id=\"button_ok\" defautMessage=\"OK\" description=\"Confirmation button [OK]\" />\n              </button>\n            </div>\n          : null}\n        </div>\n        :\n        <div className=\"quoted\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.setState({activated: true});}}>\n            <i className=\"material-icons\">edit</i> &nbsp;<FormattedMessage id=\"title_manage_tags\" defaultMessage=\"Manage\"\n              description=\"Section title for the list of tags\" />\n          </a>\n          <>{tags}</>\n        </div>\n      }\n      </div>\n    );\n  }\n};\n","// InfoView: panel with topic/user info.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport ContactList from '../widgets/contact-list.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupManager from '../widgets/group-manager.jsx';\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport MenuCancel from '../widgets/menu-cancel.jsx';\nimport MoreButton from '../widgets/more-button.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\nimport TagManager from '../widgets/tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH, NO_ACCESS_MODE } from '../config.js';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, vcard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  requested: {\n    id: 'requested_permissions',\n    defaultMessage: 'Requested',\n    description: 'Title for permissions'\n  },\n  granted: {\n    id: 'granted_permissions',\n    defaultMessage: 'Granted',\n    description: 'Title for permissions'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n  other_user: {\n    id: 'label_other_user',\n    defaultMessage: 'Other',\n    description: 'Label for the other user when the user is unnamed'\n  },\n  clear_messages: {\n    id: 'action_clear_messages',\n    defaultMessage: 'Clear Messages',\n    description: 'Flat button [Clear Messages] (soft-delete messages)'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n  delete_messages: {\n    id: 'action_delete_messages',\n    defaultMessage: 'Clear Messages for All',\n    description: 'Flat button [Clear for All] (hard-delete all messages)'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  leave_chat: {\n    id: 'action_leave_chat',\n    defaultMessage: 'Leave Conversation',\n    description: 'Flat button [Leave Conversation]'\n  },\n  leave_chat_warning: {\n    id: 'leave_chat_warning',\n    defaultMessage: 'Are you sure you want to leave this conversation?',\n    description: 'Alert dialog warning when unsubscribing from a chat.'\n  },\n  block_contact: {\n    id: 'action_block_contact',\n    defaultMessage: \"Block Contact\",\n    description: \"Flat button [Block Contact]\"\n  },\n  block_contact_warning: {\n    id: 'block_contact_warning',\n    defaultMessage: 'Are you sure you want to block this contact?',\n    description: 'Alert dialog warning when blocking a contact.'\n  },\n  report_chat: {\n    id: 'action_report_chat',\n    defaultMessage: 'Report Conversation',\n    description: 'Flat button [Report Group]'\n  },\n  report_chat_warning: {\n    id: 'report_chat_warning',\n    defaultMessage: 'Are you sure you want to block and report this conversation?',\n    description: 'Alert dialog warning when reporting a conversation for abuse'\n  },\n});\n\nclass InfoView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      topic: null,\n      owner: false,\n      admin: false,\n      sharer: false,\n      deleter: false,\n      muted: false,\n      address: null,\n      groupTopic: undefined,\n      channel: undefined,\n      fullName: undefined,\n      avatar: null,\n      private: null,\n      selectedContact: null,\n      access: null,\n      modeGiven: null,\n      modeWant: null,\n      modeGiven2: null, // P2P topic, the other user mode given\n      modeWant2: null,  // P2P topic, the other user mode want\n      auth: null,\n      anon: null,\n      contactList: [],\n      tags: [],\n      showMemberPanel: false,\n      showPermissionEditorFor: undefined,\n      moreInfoExpanded: false,\n      previousMetaDesc: undefined,\n      previousSubsUpdated: undefined,\n      previousTagsUpdated: undefined\n    };\n\n    this.resetSubs = this.resetSubs.bind(this);\n    this.resetDesc = this.resetDesc.bind(this);\n    this.onMetaDesc = this.onMetaDesc.bind(this);\n    this.onSubsUpdated = this.onSubsUpdated.bind(this);\n    this.onTagsUpdated = this.onTagsUpdated.bind(this);\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\n    this.handlePrivateUpdate = this.handlePrivateUpdate.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleMuted = this.handleMuted.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handleShowAddMembers = this.handleShowAddMembers.bind(this);\n    this.handleHideAddMembers = this.handleHideAddMembers.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleDeleteMessages = this.handleDeleteMessages.bind(this);\n    this.handleLeave = this.handleLeave.bind(this);\n    this.handleBlock = this.handleBlock.bind(this);\n    this.handleReport = this.handleReport.bind(this);\n    this.handleMemberSelected = this.handleMemberSelected.bind(this);\n    this.handleMoreInfo = this.handleMoreInfo.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.handleContextMenu = this.handleContextMenu.bind(this);\n  }\n\n  // No need to separately handle component mount.\n  componentDidUpdate(props) {\n    const topic = this.props.tinode.getTopic(props.topic);\n    if (!topic) {\n      return;\n    }\n\n    if (this.onMetaDesc != topic.onMetaDesc) {\n      this.previousMetaDesc = topic.onMetaDesc;\n      topic.onMetaDesc = this.onMetaDesc;\n\n      this.previousSubsUpdated = topic.onSubsUpdated;\n      topic.onSubsUpdated = this.onSubsUpdated;\n\n      if (topic.getType() == 'grp') {\n        this.previousTagsUpdated = topic.onTagsUpdated;\n        topic.onTagsUpdated = this.onTagsUpdated;\n      } else {\n        this.previousTagsUpdated = undefined;\n      }\n    }\n\n    if (this.state.topic != props.topic) {\n      this.setState({topic: props.topic});\n      this.resetDesc(topic, props);\n      this.resetSubs(topic, props);\n    }\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.setState({topic: null});\n    topic.onMetaDesc = this.previousMetaDesc;\n    topic.onSubsUpdated = this.previousSubsUpdated;\n    topic.onTagsUpdated = this.previousTagsUpdated;\n  }\n\n  resetSubs(topic, props) {\n    const newState = {contactList: []};\n    if (topic.getType() == 'p2p') {\n      // Fetch the other party in the p2p conversation.\n      // Topic may not be ready yet, so check if user is found.\n      const user2 = topic.subscriber(props.topic);\n      if (user2) {\n        newState.modeGiven2 = user2.acs.getGiven();\n        newState.modeWant2 = user2.acs.getWant();\n      } else {\n        newState.modeGiven2 = NO_ACCESS_MODE;\n        newState.modeWant2 = NO_ACCESS_MODE;\n      }\n    } else {\n      topic.subscribers((sub) => {\n        newState.contactList.push(sub);\n      }, this);\n    }\n\n    this.setState(newState);\n  }\n\n  resetDesc(topic, props) {\n    const defacs = topic.getDefaultAccess() || {};\n    const acs = topic.getAccessMode();\n\n    this.setState({\n      owner: acs && acs.isOwner(),\n      admin: acs && acs.isAdmin(),\n      sharer: acs && acs.isSharer(),\n      deleter: acs && acs.isDeleter(),\n      muted: acs && acs.isMuted(),\n\n      fullName: topic.public ? topic.public.fn : undefined,\n      avatar: makeImageUrl(topic.public ? topic.public.photo : null),\n      private: topic.private ? topic.private.comment : null,\n      address: topic.name,\n      groupTopic: (topic.getType() == 'grp'),\n      channel: topic.isChannel(),\n      showMemberPanel: false,\n      access: acs ? acs.getMode() : undefined,\n      modeGiven: acs ? acs.getGiven() : undefined,\n      modeWant: acs ? acs.getWant() : undefined,\n      auth: defacs.auth,\n      anon: defacs.anon\n    });\n\n    if (topic.getType() == 'grp' && acs && acs.isOwner()) {\n      // Requesting tags: owner is editing the topic.\n      topic.getMeta(topic.startMetaQuery().withTags().build());\n    }\n  }\n\n  onMetaDesc(desc) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetDesc(topic, this.props);\n\n    if (this.previousMetaDesc && this.previousMetaDesc != this.onMetaDesc) {\n      this.previousMetaDesc(desc);\n    }\n  }\n\n  onSubsUpdated(subs) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetSubs(topic, this.props);\n\n    if (this.previousSubsUpdated && this.previousSubsUpdated != this.onSubsUpdated) {\n      this.previousSubsUpdated(subs);\n    }\n  }\n\n  onTagsUpdated(tags) {\n    this.setState({tags: tags});\n\n    if (this.previousTagsUpdated && this.previousTagsUpdated != this.onTagsUpdated) {\n      this.previousTagsUpdated();\n    }\n  }\n\n  handleFullNameUpdate(fn) {\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.fullName !== fn) {\n      this.setState({fullName: fn});\n      this.props.onTopicDescUpdate(this.props.topic, vcard(fn, null), null);\n    }\n  }\n\n  handlePrivateUpdate(comment) {\n    comment = comment.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.private !== comment) {\n      this.setState({private: comment});\n      this.props.onTopicDescUpdate(this.props.topic, null, comment || Tinode.DEL_CHAR);\n    }\n  }\n\n  handleImageChanged(img) {\n    this.setState({avatar: img});\n    this.props.onTopicDescUpdate(this.props.topic, vcard(null, img || Tinode.DEL_CHAR), null);\n  }\n\n  handleMuted(ignored, checked) {\n    this.setState({muted: checked});\n    this.props.onChangePermissions(this.props.topic, checked ? '-P' : '+P');\n  }\n\n  handlePermissionsChanged(perm) {\n    switch (this.state.showPermissionEditorFor) {\n      case 'auth':\n        this.props.onTopicDescUpdate(this.props.topic, null, null, {auth: perm});\n        break;\n      case 'anon':\n        this.props.onTopicDescUpdate(this.props.topic, null, null, {anon: perm});\n        break;\n      case 'mode':\n      case 'want':\n        this.props.onChangePermissions(this.props.topic, perm);\n        break;\n      case 'given':\n        this.props.onChangePermissions(this.props.topic, perm, this.props.topic);\n        break;\n      case 'user':\n        this.props.onChangePermissions(this.props.topic, perm, this.state.userPermissionsEdited);\n        break;\n    }\n\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handleLaunchPermissionsEditor(which, uid) {\n    const {formatMessage} = this.props.intl;\n    let toEdit, toCompare, toSkip, titleEdit, titleCompare, userTitle, userAvatar;\n    switch (which) {\n      case 'mode':\n        toEdit = this.state.access;\n        break;\n      case 'want':\n        toEdit = this.state.modeWant;\n        toCompare = this.state.modeGiven;\n        if (this.state.owner) {\n          // Don't allow owner to unset 'O' permission. All other permissions are OK.\n          toSkip = 'O';\n        } else {\n          // Allow accepting any of 'ASDO' permissions but don't allow asking for them.\n          toSkip = Tinode.AccessMode.encode(Tinode.AccessMode.diff('ASDO', this.state.modeGiven));\n          if (this.state.channel) {\n            // Channels are read-only.\n            toSkip += 'W';\n          }\n        }\n        titleEdit = formatMessage(messages.requested);\n        titleCompare = formatMessage(messages.granted);\n        break;\n      case 'given':\n        toEdit = this.state.modeGiven2;\n        toCompare = this.state.modeWant2;\n        toSkip = this.state.groupTopic ? (this.state.owner ? '' : 'O') : 'ASDO';\n        titleEdit = formatMessage(messages.granted);\n        titleCompare = formatMessage(messages.requested);\n        break;\n      case 'auth':\n        toEdit = this.state.auth;\n        toSkip = 'O';\n        break;\n      case 'anon':\n        toEdit = this.state.anon;\n        toSkip = 'O';\n        break;\n      case 'user': {\n        const topic = this.props.tinode.getTopic(this.props.topic);\n        if (!topic) {\n          return;\n        }\n        const user = topic.subscriber(uid);\n        if (!user || !user.acs) {\n          return;\n        }\n        toEdit = user.acs.getGiven();\n        toCompare = user.acs.getWant();\n        toSkip = this.state.owner ? '' : 'O';\n        titleEdit = formatMessage(messages.granted);\n        titleCompare = formatMessage(messages.requested);\n        if (user.public) {\n          userTitle = user.public.fn;\n          userAvatar = user.public.photo;\n        }\n        break;\n      }\n      default:\n        console.log(\"Unknown permission editing mode '\" + which + \"'\");\n        break;\n    }\n    this.setState({\n      showPermissionEditorFor: which,\n      userPermissionsEdited: uid,\n      userPermissionsTitle: userTitle,\n      userPermissionsAvatar: userAvatar,\n      editedPermissions: toEdit,\n      immutablePermissions: toCompare,\n      editedPermissionsTitle: titleEdit,\n      immutablePermissionsTitle: titleCompare,\n      editedPermissionsSkipped: toSkip,\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handleShowAddMembers(e) {\n    e.preventDefault();\n    this.props.onInitFind();\n    this.setState({showMemberPanel: true});\n  }\n\n  handleHideAddMembers() {\n    this.setState({showMemberPanel: false});\n  }\n\n  handleMemberUpdateRequest(members, added, removed) {\n    this.props.onMemberUpdateRequest(this.props.topic, added, removed);\n    this.setState({showMemberPanel: false});\n  }\n\n  handleDeleteMessages(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(this.state.deleter ? messages.delete_messages : messages.clear_messages), // title\n      formatMessage(this.state.deleter ? messages.delete_messages_warning : messages.clear_messages_warning), // content\n      (() => { this.props.onDeleteMessages(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleLeave(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.leave_chat), // title\n      formatMessage(messages.leave_chat_warning), // content\n      (() => { this.props.onLeaveTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleBlock(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.block_contact), // title\n      formatMessage(messages.block_contact_warning), // content\n      (() => { this.props.onBlockTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleReport(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.report_chat), // title\n      formatMessage(messages.report_chat_warning), // content\n      (() => { this.props.onReportTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleMemberSelected(uid) {\n    this.setState({selectedContact: uid});\n  }\n\n  handleMoreInfo(open) {\n    this.setState({moreInfoExpanded: open});\n  }\n\n  handleTagsUpdated(tags) {\n    if (!arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      this.props.onTopicTagsUpdate(this.props.topic, tags);\n    }\n  }\n\n  handleContextMenu(params) {\n    const {formatMessage} = this.props.intl;\n    const instance = this;\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    const user = topic.subscriber(params.topicName);\n    if (!user || !user.acs) {\n      return;\n    }\n\n    const menuItems = [\n      {title: formatMessage(messages.edit_permissions), handler: function() {\n        instance.handleLaunchPermissionsEditor('user', params.topicName);\n      }},\n      'member_delete',\n      user.acs.isMuted() ? 'member_unmute' : 'member_mute',\n      user.acs.isJoiner() ? 'member_block' : 'member_unblock'\n    ];\n    this.props.showContextMenu({\n      topicName: this.props.topic,\n      x: params.x,\n      y: params.y,\n      user: params.topicName}, menuItems);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n\n    return (\n      <div id=\"info-view\">\n        <div className=\"caption-panel\" id=\"info-caption-panel\">\n          <div className=\"panel-title\" id=\"info-title\">\n            <FormattedMessage id=\"title_info\" defaultMessage=\"Info\" description=\"Title for InfoView\" />\n          </div>\n          <div>\n            <MenuCancel onCancel={this.props.onCancel} />\n          </div>\n        </div>\n        {this.props.displayMobile ?\n          <ErrorPanel\n            level={this.props.errorLevel}\n            text={this.props.errorText}\n            onClearError={this.props.onError} /> : null}\n        {this.state.showMemberPanel ?\n          <GroupManager\n            members={this.state.contactList}\n            requiredMember={this.props.myUserId}\n            keepInitialMembers={!this.state.admin && !this.state.owner}\n            myUserId={this.props.myUserId}\n            contacts={this.props.searchableContacts}\n            onCancel={this.handleHideAddMembers}\n            onSubmit={this.handleMemberUpdateRequest} />\n          :\n        this.state.showPermissionEditorFor ?\n          <PermissionsEditor\n            mode={this.state.editedPermissions}\n            compare={this.state.immutablePermissions}\n            skip={this.state.editedPermissionsSkipped}\n            modeTitle={this.state.editedPermissionsTitle}\n            compareTitle={this.state.immutablePermissionsTitle}\n            userTitle={this.state.userPermissionsTitle}\n            item={this.state.userPermissionsEdited}\n            userAvatar={this.state.userPermissionsAvatar}\n            onSubmit={this.handlePermissionsChanged}\n            onCancel={this.handleHidePermissionsEditor}\n            />\n          :\n          <div id=\"info-view-content\" className=\"scrollable-panel\">\n            <div className=\"panel-form-row\">\n              <div className=\"panel-form-column\">\n                <div><label className=\"small\">\n                  <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                    description=\"Label for editing topic name\" />\n                </label></div>\n                <div><InPlaceEdit\n                    placeholder={this.state.groupTopic ? \"Group name\" : <i>Unknown</i>}\n                    readOnly={!this.state.owner}\n                    value={this.state.fullName}\n                    required={true}\n                    onFinished={this.handleFullNameUpdate} /></div>\n                <div>\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                      description=\"Label for editing 'private'\" />\n                  </label>\n                </div>\n                <div>\n                  <FormattedMessage id=\"private_editing_placeholder\"\n                    defaultMessage=\"Visible to you only\"\n                    description=\"Placeholder for editing 'private'\">{\n                    (private_placeholder) => <InPlaceEdit\n                      placeholder={private_placeholder}\n                      value={this.state.private}\n                      onFinished={this.handlePrivateUpdate} />\n                  }</FormattedMessage>\n                </div>\n              </div>\n              <AvatarUpload\n                avatar={this.state.avatar}\n                readOnly={!this.state.owner}\n                uid={this.props.topic}\n                title={this.state.fullName}\n                onImageChanged={this.handleImageChanged}\n                onError={this.props.onError} />\n            </div>\n            <div className=\"hr\" />\n            <div className=\"panel-form-column\">\n              <div className=\"panel-form-row\">\n                <label>\n                  <FormattedMessage id=\"label_muting_topic\" defaultMessage=\"Muted:\"\n                    description=\"Label for Muting/unmuting the topic\" />\n                </label>\n                <CheckBox name=\"P\" checked={this.state.muted}\n                  onChange={this.handleMuted} />\n              </div>\n              <FormattedMessage id=\"action_more\" defaultMessage=\"More\"\n                description=\"Action for showing more content\">{\n                (more) => <MoreButton\n                  title={more}\n                  open={this.state.moreInfoExpanded}\n                  onToggle={this.handleMoreInfo} />\n              }</FormattedMessage>\n              {this.state.moreInfoExpanded ?\n                <div className=\"panel-form-column\">\n                  <div className=\"panel-form-row\">\n                    <label><FormattedMessage id=\"label_user_id\" /></label>\n                    <tt>{this.state.address}</tt>\n                  </div>\n                  {this.state.groupTopic ?\n                    <div className=\"panel-form-row\">\n                      <label>\n                        <FormattedMessage id=\"label_your_permissions\" defaultMessage=\"Your permissions:\"\n                          description=\"Label for current user permissions\" />\n                      </label>\n                      <tt className=\"clickable\"\n                        onClick={this.handleLaunchPermissionsEditor.bind(this, 'want')}>\n                        {this.state.access}\n                      </tt>\n                    </div>\n                    :\n                    <div>\n                      <div>\n                        <label className=\"small\">\n                          <FormattedMessage id=\"label_permissions\" defaultMessage=\"Permissions:\"\n                            description=\"Section title\" />\n                        </label>\n                      </div>\n                      <div className=\"quoted\">\n                        <div>\n                          <FormattedMessage id=\"label_you\" defaultMessage=\"You:\"\n                            description=\"Label for the current user\" /> &nbsp;<tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'want')}>\n                          {this.state.access}\n                        </tt></div>\n                        <div>{this.state.fullName ? this.state.fullName : formatMessage(messages.other_user)}:\n                          &nbsp;<tt className=\"clickable\" onClick={this.handleLaunchPermissionsEditor.bind(this, 'given')}>\n                          {this.state.modeGiven2}\n                          </tt>\n                        </div>\n                      </div>\n                    </div>\n                  }\n                  {this.state.sharer && (this.state.auth || this.state.anon) ?\n                  <div>\n                    <div>\n                      <label className=\"small\">\n                        <FormattedMessage id=\"label_default_access\" defaultMessage=\"Default access mode:\"\n                          description=\"Section title\" />\n                      </label>\n                    </div>\n                    <div className=\"quoted\">\n                      <div>Auth: {this.state.admin ?\n                        <tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>\n                          {this.state.auth}\n                        </tt>\n                        :\n                        <tt>{this.state.auth}</tt>\n                      }\n                      </div>\n                      <div>Anon: {this.state.admin ?\n                        <tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>\n                          {this.state.anon}\n                        </tt>\n                        :\n                        <tt>{this.state.anon}</tt>\n                      }\n                      </div>\n                    </div>\n                  </div>\n                  :\n                  null\n                }\n                </div>\n              :\n              null\n              }\n            </div>\n            <div className=\"hr\" />\n            {this.state.owner ?\n              <>\n                <FormattedMessage id=\"title_tag_manager\">{\n                  (tags) => <TagManager\n                    title={tags}\n                    tags={this.state.tags}\n                    activated={false}\n                    onSubmit={this.handleTagsUpdated} />\n                }</FormattedMessage>\n                <div className=\"hr\" />\n              </>\n              :\n              null\n            }\n            <div className=\"panel-form-column\">\n              {!this.state.channel ?\n                <a href=\"#\" className=\"flat-button\" onClick={this.handleDeleteMessages}>\n                  <i className=\"material-icons\">delete_outline</i> &nbsp;{\n                    formatMessage(this.state.deleter ? messages.delete_messages : messages.clear_messages)\n                  }\n                </a>\n                :\n                null\n              }\n              <a href=\"#\" className=\"red flat-button\" onClick={this.handleLeave}>\n                <i className=\"material-icons\">exit_to_app</i> &nbsp;{formatMessage(messages.leave_chat)}\n              </a>\n              {!this.state.groupTopic ?\n                <a href=\"#\" className=\"red flat-button\" onClick={this.handleBlock}>\n                  <i className=\"material-icons\">block</i> &nbsp;{formatMessage(messages.block_contact)}\n                </a>\n                :\n                null\n              }\n              {!this.state.owner ?\n                <a href=\"#\" className=\"red flat-button\" onClick={this.handleReport}>\n                  <i className=\"material-icons\">report</i> &nbsp;{formatMessage(messages.report_chat)}\n                </a>\n                :\n                null\n              }\n            </div>\n            {this.state.groupTopic && this.state.sharer ?\n              <>\n                <div className=\"hr\" />\n                <div className=\"panel-form-column\">\n                  <div className=\"panel-form-row\">\n                    <label className=\"small\">\n                      <FormattedMessage id=\"label_group_members\" defaultMessage=\"Group members:\"\n                        description=\"Section title or label\" />\n                    </label>\n                  </div>\n                  <div className=\"panel-form-row\">\n                    <a href=\"#\" className=\"flat-button\" onClick={this.handleShowAddMembers}>\n                      <i className=\"material-icons\">person_add</i> &nbsp;<FormattedMessage id=\"button_add_members\"\n                        defaultMessage=\"Add members\" description=\"Flat button [Add members] (to topic)\" />\n                    </a>\n                  </div>\n                  <FormattedMessage id=\"group_has_no_members\" defaultMessage=\"No members\"\n                    description=\"Shown in place of group members\">{\n                    (no_members) => <ContactList\n                      contacts={this.state.contactList}\n                      myUserId={this.props.myUserId}\n                      emptyListMessage={no_members}\n                      topicSelected={this.state.selectedContact}\n                      showOnline={false}\n                      showUnread={false}\n                      showMode={true}\n                      noScroll={true}\n                      onTopicSelected={this.handleMemberSelected}\n                      showContextMenu={this.state.admin ? this.handleContextMenu : false}\n                    />\n                  }</FormattedMessage>\n                </div>\n              </>\n              :\n              null\n            }\n          </div>\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(InfoView);\n","// File uload/download progress indicator with a cancel inside.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class FileProgress extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"uploader\">\n        <div><span style={{width: (this.props.progress * 100) + \"%\"}}></span></div>\n        {this.props.progress < 0.999 ?\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n            <i className=\"material-icons\">close</i> <FormattedMessage id=\"action_cancel\"\n              defaultMessage=\"cancel\" description=\"Call to action [cancel]\" />\n          </a>\n          :\n          <FormattedMessage id=\"upload_finishing\" defaultMessage=\"finishing...\"\n            description=\"Notification that upload is finishing\" />\n        }\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\nimport { bytesToHumanSize } from '../lib/strformat.js';\nimport { isUrlRelative, sanitizeUrl } from '../lib/utils.js';\n\nexport default class Attachment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      downloader: null,\n      progress: 0\n    };\n\n    this.downloadFile = this.downloadFile.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  downloadFile(url, filename, mimetype) {\n    var downloader = this.props.tinode.getLargeFileHelper();\n    this.setState({downloader: downloader});\n    downloader.download(url, filename, mimetype, (loaded) => {\n      this.setState({progress: loaded / this.props.size});\n    }).then(() => {\n      this.setState({downloader: null, progress: 0});\n    }).catch((err) => {\n      if (err) {\n        this.props.onError(\"Error downloading file: \" + err.message, 'err');\n      }\n      this.setState({downloader: null, progress: 0});\n    });\n  }\n\n  handleCancel() {\n    if (this.props.uploader) {\n      this.props.onCancelUpload();\n    } else if (this.state.downloader) {\n      this.state.downloader.cancel();\n    }\n  }\n\n  render() {\n    let filename = this.props.filename || 'file_attachment';\n    if (filename.length > 36) {\n      filename = filename.substr(0, 16) + '...' + filename.substr(-16);\n    }\n    let size = this.props.size > 0 ?\n      <span className=\"small gray\">({bytesToHumanSize(this.props.size)})</span> :\n      null;\n\n    // Detect if the download URL is relative or absolute.\n    // If the URL is relative use LargeFileHelper to attach authentication\n    // credentials to the request.\n    let url, helperFunc;\n    if (!this.props.uploader && !this.state.downloader && isUrlRelative(this.props.downloadUrl)) {\n      // Relative URL. Use download helper.\n      url = '#';\n      helperFunc = (e) => {\n        e.preventDefault();\n        this.downloadFile(this.props.downloadUrl, this.props.filename, this.props.mimetype);\n      };\n    } else {\n      url = sanitizeUrl(this.props.downloadUrl) || 'about:blank';\n      helperFunc = null;\n    }\n    return (\n      <div className=\"attachment\">\n        <div><i className=\"material-icons big gray\">insert_drive_file</i></div>\n        <div className=\"flex-column\">\n          <div>{filename} {size}</div>\n          {this.props.uploader || this.state.downloader ?\n            <FileProgress progress={this.props.uploader ? this.props.progress : this.state.progress}\n              onCancel={this.handleCancel} />\n            :\n            <div><a href={url} download={this.props.filename} onClick={helperFunc} >\n              <i className=\"material-icons\">file_download</i> <FormattedMessage id=\"save_attachment\"\n                defaultMessage=\"save\" description=\"Call to save an attachment\" />\n            </a></div>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n","// Received/read indicator.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { shortDateFormat } from '../lib/strformat.js';\n\nconst messages = defineMessages({\n  'sending': {\n    'id': 'message_sending',\n    'defaultMessage': 'sending...',\n    'description': 'Message being sent, in place of time stamp'\n  },\n  'failed': {\n    'id': 'message_sending_failed',\n    'defaultMessage': 'failed',\n    'description': 'Failed to send message, in place of time stamp'\n  }\n});\n\nclass ReceivedMarker extends React.PureComponent {\n  render() {\n    const {formatMessage} = this.props.intl;\n    let timestamp;\n    if (this.props.received <= Tinode.MESSAGE_STATUS_SENDING) {\n      timestamp = formatMessage(messages.sending);\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_FAILED) {\n      timestamp = formatMessage(messages.failed);\n    } else {\n      timestamp = shortDateFormat(this.props.timestamp, this.props.intl.locale);\n    }\n\n    let marker = null;\n    if (this.props.received <= Tinode.MESSAGE_STATUS_SENDING) {\n      marker = (<i className=\"material-icons small\">access_time</i>); // watch face\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_FAILED) {\n      marker = (<i className=\"material-icons small amber\">warning</i>); // yellow icon /!\\\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_SENT) {\n      marker = (<i className=\"material-icons small\">done</i>); // checkmark\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_RECEIVED) {\n      marker = (<i className=\"material-icons small\">done_all</i>); // double checkmark\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_READ) {\n      marker = (<i className=\"material-icons small blue\">done_all</i>); // blue double checkmark\n    }\n\n    return (\n      <span className=\"timestamp\">\n        {timestamp}{'\\u00a0'}{marker}\n      </span>\n    );\n  }\n};\n\nexport default injectIntl(ReceivedMarker);\n","// Image view with progress bar and a cancel button.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\n\nexport default class UploadingImage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"inline-image\">\n        <img src={this.props.src} />\n        <FileProgress progress={this.props.progress} onCancel={this.props.onCancelUpload} />\n      </div>\n    );\n  }\n};\n","// Single message, sent or received.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Drafty } from 'tinode-sdk'\n\nimport Attachment from './attachment.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\nimport UploadingImage from './uploading-image.jsx'\nimport { sanitizeImageUrl, sanitizeUrl } from '../lib/utils.js';\n\nexport default class ChatMessage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      progress: 0\n    };\n\n    if (props.uploader) {\n      props.uploader.onProgress = this.handleProgress.bind(this);\n    }\n\n    this.handleImagePreview = this.handleImagePreview.bind(this);\n    this.handleFormButtonClick = this.handleFormButtonClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n  }\n\n  handleImagePreview(e) {\n    e.preventDefault();\n    this.props.onImagePreview({\n      url: e.target.src,\n      filename: e.target.title,\n      width: e.target.dataset.width,\n      height: e.target.dataset.height,\n      size: e.target.dataset.size,\n      type: e.target.dataset.mime\n    });\n  }\n\n  handleFormButtonClick(e) {\n    e.preventDefault();\n    const data = {\n      seq: this.props.seq\n    };\n    data.resp = {};\n    if (e.target.dataset.name) {\n      data.resp[e.target.dataset.name] = e.target.dataset.val ? e.target.dataset.val :\n        e.target.dataset.val === undefined ? 1 : '' + e.target.dataset.val;\n    }\n    if (e.target.dataset.act == 'url') {\n      data.ref = sanitizeUrl(e.target.dataset.ref) || 'about:blank';\n    }\n    const text = e.target.dataset.title || 'unknown';\n    this.props.onFormResponse(e.target.dataset.act, text, data);\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const menuItems = this.props.received == Tinode.MESSAGE_STATUS_FAILED ? ['menu_item_send_retry'] : [];\n    this.props.showContextMenu({ seq: this.props.seq, content: this.props.content,\n                                 y: e.pageY, x: e.pageX }, menuItems);\n  }\n\n  handleProgress(ratio) {\n    this.setState({progress: ratio});\n  }\n\n  handleCancelUpload() {\n    this.props.uploader.cancel();\n  }\n\n  render() {\n    const sideClass = this.props.deleted ? 'center' :\n      (this.props.sequence + ' ' + (this.props.response ? 'left' : 'right'));\n    const bubbleClass = (this.props.sequence == 'single' || this.props.sequence == 'last') ? 'bubble tip' : 'bubble';\n    const avatar = this.props.deleted ? null : (this.props.userAvatar || true);\n    const fullDisplay = (this.props.userFrom && this.props.response &&\n      (this.props.sequence == 'single' || this.props.sequence == 'last'));\n\n    let content = this.props.content;\n    const attachments = [];\n    if (this.props.mimeType == Drafty.getContentType() && Drafty.isValid(content)) {\n      Drafty.attachments(content, function(att, i) {\n        if (att.mime == 'application/json') {\n          // Don't show json objects as attachments.\n          // They are not meant for users.\n          return;\n        }\n        attachments.push(<Attachment\n          tinode={this.props.tinode}\n          downloadUrl={Drafty.getDownloadUrl(att)}\n          filename={att.name} uploader={Drafty.isUploading(att)}\n          mimetype={att.mime} size={Drafty.getEntitySize(att)}\n          progress={this.state.progress}\n          onCancelUpload={this.handleCancelUpload}\n          onError={this.props.onError}\n          key={i} />);\n      }, this);\n      content = React.createElement(React.Fragment, null, Drafty.format(content, draftyFormatter, this));\n    } else if (this.props.deleted) {\n      // Message represents a range of deleted messages.\n      content = <><i className=\"material-icons gray\">block</i> <i className=\"gray\">\n        <FormattedMessage id=\"deleted_content\"\n          defaultMessage=\"content deleted\" description=\"Shown when messages are deleted\" />\n      </i></>\n    } else if (typeof content != 'string') {\n      content = <>\n          <i className=\"material-icons gray\">error_outline</i> <i className=\"gray\">\n            <FormattedMessage id=\"invalid_content\"\n              defaultMessage=\"invalid content\" description=\"Shown when message is unreadable\" /></i>\n        </>\n    }\n\n    return (\n      <li className={sideClass}>\n        {this.props.userFrom && this.props.response ?\n          <div className=\"avatar-box\">\n            {fullDisplay ?\n              <LetterTile\n                topic={this.props.userFrom}\n                title={this.props.userName}\n                avatar={avatar} /> :\n              null}\n          </div> :\n          null}\n        <div>\n          <div className={bubbleClass}>\n            <div className=\"message-content\">\n              {content}\n              {attachments}\n              {this.props.timestamp ?\n                <ReceivedMarker\n                  timestamp={this.props.timestamp}\n                  received={this.props.received} />\n                : null}\n            </div>\n            {this.props.deleted || !this.props.showContextMenu ?\n              null :\n              <span className=\"menuTrigger\">\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">expand_more</i>\n                </a>\n              </span>\n            }\n          </div>\n          {fullDisplay ?\n            <div className=\"author\">\n              <FormattedMessage id=\"user_not_found\" defaultMessage=\"Not found\"\n                description=\"In place of a user's full name when the user is not found.\">{\n                    (notFound) => {return this.props.userName || <i>{notFound}</i>}\n              }</FormattedMessage>\n            </div>\n            : null\n          }\n        </div>\n      </li>\n    );\n  }\n};\n\n// Convert Drafty object to a tree of React elements.\nimport { BROKEN_IMAGE_SIZE, REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\n\nfunction draftyFormatter(style, data, values, key) {\n  let el = Drafty.tagName(style);\n  if (el) {\n    const attr = Drafty.attrValue(style, data) || {};\n    attr.key = key;\n    switch (style) {\n      case 'IM':\n        // Additional processing for images\n        if (data) {\n          if (Drafty.isUploading(data)) {\n            // Use custom element instead of <img>.\n            el = 'UploadingImage';\n          }\n          attr.className = 'inline-image';\n          let dim = fitImageSize(data.width, data.height,\n            Math.min(this.props.viewportWidth - REM_SIZE * 4, REM_SIZE * 36), REM_SIZE * 24, false);\n          dim = dim || {dstWidth: BROKEN_IMAGE_SIZE, dstHeight: BROKEN_IMAGE_SIZE};\n          attr.style = { width: dim.dstWidth + 'px', height: dim.dstHeight + 'px' };\n          attr.src = sanitizeImageUrl(attr.src);\n          if (attr.src) {\n            attr.onClick = this.handleImagePreview;\n            attr.className += ' image-clickable';\n          } else {\n            attr.src = 'img/broken_image.png';\n          }\n        }\n        break;\n      case 'BN':\n        // Button\n        attr.onClick = this.handleFormButtonClick;\n        let inner = React.Children.map(values, (child) => {\n          return typeof child == 'string' ? child : undefined;\n        });\n        if (!inner || inner.length == 0) {\n          inner = [attr.name]\n        }\n        // Get text which will be sent back when the button is clicked.\n        attr['data-title'] = inner.join('');\n        break;\n      case 'FM':\n        // Form\n        attr.className = 'bot-form';\n        break;\n      case 'FE':\n        // Form element formatting is dependent on element content.\n        break;\n    }\n    return React.createElement(el, attr, values);\n  } else {\n    return values;\n  }\n};\n","// Send message form.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport { KEYPRESS_DELAY } from '../config.js';\nimport { filePasted } from '../lib/blob-helpers.js';\n\nconst messages = defineMessages({\n  'messaging_disabled': {\n    id: 'messaging_disabled_prompt',\n    defaultMessage: 'Messaging disabled',\n    description: 'Prompt in SendMessage in read-only topic'\n  },\n  'type_new_message': {\n    id: 'new_message_prompt',\n    defaultMessage: 'New message',\n    description: 'Prompt in send message field'\n  },\n  'add_image_caption': {\n    id: 'image_caption_prompt',\n    defaultMessage: 'Image caption',\n    description: 'Prompt in SendMessage for attached image'\n  },\n  'file_attachment_too_large': {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  },\n  'cannot_initiate_upload': {\n    id: 'cannot_initiate_file_upload',\n    defaultMessage: 'Cannot initiate file upload.',\n    description: 'Generic error messagewhen attachment fails'\n  },\n});\n\nclass SendMessage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      message: '',\n      // Make initial keypress time as if it happened 5001 milliseconds in the past.\n      keypressTimestamp: new Date().getTime() - KEYPRESS_DELAY - 1\n    };\n\n    this.handlePasteEvent = this.handlePasteEvent.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleSend = this.handleSend.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleMessageTyping = this.handleMessageTyping.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.addEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.removeEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.messageEditArea) {\n      this.messageEditArea.focus();\n    }\n  }\n\n  handlePasteEvent(e) {\n    if (this.props.disabled) {\n      return;\n    }\n    // FIXME: handle large files too.\n    if (filePasted(e,\n      (bits, mime, width, height, fname) => {\n        this.props.onAttachImage(mime, bits, width, height, fname);\n      },\n      (mime, bits, fname) => {\n        this.props.onAttachFile(mime, bits, fname);\n      },\n      this.props.onError)) {\n\n      // If a file was pasted, don't paste base64 data into input field.\n      e.preventDefault();\n    }\n  }\n\n  handleAttachImage(e) {\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachImage(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleAttachFile(e) {\n    const {formatMessage} = this.props.intl;\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachFile(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleSend(e) {\n    e.preventDefault();\n    const message = this.state.message.trim();\n    if (message || this.props.acceptBlank || this.props.noInput) {\n      this.props.onSendMessage(message);\n      this.setState({message: ''});\n    }\n  }\n\n  /* Send on Enter key */\n  handleKeyPress(e) {\n    // Remove this if you don't want Enter to trigger send\n    if (e.key === 'Enter') {\n      // Have Shift-Enter insert a line break instead\n      if (!e.shiftKey) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.handleSend(e);\n      }\n    }\n  }\n\n  handleMessageTyping(e) {\n    const newState = {message: e.target.value};\n    if (this.props.onKeyPress) {\n      const now = new Date().getTime();\n      if (now - this.state.keypressTimestamp > KEYPRESS_DELAY) {\n        this.props.onKeyPress();\n        newState.keypressTimestamp = now;\n      }\n    }\n    this.setState(newState);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const prompt = this.props.disabled ?\n      formatMessage(messages.messaging_disabled) :\n      (this.props.messagePrompt ?\n        formatMessage(messages[this.props.messagePrompt]) :\n        formatMessage(messages.type_new_message));\n    return (\n      <div id=\"send-message-panel\">\n        {!this.props.disabled ?\n          <>\n            {this.props.onAttachFile ?\n              <>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachImage.click();}} title=\"Add image\">\n                  <i className=\"material-icons secondary\">photo</i>\n                </a>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachFile.click();}} title=\"Attach file\">\n                  <i className=\"material-icons secondary\">attach_file</i>\n                </a>\n              </>\n              :\n              null}\n            {this.props.noInput ?\n              <div className=\"hr thin\" /> :\n              <textarea id=\"sendMessage\" placeholder={prompt}\n                value={this.state.message} onChange={this.handleMessageTyping}\n                onKeyPress={this.handleKeyPress}\n                ref={(ref) => {this.messageEditArea = ref;}}\n                autoFocus />}\n            <a href=\"#\" onClick={this.handleSend} title=\"Send\">\n              <i className=\"material-icons\">send</i>\n            </a>\n            <input type=\"file\" ref={(ref) => {this.attachFile = ref;}}\n              onChange={this.handleAttachFile} style={{display: 'none'}} />\n            <input type=\"file\" ref={(ref) => {this.attachImage = ref;}} accept=\"image/*\"\n              onChange={this.handleAttachImage} style={{display: 'none'}} />\n          </>\n          :\n          <div id=\"writing-disabled\">{prompt}</div>\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SendMessage);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { bytesToHumanSize } from '../lib/strformat.js';\n\n// Get material icon name from mime type.\nfunction iconFromMime(mime) {\n  // If more icons become available in material icons, add them to this mime-to-icon mapping.\n  const mimeToIcon = {default: 'insert_drive_file', image: 'image', text: 'description', video: 'theaters'};\n\n  return mimeToIcon[mime] || mimeToIcon[(mime || '').split('/')[0]] || mimeToIcon['default'];\n}\n\nexport default class DocPreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleSendDoc = this.handleSendDoc.bind(this);\n  }\n\n  handleSendDoc(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(this.props.content.file);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          <span>{this.props.content.filename}</span>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\">\n          <div className=\"flex-column narrow\">\n            <i className=\"material-icons gray\">{iconFromMime(this.props.content.type)}</i>\n            <div><b><FormattedMessage id=\"label_content_type\" /></b> {this.props.content.type || 'application/octet-stream'}</div>\n            <div><b><FormattedMessage id=\"label_size\" /></b> {bytesToHumanSize(this.props.content.size)}</div>\n          </div>\n        </div>\n        <SendMessage\n          noInput={true}\n          onSendMessage={this.handleSendDoc}\n          onError={this.props.onError} />\n      </div>\n    );\n  }\n};\n","// GroupSubs: a list of group subscribers currently online.\n// Show in the topic title bar\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { MAX_ONLINE_IN_TOPIC } from '../config.js'\n\nimport LetterTile from './letter-tile.jsx';\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class GroupSubs extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const usersOnline = [];\n    const totalCount = (this.props.subscribers || []).length;\n    const countToShow = Math.min(MAX_ONLINE_IN_TOPIC, totalCount);\n\n    (this.props.subscribers || []).some((sub) => {\n      usersOnline.push(\n        <div className=\"avatar-box\" key={sub.user}>\n          <LetterTile\n            topic={sub.user}\n            avatar={makeImageUrl(sub.public ? sub.public.photo : null) || true}\n            title={sub.public ? sub.public.fn : null} />\n        </div>\n      );\n      return usersOnline.length == countToShow;\n    });\n\n    return (\n      <div id=\"topic-users\">{usersOnline} {totalCount > countToShow ?\n        <span>\n          <FormattedMessage id=\"more_online_members\" defaultMessage=\"+{overflow} more\"\n              description=\"Shown in MessagesView title bar when the number of online subscribers exceeds MAX_ONLINE_IN_TOPIC\"\n              values={{ overflow: (totalCount - countToShow) }} />\n        </span> : null}\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\nimport { bytesToHumanSize } from '../lib/strformat.js';\n\nexport default class ImagePreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      width: 0,\n      height: 0\n    };\n\n    this.handleSendImage = this.handleSendImage.bind(this);\n  }\n\n  assignWidth(node) {\n    if (node && !this.state.width) {\n      const bounds = node.getBoundingClientRect();\n      this.setState({\n        width: bounds.width | 0,\n        height: bounds.height | 0\n      });\n    }\n  }\n\n  handleSendImage(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(caption, this.props.content.blob);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n\n    const dim = fitImageSize(this.props.content.width, this.props.content.height,\n      this.state.width, this.state.height, false);\n    const size = dim ? { width: dim.dstWidth + 'px', height: dim.dstHeight + 'px' } :\n      ((this.props.content.width > this.props.content.height) ? {width: '100%'} : {height: '100%'});\n    size.maxWidth = '100%';\n    size.maxHeight = '100%';\n\n    let filename = this.props.content.filename;\n    // Average font aspect ratio is ~0.5; File name takes 1/3 of the viewport width.\n    const maxlength = Math.max(((this.state.width / REM_SIZE / 1.5) | 0) - 2, 12);\n    if (filename.length > maxlength) {\n      filename = filename.slice(0, maxlength/2 - 1) + '…' + filename.slice(1 - maxlength/2);\n    }\n    const width = this.props.content.width || '-';\n    const height = this.props.content.height || '-';\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          {!this.props.onSendMessage ?\n            <a href={this.props.content.url} download={this.props.content.filename}>\n              <i className=\"material-icons\">file_download</i> <FormattedMessage\n                id=\"download_action\" defaultMessage=\"download\" description=\"Call to action [download]\" />\n            </a>\n            :\n            <span>{this.props.content.filename}</span>\n          }\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\" ref={(node) => this.assignWidth(node)}>\n          <img src={this.props.content.url} style={size} />\n        </div>\n        {this.props.onSendMessage ?\n          <SendMessage\n            messagePrompt=\"add_image_caption\"\n            acceptBlank={true}\n            onSendMessage={this.handleSendImage}\n            onError={this.props.onError} />\n          :\n          <div id=\"image-preview-footer\">\n            <div>\n              <div><b><FormattedMessage id=\"label_file_name\" defaultMessage=\"File name:\"\n                description=\"Label for a file name\" /></b></div>\n              <div><span title={this.props.content.filename}>{filename ? filename : '-'}</span></div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n                description=\"Label for file content type (mime)\" /></b></div>\n              <div>{this.props.content.type}</div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n                description=\"Label for file size\" /></b></div>\n              <div>{width} &times; {height} px; {bytesToHumanSize(this.props.content.size)}</div>\n            </div>\n          </div>}\n      </div>\n    );\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Invitation extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleButtonAction = this.handleButtonAction.bind(this);\n  }\n\n  handleButtonAction(evt, data) {\n    evt.preventDefault();\n    this.props.onAction(data);\n  }\n\n  render() {\n    return (\n      <div className=\"accept-invite-panel\">\n        <div className=\"title\">\n          <FormattedMessage id=\"chat_invitation\"\n            defaultMessage=\"You are invited to start a new chat. What would you like to do?\"\n            description=\"New chat invitation message: [Accept] [Ignore] [Block].\" />\n        </div>\n        <div className=\"footer\">\n          <button className=\"blue\" onClick={event => { this.handleButtonAction(event, \"accept\"); }}>\n            <FormattedMessage id=\"chat_invitation_accept\"\n              defaultMessage=\"Accept\" description=\"Action [Accept] for chat invitation.\" />\n          </button>\n          <button className=\"white\" onClick={event => { this.handleButtonAction(event, \"delete\"); }}>\n            <FormattedMessage id=\"chat_invitation_ignore\"\n              defaultMessage=\"Ignore\" description=\"Action [Ignore] for chat invitation.\" />\n          </button>\n          <button className=\"white\" onClick={event => { this.handleButtonAction(event, \"block\"); }}>\n            <FormattedMessage id=\"chat_invitation_block\"\n              defaultMessage=\"Block\" description=\"Action [Block] for chat invitation.\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nexport default class LoadSpinner extends React.PureComponent {\n  render() {\n    return (this.props.show ?\n      <div className=\"load-spinner-box\"><div className=\"loader-spinner\"></div></div> : null);\n  }\n}\n","/* This is just a static page to display when no conversation is selected. */\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME } from '../config.js';\n\nexport default class LogoView extends React.PureComponent {\n  render() {\n    const version = APP_NAME + ' (' + Tinode.getLibrary() + ')';\n    return (\n      <div id=\"dummy-view\">\n        <div>\n          <a href=\"https://github.com/tinode/chat/\">\n            <img id=\"logo\" alt=\"logo\" src=\"img/logo.svg\" />\n            <h2>Tinode Web</h2>\n          </a>\n          <p><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\" /> {version}</p>\n          <p><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\" /> {this.props.serverVersion} ({this.props.serverAddress})</p>\n        </div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\nconst Drafty = Tinode.Drafty;\n\nimport ChatMessage from '../widgets/chat-message.jsx';\nimport DocPreview from '../widgets/doc-preview.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupSubs from '../widgets/group-subs.jsx';\nimport ImagePreview from '../widgets/image-preview.jsx';\nimport Invitation from '../widgets/invitation.jsx';\nimport LetterTile from '../widgets/letter-tile.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport LogoView from './logo-view.jsx';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { DEFAULT_P2P_ACCESS_MODE, KEYPRESS_DELAY, MESSAGES_PAGE, MAX_EXTERN_ATTACHMENT_SIZE,\n  MAX_IMAGE_DIM, MAX_INBAND_ATTACHMENT_SIZE, READ_DELAY } from '../config.js';\nimport { SUPPORTED_IMAGE_FORMATS, blobToBase64, filePasted, fileToBase64, imageFileToBase64,\n  imageScaled, makeImageUrl } from '../lib/blob-helpers.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { bytesToHumanSize, shortDateFormat } from '../lib/strformat.js';\n\n// Run timer with this frequency (ms) for checking notification queue.\nconst NOTIFICATION_EXEC_INTERVAL = 300;\n\nconst messages = defineMessages({\n  'online_now': {\n    id: 'online_now',\n    defaultMessage: 'online now',\n    description: 'Indicator that the user or topic is currently online',\n  },\n  'last_seen': {\n    id: 'last_seen_timestamp',\n    defaultMessage: 'Last seen',\n    description: 'Label for the timestamp of when the user or topic was last online'\n  },\n  'not_found': {\n    id: 'title_not_found',\n    defaultMessage: 'Not found',\n    description: 'Title shown when topic is not found'\n  },\n  'channel': {\n    id: 'channel',\n    defaultMessage: 'channel',\n    description: 'Subtitle shown for channels in MessagesView instead of last seen'\n  }\n});\n\n// Checks if the access permissions are granted but not yet accepted.\nfunction isUnconfirmed(acs) {\n  if (acs) {\n    const ex = acs.getExcessive() || '';\n    return acs.isJoiner('given') && (ex.includes('R') || ex.includes('W'));\n  }\n  return false;\n}\n\nfunction isPeerRestricted(acs) {\n  if (acs) {\n    const ms = acs.getMissing() || '';\n    return acs.isJoiner('want') && (ms.includes('R') || ms.includes('W'));\n  }\n  return false;\n}\n\nclass MessagesView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = MessagesView.getDerivedStateFromProps(props, {});\n\n    this.leave = this.leave.bind(this);\n    this.sendImageAttachment = this.sendImageAttachment.bind(this);\n    this.sendFileAttachment = this.sendFileAttachment.bind(this);\n    this.sendKeyPress = this.sendKeyPress.bind(this);\n    this.handleScrollReference = this.handleScrollReference.bind(this);\n    this.handleScrollEvent = this.handleScrollEvent.bind(this);\n    this.handleDescChange = this.handleDescChange.bind(this);\n    this.handleSubsUpdated = this.handleSubsUpdated.bind(this);\n    this.handleNewMessage = this.handleNewMessage.bind(this);\n    this.handleAllMessagesReceived = this.handleAllMessagesReceived.bind(this);\n    this.handleInfoReceipt = this.handleInfoReceipt.bind(this);\n    this.handleImagePostview = this.handleImagePostview.bind(this);\n    this.handleClosePreview = this.handleClosePreview.bind(this);\n    this.handleFormResponse = this.handleFormResponse.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleShowContextMenuMessage = this.handleShowContextMenuMessage.bind(this);\n    this.handleNewChatAcceptance = this.handleNewChatAcceptance.bind(this);\n    this.handleEnablePeer = this.handleEnablePeer.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.postReadNotification = this.postReadNotification.bind(this);\n    this.clearNotificationQueue = this.clearNotificationQueue.bind(this);\n\n    this.readNotificationQueue = [];\n    this.readNotificationTimer = null;\n  }\n\n  componentDidMount() {\n    // this.propsChange(this.props, this.state);\n    if (this.messagesScroller) {\n      this.messagesScroller.addEventListener('scroll', this.handleScrollEvent);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messagesScroller) {\n      this.messagesScroller.removeEventListener('scroll', this.handleScrollEvent);\n    }\n\n    // Flush all notifications.\n    this.clearNotificationQueue();\n  }\n\n  // Scroll last message into view on component update e.g. on message received\n  // or vertical shrinking.\n  componentDidUpdate(prevProps, prevState) {\n    if (this.messagesScroller) {\n      if (prevState.topic != this.state.topic || prevState.messages.length != this.state.messages.length) {\n        // New message\n        this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n      } else if (prevProps.viewportHeight > this.props.viewportHeight) {\n        // Componet changed height.\n        this.messagesScroller.scrollTop += prevProps.viewportHeight - this.props.viewportHeight;\n      }\n    }\n\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (this.state.topic != prevState.topic) {\n      if (prevState.topic && !Tinode.isNewGroupTopicName(prevState.topic)) {\n        this.leave(prevState.topic);\n      }\n\n      if (topic) {\n        topic.onData = this.handleNewMessage;\n        topic.onAllMessagesReceived = this.handleAllMessagesReceived;\n        topic.onInfo = this.handleInfoReceipt;\n        topic.onMetaDesc = this.handleDescChange;\n        topic.onSubsUpdated = this.handleSubsUpdated;\n        topic.onPres = this.handleSubsUpdated;\n      }\n    }\n\n    if (!this.props.applicationVisible) {\n      // If application is not visible, flush all unsent 'read' notifications.\n      this.clearNotificationQueue();\n    } else {\n      // Otherwise assume there are unread messages.\n      this.postReadNotification(0);\n    }\n\n    if (topic && !topic.isSubscribed() && this.props.ready &&\n        ((this.state.topic != prevState.topic) || !prevProps.ready)) {\n      // Is this a new topic?\n      const newTopic = (this.props.newTopicParams && this.props.newTopicParams._topicName == this.props.topic);\n\n      // Don't request the tags. They are useless unless the user\n      // is the owner and is editing the topic.\n      let getQuery = topic.startMetaQuery().withLaterDesc();\n      if (this.state.isSharer || (newTopic && !topic.isChannel())) {\n        // Request subscriptions only if one of S,O,A is given or it's a new non-channel topic.\n        getQuery = getQuery.withLaterSub();\n      }\n      if (this.state.isReader || newTopic) {\n        // Reading is either permitted or we don't know because it's a new topic. Ask for messages.\n        getQuery = getQuery.withLaterData(MESSAGES_PAGE);\n        if (this.state.isReader) {\n          getQuery = getQuery.withLaterDel();\n        }\n        // And show \"loading\" spinner.\n        this.setState({ fetchingMessages: true });\n      }\n      const setQuery = newTopic ? this.props.newTopicParams : undefined;\n      topic.subscribe(getQuery.build(), setQuery)\n        .then((ctrl) => {\n          if (ctrl.code == 303) {\n            // Redirect to another topic requested.\n            HashNavigation.navigateTo(HashNavigation.setUrlTopic('', ctrl.params.topic));\n            return;\n          }\n          if (this.state.topic != ctrl.topic) {\n            this.setState({topic: ctrl.topic});\n          }\n          this.props.onNewTopicCreated(this.props.topic, ctrl.topic);\n          // If there are unsent messages, try sending them now.\n          topic.queuedMessages((pub) => {\n            if (!pub._sending && topic.isSubscribed()) {\n              topic.publishMessage(pub);\n            }\n          });\n        })\n        .catch((err) => {\n          console.log(\"Failed subscription to\", this.state.topic);\n          this.props.onError(err.message, 'err');\n          const blankState = MessagesView.getDerivedStateFromProps({}, {});\n          blankState.title = this.props.intl.formatMessage(messages.not_found);\n          this.setState(blankState);\n        });\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let nextState = {};\n    if (!nextProps.topic) {\n      // Default state: no topic.\n      nextState = {\n        messages: [],\n        onlineSubs: [],\n        topic: null,\n        title: '',\n        avatar: null,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false,\n        peerMessagingDisabled: false,\n        channel: false\n      };\n    } else if (nextProps.topic != prevState.topic) {\n      const topic = nextProps.tinode.getTopic(nextProps.topic);\n      nextState = {\n        topic: nextProps.topic,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false\n      };\n\n      if (topic) {\n        // Topic exists.\n        const msgs = [];\n        const subs = [];\n\n        if (nextProps.connected) {\n          topic.subscribers((sub) => {\n            if (sub.online && sub.user != nextProps.myUserId) {\n              subs.push(sub);\n            }\n          });\n        }\n\n        topic.messages(function(msg) {\n          if (!msg.deleted) {\n            msgs.push(msg);\n          }\n        });\n\n        Object.assign(nextState, {\n          messages: msgs,\n          onlineSubs: subs\n        });\n\n        if (topic.public) {\n          Object.assign(nextState, {\n            title: topic.public.fn,\n            avatar: makeImageUrl(topic.public.photo)\n          });\n        } else {\n          Object.assign(nextState, {\n            title: '',\n            avatar: null\n          });\n        }\n\n        const peer = topic.p2pPeerDesc();\n        if (peer) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: isPeerRestricted(peer.acs)\n          });\n        } else if (prevState.peerMessagingDisabled) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: false\n          });\n        }\n        Object.assign(nextState, {\n          channel: topic.isChannel()\n        });\n      } else {\n        // Invalid topic.\n        Object.assign(nextState, {\n          messages: [],\n          onlineSubs: [],\n          title: '',\n          avatar: null,\n          peerMessagingDisabled: false,\n          channel: false\n        });\n      }\n    }\n\n    if (nextProps.acs) {\n      if (nextProps.acs.isWriter() != prevState.isWriter) {\n        nextState.isWriter = !prevState.isWriter;\n      }\n      if (nextProps.acs.isReader() != prevState.isReader) {\n        nextState.isReader = !prevState.isReader;\n      }\n      if (!nextProps.acs.isReader('given') != prevState.readingBlocked) {\n        nextState.readingBlocked = !prevState.readingBlocked;\n      }\n      if (nextProps.acs.isSharer() != prevState.isSharer) {\n        nextState.isSharer = !prevState.isSharer;\n      }\n    } else {\n      if (prevState.isWriter) {\n        nextState.isWriter = false;\n      }\n      if (prevState.isReader) {\n        nextState.isReader = false;\n      }\n      if (!prevState.readingBlocked) {\n        prevState.readingBlocked = true;\n      }\n      if (prevState.isSharer) {\n        nextState.isSharer = false;\n      }\n    }\n\n    if (isUnconfirmed(nextProps.acs) == !prevState.unconformed) {\n      nextState.unconfirmed = !prevState.unconformed;\n    }\n\n    // Clear subscribers online when there is no connection.\n    if (!nextProps.connected && prevState.onlineSubs && prevState.onlineSubs.length > 0) {\n      nextState.onlineSubs = [];\n    }\n\n    return nextState;\n  }\n\n  leave(oldTopicName) {\n    if (!oldTopicName) {\n      return;\n    }\n    let oldTopic = this.props.tinode.getTopic(oldTopicName);\n    if (oldTopic && oldTopic.isSubscribed()) {\n      oldTopic.leave(false)\n        .catch(() => { /* do nothing here */ })\n        .finally(() => {\n          // We don't care if the request succeeded or failed.\n          // The topic is dead regardless.\n          this.setState({fetchingMessages: false});\n          oldTopic.onData = undefined;\n          oldTopic.onAllMessagesReceived = undefined;\n          oldTopic.onInfo = undefined;\n          oldTopic.onMetaDesc = undefined;\n          oldTopic.onSubsUpdated = undefined;\n          oldTopic.onPres = undefined;\n        });\n    }\n  }\n\n  handleScrollReference(node) {\n    if (node) {\n      node.addEventListener('scroll', this.handleScrollEvent);\n      this.messagesScroller = node;\n      this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n    }\n  }\n\n  // Get older messages\n  handleScrollEvent(event) {\n    this.setState({scrollPosition: event.target.scrollHeight - event.target.scrollTop});\n    if (event.target.scrollTop <= 0) {\n      this.setState((prevState, props) => {\n        const newState = {};\n        if (!prevState.fetchingMessages) {\n          const topic = this.props.tinode.getTopic(this.state.topic);\n          if (topic && topic.isSubscribed() && topic.msgHasMoreMessages()) {\n            newState.fetchingMessages = true;\n            topic.getMessagesPage(MESSAGES_PAGE).catch((err) => {\n              this.setState({fetchingMessages: false});\n              this.props.onError(err.message, 'err');\n            });\n          }\n        }\n        return newState;\n      });\n    }\n  }\n\n  handleDescChange(desc) {\n    if (desc.public) {\n      this.setState({\n        title: desc.public.fn,\n        avatar: makeImageUrl(desc.public.photo)\n      });\n    } else {\n      this.setState({\n        title: '',\n        avatar: null\n      });\n    }\n\n    if (desc.acs) {\n      this.setState({\n        isWriter: desc.acs.isWriter(),\n        isReader: desc.acs.isReader(),\n        readingBlocked: !desc.acs.isReader('given'),\n        unconfirmed: isUnconfirmed(desc.acs),\n      });\n    }\n  }\n\n  postReadNotification(seq) {\n    // Ignore notifications if the app is invisible.\n    if (!this.props.applicationVisible) {\n      return;\n    }\n\n    // Set up the timer if it's not running already.\n    if (!this.readNotificationTimer) {\n      this.readNotificationTimer = setInterval(() => {\n        if (this.readNotificationQueue.length == 0) {\n          // Shut down the timer if the queue is empty.\n          clearInterval(this.readNotificationTimer);\n          this.readNotificationTimer = null;\n          return;\n        }\n\n        let seq = -1;\n        while (this.readNotificationQueue.length > 0) {\n          const n = this.readNotificationQueue[0];\n          if (n.topicName != this.state.topic) {\n            // Topic has changed. Drop the notification.\n            this.readNotificationQueue.shift();\n            continue;\n          }\n\n          const now = new Date();\n          if (n.sendAt <= now) {\n            // Remove expired notification from queue.\n            this.readNotificationQueue.shift();\n            seq = Math.max(seq, n.seq);\n          } else {\n            break;\n          }\n        }\n\n        // Send only one notification for the whole batch of messages.\n        if (seq >= 0) {\n          const topic = this.props.tinode.getTopic(this.state.topic);\n          if (topic) {\n            topic.noteRead(seq);\n          }\n        }\n      }, NOTIFICATION_EXEC_INTERVAL);\n    }\n\n    const now = new Date();\n    this.readNotificationQueue.push({\n      topicName: this.state.topic,\n      seq: seq,\n      sendAt: now.setMilliseconds(now.getMilliseconds() + READ_DELAY)\n    });\n  }\n\n  // Clear notification queue and timer.\n  clearNotificationQueue() {\n    this.readNotificationQueue = [];\n    if (this.readNotificationTimer) {\n      clearInterval(this.readNotificationTimer);\n      this.readNotificationTimer = null;\n    }\n  }\n\n  handleSubsUpdated() {\n    if (this.state.topic) {\n      const subs = [];\n      const topic = this.props.tinode.getTopic(this.state.topic);\n      topic.subscribers((sub) => {\n        if (sub.online && sub.user != this.props.myUserId) {\n          subs.push(sub);\n        }\n      });\n      const newState = {onlineSubs: subs};\n      const peer = topic.p2pPeerDesc();\n      if (peer) {\n        Object.assign(newState, {\n          peerMessagingDisabled: isPeerRestricted(peer.acs)\n        });\n      } else if (this.state.peerMessagingDisabled) {\n        Object.assign(newState, {\n          peerMessagingDisabled: false\n        });\n      }\n      this.setState(newState);\n    }\n  }\n\n  handleNewMessage(msg) {\n    // Regenerate messages list\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    const newState = {messages: []};\n    topic.messages((m) => {\n      if (!m.deleted) {\n        newState.messages.push(m);\n      }\n    });\n\n    // msg could be null if one or more messages were deleted.\n    if (msg && !msg.deleted) {\n      // If the message is added to the end of the message list,\n      // scroll to the bottom.\n      if (topic.isNewMessage(msg.seq)) {\n        newState.scrollPosition = 0;\n      }\n\n      // Aknowledge messages except own messages. They are\n      // automatically assumed to be read and recived.\n      const status = topic.msgStatus(msg);\n      if (status >= Tinode.MESSAGE_STATUS_SENT && msg.from != this.props.myUserId) {\n        this.postReadNotification(msg.seq);\n      }\n      this.props.onData(msg);\n    }\n    this.setState(newState);\n  }\n\n  handleAllMessagesReceived(count) {\n    this.setState({fetchingMessages: false});\n    if (count > 0) {\n      // 0 means \"latest\".\n      this.postReadNotification(0);\n    }\n  }\n\n  handleInfoReceipt(info) {\n    switch (info.what) {\n      case 'kp': {\n        clearTimeout(this.keyPressTimer);\n        var instance = this;\n        this.keyPressTimer = setTimeout(function() {\n          instance.setState({typingIndicator: false});\n        }, KEYPRESS_DELAY + 1000);\n        if (!this.state.typingIndicator) {\n          this.setState({typingIndicator: true});\n        }\n        break;\n      }\n      case 'read':\n      case 'recv':\n        // Redraw due to changed recv/read status.\n        this.forceUpdate();\n        break;\n      default:\n        console.log(\"Other change in topic: \", info.what);\n    }\n  }\n\n  handleImagePostview(content) {\n    this.setState({ imagePostview: content });\n  }\n\n  handleClosePreview() {\n    URL.revokeObjectURL(this.state.imagePreview.url);\n    this.setState({ imagePostview: null, imagePreview: null, docPreview: null });\n  }\n\n  handleFormResponse(action, text, data) {\n    if (action == 'pub') {\n      this.props.sendMessage(Drafty.attachJSON(Drafty.parse(text), data));\n    } else if (action == 'url') {\n      const url = new URL(data.ref);\n      const params = url.searchParams;\n      for (let key in data.resp) {\n        if (data.resp.hasOwnProperty(key)) {\n          params.set(key, data.resp[key]);\n        }\n      }\n      ['name', 'seq'].map(function(key) {\n        if (data[key]) {\n          params.set(key, data[key]);\n        }\n      });\n      params.set('uid', this.props.myUserId);\n      url.search = params;\n      window.open(url, '_blank');\n    } else {\n      console.log(\"Unknown action in form\", action);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.state.topic, y: e.pageY, x: e.pageX });\n  }\n\n  handleShowContextMenuMessage(params, messageSpecificMenuItems) {\n    params.topicName = this.state.topic;\n    const menuItems = messageSpecificMenuItems || [];\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (topic) {\n      if (!topic.isChannel()) {\n        menuItems.push('message_delete');\n      }\n      const acs = topic.getAccessMode();\n      if (acs && acs.isDeleter()) {\n        menuItems.push('message_delete_hard');\n      }\n    }\n    this.props.showContextMenu(params, menuItems);\n  }\n\n  handleNewChatAcceptance(action) {\n    this.props.onNewChat(this.state.topic, action);\n  }\n\n  handleEnablePeer(e) {\n    e.preventDefault();\n    this.props.onChangePermissions(this.state.topic, DEFAULT_P2P_ACCESS_MODE, this.state.topic);\n  }\n\n  sendKeyPress() {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (topic.isSubscribed()) {\n      topic.noteKeyPress();\n    }\n  }\n\n  // Send attachment as Drafty message:\n  // - if file is too large, upload it and send a s link.\n  // - if file is small enough, just send it in-band.\n  sendFileAttachment(file) {\n    if (file.size > MAX_INBAND_ATTACHMENT_SIZE) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      if (!uploader) {\n        this.props.onError(this.props.intl.formatMessage(messages.cannot_initiate_upload));\n        return;\n      }\n      const uploadCompletionPromise = uploader.upload(file);\n      const msg = Drafty.attachFile(null, file.type, null, file.name, file.size, uploadCompletionPromise);\n      // Pass data and the uploader to the TinodeWeb.\n      this.props.sendMessage(msg, uploadCompletionPromise, uploader);\n    } else {\n      // Small enough to send inband.\n      fileToBase64(file,\n        (mime, bits, fname) => {\n          this.props.sendMessage(Drafty.attachFile(null, mime, bits, fname));\n        },\n        this.props.onError\n      );\n    }\n  }\n\n  // handleAttachFile method is called when [Attach file] button is clicked.\n  handleAttachFile(file) {\n    if (file.size > MAX_EXTERN_ATTACHMENT_SIZE) {\n      // Too large.\n      this.props.onError(this.props.intl.formatMessage(messages.file_attachment_too_large,\n          {size: bytesToHumanSize(file.size), limit: bytesToHumanSize(MAX_EXTERN_ATTACHMENT_SIZE)}), 'err');\n    } else {\n      this.setState({ docPreview: {\n        file: file,\n        filename: file.name,\n        size: file.size,\n        type: file.type\n      }});\n    }\n  }\n\n  // sendImageAttachment sends the image bits inband as Drafty message.\n  sendImageAttachment(caption, blob) {\n    const mime = this.state.imagePreview.type;\n    const width = this.state.imagePreview.width;\n    const height = this.state.imagePreview.height;\n    const fname = this.state.imagePreview.filename;\n\n    // Upload the image if it's too big to be send inband.\n    if (blob.size > MAX_INBAND_ATTACHMENT_SIZE) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      if (!uploader) {\n        this.props.onError(this.props.intl.formatMessage(messages.cannot_initiate_upload));\n        return;\n      }\n      const uploadCompletionPromise = uploader.upload(blob);\n      let msg = Drafty.insertImage(null, 0, mime, null, width, height, fname, blob.size, uploadCompletionPromise);\n      if (caption) {\n        msg = Drafty.appendLineBreak(msg);\n        msg = Drafty.append(msg, Drafty.init(caption));\n      }\n      // Pass data and the uploader to the TinodeWeb.\n      this.props.sendMessage(msg, uploadCompletionPromise, uploader);\n      return;\n    }\n\n    blobToBase64(blob, (bits) => {\n      let msg = Drafty.insertImage(null, 0, mime, bits, width, height, fname, blob.size);\n      if (caption) {\n        msg = Drafty.appendLineBreak(msg);\n        msg = Drafty.append(msg, Drafty.init(caption));\n      }\n      this.props.sendMessage(msg);\n    });\n  }\n\n  // handleAttachImage method is called when [Attach image] button is clicked.\n  handleAttachImage(file) {\n    // Get image dimensions and size, optionally scale it down.\n    imageScaled(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, MAX_EXTERN_ATTACHMENT_SIZE, false,\n      // Success\n      (blob, mime, width, height, fname) => {\n        this.setState({imagePreview: {\n          url: URL.createObjectURL(blob),\n          blob: blob,\n          filename: fname,\n          width: width,\n          height: height,\n          size: blob.length,\n          type: mime\n        }});\n      },\n      // Failure\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    );\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n\n    let component;\n    if (this.props.hideSelf) {\n      component = null;\n    } else if (!this.state.topic) {\n      component = (\n        <LogoView\n          serverVersion={this.props.serverVersion}\n          serverAddress={this.props.serverAddress} />\n      );\n    } else {\n      let component2;\n      if (this.state.imagePreview) {\n        // Preview image before sending.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePreview}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendImageAttachment} />\n        );\n      } else if (this.state.imagePostview) {\n        // Expand received image.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePostview}\n            onClose={this.handleClosePreview} />\n        );\n      } else if (this.state.docPreview) {\n        // Preview attachment before sending.\n        component2 = (\n          <DocPreview\n            content={this.state.docPreview}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendFileAttachment} />\n        );\n      } else {\n        const topic = this.props.tinode.getTopic(this.state.topic);\n        const isChannel = topic.isChannel();\n        const groupTopic = topic.getType() == 'grp' && !isChannel;\n        let messageNodes = [];\n        let previousFrom = null;\n        let chatBoxClass = null;\n        for (let i=0; i<this.state.messages.length; i++) {\n          let msg = this.state.messages[i];\n          let nextFrom = null;\n\n          if (i + 1 < this.state.messages.length) {\n            nextFrom = this.state.messages[i+1].from || 'chan';\n          }\n\n          let sequence = 'single';\n          let thisFrom = msg.from || 'chan';\n          if (thisFrom == previousFrom) {\n            if (thisFrom == nextFrom) {\n              sequence = 'middle';\n            } else {\n              sequence = 'last';\n            }\n          } else if (thisFrom == nextFrom) {\n            sequence = 'first';\n          }\n          previousFrom = thisFrom;\n\n          const isReply = !(thisFrom == this.props.myUserId);\n          const deliveryStatus = topic.msgStatus(msg);\n\n          let userName, userAvatar, userFrom;\n          if (groupTopic) {\n            const user = topic.userDesc(thisFrom);\n            if (user && user.public) {\n              userName = user.public.fn;\n              userAvatar = makeImageUrl(user.public.photo);\n            }\n            userFrom = thisFrom;\n            chatBoxClass='chat-box group';\n          } else {\n            chatBoxClass='chat-box';\n          }\n\n          messageNodes.push(\n            <ChatMessage\n              tinode={this.props.tinode}\n              content={msg.content}\n              deleted={msg.hi}\n              mimeType={msg.head ? msg.head.mime : null}\n              timestamp={msg.ts}\n              response={isReply}\n              seq={msg.seq}\n              userFrom={userFrom}\n              userName={userName}\n              userAvatar={userAvatar}\n              sequence={sequence}\n              received={deliveryStatus}\n              uploader={msg._uploader}\n              viewportWidth={this.props.viewportWidth}\n              showContextMenu={this.state.channel? false : this.handleShowContextMenuMessage}\n              onImagePreview={this.handleImagePostview}\n              onFormResponse={this.handleFormResponse}\n              onError={this.props.onError}\n              key={msg.seq} />\n          );\n        }\n\n        let lastSeen = null;\n        if (isChannel) {\n          lastSeen = formatMessage(messages.channel);\n        } else {\n          const cont = this.props.tinode.getMeTopic().getContact(this.state.topic);\n          if (cont && Tinode.isP2PTopicName(cont.topic)) {\n            if (cont.online) {\n              lastSeen = formatMessage(messages.online_now);\n            } else if (cont.seen) {\n              lastSeen = formatMessage(messages.last_seen) + \": \" +\n                shortDateFormat(cont.seen.when, this.props.intl.locale);\n              // TODO: also handle user agent in c.seen.ua\n            }\n          }\n        }\n        const avatar = this.state.avatar || true;\n        const online = this.props.online ? 'online' + (this.state.typingIndicator ? ' typing' : '') : 'offline';\n\n        component2 = (\n          <>\n            <div id=\"topic-caption-panel\" className=\"caption-panel\">\n              {this.props.displayMobile ?\n                <a href=\"#\" id=\"hide-message-view\" onClick={(e) => {e.preventDefault(); this.props.onHideMessagesView();}}>\n                  <i className=\"material-icons\">arrow_back</i>\n                </a>\n                :\n                null}\n              <div className=\"avatar-box\">\n                <LetterTile\n                  avatar={avatar}\n                  topic={this.state.topic}\n                  title={this.state.title} />\n                {!isChannel ? <span className={online} /> : null}\n              </div>\n              <div id=\"topic-title-group\">\n                <div id=\"topic-title\" className=\"panel-title\">{\n                  this.state.title ||\n                  <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n                    description=\"Title shown when the topic has no name\" /></i>\n                }</div>\n                <div id=\"topic-last-seen\">{lastSeen}</div>\n              </div>\n              {groupTopic ?\n                <GroupSubs\n                  subscribers={this.state.onlineSubs} /> :\n                <div id=\"topic-users\" />\n              }\n              <div>\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">more_vert</i>\n                </a>\n              </div>\n            </div>\n            {this.props.displayMobile ?\n              <ErrorPanel\n                level={this.props.errorLevel}\n                text={this.props.errorText}\n                onClearError={this.props.onError} />\n              : null}\n            <LoadSpinner show={this.state.fetchingMessages} />\n            <div id=\"messages-container\">\n              <div id=\"messages-panel\" ref={this.handleScrollReference}>\n                <ul id=\"scroller\" className={chatBoxClass}>\n                  {messageNodes}\n                </ul>\n              </div>\n              {!this.state.isReader ?\n              <div id=\"write-only-background\">\n                {this.state.readingBlocked ?\n                <div id=\"write-only-note\">\n                  <FormattedMessage id=\"messages_not_readable\" defaultMessage=\"no access to messages\"\n                    description=\"Message shown in topic without the read access\" />\n                </div>\n                : null }\n              </div>\n              : null }\n            </div>\n            {this.state.peerMessagingDisabled && !this.state.unconfirmed ?\n              <div id=\"peer-messaging-disabled-note\">\n                <i className=\"material-icons secondary\">block</i> <FormattedMessage\n                  id=\"peers_messaging_disabled\" defaultMessage=\"Peer's messaging is disabled.\"\n                  description=\"Shown when the p2p peer's messaging is disabled\" /> <a href=\"#\"\n                    onClick={this.handleEnablePeer}><FormattedMessage id=\"enable_peers_messaging\"\n                    defaultMessage=\"Enable\" description=\"Call to action to enable peer's messaging\" /></a>.\n              </div> : null}\n            {this.state.unconfirmed ?\n              <Invitation onAction={this.handleNewChatAcceptance} />\n              :\n              <SendMessage\n                disabled={!this.state.isWriter}\n                onSendMessage={this.props.sendMessage}\n                onKeyPress={this.sendKeyPress}\n                onAttachFile={this.handleAttachFile}\n                onAttachImage={this.handleAttachImage}\n                onError={this.props.onError} />}\n          </>\n        );\n      }\n\n      component = <div id=\"topic-view\">{component2}</div>\n    }\n    return component;\n  }\n};\n\nexport default injectIntl(MessagesView);\n","// The <- button to be displayed in title bars.\nimport React from 'react';\n\nexport default class ButtonBack extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onBack();}}>\n        <i className=\"material-icons\">arrow_back</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class MenuContacts extends React.PureComponent {\n  render() {\n    return (\n      <div>\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onNewTopic();}}><i className=\"material-icons\">chat</i></a>\n        &nbsp;\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nexport default class MenuStart extends React.PureComponent {\n  render() {\n    return (\n        <div>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSignUp();}}><i className=\"material-icons\">person_add</i></a>\n          &nbsp;\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n        </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\nimport ButtonBack from './button-back.jsx';\nimport MenuContacts from './menu-contacts.jsx';\nimport MenuStart from './menu-start.jsx';\n\nexport default class SideNavbar extends React.PureComponent {\n  render() {\n    return (\n        <div id=\"side-caption-panel\" className=\"caption-panel\">\n          {this.props.onCancel ? <ButtonBack onBack={this.props.onCancel} /> : null}\n          {this.props.avatar ?\n            <div id=\"self-avatar\" className=\"avatar-box\">\n              <LetterTile\n                avatar={this.props.avatar}\n                topic={this.props.myUserId}\n                title={this.props.title} />\n            </div>\n            :\n            null}\n          <div id=\"sidepanel-title\" className=\"panel-title\">{this.props.title}</div>\n          {this.props.state === 'login' ?\n              <MenuStart onSignUp={this.props.onSignUp} onSettings={this.props.onSettings} /> :\n            this.props.state === 'contacts' ?\n              <MenuContacts onNewTopic={this.props.onNewTopic} onSettings={this.props.onSettings} /> :\n            null}\n        </div>\n    );\n  }\n};\n","/* ContactsView holds all contacts-related stuff */\nimport React from 'react';\nimport { FormattedMessage, defineMessages } from 'react-intl';\n\nimport ContactList from '../widgets/contact-list.jsx';\n\nimport { updateFavicon } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  archived_contacts_title: {\n    id: \"archived_contacts\",\n    defaultMessage: \"Archived contacts ({count})\",\n    description: \"Label for archived chats\"\n  }\n});\n\nexport default class ContactsView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAction = this.handleAction.bind(this);\n\n    this.state = ContactsView.deriveStateFromProps(props);\n  }\n\n  static deriveStateFromProps(props) {\n    const contacts = [];\n    let unreadThreads = 0;\n    let archivedCount = 0;\n    props.chatList.map((c) => {\n      const blocked = c.acs && !c.acs.isJoiner();\n      // Show only blocked contacts only when props.blocked == true.\n      if (blocked && props.blocked) {\n        contacts.push(c);\n      }\n      if (blocked || props.blocked) {\n        return;\n      }\n\n      if (c.private && c.private.arch) {\n        if (props.archive) {\n          contacts.push(c);\n        } else {\n          archivedCount ++;\n        }\n      } else if (!props.archive) {\n        contacts.push(c);\n        unreadThreads += c.unread > 0 ? 1 : 0;\n      }\n    });\n\n    contacts.sort((a, b) => {\n      return (b.touched || 0) - (a.touched || 0);\n    });\n\n    if (archivedCount > 0) {\n      contacts.push({\n        action: 'archive',\n        title: messages.archived_contacts_title,\n        values: {count: archivedCount}\n      });\n    }\n\n    return {\n      contactList: contacts,\n      unreadThreads: unreadThreads\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chatList != this.props.chatList ||\n        prevProps.archive != this.props.archive ||\n        prevProps.blocked != this.props.blocked) {\n      const newState = ContactsView.deriveStateFromProps(this.props);\n      this.setState(newState);\n      if (newState.unreadThreads != prevState.unreadThreads) {\n        updateFavicon(newState.unreadThreads);\n      }\n    }\n  }\n\n  handleAction(action_ignored) {\n    this.props.onShowArchive();\n  }\n\n  render() {\n    return (\n      <FormattedMessage id=\"contacts_not_found\"\n        defaultMessage=\"You have no chats<br />¯∖_(ツ)_/¯\"\n        description=\"HTML message shown in ContactList when no contacts are found\">{\n        (no_contacts) => <ContactList\n          connected={this.props.connected}\n          contacts={this.state.contactList}\n          emptyListMessage={no_contacts}\n          topicSelected={this.props.topicSelected}\n          myUserId={this.props.myUserId}\n          showOnline={true}\n          showUnread={true}\n          onTopicSelected={this.props.onTopicSelected}\n          showContextMenu={this.props.showContextMenu}\n          onAction={this.handleAction} />\n      }</FormattedMessage>\n    );\n  }\n};\n","// Helper functions for storing values in localStorage.\n// By default localStorage can store only strings, not objects or other types.\n\nexport default class LocalStorageUtil {\n  // Replace old object with the new one.\n  static setObject(key, value) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n\n  // Get stored object.\n  static getObject(key) {\n    const value = localStorage.getItem(key);\n    return value && JSON.parse(value);\n  }\n\n  // Partially or wholly update stored object.\n  static updateObject(key, value) {\n    const oldVal = this.getObject(key);\n    this.setObject(key, Object.assign(oldVal || {}, value));\n  }\n\n  // Just a wrapper.\n  static removeItem(key) {\n    localStorage.removeItem(key);\n  }\n}\n","// Account registration.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport { vcard } from '../lib/utils.js';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class CreateAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: '',\n      password: '',\n      email: '',\n      fn: '', // full/formatted name\n      imageDataUrl: null,\n      errorCleared: false,\n      saveToken: LocalStorageUtil.getObject('keep-logged-in')\n    };\n\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(password) {\n    this.setState({password: password});\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value})\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleToggleSaveToken() {\n    LocalStorageUtil.setObject('keep-logged-in', !this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({errorCleared: false});\n    this.props.onCreateAccount(\n      this.state.login.trim(),\n      this.state.password.trim(),\n      vcard(this.state.fn.trim().substring(0, MAX_TITLE_LENGTH), this.state.imageDataUrl),\n      {'meth': 'email', 'val': this.state.email});\n  }\n\n  render() {\n    let submitClasses = 'blue';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form className=\"panel-form-column\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <FormattedMessage id=\"login_prompt\">{\n              (login_prompt) => <input type=\"text\" placeholder={login_prompt} autoComplete=\"user-name\"\n                value={this.state.login} onChange={this.handleLoginChange} required autoFocus />\n            }</FormattedMessage>\n            <FormattedMessage id=\"password_prompt\">{\n              (password_prompt) => <VisiblePassword placeholder={password_prompt} autoComplete=\"new-password\"\n                value={this.state.password} onFinished={this.handlePasswordChange}\n                required={true} />\n            }</FormattedMessage>\n          </div>\n          <AvatarUpload\n            onImageChanged={this.handleImageChanged}\n            onError={this.props.onError} />\n        </div>\n        <div  className=\"panel-form-row\">\n          <FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n            description=\"Input placeholder for person's full name\">{\n            (full_name_prompt) => <input type=\"text\" placeholder={full_name_prompt} autoComplete=\"name\"\n              value={this.state.fn} onChange={this.handleFnChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <FormattedMessage id=\"email_prompt\" defaultMessage=\"Email, e.g. jdoe@example.com\"\n            description=\"Input placeholder for email entry\">{\n            (email_prompt) => <input type=\"email\" placeholder={email_prompt} autoComplete=\"email\"\n              value={this.state.email} onChange={this.handleEmailChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <FormattedMessage id=\"stay_logged_in\">{\n            (stay_logged_in) => <label htmlFor=\"save-token\">&nbsp;{stay_logged_in}</label>\n          }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_up\" defaultMessage=\"Sign up\"\n              description=\"Create account button [Sign Up]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class EditAccountView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    this.state = {\n      fullName: me.public ? me.public.fn : undefined,\n      avatar: makeImageUrl(me.public ? me.public.photo : null)\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n                description=\"Label for full name editing\" />\n            </label>\n            <div className=\"large\">{this.state.fullName}</div>\n            <div>\n              <label className=\"small\"><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n                description=\"Label for user address (ID)\" /></label>&nbsp;\n              <tt>{this.props.myUserId}</tt>\n            </div>\n          </div>\n          <AvatarUpload\n            avatar={this.state.avatar}\n            readOnly={!this.state.owner}\n            uid={this.props.myUserId}\n            title={this.state.fullName} />\n        </div>\n        <div className=\"panel-form-row\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('general');}}>\n            <i className=\"material-icons\">edit</i>&nbsp;\n            <FormattedMessage id=\"button_edit\" defaultMessage=\"Edit\" description=\"Call to action [Edit]\" />\n          </a>\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('notif');}}>\n            <i className=\"material-icons\">notifications</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_notifications\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('security');}}>\n            <i className=\"material-icons\">security</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_security\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('support');}}>\n            <i className=\"material-icons\">contact_support</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_support\" />\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport TagManager from '../widgets/tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, asEmail, asPhone, vcard } from '../lib/utils.js';\n\nexport default class AccGeneralView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    this.state = {\n      fullName: me.public ? me.public.fn : undefined,\n      avatar: makeImageUrl(me.public ? me.public.photo : null),\n      tags: me.tags(),\n      credentials: me.getCredentials() || [],\n      addCredActive: false,\n      addCredInvalid: false,\n      newCred: '',\n      previousOnTags: me.onTagsUpdated\n    };\n\n    this.tnNewTags = this.tnNewTags.bind(this);\n    this.tnCredsUpdated = this.tnCredsUpdated.bind(this);\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleCredChange = this.handleCredChange.bind(this);\n    this.handleCredKeyDown = this.handleCredKeyDown.bind(this);\n    this.handleCredEntered = this.handleCredEntered.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n  }\n\n  componentDidMount() {\n    const me = this.props.tinode.getMeTopic();\n    me.onCredsUpdated = this.tnCredsUpdated;\n    me.onTagsUpdated = this.tnNewTags;\n  }\n\n  componentWillUnmount() {\n    const me = this.props.tinode.getMeTopic();\n    me.onTagsUpdated = this.state.previousOnTags;\n    me.onCredsUpdated = undefined;\n  }\n\n  tnNewTags(tags) {\n    this.setState({tags: tags});\n  }\n\n  tnCredsUpdated(creds) {\n    this.setState({credentials: creds || []});\n  }\n\n  handleFullNameUpdate(fn) {\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\n    if (fn) {\n      this.setState({fullName: fn});\n      this.props.onUpdateAccount(undefined, vcard(fn, null));\n    }\n  }\n\n  handleImageChanged(img) {\n    this.setState({avatar: img});\n    this.props.onUpdateAccount(undefined, vcard(null, img || Tinode.DEL_CHAR));\n  }\n\n  handleCredChange(e) {\n    this.setState({newCred: e.target.value, addCredInvalid: false});\n  }\n\n  handleCredKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({newCred: '', addCredActive: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleCredEntered(e);\n    }\n  }\n\n  handleCredEntered(e) {\n    let value = this.state.newCred.trim();\n    if (!value) {\n      this.setState({addCredActive: false, addCredInvalid: false});\n      return;\n    }\n\n    let val = asPhone(value);\n    let method;\n    if (val) {\n      method = 'tel';\n    } else {\n      val = asEmail(value);\n      if (val) {\n        method = 'email';\n      }\n    }\n    if (method) {\n      this.props.onCredAdd(method, val);\n      this.setState({addCredActive: false, newCred: ''});\n    } else {\n      this.setState({addCredInvalid: true});\n    }\n  }\n\n  handleTagsUpdated(tags) {\n    // Check if tags have actually changed.\n    if (arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      return;\n    }\n    this.props.onUpdateTags(tags);\n  }\n\n  render() {\n    const credentials = [];\n    this.state.credentials.map((cred) => {\n      credentials.push(<div key={cred.meth + \":\" + cred.val + \":\" + cred.done}>{cred.meth}: <tt>{cred.val}</tt>\n        <span > {!cred.done ?\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredConfirm(cred.meth, cred.val);}}>\n              <FormattedMessage id=\"validate_credential_action\" defaultMessage=\"confirm\"\n                description=\"Validate credentail call to action\" />\n            </a>\n          : null} <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredDelete(cred.meth, cred.val);}}><i\n            className=\"material-icons gray\">delete_outline</i></a></span></div>);\n    });\n\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\"><FormattedMessage id=\"label_your_name\" /></label>\n            <div><FormattedMessage id=\"full_name_prompt\">{\n              (full_name_placeholder) => <InPlaceEdit\n                placeholder={full_name_placeholder}\n                value={this.state.fullName}\n                onFinished={this.handleFullNameUpdate} />\n            }</FormattedMessage></div>\n          </div>\n          <AvatarUpload\n            avatar={this.state.avatar}\n            uid={this.props.myUserId}\n            title={this.state.fullName}\n            onImageChanged={this.handleImageChanged}\n            onError={this.props.onError} />\n        </div>\n        <div className=\"hr\" />\n        <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (user discovery)\"\n          description=\"Section title for TagManager\">{\n          (title_tag_manager) => <TagManager\n            title={title_tag_manager}\n            activated={false}\n            tags={this.state.tags}\n            onSubmit={this.handleTagsUpdated} />\n        }</FormattedMessage>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_user_contacts\" defaultMessage=\"Contacts:\"\n            description=\"Label for user contacts\" />\n          </label>\n          <div className=\"quoted\">\n            {credentials}\n            {this.state.addCredActive ?\n              <input type=\"text\" value={this.state.value}\n                className={this.state.addCredInvalid ? 'invalid' : null}\n                placeholder=\"Phone number or email\" required=\"required\" autoFocus\n                onChange={this.handleCredChange} onKeyDown={this.handleCredKeyDown} onBlur={this.handleCredEntered} />\n              : null}\n            <div>\n              <a href=\"#\" onClick={(e) => {e.preventDefault(); this.setState({addCredActive: true});}}>\n                <i className=\"material-icons\">add</i>\n                <FormattedMessage id=\"button_add_another\" defaultMessage=\"Add another\" description=\"Call to action [+ add another]\" />\n              </a></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\n\nexport default class EditAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckboxClick = this.handleCheckboxClick.bind(this);\n  }\n\n  handleCheckboxClick(what, checked) {\n    if (what == 'sound') {\n      this.props.onToggleMessageSounds(checked);\n    } else if (what == 'alert') {\n      this.props.onTogglePushNotifications(checked);\n    } else if (what == 'incognito') {\n      this.props.onToggleIncognitoMode(checked);\n    }\n  }\n\n  render() {\n    return (\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"message-sound\">\n              <FormattedMessage id=\"label_message_sound\" defaultMessage=\"Message sound:\"\n                description=\"Label for message sounds toggle\" />\n            </label>\n            <CheckBox name=\"sound\" id=\"message-sound\"\n              checked={this.props.messageSounds} onChange={this.handleCheckboxClick} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"desktop-alerts\">\n            {this.props.desktopAlertsEnabled ?\n              <FormattedMessage id=\"label_push_notifications\" defaultMessage=\"Notification alerts:\"\n                description=\"Label for push notifications switch\" />\n              :\n              <FormattedMessage id=\"label_push_notifications_disabled\"\n                defaultMessage=\"Notification alerts (requires HTTPS):\"\n                description=\"Label for push notifications switch\" />\n            }\n            </label>\n            <CheckBox name=\"alert\" id=\"desktop-alerts\"\n              checked={this.props.desktopAlerts}\n              onChange={this.props.desktopAlertsEnabled ? this.handleCheckboxClick : null} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"incognito-mode\">\n              <FormattedMessage id=\"label_incognito_mode\" defaultMessage=\"Incognito mode:\"\n                description=\"Label for incognito mode toggle\" />\n            </label>\n            <CheckBox name=\"incognito\" id=\"incognito-mode\"\n              checked={this.props.incognitoMode} onChange={this.handleCheckboxClick} />\n          </div>\n        </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\n\nconst messages = defineMessages({\n  delete_account: {\n    id: 'delete_account',\n    defaultMessage: 'Delete account',\n    description: 'Title for delete account warning'\n  },\n  delete_account_warning: {\n    id: 'delete_account_arning',\n    defaultMessage: 'Are you sure you want to delete your account? It cannot be undone.',\n    description: 'Warning message when deleting an account'\n  }\n});\n\nclass AccSecurityView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    let blockedCount = 0;\n    me.contacts((c) => {\n      if (c.acs && !c.acs.isJoiner()) {\n        blockedCount ++;\n      }\n    });\n    const defacs = me.getDefaultAccess();\n    this.state = {\n      auth: defacs ? defacs.auth : null,\n      anon: defacs ? defacs.anon : null,\n      showPermissionEditorFor: undefined,\n      blockedCount: blockedCount,\n    };\n\n    this.handlePasswordUpdate = this.handlePasswordUpdate.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n  }\n\n  handlePasswordUpdate(pwd) {\n    this.setState({password: pwd});\n    this.props.onUpdateAccount(pwd);\n  }\n\n  handleLaunchPermissionsEditor(which) {\n    this.setState({\n      showPermissionEditorFor: which,\n      editedPermissions: this.state[which]\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handlePermissionsChanged(perm) {\n    let defacs = {};\n    defacs[this.state.showPermissionEditorFor] = perm;\n    this.props.onUpdateAccount(undefined, undefined, defacs);\n\n    let newState = {showPermissionEditorFor: undefined};\n    newState[this.state.showPermissionEditorFor] = perm;\n    this.setState(newState);\n  }\n\n  handleDeleteAccount(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.delete_account), // title\n      formatMessage(messages.delete_account_warning), // content\n      (() => { this.props.onDeleteAccount(); }), // onConfirm\n      null, // use default text \"OK\"\n      true, // Show Reject button\n      null  // use default text \"Cancel\"\n    );\n  }\n\n  render() {\n    return (\n      <React.Fragment>{this.state.showPermissionEditorFor ?\n        <PermissionsEditor\n          mode={this.state.editedPermissions}\n          skip=\"O\"\n          onSubmit={this.handlePermissionsChanged}\n          onCancel={this.handleHidePermissionsEditor} />\n        :\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_password\" defaultMessage=\"Password\"\n                  description=\"Label for password editing\" />\n            </label>\n            <div>\n              <FormattedMessage id=\"password_unchanged_prompt\" defaultMessage=\"Unchanged\"\n                description=\"Message in editor while password is unchanged\">{\n                (password_unchanged) => <InPlaceEdit\n                  placeholder={password_unchanged}\n                  type=\"password\"\n                  onFinished={this.handlePasswordUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <a href=\"#\" className=\"red flat-button\" onClick={(e) => {e.preventDefault(); this.props.onLogout();}}>\n              <i className=\"material-icons\">exit_to_app</i> &nbsp;<FormattedMessage id=\"button_logout\"\n                defaultMessage=\"Logout\" description=\"Button [Logout]\" />\n            </a>\n            <a href=\"#\" className=\"red flat-button\" onClick={(e) => {this.handleDeleteAccount(e);}}>\n              <i className=\"material-icons\">delete</i> &nbsp;<FormattedMessage id=\"button_delete_account\"\n                defaultMessage=\"Delete account\" description=\"Button [Delete account]\" />\n            </a>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <div>\n              <label className=\"small\">\n                <FormattedMessage id=\"label_default_access_mode\" defaultMessage=\"Default access mode:\"\n                description=\"Label for default access mode\" />\n              </label>\n            </div>\n            <div className=\"quoted\">\n              <div>Auth: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>{this.state.auth}</tt></div>\n              <div>Anon: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>{this.state.anon}</tt></div>\n            </div>\n          </div>\n          {this.state.blockedCount > 0 ?\n            <>\n              <div className=\"hr\" />\n              <div className=\"panel-form-row\">\n                <i className=\"material-icons\">block</i>&nbsp;\n                <a href=\"#\" className=\"gray\" onClick={(e) => {e.preventDefault(); this.props.onShowBlocked();}}>\n                  <FormattedMessage id=\"blocked_contacts_link\" defaultMessage=\"Blocked contacts ({count})\"\n                    values={{ count: this.state.blockedCount }} description=\"Blocked contacts link\" />\n                </a>\n              </div>\n            </>\n            : null }\n        </div>\n      }</React.Fragment>\n    );\n  }\n};\n\nexport default injectIntl(AccSecurityView);\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME, LINK_CONTACT_US, LINK_PRIVACY_POLICY, LINK_TERMS_OF_SERVICE } from '../config.js';\n\nexport default class AccSupportView extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          <a href={LINK_CONTACT_US} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">email</i> &nbsp;<FormattedMessage id=\"link_contact_us\"\n              defaultMessage=\"Contact Us\" description=\"Ancor text for contacting us by email\" />\n          </a>\n          <a href={LINK_TERMS_OF_SERVICE} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">description</i> &nbsp;<FormattedMessage id=\"link_terms_of_service\"\n              defaultMessage=\"Terms of Service\" description=\"Ancor text for terms of service link\" />\n          </a>\n          <a href={LINK_PRIVACY_POLICY} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">policy</i> &nbsp;<FormattedMessage id=\"link_privacy_policy\"\n              defaultMessage=\"Privacy Policy\" description=\"Ancor text for privacy policy link\" />\n          </a>\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_client\" /></label>\n            {APP_NAME}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_sdk\" defaultMessage=\"SDK:\" /></label>\n            {Tinode.getLibrary()}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server\" /></label>\n            {this.props.serverVersion}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server_address\" defaultMessage=\"Server address:\" /></label>\n            {this.props.serverAddress}\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","// Login form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\n\nexport default class LoginView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: props.login,\n      password: '',\n      hostName: props.serverAddress,\n      saveToken: LocalStorageUtil.getObject('keep-logged-in')\n    };\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  handleToggleSaveToken() {\n    LocalStorageUtil.setObject('keep-logged-in', !this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onLogin(this.state.login.trim(), this.state.password.trim());\n  }\n\n  render() {\n    var submitClasses = 'blue';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form id=\"login-form\" onSubmit={this.handleSubmit}>\n        <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n          description=\"Login placeholder in LoginView\">\n        {\n          (login_prompt) => <input type=\"text\" id=\"inputLogin\"\n            placeholder={login_prompt}\n            autoComplete=\"username\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"none\"\n            value={this.state.login}\n            onChange={this.handleLoginChange}\n            required autoFocus />\n        }\n        </FormattedMessage>\n        <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n          description=\"Password placeholder in LoginView\">\n        {\n          (password_prompt) => <VisiblePassword type=\"password\" id=\"inputPassword\"\n            placeholder={password_prompt}\n            autoComplete=\"current-password\"\n            value={this.state.password}\n            onChange={this.handlePasswordChange}\n            required={true} />\n        }\n        </FormattedMessage>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <label htmlFor=\"save-token\">&nbsp;\n            <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n              description=\"Label for a checkbox\" />\n          </label>\n          <a href=\"#reset\">\n            <FormattedMessage id=\"forgot_password_link\" defaultMessage=\"Forgot password?\"\n              description=\"Link to Reset password form\" />\n          </a>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_in\" defaultMessage=\"Sign in\"\n              description=\"Button [Sign In]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n/* END Login */\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  invalid_id: {\n    id: 'error_invalid_id',\n    defaultMessage: 'Invalid ID',\n    description: 'Error message'\n  }\n});\n\nclass NewTopicById extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      groupId: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({groupId: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.groupId) {\n      var name = this.state.groupId.trim();\n      if (name.length > 3 && (name.substr(0, 3) == 'usr' || name.substr(0, 3) == 'grp')) {\n        this.props.onSubmit(name);\n      } else {\n        this.props.onError(this.props.intl.formatMessage(messages.invalid_id), 'err');\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"group_user_id_prompt\" defaultMessage=\"Group or User ID\"\n          description=\"Prompt for entering user or group ID\">{\n          (prompt) => <input type=\"text\" placeholder={prompt}\n            value={this.state.groupId} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"blue\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_subscribe\" defaultMessage=\"Subscribe\"\n              description=\"Button [Subscribe]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicById);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from './avatar-upload.jsx';\nimport CheckBox from './checkbox.jsx';\nimport TagManager from './tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class NewTopicGroup extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      fn: '', // full/formatted name\n      private: '',\n      imageDataUrl: null,\n      tags: [],\n      isChannel: false\n    };\n\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handlePrivateChange = this.handlePrivateChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleTagsChanged = this.handleTagsChanged.bind(this);\n    this.handleChannelToggle = this.handleChannelToggle.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handlePrivateChange(e) {\n    this.setState({private: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleTagsChanged(tags) {\n    this.setState({tags: tags});\n  }\n\n  handleChannelToggle() {\n    this.setState({isChannel: !this.state.isChannel});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const fn = this.state.fn.trim().substring(0, MAX_TITLE_LENGTH);\n    const comment = this.state.private.trim().substring(0, MAX_TITLE_LENGTH);\n    if (fn) {\n      this.props.onSubmit(fn, this.state.imageDataUrl, comment, this.state.tags, this.state.isChannel);\n    }\n  }\n\n  render() {\n    var submitClasses = 'blue';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n    return (\n      <form className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\" htmlFor=\"new-topic-fn\">\n              <FormattedMessage id=\"label_topic_name\" />\n            </label>\n            <FormattedMessage id=\"topic_name_editing_placeholder\" defaultMessage=\"Freeform name of the group\"\n              description=\"Prompt for entering topic name\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-fn\" placeholder={placeholder}\n                value={this.state.fn} onChange={this.handleFnChange} autoFocus required />\n            }</FormattedMessage>\n            <br />\n            <label className=\"small\" htmlFor=\"new-topic-priv\">\n              <FormattedMessage id=\"label_private\" />\n            </label>\n            <FormattedMessage id=\"private_editing_placeholder\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-priv\" placeholder={placeholder}\n                value={this.state.private} onChange={this.handlePrivateChange} />\n            }</FormattedMessage>\n          </div>\n          <AvatarUpload\n            onError={this.props.onError}\n            onImageChanged={this.handleImageChanged} />\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox checked={this.state.isChannel} onChange={this.handleChannelToggle}/>&nbsp;\n          <label onClick={this.handleChannelToggle}><FormattedMessage id=\"channel_prompt\"\n            defaultMessage=\"This is a channel\"\n            description=\"Checkbox label when creating a channel\" /></label>\n        </div>\n        <FormattedMessage id=\"title_tag_manager\">{\n          (title) => <TagManager\n            tags={this.state.tags}\n            activated={true}\n            onTagsChanged={this.handleTagsChanged}\n            title={title} />\n        }</FormattedMessage>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses}>\n            <FormattedMessage id=\"button_create\" defaultMessage=\"Create\"\n              description=\"Button [Create]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nexport default class SearchContacts extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      edited: false,\n      search: ''\n    };\n\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  componentWillUnmount() {\n    if (this.state.edited) {\n      this.setState({search: '', edited: false});\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n  }\n\n  handleSearchChange(e) {\n    this.setState({search: e.target.value});\n  }\n\n  handleSearch(e) {\n    e.preventDefault();\n    var query = this.state.search.trim();\n    this.setState({edited: (query.length > 0)});\n    this.props.onSearchContacts(query.length > 0 ? query : Tinode.DEL_CHAR);\n  }\n\n  handleClear(e) {\n    e.preventDefault();\n    if (this.state.edited) {\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n    this.setState({search: '', edited: false});\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Enter') {\n      this.handleSearch(e);\n    } else if (e.key === 'Escape') {\n      this.handleClear();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <i className=\"material-icons search\">search</i>\n          <FormattedMessage id=\"search_placeholder\" defaultMessage=\"List like email:alice@example.com, tel:17025550003...\"\n            description=\"Placeholder in contacts search field\">{\n            (search_placeholder) => <input className=\"search\" type=\"text\"\n              placeholder={search_placeholder}\n              value={this.state.search} onChange={this.handleSearchChange}\n              onKeyDown={this.handleKeyDown} required autoFocus />\n          }</FormattedMessage>\n          <a href=\"#\" onClick={this.handleClear}>\n            <i className=\"material-icons\">close</i>\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","// Create new topic and invite users or send an invite.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport ContactList from '../widgets/contact-list.jsx';\nimport NewTopicById from '../widgets/new-topic-by-id.jsx';\nimport NewTopicGroup from '../widgets/new-topic-group.jsx';\nimport SearchContacts from '../widgets/search-contacts.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\nimport { vcard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  search_for_contacts: {\n    id: \"search_for_contacts\",\n    defaultMessage: \"Use search to find contacts\",\n    description: \"Text shown in contacts view when user entered no search query.\"\n  },\n  search_no_results: {\n    id: \"search_no_results\",\n    defaultMessage: \"Search returned no results\",\n    description: \"Text shown in contacts view when query returned no results.\"\n  }\n});\n\nclass NewTopicView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tabSelected: 'p2p',\n      searchQuery: null\n    };\n\n    this.handleTabClick = this.handleTabClick.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleNewGroupSubmit = this.handleNewGroupSubmit.bind(this);\n    this.handleGroupByID = this.handleGroupByID.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.onInitFind();\n  }\n\n  handleTabClick(e) {\n    e.preventDefault();\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'tab', e.currentTarget.dataset.id));\n    this.setState({tabSelected: e.currentTarget.dataset.id});\n  }\n\n  handleSearchContacts(query) {\n    this.props.onSearchContacts(query);\n    this.setState({searchQuery: Tinode.isNullValue(query) ? null : query});\n  }\n\n  handleContactSelected(sel) {\n    if (this.state.tabSelected === 'p2p') {\n      HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n      this.props.onCreateTopic(sel);\n    }\n  }\n\n  handleNewGroupSubmit(name, dataUrl, priv, tags, isChannel) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(undefined, vcard(name, dataUrl), priv, tags, isChannel);\n  }\n\n  handleGroupByID(topicName) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(topicName);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const no_contacts_placeholder = formatMessage(this.state.searchQuery ?\n      messages.search_no_results : messages.search_for_contacts);\n    return (\n      <div className=\"flex-column\">\n        <ul className=\"tabbar\">\n          <li className={this.state.tabSelected === \"p2p\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"p2p\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_find_user\" defaultMessage=\"find\"\n                description=\"Tab title Find\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"grp\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"grp\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_new_group\" defaultMessage=\"new group\"\n                description=\"Tab title New Group\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"byid\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"byid\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_group_by_id\" defaultMessage=\"by id\"\n                description=\"Tab title Find topic by ID\" />\n            </a>\n          </li>\n        </ul>\n        {this.state.tabSelected === 'grp' ?\n          <NewTopicGroup onSubmit={this.handleNewGroupSubmit} /> :\n          this.state.tabSelected === 'byid' ?\n          <NewTopicById\n            onSubmit={this.handleGroupByID}\n            onError={this.props.onError} /> :\n          <div className=\"flex-column\">\n            <SearchContacts\n              type=\"p2p\"\n              onSearchContacts={this.handleSearchContacts} />\n            <ContactList\n              contacts={this.props.searchResults}\n              myUserId={this.props.myUserId}\n              emptyListMessage={no_contacts_placeholder}\n              showOnline={false}\n              showUnread={false}\n              showContextMenu={false}\n              onTopicSelected={this.handleContactSelected} />\n          </div>}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicView);\n","// A password reset form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\n\nexport default class PasswordResetView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n  }\n\n  componentDidMount() {\n    let parsed = HashNavigation.parseUrlHash(window.location.hash);\n    this.setState({token: parsed.params.token, scheme: parsed.params.scheme});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.token) {\n      this.props.onReset(this.state.scheme, this.state.password.trim(), this.state.token);\n    } else {\n      this.props.onRequest('email', this.state.email.trim());\n    }\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  render() {\n    let reset = (this.state.token && this.state.scheme);\n    return (\n      <form id=\"password-reset-form\" onSubmit={this.handleSubmit}>\n        {reset ?\n          <FormattedMessage id=\"new_password_placeholder\" defaultMessage=\"Enter new password\"\n            description=\"Placeholder for entering new password\">{\n            (placeholder) => <VisiblePassword\n              placeholder={placeholder}\n              autoComplete=\"new-password\"\n              value={this.state.password}\n              required={true} autoFocus={true}\n              onChange={this.handlePasswordChange} />\n          }</FormattedMessage>\n          :\n          <>\n            <label htmlFor=\"inputEmail\">\n              <FormattedMessage id=\"label_reset_password\"\n                defaultMessage=\"Send a password reset email:\"\n                description=\"Label for password reset field\" />\n            </label>\n            <FormattedMessage id=\"credential_email_prompt\" defaultMessage=\"Your registration email\"\n              description=\"Placeholder for entering email\">{\n              (placeholder) => <input type=\"email\" id=\"inputEmail\"\n                placeholder={placeholder}\n                autoComplete=\"email\"\n                value={this.state.email}\n                onChange={this.handleEmailChange}\n                required autoFocus />\n            }</FormattedMessage>\n          </>\n        }\n        <div className=\"dialog-buttons\">\n          <button className=\"blue\" type=\"submit\">{reset ?\n            <FormattedMessage id=\"button_reset\" defaultMessage=\"Reset\" description=\"Button [Reset]\" /> :\n            <FormattedMessage id=\"button_send_request\" defaultMessage=\"Send request\"\n              description=\"Button [Send request]\" />\n          }</button>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react';\n\nimport { KNOWN_HOSTS } from '../config.js';\n\n/* Combobox for selecting host name */\n\nexport default class HostSelector extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hostName: props.serverAddress,\n      changed: false\n    };\n\n    this.handleHostNameChange = this.handleHostNameChange.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handleHostNameChange(e) {\n    this.setState({hostName: e.target.value, changed: true});\n  }\n\n  handleEditingFinished() {\n    if (this.state.changed) {\n      this.setState({changed: false});\n      this.props.onServerAddressChange(this.state.hostName.trim());\n    }\n  }\n\n  render() {\n    var hostOptions = [];\n    for (let key in KNOWN_HOSTS) {\n      let item = KNOWN_HOSTS[key];\n      hostOptions.push(\n        <option key={item} value={item} />\n      );\n    }\n    return (\n      <div className=\"panel-form-row\">\n        <input type=\"search\" id=\"host-name\" placeholder={this.props.hostName} list=\"known-hosts\"\n          className=\"quoted\" value={this.state.hostName} onChange={this.handleHostNameChange}\n          onBlur={this.handleEditingFinished} required />\n        <datalist id=\"known-hosts\">\n          {hostOptions}\n        </datalist>\n      </div>\n    );\n  }\n}\n","// Tinode config panel.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport HostSelector from '../widgets/host-selector.jsx';\n\nexport default class SettingsView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transport: props.transport || 'def',\n      serverAddress: props.serverAddress,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleTransportSelected = this.handleTransportSelected.bind(this);\n    this.handleServerAddressChange = this.handleServerAddressChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onUpdate({\n      transport: this.state.transport,\n      serverAddress: this.state.serverAddress\n    });\n  }\n\n  handleTransportSelected(e) {\n    this.setState({transport: e.currentTarget.value});\n  }\n\n  handleServerAddressChange(name) {\n    this.setState({serverAddress: name});\n  }\n\n  render() {\n    const names = {def: \"default\", ws: \"websocket\", lp: \"long polling\"};\n    var transportOptions = [];\n    var instance = this;\n    ['def', 'ws', 'lp'].map(function(item) {\n      var id = 'transport-' + item;\n      var name = names[item];\n      transportOptions.push(\n        <li key={item}>\n          <input type=\"radio\" id={id} name=\"transport-select\" value={item}\n            checked={instance.state.transport === item}\n            onChange={instance.handleTransportSelected} />\n          <label htmlFor={id}>{name}</label>\n        </li>\n      );\n    });\n\n    return (\n      <form id=\"settings-form\" className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_server_to_use\" defaultMessage=\"Server to use:\"\n              description=\"Label for server selector in SettingsView\" />\n          </label>\n        </div>\n        <HostSelector serverAddress={this.state.serverAddress}\n          onServerAddressChange={this.handleServerAddressChange} />\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_wire_transport\" defaultMessage=\"Wire transport:\"\n              description=\"Label for wire transport selection in SettingsView\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ul className=\"quoted\">\n            {transportOptions}\n          </ul>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button type=\"submit\" className=\"blue\">\n            <FormattedMessage id=\"button_update\" defaultMessage=\"Update\"\n              description=\"Button [Update]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// ValidationView: panel for confirming credentials, like email or phone.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  phone: {\n    id: 'phone_dative',\n    defaultMessage: 'phone',\n    description: \"Dative case of 'phone', i.e. 'phone' in 'by phone'\",\n  },\n  email: {\n    id: 'email_dative',\n    defaultMessage: 'email',\n    description: \"Dative case of 'email', i.e. 'email' in 'by email'\",\n  }\n});\n\nclass ValidationView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      code: props.credCode || ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({code: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    } else if (e.key == 'Escape') {\n      this.handleCancel(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.code && this.state.code.trim()) {\n      this.props.onSubmit(this.props.credMethod, this.state.code.trim());\n    }\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel();\n  }\n\n\n  render() {\n    const { formatMessage } = this.props.intl;\n    const methods = {'email': formatMessage(messages.email), 'tel': formatMessage(messages.phone)};\n    let method = methods[this.props.credMethod] || this.props.credMethod;\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\" htmlFor=\"enter-confirmation-code\">\n            <FormattedMessage id=\"enter_confirmation_code_prompt\"\n              defaultMessage=\"Enter confirmation code sent to you by {method}:\"\n              description=\"Request to enter confirmation code\"\n              values={{method: method}} />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"numeric_confirmation_code_prompt\"\n          defaultMessage=\"Numbers only\" description=\"Prompt for numeric conformation code\">{\n          (numbers_only) => <input type=\"text\" id=\"enter-confirmation-code\"\n            placeholder={numbers_only}\n            value={this.state.code} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"blue\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_confirm\" defaultMessage=\"Confirm\" description=\"Button [Confirm]\" />\n          </button>\n          <button className=\"white\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ValidationView);\n","import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport SideNavbar from '../widgets/side-navbar.jsx';\n\nimport ContactsView from './contacts-view.jsx';\nimport CreateAccountView from './create-account-view.jsx';\nimport EditAccountView from './edit-account-view.jsx';\nimport AccGeneralView from './acc-general-view.jsx';\nimport AccNotificationsView from './acc-notifications-view.jsx';\nimport AccSecurityView from './acc-security-view.jsx';\nimport AccSupportView from './acc-support-view.jsx';\nimport LoginView from './login-view.jsx';\nimport NewTopicView from './new-topic-view.jsx';\nimport PasswordResetView from './password-reset-view.jsx';\nimport SettingsView from './settings-view.jsx';\nimport ValidationView from './validation-view.jsx';\n\n// Panel titles for translation.\nconst messages = defineMessages({\n  'login': {\n    id: 'sidepanel_title_login',\n    description: 'Sidepanel title for LoginView.',\n    defaultMessage: 'Sign In'\n  },\n  'register': {\n    id: 'sidepanel_title_register',\n    description: 'Sidepanel title for CreateAccountView.',\n    defaultMessage: 'Create Account'\n  },\n  'settings': {\n    id: 'sidepanel_title_settings',\n    description: 'Sidepanel title for SettingsView.',\n    defaultMessage: 'Settings'\n  },\n  'edit': {\n    id: 'sidepanel_title_account_settings',\n    description: 'Sidepanel title for EditAccountView.',\n    defaultMessage: 'Account Settings'\n  },\n  'general': {\n    id: 'sidepanel_title_acc_general',\n    description: 'Sidepanel title for AccGeneralView.',\n    defaultMessage: 'General'\n  },\n  'security': {\n    id: 'sidepanel_title_acc_security',\n    description: 'Sidepanel title for AccSecurityView.',\n    defaultMessage: 'Security'\n  },\n  'notif': {\n    id: 'sidepanel_title_acc_notifications',\n    description: 'Sidepanel title for AccNotificationsView.',\n    defaultMessage: 'Notifications'\n  },\n  'support': {\n    id: 'sidepanel_title_acc_support',\n    description: 'Sidepanel title for AccSupportView.',\n    defaultMessage: 'Support'\n  },\n  'newtpk': {\n    id: 'sidepanel_title_newtpk',\n    description: 'Sidepanel title for NewTopicView.',\n    defaultMessage: 'Start New Chat'\n  },\n  'cred': {\n    id: 'sidepanel_title_cred',\n    description: 'Sidepanel title for ValidationView.',\n    defaultMessage: 'Confirm Credentials'\n  },\n  'reset': {\n    id: 'sidepanel_title_reset',\n    description: 'Sidepanel title for PasswordResetView.',\n    defaultMessage: 'Reset Password'\n  },\n  'archive': {\n    id: 'sidepanel_title_archive',\n    description: 'Sidepanel title for ContactsView-Archive.',\n    defaultMessage: 'Archived Chats'\n  },\n  'blocked': {\n    id: 'sidepanel_title_blocked',\n    description: 'Sidepanel title for ContactsView-Blocked.',\n    defaultMessage: 'Blocked Chats'\n  }\n});\n\nclass SidepanelView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleLoginRequested = this.handleLoginRequested.bind(this);\n    this.handleNewTopic = this.handleNewTopic.bind(this);\n  }\n\n  handleLoginRequested(login, password) {\n    this.props.onLoginRequest(login, password);\n  }\n\n  handleNewTopic() {\n    this.props.onBasicNavigate('newtpk');\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const view = this.props.state || (this.props.myUserId ? 'contacts' : 'login');\n\n    let title, avatar;\n    if (view == 'contacts') {\n      title = this.props.title;\n      avatar = this.props.avatar ? this.props.avatar : true;\n    } else {\n      title = formatMessage(messages[view]);\n      avatar = false;\n    }\n\n    let onCancel;\n    if (['login', 'contacts'].indexOf(view) == -1) {\n      onCancel = this.props.onCancel;\n    }\n\n    return (\n      <div id=\"sidepanel\" className={this.props.hideSelf ? 'nodisplay' : null}>\n        <SideNavbar\n          state={view}\n          title={title}\n          avatar={avatar}\n          myUserId={this.props.myUserId}\n          onSignUp={this.props.onSignUp}\n          onSettings={this.props.onSettings}\n          onNewTopic={this.handleNewTopic}\n          onCancel={onCancel} />\n\n        <ErrorPanel\n          level={this.props.errorLevel}\n          text={this.props.errorText}\n          action={this.props.errorAction}\n          actionText={this.props.errorActionText}\n          onClearError={this.props.onError} />\n\n        <LoadSpinner show={this.props.loadSpinnerVisible} />\n\n        {view === 'login' ?\n          <LoginView\n            login={this.props.login}\n            disabled={this.props.loginDisabled}\n            onLogin={this.handleLoginRequested} /> :\n\n          view === 'register' ?\n          <CreateAccountView\n            onCreateAccount={this.props.onCreateAccount}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'settings' ?\n          <SettingsView\n            transport={this.props.transport}\n            serverAddress={this.props.serverAddress}\n            onCancel={this.props.onCancel}\n            onUpdate={this.props.onGlobalSettings} /> :\n\n          view === 'edit' ?\n          <EditAccountView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            onBasicNavigate={this.props.onBasicNavigate} /> :\n\n          view === 'general' ?\n          <AccGeneralView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            onUpdateAccount={this.props.onUpdateAccount}\n            onUpdateTags={this.props.onUpdateAccountTags}\n            onCredAdd={this.props.onCredAdd}\n            onCredDelete={this.props.onCredDelete}\n            onCredConfirm={this.props.onCredConfirm}\n            onBasicNavigate={this.props.onBasicNavigate}\n            onError={this.props.onError} /> :\n\n          view === 'notif' ?\n          <AccNotificationsView\n            messageSounds={this.props.messageSounds}\n            desktopAlerts={this.props.desktopAlerts}\n            desktopAlertsEnabled={this.props.desktopAlertsEnabled}\n            incognitoMode={this.props.incognitoMode}\n            onTogglePushNotifications={this.props.onTogglePushNotifications}\n            onToggleMessageSounds={this.props.onToggleMessageSounds}\n            onToggleIncognitoMode={this.props.onToggleIncognitoMode} /> :\n\n          view === 'security' ?\n          <AccSecurityView\n            tinode={this.props.tinode}\n            onUpdateAccount={this.props.onUpdateAccount}\n            onLogout={this.props.onLogout}\n            onDeleteAccount={this.props.onDeleteAccount}\n            onShowAlert={this.props.onShowAlert}\n            onShowBlocked={this.props.onShowBlocked} /> :\n\n          view === 'support' ?\n          <AccSupportView\n            serverAddress={this.props.serverAddress}\n            serverVersion={this.props.serverVersion} /> :\n\n          (view === 'contacts' || view == 'archive' || view == 'blocked') ?\n          <ContactsView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            connected={this.props.connected}\n            topicSelected={this.props.topicSelected}\n            archive={view == 'archive'}\n            blocked={view == 'blocked'}\n            chatList={this.props.chatList}\n            showContextMenu={this.props.showContextMenu}\n            onTopicSelected={this.props.onTopicSelected}\n            onShowArchive={this.props.onShowArchive} /> :\n\n          view === 'newtpk' ?\n          <NewTopicView\n            searchResults={this.props.searchResults}\n            onInitFind={this.props.onInitFind}\n            onSearchContacts={this.props.onSearchContacts}\n            onCreateTopic={this.props.onCreateTopic}\n            onError={this.props.onError} /> :\n\n          view === 'cred' ?\n          <ValidationView\n            credCode={this.props.credCode}\n            credMethod={this.props.credMethod}\n            onSubmit={this.props.onValidateCredentials}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'reset' ?\n          <PasswordResetView\n            onRequest={this.props.onPasswordResetRequest}\n            onReset={this.props.onResetPassword} /> :\n          null}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SidepanelView);\n","import { KNOWN_HOSTS, DEFAULT_HOST } from '../config.js';\n\n// Detect server address from the URL\nexport function detectServerAddress() {\n  let host = DEFAULT_HOST;\n  if (typeof window.location == 'object') {\n    if (window.location.protocol == 'file:' || window.location.hostname == 'localhost') {\n      host = KNOWN_HOSTS.local;\n    } else if (window.location.hostname) {\n      host = window.location.hostname + (window.location.port ? ':' + window.location.port : '');\n    }\n  }\n  return host;\n}\n\n// Detect if the page is served over HTTPS.\nexport function isSecureConnection() {\n  if (typeof window.location == 'object') {\n    return window.location.protocol == 'https:';\n  }\n  return false;\n}\n\nexport function isLocalHost() {\n  if (typeof window.location == 'object') {\n    return window.location.hostname == 'localhost';\n  }\n  return false;\n}\n","// The top-level class to hold all functionality together.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport * as firebase from 'firebase/app';\nimport 'firebase/messaging';\n\nimport Tinode from 'tinode-sdk';\n\nimport Alert from '../widgets/alert.jsx';\nimport ContextMenu from '../widgets/context-menu.jsx';\n\nimport InfoView from './info-view.jsx';\nimport MessagesView from './messages-view.jsx';\nimport SidepanelView from './sidepanel-view.jsx';\n\nimport { API_KEY, APP_NAME, DEFAULT_P2P_ACCESS_MODE, LOGGING_ENABLED,\n  MEDIA_BREAKPOINT, RECEIVED_DELAY } from '../config.js';\nimport { base64ReEncode, makeImageUrl } from '../lib/blob-helpers.js';\nimport { detectServerAddress, isLocalHost, isSecureConnection } from '../lib/host-name.js';\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { secondsToTime } from '../lib/strformat.js'\nimport { updateFavicon } from '../lib/utils.js';\n\n// Sound to play on message received.\nconst POP_SOUND = new Audio('audio/msg.mp3');\n\nconst messages = defineMessages({\n  reconnect_countdown: {\n    id: 'reconnect_countdown',\n    defaultMessage: 'Disconnected. Reconnecting in {seconds}…',\n    description: 'Message shown when an app update is available.'\n  },\n  reconnect_now: {\n    id: 'reconnect_now',\n    defaultMessage: 'Try now',\n    description: 'Prompt for reconnecting now'\n  },\n  push_init_failed: {\n    id: 'push_init_failed',\n    defaultMessage: 'Failed to initialize push notifications',\n    description: 'Error message when push notifications have failed to initialize.'\n  },\n  invalid_security_token: {\n    id: 'invalid_security_token',\n    defaultMessage: 'Invalid security token',\n    description: 'Error message when resetting password.'\n  },\n  no_connection: {\n    id: 'no_connection',\n    defaultMessage: 'No connection',\n    description: 'Warning that the user is offline.'\n  },\n  code_doesnot_match: {\n    id: 'code_doesnot_match',\n    defaultMessage: 'Code does not match',\n    description: 'Error message when the credential validation code is incorrect.'\n  }\n});\n\nclass TinodeWeb extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = this.getBlankState();\n\n    this.handleResize = this.handleResize.bind(this);\n    this.handleHashRoute = this.handleHashRoute.bind(this);\n    this.handleOnline = this.handleOnline.bind(this);\n    this.checkForAppUpdate = this.checkForAppUpdate.bind(this);\n    this.handleVisibilityEvent = this.handleVisibilityEvent.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.handleLoginRequest = this.handleLoginRequest.bind(this);\n    this.handleConnected = this.handleConnected.bind(this);\n    this.handleAutoreconnectIteration = this.handleAutoreconnectIteration.bind(this);\n    this.doLogin = this.doLogin.bind(this);\n    this.handleCredentialsRequest = this.handleCredentialsRequest.bind(this);\n    this.handleLoginSuccessful = this.handleLoginSuccessful.bind(this);\n    this.handleDisconnect = this.handleDisconnect.bind(this);\n    this.tnMeMetaDesc = this.tnMeMetaDesc.bind(this);\n    this.tnMeContactUpdate = this.tnMeContactUpdate.bind(this);\n    this.tnMeSubsUpdated = this.tnMeSubsUpdated.bind(this);\n    this.resetContactList = this.resetContactList.bind(this);\n    this.tnData = this.tnData.bind(this);\n    this.tnInitFind = this.tnInitFind.bind(this);\n    this.tnFndSubsUpdated = this.tnFndSubsUpdated.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleTopicSelected = this.handleTopicSelected.bind(this);\n    this.handleHideMessagesView = this.handleHideMessagesView.bind(this);\n    this.handleSendMessage = this.handleSendMessage.bind(this);\n    this.handleNewChatInvitation = this.handleNewChatInvitation.bind(this);\n    this.handleNewAccount = this.handleNewAccount.bind(this);\n    this.handleNewAccountRequest = this.handleNewAccountRequest.bind(this);\n    this.handleUpdateAccountRequest = this.handleUpdateAccountRequest.bind(this);\n    this.handleUpdateAccountTagsRequest = this.handleUpdateAccountTagsRequest.bind(this);\n    this.handleToggleIncognitoMode = this.handleToggleIncognitoMode.bind(this);\n    this.handleSettings = this.handleSettings.bind(this);\n    this.handleGlobalSettings = this.handleGlobalSettings.bind(this);\n    this.handleShowArchive = this.handleShowArchive.bind(this);\n    this.handleShowBlocked = this.handleShowBlocked.bind(this);\n    this.handleToggleMessageSounds = this.handleToggleMessageSounds.bind(this);\n    this.handleCredAdd = this.handleCredAdd.bind(this);\n    this.handleCredDelete = this.handleCredDelete.bind(this);\n    this.handleCredConfirm = this.handleCredConfirm.bind(this);\n    this.initDesktopAlerts = this.initDesktopAlerts.bind(this);\n    this.togglePushToken = this.togglePushToken.bind(this);\n    this.requestPushToken = this.requestPushToken.bind(this);\n    this.handleSidepanelCancel = this.handleSidepanelCancel.bind(this);\n    this.handleStartTopicRequest = this.handleStartTopicRequest.bind(this);\n    this.handleNewTopicCreated = this.handleNewTopicCreated.bind(this);\n    this.handleTopicUpdateRequest = this.handleTopicUpdateRequest.bind(this);\n    this.handleChangePermissions = this.handleChangePermissions.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n    this.handleDeleteMessagesRequest = this.handleDeleteMessagesRequest.bind(this);\n    this.handleLeaveUnsubRequest = this.handleLeaveUnsubRequest.bind(this);\n    this.handleBlockTopicRequest = this.handleBlockTopicRequest.bind(this);\n    this.handleReportTopic = this.handleReportTopic.bind(this);\n    this.handleShowContextMenu = this.handleShowContextMenu.bind(this);\n    this.defaultTopicContextMenu = this.defaultTopicContextMenu.bind(this);\n    this.handleHideContextMenu = this.handleHideContextMenu.bind(this);\n    this.handleShowAlert = this.handleShowAlert.bind(this);\n    this.handleShowInfoView = this.handleShowInfoView.bind(this);\n    this.handleHideInfoView = this.handleHideInfoView.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleValidateCredentialsRequest = this.handleValidateCredentialsRequest.bind(this);\n    this.handlePasswordResetRequest = this.handlePasswordResetRequest.bind(this);\n    this.handleResetPassword = this.handleResetPassword.bind(this);\n    this.handleContextMenuAction = this.handleContextMenuAction.bind(this);\n  }\n\n  getBlankState() {\n    const settings = LocalStorageUtil.getObject('settings') || {};\n\n    return {\n      connected: false,\n      // Connected and subscribed to 'me'\n      ready: false,\n      // Try to re-login on new connection.\n      autoLogin: false,\n      transport: settings.transport || null,\n      serverAddress: settings.serverAddress || detectServerAddress(),\n      serverVersion: \"no connection\",\n      // \"On\" is the default, so saving the \"off\" state.\n      messageSounds: !settings.messageSoundsOff,\n      incognitoMode: false,\n      desktopAlerts: settings.desktopAlerts,\n      desktopAlertsEnabled: (isSecureConnection() || isLocalHost()) &&\n        (typeof firebase != 'undefined') && (typeof navigator != 'undefined') &&\n        (typeof FIREBASE_INIT != 'undefined'),\n      firebaseToken: LocalStorageUtil.getObject('firebase-token'),\n\n      applicationVisible: !document.hidden,\n\n      errorText: '',\n      errorLevel: null,\n      errorAction: undefined,\n      errorActionText: null,\n\n      sidePanelSelected: 'login',\n      sidePanelTitle: null,\n      sidePanelAvatar: null,\n      loadSpinnerVisible: false,\n\n      login: '',\n      password: '',\n      myUserId: null,\n      liveConnection: navigator.onLine,\n      topicSelected: '',\n      topicSelectedOnline: false,\n      topicSelectedAcs: null,\n      newTopicParams: null,\n      loginDisabled: false,\n      displayMobile: (window.innerWidth <= MEDIA_BREAKPOINT),\n      showInfoPanel: false,\n      mobilePanel: 'sidepanel',\n\n      contextMenuVisible: false,\n      contextMenuBounds: null,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuItems: [],\n\n      // Modal alert dialog.\n      alertVisible: false,\n      alertParams: {},\n\n      // Chats as shown in the ContactsView\n      chatList: [],\n      // Contacts returned by a search query.\n      searchResults: [],\n      // Merged results of a search query and p2p chats.\n      searchableContacts: [],\n      credMethod: undefined,\n      credCode: undefined\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    window.addEventListener('online', (e) => { this.handleOnline(true); });\n    window.addEventListener('offline', (e) => { this.handleOnline(false); });\n    window.addEventListener('hashchange', this.handleHashRoute);\n    // Window/tab visible or invisible for pausing timers.\n    document.addEventListener('visibilitychange', this.handleVisibilityEvent);\n\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n\n    const {formatMessage, locale} = this.props.intl;\n    this.tinode = TinodeWeb.tnSetup(this.state.serverAddress, this.state.transport, locale);\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n\n    // Initialize desktop alerts.\n    if (this.state.desktopAlertsEnabled) {\n      try {\n        this.fbPush = firebase.initializeApp(FIREBASE_INIT, APP_NAME).messaging();\n        this.fbPush.usePublicVapidKey(FIREBASE_INIT.messagingVapidKey);\n        navigator.serviceWorker.register('/service-worker.js').then((reg) => {\n          this.checkForAppUpdate(reg);\n          this.fbPush.useServiceWorker(reg);\n          reg.active.postMessage(JSON.stringify({locale: locale}));\n          this.initDesktopAlerts();\n          if (this.state.desktopAlerts) {\n            if (!this.state.firebaseToken) {\n              this.togglePushToken(true);\n            } else {\n              this.tinode.setDeviceToken(this.state.firebaseToken, true);\n            }\n          }\n        }).catch((err) => {\n          // registration failed :(\n          console.log(\"Failed to register service worker:\", err);\n        });\n      } catch (err) {\n        this.handleError(formatMessage({id: 'push_init_failed'}), 'err');\n        console.log(\"Failed to initialize push notifications\", err);\n        this.setState({desktopAlertsEnabled: false});\n      }\n    }\n\n    const token = LocalStorageUtil.getObject('keep-logged-in') ?\n      LocalStorageUtil.getObject('auth-token') : undefined;\n\n    const parsedNav = HashNavigation.parseUrlHash(window.location.hash);\n    if (token) {\n      this.setState({autoLogin: true});\n\n      // When reading from storage, date is returned as string.\n      token.expires = new Date(token.expires);\n      this.tinode.setAuthToken(token);\n      this.tinode.connect().catch((err) => {\n        // Socket error\n        this.handleError(err.message, 'err');\n      });\n      delete parsedNav.params.info;\n      delete parsedNav.params.tab;\n      parsedNav.path[0] = '';\n      HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsedNav.path, parsedNav.params));\n    } else if (!parsedNav.params.token) {\n      HashNavigation.navigateTo('');\n    }\n\n    this.readTimer = null;\n    this.readTimerCallback = null;\n\n    this.handleHashRoute();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n    window.removeEventListener('hashchange', this.handleHashRoute);\n    document.removeEventListener('visibilitychange', this.handleVisibilityEvent);\n  }\n\n  // Setup transport (usually websocket) and server address. This will terminate connection with the server.\n  static tnSetup(serverAddress, transport, locale) {\n    const tinode = new Tinode(APP_NAME, serverAddress, API_KEY, transport, isSecureConnection());\n    tinode.setHumanLanguage(locale);\n    tinode.enableLogging(LOGGING_ENABLED, true);\n    return tinode;\n  }\n\n  handleResize() {\n    const mobile = document.documentElement.clientWidth <= MEDIA_BREAKPOINT;\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n    if (this.state.displayMobile != mobile) {\n      this.setState({displayMobile: mobile});\n    }\n  }\n\n  // Check if a newer version of TinodeWeb app is available at the server.\n  checkForAppUpdate(reg) {\n    reg.onupdatefound = () => {\n      const installingWorker = reg.installing;\n      installingWorker.onstatechange = () => {\n        if (installingWorker.state == 'installed' && navigator.serviceWorker.controller) {\n          const msg = <>\n            <FormattedMessage id=\"update_available\"\n              defaultMessage=\"Update available.\"\n              description=\"Message shown when an app update is available.\" /> <a href=\"\">\n              <FormattedMessage id=\"reload_update\"\n                defaultMessage=\"Reload\"\n                description=\"Call to action to reload application when update is available.\" />\n            </a>.</>;\n          this.handleError(msg, 'info');\n        }\n      }\n    }\n  }\n\n  // Handle for hashchange event: display appropriate panels.\n  handleHashRoute() {\n    const hash = HashNavigation.parseUrlHash(window.location.hash);\n    if (hash.path && hash.path.length > 0) {\n      // Left-side panel selector.\n      if (['register','settings','edit','notif','security','support','general',\n          'cred','reset','newtpk','archive','blocked','contacts',''].includes(hash.path[0])) {\n        this.setState({sidePanelSelected: hash.path[0]});\n      } else {\n        console.log(\"Unknown sidepanel view\", hash.path[0]);\n      }\n\n      // Topic for MessagesView selector.\n      if (hash.path.length > 1 && hash.path[1] != this.state.topicSelected) {\n        this.setState({\n          topicSelected: Tinode.topicType(hash.path[1]) ? hash.path[1] : null\n        });\n      }\n    } else {\n      // Empty hashpath\n      this.setState({sidePanelSelected: ''});\n    }\n\n    // Save validation credentials, if available.\n    if (hash.params.method) {\n      this.setState({ credMethod: hash.params.method });\n    }\n    if (hash.params.code) {\n      this.setState({ credCode: hash.params.code });\n    }\n\n    // Additional parameters of panels.\n    this.setState({\n      showInfoPanel: hash.params.info,\n      newTopicTabSelected: hash.params.tab\n    });\n  }\n\n  handleOnline(online) {\n    if (online) {\n      this.handleError();\n    } else {\n      this.handleError(this.props.intl.formatMessage({id: 'no_connection'}), 'warn');\n    }\n    this.setState({liveConnection: online});\n  }\n\n  handleVisibilityEvent() {\n    this.setState({applicationVisible: !document.hidden});\n  }\n\n  handleError(err, level, action, actionText) {\n    this.setState({errorText: err, errorLevel: level, errorAction: action, errorActionText: actionText});\n  }\n\n  // User clicked Login button in the side panel.\n  handleLoginRequest(login, password) {\n    this.setState({\n      loginDisabled: true,\n      login: login,\n      password: password,\n      loadSpinnerVisible: true,\n      autoLogin: true\n    });\n    this.handleError('', null);\n\n    if (this.tinode.isConnected()) {\n      this.doLogin(login, password, {meth: this.state.credMethod, resp: this.state.credCode});\n    } else {\n      this.tinode.connect().catch((err) => {\n        // Socket error\n        this.setState({loginDisabled: false, autoLogin: false, loadSpinnerVisible: false});\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // Connection succeeded.\n  handleConnected() {\n    const params = this.tinode.getServerInfo();\n    this.setState({\n      serverVersion: params.ver + ' ' + (params.build ? params.build : 'none')\n    });\n\n    if (this.state.autoLogin) {\n      this.doLogin(this.state.login, this.state.password, {meth: this.state.credMethod, resp: this.state.credCode});\n    }\n  }\n\n  // Called for each auto-reconnect iteration.\n  handleAutoreconnectIteration(sec, prom) {\n    clearInterval(this.reconnectCountdown);\n\n    if (sec < 0) {\n      // Clear error\n      this.handleError();\n      return;\n    }\n\n    if (prom) {\n      // Reconnecting now\n      prom.then(() => {\n        // Reconnected: clear error\n        this.handleError();\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n      return;\n    }\n\n    const {formatMessage} = this.props.intl;\n    let count = sec / 1000;\n    count = count | count;\n    this.reconnectCountdown = setInterval(() => {\n      const timeLeft = (count > 99) ? secondsToTime(count) : count;\n      this.handleError(\n        formatMessage(messages.reconnect_countdown, {seconds: timeLeft}),\n        'warn',\n        () => {\n          clearInterval(this.reconnectCountdown);\n          this.tinode.reconnect();\n        },\n        formatMessage(messages.reconnect_now)\n      );\n      count -= 1;\n    }, 1000);\n  }\n\n  // Connection lost\n  handleDisconnect(err) {\n    this.setState({\n      connected: false,\n      ready: false,\n      topicSelectedOnline: false,\n      errorText: err && err.message ? err.message : \"Disconnected\",\n      errorLevel: err && err.message ? 'err' : 'warn',\n      loginDisabled: false,\n      contextMenuVisible: false,\n      serverVersion: \"no connection\"\n    });\n  }\n\n  doLogin(login, password, cred) {\n    if (this.tinode.isAuthenticated()) {\n      // Already logged in. Go to default screen.\n      HashNavigation.navigateTo('');\n      return;\n    }\n    // Sanitize and package credentail.\n    cred = Tinode.credential(cred);\n    // Try to login with login/password. If they are not available, try token. If no token, ask for login/password.\n    let promise = null;\n    const token = this.tinode.getAuthToken();\n    if (login && password) {\n      this.setState({password: null});\n      promise = this.tinode.loginBasic(login, password, cred);\n    } else if (token) {\n      promise = this.tinode.loginToken(token.token, cred);\n    }\n\n    if (promise) {\n      promise.then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text === 'validate credentials') {\n          this.setState({loadSpinnerVisible: false});\n          if (cred) {\n            this.handleError(this.props.intl.formatMessage({id: 'code_doesnot_match'}), 'warn');\n          }\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful();\n        }\n      }).catch((err) => {\n        // Login failed, report error.\n        this.setState({\n          loginDisabled: false,\n          credMethod: undefined,\n          credCode: undefined,\n          loadSpinnerVisible: false,\n          autoLogin: false\n        });\n        this.handleError(err.message, 'err');\n        localStorage.removeItem('auth-token');\n        HashNavigation.navigateTo('');\n      });\n    } else {\n      // No login credentials provided.\n      // Make sure we are on the login page.\n      HashNavigation.navigateTo('');\n      this.setState({loginDisabled: false});\n    }\n  }\n\n  handleCredentialsRequest(params) {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    parsed.path[0] = 'cred';\n    parsed.params['method'] = params.cred[0];\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n  }\n\n  handleLoginSuccessful() {\n    this.handleError();\n\n    // Refresh authentication token.\n    if (LocalStorageUtil.getObject('keep-logged-in')) {\n      LocalStorageUtil.setObject('auth-token', this.tinode.getAuthToken());\n    }\n    // Logged in fine, subscribe to 'me' attaching callbacks from the contacts view.\n    const me = this.tinode.getMeTopic();\n    me.onMetaDesc = this.tnMeMetaDesc;\n    me.onContactUpdate = this.tnMeContactUpdate;\n    me.onSubsUpdated = this.tnMeSubsUpdated;\n    this.setState({\n      connected: true,\n      credMethod: undefined,\n      credCode: undefined,\n      myUserId: this.tinode.getCurrentUserID(),\n      autoLogin: true,\n    });\n    // Subscribe, fetch topic desc, the list of subscriptions. Messages are not fetched.\n    me.subscribe(\n      me.startMetaQuery().\n        withLaterSub().\n        withDesc().\n        withTags().\n        withCred().\n        build()\n      ).catch((err) => {\n        this.tinode.disconnect();\n        localStorage.removeItem('auth-token');\n        this.handleError(err.message, 'err');\n        HashNavigation.navigateTo('');\n      }).finally(() => {\n        this.setState({loadSpinnerVisible: false});\n      });\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, 'contacts'));\n  }\n\n  tnMeMetaDesc(desc) {\n    if (desc) {\n      if (desc.public) {\n        this.setState({\n          sidePanelTitle: desc.public.fn,\n          sidePanelAvatar: makeImageUrl(desc.public.photo)\n        });\n      }\n      if (desc.acs) {\n        this.setState({\n          incognitoMode: !desc.acs.isPresencer()\n        });\n      }\n    }\n  }\n\n  // Reactions to updates to the contact list.\n  tnMeContactUpdate(what, cont) {\n    if (what == 'on' || what == 'off') {\n      this.resetContactList();\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedOnline: (what == 'on')});\n      }\n    } else if (what == 'read') {\n      this.resetContactList();\n    } else if (what == 'msg') {\n      // Check if the topic is archived. If so, don't play a sound.\n      const topic = this.tinode.getTopic(cont.topic);\n      const archived = topic && topic.isArchived();\n\n      // New message received. Maybe the message is from the current user, then unread is 0.\n      if (cont.unread > 0 && this.state.messageSounds && !archived) {\n        // Skip update if the topic is currently open, otherwise the badge will annoyingly flash.\n        if (document.hidden || this.state.topicSelected != cont.topic) {\n          POP_SOUND.play();\n        }\n      }\n      // Reorder contact list to use possibly updated 'touched'.\n      this.resetContactList();\n    } else if (what == 'recv') {\n      // Explicitly ignoring \"recv\" -- it causes no visible updates to contact list.\n    } else if (what == 'gone' || what == 'unsub') {\n      // Topic deleted or user unsubscribed. Remove topic from view.\n      // If the currently selected topic is gone, clear the selection.\n      if (this.state.topicSelected == cont.topic) {\n        this.handleTopicSelected(null);\n      }\n      // Redraw without the deleted topic.\n      this.resetContactList();\n    } else if (what == 'acs') {\n      // Permissions changed. If it's for the currently selected topic,\n      // update the views.\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedAcs: cont.acs});\n      }\n    } else if (what == 'del') {\n      // TODO: messages deleted (hard or soft) -- update pill counter.\n    } else if (what == 'upd') {\n      // upd - handled by the SDK. Explicitly ignoring here.\n    } else {\n      // TODO(gene): handle other types of notifications:\n      // * ua -- user agent changes (maybe display a pictogram for mobile/desktop).\n      console.log(\"Unsupported (yet) presence update:\" + what + \" in: \" + cont.topic);\n    }\n  }\n\n  tnMeSubsUpdated(unused) {\n    this.resetContactList();\n  }\n\n  // Merge search results and contact list to create a single flat\n  // list of kown contacts for GroupManager to use.\n  static prepareSearchableContacts(chatList, foundContacts) {\n    const merged = {};\n\n    // For chatList topics merge only p2p topics and convert them to the\n    // same format as foundContacts.\n    for (const c of chatList) {\n      if (Tinode.isP2PTopicName(c.topic)) {\n          merged[c.topic] = {\n            user: c.topic,\n            updated: c.updated,\n            public: c.public,\n            private: c.private,\n            acs: c.acs\n          };\n      }\n    }\n\n    // Add all foundCountacts if they have not been added already.\n    for (const c of foundContacts) {\n      if (!merged[c.user]) {\n        merged[c.user] = c;\n      }\n    }\n\n    return Object.values(merged);\n  }\n\n  resetContactList() {\n    const newState = {\n      chatList: []\n    };\n\n    if (!this.state.ready) {\n      newState.ready = true;\n    }\n\n    this.tinode.getMeTopic().contacts((c) => {\n      newState.chatList.push(c);\n      if (this.state.topicSelected == c.topic) {\n        newState.topicSelectedOnline = c.online;\n        newState.topicSelectedAcs = c.acs;\n      }\n    });\n    // Merge search results and chat list.\n    newState.searchableContacts = TinodeWeb.prepareSearchableContacts(newState.chatList, this.state.searchResults);\n    this.setState(newState);\n  }\n\n  // Sending \"received\" notifications\n  tnData(data) {\n    const topic = this.tinode.getTopic(data.topic);\n    if (topic.msgStatus(data) >= Tinode.MESSAGE_STATUS_SENT && data.from != this.state.myUserId) {\n      clearTimeout(this.receivedTimer);\n      this.receivedTimer = setTimeout(() => {\n        this.receivedTimer = undefined;\n        topic.noteRecv(data.seq);\n      }, RECEIVED_DELAY);\n    }\n  }\n\n  /* Fnd topic: find contacts by tokens */\n  tnInitFind() {\n    const fnd = this.tinode.getFndTopic();\n    fnd.onSubsUpdated = this.tnFndSubsUpdated;\n    if (fnd.isSubscribed()) {\n      this.tnFndSubsUpdated();\n    } else {\n      fnd.subscribe(fnd.startMetaQuery().withSub().build()).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  tnFndSubsUpdated() {\n    const foundContacts = [];\n    // Don't attempt to create P2P topics which already exist. Server will reject the duplicates.\n    this.tinode.getFndTopic().contacts((s) => {\n      foundContacts.push(s);\n    });\n    this.setState({\n      searchResults: foundContacts,\n      searchableContacts: TinodeWeb.prepareSearchableContacts(this.state.chatList, foundContacts)\n    });\n  }\n\n  /** Called when the user enters a contact into the contact search field in the NewAccount panel\n    @param query {Array} is an array of contacts to search for\n   */\n  handleSearchContacts(query) {\n    const fnd = this.tinode.getFndTopic();\n    fnd.setMeta({desc: {public: query}}).then((ctrl) => {\n      return fnd.getMeta(fnd.startMetaQuery().withSub().build());\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  // User clicked on a contact in the side panel or deleted a contact.\n  handleTopicSelected(topicName) {\n    // Clear newTopicParams after use.\n    if (this.state.newTopicParams && this.state.newTopicParams._topicName != topicName) {\n      this.setState({\n        newTopicParams: null\n      });\n    }\n\n    if (topicName) {\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'topic-view',\n        showInfoPanel: false\n      });\n      // Different contact selected.\n      if (this.state.topicSelected != topicName) {\n        this.setState({\n          topicSelectedOnline: this.tinode.isTopicOnline(topicName),\n          topicSelectedAcs: this.tinode.getTopicAccessMode(topicName)\n        });\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', topicName));\n      }\n    } else {\n      // Currently selected contact deleted\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'sidepanel',\n        topicSelectedOnline: false,\n        topicSelectedAcs: null,\n        showInfoPanel: false\n      });\n\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic('', null));\n    }\n  }\n\n  // In mobile view user requested to show sidepanel\n  handleHideMessagesView() {\n    this.setState({\n      mobilePanel: 'sidepanel'\n    });\n    HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, null));\n  }\n\n  // User is sending a message, either plain text or a drafty object, possibly\n  // with attachments.\n  //  - msg - Drafty message with content\n  //  - promise - Promise to be resolved when the upload is completed\n  //  - uploader - for tracking progress\n  handleSendMessage(msg, promise, uploader) {\n    const topic = this.tinode.getTopic(this.state.topicSelected);\n\n    msg = topic.createMessage(msg, false);\n    // The uploader is used to show progress.\n    msg._uploader = uploader;\n\n    if (!topic.isSubscribed()) {\n      if (!promise) {\n        promise = Promise.resolve();\n      }\n      promise = promise.then(() => { return topic.subscribe(); });\n    }\n\n    if (promise) {\n      promise = promise.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n\n    topic.publishDraft(msg, promise)\n      .then((ctrl) => {\n        if (topic.isArchived()) {\n          return topic.archive(false);\n        }\n      })\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleNewChatInvitation(topicName, action) {\n    const topic = this.tinode.getTopic(topicName);\n    let response = null;\n    switch (action) {\n      case 'accept':\n        // Accept given permissions.\n        const mode = topic.getAccessMode().getGiven();\n        response = topic.setMeta({sub: {mode: mode}});\n        if (topic.isP2P()) {\n          // For P2P topics change 'given' permission of the peer too.\n          // In p2p topics the other user has the same name as the topic.\n          response = response.then((ctrl) => {\n            topic.setMeta({sub: {user: topicName, mode: mode}});\n          });\n        }\n        break;\n      case 'delete':\n        // Ignore invitation by deleting it.\n        response = topic.delTopic(true);\n        break;\n      case 'block':\n        // Ban the topic making futher invites impossible.\n        // Just self-ban.\n        const am = topic.getAccessMode().updateWant('-JP').getWant();\n        response = topic.setMeta({sub: {mode: am}}).then((ctrl) => {\n          return this.handleTopicSelected(null);\n        });\n        break;\n      default:\n        console.log(\"Unknown invitation action\", '\"' + action + '\"\"');\n    }\n\n    if (response != null) {\n      response.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // User chose a Sign Up menu item.\n  handleNewAccount() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, 'register'));\n  }\n\n  // Actual registration of a new account.\n  handleNewAccountRequest(login_, password_, public_, cred_, tags_) {\n    // Clear old error, if any.\n    this.handleError();\n\n    this.tinode.connect(this.state.serverAddress)\n      .then(() => {\n        return this.tinode.createAccountBasic(login_, password_,\n          {public: public_, tags: tags_, cred: Tinode.credential(cred_)});\n      }).then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text == 'validate credentials') {\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful(this);\n        }\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleUpdateAccountRequest(password, pub, defacs) {\n    this.handleError();\n\n    if (pub || defacs) {\n      const params = {};\n      if (pub) {\n        params.public = pub;\n      }\n      if (defacs) {\n        params.defacs = defacs;\n      }\n      this.tinode.getMeTopic().setMeta({desc: params}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n    if (password) {\n      this.tinode.updateAccountBasic(null, this.tinode.getCurrentLogin(), password).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleToggleIncognitoMode(on) {\n    const me = this.tinode.getMeTopic();\n    const am = me.getAccessMode().updateWant(on ? '-P' : '+P').getWant();\n    me.setMeta({sub: {mode: am}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleUpdateAccountTagsRequest(tags) {\n    this.tinode.getMeTopic().setMeta({tags: tags})\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  // User chose Settings menu item.\n  handleSettings() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'edit' : 'settings'));\n  }\n\n  // User updated global parameters.\n  handleGlobalSettings(settings) {\n    const serverAddress = settings.serverAddress || this.state.serverAddress;\n    const transport = settings.transport || this.state.transport;\n    if (this.tinode) {\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.tinode = TinodeWeb.tnSetup(serverAddress, transport, this.props.intl.locale);\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n\n    this.setState({\n      serverAddress: serverAddress,\n      transport: transport\n    });\n    LocalStorageUtil.setObject('settings', {\n      serverAddress: serverAddress,\n      transport: transport\n    });\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, ''));\n  }\n\n  // User chose 'Archived chats'.\n  handleShowArchive() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'archive' : ''));\n  }\n\n  // User viewes 'Blocked chats'.\n  handleShowBlocked() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'blocked' : ''));\n  }\n\n  // Initialize desktop alerts = push notifications.\n  initDesktopAlerts() {\n    // Google could not be bothered to mention that\n    // onTokenRefresh is never called.\n    this.fbPush.onTokenRefresh(() => {\n      this.requestPushToken();\n    });\n\n    this.fbPush.onMessage((payload) => {\n      // No need to do anything about it.\n      // All the magic happends in the service worker.\n    });\n  }\n\n  togglePushToken(enabled) {\n    if (enabled) {\n      if (!this.state.firebaseToken) {\n        this.fbPush.requestPermission().then(() => {\n          this.requestPushToken();\n        }).catch((err) => {\n          this.handleError(err.message, 'err');\n          this.setState({desktopAlerts: false, firebaseToken: null});\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n          console.log(\"Failed to get permission to notify.\", err);\n        });\n      } else {\n        this.setState({desktopAlerts: true});\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n      }\n    } else if (this.state.firebaseToken) {\n      this.fbPush.deleteToken(this.state.firebaseToken).catch((err) => {\n        console.log(\"Unable to delete token.\", err);\n      }).finally(() => {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        localStorage.removeItem('firebase-token');\n        this.setState({desktopAlerts: false, firebaseToken: null});\n      });\n    } else {\n      this.setState({desktopAlerts: false, firebaseToken: null});\n      LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n    }\n  }\n\n  requestPushToken() {\n    this.fbPush.getToken().then((refreshedToken) => {\n      if (refreshedToken != this.state.firebaseToken) {\n        this.tinode.setDeviceToken(refreshedToken, true);\n        LocalStorageUtil.setObject('firebase-token', refreshedToken);\n      }\n      this.setState({firebaseToken: refreshedToken, desktopAlerts: true});\n      LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n      console.log(\"Failed to retrieve firebase token\", err);\n    });\n  }\n\n  handleToggleMessageSounds(enabled) {\n    this.setState({messageSounds: enabled});\n    LocalStorageUtil.updateObject('settings', {\n      messageSoundsOff: !enabled\n    });\n  }\n\n  handleCredAdd(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.setMeta({cred: {meth: method, val: value}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredDelete(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.delCredential(method, value).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredConfirm(method, response) {\n    this.handleCredentialsRequest({cred: [method]});\n  }\n\n  // User clicked Cancel button in Setting or Sign Up panel.\n  handleSidepanelCancel() {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    let path = '';\n    if (['security','support','general','notif'].includes(parsed.path[0])) {\n      path = 'edit';\n    } else if ('blocked' == parsed.path[0]) {\n      path = 'security';\n    } else if (this.state.myUserId) {\n      path = 'contacts';\n    }\n    parsed.path[0] = path;\n    if (parsed.params) {\n      delete parsed.params.code;\n      delete parsed.params.method;\n      delete parsed.params.tab;\n    }\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n    this.setState({errorText: '', errorLevel: null});\n  }\n\n  // Basic nagigator by hash value. No need to bind to this.\n  basicNavigator(hash) {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, hash));\n  }\n\n  // Request to start a topic, new or selected from search results.\n  handleStartTopicRequest(topicName, pub, priv, tags, isChannel) {\n    // Check if topic is indeed new. If not, launch it.\n    if (topicName && this.tinode.getTopic(topicName)) {\n      this.handleTopicSelected(topicName);\n      return;\n    }\n\n    const params = {};\n    if (Tinode.isP2PTopicName(topicName)) {\n      // Because we are initialing the subscription, set 'want' to all permissions.\n      params.sub = {mode: DEFAULT_P2P_ACCESS_MODE};\n      // Give the other user all permissions too.\n      params.desc = {defacs: {auth: DEFAULT_P2P_ACCESS_MODE}};\n    } else {\n      topicName = topicName || this.tinode.newGroupTopicName(isChannel);\n      params.desc = {public: pub, private: {comment: priv}};\n      params.tags = tags;\n    }\n    params._topicName = topicName;\n    this.setState({newTopicParams: params}, () => {this.handleTopicSelected(topicName)});\n  }\n\n  // New topic was creted, here is the new topic name.\n  handleNewTopicCreated(oldName, newName) {\n    if (this.state.topicSelected == oldName && oldName != newName) {\n      // If the current URl contains the old topic name, replace it with new.\n      // Update the name of the selected topic first so the navigator doen't clear\n      // the state.\n      this.setState({topicSelected: newName}, () => {\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', newName));\n      });\n    }\n  }\n\n  handleTopicUpdateRequest(topicName, pub, priv, permissions) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const params = {};\n      if (pub) {\n        params.public = pub;\n      }\n      if (priv) {\n        params.private = (priv === Tinode.DEL_CHAR) ?\n          Tinode.DEL_CHAR : {comment: priv};\n      }\n      if (permissions) {\n        params.defacs = permissions;\n      }\n      topic.setMeta({desc: params}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleChangePermissions(topicName, mode, uid) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const am = topic.getAccessMode();\n      if (uid) {\n        am.updateGiven(mode);\n        mode = am.getGiven();\n      } else {\n        am.updateWant(mode);\n        mode = am.getWant();\n      }\n      topic.setMeta({sub: {user: uid, mode: mode}}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleTagsUpdated(topicName, tags) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      topic.setMeta({tags: tags}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleLogout() {\n    updateFavicon(0);\n\n    // Remove stored data.\n    localStorage.removeItem('auth-token');\n    localStorage.removeItem('firebase-token');\n    localStorage.removeItem('settings');\n    if (this.state.firebaseToken) {\n      this.fbPush.deleteToken(this.state.firebaseToken)\n    }\n\n    if (this.tinode) {\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.setState(this.getBlankState());\n    this.tinode = TinodeWeb.tnSetup(this.state.serverAddress, this.state.transport, this.props.intl.locale);\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    HashNavigation.navigateTo('');\n  }\n\n  handleDeleteAccount() {\n    this.tinode.delCurrentUser(true).then((ctrl) => {\n      this.handleLogout();\n    });\n  }\n\n  handleDeleteMessagesRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Request hard-delete all messages.\n    topic.delMessagesAll(true).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleLeaveUnsubRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.leave(true).then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleBlockTopicRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleReportTopic(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Publish spam report.\n    this.tinode.publish(Tinode.TOPIC_SYS, Tinode.Drafty.attachJSON(null, {\n      'action': 'report',\n      'target': topicName\n    }));\n\n    // Remove J and P permissions.\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleShowContextMenu(params, menuItems) {\n    this.setState({\n      contextMenuVisible: true,\n      contextMenuClickAt: {x: params.x, y: params.y},\n      contextMenuParams: params,\n      contextMenuItems: menuItems || this.defaultTopicContextMenu(params.topicName),\n      contextMenuBounds: ReactDOM.findDOMNode(this).getBoundingClientRect()\n    });\n  }\n\n  defaultTopicContextMenu(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n\n    let muted = false, blocked = false, self_blocked = false, subscribed = false, deleter = false, archived = false;\n    if (topic) {\n      subscribed = topic.isSubscribed();\n      archived = topic.isArchived();\n\n      const acs = topic.getAccessMode();\n      if (acs) {\n        muted = acs.isMuted();\n        blocked = !acs.isJoiner();\n        self_blocked = !acs.isJoiner('want');\n        deleter = acs.isDeleter();\n      }\n    }\n\n    return [\n      subscribed ? {\n        title: this.props.intl.formatMessage({id: 'menu_item_info'}),\n        handler: this.handleShowInfoView\n      } : null,\n      subscribed ? 'messages_clear' : null,\n      subscribed && deleter ? 'messages_clear_hard' : null,\n      muted ? (blocked ? null : 'topic_unmute') : 'topic_mute',\n      self_blocked ? 'topic_unblock' : 'topic_block',\n      !archived ? 'topic_archive' : null,\n      'topic_delete'\n    ];\n  }\n\n  handleHideContextMenu() {\n    this.setState({\n      contextMenuVisible: false,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuBounds: null\n    });\n  }\n\n  handleContextMenuAction(action, promise, params) {\n    if (action == 'topic_archive') {\n      if (promise && params.topicName && params.topicName == this.state.topicSelected) {\n        promise.then(() => {\n          this.handleTopicSelected(null);\n        });\n      }\n    }\n  }\n\n  handleShowAlert(title, content, onConfirm, confirmText, onReject, rejectText) {\n    this.setState({\n      alertVisible: true,\n      alertParams: {\n        title: title,\n        content: content,\n        onConfirm: onConfirm,\n        confirm: confirmText,\n        onReject: onReject,\n        reject: rejectText\n      }\n    });\n  }\n\n  handleShowInfoView() {\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'info', true));\n    this.setState({showInfoPanel: true});\n  }\n\n  handleHideInfoView() {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'info'));\n    this.setState({showInfoPanel: false});\n  }\n\n  handleMemberUpdateRequest(topicName, added, removed) {\n    if (!topicName) {\n      return;\n    }\n\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    if (added && added.length > 0) {\n      added.map((uid) => {\n        topic.invite(uid, null).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n\n    if (removed && removed.length > 0) {\n      removed.map((uid) => {\n        topic.delSubscription(uid).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n  }\n\n  handleValidateCredentialsRequest(cred, code) {\n    if (this.tinode.isAuthenticated()) {\n      const me = this.tinode.getMeTopic();\n      me.setMeta({cred: {meth: cred, resp: code}})\n        .then(() => {\n          HashNavigation.navigateTo('');\n        })\n        .catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n    } else {\n      this.setState({credMethod: cred, credCode: code});\n      this.doLogin(null, null, {meth: cred, resp: code});\n    }\n  }\n\n  handlePasswordResetRequest(method, value) {\n    // If already connected, connnect() will return a resolved promise.\n    this.tinode.connect()\n      .then(() => {\n        return this.tinode.requestResetAuthSecret('basic', method, value);\n      })\n      .catch((err) => {\n        // Socket error\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleResetPassword(scheme, newPassword, token) {\n    token = base64ReEncode(token);\n    if (!token) {\n      this.handleError(this.props.intl.formatMessage({id: 'invalid_security_token'}), 'err');\n    } else {\n      this.tinode.connect()\n        .then(() => {\n          return this.tinode.updateAccountBasic(null, null, newPassword, {token: token});\n        })\n        .catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"app-container\">\n        {this.state.contextMenuVisible ?\n          <ContextMenu\n            tinode={this.tinode}\n            bounds={this.state.contextMenuBounds}\n            clickAt={this.state.contextMenuClickAt}\n            params={this.state.contextMenuParams}\n            items={this.state.contextMenuItems}\n            hide={this.handleHideContextMenu}\n            onShowAlert={this.handleShowAlert}\n            onAction={this.handleContextMenuAction}\n            onTopicRemoved={(topicName) => {\n              if (topicName == this.state.topicSelected) {\n                this.handleTopicSelected(null);\n              }\n            }}\n            onError={this.handleError} />\n          :\n          null\n        }\n        <Alert\n          visible={this.state.alertVisible}\n          title={this.state.alertParams.title}\n          content={this.state.alertParams.content}\n          onReject={this.state.alertParams.onReject ? (() => { this.setState({alertVisible: false}); }) : null}\n          reject={this.state.alertParams.reject}\n          onConfirm={() => { this.setState({alertVisible: false}); this.state.alertParams.onConfirm(); }}\n          confirm={this.state.alertParams.confirm}\n          />\n        <SidepanelView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          displayMobile={this.state.displayMobile}\n          hideSelf={this.state.displayMobile && this.state.mobilePanel !== 'sidepanel'}\n          state={this.state.sidePanelSelected}\n          title={this.state.sidePanelTitle}\n          avatar={this.state.sidePanelAvatar}\n          login={this.state.login}\n          myUserId={this.state.myUserId}\n          loginDisabled={this.state.loginDisabled}\n          loadSpinnerVisible={this.state.loadSpinnerVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          topicSelected={this.state.topicSelected}\n          chatList={this.state.chatList}\n          credMethod={this.state.credMethod}\n          credCode={this.state.credCode}\n\n          transport={this.state.transport}\n          messageSounds={this.state.messageSounds}\n          desktopAlerts={this.state.desktopAlerts}\n          desktopAlertsEnabled={this.state.desktopAlertsEnabled}\n          incognitoMode={this.state.incognitoMode}\n          serverAddress={this.state.serverAddress}\n          serverVersion={this.state.serverVersion}\n\n          onGlobalSettings={this.handleGlobalSettings}\n          onSignUp={this.handleNewAccount}\n          onSettings={this.handleSettings}\n          onBasicNavigate={this.basicNavigator}\n          onLoginRequest={this.handleLoginRequest}\n          onCreateAccount={this.handleNewAccountRequest}\n          onUpdateAccount={this.handleUpdateAccountRequest}\n          onUpdateAccountTags={this.handleUpdateAccountTagsRequest}\n          onTogglePushNotifications={this.togglePushToken}\n          onToggleMessageSounds={this.handleToggleMessageSounds}\n          onToggleIncognitoMode={this.handleToggleIncognitoMode}\n          onCredAdd={this.handleCredAdd}\n          onCredDelete={this.handleCredDelete}\n          onCredConfirm={this.handleCredConfirm}\n          onTopicSelected={this.handleTopicSelected}\n          onCreateTopic={this.handleStartTopicRequest}\n          onLogout={this.handleLogout}\n          onDeleteAccount={this.handleDeleteAccount}\n          onShowAlert={this.handleShowAlert}\n          onCancel={this.handleSidepanelCancel}\n          onError={this.handleError}\n          onValidateCredentials={this.handleValidateCredentialsRequest}\n          onPasswordResetRequest={this.handlePasswordResetRequest}\n          onResetPassword={this.handleResetPassword}\n          onShowArchive={this.handleShowArchive}\n          onShowBlocked={this.handleShowBlocked}\n\n          onInitFind={this.tnInitFind}\n          searchResults={this.state.searchResults}\n          onSearchContacts={this.handleSearchContacts}\n\n          showContextMenu={this.handleShowContextMenu} />\n\n        <MessagesView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          ready={this.state.ready}\n          online={this.state.topicSelectedOnline}\n          acs={this.state.topicSelectedAcs}\n          displayMobile={this.state.displayMobile}\n          viewportWidth={this.state.viewportWidth}\n          viewportHeight={this.state.viewportHeight}\n          hideSelf={this.state.displayMobile &&\n            (this.state.mobilePanel !== 'topic-view' || this.state.showInfoPanel)}\n          topic={this.state.topicSelected}\n          myUserId={this.state.myUserId}\n          serverVersion={this.state.serverVersion}\n          serverAddress={this.state.serverAddress}\n          applicationVisible={this.state.applicationVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          newTopicParams={this.state.newTopicParams}\n\n          onHideMessagesView={this.handleHideMessagesView}\n          onData={this.tnData}\n          onError={this.handleError}\n          onNewTopicCreated={this.handleNewTopicCreated}\n          showContextMenu={this.handleShowContextMenu}\n          onChangePermissions={this.handleChangePermissions}\n          onNewChat={this.handleNewChatInvitation}\n          sendMessage={this.handleSendMessage} />\n\n        {this.state.showInfoPanel ?\n          <InfoView\n            tinode={this.tinode}\n            connected={this.state.connected}\n            displayMobile={this.state.displayMobile}\n            topic={this.state.topicSelected}\n            searchableContacts={this.state.searchableContacts}\n            myUserId={this.state.myUserId}\n\n            errorText={this.state.errorText}\n            errorLevel={this.state.errorLevel}\n            errorAction={this.state.errorAction}\n            errorActionText={this.state.errorActionText}\n\n            onTopicDescUpdate={this.handleTopicUpdateRequest}\n            onCancel={this.handleHideInfoView}\n            onShowAlert={this.handleShowAlert}\n            onChangePermissions={this.handleChangePermissions}\n            onMemberUpdateRequest={this.handleMemberUpdateRequest}\n            onDeleteMessages={this.handleDeleteMessagesRequest}\n            onLeaveTopic={this.handleLeaveUnsubRequest}\n            onBlockTopic={this.handleBlockTopicRequest}\n            onReportTopic={this.handleReportTopic}\n            onAddMember={this.handleManageGroupMembers}\n            onTopicTagsUpdate={this.handleTagsUpdated}\n            onInitFind={this.tnInitFind}\n            onError={this.handleError}\n\n            showContextMenu={this.handleShowContextMenu}\n            />\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(TinodeWeb);\n","// Put all packages together.\n// Used to generate umd/index.prod.js\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { IntlProvider } from 'react-intl';\n\nimport allMessages from './messages.json';\nimport TinodeWeb from './views/tinode-web.jsx';\nimport HashNavigation from './lib/navigation.js';\n\n// Detect human language to use in the UI:\n//  Check parameters from URL hash #?hl=ru, then browser, then use 'en' as a fallback.\nconst { params } = HashNavigation.parseUrlHash(window.location.hash);\nconst language = (params && params.hl) ||\n  (navigator.languages && navigator.languages[0]) ||\n  navigator.language ||\n  navigator.userLanguage ||\n  'en';\n\n// Get the base language 'en' from a more specific 'en_GB' or 'en-US' as a partial fallback.\nconst baseLanguage = language.toLowerCase().split(/[-_]/)[0];\n\n// Try the full locale first, then the locale without the region code, fallback to 'en'.\nconst messages =\n  allMessages[language] ||\n  allMessages[baseLanguage] ||\n  allMessages.en;\n\nReactDOM.render(\n  <IntlProvider locale={language} messages={messages} textComponent={React.Fragment}>\n    <TinodeWeb />\n  </IntlProvider>,\n  document.getElementById('mountPoint')\n);\n"],"sourceRoot":""}