{"version":3,"file":"78.prod.js","mappings":"uNAUA,MAAMA,UAAkBC,IAAAA,cACtBC,YAAYC,GACVC,MAAMD,GAENE,KAAKC,QAAU,CAAC,EAChBC,EAAAA,SAAuBC,IAAQH,KAAKC,QAAQE,EAAGC,MAAQD,EAAGE,IAAI,IAE9DL,KAAKM,MAAQ,CACXC,YAAaT,EAAMS,aAAe,KAClCC,SAAUR,KAAKC,QAAQH,EAAMS,aAAe,MAC5CE,YAAa,IAGfT,KAAKU,aAAeV,KAAKU,aAAaC,KAAKX,MAC3CA,KAAKY,eAAiBZ,KAAKY,eAAeD,KAAKX,MAC/CA,KAAKa,cAAgBb,KAAKa,cAAcF,KAAKX,MAC7CA,KAAKc,oBAAsBd,KAAKc,oBAAoBH,KAAKX,MACzDA,KAAKe,iBAAmBf,KAAKe,iBAAiBJ,KAAKX,KACrD,CAEAU,aAAaM,GACXhB,KAAKiB,SAAS,CAACR,YAAaT,KAAKkB,aAAaF,EAAEG,OAAOC,QACzD,CAEAR,eAAeI,GAEbA,EAAEK,iBACF,MAAMC,EAAU,GAAEtB,KAAKM,MAAME,WAAWR,KAAKM,MAAMG,YAAYc,SAASC,QAAQ,SAAU,IAC1FxB,KAAKF,MAAM2B,SAAU,IAAGH,IAC1B,CAGAT,cAAcG,GACE,UAAVA,EAAEU,KACJ1B,KAAKY,eAAeI,EAExB,CAEAF,sBACEd,KAAKF,MAAM6B,sBAAsB3B,KAAKM,MAAMC,YAAaP,KAAKM,MAAME,SACtE,CAGAU,aAAaI,GACX,OAAKA,EAKEA,EAAOE,QAAQ,eAAgB,IAJ7BF,CAKX,CAEAP,mBACE,MAAMa,GAAcC,EAAAA,EAAAA,GAAiB7B,KAAKM,MAAMC,YAAauB,EAAAA,GAE7D9B,KAAKiB,SAAS,CAACc,YAAaH,EAAYI,kBAC1C,CAEAC,SACE,OACE,oCACE,0BAAMC,UAAU,YAAYC,QAASnC,KAAKc,qBACxC,0BAAMoB,UAAU,iBAAgBE,EAAAA,EAAAA,IAAUpC,KAAKM,MAAMC,aAAa,KAAa,IAC7EP,KAAKM,MAAME,SAAS,KACxB,2BAAO6B,KAAK,MAAMN,YAAa/B,KAAKM,MAAMyB,YACtCX,MAAOpB,KAAKM,MAAMG,YAAa6B,SAAUtC,KAAKU,aAC9C6B,UAAW,GAAIC,UAAWxC,KAAKa,cAAe4B,OAAQzC,KAAKY,eAC3D8B,UAAQ,EAACC,UAAW3C,KAAKF,MAAM6C,YAGzC,EAGF,SAAeC,EAAAA,EAAAA,YAAWjD,E","sources":["webpack://tinode-webapp/./src/widgets/phone-edit.jsx"],"sourcesContent":["// Editor for a phone number.\n\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { getExampleNumber, parsePhoneNumber } from 'libphonenumber-js/mobile';\nimport examples from 'libphonenumber-js/mobile/examples'\n\nimport * as dcodes from '../dcodes.json';\nimport { flagEmoji } from '../lib/strformat';\n\nclass PhoneEdit extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.codeMap = {};\n    dcodes.default.forEach(dc => { this.codeMap[dc.code] = dc.dial; });\n\n    this.state = {\n      countryCode: props.countryCode || 'US',\n      dialCode: this.codeMap[props.countryCode || 'US'],\n      localNumber: ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleFinished = this.handleFinished.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.showCountrySelector = this.showCountrySelector.bind(this);\n    this.placholderNumber = this.placholderNumber.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({localNumber: this.filterNumber(e.target.value)});\n  }\n\n  handleFinished(e) {\n    // this.setCustomValidity(\"Mobile phone number required\");\n    e.preventDefault();\n    const number = `${this.state.dialCode}${this.state.localNumber.trim()}`.replace(/[^\\d]/g, '')\n    this.props.onSubmit(`+${number}`);\n  }\n\n\n  handleKeyDown(e) {\n    if (e.key === 'Enter') {\n      this.handleFinished(e);\n    }\n  }\n\n  showCountrySelector() {\n    this.props.onShowCountrySelector(this.state.countryCode, this.state.dialCode);\n  }\n\n  // Filter out characters not permitted in a phone number.\n  filterNumber(number) {\n    if (!number) {\n      return number;\n    }\n    // Leave numbers, space, (, ), -, and .\n    // The + is not allowed: it's handled by the country code portion.\n    return number.replace(/[^-\\s().\\d]/g, '');\n  }\n\n  placholderNumber() {\n    const phoneNumber = getExampleNumber(this.state.countryCode, examples)\n    // TODO: strip calling code from number.\n    this.setState({placeholder: phoneNumber.formatNational()});\n  }\n\n  render() {\n    return (\n      <>\n        <span className=\"dial-code\" onClick={this.showCountrySelector}>\n          <span className=\"country-flag\">{flagEmoji(this.state.countryCode)}&nbsp;</span>\n          +{this.state.dialCode}&nbsp;</span>\n        <input type=\"tel\" placeholder={this.state.placeholder}\n            value={this.state.localNumber} onChange={this.handleChange}\n            maxLength={17} onKeyDown={this.handleKeyDown} onBlur={this.handleFinished}\n            required autoFocus={this.props.autoFocus} />\n      </>\n    );\n  }\n}\n\nexport default injectIntl(PhoneEdit);\n"],"names":["PhoneEdit","React","constructor","props","super","this","codeMap","dcodes","dc","code","dial","state","countryCode","dialCode","localNumber","handleChange","bind","handleFinished","handleKeyDown","showCountrySelector","placholderNumber","e","setState","filterNumber","target","value","preventDefault","number","trim","replace","onSubmit","key","onShowCountrySelector","phoneNumber","getExampleNumber","examples","placeholder","formatNational","render","className","onClick","flagEmoji","type","onChange","maxLength","onKeyDown","onBlur","required","autoFocus","injectIntl"],"sourceRoot":""}