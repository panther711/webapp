{"version":3,"sources":["webpack://tinode-webapp/webpack/bootstrap","webpack://tinode-webapp/webpack/runtime/compat get default export","webpack://tinode-webapp/webpack/runtime/define property getters","webpack://tinode-webapp/webpack/runtime/hasOwnProperty shorthand","webpack://tinode-webapp/external \"React\"","webpack://tinode-webapp/external \"ReactDOM\"","webpack://tinode-webapp/external \"ReactIntl\"","webpack://tinode-webapp/external \"firebase\"","webpack://tinode-webapp/external \"Tinode\"","webpack://tinode-webapp/external [\"firebase\",\"messaging\"]","webpack://tinode-webapp/./src/widgets/alert.jsx","webpack://tinode-webapp/./src/version.js","webpack://tinode-webapp/./src/config.js","webpack://tinode-webapp/./src/widgets/context-menu.jsx","webpack://tinode-webapp/./src/lib/strformat.js","webpack://tinode-webapp/./src/widgets/letter-tile.jsx","webpack://tinode-webapp/./src/lib/blob-helpers.js","webpack://tinode-webapp/./src/widgets/avatar-upload.jsx","webpack://tinode-webapp/./src/widgets/checkbox.jsx","webpack://tinode-webapp/./src/widgets/contact-badges.jsx","webpack://tinode-webapp/./src/lib/utils.js","webpack://tinode-webapp/./src/widgets/received-marker.jsx","webpack://tinode-webapp/./src/widgets/unread-badge.jsx","webpack://tinode-webapp/./src/widgets/contact.jsx","webpack://tinode-webapp/./src/widgets/contact-action.jsx","webpack://tinode-webapp/./src/widgets/contact-list.jsx","webpack://tinode-webapp/./src/widgets/menu-cancel.jsx","webpack://tinode-webapp/./src/widgets/error-panel.jsx","webpack://tinode-webapp/./src/widgets/chip.jsx","webpack://tinode-webapp/./src/widgets/chip-input.jsx","webpack://tinode-webapp/./src/widgets/group-manager.jsx","webpack://tinode-webapp/./src/widgets/visible-password.jsx","webpack://tinode-webapp/./src/widgets/in-place-edit.jsx","webpack://tinode-webapp/./src/widgets/more-button.jsx","webpack://tinode-webapp/./src/widgets/permissions-editor.jsx","webpack://tinode-webapp/./src/widgets/tag-manager.jsx","webpack://tinode-webapp/./src/views/info-view.jsx","webpack://tinode-webapp/./src/widgets/file-progress.jsx","webpack://tinode-webapp/./src/widgets/attachment.jsx","webpack://tinode-webapp/./src/widgets/uploading-image.jsx","webpack://tinode-webapp/./src/widgets/chat-message.jsx","webpack://tinode-webapp/./src/widgets/send-message.jsx","webpack://tinode-webapp/./src/widgets/doc-preview.jsx","webpack://tinode-webapp/./src/widgets/group-subs.jsx","webpack://tinode-webapp/./src/widgets/image-preview.jsx","webpack://tinode-webapp/./src/widgets/invitation.jsx","webpack://tinode-webapp/./src/widgets/load-spinner.jsx","webpack://tinode-webapp/./src/views/logo-view.jsx","webpack://tinode-webapp/./src/lib/navigation.js","webpack://tinode-webapp/./src/views/messages-view.jsx","webpack://tinode-webapp/./src/widgets/button-back.jsx","webpack://tinode-webapp/./src/widgets/menu-contacts.jsx","webpack://tinode-webapp/./src/widgets/menu-start.jsx","webpack://tinode-webapp/./src/widgets/side-navbar.jsx","webpack://tinode-webapp/./src/views/contacts-view.jsx","webpack://tinode-webapp/./src/lib/local-storage.js","webpack://tinode-webapp/./src/views/create-account-view.jsx","webpack://tinode-webapp/./src/views/edit-account-view.jsx","webpack://tinode-webapp/./src/views/acc-general-view.jsx","webpack://tinode-webapp/./src/views/acc-notifications-view.jsx","webpack://tinode-webapp/./src/views/acc-security-view.jsx","webpack://tinode-webapp/./src/views/acc-support-view.jsx","webpack://tinode-webapp/./src/views/login-view.jsx","webpack://tinode-webapp/./src/widgets/new-topic-by-id.jsx","webpack://tinode-webapp/./src/widgets/new-topic-group.jsx","webpack://tinode-webapp/./src/widgets/search-contacts.jsx","webpack://tinode-webapp/./src/views/new-topic-view.jsx","webpack://tinode-webapp/./src/views/password-reset-view.jsx","webpack://tinode-webapp/./src/widgets/host-selector.jsx","webpack://tinode-webapp/./src/views/settings-view.jsx","webpack://tinode-webapp/./src/views/validation-view.jsx","webpack://tinode-webapp/./src/views/sidepanel-view.jsx","webpack://tinode-webapp/./src/lib/host-name.js","webpack://tinode-webapp/./src/views/tinode-web.jsx","webpack://tinode-webapp/./src/index.js"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","React","ReactDOM","ReactIntl","firebase","messaging","Tinode","Alert","render","this","props","visible","className","title","content","onReject","onClick","reject","FormattedMessage","id","onConfirm","confirm","APP_NAME","KNOWN_HOSTS","hosted","local","DEFAULT_HOST","KEYPRESS_DELAY","DEFAULT_P2P_ACCESS_MODE","REM_SIZE","AVATAR_SIZE","MAX_INBAND_ATTACHMENT_SIZE","MAX_EXTERN_ATTACHMENT_SIZE","MAX_IMAGE_DIM","MAX_TITLE_LENGTH","messages","defineMessages","info","defaultMessage","description","clear_messages","clear_for_all","delete_for_all","send_retry","mute","unmute","topic_delete","topic_delete_warning","unblock","block","topic_block_warning","member_delete","archive","ContextMenu","constructor","super","formatMessage","intl","handlePageClick","bind","handleEscapeKey","handleClick","MenuItems","handler","params","errorHandler","onShowAlert","deleteMessages","delete","retryMessage","topicPermissionSetter","then","ctrl","onTopicRemoved","topicName","topic","tinode","getTopic","delTopic","catch","err","message","console","log","user","delSubscription","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","e","contains","target","preventDefault","stopPropagation","hide","keyCode","item","items","currentTarget","dataset","onAction","onError","all","hard","cancelSend","seq","delMessagesAll","delMessagesList","flushMessage","msg","createMessage","publishDraft","mode","result","updateMode","count","menu","map","push","data-id","vSize","length","position","left","bounds","right","clickAt","x","top","bottom","y","style","injectIntl","shortDateFormat","locale","window","navigator","userLanguage","language","now","Date","getFullYear","getMonth","getDate","toLocaleTimeString","hour12","hour","minute","toLocaleDateString","month","day","year","bytesToHumanSize","bytes","sizes","bucket","Math","min","floor","log2","pow","round","toFixed","LetterTile","avatar","isGroup","iconColor","abs","value","hash","i","charCodeAt","stringHash","trim","letter","charAt","alt","src","onerror","SUPPORTED_IMAGE_FORMATS","MIME_EXTENSIONS","makeImageUrl","photo","type","data","fitImageSize","width","height","maxWidth","maxHeight","forceSquare","scale","size","dstWidth","dstHeight","srcWidth","srcHeight","xoffset","yoffset","imageScaled","fileOrBlob","maxSize","onSuccess","img","Image","crossOrigin","onload","async","URL","revokeObjectURL","dim","canvas","createElement","ctx","getContext","imageSmoothingEnabled","drawImage","mime","indexOf","blob","Promise","resolve","toBlob","clearRect","fname","idx","ext","at","lastIndexOf","substring","fileNameForMime","name","createObjectURL","fileToBase64","file","reader","FileReader","split","readAsDataURL","blobToBase64","AvatarUpload","state","dataUrl","handleFileUpload","componentDidUpdate","prevProps","setState","files","unused","base64bits","du","onImageChanged","randId","random","substr","readOnly","href","uid","accept","onChange","htmlFor","CheckBox","handleChange","checked","icon_mapping","ContactBadges","badges","b","icon","color","updateFavicon","oldIcon","getElementById","head","getElementsByTagName","newIcon","rel","removeChild","appendChild","vcard","fn","imageDataUrl","card","dataStart","arrayEqual","Array","isArray","sort","l","sanitizeUrl","url","allowedSchemes","replace","test","schemes","join","RegExp","deliveryMarker","received","ReceivedMarker","timestamp","sending","failed","marker","UnreadBadge","Contact","handleContextClick","onSelected","index","showContextMenu","pageY","pageX","online","slice","icon_badges","acs","showMode","getMode","isMuted","isJoiner","subtitle","preview","Drafty","draftyFormatter","comment","showCheckmark","selected","showOnline","isChannel","unread","values","el","attr","ContactAction","action","badge_you","badge_owner","ContactList","topicSelected","contactNodes","contactsCount","contacts","c","filterFunc","filter","private","toLowerCase","public","myUserId","isOwner","deliveryStatus","latestMessage","msgStatus","showUnread","connected","onTopicSelected","noScroll","dangerouslySetInnerHTML","__html","emptyListMessage","MenuCancel","onCancel","ErrorPanel","show","level","onClearError","warn","text","whiteSpace","actionText","Chip","handleCancel","invalid","noAvatar","required","ChipInput","deriveStateFromProps","input","focused","handleTextInput","removeChipAt","handleChipCancel","handleFocusGained","handleFocusLost","handleKeyDown","placeholder","chips","prompt","sortedChips","sortChips","staticMembers","chipIndex","indexChips","prevState","keep","normal","includes","concat","removed","onChipRemoved","onFocusLost","onEnter","undefined","avatarDisabled","onFocus","onBlur","onKeyDown","autoFocus","no_contacts","contacts_not_found_short","GroupManager","members","indexMembers","keepInitialMembers","requiredMember","contactFilter","noContactsMessage","selectedContacts","handleContactSelected","handleMemberRemoved","handleContactFilter","handleSubmit","m","delta","present","keepInitial","stat","sel","userId","status","splice","val","query","instance","added","keys","k","onSubmit","doContactFiltering","VisiblePassword","handleVisibility","handeTextChange","handleEditingFinished","onFinished","setTimeout","activeElement","tabIndex","autoComplete","InPlaceEdit","active","initialValue","handleStartEditing","handlePasswordFinished","newValue","focus","event","checkValidity","fieldType","spanText","spanClass","MoreButton","open","handleToggle","onToggle","PermissionsEditor","names","joiner","writer","preser","approver","sharer","deleter","owner","skip","compare","userTitle","userAvatar","modeTitle","compareTitle","TagManager","tags","tagInput","activated","handleTagInput","handleAddTag","handleRemoveTag","nextProps","last","tag","maxTagCount","getServerLimit","onTagsChanged","minTagLength","maxTagLength","add_tags_prompt","defautMessage","requested","granted","edit_permissions","other_user","clear_messages_warning","delete_messages","delete_messages_warning","leave_chat","leave_chat_warning","block_contact","block_contact_warning","report_chat","report_chat_warning","InfoView","admin","muted","address","groupTopic","channel","fullName","selectedContact","access","modeGiven","modeWant","modeGiven2","modeWant2","auth","anon","contactList","showMemberPanel","showPermissionEditorFor","moreInfoExpanded","previousMetaDesc","previousSubsUpdated","previousTagsUpdated","resetSubs","resetDesc","onMetaDesc","onSubsUpdated","onTagsUpdated","handleFullNameUpdate","handlePrivateUpdate","handleImageChanged","handleMuted","handlePermissionsChanged","handleLaunchPermissionsEditor","handleHidePermissionsEditor","handleShowAddMembers","handleHideAddMembers","handleMemberUpdateRequest","handleDeleteMessages","handleLeave","handleBlock","handleReport","handleMemberSelected","handleMoreInfo","handleTagsUpdated","handleContextMenu","getType","newState","user2","subscriber","getGiven","getWant","subscribers","sub","defacs","getDefaultAccess","getAccessMode","isAdmin","isSharer","isDeleter","isGroupType","isChannelType","getMeta","startMetaQuery","withTags","build","desc","subs","onTopicDescUpdate","ignored","onChangePermissions","perm","userPermissionsEdited","which","toEdit","toCompare","toSkip","titleEdit","titleCompare","userPermissionsTitle","userPermissionsAvatar","editedPermissions","immutablePermissions","editedPermissionsTitle","immutablePermissionsTitle","editedPermissionsSkipped","onInitFind","onMemberUpdateRequest","onDeleteMessages","onLeaveTopic","onBlockTopic","onReportTopic","onTopicTagsUpdate","menuItems","displayMobile","errorLevel","errorText","searchableContacts","private_placeholder","more","no_members","FileProgress","progress","Attachment","downloader","downloadFile","filename","mimetype","getLargeFileHelper","download","loaded","uploading","onCancelUpload","cancel","helperFunc","isUrlRelative","downloadUrl","downloadWidget","UploadingImage","ChatMessage","uploader","onProgress","handleProgress","handleImagePreview","handleFormButtonClick","handleCancelUpload","onImagePreview","resp","act","ref","onFormResponse","MESSAGE_STATUS_FAILED","ratio","sideClass","deleted","sequence","response","bubbleClass","fullDisplay","userFrom","attachments","mimeType","att","userName","notFound","viewportWidth","authorizeURL","sanitizeImageUrl","inner","child","SendMessage","keypressTimestamp","getTime","handlePasteEvent","handleAttachImage","handleAttachFile","handleSend","handleKeyPress","handleMessageTyping","messageEditArea","disabled","onImageSuccess","onAttachmentSuccess","clipboardData","originalEvent","kind","getAsFile","imageFileScaledToBase64","imageFileToBase64","filePasted","bits","onAttachImage","onAttachFile","acceptBlank","noInput","onSendMessage","shiftKey","onKeyPress","messaging_disabled","messagePrompt","type_new_message","attachImage","click","attachFile","display","DocPreview","handleSendDoc","caption","onClose","mimeToIcon","default","image","video","iconFromMime","GroupSubs","usersOnline","totalCount","countToShow","some","overflow","ImagePreview","handleSendImage","assignWidth","node","getBoundingClientRect","maxlength","max","Invitation","handleButtonAction","evt","LoadSpinner","LogoView","version","serverVersion","serverAddress","HashNavigation","parts","path","forEach","part","decodeURIComponent","location","args","parsed","parseUrlHash","composeUrlHash","sidepanel","isUnconfirmed","ex","getExcessive","isPeerRestricted","ms","getMissing","MessagesView","getDerivedStateFromProps","leave","sendImageAttachment","sendFileAttachment","sendKeyPress","handleScrollReference","handleScrollEvent","handleDescChange","handleSubsUpdated","handleNewMessage","handleAllMessagesReceived","handleInfoReceipt","handleImagePostview","handleClosePreview","handleFormResponse","handleShowContextMenuMessage","handleNewChatAcceptance","handleEnablePeer","postReadNotification","clearNotificationQueue","readNotificationQueue","readNotificationTimer","messagesScroller","scrollTop","scrollHeight","scrollPosition","viewportHeight","onData","onAllMessagesReceived","onInfo","onPres","applicationVisible","isSubscribed","ready","newTopic","newTopicParams","_topicName","getQuery","withLaterDesc","withLaterSub","isReader","withLaterData","withLaterDel","fetchingMessages","setQuery","subscribe","code","onNewTopicCreated","queuedMessages","pub","_sending","publishMessage","setUrlTopic","blankState","not_found","nextState","docPreview","imagePreview","imagePostview","typingIndicator","msgs","assign","onlineSubs","peer","p2pPeerDesc","peerMessagingDisabled","isWriter","readingBlocked","unconformed","unconfirmed","oldTopicName","oldTopic","finally","msgHasMoreMessages","getMessagesPage","setInterval","clearInterval","n","shift","sendAt","noteRead","setMilliseconds","getMilliseconds","isNewMessage","from","what","clearTimeout","keyPressTimer","forceUpdate","sendMessage","attachJSON","parse","searchParams","set","search","messageSpecificMenuItems","onNewChat","noteKeyPress","maxInbandAttachmentSize","cannot_initiate_upload","uploadCompletionPromise","upload","urlPromise","maxExternAttachmentSize","limit","tinyBlob","blobMime","tinyBits64","insertImage","_tempPreview","appendLineBreak","append","init","bits64","found","find","_cancelled","component","hideSelf","component2","messageNodes","previousFrom","chatBoxClass","nextFrom","thisFrom","isReply","userDesc","hi","ts","_uploader","lastSeen","cont","getMeTopic","getContact","online_now","seen","last_seen","when","onHideMessagesView","ButtonBack","onBack","MenuContacts","onNewTopic","onSettings","MenuStart","onSignUp","SideNavbar","archived_contacts_title","ContactsView","handleAction","unreadThreads","archivedCount","chatList","blocked","arch","touched","action_ignored","onShowArchive","LocalStorageUtil","localStorage","setItem","JSON","stringify","getItem","oldVal","getObject","setObject","removeItem","CreateAccountView","login","password","email","errorCleared","saveToken","handleLoginChange","handlePasswordChange","handleEmailChange","handleFnChange","handleToggleSaveToken","onCreateAccount","submitClasses","login_prompt","password_prompt","full_name_prompt","email_prompt","stay_logged_in","EditAccountView","me","onBasicNavigate","AccGeneralView","credentials","getCredentials","addCredActive","addCredInvalid","newCred","previousOnTags","tnNewTags","tnCredsUpdated","handleCredChange","handleCredKeyDown","handleCredEntered","onCredsUpdated","creds","onUpdateAccount","method","asPhone","asEmail","onCredAdd","onUpdateTags","cred","meth","done","onCredConfirm","onCredDelete","full_name_placeholder","title_tag_manager","handleCheckboxClick","onToggleMessageSounds","onTogglePushNotifications","onToggleIncognitoMode","messageSounds","desktopAlertsEnabled","desktopAlerts","incognitoMode","delete_account","delete_account_warning","AccSecurityView","blockedCount","handlePasswordUpdate","handleDeleteAccount","pwd","onDeleteAccount","password_unchanged","onLogout","onShowBlocked","AccSupportView","LoginView","hostName","onLogin","autoCorrect","autoCapitalize","invalid_id","NewTopicById","groupId","NewTopicGroup","handlePrivateChange","handleTagsChanged","handleChannelToggle","SearchContacts","edited","handleSearchChange","handleSearch","handleClear","onSearchContacts","search_placeholder","search_for_contacts","search_no_results","NewTopicView","tabSelected","searchQuery","handleTabClick","handleSearchContacts","handleNewGroupSubmit","handleGroupByID","addUrlParam","removeUrlParam","onCreateTopic","priv","no_contacts_placeholder","searchResults","PasswordResetView","token","scheme","onReset","onRequest","reset","HostSelector","changed","handleHostNameChange","onServerAddressChange","hostOptions","list","SettingsView","transport","handleTransportSelected","handleServerAddressChange","onUpdate","def","ws","lp","transportOptions","phone","ValidationView","credCode","credMethod","numbers_only","SidepanelView","handleLoginRequested","handleNewTopic","onLoginRequest","view","errorAction","errorActionText","loadSpinnerVisible","loginDisabled","onGlobalSettings","onUpdateAccountTags","onValidateCredentials","onPasswordResetRequest","onResetPassword","detectServerAddress","host","protocol","hostname","port","isSecureConnection","POP_SOUND","Audio","reconnect_countdown","reconnect_now","push_init_failed","invalid_security_token","no_connection","code_doesnot_match","TinodeWeb","getBlankState","handleResize","handleHashRoute","handleOnline","checkForAppUpdate","handleVisibilityEvent","handleError","handleLoginRequest","handleConnected","handleAutoreconnectIteration","doLogin","handleCredentialsRequest","handleLoginSuccessful","handleDisconnect","tnMeMetaDesc","tnMeContactUpdate","tnMeSubsUpdated","resetContactList","tnData","tnInitFind","tnFndSubsUpdated","handleTopicSelected","handleHideMessagesView","handleSendMessage","handleNewChatInvitation","handleNewAccount","handleNewAccountRequest","handleUpdateAccountRequest","handleUpdateAccountTagsRequest","handleToggleIncognitoMode","handleSettings","handleGlobalSettings","handleShowArchive","handleShowBlocked","handleToggleMessageSounds","handleCredAdd","handleCredDelete","handleCredConfirm","initDesktopAlerts","togglePushToken","requestPushToken","handleSidepanelCancel","handleStartTopicRequest","handleNewTopicCreated","handleTopicUpdateRequest","handleChangePermissions","handleLogout","handleDeleteMessagesRequest","handleLeaveUnsubRequest","handleBlockTopicRequest","handleReportTopic","handleShowContextMenu","defaultTopicContextMenu","handleHideContextMenu","handleShowAlert","handleShowInfoView","handleHideInfoView","handleValidateCredentialsRequest","handlePasswordResetRequest","handleResetPassword","handleContextMenuAction","settings","autoLogin","messageSoundsOff","FIREBASE_INIT","firebaseToken","hidden","sidePanelSelected","sidePanelTitle","sidePanelAvatar","liveConnection","onLine","topicSelectedOnline","topicSelectedAcs","innerWidth","showInfoPanel","mobilePanel","contextMenuVisible","contextMenuBounds","contextMenuClickAt","contextMenuParams","contextMenuItems","alertVisible","alertParams","documentElement","clientWidth","clientHeight","keepLoggedIn","tnSetup","onConnect","onDisconnect","onAutoreconnectIteration","fbPush","usePublicVapidKey","messagingVapidKey","serviceWorker","register","reg","useServiceWorker","postMessage","setDeviceToken","parsedNav","expires","setAuthToken","connect","tab","readTimer","readTimerCallback","persistentCache","onSetupCompleted","appName","apiKey","secure","persist","setHumanLanguage","enableLogging","mobile","onupdatefound","installingWorker","installing","onstatechange","controller","newTopicTabSelected","isConnected","getServerInfo","ver","sec","prom","reconnectCountdown","timeLeft","seconds","secondsToTime","reconnect","isAuthenticated","promise","getAuthToken","loginBasic","loginToken","onContactUpdate","getCurrentUserID","withDesc","withCred","disconnect","setUrlSidePanel","isPresencer","archived","isArchived","play","foundContacts","merged","updated","prepareSearchableContacts","receivedTimer","noteRecv","fnd","getFndTopic","withSub","s","setMeta","isTopicOnline","getTopicAccessMode","isP2PType","am","updateWant","login_","password_","public_","cred_","tags_","createAccountBasic","updateAccountBasic","getCurrentLogin","on","clearStorage","onTokenRefresh","onMessage","payload","enabled","requestPermission","deleteToken","getToken","refreshedToken","delCredential","basicNavigator","isTopicCached","newGroupTopicName","oldName","newName","permissions","updateGiven","delCurrentUser","publish","self_blocked","subscribed","confirmText","rejectText","invite","requestResetAuthSecret","newPassword","str","btoa","atob","base64ReEncode","onAddMember","handleManageGroupMembers","hl","languages","baseLanguage","allMessages","IntlProvider","textComponent"],"mappings":"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","file":"index.prod.js","sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var __WEBPACK_NAMESPACE_OBJECT__ = React;","var __WEBPACK_NAMESPACE_OBJECT__ = ReactDOM;","var __WEBPACK_NAMESPACE_OBJECT__ = ReactIntl;","var __WEBPACK_NAMESPACE_OBJECT__ = firebase;","var __WEBPACK_NAMESPACE_OBJECT__ = Tinode;","var __WEBPACK_NAMESPACE_OBJECT__ = firebase.messaging;","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Alert extends React.PureComponent {\n  render() {\n    return this.props.visible ?\n      <div className=\"alert-container\">\n        <div className=\"alert\">\n          <div className=\"title\">{this.props.title}</div>\n          <div className=\"content\">{this.props.content}</div>\n          <div className=\"dialog-buttons\">\n            {this.props.onReject ?\n              <button className=\"outline\" onClick={this.props.onReject}>\n                {this.props.reject || <FormattedMessage id=\"button_cancel\" />}\n              </button>\n              :\n              null\n            }\n            <button className=\"blue\" onClick={this.props.onConfirm}>\n              {this.props.confirm || <FormattedMessage id=\"button_ok\" />}\n            </button>\n          </div>\n        </div>\n      </div>\n    :\n    null;\n  }\n};\n","// This is a generated file. Don't edit.\n\nexport const PACKAGE_VERSION = \"0.17.0\";\n","import { PACKAGE_VERSION } from './version.js';\n\n// Name of this application, used in the User-Agent.\nexport const APP_NAME = 'TinodeWeb/' + (PACKAGE_VERSION || '0.16');\n\n// API key. Use https://github.com/tinode/chat/tree/master/keygen to generate your own\nexport const API_KEY = 'AQEAAAABAAD_rAp4DJh05a1HAwFT3A6K';\n\n// The array of possible hosts to connect to.\nexport const KNOWN_HOSTS = {hosted: 'web.tinode.co', local: 'localhost:6060'};\n\n// Default host name and port to connect to.\nexport const DEFAULT_HOST = KNOWN_HOSTS.hosted;\n\n// Enable console logging.\nexport const LOGGING_ENABLED = true;\n\n// Minimum time between two keypress notifications, milliseconds.\nexport const KEYPRESS_DELAY = 3*1000;\n// Delay before sending a {note} for reciving a message, milliseconds.\nexport const RECEIVED_DELAY = 500;\n// Delay before sending a read notification, milliseconds.\nexport const READ_DELAY = 1000;\n\n// The shortest allowed tag length. Matches the value on the server.\nexport const MIN_TAG_LENGTH = 2;\n// The greatest allowed tag length. Matches the value on the server.\nexport const MAX_TAG_LENGTH = 96;\n// The maximum number of tags allowed. Matches the value on the server.\nexport const MAX_TAG_COUNT = 16;\n\n// Access mode for P2P subscriptions initiated by the current user.\nexport const DEFAULT_P2P_ACCESS_MODE = 'JRWPS';\n// Access mode for new group topics created by the current user.\nexport const NEW_GRP_ACCESS_MODE = 'JRWPSAO';\n// Access mode for a channel.\nexport const CHANNEL_ACCESS_MODE = 'JR';\n\n// Access mode for no access.\nexport const NO_ACCESS_MODE = 'N';\n\n// Mediaquery breakpoint between desktop and mobile, in px. Should match the value\n// in @media (max-size: 640px) in base.css\nexport const MEDIA_BREAKPOINT = 640;\n// Size of css 'rem' unit in pixels. Default 1rem = 10pt = 13px.\nexport const REM_SIZE = 13;\n\n// Size of the avatar image: When an avatar image is uploaded, it's resized to\n// a square of this size.\nexport const AVATAR_SIZE = 128;\n\n// Size of the broken_image shown in MessagesView\nexport const BROKEN_IMAGE_SIZE = 32;\n\n// Number of chat messages to fetch in one call.\nexport const MESSAGES_PAGE = 24;\n\n// Default maximum in-band (included directly into the message) attachment size which fits into\n// a message of 256K in size. The actual binary size of the attachment should be smaller due to\n// base64 encoding expansion and some overhead, for instance 1024 bytes.\n// Increase this limit to a greater value in production, if desired. Also increase\n// max_message_size in the server config.\nexport const MAX_INBAND_ATTACHMENT_SIZE = 262144;\n\n// Absolute maximum attachment size to be used with the server = 8MB. Increase to\n// something like 100MB in production.\nexport const MAX_EXTERN_ATTACHMENT_SIZE = 1 << 23;\n\n// Maximum allowed linear dimension of an inline image in pixels. Larer images will be shrunk\n// to make the larger dimension fit under this size. You may want to adjust it to 1600 or\n// 2400 for production.\nexport const MAX_IMAGE_DIM = 1024;\n\n// Linear dimensions of image preview: shrink image under this size for previews.\nexport const IMAGE_PREVIEW_DIM = 64;\n\n// Maximum number of online users to be shown in a topic title bar. Others will be\n// hidden under \"+X more\"\nexport const MAX_ONLINE_IN_TOPIC = 4;\n\n// Maximum length of user name, topic title, and private comment.\nexport const MAX_TITLE_LENGTH = 60;\n\n// Length of message previews in chat list, in characters.\nexport const MESSAGE_PREVIEW_LENGTH = 80;\n\n// Link for \"Contact Us\".\nexport const LINK_CONTACT_US = 'email:info@tinode.co';\n\n// Link to Privacy Policy.\nexport const LINK_PRIVACY_POLICY = 'https://tinode.co/privacy.html';\n\n// Link to Terms of Service.\nexport const LINK_TERMS_OF_SERVICE = 'https://tinode.co/terms.html';\n","// Context Menu: popup/dropdown menu.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { injectIntl, defineMessages } from 'react-intl';\n\nimport { REM_SIZE } from '../config.js';\nimport HashNavigation from '../lib/navigation.js';\n\nconst messages = defineMessages({\n  info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  },\n  clear_messages: {\n    id: 'menu_item_clear_messages',\n    defaultMessage: 'Clear messages',\n    description: 'Delete all messages'\n  },\n  clear_for_all: {\n    id: 'menu_item_clear_messages_for_all',\n    defaultMessage: 'Clear for All',\n    description: 'Delete all message(s) for all members'\n  },\n  'delete': {\n    id: 'menu_item_delete',\n    defaultMessage: 'Delete',\n    description: 'Delete selected messages'\n  },\n  delete_for_all: {\n    id: 'menu_item_delete_for_all',\n    defaultMessage: 'Delete for All',\n    description: 'Delete selected message(s) for all members'\n  },\n  send_retry: {\n    id: 'menu_item_send_retry',\n    defaultMessage: 'Retry',\n    description: 'Retry sending message'\n  },\n  mute: {\n    id: 'menu_item_mute',\n    defaultMessage: 'Mute',\n    description: 'Turn off notifications'\n  },\n  unmute: {\n    id: 'menu_item_unmute',\n    defaultMessage: 'Unmute',\n    description: 'Turn notifications on'\n  },\n  topic_delete: {\n    id: 'menu_item_delete_topic',\n    defaultMessage: 'Delete',\n    description: 'Delete entire topic'\n  },\n  topic_delete_warning: {\n    id: 'topic_delete_warning',\n    defaultMessage: 'Are you sure you want to delete this conversation?',\n    description: 'Alert warning when deleting entire topic'\n  },\n  unblock: {\n    id: 'menu_item_unblock',\n    defaultMessage: 'Unblock',\n    description: 'Unblock topic or user'\n  },\n  // Generic string suitable for either topic or user.\n  block: {\n    id: 'menu_item_block',\n    defaultMessage: 'Block',\n    description: 'Block topic or user'\n  },\n  topic_block_warning: {\n    id: 'topic_block_warning',\n    defaultMessage: 'Are you sure you want to block this conversation?',\n    description: 'Alert warning when blocking a topic.'\n  },\n  member_delete: {\n    id: 'menu_item_member_delete',\n    defaultMessage: 'Remove',\n    description: 'Remove user from topic'\n  },\n  archive: {\n    id: 'menu_item_archive_topic',\n    defaultMessage: 'Archive',\n    description: 'Move topic from the list of active chats to archive'\n  }\n});\n\nclass ContextMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const {formatMessage} = props.intl;\n\n    this.handlePageClick = this.handlePageClick.bind(this);\n    this.handleEscapeKey = this.handleEscapeKey.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n\n    // Preconfigured menu items.\n    this.MenuItems = {\n      'topic_info': {\n        id: 'topic_info',\n        title: formatMessage(messages.info),\n        handler: null\n      },\n      'messages_clear': {\n        id: 'messages_clear',\n        title: formatMessage(messages.clear_messages),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage({id: 'menu_item_clear_messages'}), // title\n            formatMessage({id: 'clear_messages_warning'}), // content\n            (() => { this.deleteMessages(true, false, params, errorHandler); }), // onConfirm\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'messages_clear_hard': {\n        id: 'messages_clear_hard',\n        title: formatMessage(messages.clear_for_all),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage({id: 'menu_item_clear_messages_for_all'}), // title\n            formatMessage({id: 'delete_messages_warning'}), // content\n            (() => { return this.deleteMessages(true, true, params, errorHandler); }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'message_delete': {\n        id: 'message_delete',\n        title: formatMessage(messages.delete),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, false, params, errorHandler);\n        }\n      },\n      'message_delete_hard': {\n        id: 'message_delete_hard',\n        title: formatMessage(messages.delete_for_all),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, true, params, errorHandler);\n        }\n      },\n      'menu_item_send_retry': {\n        id: 'menu_item_send_retry',\n        title: formatMessage(messages.send_retry),\n        handler: (params, errorHandler) => {\n          return this.retryMessage(params, errorHandler);\n        }\n      },\n      'topic_unmute': {\n        id: 'topic_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'topic_mute': {\n        id: 'topic_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'topic_unblock': {\n        id: 'topic_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n      'topic_block': {\n        id: 'topic_block',\n        title: formatMessage(messages.block),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage({id: 'menu_item_block'}), // title\n            formatMessage(messages.topic_block_warning), // content\n            (() => {\n              return this.topicPermissionSetter('-JP', params, errorHandler).then((ctrl) => {\n                this.props.onTopicRemoved(params.topicName);\n                return ctrl;\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_delete': {\n        id: 'topic_delete',\n        title: formatMessage(messages.topic_delete),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage({id: 'menu_item_delete_topic'}), // title\n            formatMessage(messages.topic_delete_warning), // content\n            (() => {\n              const topic = this.props.tinode.getTopic(params.topicName);\n              if (!topic) {\n                console.log(\"Topic not found: \", params.topicName);\n                return;\n              }\n              return topic.delTopic(true).catch((err) => {\n                if (errorHandler) {\n                  errorHandler(err.message, 'err');\n                }\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_archive': {\n        id: 'topic_archive',\n        title: formatMessage(messages.archive),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic) {\n            console.log(\"Topic not found: \", params.topicName);\n            return;\n          }\n          return topic.archive(true).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      // menu_item_edit_permissions is defined elsewhere.\n      'permissions': {\n        id: 'permissions',\n        title: formatMessage({id: 'menu_item_edit_permissions'}),\n        handler: null\n      },\n      'member_delete': {\n        id: 'member_delete',\n        title: formatMessage(messages.member_delete),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic || !params.user) {\n            console.log(\"Topic or user not found: '\" + params.topicName + \"', '\" + params.user + \"'\");\n            return;\n          }\n          return topic.delSubscription(params.user).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      'member_mute': {\n        id: 'member_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'member_unmute': {\n        id: 'member_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'member_block': {\n        id: 'member_block',\n        title: formatMessage(messages.block),\n        handler: this.topicPermissionSetter.bind(this, '-JP')\n      },\n      'member_unblock': {\n        id: 'member_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handlePageClick, false);\n    document.addEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handlePageClick, false);\n    document.removeEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  handlePageClick(e) {\n    if (ReactDOM.findDOMNode(this).contains(e.target)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n  }\n\n  handleEscapeKey(e) {\n    if (e.keyCode === 27) {\n      this.props.hide();\n    }\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n    let item = this.props.items[e.currentTarget.dataset.id];\n    if (typeof item == 'string') {\n      item = this.MenuItems[item];\n    }\n\n    if (!item) {\n      console.log(\"Invalid menu item ID\", e.currentTarget.dataset.id);\n    } else {\n      this.props.onAction(\n        item.id,\n        item.handler(this.props.params, this.props.onError),\n        this.props.params);\n    }\n  }\n\n  // Menu Actions\n\n  deleteMessages(all, hard, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found: \", params.topicName);\n      return;\n    }\n\n    // We don't know if the message is still pending (e.g. attachment is being uploaded),\n    // so try cancelling first. No harm if we can't cancel.\n    // The message can be cancelled if transmission to the server has not\n    // started yet or if the message send has failed.\n    if (!all && topic.cancelSend(params.seq)) {\n      return;\n    }\n    // Can't cancel. Delete instead.\n    const promise = all ?\n      topic.delMessagesAll(hard) :\n      topic.delMessagesList([params.seq], hard);\n\n    return promise.catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Retries sending failed message.\n  retryMessage(params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    // Remove the existing message entry.\n    if (!topic || !topic.flushMessage(params.seq)) {\n      return;\n    }\n    const msg = topic.createMessage(params.content, false);\n    return topic.publishDraft(msg).catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Function is used by context menu to set permissions.\n  topicPermissionSetter(mode, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found\", params.topicName);\n      return;\n    }\n\n    let result = topic.updateMode(params.user, mode);\n    if (errorHandler) {\n      result = result.catch((err) => {\n        errorHandler(err.message, 'err');\n      });\n    }\n    return result;\n  }\n\n  render() {\n    let count = 0;\n    let menu = [];\n    this.props.items.map((item) => {\n      if (typeof item == 'string') {\n        item = this.MenuItems[item];\n      }\n      if (item && item.title) {\n        menu.push(\n          item.title == '-' ?\n            <li className=\"separator\" key={count} />\n            :\n            <li onClick={this.handleClick} data-id={count} key={count}>{item.title}</li>\n        );\n      }\n      count++;\n    });\n\n    // Ensure that menu is inside the app-container.\n    const hSize = 12 * REM_SIZE;\n    const vSize = REM_SIZE * (0.7 + menu.length * 2.5);\n    const left = (this.props.bounds.right - this.props.clickAt.x < hSize) ?\n        (this.props.clickAt.x - this.props.bounds.left - hSize) :\n        (this.props.clickAt.x - this.props.bounds.left);\n    const top = (this.props.bounds.bottom - this.props.clickAt.y < vSize) ?\n        (this.props.clickAt.y - this.props.bounds.top - vSize) :\n        (this.props.clickAt.y - this.props.bounds.top);\n\n    const position = {\n      left: left + 'px',\n      top: top + 'px'\n    };\n\n    return (\n      <ul className=\"menu\" style={position}>\n        {menu}\n      </ul>\n    );\n  }\n}\n\nexport default injectIntl(ContextMenu);\n","// Short representation of time in the past.\nexport function shortDateFormat(then, locale) {\n  locale = locale || window.navigator.userLanguage || window.navigator.language;\n  const now = new Date();\n  if (then.getFullYear() == now.getFullYear()) {\n    // Same year.\n    if (then.getMonth() == now.getMonth() && then.getDate() == now.getDate()) {\n      // Same month and day, show time only.\n      return then.toLocaleTimeString(locale, {hour12: false, hour: '2-digit', minute: '2-digit'});\n    }\n    // Different month and/or day, show month day, time.\n    return then.toLocaleDateString(locale,\n      {hour12: false, month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit'});\n  }\n  // Different year: just show the date.\n  return then.toLocaleDateString(locale, {year: 'numeric', month: 'short', day: 'numeric'});\n}\n\n// Convert seconds to minutes:seconds, i.e. 156 sec -> 2:36.\nexport function secondsToTime(seconds) {\n  const min = Math.floor(seconds / 60);\n  let sec = seconds % 60;\n  sec = sec < 10 ? `0${sec}` : sec;\n  return `${min}:${sec}`;\n}\n\n// Convert a number of bytes to human-readable format.\nexport function bytesToHumanSize(bytes) {\n  if (!bytes || bytes == 0) {\n    return '0 Bytes';\n  }\n\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n  const bucket = Math.min(Math.floor(Math.log2(bytes) / 10) | 0, sizes.length-1);\n  const count = bytes / Math.pow(1024, bucket);\n  const round = bucket > 0 ? (count < 3 ? 2 : (count < 30 ? 1 : 0)) : 0;\n  return count.toFixed(round) + ' ' + sizes[bucket];\n}\n\n// Get 32 bit integer hash value for a string. Ideally it should produce the same value\n// as Java's String#hash().\nexport function stringHash(value) {\n  let hash = 0;\n  value = '' + value;\n  for (let i = 0; i < value.length; i++) {\n    hash = ((hash << 5) - hash) + value.charCodeAt(i);\n    hash = hash & hash; // Convert to 32bit integer\n  }\n  return hash;\n}\n","import React from 'react';\n\nimport Tinode from 'tinode-sdk';\n\nimport { stringHash } from '../lib/strformat.js';\n\nexport default class LetterTile extends React.PureComponent {\n  render() {\n    let avatar;\n    if (this.props.avatar === true) {\n      const isGroup = (Tinode.topicType(this.props.topic) == 'grp');\n      const iconColor = (isGroup ? 'light-color' : 'dark-color')\n        + (Math.abs(stringHash(this.props.topic)) % 16);\n      if (this.props.topic && this.props.title && this.props.title.trim()) {\n        const letter = this.props.title.trim().charAt(0);\n        const className = 'lettertile ' + iconColor;\n        avatar = (<div className={className}><div>{letter}</div></div>)\n      } else {\n        const className = 'material-icons ' + iconColor;\n        avatar = isGroup ?\n          <i className={className}>group</i> : <i className={className}>person</i>;\n      }\n    } else if (this.props.avatar) {\n      // If avatar image is invalid, show a placeholder.\n      avatar = <img className=\"avatar\" alt=\"avatar\" src={this.props.avatar}\n        onError={(e)=>{e.target.onerror = null; e.target.src=\"/img/broken_image.png\"}} />;\n    } else {\n      avatar = null;\n    }\n    return avatar;\n  }\n}\n","// File and image helper functions.\nimport { MAX_INBAND_ATTACHMENT_SIZE, MAX_IMAGE_DIM } from '../config.js';\nimport { bytesToHumanSize } from './strformat.js'\n\n// Supported image MIME types and corresponding file extensions.\nexport const SUPPORTED_IMAGE_FORMATS = ['image/jpeg', 'image/gif', 'image/png', 'image/svg', 'image/svg+xml'];\nexport const MIME_EXTENSIONS         = ['jpg',        'gif',       'png',       'svg',       'svg'];\n\n// Make a data URL from public.photo\nexport function makeImageUrl(photo) {\n  return (photo && photo.type && photo.data) ?\n    'data:image/' + photo.type + ';base64,' + photo.data : null;\n}\n\n// Calculate linear dimensions for scaling image down to fit under a certain size.\n// Returns an object which contains destination sizes, source sizes, and offsets\n// into source (when making square images).\nexport function fitImageSize(width, height, maxWidth, maxHeight, forceSquare) {\n  // Sanitize input\n  width = width | 0;\n  height = height | 0;\n  maxWidth = maxWidth | 0;\n  maxHeight = maxHeight | 0;\n\n  if (width <= 0 || height <= 0 || maxWidth <= 0 || maxHeight <= 0) {\n    return null;\n  }\n\n  if (forceSquare) {\n    maxWidth = maxHeight = Math.min(maxWidth, maxHeight);\n  }\n\n  let scale = Math.min(\n    Math.min(width, maxWidth) / width,\n    Math.min(height, maxHeight) / height\n  );\n\n  let size = {\n    dstWidth: (width * scale) | 0,\n    dstHeight: (height * scale) | 0,\n  };\n\n  if (forceSquare) {\n    // Also calculate parameters for making the image square.\n    size.dstWidth = size.dstHeight = Math.min(size.dstWidth, size.dstHeight);\n    size.srcWidth = size.srcHeight = Math.min(width, height);\n    size.xoffset = ((width - size.srcWidth) / 2) | 0;\n    size.yoffset = ((height - size.srcWidth) / 2) | 0;\n  } else {\n    size.xoffset = size.yoffset = 0;\n    size.srcWidth = width;\n    size.srcHeight = height;\n  }\n  return size;\n}\n\n// Ensure file's extension matches mime content type\nexport function fileNameForMime(fname, mime) {\n  const idx = SUPPORTED_IMAGE_FORMATS.indexOf(mime);\n  if (idx < 0 || !fname) {\n    // Unknown mime or empty name.\n    return fname;\n  }\n  const ext = MIME_EXTENSIONS[idx];\n\n  const at = fname.lastIndexOf('.');\n  if (at >= 0) {\n    fname = fname.substring(0, at);\n  }\n  return fname + '.' + ext;\n}\n\n// Scale uploaded image to fit under certain dimensions and byte size, optionally constraining to a square.\n// On success calls onSuccess callback with the scaled image as Blob.\nexport function imageScaled(fileOrBlob, maxWidth, maxHeight, maxSize, forceSquare, onSuccess, onError) {\n  const img = new Image();\n  img.crossOrigin = 'Anonymous';\n  img.onerror = function(err) {\n    onError(\"Image format unrecognized\");\n  }\n  img.onload = async function() {\n    // Once the image is loaded, the URL is no longer needed.\n    URL.revokeObjectURL(img.src);\n\n    // Calculate the desired image dimensions.\n    const dim = fitImageSize(this.width, this.height, maxWidth, maxHeight, forceSquare);\n    if (!dim) {\n      onError(\"Invalid image\");\n      return;\n    }\n    let canvas = document.createElement('canvas');\n    canvas.width = dim.dstWidth;\n    canvas.height = dim.dstHeight;\n    let ctx = canvas.getContext('2d');\n    ctx.imageSmoothingEnabled = true;\n    ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n      0, 0, dim.dstWidth, dim.dstHeight);\n\n    const mime = SUPPORTED_IMAGE_FORMATS.indexOf(fileOrBlob.type) < 0 ? 'image/jpeg' : fileOrBlob.type;\n    // Generate blob to check size of the image.\n    let blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    if (!blob) {\n      onError(\"Unsupported image format\");\n      return;\n    }\n\n    // Ensure the image is not too large. Shrink the image keeping the aspect ratio.\n    // Do nothing if maxsize is <= 0.\n    while (maxSize > 0 && blob.length > maxSize) {\n      dim.dstWidth = (dim.dstWidth * 0.70710678118) | 0;\n      dim.dstHeight = (dim.dstHeight * 0.70710678118) | 0;\n      canvas.width = dim.dstWidth;\n      canvas.height = dim.dstHeight;\n      ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n        0, 0, dim.dstWidth, dim.dstHeight);\n      blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    }\n\n    canvas = null;\n    onSuccess(blob, mime, dim.dstWidth, dim.dstHeight, fileNameForMime(fileOrBlob.name, mime));\n  };\n  img.src = URL.createObjectURL(fileOrBlob);\n}\n\n// Convert File to base64 string.\nexport function fileToBase64(file, onSuccess) {\n  const reader = new FileReader();\n  reader.addEventListener('load', function() {\n    onSuccess(file.type, reader.result.split(',')[1], file.name);\n  });\n  reader.readAsDataURL(file);\n}\n\n// Convert Blob to base64 string.\nexport function blobToBase64(blob, onSuccess) {\n  const reader = new FileReader();\n  reader.addEventListener('load', function() {\n    onSuccess(blob.type, reader.result.split(',')[1]);\n  });\n  reader.readAsDataURL(blob);\n}\n\n// File pasted from the clipboard. It's either an inline image or a file attachment.\n// FIXME: handle large files out of band.\nexport function filePasted(event, onImageSuccess, onAttachmentSuccess, onError) {\n  var items = (event.clipboardData || event.originalEvent.clipboardData || {}).items;\n  for (var i in items) {\n    var item = items[i];\n    if (item.kind === 'file') {\n      var file = item.getAsFile();\n      if (!file) {\n        console.log(\"Failed to get file object from pasted file item\", item.kind, item.type);\n        continue;\n      }\n      if (file.type && file.type.split('/')[0] == 'image') {\n        // Handle inline image\n        if (file.size > MAX_INBAND_ATTACHMENT_SIZE || SUPPORTED_IMAGE_FORMATS.indexOf(file.type) < 0) {\n          imageFileScaledToBase64(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, false, onImageSuccess, onError);\n        } else {\n          imageFileToBase64(file, onImageSuccess, onError);\n        }\n      } else {\n        // Handle file attachment\n        fileToBase64(file, onAttachmentSuccess, onError)\n      }\n      // Indicate that the pasted data contains a file.\n      return true;\n    }\n  }\n  // No file found.\n  return false;\n}\n\n// Get mime type from data URL header.\nexport function getMimeType(header) {\n  var mime = /^data:(image\\/[-+a-z0-9.]+);base64/.exec(header);\n  return (mime && mime.length > 1) ? mime[1] : null;\n}\n\n// Given length of a binary object in bytes, calculate the length after\n// base64 encoding.\nexport function base64EncodedLen(n) {\n  return Math.floor((n + 2) / 3) * 4;\n}\n\n// Given length of a base64-encoded object, calculate decoded size of the\n// pbject in bytes.\nexport function base64DecodedLen(n) {\n  return Math.floor(n / 4) * 3;\n}\n\n// Re-encode string to standard base64 encoding with padding.\n// The string may be base64-URL encoded without the padding.\nexport function base64ReEncode(str) {\n  if (str) {\n    str = str.replace(/-/g, '+').replace(/_/g, '/');\n    try {\n      str = btoa(atob(str));\n    } catch(err) {\n      console.log(\"Failed to base64 re-encode string.\", err);\n      str = null;\n    }\n  }\n  return str;\n}\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\n\nimport { AVATAR_SIZE, MAX_EXTERN_ATTACHMENT_SIZE } from '../config.js';\nimport { imageScaled, blobToBase64, makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class AvatarUpload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dataUrl: props.avatar\n    };\n\n    this.handleFileUpload = this.handleFileUpload.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.avatar != prevProps.avatar) {\n      this.setState({dataUrl: this.props.avatar})\n    }\n  }\n\n  handleFileUpload(e) {\n    imageScaled(e.target.files[0], AVATAR_SIZE, AVATAR_SIZE, MAX_EXTERN_ATTACHMENT_SIZE, true,\n      // Image successfully scaled and converted.\n      (mime, blob) => {\n        // Convert blob to base64-encoded bits.\n        blobToBase64(blob, (unused, base64bits) => {\n          const du = makeImageUrl({data: base64bits, type: mime});\n          this.setState({dataUrl: du});\n          this.props.onImageChanged(du);\n        });\n      },\n      // Failure\n      (err) => {\n        this.props.onError(err, 'err');\n      });\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  render() {\n    // Randomize id value in case more than one AvatarUpload is shown\n    // at the same time.\n    const randId = 'file-input-avatar-' + (Math.random() + '').substr(2);\n    const className = 'avatar-upload' + (this.props.readOnly ? ' read-only' : '');\n    return (\n      <div className={className}>\n        {this.props.readOnly || !this.state.dataUrl ?\n          null :\n          <a href=\"#\" className=\"clear-avatar\" onClick={(e) => {e.preventDefault(); this.props.onImageChanged(null);}}>\n            <i className=\"material-icons\">clear</i>\n          </a>}\n        {this.state.dataUrl ?\n          <img src={this.state.dataUrl} className=\"preview\" /> :\n          this.props.readOnly && this.props.uid ?\n            <div className=\"avatar-box\">\n              <LetterTile\n                avatar={true}\n                topic={this.props.uid}\n                title={this.props.title} />\n            </div>\n            :\n            <div className=\"blank\">{AVATAR_SIZE}&times;{AVATAR_SIZE}</div>}\n        {this.props.readOnly ? null :\n          <input type=\"file\" id={randId} className=\"inputfile hidden\"\n            accept=\"image/*\" onChange={this.handleFileUpload} />}\n        {this.props.readOnly ? null :\n        <label htmlFor={randId} className=\"round\">\n          <i className=\"material-icons\">file_upload</i>\n        </label>}\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\n/* BEGIN CheckBox: styled checkbox */\nexport default class CheckBox extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange() {\n    this.props.onChange(this.props.name, !this.props.checked);\n  }\n\n  render() {\n    return (\n      this.props.onChange ? (\n        this.props.checked ?\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box</i> :\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box_outline_blank</i>\n        ) : (\n          this.props.checked ?\n            <i className=\"material-icons\">check_box</i> :\n            <i className=\"material-icons\">check_box_outline_blank</i>\n        )\n    );\n  }\n}\n/* END CheckBox */\n","import React from 'react';\n\nconst icon_mapping = {'muted': 'notifications_off', 'banned': 'block'};\n\n/* Contact's labels: [you], or icons [muted], [blocked] */\nexport default class ContactBadges extends React.PureComponent {\n    render() {\n      let badges = null;\n      if (this.props.badges && this.props.badges.length > 0) {\n        badges = [];\n        this.props.badges.map(function(b) {\n          if (b.icon) {\n            badges.push(<i className=\"material-icons as-badge\" key={b.key || b.icon}>{icon_mapping[b.icon]}</i>);\n          } else {\n            const style = 'badge' + (b.color ? ' ' + b.color : '');\n            badges.push(<span className={style} key={b.key || b.name}>{b.name}</span>);\n          }\n        });\n        return <>{badges}</>;\n      }\n      return null;\n    }\n};\n","// Odds and ends\n\nimport Tinode from 'tinode-sdk';\n\n// Make shortcut icon appear with a green dot + show unread count in title.\nexport function updateFavicon(count) {\n  const oldIcon = document.getElementById('shortcut-icon');\n  const head = document.head || document.getElementsByTagName('head')[0];\n  const newIcon = document.createElement('link');\n  newIcon.type = 'image/png';\n  newIcon.id = 'shortcut-icon';\n  newIcon.rel = 'shortcut icon';\n  newIcon.href = 'img/logo32x32' + (count > 0 ? 'a' : '') + '.png';\n  if (oldIcon) {\n    head.removeChild(oldIcon);\n  }\n  head.appendChild(newIcon);\n\n  document.title = (count > 0 ? '('+count+') ' : '') + 'Tinode';\n}\n\n// Create VCard which represents topic 'public' info\nexport function vcard(fn, imageDataUrl) {\n  let card = null;\n\n  if ((fn && fn.trim()) || imageDataUrl) {\n    card = {};\n    if (fn) {\n      card.fn = fn.trim();\n    }\n    if (imageDataUrl) {\n      const dataStart = imageDataUrl.indexOf(',');\n      card.photo = dataStart >= 0 ? {\n        data: imageDataUrl.substring(dataStart+1),\n        type: 'jpg'\n      } : imageDataUrl;\n    }\n  }\n  return card;\n}\n\n// Deep-shallow compare two arrays: shallow compare each element.\nexport function arrayEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (!Array.isArray(a) || !Array.isArray(b)) {\n    return false;\n  }\n\n  // Compare lengths first.\n  if (a.length != b.length) {\n    return false;\n  }\n  // Order of elements is ignored.\n  a.sort();\n  b.sort();\n  for (let i = 0, l = a.length; i < l; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Checks (loosely) if the given string is a phone. If so, returns the phone number in a format\n// as close to E.164 as possible.\nexport function asPhone(val) {\n  val = val.trim();\n  if (/^(?:\\+?(\\d{1,3}))?[- (.]*(\\d{3})[- ).]*(\\d{3})[- .]*(\\d{2})[- .]*(\\d{2})?$/.test(val)) {\n    return val.replace(/[- ().]*/, '');\n  }\n  return null;\n}\n\n// Checks (loosely) if the given string is an email. If so returns the email.\nexport function asEmail(val) {\n  val = val.trim();\n  if (/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(val)) {\n    return val;\n  }\n  return null;\n}\n\n// Checks if URL is a relative url, i.e. has no 'scheme://', including the case of missing scheme '//'.\n// The scheme is expected to be RFC-compliant, e.g. [a-z][a-z0-9+.-]*\n// example.html - ok\n// https:example.com - not ok.\n// http:/example.com - not ok.\n// ' ↲ https://example.com' - not ok. (↲ means carriage return)\nexport function isUrlRelative(url) {\n  return url && !/^\\s*([a-z][a-z0-9+.-]*:|\\/\\/)/im.test(url);\n}\n\n// Ensure URL does not present an XSS risk. Optional allowedSchemes may contain an array of\n// strings with permitted URL schemes, such as ['ftp', 'ftps']; otherwise accept http and https only.\n// If apikey and/or token is defined, it's appended to relative URL.\nexport function sanitizeUrl(url, allowedSchemes) {\n  if (!url) {\n    return null;\n  }\n\n  // Strip control characters and whitespace. They are not valid URL characters anyway.\n  url = url.replace(/[^\\x20-\\x7E]/gmi, '').trim();\n\n  // Relative URLs are safe.\n  // Relative URL does not start with ':', abcd123: or '//'.\n  if (!/^([a-z][a-z0-9+.-]*:|\\/\\/)/i.test(url)) {\n    return url;\n  }\n\n  // Blob URLs are safe.\n  if (/^blob:http/.test(url)) {\n    return url;\n  }\n\n  // Absolute URL. Accept only safe schemes, or no scheme.\n  const schemes = Array.isArray(allowedSchemes) ? allowedSchemes.join('|') : 'http|https';\n  const re = new RegExp('^((' + schemes + '):|//)', 'i');\n  if (!re.test(url)) {\n    return null;\n  }\n\n  return url;\n}\n\n// Ensure URL is suitable for <img src=\"url\"> field: the URL must be a relative URL or\n// have http:, https:, blob: or data: scheme.\n// The relative URL is appended with the API key and/or auth token.\n// In case of data: scheme, the URL must start with a 'data:image/XXXX;base64,'.\nexport function sanitizeImageUrl(url) {\n  if (!url) {\n    return null;\n  }\n\n  const sanitizedUrl = sanitizeUrl(url);\n  if (sanitizedUrl) {\n    return sanitizedUrl;\n  }\n\n  // Is this a data: URL of an image?\n  if (/data:image\\/[a-z0-9.-]+;base64,/i.test(url.trim())) {\n    return url;\n  }\n\n  return null;\n}\n\n// Given message's received status, return name and color of a delivery indicator icon.\nexport function deliveryMarker(received) {\n  switch (received) {\n    case Tinode.MESSAGE_STATUS_SENDING:\n      return { name: 'access_time' }; // watch face\n    case Tinode.MESSAGE_STATUS_FAILED:\n      return { name: 'warning', color: 'amber' }; // yellow icon /!\\\n    case Tinode.MESSAGE_STATUS_SENT:\n      return { name: 'done' }; // checkmark\n    case Tinode.MESSAGE_STATUS_RECEIVED:\n      return { name: 'done_all' }; // double checkmark\n    case Tinode.MESSAGE_STATUS_READ:\n      return { name: 'done_all', color: 'blue' }; // blue double checkmark\n  }\n  return null;\n}\n","// Received/read indicator.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { shortDateFormat } from '../lib/strformat.js';\nimport { deliveryMarker } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  'sending': {\n    'id': 'message_sending',\n    'defaultMessage': 'sending...',\n    'description': 'Message being sent, in place of time stamp'\n  },\n  'failed': {\n    'id': 'message_sending_failed',\n    'defaultMessage': 'failed',\n    'description': 'Failed to send message, in place of time stamp'\n  }\n});\n\nclass ReceivedMarker extends React.PureComponent {\n  render() {\n    const {formatMessage} = this.props.intl;\n    let timestamp;\n    if (this.props.received <= Tinode.MESSAGE_STATUS_SENDING) {\n      timestamp = formatMessage(messages.sending);\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_FAILED) {\n      timestamp = formatMessage(messages.failed);\n    } else {\n      timestamp = shortDateFormat(this.props.timestamp, this.props.intl.locale);\n    }\n\n    const icon = deliveryMarker(this.props.received);\n    const marker = icon ? <i className={'material-icons small ' + icon.color}>{icon.name}</i> : null;\n\n    return (\n      <span className=\"timestamp\">\n        {timestamp}{'\\u00a0'}{marker}\n      </span>\n    );\n  }\n};\n\nexport default injectIntl(ReceivedMarker);\n","// The counter of unread messages in the topic.\nimport React from 'react';\n\nexport default class UnreadBadge extends React.PureComponent {\n  render() {\n    return (this.props.count > 0 ?\n      <span className=\"unread\">{this.props.count > 9 ? \"9+\" : this.props.count}</span>\n      : null);\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport ContactBadges from './contact-badges.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\nimport UnreadBadge from './unread-badge.jsx';\n\nimport { Drafty } from 'tinode-sdk';\n\nimport { deliveryMarker } from '../lib/utils.js';\n\nexport default class Contact extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.props.onSelected) {\n      // Index this.props.index is used by GroupManager.\n      this.props.onSelected(this.props.item, this.props.index);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.props.item, y: e.pageY, x: e.pageX });\n  }\n\n  render() {\n    let title = this.props.title;\n    if (!title) {\n      title = <i><FormattedMessage id=\"unnamed_topic\" /></i>;\n    } else if (title.length > 30) {\n      // FIXME: this is probably wrong for RTL languages.\n      title = title.substring(0, 28) + '…';\n    }\n    const online = this.props.now ? 'online' : 'offline';\n    const avatar = this.props.avatar ? this.props.avatar : true;\n    const badges = this.props.badges ? this.props.badges.slice() : [];\n    const icon_badges = [];\n    if (this.props.acs) {\n      if (this.props.showMode) {\n        badges.push({name: this.props.acs.getMode(), key: 'mode'});\n      }\n      if (this.props.acs.isMuted()) {\n        icon_badges.push({icon: 'muted'});\n      }\n      if (!this.props.acs.isJoiner()) {\n        icon_badges.push({icon: 'banned'});\n      }\n    }\n\n    const subtitle = this.props.preview ?\n      (typeof this.props.preview == 'string' ? this.props.preview :\n        React.createElement(React.Fragment, null, Drafty.format(this.props.preview, draftyFormatter, this))) :\n      this.props.comment;\n\n    const icon = deliveryMarker(this.props.received);\n    const marker = icon ? <i className={'material-icons small space-right ' + icon.color}>{icon.name}</i> : null;\n\n    return (\n      <li className={!this.props.showCheckmark && this.props.selected ? 'selected' : null} onClick={this.handleClick}>\n        <div className=\"avatar-box\">\n          <LetterTile\n            avatar={avatar}\n            title={this.props.title}\n            topic={this.props.item} />\n          {this.props.showOnline ? <span className={online} /> :\n            (this.props.showCheckmark && this.props.selected ?\n            <i className=\"checkmark material-icons\">check_circle</i>\n            : null)}\n        </div>\n        <div className=\"text-box\">\n          <div><span className=\"contact-title\">{title}</span>\n            {this.props.isChannel ? <img src=\"/img/channel.png\" className=\"channel\" alt=\"channel\" /> : null}\n            <UnreadBadge count={this.props.unread} /><ContactBadges badges={icon_badges} />\n          </div>\n          <div className=\"contact-comment\">{marker}{subtitle || '\\u00A0'}</div>\n          <span><ContactBadges badges={badges} /></span>\n        </div>\n        {this.props.showContextMenu ?\n          <span className=\"menuTrigger\">\n            <a href=\"#\" onClick={this.handleContextClick}>\n              <i className=\"material-icons\">expand_more</i>\n            </a>\n          </span> : null}\n      </li>\n    );\n  }\n};\n\n\n// Converts Drafty object into a one-line preview.\nfunction draftyFormatter(style, data, values, key) {\n  let el = Drafty.tagName(style);\n  const attr = { key: key };\n  if (el) {\n    switch (style) {\n      case 'HL':\n        // Make highlight less prominent in preview.\n        attr.className = 'highlight preview';\n        break;\n      case 'LN':\n        // Disable links in previews.\n        el = 'span';\n        break;\n      case 'IM':\n        // Replace image with '[icon] Image'.\n        el = React.Fragment;\n        values = [<i className=\"material-icons\">photo</i>, 'Picture'];\n        break;\n      case 'BN':\n        el = 'span';\n        attr.className = 'flat-button faux';\n        break;\n      case 'FM':\n        el = React.Fragment;\n        values = [<i className=\"material-icons\">dashboard</i>, 'Form:'];\n        break;\n      case 'RW':\n        el = React.Fragment;\n        break;\n      case 'EX':\n        el = React.Fragment;\n        values = [<i className=\"material-icons\">attachment</i>, 'Attachment'];\n        break;\n      default:\n        if (el == '_UNKN') {\n          el = React.Fragment;\n          values = [<i className=\"material-icons\">extension</i>];\n        }\n        break;\n    }\n    return React.createElement(el, attr, values);\n  } else {\n    return values;\n  }\n};\n","// A panel included into a list of contacts with an action text.\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\n\nclass ContactAction extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.onAction(this.props.action);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <li onClick={this.handleClick} className=\"action\">\n        <div className=\"action-text\">{formatMessage(this.props.title, this.props.values)}</div>\n      </li>\n    );\n  }\n};\n\nexport default injectIntl(ContactAction);\n","// ContactList: component for showing a list of contacts,\n// such as a list of group members in a group chat.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { Drafty } from 'tinode-sdk';\nimport Tinode from 'tinode-sdk';\n\nimport Contact from './contact.jsx';\nimport ContactAction from './contact-action.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nimport { MESSAGE_PREVIEW_LENGTH } from '../config.js';\n\nconst messages = defineMessages({\n  badge_you: {\n    id: 'badge_you',\n    defaultMessage: 'you',\n    description: 'Badge for indicating the current user'\n  },\n  badge_owner: {\n    id: 'badge_owner',\n    defaultMessage: 'owner',\n    description: 'Badge for indicating the owner'\n  }\n});\n\nclass ContactList extends React.Component {\n  render() {\n    const { formatMessage } = this.props.intl;\n    const showCheckmark = Array.isArray(this.props.topicSelected);\n    const contactNodes = [];\n    let contactsCount = 0;\n    if (this.props.contacts && this.props.contacts.length > 0) {\n      this.props.contacts.map((c) => {\n        if (c.action) {\n          // Action item\n          contactNodes.push(\n            <ContactAction\n              title={c.title} action={c.action} values={c.values}\n              key={c.action}\n              onAction={this.props.onAction}\n              />);\n        } else {\n          // Normal contact\n          const key = this.props.showMode ? c.user : (c.topic || c.user);\n          // If filter function is provided, filter out the items\n          // which don't satisfy the condition.\n          if (this.props.filterFunc && this.props.filter) {\n            let content = [key];\n            if (c.private && c.private.comment) {\n              content.push(('' + c.private.comment).toLowerCase());\n            }\n            if (c.public && c.public.fn) {\n              content.push(('' + c.public.fn).toLowerCase());\n            }\n            if (!this.props.filterFunc(this.props.filter, content)) {\n              return;\n            }\n          }\n\n          const isChannel = Tinode.isChannelTopicName(key);\n          const selected = showCheckmark ?\n            (this.props.topicSelected.indexOf(key) > -1) :\n            (this.props.topicSelected === key);\n          const badges = [];\n          if (this.props.showMode) {\n            if (key == this.props.myUserId) {\n              badges.push({name: formatMessage(messages.badge_you), color: 'green'});\n            }\n            if (c.acs && c.acs.isOwner()) {\n              badges.push({name: formatMessage(messages.badge_owner), color: 'blue'});\n            }\n          }\n\n          const comment = Array.isArray(c.private) ?\n            c.private.join(',') : (c.private ? c.private.comment : null);\n          let preview;\n          let deliveryStatus;\n          if (!this.props.showMode) {\n            const msg = c.latestMessage();\n            if (msg) {\n              deliveryStatus = c.msgStatus(msg);\n              preview = typeof msg.content == 'string' ?\n                msg.content.substr(0, MESSAGE_PREVIEW_LENGTH) :\n                Drafty.preview(msg.content, MESSAGE_PREVIEW_LENGTH);\n            }\n          }\n          contactNodes.push(\n            <Contact\n              title={c.public ? c.public.fn : null}\n              avatar={makeImageUrl(c.public ? c.public.photo : null)}\n              comment={comment}\n              preview={preview}\n              received={deliveryStatus}\n              unread={this.props.showUnread ? c.unread : 0}\n              now={c.online && this.props.connected}\n              acs={c.acs}\n              showMode={this.props.showMode}\n              badges={badges}\n              showCheckmark={showCheckmark}\n              selected={selected}\n              showOnline={this.props.showOnline && !isChannel}\n              isChannel={isChannel}\n              onSelected={this.props.onTopicSelected}\n              showContextMenu={this.props.showContextMenu}\n              item={key}\n              index={contactNodes.length}\n              key={key} />\n          );\n          contactsCount ++;\n        }\n      }, this);\n    }\n\n    return (\n      <div className={this.props.noScroll ? null : \"scrollable-panel\"}>\n        {contactsCount == 0 ?\n          <div className=\"center-medium-text\"\n            dangerouslySetInnerHTML={{__html: this.props.emptyListMessage}} />\n          :\n          null\n        }\n        {contactNodes.length > 0 ?\n          <ul className=\"contact-box\">\n            {contactNodes}\n          </ul>\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ContactList);\n","// The X menu to be displayed in title bars.\nimport React from 'react';\n\nexport default class MenuCancel extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n        <i className=\"material-icons\">close</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nimport MenuCancel from './menu-cancel.jsx';\n\nexport default class ErrorPanel extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      show: false,\n    };\n\n    this.hide = this.hide.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.level !== this.props.level) {\n      this.setState({\n        show: !(!this.props.level)\n      });\n    }\n  }\n\n  hide() {\n    this.setState({show: false});\n    if (this.props.onClearError) {\n      this.props.onClearError();\n    }\n  }\n\n  render() {\n    const icons = {err: 'error', warn: 'warning', info: 'info'}\n    const level = icons[this.props.level] || '';\n    const className = 'info-box ' + level;\n    return (\n      <div className={className}>\n        <div className=\"icon\"><i className=\"material-icons\">{level}</i></div>\n        <span>\n          {this.props.text}\n          {this.props.action ?\n            <>\n              &#32;<a href=\"#\"\n                style={{ whiteSpace: 'nowrap' }}\n                onClick={(e) => {e.preventDefault(); this.props.action();}}>\n                {this.props.actionText}\n              </a>\n            </>\n          : null}\n        </span>\n        <div className=\"cancel\"><MenuCancel onCancel={this.hide} /></div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\n\nexport default class Chip extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel(this.props.topic, this.props.index);\n  }\n\n  render() {\n    const title = this.props.title || this.props.topic;\n    const className = this.props.invalid ? 'chip invalid' : 'chip';\n    return (\n      <div className={className}>\n        {this.props.noAvatar ?\n          <span className=\"spacer\" /> :\n          <div className=\"avatar-box\">\n            <LetterTile\n              avatar={this.props.avatar || true}\n              topic={this.props.topic}\n              title={this.props.title} />\n          </div>\n        }\n        <span>{title}</span>\n        {this.props.onCancel && !this.props.required ?\n          <a href=\"#\" onClick={this.handleCancel} >&times;</a>\n          : <span className=\"spacer\" />}\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport Chip from './chip.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n/* BEGIN ChipInput: group membership widget */\nexport default class ChipInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = ChipInput.deriveStateFromProps(props);\n    this.state.input = '';\n    this.state.focused = false;\n\n    this.handleTextInput = this.handleTextInput.bind(this);\n    this.removeChipAt = this.removeChipAt.bind(this);\n    this.handleChipCancel = this.handleChipCancel.bind(this);\n    this.handleFocusGained = this.handleFocusGained.bind(this);\n    this.handleFocusLost = this.handleFocusLost.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  static deriveStateFromProps(props) {\n    return {\n      placeholder: props.chips ? '' : props.prompt,\n      sortedChips: ChipInput.sortChips(props.chips, props.staticMembers),\n      chipIndex: ChipInput.indexChips(props.chips)\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chips != this.props.chips ||\n      prevProps.staticMembers != this.props.staticMembers ||\n      prevProps.prompt != this.props.prompt) {\n      this.setState(ChipInput.deriveStateFromProps(this.props));\n    }\n    if (!prevState || this.props.chips.length > prevState.sortedChips.length) {\n      this.setState({input: ''});\n    }\n  }\n\n  // Map chip index to user name\n  static indexChips(chips) {\n    const index = {};\n    let count = 0;\n    chips.map((item) => {\n      index[item.user] = count;\n      count ++;\n    });\n    return index;\n  }\n\n  // Have non-removable chips appear before all other chips.\n  static sortChips(chips, keep) {\n    const required = [];\n    const normal = [];\n    chips.map((item) => {\n      if (keep && keep.includes(item.user)) {\n        required.push(item);\n      } else {\n        normal.push(item);\n      }\n    });\n    return required.concat(normal);\n  }\n\n  handleTextInput(e) {\n    this.setState({input: e.target.value});\n    if (this.props.filterFunc) {\n      this.props.filterFunc(e.target.value);\n    }\n  }\n\n  removeChipAt(idx) {\n    const removed = this.state.sortedChips[idx];\n    this.props.onChipRemoved(removed.user, this.state.chipIndex[removed.user]);\n  }\n\n  handleChipCancel(item, idx) {\n    this.removeChipAt(idx);\n  }\n\n  handleFocusGained() {\n    this.setState({focused: true});\n  }\n\n  handleFocusLost() {\n    this.setState({focused: false});\n    if (this.props.onFocusLost) {\n      this.props.onFocusLost(this.state.input);\n    }\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Backspace') {\n      if (this.state.input.length == 0 && this.state.sortedChips.length > 0) {\n        const at = this.state.sortedChips.length - 1;\n        if (this.state.sortedChips[at].user !== this.props.staticMembers) {\n          this.removeChipAt(at);\n        }\n      }\n    } else if (e.key === 'Enter') {\n      if (this.props.onEnter) {\n        this.props.onEnter(this.state.input);\n      }\n    } else if (e.key === 'Escape') {\n      if (this.props.onCancel) {\n        this.props.onCancel();\n      }\n    }\n  }\n\n  render() {\n    const chips = [];\n    let count = 0;\n    const staticMembers = this.props.staticMembers || [];\n    this.state.sortedChips.map((item) => {\n      chips.push(\n        <Chip\n          onCancel={this.handleChipCancel}\n          avatar={makeImageUrl(item.public ? item.public.photo : null)}\n          title={item.public ? item.public.fn : undefined}\n          noAvatar={this.props.avatarDisabled}\n          topic={item.user}\n          required={staticMembers.includes(item.user)}\n          invalid={item.invalid}\n          index={count}\n          key={item.user} />\n      );\n      count++;\n    });\n    const className = \"chip-input\" + (this.state.focused ? ' focused' : '');\n    return (\n      <div className={className}>\n        {chips}\n        <input type=\"text\"\n          placeholder={this.state.placeholder}\n          onChange={this.handleTextInput}\n          onFocus={this.handleFocusGained}\n          onBlur={this.handleFocusLost}\n          onKeyDown={this.handleKeyDown}\n          value={this.state.input}\n          autoFocus />\n      </div>\n    );\n  }\n};\n","// GroupMembers: control for managing a list of group members.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\nimport ContactList from './contact-list.jsx';\n\nconst messages = defineMessages({\n  no_contacts: {\n    id: 'no_contacts',\n    defaultMessage: 'You have no contacts :-(',\n    description: 'Shown in ContactsView when the user has no contacts'\n  },\n  contacts_not_found_short: {\n    id: 'contacts_not_found_short',\n    defaultMessage: \"No contacts match ''{query}''\",\n    description: 'Shown in ContactsView when search returned no results'\n  }\n});\n\nclass GroupManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Array of topic members\n      members: props.members,\n      index: GroupManager.indexMembers(props.members),\n      staticMembers: GroupManager.staticMembers(props.members, props.keepInitialMembers, props.requiredMember),\n      contactFilter: '',\n      noContactsMessage: props.intl.formatMessage(messages.no_contacts),\n      selectedContacts: GroupManager.selectedContacts(props.members)\n    };\n\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleMemberRemoved = this.handleMemberRemoved.bind(this);\n    this.handleContactFilter = this.handleContactFilter.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static indexMembers(members) {\n    let index = {};\n    members.map((m) => {\n      index[m.user] = {delta: 0, present: true}; // Delta: 0 unchanged, +1 added, -1 removed\n    });\n    return index;\n  }\n\n  static staticMembers(members, keepInitial, requiredMember) {\n    let stat = [];\n    members.map((m) => {\n      if (keepInitial || m.user == requiredMember) {\n        stat.push(m.user);\n      }\n    });\n    return stat;\n  }\n\n  static selectedContacts(members) {\n    let sel = [];\n    members.map((m) => {\n      sel.push(m.user);\n    });\n    return sel;\n  }\n\n  handleContactSelected(userId, index) {\n    let status = this.state.index[userId];\n    if (status) {\n      if (status.present) {\n        // Prevent duplicate members\n        return;\n      }\n      status.delta += 1;\n      status.present = true;\n    } else {\n      status = {delta: 1, present: true};\n    }\n\n    let m = this.state.members.slice();\n    m.push(this.props.contacts[index]);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleMemberRemoved(userId, index) {\n    const status = this.state.index[userId];\n    if (!status || !status.present) {\n      return;\n    }\n    status.present = false;\n    status.delta -= 1;\n\n    let m = this.state.members.slice();\n    m.splice(index, 1);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleContactFilter(val) {\n    const {formatMessage} = this.props.intl;\n    const msg = !val ?\n      formatMessage(messages.no_contacts) :\n      formatMessage(messages.contacts_not_found_short, {query: val});\n\n    this.setState({contactFilter: val, noContactsMessage: msg});\n  }\n\n  static doContactFiltering(filter, values) {\n    if (filter) {\n      for (let i=0; i<values.length; i++) {\n        if (values[i].indexOf(filter) >= 0) {\n          return true;\n        }\n      }\n      return false;\n    }\n    return true;\n  }\n\n  handleSubmit() {\n    var instance = this;\n    var members = [];\n    var added = [];\n    var removed = [];\n\n    var keys = Object.keys(this.state.index);\n    keys.map(function(k) {\n      if (instance.state.index[k].present) {\n        members.push(k);\n      }\n\n      if (instance.state.index[k].delta > 0) {\n        added.push(k);\n      } else if (instance.state.index[k].delta < 0) {\n        removed.push(k);\n      }\n    });\n    this.props.onSubmit(members, added, removed);\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <div id=\"group-manager\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_group_members\" defaultMessage=\"Group Members\" description=\"Section title\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ChipInput\n            chips={this.state.members}\n            staticMembers={this.state.staticMembers}\n            prompt=\"add members\"\n            filterFunc={this.handleContactFilter}\n            onChipRemoved={this.handleMemberRemoved} />\n        </div>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_all_contacts\" defaultMessage=\"All Contacts\"\n              description=\"Section title [All Contacts]\" />\n          </label>\n        </div>\n        <ContactList\n          contacts={this.props.contacts}\n          myUserId={this.props.myUserId}\n          topicSelected={this.state.selectedContacts}\n          filter={this.state.contactFilter}\n          filterFunc={GroupManager.doContactFiltering}\n          emptyListMessage={this.state.noContactsMessage}\n          showOnline={false}\n          showUnread={false}\n          onTopicSelected={this.handleContactSelected} />\n        <div id=\"group-manager-buttons\" className=\"panel-form-row\">\n          <button className=\"blue\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n          <button className=\"white\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(GroupManager);\n","// Password with a visiblity toggle.\nimport React from 'react';\n\nexport default class VisiblePassword extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: this.props.value,\n      visible: false\n    };\n\n    this.handleVisibility = this.handleVisibility.bind(this);\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n    if (this.props.onChange) {\n      this.props.onChange(e);\n    }\n  }\n\n  handleVisibility(e) {\n    e.preventDefault();\n    this.setState({visible: !this.state.visible});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode == 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, visible: false});\n      if (this.props.onFinished) {\n        this.props.onFinished();\n      }\n    } else if (e.keyCode == 13) {\n      // Enter pressed\n      this.handleEditingFinished();\n    }\n  }\n\n  handleEditingFinished(e) {\n    if (e) {\n      let currentTarget = e.currentTarget;\n      setTimeout(() => {\n        if (!currentTarget.contains(document.activeElement)) {\n          if (this.props.onFinished) {\n            this.props.onFinished(this.state.value);\n          }\n        }\n      }, 0);\n    } else if (this.props.onFinished) {\n      this.props.onFinished(this.state.value.trim());\n    }\n  }\n\n  render() {\n    return (\n      <div tabIndex=\"-1\" className=\"group-focus\"\n        onBlur={this.handleEditingFinished}>\n        <input className=\"with-visibility\"\n          type={this.state.visible ? \"text\" : \"password\"}\n          value={this.state.value}\n          placeholder={this.props.placeholder}\n          required={this.props.required ? 'required' : ''}\n          autoFocus={this.props.autoFocus ? 'autoFocus' : ''}\n          autoComplete={this.props.autoComplete}\n          onChange={this.handeTextChange}\n          onKeyDown={this.handleKeyDown} />\n        <span onClick={this.handleVisibility}>\n          <i className=\"material-icons clickable light-gray\">\n            {this.state.visible ? 'visibility' : 'visibility_off'}\n          </i>\n        </span>\n      </div>\n    );\n  }\n}\n","// In-place text editor. Shows text with an icon which toggles it into an input field.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport VisiblePassword from './visible-password.jsx';\n\nexport default class InPlaceEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      active: props.active,\n      initialValue: props.value || '',\n      value: props.value || ''\n    };\n\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleStartEditing = this.handleStartEditing.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n    this.handlePasswordFinished = this.handlePasswordFinished.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // If text has changed while in read mode, update text and discard changes.\n    // Ignore update if in edit mode.\n    const newValue = this.props.value || '';\n    if (prevState.initialValue != newValue && !prevState.active) {\n      this.setState({\n        initialValue: newValue,\n        value: newValue\n      });\n    }\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, active: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleEditingFinished(e);\n    }\n  }\n\n  handleStartEditing() {\n    if (!this.props.readOnly) {\n      ReactDOM.findDOMNode(this).focus();\n      this.setState({active: true});\n    }\n  }\n\n  handleEditingFinished(event) {\n    if (this.props.required && !event.target.checkValidity()) {\n      // Empty input\n      this.setState({value: this.props.value, active: false});\n      return;\n    }\n    this.setState({active: false});\n    let value = this.state.value.trim();\n    if ((value || this.props.value) && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  handlePasswordFinished(value) {\n    this.setState({active: false});\n    if (value && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  render() {\n    if (this.state.active) {\n      var fieldType = this.props.type || 'text';\n    } else {\n      var spanText = this.props.type == 'password' ? '••••••••' : this.state.value;\n      var spanClass = 'in-place-edit' +\n        (this.props.readOnly ? ' disabled' : '');\n      if (!spanText) {\n        spanText = this.props.placeholder;\n        spanClass += ' placeholder';\n      }\n      if (spanText.length > 20) {\n        // FIXME: this is wrong for RTL languages.\n        spanText = spanText.substring(0, 19) + '...';\n      }\n    }\n    return (\n      this.state.active ?\n        (fieldType == 'password' ?\n          <VisiblePassword\n            value={this.state.value}\n            placeholder={this.props.placeholder}\n            required={this.props.required ? 'required' : ''}\n            autoComplete={this.props.autoComplete}\n            autoFocus={true}\n            onFinished={this.handlePasswordFinished}/>\n          :\n          <input type={fieldType}\n            value={this.state.value}\n            placeholder={this.props.placeholder}\n            required={this.props.required ? 'required' : ''}\n            autoComplete={this.props.autoComplete}\n            autoFocus\n            onChange={this.handeTextChange}\n            onKeyDown={this.handleKeyDown}\n            onBlur={this.handleEditingFinished} />\n        )\n        :\n        <span className={spanClass} onClick={this.handleStartEditing}>\n          <span className=\"content\">{spanText}</span>\n        </span>\n    );\n  }\n};\n","// Toggle [Title text >] -> [Title text v]\n\nimport React from 'react';\n\nexport default class MoreButton extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: props.open\n    };\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n\n  handleToggle() {\n    const open = !this.state.open;\n    this.setState({open: open});\n    if (this.props.onToggle) {\n      this.props.onToggle(open);\n    }\n  }\n\n  render() {\n    return (<label className=\"small clean-clickable\" onClick={this.handleToggle}>{this.props.title}...\n      {this.state.open ? <i className=\"material-icons\">expand_more</i> :\n        <i className=\"material-icons\">chevron_right</i>}\n      </label>);\n  }\n}\n","// PermissionsEditor: Component for editing permissions\n// <PermissionsEditor mode=\"JWROD\" skip=\"O\" onChange={this.handleCheckboxTest} />\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport CheckBox from './checkbox.jsx';\nimport Contact from './contact.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n// Translatable permission names.\nconst messages = defineMessages({\n  'joiner': {\n    id: 'permission_join',\n    defaultMessage: \"Join ({val})\",\n    description: 'Name of J permission'\n  },\n  'reader': {\n    id: 'permission_read',\n    defaultMessage: \"Read ({val})\",\n    description: 'Name of R permission'\n  },\n  'writer': {\n    id: 'permission_write',\n    defaultMessage: \"Write ({val})\",\n    description: 'Name of W permission'\n  },\n  'preser': {\n    id: 'permission_pres',\n    defaultMessage: \"Get notified ({val})\",\n    description: 'Name of P permission'\n  },\n  'approver': {\n    id: 'permission_admin',\n    defaultMessage: \"Approve ({val})\",\n    description: 'Name of A permission'\n  },\n  'sharer': {\n    id: 'permission_share',\n    defaultMessage: \"Share ({val})\",\n    description: 'Name of S permission'\n  },\n  'deleter': {\n    id: 'permission_delete',\n    defaultMessage: \"Delete ({val})\",\n    description: 'Name of D permission'\n  },\n  'owner': {\n    id: 'permission_owner',\n    defaultMessage: \"Owner ({val})\",\n    description: 'Name of O permission'\n  }\n});\n\nclass PermissionsEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mode: (props.mode || '').replace('N', '')\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(val) {\n    let mode = this.state.mode;\n    let idx = mode.indexOf(val);\n    if (idx == -1) {\n      mode += val;\n    } else {\n      mode = mode.replace(val, '');\n    }\n    this.setState({mode: mode});\n  }\n\n  handleSubmit() {\n    // Normalize string, otherwise cannot check if mode has changed.\n    var mode = (this.state.mode || 'N').split('').sort().join('');\n    var before = (this.props.mode || 'N').split('').sort().join('')\n    if (mode !== before) {\n      this.props.onSubmit(mode);\n    } else {\n      this.props.onCancel();\n    }\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const all = 'JRWPASDO';\n    const names = {\n      'J': formatMessage(messages.joiner, {val: 'J'}),\n      'R': formatMessage(messages.reader, {val: 'R'}),\n      'W': formatMessage(messages.writer, {val: 'W'}),\n      'P': formatMessage(messages.preser, {val: 'P'}),\n      'A': formatMessage(messages.approver, {val: 'A'}),\n      'S': formatMessage(messages.sharer, {val: 'S'}),\n      'D': formatMessage(messages.deleter, {val: 'D'}),\n      'O': formatMessage(messages.owner, {val: 'O'})\n    };\n\n    let skip = this.props.skip || '';\n    let mode = this.state.mode;\n    let compare = (this.props.compare || '').replace('N', '');\n    let items = [];\n    for (let i=0; i<all.length; i++) {\n      let c = all.charAt(i);\n      if (skip.indexOf(c) >= 0 && mode.indexOf(c) < 0) {\n        // Permission is marked as inactive: hide unchecked permissions, disable checked permissions\n        continue;\n      }\n      items.push(\n        <tr key={c}>\n          <td>{names[c]}</td>\n          <td className=\"checkbox\">{skip.indexOf(c) < 0 ?\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} onChange={this.handleChange}/>\n            :\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} />\n          }</td>{this.props.compare ? <td className=\"checkbox\">\n            <CheckBox name={c} checked={(compare.indexOf(c) >= 0)}/>\n          </td> : null}\n        </tr>\n      );\n    }\n\n    return (\n      <div className=\"panel-form-column\">\n        {this.props.userTitle ?\n          <ul className=\"contact-box\"><Contact\n            item={this.props.item}\n            title={this.props.userTitle}\n            avatar={makeImageUrl(this.props.userAvatar ? this.props.userAvatar : null)} /></ul> : null}\n        <label className=\"small\"><FormattedMessage id=\"title_permissions\"\n          defaultMessage=\"Permissions\" description=\"Section title\"/></label>\n        <table className=\"permission-editor\">\n        {this.props.compare ?\n          <thead><tr>\n            <th></th><th>{this.props.modeTitle}</th>\n            <th>{this.props.compareTitle}</th>\n          </tr></thead> :\n          null}\n        <tbody>\n          {items}\n        </tbody></table>\n        <br />\n        <div className=\"dialog-buttons\">\n          <button className=\"outline\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" />\n          </button>\n          <button className=\"blue\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(PermissionsEditor);\n","// TagManager: edit topic or user tags.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\n\nimport { MAX_TAG_COUNT, MAX_TAG_LENGTH, MIN_TAG_LENGTH } from '../config.js';\nimport { arrayEqual } from '../lib/utils.js';\n\nexport default class TagManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tags: this.props.tags,\n      tagInput: '',\n      activated: this.props.activated\n    };\n\n    this.handleTagInput = this.handleTagInput.bind(this);\n    this.handleAddTag = this.handleAddTag.bind(this);\n    this.handleRemoveTag = this.handleRemoveTag.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (!arrayEqual(nextProps.tags, prevState.tags) && !prevState.activated) {\n      return {tags: nextProps.tags};\n    }\n    return null;\n  }\n\n  handleTagInput(text) {\n    this.setState({tagInput: text});\n    if (text.length > 0) {\n      const last = text[text.length-1];\n      if (text[0] == '\"') {\n        // This is a quoted string.\n        if (text.length > 1 && last == '\"') {\n          this.handleAddTag(text.substring(1, text.length-1));\n        }\n      } else if (last == ',' || last == ' ' || last == ';' || last == '\"') {\n        // User entered ',', ' ' or ';'\n        this.handleAddTag(text.substring(0, text.length-1).trim());\n      }\n    }\n  }\n\n  handleAddTag(tag) {\n    const maxTagCount = this.props.tinode.getServerLimit('maxTagCount', MAX_TAG_COUNT);\n\n    if (tag.length > 0 && this.state.tags.length < maxTagCount) {\n      const tags = this.state.tags.slice(0);\n      tags.push(tag);\n\n      this.setState({tags: tags, tagInput: ''});\n      if (this.props.onTagsChanged) {\n        this.props.onTagsChanged(tags);\n      }\n      return tags;\n    }\n    return this.state.tags;\n  }\n\n  handleRemoveTag(tag, index) {\n    const tags = this.state.tags.slice(0);\n    tags.splice(index, 1);\n    this.setState({tags: tags});\n    if (this.props.onTagsChanged) {\n      this.props.onTagsChanged(tags);\n    }\n  }\n\n  handleSubmit() {\n    // Add unprocessed input to tags, submit the list.\n    this.props.onSubmit(this.handleAddTag(this.state.tagInput.trim()));\n    this.setState({activated: false, tags: this.props.tags});\n  }\n\n  handleCancel() {\n    this.setState({activated: false, tagInput: '', tags: this.props.tags});\n    if (this.props.onCancel) {\n      this.props.onCancel();\n    }\n  }\n\n  render() {\n    const minTagLength = this.props.tinode.getServerLimit('minTagLength', MIN_TAG_LENGTH);\n    const maxTagLength = this.props.tinode.getServerLimit('maxTagLength', MAX_TAG_LENGTH);\n\n    let tags = [];\n    if (this.state.activated) {\n      this.state.tags.map((tag) => {\n        tags.push({user: tag, invalid: (tag.length < minTagLength || tag.length > maxTagLength)});\n      });\n    } else {\n      this.state.tags.map((tag) => {\n        tags.push(<span className=\"badge\" key={tags.length}>{tag}</span>);\n      });\n      if (tags.length == 0) {\n        tags = (\n          <i>\n            <FormattedMessage id=\"tags_not_found\" defaultMessage=\"No tags defined. Add some.\" description=\"\" />\n          </i>\n        );\n      }\n    }\n    return (\n      <div className=\"panel-form-column\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">{this.props.title}</label>\n        </div>\n        {this.state.activated ?\n        <div>\n          <FormattedMessage id=\"tags_editor_no_tags\" defaultMessage=\"Add some tags\"\n            description=\"Tag editor prompt when no tags are found.\">{\n            (add_tags_prompt) => <ChipInput\n              chips={tags}\n              avatarDisabled={true}\n              prompt={add_tags_prompt}\n              onEnter={this.handleAddTag}\n              onFocusLost={this.handleAddTag}\n              onCancel={this.handleCancel}\n              onChipRemoved={this.handleRemoveTag}\n              filterFunc={this.handleTagInput} />\n          }</FormattedMessage>\n          {this.props.onSubmit || this.props.onCancel ?\n            <div id=\"tag-manager-buttons\" className=\"dialog-buttons panel-form-row\">\n              <button className=\"outline\" onClick={this.handleCancel}>\n                <FormattedMessage id=\"button_cancel\" defautMessage=\"Cancel\" description=\"Rejection button [Cancel]\" />\n              </button>\n              <button className=\"blue\" onClick={this.handleSubmit}>\n                <FormattedMessage id=\"button_ok\" defautMessage=\"OK\" description=\"Confirmation button [OK]\" />\n              </button>\n            </div>\n          : null}\n        </div>\n        :\n        <div className=\"quoted\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.setState({activated: true});}}>\n            <i className=\"material-icons\">edit</i> &nbsp;<FormattedMessage id=\"title_manage_tags\" defaultMessage=\"Manage\"\n              description=\"Section title for the list of tags\" />\n          </a>\n          <>{tags}</>\n        </div>\n      }\n      </div>\n    );\n  }\n};\n","// InfoView: panel with topic/user info.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport ContactList from '../widgets/contact-list.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupManager from '../widgets/group-manager.jsx';\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport MenuCancel from '../widgets/menu-cancel.jsx';\nimport MoreButton from '../widgets/more-button.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\nimport TagManager from '../widgets/tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH, NO_ACCESS_MODE } from '../config.js';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, vcard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  requested: {\n    id: 'requested_permissions',\n    defaultMessage: 'Requested',\n    description: 'Title for permissions'\n  },\n  granted: {\n    id: 'granted_permissions',\n    defaultMessage: 'Granted',\n    description: 'Title for permissions'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n  other_user: {\n    id: 'label_other_user',\n    defaultMessage: 'Other',\n    description: 'Label for the other user when the user is unnamed'\n  },\n  clear_messages: {\n    id: 'action_clear_messages',\n    defaultMessage: 'Clear Messages',\n    description: 'Flat button [Clear Messages] (soft-delete messages)'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n  delete_messages: {\n    id: 'action_delete_messages',\n    defaultMessage: 'Clear Messages for All',\n    description: 'Flat button [Clear for All] (hard-delete all messages)'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  leave_chat: {\n    id: 'action_leave_chat',\n    defaultMessage: 'Leave Conversation',\n    description: 'Flat button [Leave Conversation]'\n  },\n  leave_chat_warning: {\n    id: 'leave_chat_warning',\n    defaultMessage: 'Are you sure you want to leave this conversation?',\n    description: 'Alert dialog warning when unsubscribing from a chat.'\n  },\n  block_contact: {\n    id: 'action_block_contact',\n    defaultMessage: \"Block Contact\",\n    description: \"Flat button [Block Contact]\"\n  },\n  block_contact_warning: {\n    id: 'block_contact_warning',\n    defaultMessage: 'Are you sure you want to block this contact?',\n    description: 'Alert dialog warning when blocking a contact.'\n  },\n  report_chat: {\n    id: 'action_report_chat',\n    defaultMessage: 'Report Conversation',\n    description: 'Flat button [Report Group]'\n  },\n  report_chat_warning: {\n    id: 'report_chat_warning',\n    defaultMessage: 'Are you sure you want to block and report this conversation?',\n    description: 'Alert dialog warning when reporting a conversation for abuse'\n  },\n});\n\nclass InfoView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      topic: null,\n      owner: false,\n      admin: false,\n      sharer: false,\n      deleter: false,\n      muted: false,\n      address: null,\n      groupTopic: undefined,\n      channel: undefined,\n      fullName: undefined,\n      avatar: null,\n      private: null,\n      selectedContact: null,\n      access: null,\n      modeGiven: null,\n      modeWant: null,\n      modeGiven2: null, // P2P topic, the other user mode given\n      modeWant2: null,  // P2P topic, the other user mode want\n      auth: null,\n      anon: null,\n      contactList: [],\n      tags: [],\n      showMemberPanel: false,\n      showPermissionEditorFor: undefined,\n      moreInfoExpanded: false,\n      previousMetaDesc: undefined,\n      previousSubsUpdated: undefined,\n      previousTagsUpdated: undefined\n    };\n\n    this.resetSubs = this.resetSubs.bind(this);\n    this.resetDesc = this.resetDesc.bind(this);\n    this.onMetaDesc = this.onMetaDesc.bind(this);\n    this.onSubsUpdated = this.onSubsUpdated.bind(this);\n    this.onTagsUpdated = this.onTagsUpdated.bind(this);\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\n    this.handlePrivateUpdate = this.handlePrivateUpdate.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleMuted = this.handleMuted.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handleShowAddMembers = this.handleShowAddMembers.bind(this);\n    this.handleHideAddMembers = this.handleHideAddMembers.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleDeleteMessages = this.handleDeleteMessages.bind(this);\n    this.handleLeave = this.handleLeave.bind(this);\n    this.handleBlock = this.handleBlock.bind(this);\n    this.handleReport = this.handleReport.bind(this);\n    this.handleMemberSelected = this.handleMemberSelected.bind(this);\n    this.handleMoreInfo = this.handleMoreInfo.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.handleContextMenu = this.handleContextMenu.bind(this);\n  }\n\n  // No need to separately handle component mount.\n  componentDidUpdate(props) {\n    const topic = this.props.tinode.getTopic(props.topic);\n    if (!topic) {\n      return;\n    }\n\n    if (this.onMetaDesc != topic.onMetaDesc) {\n      this.previousMetaDesc = topic.onMetaDesc;\n      topic.onMetaDesc = this.onMetaDesc;\n\n      this.previousSubsUpdated = topic.onSubsUpdated;\n      topic.onSubsUpdated = this.onSubsUpdated;\n\n      if (topic.getType() == 'grp') {\n        this.previousTagsUpdated = topic.onTagsUpdated;\n        topic.onTagsUpdated = this.onTagsUpdated;\n      } else {\n        this.previousTagsUpdated = undefined;\n      }\n    }\n\n    if (this.state.topic != props.topic) {\n      this.setState({topic: props.topic});\n      this.resetDesc(topic, props);\n      this.resetSubs(topic, props);\n    }\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.setState({topic: null});\n    topic.onMetaDesc = this.previousMetaDesc;\n    topic.onSubsUpdated = this.previousSubsUpdated;\n    topic.onTagsUpdated = this.previousTagsUpdated;\n  }\n\n  resetSubs(topic, props) {\n    const newState = {contactList: []};\n    if (topic.getType() == 'p2p') {\n      // Fetch the other party in the p2p conversation.\n      // Topic may not be ready yet, so check if user is found.\n      const user2 = topic.subscriber(props.topic);\n      if (user2) {\n        newState.modeGiven2 = user2.acs.getGiven();\n        newState.modeWant2 = user2.acs.getWant();\n      } else {\n        newState.modeGiven2 = NO_ACCESS_MODE;\n        newState.modeWant2 = NO_ACCESS_MODE;\n      }\n    } else {\n      topic.subscribers((sub) => {\n        newState.contactList.push(sub);\n      }, this);\n    }\n\n    this.setState(newState);\n  }\n\n  resetDesc(topic, props) {\n    const defacs = topic.getDefaultAccess() || {};\n    const acs = topic.getAccessMode();\n\n    this.setState({\n      owner: acs && acs.isOwner(),\n      admin: acs && acs.isAdmin(),\n      sharer: acs && acs.isSharer(),\n      deleter: acs && acs.isDeleter(),\n      muted: acs && acs.isMuted(),\n\n      fullName: topic.public ? topic.public.fn : undefined,\n      avatar: makeImageUrl(topic.public ? topic.public.photo : null),\n      private: topic.private ? topic.private.comment : null,\n      address: topic.name,\n      groupTopic: topic.isGroupType(),\n      channel: topic.isChannelType(),\n      showMemberPanel: false,\n      access: acs ? acs.getMode() : undefined,\n      modeGiven: acs ? acs.getGiven() : undefined,\n      modeWant: acs ? acs.getWant() : undefined,\n      auth: defacs.auth,\n      anon: defacs.anon\n    });\n\n    if (topic.getType() == 'grp' && acs && acs.isOwner()) {\n      // Requesting tags: owner is editing the topic.\n      topic.getMeta(topic.startMetaQuery().withTags().build());\n    }\n  }\n\n  onMetaDesc(desc) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetDesc(topic, this.props);\n\n    if (this.previousMetaDesc && this.previousMetaDesc != this.onMetaDesc) {\n      this.previousMetaDesc(desc);\n    }\n  }\n\n  onSubsUpdated(subs) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetSubs(topic, this.props);\n\n    if (this.previousSubsUpdated && this.previousSubsUpdated != this.onSubsUpdated) {\n      this.previousSubsUpdated(subs);\n    }\n  }\n\n  onTagsUpdated(tags) {\n    this.setState({tags: tags});\n\n    if (this.previousTagsUpdated && this.previousTagsUpdated != this.onTagsUpdated) {\n      this.previousTagsUpdated();\n    }\n  }\n\n  handleFullNameUpdate(fn) {\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.fullName !== fn) {\n      this.setState({fullName: fn});\n      this.props.onTopicDescUpdate(this.props.topic, vcard(fn, null), null);\n    }\n  }\n\n  handlePrivateUpdate(comment) {\n    comment = comment.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.private !== comment) {\n      this.setState({private: comment});\n      this.props.onTopicDescUpdate(this.props.topic, null, comment || Tinode.DEL_CHAR);\n    }\n  }\n\n  handleImageChanged(img) {\n    this.setState({avatar: img});\n    this.props.onTopicDescUpdate(this.props.topic, vcard(null, img || Tinode.DEL_CHAR), null);\n  }\n\n  handleMuted(ignored, checked) {\n    this.setState({muted: checked});\n    this.props.onChangePermissions(this.props.topic, checked ? '-P' : '+P');\n  }\n\n  handlePermissionsChanged(perm) {\n    switch (this.state.showPermissionEditorFor) {\n      case 'auth':\n        this.props.onTopicDescUpdate(this.props.topic, null, null, {auth: perm});\n        break;\n      case 'anon':\n        this.props.onTopicDescUpdate(this.props.topic, null, null, {anon: perm});\n        break;\n      case 'mode':\n      case 'want':\n        this.props.onChangePermissions(this.props.topic, perm);\n        break;\n      case 'given':\n        this.props.onChangePermissions(this.props.topic, perm, this.props.topic);\n        break;\n      case 'user':\n        this.props.onChangePermissions(this.props.topic, perm, this.state.userPermissionsEdited);\n        break;\n    }\n\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handleLaunchPermissionsEditor(which, uid) {\n    const {formatMessage} = this.props.intl;\n    let toEdit, toCompare, toSkip, titleEdit, titleCompare, userTitle, userAvatar;\n    switch (which) {\n      case 'mode':\n        toEdit = this.state.access;\n        break;\n      case 'want':\n        toEdit = this.state.modeWant;\n        toCompare = this.state.modeGiven;\n        if (this.state.owner) {\n          // Don't allow owner to unset 'O' permission. All other permissions are OK.\n          toSkip = 'O';\n        } else {\n          // Allow accepting any of 'ASDO' permissions but don't allow asking for them.\n          toSkip = Tinode.AccessMode.encode(Tinode.AccessMode.diff('ASDO', this.state.modeGiven));\n          if (this.state.channel) {\n            // Channels are read-only.\n            toSkip += 'W';\n          }\n        }\n        titleEdit = formatMessage(messages.requested);\n        titleCompare = formatMessage(messages.granted);\n        break;\n      case 'given':\n        toEdit = this.state.modeGiven2;\n        toCompare = this.state.modeWant2;\n        toSkip = this.state.groupTopic ? (this.state.owner ? '' : 'O') : 'ASDO';\n        titleEdit = formatMessage(messages.granted);\n        titleCompare = formatMessage(messages.requested);\n        break;\n      case 'auth':\n        toEdit = this.state.auth;\n        toSkip = 'O';\n        break;\n      case 'anon':\n        toEdit = this.state.anon;\n        toSkip = 'O';\n        break;\n      case 'user': {\n        const topic = this.props.tinode.getTopic(this.props.topic);\n        if (!topic) {\n          return;\n        }\n        const user = topic.subscriber(uid);\n        if (!user || !user.acs) {\n          return;\n        }\n        toEdit = user.acs.getGiven();\n        toCompare = user.acs.getWant();\n        toSkip = this.state.owner ? '' : 'O';\n        titleEdit = formatMessage(messages.granted);\n        titleCompare = formatMessage(messages.requested);\n        if (user.public) {\n          userTitle = user.public.fn;\n          userAvatar = user.public.photo;\n        }\n        break;\n      }\n      default:\n        console.log(\"Unknown permission editing mode '\" + which + \"'\");\n        break;\n    }\n    this.setState({\n      showPermissionEditorFor: which,\n      userPermissionsEdited: uid,\n      userPermissionsTitle: userTitle,\n      userPermissionsAvatar: userAvatar,\n      editedPermissions: toEdit,\n      immutablePermissions: toCompare,\n      editedPermissionsTitle: titleEdit,\n      immutablePermissionsTitle: titleCompare,\n      editedPermissionsSkipped: toSkip,\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handleShowAddMembers(e) {\n    e.preventDefault();\n    this.props.onInitFind();\n    this.setState({showMemberPanel: true});\n  }\n\n  handleHideAddMembers() {\n    this.setState({showMemberPanel: false});\n  }\n\n  handleMemberUpdateRequest(members, added, removed) {\n    this.props.onMemberUpdateRequest(this.props.topic, added, removed);\n    this.setState({showMemberPanel: false});\n  }\n\n  handleDeleteMessages(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(this.state.deleter ? messages.delete_messages : messages.clear_messages), // title\n      formatMessage(this.state.deleter ? messages.delete_messages_warning : messages.clear_messages_warning), // content\n      (() => { this.props.onDeleteMessages(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleLeave(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.leave_chat), // title\n      formatMessage(messages.leave_chat_warning), // content\n      (() => { this.props.onLeaveTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleBlock(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.block_contact), // title\n      formatMessage(messages.block_contact_warning), // content\n      (() => { this.props.onBlockTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleReport(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.report_chat), // title\n      formatMessage(messages.report_chat_warning), // content\n      (() => { this.props.onReportTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleMemberSelected(uid) {\n    this.setState({selectedContact: uid});\n  }\n\n  handleMoreInfo(open) {\n    this.setState({moreInfoExpanded: open});\n  }\n\n  handleTagsUpdated(tags) {\n    if (!arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      this.props.onTopicTagsUpdate(this.props.topic, tags);\n    }\n  }\n\n  handleContextMenu(params) {\n    const {formatMessage} = this.props.intl;\n    const instance = this;\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    const user = topic.subscriber(params.topicName);\n    if (!user || !user.acs) {\n      return;\n    }\n\n    const menuItems = [\n      {title: formatMessage(messages.edit_permissions), handler: function() {\n        instance.handleLaunchPermissionsEditor('user', params.topicName);\n      }},\n      'member_delete',\n      user.acs.isMuted() ? 'member_unmute' : 'member_mute',\n      user.acs.isJoiner() ? 'member_block' : 'member_unblock'\n    ];\n    this.props.showContextMenu({\n      topicName: this.props.topic,\n      x: params.x,\n      y: params.y,\n      user: params.topicName}, menuItems);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n\n    return (\n      <div id=\"info-view\">\n        <div className=\"caption-panel\" id=\"info-caption-panel\">\n          <div className=\"panel-title\" id=\"info-title\">\n            <FormattedMessage id=\"title_info\" defaultMessage=\"Info\" description=\"Title for InfoView\" />\n          </div>\n          <div>\n            <MenuCancel onCancel={this.props.onCancel} />\n          </div>\n        </div>\n        {this.props.displayMobile ?\n          <ErrorPanel\n            level={this.props.errorLevel}\n            text={this.props.errorText}\n            onClearError={this.props.onError} /> : null}\n        {this.state.showMemberPanel ?\n          <GroupManager\n            members={this.state.contactList}\n            requiredMember={this.props.myUserId}\n            keepInitialMembers={!this.state.admin && !this.state.owner}\n            myUserId={this.props.myUserId}\n            contacts={this.props.searchableContacts}\n            onCancel={this.handleHideAddMembers}\n            onSubmit={this.handleMemberUpdateRequest} />\n          :\n        this.state.showPermissionEditorFor ?\n          <PermissionsEditor\n            mode={this.state.editedPermissions}\n            compare={this.state.immutablePermissions}\n            skip={this.state.editedPermissionsSkipped}\n            modeTitle={this.state.editedPermissionsTitle}\n            compareTitle={this.state.immutablePermissionsTitle}\n            userTitle={this.state.userPermissionsTitle}\n            item={this.state.userPermissionsEdited}\n            userAvatar={this.state.userPermissionsAvatar}\n            onSubmit={this.handlePermissionsChanged}\n            onCancel={this.handleHidePermissionsEditor}\n            />\n          :\n          <div id=\"info-view-content\" className=\"scrollable-panel\">\n            <div className=\"panel-form-row\">\n              <div className=\"panel-form-column\">\n                <div><label className=\"small\">\n                  <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                    description=\"Label for editing topic name\" />\n                </label></div>\n                <div><InPlaceEdit\n                    placeholder={this.state.groupTopic ? \"Group name\" : <i>Unknown</i>}\n                    readOnly={!this.state.owner}\n                    value={this.state.fullName}\n                    required={true}\n                    onFinished={this.handleFullNameUpdate} /></div>\n                <div>\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                      description=\"Label for editing 'private'\" />\n                  </label>\n                </div>\n                <div>\n                  <FormattedMessage id=\"private_editing_placeholder\"\n                    defaultMessage=\"Visible to you only\"\n                    description=\"Placeholder for editing 'private'\">{\n                    (private_placeholder) => <InPlaceEdit\n                      placeholder={private_placeholder}\n                      value={this.state.private}\n                      onFinished={this.handlePrivateUpdate} />\n                  }</FormattedMessage>\n                </div>\n              </div>\n              <AvatarUpload\n                avatar={this.state.avatar}\n                readOnly={!this.state.owner}\n                uid={this.props.topic}\n                title={this.state.fullName}\n                onImageChanged={this.handleImageChanged}\n                onError={this.props.onError} />\n            </div>\n            <div className=\"hr\" />\n            <div className=\"panel-form-column\">\n              <div className=\"panel-form-row\">\n                <label>\n                  <FormattedMessage id=\"label_muting_topic\" defaultMessage=\"Muted:\"\n                    description=\"Label for Muting/unmuting the topic\" />\n                </label>\n                <CheckBox name=\"P\" checked={this.state.muted}\n                  onChange={this.handleMuted} />\n              </div>\n              <FormattedMessage id=\"action_more\" defaultMessage=\"More\"\n                description=\"Action for showing more content\">{\n                (more) => <MoreButton\n                  title={more}\n                  open={this.state.moreInfoExpanded}\n                  onToggle={this.handleMoreInfo} />\n              }</FormattedMessage>\n              {this.state.moreInfoExpanded ?\n                <div className=\"panel-form-column\">\n                  <div className=\"panel-form-row\">\n                    <label><FormattedMessage id=\"label_user_id\" /></label>\n                    <tt>{this.state.address}</tt>\n                  </div>\n                  {this.state.groupTopic ?\n                    <div className=\"panel-form-row\">\n                      <label>\n                        <FormattedMessage id=\"label_your_permissions\" defaultMessage=\"Your permissions:\"\n                          description=\"Label for current user permissions\" />\n                      </label>\n                      <tt className=\"clickable\"\n                        onClick={this.handleLaunchPermissionsEditor.bind(this, 'want')}>\n                        {this.state.access}\n                      </tt>\n                    </div>\n                    :\n                    <div>\n                      <div>\n                        <label className=\"small\">\n                          <FormattedMessage id=\"label_permissions\" defaultMessage=\"Permissions:\"\n                            description=\"Section title\" />\n                        </label>\n                      </div>\n                      <div className=\"quoted\">\n                        <div>\n                          <FormattedMessage id=\"label_you\" defaultMessage=\"You:\"\n                            description=\"Label for the current user\" /> &nbsp;<tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'want')}>\n                          {this.state.access}\n                        </tt></div>\n                        <div>{this.state.fullName ? this.state.fullName : formatMessage(messages.other_user)}:\n                          &nbsp;<tt className=\"clickable\" onClick={this.handleLaunchPermissionsEditor.bind(this, 'given')}>\n                          {this.state.modeGiven2}\n                          </tt>\n                        </div>\n                      </div>\n                    </div>\n                  }\n                  {this.state.sharer && (this.state.auth || this.state.anon) ?\n                  <div>\n                    <div>\n                      <label className=\"small\">\n                        <FormattedMessage id=\"label_default_access\" defaultMessage=\"Default access mode:\"\n                          description=\"Section title\" />\n                      </label>\n                    </div>\n                    <div className=\"quoted\">\n                      <div>Auth: {this.state.admin ?\n                        <tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>\n                          {this.state.auth}\n                        </tt>\n                        :\n                        <tt>{this.state.auth}</tt>\n                      }\n                      </div>\n                      <div>Anon: {this.state.admin ?\n                        <tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>\n                          {this.state.anon}\n                        </tt>\n                        :\n                        <tt>{this.state.anon}</tt>\n                      }\n                      </div>\n                    </div>\n                  </div>\n                  :\n                  null\n                }\n                </div>\n              :\n              null\n              }\n            </div>\n            <div className=\"hr\" />\n            {this.state.owner ?\n              <>\n                <FormattedMessage id=\"title_tag_manager\">{\n                  (tags) => <TagManager\n                    title={tags}\n                    tags={this.state.tags}\n                    activated={false}\n                    tinode={this.props.tinode}\n                    onSubmit={this.handleTagsUpdated} />\n                }</FormattedMessage>\n                <div className=\"hr\" />\n              </>\n              :\n              null\n            }\n            <div className=\"panel-form-column\">\n              {!this.state.channel ?\n                <a href=\"#\" className=\"flat-button\" onClick={this.handleDeleteMessages}>\n                  <i className=\"material-icons\">delete_outline</i> &nbsp;{\n                    formatMessage(this.state.deleter ? messages.delete_messages : messages.clear_messages)\n                  }\n                </a>\n                :\n                null\n              }\n              <a href=\"#\" className=\"red flat-button\" onClick={this.handleLeave}>\n                <i className=\"material-icons\">exit_to_app</i> &nbsp;{formatMessage(messages.leave_chat)}\n              </a>\n              {!this.state.groupTopic ?\n                <a href=\"#\" className=\"red flat-button\" onClick={this.handleBlock}>\n                  <i className=\"material-icons\">block</i> &nbsp;{formatMessage(messages.block_contact)}\n                </a>\n                :\n                null\n              }\n              {!this.state.owner ?\n                <a href=\"#\" className=\"red flat-button\" onClick={this.handleReport}>\n                  <i className=\"material-icons\">report</i> &nbsp;{formatMessage(messages.report_chat)}\n                </a>\n                :\n                null\n              }\n            </div>\n            {this.state.groupTopic && this.state.sharer ?\n              <>\n                <div className=\"hr\" />\n                <div className=\"panel-form-column\">\n                  <div className=\"panel-form-row\">\n                    <label className=\"small\">\n                      <FormattedMessage id=\"label_group_members\" defaultMessage=\"Group members:\"\n                        description=\"Section title or label\" />\n                    </label>\n                  </div>\n                  <div className=\"panel-form-row\">\n                    <a href=\"#\" className=\"flat-button\" onClick={this.handleShowAddMembers}>\n                      <i className=\"material-icons\">person_add</i> &nbsp;<FormattedMessage id=\"button_add_members\"\n                        defaultMessage=\"Add members\" description=\"Flat button [Add members] (to topic)\" />\n                    </a>\n                  </div>\n                  <FormattedMessage id=\"group_has_no_members\" defaultMessage=\"No members\"\n                    description=\"Shown in place of group members\">{\n                    (no_members) => <ContactList\n                      contacts={this.state.contactList}\n                      myUserId={this.props.myUserId}\n                      emptyListMessage={no_members}\n                      topicSelected={this.state.selectedContact}\n                      showOnline={false}\n                      showUnread={false}\n                      showMode={true}\n                      noScroll={true}\n                      onTopicSelected={this.handleMemberSelected}\n                      showContextMenu={this.state.admin ? this.handleContextMenu : false}\n                    />\n                  }</FormattedMessage>\n                </div>\n              </>\n              :\n              null\n            }\n          </div>\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(InfoView);\n","// File uload/download progress indicator with a cancel inside.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class FileProgress extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"uploader\">\n        <div><span style={{width: (this.props.progress * 100) + \"%\"}}></span></div>\n        {this.props.progress < 0.999 ?\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n            <i className=\"material-icons\">close</i> <FormattedMessage id=\"action_cancel\"\n              defaultMessage=\"cancel\" description=\"Call to action [cancel]\" />\n          </a>\n          :\n          <FormattedMessage id=\"upload_finishing\" defaultMessage=\"finishing...\"\n            description=\"Notification that upload is finishing\" />\n        }\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\nimport { bytesToHumanSize } from '../lib/strformat.js';\nimport { isUrlRelative, sanitizeUrl } from '../lib/utils.js';\n\nexport default class Attachment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      downloader: null,\n      progress: 0\n    };\n\n    this.downloadFile = this.downloadFile.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  downloadFile(url, filename, mimetype) {\n    if (!url) {\n      this.props.onError(\"Invalid download URL '\" + url + \"'\");\n      return;\n    }\n\n    const downloader = this.props.tinode.getLargeFileHelper();\n    this.setState({downloader: downloader});\n    downloader.download(url, filename, mimetype,\n      (loaded) => {\n        this.setState({progress: loaded / this.props.size});\n      },\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    ).then(() => {\n      this.setState({downloader: null, progress: 0});\n    }).catch((err) => {\n      if (err) {\n        this.props.onError(\"Error downloading file: \" + err.message, 'err');\n      }\n      this.setState({downloader: null, progress: 0});\n    });\n  }\n\n  handleCancel() {\n    if (this.props.uploading) {\n      this.props.onCancelUpload();\n    } else if (this.state.downloader) {\n      this.state.downloader.cancel();\n    }\n  }\n\n  render() {\n    let filename = this.props.filename || 'file_attachment';\n    if (filename.length > 36) {\n      filename = filename.substr(0, 16) + '...' + filename.substr(-16);\n    }\n    let size = this.props.size > 0 ?\n      <span className=\"small gray\">({bytesToHumanSize(this.props.size)})</span> :\n      null;\n\n    // Detect if the download URL is relative or absolute.\n    // If the URL is relative use LargeFileHelper to attach authentication\n    // credentials to the request.\n    let url, helperFunc;\n    if (!this.props.uploading && !this.state.downloader && isUrlRelative(this.props.downloadUrl)) {\n      // Relative URL. Use download helper.\n      url = '#';\n      helperFunc = (e) => {\n        e.preventDefault();\n        this.downloadFile(this.props.downloadUrl, this.props.filename, this.props.mimetype);\n      };\n    } else {\n      url = sanitizeUrl(this.props.downloadUrl);\n      helperFunc = null;\n    }\n    const downloadWidget = <><i className=\"material-icons\">file_download</i> <FormattedMessage id=\"save_attachment\"\n      defaultMessage=\"save\" description=\"Call to save an attachment\" /></>;\n    return (\n      <div className=\"attachment\">\n        <div><i className=\"material-icons big gray\">insert_drive_file</i></div>\n        <div className=\"flex-column\">\n          <div>{filename} {size}</div>\n          {this.props.uploading || this.state.downloader ?\n            <FileProgress progress={this.props.uploading ? this.props.progress : this.state.progress}\n              onCancel={this.handleCancel} />\n            :\n            <div>{url ?\n              <a href={url} download={this.props.filename} onClick={helperFunc}>{downloadWidget}</a>\n              :\n              <span className=\"light-gray\">{downloadWidget}</span>\n            }</div>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n","// Image view with progress bar and a cancel button.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\n\nexport default class UploadingImage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"inline-image\">\n        {React.createElement('img', this.props)}\n        <div className=\"rounded-container\">\n          <FileProgress progress={this.props.progress} onCancel={this.props.onCancelUpload} />\n        </div>\n      </div>\n    );\n  }\n};\n","// Single message, sent or received.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport Attachment from './attachment.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\nimport UploadingImage from './uploading-image.jsx'\nimport { sanitizeImageUrl, sanitizeUrl } from '../lib/utils.js';\n\nexport default class ChatMessage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      progress: 0\n    };\n\n    if (props.uploader) {\n      props.uploader.onProgress = this.handleProgress.bind(this);\n    }\n\n    this.handleImagePreview = this.handleImagePreview.bind(this);\n    this.handleFormButtonClick = this.handleFormButtonClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n  }\n\n  handleImagePreview(e) {\n    e.preventDefault();\n    this.props.onImagePreview({\n      url: e.target.src,\n      filename: e.target.title,\n      width: e.target.dataset.width,\n      height: e.target.dataset.height,\n      size: e.target.dataset.size,\n      type: e.target.dataset.mime\n    });\n  }\n\n  handleFormButtonClick(e) {\n    e.preventDefault();\n    const data = {\n      seq: this.props.seq\n    };\n    data.resp = {};\n    if (e.target.dataset.name) {\n      data.resp[e.target.dataset.name] = e.target.dataset.val ? e.target.dataset.val :\n        e.target.dataset.val === undefined ? 1 : '' + e.target.dataset.val;\n    }\n    if (e.target.dataset.act == 'url') {\n      data.ref = sanitizeUrl(e.target.dataset.ref) || 'about:blank';\n    }\n    const text = e.target.dataset.title || 'unknown';\n    this.props.onFormResponse(e.target.dataset.act, text, data);\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const menuItems = this.props.received == Tinode.MESSAGE_STATUS_FAILED ? ['menu_item_send_retry'] : [];\n    this.props.showContextMenu({ seq: this.props.seq, content: this.props.content,\n                                 y: e.pageY, x: e.pageX }, menuItems);\n  }\n\n  handleProgress(ratio) {\n    this.setState({progress: ratio});\n  }\n\n  handleCancelUpload() {\n    this.props.onCancelUpload(this.props.seq, this.props.uploader);\n  }\n\n  render() {\n    const sideClass = this.props.deleted ? 'center' :\n      (this.props.sequence + ' ' + (this.props.response ? 'left' : 'right'));\n    const bubbleClass = (this.props.sequence == 'single' || this.props.sequence == 'last') ? 'bubble tip' : 'bubble';\n    const avatar = this.props.deleted ? null : (this.props.userAvatar || true);\n    const fullDisplay = (this.props.userFrom && this.props.response &&\n      (this.props.sequence == 'single' || this.props.sequence == 'last'));\n\n    let content = this.props.content;\n    const attachments = [];\n    if (this.props.mimeType == Drafty.getContentType() && Drafty.isValid(content)) {\n      Drafty.attachments(content, function(att, i) {\n        if (att.mime == 'application/json') {\n          // Don't show json objects as attachments.\n          // They are not meant for users.\n          return;\n        }\n        attachments.push(<Attachment\n          tinode={this.props.tinode}\n          downloadUrl={Drafty.getDownloadUrl(att)}\n          filename={att.name} uploading={Drafty.isProcessing(att)}\n          mimetype={att.mime} size={Drafty.getEntitySize(att)}\n          progress={this.state.progress}\n          onCancelUpload={this.handleCancelUpload}\n          onError={this.props.onError}\n          key={i} />);\n      }, this);\n      content = React.createElement(React.Fragment, null, Drafty.format(content, draftyFormatter, this));\n    } else if (this.props.deleted) {\n      // Message represents a range of deleted messages.\n      content = <><i className=\"material-icons gray\">block</i> <i className=\"gray\">\n        <FormattedMessage id=\"deleted_content\"\n          defaultMessage=\"content deleted\" description=\"Shown when messages are deleted\" />\n      </i></>\n    } else if (typeof content != 'string') {\n      content = <>\n          <i className=\"material-icons gray\">error_outline</i> <i className=\"gray\">\n            <FormattedMessage id=\"invalid_content\"\n              defaultMessage=\"invalid content\" description=\"Shown when message is unreadable\" /></i>\n        </>\n    }\n\n    return (\n      <li className={sideClass}>\n        {this.props.userFrom && this.props.response ?\n          <div className=\"avatar-box\">\n            {fullDisplay ?\n              <LetterTile\n                topic={this.props.userFrom}\n                title={this.props.userName}\n                avatar={avatar} /> :\n              null}\n          </div> :\n          null}\n        <div>\n          <div className={bubbleClass}>\n            <div className=\"message-content\">\n              {content}\n              {attachments}\n              {this.props.timestamp ?\n                <ReceivedMarker\n                  timestamp={this.props.timestamp}\n                  received={this.props.received} />\n                : null}\n            </div>\n            {this.props.deleted || !this.props.showContextMenu ?\n              null :\n              <span className=\"menuTrigger\">\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">expand_more</i>\n                </a>\n              </span>\n            }\n          </div>\n          {fullDisplay ?\n            <div className=\"author\">\n              <FormattedMessage id=\"user_not_found\" defaultMessage=\"Not found\"\n                description=\"In place of a user's full name when the user is not found.\">{\n                    (notFound) => {return this.props.userName || <i>{notFound}</i>}\n              }</FormattedMessage>\n            </div>\n            : null\n          }\n        </div>\n      </li>\n    );\n  }\n};\n\n// Convert Drafty object to a tree of React elements.\nimport { BROKEN_IMAGE_SIZE, REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\n\n// Converts Drafty elements into React classes.\n// 'this' is set by the caller.\nfunction draftyFormatter(style, data, values, key) {\n  if (style == 'EX') {\n    // attachments are handled elsewhere.\n    return null;\n  }\n\n  let el = Drafty.tagName(style);\n  if (el) {\n    const attr = Drafty.attrValue(style, data) || {};\n    attr.key = key;\n    switch (style) {\n      case 'HL':\n        // Highlighted text. Assign class name.\n        attr.className = 'highlight';\n        break;\n      case 'IM':\n        // Additional processing for images\n        if (data) {\n          attr.className = 'inline-image';\n          const dim = fitImageSize(data.width, data.height,\n            Math.min(this.props.viewportWidth - REM_SIZE * 4, REM_SIZE * 36), REM_SIZE * 24, false) ||\n            {dstWidth: BROKEN_IMAGE_SIZE, dstHeight: BROKEN_IMAGE_SIZE};\n          attr.style = { width: dim.dstWidth + 'px', height: dim.dstHeight + 'px' };\n          if (!Drafty.isProcessing(data)) {\n            attr.src = this.props.tinode.authorizeURL(sanitizeImageUrl(attr.src));\n            attr.alt = data.name;\n            if (attr.src) {\n              attr.onClick = this.handleImagePreview;\n              attr.className += ' image-clickable';\n            } else {\n              attr.src = 'img/broken_image.png';\n            }\n          } else {\n            // Use custom element instead of <img>.\n            el = UploadingImage;\n          }\n        }\n        break;\n      case 'BN':\n        // Button\n        attr.onClick = this.handleFormButtonClick;\n        let inner = React.Children.map(values, (child) => {\n          return typeof child == 'string' ? child : undefined;\n        });\n        if (!inner || inner.length == 0) {\n          inner = [attr.name]\n        }\n        // Get text which will be sent back when the button is clicked.\n        attr['data-title'] = inner.join('');\n        break;\n      case 'FM':\n        // Form\n        attr.className = 'bot-form';\n        break;\n      case 'RW':\n        // Form element formatting is dependent on element content.\n        break;\n      default:\n        if (el == '_UNKN') {\n          // Unknown element.\n          // TODO: make it prettier.\n          el = <><span className=\"material-icons\">extension</span></>;\n        }\n        break;\n    }\n    return React.createElement(el, attr, values);\n  } else {\n    return values;\n  }\n};\n","// Send message form.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport { KEYPRESS_DELAY } from '../config.js';\nimport { filePasted } from '../lib/blob-helpers.js';\n\nconst messages = defineMessages({\n  'messaging_disabled': {\n    id: 'messaging_disabled_prompt',\n    defaultMessage: 'Messaging disabled',\n    description: 'Prompt in SendMessage in read-only topic'\n  },\n  'type_new_message': {\n    id: 'new_message_prompt',\n    defaultMessage: 'New message',\n    description: 'Prompt in send message field'\n  },\n  'add_image_caption': {\n    id: 'image_caption_prompt',\n    defaultMessage: 'Image caption',\n    description: 'Prompt in SendMessage for attached image'\n  },\n  'file_attachment_too_large': {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  },\n  'cannot_initiate_upload': {\n    id: 'cannot_initiate_file_upload',\n    defaultMessage: 'Cannot initiate file upload.',\n    description: 'Generic error messagewhen attachment fails'\n  },\n});\n\nclass SendMessage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      message: '',\n      // Make initial keypress time as if it happened 5001 milliseconds in the past.\n      keypressTimestamp: new Date().getTime() - KEYPRESS_DELAY - 1\n    };\n\n    this.handlePasteEvent = this.handlePasteEvent.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleSend = this.handleSend.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleMessageTyping = this.handleMessageTyping.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.addEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.removeEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.messageEditArea) {\n      this.messageEditArea.focus();\n    }\n  }\n\n  handlePasteEvent(e) {\n    if (this.props.disabled) {\n      return;\n    }\n    // FIXME: handle large files too.\n    if (filePasted(e,\n      (bits, mime, width, height, fname) => {\n        this.props.onAttachImage(mime, bits, width, height, fname);\n      },\n      (mime, bits, fname) => {\n        this.props.onAttachFile(mime, bits, fname);\n      },\n      this.props.onError)) {\n\n      // If a file was pasted, don't paste base64 data into input field.\n      e.preventDefault();\n    }\n  }\n\n  handleAttachImage(e) {\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachImage(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleAttachFile(e) {\n    const {formatMessage} = this.props.intl;\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachFile(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleSend(e) {\n    e.preventDefault();\n    const message = this.state.message.trim();\n    if (message || this.props.acceptBlank || this.props.noInput) {\n      this.props.onSendMessage(message);\n      this.setState({message: ''});\n    }\n  }\n\n  /* Send on Enter key */\n  handleKeyPress(e) {\n    // Remove this if you don't want Enter to trigger send\n    if (e.key === 'Enter') {\n      // Have Shift-Enter insert a line break instead\n      if (!e.shiftKey) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.handleSend(e);\n      }\n    }\n  }\n\n  handleMessageTyping(e) {\n    const newState = {message: e.target.value};\n    if (this.props.onKeyPress) {\n      const now = new Date().getTime();\n      if (now - this.state.keypressTimestamp > KEYPRESS_DELAY) {\n        this.props.onKeyPress();\n        newState.keypressTimestamp = now;\n      }\n    }\n    this.setState(newState);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const prompt = this.props.disabled ?\n      formatMessage(messages.messaging_disabled) :\n      (this.props.messagePrompt ?\n        formatMessage(messages[this.props.messagePrompt]) :\n        formatMessage(messages.type_new_message));\n    return (\n      <div id=\"send-message-panel\">\n        {!this.props.disabled ?\n          <>\n            {this.props.onAttachFile ?\n              <>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachImage.click();}} title=\"Add image\">\n                  <i className=\"material-icons secondary\">photo</i>\n                </a>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachFile.click();}} title=\"Attach file\">\n                  <i className=\"material-icons secondary\">attach_file</i>\n                </a>\n              </>\n              :\n              null}\n            {this.props.noInput ?\n              <div className=\"hr thin\" /> :\n              <textarea id=\"sendMessage\" placeholder={prompt}\n                value={this.state.message} onChange={this.handleMessageTyping}\n                onKeyPress={this.handleKeyPress}\n                ref={(ref) => {this.messageEditArea = ref;}}\n                autoFocus />}\n            <a href=\"#\" onClick={this.handleSend} title=\"Send\">\n              <i className=\"material-icons\">send</i>\n            </a>\n            <input type=\"file\" ref={(ref) => {this.attachFile = ref;}}\n              onChange={this.handleAttachFile} style={{display: 'none'}} />\n            <input type=\"file\" ref={(ref) => {this.attachImage = ref;}} accept=\"image/*\"\n              onChange={this.handleAttachImage} style={{display: 'none'}} />\n          </>\n          :\n          <div id=\"writing-disabled\">{prompt}</div>\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SendMessage);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { bytesToHumanSize } from '../lib/strformat.js';\n\n// Get material icon name from mime type.\nfunction iconFromMime(mime) {\n  // If more icons become available in material icons, add them to this mime-to-icon mapping.\n  const mimeToIcon = {default: 'insert_drive_file', image: 'image', text: 'description', video: 'theaters'};\n\n  return mimeToIcon[mime] || mimeToIcon[(mime || '').split('/')[0]] || mimeToIcon['default'];\n}\n\nexport default class DocPreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleSendDoc = this.handleSendDoc.bind(this);\n  }\n\n  handleSendDoc(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(this.props.content.file);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          <span>{this.props.content.filename}</span>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\">\n          <div className=\"flex-column narrow\">\n            <i className=\"material-icons gray\">{iconFromMime(this.props.content.type)}</i>\n            <div><b><FormattedMessage id=\"label_content_type\" /></b> {this.props.content.type || 'application/octet-stream'}</div>\n            <div><b><FormattedMessage id=\"label_size\" /></b> {bytesToHumanSize(this.props.content.size)}</div>\n          </div>\n        </div>\n        <SendMessage\n          noInput={true}\n          onSendMessage={this.handleSendDoc}\n          onError={this.props.onError} />\n      </div>\n    );\n  }\n};\n","// GroupSubs: a list of group subscribers currently online.\n// Show in the topic title bar\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { MAX_ONLINE_IN_TOPIC } from '../config.js'\n\nimport LetterTile from './letter-tile.jsx';\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class GroupSubs extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const usersOnline = [];\n    const totalCount = (this.props.subscribers || []).length;\n    const countToShow = Math.min(MAX_ONLINE_IN_TOPIC, totalCount);\n\n    (this.props.subscribers || []).some((sub) => {\n      usersOnline.push(\n        <div className=\"avatar-box\" key={sub.user}>\n          <LetterTile\n            topic={sub.user}\n            avatar={makeImageUrl(sub.public ? sub.public.photo : null) || true}\n            title={sub.public ? sub.public.fn : null} />\n        </div>\n      );\n      return usersOnline.length == countToShow;\n    });\n\n    return (\n      <div id=\"topic-users\">{usersOnline} {totalCount > countToShow ?\n        <span>\n          <FormattedMessage id=\"more_online_members\" defaultMessage=\"+{overflow} more\"\n              description=\"Shown in MessagesView title bar when the number of online subscribers exceeds MAX_ONLINE_IN_TOPIC\"\n              values={{ overflow: (totalCount - countToShow) }} />\n        </span> : null}\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\nimport { bytesToHumanSize } from '../lib/strformat.js';\n\nexport default class ImagePreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      width: 0,\n      height: 0\n    };\n\n    this.handleSendImage = this.handleSendImage.bind(this);\n  }\n\n  assignWidth(node) {\n    if (node && !this.state.width) {\n      const bounds = node.getBoundingClientRect();\n      this.setState({\n        width: bounds.width | 0,\n        height: bounds.height | 0\n      });\n    }\n  }\n\n  handleSendImage(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(caption, this.props.content.blob);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n\n    const dim = fitImageSize(this.props.content.width, this.props.content.height,\n      this.state.width, this.state.height, false);\n    const size = dim ? { width: dim.dstWidth + 'px', height: dim.dstHeight + 'px' } :\n      ((this.props.content.width > this.props.content.height) ? {width: '100%'} : {height: '100%'});\n    size.maxWidth = '100%';\n    size.maxHeight = '100%';\n\n    let filename = this.props.content.filename;\n    // Average font aspect ratio is ~0.5; File name takes 1/3 of the viewport width.\n    const maxlength = Math.max(((this.state.width / REM_SIZE / 1.5) | 0) - 2, 12);\n    if (filename.length > maxlength) {\n      filename = filename.slice(0, maxlength/2 - 1) + '…' + filename.slice(1 - maxlength/2);\n    }\n    const width = this.props.content.width || '-';\n    const height = this.props.content.height || '-';\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          {!this.props.onSendMessage ?\n            <a href={this.props.content.url} download={this.props.content.filename}>\n              <i className=\"material-icons\">file_download</i> <FormattedMessage\n                id=\"download_action\" defaultMessage=\"download\" description=\"Call to action [download]\" />\n            </a>\n            :\n            <span>{this.props.content.filename}</span>\n          }\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\" ref={(node) => this.assignWidth(node)}>\n          <img src={this.props.content.url} style={size} className=\"image-preview\" alt={this.props.content.filename} />\n        </div>\n        {this.props.onSendMessage ?\n          <SendMessage\n            messagePrompt=\"add_image_caption\"\n            acceptBlank={true}\n            onSendMessage={this.handleSendImage}\n            onError={this.props.onError} />\n          :\n          <div id=\"image-preview-footer\">\n            <div>\n              <div><b><FormattedMessage id=\"label_file_name\" defaultMessage=\"File name:\"\n                description=\"Label for a file name\" /></b></div>\n              <div><span title={this.props.content.filename}>{filename ? filename : '-'}</span></div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n                description=\"Label for file content type (mime)\" /></b></div>\n              <div>{this.props.content.type}</div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n                description=\"Label for file size\" /></b></div>\n              <div>{width} &times; {height} px; {bytesToHumanSize(this.props.content.size)}</div>\n            </div>\n          </div>}\n      </div>\n    );\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Invitation extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleButtonAction = this.handleButtonAction.bind(this);\n  }\n\n  handleButtonAction(evt, data) {\n    evt.preventDefault();\n    this.props.onAction(data);\n  }\n\n  render() {\n    return (\n      <div className=\"accept-invite-panel\">\n        <div className=\"title\">\n          <FormattedMessage id=\"chat_invitation\"\n            defaultMessage=\"You are invited to start a new chat. What would you like to do?\"\n            description=\"New chat invitation message: [Accept] [Ignore] [Block].\" />\n        </div>\n        <div className=\"footer\">\n          <button className=\"blue\" onClick={event => { this.handleButtonAction(event, \"accept\"); }}>\n            <FormattedMessage id=\"chat_invitation_accept\"\n              defaultMessage=\"Accept\" description=\"Action [Accept] for chat invitation.\" />\n          </button>\n          <button className=\"white\" onClick={event => { this.handleButtonAction(event, \"delete\"); }}>\n            <FormattedMessage id=\"chat_invitation_ignore\"\n              defaultMessage=\"Ignore\" description=\"Action [Ignore] for chat invitation.\" />\n          </button>\n          <button className=\"white\" onClick={event => { this.handleButtonAction(event, \"block\"); }}>\n            <FormattedMessage id=\"chat_invitation_block\"\n              defaultMessage=\"Block\" description=\"Action [Block] for chat invitation.\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nexport default class LoadSpinner extends React.PureComponent {\n  render() {\n    return (this.props.show ?\n      <div className=\"load-spinner-box\"><div className=\"loader-spinner\"></div></div> : null);\n  }\n}\n","/* This is just a static page to display when no conversation is selected. */\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME } from '../config.js';\n\nexport default class LogoView extends React.PureComponent {\n  render() {\n    const version = APP_NAME + ' (' + Tinode.getLibrary() + ')';\n    return (\n      <div id=\"dummy-view\">\n        <div>\n          <a href=\"https://github.com/tinode/chat/\">\n            <img id=\"logo\" alt=\"logo\" src=\"img/logo.svg\" />\n            <h2>Tinode Web</h2>\n          </a>\n          <p><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\" /> {version}</p>\n          <p><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\" /> {this.props.serverVersion} ({this.props.serverAddress})</p>\n        </div>\n      </div>\n    );\n  }\n};\n","// Utility class for hash navigation.\n\n// Parse hash as in http://www.example.com/path#hash as if it were\n// path and arguments.\nexport default class HashNavigation {\n  static parseUrlHash(hash) {\n    // Split path from args, path -> parts[0], args->path[1]\n    const parts = hash.split('?', 2);\n    const params = {};\n    let path = [];\n    if (parts[0]) {\n      path = parts[0].substr(1).split('/');\n    }\n    if (parts[1]) {\n      parts[1].split('&').forEach(function(part) {\n        let item = part.split('=');\n        if (item[0]) {\n          params[decodeURIComponent(item[0])] = decodeURIComponent(item[1]);\n        }\n      });\n    }\n    return {path: path, params: params};\n  }\n\n  static navigateTo(url) {\n    window.location.hash = url;\n  }\n\n  static composeUrlHash(path, params) {\n    let url = path.join('/');\n    const args = [];\n    for (const key in params) {\n      if (params.hasOwnProperty(key)) {\n        args.push(key + '=' + params[key]);\n      }\n    }\n    if (args.length > 0) {\n      url += '?' + args.join('&');\n    }\n    return url;\n  }\n\n  static addUrlParam(hash, key, value) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.params[key] = value;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static removeUrlParam(hash, key) {\n    const parsed = this.parseUrlHash(hash);\n    delete parsed.params[key];\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlSidePanel(hash, sidepanel) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[0] = sidepanel;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlTopic(hash, topic) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[1] = topic;\n    // Close InfoView on topic change.\n    delete parsed.params.info;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n}\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\nconst Drafty = Tinode.Drafty;\n\nimport ChatMessage from '../widgets/chat-message.jsx';\nimport DocPreview from '../widgets/doc-preview.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupSubs from '../widgets/group-subs.jsx';\nimport ImagePreview from '../widgets/image-preview.jsx';\nimport Invitation from '../widgets/invitation.jsx';\nimport LetterTile from '../widgets/letter-tile.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport LogoView from './logo-view.jsx';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { DEFAULT_P2P_ACCESS_MODE, IMAGE_PREVIEW_DIM, KEYPRESS_DELAY, MESSAGES_PAGE,\n  MAX_EXTERN_ATTACHMENT_SIZE, MAX_IMAGE_DIM, MAX_INBAND_ATTACHMENT_SIZE, READ_DELAY } from '../config.js';\nimport { SUPPORTED_IMAGE_FORMATS, blobToBase64, filePasted, fileToBase64,\n  imageScaled, makeImageUrl } from '../lib/blob-helpers.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { bytesToHumanSize, shortDateFormat } from '../lib/strformat.js';\n\n// Run timer with this frequency (ms) for checking notification queue.\nconst NOTIFICATION_EXEC_INTERVAL = 300;\n\nconst messages = defineMessages({\n  'online_now': {\n    id: 'online_now',\n    defaultMessage: 'online now',\n    description: 'Indicator that the user or topic is currently online',\n  },\n  'last_seen': {\n    id: 'last_seen_timestamp',\n    defaultMessage: 'Last seen',\n    description: 'Label for the timestamp of when the user or topic was last online'\n  },\n  'not_found': {\n    id: 'title_not_found',\n    defaultMessage: 'Not found',\n    description: 'Title shown when topic is not found'\n  },\n  'channel': {\n    id: 'channel',\n    defaultMessage: 'channel',\n    description: 'Subtitle shown for channels in MessagesView instead of last seen'\n  }\n});\n\n// Checks if the access permissions are granted but not yet accepted.\nfunction isUnconfirmed(acs) {\n  if (acs) {\n    const ex = acs.getExcessive() || '';\n    return acs.isJoiner('given') && (ex.includes('R') || ex.includes('W'));\n  }\n  return false;\n}\n\nfunction isPeerRestricted(acs) {\n  if (acs) {\n    const ms = acs.getMissing() || '';\n    return acs.isJoiner('want') && (ms.includes('R') || ms.includes('W'));\n  }\n  return false;\n}\n\nclass MessagesView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = MessagesView.getDerivedStateFromProps(props, {});\n\n    this.leave = this.leave.bind(this);\n    this.sendImageAttachment = this.sendImageAttachment.bind(this);\n    this.sendFileAttachment = this.sendFileAttachment.bind(this);\n    this.sendKeyPress = this.sendKeyPress.bind(this);\n    this.handleScrollReference = this.handleScrollReference.bind(this);\n    this.handleScrollEvent = this.handleScrollEvent.bind(this);\n    this.handleDescChange = this.handleDescChange.bind(this);\n    this.handleSubsUpdated = this.handleSubsUpdated.bind(this);\n    this.handleNewMessage = this.handleNewMessage.bind(this);\n    this.handleAllMessagesReceived = this.handleAllMessagesReceived.bind(this);\n    this.handleInfoReceipt = this.handleInfoReceipt.bind(this);\n    this.handleImagePostview = this.handleImagePostview.bind(this);\n    this.handleClosePreview = this.handleClosePreview.bind(this);\n    this.handleFormResponse = this.handleFormResponse.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleShowContextMenuMessage = this.handleShowContextMenuMessage.bind(this);\n    this.handleNewChatAcceptance = this.handleNewChatAcceptance.bind(this);\n    this.handleEnablePeer = this.handleEnablePeer.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n    this.postReadNotification = this.postReadNotification.bind(this);\n    this.clearNotificationQueue = this.clearNotificationQueue.bind(this);\n\n    this.readNotificationQueue = [];\n    this.readNotificationTimer = null;\n  }\n\n  componentDidMount() {\n    // this.propsChange(this.props, this.state);\n    if (this.messagesScroller) {\n      this.messagesScroller.addEventListener('scroll', this.handleScrollEvent);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messagesScroller) {\n      this.messagesScroller.removeEventListener('scroll', this.handleScrollEvent);\n    }\n\n    // Flush all notifications.\n    this.clearNotificationQueue();\n  }\n\n  // Scroll last message into view on component update e.g. on message received\n  // or vertical shrinking.\n  componentDidUpdate(prevProps, prevState) {\n    if (this.messagesScroller) {\n      if (prevState.topic != this.state.topic || prevState.messages.length != this.state.messages.length) {\n        // New message\n        this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n      } else if (prevProps.viewportHeight > this.props.viewportHeight) {\n        // Componet changed height.\n        this.messagesScroller.scrollTop += prevProps.viewportHeight - this.props.viewportHeight;\n      }\n    }\n\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (this.state.topic != prevState.topic) {\n      if (prevState.topic && !Tinode.isNewGroupTopicName(prevState.topic)) {\n        this.leave(prevState.topic);\n      }\n\n      if (topic) {\n        topic.onData = this.handleNewMessage;\n        topic.onAllMessagesReceived = this.handleAllMessagesReceived;\n        topic.onInfo = this.handleInfoReceipt;\n        topic.onMetaDesc = this.handleDescChange;\n        topic.onSubsUpdated = this.handleSubsUpdated;\n        topic.onPres = this.handleSubsUpdated;\n      }\n    }\n\n    if (!this.props.applicationVisible) {\n      // If application is not visible, flush all unsent 'read' notifications.\n      this.clearNotificationQueue();\n    } else {\n      // Otherwise assume there are unread messages.\n      this.postReadNotification(0);\n    }\n\n    if (topic && !topic.isSubscribed() && this.props.ready &&\n        ((this.state.topic != prevState.topic) || !prevProps.ready)) {\n      // Is this a new topic?\n      const newTopic = (this.props.newTopicParams && this.props.newTopicParams._topicName == this.props.topic);\n\n      // Don't request the tags. They are useless unless the user\n      // is the owner and is editing the topic.\n      let getQuery = topic.startMetaQuery().withLaterDesc().withLaterSub();\n      if (this.state.isReader || newTopic) {\n        // Reading is either permitted or we don't know because it's a new topic. Ask for messages.\n        getQuery = getQuery.withLaterData(MESSAGES_PAGE);\n        if (this.state.isReader) {\n          getQuery = getQuery.withLaterDel();\n        }\n        // And show \"loading\" spinner.\n        this.setState({ fetchingMessages: true });\n      }\n      const setQuery = newTopic ? this.props.newTopicParams : undefined;\n      topic.subscribe(getQuery.build(), setQuery)\n        .then((ctrl) => {\n          if (ctrl.code == 303) {\n            // Redirect to another topic requested.\n            HashNavigation.navigateTo(HashNavigation.setUrlTopic('', ctrl.params.topic));\n            return;\n          }\n          if (this.state.topic != ctrl.topic) {\n            this.setState({topic: ctrl.topic});\n          }\n          this.props.onNewTopicCreated(this.props.topic, ctrl.topic);\n          // If there are unsent messages, try sending them now.\n          topic.queuedMessages((pub) => {\n            if (!pub._sending && topic.isSubscribed()) {\n              topic.publishMessage(pub);\n            }\n          });\n        })\n        .catch((err) => {\n          console.log(\"Failed subscription to\", this.state.topic);\n          this.props.onError(err.message, 'err');\n          const blankState = MessagesView.getDerivedStateFromProps({}, {});\n          blankState.title = this.props.intl.formatMessage(messages.not_found);\n          this.setState(blankState);\n        });\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let nextState = {};\n    if (!nextProps.topic) {\n      // Default state: no topic.\n      nextState = {\n        messages: [],\n        onlineSubs: [],\n        topic: null,\n        title: '',\n        avatar: null,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false,\n        peerMessagingDisabled: false,\n        channel: false\n      };\n    } else if (nextProps.topic != prevState.topic) {\n      const topic = nextProps.tinode.getTopic(nextProps.topic);\n      nextState = {\n        topic: nextProps.topic,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false\n      };\n\n      if (topic) {\n        // Topic exists.\n        const msgs = [];\n        const subs = [];\n\n        if (nextProps.connected) {\n          topic.subscribers((sub) => {\n            if (sub.online && sub.user != nextProps.myUserId) {\n              subs.push(sub);\n            }\n          });\n        }\n\n        topic.messages(function(msg) {\n          if (!msg.deleted) {\n            msgs.push(msg);\n          }\n        });\n\n        Object.assign(nextState, {\n          messages: msgs,\n          onlineSubs: subs\n        });\n\n        if (topic.public) {\n          Object.assign(nextState, {\n            title: topic.public.fn,\n            avatar: makeImageUrl(topic.public.photo)\n          });\n        } else {\n          Object.assign(nextState, {\n            title: '',\n            avatar: null\n          });\n        }\n\n        const peer = topic.p2pPeerDesc();\n        if (peer) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: isPeerRestricted(peer.acs)\n          });\n        } else if (prevState.peerMessagingDisabled) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: false\n          });\n        }\n        Object.assign(nextState, {\n          channel: topic.isChannelType()\n        });\n      } else {\n        // Invalid topic.\n        Object.assign(nextState, {\n          messages: [],\n          onlineSubs: [],\n          title: '',\n          avatar: null,\n          peerMessagingDisabled: false,\n          channel: false\n        });\n      }\n    }\n\n    if (nextProps.acs) {\n      if (nextProps.acs.isWriter() != prevState.isWriter) {\n        nextState.isWriter = !prevState.isWriter;\n      }\n      if (nextProps.acs.isReader() != prevState.isReader) {\n        nextState.isReader = !prevState.isReader;\n      }\n      if (!nextProps.acs.isReader('given') != prevState.readingBlocked) {\n        nextState.readingBlocked = !prevState.readingBlocked;\n      }\n      if (nextProps.acs.isSharer() != prevState.isSharer) {\n        nextState.isSharer = !prevState.isSharer;\n      }\n    } else {\n      if (prevState.isWriter) {\n        nextState.isWriter = false;\n      }\n      if (prevState.isReader) {\n        nextState.isReader = false;\n      }\n      if (!prevState.readingBlocked) {\n        prevState.readingBlocked = true;\n      }\n      if (prevState.isSharer) {\n        nextState.isSharer = false;\n      }\n    }\n\n    if (isUnconfirmed(nextProps.acs) == !prevState.unconformed) {\n      nextState.unconfirmed = !prevState.unconformed;\n    }\n\n    // Clear subscribers online when there is no connection.\n    if (!nextProps.connected && prevState.onlineSubs && prevState.onlineSubs.length > 0) {\n      nextState.onlineSubs = [];\n    }\n\n    return nextState;\n  }\n\n  leave(oldTopicName) {\n    if (!oldTopicName) {\n      return;\n    }\n    let oldTopic = this.props.tinode.getTopic(oldTopicName);\n    if (oldTopic && oldTopic.isSubscribed()) {\n      oldTopic.leave(false)\n        .catch(() => { /* do nothing here */ })\n        .finally(() => {\n          // We don't care if the request succeeded or failed.\n          // The topic is dead regardless.\n          this.setState({fetchingMessages: false});\n          oldTopic.onData = undefined;\n          oldTopic.onAllMessagesReceived = undefined;\n          oldTopic.onInfo = undefined;\n          oldTopic.onMetaDesc = undefined;\n          oldTopic.onSubsUpdated = undefined;\n          oldTopic.onPres = undefined;\n        });\n    }\n  }\n\n  handleScrollReference(node) {\n    if (node) {\n      node.addEventListener('scroll', this.handleScrollEvent);\n      this.messagesScroller = node;\n      this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n    }\n  }\n\n  // Get older messages\n  handleScrollEvent(event) {\n    this.setState({scrollPosition: event.target.scrollHeight - event.target.scrollTop});\n    if (event.target.scrollTop <= 0) {\n      this.setState((prevState, props) => {\n        const newState = {};\n        if (!prevState.fetchingMessages) {\n          const topic = this.props.tinode.getTopic(this.state.topic);\n          if (topic && topic.isSubscribed() && topic.msgHasMoreMessages()) {\n            newState.fetchingMessages = true;\n            topic.getMessagesPage(MESSAGES_PAGE).catch((err) => {\n              this.setState({fetchingMessages: false});\n              this.props.onError(err.message, 'err');\n            });\n          }\n        }\n        return newState;\n      });\n    }\n  }\n\n  handleDescChange(desc) {\n    if (desc.public) {\n      this.setState({\n        title: desc.public.fn,\n        avatar: makeImageUrl(desc.public.photo)\n      });\n    } else {\n      this.setState({\n        title: '',\n        avatar: null\n      });\n    }\n\n    if (desc.acs) {\n      this.setState({\n        isWriter: desc.acs.isWriter(),\n        isReader: desc.acs.isReader(),\n        readingBlocked: !desc.acs.isReader('given'),\n        unconfirmed: isUnconfirmed(desc.acs),\n      });\n    }\n  }\n\n  postReadNotification(seq) {\n    // Ignore notifications if the app is invisible.\n    if (!this.props.applicationVisible) {\n      return;\n    }\n\n    // Set up the timer if it's not running already.\n    if (!this.readNotificationTimer) {\n      this.readNotificationTimer = setInterval(() => {\n        if (this.readNotificationQueue.length == 0) {\n          // Shut down the timer if the queue is empty.\n          clearInterval(this.readNotificationTimer);\n          this.readNotificationTimer = null;\n          return;\n        }\n\n        let seq = -1;\n        while (this.readNotificationQueue.length > 0) {\n          const n = this.readNotificationQueue[0];\n          if (n.topicName != this.state.topic) {\n            // Topic has changed. Drop the notification.\n            this.readNotificationQueue.shift();\n            continue;\n          }\n\n          const now = new Date();\n          if (n.sendAt <= now) {\n            // Remove expired notification from queue.\n            this.readNotificationQueue.shift();\n            seq = Math.max(seq, n.seq);\n          } else {\n            break;\n          }\n        }\n\n        // Send only one notification for the whole batch of messages.\n        if (seq >= 0) {\n          const topic = this.props.tinode.getTopic(this.state.topic);\n          if (topic) {\n            topic.noteRead(seq);\n          }\n        }\n      }, NOTIFICATION_EXEC_INTERVAL);\n    }\n\n    const now = new Date();\n    this.readNotificationQueue.push({\n      topicName: this.state.topic,\n      seq: seq,\n      sendAt: now.setMilliseconds(now.getMilliseconds() + READ_DELAY)\n    });\n  }\n\n  // Clear notification queue and timer.\n  clearNotificationQueue() {\n    this.readNotificationQueue = [];\n    if (this.readNotificationTimer) {\n      clearInterval(this.readNotificationTimer);\n      this.readNotificationTimer = null;\n    }\n  }\n\n  handleSubsUpdated() {\n    if (this.state.topic) {\n      const subs = [];\n      const topic = this.props.tinode.getTopic(this.state.topic);\n      topic.subscribers((sub) => {\n        if (sub.online && sub.user != this.props.myUserId) {\n          subs.push(sub);\n        }\n      });\n      const newState = {onlineSubs: subs};\n      const peer = topic.p2pPeerDesc();\n      if (peer) {\n        Object.assign(newState, {\n          peerMessagingDisabled: isPeerRestricted(peer.acs)\n        });\n      } else if (this.state.peerMessagingDisabled) {\n        Object.assign(newState, {\n          peerMessagingDisabled: false\n        });\n      }\n      this.setState(newState);\n    }\n  }\n\n  handleNewMessage(msg) {\n    // Regenerate messages list\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    const newState = {messages: []};\n    topic.messages((m) => {\n      if (!m.deleted) {\n        newState.messages.push(m);\n      }\n    });\n\n    // msg could be null if one or more messages were deleted.\n    if (msg && !msg.deleted) {\n      // If the message is added to the end of the message list,\n      // scroll to the bottom.\n      if (topic.isNewMessage(msg.seq)) {\n        newState.scrollPosition = 0;\n      }\n\n      // Aknowledge messages except own messages. They are\n      // automatically assumed to be read and recived.\n      const status = topic.msgStatus(msg);\n      if (status >= Tinode.MESSAGE_STATUS_SENT && msg.from != this.props.myUserId) {\n        this.postReadNotification(msg.seq);\n      }\n      this.props.onData(msg);\n    }\n    this.setState(newState);\n  }\n\n  handleAllMessagesReceived(count) {\n    this.setState({fetchingMessages: false});\n    if (count > 0) {\n      // 0 means \"latest\".\n      this.postReadNotification(0);\n    }\n  }\n\n  handleInfoReceipt(info) {\n    switch (info.what) {\n      case 'kp': {\n        clearTimeout(this.keyPressTimer);\n        var instance = this;\n        this.keyPressTimer = setTimeout(function() {\n          instance.setState({typingIndicator: false});\n        }, KEYPRESS_DELAY + 1000);\n        if (!this.state.typingIndicator) {\n          this.setState({typingIndicator: true});\n        }\n        break;\n      }\n      case 'read':\n      case 'recv':\n        // Redraw due to changed recv/read status.\n        this.forceUpdate();\n        break;\n      default:\n        console.log(\"Other change in topic: \", info.what);\n    }\n  }\n\n  handleImagePostview(content) {\n    this.setState({ imagePostview: content });\n  }\n\n  handleClosePreview() {\n    if (this.state.imagePreview && this.state.imagePreview.url) {\n      URL.revokeObjectURL(this.state.imagePreview.url);\n    }\n    this.setState({ imagePostview: null, imagePreview: null, docPreview: null });\n  }\n\n  handleFormResponse(action, text, data) {\n    if (action == 'pub') {\n      this.props.sendMessage(Drafty.attachJSON(Drafty.parse(text), data));\n    } else if (action == 'url') {\n      const url = new URL(data.ref);\n      const params = url.searchParams;\n      for (let key in data.resp) {\n        if (data.resp.hasOwnProperty(key)) {\n          params.set(key, data.resp[key]);\n        }\n      }\n      ['name', 'seq'].map(function(key) {\n        if (data[key]) {\n          params.set(key, data[key]);\n        }\n      });\n      params.set('uid', this.props.myUserId);\n      url.search = params;\n      window.open(url, '_blank');\n    } else {\n      console.log(\"Unknown action in form\", action);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.state.topic, y: e.pageY, x: e.pageX });\n  }\n\n  handleShowContextMenuMessage(params, messageSpecificMenuItems) {\n    params.topicName = this.state.topic;\n    const menuItems = messageSpecificMenuItems || [];\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (topic) {\n      if (!topic.isChannelType()) {\n        menuItems.push('message_delete');\n      }\n      const acs = topic.getAccessMode();\n      if (acs && acs.isDeleter()) {\n        menuItems.push('message_delete_hard');\n      }\n    }\n    this.props.showContextMenu(params, menuItems);\n  }\n\n  handleNewChatAcceptance(action) {\n    this.props.onNewChat(this.state.topic, action);\n  }\n\n  handleEnablePeer(e) {\n    e.preventDefault();\n    this.props.onChangePermissions(this.state.topic, DEFAULT_P2P_ACCESS_MODE, this.state.topic);\n  }\n\n  sendKeyPress() {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (topic.isSubscribed()) {\n      topic.noteKeyPress();\n    }\n  }\n\n  // Send attachment as Drafty message:\n  // - if file is too large, upload it and send a s link.\n  // - if file is small enough, just send it in-band.\n  sendFileAttachment(file) {\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (file.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      if (!uploader) {\n        this.props.onError(this.props.intl.formatMessage(messages.cannot_initiate_upload));\n        return;\n      }\n      const uploadCompletionPromise = uploader.upload(file);\n      const msg = Drafty.attachFile(null, {\n        mime: file.type,\n        filename: file.name,\n        size: file.size,\n        urlPromise: uploadCompletionPromise\n      });\n      // Pass data and the uploader to the TinodeWeb.\n      this.props.sendMessage(msg, uploadCompletionPromise, uploader);\n    } else {\n      // Small enough to send inband.\n      fileToBase64(file,\n        (mime, bits, fname) => {\n          this.props.sendMessage(Drafty.attachFile(null, {mime: mime, data: bits, filename: fname}));\n        },\n        this.props.onError\n      );\n    }\n  }\n\n  // handleAttachFile method is called when [Attach file] button is clicked.\n  handleAttachFile(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    if (file.size > maxExternAttachmentSize) {\n      // Too large.\n      this.props.onError(this.props.intl.formatMessage({id: 'file_attachment_too_large'},\n          {size: bytesToHumanSize(file.size), limit: bytesToHumanSize(maxExternAttachmentSize)}), 'err');\n    } else {\n      this.setState({ docPreview: {\n        file: file,\n        filename: file.name,\n        size: file.size,\n        type: file.type\n      }});\n    }\n  }\n\n  // sendImageAttachment sends the image bits inband as Drafty message.\n  sendImageAttachment(caption, blob) {\n    const mime = this.state.imagePreview.type;\n    const width = this.state.imagePreview.width;\n    const height = this.state.imagePreview.height;\n    const fname = this.state.imagePreview.filename;\n\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (blob.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      if (!uploader) {\n        this.props.onError(this.props.intl.formatMessage(messages.cannot_initiate_upload));\n        return;\n      }\n      const uploadCompletionPromise = uploader.upload(blob);\n\n      // Make small preview to show while uploading.\n      imageScaled(blob, IMAGE_PREVIEW_DIM, IMAGE_PREVIEW_DIM, -1, false,\n        (tinyBlob) => {\n          // Convert tiny image into base64 for serialization and previewing.\n          blobToBase64(tinyBlob, (blobMime, tinyBits64) => {\n            let msg = Drafty.insertImage(null, 0, {\n              mime: mime,\n              _tempPreview: tinyBits64, // This preview will not be serialized.\n              width: width,\n              height: height,\n              filename: fname,\n              size: blob.size,\n              urlPromise: uploadCompletionPromise\n            });\n            if (caption) {\n              msg = Drafty.appendLineBreak(msg);\n              msg = Drafty.append(msg, Drafty.init(caption));\n            }\n            // Pass data and the uploader to the TinodeWeb.\n            this.props.sendMessage(msg, uploadCompletionPromise, uploader);\n          }\n        )},\n        // Failure\n        (err) => {\n          this.props.onError(err, 'err');\n        }\n      );\n      return;\n    }\n\n    // Upload the image if it's too big to be send inband.\n    blobToBase64(blob, (blobMime, bits64) => {\n      let msg = Drafty.insertImage(null, 0, {\n        mime: blobMime,\n        preview: bits64, // Serializable preview\n        width: width,\n        height: height,\n        filename: fname,\n        size: blob.size\n      });\n      if (caption) {\n        msg = Drafty.appendLineBreak(msg);\n        msg = Drafty.append(msg, Drafty.init(caption));\n      }\n      this.props.sendMessage(msg);\n    });\n  }\n\n  // handleAttachImage method is called when [Attach image] button is clicked.\n  handleAttachImage(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    // Get image dimensions and size, optionally scale it down.\n    imageScaled(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, maxExternAttachmentSize, false,\n      // Success\n      (blob, mime, width, height, fname) => {\n        this.setState({imagePreview: {\n          url: URL.createObjectURL(blob),\n          blob: blob,\n          filename: fname,\n          width: width,\n          height: height,\n          size: blob.size,\n          type: mime\n        }});\n      },\n      // Failure\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    );\n  }\n\n  handleCancelUpload(seq, uploader) {\n    const found = this.state.messages.find(msg => msg.seq == seq);\n    if (found) {\n      found._cancelled = true;\n    }\n    uploader.cancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n\n    let component;\n    if (this.props.hideSelf) {\n      component = null;\n    } else if (!this.state.topic) {\n      component = (\n        <LogoView\n          serverVersion={this.props.serverVersion}\n          serverAddress={this.props.serverAddress} />\n      );\n    } else {\n      let component2;\n      if (this.state.imagePreview) {\n        // Preview image before sending.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePreview}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendImageAttachment} />\n        );\n      } else if (this.state.imagePostview) {\n        // Expand received image.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePostview}\n            onClose={this.handleClosePreview} />\n        );\n      } else if (this.state.docPreview) {\n        // Preview attachment before sending.\n        component2 = (\n          <DocPreview\n            content={this.state.docPreview}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendFileAttachment} />\n        );\n      } else {\n        const topic = this.props.tinode.getTopic(this.state.topic);\n        const isChannel = topic.isChannelType();\n        const groupTopic = topic.isGroupType() && !isChannel;\n        let messageNodes = [];\n        let previousFrom = null;\n        let chatBoxClass = null;\n        for (let i=0; i<this.state.messages.length; i++) {\n          let msg = this.state.messages[i];\n          let nextFrom = null;\n\n          if (i + 1 < this.state.messages.length) {\n            nextFrom = this.state.messages[i+1].from || 'chan';\n          }\n\n          let sequence = 'single';\n          let thisFrom = msg.from || 'chan';\n          if (thisFrom == previousFrom) {\n            if (thisFrom == nextFrom) {\n              sequence = 'middle';\n            } else {\n              sequence = 'last';\n            }\n          } else if (thisFrom == nextFrom) {\n            sequence = 'first';\n          }\n          previousFrom = thisFrom;\n\n          const isReply = !(thisFrom == this.props.myUserId);\n          const deliveryStatus = topic.msgStatus(msg);\n\n          let userName, userAvatar, userFrom;\n          if (groupTopic) {\n            const user = topic.userDesc(thisFrom);\n            if (user && user.public) {\n              userName = user.public.fn;\n              userAvatar = makeImageUrl(user.public.photo);\n            }\n            userFrom = thisFrom;\n            chatBoxClass='chat-box group';\n          } else {\n            chatBoxClass='chat-box';\n          }\n\n          messageNodes.push(\n            <ChatMessage\n              tinode={this.props.tinode}\n              content={msg.content}\n              deleted={msg.hi}\n              mimeType={msg.head ? msg.head.mime : null}\n              timestamp={msg.ts}\n              response={isReply}\n              seq={msg.seq}\n              userFrom={userFrom}\n              userName={userName}\n              userAvatar={userAvatar}\n              sequence={sequence}\n              received={deliveryStatus}\n              uploader={msg._uploader}\n              viewportWidth={this.props.viewportWidth}\n              showContextMenu={this.state.channel? false : this.handleShowContextMenuMessage}\n              onImagePreview={this.handleImagePostview}\n              onFormResponse={this.handleFormResponse}\n              onError={this.props.onError}\n              onCancelUpload={this.handleCancelUpload}\n              key={msg.seq} />\n          );\n        }\n\n        let lastSeen = null;\n        if (isChannel) {\n          lastSeen = formatMessage(messages.channel);\n        } else {\n          const cont = this.props.tinode.getMeTopic().getContact(this.state.topic);\n          if (cont && Tinode.isP2PTopicName(cont.topic)) {\n            if (cont.online) {\n              lastSeen = formatMessage(messages.online_now);\n            } else if (cont.seen) {\n              lastSeen = formatMessage(messages.last_seen) + \": \" +\n                shortDateFormat(cont.seen.when, this.props.intl.locale);\n              // TODO: also handle user agent in c.seen.ua\n            }\n          }\n        }\n        const avatar = this.state.avatar || true;\n        const online = this.props.online ? 'online' + (this.state.typingIndicator ? ' typing' : '') : 'offline';\n\n        component2 = (\n          <>\n            <div id=\"topic-caption-panel\" className=\"caption-panel\">\n              {this.props.displayMobile ?\n                <a href=\"#\" id=\"hide-message-view\" onClick={(e) => {e.preventDefault(); this.props.onHideMessagesView();}}>\n                  <i className=\"material-icons\">arrow_back</i>\n                </a>\n                :\n                null}\n              <div className=\"avatar-box\">\n                <LetterTile\n                  avatar={avatar}\n                  topic={this.state.topic}\n                  title={this.state.title} />\n                {!isChannel ? <span className={online} /> : null}\n              </div>\n              <div id=\"topic-title-group\">\n                <div id=\"topic-title\" className=\"panel-title\">{\n                  this.state.title ||\n                  <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n                    description=\"Title shown when the topic has no name\" /></i>\n                }</div>\n                <div id=\"topic-last-seen\">{lastSeen}</div>\n              </div>\n              {groupTopic ?\n                <GroupSubs\n                  subscribers={this.state.onlineSubs} /> :\n                <div id=\"topic-users\" />\n              }\n              <div>\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">more_vert</i>\n                </a>\n              </div>\n            </div>\n            {this.props.displayMobile ?\n              <ErrorPanel\n                level={this.props.errorLevel}\n                text={this.props.errorText}\n                onClearError={this.props.onError} />\n              : null}\n            <LoadSpinner show={this.state.fetchingMessages} />\n            <div id=\"messages-container\">\n              <div id=\"messages-panel\" ref={this.handleScrollReference}>\n                <ul id=\"scroller\" className={chatBoxClass}>\n                  {messageNodes}\n                </ul>\n              </div>\n              {!this.state.isReader ?\n              <div id=\"write-only-background\">\n                {this.state.readingBlocked ?\n                <div id=\"write-only-note\">\n                  <FormattedMessage id=\"messages_not_readable\" defaultMessage=\"no access to messages\"\n                    description=\"Message shown in topic without the read access\" />\n                </div>\n                : null }\n              </div>\n              : null }\n            </div>\n            {this.state.peerMessagingDisabled && !this.state.unconfirmed ?\n              <div id=\"peer-messaging-disabled-note\">\n                <i className=\"material-icons secondary\">block</i> <FormattedMessage\n                  id=\"peers_messaging_disabled\" defaultMessage=\"Peer's messaging is disabled.\"\n                  description=\"Shown when the p2p peer's messaging is disabled\" /> <a href=\"#\"\n                    onClick={this.handleEnablePeer}><FormattedMessage id=\"enable_peers_messaging\"\n                    defaultMessage=\"Enable\" description=\"Call to action to enable peer's messaging\" /></a>.\n              </div> : null}\n            {this.state.unconfirmed ?\n              <Invitation onAction={this.handleNewChatAcceptance} />\n              :\n              <SendMessage\n                disabled={!this.state.isWriter}\n                onSendMessage={this.props.sendMessage}\n                onKeyPress={this.sendKeyPress}\n                onAttachFile={this.handleAttachFile}\n                onAttachImage={this.handleAttachImage}\n                onError={this.props.onError} />}\n          </>\n        );\n      }\n\n      component = <div id=\"topic-view\">{component2}</div>\n    }\n    return component;\n  }\n};\n\nexport default injectIntl(MessagesView);\n","// The <- button to be displayed in title bars.\nimport React from 'react';\n\nexport default class ButtonBack extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onBack();}}>\n        <i className=\"material-icons\">arrow_back</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class MenuContacts extends React.PureComponent {\n  render() {\n    return (\n      <div>\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onNewTopic();}}><i className=\"material-icons\">chat</i></a>\n        &nbsp;\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nexport default class MenuStart extends React.PureComponent {\n  render() {\n    return (\n        <div>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSignUp();}}><i className=\"material-icons\">person_add</i></a>\n          &nbsp;\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n        </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\nimport ButtonBack from './button-back.jsx';\nimport MenuContacts from './menu-contacts.jsx';\nimport MenuStart from './menu-start.jsx';\n\nexport default class SideNavbar extends React.PureComponent {\n  render() {\n    return (\n        <div id=\"side-caption-panel\" className=\"caption-panel\">\n          {this.props.onCancel ? <ButtonBack onBack={this.props.onCancel} /> : null}\n          {this.props.avatar ?\n            <div id=\"self-avatar\" className=\"avatar-box\">\n              <LetterTile\n                avatar={this.props.avatar}\n                topic={this.props.myUserId}\n                title={this.props.title} />\n            </div>\n            :\n            null}\n          <div id=\"sidepanel-title\" className=\"panel-title\">{this.props.title}</div>\n          {this.props.state === 'login' ?\n              <MenuStart onSignUp={this.props.onSignUp} onSettings={this.props.onSettings} /> :\n            this.props.state === 'contacts' ?\n              <MenuContacts onNewTopic={this.props.onNewTopic} onSettings={this.props.onSettings} /> :\n            null}\n        </div>\n    );\n  }\n};\n","/* ContactsView holds all contacts-related stuff */\nimport React from 'react';\nimport { FormattedMessage, defineMessages } from 'react-intl';\n\nimport ContactList from '../widgets/contact-list.jsx';\n\nimport { updateFavicon } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  archived_contacts_title: {\n    id: \"archived_contacts\",\n    defaultMessage: \"Archived contacts ({count})\",\n    description: \"Label for archived chats\"\n  }\n});\n\nexport default class ContactsView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAction = this.handleAction.bind(this);\n\n    this.state = ContactsView.deriveStateFromProps(props);\n  }\n\n  static deriveStateFromProps(props) {\n    const contacts = [];\n    let unreadThreads = 0;\n    let archivedCount = 0;\n    props.chatList.map((c) => {\n      const blocked = c.acs && !c.acs.isJoiner();\n      // Show only blocked contacts only when props.blocked == true.\n      if (blocked && props.blocked) {\n        contacts.push(c);\n      }\n      if (blocked || props.blocked) {\n        return;\n      }\n\n      if (c.private && c.private.arch) {\n        if (props.archive) {\n          contacts.push(c);\n        } else {\n          archivedCount ++;\n        }\n      } else if (!props.archive) {\n        contacts.push(c);\n        unreadThreads += c.unread > 0 ? 1 : 0;\n      }\n    });\n\n    contacts.sort((a, b) => {\n      return (b.touched || 0) - (a.touched || 0);\n    });\n\n    if (archivedCount > 0) {\n      contacts.push({\n        action: 'archive',\n        title: messages.archived_contacts_title,\n        values: {count: archivedCount}\n      });\n    }\n\n    return {\n      contactList: contacts,\n      unreadThreads: unreadThreads\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chatList != this.props.chatList ||\n        prevProps.archive != this.props.archive ||\n        prevProps.blocked != this.props.blocked) {\n      const newState = ContactsView.deriveStateFromProps(this.props);\n      this.setState(newState);\n      if (newState.unreadThreads != prevState.unreadThreads) {\n        updateFavicon(newState.unreadThreads);\n      }\n    }\n  }\n\n  handleAction(action_ignored) {\n    this.props.onShowArchive();\n  }\n\n  render() {\n    return (\n      <FormattedMessage id=\"contacts_not_found\"\n        defaultMessage=\"You have no chats<br />¯∖_(ツ)_/¯\"\n        description=\"HTML message shown in ContactList when no contacts are found\">{\n        (no_contacts) => <ContactList\n          connected={this.props.connected}\n          contacts={this.state.contactList}\n          emptyListMessage={no_contacts}\n          topicSelected={this.props.topicSelected}\n          myUserId={this.props.myUserId}\n          showOnline={true}\n          showUnread={true}\n          onTopicSelected={this.props.onTopicSelected}\n          showContextMenu={this.props.showContextMenu}\n          onAction={this.handleAction} />\n      }</FormattedMessage>\n    );\n  }\n};\n","// Helper functions for storing values in localStorage.\n// By default localStorage can store only strings, not objects or other types.\n\nexport default class LocalStorageUtil {\n  // Replace old object with the new one.\n  static setObject(key, value) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n\n  // Get stored object.\n  static getObject(key) {\n    const value = localStorage.getItem(key);\n    return value && JSON.parse(value);\n  }\n\n  // Partially or wholly update stored object.\n  static updateObject(key, value) {\n    const oldVal = this.getObject(key);\n    this.setObject(key, Object.assign(oldVal || {}, value));\n  }\n\n  // Just a wrapper.\n  static removeItem(key) {\n    localStorage.removeItem(key);\n  }\n}\n","// Account registration.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport { vcard } from '../lib/utils.js';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class CreateAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: '',\n      password: '',\n      email: '',\n      fn: '', // full/formatted name\n      imageDataUrl: null,\n      errorCleared: false,\n      saveToken: LocalStorageUtil.getObject('keep-logged-in')\n    };\n\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(password) {\n    this.setState({password: password});\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value})\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleToggleSaveToken() {\n    LocalStorageUtil.setObject('keep-logged-in', !this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({errorCleared: false});\n    this.props.onCreateAccount(\n      this.state.login.trim(),\n      this.state.password.trim(),\n      vcard(this.state.fn.trim().substring(0, MAX_TITLE_LENGTH), this.state.imageDataUrl),\n      {'meth': 'email', 'val': this.state.email});\n  }\n\n  render() {\n    let submitClasses = 'blue';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form className=\"panel-form-column\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <FormattedMessage id=\"login_prompt\">{\n              (login_prompt) => <input type=\"text\" placeholder={login_prompt} autoComplete=\"user-name\"\n                value={this.state.login} onChange={this.handleLoginChange} required autoFocus />\n            }</FormattedMessage>\n            <FormattedMessage id=\"password_prompt\">{\n              (password_prompt) => <VisiblePassword placeholder={password_prompt} autoComplete=\"new-password\"\n                value={this.state.password} onFinished={this.handlePasswordChange}\n                required={true} />\n            }</FormattedMessage>\n          </div>\n          <AvatarUpload\n            onImageChanged={this.handleImageChanged}\n            onError={this.props.onError} />\n        </div>\n        <div  className=\"panel-form-row\">\n          <FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n            description=\"Input placeholder for person's full name\">{\n            (full_name_prompt) => <input type=\"text\" placeholder={full_name_prompt} autoComplete=\"name\"\n              value={this.state.fn} onChange={this.handleFnChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <FormattedMessage id=\"email_prompt\" defaultMessage=\"Email, e.g. jdoe@example.com\"\n            description=\"Input placeholder for email entry\">{\n            (email_prompt) => <input type=\"email\" placeholder={email_prompt} autoComplete=\"email\"\n              value={this.state.email} onChange={this.handleEmailChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <FormattedMessage id=\"stay_logged_in\">{\n            (stay_logged_in) => <label htmlFor=\"save-token\">&nbsp;{stay_logged_in}</label>\n          }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_up\" defaultMessage=\"Sign up\"\n              description=\"Create account button [Sign Up]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class EditAccountView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    this.state = {\n      fullName: me.public ? me.public.fn : undefined,\n      avatar: makeImageUrl(me.public ? me.public.photo : null)\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n                description=\"Label for full name editing\" />\n            </label>\n            <div className=\"large\">{this.state.fullName}</div>\n            <div>\n              <label className=\"small\"><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n                description=\"Label for user address (ID)\" /></label>&nbsp;\n              <tt>{this.props.myUserId}</tt>\n            </div>\n          </div>\n          <AvatarUpload\n            avatar={this.state.avatar}\n            readOnly={!this.state.owner}\n            uid={this.props.myUserId}\n            title={this.state.fullName} />\n        </div>\n        <div className=\"panel-form-row\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('general');}}>\n            <i className=\"material-icons\">edit</i>&nbsp;\n            <FormattedMessage id=\"button_edit\" defaultMessage=\"Edit\" description=\"Call to action [Edit]\" />\n          </a>\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('notif');}}>\n            <i className=\"material-icons\">notifications</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_notifications\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('security');}}>\n            <i className=\"material-icons\">security</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_security\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('support');}}>\n            <i className=\"material-icons\">contact_support</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_support\" />\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport TagManager from '../widgets/tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, asEmail, asPhone, vcard } from '../lib/utils.js';\n\nexport default class AccGeneralView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    this.state = {\n      fullName: me.public ? me.public.fn : undefined,\n      avatar: makeImageUrl(me.public ? me.public.photo : null),\n      tags: me.tags(),\n      credentials: me.getCredentials() || [],\n      addCredActive: false,\n      addCredInvalid: false,\n      newCred: '',\n      previousOnTags: me.onTagsUpdated\n    };\n\n    this.tnNewTags = this.tnNewTags.bind(this);\n    this.tnCredsUpdated = this.tnCredsUpdated.bind(this);\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleCredChange = this.handleCredChange.bind(this);\n    this.handleCredKeyDown = this.handleCredKeyDown.bind(this);\n    this.handleCredEntered = this.handleCredEntered.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n  }\n\n  componentDidMount() {\n    const me = this.props.tinode.getMeTopic();\n    me.onCredsUpdated = this.tnCredsUpdated;\n    me.onTagsUpdated = this.tnNewTags;\n  }\n\n  componentWillUnmount() {\n    const me = this.props.tinode.getMeTopic();\n    me.onTagsUpdated = this.state.previousOnTags;\n    me.onCredsUpdated = undefined;\n  }\n\n  tnNewTags(tags) {\n    this.setState({tags: tags});\n  }\n\n  tnCredsUpdated(creds) {\n    this.setState({credentials: creds || []});\n  }\n\n  handleFullNameUpdate(fn) {\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\n    if (fn) {\n      this.setState({fullName: fn});\n      this.props.onUpdateAccount(undefined, vcard(fn, null));\n    }\n  }\n\n  handleImageChanged(img) {\n    this.setState({avatar: img});\n    this.props.onUpdateAccount(undefined, vcard(null, img || Tinode.DEL_CHAR));\n  }\n\n  handleCredChange(e) {\n    this.setState({newCred: e.target.value, addCredInvalid: false});\n  }\n\n  handleCredKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({newCred: '', addCredActive: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleCredEntered(e);\n    }\n  }\n\n  handleCredEntered(e) {\n    let value = this.state.newCred.trim();\n    if (!value) {\n      this.setState({addCredActive: false, addCredInvalid: false});\n      return;\n    }\n\n    let val = asPhone(value);\n    let method;\n    if (val) {\n      method = 'tel';\n    } else {\n      val = asEmail(value);\n      if (val) {\n        method = 'email';\n      }\n    }\n    if (method) {\n      this.props.onCredAdd(method, val);\n      this.setState({addCredActive: false, newCred: ''});\n    } else {\n      this.setState({addCredInvalid: true});\n    }\n  }\n\n  handleTagsUpdated(tags) {\n    // Check if tags have actually changed.\n    if (arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      return;\n    }\n    this.props.onUpdateTags(tags);\n  }\n\n  render() {\n    const credentials = [];\n    this.state.credentials.map((cred) => {\n      credentials.push(<div key={cred.meth + \":\" + cred.val + \":\" + cred.done}>{cred.meth}: <tt>{cred.val}</tt>\n        <span > {!cred.done ?\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredConfirm(cred.meth, cred.val);}}>\n              <FormattedMessage id=\"validate_credential_action\" defaultMessage=\"confirm\"\n                description=\"Validate credentail call to action\" />\n            </a>\n          : null} <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredDelete(cred.meth, cred.val);}}><i\n            className=\"material-icons gray\">delete_outline</i></a></span></div>);\n    });\n\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\"><FormattedMessage id=\"label_your_name\" /></label>\n            <div><FormattedMessage id=\"full_name_prompt\">{\n              (full_name_placeholder) => <InPlaceEdit\n                placeholder={full_name_placeholder}\n                value={this.state.fullName}\n                onFinished={this.handleFullNameUpdate} />\n            }</FormattedMessage></div>\n          </div>\n          <AvatarUpload\n            avatar={this.state.avatar}\n            uid={this.props.myUserId}\n            title={this.state.fullName}\n            onImageChanged={this.handleImageChanged}\n            onError={this.props.onError} />\n        </div>\n        <div className=\"hr\" />\n        <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (user discovery)\"\n          description=\"Section title for TagManager\">{\n          (title_tag_manager) => <TagManager\n            title={title_tag_manager}\n            activated={false}\n            tags={this.state.tags}\n            tinode={this.props.tinode}\n            onSubmit={this.handleTagsUpdated} />\n        }</FormattedMessage>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_user_contacts\" defaultMessage=\"Contacts:\"\n            description=\"Label for user contacts\" />\n          </label>\n          <div className=\"quoted\">\n            {credentials}\n            {this.state.addCredActive ?\n              <input type=\"text\" value={this.state.value}\n                className={this.state.addCredInvalid ? 'invalid' : null}\n                placeholder=\"Phone number or email\" required=\"required\" autoFocus\n                onChange={this.handleCredChange} onKeyDown={this.handleCredKeyDown} onBlur={this.handleCredEntered} />\n              : null}\n            <div>\n              <a href=\"#\" onClick={(e) => {e.preventDefault(); this.setState({addCredActive: true});}}>\n                <i className=\"material-icons\">add</i>\n                <FormattedMessage id=\"button_add_another\" defaultMessage=\"Add another\" description=\"Call to action [+ add another]\" />\n              </a></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\n\nexport default class EditAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckboxClick = this.handleCheckboxClick.bind(this);\n  }\n\n  handleCheckboxClick(what, checked) {\n    if (what == 'sound') {\n      this.props.onToggleMessageSounds(checked);\n    } else if (what == 'alert') {\n      this.props.onTogglePushNotifications(checked);\n    } else if (what == 'incognito') {\n      this.props.onToggleIncognitoMode(checked);\n    }\n  }\n\n  render() {\n    return (\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"message-sound\">\n              <FormattedMessage id=\"label_message_sound\" defaultMessage=\"Message sound:\"\n                description=\"Label for message sounds toggle\" />\n            </label>\n            <CheckBox name=\"sound\" id=\"message-sound\"\n              checked={this.props.messageSounds} onChange={this.handleCheckboxClick} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"desktop-alerts\">\n            {this.props.desktopAlertsEnabled ?\n              <FormattedMessage id=\"label_push_notifications\" defaultMessage=\"Notification alerts:\"\n                description=\"Label for push notifications switch\" />\n              :\n              <FormattedMessage id=\"label_push_notifications_disabled\"\n                defaultMessage=\"Notification alerts (requires HTTPS):\"\n                description=\"Label for push notifications switch\" />\n            }\n            </label>\n            <CheckBox name=\"alert\" id=\"desktop-alerts\"\n              checked={this.props.desktopAlerts}\n              onChange={this.props.desktopAlertsEnabled ? this.handleCheckboxClick : null} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"incognito-mode\">\n              <FormattedMessage id=\"label_incognito_mode\" defaultMessage=\"Incognito mode:\"\n                description=\"Label for incognito mode toggle\" />\n            </label>\n            <CheckBox name=\"incognito\" id=\"incognito-mode\"\n              checked={this.props.incognitoMode} onChange={this.handleCheckboxClick} />\n          </div>\n        </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\n\nconst messages = defineMessages({\n  delete_account: {\n    id: 'delete_account',\n    defaultMessage: 'Delete account',\n    description: 'Title for delete account warning'\n  },\n  delete_account_warning: {\n    id: 'delete_account_arning',\n    defaultMessage: 'Are you sure you want to delete your account? It cannot be undone.',\n    description: 'Warning message when deleting an account'\n  }\n});\n\nclass AccSecurityView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    let blockedCount = 0;\n    me.contacts((c) => {\n      if (c.acs && !c.acs.isJoiner()) {\n        blockedCount ++;\n      }\n    });\n    const defacs = me.getDefaultAccess();\n    this.state = {\n      auth: defacs ? defacs.auth : null,\n      anon: defacs ? defacs.anon : null,\n      showPermissionEditorFor: undefined,\n      blockedCount: blockedCount,\n    };\n\n    this.handlePasswordUpdate = this.handlePasswordUpdate.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n  }\n\n  handlePasswordUpdate(pwd) {\n    this.setState({password: pwd});\n    this.props.onUpdateAccount(pwd);\n  }\n\n  handleLaunchPermissionsEditor(which) {\n    this.setState({\n      showPermissionEditorFor: which,\n      editedPermissions: this.state[which]\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handlePermissionsChanged(perm) {\n    let defacs = {};\n    defacs[this.state.showPermissionEditorFor] = perm;\n    this.props.onUpdateAccount(undefined, undefined, defacs);\n\n    let newState = {showPermissionEditorFor: undefined};\n    newState[this.state.showPermissionEditorFor] = perm;\n    this.setState(newState);\n  }\n\n  handleDeleteAccount(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.delete_account), // title\n      formatMessage(messages.delete_account_warning), // content\n      (() => { this.props.onDeleteAccount(); }), // onConfirm\n      null, // use default text \"OK\"\n      true, // Show Reject button\n      null  // use default text \"Cancel\"\n    );\n  }\n\n  render() {\n    return (\n      <React.Fragment>{this.state.showPermissionEditorFor ?\n        <PermissionsEditor\n          mode={this.state.editedPermissions}\n          skip=\"O\"\n          onSubmit={this.handlePermissionsChanged}\n          onCancel={this.handleHidePermissionsEditor} />\n        :\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_password\" defaultMessage=\"Password\"\n                  description=\"Label for password editing\" />\n            </label>\n            <div>\n              <FormattedMessage id=\"password_unchanged_prompt\" defaultMessage=\"Unchanged\"\n                description=\"Message in editor while password is unchanged\">{\n                (password_unchanged) => <InPlaceEdit\n                  placeholder={password_unchanged}\n                  type=\"password\"\n                  onFinished={this.handlePasswordUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <a href=\"#\" className=\"red flat-button\" onClick={(e) => {e.preventDefault(); this.props.onLogout();}}>\n              <i className=\"material-icons\">exit_to_app</i> &nbsp;<FormattedMessage id=\"button_logout\"\n                defaultMessage=\"Logout\" description=\"Button [Logout]\" />\n            </a>\n            <a href=\"#\" className=\"red flat-button\" onClick={(e) => {this.handleDeleteAccount(e);}}>\n              <i className=\"material-icons\">delete</i> &nbsp;<FormattedMessage id=\"button_delete_account\"\n                defaultMessage=\"Delete account\" description=\"Button [Delete account]\" />\n            </a>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <div>\n              <label className=\"small\">\n                <FormattedMessage id=\"label_default_access_mode\" defaultMessage=\"Default access mode:\"\n                description=\"Label for default access mode\" />\n              </label>\n            </div>\n            <div className=\"quoted\">\n              <div>Auth: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>{this.state.auth}</tt></div>\n              <div>Anon: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>{this.state.anon}</tt></div>\n            </div>\n          </div>\n          {this.state.blockedCount > 0 ?\n            <>\n              <div className=\"hr\" />\n              <div className=\"panel-form-row\">\n                <i className=\"material-icons\">block</i>&nbsp;\n                <a href=\"#\" className=\"gray\" onClick={(e) => {e.preventDefault(); this.props.onShowBlocked();}}>\n                  <FormattedMessage id=\"blocked_contacts_link\" defaultMessage=\"Blocked contacts ({count})\"\n                    values={{ count: this.state.blockedCount }} description=\"Blocked contacts link\" />\n                </a>\n              </div>\n            </>\n            : null }\n        </div>\n      }</React.Fragment>\n    );\n  }\n};\n\nexport default injectIntl(AccSecurityView);\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME, LINK_CONTACT_US, LINK_PRIVACY_POLICY, LINK_TERMS_OF_SERVICE } from '../config.js';\n\nexport default class AccSupportView extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          <a href={LINK_CONTACT_US} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">email</i> &nbsp;<FormattedMessage id=\"link_contact_us\"\n              defaultMessage=\"Contact Us\" description=\"Ancor text for contacting us by email\" />\n          </a>\n          <a href={LINK_TERMS_OF_SERVICE} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">description</i> &nbsp;<FormattedMessage id=\"link_terms_of_service\"\n              defaultMessage=\"Terms of Service\" description=\"Ancor text for terms of service link\" />\n          </a>\n          <a href={LINK_PRIVACY_POLICY} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">policy</i> &nbsp;<FormattedMessage id=\"link_privacy_policy\"\n              defaultMessage=\"Privacy Policy\" description=\"Ancor text for privacy policy link\" />\n          </a>\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_client\" /></label>\n            {APP_NAME}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_sdk\" defaultMessage=\"SDK:\" /></label>\n            {Tinode.getLibrary()}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server\" /></label>\n            {this.props.serverVersion}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server_address\" defaultMessage=\"Server address:\" /></label>\n            {this.props.serverAddress}\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","// Login form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\n\nexport default class LoginView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: props.login,\n      password: '',\n      hostName: props.serverAddress,\n      saveToken: LocalStorageUtil.getObject('keep-logged-in')\n    };\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  handleToggleSaveToken() {\n    LocalStorageUtil.setObject('keep-logged-in', !this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onLogin(this.state.login.trim(), this.state.password.trim());\n  }\n\n  render() {\n    var submitClasses = 'blue';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form id=\"login-form\" onSubmit={this.handleSubmit}>\n        <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n          description=\"Login placeholder in LoginView\">\n        {\n          (login_prompt) => <input type=\"text\" id=\"inputLogin\"\n            placeholder={login_prompt}\n            autoComplete=\"username\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"none\"\n            value={this.state.login}\n            onChange={this.handleLoginChange}\n            required autoFocus />\n        }\n        </FormattedMessage>\n        <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n          description=\"Password placeholder in LoginView\">\n        {\n          (password_prompt) => <VisiblePassword type=\"password\" id=\"inputPassword\"\n            placeholder={password_prompt}\n            autoComplete=\"current-password\"\n            value={this.state.password}\n            onChange={this.handlePasswordChange}\n            required={true} />\n        }\n        </FormattedMessage>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <label htmlFor=\"save-token\">&nbsp;\n            <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n              description=\"Label for a checkbox\" />\n          </label>\n          <a href=\"#reset\">\n            <FormattedMessage id=\"forgot_password_link\" defaultMessage=\"Forgot password?\"\n              description=\"Link to Reset password form\" />\n          </a>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_in\" defaultMessage=\"Sign in\"\n              description=\"Button [Sign In]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n/* END Login */\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  invalid_id: {\n    id: 'error_invalid_id',\n    defaultMessage: 'Invalid ID',\n    description: 'Error message'\n  }\n});\n\nclass NewTopicById extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      groupId: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({groupId: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.groupId) {\n      var name = this.state.groupId.trim();\n      if (name.length > 3 && (name.substr(0, 3) == 'usr' || name.substr(0, 3) == 'grp')) {\n        this.props.onSubmit(name);\n      } else {\n        this.props.onError(this.props.intl.formatMessage(messages.invalid_id), 'err');\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"group_user_id_prompt\" defaultMessage=\"Group or User ID\"\n          description=\"Prompt for entering user or group ID\">{\n          (prompt) => <input type=\"text\" placeholder={prompt}\n            value={this.state.groupId} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required autoFocus />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"blue\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_subscribe\" defaultMessage=\"Subscribe\"\n              description=\"Button [Subscribe]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicById);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from './avatar-upload.jsx';\nimport CheckBox from './checkbox.jsx';\nimport TagManager from './tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class NewTopicGroup extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      fn: '', // full/formatted name\n      private: '',\n      imageDataUrl: null,\n      tags: [],\n      isChannel: false\n    };\n\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handlePrivateChange = this.handlePrivateChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleTagsChanged = this.handleTagsChanged.bind(this);\n    this.handleChannelToggle = this.handleChannelToggle.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handlePrivateChange(e) {\n    this.setState({private: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleTagsChanged(tags) {\n    this.setState({tags: tags});\n  }\n\n  handleChannelToggle() {\n    this.setState({isChannel: !this.state.isChannel});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const fn = this.state.fn.trim().substring(0, MAX_TITLE_LENGTH);\n    const comment = this.state.private.trim().substring(0, MAX_TITLE_LENGTH);\n    if (fn) {\n      this.props.onSubmit(fn, this.state.imageDataUrl, comment, this.state.tags, this.state.isChannel);\n    }\n  }\n\n  render() {\n    var submitClasses = 'blue';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n    return (\n      <form className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\" htmlFor=\"new-topic-fn\">\n              <FormattedMessage id=\"label_topic_name\" />\n            </label>\n            <FormattedMessage id=\"topic_name_editing_placeholder\" defaultMessage=\"Freeform name of the group\"\n              description=\"Prompt for entering topic name\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-fn\" placeholder={placeholder}\n                value={this.state.fn} onChange={this.handleFnChange} autoFocus required />\n            }</FormattedMessage>\n            <br />\n            <label className=\"small\" htmlFor=\"new-topic-priv\">\n              <FormattedMessage id=\"label_private\" />\n            </label>\n            <FormattedMessage id=\"private_editing_placeholder\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-priv\" placeholder={placeholder}\n                value={this.state.private} onChange={this.handlePrivateChange} />\n            }</FormattedMessage>\n          </div>\n          <AvatarUpload\n            onError={this.props.onError}\n            onImageChanged={this.handleImageChanged} />\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox checked={this.state.isChannel} onChange={this.handleChannelToggle}/>&nbsp;\n          <label onClick={this.handleChannelToggle}><FormattedMessage id=\"channel_prompt\"\n            defaultMessage=\"This is a channel\"\n            description=\"Checkbox label when creating a channel\" /></label>\n        </div>\n        <FormattedMessage id=\"title_tag_manager\">{\n          (title) => <TagManager\n            tags={this.state.tags}\n            activated={true}\n            onTagsChanged={this.handleTagsChanged}\n            tinode={this.props.tinode}\n            title={title} />\n        }</FormattedMessage>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses}>\n            <FormattedMessage id=\"button_create\" defaultMessage=\"Create\"\n              description=\"Button [Create]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nexport default class SearchContacts extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      edited: false,\n      search: ''\n    };\n\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  componentWillUnmount() {\n    if (this.state.edited) {\n      this.setState({search: '', edited: false});\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n  }\n\n  handleSearchChange(e) {\n    this.setState({search: e.target.value});\n  }\n\n  handleSearch(e) {\n    e.preventDefault();\n    var query = this.state.search.trim();\n    this.setState({edited: (query.length > 0)});\n    this.props.onSearchContacts(query.length > 0 ? query : Tinode.DEL_CHAR);\n  }\n\n  handleClear(e) {\n    e.preventDefault();\n    if (this.state.edited) {\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n    this.setState({search: '', edited: false});\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Enter') {\n      this.handleSearch(e);\n    } else if (e.key === 'Escape') {\n      this.handleClear();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <i className=\"material-icons search\">search</i>\n          <FormattedMessage id=\"search_placeholder\" defaultMessage=\"List like email:alice@example.com, tel:17025550003...\"\n            description=\"Placeholder in contacts search field\">{\n            (search_placeholder) => <input className=\"search\" type=\"text\"\n              placeholder={search_placeholder}\n              value={this.state.search} onChange={this.handleSearchChange}\n              onKeyDown={this.handleKeyDown} required autoFocus />\n          }</FormattedMessage>\n          <a href=\"#\" onClick={this.handleClear}>\n            <i className=\"material-icons\">close</i>\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","// Create new topic and invite users or send an invite.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport ContactList from '../widgets/contact-list.jsx';\nimport NewTopicById from '../widgets/new-topic-by-id.jsx';\nimport NewTopicGroup from '../widgets/new-topic-group.jsx';\nimport SearchContacts from '../widgets/search-contacts.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\nimport { vcard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  search_for_contacts: {\n    id: \"search_for_contacts\",\n    defaultMessage: \"Use search to find contacts\",\n    description: \"Text shown in contacts view when user entered no search query.\"\n  },\n  search_no_results: {\n    id: \"search_no_results\",\n    defaultMessage: \"Search returned no results\",\n    description: \"Text shown in contacts view when query returned no results.\"\n  }\n});\n\nclass NewTopicView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tabSelected: 'p2p',\n      searchQuery: null\n    };\n\n    this.handleTabClick = this.handleTabClick.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleNewGroupSubmit = this.handleNewGroupSubmit.bind(this);\n    this.handleGroupByID = this.handleGroupByID.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.onInitFind();\n  }\n\n  handleTabClick(e) {\n    e.preventDefault();\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'tab', e.currentTarget.dataset.id));\n    this.setState({tabSelected: e.currentTarget.dataset.id});\n  }\n\n  handleSearchContacts(query) {\n    this.props.onSearchContacts(query);\n    this.setState({searchQuery: Tinode.isNullValue(query) ? null : query});\n  }\n\n  handleContactSelected(sel) {\n    if (this.state.tabSelected === 'p2p') {\n      HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n      this.props.onCreateTopic(sel);\n    }\n  }\n\n  handleNewGroupSubmit(name, dataUrl, priv, tags, isChannel) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(undefined, vcard(name, dataUrl), priv, tags, isChannel);\n  }\n\n  handleGroupByID(topicName) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(topicName);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const no_contacts_placeholder = formatMessage(this.state.searchQuery ?\n      messages.search_no_results : messages.search_for_contacts);\n    return (\n      <div className=\"flex-column\">\n        <ul className=\"tabbar\">\n          <li className={this.state.tabSelected === \"p2p\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"p2p\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_find_user\" defaultMessage=\"find\"\n                description=\"Tab title Find\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"grp\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"grp\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_new_group\" defaultMessage=\"new group\"\n                description=\"Tab title New Group\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"byid\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"byid\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_group_by_id\" defaultMessage=\"by id\"\n                description=\"Tab title Find topic by ID\" />\n            </a>\n          </li>\n        </ul>\n        {this.state.tabSelected === 'grp' ?\n          <NewTopicGroup\n            tinode={this.props.tinode}\n            onSubmit={this.handleNewGroupSubmit} /> :\n          this.state.tabSelected === 'byid' ?\n            <NewTopicById\n              onSubmit={this.handleGroupByID}\n              onError={this.props.onError} /> :\n            <div className=\"flex-column\">\n              <SearchContacts\n                type=\"p2p\"\n                onSearchContacts={this.handleSearchContacts} />\n              <ContactList\n                contacts={this.props.searchResults}\n                myUserId={this.props.myUserId}\n                emptyListMessage={no_contacts_placeholder}\n                showOnline={false}\n                showUnread={false}\n                showContextMenu={false}\n                onTopicSelected={this.handleContactSelected} />\n            </div>}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicView);\n","// A password reset form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\n\nexport default class PasswordResetView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n  }\n\n  componentDidMount() {\n    let parsed = HashNavigation.parseUrlHash(window.location.hash);\n    this.setState({token: parsed.params.token, scheme: parsed.params.scheme});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.token) {\n      this.props.onReset(this.state.scheme, this.state.password.trim(), this.state.token);\n    } else {\n      this.props.onRequest('email', this.state.email.trim());\n    }\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  render() {\n    let reset = (this.state.token && this.state.scheme);\n    return (\n      <form id=\"password-reset-form\" onSubmit={this.handleSubmit}>\n        {reset ?\n          <FormattedMessage id=\"new_password_placeholder\" defaultMessage=\"Enter new password\"\n            description=\"Placeholder for entering new password\">{\n            (placeholder) => <VisiblePassword\n              placeholder={placeholder}\n              autoComplete=\"new-password\"\n              value={this.state.password}\n              required={true} autoFocus={true}\n              onChange={this.handlePasswordChange} />\n          }</FormattedMessage>\n          :\n          <>\n            <label htmlFor=\"inputEmail\">\n              <FormattedMessage id=\"label_reset_password\"\n                defaultMessage=\"Send a password reset email:\"\n                description=\"Label for password reset field\" />\n            </label>\n            <FormattedMessage id=\"credential_email_prompt\" defaultMessage=\"Your registration email\"\n              description=\"Placeholder for entering email\">{\n              (placeholder) => <input type=\"email\" id=\"inputEmail\"\n                placeholder={placeholder}\n                autoComplete=\"email\"\n                value={this.state.email}\n                onChange={this.handleEmailChange}\n                required autoFocus />\n            }</FormattedMessage>\n          </>\n        }\n        <div className=\"dialog-buttons\">\n          <button className=\"blue\" type=\"submit\">{reset ?\n            <FormattedMessage id=\"button_reset\" defaultMessage=\"Reset\" description=\"Button [Reset]\" /> :\n            <FormattedMessage id=\"button_send_request\" defaultMessage=\"Send request\"\n              description=\"Button [Send request]\" />\n          }</button>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react';\n\nimport { KNOWN_HOSTS } from '../config.js';\n\n/* Combobox for selecting host name */\n\nexport default class HostSelector extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hostName: props.serverAddress,\n      changed: false\n    };\n\n    this.handleHostNameChange = this.handleHostNameChange.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handleHostNameChange(e) {\n    this.setState({hostName: e.target.value, changed: true});\n  }\n\n  handleEditingFinished() {\n    if (this.state.changed) {\n      this.setState({changed: false});\n      this.props.onServerAddressChange(this.state.hostName.trim());\n    }\n  }\n\n  render() {\n    var hostOptions = [];\n    for (let key in KNOWN_HOSTS) {\n      let item = KNOWN_HOSTS[key];\n      hostOptions.push(\n        <option key={item} value={item} />\n      );\n    }\n    return (\n      <div className=\"panel-form-row\">\n        <input type=\"search\" id=\"host-name\" placeholder={this.props.hostName} list=\"known-hosts\"\n          className=\"quoted\" value={this.state.hostName} onChange={this.handleHostNameChange}\n          onBlur={this.handleEditingFinished} required />\n        <datalist id=\"known-hosts\">\n          {hostOptions}\n        </datalist>\n      </div>\n    );\n  }\n}\n","// Tinode config panel.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport HostSelector from '../widgets/host-selector.jsx';\n\nexport default class SettingsView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transport: props.transport || 'def',\n      serverAddress: props.serverAddress,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleTransportSelected = this.handleTransportSelected.bind(this);\n    this.handleServerAddressChange = this.handleServerAddressChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onUpdate({\n      transport: this.state.transport,\n      serverAddress: this.state.serverAddress\n    });\n  }\n\n  handleTransportSelected(e) {\n    this.setState({transport: e.currentTarget.value});\n  }\n\n  handleServerAddressChange(name) {\n    this.setState({serverAddress: name});\n  }\n\n  render() {\n    const names = {def: \"default\", ws: \"websocket\", lp: \"long polling\"};\n    var transportOptions = [];\n    var instance = this;\n    ['def', 'ws', 'lp'].map(function(item) {\n      var id = 'transport-' + item;\n      var name = names[item];\n      transportOptions.push(\n        <li key={item}>\n          <input type=\"radio\" id={id} name=\"transport-select\" value={item}\n            checked={instance.state.transport === item}\n            onChange={instance.handleTransportSelected} />\n          <label htmlFor={id}>{name}</label>\n        </li>\n      );\n    });\n\n    return (\n      <form id=\"settings-form\" className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_server_to_use\" defaultMessage=\"Server to use:\"\n              description=\"Label for server selector in SettingsView\" />\n          </label>\n        </div>\n        <HostSelector serverAddress={this.state.serverAddress}\n          onServerAddressChange={this.handleServerAddressChange} />\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_wire_transport\" defaultMessage=\"Wire transport:\"\n              description=\"Label for wire transport selection in SettingsView\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ul className=\"quoted\">\n            {transportOptions}\n          </ul>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button type=\"submit\" className=\"blue\">\n            <FormattedMessage id=\"button_update\" defaultMessage=\"Update\"\n              description=\"Button [Update]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// ValidationView: panel for confirming credentials, like email or phone.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  phone: {\n    id: 'phone_dative',\n    defaultMessage: 'phone',\n    description: \"Dative case of 'phone', i.e. 'phone' in 'by phone'\",\n  },\n  email: {\n    id: 'email_dative',\n    defaultMessage: 'email',\n    description: \"Dative case of 'email', i.e. 'email' in 'by email'\",\n  }\n});\n\nclass ValidationView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      code: props.credCode || ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({code: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    } else if (e.key == 'Escape') {\n      this.handleCancel(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.code && this.state.code.trim()) {\n      this.props.onSubmit(this.props.credMethod, this.state.code.trim());\n    }\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel();\n  }\n\n\n  render() {\n    const { formatMessage } = this.props.intl;\n    const methods = {'email': formatMessage(messages.email), 'tel': formatMessage(messages.phone)};\n    let method = methods[this.props.credMethod] || this.props.credMethod;\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\" htmlFor=\"enter-confirmation-code\">\n            <FormattedMessage id=\"enter_confirmation_code_prompt\"\n              defaultMessage=\"Enter confirmation code sent to you by {method}:\"\n              description=\"Request to enter confirmation code\"\n              values={{method: method}} />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"numeric_confirmation_code_prompt\"\n          defaultMessage=\"Numbers only\" description=\"Prompt for numeric conformation code\">{\n          (numbers_only) => <input type=\"text\" id=\"enter-confirmation-code\"\n            placeholder={numbers_only}\n            value={this.state.code} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"blue\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_confirm\" defaultMessage=\"Confirm\" description=\"Button [Confirm]\" />\n          </button>\n          <button className=\"white\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ValidationView);\n","import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport SideNavbar from '../widgets/side-navbar.jsx';\n\nimport ContactsView from './contacts-view.jsx';\nimport CreateAccountView from './create-account-view.jsx';\nimport EditAccountView from './edit-account-view.jsx';\nimport AccGeneralView from './acc-general-view.jsx';\nimport AccNotificationsView from './acc-notifications-view.jsx';\nimport AccSecurityView from './acc-security-view.jsx';\nimport AccSupportView from './acc-support-view.jsx';\nimport LoginView from './login-view.jsx';\nimport NewTopicView from './new-topic-view.jsx';\nimport PasswordResetView from './password-reset-view.jsx';\nimport SettingsView from './settings-view.jsx';\nimport ValidationView from './validation-view.jsx';\n\n// Panel titles for translation.\nconst messages = defineMessages({\n  'login': {\n    id: 'sidepanel_title_login',\n    description: 'Sidepanel title for LoginView.',\n    defaultMessage: 'Sign In'\n  },\n  'register': {\n    id: 'sidepanel_title_register',\n    description: 'Sidepanel title for CreateAccountView.',\n    defaultMessage: 'Create Account'\n  },\n  'settings': {\n    id: 'sidepanel_title_settings',\n    description: 'Sidepanel title for SettingsView.',\n    defaultMessage: 'Settings'\n  },\n  'edit': {\n    id: 'sidepanel_title_account_settings',\n    description: 'Sidepanel title for EditAccountView.',\n    defaultMessage: 'Account Settings'\n  },\n  'general': {\n    id: 'sidepanel_title_acc_general',\n    description: 'Sidepanel title for AccGeneralView.',\n    defaultMessage: 'General'\n  },\n  'security': {\n    id: 'sidepanel_title_acc_security',\n    description: 'Sidepanel title for AccSecurityView.',\n    defaultMessage: 'Security'\n  },\n  'notif': {\n    id: 'sidepanel_title_acc_notifications',\n    description: 'Sidepanel title for AccNotificationsView.',\n    defaultMessage: 'Notifications'\n  },\n  'support': {\n    id: 'sidepanel_title_acc_support',\n    description: 'Sidepanel title for AccSupportView.',\n    defaultMessage: 'Support'\n  },\n  'newtpk': {\n    id: 'sidepanel_title_newtpk',\n    description: 'Sidepanel title for NewTopicView.',\n    defaultMessage: 'Start New Chat'\n  },\n  'cred': {\n    id: 'sidepanel_title_cred',\n    description: 'Sidepanel title for ValidationView.',\n    defaultMessage: 'Confirm Credentials'\n  },\n  'reset': {\n    id: 'sidepanel_title_reset',\n    description: 'Sidepanel title for PasswordResetView.',\n    defaultMessage: 'Reset Password'\n  },\n  'archive': {\n    id: 'sidepanel_title_archive',\n    description: 'Sidepanel title for ContactsView-Archive.',\n    defaultMessage: 'Archived Chats'\n  },\n  'blocked': {\n    id: 'sidepanel_title_blocked',\n    description: 'Sidepanel title for ContactsView-Blocked.',\n    defaultMessage: 'Blocked Chats'\n  }\n});\n\nclass SidepanelView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleLoginRequested = this.handleLoginRequested.bind(this);\n    this.handleNewTopic = this.handleNewTopic.bind(this);\n  }\n\n  handleLoginRequested(login, password) {\n    this.props.onLoginRequest(login, password);\n  }\n\n  handleNewTopic() {\n    this.props.onBasicNavigate('newtpk');\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const view = this.props.state || (this.props.myUserId ? 'contacts' : 'login');\n\n    let title, avatar;\n    if (view == 'contacts') {\n      title = this.props.title;\n      avatar = this.props.avatar ? this.props.avatar : true;\n    } else {\n      title = formatMessage(messages[view]);\n      avatar = false;\n    }\n\n    let onCancel;\n    if (['login', 'contacts'].indexOf(view) == -1) {\n      onCancel = this.props.onCancel;\n    }\n\n    return (\n      <div id=\"sidepanel\" className={this.props.hideSelf ? 'nodisplay' : null}>\n        <SideNavbar\n          state={view}\n          title={title}\n          avatar={avatar}\n          myUserId={this.props.myUserId}\n          onSignUp={this.props.onSignUp}\n          onSettings={this.props.onSettings}\n          onNewTopic={this.handleNewTopic}\n          onCancel={onCancel} />\n\n        <ErrorPanel\n          level={this.props.errorLevel}\n          text={this.props.errorText}\n          action={this.props.errorAction}\n          actionText={this.props.errorActionText}\n          onClearError={this.props.onError} />\n\n        <LoadSpinner show={this.props.loadSpinnerVisible} />\n\n        {view === 'login' ?\n          <LoginView\n            login={this.props.login}\n            disabled={this.props.loginDisabled}\n            onLogin={this.handleLoginRequested} /> :\n\n          view === 'register' ?\n          <CreateAccountView\n            onCreateAccount={this.props.onCreateAccount}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'settings' ?\n          <SettingsView\n            transport={this.props.transport}\n            serverAddress={this.props.serverAddress}\n            onCancel={this.props.onCancel}\n            onUpdate={this.props.onGlobalSettings} /> :\n\n          view === 'edit' ?\n          <EditAccountView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            onBasicNavigate={this.props.onBasicNavigate} /> :\n\n          view === 'general' ?\n          <AccGeneralView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            onUpdateAccount={this.props.onUpdateAccount}\n            onUpdateTags={this.props.onUpdateAccountTags}\n            onCredAdd={this.props.onCredAdd}\n            onCredDelete={this.props.onCredDelete}\n            onCredConfirm={this.props.onCredConfirm}\n            onBasicNavigate={this.props.onBasicNavigate}\n            onError={this.props.onError} /> :\n\n          view === 'notif' ?\n          <AccNotificationsView\n            messageSounds={this.props.messageSounds}\n            desktopAlerts={this.props.desktopAlerts}\n            desktopAlertsEnabled={this.props.desktopAlertsEnabled}\n            incognitoMode={this.props.incognitoMode}\n            onTogglePushNotifications={this.props.onTogglePushNotifications}\n            onToggleMessageSounds={this.props.onToggleMessageSounds}\n            onToggleIncognitoMode={this.props.onToggleIncognitoMode} /> :\n\n          view === 'security' ?\n          <AccSecurityView\n            tinode={this.props.tinode}\n            onUpdateAccount={this.props.onUpdateAccount}\n            onLogout={this.props.onLogout}\n            onDeleteAccount={this.props.onDeleteAccount}\n            onShowAlert={this.props.onShowAlert}\n            onShowBlocked={this.props.onShowBlocked} /> :\n\n          view === 'support' ?\n          <AccSupportView\n            serverAddress={this.props.serverAddress}\n            serverVersion={this.props.serverVersion} /> :\n\n          (view === 'contacts' || view == 'archive' || view == 'blocked') ?\n          <ContactsView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            connected={this.props.connected}\n            topicSelected={this.props.topicSelected}\n            archive={view == 'archive'}\n            blocked={view == 'blocked'}\n            chatList={this.props.chatList}\n            showContextMenu={this.props.showContextMenu}\n            onTopicSelected={this.props.onTopicSelected}\n            onShowArchive={this.props.onShowArchive} /> :\n\n          view === 'newtpk' ?\n          <NewTopicView\n            tinode={this.props.tinode}\n            searchResults={this.props.searchResults}\n            onInitFind={this.props.onInitFind}\n            onSearchContacts={this.props.onSearchContacts}\n            onCreateTopic={this.props.onCreateTopic}\n            onError={this.props.onError} /> :\n\n          view === 'cred' ?\n          <ValidationView\n            credCode={this.props.credCode}\n            credMethod={this.props.credMethod}\n            onSubmit={this.props.onValidateCredentials}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'reset' ?\n          <PasswordResetView\n            onRequest={this.props.onPasswordResetRequest}\n            onReset={this.props.onResetPassword} /> :\n          null}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SidepanelView);\n","import { KNOWN_HOSTS, DEFAULT_HOST } from '../config.js';\n\n// Detect server address from the URL\nexport function detectServerAddress() {\n  let host = DEFAULT_HOST;\n  if (typeof window.location == 'object') {\n    if (window.location.protocol == 'file:' || window.location.hostname == 'localhost') {\n      host = KNOWN_HOSTS.local;\n    } else if (window.location.hostname) {\n      host = window.location.hostname + (window.location.port ? ':' + window.location.port : '');\n    }\n  }\n  return host;\n}\n\n// Detect if the page is served over HTTPS.\nexport function isSecureConnection() {\n  if (typeof window.location == 'object') {\n    return window.location.protocol == 'https:';\n  }\n  return false;\n}\n\nexport function isLocalHost() {\n  if (typeof window.location == 'object') {\n    return window.location.hostname == 'localhost';\n  }\n  return false;\n}\n","// The top-level class to hold all functionality together.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport * as firebase from 'firebase/app';\nimport 'firebase/messaging';\n\nimport Tinode from 'tinode-sdk';\n\nimport Alert from '../widgets/alert.jsx';\nimport ContextMenu from '../widgets/context-menu.jsx';\n\nimport InfoView from './info-view.jsx';\nimport MessagesView from './messages-view.jsx';\nimport SidepanelView from './sidepanel-view.jsx';\n\nimport { API_KEY, APP_NAME, DEFAULT_P2P_ACCESS_MODE, LOGGING_ENABLED,\n  MEDIA_BREAKPOINT, RECEIVED_DELAY } from '../config.js';\nimport { base64ReEncode, makeImageUrl } from '../lib/blob-helpers.js';\nimport { detectServerAddress, isLocalHost, isSecureConnection } from '../lib/host-name.js';\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { secondsToTime } from '../lib/strformat.js'\nimport { updateFavicon } from '../lib/utils.js';\n\n// Sound to play on message received.\nconst POP_SOUND = new Audio('audio/msg.mp3');\n\nconst messages = defineMessages({\n  reconnect_countdown: {\n    id: 'reconnect_countdown',\n    defaultMessage: 'Disconnected. Reconnecting in {seconds}…',\n    description: 'Message shown when an app update is available.'\n  },\n  reconnect_now: {\n    id: 'reconnect_now',\n    defaultMessage: 'Try now',\n    description: 'Prompt for reconnecting now'\n  },\n  push_init_failed: {\n    id: 'push_init_failed',\n    defaultMessage: 'Failed to initialize push notifications',\n    description: 'Error message when push notifications have failed to initialize.'\n  },\n  invalid_security_token: {\n    id: 'invalid_security_token',\n    defaultMessage: 'Invalid security token',\n    description: 'Error message when resetting password.'\n  },\n  no_connection: {\n    id: 'no_connection',\n    defaultMessage: 'No connection',\n    description: 'Warning that the user is offline.'\n  },\n  code_doesnot_match: {\n    id: 'code_doesnot_match',\n    defaultMessage: 'Code does not match',\n    description: 'Error message when the credential validation code is incorrect.'\n  }\n});\n\nclass TinodeWeb extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = this.getBlankState();\n\n    this.handleResize = this.handleResize.bind(this);\n    this.handleHashRoute = this.handleHashRoute.bind(this);\n    this.handleOnline = this.handleOnline.bind(this);\n    this.checkForAppUpdate = this.checkForAppUpdate.bind(this);\n    this.handleVisibilityEvent = this.handleVisibilityEvent.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.handleLoginRequest = this.handleLoginRequest.bind(this);\n    this.handleConnected = this.handleConnected.bind(this);\n    this.handleAutoreconnectIteration = this.handleAutoreconnectIteration.bind(this);\n    this.doLogin = this.doLogin.bind(this);\n    this.handleCredentialsRequest = this.handleCredentialsRequest.bind(this);\n    this.handleLoginSuccessful = this.handleLoginSuccessful.bind(this);\n    this.handleDisconnect = this.handleDisconnect.bind(this);\n    this.tnMeMetaDesc = this.tnMeMetaDesc.bind(this);\n    this.tnMeContactUpdate = this.tnMeContactUpdate.bind(this);\n    this.tnMeSubsUpdated = this.tnMeSubsUpdated.bind(this);\n    this.resetContactList = this.resetContactList.bind(this);\n    this.tnData = this.tnData.bind(this);\n    this.tnInitFind = this.tnInitFind.bind(this);\n    this.tnFndSubsUpdated = this.tnFndSubsUpdated.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleTopicSelected = this.handleTopicSelected.bind(this);\n    this.handleHideMessagesView = this.handleHideMessagesView.bind(this);\n    this.handleSendMessage = this.handleSendMessage.bind(this);\n    this.handleNewChatInvitation = this.handleNewChatInvitation.bind(this);\n    this.handleNewAccount = this.handleNewAccount.bind(this);\n    this.handleNewAccountRequest = this.handleNewAccountRequest.bind(this);\n    this.handleUpdateAccountRequest = this.handleUpdateAccountRequest.bind(this);\n    this.handleUpdateAccountTagsRequest = this.handleUpdateAccountTagsRequest.bind(this);\n    this.handleToggleIncognitoMode = this.handleToggleIncognitoMode.bind(this);\n    this.handleSettings = this.handleSettings.bind(this);\n    this.handleGlobalSettings = this.handleGlobalSettings.bind(this);\n    this.handleShowArchive = this.handleShowArchive.bind(this);\n    this.handleShowBlocked = this.handleShowBlocked.bind(this);\n    this.handleToggleMessageSounds = this.handleToggleMessageSounds.bind(this);\n    this.handleCredAdd = this.handleCredAdd.bind(this);\n    this.handleCredDelete = this.handleCredDelete.bind(this);\n    this.handleCredConfirm = this.handleCredConfirm.bind(this);\n    this.initDesktopAlerts = this.initDesktopAlerts.bind(this);\n    this.togglePushToken = this.togglePushToken.bind(this);\n    this.requestPushToken = this.requestPushToken.bind(this);\n    this.handleSidepanelCancel = this.handleSidepanelCancel.bind(this);\n    this.handleStartTopicRequest = this.handleStartTopicRequest.bind(this);\n    this.handleNewTopicCreated = this.handleNewTopicCreated.bind(this);\n    this.handleTopicUpdateRequest = this.handleTopicUpdateRequest.bind(this);\n    this.handleChangePermissions = this.handleChangePermissions.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n    this.handleDeleteMessagesRequest = this.handleDeleteMessagesRequest.bind(this);\n    this.handleLeaveUnsubRequest = this.handleLeaveUnsubRequest.bind(this);\n    this.handleBlockTopicRequest = this.handleBlockTopicRequest.bind(this);\n    this.handleReportTopic = this.handleReportTopic.bind(this);\n    this.handleShowContextMenu = this.handleShowContextMenu.bind(this);\n    this.defaultTopicContextMenu = this.defaultTopicContextMenu.bind(this);\n    this.handleHideContextMenu = this.handleHideContextMenu.bind(this);\n    this.handleShowAlert = this.handleShowAlert.bind(this);\n    this.handleShowInfoView = this.handleShowInfoView.bind(this);\n    this.handleHideInfoView = this.handleHideInfoView.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleValidateCredentialsRequest = this.handleValidateCredentialsRequest.bind(this);\n    this.handlePasswordResetRequest = this.handlePasswordResetRequest.bind(this);\n    this.handleResetPassword = this.handleResetPassword.bind(this);\n    this.handleContextMenuAction = this.handleContextMenuAction.bind(this);\n  }\n\n  getBlankState() {\n    const settings = LocalStorageUtil.getObject('settings') || {};\n\n    return {\n      connected: false,\n      // Connected and subscribed to 'me'\n      ready: false,\n      // Try to re-login on new connection.\n      autoLogin: false,\n      transport: settings.transport || null,\n      serverAddress: settings.serverAddress || detectServerAddress(),\n      serverVersion: \"no connection\",\n      // \"On\" is the default, so saving the \"off\" state.\n      messageSounds: !settings.messageSoundsOff,\n      incognitoMode: false,\n      desktopAlerts: settings.desktopAlerts,\n      desktopAlertsEnabled: (isSecureConnection() || isLocalHost()) &&\n        (typeof firebase != 'undefined') && (typeof navigator != 'undefined') &&\n        (typeof FIREBASE_INIT != 'undefined'),\n      firebaseToken: LocalStorageUtil.getObject('firebase-token'),\n\n      applicationVisible: !document.hidden,\n\n      errorText: '',\n      errorLevel: null,\n      errorAction: undefined,\n      errorActionText: null,\n\n      sidePanelSelected: 'login',\n      sidePanelTitle: null,\n      sidePanelAvatar: null,\n      loadSpinnerVisible: false,\n\n      login: '',\n      password: '',\n      myUserId: null,\n      liveConnection: navigator.onLine,\n      topicSelected: '',\n      topicSelectedOnline: false,\n      topicSelectedAcs: null,\n      newTopicParams: null,\n      loginDisabled: false,\n      displayMobile: (window.innerWidth <= MEDIA_BREAKPOINT),\n      showInfoPanel: false,\n      mobilePanel: 'sidepanel',\n\n      contextMenuVisible: false,\n      contextMenuBounds: null,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuItems: [],\n\n      // Modal alert dialog.\n      alertVisible: false,\n      alertParams: {},\n\n      // Chats as shown in the ContactsView\n      chatList: [],\n      // Contacts returned by a search query.\n      searchResults: [],\n      // Merged results of a search query and p2p chats.\n      searchableContacts: [],\n      credMethod: undefined,\n      credCode: undefined\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    window.addEventListener('online', (e) => { this.handleOnline(true); });\n    window.addEventListener('offline', (e) => { this.handleOnline(false); });\n    window.addEventListener('hashchange', this.handleHashRoute);\n    // Window/tab visible or invisible for pausing timers.\n    document.addEventListener('visibilitychange', this.handleVisibilityEvent);\n\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n\n    const keepLoggedIn = LocalStorageUtil.getObject('keep-logged-in');\n\n    const {formatMessage, locale} = this.props.intl;\n    new Promise((resolve, reject) => {\n      this.tinode = TinodeWeb.tnSetup(this.state.serverAddress, this.state.transport, locale, keepLoggedIn, resolve);\n      this.tinode.onConnect = this.handleConnected;\n      this.tinode.onDisconnect = this.handleDisconnect;\n      this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n    }).then(() => {\n      // Initialize desktop alerts.\n      if (this.state.desktopAlertsEnabled) {\n        try {\n          this.fbPush = firebase.initializeApp(FIREBASE_INIT, APP_NAME).messaging();\n          this.fbPush.usePublicVapidKey(FIREBASE_INIT.messagingVapidKey);\n          navigator.serviceWorker.register('/service-worker.js').then((reg) => {\n            this.checkForAppUpdate(reg);\n            this.fbPush.useServiceWorker(reg);\n            reg.active.postMessage(JSON.stringify({locale: locale}));\n            this.initDesktopAlerts();\n            if (this.state.desktopAlerts) {\n              if (!this.state.firebaseToken) {\n                this.togglePushToken(true);\n              } else {\n                this.tinode.setDeviceToken(this.state.firebaseToken, true);\n              }\n            }\n          }).catch((err) => {\n            // registration failed :(\n            console.log(\"Failed to register service worker:\", err);\n          });\n        } catch (err) {\n          this.handleError(formatMessage({id: 'push_init_failed'}), 'err');\n          console.log(\"Failed to initialize push notifications\", err);\n          this.setState({desktopAlertsEnabled: false});\n        }\n      }\n\n      const token = keepLoggedIn ? LocalStorageUtil.getObject('auth-token') : undefined;\n\n      const parsedNav = HashNavigation.parseUrlHash(window.location.hash);\n      if (token) {\n        this.setState({autoLogin: true});\n\n        // When reading from storage, date is returned as string.\n        token.expires = new Date(token.expires);\n        this.tinode.setAuthToken(token);\n        this.tinode.connect().catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n        delete parsedNav.params.info;\n        delete parsedNav.params.tab;\n        parsedNav.path[0] = '';\n        HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsedNav.path, parsedNav.params));\n      } else if (!parsedNav.params.token) {\n        HashNavigation.navigateTo('');\n      }\n\n      this.readTimer = null;\n      this.readTimerCallback = null;\n\n      this.handleHashRoute();\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n    window.removeEventListener('hashchange', this.handleHashRoute);\n    document.removeEventListener('visibilitychange', this.handleVisibilityEvent);\n  }\n\n  // Setup transport (usually websocket) and server address. This will terminate connection with the server.\n  static tnSetup(serverAddress, transport, locale, persistentCache, onSetupCompleted) {\n    const tinode = new Tinode({appName: APP_NAME, host: serverAddress, apiKey: API_KEY, transport: transport,\n      secure: isSecureConnection(), persist: persistentCache}, onSetupCompleted);\n    tinode.setHumanLanguage(locale);\n    tinode.enableLogging(LOGGING_ENABLED, true);\n    return tinode;\n  }\n\n  handleResize() {\n    const mobile = document.documentElement.clientWidth <= MEDIA_BREAKPOINT;\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n    if (this.state.displayMobile != mobile) {\n      this.setState({displayMobile: mobile});\n    }\n  }\n\n  // Check if a newer version of TinodeWeb app is available at the server.\n  checkForAppUpdate(reg) {\n    reg.onupdatefound = () => {\n      const installingWorker = reg.installing;\n      installingWorker.onstatechange = () => {\n        if (installingWorker.state == 'installed' && navigator.serviceWorker.controller) {\n          const msg = <>\n            <FormattedMessage id=\"update_available\"\n              defaultMessage=\"Update available.\"\n              description=\"Message shown when an app update is available.\" /> <a href=\"\">\n              <FormattedMessage id=\"reload_update\"\n                defaultMessage=\"Reload\"\n                description=\"Call to action to reload application when update is available.\" />\n            </a>.</>;\n          this.handleError(msg, 'info');\n        }\n      }\n    }\n  }\n\n  // Handle for hashchange event: display appropriate panels.\n  handleHashRoute() {\n    const hash = HashNavigation.parseUrlHash(window.location.hash);\n    if (hash.path && hash.path.length > 0) {\n      // Left-side panel selector.\n      if (['register','settings','edit','notif','security','support','general',\n          'cred','reset','newtpk','archive','blocked','contacts',''].includes(hash.path[0])) {\n        this.setState({sidePanelSelected: hash.path[0]});\n      } else {\n        console.log(\"Unknown sidepanel view\", hash.path[0]);\n      }\n\n      // Topic for MessagesView selector.\n      if (hash.path.length > 1 && hash.path[1] != this.state.topicSelected) {\n        this.setState({\n          topicSelected: Tinode.topicType(hash.path[1]) ? hash.path[1] : null\n        });\n      }\n    } else {\n      // Empty hashpath\n      this.setState({sidePanelSelected: ''});\n    }\n\n    // Save validation credentials, if available.\n    if (hash.params.method) {\n      this.setState({ credMethod: hash.params.method });\n    }\n    if (hash.params.code) {\n      this.setState({ credCode: hash.params.code });\n    }\n\n    // Additional parameters of panels.\n    this.setState({\n      showInfoPanel: hash.params.info,\n      newTopicTabSelected: hash.params.tab\n    });\n  }\n\n  handleOnline(online) {\n    if (online) {\n      this.handleError();\n    } else {\n      this.handleError(this.props.intl.formatMessage({id: 'no_connection'}), 'warn');\n    }\n    this.setState({liveConnection: online});\n  }\n\n  handleVisibilityEvent() {\n    this.setState({applicationVisible: !document.hidden});\n  }\n\n  handleError(err, level, action, actionText) {\n    this.setState({errorText: err, errorLevel: level, errorAction: action, errorActionText: actionText});\n  }\n\n  // User clicked Login button in the side panel.\n  handleLoginRequest(login, password) {\n    this.setState({\n      loginDisabled: true,\n      login: login,\n      password: password,\n      loadSpinnerVisible: true,\n      autoLogin: true\n    });\n    this.handleError('', null);\n\n    if (this.tinode.isConnected()) {\n      this.doLogin(login, password, {meth: this.state.credMethod, resp: this.state.credCode});\n    } else {\n      this.tinode.connect().catch((err) => {\n        // Socket error\n        this.setState({loginDisabled: false, autoLogin: false, loadSpinnerVisible: false});\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // Connection succeeded.\n  handleConnected() {\n    const params = this.tinode.getServerInfo();\n    this.setState({\n      serverVersion: params.ver + ' ' + (params.build ? params.build : 'none')\n    });\n\n    if (this.state.autoLogin) {\n      this.doLogin(this.state.login, this.state.password, {meth: this.state.credMethod, resp: this.state.credCode});\n    }\n  }\n\n  // Called for each auto-reconnect iteration.\n  handleAutoreconnectIteration(sec, prom) {\n    clearInterval(this.reconnectCountdown);\n\n    if (sec < 0) {\n      // Clear error\n      this.handleError();\n      return;\n    }\n\n    if (prom) {\n      // Reconnecting now\n      prom.then(() => {\n        // Reconnected: clear error\n        this.handleError();\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n      return;\n    }\n\n    const {formatMessage} = this.props.intl;\n    let count = sec / 1000;\n    count = count | count;\n    this.reconnectCountdown = setInterval(() => {\n      const timeLeft = (count > 99) ? secondsToTime(count) : count;\n      this.handleError(\n        formatMessage(messages.reconnect_countdown, {seconds: timeLeft}),\n        'warn',\n        () => {\n          clearInterval(this.reconnectCountdown);\n          this.tinode.reconnect();\n        },\n        formatMessage(messages.reconnect_now)\n      );\n      count -= 1;\n    }, 1000);\n  }\n\n  // Connection lost\n  handleDisconnect(err) {\n    this.setState({\n      connected: false,\n      ready: false,\n      topicSelectedOnline: false,\n      errorText: err && err.message ? err.message : \"Disconnected\",\n      errorLevel: err && err.message ? 'err' : 'warn',\n      loginDisabled: false,\n      contextMenuVisible: false,\n      serverVersion: \"no connection\"\n    });\n  }\n\n  doLogin(login, password, cred) {\n    if (this.tinode.isAuthenticated()) {\n      // Already logged in. Go to default screen.\n      HashNavigation.navigateTo('');\n      return;\n    }\n    // Sanitize and package credentail.\n    cred = Tinode.credential(cred);\n    // Try to login with login/password. If they are not available, try token. If no token, ask for login/password.\n    let promise = null;\n    const token = this.tinode.getAuthToken();\n    if (login && password) {\n      this.setState({password: null});\n      promise = this.tinode.loginBasic(login, password, cred);\n    } else if (token) {\n      promise = this.tinode.loginToken(token.token, cred);\n    }\n\n    if (promise) {\n      promise.then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text === 'validate credentials') {\n          this.setState({loadSpinnerVisible: false});\n          if (cred) {\n            this.handleError(this.props.intl.formatMessage({id: 'code_doesnot_match'}), 'warn');\n          }\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful();\n        }\n      }).catch((err) => {\n        // Login failed, report error.\n        this.setState({\n          loginDisabled: false,\n          credMethod: undefined,\n          credCode: undefined,\n          loadSpinnerVisible: false,\n          autoLogin: false\n        });\n        this.handleError(err.message, 'err');\n        localStorage.removeItem('auth-token');\n        HashNavigation.navigateTo('');\n      });\n    } else {\n      // No login credentials provided.\n      // Make sure we are on the login page.\n      HashNavigation.navigateTo('');\n      this.setState({loginDisabled: false});\n    }\n  }\n\n  handleCredentialsRequest(params) {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    parsed.path[0] = 'cred';\n    parsed.params['method'] = params.cred[0];\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n  }\n\n  handleLoginSuccessful() {\n    this.handleError();\n\n    // Refresh authentication token.\n    if (LocalStorageUtil.getObject('keep-logged-in')) {\n      LocalStorageUtil.setObject('auth-token', this.tinode.getAuthToken());\n    }\n    // Logged in fine, subscribe to 'me' attaching callbacks from the contacts view.\n    const me = this.tinode.getMeTopic();\n    me.onMetaDesc = this.tnMeMetaDesc;\n    me.onContactUpdate = this.tnMeContactUpdate;\n    me.onSubsUpdated = this.tnMeSubsUpdated;\n    this.setState({\n      connected: true,\n      credMethod: undefined,\n      credCode: undefined,\n      myUserId: this.tinode.getCurrentUserID(),\n      autoLogin: true,\n    });\n    // Subscribe, fetch topic desc, the list of subscriptions. Messages are not fetched.\n    me.subscribe(\n      me.startMetaQuery().\n        withLaterSub().\n        withDesc().\n        withTags().\n        withCred().\n        build()\n      ).catch((err) => {\n        this.tinode.disconnect();\n        localStorage.removeItem('auth-token');\n        this.handleError(err.message, 'err');\n        HashNavigation.navigateTo('');\n      }).finally(() => {\n        this.setState({loadSpinnerVisible: false});\n      });\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, 'contacts'));\n  }\n\n  tnMeMetaDesc(desc) {\n    if (desc) {\n      if (desc.public) {\n        this.setState({\n          sidePanelTitle: desc.public.fn,\n          sidePanelAvatar: makeImageUrl(desc.public.photo)\n        });\n      }\n      if (desc.acs) {\n        this.setState({\n          incognitoMode: !desc.acs.isPresencer()\n        });\n      }\n    }\n  }\n\n  // Reactions to updates to the contact list.\n  tnMeContactUpdate(what, cont) {\n    if (what == 'on' || what == 'off') {\n      this.resetContactList();\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedOnline: (what == 'on')});\n      }\n    } else if (what == 'read') {\n      this.resetContactList();\n    } else if (what == 'msg') {\n      // Check if the topic is archived. If so, don't play a sound.\n      const topic = this.tinode.getTopic(cont.topic);\n      const archived = topic && topic.isArchived();\n\n      // New message received. Maybe the message is from the current user, then unread is 0.\n      if (cont.unread > 0 && this.state.messageSounds && !archived) {\n        // Skip update if the topic is currently open, otherwise the badge will annoyingly flash.\n        if (document.hidden || this.state.topicSelected != cont.topic) {\n          POP_SOUND.play();\n        }\n      }\n      // Reorder contact list to use possibly updated 'touched'.\n      this.resetContactList();\n    } else if (what == 'recv') {\n      // Explicitly ignoring \"recv\" -- it causes no visible updates to contact list.\n    } else if (what == 'gone' || what == 'unsub') {\n      // Topic deleted or user unsubscribed. Remove topic from view.\n      // If the currently selected topic is gone, clear the selection.\n      if (this.state.topicSelected == cont.topic) {\n        this.handleTopicSelected(null);\n      }\n      // Redraw without the deleted topic.\n      this.resetContactList();\n    } else if (what == 'acs') {\n      // Permissions changed. If it's for the currently selected topic,\n      // update the views.\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedAcs: cont.acs});\n      }\n    } else if (what == 'del') {\n      // TODO: messages deleted (hard or soft) -- update pill counter.\n    } else if (what == 'upd') {\n      // upd - handled by the SDK. Explicitly ignoring here.\n    } else {\n      // TODO(gene): handle other types of notifications:\n      // * ua -- user agent changes (maybe display a pictogram for mobile/desktop).\n      console.log(\"Unsupported (yet) presence update:\" + what + \" in: \" + cont.topic);\n    }\n  }\n\n  tnMeSubsUpdated(unused) {\n    this.resetContactList();\n  }\n\n  // Merge search results and contact list to create a single flat\n  // list of known contacts for GroupManager to use.\n  static prepareSearchableContacts(chatList, foundContacts) {\n    const merged = {};\n\n    // For chatList topics merge only p2p topics and convert them to the\n    // same format as foundContacts.\n    for (const c of chatList) {\n      if (Tinode.isP2PTopicName(c.topic)) {\n          merged[c.topic] = {\n            user: c.topic,\n            updated: c.updated,\n            public: c.public,\n            private: c.private,\n            acs: c.acs\n          };\n      }\n    }\n\n    // Add all foundCountacts if they have not been added already.\n    for (const c of foundContacts) {\n      if (!merged[c.user]) {\n        merged[c.user] = c;\n      }\n    }\n\n    return Object.values(merged);\n  }\n\n  resetContactList() {\n    const newState = {\n      chatList: []\n    };\n\n    if (!this.state.ready) {\n      newState.ready = true;\n    }\n\n    this.tinode.getMeTopic().contacts((c) => {\n      newState.chatList.push(c);\n      if (this.state.topicSelected == c.topic) {\n        newState.topicSelectedOnline = c.online;\n        newState.topicSelectedAcs = c.acs;\n      }\n    });\n    // Merge search results and chat list.\n    newState.searchableContacts = TinodeWeb.prepareSearchableContacts(newState.chatList, this.state.searchResults);\n    this.setState(newState);\n  }\n\n  // Sending \"received\" notifications\n  tnData(data) {\n    const topic = this.tinode.getTopic(data.topic);\n    if (topic.msgStatus(data) >= Tinode.MESSAGE_STATUS_SENT && data.from != this.state.myUserId) {\n      clearTimeout(this.receivedTimer);\n      this.receivedTimer = setTimeout(() => {\n        this.receivedTimer = undefined;\n        topic.noteRecv(data.seq);\n      }, RECEIVED_DELAY);\n    }\n  }\n\n  /* Fnd topic: find contacts by tokens */\n  tnInitFind() {\n    const fnd = this.tinode.getFndTopic();\n    fnd.onSubsUpdated = this.tnFndSubsUpdated;\n    if (fnd.isSubscribed()) {\n      this.tnFndSubsUpdated();\n    } else {\n      fnd.subscribe(fnd.startMetaQuery().withSub().build()).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  tnFndSubsUpdated() {\n    const foundContacts = [];\n    // Don't attempt to create P2P topics which already exist. Server will reject the duplicates.\n    this.tinode.getFndTopic().contacts((s) => {\n      foundContacts.push(s);\n    });\n    this.setState({\n      searchResults: foundContacts,\n      searchableContacts: TinodeWeb.prepareSearchableContacts(this.state.chatList, foundContacts)\n    });\n  }\n\n  /** Called when the user enters a contact into the contact search field in the NewAccount panel\n    @param query {Array} is an array of contacts to search for\n   */\n  handleSearchContacts(query) {\n    const fnd = this.tinode.getFndTopic();\n    fnd.setMeta({desc: {public: query}}).then((ctrl) => {\n      return fnd.getMeta(fnd.startMetaQuery().withSub().build());\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  // User clicked on a contact in the side panel or deleted a contact.\n  handleTopicSelected(topicName) {\n    // Clear newTopicParams after use.\n    if (this.state.newTopicParams && this.state.newTopicParams._topicName != topicName) {\n      this.setState({\n        newTopicParams: null\n      });\n    }\n\n    if (topicName) {\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'topic-view',\n        showInfoPanel: false\n      });\n      // Different contact selected.\n      if (this.state.topicSelected != topicName) {\n        this.setState({\n          topicSelectedOnline: this.tinode.isTopicOnline(topicName),\n          topicSelectedAcs: this.tinode.getTopicAccessMode(topicName)\n        });\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', topicName));\n      }\n    } else {\n      // Currently selected contact deleted\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'sidepanel',\n        topicSelectedOnline: false,\n        topicSelectedAcs: null,\n        showInfoPanel: false\n      });\n\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic('', null));\n    }\n  }\n\n  // In mobile view user requested to show sidepanel\n  handleHideMessagesView() {\n    this.setState({\n      mobilePanel: 'sidepanel'\n    });\n    HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, null));\n  }\n\n  // User is sending a message, either plain text or a drafty object, possibly\n  // with attachments.\n  //  - msg - Drafty message with content\n  //  - promise - Promise to be resolved when the upload is completed\n  //  - uploader - for tracking progress\n  handleSendMessage(msg, promise, uploader) {\n    const topic = this.tinode.getTopic(this.state.topicSelected);\n\n    msg = topic.createMessage(msg, false);\n    // The uploader is used to show progress.\n    msg._uploader = uploader;\n\n    if (!topic.isSubscribed()) {\n      if (!promise) {\n        promise = Promise.resolve();\n      }\n      promise = promise.then(() => { return topic.subscribe(); });\n    }\n\n    if (promise) {\n      promise = promise.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n\n    topic.publishDraft(msg, promise)\n      .then((ctrl) => {\n        if (topic.isArchived()) {\n          return topic.archive(false);\n        }\n      })\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleNewChatInvitation(topicName, action) {\n    const topic = this.tinode.getTopic(topicName);\n    let response = null;\n    switch (action) {\n      case 'accept':\n        // Accept given permissions.\n        const mode = topic.getAccessMode().getGiven();\n        response = topic.setMeta({sub: {mode: mode}});\n        if (topic.isP2PType()) {\n          // For P2P topics change 'given' permission of the peer too.\n          // In p2p topics the other user has the same name as the topic.\n          response = response.then((ctrl) => {\n            topic.setMeta({sub: {user: topicName, mode: mode}});\n          });\n        }\n        break;\n      case 'delete':\n        // Ignore invitation by deleting it.\n        response = topic.delTopic(true);\n        break;\n      case 'block':\n        // Ban the topic making futher invites impossible.\n        // Just self-ban.\n        const am = topic.getAccessMode().updateWant('-JP').getWant();\n        response = topic.setMeta({sub: {mode: am}}).then((ctrl) => {\n          return this.handleTopicSelected(null);\n        });\n        break;\n      default:\n        console.log(\"Unknown invitation action\", '\"' + action + '\"\"');\n    }\n\n    if (response != null) {\n      response.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // User chose a Sign Up menu item.\n  handleNewAccount() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, 'register'));\n  }\n\n  // Actual registration of a new account.\n  handleNewAccountRequest(login_, password_, public_, cred_, tags_) {\n    // Clear old error, if any.\n    this.handleError();\n\n    this.tinode.connect(this.state.serverAddress)\n      .then(() => {\n        return this.tinode.createAccountBasic(login_, password_,\n          {public: public_, tags: tags_, cred: Tinode.credential(cred_)});\n      }).then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text == 'validate credentials') {\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful(this);\n        }\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleUpdateAccountRequest(password, pub, defacs) {\n    this.handleError();\n\n    if (pub || defacs) {\n      const params = {};\n      if (pub) {\n        params.public = pub;\n      }\n      if (defacs) {\n        params.defacs = defacs;\n      }\n      this.tinode.getMeTopic().setMeta({desc: params}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n    if (password) {\n      this.tinode.updateAccountBasic(null, this.tinode.getCurrentLogin(), password).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleToggleIncognitoMode(on) {\n    const me = this.tinode.getMeTopic();\n    const am = me.getAccessMode().updateWant(on ? '-P' : '+P').getWant();\n    me.setMeta({sub: {mode: am}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleUpdateAccountTagsRequest(tags) {\n    this.tinode.getMeTopic().setMeta({tags: tags})\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  // User chose Settings menu item.\n  handleSettings() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'edit' : 'settings'));\n  }\n\n  // User updated global parameters.\n  handleGlobalSettings(settings) {\n    const serverAddress = settings.serverAddress || this.state.serverAddress;\n    const transport = settings.transport || this.state.transport;\n    if (this.tinode) {\n      this.tinode.clearStorage();\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.tinode = TinodeWeb.tnSetup(serverAddress, transport, this.props.intl.locale,\n      LocalStorageUtil.getObject('keep-logged-in'));\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n\n    this.setState({\n      serverAddress: serverAddress,\n      transport: transport\n    });\n    LocalStorageUtil.setObject('settings', {\n      serverAddress: serverAddress,\n      transport: transport\n    });\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, ''));\n  }\n\n  // User chose 'Archived chats'.\n  handleShowArchive() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'archive' : ''));\n  }\n\n  // User viewes 'Blocked chats'.\n  handleShowBlocked() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'blocked' : ''));\n  }\n\n  // Initialize desktop alerts = push notifications.\n  initDesktopAlerts() {\n    // Google could not be bothered to mention that\n    // onTokenRefresh is never called.\n    this.fbPush.onTokenRefresh(() => {\n      this.requestPushToken();\n    });\n\n    this.fbPush.onMessage((payload) => {\n      // No need to do anything about it.\n      // All the magic happends in the service worker.\n    });\n  }\n\n  togglePushToken(enabled) {\n    if (enabled) {\n      if (!this.state.firebaseToken) {\n        this.fbPush.requestPermission().then(() => {\n          this.requestPushToken();\n        }).catch((err) => {\n          this.handleError(err.message, 'err');\n          this.setState({desktopAlerts: false, firebaseToken: null});\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n          console.log(\"Failed to get permission to notify.\", err);\n        });\n      } else {\n        this.setState({desktopAlerts: true});\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n      }\n    } else if (this.state.firebaseToken) {\n      this.fbPush.deleteToken(this.state.firebaseToken).catch((err) => {\n        console.log(\"Unable to delete token.\", err);\n      }).finally(() => {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        localStorage.removeItem('firebase-token');\n        this.setState({desktopAlerts: false, firebaseToken: null});\n      });\n    } else {\n      this.setState({desktopAlerts: false, firebaseToken: null});\n      LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n    }\n  }\n\n  requestPushToken() {\n    this.fbPush.getToken().then((refreshedToken) => {\n      if (refreshedToken != this.state.firebaseToken) {\n        this.tinode.setDeviceToken(refreshedToken, true);\n        LocalStorageUtil.setObject('firebase-token', refreshedToken);\n      }\n      this.setState({firebaseToken: refreshedToken, desktopAlerts: true});\n      LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n      console.log(\"Failed to retrieve firebase token\", err);\n    });\n  }\n\n  handleToggleMessageSounds(enabled) {\n    this.setState({messageSounds: enabled});\n    LocalStorageUtil.updateObject('settings', {\n      messageSoundsOff: !enabled\n    });\n  }\n\n  handleCredAdd(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.setMeta({cred: {meth: method, val: value}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredDelete(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.delCredential(method, value).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredConfirm(method, response) {\n    this.handleCredentialsRequest({cred: [method]});\n  }\n\n  // User clicked Cancel button in Setting or Sign Up panel.\n  handleSidepanelCancel() {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    let path = '';\n    if (['security','support','general','notif'].includes(parsed.path[0])) {\n      path = 'edit';\n    } else if ('blocked' == parsed.path[0]) {\n      path = 'security';\n    } else if (this.state.myUserId) {\n      path = 'contacts';\n    }\n    parsed.path[0] = path;\n    if (parsed.params) {\n      delete parsed.params.code;\n      delete parsed.params.method;\n      delete parsed.params.tab;\n    }\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n    this.setState({errorText: '', errorLevel: null});\n  }\n\n  // Basic nagigator by hash value. No need to bind to this.\n  basicNavigator(hash) {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, hash));\n  }\n\n  // Request to start a topic, new or selected from search results, or \"by ID\".\n  handleStartTopicRequest(topicName, pub, priv, tags, isChannel) {\n    // Check if topic is indeed new. If not, launch it.\n    if (topicName && this.tinode.isTopicCached(topicName)) {\n      this.handleTopicSelected(topicName);\n      return;\n    }\n\n    const params = {};\n    if (Tinode.isP2PTopicName(topicName)) {\n      // Because we are initialing the subscription, set 'want' to all permissions.\n      params.sub = {mode: DEFAULT_P2P_ACCESS_MODE};\n      // Give the other user all permissions too.\n      params.desc = {defacs: {auth: DEFAULT_P2P_ACCESS_MODE}};\n    } else {\n      topicName = topicName || this.tinode.newGroupTopicName(isChannel);\n      params.desc = {public: pub, private: {comment: priv}};\n      params.tags = tags;\n    }\n    params._topicName = topicName;\n    this.setState({newTopicParams: params}, () => {this.handleTopicSelected(topicName)});\n  }\n\n  // New topic was creted, here is the new topic name.\n  handleNewTopicCreated(oldName, newName) {\n    if (this.state.topicSelected == oldName && oldName != newName) {\n      // If the current URl contains the old topic name, replace it with new.\n      // Update the name of the selected topic first so the navigator doen't clear\n      // the state.\n      this.setState({topicSelected: newName}, () => {\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', newName));\n      });\n    }\n  }\n\n  handleTopicUpdateRequest(topicName, pub, priv, permissions) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const params = {};\n      if (pub) {\n        params.public = pub;\n      }\n      if (priv) {\n        params.private = (priv === Tinode.DEL_CHAR) ?\n          Tinode.DEL_CHAR : {comment: priv};\n      }\n      if (permissions) {\n        params.defacs = permissions;\n      }\n      topic.setMeta({desc: params}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleChangePermissions(topicName, mode, uid) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const am = topic.getAccessMode();\n      if (uid) {\n        am.updateGiven(mode);\n        mode = am.getGiven();\n      } else {\n        am.updateWant(mode);\n        mode = am.getWant();\n      }\n      topic.setMeta({sub: {user: uid, mode: mode}}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleTagsUpdated(topicName, tags) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      topic.setMeta({tags: tags}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleLogout() {\n    updateFavicon(0);\n\n    // Remove stored data.\n    localStorage.removeItem('auth-token');\n    localStorage.removeItem('firebase-token');\n    localStorage.removeItem('settings');\n    if (this.state.firebaseToken) {\n      this.fbPush.deleteToken(this.state.firebaseToken)\n    }\n\n    if (this.tinode) {\n      this.tinode.clearStorage();\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.setState(this.getBlankState());\n\n    this.tinode = TinodeWeb.tnSetup(this.state.serverAddress,\n      this.state.transport, this.props.intl.locale, LocalStorageUtil.getObject('keep-logged-in'));\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    HashNavigation.navigateTo('');\n  }\n\n  handleDeleteAccount() {\n    this.tinode.delCurrentUser(true).then((ctrl) => {\n      this.handleLogout();\n    });\n  }\n\n  handleDeleteMessagesRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Request hard-delete all messages.\n    topic.delMessagesAll(true).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleLeaveUnsubRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.leave(true).then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleBlockTopicRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleReportTopic(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Publish spam report.\n    this.tinode.publish(Tinode.TOPIC_SYS, Tinode.Drafty.attachJSON(null, {\n      'action': 'report',\n      'target': topicName\n    }));\n\n    // Remove J and P permissions.\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleShowContextMenu(params, menuItems) {\n    this.setState({\n      contextMenuVisible: true,\n      contextMenuClickAt: {x: params.x, y: params.y},\n      contextMenuParams: params,\n      contextMenuItems: menuItems || this.defaultTopicContextMenu(params.topicName),\n      contextMenuBounds: ReactDOM.findDOMNode(this).getBoundingClientRect()\n    });\n  }\n\n  defaultTopicContextMenu(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n\n    let muted = false, blocked = false, self_blocked = false, subscribed = false, deleter = false, archived = false;\n    if (topic) {\n      subscribed = topic.isSubscribed();\n      archived = topic.isArchived();\n\n      const acs = topic.getAccessMode();\n      if (acs) {\n        muted = acs.isMuted();\n        blocked = !acs.isJoiner();\n        self_blocked = !acs.isJoiner('want');\n        deleter = acs.isDeleter();\n      }\n    }\n\n    return [\n      subscribed ? {\n        title: this.props.intl.formatMessage({id: 'menu_item_info'}),\n        handler: this.handleShowInfoView\n      } : null,\n      subscribed ? 'messages_clear' : null,\n      subscribed && deleter ? 'messages_clear_hard' : null,\n      muted ? (blocked ? null : 'topic_unmute') : 'topic_mute',\n      self_blocked ? 'topic_unblock' : 'topic_block',\n      !archived ? 'topic_archive' : null,\n      'topic_delete'\n    ];\n  }\n\n  handleHideContextMenu() {\n    this.setState({\n      contextMenuVisible: false,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuBounds: null\n    });\n  }\n\n  handleContextMenuAction(action, promise, params) {\n    if (action == 'topic_archive') {\n      if (promise && params.topicName && params.topicName == this.state.topicSelected) {\n        promise.then(() => {\n          this.handleTopicSelected(null);\n        });\n      }\n    }\n  }\n\n  handleShowAlert(title, content, onConfirm, confirmText, onReject, rejectText) {\n    this.setState({\n      alertVisible: true,\n      alertParams: {\n        title: title,\n        content: content,\n        onConfirm: onConfirm,\n        confirm: confirmText,\n        onReject: onReject,\n        reject: rejectText\n      }\n    });\n  }\n\n  handleShowInfoView() {\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'info', true));\n    this.setState({showInfoPanel: true});\n  }\n\n  handleHideInfoView() {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'info'));\n    this.setState({showInfoPanel: false});\n  }\n\n  handleMemberUpdateRequest(topicName, added, removed) {\n    if (!topicName) {\n      return;\n    }\n\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    if (added && added.length > 0) {\n      added.map((uid) => {\n        topic.invite(uid, null).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n\n    if (removed && removed.length > 0) {\n      removed.map((uid) => {\n        topic.delSubscription(uid).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n  }\n\n  handleValidateCredentialsRequest(cred, code) {\n    if (this.tinode.isAuthenticated()) {\n      const me = this.tinode.getMeTopic();\n      me.setMeta({cred: {meth: cred, resp: code}})\n        .then(() => {\n          HashNavigation.navigateTo('');\n        })\n        .catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n    } else {\n      this.setState({credMethod: cred, credCode: code});\n      this.doLogin(null, null, {meth: cred, resp: code});\n    }\n  }\n\n  handlePasswordResetRequest(method, value) {\n    // If already connected, connnect() will return a resolved promise.\n    this.tinode.connect()\n      .then(() => {\n        return this.tinode.requestResetAuthSecret('basic', method, value);\n      })\n      .catch((err) => {\n        // Socket error\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleResetPassword(scheme, newPassword, token) {\n    token = base64ReEncode(token);\n    if (!token) {\n      this.handleError(this.props.intl.formatMessage({id: 'invalid_security_token'}), 'err');\n    } else {\n      this.tinode.connect()\n        .then(() => {\n          return this.tinode.updateAccountBasic(null, null, newPassword, {token: token});\n        })\n        .catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"app-container\">\n        {this.state.contextMenuVisible ?\n          <ContextMenu\n            tinode={this.tinode}\n            bounds={this.state.contextMenuBounds}\n            clickAt={this.state.contextMenuClickAt}\n            params={this.state.contextMenuParams}\n            items={this.state.contextMenuItems}\n            hide={this.handleHideContextMenu}\n            onShowAlert={this.handleShowAlert}\n            onAction={this.handleContextMenuAction}\n            onTopicRemoved={(topicName) => {\n              if (topicName == this.state.topicSelected) {\n                this.handleTopicSelected(null);\n              }\n            }}\n            onError={this.handleError} />\n          :\n          null\n        }\n        <Alert\n          visible={this.state.alertVisible}\n          title={this.state.alertParams.title}\n          content={this.state.alertParams.content}\n          onReject={this.state.alertParams.onReject ? (() => { this.setState({alertVisible: false}); }) : null}\n          reject={this.state.alertParams.reject}\n          onConfirm={() => { this.setState({alertVisible: false}); this.state.alertParams.onConfirm(); }}\n          confirm={this.state.alertParams.confirm}\n          />\n        <SidepanelView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          displayMobile={this.state.displayMobile}\n          hideSelf={this.state.displayMobile && this.state.mobilePanel !== 'sidepanel'}\n          state={this.state.sidePanelSelected}\n          title={this.state.sidePanelTitle}\n          avatar={this.state.sidePanelAvatar}\n          login={this.state.login}\n          myUserId={this.state.myUserId}\n          loginDisabled={this.state.loginDisabled}\n          loadSpinnerVisible={this.state.loadSpinnerVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          topicSelected={this.state.topicSelected}\n          chatList={this.state.chatList}\n          credMethod={this.state.credMethod}\n          credCode={this.state.credCode}\n\n          transport={this.state.transport}\n          messageSounds={this.state.messageSounds}\n          desktopAlerts={this.state.desktopAlerts}\n          desktopAlertsEnabled={this.state.desktopAlertsEnabled}\n          incognitoMode={this.state.incognitoMode}\n          serverAddress={this.state.serverAddress}\n          serverVersion={this.state.serverVersion}\n\n          onGlobalSettings={this.handleGlobalSettings}\n          onSignUp={this.handleNewAccount}\n          onSettings={this.handleSettings}\n          onBasicNavigate={this.basicNavigator}\n          onLoginRequest={this.handleLoginRequest}\n          onCreateAccount={this.handleNewAccountRequest}\n          onUpdateAccount={this.handleUpdateAccountRequest}\n          onUpdateAccountTags={this.handleUpdateAccountTagsRequest}\n          onTogglePushNotifications={this.togglePushToken}\n          onToggleMessageSounds={this.handleToggleMessageSounds}\n          onToggleIncognitoMode={this.handleToggleIncognitoMode}\n          onCredAdd={this.handleCredAdd}\n          onCredDelete={this.handleCredDelete}\n          onCredConfirm={this.handleCredConfirm}\n          onTopicSelected={this.handleTopicSelected}\n          onCreateTopic={this.handleStartTopicRequest}\n          onLogout={this.handleLogout}\n          onDeleteAccount={this.handleDeleteAccount}\n          onShowAlert={this.handleShowAlert}\n          onCancel={this.handleSidepanelCancel}\n          onError={this.handleError}\n          onValidateCredentials={this.handleValidateCredentialsRequest}\n          onPasswordResetRequest={this.handlePasswordResetRequest}\n          onResetPassword={this.handleResetPassword}\n          onShowArchive={this.handleShowArchive}\n          onShowBlocked={this.handleShowBlocked}\n\n          onInitFind={this.tnInitFind}\n          searchResults={this.state.searchResults}\n          onSearchContacts={this.handleSearchContacts}\n\n          showContextMenu={this.handleShowContextMenu} />\n\n        <MessagesView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          ready={this.state.ready}\n          online={this.state.topicSelectedOnline}\n          acs={this.state.topicSelectedAcs}\n          displayMobile={this.state.displayMobile}\n          viewportWidth={this.state.viewportWidth}\n          viewportHeight={this.state.viewportHeight}\n          hideSelf={this.state.displayMobile &&\n            (this.state.mobilePanel !== 'topic-view' || this.state.showInfoPanel)}\n          topic={this.state.topicSelected}\n          myUserId={this.state.myUserId}\n          serverVersion={this.state.serverVersion}\n          serverAddress={this.state.serverAddress}\n          applicationVisible={this.state.applicationVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          newTopicParams={this.state.newTopicParams}\n\n          onHideMessagesView={this.handleHideMessagesView}\n          onData={this.tnData}\n          onError={this.handleError}\n          onNewTopicCreated={this.handleNewTopicCreated}\n          showContextMenu={this.handleShowContextMenu}\n          onChangePermissions={this.handleChangePermissions}\n          onNewChat={this.handleNewChatInvitation}\n          sendMessage={this.handleSendMessage} />\n\n        {this.state.showInfoPanel ?\n          <InfoView\n            tinode={this.tinode}\n            connected={this.state.connected}\n            displayMobile={this.state.displayMobile}\n            topic={this.state.topicSelected}\n            searchableContacts={this.state.searchableContacts}\n            myUserId={this.state.myUserId}\n\n            errorText={this.state.errorText}\n            errorLevel={this.state.errorLevel}\n            errorAction={this.state.errorAction}\n            errorActionText={this.state.errorActionText}\n\n            onTopicDescUpdate={this.handleTopicUpdateRequest}\n            onCancel={this.handleHideInfoView}\n            onShowAlert={this.handleShowAlert}\n            onChangePermissions={this.handleChangePermissions}\n            onMemberUpdateRequest={this.handleMemberUpdateRequest}\n            onDeleteMessages={this.handleDeleteMessagesRequest}\n            onLeaveTopic={this.handleLeaveUnsubRequest}\n            onBlockTopic={this.handleBlockTopicRequest}\n            onReportTopic={this.handleReportTopic}\n            onAddMember={this.handleManageGroupMembers}\n            onTopicTagsUpdate={this.handleTagsUpdated}\n            onInitFind={this.tnInitFind}\n            onError={this.handleError}\n\n            showContextMenu={this.handleShowContextMenu}\n            />\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(TinodeWeb);\n","// Put all packages together.\n// Used to generate umd/index.prod.js\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { IntlProvider } from 'react-intl';\n\nimport allMessages from './messages.json';\nimport TinodeWeb from './views/tinode-web.jsx';\nimport HashNavigation from './lib/navigation.js';\n\n// Detect human language to use in the UI:\n//  Check parameters from URL hash #?hl=ru, then browser, then use 'en' as a fallback.\nconst { params } = HashNavigation.parseUrlHash(window.location.hash);\nconst language = (params && params.hl) ||\n  (navigator.languages && navigator.languages[0]) ||\n  navigator.language ||\n  navigator.userLanguage ||\n  'en';\n\n// Get the base language 'en' from a more specific 'en_GB' or 'en-US' as a partial fallback.\nconst baseLanguage = language.toLowerCase().split(/[-_]/)[0];\n\n// Try the full locale first, then the locale without the region code, fallback to 'en'.\nconst messages =\n  allMessages[language] ||\n  allMessages[baseLanguage] ||\n  allMessages.en;\n\nReactDOM.render(\n  <IntlProvider locale={language} messages={messages} textComponent={React.Fragment}>\n    <TinodeWeb />\n  </IntlProvider>,\n  document.getElementById('mountPoint')\n);\n"],"sourceRoot":""}