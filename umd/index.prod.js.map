{"version":3,"file":"index.prod.js","mappings":"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","sources":["webpack://tinode-webapp/external \"React\"","webpack://tinode-webapp/external \"ReactDOM\"","webpack://tinode-webapp/external \"ReactIntl\"","webpack://tinode-webapp/external \"firebase\"","webpack://tinode-webapp/external \"Tinode\"","webpack://tinode-webapp/external [\"firebase\",\"messaging\"]","webpack://tinode-webapp/./src/widgets/alert.jsx","webpack://tinode-webapp/./src/version.js","webpack://tinode-webapp/./src/config.js","webpack://tinode-webapp/./src/widgets/context-menu.jsx","webpack://tinode-webapp/./src/lib/strformat.js","webpack://tinode-webapp/./src/lib/utils.js","webpack://tinode-webapp/./src/widgets/letter-tile.jsx","webpack://tinode-webapp/./src/widgets/load-spinner.jsx","webpack://tinode-webapp/./src/widgets/avatar-upload.jsx","webpack://tinode-webapp/./src/widgets/badge-list.jsx","webpack://tinode-webapp/./src/widgets/checkbox.jsx","webpack://tinode-webapp/./src/widgets/contact-badges.jsx","webpack://tinode-webapp/./src/widgets/received-marker.jsx","webpack://tinode-webapp/./src/widgets/unread-badge.jsx","webpack://tinode-webapp/./src/widgets/contact.jsx","webpack://tinode-webapp/./src/widgets/contact-action.jsx","webpack://tinode-webapp/./src/lib/blob-helpers.js","webpack://tinode-webapp/./src/widgets/contact-list.jsx","webpack://tinode-webapp/./src/widgets/menu-cancel.jsx","webpack://tinode-webapp/./src/widgets/error-panel.jsx","webpack://tinode-webapp/./src/widgets/chip.jsx","webpack://tinode-webapp/./src/widgets/chip-input.jsx","webpack://tinode-webapp/./src/widgets/group-manager.jsx","webpack://tinode-webapp/./src/widgets/permissions-editor.jsx","webpack://tinode-webapp/./src/widgets/cropper.jsx","webpack://tinode-webapp/./src/widgets/avatar-crop.jsx","webpack://tinode-webapp/./src/widgets/visible-password.jsx","webpack://tinode-webapp/./src/widgets/in-place-edit.jsx","webpack://tinode-webapp/./src/widgets/tag-manager.jsx","webpack://tinode-webapp/./src/widgets/topic-desc-edit.jsx","webpack://tinode-webapp/./src/widgets/topic-common.jsx","webpack://tinode-webapp/./src/widgets/topic-security.jsx","webpack://tinode-webapp/./src/views/info-view.jsx","webpack://tinode-webapp/./src/widgets/file-progress.jsx","webpack://tinode-webapp/./src/widgets/attachment.jsx","webpack://tinode-webapp/./src/widgets/uploading-image.jsx","webpack://tinode-webapp/./src/widgets/chat-message.jsx","webpack://tinode-webapp/./src/widgets/send-message.jsx","webpack://tinode-webapp/./src/widgets/doc-preview.jsx","webpack://tinode-webapp/./src/widgets/group-subs.jsx","webpack://tinode-webapp/./src/widgets/image-preview.jsx","webpack://tinode-webapp/./src/widgets/invitation.jsx","webpack://tinode-webapp/./src/views/logo-view.jsx","webpack://tinode-webapp/./src/lib/navigation.js","webpack://tinode-webapp/./src/views/messages-view.jsx","webpack://tinode-webapp/./src/widgets/button-back.jsx","webpack://tinode-webapp/./src/widgets/menu-contacts.jsx","webpack://tinode-webapp/./src/widgets/menu-start.jsx","webpack://tinode-webapp/./src/widgets/side-navbar.jsx","webpack://tinode-webapp/./src/views/account-settings-view.jsx","webpack://tinode-webapp/./src/views/contacts-view.jsx","webpack://tinode-webapp/./src/lib/local-storage.js","webpack://tinode-webapp/./src/views/create-account-view.jsx","webpack://tinode-webapp/./src/views/acc-notifications-view.jsx","webpack://tinode-webapp/./src/views/acc-security-view.jsx","webpack://tinode-webapp/./src/views/acc-support-view.jsx","webpack://tinode-webapp/./src/views/login-view.jsx","webpack://tinode-webapp/./src/widgets/new-topic-by-id.jsx","webpack://tinode-webapp/./src/widgets/new-topic-group.jsx","webpack://tinode-webapp/./src/widgets/search-contacts.jsx","webpack://tinode-webapp/./src/views/new-topic-view.jsx","webpack://tinode-webapp/./src/views/password-reset-view.jsx","webpack://tinode-webapp/./src/widgets/host-selector.jsx","webpack://tinode-webapp/./src/views/settings-view.jsx","webpack://tinode-webapp/./src/views/validation-view.jsx","webpack://tinode-webapp/./src/views/sidepanel-view.jsx","webpack://tinode-webapp/./src/lib/host-name.js","webpack://tinode-webapp/./src/views/tinode-web.jsx","webpack://tinode-webapp/./src/index.js","webpack://tinode-webapp/webpack/bootstrap","webpack://tinode-webapp/webpack/runtime/compat get default export","webpack://tinode-webapp/webpack/runtime/define property getters","webpack://tinode-webapp/webpack/runtime/hasOwnProperty shorthand","webpack://tinode-webapp/webpack/startup"],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = React;","const __WEBPACK_NAMESPACE_OBJECT__ = ReactDOM;","const __WEBPACK_NAMESPACE_OBJECT__ = ReactIntl;","const __WEBPACK_NAMESPACE_OBJECT__ = firebase;","const __WEBPACK_NAMESPACE_OBJECT__ = Tinode;","const __WEBPACK_NAMESPACE_OBJECT__ = firebase.messaging;","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Alert extends React.PureComponent {\n  render() {\n    return this.props.visible ?\n      <div className=\"alert-container\">\n        <div className=\"alert\">\n          <div className=\"title\">{this.props.title}</div>\n          <div className=\"content\">{this.props.content}</div>\n          <div className=\"dialog-buttons\">\n            {this.props.onReject ?\n              <button className=\"outline\" onClick={this.props.onReject}>\n                {this.props.reject || <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />}\n              </button>\n              :\n              null\n            }\n            <button className=\"primary\" onClick={this.props.onConfirm}>\n              {this.props.confirm || <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\"  />}\n            </button>\n          </div>\n        </div>\n      </div>\n    :\n    null;\n  }\n};\n","// This is a generated file. Don't edit.\n\nexport const PACKAGE_VERSION = \"0.18.0-alpha1\";\n","import { PACKAGE_VERSION } from './version.js';\n\n// Name of this application, used in the User-Agent.\nexport const APP_NAME = 'TinodeWeb/' + (PACKAGE_VERSION || '0.17');\n\n// API key. Use https://github.com/tinode/chat/tree/master/keygen to generate your own\nexport const API_KEY = 'AQEAAAABAAD_rAp4DJh05a1HAwFT3A6K';\n\n// The array of possible hosts to connect to.\nexport const KNOWN_HOSTS = {hosted: 'web.tinode.co', local: 'localhost:6060'};\n\n// Default host name and port to connect to.\nexport const DEFAULT_HOST = KNOWN_HOSTS.hosted;\n\n// Enable console logging.\nexport const LOGGING_ENABLED = true;\n\n// Minimum time between two keypress notifications, milliseconds.\nexport const KEYPRESS_DELAY = 3*1000;\n// Delay before sending a {note} for reciving a message, milliseconds.\nexport const RECEIVED_DELAY = 500;\n// Delay before sending a read notification, milliseconds.\nexport const READ_DELAY = 1000;\n\n// The default shortest allowed tag length. Matches the value on the server.\nexport const MIN_TAG_LENGTH = 2;\n// The default greatest allowed tag length. Matches the value on the server.\nexport const MAX_TAG_LENGTH = 96;\n// The default maximum number of tags allowed. Matches the value on the server.\nexport const MAX_TAG_COUNT = 16;\n\n// Access mode for P2P subscriptions initiated by the current user.\nexport const DEFAULT_P2P_ACCESS_MODE = 'JRWPS';\n// Access mode for new group topics created by the current user.\nexport const NEW_GRP_ACCESS_MODE = 'JRWPSAO';\n// Access mode for a channel.\nexport const CHANNEL_ACCESS_MODE = 'JR';\n\n// Access mode for no access.\nexport const NO_ACCESS_MODE = 'N';\n\n// Mediaquery breakpoint between desktop and mobile, in px. Should match the value\n// in @media (max-size: 640px) in base.css\nexport const MEDIA_BREAKPOINT = 640;\n// Size of css 'rem' unit in pixels. Default 1rem = 10pt = 13px.\nexport const REM_SIZE = 13;\n\n// Size of the avatar image: when image dimensions are greater or the image is not square, it's resized to\n// a square of this size or less.\nexport const AVATAR_SIZE = 384;\n\n// Maximum size of an avatar in bytes for sending in-band. Bigger avatars will be sent out of band (as uploads).\nexport const MAX_AVATAR_BYTES = 4096;\n\n// Size of the broken_image shown in MessagesView\nexport const BROKEN_IMAGE_SIZE = 32;\n\n// Number of chat messages to fetch in one call.\nexport const MESSAGES_PAGE = 24;\n\n// Default maximum in-band (included directly into the message) attachment size which fits into\n// a message of 256K in size. Used when the server-provided value is unavailable. The actual\n// binary size of the attachment should be smaller due to base64 encoding expansion and some overhead,\n// for instance 1024 bytes.\n// Increase this limit to a greater value in production, if desired. Also increase\n// max_message_size in the server config.\nexport const MAX_INBAND_ATTACHMENT_SIZE = 262144;\n\n// Default absolute maximum attachment size to be used with the server = 8MB.\n// Used when the server-provided value is unavailable. Increase to something like 100MB in production.\nexport const MAX_EXTERN_ATTACHMENT_SIZE = 1 << 23;\n\n// Maximum allowed linear dimension (pixels) of an image sent inline. Larger images will be shrunk\n// to make the larger dimension fit under this size. You may want to adjust it to 1600 or\n// 2400 for production.\nexport const MAX_IMAGE_DIM = 1024;\n\n// Linear dimensions of image preview: shrink image under this size for previews.\nexport const IMAGE_PREVIEW_DIM = 64;\n\n// Linear dimensions of image thumbnail: shrink image under this size for thumbnails in reply quote previews.\nexport const IMAGE_THUMBNAIL_DIM = 25;\n\n// Maximum number of online users to be shown in a topic title bar. Others will be\n// hidden under \"+X more\"\nexport const MAX_ONLINE_IN_TOPIC = 4;\n\n// Maximum length of user name, topic title, and private comment.\nexport const MAX_TITLE_LENGTH = 60;\n// Maximum length of topic description.\nexport const MAX_TOPIC_DESCRIPTION_LENGTH = 360;\n\n// Length of message previews in chat list, in characters.\nexport const MESSAGE_PREVIEW_LENGTH = 80;\n\n// Link for \"Contact Us\".\nexport const LINK_CONTACT_US = 'email:support@tinode.co';\n\n// Link to Privacy Policy.\nexport const LINK_PRIVACY_POLICY = 'https://tinode.co/privacy.html';\n\n// Link to Terms of Service.\nexport const LINK_TERMS_OF_SERVICE = 'https://tinode.co/terms.html';\n","// Context Menu: popup/dropdown menu.\nimport React from 'react';\nimport { injectIntl, defineMessages } from 'react-intl';\n\nimport { REM_SIZE } from '../config.js';\n\nconst messages = defineMessages({\n  info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  },\n  clear_messages: {\n    id: 'menu_item_clear_messages',\n    defaultMessage: 'Clear messages',\n    description: 'Delete all messages'\n  },\n  clear_for_all: {\n    id: 'menu_item_clear_messages_for_all',\n    defaultMessage: 'Clear for All',\n    description: 'Delete all message(s) for all members'\n  },\n  delete: {\n    id: 'menu_item_delete',\n    defaultMessage: 'Delete',\n    description: 'Delete selected messages'\n  },\n  delete_for_all: {\n    id: 'menu_item_delete_for_all',\n    defaultMessage: 'Delete for All',\n    description: 'Delete selected message(s) for all members'\n  },\n  send_retry: {\n    id: 'menu_item_send_retry',\n    defaultMessage: 'Retry',\n    description: 'Retry sending message'\n  },\n  mute: {\n    id: 'menu_item_mute',\n    defaultMessage: 'Mute',\n    description: 'Turn off notifications'\n  },\n  unmute: {\n    id: 'menu_item_unmute',\n    defaultMessage: 'Unmute',\n    description: 'Turn notifications on'\n  },\n  reply: {\n    id: 'menu_item_reply',\n    defaultMessage: 'Reply',\n    description: 'Reply to message'\n  },\n  topic_delete: {\n    id: 'menu_item_delete_topic',\n    defaultMessage: 'Delete',\n    description: 'Delete entire topic'\n  },\n  topic_delete_warning: {\n    id: 'topic_delete_warning',\n    defaultMessage: 'Are you sure you want to delete this conversation? It cannot be undone.',\n    description: 'Alert warning when deleting entire topic'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  unblock: {\n    id: 'menu_item_unblock',\n    defaultMessage: 'Unblock',\n    description: 'Unblock topic or user'\n  },\n  // Generic string suitable for either topic or user.\n  block: {\n    id: 'menu_item_block',\n    defaultMessage: 'Block',\n    description: 'Block topic or user'\n  },\n  topic_block_warning: {\n    id: 'topic_block_warning',\n    defaultMessage: 'Are you sure you want to block this conversation?',\n    description: 'Alert warning when blocking a topic.'\n  },\n  member_delete: {\n    id: 'menu_item_member_delete',\n    defaultMessage: 'Remove',\n    description: 'Remove user from topic'\n  },\n  archive: {\n    id: 'menu_item_archive_topic',\n    defaultMessage: 'Archive',\n    description: 'Move topic from the list of active chats to archive'\n  },\n  unarchive: {\n    id: 'menu_item_restore_topic',\n    defaultMessage: 'Restore',\n    description: 'Restore topic from archive'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n});\n\nclass ContextMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selfRef = React.createRef();\n\n    const {formatMessage} = props.intl;\n\n    this.handlePageClick = this.handlePageClick.bind(this);\n    this.handleEscapeKey = this.handleEscapeKey.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n\n    // Preconfigured menu items.\n    this.MenuItems = {\n      'topic_info': {\n        id: 'topic_info',\n        title: formatMessage(messages.info),\n        handler: null\n      },\n      'messages_clear': {\n        id: 'messages_clear',\n        title: formatMessage(messages.clear_messages),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.clear_messages), // title\n            formatMessage(messages.clear_messages_warning), // content\n            (() => { this.deleteMessages(true, false, params, errorHandler); }), // onConfirm\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'messages_clear_hard': {\n        id: 'messages_clear_hard',\n        title: formatMessage(messages.clear_for_all),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.clear_for_all), // title\n            formatMessage(message.delete_messages_warning), // content\n            (() => { return this.deleteMessages(true, true, params, errorHandler); }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'message_delete': {\n        id: 'message_delete',\n        title: formatMessage(messages.delete),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, false, params, errorHandler);\n        }\n      },\n      'message_delete_hard': {\n        id: 'message_delete_hard',\n        title: formatMessage(messages.delete_for_all),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, true, params, errorHandler);\n        }\n      },\n      'menu_item_send_retry': {\n        id: 'menu_item_send_retry',\n        title: formatMessage(messages.send_retry),\n        handler: (params, errorHandler) => {\n          return this.retryMessage(params, errorHandler);\n        }\n      },\n      'menu_item_reply': {\n        id: 'menu_item_reply',\n        title: formatMessage(messages.reply),\n        handler: (params, errorHandler) => {\n          return this.replyToMessage(params, errorHandler);\n        }\n      },\n      'topic_unmute': {\n        id: 'topic_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'topic_mute': {\n        id: 'topic_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'topic_unblock': {\n        id: 'topic_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n      'topic_block': {\n        id: 'topic_block',\n        title: formatMessage(messages.block),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.block), // title\n            formatMessage(messages.topic_block_warning), // content\n            (() => {\n              return this.topicPermissionSetter('-JP', params, errorHandler).then((ctrl) => {\n                this.props.onTopicRemoved(params.topicName);\n                return ctrl;\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_delete': {\n        id: 'topic_delete',\n        title: formatMessage(messages.topic_delete),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.topic_delete), // title\n            formatMessage(messages.topic_delete_warning), // content\n            (() => {\n              const topic = this.props.tinode.getTopic(params.topicName);\n              if (!topic) {\n                console.log(\"Topic not found: \", params.topicName);\n                return;\n              }\n              return topic.delTopic(true).catch((err) => {\n                if (errorHandler) {\n                  errorHandler(err.message, 'err');\n                }\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_archive': {\n        id: 'topic_archive',\n        title: formatMessage(messages.archive),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic) {\n            console.log(\"Topic not found: \", params.topicName);\n            return;\n          }\n          return topic.archive(true).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      'topic_restore': {\n        id: 'topic_restore',\n        title: formatMessage(messages.unarchive),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic) {\n            console.log(\"Topic not found: \", params.topicName);\n            return;\n          }\n          return topic.archive(false).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      // menu_item_edit_permissions is defined elsewhere.\n      'permissions': {\n        id: 'permissions',\n        title: formatMessage(messages.edit_permissions),\n        handler: null\n      },\n      'member_delete': {\n        id: 'member_delete',\n        title: formatMessage(messages.member_delete),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic || !params.user) {\n            console.log(\"Topic or user not found: '\" + params.topicName + \"', '\" + params.user + \"'\");\n            return;\n          }\n          return topic.delSubscription(params.user).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      'member_mute': {\n        id: 'member_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'member_unmute': {\n        id: 'member_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'member_block': {\n        id: 'member_block',\n        title: formatMessage(messages.block),\n        handler: this.topicPermissionSetter.bind(this, '-JP')\n      },\n      'member_unblock': {\n        id: 'member_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handlePageClick, false);\n    document.addEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handlePageClick, false);\n    document.removeEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  handlePageClick(e) {\n    if (this.selfRef.current.contains(e.target)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n  }\n\n  handleEscapeKey(e) {\n    if (e.keyCode === 27) {\n      this.props.hide();\n    }\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n    let item = this.props.items[e.currentTarget.dataset.id];\n    if (typeof item == 'string') {\n      item = this.MenuItems[item];\n    }\n\n    if (!item) {\n      console.error(\"Invalid menu item ID\", e.currentTarget.dataset.id);\n    } else {\n      this.props.onAction(\n        item.id,\n        item.handler(this.props.params, this.props.onError),\n        this.props.params);\n    }\n  }\n\n  // Menu Actions\n\n  deleteMessages(all, hard, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found: \", params.topicName);\n      return;\n    }\n\n    // We don't know if the message is still pending (e.g. attachment is being uploaded),\n    // so try cancelling first. No harm if we can't cancel.\n    // The message can be cancelled if transmission to the server has not\n    // started yet or if the message send has failed.\n    if (!all && topic.cancelSend(params.seq)) {\n      return;\n    }\n    // Can't cancel. Delete instead.\n    const promise = all ?\n      topic.delMessagesAll(hard) :\n      topic.delMessagesList([params.seq], hard);\n\n    return promise.catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Retries sending failed message.\n  retryMessage(params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    // Remove the existing message entry.\n    if (!topic || !topic.flushMessage(params.seq)) {\n      return;\n    }\n    const msg = topic.createMessage(params.content, false);\n    return topic.publishDraft(msg).catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Function is used by context menu to set permissions.\n  topicPermissionSetter(mode, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found\", params.topicName);\n      return;\n    }\n\n    let result = topic.updateMode(params.user, mode);\n    if (errorHandler) {\n      result = result.catch((err) => {\n        errorHandler(err.message, 'err');\n      });\n    }\n    return result;\n  }\n\n  replyToMessage(params, errorHandler) {\n    console.log(\"Reply to message\", params);\n    params.pickReply({ seq: params.seq, content: params.content });\n  }\n\n  render() {\n    const menu = [];\n    let count = 0;\n    this.props.items.map((item) => {\n      if (typeof item == 'string') {\n        item = this.MenuItems[item];\n      }\n      if (item && item.title) {\n        menu.push(\n          item.title == '-' ?\n            <li className=\"separator\" key={count} />\n            :\n            <li onClick={this.handleClick} data-id={count} key={count}>{item.title}</li>\n        );\n      }\n      count++;\n    });\n\n    // Ensure that menu is inside the app-container.\n    const hSize = 12 * REM_SIZE;\n    const vSize = REM_SIZE * (0.7 + menu.length * 2.5);\n    const left = (this.props.bounds.right - this.props.clickAt.x < hSize) ?\n        (this.props.clickAt.x - this.props.bounds.left - hSize) :\n        (this.props.clickAt.x - this.props.bounds.left);\n    const top = (this.props.bounds.bottom - this.props.clickAt.y < vSize) ?\n        (this.props.clickAt.y - this.props.bounds.top - vSize) :\n        (this.props.clickAt.y - this.props.bounds.top);\n\n    const position = {\n      left: left + 'px',\n      top: top + 'px'\n    };\n\n    return (\n      <ul className=\"menu\" style={position} ref={this.selfRef}>\n        {menu}\n      </ul>\n    );\n  }\n}\n\nexport default injectIntl(ContextMenu);\n","// Short representation of time in the past.\nexport function shortDateFormat(then, locale) {\n  locale = locale || window.navigator.userLanguage || window.navigator.language;\n  const now = new Date();\n  if (then.getFullYear() == now.getFullYear()) {\n    // Same year.\n    if (then.getMonth() == now.getMonth() && then.getDate() == now.getDate()) {\n      // Same month and day, show time only.\n      return then.toLocaleTimeString(locale, {hour12: false, hour: '2-digit', minute: '2-digit'});\n    }\n    // Different month and/or day, show month day, time.\n    return then.toLocaleDateString(locale,\n      {hour12: false, month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit'});\n  }\n  // Different year: just show the date.\n  return then.toLocaleDateString(locale, {year: 'numeric', month: 'short', day: 'numeric'});\n}\n\n// Convert seconds to minutes:seconds, i.e. 156 sec -> 2:36.\nexport function secondsToTime(seconds) {\n  const min = Math.floor(seconds / 60);\n  let sec = seconds % 60;\n  sec = sec < 10 ? `0${sec}` : sec;\n  return `${min}:${sec}`;\n}\n\n// Convert a number of bytes to human-readable format.\nexport function bytesToHumanSize(bytes) {\n  if (!bytes || bytes == 0) {\n    return '0 Bytes';\n  }\n\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n  const bucket = Math.min(Math.floor(Math.log2(bytes) / 10) | 0, sizes.length-1);\n  const count = bytes / Math.pow(1024, bucket);\n  const round = bucket > 0 ? (count < 3 ? 2 : (count < 30 ? 1 : 0)) : 0;\n  return count.toFixed(round) + ' ' + sizes[bucket];\n}\n\n// Get 32 bit integer hash value for a string. Ideally it should produce the same value\n// as Java's String#hash().\nexport function stringToColorHash(value) {\n  let hash = 0;\n  value = '' + value;\n  for (let i = 0; i < value.length; i++) {\n    hash = ((hash << 5) - hash) + value.charCodeAt(i);\n    hash = hash & hash; // Convert to 32bit integer\n  }\n  return hash;\n}\n\n// Converts user or topic ID to a CSS color class. Ideally it should produce the same color value as Java version.\n// params:\n// - {string} id: user or topic ID\n// - {boolean} light: light or dark version of the color.\n// - {boolean} fg: foreground or background color.\nexport function idToColorClass(id, light, fg) {\n  return (light ? 'lt-' : 'dk-') + (fg ? 'fg-' : 'bg-') + (Math.abs(stringToColorHash(id)) % 16);\n}\n","// Odds and ends\n\nimport Tinode from 'tinode-sdk';\n\nimport { stringToColorHash } from './strformat.js';\n\n// User avatar letter color id.\nexport function letterTileColor(userId) {\n  return Math.abs(stringToColorHash(userId)) % 16;\n}\n\n// Make shortcut icon appear with a green dot + show unread count in title.\nexport function updateFavicon(count) {\n  const oldIcon = document.getElementById('shortcut-icon');\n  const head = document.head || document.getElementsByTagName('head')[0];\n  const newIcon = document.createElement('link');\n  newIcon.type = 'image/png';\n  newIcon.id = 'shortcut-icon';\n  newIcon.rel = 'shortcut icon';\n  newIcon.href = 'img/logo32x32' + (count > 0 ? 'a' : '') + '.png';\n  if (oldIcon) {\n    head.removeChild(oldIcon);\n  }\n  head.appendChild(newIcon);\n\n  document.title = (count > 0 ? '('+count+') ' : '') + 'Tinode';\n}\n\n// Create theCard which represents user's or topic's \"public\" info.\nexport function theCard(fn, imageUrl, imageMimeType, note) {\n  let card = null;\n  fn = fn && fn.trim();\n  note = note && note.trim();\n\n  if (fn) {\n    card = {\n      fn: fn\n    };\n  }\n\n  if (typeof note == 'string') {\n    card = card || {};\n    card.note = note ? note : Tinode.DEL_CHAR;\n  }\n\n  if (imageUrl) {\n    card = card || {};\n    let mimeType = imageMimeType;\n    // Is this a data URL \"data:[<mediatype>][;base64],<data>\"?\n    const matches = /^data:(image\\/[-a-z0-9+.]+)?(;base64)?,/i.exec(imageUrl);\n    if (matches) {\n      mimeType = matches[1];\n      card.photo = {\n        data: imageUrl.substring(imageUrl.indexOf(',') + 1),\n        ref: Tinode.DEL_CHAR\n      };\n    } else {\n      card.photo = {\n        data: Tinode.DEL_CHAR,\n        ref: imageUrl\n      };\n    }\n    card.photo.type = (mimeType || 'image/jpeg').substring('image/'.length);\n  }\n\n  return card;\n}\n\n// Deep-shallow compare two arrays: shallow compare each element.\nexport function arrayEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (!Array.isArray(a) || !Array.isArray(b)) {\n    return false;\n  }\n\n  // Compare lengths first.\n  if (a.length != b.length) {\n    return false;\n  }\n  // Order of elements is ignored.\n  a.sort();\n  b.sort();\n  for (let i = 0, l = a.length; i < l; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Checks (loosely) if the given string is a phone. If so, returns the phone number in a format\n// as close to E.164 as possible.\nexport function asPhone(val) {\n  val = val.trim();\n  if (/^(?:\\+?(\\d{1,3}))?[- (.]*(\\d{3})[- ).]*(\\d{3})[- .]*(\\d{2})[- .]*(\\d{2})?$/.test(val)) {\n    return val.replace(/[- ().]*/, '');\n  }\n  return null;\n}\n\n// Checks (loosely) if the given string is an email. If so returns the email.\nexport function asEmail(val) {\n  val = val.trim();\n  if (/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(val)) {\n    return val;\n  }\n  return null;\n}\n\n// Checks if URL is a relative url, i.e. has no 'scheme://', including the case of missing scheme '//'.\n// The scheme is expected to be RFC-compliant, e.g. [a-z][a-z0-9+.-]*\n// example.html - ok\n// https:example.com - not ok.\n// http:/example.com - not ok.\n// ' ↲ https://example.com' - not ok. (↲ means carriage return)\nexport function isUrlRelative(url) {\n  return url && !/^\\s*([a-z][a-z0-9+.-]*:|\\/\\/)/im.test(url);\n}\n\n// Ensure URL does not present an XSS risk. Optional allowedSchemes may contain an array of\n// strings with permitted URL schemes, such as ['ftp', 'ftps']; otherwise accept http and https only.\nexport function sanitizeUrl(url, allowedSchemes) {\n  if (typeof url != 'string') {\n    return url;\n  }\n\n  // Strip control characters and whitespace. They are not valid URL characters anyway.\n  url = url.replace(/[^\\x20-\\x7E]/gmi, '').trim();\n\n  // Relative URLs are safe.\n  // Relative URL does not start with ':', abcd123: or '//'.\n  if (!/^([a-z][a-z0-9+.-]*:|\\/\\/)/i.test(url)) {\n    return url;\n  }\n\n  // Blob URLs are safe.\n  if (/^blob:http/.test(url)) {\n    return url;\n  }\n\n  // Absolute URL. Accept only safe schemes, or no scheme.\n  const schemes = Array.isArray(allowedSchemes) ? allowedSchemes.join('|') : 'http|https';\n  const re = new RegExp('^((' + schemes + '):|//)', 'i');\n  if (!re.test(url)) {\n    return null;\n  }\n\n  return url;\n}\n\n// Ensure URL is suitable for <img src=\"url\"> field: the URL must be a relative URL or\n// have http:, https:, blob: or data: scheme.\n// In case of data: scheme, the URL must start with a 'data:image/XXXX;base64,'.\nexport function sanitizeImageUrl(url) {\n  if (!url) {\n    return null;\n  }\n\n  const sanitizedUrl = sanitizeUrl(url);\n  if (sanitizedUrl) {\n    return sanitizedUrl;\n  }\n\n  // Is this a data: URL of an image?\n  if (/data:image\\/[a-z0-9.-]+;base64,/i.test(url.trim())) {\n    return url;\n  }\n\n  return null;\n}\n\n// Given message's received status, return name and color of a delivery indicator icon.\nexport function deliveryMarker(received) {\n  switch (received) {\n    case Tinode.MESSAGE_STATUS_SENDING:\n      return { name: 'access_time' }; // watch face\n    case Tinode.MESSAGE_STATUS_FAILED:\n      return { name: 'warning', color: 'danger-color' }; // yellow icon /!\\\n    case Tinode.MESSAGE_STATUS_SENT:\n      return { name: 'done' }; // checkmark\n    case Tinode.MESSAGE_STATUS_RECEIVED:\n      return { name: 'done_all' }; // double checkmark\n    case Tinode.MESSAGE_STATUS_READ:\n      return { name: 'done_all', color: 'blue' }; // blue double checkmark\n  }\n  return null;\n}\n","import React from 'react';\n\nimport Tinode from 'tinode-sdk';\n\nimport { idToColorClass } from '../lib/strformat.js';\nimport { sanitizeImageUrl } from '../lib/utils.js';\n\nexport default class LetterTile extends React.PureComponent {\n  render() {\n    let avatar;\n    if (this.props.avatar === true) {\n      const isGroup = (Tinode.topicType(this.props.topic) == 'grp');\n      const iconColor = idToColorClass(this.props.topic, isGroup);\n      if (this.props.topic && this.props.title && this.props.title.trim()) {\n        const letter = this.props.title.trim().charAt(0);\n        const className = 'lettertile ' + iconColor;\n        avatar = (<div className={className}><div>{letter}</div></div>)\n      } else {\n        const className = 'material-icons ' + iconColor;\n        avatar = isGroup ?\n          <i className={className}>group</i> : <i className={className}>person</i>;\n      }\n    } else if (this.props.avatar) {\n      const url = this.props.tinode.authorizeURL(sanitizeImageUrl(this.props.avatar));\n      // If avatar image is invalid, show a placeholder.\n      avatar = <img className=\"avatar\" alt=\"avatar\" src={url}\n        onError={(e)=>{e.target.onerror = null; e.target.src=\"../img/broken_image.png\"}} />;\n    } else {\n      avatar = null;\n    }\n    return avatar;\n  }\n}\n","import React from 'react';\n\nexport default class LoadSpinner extends React.PureComponent {\n  render() {\n    const className = 'load-spinner-box' + (this.props.large ? ' large' : '')\n      + (this.props.clear ? ' clear' : '') + (this.props.centered ? ' centered' : '');\n    return (this.props.show ?\n      <div className={className}><div className=\"loader-spinner\"></div></div> : null);\n  }\n}\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\nimport LoadSpinner from './load-spinner.jsx';\n\nimport { sanitizeImageUrl } from '../lib/utils.js';\n\nimport { AVATAR_SIZE } from '../config.js';\n\nexport default class AvatarUpload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      source: props.avatar\n    };\n\n    this.handleFileReceived = this.handleFileReceived.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.avatar != prevProps.avatar) {\n      this.setState({source: this.props.avatar});\n    }\n  }\n\n  handleFileReceived(e) {\n    const image = e.target.files[0];\n    this.props.onImageUpdated(image.type, URL.createObjectURL(image), image.name);\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  render() {\n    // Randomize id value in case more than one AvatarUpload is shown\n    // at the same time.\n    const randId = 'file-input-avatar-' + (Math.random() + '').substr(2);\n    const className = 'avatar-upload' + (this.props.readOnly ? ' read-only' : '');\n    return (\n      <div className={className}>\n        {this.props.readOnly || !this.state.source ?\n          null :\n          <a href=\"#\" className=\"clear-avatar\" onClick={(e) => {e.preventDefault(); this.props.onImageUpdated();}}>\n            <i className=\"material-icons\">clear</i>\n          </a>}\n        {this.state.source ?\n          <img src={this.props.tinode.authorizeURL(sanitizeImageUrl(this.state.source))} className=\"preview\" /> :\n          this.props.readOnly && this.props.uid ?\n            <div className=\"avatar-box\">\n              <LetterTile\n                tinode={this.props.tinode}\n                avatar={true}\n                topic={this.props.uid}\n                title={this.props.title} />\n            </div>\n            :\n            <div className=\"blank\">{AVATAR_SIZE}&times;{AVATAR_SIZE}</div>}\n        {this.props.readOnly ? null :\n          <input type=\"file\" id={randId} className=\"inputfile hidden\"\n            accept=\"image/*\" onChange={this.handleFileReceived} />}\n        {this.props.readOnly ? null :\n        <label htmlFor={randId} className=\"round\">\n          <i className=\"material-icons\">file_upload</i>\n        </label>}\n        <LoadSpinner show={this.props.uploading} large={true} clear={true} centered={true} />\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nconst icon_mapping = {'staff': 'verified_user'};\n\nconst messages = defineMessages({\n  badge_verified: {\n    id: 'badge_verified',\n    defaultMessage: 'Verified/official',\n    description: 'Explanation of a verified account or topic badge'\n  },\n  badge_staff: {\n    id: 'badge_staff',\n    defaultMessage: 'Staff-managed',\n    description: 'Explanation of a staff-managed account or topic badge'\n  },\n  badge_danger: {\n    id: 'badge_danger',\n    defaultMessage: 'Untrustworthy',\n    description: 'Suspicious or untrustworthy account or topic badge'\n  },\n});\n\n\n/* Trusted badges with labels: verified, staff, danger */\nclass BadgeList extends React.PureComponent {\n  render() {\n    const {formatMessage} = this.props.intl;\n    let badges = null;\n    if (this.props.trustedBadges && this.props.trustedBadges.length > 0) {\n      badges = [];\n      this.props.trustedBadges.map((b) => {\n        const comment = formatMessage(messages['badge_' + b]);\n        const style = 'material-icons ' + b + '-color';\n        badges.push(<div className=\"trusted-badge\" key={b}><i className={style}>{icon_mapping[b] || b}</i> {comment}</div>);\n      });\n      return <>{badges}</>;\n    }\n    return null;\n  }\n};\n\nexport default injectIntl(BadgeList);\n","import React from 'react';\n\n/* BEGIN CheckBox: styled checkbox */\nexport default class CheckBox extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange() {\n    this.props.onChange(this.props.name, !this.props.checked);\n  }\n\n  render() {\n    return (\n      this.props.onChange ? (\n        this.props.checked ?\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box</i> :\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box_outline_blank</i>\n        ) : (\n          this.props.checked ?\n            <i className=\"material-icons\">check_box</i> :\n            <i className=\"material-icons\">check_box_outline_blank</i>\n        )\n    );\n  }\n}\n/* END CheckBox */\n","import React from 'react';\n\nconst icon_mapping = {'muted': 'notifications_off', 'banned': 'block', 'staff': 'verified_user'};\n\n/* Contact's labels: [you], or icons [muted], [blocked] */\nexport default class ContactBadges extends React.PureComponent {\n  render() {\n    let badges = null;\n    if (this.props.badges && this.props.badges.length > 0) {\n      badges = [];\n      this.props.badges.map((b) => {\n        const color = (b.color ? ' ' + b.color : '');\n        if (b.icon) {\n          badges.push(<i className={'material-icons as-badge' + color} key={b.key || b.icon}>{icon_mapping[b.icon] || b.icon}</i>);\n        } else {\n          badges.push(<span className={'badge' + color} key={b.key || b.name}>{b.name}</span>);\n        }\n      });\n      return <>{badges}</>;\n    }\n    return null;\n  }\n};\n","// Received/read indicator.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { shortDateFormat } from '../lib/strformat.js';\nimport { deliveryMarker } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  message_sending: {\n    id: 'message_sending',\n    defaultMessage: 'sending...',\n    description: 'Message being sent, in place of time stamp'\n  },\n  message_sending_failed: {\n    id: 'message_sending_failed',\n    defaultMessage: 'failed',\n    description: 'Failed to send message, in place of time stamp'\n  }\n});\n\nclass ReceivedMarker extends React.PureComponent {\n  render() {\n    const {formatMessage} = this.props.intl;\n    let timestamp;\n    if (this.props.received <= Tinode.MESSAGE_STATUS_SENDING) {\n      timestamp = formatMessage(messages.message_sending);\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_FAILED) {\n      timestamp = formatMessage(messages.message_sending_failed);\n    } else {\n      timestamp = shortDateFormat(this.props.timestamp, this.props.intl.locale);\n    }\n\n    const icon = deliveryMarker(this.props.received);\n    const marker = icon ? <i className={'material-icons small ' + icon.color}>{icon.name}</i> : null;\n\n    return (\n      <span className=\"timestamp\">\n        {timestamp}{'\\u00a0'}{marker}\n      </span>\n    );\n  }\n};\n\nexport default injectIntl(ReceivedMarker);\n","// The counter of unread messages in the topic.\nimport React from 'react';\n\nexport default class UnreadBadge extends React.PureComponent {\n  render() {\n    return (this.props.count > 0 ?\n      <span className=\"unread\">{this.props.count > 9 ? \"9+\" : this.props.count}</span>\n      : null);\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\n\nimport ContactBadges from './contact-badges.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\nimport UnreadBadge from './unread-badge.jsx';\n\nimport { Drafty } from 'tinode-sdk';\n\nimport { deliveryMarker } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  drafty_image: {\n    id: 'drafty_image',\n    defaultMessage: 'Picture',\n    description: 'Comment for embedded images in drafty preview'\n  },\n  drafty_form: {\n    id: 'drafty_form',\n    defaultMessage: 'Form: ',\n    description: 'Comment for form in drafty preview'\n  },\n  drafty_attachment: {\n    id: 'drafty_attachment',\n    defaultMessage: 'Attachment',\n    description: 'Comment for attachment in drafty preview'\n  },\n});\n\nclass Contact extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.props.onSelected) {\n      // Index this.props.index is used by GroupManager.\n      this.props.onSelected(this.props.item, this.props.index);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.props.item, y: e.pageY, x: e.pageX });\n  }\n\n  render() {\n    let title = this.props.title;\n    if (!title) {\n      title = <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n        description=\"Title shown when the topic has no name\" /></i>;\n    } else if (title.length > 30) {\n      // FIXME: this is probably wrong for RTL languages.\n      title = title.substring(0, 28) + '…';\n    }\n    const online = this.props.now ? 'online' : 'offline';\n    const avatar = this.props.avatar ? this.props.avatar : true;\n    const badges = this.props.badges ? this.props.badges.slice() : [];\n    const icon_badges = [];\n    if (this.props.isVerified) {\n      icon_badges.push({icon: 'verified', color: 'verified-color'});\n    }\n    if (this.props.isStaff) {\n      icon_badges.push({icon: 'staff', color: 'staff-color'});\n    }\n    if (this.props.isDangerous) {\n      icon_badges.push({icon: 'dangerous', color: 'danger-color'});\n    }\n    if (this.props.acs) {\n      if (this.props.showMode) {\n        badges.push({name: this.props.acs.getMode(), key: 'mode'});\n      }\n      if (this.props.acs.isMuted()) {\n        icon_badges.push({icon: 'muted'});\n      }\n      if (!this.props.acs.isJoiner()) {\n        icon_badges.push({icon: 'banned'});\n      }\n    }\n\n    const subtitle = this.props.preview ?\n      (typeof this.props.preview == 'string' ? this.props.preview :\n        React.createElement(React.Fragment, null, Drafty.format(this.props.preview, draftyFormatter, this))) :\n      this.props.comment;\n\n    const icon = deliveryMarker(this.props.received);\n    const marker = icon ? <i className={'material-icons small space-right' +\n      (icon.color ? ' ' + icon.color : '')}>{icon.name}</i> : null;\n\n    return (\n      <li className={!this.props.showCheckmark && this.props.selected ? 'selected' : null} onClick={this.handleClick}>\n        <div className=\"avatar-box\">\n          <LetterTile\n            tinode={this.props.tinode}\n            avatar={avatar}\n            title={this.props.title}\n            topic={this.props.item} />\n          {this.props.showOnline ? <span className={online} /> :\n            (this.props.showCheckmark && this.props.selected ?\n            <i className=\"checkmark material-icons\">check_circle</i>\n            : null)}\n        </div>\n        <div className=\"text-box\">\n          <div><span className=\"contact-title\">{title}</span>\n            {this.props.isChannel ? <img src=\"/img/channel.png\" className=\"channel\" alt=\"channel\" /> : null}\n            <ContactBadges badges={icon_badges} /><UnreadBadge count={this.props.unread} />\n          </div>\n          {this.props.showMode ?\n            <span><ContactBadges badges={badges} /></span> :\n            this.props.small ? null : <div className=\"contact-comment\">{marker}<span>{subtitle || '\\u00A0'}</span></div>}\n        </div>\n        {this.props.showContextMenu ?\n          <span className=\"menuTrigger\">\n            <a href=\"#\" onClick={this.handleContextClick}>\n              <i className=\"material-icons\">expand_more</i>\n            </a>\n          </span> : null}\n      </li>\n    );\n  }\n};\n\n\n// Converts Drafty object into a one-line preview.\nfunction draftyFormatter(style, data, values, key) {\n  let el = Drafty.tagName(style);\n  const attr = { key: key };\n  if (el) {\n    const { formatMessage } = this.props.intl;\n    switch (style) {\n      case 'BR':\n        // Replace new line with a space.\n        el = React.Fragment;\n        values = [' '];\n        break;\n      case 'HL':\n        // Make highlight less prominent in preview.\n        attr.className = 'highlight preview';\n        break;\n      case 'LN':\n        // Disable links in previews.\n        el = 'span';\n        break;\n      case 'IM':\n        // Replace image with '[icon] Image'.\n        el = React.Fragment;\n        values = [<i key=\"im\" className=\"material-icons\">photo</i>, formatMessage(messages.drafty_image)];\n        break;\n      case 'BN':\n        el = 'span';\n        attr.className = 'flat-button faux';\n        break;\n      case 'FM':\n        el = React.Fragment;\n        values = [<i key=\"fm\" className=\"material-icons\">dashboard</i>,\n          formatMessage(messages.drafty_form)].concat(' ', values || []);\n        break;\n      case 'RW':\n        el = React.Fragment;\n        break;\n      case 'EX':\n        if (data && data.mime == 'application/json') {\n          // Ignore JSON attachments: they are form response payloads.\n          return null;\n        }\n        el = React.Fragment;\n        values = [<i key=\"ex\" className=\"material-icons\">attachment</i>, formatMessage(messages.drafty_attachment)];\n        break;\n      default:\n        if (el == '_UNKN') {\n          el = React.Fragment;\n          values = [<i key=\"unkn\" className=\"material-icons\">extension</i>];\n        }\n        break;\n    }\n    return React.createElement(el, attr, values);\n  } else {\n    return values;\n  }\n};\n\nexport default injectIntl(Contact);\n","// A panel included into a list of contacts with an action text.\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\n\nclass ContactAction extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.onAction(this.props.action);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <li onClick={this.handleClick} className=\"action\">\n        <div className=\"action-text\">{formatMessage(this.props.title, this.props.values)}</div>\n      </li>\n    );\n  }\n};\n\nexport default injectIntl(ContactAction);\n","// File and image helper functions.\nimport { MAX_INBAND_ATTACHMENT_SIZE, MAX_IMAGE_DIM } from '../config.js';\nimport { bytesToHumanSize } from './strformat.js'\n\n// Supported image MIME types and corresponding file extensions.\nexport const SUPPORTED_IMAGE_FORMATS = ['image/jpeg', 'image/gif', 'image/png', 'image/svg', 'image/svg+xml'];\nexport const MIME_EXTENSIONS         = ['jpg',        'gif',       'png',       'svg',       'svg'];\n\n// Get an URL from a theCard photo: either create a data: URL or return reference URL.\nexport function makeImageUrl(photo) {\n  if (photo && typeof photo == 'object') {\n    if (photo.data && photo.type) {\n      const mime = photo.type.startsWith('image/') ? photo.type : ('image/' + photo.type);\n      return 'data:' + mime + ';base64,' + photo.data;\n    }\n    return photo.ref;\n  }\n  return null;\n}\n\n// Calculate linear dimensions for scaling image down to fit under a certain size.\n// Returns an object which contains destination sizes, source sizes, and offsets\n// into source (when making square images).\nexport function fitImageSize(width, height, maxWidth, maxHeight, forceSquare) {\n  // Sanitize input\n  width = width | 0;\n  height = height | 0;\n  maxWidth = maxWidth | 0;\n  maxHeight = maxHeight | 0;\n\n  if (width <= 0 || height <= 0 || maxWidth <= 0 || maxHeight <= 0) {\n    return null;\n  }\n\n  if (forceSquare) {\n    maxWidth = maxHeight = Math.min(maxWidth, maxHeight);\n  }\n\n  const scale = Math.min(\n    Math.min(width, maxWidth) / width,\n    Math.min(height, maxHeight) / height\n  );\n\n  const size = {\n    dstWidth: (width * scale) | 0,\n    dstHeight: (height * scale) | 0,\n  };\n\n  if (forceSquare) {\n    // Also calculate parameters for making the image square.\n    size.dstWidth = size.dstHeight = Math.min(size.dstWidth, size.dstHeight);\n    size.srcWidth = size.srcHeight = Math.min(width, height);\n    size.xoffset = ((width - size.srcWidth) / 2) | 0;\n    size.yoffset = ((height - size.srcWidth) / 2) | 0;\n  } else {\n    size.xoffset = size.yoffset = 0;\n    size.srcWidth = width;\n    size.srcHeight = height;\n  }\n  return size;\n}\n\n// Ensure file's extension matches mime content type\nexport function fileNameForMime(fname, mime) {\n  const idx = SUPPORTED_IMAGE_FORMATS.indexOf(mime);\n  if (idx < 0 || !fname) {\n    // Unknown mime or empty name.\n    return fname;\n  }\n  const ext = MIME_EXTENSIONS[idx];\n\n  const at = fname.lastIndexOf('.');\n  if (at >= 0) {\n    fname = fname.substring(0, at);\n  }\n  return fname + '.' + ext;\n}\n\n// Scale uploaded image to fit under certain dimensions and byte size, optionally constraining to a square.\n// On success calls onSuccess callback with the scaled image as Blob.\nexport function imageScaled(fileOrBlob, maxWidth, maxHeight, maxSize, forceSquare, onSuccess, onError) {\n  const img = new Image();\n  img.crossOrigin = 'Anonymous';\n  img.onerror = function(err) {\n    onError(\"Image format unrecognized\");\n  }\n  img.onload = async function() {\n    // Once the image is loaded, the URL is no longer needed.\n    URL.revokeObjectURL(img.src);\n\n    // Calculate the desired image dimensions.\n    const dim = fitImageSize(this.width, this.height, maxWidth, maxHeight, forceSquare);\n    if (!dim) {\n      onError(\"Invalid image\");\n      return;\n    }\n    let canvas = document.createElement('canvas');\n    canvas.width = dim.dstWidth;\n    canvas.height = dim.dstHeight;\n    let ctx = canvas.getContext('2d');\n    ctx.imageSmoothingEnabled = true;\n    ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n      0, 0, dim.dstWidth, dim.dstHeight);\n\n    const mime = SUPPORTED_IMAGE_FORMATS.includes(fileOrBlob.type) ? fileOrBlob.type : 'image/jpeg';\n    // Generate blob to check size of the image.\n    let blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    if (!blob) {\n      onError(\"Unsupported image format\");\n      return;\n    }\n\n    // Ensure the image is not too large. Shrink the image keeping the aspect ratio.\n    // Do nothing if maxsize is <= 0.\n    while (maxSize > 0 && blob.length > maxSize) {\n      dim.dstWidth = (dim.dstWidth * 0.70710678118) | 0;\n      dim.dstHeight = (dim.dstHeight * 0.70710678118) | 0;\n      canvas.width = dim.dstWidth;\n      canvas.height = dim.dstHeight;\n      ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n        0, 0, dim.dstWidth, dim.dstHeight);\n      blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    }\n\n    canvas = null;\n    onSuccess(mime, blob, dim.dstWidth, dim.dstHeight, fileNameForMime(fileOrBlob.name, mime));\n  };\n  img.src = URL.createObjectURL(fileOrBlob);\n}\n\n// Scale and crop image according to specified dimensions.\n// The coordinates are in unscaled image pixels, i.e. cut the rectangle first then scale it.\nexport function imageCrop(mime, objURL, left, top, width, height, scale, onSuccess, onError) {\n  const img = new Image();\n  img.crossOrigin = 'Anonymous';\n  img.onerror = function(err) {\n    onError(\"Image format unrecognized\");\n  }\n  img.onload = async function() {\n    // Once the image is loaded, the URL is no longer needed.\n    URL.revokeObjectURL(img.src);\n\n    let canvas = document.createElement('canvas');\n    canvas.width = width * scale;\n    canvas.height = height * scale;\n    let ctx = canvas.getContext('2d');\n    ctx.imageSmoothingEnabled = true;\n    ctx.drawImage(this, left, top, width, height, 0, 0, canvas.width, canvas.height);\n\n    mime = SUPPORTED_IMAGE_FORMATS.includes(mime) ? mime : 'image/jpeg';\n    // Generate blob to check size of the image.\n    let blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    if (!blob) {\n      onError(\"Unsupported image format\");\n      return;\n    }\n    // Allow GC.\n    canvas = null;\n    onSuccess(mime, blob, width, height);\n  };\n  img.src = objURL;\n}\n\n// Convert File to base64 string.\nexport function fileToBase64(file, onSuccess) {\n  const reader = new FileReader();\n  reader.addEventListener('load', function() {\n    onSuccess(file.type, reader.result.split(',')[1], file.name);\n  });\n  reader.readAsDataURL(file);\n}\n\n// Convert Blob to base64 string.\nexport function blobToBase64(blob, onSuccess) {\n  const reader = new FileReader();\n  reader.addEventListener('load', function() {\n    onSuccess(blob.type, reader.result.split(',')[1]);\n  });\n  reader.readAsDataURL(blob);\n}\n\n// File pasted from the clipboard. It's either an inline image or a file attachment.\n// FIXME: handle large files out of band.\nexport function filePasted(event, onImageSuccess, onAttachmentSuccess, onError) {\n  var items = (event.clipboardData || event.originalEvent.clipboardData || {}).items;\n  for (var i in items) {\n    var item = items[i];\n    if (item.kind === 'file') {\n      var file = item.getAsFile();\n      if (!file) {\n        console.error(\"Failed to get file object from pasted file item\", item.kind, item.type);\n        continue;\n      }\n      if (file.type && file.type.split('/')[0] == 'image') {\n        // Handle inline image\n        if (file.size > MAX_INBAND_ATTACHMENT_SIZE || SUPPORTED_IMAGE_FORMATS.indexOf(file.type) < 0) {\n          imageFileScaledToBase64(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, false, onImageSuccess, onError);\n        } else {\n          imageFileToBase64(file, onImageSuccess, onError);\n        }\n      } else {\n        // Handle file attachment\n        fileToBase64(file, onAttachmentSuccess, onError)\n      }\n      // Indicate that the pasted data contains a file.\n      return true;\n    }\n  }\n  // No file found.\n  return false;\n}\n\n// Get mime type from data URL header.\nexport function getMimeType(header) {\n  var mime = /^data:(image\\/[-+a-z0-9.]+);base64/.exec(header);\n  return (mime && mime.length > 1) ? mime[1] : null;\n}\n\n// Given length of a binary object in bytes, calculate the length after\n// base64 encoding.\nexport function base64EncodedLen(n) {\n  return Math.floor((n + 2) / 3) * 4;\n}\n\n// Given length of a base64-encoded object, calculate decoded size of the\n// pbject in bytes.\nexport function base64DecodedLen(n) {\n  return Math.floor(n / 4) * 3;\n}\n\n// Re-encode string to standard base64 encoding with padding.\n// The string may be base64-URL encoded without the padding.\nexport function base64ReEncode(str) {\n  if (str) {\n    str = str.replace(/-/g, '+').replace(/_/g, '/');\n    try {\n      str = btoa(atob(str));\n    } catch(err) {\n      console.error(\"Failed to base64 re-encode string.\", err);\n      str = null;\n    }\n  }\n  return str;\n}\n\n// Convert a base64 encoded string with the provided mime type into a Blob.\nexport function base64ToBlob(str, mime) {\n  if (!str) {\n    return null;\n  }\n\n  try {\n    // Make blob.\n    const bin = atob(str);\n    const length = bin.length;\n    const buf = new ArrayBuffer(length);\n    const arr = new Uint8Array(buf);\n    for (let i = 0; i < length; i++) {\n      arr[i] = bin.charCodeAt(i);\n    }\n\n    return new Blob([buf], { type: mime });\n  } catch(err) {\n    console.log(\"Failed to convert base64 to blob: \", err);\n  }\n\n  return null;\n}\n","// ContactList: component for showing a list of contacts,\n// such as a list of group members in a group chat.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { Drafty } from 'tinode-sdk';\nimport Tinode from 'tinode-sdk';\n\nimport Contact from './contact.jsx';\nimport ContactAction from './contact-action.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nimport { MESSAGE_PREVIEW_LENGTH } from '../config.js';\n\nconst messages = defineMessages({\n  badge_you: {\n    id: 'badge_you',\n    defaultMessage: 'you',\n    description: 'Badge for indicating the current user'\n  },\n  badge_owner: {\n    id: 'badge_owner',\n    defaultMessage: 'owner',\n    description: 'Badge for indicating the owner'\n  }\n});\n\nclass ContactList extends React.Component {\n  render() {\n    const { formatMessage } = this.props.intl;\n    const showCheckmark = Array.isArray(this.props.topicSelected);\n    const contactNodes = [];\n    let contactsCount = 0;\n    if (this.props.contacts && this.props.contacts.length > 0) {\n      this.props.contacts.map((c) => {\n        if (c.action) {\n          // Action item\n          contactNodes.push(\n            <ContactAction\n              title={c.title} action={c.action} values={c.values}\n              key={c.action}\n              onAction={this.props.onAction}\n              />);\n        } else {\n          // Normal contact\n          const key = this.props.showMode ? c.user : (c.topic || c.user);\n          // If filter function is provided, filter out the items\n          // which don't satisfy the condition.\n          if (this.props.filterFunc && this.props.filter) {\n            const filterOn = [key];\n            if (c.private && c.private.comment) {\n              filterOn.push(('' + c.private.comment).toLowerCase());\n            }\n            if (c.public && c.public.fn) {\n              filterOn.push(('' + c.public.fn).toLowerCase());\n            }\n            if (!this.props.filterFunc(this.props.filter, filterOn)) {\n              return;\n            }\n          }\n\n          const isChannel = Tinode.isChannelTopicName(key);\n          const selected = showCheckmark ?\n            (this.props.topicSelected.indexOf(key) > -1) :\n            (this.props.topicSelected === key);\n          const badges = [];\n          if (this.props.showMode) {\n            if (key == this.props.myUserId) {\n              badges.push({name: formatMessage(messages.badge_you), color: 'green'});\n            }\n            if (c.acs && c.acs.isOwner()) {\n              badges.push({name: formatMessage(messages.badge_owner), color: 'blue'});\n            }\n          }\n\n          const comment = Array.isArray(c.private) ?\n            c.private.join(',') : (c.private ? c.private.comment : null);\n          let preview;\n          let deliveryStatus;\n          if (!this.props.showMode && c.latestMessage) {\n            const msg = c.latestMessage(true);\n            if (msg) {\n              deliveryStatus = msg._status || c.msgStatus(msg, true);\n              preview = typeof msg.content == 'string' ?\n                msg.content.substr(0, MESSAGE_PREVIEW_LENGTH) :\n                Drafty.preview(msg.content, MESSAGE_PREVIEW_LENGTH);\n            }\n          }\n          contactNodes.push(\n            <Contact\n              tinode={this.props.tinode}\n              title={c.public ? c.public.fn : null}\n              avatar={makeImageUrl(c.public ? c.public.photo : null)}\n              comment={comment}\n              preview={preview}\n              received={deliveryStatus}\n              unread={this.props.showUnread ? c.unread : 0}\n              now={c.online && this.props.connected}\n              acs={c.acs}\n              showMode={this.props.showMode}\n              badges={badges}\n              showCheckmark={showCheckmark}\n              selected={selected}\n              showOnline={this.props.showOnline && !isChannel}\n              isChannel={isChannel}\n              onSelected={this.props.onTopicSelected}\n              showContextMenu={this.props.showContextMenu}\n              isVerified={c.trusted && c.trusted.verified}\n              isStaff={c.trusted && c.trusted.staff}\n              isDangerous={c.trusted && c.trusted.danger}\n              item={key}\n              index={contactNodes.length}\n              key={key} />\n          );\n          contactsCount ++;\n        }\n      }, this);\n    }\n\n    return (\n      <div className={this.props.noScroll ? null : \"scrollable-panel\"}>\n        {contactsCount == 0 ?\n          <div className=\"center-medium-text\"\n            dangerouslySetInnerHTML={{__html: this.props.emptyListMessage}} />\n          :\n          null\n        }\n        {contactNodes.length > 0 ?\n          <ul className=\"contact-box\">\n            {contactNodes}\n          </ul>\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ContactList);\n","// The X menu to be displayed in title bars.\nimport React from 'react';\n\nexport default class MenuCancel extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n        <i className=\"material-icons\">close</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nimport MenuCancel from './menu-cancel.jsx';\n\nexport default class ErrorPanel extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      show: false,\n    };\n\n    this.hide = this.hide.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.level !== this.props.level) {\n      this.setState({\n        show: !(!this.props.level)\n      });\n    }\n  }\n\n  hide() {\n    this.setState({show: false});\n    if (this.props.onClearError) {\n      this.props.onClearError();\n    }\n  }\n\n  render() {\n    const icons = {err: 'error', warn: 'warning', info: 'info'}\n    const level = icons[this.props.level] || '';\n    const className = 'info-box ' + level;\n    return (\n      <div className={className}>\n        <div className=\"icon\"><i className=\"material-icons\">{level}</i></div>\n        <span>\n          {this.props.text}\n          {this.props.action ?\n            <>\n              &#32;<a href=\"#\"\n                style={{ whiteSpace: 'nowrap' }}\n                onClick={(e) => {e.preventDefault(); this.props.action();}}>\n                {this.props.actionText}\n              </a>\n            </>\n          : null}\n        </span>\n        <div className=\"cancel\"><MenuCancel onCancel={this.hide} /></div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\n\nexport default class Chip extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel(this.props.topic, this.props.index);\n  }\n\n  render() {\n    const title = this.props.title || this.props.topic;\n    const className = this.props.invalid ? 'chip invalid' : 'chip';\n    return (\n      <div className={className}>\n        {this.props.noAvatar ?\n          <span className=\"spacer\" /> :\n          <div className=\"avatar-box\">\n            <LetterTile\n              tinode={this.props.tinode}\n              avatar={this.props.avatar || true}\n              topic={this.props.topic}\n              title={this.props.title} />\n          </div>\n        }\n        <span>{title}</span>\n        {this.props.onCancel && !this.props.required ?\n          <a href=\"#\" onClick={this.handleCancel} >&times;</a>\n          : <span className=\"spacer\" />}\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport Chip from './chip.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n/* BEGIN ChipInput: group membership widget */\nexport default class ChipInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = ChipInput.deriveStateFromProps(props);\n    this.state.input = '';\n    this.state.focused = false;\n\n    this.handleTextInput = this.handleTextInput.bind(this);\n    this.removeChipAt = this.removeChipAt.bind(this);\n    this.handleChipCancel = this.handleChipCancel.bind(this);\n    this.handleFocusGained = this.handleFocusGained.bind(this);\n    this.handleFocusLost = this.handleFocusLost.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  static deriveStateFromProps(props) {\n    return {\n      placeholder: props.chips ? '' : props.prompt,\n      sortedChips: ChipInput.sortChips(props.chips, props.staticMembers),\n      chipIndex: ChipInput.indexChips(props.chips)\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chips != this.props.chips ||\n      prevProps.staticMembers != this.props.staticMembers ||\n      prevProps.prompt != this.props.prompt) {\n      this.setState(ChipInput.deriveStateFromProps(this.props));\n    }\n    if (!prevState || this.props.chips.length > prevState.sortedChips.length) {\n      this.setState({input: ''});\n    }\n  }\n\n  // Map chip index to user name\n  static indexChips(chips) {\n    const index = {};\n    let count = 0;\n    chips.map((item) => {\n      index[item.user] = count;\n      count ++;\n    });\n    return index;\n  }\n\n  // Have non-removable chips appear before all other chips.\n  static sortChips(chips, keep) {\n    const required = [];\n    const normal = [];\n    chips.map((item) => {\n      if (keep && keep.includes(item.user)) {\n        required.push(item);\n      } else {\n        normal.push(item);\n      }\n    });\n    return required.concat(normal);\n  }\n\n  handleTextInput(e) {\n    this.setState({input: e.target.value});\n    if (this.props.filterFunc) {\n      this.props.filterFunc(e.target.value);\n    }\n  }\n\n  removeChipAt(idx) {\n    const removed = this.state.sortedChips[idx];\n    this.props.onChipRemoved(removed.user, this.state.chipIndex[removed.user]);\n  }\n\n  handleChipCancel(item, idx) {\n    this.removeChipAt(idx);\n  }\n\n  handleFocusGained() {\n    this.setState({focused: true});\n  }\n\n  handleFocusLost() {\n    this.setState({focused: false});\n    if (this.props.onFocusLost) {\n      this.props.onFocusLost(this.state.input);\n    }\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Backspace') {\n      if (this.state.input.length == 0 && this.state.sortedChips.length > 0) {\n        const at = this.state.sortedChips.length - 1;\n        if (this.state.sortedChips[at].user !== this.props.staticMembers) {\n          this.removeChipAt(at);\n        }\n      }\n    } else if (e.key === 'Enter') {\n      if (this.props.onEnter) {\n        this.props.onEnter(this.state.input);\n      }\n    } else if (e.key === 'Escape') {\n      if (this.props.onCancel) {\n        this.props.onCancel();\n      }\n    }\n  }\n\n  render() {\n    const chips = [];\n    let count = 0;\n    const staticMembers = this.props.staticMembers || [];\n    this.state.sortedChips.map((item) => {\n      chips.push(\n        <Chip\n          tinode={this.props.tinode}\n          onCancel={this.handleChipCancel}\n          avatar={makeImageUrl(item.public ? item.public.photo : null)}\n          title={item.public ? item.public.fn : undefined}\n          noAvatar={this.props.avatarDisabled}\n          topic={item.user}\n          required={staticMembers.includes(item.user)}\n          invalid={item.invalid}\n          index={count}\n          key={item.user} />\n      );\n      count++;\n    });\n    const className = \"chip-input\" + (this.state.focused ? ' focused' : '');\n    const autoFocus = !(this.props.tabIndex > 0);\n    return (\n      <div className={className}>\n        {chips}\n        <input type=\"text\"\n          placeholder={this.state.placeholder}\n          onChange={this.handleTextInput}\n          onFocus={this.handleFocusGained}\n          onBlur={this.handleFocusLost}\n          onKeyDown={this.handleKeyDown}\n          value={this.state.input}\n          tabIndex={this.props.tabIndex}\n          autoFocus={autoFocus} />\n      </div>\n    );\n  }\n};\n","// GroupMembers: control for managing a list of group members.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\nimport ContactList from './contact-list.jsx';\n\nconst messages = defineMessages({\n  no_contacts: {\n    id: 'no_contacts',\n    defaultMessage: 'You have no contacts :-(',\n    description: 'Shown in ContactsView when the user has no contacts'\n  },\n  contacts_not_found_short: {\n    id: 'contacts_not_found_short',\n    defaultMessage: \"No contacts match ''{query}''\",\n    description: 'Shown in ContactsView when search returned no results'\n  }\n});\n\nclass GroupManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Array of topic members\n      members: props.members,\n      index: GroupManager.indexMembers(props.members),\n      staticMembers: GroupManager.staticMembers(props.members, props.keepInitialMembers, props.requiredMember),\n      contactFilter: '',\n      noContactsMessage: props.intl.formatMessage(messages.no_contacts),\n      selectedContacts: GroupManager.selectedContacts(props.members)\n    };\n\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleMemberRemoved = this.handleMemberRemoved.bind(this);\n    this.handleContactFilter = this.handleContactFilter.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static indexMembers(members) {\n    let index = {};\n    members.map((m) => {\n      index[m.user] = {delta: 0, present: true}; // Delta: 0 unchanged, +1 added, -1 removed\n    });\n    return index;\n  }\n\n  static staticMembers(members, keepInitial, requiredMember) {\n    let stat = [];\n    members.map((m) => {\n      if (keepInitial || m.user == requiredMember) {\n        stat.push(m.user);\n      }\n    });\n    return stat;\n  }\n\n  static selectedContacts(members) {\n    let sel = [];\n    members.map((m) => {\n      sel.push(m.user);\n    });\n    return sel;\n  }\n\n  handleContactSelected(userId, index) {\n    let status = this.state.index[userId];\n    if (status) {\n      if (status.present) {\n        // Prevent duplicate members\n        return;\n      }\n      status.delta += 1;\n      status.present = true;\n    } else {\n      status = {delta: 1, present: true};\n    }\n\n    let m = this.state.members.slice();\n    m.push(this.props.contacts[index]);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleMemberRemoved(userId, index) {\n    const status = this.state.index[userId];\n    if (!status || !status.present) {\n      return;\n    }\n    status.present = false;\n    status.delta -= 1;\n\n    let m = this.state.members.slice();\n    m.splice(index, 1);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleContactFilter(val) {\n    const {formatMessage} = this.props.intl;\n    const msg = !val ?\n      formatMessage(messages.no_contacts) :\n      formatMessage(messages.contacts_not_found_short, {query: val});\n\n    this.setState({contactFilter: val, noContactsMessage: msg});\n  }\n\n  static doContactFiltering(filter, values) {\n    if (filter) {\n      for (let i=0; i<values.length; i++) {\n        if (values[i].indexOf(filter) >= 0) {\n          return true;\n        }\n      }\n      return false;\n    }\n    return true;\n  }\n\n  handleSubmit() {\n    var instance = this;\n    var members = [];\n    var added = [];\n    var removed = [];\n\n    var keys = Object.keys(this.state.index);\n    keys.map(function(k) {\n      if (instance.state.index[k].present) {\n        members.push(k);\n      }\n\n      if (instance.state.index[k].delta > 0) {\n        added.push(k);\n      } else if (instance.state.index[k].delta < 0) {\n        removed.push(k);\n      }\n    });\n    this.props.onSubmit(members, added, removed);\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <div id=\"group-manager\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_group_members\" defaultMessage=\"Group Members\" description=\"Section title\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ChipInput\n            tinode={this.props.tinode}\n            chips={this.state.members}\n            staticMembers={this.state.staticMembers}\n            prompt=\"add members\"\n            filterFunc={this.handleContactFilter}\n            onChipRemoved={this.handleMemberRemoved} />\n        </div>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_all_contacts\" defaultMessage=\"All Contacts\"\n              description=\"Section title [All Contacts]\" />\n          </label>\n        </div>\n        <ContactList\n          tinode={this.props.tinode}\n          contacts={this.props.contacts}\n          myUserId={this.props.myUserId}\n          topicSelected={this.state.selectedContacts}\n          filter={this.state.contactFilter}\n          filterFunc={GroupManager.doContactFiltering}\n          emptyListMessage={this.state.noContactsMessage}\n          showOnline={false}\n          showUnread={false}\n          onTopicSelected={this.handleContactSelected} />\n        <div id=\"group-manager-buttons\" className=\"panel-form-row\">\n          <button className=\"secondary\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(GroupManager);\n","// PermissionsEditor: Component for editing permissions\n// <PermissionsEditor mode=\"JWROD\" skip=\"O\" onChange={this.handleCheckboxTest} />\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport CheckBox from './checkbox.jsx';\nimport Contact from './contact.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n// Translatable permission names.\nconst messages = defineMessages({\n  joiner: {\n    id: 'permission_join',\n    defaultMessage: \"Join ({val})\",\n    description: 'Name of J permission'\n  },\n  reader: {\n    id: 'permission_read',\n    defaultMessage: \"Read ({val})\",\n    description: 'Name of R permission'\n  },\n  writer: {\n    id: 'permission_write',\n    defaultMessage: \"Write ({val})\",\n    description: 'Name of W permission'\n  },\n  preser: {\n    id: 'permission_pres',\n    defaultMessage: \"Get notified ({val})\",\n    description: 'Name of P permission'\n  },\n  approver: {\n    id: 'permission_admin',\n    defaultMessage: \"Approve ({val})\",\n    description: 'Name of A permission'\n  },\n  sharer: {\n    id: 'permission_share',\n    defaultMessage: \"Share ({val})\",\n    description: 'Name of S permission'\n  },\n  deleter: {\n    id: 'permission_delete',\n    defaultMessage: \"Delete ({val})\",\n    description: 'Name of D permission'\n  },\n  owner: {\n    id: 'permission_owner',\n    defaultMessage: \"Owner ({val})\",\n    description: 'Name of O permission'\n  }\n});\n\nclass PermissionsEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mode: (props.mode || '').replace('N', '')\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(val) {\n    let mode = this.state.mode;\n    const idx = mode.indexOf(val);\n    if (idx == -1) {\n      mode += val;\n    } else {\n      mode = mode.replace(val, '');\n    }\n    this.setState({mode: mode});\n  }\n\n  handleSubmit() {\n    // Normalize string, otherwise cannot check if mode has changed.\n    const mode = (this.state.mode || 'N').split('').sort().join('');\n    const before = (this.props.mode || 'N').split('').sort().join('')\n    if (mode !== before) {\n      this.props.onSubmit(mode);\n    } else {\n      this.props.onCancel();\n    }\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const all = 'JRWPASDO';\n    const names = {\n      'J': formatMessage(messages.joiner, {val: 'J'}),\n      'R': formatMessage(messages.reader, {val: 'R'}),\n      'W': formatMessage(messages.writer, {val: 'W'}),\n      'P': formatMessage(messages.preser, {val: 'P'}),\n      'A': formatMessage(messages.approver, {val: 'A'}),\n      'S': formatMessage(messages.sharer, {val: 'S'}),\n      'D': formatMessage(messages.deleter, {val: 'D'}),\n      'O': formatMessage(messages.owner, {val: 'O'})\n    };\n\n    let skip = this.props.skip || '';\n    let mode = this.state.mode;\n    let compare = (this.props.compare || '').replace('N', '');\n    let items = [];\n    for (let i=0; i<all.length; i++) {\n      let c = all.charAt(i);\n      if (skip.indexOf(c) >= 0 && mode.indexOf(c) < 0) {\n        // Permission is marked as inactive: hide unchecked permissions, disable checked permissions\n        continue;\n      }\n      items.push(\n        <tr key={c}>\n          <td>{names[c]}</td>\n          <td className=\"checkbox\">{skip.indexOf(c) < 0 ?\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} onChange={this.handleChange}/>\n            :\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} />\n          }</td>{this.props.compare ? <td className=\"checkbox\">\n            <CheckBox name={c} checked={(compare.indexOf(c) >= 0)}/>\n          </td> : null}\n        </tr>\n      );\n    }\n\n    return (\n      <div className=\"panel-form-column\">\n        {this.props.userTitle ?\n          <ul className=\"contact-box small\"><Contact\n            tinode={this.props.tinode}\n            item={this.props.item}\n            title={this.props.userTitle}\n            small={true}\n            avatar={makeImageUrl(this.props.userAvatar ? this.props.userAvatar : null)} /></ul> : null}\n        <label className=\"small\"><FormattedMessage id=\"title_permissions\"\n          defaultMessage=\"Permissions\" description=\"Section title\"/></label>\n        <table className=\"permission-editor\">\n        {this.props.compare ?\n          <thead><tr>\n            <th></th><th>{this.props.modeTitle}</th>\n            <th>{this.props.compareTitle}</th>\n          </tr></thead> :\n          null}\n        <tbody>\n          {items}\n        </tbody></table>\n        <br />\n        <div className=\"dialog-buttons\">\n          <button className=\"outline\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(PermissionsEditor);\n","// Image zoom and crop widget.\n\nimport React from 'react';\n\nconst DEFAULT_MAX_ZOOM = 2.5;\n\nexport default class Cropper extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Coordinates of the top left corner of the image in container coordinates.\n      panX: 0,\n      panY: 0,\n      // Origin of the zoom in image coordinates.\n      originX: 0,\n      originY: 0,\n      // Zoom scale.\n      zoom: 1,\n      // Zoom min and max.\n      minZoom: 0,\n      maxZoom: DEFAULT_MAX_ZOOM,\n    };\n\n    // References to DOM elements for hooking up events and getting screen dimensions.\n    // The transparent element which captures mouse moves (moves with the image).\n    this.overlay = React.createRef();\n    // The image cutout window or view port (static).\n    this.cutout = React.createRef();\n    // Scaled and translated image preview.\n    this.preview = React.createRef();\n    // The main container (static).\n    this.boundingBox = React.createRef();\n\n    // The original image width and height before any scaling.\n    this.imageWidth = 0;\n    this.imageHeight = 0;\n\n    // Mouse position when dragging.\n    this.mouseX = 0\n    this.mouseY = 0;\n    // Length of the previous mouse move when dragging.\n    this.prevDistance = 0;\n\n    // Bounding rectangles of static elements.\n    this.cutoutRect = {};\n    this.bBoxRect = {};\n    // Center of the bounding box.\n    this.originX = 0;\n    this.originY = 0;\n\n    this.initScaling = this.initScaling.bind(this);\n    this.onZoom = this.onZoom.bind(this);\n    this.handleZoom = this.handleZoom.bind(this);\n    this.mouseDown = this.mouseDown.bind(this);\n    this.mouseUp = this.mouseUp.bind(this);\n    this.mouseMove = this.mouseMove.bind(this);\n    this.mouseTouch = this.mouseTouch.bind(this);\n    this.positionAll = this.positionAll.bind(this);\n    this.translate = this.translate.bind(this);\n  }\n\n  componentDidMount() {\n    this.overlay.current.addEventListener('mousedown', this.mouseDown, { passive: true });\n    this.overlay.current.addEventListener('touchstart', this.mouseDown, { passive: true });\n\n    // The rectangle position is in viewport coordinates.\n    this.bBoxRect = this.boundingBox.current.getBoundingClientRect();\n    // Center of the bounding box in container coordinates.\n    this.originX = this.bBoxRect.width / 2;\n    this.originY = this.bBoxRect.height / 2;\n\n    // The rectangle position is in viewport coordinates.\n    this.cutoutRect = this.cutout.current.getBoundingClientRect();\n  }\n\n  componentWillUnmount() {\n    this.overlay.current.removeEventListener('mousedown', this.mouseDown);\n    this.overlay.current.removeEventListener('touchstart', this.mouseDown);\n  }\n\n  // Position all elements.\n  positionAll(panX, panY, zoom) {\n    // Zoom origin in image preview coordinates.\n    this.setState({\n      panX: panX,\n      panY: panY,\n      zoom: zoom,\n      originX: this.originX - panX,\n      originY: this.originY - panY,\n    });\n\n    // Pass cut out coordinates to caller.\n    const left = (this.originX - panX) * zoom - this.originX;\n    const top = (this.originY - panY) * zoom - this.originY;\n    this.props.onChange(\n      (left + this.cutoutRect.left - this.bBoxRect.left) / zoom,\n      (top + this.cutoutRect.top - this.bBoxRect.top) / zoom,\n      this.cutoutRect.width / zoom,\n      this.cutoutRect.height / zoom,\n      zoom);\n  }\n\n  // Check if new location is within the limits.\n  static checkBound(currPan, img, cutout, delta) {\n    let nextDiff = Math.min(0, cutout[0] - img[0] - delta, img[1] - cutout[1] + delta);\n    if (nextDiff == 0) {\n      // Cutout is completely within the image.\n      currPan += delta;\n    } else if (Math.min(0, cutout[0] - img[0], img[1] - cutout[1]) < nextDiff) {\n      // Cutout is outside of the range but closer to the bound.\n      currPan += delta;\n    }\n    return currPan;\n  }\n\n  initScaling() {\n    // Initialize components.\n    const imgRect = this.preview.current.getBoundingClientRect();\n\n    this.imageWidth = imgRect.width;\n    this.imageHeight = imgRect.height;\n\n    // Set zoom slider's min and max values. Make sure the scaled image cannot be smaller than the cutout.\n    const minZoom = Math.max(this.cutoutRect.width / imgRect.width, this.cutoutRect.height / imgRect.height);\n    this.setState({\n      minZoom: minZoom,\n      maxZoom: Math.max(DEFAULT_MAX_ZOOM, minZoom + 1)\n    });\n\n    // Initial zoom level fills the bounding box at the smallest image dimension and overflows the largest, i.e. \"fill\" not \"fit\".\n    const zoom = Math.max(this.bBoxRect.width / imgRect.width, this.bBoxRect.height / imgRect.height);\n    // Converting from viewport coordinates to container, then panning.\n    const panX = this.cutoutRect.left - this.bBoxRect.left -\n      (imgRect.width - this.cutoutRect.width) / 2;\n    const panY = this.cutoutRect.top - this.bBoxRect.top -\n      (imgRect.height - this.cutoutRect.height) / 2;\n\n    this.positionAll(panX, panY, zoom);\n  }\n\n  onZoom(e) {\n    this.handleZoom(e.target.value);\n  }\n\n  handleZoom(zoom) {\n    let panX = this.state.panX;\n    let panY = this.state.panY;\n\n    // Ensure that the image at the new zoom is not outside of the cutout boundaries.\n    // Calculate image coordinates at the new zoom.\n    const imgLeft = this.originX - (this.originX - panX) * zoom;\n    const imgRight = imgLeft + this.imageWidth * zoom;\n    // Cutout in the same coordinates as the image.\n    const coLeft = this.cutoutRect.left - this.bBoxRect.left;\n    const coRight = coLeft + this.cutoutRect.width;\n    if (coLeft < imgLeft) {\n      panX -= imgLeft - coLeft;\n    } else if (coRight > imgRight) {\n      panX += coRight - imgRight;\n    }\n    const imgTop = this.originY - (this.originY - panY) * zoom;\n    const imgBottom = imgTop + this.imageHeight * zoom;\n    const coTop = this.cutoutRect.top - this.bBoxRect.top;\n    const coBottom = coTop + this.cutoutRect.height;\n    if (coTop < imgTop) {\n      panY -= imgTop - coTop;\n    } else if (coBottom > imgBottom) {\n      panY += coBottom - imgBottom;\n    }\n\n    this.positionAll(panX, panY, zoom);\n  }\n\n  mouseDown(e) {\n    if (e.touches) {\n      this.mouseX = e.touches[0].pageX;\n      this.mouseY = e.touches[0].pageY;\n    } else {\n      this.mouseX = e.pageX;\n      this.mouseY = e.pageY;\n    }\n\n    window.addEventListener('mousemove', this.mouseMove, { passive: false });\n    window.addEventListener('touchmove', this.mouseTouch, { passive: false });\n    window.addEventListener('mouseup', this.mouseUp, { passive: true });\n    window.addEventListener('touchend', this.mouseUp, { passive: true });\n    // Disable text selection in the entire document.\n    document.body.style['userSelect'] = 'none';\n  }\n\n  // Perform image panning.\n  translate(pageX, pageY) {\n    const dX = pageX - this.mouseX;\n    const dY = pageY - this.mouseY;\n\n    this.mouseX = pageX;\n    this.mouseY = pageY;\n\n    // Make sure the image is within the cutout window.\n    const imgRect = this.preview.current.getBoundingClientRect();\n\n    // Check if the new position is within the boundaries, and if not if it's closer to them.\n    let panX = Cropper.checkBound(this.state.panX, [imgRect.left, imgRect.right],\n      [this.cutoutRect.left, this.cutoutRect.right], dX);\n    let panY = Cropper.checkBound(this.state.panY, [imgRect.top, imgRect.bottom],\n      [this.cutoutRect.top, this.cutoutRect.bottom], dY);\n\n    this.positionAll(panX, panY, this.state.zoom);\n  }\n\n  // Image panning.\n  mouseMove(e) {\n    e.preventDefault();\n    this.translate(e.pageX, e.pageY);\n  }\n\n  mouseTouch(e) {\n    e.preventDefault();\n\n    if (e.touches.length == 1) {\n      this.translate(e.touches[0].pageX, e.touches[0].pageY);\n      return;\n    }\n\n    // Image zooming by pinching.\n    const [touch0, touch1] = e.touches;\n    const distance = Math.sqrt((touch0.pageX - touch1.pageX) * (touch0.pageX - touch1.pageX) +\n      (touch0.pageY - touch1.pageY) * (touch0.pageY - touch1.pageY));\n\n    if (!this.prevDistance) {\n        this.prevDistance = distance / this.state.zoom;\n    }\n\n    let scale = (distance / this.prevDistance);\n    this.handleZoom(Math.max(this.minZoom, Math.min(this.maxZoom, scale)));\n  }\n\n  mouseUp(e) {\n    window.removeEventListener('mousemove', this.mouseMove);\n    window.removeEventListener('touchmove', this.mouseTouch);\n    window.removeEventListener('mouseup', this.mouseUp);\n    window.removeEventListener('touchend', this.mouseUp);\n    // Re-enable text selection.\n    document.body.style['userSelect'] = '';\n\n    this.positionAll(this.state.panX, this.state.panY, this.state.zoom);\n  }\n\n  render() {\n    // transform3d: position and scale.\n    const t3d = `translate3d(${this.state.panX}px, ${this.state.panY}px, 0) scale(${this.state.zoom})`;\n    // transformOrigin: zoom origin.\n    const orig = `${this.state.originX}px ${this.state.originY}px`;\n\n    // Overlay position and size are exactly equal to the position and size of the transformed image\n    // except it uses different coordinates.\n    const overlay = {\n      top: `${this.originY - this.state.originY * this.state.zoom}px`,\n      left: `${this.originX - this.state.originX * this.state.zoom}px`,\n      width: `${this.imageWidth * this.state.zoom}px`,\n      height: `${this.imageHeight * this.state.zoom}px`\n    };\n    return (\n      <div className=\"cropper\">\n        <div className=\"bounding-box\" ref={this.boundingBox}>\n          <img src={this.props.source} className=\"preview\" alt=\"\"\n            style={{transform: t3d, transformOrigin: orig}} ref={this.preview} onLoad={this.initScaling} />\n          <div className=\"cutout circle\" ref={this.cutout} />\n          <div className=\"overlay\" style={overlay} ref={this.overlay} />\n        </div>\n        <div className=\"zoom-wrapper\">\n          <input type=\"range\" className=\"zoomer\"\n            step=\"0.001\" min={this.state.minZoom} max={this.state.maxZoom} value={this.state.zoom} onChange={this.onZoom} />\n        </div>\n      </div>\n    );\n  }\n}\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Cropper from './cropper.jsx';\nimport { imageCrop } from '../lib/blob-helpers.js';\n\nexport default class AvatarCrop extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      top: 0,\n      left: 0,\n      width: 0,\n      height: 0,\n      scale: 1\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  // Cut out in image coordinates and desired scale factor.\n  handleChange(left, top, width, height, scale) {\n    this.setState({\n      left: left,\n      top: top,\n      width: width,\n      height: height,\n      scale: scale\n    });\n  }\n\n  handleSubmit() {\n    imageCrop(this.props.mime, this.props.avatar,\n      this.state.left, this.state.top,\n      this.state.width, this.state.height,\n      this.state.scale,\n      (mime, blob, width, height) => {\n        this.props.onSubmit(mime, blob, width, height);\n      },\n      (err) => {\n        this.props.onError(err);\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <Cropper\n            source={this.props.avatar}\n            onChange={this.handleChange} />\n        </div>\n        <div className=\"dialog-buttons\">\n          {this.props.onCancel ?\n            <button className=\"secondary\" onClick={this.props.onCancel}>\n              <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n            </button>\n            : null}\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n","// Password with a visiblity toggle.\nimport React from 'react';\n\nexport default class VisiblePassword extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: this.props.value,\n      visible: false\n    };\n\n    this.handleVisibility = this.handleVisibility.bind(this);\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n    if (this.props.onChange) {\n      this.props.onChange(e);\n    }\n  }\n\n  handleVisibility(e) {\n    e.preventDefault();\n    this.setState({visible: !this.state.visible});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode == 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, visible: false});\n      if (this.props.onFinished) {\n        this.props.onFinished();\n      }\n    } else if (e.keyCode == 13) {\n      // Enter pressed\n      this.handleEditingFinished();\n    }\n  }\n\n  handleEditingFinished(e) {\n    if (e) {\n      let currentTarget = e.currentTarget;\n      setTimeout(() => {\n        if (!currentTarget.contains(document.activeElement)) {\n          if (this.props.onFinished) {\n            this.props.onFinished(this.state.value);\n          }\n        }\n      }, 0);\n    } else if (this.props.onFinished) {\n      this.props.onFinished(this.state.value.trim());\n    }\n  }\n\n  render() {\n    return (\n      <div tabIndex=\"-1\" className=\"group-focus\"\n        onBlur={this.handleEditingFinished}>\n        <input className=\"with-visibility\"\n          type={this.state.visible ? \"text\" : \"password\"}\n          value={this.state.value}\n          placeholder={this.props.placeholder}\n          required={this.props.required ? 'required' : ''}\n          autoFocus={this.props.autoFocus ? 'autoFocus' : ''}\n          autoComplete={this.props.autoComplete}\n          onChange={this.handeTextChange}\n          onKeyDown={this.handleKeyDown} />\n        <span onClick={this.handleVisibility}>\n          <i className=\"material-icons clickable light-gray\">\n            {this.state.visible ? 'visibility' : 'visibility_off'}\n          </i>\n        </span>\n      </div>\n    );\n  }\n}\n","// In-place text editor. Shows text with an icon which toggles it into an input field.\nimport React from 'react';\n\nimport VisiblePassword from './visible-password.jsx';\n\nexport default class InPlaceEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selfRef = React.createRef();\n\n    this.state = {\n      active: props.active,\n      initialValue: props.value || '',\n      value: props.value || ''\n    };\n\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleStartEditing = this.handleStartEditing.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n    this.handlePasswordFinished = this.handlePasswordFinished.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // If text has changed while in read mode, update text and discard changes.\n    // Ignore update if in edit mode.\n    const newValue = this.props.value || '';\n    if (prevState.initialValue != newValue && !prevState.active) {\n      this.setState({\n        initialValue: newValue,\n        value: newValue\n      });\n    }\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value || ''});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, active: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleEditingFinished(e);\n    }\n  }\n\n   handleStartEditing() {\n    if (!this.props.readOnly) {\n      this.setState({active: true}, () => {\n        if (this.selfRef.current) {\n          this.selfRef.current.focus();\n        }\n      });\n    }\n  }\n\n  handleEditingFinished(event) {\n    const value = this.state.value.trim();\n    if (this.props.required && (!event.target.checkValidity() || !value)) {\n      // Empty input\n      this.setState({value: this.props.value, active: false});\n      return;\n    }\n    this.setState({active: false});\n    if ((value || this.props.value) && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  handlePasswordFinished(value) {\n    this.setState({active: false});\n    if (value && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  render() {\n    if (!this.state.active) {\n      let spanText = this.props.type == 'password' ? '••••••••' : this.state.value;\n      let spanClass = 'in-place-edit' + (this.props.readOnly ? ' disabled' : '');\n      if (!spanText) {\n        spanText = this.props.placeholder;\n        spanClass += ' placeholder';\n      }\n      if (!this.props.multiline || this.props.multiline == 1) {\n        spanClass += ' short';\n      }\n\n      return (<span className={spanClass} onClick={this.handleStartEditing}>\n        <span>{spanText}</span>\n      </span>);\n    }\n\n    let element;\n    const attr = {};\n    if (this.props.type == 'password') {\n      element = VisiblePassword;\n      attr.onFinished = this.handlePasswordFinished;\n    } else {\n      if (this.props.multiline > 1) {\n        element = 'textarea';\n        attr.rows = this.props.multiline;\n        attr.className = 'inplace-edit';\n      } else {\n        element = 'input';\n        attr.type = this.props.type || 'text';\n      }\n      attr.value = this.state.value;\n      attr.onChange = this.handeTextChange;\n      attr.onKeyDown = this.handleKeyDown;\n      attr.onBlur = this.handleEditingFinished;\n    }\n    attr.placeholder = this.props.placeholder;\n    attr.required = this.props.required ? 'required' : '';\n    attr.autoComplete = this.props.autoComplete;\n    attr.autoFocus = true;\n    attr.ref = this.selfRef;\n\n    return React.createElement(element, attr, null);\n  }\n};\n","// TagManager: edit topic or user tags.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\n\nimport { MAX_TAG_COUNT, MAX_TAG_LENGTH, MIN_TAG_LENGTH } from '../config.js';\nimport { arrayEqual } from '../lib/utils.js';\n\nexport default class TagManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tags: this.props.tags || [],\n      tagInput: '',\n      activated: this.props.activated\n    };\n\n    this.handleTagInput = this.handleTagInput.bind(this);\n    this.handleAddTag = this.handleAddTag.bind(this);\n    this.handleRemoveTag = this.handleRemoveTag.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const tags = nextProps.tags || [];\n    if (!arrayEqual(tags, prevState.tags) && !prevState.activated) {\n      return {tags: tags};\n    }\n    return null;\n  }\n\n  handleTagInput(text) {\n    this.setState({tagInput: text});\n    if (text.length > 0) {\n      const last = text[text.length-1];\n      if (text[0] == '\"') {\n        // This is a quoted string.\n        if (text.length > 1 && last == '\"') {\n          this.handleAddTag(text.substring(1, text.length-1));\n        }\n      } else if (last == ',' || last == ' ' || last == ';' || last == '\"') {\n        // User entered ',', ' ' or ';'\n        this.handleAddTag(text.substring(0, text.length-1).trim());\n      }\n    }\n  }\n\n  handleAddTag(tag) {\n    const maxTagCount = this.props.tinode.getServerLimit('maxTagCount', MAX_TAG_COUNT);\n\n    if (tag.length > 0 && this.state.tags.length < maxTagCount) {\n      const tags = this.state.tags.slice(0);\n      tags.push(tag);\n\n      this.setState({tags: tags, tagInput: ''});\n      if (this.props.onTagsChanged) {\n        this.props.onTagsChanged(tags);\n      }\n      return tags;\n    }\n    return this.state.tags;\n  }\n\n  handleRemoveTag(tag, index) {\n    const tags = this.state.tags.slice(0);\n    tags.splice(index, 1);\n    this.setState({tags: tags});\n    if (this.props.onTagsChanged) {\n      this.props.onTagsChanged(tags);\n    }\n  }\n\n  handleSubmit() {\n    // Add unprocessed input to tags, submit the list.\n    this.props.onSubmit(this.handleAddTag(this.state.tagInput.trim()));\n    this.setState({activated: false, tags: this.props.tags || []});\n  }\n\n  handleCancel() {\n    this.setState({activated: false, tagInput: '', tags: this.props.tags || []});\n    if (this.props.onCancel) {\n      this.props.onCancel();\n    }\n  }\n\n  render() {\n    const minTagLength = this.props.tinode.getServerLimit('minTagLength', MIN_TAG_LENGTH);\n    const maxTagLength = this.props.tinode.getServerLimit('maxTagLength', MAX_TAG_LENGTH);\n\n    let tags = [];\n    if (this.state.activated) {\n      this.state.tags.map((tag) => {\n        tags.push({user: tag, invalid: (tag.length < minTagLength || tag.length > maxTagLength)});\n      });\n    } else {\n      this.state.tags.map((tag) => {\n        tags.push(<span className=\"badge\" key={tags.length}>{tag}</span>);\n      });\n      if (tags.length == 0) {\n        tags = (\n          <i>\n            <FormattedMessage id=\"tags_not_found\" defaultMessage=\"No tags defined. Add some.\" description=\"\" />\n          </i>\n        );\n      }\n    }\n    return (\n      <div className=\"panel-form-column\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">{this.props.title}</label>\n        </div>\n        {this.state.activated ?\n        <div>\n          <FormattedMessage id=\"tags_editor_no_tags\" defaultMessage=\"Add some tags\"\n            description=\"Tag editor prompt when no tags are found.\">{\n            (add_tags_prompt) => <ChipInput\n              tinode={this.props.tinode}\n              chips={tags}\n              avatarDisabled={true}\n              prompt={add_tags_prompt}\n              tabIndex={this.props.tabIndex}\n              onEnter={this.handleAddTag}\n              onFocusLost={this.handleAddTag}\n              onCancel={this.handleCancel}\n              onChipRemoved={this.handleRemoveTag}\n              filterFunc={this.handleTagInput} />\n          }</FormattedMessage>\n          {this.props.onSubmit || this.props.onCancel ?\n            <div id=\"tag-manager-buttons\" className=\"dialog-buttons panel-form-row\">\n              <button className=\"outline\" onClick={this.handleCancel}>\n                <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n              </button>\n              <button className=\"primary\" onClick={this.handleSubmit}>\n                <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n              </button>\n            </div>\n          : null}\n        </div>\n        :\n        <div className=\"quoted\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.setState({activated: true});}}>\n            <i className=\"material-icons\">edit</i> &nbsp;<FormattedMessage id=\"title_manage_tags\" defaultMessage=\"Manage\"\n              description=\"Section title for the list of tags\" />\n          </a>\n          <>{tags}</>\n        </div>\n      }\n      </div>\n    );\n  }\n};\n","// Widget for editing topic description.\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarCrop from './avatar-crop.jsx';\nimport AvatarUpload from './avatar-upload.jsx';\nimport InPlaceEdit from './in-place-edit.jsx';\nimport TagManager from './tag-manager.jsx';\n\nimport { AVATAR_SIZE, MAX_AVATAR_BYTES, MAX_EXTERN_ATTACHMENT_SIZE,\n  MAX_INBAND_ATTACHMENT_SIZE, MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH } from '../config.js';\nimport { imageScaled, blobToBase64, makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, theCard } from '../lib/utils.js';\n\nexport default class TopicDescEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    const acs = topic.getAccessMode();\n    this.state = {\n      isMe: Tinode.isMeTopicName(this.props.topic),\n      owner: acs && acs.isOwner(),\n      fullName: topic.public ? topic.public.fn : undefined,\n      private: topic.private ? topic.private.comment : null,\n      description: topic.public ? topic.public.note : undefined,\n      avatar: makeImageUrl(topic.public ? topic.public.photo : null),\n      tags: topic.tags() || [],\n      newAvatar: null,\n      newAvatarMime: null\n    };\n\n    this.previousOnTags = null;\n\n    this.tnNewTags = this.tnNewTags.bind(this);\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\n    this.handleImageUpdated = this.handleImageUpdated.bind(this);\n    this.handleAvatarCropped = this.handleAvatarCropped.bind(this);\n    this.handlePrivateUpdate = this.handlePrivateUpdate.bind(this);\n    this.handleDescriptionUpdate = this.handleDescriptionUpdate.bind(this);\n    this.uploadAvatar = this.uploadAvatar.bind(this);\n    this.handleAvatarCropCancel = this.handleAvatarCropCancel.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n  }\n\n  componentDidMount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    this.previousOnTags = topic.onTagsUpdated;\n    topic.onTagsUpdated = this.tnNewTags;\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    topic.onTagsUpdated = this.previousOnTags;\n  }\n\n  tnNewTags(tags) {\n    this.setState({tags: tags});\n  }\n\n  handleFullNameUpdate(fn) {\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\n    if (fn && this.state.fullName !== fn) {\n      this.setState({fullName: fn});\n      this.props.onUpdateTopicDesc(this.props.topic, theCard(fn, null));\n    }\n  }\n\n  handlePrivateUpdate(comment) {\n    comment = comment.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.private !== comment) {\n      this.setState({private: comment});\n      this.props.onUpdateTopicDesc(this.props.topic, null, comment || Tinode.DEL_CHAR);\n    }\n  }\n\n  handleDescriptionUpdate(desc) {\n    desc = desc.trim().substring(0, MAX_TOPIC_DESCRIPTION_LENGTH);\n    if (desc) {\n      this.setState({description: desc});\n      this.props.onUpdateTopicDesc(this.props.topic, theCard(null, null, null, desc));\n    }\n  }\n\n  // AvatarUpload widget has changed the avatar: received a new file or deleted the avatar.\n  handleImageUpdated(mime, img) {\n    // This will show the AvatarCropView is img is not null.\n    this.setState({newAvatar: img, newAvatarMime: mime});\n    if (!img) {\n      // Deleting the avatar.\n      this.setState({avatar: null});\n      this.props.onUpdateTopicDesc(this.props.topic, theCard(null, Tinode.DEL_CHAR));\n    }\n  }\n\n  // AvatarCropView calls this method when the user has cropped the image.\n  handleAvatarCropped(mime, blob, width, height) {\n    const url = blob ? URL.createObjectURL(blob) : null;\n    this.setState({avatar: url, newAvatar: null, newAvatarMime: null});\n    if (blob) {\n      this.uploadAvatar(mime, blob, width, height);\n    }\n  }\n\n  // Utility method for converting cropped avatar blob to bytes for sending inband or\n  // for uploading it to the server out of band.\n  uploadAvatar(mime, blob, width, height) {\n    const readyToUpload = (mime, blob, width, height) => {\n      if (blob.size > MAX_AVATAR_BYTES) {\n        // Too large to send inband - uploading out of band and sending as a link.\n        const uploader = this.props.tinode.getLargeFileHelper();\n\n        this.setState({uploading: true});\n        uploader.upload(blob)\n          .then((url) => {\n            this.props.onUpdateTopicDesc(this.props.topic, theCard(null, url));\n          })\n          .catch((err) => {\n            this.props.onError(err, 'err');\n          })\n          .finally(() => {\n            this.setState({uploading: false});\n          });\n      } else {\n        this.setState({uploading: true});\n        // Convert blob to base64-encoded bits.\n        blobToBase64(blob, (unused, base64bits) => {\n          const du = makeImageUrl({data: base64bits, type: mime});\n          this.setState({source: du});\n          this.props.onUpdateTopicDesc(this.props.topic, theCard(null, du));\n          this.setState({uploading: false});\n        });\n      }\n    };\n\n    if (width > AVATAR_SIZE || height > AVATAR_SIZE || width != height) {\n      // Avatar is not square or too large even after cropping. Shrink it and make square.\n      imageScaled(blob, AVATAR_SIZE, AVATAR_SIZE, MAX_EXTERN_ATTACHMENT_SIZE, true,\n        readyToUpload,\n        (err) => {\n          this.props.onError(err, 'err');\n        });\n    } else {\n      readyToUpload(mime, blob, width, height);\n    }\n  }\n\n  handleAvatarCropCancel(img) {\n    this.setState({newAvatar: null, newAvatarMime: null});\n  }\n\n  handleTagsUpdated(tags) {\n    // Check if tags have actually changed.\n    if (arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      return;\n    }\n    this.props.onUpdateTags(tags);\n  }\n\n  render() {\n    if (this.state.newAvatar) {\n      return (\n        <AvatarCrop\n          avatar={this.state.newAvatar}\n          mime={this.state.newAvatarMime}\n          onSubmit={this.handleAvatarCropped}\n          onCancel={this.handleAvatarCropCancel}\n          onError={this.props.onError} />\n      );\n    }\n\n    const editable = this.state.isMe || this.state.owner;\n\n    return (\n      <>\n      <div className=\"panel-form-column\">\n        <center>\n          <AvatarUpload\n            tinode={this.props.tinode}\n            avatar={this.state.avatar}\n            readOnly={!editable}\n            uid={this.props.topic}\n            title={this.state.fullName}\n            onImageUpdated={this.handleImageUpdated}\n            onError={this.props.onError} />\n        </center>\n        {this.state.isMe ?\n          <div className=\"group\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n              description=\"Label for full name editing\" />\n            </label>\n            <div>\n              <FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n                description=\"Input placeholder for person's full name\">{\n                (full_name_placeholder) => <InPlaceEdit\n                  placeholder={full_name_placeholder}\n                  value={this.state.fullName}\n                  required={true}\n                  onFinished={this.handleFullNameUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n        :\n          <>\n            <div className=\"group\">\n              <div><label className=\"small\">\n                <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                  description=\"Label for editing topic name\" />\n              </label></div>\n              <div>\n                <FormattedMessage id=\"topic_name_editing_placeholder\" defaultMessage=\"Freeform name of the group\"\n                  description=\"Prompt for entering topic name\">{\n                  (group_name_placeholder) => <InPlaceEdit\n                    placeholder={group_name_placeholder}\n                    readOnly={!editable}\n                    value={this.state.fullName}\n                    required={true}\n                    onFinished={this.handleFullNameUpdate} />\n                }</FormattedMessage>\n              </div>\n            </div>\n            <div className=\"group\">\n              <div>\n                <label className=\"small\">\n                  <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                    description=\"Label for editing 'private'\" />\n                </label>\n              </div>\n              <div>\n                <FormattedMessage id=\"private_editing_placeholder\" defaultMessage=\"Visible to you only\"\n                  description=\"Placeholder for editing 'private'\">{\n                  (private_placeholder) => <InPlaceEdit\n                    placeholder={private_placeholder}\n                    value={this.state.private}\n                    onFinished={this.handlePrivateUpdate} />\n                }</FormattedMessage>\n              </div>\n            </div>\n          </>\n        }\n        {editable || this.state.description ?\n          <div className=\"group\">\n            <div><label className=\"small\">\n              <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                description=\"Label for editing topic description\" />\n            </label></div>\n            <div>\n              <FormattedMessage id=\"description_editing_placeholder\"\n                defaultMessage=\"Description (optional)\"\n                description=\"Placeholder for editing topic description\">{\n                (private_placeholder) => <InPlaceEdit\n                  placeholder={private_placeholder}\n                  readOnly={!editable}\n                  value={this.state.description}\n                  multiline={2}\n                  onFinished={this.handleDescriptionUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n          : null\n        }\n      </div>\n      {editable ?\n        <>\n          <div className=\"hr\" />\n          <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (search & discovery)\"\n            description=\"Section title for TagManager\">{\n              (title_tag_manager) => <TagManager\n                tinode={this.props.tinode}\n                title={title_tag_manager}\n                activated={false}\n                tags={this.state.tags}\n                onSubmit={this.handleTagsUpdated} />\n          }</FormattedMessage>\n        </>\n        : null\n      }\n      </>\n    );\n  }\n};\n","// View for editing topic (including 'me' topic) parameters.\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport TopicDescEdit from '../widgets/topic-desc-edit.jsx';\n\nimport { arrayEqual, asEmail, asPhone } from '../lib/utils.js';\n\nexport default class TopicCommon extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    const acs = topic.getAccessMode();\n    this.state = {\n      isMe: this.props.topic == 'me',\n      owner: acs && acs.isOwner(),\n      credentials: (topic.getCredentials ? topic.getCredentials() : null) || [],\n      addCredActive: false,\n      addCredInvalid: false,\n      newCred: '',\n      tags: []\n    };\n\n    this.previousTagsUpdated = undefined;\n\n    this.onTagsUpdated = this.onTagsUpdated.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.tnCredsUpdated = this.tnCredsUpdated.bind(this);\n    this.handleCredChange = this.handleCredChange.bind(this);\n    this.handleCredKeyDown = this.handleCredKeyDown.bind(this);\n    this.handleCredEntered = this.handleCredEntered.bind(this);\n  }\n\n  // No need to separately handle component mount.\n  componentDidUpdate(props) {\n    const topic = this.props.tinode.getTopic(props.topic);\n    if (!topic) {\n      return;\n    }\n\n    topic.onCredsUpdated = this.tnCredsUpdated;\n\n    if (topic.onTagsUpdated != this.onTagsUpdated) {\n      if (topic.getType() == 'grp') {\n        this.previousTagsUpdated = topic.onTagsUpdated;\n        topic.onTagsUpdated = this.onTagsUpdated;\n      } else {\n        this.previousTagsUpdated = undefined;\n      }\n    }\n\n    if (this.state.topic != props.topic) {\n      this.setState({topic: props.topic});\n    }\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    topic.onCredsUpdated = undefined;\n    topic.onTagsUpdated = this.previousTagsUpdated;\n  }\n\n  tnCredsUpdated(creds) {\n    this.setState({credentials: creds || []});\n  }\n\n  handleCredChange(e) {\n    this.setState({newCred: e.target.value, addCredInvalid: false});\n  }\n\n  handleCredKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({newCred: '', addCredActive: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleCredEntered(e);\n    }\n  }\n\n  handleCredEntered(e) {\n    const value = this.state.newCred.trim();\n    if (!value) {\n      this.setState({addCredActive: false, addCredInvalid: false});\n      return;\n    }\n\n    let val = asPhone(value);\n    let method;\n    if (val) {\n      method = 'tel';\n    } else {\n      val = asEmail(value);\n      if (val) {\n        method = 'email';\n      }\n    }\n    if (method) {\n      this.props.onCredAdd(method, val);\n      this.setState({addCredActive: false, newCred: ''});\n    } else {\n      this.setState({addCredInvalid: true});\n    }\n  }\n\n  // Server informs that the tags have been updated.\n  onTagsUpdated(tags) {\n    this.setState({tags: tags});\n\n    if (this.previousTagsUpdated && this.previousTagsUpdated != this.onTagsUpdated) {\n      this.previousTagsUpdated(tags);\n    }\n  }\n\n  // Request server to change tags.\n  handleTagsUpdated(tags) {\n    if (!arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      this.props.onTopicTagsUpdateRequest(this.props.topic, tags);\n    }\n  }\n\n  render() {\n    const credentials = [];\n    if (this.state.isMe) {\n      this.state.credentials.map((cred) => {\n        credentials.push(\n          <div key={cred.meth + \":\" + cred.val + \":\" + cred.done}>{cred.meth}: <tt>{cred.val}</tt>\n            <span> {!cred.done ?\n              <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredConfirm(cred.meth, cred.val);}}>\n                <FormattedMessage id=\"validate_credential_action\" defaultMessage=\"confirm\"\n                  description=\"Validate credentail call to action\" />\n              </a>\n            : null} <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredDelete(cred.meth, cred.val);}}><i\n              className=\"material-icons gray\">delete_outline</i></a></span>\n          </div>\n        );\n      });\n    }\n\n    return (\n      <div className=\"scrollable-panel\">\n        <TopicDescEdit\n          tinode={this.props.tinode}\n          topic={this.props.topic}\n          onUpdateTopicDesc={this.props.onUpdateTopicDesc}\n          onUpdateTags={this.handleTagsUpdated}\n          onError={this.props.onError} />\n        {this.state.isMe ?\n          <>\n            <div className=\"hr\" />\n            <div className=\"panel-form-column\">\n              <label className=\"small\">\n                <FormattedMessage id=\"label_user_contacts\" defaultMessage=\"Contacts:\"\n                description=\"Label for user contacts\" />\n              </label>\n              <div className=\"quoted\">\n                {credentials}\n                {this.state.addCredActive ?\n                  <input type=\"text\" value={this.state.value}\n                    className={this.state.addCredInvalid ? 'invalid' : null}\n                    placeholder=\"Phone number or email\" required=\"required\" autoFocus\n                    onChange={this.handleCredChange} onKeyDown={this.handleCredKeyDown} onBlur={this.handleCredEntered} />\n                  : null}\n                <div>\n                  <a href=\"#\" onClick={(e) => {e.preventDefault(); this.setState({addCredActive: true});}}>\n                    <i className=\"material-icons\">add</i>\n                    <FormattedMessage id=\"button_add_another\" defaultMessage=\"Add another\" description=\"Call to action [+ add another]\" />\n                  </a></div>\n              </div>\n            </div>\n          </>\n        : null\n      }\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport InPlaceEdit from './in-place-edit.jsx';\n\nimport { NO_ACCESS_MODE } from '../config.js';\n\nconst messages = defineMessages({\n  clear_messages: {\n    id: 'action_clear_messages',\n    defaultMessage: 'Clear Messages',\n    description: 'Flat button [Clear Messages] (soft-delete messages)'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n  delete_messages: {\n    id: 'action_delete_messages',\n    defaultMessage: 'Clear Messages for All',\n    description: 'Flat button [Clear for All] (hard-delete all messages)'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  topic_delete: {\n    id: 'topic_delete',\n    defaultMessage: 'Delete Conversation',\n    description: 'Alert title when deleting the topic.'\n  },\n  topic_delete_warning: {\n    id: 'topic_delete_warning',\n    defaultMessage: 'Are you sure you want to delete this conversation? It cannot be undone.',\n    description: 'Alert warning when deleting entire topic'\n  },\n  leave_chat: {\n    id: 'action_leave_chat',\n    defaultMessage: 'Leave Conversation',\n    description: 'Flat button [Leave Conversation]'\n  },\n  leave_chat_warning: {\n    id: 'leave_chat_warning',\n    defaultMessage: 'Are you sure you want to leave this conversation?',\n    description: 'Alert dialog warning when unsubscribing from a chat.'\n  },\n  block_contact: {\n    id: 'action_block_contact',\n    defaultMessage: \"Block Contact\",\n    description: \"Flat button [Block Contact]\"\n  },\n  block_contact_warning: {\n    id: 'block_contact_warning',\n    defaultMessage: 'Are you sure you want to block this contact?',\n    description: 'Alert dialog warning when blocking a contact.'\n  },\n  report_chat: {\n    id: 'action_report_chat',\n    defaultMessage: 'Report Conversation',\n    description: 'Flat button [Report Group]'\n  },\n  report_chat_warning: {\n    id: 'report_chat_warning',\n    defaultMessage: 'Are you sure you want to block and report this conversation?',\n    description: 'Alert dialog warning when reporting a conversation for abuse'\n  },\n  other_user: {\n    id: 'label_other_user',\n    defaultMessage: 'Other',\n    description: 'Label for the other user when the user is unnamed'\n  },\n});\n\nclass TopicSecurity extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleDeleteTopic = this.handleDeleteTopic.bind(this);\n    this.handleDeleteMessages = this.handleDeleteMessages.bind(this);\n    this.handleLeave = this.handleLeave.bind(this);\n    this.handleBlock = this.handleBlock.bind(this);\n    this.handleReport = this.handleReport.bind(this);\n  }\n\n  handleDeleteTopic(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.topic_delete), // title\n      formatMessage(messages.topic_delete_warning), // content\n      (() => { this.props.onDeleteTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleDeleteMessages(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(this.props.deleter ? messages.delete_messages : messages.clear_messages), // title\n      formatMessage(this.props.deleter ? messages.delete_messages_warning : messages.clear_messages_warning), // content\n      (() => { this.props.onDeleteMessages(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleLeave(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.leave_chat), // title\n      formatMessage(messages.leave_chat_warning), // content\n      (() => { this.props.onLeaveTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleBlock(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.block_contact), // title\n      formatMessage(messages.block_contact_warning), // content\n      (() => { this.props.onBlockTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleReport(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.report_chat), // title\n      formatMessage(messages.report_chat_warning), // content\n      (() => { this.props.onReportTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          {!this.props.channel ?\n            <a href=\"#\" className=\"flat-button\" onClick={this.handleDeleteMessages}>\n              <i className=\"material-icons\">delete_outline</i> &nbsp;{\n                formatMessage(this.props.deleter ? messages.delete_messages : messages.clear_messages)\n              }\n            </a>\n            :\n            null\n          }\n          {this.props.owner ?\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleDeleteTopic}>\n              <i className=\"material-icons\">delete</i> &nbsp;{formatMessage(messages.topic_delete)}\n            </a>\n            :\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleLeave}>\n              <i className=\"material-icons\">exit_to_app</i> &nbsp;{formatMessage(messages.leave_chat)}\n            </a>\n          }\n          {!this.props.groupTopic ?\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleBlock}>\n              <i className=\"material-icons\">block</i> &nbsp;{formatMessage(messages.block_contact)}\n            </a>\n            :\n            null\n          }\n          {!this.props.owner ?\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleReport}>\n              <i className=\"material-icons\">report</i> &nbsp;{formatMessage(messages.report_chat)}\n            </a>\n            :\n            null\n          }\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          {this.props.groupTopic ?\n            <>\n              <div className=\"group\">\n                <label>\n                  <FormattedMessage id=\"label_your_permissions\" defaultMessage=\"Your permissions:\"\n                    description=\"Label for current user permissions\" />\n                </label> <tt className=\"clickable\"\n                  onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('want')}}>\n                  {this.props.access}\n                </tt>\n              </div>\n              <div className=\"group\">\n                <div>\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_default_access_mode\" defaultMessage=\"Default access mode:\"\n                    description=\"Label for default access mode\" />\n                  </label>\n                </div>\n                <div className=\"quoted\">\n                  <div>Auth: <tt className=\"clickable\"\n                    onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('auth')}}>{this.props.auth}</tt>\n                  </div>\n                  <div>Anon: <tt className=\"clickable\"\n                    onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('anon')}}>{this.props.anon}</tt>\n                  </div>\n                </div>\n              </div>\n            </>\n            :\n            <div className=\"group\">\n              <div>\n                <label className=\"small\">\n                  <FormattedMessage id=\"label_permissions\" defaultMessage=\"Permissions:\"\n                    description=\"Section title\" />\n                </label>\n              </div>\n              <div className=\"quoted\">\n                <div>\n                  <FormattedMessage id=\"label_you\" defaultMessage=\"You:\"\n                    description=\"Label for the current user\" /> <tt className=\"clickable\"\n                    onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('want')}}>\n                    {this.props.access}\n                  </tt>\n                </div>\n                <div>{this.props.fullName ? this.props.fullName : formatMessage(messages.other_user)}:\n                  &nbsp;<tt className=\"clickable\"\n                    onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('given')}}>\n                    {this.props.modeGiven2}\n                  </tt>\n                </div>\n              </div>\n            </div>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(TopicSecurity);\n","// InfoView: panel with topic/user info.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport BadgeList from '../widgets/badge-list.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport ContactList from '../widgets/contact-list.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupManager from '../widgets/group-manager.jsx';\nimport MenuCancel from '../widgets/menu-cancel.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\nimport TopicCommon from '../widgets/topic-common.jsx';\nimport TopicSecurity from '../widgets/topic-security.jsx';\n\nimport { MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH, NO_ACCESS_MODE } from '../config.js';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, theCard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  info: {\n    id: 'panel_title_info',\n    description: 'Title for InfoView',\n    defaultMessage: 'Info'\n  },\n  general: {\n    id: 'panel_title_general',\n    description: 'Title for TopicCommon.',\n    defaultMessage: 'General'\n  },\n  security: {\n    id: 'panel_title_security',\n    description: 'Title for TopicSecirity and AccSecurity.',\n    defaultMessage: 'Security'\n  },\n  members: {\n    id: 'panel_title_members',\n    description: 'Title for managing group members view.',\n    defaultMessage: 'Members'\n  },\n  crop: {\n    id: 'panel_title_crop',\n    description: 'Title for AvatarCropView.',\n    defaultMessage: 'Drag to Adjust'\n  },\n  perm_want: {\n    id: 'requested_permissions',\n    defaultMessage: 'Requested',\n    description: 'Title for permissions'\n  },\n  perm_given: {\n    id: 'granted_permissions',\n    defaultMessage: 'Granted',\n    description: 'Title for permissions'\n  },\n  perm_auth: {\n    id: 'permissions_authenticated',\n    defaultMessage: 'Authenticated',\n    description: 'Title for editing default authenticated permissions'\n  },\n  perm_anon: {\n    id: 'permissions_anonymous',\n    defaultMessage: 'Anonymous',\n    description: 'Title for editing default anonymous permissions'\n  },\n  perm_user: {\n    id: 'permissions_user',\n    defaultMessage: 'User\\'s Permissions',\n    description: 'Title for editing user\\'s permissions'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n});\n\nfunction _clip(str, length) {\n  return str && str.substring(0, length);\n}\n\nclass InfoView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      topic: null,\n      owner: false,\n      admin: false,\n      sharer: false,\n      deleter: false,\n      muted: false,\n      address: null,\n      groupTopic: undefined,\n      channel: undefined,\n      fullName: undefined,\n      description: undefined,\n      avatar: null,\n      private: null,\n      selectedContact: null,\n      access: null,\n      modeGiven: null,\n      modeWant: null,\n      modeGiven2: null, // P2P topic, the other user mode given\n      modeWant2: null,  // P2P topic, the other user mode want\n      auth: null,\n      anon: null,\n      contactList: [],\n      trustedBadges: [],\n      previousMetaDesc: undefined,\n      previousSubsUpdated: undefined,\n    };\n\n    this.resetSubs = this.resetSubs.bind(this);\n    this.resetDesc = this.resetDesc.bind(this);\n    this.resetTags = this.resetTags.bind(this);\n    this.onMetaDesc = this.onMetaDesc.bind(this);\n    this.onSubsUpdated = this.onSubsUpdated.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleMuted = this.handleMuted.bind(this);\n    this.handleUnarchive = this.handleUnarchive.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleShowAddMembers = this.handleShowAddMembers.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleMemberSelected = this.handleMemberSelected.bind(this);\n    this.handleContextMenu = this.handleContextMenu.bind(this);\n    this.handleBackNavigate = this.handleBackNavigate.bind(this);\n  }\n\n  // No need to separately handle component mount.\n  componentDidUpdate(props) {\n    const topic = this.props.tinode.getTopic(props.topic);\n    if (!topic) {\n      return;\n    }\n\n    if (this.onMetaDesc != topic.onMetaDesc) {\n      this.previousMetaDesc = topic.onMetaDesc;\n      topic.onMetaDesc = this.onMetaDesc;\n\n      this.previousSubsUpdated = topic.onSubsUpdated;\n      topic.onSubsUpdated = this.onSubsUpdated;\n    }\n\n    if (this.state.topic != props.topic) {\n      this.setState({topic: props.topic});\n      this.resetDesc(topic, props);\n      this.resetSubs(topic, props);\n      this.resetTags(topic);\n    }\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.setState({topic: null});\n    topic.onMetaDesc = this.previousMetaDesc;\n    topic.onSubsUpdated = this.previousSubsUpdated;\n  }\n\n  resetSubs(topic, props) {\n    const newState = {contactList: []};\n    if (topic.getType() == 'p2p') {\n      // Fetch the other party in the p2p conversation.\n      // Topic may not be ready yet, so check if user is found.\n      const user2 = topic.subscriber(props.topic);\n      if (user2) {\n        newState.modeGiven2 = user2.acs.getGiven();\n        newState.modeWant2 = user2.acs.getWant();\n      } else {\n        newState.modeGiven2 = NO_ACCESS_MODE;\n        newState.modeWant2 = NO_ACCESS_MODE;\n      }\n    } else {\n      topic.subscribers((sub) => {\n        newState.contactList.push(sub);\n      }, this);\n    }\n\n    this.setState(newState);\n  }\n\n  resetDesc(topic, props) {\n    const defacs = topic.getDefaultAccess() || {};\n    const acs = topic.getAccessMode();\n\n    const badges = [];\n    if (topic.trusted) {\n      for (const [key, val] of Object.entries(topic.trusted)) {\n        if (val) {\n          badges.push(key);\n        }\n      }\n    }\n\n    this.setState({\n      owner: acs && acs.isOwner(),\n      admin: acs && acs.isAdmin(),\n      sharer: acs && acs.isSharer(),\n      deleter: acs && acs.isDeleter(),\n      muted: acs && acs.isMuted(),\n\n      fullName: _clip(topic.public ? topic.public.fn : undefined, MAX_TITLE_LENGTH),\n      description: _clip(topic.public ? topic.public.note : undefined, MAX_TOPIC_DESCRIPTION_LENGTH),\n      avatar: makeImageUrl(topic.public ? topic.public.photo : null),\n      trustedBadges: badges,\n      private: _clip(topic.private ? topic.private.comment : null, MAX_TITLE_LENGTH),\n      archived: topic.isArchived(),\n      address: topic.name,\n      groupTopic: topic.isGroupType(),\n      channel: topic.isChannelType() || topic.chan,\n      access: acs ? acs.getMode() : undefined,\n      modeGiven: acs ? acs.getGiven() : undefined,\n      modeWant: acs ? acs.getWant() : undefined,\n      auth: defacs.auth,\n      anon: defacs.anon\n    });\n  }\n\n  resetTags(topic) {\n    if (topic.getType() != 'grp') {\n      return;\n    }\n\n    const acs = topic.getAccessMode();\n    if (acs && acs.isOwner()) {\n      // Requesting tags: owner is editing the topic.\n      topic.getMeta(topic.startMetaQuery().withTags().build());\n    }\n  }\n\n  onMetaDesc(desc) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetDesc(topic, this.props);\n\n    if (this.previousMetaDesc && this.previousMetaDesc != this.onMetaDesc) {\n      this.previousMetaDesc(desc);\n    }\n  }\n\n  onSubsUpdated(subs) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetSubs(topic, this.props);\n\n    if (this.previousSubsUpdated && this.previousSubsUpdated != this.onSubsUpdated) {\n      this.previousSubsUpdated(subs);\n    }\n  }\n\n  handleImageChanged(img) {\n    this.setState({avatar: img});\n    this.props.onTopicDescUpdate(this.props.topic, theCard(null, img || Tinode.DEL_CHAR), null);\n  }\n\n  handleMuted(ignored, checked) {\n    this.setState({muted: checked});\n    this.props.onChangePermissions(this.props.topic, checked ? '-P' : '+P');\n  }\n\n  handleUnarchive(ignored, ignored2) {\n    this.props.onTopicUnArchive(this.props.topic);\n  }\n\n  handlePermissionsChanged(which, perm) {\n    switch (which) {\n      case 'auth':\n        this.props.onTopicDescUpdateRequest(this.props.topic, null, null, {auth: perm});\n        break;\n      case 'anon':\n        this.props.onTopicDescUpdateRequest(this.props.topic, null, null, {anon: perm});\n        break;\n      case 'mode':\n      case 'want':\n        this.props.onChangePermissions(this.props.topic, perm);\n        break;\n      case 'given':\n        this.props.onChangePermissions(this.props.topic, perm, this.props.topic);\n        break;\n      case 'user':\n        this.props.onChangePermissions(this.props.topic, perm, this.state.userPermissionsEdited);\n        break;\n    }\n\n    this.handleBackNavigate();\n  }\n\n  handleLaunchPermissionsEditor(which, uid) {\n    const {formatMessage} = this.props.intl;\n    let toEdit, toCompare, toSkip, titleEdit, titleCompare, userTitle, userAvatar;\n    switch (which) {\n      case 'mode':\n        toEdit = this.state.access;\n        break;\n      case 'want':\n        toEdit = this.state.modeWant;\n        toCompare = this.state.modeGiven;\n        if (this.state.owner) {\n          // Don't allow owner to unset 'O' permission. All other permissions are OK.\n          toSkip = 'O';\n        } else {\n          // Allow accepting any of 'ASDO' permissions but don't allow asking for them.\n          toSkip = Tinode.AccessMode.encode(Tinode.AccessMode.diff('ASDO', this.state.modeGiven));\n          if (this.state.channel) {\n            // Channels are read-only.\n            toSkip += 'W';\n          }\n        }\n        titleEdit = formatMessage(messages.perm_want);\n        titleCompare = formatMessage(messages.perm_given);\n        break;\n      case 'given':\n        toEdit = this.state.modeGiven2;\n        toCompare = this.state.modeWant2;\n        toSkip = this.state.groupTopic ? (this.state.owner ? '' : 'O') : 'ASDO';\n        titleEdit = formatMessage(messages.perm_given);\n        titleCompare = formatMessage(messages.perm_want);\n        break;\n      case 'auth':\n        toEdit = this.state.auth;\n        toSkip = 'O';\n        break;\n      case 'anon':\n        toEdit = this.state.anon;\n        toSkip = 'O';\n        break;\n      case 'user': {\n        const topic = this.props.tinode.getTopic(this.props.topic);\n        if (!topic) {\n          return;\n        }\n        const user = topic.subscriber(uid);\n        if (!user || !user.acs) {\n          return;\n        }\n        toEdit = user.acs.getGiven();\n        toCompare = user.acs.getWant();\n        toSkip = this.state.owner ? '' : 'O';\n        titleEdit = formatMessage(messages.perm_given);\n        titleCompare = formatMessage(messages.perm_want);\n        if (user.public) {\n          userTitle = user.public.fn;\n          userAvatar = user.public.photo;\n        }\n        break;\n      }\n      default:\n        console.error(\"Unknown permission editing mode '\" + which + \"'\");\n        return;\n    }\n    this.setState({\n      userPermissionsEdited: uid,\n      userPermissionsTitle: userTitle,\n      userPermissionsAvatar: userAvatar,\n      editedPermissions: toEdit,\n      immutablePermissions: toCompare,\n      editedPermissionsTitle: titleEdit,\n      immutablePermissionsTitle: titleCompare,\n      editedPermissionsSkipped: toSkip,\n    });\n    this.props.onNavigate(`perm/${which}`);\n  }\n\n  handleShowAddMembers(e) {\n    e.preventDefault();\n    this.props.onInitFind();\n    this.props.onNavigate('members');\n  }\n\n  handleMemberUpdateRequest(members, added, removed) {\n    this.props.onMemberUpdateRequest(this.props.topic, added, removed);\n    this.props.onNavigate('info');\n  }\n\n  handleMemberSelected(uid) {\n    this.setState({selectedContact: uid});\n  }\n\n  handleBackNavigate() {\n    const args = (this.props.panel || 'info').split('/');\n    if (args[0] == 'info') {\n      this.props.onNavigate(null);\n    } else if (args[0] == 'perm') {\n      if (args[1] == 'user') {\n        this.props.onNavigate('info');\n      } else {\n        this.props.onNavigate('security');\n      }\n    } else {\n      this.props.onNavigate('info');\n    }\n  }\n\n  handleContextMenu(params) {\n    const {formatMessage} = this.props.intl;\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    const user = topic.subscriber(params.topicName);\n    if (!user || !user.acs) {\n      return;\n    }\n\n    const isMe = this.props.tinode.isMe(params.topicName);\n    const menuItems = [\n      {title: formatMessage(messages.edit_permissions), handler: () => {\n        this.handleLaunchPermissionsEditor(isMe ? 'want' : 'user', params.topicName);\n      }}\n    ];\n    if (!isMe) {\n      menuItems.push('member_delete');\n    }\n    menuItems.push(user.acs.isMuted() ? 'member_unmute' : 'member_mute');\n    if (!isMe) {\n      menuItems.push(user.acs.isJoiner() ? 'member_block' : 'member_unblock');\n    }\n    this.props.showContextMenu({\n      topicName: this.props.topic,\n      x: params.x,\n      y: params.y,\n      user: params.topicName}, menuItems);\n  }\n\n  render() {\n    const args = (this.props.panel || 'info').split('/');\n    const view = args[0];\n    args.shift();\n\n    const {formatMessage} = this.props.intl;\n    const panelTitle = formatMessage((view == 'perm' ? messages['perm_' + args[0]] : messages[view])\n      || messages['info']);\n\n    return (\n      <div id=\"info-view\">\n        <div className=\"caption-panel\" id=\"info-caption-panel\">\n          <div className=\"panel-title\" id=\"info-title\">{panelTitle}</div>\n          <div>\n            <MenuCancel onCancel={this.handleBackNavigate} />\n          </div>\n        </div>\n        {this.props.displayMobile ?\n          <ErrorPanel\n            level={this.props.errorLevel}\n            text={this.props.errorText}\n            onClearError={this.props.onError} /> : null}\n        {view == 'members' ?\n          <GroupManager\n            tinode={this.props.tinode}\n            members={this.state.contactList}\n            requiredMember={this.props.myUserId}\n            keepInitialMembers={!this.state.admin && !this.state.owner}\n            myUserId={this.props.myUserId}\n            contacts={this.props.searchableContacts}\n            onCancel={this.handleBackNavigate}\n            onSubmit={this.handleMemberUpdateRequest} />\n          :\n        view == 'perm' && args.length > 0 ?\n          <PermissionsEditor\n            tinode={this.props.tinode}\n            mode={this.state.editedPermissions}\n            compare={this.state.immutablePermissions}\n            skip={this.state.editedPermissionsSkipped}\n            modeTitle={this.state.editedPermissionsTitle}\n            compareTitle={this.state.immutablePermissionsTitle}\n            userTitle={this.state.userPermissionsTitle}\n            item={this.state.userPermissionsEdited}\n            userAvatar={this.state.userPermissionsAvatar}\n            onSubmit={(mode) => this.handlePermissionsChanged(args[0], mode)}\n            onCancel={this.handleBackNavigate} />\n          :\n        view == 'general' ?\n          <TopicCommon\n            tinode={this.props.tinode}\n            topic={this.props.topic}\n            onCredAdd={this.props.onCredAdd}\n            onTopicTagsUpdateRequest={this.props.onTopicTagsUpdateRequest}\n            onCredConfirm={this.props.onCredConfirm}\n            onCredDelete={this.props.onCredDelete}\n            onUpdateTopicDesc={this.props.onTopicDescUpdateRequest}\n            onError={this.props.onError} />\n          :\n        view == 'security' ?\n          <TopicSecurity\n            topic={this.props.topic}\n            owner={this.state.owner}\n            admin={this.state.admin}\n            sharer={this.state.sharer}\n            deleter={this.state.deleter}\n            muted={this.state.muted}\n\n            groupTopic={this.state.groupTopic}\n            channel={this.state.channel}\n            access={this.state.access}\n            modeGiven={this.state.modeGiven}\n            modeWant={this.state.modeWant}\n            modeGiven2={this.state.modeGiven2}\n            modeWant2={this.state.modeWant2}\n            auth={this.state.auth}\n            anon={this.state.anon}\n\n            onShowAlert={this.props.onShowAlert}\n            onDeleteMessages={this.props.onDeleteMessages}\n            onLeaveTopic={this.props.onLeaveTopic}\n            onBlockTopic={this.props.onBlockTopic}\n            onReportTopic={this.props.onReportTopic}\n            onLaunchPermissionsEditor={this.handleLaunchPermissionsEditor}\n            onNavigate={this.props.onNavigate} />\n          :\n          <div id=\"info-view-content\" className=\"scrollable-panel\">\n            <div className=\"panel-form-column\">\n              <a href=\"#\" className=\"flat-button float-right\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('general');}}>\n                <i className=\"material-icons\">edit</i>&nbsp;\n                <FormattedMessage id=\"button_edit\" defaultMessage=\"Edit\" description=\"Call to action [Edit]\" />\n              </a>\n              <center>\n                <AvatarUpload\n                  tinode={this.props.tinode}\n                  avatar={this.state.avatar}\n                  readOnly={true}\n                  uid={this.props.topic}\n                  title={this.state.fullName} />\n              </center>\n              <div className=\"group\">\n                <div><label className=\"small\">\n                  <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                    description=\"Label for editing topic name\" />\n                </label></div>\n                <div className=\"large ellipsized\">{this.state.fullName}\n                {this.state.channel ? <img src=\"/img/channel.png\" className=\"channel\" alt=\"channel\" /> : null}</div>\n              </div>\n              {this.state.private ?\n                <div className=\"group\">\n                  <div><label className=\"small\">\n                    <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                      description=\"Label for editing 'private'\" />\n                  </label></div>\n                  <div className=\"large ellipsized\">{this.state.private}</div>\n                </div>\n                : null\n              }\n              <div className=\"group\">\n                <label className=\"small\"><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n                  description=\"Label for user address (ID)\" /></label>&nbsp;\n                <tt>{this.state.address}</tt>\n              </div>\n              <div className=\"group\">\n                <BadgeList trustedBadges={this.state.trustedBadges} />\n              </div>\n              {this.state.description ?\n                <div className=\"group\">\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                      description=\"Label for editing topic description\" />\n                  </label>\n                  <div>{this.state.description}</div>\n                </div> : null}\n            </div>\n            <div className=\"hr\" />\n            <div className=\"panel-form-row\">\n              <label>\n                <FormattedMessage id=\"label_muting_topic\" defaultMessage=\"Muted:\"\n                  description=\"Label for Muting/unmuting the topic\" />\n              </label>\n              <CheckBox name=\"P\" checked={this.state.muted} onChange={this.handleMuted} />\n            </div>\n            {this.state.archived ?\n              <div className=\"panel-form-row\">\n                <label>\n                  <FormattedMessage id=\"label_unarchive_topic\" defaultMessage=\"Archived:\"\n                    description=\"Label for unarchiving the topic\" />\n                </label>\n                <CheckBox name=\"archived\" checked={true} onChange={this.handleUnarchive} />\n              </div>\n              :\n              null\n            }\n            <div className=\"hr\" />\n            <div className=\"panel-form-row\">\n              <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('security');}}>\n                <i className=\"material-icons\">security</i>&nbsp;<FormattedMessage id=\"button_security\"\n                  defaultMessage=\"Security\" description=\"Navigaton button for security panel.\" />\n              </a>\n            </div>\n            {this.state.groupTopic && this.state.sharer ?\n              <>\n                <div className=\"hr\" />\n                <div className=\"panel-form-row\">\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_group_members\" defaultMessage=\"Group members:\"\n                      description=\"Section title or label\" />\n                  </label>\n                </div>\n                <div className=\"panel-form-row\">\n                  <a href=\"#\" className=\"flat-button\" onClick={this.handleShowAddMembers}>\n                    <i className=\"material-icons\">person_add</i> &nbsp;<FormattedMessage id=\"button_add_members\"\n                      defaultMessage=\"Add members\" description=\"Flat button [Add members] (to topic)\" />\n                  </a>\n                </div>\n                <FormattedMessage id=\"group_has_no_members\" defaultMessage=\"No members\"\n                  description=\"Shown in place of group members\">{\n                  (no_members) => <ContactList\n                    tinode={this.props.tinode}\n                    contacts={this.state.contactList}\n                    myUserId={this.props.myUserId}\n                    emptyListMessage={no_members}\n                    topicSelected={this.state.selectedContact}\n                    showOnline={false}\n                    showUnread={false}\n                    showMode={true}\n                    noScroll={true}\n                    onTopicSelected={this.handleMemberSelected}\n                    showContextMenu={this.state.admin ? this.handleContextMenu : false}\n                  />\n                }</FormattedMessage>\n              </>\n              :\n              null\n            }\n          </div>\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(InfoView);\n","// File uload/download progress indicator with a cancel inside.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class FileProgress extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"uploader\">\n        <div><span style={{width: (this.props.progress * 100) + \"%\"}}></span></div>\n        {this.props.progress < 0.999 ?\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n            <i className=\"material-icons\">close</i> <FormattedMessage id=\"action_cancel\"\n              defaultMessage=\"cancel\" description=\"Call to action [cancel]\" />\n          </a>\n          :\n          <FormattedMessage id=\"upload_finishing\" defaultMessage=\"finishing...\"\n            description=\"Notification that upload is finishing\" />\n        }\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\nimport { bytesToHumanSize } from '../lib/strformat.js';\nimport { isUrlRelative, sanitizeUrl } from '../lib/utils.js';\n\nexport default class Attachment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      downloader: null,\n      progress: 0\n    };\n\n    this.downloadFile = this.downloadFile.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  downloadFile(url, filename, mimetype) {\n    if (!url) {\n      this.props.onError(\"Invalid download URL '\" + url + \"'\");\n      return;\n    }\n\n    const downloader = this.props.tinode.getLargeFileHelper();\n    this.setState({downloader: downloader});\n    downloader.download(url, filename, mimetype,\n      (loaded) => {\n        this.setState({progress: loaded / this.props.size});\n      },\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    ).then(() => {\n      this.setState({downloader: null, progress: 0});\n    }).catch((err) => {\n      if (err) {\n        this.props.onError(\"Error downloading file: \" + err.message, 'err');\n      }\n      this.setState({downloader: null, progress: 0});\n    });\n  }\n\n  handleCancel() {\n    if (this.props.uploading) {\n      this.props.onCancelUpload();\n    } else if (this.state.downloader) {\n      this.state.downloader.cancel();\n    }\n  }\n\n  render() {\n    let filename = this.props.filename || 'file_attachment';\n    if (filename.length > 36) {\n      filename = filename.substr(0, 16) + '...' + filename.substr(-16);\n    }\n    let size = this.props.size > 0 ?\n      <span className=\"small gray\">({bytesToHumanSize(this.props.size)})</span> :\n      null;\n\n    // Detect if the download URL is relative or absolute.\n    // If the URL is relative use LargeFileHelper to attach authentication\n    // credentials to the request.\n    let url, helperFunc;\n    if (!this.props.uploading && !this.state.downloader && isUrlRelative(this.props.downloadUrl)) {\n      // Relative URL. Use download helper.\n      url = '#';\n      helperFunc = (e) => {\n        e.preventDefault();\n        this.downloadFile(this.props.downloadUrl, this.props.filename, this.props.mimetype);\n      };\n    } else {\n      url = sanitizeUrl(this.props.downloadUrl);\n      helperFunc = null;\n    }\n    const downloadWidget = <><i className=\"material-icons\">file_download</i> <FormattedMessage id=\"save_attachment\"\n      defaultMessage=\"save\" description=\"Call to save an attachment\" /></>;\n    return (\n      <div className=\"attachment\">\n        <div><i className=\"material-icons big gray\">insert_drive_file</i></div>\n        <div className=\"flex-column\">\n          <div>{filename} {size}</div>\n          {this.props.uploading || this.state.downloader ?\n            <FileProgress progress={this.props.uploading ? this.props.progress : this.state.progress}\n              onCancel={this.handleCancel} />\n            :\n            <div>{url ?\n              <a href={url} download={this.props.filename} onClick={helperFunc}>{downloadWidget}</a>\n              :\n              <span className=\"light-gray\">{downloadWidget}</span>\n            }</div>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n","// Image view with progress bar and a cancel button.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\n\nexport default class UploadingImage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"inline-image\">\n        {React.createElement('img', this.props)}\n        <div className=\"rounded-container\">\n          <FileProgress progress={this.props.progress} onCancel={this.props.onCancelUpload} />\n        </div>\n      </div>\n    );\n  }\n};\n","// Single message, sent or received.\nimport React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport Attachment from './attachment.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\nimport UploadingImage from './uploading-image.jsx'\n\nimport { sanitizeImageUrl, sanitizeUrl } from '../lib/utils.js';\n\nclass ChatMessage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      progress: 0\n    };\n\n    if (props.uploader) {\n      props.uploader.onProgress = this.handleProgress.bind(this);\n    }\n\n    this.handleImagePreview = this.handleImagePreview.bind(this);\n    this.handleFormButtonClick = this.handleFormButtonClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n\n    this.handleQuoteClick = this.handleQuoteClick.bind(this);\n  }\n\n  handleImagePreview(e) {\n    e.preventDefault();\n    this.props.onImagePreview({\n      url: e.target.src,\n      filename: e.target.title,\n      width: e.target.dataset.width,\n      height: e.target.dataset.height,\n      size: e.target.dataset.size,\n      type: e.target.dataset.mime\n    });\n  }\n\n  handleFormButtonClick(e) {\n    e.preventDefault();\n    const data = {\n      seq: this.props.seq\n    };\n    data.resp = {};\n    if (e.target.dataset.name) {\n      data.resp[e.target.dataset.name] = e.target.dataset.val ? e.target.dataset.val :\n        e.target.dataset.val === undefined ? 1 : '' + e.target.dataset.val;\n    }\n    if (e.target.dataset.act == 'url') {\n      data.ref = sanitizeUrl(e.target.dataset.ref) || 'about:blank';\n    }\n    const text = e.target.dataset.title || 'unknown';\n    this.props.onFormResponse(e.target.dataset.act, text, data);\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const menuItems = this.props.received == Tinode.MESSAGE_STATUS_FAILED ? ['menu_item_send_retry'] : [];\n    if (this.props.received >= Tinode.MESSAGE_STATUS_FAILED &&\n        this.props.received < Tinode.MESSAGE_STATUS_DEL_RANGE) {\n      menuItems.push('menu_item_reply');\n    }\n    this.props.showContextMenu({ seq: this.props.seq, content: this.props.content,\n                                 y: e.pageY, x: e.pageX, pickReply: this.props.pickReply }, menuItems);\n  }\n\n  handleProgress(ratio) {\n    this.setState({progress: ratio});\n  }\n\n  handleCancelUpload() {\n    this.props.onCancelUpload(this.props.seq, this.props.uploader);\n  }\n\n  handleQuoteClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const replyToSeq = this.props.replyToSeq;\n    this.props.onQuoteClick(replyToSeq);\n  }\n\n  render() {\n    const sideClass = this.props.deleted ? 'center' :\n      (this.props.sequence + ' ' + (this.props.response ? 'left' : 'right'));\n    const bubbleClass = (this.props.sequence == 'single' || this.props.sequence == 'last') ? 'bubble tip' : 'bubble';\n    const avatar = this.props.deleted ? null : (this.props.userAvatar || true);\n    const fullDisplay = (this.props.userFrom && this.props.response && !this.props.deleted &&\n      (this.props.sequence == 'single' || this.props.sequence == 'last'));\n\n    const msgId = 'msg-' + this.props.seq;\n    let content = this.props.content;\n    const attachments = [];\n    if (this.props.mimeType == Drafty.getContentType() && Drafty.isValid(content)) {\n      Drafty.attachments(content, function(att, i) {\n        if (att.mime == 'application/json') {\n          // Don't show json objects as attachments.\n          // They are not meant for users.\n          return;\n        }\n        attachments.push(<Attachment\n          tinode={this.props.tinode}\n          downloadUrl={Drafty.getDownloadUrl(att)}\n          filename={att.name}\n          uploading={Drafty.isProcessing(att)}\n          mimetype={att.mime}\n          size={Drafty.getEntitySize(att)}\n          progress={this.state.progress}\n          onCancelUpload={this.handleCancelUpload}\n          onError={this.props.onError}\n          key={i} />);\n      }, this);\n      const tree = Drafty.format(content, this.props.formatter, this);\n      content = React.createElement(React.Fragment, null, tree);\n    } else if (this.props.deleted) {\n      // Message represents a range of deleted messages.\n      content = <><i className=\"material-icons gray\">block</i> <i className=\"gray\">\n        <FormattedMessage id=\"deleted_content\"\n          defaultMessage=\"content deleted\" description=\"Shown when messages are deleted\" />\n      </i></>\n    } else if (typeof content != 'string') {\n      content = <>\n          <i className=\"material-icons gray\">error_outline</i> <i className=\"gray\">\n            <FormattedMessage id=\"invalid_content\"\n              defaultMessage=\"invalid content\" description=\"Shown when message is unreadable\" /></i>\n        </>\n    }\n\n    return (\n      <li id={msgId} className={sideClass}>\n        {this.props.userFrom && this.props.response ?\n          <div className=\"avatar-box\">\n            {fullDisplay ?\n              <LetterTile\n                tinode={this.props.tinode}\n                topic={this.props.userFrom}\n                title={this.props.userName}\n                avatar={avatar} /> :\n              null}\n          </div> :\n          null}\n        <div>\n          <div className={bubbleClass}>\n            <div className=\"content-meta\">\n              <div className=\"message-content\">\n                {content}\n                {attachments}\n              </div>\n              {this.props.timestamp ?\n                <ReceivedMarker\n                  timestamp={this.props.timestamp}\n                  received={this.props.received} />\n                : null}\n            </div>\n            {this.props.deleted || !this.props.showContextMenu ?\n              null :\n              <span className=\"menuTrigger\">\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">expand_more</i>\n                </a>\n              </span>\n            }\n          </div>\n          {fullDisplay ?\n            <div className=\"author\">\n              {this.props.userName ||\n                <i><FormattedMessage id=\"user_not_found\" defaultMessage=\"Not found\"\n                description=\"In place of a user's full name when the user is not found.\" /></i>\n              }\n            </div>\n            : null\n          }\n        </div>\n      </li>\n    );\n  }\n};\n\nexport default injectIntl(ChatMessage);\n","// Send message form.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport { KEYPRESS_DELAY } from '../config.js';\nimport { filePasted } from '../lib/blob-helpers.js';\n\nconst messages = defineMessages({\n  messaging_disabled: {\n    id: 'messaging_disabled_prompt',\n    defaultMessage: 'Messaging disabled',\n    description: 'Prompt in SendMessage in read-only topic'\n  },\n  type_new_message: {\n    id: 'new_message_prompt',\n    defaultMessage: 'New message',\n    description: 'Prompt in send message field'\n  },\n  add_image_caption: {\n    id: 'image_caption_prompt',\n    defaultMessage: 'Image caption',\n    description: 'Prompt in SendMessage for attached image'\n  },\n  file_attachment_too_large: {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  },\n  cannot_initiate_upload: {\n    id: 'cannot_initiate_file_upload',\n    defaultMessage: 'Cannot initiate file upload.',\n    description: 'Generic error messagewhen attachment fails'\n  },\n});\n\nclass SendMessage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      message: '',\n      // Make initial keypress time as if it happened 5001 milliseconds in the past.\n      keypressTimestamp: new Date().getTime() - KEYPRESS_DELAY - 1\n    };\n\n    this.handlePasteEvent = this.handlePasteEvent.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleSend = this.handleSend.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleMessageTyping = this.handleMessageTyping.bind(this);\n\n    this.handleQuoteClick = this.handleQuoteClick.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.addEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.removeEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.messageEditArea) {\n      this.messageEditArea.focus();\n    }\n  }\n\n  handlePasteEvent(e) {\n    if (this.props.disabled) {\n      return;\n    }\n    // FIXME: handle large files too.\n    if (filePasted(e,\n      (bits, mime, width, height, fname) => {\n        this.props.onAttachImage(mime, bits, width, height, fname);\n      },\n      (mime, bits, fname) => {\n        this.props.onAttachFile(mime, bits, fname);\n      },\n      this.props.onError)) {\n\n      // If a file was pasted, don't paste base64 data into input field.\n      e.preventDefault();\n    }\n  }\n\n  handleAttachImage(e) {\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachImage(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleAttachFile(e) {\n    const {formatMessage} = this.props.intl;\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachFile(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleSend(e) {\n    e.preventDefault();\n    const message = this.state.message.trim();\n    if (message || this.props.acceptBlank || this.props.noInput) {\n      this.props.onSendMessage(message);\n      this.setState({message: ''});\n    }\n  }\n\n  /* Send on Enter key */\n  handleKeyPress(e) {\n    // Remove this if you don't want Enter to trigger send\n    if (e.key === 'Enter') {\n      // Have Shift-Enter insert a line break instead\n      if (!e.shiftKey) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.handleSend(e);\n      }\n    }\n  }\n\n  handleMessageTyping(e) {\n    const newState = {message: e.target.value};\n    if (this.props.onKeyPress) {\n      const now = new Date().getTime();\n      if (now - this.state.keypressTimestamp > KEYPRESS_DELAY) {\n        this.props.onKeyPress();\n        newState.keypressTimestamp = now;\n      }\n    }\n    this.setState(newState);\n  }\n\n  handleQuoteClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.props.replyTo) {\n      const replyToSeq = this.props.replyTo.seq;\n      this.props.onQuoteClick(replyToSeq);\n    }\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const prompt = this.props.disabled ?\n      formatMessage(messages.messaging_disabled) :\n      (this.props.messagePrompt ?\n        formatMessage(messages[this.props.messagePrompt]) :\n        formatMessage(messages.type_new_message));\n\n    let quote = null;\n    if (this.props.replyTo) {\n      quote = Drafty.format(this.props.replyTo.content, this.props.onFormatQuote, this);\n    }\n\n    return (\n      <div id=\"send-message-wrapper\">\n      {quote ?\n        <div className=\"reply-quote-preview\">\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancelReply();}}><i className=\"material-icons gray\">close</i></a>\n          {quote}\n        </div>\n      :\n      null}\n\n      <div id=\"send-message-panel\">\n        {!this.props.disabled ?\n          <>\n            {this.props.onAttachFile ?\n              <>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachImage.click();}} title=\"Add image\">\n                  <i className=\"material-icons secondary\">photo</i>\n                </a>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachFile.click();}} title=\"Attach file\">\n                  <i className=\"material-icons secondary\">attach_file</i>\n                </a>\n              </>\n              :\n              null}\n            {this.props.noInput ?\n              <div className=\"hr thin\" /> :\n              <textarea id=\"sendMessage\" placeholder={prompt}\n                value={this.state.message} onChange={this.handleMessageTyping}\n                onKeyPress={this.handleKeyPress}\n                ref={(ref) => {this.messageEditArea = ref;}}\n                autoFocus />}\n            <a href=\"#\" onClick={this.handleSend} title=\"Send\">\n              <i className=\"material-icons\">send</i>\n            </a>\n            <input type=\"file\" ref={(ref) => {this.attachFile = ref;}}\n              onChange={this.handleAttachFile} style={{display: 'none'}} />\n            <input type=\"file\" ref={(ref) => {this.attachImage = ref;}} accept=\"image/*\"\n              onChange={this.handleAttachImage} style={{display: 'none'}} />\n          </>\n          :\n          <div id=\"writing-disabled\">{prompt}</div>\n        }\n      </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SendMessage);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { bytesToHumanSize } from '../lib/strformat.js';\n\n// Get material icon name from mime type.\nfunction iconFromMime(mime) {\n  // If more icons become available in material icons, add them to this mime-to-icon mapping.\n  const mimeToIcon = {default: 'insert_drive_file', image: 'image', text: 'description', video: 'theaters'};\n\n  return mimeToIcon[mime] || mimeToIcon[(mime || '').split('/')[0]] || mimeToIcon['default'];\n}\n\nexport default class DocPreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleSendDoc = this.handleSendDoc.bind(this);\n  }\n\n  handleSendDoc(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(this.props.content.file);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          <span>{this.props.content.filename}</span>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\">\n          <div className=\"flex-column narrow\">\n            <i className=\"material-icons gray\">{iconFromMime(this.props.content.type)}</i>\n            <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n              description=\"Label for file content type (mime)\" /></b> {this.props.content.type || 'application/octet-stream'}</div>\n            <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n              description=\"Label for file size\" /></b> {bytesToHumanSize(this.props.content.size)}</div>\n          </div>\n        </div>\n        <SendMessage\n          noInput={true}\n          tinode={this.props.tinode}\n          replyTo={this.props.replyTo}\n          formatter={this.props.onFormatQuote}\n          onCancelReply={this.props.onCancelReply}\n          onSendMessage={this.handleSendDoc}\n          onError={this.props.onError} />\n      </div>\n    );\n  }\n};\n","// GroupSubs: a list of group subscribers currently online.\n// Show in the topic title bar\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { MAX_ONLINE_IN_TOPIC } from '../config.js'\n\nimport LetterTile from './letter-tile.jsx';\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class GroupSubs extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const usersOnline = [];\n    const totalCount = (this.props.subscribers || []).length;\n    const countToShow = Math.min(MAX_ONLINE_IN_TOPIC, totalCount);\n\n    (this.props.subscribers || []).some((sub) => {\n      usersOnline.push(\n        <div className=\"avatar-box\" key={sub.user}>\n          <LetterTile\n            tinode={this.props.tinode}\n            topic={sub.user}\n            avatar={makeImageUrl(sub.public ? sub.public.photo : null) || true}\n            title={sub.public ? sub.public.fn : null} />\n        </div>\n      );\n      return usersOnline.length == countToShow;\n    });\n\n    return (\n      <div id=\"topic-users\">{usersOnline} {totalCount > countToShow ?\n        <span>\n          <FormattedMessage id=\"more_online_members\" defaultMessage=\"+{overflow} more\"\n              description=\"Shown in MessagesView title bar when the number of online subscribers exceeds MAX_ONLINE_IN_TOPIC\"\n              values={{ overflow: (totalCount - countToShow) }} />\n        </span> : null}\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\nimport { bytesToHumanSize } from '../lib/strformat.js';\n\nexport default class ImagePreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      width: 0,\n      height: 0\n    };\n\n    this.handleSendImage = this.handleSendImage.bind(this);\n  }\n\n  assignWidth(node) {\n    if (node && !this.state.width) {\n      const bounds = node.getBoundingClientRect();\n      this.setState({\n        width: bounds.width | 0,\n        height: bounds.height | 0\n      });\n    }\n  }\n\n  handleSendImage(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(caption, this.props.content.blob);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n\n    const dim = fitImageSize(this.props.content.width, this.props.content.height,\n      this.state.width, this.state.height, false);\n    const size = dim ? { width: dim.dstWidth + 'px', height: dim.dstHeight + 'px' } :\n      ((this.props.content.width > this.props.content.height) ? {width: '100%'} : {height: '100%'});\n    size.maxWidth = '100%';\n    size.maxHeight = '100%';\n\n    let filename = this.props.content.filename;\n    // Average font aspect ratio is ~0.5; File name takes 1/3 of the viewport width.\n    const maxlength = Math.max(((this.state.width / REM_SIZE / 1.5) | 0) - 2, 12);\n    if (filename.length > maxlength) {\n      filename = filename.slice(0, maxlength/2 - 1) + '…' + filename.slice(1 - maxlength/2);\n    }\n    const width = this.props.content.width || '-';\n    const height = this.props.content.height || '-';\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          {!this.props.onSendMessage ?\n            <a href={this.props.content.url} download={this.props.content.filename}>\n              <i className=\"material-icons\">file_download</i> <FormattedMessage\n                id=\"download_action\" defaultMessage=\"download\" description=\"Call to action [download]\" />\n            </a>\n            :\n            <span>{this.props.content.filename}</span>\n          }\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\" ref={(node) => this.assignWidth(node)}>\n          <img src={this.props.content.url} style={size} className=\"image-preview\" alt={this.props.content.filename} />\n        </div>\n        {this.props.onSendMessage ?\n          <SendMessage\n            messagePrompt=\"add_image_caption\"\n            acceptBlank={true}\n            tinode={this.props.tinode}\n            replyTo={this.props.replyTo}\n            formatter={this.props.onFormatQuote}\n            onCancelReply={this.props.onCancelReply}\n            onSendMessage={this.handleSendImage}\n            onError={this.props.onError} />\n          :\n          <div id=\"image-preview-footer\">\n            <div>\n              <div><b><FormattedMessage id=\"label_file_name\" defaultMessage=\"File name:\"\n                description=\"Label for a file name\" /></b></div>\n              <div><span title={this.props.content.filename}>{filename ? filename : '-'}</span></div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n                description=\"Label for file content type (mime)\" /></b></div>\n              <div>{this.props.content.type}</div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n                description=\"Label for file size\" /></b></div>\n              <div>{width} &times; {height} px; {bytesToHumanSize(this.props.content.size)}</div>\n            </div>\n          </div>}\n      </div>\n    );\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Invitation extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleButtonAction = this.handleButtonAction.bind(this);\n  }\n\n  handleButtonAction(evt, data) {\n    evt.preventDefault();\n    this.props.onAction(data);\n  }\n\n  render() {\n    return (\n      <div className=\"accept-invite-panel\">\n        <div className=\"title\">\n          <FormattedMessage id=\"chat_invitation\"\n            defaultMessage=\"You are invited to start a new chat. What would you like to do?\"\n            description=\"New chat invitation message: [Accept] [Ignore] [Block].\" />\n        </div>\n        <div className=\"footer\">\n          <button className=\"primary\" onClick={event => { this.handleButtonAction(event, \"accept\"); }}>\n            <FormattedMessage id=\"chat_invitation_accept\"\n              defaultMessage=\"Accept\" description=\"Action [Accept] for chat invitation.\" />\n          </button>\n          <button className=\"secondary\" onClick={event => { this.handleButtonAction(event, \"delete\"); }}>\n            <FormattedMessage id=\"chat_invitation_ignore\"\n              defaultMessage=\"Ignore\" description=\"Action [Ignore] for chat invitation.\" />\n          </button>\n          <button className=\"secondary\" onClick={event => { this.handleButtonAction(event, \"block\"); }}>\n            <FormattedMessage id=\"chat_invitation_block\"\n              defaultMessage=\"Block\" description=\"Action [Block] for chat invitation.\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n","/* This is just a static page to display when no conversation is selected. */\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME } from '../config.js';\n\nexport default class LogoView extends React.PureComponent {\n  render() {\n    const version = APP_NAME + ' (' + Tinode.getLibrary() + ')';\n    return (\n      <div id=\"dummy-view\">\n        <div>\n          <a href=\"https://github.com/tinode/chat/\">\n            <img id=\"logo\" alt=\"logo\" src=\"img/logo.svg\" />\n            <h2>Tinode Web</h2>\n          </a>\n          <p><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\"\n            description=\"Label for a client version\" /> {version}</p>\n          <p><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\"\n            description=\"Label for a server version\" /> {this.props.serverVersion} ({this.props.serverAddress})</p>\n        </div>\n      </div>\n    );\n  }\n};\n","// Utility class for hash navigation.\n\n// Parse hash as in http://www.example.com/path#hash as if it were\n// path and arguments.\nexport default class HashNavigation {\n  static parseUrlHash(hash) {\n    // Split path from args, path -> parts[0], args->path[1]\n    const parts = hash.split('?', 2);\n    const params = {};\n    let path = [];\n    if (parts[0]) {\n      path = parts[0].replace('#', '').split('/');\n    }\n    if (parts[1]) {\n      parts[1].split('&').forEach(function(part) {\n        const item = part.split('=');\n        if (item[0]) {\n          params[decodeURIComponent(item[0])] = decodeURIComponent(item[1]);\n        }\n      });\n    }\n    return {path: path, params: params};\n  }\n\n  static navigateTo(url) {\n    window.location.hash = url;\n  }\n\n  static composeUrlHash(path, params) {\n    let url = path.join('/');\n    const args = [];\n    for (const key in params) {\n      if (params.hasOwnProperty(key)) {\n        args.push(key + '=' + params[key]);\n      }\n    }\n    if (args.length > 0) {\n      url += '?' + args.join('&');\n    }\n    return url;\n  }\n\n  static addUrlParam(hash, key, value) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.params[key] = value;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static removeUrlParam(hash, key) {\n    const parsed = this.parseUrlHash(hash);\n    delete parsed.params[key];\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlSidePanel(hash, sidepanel) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[0] = sidepanel;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlInfoPanel(hash, infopanel) {\n    const parsed = this.parseUrlHash(hash);\n    if (infopanel) {\n      parsed.params.info = infopanel;\n    } else {\n      delete parsed.params.info;\n    }\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlTopic(hash, topic) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[1] = topic;\n    // Close InfoView on topic change.\n    delete parsed.params.info;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n}\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\nconst Drafty = Tinode.Drafty;\n\nimport ChatMessage from '../widgets/chat-message.jsx';\nimport ContactBadges from '../widgets/contact-badges.jsx';\nimport DocPreview from '../widgets/doc-preview.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupSubs from '../widgets/group-subs.jsx';\nimport ImagePreview from '../widgets/image-preview.jsx';\nimport Invitation from '../widgets/invitation.jsx';\nimport LetterTile from '../widgets/letter-tile.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport LogoView from './logo-view.jsx';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { DEFAULT_P2P_ACCESS_MODE, IMAGE_PREVIEW_DIM, KEYPRESS_DELAY, MESSAGES_PAGE,\n  MAX_EXTERN_ATTACHMENT_SIZE, MAX_IMAGE_DIM, MAX_INBAND_ATTACHMENT_SIZE, READ_DELAY,\n  IMAGE_THUMBNAIL_DIM, BROKEN_IMAGE_SIZE, REM_SIZE } from '../config.js';\nimport { SUPPORTED_IMAGE_FORMATS, blobToBase64, base64ToBlob, filePasted, fileToBase64,\n  imageScaled, makeImageUrl, fitImageSize } from '../lib/blob-helpers.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { bytesToHumanSize, shortDateFormat } from '../lib/strformat.js';\nimport { sanitizeImageUrl, letterTileColor } from '../lib/utils.js';\n\n// Run timer with this frequency (ms) for checking notification queue.\nconst NOTIFICATION_EXEC_INTERVAL = 300;\n\nconst messages = defineMessages({\n  online_now: {\n    id: 'online_now',\n    defaultMessage: 'online now',\n    description: 'Indicator that the user or topic is currently online',\n  },\n  last_seen: {\n    id: 'last_seen_timestamp',\n    defaultMessage: 'Last seen',\n    description: 'Label for the timestamp of when the user or topic was last online'\n  },\n  not_found: {\n    id: 'title_not_found',\n    defaultMessage: 'Not found',\n    description: 'Title shown when topic is not found'\n  },\n  channel: {\n    id: 'channel',\n    defaultMessage: 'channel',\n    description: 'Subtitle shown for channels in MessagesView instead of last seen'\n  },\n  file_attachment_too_large: {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  },\n\n  drafty_form: {\n    id: 'drafty_form',\n    defaultMessage: 'Form: ',\n    description: 'Comment for form in drafty preview'\n  },\n  drafty_attachment: {\n    id: 'drafty_attachment',\n    defaultMessage: 'Attachment',\n    description: 'Comment for attachment in drafty preview'\n  },\n});\n\n// Checks if the access permissions are granted but not yet accepted.\nfunction isUnconfirmed(acs) {\n  if (acs) {\n    const ex = acs.getExcessive() || '';\n    return acs.isJoiner('given') && (ex.includes('R') || ex.includes('W'));\n  }\n  return false;\n}\n\nfunction isPeerRestricted(acs) {\n  if (acs) {\n    const ms = acs.getMissing() || '';\n    return acs.isJoiner('want') && (ms.includes('R') || ms.includes('W'));\n  }\n  return false;\n}\n\nclass MessagesView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = MessagesView.getDerivedStateFromProps(props, {});\n\n    this.leave = this.leave.bind(this);\n    this.sendMessage = this.sendMessage.bind(this);\n    this.sendImageAttachment = this.sendImageAttachment.bind(this);\n    this.sendFileAttachment = this.sendFileAttachment.bind(this);\n    this.sendKeyPress = this.sendKeyPress.bind(this);\n    this.subscribe = this.subscribe.bind(this);\n    this.handleScrollReference = this.handleScrollReference.bind(this);\n    this.handleScrollEvent = this.handleScrollEvent.bind(this);\n    this.handleDescChange = this.handleDescChange.bind(this);\n    this.handleSubsUpdated = this.handleSubsUpdated.bind(this);\n    this.handleMessageUpdate = this.handleMessageUpdate.bind(this);\n    this.handleAllMessagesReceived = this.handleAllMessagesReceived.bind(this);\n    this.handleInfoReceipt = this.handleInfoReceipt.bind(this);\n    this.handleImagePostview = this.handleImagePostview.bind(this);\n    this.handleClosePreview = this.handleClosePreview.bind(this);\n    this.handleFormResponse = this.handleFormResponse.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleShowContextMenuMessage = this.handleShowContextMenuMessage.bind(this);\n    this.handleNewChatAcceptance = this.handleNewChatAcceptance.bind(this);\n    this.handleEnablePeer = this.handleEnablePeer.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n    this.postReadNotification = this.postReadNotification.bind(this);\n    this.clearNotificationQueue = this.clearNotificationQueue.bind(this);\n\n    this.handlePickReply = this.handlePickReply.bind(this);\n    this.handleCancelReply = this.handleCancelReply.bind(this);\n    this.handleQuoteClick = this.handleQuoteClick.bind(this);\n    this.convertIntoThumbnails = this.convertIntoThumbnails.bind(this);\n\n    this.readNotificationQueue = [];\n    this.readNotificationTimer = null;\n  }\n\n  componentDidMount() {\n    // this.propsChange(this.props, this.state);\n    if (this.messagesScroller) {\n      this.messagesScroller.addEventListener('scroll', this.handleScrollEvent);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messagesScroller) {\n      this.messagesScroller.removeEventListener('scroll', this.handleScrollEvent);\n    }\n\n    // Flush all notifications.\n    this.clearNotificationQueue();\n  }\n\n  // Scroll last message into view on component update e.g. on message received\n  // or vertical shrinking.\n  componentDidUpdate(prevProps, prevState) {\n    if (this.messagesScroller) {\n      if (prevState.topic != this.state.topic || prevState.messageCount != this.state.messageCount) {\n        // New message\n        this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n      } else if (prevProps.viewportHeight > this.props.viewportHeight) {\n        // Componet changed height.\n        this.messagesScroller.scrollTop += prevProps.viewportHeight - this.props.viewportHeight;\n      }\n    }\n\n    const topic = this.props.tinode ? this.props.tinode.getTopic(this.state.topic) : undefined;\n    if (this.state.topic != prevState.topic) {\n      if (prevState.topic && !Tinode.isNewGroupTopicName(prevState.topic)) {\n        this.leave(prevState.topic);\n      }\n\n      if (topic) {\n        topic.onData = this.handleMessageUpdate;\n        topic.onAllMessagesReceived = this.handleAllMessagesReceived;\n        topic.onInfo = this.handleInfoReceipt;\n        topic.onMetaDesc = this.handleDescChange;\n        topic.onSubsUpdated = this.handleSubsUpdated;\n        topic.onPres = this.handleSubsUpdated;\n      }\n    }\n\n    if (!this.props.applicationVisible) {\n      // If application is not visible, flush all unsent 'read' notifications.\n      this.clearNotificationQueue();\n    } else {\n      // Otherwise assume there are unread messages.\n      this.postReadNotification(0);\n    }\n\n    if ((this.state.topic != prevState.topic) || !prevProps.ready) {\n      this.subscribe(topic);\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let nextState = {};\n    if (!nextProps.topic) {\n      // Default state: no topic.\n      nextState = {\n        messageCount: 0,\n        latestClearId: -1,\n        onlineSubs: [],\n        topic: null,\n        title: '',\n        avatar: null,\n        isVerified: false,\n        isStaff: false,\n        isDangerous: false,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false,\n        peerMessagingDisabled: false,\n        channel: false,\n        reply: null\n      };\n    } else if (nextProps.topic != prevState.topic) {\n      const topic = nextProps.tinode.getTopic(nextProps.topic);\n      nextState = {\n        topic: nextProps.topic,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false,\n        reply: null\n      };\n\n      if (topic) {\n        // Topic exists.\n        const subs = [];\n\n        if (nextProps.connected) {\n          topic.subscribers((sub) => {\n            if (sub.online && sub.user != nextProps.myUserId) {\n              subs.push(sub);\n            }\n          });\n        }\n\n        Object.assign(nextState, {\n          onlineSubs: subs\n        });\n\n        if (topic.public) {\n          Object.assign(nextState, {\n            title: topic.public.fn,\n            avatar: makeImageUrl(topic.public.photo)\n          });\n        } else {\n          Object.assign(nextState, {\n            title: '',\n            avatar: null\n          });\n        }\n\n        const peer = topic.p2pPeerDesc();\n        if (peer) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: isPeerRestricted(peer.acs)\n          });\n        } else if (prevState.peerMessagingDisabled) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: false\n          });\n        }\n        Object.assign(nextState, {\n          messageCount: topic.messageCount(),\n          latestClearId: topic.maxClearId(),\n          channel: topic.isChannelType()\n        });\n      } else {\n        // Invalid topic.\n        Object.assign(nextState, {\n          messageCount: 0,\n          latestClearId: -1,\n          onlineSubs: [],\n          title: '',\n          avatar: null,\n          peerMessagingDisabled: false,\n          channel: false\n        });\n      }\n    }\n\n    if (nextProps.acs) {\n      if (nextProps.acs.isWriter() != prevState.isWriter) {\n        nextState.isWriter = !prevState.isWriter;\n      }\n      if (nextProps.acs.isReader() != prevState.isReader) {\n        nextState.isReader = !prevState.isReader;\n      }\n      if (!nextProps.acs.isReader('given') != prevState.readingBlocked) {\n        nextState.readingBlocked = !prevState.readingBlocked;\n      }\n      if (nextProps.acs.isSharer() != prevState.isSharer) {\n        nextState.isSharer = !prevState.isSharer;\n      }\n    } else {\n      if (prevState.isWriter) {\n        nextState.isWriter = false;\n      }\n      if (prevState.isReader) {\n        nextState.isReader = false;\n      }\n      if (!prevState.readingBlocked) {\n        prevState.readingBlocked = true;\n      }\n      if (prevState.isSharer) {\n        nextState.isSharer = false;\n      }\n    }\n\n    if (isUnconfirmed(nextProps.acs) == !prevState.unconformed) {\n      nextState.unconfirmed = !prevState.unconformed;\n    }\n\n    // Clear subscribers online when there is no connection.\n    if (!nextProps.connected && prevState.onlineSubs && prevState.onlineSubs.length > 0) {\n      nextState.onlineSubs = [];\n    }\n\n    return nextState;\n  }\n\n  subscribe(topic) {\n    if (!topic || topic.isSubscribed() || !this.props.ready) {\n      return;\n    }\n\n    // Is this a new topic?\n    const newTopic = (this.props.newTopicParams && this.props.newTopicParams._topicName == this.props.topic);\n\n    // Don't request the tags. They are useless unless the user\n    // is the owner and is editing the topic.\n    let getQuery = topic.startMetaQuery().withLaterDesc().withLaterSub();\n    if (this.state.isReader || newTopic) {\n      // Reading is either permitted or we don't know because it's a new topic. Ask for messages.\n      getQuery = getQuery.withLaterData(MESSAGES_PAGE);\n      if (this.state.isReader) {\n        getQuery = getQuery.withLaterDel();\n      }\n      // And show \"loading\" spinner.\n      this.setState({ fetchingMessages: true });\n    }\n\n    const setQuery = newTopic ? this.props.newTopicParams : undefined;\n    topic.subscribe(getQuery.build(), setQuery)\n      .then((ctrl) => {\n        if (ctrl.code == 303) {\n          // Redirect to another topic requested.\n          HashNavigation.navigateTo(HashNavigation.setUrlTopic('', ctrl.params.topic));\n          return;\n        }\n        if (this.state.topic != ctrl.topic) {\n          this.setState({topic: ctrl.topic});\n        }\n        this.props.onNewTopicCreated(this.props.topic, ctrl.topic);\n        // If there are unsent messages, try sending them now.\n        topic.queuedMessages((pub) => {\n          if (!pub._sending && topic.isSubscribed()) {\n            this.sendMessage(pub);\n          }\n        });\n      })\n      .catch((err) => {\n        console.log(\"Failed subscription to\", this.state.topic);\n        this.props.onError(err.message, 'err');\n        const blankState = MessagesView.getDerivedStateFromProps({}, {});\n        blankState.title = this.props.intl.formatMessage(messages.not_found);\n        this.setState(blankState);\n      });\n  }\n\n  leave(oldTopicName) {\n    if (!oldTopicName || !this.props.tinode.isTopicCached(oldTopicName)) {\n      return;\n    }\n    const oldTopic = this.props.tinode.getTopic(oldTopicName);\n    if (oldTopic && oldTopic.isSubscribed()) {\n      oldTopic.leave(false)\n        .catch(() => { /* do nothing here */ })\n        .finally(() => {\n          // We don't care if the request succeeded or failed.\n          // The topic is dead regardless.\n          this.setState({fetchingMessages: false});\n          oldTopic.onData = undefined;\n          oldTopic.onAllMessagesReceived = undefined;\n          oldTopic.onInfo = undefined;\n          oldTopic.onMetaDesc = undefined;\n          oldTopic.onSubsUpdated = undefined;\n          oldTopic.onPres = undefined;\n        });\n    }\n  }\n\n  handleScrollReference(node) {\n    if (node) {\n      node.addEventListener('scroll', this.handleScrollEvent);\n      this.messagesScroller = node;\n      this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n    }\n  }\n\n  // Get older messages\n  handleScrollEvent(event) {\n    this.setState({scrollPosition: event.target.scrollHeight - event.target.scrollTop});\n    if (this.state.fetchingMessages) {\n      return;\n    }\n\n    if (event.target.scrollTop <= 0) {\n      const topic = this.props.tinode.getTopic(this.state.topic);\n      if (topic && topic.isSubscribed() && topic.msgHasMoreMessages()) {\n        this.setState({fetchingMessages: true}, () => {\n          topic.getMessagesPage(MESSAGES_PAGE)\n            .catch((err) => this.props.onError(err.message, 'err'))\n            .finally(() => this.setState({fetchingMessages: false}));\n          });\n      }\n    }\n  }\n\n  handleDescChange(desc) {\n    if (desc.public) {\n      this.setState({\n        title: desc.public.fn,\n        avatar: makeImageUrl(desc.public.photo)\n      });\n    } else {\n      this.setState({\n        title: '',\n        avatar: null\n      });\n    }\n\n    if (desc.acs) {\n      this.setState({\n        isWriter: desc.acs.isWriter(),\n        isReader: desc.acs.isReader(),\n        readingBlocked: !desc.acs.isReader('given'),\n        unconfirmed: isUnconfirmed(desc.acs),\n      });\n    }\n  }\n\n  postReadNotification(seq) {\n    // Ignore notifications if the app is invisible.\n    if (!this.props.applicationVisible) {\n      return;\n    }\n\n    // Set up the timer if it's not running already.\n    if (!this.readNotificationTimer) {\n      this.readNotificationTimer = setInterval(() => {\n        if (this.readNotificationQueue.length == 0) {\n          // Shut down the timer if the queue is empty.\n          clearInterval(this.readNotificationTimer);\n          this.readNotificationTimer = null;\n          return;\n        }\n\n        let seq = -1;\n        while (this.readNotificationQueue.length > 0) {\n          const n = this.readNotificationQueue[0];\n          if (n.topicName != this.state.topic) {\n            // Topic has changed. Drop the notification.\n            this.readNotificationQueue.shift();\n            continue;\n          }\n\n          const now = new Date();\n          if (n.sendAt <= now) {\n            // Remove expired notification from queue.\n            this.readNotificationQueue.shift();\n            seq = Math.max(seq, n.seq);\n          } else {\n            break;\n          }\n        }\n\n        // Send only one notification for the whole batch of messages.\n        if (seq >= 0) {\n          const topic = this.props.tinode.getTopic(this.state.topic);\n          if (topic) {\n            topic.noteRead(seq);\n          }\n        }\n      }, NOTIFICATION_EXEC_INTERVAL);\n    }\n\n    const now = new Date();\n    this.readNotificationQueue.push({\n      topicName: this.state.topic,\n      seq: seq,\n      sendAt: now.setMilliseconds(now.getMilliseconds() + READ_DELAY)\n    });\n  }\n\n  // Clear notification queue and timer.\n  clearNotificationQueue() {\n    this.readNotificationQueue = [];\n    if (this.readNotificationTimer) {\n      clearInterval(this.readNotificationTimer);\n      this.readNotificationTimer = null;\n    }\n  }\n\n  handleSubsUpdated() {\n    if (this.state.topic) {\n      const subs = [];\n      const topic = this.props.tinode.getTopic(this.state.topic);\n      topic.subscribers((sub) => {\n        if (sub.online && sub.user != this.props.myUserId) {\n          subs.push(sub);\n        }\n      });\n      const newState = {onlineSubs: subs};\n      const peer = topic.p2pPeerDesc();\n      if (peer) {\n        Object.assign(newState, {\n          peerMessagingDisabled: isPeerRestricted(peer.acs)\n        });\n      } else if (this.state.peerMessagingDisabled) {\n        Object.assign(newState, {\n          peerMessagingDisabled: false\n        });\n      }\n      this.setState(newState);\n    }\n  }\n\n  // The 'msg' could be false-ish if some message ranges were deleted.\n  handleMessageUpdate(msg) {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (!msg) {\n      // msg could be null if one or more messages were deleted.\n      // Updating state to force redraw.\n      this.setState({latestClearId: topic.maxClearId()});\n      return;\n    }\n\n    clearTimeout(this.keyPressTimer)\n    this.setState({messageCount: topic.messageCount(), typingIndicator: false});\n\n    // Scroll to the bottom if the message is added to the end of the message list.\n    // TODO: This should be replaced by showing a \"scroll to bottom\" button.\n    if (topic.isNewMessage(msg.seq)) {\n      this.setState({scrollPosition: 0});\n    }\n\n    // Aknowledge messages except own messages. They are\n    // automatically assumed to be read and recived.\n    const status = topic.msgStatus(msg, true);\n    if (status >= Tinode.MESSAGE_STATUS_SENT && msg.from != this.props.myUserId) {\n      this.postReadNotification(msg.seq);\n    }\n    // This will send \"received\" notifications right away.\n    this.props.onData(msg);\n  }\n\n  handleAllMessagesReceived(count) {\n    this.setState({fetchingMessages: false});\n    if (count > 0) {\n      // 0 means \"latest\".\n      this.postReadNotification(0);\n    }\n  }\n\n  handleInfoReceipt(info) {\n    switch (info.what) {\n      case 'kp': {\n        clearTimeout(this.keyPressTimer);\n        this.keyPressTimer = setTimeout(() => {\n          this.setState({typingIndicator: false});\n        }, KEYPRESS_DELAY + 1000);\n        if (!this.state.typingIndicator) {\n          this.setState({typingIndicator: true});\n        }\n        break;\n      }\n      case 'read':\n      case 'recv':\n        // Redraw due to changed recv/read status.\n        this.forceUpdate();\n        break;\n      default:\n        console.log(\"Other change in topic: \", info.what);\n    }\n  }\n\n  handleImagePostview(content) {\n    this.setState({ imagePostview: content });\n  }\n\n  handleClosePreview() {\n    if (this.state.imagePreview && this.state.imagePreview.url) {\n      URL.revokeObjectURL(this.state.imagePreview.url);\n    }\n    this.setState({ imagePostview: null, imagePreview: null, docPreview: null });\n  }\n\n  handleFormResponse(action, text, data) {\n    if (action == 'pub') {\n      this.sendMessage(Drafty.attachJSON(Drafty.parse(text), data));\n    } else if (action == 'url') {\n      const url = new URL(data.ref);\n      const params = url.searchParams;\n      for (let key in data.resp) {\n        if (data.resp.hasOwnProperty(key)) {\n          params.set(key, data.resp[key]);\n        }\n      }\n      ['name', 'seq'].map((key) => {\n        if (data[key]) {\n          params.set(key, data[key]);\n        }\n      });\n      params.set('uid', this.props.myUserId);\n      params.set('topic', this.state.topic);\n      url.search = params;\n      window.open(url, '_blank');\n    } else {\n      console.log(\"Unknown action in form\", action);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.state.topic, y: e.pageY, x: e.pageX });\n  }\n\n  handleShowContextMenuMessage(params, messageSpecificMenuItems) {\n    params.topicName = this.state.topic;\n    const menuItems = messageSpecificMenuItems || [];\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (topic) {\n      if (!topic.isChannelType()) {\n        menuItems.push('message_delete');\n      }\n      const acs = topic.getAccessMode();\n      if (acs && acs.isDeleter()) {\n        menuItems.push('message_delete_hard');\n      }\n    }\n    this.props.showContextMenu(params, menuItems);\n  }\n\n  handleNewChatAcceptance(action) {\n    this.props.onNewChat(this.state.topic, action);\n  }\n\n  handleEnablePeer(e) {\n    e.preventDefault();\n    this.props.onChangePermissions(this.state.topic, DEFAULT_P2P_ACCESS_MODE, this.state.topic);\n  }\n\n  sendKeyPress() {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (topic.isSubscribed()) {\n      topic.noteKeyPress();\n    }\n  }\n\n  // sendMessage sends the message with an optional subscription to topic first.\n  sendMessage(msg, uploadCompletionPromise, uploader) {\n    let head;\n    if (this.state.reply && this.state.reply.content) {\n      head = {replyToSeq: this.state.reply.seq};\n      // Turn it into Drafty so we can make a quoted Drafty object later.\n      if (typeof msg == 'string') {\n        msg = Drafty.parse(msg);\n      }\n      msg = Drafty.attachQuote(msg, this.state.reply.content);\n      this.setState({reply: null});\n    }\n    this.props.sendMessage(msg, uploadCompletionPromise, uploader, head);\n  }\n\n  // Send attachment as Drafty message:\n  // - if file is too large, upload it and send a s link.\n  // - if file is small enough, just send it in-band.\n  sendFileAttachment(file) {\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (file.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      const uploadCompletionPromise = uploader.upload(file);\n      const msg = Drafty.attachFile(null, {\n        mime: file.type,\n        filename: file.name,\n        size: file.size,\n        urlPromise: uploadCompletionPromise\n      });\n      // Pass data and the uploader to the TinodeWeb.\n      this.sendMessage(msg, uploadCompletionPromise, uploader);\n    } else {\n      // Small enough to send inband.\n      fileToBase64(file,\n        (mime, bits, fname) => {\n          this.sendMessage(Drafty.attachFile(null, {mime: mime, data: bits, filename: fname}));\n        },\n        this.props.onError\n      );\n    }\n  }\n\n  // handleAttachFile method is called when [Attach file] button is clicked.\n  handleAttachFile(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    if (file.size > maxExternAttachmentSize) {\n      // Too large.\n      this.props.onError(this.props.intl.formatMessage(messages.file_attachment_too_large,\n        {size: bytesToHumanSize(file.size), limit: bytesToHumanSize(maxExternAttachmentSize)}), 'err');\n    } else {\n      this.setState({ docPreview: {\n        file: file,\n        filename: file.name,\n        size: file.size,\n        type: file.type\n      }});\n    }\n  }\n\n  // sendImageAttachment sends the image bits inband as Drafty message.\n  sendImageAttachment(caption, blob) {\n    const mime = this.state.imagePreview.type;\n    const width = this.state.imagePreview.width;\n    const height = this.state.imagePreview.height;\n    const fname = this.state.imagePreview.filename;\n\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (blob.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      if (!uploader) {\n        this.props.onError(this.props.intl.formatMessage(messages.cannot_initiate_upload));\n        return;\n      }\n      const uploadCompletionPromise = uploader.upload(blob);\n\n      // Make small preview to show while uploading.\n      imageScaled(blob, IMAGE_PREVIEW_DIM, IMAGE_PREVIEW_DIM, -1, false,\n        (tinyMine, tinyBlob) => {\n          // Convert tiny image into base64 for serialization and previewing.\n          blobToBase64(tinyBlob, (blobMime, tinyBits64) => {\n            let msg = Drafty.insertImage(null, 0, {\n              mime: mime,\n              _tempPreview: tinyBits64, // This preview will not be serialized.\n              width: width,\n              height: height,\n              filename: fname,\n              size: blob.size,\n              urlPromise: uploadCompletionPromise\n            });\n            if (caption) {\n              msg = Drafty.appendLineBreak(msg);\n              msg = Drafty.append(msg, Drafty.parse(caption));\n            }\n            // Pass data and the uploader to the TinodeWeb.\n            this.sendMessage(msg, uploadCompletionPromise, uploader);\n          }\n        )},\n        // Failure\n        (err) => {\n          this.props.onError(err, 'err');\n        }\n      );\n      return;\n    }\n\n    // Upload the image if it's too big to be send inband.\n    blobToBase64(blob, (blobMime, bits64) => {\n      let msg = Drafty.insertImage(null, 0, {\n        mime: blobMime,\n        preview: bits64, // Serializable preview\n        width: width,\n        height: height,\n        filename: fname,\n        size: blob.size\n      });\n      if (caption) {\n        msg = Drafty.appendLineBreak(msg);\n        msg = Drafty.append(msg, Drafty.parse(caption));\n      }\n      this.sendMessage(msg);\n    });\n  }\n\n  // handleAttachImage method is called when [Attach image] button is clicked.\n  handleAttachImage(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    // Get image dimensions and size, optionally scale it down.\n    imageScaled(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, maxExternAttachmentSize, false,\n      // Success\n      (mime, blob, width, height, fname) => {\n        this.setState({imagePreview: {\n          url: URL.createObjectURL(blob),\n          blob: blob,\n          filename: fname,\n          width: width,\n          height: height,\n          size: blob.size,\n          type: mime\n        }});\n      },\n      // Failure\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    );\n  }\n\n  handleCancelUpload(seq, uploader) {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    const found = topic.findMessage(seq);\n    if (found) {\n      found._cancelled = true;\n    }\n    uploader.cancel();\n  }\n\n  handlePickReply(m) {\n    this.setState({reply: null});\n    if (m) {\n      let cont = m.content\n      if (cont) {\n        if (typeof cont == 'string') {\n          cont = Drafty.init(cont);\n        }\n        cont = Drafty.replyPreview(cont, 30, quotePreviewFmt);\n\n        // Get the author.\n        let header = '';\n        const seq = m.seq;\n        const topic = this.props.tinode.getTopic(this.state.topic);\n        const m0 = topic.findMessage(seq);\n        let thisFrom;\n        if (m0) {\n          thisFrom = m0.from || 'chan';\n          if (thisFrom != this.props.myUserId) {\n            const topic = this.props.tinode.getTopic(this.state.topic);\n            const user = topic.userDesc(thisFrom);\n            if (user && user.public) {\n              header = user.public.fn;\n            }\n          } else {\n            header = this.props.myUserName;\n          }\n        }\n\n        header = Drafty.init(header);\n        // Make small image previews.\n        const ents = [];\n        if (cont.ent) {\n          Drafty.entities(cont, (data, idx, tp) => {\n            if (tp == 'IM') {\n              ents.push({\n                tp: tp,\n                data: data\n              });\n            }\n\n          }, this);\n        }\n        this.convertIntoThumbnails(ents, 0, (success) => {\n          if (success) {\n            const msg = Drafty.createQuote(header, cont, letterTileColor(thisFrom));\n            this.setState({reply: {content: msg, seq: m.seq}});\n          }\n        });\n\n        return;\n      }\n    }\n  }\n\n  // Turn images in the provided Drafty.ent entries into thumbnails.\n  convertIntoThumbnails(ents, idx, done) {\n    if (idx >= ents.length) {\n      done(true);\n      return;\n    }\n\n    const scale = (origBlob) => {\n      imageScaled(origBlob, IMAGE_THUMBNAIL_DIM, IMAGE_THUMBNAIL_DIM, -1, false,\n        // Success\n        (mime, blob, width, height, fname) => {\n          const ex = ents[idx];\n\n          ex.data.mime = mime;\n          ex.data.size = blob.size;\n          ex.data.width = width;\n          ex.data.height = height;\n          ex.data.name = fname;\n          ex.data.ref = undefined;\n\n          blobToBase64(blob, (blobMime, tinyBits64) => {\n            ex.data.val = tinyBits64;\n            this.convertIntoThumbnails(ents, idx + 1, done);\n          });\n        },\n        // Failure\n        (err) => {\n          done(false);\n          this.props.onError(err, 'err');\n        });\n    }\n    const ex = ents[idx];\n    if (ex.data.val) {\n      const b = base64ToBlob(ex.data.val, ex.data.mime);\n      if (b) {\n        scale.call(this, b);\n      }\n    } else {\n      //let saveThis = this;\n      const from = this.props.tinode.authorizeURL(sanitizeImageUrl(ex.data.ref));\n      fetch(from)\n        .then(e => e.blob())\n        .then((b) => {\n          scale.call(saveThis, b);\n        });\n      return;\n    }\n  }\n\n  handleCancelReply() {\n    this.setState({reply: null})\n  }\n\n  handleQuoteClick(replyToSeq) {\n    const element = document.getElementById(\"msg-\" + replyToSeq);\n    if (element) {\n      element.scrollIntoView({block: \"center\", behavior: \"smooth\"});\n      element.style.backgroundColor = 'rgb(0, 0, 0, 0.4)';\n      setTimeout(() => { element.style.backgroundColor = ''; } , 1000);\n    }\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n\n    let component;\n    if (this.props.hideSelf) {\n      component = null;\n    } else if (!this.state.topic) {\n      component = (\n        <LogoView\n          serverVersion={this.props.serverVersion}\n          serverAddress={this.props.serverAddress} />\n      );\n    } else {\n      let component2;\n      if (this.state.imagePreview) {\n        // Preview image before sending.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePreview}\n            tinode={this.props.tinode}\n            replyTo={this.state.reply}\n            formatter={draftyFormatter}\n            onCancelReply={this.handleCancelReply}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendImageAttachment} />\n        );\n      } else if (this.state.imagePostview) {\n        // Expand received image.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePostview}\n            onClose={this.handleClosePreview} />\n        );\n      } else if (this.state.docPreview) {\n        // Preview attachment before sending.\n        component2 = (\n          <DocPreview\n            content={this.state.docPreview}\n            tinode={this.props.tinode}\n            replyTo={this.state.reply}\n            formatter={draftyFormatter}\n            onCancelReply={this.handleCancelReply}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendFileAttachment} />\n        );\n      } else {\n        const topic = this.props.tinode.getTopic(this.state.topic);\n        const isChannel = topic.isChannelType();\n        const groupTopic = topic.isGroupType() && !isChannel;\n        const icon_badges = [];\n        if (topic.trusted) {\n          if (topic.trusted.verified) {\n            icon_badges.push({icon: 'verified', color: 'badge-inv'});\n          }\n          if (topic.trusted.staff) {\n            icon_badges.push({icon: 'staff', color: 'badge-inv'});\n          }\n          if (topic.trusted.danger) {\n            icon_badges.push({icon: 'dangerous', color: 'badge-inv'});\n          }\n        }\n        let messageNodes = [];\n        let previousFrom = null;\n        let chatBoxClass = null;\n        topic.messages((msg, prev, next, i) => {\n          let nextFrom = next ? (next.from || null) : 'chan';\n\n          let sequence = 'single';\n          let thisFrom = msg.from || 'chan';\n          if (thisFrom == previousFrom) {\n            if (thisFrom == nextFrom) {\n              sequence = 'middle';\n            } else {\n              sequence = 'last';\n            }\n          } else if (thisFrom == nextFrom) {\n            sequence = 'first';\n          }\n          previousFrom = thisFrom;\n\n          const isReply = !(thisFrom == this.props.myUserId);\n          const deliveryStatus = topic.msgStatus(msg, true);\n\n          let userName, userAvatar, userFrom;\n          if (groupTopic) {\n            const user = topic.userDesc(thisFrom);\n            if (user && user.public) {\n              userName = user.public.fn;\n              userAvatar = makeImageUrl(user.public.photo);\n            }\n            userFrom = thisFrom;\n            chatBoxClass='chat-box group';\n          } else {\n            chatBoxClass='chat-box';\n          }\n\n          messageNodes.push(\n            <ChatMessage\n              tinode={this.props.tinode}\n              content={msg.content}\n              deleted={msg.hi}\n              mimeType={msg.head ? msg.head.mime : null}\n              timestamp={msg.ts}\n              response={isReply}\n              seq={msg.seq}\n              userFrom={userFrom}\n              userName={userName}\n              userAvatar={userAvatar}\n              sequence={sequence}\n              received={deliveryStatus}\n              uploader={msg._uploader}\n              viewportWidth={this.props.viewportWidth}\n              showContextMenu={this.state.channel? false : this.handleShowContextMenuMessage}\n              onImagePreview={this.handleImagePostview}\n              onFormResponse={this.handleFormResponse}\n              onError={this.props.onError}\n              onCancelUpload={this.handleCancelUpload}\n\n              pickReply={this.handlePickReply}\n              replyToSeq={msg.head ? msg.head.replyToSeq : null}\n              onQuoteClick={this.handleQuoteClick}\n              onFormatQuote={draftyFormatter}\n\n              key={msg.seq} />\n          );\n        });\n\n        let lastSeen = null;\n        if (isChannel) {\n          lastSeen = formatMessage(messages.channel);\n        } else {\n          const cont = this.props.tinode.getMeTopic().getContact(this.state.topic);\n          if (cont && Tinode.isP2PTopicName(cont.topic)) {\n            if (cont.online) {\n              lastSeen = formatMessage(messages.online_now);\n            } else if (cont.seen) {\n              lastSeen = formatMessage(messages.last_seen) + \": \" +\n                shortDateFormat(cont.seen.when, this.props.intl.locale);\n              // TODO: also handle user agent in c.seen.ua\n            }\n          }\n        }\n        const avatar = this.state.avatar || true;\n        const online = this.props.online ? 'online' + (this.state.typingIndicator ? ' typing' : '') : 'offline';\n\n        component2 = (\n          <>\n            <div id=\"topic-caption-panel\" className=\"caption-panel\">\n              {this.props.displayMobile ?\n                <a href=\"#\" id=\"hide-message-view\" onClick={(e) => {e.preventDefault(); this.props.onHideMessagesView();}}>\n                  <i className=\"material-icons\">arrow_back</i>\n                </a>\n                :\n                null}\n              <div className=\"avatar-box\">\n                <LetterTile\n                  tinode={this.props.tinode}\n                  avatar={avatar}\n                  topic={this.state.topic}\n                  title={this.state.title} />\n                {!isChannel ? <span className={online} /> : null}\n              </div>\n              <div id=\"topic-title-group\">\n                <div id=\"topic-title\" className=\"panel-title\">{\n                  this.state.title ||\n                  <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n                    description=\"Title shown when the topic has no name\" /></i>\n                }<ContactBadges badges={icon_badges} /></div>\n                <div id=\"topic-last-seen\">{lastSeen}</div>\n              </div>\n              {groupTopic ?\n                <GroupSubs\n                  tinode={this.props.tinode}\n                  subscribers={this.state.onlineSubs} /> :\n                <div id=\"topic-users\" />\n              }\n              <div>\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">more_vert</i>\n                </a>\n              </div>\n            </div>\n            {this.props.displayMobile ?\n              <ErrorPanel\n                level={this.props.errorLevel}\n                text={this.props.errorText}\n                onClearError={this.props.onError} />\n              : null}\n            <LoadSpinner show={this.state.fetchingMessages} />\n            <div id=\"messages-container\">\n              <div id=\"messages-panel\" ref={this.handleScrollReference}>\n                <ul id=\"scroller\" className={chatBoxClass}>\n                  {messageNodes}\n                </ul>\n              </div>\n              {!this.state.isReader ?\n              <div id=\"write-only-background\">\n                {this.state.readingBlocked ?\n                <div id=\"write-only-note\">\n                  <FormattedMessage id=\"messages_not_readable\" defaultMessage=\"no access to messages\"\n                    description=\"Message shown in topic without the read access\" />\n                </div>\n                : null }\n              </div>\n              : null }\n            </div>\n            {this.state.peerMessagingDisabled && !this.state.unconfirmed ?\n              <div id=\"peer-messaging-disabled-note\">\n                <i className=\"material-icons secondary\">block</i> <FormattedMessage\n                  id=\"peers_messaging_disabled\" defaultMessage=\"Peer's messaging is disabled.\"\n                  description=\"Shown when the p2p peer's messaging is disabled\" /> <a href=\"#\"\n                    onClick={this.handleEnablePeer}><FormattedMessage id=\"enable_peers_messaging\"\n                    defaultMessage=\"Enable\" description=\"Call to action to enable peer's messaging\" /></a>.\n              </div> : null}\n            {this.state.unconfirmed ?\n              <Invitation onAction={this.handleNewChatAcceptance} />\n              :\n              <SendMessage\n                tinode={this.props.tinode}\n                disabled={!this.state.isWriter}\n                onKeyPress={this.sendKeyPress}\n                onSendMessage={this.sendMessage}\n                onAttachFile={this.handleAttachFile}\n                onAttachImage={this.handleAttachImage}\n                onError={this.props.onError}\n                replyTo={this.state.reply}\n                onQuoteClick={this.handleQuoteClick}\n                onFormatQuote={draftyFormatter}\n                onCancelReply={this.handleCancelReply} />}\n          </>\n        );\n      }\n\n      component = <div id=\"topic-view\">{component2}</div>\n    }\n    return component;\n  }\n};\n\nfunction quotePreviewFmt(fmt, ent) {\n  let tp = fmt.tp;\n  if (!tp) {\n    if (!ent || !ent.tp) {\n      return [null, null];\n    }\n    tp = ent.tp;\n  }\n  const new_fmt = {at: fmt.at, len: fmt.len, tp: fmt.tp};\n  switch (tp) {\n    case 'BR':\n      // Replace new line with a space.\n      return [null, null];\n    case 'HL':\n      return [new_fmt, ent];\n    case 'LN':\n      // Disable links in previews.\n      return [null, null];\n    case 'IM':\n      // Keep images as is.\n      return [new_fmt, ent];\n    case 'BN':\n      new_fmt.tp = null;\n      return [new_fmt, { tp: 'IC', data: { orig: 'BN', iconName: 'dashboard', iconTitle: 'drafty_form'} }];\n    case 'FM':\n      new_fmt.tp = null;\n      new_fmt.len = 0;\n      return [new_fmt, {tp: 'IC', data: { orig: 'FM', iconName: 'dashboard', iconTitle: 'drafty_form'} }];\n    case 'RW':\n      return [null, null];\n    case 'EX':\n      // Make it an icon.\n      new_fmt.tp = null;\n      return [new_fmt, {tp: 'IC', data: { orig: 'EX', iconName: 'attachment', iconTitle: 'drafty_attachment'} }];\n    case 'QQ':\n      // Quote/citation.\n      return [null,null];\n    default:\n      return [new_fmt, ent];\n  }\n}\n\n// Converts Drafty elements into React classes.\n// 'this' is set by the caller.\nfunction draftyFormatter(style, data, values, key) {\n  if (style == 'EX') {\n    // attachments are handled elsewhere.\n    return null;\n  }\n\n  let el = Drafty.tagName(style);\n  if (el) {\n    const { formatMessage } = this.props.intl;\n    let attr = Drafty.attrValue(style, data) || {};\n    attr.key = key;\n    switch (style) {\n      case 'HL':\n        // Highlighted text. Assign class name.\n        attr.className = 'highlight';\n        break;\n      case 'IM':\n        // Additional processing for images\n        if (data) {\n          attr.className = 'inline-image';\n          const dim = fitImageSize(data.width, data.height,\n            Math.min(this.props.viewportWidth - REM_SIZE * 6.5, REM_SIZE * 34.5), REM_SIZE * 24, false) ||\n            {dstWidth: BROKEN_IMAGE_SIZE, dstHeight: BROKEN_IMAGE_SIZE};\n          attr.style = {\n            width: dim.dstWidth + 'px',\n            height: dim.dstHeight + 'px',\n            // Looks like a Chrome bug: broken image does not respect 'width' and 'height'.\n            minWidth: dim.dstWidth + 'px',\n            minHeight: dim.dstHeight + 'px'\n          };\n          if (!Drafty.isProcessing(data)) {\n            attr.src = this.props.tinode.authorizeURL(sanitizeImageUrl(attr.src));\n            attr.alt = data.name;\n            if (attr.src) {\n              attr.onClick = this.handleImagePreview;\n              attr.className += ' image-clickable';\n              attr.loading = 'lazy';\n            } else {\n              attr.src = 'img/broken_image.png';\n            }\n          } else {\n            // Use custom element instead of <img>.\n            el = UploadingImage;\n          }\n        }\n        break;\n      case 'BN':\n        // Button\n        attr.onClick = this.handleFormButtonClick;\n        let inner = React.Children.map(values, (child) => {\n          return typeof child == 'string' ? child : undefined;\n        });\n        if (!inner || inner.length == 0) {\n          inner = [attr.name]\n        }\n        // Get text which will be sent back when the button is clicked.\n        attr['data-title'] = inner.join('');\n        break;\n      case 'MN':\n        // Mention\n        if (data && data.hasOwnProperty('color')) {\n          attr.className = 'mn-dark-color' + data.color;\n        }\n        break;\n      case 'FM':\n        // Form\n        attr.className = 'bot-form';\n        break;\n      case 'RW':\n        // Form element formatting is dependent on element content.\n        break;\n      case 'QQ':\n        // Quote/citation.\n        attr.className = 'reply-quote'\n        attr.onClick = this.handleQuoteClick;\n        break;\n      case 'IC':\n        // Icon.\n        if (data.orig == 'BN') {\n          attr.className = 'flat-button faux';\n        } else {\n          el = React.Fragment;\n          //values = [<i >]\n          const iconKey = data.orig.toLowerCase();\n          values = [<i key={iconKey} className=\"material-icons\">{data.iconName}</i>,\n            formatMessage(messages[data.iconTitle])].concat(values || []);\n        }\n        break;\n      default:\n        if (el == '_UNKN') {\n          // Unknown element.\n          // TODO: make it prettier.\n          el = <><span className=\"material-icons\">extension</span></>;\n        }\n        break;\n    }\n    return React.createElement(el, attr, values);\n  } else {\n    return values;\n  }\n};\n\nexport default injectIntl(MessagesView);\n","// The <- button to be displayed in title bars.\nimport React from 'react';\n\nexport default class ButtonBack extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onBack();}}>\n        <i className=\"material-icons\">arrow_back</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class MenuContacts extends React.PureComponent {\n  render() {\n    return (\n      <div>\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onNewTopic();}}><i className=\"material-icons\">chat</i></a>\n        &nbsp;\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nexport default class MenuStart extends React.PureComponent {\n  render() {\n    return (\n        <div>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSignUp();}}><i className=\"material-icons\">person_add</i></a>\n          &nbsp;\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n        </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\nimport ButtonBack from './button-back.jsx';\nimport ContactBadges from './contact-badges.jsx';\nimport MenuContacts from './menu-contacts.jsx';\nimport MenuStart from './menu-start.jsx';\n\nimport { sanitizeImageUrl } from '../lib/utils.js';\n\nexport default class SideNavbar extends React.PureComponent {\n  render() {\n    const icon_badges = [];\n    if (this.props.trustedBadges) {\n      this.props.trustedBadges.map((b) => {\n        icon_badges.push({icon: b, color: 'badge-inv'});\n      });\n    }\n    let avatar = null;\n    if (this.props.tinode) {\n      avatar = this.props.tinode.authorizeURL(sanitizeImageUrl(this.props.avatar));\n    }\n    return (\n      <div id=\"side-caption-panel\" className=\"caption-panel\">\n        {this.props.onCancel ? <ButtonBack onBack={this.props.onCancel} /> : null}\n        {avatar ?\n          <div id=\"self-avatar\" className=\"avatar-box\">\n            <LetterTile\n              tinode={this.props.tinode}\n              avatar={avatar}\n              topic={this.props.myUserId}\n              title={this.props.title} />\n          </div>\n          :\n          null}\n        <div id=\"sidepanel-title\" className=\"panel-title\">{this.props.title}<ContactBadges badges={icon_badges}/></div>\n        {this.props.state === 'login' ?\n            <MenuStart onSignUp={this.props.onSignUp} onSettings={this.props.onSettings} /> :\n          this.props.state === 'contacts' ?\n            <MenuContacts onNewTopic={this.props.onNewTopic} onSettings={this.props.onSettings} /> :\n          null}\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport BadgeList from '../widgets/badge-list.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH } from '../config.js';\n\nfunction _clip(str, length) {\n  return str && str.substring(0, length);\n}\n\nexport default class AccountSettingsView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    this.state = {\n      fullName: _clip(me.public ? me.public.fn : undefined, MAX_TITLE_LENGTH),\n      description: _clip(me.public ? me.public.note : undefined, MAX_TOPIC_DESCRIPTION_LENGTH),\n      avatar: makeImageUrl(me.public ? me.public.photo : null)\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          <a href=\"#\" className=\"flat-button float-right\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('general');}}>\n            <i className=\"material-icons\">edit</i>&nbsp;\n            <FormattedMessage id=\"button_edit\" defaultMessage=\"Edit\" description=\"Call to action [Edit]\" />\n          </a>\n          <center>\n            <AvatarUpload\n              tinode={this.props.tinode}\n              avatar={this.state.avatar}\n              readOnly={true}\n              uid={this.props.myUserId}\n              title={this.state.fullName} />\n          </center>\n          <div className=\"group\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n                description=\"Label for full name editing\" />\n            </label>\n            <div className=\"large ellipsized\">{this.state.fullName}</div>\n          </div>\n          <div className=\"group\">\n            <label className=\"small\"><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n              description=\"Label for user address (ID)\" /></label>&nbsp;\n            <tt>{this.props.myUserId}</tt>\n          </div>\n          <div className=\"group\">\n            <BadgeList trustedBadges={this.props.trustedBadges} />\n          </div>\n          {this.state.description ?\n            <div className=\"group\">\n              <label className=\"small\">\n                <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                  description=\"Label for editing topic description\" />\n              </label>\n              <div>{this.state.description}</div>\n            </div> : null}\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('notif');}}>\n            <i className=\"material-icons\">notifications</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_notifications\"\n              defaultMessage=\"Notifications\" description=\"Sidepanel title for AccNotificationsView.\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('security');}}>\n            <i className=\"material-icons\">security</i>&nbsp;<FormattedMessage id=\"button_security\"\n              defaultMessage=\"Security\" description=\"Navigaton button for security panel.\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('support');}}>\n            <i className=\"material-icons\">contact_support</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_support\"\n              defaultMessage=\"Support\" description=\"Sidepanel title for AccSupportView.\" />\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","/* ContactsView holds all contacts-related stuff */\nimport React from 'react';\nimport { FormattedMessage, defineMessages } from 'react-intl';\n\nimport ContactList from '../widgets/contact-list.jsx';\n\nimport { updateFavicon } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  archived_contacts_title: {\n    id: \"archived_contacts\",\n    defaultMessage: \"Archived contacts ({count})\",\n    description: \"Label for archived chats\"\n  }\n});\n\nexport default class ContactsView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAction = this.handleAction.bind(this);\n\n    this.state = ContactsView.deriveStateFromProps(props);\n  }\n\n  static deriveStateFromProps(props) {\n    const contacts = [];\n    let unreadThreads = 0;\n    let archivedCount = 0;\n    props.chatList.map((c) => {\n      const blocked = c.acs && !c.acs.isJoiner();\n      // Show only blocked contacts only when props.blocked == true.\n      if (blocked && props.blocked) {\n        contacts.push(c);\n      }\n      if (blocked || props.blocked) {\n        return;\n      }\n\n      if (c.private && c.private.arch) {\n        if (props.archive) {\n          contacts.push(c);\n        } else {\n          archivedCount ++;\n        }\n      } else if (!props.archive) {\n        contacts.push(c);\n        unreadThreads += c.unread > 0 ? 1 : 0;\n      }\n    });\n\n    contacts.sort((a, b) => {\n      return (b.touched || 0) - (a.touched || 0);\n    });\n\n    if (archivedCount > 0) {\n      contacts.push({\n        action: 'archive',\n        title: messages.archived_contacts_title,\n        values: {count: archivedCount}\n      });\n    }\n\n    return {\n      contactList: contacts,\n      unreadThreads: unreadThreads\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chatList != this.props.chatList ||\n        prevProps.archive != this.props.archive ||\n        prevProps.blocked != this.props.blocked) {\n      const newState = ContactsView.deriveStateFromProps(this.props);\n      this.setState(newState);\n      if (newState.unreadThreads != prevState.unreadThreads) {\n        updateFavicon(newState.unreadThreads);\n      }\n    }\n  }\n\n  handleAction(action_ignored) {\n    this.props.onShowArchive();\n  }\n\n  render() {\n    return (\n      <FormattedMessage id=\"contacts_not_found\"\n        defaultMessage=\"You have no chats<br />¯∖_(ツ)_/¯\"\n        description=\"HTML message shown in ContactList when no contacts are found\">{\n        (no_contacts) => <ContactList\n          tinode={this.props.tinode}\n          connected={this.props.connected}\n          contacts={this.state.contactList}\n          emptyListMessage={no_contacts}\n          topicSelected={this.props.topicSelected}\n          myUserId={this.props.myUserId}\n          showOnline={true}\n          showUnread={true}\n          onTopicSelected={this.props.onTopicSelected}\n          showContextMenu={this.props.showContextMenu}\n          onAction={this.handleAction} />\n      }</FormattedMessage>\n    );\n  }\n};\n","// Helper functions for storing values in localStorage.\n// By default localStorage can store only strings, not objects or other types.\n\nexport default class LocalStorageUtil {\n  // Replace old object with the new one.\n  static setObject(key, value) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n\n  // Get stored object.\n  static getObject(key) {\n    const value = localStorage.getItem(key);\n    return value && JSON.parse(value);\n  }\n\n  // Partially or wholly update stored object.\n  static updateObject(key, value) {\n    const oldVal = this.getObject(key);\n    this.setObject(key, Object.assign(oldVal || {}, value));\n  }\n\n  // Just a wrapper.\n  static removeItem(key) {\n    localStorage.removeItem(key);\n  }\n}\n","// Account registration.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport { theCard } from '../lib/utils.js';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class CreateAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: '',\n      password: '',\n      email: '',\n      fn: '', // full/formatted name\n      imageDataUrl: null,\n      errorCleared: false,\n      saveToken: LocalStorageUtil.getObject('keep-logged-in')\n    };\n\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(password) {\n    this.setState({password: password});\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value})\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleToggleSaveToken() {\n    LocalStorageUtil.setObject('keep-logged-in', !this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({errorCleared: false});\n    this.props.onCreateAccount(\n      this.state.login.trim(),\n      this.state.password.trim(),\n      theCard(this.state.fn.trim().substring(0, MAX_TITLE_LENGTH), this.state.imageDataUrl),\n      {'meth': 'email', 'val': this.state.email});\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form className=\"panel-form-column\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n              description=\"Placeholer for username/login\">{\n              (login_prompt) => <input type=\"text\" placeholder={login_prompt} autoComplete=\"user-name\"\n                value={this.state.login} onChange={this.handleLoginChange} required autoFocus />\n            }</FormattedMessage>\n            <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n              description=\"Placeholder/prompt for entering password\">{\n              (password_prompt) => <VisiblePassword placeholder={password_prompt} autoComplete=\"new-password\"\n                value={this.state.password} onFinished={this.handlePasswordChange}\n                required={true} />\n            }</FormattedMessage>\n          </div>\n          <AvatarUpload\n            tinode={this.props.tinode}\n            onImageChanged={this.handleImageChanged}\n            onError={this.props.onError} />\n        </div>\n        <div  className=\"panel-form-row\">\n          <FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n            description=\"Input placeholder for person's full name\">{\n            (full_name_prompt) => <input type=\"text\" placeholder={full_name_prompt} autoComplete=\"name\"\n              value={this.state.fn} onChange={this.handleFnChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <FormattedMessage id=\"email_prompt\" defaultMessage=\"Email, e.g. jdoe@example.com\"\n            description=\"Input placeholder for email entry\">{\n            (email_prompt) => <input type=\"email\" placeholder={email_prompt} autoComplete=\"email\"\n              value={this.state.email} onChange={this.handleEmailChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n            description=\"Label for a checkbox\">{\n            (stay_logged_in) => <label htmlFor=\"save-token\">&nbsp;{stay_logged_in}</label>\n          }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_up\" defaultMessage=\"Sign up\"\n              description=\"Create account button [Sign Up]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\n\nexport default class EditAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckboxClick = this.handleCheckboxClick.bind(this);\n  }\n\n  handleCheckboxClick(what, checked) {\n    if (what == 'sound') {\n      this.props.onToggleMessageSounds(checked);\n    } else if (what == 'alert') {\n      this.props.onTogglePushNotifications(checked);\n    } else if (what == 'incognito') {\n      this.props.onToggleIncognitoMode(checked);\n    }\n  }\n\n  render() {\n    return (\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"message-sound\">\n              <FormattedMessage id=\"label_message_sound\" defaultMessage=\"Message sound:\"\n                description=\"Label for message sounds toggle\" />\n            </label>\n            <CheckBox name=\"sound\" id=\"message-sound\"\n              checked={this.props.messageSounds} onChange={this.handleCheckboxClick} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"desktop-alerts\">\n            {this.props.desktopAlertsEnabled ?\n              <FormattedMessage id=\"label_push_notifications\" defaultMessage=\"Notification alerts:\"\n                description=\"Label for push notifications switch\" />\n              :\n              <FormattedMessage id=\"label_push_notifications_disabled\"\n                defaultMessage=\"Notification alerts (requires HTTPS):\"\n                description=\"Label for push notifications switch\" />\n            }\n            </label>\n            <CheckBox name=\"alert\" id=\"desktop-alerts\"\n              checked={this.props.desktopAlerts}\n              onChange={this.props.desktopAlertsEnabled ? this.handleCheckboxClick : null} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"incognito-mode\">\n              <FormattedMessage id=\"label_incognito_mode\" defaultMessage=\"Incognito mode:\"\n                description=\"Label for incognito mode toggle\" />\n            </label>\n            <CheckBox name=\"incognito\" id=\"incognito-mode\"\n              checked={this.props.incognitoMode} onChange={this.handleCheckboxClick} />\n          </div>\n        </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\n\nconst messages = defineMessages({\n  delete_account: {\n    id: 'delete_account',\n    defaultMessage: 'Delete account',\n    description: 'Title for delete account warning'\n  },\n  delete_account_warning: {\n    id: 'delete_account_warning',\n    defaultMessage: 'Are you sure you want to delete your account? It cannot be undone.',\n    description: 'Warning message when deleting an account'\n  }\n});\n\nclass AccSecurityView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    let blockedCount = 0;\n    me.contacts((c) => {\n      if (c.acs && !c.acs.isJoiner()) {\n        blockedCount ++;\n      }\n    });\n    const defacs = me.getDefaultAccess();\n    this.state = {\n      auth: defacs ? defacs.auth : null,\n      anon: defacs ? defacs.anon : null,\n      showPermissionEditorFor: undefined,\n      blockedCount: blockedCount,\n    };\n\n    this.handlePasswordUpdate = this.handlePasswordUpdate.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n  }\n\n  handlePasswordUpdate(pwd) {\n    this.setState({password: pwd});\n    this.props.onUpdatePassword(pwd);\n  }\n\n  handleLaunchPermissionsEditor(which) {\n    this.setState({\n      showPermissionEditorFor: which,\n      editedPermissions: this.state[which]\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handlePermissionsChanged(perm) {\n    let defacs = {};\n    defacs[this.state.showPermissionEditorFor] = perm;\n    this.props.onUpdateAccountDesc('me', undefined, undefined, defacs);\n\n    let newState = {showPermissionEditorFor: undefined};\n    newState[this.state.showPermissionEditorFor] = perm;\n    this.setState(newState);\n  }\n\n  handleDeleteAccount(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.delete_account), // title\n      formatMessage(messages.delete_account_warning), // content\n      (() => { this.props.onDeleteAccount(); }), // onConfirm\n      null, // use default text \"OK\"\n      true, // Show Reject button\n      null  // use default text \"Cancel\"\n    );\n  }\n\n  render() {\n    return (\n      <React.Fragment>{this.state.showPermissionEditorFor ?\n        <PermissionsEditor\n          mode={this.state.editedPermissions}\n          skip=\"O\"\n          onSubmit={this.handlePermissionsChanged}\n          onCancel={this.handleHidePermissionsEditor} />\n        :\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_password\" defaultMessage=\"Password\"\n                  description=\"Label for password editing\" />\n            </label>\n            <div>\n              <FormattedMessage id=\"password_unchanged_prompt\" defaultMessage=\"Unchanged\"\n                description=\"Message in editor while password is unchanged\">{\n                (password_unchanged) => <InPlaceEdit\n                  placeholder={password_unchanged}\n                  type=\"password\"\n                  onFinished={this.handlePasswordUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <a href=\"#\" className=\"danger flat-button\" onClick={(e) => {e.preventDefault(); this.props.onLogout();}}>\n              <i className=\"material-icons\">exit_to_app</i> &nbsp;<FormattedMessage id=\"button_logout\"\n                defaultMessage=\"Logout\" description=\"Button [Logout]\" />\n            </a>\n            <a href=\"#\" className=\"danger flat-button\" onClick={(e) => {this.handleDeleteAccount(e);}}>\n              <i className=\"material-icons\">delete</i> &nbsp;<FormattedMessage id=\"button_delete_account\"\n                defaultMessage=\"Delete account\" description=\"Button [Delete account]\" />\n            </a>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <div>\n              <label className=\"small\">\n                <FormattedMessage id=\"label_default_access_mode\" defaultMessage=\"Default access mode:\"\n                description=\"Label for default access mode\" />\n              </label>\n            </div>\n            <div className=\"quoted\">\n              <div>Auth: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>{this.state.auth}</tt></div>\n              <div>Anon: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>{this.state.anon}</tt></div>\n            </div>\n          </div>\n          {this.state.blockedCount > 0 ?\n            <>\n              <div className=\"hr\" />\n              <div className=\"panel-form-row\">\n                <i className=\"material-icons\">block</i>&nbsp;\n                <a href=\"#\" className=\"gray\" onClick={(e) => {e.preventDefault(); this.props.onShowBlocked();}}>\n                  <FormattedMessage id=\"blocked_contacts_link\" defaultMessage=\"Blocked contacts ({count})\"\n                    values={{ count: this.state.blockedCount }} description=\"Blocked contacts link\" />\n                </a>\n              </div>\n            </>\n            : null }\n        </div>\n      }</React.Fragment>\n    );\n  }\n};\n\nexport default injectIntl(AccSecurityView);\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME, LINK_CONTACT_US, LINK_PRIVACY_POLICY, LINK_TERMS_OF_SERVICE } from '../config.js';\n\nexport default class AccSupportView extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          <a href={LINK_CONTACT_US} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">email</i> &nbsp;<FormattedMessage id=\"link_contact_us\"\n              defaultMessage=\"Contact Us\" description=\"Ancor text for contacting us by email\" />\n          </a>\n          <a href={LINK_TERMS_OF_SERVICE} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">description</i> &nbsp;<FormattedMessage id=\"link_terms_of_service\"\n              defaultMessage=\"Terms of Service\" description=\"Ancor text for terms of service link\" />\n          </a>\n          <a href={LINK_PRIVACY_POLICY} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">policy</i> &nbsp;<FormattedMessage id=\"link_privacy_policy\"\n              defaultMessage=\"Privacy Policy\" description=\"Ancor text for privacy policy link\" />\n          </a>\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\"\n              description=\"Label for a client version\" /></label>\n            {APP_NAME}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_sdk\" defaultMessage=\"SDK:\" /></label>\n            {Tinode.getLibrary()}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\"\n              description=\"Label for a server version\" /></label>\n            {this.props.serverVersion}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server_address\" defaultMessage=\"Server address:\" /></label>\n            {this.props.serverAddress}\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","// Login form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\n\nexport default class LoginView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: props.login,\n      password: '',\n      hostName: props.serverAddress,\n      saveToken: props.persist\n    };\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  handleToggleSaveToken() {\n    this.props.onPersistenceChange(!this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onLogin(this.state.login.trim(), this.state.password.trim());\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form id=\"login-form\" onSubmit={this.handleSubmit}>\n        <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n          description=\"Placeholer for username/login\">\n        {\n          (login_prompt) => <input type=\"text\" id=\"inputLogin\"\n            placeholder={login_prompt}\n            autoComplete=\"username\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"none\"\n            value={this.state.login}\n            onChange={this.handleLoginChange}\n            required autoFocus />\n        }\n        </FormattedMessage>\n        <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n          description=\"Placeholder/prompt for entering password\">\n        {\n          (password_prompt) => <VisiblePassword type=\"password\" id=\"inputPassword\"\n            placeholder={password_prompt}\n            autoComplete=\"current-password\"\n            value={this.state.password}\n            onChange={this.handlePasswordChange}\n            required={true} />\n        }\n        </FormattedMessage>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <label htmlFor=\"save-token\">&nbsp;\n            <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n              description=\"Label for a checkbox\" />\n          </label>\n          <a href=\"#reset\">\n            <FormattedMessage id=\"forgot_password_link\" defaultMessage=\"Forgot password?\"\n              description=\"Link to Reset password form\" />\n          </a>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_in\" defaultMessage=\"Sign in\"\n              description=\"Button [Sign In]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n/* END Login */\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  invalid_id: {\n    id: 'error_invalid_id',\n    defaultMessage: 'Invalid ID',\n    description: 'Error message'\n  }\n});\n\nclass NewTopicById extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      groupId: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({groupId: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.groupId) {\n      const name = this.state.groupId.trim();\n      const prefix = name.substr(0, 3);\n      if (name.length > 3 && ['usr', 'grp', 'chn'].includes(prefix)) {\n        this.props.onSubmit(name);\n      } else {\n        this.props.onError(this.props.intl.formatMessage(messages.invalid_id), 'err');\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"group_user_id_prompt\" defaultMessage=\"Group or User ID\"\n          description=\"Prompt for entering user or group ID\">{\n          (prompt) => <input type=\"text\" placeholder={prompt}\n            value={this.state.groupId} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required autoFocus />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_subscribe\" defaultMessage=\"Subscribe\"\n              description=\"Button [Subscribe]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicById);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from './avatar-upload.jsx';\nimport CheckBox from './checkbox.jsx';\nimport TagManager from './tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH } from '../config.js';\n\nexport default class NewTopicGroup extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.fullName = React.createRef();\n\n    this.state = {\n      fullName: '', // full/formatted name\n      private: '',\n      description: '',\n      imageDataUrl: null,\n      tags: [],\n      isChannel: false\n    };\n\n    this.handleFieldEdit = this.handleFieldEdit.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleTagsChanged = this.handleTagsChanged.bind(this);\n    this.handleChannelToggle = this.handleChannelToggle.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    // this.fullName.current.focus();\n  }\n\n  handleFieldEdit(name, e) {\n    this.setState({[name]: e.target.value || ''});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleTagsChanged(tags) {\n    this.setState({tags: tags});\n  }\n\n  handleChannelToggle() {\n    this.setState({isChannel: !this.state.isChannel});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const fn = this.state.fullName.trim().substring(0, MAX_TITLE_LENGTH);\n    const comment = this.state.private.trim().substring(0, MAX_TITLE_LENGTH);\n    const description = this.state.description.trim().substring(0, MAX_TOPIC_DESCRIPTION_LENGTH);\n    if (fn) {\n      this.props.onSubmit(fn, description, this.state.imageDataUrl, comment, this.state.tags, this.state.isChannel);\n    }\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n    return (\n      <form className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-column\">\n          <center>\n            <AvatarUpload\n              tinode={this.props.tinode}\n              onError={this.props.onError}\n              onImageChanged={this.handleImageChanged} />\n          </center>\n          <div className=\"group\">\n            <label className=\"small\" htmlFor=\"new-topic-fn\">\n              <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                description=\"Label for editing topic name\" />\n            </label>\n            <FormattedMessage id=\"topic_name_editing_placeholder\" defaultMessage=\"Freeform name of the group\"\n              description=\"Prompt for entering topic name\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-fn\" placeholder={placeholder}\n                ref={this.fullName} value={this.state.fullName} onChange={this.handleFieldEdit.bind(this, 'fullName')}\n                autoFocus required tabIndex={0} />\n            }</FormattedMessage>\n          </div>\n          <div className=\"group\">\n            <label className=\"small\" htmlFor=\"new-topic-priv\">\n              <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                description=\"Label for editing 'private'\" />\n            </label>\n            <FormattedMessage id=\"private_editing_placeholder\" defaultMessage=\"Visible to you only\"\n              description=\"Placeholder for editing 'private'\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-priv\" placeholder={placeholder}\n                value={this.state.private} onChange={this.handleFieldEdit.bind(this, 'private')} tabIndex={1} />\n            }</FormattedMessage>\n          </div>\n          <div className=\"group\">\n            <label className=\"small\" htmlFor=\"new-topic-desc\">\n              <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                description=\"Label for editing topic description\" />\n            </label>\n            <FormattedMessage id=\"description_editing_placeholder\" defaultMessage=\"Description (optional)\"\n              description=\"Placeholder for editing topic description\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-desc\" placeholder={placeholder}\n                value={this.state.description} onChange={this.handleFieldEdit.bind(this, 'description')} tabIndex={2} />\n            }</FormattedMessage>\n          </div>\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox checked={this.state.isChannel} tabIndex={3} onChange={this.handleChannelToggle} />&nbsp;\n          <label onClick={this.handleChannelToggle}><FormattedMessage id=\"channel_prompt\"\n            defaultMessage=\"This is a channel\"\n            description=\"Checkbox label when creating a channel\" /></label>\n        </div>\n        <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (search & discovery)\"\n          description=\"Section title for TagManager\">{\n          (title) => <TagManager\n            tinode={this.props.tinode}\n            tags={this.state.tags}\n            activated={true}\n            onTagsChanged={this.handleTagsChanged}\n            tabIndex={4}\n            title={title} />\n        }</FormattedMessage>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses}>\n            <FormattedMessage id=\"button_create\" defaultMessage=\"Create\"\n              description=\"Button [Create]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nexport default class SearchContacts extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      edited: false,\n      search: ''\n    };\n\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  componentWillUnmount() {\n    if (this.state.edited) {\n      this.setState({search: '', edited: false});\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n  }\n\n  handleSearchChange(e) {\n    this.setState({search: e.target.value});\n  }\n\n  handleSearch(e) {\n    e.preventDefault();\n    var query = this.state.search.trim();\n    this.setState({edited: (query.length > 0)});\n    this.props.onSearchContacts(query.length > 0 ? query : Tinode.DEL_CHAR);\n  }\n\n  handleClear(e) {\n    e.preventDefault();\n    if (this.state.edited) {\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n    this.setState({search: '', edited: false});\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Enter') {\n      this.handleSearch(e);\n    } else if (e.key === 'Escape') {\n      this.handleClear();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <i className=\"material-icons search\">search</i>\n          <FormattedMessage id=\"search_placeholder\" defaultMessage=\"List like email:alice@example.com, tel:17025550003...\"\n            description=\"Placeholder in contacts search field\">{\n            (search_placeholder) => <input className=\"search\" type=\"text\"\n              placeholder={search_placeholder}\n              value={this.state.search} onChange={this.handleSearchChange}\n              onKeyDown={this.handleKeyDown} required autoFocus />\n          }</FormattedMessage>\n          <a href=\"#\" onClick={this.handleClear}>\n            <i className=\"material-icons\">close</i>\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","// Create new topic and invite users or send an invite.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport ContactList from '../widgets/contact-list.jsx';\nimport NewTopicById from '../widgets/new-topic-by-id.jsx';\nimport NewTopicGroup from '../widgets/new-topic-group.jsx';\nimport SearchContacts from '../widgets/search-contacts.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\nimport { theCard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  search_for_contacts: {\n    id: \"search_for_contacts\",\n    defaultMessage: \"Use search to find contacts\",\n    description: \"Text shown in contacts view when user entered no search query.\"\n  },\n  search_no_results: {\n    id: \"search_no_results\",\n    defaultMessage: \"Search returned no results\",\n    description: \"Text shown in contacts view when query returned no results.\"\n  }\n});\n\nclass NewTopicView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tabSelected: 'p2p',\n      searchQuery: null\n    };\n\n    this.handleTabClick = this.handleTabClick.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleNewGroupSubmit = this.handleNewGroupSubmit.bind(this);\n    this.handleGroupByID = this.handleGroupByID.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.onInitFind();\n  }\n\n  handleTabClick(e) {\n    e.preventDefault();\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'tab', e.currentTarget.dataset.id));\n    this.setState({tabSelected: e.currentTarget.dataset.id});\n  }\n\n  handleSearchContacts(query) {\n    this.props.onSearchContacts(query);\n    this.setState({searchQuery: Tinode.isNullValue(query) ? null : query});\n  }\n\n  handleContactSelected(uid) {\n    if (this.state.tabSelected == 'p2p') {\n      HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n      this.props.onCreateTopic(uid);\n    }\n  }\n\n  handleNewGroupSubmit(name, description, dataUrl, priv, tags, isChannel) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(undefined,\n      {public: theCard(name, dataUrl, null, description), private: priv, tags: tags}, isChannel);\n  }\n\n  handleGroupByID(topicName) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(topicName);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const no_contacts_placeholder = formatMessage(this.state.searchQuery ?\n      messages.search_no_results : messages.search_for_contacts);\n    return (\n      <div className=\"flex-column\">\n        <ul className=\"tabbar\">\n          <li className={this.state.tabSelected === \"p2p\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"p2p\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_find_user\" defaultMessage=\"find\"\n                description=\"Tab title Find\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"grp\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"grp\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_new_group\" defaultMessage=\"new group\"\n                description=\"Tab title New Group\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"byid\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"byid\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_group_by_id\" defaultMessage=\"by id\"\n                description=\"Tab title Find topic by ID\" />\n            </a>\n          </li>\n        </ul>\n        {this.state.tabSelected === 'grp' ?\n          <NewTopicGroup\n            tinode={this.props.tinode}\n            onSubmit={this.handleNewGroupSubmit} /> :\n          this.state.tabSelected === 'byid' ?\n            <NewTopicById\n              onSubmit={this.handleGroupByID}\n              onError={this.props.onError} /> :\n            <div className=\"flex-column\">\n              <SearchContacts\n                type=\"p2p\"\n                onSearchContacts={this.handleSearchContacts} />\n              <ContactList\n                tinode={this.props.tinode}\n                contacts={this.props.searchResults}\n                myUserId={this.props.myUserId}\n                emptyListMessage={no_contacts_placeholder}\n                showOnline={false}\n                showUnread={false}\n                showContextMenu={false}\n                onTopicSelected={this.handleContactSelected} />\n            </div>}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicView);\n","// A password reset form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\n\nexport default class PasswordResetView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: '',\n      sent: false\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n  }\n\n  componentDidMount() {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    this.setState({token: parsed.params.token, scheme: parsed.params.scheme});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.token) {\n      this.props.onReset(this.state.scheme, this.state.password.trim(), this.state.token);\n    } else if (this.state.sent) {\n      this.props.onCancel();\n    } else {\n      const email = this.state.email.trim();\n      this.setState({email: email});\n      this.props.onRequest('email', email).then(() => {\n        this.setState({sent: true});\n      });\n    }\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  render() {\n    return (\n      <form id=\"password-reset-form\" onSubmit={this.handleSubmit}>\n        {(this.state.token && this.state.scheme) ?\n          <FormattedMessage id=\"new_password_placeholder\" defaultMessage=\"Enter new password\"\n            description=\"Placeholder for entering new password\">{\n            (placeholder) => <VisiblePassword\n              placeholder={placeholder}\n              autoComplete=\"new-password\"\n              value={this.state.password}\n              required={true} autoFocus={true}\n              onChange={this.handlePasswordChange} />\n          }</FormattedMessage>\n        : this.state.sent ?\n          <>\n            <br/>\n            <center><i className=\"material-icons huge green\">task_alt</i></center>\n            <br/>\n            <center><FormattedMessage id=\"password_reset_email_sent\"\n              defaultMessage=\"An email has been sent to {email}. Follow the directions in the email to reset your password.\"\n              values={{ email: <tt>{this.state.email}</tt> }}\n              description=\"Notification that the email with password reset instructions has been sent\" /></center>\n          </>\n        :\n          <>\n            <label htmlFor=\"inputEmail\">\n              <FormattedMessage id=\"label_reset_password\"\n                defaultMessage=\"Send a password reset email:\"\n                description=\"Label for password reset field\" />\n            </label>\n            <FormattedMessage id=\"credential_email_prompt\" defaultMessage=\"Your registration email\"\n              description=\"Placeholder for entering email\">{\n              (placeholder) => <input type=\"email\" id=\"inputEmail\"\n                placeholder={placeholder}\n                autoComplete=\"email\"\n                value={this.state.email}\n                onChange={this.handleEmailChange}\n                required autoFocus />\n            }</FormattedMessage>\n          </>\n        }\n        <div className=\"dialog-buttons\">\n          <button className=\"primary\" type=\"submit\">{\n            (this.state.token && this.state.scheme) ?\n            <FormattedMessage id=\"button_reset\" defaultMessage=\"Reset\" description=\"Button [Reset]\" />\n            : this.state.sent ?\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\"\n              description=\"Button [OK]\" />\n            :\n            <FormattedMessage id=\"button_send_request\" defaultMessage=\"Send request\"\n              description=\"Button [Send request]\" />\n          }</button>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react';\n\nimport { KNOWN_HOSTS } from '../config.js';\n\n/* Combobox for selecting host name */\n\nexport default class HostSelector extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hostName: props.serverAddress,\n      changed: false\n    };\n\n    this.handleHostNameChange = this.handleHostNameChange.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handleHostNameChange(e) {\n    this.setState({hostName: e.target.value, changed: true});\n  }\n\n  handleEditingFinished() {\n    if (this.state.changed) {\n      this.setState({changed: false});\n      this.props.onServerAddressChange(this.state.hostName.trim());\n    }\n  }\n\n  render() {\n    var hostOptions = [];\n    for (let key in KNOWN_HOSTS) {\n      let item = KNOWN_HOSTS[key];\n      hostOptions.push(\n        <option key={item} value={item} />\n      );\n    }\n    return (\n      <div className=\"panel-form-row\">\n        <input type=\"search\" id=\"host-name\" placeholder={this.props.hostName} list=\"known-hosts\"\n          className=\"quoted\" value={this.state.hostName} onChange={this.handleHostNameChange}\n          onBlur={this.handleEditingFinished} required />\n        <datalist id=\"known-hosts\">\n          {hostOptions}\n        </datalist>\n      </div>\n    );\n  }\n}\n","// Tinode config panel.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport HostSelector from '../widgets/host-selector.jsx';\n\nexport default class SettingsView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transport: props.transport || 'def',\n      serverAddress: props.serverAddress,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleTransportSelected = this.handleTransportSelected.bind(this);\n    this.handleServerAddressChange = this.handleServerAddressChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onUpdate({\n      transport: this.state.transport,\n      serverAddress: this.state.serverAddress\n    });\n  }\n\n  handleTransportSelected(e) {\n    this.setState({transport: e.currentTarget.value});\n  }\n\n  handleServerAddressChange(name) {\n    this.setState({serverAddress: name});\n  }\n\n  render() {\n    const names = {def: \"default\", ws: \"websocket\", lp: \"long polling\"};\n    const transportOptions = [];\n    ['def', 'ws', 'lp'].map((item) => {\n      const id = 'transport-' + item;\n      const name = names[item];\n      transportOptions.push(\n        <li key={item}>\n          <input type=\"radio\" id={id} name=\"transport-select\" value={item}\n            checked={this.state.transport === item}\n            onChange={this.handleTransportSelected} />\n          <label htmlFor={id}>{name}</label>\n        </li>\n      );\n    });\n\n    return (\n      <form id=\"settings-form\" className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_server_to_use\" defaultMessage=\"Server to use:\"\n              description=\"Label for server selector in SettingsView\" />\n          </label>\n        </div>\n        <HostSelector serverAddress={this.state.serverAddress}\n          onServerAddressChange={this.handleServerAddressChange} />\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_wire_transport\" defaultMessage=\"Wire transport:\"\n              description=\"Label for wire transport selection in SettingsView\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ul className=\"quoted\">\n            {transportOptions}\n          </ul>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button type=\"submit\" className=\"primary\">\n            <FormattedMessage id=\"button_update\" defaultMessage=\"Update\"\n              description=\"Button [Update]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// ValidationView: panel for confirming credentials, like email or phone.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  phone: {\n    id: 'phone_dative',\n    defaultMessage: 'phone',\n    description: \"Dative case of 'phone', i.e. 'phone' in 'by phone'\",\n  },\n  email: {\n    id: 'email_dative',\n    defaultMessage: 'email',\n    description: \"Dative case of 'email', i.e. 'email' in 'by email'\",\n  }\n});\n\nclass ValidationView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      code: props.credCode || ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({code: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    } else if (e.key == 'Escape') {\n      this.handleCancel(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.code && this.state.code.trim()) {\n      this.props.onSubmit(this.props.credMethod, this.state.code.trim());\n    }\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel();\n  }\n\n\n  render() {\n    const { formatMessage } = this.props.intl;\n    const methods = {'email': formatMessage(messages.email), 'tel': formatMessage(messages.phone)};\n    let method = methods[this.props.credMethod] || this.props.credMethod;\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\" htmlFor=\"enter-confirmation-code\">\n            <FormattedMessage id=\"enter_confirmation_code_prompt\"\n              defaultMessage=\"Enter confirmation code sent to you by {method}:\"\n              description=\"Request to enter confirmation code\"\n              values={{method: method}} />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"numeric_confirmation_code_prompt\"\n          defaultMessage=\"Numbers only\" description=\"Prompt for numeric conformation code\">{\n          (numbers_only) => <input type=\"text\" id=\"enter-confirmation-code\"\n            placeholder={numbers_only}\n            value={this.state.code} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"secondary\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_confirm\" defaultMessage=\"Confirm\" description=\"Button [Confirm]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ValidationView);\n","import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport SideNavbar from '../widgets/side-navbar.jsx';\nimport TopicCommon from '../widgets/topic-common.jsx';\n\nimport AccountSettingsView from './account-settings-view.jsx';\nimport ContactsView from './contacts-view.jsx';\nimport CreateAccountView from './create-account-view.jsx';\nimport AccNotificationsView from './acc-notifications-view.jsx';\nimport AccSecurityView from './acc-security-view.jsx';\nimport AccSupportView from './acc-support-view.jsx';\nimport LoginView from './login-view.jsx';\nimport NewTopicView from './new-topic-view.jsx';\nimport PasswordResetView from './password-reset-view.jsx';\nimport SettingsView from './settings-view.jsx';\nimport ValidationView from './validation-view.jsx';\n\n// Panel titles for translation.\nconst messages = defineMessages({\n  login: {\n    id: 'sidepanel_title_login',\n    description: 'Sidepanel title for LoginView.',\n    defaultMessage: 'Sign In'\n  },\n  register: {\n    id: 'sidepanel_title_register',\n    description: 'Sidepanel title for CreateAccountView.',\n    defaultMessage: 'Create Account'\n  },\n  settings: {\n    id: 'sidepanel_title_settings',\n    description: 'Sidepanel title for SettingsView.',\n    defaultMessage: 'Settings'\n  },\n  edit: {\n    id: 'sidepanel_title_account_settings',\n    description: 'Sidepanel title for AccountSettingsView.',\n    defaultMessage: 'Account Settings'\n  },\n  general: {\n    id: 'panel_title_general',\n    description: 'Title for TopicCommon.',\n    defaultMessage: 'General'\n  },\n  security: {\n    id: 'panel_title_security',\n    description: 'Title for TopicSecirity and AccSecurity.',\n    defaultMessage: 'Security'\n  },\n  crop: {\n    id: 'panel_title_crop',\n    description: 'Title for AvatarCropView.',\n    defaultMessage: 'Drag to Adjust'\n  },\n  notif: {\n    id: 'sidepanel_title_acc_notifications',\n    description: 'Sidepanel title for AccNotificationsView.',\n    defaultMessage: 'Notifications'\n  },\n  support: {\n    id: 'sidepanel_title_acc_support',\n    description: 'Sidepanel title for AccSupportView.',\n    defaultMessage: 'Support'\n  },\n  newtpk: {\n    id: 'sidepanel_title_newtpk',\n    description: 'Sidepanel title for NewTopicView.',\n    defaultMessage: 'Start New Chat'\n  },\n  cred: {\n    id: 'sidepanel_title_cred',\n    description: 'Sidepanel title for ValidationView.',\n    defaultMessage: 'Confirm Credentials'\n  },\n  reset: {\n    id: 'sidepanel_title_reset',\n    description: 'Sidepanel title for PasswordResetView.',\n    defaultMessage: 'Reset Password'\n  },\n  archive: {\n    id: 'sidepanel_title_archive',\n    description: 'Sidepanel title for ContactsView-Archive.',\n    defaultMessage: 'Archived Chats'\n  },\n  blocked: {\n    id: 'sidepanel_title_blocked',\n    description: 'Sidepanel title for ContactsView-Blocked.',\n    defaultMessage: 'Blocked Chats'\n  }\n});\n\nclass SidepanelView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNewTopic = this.handleNewTopic.bind(this);\n  }\n\n  handleNewTopic() {\n    this.props.onNavigate('newtpk');\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const view = this.props.state || (this.props.myUserId ? 'contacts' : 'login');\n\n    let title, avatar, badges;\n    if (view == 'contacts') {\n      title = this.props.title;\n      avatar = this.props.avatar ? this.props.avatar : true;\n      badges = this.props.trustedBadges;\n    } else {\n      title = formatMessage(messages[view]);\n      avatar = false;\n      badges = null;\n    }\n\n    let onCancel;\n    if (['login', 'contacts'].indexOf(view) == -1) {\n      onCancel = this.props.onCancel;\n    }\n\n    return (\n      <div id=\"sidepanel\" className={this.props.hideSelf ? 'nodisplay' : null}>\n        <SideNavbar\n          state={view}\n          title={title}\n          avatar={avatar}\n          tinode={this.props.tinode}\n          trustedBadges={badges}\n          myUserId={this.props.myUserId}\n          onSignUp={this.props.onSignUp}\n          onSettings={this.props.onSettings}\n          onNewTopic={this.handleNewTopic}\n          onCancel={onCancel} />\n\n        <ErrorPanel\n          level={this.props.errorLevel}\n          text={this.props.errorText}\n          action={this.props.errorAction}\n          actionText={this.props.errorActionText}\n          onClearError={this.props.onError} />\n\n        <LoadSpinner show={this.props.loadSpinnerVisible} />\n\n        {view === 'login' ?\n          <LoginView\n            login={this.props.login}\n            disabled={this.props.loginDisabled}\n            persist={this.props.persist}\n            onLogin={this.props.onLoginRequest}\n            onPersistenceChange={this.props.onPersistenceChange} /> :\n\n          view === 'register' ?\n          <CreateAccountView\n            tinode={this.props.tinode}\n            onCreateAccount={this.props.onCreateAccount}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'settings' ?\n          <SettingsView\n            transport={this.props.transport}\n            serverAddress={this.props.serverAddress}\n            onCancel={this.props.onCancel}\n            onUpdate={this.props.onGlobalSettings} /> :\n\n          view === 'edit' ?\n          <AccountSettingsView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            trustedBadges={this.props.trustedBadges}\n            onNavigate={this.props.onNavigate} /> :\n\n          (view === 'general' || view === 'crop') ?\n          <TopicCommon\n            topic=\"me\"\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            onUpdateTopicDesc={this.props.onUpdateAccountDesc}\n            onUpdateTags={this.props.onUpdateAccountTags}\n            onCredAdd={this.props.onCredAdd}\n            onCredDelete={this.props.onCredDelete}\n            onCredConfirm={this.props.onCredConfirm}\n            onError={this.props.onError} /> :\n\n          view === 'notif' ?\n          <AccNotificationsView\n            messageSounds={this.props.messageSounds}\n            desktopAlerts={this.props.desktopAlerts}\n            desktopAlertsEnabled={this.props.desktopAlertsEnabled}\n            incognitoMode={this.props.incognitoMode}\n            onTogglePushNotifications={this.props.onTogglePushNotifications}\n            onToggleMessageSounds={this.props.onToggleMessageSounds}\n            onToggleIncognitoMode={this.props.onToggleIncognitoMode} /> :\n\n          view === 'security' ?\n          <AccSecurityView\n            tinode={this.props.tinode}\n            onUpdateAccountDesc={this.props.onUpdateAccountDesc}\n            onUpdatePassword={this.props.onUpdatePassword}\n            onLogout={this.props.onLogout}\n            onDeleteAccount={this.props.onDeleteAccount}\n            onShowAlert={this.props.onShowAlert}\n            onShowBlocked={this.props.onShowBlocked} /> :\n\n          view === 'support' ?\n          <AccSupportView\n            serverAddress={this.props.serverAddress}\n            serverVersion={this.props.serverVersion} /> :\n\n          (view === 'contacts' || view == 'archive' || view == 'blocked') ?\n          <ContactsView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            connected={this.props.connected}\n            topicSelected={this.props.topicSelected}\n            archive={view == 'archive'}\n            blocked={view == 'blocked'}\n            chatList={this.props.chatList}\n            showContextMenu={this.props.showContextMenu}\n            onTopicSelected={this.props.onTopicSelected}\n            onShowArchive={this.props.onShowArchive} /> :\n\n          view === 'newtpk' ?\n          <NewTopicView\n            tinode={this.props.tinode}\n            searchResults={this.props.searchResults}\n            onInitFind={this.props.onInitFind}\n            onSearchContacts={this.props.onSearchContacts}\n            onCreateTopic={this.props.onCreateTopic}\n            onError={this.props.onError} /> :\n\n          view === 'cred' ?\n          <ValidationView\n            credCode={this.props.credCode}\n            credMethod={this.props.credMethod}\n            onSubmit={this.props.onValidateCredentials}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'reset' ?\n          <PasswordResetView\n            onRequest={this.props.onPasswordResetRequest}\n            onReset={this.props.onResetPassword}\n            onCancel={this.props.onCancel} /> :\n          null}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SidepanelView);\n","import { KNOWN_HOSTS, DEFAULT_HOST } from '../config.js';\n\n// Detect server address from the URL\nexport function detectServerAddress() {\n  let host = DEFAULT_HOST;\n  if (typeof window.location == 'object') {\n    if (window.location.protocol == 'file:' || window.location.hostname == 'localhost') {\n      host = KNOWN_HOSTS.local;\n    } else if (window.location.hostname) {\n      host = window.location.hostname + (window.location.port ? ':' + window.location.port : '');\n    }\n  }\n  return host;\n}\n\n// Detect if the page is served over HTTPS.\nexport function isSecureConnection() {\n  if (typeof window.location == 'object') {\n    return window.location.protocol == 'https:';\n  }\n  return false;\n}\n\nexport function isLocalHost() {\n  if (typeof window.location == 'object') {\n    return window.location.hostname == 'localhost';\n  }\n  return false;\n}\n","// The top-level class to hold all functionality together.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport * as firebase from 'firebase/app';\nimport 'firebase/messaging';\n\nimport Tinode from 'tinode-sdk';\n\nimport Alert from '../widgets/alert.jsx';\nimport ContextMenu from '../widgets/context-menu.jsx';\n\nimport InfoView from './info-view.jsx';\nimport MessagesView from './messages-view.jsx';\nimport SidepanelView from './sidepanel-view.jsx';\n\nimport { API_KEY, APP_NAME, DEFAULT_P2P_ACCESS_MODE, LOGGING_ENABLED,\n  MEDIA_BREAKPOINT, RECEIVED_DELAY } from '../config.js';\nimport { PACKAGE_VERSION } from '../version.js';\nimport { base64ReEncode, makeImageUrl } from '../lib/blob-helpers.js';\nimport { detectServerAddress, isLocalHost, isSecureConnection } from '../lib/host-name.js';\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { secondsToTime } from '../lib/strformat.js'\nimport { updateFavicon } from '../lib/utils.js';\n\n// Sound to play on message received.\nconst POP_SOUND = new Audio('audio/msg.mp3');\n\nconst messages = defineMessages({\n  reconnect_countdown: {\n    id: 'reconnect_countdown',\n    defaultMessage: 'Disconnected. Reconnecting in {seconds}…',\n    description: 'Message shown when an app update is available.'\n  },\n  reconnect_now: {\n    id: 'reconnect_now',\n    defaultMessage: 'Try now',\n    description: 'Prompt for reconnecting now'\n  },\n  push_init_failed: {\n    id: 'push_init_failed',\n    defaultMessage: 'Failed to initialize push notifications',\n    description: 'Error message when push notifications have failed to initialize.'\n  },\n  invalid_security_token: {\n    id: 'invalid_security_token',\n    defaultMessage: 'Invalid security token',\n    description: 'Error message when resetting password.'\n  },\n  no_connection: {\n    id: 'no_connection',\n    defaultMessage: 'No connection',\n    description: 'Warning that the user is offline.'\n  },\n  code_doesnot_match: {\n    id: 'code_doesnot_match',\n    defaultMessage: 'Code does not match',\n    description: 'Error message when the credential validation code is incorrect.'\n  },\n  menu_item_info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  }\n});\n\nclass TinodeWeb extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selfRef = React.createRef();\n\n    this.state = this.getBlankState();\n\n    this.handleResize = this.handleResize.bind(this);\n    this.handleHashRoute = this.handleHashRoute.bind(this);\n    this.handleOnline = this.handleOnline.bind(this);\n    this.checkForAppUpdate = this.checkForAppUpdate.bind(this);\n    this.handleVisibilityEvent = this.handleVisibilityEvent.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.handleLoginRequest = this.handleLoginRequest.bind(this);\n    this.handlePersistenceChange = this.handlePersistenceChange.bind(this);\n    this.handleConnected = this.handleConnected.bind(this);\n    this.handleAutoreconnectIteration = this.handleAutoreconnectIteration.bind(this);\n    this.doLogin = this.doLogin.bind(this);\n    this.handleCredentialsRequest = this.handleCredentialsRequest.bind(this);\n    this.handleLoginSuccessful = this.handleLoginSuccessful.bind(this);\n    this.handleDisconnect = this.handleDisconnect.bind(this);\n    this.tnMeMetaDesc = this.tnMeMetaDesc.bind(this);\n    this.tnMeContactUpdate = this.tnMeContactUpdate.bind(this);\n    this.tnMeSubsUpdated = this.tnMeSubsUpdated.bind(this);\n    this.resetContactList = this.resetContactList.bind(this);\n    this.tnData = this.tnData.bind(this);\n    this.tnInitFind = this.tnInitFind.bind(this);\n    this.tnFndSubsUpdated = this.tnFndSubsUpdated.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleTopicSelected = this.handleTopicSelected.bind(this);\n    this.handleHideMessagesView = this.handleHideMessagesView.bind(this);\n    this.handleSendMessage = this.handleSendMessage.bind(this);\n    this.handleNewChatInvitation = this.handleNewChatInvitation.bind(this);\n    this.handleNewAccount = this.handleNewAccount.bind(this);\n    this.handleNewAccountRequest = this.handleNewAccountRequest.bind(this);\n    this.handleUpdatePasswordRequest = this.handleUpdatePasswordRequest.bind(this);\n    this.handleUpdateAccountTagsRequest = this.handleUpdateAccountTagsRequest.bind(this);\n    this.handleToggleIncognitoMode = this.handleToggleIncognitoMode.bind(this);\n    this.handleSettings = this.handleSettings.bind(this);\n    this.handleGlobalSettings = this.handleGlobalSettings.bind(this);\n    this.handleShowArchive = this.handleShowArchive.bind(this);\n    this.handleShowBlocked = this.handleShowBlocked.bind(this);\n    this.handleToggleMessageSounds = this.handleToggleMessageSounds.bind(this);\n    this.handleCredAdd = this.handleCredAdd.bind(this);\n    this.handleCredDelete = this.handleCredDelete.bind(this);\n    this.handleCredConfirm = this.handleCredConfirm.bind(this);\n    this.initFCMessaging = this.initFCMessaging.bind(this);\n    this.togglePushToken = this.togglePushToken.bind(this);\n    this.requestPushToken = this.requestPushToken.bind(this);\n    this.handlePushMessage = this.handlePushMessage.bind(this);\n    this.handleSidepanelCancel = this.handleSidepanelCancel.bind(this);\n    this.handleStartTopicRequest = this.handleStartTopicRequest.bind(this);\n    this.handleNewTopicCreated = this.handleNewTopicCreated.bind(this);\n    this.handleTopicUpdateRequest = this.handleTopicUpdateRequest.bind(this);\n    this.handleUnarchive = this.handleUnarchive.bind(this);\n    this.handleChangePermissions = this.handleChangePermissions.bind(this);\n    this.handleTagsUpdateRequest = this.handleTagsUpdateRequest.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n    this.handleDeleteTopicRequest = this.handleDeleteTopicRequest.bind(this);\n    this.handleDeleteMessagesRequest = this.handleDeleteMessagesRequest.bind(this);\n    this.handleLeaveUnsubRequest = this.handleLeaveUnsubRequest.bind(this);\n    this.handleBlockTopicRequest = this.handleBlockTopicRequest.bind(this);\n    this.handleReportTopic = this.handleReportTopic.bind(this);\n    this.handleShowContextMenu = this.handleShowContextMenu.bind(this);\n    this.defaultTopicContextMenu = this.defaultTopicContextMenu.bind(this);\n    this.handleHideContextMenu = this.handleHideContextMenu.bind(this);\n    this.handleShowAlert = this.handleShowAlert.bind(this);\n    this.handleShowInfoView = this.handleShowInfoView.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleValidateCredentialsRequest = this.handleValidateCredentialsRequest.bind(this);\n    this.handlePasswordResetRequest = this.handlePasswordResetRequest.bind(this);\n    this.handleResetPassword = this.handleResetPassword.bind(this);\n    this.handleContextMenuAction = this.handleContextMenuAction.bind(this);\n  }\n\n  getBlankState() {\n    const settings = LocalStorageUtil.getObject('settings') || {};\n    const persist = !!LocalStorageUtil.getObject('keep-logged-in');\n\n    return {\n      connected: false,\n      // Connected and subscribed to 'me'\n      ready: false,\n      // Try to re-login on new connection.\n      autoLogin: false,\n      transport: settings.transport || null,\n      serverAddress: settings.serverAddress || detectServerAddress(),\n      serverVersion: \"no connection\",\n      // \"On\" is the default, so saving the \"off\" state.\n      messageSounds: !settings.messageSoundsOff,\n      incognitoMode: false,\n      desktopAlerts: persist && settings.desktopAlerts,\n      desktopAlertsEnabled: (isSecureConnection() || isLocalHost()) &&\n        (typeof firebase != 'undefined') && (typeof navigator != 'undefined') &&\n        (typeof FIREBASE_INIT != 'undefined'),\n      firebaseToken: persist ? LocalStorageUtil.getObject('firebase-token') : null,\n\n      applicationVisible: !document.hidden,\n\n      errorText: '',\n      errorLevel: null,\n      errorAction: undefined,\n      errorActionText: null,\n\n      sidePanelSelected: 'login',\n      sidePanelTitle: null,\n      sidePanelAvatar: null,\n      myTrustedBadges: [],\n      loadSpinnerVisible: false,\n\n      login: '',\n      password: '',\n      persist: persist,\n      myUserId: null,\n      liveConnection: navigator.onLine,\n      topicSelected: '',\n      topicSelectedOnline: false,\n      topicSelectedAcs: null,\n      newTopicParams: null,\n      loginDisabled: false,\n      displayMobile: (window.innerWidth <= MEDIA_BREAKPOINT),\n      infoPanel: undefined,\n      mobilePanel: 'sidepanel',\n\n      contextMenuVisible: false,\n      contextMenuBounds: null,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuItems: [],\n\n      // Modal alert dialog.\n      alertVisible: false,\n      alertParams: {},\n\n      // Chats as shown in the ContactsView\n      chatList: [],\n      // Contacts returned by a search query.\n      searchResults: [],\n      // Merged results of a search query and p2p chats.\n      searchableContacts: [],\n      credMethod: undefined,\n      credCode: undefined,\n      // Topic to go to after login.\n      requestedTopic: undefined\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    window.addEventListener('online', (e) => { this.handleOnline(true); });\n    window.addEventListener('offline', (e) => { this.handleOnline(false); });\n    window.addEventListener('hashchange', this.handleHashRoute);\n\n    // Process background notifications from the service worker.\n    if (typeof BroadcastChannel == 'function') {\n      const serviceWorkerChannel = new BroadcastChannel('tinode-sw');\n      serviceWorkerChannel.addEventListener('message', this.handlePushMessage);\n    } else {\n      // Safari is broken by design.\n      console.warn(\"Your browser does not support BroadcastChannel. Some features will not be available\");\n    }\n\n    // Window/tab visible or invisible for pausing timers.\n    document.addEventListener('visibilitychange', this.handleVisibilityEvent);\n\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n\n    new Promise((resolve, reject) => {\n      this.tinode = TinodeWeb.tnSetup(this.state.serverAddress, this.state.transport,\n        this.props.intl.locale, this.state.persist, resolve);\n      this.tinode.onConnect = this.handleConnected;\n      this.tinode.onDisconnect = this.handleDisconnect;\n      this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n    }).then(() => {\n      // Initialize desktop alerts.\n      if (this.state.desktopAlertsEnabled) {\n        this.initFCMessaging().then(() => {\n          if (this.state.desktopAlerts) {\n            if (!this.state.firebaseToken) {\n              this.togglePushToken(true);\n            } else {\n              this.tinode.setDeviceToken(this.state.firebaseToken);\n            }\n          }\n        }).catch(() => {\n          // do nothing: handled earlier.\n          // catch needed to pervent unnecessary logging of error.\n        });\n      }\n\n      // Parse and save the hash navigation params.\n      const parsedNav = HashNavigation.parseUrlHash(window.location.hash);\n\n      // Read contacts from cache.\n      this.resetContactList();\n\n      const token = this.state.persist ? LocalStorageUtil.getObject('auth-token') : undefined;\n      if (token) {\n        this.setState({autoLogin: true});\n\n        // When reading from storage, date is returned as string.\n        token.expires = new Date(token.expires);\n        this.tinode.setAuthToken(token);\n        this.tinode.connect().catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n      }\n\n      // Save possible topic name and navigate to blank state.\n      this.setState({requestedTopic: parsedNav.path[1]});\n      HashNavigation.navigateTo('');\n\n      this.readTimer = null;\n      this.readTimerCallback = null;\n\n      this.handleHashRoute();\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n    window.removeEventListener('hashchange', this.handleHashRoute);\n    document.removeEventListener('visibilitychange', this.handleVisibilityEvent);\n  }\n\n  // Setup transport (usually websocket) and server address. This will terminate connection with the server.\n  static tnSetup(serverAddress, transport, locale, persistentCache, onSetupCompleted) {\n    const tinode = new Tinode({appName: APP_NAME, host: serverAddress, apiKey: API_KEY, transport: transport,\n      secure: isSecureConnection(), persist: persistentCache}, onSetupCompleted);\n    tinode.setHumanLanguage(locale);\n    tinode.enableLogging(LOGGING_ENABLED, true);\n    return tinode;\n  }\n\n  // Notifiy Tinode that a push message was received from the server.\n  handlePushMessage(data) {\n    if (data.what == 'msg' && Tinode.isChannelTopicName(data.topic)) {\n      // The last argument is a fake user Id: otherwise the update is seen as one from the current user.\n      this.tinode.oobNotification(data.topic, data.seq, 'fake-uid');\n    }\n  }\n\n  initFCMessaging() {\n    const {formatMessage, locale} = this.props.intl;\n    const onError = (msg, err) => {\n      console.error(msg, err);\n      this.handleError(formatMessage(messages.push_init_failed), 'err');\n      this.setState({desktopAlertsEnabled: false});\n    }\n\n    try {\n      this.fbPush = firebase.initializeApp(FIREBASE_INIT, APP_NAME).messaging();\n      this.fbPush.usePublicVapidKey(FIREBASE_INIT.messagingVapidKey);\n\n      return navigator.serviceWorker.register('/service-worker.js').then((reg) => {\n        this.checkForAppUpdate(reg);\n        this.fbPush.useServiceWorker(reg);\n        reg.active.postMessage(JSON.stringify({locale: locale, version: PACKAGE_VERSION}));\n\n        // Google could not be bothered to mention that onTokenRefresh is never called.\n        this.fbPush.onTokenRefresh(() => {\n          this.requestPushToken();\n        });\n\n        // Handhe FCM pushes\n        // (a) for channels always,\n        // (b) pushes when the app is in foreground but has not focus.\n        this.fbPush.onMessage(payload => { this.handlePushMessage(payload.data); });\n\n        return reg;\n      }).catch((err) => {\n        // registration failed :(\n        onError(\"Failed to register service worker:\", err);\n        return Promise.reject(err);\n      });\n    } catch (err) {\n      onError(\"Failed to initialize push notifications\", err);\n      return Promise.reject(err);\n    }\n  }\n\n  handleResize() {\n    const mobile = document.documentElement.clientWidth <= MEDIA_BREAKPOINT;\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n    if (this.state.displayMobile != mobile) {\n      this.setState({displayMobile: mobile});\n    }\n  }\n\n  // Check if a newer version of TinodeWeb app is available at the server.\n  checkForAppUpdate(reg) {\n    reg.onupdatefound = () => {\n      const installingWorker = reg.installing;\n      installingWorker.onstatechange = () => {\n        if (installingWorker.state == 'installed' && navigator.serviceWorker.controller) {\n          const msg = <>\n            <FormattedMessage id=\"update_available\"\n              defaultMessage=\"Update available.\"\n              description=\"Message shown when an app update is available.\" /> <a href=\"\">\n              <FormattedMessage id=\"reload_update\"\n                defaultMessage=\"Reload\"\n                description=\"Call to action to reload application when update is available.\" />\n            </a>.</>;\n          this.handleError(msg, 'info');\n        }\n      }\n    }\n  }\n\n  // Handle for hashchange event: display appropriate panels.\n  handleHashRoute() {\n    const hash = HashNavigation.parseUrlHash(window.location.hash);\n    if (hash.path && hash.path.length > 0) {\n      // Left-side panel selector.\n      if (['register','settings','edit','notif','security','support','general','crop',\n          'cred','reset','newtpk','archive','blocked','contacts',''].includes(hash.path[0])) {\n        this.setState({sidePanelSelected: hash.path[0]});\n      } else {\n        console.warn(\"Unknown sidepanel view\", hash.path[0]);\n      }\n\n      // Topic for MessagesView selector.\n      let topicName = hash.path[1] || null;\n      if (topicName != this.state.topicSelected) {\n        if (!Tinode.topicType(topicName)) {\n          // Clear invalid topic name.\n          topicName = null;\n        }\n        const newState = {\n          topicSelected: topicName\n        };\n        const acs = this.tinode.getTopicAccessMode(topicName);\n        if (acs) {\n          newState.topicSelectedAcs = acs;\n        }\n        this.setState(newState);\n      }\n    } else {\n      // Empty hashpath\n      this.setState({sidePanelSelected: '', topicSelected: null});\n    }\n\n    // Save validation credentials, if available.\n    if (hash.params.method) {\n      this.setState({ credMethod: hash.params.method });\n    }\n    if (hash.params.code) {\n      this.setState({ credCode: hash.params.code });\n    }\n\n    // Additional parameters of panels.\n    this.setState({\n      infoPanel: hash.params.info,\n      newTopicTabSelected: hash.params.tab\n    });\n  }\n\n  handleOnline(online) {\n    if (online) {\n      this.handleError();\n      clearInterval(this.reconnectCountdown);\n      this.tinode.reconnect();\n    } else {\n      this.handleError(this.props.intl.formatMessage(messages.no_connection), 'warn');\n    }\n    this.setState({liveConnection: online});\n  }\n\n  handleVisibilityEvent() {\n    this.setState({applicationVisible: !document.hidden});\n  }\n\n  handleError(err, level, action, actionText) {\n    this.setState({errorText: err, errorLevel: level, errorAction: action, errorActionText: actionText});\n  }\n\n  // User clicked Login button in the side panel.\n  handleLoginRequest(login, password) {\n    this.setState({\n      loginDisabled: true,\n      login: login,\n      password: password,\n      loadSpinnerVisible: true,\n      autoLogin: true\n    });\n    this.handleError('', null);\n\n    if (this.tinode.isConnected()) {\n      this.doLogin(login, password, {meth: this.state.credMethod, resp: this.state.credCode});\n    } else {\n      this.tinode.connect().catch((err) => {\n        // Socket error\n        this.setState({loginDisabled: false, autoLogin: false, loadSpinnerVisible: false});\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // Enable or disable saving the password and IndexedDB.\n  handlePersistenceChange(persist) {\n    if (persist) {\n      this.tinode.initStorage().then(() => {\n        LocalStorageUtil.setObject('keep-logged-in', true);\n        this.setState({persist: true});\n      });\n    } else {\n      this.tinode.clearStorage().then(() => {\n        LocalStorageUtil.setObject('keep-logged-in', false);\n        this.setState({persist: false});\n      });\n    }\n  }\n\n  // Connection succeeded.\n  handleConnected() {\n    // Just to be sure.\n    clearInterval(this.reconnectCountdown);\n    this.handleError();\n\n    const params = this.tinode.getServerInfo();\n    this.setState({\n      serverVersion: params.ver + ' ' + (params.build ? params.build : 'none')\n    });\n\n    if (this.state.autoLogin) {\n      this.doLogin(this.state.login, this.state.password, {meth: this.state.credMethod, resp: this.state.credCode});\n    }\n  }\n\n  // Called for each auto-reconnect iteration.\n  handleAutoreconnectIteration(sec, prom) {\n    clearInterval(this.reconnectCountdown);\n\n    if (sec < 0) {\n      // Clear error\n      this.handleError();\n      return;\n    }\n\n    if (prom) {\n      // Reconnecting now\n      prom.then(() => {\n        // Reconnected: clear error\n        this.handleError();\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n      return;\n    }\n\n    const {formatMessage} = this.props.intl;\n    let count = sec / 1000;\n    count = count | count;\n    this.reconnectCountdown = setInterval(() => {\n      const timeLeft = (count > 99) ? secondsToTime(count) : count;\n      this.handleError(\n        formatMessage(messages.reconnect_countdown, {seconds: timeLeft}),\n        'warn',\n        () => {\n          clearInterval(this.reconnectCountdown);\n          this.tinode.reconnect();\n        },\n        formatMessage(messages.reconnect_now)\n      );\n      count -= 1;\n    }, 1000);\n  }\n\n  // Connection lost\n  handleDisconnect(err) {\n    this.setState({\n      connected: false,\n      ready: false,\n      topicSelectedOnline: false,\n      errorText: err && err.message ? err.message : \"Disconnected\",\n      errorLevel: err && err.message ? 'err' : 'warn',\n      loginDisabled: false,\n      contextMenuVisible: false,\n      serverVersion: \"no connection\"\n    });\n  }\n\n  doLogin(login, password, cred) {\n    if (this.tinode.isAuthenticated()) {\n      // Already logged in. Go to default screen.\n      HashNavigation.navigateTo('');\n      return;\n    }\n    // Sanitize and package credentail.\n    cred = Tinode.credential(cred);\n    // Try to login with login/password. If they are not available, try token. If no token, ask for login/password.\n    let promise = null;\n    let token = this.tinode.getAuthToken();\n    if (login && password) {\n      token = null;\n      this.setState({password: null});\n      promise = this.tinode.loginBasic(login, password, cred);\n    } else if (token) {\n      promise = this.tinode.loginToken(token.token, cred);\n    }\n\n    if (promise) {\n      promise.then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text === 'validate credentials') {\n          this.setState({loadSpinnerVisible: false});\n          if (cred) {\n            this.handleError(this.props.intl.formatMessage(messages.code_doesnot_match), 'warn');\n          }\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful();\n        }\n      }).catch((err) => {\n        // Login failed, report error.\n        this.setState({\n          loginDisabled: false,\n          credMethod: undefined,\n          credCode: undefined,\n          loadSpinnerVisible: false,\n          autoLogin: false\n        });\n        this.handleError(err.message, 'err');\n        if (token) {\n          this.handleLogout();\n        }\n        HashNavigation.navigateTo('');\n      });\n    } else {\n      // No login credentials provided.\n      // Make sure we are on the login page.\n      HashNavigation.navigateTo('');\n      this.setState({loginDisabled: false});\n    }\n  }\n\n  handleCredentialsRequest(params) {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    parsed.path[0] = 'cred';\n    parsed.params['method'] = params.cred[0];\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n  }\n\n  handleLoginSuccessful() {\n    this.handleError();\n\n    // Refresh authentication token.\n    if (LocalStorageUtil.getObject('keep-logged-in')) {\n      LocalStorageUtil.setObject('auth-token', this.tinode.getAuthToken());\n    }\n\n    const goToTopic = this.state.requestedTopic;\n    // Logged in fine, subscribe to 'me' attaching callbacks from the contacts view.\n    const me = this.tinode.getMeTopic();\n    me.onMetaDesc = this.tnMeMetaDesc;\n    me.onContactUpdate = this.tnMeContactUpdate;\n    me.onSubsUpdated = this.tnMeSubsUpdated;\n    this.setState({\n      connected: true,\n      credMethod: undefined,\n      credCode: undefined,\n      myUserId: this.tinode.getCurrentUserID(),\n      autoLogin: true,\n      requestedTopic: undefined,\n    });\n    // Subscribe, fetch topic desc, the list of subscriptions. Messages are not fetched.\n    me.subscribe(\n      me.startMetaQuery().\n        withLaterSub().\n        withDesc().\n        withTags().\n        withCred().\n        build()\n      ).catch((err) => {\n        this.tinode.disconnect();\n        localStorage.removeItem('auth-token');\n        this.handleError(err.message, 'err');\n        HashNavigation.navigateTo('');\n      }).finally(() => {\n        this.setState({loadSpinnerVisible: false});\n      });\n    let urlHash = HashNavigation.setUrlSidePanel(window.location.hash, 'contacts');\n    if (goToTopic) {\n      urlHash = HashNavigation.setUrlTopic(urlHash, goToTopic);\n    }\n    HashNavigation.navigateTo(urlHash);\n  }\n\n  tnMeMetaDesc(desc) {\n    if (desc) {\n      if (desc.public) {\n        this.setState({\n          sidePanelTitle: desc.public.fn,\n          sidePanelAvatar: makeImageUrl(desc.public.photo)\n        });\n      }\n      if (desc.trusted) {\n        const badges = [];\n        for (const [key, val] of Object.entries(desc.trusted)) {\n          if (val) {\n            badges.push(key);\n          }\n        }\n        this.setState({\n          myTrustedBadges: badges,\n        });\n      }\n      if (desc.acs) {\n        this.setState({\n          incognitoMode: !desc.acs.isPresencer()\n        });\n      }\n    }\n  }\n\n  // Reactions to updates to the contact list.\n  tnMeContactUpdate(what, cont) {\n    if (what == 'on' || what == 'off') {\n      this.resetContactList();\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedOnline: (what == 'on')});\n      }\n    } else if (what == 'read') {\n      this.resetContactList();\n    } else if (what == 'msg') {\n      // Check if the topic is archived. If so, don't play a sound.\n      const topic = this.tinode.getTopic(cont.topic);\n      const archived = topic && topic.isArchived();\n\n      // New message received. Maybe the message is from the current user, then unread is 0.\n      if (cont.unread > 0 && this.state.messageSounds && !archived) {\n        // Skip update if the topic is currently open, otherwise the badge will annoyingly flash.\n        if (document.hidden || this.state.topicSelected != cont.topic) {\n          POP_SOUND.play();\n        }\n      }\n      // Reorder contact list to use possibly updated 'touched'.\n      this.resetContactList();\n    } else if (what == 'recv') {\n      // Explicitly ignoring \"recv\" -- it causes no visible updates to contact list.\n    } else if (what == 'gone' || what == 'unsub') {\n      // Topic deleted or user unsubscribed. Remove topic from view.\n      // If the currently selected topic is gone, clear the selection.\n      if (this.state.topicSelected == cont.topic) {\n        this.handleTopicSelected(null);\n      }\n      // Redraw without the deleted topic.\n      this.resetContactList();\n    } else if (what == 'acs') {\n      // Permissions changed. If it's for the currently selected topic,\n      // update the views.\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedAcs: cont.acs});\n      }\n    } else if (what == 'del') {\n      // TODO: messages deleted (hard or soft) -- update pill counter.\n    } else if (what == 'upd') {\n      // upd - handled by the SDK. Explicitly ignoring here.\n    } else {\n      // TODO(gene): handle other types of notifications:\n      // * ua -- user agent changes (maybe display a pictogram for mobile/desktop).\n      console.info(\"Unsupported (yet) presence update:\" + what + \" in: \" + cont.topic);\n    }\n  }\n\n  tnMeSubsUpdated(unused) {\n    this.resetContactList();\n  }\n\n  // Merge search results and contact list to create a single flat\n  // list of known contacts for GroupManager to use.\n  static prepareSearchableContacts(chatList, foundContacts) {\n    const merged = {};\n\n    // For chatList topics merge only p2p topics and convert them to the\n    // same format as foundContacts.\n    for (const c of chatList) {\n      if (Tinode.isP2PTopicName(c.topic)) {\n          merged[c.topic] = {\n            user: c.topic,\n            updated: c.updated,\n            public: c.public,\n            private: c.private,\n            acs: c.acs\n          };\n      }\n    }\n\n    // Add all foundCountacts if they have not been added already.\n    for (const c of foundContacts) {\n      if (!merged[c.user]) {\n        merged[c.user] = c;\n      }\n    }\n\n    return Object.values(merged);\n  }\n\n  resetContactList() {\n    const newState = {\n      chatList: []\n    };\n\n    if (!this.state.ready) {\n      newState.ready = true;\n    }\n\n    this.tinode.getMeTopic().contacts((c) => {\n      if (!c.topic && !c.user) {\n        // Contacts expect c.topic to be set.\n        c.topic = c.name;\n      }\n\n      newState.chatList.push(c);\n      if (this.state.topicSelected == c.topic) {\n        newState.topicSelectedOnline = c.online;\n        newState.topicSelectedAcs = c.acs;\n      }\n    });\n\n    const past = new Date(0);\n    newState.chatList.sort((a, b) => {\n      return (a.touched || past).getTime() - (b.touched || past).getTime();\n    });\n\n    // Merge search results and chat list.\n    newState.searchableContacts = TinodeWeb.prepareSearchableContacts(newState.chatList, this.state.searchResults);\n    this.setState(newState);\n  }\n\n  // Sending \"received\" notifications\n  tnData(data) {\n    const topic = this.tinode.getTopic(data.topic);\n    if (topic.msgStatus(data, true) >= Tinode.MESSAGE_STATUS_SENT && data.from != this.state.myUserId) {\n      clearTimeout(this.receivedTimer);\n      this.receivedTimer = setTimeout(() => {\n        this.receivedTimer = undefined;\n        topic.noteRecv(data.seq);\n      }, RECEIVED_DELAY);\n    }\n  }\n\n  /* Fnd topic: find contacts by tokens */\n  tnInitFind() {\n    const fnd = this.tinode.getFndTopic();\n    fnd.onSubsUpdated = this.tnFndSubsUpdated;\n    if (fnd.isSubscribed()) {\n      this.tnFndSubsUpdated();\n    } else {\n      fnd.subscribe(fnd.startMetaQuery().withSub().build()).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  tnFndSubsUpdated() {\n    const foundContacts = [];\n    // Don't attempt to create P2P topics which already exist. Server will reject the duplicates.\n    this.tinode.getFndTopic().contacts((s) => {\n      foundContacts.push(s);\n    });\n    this.setState({\n      searchResults: foundContacts,\n      searchableContacts: TinodeWeb.prepareSearchableContacts(this.state.chatList, foundContacts)\n    });\n  }\n\n  /** Called when the user enters a contact into the contact search field in the NewAccount panel\n    @param query {Array} is an array of contacts to search for\n   */\n  handleSearchContacts(query) {\n    const fnd = this.tinode.getFndTopic();\n    fnd.setMeta({desc: {public: query}}).then((ctrl) => {\n      return fnd.getMeta(fnd.startMetaQuery().withSub().build());\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  // User clicked on a contact in the side panel or deleted a contact.\n  handleTopicSelected(topicName) {\n    // Clear newTopicParams after use.\n    if (this.state.newTopicParams && this.state.newTopicParams._topicName != topicName) {\n      this.setState({\n        newTopicParams: null\n      });\n    }\n\n    if (topicName) {\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'topic-view',\n        infoPanel: undefined\n      });\n      // Different contact selected.\n      if (this.state.topicSelected != topicName) {\n        this.setState({\n          topicSelectedOnline: this.tinode.isTopicOnline(topicName),\n          topicSelectedAcs: this.tinode.getTopicAccessMode(topicName)\n        });\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', topicName));\n      }\n    } else {\n      // Currently selected contact deleted\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'sidepanel',\n        topicSelectedOnline: false,\n        topicSelectedAcs: null,\n        infoPanel: undefined\n      });\n\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic('', null));\n    }\n  }\n\n  // In mobile view user requested to show sidepanel\n  handleHideMessagesView() {\n    this.setState({\n      mobilePanel: 'sidepanel'\n    });\n    HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, null));\n  }\n\n  // User is sending a message, either plain text or a drafty object, possibly\n  // with attachments.\n  //  - msg - Drafty message with content\n  //  - promise - Promise to be resolved when the upload is completed\n  //  - uploader - for tracking progress\n  //  - head - head dictionary to be attached to the message\n  handleSendMessage(msg, promise, uploader, head) {\n    const topic = this.tinode.getTopic(this.state.topicSelected);\n\n    msg = topic.createMessage(msg, false);\n    // The uploader is used to show progress.\n    msg._uploader = uploader;\n\n    if (head) {\n      msg.head = Object.assign(msg.head || {}, head);\n    }\n\n    if (!topic.isSubscribed()) {\n      // Topic is not subscribed yet. Subscribe.\n      if (!promise) {\n        promise = Promise.resolve();\n      }\n      promise = promise\n        .then(() => topic.subscribe())\n        .then(() => {\n          // If there are unsent messages, try sending them now.\n          topic.queuedMessages((pub) => {\n            if (!pub._sending && topic.isSubscribed()) {\n              this.sendMessage(pub);\n            }\n          });\n        });\n    }\n\n    if (promise) {\n      promise = promise.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n\n    topic.publishDraft(msg, promise)\n      .then((ctrl) => {\n        if (topic.isArchived()) {\n          return topic.archive(false);\n        }\n      })\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleNewChatInvitation(topicName, action) {\n    const topic = this.tinode.getTopic(topicName);\n    let response = null;\n    switch (action) {\n      case 'accept':\n        // Accept given permissions.\n        const mode = topic.getAccessMode().getGiven();\n        response = topic.setMeta({sub: {mode: mode}});\n        if (topic.isP2PType()) {\n          // For P2P topics change 'given' permission of the peer too.\n          // In p2p topics the other user has the same name as the topic.\n          response = response.then((ctrl) => {\n            topic.setMeta({sub: {user: topicName, mode: mode}});\n          });\n        }\n        break;\n      case 'delete':\n        // Ignore invitation by deleting it.\n        response = topic.delTopic(true);\n        break;\n      case 'block':\n        // Ban the topic making futher invites impossible.\n        // Just self-ban.\n        const am = topic.getAccessMode().updateWant('-JP').getWant();\n        response = topic.setMeta({sub: {mode: am}}).then((ctrl) => {\n          return this.handleTopicSelected(null);\n        });\n        break;\n      default:\n        console.warn(\"Unknown invitation action\", '\"' + action + '\"\"');\n    }\n\n    if (response != null) {\n      response.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // User chose a Sign Up menu item.\n  handleNewAccount() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, 'register'));\n  }\n\n  // Actual registration of a new account.\n  handleNewAccountRequest(login_, password_, public_, cred_, tags_) {\n    // Clear old error, if any.\n    this.handleError();\n\n    this.tinode.connect(this.state.serverAddress)\n      .then(() => {\n        return this.tinode.createAccountBasic(login_, password_,\n          {public: public_, tags: tags_, cred: Tinode.credential(cred_)});\n      }).then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text == 'validate credentials') {\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful(this);\n        }\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleToggleIncognitoMode(on) {\n    const me = this.tinode.getMeTopic();\n    const am = me.getAccessMode().updateWant(on ? '-P' : '+P').getWant();\n    me.setMeta({sub: {mode: am}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleUpdateAccountTagsRequest(tags) {\n    this.tinode.getMeTopic().setMeta({tags: tags})\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  // User chose Settings menu item.\n  handleSettings() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'edit' : 'settings'));\n  }\n\n  // User updated global parameters.\n  handleGlobalSettings(settings) {\n    const serverAddress = settings.serverAddress || this.state.serverAddress;\n    const transport = settings.transport || this.state.transport;\n    if (this.tinode) {\n      this.tinode.clearStorage();\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.tinode = TinodeWeb.tnSetup(serverAddress, transport, this.props.intl.locale,\n      LocalStorageUtil.getObject('keep-logged-in'));\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n\n    this.setState({\n      serverAddress: serverAddress,\n      transport: transport\n    });\n    LocalStorageUtil.setObject('settings', {\n      serverAddress: serverAddress,\n      transport: transport\n    });\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, ''));\n  }\n\n  // User chose 'Archived chats'.\n  handleShowArchive() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'archive' : ''));\n  }\n\n  // User viewes 'Blocked chats'.\n  handleShowBlocked() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'blocked' : ''));\n  }\n\n  togglePushToken(enabled) {\n    if (enabled) {\n      if (!this.state.firebaseToken) {\n        const fcm = this.fbPush ?\n          Promise.resolve() :\n          this.initFCMessaging();\n        fcm.then(() => {\n          return this.fbPush.requestPermission();\n        }).then(() => {\n          this.requestPushToken();\n        }).catch((err) => {\n          console.error(\"Failed to get notification permission.\", err);\n          this.handleError(err.message, 'err');\n          this.setState({desktopAlerts: false, firebaseToken: null});\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        });\n      } else {\n        this.setState({desktopAlerts: true});\n        if (LocalStorageUtil.getObject('keep-logged-in')) {\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n        }\n      }\n    } else if (this.state.firebaseToken && this.fbPush) {\n      this.fbPush.deleteToken(this.state.firebaseToken).catch((err) => {\n        console.error(\"Unable to delete token.\", err);\n      }).finally(() => {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        localStorage.removeItem('firebase-token');\n        this.setState({desktopAlerts: false, firebaseToken: null});\n        // Inform the server that the token was deleted.\n        this.tinode.setDeviceToken(null);\n      });\n    } else {\n      this.setState({desktopAlerts: false, firebaseToken: null});\n      LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n    }\n  }\n\n  requestPushToken() {\n    this.fbPush.getToken().then((refreshedToken) => {\n      const persist = LocalStorageUtil.getObject('keep-logged-in');\n      if (refreshedToken != this.state.firebaseToken) {\n        this.tinode.setDeviceToken(refreshedToken);\n        if (persist) {\n          LocalStorageUtil.setObject('firebase-token', refreshedToken);\n        }\n      }\n      this.setState({firebaseToken: refreshedToken, desktopAlerts: true});\n      if (persist) {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n      }\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n      console.error(\"Failed to retrieve firebase token\", err);\n    });\n  }\n\n  handleToggleMessageSounds(enabled) {\n    this.setState({messageSounds: enabled});\n    LocalStorageUtil.updateObject('settings', {\n      messageSoundsOff: !enabled\n    });\n  }\n\n  handleCredAdd(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.setMeta({cred: {meth: method, val: value}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredDelete(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.delCredential(method, value).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredConfirm(method, response) {\n    this.handleCredentialsRequest({cred: [method]});\n  }\n\n  // User clicked Cancel button in Setting or Sign Up panel.\n  handleSidepanelCancel() {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    let path = '';\n    if (['security','support','general','notif'].includes(parsed.path[0])) {\n      path = 'edit';\n    } else if ('crop' == parsed.path[0]) {\n      path = 'general';\n    } else if ('blocked' == parsed.path[0]) {\n      path = 'security';\n    } else if (this.state.myUserId) {\n      path = 'contacts';\n    }\n    parsed.path[0] = path;\n    if (parsed.params) {\n      delete parsed.params.code;\n      delete parsed.params.method;\n      delete parsed.params.tab;\n    }\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n    this.setState({errorText: '', errorLevel: null});\n  }\n\n  // Sidepanel navigator. No need to bind to 'this'.\n  basicNavigator(hash) {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, hash));\n  }\n\n  // Topic info navigator. No need to bind to 'this'.\n  infoNavigator(hash) {\n    HashNavigation.navigateTo(HashNavigation.setUrlInfoPanel(window.location.hash, hash));\n  }\n\n  // Request to start a topic, new or selected from search results, or \"by ID\".\n  handleStartTopicRequest(topicName, newTopicParams, isChannel) {\n    // Check if topic is indeed new. If not, launch it.\n    if (topicName && this.tinode.isTopicCached(topicName)) {\n      this.handleTopicSelected(topicName);\n      return;\n    }\n\n    const params = {};\n    if (Tinode.isP2PTopicName(topicName)) {\n      // Because we are initialing the subscription, set 'want' to all permissions.\n      params.sub = {mode: DEFAULT_P2P_ACCESS_MODE};\n      // Give the other user all permissions too.\n      params.desc = {defacs: {auth: DEFAULT_P2P_ACCESS_MODE}};\n    } else {\n      topicName = topicName || this.tinode.newGroupTopicName(isChannel);\n      params.desc = {public: newTopicParams.public, private: {comment: newTopicParams.private}};\n      params.tags = newTopicParams.tags;\n    }\n    params._topicName = topicName;\n    this.setState({newTopicParams: params}, () => {this.handleTopicSelected(topicName)});\n  }\n\n  // New topic was created, here is the new topic name.\n  handleNewTopicCreated(oldName, newName) {\n    if (this.state.topicSelected == oldName && oldName != newName) {\n      // If the current URl contains the old topic name, replace it with new.\n      // Update the name of the selected topic first so the navigator doen't clear\n      // the state.\n      this.setState({topicSelected: newName}, () => {\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', newName));\n      });\n    }\n  }\n\n  handleTopicUpdateRequest(topicName, pub, priv, defacs) {\n    this.handleError();\n\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const params = {};\n      let attachments;\n      if (pub) {\n        if (pub.photo) {\n          if (pub.photo.ref && pub.photo.ref != Tinode.DEL_CHAR) {\n            attachments = [pub.photo.ref];\n          } else if (!pub.photo.data || pub.photo.data == Tinode.DEL_CHAR) {\n            pub.photo = Tinode.DEL_CHAR;\n          }\n        }\n        params.public = pub;\n      }\n\n      if (typeof priv == 'string') {\n        params.private = (priv === Tinode.DEL_CHAR) ?\n          Tinode.DEL_CHAR : {comment: priv};\n      }\n      if (defacs) {\n        params.defacs = defacs;\n      }\n      topic.setMeta({desc: params, attachments: attachments}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleUnarchive(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      topic.archive(false);\n    }\n  }\n\n  handleUpdatePasswordRequest(password)  {\n    this.handleError();\n\n    if (password) {\n      this.tinode.updateAccountBasic(null, this.tinode.getCurrentLogin(), password).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleChangePermissions(topicName, mode, uid) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const am = topic.getAccessMode();\n      if (uid) {\n        am.updateGiven(mode);\n        mode = am.getGiven();\n      } else {\n        am.updateWant(mode);\n        mode = am.getWant();\n      }\n      topic.setMeta({sub: {user: uid, mode: mode}}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleTagsUpdateRequest(topicName, tags) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      topic.setMeta({tags: tags}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleLogout() {\n    updateFavicon(0);\n\n    // Remove stored data.\n    localStorage.removeItem('auth-token');\n    localStorage.removeItem('firebase-token');\n    localStorage.removeItem('settings');\n    if (this.state.firebaseToken) {\n      this.fbPush.deleteToken(this.state.firebaseToken)\n    }\n\n    clearInterval(this.reconnectCountdown);\n\n    if (this.tinode) {\n      this.tinode.clearStorage();\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.setState(this.getBlankState());\n\n    this.tinode = TinodeWeb.tnSetup(this.state.serverAddress,\n      this.state.transport, this.props.intl.locale, LocalStorageUtil.getObject('keep-logged-in'));\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n    HashNavigation.navigateTo('');\n  }\n\n  handleDeleteAccount() {\n    this.tinode.delCurrentUser(true).then((ctrl) => {\n      this.handleLogout();\n    });\n  }\n\n  handleDeleteTopicRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Request to hard-delete topic.\n    topic.delTopic(true).then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleDeleteMessagesRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Request hard-delete all messages.\n    topic.delMessagesAll(true).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleLeaveUnsubRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.leave(true).then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleBlockTopicRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleReportTopic(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Publish spam report.\n    this.tinode.publish(Tinode.TOPIC_SYS, Tinode.Drafty.attachJSON(null, {\n      'action': 'report',\n      'target': topicName\n    }));\n\n    // Remove J and P permissions.\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleShowContextMenu(params, menuItems) {\n    this.setState({\n      contextMenuVisible: true,\n      contextMenuClickAt: {x: params.x, y: params.y},\n      contextMenuParams: params,\n      contextMenuItems: menuItems || this.defaultTopicContextMenu(params.topicName),\n      contextMenuBounds: this.selfRef.current.getBoundingClientRect()\n    });\n  }\n\n  defaultTopicContextMenu(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n\n    let muted = false, blocked = false, self_blocked = false, subscribed = false, deleter = false, archived = false;\n    if (topic) {\n      subscribed = topic.isSubscribed();\n      archived = topic.isArchived();\n\n      const acs = topic.getAccessMode();\n      if (acs) {\n        muted = acs.isMuted();\n        blocked = !acs.isJoiner();\n        self_blocked = !acs.isJoiner('want');\n        deleter = acs.isDeleter();\n      }\n    }\n\n    return [\n      subscribed ? {\n        title: this.props.intl.formatMessage(messages.menu_item_info),\n        handler: this.handleShowInfoView\n      } : null,\n      subscribed ? 'messages_clear' : null,\n      subscribed && deleter ? 'messages_clear_hard' : null,\n      muted ? (blocked ? null : 'topic_unmute') : 'topic_mute',\n      self_blocked ? 'topic_unblock' : 'topic_block',\n      archived ? 'topic_restore' : 'topic_archive',\n      'topic_delete'\n    ];\n  }\n\n  handleHideContextMenu() {\n    this.setState({\n      contextMenuVisible: false,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuBounds: null\n    });\n  }\n\n  handleContextMenuAction(action, promise, params) {\n    if (action == 'topic_archive') {\n      if (promise && params.topicName && params.topicName == this.state.topicSelected) {\n        promise.then(() => {\n          this.handleTopicSelected(null);\n        });\n      }\n    }\n  }\n\n  handleShowAlert(title, content, onConfirm, confirmText, onReject, rejectText) {\n    this.setState({\n      alertVisible: true,\n      alertParams: {\n        title: title,\n        content: content,\n        onConfirm: onConfirm,\n        confirm: confirmText,\n        onReject: onReject,\n        reject: rejectText\n      }\n    });\n  }\n\n  handleShowInfoView() {\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'info', 'info'));\n    this.setState({infoPanel: 'info'});\n  }\n\n  handleMemberUpdateRequest(topicName, added, removed) {\n    if (!topicName) {\n      return;\n    }\n\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    if (added && added.length > 0) {\n      added.map((uid) => {\n        topic.invite(uid, null).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n\n    if (removed && removed.length > 0) {\n      removed.map((uid) => {\n        topic.delSubscription(uid).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n  }\n\n  handleValidateCredentialsRequest(cred, code) {\n    if (this.tinode.isAuthenticated()) {\n      const me = this.tinode.getMeTopic();\n      me.setMeta({cred: {meth: cred, resp: code}})\n        .then(() => {\n          HashNavigation.navigateTo('');\n        })\n        .catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n    } else {\n      this.setState({credMethod: cred, credCode: code});\n      this.doLogin(null, null, {meth: cred, resp: code});\n    }\n  }\n\n  handlePasswordResetRequest(method, value) {\n    // If already connected, connnect() will return a resolved promise.\n    return this.tinode.connect()\n      .then(() => {\n        return this.tinode.requestResetAuthSecret('basic', method, value);\n      })\n      .catch((err) => {\n        // Socket error\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleResetPassword(scheme, newPassword, token) {\n    token = base64ReEncode(token);\n    if (!token) {\n      this.handleError(this.props.intl.formatMessage(messages.invalid_security_token), 'err');\n    } else {\n      this.tinode.connect()\n        .then(() => {\n          return this.tinode.updateAccountBasic(null, null, newPassword, {token: token});\n        })\n        .catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"app-container\" ref={this.selfRef}>\n        {this.state.contextMenuVisible ?\n          <ContextMenu\n            tinode={this.tinode}\n            bounds={this.state.contextMenuBounds}\n            clickAt={this.state.contextMenuClickAt}\n            params={this.state.contextMenuParams}\n            items={this.state.contextMenuItems}\n            hide={this.handleHideContextMenu}\n            onShowAlert={this.handleShowAlert}\n            onAction={this.handleContextMenuAction}\n            onTopicRemoved={(topicName) => {\n              if (topicName == this.state.topicSelected) {\n                this.handleTopicSelected(null);\n              }\n            }}\n            onError={this.handleError} />\n          :\n          null\n        }\n        <Alert\n          visible={this.state.alertVisible}\n          title={this.state.alertParams.title}\n          content={this.state.alertParams.content}\n          onReject={this.state.alertParams.onReject ? (() => { this.setState({alertVisible: false}); }) : null}\n          reject={this.state.alertParams.reject}\n          onConfirm={() => { this.setState({alertVisible: false}); this.state.alertParams.onConfirm(); }}\n          confirm={this.state.alertParams.confirm}\n          />\n        <SidepanelView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          displayMobile={this.state.displayMobile}\n          hideSelf={this.state.displayMobile && this.state.mobilePanel !== 'sidepanel'}\n          state={this.state.sidePanelSelected}\n          title={this.state.sidePanelTitle}\n          avatar={this.state.sidePanelAvatar}\n          trustedBadges={this.state.myTrustedBadges}\n          login={this.state.login}\n          persist={this.state.persist}\n          myUserId={this.state.myUserId}\n          loginDisabled={this.state.loginDisabled}\n          loadSpinnerVisible={this.state.loadSpinnerVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          topicSelected={this.state.topicSelected}\n          chatList={this.state.chatList}\n          credMethod={this.state.credMethod}\n          credCode={this.state.credCode}\n\n          transport={this.state.transport}\n          messageSounds={this.state.messageSounds}\n          desktopAlerts={this.state.desktopAlerts}\n          desktopAlertsEnabled={this.state.desktopAlertsEnabled}\n          incognitoMode={this.state.incognitoMode}\n          serverAddress={this.state.serverAddress}\n          serverVersion={this.state.serverVersion}\n\n          onGlobalSettings={this.handleGlobalSettings}\n          onSignUp={this.handleNewAccount}\n          onSettings={this.handleSettings}\n          onNavigate={this.basicNavigator}\n          onLoginRequest={this.handleLoginRequest}\n          onPersistenceChange={this.handlePersistenceChange}\n          onCreateAccount={this.handleNewAccountRequest}\n          onUpdateAccountDesc={this.handleTopicUpdateRequest}\n          onUpdatePassword={this.handleUpdatePasswordRequest}\n          onUpdateAccountTags={this.handleUpdateAccountTagsRequest}\n          onTogglePushNotifications={this.togglePushToken}\n          onToggleMessageSounds={this.handleToggleMessageSounds}\n          onToggleIncognitoMode={this.handleToggleIncognitoMode}\n          onCredAdd={this.handleCredAdd}\n          onCredDelete={this.handleCredDelete}\n          onCredConfirm={this.handleCredConfirm}\n          onTopicSelected={this.handleTopicSelected}\n          onCreateTopic={this.handleStartTopicRequest}\n          onLogout={this.handleLogout}\n          onDeleteAccount={this.handleDeleteAccount}\n          onShowAlert={this.handleShowAlert}\n          onCancel={this.handleSidepanelCancel}\n          onError={this.handleError}\n          onValidateCredentials={this.handleValidateCredentialsRequest}\n          onPasswordResetRequest={this.handlePasswordResetRequest}\n          onResetPassword={this.handleResetPassword}\n          onShowArchive={this.handleShowArchive}\n          onShowBlocked={this.handleShowBlocked}\n\n          onInitFind={this.tnInitFind}\n          searchResults={this.state.searchResults}\n          onSearchContacts={this.handleSearchContacts}\n\n          showContextMenu={this.handleShowContextMenu} />\n\n        <MessagesView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          ready={this.state.ready}\n          online={this.state.topicSelectedOnline}\n          acs={this.state.topicSelectedAcs}\n          displayMobile={this.state.displayMobile}\n          viewportWidth={this.state.viewportWidth}\n          viewportHeight={this.state.viewportHeight}\n          hideSelf={this.state.displayMobile &&\n            (this.state.mobilePanel !== 'topic-view' || this.state.infoPanel)}\n          topic={this.state.topicSelected}\n          myUserId={this.state.myUserId}\n          // User public.fn.\n          myUserName={this.state.sidePanelTitle}\n          serverVersion={this.state.serverVersion}\n          serverAddress={this.state.serverAddress}\n          applicationVisible={this.state.applicationVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          newTopicParams={this.state.newTopicParams}\n\n          onHideMessagesView={this.handleHideMessagesView}\n          onData={this.tnData}\n          onError={this.handleError}\n          onNewTopicCreated={this.handleNewTopicCreated}\n          showContextMenu={this.handleShowContextMenu}\n          onChangePermissions={this.handleChangePermissions}\n          onNewChat={this.handleNewChatInvitation}\n          sendMessage={this.handleSendMessage} />\n\n        {this.state.infoPanel ?\n          <InfoView\n            tinode={this.tinode}\n            connected={this.state.connected}\n            displayMobile={this.state.displayMobile}\n            topic={this.state.topicSelected}\n            searchableContacts={this.state.searchableContacts}\n            myUserId={this.state.myUserId}\n            panel={this.state.infoPanel}\n\n            errorText={this.state.errorText}\n            errorLevel={this.state.errorLevel}\n            errorAction={this.state.errorAction}\n            errorActionText={this.state.errorActionText}\n\n            onNavigate={this.infoNavigator}\n            onTopicDescUpdateRequest={this.handleTopicUpdateRequest}\n            onShowAlert={this.handleShowAlert}\n            onChangePermissions={this.handleChangePermissions}\n            onMemberUpdateRequest={this.handleMemberUpdateRequest}\n            onDeleteTopic={this.handleDeleteTopicRequest}\n            onDeleteMessages={this.handleDeleteMessagesRequest}\n            onLeaveTopic={this.handleLeaveUnsubRequest}\n            onBlockTopic={this.handleBlockTopicRequest}\n            onReportTopic={this.handleReportTopic}\n            onAddMember={this.handleManageGroupMembers}\n            onTopicTagsUpdateRequest={this.handleTagsUpdateRequest}\n            onTopicUnArchive={this.handleUnarchive}\n            onInitFind={this.tnInitFind}\n            onError={this.handleError}\n\n            showContextMenu={this.handleShowContextMenu}\n            />\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(TinodeWeb);\n","// Put all packages together.\n// Used to generate umd/index.prod.js\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { IntlProvider } from 'react-intl';\n\nimport allMessages from './messages.json';\nimport TinodeWeb from './views/tinode-web.jsx';\nimport HashNavigation from './lib/navigation.js';\n\n// Detect human language to use in the UI:\n//  Check parameters from URL hash #?hl=ru, then browser, then use 'en' as a fallback.\nconst { params } = HashNavigation.parseUrlHash(window.location.hash);\nconst language = (params && params.hl) ||\n  (navigator.languages && navigator.languages[0]) ||\n  navigator.language ||\n  navigator.userLanguage ||\n  'en';\n\n// Get the base language 'en' from a more specific 'en_GB' or 'en-US' as a partial fallback.\nconst baseLanguage = language.toLowerCase().split(/[-_]/)[0];\n\n// Try the full locale first, then the locale without the region code, fallback to 'en'.\nconst messages =\n  allMessages[language] ||\n  allMessages[baseLanguage] ||\n  allMessages.en;\n\nReactDOM.render(\n  <React.StrictMode>\n    <IntlProvider locale={language} messages={messages} textComponent={React.Fragment}>\n      <TinodeWeb />\n    </IntlProvider>\n  </React.StrictMode>,\n  document.getElementById('mountPoint')\n);\n","// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// startup\n// Load entry module and return exports\n// This entry module doesn't tell about it's top-level declarations so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[617](0, __webpack_exports__, __webpack_require__);\n"],"names":["React","ReactDOM","ReactIntl","firebase","messaging","Tinode","Alert","render","this","props","visible","className","title","content","onReject","onClick","reject","FormattedMessage","id","defaultMessage","onConfirm","confirm","PACKAGE_VERSION","APP_NAME","KNOWN_HOSTS","hosted","local","DEFAULT_HOST","KEYPRESS_DELAY","DEFAULT_P2P_ACCESS_MODE","REM_SIZE","AVATAR_SIZE","MAX_INBAND_ATTACHMENT_SIZE","MAX_EXTERN_ATTACHMENT_SIZE","MAX_IMAGE_DIM","MAX_TITLE_LENGTH","MAX_TOPIC_DESCRIPTION_LENGTH","messages","defineMessages","info","clear_messages","clear_for_all","delete","delete_for_all","send_retry","mute","unmute","reply","topic_delete","topic_delete_warning","delete_messages_warning","unblock","block","topic_block_warning","member_delete","archive","unarchive","edit_permissions","clear_messages_warning","ContextMenu","constructor","super","selfRef","formatMessage","intl","handlePageClick","bind","handleEscapeKey","handleClick","MenuItems","handler","params","errorHandler","onShowAlert","deleteMessages","message","retryMessage","replyToMessage","topicPermissionSetter","then","ctrl","onTopicRemoved","topicName","topic","tinode","getTopic","delTopic","catch","err","console","log","user","delSubscription","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","e","current","contains","target","preventDefault","stopPropagation","hide","keyCode","item","items","currentTarget","dataset","onAction","onError","error","all","hard","cancelSend","seq","delMessagesAll","delMessagesList","flushMessage","msg","createMessage","publishDraft","mode","result","updateMode","pickReply","menu","count","map","push","key","vSize","length","position","left","bounds","right","clickAt","x","top","bottom","y","style","ref","injectIntl","shortDateFormat","locale","window","navigator","userLanguage","language","now","Date","getFullYear","getMonth","getDate","toLocaleTimeString","hour12","hour","minute","toLocaleDateString","month","day","year","bytesToHumanSize","bytes","sizes","bucket","Math","min","floor","log2","pow","round","toFixed","stringToColorHash","value","hash","i","charCodeAt","updateFavicon","oldIcon","getElementById","head","getElementsByTagName","newIcon","createElement","type","rel","href","removeChild","appendChild","theCard","fn","imageUrl","imageMimeType","note","card","trim","mimeType","matches","exec","photo","data","substring","indexOf","arrayEqual","a","b","Array","isArray","sort","l","sanitizeUrl","url","allowedSchemes","replace","test","schemes","join","RegExp","sanitizeImageUrl","sanitizedUrl","deliveryMarker","received","name","color","LetterTile","avatar","isGroup","iconColor","fg","abs","letter","charAt","authorizeURL","alt","src","onerror","LoadSpinner","large","clear","centered","show","AvatarUpload","state","source","handleFileReceived","componentDidUpdate","prevProps","setState","image","files","onImageUpdated","URL","createObjectURL","randId","random","substr","readOnly","uid","accept","onChange","htmlFor","uploading","icon_mapping","badge_verified","badge_staff","badge_danger","BadgeList","badges","trustedBadges","comment","CheckBox","handleChange","checked","ContactBadges","icon","message_sending","message_sending_failed","ReceivedMarker","timestamp","marker","UnreadBadge","drafty_image","drafty_form","drafty_attachment","Contact","handleContextClick","onSelected","index","showContextMenu","pageY","pageX","online","slice","icon_badges","isVerified","isStaff","isDangerous","acs","showMode","getMode","isMuted","isJoiner","subtitle","preview","Drafty","draftyFormatter","showCheckmark","selected","showOnline","isChannel","unread","small","values","el","attr","concat","mime","ContactAction","action","SUPPORTED_IMAGE_FORMATS","MIME_EXTENSIONS","makeImageUrl","startsWith","fitImageSize","width","height","maxWidth","maxHeight","forceSquare","scale","size","dstWidth","dstHeight","srcWidth","srcHeight","xoffset","yoffset","imageScaled","fileOrBlob","maxSize","onSuccess","img","Image","crossOrigin","onload","async","revokeObjectURL","dim","canvas","ctx","getContext","imageSmoothingEnabled","drawImage","includes","blob","Promise","resolve","toBlob","clearRect","fname","idx","ext","at","lastIndexOf","fileNameForMime","fileToBase64","file","reader","FileReader","split","readAsDataURL","blobToBase64","badge_you","badge_owner","ContactList","topicSelected","contactNodes","contactsCount","contacts","c","filterFunc","filter","filterOn","private","toLowerCase","public","myUserId","isOwner","deliveryStatus","latestMessage","_status","msgStatus","showUnread","connected","onTopicSelected","trusted","verified","staff","danger","noScroll","dangerouslySetInnerHTML","__html","emptyListMessage","MenuCancel","onCancel","ErrorPanel","level","onClearError","warn","text","whiteSpace","actionText","Chip","handleCancel","invalid","noAvatar","required","ChipInput","deriveStateFromProps","input","focused","handleTextInput","removeChipAt","handleChipCancel","handleFocusGained","handleFocusLost","handleKeyDown","placeholder","chips","prompt","sortedChips","sortChips","staticMembers","chipIndex","indexChips","prevState","keep","normal","removed","onChipRemoved","onFocusLost","onEnter","undefined","avatarDisabled","autoFocus","tabIndex","onFocus","onBlur","onKeyDown","no_contacts","contacts_not_found_short","GroupManager","members","indexMembers","keepInitialMembers","requiredMember","contactFilter","noContactsMessage","selectedContacts","handleContactSelected","handleMemberRemoved","handleContactFilter","handleSubmit","m","delta","present","keepInitial","stat","sel","userId","status","splice","val","query","instance","added","Object","keys","k","onSubmit","doContactFiltering","joiner","writer","preser","approver","sharer","deleter","owner","PermissionsEditor","names","skip","compare","userTitle","userAvatar","modeTitle","compareTitle","Cropper","panX","panY","originX","originY","zoom","minZoom","maxZoom","overlay","cutout","boundingBox","imageWidth","imageHeight","mouseX","mouseY","prevDistance","cutoutRect","bBoxRect","initScaling","onZoom","handleZoom","mouseDown","mouseUp","mouseMove","mouseTouch","positionAll","translate","passive","getBoundingClientRect","currPan","nextDiff","imgRect","max","imgLeft","imgRight","coLeft","coRight","imgTop","imgBottom","coTop","coBottom","touches","body","dX","dY","checkBound","touch0","touch1","distance","sqrt","t3d","orig","transform","transformOrigin","onLoad","step","AvatarCrop","objURL","imageCrop","VisiblePassword","handleVisibility","handeTextChange","handleEditingFinished","onFinished","setTimeout","activeElement","autoComplete","InPlaceEdit","active","initialValue","handleStartEditing","handlePasswordFinished","newValue","focus","event","checkValidity","spanText","spanClass","multiline","element","rows","TagManager","tags","tagInput","activated","handleTagInput","handleAddTag","handleRemoveTag","nextProps","last","tag","maxTagCount","getServerLimit","onTagsChanged","minTagLength","maxTagLength","add_tags_prompt","TopicDescEdit","getAccessMode","isMe","fullName","description","newAvatar","newAvatarMime","previousOnTags","tnNewTags","handleFullNameUpdate","handleImageUpdated","handleAvatarCropped","handlePrivateUpdate","handleDescriptionUpdate","uploadAvatar","handleAvatarCropCancel","handleTagsUpdated","onTagsUpdated","onUpdateTopicDesc","desc","readyToUpload","uploader","getLargeFileHelper","upload","finally","unused","base64bits","du","onUpdateTags","editable","full_name_placeholder","group_name_placeholder","private_placeholder","title_tag_manager","TopicCommon","credentials","getCredentials","addCredActive","addCredInvalid","newCred","previousTagsUpdated","tnCredsUpdated","handleCredChange","handleCredKeyDown","handleCredEntered","onCredsUpdated","getType","creds","method","asPhone","asEmail","onCredAdd","onTopicTagsUpdateRequest","cred","meth","done","onCredConfirm","onCredDelete","delete_messages","leave_chat","leave_chat_warning","block_contact","block_contact_warning","report_chat","report_chat_warning","other_user","TopicSecurity","handleDeleteTopic","handleDeleteMessages","handleLeave","handleBlock","handleReport","onDeleteTopic","onDeleteMessages","onLeaveTopic","onBlockTopic","onReportTopic","channel","groupTopic","onLaunchPermissionsEditor","access","auth","anon","modeGiven2","general","security","crop","perm_want","perm_given","perm_auth","perm_anon","perm_user","_clip","str","InfoView","admin","muted","address","selectedContact","modeGiven","modeWant","modeWant2","contactList","previousMetaDesc","previousSubsUpdated","resetSubs","resetDesc","resetTags","onMetaDesc","onSubsUpdated","handleImageChanged","handleMuted","handleUnarchive","handlePermissionsChanged","handleLaunchPermissionsEditor","handleShowAddMembers","handleMemberUpdateRequest","handleMemberSelected","handleContextMenu","handleBackNavigate","newState","user2","subscriber","getGiven","getWant","subscribers","sub","defacs","getDefaultAccess","entries","isAdmin","isSharer","isDeleter","archived","isArchived","isGroupType","isChannelType","chan","getMeta","startMetaQuery","withTags","build","subs","onTopicDescUpdate","ignored","onChangePermissions","ignored2","onTopicUnArchive","which","perm","onTopicDescUpdateRequest","userPermissionsEdited","toEdit","toCompare","toSkip","titleEdit","titleCompare","userPermissionsTitle","userPermissionsAvatar","editedPermissions","immutablePermissions","editedPermissionsTitle","immutablePermissionsTitle","editedPermissionsSkipped","onNavigate","onInitFind","onMemberUpdateRequest","args","panel","menuItems","view","shift","panelTitle","displayMobile","errorLevel","errorText","searchableContacts","no_members","FileProgress","progress","Attachment","downloader","downloadFile","filename","mimetype","download","loaded","onCancelUpload","cancel","helperFunc","isUrlRelative","downloadUrl","downloadWidget","ChatMessage","onProgress","handleProgress","handleImagePreview","handleFormButtonClick","handleCancelUpload","handleQuoteClick","onImagePreview","resp","act","onFormResponse","MESSAGE_STATUS_FAILED","MESSAGE_STATUS_DEL_RANGE","ratio","replyToSeq","onQuoteClick","sideClass","deleted","sequence","response","bubbleClass","fullDisplay","userFrom","msgId","attachments","att","tree","formatter","userName","messaging_disabled","type_new_message","add_image_caption","file_attachment_too_large","cannot_initiate_upload","SendMessage","keypressTimestamp","getTime","handlePasteEvent","handleAttachImage","handleAttachFile","handleSend","handleKeyPress","handleMessageTyping","messageEditArea","disabled","onImageSuccess","onAttachmentSuccess","clipboardData","originalEvent","kind","getAsFile","imageFileScaledToBase64","imageFileToBase64","filePasted","bits","onAttachImage","onAttachFile","acceptBlank","noInput","onSendMessage","shiftKey","onKeyPress","replyTo","messagePrompt","quote","onFormatQuote","onCancelReply","attachImage","click","attachFile","display","DocPreview","handleSendDoc","caption","onClose","mimeToIcon","default","video","iconFromMime","GroupSubs","usersOnline","totalCount","countToShow","some","overflow","ImagePreview","handleSendImage","assignWidth","node","maxlength","Invitation","handleButtonAction","evt","LogoView","version","serverVersion","serverAddress","HashNavigation","parts","path","forEach","part","decodeURIComponent","location","hasOwnProperty","parsed","parseUrlHash","composeUrlHash","sidepanel","infopanel","online_now","last_seen","not_found","isUnconfirmed","ex","getExcessive","isPeerRestricted","ms","getMissing","MessagesView","getDerivedStateFromProps","leave","sendMessage","sendImageAttachment","sendFileAttachment","sendKeyPress","subscribe","handleScrollReference","handleScrollEvent","handleDescChange","handleSubsUpdated","handleMessageUpdate","handleAllMessagesReceived","handleInfoReceipt","handleImagePostview","handleClosePreview","handleFormResponse","handleShowContextMenuMessage","handleNewChatAcceptance","handleEnablePeer","postReadNotification","clearNotificationQueue","handlePickReply","handleCancelReply","convertIntoThumbnails","readNotificationQueue","readNotificationTimer","messagesScroller","messageCount","scrollTop","scrollHeight","scrollPosition","viewportHeight","onData","onAllMessagesReceived","onInfo","onPres","applicationVisible","ready","nextState","docPreview","imagePreview","imagePostview","typingIndicator","fetchingMessages","assign","onlineSubs","peer","p2pPeerDesc","peerMessagingDisabled","latestClearId","maxClearId","isWriter","isReader","readingBlocked","unconformed","unconfirmed","isSubscribed","newTopic","newTopicParams","_topicName","getQuery","withLaterDesc","withLaterSub","withLaterData","withLaterDel","setQuery","code","onNewTopicCreated","queuedMessages","pub","_sending","navigateTo","setUrlTopic","blankState","oldTopicName","isTopicCached","oldTopic","msgHasMoreMessages","getMessagesPage","setInterval","clearInterval","n","sendAt","noteRead","setMilliseconds","getMilliseconds","clearTimeout","keyPressTimer","isNewMessage","from","what","forceUpdate","attachJSON","parse","searchParams","set","search","open","messageSpecificMenuItems","onNewChat","noteKeyPress","uploadCompletionPromise","attachQuote","maxInbandAttachmentSize","urlPromise","maxExternAttachmentSize","limit","tinyMine","tinyBlob","blobMime","tinyBits64","insertImage","_tempPreview","appendLineBreak","append","bits64","found","findMessage","_cancelled","cont","init","replyPreview","quotePreviewFmt","header","m0","thisFrom","userDesc","myUserName","ents","ent","entities","tp","success","createQuote","origBlob","bin","atob","buf","ArrayBuffer","arr","Uint8Array","Blob","base64ToBlob","call","fetch","saveThis","scrollIntoView","behavior","backgroundColor","component","hideSelf","component2","messageNodes","previousFrom","chatBoxClass","prev","next","nextFrom","isReply","hi","ts","_uploader","viewportWidth","lastSeen","getMeTopic","getContact","seen","when","onHideMessagesView","fmt","new_fmt","len","iconName","iconTitle","tagName","attrValue","minWidth","minHeight","isProcessing","UploadingImage","loading","inner","child","iconKey","ButtonBack","onBack","MenuContacts","onNewTopic","onSettings","MenuStart","onSignUp","SideNavbar","AccountSettingsView","me","archived_contacts_title","ContactsView","handleAction","unreadThreads","archivedCount","chatList","blocked","arch","touched","action_ignored","onShowArchive","LocalStorageUtil","localStorage","setItem","JSON","stringify","getItem","oldVal","getObject","setObject","removeItem","CreateAccountView","login","password","email","imageDataUrl","errorCleared","saveToken","handleLoginChange","handlePasswordChange","handleEmailChange","handleFnChange","handleToggleSaveToken","onCreateAccount","submitClasses","login_prompt","password_prompt","onImageChanged","full_name_prompt","email_prompt","stay_logged_in","EditAccountView","handleCheckboxClick","onToggleMessageSounds","onTogglePushNotifications","onToggleIncognitoMode","messageSounds","desktopAlertsEnabled","desktopAlerts","incognitoMode","delete_account","delete_account_warning","AccSecurityView","blockedCount","showPermissionEditorFor","handlePasswordUpdate","handleHidePermissionsEditor","handleDeleteAccount","pwd","onUpdatePassword","onUpdateAccountDesc","onDeleteAccount","password_unchanged","onLogout","onShowBlocked","AccSupportView","LoginView","hostName","persist","onPersistenceChange","onLogin","autoCorrect","autoCapitalize","invalid_id","NewTopicById","groupId","prefix","NewTopicGroup","handleFieldEdit","handleTagsChanged","handleChannelToggle","SearchContacts","edited","handleSearchChange","handleSearch","handleClear","onSearchContacts","search_placeholder","search_for_contacts","search_no_results","NewTopicView","tabSelected","searchQuery","handleTabClick","handleSearchContacts","handleNewGroupSubmit","handleGroupByID","addUrlParam","removeUrlParam","onCreateTopic","dataUrl","priv","no_contacts_placeholder","searchResults","PasswordResetView","sent","token","scheme","onReset","onRequest","HostSelector","changed","handleHostNameChange","onServerAddressChange","hostOptions","list","SettingsView","transport","handleTransportSelected","handleServerAddressChange","onUpdate","def","ws","lp","transportOptions","phone","ValidationView","credCode","credMethod","numbers_only","register","settings","edit","notif","support","newtpk","reset","SidepanelView","handleNewTopic","errorAction","errorActionText","loadSpinnerVisible","loginDisabled","onLoginRequest","onGlobalSettings","onUpdateAccountTags","onValidateCredentials","onPasswordResetRequest","onResetPassword","detectServerAddress","host","protocol","hostname","port","isSecureConnection","POP_SOUND","Audio","reconnect_countdown","reconnect_now","push_init_failed","invalid_security_token","no_connection","code_doesnot_match","menu_item_info","TinodeWeb","getBlankState","handleResize","handleHashRoute","handleOnline","checkForAppUpdate","handleVisibilityEvent","handleError","handleLoginRequest","handlePersistenceChange","handleConnected","handleAutoreconnectIteration","doLogin","handleCredentialsRequest","handleLoginSuccessful","handleDisconnect","tnMeMetaDesc","tnMeContactUpdate","tnMeSubsUpdated","resetContactList","tnData","tnInitFind","tnFndSubsUpdated","handleTopicSelected","handleHideMessagesView","handleSendMessage","handleNewChatInvitation","handleNewAccount","handleNewAccountRequest","handleUpdatePasswordRequest","handleUpdateAccountTagsRequest","handleToggleIncognitoMode","handleSettings","handleGlobalSettings","handleShowArchive","handleShowBlocked","handleToggleMessageSounds","handleCredAdd","handleCredDelete","handleCredConfirm","initFCMessaging","togglePushToken","requestPushToken","handlePushMessage","handleSidepanelCancel","handleStartTopicRequest","handleNewTopicCreated","handleTopicUpdateRequest","handleChangePermissions","handleTagsUpdateRequest","handleLogout","handleDeleteTopicRequest","handleDeleteMessagesRequest","handleLeaveUnsubRequest","handleBlockTopicRequest","handleReportTopic","handleShowContextMenu","defaultTopicContextMenu","handleHideContextMenu","handleShowAlert","handleShowInfoView","handleValidateCredentialsRequest","handlePasswordResetRequest","handleResetPassword","handleContextMenuAction","autoLogin","messageSoundsOff","FIREBASE_INIT","firebaseToken","hidden","sidePanelSelected","sidePanelTitle","sidePanelAvatar","myTrustedBadges","liveConnection","onLine","topicSelectedOnline","topicSelectedAcs","innerWidth","infoPanel","mobilePanel","contextMenuVisible","contextMenuBounds","contextMenuClickAt","contextMenuParams","contextMenuItems","alertVisible","alertParams","requestedTopic","BroadcastChannel","documentElement","clientWidth","clientHeight","tnSetup","onConnect","onDisconnect","onAutoreconnectIteration","setDeviceToken","parsedNav","expires","setAuthToken","connect","readTimer","readTimerCallback","persistentCache","onSetupCompleted","appName","apiKey","secure","setHumanLanguage","enableLogging","oobNotification","fbPush","usePublicVapidKey","messagingVapidKey","serviceWorker","reg","useServiceWorker","postMessage","onTokenRefresh","onMessage","payload","mobile","onupdatefound","installingWorker","installing","onstatechange","controller","getTopicAccessMode","newTopicTabSelected","tab","reconnectCountdown","reconnect","isConnected","initStorage","clearStorage","getServerInfo","ver","sec","prom","timeLeft","seconds","secondsToTime","isAuthenticated","promise","getAuthToken","loginBasic","loginToken","goToTopic","onContactUpdate","getCurrentUserID","withDesc","withCred","disconnect","urlHash","setUrlSidePanel","isPresencer","play","foundContacts","merged","updated","past","prepareSearchableContacts","receivedTimer","noteRecv","fnd","getFndTopic","withSub","s","setMeta","isTopicOnline","isP2PType","am","updateWant","login_","password_","public_","cred_","tags_","createAccountBasic","on","enabled","updateObject","requestPermission","deleteToken","getToken","refreshedToken","delCredential","basicNavigator","infoNavigator","setUrlInfoPanel","newGroupTopicName","oldName","newName","updateAccountBasic","getCurrentLogin","updateGiven","delCurrentUser","publish","self_blocked","subscribed","confirmText","rejectText","invite","requestResetAuthSecret","newPassword","btoa","base64ReEncode","onAddMember","handleManageGroupMembers","hl","languages","baseLanguage","allMessages","IntlProvider","textComponent","__webpack_require__","module","getter","__esModule","d","exports","definition","o","defineProperty","enumerable","get","obj","prop","prototype","__webpack_modules__"],"sourceRoot":""}