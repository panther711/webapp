{"version":3,"file":"index.prod.js","mappings":"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","sources":["webpack://tinode-webapp/webpack/bootstrap","webpack://tinode-webapp/webpack/runtime/compat get default export","webpack://tinode-webapp/webpack/runtime/define property getters","webpack://tinode-webapp/webpack/runtime/hasOwnProperty shorthand","webpack://tinode-webapp/external var \"React\"","webpack://tinode-webapp/external var \"ReactDOM\"","webpack://tinode-webapp/external var \"ReactIntl\"","webpack://tinode-webapp/external var \"firebase\"","webpack://tinode-webapp/external var \"Tinode\"","webpack://tinode-webapp/external var [\"firebase\",\"messaging\"]","webpack://tinode-webapp/./src/widgets/alert.jsx","webpack://tinode-webapp/./src/version.js","webpack://tinode-webapp/./src/config.js","webpack://tinode-webapp/./src/widgets/context-menu.jsx","webpack://tinode-webapp/./src/widgets/contact-badges.jsx","webpack://tinode-webapp/./src/lib/strformat.js","webpack://tinode-webapp/./src/lib/utils.js","webpack://tinode-webapp/./src/widgets/letter-tile.jsx","webpack://tinode-webapp/./src/widgets/received-marker.jsx","webpack://tinode-webapp/./src/widgets/unread-badge.jsx","webpack://tinode-webapp/./src/widgets/lazy-image.jsx","webpack://tinode-webapp/./src/widgets/file-progress.jsx","webpack://tinode-webapp/./src/widgets/uploading-image.jsx","webpack://tinode-webapp/./src/lib/blob-helpers.js","webpack://tinode-webapp/./src/lib/formatters.js","webpack://tinode-webapp/./src/widgets/contact.jsx","webpack://tinode-webapp/./src/widgets/contact-action.jsx","webpack://tinode-webapp/./src/widgets/contact-list.jsx","webpack://tinode-webapp/./src/widgets/search-contacts.jsx","webpack://tinode-webapp/./src/widgets/forward-dialog.jsx","webpack://tinode-webapp/./src/widgets/load-spinner.jsx","webpack://tinode-webapp/./src/widgets/avatar-upload.jsx","webpack://tinode-webapp/./src/widgets/badge-list.jsx","webpack://tinode-webapp/./src/widgets/checkbox.jsx","webpack://tinode-webapp/./src/widgets/menu-cancel.jsx","webpack://tinode-webapp/./src/widgets/error-panel.jsx","webpack://tinode-webapp/./src/widgets/chip.jsx","webpack://tinode-webapp/./src/widgets/chip-input.jsx","webpack://tinode-webapp/./src/widgets/group-manager.jsx","webpack://tinode-webapp/./src/widgets/permissions-editor.jsx","webpack://tinode-webapp/./src/widgets/cropper.jsx","webpack://tinode-webapp/./src/widgets/avatar-crop.jsx","webpack://tinode-webapp/./src/widgets/visible-password.jsx","webpack://tinode-webapp/./src/widgets/in-place-edit.jsx","webpack://tinode-webapp/./src/widgets/tag-manager.jsx","webpack://tinode-webapp/./src/widgets/topic-desc-edit.jsx","webpack://tinode-webapp/./src/widgets/topic-common.jsx","webpack://tinode-webapp/./src/widgets/topic-security.jsx","webpack://tinode-webapp/./src/views/info-view.jsx","webpack://tinode-webapp/./src/widgets/attachment.jsx","webpack://tinode-webapp/./src/widgets/chat-message.jsx","webpack://tinode-webapp/./src/widgets/send-message.jsx","webpack://tinode-webapp/./src/widgets/doc-preview.jsx","webpack://tinode-webapp/./src/widgets/group-subs.jsx","webpack://tinode-webapp/./src/widgets/image-preview.jsx","webpack://tinode-webapp/./src/widgets/invitation.jsx","webpack://tinode-webapp/./src/views/logo-view.jsx","webpack://tinode-webapp/./src/lib/navigation.js","webpack://tinode-webapp/./src/views/messages-view.jsx","webpack://tinode-webapp/./src/widgets/button-back.jsx","webpack://tinode-webapp/./src/widgets/menu-contacts.jsx","webpack://tinode-webapp/./src/widgets/menu-start.jsx","webpack://tinode-webapp/./src/widgets/side-navbar.jsx","webpack://tinode-webapp/./src/views/account-settings-view.jsx","webpack://tinode-webapp/./src/views/contacts-view.jsx","webpack://tinode-webapp/./src/lib/local-storage.js","webpack://tinode-webapp/./src/views/create-account-view.jsx","webpack://tinode-webapp/./src/views/acc-notifications-view.jsx","webpack://tinode-webapp/./src/views/acc-security-view.jsx","webpack://tinode-webapp/./src/views/acc-support-view.jsx","webpack://tinode-webapp/./src/views/login-view.jsx","webpack://tinode-webapp/./src/widgets/new-topic-by-id.jsx","webpack://tinode-webapp/./src/widgets/new-topic-group.jsx","webpack://tinode-webapp/./src/views/new-topic-view.jsx","webpack://tinode-webapp/./src/views/password-reset-view.jsx","webpack://tinode-webapp/./src/widgets/host-selector.jsx","webpack://tinode-webapp/./src/views/settings-view.jsx","webpack://tinode-webapp/./src/views/validation-view.jsx","webpack://tinode-webapp/./src/views/sidepanel-view.jsx","webpack://tinode-webapp/./src/lib/host-name.js","webpack://tinode-webapp/./src/views/tinode-web.jsx","webpack://tinode-webapp/./src/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = React;","const __WEBPACK_NAMESPACE_OBJECT__ = ReactDOM;","const __WEBPACK_NAMESPACE_OBJECT__ = ReactIntl;","const __WEBPACK_NAMESPACE_OBJECT__ = firebase;","const __WEBPACK_NAMESPACE_OBJECT__ = Tinode;","const __WEBPACK_NAMESPACE_OBJECT__ = firebase.messaging;","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Alert extends React.PureComponent {\n  render() {\n    return this.props.visible ?\n      <div className=\"alert-container\">\n        <div className=\"alert\">\n          <div className=\"title\">{this.props.title}</div>\n          <div className=\"content\">{this.props.content}</div>\n          <div className=\"dialog-buttons\">\n            {this.props.onReject ?\n              <button className=\"outline\" onClick={this.props.onReject}>\n                {this.props.reject || <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />}\n              </button>\n              :\n              null\n            }\n            <button className=\"primary\" onClick={this.props.onConfirm}>\n              {this.props.confirm || <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\"  />}\n            </button>\n          </div>\n        </div>\n      </div>\n    :\n    null;\n  }\n};\n","// This is a generated file. Don't edit.\n\nexport const PACKAGE_VERSION = \"0.18.3-rc1\";\n","import { PACKAGE_VERSION } from './version.js';\n\n// Name of this application, used in the User-Agent.\nexport const APP_NAME = 'TinodeWeb/' + (PACKAGE_VERSION || '0.17');\n\n// API key. Use https://github.com/tinode/chat/tree/master/keygen to generate your own\nexport const API_KEY = 'AQEAAAABAAD_rAp4DJh05a1HAwFT3A6K';\n\n// The array of possible hosts to connect to.\nexport const KNOWN_HOSTS = {hosted: 'web.tinode.co', local: 'localhost:6060'};\n\n// Default host name and port to connect to.\nexport const DEFAULT_HOST = KNOWN_HOSTS.hosted;\n\n// Enable console logging.\nexport const LOGGING_ENABLED = true;\n\n// Minimum time between two keypress notifications, milliseconds.\nexport const KEYPRESS_DELAY = 3*1000;\n// Delay before sending a {note} for reciving a message, milliseconds.\nexport const RECEIVED_DELAY = 500;\n// Delay before sending a read notification, milliseconds.\nexport const READ_DELAY = 1000;\n\n// The default shortest allowed tag length. Matches the value on the server.\nexport const MIN_TAG_LENGTH = 2;\n// The default greatest allowed tag length. Matches the value on the server.\nexport const MAX_TAG_LENGTH = 96;\n// The default maximum number of tags allowed. Matches the value on the server.\nexport const MAX_TAG_COUNT = 16;\n\n// Access mode for P2P subscriptions initiated by the current user.\nexport const DEFAULT_P2P_ACCESS_MODE = 'JRWPS';\n// Access mode for new group topics created by the current user.\nexport const NEW_GRP_ACCESS_MODE = 'JRWPSAO';\n// Access mode for a channel.\nexport const CHANNEL_ACCESS_MODE = 'JR';\n\n// Access mode for no access.\nexport const NO_ACCESS_MODE = 'N';\n\n// Mediaquery breakpoint between desktop and mobile, in px. Should match the value\n// in @media (max-size: 640px) in base.css\nexport const MEDIA_BREAKPOINT = 640;\n// Size of css 'rem' unit in pixels. Default 1rem = 10pt = 13px.\nexport const REM_SIZE = 13;\n\n// Size of the avatar image: when image dimensions are greater or the image is not square, it's resized to\n// a square of this size or less.\nexport const AVATAR_SIZE = 384;\n\n// Maximum size of an avatar in bytes for sending in-band. Bigger avatars will be sent out of band (as uploads).\nexport const MAX_AVATAR_BYTES = 4096;\n\n// Size of the broken_image shown in MessagesView\nexport const BROKEN_IMAGE_SIZE = 32;\n\n// Number of chat messages to fetch in one call.\nexport const MESSAGES_PAGE = 24;\n\n// Default maximum in-band (included directly into the message) attachment size which fits into\n// a message of 256K in size. Used when the server-provided value is unavailable. The actual\n// binary size of the attachment should be smaller due to base64 encoding expansion and some overhead,\n// for instance 1024 bytes.\n// Increase this limit to a greater value in production, if desired. Also increase\n// max_message_size in the server config.\nexport const MAX_INBAND_ATTACHMENT_SIZE = 262144;\n\n// Default absolute maximum attachment size to be used with the server = 8MB.\n// Used when the server-provided value is unavailable. Increase to something like 100MB in production.\nexport const MAX_EXTERN_ATTACHMENT_SIZE = 1 << 23;\n\n// Maximum allowed linear dimension (pixels) of an image sent inline. Larger images will be shrunk\n// to make the larger dimension fit under this size. You may want to adjust it to 1600 or\n// 2400 for production.\nexport const MAX_IMAGE_DIM = 1024;\n\n// Linear dimensions of image preview: shrink image under this size for previews.\nexport const IMAGE_PREVIEW_DIM = 64;\n\n// Linear dimensions of image thumbnail: shrink image under this size for thumbnails in reply quote previews.\nexport const IMAGE_THUMBNAIL_DIM = 36;\n\n// Maximum number of online users to be shown in a topic title bar. Others will be\n// hidden under \"+X more\"\nexport const MAX_ONLINE_IN_TOPIC = 4;\n\n// Maximum length of user name, topic title, and private comment.\nexport const MAX_TITLE_LENGTH = 60;\n// Maximum length of topic description.\nexport const MAX_TOPIC_DESCRIPTION_LENGTH = 360;\n\n// Length of message previews in chat list, in characters.\nexport const MESSAGE_PREVIEW_LENGTH = 80;\n\n// Length of a quote in quoted reply (for outgoing messages).\nexport const QUOTED_REPLY_LENGTH = 30;\n// Length of a preview of a forwarded message.\nexport const FORWARDED_PREVIEW_LENGTH = 84;\n\n// Link for \"Contact Us\".\nexport const LINK_CONTACT_US = 'email:support@tinode.co';\n\n// Link to Privacy Policy.\nexport const LINK_PRIVACY_POLICY = 'https://tinode.co/privacy.html';\n\n// Link to Terms of Service.\nexport const LINK_TERMS_OF_SERVICE = 'https://tinode.co/terms.html';\n","// Context Menu: popup/dropdown menu.\nimport React from 'react';\nimport { injectIntl, defineMessages } from 'react-intl';\n\nimport { REM_SIZE } from '../config.js';\n\nconst messages = defineMessages({\n  info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  },\n  clear_messages: {\n    id: 'menu_item_clear_messages',\n    defaultMessage: 'Clear messages',\n    description: 'Delete all messages'\n  },\n  clear_for_all: {\n    id: 'menu_item_clear_messages_for_all',\n    defaultMessage: 'Clear for All',\n    description: 'Delete all message(s) for all members'\n  },\n  delete: {\n    id: 'menu_item_delete',\n    defaultMessage: 'Delete',\n    description: 'Delete selected messages'\n  },\n  delete_for_all: {\n    id: 'menu_item_delete_for_all',\n    defaultMessage: 'Delete for All',\n    description: 'Delete selected message(s) for all members'\n  },\n  send_retry: {\n    id: 'menu_item_send_retry',\n    defaultMessage: 'Retry',\n    description: 'Retry sending message'\n  },\n  mute: {\n    id: 'menu_item_mute',\n    defaultMessage: 'Mute',\n    description: 'Turn off notifications'\n  },\n  unmute: {\n    id: 'menu_item_unmute',\n    defaultMessage: 'Unmute',\n    description: 'Turn notifications on'\n  },\n  reply: {\n    id: 'menu_item_reply',\n    defaultMessage: 'Reply',\n    description: 'Reply to message'\n  },\n  forward: {\n    id: 'menu_item_forward',\n    defaultMessage: 'Forward',\n    description: 'Forward message'\n  },\n  topic_delete: {\n    id: 'menu_item_delete_topic',\n    defaultMessage: 'Delete',\n    description: 'Delete entire topic'\n  },\n  topic_delete_warning: {\n    id: 'topic_delete_warning',\n    defaultMessage: 'Are you sure you want to delete this conversation? It cannot be undone.',\n    description: 'Alert warning when deleting entire topic'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  unblock: {\n    id: 'menu_item_unblock',\n    defaultMessage: 'Unblock',\n    description: 'Unblock topic or user'\n  },\n  // Generic string suitable for either topic or user.\n  block: {\n    id: 'menu_item_block',\n    defaultMessage: 'Block',\n    description: 'Block topic or user'\n  },\n  topic_block_warning: {\n    id: 'topic_block_warning',\n    defaultMessage: 'Are you sure you want to block this conversation?',\n    description: 'Alert warning when blocking a topic.'\n  },\n  member_delete: {\n    id: 'menu_item_member_delete',\n    defaultMessage: 'Remove',\n    description: 'Remove user from topic'\n  },\n  archive: {\n    id: 'menu_item_archive_topic',\n    defaultMessage: 'Archive',\n    description: 'Move topic from the list of active chats to archive'\n  },\n  unarchive: {\n    id: 'menu_item_restore_topic',\n    defaultMessage: 'Restore',\n    description: 'Restore topic from archive'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n});\n\nclass ContextMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selfRef = React.createRef();\n\n    const {formatMessage} = props.intl;\n\n    this.handlePageClick = this.handlePageClick.bind(this);\n    this.handleEscapeKey = this.handleEscapeKey.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n\n    // Preconfigured menu items.\n    this.MenuItems = {\n      'topic_info': {\n        id: 'topic_info',\n        title: formatMessage(messages.info),\n        handler: null\n      },\n      'messages_clear': {\n        id: 'messages_clear',\n        title: formatMessage(messages.clear_messages),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.clear_messages), // title\n            formatMessage(messages.clear_messages_warning), // content\n            (() => { this.deleteMessages(true, false, params, errorHandler); }), // onConfirm\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'messages_clear_hard': {\n        id: 'messages_clear_hard',\n        title: formatMessage(messages.clear_for_all),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.clear_for_all), // title\n            formatMessage(message.delete_messages_warning), // content\n            (() => { return this.deleteMessages(true, true, params, errorHandler); }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'message_delete': {\n        id: 'message_delete',\n        title: formatMessage(messages.delete),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, false, params, errorHandler);\n        }\n      },\n      'message_delete_hard': {\n        id: 'message_delete_hard',\n        title: formatMessage(messages.delete_for_all),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, true, params, errorHandler);\n        }\n      },\n      'menu_item_send_retry': {\n        id: 'menu_item_send_retry',\n        title: formatMessage(messages.send_retry),\n        handler: (params, errorHandler) => {\n          return this.retryMessage(params, errorHandler);\n        }\n      },\n      'menu_item_reply': {\n        id: 'menu_item_reply',\n        title: formatMessage(messages.reply),\n        handler: (params, errorHandler) => {\n          return this.replyToMessage(params, errorHandler);\n        }\n      },\n      'menu_item_forward': {\n        id: 'menu_item_forward',\n        title: formatMessage(messages.forward),\n        handler: () => {} /* the action is taken directly in tinode-web */\n      },\n      'topic_unmute': {\n        id: 'topic_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'topic_mute': {\n        id: 'topic_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'topic_unblock': {\n        id: 'topic_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n      'topic_block': {\n        id: 'topic_block',\n        title: formatMessage(messages.block),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.block), // title\n            formatMessage(messages.topic_block_warning), // content\n            (() => {\n              return this.topicPermissionSetter('-JP', params, errorHandler).then((ctrl) => {\n                this.props.onTopicRemoved(params.topicName);\n                return ctrl;\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_delete': {\n        id: 'topic_delete',\n        title: formatMessage(messages.topic_delete),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.topic_delete), // title\n            formatMessage(messages.topic_delete_warning), // content\n            (() => {\n              const topic = this.props.tinode.getTopic(params.topicName);\n              if (!topic) {\n                console.log(\"Topic not found: \", params.topicName);\n                return;\n              }\n              return topic.delTopic(true).catch((err) => {\n                if (errorHandler) {\n                  errorHandler(err.message, 'err');\n                }\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_archive': {\n        id: 'topic_archive',\n        title: formatMessage(messages.archive),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic) {\n            console.log(\"Topic not found: \", params.topicName);\n            return;\n          }\n          return topic.archive(true).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      'topic_restore': {\n        id: 'topic_restore',\n        title: formatMessage(messages.unarchive),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic) {\n            console.log(\"Topic not found: \", params.topicName);\n            return;\n          }\n          return topic.archive(false).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      // menu_item_edit_permissions is defined elsewhere.\n      'permissions': {\n        id: 'permissions',\n        title: formatMessage(messages.edit_permissions),\n        handler: null\n      },\n      'member_delete': {\n        id: 'member_delete',\n        title: formatMessage(messages.member_delete),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic || !params.user) {\n            console.log(\"Topic or user not found: '\" + params.topicName + \"', '\" + params.user + \"'\");\n            return;\n          }\n          return topic.delSubscription(params.user).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      'member_mute': {\n        id: 'member_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'member_unmute': {\n        id: 'member_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'member_block': {\n        id: 'member_block',\n        title: formatMessage(messages.block),\n        handler: this.topicPermissionSetter.bind(this, '-JP')\n      },\n      'member_unblock': {\n        id: 'member_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handlePageClick, false);\n    document.addEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handlePageClick, false);\n    document.removeEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  handlePageClick(e) {\n    if (this.selfRef.current.contains(e.target)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n  }\n\n  handleEscapeKey(e) {\n    if (e.keyCode === 27) {\n      this.props.hide();\n    }\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n    let item = this.props.items[e.currentTarget.dataset.id];\n    if (typeof item == 'string') {\n      item = this.MenuItems[item];\n    }\n\n    if (!item) {\n      console.error(\"Invalid menu item ID\", e.currentTarget.dataset.id);\n    } else {\n      this.props.onAction(\n        item.id,\n        item.handler(this.props.params, this.props.onError),\n        this.props.params);\n    }\n  }\n\n  // Menu Actions\n\n  deleteMessages(all, hard, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found: \", params.topicName);\n      return;\n    }\n\n    // We don't know if the message is still pending (e.g. attachment is being uploaded),\n    // so try cancelling first. No harm if we can't cancel.\n    // The message can be cancelled if transmission to the server has not\n    // started yet or if the message send has failed.\n    if (!all && topic.cancelSend(params.seq)) {\n      return;\n    }\n    // Can't cancel. Delete instead.\n    const promise = all ?\n      topic.delMessagesAll(hard) :\n      topic.delMessagesList([params.seq], hard);\n\n    return promise.catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Retries sending failed message.\n  retryMessage(params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    // Remove the existing message entry.\n    if (!topic || !topic.flushMessage(params.seq)) {\n      return;\n    }\n    const msg = topic.createMessage(params.content, false);\n    return topic.publishDraft(msg).catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Function is used by context menu to set permissions.\n  topicPermissionSetter(mode, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found\", params.topicName);\n      return;\n    }\n\n    let result = topic.updateMode(params.user, mode);\n    if (errorHandler) {\n      result = result.catch((err) => {\n        errorHandler(err.message, 'err');\n      });\n    }\n    return result;\n  }\n\n  replyToMessage(params, errorHandler) {\n    params.pickReply(params.seq, params.content, params.userFrom, params.userName, errorHandler);\n  }\n\n  render() {\n    const menu = [];\n    let count = 0;\n    this.props.items.map((item) => {\n      if (typeof item == 'string') {\n        item = this.MenuItems[item];\n      }\n      if (item && item.title) {\n        menu.push(\n          item.title == '-' ?\n            <li className=\"separator\" key={count} />\n            :\n            <li onClick={this.handleClick} data-id={count} key={count}>{item.title}</li>\n        );\n      }\n      count++;\n    });\n\n    // Ensure that menu is inside the app-container.\n    const hSize = 12 * REM_SIZE;\n    const vSize = REM_SIZE * (0.7 + menu.length * 2.5);\n    const left = (this.props.bounds.right - this.props.clickAt.x < hSize) ?\n        (this.props.clickAt.x - this.props.bounds.left - hSize) :\n        (this.props.clickAt.x - this.props.bounds.left);\n    const top = (this.props.bounds.bottom - this.props.clickAt.y < vSize) ?\n        (this.props.clickAt.y - this.props.bounds.top - vSize) :\n        (this.props.clickAt.y - this.props.bounds.top);\n\n    const position = {\n      left: left + 'px',\n      top: top + 'px'\n    };\n\n    return (\n      <ul className=\"menu\" style={position} ref={this.selfRef}>\n        {menu}\n      </ul>\n    );\n  }\n}\n\nexport default injectIntl(ContextMenu);\n","import React from 'react';\n\nconst icon_mapping = {'muted': 'notifications_off', 'banned': 'block', 'staff': 'verified_user'};\n\n/* Contact's labels: [you], or icons [muted], [blocked] */\nexport default class ContactBadges extends React.PureComponent {\n  render() {\n    let badges = null;\n    if (this.props.badges && this.props.badges.length > 0) {\n      badges = [];\n      this.props.badges.map((b) => {\n        const color = (b.color ? ' ' + b.color : '');\n        if (b.icon) {\n          badges.push(<i className={'material-icons as-badge' + color} key={b.key || b.icon}>{icon_mapping[b.icon] || b.icon}</i>);\n        } else {\n          badges.push(<span className={'badge' + color} key={b.key || b.name}>{b.name}</span>);\n        }\n      });\n      return <>{badges}</>;\n    }\n    return null;\n  }\n};\n","// Short representation of time in the past.\nexport function shortDateFormat(then, locale) {\n  locale = locale || window.navigator.userLanguage || window.navigator.language;\n  const now = new Date();\n  if (then.getFullYear() == now.getFullYear()) {\n    // Same year.\n    if (then.getMonth() == now.getMonth() && then.getDate() == now.getDate()) {\n      // Same month and day, show time only.\n      return then.toLocaleTimeString(locale, {hour12: false, hour: '2-digit', minute: '2-digit'});\n    }\n    // Different month and/or day, show month day, time.\n    return then.toLocaleDateString(locale,\n      {hour12: false, month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit'});\n  }\n  // Different year: just show the date.\n  return then.toLocaleDateString(locale, {year: 'numeric', month: 'short', day: 'numeric'});\n}\n\n// Convert seconds to minutes:seconds, i.e. 156 sec -> 2:36.\nexport function secondsToTime(seconds) {\n  const min = Math.floor(seconds / 60);\n  let sec = seconds % 60;\n  sec = sec < 10 ? `0${sec}` : sec;\n  return `${min}:${sec}`;\n}\n\n// Convert a number of bytes to human-readable format.\nexport function bytesToHumanSize(bytes) {\n  if (!bytes || bytes == 0) {\n    return '0 Bytes';\n  }\n\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n  const bucket = Math.min(Math.floor(Math.log2(bytes) / 10) | 0, sizes.length-1);\n  const count = bytes / Math.pow(1024, bucket);\n  const round = bucket > 0 ? (count < 3 ? 2 : (count < 30 ? 1 : 0)) : 0;\n  return count.toFixed(round) + ' ' + sizes[bucket];\n}\n\n// Shorten a file name to be under maxLength by clipping out the middle.\nexport function shortenFileName(filename, maxLength) {\n  if (typeof filename != 'string') {\n    return filename;\n  }\n  return filename.length > maxLength ?\n    filename.slice(0, maxLength/2 - 1) + '…' + filename.slice(1 - maxLength/2) : filename;\n}\n\n// Get 32 bit integer hash value for a string. Ideally it should produce the same value\n// as Java's String#hash().\nfunction stringToColorHash(value) {\n  let hash = 0;\n  value = '' + value;\n  for (let i = 0; i < value.length; i++) {\n    hash = ((hash << 5) - hash) + value.charCodeAt(i);\n    hash = hash & hash; // Convert to 32bit integer\n  }\n  return hash;\n}\n\n// User avatar letter color id.\nexport function letterTileColorId(userId) {\n  return Math.abs(stringToColorHash(userId)) % 16;\n}\n\n// Converts user or topic ID to a CSS color class. Ideally it should produce the same color value as Java version.\n// params:\n// - {string} id: user or topic ID\n// - {boolean} light: light or dark version of the color.\n// - {boolean} fg: foreground (text) or background color.\nexport function idToColorClass(id, light, fg) {\n  return (light ? 'lt-' : 'dk-') + (fg ? 'fg-' : 'bg-') + letterTileColorId(id);\n}\n","// Odds and ends\n\nimport Tinode from 'tinode-sdk';\n\n// Make shortcut icon appear with a green dot + show unread count in title.\nexport function updateFavicon(count) {\n  const oldIcon = document.getElementById('shortcut-icon');\n  const head = document.head || document.getElementsByTagName('head')[0];\n  const newIcon = document.createElement('link');\n  newIcon.type = 'image/png';\n  newIcon.id = 'shortcut-icon';\n  newIcon.rel = 'shortcut icon';\n  newIcon.href = 'img/logo32x32' + (count > 0 ? 'a' : '') + '.png';\n  if (oldIcon) {\n    head.removeChild(oldIcon);\n  }\n  head.appendChild(newIcon);\n\n  document.title = (count > 0 ? '('+count+') ' : '') + 'Tinode';\n}\n\n// Create theCard which represents user's or topic's \"public\" info.\nexport function theCard(fn, imageUrl, imageMimeType, note) {\n  let card = null;\n  fn = fn && fn.trim();\n  note = note && note.trim();\n\n  if (fn) {\n    card = {\n      fn: fn\n    };\n  }\n\n  if (typeof note == 'string') {\n    card = card || {};\n    card.note = note ? note : Tinode.DEL_CHAR;\n  }\n\n  if (imageUrl) {\n    card = card || {};\n    let mimeType = imageMimeType;\n    // Is this a data URL \"data:[<mediatype>][;base64],<data>\"?\n    const matches = /^data:(image\\/[-a-z0-9+.]+)?(;base64)?,/i.exec(imageUrl);\n    if (matches) {\n      mimeType = matches[1];\n      card.photo = {\n        data: imageUrl.substring(imageUrl.indexOf(',') + 1),\n        ref: Tinode.DEL_CHAR\n      };\n    } else {\n      card.photo = {\n        data: Tinode.DEL_CHAR,\n        ref: imageUrl\n      };\n    }\n    card.photo.type = (mimeType || 'image/jpeg').substring('image/'.length);\n  }\n\n  return card;\n}\n\n// Deep-shallow compare two arrays: shallow compare each element.\nexport function arrayEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (!Array.isArray(a) || !Array.isArray(b)) {\n    return false;\n  }\n\n  // Compare lengths first.\n  if (a.length != b.length) {\n    return false;\n  }\n  // Order of elements is ignored.\n  a.sort();\n  b.sort();\n  for (let i = 0, l = a.length; i < l; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Checks (loosely) if the given string is a phone. If so, returns the phone number in a format\n// as close to E.164 as possible.\nexport function asPhone(val) {\n  val = val.trim();\n  if (/^(?:\\+?(\\d{1,3}))?[- (.]*(\\d{3})[- ).]*(\\d{3})[- .]*(\\d{2})[- .]*(\\d{2})?$/.test(val)) {\n    return val.replace(/[- ().]*/, '');\n  }\n  return null;\n}\n\n// Checks (loosely) if the given string is an email. If so returns the email.\nexport function asEmail(val) {\n  val = val.trim();\n  if (/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(val)) {\n    return val;\n  }\n  return null;\n}\n\n// Checks if URL is a relative url, i.e. has no 'scheme://', including the case of missing scheme '//'.\n// The scheme is expected to be RFC-compliant, e.g. [a-z][a-z0-9+.-]*\n// example.html - ok\n// https:example.com - not ok.\n// http:/example.com - not ok.\n// ' ↲ https://example.com' - not ok. (↲ means carriage return)\nexport function isUrlRelative(url) {\n  return url && !/^\\s*([a-z][a-z0-9+.-]*:|\\/\\/)/im.test(url);\n}\n\n// Ensure URL does not present an XSS risk. Optional allowedSchemes may contain an array of\n// strings with permitted URL schemes, such as ['ftp', 'ftps']; otherwise accept http and https only.\nexport function sanitizeUrl(url, allowedSchemes) {\n  if (typeof url != 'string') {\n    return url;\n  }\n\n  // Strip control characters and whitespace. They are not valid URL characters anyway.\n  url = url.replace(/[^\\x20-\\x7E]/gmi, '').trim();\n\n  // Relative URLs are safe.\n  // Relative URL does not start with ':', abcd123: or '//'.\n  if (!/^([a-z][a-z0-9+.-]*:|\\/\\/)/i.test(url)) {\n    return url;\n  }\n\n  // Blob URLs are safe.\n  if (/^blob:http/.test(url)) {\n    return url;\n  }\n\n  // Absolute URL. Accept only safe schemes, or no scheme.\n  const schemes = Array.isArray(allowedSchemes) ? allowedSchemes.join('|') : 'http|https';\n  const re = new RegExp('^((' + schemes + '):|//)', 'i');\n  if (!re.test(url)) {\n    return null;\n  }\n\n  return url;\n}\n\n// Ensure URL is suitable for <img src=\"url\"> field: the URL must be a relative URL or\n// have http:, https:, blob: or data: scheme.\n// In case of data: scheme, the URL must start with a 'data:image/XXXX;base64,'.\nexport function sanitizeImageUrl(url) {\n  if (!url) {\n    return null;\n  }\n\n  const sanitizedUrl = sanitizeUrl(url);\n  if (sanitizedUrl) {\n    return sanitizedUrl;\n  }\n\n  // Is this a data: URL of an image?\n  if (/data:image\\/[a-z0-9.-]+;base64,/i.test(url.trim())) {\n    return url;\n  }\n\n  return null;\n}\n\n// Given message's received status, return name and color of a delivery indicator icon.\nexport function deliveryMarker(received) {\n  switch (received) {\n    case Tinode.MESSAGE_STATUS_SENDING:\n      return { name: 'access_time' }; // watch face\n    case Tinode.MESSAGE_STATUS_FAILED:\n      return { name: 'warning', color: 'danger-color' }; // yellow icon /!\\\n    case Tinode.MESSAGE_STATUS_SENT:\n      return { name: 'done' }; // checkmark\n    case Tinode.MESSAGE_STATUS_RECEIVED:\n      return { name: 'done_all' }; // double checkmark\n    case Tinode.MESSAGE_STATUS_READ:\n      return { name: 'done_all', color: 'blue' }; // blue double checkmark\n  }\n  return null;\n}\n\n// Wraps a promise to make it cancelable.\n// The parameter can be either a promise or an error. If it's an error, the wrapped promise is\n// created in a rejected state.\nexport function cancelablePromise(promise) {\n  let hasCanceled = false;\n\n  const wrappedPromise = promise instanceof Error ?\n    Promise.reject(promise) :\n    new Promise((resolve, reject) => {\n      promise.then(\n        result => hasCanceled ? reject({isCanceled: true}) : resolve(result),\n        error => hasCanceled ? reject({isCanceled: true}) : reject(error)\n      );\n    });\n\n  return {\n    promise: wrappedPromise,\n    cancel() {\n      hasCanceled = true;\n    },\n  };\n};\n","import React from 'react';\n\nimport Tinode from 'tinode-sdk';\n\nimport { idToColorClass } from '../lib/strformat.js';\nimport { sanitizeImageUrl } from '../lib/utils.js';\n\nexport default class LetterTile extends React.PureComponent {\n  render() {\n    let avatar;\n    if (this.props.avatar === true) {\n      const isGroup = (Tinode.topicType(this.props.topic) == 'grp');\n      const iconColor = idToColorClass(this.props.topic, isGroup);\n      if (this.props.topic && this.props.title && this.props.title.trim()) {\n        const letter = this.props.title.trim().charAt(0);\n        const className = 'lettertile ' + iconColor;\n        avatar = (<div className={className}><div>{letter}</div></div>)\n      } else {\n        const className = 'material-icons ' + iconColor;\n        avatar = isGroup ?\n          <i className={className}>group</i> : <i className={className}>person</i>;\n      }\n    } else if (this.props.avatar) {\n      const url = this.props.tinode.authorizeURL(sanitizeImageUrl(this.props.avatar));\n      // If avatar image is invalid, show a placeholder.\n      avatar = <img className=\"avatar\" alt=\"avatar\" src={url}\n        onError={(e)=>{e.target.onerror = null; e.target.src=\"../img/broken_image.png\"}} />;\n    } else {\n      avatar = null;\n    }\n    return avatar;\n  }\n}\n","// Received/read indicator.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { shortDateFormat } from '../lib/strformat.js';\nimport { deliveryMarker } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  message_sending: {\n    id: 'message_sending',\n    defaultMessage: 'sending...',\n    description: 'Message being sent, in place of time stamp'\n  },\n  message_sending_failed: {\n    id: 'message_sending_failed',\n    defaultMessage: 'failed',\n    description: 'Failed to send message, in place of time stamp'\n  }\n});\n\nclass ReceivedMarker extends React.PureComponent {\n  render() {\n    const {formatMessage} = this.props.intl;\n    let timestamp;\n    if (this.props.received <= Tinode.MESSAGE_STATUS_SENDING) {\n      timestamp = formatMessage(messages.message_sending);\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_FAILED) {\n      timestamp = formatMessage(messages.message_sending_failed);\n    } else {\n      timestamp = shortDateFormat(this.props.timestamp, this.props.intl.locale);\n    }\n\n    const icon = deliveryMarker(this.props.received);\n    const marker = icon ? <i className={'material-icons small ' + icon.color}>{icon.name}</i> : null;\n\n    return (\n      <span className=\"timestamp\">\n        {timestamp}{'\\u00a0'}{marker}\n      </span>\n    );\n  }\n};\n\nexport default injectIntl(ReceivedMarker);\n","// The counter of unread messages in the topic.\nimport React from 'react';\n\nexport default class UnreadBadge extends React.PureComponent {\n  render() {\n    return (this.props.count > 0 ?\n      <span className=\"unread\">{this.props.count > 9 ? \"9+\" : this.props.count}</span>\n      : null);\n  }\n};\n","// Image with a placeholder which is replaced when the promise is resolved.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class LazyImage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      src: 'img/placeholder.png',\n      style: Object.assign({padding: '4px'}, this.props.style),\n      className: this.props.className,\n      alt: this.props.alt,\n      onClick: this.props.onClick,\n    };\n  }\n\n  componentDidMount() {\n    // whenDone is a wrapper around an actual promise to be able to cancel it.\n    this.props.whenDone\n      .promise\n      .then(data => this.setState({src: data.src, style: {...this.state.style, padding: 0}}))\n      .catch(() => this.setState({src: 'img/broken_image.png'}));\n  }\n\n  componentWillUnmount() {\n    this.props.whenDone.cancel();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.whenDone != this.props.whenDone) {\n      this.setState({src: 'img/placeholder.png', style: {...this.state.style, padding: '4px'}});\n      this.props.whenDone\n        .promise\n        .then(data => this.setState({src: data.src, style: {...this.state.style, padding: 0}}))\n        .catch(() => this.setState({src: 'img/broken_image.png'}));\n    }\n  }\n\n  render() {\n    return React.createElement('img', this.state);\n  }\n};\n","// File uload/download progress indicator with a cancel inside.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class FileProgress extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"uploader\">\n        <div><span style={{width: (this.props.progress * 100) + \"%\"}}></span></div>\n        {this.props.progress < 0.999 ?\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n            <i className=\"material-icons\">close</i> <FormattedMessage id=\"action_cancel\"\n              defaultMessage=\"cancel\" description=\"Call to action [cancel]\" />\n          </a>\n          :\n          <FormattedMessage id=\"upload_finishing\" defaultMessage=\"finishing...\"\n            description=\"Notification that upload is finishing\" />\n        }\n      </div>\n    );\n  }\n}\n","// Image view with progress bar and a cancel button.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\n\nexport default class UploadingImage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"inline-image\">\n        {React.createElement('img', this.props)}\n        <div className=\"rounded-container\">\n          <FileProgress progress={this.props.progress} onCancel={this.props.onCancelUpload} />\n        </div>\n      </div>\n    );\n  }\n};\n","// File and image helper functions.\n\n// Supported image MIME types and corresponding file extensions.\nexport const SUPPORTED_IMAGE_FORMATS = ['image/jpeg', 'image/gif', 'image/png', 'image/svg', 'image/svg+xml'];\nexport const MIME_EXTENSIONS         = ['jpg',        'gif',       'png',       'svg',       'svg'];\n\n// Get an URL from a theCard photo: either create a data: URL or return reference URL.\nexport function makeImageUrl(photo) {\n  if (photo && typeof photo == 'object') {\n    if (photo.ref) {\n      return photo.ref\n    }\n    if (photo.data && photo.type) {\n      const mime = photo.type.startsWith('image/') ? photo.type : ('image/' + photo.type);\n      return 'data:' + mime + ';base64,' + photo.data;\n    }\n  }\n  return null;\n}\n\n// Calculate linear dimensions for scaling image down to fit under a certain size.\n// Returns an object which contains destination sizes, source sizes, and offsets\n// into source (when making square images).\nexport function fitImageSize(width, height, maxWidth, maxHeight, forceSquare) {\n  // Sanitize input\n  width = width | 0;\n  height = height | 0;\n  maxWidth = maxWidth | 0;\n  maxHeight = maxHeight | 0;\n\n  if (width <= 0 || height <= 0 || maxWidth <= 0 || maxHeight <= 0) {\n    return null;\n  }\n\n  if (forceSquare) {\n    maxWidth = maxHeight = Math.min(maxWidth, maxHeight);\n  }\n\n  const scale = Math.min(\n    Math.min(width, maxWidth) / width,\n    Math.min(height, maxHeight) / height\n  );\n\n  const size = {\n    dstWidth: (width * scale) | 0,\n    dstHeight: (height * scale) | 0,\n  };\n\n  if (forceSquare) {\n    // Also calculate parameters for making the image square.\n    size.dstWidth = size.dstHeight = Math.min(size.dstWidth, size.dstHeight);\n    size.srcWidth = size.srcHeight = Math.min(width, height);\n    size.xoffset = ((width - size.srcWidth) / 2) | 0;\n    size.yoffset = ((height - size.srcWidth) / 2) | 0;\n  } else {\n    size.xoffset = size.yoffset = 0;\n    size.srcWidth = width;\n    size.srcHeight = height;\n  }\n  return size;\n}\n\n// Ensure file's extension matches mime content type\nexport function fileNameForMime(fname, mime) {\n  const idx = SUPPORTED_IMAGE_FORMATS.indexOf(mime);\n  if (idx < 0 || !fname) {\n    // Unknown mime or empty name.\n    return fname;\n  }\n  const ext = MIME_EXTENSIONS[idx];\n\n  const at = fname.lastIndexOf('.');\n  if (at >= 0) {\n    fname = fname.substring(0, at);\n  }\n  return fname + '.' + ext;\n}\n\n// Scale uploaded image to fit under certain dimensions and byte size, optionally constraining to a square.\n// Returns a promise which is resolven on success or rejected on failure.\nexport function imageScaled(fileOrBlob, maxWidth, maxHeight, maxSize, forceSquare) {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    img.crossOrigin = 'Anonymous';\n    img.onerror = function(err) {\n      reject(new Error(\"Image format unrecognized\"));\n    }\n    img.onload = async function() {\n      // Once the image is loaded, the URL is no longer needed.\n      URL.revokeObjectURL(img.src);\n\n      // Calculate the desired image dimensions.\n      const dim = fitImageSize(img.width, img.height, maxWidth, maxHeight, forceSquare);\n      if (!dim) {\n        reject(new Error(\"Invalid image\"));\n        return;\n      }\n      let canvas = document.createElement('canvas');\n      canvas.width = dim.dstWidth;\n      canvas.height = dim.dstHeight;\n      let ctx = canvas.getContext('2d');\n      ctx.imageSmoothingEnabled = true;\n      ctx.drawImage(img, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n        0, 0, dim.dstWidth, dim.dstHeight);\n\n      const mime = SUPPORTED_IMAGE_FORMATS.includes(fileOrBlob.type) ? fileOrBlob.type : 'image/jpeg';\n      // Generate blob to check size of the image.\n      let blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n      if (!blob) {\n        reject(new Error(\"Unsupported image format\"));\n        return;\n      }\n      // Ensure the image is not too large. Shrink the image keeping the aspect ratio.\n      // Do nothing if maxsize is <= 0.\n      while (maxSize > 0 && blob.length > maxSize) {\n        dim.dstWidth = (dim.dstWidth * 0.70710678118) | 0;\n        dim.dstHeight = (dim.dstHeight * 0.70710678118) | 0;\n        canvas.width = dim.dstWidth;\n        canvas.height = dim.dstHeight;\n        ctx = canvas.getContext('2d');\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.drawImage(img, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n          0, 0, dim.dstWidth, dim.dstHeight);\n        blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n      }\n\n      canvas = null;\n      resolve({mime: mime, blob: blob, width: dim.dstWidth, height: dim.dstHeight, name: fileNameForMime(fileOrBlob.name, mime)});\n    };\n    img.src = URL.createObjectURL(fileOrBlob);\n  });\n}\n\n// Scale and crop image according to specified dimensions.\n// The coordinates are in unscaled image pixels, i.e. cut the rectangle first then scale it.\n// returns a promise.\nexport function imageCrop(mime, objURL, left, top, width, height, scale) {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    img.crossOrigin = 'Anonymous';\n    img.onerror = (err) => {\n      reject(new Error(\"Image format unrecognized\"));\n    };\n    img.onload = () => {\n      // Once the image is loaded, the URL is no longer needed.\n      URL.revokeObjectURL(img.src);\n\n      let canvas = document.createElement('canvas');\n      canvas.width = width * scale;\n      canvas.height = height * scale;\n      let ctx = canvas.getContext('2d');\n      ctx.imageSmoothingEnabled = true;\n      ctx.drawImage(img, left, top, width, height, 0, 0, canvas.width, canvas.height);\n\n      mime = SUPPORTED_IMAGE_FORMATS.includes(mime) ? mime : 'image/jpeg';\n      // Generate blob to check size of the image.\n      canvas.toBlob((blob) => {\n        // Allow GC.\n        canvas = null;\n        if (blob) {\n          resolve({mime: mime, blob: blob, width: width, height: height});\n        } else {\n          reject(new Error(\"Unsupported image format\"));\n        }\n      }, mime);\n    };\n    img.src = objURL;\n  });\n}\n\n// Convert file to base64 string.\nexport function fileToBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onerror = (evt) => {\n      reject(reader.error);\n    };\n    reader.onload = () => {\n      resolve({mime: file.type, bits: reader.result.split(',')[1], name: file.name});\n    };\n    reader.readAsDataURL(file);\n  });\n}\n\n// Convert Blob to base64 string. Returns a promise resolved with the base64 string and mime.\nexport function blobToBase64(blob) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onerror = (evt) => {\n      reject(reader.error);\n    };\n    reader.onload = () => {\n      resolve({mime: blob.type, bits: reader.result.split(',')[1]});\n    };\n    reader.readAsDataURL(blob);\n  });\n}\n\n// File pasted from the clipboard. It's either an inline image or a file attachment.\nexport function filePasted(event, onImageSuccess, onAttachmentSuccess, onError) {\n  const items = (event.clipboardData || event.originalEvent.clipboardData || {}).items;\n  if (!Array.isArray(items)) {\n    return false;\n  }\n\n  for (let i in items) {\n    const item = items[i];\n    if (item.kind === 'file') {\n      const file = item.getAsFile();\n      if (!file) {\n        console.error(\"Failed to get file object from pasted file item\", item.kind, item.type);\n        onError(\"Failed to get file object from pasted file item\");\n        continue;\n      }\n      if (file.type && file.type.split('/')[0] == 'image') {\n        onImageSuccess(file);\n      } else {\n        onAttachmentSuccess(file);\n      }\n      // Indicate that the pasted data contains a file.\n      return true;\n    }\n  }\n  // No file found.\n  return false;\n}\n\n// Get mime type from data URL header.\nexport function getMimeType(header) {\n  var mime = /^data:(image\\/[-+a-z0-9.]+);base64/.exec(header);\n  return (mime && mime.length > 1) ? mime[1] : null;\n}\n\n// Given length of a binary object in bytes, calculate the length after\n// base64 encoding.\nexport function base64EncodedLen(n) {\n  return Math.floor((n + 2) / 3) * 4;\n}\n\n// Given length of a base64-encoded object, calculate decoded size of the\n// pbject in bytes.\nexport function base64DecodedLen(n) {\n  return Math.floor(n / 4) * 3;\n}\n\n// Re-encode string to standard base64 encoding with padding.\n// The string may be base64-URL encoded without the padding.\nexport function base64ReEncode(str) {\n  if (str) {\n    str = str.replace(/-/g, '+').replace(/_/g, '/');\n    try {\n      str = btoa(atob(str));\n    } catch(err) {\n      console.error(\"Failed to base64 re-encode string.\", err);\n      str = null;\n    }\n  }\n  return str;\n}\n\n// Convert a base64 encoded string with the provided mime type into a Blob.\nexport function base64ToBlob(str, mime) {\n  if (!str) {\n    return null;\n  }\n\n  try {\n    // Make blob.\n    const bin = atob(str);\n    const length = bin.length;\n    const buf = new ArrayBuffer(length);\n    const arr = new Uint8Array(buf);\n    for (let i = 0; i < length; i++) {\n      arr[i] = bin.charCodeAt(i);\n    }\n\n    return new Blob([buf], { type: mime });\n  } catch(err) {\n    console.error(\"Failed to convert base64 to blob: \", err);\n  }\n\n  return null;\n}\n","import React from 'react';\nimport { defineMessages } from 'react-intl';\n\nimport { Drafty } from 'tinode-sdk';\n\nimport LazyImage from '../widgets/lazy-image.jsx'\nimport UploadingImage from '../widgets/uploading-image.jsx'\n\nimport { IMAGE_THUMBNAIL_DIM, BROKEN_IMAGE_SIZE, REM_SIZE } from '../config.js';\nimport { base64ToBlob, blobToBase64, fitImageSize, imageScaled } from './blob-helpers.js';\nimport { idToColorClass, shortenFileName } from './strformat.js';\nimport { cancelablePromise, sanitizeImageUrl } from './utils.js';\n\nconst messages = defineMessages({\n  drafty_form: {\n    id: 'drafty_form',\n    defaultMessage: 'Form: ',\n    description: 'Comment for form in drafty preview'\n  },\n  drafty_attachment: {\n    id: 'drafty_attachment',\n    defaultMessage: 'Attachment',\n    description: 'Comment for attachment in drafty preview'\n  },\n  drafty_image: {\n    id: 'drafty_image',\n    defaultMessage: 'Picture',\n    description: 'Comment for embedded images in drafty preview'\n  }\n});\n\n// Size the already scaled image.\nfunction handleImageData(el, data, attr) {\n  if (!data) {\n    attr.src = 'img/broken_image.png';\n    attr.style = {\n      width: IMAGE_THUMBNAIL_DIM + 'px',\n      height: IMAGE_THUMBNAIL_DIM + 'px',\n    };\n    return el;\n  }\n\n  attr.className = 'inline-image';\n  const dim = fitImageSize(data.width, data.height,\n    this.viewportWidth > 0 ? Math.min(this.viewportWidth - REM_SIZE * 6.5, REM_SIZE * 34.5) :\n      REM_SIZE * 34.5, REM_SIZE * 24, false) ||\n      {dstWidth: BROKEN_IMAGE_SIZE, dstHeight: BROKEN_IMAGE_SIZE};\n  attr.style = {\n    width: dim.dstWidth + 'px',\n    height: dim.dstHeight + 'px',\n    // Looks like a Chrome bug: broken image does not respect 'width' and 'height'.\n    minWidth: dim.dstWidth + 'px',\n    minHeight: dim.dstHeight + 'px'\n  };\n  if (!Drafty.isProcessing(data)) {\n    attr.src = this.authorizeURL(sanitizeImageUrl(attr.src));\n    attr.alt = data.name;\n    if (attr.src) {\n      if (Math.max(data.width || 0, data.height || 0) > IMAGE_THUMBNAIL_DIM) {\n        // Allow previews for large enough images.\n        attr.onClick = this.onImagePreview;\n        attr.className += ' image-clickable';\n      }\n      attr.loading = 'lazy';\n    } else {\n      attr.src = 'img/broken_image.png';\n    }\n  } else {\n    // Use custom element instead of <img>.\n    el = UploadingImage;\n  }\n\n  return el;\n}\n\nfunction quotedImage(data) {\n  let promise;\n  // Get the blob from the image data.\n  if (data.val) {\n    const blob = base64ToBlob(data.val, data.mime);\n    promise = blob ? Promise.resolve(blob) : Prmise.reject(new Error(\"Invalid image\"));\n  } else {\n    promise = fetch(this.authorizeURL(sanitizeImageUrl(data.ref))).then(evt => {\n      if (evt.ok) {\n        return evt.blob();\n      } else {\n        throw new Error(`Image fetch unsuccessful: ${evt.status} ${evt.statusText}`);\n      }\n    });\n  }\n\n  // Scale the blob.\n  return promise\n    .then(blob => {\n      return imageScaled(blob, IMAGE_THUMBNAIL_DIM, IMAGE_THUMBNAIL_DIM, -1, true)\n    }).then(scaled => {\n      data.mime = scaled.mime;\n      data.size = scaled.blob.size;\n      data.width = scaled.width;\n      data.height = scaled.height;\n      delete data.ref;\n      // Keeping the original file name, if provided: ex.data.name;\n\n      return blobToBase64(scaled.blob);\n    }).then(b64 => {\n      data.val = b64.bits;\n      return data;\n    }).catch(err => {\n      delete data.val;\n      delete data.name;\n      data.width = IMAGE_THUMBNAIL_DIM;\n      data.height = IMAGE_THUMBNAIL_DIM;\n      data.maxWidth = IMAGE_THUMBNAIL_DIM;\n      data.maxHeight = IMAGE_THUMBNAIL_DIM;\n      // Rethrow.\n      throw err;\n    });\n}\n\n// The main Drafty formatter: converts Drafty elements into React classes. 'this' is set by the caller.\n// 'this' must contain:\n//    viewportWidth: this.props.viewportWidth;\n//    authorizeURL: this.props.tinode.authorizeURL\n//    onImagePreview: this.handleImagePreview\n//    onFormButtonClick: this.handleFormButtonClick\n//    onQuoteClick: this.handleQuoteClick (optional)\nexport function fullFormatter(style, data, values, key, stack) {\n  if (stack.includes('QQ')) {\n    return quoteFormatter.call(this, style, data, values, key);\n  }\n\n  if (!style) {\n    // Unformatted.\n    return values;\n  }\n\n  let el = Drafty.tagName(style);\n  const attr = Drafty.attrValue(style, data) || {};\n  attr.key = key;\n  switch (style) {\n    case 'BR':\n      values = null;\n      break;\n    case 'HL':\n      // Highlighted text. Assign class name.\n      attr.className = 'highlight';\n      break;\n    case 'HD':\n      el = null;\n      values = null;\n      break;\n    case 'IM':\n      // Additional processing for images\n      el = handleImageData.call(this, el, data, attr);\n      // Image element cannot have content.\n      values = null;\n      break;\n    case 'BN':\n      // Button\n      attr.onClick = this.onFormButtonClick;\n      let inner = React.Children.map(values, (child) => {\n        return typeof child == 'string' ? child : undefined;\n      });\n      if (!inner || inner.length == 0) {\n        inner = [attr.name]\n      }\n      // Get text which will be sent back when the button is clicked.\n      attr['data-title'] = inner.join('');\n      break;\n    case 'MN':\n      // Mention\n      attr.className = 'mention'\n      if (data) {\n        attr.className += ' ' + idToColorClass(data.val, false, true);\n      }\n      break;\n    case 'FM':\n      // Form\n      attr.className = 'bot-form';\n      break;\n    case 'RW':\n      // Form element formatting is dependent on element content.\n      break;\n    case 'QQ':\n      // Quote/citation.\n      attr.className = 'reply-quote'\n      attr.onClick = this.onQuoteClick;\n      break;\n    default:\n      if (el == '_UNKN') {\n        // Unknown element.\n        el = React.Fragment;\n        values = [<i className=\"material-icons gray\">extension</i>, ' '].concat(values || []);\n      }\n      break;\n  }\n  if (!el) {\n    return values;\n  }\n  return React.createElement(el, attr, values);\n}\n\n// Converts Drafty object into a one-line preview. 'this' is set by the caller.\n// 'this' must contain:\n//    formatMessage: this.props.intl.formatMessage\n//    messages: formatjs messages defined with defineMessages.\nexport function previewFormatter(style, data, values, key) {\n  if (!style) {\n    // Unformatted.\n    return values;\n  }\n\n  let el = Drafty.tagName(style);\n  const attr = { key: key };\n  switch (style) {\n    case 'BR':\n      // Replace new line with a space.\n      el = React.Fragment;\n      values = [' '];\n      break;\n    case 'HL':\n      // Make highlight less prominent in preview.\n      attr.className = 'highlight preview';\n      break;\n    case 'LN':\n    case 'MN':\n      // Disable links in previews.\n      el = 'span';\n      break;\n    case 'IM':\n      // Replace image with '[icon] Image'.\n      el = React.Fragment;\n      values = [<i key=\"im\" className=\"material-icons\">photo</i>, this.formatMessage(messages.drafty_image)];\n      break;\n    case 'BN':\n      el = 'span';\n      attr.className = 'flat-button faux';\n      break;\n    case 'FM':\n      el = React.Fragment;\n      values = [<i key=\"fm\" className=\"material-icons\">dashboard</i>,\n        this.formatMessage(messages.drafty_form)].concat(' ', values || []);\n      break;\n    case 'RW':\n      el = React.Fragment;\n      break;\n    case 'EX':\n      if (data) {\n        if (data.mime == 'application/json') {\n          // Ignore JSON attachments: they are form response payloads.\n          return null;\n        }\n        // Clear payload.\n        delete data.val;\n        delete data.ref;\n      }\n      el = React.Fragment;\n      values = [<i key=\"ex\" className=\"material-icons\">attachment</i>, this.formatMessage(messages.drafty_attachment)];\n      break;\n    case 'QQ':\n    case 'HD':\n      el = null;\n      values = null;\n      break;\n    default:\n      if (el == '_UNKN') {\n        el = React.Fragment;\n        values = [<i key=\"unkn\" className=\"material-icons\">extension</i>, ' '].concat(values || []);\n      }\n      break;\n  }\n  if (!el) {\n    return values;\n  }\n  return React.createElement(el, attr, values);\n};\n\n// Converts Drafty object into a quoted reply. 'this' is set by the caller.\nfunction inlineImageAttr(attr, data) {\n  attr.style = {\n    width: IMAGE_THUMBNAIL_DIM + 'px',\n    height: IMAGE_THUMBNAIL_DIM + 'px',\n    maxWidth: IMAGE_THUMBNAIL_DIM + 'px',\n    maxHeight: IMAGE_THUMBNAIL_DIM + 'px',\n  }\n  attr.className = 'inline-image';\n  attr.alt = this.formatMessage(messages.drafty_image);\n  if (!data) {\n    attr.src = 'img/broken_image.png';\n  }\n  attr.title = attr.alt;\n  return attr;\n}\n\n// Displays a portion of Drafty within 'QQ' quotes. 'this' is set by the caller.\n// 'this' must contain:\n//    formatMessage: this.props.intl.formatMessage\n//    messages: formatjs messages defined with defineMessages.\n//    authorizeURL: this.props.tinode.authorizeURL\n//    onQuoteClick: this.handleQuoteClick (optional)\nfunction quoteFormatter(style, data, values, key) {\n  if (['BR', 'EX', 'IM', 'MN'].includes(style)) {\n    let el = Drafty.tagName(style);\n    let attr = Drafty.attrValue(style, data) || {};\n    attr.key = key;\n    switch(style) {\n      case 'BR':\n        values = null;\n        break;\n      case 'IM':\n        attr = inlineImageAttr.call(this, attr, data);\n        values = [React.createElement('img', attr, null), ' ', attr.alt];\n        el = React.Fragment;\n        // Fragment attributes.\n        attr = {key: key};\n        break;\n      case 'MN':\n        el = 'span';\n        attr.className = 'mention'\n        if (data) {\n          attr.className += ' ' + idToColorClass(data.val, false, true);\n        }\n        break;\n      case 'EX':\n        let fname;\n        if (data) {\n          if (data.mime == 'application/json') {\n            // Ignore JSON attachments: they are form response payloads.\n            return null;\n          }\n          fname = data.name;\n          // Clear payload.\n          delete data.val;\n          delete data.ref;\n        }\n        el = React.Fragment;\n        values = [<i key=\"ex\" className=\"material-icons\">attachment</i>,\n          shortenFileName(fname, 16) || this.formatMessage(messages.drafty_attachment)];\n        break;\n    }\n    return React.createElement(el, attr, values);\n  }\n  return previewFormatter.call(this, style, data, values, key);\n}\n\n// Create image thumbnail suitable for inclusion in a quote.\nfunction quoteImage(data) {\n  let promise;\n  // Get the blob from the image data.\n  if (data.val) {\n    const blob = base64ToBlob(data.val, data.mime);\n    if (!blob) {\n      throw new Error(\"Invalid image\");\n    }\n    promise = Promise.resolve(blob);\n  } else if (data.ref) {\n    promise = fetch(this.authorizeURL(sanitizeImageUrl(data.ref)))\n      .then(evt => {\n        if (evt.ok) {\n          return evt.blob();\n        } else {\n          throw new Error(`Image fetch unsuccessful: ${evt.status} ${evt.statusText}`);\n        }\n      });\n  } else {\n    throw new Error(\"Missing image data\");\n  }\n\n  // Scale the blob.\n  return promise\n    .then(blob => {\n      // Cut the square from the center of the image and shrink it.\n      return imageScaled(blob, IMAGE_THUMBNAIL_DIM, IMAGE_THUMBNAIL_DIM, -1, true)\n    }).then(scaled => {\n      data.mime = scaled.mime;\n      data.size = scaled.blob.size;\n      data.width = scaled.width;\n      data.height = scaled.height;\n      delete data.ref;\n      // Keeping the original file name, if provided: ex.data.name;\n\n      data.src = URL.createObjectURL(scaled.blob);\n      return blobToBase64(scaled.blob);\n    }).then(b64 => {\n      data.val = b64.bits;\n      return data;\n    }).catch(err => {\n      delete data.val;\n      delete data.src;\n      data.width = IMAGE_THUMBNAIL_DIM;\n      data.height = IMAGE_THUMBNAIL_DIM;\n      // Rethrow.\n      throw err;\n    });\n}\n\n// Create a preview of a reply.\nexport function replyFormatter(style, data, values, key, stack) {\n  if (style == 'IM') {\n    const attr = inlineImageAttr.call(this, {key: key}, data);\n    let loadedPromise;\n    try {\n      loadedPromise = cancelablePromise(quoteImage.call(this, data));\n    } catch (error) {\n      loadedPromise = cancelablePromise(error);\n    }\n    attr.whenDone = loadedPromise;\n    values = [React.createElement(LazyImage, attr, null), ' ', attr.alt];\n    return React.createElement(React.Fragment, {key: key}, values);\n  } else if (style == 'QQ') {\n    if (stack.includes('QQ')) {\n      // Quote inside quote when forwarding a message.\n      return React.createElement('span', {key: key},\n        [<i key=\"qq\" className=\"material-icons\">format_quote</i>, ' ']);\n    }\n\n    const attr = Drafty.attrValue('QQ', data) || {};\n    attr.key = key;\n    attr.className = 'reply-quote'\n    return React.createElement(Drafty.tagName('QQ'), attr, values);\n  }\n  return quoteFormatter.call(this, style, data, values, key);\n}\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport ContactBadges from './contact-badges.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\nimport UnreadBadge from './unread-badge.jsx';\n\nimport { Drafty } from 'tinode-sdk';\n\nimport { previewFormatter } from '../lib/formatters.js';\nimport { deliveryMarker } from '../lib/utils.js';\n\nclass Contact extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.props.onSelected) {\n      // Index this.props.index is used by GroupManager.\n      this.props.onSelected(this.props.item, this.props.index);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.props.item, y: e.pageY, x: e.pageX });\n  }\n\n  render() {\n    let title = this.props.title;\n    if (!title) {\n      title = <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n        description=\"Title shown when the topic has no name\" /></i>;\n    } else if (title.length > 30) {\n      // FIXME: this is probably wrong for RTL languages.\n      title = title.substring(0, 28) + '…';\n    }\n    const online = this.props.now ? 'online' : 'offline';\n    const avatar = this.props.avatar ? this.props.avatar : true;\n    const badges = this.props.badges ? this.props.badges.slice() : [];\n    const icon_badges = [];\n    if (this.props.isVerified) {\n      icon_badges.push({icon: 'verified', color: 'verified-color'});\n    }\n    if (this.props.isStaff) {\n      icon_badges.push({icon: 'staff', color: 'staff-color'});\n    }\n    if (this.props.isDangerous) {\n      icon_badges.push({icon: 'dangerous', color: 'danger-color'});\n    }\n    if (this.props.acs) {\n      if (this.props.showMode) {\n        badges.push({name: this.props.acs.getMode(), key: 'mode'});\n      }\n      if (this.props.acs.isMuted()) {\n        icon_badges.push({icon: 'muted'});\n      }\n      if (!this.props.acs.isJoiner()) {\n        icon_badges.push({icon: 'banned'});\n      }\n    }\n\n    // The this.props.preview contains alreay shortened Drafty or string.\n    let preview;\n    if (typeof this.props.preview == 'string') {\n      preview = this.props.preview;\n    } else if (Drafty.isValid(this.props.preview)) {\n      preview = React.createElement(React.Fragment, null, Drafty.format(this.props.preview, previewFormatter,\n        {formatMessage: this.props.intl.formatMessage}));\n    } else if (this.props.preview) {\n      preview =\n        <><i className=\"material-icons gray\">warning_amber</i> <i className=\"gray\">\n          <FormattedMessage id=\"invalid_content\"\n            defaultMessage=\"invalid content\" description=\"Shown when the message is unreadable\" /></i>\n        </>;\n    }\n\n    const icon = deliveryMarker(this.props.received);\n    const marker = icon ? <i className={'material-icons small space-right' +\n      (icon.color ? ' ' + icon.color : '')}>{icon.name}</i> : null;\n\n    return (\n      <li className={!this.props.showCheckmark && this.props.selected ? 'selected' : null} onClick={this.handleClick}>\n        <div className=\"avatar-box\">\n          <LetterTile\n            tinode={this.props.tinode}\n            avatar={avatar}\n            title={this.props.title}\n            topic={this.props.item} />\n          {this.props.showOnline ? <span className={online} /> :\n            (this.props.showCheckmark && this.props.selected ?\n            <i className=\"checkmark material-icons\">check_circle</i>\n            : null)}\n        </div>\n        <div className=\"text-box\">\n          <div><span className=\"contact-title\">{title}</span>\n            {this.props.isChannel ? <img src=\"/img/channel.png\" className=\"channel\" alt=\"channel\" /> : null}\n            <ContactBadges badges={icon_badges} /><UnreadBadge count={this.props.unread} />\n          </div>\n          {this.props.showMode ?\n            <span><ContactBadges badges={badges} /></span> :\n            this.props.small ? null : <div className=\"contact-comment\">{marker}<span>{preview || this.props.comment || '\\u00A0'}</span></div>}\n        </div>\n        {this.props.showContextMenu ?\n          <span className=\"menuTrigger\">\n            <a href=\"#\" onClick={this.handleContextClick}>\n              <i className=\"material-icons\">expand_more</i>\n            </a>\n          </span> : null}\n      </li>\n    );\n  }\n};\n\nexport default injectIntl(Contact);\n","// A panel included into a list of contacts with an action text.\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\n\nclass ContactAction extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.onAction(this.props.action);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <li onClick={this.handleClick} className=\"action\">\n        <div className=\"action-text\">{formatMessage(this.props.title, this.props.values)}</div>\n      </li>\n    );\n  }\n};\n\nexport default injectIntl(ContactAction);\n","// ContactList: component for showing a list of contacts,\n// such as a list of group members in a group chat.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { Drafty } from 'tinode-sdk';\nimport Tinode from 'tinode-sdk';\n\nimport Contact from './contact.jsx';\nimport ContactAction from './contact-action.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nimport { MESSAGE_PREVIEW_LENGTH } from '../config.js';\n\nconst messages = defineMessages({\n  badge_you: {\n    id: 'badge_you',\n    defaultMessage: 'you',\n    description: 'Badge for indicating the current user'\n  },\n  badge_owner: {\n    id: 'badge_owner',\n    defaultMessage: 'owner',\n    description: 'Badge for indicating the owner'\n  }\n});\n\nclass ContactList extends React.Component {\n  render() {\n    const { formatMessage } = this.props.intl;\n    const showCheckmark = Array.isArray(this.props.topicSelected);\n    const contactNodes = [];\n    let contactsCount = 0;\n    if (this.props.contacts && this.props.contacts.length > 0) {\n      this.props.contacts.map((c) => {\n        if (c.action) {\n          // Action item\n          contactNodes.push(\n            <ContactAction\n              title={c.title} action={c.action} values={c.values}\n              key={c.action}\n              onAction={this.props.onAction}\n              />);\n        } else {\n          // Normal contact\n          const key = this.props.showMode ? c.user : (c.topic || c.user);\n          // If filter function is provided, filter out the items\n          // which don't satisfy the condition.\n          if (this.props.filterFunc && this.props.filter) {\n            const filterOn = [key];\n            if (c.private && c.private.comment) {\n              filterOn.push(('' + c.private.comment).toLowerCase());\n            }\n            if (c.public && c.public.fn) {\n              filterOn.push(('' + c.public.fn).toLowerCase());\n            }\n            if (!this.props.filterFunc(this.props.filter, filterOn)) {\n              return;\n            }\n          }\n\n          const isChannel = Tinode.isChannelTopicName(key);\n          const selected = showCheckmark ?\n            (this.props.topicSelected.indexOf(key) > -1) :\n            (this.props.topicSelected === key);\n          const badges = [];\n          if (this.props.showMode) {\n            if (key == this.props.myUserId) {\n              badges.push({name: formatMessage(messages.badge_you), color: 'green'});\n            }\n            if (c.acs && c.acs.isOwner()) {\n              badges.push({name: formatMessage(messages.badge_owner), color: 'blue'});\n            }\n          }\n\n          const comment = Array.isArray(c.private) ?\n            c.private.join(',') : (c.private ? c.private.comment : null);\n          let preview;\n          let forwarded;\n          let deliveryStatus;\n          if (!this.props.showMode && c.latestMessage) {\n            const msg = c.latestMessage(true);\n            if (msg) {\n              forwarded = msg.head ? msg.head.forwarded : null;\n              deliveryStatus = msg._status || c.msgStatus(msg, true);\n              if (msg.content) {\n                preview = typeof msg.content == 'string' ?\n                  msg.content.substr(0, MESSAGE_PREVIEW_LENGTH) :\n                  Drafty.preview(msg.content, MESSAGE_PREVIEW_LENGTH);\n              }\n            }\n          }\n\n          contactNodes.push(\n            <Contact\n              tinode={this.props.tinode}\n              title={c.public ? c.public.fn : null}\n              avatar={makeImageUrl(c.public ? c.public.photo : null)}\n              comment={comment}\n              preview={preview}\n              forwarded={forwarded}\n              received={deliveryStatus}\n              unread={this.props.showUnread ? c.unread : 0}\n              now={c.online && this.props.connected}\n              acs={c.acs}\n              showMode={this.props.showMode}\n              badges={badges}\n              showCheckmark={showCheckmark}\n              selected={selected}\n              showOnline={this.props.showOnline && !isChannel}\n              isChannel={isChannel}\n              onSelected={this.props.onTopicSelected}\n              showContextMenu={this.props.showContextMenu}\n              isVerified={c.trusted && c.trusted.verified}\n              isStaff={c.trusted && c.trusted.staff}\n              isDangerous={c.trusted && c.trusted.danger}\n              item={key}\n              index={contactNodes.length}\n              key={key} />\n          );\n          contactsCount ++;\n        }\n      }, this);\n    }\n\n    return (\n      <div className={this.props.noScroll ? null : \"scrollable-panel\"}>\n        {contactsCount == 0 ?\n          <div className=\"center-medium-text\"\n            dangerouslySetInnerHTML={{__html: this.props.emptyListMessage}} />\n          :\n          null\n        }\n        {contactNodes.length > 0 ?\n          <ul className=\"contact-box\">\n            {contactNodes}\n          </ul>\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ContactList);\n","import React from 'react';\n\nimport Tinode from 'tinode-sdk';\n\nexport default class SearchContacts extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      edited: false,\n      search: ''\n    };\n\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  componentWillUnmount() {\n    if (this.state.edited) {\n      this.setState({search: '', edited: false});\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n  }\n\n  handleSearchChange(e) {\n    this.setState({search: e.target.value});\n  }\n\n  handleSearch(e) {\n    e.preventDefault();\n    var query = this.state.search.trim();\n    this.setState({edited: (query.length > 0)});\n    this.props.onSearchContacts(query.length > 0 ? query : Tinode.DEL_CHAR);\n  }\n\n  handleClear(e) {\n    e.preventDefault();\n    if (this.state.edited) {\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n    this.setState({search: '', edited: false});\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Enter') {\n      this.handleSearch(e);\n    } else if (e.key === 'Escape') {\n      this.handleClear();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <i className=\"material-icons search\">search</i>\n          <input className=\"search\" type=\"text\"\n              placeholder={this.props.placeholder}\n              value={this.state.search} onChange={this.handleSearchChange}\n              onKeyDown={this.handleKeyDown} required autoFocus />\n          {this.state.search ?\n            <a href=\"#\" onClick={this.handleClear}><i className=\"material-icons\">highlight_off</i></a>\n            :\n            <span><i className=\"material-icons\">&nbsp;</i></span>}\n        </div>\n      </div>\n    );\n  }\n};\n","// Forward Menu: message forwarding popup/dropdown menu.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport ContactList from './contact-list.jsx';\nimport SearchContacts from './search-contacts.jsx';\n\nexport default class ForwardDialog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      query: null\n    };\n\n    this.handleEscapeKey = this.handleEscapeKey.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.onInitFind();\n  }\n\n  handleEscapeKey(e) {\n    if (e.keyCode === 27) {\n      // Not forwarding the message.\n      this.props.hide(false);\n    }\n  }\n\n  handleClose(e) {\n    e.preventDefault();\n    this.props.hide(false);\n  }\n\n  handleSearchContacts(query) {\n    this.setState({ query: Tinode.isNullValue(query) ? null : query });\n    this.props.onSearchContacts(query);\n  }\n\n  handleContactSelected(uid) {\n    this.props.onTopicSelected(uid);\n    this.props.hide(true);\n  }\n\n  render() {\n    let contacts = this.state.query != null ? this.props.searchResults : this.props.contacts;\n    // Filter out contacts without a 'W' or 'J' permissions as well as the current topic.\n    contacts = contacts.filter((c) => {\n      return (c.name != this.props.topicSelected) && c.acs.isJoiner() && c.acs.isWriter();\n    });\n\n    return (\n      <div className=\"alert-container\">\n        <div className=\"forward-dialog\">\n          <div className=\"title with-control\">\n            <div><FormattedMessage id=\"forward_to\" defaultMessage=\"Forward to\"\n              desription=\"Title of the contact selector dialog when forwarding a message\" /></div>\n            <div><a href=\"#\" onClick={this.handleClose}><i className=\"material-icons\">close</i></a></div>\n          </div>\n          <FormattedMessage id=\"forward_to_search_placeholder\" defaultMessage=\"Search contacts\"\n            description=\"Contact search prompt when forwarding a message.\">{\n            (search_placeholder) => <SearchContacts\n              placeholder={search_placeholder}\n              onSearchContacts={this.handleSearchContacts} />\n          }</FormattedMessage>\n          <FormattedMessage id=\"search_no_results\" defaultMessage=\"Search returned no results\"\n              description=\"Text shown in contacts view when query returned no results.\">{\n            (not_found_placeholder) => <ContactList\n              tinode={this.props.tinode}\n              contacts={contacts}\n              myUserId={this.props.myUserId}\n              emptyListMessage={not_found_placeholder}\n              showOnline={false}\n              showUnread={false}\n              showContextMenu={false}\n              onTopicSelected={this.handleContactSelected} />\n          }</FormattedMessage>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class LoadSpinner extends React.PureComponent {\n  render() {\n    const className = 'load-spinner-box' + (this.props.large ? ' large' : '')\n      + (this.props.clear ? ' clear' : '') + (this.props.centered ? ' centered' : '');\n    return (this.props.show ?\n      <div className={className}><div className=\"loader-spinner\"></div></div> : null);\n  }\n}\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\nimport LoadSpinner from './load-spinner.jsx';\n\nimport { sanitizeImageUrl } from '../lib/utils.js';\n\nimport { AVATAR_SIZE } from '../config.js';\n\nexport default class AvatarUpload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      source: props.avatar\n    };\n\n    this.handleFileReceived = this.handleFileReceived.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.avatar != prevProps.avatar) {\n      this.setState({source: this.props.avatar});\n    }\n  }\n\n  handleFileReceived(e) {\n    const image = e.target.files[0];\n    this.props.onImageUpdated(image.type, URL.createObjectURL(image), image.name);\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  render() {\n    // Randomize id value in case more than one AvatarUpload is shown\n    // at the same time.\n    const randId = 'file-input-avatar-' + ('' + Math.random()).substring(0, 4);\n    const className = 'avatar-upload' + (this.props.readOnly ? ' read-only' : '');\n    return (\n      <div className={className}>\n        {this.props.readOnly || !this.state.source ?\n          null :\n          <a href=\"#\" className=\"clear-avatar\" onClick={(e) => {e.preventDefault(); this.props.onImageUpdated();}}>\n            <i className=\"material-icons\">clear</i>\n          </a>}\n        {this.state.source ?\n          <img src={this.props.tinode.authorizeURL(sanitizeImageUrl(this.state.source))} className=\"preview\" /> :\n          this.props.readOnly && this.props.uid ?\n            <div className=\"avatar-box\">\n              <LetterTile\n                tinode={this.props.tinode}\n                avatar={true}\n                topic={this.props.uid}\n                title={this.props.title} />\n            </div>\n            :\n            <div className=\"blank\">{AVATAR_SIZE}&times;{AVATAR_SIZE}</div>}\n        {this.props.readOnly ? null :\n          <input type=\"file\" id={randId} className=\"inputfile hidden\"\n            accept=\"image/*\" onChange={this.handleFileReceived} />}\n        {this.props.readOnly ? null :\n        <label htmlFor={randId} className=\"round\">\n          <i className=\"material-icons\">file_upload</i>\n        </label>}\n        <LoadSpinner show={this.props.uploading} large={true} clear={true} centered={true} />\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nconst icon_mapping = {'staff': 'verified_user'};\n\nconst messages = defineMessages({\n  badge_verified: {\n    id: 'badge_verified',\n    defaultMessage: 'Verified/official',\n    description: 'Explanation of a verified account or topic badge'\n  },\n  badge_staff: {\n    id: 'badge_staff',\n    defaultMessage: 'Staff-managed',\n    description: 'Explanation of a staff-managed account or topic badge'\n  },\n  badge_danger: {\n    id: 'badge_danger',\n    defaultMessage: 'Untrustworthy',\n    description: 'Suspicious or untrustworthy account or topic badge'\n  },\n});\n\n\n/* Trusted badges with labels: verified, staff, danger */\nclass BadgeList extends React.PureComponent {\n  render() {\n    const {formatMessage} = this.props.intl;\n    let badges = null;\n    if (this.props.trustedBadges && this.props.trustedBadges.length > 0) {\n      badges = [];\n      this.props.trustedBadges.map((b) => {\n        const comment = formatMessage(messages['badge_' + b]);\n        const style = 'material-icons ' + b + '-color';\n        badges.push(<div className=\"trusted-badge\" key={b}><i className={style}>{icon_mapping[b] || b}</i> {comment}</div>);\n      });\n      return <>{badges}</>;\n    }\n    return null;\n  }\n};\n\nexport default injectIntl(BadgeList);\n","import React from 'react';\n\n/* BEGIN CheckBox: styled checkbox */\nexport default class CheckBox extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange() {\n    this.props.onChange(this.props.name, !this.props.checked);\n  }\n\n  render() {\n    return (\n      this.props.onChange ? (\n        this.props.checked === true ?\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box</i> :\n        this.props.checked === false ?\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box_outline_blank</i> :\n          <i className=\"material-icons lt-blue\">indeterminate_check_box</i>\n        ) : (\n          this.props.checked ?\n            <i className=\"material-icons\">check_box</i> :\n            <i className=\"material-icons\">check_box_outline_blank</i>\n        )\n    );\n  }\n}\n/* END CheckBox */\n","// The X menu to be displayed in title bars.\nimport React from 'react';\n\nexport default class MenuCancel extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n        <i className=\"material-icons\">close</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nimport MenuCancel from './menu-cancel.jsx';\n\nexport default class ErrorPanel extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      show: false,\n    };\n\n    this.hide = this.hide.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.level !== this.props.level) {\n      this.setState({\n        show: !(!this.props.level)\n      });\n    }\n  }\n\n  hide() {\n    this.setState({show: false});\n    if (this.props.onClearError) {\n      this.props.onClearError();\n    }\n  }\n\n  render() {\n    const icons = {err: 'error', warn: 'warning', info: 'info'}\n    const level = icons[this.props.level] || '';\n    const className = 'info-box ' + level;\n    return (\n      <div className={className}>\n        <div className=\"icon\"><i className=\"material-icons\">{level}</i></div>\n        <span>\n          {this.props.text}\n          {this.props.action ?\n            <>\n              &#32;<a href=\"#\"\n                style={{ whiteSpace: 'nowrap' }}\n                onClick={(e) => {e.preventDefault(); this.props.action();}}>\n                {this.props.actionText}\n              </a>\n            </>\n          : null}\n        </span>\n        <div className=\"cancel\"><MenuCancel onCancel={this.hide} /></div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\n\nexport default class Chip extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel(this.props.topic, this.props.index);\n  }\n\n  render() {\n    const title = this.props.title || this.props.topic;\n    const className = this.props.invalid ? 'chip invalid' : 'chip';\n    return (\n      <div className={className}>\n        {this.props.noAvatar ?\n          <span className=\"spacer\" /> :\n          <div className=\"avatar-box\">\n            <LetterTile\n              tinode={this.props.tinode}\n              avatar={this.props.avatar || true}\n              topic={this.props.topic}\n              title={this.props.title} />\n          </div>\n        }\n        <span>{title}</span>\n        {this.props.onCancel && !this.props.required ?\n          <a href=\"#\" onClick={this.handleCancel} >&times;</a>\n          : <span className=\"spacer\" />}\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport Chip from './chip.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n/* BEGIN ChipInput: group membership widget */\nexport default class ChipInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = ChipInput.deriveStateFromProps(props);\n    this.state.input = '';\n    this.state.focused = false;\n\n    this.handleTextInput = this.handleTextInput.bind(this);\n    this.removeChipAt = this.removeChipAt.bind(this);\n    this.handleChipCancel = this.handleChipCancel.bind(this);\n    this.handleFocusGained = this.handleFocusGained.bind(this);\n    this.handleFocusLost = this.handleFocusLost.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  static deriveStateFromProps(props) {\n    return {\n      placeholder: props.chips ? '' : props.prompt,\n      sortedChips: ChipInput.sortChips(props.chips, props.staticMembers),\n      chipIndex: ChipInput.indexChips(props.chips)\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chips != this.props.chips ||\n      prevProps.staticMembers != this.props.staticMembers ||\n      prevProps.prompt != this.props.prompt) {\n      this.setState(ChipInput.deriveStateFromProps(this.props));\n    }\n    if (!prevState || this.props.chips.length > prevState.sortedChips.length) {\n      this.setState({input: ''});\n    }\n  }\n\n  // Map chip index to user name\n  static indexChips(chips) {\n    const index = {};\n    let count = 0;\n    chips.map((item) => {\n      index[item.user] = count;\n      count ++;\n    });\n    return index;\n  }\n\n  // Have non-removable chips appear before all other chips.\n  static sortChips(chips, keep) {\n    const required = [];\n    const normal = [];\n    chips.map((item) => {\n      if (keep && keep.includes(item.user)) {\n        required.push(item);\n      } else {\n        normal.push(item);\n      }\n    });\n    return required.concat(normal);\n  }\n\n  handleTextInput(e) {\n    this.setState({input: e.target.value});\n    if (this.props.filterFunc) {\n      this.props.filterFunc(e.target.value);\n    }\n  }\n\n  removeChipAt(idx) {\n    const removed = this.state.sortedChips[idx];\n    this.props.onChipRemoved(removed.user, this.state.chipIndex[removed.user]);\n  }\n\n  handleChipCancel(item, idx) {\n    this.removeChipAt(idx);\n  }\n\n  handleFocusGained() {\n    this.setState({focused: true});\n  }\n\n  handleFocusLost() {\n    this.setState({focused: false});\n    if (this.props.onFocusLost) {\n      this.props.onFocusLost(this.state.input);\n    }\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Backspace') {\n      if (this.state.input.length == 0 && this.state.sortedChips.length > 0) {\n        const at = this.state.sortedChips.length - 1;\n        if (this.state.sortedChips[at].user !== this.props.staticMembers) {\n          this.removeChipAt(at);\n        }\n      }\n    } else if (e.key === 'Enter') {\n      if (this.props.onEnter) {\n        this.props.onEnter(this.state.input);\n      }\n    } else if (e.key === 'Escape') {\n      if (this.props.onCancel) {\n        this.props.onCancel();\n      }\n    }\n  }\n\n  render() {\n    const chips = [];\n    let count = 0;\n    const staticMembers = this.props.staticMembers || [];\n    this.state.sortedChips.map((item) => {\n      chips.push(\n        <Chip\n          tinode={this.props.tinode}\n          onCancel={this.handleChipCancel}\n          avatar={makeImageUrl(item.public ? item.public.photo : null)}\n          title={item.public ? item.public.fn : undefined}\n          noAvatar={this.props.avatarDisabled}\n          topic={item.user}\n          required={staticMembers.includes(item.user)}\n          invalid={item.invalid}\n          index={count}\n          key={item.user} />\n      );\n      count++;\n    });\n    const className = \"chip-input\" + (this.state.focused ? ' focused' : '');\n    const autoFocus = !(this.props.tabIndex > 0);\n    return (\n      <div className={className}>\n        {chips}\n        <input type=\"text\"\n          placeholder={this.state.placeholder}\n          onChange={this.handleTextInput}\n          onFocus={this.handleFocusGained}\n          onBlur={this.handleFocusLost}\n          onKeyDown={this.handleKeyDown}\n          value={this.state.input}\n          tabIndex={this.props.tabIndex}\n          autoFocus={autoFocus} />\n      </div>\n    );\n  }\n};\n","// GroupMembers: control for managing a list of group members.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\nimport ContactList from './contact-list.jsx';\n\nconst messages = defineMessages({\n  no_contacts: {\n    id: 'no_contacts',\n    defaultMessage: 'You have no contacts :-(',\n    description: 'Shown in ContactsView when the user has no contacts'\n  },\n  contacts_not_found_short: {\n    id: 'contacts_not_found_short',\n    defaultMessage: \"No contacts match ''{query}''\",\n    description: 'Shown in ContactsView when search returned no results'\n  }\n});\n\nclass GroupManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Array of topic members\n      members: props.members,\n      index: GroupManager.indexMembers(props.members),\n      staticMembers: GroupManager.staticMembers(props.members, props.keepInitialMembers, props.requiredMember),\n      contactFilter: '',\n      noContactsMessage: props.intl.formatMessage(messages.no_contacts),\n      selectedContacts: GroupManager.selectedContacts(props.members)\n    };\n\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleMemberRemoved = this.handleMemberRemoved.bind(this);\n    this.handleContactFilter = this.handleContactFilter.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static indexMembers(members) {\n    let index = {};\n    members.map((m) => {\n      index[m.user] = {delta: 0, present: true}; // Delta: 0 unchanged, +1 added, -1 removed\n    });\n    return index;\n  }\n\n  static staticMembers(members, keepInitial, requiredMember) {\n    let stat = [];\n    members.map((m) => {\n      if (keepInitial || m.user == requiredMember) {\n        stat.push(m.user);\n      }\n    });\n    return stat;\n  }\n\n  static selectedContacts(members) {\n    let sel = [];\n    members.map((m) => {\n      sel.push(m.user);\n    });\n    return sel;\n  }\n\n  handleContactSelected(userId, index) {\n    let status = this.state.index[userId];\n    if (status) {\n      if (status.present) {\n        // Prevent duplicate members\n        return;\n      }\n      status.delta += 1;\n      status.present = true;\n    } else {\n      status = {delta: 1, present: true};\n    }\n\n    let m = this.state.members.slice();\n    m.push(this.props.contacts[index]);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleMemberRemoved(userId, index) {\n    const status = this.state.index[userId];\n    if (!status || !status.present) {\n      return;\n    }\n    status.present = false;\n    status.delta -= 1;\n\n    let m = this.state.members.slice();\n    m.splice(index, 1);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleContactFilter(val) {\n    const {formatMessage} = this.props.intl;\n    const msg = !val ?\n      formatMessage(messages.no_contacts) :\n      formatMessage(messages.contacts_not_found_short, {query: val});\n\n    this.setState({contactFilter: val, noContactsMessage: msg});\n  }\n\n  static doContactFiltering(filter, values) {\n    if (filter) {\n      for (let i=0; i<values.length; i++) {\n        if (values[i].indexOf(filter) >= 0) {\n          return true;\n        }\n      }\n      return false;\n    }\n    return true;\n  }\n\n  handleSubmit() {\n    var instance = this;\n    var members = [];\n    var added = [];\n    var removed = [];\n\n    var keys = Object.keys(this.state.index);\n    keys.map(function(k) {\n      if (instance.state.index[k].present) {\n        members.push(k);\n      }\n\n      if (instance.state.index[k].delta > 0) {\n        added.push(k);\n      } else if (instance.state.index[k].delta < 0) {\n        removed.push(k);\n      }\n    });\n    this.props.onSubmit(members, added, removed);\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <div id=\"group-manager\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_group_members\" defaultMessage=\"Group Members\" description=\"Section title\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ChipInput\n            tinode={this.props.tinode}\n            chips={this.state.members}\n            staticMembers={this.state.staticMembers}\n            prompt=\"add members\"\n            filterFunc={this.handleContactFilter}\n            onChipRemoved={this.handleMemberRemoved} />\n        </div>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_all_contacts\" defaultMessage=\"All Contacts\"\n              description=\"Section title [All Contacts]\" />\n          </label>\n        </div>\n        <ContactList\n          tinode={this.props.tinode}\n          contacts={this.props.contacts}\n          myUserId={this.props.myUserId}\n          topicSelected={this.state.selectedContacts}\n          filter={this.state.contactFilter}\n          filterFunc={GroupManager.doContactFiltering}\n          emptyListMessage={this.state.noContactsMessage}\n          showOnline={false}\n          showUnread={false}\n          onTopicSelected={this.handleContactSelected} />\n        <div id=\"group-manager-buttons\" className=\"panel-form-row\">\n          <button className=\"secondary\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(GroupManager);\n","// PermissionsEditor: Component for editing permissions\n// <PermissionsEditor mode=\"JWROD\" skip=\"O\" onChange={this.handleCheckboxTest} />\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport CheckBox from './checkbox.jsx';\nimport Contact from './contact.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n// Translatable permission names.\nconst messages = defineMessages({\n  joiner: {\n    id: 'permission_join',\n    defaultMessage: \"Join ({val})\",\n    description: 'Name of J permission'\n  },\n  reader: {\n    id: 'permission_read',\n    defaultMessage: \"Read ({val})\",\n    description: 'Name of R permission'\n  },\n  writer: {\n    id: 'permission_write',\n    defaultMessage: \"Write ({val})\",\n    description: 'Name of W permission'\n  },\n  preser: {\n    id: 'permission_pres',\n    defaultMessage: \"Get notified ({val})\",\n    description: 'Name of P permission'\n  },\n  approver: {\n    id: 'permission_admin',\n    defaultMessage: \"Approve ({val})\",\n    description: 'Name of A permission'\n  },\n  sharer: {\n    id: 'permission_share',\n    defaultMessage: \"Share ({val})\",\n    description: 'Name of S permission'\n  },\n  deleter: {\n    id: 'permission_delete',\n    defaultMessage: \"Delete ({val})\",\n    description: 'Name of D permission'\n  },\n  owner: {\n    id: 'permission_owner',\n    defaultMessage: \"Owner ({val})\",\n    description: 'Name of O permission'\n  }\n});\n\nclass PermissionsEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mode: (props.mode || '').replace('N', '')\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(val) {\n    let mode = this.state.mode;\n    const idx = mode.indexOf(val);\n    if (idx == -1) {\n      mode += val;\n    } else {\n      mode = mode.replace(val, '');\n    }\n    this.setState({mode: mode});\n  }\n\n  handleSubmit() {\n    // Normalize string, otherwise cannot check if mode has changed.\n    const mode = (this.state.mode || 'N').split('').sort().join('');\n    const before = (this.props.mode || 'N').split('').sort().join('')\n    if (mode !== before) {\n      this.props.onSubmit(mode);\n    } else {\n      this.props.onCancel();\n    }\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const all = 'JRWPASDO';\n    const names = {\n      'J': formatMessage(messages.joiner, {val: 'J'}),\n      'R': formatMessage(messages.reader, {val: 'R'}),\n      'W': formatMessage(messages.writer, {val: 'W'}),\n      'P': formatMessage(messages.preser, {val: 'P'}),\n      'A': formatMessage(messages.approver, {val: 'A'}),\n      'S': formatMessage(messages.sharer, {val: 'S'}),\n      'D': formatMessage(messages.deleter, {val: 'D'}),\n      'O': formatMessage(messages.owner, {val: 'O'})\n    };\n\n    let skip = this.props.skip || '';\n    let mode = this.state.mode;\n    let compare = (this.props.compare || '').replace('N', '');\n    let items = [];\n    for (let i=0; i<all.length; i++) {\n      let c = all.charAt(i);\n      if (skip.indexOf(c) >= 0 && mode.indexOf(c) < 0) {\n        // Permission is marked as inactive: hide unchecked permissions, disable checked permissions\n        continue;\n      }\n      items.push(\n        <tr key={c}>\n          <td>{names[c]}</td>\n          <td className=\"checkbox\">{skip.indexOf(c) < 0 ?\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} onChange={this.handleChange}/>\n            :\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} />\n          }</td>{this.props.compare ? <td className=\"checkbox\">\n            <CheckBox name={c} checked={(compare.indexOf(c) >= 0)}/>\n          </td> : null}\n        </tr>\n      );\n    }\n\n    return (\n      <div className=\"panel-form-column\">\n        {this.props.userTitle ?\n          <ul className=\"contact-box small\"><Contact\n            tinode={this.props.tinode}\n            item={this.props.item}\n            title={this.props.userTitle}\n            small={true}\n            avatar={makeImageUrl(this.props.userAvatar ? this.props.userAvatar : null)} /></ul> : null}\n        <label className=\"small\"><FormattedMessage id=\"title_permissions\"\n          defaultMessage=\"Permissions\" description=\"Section title\"/></label>\n        <table className=\"permission-editor\">\n        {this.props.compare ?\n          <thead><tr>\n            <th></th><th>{this.props.modeTitle}</th>\n            <th>{this.props.compareTitle}</th>\n          </tr></thead> :\n          null}\n        <tbody>\n          {items}\n        </tbody></table>\n        <br />\n        <div className=\"dialog-buttons\">\n          <button className=\"outline\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(PermissionsEditor);\n","// Image zoom and crop widget.\n\nimport React from 'react';\n\nconst DEFAULT_MAX_ZOOM = 2.5;\n\nexport default class Cropper extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Coordinates of the top left corner of the image in container coordinates.\n      panX: 0,\n      panY: 0,\n      // Origin of the zoom in image coordinates.\n      originX: 0,\n      originY: 0,\n      // Zoom scale.\n      zoom: 1,\n      // Zoom min and max.\n      minZoom: 0,\n      maxZoom: DEFAULT_MAX_ZOOM,\n    };\n\n    // References to DOM elements for hooking up events and getting screen dimensions.\n    // The transparent element which captures mouse moves (moves with the image).\n    this.overlay = React.createRef();\n    // The image cutout window or view port (static).\n    this.cutout = React.createRef();\n    // Scaled and translated image preview.\n    this.preview = React.createRef();\n    // The main container (static).\n    this.boundingBox = React.createRef();\n\n    // The original image width and height before any scaling.\n    this.imageWidth = 0;\n    this.imageHeight = 0;\n\n    // Mouse position when dragging.\n    this.mouseX = 0\n    this.mouseY = 0;\n    // Length of the previous mouse move when dragging.\n    this.prevDistance = 0;\n\n    // Bounding rectangles of static elements.\n    this.cutoutRect = {};\n    this.bBoxRect = {};\n    // Center of the bounding box.\n    this.originX = 0;\n    this.originY = 0;\n\n    this.initScaling = this.initScaling.bind(this);\n    this.onZoom = this.onZoom.bind(this);\n    this.handleZoom = this.handleZoom.bind(this);\n    this.mouseDown = this.mouseDown.bind(this);\n    this.mouseUp = this.mouseUp.bind(this);\n    this.mouseMove = this.mouseMove.bind(this);\n    this.mouseTouch = this.mouseTouch.bind(this);\n    this.positionAll = this.positionAll.bind(this);\n    this.translate = this.translate.bind(this);\n  }\n\n  componentDidMount() {\n    this.overlay.current.addEventListener('mousedown', this.mouseDown, { passive: true });\n    this.overlay.current.addEventListener('touchstart', this.mouseDown, { passive: true });\n\n    // The rectangle position is in viewport coordinates.\n    this.bBoxRect = this.boundingBox.current.getBoundingClientRect();\n    // Center of the bounding box in container coordinates.\n    this.originX = this.bBoxRect.width / 2;\n    this.originY = this.bBoxRect.height / 2;\n\n    // The rectangle position is in viewport coordinates.\n    this.cutoutRect = this.cutout.current.getBoundingClientRect();\n  }\n\n  componentWillUnmount() {\n    this.overlay.current.removeEventListener('mousedown', this.mouseDown);\n    this.overlay.current.removeEventListener('touchstart', this.mouseDown);\n  }\n\n  // Position all elements.\n  positionAll(panX, panY, zoom) {\n    // Zoom origin in image preview coordinates.\n    this.setState({\n      panX: panX,\n      panY: panY,\n      zoom: zoom,\n      originX: this.originX - panX,\n      originY: this.originY - panY,\n    });\n\n    // Pass cut out coordinates to caller.\n    const left = (this.originX - panX) * zoom - this.originX;\n    const top = (this.originY - panY) * zoom - this.originY;\n    this.props.onChange(\n      (left + this.cutoutRect.left - this.bBoxRect.left) / zoom,\n      (top + this.cutoutRect.top - this.bBoxRect.top) / zoom,\n      this.cutoutRect.width / zoom,\n      this.cutoutRect.height / zoom,\n      zoom);\n  }\n\n  // Check if new location is within the limits.\n  static checkBound(currPan, img, cutout, delta) {\n    let nextDiff = Math.min(0, cutout[0] - img[0] - delta, img[1] - cutout[1] + delta);\n    if (nextDiff == 0) {\n      // Cutout is completely within the image.\n      currPan += delta;\n    } else if (Math.min(0, cutout[0] - img[0], img[1] - cutout[1]) < nextDiff) {\n      // Cutout is outside of the range but closer to the bound.\n      currPan += delta;\n    }\n    return currPan;\n  }\n\n  initScaling() {\n    // Initialize components.\n    const imgRect = this.preview.current.getBoundingClientRect();\n\n    this.imageWidth = imgRect.width;\n    this.imageHeight = imgRect.height;\n\n    // Set zoom slider's min and max values. Make sure the scaled image cannot be smaller than the cutout.\n    const minZoom = Math.max(this.cutoutRect.width / imgRect.width, this.cutoutRect.height / imgRect.height);\n    this.setState({\n      minZoom: minZoom,\n      maxZoom: Math.max(DEFAULT_MAX_ZOOM, minZoom + 1)\n    });\n\n    // Initial zoom level fills the bounding box at the smallest image dimension and overflows the largest, i.e. \"fill\" not \"fit\".\n    const zoom = Math.max(this.bBoxRect.width / imgRect.width, this.bBoxRect.height / imgRect.height);\n    // Converting from viewport coordinates to container, then panning.\n    const panX = this.cutoutRect.left - this.bBoxRect.left -\n      (imgRect.width - this.cutoutRect.width) / 2;\n    const panY = this.cutoutRect.top - this.bBoxRect.top -\n      (imgRect.height - this.cutoutRect.height) / 2;\n\n    this.positionAll(panX, panY, zoom);\n  }\n\n  onZoom(e) {\n    this.handleZoom(e.target.value);\n  }\n\n  handleZoom(zoom) {\n    let panX = this.state.panX;\n    let panY = this.state.panY;\n\n    // Ensure that the image at the new zoom is not outside of the cutout boundaries.\n    // Calculate image coordinates at the new zoom.\n    const imgLeft = this.originX - (this.originX - panX) * zoom;\n    const imgRight = imgLeft + this.imageWidth * zoom;\n    // Cutout in the same coordinates as the image.\n    const coLeft = this.cutoutRect.left - this.bBoxRect.left;\n    const coRight = coLeft + this.cutoutRect.width;\n    if (coLeft < imgLeft) {\n      panX -= imgLeft - coLeft;\n    } else if (coRight > imgRight) {\n      panX += coRight - imgRight;\n    }\n    const imgTop = this.originY - (this.originY - panY) * zoom;\n    const imgBottom = imgTop + this.imageHeight * zoom;\n    const coTop = this.cutoutRect.top - this.bBoxRect.top;\n    const coBottom = coTop + this.cutoutRect.height;\n    if (coTop < imgTop) {\n      panY -= imgTop - coTop;\n    } else if (coBottom > imgBottom) {\n      panY += coBottom - imgBottom;\n    }\n\n    this.positionAll(panX, panY, zoom);\n  }\n\n  mouseDown(e) {\n    if (e.touches) {\n      this.mouseX = e.touches[0].pageX;\n      this.mouseY = e.touches[0].pageY;\n    } else {\n      this.mouseX = e.pageX;\n      this.mouseY = e.pageY;\n    }\n\n    window.addEventListener('mousemove', this.mouseMove, { passive: false });\n    window.addEventListener('touchmove', this.mouseTouch, { passive: false });\n    window.addEventListener('mouseup', this.mouseUp, { passive: true });\n    window.addEventListener('touchend', this.mouseUp, { passive: true });\n    // Disable text selection in the entire document.\n    document.body.style['userSelect'] = 'none';\n  }\n\n  // Perform image panning.\n  translate(pageX, pageY) {\n    const dX = pageX - this.mouseX;\n    const dY = pageY - this.mouseY;\n\n    this.mouseX = pageX;\n    this.mouseY = pageY;\n\n    // Make sure the image is within the cutout window.\n    const imgRect = this.preview.current.getBoundingClientRect();\n\n    // Check if the new position is within the boundaries, and if not if it's closer to them.\n    let panX = Cropper.checkBound(this.state.panX, [imgRect.left, imgRect.right],\n      [this.cutoutRect.left, this.cutoutRect.right], dX);\n    let panY = Cropper.checkBound(this.state.panY, [imgRect.top, imgRect.bottom],\n      [this.cutoutRect.top, this.cutoutRect.bottom], dY);\n\n    this.positionAll(panX, panY, this.state.zoom);\n  }\n\n  // Image panning.\n  mouseMove(e) {\n    e.preventDefault();\n    this.translate(e.pageX, e.pageY);\n  }\n\n  mouseTouch(e) {\n    e.preventDefault();\n\n    if (e.touches.length == 1) {\n      this.translate(e.touches[0].pageX, e.touches[0].pageY);\n      return;\n    }\n\n    // Image zooming by pinching.\n    const [touch0, touch1] = e.touches;\n    const distance = Math.sqrt((touch0.pageX - touch1.pageX) * (touch0.pageX - touch1.pageX) +\n      (touch0.pageY - touch1.pageY) * (touch0.pageY - touch1.pageY));\n\n    if (!this.prevDistance) {\n        this.prevDistance = distance / this.state.zoom;\n    }\n\n    let scale = (distance / this.prevDistance);\n    this.handleZoom(Math.max(this.minZoom, Math.min(this.maxZoom, scale)));\n  }\n\n  mouseUp(e) {\n    window.removeEventListener('mousemove', this.mouseMove);\n    window.removeEventListener('touchmove', this.mouseTouch);\n    window.removeEventListener('mouseup', this.mouseUp);\n    window.removeEventListener('touchend', this.mouseUp);\n    // Re-enable text selection.\n    document.body.style['userSelect'] = '';\n\n    this.positionAll(this.state.panX, this.state.panY, this.state.zoom);\n  }\n\n  render() {\n    // transform3d: position and scale.\n    const t3d = `translate3d(${this.state.panX}px, ${this.state.panY}px, 0) scale(${this.state.zoom})`;\n    // transformOrigin: zoom origin.\n    const orig = `${this.state.originX}px ${this.state.originY}px`;\n\n    // Overlay position and size are exactly equal to the position and size of the transformed image\n    // except it uses different coordinates.\n    const overlay = {\n      top: `${this.originY - this.state.originY * this.state.zoom}px`,\n      left: `${this.originX - this.state.originX * this.state.zoom}px`,\n      width: `${this.imageWidth * this.state.zoom}px`,\n      height: `${this.imageHeight * this.state.zoom}px`\n    };\n    return (\n      <div className=\"cropper\">\n        <div className=\"bounding-box\" ref={this.boundingBox}>\n          <img src={this.props.source} className=\"preview\" alt=\"\"\n            style={{transform: t3d, transformOrigin: orig}} ref={this.preview} onLoad={this.initScaling} />\n          <div className=\"cutout circle\" ref={this.cutout} />\n          <div className=\"overlay\" style={overlay} ref={this.overlay} />\n        </div>\n        <div className=\"zoom-wrapper\">\n          <input type=\"range\" className=\"zoomer\"\n            step=\"0.001\" min={this.state.minZoom} max={this.state.maxZoom} value={this.state.zoom} onChange={this.onZoom} />\n        </div>\n      </div>\n    );\n  }\n}\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Cropper from './cropper.jsx';\nimport { imageCrop } from '../lib/blob-helpers.js';\n\nexport default class AvatarCrop extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      top: 0,\n      left: 0,\n      width: 0,\n      height: 0,\n      scale: 1\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  // Cut out in image coordinates and desired scale factor.\n  handleChange(left, top, width, height, scale) {\n    this.setState({\n      left: left,\n      top: top,\n      width: width,\n      height: height,\n      scale: scale\n    });\n  }\n\n  handleSubmit() {\n    imageCrop(this.props.mime, this.props.avatar,\n      this.state.left, this.state.top, this.state.width, this.state.height,\n      this.state.scale)\n      .then(img => {\n        this.props.onSubmit(img.mime, img.blob, img.width, img.height);\n      })\n      .catch(err => {\n        this.props.onError(err);\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <Cropper\n            source={this.props.avatar}\n            onChange={this.handleChange} />\n        </div>\n        <div className=\"dialog-buttons\">\n          {this.props.onCancel ?\n            <button className=\"secondary\" onClick={this.props.onCancel}>\n              <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n            </button>\n            : null}\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n","// Password with a visiblity toggle.\nimport React from 'react';\n\nexport default class VisiblePassword extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: this.props.value,\n      visible: false\n    };\n\n    this.handleVisibility = this.handleVisibility.bind(this);\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n    if (this.props.onChange) {\n      this.props.onChange(e);\n    }\n  }\n\n  handleVisibility(e) {\n    e.preventDefault();\n    this.setState({visible: !this.state.visible});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode == 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, visible: false});\n      if (this.props.onFinished) {\n        this.props.onFinished();\n      }\n    } else if (e.keyCode == 13) {\n      // Enter pressed\n      this.handleEditingFinished();\n    }\n  }\n\n  handleEditingFinished(e) {\n    if (e) {\n      let currentTarget = e.currentTarget;\n      setTimeout(() => {\n        if (!currentTarget.contains(document.activeElement)) {\n          if (this.props.onFinished) {\n            this.props.onFinished(this.state.value);\n          }\n        }\n      }, 0);\n    } else if (this.props.onFinished) {\n      this.props.onFinished(this.state.value.trim());\n    }\n  }\n\n  render() {\n    return (\n      <div tabIndex=\"-1\" className=\"group-focus\"\n        onBlur={this.handleEditingFinished}>\n        <input className=\"with-visibility\"\n          type={this.state.visible ? \"text\" : \"password\"}\n          value={this.state.value}\n          placeholder={this.props.placeholder}\n          required={this.props.required ? 'required' : ''}\n          autoFocus={this.props.autoFocus ? 'autoFocus' : ''}\n          autoComplete={this.props.autoComplete}\n          onChange={this.handeTextChange}\n          onKeyDown={this.handleKeyDown} />\n        <span onClick={this.handleVisibility}>\n          <i className=\"material-icons clickable light-gray\">\n            {this.state.visible ? 'visibility' : 'visibility_off'}\n          </i>\n        </span>\n      </div>\n    );\n  }\n}\n","// In-place text editor. Shows text with an icon which toggles it into an input field.\nimport React from 'react';\n\nimport VisiblePassword from './visible-password.jsx';\n\nexport default class InPlaceEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selfRef = React.createRef();\n\n    this.state = {\n      active: props.active,\n      initialValue: props.value || '',\n      value: props.value || ''\n    };\n\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleStartEditing = this.handleStartEditing.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n    this.handlePasswordFinished = this.handlePasswordFinished.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // If text has changed while in read mode, update text and discard changes.\n    // Ignore update if in edit mode.\n    const newValue = this.props.value || '';\n    if (prevState.initialValue != newValue && !prevState.active) {\n      this.setState({\n        initialValue: newValue,\n        value: newValue\n      });\n    }\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value || ''});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, active: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleEditingFinished(e);\n    }\n  }\n\n   handleStartEditing() {\n    if (!this.props.readOnly) {\n      this.setState({active: true}, () => {\n        if (this.selfRef.current) {\n          this.selfRef.current.focus();\n        }\n      });\n    }\n  }\n\n  handleEditingFinished(event) {\n    const value = this.state.value.trim();\n    if (this.props.required && (!event.target.checkValidity() || !value)) {\n      // Empty input\n      this.setState({value: this.props.value, active: false});\n      return;\n    }\n    this.setState({active: false});\n    if ((value || this.props.value) && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  handlePasswordFinished(value) {\n    this.setState({active: false});\n    if (value && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  render() {\n    if (!this.state.active) {\n      let spanText = this.props.type == 'password' ? '••••••••' : this.state.value;\n      let spanClass = 'in-place-edit' + (this.props.readOnly ? ' disabled' : '');\n      if (!spanText) {\n        spanText = this.props.placeholder;\n        spanClass += ' placeholder';\n      }\n      if (!this.props.multiline || this.props.multiline == 1) {\n        spanClass += ' short';\n      }\n\n      return (<span className={spanClass} onClick={this.handleStartEditing}>\n        <span>{spanText}</span>\n      </span>);\n    }\n\n    let element;\n    const attr = {};\n    if (this.props.type == 'password') {\n      element = VisiblePassword;\n      attr.onFinished = this.handlePasswordFinished;\n    } else {\n      if (this.props.multiline > 1) {\n        element = 'textarea';\n        attr.rows = this.props.multiline;\n        attr.className = 'inplace-edit';\n      } else {\n        element = 'input';\n        attr.type = this.props.type || 'text';\n      }\n      attr.value = this.state.value;\n      attr.onChange = this.handeTextChange;\n      attr.onKeyDown = this.handleKeyDown;\n      attr.onBlur = this.handleEditingFinished;\n    }\n    attr.placeholder = this.props.placeholder;\n    attr.required = this.props.required ? 'required' : '';\n    attr.autoComplete = this.props.autoComplete;\n    attr.autoFocus = true;\n    attr.ref = this.selfRef;\n\n    return React.createElement(element, attr, null);\n  }\n};\n","// TagManager: edit topic or user tags.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\n\nimport { MAX_TAG_COUNT, MAX_TAG_LENGTH, MIN_TAG_LENGTH } from '../config.js';\nimport { arrayEqual } from '../lib/utils.js';\n\nexport default class TagManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tags: this.props.tags || [],\n      tagInput: '',\n      activated: this.props.activated\n    };\n\n    this.handleTagInput = this.handleTagInput.bind(this);\n    this.handleAddTag = this.handleAddTag.bind(this);\n    this.handleRemoveTag = this.handleRemoveTag.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const tags = nextProps.tags || [];\n    if (!arrayEqual(tags, prevState.tags) && !prevState.activated) {\n      return {tags: tags};\n    }\n    return null;\n  }\n\n  handleTagInput(text) {\n    this.setState({tagInput: text});\n    if (text.length > 0) {\n      const last = text[text.length-1];\n      if (text[0] == '\"') {\n        // This is a quoted string.\n        if (text.length > 1 && last == '\"') {\n          this.handleAddTag(text.substring(1, text.length-1));\n        }\n      } else if (last == ',' || last == ' ' || last == ';' || last == '\"') {\n        // User entered ',', ' ' or ';'\n        this.handleAddTag(text.substring(0, text.length-1).trim());\n      }\n    }\n  }\n\n  handleAddTag(tag) {\n    const maxTagCount = this.props.tinode.getServerLimit('maxTagCount', MAX_TAG_COUNT);\n\n    if (tag.length > 0 && this.state.tags.length < maxTagCount) {\n      const tags = this.state.tags.slice(0);\n      tags.push(tag);\n\n      this.setState({tags: tags, tagInput: ''});\n      if (this.props.onTagsChanged) {\n        this.props.onTagsChanged(tags);\n      }\n      return tags;\n    }\n    return this.state.tags;\n  }\n\n  handleRemoveTag(tag, index) {\n    const tags = this.state.tags.slice(0);\n    tags.splice(index, 1);\n    this.setState({tags: tags});\n    if (this.props.onTagsChanged) {\n      this.props.onTagsChanged(tags);\n    }\n  }\n\n  handleSubmit() {\n    // Add unprocessed input to tags, submit the list.\n    this.props.onSubmit(this.handleAddTag(this.state.tagInput.trim()));\n    this.setState({activated: false, tags: this.props.tags || []});\n  }\n\n  handleCancel() {\n    this.setState({activated: false, tagInput: '', tags: this.props.tags || []});\n    if (this.props.onCancel) {\n      this.props.onCancel();\n    }\n  }\n\n  render() {\n    const minTagLength = this.props.tinode.getServerLimit('minTagLength', MIN_TAG_LENGTH);\n    const maxTagLength = this.props.tinode.getServerLimit('maxTagLength', MAX_TAG_LENGTH);\n\n    let tags = [];\n    if (this.state.activated) {\n      this.state.tags.map((tag) => {\n        tags.push({user: tag, invalid: (tag.length < minTagLength || tag.length > maxTagLength)});\n      });\n    } else {\n      this.state.tags.map((tag) => {\n        tags.push(<span className=\"badge\" key={tags.length}>{tag}</span>);\n      });\n      if (tags.length == 0) {\n        tags = (\n          <i>\n            <FormattedMessage id=\"tags_not_found\" defaultMessage=\"No tags defined. Add some.\" description=\"\" />\n          </i>\n        );\n      }\n    }\n    return (\n      <div className=\"panel-form-column\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">{this.props.title}</label>\n        </div>\n        {this.state.activated ?\n        <div>\n          <FormattedMessage id=\"tags_editor_no_tags\" defaultMessage=\"Add some tags\"\n            description=\"Tag editor prompt when no tags are found.\">{\n            (add_tags_prompt) => <ChipInput\n              tinode={this.props.tinode}\n              chips={tags}\n              avatarDisabled={true}\n              prompt={add_tags_prompt}\n              tabIndex={this.props.tabIndex}\n              onEnter={this.handleAddTag}\n              onFocusLost={this.handleAddTag}\n              onCancel={this.handleCancel}\n              onChipRemoved={this.handleRemoveTag}\n              filterFunc={this.handleTagInput} />\n          }</FormattedMessage>\n          {this.props.onSubmit || this.props.onCancel ?\n            <div id=\"tag-manager-buttons\" className=\"dialog-buttons panel-form-row\">\n              <button className=\"outline\" onClick={this.handleCancel}>\n                <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n              </button>\n              <button className=\"primary\" onClick={this.handleSubmit}>\n                <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n              </button>\n            </div>\n          : null}\n        </div>\n        :\n        <div className=\"quoted\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.setState({activated: true});}}>\n            <i className=\"material-icons\">edit</i> &nbsp;<FormattedMessage id=\"title_manage_tags\" defaultMessage=\"Manage\"\n              description=\"Section title for the list of tags\" />\n          </a>\n          <>{tags}</>\n        </div>\n      }\n      </div>\n    );\n  }\n};\n","// Widget for editing topic description.\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarCrop from './avatar-crop.jsx';\nimport AvatarUpload from './avatar-upload.jsx';\nimport InPlaceEdit from './in-place-edit.jsx';\nimport TagManager from './tag-manager.jsx';\n\nimport { AVATAR_SIZE, MAX_AVATAR_BYTES, MAX_EXTERN_ATTACHMENT_SIZE, MAX_TITLE_LENGTH,\n  MAX_TOPIC_DESCRIPTION_LENGTH } from '../config.js';\nimport { imageScaled, blobToBase64, makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, theCard } from '../lib/utils.js';\n\nexport default class TopicDescEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    const acs = topic.getAccessMode();\n    this.state = {\n      isMe: Tinode.isMeTopicName(this.props.topic),\n      owner: acs && acs.isOwner(),\n      fullName: topic.public ? topic.public.fn : undefined,\n      private: topic.private ? topic.private.comment : null,\n      description: topic.public ? topic.public.note : undefined,\n      avatar: makeImageUrl(topic.public ? topic.public.photo : null),\n      tags: topic.tags() || [],\n      newAvatar: null,\n      newAvatarMime: null\n    };\n\n    this.previousOnTags = null;\n\n    this.tnNewTags = this.tnNewTags.bind(this);\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\n    this.handleImageUpdated = this.handleImageUpdated.bind(this);\n    this.handleAvatarCropped = this.handleAvatarCropped.bind(this);\n    this.handlePrivateUpdate = this.handlePrivateUpdate.bind(this);\n    this.handleDescriptionUpdate = this.handleDescriptionUpdate.bind(this);\n    this.uploadAvatar = this.uploadAvatar.bind(this);\n    this.handleAvatarCropCancel = this.handleAvatarCropCancel.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n  }\n\n  componentDidMount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    this.previousOnTags = topic.onTagsUpdated;\n    topic.onTagsUpdated = this.tnNewTags;\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    topic.onTagsUpdated = this.previousOnTags;\n  }\n\n  tnNewTags(tags) {\n    this.setState({tags: tags});\n  }\n\n  handleFullNameUpdate(fn) {\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\n    if (fn && this.state.fullName !== fn) {\n      this.setState({fullName: fn});\n      this.props.onUpdateTopicDesc(this.props.topic, theCard(fn, null));\n    }\n  }\n\n  handlePrivateUpdate(comment) {\n    comment = comment.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.private !== comment) {\n      this.setState({private: comment});\n      this.props.onUpdateTopicDesc(this.props.topic, null, comment || Tinode.DEL_CHAR);\n    }\n  }\n\n  handleDescriptionUpdate(desc) {\n    desc = desc.trim().substring(0, MAX_TOPIC_DESCRIPTION_LENGTH);\n    if (desc) {\n      this.setState({description: desc});\n      this.props.onUpdateTopicDesc(this.props.topic, theCard(null, null, null, desc));\n    }\n  }\n\n  // AvatarUpload widget has changed the avatar: received a new file or deleted the avatar.\n  handleImageUpdated(mime, img) {\n    // This will show the AvatarCropView is img is not null.\n    this.setState({newAvatar: img, newAvatarMime: mime});\n    if (!img) {\n      // Deleting the avatar.\n      this.setState({avatar: null});\n      this.props.onUpdateTopicDesc(this.props.topic, theCard(null, Tinode.DEL_CHAR));\n    }\n  }\n\n  // AvatarCropView calls this method when the user has cropped the image.\n  handleAvatarCropped(mime, blob, width, height) {\n    const url = blob ? URL.createObjectURL(blob) : null;\n    this.setState({avatar: url, newAvatar: null, newAvatarMime: null});\n    if (blob) {\n      this.uploadAvatar(mime, blob, width, height);\n    }\n  }\n\n  // Utility method for converting cropped avatar blob to bytes for sending inband or\n  // for uploading it to the server out of band.\n  uploadAvatar(mime, blob, width, height) {\n    const readyToUpload = (image) => {\n      let {mime, blob, width, height} = image;\n      if (blob.size > MAX_AVATAR_BYTES) {\n        // Too large to send inband - uploading out of band and sending as a link.\n        const uploader = this.props.tinode.getLargeFileHelper();\n\n        this.setState({uploading: true});\n        uploader.upload(blob)\n          .then((url) => {\n            this.props.onUpdateTopicDesc(this.props.topic, theCard(null, url));\n          })\n          .catch((err) => {\n            this.props.onError(err, 'err');\n          })\n          .finally(() => {\n            this.setState({uploading: false});\n          });\n      } else {\n        this.setState({uploading: true});\n        // Convert blob to base64-encoded bits.\n        blobToBase64(blob)\n          .then(b64 => {\n            const du = makeImageUrl({data: b64.bits, type: mime});\n            this.setState({source: du});\n            this.props.onUpdateTopicDesc(this.props.topic, theCard(null, du));\n            this.setState({uploading: false});\n          });\n      }\n    };\n\n    if (width > AVATAR_SIZE || height > AVATAR_SIZE || width != height) {\n      // Avatar is not square or too large even after cropping. Shrink it and make square.\n      imageScaled(blob, AVATAR_SIZE, AVATAR_SIZE, MAX_EXTERN_ATTACHMENT_SIZE, true)\n        .then(scaled => readyToUpload(scaled))\n        .catch(err => this.props.onError(err, 'err'));\n    } else {\n      readyToUpload({mime: mime, blob: blob, width: width, height: height});\n    }\n  }\n\n  handleAvatarCropCancel(img) {\n    this.setState({newAvatar: null, newAvatarMime: null});\n  }\n\n  handleTagsUpdated(tags) {\n    // Check if tags have actually changed.\n    if (arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      return;\n    }\n    this.props.onUpdateTags(tags);\n  }\n\n  render() {\n    if (this.state.newAvatar) {\n      return (\n        <AvatarCrop\n          avatar={this.state.newAvatar}\n          mime={this.state.newAvatarMime}\n          onSubmit={this.handleAvatarCropped}\n          onCancel={this.handleAvatarCropCancel}\n          onError={this.props.onError} />\n      );\n    }\n\n    const editable = this.state.isMe || this.state.owner;\n\n    return (\n      <>\n      <div className=\"panel-form-column\">\n        <center>\n          <AvatarUpload\n            tinode={this.props.tinode}\n            avatar={this.state.avatar}\n            readOnly={!editable}\n            uid={this.props.topic}\n            title={this.state.fullName}\n            onImageUpdated={this.handleImageUpdated}\n            onError={this.props.onError} />\n        </center>\n        {this.state.isMe ?\n          <div className=\"group\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n              description=\"Label for full name editing\" />\n            </label>\n            <div>\n              <FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n                description=\"Input placeholder for person's full name\">{\n                (full_name_placeholder) => <InPlaceEdit\n                  placeholder={full_name_placeholder}\n                  value={this.state.fullName}\n                  required={true}\n                  onFinished={this.handleFullNameUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n        :\n          <>\n            <div className=\"group\">\n              <div><label className=\"small\">\n                <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                  description=\"Label for editing topic name\" />\n              </label></div>\n              <div>\n                <FormattedMessage id=\"topic_name_editing_placeholder\" defaultMessage=\"Freeform name of the group\"\n                  description=\"Prompt for entering topic name\">{\n                  (group_name_placeholder) => <InPlaceEdit\n                    placeholder={group_name_placeholder}\n                    readOnly={!editable}\n                    value={this.state.fullName}\n                    required={true}\n                    onFinished={this.handleFullNameUpdate} />\n                }</FormattedMessage>\n              </div>\n            </div>\n            <div className=\"group\">\n              <div>\n                <label className=\"small\">\n                  <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                    description=\"Label for editing 'private'\" />\n                </label>\n              </div>\n              <div>\n                <FormattedMessage id=\"private_editing_placeholder\" defaultMessage=\"Visible to you only\"\n                  description=\"Placeholder for editing 'private'\">{\n                  (private_placeholder) => <InPlaceEdit\n                    placeholder={private_placeholder}\n                    value={this.state.private}\n                    onFinished={this.handlePrivateUpdate} />\n                }</FormattedMessage>\n              </div>\n            </div>\n          </>\n        }\n        {editable || this.state.description ?\n          <div className=\"group\">\n            <div><label className=\"small\">\n              <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                description=\"Label for editing topic description\" />\n            </label></div>\n            <div>\n              <FormattedMessage id=\"description_editing_placeholder\"\n                defaultMessage=\"Description (optional)\"\n                description=\"Placeholder for editing topic description\">{\n                (private_placeholder) => <InPlaceEdit\n                  placeholder={private_placeholder}\n                  readOnly={!editable}\n                  value={this.state.description}\n                  multiline={2}\n                  onFinished={this.handleDescriptionUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n          : null\n        }\n      </div>\n      {editable ?\n        <>\n          <div className=\"hr\" />\n          <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (search & discovery)\"\n            description=\"Section title for TagManager\">{\n              (title_tag_manager) => <TagManager\n                tinode={this.props.tinode}\n                title={title_tag_manager}\n                activated={false}\n                tags={this.state.tags}\n                onSubmit={this.handleTagsUpdated} />\n          }</FormattedMessage>\n        </>\n        : null\n      }\n      </>\n    );\n  }\n};\n","// View for editing topic (including 'me' topic) parameters.\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport TopicDescEdit from '../widgets/topic-desc-edit.jsx';\n\nimport { arrayEqual, asEmail, asPhone } from '../lib/utils.js';\n\nexport default class TopicCommon extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    const acs = topic.getAccessMode();\n    this.state = {\n      isMe: this.props.topic == 'me',\n      owner: acs && acs.isOwner(),\n      credentials: (topic.getCredentials ? topic.getCredentials() : null) || [],\n      addCredActive: false,\n      addCredInvalid: false,\n      newCred: '',\n      tags: []\n    };\n\n    this.previousTagsUpdated = undefined;\n\n    this.onTagsUpdated = this.onTagsUpdated.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.tnCredsUpdated = this.tnCredsUpdated.bind(this);\n    this.handleCredChange = this.handleCredChange.bind(this);\n    this.handleCredKeyDown = this.handleCredKeyDown.bind(this);\n    this.handleCredEntered = this.handleCredEntered.bind(this);\n  }\n\n  // No need to separately handle component mount.\n  componentDidUpdate(props) {\n    const topic = this.props.tinode.getTopic(props.topic);\n    if (!topic) {\n      return;\n    }\n\n    topic.onCredsUpdated = this.tnCredsUpdated;\n\n    if (topic.onTagsUpdated != this.onTagsUpdated) {\n      if (topic.getType() == 'grp') {\n        this.previousTagsUpdated = topic.onTagsUpdated;\n        topic.onTagsUpdated = this.onTagsUpdated;\n      } else {\n        this.previousTagsUpdated = undefined;\n      }\n    }\n\n    if (this.state.topic != props.topic) {\n      this.setState({topic: props.topic});\n    }\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    topic.onCredsUpdated = undefined;\n    topic.onTagsUpdated = this.previousTagsUpdated;\n  }\n\n  tnCredsUpdated(creds) {\n    this.setState({credentials: creds || []});\n  }\n\n  handleCredChange(e) {\n    this.setState({newCred: e.target.value, addCredInvalid: false});\n  }\n\n  handleCredKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({newCred: '', addCredActive: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleCredEntered(e);\n    }\n  }\n\n  handleCredEntered(e) {\n    const value = this.state.newCred.trim();\n    if (!value) {\n      this.setState({addCredActive: false, addCredInvalid: false});\n      return;\n    }\n\n    let val = asPhone(value);\n    let method;\n    if (val) {\n      method = 'tel';\n    } else {\n      val = asEmail(value);\n      if (val) {\n        method = 'email';\n      }\n    }\n    if (method) {\n      this.props.onCredAdd(method, val);\n      this.setState({addCredActive: false, newCred: ''});\n    } else {\n      this.setState({addCredInvalid: true});\n    }\n  }\n\n  // Server informs that the tags have been updated.\n  onTagsUpdated(tags) {\n    this.setState({tags: tags});\n\n    if (this.previousTagsUpdated && this.previousTagsUpdated != this.onTagsUpdated) {\n      this.previousTagsUpdated(tags);\n    }\n  }\n\n  // Request server to change tags.\n  handleTagsUpdated(tags) {\n    if (!arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      this.props.onTopicTagsUpdateRequest(this.props.topic, tags);\n    }\n  }\n\n  render() {\n    const credentials = [];\n    if (this.state.isMe) {\n      this.state.credentials.map((cred) => {\n        credentials.push(\n          <div key={cred.meth + \":\" + cred.val + \":\" + cred.done}>{cred.meth}: <tt>{cred.val}</tt>\n            <span> {!cred.done ?\n              <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredConfirm(cred.meth, cred.val);}}>\n                <FormattedMessage id=\"validate_credential_action\" defaultMessage=\"confirm\"\n                  description=\"Validate credentail call to action\" />\n              </a>\n            : null} <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredDelete(cred.meth, cred.val);}}><i\n              className=\"material-icons gray\">delete_outline</i></a></span>\n          </div>\n        );\n      });\n    }\n\n    return (\n      <div className=\"scrollable-panel\">\n        <TopicDescEdit\n          tinode={this.props.tinode}\n          topic={this.props.topic}\n          onUpdateTopicDesc={this.props.onUpdateTopicDesc}\n          onUpdateTags={this.handleTagsUpdated}\n          onError={this.props.onError} />\n        {this.state.isMe ?\n          <>\n            <div className=\"hr\" />\n            <div className=\"panel-form-column\">\n              <label className=\"small\">\n                <FormattedMessage id=\"label_user_contacts\" defaultMessage=\"Contacts:\"\n                description=\"Label for user contacts\" />\n              </label>\n              <div className=\"quoted\">\n                {credentials}\n                {this.state.addCredActive ?\n                  <input type=\"text\" value={this.state.value}\n                    className={this.state.addCredInvalid ? 'invalid' : null}\n                    placeholder=\"Phone number or email\" required=\"required\" autoFocus\n                    onChange={this.handleCredChange} onKeyDown={this.handleCredKeyDown} onBlur={this.handleCredEntered} />\n                  : null}\n                <div>\n                  <a href=\"#\" onClick={(e) => {e.preventDefault(); this.setState({addCredActive: true});}}>\n                    <i className=\"material-icons\">add</i>\n                    <FormattedMessage id=\"button_add_another\" defaultMessage=\"Add another\" description=\"Call to action [+ add another]\" />\n                  </a></div>\n              </div>\n            </div>\n          </>\n        : null\n      }\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport InPlaceEdit from './in-place-edit.jsx';\n\nimport { NO_ACCESS_MODE } from '../config.js';\n\nconst messages = defineMessages({\n  clear_messages: {\n    id: 'action_clear_messages',\n    defaultMessage: 'Clear Messages',\n    description: 'Flat button [Clear Messages] (soft-delete messages)'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n  delete_messages: {\n    id: 'action_delete_messages',\n    defaultMessage: 'Clear Messages for All',\n    description: 'Flat button [Clear for All] (hard-delete all messages)'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  topic_delete: {\n    id: 'topic_delete',\n    defaultMessage: 'Delete Conversation',\n    description: 'Alert title when deleting the topic.'\n  },\n  topic_delete_warning: {\n    id: 'topic_delete_warning',\n    defaultMessage: 'Are you sure you want to delete this conversation? It cannot be undone.',\n    description: 'Alert warning when deleting entire topic'\n  },\n  leave_chat: {\n    id: 'action_leave_chat',\n    defaultMessage: 'Leave Conversation',\n    description: 'Flat button [Leave Conversation]'\n  },\n  leave_chat_warning: {\n    id: 'leave_chat_warning',\n    defaultMessage: 'Are you sure you want to leave this conversation?',\n    description: 'Alert dialog warning when unsubscribing from a chat.'\n  },\n  block_contact: {\n    id: 'action_block_contact',\n    defaultMessage: \"Block Contact\",\n    description: \"Flat button [Block Contact]\"\n  },\n  block_contact_warning: {\n    id: 'block_contact_warning',\n    defaultMessage: 'Are you sure you want to block this contact?',\n    description: 'Alert dialog warning when blocking a contact.'\n  },\n  report_chat: {\n    id: 'action_report_chat',\n    defaultMessage: 'Report Conversation',\n    description: 'Flat button [Report Group]'\n  },\n  report_chat_warning: {\n    id: 'report_chat_warning',\n    defaultMessage: 'Are you sure you want to block and report this conversation?',\n    description: 'Alert dialog warning when reporting a conversation for abuse'\n  },\n  other_user: {\n    id: 'label_other_user',\n    defaultMessage: 'Other',\n    description: 'Label for the other user when the user is unnamed'\n  },\n});\n\nclass TopicSecurity extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleDeleteTopic = this.handleDeleteTopic.bind(this);\n    this.handleDeleteMessages = this.handleDeleteMessages.bind(this);\n    this.handleLeave = this.handleLeave.bind(this);\n    this.handleBlock = this.handleBlock.bind(this);\n    this.handleReport = this.handleReport.bind(this);\n  }\n\n  handleDeleteTopic(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.topic_delete), // title\n      formatMessage(messages.topic_delete_warning), // content\n      (() => { this.props.onDeleteTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleDeleteMessages(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(this.props.deleter ? messages.delete_messages : messages.clear_messages), // title\n      formatMessage(this.props.deleter ? messages.delete_messages_warning : messages.clear_messages_warning), // content\n      (() => { this.props.onDeleteMessages(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleLeave(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.leave_chat), // title\n      formatMessage(messages.leave_chat_warning), // content\n      (() => { this.props.onLeaveTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleBlock(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.block_contact), // title\n      formatMessage(messages.block_contact_warning), // content\n      (() => { this.props.onBlockTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleReport(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.report_chat), // title\n      formatMessage(messages.report_chat_warning), // content\n      (() => { this.props.onReportTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          {!this.props.channel ?\n            <a href=\"#\" className=\"flat-button\" onClick={this.handleDeleteMessages}>\n              <i className=\"material-icons\">delete_outline</i> &nbsp;{\n                formatMessage(this.props.deleter ? messages.delete_messages : messages.clear_messages)\n              }\n            </a>\n            :\n            null\n          }\n          {this.props.owner ?\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleDeleteTopic}>\n              <i className=\"material-icons\">delete</i> &nbsp;{formatMessage(messages.topic_delete)}\n            </a>\n            :\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleLeave}>\n              <i className=\"material-icons\">exit_to_app</i> &nbsp;{formatMessage(messages.leave_chat)}\n            </a>\n          }\n          {!this.props.groupTopic ?\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleBlock}>\n              <i className=\"material-icons\">block</i> &nbsp;{formatMessage(messages.block_contact)}\n            </a>\n            :\n            null\n          }\n          {!this.props.owner ?\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleReport}>\n              <i className=\"material-icons\">report</i> &nbsp;{formatMessage(messages.report_chat)}\n            </a>\n            :\n            null\n          }\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          {this.props.groupTopic ?\n            <>\n              <div className=\"group\">\n                <label>\n                  <FormattedMessage id=\"label_your_permissions\" defaultMessage=\"Your permissions:\"\n                    description=\"Label for current user permissions\" />\n                </label> <tt className=\"clickable\"\n                  onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('want')}}>\n                  {this.props.access}\n                </tt>\n              </div>\n              {!this.props.channel ?\n                <div className=\"group\">\n                  <div>\n                    <label className=\"small\">\n                      <FormattedMessage id=\"label_default_access_mode\" defaultMessage=\"Default access mode:\"\n                      description=\"Label for default access mode\" />\n                    </label>\n                  </div>\n                  <div className=\"quoted\">\n                    <div>Auth: <tt className={this.props.owner ? 'clickable' : null}\n                      onClick={(e) => {\n                        e.preventDefault();\n                        if (this.props.owner) {\n                          this.props.onLaunchPermissionsEditor('auth');\n                        }\n                      }}>{this.props.auth}</tt>\n                    </div>\n                    <div>Anon: <tt className={this.props.owner ? 'clickable' : null}\n                      onClick={(e) => {\n                        e.preventDefault();\n                        if (this.props.owner) {\n                          this.props.onLaunchPermissionsEditor('anon');\n                        }\n                      }}>{this.props.anon}</tt>\n                    </div>\n                  </div>\n                </div>\n              :\n                null\n              }\n            </>\n            :\n            <div className=\"group\">\n              <div>\n                <label className=\"small\">\n                  <FormattedMessage id=\"label_permissions\" defaultMessage=\"Permissions:\"\n                    description=\"Section title\" />\n                </label>\n              </div>\n              <div className=\"quoted\">\n                <div>\n                  <FormattedMessage id=\"label_you\" defaultMessage=\"You:\"\n                    description=\"Label for the current user\" /> <tt className=\"clickable\"\n                    onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('want')}}>\n                    {this.props.access}\n                  </tt>\n                </div>\n                <div>{this.props.fullName ? this.props.fullName : formatMessage(messages.other_user)}:\n                  &nbsp;<tt className=\"clickable\"\n                    onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('given')}}>\n                    {this.props.modeGiven2}\n                  </tt>\n                </div>\n              </div>\n            </div>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(TopicSecurity);\n","// InfoView: panel with topic/user info.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport BadgeList from '../widgets/badge-list.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport ContactList from '../widgets/contact-list.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupManager from '../widgets/group-manager.jsx';\nimport MenuCancel from '../widgets/menu-cancel.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\nimport TopicCommon from '../widgets/topic-common.jsx';\nimport TopicSecurity from '../widgets/topic-security.jsx';\n\nimport { MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH, NO_ACCESS_MODE } from '../config.js';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { theCard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  info: {\n    id: 'panel_title_info',\n    description: 'Title for InfoView',\n    defaultMessage: 'Info'\n  },\n  general: {\n    id: 'panel_title_general',\n    description: 'Title for TopicCommon.',\n    defaultMessage: 'General'\n  },\n  security: {\n    id: 'panel_title_security',\n    description: 'Title for TopicSecirity and AccSecurity.',\n    defaultMessage: 'Security'\n  },\n  members: {\n    id: 'panel_title_members',\n    description: 'Title for managing group members view.',\n    defaultMessage: 'Members'\n  },\n  crop: {\n    id: 'panel_title_crop',\n    description: 'Title for AvatarCropView.',\n    defaultMessage: 'Drag to Adjust'\n  },\n  perm_want: {\n    id: 'requested_permissions',\n    defaultMessage: 'Requested',\n    description: 'Title for permissions'\n  },\n  perm_given: {\n    id: 'granted_permissions',\n    defaultMessage: 'Granted',\n    description: 'Title for permissions'\n  },\n  perm_auth: {\n    id: 'permissions_authenticated',\n    defaultMessage: 'Authenticated',\n    description: 'Title for editing default authenticated permissions'\n  },\n  perm_anon: {\n    id: 'permissions_anonymous',\n    defaultMessage: 'Anonymous',\n    description: 'Title for editing default anonymous permissions'\n  },\n  perm_user: {\n    id: 'permissions_user',\n    defaultMessage: 'User\\'s Permissions',\n    description: 'Title for editing user\\'s permissions'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n});\n\nfunction _clip(str, length) {\n  return str && str.substring(0, length);\n}\n\nclass InfoView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      topic: null,\n      owner: false,\n      admin: false,\n      sharer: false,\n      deleter: false,\n      muted: false,\n      address: null,\n      groupTopic: undefined,\n      channel: undefined,\n      fullName: undefined,\n      description: undefined,\n      avatar: null,\n      private: null,\n      selectedContact: null,\n      access: null,\n      modeGiven: null,\n      modeWant: null,\n      modeGiven2: null, // P2P topic, the other user mode given\n      modeWant2: null,  // P2P topic, the other user mode want\n      auth: null,\n      anon: null,\n      contactList: [],\n      trustedBadges: [],\n      previousMetaDesc: undefined,\n      previousSubsUpdated: undefined,\n    };\n\n    this.resetSubs = this.resetSubs.bind(this);\n    this.resetDesc = this.resetDesc.bind(this);\n    this.resetTags = this.resetTags.bind(this);\n    this.onMetaDesc = this.onMetaDesc.bind(this);\n    this.onSubsUpdated = this.onSubsUpdated.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleMuted = this.handleMuted.bind(this);\n    this.handleUnarchive = this.handleUnarchive.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleShowAddMembers = this.handleShowAddMembers.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleMemberSelected = this.handleMemberSelected.bind(this);\n    this.handleContextMenu = this.handleContextMenu.bind(this);\n    this.handleBackNavigate = this.handleBackNavigate.bind(this);\n  }\n\n  // No need to separately handle component mount.\n  componentDidUpdate(props) {\n    const topic = this.props.tinode.getTopic(props.topic);\n    if (!topic) {\n      return;\n    }\n\n    if (this.onMetaDesc != topic.onMetaDesc) {\n      this.previousMetaDesc = topic.onMetaDesc;\n      topic.onMetaDesc = this.onMetaDesc;\n\n      this.previousSubsUpdated = topic.onSubsUpdated;\n      topic.onSubsUpdated = this.onSubsUpdated;\n    }\n\n    if (this.state.topic != props.topic) {\n      this.setState({topic: props.topic});\n      this.resetDesc(topic, props);\n      this.resetSubs(topic, props);\n      this.resetTags(topic);\n    }\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.setState({topic: null});\n    topic.onMetaDesc = this.previousMetaDesc;\n    topic.onSubsUpdated = this.previousSubsUpdated;\n  }\n\n  resetSubs(topic, props) {\n    const newState = {contactList: []};\n    if (topic.getType() == 'p2p') {\n      // Fetch the other party in the p2p conversation.\n      // Topic may not be ready yet, so check if user is found.\n      const user2 = topic.subscriber(props.topic);\n      if (user2) {\n        newState.modeGiven2 = user2.acs.getGiven();\n        newState.modeWant2 = user2.acs.getWant();\n      } else {\n        newState.modeGiven2 = NO_ACCESS_MODE;\n        newState.modeWant2 = NO_ACCESS_MODE;\n      }\n    } else {\n      topic.subscribers((sub) => {\n        newState.contactList.push(sub);\n      }, this);\n    }\n\n    this.setState(newState);\n  }\n\n  resetDesc(topic, props) {\n    const defacs = topic.getDefaultAccess() || {};\n    const acs = topic.getAccessMode();\n\n    const badges = [];\n    if (topic.trusted) {\n      for (const [key, val] of Object.entries(topic.trusted)) {\n        if (val) {\n          badges.push(key);\n        }\n      }\n    }\n\n    this.setState({\n      owner: acs && acs.isOwner(),\n      admin: acs && acs.isAdmin(),\n      sharer: acs && acs.isSharer(),\n      deleter: acs && acs.isDeleter(),\n      muted: acs && acs.isMuted(),\n\n      fullName: _clip(topic.public ? topic.public.fn : undefined, MAX_TITLE_LENGTH),\n      description: _clip(topic.public ? topic.public.note : undefined, MAX_TOPIC_DESCRIPTION_LENGTH),\n      avatar: makeImageUrl(topic.public ? topic.public.photo : null),\n      trustedBadges: badges,\n      private: _clip(topic.private ? topic.private.comment : null, MAX_TITLE_LENGTH),\n      archived: topic.isArchived(),\n      address: topic.name,\n      groupTopic: topic.isGroupType(),\n      channel: topic.isChannelType() || topic.chan,\n      access: acs ? acs.getMode() : undefined,\n      modeGiven: acs ? acs.getGiven() : undefined,\n      modeWant: acs ? acs.getWant() : undefined,\n      auth: defacs.auth,\n      anon: defacs.anon\n    });\n  }\n\n  resetTags(topic) {\n    if (topic.getType() != 'grp') {\n      return;\n    }\n\n    const acs = topic.getAccessMode();\n    if (acs && acs.isOwner()) {\n      // Requesting tags: owner is editing the topic.\n      topic.getMeta(topic.startMetaQuery().withTags().build());\n    }\n  }\n\n  onMetaDesc(desc) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetDesc(topic, this.props);\n\n    if (this.previousMetaDesc && this.previousMetaDesc != this.onMetaDesc) {\n      this.previousMetaDesc(desc);\n    }\n  }\n\n  onSubsUpdated(subs) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetSubs(topic, this.props);\n\n    if (this.previousSubsUpdated && this.previousSubsUpdated != this.onSubsUpdated) {\n      this.previousSubsUpdated(subs);\n    }\n  }\n\n  handleImageChanged(img) {\n    this.setState({avatar: img});\n    this.props.onTopicDescUpdate(this.props.topic, theCard(null, img || Tinode.DEL_CHAR), null);\n  }\n\n  handleMuted(ignored, checked) {\n    this.setState({muted: checked});\n    this.props.onChangePermissions(this.props.topic, checked ? '-P' : '+P');\n  }\n\n  handleUnarchive(ignored, ignored2) {\n    this.props.onTopicUnArchive(this.props.topic);\n  }\n\n  handlePermissionsChanged(which, perm) {\n    switch (which) {\n      case 'auth':\n        this.props.onTopicDescUpdateRequest(this.props.topic, null, null, {auth: perm});\n        break;\n      case 'anon':\n        this.props.onTopicDescUpdateRequest(this.props.topic, null, null, {anon: perm});\n        break;\n      case 'mode':\n      case 'want':\n        this.props.onChangePermissions(this.props.topic, perm);\n        break;\n      case 'given':\n        this.props.onChangePermissions(this.props.topic, perm, this.props.topic);\n        break;\n      case 'user':\n        this.props.onChangePermissions(this.props.topic, perm, this.state.userPermissionsEdited);\n        break;\n    }\n\n    this.handleBackNavigate();\n  }\n\n  handleLaunchPermissionsEditor(which, uid) {\n    const {formatMessage} = this.props.intl;\n    let toEdit, toCompare, toSkip, titleEdit, titleCompare, userTitle, userAvatar;\n    switch (which) {\n      case 'mode':\n        toEdit = this.state.access;\n        break;\n      case 'want':\n        toEdit = this.state.modeWant;\n        toCompare = this.state.modeGiven;\n        if (this.state.owner) {\n          // Don't allow owner to unset 'O' permission. All other permissions are OK.\n          toSkip = 'O';\n        } else {\n          // Allow accepting any of 'ASDO' permissions but don't allow asking for them.\n          toSkip = Tinode.AccessMode.encode(Tinode.AccessMode.diff('ASDO', this.state.modeGiven));\n          if (this.state.channel) {\n            // Channels are read-only.\n            toSkip += 'W';\n          }\n        }\n        titleEdit = formatMessage(messages.perm_want);\n        titleCompare = formatMessage(messages.perm_given);\n        break;\n      case 'given':\n        toEdit = this.state.modeGiven2;\n        toCompare = this.state.modeWant2;\n        toSkip = this.state.groupTopic ? (this.state.owner ? '' : 'O') : 'ASDO';\n        titleEdit = formatMessage(messages.perm_given);\n        titleCompare = formatMessage(messages.perm_want);\n        break;\n      case 'auth':\n        toEdit = this.state.auth;\n        toSkip = 'O';\n        break;\n      case 'anon':\n        toEdit = this.state.anon;\n        toSkip = 'O';\n        break;\n      case 'user': {\n        const topic = this.props.tinode.getTopic(this.props.topic);\n        if (!topic) {\n          return;\n        }\n        const user = topic.subscriber(uid);\n        if (!user || !user.acs) {\n          return;\n        }\n        toEdit = user.acs.getGiven();\n        toCompare = user.acs.getWant();\n        toSkip = this.state.owner ? '' : 'O';\n        titleEdit = formatMessage(messages.perm_given);\n        titleCompare = formatMessage(messages.perm_want);\n        if (user.public) {\n          userTitle = user.public.fn;\n          userAvatar = user.public.photo;\n        }\n        break;\n      }\n      default:\n        console.error(\"Unknown permission editing mode '\" + which + \"'\");\n        return;\n    }\n    this.setState({\n      userPermissionsEdited: uid,\n      userPermissionsTitle: userTitle,\n      userPermissionsAvatar: userAvatar,\n      editedPermissions: toEdit,\n      immutablePermissions: toCompare,\n      editedPermissionsTitle: titleEdit,\n      immutablePermissionsTitle: titleCompare,\n      editedPermissionsSkipped: toSkip,\n    });\n    this.props.onNavigate(`perm/${which}`);\n  }\n\n  handleShowAddMembers(e) {\n    e.preventDefault();\n    this.props.onInitFind();\n    this.props.onNavigate('members');\n  }\n\n  handleMemberUpdateRequest(members, added, removed) {\n    this.props.onMemberUpdateRequest(this.props.topic, added, removed);\n    this.props.onNavigate('info');\n  }\n\n  handleMemberSelected(uid) {\n    this.setState({selectedContact: uid});\n  }\n\n  handleBackNavigate() {\n    const args = (this.props.panel || 'info').split('/');\n    if (args[0] == 'info') {\n      this.props.onNavigate(null);\n    } else if (args[0] == 'perm') {\n      if (args[1] == 'user') {\n        this.props.onNavigate('info');\n      } else {\n        this.props.onNavigate('security');\n      }\n    } else {\n      this.props.onNavigate('info');\n    }\n  }\n\n  handleContextMenu(params) {\n    const {formatMessage} = this.props.intl;\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    const user = topic.subscriber(params.topicName);\n    if (!user || !user.acs) {\n      return;\n    }\n\n    const isMe = this.props.tinode.isMe(params.topicName);\n    const menuItems = [\n      {title: formatMessage(messages.edit_permissions), handler: () => {\n        this.handleLaunchPermissionsEditor(isMe ? 'want' : 'user', params.topicName);\n      }}\n    ];\n    if (!isMe) {\n      menuItems.push('member_delete');\n    }\n    menuItems.push(user.acs.isMuted() ? 'member_unmute' : 'member_mute');\n    if (!isMe) {\n      menuItems.push(user.acs.isJoiner() ? 'member_block' : 'member_unblock');\n    }\n    this.props.showContextMenu({\n      topicName: this.props.topic,\n      x: params.x,\n      y: params.y,\n      user: params.topicName}, menuItems);\n  }\n\n  render() {\n    const args = (this.props.panel || 'info').split('/');\n    const view = args[0];\n    args.shift();\n\n    const {formatMessage} = this.props.intl;\n    const panelTitle = formatMessage((view == 'perm' ? messages['perm_' + args[0]] : messages[view])\n      || messages['info']);\n\n    return (\n      <div id=\"info-view\">\n        <div className=\"caption-panel\" id=\"info-caption-panel\">\n          <div className=\"panel-title\" id=\"info-title\">{panelTitle}</div>\n          <div>\n            <MenuCancel onCancel={this.handleBackNavigate} />\n          </div>\n        </div>\n        {this.props.displayMobile ?\n          <ErrorPanel\n            level={this.props.errorLevel}\n            text={this.props.errorText}\n            onClearError={this.props.onError} /> : null}\n        {view == 'members' ?\n          <GroupManager\n            tinode={this.props.tinode}\n            members={this.state.contactList}\n            requiredMember={this.props.myUserId}\n            keepInitialMembers={!this.state.admin && !this.state.owner}\n            myUserId={this.props.myUserId}\n            contacts={this.props.searchableContacts}\n            onCancel={this.handleBackNavigate}\n            onSubmit={this.handleMemberUpdateRequest} />\n          :\n        view == 'perm' && args.length > 0 ?\n          <PermissionsEditor\n            tinode={this.props.tinode}\n            mode={this.state.editedPermissions}\n            compare={this.state.immutablePermissions}\n            skip={this.state.editedPermissionsSkipped}\n            modeTitle={this.state.editedPermissionsTitle}\n            compareTitle={this.state.immutablePermissionsTitle}\n            userTitle={this.state.userPermissionsTitle}\n            item={this.state.userPermissionsEdited}\n            userAvatar={this.state.userPermissionsAvatar}\n            onSubmit={(mode) => this.handlePermissionsChanged(args[0], mode)}\n            onCancel={this.handleBackNavigate} />\n          :\n        view == 'general' ?\n          <TopicCommon\n            tinode={this.props.tinode}\n            topic={this.props.topic}\n            onCredAdd={this.props.onCredAdd}\n            onTopicTagsUpdateRequest={this.props.onTopicTagsUpdateRequest}\n            onCredConfirm={this.props.onCredConfirm}\n            onCredDelete={this.props.onCredDelete}\n            onUpdateTopicDesc={this.props.onTopicDescUpdateRequest}\n            onError={this.props.onError} />\n          :\n        view == 'security' ?\n          <TopicSecurity\n            topic={this.props.topic}\n            owner={this.state.owner}\n            admin={this.state.admin}\n            sharer={this.state.sharer}\n            deleter={this.state.deleter}\n            muted={this.state.muted}\n\n            groupTopic={this.state.groupTopic}\n            channel={this.state.channel}\n            access={this.state.access}\n            modeGiven={this.state.modeGiven}\n            modeWant={this.state.modeWant}\n            modeGiven2={this.state.modeGiven2}\n            modeWant2={this.state.modeWant2}\n            auth={this.state.auth}\n            anon={this.state.anon}\n\n            onShowAlert={this.props.onShowAlert}\n            onDeleteMessages={this.props.onDeleteMessages}\n            onLeaveTopic={this.props.onLeaveTopic}\n            onBlockTopic={this.props.onBlockTopic}\n            onReportTopic={this.props.onReportTopic}\n            onLaunchPermissionsEditor={this.handleLaunchPermissionsEditor}\n            onNavigate={this.props.onNavigate} />\n          :\n          <div id=\"info-view-content\" className=\"scrollable-panel\">\n            <div className=\"panel-form-column\">\n              <a href=\"#\" className=\"flat-button float-right\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('general');}}>\n                <i className=\"material-icons\">edit</i>&nbsp;\n                <FormattedMessage id=\"button_edit\" defaultMessage=\"Edit\" description=\"Call to action [Edit]\" />\n              </a>\n              <center>\n                <AvatarUpload\n                  tinode={this.props.tinode}\n                  avatar={this.state.avatar}\n                  readOnly={true}\n                  uid={this.props.topic}\n                  title={this.state.fullName} />\n              </center>\n              <div className=\"group\">\n                <div><label className=\"small\">\n                  <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                    description=\"Label for editing topic name\" />\n                </label></div>\n                <div className=\"large ellipsized\">{this.state.fullName}\n                {this.state.channel ? <img src=\"/img/channel.png\" className=\"channel\" alt=\"channel\" /> : null}</div>\n              </div>\n              {this.state.private ?\n                <div className=\"group\">\n                  <div><label className=\"small\">\n                    <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                      description=\"Label for editing 'private'\" />\n                  </label></div>\n                  <div className=\"large ellipsized\">{this.state.private}</div>\n                </div>\n                : null\n              }\n              <div className=\"group\">\n                <label className=\"small\"><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n                  description=\"Label for user address (ID)\" /></label>&nbsp;\n                <tt>{this.state.address}</tt>\n              </div>\n              <div className=\"group\">\n                <BadgeList trustedBadges={this.state.trustedBadges} />\n              </div>\n              {this.state.description ?\n                <div className=\"group\">\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                      description=\"Label for editing topic description\" />\n                  </label>\n                  <div>{this.state.description}</div>\n                </div> : null}\n            </div>\n            <div className=\"hr\" />\n            <div className=\"panel-form-row\">\n              <label>\n                <FormattedMessage id=\"label_muting_topic\" defaultMessage=\"Muted:\"\n                  description=\"Label for Muting/unmuting the topic\" />\n              </label>\n              <CheckBox name=\"P\" checked={this.state.muted} onChange={this.handleMuted} />\n            </div>\n            {this.state.archived ?\n              <div className=\"panel-form-row\">\n                <label>\n                  <FormattedMessage id=\"label_unarchive_topic\" defaultMessage=\"Archived:\"\n                    description=\"Label for unarchiving the topic\" />\n                </label>\n                <CheckBox name=\"archived\" checked={true} onChange={this.handleUnarchive} />\n              </div>\n              :\n              null\n            }\n            <div className=\"hr\" />\n            <div className=\"panel-form-row\">\n              <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('security');}}>\n                <i className=\"material-icons\">security</i>&nbsp;<FormattedMessage id=\"button_security\"\n                  defaultMessage=\"Security\" description=\"Navigaton button for security panel.\" />\n              </a>\n            </div>\n            {this.state.groupTopic && this.state.sharer ?\n              <>\n                <div className=\"hr\" />\n                <div className=\"panel-form-row\">\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_group_members\" defaultMessage=\"Group members:\"\n                      description=\"Section title or label\" />\n                  </label>\n                </div>\n                <div className=\"panel-form-row\">\n                  <a href=\"#\" className=\"flat-button\" onClick={this.handleShowAddMembers}>\n                    <i className=\"material-icons\">person_add</i> &nbsp;<FormattedMessage id=\"button_add_members\"\n                      defaultMessage=\"Add members\" description=\"Flat button [Add members] (to topic)\" />\n                  </a>\n                </div>\n                <FormattedMessage id=\"group_has_no_members\" defaultMessage=\"No members\"\n                  description=\"Shown in place of group members\">{\n                  (no_members) => <ContactList\n                    tinode={this.props.tinode}\n                    contacts={this.state.contactList}\n                    myUserId={this.props.myUserId}\n                    emptyListMessage={no_members}\n                    topicSelected={this.state.selectedContact}\n                    showOnline={false}\n                    showUnread={false}\n                    showMode={true}\n                    noScroll={true}\n                    onTopicSelected={this.handleMemberSelected}\n                    showContextMenu={this.state.admin ? this.handleContextMenu : false}\n                  />\n                }</FormattedMessage>\n              </>\n              :\n              null\n            }\n          </div>\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(InfoView);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\nimport { bytesToHumanSize } from '../lib/strformat.js';\nimport { isUrlRelative, sanitizeUrl } from '../lib/utils.js';\n\nexport default class Attachment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      downloader: null,\n      progress: 0\n    };\n\n    this.downloadFile = this.downloadFile.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  downloadFile(url, filename, mimetype) {\n    if (!url) {\n      this.props.onError(\"Invalid download URL '\" + url + \"'\");\n      return;\n    }\n\n    const downloader = this.props.tinode.getLargeFileHelper();\n    this.setState({downloader: downloader});\n    downloader.download(url, filename, mimetype,\n      (loaded) => {\n        this.setState({progress: loaded / this.props.size});\n      },\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    ).then(() => {\n      this.setState({downloader: null, progress: 0});\n    }).catch((err) => {\n      if (err) {\n        this.props.onError(\"Error downloading file: \" + err.message, 'err');\n      }\n      this.setState({downloader: null, progress: 0});\n    });\n  }\n\n  handleCancel() {\n    if (this.props.uploading) {\n      this.props.onCancelUpload();\n    } else if (this.state.downloader) {\n      this.state.downloader.cancel();\n    }\n  }\n\n  render() {\n    let filename = this.props.filename || 'file_attachment';\n    if (filename.length > 36) {\n      filename = filename.substr(0, 16) + '...' + filename.substr(-16);\n    }\n    let size = this.props.size > 0 ?\n      <span className=\"small gray\">({bytesToHumanSize(this.props.size)})</span> :\n      null;\n\n    // Detect if the download URL is relative or absolute.\n    // If the URL is relative use LargeFileHelper to attach authentication\n    // credentials to the request.\n    let url, helperFunc;\n    if (!this.props.uploading && !this.state.downloader && isUrlRelative(this.props.downloadUrl)) {\n      // Relative URL. Use download helper.\n      url = '#';\n      helperFunc = (e) => {\n        e.preventDefault();\n        this.downloadFile(this.props.downloadUrl, this.props.filename, this.props.mimetype);\n      };\n    } else {\n      url = sanitizeUrl(this.props.downloadUrl);\n      helperFunc = null;\n    }\n    const downloadWidget = <><i className=\"material-icons\">file_download</i> <FormattedMessage id=\"save_attachment\"\n      defaultMessage=\"save\" description=\"Call to save an attachment\" /></>;\n    return (\n      <div className=\"attachment\">\n        <div><i className=\"material-icons big gray\">insert_drive_file</i></div>\n        <div className=\"flex-column\">\n          <div>{filename} {size}</div>\n          {this.props.uploading || this.state.downloader ?\n            <FileProgress progress={this.props.uploading ? this.props.progress : this.state.progress}\n              onCancel={this.handleCancel} />\n            :\n            <div>{url ?\n              <a href={url} download={this.props.filename} onClick={helperFunc}>{downloadWidget}</a>\n              :\n              <span className=\"light-gray\">{downloadWidget}</span>\n            }</div>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n","// Single message, sent or received.\nimport React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport Attachment from './attachment.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\n\nimport { fullFormatter } from '../lib/formatters.js';\nimport { sanitizeUrl } from '../lib/utils.js';\n\nclass BaseChatMessage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      progress: 0\n    };\n\n    if (props.uploader) {\n      props.uploader.onProgress = this.handleProgress.bind(this);\n    }\n\n    this.handleImagePreview = this.handleImagePreview.bind(this);\n    this.handleFormButtonClick = this.handleFormButtonClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n    this.handleQuoteClick = this.handleQuoteClick.bind(this);\n\n    this.formatterContext = {\n      formatMessage: props.intl.formatMessage.bind(props.intl),\n      viewportWidth: props.viewportWidth,\n      authorizeURL: props.tinode.authorizeURL.bind(props.tinode),\n      onImagePreview: this.handleImagePreview,\n      onFormButtonClick: this.handleFormButtonClick,\n      onQuoteClick: this.handleQuoteClick\n    };\n  }\n\n  handleImagePreview(e) {\n    e.preventDefault();\n    this.props.onImagePreview({\n      url: e.target.src,\n      filename: e.target.title,\n      width: e.target.dataset.width,\n      height: e.target.dataset.height,\n      size: e.target.dataset.size,\n      type: e.target.dataset.mime\n    });\n  }\n\n  handleFormButtonClick(e) {\n    e.preventDefault();\n    const data = {\n      seq: this.props.seq\n    };\n    data.resp = {};\n    if (e.target.dataset.name) {\n      data.resp[e.target.dataset.name] = e.target.dataset.val ? e.target.dataset.val :\n        e.target.dataset.val === undefined ? 1 : '' + e.target.dataset.val;\n    }\n    if (e.target.dataset.act == 'url') {\n      data.ref = sanitizeUrl(e.target.dataset.ref) || 'about:blank';\n    }\n    const text = e.target.dataset.title || 'unknown';\n    this.props.onFormResponse(e.target.dataset.act, text, data);\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const menuItems = [];\n    if (this.props.received == Tinode.MESSAGE_STATUS_FAILED) {\n      menuItems.push('menu_item_send_retry');\n    }\n    if (this.props.userIsWriter &&\n        this.props.received > Tinode.MESSAGE_STATUS_FAILED &&\n        this.props.received < Tinode.MESSAGE_STATUS_DEL_RANGE) {\n      menuItems.push('menu_item_reply');\n    }\n    menuItems.push('menu_item_forward');\n\n    this.props.showContextMenu({\n      seq: this.props.seq,\n      content: this.props.content,\n      userFrom: this.props.userFrom,\n      userName: this.props.userName,\n      y: e.pageY,\n      x: e.pageX,\n      pickReply: this.props.pickReply\n    }, menuItems);\n  }\n\n  handleProgress(ratio) {\n    this.setState({progress: ratio});\n  }\n\n  handleCancelUpload() {\n    this.props.onCancelUpload(this.props.seq, this.props.uploader);\n  }\n\n  handleQuoteClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const replyToSeq = this.props.replyToSeq;\n    if (replyToSeq) {\n      this.props.onQuoteClick(replyToSeq);\n    }\n  }\n\n  render() {\n    const sideClass = this.props.deleted ? 'center' :\n      (this.props.sequence + ' ' + (this.props.response ? 'left' : 'right'));\n    const bubbleClass = (this.props.sequence == 'single' || this.props.sequence == 'last') ? 'bubble tip' : 'bubble';\n    const avatar = this.props.deleted ? null : (this.props.userAvatar || true);\n    const fullDisplay = (this.props.isGroup && this.props.response && !this.props.deleted &&\n      (this.props.sequence == 'single' || this.props.sequence == 'last'));\n\n    let content = this.props.content;\n    const attachments = [];\n    if (this.props.mimeType == Drafty.getContentType() && Drafty.isValid(content)) {\n      Drafty.attachments(content, (att, i) => {\n        if (att.mime == 'application/json') {\n          // Don't show json objects as attachments.\n          // They are not meant for users.\n          return;\n        }\n        attachments.push(<Attachment\n          tinode={this.props.tinode}\n          downloadUrl={Drafty.getDownloadUrl(att)}\n          filename={att.name}\n          uploading={Drafty.isProcessing(att)}\n          mimetype={att.mime}\n          size={Drafty.getEntitySize(att)}\n          progress={this.state.progress}\n          onCancelUpload={this.handleCancelUpload}\n          onError={this.props.onError}\n          key={i} />);\n      }, this);\n      const tree = Drafty.format(content, fullFormatter, this.formatterContext);\n      content = React.createElement(React.Fragment, null, tree);\n    } else if (this.props.deleted) {\n      // Message represents a range of deleted messages.\n      content = <><i className=\"material-icons gray\">block</i> <i className=\"gray\">\n        <FormattedMessage id=\"deleted_content\"\n          defaultMessage=\"content deleted\" description=\"Shown when messages are deleted\" />\n      </i></>\n    } else if (typeof content != 'string') {\n      content = <><i className=\"material-icons gray\">warning_amber</i> <i className=\"gray\">\n        <FormattedMessage id=\"invalid_content\"\n          defaultMessage=\"invalid content\" description=\"Shown when the message is unreadable\" /></i></>\n    }\n\n    return (\n      <li ref={this.props.innerRef} className={sideClass}>\n        {this.props.isGroup && this.props.response ?\n          <div className=\"avatar-box\">\n            {fullDisplay ?\n              <LetterTile\n                tinode={this.props.tinode}\n                topic={this.props.userFrom}\n                title={this.props.userName}\n                avatar={avatar} /> :\n              null}\n          </div> :\n          null}\n        <div>\n          <div className={bubbleClass}>\n            <div className=\"content-meta\">\n              <div className=\"message-content\">\n                {content}\n                {attachments}\n              </div>\n              {this.props.timestamp ?\n                <ReceivedMarker\n                  timestamp={this.props.timestamp}\n                  received={this.props.received} />\n                : null}\n            </div>\n            {this.props.deleted || !this.props.showContextMenu ?\n              null :\n              <span className=\"menuTrigger\">\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">expand_more</i>\n                </a>\n              </span>\n            }\n          </div>\n          {fullDisplay ?\n            <div className=\"author\">\n              {this.props.userName ||\n                <i><FormattedMessage id=\"user_not_found\" defaultMessage=\"Not found\"\n                description=\"In place of a user's full name when the user is not found.\" /></i>\n              }\n            </div>\n            : null\n          }\n        </div>\n      </li>\n    );\n  }\n};\n\nconst IntlChatMessage = injectIntl(BaseChatMessage);\nconst ChatMessage = React.forwardRef((props, ref) => <IntlChatMessage innerRef = {ref} {...props} />);\n\nexport default ChatMessage;\n","// Send message form.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport { KEYPRESS_DELAY } from '../config.js';\nimport { filePasted } from '../lib/blob-helpers.js';\nimport { replyFormatter } from '../lib/formatters.js';\n\nconst messages = defineMessages({\n  messaging_disabled: {\n    id: 'messaging_disabled_prompt',\n    defaultMessage: 'Messaging disabled',\n    description: 'Prompt in SendMessage in read-only topic'\n  },\n  type_new_message: {\n    id: 'new_message_prompt',\n    defaultMessage: 'New message',\n    description: 'Prompt in send message field'\n  },\n  add_image_caption: {\n    id: 'image_caption_prompt',\n    defaultMessage: 'Image caption',\n    description: 'Prompt in SendMessage for attached image'\n  },\n  file_attachment_too_large: {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  },\n  cannot_initiate_upload: {\n    id: 'cannot_initiate_file_upload',\n    defaultMessage: 'Cannot initiate file upload.',\n    description: 'Generic error messagewhen attachment fails'\n  },\n});\n\nclass SendMessage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      quote: null,\n      message: '',\n      // Make initial keypress time as if it happened 5001 milliseconds in the past.\n      keypressTimestamp: new Date().getTime() - KEYPRESS_DELAY - 1\n    };\n\n    this.handlePasteEvent = this.handlePasteEvent.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleSend = this.handleSend.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleMessageTyping = this.handleMessageTyping.bind(this);\n\n    this.handleQuoteClick = this.handleQuoteClick.bind(this);\n\n    this.formatReply = this.formatReply.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.addEventListener('paste', this.handlePasteEvent, false);\n    }\n\n    this.setState({quote: this.formatReply()});\n  }\n\n  componentWillUnmount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.removeEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.messageEditArea) {\n      this.messageEditArea.focus();\n    }\n\n    if (prevProps.reply != this.props.reply) {\n      this.setState({quote: this.formatReply()});\n    }\n  }\n\n  formatReply() {\n    return this.props.reply ?\n      Drafty.format(this.props.reply.content, replyFormatter, {\n        formatMessage: this.props.intl.formatMessage.bind(this.props.intl),\n        authorizeURL: this.props.tinode.authorizeURL.bind(this.props.tinode)\n      }) : null;\n  }\n\n  handlePasteEvent(e) {\n    if (this.props.disabled) {\n      return;\n    }\n    // FIXME: handle large files too.\n    if (filePasted(e,\n      (bits, mime, width, height, fname) => {\n        this.props.onAttachImage(mime, bits, width, height, fname);\n      },\n      (mime, bits, fname) => {\n        this.props.onAttachFile(mime, bits, fname);\n      },\n      this.props.onError)) {\n\n      // If a file was pasted, don't paste base64 data into input field.\n      e.preventDefault();\n    }\n  }\n\n  handleAttachImage(e) {\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachImage(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleAttachFile(e) {\n    const {formatMessage} = this.props.intl;\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachFile(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleSend(e) {\n    e.preventDefault();\n    const message = this.state.message.trim();\n    if (message || this.props.acceptBlank || this.props.noInput) {\n      this.props.onSendMessage(message);\n      this.setState({message: ''});\n    }\n  }\n\n  /* Send on Enter key */\n  handleKeyPress(e) {\n    // Remove this if you don't want Enter to trigger send\n    if (e.key === 'Enter') {\n      // Have Shift-Enter insert a line break instead\n      if (!e.shiftKey) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.handleSend(e);\n      }\n    }\n  }\n\n  handleMessageTyping(e) {\n    const newState = {message: e.target.value};\n    if (this.props.onKeyPress) {\n      const now = new Date().getTime();\n      if (now - this.state.keypressTimestamp > KEYPRESS_DELAY) {\n        this.props.onKeyPress();\n        newState.keypressTimestamp = now;\n      }\n    }\n    this.setState(newState);\n  }\n\n  handleQuoteClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.props.reply && this.props.onQuoteClick) {\n      const replyToSeq = this.props.reply.seq;\n      this.props.onQuoteClick(replyToSeq);\n    }\n  }\n\n  render() {\n    const { formatMessage } = this.props.intl;\n    const prompt = this.props.disabled ?\n      formatMessage(messages.messaging_disabled) :\n      (this.props.messagePrompt ?\n        formatMessage(messages[this.props.messagePrompt]) :\n        formatMessage(messages.type_new_message));\n\n    const quote =\n      (<div id=\"reply-quote-preview\">\n        <div className=\"cancel\">\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancelReply();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        {this.state.quote}\n      </div>);\n\n    return (\n      <div id=\"send-message-wrapper\">\n        {this.state.quote && !this.props.noInput ? quote : null}\n        <div id=\"send-message-panel\">\n          {!this.props.disabled ?\n            <>\n              {this.props.onAttachFile ?\n                <>\n                  <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachImage.click();}} title=\"Add image\">\n                    <i className=\"material-icons secondary\">photo</i>\n                  </a>\n                  <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachFile.click();}} title=\"Attach file\">\n                    <i className=\"material-icons secondary\">attach_file</i>\n                  </a>\n                </>\n                :\n                null}\n              {this.props.noInput ?\n                (this.state.quote ? quote : <div className=\"hr thin\" />) :\n                <textarea id=\"sendMessage\" placeholder={prompt}\n                  value={this.state.message} onChange={this.handleMessageTyping}\n                  onKeyPress={this.handleKeyPress}\n                  ref={(ref) => {this.messageEditArea = ref;}}\n                  autoFocus />}\n              <a href=\"#\" onClick={this.handleSend} title=\"Send\">\n                <i className=\"material-icons\">send</i>\n              </a>\n              <input type=\"file\" ref={(ref) => {this.attachFile = ref;}}\n                onChange={this.handleAttachFile} style={{display: 'none'}} />\n              <input type=\"file\" ref={(ref) => {this.attachImage = ref;}} accept=\"image/*\"\n                onChange={this.handleAttachImage} style={{display: 'none'}} />\n            </>\n            :\n            <div id=\"writing-disabled\">{prompt}</div>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SendMessage);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { bytesToHumanSize, shortenFileName } from '../lib/strformat.js';\n\n// Get material icon name from mime type.\nfunction iconFromMime(mime) {\n  // If more icons become available in material icons, add them to this mime-to-icon mapping.\n  const mimeToIcon = {default: 'insert_drive_file', image: 'image', text: 'description', video: 'theaters'};\n\n  return mimeToIcon[mime] || mimeToIcon[(mime || '').split('/')[0]] || mimeToIcon['default'];\n}\n\nexport default class DocPreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleSendDoc = this.handleSendDoc.bind(this);\n  }\n\n  handleSendDoc(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(this.props.content.file);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          <span>{this.props.content.name}</span>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\">\n          <div className=\"flex-column narrow\">\n            <i className=\"material-icons gray\">{iconFromMime(this.props.content.type)}</i>\n            <div><b><FormattedMessage id=\"label_file_name\" defaultMessage=\"File name:\"\n              description=\"Label for a file name\" /></b> {shortenFileName(this.props.content.name, 24) || '-'}</div>\n            <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n              description=\"Label for file content type (mime)\" /></b> {this.props.content.type || 'application/octet-stream'}</div>\n            <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n              description=\"Label for file size\" /></b> {bytesToHumanSize(this.props.content.size)}</div>\n          </div>\n        </div>\n        <SendMessage\n          noInput={true}\n          tinode={this.props.tinode}\n          reply={this.props.reply}\n          onCancelReply={this.props.onCancelReply}\n          onSendMessage={this.handleSendDoc}\n          onError={this.props.onError} />\n      </div>\n    );\n  }\n};\n","// GroupSubs: a list of group subscribers currently online.\n// Show in the topic title bar\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { MAX_ONLINE_IN_TOPIC } from '../config.js'\n\nimport LetterTile from './letter-tile.jsx';\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class GroupSubs extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const usersOnline = [];\n    const totalCount = (this.props.subscribers || []).length;\n    const countToShow = Math.min(MAX_ONLINE_IN_TOPIC, totalCount);\n\n    (this.props.subscribers || []).some((sub) => {\n      usersOnline.push(\n        <div className=\"avatar-box\" key={sub.user}>\n          <LetterTile\n            tinode={this.props.tinode}\n            topic={sub.user}\n            avatar={makeImageUrl(sub.public ? sub.public.photo : null) || true}\n            title={sub.public ? sub.public.fn : null} />\n        </div>\n      );\n      return usersOnline.length == countToShow;\n    });\n\n    return (\n      <div id=\"topic-users\">{usersOnline} {totalCount > countToShow ?\n        <span>\n          <FormattedMessage id=\"more_online_members\" defaultMessage=\"+{overflow} more\"\n              description=\"Shown in MessagesView title bar when the number of online subscribers exceeds MAX_ONLINE_IN_TOPIC\"\n              values={{ overflow: (totalCount - countToShow) }} />\n        </span> : null}\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\nimport { bytesToHumanSize, shortenFileName } from '../lib/strformat.js';\n\nexport default class ImagePreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      width: 0,\n      height: 0\n    };\n\n    this.handleSendImage = this.handleSendImage.bind(this);\n  }\n\n  assignWidth(node) {\n    if (node && !this.state.width) {\n      const bounds = node.getBoundingClientRect();\n      this.setState({\n        width: bounds.width | 0,\n        height: bounds.height | 0\n      });\n    }\n  }\n\n  handleSendImage(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(caption, this.props.content.blob);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n\n    const dim = fitImageSize(this.props.content.width, this.props.content.height,\n      this.state.width, this.state.height, false);\n    const size = dim ? { width: dim.dstWidth + 'px', height: dim.dstHeight + 'px' } :\n      ((this.props.content.width > this.props.content.height) ? {width: '100%'} : {height: '100%'});\n    size.maxWidth = '100%';\n    size.maxHeight = '100%';\n\n    // Average font aspect ratio is ~0.5; File name takes 1/3 of the viewport width.\n    const maxlength = Math.max(((this.state.width / REM_SIZE / 1.5) | 0) - 2, 12);\n    const fname = shortenFileName(this.props.content.name, maxlength) || '-';\n\n    const width = this.props.content.width || '-';\n    const height = this.props.content.height || '-';\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          {!this.props.onSendMessage ?\n            <a href={this.props.content.url} download={true}>\n              <i className=\"material-icons\">file_download</i> <FormattedMessage\n                id=\"download_action\" defaultMessage=\"download\" description=\"Call to action [download]\" />\n            </a>\n            :\n            <span>{fname}</span>\n          }\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\" ref={(node) => this.assignWidth(node)}>\n          <img src={this.props.content.url} style={size} className=\"image-preview\" alt={this.props.content.name} />\n        </div>\n        {this.props.onSendMessage ?\n          <SendMessage\n            messagePrompt=\"add_image_caption\"\n            acceptBlank={true}\n            tinode={this.props.tinode}\n            reply={this.props.reply}\n            onCancelReply={this.props.onCancelReply}\n            onSendMessage={this.handleSendImage}\n            onError={this.props.onError} />\n          :\n          <div id=\"image-preview-footer\">\n            <div>\n              <div><b><FormattedMessage id=\"label_file_name\" defaultMessage=\"File name:\"\n                description=\"Label for a file name\" /></b></div>\n              <div><span title={this.props.content.name}>{fname}</span></div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n                description=\"Label for file content type (mime)\" /></b></div>\n              <div>{this.props.content.type}</div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n                description=\"Label for file size\" /></b></div>\n              <div>{width} &times; {height} px; {bytesToHumanSize(this.props.content.size)}</div>\n            </div>\n          </div>}\n      </div>\n    );\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Invitation extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleButtonAction = this.handleButtonAction.bind(this);\n  }\n\n  handleButtonAction(evt, data) {\n    evt.preventDefault();\n    this.props.onAction(data);\n  }\n\n  render() {\n    return (\n      <div className=\"accept-invite-panel\">\n        <div className=\"title\">\n          <FormattedMessage id=\"chat_invitation\"\n            defaultMessage=\"You are invited to start a new chat. What would you like to do?\"\n            description=\"New chat invitation message: [Accept] [Ignore] [Block].\" />\n        </div>\n        <div className=\"footer\">\n          <button className=\"primary\" onClick={event => { this.handleButtonAction(event, \"accept\"); }}>\n            <FormattedMessage id=\"chat_invitation_accept\"\n              defaultMessage=\"Accept\" description=\"Action [Accept] for chat invitation.\" />\n          </button>\n          <button className=\"secondary\" onClick={event => { this.handleButtonAction(event, \"delete\"); }}>\n            <FormattedMessage id=\"chat_invitation_ignore\"\n              defaultMessage=\"Ignore\" description=\"Action [Ignore] for chat invitation.\" />\n          </button>\n          <button className=\"secondary\" onClick={event => { this.handleButtonAction(event, \"block\"); }}>\n            <FormattedMessage id=\"chat_invitation_block\"\n              defaultMessage=\"Block\" description=\"Action [Block] for chat invitation.\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n","/* This is just a static page to display when no conversation is selected. */\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME } from '../config.js';\n\nexport default class LogoView extends React.PureComponent {\n  render() {\n    const version = APP_NAME + ' (' + Tinode.getLibrary() + ')';\n    return (\n      <div id=\"dummy-view\">\n        <div>\n          <a href=\"https://github.com/tinode/chat/\">\n            <img id=\"logo\" alt=\"logo\" src=\"img/logo.svg\" />\n            <h2>Tinode Web</h2>\n          </a>\n          <p><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\"\n            description=\"Label for a client version\" /> {version}</p>\n          <p><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\"\n            description=\"Label for a server version\" /> {this.props.serverVersion} ({this.props.serverAddress})</p>\n        </div>\n      </div>\n    );\n  }\n};\n","// Utility class for hash navigation.\n\n// Parse hash as in http://www.example.com/path#hash as if it were\n// path and arguments.\nexport default class HashNavigation {\n  static parseUrlHash(hash) {\n    // Split path from args, path -> parts[0], args->path[1]\n    const parts = hash.split('?', 2);\n    const params = {};\n    let path = [];\n    if (parts[0]) {\n      path = parts[0].replace('#', '').split('/');\n    }\n    if (parts[1]) {\n      parts[1].split('&').forEach(function(part) {\n        const item = part.split('=');\n        if (item[0]) {\n          params[decodeURIComponent(item[0])] = decodeURIComponent(item[1]);\n        }\n      });\n    }\n    return {path: path, params: params};\n  }\n\n  static navigateTo(url) {\n    window.location.hash = url;\n  }\n\n  static composeUrlHash(path, params) {\n    let url = path.join('/');\n    const args = [];\n    for (const key in params) {\n      if (params.hasOwnProperty(key)) {\n        args.push(key + '=' + params[key]);\n      }\n    }\n    if (args.length > 0) {\n      url += '?' + args.join('&');\n    }\n    return url;\n  }\n\n  static addUrlParam(hash, key, value) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.params[key] = value;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static removeUrlParam(hash, key) {\n    const parsed = this.parseUrlHash(hash);\n    delete parsed.params[key];\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlSidePanel(hash, sidepanel) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[0] = sidepanel;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlInfoPanel(hash, infopanel) {\n    const parsed = this.parseUrlHash(hash);\n    if (infopanel) {\n      parsed.params.info = infopanel;\n    } else {\n      delete parsed.params.info;\n    }\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlTopic(hash, topic) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[1] = topic;\n    // Close InfoView on topic change.\n    delete parsed.params.info;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n}\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\nconst Drafty = Tinode.Drafty;\n\nimport ChatMessage from '../widgets/chat-message.jsx';\nimport ContactBadges from '../widgets/contact-badges.jsx';\nimport DocPreview from '../widgets/doc-preview.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupSubs from '../widgets/group-subs.jsx';\nimport ImagePreview from '../widgets/image-preview.jsx';\nimport Invitation from '../widgets/invitation.jsx';\nimport LetterTile from '../widgets/letter-tile.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport LogoView from './logo-view.jsx';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { DEFAULT_P2P_ACCESS_MODE, IMAGE_PREVIEW_DIM, KEYPRESS_DELAY,\n  MESSAGES_PAGE, MAX_EXTERN_ATTACHMENT_SIZE, MAX_IMAGE_DIM, MAX_INBAND_ATTACHMENT_SIZE,\n  READ_DELAY, QUOTED_REPLY_LENGTH } from '../config.js';\nimport { blobToBase64, fileToBase64,\n  imageScaled, makeImageUrl } from '../lib/blob-helpers.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { bytesToHumanSize, shortDateFormat } from '../lib/strformat.js';\n\n// Run timer with this frequency (ms) for checking notification queue.\nconst NOTIFICATION_EXEC_INTERVAL = 300;\n\nconst messages = defineMessages({\n  online_now: {\n    id: 'online_now',\n    defaultMessage: 'online now',\n    description: 'Indicator that the user or topic is currently online',\n  },\n  last_seen: {\n    id: 'last_seen_timestamp',\n    defaultMessage: 'Last seen',\n    description: 'Label for the timestamp of when the user or topic was last online'\n  },\n  not_found: {\n    id: 'title_not_found',\n    defaultMessage: 'Not found',\n    description: 'Title shown when topic is not found'\n  },\n  channel: {\n    id: 'channel',\n    defaultMessage: 'channel',\n    description: 'Subtitle shown for channels in MessagesView instead of last seen'\n  },\n  file_attachment_too_large: {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  },\n  invalid_content: {\n    id: 'invalid_content',\n    defaultMessage: 'invalid content',\n    description: 'Shown when the message is unreadable'\n  },\n});\n\n// Checks if the access permissions are granted but not yet accepted.\nfunction isUnconfirmed(acs) {\n  if (acs) {\n    const ex = acs.getExcessive() || '';\n    return acs.isJoiner('given') && (ex.includes('R') || ex.includes('W'));\n  }\n  return false;\n}\n\nfunction isPeerRestricted(acs) {\n  if (acs) {\n    const ms = acs.getMissing() || '';\n    return acs.isJoiner('want') && (ms.includes('R') || ms.includes('W'));\n  }\n  return false;\n}\n\nclass MessagesView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = MessagesView.getDerivedStateFromProps(props, {});\n\n    this.leave = this.leave.bind(this);\n    this.sendMessage = this.sendMessage.bind(this);\n    this.retrySend = this.retrySend.bind(this);\n    this.sendImageAttachment = this.sendImageAttachment.bind(this);\n    this.sendFileAttachment = this.sendFileAttachment.bind(this);\n    this.sendKeyPress = this.sendKeyPress.bind(this);\n    this.subscribe = this.subscribe.bind(this);\n    this.handleScrollReference = this.handleScrollReference.bind(this);\n    this.handleScrollEvent = this.handleScrollEvent.bind(this);\n    this.handleDescChange = this.handleDescChange.bind(this);\n    this.handleSubsUpdated = this.handleSubsUpdated.bind(this);\n    this.handleMessageUpdate = this.handleMessageUpdate.bind(this);\n    this.handleAllMessagesReceived = this.handleAllMessagesReceived.bind(this);\n    this.handleInfoReceipt = this.handleInfoReceipt.bind(this);\n    this.handleImagePostview = this.handleImagePostview.bind(this);\n    this.handleClosePreview = this.handleClosePreview.bind(this);\n    this.handleFormResponse = this.handleFormResponse.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleShowMessageContextMenu = this.handleShowMessageContextMenu.bind(this);\n    this.handleNewChatAcceptance = this.handleNewChatAcceptance.bind(this);\n    this.handleEnablePeer = this.handleEnablePeer.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n    this.postReadNotification = this.postReadNotification.bind(this);\n    this.clearNotificationQueue = this.clearNotificationQueue.bind(this);\n\n    this.handlePickReply = this.handlePickReply.bind(this);\n    this.handleCancelReply = this.handleCancelReply.bind(this);\n    this.handleQuoteClick = this.handleQuoteClick.bind(this);\n\n    this.chatMessageRefs = {};\n    this.getOrCreateMessageRef = this.getOrCreateMessageRef.bind(this);\n\n    this.readNotificationQueue = [];\n    this.readNotificationTimer = null;\n  }\n\n  getOrCreateMessageRef(seqId) {\n    if (this.chatMessageRefs.hasOwnProperty(seqId)) {\n      return this.chatMessageRefs[seqId];\n    }\n    const ref = React.createRef();\n    this.chatMessageRefs[seqId] = ref;\n    return ref;\n  }\n\n  componentDidMount() {\n    if (this.messagesScroller) {\n      this.messagesScroller.addEventListener('scroll', this.handleScrollEvent);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messagesScroller) {\n      this.messagesScroller.removeEventListener('scroll', this.handleScrollEvent);\n    }\n\n    // Flush all notifications.\n    this.clearNotificationQueue();\n  }\n\n  // Scroll last message into view on component update e.g. on message received\n  // or vertical shrinking.\n  componentDidUpdate(prevProps, prevState) {\n    if (this.messagesScroller) {\n      if (prevState.topic != this.state.topic || prevState.messageCount != this.state.messageCount) {\n        // New message\n        this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n      } else if (prevProps.viewportHeight > this.props.viewportHeight) {\n        // Componet changed height.\n        this.messagesScroller.scrollTop += prevProps.viewportHeight - this.props.viewportHeight;\n      }\n    }\n\n    const topic = this.props.tinode ? this.props.tinode.getTopic(this.state.topic) : undefined;\n    if (this.state.topic != prevState.topic) {\n      if (prevState.topic && !Tinode.isNewGroupTopicName(prevState.topic)) {\n        this.leave(prevState.topic);\n      }\n\n      if (topic) {\n        topic.onData = this.handleMessageUpdate;\n        topic.onAllMessagesReceived = this.handleAllMessagesReceived;\n        topic.onInfo = this.handleInfoReceipt;\n        topic.onMetaDesc = this.handleDescChange;\n        topic.onSubsUpdated = this.handleSubsUpdated;\n        topic.onPres = this.handleSubsUpdated;\n      }\n    }\n\n    if (!this.props.applicationVisible) {\n      // If application is not visible, flush all unsent 'read' notifications.\n      this.clearNotificationQueue();\n    } else {\n      // Otherwise assume there are unread messages.\n      this.postReadNotification(0);\n    }\n\n    if ((this.state.topic != prevState.topic) || !prevProps.ready) {\n      this.subscribe(topic);\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let nextState = {};\n    if (!nextProps.topic) {\n      // Default state: no topic.\n      nextState = {\n        messageCount: 0,\n        latestClearId: -1,\n        onlineSubs: [],\n        topic: null,\n        title: '',\n        avatar: null,\n        isVerified: false,\n        isStaff: false,\n        isDangerous: false,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false,\n        peerMessagingDisabled: false,\n        channel: false,\n        reply: null\n      };\n    } else if (nextProps.topic != prevState.topic) {\n      const topic = nextProps.tinode.getTopic(nextProps.topic);\n\n      let reply = null;\n      if (nextProps.forwardMessage) {\n        // We are forwarding a message. Show preview.\n        const preview = nextProps.forwardMessage.preview;\n        reply = {\n          content: preview,\n          seq: null\n        };\n      }\n\n      nextState = {\n        topic: nextProps.topic,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false,\n        reply: reply\n      };\n\n      if (topic) {\n        // Topic exists.\n        const subs = [];\n\n        if (nextProps.connected) {\n          topic.subscribers((sub) => {\n            if (sub.online && sub.user != nextProps.myUserId) {\n              subs.push(sub);\n            }\n          });\n        }\n\n        Object.assign(nextState, {\n          onlineSubs: subs\n        });\n\n        if (topic.public) {\n          Object.assign(nextState, {\n            title: topic.public.fn,\n            avatar: makeImageUrl(topic.public.photo)\n          });\n        } else {\n          Object.assign(nextState, {\n            title: '',\n            avatar: null\n          });\n        }\n\n        const peer = topic.p2pPeerDesc();\n        if (peer) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: isPeerRestricted(peer.acs)\n          });\n        } else if (prevState.peerMessagingDisabled) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: false\n          });\n        }\n        Object.assign(nextState, {\n          messageCount: topic.messageCount(),\n          latestClearId: topic.maxClearId(),\n          channel: topic.isChannelType()\n        });\n      } else {\n        // Invalid topic.\n        Object.assign(nextState, {\n          messageCount: 0,\n          latestClearId: -1,\n          onlineSubs: [],\n          title: '',\n          avatar: null,\n          peerMessagingDisabled: false,\n          channel: false\n        });\n      }\n    }\n\n    if (nextProps.acs) {\n      if (nextProps.acs.isWriter() != prevState.isWriter) {\n        nextState.isWriter = !prevState.isWriter;\n      }\n      if (nextProps.acs.isReader() != prevState.isReader) {\n        nextState.isReader = !prevState.isReader;\n      }\n      if (!nextProps.acs.isReader('given') != prevState.readingBlocked) {\n        nextState.readingBlocked = !prevState.readingBlocked;\n      }\n      if (nextProps.acs.isSharer() != prevState.isSharer) {\n        nextState.isSharer = !prevState.isSharer;\n      }\n    } else {\n      if (prevState.isWriter) {\n        nextState.isWriter = false;\n      }\n      if (prevState.isReader) {\n        nextState.isReader = false;\n      }\n      if (!prevState.readingBlocked) {\n        prevState.readingBlocked = true;\n      }\n      if (prevState.isSharer) {\n        nextState.isSharer = false;\n      }\n    }\n\n    if (isUnconfirmed(nextProps.acs) == !prevState.unconformed) {\n      nextState.unconfirmed = !prevState.unconformed;\n    }\n\n    // Clear subscribers online when there is no connection.\n    if (!nextProps.connected && prevState.onlineSubs && prevState.onlineSubs.length > 0) {\n      nextState.onlineSubs = [];\n    }\n\n    return nextState;\n  }\n\n  subscribe(topic) {\n    if (!topic || topic.isSubscribed() || !this.props.ready) {\n      return;\n    }\n\n    // Is this a new topic?\n    const newTopic = (this.props.newTopicParams && this.props.newTopicParams._topicName == this.props.topic);\n\n    // Don't request the tags. They are useless unless the user\n    // is the owner and is editing the topic.\n    let getQuery = topic.startMetaQuery().withLaterDesc().withLaterSub();\n    if (this.state.isReader || newTopic) {\n      // Reading is either permitted or we don't know because it's a new topic. Ask for messages.\n      getQuery = getQuery.withLaterData(MESSAGES_PAGE);\n      if (this.state.isReader) {\n        getQuery = getQuery.withLaterDel();\n      }\n      // And show \"loading\" spinner.\n      this.setState({ fetchingMessages: true });\n    }\n\n    const setQuery = newTopic ? this.props.newTopicParams : undefined;\n    topic.subscribe(getQuery.build(), setQuery)\n      .then((ctrl) => {\n        if (ctrl.code == 303) {\n          // Redirect to another topic requested.\n          HashNavigation.navigateTo(HashNavigation.setUrlTopic('', ctrl.params.topic));\n          return;\n        }\n        if (this.state.topic != ctrl.topic) {\n          this.setState({topic: ctrl.topic});\n        }\n        this.props.onNewTopicCreated(this.props.topic, ctrl.topic);\n        // If there are unsent messages, try sending them now.\n        topic.queuedMessages((pub) => {\n          if (!pub._sending && topic.isSubscribed()) {\n            this.retrySend(pub);\n          }\n        });\n      })\n      .catch((err) => {\n        console.error(\"Failed subscription to\", this.state.topic);\n        this.props.onError(err.message, 'err');\n        const blankState = MessagesView.getDerivedStateFromProps({}, {});\n        blankState.title = this.props.intl.formatMessage(messages.not_found);\n        this.setState(blankState);\n      });\n  }\n\n  leave(oldTopicName) {\n    if (!oldTopicName || !this.props.tinode.isTopicCached(oldTopicName)) {\n      return;\n    }\n    const oldTopic = this.props.tinode.getTopic(oldTopicName);\n    if (oldTopic && oldTopic.isSubscribed()) {\n      oldTopic.leave(false)\n        .catch(() => { /* do nothing here */ })\n        .finally(() => {\n          // We don't care if the request succeeded or failed.\n          // The topic is dead regardless.\n          this.setState({fetchingMessages: false});\n          oldTopic.onData = undefined;\n          oldTopic.onAllMessagesReceived = undefined;\n          oldTopic.onInfo = undefined;\n          oldTopic.onMetaDesc = undefined;\n          oldTopic.onSubsUpdated = undefined;\n          oldTopic.onPres = undefined;\n        });\n    }\n  }\n\n  handleScrollReference(node) {\n    if (node) {\n      node.addEventListener('scroll', this.handleScrollEvent);\n      this.messagesScroller = node;\n      this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n    }\n  }\n\n  // Get older messages\n  handleScrollEvent(event) {\n    this.setState({scrollPosition: event.target.scrollHeight - event.target.scrollTop});\n    if (this.state.fetchingMessages) {\n      return;\n    }\n\n    if (event.target.scrollTop <= 0) {\n      const topic = this.props.tinode.getTopic(this.state.topic);\n      if (topic && topic.isSubscribed() && topic.msgHasMoreMessages()) {\n        this.setState({fetchingMessages: true}, () => {\n          topic.getMessagesPage(MESSAGES_PAGE)\n            .catch((err) => this.props.onError(err.message, 'err'))\n            .finally(() => this.setState({fetchingMessages: false}));\n          });\n      }\n    }\n  }\n\n  handleDescChange(desc) {\n    if (desc.public) {\n      this.setState({\n        title: desc.public.fn,\n        avatar: makeImageUrl(desc.public.photo)\n      });\n    } else {\n      this.setState({\n        title: '',\n        avatar: null\n      });\n    }\n\n    if (desc.acs) {\n      this.setState({\n        isWriter: desc.acs.isWriter(),\n        isReader: desc.acs.isReader(),\n        readingBlocked: !desc.acs.isReader('given'),\n        unconfirmed: isUnconfirmed(desc.acs),\n      });\n    }\n  }\n\n  postReadNotification(seq) {\n    // Ignore notifications if the app is invisible.\n    if (!this.props.applicationVisible) {\n      return;\n    }\n\n    // Set up the timer if it's not running already.\n    if (!this.readNotificationTimer) {\n      this.readNotificationTimer = setInterval(() => {\n        if (this.readNotificationQueue.length == 0) {\n          // Shut down the timer if the queue is empty.\n          clearInterval(this.readNotificationTimer);\n          this.readNotificationTimer = null;\n          return;\n        }\n\n        let seq = -1;\n        while (this.readNotificationQueue.length > 0) {\n          const n = this.readNotificationQueue[0];\n          if (n.topicName != this.state.topic) {\n            // Topic has changed. Drop the notification.\n            this.readNotificationQueue.shift();\n            continue;\n          }\n\n          const now = new Date();\n          if (n.sendAt <= now) {\n            // Remove expired notification from queue.\n            this.readNotificationQueue.shift();\n            seq = Math.max(seq, n.seq);\n          } else {\n            break;\n          }\n        }\n\n        // Send only one notification for the whole batch of messages.\n        if (seq >= 0) {\n          const topic = this.props.tinode.getTopic(this.state.topic);\n          if (topic) {\n            topic.noteRead(seq);\n          }\n        }\n      }, NOTIFICATION_EXEC_INTERVAL);\n    }\n\n    const now = new Date();\n    this.readNotificationQueue.push({\n      topicName: this.state.topic,\n      seq: seq,\n      sendAt: now.setMilliseconds(now.getMilliseconds() + READ_DELAY)\n    });\n  }\n\n  // Clear notification queue and timer.\n  clearNotificationQueue() {\n    this.readNotificationQueue = [];\n    if (this.readNotificationTimer) {\n      clearInterval(this.readNotificationTimer);\n      this.readNotificationTimer = null;\n    }\n  }\n\n  handleSubsUpdated() {\n    if (this.state.topic) {\n      const subs = [];\n      const topic = this.props.tinode.getTopic(this.state.topic);\n      topic.subscribers((sub) => {\n        if (sub.online && sub.user != this.props.myUserId) {\n          subs.push(sub);\n        }\n      });\n      const newState = {onlineSubs: subs};\n      const peer = topic.p2pPeerDesc();\n      if (peer) {\n        Object.assign(newState, {\n          peerMessagingDisabled: isPeerRestricted(peer.acs)\n        });\n      } else if (this.state.peerMessagingDisabled) {\n        Object.assign(newState, {\n          peerMessagingDisabled: false\n        });\n      }\n      this.setState(newState);\n    }\n  }\n\n  // The 'msg' could be false-ish if some message ranges were deleted.\n  handleMessageUpdate(msg) {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (!msg) {\n      // msg could be null if one or more messages were deleted.\n      // Updating state to force redraw.\n      this.setState({latestClearId: topic.maxClearId()});\n      return;\n    }\n\n    clearTimeout(this.keyPressTimer)\n    this.setState({messageCount: topic.messageCount(), typingIndicator: false});\n\n    // Scroll to the bottom if the message is added to the end of the message list.\n    // TODO: This should be replaced by showing a \"scroll to bottom\" button.\n    if (topic.isNewMessage(msg.seq)) {\n      this.setState({scrollPosition: 0});\n    }\n\n    // Aknowledge messages except own messages. They are\n    // automatically assumed to be read and recived.\n    const status = topic.msgStatus(msg, true);\n    if (status >= Tinode.MESSAGE_STATUS_SENT && msg.from != this.props.myUserId) {\n      this.postReadNotification(msg.seq);\n    }\n    // This will send \"received\" notifications right away.\n    this.props.onData(msg);\n  }\n\n  handleAllMessagesReceived(count) {\n    this.setState({fetchingMessages: false});\n    if (count > 0) {\n      // 0 means \"latest\".\n      this.postReadNotification(0);\n    }\n  }\n\n  handleInfoReceipt(info) {\n    switch (info.what) {\n      case 'kp': {\n        clearTimeout(this.keyPressTimer);\n        this.keyPressTimer = setTimeout(() => {\n          this.setState({typingIndicator: false});\n        }, KEYPRESS_DELAY + 1000);\n        if (!this.state.typingIndicator) {\n          this.setState({typingIndicator: true});\n        }\n        break;\n      }\n      case 'read':\n      case 'recv':\n        // Redraw due to changed recv/read status.\n        this.forceUpdate();\n        break;\n      default:\n        console.info(\"Other change in topic: \", info.what);\n    }\n  }\n\n  handleImagePostview(content) {\n    this.setState({ imagePostview: content });\n  }\n\n  handleClosePreview() {\n    if (this.state.imagePreview && this.state.imagePreview.url) {\n      URL.revokeObjectURL(this.state.imagePreview.url);\n    }\n    this.setState({ imagePostview: null, imagePreview: null, docPreview: null });\n  }\n\n  handleFormResponse(action, text, data) {\n    if (action == 'pub') {\n      this.sendMessage(Drafty.attachJSON(Drafty.parse(text), data));\n    } else if (action == 'url') {\n      const url = new URL(data.ref);\n      const params = url.searchParams;\n      for (let key in data.resp) {\n        if (data.resp.hasOwnProperty(key)) {\n          params.set(key, data.resp[key]);\n        }\n      }\n      ['name', 'seq'].map((key) => {\n        if (data[key]) {\n          params.set(key, data[key]);\n        }\n      });\n      params.set('uid', this.props.myUserId);\n      params.set('topic', this.state.topic);\n      url.search = params;\n      window.open(url, '_blank');\n    } else {\n      console.info(\"Unknown action in form\", action);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.state.topic, y: e.pageY, x: e.pageX });\n  }\n\n  handleShowMessageContextMenu(params, messageSpecificMenuItems) {\n    if (params.userFrom == 'chan') {\n      params.userFrom = this.state.topic;\n      params.userName = this.state.title;\n    }\n    params.topicName = this.state.topic;\n    const menuItems = messageSpecificMenuItems || [];\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (topic) {\n      if (!topic.isChannelType()) {\n        menuItems.push('message_delete');\n      }\n      const acs = topic.getAccessMode();\n      if (acs && acs.isDeleter()) {\n        menuItems.push('message_delete_hard');\n      }\n    }\n    this.props.showContextMenu(params, menuItems);\n  }\n\n  handleNewChatAcceptance(action) {\n    this.props.onNewChat(this.state.topic, action);\n  }\n\n  handleEnablePeer(e) {\n    e.preventDefault();\n    this.props.onChangePermissions(this.state.topic, DEFAULT_P2P_ACCESS_MODE, this.state.topic);\n  }\n\n  sendKeyPress() {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (topic.isSubscribed()) {\n      topic.noteKeyPress();\n    }\n  }\n\n  // sendMessage sends the message with an optional subscription to topic first.\n  sendMessage(msg, uploadCompletionPromise, uploader) {\n    let head;\n    if (this.props.forwardMessage) {\n      // We are forwarding a message.\n      msg = this.props.forwardMessage.msg;\n      head = this.props.forwardMessage.head;\n      this.handleCancelReply();\n    } else if (this.state.reply && this.state.reply.content) {\n      // We are replying to a message in this topic.\n      head = {reply: '' + this.state.reply.seq};\n      // Turn it into Drafty so we can make a quoted Drafty object later.\n      if (typeof msg == 'string') {\n        msg = Drafty.parse(msg);\n      }\n      msg = Drafty.append(Drafty.sanitizeEntities(this.state.reply.content), msg);\n      this.handleCancelReply();\n    }\n    this.props.sendMessage(msg, uploadCompletionPromise, uploader, head);\n  }\n\n  // Retry sending a message.\n  retrySend(pub) {\n    this.props.sendMessage(pub.content, undefined, undefined, pub.head);\n  }\n\n  // Send attachment as Drafty message:\n  // - if file is too large, upload it and send a s link.\n  // - if file is small enough, just send it in-band.\n  sendFileAttachment(file) {\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (file.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      const uploadCompletionPromise = uploader.upload(file);\n      const msg = Drafty.attachFile(null, {\n        mime: file.type,\n        filename: file.name,\n        size: file.size,\n        urlPromise: uploadCompletionPromise\n      });\n      // Pass data and the uploader to the TinodeWeb.\n      this.sendMessage(msg, uploadCompletionPromise, uploader);\n    } else {\n      // Small enough to send inband.\n      fileToBase64(file)\n        .then(b64 => this.sendMessage(Drafty.attachFile(null, {mime: b64.mime, data: b64.bits, filename: b64.name})))\n        .catch(err => this.props.onError(err));\n    }\n  }\n\n  // handleAttachFile method is called when [Attach file] button is clicked.\n  handleAttachFile(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    if (file.size > maxExternAttachmentSize) {\n      // Too large.\n      this.props.onError(this.props.intl.formatMessage(messages.file_attachment_too_large,\n        {size: bytesToHumanSize(file.size), limit: bytesToHumanSize(maxExternAttachmentSize)}), 'err');\n    } else {\n      this.setState({\n        docPreview: {\n          file: file,\n          name: file.name,\n          size: file.size,\n          type: file.type\n        }\n      });\n    }\n  }\n\n  // sendImageAttachment sends the image bits inband as Drafty message.\n  sendImageAttachment(caption, blob) {\n    const mime = this.state.imagePreview.mime;\n    const width = this.state.imagePreview.width;\n    const height = this.state.imagePreview.height;\n    const fname = this.state.imagePreview.name;\n\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (blob.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      if (!uploader) {\n        this.props.onError(this.props.intl.formatMessage(messages.cannot_initiate_upload));\n        return;\n      }\n      const uploadCompletionPromise = uploader.upload(blob);\n\n      // Make small preview to show while uploading.\n      imageScaled(blob, IMAGE_PREVIEW_DIM, IMAGE_PREVIEW_DIM, -1, false)\n        // Convert tiny image into base64 for serialization and previewing.\n        .then(scaled => blobToBase64(scaled.blob))\n        .then(b64 => {\n            let msg = Drafty.insertImage(null, 0, {\n              mime: mime,\n              _tempPreview: b64.bits, // This preview will not be serialized.\n              width: width,\n              height: height,\n              filename: fname,\n              size: blob.size,\n              urlPromise: uploadCompletionPromise\n            });\n            if (caption) {\n              msg = Drafty.appendLineBreak(msg);\n              msg = Drafty.append(msg, Drafty.parse(caption));\n            }\n            // Pass data and the uploader to the TinodeWeb.\n            this.sendMessage(msg, uploadCompletionPromise, uploader);\n        }).catch((err) => {\n          this.props.onError(err, 'err');\n        });\n        return;\n    }\n\n    // Upload the image if it's too big to be send inband.\n    blobToBase64(blob)\n      .then(b64 => {\n        let msg = Drafty.insertImage(null, 0, {\n          mime: b64.mime,\n          preview: b64.bits, // Serializable preview\n          width: width,\n          height: height,\n          filename: fname,\n          size: blob.size\n        });\n        if (caption) {\n          msg = Drafty.appendLineBreak(msg);\n          msg = Drafty.append(msg, Drafty.parse(caption));\n        }\n        this.sendMessage(msg);\n      });\n  }\n\n  // handleAttachImage method is called when [Attach image] button is clicked.\n  handleAttachImage(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    // Get image dimensions and size, optionally scale it down.\n    imageScaled(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, maxExternAttachmentSize, false)\n      .then(scaled => {\n        this.setState({imagePreview: {\n          url: URL.createObjectURL(scaled.blob),\n          blob: scaled.blob,\n          name: scaled.name,\n          width: scaled.width,\n          height: scaled.height,\n          size: scaled.blob.size,\n          mime: scaled.mime\n        }});\n      }).catch(err => {\n        this.props.onError(err, 'err');\n      });\n  }\n\n  handleCancelUpload(seq, uploader) {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    const found = topic.findMessage(seq);\n    if (found) {\n      found._cancelled = true;\n    }\n    uploader.cancel();\n  }\n\n  // seq: seq ID of the source message\n  // context: message content.\n  // forwarded: true if the source message is also a forwarded message.\n  // senderId: UID of the sender of the source message.\n  // senderName: full name of the sender of the original message.\n  handlePickReply(seq, content, senderId, senderName) {\n    this.setState({reply: null});\n\n    if (!seq || !content) {\n      return;\n    }\n\n    content = typeof content == 'string' ? Drafty.init(content) : content;\n    if (Drafty.isValid(content)) {\n      content = Drafty.replyContent(content, QUOTED_REPLY_LENGTH);\n    } else {\n      // /!\\ invalid content.\n      content = Drafty.append(Drafty.init('\\u26A0 '),\n        Drafty.wrapInto(this.props.intl.formatMessage(messages.invalid_content), 'EM'));\n    }\n\n    this.setState({\n      reply: {\n        content: Drafty.quote(senderName, senderId, content),\n        seq: seq\n      }\n    });\n    this.props.onCancelForwardMessage();\n  }\n\n  handleCancelReply() {\n    this.setState({reply: null});\n    this.props.onCancelForwardMessage();\n  }\n\n  handleQuoteClick(replyToSeq) {\n    const ref = this.getOrCreateMessageRef(replyToSeq);\n    if (ref && ref.current) {\n      ref.current.scrollIntoView({block: \"center\", behavior: \"smooth\"});\n      ref.current.classList.add('flash');\n      setTimeout(() => { ref.current.classList.remove('flash') } , 1000);\n    } else {\n      console.error(\"Unresolved message ref\", replyToSeq);\n    }\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n\n    let component;\n    if (this.props.hideSelf) {\n      component = null;\n    } else if (!this.state.topic) {\n      component = (\n        <LogoView\n          serverVersion={this.props.serverVersion}\n          serverAddress={this.props.serverAddress} />\n      );\n    } else {\n      let component2;\n      if (this.state.imagePreview) {\n        // Preview image before sending.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePreview}\n            tinode={this.props.tinode}\n            reply={this.state.reply}\n            onCancelReply={this.handleCancelReply}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendImageAttachment} />\n        );\n      } else if (this.state.imagePostview) {\n        // Expand received image.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePostview}\n            onClose={this.handleClosePreview} />\n        );\n      } else if (this.state.docPreview) {\n        // Preview attachment before sending.\n        component2 = (\n          <DocPreview\n            content={this.state.docPreview}\n            tinode={this.props.tinode}\n            reply={this.state.reply}\n            onCancelReply={this.handleCancelReply}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendFileAttachment} />\n        );\n      } else {\n        const topic = this.props.tinode.getTopic(this.state.topic);\n        const isChannel = topic.isChannelType();\n        const groupTopic = topic.isGroupType() && !isChannel;\n        const icon_badges = [];\n        if (topic.trusted) {\n          if (topic.trusted.verified) {\n            icon_badges.push({icon: 'verified', color: 'badge-inv'});\n          }\n          if (topic.trusted.staff) {\n            icon_badges.push({icon: 'staff', color: 'badge-inv'});\n          }\n          if (topic.trusted.danger) {\n            icon_badges.push({icon: 'dangerous', color: 'badge-inv'});\n          }\n        }\n        let messageNodes = [];\n        let previousFrom = null;\n        let chatBoxClass = null;\n        topic.messages((msg, prev, next, i) => {\n          let nextFrom = next ? (next.from || 'chan') : null;\n\n          let sequence = 'single';\n          let thisFrom = msg.from || 'chan';\n          if (thisFrom == previousFrom) {\n            if (thisFrom == nextFrom) {\n              sequence = 'middle';\n            } else {\n              sequence = 'last';\n            }\n          } else if (thisFrom == nextFrom) {\n            sequence = 'first';\n          }\n          previousFrom = thisFrom;\n\n          const isReply = !(thisFrom == this.props.myUserId);\n          const deliveryStatus = topic.msgStatus(msg, true);\n\n          let userFrom = thisFrom, userName, userAvatar;\n          const user = topic.userDesc(thisFrom);\n          if (user && user.public) {\n            userName = user.public.fn;\n            userAvatar = makeImageUrl(user.public.photo);\n          }\n          chatBoxClass = groupTopic ? 'chat-box group' : 'chat-box';\n\n          // Ref for this chat message.\n          const ref = this.getOrCreateMessageRef(msg.seq);\n          let replyToSeq = msg.head ? parseInt(msg.head.reply) : null;\n          if (!replyToSeq || isNaN(replyToSeq)) {\n            replyToSeq = null;\n          }\n\n          messageNodes.push(\n            <ChatMessage\n              tinode={this.props.tinode}\n              content={msg.content}\n              deleted={msg.hi}\n              mimeType={msg.head ? msg.head.mime : null}\n              timestamp={msg.ts}\n              response={isReply}\n              seq={msg.seq}\n              isGroup={groupTopic}\n              isChan={this.state.channel}\n              userFrom={userFrom}\n              userName={userName}\n              userAvatar={userAvatar}\n              sequence={sequence}\n              received={deliveryStatus}\n              uploader={msg._uploader}\n              viewportWidth={this.props.viewportWidth}  // Used by `formatter`.\n              showContextMenu={this.handleShowMessageContextMenu}\n              onImagePreview={this.handleImagePostview}\n              onFormResponse={this.handleFormResponse}\n              onError={this.props.onError}\n              onCancelUpload={this.handleCancelUpload}\n              pickReply={this.handlePickReply}\n              replyToSeq={replyToSeq}\n              onQuoteClick={this.handleQuoteClick}\n              ref={ref}\n              userIsWriter={this.state.isWriter}\n              key={msg.seq} />\n          );\n        });\n\n        let lastSeen = null;\n        if (isChannel) {\n          lastSeen = formatMessage(messages.channel);\n        } else {\n          const cont = this.props.tinode.getMeTopic().getContact(this.state.topic);\n          if (cont && Tinode.isP2PTopicName(cont.topic)) {\n            if (cont.online) {\n              lastSeen = formatMessage(messages.online_now);\n            } else if (cont.seen) {\n              lastSeen = formatMessage(messages.last_seen) + \": \" +\n                shortDateFormat(cont.seen.when, this.props.intl.locale);\n              // TODO: also handle user agent in c.seen.ua\n            }\n          }\n        }\n        const avatar = this.state.avatar || true;\n        const online = this.props.online ? 'online' + (this.state.typingIndicator ? ' typing' : '') : 'offline';\n\n        component2 = (\n          <>\n            <div id=\"topic-caption-panel\" className=\"caption-panel\">\n              {this.props.displayMobile ?\n                <a href=\"#\" id=\"hide-message-view\" onClick={(e) => {e.preventDefault(); this.props.onHideMessagesView();}}>\n                  <i className=\"material-icons\">arrow_back</i>\n                </a>\n                :\n                null}\n              <div className=\"avatar-box\">\n                <LetterTile\n                  tinode={this.props.tinode}\n                  avatar={avatar}\n                  topic={this.state.topic}\n                  title={this.state.title} />\n                {!isChannel ? <span className={online} /> : null}\n              </div>\n              <div id=\"topic-title-group\">\n                <div id=\"topic-title\" className=\"panel-title\">{\n                  this.state.title ||\n                  <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n                    description=\"Title shown when the topic has no name\" /></i>\n                }<ContactBadges badges={icon_badges} /></div>\n                <div id=\"topic-last-seen\">{lastSeen}</div>\n              </div>\n              {groupTopic ?\n                <GroupSubs\n                  tinode={this.props.tinode}\n                  subscribers={this.state.onlineSubs} /> :\n                <div id=\"topic-users\" />\n              }\n              <div>\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">more_vert</i>\n                </a>\n              </div>\n            </div>\n            {this.props.displayMobile ?\n              <ErrorPanel\n                level={this.props.errorLevel}\n                text={this.props.errorText}\n                onClearError={this.props.onError} />\n              : null}\n            <LoadSpinner show={this.state.fetchingMessages} />\n            <div id=\"messages-container\">\n              <div id=\"messages-panel\" ref={this.handleScrollReference}>\n                <ul id=\"scroller\" className={chatBoxClass}>\n                  {messageNodes}\n                </ul>\n              </div>\n              {!this.state.isReader ?\n              <div id=\"write-only-background\">\n                {this.state.readingBlocked ?\n                <div id=\"write-only-note\">\n                  <FormattedMessage id=\"messages_not_readable\" defaultMessage=\"no access to messages\"\n                    description=\"Message shown in topic without the read access\" />\n                </div>\n                : null }\n              </div>\n              : null }\n            </div>\n            {this.state.peerMessagingDisabled && !this.state.unconfirmed ?\n              <div id=\"peer-messaging-disabled-note\">\n                <i className=\"material-icons secondary\">block</i> <FormattedMessage\n                  id=\"peers_messaging_disabled\" defaultMessage=\"Peer's messaging is disabled.\"\n                  description=\"Shown when the p2p peer's messaging is disabled\" /> <a href=\"#\"\n                    onClick={this.handleEnablePeer}><FormattedMessage id=\"enable_peers_messaging\"\n                    defaultMessage=\"Enable\" description=\"Call to action to enable peer's messaging\" /></a>.\n              </div> : null}\n            {this.state.unconfirmed ?\n              <Invitation onAction={this.handleNewChatAcceptance} />\n              :\n              <SendMessage\n                tinode={this.props.tinode}\n                noInput={!!this.props.forwardMessage}\n                disabled={!this.state.isWriter}\n                onKeyPress={this.sendKeyPress}\n                onSendMessage={this.sendMessage}\n                onAttachFile={this.props.forwardMessage ? null : this.handleAttachFile}\n                onAttachImage={this.props.forwardMessage ? null : this.handleAttachImage}\n                onError={this.props.onError}\n                reply={this.state.reply}\n                onQuoteClick={this.handleQuoteClick}\n                onCancelReply={this.handleCancelReply} />}\n          </>\n        );\n      }\n\n      component = <div id=\"topic-view\">{component2}</div>\n    }\n    return component;\n  }\n};\n\nexport default injectIntl(MessagesView);\n","// The <- button to be displayed in title bars.\nimport React from 'react';\n\nexport default class ButtonBack extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onBack();}}>\n        <i className=\"material-icons\">arrow_back</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class MenuContacts extends React.PureComponent {\n  render() {\n    return (\n      <div>\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onNewTopic();}}><i className=\"material-icons\">chat</i></a>\n        &nbsp;\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nexport default class MenuStart extends React.PureComponent {\n  render() {\n    return (\n        <div>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSignUp();}}><i className=\"material-icons\">person_add</i></a>\n          &nbsp;\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n        </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\nimport ButtonBack from './button-back.jsx';\nimport ContactBadges from './contact-badges.jsx';\nimport MenuContacts from './menu-contacts.jsx';\nimport MenuStart from './menu-start.jsx';\n\nimport { sanitizeImageUrl } from '../lib/utils.js';\n\nexport default class SideNavbar extends React.PureComponent {\n  render() {\n    const icon_badges = [];\n    if (this.props.trustedBadges) {\n      this.props.trustedBadges.map((b) => {\n        icon_badges.push({icon: b, color: 'badge-inv'});\n      });\n    }\n    let avatar = null;\n    if (this.props.tinode) {\n      avatar = this.props.tinode.authorizeURL(sanitizeImageUrl(this.props.avatar));\n    }\n    return (\n      <div id=\"side-caption-panel\" className=\"caption-panel\">\n        {this.props.onCancel ? <ButtonBack onBack={this.props.onCancel} /> : null}\n        {avatar ?\n          <div id=\"self-avatar\" className=\"avatar-box\">\n            <LetterTile\n              tinode={this.props.tinode}\n              avatar={avatar}\n              topic={this.props.myUserId}\n              title={this.props.title} />\n          </div>\n          :\n          null}\n        <div id=\"sidepanel-title\" className=\"panel-title\">{this.props.title}<ContactBadges badges={icon_badges}/></div>\n        {this.props.state === 'login' ?\n            <MenuStart onSignUp={this.props.onSignUp} onSettings={this.props.onSettings} /> :\n          this.props.state === 'contacts' ?\n            <MenuContacts onNewTopic={this.props.onNewTopic} onSettings={this.props.onSettings} /> :\n          null}\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport BadgeList from '../widgets/badge-list.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH } from '../config.js';\n\nfunction _clip(str, length) {\n  return str && str.substring(0, length);\n}\n\nexport default class AccountSettingsView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    this.state = {\n      fullName: _clip(me.public ? me.public.fn : undefined, MAX_TITLE_LENGTH),\n      description: _clip(me.public ? me.public.note : undefined, MAX_TOPIC_DESCRIPTION_LENGTH),\n      avatar: makeImageUrl(me.public ? me.public.photo : null)\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          <a href=\"#\" className=\"flat-button float-right\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('general');}}>\n            <i className=\"material-icons\">edit</i>&nbsp;\n            <FormattedMessage id=\"button_edit\" defaultMessage=\"Edit\" description=\"Call to action [Edit]\" />\n          </a>\n          <center>\n            <AvatarUpload\n              tinode={this.props.tinode}\n              avatar={this.state.avatar}\n              readOnly={true}\n              uid={this.props.myUserId}\n              title={this.state.fullName} />\n          </center>\n          <div className=\"group\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n                description=\"Label for full name editing\" />\n            </label>\n            <div className=\"large ellipsized\">{this.state.fullName}</div>\n          </div>\n          <div className=\"group\">\n            <label className=\"small\"><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n              description=\"Label for user address (ID)\" /></label>&nbsp;\n            <tt>{this.props.myUserId}</tt>\n          </div>\n          <div className=\"group\">\n            <BadgeList trustedBadges={this.props.trustedBadges} />\n          </div>\n          {this.state.description ?\n            <div className=\"group\">\n              <label className=\"small\">\n                <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                  description=\"Label for editing topic description\" />\n              </label>\n              <div>{this.state.description}</div>\n            </div> : null}\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('notif');}}>\n            <i className=\"material-icons\">notifications</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_notifications\"\n              defaultMessage=\"Notifications\" description=\"Sidepanel title for AccNotificationsView.\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('security');}}>\n            <i className=\"material-icons\">security</i>&nbsp;<FormattedMessage id=\"button_security\"\n              defaultMessage=\"Security\" description=\"Navigaton button for security panel.\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('support');}}>\n            <i className=\"material-icons\">contact_support</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_support\"\n              defaultMessage=\"Support\" description=\"Sidepanel title for AccSupportView.\" />\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","/* ContactsView holds all contacts-related stuff */\nimport React from 'react';\nimport { FormattedMessage, defineMessages } from 'react-intl';\n\nimport ContactList from '../widgets/contact-list.jsx';\n\nimport { updateFavicon } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  archived_contacts_title: {\n    id: \"archived_contacts\",\n    defaultMessage: \"Archived contacts ({count})\",\n    description: \"Label for archived chats\"\n  }\n});\n\nexport default class ContactsView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAction = this.handleAction.bind(this);\n\n    this.state = ContactsView.deriveStateFromProps(props);\n  }\n\n  static deriveStateFromProps(props) {\n    const contacts = [];\n    let unreadThreads = 0;\n    let archivedCount = 0;\n    props.chatList.map((c) => {\n      const blocked = c.acs && !c.acs.isJoiner();\n      // Show only blocked contacts only when props.blocked == true.\n      if (blocked && props.blocked) {\n        contacts.push(c);\n      }\n      if (blocked || props.blocked) {\n        return;\n      }\n\n      if (c.private && c.private.arch) {\n        if (props.archive) {\n          contacts.push(c);\n        } else {\n          archivedCount ++;\n        }\n      } else if (!props.archive) {\n        contacts.push(c);\n        unreadThreads += c.unread > 0 ? 1 : 0;\n      }\n    });\n\n    contacts.sort((a, b) => {\n      return (b.touched || 0) - (a.touched || 0);\n    });\n\n    if (archivedCount > 0) {\n      contacts.push({\n        action: 'archive',\n        title: messages.archived_contacts_title,\n        values: {count: archivedCount}\n      });\n    }\n\n    return {\n      contactList: contacts,\n      unreadThreads: unreadThreads\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chatList != this.props.chatList ||\n        prevProps.archive != this.props.archive ||\n        prevProps.blocked != this.props.blocked) {\n      const newState = ContactsView.deriveStateFromProps(this.props);\n      this.setState(newState);\n      if (newState.unreadThreads != prevState.unreadThreads) {\n        updateFavicon(newState.unreadThreads);\n      }\n    }\n  }\n\n  handleAction(action_ignored) {\n    this.props.onShowArchive();\n  }\n\n  render() {\n    return (\n      <FormattedMessage id=\"contacts_not_found\"\n        defaultMessage=\"You have no chats<br />¯∖_(ツ)_/¯\"\n        description=\"HTML message shown in ContactList when no contacts are found\">{\n        (no_contacts) => <ContactList\n          tinode={this.props.tinode}\n          connected={this.props.connected}\n          contacts={this.state.contactList}\n          emptyListMessage={no_contacts}\n          topicSelected={this.props.topicSelected}\n          myUserId={this.props.myUserId}\n          showOnline={true}\n          showUnread={true}\n          onTopicSelected={this.props.onTopicSelected}\n          showContextMenu={this.props.showContextMenu}\n          onAction={this.handleAction} />\n      }</FormattedMessage>\n    );\n  }\n};\n","// Helper functions for storing values in localStorage.\n// By default localStorage can store only strings, not objects or other types.\n\nexport default class LocalStorageUtil {\n  // Replace old object with the new one.\n  static setObject(key, value) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n\n  // Get stored object.\n  static getObject(key) {\n    const value = localStorage.getItem(key);\n    return value && JSON.parse(value);\n  }\n\n  // Partially or wholly update stored object.\n  static updateObject(key, value) {\n    const oldVal = this.getObject(key);\n    this.setObject(key, Object.assign(oldVal || {}, value));\n  }\n\n  // Just a wrapper.\n  static removeItem(key) {\n    localStorage.removeItem(key);\n  }\n}\n","// Account registration.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport { theCard } from '../lib/utils.js';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class CreateAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: '',\n      password: '',\n      email: '',\n      fn: '', // full/formatted name\n      imageDataUrl: null,\n      errorCleared: false,\n      saveToken: LocalStorageUtil.getObject('keep-logged-in')\n    };\n\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(password) {\n    this.setState({password: password});\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value})\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleToggleSaveToken() {\n    LocalStorageUtil.setObject('keep-logged-in', !this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({errorCleared: false});\n    this.props.onCreateAccount(\n      this.state.login.trim(),\n      this.state.password.trim(),\n      theCard(this.state.fn.trim().substring(0, MAX_TITLE_LENGTH), this.state.imageDataUrl),\n      {'meth': 'email', 'val': this.state.email});\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form className=\"panel-form-column\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n              description=\"Placeholer for username/login\">{\n              (login_prompt) => <input type=\"text\" placeholder={login_prompt} autoComplete=\"user-name\"\n                value={this.state.login} onChange={this.handleLoginChange} required autoFocus />\n            }</FormattedMessage>\n            <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n              description=\"Placeholder/prompt for entering password\">{\n              (password_prompt) => <VisiblePassword placeholder={password_prompt} autoComplete=\"new-password\"\n                value={this.state.password} onFinished={this.handlePasswordChange}\n                required={true} />\n            }</FormattedMessage>\n          </div>\n          <AvatarUpload\n            tinode={this.props.tinode}\n            onImageChanged={this.handleImageChanged}\n            onError={this.props.onError} />\n        </div>\n        <div  className=\"panel-form-row\">\n          <FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n            description=\"Input placeholder for person's full name\">{\n            (full_name_prompt) => <input type=\"text\" placeholder={full_name_prompt} autoComplete=\"name\"\n              value={this.state.fn} onChange={this.handleFnChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <FormattedMessage id=\"email_prompt\" defaultMessage=\"Email, e.g. jdoe@example.com\"\n            description=\"Input placeholder for email entry\">{\n            (email_prompt) => <input type=\"email\" placeholder={email_prompt} autoComplete=\"email\"\n              value={this.state.email} onChange={this.handleEmailChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n            description=\"Label for a checkbox\">{\n            (stay_logged_in) => <label htmlFor=\"save-token\">&nbsp;{stay_logged_in}</label>\n          }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_up\" defaultMessage=\"Sign up\"\n              description=\"Create account button [Sign Up]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\n\nexport default class EditAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckboxClick = this.handleCheckboxClick.bind(this);\n  }\n\n  handleCheckboxClick(what, checked) {\n    if (what == 'sound') {\n      this.props.onToggleMessageSounds(checked);\n    } else if (what == 'alert') {\n      this.props.onTogglePushNotifications(checked);\n    } else if (what == 'incognito') {\n      this.props.onToggleIncognitoMode(checked);\n    }\n  }\n\n  render() {\n    return (\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"message-sound\">\n              <FormattedMessage id=\"label_message_sound\" defaultMessage=\"Message sound:\"\n                description=\"Label for message sounds toggle\" />\n            </label>\n            <CheckBox name=\"sound\" id=\"message-sound\"\n              checked={this.props.messageSounds} onChange={this.handleCheckboxClick} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"desktop-alerts\">\n            {this.props.desktopAlertsEnabled ?\n              <FormattedMessage id=\"label_push_notifications\" defaultMessage=\"Notification alerts:\"\n                description=\"Label for push notifications switch\" />\n              :\n              <FormattedMessage id=\"label_push_notifications_disabled\"\n                defaultMessage=\"Notification alerts (requires HTTPS):\"\n                description=\"Label for push notifications switch\" />\n            }\n            </label>\n            <CheckBox name=\"alert\" id=\"desktop-alerts\"\n              checked={this.props.desktopAlerts}\n              onChange={this.props.desktopAlertsEnabled ? this.handleCheckboxClick : null} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"incognito-mode\">\n              <FormattedMessage id=\"label_incognito_mode\" defaultMessage=\"Incognito mode:\"\n                description=\"Label for incognito mode toggle\" />\n            </label>\n            <CheckBox name=\"incognito\" id=\"incognito-mode\"\n              checked={this.props.incognitoMode} onChange={this.handleCheckboxClick} />\n          </div>\n        </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\n\nconst messages = defineMessages({\n  delete_account: {\n    id: 'delete_account',\n    defaultMessage: 'Delete account',\n    description: 'Title for delete account warning'\n  },\n  delete_account_warning: {\n    id: 'delete_account_warning',\n    defaultMessage: 'Are you sure you want to delete your account? It cannot be undone.',\n    description: 'Warning message when deleting an account'\n  }\n});\n\nclass AccSecurityView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    let blockedCount = 0;\n    me.contacts((c) => {\n      if (c.acs && !c.acs.isJoiner()) {\n        blockedCount ++;\n      }\n    });\n    const defacs = me.getDefaultAccess();\n    this.state = {\n      auth: defacs ? defacs.auth : null,\n      anon: defacs ? defacs.anon : null,\n      showPermissionEditorFor: undefined,\n      blockedCount: blockedCount,\n    };\n\n    this.handlePasswordUpdate = this.handlePasswordUpdate.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n  }\n\n  handlePasswordUpdate(pwd) {\n    this.setState({password: pwd});\n    this.props.onUpdatePassword(pwd);\n  }\n\n  handleLaunchPermissionsEditor(which) {\n    this.setState({\n      showPermissionEditorFor: which,\n      editedPermissions: this.state[which]\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handlePermissionsChanged(perm) {\n    let defacs = {};\n    defacs[this.state.showPermissionEditorFor] = perm;\n    this.props.onUpdateAccountDesc('me', undefined, undefined, defacs);\n\n    let newState = {showPermissionEditorFor: undefined};\n    newState[this.state.showPermissionEditorFor] = perm;\n    this.setState(newState);\n  }\n\n  handleDeleteAccount(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.delete_account), // title\n      formatMessage(messages.delete_account_warning), // content\n      (() => { this.props.onDeleteAccount(); }), // onConfirm\n      null, // use default text \"OK\"\n      true, // Show Reject button\n      null  // use default text \"Cancel\"\n    );\n  }\n\n  render() {\n    return (\n      <>{this.state.showPermissionEditorFor ?\n        <PermissionsEditor\n          mode={this.state.editedPermissions}\n          skip=\"O\"\n          onSubmit={this.handlePermissionsChanged}\n          onCancel={this.handleHidePermissionsEditor} />\n        :\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_password\" defaultMessage=\"Password\"\n                  description=\"Label for password editing\" />\n            </label>\n            <div>\n              <FormattedMessage id=\"password_unchanged_prompt\" defaultMessage=\"Unchanged\"\n                description=\"Message in editor while password is unchanged\">{\n                (password_unchanged) => <InPlaceEdit\n                  placeholder={password_unchanged}\n                  type=\"password\"\n                  onFinished={this.handlePasswordUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <a href=\"#\" className=\"danger flat-button\" onClick={(e) => {e.preventDefault(); this.props.onLogout();}}>\n              <i className=\"material-icons\">exit_to_app</i> &nbsp;<FormattedMessage id=\"button_logout\"\n                defaultMessage=\"Logout\" description=\"Button [Logout]\" />\n            </a>\n            <a href=\"#\" className=\"danger flat-button\" onClick={(e) => {this.handleDeleteAccount(e);}}>\n              <i className=\"material-icons\">delete</i> &nbsp;<FormattedMessage id=\"button_delete_account\"\n                defaultMessage=\"Delete account\" description=\"Button [Delete account]\" />\n            </a>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <div>\n              <label className=\"small\">\n                <FormattedMessage id=\"label_default_access_mode\" defaultMessage=\"Default access mode:\"\n                description=\"Label for default access mode\" />\n              </label>\n            </div>\n            <div className=\"quoted\">\n              <div>Auth: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>{this.state.auth}</tt></div>\n              <div>Anon: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>{this.state.anon}</tt></div>\n            </div>\n          </div>\n          {this.state.blockedCount > 0 ?\n            <>\n              <div className=\"hr\" />\n              <div className=\"panel-form-row\">\n                <i className=\"material-icons\">block</i>&nbsp;\n                <a href=\"#\" className=\"gray\" onClick={(e) => {e.preventDefault(); this.props.onShowBlocked();}}>\n                  <FormattedMessage id=\"blocked_contacts_link\" defaultMessage=\"Blocked contacts ({count})\"\n                    values={{ count: this.state.blockedCount }} description=\"Blocked contacts link\" />\n                </a>\n              </div>\n            </>\n            : null }\n        </div>\n      }</>\n    );\n  }\n};\n\nexport default injectIntl(AccSecurityView);\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME, LINK_CONTACT_US, LINK_PRIVACY_POLICY, LINK_TERMS_OF_SERVICE } from '../config.js';\n\nexport default class AccSupportView extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          <a href={LINK_CONTACT_US} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">email</i> &nbsp;<FormattedMessage id=\"link_contact_us\"\n              defaultMessage=\"Contact Us\" description=\"Ancor text for contacting us by email\" />\n          </a>\n          <a href={LINK_TERMS_OF_SERVICE} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">description</i> &nbsp;<FormattedMessage id=\"link_terms_of_service\"\n              defaultMessage=\"Terms of Service\" description=\"Ancor text for terms of service link\" />\n          </a>\n          <a href={LINK_PRIVACY_POLICY} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">policy</i> &nbsp;<FormattedMessage id=\"link_privacy_policy\"\n              defaultMessage=\"Privacy Policy\" description=\"Ancor text for privacy policy link\" />\n          </a>\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\"\n              description=\"Label for a client version\" /></label>\n            {APP_NAME}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_sdk\" defaultMessage=\"SDK:\" /></label>\n            {Tinode.getLibrary()}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\"\n              description=\"Label for a server version\" /></label>\n            {this.props.serverVersion}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server_address\" defaultMessage=\"Server address:\" /></label>\n            {this.props.serverAddress}\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","// Login form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\n\nexport default class LoginView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: props.login,\n      password: '',\n      hostName: props.serverAddress,\n      saveToken: props.persist\n    };\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  handleToggleSaveToken() {\n    this.props.onPersistenceChange(!this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onLogin(this.state.login.trim(), this.state.password.trim());\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form id=\"login-form\" onSubmit={this.handleSubmit}>\n        <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n          description=\"Placeholer for username/login\">\n        {\n          (login_prompt) => <input type=\"text\" id=\"inputLogin\"\n            placeholder={login_prompt}\n            autoComplete=\"username\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"none\"\n            value={this.state.login}\n            onChange={this.handleLoginChange}\n            required autoFocus />\n        }\n        </FormattedMessage>\n        <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n          description=\"Placeholder/prompt for entering password\">\n        {\n          (password_prompt) => <VisiblePassword type=\"password\" id=\"inputPassword\"\n            placeholder={password_prompt}\n            autoComplete=\"current-password\"\n            value={this.state.password}\n            onChange={this.handlePasswordChange}\n            required={true} />\n        }\n        </FormattedMessage>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <label htmlFor=\"save-token\">&nbsp;\n            <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n              description=\"Label for a checkbox\" />\n          </label>\n          <a href=\"#reset\">\n            <FormattedMessage id=\"forgot_password_link\" defaultMessage=\"Forgot password?\"\n              description=\"Link to Reset password form\" />\n          </a>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_in\" defaultMessage=\"Sign in\"\n              description=\"Button [Sign In]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n/* END Login */\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  invalid_id: {\n    id: 'error_invalid_id',\n    defaultMessage: 'Invalid ID',\n    description: 'Error message'\n  }\n});\n\nclass NewTopicById extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      groupId: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({groupId: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.groupId) {\n      const name = this.state.groupId.trim();\n      const prefix = name.substr(0, 3);\n      if (name.length > 3 && ['usr', 'grp', 'chn'].includes(prefix)) {\n        this.props.onSubmit(name);\n      } else {\n        this.props.onError(this.props.intl.formatMessage(messages.invalid_id), 'err');\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"group_user_id_prompt\" defaultMessage=\"Group or User ID\"\n          description=\"Prompt for entering user or group ID\">{\n          (prompt) => <input type=\"text\" placeholder={prompt}\n            value={this.state.groupId} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required autoFocus />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_subscribe\" defaultMessage=\"Subscribe\"\n              description=\"Button [Subscribe]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicById);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from './avatar-upload.jsx';\nimport CheckBox from './checkbox.jsx';\nimport TagManager from './tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH } from '../config.js';\n\nexport default class NewTopicGroup extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.fullName = React.createRef();\n\n    this.state = {\n      fullName: '', // full/formatted name\n      private: '',\n      description: '',\n      imageDataUrl: null,\n      tags: [],\n      isChannel: false\n    };\n\n    this.handleFieldEdit = this.handleFieldEdit.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleTagsChanged = this.handleTagsChanged.bind(this);\n    this.handleChannelToggle = this.handleChannelToggle.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    // this.fullName.current.focus();\n  }\n\n  handleFieldEdit(name, e) {\n    this.setState({[name]: e.target.value || ''});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleTagsChanged(tags) {\n    this.setState({tags: tags});\n  }\n\n  handleChannelToggle() {\n    this.setState({isChannel: !this.state.isChannel});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const fn = this.state.fullName.trim().substring(0, MAX_TITLE_LENGTH);\n    const comment = this.state.private.trim().substring(0, MAX_TITLE_LENGTH);\n    const description = this.state.description.trim().substring(0, MAX_TOPIC_DESCRIPTION_LENGTH);\n    if (fn) {\n      this.props.onSubmit(fn, description, this.state.imageDataUrl, comment, this.state.tags, this.state.isChannel);\n    }\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n    return (\n      <form className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-column\">\n          <center>\n            <AvatarUpload\n              tinode={this.props.tinode}\n              onError={this.props.onError}\n              onImageChanged={this.handleImageChanged} />\n          </center>\n          <div className=\"group\">\n            <label className=\"small\" htmlFor=\"new-topic-fn\">\n              <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                description=\"Label for editing topic name\" />\n            </label>\n            <FormattedMessage id=\"topic_name_editing_placeholder\" defaultMessage=\"Freeform name of the group\"\n              description=\"Prompt for entering topic name\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-fn\" placeholder={placeholder}\n                ref={this.fullName} value={this.state.fullName} onChange={this.handleFieldEdit.bind(this, 'fullName')}\n                autoFocus required tabIndex={0} />\n            }</FormattedMessage>\n          </div>\n          <div className=\"group\">\n            <label className=\"small\" htmlFor=\"new-topic-priv\">\n              <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                description=\"Label for editing 'private'\" />\n            </label>\n            <FormattedMessage id=\"private_editing_placeholder\" defaultMessage=\"Visible to you only\"\n              description=\"Placeholder for editing 'private'\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-priv\" placeholder={placeholder}\n                value={this.state.private} onChange={this.handleFieldEdit.bind(this, 'private')} tabIndex={1} />\n            }</FormattedMessage>\n          </div>\n          <div className=\"group\">\n            <label className=\"small\" htmlFor=\"new-topic-desc\">\n              <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                description=\"Label for editing topic description\" />\n            </label>\n            <FormattedMessage id=\"description_editing_placeholder\" defaultMessage=\"Description (optional)\"\n              description=\"Placeholder for editing topic description\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-desc\" placeholder={placeholder}\n                value={this.state.description} onChange={this.handleFieldEdit.bind(this, 'description')} tabIndex={2} />\n            }</FormattedMessage>\n          </div>\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox checked={this.state.isChannel} tabIndex={3} onChange={this.handleChannelToggle} />&nbsp;\n          <label onClick={this.handleChannelToggle}><FormattedMessage id=\"channel_prompt\"\n            defaultMessage=\"This is a channel\"\n            description=\"Checkbox label when creating a channel\" /></label>\n        </div>\n        <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (search & discovery)\"\n          description=\"Section title for TagManager\">{\n          (title) => <TagManager\n            tinode={this.props.tinode}\n            tags={this.state.tags}\n            activated={true}\n            onTagsChanged={this.handleTagsChanged}\n            tabIndex={4}\n            title={title} />\n        }</FormattedMessage>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses}>\n            <FormattedMessage id=\"button_create\" defaultMessage=\"Create\"\n              description=\"Button [Create]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// Create new topic and invite users or send an invite.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport ContactList from '../widgets/contact-list.jsx';\nimport NewTopicById from '../widgets/new-topic-by-id.jsx';\nimport NewTopicGroup from '../widgets/new-topic-group.jsx';\nimport SearchContacts from '../widgets/search-contacts.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\nimport { theCard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  search_for_contacts: {\n    id: \"search_for_contacts\",\n    defaultMessage: \"Use search to find contacts\",\n    description: \"Text shown in contacts view when user entered no search query.\"\n  },\n  search_no_results: {\n    id: \"search_no_results\",\n    defaultMessage: \"Search returned no results\",\n    description: \"Text shown in contacts view when query returned no results.\"\n  },\n  search_placeholder: {\n    id: \"search_placeholder\",\n    defaultMessage: \"List like email:alice@example.com, tel:17025550003...\",\n    description: \"Placeholder in contacts search field\"\n  },\n});\n\nclass NewTopicView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tabSelected: 'find',\n      searchQuery: null\n    };\n\n    this.handleTabClick = this.handleTabClick.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleNewGroupSubmit = this.handleNewGroupSubmit.bind(this);\n    this.handleGroupByID = this.handleGroupByID.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.onInitFind();\n  }\n\n  handleTabClick(e) {\n    e.preventDefault();\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'tab', e.currentTarget.dataset.id));\n    this.setState({tabSelected: e.currentTarget.dataset.id});\n  }\n\n  handleSearchContacts(query) {\n    this.props.onSearchContacts(query);\n    this.setState({searchQuery: Tinode.isNullValue(query) ? null : query});\n  }\n\n  handleContactSelected(uid) {\n    if (this.state.tabSelected == 'find') {\n      HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n      this.props.onCreateTopic(uid);\n    }\n  }\n\n  handleNewGroupSubmit(name, description, dataUrl, priv, tags, isChannel) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(undefined,\n      {public: theCard(name, dataUrl, null, description), private: priv, tags: tags}, isChannel);\n  }\n\n  handleGroupByID(topicName) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(topicName);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const no_contacts_placeholder = formatMessage(this.state.searchQuery ?\n      messages.search_no_results : messages.search_for_contacts);\n    const search_placeholder = formatMessage(messages.search_placeholder);\n    return (\n      <div className=\"flex-column\">\n        <ul className=\"tabbar\">\n          <li className={this.state.tabSelected === \"find\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"find\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_find_user\" defaultMessage=\"find\"\n                description=\"Tab title Find\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"grp\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"grp\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_new_group\" defaultMessage=\"new group\"\n                description=\"Tab title New Group\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"byid\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"byid\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_group_by_id\" defaultMessage=\"by id\"\n                description=\"Tab title Find topic by ID\" />\n            </a>\n          </li>\n        </ul>\n        {this.state.tabSelected === 'grp' ?\n          <NewTopicGroup\n            tinode={this.props.tinode}\n            onSubmit={this.handleNewGroupSubmit} /> :\n          this.state.tabSelected === 'byid' ?\n            <NewTopicById\n              onSubmit={this.handleGroupByID}\n              onError={this.props.onError} /> :\n            <div className=\"flex-column\">\n              <SearchContacts\n                placeholder={search_placeholder}\n                onSearchContacts={this.handleSearchContacts} />\n              <ContactList\n                tinode={this.props.tinode}\n                contacts={this.props.searchResults}\n                myUserId={this.props.myUserId}\n                emptyListMessage={no_contacts_placeholder}\n                showOnline={false}\n                showUnread={false}\n                showContextMenu={false}\n                onTopicSelected={this.handleContactSelected} />\n            </div>}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicView);\n","// A password reset form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\n\nexport default class PasswordResetView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: '',\n      sent: false\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n  }\n\n  componentDidMount() {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    this.setState({token: parsed.params.token, scheme: parsed.params.scheme});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.token) {\n      this.props.onReset(this.state.scheme, this.state.password.trim(), this.state.token);\n    } else if (this.state.sent) {\n      this.props.onCancel();\n    } else {\n      const email = this.state.email.trim();\n      this.setState({email: email});\n      this.props.onRequest('email', email).then(() => {\n        this.setState({sent: true});\n      });\n    }\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  render() {\n    return (\n      <form id=\"password-reset-form\" onSubmit={this.handleSubmit}>\n        {(this.state.token && this.state.scheme) ?\n          <><label htmlFor=\"new-password\">\n            <FormattedMessage id=\"label_new_password\"\n              defaultMessage=\"New password\"\n              description=\"Label for entering a new password\" />\n          </label>\n          <FormattedMessage id=\"new_password_placeholder\" defaultMessage=\"Enter new password\"\n            description=\"Placeholder for entering new password\">{\n            (placeholder) => <VisiblePassword\n              id=\"new-password\"\n              placeholder={placeholder}\n              autoComplete=\"new-password\"\n              value={this.state.password}\n              required={true} autoFocus={true}\n              onChange={this.handlePasswordChange} />\n          }</FormattedMessage></>\n        : this.state.sent ?\n          <>\n            <br/>\n            <center><i className=\"material-icons huge green\">task_alt</i></center>\n            <br/>\n            <center><FormattedMessage id=\"password_reset_email_sent\"\n              defaultMessage=\"An email has been sent to {email}. Follow the directions in the email to reset your password.\"\n              values={{ email: <tt>{this.state.email}</tt> }}\n              description=\"Notification that the email with password reset instructions has been sent\" /></center>\n          </>\n        :\n          <>\n            <label htmlFor=\"inputEmail\">\n              <FormattedMessage id=\"label_reset_password\"\n                defaultMessage=\"Send a password reset email:\"\n                description=\"Label for password reset field\" />\n            </label>\n            <FormattedMessage id=\"credential_email_prompt\" defaultMessage=\"Your registration email\"\n              description=\"Placeholder for entering email\">{\n              (placeholder) => <input type=\"email\" id=\"inputEmail\"\n                placeholder={placeholder}\n                autoComplete=\"email\"\n                value={this.state.email}\n                onChange={this.handleEmailChange}\n                required autoFocus />\n            }</FormattedMessage>\n          </>\n        }\n        <div className=\"dialog-buttons\">\n          <button className=\"primary\" type=\"submit\">{\n            (this.state.token && this.state.scheme) ?\n            <FormattedMessage id=\"button_reset\" defaultMessage=\"Reset\" description=\"Button [Reset]\" />\n            : this.state.sent ?\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\"\n              description=\"Button [OK]\" />\n            :\n            <FormattedMessage id=\"button_send_request\" defaultMessage=\"Send request\"\n              description=\"Button [Send request]\" />\n          }</button>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react';\n\nimport { KNOWN_HOSTS } from '../config.js';\n\n/* Combobox for selecting host name */\n\nexport default class HostSelector extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hostName: props.serverAddress,\n      changed: false\n    };\n\n    this.handleHostNameChange = this.handleHostNameChange.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handleHostNameChange(e) {\n    this.setState({hostName: e.target.value, changed: true});\n  }\n\n  handleEditingFinished() {\n    if (this.state.changed) {\n      this.setState({changed: false});\n      this.props.onServerAddressChange(this.state.hostName.trim());\n    }\n  }\n\n  render() {\n    var hostOptions = [];\n    for (let key in KNOWN_HOSTS) {\n      let item = KNOWN_HOSTS[key];\n      hostOptions.push(\n        <option key={item} value={item} />\n      );\n    }\n    return (\n      <div className=\"panel-form-row\">\n        <input type=\"search\" id=\"host-name\" placeholder={this.props.hostName} list=\"known-hosts\"\n          className=\"quoted\" value={this.state.hostName} onChange={this.handleHostNameChange}\n          onBlur={this.handleEditingFinished} required />\n        <datalist id=\"known-hosts\">\n          {hostOptions}\n        </datalist>\n      </div>\n    );\n  }\n}\n","// Tinode config panel.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport HostSelector from '../widgets/host-selector.jsx';\n\nexport default class SettingsView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transport: props.transport || 'def',\n      serverAddress: props.serverAddress,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleTransportSelected = this.handleTransportSelected.bind(this);\n    this.handleServerAddressChange = this.handleServerAddressChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onUpdate({\n      transport: this.state.transport,\n      serverAddress: this.state.serverAddress\n    });\n  }\n\n  handleTransportSelected(e) {\n    this.setState({transport: e.currentTarget.value});\n  }\n\n  handleServerAddressChange(name) {\n    this.setState({serverAddress: name});\n  }\n\n  render() {\n    const names = {def: \"default\", ws: \"websocket\", lp: \"long polling\"};\n    const transportOptions = [];\n    ['def', 'ws', 'lp'].map((item) => {\n      const id = 'transport-' + item;\n      const name = names[item];\n      transportOptions.push(\n        <li key={item}>\n          <input type=\"radio\" id={id} name=\"transport-select\" value={item}\n            checked={this.state.transport === item}\n            onChange={this.handleTransportSelected} />\n          <label htmlFor={id}>{name}</label>\n        </li>\n      );\n    });\n\n    return (\n      <form id=\"settings-form\" className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_server_to_use\" defaultMessage=\"Server to use:\"\n              description=\"Label for server selector in SettingsView\" />\n          </label>\n        </div>\n        <HostSelector serverAddress={this.state.serverAddress}\n          onServerAddressChange={this.handleServerAddressChange} />\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_wire_transport\" defaultMessage=\"Wire transport:\"\n              description=\"Label for wire transport selection in SettingsView\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ul className=\"quoted\">\n            {transportOptions}\n          </ul>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button type=\"submit\" className=\"primary\">\n            <FormattedMessage id=\"button_update\" defaultMessage=\"Update\"\n              description=\"Button [Update]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// ValidationView: panel for confirming credentials, like email or phone.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  phone: {\n    id: 'phone_dative',\n    defaultMessage: 'phone',\n    description: \"Dative case of 'phone', i.e. 'phone' in 'by phone'\",\n  },\n  email: {\n    id: 'email_dative',\n    defaultMessage: 'email',\n    description: \"Dative case of 'email', i.e. 'email' in 'by email'\",\n  }\n});\n\nclass ValidationView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      code: props.credCode || ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({code: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    } else if (e.key == 'Escape') {\n      this.handleCancel(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.code && this.state.code.trim()) {\n      this.props.onSubmit(this.props.credMethod, this.state.code.trim());\n    }\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel();\n  }\n\n\n  render() {\n    const { formatMessage } = this.props.intl;\n    const methods = {'email': formatMessage(messages.email), 'tel': formatMessage(messages.phone)};\n    let method = methods[this.props.credMethod] || this.props.credMethod;\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\" htmlFor=\"enter-confirmation-code\">\n            <FormattedMessage id=\"enter_confirmation_code_prompt\"\n              defaultMessage=\"Enter confirmation code sent to you by {method}:\"\n              description=\"Request to enter confirmation code\"\n              values={{method: method}} />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"numeric_confirmation_code_prompt\"\n          defaultMessage=\"Numbers only\" description=\"Prompt for numeric conformation code\">{\n          (numbers_only) => <input type=\"text\" id=\"enter-confirmation-code\"\n            placeholder={numbers_only}\n            value={this.state.code} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"secondary\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_confirm\" defaultMessage=\"Confirm\" description=\"Button [Confirm]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ValidationView);\n","import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport SideNavbar from '../widgets/side-navbar.jsx';\nimport TopicCommon from '../widgets/topic-common.jsx';\n\nimport AccountSettingsView from './account-settings-view.jsx';\nimport ContactsView from './contacts-view.jsx';\nimport CreateAccountView from './create-account-view.jsx';\nimport AccNotificationsView from './acc-notifications-view.jsx';\nimport AccSecurityView from './acc-security-view.jsx';\nimport AccSupportView from './acc-support-view.jsx';\nimport LoginView from './login-view.jsx';\nimport NewTopicView from './new-topic-view.jsx';\nimport PasswordResetView from './password-reset-view.jsx';\nimport SettingsView from './settings-view.jsx';\nimport ValidationView from './validation-view.jsx';\n\n// Panel titles for translation.\nconst messages = defineMessages({\n  login: {\n    id: 'sidepanel_title_login',\n    description: 'Sidepanel title for LoginView.',\n    defaultMessage: 'Sign In'\n  },\n  register: {\n    id: 'sidepanel_title_register',\n    description: 'Sidepanel title for CreateAccountView.',\n    defaultMessage: 'Create Account'\n  },\n  settings: {\n    id: 'sidepanel_title_settings',\n    description: 'Sidepanel title for SettingsView.',\n    defaultMessage: 'Settings'\n  },\n  edit: {\n    id: 'sidepanel_title_account_settings',\n    description: 'Sidepanel title for AccountSettingsView.',\n    defaultMessage: 'Account Settings'\n  },\n  general: {\n    id: 'panel_title_general',\n    description: 'Title for TopicCommon.',\n    defaultMessage: 'General'\n  },\n  security: {\n    id: 'panel_title_security',\n    description: 'Title for TopicSecirity and AccSecurity.',\n    defaultMessage: 'Security'\n  },\n  crop: {\n    id: 'panel_title_crop',\n    description: 'Title for AvatarCropView.',\n    defaultMessage: 'Drag to Adjust'\n  },\n  notif: {\n    id: 'sidepanel_title_acc_notifications',\n    description: 'Sidepanel title for AccNotificationsView.',\n    defaultMessage: 'Notifications'\n  },\n  support: {\n    id: 'sidepanel_title_acc_support',\n    description: 'Sidepanel title for AccSupportView.',\n    defaultMessage: 'Support'\n  },\n  newtpk: {\n    id: 'sidepanel_title_newtpk',\n    description: 'Sidepanel title for NewTopicView.',\n    defaultMessage: 'Start New Chat'\n  },\n  cred: {\n    id: 'sidepanel_title_cred',\n    description: 'Sidepanel title for ValidationView.',\n    defaultMessage: 'Confirm Credentials'\n  },\n  reset: {\n    id: 'sidepanel_title_reset',\n    description: 'Sidepanel title for PasswordResetView.',\n    defaultMessage: 'Reset Password'\n  },\n  archive: {\n    id: 'sidepanel_title_archive',\n    description: 'Sidepanel title for ContactsView-Archive.',\n    defaultMessage: 'Archived Chats'\n  },\n  blocked: {\n    id: 'sidepanel_title_blocked',\n    description: 'Sidepanel title for ContactsView-Blocked.',\n    defaultMessage: 'Blocked Chats'\n  }\n});\n\nclass SidepanelView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNewTopic = this.handleNewTopic.bind(this);\n  }\n\n  handleNewTopic() {\n    this.props.onNavigate('newtpk');\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const view = this.props.state || (this.props.myUserId ? 'contacts' : 'login');\n\n    let title, avatar, badges;\n    if (view == 'contacts') {\n      title = this.props.title;\n      avatar = this.props.avatar ? this.props.avatar : true;\n      badges = this.props.trustedBadges;\n    } else {\n      title = formatMessage(messages[view]);\n      avatar = false;\n      badges = null;\n    }\n\n    let onCancel;\n    if (['login', 'contacts'].indexOf(view) == -1) {\n      onCancel = this.props.onCancel;\n    }\n\n    return (\n      <div id=\"sidepanel\" className={this.props.hideSelf ? 'nodisplay' : null}>\n        <SideNavbar\n          state={view}\n          title={title}\n          avatar={avatar}\n          tinode={this.props.tinode}\n          trustedBadges={badges}\n          myUserId={this.props.myUserId}\n          onSignUp={this.props.onSignUp}\n          onSettings={this.props.onSettings}\n          onNewTopic={this.handleNewTopic}\n          onCancel={onCancel} />\n\n        <ErrorPanel\n          level={this.props.errorLevel}\n          text={this.props.errorText}\n          action={this.props.errorAction}\n          actionText={this.props.errorActionText}\n          onClearError={this.props.onError} />\n\n        <LoadSpinner show={this.props.loadSpinnerVisible} />\n\n        {view === 'login' ?\n          <LoginView\n            login={this.props.login}\n            disabled={this.props.loginDisabled}\n            persist={this.props.persist}\n            onLogin={this.props.onLoginRequest}\n            onPersistenceChange={this.props.onPersistenceChange} /> :\n\n          view === 'register' ?\n          <CreateAccountView\n            tinode={this.props.tinode}\n            onCreateAccount={this.props.onCreateAccount}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'settings' ?\n          <SettingsView\n            transport={this.props.transport}\n            serverAddress={this.props.serverAddress}\n            onCancel={this.props.onCancel}\n            onUpdate={this.props.onGlobalSettings} /> :\n\n          view === 'edit' ?\n          <AccountSettingsView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            trustedBadges={this.props.trustedBadges}\n            onNavigate={this.props.onNavigate} /> :\n\n          (view === 'general' || view === 'crop') ?\n          <TopicCommon\n            topic=\"me\"\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            onUpdateTopicDesc={this.props.onUpdateAccountDesc}\n            onUpdateTags={this.props.onUpdateAccountTags}\n            onCredAdd={this.props.onCredAdd}\n            onCredDelete={this.props.onCredDelete}\n            onCredConfirm={this.props.onCredConfirm}\n            onError={this.props.onError} /> :\n\n          view === 'notif' ?\n          <AccNotificationsView\n            messageSounds={this.props.messageSounds}\n            desktopAlerts={this.props.desktopAlerts}\n            desktopAlertsEnabled={this.props.desktopAlertsEnabled}\n            incognitoMode={this.props.incognitoMode}\n            onTogglePushNotifications={this.props.onTogglePushNotifications}\n            onToggleMessageSounds={this.props.onToggleMessageSounds}\n            onToggleIncognitoMode={this.props.onToggleIncognitoMode} /> :\n\n          view === 'security' ?\n          <AccSecurityView\n            tinode={this.props.tinode}\n            onUpdateAccountDesc={this.props.onUpdateAccountDesc}\n            onUpdatePassword={this.props.onUpdatePassword}\n            onLogout={this.props.onLogout}\n            onDeleteAccount={this.props.onDeleteAccount}\n            onShowAlert={this.props.onShowAlert}\n            onShowBlocked={this.props.onShowBlocked} /> :\n\n          view === 'support' ?\n          <AccSupportView\n            serverAddress={this.props.serverAddress}\n            serverVersion={this.props.serverVersion} /> :\n\n          (view === 'contacts' || view == 'archive' || view == 'blocked') ?\n          <ContactsView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            connected={this.props.connected}\n            topicSelected={this.props.topicSelected}\n            archive={view == 'archive'}\n            blocked={view == 'blocked'}\n            chatList={this.props.chatList}\n            showContextMenu={this.props.showContextMenu}\n            onTopicSelected={this.props.onTopicSelected}\n            onShowArchive={this.props.onShowArchive} /> :\n\n          view === 'newtpk' ?\n          <NewTopicView\n            tinode={this.props.tinode}\n            searchResults={this.props.searchResults}\n            onInitFind={this.props.onInitFind}\n            onSearchContacts={this.props.onSearchContacts}\n            onCreateTopic={this.props.onCreateTopic}\n            onError={this.props.onError} /> :\n\n          view === 'cred' ?\n          <ValidationView\n            credCode={this.props.credCode}\n            credMethod={this.props.credMethod}\n            onSubmit={this.props.onValidateCredentials}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'reset' ?\n          <PasswordResetView\n            onRequest={this.props.onPasswordResetRequest}\n            onReset={this.props.onResetPassword}\n            onCancel={this.props.onCancel} /> :\n          null}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SidepanelView);\n","import { KNOWN_HOSTS, DEFAULT_HOST } from '../config.js';\n\n// Detect server address from the URL\nexport function detectServerAddress() {\n  let host = DEFAULT_HOST;\n  if (typeof window.location == 'object') {\n    if (window.location.protocol == 'file:' || window.location.hostname == 'localhost') {\n      host = KNOWN_HOSTS.local;\n    } else if (window.location.hostname) {\n      host = window.location.hostname + (window.location.port ? ':' + window.location.port : '');\n    }\n  }\n  return host;\n}\n\n// Detect if the page is served over HTTPS.\nexport function isSecureConnection() {\n  if (typeof window.location == 'object') {\n    return window.location.protocol == 'https:';\n  }\n  return false;\n}\n\nexport function isLocalHost() {\n  if (typeof window.location == 'object') {\n    return window.location.hostname == 'localhost';\n  }\n  return false;\n}\n","// The top-level class to hold all functionality together.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport * as firebase from 'firebase/app';\nimport 'firebase/messaging';\n\nimport Tinode from 'tinode-sdk';\n\nimport Alert from '../widgets/alert.jsx';\nimport ContextMenu from '../widgets/context-menu.jsx';\nimport ForwardDialog from '../widgets/forward-dialog.jsx';\n\nimport InfoView from './info-view.jsx';\nimport MessagesView from './messages-view.jsx';\nimport SidepanelView from './sidepanel-view.jsx';\n\nimport { API_KEY, APP_NAME, DEFAULT_P2P_ACCESS_MODE, FORWARDED_PREVIEW_LENGTH, LOGGING_ENABLED,\n  MEDIA_BREAKPOINT, RECEIVED_DELAY } from '../config.js';\nimport { PACKAGE_VERSION } from '../version.js';\nimport { base64ReEncode, makeImageUrl } from '../lib/blob-helpers.js';\nimport { detectServerAddress, isLocalHost, isSecureConnection } from '../lib/host-name.js';\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { secondsToTime } from '../lib/strformat.js'\nimport { updateFavicon } from '../lib/utils.js';\n\n// Sound to play on message received.\nconst POP_SOUND = new Audio('audio/msg.mp3');\n\nconst messages = defineMessages({\n  reconnect_countdown: {\n    id: 'reconnect_countdown',\n    defaultMessage: 'Disconnected. Reconnecting in {seconds}…',\n    description: 'Message shown when an app update is available.'\n  },\n  reconnect_now: {\n    id: 'reconnect_now',\n    defaultMessage: 'Try now',\n    description: 'Prompt for reconnecting now'\n  },\n  push_init_failed: {\n    id: 'push_init_failed',\n    defaultMessage: 'Failed to initialize push notifications',\n    description: 'Error message when push notifications have failed to initialize.'\n  },\n  invalid_security_token: {\n    id: 'invalid_security_token',\n    defaultMessage: 'Invalid security token',\n    description: 'Error message when resetting password.'\n  },\n  no_connection: {\n    id: 'no_connection',\n    defaultMessage: 'No connection',\n    description: 'Warning that the user is offline.'\n  },\n  code_doesnot_match: {\n    id: 'code_doesnot_match',\n    defaultMessage: 'Code does not match',\n    description: 'Error message when the credential validation code is incorrect.'\n  },\n  menu_item_info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  }\n});\n\nclass TinodeWeb extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selfRef = React.createRef();\n\n    this.state = this.getBlankState();\n\n    this.handleResize = this.handleResize.bind(this);\n    this.handleHashRoute = this.handleHashRoute.bind(this);\n    this.handleOnline = this.handleOnline.bind(this);\n    this.checkForAppUpdate = this.checkForAppUpdate.bind(this);\n    this.handleVisibilityEvent = this.handleVisibilityEvent.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.handleLoginRequest = this.handleLoginRequest.bind(this);\n    this.handlePersistenceChange = this.handlePersistenceChange.bind(this);\n    this.handleConnected = this.handleConnected.bind(this);\n    this.handleAutoreconnectIteration = this.handleAutoreconnectIteration.bind(this);\n    this.doLogin = this.doLogin.bind(this);\n    this.handleCredentialsRequest = this.handleCredentialsRequest.bind(this);\n    this.handleLoginSuccessful = this.handleLoginSuccessful.bind(this);\n    this.handleDisconnect = this.handleDisconnect.bind(this);\n    this.tnMeMetaDesc = this.tnMeMetaDesc.bind(this);\n    this.tnMeContactUpdate = this.tnMeContactUpdate.bind(this);\n    this.tnMeSubsUpdated = this.tnMeSubsUpdated.bind(this);\n    this.resetContactList = this.resetContactList.bind(this);\n    this.tnData = this.tnData.bind(this);\n    this.tnInitFind = this.tnInitFind.bind(this);\n    this.tnFndSubsUpdated = this.tnFndSubsUpdated.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleTopicSelected = this.handleTopicSelected.bind(this);\n    this.handleHideMessagesView = this.handleHideMessagesView.bind(this);\n    this.handleSendMessage = this.handleSendMessage.bind(this);\n    this.handleNewChatInvitation = this.handleNewChatInvitation.bind(this);\n    this.handleNewAccount = this.handleNewAccount.bind(this);\n    this.handleNewAccountRequest = this.handleNewAccountRequest.bind(this);\n    this.handleUpdatePasswordRequest = this.handleUpdatePasswordRequest.bind(this);\n    this.handleUpdateAccountTagsRequest = this.handleUpdateAccountTagsRequest.bind(this);\n    this.handleToggleIncognitoMode = this.handleToggleIncognitoMode.bind(this);\n    this.handleSettings = this.handleSettings.bind(this);\n    this.handleGlobalSettings = this.handleGlobalSettings.bind(this);\n    this.handleShowArchive = this.handleShowArchive.bind(this);\n    this.handleShowBlocked = this.handleShowBlocked.bind(this);\n    this.handleToggleMessageSounds = this.handleToggleMessageSounds.bind(this);\n    this.handleCredAdd = this.handleCredAdd.bind(this);\n    this.handleCredDelete = this.handleCredDelete.bind(this);\n    this.handleCredConfirm = this.handleCredConfirm.bind(this);\n    this.initFCMessaging = this.initFCMessaging.bind(this);\n    this.togglePushToken = this.togglePushToken.bind(this);\n    this.requestPushToken = this.requestPushToken.bind(this);\n    this.handlePushMessage = this.handlePushMessage.bind(this);\n    this.handleSidepanelCancel = this.handleSidepanelCancel.bind(this);\n    this.handleStartTopicRequest = this.handleStartTopicRequest.bind(this);\n    this.handleNewTopicCreated = this.handleNewTopicCreated.bind(this);\n    this.handleTopicUpdateRequest = this.handleTopicUpdateRequest.bind(this);\n    this.handleUnarchive = this.handleUnarchive.bind(this);\n    this.handleChangePermissions = this.handleChangePermissions.bind(this);\n    this.handleTagsUpdateRequest = this.handleTagsUpdateRequest.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n    this.handleDeleteTopicRequest = this.handleDeleteTopicRequest.bind(this);\n    this.handleDeleteMessagesRequest = this.handleDeleteMessagesRequest.bind(this);\n    this.handleLeaveUnsubRequest = this.handleLeaveUnsubRequest.bind(this);\n    this.handleBlockTopicRequest = this.handleBlockTopicRequest.bind(this);\n    this.handleReportTopic = this.handleReportTopic.bind(this);\n    this.handleShowContextMenu = this.handleShowContextMenu.bind(this);\n    this.defaultTopicContextMenu = this.defaultTopicContextMenu.bind(this);\n    this.handleHideContextMenu = this.handleHideContextMenu.bind(this);\n    this.handleShowAlert = this.handleShowAlert.bind(this);\n    this.handleShowInfoView = this.handleShowInfoView.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleValidateCredentialsRequest = this.handleValidateCredentialsRequest.bind(this);\n    this.handlePasswordResetRequest = this.handlePasswordResetRequest.bind(this);\n    this.handleResetPassword = this.handleResetPassword.bind(this);\n    this.handleContextMenuAction = this.handleContextMenuAction.bind(this);\n\n    this.handleShowForwardDialog = this.handleShowForwardDialog.bind(this);\n    this.handleHideForwardDialog = this.handleHideForwardDialog.bind(this);\n\n    this.sendMessageToTopic = this.sendMessageToTopic.bind(this);\n  }\n\n  getBlankState() {\n    const settings = LocalStorageUtil.getObject('settings') || {};\n    const persist = !!LocalStorageUtil.getObject('keep-logged-in');\n\n    return {\n      connected: false,\n      // Connected and subscribed to 'me'\n      ready: false,\n      // Try to re-login on new connection.\n      autoLogin: false,\n      transport: settings.transport || null,\n      serverAddress: settings.serverAddress || detectServerAddress(),\n      serverVersion: \"no connection\",\n      // \"On\" is the default, so saving the \"off\" state.\n      messageSounds: !settings.messageSoundsOff,\n      incognitoMode: false,\n      desktopAlerts: persist && !!settings.desktopAlerts,\n      desktopAlertsEnabled: (isSecureConnection() || isLocalHost()) &&\n        (typeof firebase != 'undefined') && (typeof navigator != 'undefined') &&\n        (typeof FIREBASE_INIT != 'undefined'),\n      firebaseToken: persist ? LocalStorageUtil.getObject('firebase-token') : null,\n\n      applicationVisible: !document.hidden,\n\n      errorText: '',\n      errorLevel: null,\n      errorAction: undefined,\n      errorActionText: null,\n\n      sidePanelSelected: 'login',\n      sidePanelTitle: null,\n      sidePanelAvatar: null,\n      myTrustedBadges: [],\n      loadSpinnerVisible: false,\n\n      login: '',\n      password: '',\n      persist: persist,\n      myUserId: null,\n      liveConnection: navigator.onLine,\n      topicSelected: '',\n      topicSelectedOnline: false,\n      topicSelectedAcs: null,\n      newTopicParams: null,\n      loginDisabled: false,\n      displayMobile: (window.innerWidth <= MEDIA_BREAKPOINT),\n      infoPanel: undefined,\n      mobilePanel: 'sidepanel',\n\n      contextMenuVisible: false,\n      contextMenuBounds: null,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuItems: [],\n\n      forwardDialogVisible: false,\n      forwardMessage: null,\n\n      // Modal alert dialog.\n      alertVisible: false,\n      alertParams: {},\n\n      // Chats as shown in the ContactsView\n      chatList: [],\n      // Contacts returned by a search query.\n      searchResults: [],\n      // Merged results of a search query and p2p chats.\n      searchableContacts: [],\n      credMethod: undefined,\n      credCode: undefined,\n      // Topic to go to after login.\n      requestedTopic: undefined\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    window.addEventListener('online', (e) => { this.handleOnline(true); });\n    window.addEventListener('offline', (e) => { this.handleOnline(false); });\n    window.addEventListener('hashchange', this.handleHashRoute);\n\n    // Process background notifications from the service worker.\n    if (typeof BroadcastChannel == 'function') {\n      const serviceWorkerChannel = new BroadcastChannel('tinode-sw');\n      serviceWorkerChannel.addEventListener('message', this.handlePushMessage);\n    } else {\n      // Safari is broken by design.\n      console.warn(\"Your browser does not support BroadcastChannel. Some features will not be available\");\n    }\n\n    // Window/tab visible or invisible for pausing timers.\n    document.addEventListener('visibilitychange', this.handleVisibilityEvent);\n\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n\n    new Promise((resolve, reject) => {\n      this.tinode = TinodeWeb.tnSetup(this.state.serverAddress, this.state.transport,\n        this.props.intl.locale, this.state.persist, resolve);\n      this.tinode.onConnect = this.handleConnected;\n      this.tinode.onDisconnect = this.handleDisconnect;\n      this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n    }).then(() => {\n      // Initialize desktop alerts.\n      if (this.state.desktopAlertsEnabled) {\n        this.initFCMessaging().then(() => {\n          if (this.state.desktopAlerts) {\n            if (!this.state.firebaseToken) {\n              this.togglePushToken(true);\n            } else {\n              this.tinode.setDeviceToken(this.state.firebaseToken);\n            }\n          }\n        }).catch(() => {\n          // do nothing: handled earlier.\n          // catch needed to pervent unnecessary logging of error.\n        });\n      }\n\n      // Parse and save the hash navigation params.\n      const parsedNav = HashNavigation.parseUrlHash(window.location.hash);\n\n      // Read contacts from cache.\n      this.resetContactList();\n\n      const token = this.state.persist ? LocalStorageUtil.getObject('auth-token') : undefined;\n      if (token) {\n        this.setState({autoLogin: true});\n\n        // When reading from storage, date is returned as string.\n        token.expires = new Date(token.expires);\n        this.tinode.setAuthToken(token);\n        this.tinode.connect().catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n      }\n\n      // Maybe navigate to home screen.\n      if (!['cred', 'reset', 'register'].includes(parsedNav.path[0])) {\n        // Save possible topic name.\n        this.setState({requestedTopic: parsedNav.path[1]});\n        HashNavigation.navigateTo('');\n      }\n\n      this.readTimer = null;\n      this.readTimerCallback = null;\n\n      this.handleHashRoute();\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n    window.removeEventListener('hashchange', this.handleHashRoute);\n    document.removeEventListener('visibilitychange', this.handleVisibilityEvent);\n  }\n\n  // Setup transport (usually websocket) and server address. This will terminate connection with the server.\n  static tnSetup(serverAddress, transport, locale, persistentCache, onSetupCompleted) {\n    const tinode = new Tinode({appName: APP_NAME, host: serverAddress, apiKey: API_KEY, transport: transport,\n      secure: isSecureConnection(), persist: persistentCache}, onSetupCompleted);\n    tinode.setHumanLanguage(locale);\n    tinode.enableLogging(LOGGING_ENABLED, true);\n    return tinode;\n  }\n\n  // Notifiy Tinode that a push message was received from the server.\n  handlePushMessage(data) {\n    if (data.what == 'msg' && Tinode.isChannelTopicName(data.topic)) {\n      // The last argument is a fake user Id: otherwise the update is seen as one from the current user.\n      this.tinode.oobNotification(data.topic, data.seq, 'fake-uid');\n    }\n  }\n\n  initFCMessaging() {\n    const {formatMessage, locale} = this.props.intl;\n    const onError = (msg, err) => {\n      console.error(msg, err);\n      this.handleError(formatMessage(messages.push_init_failed), 'err');\n      this.setState({desktopAlertsEnabled: false});\n    }\n\n    try {\n      this.fbPush = firebase.initializeApp(FIREBASE_INIT, APP_NAME).messaging();\n      this.fbPush.usePublicVapidKey(FIREBASE_INIT.messagingVapidKey);\n\n      return navigator.serviceWorker.register('/service-worker.js').then((reg) => {\n        this.checkForAppUpdate(reg);\n        this.fbPush.useServiceWorker(reg);\n        reg.active.postMessage(JSON.stringify({locale: locale, version: PACKAGE_VERSION}));\n\n        // Google could not be bothered to mention that onTokenRefresh is never called.\n        this.fbPush.onTokenRefresh(() => {\n          this.requestPushToken();\n        });\n\n        // Handhe FCM pushes\n        // (a) for channels always,\n        // (b) pushes when the app is in foreground but has not focus.\n        this.fbPush.onMessage(payload => { this.handlePushMessage(payload.data); });\n\n        return reg;\n      }).catch((err) => {\n        // registration failed :(\n        onError(\"Failed to register service worker:\", err);\n        return Promise.reject(err);\n      });\n    } catch (err) {\n      onError(\"Failed to initialize push notifications\", err);\n      return Promise.reject(err);\n    }\n  }\n\n  handleResize() {\n    const mobile = document.documentElement.clientWidth <= MEDIA_BREAKPOINT;\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n    if (this.state.displayMobile != mobile) {\n      this.setState({displayMobile: mobile});\n    }\n  }\n\n  // Check if a newer version of TinodeWeb app is available at the server.\n  checkForAppUpdate(reg) {\n    reg.onupdatefound = () => {\n      const installingWorker = reg.installing;\n      installingWorker.onstatechange = () => {\n        if (installingWorker.state == 'installed' && navigator.serviceWorker.controller) {\n          const msg = <>\n            <FormattedMessage id=\"update_available\"\n              defaultMessage=\"Update available.\"\n              description=\"Message shown when an app update is available.\" /> <a href=\"\">\n              <FormattedMessage id=\"reload_update\"\n                defaultMessage=\"Reload\"\n                description=\"Call to action to reload application when update is available.\" />\n            </a>.</>;\n          this.handleError(msg, 'info');\n        }\n      }\n    }\n  }\n\n  // Handle for hashchange event: display appropriate panels.\n  handleHashRoute() {\n    const hash = HashNavigation.parseUrlHash(window.location.hash);\n    if (hash.path && hash.path.length > 0) {\n      // Left-side panel selector.\n      if (['register','settings','edit','notif','security','support','general','crop',\n          'cred','reset','newtpk','archive','blocked','contacts',''].includes(hash.path[0])) {\n        this.setState({sidePanelSelected: hash.path[0]});\n      } else {\n        console.warn(\"Unknown sidepanel view\", hash.path[0]);\n      }\n\n      // Topic for MessagesView selector.\n      let topicName = hash.path[1] || null;\n      if (topicName != this.state.topicSelected) {\n        if (!Tinode.topicType(topicName)) {\n          // Clear invalid topic name.\n          topicName = null;\n        }\n        const newState = {\n          topicSelected: topicName\n        };\n        const acs = this.tinode.getTopicAccessMode(topicName);\n        if (acs) {\n          newState.topicSelectedAcs = acs;\n        }\n        this.setState(newState);\n      }\n    } else {\n      // Empty hashpath\n      this.setState({sidePanelSelected: '', topicSelected: null});\n    }\n\n    // Save validation credentials, if available.\n    if (hash.params.method) {\n      this.setState({ credMethod: hash.params.method });\n    }\n    if (hash.params.code) {\n      this.setState({ credCode: hash.params.code });\n    }\n\n    // Additional parameters of panels.\n    this.setState({\n      infoPanel: hash.params.info,\n      newTopicTabSelected: hash.params.tab\n    });\n  }\n\n  handleOnline(online) {\n    if (online) {\n      this.handleError();\n      clearInterval(this.reconnectCountdown);\n      this.tinode.reconnect();\n    } else {\n      this.handleError(this.props.intl.formatMessage(messages.no_connection), 'warn');\n    }\n    this.setState({liveConnection: online});\n  }\n\n  handleVisibilityEvent() {\n    this.setState({applicationVisible: !document.hidden});\n  }\n\n  handleError(err, level, action, actionText) {\n    this.setState({errorText: err, errorLevel: level, errorAction: action, errorActionText: actionText});\n  }\n\n  // User clicked Login button in the side panel.\n  handleLoginRequest(login, password) {\n    this.setState({\n      loginDisabled: true,\n      login: login,\n      password: password,\n      loadSpinnerVisible: true,\n      autoLogin: true\n    });\n    this.handleError('', null);\n\n    if (this.tinode.isConnected()) {\n      this.doLogin(login, password, {meth: this.state.credMethod, resp: this.state.credCode});\n    } else {\n      this.tinode.connect().catch((err) => {\n        // Socket error\n        this.setState({loginDisabled: false, autoLogin: false, loadSpinnerVisible: false});\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // Enable or disable saving the password and IndexedDB.\n  handlePersistenceChange(persist) {\n    if (persist) {\n      this.tinode.initStorage().then(() => {\n        LocalStorageUtil.setObject('keep-logged-in', true);\n        this.setState({persist: true});\n      });\n    } else {\n      this.tinode.clearStorage().then(() => {\n        LocalStorageUtil.setObject('keep-logged-in', false);\n        this.setState({persist: false});\n      });\n    }\n  }\n\n  // Connection succeeded.\n  handleConnected() {\n    // Just to be sure.\n    clearInterval(this.reconnectCountdown);\n    this.handleError();\n\n    const params = this.tinode.getServerInfo();\n    this.setState({\n      serverVersion: params.ver + ' ' + (params.build ? params.build : 'none')\n    });\n\n    if (this.state.autoLogin) {\n      this.doLogin(this.state.login, this.state.password, {meth: this.state.credMethod, resp: this.state.credCode});\n    }\n  }\n\n  // Called for each auto-reconnect iteration.\n  handleAutoreconnectIteration(sec, prom) {\n    clearInterval(this.reconnectCountdown);\n\n    if (sec < 0) {\n      // Clear error\n      this.handleError();\n      return;\n    }\n\n    if (prom) {\n      // Reconnecting now\n      prom.then(() => {\n        // Reconnected: clear error\n        this.handleError();\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n      return;\n    }\n\n    const {formatMessage} = this.props.intl;\n    let count = sec / 1000;\n    count = count | count;\n    this.reconnectCountdown = setInterval(() => {\n      const timeLeft = (count > 99) ? secondsToTime(count) : count;\n      this.handleError(\n        formatMessage(messages.reconnect_countdown, {seconds: timeLeft}),\n        'warn',\n        () => {\n          clearInterval(this.reconnectCountdown);\n          this.tinode.reconnect();\n        },\n        formatMessage(messages.reconnect_now)\n      );\n      count -= 1;\n    }, 1000);\n  }\n\n  // Connection lost\n  handleDisconnect(err) {\n    this.setState({\n      connected: false,\n      ready: false,\n      topicSelectedOnline: false,\n      errorText: err && err.message ? err.message : \"Disconnected\",\n      errorLevel: err && err.message ? 'err' : 'warn',\n      loginDisabled: false,\n      contextMenuVisible: false,\n      forwardDialogVisible: false,\n      serverVersion: \"no connection\"\n    });\n  }\n\n  doLogin(login, password, cred) {\n    if (this.tinode.isAuthenticated()) {\n      // Already logged in. Go to default screen.\n      HashNavigation.navigateTo('');\n      return;\n    }\n    // Sanitize and package credentail.\n    cred = Tinode.credential(cred);\n    // Try to login with login/password. If they are not available, try token. If no token, ask for login/password.\n    let promise = null;\n    let token = this.tinode.getAuthToken();\n    if (login && password) {\n      token = null;\n      this.setState({password: null});\n      promise = this.tinode.loginBasic(login, password, cred);\n    } else if (token) {\n      promise = this.tinode.loginToken(token.token, cred);\n    }\n\n    if (promise) {\n      promise.then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text === 'validate credentials') {\n          this.setState({loadSpinnerVisible: false});\n          if (cred) {\n            this.handleError(this.props.intl.formatMessage(messages.code_doesnot_match), 'warn');\n          }\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful();\n        }\n      }).catch((err) => {\n        // Login failed, report error.\n        this.setState({\n          loginDisabled: false,\n          credMethod: undefined,\n          credCode: undefined,\n          loadSpinnerVisible: false,\n          autoLogin: false\n        });\n        this.handleError(err.message, 'err');\n        if (token) {\n          this.handleLogout();\n        }\n        HashNavigation.navigateTo('');\n      });\n    } else {\n      // No login credentials provided.\n      // Make sure we are on the login page.\n      HashNavigation.navigateTo('');\n      this.setState({loginDisabled: false});\n    }\n  }\n\n  handleCredentialsRequest(params) {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    parsed.path[0] = 'cred';\n    parsed.params['method'] = params.cred[0];\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n  }\n\n  handleLoginSuccessful() {\n    this.handleError();\n\n    // Refresh authentication token.\n    if (LocalStorageUtil.getObject('keep-logged-in')) {\n      LocalStorageUtil.setObject('auth-token', this.tinode.getAuthToken());\n    }\n\n    const goToTopic = this.state.requestedTopic;\n    // Logged in fine, subscribe to 'me' attaching callbacks from the contacts view.\n    const me = this.tinode.getMeTopic();\n    me.onMetaDesc = this.tnMeMetaDesc;\n    me.onContactUpdate = this.tnMeContactUpdate;\n    me.onSubsUpdated = this.tnMeSubsUpdated;\n    this.setState({\n      connected: true,\n      credMethod: undefined,\n      credCode: undefined,\n      myUserId: this.tinode.getCurrentUserID(),\n      autoLogin: true,\n      requestedTopic: undefined,\n    });\n    // Subscribe, fetch topic desc, the list of subscriptions. Messages are not fetched.\n    me.subscribe(\n      me.startMetaQuery().\n        withLaterSub().\n        withDesc().\n        withTags().\n        withCred().\n        build()\n      ).catch((err) => {\n        this.tinode.disconnect();\n        localStorage.removeItem('auth-token');\n        this.handleError(err.message, 'err');\n        HashNavigation.navigateTo('');\n      }).finally(() => {\n        this.setState({loadSpinnerVisible: false});\n      });\n    let urlHash = HashNavigation.setUrlSidePanel(window.location.hash, 'contacts');\n    if (goToTopic) {\n      urlHash = HashNavigation.setUrlTopic(urlHash, goToTopic);\n    }\n    HashNavigation.navigateTo(urlHash);\n  }\n\n  tnMeMetaDesc(desc) {\n    if (desc) {\n      if (desc.public) {\n        this.setState({\n          sidePanelTitle: desc.public.fn,\n          sidePanelAvatar: makeImageUrl(desc.public.photo)\n        });\n      }\n      if (desc.trusted) {\n        const badges = [];\n        for (const [key, val] of Object.entries(desc.trusted)) {\n          if (val) {\n            badges.push(key);\n          }\n        }\n        this.setState({\n          myTrustedBadges: badges,\n        });\n      }\n      if (desc.acs) {\n        this.setState({\n          incognitoMode: !desc.acs.isPresencer()\n        });\n      }\n    }\n  }\n\n  // Reactions to updates to the contact list.\n  tnMeContactUpdate(what, cont) {\n    if (what == 'on' || what == 'off') {\n      this.resetContactList();\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedOnline: (what == 'on')});\n      }\n    } else if (what == 'read') {\n      this.resetContactList();\n    } else if (what == 'msg') {\n      // Check if the topic is archived. If so, don't play a sound.\n      const topic = this.tinode.getTopic(cont.topic);\n      const archived = topic && topic.isArchived();\n\n      // New message received. Maybe the message is from the current user, then unread is 0.\n      if (cont.unread > 0 && this.state.messageSounds && !archived) {\n        // Skip update if the topic is currently open, otherwise the badge will annoyingly flash.\n        if (document.hidden || this.state.topicSelected != cont.topic) {\n          POP_SOUND.play();\n        }\n      }\n      // Reorder contact list to use possibly updated 'touched'.\n      this.resetContactList();\n    } else if (what == 'recv') {\n      // Explicitly ignoring \"recv\" -- it causes no visible updates to contact list.\n    } else if (what == 'gone' || what == 'unsub') {\n      // Topic deleted or user unsubscribed. Remove topic from view.\n      // If the currently selected topic is gone, clear the selection.\n      if (this.state.topicSelected == cont.topic) {\n        this.handleTopicSelected(null);\n      }\n      // Redraw without the deleted topic.\n      this.resetContactList();\n    } else if (what == 'acs') {\n      // Permissions changed. If it's for the currently selected topic,\n      // update the views.\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedAcs: cont.acs});\n      }\n    } else if (what == 'del') {\n      // TODO: messages deleted (hard or soft) -- update pill counter.\n    } else if (what == 'upd') {\n      // upd - handled by the SDK. Explicitly ignoring here.\n    } else {\n      // TODO(gene): handle other types of notifications:\n      // * ua -- user agent changes (maybe display a pictogram for mobile/desktop).\n      console.info(\"Unsupported (yet) presence update:\" + what + \" in: \" + cont.topic);\n    }\n  }\n\n  tnMeSubsUpdated(unused) {\n    this.resetContactList();\n  }\n\n  // Merge search results and contact list to create a single flat\n  // list of known contacts for GroupManager to use.\n  static prepareSearchableContacts(chatList, foundContacts) {\n    const merged = {};\n\n    // For chatList topics merge only p2p topics and convert them to the\n    // same format as foundContacts.\n    for (const c of chatList) {\n      if (Tinode.isP2PTopicName(c.topic)) {\n          merged[c.topic] = {\n            user: c.topic,\n            updated: c.updated,\n            public: c.public,\n            private: c.private,\n            acs: c.acs\n          };\n      }\n    }\n\n    // Add all foundCountacts if they have not been added already.\n    for (const c of foundContacts) {\n      if (!merged[c.user]) {\n        merged[c.user] = c;\n      }\n    }\n\n    return Object.values(merged);\n  }\n\n  resetContactList() {\n    const newState = {\n      chatList: []\n    };\n\n    if (!this.state.ready) {\n      newState.ready = true;\n    }\n\n    this.tinode.getMeTopic().contacts((c) => {\n      if (!c.topic && !c.user) {\n        // Contacts expect c.topic to be set.\n        c.topic = c.name;\n      }\n\n      newState.chatList.push(c);\n      if (this.state.topicSelected == c.topic) {\n        newState.topicSelectedOnline = c.online;\n        newState.topicSelectedAcs = c.acs;\n      }\n    });\n\n    const past = new Date(0);\n    newState.chatList.sort((a, b) => {\n      return (a.touched || past).getTime() - (b.touched || past).getTime();\n    });\n\n    // Merge search results and chat list.\n    newState.searchableContacts = TinodeWeb.prepareSearchableContacts(newState.chatList, this.state.searchResults);\n    this.setState(newState);\n  }\n\n  // Sending \"received\" notifications\n  tnData(data) {\n    const topic = this.tinode.getTopic(data.topic);\n    if (topic.msgStatus(data, true) >= Tinode.MESSAGE_STATUS_SENT && data.from != this.state.myUserId) {\n      clearTimeout(this.receivedTimer);\n      this.receivedTimer = setTimeout(() => {\n        this.receivedTimer = undefined;\n        topic.noteRecv(data.seq);\n      }, RECEIVED_DELAY);\n    }\n  }\n\n  /* Fnd topic: find contacts by tokens */\n  tnInitFind() {\n    const fnd = this.tinode.getFndTopic();\n    fnd.onSubsUpdated = this.tnFndSubsUpdated;\n    if (fnd.isSubscribed()) {\n      this.tnFndSubsUpdated();\n    } else {\n      fnd.subscribe(fnd.startMetaQuery().withSub().build()).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  tnFndSubsUpdated() {\n    const foundContacts = [];\n    // Don't attempt to create P2P topics which already exist. Server will reject the duplicates.\n    this.tinode.getFndTopic().contacts((s) => {\n      foundContacts.push(s);\n    });\n    this.setState({\n      searchResults: foundContacts,\n      searchableContacts: TinodeWeb.prepareSearchableContacts(this.state.chatList, foundContacts)\n    });\n  }\n\n  /** Called when the user enters a contact into the contact search field in the NewAccount panel\n    @param query {Array} is an array of contacts to search for\n   */\n  handleSearchContacts(query) {\n    const fnd = this.tinode.getFndTopic();\n    fnd.setMeta({desc: {public: query}}).then((ctrl) => {\n      return fnd.getMeta(fnd.startMetaQuery().withSub().build());\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  // User clicked on a contact in the side panel or deleted a contact.\n  handleTopicSelected(topicName) {\n    // Clear newTopicParams after use.\n    if (this.state.newTopicParams && this.state.newTopicParams._topicName != topicName) {\n      this.setState({\n        newTopicParams: null\n      });\n    }\n\n    if (topicName) {\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'topic-view',\n        infoPanel: undefined\n      });\n      // Different contact selected.\n      if (this.state.topicSelected != topicName) {\n        this.setState({\n          topicSelectedOnline: this.tinode.isTopicOnline(topicName),\n          topicSelectedAcs: this.tinode.getTopicAccessMode(topicName),\n          forwardMessage: null\n        });\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', topicName));\n      }\n    } else {\n      // Currently selected contact deleted\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'sidepanel',\n        topicSelectedOnline: false,\n        topicSelectedAcs: null,\n        infoPanel: undefined,\n        forwardMessage: null\n      });\n\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic('', null));\n    }\n  }\n\n  // In mobile view user requested to show sidepanel\n  handleHideMessagesView() {\n    this.setState({\n      mobilePanel: 'sidepanel'\n    });\n    HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, null));\n  }\n\n  // User is sending a message, either plain text or a drafty object, possibly\n  // with attachments.\n  //  - msg - Drafty message with content\n  //  - promise - Promise to be resolved when the upload is completed\n  //  - uploader - for tracking progress\n  //  - head - head dictionary to be attached to the message\n  handleSendMessage(msg, promise, uploader, head) {\n    const topic = this.tinode.getTopic(this.state.topicSelected);\n    this.sendMessageToTopic(topic, msg, promise, uploader, head);\n  }\n\n  sendMessageToTopic(topic, msg, promise, uploader, head) {\n    msg = topic.createMessage(msg, false);\n    // The uploader is used to show progress.\n    msg._uploader = uploader;\n\n    if (head) {\n      msg.head = Object.assign(msg.head || {}, head);\n    }\n\n    if (!topic.isSubscribed()) {\n      // Topic is not subscribed yet. Subscribe.\n      if (!promise) {\n        promise = Promise.resolve();\n      }\n      promise = promise\n        .then(() => topic.subscribe())\n        .then(() => {\n          // If there are unsent messages, try sending them now.\n          topic.queuedMessages((pub) => {\n            if (!pub._sending && topic.isSubscribed()) {\n              this.sendMessage(pub);\n            }\n          });\n        });\n    }\n\n    if (promise) {\n      promise = promise.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n\n    topic.publishDraft(msg, promise)\n      .then((ctrl) => {\n        if (topic.isArchived()) {\n          return topic.archive(false);\n        }\n      })\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleNewChatInvitation(topicName, action) {\n    const topic = this.tinode.getTopic(topicName);\n    let response = null;\n    switch (action) {\n      case 'accept':\n        // Accept given permissions.\n        const mode = topic.getAccessMode().getGiven();\n        response = topic.setMeta({sub: {mode: mode}});\n        if (topic.isP2PType()) {\n          // For P2P topics change 'given' permission of the peer too.\n          // In p2p topics the other user has the same name as the topic.\n          response = response.then((ctrl) => {\n            topic.setMeta({sub: {user: topicName, mode: mode}});\n          });\n        }\n        break;\n      case 'delete':\n        // Ignore invitation by deleting it.\n        response = topic.delTopic(true);\n        break;\n      case 'block':\n        // Ban the topic making futher invites impossible.\n        // Just self-ban.\n        const am = topic.getAccessMode().updateWant('-JP').getWant();\n        response = topic.setMeta({sub: {mode: am}}).then((ctrl) => {\n          return this.handleTopicSelected(null);\n        });\n        break;\n      default:\n        console.warn(\"Unknown invitation action\", '\"' + action + '\"\"');\n    }\n\n    if (response != null) {\n      response.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // User chose a Sign Up menu item.\n  handleNewAccount() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, 'register'));\n  }\n\n  // Actual registration of a new account.\n  handleNewAccountRequest(login_, password_, public_, cred_, tags_) {\n    // Clear old error, if any.\n    this.handleError();\n\n    this.tinode.connect(this.state.serverAddress)\n      .then(() => {\n        return this.tinode.createAccountBasic(login_, password_,\n          {public: public_, tags: tags_, cred: Tinode.credential(cred_)});\n      }).then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text == 'validate credentials') {\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful(this);\n        }\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleToggleIncognitoMode(on) {\n    // Make state undefined.\n    this.setState({incognitoMode: null});\n\n    const me = this.tinode.getMeTopic();\n    const am = me.getAccessMode().updateWant(on ? '-P' : '+P').getWant();\n    me.setMeta({sub: {mode: am}}).catch((err) => {\n      // Request failed, keep existing state.\n      this.setState({incognitoMode: !on});\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleUpdateAccountTagsRequest(tags) {\n    this.tinode.getMeTopic().setMeta({tags: tags})\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  // User chose Settings menu item.\n  handleSettings() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'edit' : 'settings'));\n  }\n\n  // User updated global parameters.\n  handleGlobalSettings(settings) {\n    const serverAddress = settings.serverAddress || this.state.serverAddress;\n    const transport = settings.transport || this.state.transport;\n    if (this.tinode) {\n      this.tinode.clearStorage();\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.tinode = TinodeWeb.tnSetup(serverAddress, transport, this.props.intl.locale,\n      LocalStorageUtil.getObject('keep-logged-in'));\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n\n    this.setState({\n      serverAddress: serverAddress,\n      transport: transport\n    });\n    LocalStorageUtil.setObject('settings', {\n      serverAddress: serverAddress,\n      transport: transport\n    });\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, ''));\n  }\n\n  // User chose 'Archived chats'.\n  handleShowArchive() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'archive' : ''));\n  }\n\n  // User viewes 'Blocked chats'.\n  handleShowBlocked() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'blocked' : ''));\n  }\n\n  togglePushToken(enabled) {\n    if (enabled) {\n      this.setState({desktopAlerts: null});\n      if (!this.state.firebaseToken) {\n        const fcm = this.fbPush ?\n          Promise.resolve() :\n          this.initFCMessaging();\n        fcm.then(() => {\n          return this.fbPush.requestPermission();\n        }).then(() => {\n          this.requestPushToken();\n        }).catch((err) => {\n          console.error(\"Failed to get notification permission.\", err);\n          this.handleError(err.message, 'err');\n          this.setState({desktopAlerts: false, firebaseToken: null});\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        });\n      } else {\n        this.setState({desktopAlerts: true});\n        if (LocalStorageUtil.getObject('keep-logged-in')) {\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n        }\n      }\n    } else if (this.state.firebaseToken && this.fbPush) {\n      this.fbPush.deleteToken(this.state.firebaseToken).catch((err) => {\n        console.error(\"Unable to delete token.\", err);\n      }).finally(() => {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        localStorage.removeItem('firebase-token');\n        this.setState({desktopAlerts: false, firebaseToken: null});\n        // Inform the server that the token was deleted.\n        this.tinode.setDeviceToken(null);\n      });\n    } else {\n      this.setState({desktopAlerts: false, firebaseToken: null});\n      LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n    }\n  }\n\n  requestPushToken() {\n    this.fbPush.getToken().then((refreshedToken) => {\n      const persist = LocalStorageUtil.getObject('keep-logged-in');\n      if (refreshedToken != this.state.firebaseToken) {\n        this.tinode.setDeviceToken(refreshedToken);\n        if (persist) {\n          LocalStorageUtil.setObject('firebase-token', refreshedToken);\n        }\n      }\n      this.setState({firebaseToken: refreshedToken, desktopAlerts: true});\n      if (persist) {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n      }\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n      console.error(\"Failed to retrieve firebase token\", err);\n    });\n  }\n\n  handleToggleMessageSounds(enabled) {\n    this.setState({messageSounds: enabled});\n    LocalStorageUtil.updateObject('settings', {\n      messageSoundsOff: !enabled\n    });\n  }\n\n  handleCredAdd(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.setMeta({cred: {meth: method, val: value}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredDelete(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.delCredential(method, value).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredConfirm(method, response) {\n    this.handleCredentialsRequest({cred: [method]});\n  }\n\n  // User clicked Cancel button in Setting or Sign Up panel.\n  handleSidepanelCancel() {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    let path = '';\n    if (['security','support','general','notif'].includes(parsed.path[0])) {\n      path = 'edit';\n    } else if ('crop' == parsed.path[0]) {\n      path = 'general';\n    } else if ('blocked' == parsed.path[0]) {\n      path = 'security';\n    } else if (this.state.myUserId) {\n      path = 'contacts';\n    }\n    parsed.path[0] = path;\n    if (parsed.params) {\n      delete parsed.params.code;\n      delete parsed.params.method;\n      delete parsed.params.tab;\n      delete parsed.params.scheme;\n      delete parsed.params.token;\n    }\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n    this.setState({errorText: '', errorLevel: null});\n  }\n\n  // Sidepanel navigator. No need to bind to 'this'.\n  basicNavigator(hash) {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, hash));\n  }\n\n  // Topic info navigator. No need to bind to 'this'.\n  infoNavigator(hash) {\n    HashNavigation.navigateTo(HashNavigation.setUrlInfoPanel(window.location.hash, hash));\n  }\n\n  // Request to start a topic, new or selected from search results, or \"by ID\".\n  handleStartTopicRequest(topicName, newTopicParams, isChannel) {\n    // Check if topic is indeed new. If not, launch it.\n    if (topicName && this.tinode.isTopicCached(topicName)) {\n      this.handleTopicSelected(topicName);\n      return;\n    }\n\n    const params = {};\n    if (Tinode.isP2PTopicName(topicName)) {\n      // Because we are initialing the subscription, set 'want' to all permissions.\n      params.sub = {mode: DEFAULT_P2P_ACCESS_MODE};\n      // Give the other user all permissions too.\n      params.desc = {defacs: {auth: DEFAULT_P2P_ACCESS_MODE}};\n    } else {\n      topicName = topicName || this.tinode.newGroupTopicName(isChannel);\n      if (newTopicParams) {\n        params.desc = {public: newTopicParams.public, private: {comment: newTopicParams.private}};\n        params.tags = newTopicParams.tags;\n      }\n    }\n    params._topicName = topicName;\n    this.setState({newTopicParams: params}, () => {this.handleTopicSelected(topicName)});\n  }\n\n  // New topic was created, here is the new topic name.\n  handleNewTopicCreated(oldName, newName) {\n    if (this.state.topicSelected == oldName && oldName != newName) {\n      // If the current URl contains the old topic name, replace it with new.\n      // Update the name of the selected topic first so the navigator doen't clear\n      // the state.\n      this.setState({topicSelected: newName}, () => {\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', newName));\n      });\n    }\n  }\n\n  handleTopicUpdateRequest(topicName, pub, priv, defacs) {\n    this.handleError();\n\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const params = {};\n      let attachments;\n      if (pub) {\n        if (pub.photo) {\n          if (pub.photo.ref && pub.photo.ref != Tinode.DEL_CHAR) {\n            attachments = [pub.photo.ref];\n          } else if (!pub.photo.data || pub.photo.data == Tinode.DEL_CHAR) {\n            pub.photo = Tinode.DEL_CHAR;\n          }\n        }\n        params.public = pub;\n      }\n\n      if (typeof priv == 'string') {\n        params.private = (priv === Tinode.DEL_CHAR) ?\n          Tinode.DEL_CHAR : {comment: priv};\n      }\n      if (defacs) {\n        params.defacs = defacs;\n      }\n      topic.setMeta({desc: params, attachments: attachments}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleUnarchive(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      topic.archive(false);\n    }\n  }\n\n  handleUpdatePasswordRequest(password)  {\n    this.handleError();\n\n    if (password) {\n      this.tinode.updateAccountBasic(null, this.tinode.getCurrentLogin(), password).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleChangePermissions(topicName, mode, uid) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const am = topic.getAccessMode();\n      if (uid) {\n        am.updateGiven(mode);\n        mode = am.getGiven();\n      } else {\n        am.updateWant(mode);\n        mode = am.getWant();\n      }\n      topic.setMeta({sub: {user: uid, mode: mode}}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleTagsUpdateRequest(topicName, tags) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      topic.setMeta({tags: tags}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleLogout() {\n    updateFavicon(0);\n\n    // Remove stored data.\n    localStorage.removeItem('auth-token');\n    localStorage.removeItem('firebase-token');\n    localStorage.removeItem('settings');\n    if (this.state.firebaseToken) {\n      this.fbPush.deleteToken(this.state.firebaseToken)\n    }\n\n    clearInterval(this.reconnectCountdown);\n\n    if (this.tinode) {\n      this.tinode.clearStorage();\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.setState(this.getBlankState());\n\n    this.tinode = TinodeWeb.tnSetup(this.state.serverAddress,\n      this.state.transport, this.props.intl.locale, LocalStorageUtil.getObject('keep-logged-in'));\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n    HashNavigation.navigateTo('');\n  }\n\n  handleDeleteAccount() {\n    this.tinode.delCurrentUser(true).then((ctrl) => {\n      this.handleLogout();\n    });\n  }\n\n  handleDeleteTopicRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Request to hard-delete topic.\n    topic.delTopic(true).then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleDeleteMessagesRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Request hard-delete all messages.\n    topic.delMessagesAll(true).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleLeaveUnsubRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.leave(true).then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleBlockTopicRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.updateMode(null, '-JP').then(_ => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleReportTopic(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Publish spam report.\n    this.tinode.report('report', topicName);\n\n    // Remove J and P permissions.\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleShowContextMenu(params, menuItems) {\n    this.setState({\n      contextMenuVisible: true,\n      contextMenuClickAt: {x: params.x, y: params.y},\n      contextMenuParams: params,\n      contextMenuItems: menuItems || this.defaultTopicContextMenu(params.topicName),\n      contextMenuBounds: this.selfRef.current.getBoundingClientRect()\n    });\n  }\n\n  //\n  handleShowForwardDialog(params) {\n    if (this.state.sidePanelSelected == 'newtpk') {\n      // If the Find panel is active, close it.\n      this.handleSidepanelCancel();\n    }\n    const header = '➦ ' + params.userName;\n    const content = typeof params.content == 'string' ?\n            Tinode.Drafty.init(params.content) : Tinode.Drafty.forwardedContent(params.content);\n    const preview = Tinode.Drafty.preview(content, FORWARDED_PREVIEW_LENGTH, true);\n    const msg = Tinode.Drafty.append(\n        Tinode.Drafty.appendLineBreak(\n            Tinode.Drafty.mention(header, params.userFrom)),\n        content);\n\n    const msgPreview = Tinode.Drafty.quote(header, params.userFrom, preview);\n    const head = {\n      forwarded: params.topicName + ':' + params.seq\n    };\n    this.setState({\n      forwardDialogVisible: true,\n      forwardMessage: { head: head, msg: msg, preview: msgPreview }\n    });\n  }\n\n  defaultTopicContextMenu(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n\n    let muted = false, blocked = false, self_blocked = false, subscribed = false, deleter = false, archived = false;\n    if (topic) {\n      subscribed = topic.isSubscribed();\n      archived = topic.isArchived();\n\n      const acs = topic.getAccessMode();\n      if (acs) {\n        muted = acs.isMuted();\n        blocked = !acs.isJoiner();\n        self_blocked = !acs.isJoiner('want');\n        deleter = acs.isDeleter();\n      }\n    }\n\n    return [\n      subscribed ? {\n        title: this.props.intl.formatMessage(messages.menu_item_info),\n        handler: this.handleShowInfoView\n      } : null,\n      subscribed ? 'messages_clear' : null,\n      subscribed && deleter ? 'messages_clear_hard' : null,\n      muted ? (blocked ? null : 'topic_unmute') : 'topic_mute',\n      self_blocked ? 'topic_unblock' : 'topic_block',\n      archived ? 'topic_restore' : 'topic_archive',\n      'topic_delete'\n    ];\n  }\n\n  handleHideContextMenu() {\n    this.setState({\n      contextMenuVisible: false,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuBounds: null\n    });\n  }\n\n  handleHideForwardDialog(keepForwardedMessage) {\n    this.setState({\n      forwardDialogVisible: false,\n      forwardMessage: keepForwardedMessage ? this.state.forwardMessage : null\n    });\n  }\n\n  handleContextMenuAction(action, promise, params) {\n    if (action == 'topic_archive') {\n      if (promise && params.topicName && params.topicName == this.state.topicSelected) {\n        promise.then(() => {\n          this.handleTopicSelected(null);\n        });\n      }\n    } else if (action == 'menu_item_forward') {\n      this.handleShowForwardDialog(params);\n    }\n  }\n\n  handleShowAlert(title, content, onConfirm, confirmText, onReject, rejectText) {\n    this.setState({\n      alertVisible: true,\n      alertParams: {\n        title: title,\n        content: content,\n        onConfirm: onConfirm,\n        confirm: confirmText,\n        onReject: onReject,\n        reject: rejectText\n      }\n    });\n  }\n\n  handleShowInfoView() {\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'info', 'info'));\n    this.setState({infoPanel: 'info'});\n  }\n\n  handleMemberUpdateRequest(topicName, added, removed) {\n    if (!topicName) {\n      return;\n    }\n\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    if (added && added.length > 0) {\n      added.map((uid) => {\n        topic.invite(uid, null).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n\n    if (removed && removed.length > 0) {\n      removed.map((uid) => {\n        topic.delSubscription(uid).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n  }\n\n  handleValidateCredentialsRequest(cred, code) {\n    if (this.tinode.isAuthenticated()) {\n      const me = this.tinode.getMeTopic();\n      me.setMeta({cred: {meth: cred, resp: code}})\n        .then(() => {\n          HashNavigation.navigateTo('');\n        })\n        .catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n    } else {\n      this.setState({credMethod: cred, credCode: code});\n      this.doLogin(null, null, {meth: cred, resp: code});\n    }\n  }\n\n  handlePasswordResetRequest(method, value) {\n    // If already connected, connnect() will return a resolved promise.\n    return this.tinode.connect()\n      .then(() => {\n        return this.tinode.requestResetAuthSecret('basic', method, value);\n      })\n      .catch((err) => {\n        // Socket error\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleResetPassword(scheme, newPassword, token) {\n    token = base64ReEncode(token);\n    if (!token) {\n      this.handleError(this.props.intl.formatMessage(messages.invalid_security_token), 'err');\n    } else {\n      this.tinode.connect()\n        .then(() => {\n          return this.tinode.updateAccountBasic(null, null, newPassword, {token: token});\n        })\n        .then(() => {\n          HashNavigation.navigateTo('');\n        })\n        .catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"app-container\" ref={this.selfRef}>\n        {this.state.contextMenuVisible ?\n          <ContextMenu\n            tinode={this.tinode}\n            bounds={this.state.contextMenuBounds}\n            clickAt={this.state.contextMenuClickAt}\n            params={this.state.contextMenuParams}\n            items={this.state.contextMenuItems}\n            hide={this.handleHideContextMenu}\n            onShowAlert={this.handleShowAlert}\n            onAction={this.handleContextMenuAction}\n            onTopicRemoved={(topicName) => {\n              if (topicName == this.state.topicSelected) {\n                this.handleTopicSelected(null);\n              }\n            }}\n            onError={this.handleError} />\n          :\n          null\n        }\n        {this.state.forwardDialogVisible ?\n          <ForwardDialog\n            tinode={this.tinode}\n            contacts={this.state.chatList}\n            topicSelected={this.state.topicSelected}\n            myUserId={this.state.myUserId}\n\n            hide={this.handleHideForwardDialog}\n            onInitFind={this.tnInitFind}\n            searchResults={this.state.searchResults}\n            onSearchContacts={this.handleSearchContacts}\n            onTopicSelected={this.handleStartTopicRequest}\n          />\n          :\n          null\n        }\n        <Alert\n          visible={this.state.alertVisible}\n          title={this.state.alertParams.title}\n          content={this.state.alertParams.content}\n          onReject={this.state.alertParams.onReject ? (() => { this.setState({alertVisible: false}); }) : null}\n          reject={this.state.alertParams.reject}\n          onConfirm={() => { this.setState({alertVisible: false}); this.state.alertParams.onConfirm(); }}\n          confirm={this.state.alertParams.confirm}\n          />\n        <SidepanelView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          displayMobile={this.state.displayMobile}\n          hideSelf={this.state.displayMobile && this.state.mobilePanel !== 'sidepanel'}\n          state={this.state.sidePanelSelected}\n          title={this.state.sidePanelTitle}\n          avatar={this.state.sidePanelAvatar}\n          trustedBadges={this.state.myTrustedBadges}\n          login={this.state.login}\n          persist={this.state.persist}\n          myUserId={this.state.myUserId}\n          loginDisabled={this.state.loginDisabled}\n          loadSpinnerVisible={this.state.loadSpinnerVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          topicSelected={this.state.topicSelected}\n          chatList={this.state.chatList}\n          credMethod={this.state.credMethod}\n          credCode={this.state.credCode}\n\n          transport={this.state.transport}\n          messageSounds={this.state.messageSounds}\n          desktopAlerts={this.state.desktopAlerts}\n          desktopAlertsEnabled={this.state.desktopAlertsEnabled}\n          incognitoMode={this.state.incognitoMode}\n          serverAddress={this.state.serverAddress}\n          serverVersion={this.state.serverVersion}\n\n          onGlobalSettings={this.handleGlobalSettings}\n          onSignUp={this.handleNewAccount}\n          onSettings={this.handleSettings}\n          onNavigate={this.basicNavigator}\n          onLoginRequest={this.handleLoginRequest}\n          onPersistenceChange={this.handlePersistenceChange}\n          onCreateAccount={this.handleNewAccountRequest}\n          onUpdateAccountDesc={this.handleTopicUpdateRequest}\n          onUpdatePassword={this.handleUpdatePasswordRequest}\n          onUpdateAccountTags={this.handleUpdateAccountTagsRequest}\n          onTogglePushNotifications={this.togglePushToken}\n          onToggleMessageSounds={this.handleToggleMessageSounds}\n          onToggleIncognitoMode={this.handleToggleIncognitoMode}\n          onCredAdd={this.handleCredAdd}\n          onCredDelete={this.handleCredDelete}\n          onCredConfirm={this.handleCredConfirm}\n          onTopicSelected={this.handleTopicSelected}\n          onCreateTopic={this.handleStartTopicRequest}\n          onLogout={this.handleLogout}\n          onDeleteAccount={this.handleDeleteAccount}\n          onShowAlert={this.handleShowAlert}\n          onCancel={this.handleSidepanelCancel}\n          onError={this.handleError}\n          onValidateCredentials={this.handleValidateCredentialsRequest}\n          onPasswordResetRequest={this.handlePasswordResetRequest}\n          onResetPassword={this.handleResetPassword}\n          onShowArchive={this.handleShowArchive}\n          onShowBlocked={this.handleShowBlocked}\n\n          onInitFind={this.tnInitFind}\n          searchResults={this.state.searchResults}\n          onSearchContacts={this.handleSearchContacts}\n\n          showContextMenu={this.handleShowContextMenu} />\n\n        <MessagesView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          ready={this.state.ready}\n          online={this.state.topicSelectedOnline}\n          acs={this.state.topicSelectedAcs}\n          displayMobile={this.state.displayMobile}\n          viewportWidth={this.state.viewportWidth}\n          viewportHeight={this.state.viewportHeight}\n          hideSelf={this.state.displayMobile &&\n            (this.state.mobilePanel !== 'topic-view' || this.state.infoPanel)}\n          topic={this.state.topicSelected}\n          myUserId={this.state.myUserId}\n          // User public.fn.\n          myUserName={this.state.sidePanelTitle}\n          serverVersion={this.state.serverVersion}\n          serverAddress={this.state.serverAddress}\n          applicationVisible={this.state.applicationVisible}\n\n          forwardMessage={this.state.forwardMessage}\n          onCancelForwardMessage={this.handleHideForwardDialog}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          newTopicParams={this.state.newTopicParams}\n\n          onHideMessagesView={this.handleHideMessagesView}\n          onData={this.tnData}\n          onError={this.handleError}\n          onNewTopicCreated={this.handleNewTopicCreated}\n          showContextMenu={this.handleShowContextMenu}\n          onChangePermissions={this.handleChangePermissions}\n          onNewChat={this.handleNewChatInvitation}\n          sendMessage={this.handleSendMessage} />\n\n        {this.state.infoPanel ?\n          <InfoView\n            tinode={this.tinode}\n            connected={this.state.connected}\n            displayMobile={this.state.displayMobile}\n            topic={this.state.topicSelected}\n            searchableContacts={this.state.searchableContacts}\n            myUserId={this.state.myUserId}\n            panel={this.state.infoPanel}\n\n            errorText={this.state.errorText}\n            errorLevel={this.state.errorLevel}\n            errorAction={this.state.errorAction}\n            errorActionText={this.state.errorActionText}\n\n            onNavigate={this.infoNavigator}\n            onTopicDescUpdateRequest={this.handleTopicUpdateRequest}\n            onShowAlert={this.handleShowAlert}\n            onChangePermissions={this.handleChangePermissions}\n            onMemberUpdateRequest={this.handleMemberUpdateRequest}\n            onDeleteTopic={this.handleDeleteTopicRequest}\n            onDeleteMessages={this.handleDeleteMessagesRequest}\n            onLeaveTopic={this.handleLeaveUnsubRequest}\n            onBlockTopic={this.handleBlockTopicRequest}\n            onReportTopic={this.handleReportTopic}\n            onAddMember={this.handleManageGroupMembers}\n            onTopicTagsUpdateRequest={this.handleTagsUpdateRequest}\n            onTopicUnArchive={this.handleUnarchive}\n            onInitFind={this.tnInitFind}\n            onError={this.handleError}\n\n            showContextMenu={this.handleShowContextMenu}\n            />\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(TinodeWeb);\n","// Put all packages together.\n// Used to generate umd/index.prod.js\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { IntlProvider } from 'react-intl';\n\nimport allMessages from './messages.json';\nimport TinodeWeb from './views/tinode-web.jsx';\nimport HashNavigation from './lib/navigation.js';\n\n// Detect human language to use in the UI:\n//  Check parameters from URL hash #?hl=ru, then browser, then use 'en' as a fallback.\nconst { params } = HashNavigation.parseUrlHash(window.location.hash);\nconst language = (params && params.hl) ||\n  (navigator.languages && navigator.languages[0]) ||\n  navigator.language ||\n  navigator.userLanguage ||\n  'en';\n\n// Get the base language 'en' from a more specific 'en_GB' or 'en-US' as a partial fallback.\nconst baseLanguage = language.toLowerCase().split(/[-_]/)[0];\n\n// Try the full locale first, then the locale without the region code, fallback to 'en'.\nconst htmlLang = allMessages[language] ? language : allMessages[baseLanguage] ? baseLanguage : 'en';\nconst messages = allMessages[htmlLang];\n\n// Set lang attribute of the HTML element: <html lang=\"XX\">\ndocument.getElementsByTagName('html')[0].setAttribute('lang', htmlLang);\n\nReactDOM.render(\n  <React.StrictMode>\n    <IntlProvider locale={language} messages={messages} textComponent={React.Fragment}>\n      <TinodeWeb />\n    </IntlProvider>\n  </React.StrictMode>,\n  document.getElementById('mountPoint')\n);\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","React","ReactDOM","ReactIntl","firebase","messaging","Tinode","Alert","render","this","props","visible","className","title","content","onReject","onClick","reject","FormattedMessage","id","defaultMessage","onConfirm","confirm","PACKAGE_VERSION","APP_NAME","KNOWN_HOSTS","hosted","local","DEFAULT_HOST","KEYPRESS_DELAY","DEFAULT_P2P_ACCESS_MODE","REM_SIZE","AVATAR_SIZE","MAX_INBAND_ATTACHMENT_SIZE","MAX_EXTERN_ATTACHMENT_SIZE","IMAGE_THUMBNAIL_DIM","MAX_TITLE_LENGTH","MAX_TOPIC_DESCRIPTION_LENGTH","messages","defineMessages","info","clear_messages","clear_for_all","delete","delete_for_all","send_retry","mute","unmute","reply","forward","topic_delete","topic_delete_warning","delete_messages_warning","unblock","block","topic_block_warning","member_delete","archive","unarchive","edit_permissions","clear_messages_warning","ContextMenu","constructor","super","selfRef","formatMessage","intl","handlePageClick","bind","handleEscapeKey","handleClick","MenuItems","handler","params","errorHandler","onShowAlert","deleteMessages","message","retryMessage","replyToMessage","topicPermissionSetter","then","ctrl","onTopicRemoved","topicName","topic","tinode","getTopic","delTopic","catch","err","console","log","user","delSubscription","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","e","current","contains","target","preventDefault","stopPropagation","hide","keyCode","item","items","currentTarget","dataset","onAction","onError","error","all","hard","cancelSend","seq","delMessagesAll","delMessagesList","flushMessage","msg","createMessage","publishDraft","mode","result","updateMode","pickReply","userFrom","userName","menu","count","map","push","vSize","length","position","left","bounds","right","clickAt","x","top","bottom","y","style","ref","injectIntl","icon_mapping","ContactBadges","badges","b","color","icon","name","shortDateFormat","locale","window","navigator","userLanguage","language","now","Date","getFullYear","getMonth","getDate","toLocaleTimeString","hour12","hour","minute","toLocaleDateString","month","day","year","bytesToHumanSize","bytes","sizes","bucket","Math","min","floor","log2","pow","round","toFixed","shortenFileName","filename","maxLength","slice","idToColorClass","light","fg","userId","abs","value","hash","i","charCodeAt","stringToColorHash","updateFavicon","oldIcon","getElementById","head","getElementsByTagName","newIcon","createElement","type","rel","href","removeChild","appendChild","theCard","fn","imageUrl","imageMimeType","note","card","trim","mimeType","matches","exec","photo","data","substring","indexOf","arrayEqual","Array","isArray","sort","l","sanitizeUrl","url","allowedSchemes","replace","test","schemes","join","RegExp","sanitizeImageUrl","sanitizedUrl","deliveryMarker","received","cancelablePromise","promise","hasCanceled","Error","Promise","resolve","isCanceled","cancel","LetterTile","avatar","isGroup","iconColor","letter","charAt","authorizeURL","alt","src","onerror","message_sending","message_sending_failed","ReceivedMarker","timestamp","marker","UnreadBadge","LazyImage","state","assign","padding","whenDone","setState","componentDidUpdate","prevProps","FileProgress","width","progress","onCancel","UploadingImage","onCancelUpload","SUPPORTED_IMAGE_FORMATS","MIME_EXTENSIONS","makeImageUrl","startsWith","fitImageSize","height","maxWidth","maxHeight","forceSquare","scale","size","dstWidth","dstHeight","srcWidth","srcHeight","xoffset","yoffset","fileNameForMime","fname","mime","idx","ext","at","lastIndexOf","imageScaled","fileOrBlob","maxSize","img","Image","crossOrigin","onload","async","URL","revokeObjectURL","dim","canvas","ctx","getContext","imageSmoothingEnabled","drawImage","includes","blob","toBlob","clearRect","createObjectURL","blobToBase64","reader","FileReader","evt","bits","split","readAsDataURL","drafty_form","drafty_attachment","drafty_image","handleImageData","el","attr","viewportWidth","minWidth","minHeight","Drafty","max","onImagePreview","loading","fullFormatter","values","stack","quoteFormatter","onFormButtonClick","inner","child","undefined","val","onQuoteClick","concat","previewFormatter","inlineImageAttr","quoteImage","str","bin","atob","buf","ArrayBuffer","arr","Uint8Array","Blob","base64ToBlob","fetch","ok","status","statusText","scaled","b64","replyFormatter","loadedPromise","Contact","handleContextClick","onSelected","index","showContextMenu","pageY","pageX","online","icon_badges","preview","isVerified","isStaff","isDangerous","acs","showMode","getMode","isMuted","isJoiner","showCheckmark","selected","showOnline","isChannel","unread","small","comment","ContactAction","action","badge_you","badge_owner","ContactList","topicSelected","contactNodes","contactsCount","contacts","c","filterFunc","filter","filterOn","private","toLowerCase","public","myUserId","isOwner","forwarded","deliveryStatus","latestMessage","_status","msgStatus","substr","showUnread","connected","onTopicSelected","trusted","verified","staff","danger","noScroll","dangerouslySetInnerHTML","__html","emptyListMessage","SearchContacts","edited","search","handleSearchChange","handleSearch","handleClear","handleKeyDown","onSearchContacts","query","placeholder","onChange","onKeyDown","required","autoFocus","ForwardDialog","handleClose","handleSearchContacts","handleContactSelected","onInitFind","uid","searchResults","isWriter","desription","search_placeholder","not_found_placeholder","LoadSpinner","large","clear","centered","show","AvatarUpload","source","handleFileReceived","image","files","onImageUpdated","randId","random","readOnly","accept","htmlFor","uploading","badge_verified","badge_staff","badge_danger","BadgeList","trustedBadges","CheckBox","handleChange","checked","MenuCancel","ErrorPanel","level","onClearError","warn","text","whiteSpace","actionText","Chip","handleCancel","invalid","noAvatar","ChipInput","deriveStateFromProps","input","focused","handleTextInput","removeChipAt","handleChipCancel","handleFocusGained","handleFocusLost","chips","prompt","sortedChips","sortChips","staticMembers","chipIndex","indexChips","prevState","keep","normal","removed","onChipRemoved","onFocusLost","onEnter","avatarDisabled","tabIndex","onFocus","onBlur","no_contacts","contacts_not_found_short","GroupManager","members","indexMembers","keepInitialMembers","requiredMember","contactFilter","noContactsMessage","selectedContacts","handleMemberRemoved","handleContactFilter","handleSubmit","m","delta","present","keepInitial","stat","sel","splice","instance","added","keys","k","onSubmit","doContactFiltering","joiner","writer","preser","approver","sharer","deleter","owner","PermissionsEditor","names","skip","compare","userTitle","userAvatar","modeTitle","compareTitle","Cropper","panX","panY","originX","originY","zoom","minZoom","maxZoom","overlay","cutout","boundingBox","imageWidth","imageHeight","mouseX","mouseY","prevDistance","cutoutRect","bBoxRect","initScaling","onZoom","handleZoom","mouseDown","mouseUp","mouseMove","mouseTouch","positionAll","translate","passive","getBoundingClientRect","currPan","nextDiff","imgRect","imgLeft","imgRight","coLeft","coRight","imgTop","imgBottom","coTop","coBottom","touches","body","dX","dY","checkBound","touch0","touch1","distance","sqrt","t3d","orig","transform","transformOrigin","onLoad","step","AvatarCrop","objURL","VisiblePassword","handleVisibility","handeTextChange","handleEditingFinished","onFinished","setTimeout","activeElement","autoComplete","InPlaceEdit","active","initialValue","handleStartEditing","handlePasswordFinished","newValue","focus","event","checkValidity","spanText","spanClass","multiline","element","rows","TagManager","tags","tagInput","activated","handleTagInput","handleAddTag","handleRemoveTag","nextProps","last","tag","maxTagCount","getServerLimit","onTagsChanged","minTagLength","maxTagLength","add_tags_prompt","TopicDescEdit","getAccessMode","isMe","fullName","description","newAvatar","newAvatarMime","previousOnTags","tnNewTags","handleFullNameUpdate","handleImageUpdated","handleAvatarCropped","handlePrivateUpdate","handleDescriptionUpdate","uploadAvatar","handleAvatarCropCancel","handleTagsUpdated","onTagsUpdated","onUpdateTopicDesc","desc","readyToUpload","uploader","getLargeFileHelper","upload","finally","du","onUpdateTags","editable","full_name_placeholder","group_name_placeholder","private_placeholder","title_tag_manager","TopicCommon","credentials","getCredentials","addCredActive","addCredInvalid","newCred","previousTagsUpdated","tnCredsUpdated","handleCredChange","handleCredKeyDown","handleCredEntered","onCredsUpdated","getType","creds","method","asPhone","asEmail","onCredAdd","onTopicTagsUpdateRequest","cred","meth","done","onCredConfirm","onCredDelete","delete_messages","leave_chat","leave_chat_warning","block_contact","block_contact_warning","report_chat","report_chat_warning","other_user","TopicSecurity","handleDeleteTopic","handleDeleteMessages","handleLeave","handleBlock","handleReport","onDeleteTopic","onDeleteMessages","onLeaveTopic","onBlockTopic","onReportTopic","channel","groupTopic","onLaunchPermissionsEditor","access","auth","anon","modeGiven2","general","security","crop","perm_want","perm_given","perm_auth","perm_anon","perm_user","_clip","InfoView","admin","muted","address","selectedContact","modeGiven","modeWant","modeWant2","contactList","previousMetaDesc","previousSubsUpdated","resetSubs","resetDesc","resetTags","onMetaDesc","onSubsUpdated","handleImageChanged","handleMuted","handleUnarchive","handlePermissionsChanged","handleLaunchPermissionsEditor","handleShowAddMembers","handleMemberUpdateRequest","handleMemberSelected","handleContextMenu","handleBackNavigate","newState","user2","subscriber","getGiven","getWant","subscribers","sub","defacs","getDefaultAccess","entries","isAdmin","isSharer","isDeleter","archived","isArchived","isGroupType","isChannelType","chan","getMeta","startMetaQuery","withTags","build","subs","onTopicDescUpdate","ignored","onChangePermissions","ignored2","onTopicUnArchive","which","perm","onTopicDescUpdateRequest","userPermissionsEdited","toEdit","toCompare","toSkip","titleEdit","titleCompare","userPermissionsTitle","userPermissionsAvatar","editedPermissions","immutablePermissions","editedPermissionsTitle","immutablePermissionsTitle","editedPermissionsSkipped","onNavigate","onMemberUpdateRequest","args","panel","menuItems","view","shift","panelTitle","displayMobile","errorLevel","errorText","searchableContacts","no_members","Attachment","downloader","downloadFile","mimetype","download","loaded","helperFunc","isUrlRelative","downloadUrl","downloadWidget","BaseChatMessage","onProgress","handleProgress","handleImagePreview","handleFormButtonClick","handleCancelUpload","handleQuoteClick","formatterContext","resp","act","onFormResponse","MESSAGE_STATUS_FAILED","userIsWriter","MESSAGE_STATUS_DEL_RANGE","ratio","replyToSeq","sideClass","deleted","sequence","response","bubbleClass","fullDisplay","attachments","att","tree","innerRef","IntlChatMessage","messaging_disabled","type_new_message","add_image_caption","file_attachment_too_large","cannot_initiate_upload","SendMessage","quote","keypressTimestamp","getTime","handlePasteEvent","handleAttachImage","handleAttachFile","handleSend","handleKeyPress","handleMessageTyping","formatReply","messageEditArea","disabled","onImageSuccess","onAttachmentSuccess","clipboardData","originalEvent","kind","file","getAsFile","filePasted","onAttachImage","onAttachFile","acceptBlank","noInput","onSendMessage","shiftKey","onKeyPress","messagePrompt","onCancelReply","attachImage","click","attachFile","display","DocPreview","handleSendDoc","caption","onClose","mimeToIcon","default","video","iconFromMime","GroupSubs","usersOnline","totalCount","countToShow","some","overflow","ImagePreview","handleSendImage","assignWidth","node","maxlength","Invitation","handleButtonAction","LogoView","version","serverVersion","serverAddress","HashNavigation","parts","path","forEach","part","decodeURIComponent","location","parsed","parseUrlHash","composeUrlHash","sidepanel","infopanel","online_now","last_seen","not_found","invalid_content","isUnconfirmed","ex","getExcessive","isPeerRestricted","ms","getMissing","MessagesView","getDerivedStateFromProps","leave","sendMessage","retrySend","sendImageAttachment","sendFileAttachment","sendKeyPress","subscribe","handleScrollReference","handleScrollEvent","handleDescChange","handleSubsUpdated","handleMessageUpdate","handleAllMessagesReceived","handleInfoReceipt","handleImagePostview","handleClosePreview","handleFormResponse","handleShowMessageContextMenu","handleNewChatAcceptance","handleEnablePeer","postReadNotification","clearNotificationQueue","handlePickReply","handleCancelReply","chatMessageRefs","getOrCreateMessageRef","readNotificationQueue","readNotificationTimer","seqId","messagesScroller","messageCount","scrollTop","scrollHeight","scrollPosition","viewportHeight","onData","onAllMessagesReceived","onInfo","onPres","applicationVisible","ready","nextState","forwardMessage","docPreview","imagePreview","imagePostview","typingIndicator","fetchingMessages","onlineSubs","peer","p2pPeerDesc","peerMessagingDisabled","latestClearId","maxClearId","isReader","readingBlocked","unconformed","unconfirmed","isSubscribed","newTopic","newTopicParams","_topicName","getQuery","withLaterDesc","withLaterSub","withLaterData","withLaterDel","setQuery","code","onNewTopicCreated","queuedMessages","pub","_sending","navigateTo","setUrlTopic","blankState","oldTopicName","isTopicCached","oldTopic","msgHasMoreMessages","getMessagesPage","setInterval","clearInterval","n","sendAt","noteRead","setMilliseconds","getMilliseconds","clearTimeout","keyPressTimer","isNewMessage","from","what","forceUpdate","attachJSON","parse","searchParams","set","open","messageSpecificMenuItems","onNewChat","noteKeyPress","uploadCompletionPromise","append","sanitizeEntities","maxInbandAttachmentSize","urlPromise","fileToBase64","maxExternAttachmentSize","limit","insertImage","_tempPreview","appendLineBreak","found","findMessage","_cancelled","senderId","senderName","init","isValid","replyContent","wrapInto","onCancelForwardMessage","scrollIntoView","behavior","classList","add","remove","component","hideSelf","component2","messageNodes","previousFrom","chatBoxClass","prev","next","nextFrom","thisFrom","isReply","userDesc","parseInt","isNaN","hi","ts","isChan","_uploader","lastSeen","cont","getMeTopic","getContact","seen","when","onHideMessagesView","ButtonBack","onBack","MenuContacts","onNewTopic","onSettings","MenuStart","onSignUp","SideNavbar","AccountSettingsView","me","archived_contacts_title","ContactsView","handleAction","unreadThreads","archivedCount","chatList","blocked","arch","touched","action_ignored","onShowArchive","LocalStorageUtil","localStorage","setItem","JSON","stringify","getItem","oldVal","getObject","setObject","removeItem","CreateAccountView","login","password","email","imageDataUrl","errorCleared","saveToken","handleLoginChange","handlePasswordChange","handleEmailChange","handleFnChange","handleToggleSaveToken","onCreateAccount","submitClasses","login_prompt","password_prompt","onImageChanged","full_name_prompt","email_prompt","stay_logged_in","EditAccountView","handleCheckboxClick","onToggleMessageSounds","onTogglePushNotifications","onToggleIncognitoMode","messageSounds","desktopAlertsEnabled","desktopAlerts","incognitoMode","delete_account","delete_account_warning","AccSecurityView","blockedCount","showPermissionEditorFor","handlePasswordUpdate","handleHidePermissionsEditor","handleDeleteAccount","pwd","onUpdatePassword","onUpdateAccountDesc","onDeleteAccount","password_unchanged","onLogout","onShowBlocked","AccSupportView","LoginView","hostName","persist","onPersistenceChange","onLogin","autoCorrect","autoCapitalize","invalid_id","NewTopicById","groupId","prefix","NewTopicGroup","handleFieldEdit","handleTagsChanged","handleChannelToggle","search_for_contacts","search_no_results","NewTopicView","tabSelected","searchQuery","handleTabClick","handleNewGroupSubmit","handleGroupByID","addUrlParam","removeUrlParam","onCreateTopic","dataUrl","priv","no_contacts_placeholder","PasswordResetView","sent","token","scheme","onReset","onRequest","HostSelector","changed","handleHostNameChange","onServerAddressChange","hostOptions","list","SettingsView","transport","handleTransportSelected","handleServerAddressChange","onUpdate","def","ws","lp","transportOptions","phone","ValidationView","credCode","credMethod","numbers_only","register","settings","edit","notif","support","newtpk","reset","SidepanelView","handleNewTopic","errorAction","errorActionText","loadSpinnerVisible","loginDisabled","onLoginRequest","onGlobalSettings","onUpdateAccountTags","onValidateCredentials","onPasswordResetRequest","onResetPassword","detectServerAddress","host","protocol","hostname","port","isSecureConnection","POP_SOUND","Audio","reconnect_countdown","reconnect_now","push_init_failed","invalid_security_token","no_connection","code_doesnot_match","menu_item_info","TinodeWeb","getBlankState","handleResize","handleHashRoute","handleOnline","checkForAppUpdate","handleVisibilityEvent","handleError","handleLoginRequest","handlePersistenceChange","handleConnected","handleAutoreconnectIteration","doLogin","handleCredentialsRequest","handleLoginSuccessful","handleDisconnect","tnMeMetaDesc","tnMeContactUpdate","tnMeSubsUpdated","resetContactList","tnData","tnInitFind","tnFndSubsUpdated","handleTopicSelected","handleHideMessagesView","handleSendMessage","handleNewChatInvitation","handleNewAccount","handleNewAccountRequest","handleUpdatePasswordRequest","handleUpdateAccountTagsRequest","handleToggleIncognitoMode","handleSettings","handleGlobalSettings","handleShowArchive","handleShowBlocked","handleToggleMessageSounds","handleCredAdd","handleCredDelete","handleCredConfirm","initFCMessaging","togglePushToken","requestPushToken","handlePushMessage","handleSidepanelCancel","handleStartTopicRequest","handleNewTopicCreated","handleTopicUpdateRequest","handleChangePermissions","handleTagsUpdateRequest","handleLogout","handleDeleteTopicRequest","handleDeleteMessagesRequest","handleLeaveUnsubRequest","handleBlockTopicRequest","handleReportTopic","handleShowContextMenu","defaultTopicContextMenu","handleHideContextMenu","handleShowAlert","handleShowInfoView","handleValidateCredentialsRequest","handlePasswordResetRequest","handleResetPassword","handleContextMenuAction","handleShowForwardDialog","handleHideForwardDialog","sendMessageToTopic","autoLogin","messageSoundsOff","FIREBASE_INIT","firebaseToken","hidden","sidePanelSelected","sidePanelTitle","sidePanelAvatar","myTrustedBadges","liveConnection","onLine","topicSelectedOnline","topicSelectedAcs","innerWidth","infoPanel","mobilePanel","contextMenuVisible","contextMenuBounds","contextMenuClickAt","contextMenuParams","contextMenuItems","forwardDialogVisible","alertVisible","alertParams","requestedTopic","BroadcastChannel","documentElement","clientWidth","clientHeight","tnSetup","onConnect","onDisconnect","onAutoreconnectIteration","setDeviceToken","parsedNav","expires","setAuthToken","connect","readTimer","readTimerCallback","persistentCache","onSetupCompleted","appName","apiKey","secure","setHumanLanguage","enableLogging","oobNotification","fbPush","usePublicVapidKey","messagingVapidKey","serviceWorker","reg","useServiceWorker","postMessage","onTokenRefresh","onMessage","payload","mobile","onupdatefound","installingWorker","installing","onstatechange","controller","getTopicAccessMode","newTopicTabSelected","tab","reconnectCountdown","reconnect","isConnected","initStorage","clearStorage","getServerInfo","ver","sec","prom","timeLeft","seconds","secondsToTime","isAuthenticated","getAuthToken","loginBasic","loginToken","goToTopic","onContactUpdate","getCurrentUserID","withDesc","withCred","disconnect","urlHash","setUrlSidePanel","isPresencer","play","unused","foundContacts","merged","updated","past","prepareSearchableContacts","receivedTimer","noteRecv","fnd","getFndTopic","withSub","s","setMeta","isTopicOnline","isP2PType","am","updateWant","login_","password_","public_","cred_","tags_","createAccountBasic","on","enabled","updateObject","requestPermission","deleteToken","getToken","refreshedToken","delCredential","basicNavigator","infoNavigator","setUrlInfoPanel","newGroupTopicName","oldName","newName","updateAccountBasic","getCurrentLogin","updateGiven","delCurrentUser","_","report","header","msgPreview","self_blocked","subscribed","keepForwardedMessage","confirmText","rejectText","invite","requestResetAuthSecret","newPassword","btoa","base64ReEncode","myUserName","onAddMember","handleManageGroupMembers","hl","languages","baseLanguage","htmlLang","allMessages","setAttribute","IntlProvider","textComponent"],"sourceRoot":""}