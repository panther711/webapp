{"version":3,"file":"index.prod.js","mappings":"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","sources":["webpack://tinode-webapp/external var \"React\"","webpack://tinode-webapp/external var \"ReactDOM\"","webpack://tinode-webapp/external var \"ReactIntl\"","webpack://tinode-webapp/external var \"firebase\"","webpack://tinode-webapp/external var \"Tinode\"","webpack://tinode-webapp/external var [\"firebase\",\"messaging\"]","webpack://tinode-webapp/./src/widgets/alert.jsx","webpack://tinode-webapp/./src/version.js","webpack://tinode-webapp/./src/config.js","webpack://tinode-webapp/./src/widgets/context-menu.jsx","webpack://tinode-webapp/./src/widgets/contact-badges.jsx","webpack://tinode-webapp/./src/lib/strformat.js","webpack://tinode-webapp/./src/lib/utils.js","webpack://tinode-webapp/./src/widgets/letter-tile.jsx","webpack://tinode-webapp/./src/widgets/unread-badge.jsx","webpack://tinode-webapp/./src/widgets/lazy-image.jsx","webpack://tinode-webapp/./src/widgets/file-progress.jsx","webpack://tinode-webapp/./src/widgets/uploading-image.jsx","webpack://tinode-webapp/./src/lib/blob-helpers.js","webpack://tinode-webapp/./src/lib/formatters.js","webpack://tinode-webapp/./src/widgets/contact.jsx","webpack://tinode-webapp/./src/widgets/contact-action.jsx","webpack://tinode-webapp/./src/widgets/contact-list.jsx","webpack://tinode-webapp/./src/widgets/search-contacts.jsx","webpack://tinode-webapp/./src/widgets/forward-dialog.jsx","webpack://tinode-webapp/./src/widgets/load-spinner.jsx","webpack://tinode-webapp/./src/widgets/avatar-upload.jsx","webpack://tinode-webapp/./src/widgets/badge-list.jsx","webpack://tinode-webapp/./src/widgets/checkbox.jsx","webpack://tinode-webapp/./src/widgets/menu-cancel.jsx","webpack://tinode-webapp/./src/widgets/error-panel.jsx","webpack://tinode-webapp/./src/widgets/chip.jsx","webpack://tinode-webapp/./src/widgets/chip-input.jsx","webpack://tinode-webapp/./src/widgets/group-manager.jsx","webpack://tinode-webapp/./src/widgets/permissions-editor.jsx","webpack://tinode-webapp/./src/widgets/cropper.jsx","webpack://tinode-webapp/./src/widgets/avatar-crop.jsx","webpack://tinode-webapp/./src/widgets/visible-password.jsx","webpack://tinode-webapp/./src/widgets/in-place-edit.jsx","webpack://tinode-webapp/./src/widgets/tag-manager.jsx","webpack://tinode-webapp/./src/widgets/topic-desc-edit.jsx","webpack://tinode-webapp/./src/widgets/topic-common.jsx","webpack://tinode-webapp/./src/widgets/topic-security.jsx","webpack://tinode-webapp/./src/views/info-view.jsx","webpack://tinode-webapp/./src/widgets/attachment.jsx","webpack://tinode-webapp/./src/widgets/received-marker.jsx","webpack://tinode-webapp/./src/widgets/chat-message.jsx","webpack://tinode-webapp/./src/widgets/send-message.jsx","webpack://tinode-webapp/./src/widgets/doc-preview.jsx","webpack://tinode-webapp/./src/widgets/group-subs.jsx","webpack://tinode-webapp/./src/widgets/image-preview.jsx","webpack://tinode-webapp/./src/widgets/invitation.jsx","webpack://tinode-webapp/./src/views/logo-view.jsx","webpack://tinode-webapp/./src/widgets/meta-message.jsx","webpack://tinode-webapp/./src/lib/navigation.js","webpack://tinode-webapp/./src/views/messages-view.jsx","webpack://tinode-webapp/./src/widgets/button-back.jsx","webpack://tinode-webapp/./src/widgets/menu-contacts.jsx","webpack://tinode-webapp/./src/widgets/menu-start.jsx","webpack://tinode-webapp/./src/widgets/side-navbar.jsx","webpack://tinode-webapp/./src/views/account-settings-view.jsx","webpack://tinode-webapp/./src/views/contacts-view.jsx","webpack://tinode-webapp/./src/lib/local-storage.js","webpack://tinode-webapp/./src/views/create-account-view.jsx","webpack://tinode-webapp/./src/views/acc-notifications-view.jsx","webpack://tinode-webapp/./src/views/acc-security-view.jsx","webpack://tinode-webapp/./src/views/acc-support-view.jsx","webpack://tinode-webapp/./src/views/login-view.jsx","webpack://tinode-webapp/./src/widgets/new-topic-by-id.jsx","webpack://tinode-webapp/./src/widgets/new-topic-group.jsx","webpack://tinode-webapp/./src/views/new-topic-view.jsx","webpack://tinode-webapp/./src/views/password-reset-view.jsx","webpack://tinode-webapp/./src/widgets/host-selector.jsx","webpack://tinode-webapp/./src/views/settings-view.jsx","webpack://tinode-webapp/./src/views/validation-view.jsx","webpack://tinode-webapp/./src/views/sidepanel-view.jsx","webpack://tinode-webapp/./src/lib/host-name.js","webpack://tinode-webapp/./src/views/tinode-web.jsx","webpack://tinode-webapp/./src/index.js","webpack://tinode-webapp/webpack/bootstrap","webpack://tinode-webapp/webpack/runtime/compat get default export","webpack://tinode-webapp/webpack/runtime/define property getters","webpack://tinode-webapp/webpack/runtime/hasOwnProperty shorthand","webpack://tinode-webapp/webpack/startup"],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = React;","const __WEBPACK_NAMESPACE_OBJECT__ = ReactDOM;","const __WEBPACK_NAMESPACE_OBJECT__ = ReactIntl;","const __WEBPACK_NAMESPACE_OBJECT__ = firebase;","const __WEBPACK_NAMESPACE_OBJECT__ = Tinode;","const __WEBPACK_NAMESPACE_OBJECT__ = firebase.messaging;","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Alert extends React.PureComponent {\n  render() {\n    return this.props.visible ?\n      <div className=\"alert-container\">\n        <div className=\"alert\">\n          <div className=\"title\">{this.props.title}</div>\n          <div className=\"content\">{this.props.content}</div>\n          <div className=\"dialog-buttons\">\n            {this.props.onReject ?\n              <button className=\"outline\" onClick={this.props.onReject}>\n                {this.props.reject || <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />}\n              </button>\n              :\n              null\n            }\n            <button className=\"primary\" onClick={this.props.onConfirm}>\n              {this.props.confirm || <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\"  />}\n            </button>\n          </div>\n        </div>\n      </div>\n    :\n    null;\n  }\n};\n","// This is a generated file. Don't edit.\n\nexport const PACKAGE_VERSION = \"0.18.2-beta1\";\n","import { PACKAGE_VERSION } from './version.js';\n\n// Name of this application, used in the User-Agent.\nexport const APP_NAME = 'TinodeWeb/' + (PACKAGE_VERSION || '0.17');\n\n// API key. Use https://github.com/tinode/chat/tree/master/keygen to generate your own\nexport const API_KEY = 'AQEAAAABAAD_rAp4DJh05a1HAwFT3A6K';\n\n// The array of possible hosts to connect to.\nexport const KNOWN_HOSTS = {hosted: 'web.tinode.co', local: 'localhost:6060'};\n\n// Default host name and port to connect to.\nexport const DEFAULT_HOST = KNOWN_HOSTS.hosted;\n\n// Enable console logging.\nexport const LOGGING_ENABLED = true;\n\n// Minimum time between two keypress notifications, milliseconds.\nexport const KEYPRESS_DELAY = 3*1000;\n// Delay before sending a {note} for reciving a message, milliseconds.\nexport const RECEIVED_DELAY = 500;\n// Delay before sending a read notification, milliseconds.\nexport const READ_DELAY = 1000;\n\n// The default shortest allowed tag length. Matches the value on the server.\nexport const MIN_TAG_LENGTH = 2;\n// The default greatest allowed tag length. Matches the value on the server.\nexport const MAX_TAG_LENGTH = 96;\n// The default maximum number of tags allowed. Matches the value on the server.\nexport const MAX_TAG_COUNT = 16;\n\n// Access mode for P2P subscriptions initiated by the current user.\nexport const DEFAULT_P2P_ACCESS_MODE = 'JRWPS';\n// Access mode for new group topics created by the current user.\nexport const NEW_GRP_ACCESS_MODE = 'JRWPSAO';\n// Access mode for a channel.\nexport const CHANNEL_ACCESS_MODE = 'JR';\n\n// Access mode for no access.\nexport const NO_ACCESS_MODE = 'N';\n\n// Mediaquery breakpoint between desktop and mobile, in px. Should match the value\n// in @media (max-size: 640px) in base.css\nexport const MEDIA_BREAKPOINT = 640;\n// Size of css 'rem' unit in pixels. Default 1rem = 10pt = 13px.\nexport const REM_SIZE = 13;\n\n// Size of the avatar image: when image dimensions are greater or the image is not square, it's resized to\n// a square of this size or less.\nexport const AVATAR_SIZE = 384;\n\n// Maximum size of an avatar in bytes for sending in-band. Bigger avatars will be sent out of band (as uploads).\nexport const MAX_AVATAR_BYTES = 4096;\n\n// Size of the broken_image shown in MessagesView\nexport const BROKEN_IMAGE_SIZE = 32;\n\n// Number of chat messages to fetch in one call.\nexport const MESSAGES_PAGE = 24;\n\n// Default maximum in-band (included directly into the message) attachment size which fits into\n// a message of 256K in size. Used when the server-provided value is unavailable. The actual\n// binary size of the attachment should be smaller due to base64 encoding expansion and some overhead,\n// for instance 1024 bytes.\n// Increase this limit to a greater value in production, if desired. Also increase\n// max_message_size in the server config.\nexport const MAX_INBAND_ATTACHMENT_SIZE = 262144;\n\n// Default absolute maximum attachment size to be used with the server = 8MB.\n// Used when the server-provided value is unavailable. Increase to something like 100MB in production.\nexport const MAX_EXTERN_ATTACHMENT_SIZE = 1 << 23;\n\n// Maximum allowed linear dimension (pixels) of an image sent inline. Larger images will be shrunk\n// to make the larger dimension fit under this size. You may want to adjust it to 1600 or\n// 2400 for production.\nexport const MAX_IMAGE_DIM = 1024;\n\n// Linear dimensions of image preview: shrink image under this size for previews.\nexport const IMAGE_PREVIEW_DIM = 64;\n\n// Linear dimensions of image thumbnail: shrink image under this size for thumbnails in reply quote previews.\nexport const IMAGE_THUMBNAIL_DIM = 36;\n\n// Maximum number of online users to be shown in a topic title bar. Others will be\n// hidden under \"+X more\"\nexport const MAX_ONLINE_IN_TOPIC = 4;\n\n// Maximum length of user name, topic title, and private comment.\nexport const MAX_TITLE_LENGTH = 60;\n// Maximum length of topic description.\nexport const MAX_TOPIC_DESCRIPTION_LENGTH = 360;\n\n// Length of message previews in chat list, in characters.\nexport const MESSAGE_PREVIEW_LENGTH = 80;\n\n// Length of a quote in quoted reply (for outgoing messages).\nexport const QUOTED_REPLY_LENGTH = 30;\n// Length of a preview of a forwarded message.\nexport const FORWARDED_PREVIEW_LENGTH = 84;\n\n// Link for \"Contact Us\".\nexport const LINK_CONTACT_US = 'email:support@tinode.co';\n\n// Link to Privacy Policy.\nexport const LINK_PRIVACY_POLICY = 'https://tinode.co/privacy.html';\n\n// Link to Terms of Service.\nexport const LINK_TERMS_OF_SERVICE = 'https://tinode.co/terms.html';\n","// Context Menu: popup/dropdown menu.\nimport React from 'react';\nimport { injectIntl, defineMessages } from 'react-intl';\n\nimport { REM_SIZE } from '../config.js';\n\nconst messages = defineMessages({\n  info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  },\n  clear_messages: {\n    id: 'menu_item_clear_messages',\n    defaultMessage: 'Clear messages',\n    description: 'Delete all messages'\n  },\n  clear_for_all: {\n    id: 'menu_item_clear_messages_for_all',\n    defaultMessage: 'Clear for All',\n    description: 'Delete all message(s) for all members'\n  },\n  delete: {\n    id: 'menu_item_delete',\n    defaultMessage: 'Delete',\n    description: 'Delete selected messages'\n  },\n  delete_for_all: {\n    id: 'menu_item_delete_for_all',\n    defaultMessage: 'Delete for All',\n    description: 'Delete selected message(s) for all members'\n  },\n  send_retry: {\n    id: 'menu_item_send_retry',\n    defaultMessage: 'Retry',\n    description: 'Retry sending message'\n  },\n  mute: {\n    id: 'menu_item_mute',\n    defaultMessage: 'Mute',\n    description: 'Turn off notifications'\n  },\n  unmute: {\n    id: 'menu_item_unmute',\n    defaultMessage: 'Unmute',\n    description: 'Turn notifications on'\n  },\n  reply: {\n    id: 'menu_item_reply',\n    defaultMessage: 'Reply',\n    description: 'Reply to message'\n  },\n  forward: {\n    id: 'menu_item_forward',\n    defaultMessage: 'Forward',\n    description: 'Forward message'\n  },\n  topic_delete: {\n    id: 'menu_item_delete_topic',\n    defaultMessage: 'Delete',\n    description: 'Delete entire topic'\n  },\n  topic_delete_warning: {\n    id: 'topic_delete_warning',\n    defaultMessage: 'Are you sure you want to delete this conversation? It cannot be undone.',\n    description: 'Alert warning when deleting entire topic'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  unblock: {\n    id: 'menu_item_unblock',\n    defaultMessage: 'Unblock',\n    description: 'Unblock topic or user'\n  },\n  // Generic string suitable for either topic or user.\n  block: {\n    id: 'menu_item_block',\n    defaultMessage: 'Block',\n    description: 'Block topic or user'\n  },\n  topic_block_warning: {\n    id: 'topic_block_warning',\n    defaultMessage: 'Are you sure you want to block this conversation?',\n    description: 'Alert warning when blocking a topic.'\n  },\n  member_delete: {\n    id: 'menu_item_member_delete',\n    defaultMessage: 'Remove',\n    description: 'Remove user from topic'\n  },\n  archive: {\n    id: 'menu_item_archive_topic',\n    defaultMessage: 'Archive',\n    description: 'Move topic from the list of active chats to archive'\n  },\n  unarchive: {\n    id: 'menu_item_restore_topic',\n    defaultMessage: 'Restore',\n    description: 'Restore topic from archive'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n});\n\nclass ContextMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selfRef = React.createRef();\n\n    const {formatMessage} = props.intl;\n\n    this.handlePageClick = this.handlePageClick.bind(this);\n    this.handleEscapeKey = this.handleEscapeKey.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n\n    // Preconfigured menu items.\n    this.MenuItems = {\n      'topic_info': {\n        id: 'topic_info',\n        title: formatMessage(messages.info),\n        handler: null\n      },\n      'messages_clear': {\n        id: 'messages_clear',\n        title: formatMessage(messages.clear_messages),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.clear_messages), // title\n            formatMessage(messages.clear_messages_warning), // content\n            (() => { this.deleteMessages(true, false, params, errorHandler); }), // onConfirm\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'messages_clear_hard': {\n        id: 'messages_clear_hard',\n        title: formatMessage(messages.clear_for_all),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.clear_for_all), // title\n            formatMessage(message.delete_messages_warning), // content\n            (() => { return this.deleteMessages(true, true, params, errorHandler); }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'message_delete': {\n        id: 'message_delete',\n        title: formatMessage(messages.delete),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, false, params, errorHandler);\n        }\n      },\n      'message_delete_hard': {\n        id: 'message_delete_hard',\n        title: formatMessage(messages.delete_for_all),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, true, params, errorHandler);\n        }\n      },\n      'menu_item_send_retry': {\n        id: 'menu_item_send_retry',\n        title: formatMessage(messages.send_retry),\n        handler: (params, errorHandler) => {\n          return this.retryMessage(params, errorHandler);\n        }\n      },\n      'menu_item_reply': {\n        id: 'menu_item_reply',\n        title: formatMessage(messages.reply),\n        handler: (params, errorHandler) => {\n          return this.replyToMessage(params, errorHandler);\n        }\n      },\n      'menu_item_forward': {\n        id: 'menu_item_forward',\n        title: formatMessage(messages.forward),\n        handler: () => {} /* the action is taken directly in tinode-web */\n      },\n      'topic_unmute': {\n        id: 'topic_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'topic_mute': {\n        id: 'topic_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'topic_unblock': {\n        id: 'topic_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n      'topic_block': {\n        id: 'topic_block',\n        title: formatMessage(messages.block),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.block), // title\n            formatMessage(messages.topic_block_warning), // content\n            (() => {\n              return this.topicPermissionSetter('-JP', params, errorHandler).then((ctrl) => {\n                this.props.onTopicRemoved(params.topicName);\n                return ctrl;\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_delete': {\n        id: 'topic_delete',\n        title: formatMessage(messages.topic_delete),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.topic_delete), // title\n            formatMessage(messages.topic_delete_warning), // content\n            (() => {\n              const topic = this.props.tinode.getTopic(params.topicName);\n              if (!topic) {\n                console.log(\"Topic not found: \", params.topicName);\n                return;\n              }\n              return topic.delTopic(true).catch((err) => {\n                if (errorHandler) {\n                  errorHandler(err.message, 'err');\n                }\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_archive': {\n        id: 'topic_archive',\n        title: formatMessage(messages.archive),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic) {\n            console.log(\"Topic not found: \", params.topicName);\n            return;\n          }\n          return topic.archive(true).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      'topic_restore': {\n        id: 'topic_restore',\n        title: formatMessage(messages.unarchive),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic) {\n            console.log(\"Topic not found: \", params.topicName);\n            return;\n          }\n          return topic.archive(false).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      // menu_item_edit_permissions is defined elsewhere.\n      'permissions': {\n        id: 'permissions',\n        title: formatMessage(messages.edit_permissions),\n        handler: null\n      },\n      'member_delete': {\n        id: 'member_delete',\n        title: formatMessage(messages.member_delete),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic || !params.user) {\n            console.log(\"Topic or user not found: '\" + params.topicName + \"', '\" + params.user + \"'\");\n            return;\n          }\n          return topic.delSubscription(params.user).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      'member_mute': {\n        id: 'member_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'member_unmute': {\n        id: 'member_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'member_block': {\n        id: 'member_block',\n        title: formatMessage(messages.block),\n        handler: this.topicPermissionSetter.bind(this, '-JP')\n      },\n      'member_unblock': {\n        id: 'member_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handlePageClick, false);\n    document.addEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handlePageClick, false);\n    document.removeEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  handlePageClick(e) {\n    if (this.selfRef.current.contains(e.target)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n  }\n\n  handleEscapeKey(e) {\n    if (e.keyCode === 27) {\n      this.props.hide();\n    }\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n    let item = this.props.items[e.currentTarget.dataset.id];\n    if (typeof item == 'string') {\n      item = this.MenuItems[item];\n    }\n\n    if (!item) {\n      console.error(\"Invalid menu item ID\", e.currentTarget.dataset.id);\n    } else {\n      this.props.onAction(\n        item.id,\n        item.handler(this.props.params, this.props.onError),\n        this.props.params);\n    }\n  }\n\n  // Menu Actions\n\n  deleteMessages(all, hard, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found: \", params.topicName);\n      return;\n    }\n\n    // We don't know if the message is still pending (e.g. attachment is being uploaded),\n    // so try cancelling first. No harm if we can't cancel.\n    // The message can be cancelled if transmission to the server has not\n    // started yet or if the message send has failed.\n    if (!all && topic.cancelSend(params.seq)) {\n      return;\n    }\n    // Can't cancel. Delete instead.\n    const promise = all ?\n      topic.delMessagesAll(hard) :\n      topic.delMessagesList([params.seq], hard);\n\n    return promise.catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Retries sending failed message.\n  retryMessage(params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    // Remove the existing message entry.\n    if (!topic || !topic.flushMessage(params.seq)) {\n      return;\n    }\n    const msg = topic.createMessage(params.content, false);\n    return topic.publishDraft(msg).catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Function is used by context menu to set permissions.\n  topicPermissionSetter(mode, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found\", params.topicName);\n      return;\n    }\n\n    let result = topic.updateMode(params.user, mode);\n    if (errorHandler) {\n      result = result.catch((err) => {\n        errorHandler(err.message, 'err');\n      });\n    }\n    return result;\n  }\n\n  replyToMessage(params, errorHandler) {\n    params.pickReply(params.seq, params.content, params.userFrom, params.userName, errorHandler);\n  }\n\n  render() {\n    const menu = [];\n    let count = 0;\n    this.props.items.map((item) => {\n      if (typeof item == 'string') {\n        item = this.MenuItems[item];\n      }\n      if (item && item.title) {\n        menu.push(\n          item.title == '-' ?\n            <li className=\"separator\" key={count} />\n            :\n            <li onClick={this.handleClick} data-id={count} key={count}>{item.title}</li>\n        );\n      }\n      count++;\n    });\n\n    // Ensure that menu is inside the app-container.\n    const hSize = 12 * REM_SIZE;\n    const vSize = REM_SIZE * (0.7 + menu.length * 2.5);\n    const left = (this.props.bounds.right - this.props.clickAt.x < hSize) ?\n        (this.props.clickAt.x - this.props.bounds.left - hSize) :\n        (this.props.clickAt.x - this.props.bounds.left);\n    const top = (this.props.bounds.bottom - this.props.clickAt.y < vSize) ?\n        (this.props.clickAt.y - this.props.bounds.top - vSize) :\n        (this.props.clickAt.y - this.props.bounds.top);\n\n    const position = {\n      left: left + 'px',\n      top: top + 'px'\n    };\n\n    return (\n      <ul className=\"menu\" style={position} ref={this.selfRef}>\n        {menu}\n      </ul>\n    );\n  }\n}\n\nexport default injectIntl(ContextMenu);\n","import React from 'react';\n\nconst icon_mapping = {'muted': 'notifications_off', 'banned': 'block', 'staff': 'verified_user'};\n\n/* Contact's labels: [you], or icons [muted], [blocked] */\nexport default class ContactBadges extends React.PureComponent {\n  render() {\n    let badges = null;\n    if (this.props.badges && this.props.badges.length > 0) {\n      badges = [];\n      this.props.badges.map((b) => {\n        const color = (b.color ? ' ' + b.color : '');\n        if (b.icon) {\n          badges.push(<i className={'material-icons as-badge' + color} key={b.key || b.icon}>{icon_mapping[b.icon] || b.icon}</i>);\n        } else {\n          badges.push(<span className={'badge' + color} key={b.key || b.name}>{b.name}</span>);\n        }\n      });\n      return <>{badges}</>;\n    }\n    return null;\n  }\n};\n","// Short representation of time in the past.\nexport function shortDateFormat(then, locale) {\n  locale = locale || window.navigator.userLanguage || window.navigator.language;\n  const now = new Date();\n  if (then.getFullYear() == now.getFullYear()) {\n    // Same year.\n    if (then.getMonth() == now.getMonth() && then.getDate() == now.getDate()) {\n      // Same month and day, show time only.\n      return then.toLocaleTimeString(locale, {hour12: false, hour: '2-digit', minute: '2-digit'});\n    }\n    // Different month and/or day, show month day, time.\n    return then.toLocaleDateString(locale,\n      {hour12: false, month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit'});\n  }\n  // Different year: just show the date.\n  return then.toLocaleDateString(locale, {year: 'numeric', month: 'short', day: 'numeric'});\n}\n\n// Convert seconds to minutes:seconds, i.e. 156 sec -> 2:36.\nexport function secondsToTime(seconds) {\n  const min = Math.floor(seconds / 60);\n  let sec = seconds % 60;\n  sec = sec < 10 ? `0${sec}` : sec;\n  return `${min}:${sec}`;\n}\n\n// Convert a number of bytes to human-readable format.\nexport function bytesToHumanSize(bytes) {\n  if (!bytes || bytes == 0) {\n    return '0 Bytes';\n  }\n\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n  const bucket = Math.min(Math.floor(Math.log2(bytes) / 10) | 0, sizes.length-1);\n  const count = bytes / Math.pow(1024, bucket);\n  const round = bucket > 0 ? (count < 3 ? 2 : (count < 30 ? 1 : 0)) : 0;\n  return count.toFixed(round) + ' ' + sizes[bucket];\n}\n\n// Shorten a file name to be under maxLength by clipping out the middle.\nexport function shortenFileName(filename, maxLength) {\n  if (typeof filename != 'string') {\n    return filename;\n  }\n  return filename.length > maxLength ?\n    filename.slice(0, maxLength/2 - 1) + '…' + filename.slice(1 - maxLength/2) : filename;\n}\n\n// Get 32 bit integer hash value for a string. Ideally it should produce the same value\n// as Java's String#hash().\nfunction stringToColorHash(value) {\n  let hash = 0;\n  value = '' + value;\n  for (let i = 0; i < value.length; i++) {\n    hash = ((hash << 5) - hash) + value.charCodeAt(i);\n    hash = hash & hash; // Convert to 32bit integer\n  }\n  return hash;\n}\n\n// User avatar letter color id.\nexport function letterTileColorId(userId) {\n  return Math.abs(stringToColorHash(userId)) % 16;\n}\n\n// Converts user or topic ID to a CSS color class. Ideally it should produce the same color value as Java version.\n// params:\n// - {string} id: user or topic ID\n// - {boolean} light: light or dark version of the color.\n// - {boolean} fg: foreground (text) or background color.\nexport function idToColorClass(id, light, fg) {\n  return (light ? 'lt-' : 'dk-') + (fg ? 'fg-' : 'bg-') + letterTileColorId(id);\n}\n","// Odds and ends\n\nimport Tinode from 'tinode-sdk';\n\n// Make shortcut icon appear with a green dot + show unread count in title.\nexport function updateFavicon(count) {\n  const oldIcon = document.getElementById('shortcut-icon');\n  const head = document.head || document.getElementsByTagName('head')[0];\n  const newIcon = document.createElement('link');\n  newIcon.type = 'image/png';\n  newIcon.id = 'shortcut-icon';\n  newIcon.rel = 'shortcut icon';\n  newIcon.href = 'img/logo32x32' + (count > 0 ? 'a' : '') + '.png';\n  if (oldIcon) {\n    head.removeChild(oldIcon);\n  }\n  head.appendChild(newIcon);\n\n  document.title = (count > 0 ? '('+count+') ' : '') + 'Tinode';\n}\n\n// Create theCard which represents user's or topic's \"public\" info.\nexport function theCard(fn, imageUrl, imageMimeType, note) {\n  let card = null;\n  fn = fn && fn.trim();\n  note = note && note.trim();\n\n  if (fn) {\n    card = {\n      fn: fn\n    };\n  }\n\n  if (typeof note == 'string') {\n    card = card || {};\n    card.note = note ? note : Tinode.DEL_CHAR;\n  }\n\n  if (imageUrl) {\n    card = card || {};\n    let mimeType = imageMimeType;\n    // Is this a data URL \"data:[<mediatype>][;base64],<data>\"?\n    const matches = /^data:(image\\/[-a-z0-9+.]+)?(;base64)?,/i.exec(imageUrl);\n    if (matches) {\n      mimeType = matches[1];\n      card.photo = {\n        data: imageUrl.substring(imageUrl.indexOf(',') + 1),\n        ref: Tinode.DEL_CHAR\n      };\n    } else {\n      card.photo = {\n        data: Tinode.DEL_CHAR,\n        ref: imageUrl\n      };\n    }\n    card.photo.type = (mimeType || 'image/jpeg').substring('image/'.length);\n  }\n\n  return card;\n}\n\n// Deep-shallow compare two arrays: shallow compare each element.\nexport function arrayEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (!Array.isArray(a) || !Array.isArray(b)) {\n    return false;\n  }\n\n  // Compare lengths first.\n  if (a.length != b.length) {\n    return false;\n  }\n  // Order of elements is ignored.\n  a.sort();\n  b.sort();\n  for (let i = 0, l = a.length; i < l; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Checks (loosely) if the given string is a phone. If so, returns the phone number in a format\n// as close to E.164 as possible.\nexport function asPhone(val) {\n  val = val.trim();\n  if (/^(?:\\+?(\\d{1,3}))?[- (.]*(\\d{3})[- ).]*(\\d{3})[- .]*(\\d{2})[- .]*(\\d{2})?$/.test(val)) {\n    return val.replace(/[- ().]*/, '');\n  }\n  return null;\n}\n\n// Checks (loosely) if the given string is an email. If so returns the email.\nexport function asEmail(val) {\n  val = val.trim();\n  if (/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(val)) {\n    return val;\n  }\n  return null;\n}\n\n// Checks if URL is a relative url, i.e. has no 'scheme://', including the case of missing scheme '//'.\n// The scheme is expected to be RFC-compliant, e.g. [a-z][a-z0-9+.-]*\n// example.html - ok\n// https:example.com - not ok.\n// http:/example.com - not ok.\n// ' ↲ https://example.com' - not ok. (↲ means carriage return)\nexport function isUrlRelative(url) {\n  return url && !/^\\s*([a-z][a-z0-9+.-]*:|\\/\\/)/im.test(url);\n}\n\n// Ensure URL does not present an XSS risk. Optional allowedSchemes may contain an array of\n// strings with permitted URL schemes, such as ['ftp', 'ftps']; otherwise accept http and https only.\nexport function sanitizeUrl(url, allowedSchemes) {\n  if (typeof url != 'string') {\n    return url;\n  }\n\n  // Strip control characters and whitespace. They are not valid URL characters anyway.\n  url = url.replace(/[^\\x20-\\x7E]/gmi, '').trim();\n\n  // Relative URLs are safe.\n  // Relative URL does not start with ':', abcd123: or '//'.\n  if (!/^([a-z][a-z0-9+.-]*:|\\/\\/)/i.test(url)) {\n    return url;\n  }\n\n  // Blob URLs are safe.\n  if (/^blob:http/.test(url)) {\n    return url;\n  }\n\n  // Absolute URL. Accept only safe schemes, or no scheme.\n  const schemes = Array.isArray(allowedSchemes) ? allowedSchemes.join('|') : 'http|https';\n  const re = new RegExp('^((' + schemes + '):|//)', 'i');\n  if (!re.test(url)) {\n    return null;\n  }\n\n  return url;\n}\n\n// Ensure URL is suitable for <img src=\"url\"> field: the URL must be a relative URL or\n// have http:, https:, blob: or data: scheme.\n// In case of data: scheme, the URL must start with a 'data:image/XXXX;base64,'.\nexport function sanitizeImageUrl(url) {\n  if (!url) {\n    return null;\n  }\n\n  const sanitizedUrl = sanitizeUrl(url);\n  if (sanitizedUrl) {\n    return sanitizedUrl;\n  }\n\n  // Is this a data: URL of an image?\n  if (/data:image\\/[a-z0-9.-]+;base64,/i.test(url.trim())) {\n    return url;\n  }\n\n  return null;\n}\n\n// Given message's received status, return name and color of a delivery indicator icon.\nexport function deliveryMarker(received) {\n  switch (received) {\n    case Tinode.MESSAGE_STATUS_SENDING:\n      return { name: 'access_time' }; // watch face\n    case Tinode.MESSAGE_STATUS_FAILED:\n      return { name: 'warning', color: 'danger-color' }; // yellow icon /!\\\n    case Tinode.MESSAGE_STATUS_SENT:\n      return { name: 'done' }; // checkmark\n    case Tinode.MESSAGE_STATUS_RECEIVED:\n      return { name: 'done_all' }; // double checkmark\n    case Tinode.MESSAGE_STATUS_READ:\n      return { name: 'done_all', color: 'blue' }; // blue double checkmark\n  }\n  return null;\n}\n\n// Wraps a promise to make it cancelable.\n// The parameter can be either a promise or an error. If it's an error, the wrapped promise is\n// created in a rejected state.\nexport function cancelablePromise(promise) {\n  let hasCanceled = false;\n\n  const wrappedPromise = promise instanceof Error ?\n    Promise.reject(promise) :\n    new Promise((resolve, reject) => {\n      promise.then(\n        result => hasCanceled ? reject({isCanceled: true}) : resolve(result),\n        error => hasCanceled ? reject({isCanceled: true}) : reject(error)\n      );\n    });\n\n  return {\n    promise: wrappedPromise,\n    cancel() {\n      hasCanceled = true;\n    },\n  };\n};\n","import React from 'react';\n\nimport Tinode from 'tinode-sdk';\n\nimport { idToColorClass } from '../lib/strformat.js';\nimport { sanitizeImageUrl } from '../lib/utils.js';\n\nexport default class LetterTile extends React.PureComponent {\n  render() {\n    let avatar;\n    if (this.props.avatar === true) {\n      const isGroup = Tinode.isGroupTopicName(this.props.topic);\n      const iconColor = idToColorClass(this.props.topic, isGroup);\n      if (this.props.topic && this.props.title && this.props.title.trim()) {\n        const letter = this.props.title.trim().charAt(0);\n        const className = 'lettertile ' + iconColor + (this.props.deleted ? ' disabled' : '');\n        avatar = (<div className={className}><div>{letter}</div></div>)\n      } else {\n        const className = 'material-icons ' + iconColor + (this.props.deleted ? ' disabled' : '');\n        avatar = isGroup ? <i className={className}>group</i> : <i className={className}>person</i>;\n      }\n    } else if (this.props.avatar) {\n      const url = this.props.tinode.authorizeURL(sanitizeImageUrl(this.props.avatar));\n      // If avatar image is invalid, show a placeholder.\n      const className = 'avatar' + (this.props.deleted ? ' deleted' : '');\n      avatar = <img className={className} alt=\"avatar\" src={url}\n        onError={(e)=>{e.target.onerror = null; e.target.src=\"../img/broken_image.png\"}} />;\n    } else {\n      avatar = null;\n    }\n    return avatar;\n  }\n}\n","// The counter of unread messages in the topic.\nimport React from 'react';\n\nexport default class UnreadBadge extends React.PureComponent {\n  render() {\n    return (this.props.count > 0 ?\n      <span className=\"unread\">{this.props.count > 9 ? \"9+\" : this.props.count}</span>\n      : null);\n  }\n};\n","// Image with a placeholder which is replaced when the promise is resolved.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class LazyImage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      src: 'img/placeholder.png',\n      style: Object.assign({padding: '4px'}, this.props.style),\n      className: this.props.className,\n      alt: this.props.alt,\n      onClick: this.props.onClick,\n    };\n  }\n\n  componentDidMount() {\n    // whenDone is a wrapper around an actual promise to be able to cancel it.\n    this.props.whenDone\n      .promise\n      .then(data => this.setState({src: data.src, style: {...this.state.style, padding: 0}}))\n      .catch(() => this.setState({src: 'img/broken_image.png'}));\n  }\n\n  componentWillUnmount() {\n    this.props.whenDone.cancel();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.whenDone != this.props.whenDone) {\n      this.setState({src: 'img/placeholder.png', style: {...this.state.style, padding: '4px'}});\n      this.props.whenDone\n        .promise\n        .then(data => this.setState({src: data.src, style: {...this.state.style, padding: 0}}))\n        .catch(() => this.setState({src: 'img/broken_image.png'}));\n    }\n  }\n\n  render() {\n    return React.createElement('img', this.state);\n  }\n};\n","// File uload/download progress indicator with a cancel inside.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class FileProgress extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"uploader\">\n        <div><span style={{width: (this.props.progress * 100) + \"%\"}}></span></div>\n        {this.props.progress < 0.999 ?\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n            <i className=\"material-icons\">close</i> <FormattedMessage id=\"action_cancel\"\n              defaultMessage=\"cancel\" description=\"Call to action [cancel]\" />\n          </a>\n          :\n          <FormattedMessage id=\"upload_finishing\" defaultMessage=\"finishing...\"\n            description=\"Notification that upload is finishing\" />\n        }\n      </div>\n    );\n  }\n}\n","// Image view with progress bar and a cancel button.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\n\nexport default class UploadingImage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"inline-image\">\n        {React.createElement('img', this.props)}\n        <div className=\"rounded-container\">\n          <FileProgress progress={this.props.progress} onCancel={this.props.onCancelUpload} />\n        </div>\n      </div>\n    );\n  }\n};\n","// File and image helper functions.\n\n// Supported image MIME types and corresponding file extensions.\nexport const SUPPORTED_IMAGE_FORMATS = ['image/jpeg', 'image/gif', 'image/png', 'image/svg', 'image/svg+xml'];\nexport const MIME_EXTENSIONS         = ['jpg',        'gif',       'png',       'svg',       'svg'];\n\n// Get an URL from a theCard photo: either create a data: URL or return reference URL.\nexport function makeImageUrl(photo) {\n  if (photo && typeof photo == 'object') {\n    if (photo.ref) {\n      return photo.ref\n    }\n    if (photo.data && photo.type) {\n      const mime = photo.type.startsWith('image/') ? photo.type : ('image/' + photo.type);\n      return 'data:' + mime + ';base64,' + photo.data;\n    }\n  }\n  return null;\n}\n\n// Calculate linear dimensions for scaling image down to fit under a certain size.\n// Returns an object which contains destination sizes, source sizes, and offsets\n// into source (when making square images).\nexport function fitImageSize(width, height, maxWidth, maxHeight, forceSquare) {\n  // Sanitize input\n  width = width | 0;\n  height = height | 0;\n  maxWidth = maxWidth | 0;\n  maxHeight = maxHeight | 0;\n\n  if (width <= 0 || height <= 0 || maxWidth <= 0 || maxHeight <= 0) {\n    return null;\n  }\n\n  if (forceSquare) {\n    maxWidth = maxHeight = Math.min(maxWidth, maxHeight);\n  }\n\n  const scale = Math.min(\n    Math.min(width, maxWidth) / width,\n    Math.min(height, maxHeight) / height\n  );\n\n  const size = {\n    dstWidth: (width * scale) | 0,\n    dstHeight: (height * scale) | 0,\n  };\n\n  if (forceSquare) {\n    // Also calculate parameters for making the image square.\n    size.dstWidth = size.dstHeight = Math.min(size.dstWidth, size.dstHeight);\n    size.srcWidth = size.srcHeight = Math.min(width, height);\n    size.xoffset = ((width - size.srcWidth) / 2) | 0;\n    size.yoffset = ((height - size.srcWidth) / 2) | 0;\n  } else {\n    size.xoffset = size.yoffset = 0;\n    size.srcWidth = width;\n    size.srcHeight = height;\n  }\n  return size;\n}\n\n// Ensure file's extension matches mime content type\nexport function fileNameForMime(fname, mime) {\n  const idx = SUPPORTED_IMAGE_FORMATS.indexOf(mime);\n  if (idx < 0 || !fname) {\n    // Unknown mime or empty name.\n    return fname;\n  }\n  const ext = MIME_EXTENSIONS[idx];\n\n  const at = fname.lastIndexOf('.');\n  if (at >= 0) {\n    fname = fname.substring(0, at);\n  }\n  return fname + '.' + ext;\n}\n\n// Scale uploaded image to fit under certain dimensions and byte size, optionally constraining to a square.\n// Returns a promise which is resolven on success or rejected on failure.\nexport function imageScaled(fileOrBlob, maxWidth, maxHeight, maxSize, forceSquare) {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    img.crossOrigin = 'Anonymous';\n    img.onerror = function(err) {\n      reject(new Error(\"Image format unrecognized\"));\n    }\n    img.onload = async function() {\n      // Once the image is loaded, the URL is no longer needed.\n      URL.revokeObjectURL(img.src);\n\n      // Calculate the desired image dimensions.\n      const dim = fitImageSize(img.width, img.height, maxWidth, maxHeight, forceSquare);\n      if (!dim) {\n        reject(new Error(\"Invalid image\"));\n        return;\n      }\n      let canvas = document.createElement('canvas');\n      canvas.width = dim.dstWidth;\n      canvas.height = dim.dstHeight;\n      let ctx = canvas.getContext('2d');\n      ctx.imageSmoothingEnabled = true;\n      ctx.drawImage(img, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n        0, 0, dim.dstWidth, dim.dstHeight);\n\n      const mime = SUPPORTED_IMAGE_FORMATS.includes(fileOrBlob.type) ? fileOrBlob.type : 'image/jpeg';\n      // Generate blob to check size of the image.\n      let blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n      if (!blob) {\n        reject(new Error(\"Unsupported image format\"));\n        return;\n      }\n      // Ensure the image is not too large. Shrink the image keeping the aspect ratio.\n      // Do nothing if maxsize is <= 0.\n      while (maxSize > 0 && blob.length > maxSize) {\n        dim.dstWidth = (dim.dstWidth * 0.70710678118) | 0;\n        dim.dstHeight = (dim.dstHeight * 0.70710678118) | 0;\n        canvas.width = dim.dstWidth;\n        canvas.height = dim.dstHeight;\n        ctx = canvas.getContext('2d');\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.drawImage(img, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n          0, 0, dim.dstWidth, dim.dstHeight);\n        blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n      }\n\n      canvas = null;\n      resolve({mime: mime, blob: blob, width: dim.dstWidth, height: dim.dstHeight, name: fileNameForMime(fileOrBlob.name, mime)});\n    };\n    img.src = URL.createObjectURL(fileOrBlob);\n  });\n}\n\n// Scale and crop image according to specified dimensions.\n// The coordinates are in unscaled image pixels, i.e. cut the rectangle first then scale it.\n// returns a promise.\nexport function imageCrop(mime, objURL, left, top, width, height, scale) {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    img.crossOrigin = 'Anonymous';\n    img.onerror = (err) => {\n      reject(new Error(\"Image format unrecognized\"));\n    };\n    img.onload = () => {\n      // Once the image is loaded, the URL is no longer needed.\n      URL.revokeObjectURL(img.src);\n\n      let canvas = document.createElement('canvas');\n      canvas.width = width * scale;\n      canvas.height = height * scale;\n      let ctx = canvas.getContext('2d');\n      ctx.imageSmoothingEnabled = true;\n      ctx.drawImage(img, left, top, width, height, 0, 0, canvas.width, canvas.height);\n\n      mime = SUPPORTED_IMAGE_FORMATS.includes(mime) ? mime : 'image/jpeg';\n      // Generate blob to check size of the image.\n      canvas.toBlob((blob) => {\n        // Allow GC.\n        canvas = null;\n        if (blob) {\n          resolve({mime: mime, blob: blob, width: width, height: height});\n        } else {\n          reject(new Error(\"Unsupported image format\"));\n        }\n      }, mime);\n    };\n    img.src = objURL;\n  });\n}\n\n// Convert file to base64 string.\nexport function fileToBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onerror = (evt) => {\n      reject(reader.error);\n    };\n    reader.onload = () => {\n      resolve({mime: file.type, bits: reader.result.split(',')[1], name: file.name});\n    };\n    reader.readAsDataURL(file);\n  });\n}\n\n// Convert Blob to base64 string. Returns a promise resolved with the base64 string and mime.\nexport function blobToBase64(blob) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onerror = (evt) => {\n      reject(reader.error);\n    };\n    reader.onload = () => {\n      resolve({mime: blob.type, bits: reader.result.split(',')[1]});\n    };\n    reader.readAsDataURL(blob);\n  });\n}\n\n// File pasted from the clipboard. It's either an inline image or a file attachment.\nexport function filePasted(event, onImageSuccess, onAttachmentSuccess, onError) {\n  const items = (event.clipboardData || event.originalEvent.clipboardData || {}).items;\n  if (!Array.isArray(items)) {\n    return false;\n  }\n\n  for (let i in items) {\n    const item = items[i];\n    if (item.kind === 'file') {\n      const file = item.getAsFile();\n      if (!file) {\n        console.error(\"Failed to get file object from pasted file item\", item.kind, item.type);\n        onError(\"Failed to get file object from pasted file item\");\n        continue;\n      }\n      if (file.type && file.type.split('/')[0] == 'image') {\n        onImageSuccess(file);\n      } else {\n        onAttachmentSuccess(file);\n      }\n      // Indicate that the pasted data contains a file.\n      return true;\n    }\n  }\n  // No file found.\n  return false;\n}\n\n// Get mime type from data URL header.\nexport function getMimeType(header) {\n  var mime = /^data:(image\\/[-+a-z0-9.]+);base64/.exec(header);\n  return (mime && mime.length > 1) ? mime[1] : null;\n}\n\n// Given length of a binary object in bytes, calculate the length after\n// base64 encoding.\nexport function base64EncodedLen(n) {\n  return Math.floor((n + 2) / 3) * 4;\n}\n\n// Given length of a base64-encoded object, calculate decoded size of the\n// pbject in bytes.\nexport function base64DecodedLen(n) {\n  return Math.floor(n / 4) * 3;\n}\n\n// Re-encode string to standard base64 encoding with padding.\n// The string may be base64-URL encoded without the padding.\nexport function base64ReEncode(str) {\n  if (str) {\n    str = str.replace(/-/g, '+').replace(/_/g, '/');\n    try {\n      str = btoa(atob(str));\n    } catch(err) {\n      console.error(\"Failed to base64 re-encode string.\", err);\n      str = null;\n    }\n  }\n  return str;\n}\n\n// Convert a base64 encoded string with the provided mime type into a Blob.\nexport function base64ToBlob(str, mime) {\n  if (!str) {\n    return null;\n  }\n\n  try {\n    // Make blob.\n    const bin = atob(str);\n    const length = bin.length;\n    const buf = new ArrayBuffer(length);\n    const arr = new Uint8Array(buf);\n    for (let i = 0; i < length; i++) {\n      arr[i] = bin.charCodeAt(i);\n    }\n\n    return new Blob([buf], { type: mime });\n  } catch(err) {\n    console.error(\"Failed to convert base64 to blob: \", err);\n  }\n\n  return null;\n}\n","import React from 'react';\nimport { defineMessages } from 'react-intl';\n\nimport { Drafty } from 'tinode-sdk';\n\nimport LazyImage from '../widgets/lazy-image.jsx'\nimport UploadingImage from '../widgets/uploading-image.jsx'\n\nimport { IMAGE_THUMBNAIL_DIM, BROKEN_IMAGE_SIZE, REM_SIZE } from '../config.js';\nimport { base64ToBlob, blobToBase64, fitImageSize, imageScaled } from './blob-helpers.js';\nimport { idToColorClass, shortenFileName } from './strformat.js';\nimport { cancelablePromise, sanitizeImageUrl } from './utils.js';\n\nconst messages = defineMessages({\n  drafty_form: {\n    id: 'drafty_form',\n    defaultMessage: 'Form: ',\n    description: 'Comment for form in drafty preview'\n  },\n  drafty_attachment: {\n    id: 'drafty_attachment',\n    defaultMessage: 'Attachment',\n    description: 'Comment for attachment in drafty preview'\n  },\n  drafty_image: {\n    id: 'drafty_image',\n    defaultMessage: 'Picture',\n    description: 'Comment for embedded images in drafty preview'\n  }\n});\n\n// Size the already scaled image.\nfunction handleImageData(el, data, attr) {\n  if (!data) {\n    attr.src = 'img/broken_image.png';\n    attr.style = {\n      width: IMAGE_THUMBNAIL_DIM + 'px',\n      height: IMAGE_THUMBNAIL_DIM + 'px',\n    };\n    return el;\n  }\n\n  attr.className = 'inline-image';\n  const dim = fitImageSize(data.width, data.height,\n    this.viewportWidth > 0 ? Math.min(this.viewportWidth - REM_SIZE * 6.5, REM_SIZE * 34.5) :\n      REM_SIZE * 34.5, REM_SIZE * 24, false) ||\n      {dstWidth: BROKEN_IMAGE_SIZE, dstHeight: BROKEN_IMAGE_SIZE};\n  attr.style = {\n    width: dim.dstWidth + 'px',\n    height: dim.dstHeight + 'px',\n    // Looks like a Chrome bug: broken image does not respect 'width' and 'height'.\n    minWidth: dim.dstWidth + 'px',\n    minHeight: dim.dstHeight + 'px'\n  };\n  if (!Drafty.isProcessing(data)) {\n    attr.src = this.authorizeURL(sanitizeImageUrl(attr.src));\n    attr.alt = data.name;\n    if (attr.src) {\n      if (Math.max(data.width || 0, data.height || 0) > IMAGE_THUMBNAIL_DIM) {\n        // Allow previews for large enough images.\n        attr.onClick = this.onImagePreview;\n        attr.className += ' image-clickable';\n      }\n      attr.loading = 'lazy';\n    } else {\n      attr.src = 'img/broken_image.png';\n    }\n  } else {\n    // Use custom element instead of <img>.\n    el = UploadingImage;\n  }\n\n  return el;\n}\n\nfunction quotedImage(data) {\n  let promise;\n  // Get the blob from the image data.\n  if (data.val) {\n    const blob = base64ToBlob(data.val, data.mime);\n    promise = blob ? Promise.resolve(blob) : Prmise.reject(new Error(\"Invalid image\"));\n  } else {\n    promise = fetch(this.authorizeURL(sanitizeImageUrl(data.ref))).then(evt => {\n      if (evt.ok) {\n        return evt.blob();\n      } else {\n        throw new Error(`Image fetch unsuccessful: ${evt.status} ${evt.statusText}`);\n      }\n    });\n  }\n\n  // Scale the blob.\n  return promise\n    .then(blob => {\n      return imageScaled(blob, IMAGE_THUMBNAIL_DIM, IMAGE_THUMBNAIL_DIM, -1, true)\n    }).then(scaled => {\n      data.mime = scaled.mime;\n      data.size = scaled.blob.size;\n      data.width = scaled.width;\n      data.height = scaled.height;\n      delete data.ref;\n      // Keeping the original file name, if provided: ex.data.name;\n\n      return blobToBase64(scaled.blob);\n    }).then(b64 => {\n      data.val = b64.bits;\n      return data;\n    }).catch(err => {\n      delete data.val;\n      delete data.name;\n      data.width = IMAGE_THUMBNAIL_DIM;\n      data.height = IMAGE_THUMBNAIL_DIM;\n      data.maxWidth = IMAGE_THUMBNAIL_DIM;\n      data.maxHeight = IMAGE_THUMBNAIL_DIM;\n      // Rethrow.\n      throw err;\n    });\n}\n\n// The main Drafty formatter: converts Drafty elements into React classes. 'this' is set by the caller.\n// 'this' must contain:\n//    viewportWidth: this.props.viewportWidth;\n//    authorizeURL: this.props.tinode.authorizeURL\n//    onImagePreview: this.handleImagePreview\n//    onFormButtonClick: this.handleFormButtonClick\n//    onQuoteClick: this.handleQuoteClick (optional)\nexport function fullFormatter(style, data, values, key, stack) {\n  if (stack.includes('QQ')) {\n    return quoteFormatter.call(this, style, data, values, key);\n  }\n\n  if (!style) {\n    // Unformatted.\n    return values;\n  }\n\n  let el = Drafty.tagName(style);\n  const attr = Drafty.attrValue(style, data) || {};\n  attr.key = key;\n  switch (style) {\n    case 'BR':\n      values = null;\n      break;\n    case 'HL':\n      // Highlighted text. Assign class name.\n      attr.className = 'highlight';\n      break;\n    case 'HD':\n      el = null;\n      values = null;\n      break;\n    case 'IM':\n      // Additional processing for images\n      el = handleImageData.call(this, el, data, attr);\n      // Image element cannot have content.\n      values = null;\n      break;\n    case 'BN':\n      // Button\n      attr.onClick = this.onFormButtonClick;\n      let inner = React.Children.map(values, (child) => {\n        return typeof child == 'string' ? child : undefined;\n      });\n      if (!inner || inner.length == 0) {\n        inner = [attr.name]\n      }\n      // Get text which will be sent back when the button is clicked.\n      attr['data-title'] = inner.join('');\n      break;\n    case 'MN':\n      // Mention\n      attr.className = 'mention'\n      if (data) {\n        attr.className += ' ' + idToColorClass(data.val, false, true);\n      }\n      break;\n    case 'FM':\n      // Form\n      attr.className = 'bot-form';\n      break;\n    case 'RW':\n      // Form element formatting is dependent on element content.\n      break;\n    case 'QQ':\n      // Quote/citation.\n      attr.className = 'reply-quote'\n      attr.onClick = this.onQuoteClick;\n      break;\n    default:\n      if (el == '_UNKN') {\n        // Unknown element.\n        el = React.Fragment;\n        values = [<i className=\"material-icons gray\">extension</i>, ' '].concat(values || []);\n      }\n      break;\n  }\n  if (!el) {\n    return values;\n  }\n  return React.createElement(el, attr, values);\n}\n\n// Converts Drafty object into a one-line preview. 'this' is set by the caller.\n// 'this' must contain:\n//    formatMessage: this.props.intl.formatMessage\n//    messages: formatjs messages defined with defineMessages.\nexport function previewFormatter(style, data, values, key) {\n  if (!style) {\n    // Unformatted.\n    return values;\n  }\n\n  let el = Drafty.tagName(style);\n  const attr = { key: key };\n  switch (style) {\n    case 'BR':\n      // Replace new line with a space.\n      el = React.Fragment;\n      values = [' '];\n      break;\n    case 'HL':\n      // Make highlight less prominent in preview.\n      attr.className = 'highlight preview';\n      break;\n    case 'LN':\n    case 'MN':\n      // Disable links in previews.\n      el = 'span';\n      break;\n    case 'IM':\n      // Replace image with '[icon] Image'.\n      el = React.Fragment;\n      values = [<i key=\"im\" className=\"material-icons\">photo</i>, this.formatMessage(messages.drafty_image)];\n      break;\n    case 'BN':\n      el = 'span';\n      attr.className = 'flat-button faux';\n      break;\n    case 'FM':\n      el = React.Fragment;\n      values = [<i key=\"fm\" className=\"material-icons\">dashboard</i>,\n        this.formatMessage(messages.drafty_form)].concat(' ', values || []);\n      break;\n    case 'RW':\n      el = React.Fragment;\n      break;\n    case 'EX':\n      if (data) {\n        if (data.mime == 'application/json') {\n          // Ignore JSON attachments: they are form response payloads.\n          return null;\n        }\n        // Clear payload.\n        delete data.val;\n        delete data.ref;\n      }\n      el = React.Fragment;\n      values = [<i key=\"ex\" className=\"material-icons\">attachment</i>, this.formatMessage(messages.drafty_attachment)];\n      break;\n    case 'QQ':\n    case 'HD':\n      el = null;\n      values = null;\n      break;\n    default:\n      if (el == '_UNKN') {\n        el = React.Fragment;\n        values = [<i key=\"unkn\" className=\"material-icons\">extension</i>, ' '].concat(values || []);\n      }\n      break;\n  }\n  if (!el) {\n    return values;\n  }\n  return React.createElement(el, attr, values);\n};\n\n// Converts Drafty object into a quoted reply. 'this' is set by the caller.\nfunction inlineImageAttr(attr, data) {\n  attr.style = {\n    width: IMAGE_THUMBNAIL_DIM + 'px',\n    height: IMAGE_THUMBNAIL_DIM + 'px',\n    maxWidth: IMAGE_THUMBNAIL_DIM + 'px',\n    maxHeight: IMAGE_THUMBNAIL_DIM + 'px',\n  }\n  attr.className = 'inline-image';\n  attr.alt = this.formatMessage(messages.drafty_image);\n  if (!data) {\n    attr.src = 'img/broken_image.png';\n  }\n  attr.title = attr.alt;\n  return attr;\n}\n\n// Displays a portion of Drafty within 'QQ' quotes. 'this' is set by the caller.\n// 'this' must contain:\n//    formatMessage: this.props.intl.formatMessage\n//    messages: formatjs messages defined with defineMessages.\n//    authorizeURL: this.props.tinode.authorizeURL\n//    onQuoteClick: this.handleQuoteClick (optional)\nfunction quoteFormatter(style, data, values, key) {\n  if (['BR', 'EX', 'IM', 'MN'].includes(style)) {\n    let el = Drafty.tagName(style);\n    let attr = Drafty.attrValue(style, data) || {};\n    attr.key = key;\n    switch(style) {\n      case 'BR':\n        values = null;\n        break;\n      case 'IM':\n        attr = inlineImageAttr.call(this, attr, data);\n        values = [React.createElement('img', attr, null), ' ', attr.alt];\n        el = React.Fragment;\n        // Fragment attributes.\n        attr = {key: key};\n        break;\n      case 'MN':\n        el = 'span';\n        attr.className = 'mention'\n        if (data) {\n          attr.className += ' ' + idToColorClass(data.val, false, true);\n        }\n        break;\n      case 'EX':\n        let fname;\n        if (data) {\n          if (data.mime == 'application/json') {\n            // Ignore JSON attachments: they are form response payloads.\n            return null;\n          }\n          fname = data.name;\n          // Clear payload.\n          delete data.val;\n          delete data.ref;\n        }\n        el = React.Fragment;\n        values = [<i key=\"ex\" className=\"material-icons\">attachment</i>,\n          shortenFileName(fname, 16) || this.formatMessage(messages.drafty_attachment)];\n        break;\n    }\n    return React.createElement(el, attr, values);\n  }\n  return previewFormatter.call(this, style, data, values, key);\n}\n\n// Create image thumbnail suitable for inclusion in a quote.\nfunction quoteImage(data) {\n  let promise;\n  // Get the blob from the image data.\n  if (data.val) {\n    const blob = base64ToBlob(data.val, data.mime);\n    if (!blob) {\n      throw new Error(\"Invalid image\");\n    }\n    promise = Promise.resolve(blob);\n  } else if (data.ref) {\n    promise = fetch(this.authorizeURL(sanitizeImageUrl(data.ref)))\n      .then(evt => {\n        if (evt.ok) {\n          return evt.blob();\n        } else {\n          throw new Error(`Image fetch unsuccessful: ${evt.status} ${evt.statusText}`);\n        }\n      });\n  } else {\n    throw new Error(\"Missing image data\");\n  }\n\n  // Scale the blob.\n  return promise\n    .then(blob => {\n      // Cut the square from the center of the image and shrink it.\n      return imageScaled(blob, IMAGE_THUMBNAIL_DIM, IMAGE_THUMBNAIL_DIM, -1, true)\n    }).then(scaled => {\n      data.mime = scaled.mime;\n      data.size = scaled.blob.size;\n      data.width = scaled.width;\n      data.height = scaled.height;\n      delete data.ref;\n      // Keeping the original file name, if provided: ex.data.name;\n\n      data.src = URL.createObjectURL(scaled.blob);\n      return blobToBase64(scaled.blob);\n    }).then(b64 => {\n      data.val = b64.bits;\n      return data;\n    }).catch(err => {\n      delete data.val;\n      delete data.src;\n      data.width = IMAGE_THUMBNAIL_DIM;\n      data.height = IMAGE_THUMBNAIL_DIM;\n      // Rethrow.\n      throw err;\n    });\n}\n\n// Create a preview of a reply.\nexport function replyFormatter(style, data, values, key, stack) {\n  if (style == 'IM') {\n    const attr = inlineImageAttr.call(this, {key: key}, data);\n    let loadedPromise;\n    try {\n      loadedPromise = cancelablePromise(quoteImage.call(this, data));\n    } catch (error) {\n      loadedPromise = cancelablePromise(error);\n    }\n    attr.whenDone = loadedPromise;\n    values = [React.createElement(LazyImage, attr, null), ' ', attr.alt];\n    return React.createElement(React.Fragment, {key: key}, values);\n  } else if (style == 'QQ') {\n    if (stack.includes('QQ')) {\n      // Quote inside quote when forwarding a message.\n      return React.createElement('span', {key: key},\n        [<i key=\"qq\" className=\"material-icons\">format_quote</i>, ' ']);\n    }\n\n    const attr = Drafty.attrValue('QQ', data) || {};\n    attr.key = key;\n    attr.className = 'reply-quote'\n    return React.createElement(Drafty.tagName('QQ'), attr, values);\n  }\n  return quoteFormatter.call(this, style, data, values, key);\n}\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport ContactBadges from './contact-badges.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport UnreadBadge from './unread-badge.jsx';\n\nimport { Drafty } from 'tinode-sdk';\n\nimport { previewFormatter } from '../lib/formatters.js';\nimport { deliveryMarker } from '../lib/utils.js';\n\nclass Contact extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.props.onSelected) {\n      // Index this.props.index is used by GroupManager.\n      this.props.onSelected(this.props.item, this.props.index);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.props.item, y: e.pageY, x: e.pageX });\n  }\n\n  render() {\n    let title = this.props.title;\n    if (!title) {\n      title = <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n        description=\"Title shown when the topic has no name\" /></i>;\n    } else if (title.length > 30) {\n      // FIXME: this is probably wrong for RTL languages.\n      title = title.substring(0, 28) + '…';\n    }\n    const online = this.props.now ? 'online' : 'offline';\n    const avatar = this.props.avatar ? this.props.avatar : true;\n    const badges = this.props.badges ? this.props.badges.slice() : [];\n    const icon_badges = [];\n    if (this.props.isVerified) {\n      icon_badges.push({icon: 'verified', color: 'verified-color'});\n    }\n    if (this.props.isStaff) {\n      icon_badges.push({icon: 'staff', color: 'staff-color'});\n    }\n    if (this.props.isDangerous) {\n      icon_badges.push({icon: 'dangerous', color: 'danger-color'});\n    }\n    if (this.props.acs) {\n      if (this.props.showMode) {\n        badges.push({name: this.props.acs.getMode(), key: 'mode'});\n      }\n      if (this.props.acs.isMuted()) {\n        icon_badges.push({icon: 'muted'});\n      }\n      if (!this.props.acs.isJoiner()) {\n        icon_badges.push({icon: 'banned'});\n      }\n    }\n\n    // The this.props.preview contains alreay shortened Drafty or string.\n    let preview;\n    if (typeof this.props.preview == 'string') {\n      preview = this.props.preview;\n    } else if (Drafty.isValid(this.props.preview)) {\n      preview = React.createElement(React.Fragment, null, Drafty.format(this.props.preview, previewFormatter,\n        {formatMessage: this.props.intl.formatMessage}));\n    } else if (this.props.preview) {\n      preview =\n        <><i className=\"material-icons gray\">warning_amber</i> <i className=\"gray\">\n          <FormattedMessage id=\"invalid_content\"\n            defaultMessage=\"invalid content\" description=\"Shown when the message is unreadable\" /></i>\n        </>;\n    }\n\n    const icon = deliveryMarker(this.props.received);\n    const marker = icon ? <i className={'material-icons small space-right' +\n      (icon.color ? ' ' + icon.color : '')}>{icon.name}</i> : null;\n    const titleClass = 'contact-title' + (this.props.deleted ? ' deleted' : '');\n\n    return (\n      <li className={!this.props.showCheckmark && this.props.selected ? 'selected' : null} onClick={this.handleClick}>\n        <div className=\"avatar-box\">\n          <LetterTile\n            tinode={this.props.tinode}\n            avatar={avatar}\n            title={this.props.title}\n            topic={this.props.item}\n            deleted={this.props.deleted} />\n          {this.props.deleted ? <i className=\"deleted material-icons\">cancel</i> :\n            this.props.showOnline ? <span className={online} /> :\n            (this.props.showCheckmark && this.props.selected) ?\n            <i className=\"checkmark material-icons\">check_circle</i>\n            : null}\n        </div>\n        <div className=\"text-box\">\n          <div><span className={titleClass}>{title}</span>\n            {this.props.isChannel ? <img src=\"/img/channel.png\" className=\"channel\" alt=\"channel\" /> : null}\n            <ContactBadges badges={icon_badges} />\n            {!this.props.deleted ? <UnreadBadge count={this.props.unread} /> : null}\n          </div>\n          {this.props.showMode ?\n            <span><ContactBadges badges={badges} /></span> :\n            this.props.small ? null : <div className=\"contact-comment\">{marker}<span>{preview || this.props.comment || '\\u00A0'}</span></div>}\n        </div>\n        {this.props.showContextMenu ?\n          <span className=\"menuTrigger\">\n            <a href=\"#\" onClick={this.handleContextClick}>\n              <i className=\"material-icons\">expand_more</i>\n            </a>\n          </span> : null}\n      </li>\n    );\n  }\n};\n\nexport default injectIntl(Contact);\n","// A panel included into a list of contacts with an action text.\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\n\nclass ContactAction extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.onAction(this.props.action);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <li onClick={this.handleClick} className=\"action\">\n        <div className=\"action-text\">{formatMessage(this.props.title, this.props.values)}</div>\n      </li>\n    );\n  }\n};\n\nexport default injectIntl(ContactAction);\n","// ContactList: component for showing a list of contacts,\n// such as a list of group members in a group chat.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { Drafty } from 'tinode-sdk';\nimport Tinode from 'tinode-sdk';\n\nimport Contact from './contact.jsx';\nimport ContactAction from './contact-action.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nimport { MESSAGE_PREVIEW_LENGTH } from '../config.js';\n\nconst messages = defineMessages({\n  badge_you: {\n    id: 'badge_you',\n    defaultMessage: 'you',\n    description: 'Badge for indicating the current user'\n  },\n  badge_owner: {\n    id: 'badge_owner',\n    defaultMessage: 'owner',\n    description: 'Badge for indicating the owner'\n  }\n});\n\nclass ContactList extends React.Component {\n  render() {\n    const { formatMessage } = this.props.intl;\n    const showCheckmark = Array.isArray(this.props.topicSelected);\n    const contactNodes = [];\n    let contactsCount = 0;\n    if (this.props.contacts && this.props.contacts.length > 0) {\n      this.props.contacts.map((c) => {\n        if (c.action) {\n          // Action item\n          contactNodes.push(\n            <ContactAction\n              title={c.title} action={c.action} values={c.values}\n              key={c.action}\n              onAction={this.props.onAction}\n              />);\n        } else {\n          // Normal contact\n          const key = this.props.showMode ? c.user : (c.topic || c.user);\n          // If filter function is provided, filter out the items\n          // which don't satisfy the condition.\n          if (this.props.filterFunc && this.props.filter) {\n            const filterOn = [key];\n            if (c.private && c.private.comment) {\n              filterOn.push(('' + c.private.comment).toLowerCase());\n            }\n            if (c.public && c.public.fn) {\n              filterOn.push(('' + c.public.fn).toLowerCase());\n            }\n            if (!this.props.filterFunc(this.props.filter, filterOn)) {\n              return;\n            }\n          }\n\n          const isChannel = Tinode.isChannelTopicName(key);\n          const selected = showCheckmark ?\n            (this.props.topicSelected.indexOf(key) > -1) :\n            (this.props.topicSelected === key);\n          const badges = [];\n          if (this.props.showMode) {\n            if (key == this.props.myUserId) {\n              badges.push({name: formatMessage(messages.badge_you), color: 'green'});\n            }\n            if (c.acs && c.acs.isOwner()) {\n              badges.push({name: formatMessage(messages.badge_owner), color: 'blue'});\n            }\n          }\n\n          const comment = Array.isArray(c.private) ?\n            c.private.join(',') : (c.private ? c.private.comment : null);\n          let preview;\n          let forwarded;\n          let deliveryStatus;\n          if (!this.props.showMode && c.latestMessage) {\n            const msg = c.latestMessage(true);\n            if (msg) {\n              forwarded = msg.head ? msg.head.forwarded : null;\n              deliveryStatus = msg._status || c.msgStatus(msg, true);\n              if (msg.content) {\n                preview = typeof msg.content == 'string' ?\n                  msg.content.substr(0, MESSAGE_PREVIEW_LENGTH) :\n                  Drafty.preview(msg.content, MESSAGE_PREVIEW_LENGTH);\n              }\n            }\n          }\n\n          contactNodes.push(\n            <Contact\n              tinode={this.props.tinode}\n              title={c.public ? c.public.fn : null}\n              avatar={makeImageUrl(c.public ? c.public.photo : null)}\n              comment={comment}\n              preview={preview}\n              forwarded={forwarded}\n              received={deliveryStatus}\n              unread={this.props.showUnread ? c.unread : 0}\n              now={c.online && this.props.connected}\n              acs={c.acs}\n              showMode={this.props.showMode}\n              badges={badges}\n              showCheckmark={showCheckmark}\n              selected={selected}\n              showOnline={this.props.showOnline && !isChannel}\n              isChannel={isChannel}\n              onSelected={this.props.onTopicSelected}\n              showContextMenu={this.props.showContextMenu}\n              isVerified={c.trusted && c.trusted.verified}\n              isStaff={c.trusted && c.trusted.staff}\n              isDangerous={c.trusted && c.trusted.danger}\n              deleted={c._deleted}\n              item={key}\n              index={contactNodes.length}\n              key={key} />\n          );\n          contactsCount ++;\n        }\n      }, this);\n    }\n\n    return (\n      <div className={this.props.noScroll ? null : \"scrollable-panel\"}>\n        {contactsCount == 0 ?\n          <div className=\"center-medium-text\"\n            dangerouslySetInnerHTML={{__html: this.props.emptyListMessage}} />\n          :\n          null\n        }\n        {contactNodes.length > 0 ?\n          <ul className=\"contact-box\">\n            {contactNodes}\n          </ul>\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ContactList);\n","import React from 'react';\n\nimport Tinode from 'tinode-sdk';\n\nexport default class SearchContacts extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      edited: false,\n      search: ''\n    };\n\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  componentWillUnmount() {\n    if (this.state.edited) {\n      this.setState({search: '', edited: false});\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n  }\n\n  handleSearchChange(e) {\n    this.setState({search: e.target.value});\n  }\n\n  handleSearch(e) {\n    e.preventDefault();\n    var query = this.state.search.trim();\n    this.setState({edited: (query.length > 0)});\n    this.props.onSearchContacts(query.length > 0 ? query : Tinode.DEL_CHAR);\n  }\n\n  handleClear(e) {\n    e.preventDefault();\n    if (this.state.edited) {\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n    this.setState({search: '', edited: false});\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Enter') {\n      this.handleSearch(e);\n    } else if (e.key === 'Escape') {\n      this.handleClear();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <i className=\"material-icons search\">search</i>\n          <input className=\"search\" type=\"text\"\n              placeholder={this.props.placeholder}\n              value={this.state.search} onChange={this.handleSearchChange}\n              onKeyDown={this.handleKeyDown} required autoFocus />\n          {this.state.search ?\n            <a href=\"#\" onClick={this.handleClear}><i className=\"material-icons\">highlight_off</i></a>\n            :\n            <span><i className=\"material-icons\">&nbsp;</i></span>}\n        </div>\n      </div>\n    );\n  }\n};\n","// Forward Menu: message forwarding popup/dropdown menu.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport ContactList from './contact-list.jsx';\nimport SearchContacts from './search-contacts.jsx';\n\nexport default class ForwardDialog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      query: null\n    };\n\n    this.handleEscapeKey = this.handleEscapeKey.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.onInitFind();\n  }\n\n  handleEscapeKey(e) {\n    if (e.keyCode === 27) {\n      // Not forwarding the message.\n      this.props.hide(false);\n    }\n  }\n\n  handleClose(e) {\n    e.preventDefault();\n    this.props.hide(false);\n  }\n\n  handleSearchContacts(query) {\n    this.setState({ query: Tinode.isNullValue(query) ? null : query });\n    this.props.onSearchContacts(query);\n  }\n\n  handleContactSelected(uid) {\n    this.props.onTopicSelected(uid);\n    this.props.hide(true);\n  }\n\n  render() {\n    let contacts = this.state.query != null ? this.props.searchResults : this.props.contacts;\n    // Filter out contacts without a 'W' or 'J' permissions as well as the current topic.\n    contacts = contacts.filter((c) => {\n      return (c.name != this.props.topicSelected) && c.acs.isJoiner() && c.acs.isWriter();\n    });\n\n    return (\n      <div className=\"alert-container\">\n        <div className=\"forward-dialog\">\n          <div className=\"title with-control\">\n            <div><FormattedMessage id=\"forward_to\" defaultMessage=\"Forward to\"\n              desription=\"Title of the contact selector dialog when forwarding a message\" /></div>\n            <div><a href=\"#\" onClick={this.handleClose}><i className=\"material-icons\">close</i></a></div>\n          </div>\n          <FormattedMessage id=\"forward_to_search_placeholder\" defaultMessage=\"Search contacts\"\n            description=\"Contact search prompt when forwarding a message.\">{\n            (search_placeholder) => <SearchContacts\n              placeholder={search_placeholder}\n              onSearchContacts={this.handleSearchContacts} />\n          }</FormattedMessage>\n          <FormattedMessage id=\"search_no_results\" defaultMessage=\"Search returned no results\"\n              description=\"Text shown in contacts view when query returned no results.\">{\n            (not_found_placeholder) => <ContactList\n              tinode={this.props.tinode}\n              contacts={contacts}\n              myUserId={this.props.myUserId}\n              emptyListMessage={not_found_placeholder}\n              showOnline={false}\n              showUnread={false}\n              showContextMenu={false}\n              onTopicSelected={this.handleContactSelected} />\n          }</FormattedMessage>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class LoadSpinner extends React.PureComponent {\n  render() {\n    const className = 'load-spinner-box' + (this.props.large ? ' large' : '')\n      + (this.props.clear ? ' clear' : '') + (this.props.centered ? ' centered' : '');\n    return (this.props.show ?\n      <div className={className}><div className=\"loader-spinner\"></div></div> : null);\n  }\n}\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\nimport LoadSpinner from './load-spinner.jsx';\n\nimport { sanitizeImageUrl } from '../lib/utils.js';\n\nimport { AVATAR_SIZE } from '../config.js';\n\nexport default class AvatarUpload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      source: props.avatar\n    };\n\n    this.handleFileReceived = this.handleFileReceived.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.avatar != prevProps.avatar) {\n      this.setState({source: this.props.avatar});\n    }\n  }\n\n  handleFileReceived(e) {\n    const image = e.target.files[0];\n    this.props.onImageUpdated(image.type, URL.createObjectURL(image), image.name);\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  render() {\n    // Randomize id value in case more than one AvatarUpload is shown\n    // at the same time.\n    const randId = 'file-input-avatar-' + ('' + Math.random()).substring(0, 4);\n    const className = 'avatar-upload' + (this.props.readOnly ? ' read-only' : '');\n    return (\n      <div className={className}>\n        {this.props.readOnly || !this.state.source ?\n          null :\n          <a href=\"#\" className=\"clear-avatar\" onClick={(e) => {e.preventDefault(); this.props.onImageUpdated();}}>\n            <i className=\"material-icons\">clear</i>\n          </a>}\n        {this.state.source ?\n          <img src={this.props.tinode.authorizeURL(sanitizeImageUrl(this.state.source))} className=\"preview\" /> :\n          this.props.readOnly && this.props.uid ?\n            <div className=\"avatar-box\">\n              <LetterTile\n                tinode={this.props.tinode}\n                avatar={true}\n                topic={this.props.uid}\n                title={this.props.title} />\n            </div>\n            :\n            <div className=\"blank\">{AVATAR_SIZE}&times;{AVATAR_SIZE}</div>}\n        {this.props.readOnly ? null :\n          <input type=\"file\" id={randId} className=\"inputfile hidden\"\n            accept=\"image/*\" onChange={this.handleFileReceived} />}\n        {this.props.readOnly ? null :\n        <label htmlFor={randId} className=\"round\">\n          <i className=\"material-icons\">file_upload</i>\n        </label>}\n        <LoadSpinner show={this.props.uploading} large={true} clear={true} centered={true} />\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nconst icon_mapping = {'staff': 'verified_user'};\n\nconst messages = defineMessages({\n  badge_verified: {\n    id: 'badge_verified',\n    defaultMessage: 'Verified/official',\n    description: 'Explanation of a verified account or topic badge'\n  },\n  badge_staff: {\n    id: 'badge_staff',\n    defaultMessage: 'Staff-managed',\n    description: 'Explanation of a staff-managed account or topic badge'\n  },\n  badge_danger: {\n    id: 'badge_danger',\n    defaultMessage: 'Untrustworthy',\n    description: 'Suspicious or untrustworthy account or topic badge'\n  },\n});\n\n\n/* Trusted badges with labels: verified, staff, danger */\nclass BadgeList extends React.PureComponent {\n  render() {\n    const {formatMessage} = this.props.intl;\n    let badges = null;\n    if (this.props.trustedBadges && this.props.trustedBadges.length > 0) {\n      badges = [];\n      this.props.trustedBadges.map((b) => {\n        const comment = formatMessage(messages['badge_' + b]);\n        const style = 'material-icons ' + b + '-color';\n        badges.push(<div className=\"trusted-badge\" key={b}><i className={style}>{icon_mapping[b] || b}</i> {comment}</div>);\n      });\n      return <>{badges}</>;\n    }\n    return null;\n  }\n};\n\nexport default injectIntl(BadgeList);\n","import React from 'react';\n\n/* BEGIN CheckBox: styled checkbox */\nexport default class CheckBox extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange() {\n    this.props.onChange(this.props.name, !this.props.checked);\n  }\n\n  render() {\n    return (\n      this.props.onChange ? (\n        this.props.checked === true ?\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box</i> :\n        this.props.checked === false ?\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box_outline_blank</i> :\n          <i className=\"material-icons lt-blue\">indeterminate_check_box</i>\n        ) : (\n          this.props.checked ?\n            <i className=\"material-icons\">check_box</i> :\n            <i className=\"material-icons\">check_box_outline_blank</i>\n        )\n    );\n  }\n}\n/* END CheckBox */\n","// The X menu to be displayed in title bars.\nimport React from 'react';\n\nexport default class MenuCancel extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n        <i className=\"material-icons\">close</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nimport MenuCancel from './menu-cancel.jsx';\n\nexport default class ErrorPanel extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      show: false,\n    };\n\n    this.hide = this.hide.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.level !== this.props.level) {\n      this.setState({\n        show: !(!this.props.level)\n      });\n    }\n  }\n\n  hide() {\n    this.setState({show: false});\n    if (this.props.onClearError) {\n      this.props.onClearError();\n    }\n  }\n\n  render() {\n    const icons = {err: 'error', warn: 'warning', info: 'info'}\n    const level = icons[this.props.level] || '';\n    const className = 'info-box ' + level;\n    return (\n      <div className={className}>\n        <div className=\"icon\"><i className=\"material-icons\">{level}</i></div>\n        <span>\n          {this.props.text}\n          {this.props.action ?\n            <>\n              &#32;<a href=\"#\"\n                style={{ whiteSpace: 'nowrap' }}\n                onClick={(e) => {e.preventDefault(); this.props.action();}}>\n                {this.props.actionText}\n              </a>\n            </>\n          : null}\n        </span>\n        <div className=\"cancel\"><MenuCancel onCancel={this.hide} /></div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\n\nexport default class Chip extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel(this.props.topic, this.props.index);\n  }\n\n  render() {\n    const title = this.props.title || this.props.topic;\n    const className = this.props.invalid ? 'chip invalid' : 'chip';\n    return (\n      <div className={className}>\n        {this.props.noAvatar ?\n          <span className=\"spacer\" /> :\n          <div className=\"avatar-box\">\n            <LetterTile\n              tinode={this.props.tinode}\n              avatar={this.props.avatar || true}\n              topic={this.props.topic}\n              title={this.props.title} />\n          </div>\n        }\n        <span>{title}</span>\n        {this.props.onCancel && !this.props.required ?\n          <a href=\"#\" onClick={this.handleCancel} >&times;</a>\n          : <span className=\"spacer\" />}\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport Chip from './chip.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n/* BEGIN ChipInput: group membership widget */\nexport default class ChipInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = ChipInput.deriveStateFromProps(props);\n    this.state.input = '';\n    this.state.focused = false;\n\n    this.handleTextInput = this.handleTextInput.bind(this);\n    this.removeChipAt = this.removeChipAt.bind(this);\n    this.handleChipCancel = this.handleChipCancel.bind(this);\n    this.handleFocusGained = this.handleFocusGained.bind(this);\n    this.handleFocusLost = this.handleFocusLost.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  static deriveStateFromProps(props) {\n    return {\n      placeholder: props.chips ? '' : props.prompt,\n      sortedChips: ChipInput.sortChips(props.chips, props.staticMembers),\n      chipIndex: ChipInput.indexChips(props.chips)\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chips != this.props.chips ||\n      prevProps.staticMembers != this.props.staticMembers ||\n      prevProps.prompt != this.props.prompt) {\n      this.setState(ChipInput.deriveStateFromProps(this.props));\n    }\n    if (!prevState || this.props.chips.length > prevState.sortedChips.length) {\n      this.setState({input: ''});\n    }\n  }\n\n  // Map chip index to user name\n  static indexChips(chips) {\n    const index = {};\n    let count = 0;\n    chips.map((item) => {\n      index[item.user] = count;\n      count ++;\n    });\n    return index;\n  }\n\n  // Have non-removable chips appear before all other chips.\n  static sortChips(chips, keep) {\n    const required = [];\n    const normal = [];\n    chips.map((item) => {\n      if (keep && keep.includes(item.user)) {\n        required.push(item);\n      } else {\n        normal.push(item);\n      }\n    });\n    return required.concat(normal);\n  }\n\n  handleTextInput(e) {\n    this.setState({input: e.target.value});\n    if (this.props.filterFunc) {\n      this.props.filterFunc(e.target.value);\n    }\n  }\n\n  removeChipAt(idx) {\n    const removed = this.state.sortedChips[idx];\n    this.props.onChipRemoved(removed.user, this.state.chipIndex[removed.user]);\n  }\n\n  handleChipCancel(item, idx) {\n    this.removeChipAt(idx);\n  }\n\n  handleFocusGained() {\n    this.setState({focused: true});\n  }\n\n  handleFocusLost() {\n    this.setState({focused: false});\n    if (this.props.onFocusLost) {\n      this.props.onFocusLost(this.state.input);\n    }\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Backspace') {\n      if (this.state.input.length == 0 && this.state.sortedChips.length > 0) {\n        const at = this.state.sortedChips.length - 1;\n        if (this.state.sortedChips[at].user !== this.props.staticMembers) {\n          this.removeChipAt(at);\n        }\n      }\n    } else if (e.key === 'Enter') {\n      if (this.props.onEnter) {\n        this.props.onEnter(this.state.input);\n      }\n    } else if (e.key === 'Escape') {\n      if (this.props.onCancel) {\n        this.props.onCancel();\n      }\n    }\n  }\n\n  render() {\n    const chips = [];\n    let count = 0;\n    const staticMembers = this.props.staticMembers || [];\n    this.state.sortedChips.map((item) => {\n      chips.push(\n        <Chip\n          tinode={this.props.tinode}\n          onCancel={this.handleChipCancel}\n          avatar={makeImageUrl(item.public ? item.public.photo : null)}\n          title={item.public ? item.public.fn : undefined}\n          noAvatar={this.props.avatarDisabled}\n          topic={item.user}\n          required={staticMembers.includes(item.user)}\n          invalid={item.invalid}\n          index={count}\n          key={item.user} />\n      );\n      count++;\n    });\n    const className = \"chip-input\" + (this.state.focused ? ' focused' : '');\n    const autoFocus = !(this.props.tabIndex > 0);\n    return (\n      <div className={className}>\n        {chips}\n        <input type=\"text\"\n          placeholder={this.state.placeholder}\n          onChange={this.handleTextInput}\n          onFocus={this.handleFocusGained}\n          onBlur={this.handleFocusLost}\n          onKeyDown={this.handleKeyDown}\n          value={this.state.input}\n          tabIndex={this.props.tabIndex}\n          autoFocus={autoFocus} />\n      </div>\n    );\n  }\n};\n","// GroupMembers: control for managing a list of group members.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\nimport ContactList from './contact-list.jsx';\n\nconst messages = defineMessages({\n  no_contacts: {\n    id: 'no_contacts',\n    defaultMessage: 'You have no contacts :-(',\n    description: 'Shown in ContactsView when the user has no contacts'\n  },\n  contacts_not_found_short: {\n    id: 'contacts_not_found_short',\n    defaultMessage: \"No contacts match ''{query}''\",\n    description: 'Shown in ContactsView when search returned no results'\n  }\n});\n\nclass GroupManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Array of topic members\n      members: props.members,\n      index: GroupManager.indexMembers(props.members),\n      staticMembers: GroupManager.staticMembers(props.members, props.keepInitialMembers, props.requiredMember),\n      contactFilter: '',\n      noContactsMessage: props.intl.formatMessage(messages.no_contacts),\n      selectedContacts: GroupManager.selectedContacts(props.members)\n    };\n\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleMemberRemoved = this.handleMemberRemoved.bind(this);\n    this.handleContactFilter = this.handleContactFilter.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static indexMembers(members) {\n    let index = {};\n    members.map((m) => {\n      index[m.user] = {delta: 0, present: true}; // Delta: 0 unchanged, +1 added, -1 removed\n    });\n    return index;\n  }\n\n  static staticMembers(members, keepInitial, requiredMember) {\n    let stat = [];\n    members.map((m) => {\n      if (keepInitial || m.user == requiredMember) {\n        stat.push(m.user);\n      }\n    });\n    return stat;\n  }\n\n  static selectedContacts(members) {\n    let sel = [];\n    members.map((m) => {\n      sel.push(m.user);\n    });\n    return sel;\n  }\n\n  handleContactSelected(userId, index) {\n    let status = this.state.index[userId];\n    if (status) {\n      if (status.present) {\n        // Prevent duplicate members\n        return;\n      }\n      status.delta += 1;\n      status.present = true;\n    } else {\n      status = {delta: 1, present: true};\n    }\n\n    let m = this.state.members.slice();\n    m.push(this.props.contacts[index]);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleMemberRemoved(userId, index) {\n    const status = this.state.index[userId];\n    if (!status || !status.present) {\n      return;\n    }\n    status.present = false;\n    status.delta -= 1;\n\n    let m = this.state.members.slice();\n    m.splice(index, 1);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleContactFilter(val) {\n    const {formatMessage} = this.props.intl;\n    const msg = !val ?\n      formatMessage(messages.no_contacts) :\n      formatMessage(messages.contacts_not_found_short, {query: val});\n\n    this.setState({contactFilter: val, noContactsMessage: msg});\n  }\n\n  static doContactFiltering(filter, values) {\n    if (filter) {\n      for (let i=0; i<values.length; i++) {\n        if (values[i].indexOf(filter) >= 0) {\n          return true;\n        }\n      }\n      return false;\n    }\n    return true;\n  }\n\n  handleSubmit() {\n    var instance = this;\n    var members = [];\n    var added = [];\n    var removed = [];\n\n    var keys = Object.keys(this.state.index);\n    keys.map(function(k) {\n      if (instance.state.index[k].present) {\n        members.push(k);\n      }\n\n      if (instance.state.index[k].delta > 0) {\n        added.push(k);\n      } else if (instance.state.index[k].delta < 0) {\n        removed.push(k);\n      }\n    });\n    this.props.onSubmit(members, added, removed);\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <div id=\"group-manager\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_group_members\" defaultMessage=\"Group Members\" description=\"Section title\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ChipInput\n            tinode={this.props.tinode}\n            chips={this.state.members}\n            staticMembers={this.state.staticMembers}\n            prompt=\"add members\"\n            filterFunc={this.handleContactFilter}\n            onChipRemoved={this.handleMemberRemoved} />\n        </div>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_all_contacts\" defaultMessage=\"All Contacts\"\n              description=\"Section title [All Contacts]\" />\n          </label>\n        </div>\n        <ContactList\n          tinode={this.props.tinode}\n          contacts={this.props.contacts}\n          myUserId={this.props.myUserId}\n          topicSelected={this.state.selectedContacts}\n          filter={this.state.contactFilter}\n          filterFunc={GroupManager.doContactFiltering}\n          emptyListMessage={this.state.noContactsMessage}\n          showOnline={false}\n          showUnread={false}\n          onTopicSelected={this.handleContactSelected} />\n        <div id=\"group-manager-buttons\" className=\"panel-form-row\">\n          <button className=\"secondary\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(GroupManager);\n","// PermissionsEditor: Component for editing permissions\n// <PermissionsEditor mode=\"JWROD\" skip=\"O\" onChange={this.handleCheckboxTest} />\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport CheckBox from './checkbox.jsx';\nimport Contact from './contact.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n// Translatable permission names.\nconst messages = defineMessages({\n  joiner: {\n    id: 'permission_join',\n    defaultMessage: \"Join ({val})\",\n    description: 'Name of J permission'\n  },\n  reader: {\n    id: 'permission_read',\n    defaultMessage: \"Read ({val})\",\n    description: 'Name of R permission'\n  },\n  writer: {\n    id: 'permission_write',\n    defaultMessage: \"Write ({val})\",\n    description: 'Name of W permission'\n  },\n  preser: {\n    id: 'permission_pres',\n    defaultMessage: \"Get notified ({val})\",\n    description: 'Name of P permission'\n  },\n  approver: {\n    id: 'permission_admin',\n    defaultMessage: \"Approve ({val})\",\n    description: 'Name of A permission'\n  },\n  sharer: {\n    id: 'permission_share',\n    defaultMessage: \"Share ({val})\",\n    description: 'Name of S permission'\n  },\n  deleter: {\n    id: 'permission_delete',\n    defaultMessage: \"Delete ({val})\",\n    description: 'Name of D permission'\n  },\n  owner: {\n    id: 'permission_owner',\n    defaultMessage: \"Owner ({val})\",\n    description: 'Name of O permission'\n  }\n});\n\nclass PermissionsEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mode: (props.mode || '').replace('N', '')\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(val) {\n    let mode = this.state.mode;\n    const idx = mode.indexOf(val);\n    if (idx == -1) {\n      mode += val;\n    } else {\n      mode = mode.replace(val, '');\n    }\n    this.setState({mode: mode});\n  }\n\n  handleSubmit() {\n    // Normalize string, otherwise cannot check if mode has changed.\n    const mode = (this.state.mode || 'N').split('').sort().join('');\n    const before = (this.props.mode || 'N').split('').sort().join('')\n    if (mode !== before) {\n      this.props.onSubmit(mode);\n    } else {\n      this.props.onCancel();\n    }\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const all = 'JRWPASDO';\n    const names = {\n      'J': formatMessage(messages.joiner, {val: 'J'}),\n      'R': formatMessage(messages.reader, {val: 'R'}),\n      'W': formatMessage(messages.writer, {val: 'W'}),\n      'P': formatMessage(messages.preser, {val: 'P'}),\n      'A': formatMessage(messages.approver, {val: 'A'}),\n      'S': formatMessage(messages.sharer, {val: 'S'}),\n      'D': formatMessage(messages.deleter, {val: 'D'}),\n      'O': formatMessage(messages.owner, {val: 'O'})\n    };\n\n    let skip = this.props.skip || '';\n    let mode = this.state.mode;\n    let compare = (this.props.compare || '').replace('N', '');\n    let items = [];\n    for (let i=0; i<all.length; i++) {\n      let c = all.charAt(i);\n      if (skip.indexOf(c) >= 0 && mode.indexOf(c) < 0) {\n        // Permission is marked as inactive: hide unchecked permissions, disable checked permissions\n        continue;\n      }\n      items.push(\n        <tr key={c}>\n          <td>{names[c]}</td>\n          <td className=\"checkbox\">{skip.indexOf(c) < 0 ?\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} onChange={this.handleChange}/>\n            :\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} />\n          }</td>{this.props.compare ? <td className=\"checkbox\">\n            <CheckBox name={c} checked={(compare.indexOf(c) >= 0)}/>\n          </td> : null}\n        </tr>\n      );\n    }\n\n    return (\n      <div className=\"panel-form-column\">\n        {this.props.userTitle ?\n          <ul className=\"contact-box small\"><Contact\n            tinode={this.props.tinode}\n            item={this.props.item}\n            title={this.props.userTitle}\n            small={true}\n            avatar={makeImageUrl(this.props.userAvatar ? this.props.userAvatar : null)} /></ul> : null}\n        <label className=\"small\"><FormattedMessage id=\"title_permissions\"\n          defaultMessage=\"Permissions\" description=\"Section title\"/></label>\n        <table className=\"permission-editor\">\n        {this.props.compare ?\n          <thead><tr>\n            <th></th><th>{this.props.modeTitle}</th>\n            <th>{this.props.compareTitle}</th>\n          </tr></thead> :\n          null}\n        <tbody>\n          {items}\n        </tbody></table>\n        <br />\n        <div className=\"dialog-buttons\">\n          <button className=\"outline\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(PermissionsEditor);\n","// Image zoom and crop widget.\n\nimport React from 'react';\n\nconst DEFAULT_MAX_ZOOM = 2.5;\n\nexport default class Cropper extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Coordinates of the top left corner of the image in container coordinates.\n      panX: 0,\n      panY: 0,\n      // Origin of the zoom in image coordinates.\n      originX: 0,\n      originY: 0,\n      // Zoom scale.\n      zoom: 1,\n      // Zoom min and max.\n      minZoom: 0,\n      maxZoom: DEFAULT_MAX_ZOOM,\n    };\n\n    // References to DOM elements for hooking up events and getting screen dimensions.\n    // The transparent element which captures mouse moves (moves with the image).\n    this.overlay = React.createRef();\n    // The image cutout window or view port (static).\n    this.cutout = React.createRef();\n    // Scaled and translated image preview.\n    this.preview = React.createRef();\n    // The main container (static).\n    this.boundingBox = React.createRef();\n\n    // The original image width and height before any scaling.\n    this.imageWidth = 0;\n    this.imageHeight = 0;\n\n    // Mouse position when dragging.\n    this.mouseX = 0\n    this.mouseY = 0;\n    // Length of the previous mouse move when dragging.\n    this.prevDistance = 0;\n\n    // Bounding rectangles of static elements.\n    this.cutoutRect = {};\n    this.bBoxRect = {};\n    // Center of the bounding box.\n    this.originX = 0;\n    this.originY = 0;\n\n    this.initScaling = this.initScaling.bind(this);\n    this.onZoom = this.onZoom.bind(this);\n    this.handleZoom = this.handleZoom.bind(this);\n    this.mouseDown = this.mouseDown.bind(this);\n    this.mouseUp = this.mouseUp.bind(this);\n    this.mouseMove = this.mouseMove.bind(this);\n    this.mouseTouch = this.mouseTouch.bind(this);\n    this.positionAll = this.positionAll.bind(this);\n    this.translate = this.translate.bind(this);\n  }\n\n  componentDidMount() {\n    this.overlay.current.addEventListener('mousedown', this.mouseDown, { passive: true });\n    this.overlay.current.addEventListener('touchstart', this.mouseDown, { passive: true });\n\n    // The rectangle position is in viewport coordinates.\n    this.bBoxRect = this.boundingBox.current.getBoundingClientRect();\n    // Center of the bounding box in container coordinates.\n    this.originX = this.bBoxRect.width / 2;\n    this.originY = this.bBoxRect.height / 2;\n\n    // The rectangle position is in viewport coordinates.\n    this.cutoutRect = this.cutout.current.getBoundingClientRect();\n  }\n\n  componentWillUnmount() {\n    this.overlay.current.removeEventListener('mousedown', this.mouseDown);\n    this.overlay.current.removeEventListener('touchstart', this.mouseDown);\n  }\n\n  // Position all elements.\n  positionAll(panX, panY, zoom) {\n    // Zoom origin in image preview coordinates.\n    this.setState({\n      panX: panX,\n      panY: panY,\n      zoom: zoom,\n      originX: this.originX - panX,\n      originY: this.originY - panY,\n    });\n\n    // Pass cut out coordinates to caller.\n    const left = (this.originX - panX) * zoom - this.originX;\n    const top = (this.originY - panY) * zoom - this.originY;\n    this.props.onChange(\n      (left + this.cutoutRect.left - this.bBoxRect.left) / zoom,\n      (top + this.cutoutRect.top - this.bBoxRect.top) / zoom,\n      this.cutoutRect.width / zoom,\n      this.cutoutRect.height / zoom,\n      zoom);\n  }\n\n  // Check if new location is within the limits.\n  static checkBound(currPan, img, cutout, delta) {\n    let nextDiff = Math.min(0, cutout[0] - img[0] - delta, img[1] - cutout[1] + delta);\n    if (nextDiff == 0) {\n      // Cutout is completely within the image.\n      currPan += delta;\n    } else if (Math.min(0, cutout[0] - img[0], img[1] - cutout[1]) < nextDiff) {\n      // Cutout is outside of the range but closer to the bound.\n      currPan += delta;\n    }\n    return currPan;\n  }\n\n  initScaling() {\n    // Initialize components.\n    const imgRect = this.preview.current.getBoundingClientRect();\n\n    this.imageWidth = imgRect.width;\n    this.imageHeight = imgRect.height;\n\n    // Set zoom slider's min and max values. Make sure the scaled image cannot be smaller than the cutout.\n    const minZoom = Math.max(this.cutoutRect.width / imgRect.width, this.cutoutRect.height / imgRect.height);\n    this.setState({\n      minZoom: minZoom,\n      maxZoom: Math.max(DEFAULT_MAX_ZOOM, minZoom + 1)\n    });\n\n    // Initial zoom level fills the bounding box at the smallest image dimension and overflows the largest, i.e. \"fill\" not \"fit\".\n    const zoom = Math.max(this.bBoxRect.width / imgRect.width, this.bBoxRect.height / imgRect.height);\n    // Converting from viewport coordinates to container, then panning.\n    const panX = this.cutoutRect.left - this.bBoxRect.left -\n      (imgRect.width - this.cutoutRect.width) / 2;\n    const panY = this.cutoutRect.top - this.bBoxRect.top -\n      (imgRect.height - this.cutoutRect.height) / 2;\n\n    this.positionAll(panX, panY, zoom);\n  }\n\n  onZoom(e) {\n    this.handleZoom(e.target.value);\n  }\n\n  handleZoom(zoom) {\n    let panX = this.state.panX;\n    let panY = this.state.panY;\n\n    // Ensure that the image at the new zoom is not outside of the cutout boundaries.\n    // Calculate image coordinates at the new zoom.\n    const imgLeft = this.originX - (this.originX - panX) * zoom;\n    const imgRight = imgLeft + this.imageWidth * zoom;\n    // Cutout in the same coordinates as the image.\n    const coLeft = this.cutoutRect.left - this.bBoxRect.left;\n    const coRight = coLeft + this.cutoutRect.width;\n    if (coLeft < imgLeft) {\n      panX -= imgLeft - coLeft;\n    } else if (coRight > imgRight) {\n      panX += coRight - imgRight;\n    }\n    const imgTop = this.originY - (this.originY - panY) * zoom;\n    const imgBottom = imgTop + this.imageHeight * zoom;\n    const coTop = this.cutoutRect.top - this.bBoxRect.top;\n    const coBottom = coTop + this.cutoutRect.height;\n    if (coTop < imgTop) {\n      panY -= imgTop - coTop;\n    } else if (coBottom > imgBottom) {\n      panY += coBottom - imgBottom;\n    }\n\n    this.positionAll(panX, panY, zoom);\n  }\n\n  mouseDown(e) {\n    if (e.touches) {\n      this.mouseX = e.touches[0].pageX;\n      this.mouseY = e.touches[0].pageY;\n    } else {\n      this.mouseX = e.pageX;\n      this.mouseY = e.pageY;\n    }\n\n    window.addEventListener('mousemove', this.mouseMove, { passive: false });\n    window.addEventListener('touchmove', this.mouseTouch, { passive: false });\n    window.addEventListener('mouseup', this.mouseUp, { passive: true });\n    window.addEventListener('touchend', this.mouseUp, { passive: true });\n    // Disable text selection in the entire document.\n    document.body.style['userSelect'] = 'none';\n  }\n\n  // Perform image panning.\n  translate(pageX, pageY) {\n    const dX = pageX - this.mouseX;\n    const dY = pageY - this.mouseY;\n\n    this.mouseX = pageX;\n    this.mouseY = pageY;\n\n    // Make sure the image is within the cutout window.\n    const imgRect = this.preview.current.getBoundingClientRect();\n\n    // Check if the new position is within the boundaries, and if not if it's closer to them.\n    let panX = Cropper.checkBound(this.state.panX, [imgRect.left, imgRect.right],\n      [this.cutoutRect.left, this.cutoutRect.right], dX);\n    let panY = Cropper.checkBound(this.state.panY, [imgRect.top, imgRect.bottom],\n      [this.cutoutRect.top, this.cutoutRect.bottom], dY);\n\n    this.positionAll(panX, panY, this.state.zoom);\n  }\n\n  // Image panning.\n  mouseMove(e) {\n    e.preventDefault();\n    this.translate(e.pageX, e.pageY);\n  }\n\n  mouseTouch(e) {\n    e.preventDefault();\n\n    if (e.touches.length == 1) {\n      this.translate(e.touches[0].pageX, e.touches[0].pageY);\n      return;\n    }\n\n    // Image zooming by pinching.\n    const [touch0, touch1] = e.touches;\n    const distance = Math.sqrt((touch0.pageX - touch1.pageX) * (touch0.pageX - touch1.pageX) +\n      (touch0.pageY - touch1.pageY) * (touch0.pageY - touch1.pageY));\n\n    if (!this.prevDistance) {\n        this.prevDistance = distance / this.state.zoom;\n    }\n\n    let scale = (distance / this.prevDistance);\n    this.handleZoom(Math.max(this.minZoom, Math.min(this.maxZoom, scale)));\n  }\n\n  mouseUp(e) {\n    window.removeEventListener('mousemove', this.mouseMove);\n    window.removeEventListener('touchmove', this.mouseTouch);\n    window.removeEventListener('mouseup', this.mouseUp);\n    window.removeEventListener('touchend', this.mouseUp);\n    // Re-enable text selection.\n    document.body.style['userSelect'] = '';\n\n    this.positionAll(this.state.panX, this.state.panY, this.state.zoom);\n  }\n\n  render() {\n    // transform3d: position and scale.\n    const t3d = `translate3d(${this.state.panX}px, ${this.state.panY}px, 0) scale(${this.state.zoom})`;\n    // transformOrigin: zoom origin.\n    const orig = `${this.state.originX}px ${this.state.originY}px`;\n\n    // Overlay position and size are exactly equal to the position and size of the transformed image\n    // except it uses different coordinates.\n    const overlay = {\n      top: `${this.originY - this.state.originY * this.state.zoom}px`,\n      left: `${this.originX - this.state.originX * this.state.zoom}px`,\n      width: `${this.imageWidth * this.state.zoom}px`,\n      height: `${this.imageHeight * this.state.zoom}px`\n    };\n    return (\n      <div className=\"cropper\">\n        <div className=\"bounding-box\" ref={this.boundingBox}>\n          <img src={this.props.source} className=\"preview\" alt=\"\"\n            style={{transform: t3d, transformOrigin: orig}} ref={this.preview} onLoad={this.initScaling} />\n          <div className=\"cutout circle\" ref={this.cutout} />\n          <div className=\"overlay\" style={overlay} ref={this.overlay} />\n        </div>\n        <div className=\"zoom-wrapper\">\n          <input type=\"range\" className=\"zoomer\"\n            step=\"0.001\" min={this.state.minZoom} max={this.state.maxZoom} value={this.state.zoom} onChange={this.onZoom} />\n        </div>\n      </div>\n    );\n  }\n}\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Cropper from './cropper.jsx';\nimport { imageCrop } from '../lib/blob-helpers.js';\n\nexport default class AvatarCrop extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      top: 0,\n      left: 0,\n      width: 0,\n      height: 0,\n      scale: 1\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  // Cut out in image coordinates and desired scale factor.\n  handleChange(left, top, width, height, scale) {\n    this.setState({\n      left: left,\n      top: top,\n      width: width,\n      height: height,\n      scale: scale\n    });\n  }\n\n  handleSubmit() {\n    imageCrop(this.props.mime, this.props.avatar,\n      this.state.left, this.state.top, this.state.width, this.state.height,\n      this.state.scale)\n      .then(img => {\n        this.props.onSubmit(img.mime, img.blob, img.width, img.height);\n      })\n      .catch(err => {\n        this.props.onError(err);\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <Cropper\n            source={this.props.avatar}\n            onChange={this.handleChange} />\n        </div>\n        <div className=\"dialog-buttons\">\n          {this.props.onCancel ?\n            <button className=\"secondary\" onClick={this.props.onCancel}>\n              <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n            </button>\n            : null}\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n","// Password with a visiblity toggle.\nimport React from 'react';\n\nexport default class VisiblePassword extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: this.props.value,\n      visible: false\n    };\n\n    this.handleVisibility = this.handleVisibility.bind(this);\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n    if (this.props.onChange) {\n      this.props.onChange(e);\n    }\n  }\n\n  handleVisibility(e) {\n    e.preventDefault();\n    this.setState({visible: !this.state.visible});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode == 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, visible: false});\n      if (this.props.onFinished) {\n        this.props.onFinished();\n      }\n    } else if (e.keyCode == 13) {\n      // Enter pressed\n      this.handleEditingFinished();\n    }\n  }\n\n  handleEditingFinished(e) {\n    if (e) {\n      let currentTarget = e.currentTarget;\n      setTimeout(() => {\n        if (!currentTarget.contains(document.activeElement)) {\n          if (this.props.onFinished) {\n            this.props.onFinished(this.state.value);\n          }\n        }\n      }, 0);\n    } else if (this.props.onFinished) {\n      this.props.onFinished(this.state.value.trim());\n    }\n  }\n\n  render() {\n    return (\n      <div tabIndex=\"-1\" className=\"group-focus\"\n        onBlur={this.handleEditingFinished}>\n        <input className=\"with-visibility\"\n          type={this.state.visible ? \"text\" : \"password\"}\n          value={this.state.value}\n          placeholder={this.props.placeholder}\n          required={this.props.required ? 'required' : ''}\n          autoFocus={this.props.autoFocus ? 'autoFocus' : ''}\n          autoComplete={this.props.autoComplete}\n          onChange={this.handeTextChange}\n          onKeyDown={this.handleKeyDown} />\n        <span onClick={this.handleVisibility}>\n          <i className=\"material-icons clickable light-gray\">\n            {this.state.visible ? 'visibility' : 'visibility_off'}\n          </i>\n        </span>\n      </div>\n    );\n  }\n}\n","// In-place text editor. Shows text with an icon which toggles it into an input field.\nimport React from 'react';\n\nimport VisiblePassword from './visible-password.jsx';\n\nexport default class InPlaceEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selfRef = React.createRef();\n\n    this.state = {\n      active: props.active,\n      initialValue: props.value || '',\n      value: props.value || ''\n    };\n\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleStartEditing = this.handleStartEditing.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n    this.handlePasswordFinished = this.handlePasswordFinished.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // If text has changed while in read mode, update text and discard changes.\n    // Ignore update if in edit mode.\n    const newValue = this.props.value || '';\n    if (prevState.initialValue != newValue && !prevState.active) {\n      this.setState({\n        initialValue: newValue,\n        value: newValue\n      });\n    }\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value || ''});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, active: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleEditingFinished(e);\n    }\n  }\n\n   handleStartEditing() {\n    if (!this.props.readOnly) {\n      this.setState({active: true}, () => {\n        if (this.selfRef.current) {\n          this.selfRef.current.focus();\n        }\n      });\n    }\n  }\n\n  handleEditingFinished(event) {\n    const value = this.state.value.trim();\n    if (this.props.required && (!event.target.checkValidity() || !value)) {\n      // Empty input\n      this.setState({value: this.props.value, active: false});\n      return;\n    }\n    this.setState({active: false});\n    if ((value || this.props.value) && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  handlePasswordFinished(value) {\n    this.setState({active: false});\n    if (value && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  render() {\n    if (!this.state.active) {\n      let spanText = this.props.type == 'password' ? '••••••••' : this.state.value;\n      let spanClass = 'in-place-edit' + (this.props.readOnly ? ' disabled' : '');\n      if (!spanText) {\n        spanText = this.props.placeholder;\n        spanClass += ' placeholder';\n      }\n      if (!this.props.multiline || this.props.multiline == 1) {\n        spanClass += ' short';\n      }\n\n      return (<span className={spanClass} onClick={this.handleStartEditing}>\n        <span>{spanText}</span>\n      </span>);\n    }\n\n    let element;\n    const attr = {};\n    if (this.props.type == 'password') {\n      element = VisiblePassword;\n      attr.onFinished = this.handlePasswordFinished;\n    } else {\n      if (this.props.multiline > 1) {\n        element = 'textarea';\n        attr.rows = this.props.multiline;\n        attr.className = 'inplace-edit';\n      } else {\n        element = 'input';\n        attr.type = this.props.type || 'text';\n      }\n      attr.value = this.state.value;\n      attr.onChange = this.handeTextChange;\n      attr.onKeyDown = this.handleKeyDown;\n      attr.onBlur = this.handleEditingFinished;\n    }\n    attr.placeholder = this.props.placeholder;\n    attr.required = this.props.required ? 'required' : '';\n    attr.autoComplete = this.props.autoComplete;\n    attr.autoFocus = true;\n    attr.ref = this.selfRef;\n\n    return React.createElement(element, attr, null);\n  }\n};\n","// TagManager: edit topic or user tags.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\n\nimport { MAX_TAG_COUNT, MAX_TAG_LENGTH, MIN_TAG_LENGTH } from '../config.js';\nimport { arrayEqual } from '../lib/utils.js';\n\nexport default class TagManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tags: this.props.tags || [],\n      tagInput: '',\n      activated: this.props.activated\n    };\n\n    this.handleTagInput = this.handleTagInput.bind(this);\n    this.handleAddTag = this.handleAddTag.bind(this);\n    this.handleRemoveTag = this.handleRemoveTag.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const tags = nextProps.tags || [];\n    if (!arrayEqual(tags, prevState.tags) && !prevState.activated) {\n      return {tags: tags};\n    }\n    return null;\n  }\n\n  handleTagInput(text) {\n    this.setState({tagInput: text});\n    if (text.length > 0) {\n      const last = text[text.length-1];\n      if (text[0] == '\"') {\n        // This is a quoted string.\n        if (text.length > 1 && last == '\"') {\n          this.handleAddTag(text.substring(1, text.length-1));\n        }\n      } else if (last == ',' || last == ' ' || last == ';' || last == '\"') {\n        // User entered ',', ' ' or ';'\n        this.handleAddTag(text.substring(0, text.length-1).trim());\n      }\n    }\n  }\n\n  handleAddTag(tag) {\n    const maxTagCount = this.props.tinode.getServerLimit('maxTagCount', MAX_TAG_COUNT);\n\n    if (tag.length > 0 && this.state.tags.length < maxTagCount) {\n      const tags = this.state.tags.slice(0);\n      tags.push(tag);\n\n      this.setState({tags: tags, tagInput: ''});\n      if (this.props.onTagsChanged) {\n        this.props.onTagsChanged(tags);\n      }\n      return tags;\n    }\n    return this.state.tags;\n  }\n\n  handleRemoveTag(tag, index) {\n    const tags = this.state.tags.slice(0);\n    tags.splice(index, 1);\n    this.setState({tags: tags});\n    if (this.props.onTagsChanged) {\n      this.props.onTagsChanged(tags);\n    }\n  }\n\n  handleSubmit() {\n    // Add unprocessed input to tags, submit the list.\n    this.props.onSubmit(this.handleAddTag(this.state.tagInput.trim()));\n    this.setState({activated: false, tags: this.props.tags || []});\n  }\n\n  handleCancel() {\n    this.setState({activated: false, tagInput: '', tags: this.props.tags || []});\n    if (this.props.onCancel) {\n      this.props.onCancel();\n    }\n  }\n\n  render() {\n    const minTagLength = this.props.tinode.getServerLimit('minTagLength', MIN_TAG_LENGTH);\n    const maxTagLength = this.props.tinode.getServerLimit('maxTagLength', MAX_TAG_LENGTH);\n\n    let tags = [];\n    if (this.state.activated) {\n      this.state.tags.map((tag) => {\n        tags.push({user: tag, invalid: (tag.length < minTagLength || tag.length > maxTagLength)});\n      });\n    } else {\n      this.state.tags.map((tag) => {\n        tags.push(<span className=\"badge\" key={tags.length}>{tag}</span>);\n      });\n      if (tags.length == 0) {\n        tags = (\n          <i>\n            <FormattedMessage id=\"tags_not_found\" defaultMessage=\"No tags defined. Add some.\" description=\"\" />\n          </i>\n        );\n      }\n    }\n    return (\n      <div className=\"panel-form-column\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">{this.props.title}</label>\n        </div>\n        {this.state.activated ?\n        <div>\n          <FormattedMessage id=\"tags_editor_no_tags\" defaultMessage=\"Add some tags\"\n            description=\"Tag editor prompt when no tags are found.\">{\n            (add_tags_prompt) => <ChipInput\n              tinode={this.props.tinode}\n              chips={tags}\n              avatarDisabled={true}\n              prompt={add_tags_prompt}\n              tabIndex={this.props.tabIndex}\n              onEnter={this.handleAddTag}\n              onFocusLost={this.handleAddTag}\n              onCancel={this.handleCancel}\n              onChipRemoved={this.handleRemoveTag}\n              filterFunc={this.handleTagInput} />\n          }</FormattedMessage>\n          {this.props.onSubmit || this.props.onCancel ?\n            <div id=\"tag-manager-buttons\" className=\"dialog-buttons panel-form-row\">\n              <button className=\"outline\" onClick={this.handleCancel}>\n                <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n              </button>\n              <button className=\"primary\" onClick={this.handleSubmit}>\n                <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n              </button>\n            </div>\n          : null}\n        </div>\n        :\n        <div className=\"quoted\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.setState({activated: true});}}>\n            <i className=\"material-icons\">edit</i> &nbsp;<FormattedMessage id=\"title_manage_tags\" defaultMessage=\"Manage\"\n              description=\"Section title for the list of tags\" />\n          </a>\n          <>{tags}</>\n        </div>\n      }\n      </div>\n    );\n  }\n};\n","// Widget for editing topic description.\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarCrop from './avatar-crop.jsx';\nimport AvatarUpload from './avatar-upload.jsx';\nimport InPlaceEdit from './in-place-edit.jsx';\nimport TagManager from './tag-manager.jsx';\n\nimport { AVATAR_SIZE, MAX_AVATAR_BYTES, MAX_EXTERN_ATTACHMENT_SIZE, MAX_TITLE_LENGTH,\n  MAX_TOPIC_DESCRIPTION_LENGTH } from '../config.js';\nimport { imageScaled, blobToBase64, makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, theCard } from '../lib/utils.js';\n\nexport default class TopicDescEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    const acs = topic.getAccessMode();\n    this.state = {\n      isMe: Tinode.isMeTopicName(this.props.topic),\n      owner: acs && acs.isOwner(),\n      fullName: topic.public ? topic.public.fn : undefined,\n      private: topic.private ? topic.private.comment : null,\n      description: topic.public ? topic.public.note : undefined,\n      avatar: makeImageUrl(topic.public ? topic.public.photo : null),\n      tags: topic.tags() || [],\n      newAvatar: null,\n      newAvatarMime: null\n    };\n\n    this.previousOnTags = null;\n\n    this.tnNewTags = this.tnNewTags.bind(this);\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\n    this.handleImageUpdated = this.handleImageUpdated.bind(this);\n    this.handleAvatarCropped = this.handleAvatarCropped.bind(this);\n    this.handlePrivateUpdate = this.handlePrivateUpdate.bind(this);\n    this.handleDescriptionUpdate = this.handleDescriptionUpdate.bind(this);\n    this.uploadAvatar = this.uploadAvatar.bind(this);\n    this.handleAvatarCropCancel = this.handleAvatarCropCancel.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n  }\n\n  componentDidMount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    this.previousOnTags = topic.onTagsUpdated;\n    topic.onTagsUpdated = this.tnNewTags;\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    topic.onTagsUpdated = this.previousOnTags;\n  }\n\n  tnNewTags(tags) {\n    this.setState({tags: tags});\n  }\n\n  handleFullNameUpdate(fn) {\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\n    if (fn && this.state.fullName !== fn) {\n      this.setState({fullName: fn});\n      this.props.onUpdateTopicDesc(this.props.topic, theCard(fn, null));\n    }\n  }\n\n  handlePrivateUpdate(comment) {\n    comment = comment.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.private !== comment) {\n      this.setState({private: comment});\n      this.props.onUpdateTopicDesc(this.props.topic, null, comment || Tinode.DEL_CHAR);\n    }\n  }\n\n  handleDescriptionUpdate(desc) {\n    desc = desc.trim().substring(0, MAX_TOPIC_DESCRIPTION_LENGTH);\n    if (desc) {\n      this.setState({description: desc});\n      this.props.onUpdateTopicDesc(this.props.topic, theCard(null, null, null, desc));\n    }\n  }\n\n  // AvatarUpload widget has changed the avatar: received a new file or deleted the avatar.\n  handleImageUpdated(mime, img) {\n    // This will show the AvatarCropView is img is not null.\n    this.setState({newAvatar: img, newAvatarMime: mime});\n    if (!img) {\n      // Deleting the avatar.\n      this.setState({avatar: null});\n      this.props.onUpdateTopicDesc(this.props.topic, theCard(null, Tinode.DEL_CHAR));\n    }\n  }\n\n  // AvatarCropView calls this method when the user has cropped the image.\n  handleAvatarCropped(mime, blob, width, height) {\n    const url = blob ? URL.createObjectURL(blob) : null;\n    this.setState({avatar: url, newAvatar: null, newAvatarMime: null});\n    if (blob) {\n      this.uploadAvatar(mime, blob, width, height);\n    }\n  }\n\n  // Utility method for converting cropped avatar blob to bytes for sending inband or\n  // for uploading it to the server out of band.\n  uploadAvatar(mime, blob, width, height) {\n    const readyToUpload = (image) => {\n      let {mime, blob} = image;\n      if (blob.size > MAX_AVATAR_BYTES) {\n        // Too large to send inband - uploading out of band and sending as a link.\n        const uploader = this.props.tinode.getLargeFileHelper();\n\n        this.setState({uploading: true});\n        uploader.upload(blob)\n          .then((url) => {\n            this.props.onUpdateTopicDesc(this.props.topic, theCard(null, url));\n          })\n          .catch((err) => {\n            this.props.onError(err, 'err');\n          })\n          .finally(() => {\n            this.setState({uploading: false});\n          });\n      } else {\n        this.setState({uploading: true});\n        // Convert blob to base64-encoded bits.\n        blobToBase64(blob)\n          .then(b64 => {\n            const du = makeImageUrl({data: b64.bits, type: mime});\n            this.setState({source: du});\n            this.props.onUpdateTopicDesc(this.props.topic, theCard(null, du));\n            this.setState({uploading: false});\n          });\n      }\n    };\n\n    if (width > AVATAR_SIZE || height > AVATAR_SIZE || width != height) {\n      // Avatar is not square or too large even after cropping. Shrink it and make square.\n      imageScaled(blob, AVATAR_SIZE, AVATAR_SIZE, MAX_EXTERN_ATTACHMENT_SIZE, true)\n        .then(scaled => readyToUpload(scaled))\n        .catch(err => this.props.onError(err, 'err'));\n    } else {\n      readyToUpload({mime: mime, blob: blob, width: width, height: height});\n    }\n  }\n\n  handleAvatarCropCancel(img) {\n    this.setState({newAvatar: null, newAvatarMime: null});\n  }\n\n  handleTagsUpdated(tags) {\n    // Check if tags have actually changed.\n    if (arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      return;\n    }\n    this.props.onUpdateTags(tags);\n  }\n\n  render() {\n    if (this.state.newAvatar) {\n      return (\n        <AvatarCrop\n          avatar={this.state.newAvatar}\n          mime={this.state.newAvatarMime}\n          onSubmit={this.handleAvatarCropped}\n          onCancel={this.handleAvatarCropCancel}\n          onError={this.props.onError} />\n      );\n    }\n\n    const editable = this.state.isMe || this.state.owner;\n\n    return (\n      <>\n      <div className=\"panel-form-column\">\n        <center>\n          <AvatarUpload\n            tinode={this.props.tinode}\n            avatar={this.state.avatar}\n            readOnly={!editable}\n            uid={this.props.topic}\n            title={this.state.fullName}\n            onImageUpdated={this.handleImageUpdated}\n            onError={this.props.onError} />\n        </center>\n        {this.state.isMe ?\n          <div className=\"group\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n              description=\"Label for full name editing\" />\n            </label>\n            <div>\n              <FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n                description=\"Input placeholder for person's full name\">{\n                (full_name_placeholder) => <InPlaceEdit\n                  placeholder={full_name_placeholder}\n                  value={this.state.fullName}\n                  required={true}\n                  onFinished={this.handleFullNameUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n        :\n          <>\n            <div className=\"group\">\n              <div><label className=\"small\">\n                <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                  description=\"Label for editing topic name\" />\n              </label></div>\n              <div>\n                <FormattedMessage id=\"topic_name_editing_placeholder\" defaultMessage=\"Freeform name of the group\"\n                  description=\"Prompt for entering topic name\">{\n                  (group_name_placeholder) => <InPlaceEdit\n                    placeholder={group_name_placeholder}\n                    readOnly={!editable}\n                    value={this.state.fullName}\n                    required={true}\n                    onFinished={this.handleFullNameUpdate} />\n                }</FormattedMessage>\n              </div>\n            </div>\n            <div className=\"group\">\n              <div>\n                <label className=\"small\">\n                  <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                    description=\"Label for editing 'private'\" />\n                </label>\n              </div>\n              <div>\n                <FormattedMessage id=\"private_editing_placeholder\" defaultMessage=\"Visible to you only\"\n                  description=\"Placeholder for editing 'private'\">{\n                  (private_placeholder) => <InPlaceEdit\n                    placeholder={private_placeholder}\n                    value={this.state.private}\n                    onFinished={this.handlePrivateUpdate} />\n                }</FormattedMessage>\n              </div>\n            </div>\n          </>\n        }\n        {editable || this.state.description ?\n          <div className=\"group\">\n            <div><label className=\"small\">\n              <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                description=\"Label for editing topic description\" />\n            </label></div>\n            <div>\n              <FormattedMessage id=\"description_editing_placeholder\"\n                defaultMessage=\"Description (optional)\"\n                description=\"Placeholder for editing topic description\">{\n                (private_placeholder) => <InPlaceEdit\n                  placeholder={private_placeholder}\n                  readOnly={!editable}\n                  value={this.state.description}\n                  multiline={2}\n                  onFinished={this.handleDescriptionUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n          : null\n        }\n      </div>\n      {editable ?\n        <>\n          <div className=\"hr\" />\n          <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (search & discovery)\"\n            description=\"Section title for TagManager\">{\n              (title_tag_manager) => <TagManager\n                tinode={this.props.tinode}\n                title={title_tag_manager}\n                activated={false}\n                tags={this.state.tags}\n                onSubmit={this.handleTagsUpdated} />\n          }</FormattedMessage>\n        </>\n        : null\n      }\n      </>\n    );\n  }\n};\n","// View for editing topic (including 'me' topic) parameters.\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport TopicDescEdit from '../widgets/topic-desc-edit.jsx';\n\nimport { arrayEqual, asEmail, asPhone } from '../lib/utils.js';\n\nexport default class TopicCommon extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    const acs = topic.getAccessMode();\n    this.state = {\n      isMe: this.props.topic == 'me',\n      owner: acs && acs.isOwner(),\n      credentials: (topic.getCredentials ? topic.getCredentials() : null) || [],\n      addCredActive: false,\n      addCredInvalid: false,\n      newCred: '',\n      tags: []\n    };\n\n    this.previousTagsUpdated = undefined;\n\n    this.onTagsUpdated = this.onTagsUpdated.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.tnCredsUpdated = this.tnCredsUpdated.bind(this);\n    this.handleCredChange = this.handleCredChange.bind(this);\n    this.handleCredKeyDown = this.handleCredKeyDown.bind(this);\n    this.handleCredEntered = this.handleCredEntered.bind(this);\n  }\n\n  // No need to separately handle component mount.\n  componentDidUpdate(props) {\n    const topic = this.props.tinode.getTopic(props.topic);\n    if (!topic) {\n      return;\n    }\n\n    topic.onCredsUpdated = this.tnCredsUpdated;\n\n    if (topic.onTagsUpdated != this.onTagsUpdated) {\n      if (topic.getType() == 'grp') {\n        this.previousTagsUpdated = topic.onTagsUpdated;\n        topic.onTagsUpdated = this.onTagsUpdated;\n      } else {\n        this.previousTagsUpdated = undefined;\n      }\n    }\n\n    if (this.state.topic != props.topic) {\n      this.setState({topic: props.topic});\n    }\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    topic.onCredsUpdated = undefined;\n    topic.onTagsUpdated = this.previousTagsUpdated;\n  }\n\n  tnCredsUpdated(creds) {\n    this.setState({credentials: creds || []});\n  }\n\n  handleCredChange(e) {\n    this.setState({newCred: e.target.value, addCredInvalid: false});\n  }\n\n  handleCredKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({newCred: '', addCredActive: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleCredEntered(e);\n    }\n  }\n\n  handleCredEntered(e) {\n    const value = this.state.newCred.trim();\n    if (!value) {\n      this.setState({addCredActive: false, addCredInvalid: false});\n      return;\n    }\n\n    let val = asPhone(value);\n    let method;\n    if (val) {\n      method = 'tel';\n    } else {\n      val = asEmail(value);\n      if (val) {\n        method = 'email';\n      }\n    }\n    if (method) {\n      this.props.onCredAdd(method, val);\n      this.setState({addCredActive: false, newCred: ''});\n    } else {\n      this.setState({addCredInvalid: true});\n    }\n  }\n\n  // Server informs that the tags have been updated.\n  onTagsUpdated(tags) {\n    this.setState({tags: tags});\n\n    if (this.previousTagsUpdated && this.previousTagsUpdated != this.onTagsUpdated) {\n      this.previousTagsUpdated(tags);\n    }\n  }\n\n  // Request server to change tags.\n  handleTagsUpdated(tags) {\n    if (!arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      this.props.onTopicTagsUpdateRequest(this.props.topic, tags);\n    }\n  }\n\n  render() {\n    const credentials = [];\n    if (this.state.isMe) {\n      this.state.credentials.map((cred) => {\n        credentials.push(\n          <div key={cred.meth + \":\" + cred.val + \":\" + cred.done}>{cred.meth}: <tt>{cred.val}</tt>\n            <span> {!cred.done ?\n              <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredConfirm(cred.meth, cred.val);}}>\n                <FormattedMessage id=\"validate_credential_action\" defaultMessage=\"confirm\"\n                  description=\"Validate credentail call to action\" />\n              </a>\n            : null} <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredDelete(cred.meth, cred.val);}}><i\n              className=\"material-icons gray\">delete_outline</i></a></span>\n          </div>\n        );\n      });\n    }\n\n    return (\n      <div className=\"scrollable-panel\">\n        <TopicDescEdit\n          tinode={this.props.tinode}\n          topic={this.props.topic}\n          onUpdateTopicDesc={this.props.onUpdateTopicDesc}\n          onUpdateTags={this.handleTagsUpdated}\n          onError={this.props.onError} />\n        {this.state.isMe ?\n          <>\n            <div className=\"hr\" />\n            <div className=\"panel-form-column\">\n              <label className=\"small\">\n                <FormattedMessage id=\"label_user_contacts\" defaultMessage=\"Contacts:\"\n                description=\"Label for user contacts\" />\n              </label>\n              <div className=\"quoted\">\n                {credentials}\n                {this.state.addCredActive ?\n                  <input type=\"text\" value={this.state.value}\n                    className={this.state.addCredInvalid ? 'invalid' : null}\n                    placeholder=\"Phone number or email\" required=\"required\" autoFocus\n                    onChange={this.handleCredChange} onKeyDown={this.handleCredKeyDown} onBlur={this.handleCredEntered} />\n                  : null}\n                <div>\n                  <a href=\"#\" onClick={(e) => {e.preventDefault(); this.setState({addCredActive: true});}}>\n                    <i className=\"material-icons\">add</i>\n                    <FormattedMessage id=\"button_add_another\" defaultMessage=\"Add another\" description=\"Call to action [+ add another]\" />\n                  </a></div>\n              </div>\n            </div>\n          </>\n        : null\n      }\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport InPlaceEdit from './in-place-edit.jsx';\n\nimport { NO_ACCESS_MODE } from '../config.js';\n\nconst messages = defineMessages({\n  clear_messages: {\n    id: 'action_clear_messages',\n    defaultMessage: 'Clear Messages',\n    description: 'Flat button [Clear Messages] (soft-delete messages)'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n  delete_messages: {\n    id: 'action_delete_messages',\n    defaultMessage: 'Clear Messages for All',\n    description: 'Flat button [Clear for All] (hard-delete all messages)'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  topic_delete: {\n    id: 'topic_delete',\n    defaultMessage: 'Delete Conversation',\n    description: 'Alert title when deleting the topic.'\n  },\n  topic_delete_warning: {\n    id: 'topic_delete_warning',\n    defaultMessage: 'Are you sure you want to delete this conversation? It cannot be undone.',\n    description: 'Alert warning when deleting entire topic'\n  },\n  leave_chat: {\n    id: 'action_leave_chat',\n    defaultMessage: 'Leave Conversation',\n    description: 'Flat button [Leave Conversation]'\n  },\n  leave_chat_warning: {\n    id: 'leave_chat_warning',\n    defaultMessage: 'Are you sure you want to leave this conversation?',\n    description: 'Alert dialog warning when unsubscribing from a chat.'\n  },\n  block_contact: {\n    id: 'action_block_contact',\n    defaultMessage: \"Block Contact\",\n    description: \"Flat button [Block Contact]\"\n  },\n  block_contact_warning: {\n    id: 'block_contact_warning',\n    defaultMessage: 'Are you sure you want to block this contact?',\n    description: 'Alert dialog warning when blocking a contact.'\n  },\n  report_chat: {\n    id: 'action_report_chat',\n    defaultMessage: 'Report Conversation',\n    description: 'Flat button [Report Group]'\n  },\n  report_chat_warning: {\n    id: 'report_chat_warning',\n    defaultMessage: 'Are you sure you want to block and report this conversation?',\n    description: 'Alert dialog warning when reporting a conversation for abuse'\n  },\n  other_user: {\n    id: 'label_other_user',\n    defaultMessage: 'Other',\n    description: 'Label for the other user when the user is unnamed'\n  },\n});\n\nclass TopicSecurity extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleDeleteTopic = this.handleDeleteTopic.bind(this);\n    this.handleDeleteMessages = this.handleDeleteMessages.bind(this);\n    this.handleLeave = this.handleLeave.bind(this);\n    this.handleBlock = this.handleBlock.bind(this);\n    this.handleReport = this.handleReport.bind(this);\n  }\n\n  handleDeleteTopic(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.topic_delete), // title\n      formatMessage(messages.topic_delete_warning), // content\n      (() => { this.props.onDeleteTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleDeleteMessages(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(this.props.deleter ? messages.delete_messages : messages.clear_messages), // title\n      formatMessage(this.props.deleter ? messages.delete_messages_warning : messages.clear_messages_warning), // content\n      (() => { this.props.onDeleteMessages(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleLeave(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.leave_chat), // title\n      formatMessage(messages.leave_chat_warning), // content\n      (() => { this.props.onLeaveTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleBlock(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.block_contact), // title\n      formatMessage(messages.block_contact_warning), // content\n      (() => { this.props.onBlockTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleReport(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.report_chat), // title\n      formatMessage(messages.report_chat_warning), // content\n      (() => { this.props.onReportTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          {!this.props.channel ?\n            <a href=\"#\" className=\"flat-button\" onClick={this.handleDeleteMessages}>\n              <i className=\"material-icons\">delete_outline</i> &nbsp;{\n                formatMessage(this.props.deleter ? messages.delete_messages : messages.clear_messages)\n              }\n            </a>\n            :\n            null\n          }\n          {this.props.owner ?\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleDeleteTopic}>\n              <i className=\"material-icons\">delete</i> &nbsp;{formatMessage(messages.topic_delete)}\n            </a>\n            :\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleLeave}>\n              <i className=\"material-icons\">exit_to_app</i> &nbsp;{formatMessage(messages.leave_chat)}\n            </a>\n          }\n          {!this.props.groupTopic ?\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleBlock}>\n              <i className=\"material-icons\">block</i> &nbsp;{formatMessage(messages.block_contact)}\n            </a>\n            :\n            null\n          }\n          {!this.props.owner ?\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleReport}>\n              <i className=\"material-icons\">report</i> &nbsp;{formatMessage(messages.report_chat)}\n            </a>\n            :\n            null\n          }\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          {this.props.groupTopic ?\n            <>\n              <div className=\"group\">\n                <label>\n                  <FormattedMessage id=\"label_your_permissions\" defaultMessage=\"Your permissions:\"\n                    description=\"Label for current user permissions\" />\n                </label> <tt className=\"clickable\"\n                  onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('want')}}>\n                  {this.props.access}\n                </tt>\n              </div>\n              {!this.props.channel ?\n                <div className=\"group\">\n                  <div>\n                    <label className=\"small\">\n                      <FormattedMessage id=\"label_default_access_mode\" defaultMessage=\"Default access mode:\"\n                      description=\"Label for default access mode\" />\n                    </label>\n                  </div>\n                  <div className=\"quoted\">\n                    <div>Auth: <tt className={this.props.owner ? 'clickable' : null}\n                      onClick={(e) => {\n                        e.preventDefault();\n                        if (this.props.owner) {\n                          this.props.onLaunchPermissionsEditor('auth');\n                        }\n                      }}>{this.props.auth}</tt>\n                    </div>\n                    <div>Anon: <tt className={this.props.owner ? 'clickable' : null}\n                      onClick={(e) => {\n                        e.preventDefault();\n                        if (this.props.owner) {\n                          this.props.onLaunchPermissionsEditor('anon');\n                        }\n                      }}>{this.props.anon}</tt>\n                    </div>\n                  </div>\n                </div>\n              :\n                null\n              }\n            </>\n            :\n            <div className=\"group\">\n              <div>\n                <label className=\"small\">\n                  <FormattedMessage id=\"label_permissions\" defaultMessage=\"Permissions:\"\n                    description=\"Section title\" />\n                </label>\n              </div>\n              <div className=\"quoted\">\n                <div>\n                  <FormattedMessage id=\"label_you\" defaultMessage=\"You:\"\n                    description=\"Label for the current user\" /> <tt className=\"clickable\"\n                    onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('want')}}>\n                    {this.props.access}\n                  </tt>\n                </div>\n                <div>{this.props.fullName ? this.props.fullName : formatMessage(messages.other_user)}:\n                  &nbsp;<tt className=\"clickable\"\n                    onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('given')}}>\n                    {this.props.modeGiven2}\n                  </tt>\n                </div>\n              </div>\n            </div>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(TopicSecurity);\n","// InfoView: panel with topic/user info.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport BadgeList from '../widgets/badge-list.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport ContactList from '../widgets/contact-list.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupManager from '../widgets/group-manager.jsx';\nimport MenuCancel from '../widgets/menu-cancel.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\nimport TopicCommon from '../widgets/topic-common.jsx';\nimport TopicSecurity from '../widgets/topic-security.jsx';\n\nimport { MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH, NO_ACCESS_MODE } from '../config.js';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, theCard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  info: {\n    id: 'panel_title_info',\n    description: 'Title for InfoView',\n    defaultMessage: 'Info'\n  },\n  general: {\n    id: 'panel_title_general',\n    description: 'Title for TopicCommon.',\n    defaultMessage: 'General'\n  },\n  security: {\n    id: 'panel_title_security',\n    description: 'Title for TopicSecirity and AccSecurity.',\n    defaultMessage: 'Security'\n  },\n  members: {\n    id: 'panel_title_members',\n    description: 'Title for managing group members view.',\n    defaultMessage: 'Members'\n  },\n  crop: {\n    id: 'panel_title_crop',\n    description: 'Title for AvatarCropView.',\n    defaultMessage: 'Drag to Adjust'\n  },\n  perm_want: {\n    id: 'requested_permissions',\n    defaultMessage: 'Requested',\n    description: 'Title for permissions'\n  },\n  perm_given: {\n    id: 'granted_permissions',\n    defaultMessage: 'Granted',\n    description: 'Title for permissions'\n  },\n  perm_auth: {\n    id: 'permissions_authenticated',\n    defaultMessage: 'Authenticated',\n    description: 'Title for editing default authenticated permissions'\n  },\n  perm_anon: {\n    id: 'permissions_anonymous',\n    defaultMessage: 'Anonymous',\n    description: 'Title for editing default anonymous permissions'\n  },\n  perm_user: {\n    id: 'permissions_user',\n    defaultMessage: 'User\\'s Permissions',\n    description: 'Title for editing user\\'s permissions'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n});\n\nfunction _clip(str, length) {\n  return str && str.substring(0, length);\n}\n\nclass InfoView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      topic: null,\n      owner: false,\n      admin: false,\n      sharer: false,\n      deleter: false,\n      muted: false,\n      address: null,\n      groupTopic: undefined,\n      channel: undefined,\n      fullName: undefined,\n      description: undefined,\n      avatar: null,\n      private: null,\n      selectedContact: null,\n      access: null,\n      modeGiven: null,\n      modeWant: null,\n      modeGiven2: null, // P2P topic, the other user mode given\n      modeWant2: null,  // P2P topic, the other user mode want\n      auth: null,\n      anon: null,\n      contactList: [],\n      trustedBadges: [],\n      previousMetaDesc: undefined,\n      previousSubsUpdated: undefined,\n    };\n\n    this.resetSubs = this.resetSubs.bind(this);\n    this.resetDesc = this.resetDesc.bind(this);\n    this.resetTags = this.resetTags.bind(this);\n    this.onMetaDesc = this.onMetaDesc.bind(this);\n    this.onSubsUpdated = this.onSubsUpdated.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleMuted = this.handleMuted.bind(this);\n    this.handleUnarchive = this.handleUnarchive.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleShowAddMembers = this.handleShowAddMembers.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleMemberSelected = this.handleMemberSelected.bind(this);\n    this.handleContextMenu = this.handleContextMenu.bind(this);\n    this.handleBackNavigate = this.handleBackNavigate.bind(this);\n  }\n\n  // No need to separately handle component mount.\n  componentDidUpdate(props) {\n    const topic = this.props.tinode.getTopic(props.topic);\n    if (!topic) {\n      return;\n    }\n\n    if (this.onMetaDesc != topic.onMetaDesc) {\n      this.previousMetaDesc = topic.onMetaDesc;\n      topic.onMetaDesc = this.onMetaDesc;\n\n      this.previousSubsUpdated = topic.onSubsUpdated;\n      topic.onSubsUpdated = this.onSubsUpdated;\n    }\n\n    if (this.state.topic != props.topic) {\n      this.setState({topic: props.topic});\n      this.resetDesc(topic, props);\n      this.resetSubs(topic, props);\n      this.resetTags(topic);\n    }\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.setState({topic: null});\n    topic.onMetaDesc = this.previousMetaDesc;\n    topic.onSubsUpdated = this.previousSubsUpdated;\n  }\n\n  resetSubs(topic, props) {\n    const newState = {contactList: []};\n    if (topic.getType() == 'p2p') {\n      // Fetch the other party in the p2p conversation.\n      // Topic may not be ready yet, so check if user is found.\n      const user2 = topic.subscriber(props.topic);\n      if (user2) {\n        newState.modeGiven2 = user2.acs.getGiven();\n        newState.modeWant2 = user2.acs.getWant();\n      } else {\n        newState.modeGiven2 = NO_ACCESS_MODE;\n        newState.modeWant2 = NO_ACCESS_MODE;\n      }\n    } else {\n      topic.subscribers((sub) => {\n        newState.contactList.push(sub);\n      }, this);\n    }\n\n    this.setState(newState);\n  }\n\n  resetDesc(topic, props) {\n    const defacs = topic.getDefaultAccess() || {};\n    const acs = topic.getAccessMode();\n\n    const badges = [];\n    if (topic.trusted) {\n      for (const [key, val] of Object.entries(topic.trusted)) {\n        if (val) {\n          badges.push(key);\n        }\n      }\n    }\n\n    this.setState({\n      owner: acs && acs.isOwner(),\n      admin: acs && acs.isAdmin(),\n      sharer: acs && acs.isSharer(),\n      deleter: acs && acs.isDeleter(),\n      muted: acs && acs.isMuted(),\n\n      fullName: _clip(topic.public ? topic.public.fn : undefined, MAX_TITLE_LENGTH),\n      description: _clip(topic.public ? topic.public.note : undefined, MAX_TOPIC_DESCRIPTION_LENGTH),\n      avatar: makeImageUrl(topic.public ? topic.public.photo : null),\n      trustedBadges: badges,\n      private: _clip(topic.private ? topic.private.comment : null, MAX_TITLE_LENGTH),\n      archived: topic.isArchived(),\n      address: topic.name,\n      groupTopic: topic.isGroupType(),\n      channel: topic.isChannelType() || topic.chan,\n      access: acs ? acs.getMode() : undefined,\n      modeGiven: acs ? acs.getGiven() : undefined,\n      modeWant: acs ? acs.getWant() : undefined,\n      auth: defacs.auth,\n      anon: defacs.anon\n    });\n  }\n\n  resetTags(topic) {\n    if (topic.getType() != 'grp') {\n      return;\n    }\n\n    const acs = topic.getAccessMode();\n    if (acs && acs.isOwner()) {\n      // Requesting tags: owner is editing the topic.\n      topic.getMeta(topic.startMetaQuery().withTags().build());\n    }\n  }\n\n  onMetaDesc(desc) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetDesc(topic, this.props);\n\n    if (this.previousMetaDesc && this.previousMetaDesc != this.onMetaDesc) {\n      this.previousMetaDesc(desc);\n    }\n  }\n\n  onSubsUpdated(subs) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetSubs(topic, this.props);\n\n    if (this.previousSubsUpdated && this.previousSubsUpdated != this.onSubsUpdated) {\n      this.previousSubsUpdated(subs);\n    }\n  }\n\n  handleImageChanged(img) {\n    this.setState({avatar: img});\n    this.props.onTopicDescUpdate(this.props.topic, theCard(null, img || Tinode.DEL_CHAR), null);\n  }\n\n  handleMuted(ignored, checked) {\n    this.setState({muted: checked});\n    this.props.onChangePermissions(this.props.topic, checked ? '-P' : '+P');\n  }\n\n  handleUnarchive(ignored, ignored2) {\n    this.props.onTopicUnArchive(this.props.topic);\n  }\n\n  handlePermissionsChanged(which, perm) {\n    switch (which) {\n      case 'auth':\n        this.props.onTopicDescUpdateRequest(this.props.topic, null, null, {auth: perm});\n        break;\n      case 'anon':\n        this.props.onTopicDescUpdateRequest(this.props.topic, null, null, {anon: perm});\n        break;\n      case 'mode':\n      case 'want':\n        this.props.onChangePermissions(this.props.topic, perm);\n        break;\n      case 'given':\n        this.props.onChangePermissions(this.props.topic, perm, this.props.topic);\n        break;\n      case 'user':\n        this.props.onChangePermissions(this.props.topic, perm, this.state.userPermissionsEdited);\n        break;\n    }\n\n    this.handleBackNavigate();\n  }\n\n  handleLaunchPermissionsEditor(which, uid) {\n    const {formatMessage} = this.props.intl;\n    let toEdit, toCompare, toSkip, titleEdit, titleCompare, userTitle, userAvatar;\n    switch (which) {\n      case 'mode':\n        toEdit = this.state.access;\n        break;\n      case 'want':\n        toEdit = this.state.modeWant;\n        toCompare = this.state.modeGiven;\n        if (this.state.owner) {\n          // Don't allow owner to unset 'O' permission. All other permissions are OK.\n          toSkip = 'O';\n        } else {\n          // Allow accepting any of 'ASDO' permissions but don't allow asking for them.\n          toSkip = Tinode.AccessMode.encode(Tinode.AccessMode.diff('ASDO', this.state.modeGiven));\n          if (this.state.channel) {\n            // Channels are read-only.\n            toSkip += 'W';\n          }\n        }\n        titleEdit = formatMessage(messages.perm_want);\n        titleCompare = formatMessage(messages.perm_given);\n        break;\n      case 'given':\n        toEdit = this.state.modeGiven2;\n        toCompare = this.state.modeWant2;\n        toSkip = this.state.groupTopic ? (this.state.owner ? '' : 'O') : 'ASDO';\n        titleEdit = formatMessage(messages.perm_given);\n        titleCompare = formatMessage(messages.perm_want);\n        break;\n      case 'auth':\n        toEdit = this.state.auth;\n        toSkip = 'O';\n        break;\n      case 'anon':\n        toEdit = this.state.anon;\n        toSkip = 'O';\n        break;\n      case 'user': {\n        const topic = this.props.tinode.getTopic(this.props.topic);\n        if (!topic) {\n          return;\n        }\n        const user = topic.subscriber(uid);\n        if (!user || !user.acs) {\n          return;\n        }\n        toEdit = user.acs.getGiven();\n        toCompare = user.acs.getWant();\n        toSkip = this.state.owner ? '' : 'O';\n        titleEdit = formatMessage(messages.perm_given);\n        titleCompare = formatMessage(messages.perm_want);\n        if (user.public) {\n          userTitle = user.public.fn;\n          userAvatar = user.public.photo;\n        }\n        break;\n      }\n      default:\n        console.error(\"Unknown permission editing mode '\" + which + \"'\");\n        return;\n    }\n    this.setState({\n      userPermissionsEdited: uid,\n      userPermissionsTitle: userTitle,\n      userPermissionsAvatar: userAvatar,\n      editedPermissions: toEdit,\n      immutablePermissions: toCompare,\n      editedPermissionsTitle: titleEdit,\n      immutablePermissionsTitle: titleCompare,\n      editedPermissionsSkipped: toSkip,\n    });\n    this.props.onNavigate(`perm/${which}`);\n  }\n\n  handleShowAddMembers(e) {\n    e.preventDefault();\n    this.props.onInitFind();\n    this.props.onNavigate('members');\n  }\n\n  handleMemberUpdateRequest(members, added, removed) {\n    this.props.onMemberUpdateRequest(this.props.topic, added, removed);\n    this.props.onNavigate('info');\n  }\n\n  handleMemberSelected(uid) {\n    this.setState({selectedContact: uid});\n  }\n\n  handleBackNavigate() {\n    const args = (this.props.panel || 'info').split('/');\n    if (args[0] == 'info') {\n      this.props.onNavigate(null);\n    } else if (args[0] == 'perm') {\n      if (args[1] == 'user') {\n        this.props.onNavigate('info');\n      } else {\n        this.props.onNavigate('security');\n      }\n    } else {\n      this.props.onNavigate('info');\n    }\n  }\n\n  handleContextMenu(params) {\n    const {formatMessage} = this.props.intl;\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    const user = topic.subscriber(params.topicName);\n    if (!user || !user.acs) {\n      return;\n    }\n\n    const isMe = this.props.tinode.isMe(params.topicName);\n    const menuItems = [\n      {title: formatMessage(messages.edit_permissions), handler: () => {\n        this.handleLaunchPermissionsEditor(isMe ? 'want' : 'user', params.topicName);\n      }}\n    ];\n    if (!isMe) {\n      menuItems.push('member_delete');\n    }\n    menuItems.push(user.acs.isMuted() ? 'member_unmute' : 'member_mute');\n    if (!isMe) {\n      menuItems.push(user.acs.isJoiner() ? 'member_block' : 'member_unblock');\n    }\n    this.props.showContextMenu({\n      topicName: this.props.topic,\n      x: params.x,\n      y: params.y,\n      user: params.topicName}, menuItems);\n  }\n\n  render() {\n    const args = (this.props.panel || 'info').split('/');\n    const view = args[0];\n    args.shift();\n\n    const {formatMessage} = this.props.intl;\n    const panelTitle = formatMessage((view == 'perm' ? messages['perm_' + args[0]] : messages[view])\n      || messages['info']);\n\n    return (\n      <div id=\"info-view\">\n        <div className=\"caption-panel\" id=\"info-caption-panel\">\n          <div className=\"panel-title\" id=\"info-title\">{panelTitle}</div>\n          <div>\n            <MenuCancel onCancel={this.handleBackNavigate} />\n          </div>\n        </div>\n        {this.props.displayMobile ?\n          <ErrorPanel\n            level={this.props.errorLevel}\n            text={this.props.errorText}\n            onClearError={this.props.onError} /> : null}\n        {view == 'members' ?\n          <GroupManager\n            tinode={this.props.tinode}\n            members={this.state.contactList}\n            requiredMember={this.props.myUserId}\n            keepInitialMembers={!this.state.admin && !this.state.owner}\n            myUserId={this.props.myUserId}\n            contacts={this.props.searchableContacts}\n            onCancel={this.handleBackNavigate}\n            onSubmit={this.handleMemberUpdateRequest} />\n          :\n        view == 'perm' && args.length > 0 ?\n          <PermissionsEditor\n            tinode={this.props.tinode}\n            mode={this.state.editedPermissions}\n            compare={this.state.immutablePermissions}\n            skip={this.state.editedPermissionsSkipped}\n            modeTitle={this.state.editedPermissionsTitle}\n            compareTitle={this.state.immutablePermissionsTitle}\n            userTitle={this.state.userPermissionsTitle}\n            item={this.state.userPermissionsEdited}\n            userAvatar={this.state.userPermissionsAvatar}\n            onSubmit={(mode) => this.handlePermissionsChanged(args[0], mode)}\n            onCancel={this.handleBackNavigate} />\n          :\n        view == 'general' ?\n          <TopicCommon\n            tinode={this.props.tinode}\n            topic={this.props.topic}\n            onCredAdd={this.props.onCredAdd}\n            onTopicTagsUpdateRequest={this.props.onTopicTagsUpdateRequest}\n            onCredConfirm={this.props.onCredConfirm}\n            onCredDelete={this.props.onCredDelete}\n            onUpdateTopicDesc={this.props.onTopicDescUpdateRequest}\n            onError={this.props.onError} />\n          :\n        view == 'security' ?\n          <TopicSecurity\n            topic={this.props.topic}\n            owner={this.state.owner}\n            admin={this.state.admin}\n            sharer={this.state.sharer}\n            deleter={this.state.deleter}\n            muted={this.state.muted}\n\n            groupTopic={this.state.groupTopic}\n            channel={this.state.channel}\n            access={this.state.access}\n            modeGiven={this.state.modeGiven}\n            modeWant={this.state.modeWant}\n            modeGiven2={this.state.modeGiven2}\n            modeWant2={this.state.modeWant2}\n            auth={this.state.auth}\n            anon={this.state.anon}\n\n            onShowAlert={this.props.onShowAlert}\n            onDeleteMessages={this.props.onDeleteMessages}\n            onLeaveTopic={this.props.onLeaveTopic}\n            onBlockTopic={this.props.onBlockTopic}\n            onReportTopic={this.props.onReportTopic}\n            onLaunchPermissionsEditor={this.handleLaunchPermissionsEditor}\n            onNavigate={this.props.onNavigate} />\n          :\n          <div id=\"info-view-content\" className=\"scrollable-panel\">\n            <div className=\"panel-form-column\">\n              <a href=\"#\" className=\"flat-button float-right\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('general');}}>\n                <i className=\"material-icons\">edit</i>&nbsp;\n                <FormattedMessage id=\"button_edit\" defaultMessage=\"Edit\" description=\"Call to action [Edit]\" />\n              </a>\n              <center>\n                <AvatarUpload\n                  tinode={this.props.tinode}\n                  avatar={this.state.avatar}\n                  readOnly={true}\n                  uid={this.props.topic}\n                  title={this.state.fullName} />\n              </center>\n              <div className=\"group\">\n                <div><label className=\"small\">\n                  <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                    description=\"Label for editing topic name\" />\n                </label></div>\n                <div className=\"large ellipsized\">{this.state.fullName}\n                {this.state.channel ? <img src=\"/img/channel.png\" className=\"channel\" alt=\"channel\" /> : null}</div>\n              </div>\n              {this.state.private ?\n                <div className=\"group\">\n                  <div><label className=\"small\">\n                    <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                      description=\"Label for editing 'private'\" />\n                  </label></div>\n                  <div className=\"large ellipsized\">{this.state.private}</div>\n                </div>\n                : null\n              }\n              <div className=\"group\">\n                <label className=\"small\"><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n                  description=\"Label for user address (ID)\" /></label>&nbsp;\n                <tt>{this.state.address}</tt>\n              </div>\n              <div className=\"group\">\n                <BadgeList trustedBadges={this.state.trustedBadges} />\n              </div>\n              {this.state.description ?\n                <div className=\"group\">\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                      description=\"Label for editing topic description\" />\n                  </label>\n                  <div>{this.state.description}</div>\n                </div> : null}\n            </div>\n            <div className=\"hr\" />\n            <div className=\"panel-form-row\">\n              <label>\n                <FormattedMessage id=\"label_muting_topic\" defaultMessage=\"Muted:\"\n                  description=\"Label for Muting/unmuting the topic\" />\n              </label>\n              <CheckBox name=\"P\" checked={this.state.muted} onChange={this.handleMuted} />\n            </div>\n            {this.state.archived ?\n              <div className=\"panel-form-row\">\n                <label>\n                  <FormattedMessage id=\"label_unarchive_topic\" defaultMessage=\"Archived:\"\n                    description=\"Label for unarchiving the topic\" />\n                </label>\n                <CheckBox name=\"archived\" checked={true} onChange={this.handleUnarchive} />\n              </div>\n              :\n              null\n            }\n            <div className=\"hr\" />\n            <div className=\"panel-form-row\">\n              <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('security');}}>\n                <i className=\"material-icons\">security</i>&nbsp;<FormattedMessage id=\"button_security\"\n                  defaultMessage=\"Security\" description=\"Navigaton button for security panel.\" />\n              </a>\n            </div>\n            {this.state.groupTopic && this.state.sharer ?\n              <>\n                <div className=\"hr\" />\n                <div className=\"panel-form-row\">\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_group_members\" defaultMessage=\"Group members:\"\n                      description=\"Section title or label\" />\n                  </label>\n                </div>\n                <div className=\"panel-form-row\">\n                  <a href=\"#\" className=\"flat-button\" onClick={this.handleShowAddMembers}>\n                    <i className=\"material-icons\">person_add</i> &nbsp;<FormattedMessage id=\"button_add_members\"\n                      defaultMessage=\"Add members\" description=\"Flat button [Add members] (to topic)\" />\n                  </a>\n                </div>\n                <FormattedMessage id=\"group_has_no_members\" defaultMessage=\"No members\"\n                  description=\"Shown in place of group members\">{\n                  (no_members) => <ContactList\n                    tinode={this.props.tinode}\n                    contacts={this.state.contactList}\n                    myUserId={this.props.myUserId}\n                    emptyListMessage={no_members}\n                    topicSelected={this.state.selectedContact}\n                    showOnline={false}\n                    showUnread={false}\n                    showMode={true}\n                    noScroll={true}\n                    onTopicSelected={this.handleMemberSelected}\n                    showContextMenu={this.state.admin ? this.handleContextMenu : false}\n                  />\n                }</FormattedMessage>\n              </>\n              :\n              null\n            }\n          </div>\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(InfoView);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\nimport { bytesToHumanSize } from '../lib/strformat.js';\nimport { isUrlRelative, sanitizeUrl } from '../lib/utils.js';\n\nexport default class Attachment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      downloader: null,\n      progress: 0\n    };\n\n    this.downloadFile = this.downloadFile.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  downloadFile(url, filename, mimetype) {\n    if (!url) {\n      this.props.onError(\"Invalid download URL '\" + url + \"'\");\n      return;\n    }\n\n    const downloader = this.props.tinode.getLargeFileHelper();\n    this.setState({downloader: downloader});\n    downloader.download(url, filename, mimetype,\n      (loaded) => {\n        this.setState({progress: loaded / this.props.size});\n      },\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    ).then(() => {\n      this.setState({downloader: null, progress: 0});\n    }).catch((err) => {\n      if (err) {\n        this.props.onError(\"Error downloading file: \" + err.message, 'err');\n      }\n      this.setState({downloader: null, progress: 0});\n    });\n  }\n\n  handleCancel() {\n    if (this.props.uploading) {\n      this.props.onCancelUpload();\n    } else if (this.state.downloader) {\n      this.state.downloader.cancel();\n    }\n  }\n\n  render() {\n    let filename = this.props.filename || 'file_attachment';\n    if (filename.length > 36) {\n      filename = filename.substr(0, 16) + '...' + filename.substr(-16);\n    }\n    let size = this.props.size > 0 ?\n      <span className=\"small gray\">({bytesToHumanSize(this.props.size)})</span> :\n      null;\n\n    // Detect if the download URL is relative or absolute.\n    // If the URL is relative use LargeFileHelper to attach authentication\n    // credentials to the request.\n    let url, helperFunc;\n    if (!this.props.uploading && !this.state.downloader && isUrlRelative(this.props.downloadUrl)) {\n      // Relative URL. Use download helper.\n      url = '#';\n      helperFunc = (e) => {\n        e.preventDefault();\n        this.downloadFile(this.props.downloadUrl, this.props.filename, this.props.mimetype);\n      };\n    } else {\n      url = sanitizeUrl(this.props.downloadUrl);\n      helperFunc = null;\n    }\n    const downloadWidget = <><i className=\"material-icons\">file_download</i> <FormattedMessage id=\"save_attachment\"\n      defaultMessage=\"save\" description=\"Call to save an attachment\" /></>;\n    return (\n      <div className=\"attachment\">\n        <div><i className=\"material-icons big gray\">insert_drive_file</i></div>\n        <div className=\"flex-column\">\n          <div>{filename} {size}</div>\n          {this.props.uploading || this.state.downloader ?\n            <FileProgress progress={this.props.uploading ? this.props.progress : this.state.progress}\n              onCancel={this.handleCancel} />\n            :\n            <div>{url ?\n              <a href={url} download={this.props.filename} onClick={helperFunc}>{downloadWidget}</a>\n              :\n              <span className=\"light-gray\">{downloadWidget}</span>\n            }</div>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n","// Received/read indicator.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { deliveryMarker } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  message_sending: {\n    id: 'message_sending',\n    defaultMessage: 'sending...',\n    description: 'Message being sent, in place of time stamp'\n  },\n  message_sending_failed: {\n    id: 'message_sending_failed',\n    defaultMessage: 'failed',\n    description: 'Failed to send message, in place of time stamp'\n  }\n});\n\nclass ReceivedMarker extends React.PureComponent {\n  render() {\n    const {formatMessage} = this.props.intl;\n    let timestamp;\n    if (this.props.received <= Tinode.MESSAGE_STATUS_SENDING) {\n      timestamp = formatMessage(messages.message_sending);\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_FAILED) {\n      timestamp = formatMessage(messages.message_sending_failed);\n    } else {\n      timestamp = this.props.timestamp.toLocaleTimeString(this.props.intl.locale, { timeStyle: 'short' });\n    }\n\n    const icon = deliveryMarker(this.props.received);\n    const marker = icon ? <i className={'material-icons small ' + icon.color}>{icon.name}</i> : null;\n\n    return (\n      <span className=\"timestamp\">\n        {timestamp}{'\\u00a0'}{marker}\n      </span>\n    );\n  }\n};\n\nexport default injectIntl(ReceivedMarker);\n","// Single chat message bubble, sent or received.\n\nimport React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport Attachment from './attachment.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\n\nimport { fullFormatter } from '../lib/formatters.js';\nimport { sanitizeUrl } from '../lib/utils.js';\n\nclass BaseChatMessage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      progress: 0\n    };\n\n    if (props.uploader) {\n      props.uploader.onProgress = this.handleProgress.bind(this);\n    }\n\n    this.handleImagePreview = this.handleImagePreview.bind(this);\n    this.handleFormButtonClick = this.handleFormButtonClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n    this.handleQuoteClick = this.handleQuoteClick.bind(this);\n\n    this.formatterContext = {\n      formatMessage: props.intl.formatMessage.bind(props.intl),\n      viewportWidth: props.viewportWidth,\n      authorizeURL: props.tinode.authorizeURL.bind(props.tinode),\n      onImagePreview: this.handleImagePreview,\n      onFormButtonClick: this.handleFormButtonClick,\n      onQuoteClick: this.handleQuoteClick\n    };\n  }\n\n  handleImagePreview(e) {\n    e.preventDefault();\n    this.props.onImagePreview({\n      url: e.target.src,\n      filename: e.target.title,\n      width: e.target.dataset.width,\n      height: e.target.dataset.height,\n      size: e.target.dataset.size,\n      type: e.target.dataset.mime\n    });\n  }\n\n  handleFormButtonClick(e) {\n    e.preventDefault();\n    const data = {\n      seq: this.props.seq\n    };\n    data.resp = {};\n    if (e.target.dataset.name) {\n      data.resp[e.target.dataset.name] = e.target.dataset.val ? e.target.dataset.val :\n        e.target.dataset.val === undefined ? 1 : '' + e.target.dataset.val;\n    }\n    if (e.target.dataset.act == 'url') {\n      data.ref = sanitizeUrl(e.target.dataset.ref) || 'about:blank';\n    }\n    const text = e.target.dataset.title || 'unknown';\n    this.props.onFormResponse(e.target.dataset.act, text, data);\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const menuItems = [];\n    if (this.props.received == Tinode.MESSAGE_STATUS_FAILED) {\n      menuItems.push('menu_item_send_retry');\n    }\n    if (this.props.userIsWriter &&\n        this.props.received > Tinode.MESSAGE_STATUS_FAILED &&\n        this.props.received < Tinode.MESSAGE_STATUS_DEL_RANGE) {\n      menuItems.push('menu_item_reply');\n    }\n    menuItems.push('menu_item_forward');\n\n    this.props.showContextMenu({\n      seq: this.props.seq,\n      content: this.props.content,\n      userFrom: this.props.userFrom,\n      userName: this.props.userName,\n      y: e.pageY,\n      x: e.pageX,\n      pickReply: this.props.pickReply\n    }, menuItems);\n  }\n\n  handleProgress(ratio) {\n    this.setState({progress: ratio});\n  }\n\n  handleCancelUpload() {\n    this.props.onCancelUpload(this.props.seq, this.props.uploader);\n  }\n\n  handleQuoteClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const replyToSeq = this.props.replyToSeq;\n    if (replyToSeq) {\n      this.props.onQuoteClick(replyToSeq);\n    }\n  }\n\n  render() {\n    const sideClass = this.props.sequence + ' ' + (this.props.response ? 'left' : 'right');\n    const bubbleClass = (this.props.sequence == 'single' || this.props.sequence == 'last') ? 'bubble tip' : 'bubble';\n    const avatar = this.props.userAvatar || true;\n    const fullDisplay = (this.props.isGroup && this.props.response &&\n      (this.props.sequence == 'single' || this.props.sequence == 'last'));\n\n    let content = this.props.content;\n    const attachments = [];\n    if (this.props.mimeType == Drafty.getContentType() && Drafty.isValid(content)) {\n      Drafty.attachments(content, (att, i) => {\n        if (att.mime == 'application/json') {\n          // Don't show json objects as attachments.\n          // They are not meant for users.\n          return;\n        }\n        attachments.push(<Attachment\n          tinode={this.props.tinode}\n          downloadUrl={Drafty.getDownloadUrl(att)}\n          filename={att.name}\n          uploading={Drafty.isProcessing(att)}\n          mimetype={att.mime}\n          size={Drafty.getEntitySize(att)}\n          progress={this.state.progress}\n          onCancelUpload={this.handleCancelUpload}\n          onError={this.props.onError}\n          key={i} />);\n      }, this);\n      const tree = Drafty.format(content, fullFormatter, this.formatterContext);\n      content = React.createElement(React.Fragment, null, tree);\n    } else if (typeof content != 'string') {\n      content = <><i className=\"material-icons gray\">warning_amber</i> <i className=\"gray\">\n        <FormattedMessage id=\"invalid_content\"\n          defaultMessage=\"invalid content\" description=\"Shown when the message is unreadable\" /></i></>\n    }\n\n    return (\n      <li ref={this.props.innerRef} className={sideClass}>\n        {this.props.isGroup && this.props.response ?\n          <div className=\"avatar-box\">\n            {fullDisplay ?\n              <LetterTile\n                tinode={this.props.tinode}\n                topic={this.props.userFrom}\n                title={this.props.userName}\n                avatar={avatar} /> :\n              null}\n          </div> :\n          null}\n        <div>\n          <div className={bubbleClass}>\n            <div className=\"content-meta\">\n              <div className=\"message-content\">\n                {content}\n                {attachments}\n              </div>\n              {this.props.timestamp ?\n                <ReceivedMarker\n                  timestamp={this.props.timestamp}\n                  received={this.props.received} />\n                : null}\n            </div>\n            {this.props.showContextMenu ?\n              <span className=\"menuTrigger\">\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">expand_more</i>\n                </a>\n              </span> : null\n            }\n          </div>\n          {fullDisplay ?\n            <div className=\"author\">\n              {this.props.userName ||\n                <i><FormattedMessage id=\"user_not_found\" defaultMessage=\"Not found\"\n                description=\"In place of a user's full name when the user is not found.\" /></i>\n              }\n            </div>\n            : null\n          }\n        </div>\n      </li>\n    );\n  }\n};\n\nconst IntlChatMessage = injectIntl(BaseChatMessage);\nconst ChatMessage = React.forwardRef((props, ref) => <IntlChatMessage innerRef = {ref} {...props} />);\n\nexport default ChatMessage;\n","// Send message form.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport { KEYPRESS_DELAY } from '../config.js';\nimport { filePasted } from '../lib/blob-helpers.js';\nimport { replyFormatter } from '../lib/formatters.js';\n\nconst messages = defineMessages({\n  messaging_disabled: {\n    id: 'messaging_disabled_prompt',\n    defaultMessage: 'Messaging disabled',\n    description: 'Prompt in SendMessage in read-only topic'\n  },\n  type_new_message: {\n    id: 'new_message_prompt',\n    defaultMessage: 'New message',\n    description: 'Prompt in send message field'\n  },\n  add_image_caption: {\n    id: 'image_caption_prompt',\n    defaultMessage: 'Image caption',\n    description: 'Prompt in SendMessage for attached image'\n  },\n  file_attachment_too_large: {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  },\n  cannot_initiate_upload: {\n    id: 'cannot_initiate_file_upload',\n    defaultMessage: 'Cannot initiate file upload.',\n    description: 'Generic error messagewhen attachment fails'\n  },\n});\n\nclass SendMessage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      quote: null,\n      message: '',\n      // Make initial keypress time as if it happened 5001 milliseconds in the past.\n      keypressTimestamp: new Date().getTime() - KEYPRESS_DELAY - 1\n    };\n\n    this.handlePasteEvent = this.handlePasteEvent.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleSend = this.handleSend.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleMessageTyping = this.handleMessageTyping.bind(this);\n\n    this.handleQuoteClick = this.handleQuoteClick.bind(this);\n\n    this.formatReply = this.formatReply.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.addEventListener('paste', this.handlePasteEvent, false);\n    }\n\n    this.setState({quote: this.formatReply()});\n  }\n\n  componentWillUnmount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.removeEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.messageEditArea) {\n      this.messageEditArea.focus();\n    }\n\n    if (prevProps.reply != this.props.reply) {\n      this.setState({quote: this.formatReply()});\n    }\n  }\n\n  formatReply() {\n    return this.props.reply ?\n      Drafty.format(this.props.reply.content, replyFormatter, {\n        formatMessage: this.props.intl.formatMessage.bind(this.props.intl),\n        authorizeURL: this.props.tinode.authorizeURL.bind(this.props.tinode)\n      }) : null;\n  }\n\n  handlePasteEvent(e) {\n    if (this.props.disabled) {\n      return;\n    }\n    // FIXME: handle large files too.\n    if (filePasted(e,\n      (bits, mime, width, height, fname) => {\n        this.props.onAttachImage(mime, bits, width, height, fname);\n      },\n      (mime, bits, fname) => {\n        this.props.onAttachFile(mime, bits, fname);\n      },\n      this.props.onError)) {\n\n      // If a file was pasted, don't paste base64 data into input field.\n      e.preventDefault();\n    }\n  }\n\n  handleAttachImage(e) {\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachImage(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleAttachFile(e) {\n    const {formatMessage} = this.props.intl;\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachFile(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleSend(e) {\n    e.preventDefault();\n    const message = this.state.message.trim();\n    if (message || this.props.acceptBlank || this.props.noInput) {\n      this.props.onSendMessage(message);\n      this.setState({message: ''});\n    }\n  }\n\n  /* Send on Enter key */\n  handleKeyPress(e) {\n    // Remove this if you don't want Enter to trigger send\n    if (e.key === 'Enter') {\n      // Have Shift-Enter insert a line break instead\n      if (!e.shiftKey) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.handleSend(e);\n      }\n    }\n  }\n\n  handleMessageTyping(e) {\n    const newState = {message: e.target.value};\n    if (this.props.onKeyPress) {\n      const now = new Date().getTime();\n      if (now - this.state.keypressTimestamp > KEYPRESS_DELAY) {\n        this.props.onKeyPress();\n        newState.keypressTimestamp = now;\n      }\n    }\n    this.setState(newState);\n  }\n\n  handleQuoteClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.props.reply && this.props.onQuoteClick) {\n      const replyToSeq = this.props.reply.seq;\n      this.props.onQuoteClick(replyToSeq);\n    }\n  }\n\n  render() {\n    const { formatMessage } = this.props.intl;\n    const prompt = this.props.disabled ?\n      formatMessage(messages.messaging_disabled) :\n      (this.props.messagePrompt ?\n        formatMessage(messages[this.props.messagePrompt]) :\n        formatMessage(messages.type_new_message));\n\n    const quote =\n      (<div id=\"reply-quote-preview\">\n        <div className=\"cancel\">\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancelReply();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        {this.state.quote}\n      </div>);\n\n    return (\n      <div id=\"send-message-wrapper\">\n        {this.state.quote && !this.props.noInput ? quote : null}\n        <div id=\"send-message-panel\">\n          {!this.props.disabled ?\n            <>\n              {this.props.onAttachFile ?\n                <>\n                  <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachImage.click();}} title=\"Add image\">\n                    <i className=\"material-icons secondary\">photo</i>\n                  </a>\n                  <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachFile.click();}} title=\"Attach file\">\n                    <i className=\"material-icons secondary\">attach_file</i>\n                  </a>\n                </>\n                :\n                null}\n              {this.props.noInput ?\n                (this.state.quote ? quote : <div className=\"hr thin\" />) :\n                <textarea id=\"sendMessage\" placeholder={prompt}\n                  value={this.state.message} onChange={this.handleMessageTyping}\n                  onKeyPress={this.handleKeyPress}\n                  ref={(ref) => {this.messageEditArea = ref;}}\n                  autoFocus />}\n              <a href=\"#\" onClick={this.handleSend} title=\"Send\">\n                <i className=\"material-icons\">send</i>\n              </a>\n              <input type=\"file\" ref={(ref) => {this.attachFile = ref;}}\n                onChange={this.handleAttachFile} style={{display: 'none'}} />\n              <input type=\"file\" ref={(ref) => {this.attachImage = ref;}} accept=\"image/*\"\n                onChange={this.handleAttachImage} style={{display: 'none'}} />\n            </>\n            :\n            <div id=\"writing-disabled\">{prompt}</div>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SendMessage);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { bytesToHumanSize, shortenFileName } from '../lib/strformat.js';\n\n// Get material icon name from mime type.\nfunction iconFromMime(mime) {\n  // If more icons become available in material icons, add them to this mime-to-icon mapping.\n  const mimeToIcon = {default: 'insert_drive_file', image: 'image', text: 'description', video: 'theaters'};\n\n  return mimeToIcon[mime] || mimeToIcon[(mime || '').split('/')[0]] || mimeToIcon['default'];\n}\n\nexport default class DocPreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleSendDoc = this.handleSendDoc.bind(this);\n  }\n\n  handleSendDoc(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(this.props.content.file);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          <span>{this.props.content.name}</span>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\">\n          <div className=\"flex-column narrow\">\n            <i className=\"material-icons gray\">{iconFromMime(this.props.content.type)}</i>\n            <div><b><FormattedMessage id=\"label_file_name\" defaultMessage=\"File name:\"\n              description=\"Label for a file name\" /></b> {shortenFileName(this.props.content.name, 24) || '-'}</div>\n            <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n              description=\"Label for file content type (mime)\" /></b> {this.props.content.type || 'application/octet-stream'}</div>\n            <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n              description=\"Label for file size\" /></b> {bytesToHumanSize(this.props.content.size)}</div>\n          </div>\n        </div>\n        <SendMessage\n          noInput={true}\n          tinode={this.props.tinode}\n          reply={this.props.reply}\n          onCancelReply={this.props.onCancelReply}\n          onSendMessage={this.handleSendDoc}\n          onError={this.props.onError} />\n      </div>\n    );\n  }\n};\n","// GroupSubs: a list of group subscribers currently online.\n// Show in the topic title bar\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { MAX_ONLINE_IN_TOPIC } from '../config.js'\n\nimport LetterTile from './letter-tile.jsx';\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class GroupSubs extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const usersOnline = [];\n    const totalCount = (this.props.subscribers || []).length;\n    const countToShow = Math.min(MAX_ONLINE_IN_TOPIC, totalCount);\n\n    (this.props.subscribers || []).some((sub) => {\n      usersOnline.push(\n        <div className=\"avatar-box\" key={sub.user}>\n          <LetterTile\n            tinode={this.props.tinode}\n            topic={sub.user}\n            avatar={makeImageUrl(sub.public ? sub.public.photo : null) || true}\n            title={sub.public ? sub.public.fn : null} />\n        </div>\n      );\n      return usersOnline.length == countToShow;\n    });\n\n    return (\n      <div id=\"topic-users\">{usersOnline} {totalCount > countToShow ?\n        <span>\n          <FormattedMessage id=\"more_online_members\" defaultMessage=\"+{overflow} more\"\n              description=\"Shown in MessagesView title bar when the number of online subscribers exceeds MAX_ONLINE_IN_TOPIC\"\n              values={{ overflow: (totalCount - countToShow) }} />\n        </span> : null}\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\nimport { bytesToHumanSize, shortenFileName } from '../lib/strformat.js';\n\nexport default class ImagePreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      width: 0,\n      height: 0\n    };\n\n    this.handleSendImage = this.handleSendImage.bind(this);\n  }\n\n  assignWidth(node) {\n    if (node && !this.state.width) {\n      const bounds = node.getBoundingClientRect();\n      this.setState({\n        width: bounds.width | 0,\n        height: bounds.height | 0\n      });\n    }\n  }\n\n  handleSendImage(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(caption, this.props.content.blob);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n\n    const dim = fitImageSize(this.props.content.width, this.props.content.height,\n      this.state.width, this.state.height, false);\n    const size = dim ? { width: dim.dstWidth + 'px', height: dim.dstHeight + 'px' } :\n      ((this.props.content.width > this.props.content.height) ? {width: '100%'} : {height: '100%'});\n    size.maxWidth = '100%';\n    size.maxHeight = '100%';\n\n    // Average font aspect ratio is ~0.5; File name takes 1/3 of the viewport width.\n    const maxlength = Math.max(((this.state.width / REM_SIZE / 1.5) | 0) - 2, 12);\n    const fname = shortenFileName(this.props.content.name, maxlength) || '-';\n\n    const width = this.props.content.width || '-';\n    const height = this.props.content.height || '-';\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          {!this.props.onSendMessage ?\n            <a href={this.props.content.url} download={true}>\n              <i className=\"material-icons\">file_download</i> <FormattedMessage\n                id=\"download_action\" defaultMessage=\"download\" description=\"Call to action [download]\" />\n            </a>\n            :\n            <span>{fname}</span>\n          }\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\" ref={(node) => this.assignWidth(node)}>\n          <img src={this.props.content.url} style={size} className=\"image-preview\" alt={this.props.content.name} />\n        </div>\n        {this.props.onSendMessage ?\n          <SendMessage\n            messagePrompt=\"add_image_caption\"\n            acceptBlank={true}\n            tinode={this.props.tinode}\n            reply={this.props.reply}\n            onCancelReply={this.props.onCancelReply}\n            onSendMessage={this.handleSendImage}\n            onError={this.props.onError} />\n          :\n          <div id=\"image-preview-footer\">\n            <div>\n              <div><b><FormattedMessage id=\"label_file_name\" defaultMessage=\"File name:\"\n                description=\"Label for a file name\" /></b></div>\n              <div><span title={this.props.content.name}>{fname}</span></div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n                description=\"Label for file content type (mime)\" /></b></div>\n              <div>{this.props.content.type}</div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n                description=\"Label for file size\" /></b></div>\n              <div>{width} &times; {height} px; {bytesToHumanSize(this.props.content.size)}</div>\n            </div>\n          </div>}\n      </div>\n    );\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Invitation extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleButtonAction = this.handleButtonAction.bind(this);\n  }\n\n  handleButtonAction(evt, data) {\n    evt.preventDefault();\n    this.props.onAction(data);\n  }\n\n  render() {\n    return (\n      <div className=\"accept-invite-panel\">\n        <div className=\"title\">\n          <FormattedMessage id=\"chat_invitation\"\n            defaultMessage=\"You are invited to start a new chat. What would you like to do?\"\n            description=\"New chat invitation message: [Accept] [Ignore] [Block].\" />\n        </div>\n        <div className=\"footer\">\n          <button className=\"primary\" onClick={event => { this.handleButtonAction(event, \"accept\"); }}>\n            <FormattedMessage id=\"chat_invitation_accept\"\n              defaultMessage=\"Accept\" description=\"Action [Accept] for chat invitation.\" />\n          </button>\n          <button className=\"secondary\" onClick={event => { this.handleButtonAction(event, \"delete\"); }}>\n            <FormattedMessage id=\"chat_invitation_ignore\"\n              defaultMessage=\"Ignore\" description=\"Action [Ignore] for chat invitation.\" />\n          </button>\n          <button className=\"secondary\" onClick={event => { this.handleButtonAction(event, \"block\"); }}>\n            <FormattedMessage id=\"chat_invitation_block\"\n              defaultMessage=\"Block\" description=\"Action [Block] for chat invitation.\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n","/* This is just a static page to display when no conversation is selected. */\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME } from '../config.js';\n\nexport default class LogoView extends React.PureComponent {\n  render() {\n    const version = APP_NAME + ' (' + Tinode.getLibrary() + ')';\n    return (\n      <div id=\"dummy-view\">\n        <div>\n          <a href=\"https://github.com/tinode/chat/\">\n            <img id=\"logo\" alt=\"logo\" src=\"img/logo.svg\" />\n            <h2>Tinode Web</h2>\n          </a>\n          <p><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\"\n            description=\"Label for a client version\" /> {version}</p>\n          <p><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\"\n            description=\"Label for a server version\" /> {this.props.serverVersion} ({this.props.serverAddress})</p>\n        </div>\n      </div>\n    );\n  }\n};\n","// Message bubble with non-payload content, such as an indicator of deleted content or a date stamp.\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class MetaMessage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let content = null;\n    let bubbleClass = 'bubble';\n    if (this.props.deleted) {\n      // Message represents a range of deleted messages.\n      content = <><i className=\"material-icons gray\">block</i> <i className=\"gray\">\n        <FormattedMessage id=\"deleted_content\"\n          defaultMessage=\"content deleted\" description=\"Shown when messages are deleted\" />\n      </i></>\n      bubbleClass += ' deleted';\n    } else if (this.props.date) {\n      // A date badge.\n      content = <>{this.props.date}</>\n      bubbleClass += ' date';\n    }\n\n    if (!content) {\n      return <>{null}</>\n    }\n\n    return (\n      <li className=\"meta\">\n        <div className={bubbleClass}>\n          <div className=\"message-content\">\n            {content}\n          </div>\n        </div>\n      </li>\n    );\n  }\n};\n","// Utility class for hash navigation.\n\n// Parse hash as in http://www.example.com/path#hash as if it were\n// path and arguments.\nexport default class HashNavigation {\n  static parseUrlHash(hash) {\n    // Split path from args, path -> parts[0], args->path[1]\n    const parts = hash.split('?', 2);\n    const params = {};\n    let path = [];\n    if (parts[0]) {\n      path = parts[0].replace('#', '').split('/');\n    }\n    if (parts[1]) {\n      parts[1].split('&').forEach(function(part) {\n        const item = part.split('=');\n        if (item[0]) {\n          params[decodeURIComponent(item[0])] = decodeURIComponent(item[1]);\n        }\n      });\n    }\n    return {path: path, params: params};\n  }\n\n  static navigateTo(url) {\n    window.location.hash = url;\n  }\n\n  static composeUrlHash(path, params) {\n    let url = path.join('/');\n    const args = [];\n    for (const key in params) {\n      if (params.hasOwnProperty(key)) {\n        args.push(key + '=' + params[key]);\n      }\n    }\n    if (args.length > 0) {\n      url += '?' + args.join('&');\n    }\n    return url;\n  }\n\n  static addUrlParam(hash, key, value) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.params[key] = value;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static removeUrlParam(hash, key) {\n    const parsed = this.parseUrlHash(hash);\n    delete parsed.params[key];\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlSidePanel(hash, sidepanel) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[0] = sidepanel;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlInfoPanel(hash, infopanel) {\n    const parsed = this.parseUrlHash(hash);\n    if (infopanel) {\n      parsed.params.info = infopanel;\n    } else {\n      delete parsed.params.info;\n    }\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlTopic(hash, topic) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[1] = topic;\n    // Close InfoView on topic change.\n    delete parsed.params.info;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n}\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\nconst Drafty = Tinode.Drafty;\n\nimport ChatMessage from '../widgets/chat-message.jsx';\nimport ContactBadges from '../widgets/contact-badges.jsx';\nimport DocPreview from '../widgets/doc-preview.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupSubs from '../widgets/group-subs.jsx';\nimport ImagePreview from '../widgets/image-preview.jsx';\nimport Invitation from '../widgets/invitation.jsx';\nimport LetterTile from '../widgets/letter-tile.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport LogoView from './logo-view.jsx';\nimport MetaMessage from '../widgets/meta-message.jsx';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { DEFAULT_P2P_ACCESS_MODE, IMAGE_PREVIEW_DIM, KEYPRESS_DELAY,\n  MESSAGES_PAGE, MAX_EXTERN_ATTACHMENT_SIZE, MAX_IMAGE_DIM, MAX_INBAND_ATTACHMENT_SIZE,\n  READ_DELAY, QUOTED_REPLY_LENGTH } from '../config.js';\nimport { blobToBase64, fileToBase64, imageScaled, makeImageUrl } from '../lib/blob-helpers.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { bytesToHumanSize, shortDateFormat } from '../lib/strformat.js';\n\n// Run timer with this frequency (ms) for checking notification queue.\nconst NOTIFICATION_EXEC_INTERVAL = 300;\n// Scroll distance before [go to latest message] button is shown.\nconst SHOW_GO_TO_LAST_DIST = 100;\n\nconst messages = defineMessages({\n  online_now: {\n    id: 'online_now',\n    defaultMessage: 'online now',\n    description: 'Indicator that the user or topic is currently online',\n  },\n  last_seen: {\n    id: 'last_seen_timestamp',\n    defaultMessage: 'Last seen',\n    description: 'Label for the timestamp of when the user or topic was last online'\n  },\n  not_found: {\n    id: 'title_not_found',\n    defaultMessage: 'Not found',\n    description: 'Title shown when topic is not found'\n  },\n  channel: {\n    id: 'channel',\n    defaultMessage: 'channel',\n    description: 'Subtitle shown for channels in MessagesView instead of last seen'\n  },\n  file_attachment_too_large: {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  },\n  invalid_content: {\n    id: 'invalid_content',\n    defaultMessage: 'invalid content',\n    description: 'Shown when the message is unreadable'\n  },\n});\n\n// Checks if the access permissions are granted but not yet accepted.\nfunction isUnconfirmed(acs) {\n  if (acs) {\n    const ex = acs.getExcessive() || '';\n    return acs.isJoiner('given') && (ex.includes('R') || ex.includes('W'));\n  }\n  return false;\n}\n\nfunction isPeerRestricted(acs) {\n  if (acs) {\n    const ms = acs.getMissing() || '';\n    return acs.isJoiner('want') && (ms.includes('R') || ms.includes('W'));\n  }\n  return false;\n}\n\nclass MessagesView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = MessagesView.getDerivedStateFromProps(props, {});\n\n    this.leave = this.leave.bind(this);\n    this.sendMessage = this.sendMessage.bind(this);\n    this.retrySend = this.retrySend.bind(this);\n    this.sendImageAttachment = this.sendImageAttachment.bind(this);\n    this.sendFileAttachment = this.sendFileAttachment.bind(this);\n    this.sendKeyPress = this.sendKeyPress.bind(this);\n    this.subscribe = this.subscribe.bind(this);\n    this.handleScrollReference = this.handleScrollReference.bind(this);\n    this.handleScrollEvent = this.handleScrollEvent.bind(this);\n    this.handleDescChange = this.handleDescChange.bind(this);\n    this.handleSubsUpdated = this.handleSubsUpdated.bind(this);\n    this.handleMessageUpdate = this.handleMessageUpdate.bind(this);\n    this.handleAllMessagesReceived = this.handleAllMessagesReceived.bind(this);\n    this.handleInfoReceipt = this.handleInfoReceipt.bind(this);\n    this.handleImagePostview = this.handleImagePostview.bind(this);\n    this.handleClosePreview = this.handleClosePreview.bind(this);\n    this.handleFormResponse = this.handleFormResponse.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleShowMessageContextMenu = this.handleShowMessageContextMenu.bind(this);\n    this.handleNewChatAcceptance = this.handleNewChatAcceptance.bind(this);\n    this.handleEnablePeer = this.handleEnablePeer.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n    this.postReadNotification = this.postReadNotification.bind(this);\n    this.clearNotificationQueue = this.clearNotificationQueue.bind(this);\n    this.goToLatestMessage = this.goToLatestMessage.bind(this);\n\n    this.handlePickReply = this.handlePickReply.bind(this);\n    this.handleCancelReply = this.handleCancelReply.bind(this);\n    this.handleQuoteClick = this.handleQuoteClick.bind(this);\n\n    this.chatMessageRefs = {};\n    this.getOrCreateMessageRef = this.getOrCreateMessageRef.bind(this);\n\n    this.readNotificationQueue = [];\n    this.readNotificationTimer = null;\n  }\n\n  getOrCreateMessageRef(seqId) {\n    if (this.chatMessageRefs.hasOwnProperty(seqId)) {\n      return this.chatMessageRefs[seqId];\n    }\n    const ref = React.createRef();\n    this.chatMessageRefs[seqId] = ref;\n    return ref;\n  }\n\n  componentDidMount() {\n    if (this.messagesScroller) {\n      this.messagesScroller.addEventListener('scroll', this.handleScrollEvent);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messagesScroller) {\n      this.messagesScroller.removeEventListener('scroll', this.handleScrollEvent);\n    }\n\n    // Flush all notifications.\n    this.clearNotificationQueue();\n  }\n\n  // Scroll last message into view on component update e.g. on message received\n  // or vertical shrinking.\n  componentDidUpdate(prevProps, prevState) {\n    if (this.messagesScroller &&\n      (prevState.topic != this.state.topic || prevState.messageCount != this.state.messageCount)) {\n      // New message.\n      if (this.state.scrollPosition < SHOW_GO_TO_LAST_DIST) {\n        this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight -\n          this.state.scrollPosition -\n          this.messagesScroller.offsetHeight;\n      }\n    }\n\n    const topic = this.props.tinode ? this.props.tinode.getTopic(this.state.topic) : undefined;\n    if (this.state.topic != prevState.topic) {\n      if (prevState.topic && !Tinode.isNewGroupTopicName(prevState.topic)) {\n        this.leave(prevState.topic);\n      }\n\n      if (topic) {\n        topic.onData = this.handleMessageUpdate;\n        topic.onAllMessagesReceived = this.handleAllMessagesReceived;\n        topic.onInfo = this.handleInfoReceipt;\n        topic.onMetaDesc = this.handleDescChange;\n        topic.onSubsUpdated = this.handleSubsUpdated;\n        topic.onPres = this.handleSubsUpdated;\n      }\n    }\n\n    if (!this.props.applicationVisible) {\n      // If application is not visible, flush all unsent 'read' notifications.\n      this.clearNotificationQueue();\n    } else {\n      // Otherwise assume there are unread messages.\n      this.postReadNotification(0);\n    }\n\n    if ((this.state.topic != prevState.topic) || !prevProps.ready) {\n      this.subscribe(topic);\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let nextState = {};\n    if (!nextProps.topic) {\n      // Default state: no topic.\n      nextState = {\n        messageCount: 0,\n        latestClearId: -1,\n        onlineSubs: [],\n        topic: null,\n        title: '',\n        avatar: null,\n        isVerified: false,\n        isStaff: false,\n        isDangerous: false,\n        deleted: false,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false,\n        peerMessagingDisabled: false,\n        channel: false,\n        reply: null,\n        showGoToLastButton: false\n      };\n    } else if (nextProps.topic != prevState.topic) {\n      const topic = nextProps.tinode.getTopic(nextProps.topic);\n\n      let reply = null;\n      if (nextProps.forwardMessage) {\n        // We are forwarding a message. Show preview.\n        const preview = nextProps.forwardMessage.preview;\n        reply = {\n          content: preview,\n          seq: null\n        };\n      }\n\n      nextState = {\n        topic: nextProps.topic,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false,\n        reply: reply,\n        showGoToLastButton: false,\n        deleted: topic._deleted\n      };\n\n      if (topic) {\n        // Topic exists.\n        const subs = [];\n\n        if (nextProps.connected) {\n          topic.subscribers((sub) => {\n            if (sub.online && sub.user != nextProps.myUserId) {\n              subs.push(sub);\n            }\n          });\n        }\n\n        Object.assign(nextState, {\n          onlineSubs: subs\n        });\n\n        if (topic.public) {\n          Object.assign(nextState, {\n            title: topic.public.fn,\n            avatar: makeImageUrl(topic.public.photo)\n          });\n        } else {\n          Object.assign(nextState, {\n            title: '',\n            avatar: null\n          });\n        }\n\n        const peer = topic.p2pPeerDesc();\n        if (peer) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: isPeerRestricted(peer.acs)\n          });\n        } else if (prevState.peerMessagingDisabled) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: false\n          });\n        }\n        Object.assign(nextState, {\n          messageCount: topic.messageCount(),\n          latestClearId: topic.maxClearId(),\n          channel: topic.isChannelType()\n        });\n      } else {\n        // Invalid topic.\n        Object.assign(nextState, {\n          messageCount: 0,\n          latestClearId: -1,\n          onlineSubs: [],\n          title: '',\n          avatar: null,\n          peerMessagingDisabled: false,\n          channel: false\n        });\n      }\n    }\n\n    if (nextProps.acs) {\n      if (nextProps.acs.isWriter() != prevState.isWriter) {\n        nextState.isWriter = !prevState.isWriter;\n      }\n      if (nextProps.acs.isReader() != prevState.isReader) {\n        nextState.isReader = !prevState.isReader;\n      }\n      if (!nextProps.acs.isReader('given') != prevState.readingBlocked) {\n        nextState.readingBlocked = !prevState.readingBlocked;\n      }\n      if (nextProps.acs.isSharer() != prevState.isSharer) {\n        nextState.isSharer = !prevState.isSharer;\n      }\n    } else {\n      if (prevState.isWriter) {\n        nextState.isWriter = false;\n      }\n      if (prevState.isReader) {\n        nextState.isReader = false;\n      }\n      if (!prevState.readingBlocked) {\n        prevState.readingBlocked = true;\n      }\n      if (prevState.isSharer) {\n        nextState.isSharer = false;\n      }\n    }\n\n    if (isUnconfirmed(nextProps.acs) == !prevState.unconformed) {\n      nextState.unconfirmed = !prevState.unconformed;\n    }\n\n    // Clear subscribers online when there is no connection.\n    if (!nextProps.connected && prevState.onlineSubs && prevState.onlineSubs.length > 0) {\n      nextState.onlineSubs = [];\n    }\n\n    return nextState;\n  }\n\n  subscribe(topic) {\n    if (!topic || topic.isSubscribed() || !this.props.ready) {\n      return;\n    }\n\n    // Is this a new topic?\n    const newTopic = (this.props.newTopicParams && this.props.newTopicParams._topicName == this.props.topic);\n\n    // Don't request the tags. They are useless unless the user\n    // is the owner and is editing the topic.\n    let getQuery = topic.startMetaQuery().withLaterDesc().withLaterSub();\n    if (this.state.isReader || newTopic) {\n      // Reading is either permitted or we don't know because it's a new topic. Ask for messages.\n      getQuery = getQuery.withLaterData(MESSAGES_PAGE);\n      if (this.state.isReader) {\n        getQuery = getQuery.withLaterDel();\n      }\n      // And show \"loading\" spinner.\n      this.setState({ fetchingMessages: true });\n    }\n\n    const setQuery = newTopic ? this.props.newTopicParams : undefined;\n    topic.subscribe(getQuery.build(), setQuery)\n      .then((ctrl) => {\n        if (ctrl.code == 303) {\n          // Redirect to another topic requested.\n          HashNavigation.navigateTo(HashNavigation.setUrlTopic('', ctrl.params.topic));\n          return;\n        }\n        if (this.state.topic != ctrl.topic) {\n          this.setState({topic: ctrl.topic});\n        }\n        this.props.onNewTopicCreated(this.props.topic, ctrl.topic);\n        // If there are unsent messages, try sending them now.\n        topic.queuedMessages((pub) => {\n          if (!pub._sending && topic.isSubscribed()) {\n            this.retrySend(pub);\n          }\n        });\n      })\n      .catch((err) => {\n        console.error(\"Failed subscription to\", this.state.topic);\n        this.props.onError(err.message, 'err');\n        const blankState = MessagesView.getDerivedStateFromProps({}, {});\n        blankState.title = this.props.intl.formatMessage(messages.not_found);\n        this.setState(blankState);\n      });\n  }\n\n  leave(oldTopicName) {\n    if (!oldTopicName || !this.props.tinode.isTopicCached(oldTopicName)) {\n      return;\n    }\n    const oldTopic = this.props.tinode.getTopic(oldTopicName);\n    if (oldTopic && oldTopic.isSubscribed()) {\n      oldTopic.leave(false)\n        .catch(() => { /* do nothing here */ })\n        .finally(() => {\n          // We don't care if the request succeeded or failed.\n          // The topic is dead regardless.\n          this.setState({fetchingMessages: false});\n          oldTopic.onData = undefined;\n          oldTopic.onAllMessagesReceived = undefined;\n          oldTopic.onInfo = undefined;\n          oldTopic.onMetaDesc = undefined;\n          oldTopic.onSubsUpdated = undefined;\n          oldTopic.onPres = undefined;\n        });\n    }\n  }\n\n  // Don't use React.createRef as the ref.current is not available in componentDidMount in this component.\n  handleScrollReference(node) {\n    if (node) {\n      node.addEventListener('scroll', this.handleScrollEvent);\n      this.messagesScroller = node;\n      this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n    }\n  }\n\n  // Get older messages and show/hide [go to latest message] button.\n  handleScrollEvent(event) {\n    const pos = event.target.scrollHeight - event.target.scrollTop - event.target.offsetHeight;\n    this.setState({\n      scrollPosition: pos,\n      showGoToLastButton: pos > SHOW_GO_TO_LAST_DIST,\n    });\n\n    if (this.state.fetchingMessages) {\n      return;\n    }\n\n    if (event.target.scrollTop <= 0) {\n      const topic = this.props.tinode.getTopic(this.state.topic);\n      if (topic && topic.isSubscribed() && topic.msgHasMoreMessages()) {\n        this.setState({fetchingMessages: true}, () => {\n          topic.getMessagesPage(MESSAGES_PAGE)\n            .catch((err) => this.props.onError(err.message, 'err'))\n            .finally(() => this.setState({fetchingMessages: false}));\n          });\n      }\n    }\n  }\n\n  goToLatestMessage() {\n    this.setState({scrollPosition: 0});\n    if (this.messagesScroller) {\n      this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight;\n    }\n  }\n\n  handleDescChange(desc) {\n    if (desc.public) {\n      this.setState({\n        title: desc.public.fn,\n        avatar: makeImageUrl(desc.public.photo)\n      });\n    } else {\n      this.setState({\n        title: '',\n        avatar: null\n      });\n    }\n\n    if (desc.acs) {\n      this.setState({\n        isWriter: desc.acs.isWriter(),\n        isReader: desc.acs.isReader(),\n        readingBlocked: !desc.acs.isReader('given'),\n        unconfirmed: isUnconfirmed(desc.acs),\n      });\n    }\n  }\n\n  postReadNotification(seq) {\n    // Ignore notifications if the app is invisible.\n    if (!this.props.applicationVisible) {\n      return;\n    }\n\n    // Set up the timer if it's not running already.\n    if (!this.readNotificationTimer) {\n      this.readNotificationTimer = setInterval(() => {\n        if (this.readNotificationQueue.length == 0) {\n          // Shut down the timer if the queue is empty.\n          clearInterval(this.readNotificationTimer);\n          this.readNotificationTimer = null;\n          return;\n        }\n\n        let seq = -1;\n        while (this.readNotificationQueue.length > 0) {\n          const n = this.readNotificationQueue[0];\n          if (n.topicName != this.state.topic) {\n            // Topic has changed. Drop the notification.\n            this.readNotificationQueue.shift();\n            continue;\n          }\n\n          const now = new Date();\n          if (n.sendAt <= now) {\n            // Remove expired notification from queue.\n            this.readNotificationQueue.shift();\n            seq = Math.max(seq, n.seq);\n          } else {\n            break;\n          }\n        }\n\n        // Send only one notification for the whole batch of messages.\n        if (seq >= 0) {\n          const topic = this.props.tinode.getTopic(this.state.topic);\n          if (topic) {\n            topic.noteRead(seq);\n          }\n        }\n      }, NOTIFICATION_EXEC_INTERVAL);\n    }\n\n    const now = new Date();\n    this.readNotificationQueue.push({\n      topicName: this.state.topic,\n      seq: seq,\n      sendAt: now.setMilliseconds(now.getMilliseconds() + READ_DELAY)\n    });\n  }\n\n  // Clear notification queue and timer.\n  clearNotificationQueue() {\n    this.readNotificationQueue = [];\n    if (this.readNotificationTimer) {\n      clearInterval(this.readNotificationTimer);\n      this.readNotificationTimer = null;\n    }\n  }\n\n  handleSubsUpdated() {\n    if (this.state.topic) {\n      const subs = [];\n      const topic = this.props.tinode.getTopic(this.state.topic);\n      topic.subscribers((sub) => {\n        if (sub.online && sub.user != this.props.myUserId) {\n          subs.push(sub);\n        }\n      });\n      const newState = {onlineSubs: subs};\n      const peer = topic.p2pPeerDesc();\n      if (peer) {\n        Object.assign(newState, {\n          peerMessagingDisabled: isPeerRestricted(peer.acs)\n        });\n      } else if (this.state.peerMessagingDisabled) {\n        Object.assign(newState, {\n          peerMessagingDisabled: false\n        });\n      }\n      this.setState(newState);\n    }\n  }\n\n  // The 'msg' could be false-ish if some message ranges were deleted.\n  handleMessageUpdate(msg) {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (!msg) {\n      // msg could be null if one or more messages were deleted.\n      // Updating state to force redraw.\n      this.setState({latestClearId: topic.maxClearId()});\n      return;\n    }\n\n    clearTimeout(this.keyPressTimer)\n    this.setState({messageCount: topic.messageCount(), typingIndicator: false});\n\n    // Scroll to the bottom if the message is added to the end of the message list.\n    // TODO: This should be replaced by showing a \"scroll to bottom\" button.\n    if (topic.isNewMessage(msg.seq)) {\n      if (this.state.scrollPosition > SHOW_GO_TO_LAST_DIST) {\n        this.setState({showGoToLastButton: true});\n      } else {\n        this.setState({scrollPosition: 0});\n      }\n    }\n\n    // Aknowledge messages except own messages. They are\n    // automatically assumed to be read and recived.\n    const status = topic.msgStatus(msg, true);\n    if (status >= Tinode.MESSAGE_STATUS_SENT && msg.from != this.props.myUserId) {\n      this.postReadNotification(msg.seq);\n    }\n    // This will send \"received\" notifications right away.\n    this.props.onData(msg);\n  }\n\n  handleAllMessagesReceived(count) {\n    this.setState({fetchingMessages: false});\n    if (count > 0) {\n      // 0 means \"latest\".\n      this.postReadNotification(0);\n    }\n  }\n\n  handleInfoReceipt(info) {\n    switch (info.what) {\n      case 'kp': {\n        clearTimeout(this.keyPressTimer);\n        this.keyPressTimer = setTimeout(() => {\n          this.setState({typingIndicator: false});\n        }, KEYPRESS_DELAY + 1000);\n        if (!this.state.typingIndicator) {\n          this.setState({typingIndicator: true});\n        }\n        break;\n      }\n      case 'read':\n      case 'recv':\n        // Redraw due to changed recv/read status.\n        this.forceUpdate();\n        break;\n      default:\n        console.info(\"Other change in topic: \", info.what);\n    }\n  }\n\n  handleImagePostview(content) {\n    this.setState({ imagePostview: content });\n  }\n\n  handleClosePreview() {\n    if (this.state.imagePreview && this.state.imagePreview.url) {\n      URL.revokeObjectURL(this.state.imagePreview.url);\n    }\n    this.setState({ imagePostview: null, imagePreview: null, docPreview: null });\n  }\n\n  handleFormResponse(action, text, data) {\n    if (action == 'pub') {\n      this.sendMessage(Drafty.attachJSON(Drafty.parse(text), data));\n    } else if (action == 'url') {\n      const url = new URL(data.ref);\n      const params = url.searchParams;\n      for (let key in data.resp) {\n        if (data.resp.hasOwnProperty(key)) {\n          params.set(key, data.resp[key]);\n        }\n      }\n      ['name', 'seq'].map((key) => {\n        if (data[key]) {\n          params.set(key, data[key]);\n        }\n      });\n      params.set('uid', this.props.myUserId);\n      params.set('topic', this.state.topic);\n      url.search = params;\n      window.open(url, '_blank');\n    } else {\n      console.info(\"Unknown action in form\", action);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.state.topic, y: e.pageY, x: e.pageX });\n  }\n\n  handleShowMessageContextMenu(params, messageSpecificMenuItems) {\n    if (params.userFrom == 'chan') {\n      params.userFrom = this.state.topic;\n      params.userName = this.state.title;\n    }\n    params.topicName = this.state.topic;\n    const menuItems = messageSpecificMenuItems || [];\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (topic) {\n      if (!topic.isChannelType()) {\n        menuItems.push('message_delete');\n      }\n      const acs = topic.getAccessMode();\n      if (acs && acs.isDeleter()) {\n        menuItems.push('message_delete_hard');\n      }\n    }\n    this.props.showContextMenu(params, menuItems);\n  }\n\n  handleNewChatAcceptance(action) {\n    this.props.onNewChat(this.state.topic, action);\n  }\n\n  handleEnablePeer(e) {\n    e.preventDefault();\n    this.props.onChangePermissions(this.state.topic, DEFAULT_P2P_ACCESS_MODE, this.state.topic);\n  }\n\n  sendKeyPress() {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (topic.isSubscribed()) {\n      topic.noteKeyPress();\n    }\n  }\n\n  // sendMessage sends the message with an optional subscription to topic first.\n  sendMessage(msg, uploadCompletionPromise, uploader) {\n    let head;\n    if (this.props.forwardMessage) {\n      // We are forwarding a message.\n      msg = this.props.forwardMessage.msg;\n      head = this.props.forwardMessage.head;\n      this.handleCancelReply();\n    } else if (this.state.reply && this.state.reply.content) {\n      // We are replying to a message in this topic.\n      head = {reply: '' + this.state.reply.seq};\n      // Turn it into Drafty so we can make a quoted Drafty object later.\n      if (typeof msg == 'string') {\n        msg = Drafty.parse(msg);\n      }\n      msg = Drafty.append(Drafty.sanitizeEntities(this.state.reply.content), msg);\n      this.handleCancelReply();\n    }\n    this.props.sendMessage(msg, uploadCompletionPromise, uploader, head);\n  }\n\n  // Retry sending a message.\n  retrySend(pub) {\n    this.props.sendMessage(pub.content, undefined, undefined, pub.head);\n  }\n\n  // Send attachment as Drafty message:\n  // - if file is too large, upload it and send a s link.\n  // - if file is small enough, just send it in-band.\n  sendFileAttachment(file) {\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (file.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      const uploadCompletionPromise = uploader.upload(file);\n      const msg = Drafty.attachFile(null, {\n        mime: file.type,\n        filename: file.name,\n        size: file.size,\n        urlPromise: uploadCompletionPromise\n      });\n      // Pass data and the uploader to the TinodeWeb.\n      this.sendMessage(msg, uploadCompletionPromise, uploader);\n    } else {\n      // Small enough to send inband.\n      fileToBase64(file)\n        .then(b64 => this.sendMessage(Drafty.attachFile(null, {mime: b64.mime, data: b64.bits, filename: b64.name})))\n        .catch(err => this.props.onError(err));\n    }\n  }\n\n  // handleAttachFile method is called when [Attach file] button is clicked.\n  handleAttachFile(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    if (file.size > maxExternAttachmentSize) {\n      // Too large.\n      this.props.onError(this.props.intl.formatMessage(messages.file_attachment_too_large,\n        {size: bytesToHumanSize(file.size), limit: bytesToHumanSize(maxExternAttachmentSize)}), 'err');\n    } else {\n      this.setState({\n        docPreview: {\n          file: file,\n          name: file.name,\n          size: file.size,\n          type: file.type\n        }\n      });\n    }\n  }\n\n  // sendImageAttachment sends the image bits inband as Drafty message.\n  sendImageAttachment(caption, blob) {\n    const mime = this.state.imagePreview.mime;\n    const width = this.state.imagePreview.width;\n    const height = this.state.imagePreview.height;\n    const fname = this.state.imagePreview.name;\n\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (blob.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      if (!uploader) {\n        this.props.onError(this.props.intl.formatMessage(messages.cannot_initiate_upload));\n        return;\n      }\n      const uploadCompletionPromise = uploader.upload(blob);\n\n      // Make small preview to show while uploading.\n      imageScaled(blob, IMAGE_PREVIEW_DIM, IMAGE_PREVIEW_DIM, -1, false)\n        // Convert tiny image into base64 for serialization and previewing.\n        .then(scaled => blobToBase64(scaled.blob))\n        .then(b64 => {\n            let msg = Drafty.insertImage(null, 0, {\n              mime: mime,\n              _tempPreview: b64.bits, // This preview will not be serialized.\n              width: width,\n              height: height,\n              filename: fname,\n              size: blob.size,\n              urlPromise: uploadCompletionPromise\n            });\n            if (caption) {\n              msg = Drafty.appendLineBreak(msg);\n              msg = Drafty.append(msg, Drafty.parse(caption));\n            }\n            // Pass data and the uploader to the TinodeWeb.\n            this.sendMessage(msg, uploadCompletionPromise, uploader);\n        }).catch((err) => {\n          this.props.onError(err, 'err');\n        });\n        return;\n    }\n\n    // Upload the image if it's too big to be send inband.\n    blobToBase64(blob)\n      .then(b64 => {\n        let msg = Drafty.insertImage(null, 0, {\n          mime: b64.mime,\n          preview: b64.bits, // Serializable preview\n          width: width,\n          height: height,\n          filename: fname,\n          size: blob.size\n        });\n        if (caption) {\n          msg = Drafty.appendLineBreak(msg);\n          msg = Drafty.append(msg, Drafty.parse(caption));\n        }\n        this.sendMessage(msg);\n      });\n  }\n\n  // handleAttachImage method is called when [Attach image] button is clicked.\n  handleAttachImage(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    // Get image dimensions and size, optionally scale it down.\n    imageScaled(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, maxExternAttachmentSize, false)\n      .then(scaled => {\n        this.setState({imagePreview: {\n          url: URL.createObjectURL(scaled.blob),\n          blob: scaled.blob,\n          name: scaled.name,\n          width: scaled.width,\n          height: scaled.height,\n          size: scaled.blob.size,\n          mime: scaled.mime\n        }});\n      }).catch(err => {\n        this.props.onError(err, 'err');\n      });\n  }\n\n  handleCancelUpload(seq, uploader) {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    const found = topic.findMessage(seq);\n    if (found) {\n      found._cancelled = true;\n    }\n    uploader.cancel();\n  }\n\n  // seq: seq ID of the source message\n  // context: message content.\n  // forwarded: true if the source message is also a forwarded message.\n  // senderId: UID of the sender of the source message.\n  // senderName: full name of the sender of the original message.\n  handlePickReply(seq, content, senderId, senderName) {\n    this.setState({reply: null});\n\n    if (!seq || !content) {\n      return;\n    }\n\n    content = typeof content == 'string' ? Drafty.init(content) : content;\n    if (Drafty.isValid(content)) {\n      content = Drafty.replyContent(content, QUOTED_REPLY_LENGTH);\n    } else {\n      // /!\\ invalid content.\n      content = Drafty.append(Drafty.init('\\u26A0 '),\n        Drafty.wrapInto(this.props.intl.formatMessage(messages.invalid_content), 'EM'));\n    }\n\n    this.setState({\n      reply: {\n        content: Drafty.quote(senderName, senderId, content),\n        seq: seq\n      }\n    });\n    this.props.onCancelForwardMessage();\n  }\n\n  handleCancelReply() {\n    this.setState({reply: null});\n    this.props.onCancelForwardMessage();\n  }\n\n  handleQuoteClick(replyToSeq) {\n    const ref = this.getOrCreateMessageRef(replyToSeq);\n    if (ref && ref.current) {\n      ref.current.scrollIntoView({block: \"center\", behavior: \"smooth\"});\n      ref.current.classList.add('flash');\n      setTimeout(() => { ref.current.classList.remove('flash') } , 1000);\n    } else {\n      console.error(\"Unresolved message ref\", replyToSeq);\n    }\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n\n    let component;\n    if (this.props.hideSelf) {\n      component = null;\n    } else if (!this.state.topic) {\n      component = (\n        <LogoView\n          serverVersion={this.props.serverVersion}\n          serverAddress={this.props.serverAddress} />\n      );\n    } else {\n      let component2;\n      if (this.state.imagePreview) {\n        // Preview image before sending.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePreview}\n            tinode={this.props.tinode}\n            reply={this.state.reply}\n            onCancelReply={this.handleCancelReply}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendImageAttachment} />\n        );\n      } else if (this.state.imagePostview) {\n        // Expand received image.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePostview}\n            onClose={this.handleClosePreview} />\n        );\n      } else if (this.state.docPreview) {\n        // Preview attachment before sending.\n        component2 = (\n          <DocPreview\n            content={this.state.docPreview}\n            tinode={this.props.tinode}\n            reply={this.state.reply}\n            onCancelReply={this.handleCancelReply}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendFileAttachment} />\n        );\n      } else {\n        const topic = this.props.tinode.getTopic(this.state.topic);\n        const isChannel = topic.isChannelType();\n        const groupTopic = topic.isGroupType() && !isChannel;\n        const icon_badges = [];\n        if (topic.trusted) {\n          if (topic.trusted.verified) {\n            icon_badges.push({icon: 'verified', color: 'badge-inv'});\n          }\n          if (topic.trusted.staff) {\n            icon_badges.push({icon: 'staff', color: 'badge-inv'});\n          }\n          if (topic.trusted.danger) {\n            icon_badges.push({icon: 'dangerous', color: 'badge-inv'});\n          }\n        }\n\n        const messageNodes = [];\n        let previousFrom = null;\n        let chatBoxClass = null;\n        const dateFmt = new Intl.DateTimeFormat(this.props.intl.locale);\n        topic.messages((msg, prev, next, i) => {\n          let nextFrom = next ? (next.from || 'chan') : null;\n\n          let sequence = 'single';\n          let thisFrom = msg.from || 'chan';\n          if (thisFrom == previousFrom) {\n            if (thisFrom == nextFrom) {\n              sequence = 'middle';\n            } else {\n              sequence = 'last';\n            }\n          } else if (thisFrom == nextFrom) {\n            sequence = 'first';\n          }\n          previousFrom = thisFrom;\n\n          const isReply = !(thisFrom == this.props.myUserId);\n          const deliveryStatus = topic.msgStatus(msg, true);\n\n          let userFrom = thisFrom, userName, userAvatar;\n          const user = topic.userDesc(thisFrom);\n          if (user && user.public) {\n            userName = user.public.fn;\n            userAvatar = makeImageUrl(user.public.photo);\n          }\n          chatBoxClass = groupTopic ? 'chat-box group' : 'chat-box';\n\n          // Ref for this chat message.\n          const ref = this.getOrCreateMessageRef(msg.seq);\n          let replyToSeq = msg.head ? parseInt(msg.head.reply) : null;\n          if (!replyToSeq || isNaN(replyToSeq)) {\n            replyToSeq = null;\n          }\n\n          // This message was sent on a different date than the previous.\n          if (!prev || new Date(prev.ts).toDateString() != new Date(msg.ts).toDateString()) {\n            messageNodes.push(\n            <MetaMessage\n              date={dateFmt.format(msg.ts)}\n              locale={this.props.intl.locale}\n              key={'date-' + msg.seq} />\n            );\n          }\n\n          if (msg.hi) {\n            // Deleted message.\n            messageNodes.push(\n              <MetaMessage\n                deleted={true}\n                key={msg.seq} />\n              );\n          } else {\n            messageNodes.push(\n              <ChatMessage\n                tinode={this.props.tinode}\n                content={msg.content}\n                mimeType={msg.head ? msg.head.mime : null}\n                timestamp={msg.ts}\n                response={isReply}\n                seq={msg.seq}\n                isGroup={groupTopic}\n                isChan={this.state.channel}\n                userFrom={userFrom}\n                userName={userName}\n                userAvatar={userAvatar}\n                sequence={sequence}\n                received={deliveryStatus}\n                uploader={msg._uploader}\n                viewportWidth={this.props.viewportWidth}  // Used by `formatter`.\n                showContextMenu={this.handleShowMessageContextMenu}\n                onImagePreview={this.handleImagePostview}\n                onFormResponse={this.handleFormResponse}\n                onError={this.props.onError}\n                onCancelUpload={this.handleCancelUpload}\n                pickReply={this.handlePickReply}\n                replyToSeq={replyToSeq}\n                onQuoteClick={this.handleQuoteClick}\n                ref={ref}\n                userIsWriter={this.state.isWriter}\n                key={msg.seq} />\n            );\n          }\n        });\n\n        let lastSeen = null;\n        if (isChannel) {\n          lastSeen = formatMessage(messages.channel);\n        } else {\n          const cont = this.props.tinode.getMeTopic().getContact(this.state.topic);\n          if (cont && Tinode.isP2PTopicName(cont.topic)) {\n            if (cont.online) {\n              lastSeen = formatMessage(messages.online_now);\n            } else if (cont.seen) {\n              lastSeen = formatMessage(messages.last_seen) + \": \" +\n                shortDateFormat(cont.seen.when, this.props.intl.locale);\n              // TODO: also handle user agent in c.seen.ua\n            }\n          }\n        }\n        const avatar = this.state.avatar || true;\n        const online = this.state.deleted ? null :\n          this.props.online ? 'online' + (this.state.typingIndicator ? ' typing' : '') : 'offline';\n\n        const titleClass = 'panel-title' + (this.state.deleted ? ' deleted' : '');\n\n        component2 = (\n          <>\n            <div id=\"topic-caption-panel\" className=\"caption-panel\">\n              {this.props.displayMobile ?\n                <a href=\"#\" id=\"hide-message-view\" onClick={(e) => {e.preventDefault(); this.props.onHideMessagesView();}}>\n                  <i className=\"material-icons\">arrow_back</i>\n                </a>\n                :\n                null}\n              <div className=\"avatar-box\">\n                <LetterTile\n                  tinode={this.props.tinode}\n                  avatar={avatar}\n                  topic={this.state.topic}\n                  title={this.state.title}\n                  deleted={this.state.deleted} />\n                {!isChannel ? <span className={online} /> : null}\n              </div>\n              <div id=\"topic-title-group\">\n                <div id=\"topic-title\" className={titleClass}>{\n                  this.state.title ||\n                  <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n                    description=\"Title shown when the topic has no name\" /></i>\n                }<ContactBadges badges={icon_badges} /></div>\n                <div id=\"topic-last-seen\">{lastSeen}</div>\n              </div>\n              {groupTopic ?\n                <GroupSubs\n                  tinode={this.props.tinode}\n                  subscribers={this.state.onlineSubs} /> :\n                <div id=\"topic-users\" />\n              }\n              <div>\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">more_vert</i>\n                </a>\n              </div>\n            </div>\n            {this.props.displayMobile ?\n              <ErrorPanel\n                level={this.props.errorLevel}\n                text={this.props.errorText}\n                onClearError={this.props.onError} />\n              : null}\n            <LoadSpinner show={this.state.fetchingMessages} />\n            <div id=\"messages-container\">\n              <button className={'action-button' + (this.state.showGoToLastButton ? '' : ' hidden')}\n                onClick={this.goToLatestMessage}>\n                <i className=\"material-icons\">arrow_downward</i>\n              </button>\n              <div id=\"messages-panel\" ref={this.handleScrollReference}>\n                <ul id=\"scroller\" className={chatBoxClass}>\n                  {messageNodes}\n                </ul>\n              </div>\n              {!this.state.isReader ?\n              <div id=\"write-only-background\">\n                {this.state.readingBlocked ?\n                <div id=\"write-only-note\">\n                  <FormattedMessage id=\"messages_not_readable\" defaultMessage=\"no access to messages\"\n                    description=\"Message shown in topic without the read access\" />\n                </div>\n                : null }\n              </div>\n              : null }\n            </div>\n            {this.state.peerMessagingDisabled && !this.state.unconfirmed ?\n              <div id=\"peer-messaging-disabled-note\">\n                <i className=\"material-icons secondary\">block</i> <FormattedMessage\n                  id=\"peers_messaging_disabled\" defaultMessage=\"Peer's messaging is disabled.\"\n                  description=\"Shown when the p2p peer's messaging is disabled\" /> <a href=\"#\"\n                    onClick={this.handleEnablePeer}><FormattedMessage id=\"enable_peers_messaging\"\n                    defaultMessage=\"Enable\" description=\"Call to action to enable peer's messaging\" /></a>.\n              </div> : null}\n            {this.state.unconfirmed ?\n              <Invitation onAction={this.handleNewChatAcceptance} />\n              :\n              <SendMessage\n                tinode={this.props.tinode}\n                noInput={!!this.props.forwardMessage}\n                disabled={!this.state.isWriter || this.state.deleted}\n                onKeyPress={this.sendKeyPress}\n                onSendMessage={this.sendMessage}\n                onAttachFile={this.props.forwardMessage ? null : this.handleAttachFile}\n                onAttachImage={this.props.forwardMessage ? null : this.handleAttachImage}\n                onError={this.props.onError}\n                reply={this.state.reply}\n                onQuoteClick={this.handleQuoteClick}\n                onCancelReply={this.handleCancelReply} />}\n          </>\n        );\n      }\n\n      component = <div id=\"topic-view\">{component2}</div>\n    }\n    return component;\n  }\n};\n\nexport default injectIntl(MessagesView);\n","// The <- button to be displayed in title bars.\nimport React from 'react';\n\nexport default class ButtonBack extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onBack();}}>\n        <i className=\"material-icons\">arrow_back</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class MenuContacts extends React.PureComponent {\n  render() {\n    return (\n      <div>\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onNewTopic();}}><i className=\"material-icons\">chat</i></a>\n        &nbsp;\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nexport default class MenuStart extends React.PureComponent {\n  render() {\n    return (\n        <div>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSignUp();}}><i className=\"material-icons\">person_add</i></a>\n          &nbsp;\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n        </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\nimport ButtonBack from './button-back.jsx';\nimport ContactBadges from './contact-badges.jsx';\nimport MenuContacts from './menu-contacts.jsx';\nimport MenuStart from './menu-start.jsx';\n\nimport { sanitizeImageUrl } from '../lib/utils.js';\n\nexport default class SideNavbar extends React.PureComponent {\n  render() {\n    const icon_badges = [];\n    if (this.props.trustedBadges) {\n      this.props.trustedBadges.map((b) => {\n        icon_badges.push({icon: b, color: 'badge-inv'});\n      });\n    }\n    let avatar = null;\n    if (this.props.tinode) {\n      avatar = this.props.tinode.authorizeURL(sanitizeImageUrl(this.props.avatar));\n    }\n    return (\n      <div id=\"side-caption-panel\" className=\"caption-panel\">\n        {this.props.onCancel ? <ButtonBack onBack={this.props.onCancel} /> : null}\n        {avatar ?\n          <div id=\"self-avatar\" className=\"avatar-box\">\n            <LetterTile\n              tinode={this.props.tinode}\n              avatar={avatar}\n              topic={this.props.myUserId}\n              title={this.props.title} />\n          </div>\n          :\n          null}\n        <div id=\"sidepanel-title\" className=\"panel-title\">{this.props.title}<ContactBadges badges={icon_badges}/></div>\n        {this.props.state === 'login' ?\n            <MenuStart onSignUp={this.props.onSignUp} onSettings={this.props.onSettings} /> :\n          this.props.state === 'contacts' ?\n            <MenuContacts onNewTopic={this.props.onNewTopic} onSettings={this.props.onSettings} /> :\n          null}\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport BadgeList from '../widgets/badge-list.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH } from '../config.js';\n\nfunction _clip(str, length) {\n  return str && str.substring(0, length);\n}\n\nexport default class AccountSettingsView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    this.state = {\n      fullName: _clip(me.public ? me.public.fn : undefined, MAX_TITLE_LENGTH),\n      description: _clip(me.public ? me.public.note : undefined, MAX_TOPIC_DESCRIPTION_LENGTH),\n      avatar: makeImageUrl(me.public ? me.public.photo : null)\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          <a href=\"#\" className=\"flat-button float-right\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('general');}}>\n            <i className=\"material-icons\">edit</i>&nbsp;\n            <FormattedMessage id=\"button_edit\" defaultMessage=\"Edit\" description=\"Call to action [Edit]\" />\n          </a>\n          <center>\n            <AvatarUpload\n              tinode={this.props.tinode}\n              avatar={this.state.avatar}\n              readOnly={true}\n              uid={this.props.myUserId}\n              title={this.state.fullName} />\n          </center>\n          <div className=\"group\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n                description=\"Label for full name editing\" />\n            </label>\n            <div className=\"large ellipsized\">{this.state.fullName}</div>\n          </div>\n          <div className=\"group\">\n            <label className=\"small\"><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n              description=\"Label for user address (ID)\" /></label>&nbsp;\n            <tt>{this.props.myUserId}</tt>\n          </div>\n          <div className=\"group\">\n            <BadgeList trustedBadges={this.props.trustedBadges} />\n          </div>\n          {this.state.description ?\n            <div className=\"group\">\n              <label className=\"small\">\n                <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                  description=\"Label for editing topic description\" />\n              </label>\n              <div>{this.state.description}</div>\n            </div> : null}\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('notif');}}>\n            <i className=\"material-icons\">notifications</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_notifications\"\n              defaultMessage=\"Notifications\" description=\"Sidepanel title for AccNotificationsView.\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('security');}}>\n            <i className=\"material-icons\">security</i>&nbsp;<FormattedMessage id=\"button_security\"\n              defaultMessage=\"Security\" description=\"Navigaton button for security panel.\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('support');}}>\n            <i className=\"material-icons\">contact_support</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_support\"\n              defaultMessage=\"Support\" description=\"Sidepanel title for AccSupportView.\" />\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","/* ContactsView holds all contacts-related stuff */\nimport React from 'react';\nimport { FormattedMessage, defineMessages } from 'react-intl';\n\nimport ContactList from '../widgets/contact-list.jsx';\n\nimport { updateFavicon } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  archived_contacts_title: {\n    id: \"archived_contacts\",\n    defaultMessage: \"Archived contacts ({count})\",\n    description: \"Label for archived chats\"\n  }\n});\n\nexport default class ContactsView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAction = this.handleAction.bind(this);\n\n    this.state = ContactsView.deriveStateFromProps(props);\n  }\n\n  static deriveStateFromProps(props) {\n    const contacts = [];\n    let unreadThreads = 0;\n    let archivedCount = 0;\n    props.chatList.map((c) => {\n      const blocked = c.acs && !c.acs.isJoiner();\n      // Show only blocked contacts only when props.blocked == true.\n      if (blocked && props.blocked) {\n        contacts.push(c);\n      }\n      if (blocked || props.blocked) {\n        return;\n      }\n\n      if (c.private && c.private.arch) {\n        if (props.archive) {\n          contacts.push(c);\n        } else {\n          archivedCount ++;\n        }\n      } else if (!props.archive) {\n        contacts.push(c);\n        unreadThreads += c.unread > 0 ? 1 : 0;\n      }\n    });\n\n    contacts.sort((a, b) => {\n      return (b.touched || 0) - (a.touched || 0);\n    });\n\n    if (archivedCount > 0) {\n      contacts.push({\n        action: 'archive',\n        title: messages.archived_contacts_title,\n        values: {count: archivedCount}\n      });\n    }\n\n    return {\n      contactList: contacts,\n      unreadThreads: unreadThreads\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chatList != this.props.chatList ||\n        prevProps.archive != this.props.archive ||\n        prevProps.blocked != this.props.blocked) {\n      const newState = ContactsView.deriveStateFromProps(this.props);\n      this.setState(newState);\n      if (newState.unreadThreads != prevState.unreadThreads) {\n        updateFavicon(newState.unreadThreads);\n      }\n    }\n  }\n\n  handleAction(action_ignored) {\n    this.props.onShowArchive();\n  }\n\n  render() {\n    return (\n      <FormattedMessage id=\"contacts_not_found\"\n        defaultMessage=\"You have no chats<br />¯∖_(ツ)_/¯\"\n        description=\"HTML message shown in ContactList when no contacts are found\">{\n        (no_contacts) => <ContactList\n          tinode={this.props.tinode}\n          connected={this.props.connected}\n          contacts={this.state.contactList}\n          emptyListMessage={no_contacts}\n          topicSelected={this.props.topicSelected}\n          myUserId={this.props.myUserId}\n          showOnline={true}\n          showUnread={true}\n          onTopicSelected={this.props.onTopicSelected}\n          showContextMenu={this.props.showContextMenu}\n          onAction={this.handleAction} />\n      }</FormattedMessage>\n    );\n  }\n};\n","// Helper functions for storing values in localStorage.\n// By default localStorage can store only strings, not objects or other types.\n\nexport default class LocalStorageUtil {\n  // Replace old object with the new one.\n  static setObject(key, value) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n\n  // Get stored object.\n  static getObject(key) {\n    const value = localStorage.getItem(key);\n    return value && JSON.parse(value);\n  }\n\n  // Partially or wholly update stored object.\n  static updateObject(key, value) {\n    const oldVal = this.getObject(key);\n    this.setObject(key, Object.assign(oldVal || {}, value));\n  }\n\n  // Just a wrapper.\n  static removeItem(key) {\n    localStorage.removeItem(key);\n  }\n}\n","// Account registration.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport { theCard } from '../lib/utils.js';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class CreateAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: '',\n      password: '',\n      email: '',\n      fn: '', // full/formatted name\n      imageDataUrl: null,\n      errorCleared: false,\n      saveToken: LocalStorageUtil.getObject('keep-logged-in')\n    };\n\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(password) {\n    this.setState({password: password});\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value})\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleToggleSaveToken() {\n    LocalStorageUtil.setObject('keep-logged-in', !this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({errorCleared: false});\n    this.props.onCreateAccount(\n      this.state.login.trim(),\n      this.state.password.trim(),\n      theCard(this.state.fn.trim().substring(0, MAX_TITLE_LENGTH), this.state.imageDataUrl),\n      {'meth': 'email', 'val': this.state.email});\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form className=\"panel-form-column\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n              description=\"Placeholer for username/login\">{\n              (login_prompt) => <input type=\"text\" placeholder={login_prompt} autoComplete=\"user-name\"\n                value={this.state.login} onChange={this.handleLoginChange} required autoFocus />\n            }</FormattedMessage>\n            <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n              description=\"Placeholder/prompt for entering password\">{\n              (password_prompt) => <VisiblePassword placeholder={password_prompt} autoComplete=\"new-password\"\n                value={this.state.password} onFinished={this.handlePasswordChange}\n                required={true} />\n            }</FormattedMessage>\n          </div>\n          <AvatarUpload\n            tinode={this.props.tinode}\n            onImageChanged={this.handleImageChanged}\n            onError={this.props.onError} />\n        </div>\n        <div  className=\"panel-form-row\">\n          <FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n            description=\"Input placeholder for person's full name\">{\n            (full_name_prompt) => <input type=\"text\" placeholder={full_name_prompt} autoComplete=\"name\"\n              value={this.state.fn} onChange={this.handleFnChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <FormattedMessage id=\"email_prompt\" defaultMessage=\"Email, e.g. jdoe@example.com\"\n            description=\"Input placeholder for email entry\">{\n            (email_prompt) => <input type=\"email\" placeholder={email_prompt} autoComplete=\"email\"\n              value={this.state.email} onChange={this.handleEmailChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n            description=\"Label for a checkbox\">{\n            (stay_logged_in) => <label htmlFor=\"save-token\">&nbsp;{stay_logged_in}</label>\n          }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_up\" defaultMessage=\"Sign up\"\n              description=\"Create account button [Sign Up]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\n\nexport default class EditAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckboxClick = this.handleCheckboxClick.bind(this);\n  }\n\n  handleCheckboxClick(what, checked) {\n    if (what == 'sound') {\n      this.props.onToggleMessageSounds(checked);\n    } else if (what == 'alert') {\n      this.props.onTogglePushNotifications(checked);\n    } else if (what == 'incognito') {\n      this.props.onToggleIncognitoMode(checked);\n    }\n  }\n\n  render() {\n    return (\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"message-sound\">\n              <FormattedMessage id=\"label_message_sound\" defaultMessage=\"Message sound:\"\n                description=\"Label for message sounds toggle\" />\n            </label>\n            <CheckBox name=\"sound\" id=\"message-sound\"\n              checked={this.props.messageSounds} onChange={this.handleCheckboxClick} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"desktop-alerts\">\n            {this.props.desktopAlertsEnabled ?\n              <FormattedMessage id=\"label_push_notifications\" defaultMessage=\"Notification alerts:\"\n                description=\"Label for push notifications switch\" />\n              :\n              <FormattedMessage id=\"label_push_notifications_disabled\"\n                defaultMessage=\"Notification alerts (requires HTTPS):\"\n                description=\"Label for push notifications switch\" />\n            }\n            </label>\n            <CheckBox name=\"alert\" id=\"desktop-alerts\"\n              checked={this.props.desktopAlerts}\n              onChange={this.props.desktopAlertsEnabled ? this.handleCheckboxClick : null} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"incognito-mode\">\n              <FormattedMessage id=\"label_incognito_mode\" defaultMessage=\"Incognito mode:\"\n                description=\"Label for incognito mode toggle\" />\n            </label>\n            <CheckBox name=\"incognito\" id=\"incognito-mode\"\n              checked={this.props.incognitoMode} onChange={this.handleCheckboxClick} />\n          </div>\n        </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\n\nconst messages = defineMessages({\n  delete_account: {\n    id: 'delete_account',\n    defaultMessage: 'Delete account',\n    description: 'Title for delete account warning'\n  },\n  delete_account_warning: {\n    id: 'delete_account_warning',\n    defaultMessage: 'Are you sure you want to delete your account? It cannot be undone.',\n    description: 'Warning message when deleting an account'\n  }\n});\n\nclass AccSecurityView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    let blockedCount = 0;\n    me.contacts((c) => {\n      if (c.acs && !c.acs.isJoiner()) {\n        blockedCount ++;\n      }\n    });\n    const defacs = me.getDefaultAccess();\n    this.state = {\n      auth: defacs ? defacs.auth : null,\n      anon: defacs ? defacs.anon : null,\n      showPermissionEditorFor: undefined,\n      blockedCount: blockedCount,\n    };\n\n    this.handlePasswordUpdate = this.handlePasswordUpdate.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n  }\n\n  handlePasswordUpdate(pwd) {\n    this.setState({password: pwd});\n    this.props.onUpdatePassword(pwd);\n  }\n\n  handleLaunchPermissionsEditor(which) {\n    this.setState({\n      showPermissionEditorFor: which,\n      editedPermissions: this.state[which]\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handlePermissionsChanged(perm) {\n    let defacs = {};\n    defacs[this.state.showPermissionEditorFor] = perm;\n    this.props.onUpdateAccountDesc('me', undefined, undefined, defacs);\n\n    let newState = {showPermissionEditorFor: undefined};\n    newState[this.state.showPermissionEditorFor] = perm;\n    this.setState(newState);\n  }\n\n  handleDeleteAccount(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.delete_account), // title\n      formatMessage(messages.delete_account_warning), // content\n      (() => { this.props.onDeleteAccount(); }), // onConfirm\n      null, // use default text \"OK\"\n      true, // Show Reject button\n      null  // use default text \"Cancel\"\n    );\n  }\n\n  render() {\n    return (\n      <>{this.state.showPermissionEditorFor ?\n        <PermissionsEditor\n          mode={this.state.editedPermissions}\n          skip=\"O\"\n          onSubmit={this.handlePermissionsChanged}\n          onCancel={this.handleHidePermissionsEditor} />\n        :\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_password\" defaultMessage=\"Password\"\n                  description=\"Label for password editing\" />\n            </label>\n            <div>\n              <FormattedMessage id=\"password_unchanged_prompt\" defaultMessage=\"Unchanged\"\n                description=\"Message in editor while password is unchanged\">{\n                (password_unchanged) => <InPlaceEdit\n                  placeholder={password_unchanged}\n                  type=\"password\"\n                  onFinished={this.handlePasswordUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <a href=\"#\" className=\"danger flat-button\" onClick={(e) => {e.preventDefault(); this.props.onLogout();}}>\n              <i className=\"material-icons\">exit_to_app</i> &nbsp;<FormattedMessage id=\"button_logout\"\n                defaultMessage=\"Logout\" description=\"Button [Logout]\" />\n            </a>\n            <a href=\"#\" className=\"danger flat-button\" onClick={(e) => {this.handleDeleteAccount(e);}}>\n              <i className=\"material-icons\">delete</i> &nbsp;<FormattedMessage id=\"button_delete_account\"\n                defaultMessage=\"Delete account\" description=\"Button [Delete account]\" />\n            </a>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <div>\n              <label className=\"small\">\n                <FormattedMessage id=\"label_default_access_mode\" defaultMessage=\"Default access mode:\"\n                  description=\"Label for default access mode\" />\n              </label>\n            </div>\n            <div className=\"quoted\">\n              <div>Auth: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>{this.state.auth}</tt></div>\n              <div>Anon: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>{this.state.anon}</tt></div>\n            </div>\n          </div>\n          {this.state.blockedCount > 0 ?\n            <>\n              <div className=\"hr\" />\n              <div className=\"panel-form-row\">\n                <i className=\"material-icons\">block</i>&nbsp;\n                <a href=\"#\" className=\"gray\" onClick={(e) => {e.preventDefault(); this.props.onShowBlocked();}}>\n                  <FormattedMessage id=\"blocked_contacts_link\" defaultMessage=\"Blocked contacts ({count})\"\n                    values={{ count: this.state.blockedCount }} description=\"Blocked contacts link\" />\n                </a>\n              </div>\n            </>\n            : null }\n        </div>\n      }</>\n    );\n  }\n};\n\nexport default injectIntl(AccSecurityView);\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME, LINK_CONTACT_US, LINK_PRIVACY_POLICY, LINK_TERMS_OF_SERVICE } from '../config.js';\n\nexport default class AccSupportView extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          <a href={LINK_CONTACT_US} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">email</i> &nbsp;<FormattedMessage id=\"link_contact_us\"\n              defaultMessage=\"Contact Us\" description=\"Ancor text for contacting us by email\" />\n          </a>\n          <a href={LINK_TERMS_OF_SERVICE} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">description</i> &nbsp;<FormattedMessage id=\"link_terms_of_service\"\n              defaultMessage=\"Terms of Service\" description=\"Ancor text for terms of service link\" />\n          </a>\n          <a href={LINK_PRIVACY_POLICY} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">policy</i> &nbsp;<FormattedMessage id=\"link_privacy_policy\"\n              defaultMessage=\"Privacy Policy\" description=\"Ancor text for privacy policy link\" />\n          </a>\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\"\n              description=\"Label for a client version\" /></label>\n            {APP_NAME}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_sdk\" defaultMessage=\"SDK:\" /></label>\n            {Tinode.getLibrary()}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\"\n              description=\"Label for a server version\" /></label>\n            {this.props.serverVersion}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server_address\" defaultMessage=\"Server address:\" /></label>\n            {this.props.serverAddress}\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","// Login form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\n\nexport default class LoginView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: props.login,\n      password: '',\n      hostName: props.serverAddress,\n      saveToken: props.persist\n    };\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  handleToggleSaveToken() {\n    this.props.onPersistenceChange(!this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onLogin(this.state.login.trim(), this.state.password.trim());\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form id=\"login-form\" onSubmit={this.handleSubmit}>\n        <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n          description=\"Placeholer for username/login\">\n        {\n          (login_prompt) => <input type=\"text\" id=\"inputLogin\"\n            placeholder={login_prompt}\n            autoComplete=\"username\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"none\"\n            value={this.state.login}\n            onChange={this.handleLoginChange}\n            required autoFocus />\n        }\n        </FormattedMessage>\n        <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n          description=\"Placeholder/prompt for entering password\">\n        {\n          (password_prompt) => <VisiblePassword type=\"password\" id=\"inputPassword\"\n            placeholder={password_prompt}\n            autoComplete=\"current-password\"\n            value={this.state.password}\n            onChange={this.handlePasswordChange}\n            required={true} />\n        }\n        </FormattedMessage>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <label htmlFor=\"save-token\">&nbsp;\n            <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n              description=\"Label for a checkbox\" />\n          </label>\n          <a href=\"#reset\">\n            <FormattedMessage id=\"forgot_password_link\" defaultMessage=\"Forgot password?\"\n              description=\"Link to Reset password form\" />\n          </a>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_in\" defaultMessage=\"Sign in\"\n              description=\"Button [Sign In]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n/* END Login */\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  invalid_id: {\n    id: 'error_invalid_id',\n    defaultMessage: 'Invalid ID',\n    description: 'Error message'\n  }\n});\n\nclass NewTopicById extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      groupId: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({groupId: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.groupId) {\n      const name = this.state.groupId.trim();\n      const prefix = name.substr(0, 3);\n      if (name.length > 3 && ['usr', 'grp', 'chn'].includes(prefix)) {\n        this.props.onSubmit(name);\n      } else {\n        this.props.onError(this.props.intl.formatMessage(messages.invalid_id), 'err');\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"group_user_id_prompt\" defaultMessage=\"Group or User ID\"\n          description=\"Prompt for entering user or group ID\">{\n          (prompt) => <input type=\"text\" placeholder={prompt}\n            value={this.state.groupId} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required autoFocus />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_subscribe\" defaultMessage=\"Subscribe\"\n              description=\"Button [Subscribe]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicById);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from './avatar-upload.jsx';\nimport CheckBox from './checkbox.jsx';\nimport TagManager from './tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH } from '../config.js';\n\nexport default class NewTopicGroup extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.fullName = React.createRef();\n\n    this.state = {\n      fullName: '', // full/formatted name\n      private: '',\n      description: '',\n      imageDataUrl: null,\n      tags: [],\n      isChannel: false\n    };\n\n    this.handleFieldEdit = this.handleFieldEdit.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleTagsChanged = this.handleTagsChanged.bind(this);\n    this.handleChannelToggle = this.handleChannelToggle.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    // this.fullName.current.focus();\n  }\n\n  handleFieldEdit(name, e) {\n    this.setState({[name]: e.target.value || ''});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleTagsChanged(tags) {\n    this.setState({tags: tags});\n  }\n\n  handleChannelToggle() {\n    this.setState({isChannel: !this.state.isChannel});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const fn = this.state.fullName.trim().substring(0, MAX_TITLE_LENGTH);\n    const comment = this.state.private.trim().substring(0, MAX_TITLE_LENGTH);\n    const description = this.state.description.trim().substring(0, MAX_TOPIC_DESCRIPTION_LENGTH);\n    if (fn) {\n      this.props.onSubmit(fn, description, this.state.imageDataUrl, comment, this.state.tags, this.state.isChannel);\n    }\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n    return (\n      <form className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-column\">\n          <center>\n            <AvatarUpload\n              tinode={this.props.tinode}\n              onError={this.props.onError}\n              onImageChanged={this.handleImageChanged} />\n          </center>\n          <div className=\"group\">\n            <label className=\"small\" htmlFor=\"new-topic-fn\">\n              <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                description=\"Label for editing topic name\" />\n            </label>\n            <FormattedMessage id=\"topic_name_editing_placeholder\" defaultMessage=\"Freeform name of the group\"\n              description=\"Prompt for entering topic name\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-fn\" placeholder={placeholder}\n                ref={this.fullName} value={this.state.fullName} onChange={this.handleFieldEdit.bind(this, 'fullName')}\n                autoFocus required tabIndex={0} />\n            }</FormattedMessage>\n          </div>\n          <div className=\"group\">\n            <label className=\"small\" htmlFor=\"new-topic-priv\">\n              <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                description=\"Label for editing 'private'\" />\n            </label>\n            <FormattedMessage id=\"private_editing_placeholder\" defaultMessage=\"Visible to you only\"\n              description=\"Placeholder for editing 'private'\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-priv\" placeholder={placeholder}\n                value={this.state.private} onChange={this.handleFieldEdit.bind(this, 'private')} tabIndex={1} />\n            }</FormattedMessage>\n          </div>\n          <div className=\"group\">\n            <label className=\"small\" htmlFor=\"new-topic-desc\">\n              <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                description=\"Label for editing topic description\" />\n            </label>\n            <FormattedMessage id=\"description_editing_placeholder\" defaultMessage=\"Description (optional)\"\n              description=\"Placeholder for editing topic description\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-desc\" placeholder={placeholder}\n                value={this.state.description} onChange={this.handleFieldEdit.bind(this, 'description')} tabIndex={2} />\n            }</FormattedMessage>\n          </div>\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox checked={this.state.isChannel} tabIndex={3} onChange={this.handleChannelToggle} />&nbsp;\n          <label onClick={this.handleChannelToggle}><FormattedMessage id=\"channel_prompt\"\n            defaultMessage=\"This is a channel\"\n            description=\"Checkbox label when creating a channel\" /></label>\n        </div>\n        <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (search & discovery)\"\n          description=\"Section title for TagManager\">{\n          (title) => <TagManager\n            tinode={this.props.tinode}\n            tags={this.state.tags}\n            activated={true}\n            onTagsChanged={this.handleTagsChanged}\n            tabIndex={4}\n            title={title} />\n        }</FormattedMessage>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses}>\n            <FormattedMessage id=\"button_create\" defaultMessage=\"Create\"\n              description=\"Button [Create]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// Create new topic and invite users or send an invite.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport ContactList from '../widgets/contact-list.jsx';\nimport NewTopicById from '../widgets/new-topic-by-id.jsx';\nimport NewTopicGroup from '../widgets/new-topic-group.jsx';\nimport SearchContacts from '../widgets/search-contacts.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\nimport { theCard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  search_for_contacts: {\n    id: \"search_for_contacts\",\n    defaultMessage: \"Use search to find contacts\",\n    description: \"Text shown in contacts view when user entered no search query.\"\n  },\n  search_no_results: {\n    id: \"search_no_results\",\n    defaultMessage: \"Search returned no results\",\n    description: \"Text shown in contacts view when query returned no results.\"\n  },\n  search_placeholder: {\n    id: \"search_placeholder\",\n    defaultMessage: \"List like email:alice@example.com, tel:17025550003...\",\n    description: \"Placeholder in contacts search field\"\n  },\n});\n\nclass NewTopicView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tabSelected: 'find',\n      searchQuery: null\n    };\n\n    this.handleTabClick = this.handleTabClick.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleNewGroupSubmit = this.handleNewGroupSubmit.bind(this);\n    this.handleGroupByID = this.handleGroupByID.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.onInitFind();\n  }\n\n  handleTabClick(e) {\n    e.preventDefault();\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'tab', e.currentTarget.dataset.id));\n    this.setState({tabSelected: e.currentTarget.dataset.id});\n  }\n\n  handleSearchContacts(query) {\n    this.props.onSearchContacts(query);\n    this.setState({searchQuery: Tinode.isNullValue(query) ? null : query});\n  }\n\n  handleContactSelected(uid) {\n    if (this.state.tabSelected == 'find') {\n      HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n      this.props.onCreateTopic(uid);\n    }\n  }\n\n  handleNewGroupSubmit(name, description, dataUrl, priv, tags, isChannel) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(undefined,\n      {public: theCard(name, dataUrl, null, description), private: priv, tags: tags}, isChannel);\n  }\n\n  handleGroupByID(topicName) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(topicName);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const no_contacts_placeholder = formatMessage(this.state.searchQuery ?\n      messages.search_no_results : messages.search_for_contacts);\n    const search_placeholder = formatMessage(messages.search_placeholder);\n    return (\n      <div className=\"flex-column\">\n        <ul className=\"tabbar\">\n          <li className={this.state.tabSelected === \"find\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"find\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_find_user\" defaultMessage=\"find\"\n                description=\"Tab title Find\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"grp\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"grp\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_new_group\" defaultMessage=\"new group\"\n                description=\"Tab title New Group\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"byid\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"byid\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_group_by_id\" defaultMessage=\"by id\"\n                description=\"Tab title Find topic by ID\" />\n            </a>\n          </li>\n        </ul>\n        {this.state.tabSelected === 'grp' ?\n          <NewTopicGroup\n            tinode={this.props.tinode}\n            onSubmit={this.handleNewGroupSubmit} /> :\n          this.state.tabSelected === 'byid' ?\n            <NewTopicById\n              onSubmit={this.handleGroupByID}\n              onError={this.props.onError} /> :\n            <div className=\"flex-column\">\n              <SearchContacts\n                placeholder={search_placeholder}\n                onSearchContacts={this.handleSearchContacts} />\n              <ContactList\n                tinode={this.props.tinode}\n                contacts={this.props.searchResults}\n                myUserId={this.props.myUserId}\n                emptyListMessage={no_contacts_placeholder}\n                showOnline={false}\n                showUnread={false}\n                showContextMenu={false}\n                onTopicSelected={this.handleContactSelected} />\n            </div>}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicView);\n","// A password reset form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\n\nexport default class PasswordResetView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: '',\n      sent: false\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n  }\n\n  componentDidMount() {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    this.setState({token: parsed.params.token, scheme: parsed.params.scheme});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.token) {\n      this.props.onReset(this.state.scheme, this.state.password.trim(), this.state.token);\n    } else if (this.state.sent) {\n      this.props.onCancel();\n    } else {\n      const email = this.state.email.trim();\n      this.setState({email: email});\n      this.props.onRequest('email', email).then(() => {\n        this.setState({sent: true});\n      });\n    }\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  render() {\n    return (\n      <form id=\"password-reset-form\" onSubmit={this.handleSubmit}>\n        {(this.state.token && this.state.scheme) ?\n          <><label htmlFor=\"new-password\">\n            <FormattedMessage id=\"label_new_password\"\n              defaultMessage=\"New password\"\n              description=\"Label for entering a new password\" />\n          </label>\n          <FormattedMessage id=\"new_password_placeholder\" defaultMessage=\"Enter new password\"\n            description=\"Placeholder for entering new password\">{\n            (placeholder) => <VisiblePassword\n              id=\"new-password\"\n              placeholder={placeholder}\n              autoComplete=\"new-password\"\n              value={this.state.password}\n              required={true} autoFocus={true}\n              onChange={this.handlePasswordChange} />\n          }</FormattedMessage></>\n        : this.state.sent ?\n          <>\n            <br/>\n            <center><i className=\"material-icons huge green\">task_alt</i></center>\n            <br/>\n            <center><FormattedMessage id=\"password_reset_email_sent\"\n              defaultMessage=\"An email has been sent to {email}. Follow the directions in the email to reset your password.\"\n              values={{ email: <tt>{this.state.email}</tt> }}\n              description=\"Notification that the email with password reset instructions has been sent\" /></center>\n          </>\n        :\n          <>\n            <label htmlFor=\"inputEmail\">\n              <FormattedMessage id=\"label_reset_password\"\n                defaultMessage=\"Send a password reset email:\"\n                description=\"Label for password reset field\" />\n            </label>\n            <FormattedMessage id=\"credential_email_prompt\" defaultMessage=\"Your registration email\"\n              description=\"Placeholder for entering email\">{\n              (placeholder) => <input type=\"email\" id=\"inputEmail\"\n                placeholder={placeholder}\n                autoComplete=\"email\"\n                value={this.state.email}\n                onChange={this.handleEmailChange}\n                required autoFocus />\n            }</FormattedMessage>\n          </>\n        }\n        <div className=\"dialog-buttons\">\n          <button className=\"primary\" type=\"submit\">{\n            (this.state.token && this.state.scheme) ?\n            <FormattedMessage id=\"button_reset\" defaultMessage=\"Reset\" description=\"Button [Reset]\" />\n            : this.state.sent ?\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\"\n              description=\"Button [OK]\" />\n            :\n            <FormattedMessage id=\"button_send_request\" defaultMessage=\"Send request\"\n              description=\"Button [Send request]\" />\n          }</button>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react';\n\nimport { KNOWN_HOSTS } from '../config.js';\n\n/* Combobox for selecting host name */\n\nexport default class HostSelector extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hostName: props.serverAddress,\n      changed: false\n    };\n\n    this.handleHostNameChange = this.handleHostNameChange.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handleHostNameChange(e) {\n    this.setState({hostName: e.target.value, changed: true});\n  }\n\n  handleEditingFinished() {\n    if (this.state.changed) {\n      this.setState({changed: false});\n      this.props.onServerAddressChange(this.state.hostName.trim());\n    }\n  }\n\n  render() {\n    var hostOptions = [];\n    for (let key in KNOWN_HOSTS) {\n      let item = KNOWN_HOSTS[key];\n      hostOptions.push(\n        <option key={item} value={item} />\n      );\n    }\n    return (\n      <div className=\"panel-form-row\">\n        <input type=\"search\" id=\"host-name\" placeholder={this.props.hostName} list=\"known-hosts\"\n          className=\"quoted\" value={this.state.hostName} onChange={this.handleHostNameChange}\n          onBlur={this.handleEditingFinished} required />\n        <datalist id=\"known-hosts\">\n          {hostOptions}\n        </datalist>\n      </div>\n    );\n  }\n}\n","// Tinode config panel.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport HostSelector from '../widgets/host-selector.jsx';\n\nexport default class SettingsView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transport: props.transport || 'def',\n      serverAddress: props.serverAddress,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleTransportSelected = this.handleTransportSelected.bind(this);\n    this.handleServerAddressChange = this.handleServerAddressChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onUpdate({\n      transport: this.state.transport,\n      serverAddress: this.state.serverAddress\n    });\n  }\n\n  handleTransportSelected(e) {\n    this.setState({transport: e.currentTarget.value});\n  }\n\n  handleServerAddressChange(name) {\n    this.setState({serverAddress: name});\n  }\n\n  render() {\n    const names = {def: \"default\", ws: \"websocket\", lp: \"long polling\"};\n    const transportOptions = [];\n    ['def', 'ws', 'lp'].map((item) => {\n      const id = 'transport-' + item;\n      const name = names[item];\n      transportOptions.push(\n        <li key={item}>\n          <input type=\"radio\" id={id} name=\"transport-select\" value={item}\n            checked={this.state.transport === item}\n            onChange={this.handleTransportSelected} />\n          <label htmlFor={id}>{name}</label>\n        </li>\n      );\n    });\n\n    return (\n      <form id=\"settings-form\" className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_server_to_use\" defaultMessage=\"Server to use:\"\n              description=\"Label for server selector in SettingsView\" />\n          </label>\n        </div>\n        <HostSelector serverAddress={this.state.serverAddress}\n          onServerAddressChange={this.handleServerAddressChange} />\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_wire_transport\" defaultMessage=\"Wire transport:\"\n              description=\"Label for wire transport selection in SettingsView\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ul className=\"quoted\">\n            {transportOptions}\n          </ul>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button type=\"submit\" className=\"primary\">\n            <FormattedMessage id=\"button_update\" defaultMessage=\"Update\"\n              description=\"Button [Update]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// ValidationView: panel for confirming credentials, like email or phone.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  phone: {\n    id: 'phone_dative',\n    defaultMessage: 'phone',\n    description: \"Dative case of 'phone', i.e. 'phone' in 'by phone'\",\n  },\n  email: {\n    id: 'email_dative',\n    defaultMessage: 'email',\n    description: \"Dative case of 'email', i.e. 'email' in 'by email'\",\n  }\n});\n\nclass ValidationView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      code: props.credCode || ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({code: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    } else if (e.key == 'Escape') {\n      this.handleCancel(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.code && this.state.code.trim()) {\n      this.props.onSubmit(this.props.credMethod, this.state.code.trim());\n    }\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel();\n  }\n\n\n  render() {\n    const { formatMessage } = this.props.intl;\n    const methods = {'email': formatMessage(messages.email), 'tel': formatMessage(messages.phone)};\n    let method = methods[this.props.credMethod] || this.props.credMethod;\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\" htmlFor=\"enter-confirmation-code\">\n            <FormattedMessage id=\"enter_confirmation_code_prompt\"\n              defaultMessage=\"Enter confirmation code sent to you by {method}:\"\n              description=\"Request to enter confirmation code\"\n              values={{method: method}} />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"numeric_confirmation_code_prompt\"\n          defaultMessage=\"Numbers only\" description=\"Prompt for numeric conformation code\">{\n          (numbers_only) => <input type=\"text\" id=\"enter-confirmation-code\"\n            placeholder={numbers_only}\n            value={this.state.code} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"secondary\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_confirm\" defaultMessage=\"Confirm\" description=\"Button [Confirm]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ValidationView);\n","import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport SideNavbar from '../widgets/side-navbar.jsx';\nimport TopicCommon from '../widgets/topic-common.jsx';\n\nimport AccountSettingsView from './account-settings-view.jsx';\nimport ContactsView from './contacts-view.jsx';\nimport CreateAccountView from './create-account-view.jsx';\nimport AccNotificationsView from './acc-notifications-view.jsx';\nimport AccSecurityView from './acc-security-view.jsx';\nimport AccSupportView from './acc-support-view.jsx';\nimport LoginView from './login-view.jsx';\nimport NewTopicView from './new-topic-view.jsx';\nimport PasswordResetView from './password-reset-view.jsx';\nimport SettingsView from './settings-view.jsx';\nimport ValidationView from './validation-view.jsx';\n\n// Panel titles for translation.\nconst messages = defineMessages({\n  login: {\n    id: 'sidepanel_title_login',\n    description: 'Sidepanel title for LoginView.',\n    defaultMessage: 'Sign In'\n  },\n  register: {\n    id: 'sidepanel_title_register',\n    description: 'Sidepanel title for CreateAccountView.',\n    defaultMessage: 'Create Account'\n  },\n  settings: {\n    id: 'sidepanel_title_settings',\n    description: 'Sidepanel title for SettingsView.',\n    defaultMessage: 'Settings'\n  },\n  edit: {\n    id: 'sidepanel_title_account_settings',\n    description: 'Sidepanel title for AccountSettingsView.',\n    defaultMessage: 'Account Settings'\n  },\n  general: {\n    id: 'panel_title_general',\n    description: 'Title for TopicCommon.',\n    defaultMessage: 'General'\n  },\n  security: {\n    id: 'panel_title_security',\n    description: 'Title for TopicSecirity and AccSecurity.',\n    defaultMessage: 'Security'\n  },\n  crop: {\n    id: 'panel_title_crop',\n    description: 'Title for AvatarCropView.',\n    defaultMessage: 'Drag to Adjust'\n  },\n  notif: {\n    id: 'sidepanel_title_acc_notifications',\n    description: 'Sidepanel title for AccNotificationsView.',\n    defaultMessage: 'Notifications'\n  },\n  support: {\n    id: 'sidepanel_title_acc_support',\n    description: 'Sidepanel title for AccSupportView.',\n    defaultMessage: 'Support'\n  },\n  newtpk: {\n    id: 'sidepanel_title_newtpk',\n    description: 'Sidepanel title for NewTopicView.',\n    defaultMessage: 'Start New Chat'\n  },\n  cred: {\n    id: 'sidepanel_title_cred',\n    description: 'Sidepanel title for ValidationView.',\n    defaultMessage: 'Confirm Credentials'\n  },\n  reset: {\n    id: 'sidepanel_title_reset',\n    description: 'Sidepanel title for PasswordResetView.',\n    defaultMessage: 'Reset Password'\n  },\n  archive: {\n    id: 'sidepanel_title_archive',\n    description: 'Sidepanel title for ContactsView-Archive.',\n    defaultMessage: 'Archived Chats'\n  },\n  blocked: {\n    id: 'sidepanel_title_blocked',\n    description: 'Sidepanel title for ContactsView-Blocked.',\n    defaultMessage: 'Blocked Chats'\n  }\n});\n\nclass SidepanelView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNewTopic = this.handleNewTopic.bind(this);\n  }\n\n  handleNewTopic() {\n    this.props.onNavigate('newtpk');\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const view = this.props.state || (this.props.myUserId ? 'contacts' : 'login');\n\n    let title, avatar, badges;\n    if (view == 'contacts') {\n      title = this.props.title;\n      avatar = this.props.avatar ? this.props.avatar : true;\n      badges = this.props.trustedBadges;\n    } else {\n      title = formatMessage(messages[view]);\n      avatar = false;\n      badges = null;\n    }\n\n    let onCancel;\n    if (['login', 'contacts'].indexOf(view) == -1) {\n      onCancel = this.props.onCancel;\n    }\n\n    return (\n      <div id=\"sidepanel\" className={this.props.hideSelf ? 'nodisplay' : null}>\n        <SideNavbar\n          state={view}\n          title={title}\n          avatar={avatar}\n          tinode={this.props.tinode}\n          trustedBadges={badges}\n          myUserId={this.props.myUserId}\n          onSignUp={this.props.onSignUp}\n          onSettings={this.props.onSettings}\n          onNewTopic={this.handleNewTopic}\n          onCancel={onCancel} />\n\n        <ErrorPanel\n          level={this.props.errorLevel}\n          text={this.props.errorText}\n          action={this.props.errorAction}\n          actionText={this.props.errorActionText}\n          onClearError={this.props.onError} />\n\n        <LoadSpinner show={this.props.loadSpinnerVisible} />\n\n        {view === 'login' ?\n          <LoginView\n            login={this.props.login}\n            disabled={this.props.loginDisabled}\n            persist={this.props.persist}\n            onLogin={this.props.onLoginRequest}\n            onPersistenceChange={this.props.onPersistenceChange} /> :\n\n          view === 'register' ?\n          <CreateAccountView\n            tinode={this.props.tinode}\n            onCreateAccount={this.props.onCreateAccount}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'settings' ?\n          <SettingsView\n            transport={this.props.transport}\n            serverAddress={this.props.serverAddress}\n            onCancel={this.props.onCancel}\n            onUpdate={this.props.onGlobalSettings} /> :\n\n          view === 'edit' ?\n          <AccountSettingsView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            trustedBadges={this.props.trustedBadges}\n            onNavigate={this.props.onNavigate} /> :\n\n          (view === 'general' || view === 'crop') ?\n          <TopicCommon\n            topic=\"me\"\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            onUpdateTopicDesc={this.props.onUpdateAccountDesc}\n            onUpdateTags={this.props.onUpdateAccountTags}\n            onCredAdd={this.props.onCredAdd}\n            onCredDelete={this.props.onCredDelete}\n            onCredConfirm={this.props.onCredConfirm}\n            onError={this.props.onError} /> :\n\n          view === 'notif' ?\n          <AccNotificationsView\n            messageSounds={this.props.messageSounds}\n            desktopAlerts={this.props.desktopAlerts}\n            desktopAlertsEnabled={this.props.desktopAlertsEnabled}\n            incognitoMode={this.props.incognitoMode}\n            onTogglePushNotifications={this.props.onTogglePushNotifications}\n            onToggleMessageSounds={this.props.onToggleMessageSounds}\n            onToggleIncognitoMode={this.props.onToggleIncognitoMode} /> :\n\n          view === 'security' ?\n          <AccSecurityView\n            tinode={this.props.tinode}\n            onUpdateAccountDesc={this.props.onUpdateAccountDesc}\n            onUpdatePassword={this.props.onUpdatePassword}\n            onLogout={this.props.onLogout}\n            onDeleteAccount={this.props.onDeleteAccount}\n            onShowAlert={this.props.onShowAlert}\n            onShowBlocked={this.props.onShowBlocked} /> :\n\n          view === 'support' ?\n          <AccSupportView\n            serverAddress={this.props.serverAddress}\n            serverVersion={this.props.serverVersion} /> :\n\n          (view === 'contacts' || view == 'archive' || view == 'blocked') ?\n          <ContactsView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            connected={this.props.connected}\n            topicSelected={this.props.topicSelected}\n            archive={view == 'archive'}\n            blocked={view == 'blocked'}\n            chatList={this.props.chatList}\n            showContextMenu={this.props.showContextMenu}\n            onTopicSelected={this.props.onTopicSelected}\n            onShowArchive={this.props.onShowArchive} /> :\n\n          view === 'newtpk' ?\n          <NewTopicView\n            tinode={this.props.tinode}\n            searchResults={this.props.searchResults}\n            onInitFind={this.props.onInitFind}\n            onSearchContacts={this.props.onSearchContacts}\n            onCreateTopic={this.props.onCreateTopic}\n            onError={this.props.onError} /> :\n\n          view === 'cred' ?\n          <ValidationView\n            credCode={this.props.credCode}\n            credMethod={this.props.credMethod}\n            onSubmit={this.props.onValidateCredentials}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'reset' ?\n          <PasswordResetView\n            onRequest={this.props.onPasswordResetRequest}\n            onReset={this.props.onResetPassword}\n            onCancel={this.props.onCancel} /> :\n          null}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SidepanelView);\n","import { KNOWN_HOSTS, DEFAULT_HOST } from '../config.js';\n\n// Detect server address from the URL\nexport function detectServerAddress() {\n  let host = DEFAULT_HOST;\n  if (typeof window.location == 'object') {\n    if (window.location.protocol == 'file:' || window.location.hostname == 'localhost') {\n      host = KNOWN_HOSTS.local;\n    } else if (window.location.hostname) {\n      host = window.location.hostname + (window.location.port ? ':' + window.location.port : '');\n    }\n  }\n  return host;\n}\n\n// Detect if the page is served over HTTPS.\nexport function isSecureConnection() {\n  if (typeof window.location == 'object') {\n    return window.location.protocol == 'https:';\n  }\n  return false;\n}\n\nexport function isLocalHost() {\n  if (typeof window.location == 'object') {\n    return window.location.hostname == 'localhost';\n  }\n  return false;\n}\n","// The top-level class to hold all functionality together.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport * as firebase from 'firebase/app';\nimport 'firebase/messaging';\n\nimport Tinode from 'tinode-sdk';\n\nimport Alert from '../widgets/alert.jsx';\nimport ContextMenu from '../widgets/context-menu.jsx';\nimport ForwardDialog from '../widgets/forward-dialog.jsx';\n\nimport InfoView from './info-view.jsx';\nimport MessagesView from './messages-view.jsx';\nimport SidepanelView from './sidepanel-view.jsx';\n\nimport { API_KEY, APP_NAME, DEFAULT_P2P_ACCESS_MODE, FORWARDED_PREVIEW_LENGTH, LOGGING_ENABLED,\n  MEDIA_BREAKPOINT, RECEIVED_DELAY } from '../config.js';\nimport { PACKAGE_VERSION } from '../version.js';\nimport { base64ReEncode, makeImageUrl } from '../lib/blob-helpers.js';\nimport { detectServerAddress, isLocalHost, isSecureConnection } from '../lib/host-name.js';\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { secondsToTime } from '../lib/strformat.js'\nimport { updateFavicon } from '../lib/utils.js';\n\n// Sound to play on message received.\nconst POP_SOUND = new Audio('audio/msg.mp3');\n\nconst messages = defineMessages({\n  reconnect_countdown: {\n    id: 'reconnect_countdown',\n    defaultMessage: 'Disconnected. Reconnecting in {seconds}…',\n    description: 'Message shown when an app update is available.'\n  },\n  reconnect_now: {\n    id: 'reconnect_now',\n    defaultMessage: 'Try now',\n    description: 'Prompt for reconnecting now'\n  },\n  push_init_failed: {\n    id: 'push_init_failed',\n    defaultMessage: 'Failed to initialize push notifications',\n    description: 'Error message when push notifications have failed to initialize.'\n  },\n  invalid_security_token: {\n    id: 'invalid_security_token',\n    defaultMessage: 'Invalid security token',\n    description: 'Error message when resetting password.'\n  },\n  no_connection: {\n    id: 'no_connection',\n    defaultMessage: 'No connection',\n    description: 'Warning that the user is offline.'\n  },\n  code_doesnot_match: {\n    id: 'code_doesnot_match',\n    defaultMessage: 'Code does not match',\n    description: 'Error message when the credential validation code is incorrect.'\n  },\n  menu_item_info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  }\n});\n\nclass TinodeWeb extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selfRef = React.createRef();\n\n    this.state = this.getBlankState();\n\n    this.handleResize = this.handleResize.bind(this);\n    this.handleHashRoute = this.handleHashRoute.bind(this);\n    this.handleOnline = this.handleOnline.bind(this);\n    this.checkForAppUpdate = this.checkForAppUpdate.bind(this);\n    this.handleVisibilityEvent = this.handleVisibilityEvent.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.handleLoginRequest = this.handleLoginRequest.bind(this);\n    this.handlePersistenceChange = this.handlePersistenceChange.bind(this);\n    this.handleConnected = this.handleConnected.bind(this);\n    this.handleAutoreconnectIteration = this.handleAutoreconnectIteration.bind(this);\n    this.doLogin = this.doLogin.bind(this);\n    this.handleCredentialsRequest = this.handleCredentialsRequest.bind(this);\n    this.handleLoginSuccessful = this.handleLoginSuccessful.bind(this);\n    this.handleDisconnect = this.handleDisconnect.bind(this);\n    this.tnMeMetaDesc = this.tnMeMetaDesc.bind(this);\n    this.tnMeContactUpdate = this.tnMeContactUpdate.bind(this);\n    this.tnMeSubsUpdated = this.tnMeSubsUpdated.bind(this);\n    this.resetContactList = this.resetContactList.bind(this);\n    this.tnData = this.tnData.bind(this);\n    this.tnInitFind = this.tnInitFind.bind(this);\n    this.tnFndSubsUpdated = this.tnFndSubsUpdated.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleTopicSelected = this.handleTopicSelected.bind(this);\n    this.handleHideMessagesView = this.handleHideMessagesView.bind(this);\n    this.handleSendMessage = this.handleSendMessage.bind(this);\n    this.handleNewChatInvitation = this.handleNewChatInvitation.bind(this);\n    this.handleNewAccount = this.handleNewAccount.bind(this);\n    this.handleNewAccountRequest = this.handleNewAccountRequest.bind(this);\n    this.handleUpdatePasswordRequest = this.handleUpdatePasswordRequest.bind(this);\n    this.handleUpdateAccountTagsRequest = this.handleUpdateAccountTagsRequest.bind(this);\n    this.handleToggleIncognitoMode = this.handleToggleIncognitoMode.bind(this);\n    this.handleSettings = this.handleSettings.bind(this);\n    this.handleGlobalSettings = this.handleGlobalSettings.bind(this);\n    this.handleShowArchive = this.handleShowArchive.bind(this);\n    this.handleShowBlocked = this.handleShowBlocked.bind(this);\n    this.handleToggleMessageSounds = this.handleToggleMessageSounds.bind(this);\n    this.handleCredAdd = this.handleCredAdd.bind(this);\n    this.handleCredDelete = this.handleCredDelete.bind(this);\n    this.handleCredConfirm = this.handleCredConfirm.bind(this);\n    this.initFCMessaging = this.initFCMessaging.bind(this);\n    this.togglePushToken = this.togglePushToken.bind(this);\n    this.requestPushToken = this.requestPushToken.bind(this);\n    this.handlePushMessage = this.handlePushMessage.bind(this);\n    this.handleSidepanelCancel = this.handleSidepanelCancel.bind(this);\n    this.handleStartTopicRequest = this.handleStartTopicRequest.bind(this);\n    this.handleNewTopicCreated = this.handleNewTopicCreated.bind(this);\n    this.handleTopicUpdateRequest = this.handleTopicUpdateRequest.bind(this);\n    this.handleUnarchive = this.handleUnarchive.bind(this);\n    this.handleChangePermissions = this.handleChangePermissions.bind(this);\n    this.handleTagsUpdateRequest = this.handleTagsUpdateRequest.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n    this.handleDeleteTopicRequest = this.handleDeleteTopicRequest.bind(this);\n    this.handleDeleteMessagesRequest = this.handleDeleteMessagesRequest.bind(this);\n    this.handleLeaveUnsubRequest = this.handleLeaveUnsubRequest.bind(this);\n    this.handleBlockTopicRequest = this.handleBlockTopicRequest.bind(this);\n    this.handleReportTopic = this.handleReportTopic.bind(this);\n    this.handleShowContextMenu = this.handleShowContextMenu.bind(this);\n    this.defaultTopicContextMenu = this.defaultTopicContextMenu.bind(this);\n    this.handleHideContextMenu = this.handleHideContextMenu.bind(this);\n    this.handleShowAlert = this.handleShowAlert.bind(this);\n    this.handleShowInfoView = this.handleShowInfoView.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleValidateCredentialsRequest = this.handleValidateCredentialsRequest.bind(this);\n    this.handlePasswordResetRequest = this.handlePasswordResetRequest.bind(this);\n    this.handleResetPassword = this.handleResetPassword.bind(this);\n    this.handleContextMenuAction = this.handleContextMenuAction.bind(this);\n\n    this.handleShowForwardDialog = this.handleShowForwardDialog.bind(this);\n    this.handleHideForwardDialog = this.handleHideForwardDialog.bind(this);\n\n    this.sendMessageToTopic = this.sendMessageToTopic.bind(this);\n  }\n\n  getBlankState() {\n    const settings = LocalStorageUtil.getObject('settings') || {};\n    const persist = !!LocalStorageUtil.getObject('keep-logged-in');\n\n    return {\n      connected: false,\n      // Connected and subscribed to 'me'\n      ready: false,\n      // Try to re-login on new connection.\n      autoLogin: false,\n      transport: settings.transport || null,\n      serverAddress: settings.serverAddress || detectServerAddress(),\n      serverVersion: \"no connection\",\n      // \"On\" is the default, so saving the \"off\" state.\n      messageSounds: !settings.messageSoundsOff,\n      incognitoMode: false,\n      desktopAlerts: persist && !!settings.desktopAlerts,\n      desktopAlertsEnabled: (isSecureConnection() || isLocalHost()) &&\n        (typeof firebase != 'undefined') && (typeof navigator != 'undefined') &&\n        (typeof FIREBASE_INIT != 'undefined'),\n      firebaseToken: persist ? LocalStorageUtil.getObject('firebase-token') : null,\n\n      applicationVisible: !document.hidden,\n\n      errorText: '',\n      errorLevel: null,\n      errorAction: undefined,\n      errorActionText: null,\n\n      sidePanelSelected: 'login',\n      sidePanelTitle: null,\n      sidePanelAvatar: null,\n      myTrustedBadges: [],\n      loadSpinnerVisible: false,\n\n      login: '',\n      password: '',\n      persist: persist,\n      myUserId: null,\n      liveConnection: navigator.onLine,\n      topicSelected: '',\n      topicSelectedOnline: false,\n      topicSelectedAcs: null,\n      newTopicParams: null,\n      loginDisabled: false,\n      displayMobile: (window.innerWidth <= MEDIA_BREAKPOINT),\n      infoPanel: undefined,\n      mobilePanel: 'sidepanel',\n\n      contextMenuVisible: false,\n      contextMenuBounds: null,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuItems: [],\n\n      forwardDialogVisible: false,\n      forwardMessage: null,\n\n      // Modal alert dialog.\n      alertVisible: false,\n      alertParams: {},\n\n      // Chats as shown in the ContactsView\n      chatList: [],\n      // Contacts returned by a search query.\n      searchResults: [],\n      // Merged results of a search query and p2p chats.\n      searchableContacts: [],\n      credMethod: undefined,\n      credCode: undefined,\n      // Topic to go to after login.\n      requestedTopic: undefined\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    window.addEventListener('online', (e) => { this.handleOnline(true); });\n    window.addEventListener('offline', (e) => { this.handleOnline(false); });\n    window.addEventListener('hashchange', this.handleHashRoute);\n\n    // Process background notifications from the service worker.\n    if (typeof BroadcastChannel == 'function') {\n      const serviceWorkerChannel = new BroadcastChannel('tinode-sw');\n      serviceWorkerChannel.addEventListener('message', this.handlePushMessage);\n    } else {\n      // Safari is broken by design.\n      console.warn(\"Your browser does not support BroadcastChannel. Some features will not be available\");\n    }\n\n    // Window/tab visible or invisible for pausing timers.\n    document.addEventListener('visibilitychange', this.handleVisibilityEvent);\n\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n\n    new Promise((resolve, reject) => {\n      this.tinode = TinodeWeb.tnSetup(this.state.serverAddress, this.state.transport,\n        this.props.intl.locale, this.state.persist, resolve);\n      this.tinode.onConnect = this.handleConnected;\n      this.tinode.onDisconnect = this.handleDisconnect;\n      this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n    }).then(() => {\n      // Initialize desktop alerts.\n      if (this.state.desktopAlertsEnabled) {\n        this.initFCMessaging().then(() => {\n          if (this.state.desktopAlerts) {\n            if (!this.state.firebaseToken) {\n              this.togglePushToken(true);\n            } else {\n              this.tinode.setDeviceToken(this.state.firebaseToken);\n            }\n          }\n        }).catch(() => {\n          // do nothing: handled earlier.\n          // catch needed to pervent unnecessary logging of error.\n        });\n      }\n\n      // Parse and save the hash navigation params.\n      const parsedNav = HashNavigation.parseUrlHash(window.location.hash);\n\n      // Read contacts from cache.\n      this.resetContactList();\n\n      const token = this.state.persist ? LocalStorageUtil.getObject('auth-token') : undefined;\n      if (token) {\n        this.setState({autoLogin: true});\n\n        // When reading from storage, date is returned as string.\n        token.expires = new Date(token.expires);\n        this.tinode.setAuthToken(token);\n        this.tinode.connect().catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n      }\n\n      // Maybe navigate to home screen.\n      if (!['cred', 'reset', 'register'].includes(parsedNav.path[0])) {\n        // Save possible topic name.\n        this.setState({requestedTopic: parsedNav.path[1]});\n        HashNavigation.navigateTo('');\n      }\n\n      this.readTimer = null;\n      this.readTimerCallback = null;\n\n      this.handleHashRoute();\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n    window.removeEventListener('hashchange', this.handleHashRoute);\n    document.removeEventListener('visibilitychange', this.handleVisibilityEvent);\n  }\n\n  // Setup transport (usually websocket) and server address. This will terminate connection with the server.\n  static tnSetup(serverAddress, transport, locale, persistentCache, onSetupCompleted) {\n    const tinode = new Tinode({appName: APP_NAME, host: serverAddress, apiKey: API_KEY, transport: transport,\n      secure: isSecureConnection(), persist: persistentCache}, onSetupCompleted);\n    tinode.setHumanLanguage(locale);\n    tinode.enableLogging(LOGGING_ENABLED, true);\n    return tinode;\n  }\n\n  // Notifiy Tinode that a push message was received from the server.\n  handlePushMessage(data) {\n    if (data.what == 'msg' && Tinode.isChannelTopicName(data.topic)) {\n      // The last argument is a fake user Id: otherwise the update is seen as one from the current user.\n      this.tinode.oobNotification(data.topic, data.seq, 'fake-uid');\n    }\n  }\n\n  initFCMessaging() {\n    const {formatMessage, locale} = this.props.intl;\n    const onError = (msg, err) => {\n      console.error(msg, err);\n      this.handleError(formatMessage(messages.push_init_failed), 'err');\n      this.setState({desktopAlertsEnabled: false});\n    }\n\n    try {\n      this.fbPush = firebase.initializeApp(FIREBASE_INIT, APP_NAME).messaging();\n      this.fbPush.usePublicVapidKey(FIREBASE_INIT.messagingVapidKey);\n\n      return navigator.serviceWorker.register('/service-worker.js').then((reg) => {\n        this.checkForAppUpdate(reg);\n        this.fbPush.useServiceWorker(reg);\n        reg.active.postMessage(JSON.stringify({locale: locale, version: PACKAGE_VERSION}));\n\n        // Google could not be bothered to mention that onTokenRefresh is never called.\n        this.fbPush.onTokenRefresh(() => {\n          this.requestPushToken();\n        });\n\n        // Handhe FCM pushes\n        // (a) for channels always,\n        // (b) pushes when the app is in foreground but has not focus.\n        this.fbPush.onMessage(payload => { this.handlePushMessage(payload.data); });\n\n        return reg;\n      }).catch((err) => {\n        // registration failed :(\n        onError(\"Failed to register service worker:\", err);\n        return Promise.reject(err);\n      });\n    } catch (err) {\n      onError(\"Failed to initialize push notifications\", err);\n      return Promise.reject(err);\n    }\n  }\n\n  handleResize() {\n    const mobile = document.documentElement.clientWidth <= MEDIA_BREAKPOINT;\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n    if (this.state.displayMobile != mobile) {\n      this.setState({displayMobile: mobile});\n    }\n  }\n\n  // Check if a newer version of TinodeWeb app is available at the server.\n  checkForAppUpdate(reg) {\n    reg.onupdatefound = () => {\n      const installingWorker = reg.installing;\n      installingWorker.onstatechange = () => {\n        if (installingWorker.state == 'installed' && navigator.serviceWorker.controller) {\n          const msg = <>\n            <FormattedMessage id=\"update_available\"\n              defaultMessage=\"Update available.\"\n              description=\"Message shown when an app update is available.\" /> <a href=\"\">\n              <FormattedMessage id=\"reload_update\"\n                defaultMessage=\"Reload\"\n                description=\"Call to action to reload application when update is available.\" />\n            </a>.</>;\n          this.handleError(msg, 'info');\n        }\n      }\n    }\n  }\n\n  // Handle for hashchange event: display appropriate panels.\n  handleHashRoute() {\n    const hash = HashNavigation.parseUrlHash(window.location.hash);\n    if (hash.path && hash.path.length > 0) {\n      // Left-side panel selector.\n      if (['register','settings','edit','notif','security','support','general','crop',\n          'cred','reset','newtpk','archive','blocked','contacts',''].includes(hash.path[0])) {\n        this.setState({sidePanelSelected: hash.path[0]});\n      } else {\n        console.warn(\"Unknown sidepanel view\", hash.path[0]);\n      }\n\n      // Topic for MessagesView selector.\n      let topicName = hash.path[1] || null;\n      if (topicName != this.state.topicSelected) {\n        if (!Tinode.topicType(topicName)) {\n          // Clear invalid topic name.\n          topicName = null;\n        }\n        const newState = {\n          topicSelected: topicName\n        };\n        const acs = this.tinode.getTopicAccessMode(topicName);\n        if (acs) {\n          newState.topicSelectedAcs = acs;\n        }\n        this.setState(newState);\n      }\n    } else {\n      // Empty hashpath\n      this.setState({sidePanelSelected: '', topicSelected: null});\n    }\n\n    // Save validation credentials, if available.\n    if (hash.params.method) {\n      this.setState({ credMethod: hash.params.method });\n    }\n    if (hash.params.code) {\n      this.setState({ credCode: hash.params.code });\n    }\n\n    // Additional parameters of panels.\n    this.setState({\n      infoPanel: hash.params.info,\n      newTopicTabSelected: hash.params.tab\n    });\n  }\n\n  handleOnline(online) {\n    if (online) {\n      this.handleError();\n      clearInterval(this.reconnectCountdown);\n      this.tinode.reconnect();\n    } else {\n      this.handleError(this.props.intl.formatMessage(messages.no_connection), 'warn');\n    }\n    this.setState({liveConnection: online});\n  }\n\n  handleVisibilityEvent() {\n    this.setState({applicationVisible: !document.hidden});\n  }\n\n  handleError(err, level, action, actionText) {\n    this.setState({errorText: err, errorLevel: level, errorAction: action, errorActionText: actionText});\n  }\n\n  // User clicked Login button in the side panel.\n  handleLoginRequest(login, password) {\n    this.setState({\n      loginDisabled: true,\n      login: login,\n      password: password,\n      loadSpinnerVisible: true,\n      autoLogin: true\n    });\n    this.handleError('', null);\n\n    if (this.tinode.isConnected()) {\n      this.doLogin(login, password, {meth: this.state.credMethod, resp: this.state.credCode});\n    } else {\n      this.tinode.connect().catch((err) => {\n        // Socket error\n        this.setState({loginDisabled: false, autoLogin: false, loadSpinnerVisible: false});\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // Enable or disable saving the password and IndexedDB.\n  handlePersistenceChange(persist) {\n    if (persist) {\n      this.tinode.initStorage().then(() => {\n        LocalStorageUtil.setObject('keep-logged-in', true);\n        this.setState({persist: true});\n      });\n    } else {\n      this.tinode.clearStorage().then(() => {\n        LocalStorageUtil.setObject('keep-logged-in', false);\n        this.setState({persist: false});\n      });\n    }\n  }\n\n  // Connection succeeded.\n  handleConnected() {\n    // Just to be sure.\n    clearInterval(this.reconnectCountdown);\n    this.handleError();\n\n    const params = this.tinode.getServerInfo();\n    this.setState({\n      serverVersion: params.ver + ' ' + (params.build ? params.build : 'none')\n    });\n\n    if (this.state.autoLogin) {\n      this.doLogin(this.state.login, this.state.password, {meth: this.state.credMethod, resp: this.state.credCode});\n    }\n  }\n\n  // Called for each auto-reconnect iteration.\n  handleAutoreconnectIteration(sec, prom) {\n    clearInterval(this.reconnectCountdown);\n\n    if (sec < 0) {\n      // Clear error\n      this.handleError();\n      return;\n    }\n\n    if (prom) {\n      // Reconnecting now\n      prom.then(() => {\n        // Reconnected: clear error\n        this.handleError();\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n      return;\n    }\n\n    const {formatMessage} = this.props.intl;\n    let count = sec / 1000;\n    count = count | count;\n    this.reconnectCountdown = setInterval(() => {\n      const timeLeft = (count > 99) ? secondsToTime(count) : count;\n      this.handleError(\n        formatMessage(messages.reconnect_countdown, {seconds: timeLeft}),\n        'warn',\n        () => {\n          clearInterval(this.reconnectCountdown);\n          this.tinode.reconnect();\n        },\n        formatMessage(messages.reconnect_now)\n      );\n      count -= 1;\n    }, 1000);\n  }\n\n  // Connection lost\n  handleDisconnect(err) {\n    this.setState({\n      connected: false,\n      ready: false,\n      topicSelectedOnline: false,\n      errorText: err && err.message ? err.message : \"Disconnected\",\n      errorLevel: err && err.message ? 'err' : 'warn',\n      loginDisabled: false,\n      contextMenuVisible: false,\n      forwardDialogVisible: false,\n      serverVersion: \"no connection\"\n    });\n  }\n\n  doLogin(login, password, cred) {\n    if (this.tinode.isAuthenticated()) {\n      // Already logged in. Go to default screen.\n      HashNavigation.navigateTo('');\n      return;\n    }\n    // Sanitize and package credentail.\n    cred = Tinode.credential(cred);\n    // Try to login with login/password. If they are not available, try token. If no token, ask for login/password.\n    let promise = null;\n    let token = this.tinode.getAuthToken();\n    if (login && password) {\n      token = null;\n      this.setState({password: null});\n      promise = this.tinode.loginBasic(login, password, cred);\n    } else if (token) {\n      promise = this.tinode.loginToken(token.token, cred);\n    }\n\n    if (promise) {\n      promise.then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text === 'validate credentials') {\n          this.setState({loadSpinnerVisible: false});\n          if (cred) {\n            this.handleError(this.props.intl.formatMessage(messages.code_doesnot_match), 'warn');\n          }\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful();\n        }\n      }).catch((err) => {\n        // Login failed, report error.\n        this.setState({\n          loginDisabled: false,\n          credMethod: undefined,\n          credCode: undefined,\n          loadSpinnerVisible: false,\n          autoLogin: false\n        });\n        this.handleError(err.message, 'err');\n        if (token) {\n          this.handleLogout();\n        }\n        HashNavigation.navigateTo('');\n      });\n    } else {\n      // No login credentials provided.\n      // Make sure we are on the login page.\n      HashNavigation.navigateTo('');\n      this.setState({loginDisabled: false});\n    }\n  }\n\n  handleCredentialsRequest(params) {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    parsed.path[0] = 'cred';\n    parsed.params['method'] = params.cred[0];\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n  }\n\n  handleLoginSuccessful() {\n    this.handleError();\n\n    // Refresh authentication token.\n    if (LocalStorageUtil.getObject('keep-logged-in')) {\n      LocalStorageUtil.setObject('auth-token', this.tinode.getAuthToken());\n    }\n\n    const goToTopic = this.state.requestedTopic;\n    // Logged in fine, subscribe to 'me' attaching callbacks from the contacts view.\n    const me = this.tinode.getMeTopic();\n    me.onMetaDesc = this.tnMeMetaDesc;\n    me.onContactUpdate = this.tnMeContactUpdate;\n    me.onSubsUpdated = this.tnMeSubsUpdated;\n    this.setState({\n      connected: true,\n      credMethod: undefined,\n      credCode: undefined,\n      myUserId: this.tinode.getCurrentUserID(),\n      autoLogin: true,\n      requestedTopic: undefined,\n    });\n    // Subscribe, fetch topic desc, the list of subscriptions. Messages are not fetched.\n    me.subscribe(\n      me.startMetaQuery().\n        withLaterSub().\n        withDesc().\n        withTags().\n        withCred().\n        build()\n      ).catch((err) => {\n        this.tinode.disconnect();\n        localStorage.removeItem('auth-token');\n        this.handleError(err.message, 'err');\n        HashNavigation.navigateTo('');\n      }).finally(() => {\n        this.setState({loadSpinnerVisible: false});\n      });\n    let urlHash = HashNavigation.setUrlSidePanel(window.location.hash, 'contacts');\n    if (goToTopic) {\n      urlHash = HashNavigation.setUrlTopic(urlHash, goToTopic);\n    }\n    HashNavigation.navigateTo(urlHash);\n  }\n\n  tnMeMetaDesc(desc) {\n    if (desc) {\n      if (desc.public) {\n        this.setState({\n          sidePanelTitle: desc.public.fn,\n          sidePanelAvatar: makeImageUrl(desc.public.photo)\n        });\n      }\n      if (desc.trusted) {\n        const badges = [];\n        for (const [key, val] of Object.entries(desc.trusted)) {\n          if (val) {\n            badges.push(key);\n          }\n        }\n        this.setState({\n          myTrustedBadges: badges,\n        });\n      }\n      if (desc.acs) {\n        this.setState({\n          incognitoMode: !desc.acs.isPresencer()\n        });\n      }\n    }\n  }\n\n  // Reactions to updates to the contact list.\n  tnMeContactUpdate(what, cont) {\n    if (what == 'on' || what == 'off') {\n      this.resetContactList();\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedOnline: (what == 'on')});\n      }\n    } else if (what == 'read') {\n      this.resetContactList();\n    } else if (what == 'msg') {\n      // Check if the topic is archived. If so, don't play a sound.\n      const topic = this.tinode.getTopic(cont.topic);\n      const archived = topic && topic.isArchived();\n\n      // New message received. Maybe the message is from the current user, then unread is 0.\n      if (cont.unread > 0 && this.state.messageSounds && !archived) {\n        // Skip update if the topic is currently open, otherwise the badge will annoyingly flash.\n        if (document.hidden || this.state.topicSelected != cont.topic) {\n          POP_SOUND.play();\n        }\n      }\n      // Reorder contact list to use possibly updated 'touched'.\n      this.resetContactList();\n    } else if (what == 'recv') {\n      // Explicitly ignoring \"recv\" -- it causes no visible updates to contact list.\n    } else if (what == 'gone' || what == 'unsub') {\n      // Topic deleted or user unsubscribed. Remove topic from view.\n      // If the currently selected topic is gone, clear the selection.\n      if (this.state.topicSelected == cont.topic) {\n        this.handleTopicSelected(null);\n      }\n      // Redraw without the deleted topic.\n      this.resetContactList();\n    } else if (what == 'acs') {\n      // Permissions changed. If it's for the currently selected topic,\n      // update the views.\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedAcs: cont.acs});\n      }\n    } else if (what == 'del') {\n      // TODO: messages deleted (hard or soft) -- update pill counter.\n    } else if (what == 'upd') {\n      // upd - handled by the SDK. Explicitly ignoring here.\n    } else {\n      // TODO(gene): handle other types of notifications:\n      // * ua -- user agent changes (maybe display a pictogram for mobile/desktop).\n      console.info(\"Unsupported (yet) presence update:\" + what + \" in: \" + cont.topic);\n    }\n  }\n\n  tnMeSubsUpdated(unused) {\n    this.resetContactList();\n  }\n\n  // Merge search results and contact list to create a single flat\n  // list of known contacts for GroupManager to use.\n  static prepareSearchableContacts(chatList, foundContacts) {\n    const merged = {};\n\n    // For chatList topics merge only p2p topics and convert them to the\n    // same format as foundContacts.\n    for (const c of chatList) {\n      if (Tinode.isP2PTopicName(c.topic)) {\n          merged[c.topic] = {\n            user: c.topic,\n            updated: c.updated,\n            public: c.public,\n            private: c.private,\n            acs: c.acs\n          };\n      }\n    }\n\n    // Add all foundCountacts if they have not been added already.\n    for (const c of foundContacts) {\n      if (!merged[c.user]) {\n        merged[c.user] = c;\n      }\n    }\n\n    return Object.values(merged);\n  }\n\n  resetContactList() {\n    const newState = {\n      chatList: []\n    };\n\n    if (!this.state.ready) {\n      newState.ready = true;\n    }\n\n    this.tinode.getMeTopic().contacts((c) => {\n      if (!c.topic && !c.user) {\n        // Contacts expect c.topic to be set.\n        c.topic = c.name;\n      }\n\n      newState.chatList.push(c);\n      if (this.state.topicSelected == c.topic) {\n        newState.topicSelectedOnline = c.online;\n        newState.topicSelectedAcs = c.acs;\n      }\n    });\n\n    const past = new Date(0);\n    newState.chatList.sort((a, b) => {\n      return (a.touched || past).getTime() - (b.touched || past).getTime();\n    });\n\n    // Merge search results and chat list.\n    newState.searchableContacts = TinodeWeb.prepareSearchableContacts(newState.chatList, this.state.searchResults);\n    this.setState(newState);\n  }\n\n  // Sending \"received\" notifications\n  tnData(data) {\n    const topic = this.tinode.getTopic(data.topic);\n    if (topic.msgStatus(data, true) >= Tinode.MESSAGE_STATUS_SENT && data.from != this.state.myUserId) {\n      clearTimeout(this.receivedTimer);\n      this.receivedTimer = setTimeout(() => {\n        this.receivedTimer = undefined;\n        topic.noteRecv(data.seq);\n      }, RECEIVED_DELAY);\n    }\n  }\n\n  /* Fnd topic: find contacts by tokens */\n  tnInitFind() {\n    const fnd = this.tinode.getFndTopic();\n    fnd.onSubsUpdated = this.tnFndSubsUpdated;\n    if (fnd.isSubscribed()) {\n      this.tnFndSubsUpdated();\n    } else {\n      fnd.subscribe(fnd.startMetaQuery().withSub().build()).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  tnFndSubsUpdated() {\n    const foundContacts = [];\n    // Don't attempt to create P2P topics which already exist. Server will reject the duplicates.\n    this.tinode.getFndTopic().contacts((s) => {\n      foundContacts.push(s);\n    });\n    this.setState({\n      searchResults: foundContacts,\n      searchableContacts: TinodeWeb.prepareSearchableContacts(this.state.chatList, foundContacts)\n    });\n  }\n\n  /** Called when the user enters a contact into the contact search field in the NewAccount panel\n    @param query {Array} is an array of contacts to search for\n   */\n  handleSearchContacts(query) {\n    const fnd = this.tinode.getFndTopic();\n    fnd.setMeta({desc: {public: query}}).then((ctrl) => {\n      return fnd.getMeta(fnd.startMetaQuery().withSub().build());\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  // User clicked on a contact in the side panel or deleted a contact.\n  handleTopicSelected(topicName) {\n    // Clear newTopicParams after use.\n    if (this.state.newTopicParams && this.state.newTopicParams._topicName != topicName) {\n      this.setState({\n        newTopicParams: null\n      });\n    }\n\n    if (topicName) {\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'topic-view',\n        infoPanel: undefined\n      });\n      // Different contact selected.\n      if (this.state.topicSelected != topicName) {\n        this.setState({\n          topicSelectedOnline: this.tinode.isTopicOnline(topicName),\n          topicSelectedAcs: this.tinode.getTopicAccessMode(topicName),\n          forwardMessage: null\n        });\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', topicName));\n      }\n    } else {\n      // Currently selected contact deleted\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'sidepanel',\n        topicSelectedOnline: false,\n        topicSelectedAcs: null,\n        infoPanel: undefined,\n        forwardMessage: null\n      });\n\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic('', null));\n    }\n  }\n\n  // In mobile view user requested to show sidepanel\n  handleHideMessagesView() {\n    this.setState({\n      mobilePanel: 'sidepanel'\n    });\n    HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, null));\n  }\n\n  // User is sending a message, either plain text or a drafty object, possibly\n  // with attachments.\n  //  - msg - Drafty message with content\n  //  - promise - Promise to be resolved when the upload is completed\n  //  - uploader - for tracking progress\n  //  - head - head dictionary to be attached to the message\n  handleSendMessage(msg, promise, uploader, head) {\n    const topic = this.tinode.getTopic(this.state.topicSelected);\n    this.sendMessageToTopic(topic, msg, promise, uploader, head);\n  }\n\n  sendMessageToTopic(topic, msg, promise, uploader, head) {\n    msg = topic.createMessage(msg, false);\n    // The uploader is used to show progress.\n    msg._uploader = uploader;\n\n    if (head) {\n      msg.head = Object.assign(msg.head || {}, head);\n    }\n\n    if (!topic.isSubscribed()) {\n      // Topic is not subscribed yet. Subscribe.\n      if (!promise) {\n        promise = Promise.resolve();\n      }\n      promise = promise\n        .then(() => topic.subscribe())\n        .then(() => {\n          // If there are unsent messages, try sending them now.\n          topic.queuedMessages((pub) => {\n            if (!pub._sending && topic.isSubscribed()) {\n              this.sendMessage(pub);\n            }\n          });\n        });\n    }\n\n    if (promise) {\n      promise = promise.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n\n    topic.publishDraft(msg, promise)\n      .then((ctrl) => {\n        if (topic.isArchived()) {\n          return topic.archive(false);\n        }\n      })\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleNewChatInvitation(topicName, action) {\n    const topic = this.tinode.getTopic(topicName);\n    let response = null;\n    switch (action) {\n      case 'accept':\n        // Accept given permissions.\n        const mode = topic.getAccessMode().getGiven();\n        response = topic.setMeta({sub: {mode: mode}});\n        if (topic.isP2PType()) {\n          // For P2P topics change 'given' permission of the peer too.\n          // In p2p topics the other user has the same name as the topic.\n          response = response.then((ctrl) => {\n            topic.setMeta({sub: {user: topicName, mode: mode}});\n          });\n        }\n        break;\n      case 'delete':\n        // Ignore invitation by deleting it.\n        response = topic.delTopic(true);\n        break;\n      case 'block':\n        // Ban the topic making futher invites impossible.\n        // Just self-ban.\n        const am = topic.getAccessMode().updateWant('-JP').getWant();\n        response = topic.setMeta({sub: {mode: am}}).then((ctrl) => {\n          return this.handleTopicSelected(null);\n        });\n        break;\n      default:\n        console.warn(\"Unknown invitation action\", '\"' + action + '\"\"');\n    }\n\n    if (response != null) {\n      response.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // User chose a Sign Up menu item.\n  handleNewAccount() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, 'register'));\n  }\n\n  // Actual registration of a new account.\n  handleNewAccountRequest(login_, password_, public_, cred_, tags_) {\n    // Clear old error, if any.\n    this.handleError();\n\n    this.tinode.connect(this.state.serverAddress)\n      .then(() => {\n        return this.tinode.createAccountBasic(login_, password_,\n          {public: public_, tags: tags_, cred: Tinode.credential(cred_)});\n      }).then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text == 'validate credentials') {\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful(this);\n        }\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleToggleIncognitoMode(on) {\n    // Make state undefined.\n    this.setState({incognitoMode: null});\n\n    const me = this.tinode.getMeTopic();\n    const am = me.getAccessMode().updateWant(on ? '-P' : '+P').getWant();\n    me.setMeta({sub: {mode: am}}).catch((err) => {\n      // Request failed, keep existing state.\n      this.setState({incognitoMode: !on});\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleUpdateAccountTagsRequest(tags) {\n    this.tinode.getMeTopic().setMeta({tags: tags})\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  // User chose Settings menu item.\n  handleSettings() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'edit' : 'settings'));\n  }\n\n  // User updated global parameters.\n  handleGlobalSettings(settings) {\n    const serverAddress = settings.serverAddress || this.state.serverAddress;\n    const transport = settings.transport || this.state.transport;\n    if (this.tinode) {\n      this.tinode.clearStorage();\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.tinode = TinodeWeb.tnSetup(serverAddress, transport, this.props.intl.locale,\n      LocalStorageUtil.getObject('keep-logged-in'));\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n\n    this.setState({\n      serverAddress: serverAddress,\n      transport: transport\n    });\n    LocalStorageUtil.setObject('settings', {\n      serverAddress: serverAddress,\n      transport: transport\n    });\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, ''));\n  }\n\n  // User chose 'Archived chats'.\n  handleShowArchive() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'archive' : ''));\n  }\n\n  // User viewes 'Blocked chats'.\n  handleShowBlocked() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'blocked' : ''));\n  }\n\n  togglePushToken(enabled) {\n    if (enabled) {\n      this.setState({desktopAlerts: null});\n      if (!this.state.firebaseToken) {\n        const fcm = this.fbPush ?\n          Promise.resolve() :\n          this.initFCMessaging();\n        fcm.then(() => {\n          return this.fbPush.requestPermission();\n        }).then(() => {\n          this.requestPushToken();\n        }).catch((err) => {\n          console.error(\"Failed to get notification permission.\", err);\n          this.handleError(err.message, 'err');\n          this.setState({desktopAlerts: false, firebaseToken: null});\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        });\n      } else {\n        this.setState({desktopAlerts: true});\n        if (LocalStorageUtil.getObject('keep-logged-in')) {\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n        }\n      }\n    } else if (this.state.firebaseToken && this.fbPush) {\n      this.fbPush.deleteToken(this.state.firebaseToken).catch((err) => {\n        console.error(\"Unable to delete token.\", err);\n      }).finally(() => {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        localStorage.removeItem('firebase-token');\n        this.setState({desktopAlerts: false, firebaseToken: null});\n        // Inform the server that the token was deleted.\n        this.tinode.setDeviceToken(null);\n      });\n    } else {\n      this.setState({desktopAlerts: false, firebaseToken: null});\n      LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n    }\n  }\n\n  requestPushToken() {\n    this.fbPush.getToken().then((refreshedToken) => {\n      const persist = LocalStorageUtil.getObject('keep-logged-in');\n      if (refreshedToken != this.state.firebaseToken) {\n        this.tinode.setDeviceToken(refreshedToken);\n        if (persist) {\n          LocalStorageUtil.setObject('firebase-token', refreshedToken);\n        }\n      }\n      this.setState({firebaseToken: refreshedToken, desktopAlerts: true});\n      if (persist) {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n      }\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n      console.error(\"Failed to retrieve firebase token\", err);\n    });\n  }\n\n  handleToggleMessageSounds(enabled) {\n    this.setState({messageSounds: enabled});\n    LocalStorageUtil.updateObject('settings', {\n      messageSoundsOff: !enabled\n    });\n  }\n\n  handleCredAdd(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.setMeta({cred: {meth: method, val: value}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredDelete(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.delCredential(method, value).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredConfirm(method, response) {\n    this.handleCredentialsRequest({cred: [method]});\n  }\n\n  // User clicked Cancel button in Setting or Sign Up panel.\n  handleSidepanelCancel() {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    let path = '';\n    if (['security','support','general','notif'].includes(parsed.path[0])) {\n      path = 'edit';\n    } else if ('crop' == parsed.path[0]) {\n      path = 'general';\n    } else if ('blocked' == parsed.path[0]) {\n      path = 'security';\n    } else if (this.state.myUserId) {\n      path = 'contacts';\n    }\n    parsed.path[0] = path;\n    if (parsed.params) {\n      delete parsed.params.code;\n      delete parsed.params.method;\n      delete parsed.params.tab;\n      delete parsed.params.scheme;\n      delete parsed.params.token;\n    }\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n    this.setState({errorText: '', errorLevel: null});\n  }\n\n  // Sidepanel navigator. No need to bind to 'this'.\n  basicNavigator(hash) {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, hash));\n  }\n\n  // Topic info navigator. No need to bind to 'this'.\n  infoNavigator(hash) {\n    HashNavigation.navigateTo(HashNavigation.setUrlInfoPanel(window.location.hash, hash));\n  }\n\n  // Request to start a topic, new or selected from search results, or \"by ID\".\n  handleStartTopicRequest(topicName, newTopicParams, isChannel) {\n    // Check if topic is indeed new. If not, launch it.\n    if (topicName && this.tinode.isTopicCached(topicName)) {\n      this.handleTopicSelected(topicName);\n      return;\n    }\n\n    const params = {};\n    if (Tinode.isP2PTopicName(topicName)) {\n      // Because we are initialing the subscription, set 'want' to all permissions.\n      params.sub = {mode: DEFAULT_P2P_ACCESS_MODE};\n      // Give the other user all permissions too.\n      params.desc = {defacs: {auth: DEFAULT_P2P_ACCESS_MODE}};\n    } else {\n      topicName = topicName || this.tinode.newGroupTopicName(isChannel);\n      if (newTopicParams) {\n        params.desc = {public: newTopicParams.public, private: {comment: newTopicParams.private}};\n        params.tags = newTopicParams.tags;\n      }\n    }\n    params._topicName = topicName;\n    this.setState({newTopicParams: params}, () => {this.handleTopicSelected(topicName)});\n  }\n\n  // New topic was created, here is the new topic name.\n  handleNewTopicCreated(oldName, newName) {\n    if (this.state.topicSelected == oldName && oldName != newName) {\n      // If the current URl contains the old topic name, replace it with new.\n      // Update the name of the selected topic first so the navigator doen't clear\n      // the state.\n      this.setState({topicSelected: newName}, () => {\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', newName));\n      });\n    }\n  }\n\n  handleTopicUpdateRequest(topicName, pub, priv, defacs) {\n    this.handleError();\n\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const params = {};\n      let attachments;\n      if (pub) {\n        if (pub.photo) {\n          if (pub.photo.ref && pub.photo.ref != Tinode.DEL_CHAR) {\n            attachments = [pub.photo.ref];\n          } else if (!pub.photo.data || pub.photo.data == Tinode.DEL_CHAR) {\n            pub.photo = Tinode.DEL_CHAR;\n          }\n        }\n        params.public = pub;\n      }\n\n      if (typeof priv == 'string') {\n        params.private = (priv === Tinode.DEL_CHAR) ?\n          Tinode.DEL_CHAR : {comment: priv};\n      }\n      if (defacs) {\n        params.defacs = defacs;\n      }\n      topic.setMeta({desc: params, attachments: attachments}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleUnarchive(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      topic.archive(false);\n    }\n  }\n\n  handleUpdatePasswordRequest(password)  {\n    this.handleError();\n\n    if (password) {\n      this.tinode.updateAccountBasic(null, this.tinode.getCurrentLogin(), password).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleChangePermissions(topicName, mode, uid) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const am = topic.getAccessMode();\n      if (uid) {\n        am.updateGiven(mode);\n        mode = am.getGiven();\n      } else {\n        am.updateWant(mode);\n        mode = am.getWant();\n      }\n      topic.setMeta({sub: {user: uid, mode: mode}}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleTagsUpdateRequest(topicName, tags) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      topic.setMeta({tags: tags}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleLogout() {\n    updateFavicon(0);\n\n    // Remove stored data.\n    localStorage.removeItem('auth-token');\n    localStorage.removeItem('firebase-token');\n    localStorage.removeItem('settings');\n    if (this.state.firebaseToken) {\n      this.fbPush.deleteToken(this.state.firebaseToken)\n    }\n\n    clearInterval(this.reconnectCountdown);\n\n    let cleared;\n    if (this.tinode) {\n      cleared = this.tinode.clearStorage();\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    } else {\n      cleared = Promose.resolve();\n    }\n    this.setState(this.getBlankState());\n\n    cleared.then(() => {\n      this.tinode = TinodeWeb.tnSetup(this.state.serverAddress,\n        this.state.transport, this.props.intl.locale, LocalStorageUtil.getObject('keep-logged-in'), () => {\n          this.tinode.onConnect = this.handleConnected;\n          this.tinode.onDisconnect = this.handleDisconnect;\n          this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n          HashNavigation.navigateTo('');\n        })\n    });\n  }\n\n  handleDeleteAccount() {\n    this.tinode.delCurrentUser(true).then((ctrl) => {\n      this.handleLogout();\n    });\n  }\n\n  handleDeleteTopicRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Request to hard-delete topic.\n    topic.delTopic(true).then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleDeleteMessagesRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Request hard-delete all messages.\n    topic.delMessagesAll(true).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleLeaveUnsubRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.leave(true).then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleBlockTopicRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleReportTopic(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Publish spam report.\n    this.tinode.publish(Tinode.TOPIC_SYS, Tinode.Drafty.attachJSON(null, {\n      'action': 'report',\n      'target': topicName\n    }));\n\n    // Remove J and P permissions.\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleShowContextMenu(params, menuItems) {\n    this.setState({\n      contextMenuVisible: true,\n      contextMenuClickAt: {x: params.x, y: params.y},\n      contextMenuParams: params,\n      contextMenuItems: menuItems || this.defaultTopicContextMenu(params.topicName),\n      contextMenuBounds: this.selfRef.current.getBoundingClientRect()\n    });\n  }\n\n  //\n  handleShowForwardDialog(params) {\n    if (this.state.sidePanelSelected == 'newtpk') {\n      // If the Find panel is active, close it.\n      this.handleSidepanelCancel();\n    }\n    const header = '➦ ' + params.userName;\n    const content = typeof params.content == 'string' ?\n            Tinode.Drafty.init(params.content) : Tinode.Drafty.forwardedContent(params.content);\n    const preview = Tinode.Drafty.preview(content, FORWARDED_PREVIEW_LENGTH,\n                                          undefined, params.forwarded != null);\n    const msg = Tinode.Drafty.append(\n        Tinode.Drafty.appendLineBreak(\n            Tinode.Drafty.mention(header, params.userFrom)),\n        content);\n\n    const msgPreview = Tinode.Drafty.quote(header, params.userFrom, preview);\n    const head = {\n      forwarded: params.topicName + ':' + params.seq\n    };\n    this.setState({\n      forwardDialogVisible: true,\n      forwardMessage: { head: head, msg: msg, preview: msgPreview }\n    });\n  }\n\n  defaultTopicContextMenu(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n\n    let muted = false, blocked = false, self_blocked = false, subscribed = false, deleter = false, archived = false;\n    if (topic) {\n      subscribed = topic.isSubscribed();\n      archived = topic.isArchived();\n\n      const acs = topic.getAccessMode();\n      if (acs) {\n        muted = acs.isMuted();\n        blocked = !acs.isJoiner();\n        self_blocked = !acs.isJoiner('want');\n        deleter = acs.isDeleter();\n      }\n    }\n\n    return [\n      subscribed ? {\n        title: this.props.intl.formatMessage(messages.menu_item_info),\n        handler: this.handleShowInfoView\n      } : null,\n      subscribed ? 'messages_clear' : null,\n      subscribed && deleter ? 'messages_clear_hard' : null,\n      muted ? (blocked ? null : 'topic_unmute') : 'topic_mute',\n      self_blocked ? 'topic_unblock' : 'topic_block',\n      archived ? 'topic_restore' : 'topic_archive',\n      'topic_delete'\n    ];\n  }\n\n  handleHideContextMenu() {\n    this.setState({\n      contextMenuVisible: false,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuBounds: null\n    });\n  }\n\n  handleHideForwardDialog(keepForwardedMessage) {\n    this.setState({\n      forwardDialogVisible: false,\n      forwardMessage: keepForwardedMessage ? this.state.forwardMessage : null\n    });\n  }\n\n  handleContextMenuAction(action, promise, params) {\n    if (action == 'topic_archive') {\n      if (promise && params.topicName && params.topicName == this.state.topicSelected) {\n        promise.then(() => {\n          this.handleTopicSelected(null);\n        });\n      }\n    } else if (action == 'menu_item_forward') {\n      this.handleShowForwardDialog(params);\n    }\n  }\n\n  handleShowAlert(title, content, onConfirm, confirmText, onReject, rejectText) {\n    this.setState({\n      alertVisible: true,\n      alertParams: {\n        title: title,\n        content: content,\n        onConfirm: onConfirm,\n        confirm: confirmText,\n        onReject: onReject,\n        reject: rejectText\n      }\n    });\n  }\n\n  handleShowInfoView() {\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'info', 'info'));\n    this.setState({infoPanel: 'info'});\n  }\n\n  handleMemberUpdateRequest(topicName, added, removed) {\n    if (!topicName) {\n      return;\n    }\n\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    if (added && added.length > 0) {\n      added.map((uid) => {\n        topic.invite(uid, null).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n\n    if (removed && removed.length > 0) {\n      removed.map((uid) => {\n        topic.delSubscription(uid).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n  }\n\n  handleValidateCredentialsRequest(cred, code) {\n    if (this.tinode.isAuthenticated()) {\n      const me = this.tinode.getMeTopic();\n      me.setMeta({cred: {meth: cred, resp: code}})\n        .then(() => {\n          HashNavigation.navigateTo('');\n        })\n        .catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n    } else {\n      this.setState({credMethod: cred, credCode: code});\n      this.doLogin(null, null, {meth: cred, resp: code});\n    }\n  }\n\n  handlePasswordResetRequest(method, value) {\n    // If already connected, connnect() will return a resolved promise.\n    return this.tinode.connect()\n      .then(() => {\n        return this.tinode.requestResetAuthSecret('basic', method, value);\n      })\n      .catch((err) => {\n        // Socket error\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleResetPassword(scheme, newPassword, token) {\n    token = base64ReEncode(token);\n    if (!token) {\n      this.handleError(this.props.intl.formatMessage(messages.invalid_security_token), 'err');\n    } else {\n      this.tinode.connect()\n        .then(() => {\n          return this.tinode.updateAccountBasic(null, null, newPassword, {token: token});\n        })\n        .then(() => {\n          HashNavigation.navigateTo('');\n        })\n        .catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"app-container\" ref={this.selfRef}>\n        {this.state.contextMenuVisible ?\n          <ContextMenu\n            tinode={this.tinode}\n            bounds={this.state.contextMenuBounds}\n            clickAt={this.state.contextMenuClickAt}\n            params={this.state.contextMenuParams}\n            items={this.state.contextMenuItems}\n            hide={this.handleHideContextMenu}\n            onShowAlert={this.handleShowAlert}\n            onAction={this.handleContextMenuAction}\n            onTopicRemoved={(topicName) => {\n              if (topicName == this.state.topicSelected) {\n                this.handleTopicSelected(null);\n              }\n            }}\n            onError={this.handleError} />\n          :\n          null\n        }\n        {this.state.forwardDialogVisible ?\n          <ForwardDialog\n            tinode={this.tinode}\n            contacts={this.state.chatList}\n            topicSelected={this.state.topicSelected}\n            myUserId={this.state.myUserId}\n\n            hide={this.handleHideForwardDialog}\n            onInitFind={this.tnInitFind}\n            searchResults={this.state.searchResults}\n            onSearchContacts={this.handleSearchContacts}\n            onTopicSelected={this.handleStartTopicRequest}\n          />\n          :\n          null\n        }\n        <Alert\n          visible={this.state.alertVisible}\n          title={this.state.alertParams.title}\n          content={this.state.alertParams.content}\n          onReject={this.state.alertParams.onReject ? (() => { this.setState({alertVisible: false}); }) : null}\n          reject={this.state.alertParams.reject}\n          onConfirm={() => { this.setState({alertVisible: false}); this.state.alertParams.onConfirm(); }}\n          confirm={this.state.alertParams.confirm}\n          />\n        <SidepanelView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          displayMobile={this.state.displayMobile}\n          hideSelf={this.state.displayMobile && this.state.mobilePanel !== 'sidepanel'}\n          state={this.state.sidePanelSelected}\n          title={this.state.sidePanelTitle}\n          avatar={this.state.sidePanelAvatar}\n          trustedBadges={this.state.myTrustedBadges}\n          login={this.state.login}\n          persist={this.state.persist}\n          myUserId={this.state.myUserId}\n          loginDisabled={this.state.loginDisabled}\n          loadSpinnerVisible={this.state.loadSpinnerVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          topicSelected={this.state.topicSelected}\n          chatList={this.state.chatList}\n          credMethod={this.state.credMethod}\n          credCode={this.state.credCode}\n\n          transport={this.state.transport}\n          messageSounds={this.state.messageSounds}\n          desktopAlerts={this.state.desktopAlerts}\n          desktopAlertsEnabled={this.state.desktopAlertsEnabled}\n          incognitoMode={this.state.incognitoMode}\n          serverAddress={this.state.serverAddress}\n          serverVersion={this.state.serverVersion}\n\n          onGlobalSettings={this.handleGlobalSettings}\n          onSignUp={this.handleNewAccount}\n          onSettings={this.handleSettings}\n          onNavigate={this.basicNavigator}\n          onLoginRequest={this.handleLoginRequest}\n          onPersistenceChange={this.handlePersistenceChange}\n          onCreateAccount={this.handleNewAccountRequest}\n          onUpdateAccountDesc={this.handleTopicUpdateRequest}\n          onUpdatePassword={this.handleUpdatePasswordRequest}\n          onUpdateAccountTags={this.handleUpdateAccountTagsRequest}\n          onTogglePushNotifications={this.togglePushToken}\n          onToggleMessageSounds={this.handleToggleMessageSounds}\n          onToggleIncognitoMode={this.handleToggleIncognitoMode}\n          onCredAdd={this.handleCredAdd}\n          onCredDelete={this.handleCredDelete}\n          onCredConfirm={this.handleCredConfirm}\n          onTopicSelected={this.handleTopicSelected}\n          onCreateTopic={this.handleStartTopicRequest}\n          onLogout={this.handleLogout}\n          onDeleteAccount={this.handleDeleteAccount}\n          onShowAlert={this.handleShowAlert}\n          onCancel={this.handleSidepanelCancel}\n          onError={this.handleError}\n          onValidateCredentials={this.handleValidateCredentialsRequest}\n          onPasswordResetRequest={this.handlePasswordResetRequest}\n          onResetPassword={this.handleResetPassword}\n          onShowArchive={this.handleShowArchive}\n          onShowBlocked={this.handleShowBlocked}\n\n          onInitFind={this.tnInitFind}\n          searchResults={this.state.searchResults}\n          onSearchContacts={this.handleSearchContacts}\n\n          showContextMenu={this.handleShowContextMenu} />\n\n        <MessagesView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          ready={this.state.ready}\n          online={this.state.topicSelectedOnline}\n          acs={this.state.topicSelectedAcs}\n          displayMobile={this.state.displayMobile}\n          viewportWidth={this.state.viewportWidth}\n          viewportHeight={this.state.viewportHeight}\n          hideSelf={this.state.displayMobile &&\n            (this.state.mobilePanel !== 'topic-view' || this.state.infoPanel)}\n          topic={this.state.topicSelected}\n          myUserId={this.state.myUserId}\n          // User public.fn.\n          myUserName={this.state.sidePanelTitle}\n          serverVersion={this.state.serverVersion}\n          serverAddress={this.state.serverAddress}\n          applicationVisible={this.state.applicationVisible}\n\n          forwardMessage={this.state.forwardMessage}\n          onCancelForwardMessage={this.handleHideForwardDialog}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          newTopicParams={this.state.newTopicParams}\n\n          onHideMessagesView={this.handleHideMessagesView}\n          onData={this.tnData}\n          onError={this.handleError}\n          onNewTopicCreated={this.handleNewTopicCreated}\n          showContextMenu={this.handleShowContextMenu}\n          onChangePermissions={this.handleChangePermissions}\n          onNewChat={this.handleNewChatInvitation}\n          sendMessage={this.handleSendMessage} />\n\n        {this.state.infoPanel ?\n          <InfoView\n            tinode={this.tinode}\n            connected={this.state.connected}\n            displayMobile={this.state.displayMobile}\n            topic={this.state.topicSelected}\n            searchableContacts={this.state.searchableContacts}\n            myUserId={this.state.myUserId}\n            panel={this.state.infoPanel}\n\n            errorText={this.state.errorText}\n            errorLevel={this.state.errorLevel}\n            errorAction={this.state.errorAction}\n            errorActionText={this.state.errorActionText}\n\n            onNavigate={this.infoNavigator}\n            onTopicDescUpdateRequest={this.handleTopicUpdateRequest}\n            onShowAlert={this.handleShowAlert}\n            onChangePermissions={this.handleChangePermissions}\n            onMemberUpdateRequest={this.handleMemberUpdateRequest}\n            onDeleteTopic={this.handleDeleteTopicRequest}\n            onDeleteMessages={this.handleDeleteMessagesRequest}\n            onLeaveTopic={this.handleLeaveUnsubRequest}\n            onBlockTopic={this.handleBlockTopicRequest}\n            onReportTopic={this.handleReportTopic}\n            onAddMember={this.handleManageGroupMembers}\n            onTopicTagsUpdateRequest={this.handleTagsUpdateRequest}\n            onTopicUnArchive={this.handleUnarchive}\n            onInitFind={this.tnInitFind}\n            onError={this.handleError}\n\n            showContextMenu={this.handleShowContextMenu}\n            />\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(TinodeWeb);\n","// Put all packages together.\n// Used to generate umd/index.prod.js\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { IntlProvider } from 'react-intl';\n\nimport allMessages from './messages.json';\nimport TinodeWeb from './views/tinode-web.jsx';\nimport HashNavigation from './lib/navigation.js';\n\n// Detect human language to use in the UI:\n//  Check parameters from URL hash #?hl=ru, then browser, then use 'en' as a fallback.\nconst { params } = HashNavigation.parseUrlHash(window.location.hash);\nconst language = (params && params.hl) ||\n  (navigator.languages && navigator.languages[0]) ||\n  navigator.language ||\n  navigator.userLanguage ||\n  'en';\n\n// Get the base language 'en' from a more specific 'en_GB' or 'en-US' as a partial fallback.\nconst baseLanguage = language.toLowerCase().split(/[-_]/)[0];\n\n// Try the full locale first, then the locale without the region code, fallback to 'en'.\nconst htmlLang = allMessages[language] ? langauge : allMessages[baseLanguage] ? baseLanguage : 'en';\nconst messages = allMessages[htmlLang];\n\n// Set lang attribute of the HTML element: <html lang=\"XX\">\ndocument.getElementsByTagName('html')[0].setAttribute('lang', htmlLang);\n\nReactDOM.render(\n  <React.StrictMode>\n    <IntlProvider locale={language} messages={messages} textComponent={React.Fragment}>\n      <TinodeWeb />\n    </IntlProvider>\n  </React.StrictMode>,\n  document.getElementById('mountPoint')\n);\n","// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// startup\n// Load entry module and return exports\n// This entry module doesn't tell about it's top-level declarations so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[353](0, __webpack_exports__, __webpack_require__);\n"],"names":["React","ReactDOM","ReactIntl","firebase","messaging","Tinode","Alert","render","this","props","visible","className","title","content","onReject","onClick","reject","FormattedMessage","id","defaultMessage","onConfirm","confirm","PACKAGE_VERSION","APP_NAME","KNOWN_HOSTS","hosted","local","DEFAULT_HOST","KEYPRESS_DELAY","DEFAULT_P2P_ACCESS_MODE","REM_SIZE","AVATAR_SIZE","MAX_INBAND_ATTACHMENT_SIZE","MAX_EXTERN_ATTACHMENT_SIZE","IMAGE_THUMBNAIL_DIM","MAX_TITLE_LENGTH","MAX_TOPIC_DESCRIPTION_LENGTH","messages","defineMessages","info","clear_messages","clear_for_all","delete","delete_for_all","send_retry","mute","unmute","reply","forward","topic_delete","topic_delete_warning","delete_messages_warning","unblock","block","topic_block_warning","member_delete","archive","unarchive","edit_permissions","clear_messages_warning","ContextMenu","constructor","super","selfRef","formatMessage","intl","handlePageClick","bind","handleEscapeKey","handleClick","MenuItems","handler","params","errorHandler","onShowAlert","deleteMessages","message","retryMessage","replyToMessage","topicPermissionSetter","then","ctrl","onTopicRemoved","topicName","topic","tinode","getTopic","delTopic","catch","err","console","log","user","delSubscription","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","e","current","contains","target","preventDefault","stopPropagation","hide","keyCode","item","items","currentTarget","dataset","onAction","onError","error","all","hard","cancelSend","seq","delMessagesAll","delMessagesList","flushMessage","msg","createMessage","publishDraft","mode","result","updateMode","pickReply","userFrom","userName","menu","count","map","push","key","vSize","length","position","left","bounds","right","clickAt","x","top","bottom","y","style","ref","injectIntl","icon_mapping","ContactBadges","badges","b","color","icon","name","bytesToHumanSize","bytes","sizes","bucket","Math","min","floor","log2","pow","round","toFixed","shortenFileName","filename","maxLength","slice","idToColorClass","light","fg","userId","abs","value","hash","i","charCodeAt","stringToColorHash","updateFavicon","oldIcon","getElementById","head","getElementsByTagName","newIcon","createElement","type","rel","href","removeChild","appendChild","theCard","fn","imageUrl","imageMimeType","note","card","trim","mimeType","matches","exec","photo","data","substring","indexOf","arrayEqual","a","Array","isArray","sort","l","sanitizeUrl","url","allowedSchemes","replace","test","schemes","join","RegExp","sanitizeImageUrl","sanitizedUrl","deliveryMarker","received","cancelablePromise","promise","hasCanceled","Error","Promise","resolve","isCanceled","cancel","LetterTile","avatar","isGroup","iconColor","letter","charAt","deleted","authorizeURL","alt","src","onerror","UnreadBadge","LazyImage","state","Object","assign","padding","whenDone","setState","componentDidUpdate","prevProps","FileProgress","width","progress","onCancel","UploadingImage","onCancelUpload","SUPPORTED_IMAGE_FORMATS","MIME_EXTENSIONS","makeImageUrl","startsWith","fitImageSize","height","maxWidth","maxHeight","forceSquare","scale","size","dstWidth","dstHeight","srcWidth","srcHeight","xoffset","yoffset","fileNameForMime","fname","mime","idx","ext","at","lastIndexOf","imageScaled","fileOrBlob","maxSize","img","Image","crossOrigin","onload","async","URL","revokeObjectURL","dim","canvas","ctx","getContext","imageSmoothingEnabled","drawImage","includes","blob","toBlob","clearRect","createObjectURL","blobToBase64","reader","FileReader","evt","bits","split","readAsDataURL","drafty_form","drafty_attachment","drafty_image","handleImageData","el","attr","viewportWidth","minWidth","minHeight","Drafty","max","onImagePreview","loading","fullFormatter","values","stack","quoteFormatter","call","onFormButtonClick","inner","child","undefined","val","onQuoteClick","concat","previewFormatter","inlineImageAttr","quoteImage","str","bin","atob","buf","ArrayBuffer","arr","Uint8Array","Blob","base64ToBlob","fetch","ok","status","statusText","scaled","b64","replyFormatter","loadedPromise","Contact","handleContextClick","onSelected","index","showContextMenu","pageY","pageX","online","now","icon_badges","preview","isVerified","isStaff","isDangerous","acs","showMode","getMode","isMuted","isJoiner","marker","titleClass","showCheckmark","selected","showOnline","isChannel","unread","small","comment","ContactAction","action","badge_you","badge_owner","ContactList","topicSelected","contactNodes","contactsCount","contacts","c","filterFunc","filter","filterOn","private","toLowerCase","public","myUserId","isOwner","forwarded","deliveryStatus","latestMessage","_status","msgStatus","substr","showUnread","connected","onTopicSelected","trusted","verified","staff","danger","_deleted","noScroll","dangerouslySetInnerHTML","__html","emptyListMessage","SearchContacts","edited","search","handleSearchChange","handleSearch","handleClear","handleKeyDown","onSearchContacts","query","placeholder","onChange","onKeyDown","required","autoFocus","ForwardDialog","handleClose","handleSearchContacts","handleContactSelected","onInitFind","uid","searchResults","isWriter","desription","search_placeholder","not_found_placeholder","LoadSpinner","large","clear","centered","show","AvatarUpload","source","handleFileReceived","image","files","onImageUpdated","randId","random","readOnly","accept","htmlFor","uploading","badge_verified","badge_staff","badge_danger","BadgeList","trustedBadges","CheckBox","handleChange","checked","MenuCancel","ErrorPanel","level","onClearError","warn","text","whiteSpace","actionText","Chip","handleCancel","invalid","noAvatar","ChipInput","deriveStateFromProps","input","focused","handleTextInput","removeChipAt","handleChipCancel","handleFocusGained","handleFocusLost","chips","prompt","sortedChips","sortChips","staticMembers","chipIndex","indexChips","prevState","keep","normal","removed","onChipRemoved","onFocusLost","onEnter","avatarDisabled","tabIndex","onFocus","onBlur","no_contacts","contacts_not_found_short","GroupManager","members","indexMembers","keepInitialMembers","requiredMember","contactFilter","noContactsMessage","selectedContacts","handleMemberRemoved","handleContactFilter","handleSubmit","m","delta","present","keepInitial","stat","sel","splice","instance","added","keys","k","onSubmit","doContactFiltering","joiner","writer","preser","approver","sharer","deleter","owner","PermissionsEditor","names","skip","compare","userTitle","userAvatar","modeTitle","compareTitle","Cropper","panX","panY","originX","originY","zoom","minZoom","maxZoom","overlay","cutout","boundingBox","imageWidth","imageHeight","mouseX","mouseY","prevDistance","cutoutRect","bBoxRect","initScaling","onZoom","handleZoom","mouseDown","mouseUp","mouseMove","mouseTouch","positionAll","translate","passive","getBoundingClientRect","currPan","nextDiff","imgRect","imgLeft","imgRight","coLeft","coRight","imgTop","imgBottom","coTop","coBottom","touches","window","body","dX","dY","checkBound","touch0","touch1","distance","sqrt","t3d","orig","transform","transformOrigin","onLoad","step","AvatarCrop","objURL","VisiblePassword","handleVisibility","handeTextChange","handleEditingFinished","onFinished","setTimeout","activeElement","autoComplete","InPlaceEdit","active","initialValue","handleStartEditing","handlePasswordFinished","newValue","focus","event","checkValidity","spanText","spanClass","multiline","element","rows","TagManager","tags","tagInput","activated","handleTagInput","handleAddTag","handleRemoveTag","nextProps","last","tag","maxTagCount","getServerLimit","onTagsChanged","minTagLength","maxTagLength","add_tags_prompt","TopicDescEdit","getAccessMode","isMe","fullName","description","newAvatar","newAvatarMime","previousOnTags","tnNewTags","handleFullNameUpdate","handleImageUpdated","handleAvatarCropped","handlePrivateUpdate","handleDescriptionUpdate","uploadAvatar","handleAvatarCropCancel","handleTagsUpdated","onTagsUpdated","onUpdateTopicDesc","desc","readyToUpload","uploader","getLargeFileHelper","upload","finally","du","onUpdateTags","editable","full_name_placeholder","group_name_placeholder","private_placeholder","title_tag_manager","TopicCommon","credentials","getCredentials","addCredActive","addCredInvalid","newCred","previousTagsUpdated","tnCredsUpdated","handleCredChange","handleCredKeyDown","handleCredEntered","onCredsUpdated","getType","creds","method","asPhone","asEmail","onCredAdd","onTopicTagsUpdateRequest","cred","meth","done","onCredConfirm","onCredDelete","delete_messages","leave_chat","leave_chat_warning","block_contact","block_contact_warning","report_chat","report_chat_warning","other_user","TopicSecurity","handleDeleteTopic","handleDeleteMessages","handleLeave","handleBlock","handleReport","onDeleteTopic","onDeleteMessages","onLeaveTopic","onBlockTopic","onReportTopic","channel","groupTopic","onLaunchPermissionsEditor","access","auth","anon","modeGiven2","general","security","crop","perm_want","perm_given","perm_auth","perm_anon","perm_user","_clip","InfoView","admin","muted","address","selectedContact","modeGiven","modeWant","modeWant2","contactList","previousMetaDesc","previousSubsUpdated","resetSubs","resetDesc","resetTags","onMetaDesc","onSubsUpdated","handleImageChanged","handleMuted","handleUnarchive","handlePermissionsChanged","handleLaunchPermissionsEditor","handleShowAddMembers","handleMemberUpdateRequest","handleMemberSelected","handleContextMenu","handleBackNavigate","newState","user2","subscriber","getGiven","getWant","subscribers","sub","defacs","getDefaultAccess","entries","isAdmin","isSharer","isDeleter","archived","isArchived","isGroupType","isChannelType","chan","getMeta","startMetaQuery","withTags","build","subs","onTopicDescUpdate","ignored","onChangePermissions","ignored2","onTopicUnArchive","which","perm","onTopicDescUpdateRequest","userPermissionsEdited","toEdit","toCompare","toSkip","titleEdit","titleCompare","userPermissionsTitle","userPermissionsAvatar","editedPermissions","immutablePermissions","editedPermissionsTitle","immutablePermissionsTitle","editedPermissionsSkipped","onNavigate","onMemberUpdateRequest","args","panel","menuItems","view","shift","panelTitle","displayMobile","errorLevel","errorText","searchableContacts","no_members","Attachment","downloader","downloadFile","mimetype","download","loaded","helperFunc","isUrlRelative","downloadUrl","downloadWidget","message_sending","message_sending_failed","ReceivedMarker","timestamp","toLocaleTimeString","locale","timeStyle","BaseChatMessage","onProgress","handleProgress","handleImagePreview","handleFormButtonClick","handleCancelUpload","handleQuoteClick","formatterContext","resp","act","onFormResponse","MESSAGE_STATUS_FAILED","userIsWriter","MESSAGE_STATUS_DEL_RANGE","ratio","replyToSeq","sideClass","sequence","response","bubbleClass","fullDisplay","attachments","att","tree","innerRef","IntlChatMessage","messaging_disabled","type_new_message","add_image_caption","file_attachment_too_large","cannot_initiate_upload","SendMessage","quote","keypressTimestamp","Date","getTime","handlePasteEvent","handleAttachImage","handleAttachFile","handleSend","handleKeyPress","handleMessageTyping","formatReply","messageEditArea","disabled","onImageSuccess","onAttachmentSuccess","clipboardData","originalEvent","kind","file","getAsFile","filePasted","onAttachImage","onAttachFile","acceptBlank","noInput","onSendMessage","shiftKey","onKeyPress","messagePrompt","onCancelReply","attachImage","click","attachFile","display","DocPreview","handleSendDoc","caption","onClose","mimeToIcon","default","video","iconFromMime","GroupSubs","usersOnline","totalCount","countToShow","some","overflow","ImagePreview","handleSendImage","assignWidth","node","maxlength","Invitation","handleButtonAction","LogoView","version","serverVersion","serverAddress","MetaMessage","date","HashNavigation","parts","path","forEach","part","decodeURIComponent","location","hasOwnProperty","parsed","parseUrlHash","composeUrlHash","sidepanel","infopanel","online_now","last_seen","not_found","invalid_content","isUnconfirmed","ex","getExcessive","isPeerRestricted","ms","getMissing","MessagesView","getDerivedStateFromProps","leave","sendMessage","retrySend","sendImageAttachment","sendFileAttachment","sendKeyPress","subscribe","handleScrollReference","handleScrollEvent","handleDescChange","handleSubsUpdated","handleMessageUpdate","handleAllMessagesReceived","handleInfoReceipt","handleImagePostview","handleClosePreview","handleFormResponse","handleShowMessageContextMenu","handleNewChatAcceptance","handleEnablePeer","postReadNotification","clearNotificationQueue","goToLatestMessage","handlePickReply","handleCancelReply","chatMessageRefs","getOrCreateMessageRef","readNotificationQueue","readNotificationTimer","seqId","messagesScroller","messageCount","scrollPosition","scrollTop","scrollHeight","offsetHeight","onData","onAllMessagesReceived","onInfo","onPres","applicationVisible","ready","nextState","forwardMessage","docPreview","imagePreview","imagePostview","typingIndicator","fetchingMessages","showGoToLastButton","onlineSubs","peer","p2pPeerDesc","peerMessagingDisabled","latestClearId","maxClearId","isReader","readingBlocked","unconformed","unconfirmed","isSubscribed","newTopic","newTopicParams","_topicName","getQuery","withLaterDesc","withLaterSub","withLaterData","withLaterDel","setQuery","code","onNewTopicCreated","queuedMessages","pub","_sending","navigateTo","setUrlTopic","blankState","oldTopicName","isTopicCached","oldTopic","pos","msgHasMoreMessages","getMessagesPage","setInterval","clearInterval","n","sendAt","noteRead","setMilliseconds","getMilliseconds","clearTimeout","keyPressTimer","isNewMessage","from","what","forceUpdate","attachJSON","parse","searchParams","set","open","messageSpecificMenuItems","onNewChat","noteKeyPress","uploadCompletionPromise","append","sanitizeEntities","maxInbandAttachmentSize","urlPromise","fileToBase64","maxExternAttachmentSize","limit","insertImage","_tempPreview","appendLineBreak","found","findMessage","_cancelled","senderId","senderName","init","isValid","replyContent","wrapInto","onCancelForwardMessage","scrollIntoView","behavior","classList","add","remove","component","hideSelf","component2","messageNodes","previousFrom","chatBoxClass","dateFmt","Intl","DateTimeFormat","prev","next","nextFrom","thisFrom","isReply","userDesc","parseInt","isNaN","ts","toDateString","format","hi","isChan","_uploader","lastSeen","cont","getMeTopic","getContact","seen","navigator","userLanguage","language","getFullYear","getMonth","getDate","hour12","hour","minute","toLocaleDateString","month","day","year","shortDateFormat","when","onHideMessagesView","ButtonBack","onBack","MenuContacts","onNewTopic","onSettings","MenuStart","onSignUp","SideNavbar","AccountSettingsView","me","archived_contacts_title","ContactsView","handleAction","unreadThreads","archivedCount","chatList","blocked","arch","touched","action_ignored","onShowArchive","LocalStorageUtil","localStorage","setItem","JSON","stringify","getItem","oldVal","getObject","setObject","removeItem","CreateAccountView","login","password","email","imageDataUrl","errorCleared","saveToken","handleLoginChange","handlePasswordChange","handleEmailChange","handleFnChange","handleToggleSaveToken","onCreateAccount","submitClasses","login_prompt","password_prompt","onImageChanged","full_name_prompt","email_prompt","stay_logged_in","EditAccountView","handleCheckboxClick","onToggleMessageSounds","onTogglePushNotifications","onToggleIncognitoMode","messageSounds","desktopAlertsEnabled","desktopAlerts","incognitoMode","delete_account","delete_account_warning","AccSecurityView","blockedCount","showPermissionEditorFor","handlePasswordUpdate","handleHidePermissionsEditor","handleDeleteAccount","pwd","onUpdatePassword","onUpdateAccountDesc","onDeleteAccount","password_unchanged","onLogout","onShowBlocked","AccSupportView","LoginView","hostName","persist","onPersistenceChange","onLogin","autoCorrect","autoCapitalize","invalid_id","NewTopicById","groupId","prefix","NewTopicGroup","handleFieldEdit","handleTagsChanged","handleChannelToggle","search_for_contacts","search_no_results","NewTopicView","tabSelected","searchQuery","handleTabClick","handleNewGroupSubmit","handleGroupByID","addUrlParam","removeUrlParam","onCreateTopic","dataUrl","priv","no_contacts_placeholder","PasswordResetView","sent","token","scheme","onReset","onRequest","HostSelector","changed","handleHostNameChange","onServerAddressChange","hostOptions","list","SettingsView","transport","handleTransportSelected","handleServerAddressChange","onUpdate","def","ws","lp","transportOptions","phone","ValidationView","credCode","credMethod","numbers_only","register","settings","edit","notif","support","newtpk","reset","SidepanelView","handleNewTopic","errorAction","errorActionText","loadSpinnerVisible","loginDisabled","onLoginRequest","onGlobalSettings","onUpdateAccountTags","onValidateCredentials","onPasswordResetRequest","onResetPassword","detectServerAddress","host","protocol","hostname","port","isSecureConnection","POP_SOUND","Audio","reconnect_countdown","reconnect_now","push_init_failed","invalid_security_token","no_connection","code_doesnot_match","menu_item_info","TinodeWeb","getBlankState","handleResize","handleHashRoute","handleOnline","checkForAppUpdate","handleVisibilityEvent","handleError","handleLoginRequest","handlePersistenceChange","handleConnected","handleAutoreconnectIteration","doLogin","handleCredentialsRequest","handleLoginSuccessful","handleDisconnect","tnMeMetaDesc","tnMeContactUpdate","tnMeSubsUpdated","resetContactList","tnData","tnInitFind","tnFndSubsUpdated","handleTopicSelected","handleHideMessagesView","handleSendMessage","handleNewChatInvitation","handleNewAccount","handleNewAccountRequest","handleUpdatePasswordRequest","handleUpdateAccountTagsRequest","handleToggleIncognitoMode","handleSettings","handleGlobalSettings","handleShowArchive","handleShowBlocked","handleToggleMessageSounds","handleCredAdd","handleCredDelete","handleCredConfirm","initFCMessaging","togglePushToken","requestPushToken","handlePushMessage","handleSidepanelCancel","handleStartTopicRequest","handleNewTopicCreated","handleTopicUpdateRequest","handleChangePermissions","handleTagsUpdateRequest","handleLogout","handleDeleteTopicRequest","handleDeleteMessagesRequest","handleLeaveUnsubRequest","handleBlockTopicRequest","handleReportTopic","handleShowContextMenu","defaultTopicContextMenu","handleHideContextMenu","handleShowAlert","handleShowInfoView","handleValidateCredentialsRequest","handlePasswordResetRequest","handleResetPassword","handleContextMenuAction","handleShowForwardDialog","handleHideForwardDialog","sendMessageToTopic","autoLogin","messageSoundsOff","FIREBASE_INIT","firebaseToken","hidden","sidePanelSelected","sidePanelTitle","sidePanelAvatar","myTrustedBadges","liveConnection","onLine","topicSelectedOnline","topicSelectedAcs","innerWidth","infoPanel","mobilePanel","contextMenuVisible","contextMenuBounds","contextMenuClickAt","contextMenuParams","contextMenuItems","forwardDialogVisible","alertVisible","alertParams","requestedTopic","BroadcastChannel","documentElement","clientWidth","viewportHeight","clientHeight","tnSetup","onConnect","onDisconnect","onAutoreconnectIteration","setDeviceToken","parsedNav","expires","setAuthToken","connect","readTimer","readTimerCallback","persistentCache","onSetupCompleted","appName","apiKey","secure","setHumanLanguage","enableLogging","oobNotification","fbPush","usePublicVapidKey","messagingVapidKey","serviceWorker","reg","useServiceWorker","postMessage","onTokenRefresh","onMessage","payload","mobile","onupdatefound","installingWorker","installing","onstatechange","controller","getTopicAccessMode","newTopicTabSelected","tab","reconnectCountdown","reconnect","isConnected","initStorage","clearStorage","getServerInfo","ver","sec","prom","timeLeft","seconds","secondsToTime","isAuthenticated","getAuthToken","loginBasic","loginToken","goToTopic","onContactUpdate","getCurrentUserID","withDesc","withCred","disconnect","urlHash","setUrlSidePanel","isPresencer","play","unused","foundContacts","merged","updated","past","prepareSearchableContacts","receivedTimer","noteRecv","fnd","getFndTopic","withSub","s","setMeta","isTopicOnline","isP2PType","am","updateWant","login_","password_","public_","cred_","tags_","createAccountBasic","on","enabled","updateObject","requestPermission","deleteToken","getToken","refreshedToken","delCredential","basicNavigator","infoNavigator","setUrlInfoPanel","newGroupTopicName","oldName","newName","updateAccountBasic","getCurrentLogin","updateGiven","cleared","Promose","delCurrentUser","publish","header","msgPreview","self_blocked","subscribed","keepForwardedMessage","confirmText","rejectText","invite","requestResetAuthSecret","newPassword","btoa","base64ReEncode","myUserName","onAddMember","handleManageGroupMembers","hl","languages","baseLanguage","htmlLang","allMessages","langauge","setAttribute","IntlProvider","textComponent","__webpack_require__","module","getter","__esModule","d","exports","definition","o","defineProperty","enumerable","get","obj","prop","prototype","__webpack_modules__"],"sourceRoot":""}