{"version":3,"file":"index.prod.js","mappings":"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","sources":["webpack://tinode-webapp/external \"React\"","webpack://tinode-webapp/external \"ReactDOM\"","webpack://tinode-webapp/external \"ReactIntl\"","webpack://tinode-webapp/external \"firebase\"","webpack://tinode-webapp/external \"Tinode\"","webpack://tinode-webapp/external [\"firebase\",\"messaging\"]","webpack://tinode-webapp/./src/widgets/alert.jsx","webpack://tinode-webapp/./src/version.js","webpack://tinode-webapp/./src/config.js","webpack://tinode-webapp/./src/widgets/context-menu.jsx","webpack://tinode-webapp/./src/lib/strformat.js","webpack://tinode-webapp/./src/lib/utils.js","webpack://tinode-webapp/./src/widgets/letter-tile.jsx","webpack://tinode-webapp/./src/widgets/load-spinner.jsx","webpack://tinode-webapp/./src/widgets/avatar-upload.jsx","webpack://tinode-webapp/./src/widgets/badge-list.jsx","webpack://tinode-webapp/./src/widgets/checkbox.jsx","webpack://tinode-webapp/./src/widgets/contact-badges.jsx","webpack://tinode-webapp/./src/widgets/received-marker.jsx","webpack://tinode-webapp/./src/widgets/unread-badge.jsx","webpack://tinode-webapp/./src/widgets/contact.jsx","webpack://tinode-webapp/./src/widgets/contact-action.jsx","webpack://tinode-webapp/./src/lib/blob-helpers.js","webpack://tinode-webapp/./src/widgets/contact-list.jsx","webpack://tinode-webapp/./src/widgets/menu-cancel.jsx","webpack://tinode-webapp/./src/widgets/error-panel.jsx","webpack://tinode-webapp/./src/widgets/chip.jsx","webpack://tinode-webapp/./src/widgets/chip-input.jsx","webpack://tinode-webapp/./src/widgets/group-manager.jsx","webpack://tinode-webapp/./src/widgets/permissions-editor.jsx","webpack://tinode-webapp/./src/widgets/cropper.jsx","webpack://tinode-webapp/./src/widgets/avatar-crop.jsx","webpack://tinode-webapp/./src/widgets/visible-password.jsx","webpack://tinode-webapp/./src/widgets/in-place-edit.jsx","webpack://tinode-webapp/./src/widgets/tag-manager.jsx","webpack://tinode-webapp/./src/widgets/topic-desc-edit.jsx","webpack://tinode-webapp/./src/widgets/topic-common.jsx","webpack://tinode-webapp/./src/widgets/topic-security.jsx","webpack://tinode-webapp/./src/views/info-view.jsx","webpack://tinode-webapp/./src/widgets/file-progress.jsx","webpack://tinode-webapp/./src/widgets/attachment.jsx","webpack://tinode-webapp/./src/widgets/uploading-image.jsx","webpack://tinode-webapp/./src/widgets/chat-message.jsx","webpack://tinode-webapp/./src/widgets/send-message.jsx","webpack://tinode-webapp/./src/widgets/doc-preview.jsx","webpack://tinode-webapp/./src/widgets/group-subs.jsx","webpack://tinode-webapp/./src/widgets/image-preview.jsx","webpack://tinode-webapp/./src/widgets/invitation.jsx","webpack://tinode-webapp/./src/views/logo-view.jsx","webpack://tinode-webapp/./src/lib/navigation.js","webpack://tinode-webapp/./src/views/messages-view.jsx","webpack://tinode-webapp/./src/widgets/button-back.jsx","webpack://tinode-webapp/./src/widgets/menu-contacts.jsx","webpack://tinode-webapp/./src/widgets/menu-start.jsx","webpack://tinode-webapp/./src/widgets/side-navbar.jsx","webpack://tinode-webapp/./src/views/account-settings-view.jsx","webpack://tinode-webapp/./src/views/contacts-view.jsx","webpack://tinode-webapp/./src/lib/local-storage.js","webpack://tinode-webapp/./src/views/create-account-view.jsx","webpack://tinode-webapp/./src/views/acc-notifications-view.jsx","webpack://tinode-webapp/./src/views/acc-security-view.jsx","webpack://tinode-webapp/./src/views/acc-support-view.jsx","webpack://tinode-webapp/./src/views/login-view.jsx","webpack://tinode-webapp/./src/widgets/new-topic-by-id.jsx","webpack://tinode-webapp/./src/widgets/new-topic-group.jsx","webpack://tinode-webapp/./src/widgets/search-contacts.jsx","webpack://tinode-webapp/./src/views/new-topic-view.jsx","webpack://tinode-webapp/./src/views/password-reset-view.jsx","webpack://tinode-webapp/./src/widgets/host-selector.jsx","webpack://tinode-webapp/./src/views/settings-view.jsx","webpack://tinode-webapp/./src/views/validation-view.jsx","webpack://tinode-webapp/./src/views/sidepanel-view.jsx","webpack://tinode-webapp/./src/lib/host-name.js","webpack://tinode-webapp/./src/views/tinode-web.jsx","webpack://tinode-webapp/./src/index.js","webpack://tinode-webapp/webpack/bootstrap","webpack://tinode-webapp/webpack/runtime/compat get default export","webpack://tinode-webapp/webpack/runtime/define property getters","webpack://tinode-webapp/webpack/runtime/hasOwnProperty shorthand","webpack://tinode-webapp/webpack/startup"],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = React;","const __WEBPACK_NAMESPACE_OBJECT__ = ReactDOM;","const __WEBPACK_NAMESPACE_OBJECT__ = ReactIntl;","const __WEBPACK_NAMESPACE_OBJECT__ = firebase;","const __WEBPACK_NAMESPACE_OBJECT__ = Tinode;","const __WEBPACK_NAMESPACE_OBJECT__ = firebase.messaging;","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Alert extends React.PureComponent {\n  render() {\n    return this.props.visible ?\n      <div className=\"alert-container\">\n        <div className=\"alert\">\n          <div className=\"title\">{this.props.title}</div>\n          <div className=\"content\">{this.props.content}</div>\n          <div className=\"dialog-buttons\">\n            {this.props.onReject ?\n              <button className=\"outline\" onClick={this.props.onReject}>\n                {this.props.reject || <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />}\n              </button>\n              :\n              null\n            }\n            <button className=\"primary\" onClick={this.props.onConfirm}>\n              {this.props.confirm || <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\"  />}\n            </button>\n          </div>\n        </div>\n      </div>\n    :\n    null;\n  }\n};\n","// This is a generated file. Don't edit.\n\nexport const PACKAGE_VERSION = \"0.18.0-alpha1\";\n","import { PACKAGE_VERSION } from './version.js';\n\n// Name of this application, used in the User-Agent.\nexport const APP_NAME = 'TinodeWeb/' + (PACKAGE_VERSION || '0.17');\n\n// API key. Use https://github.com/tinode/chat/tree/master/keygen to generate your own\nexport const API_KEY = 'AQEAAAABAAD_rAp4DJh05a1HAwFT3A6K';\n\n// The array of possible hosts to connect to.\nexport const KNOWN_HOSTS = {hosted: 'web.tinode.co', local: 'localhost:6060'};\n\n// Default host name and port to connect to.\nexport const DEFAULT_HOST = KNOWN_HOSTS.hosted;\n\n// Enable console logging.\nexport const LOGGING_ENABLED = true;\n\n// Minimum time between two keypress notifications, milliseconds.\nexport const KEYPRESS_DELAY = 3*1000;\n// Delay before sending a {note} for reciving a message, milliseconds.\nexport const RECEIVED_DELAY = 500;\n// Delay before sending a read notification, milliseconds.\nexport const READ_DELAY = 1000;\n\n// The default shortest allowed tag length. Matches the value on the server.\nexport const MIN_TAG_LENGTH = 2;\n// The default greatest allowed tag length. Matches the value on the server.\nexport const MAX_TAG_LENGTH = 96;\n// The default maximum number of tags allowed. Matches the value on the server.\nexport const MAX_TAG_COUNT = 16;\n\n// Access mode for P2P subscriptions initiated by the current user.\nexport const DEFAULT_P2P_ACCESS_MODE = 'JRWPS';\n// Access mode for new group topics created by the current user.\nexport const NEW_GRP_ACCESS_MODE = 'JRWPSAO';\n// Access mode for a channel.\nexport const CHANNEL_ACCESS_MODE = 'JR';\n\n// Access mode for no access.\nexport const NO_ACCESS_MODE = 'N';\n\n// Mediaquery breakpoint between desktop and mobile, in px. Should match the value\n// in @media (max-size: 640px) in base.css\nexport const MEDIA_BREAKPOINT = 640;\n// Size of css 'rem' unit in pixels. Default 1rem = 10pt = 13px.\nexport const REM_SIZE = 13;\n\n// Size of the avatar image: when image dimensions are greater or the image is not square, it's resized to\n// a square of this size or less.\nexport const AVATAR_SIZE = 384;\n\n// Maximum size of an avatar in bytes for sending in-band. Bigger avatars will be sent out of band (as uploads).\nexport const MAX_AVATAR_BYTES = 4096;\n\n// Size of the broken_image shown in MessagesView\nexport const BROKEN_IMAGE_SIZE = 32;\n\n// Number of chat messages to fetch in one call.\nexport const MESSAGES_PAGE = 24;\n\n// Default maximum in-band (included directly into the message) attachment size which fits into\n// a message of 256K in size. Used when the server-provided value is unavailable. The actual\n// binary size of the attachment should be smaller due to base64 encoding expansion and some overhead,\n// for instance 1024 bytes.\n// Increase this limit to a greater value in production, if desired. Also increase\n// max_message_size in the server config.\nexport const MAX_INBAND_ATTACHMENT_SIZE = 262144;\n\n// Default absolute maximum attachment size to be used with the server = 8MB.\n// Used when the server-provided value is unavailable. Increase to something like 100MB in production.\nexport const MAX_EXTERN_ATTACHMENT_SIZE = 1 << 23;\n\n// Maximum allowed linear dimension (pixels) of an image sent inline. Larger images will be shrunk\n// to make the larger dimension fit under this size. You may want to adjust it to 1600 or\n// 2400 for production.\nexport const MAX_IMAGE_DIM = 1024;\n\n// Linear dimensions of image preview: shrink image under this size for previews.\nexport const IMAGE_PREVIEW_DIM = 64;\n\n// Maximum number of online users to be shown in a topic title bar. Others will be\n// hidden under \"+X more\"\nexport const MAX_ONLINE_IN_TOPIC = 4;\n\n// Maximum length of user name, topic title, and private comment.\nexport const MAX_TITLE_LENGTH = 60;\n// Maximum length of topic description.\nexport const MAX_TOPIC_DESCRIPTION_LENGTH = 360;\n\n// Length of message previews in chat list, in characters.\nexport const MESSAGE_PREVIEW_LENGTH = 80;\n\n// Link for \"Contact Us\".\nexport const LINK_CONTACT_US = 'email:support@tinode.co';\n\n// Link to Privacy Policy.\nexport const LINK_PRIVACY_POLICY = 'https://tinode.co/privacy.html';\n\n// Link to Terms of Service.\nexport const LINK_TERMS_OF_SERVICE = 'https://tinode.co/terms.html';\n","// Context Menu: popup/dropdown menu.\nimport React from 'react';\nimport { injectIntl, defineMessages } from 'react-intl';\n\nimport { REM_SIZE } from '../config.js';\n\nconst messages = defineMessages({\n  info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  },\n  clear_messages: {\n    id: 'menu_item_clear_messages',\n    defaultMessage: 'Clear messages',\n    description: 'Delete all messages'\n  },\n  clear_for_all: {\n    id: 'menu_item_clear_messages_for_all',\n    defaultMessage: 'Clear for All',\n    description: 'Delete all message(s) for all members'\n  },\n  delete: {\n    id: 'menu_item_delete',\n    defaultMessage: 'Delete',\n    description: 'Delete selected messages'\n  },\n  delete_for_all: {\n    id: 'menu_item_delete_for_all',\n    defaultMessage: 'Delete for All',\n    description: 'Delete selected message(s) for all members'\n  },\n  send_retry: {\n    id: 'menu_item_send_retry',\n    defaultMessage: 'Retry',\n    description: 'Retry sending message'\n  },\n  mute: {\n    id: 'menu_item_mute',\n    defaultMessage: 'Mute',\n    description: 'Turn off notifications'\n  },\n  unmute: {\n    id: 'menu_item_unmute',\n    defaultMessage: 'Unmute',\n    description: 'Turn notifications on'\n  },\n  topic_delete: {\n    id: 'menu_item_delete_topic',\n    defaultMessage: 'Delete',\n    description: 'Delete entire topic'\n  },\n  topic_delete_warning: {\n    id: 'topic_delete_warning',\n    defaultMessage: 'Are you sure you want to delete this conversation? It cannot be undone.',\n    description: 'Alert warning when deleting entire topic'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  unblock: {\n    id: 'menu_item_unblock',\n    defaultMessage: 'Unblock',\n    description: 'Unblock topic or user'\n  },\n  // Generic string suitable for either topic or user.\n  block: {\n    id: 'menu_item_block',\n    defaultMessage: 'Block',\n    description: 'Block topic or user'\n  },\n  topic_block_warning: {\n    id: 'topic_block_warning',\n    defaultMessage: 'Are you sure you want to block this conversation?',\n    description: 'Alert warning when blocking a topic.'\n  },\n  member_delete: {\n    id: 'menu_item_member_delete',\n    defaultMessage: 'Remove',\n    description: 'Remove user from topic'\n  },\n  archive: {\n    id: 'menu_item_archive_topic',\n    defaultMessage: 'Archive',\n    description: 'Move topic from the list of active chats to archive'\n  },\n  unarchive: {\n    id: 'menu_item_restore_topic',\n    defaultMessage: 'Restore',\n    description: 'Restore topic from archive'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n});\n\nclass ContextMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selfRef = React.createRef();\n\n    const {formatMessage} = props.intl;\n\n    this.handlePageClick = this.handlePageClick.bind(this);\n    this.handleEscapeKey = this.handleEscapeKey.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n\n    // Preconfigured menu items.\n    this.MenuItems = {\n      'topic_info': {\n        id: 'topic_info',\n        title: formatMessage(messages.info),\n        handler: null\n      },\n      'messages_clear': {\n        id: 'messages_clear',\n        title: formatMessage(messages.clear_messages),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.clear_messages), // title\n            formatMessage(messages.clear_messages_warning), // content\n            (() => { this.deleteMessages(true, false, params, errorHandler); }), // onConfirm\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'messages_clear_hard': {\n        id: 'messages_clear_hard',\n        title: formatMessage(messages.clear_for_all),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.clear_for_all), // title\n            formatMessage(message.delete_messages_warning), // content\n            (() => { return this.deleteMessages(true, true, params, errorHandler); }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'message_delete': {\n        id: 'message_delete',\n        title: formatMessage(messages.delete),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, false, params, errorHandler);\n        }\n      },\n      'message_delete_hard': {\n        id: 'message_delete_hard',\n        title: formatMessage(messages.delete_for_all),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, true, params, errorHandler);\n        }\n      },\n      'menu_item_send_retry': {\n        id: 'menu_item_send_retry',\n        title: formatMessage(messages.send_retry),\n        handler: (params, errorHandler) => {\n          return this.retryMessage(params, errorHandler);\n        }\n      },\n      'topic_unmute': {\n        id: 'topic_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'topic_mute': {\n        id: 'topic_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'topic_unblock': {\n        id: 'topic_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n      'topic_block': {\n        id: 'topic_block',\n        title: formatMessage(messages.block),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.block), // title\n            formatMessage(messages.topic_block_warning), // content\n            (() => {\n              return this.topicPermissionSetter('-JP', params, errorHandler).then((ctrl) => {\n                this.props.onTopicRemoved(params.topicName);\n                return ctrl;\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_delete': {\n        id: 'topic_delete',\n        title: formatMessage(messages.topic_delete),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.topic_delete), // title\n            formatMessage(messages.topic_delete_warning), // content\n            (() => {\n              const topic = this.props.tinode.getTopic(params.topicName);\n              if (!topic) {\n                console.log(\"Topic not found: \", params.topicName);\n                return;\n              }\n              return topic.delTopic(true).catch((err) => {\n                if (errorHandler) {\n                  errorHandler(err.message, 'err');\n                }\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_archive': {\n        id: 'topic_archive',\n        title: formatMessage(messages.archive),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic) {\n            console.log(\"Topic not found: \", params.topicName);\n            return;\n          }\n          return topic.archive(true).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      'topic_restore': {\n        id: 'topic_restore',\n        title: formatMessage(messages.unarchive),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic) {\n            console.log(\"Topic not found: \", params.topicName);\n            return;\n          }\n          return topic.archive(false).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      // menu_item_edit_permissions is defined elsewhere.\n      'permissions': {\n        id: 'permissions',\n        title: formatMessage(messages.edit_permissions),\n        handler: null\n      },\n      'member_delete': {\n        id: 'member_delete',\n        title: formatMessage(messages.member_delete),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic || !params.user) {\n            console.log(\"Topic or user not found: '\" + params.topicName + \"', '\" + params.user + \"'\");\n            return;\n          }\n          return topic.delSubscription(params.user).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      'member_mute': {\n        id: 'member_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'member_unmute': {\n        id: 'member_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'member_block': {\n        id: 'member_block',\n        title: formatMessage(messages.block),\n        handler: this.topicPermissionSetter.bind(this, '-JP')\n      },\n      'member_unblock': {\n        id: 'member_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handlePageClick, false);\n    document.addEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handlePageClick, false);\n    document.removeEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  handlePageClick(e) {\n    if (this.selfRef.current.contains(e.target)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n  }\n\n  handleEscapeKey(e) {\n    if (e.keyCode === 27) {\n      this.props.hide();\n    }\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n    let item = this.props.items[e.currentTarget.dataset.id];\n    if (typeof item == 'string') {\n      item = this.MenuItems[item];\n    }\n\n    if (!item) {\n      console.log(\"Invalid menu item ID\", e.currentTarget.dataset.id);\n    } else {\n      this.props.onAction(\n        item.id,\n        item.handler(this.props.params, this.props.onError),\n        this.props.params);\n    }\n  }\n\n  // Menu Actions\n\n  deleteMessages(all, hard, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found: \", params.topicName);\n      return;\n    }\n\n    // We don't know if the message is still pending (e.g. attachment is being uploaded),\n    // so try cancelling first. No harm if we can't cancel.\n    // The message can be cancelled if transmission to the server has not\n    // started yet or if the message send has failed.\n    if (!all && topic.cancelSend(params.seq)) {\n      return;\n    }\n    // Can't cancel. Delete instead.\n    const promise = all ?\n      topic.delMessagesAll(hard) :\n      topic.delMessagesList([params.seq], hard);\n\n    return promise.catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Retries sending failed message.\n  retryMessage(params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    // Remove the existing message entry.\n    if (!topic || !topic.flushMessage(params.seq)) {\n      return;\n    }\n    const msg = topic.createMessage(params.content, false);\n    return topic.publishDraft(msg).catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Function is used by context menu to set permissions.\n  topicPermissionSetter(mode, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found\", params.topicName);\n      return;\n    }\n\n    let result = topic.updateMode(params.user, mode);\n    if (errorHandler) {\n      result = result.catch((err) => {\n        errorHandler(err.message, 'err');\n      });\n    }\n    return result;\n  }\n\n  render() {\n    let count = 0;\n    let menu = [];\n    this.props.items.map((item) => {\n      if (typeof item == 'string') {\n        item = this.MenuItems[item];\n      }\n      if (item && item.title) {\n        menu.push(\n          item.title == '-' ?\n            <li className=\"separator\" key={count} />\n            :\n            <li onClick={this.handleClick} data-id={count} key={count}>{item.title}</li>\n        );\n      }\n      count++;\n    });\n\n    // Ensure that menu is inside the app-container.\n    const hSize = 12 * REM_SIZE;\n    const vSize = REM_SIZE * (0.7 + menu.length * 2.5);\n    const left = (this.props.bounds.right - this.props.clickAt.x < hSize) ?\n        (this.props.clickAt.x - this.props.bounds.left - hSize) :\n        (this.props.clickAt.x - this.props.bounds.left);\n    const top = (this.props.bounds.bottom - this.props.clickAt.y < vSize) ?\n        (this.props.clickAt.y - this.props.bounds.top - vSize) :\n        (this.props.clickAt.y - this.props.bounds.top);\n\n    const position = {\n      left: left + 'px',\n      top: top + 'px'\n    };\n\n    return (\n      <ul className=\"menu\" style={position} ref={this.selfRef}>\n        {menu}\n      </ul>\n    );\n  }\n}\n\nexport default injectIntl(ContextMenu);\n","// Short representation of time in the past.\nexport function shortDateFormat(then, locale) {\n  locale = locale || window.navigator.userLanguage || window.navigator.language;\n  const now = new Date();\n  if (then.getFullYear() == now.getFullYear()) {\n    // Same year.\n    if (then.getMonth() == now.getMonth() && then.getDate() == now.getDate()) {\n      // Same month and day, show time only.\n      return then.toLocaleTimeString(locale, {hour12: false, hour: '2-digit', minute: '2-digit'});\n    }\n    // Different month and/or day, show month day, time.\n    return then.toLocaleDateString(locale,\n      {hour12: false, month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit'});\n  }\n  // Different year: just show the date.\n  return then.toLocaleDateString(locale, {year: 'numeric', month: 'short', day: 'numeric'});\n}\n\n// Convert seconds to minutes:seconds, i.e. 156 sec -> 2:36.\nexport function secondsToTime(seconds) {\n  const min = Math.floor(seconds / 60);\n  let sec = seconds % 60;\n  sec = sec < 10 ? `0${sec}` : sec;\n  return `${min}:${sec}`;\n}\n\n// Convert a number of bytes to human-readable format.\nexport function bytesToHumanSize(bytes) {\n  if (!bytes || bytes == 0) {\n    return '0 Bytes';\n  }\n\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n  const bucket = Math.min(Math.floor(Math.log2(bytes) / 10) | 0, sizes.length-1);\n  const count = bytes / Math.pow(1024, bucket);\n  const round = bucket > 0 ? (count < 3 ? 2 : (count < 30 ? 1 : 0)) : 0;\n  return count.toFixed(round) + ' ' + sizes[bucket];\n}\n\n// Get 32 bit integer hash value for a string. Ideally it should produce the same value\n// as Java's String#hash().\nexport function stringHash(value) {\n  let hash = 0;\n  value = '' + value;\n  for (let i = 0; i < value.length; i++) {\n    hash = ((hash << 5) - hash) + value.charCodeAt(i);\n    hash = hash & hash; // Convert to 32bit integer\n  }\n  return hash;\n}\n","// Odds and ends\n\nimport Tinode from 'tinode-sdk';\n\n// Make shortcut icon appear with a green dot + show unread count in title.\nexport function updateFavicon(count) {\n  const oldIcon = document.getElementById('shortcut-icon');\n  const head = document.head || document.getElementsByTagName('head')[0];\n  const newIcon = document.createElement('link');\n  newIcon.type = 'image/png';\n  newIcon.id = 'shortcut-icon';\n  newIcon.rel = 'shortcut icon';\n  newIcon.href = 'img/logo32x32' + (count > 0 ? 'a' : '') + '.png';\n  if (oldIcon) {\n    head.removeChild(oldIcon);\n  }\n  head.appendChild(newIcon);\n\n  document.title = (count > 0 ? '('+count+') ' : '') + 'Tinode';\n}\n\n// Create theCard which represents user's or topic's \"public\" info.\nexport function theCard(fn, imageUrl, imageMimeType, note) {\n  let card = null;\n  fn = fn && fn.trim();\n  note = note && note.trim();\n\n  if (fn) {\n    card = {\n      fn: fn\n    };\n  }\n\n  if (typeof note == 'string') {\n    card = card || {};\n    card.note = note ? note : Tinode.DEL_CHAR;\n  }\n\n  if (imageUrl) {\n    card = card || {};\n    let mimeType = imageMimeType;\n    // Is this a data URL \"data:[<mediatype>][;base64],<data>\"?\n    const matches = /^data:(image\\/[-a-z0-9+.]+)?(;base64)?,/i.exec(imageUrl);\n    if (matches) {\n      mimeType = matches[1];\n      card.photo = {\n        data: imageUrl.substring(imageUrl.indexOf(',') + 1),\n        ref: Tinode.DEL_CHAR\n      };\n    } else {\n      card.photo = {\n        data: Tinode.DEL_CHAR,\n        ref: imageUrl\n      };\n    }\n    card.photo.type = (mimeType || 'image/jpeg').substring('image/'.length);\n  }\n\n  return card;\n}\n\n// Deep-shallow compare two arrays: shallow compare each element.\nexport function arrayEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (!Array.isArray(a) || !Array.isArray(b)) {\n    return false;\n  }\n\n  // Compare lengths first.\n  if (a.length != b.length) {\n    return false;\n  }\n  // Order of elements is ignored.\n  a.sort();\n  b.sort();\n  for (let i = 0, l = a.length; i < l; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Checks (loosely) if the given string is a phone. If so, returns the phone number in a format\n// as close to E.164 as possible.\nexport function asPhone(val) {\n  val = val.trim();\n  if (/^(?:\\+?(\\d{1,3}))?[- (.]*(\\d{3})[- ).]*(\\d{3})[- .]*(\\d{2})[- .]*(\\d{2})?$/.test(val)) {\n    return val.replace(/[- ().]*/, '');\n  }\n  return null;\n}\n\n// Checks (loosely) if the given string is an email. If so returns the email.\nexport function asEmail(val) {\n  val = val.trim();\n  if (/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(val)) {\n    return val;\n  }\n  return null;\n}\n\n// Checks if URL is a relative url, i.e. has no 'scheme://', including the case of missing scheme '//'.\n// The scheme is expected to be RFC-compliant, e.g. [a-z][a-z0-9+.-]*\n// example.html - ok\n// https:example.com - not ok.\n// http:/example.com - not ok.\n// ' ↲ https://example.com' - not ok. (↲ means carriage return)\nexport function isUrlRelative(url) {\n  return url && !/^\\s*([a-z][a-z0-9+.-]*:|\\/\\/)/im.test(url);\n}\n\n// Ensure URL does not present an XSS risk. Optional allowedSchemes may contain an array of\n// strings with permitted URL schemes, such as ['ftp', 'ftps']; otherwise accept http and https only.\nexport function sanitizeUrl(url, allowedSchemes) {\n  if (typeof url != 'string') {\n    return url;\n  }\n\n  // Strip control characters and whitespace. They are not valid URL characters anyway.\n  url = url.replace(/[^\\x20-\\x7E]/gmi, '').trim();\n\n  // Relative URLs are safe.\n  // Relative URL does not start with ':', abcd123: or '//'.\n  if (!/^([a-z][a-z0-9+.-]*:|\\/\\/)/i.test(url)) {\n    return url;\n  }\n\n  // Blob URLs are safe.\n  if (/^blob:http/.test(url)) {\n    return url;\n  }\n\n  // Absolute URL. Accept only safe schemes, or no scheme.\n  const schemes = Array.isArray(allowedSchemes) ? allowedSchemes.join('|') : 'http|https';\n  const re = new RegExp('^((' + schemes + '):|//)', 'i');\n  if (!re.test(url)) {\n    return null;\n  }\n\n  return url;\n}\n\n// Ensure URL is suitable for <img src=\"url\"> field: the URL must be a relative URL or\n// have http:, https:, blob: or data: scheme.\n// In case of data: scheme, the URL must start with a 'data:image/XXXX;base64,'.\nexport function sanitizeImageUrl(url) {\n  if (!url) {\n    return null;\n  }\n\n  const sanitizedUrl = sanitizeUrl(url);\n  if (sanitizedUrl) {\n    return sanitizedUrl;\n  }\n\n  // Is this a data: URL of an image?\n  if (/data:image\\/[a-z0-9.-]+;base64,/i.test(url.trim())) {\n    return url;\n  }\n\n  return null;\n}\n\n// Given message's received status, return name and color of a delivery indicator icon.\nexport function deliveryMarker(received) {\n  switch (received) {\n    case Tinode.MESSAGE_STATUS_SENDING:\n      return { name: 'access_time' }; // watch face\n    case Tinode.MESSAGE_STATUS_FAILED:\n      return { name: 'warning', color: 'danger-color' }; // yellow icon /!\\\n    case Tinode.MESSAGE_STATUS_SENT:\n      return { name: 'done' }; // checkmark\n    case Tinode.MESSAGE_STATUS_RECEIVED:\n      return { name: 'done_all' }; // double checkmark\n    case Tinode.MESSAGE_STATUS_READ:\n      return { name: 'done_all', color: 'blue' }; // blue double checkmark\n  }\n  return null;\n}\n","import React from 'react';\n\nimport Tinode from 'tinode-sdk';\n\nimport { stringHash } from '../lib/strformat.js';\nimport { sanitizeImageUrl } from '../lib/utils.js';\n\nexport default class LetterTile extends React.PureComponent {\n  render() {\n    let avatar;\n    if (this.props.avatar === true) {\n      const isGroup = (Tinode.topicType(this.props.topic) == 'grp');\n      const iconColor = (isGroup ? 'light-color' : 'dark-color')\n        + (Math.abs(stringHash(this.props.topic)) % 16);\n      if (this.props.topic && this.props.title && this.props.title.trim()) {\n        const letter = this.props.title.trim().charAt(0);\n        const className = 'lettertile ' + iconColor;\n        avatar = (<div className={className}><div>{letter}</div></div>)\n      } else {\n        const className = 'material-icons ' + iconColor;\n        avatar = isGroup ?\n          <i className={className}>group</i> : <i className={className}>person</i>;\n      }\n    } else if (this.props.avatar) {\n      const url = this.props.tinode.authorizeURL(sanitizeImageUrl(this.props.avatar));\n      // If avatar image is invalid, show a placeholder.\n      avatar = <img className=\"avatar\" alt=\"avatar\" src={url}\n        onError={(e)=>{e.target.onerror = null; e.target.src=\"../img/broken_image.png\"}} />;\n    } else {\n      avatar = null;\n    }\n    return avatar;\n  }\n}\n","import React from 'react';\n\nexport default class LoadSpinner extends React.PureComponent {\n  render() {\n    const className = 'load-spinner-box' + (this.props.large ? ' large' : '')\n      + (this.props.clear ? ' clear' : '') + (this.props.centered ? ' centered' : '');\n    return (this.props.show ?\n      <div className={className}><div className=\"loader-spinner\"></div></div> : null);\n  }\n}\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\nimport LoadSpinner from './load-spinner.jsx';\n\nimport { sanitizeImageUrl } from '../lib/utils.js';\n\nimport { AVATAR_SIZE } from '../config.js';\n\nexport default class AvatarUpload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      source: props.avatar\n    };\n\n    this.handleFileReceived = this.handleFileReceived.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.avatar != prevProps.avatar) {\n      this.setState({source: this.props.avatar});\n    }\n  }\n\n  handleFileReceived(e) {\n    const image = e.target.files[0];\n    this.props.onImageUpdated(image.type, URL.createObjectURL(image), image.name);\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  render() {\n    // Randomize id value in case more than one AvatarUpload is shown\n    // at the same time.\n    const randId = 'file-input-avatar-' + (Math.random() + '').substr(2);\n    const className = 'avatar-upload' + (this.props.readOnly ? ' read-only' : '');\n    return (\n      <div className={className}>\n        {this.props.readOnly || !this.state.source ?\n          null :\n          <a href=\"#\" className=\"clear-avatar\" onClick={(e) => {e.preventDefault(); this.props.onImageUpdated();}}>\n            <i className=\"material-icons\">clear</i>\n          </a>}\n        {this.state.source ?\n          <img src={this.props.tinode.authorizeURL(sanitizeImageUrl(this.state.source))} className=\"preview\" /> :\n          this.props.readOnly && this.props.uid ?\n            <div className=\"avatar-box\">\n              <LetterTile\n                tinode={this.props.tinode}\n                avatar={true}\n                topic={this.props.uid}\n                title={this.props.title} />\n            </div>\n            :\n            <div className=\"blank\">{AVATAR_SIZE}&times;{AVATAR_SIZE}</div>}\n        {this.props.readOnly ? null :\n          <input type=\"file\" id={randId} className=\"inputfile hidden\"\n            accept=\"image/*\" onChange={this.handleFileReceived} />}\n        {this.props.readOnly ? null :\n        <label htmlFor={randId} className=\"round\">\n          <i className=\"material-icons\">file_upload</i>\n        </label>}\n        <LoadSpinner show={this.props.uploading} large={true} clear={true} centered={true} />\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nconst icon_mapping = {'staff': 'verified_user'};\n\nconst messages = defineMessages({\n  badge_verified: {\n    id: 'badge_verified',\n    defaultMessage: 'Verified/official',\n    description: 'Explanation of a verified account or topic badge'\n  },\n  badge_staff: {\n    id: 'badge_staff',\n    defaultMessage: 'Staff-managed',\n    description: 'Explanation of a staff-managed account or topic badge'\n  },\n  badge_danger: {\n    id: 'badge_danger',\n    defaultMessage: 'Untrustworthy',\n    description: 'Suspicious or untrustworthy account or topic badge'\n  },\n});\n\n\n/* Trusted badges with labels: verified, staff, danger */\nclass BadgeList extends React.PureComponent {\n  render() {\n    const {formatMessage} = this.props.intl;\n    let badges = null;\n    if (this.props.trustedBadges && this.props.trustedBadges.length > 0) {\n      badges = [];\n      this.props.trustedBadges.map((b) => {\n        const comment = formatMessage(messages['badge_' + b]);\n        const style = 'material-icons ' + b + '-color';\n        badges.push(<div className=\"trusted-badge\" key={b}><i className={style}>{icon_mapping[b] || b}</i> {comment}</div>);\n      });\n      return <>{badges}</>;\n    }\n    return null;\n  }\n};\n\nexport default injectIntl(BadgeList);\n","import React from 'react';\n\n/* BEGIN CheckBox: styled checkbox */\nexport default class CheckBox extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange() {\n    this.props.onChange(this.props.name, !this.props.checked);\n  }\n\n  render() {\n    return (\n      this.props.onChange ? (\n        this.props.checked ?\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box</i> :\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box_outline_blank</i>\n        ) : (\n          this.props.checked ?\n            <i className=\"material-icons\">check_box</i> :\n            <i className=\"material-icons\">check_box_outline_blank</i>\n        )\n    );\n  }\n}\n/* END CheckBox */\n","import React from 'react';\n\nconst icon_mapping = {'muted': 'notifications_off', 'banned': 'block', 'staff': 'verified_user'};\n\n/* Contact's labels: [you], or icons [muted], [blocked] */\nexport default class ContactBadges extends React.PureComponent {\n  render() {\n    let badges = null;\n    if (this.props.badges && this.props.badges.length > 0) {\n      badges = [];\n      this.props.badges.map((b) => {\n        const color = (b.color ? ' ' + b.color : '');\n        if (b.icon) {\n          badges.push(<i className={'material-icons as-badge' + color} key={b.key || b.icon}>{icon_mapping[b.icon] || b.icon}</i>);\n        } else {\n          badges.push(<span className={'badge' + color} key={b.key || b.name}>{b.name}</span>);\n        }\n      });\n      return <>{badges}</>;\n    }\n    return null;\n  }\n};\n","// Received/read indicator.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { shortDateFormat } from '../lib/strformat.js';\nimport { deliveryMarker } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  message_sending: {\n    id: 'message_sending',\n    defaultMessage: 'sending...',\n    description: 'Message being sent, in place of time stamp'\n  },\n  message_sending_failed: {\n    id: 'message_sending_failed',\n    defaultMessage: 'failed',\n    description: 'Failed to send message, in place of time stamp'\n  }\n});\n\nclass ReceivedMarker extends React.PureComponent {\n  render() {\n    const {formatMessage} = this.props.intl;\n    let timestamp;\n    if (this.props.received <= Tinode.MESSAGE_STATUS_SENDING) {\n      timestamp = formatMessage(messages.message_sending);\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_FAILED) {\n      timestamp = formatMessage(messages.message_sending_failed);\n    } else {\n      timestamp = shortDateFormat(this.props.timestamp, this.props.intl.locale);\n    }\n\n    const icon = deliveryMarker(this.props.received);\n    const marker = icon ? <i className={'material-icons small ' + icon.color}>{icon.name}</i> : null;\n\n    return (\n      <span className=\"timestamp\">\n        {timestamp}{'\\u00a0'}{marker}\n      </span>\n    );\n  }\n};\n\nexport default injectIntl(ReceivedMarker);\n","// The counter of unread messages in the topic.\nimport React from 'react';\n\nexport default class UnreadBadge extends React.PureComponent {\n  render() {\n    return (this.props.count > 0 ?\n      <span className=\"unread\">{this.props.count > 9 ? \"9+\" : this.props.count}</span>\n      : null);\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\n\nimport ContactBadges from './contact-badges.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\nimport UnreadBadge from './unread-badge.jsx';\n\nimport { Drafty } from 'tinode-sdk';\n\nimport { deliveryMarker } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  drafty_image: {\n    id: 'drafty_image',\n    defaultMessage: 'Picture',\n    description: 'Comment for embedded images in drafty preview'\n  },\n  drafty_form: {\n    id: 'drafty_form',\n    defaultMessage: 'Form: ',\n    description: 'Comment for form in drafty preview'\n  },\n  drafty_attachment: {\n    id: 'drafty_attachment',\n    defaultMessage: 'Attachment',\n    description: 'Comment for attachment in drafty preview'\n  },\n});\n\nclass Contact extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.props.onSelected) {\n      // Index this.props.index is used by GroupManager.\n      this.props.onSelected(this.props.item, this.props.index);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.props.item, y: e.pageY, x: e.pageX });\n  }\n\n  render() {\n    let title = this.props.title;\n    if (!title) {\n      title = <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n        description=\"Title shown when the topic has no name\" /></i>;\n    } else if (title.length > 30) {\n      // FIXME: this is probably wrong for RTL languages.\n      title = title.substring(0, 28) + '…';\n    }\n    const online = this.props.now ? 'online' : 'offline';\n    const avatar = this.props.avatar ? this.props.avatar : true;\n    const badges = this.props.badges ? this.props.badges.slice() : [];\n    const icon_badges = [];\n    if (this.props.isVerified) {\n      icon_badges.push({icon: 'verified', color: 'verified-color'});\n    }\n    if (this.props.isStaff) {\n      icon_badges.push({icon: 'staff', color: 'staff-color'});\n    }\n    if (this.props.isDangerous) {\n      icon_badges.push({icon: 'dangerous', color: 'danger-color'});\n    }\n    if (this.props.acs) {\n      if (this.props.showMode) {\n        badges.push({name: this.props.acs.getMode(), key: 'mode'});\n      }\n      if (this.props.acs.isMuted()) {\n        icon_badges.push({icon: 'muted'});\n      }\n      if (!this.props.acs.isJoiner()) {\n        icon_badges.push({icon: 'banned'});\n      }\n    }\n\n    const subtitle = this.props.preview ?\n      (typeof this.props.preview == 'string' ? this.props.preview :\n        React.createElement(React.Fragment, null, Drafty.format(this.props.preview, draftyFormatter, this))) :\n      this.props.comment;\n\n    const icon = deliveryMarker(this.props.received);\n    const marker = icon ? <i className={'material-icons small space-right' +\n      (icon.color ? ' ' + icon.color : '')}>{icon.name}</i> : null;\n\n    return (\n      <li className={!this.props.showCheckmark && this.props.selected ? 'selected' : null} onClick={this.handleClick}>\n        <div className=\"avatar-box\">\n          <LetterTile\n            tinode={this.props.tinode}\n            avatar={avatar}\n            title={this.props.title}\n            topic={this.props.item} />\n          {this.props.showOnline ? <span className={online} /> :\n            (this.props.showCheckmark && this.props.selected ?\n            <i className=\"checkmark material-icons\">check_circle</i>\n            : null)}\n        </div>\n        <div className=\"text-box\">\n          <div><span className=\"contact-title\">{title}</span>\n            {this.props.isChannel ? <img src=\"/img/channel.png\" className=\"channel\" alt=\"channel\" /> : null}\n            <ContactBadges badges={icon_badges} /><UnreadBadge count={this.props.unread} />\n          </div>\n          {this.props.showMode ?\n            <span><ContactBadges badges={badges} /></span> :\n            this.props.small ? null : <div className=\"contact-comment\">{marker}{subtitle || '\\u00A0'}</div>}\n        </div>\n        {this.props.showContextMenu ?\n          <span className=\"menuTrigger\">\n            <a href=\"#\" onClick={this.handleContextClick}>\n              <i className=\"material-icons\">expand_more</i>\n            </a>\n          </span> : null}\n      </li>\n    );\n  }\n};\n\n\n// Converts Drafty object into a one-line preview.\nfunction draftyFormatter(style, data, values, key) {\n  let el = Drafty.tagName(style);\n  const attr = { key: key };\n  if (el) {\n    const { formatMessage } = this.props.intl;\n    switch (style) {\n      case 'BR':\n        // Replace new line with a space.\n        el = React.Fragment;\n        values = [' '];\n        break;\n      case 'HL':\n        // Make highlight less prominent in preview.\n        attr.className = 'highlight preview';\n        break;\n      case 'LN':\n        // Disable links in previews.\n        el = 'span';\n        break;\n      case 'IM':\n        // Replace image with '[icon] Image'.\n        el = React.Fragment;\n        values = [<i key=\"im\" className=\"material-icons\">photo</i>, formatMessage(messages.drafty_image)];\n        break;\n      case 'BN':\n        el = 'span';\n        attr.className = 'flat-button faux';\n        break;\n      case 'FM':\n        el = React.Fragment;\n        values = [<i key=\"fm\" className=\"material-icons\">dashboard</i>,\n          formatMessage(messages.drafty_form)].concat(values || []);\n        break;\n      case 'RW':\n        el = React.Fragment;\n        break;\n      case 'EX':\n        if (data && data.mime == 'application/json') {\n          // Ignore JSON attachments: they are form response payloads.\n          return null;\n        }\n        el = React.Fragment;\n        values = [<i key=\"ex\" className=\"material-icons\">attachment</i>, formatMessage(messages.drafty_attachment)];\n        break;\n      default:\n        if (el == '_UNKN') {\n          el = React.Fragment;\n          values = [<i key=\"unkn\" className=\"material-icons\">extension</i>];\n        }\n        break;\n    }\n    return React.createElement(el, attr, values);\n  } else {\n    return values;\n  }\n};\n\nexport default injectIntl(Contact);\n","// A panel included into a list of contacts with an action text.\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\n\nclass ContactAction extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.onAction(this.props.action);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <li onClick={this.handleClick} className=\"action\">\n        <div className=\"action-text\">{formatMessage(this.props.title, this.props.values)}</div>\n      </li>\n    );\n  }\n};\n\nexport default injectIntl(ContactAction);\n","// File and image helper functions.\nimport { MAX_INBAND_ATTACHMENT_SIZE, MAX_IMAGE_DIM } from '../config.js';\nimport { bytesToHumanSize } from './strformat.js'\n\n// Supported image MIME types and corresponding file extensions.\nexport const SUPPORTED_IMAGE_FORMATS = ['image/jpeg', 'image/gif', 'image/png', 'image/svg', 'image/svg+xml'];\nexport const MIME_EXTENSIONS         = ['jpg',        'gif',       'png',       'svg',       'svg'];\n\n// Get an URL from a theCard photo: either create a data: URL or return reference URL.\nexport function makeImageUrl(photo) {\n  if (photo && typeof photo == 'object') {\n    if (photo.data && photo.type) {\n      const mime = photo.type.startsWith('image/') ? photo.type : ('image/' + photo.type);\n      return 'data:' + mime + ';base64,' + photo.data;\n    }\n    return photo.ref;\n  }\n  return null;\n}\n\n// Calculate linear dimensions for scaling image down to fit under a certain size.\n// Returns an object which contains destination sizes, source sizes, and offsets\n// into source (when making square images).\nexport function fitImageSize(width, height, maxWidth, maxHeight, forceSquare) {\n  // Sanitize input\n  width = width | 0;\n  height = height | 0;\n  maxWidth = maxWidth | 0;\n  maxHeight = maxHeight | 0;\n\n  if (width <= 0 || height <= 0 || maxWidth <= 0 || maxHeight <= 0) {\n    return null;\n  }\n\n  if (forceSquare) {\n    maxWidth = maxHeight = Math.min(maxWidth, maxHeight);\n  }\n\n  const scale = Math.min(\n    Math.min(width, maxWidth) / width,\n    Math.min(height, maxHeight) / height\n  );\n\n  const size = {\n    dstWidth: (width * scale) | 0,\n    dstHeight: (height * scale) | 0,\n  };\n\n  if (forceSquare) {\n    // Also calculate parameters for making the image square.\n    size.dstWidth = size.dstHeight = Math.min(size.dstWidth, size.dstHeight);\n    size.srcWidth = size.srcHeight = Math.min(width, height);\n    size.xoffset = ((width - size.srcWidth) / 2) | 0;\n    size.yoffset = ((height - size.srcWidth) / 2) | 0;\n  } else {\n    size.xoffset = size.yoffset = 0;\n    size.srcWidth = width;\n    size.srcHeight = height;\n  }\n  return size;\n}\n\n// Ensure file's extension matches mime content type\nexport function fileNameForMime(fname, mime) {\n  const idx = SUPPORTED_IMAGE_FORMATS.indexOf(mime);\n  if (idx < 0 || !fname) {\n    // Unknown mime or empty name.\n    return fname;\n  }\n  const ext = MIME_EXTENSIONS[idx];\n\n  const at = fname.lastIndexOf('.');\n  if (at >= 0) {\n    fname = fname.substring(0, at);\n  }\n  return fname + '.' + ext;\n}\n\n// Scale uploaded image to fit under certain dimensions and byte size, optionally constraining to a square.\n// On success calls onSuccess callback with the scaled image as Blob.\nexport function imageScaled(fileOrBlob, maxWidth, maxHeight, maxSize, forceSquare, onSuccess, onError) {\n  const img = new Image();\n  img.crossOrigin = 'Anonymous';\n  img.onerror = function(err) {\n    onError(\"Image format unrecognized\");\n  }\n  img.onload = async function() {\n    // Once the image is loaded, the URL is no longer needed.\n    URL.revokeObjectURL(img.src);\n\n    // Calculate the desired image dimensions.\n    const dim = fitImageSize(this.width, this.height, maxWidth, maxHeight, forceSquare);\n    if (!dim) {\n      onError(\"Invalid image\");\n      return;\n    }\n    let canvas = document.createElement('canvas');\n    canvas.width = dim.dstWidth;\n    canvas.height = dim.dstHeight;\n    let ctx = canvas.getContext('2d');\n    ctx.imageSmoothingEnabled = true;\n    ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n      0, 0, dim.dstWidth, dim.dstHeight);\n\n    const mime = SUPPORTED_IMAGE_FORMATS.includes(fileOrBlob.type) ? fileOrBlob.type : 'image/jpeg';\n    // Generate blob to check size of the image.\n    let blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    if (!blob) {\n      onError(\"Unsupported image format\");\n      return;\n    }\n\n    // Ensure the image is not too large. Shrink the image keeping the aspect ratio.\n    // Do nothing if maxsize is <= 0.\n    while (maxSize > 0 && blob.length > maxSize) {\n      dim.dstWidth = (dim.dstWidth * 0.70710678118) | 0;\n      dim.dstHeight = (dim.dstHeight * 0.70710678118) | 0;\n      canvas.width = dim.dstWidth;\n      canvas.height = dim.dstHeight;\n      ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n        0, 0, dim.dstWidth, dim.dstHeight);\n      blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    }\n\n    canvas = null;\n    onSuccess(mime, blob, dim.dstWidth, dim.dstHeight, fileNameForMime(fileOrBlob.name, mime));\n  };\n  img.src = URL.createObjectURL(fileOrBlob);\n}\n\n// Scale and crop image according to specified dimensions.\n// The coordinates are in unscaled image pixels, i.e. cut the rectangle first then scale it.\nexport function imageCrop(mime, objURL, left, top, width, height, scale, onSuccess, onError) {\n  const img = new Image();\n  img.crossOrigin = 'Anonymous';\n  img.onerror = function(err) {\n    onError(\"Image format unrecognized\");\n  }\n  img.onload = async function() {\n    // Once the image is loaded, the URL is no longer needed.\n    URL.revokeObjectURL(img.src);\n\n    let canvas = document.createElement('canvas');\n    canvas.width = width * scale;\n    canvas.height = height * scale;\n    let ctx = canvas.getContext('2d');\n    ctx.imageSmoothingEnabled = true;\n    ctx.drawImage(this, left, top, width, height, 0, 0, canvas.width, canvas.height);\n\n    mime = SUPPORTED_IMAGE_FORMATS.includes(mime) ? mime : 'image/jpeg';\n    // Generate blob to check size of the image.\n    let blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    if (!blob) {\n      onError(\"Unsupported image format\");\n      return;\n    }\n    // Allow GC.\n    canvas = null;\n    onSuccess(mime, blob, width, height);\n  };\n  img.src = objURL;\n}\n\n// Convert File to base64 string.\nexport function fileToBase64(file, onSuccess) {\n  const reader = new FileReader();\n  reader.addEventListener('load', function() {\n    onSuccess(file.type, reader.result.split(',')[1], file.name);\n  });\n  reader.readAsDataURL(file);\n}\n\n// Convert Blob to base64 string.\nexport function blobToBase64(blob, onSuccess) {\n  const reader = new FileReader();\n  reader.addEventListener('load', function() {\n    onSuccess(blob.type, reader.result.split(',')[1]);\n  });\n  reader.readAsDataURL(blob);\n}\n\n// File pasted from the clipboard. It's either an inline image or a file attachment.\n// FIXME: handle large files out of band.\nexport function filePasted(event, onImageSuccess, onAttachmentSuccess, onError) {\n  var items = (event.clipboardData || event.originalEvent.clipboardData || {}).items;\n  for (var i in items) {\n    var item = items[i];\n    if (item.kind === 'file') {\n      var file = item.getAsFile();\n      if (!file) {\n        console.error(\"Failed to get file object from pasted file item\", item.kind, item.type);\n        continue;\n      }\n      if (file.type && file.type.split('/')[0] == 'image') {\n        // Handle inline image\n        if (file.size > MAX_INBAND_ATTACHMENT_SIZE || SUPPORTED_IMAGE_FORMATS.indexOf(file.type) < 0) {\n          imageFileScaledToBase64(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, false, onImageSuccess, onError);\n        } else {\n          imageFileToBase64(file, onImageSuccess, onError);\n        }\n      } else {\n        // Handle file attachment\n        fileToBase64(file, onAttachmentSuccess, onError)\n      }\n      // Indicate that the pasted data contains a file.\n      return true;\n    }\n  }\n  // No file found.\n  return false;\n}\n\n// Get mime type from data URL header.\nexport function getMimeType(header) {\n  var mime = /^data:(image\\/[-+a-z0-9.]+);base64/.exec(header);\n  return (mime && mime.length > 1) ? mime[1] : null;\n}\n\n// Given length of a binary object in bytes, calculate the length after\n// base64 encoding.\nexport function base64EncodedLen(n) {\n  return Math.floor((n + 2) / 3) * 4;\n}\n\n// Given length of a base64-encoded object, calculate decoded size of the\n// pbject in bytes.\nexport function base64DecodedLen(n) {\n  return Math.floor(n / 4) * 3;\n}\n\n// Re-encode string to standard base64 encoding with padding.\n// The string may be base64-URL encoded without the padding.\nexport function base64ReEncode(str) {\n  if (str) {\n    str = str.replace(/-/g, '+').replace(/_/g, '/');\n    try {\n      str = btoa(atob(str));\n    } catch(err) {\n      console.error(\"Failed to base64 re-encode string.\", err);\n      str = null;\n    }\n  }\n  return str;\n}\n","// ContactList: component for showing a list of contacts,\n// such as a list of group members in a group chat.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { Drafty } from 'tinode-sdk';\nimport Tinode from 'tinode-sdk';\n\nimport Contact from './contact.jsx';\nimport ContactAction from './contact-action.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nimport { MESSAGE_PREVIEW_LENGTH } from '../config.js';\n\nconst messages = defineMessages({\n  badge_you: {\n    id: 'badge_you',\n    defaultMessage: 'you',\n    description: 'Badge for indicating the current user'\n  },\n  badge_owner: {\n    id: 'badge_owner',\n    defaultMessage: 'owner',\n    description: 'Badge for indicating the owner'\n  }\n});\n\nclass ContactList extends React.Component {\n  render() {\n    const { formatMessage } = this.props.intl;\n    const showCheckmark = Array.isArray(this.props.topicSelected);\n    const contactNodes = [];\n    let contactsCount = 0;\n    if (this.props.contacts && this.props.contacts.length > 0) {\n      this.props.contacts.map((c) => {\n        if (c.action) {\n          // Action item\n          contactNodes.push(\n            <ContactAction\n              title={c.title} action={c.action} values={c.values}\n              key={c.action}\n              onAction={this.props.onAction}\n              />);\n        } else {\n          // Normal contact\n          const key = this.props.showMode ? c.user : (c.topic || c.user);\n          // If filter function is provided, filter out the items\n          // which don't satisfy the condition.\n          if (this.props.filterFunc && this.props.filter) {\n            const filterOn = [key];\n            if (c.private && c.private.comment) {\n              filterOn.push(('' + c.private.comment).toLowerCase());\n            }\n            if (c.public && c.public.fn) {\n              filterOn.push(('' + c.public.fn).toLowerCase());\n            }\n            if (!this.props.filterFunc(this.props.filter, filterOn)) {\n              return;\n            }\n          }\n\n          const isChannel = Tinode.isChannelTopicName(key);\n          const selected = showCheckmark ?\n            (this.props.topicSelected.indexOf(key) > -1) :\n            (this.props.topicSelected === key);\n          const badges = [];\n          if (this.props.showMode) {\n            if (key == this.props.myUserId) {\n              badges.push({name: formatMessage(messages.badge_you), color: 'green'});\n            }\n            if (c.acs && c.acs.isOwner()) {\n              badges.push({name: formatMessage(messages.badge_owner), color: 'blue'});\n            }\n          }\n\n          const comment = Array.isArray(c.private) ?\n            c.private.join(',') : (c.private ? c.private.comment : null);\n          let preview;\n          let deliveryStatus;\n          if (!this.props.showMode && c.latestMessage) {\n            const msg = c.latestMessage(true);\n            if (msg) {\n              deliveryStatus = msg._status || c.msgStatus(msg, true);\n              preview = typeof msg.content == 'string' ?\n                msg.content.substr(0, MESSAGE_PREVIEW_LENGTH) :\n                Drafty.preview(msg.content, MESSAGE_PREVIEW_LENGTH);\n            }\n          }\n          contactNodes.push(\n            <Contact\n              tinode={this.props.tinode}\n              title={c.public ? c.public.fn : null}\n              avatar={makeImageUrl(c.public ? c.public.photo : null)}\n              comment={comment}\n              preview={preview}\n              received={deliveryStatus}\n              unread={this.props.showUnread ? c.unread : 0}\n              now={c.online && this.props.connected}\n              acs={c.acs}\n              showMode={this.props.showMode}\n              badges={badges}\n              showCheckmark={showCheckmark}\n              selected={selected}\n              showOnline={this.props.showOnline && !isChannel}\n              isChannel={isChannel}\n              onSelected={this.props.onTopicSelected}\n              showContextMenu={this.props.showContextMenu}\n              isVerified={c.trusted && c.trusted.verified}\n              isStaff={c.trusted && c.trusted.staff}\n              isDangerous={c.trusted && c.trusted.danger}\n              item={key}\n              index={contactNodes.length}\n              key={key} />\n          );\n          contactsCount ++;\n        }\n      }, this);\n    }\n\n    return (\n      <div className={this.props.noScroll ? null : \"scrollable-panel\"}>\n        {contactsCount == 0 ?\n          <div className=\"center-medium-text\"\n            dangerouslySetInnerHTML={{__html: this.props.emptyListMessage}} />\n          :\n          null\n        }\n        {contactNodes.length > 0 ?\n          <ul className=\"contact-box\">\n            {contactNodes}\n          </ul>\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ContactList);\n","// The X menu to be displayed in title bars.\nimport React from 'react';\n\nexport default class MenuCancel extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n        <i className=\"material-icons\">close</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nimport MenuCancel from './menu-cancel.jsx';\n\nexport default class ErrorPanel extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      show: false,\n    };\n\n    this.hide = this.hide.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.level !== this.props.level) {\n      this.setState({\n        show: !(!this.props.level)\n      });\n    }\n  }\n\n  hide() {\n    this.setState({show: false});\n    if (this.props.onClearError) {\n      this.props.onClearError();\n    }\n  }\n\n  render() {\n    const icons = {err: 'error', warn: 'warning', info: 'info'}\n    const level = icons[this.props.level] || '';\n    const className = 'info-box ' + level;\n    return (\n      <div className={className}>\n        <div className=\"icon\"><i className=\"material-icons\">{level}</i></div>\n        <span>\n          {this.props.text}\n          {this.props.action ?\n            <>\n              &#32;<a href=\"#\"\n                style={{ whiteSpace: 'nowrap' }}\n                onClick={(e) => {e.preventDefault(); this.props.action();}}>\n                {this.props.actionText}\n              </a>\n            </>\n          : null}\n        </span>\n        <div className=\"cancel\"><MenuCancel onCancel={this.hide} /></div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\n\nexport default class Chip extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel(this.props.topic, this.props.index);\n  }\n\n  render() {\n    const title = this.props.title || this.props.topic;\n    const className = this.props.invalid ? 'chip invalid' : 'chip';\n    return (\n      <div className={className}>\n        {this.props.noAvatar ?\n          <span className=\"spacer\" /> :\n          <div className=\"avatar-box\">\n            <LetterTile\n              tinode={this.props.tinode}\n              avatar={this.props.avatar || true}\n              topic={this.props.topic}\n              title={this.props.title} />\n          </div>\n        }\n        <span>{title}</span>\n        {this.props.onCancel && !this.props.required ?\n          <a href=\"#\" onClick={this.handleCancel} >&times;</a>\n          : <span className=\"spacer\" />}\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport Chip from './chip.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n/* BEGIN ChipInput: group membership widget */\nexport default class ChipInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = ChipInput.deriveStateFromProps(props);\n    this.state.input = '';\n    this.state.focused = false;\n\n    this.handleTextInput = this.handleTextInput.bind(this);\n    this.removeChipAt = this.removeChipAt.bind(this);\n    this.handleChipCancel = this.handleChipCancel.bind(this);\n    this.handleFocusGained = this.handleFocusGained.bind(this);\n    this.handleFocusLost = this.handleFocusLost.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  static deriveStateFromProps(props) {\n    return {\n      placeholder: props.chips ? '' : props.prompt,\n      sortedChips: ChipInput.sortChips(props.chips, props.staticMembers),\n      chipIndex: ChipInput.indexChips(props.chips)\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chips != this.props.chips ||\n      prevProps.staticMembers != this.props.staticMembers ||\n      prevProps.prompt != this.props.prompt) {\n      this.setState(ChipInput.deriveStateFromProps(this.props));\n    }\n    if (!prevState || this.props.chips.length > prevState.sortedChips.length) {\n      this.setState({input: ''});\n    }\n  }\n\n  // Map chip index to user name\n  static indexChips(chips) {\n    const index = {};\n    let count = 0;\n    chips.map((item) => {\n      index[item.user] = count;\n      count ++;\n    });\n    return index;\n  }\n\n  // Have non-removable chips appear before all other chips.\n  static sortChips(chips, keep) {\n    const required = [];\n    const normal = [];\n    chips.map((item) => {\n      if (keep && keep.includes(item.user)) {\n        required.push(item);\n      } else {\n        normal.push(item);\n      }\n    });\n    return required.concat(normal);\n  }\n\n  handleTextInput(e) {\n    this.setState({input: e.target.value});\n    if (this.props.filterFunc) {\n      this.props.filterFunc(e.target.value);\n    }\n  }\n\n  removeChipAt(idx) {\n    const removed = this.state.sortedChips[idx];\n    this.props.onChipRemoved(removed.user, this.state.chipIndex[removed.user]);\n  }\n\n  handleChipCancel(item, idx) {\n    this.removeChipAt(idx);\n  }\n\n  handleFocusGained() {\n    this.setState({focused: true});\n  }\n\n  handleFocusLost() {\n    this.setState({focused: false});\n    if (this.props.onFocusLost) {\n      this.props.onFocusLost(this.state.input);\n    }\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Backspace') {\n      if (this.state.input.length == 0 && this.state.sortedChips.length > 0) {\n        const at = this.state.sortedChips.length - 1;\n        if (this.state.sortedChips[at].user !== this.props.staticMembers) {\n          this.removeChipAt(at);\n        }\n      }\n    } else if (e.key === 'Enter') {\n      if (this.props.onEnter) {\n        this.props.onEnter(this.state.input);\n      }\n    } else if (e.key === 'Escape') {\n      if (this.props.onCancel) {\n        this.props.onCancel();\n      }\n    }\n  }\n\n  render() {\n    const chips = [];\n    let count = 0;\n    const staticMembers = this.props.staticMembers || [];\n    this.state.sortedChips.map((item) => {\n      chips.push(\n        <Chip\n          tinode={this.props.tinode}\n          onCancel={this.handleChipCancel}\n          avatar={makeImageUrl(item.public ? item.public.photo : null)}\n          title={item.public ? item.public.fn : undefined}\n          noAvatar={this.props.avatarDisabled}\n          topic={item.user}\n          required={staticMembers.includes(item.user)}\n          invalid={item.invalid}\n          index={count}\n          key={item.user} />\n      );\n      count++;\n    });\n    const className = \"chip-input\" + (this.state.focused ? ' focused' : '');\n    const autoFocus = !(this.props.tabIndex > 0);\n    return (\n      <div className={className}>\n        {chips}\n        <input type=\"text\"\n          placeholder={this.state.placeholder}\n          onChange={this.handleTextInput}\n          onFocus={this.handleFocusGained}\n          onBlur={this.handleFocusLost}\n          onKeyDown={this.handleKeyDown}\n          value={this.state.input}\n          tabIndex={this.props.tabIndex}\n          autoFocus={autoFocus} />\n      </div>\n    );\n  }\n};\n","// GroupMembers: control for managing a list of group members.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\nimport ContactList from './contact-list.jsx';\n\nconst messages = defineMessages({\n  no_contacts: {\n    id: 'no_contacts',\n    defaultMessage: 'You have no contacts :-(',\n    description: 'Shown in ContactsView when the user has no contacts'\n  },\n  contacts_not_found_short: {\n    id: 'contacts_not_found_short',\n    defaultMessage: \"No contacts match ''{query}''\",\n    description: 'Shown in ContactsView when search returned no results'\n  }\n});\n\nclass GroupManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Array of topic members\n      members: props.members,\n      index: GroupManager.indexMembers(props.members),\n      staticMembers: GroupManager.staticMembers(props.members, props.keepInitialMembers, props.requiredMember),\n      contactFilter: '',\n      noContactsMessage: props.intl.formatMessage(messages.no_contacts),\n      selectedContacts: GroupManager.selectedContacts(props.members)\n    };\n\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleMemberRemoved = this.handleMemberRemoved.bind(this);\n    this.handleContactFilter = this.handleContactFilter.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static indexMembers(members) {\n    let index = {};\n    members.map((m) => {\n      index[m.user] = {delta: 0, present: true}; // Delta: 0 unchanged, +1 added, -1 removed\n    });\n    return index;\n  }\n\n  static staticMembers(members, keepInitial, requiredMember) {\n    let stat = [];\n    members.map((m) => {\n      if (keepInitial || m.user == requiredMember) {\n        stat.push(m.user);\n      }\n    });\n    return stat;\n  }\n\n  static selectedContacts(members) {\n    let sel = [];\n    members.map((m) => {\n      sel.push(m.user);\n    });\n    return sel;\n  }\n\n  handleContactSelected(userId, index) {\n    let status = this.state.index[userId];\n    if (status) {\n      if (status.present) {\n        // Prevent duplicate members\n        return;\n      }\n      status.delta += 1;\n      status.present = true;\n    } else {\n      status = {delta: 1, present: true};\n    }\n\n    let m = this.state.members.slice();\n    m.push(this.props.contacts[index]);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleMemberRemoved(userId, index) {\n    const status = this.state.index[userId];\n    if (!status || !status.present) {\n      return;\n    }\n    status.present = false;\n    status.delta -= 1;\n\n    let m = this.state.members.slice();\n    m.splice(index, 1);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleContactFilter(val) {\n    const {formatMessage} = this.props.intl;\n    const msg = !val ?\n      formatMessage(messages.no_contacts) :\n      formatMessage(messages.contacts_not_found_short, {query: val});\n\n    this.setState({contactFilter: val, noContactsMessage: msg});\n  }\n\n  static doContactFiltering(filter, values) {\n    if (filter) {\n      for (let i=0; i<values.length; i++) {\n        if (values[i].indexOf(filter) >= 0) {\n          return true;\n        }\n      }\n      return false;\n    }\n    return true;\n  }\n\n  handleSubmit() {\n    var instance = this;\n    var members = [];\n    var added = [];\n    var removed = [];\n\n    var keys = Object.keys(this.state.index);\n    keys.map(function(k) {\n      if (instance.state.index[k].present) {\n        members.push(k);\n      }\n\n      if (instance.state.index[k].delta > 0) {\n        added.push(k);\n      } else if (instance.state.index[k].delta < 0) {\n        removed.push(k);\n      }\n    });\n    this.props.onSubmit(members, added, removed);\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <div id=\"group-manager\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_group_members\" defaultMessage=\"Group Members\" description=\"Section title\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ChipInput\n            tinode={this.props.tinode}\n            chips={this.state.members}\n            staticMembers={this.state.staticMembers}\n            prompt=\"add members\"\n            filterFunc={this.handleContactFilter}\n            onChipRemoved={this.handleMemberRemoved} />\n        </div>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_all_contacts\" defaultMessage=\"All Contacts\"\n              description=\"Section title [All Contacts]\" />\n          </label>\n        </div>\n        <ContactList\n          tinode={this.props.tinode}\n          contacts={this.props.contacts}\n          myUserId={this.props.myUserId}\n          topicSelected={this.state.selectedContacts}\n          filter={this.state.contactFilter}\n          filterFunc={GroupManager.doContactFiltering}\n          emptyListMessage={this.state.noContactsMessage}\n          showOnline={false}\n          showUnread={false}\n          onTopicSelected={this.handleContactSelected} />\n        <div id=\"group-manager-buttons\" className=\"panel-form-row\">\n          <button className=\"secondary\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(GroupManager);\n","// PermissionsEditor: Component for editing permissions\n// <PermissionsEditor mode=\"JWROD\" skip=\"O\" onChange={this.handleCheckboxTest} />\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport CheckBox from './checkbox.jsx';\nimport Contact from './contact.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n// Translatable permission names.\nconst messages = defineMessages({\n  joiner: {\n    id: 'permission_join',\n    defaultMessage: \"Join ({val})\",\n    description: 'Name of J permission'\n  },\n  reader: {\n    id: 'permission_read',\n    defaultMessage: \"Read ({val})\",\n    description: 'Name of R permission'\n  },\n  writer: {\n    id: 'permission_write',\n    defaultMessage: \"Write ({val})\",\n    description: 'Name of W permission'\n  },\n  preser: {\n    id: 'permission_pres',\n    defaultMessage: \"Get notified ({val})\",\n    description: 'Name of P permission'\n  },\n  approver: {\n    id: 'permission_admin',\n    defaultMessage: \"Approve ({val})\",\n    description: 'Name of A permission'\n  },\n  sharer: {\n    id: 'permission_share',\n    defaultMessage: \"Share ({val})\",\n    description: 'Name of S permission'\n  },\n  deleter: {\n    id: 'permission_delete',\n    defaultMessage: \"Delete ({val})\",\n    description: 'Name of D permission'\n  },\n  owner: {\n    id: 'permission_owner',\n    defaultMessage: \"Owner ({val})\",\n    description: 'Name of O permission'\n  }\n});\n\nclass PermissionsEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mode: (props.mode || '').replace('N', '')\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(val) {\n    let mode = this.state.mode;\n    const idx = mode.indexOf(val);\n    if (idx == -1) {\n      mode += val;\n    } else {\n      mode = mode.replace(val, '');\n    }\n    this.setState({mode: mode});\n  }\n\n  handleSubmit() {\n    // Normalize string, otherwise cannot check if mode has changed.\n    const mode = (this.state.mode || 'N').split('').sort().join('');\n    const before = (this.props.mode || 'N').split('').sort().join('')\n    if (mode !== before) {\n      this.props.onSubmit(mode);\n    } else {\n      this.props.onCancel();\n    }\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const all = 'JRWPASDO';\n    const names = {\n      'J': formatMessage(messages.joiner, {val: 'J'}),\n      'R': formatMessage(messages.reader, {val: 'R'}),\n      'W': formatMessage(messages.writer, {val: 'W'}),\n      'P': formatMessage(messages.preser, {val: 'P'}),\n      'A': formatMessage(messages.approver, {val: 'A'}),\n      'S': formatMessage(messages.sharer, {val: 'S'}),\n      'D': formatMessage(messages.deleter, {val: 'D'}),\n      'O': formatMessage(messages.owner, {val: 'O'})\n    };\n\n    let skip = this.props.skip || '';\n    let mode = this.state.mode;\n    let compare = (this.props.compare || '').replace('N', '');\n    let items = [];\n    for (let i=0; i<all.length; i++) {\n      let c = all.charAt(i);\n      if (skip.indexOf(c) >= 0 && mode.indexOf(c) < 0) {\n        // Permission is marked as inactive: hide unchecked permissions, disable checked permissions\n        continue;\n      }\n      items.push(\n        <tr key={c}>\n          <td>{names[c]}</td>\n          <td className=\"checkbox\">{skip.indexOf(c) < 0 ?\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} onChange={this.handleChange}/>\n            :\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} />\n          }</td>{this.props.compare ? <td className=\"checkbox\">\n            <CheckBox name={c} checked={(compare.indexOf(c) >= 0)}/>\n          </td> : null}\n        </tr>\n      );\n    }\n\n    return (\n      <div className=\"panel-form-column\">\n        {this.props.userTitle ?\n          <ul className=\"contact-box small\"><Contact\n            tinode={this.props.tinode}\n            item={this.props.item}\n            title={this.props.userTitle}\n            small={true}\n            avatar={makeImageUrl(this.props.userAvatar ? this.props.userAvatar : null)} /></ul> : null}\n        <label className=\"small\"><FormattedMessage id=\"title_permissions\"\n          defaultMessage=\"Permissions\" description=\"Section title\"/></label>\n        <table className=\"permission-editor\">\n        {this.props.compare ?\n          <thead><tr>\n            <th></th><th>{this.props.modeTitle}</th>\n            <th>{this.props.compareTitle}</th>\n          </tr></thead> :\n          null}\n        <tbody>\n          {items}\n        </tbody></table>\n        <br />\n        <div className=\"dialog-buttons\">\n          <button className=\"outline\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(PermissionsEditor);\n","// Image zoom and crop widget.\n\nimport React from 'react';\n\nconst DEFAULT_MAX_ZOOM = 2.5;\n\nexport default class Cropper extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Coordinates of the top left corner of the image in container coordinates.\n      panX: 0,\n      panY: 0,\n      // Origin of the zoom in image coordinates.\n      originX: 0,\n      originY: 0,\n      // Zoom scale.\n      zoom: 1,\n      // Zoom min and max.\n      minZoom: 0,\n      maxZoom: DEFAULT_MAX_ZOOM,\n    };\n\n    // References to DOM elements for hooking up events and getting screen dimensions.\n    // The transparent element which captures mouse moves (moves with the image).\n    this.overlay = React.createRef();\n    // The image cutout window or view port (static).\n    this.cutout = React.createRef();\n    // Scaled and translated image preview.\n    this.preview = React.createRef();\n    // The main container (static).\n    this.boundingBox = React.createRef();\n\n    // The original image width and height before any scaling.\n    this.imageWidth = 0;\n    this.imageHeight = 0;\n\n    // Mouse position when dragging.\n    this.mouseX = 0\n    this.mouseY = 0;\n    // Length of the previous mouse move when dragging.\n    this.prevDistance = 0;\n\n    // Bounding rectangles of static elements.\n    this.cutoutRect = {};\n    this.bBoxRect = {};\n    // Center of the bounding box.\n    this.originX = 0;\n    this.originY = 0;\n\n    this.initScaling = this.initScaling.bind(this);\n    this.onZoom = this.onZoom.bind(this);\n    this.handleZoom = this.handleZoom.bind(this);\n    this.mouseDown = this.mouseDown.bind(this);\n    this.mouseUp = this.mouseUp.bind(this);\n    this.mouseMove = this.mouseMove.bind(this);\n    this.mouseTouch = this.mouseTouch.bind(this);\n    this.positionAll = this.positionAll.bind(this);\n    this.translate = this.translate.bind(this);\n  }\n\n  componentDidMount() {\n    this.overlay.current.addEventListener('mousedown', this.mouseDown, { passive: true });\n    this.overlay.current.addEventListener('touchstart', this.mouseDown, { passive: true });\n\n    // The rectangle position is in viewport coordinates.\n    this.bBoxRect = this.boundingBox.current.getBoundingClientRect();\n    // Center of the bounding box in container coordinates.\n    this.originX = this.bBoxRect.width / 2;\n    this.originY = this.bBoxRect.height / 2;\n\n    // The rectangle position is in viewport coordinates.\n    this.cutoutRect = this.cutout.current.getBoundingClientRect();\n  }\n\n  componentWillUnmount() {\n    this.overlay.current.removeEventListener('mousedown', this.mouseDown);\n    this.overlay.current.removeEventListener('touchstart', this.mouseDown);\n  }\n\n  // Position all elements.\n  positionAll(panX, panY, zoom) {\n    // Zoom origin in image preview coordinates.\n    this.setState({\n      panX: panX,\n      panY: panY,\n      zoom: zoom,\n      originX: this.originX - panX,\n      originY: this.originY - panY,\n    });\n\n    // Pass cut out coordinates to caller.\n    const left = (this.originX - panX) * zoom - this.originX;\n    const top = (this.originY - panY) * zoom - this.originY;\n    this.props.onChange(\n      (left + this.cutoutRect.left - this.bBoxRect.left) / zoom,\n      (top + this.cutoutRect.top - this.bBoxRect.top) / zoom,\n      this.cutoutRect.width / zoom,\n      this.cutoutRect.height / zoom,\n      zoom);\n  }\n\n  // Check if new location is within the limits.\n  static checkBound(currPan, img, cutout, delta) {\n    let nextDiff = Math.min(0, cutout[0] - img[0] - delta, img[1] - cutout[1] + delta);\n    if (nextDiff == 0) {\n      // Cutout is completely within the image.\n      currPan += delta;\n    } else if (Math.min(0, cutout[0] - img[0], img[1] - cutout[1]) < nextDiff) {\n      // Cutout is outside of the range but closer to the bound.\n      currPan += delta;\n    }\n    return currPan;\n  }\n\n  initScaling() {\n    // Initialize components.\n    const imgRect = this.preview.current.getBoundingClientRect();\n\n    this.imageWidth = imgRect.width;\n    this.imageHeight = imgRect.height;\n\n    // Set zoom slider's min and max values. Make sure the scaled image cannot be smaller than the cutout.\n    const minZoom = Math.max(this.cutoutRect.width / imgRect.width, this.cutoutRect.height / imgRect.height);\n    this.setState({\n      minZoom: minZoom,\n      maxZoom: Math.max(DEFAULT_MAX_ZOOM, minZoom + 1)\n    });\n\n    // Initial zoom level fills the bounding box at the smallest image dimension and overflows the largest, i.e. \"fill\" not \"fit\".\n    const zoom = Math.max(this.bBoxRect.width / imgRect.width, this.bBoxRect.height / imgRect.height);\n    // Converting from viewport coordinates to container, then panning.\n    const panX = this.cutoutRect.left - this.bBoxRect.left -\n      (imgRect.width - this.cutoutRect.width) / 2;\n    const panY = this.cutoutRect.top - this.bBoxRect.top -\n      (imgRect.height - this.cutoutRect.height) / 2;\n\n    this.positionAll(panX, panY, zoom);\n  }\n\n  onZoom(e) {\n    this.handleZoom(e.target.value);\n  }\n\n  handleZoom(zoom) {\n    let panX = this.state.panX;\n    let panY = this.state.panY;\n\n    // Ensure that the image at the new zoom is not outside of the cutout boundaries.\n    // Calculate image coordinates at the new zoom.\n    const imgLeft = this.originX - (this.originX - panX) * zoom;\n    const imgRight = imgLeft + this.imageWidth * zoom;\n    // Cutout in the same coordinates as the image.\n    const coLeft = this.cutoutRect.left - this.bBoxRect.left;\n    const coRight = coLeft + this.cutoutRect.width;\n    if (coLeft < imgLeft) {\n      panX -= imgLeft - coLeft;\n    } else if (coRight > imgRight) {\n      panX += coRight - imgRight;\n    }\n    const imgTop = this.originY - (this.originY - panY) * zoom;\n    const imgBottom = imgTop + this.imageHeight * zoom;\n    const coTop = this.cutoutRect.top - this.bBoxRect.top;\n    const coBottom = coTop + this.cutoutRect.height;\n    if (coTop < imgTop) {\n      panY -= imgTop - coTop;\n    } else if (coBottom > imgBottom) {\n      panY += coBottom - imgBottom;\n    }\n\n    this.positionAll(panX, panY, zoom);\n  }\n\n  mouseDown(e) {\n    if (e.touches) {\n      this.mouseX = e.touches[0].pageX;\n      this.mouseY = e.touches[0].pageY;\n    } else {\n      this.mouseX = e.pageX;\n      this.mouseY = e.pageY;\n    }\n\n    window.addEventListener('mousemove', this.mouseMove, { passive: false });\n    window.addEventListener('touchmove', this.mouseTouch, { passive: false });\n    window.addEventListener('mouseup', this.mouseUp, { passive: true });\n    window.addEventListener('touchend', this.mouseUp, { passive: true });\n    // Disable text selection in the entire document.\n    document.body.style['userSelect'] = 'none';\n  }\n\n  // Perform image panning.\n  translate(pageX, pageY) {\n    const dX = pageX - this.mouseX;\n    const dY = pageY - this.mouseY;\n\n    this.mouseX = pageX;\n    this.mouseY = pageY;\n\n    // Make sure the image is within the cutout window.\n    const imgRect = this.preview.current.getBoundingClientRect();\n\n    // Check if the new position is within the boundaries, and if not if it's closer to them.\n    let panX = Cropper.checkBound(this.state.panX, [imgRect.left, imgRect.right],\n      [this.cutoutRect.left, this.cutoutRect.right], dX);\n    let panY = Cropper.checkBound(this.state.panY, [imgRect.top, imgRect.bottom],\n      [this.cutoutRect.top, this.cutoutRect.bottom], dY);\n\n    this.positionAll(panX, panY, this.state.zoom);\n  }\n\n  // Image panning.\n  mouseMove(e) {\n    e.preventDefault();\n    this.translate(e.pageX, e.pageY);\n  }\n\n  mouseTouch(e) {\n    e.preventDefault();\n\n    if (e.touches.length == 1) {\n      this.translate(e.touches[0].pageX, e.touches[0].pageY);\n      return;\n    }\n\n    // Image zooming by pinching.\n    const [touch0, touch1] = e.touches;\n    const distance = Math.sqrt((touch0.pageX - touch1.pageX) * (touch0.pageX - touch1.pageX) +\n      (touch0.pageY - touch1.pageY) * (touch0.pageY - touch1.pageY));\n\n    if (!this.prevDistance) {\n        this.prevDistance = distance / this.state.zoom;\n    }\n\n    let scale = (distance / this.prevDistance);\n    this.handleZoom(Math.max(this.minZoom, Math.min(this.maxZoom, scale)));\n  }\n\n  mouseUp(e) {\n    window.removeEventListener('mousemove', this.mouseMove);\n    window.removeEventListener('touchmove', this.mouseTouch);\n    window.removeEventListener('mouseup', this.mouseUp);\n    window.removeEventListener('touchend', this.mouseUp);\n    // Re-enable text selection.\n    document.body.style['userSelect'] = '';\n\n    this.positionAll(this.state.panX, this.state.panY, this.state.zoom);\n  }\n\n  render() {\n    // transform3d: position and scale.\n    const t3d = `translate3d(${this.state.panX}px, ${this.state.panY}px, 0) scale(${this.state.zoom})`;\n    // transformOrigin: zoom origin.\n    const orig = `${this.state.originX}px ${this.state.originY}px`;\n\n    // Overlay position and size are exactly equal to the position and size of the transformed image\n    // except it uses different coordinates.\n    const overlay = {\n      top: `${this.originY - this.state.originY * this.state.zoom}px`,\n      left: `${this.originX - this.state.originX * this.state.zoom}px`,\n      width: `${this.imageWidth * this.state.zoom}px`,\n      height: `${this.imageHeight * this.state.zoom}px`\n    };\n    return (\n      <div className=\"cropper\">\n        <div className=\"bounding-box\" ref={this.boundingBox}>\n          <img src={this.props.source} className=\"preview\" alt=\"\"\n            style={{transform: t3d, transformOrigin: orig}} ref={this.preview} onLoad={this.initScaling} />\n          <div className=\"cutout circle\" ref={this.cutout} />\n          <div className=\"overlay\" style={overlay} ref={this.overlay} />\n        </div>\n        <div className=\"zoom-wrapper\">\n          <input type=\"range\" className=\"zoomer\"\n            step=\"0.001\" min={this.state.minZoom} max={this.state.maxZoom} value={this.state.zoom} onChange={this.onZoom} />\n        </div>\n      </div>\n    );\n  }\n}\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Cropper from './cropper.jsx';\nimport { imageCrop } from '../lib/blob-helpers.js';\n\nexport default class AvatarCrop extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      top: 0,\n      left: 0,\n      width: 0,\n      height: 0,\n      scale: 1\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  // Cut out in image coordinates and desired scale factor.\n  handleChange(left, top, width, height, scale) {\n    this.setState({\n      left: left,\n      top: top,\n      width: width,\n      height: height,\n      scale: scale\n    });\n  }\n\n  handleSubmit() {\n    imageCrop(this.props.mime, this.props.avatar,\n      this.state.left, this.state.top,\n      this.state.width, this.state.height,\n      this.state.scale,\n      (mime, blob, width, height) => {\n        this.props.onSubmit(mime, blob, width, height);\n      },\n      (err) => {\n        this.props.onError(err);\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <Cropper\n            source={this.props.avatar}\n            onChange={this.handleChange} />\n        </div>\n        <div className=\"dialog-buttons\">\n          {this.props.onCancel ?\n            <button className=\"secondary\" onClick={this.props.onCancel}>\n              <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n            </button>\n            : null}\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n","// Password with a visiblity toggle.\nimport React from 'react';\n\nexport default class VisiblePassword extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: this.props.value,\n      visible: false\n    };\n\n    this.handleVisibility = this.handleVisibility.bind(this);\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n    if (this.props.onChange) {\n      this.props.onChange(e);\n    }\n  }\n\n  handleVisibility(e) {\n    e.preventDefault();\n    this.setState({visible: !this.state.visible});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode == 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, visible: false});\n      if (this.props.onFinished) {\n        this.props.onFinished();\n      }\n    } else if (e.keyCode == 13) {\n      // Enter pressed\n      this.handleEditingFinished();\n    }\n  }\n\n  handleEditingFinished(e) {\n    if (e) {\n      let currentTarget = e.currentTarget;\n      setTimeout(() => {\n        if (!currentTarget.contains(document.activeElement)) {\n          if (this.props.onFinished) {\n            this.props.onFinished(this.state.value);\n          }\n        }\n      }, 0);\n    } else if (this.props.onFinished) {\n      this.props.onFinished(this.state.value.trim());\n    }\n  }\n\n  render() {\n    return (\n      <div tabIndex=\"-1\" className=\"group-focus\"\n        onBlur={this.handleEditingFinished}>\n        <input className=\"with-visibility\"\n          type={this.state.visible ? \"text\" : \"password\"}\n          value={this.state.value}\n          placeholder={this.props.placeholder}\n          required={this.props.required ? 'required' : ''}\n          autoFocus={this.props.autoFocus ? 'autoFocus' : ''}\n          autoComplete={this.props.autoComplete}\n          onChange={this.handeTextChange}\n          onKeyDown={this.handleKeyDown} />\n        <span onClick={this.handleVisibility}>\n          <i className=\"material-icons clickable light-gray\">\n            {this.state.visible ? 'visibility' : 'visibility_off'}\n          </i>\n        </span>\n      </div>\n    );\n  }\n}\n","// In-place text editor. Shows text with an icon which toggles it into an input field.\nimport React from 'react';\n\nimport VisiblePassword from './visible-password.jsx';\n\nexport default class InPlaceEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selfRef = React.createRef();\n\n    this.state = {\n      active: props.active,\n      initialValue: props.value || '',\n      value: props.value || ''\n    };\n\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleStartEditing = this.handleStartEditing.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n    this.handlePasswordFinished = this.handlePasswordFinished.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // If text has changed while in read mode, update text and discard changes.\n    // Ignore update if in edit mode.\n    const newValue = this.props.value || '';\n    if (prevState.initialValue != newValue && !prevState.active) {\n      this.setState({\n        initialValue: newValue,\n        value: newValue\n      });\n    }\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, active: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleEditingFinished(e);\n    }\n  }\n\n   handleStartEditing() {\n    if (!this.props.readOnly) {\n      this.setState({active: true}, () => {\n        if (this.selfRef.current) {\n          this.selfRef.current.focus();\n        }\n      });\n    }\n  }\n\n  handleEditingFinished(event) {\n    if (this.props.required && !event.target.checkValidity()) {\n      // Empty input\n      this.setState({value: this.props.value, active: false});\n      return;\n    }\n    this.setState({active: false});\n    const value = this.state.value.trim();\n    if ((value || this.props.value) && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  handlePasswordFinished(value) {\n    this.setState({active: false});\n    if (value && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  render() {\n    if (!this.state.active) {\n      let spanText = this.props.type == 'password' ? '••••••••' : this.state.value;\n      let spanClass = 'in-place-edit' + (this.props.readOnly ? ' disabled' : '');\n      if (!spanText) {\n        spanText = this.props.placeholder;\n        spanClass += ' placeholder';\n      }\n      if (!this.props.multiline || this.props.multiline == 1) {\n        spanClass += ' short';\n      }\n\n      return (<span className={spanClass} onClick={this.handleStartEditing}>\n        <span>{spanText}</span>\n      </span>);\n    }\n\n    let element;\n    const attr = {};\n    if (this.props.type == 'password') {\n      element = VisiblePassword;\n      attr.onFinished = this.handlePasswordFinished;\n    } else {\n      if (this.props.multiline > 1) {\n        element = 'textarea';\n        attr.rows = this.props.multiline;\n        attr.className = 'inplace-edit';\n      } else {\n        element = 'input';\n        attr.type = this.props.type || 'text';\n      }\n      attr.value = this.state.value;\n      attr.onChange = this.handeTextChange;\n      attr.onKeyDown = this.handleKeyDown;\n      attr.onBlur = this.handleEditingFinished;\n    }\n    attr.placeholder = this.props.placeholder;\n    attr.required = this.props.required ? 'required' : '';\n    attr.autoComplete = this.props.autoComplete;\n    attr.autoFocus = true;\n    attr.ref = this.selfRef;\n\n    return React.createElement(element, attr, null);\n  }\n};\n","// TagManager: edit topic or user tags.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\n\nimport { MAX_TAG_COUNT, MAX_TAG_LENGTH, MIN_TAG_LENGTH } from '../config.js';\nimport { arrayEqual } from '../lib/utils.js';\n\nexport default class TagManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tags: this.props.tags || [],\n      tagInput: '',\n      activated: this.props.activated\n    };\n\n    this.handleTagInput = this.handleTagInput.bind(this);\n    this.handleAddTag = this.handleAddTag.bind(this);\n    this.handleRemoveTag = this.handleRemoveTag.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const tags = nextProps.tags || [];\n    if (!arrayEqual(tags, prevState.tags) && !prevState.activated) {\n      return {tags: tags};\n    }\n    return null;\n  }\n\n  handleTagInput(text) {\n    this.setState({tagInput: text});\n    if (text.length > 0) {\n      const last = text[text.length-1];\n      if (text[0] == '\"') {\n        // This is a quoted string.\n        if (text.length > 1 && last == '\"') {\n          this.handleAddTag(text.substring(1, text.length-1));\n        }\n      } else if (last == ',' || last == ' ' || last == ';' || last == '\"') {\n        // User entered ',', ' ' or ';'\n        this.handleAddTag(text.substring(0, text.length-1).trim());\n      }\n    }\n  }\n\n  handleAddTag(tag) {\n    const maxTagCount = this.props.tinode.getServerLimit('maxTagCount', MAX_TAG_COUNT);\n\n    if (tag.length > 0 && this.state.tags.length < maxTagCount) {\n      const tags = this.state.tags.slice(0);\n      tags.push(tag);\n\n      this.setState({tags: tags, tagInput: ''});\n      if (this.props.onTagsChanged) {\n        this.props.onTagsChanged(tags);\n      }\n      return tags;\n    }\n    return this.state.tags;\n  }\n\n  handleRemoveTag(tag, index) {\n    const tags = this.state.tags.slice(0);\n    tags.splice(index, 1);\n    this.setState({tags: tags});\n    if (this.props.onTagsChanged) {\n      this.props.onTagsChanged(tags);\n    }\n  }\n\n  handleSubmit() {\n    // Add unprocessed input to tags, submit the list.\n    this.props.onSubmit(this.handleAddTag(this.state.tagInput.trim()));\n    this.setState({activated: false, tags: this.props.tags || []});\n  }\n\n  handleCancel() {\n    this.setState({activated: false, tagInput: '', tags: this.props.tags || []});\n    if (this.props.onCancel) {\n      this.props.onCancel();\n    }\n  }\n\n  render() {\n    const minTagLength = this.props.tinode.getServerLimit('minTagLength', MIN_TAG_LENGTH);\n    const maxTagLength = this.props.tinode.getServerLimit('maxTagLength', MAX_TAG_LENGTH);\n\n    let tags = [];\n    if (this.state.activated) {\n      this.state.tags.map((tag) => {\n        tags.push({user: tag, invalid: (tag.length < minTagLength || tag.length > maxTagLength)});\n      });\n    } else {\n      this.state.tags.map((tag) => {\n        tags.push(<span className=\"badge\" key={tags.length}>{tag}</span>);\n      });\n      if (tags.length == 0) {\n        tags = (\n          <i>\n            <FormattedMessage id=\"tags_not_found\" defaultMessage=\"No tags defined. Add some.\" description=\"\" />\n          </i>\n        );\n      }\n    }\n    return (\n      <div className=\"panel-form-column\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">{this.props.title}</label>\n        </div>\n        {this.state.activated ?\n        <div>\n          <FormattedMessage id=\"tags_editor_no_tags\" defaultMessage=\"Add some tags\"\n            description=\"Tag editor prompt when no tags are found.\">{\n            (add_tags_prompt) => <ChipInput\n              tinode={this.props.tinode}\n              chips={tags}\n              avatarDisabled={true}\n              prompt={add_tags_prompt}\n              tabIndex={this.props.tabIndex}\n              onEnter={this.handleAddTag}\n              onFocusLost={this.handleAddTag}\n              onCancel={this.handleCancel}\n              onChipRemoved={this.handleRemoveTag}\n              filterFunc={this.handleTagInput} />\n          }</FormattedMessage>\n          {this.props.onSubmit || this.props.onCancel ?\n            <div id=\"tag-manager-buttons\" className=\"dialog-buttons panel-form-row\">\n              <button className=\"outline\" onClick={this.handleCancel}>\n                <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n              </button>\n              <button className=\"primary\" onClick={this.handleSubmit}>\n                <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n              </button>\n            </div>\n          : null}\n        </div>\n        :\n        <div className=\"quoted\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.setState({activated: true});}}>\n            <i className=\"material-icons\">edit</i> &nbsp;<FormattedMessage id=\"title_manage_tags\" defaultMessage=\"Manage\"\n              description=\"Section title for the list of tags\" />\n          </a>\n          <>{tags}</>\n        </div>\n      }\n      </div>\n    );\n  }\n};\n","// Widget for editing topic description.\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarCrop from './avatar-crop.jsx';\nimport AvatarUpload from './avatar-upload.jsx';\nimport InPlaceEdit from './in-place-edit.jsx';\nimport TagManager from './tag-manager.jsx';\n\nimport { AVATAR_SIZE, MAX_AVATAR_BYTES, MAX_EXTERN_ATTACHMENT_SIZE,\n  MAX_INBAND_ATTACHMENT_SIZE, MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH } from '../config.js';\nimport { imageScaled, blobToBase64, makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, theCard } from '../lib/utils.js';\n\nexport default class TopicDescEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    const acs = topic.getAccessMode();\n    this.state = {\n      isMe: Tinode.isMeTopicName(this.props.topic),\n      owner: acs && acs.isOwner(),\n      fullName: topic.public ? topic.public.fn : undefined,\n      private: topic.private ? topic.private.comment : null,\n      description: topic.public ? topic.public.note : undefined,\n      avatar: makeImageUrl(topic.public ? topic.public.photo : null),\n      tags: topic.tags(),\n      newAvatar: null,\n      newAvatarMime: null,\n      previousOnTags: topic.onTagsUpdated\n    };\n\n    this.tnNewTags = this.tnNewTags.bind(this);\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\n    this.handleImageUpdated = this.handleImageUpdated.bind(this);\n    this.handleAvatarCropped = this.handleAvatarCropped.bind(this);\n    this.handlePrivateUpdate = this.handlePrivateUpdate.bind(this);\n    this.handleDescriptionUpdate = this.handleDescriptionUpdate.bind(this);\n    this.uploadAvatar = this.uploadAvatar.bind(this);\n    this.handleAvatarCropCancel = this.handleAvatarCropCancel.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n  }\n\n  componentDidMount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    topic.onTagsUpdated = this.tnNewTags;\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    topic.onTagsUpdated = this.state.previousOnTags;\n  }\n\n  tnNewTags(tags) {\n    this.setState({tags: tags});\n  }\n\n  handleFullNameUpdate(fn) {\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\n    if (fn && this.state.fullName !== fn) {\n      this.setState({fullName: fn});\n      this.props.onUpdateTopicDesc(this.props.topic, theCard(fn, null));\n    }\n  }\n\n  handlePrivateUpdate(comment) {\n    comment = comment.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.private !== comment) {\n      this.setState({private: comment});\n      this.props.onUpdateTopicDesc(this.props.topic, null, comment || Tinode.DEL_CHAR);\n    }\n  }\n\n  handleDescriptionUpdate(desc) {\n    desc = desc.trim().substring(0, MAX_TOPIC_DESCRIPTION_LENGTH);\n    if (desc) {\n      this.setState({description: desc});\n      this.props.onUpdateTopicDesc(this.props.topic, theCard(null, null, null, desc));\n    }\n  }\n\n  // AvatarUpload widget has changed the avatar: received a new file or deleted the avatar.\n  handleImageUpdated(mime, img) {\n    // This will show the AvatarCropView is img is not null.\n    this.setState({newAvatar: img, newAvatarMime: mime});\n    if (!img) {\n      // Deleting the avatar.\n      this.props.onUpdateTopicDesc(this.props.topic, theCard(null, Tinode.DEL_CHAR));\n    }\n  }\n\n  // AvatarCropView calls this method when the user has cropped the image.\n  handleAvatarCropped(mime, blob, width, height) {\n    const url = blob ? URL.createObjectURL(blob) : null;\n    this.setState({avatar: url, newAvatar: null, newAvatarMime: null});\n    if (blob) {\n      this.uploadAvatar(mime, blob, width, height);\n    }\n  }\n\n  // Utility method for converting cropped avatar blob to bytes for sending inband or\n  // for uploading it to the server out of band.\n  uploadAvatar(mime, blob, width, height) {\n    const readyToUpload = (mime, blob, width, height) => {\n      if (blob.size > MAX_AVATAR_BYTES) {\n        // Too large to send inband - uploading out of band and sending as a link.\n        const uploader = this.props.tinode.getLargeFileHelper();\n\n        this.setState({uploading: true});\n        uploader.upload(blob)\n          .then((url) => {\n            this.props.onUpdateTopicDesc(this.props.topic, theCard(null, url));\n          })\n          .catch((err) => {\n            this.props.onError(err, 'err');\n          })\n          .finally(() => {\n            this.setState({uploading: false});\n          });\n      } else {\n        this.setState({uploading: true});\n        // Convert blob to base64-encoded bits.\n        blobToBase64(blob, (unused, base64bits) => {\n          const du = makeImageUrl({data: base64bits, type: mime});\n          this.setState({source: du});\n          this.props.onUpdateTopicDesc(this.props.topic, theCard(null, du));\n          this.setState({uploading: false});\n        });\n      }\n    };\n\n    if (width > AVATAR_SIZE || height > AVATAR_SIZE || width != height) {\n      // Avatar is not square or too large even after cropping. Shrink it and make square.\n      imageScaled(blob, AVATAR_SIZE, AVATAR_SIZE, MAX_EXTERN_ATTACHMENT_SIZE, true,\n        readyToUpload,\n        (err) => {\n          this.props.onError(err, 'err');\n        });\n    } else {\n      readyToUpload(mime, blob, width, height);\n    }\n  }\n\n  handleAvatarCropCancel(img) {\n    this.setState({newAvatar: null, newAvatarMime: null});\n  }\n\n  handleTagsUpdated(tags) {\n    // Check if tags have actually changed.\n    if (arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      return;\n    }\n    this.props.onUpdateTags(tags);\n  }\n\n  render() {\n    if (this.state.newAvatar) {\n      return (\n        <AvatarCrop\n          avatar={this.state.newAvatar}\n          mime={this.state.newAvatarMime}\n          onSubmit={this.handleAvatarCropped}\n          onCancel={this.handleAvatarCropCancel}\n          onError={this.props.onError} />\n      );\n    }\n\n    const editable = this.state.isMe || this.state.owner;\n\n    return (\n      <>\n      <div className=\"panel-form-column\">\n        <center>\n          <AvatarUpload\n            tinode={this.props.tinode}\n            avatar={this.state.avatar}\n            readOnly={!editable}\n            uid={this.props.topic}\n            title={this.state.fullName}\n            onImageUpdated={this.handleImageUpdated}\n            onError={this.props.onError} />\n        </center>\n        {this.state.isMe ?\n          <div className=\"group\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n              description=\"Label for full name editing\" />\n            </label>\n            <div>\n              <FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n                description=\"Input placeholder for person's full name\">{\n              (full_name_placeholder) => <InPlaceEdit\n                placeholder={full_name_placeholder}\n                value={this.state.fullName}\n                required={true}\n                onFinished={this.handleFullNameUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n        :\n          <>\n            <div className=\"group\">\n              <div><label className=\"small\">\n                <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                  description=\"Label for editing topic name\" />\n              </label></div>\n              <div>\n                <InPlaceEdit\n                  placeholder={this.state.groupTopic ? \"Group name\" : <i>Unknown</i>}\n                  readOnly={!editable}\n                  value={this.state.fullName}\n                  required={true}\n                  onFinished={this.handleFullNameUpdate} />\n              </div>\n            </div>\n            <div className=\"group\">\n              <div>\n                <label className=\"small\">\n                  <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                    description=\"Label for editing 'private'\" />\n                </label>\n              </div>\n              <div>\n                <FormattedMessage id=\"private_editing_placeholder\"\n                  defaultMessage=\"Visible to you only\"\n                  description=\"Placeholder for editing 'private'\">{\n                  (private_placeholder) => <InPlaceEdit\n                    placeholder={private_placeholder}\n                    value={this.state.private}\n                    onFinished={this.handlePrivateUpdate} />\n                }</FormattedMessage>\n              </div>\n            </div>\n          </>\n        }\n        {editable || this.state.description ?\n          <div className=\"group\">\n            <div><label className=\"small\">\n              <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                description=\"Label for editing topic description\" />\n            </label></div>\n            <div>\n              <FormattedMessage id=\"description_editing_placeholder\"\n                defaultMessage=\"Description (optional)\"\n                description=\"Placeholder for editing topic description\">{\n                (private_placeholder) => <InPlaceEdit\n                  placeholder={private_placeholder}\n                  readOnly={!editable}\n                  value={this.state.description}\n                  multiline={2}\n                  onFinished={this.handleDescriptionUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n          : null\n        }\n      </div>\n      {editable ?\n        <>\n          <div className=\"hr\" />\n          <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (search & discovery)\"\n            description=\"Section title for TagManager\">{\n              (title_tag_manager) => <TagManager\n                tinode={this.props.tinode}\n                title={title_tag_manager}\n                activated={false}\n                tags={this.state.tags}\n                onSubmit={this.handleTagsUpdated} />\n          }</FormattedMessage>\n        </>\n        : null\n      }\n      </>\n    );\n  }\n};\n","// View for editing topic (including 'me' topic) parameters.\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport TopicDescEdit from '../widgets/topic-desc-edit.jsx';\n\nimport { arrayEqual, asEmail, asPhone } from '../lib/utils.js';\n\nexport default class TopicCommon extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    const acs = topic.getAccessMode();\n    this.state = {\n      isMe: this.props.topic == 'me',\n      owner: acs && acs.isOwner(),\n      credentials: (topic.getCredentials ? topic.getCredentials() : null) || [],\n      addCredActive: false,\n      addCredInvalid: false,\n      newCred: '',\n      tags: [],\n      previousTagsUpdated: undefined\n    };\n\n    this.onTagsUpdated = this.onTagsUpdated.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.tnCredsUpdated = this.tnCredsUpdated.bind(this);\n    this.handleCredChange = this.handleCredChange.bind(this);\n    this.handleCredKeyDown = this.handleCredKeyDown.bind(this);\n    this.handleCredEntered = this.handleCredEntered.bind(this);\n  }\n\n  // No need to separately handle component mount.\n  componentDidUpdate(props) {\n    const topic = this.props.tinode.getTopic(props.topic);\n    if (!topic) {\n      return;\n    }\n\n    topic.onCredsUpdated = this.tnCredsUpdated;\n\n    if (topic.onTagsUpdated != this.onTagsUpdated) {\n      if (topic.getType() == 'grp') {\n        this.previousTagsUpdated = topic.onTagsUpdated;\n        topic.onTagsUpdated = this.onTagsUpdated;\n      } else {\n        this.previousTagsUpdated = undefined;\n      }\n    }\n\n    if (this.state.topic != props.topic) {\n      this.setState({topic: props.topic});\n    }\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    topic.onCredsUpdated = undefined;\n    topic.onTagsUpdated = this.previousTagsUpdated;\n  }\n\n  tnCredsUpdated(creds) {\n    this.setState({credentials: creds || []});\n  }\n\n  handleCredChange(e) {\n    this.setState({newCred: e.target.value, addCredInvalid: false});\n  }\n\n  handleCredKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({newCred: '', addCredActive: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleCredEntered(e);\n    }\n  }\n\n  handleCredEntered(e) {\n    const value = this.state.newCred.trim();\n    if (!value) {\n      this.setState({addCredActive: false, addCredInvalid: false});\n      return;\n    }\n\n    let val = asPhone(value);\n    let method;\n    if (val) {\n      method = 'tel';\n    } else {\n      val = asEmail(value);\n      if (val) {\n        method = 'email';\n      }\n    }\n    if (method) {\n      this.props.onCredAdd(method, val);\n      this.setState({addCredActive: false, newCred: ''});\n    } else {\n      this.setState({addCredInvalid: true});\n    }\n  }\n\n  onTagsUpdated(tags) {\n    this.setState({tags: tags});\n\n    if (this.previousTagsUpdated && this.previousTagsUpdated != this.onTagsUpdated) {\n      this.previousTagsUpdated();\n    }\n  }\n\n  handleTagsUpdated(tags) {\n    if (!arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      this.props.onTopicTagsUpdate(this.props.topic, tags);\n    }\n  }\n\n  render() {\n    const credentials = [];\n    if (this.state.isMe) {\n      this.state.credentials.map((cred) => {\n        credentials.push(\n          <div key={cred.meth + \":\" + cred.val + \":\" + cred.done}>{cred.meth}: <tt>{cred.val}</tt>\n            <span> {!cred.done ?\n              <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredConfirm(cred.meth, cred.val);}}>\n                <FormattedMessage id=\"validate_credential_action\" defaultMessage=\"confirm\"\n                  description=\"Validate credentail call to action\" />\n              </a>\n            : null} <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredDelete(cred.meth, cred.val);}}><i\n              className=\"material-icons gray\">delete_outline</i></a></span>\n          </div>\n        );\n      });\n    }\n\n    return (\n      <div className=\"scrollable-panel\">\n        <TopicDescEdit\n          tinode={this.props.tinode}\n          topic={this.props.topic}\n          onUpdateTopicDesc={this.props.onUpdateTopicDesc}\n          onUpdateTags={this.props.onUpdateTags}\n          onError={this.props.onError} />\n        {this.state.isMe ?\n          <>\n            <div className=\"hr\" />\n            <div className=\"panel-form-column\">\n              <label className=\"small\">\n                <FormattedMessage id=\"label_user_contacts\" defaultMessage=\"Contacts:\"\n                description=\"Label for user contacts\" />\n              </label>\n              <div className=\"quoted\">\n                {credentials}\n                {this.state.addCredActive ?\n                  <input type=\"text\" value={this.state.value}\n                    className={this.state.addCredInvalid ? 'invalid' : null}\n                    placeholder=\"Phone number or email\" required=\"required\" autoFocus\n                    onChange={this.handleCredChange} onKeyDown={this.handleCredKeyDown} onBlur={this.handleCredEntered} />\n                  : null}\n                <div>\n                  <a href=\"#\" onClick={(e) => {e.preventDefault(); this.setState({addCredActive: true});}}>\n                    <i className=\"material-icons\">add</i>\n                    <FormattedMessage id=\"button_add_another\" defaultMessage=\"Add another\" description=\"Call to action [+ add another]\" />\n                  </a></div>\n              </div>\n            </div>\n          </>\n        : null\n      }\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport InPlaceEdit from './in-place-edit.jsx';\n\nimport { NO_ACCESS_MODE } from '../config.js';\n\nconst messages = defineMessages({\n  clear_messages: {\n    id: 'action_clear_messages',\n    defaultMessage: 'Clear Messages',\n    description: 'Flat button [Clear Messages] (soft-delete messages)'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n  delete_messages: {\n    id: 'action_delete_messages',\n    defaultMessage: 'Clear Messages for All',\n    description: 'Flat button [Clear for All] (hard-delete all messages)'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  topic_delete: {\n    id: 'topic_delete',\n    defaultMessage: 'Delete Conversation',\n    description: 'Alert title when deleting the topic.'\n  },\n  topic_delete_warning: {\n    id: 'topic_delete_warning',\n    defaultMessage: 'Are you sure you want to delete this conversation? It cannot be undone.',\n    description: 'Alert warning when deleting entire topic'\n  },\n  leave_chat: {\n    id: 'action_leave_chat',\n    defaultMessage: 'Leave Conversation',\n    description: 'Flat button [Leave Conversation]'\n  },\n  leave_chat_warning: {\n    id: 'leave_chat_warning',\n    defaultMessage: 'Are you sure you want to leave this conversation?',\n    description: 'Alert dialog warning when unsubscribing from a chat.'\n  },\n  block_contact: {\n    id: 'action_block_contact',\n    defaultMessage: \"Block Contact\",\n    description: \"Flat button [Block Contact]\"\n  },\n  block_contact_warning: {\n    id: 'block_contact_warning',\n    defaultMessage: 'Are you sure you want to block this contact?',\n    description: 'Alert dialog warning when blocking a contact.'\n  },\n  report_chat: {\n    id: 'action_report_chat',\n    defaultMessage: 'Report Conversation',\n    description: 'Flat button [Report Group]'\n  },\n  report_chat_warning: {\n    id: 'report_chat_warning',\n    defaultMessage: 'Are you sure you want to block and report this conversation?',\n    description: 'Alert dialog warning when reporting a conversation for abuse'\n  },\n  other_user: {\n    id: 'label_other_user',\n    defaultMessage: 'Other',\n    description: 'Label for the other user when the user is unnamed'\n  },\n});\n\nclass TopicSecurity extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n\n    const defacs = topic.getDefaultAccess() || {};\n    const acs = topic.getAccessMode();\n\n    let modeGiven2 = NO_ACCESS_MODE;\n    let modeWant2 = NO_ACCESS_MODE;\n    if (topic.getType() == 'p2p') {\n      // Fetch the other party in the p2p conversation.\n      // Topic may not be ready yet, so check if user is found.\n      const user2 = topic.subscriber(props.topic);\n      if (user2 && user2.acs) {\n        modeGiven2 = user2.acs.getGiven();\n        modeWant2 = user2.acs.getWant();\n      }\n    }\n\n    this.state = {\n      owner: acs && acs.isOwner(),\n      admin: acs && acs.isAdmin(),\n      sharer: acs && acs.isSharer(),\n      deleter: acs && acs.isDeleter(),\n      muted: acs && acs.isMuted(),\n\n      groupTopic: topic.isGroupType(),\n      channel: topic.isChannelType(),\n      access: acs ? acs.getMode() : undefined,\n      modeGiven: acs ? acs.getGiven() : undefined,\n      modeWant: acs ? acs.getWant() : undefined,\n      modeGiven2: modeGiven2, // P2P topic, the other user mode given\n      modeWant2: modeWant2,  // P2P topic, the other user mode want\n      auth: defacs ? defacs.auth : null,\n      anon: defacs ? defacs.anon : null,\n    };\n\n    this.handleDeleteTopic = this.handleDeleteTopic.bind(this);\n    this.handleDeleteMessages = this.handleDeleteMessages.bind(this);\n    this.handleLeave = this.handleLeave.bind(this);\n    this.handleBlock = this.handleBlock.bind(this);\n    this.handleReport = this.handleReport.bind(this);\n  }\n\n  handleDeleteTopic(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.topic_delete), // title\n      formatMessage(messages.topic_delete_warning), // content\n      (() => { this.props.onDeleteTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleDeleteMessages(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(this.state.deleter ? messages.delete_messages : messages.clear_messages), // title\n      formatMessage(this.state.deleter ? messages.delete_messages_warning : messages.clear_messages_warning), // content\n      (() => { this.props.onDeleteMessages(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleLeave(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.leave_chat), // title\n      formatMessage(messages.leave_chat_warning), // content\n      (() => { this.props.onLeaveTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleBlock(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.block_contact), // title\n      formatMessage(messages.block_contact_warning), // content\n      (() => { this.props.onBlockTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleReport(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.report_chat), // title\n      formatMessage(messages.report_chat_warning), // content\n      (() => { this.props.onReportTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          {!this.state.channel ?\n            <a href=\"#\" className=\"flat-button\" onClick={this.handleDeleteMessages}>\n              <i className=\"material-icons\">delete_outline</i> &nbsp;{\n                formatMessage(this.state.deleter ? messages.delete_messages : messages.clear_messages)\n              }\n            </a>\n            :\n            null\n          }\n          {this.state.owner ?\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleDeleteTopic}>\n              <i className=\"material-icons\">delete</i> &nbsp;{formatMessage(messages.topic_delete)}\n            </a>\n            :\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleLeave}>\n              <i className=\"material-icons\">exit_to_app</i> &nbsp;{formatMessage(messages.leave_chat)}\n            </a>\n          }\n          {!this.state.groupTopic ?\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleBlock}>\n              <i className=\"material-icons\">block</i> &nbsp;{formatMessage(messages.block_contact)}\n            </a>\n            :\n            null\n          }\n          {!this.state.owner ?\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleReport}>\n              <i className=\"material-icons\">report</i> &nbsp;{formatMessage(messages.report_chat)}\n            </a>\n            :\n            null\n          }\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          {this.state.groupTopic ?\n            <>\n              <div className=\"group\">\n                <label>\n                  <FormattedMessage id=\"label_your_permissions\" defaultMessage=\"Your permissions:\"\n                    description=\"Label for current user permissions\" />\n                </label> <tt className=\"clickable\"\n                  onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('want')}}>\n                  {this.state.access}\n                </tt>\n              </div>\n              <div className=\"group\">\n                <div>\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_default_access_mode\" defaultMessage=\"Default access mode:\"\n                    description=\"Label for default access mode\" />\n                  </label>\n                </div>\n                <div className=\"quoted\">\n                  <div>Auth: <tt className=\"clickable\"\n                    onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('auth')}}>{this.state.auth}</tt>\n                  </div>\n                  <div>Anon: <tt className=\"clickable\"\n                    onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('anon')}}>{this.state.anon}</tt>\n                  </div>\n                </div>\n              </div>\n            </>\n            :\n            <div className=\"group\">\n              <div>\n                <label className=\"small\">\n                  <FormattedMessage id=\"label_permissions\" defaultMessage=\"Permissions:\"\n                    description=\"Section title\" />\n                </label>\n              </div>\n              <div className=\"quoted\">\n                <div>\n                  <FormattedMessage id=\"label_you\" defaultMessage=\"You:\"\n                    description=\"Label for the current user\" /> <tt className=\"clickable\"\n                    onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('want')}}>\n                    {this.state.access}\n                  </tt>\n                </div>\n                <div>{this.state.fullName ? this.state.fullName : formatMessage(messages.other_user)}:\n                  &nbsp;<tt className=\"clickable\"\n                    onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('given')}}>\n                    {this.state.modeGiven2}\n                  </tt>\n                </div>\n              </div>\n            </div>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(TopicSecurity);\n","// InfoView: panel with topic/user info.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport BadgeList from '../widgets/badge-list.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport ContactList from '../widgets/contact-list.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupManager from '../widgets/group-manager.jsx';\nimport MenuCancel from '../widgets/menu-cancel.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\nimport TopicCommon from '../widgets/topic-common.jsx';\nimport TopicSecurity from '../widgets/topic-security.jsx';\n\nimport { MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH, NO_ACCESS_MODE } from '../config.js';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, theCard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  info: {\n    id: 'panel_title_info',\n    description: 'Title for InfoView',\n    defaultMessage: 'Info'\n  },\n  general: {\n    id: 'panel_title_general',\n    description: 'Title for TopicCommon.',\n    defaultMessage: 'General'\n  },\n  security: {\n    id: 'panel_title_security',\n    description: 'Title for TopicSecirity and AccSecurity.',\n    defaultMessage: 'Security'\n  },\n  members: {\n    id: 'panel_title_members',\n    description: 'Title for managing group members view.',\n    defaultMessage: 'Members'\n  },\n  crop: {\n    id: 'panel_title_crop',\n    description: 'Title for AvatarCropView.',\n    defaultMessage: 'Drag to Adjust'\n  },\n  perm_want: {\n    id: 'requested_permissions',\n    defaultMessage: 'Requested',\n    description: 'Title for permissions'\n  },\n  perm_given: {\n    id: 'granted_permissions',\n    defaultMessage: 'Granted',\n    description: 'Title for permissions'\n  },\n  perm_auth: {\n    id: 'permissions_authenticated',\n    defaultMessage: 'Authenticated',\n    description: 'Title for editing default authenticated permissions'\n  },\n  perm_anon: {\n    id: 'permissions_anonymous',\n    defaultMessage: 'Anonymous',\n    description: 'Title for editing default anonymous permissions'\n  },\n  perm_user: {\n    id: 'permissions_user',\n    defaultMessage: 'User\\'s Permissions',\n    description: 'Title for editing user\\'s permissions'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n});\n\nfunction _clip(str, length) {\n  return str && str.substring(0, length);\n}\n\nclass InfoView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      topic: null,\n      owner: false,\n      admin: false,\n      sharer: false,\n      muted: false,\n      address: null,\n      groupTopic: undefined,\n      channel: undefined,\n      fullName: undefined,\n      description: undefined,\n      avatar: null,\n      private: null,\n      selectedContact: null,\n      access: null,\n      modeGiven: null,\n      modeWant: null,\n      modeGiven2: null, // P2P topic, the other user mode given\n      modeWant2: null,  // P2P topic, the other user mode want\n      auth: null,\n      anon: null,\n      contactList: [],\n      trustedBadges: [],\n      previousMetaDesc: undefined,\n      previousSubsUpdated: undefined,\n    };\n\n    this.resetSubs = this.resetSubs.bind(this);\n    this.resetDesc = this.resetDesc.bind(this);\n    this.onMetaDesc = this.onMetaDesc.bind(this);\n    this.onSubsUpdated = this.onSubsUpdated.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleMuted = this.handleMuted.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleShowAddMembers = this.handleShowAddMembers.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleMemberSelected = this.handleMemberSelected.bind(this);\n    this.handleContextMenu = this.handleContextMenu.bind(this);\n    this.handleBackNavigate = this.handleBackNavigate.bind(this);\n  }\n\n  // No need to separately handle component mount.\n  componentDidUpdate(props) {\n    const topic = this.props.tinode.getTopic(props.topic);\n    if (!topic) {\n      return;\n    }\n\n    if (this.onMetaDesc != topic.onMetaDesc) {\n      this.previousMetaDesc = topic.onMetaDesc;\n      topic.onMetaDesc = this.onMetaDesc;\n\n      this.previousSubsUpdated = topic.onSubsUpdated;\n      topic.onSubsUpdated = this.onSubsUpdated;\n    }\n\n    if (this.state.topic != props.topic) {\n      this.setState({topic: props.topic});\n      this.resetDesc(topic, props);\n      this.resetSubs(topic, props);\n    }\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.setState({topic: null});\n    topic.onMetaDesc = this.previousMetaDesc;\n    topic.onSubsUpdated = this.previousSubsUpdated;\n  }\n\n  resetSubs(topic, props) {\n    const newState = {contactList: []};\n    if (topic.getType() == 'p2p') {\n      // Fetch the other party in the p2p conversation.\n      // Topic may not be ready yet, so check if user is found.\n      const user2 = topic.subscriber(props.topic);\n      if (user2) {\n        newState.modeGiven2 = user2.acs.getGiven();\n        newState.modeWant2 = user2.acs.getWant();\n      } else {\n        newState.modeGiven2 = NO_ACCESS_MODE;\n        newState.modeWant2 = NO_ACCESS_MODE;\n      }\n    } else {\n      topic.subscribers((sub) => {\n        newState.contactList.push(sub);\n      }, this);\n    }\n\n    this.setState(newState);\n  }\n\n  resetDesc(topic, props) {\n    const defacs = topic.getDefaultAccess() || {};\n    const acs = topic.getAccessMode();\n\n    const badges = [];\n    if (topic.trusted) {\n      for (const [key, val] of Object.entries(topic.trusted)) {\n        if (val) {\n          badges.push(key);\n        }\n      }\n    }\n\n    this.setState({\n      owner: acs && acs.isOwner(),\n      admin: acs && acs.isAdmin(),\n      sharer: acs && acs.isSharer(),\n      muted: acs && acs.isMuted(),\n\n      fullName: _clip(topic.public ? topic.public.fn : undefined, MAX_TITLE_LENGTH),\n      description: _clip(topic.public ? topic.public.note : undefined, MAX_TOPIC_DESCRIPTION_LENGTH),\n      avatar: makeImageUrl(topic.public ? topic.public.photo : null),\n      trustedBadges: badges,\n      private: _clip(topic.private ? topic.private.comment : null, MAX_TITLE_LENGTH),\n      address: topic.name,\n      groupTopic: topic.isGroupType(),\n      channel: topic.isChannelType() || topic.chan,\n      access: acs ? acs.getMode() : undefined,\n      modeGiven: acs ? acs.getGiven() : undefined,\n      modeWant: acs ? acs.getWant() : undefined,\n      auth: defacs.auth,\n      anon: defacs.anon\n    });\n\n    if (topic.getType() == 'grp' && acs && acs.isOwner()) {\n      // Requesting tags: owner is editing the topic.\n      topic.getMeta(topic.startMetaQuery().withTags().build());\n    }\n  }\n\n  onMetaDesc(desc) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetDesc(topic, this.props);\n\n    if (this.previousMetaDesc && this.previousMetaDesc != this.onMetaDesc) {\n      this.previousMetaDesc(desc);\n    }\n  }\n\n  onSubsUpdated(subs) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetSubs(topic, this.props);\n\n    if (this.previousSubsUpdated && this.previousSubsUpdated != this.onSubsUpdated) {\n      this.previousSubsUpdated(subs);\n    }\n  }\n\n  handleImageChanged(img) {\n    this.setState({avatar: img});\n    this.props.onTopicDescUpdate(this.props.topic, theCard(null, img || Tinode.DEL_CHAR), null);\n  }\n\n  handleMuted(ignored, checked) {\n    this.setState({muted: checked});\n    this.props.onChangePermissions(this.props.topic, checked ? '-P' : '+P');\n  }\n\n  handlePermissionsChanged(which, perm) {\n    console.log(\"handlePermissionsChanged\", which, perm);\n    switch (which) {\n      case 'auth':\n        this.props.onTopicDescUpdate(this.props.topic, null, null, {auth: perm});\n        break;\n      case 'anon':\n        this.props.onTopicDescUpdate(this.props.topic, null, null, {anon: perm});\n        break;\n      case 'mode':\n      case 'want':\n        this.props.onChangePermissions(this.props.topic, perm);\n        break;\n      case 'given':\n        this.props.onChangePermissions(this.props.topic, perm, this.props.topic);\n        break;\n      case 'user':\n        this.props.onChangePermissions(this.props.topic, perm, this.state.userPermissionsEdited);\n        break;\n    }\n  }\n\n  handleLaunchPermissionsEditor(which, uid) {\n    console.log(which, uid);\n    const {formatMessage} = this.props.intl;\n    let toEdit, toCompare, toSkip, titleEdit, titleCompare, userTitle, userAvatar;\n    switch (which) {\n      case 'mode':\n        toEdit = this.state.access;\n        break;\n      case 'want':\n        toEdit = this.state.modeWant;\n        toCompare = this.state.modeGiven;\n        if (this.state.owner) {\n          // Don't allow owner to unset 'O' permission. All other permissions are OK.\n          toSkip = 'O';\n        } else {\n          // Allow accepting any of 'ASDO' permissions but don't allow asking for them.\n          toSkip = Tinode.AccessMode.encode(Tinode.AccessMode.diff('ASDO', this.state.modeGiven));\n          if (this.state.channel) {\n            // Channels are read-only.\n            toSkip += 'W';\n          }\n        }\n        titleEdit = formatMessage(messages.perm_want);\n        titleCompare = formatMessage(messages.perm_given);\n        break;\n      case 'given':\n        toEdit = this.state.modeGiven2;\n        toCompare = this.state.modeWant2;\n        toSkip = this.state.groupTopic ? (this.state.owner ? '' : 'O') : 'ASDO';\n        titleEdit = formatMessage(messages.perm_given);\n        titleCompare = formatMessage(messages.perm_want);\n        break;\n      case 'auth':\n        toEdit = this.state.auth;\n        toSkip = 'O';\n        break;\n      case 'anon':\n        toEdit = this.state.anon;\n        toSkip = 'O';\n        break;\n      case 'user': {\n        const topic = this.props.tinode.getTopic(this.props.topic);\n        if (!topic) {\n          return;\n        }\n        const user = topic.subscriber(uid);\n        if (!user || !user.acs) {\n          return;\n        }\n        toEdit = user.acs.getGiven();\n        toCompare = user.acs.getWant();\n        toSkip = this.state.owner ? '' : 'O';\n        titleEdit = formatMessage(messages.perm_given);\n        titleCompare = formatMessage(messages.perm_want);\n        if (user.public) {\n          userTitle = user.public.fn;\n          userAvatar = user.public.photo;\n        }\n        break;\n      }\n      default:\n        console.log(\"Unknown permission editing mode '\" + which + \"'\");\n        return;\n    }\n    this.setState({\n      userPermissionsEdited: uid,\n      userPermissionsTitle: userTitle,\n      userPermissionsAvatar: userAvatar,\n      editedPermissions: toEdit,\n      immutablePermissions: toCompare,\n      editedPermissionsTitle: titleEdit,\n      immutablePermissionsTitle: titleCompare,\n      editedPermissionsSkipped: toSkip,\n    });\n    this.props.onNavigate(`perm/${which}`);\n  }\n\n  handleShowAddMembers(e) {\n    e.preventDefault();\n    this.props.onInitFind();\n    this.props.onNavigate('members');\n  }\n\n  handleMemberUpdateRequest(members, added, removed) {\n    this.props.onMemberUpdateRequest(this.props.topic, added, removed);\n    this.props.onNavigate('info');\n  }\n\n  handleMemberSelected(uid) {\n    this.setState({selectedContact: uid});\n  }\n\n  handleBackNavigate() {\n    const args = (this.props.panel || 'info').split('/');\n    if (args[0] == 'info') {\n      this.props.onNavigate(null);\n    } else if (args[0] == 'perm') {\n      if (args[1] == 'user') {\n        this.props.onNavigate('info');\n      } else {\n        this.props.onNavigate('security');\n      }\n    } else {\n      this.props.onNavigate('info');\n    }\n  }\n\n  handleContextMenu(params) {\n    const {formatMessage} = this.props.intl;\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    const user = topic.subscriber(params.topicName);\n    if (!user || !user.acs) {\n      return;\n    }\n\n    const isMe = this.props.tinode.isMe(params.topicName);\n    const menuItems = [\n      {title: formatMessage(messages.edit_permissions), handler: () => {\n        this.handleLaunchPermissionsEditor(isMe ? 'want' : 'user', params.topicName);\n      }}\n    ];\n    if (!isMe) {\n      menuItems.push('member_delete');\n    }\n    menuItems.push(user.acs.isMuted() ? 'member_unmute' : 'member_mute');\n    if (!isMe) {\n      menuItems.push(user.acs.isJoiner() ? 'member_block' : 'member_unblock');\n    }\n    this.props.showContextMenu({\n      topicName: this.props.topic,\n      x: params.x,\n      y: params.y,\n      user: params.topicName}, menuItems);\n  }\n\n  render() {\n    const args = (this.props.panel || 'info').split('/');\n    const view = args[0];\n    args.shift();\n\n    const {formatMessage} = this.props.intl;\n    const panelTitle = formatMessage((view == 'perm' ? messages['perm_' + args[0]] : messages[view])\n      || messages['info']);\n\n    return (\n      <div id=\"info-view\">\n        <div className=\"caption-panel\" id=\"info-caption-panel\">\n          <div className=\"panel-title\" id=\"info-title\">{panelTitle}</div>\n          <div>\n            <MenuCancel onCancel={this.handleBackNavigate} />\n          </div>\n        </div>\n        {this.props.displayMobile ?\n          <ErrorPanel\n            level={this.props.errorLevel}\n            text={this.props.errorText}\n            onClearError={this.props.onError} /> : null}\n        {view == 'members' ?\n          <GroupManager\n            tinode={this.props.tinode}\n            members={this.state.contactList}\n            requiredMember={this.props.myUserId}\n            keepInitialMembers={!this.state.admin && !this.state.owner}\n            myUserId={this.props.myUserId}\n            contacts={this.props.searchableContacts}\n            onCancel={this.handleBackNavigate}\n            onSubmit={this.handleMemberUpdateRequest} />\n          :\n        view == 'perm' && args.length > 0 ?\n          <PermissionsEditor\n            tinode={this.props.tinode}\n            mode={this.state.editedPermissions}\n            compare={this.state.immutablePermissions}\n            skip={this.state.editedPermissionsSkipped}\n            modeTitle={this.state.editedPermissionsTitle}\n            compareTitle={this.state.immutablePermissionsTitle}\n            userTitle={this.state.userPermissionsTitle}\n            item={this.state.userPermissionsEdited}\n            userAvatar={this.state.userPermissionsAvatar}\n            onSubmit={(mode) => this.handlePermissionsChanged(args[0], mode)}\n            onCancel={this.handleBackNavigate} />\n          :\n        view == 'general' ?\n          <TopicCommon\n            tinode={this.props.tinode}\n            topic={this.props.topic}\n            onCredAdd={this.props.onCredAdd}\n            onTopicTagsUpdate={this.props.onTopicTagsUpdate}\n            onCredConfirm={this.props.onCredConfirm}\n            onCredDelete={this.props.onCredDelete}\n            onUpdateTopicDesc={this.props.onTopicDescUpdate}\n            onUpdateTags={this.props.onUpdateTags}\n            onError={this.props.onError} />\n          :\n        view == 'security' ?\n          <TopicSecurity\n            tinode={this.props.tinode}\n            topic={this.props.topic}\n            onShowAlert={this.props.onShowAlert}\n            onDeleteMessages={this.props.onDeleteMessages}\n            onLeaveTopic={this.props.onLeaveTopic}\n            onBlockTopic={this.props.onBlockTopic}\n            onReportTopic={this.props.onReportTopic}\n            onLaunchPermissionsEditor={this.handleLaunchPermissionsEditor}\n            onNavigate={this.props.onNavigate} />\n          :\n          <div id=\"info-view-content\" className=\"scrollable-panel\">\n            <div className=\"panel-form-column\">\n              <a href=\"#\" className=\"flat-button float-right\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('general');}}>\n                <i className=\"material-icons\">edit</i>&nbsp;\n                <FormattedMessage id=\"button_edit\" defaultMessage=\"Edit\" description=\"Call to action [Edit]\" />\n              </a>\n              <center>\n                <AvatarUpload\n                  tinode={this.props.tinode}\n                  avatar={this.state.avatar}\n                  readOnly={true}\n                  uid={this.props.topic}\n                  title={this.state.fullName} />\n              </center>\n              <div className=\"group\">\n                <div><label className=\"small\">\n                  <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                    description=\"Label for editing topic name\" />\n                </label></div>\n                <div className=\"large ellipsized\">{this.state.fullName}\n                {this.state.channel ? <img src=\"/img/channel.png\" className=\"channel\" alt=\"channel\" /> : null}</div>\n              </div>\n              {this.state.private ?\n                <div className=\"group\">\n                  <div><label className=\"small\">\n                    <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                      description=\"Label for editing 'private'\" />\n                  </label></div>\n                  <div className=\"large ellipsized\">{this.state.private}</div>\n                </div>\n                : null\n              }\n              <div className=\"group\">\n                <label className=\"small\"><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n                  description=\"Label for user address (ID)\" /></label>&nbsp;\n                <tt>{this.state.address}</tt>\n              </div>\n              <div className=\"group\">\n                <BadgeList trustedBadges={this.state.trustedBadges} />\n              </div>\n              {this.state.description ?\n                <div className=\"group\">\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                      description=\"Label for editing topic description\" />\n                  </label>\n                  <div>{this.state.description}</div>\n                </div> : null}\n            </div>\n            <div className=\"hr\" />\n            <div className=\"panel-form-row\">\n              <label>\n                <FormattedMessage id=\"label_muting_topic\" defaultMessage=\"Muted:\"\n                  description=\"Label for Muting/unmuting the topic\" />\n              </label>\n              <CheckBox name=\"P\" checked={this.state.muted} onChange={this.handleMuted} />\n            </div>\n            <div className=\"hr\" />\n            <div className=\"panel-form-row\">\n              <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('security');}}>\n                <i className=\"material-icons\">security</i>&nbsp;<FormattedMessage id=\"button_security\"\n                  defaultMessage=\"Security\" description=\"Navigaton button for security panel.\" />\n              </a>\n            </div>\n            {this.state.groupTopic && this.state.sharer ?\n              <>\n                <div className=\"hr\" />\n                <div className=\"panel-form-row\">\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_group_members\" defaultMessage=\"Group members:\"\n                      description=\"Section title or label\" />\n                  </label>\n                </div>\n                <div className=\"panel-form-row\">\n                  <a href=\"#\" className=\"flat-button\" onClick={this.handleShowAddMembers}>\n                    <i className=\"material-icons\">person_add</i> &nbsp;<FormattedMessage id=\"button_add_members\"\n                      defaultMessage=\"Add members\" description=\"Flat button [Add members] (to topic)\" />\n                  </a>\n                </div>\n                <FormattedMessage id=\"group_has_no_members\" defaultMessage=\"No members\"\n                  description=\"Shown in place of group members\">{\n                  (no_members) => <ContactList\n                    tinode={this.props.tinode}\n                    contacts={this.state.contactList}\n                    myUserId={this.props.myUserId}\n                    emptyListMessage={no_members}\n                    topicSelected={this.state.selectedContact}\n                    showOnline={false}\n                    showUnread={false}\n                    showMode={true}\n                    noScroll={true}\n                    onTopicSelected={this.handleMemberSelected}\n                    showContextMenu={this.state.admin ? this.handleContextMenu : false}\n                  />\n                }</FormattedMessage>\n              </>\n              :\n              null\n            }\n          </div>\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(InfoView);\n","// File uload/download progress indicator with a cancel inside.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class FileProgress extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"uploader\">\n        <div><span style={{width: (this.props.progress * 100) + \"%\"}}></span></div>\n        {this.props.progress < 0.999 ?\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n            <i className=\"material-icons\">close</i> <FormattedMessage id=\"action_cancel\"\n              defaultMessage=\"cancel\" description=\"Call to action [cancel]\" />\n          </a>\n          :\n          <FormattedMessage id=\"upload_finishing\" defaultMessage=\"finishing...\"\n            description=\"Notification that upload is finishing\" />\n        }\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\nimport { bytesToHumanSize } from '../lib/strformat.js';\nimport { isUrlRelative, sanitizeUrl } from '../lib/utils.js';\n\nexport default class Attachment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      downloader: null,\n      progress: 0\n    };\n\n    this.downloadFile = this.downloadFile.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  downloadFile(url, filename, mimetype) {\n    if (!url) {\n      this.props.onError(\"Invalid download URL '\" + url + \"'\");\n      return;\n    }\n\n    const downloader = this.props.tinode.getLargeFileHelper();\n    this.setState({downloader: downloader});\n    downloader.download(url, filename, mimetype,\n      (loaded) => {\n        this.setState({progress: loaded / this.props.size});\n      },\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    ).then(() => {\n      this.setState({downloader: null, progress: 0});\n    }).catch((err) => {\n      if (err) {\n        this.props.onError(\"Error downloading file: \" + err.message, 'err');\n      }\n      this.setState({downloader: null, progress: 0});\n    });\n  }\n\n  handleCancel() {\n    if (this.props.uploading) {\n      this.props.onCancelUpload();\n    } else if (this.state.downloader) {\n      this.state.downloader.cancel();\n    }\n  }\n\n  render() {\n    let filename = this.props.filename || 'file_attachment';\n    if (filename.length > 36) {\n      filename = filename.substr(0, 16) + '...' + filename.substr(-16);\n    }\n    let size = this.props.size > 0 ?\n      <span className=\"small gray\">({bytesToHumanSize(this.props.size)})</span> :\n      null;\n\n    // Detect if the download URL is relative or absolute.\n    // If the URL is relative use LargeFileHelper to attach authentication\n    // credentials to the request.\n    let url, helperFunc;\n    if (!this.props.uploading && !this.state.downloader && isUrlRelative(this.props.downloadUrl)) {\n      // Relative URL. Use download helper.\n      url = '#';\n      helperFunc = (e) => {\n        e.preventDefault();\n        this.downloadFile(this.props.downloadUrl, this.props.filename, this.props.mimetype);\n      };\n    } else {\n      url = sanitizeUrl(this.props.downloadUrl);\n      helperFunc = null;\n    }\n    const downloadWidget = <><i className=\"material-icons\">file_download</i> <FormattedMessage id=\"save_attachment\"\n      defaultMessage=\"save\" description=\"Call to save an attachment\" /></>;\n    return (\n      <div className=\"attachment\">\n        <div><i className=\"material-icons big gray\">insert_drive_file</i></div>\n        <div className=\"flex-column\">\n          <div>{filename} {size}</div>\n          {this.props.uploading || this.state.downloader ?\n            <FileProgress progress={this.props.uploading ? this.props.progress : this.state.progress}\n              onCancel={this.handleCancel} />\n            :\n            <div>{url ?\n              <a href={url} download={this.props.filename} onClick={helperFunc}>{downloadWidget}</a>\n              :\n              <span className=\"light-gray\">{downloadWidget}</span>\n            }</div>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n","// Image view with progress bar and a cancel button.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\n\nexport default class UploadingImage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"inline-image\">\n        {React.createElement('img', this.props)}\n        <div className=\"rounded-container\">\n          <FileProgress progress={this.props.progress} onCancel={this.props.onCancelUpload} />\n        </div>\n      </div>\n    );\n  }\n};\n","// Single message, sent or received.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport Attachment from './attachment.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\nimport UploadingImage from './uploading-image.jsx'\nimport { sanitizeImageUrl, sanitizeUrl } from '../lib/utils.js';\n\nexport default class ChatMessage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      progress: 0\n    };\n\n    if (props.uploader) {\n      props.uploader.onProgress = this.handleProgress.bind(this);\n    }\n\n    this.handleImagePreview = this.handleImagePreview.bind(this);\n    this.handleFormButtonClick = this.handleFormButtonClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n  }\n\n  handleImagePreview(e) {\n    e.preventDefault();\n    this.props.onImagePreview({\n      url: e.target.src,\n      filename: e.target.title,\n      width: e.target.dataset.width,\n      height: e.target.dataset.height,\n      size: e.target.dataset.size,\n      type: e.target.dataset.mime\n    });\n  }\n\n  handleFormButtonClick(e) {\n    e.preventDefault();\n    const data = {\n      seq: this.props.seq\n    };\n    data.resp = {};\n    if (e.target.dataset.name) {\n      data.resp[e.target.dataset.name] = e.target.dataset.val ? e.target.dataset.val :\n        e.target.dataset.val === undefined ? 1 : '' + e.target.dataset.val;\n    }\n    if (e.target.dataset.act == 'url') {\n      data.ref = sanitizeUrl(e.target.dataset.ref) || 'about:blank';\n    }\n    const text = e.target.dataset.title || 'unknown';\n    this.props.onFormResponse(e.target.dataset.act, text, data);\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const menuItems = this.props.received == Tinode.MESSAGE_STATUS_FAILED ? ['menu_item_send_retry'] : [];\n    this.props.showContextMenu({ seq: this.props.seq, content: this.props.content,\n                                 y: e.pageY, x: e.pageX }, menuItems);\n  }\n\n  handleProgress(ratio) {\n    this.setState({progress: ratio});\n  }\n\n  handleCancelUpload() {\n    this.props.onCancelUpload(this.props.seq, this.props.uploader);\n  }\n\n  render() {\n    const sideClass = this.props.deleted ? 'center' :\n      (this.props.sequence + ' ' + (this.props.response ? 'left' : 'right'));\n    const bubbleClass = (this.props.sequence == 'single' || this.props.sequence == 'last') ? 'bubble tip' : 'bubble';\n    const avatar = this.props.deleted ? null : (this.props.userAvatar || true);\n    const fullDisplay = (this.props.userFrom && this.props.response && !this.props.deleted &&\n      (this.props.sequence == 'single' || this.props.sequence == 'last'));\n\n    let content = this.props.content;\n    const attachments = [];\n    if (this.props.mimeType == Drafty.getContentType() && Drafty.isValid(content)) {\n      Drafty.attachments(content, function(att, i) {\n        if (att.mime == 'application/json') {\n          // Don't show json objects as attachments.\n          // They are not meant for users.\n          return;\n        }\n        attachments.push(<Attachment\n          tinode={this.props.tinode}\n          downloadUrl={Drafty.getDownloadUrl(att)}\n          filename={att.name} uploading={Drafty.isProcessing(att)}\n          mimetype={att.mime} size={Drafty.getEntitySize(att)}\n          progress={this.state.progress}\n          onCancelUpload={this.handleCancelUpload}\n          onError={this.props.onError}\n          key={i} />);\n      }, this);\n      content = React.createElement(React.Fragment, null, Drafty.format(content, draftyFormatter, this));\n    } else if (this.props.deleted) {\n      // Message represents a range of deleted messages.\n      content = <><i className=\"material-icons gray\">block</i> <i className=\"gray\">\n        <FormattedMessage id=\"deleted_content\"\n          defaultMessage=\"content deleted\" description=\"Shown when messages are deleted\" />\n      </i></>\n    } else if (typeof content != 'string') {\n      content = <>\n          <i className=\"material-icons gray\">error_outline</i> <i className=\"gray\">\n            <FormattedMessage id=\"invalid_content\"\n              defaultMessage=\"invalid content\" description=\"Shown when message is unreadable\" /></i>\n        </>\n    }\n\n    return (\n      <li className={sideClass}>\n        {this.props.userFrom && this.props.response ?\n          <div className=\"avatar-box\">\n            {fullDisplay ?\n              <LetterTile\n                tinode={this.props.tinode}\n                topic={this.props.userFrom}\n                title={this.props.userName}\n                avatar={avatar} /> :\n              null}\n          </div> :\n          null}\n        <div>\n          <div className={bubbleClass}>\n            <div className=\"content-meta\">\n              <div className=\"message-content\">\n                {content}\n                {attachments}\n              </div>\n              {this.props.timestamp ?\n                <ReceivedMarker\n                  timestamp={this.props.timestamp}\n                  received={this.props.received} />\n                : null}\n            </div>\n            {this.props.deleted || !this.props.showContextMenu ?\n              null :\n              <span className=\"menuTrigger\">\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">expand_more</i>\n                </a>\n              </span>\n            }\n          </div>\n          {fullDisplay ?\n            <div className=\"author\">\n              <FormattedMessage id=\"user_not_found\" defaultMessage=\"Not found\"\n                description=\"In place of a user's full name when the user is not found.\">{\n                    (notFound) => {return this.props.userName || <i>{notFound}</i>}\n              }</FormattedMessage>\n            </div>\n            : null\n          }\n        </div>\n      </li>\n    );\n  }\n};\n\n// Convert Drafty object to a tree of React elements.\nimport { BROKEN_IMAGE_SIZE, REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\n\n// Converts Drafty elements into React classes.\n// 'this' is set by the caller.\nfunction draftyFormatter(style, data, values, key) {\n  if (style == 'EX') {\n    // attachments are handled elsewhere.\n    return null;\n  }\n\n  let el = Drafty.tagName(style);\n  if (el) {\n    const attr = Drafty.attrValue(style, data) || {};\n    attr.key = key;\n    switch (style) {\n      case 'HL':\n        // Highlighted text. Assign class name.\n        attr.className = 'highlight';\n        break;\n      case 'IM':\n        // Additional processing for images\n        if (data) {\n          attr.className = 'inline-image';\n          const dim = fitImageSize(data.width, data.height,\n            Math.min(this.props.viewportWidth - REM_SIZE * 6.5, REM_SIZE * 34.5), REM_SIZE * 24, false) ||\n            {dstWidth: BROKEN_IMAGE_SIZE, dstHeight: BROKEN_IMAGE_SIZE};\n          attr.style = {\n            width: dim.dstWidth + 'px',\n            height: dim.dstHeight + 'px',\n            // Looks like a Chrome bug: broken image does not respect 'width' and 'height'.\n            minWidth: dim.dstWidth + 'px',\n            minHeight: dim.dstHeight + 'px'\n          };\n          if (!Drafty.isProcessing(data)) {\n            attr.src = this.props.tinode.authorizeURL(sanitizeImageUrl(attr.src));\n            attr.alt = data.name;\n            if (attr.src) {\n              attr.onClick = this.handleImagePreview;\n              attr.className += ' image-clickable';\n              attr.loading = 'lazy';\n            } else {\n              attr.src = 'img/broken_image.png';\n            }\n          } else {\n            // Use custom element instead of <img>.\n            el = UploadingImage;\n          }\n        }\n        break;\n      case 'BN':\n        // Button\n        attr.onClick = this.handleFormButtonClick;\n        let inner = React.Children.map(values, (child) => {\n          return typeof child == 'string' ? child : undefined;\n        });\n        if (!inner || inner.length == 0) {\n          inner = [attr.name]\n        }\n        // Get text which will be sent back when the button is clicked.\n        attr['data-title'] = inner.join('');\n        break;\n      case 'FM':\n        // Form\n        attr.className = 'bot-form';\n        break;\n      case 'RW':\n        // Form element formatting is dependent on element content.\n        break;\n      default:\n        if (el == '_UNKN') {\n          // Unknown element.\n          // TODO: make it prettier.\n          el = <><span className=\"material-icons\">extension</span></>;\n        }\n        break;\n    }\n    return React.createElement(el, attr, values);\n  } else {\n    return values;\n  }\n};\n","// Send message form.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport { KEYPRESS_DELAY } from '../config.js';\nimport { filePasted } from '../lib/blob-helpers.js';\n\nconst messages = defineMessages({\n  messaging_disabled: {\n    id: 'messaging_disabled_prompt',\n    defaultMessage: 'Messaging disabled',\n    description: 'Prompt in SendMessage in read-only topic'\n  },\n  type_new_message: {\n    id: 'new_message_prompt',\n    defaultMessage: 'New message',\n    description: 'Prompt in send message field'\n  },\n  add_image_caption: {\n    id: 'image_caption_prompt',\n    defaultMessage: 'Image caption',\n    description: 'Prompt in SendMessage for attached image'\n  },\n  file_attachment_too_large: {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  },\n  cannot_initiate_upload: {\n    id: 'cannot_initiate_file_upload',\n    defaultMessage: 'Cannot initiate file upload.',\n    description: 'Generic error messagewhen attachment fails'\n  },\n});\n\nclass SendMessage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      message: '',\n      // Make initial keypress time as if it happened 5001 milliseconds in the past.\n      keypressTimestamp: new Date().getTime() - KEYPRESS_DELAY - 1\n    };\n\n    this.handlePasteEvent = this.handlePasteEvent.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleSend = this.handleSend.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleMessageTyping = this.handleMessageTyping.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.addEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.removeEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.messageEditArea) {\n      this.messageEditArea.focus();\n    }\n  }\n\n  handlePasteEvent(e) {\n    if (this.props.disabled) {\n      return;\n    }\n    // FIXME: handle large files too.\n    if (filePasted(e,\n      (bits, mime, width, height, fname) => {\n        this.props.onAttachImage(mime, bits, width, height, fname);\n      },\n      (mime, bits, fname) => {\n        this.props.onAttachFile(mime, bits, fname);\n      },\n      this.props.onError)) {\n\n      // If a file was pasted, don't paste base64 data into input field.\n      e.preventDefault();\n    }\n  }\n\n  handleAttachImage(e) {\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachImage(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleAttachFile(e) {\n    const {formatMessage} = this.props.intl;\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachFile(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleSend(e) {\n    e.preventDefault();\n    const message = this.state.message.trim();\n    if (message || this.props.acceptBlank || this.props.noInput) {\n      this.props.onSendMessage(message);\n      this.setState({message: ''});\n    }\n  }\n\n  /* Send on Enter key */\n  handleKeyPress(e) {\n    // Remove this if you don't want Enter to trigger send\n    if (e.key === 'Enter') {\n      // Have Shift-Enter insert a line break instead\n      if (!e.shiftKey) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.handleSend(e);\n      }\n    }\n  }\n\n  handleMessageTyping(e) {\n    const newState = {message: e.target.value};\n    if (this.props.onKeyPress) {\n      const now = new Date().getTime();\n      if (now - this.state.keypressTimestamp > KEYPRESS_DELAY) {\n        this.props.onKeyPress();\n        newState.keypressTimestamp = now;\n      }\n    }\n    this.setState(newState);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const prompt = this.props.disabled ?\n      formatMessage(messages.messaging_disabled) :\n      (this.props.messagePrompt ?\n        formatMessage(messages[this.props.messagePrompt]) :\n        formatMessage(messages.type_new_message));\n    return (\n      <div id=\"send-message-panel\">\n        {!this.props.disabled ?\n          <>\n            {this.props.onAttachFile ?\n              <>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachImage.click();}} title=\"Add image\">\n                  <i className=\"material-icons secondary\">photo</i>\n                </a>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachFile.click();}} title=\"Attach file\">\n                  <i className=\"material-icons secondary\">attach_file</i>\n                </a>\n              </>\n              :\n              null}\n            {this.props.noInput ?\n              <div className=\"hr thin\" /> :\n              <textarea id=\"sendMessage\" placeholder={prompt}\n                value={this.state.message} onChange={this.handleMessageTyping}\n                onKeyPress={this.handleKeyPress}\n                ref={(ref) => {this.messageEditArea = ref;}}\n                autoFocus />}\n            <a href=\"#\" onClick={this.handleSend} title=\"Send\">\n              <i className=\"material-icons\">send</i>\n            </a>\n            <input type=\"file\" ref={(ref) => {this.attachFile = ref;}}\n              onChange={this.handleAttachFile} style={{display: 'none'}} />\n            <input type=\"file\" ref={(ref) => {this.attachImage = ref;}} accept=\"image/*\"\n              onChange={this.handleAttachImage} style={{display: 'none'}} />\n          </>\n          :\n          <div id=\"writing-disabled\">{prompt}</div>\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SendMessage);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { bytesToHumanSize } from '../lib/strformat.js';\n\n// Get material icon name from mime type.\nfunction iconFromMime(mime) {\n  // If more icons become available in material icons, add them to this mime-to-icon mapping.\n  const mimeToIcon = {default: 'insert_drive_file', image: 'image', text: 'description', video: 'theaters'};\n\n  return mimeToIcon[mime] || mimeToIcon[(mime || '').split('/')[0]] || mimeToIcon['default'];\n}\n\nexport default class DocPreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleSendDoc = this.handleSendDoc.bind(this);\n  }\n\n  handleSendDoc(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(this.props.content.file);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          <span>{this.props.content.filename}</span>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\">\n          <div className=\"flex-column narrow\">\n            <i className=\"material-icons gray\">{iconFromMime(this.props.content.type)}</i>\n            <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n              description=\"Label for file content type (mime)\" /></b> {this.props.content.type || 'application/octet-stream'}</div>\n            <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n              description=\"Label for file size\" /></b> {bytesToHumanSize(this.props.content.size)}</div>\n          </div>\n        </div>\n        <SendMessage\n          noInput={true}\n          onSendMessage={this.handleSendDoc}\n          onError={this.props.onError} />\n      </div>\n    );\n  }\n};\n","// GroupSubs: a list of group subscribers currently online.\n// Show in the topic title bar\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { MAX_ONLINE_IN_TOPIC } from '../config.js'\n\nimport LetterTile from './letter-tile.jsx';\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class GroupSubs extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const usersOnline = [];\n    const totalCount = (this.props.subscribers || []).length;\n    const countToShow = Math.min(MAX_ONLINE_IN_TOPIC, totalCount);\n\n    (this.props.subscribers || []).some((sub) => {\n      usersOnline.push(\n        <div className=\"avatar-box\" key={sub.user}>\n          <LetterTile\n            tinode={this.props.tinode}\n            topic={sub.user}\n            avatar={makeImageUrl(sub.public ? sub.public.photo : null) || true}\n            title={sub.public ? sub.public.fn : null} />\n        </div>\n      );\n      return usersOnline.length == countToShow;\n    });\n\n    return (\n      <div id=\"topic-users\">{usersOnline} {totalCount > countToShow ?\n        <span>\n          <FormattedMessage id=\"more_online_members\" defaultMessage=\"+{overflow} more\"\n              description=\"Shown in MessagesView title bar when the number of online subscribers exceeds MAX_ONLINE_IN_TOPIC\"\n              values={{ overflow: (totalCount - countToShow) }} />\n        </span> : null}\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\nimport { bytesToHumanSize } from '../lib/strformat.js';\n\nexport default class ImagePreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      width: 0,\n      height: 0\n    };\n\n    this.handleSendImage = this.handleSendImage.bind(this);\n  }\n\n  assignWidth(node) {\n    if (node && !this.state.width) {\n      const bounds = node.getBoundingClientRect();\n      this.setState({\n        width: bounds.width | 0,\n        height: bounds.height | 0\n      });\n    }\n  }\n\n  handleSendImage(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(caption, this.props.content.blob);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n\n    const dim = fitImageSize(this.props.content.width, this.props.content.height,\n      this.state.width, this.state.height, false);\n    const size = dim ? { width: dim.dstWidth + 'px', height: dim.dstHeight + 'px' } :\n      ((this.props.content.width > this.props.content.height) ? {width: '100%'} : {height: '100%'});\n    size.maxWidth = '100%';\n    size.maxHeight = '100%';\n\n    let filename = this.props.content.filename;\n    // Average font aspect ratio is ~0.5; File name takes 1/3 of the viewport width.\n    const maxlength = Math.max(((this.state.width / REM_SIZE / 1.5) | 0) - 2, 12);\n    if (filename.length > maxlength) {\n      filename = filename.slice(0, maxlength/2 - 1) + '…' + filename.slice(1 - maxlength/2);\n    }\n    const width = this.props.content.width || '-';\n    const height = this.props.content.height || '-';\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          {!this.props.onSendMessage ?\n            <a href={this.props.content.url} download={this.props.content.filename}>\n              <i className=\"material-icons\">file_download</i> <FormattedMessage\n                id=\"download_action\" defaultMessage=\"download\" description=\"Call to action [download]\" />\n            </a>\n            :\n            <span>{this.props.content.filename}</span>\n          }\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\" ref={(node) => this.assignWidth(node)}>\n          <img src={this.props.content.url} style={size} className=\"image-preview\" alt={this.props.content.filename} />\n        </div>\n        {this.props.onSendMessage ?\n          <SendMessage\n            messagePrompt=\"add_image_caption\"\n            acceptBlank={true}\n            onSendMessage={this.handleSendImage}\n            onError={this.props.onError} />\n          :\n          <div id=\"image-preview-footer\">\n            <div>\n              <div><b><FormattedMessage id=\"label_file_name\" defaultMessage=\"File name:\"\n                description=\"Label for a file name\" /></b></div>\n              <div><span title={this.props.content.filename}>{filename ? filename : '-'}</span></div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n                description=\"Label for file content type (mime)\" /></b></div>\n              <div>{this.props.content.type}</div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n                description=\"Label for file size\" /></b></div>\n              <div>{width} &times; {height} px; {bytesToHumanSize(this.props.content.size)}</div>\n            </div>\n          </div>}\n      </div>\n    );\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Invitation extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleButtonAction = this.handleButtonAction.bind(this);\n  }\n\n  handleButtonAction(evt, data) {\n    evt.preventDefault();\n    this.props.onAction(data);\n  }\n\n  render() {\n    return (\n      <div className=\"accept-invite-panel\">\n        <div className=\"title\">\n          <FormattedMessage id=\"chat_invitation\"\n            defaultMessage=\"You are invited to start a new chat. What would you like to do?\"\n            description=\"New chat invitation message: [Accept] [Ignore] [Block].\" />\n        </div>\n        <div className=\"footer\">\n          <button className=\"primary\" onClick={event => { this.handleButtonAction(event, \"accept\"); }}>\n            <FormattedMessage id=\"chat_invitation_accept\"\n              defaultMessage=\"Accept\" description=\"Action [Accept] for chat invitation.\" />\n          </button>\n          <button className=\"secondary\" onClick={event => { this.handleButtonAction(event, \"delete\"); }}>\n            <FormattedMessage id=\"chat_invitation_ignore\"\n              defaultMessage=\"Ignore\" description=\"Action [Ignore] for chat invitation.\" />\n          </button>\n          <button className=\"secondary\" onClick={event => { this.handleButtonAction(event, \"block\"); }}>\n            <FormattedMessage id=\"chat_invitation_block\"\n              defaultMessage=\"Block\" description=\"Action [Block] for chat invitation.\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n","/* This is just a static page to display when no conversation is selected. */\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME } from '../config.js';\n\nexport default class LogoView extends React.PureComponent {\n  render() {\n    const version = APP_NAME + ' (' + Tinode.getLibrary() + ')';\n    return (\n      <div id=\"dummy-view\">\n        <div>\n          <a href=\"https://github.com/tinode/chat/\">\n            <img id=\"logo\" alt=\"logo\" src=\"img/logo.svg\" />\n            <h2>Tinode Web</h2>\n          </a>\n          <p><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\"\n            description=\"Label for a client version\" /> {version}</p>\n          <p><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\"\n            description=\"Label for a server version\" /> {this.props.serverVersion} ({this.props.serverAddress})</p>\n        </div>\n      </div>\n    );\n  }\n};\n","// Utility class for hash navigation.\n\n// Parse hash as in http://www.example.com/path#hash as if it were\n// path and arguments.\nexport default class HashNavigation {\n  static parseUrlHash(hash) {\n    // Split path from args, path -> parts[0], args->path[1]\n    const parts = hash.split('?', 2);\n    const params = {};\n    let path = [];\n    if (parts[0]) {\n      path = parts[0].replace('#', '').split('/');\n    }\n    if (parts[1]) {\n      parts[1].split('&').forEach(function(part) {\n        const item = part.split('=');\n        if (item[0]) {\n          params[decodeURIComponent(item[0])] = decodeURIComponent(item[1]);\n        }\n      });\n    }\n    return {path: path, params: params};\n  }\n\n  static navigateTo(url) {\n    window.location.hash = url;\n  }\n\n  static composeUrlHash(path, params) {\n    let url = path.join('/');\n    const args = [];\n    for (const key in params) {\n      if (params.hasOwnProperty(key)) {\n        args.push(key + '=' + params[key]);\n      }\n    }\n    if (args.length > 0) {\n      url += '?' + args.join('&');\n    }\n    return url;\n  }\n\n  static addUrlParam(hash, key, value) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.params[key] = value;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static removeUrlParam(hash, key) {\n    const parsed = this.parseUrlHash(hash);\n    delete parsed.params[key];\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlSidePanel(hash, sidepanel) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[0] = sidepanel;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlInfoPanel(hash, infopanel) {\n    const parsed = this.parseUrlHash(hash);\n    if (infopanel) {\n      parsed.params.info = infopanel;\n    } else {\n      delete parsed.params.info;\n    }\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlTopic(hash, topic) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[1] = topic;\n    // Close InfoView on topic change.\n    delete parsed.params.info;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n}\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\nconst Drafty = Tinode.Drafty;\n\nimport ChatMessage from '../widgets/chat-message.jsx';\nimport ContactBadges from '../widgets/contact-badges.jsx';\nimport DocPreview from '../widgets/doc-preview.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupSubs from '../widgets/group-subs.jsx';\nimport ImagePreview from '../widgets/image-preview.jsx';\nimport Invitation from '../widgets/invitation.jsx';\nimport LetterTile from '../widgets/letter-tile.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport LogoView from './logo-view.jsx';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { DEFAULT_P2P_ACCESS_MODE, IMAGE_PREVIEW_DIM, KEYPRESS_DELAY, MESSAGES_PAGE,\n  MAX_EXTERN_ATTACHMENT_SIZE, MAX_IMAGE_DIM, MAX_INBAND_ATTACHMENT_SIZE, READ_DELAY } from '../config.js';\nimport { SUPPORTED_IMAGE_FORMATS, blobToBase64, filePasted, fileToBase64,\n  imageScaled, makeImageUrl } from '../lib/blob-helpers.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { bytesToHumanSize, shortDateFormat } from '../lib/strformat.js';\n\n// Run timer with this frequency (ms) for checking notification queue.\nconst NOTIFICATION_EXEC_INTERVAL = 300;\n\nconst messages = defineMessages({\n  online_now: {\n    id: 'online_now',\n    defaultMessage: 'online now',\n    description: 'Indicator that the user or topic is currently online',\n  },\n  last_seen: {\n    id: 'last_seen_timestamp',\n    defaultMessage: 'Last seen',\n    description: 'Label for the timestamp of when the user or topic was last online'\n  },\n  not_found: {\n    id: 'title_not_found',\n    defaultMessage: 'Not found',\n    description: 'Title shown when topic is not found'\n  },\n  channel: {\n    id: 'channel',\n    defaultMessage: 'channel',\n    description: 'Subtitle shown for channels in MessagesView instead of last seen'\n  },\n  file_attachment_too_large: {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  }\n});\n\n// Checks if the access permissions are granted but not yet accepted.\nfunction isUnconfirmed(acs) {\n  if (acs) {\n    const ex = acs.getExcessive() || '';\n    return acs.isJoiner('given') && (ex.includes('R') || ex.includes('W'));\n  }\n  return false;\n}\n\nfunction isPeerRestricted(acs) {\n  if (acs) {\n    const ms = acs.getMissing() || '';\n    return acs.isJoiner('want') && (ms.includes('R') || ms.includes('W'));\n  }\n  return false;\n}\n\nclass MessagesView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = MessagesView.getDerivedStateFromProps(props, {});\n\n    this.leave = this.leave.bind(this);\n    this.sendImageAttachment = this.sendImageAttachment.bind(this);\n    this.sendFileAttachment = this.sendFileAttachment.bind(this);\n    this.sendKeyPress = this.sendKeyPress.bind(this);\n    this.handleScrollReference = this.handleScrollReference.bind(this);\n    this.handleScrollEvent = this.handleScrollEvent.bind(this);\n    this.handleDescChange = this.handleDescChange.bind(this);\n    this.handleSubsUpdated = this.handleSubsUpdated.bind(this);\n    this.handleNewMessage = this.handleNewMessage.bind(this);\n    this.handleAllMessagesReceived = this.handleAllMessagesReceived.bind(this);\n    this.handleInfoReceipt = this.handleInfoReceipt.bind(this);\n    this.handleImagePostview = this.handleImagePostview.bind(this);\n    this.handleClosePreview = this.handleClosePreview.bind(this);\n    this.handleFormResponse = this.handleFormResponse.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleShowContextMenuMessage = this.handleShowContextMenuMessage.bind(this);\n    this.handleNewChatAcceptance = this.handleNewChatAcceptance.bind(this);\n    this.handleEnablePeer = this.handleEnablePeer.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n    this.postReadNotification = this.postReadNotification.bind(this);\n    this.clearNotificationQueue = this.clearNotificationQueue.bind(this);\n\n    this.readNotificationQueue = [];\n    this.readNotificationTimer = null;\n  }\n\n  componentDidMount() {\n    // this.propsChange(this.props, this.state);\n    if (this.messagesScroller) {\n      this.messagesScroller.addEventListener('scroll', this.handleScrollEvent);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messagesScroller) {\n      this.messagesScroller.removeEventListener('scroll', this.handleScrollEvent);\n    }\n\n    // Flush all notifications.\n    this.clearNotificationQueue();\n  }\n\n  // Scroll last message into view on component update e.g. on message received\n  // or vertical shrinking.\n  componentDidUpdate(prevProps, prevState) {\n    if (this.messagesScroller) {\n      if (prevState.topic != this.state.topic || prevState.messages.length != this.state.messages.length) {\n        // New message\n        this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n      } else if (prevProps.viewportHeight > this.props.viewportHeight) {\n        // Componet changed height.\n        this.messagesScroller.scrollTop += prevProps.viewportHeight - this.props.viewportHeight;\n      }\n    }\n\n    const topic = this.props.tinode ? this.props.tinode.getTopic(this.state.topic) : undefined;\n    if (this.state.topic != prevState.topic) {\n      if (prevState.topic && !Tinode.isNewGroupTopicName(prevState.topic)) {\n        this.leave(prevState.topic);\n      }\n\n      if (topic) {\n        topic.onData = this.handleNewMessage;\n        topic.onAllMessagesReceived = this.handleAllMessagesReceived;\n        topic.onInfo = this.handleInfoReceipt;\n        topic.onMetaDesc = this.handleDescChange;\n        topic.onSubsUpdated = this.handleSubsUpdated;\n        topic.onPres = this.handleSubsUpdated;\n      }\n    }\n\n    if (!this.props.applicationVisible) {\n      // If application is not visible, flush all unsent 'read' notifications.\n      this.clearNotificationQueue();\n    } else {\n      // Otherwise assume there are unread messages.\n      this.postReadNotification(0);\n    }\n\n    if (topic && !topic.isSubscribed() && this.props.ready &&\n        ((this.state.topic != prevState.topic) || !prevProps.ready)) {\n      // Is this a new topic?\n      const newTopic = (this.props.newTopicParams && this.props.newTopicParams._topicName == this.props.topic);\n\n      // Don't request the tags. They are useless unless the user\n      // is the owner and is editing the topic.\n      let getQuery = topic.startMetaQuery().withLaterDesc().withLaterSub();\n      if (this.state.isReader || newTopic) {\n        // Reading is either permitted or we don't know because it's a new topic. Ask for messages.\n        getQuery = getQuery.withLaterData(MESSAGES_PAGE);\n        if (this.state.isReader) {\n          getQuery = getQuery.withLaterDel();\n        }\n        // And show \"loading\" spinner.\n        this.setState({ fetchingMessages: true });\n      }\n      const setQuery = newTopic ? this.props.newTopicParams : undefined;\n      topic.subscribe(getQuery.build(), setQuery)\n        .then((ctrl) => {\n          if (ctrl.code == 303) {\n            // Redirect to another topic requested.\n            HashNavigation.navigateTo(HashNavigation.setUrlTopic('', ctrl.params.topic));\n            return;\n          }\n          if (this.state.topic != ctrl.topic) {\n            this.setState({topic: ctrl.topic});\n          }\n          this.props.onNewTopicCreated(this.props.topic, ctrl.topic);\n          // If there are unsent messages, try sending them now.\n          topic.queuedMessages((pub) => {\n            if (!pub._sending && topic.isSubscribed()) {\n              topic.publishMessage(pub);\n            }\n          });\n        })\n        .catch((err) => {\n          console.log(\"Failed subscription to\", this.state.topic);\n          this.props.onError(err.message, 'err');\n          const blankState = MessagesView.getDerivedStateFromProps({}, {});\n          blankState.title = this.props.intl.formatMessage(messages.not_found);\n          this.setState(blankState);\n        });\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let nextState = {};\n    if (!nextProps.topic) {\n      // Default state: no topic.\n      nextState = {\n        messages: [],\n        onlineSubs: [],\n        topic: null,\n        title: '',\n        avatar: null,\n        isVerified: false,\n        isStaff: false,\n        isDangerous: false,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false,\n        peerMessagingDisabled: false,\n        channel: false\n      };\n    } else if (nextProps.topic != prevState.topic) {\n      const topic = nextProps.tinode.getTopic(nextProps.topic);\n      nextState = {\n        topic: nextProps.topic,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false\n      };\n\n      if (topic) {\n        // Topic exists.\n        const msgs = [];\n        const subs = [];\n\n        if (nextProps.connected) {\n          topic.subscribers((sub) => {\n            if (sub.online && sub.user != nextProps.myUserId) {\n              subs.push(sub);\n            }\n          });\n        }\n\n        topic.messages(function(msg) {\n          if (!msg.deleted) {\n            msgs.push(msg);\n          }\n        });\n\n        Object.assign(nextState, {\n          messages: msgs,\n          onlineSubs: subs\n        });\n\n        if (topic.public) {\n          Object.assign(nextState, {\n            title: topic.public.fn,\n            avatar: makeImageUrl(topic.public.photo)\n          });\n        } else {\n          Object.assign(nextState, {\n            title: '',\n            avatar: null\n          });\n        }\n\n        const peer = topic.p2pPeerDesc();\n        if (peer) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: isPeerRestricted(peer.acs)\n          });\n        } else if (prevState.peerMessagingDisabled) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: false\n          });\n        }\n        Object.assign(nextState, {\n          channel: topic.isChannelType()\n        });\n      } else {\n        // Invalid topic.\n        Object.assign(nextState, {\n          messages: [],\n          onlineSubs: [],\n          title: '',\n          avatar: null,\n          peerMessagingDisabled: false,\n          channel: false\n        });\n      }\n    }\n\n    if (nextProps.acs) {\n      if (nextProps.acs.isWriter() != prevState.isWriter) {\n        nextState.isWriter = !prevState.isWriter;\n      }\n      if (nextProps.acs.isReader() != prevState.isReader) {\n        nextState.isReader = !prevState.isReader;\n      }\n      if (!nextProps.acs.isReader('given') != prevState.readingBlocked) {\n        nextState.readingBlocked = !prevState.readingBlocked;\n      }\n      if (nextProps.acs.isSharer() != prevState.isSharer) {\n        nextState.isSharer = !prevState.isSharer;\n      }\n    } else {\n      if (prevState.isWriter) {\n        nextState.isWriter = false;\n      }\n      if (prevState.isReader) {\n        nextState.isReader = false;\n      }\n      if (!prevState.readingBlocked) {\n        prevState.readingBlocked = true;\n      }\n      if (prevState.isSharer) {\n        nextState.isSharer = false;\n      }\n    }\n\n    if (isUnconfirmed(nextProps.acs) == !prevState.unconformed) {\n      nextState.unconfirmed = !prevState.unconformed;\n    }\n\n    // Clear subscribers online when there is no connection.\n    if (!nextProps.connected && prevState.onlineSubs && prevState.onlineSubs.length > 0) {\n      nextState.onlineSubs = [];\n    }\n\n    return nextState;\n  }\n\n  leave(oldTopicName) {\n    if (!oldTopicName || !this.props.tinode.isTopicCached(oldTopicName)) {\n      return;\n    }\n    const oldTopic = this.props.tinode.getTopic(oldTopicName);\n    if (oldTopic && oldTopic.isSubscribed()) {\n      oldTopic.leave(false)\n        .catch(() => { /* do nothing here */ })\n        .finally(() => {\n          // We don't care if the request succeeded or failed.\n          // The topic is dead regardless.\n          this.setState({fetchingMessages: false});\n          oldTopic.onData = undefined;\n          oldTopic.onAllMessagesReceived = undefined;\n          oldTopic.onInfo = undefined;\n          oldTopic.onMetaDesc = undefined;\n          oldTopic.onSubsUpdated = undefined;\n          oldTopic.onPres = undefined;\n        });\n    }\n  }\n\n  handleScrollReference(node) {\n    if (node) {\n      node.addEventListener('scroll', this.handleScrollEvent);\n      this.messagesScroller = node;\n      this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n    }\n  }\n\n  // Get older messages\n  handleScrollEvent(event) {\n    this.setState({scrollPosition: event.target.scrollHeight - event.target.scrollTop});\n    if (event.target.scrollTop <= 0) {\n      this.setState((prevState, props) => {\n        const newState = {};\n        if (!prevState.fetchingMessages) {\n          const topic = this.props.tinode.getTopic(this.state.topic);\n          if (topic && topic.isSubscribed() && topic.msgHasMoreMessages()) {\n            newState.fetchingMessages = true;\n            topic.getMessagesPage(MESSAGES_PAGE).catch((err) => {\n              this.setState({fetchingMessages: false});\n              this.props.onError(err.message, 'err');\n            });\n          }\n        }\n        return newState;\n      });\n    }\n  }\n\n  handleDescChange(desc) {\n    if (desc.public) {\n      this.setState({\n        title: desc.public.fn,\n        avatar: makeImageUrl(desc.public.photo)\n      });\n    } else {\n      this.setState({\n        title: '',\n        avatar: null\n      });\n    }\n\n    if (desc.acs) {\n      this.setState({\n        isWriter: desc.acs.isWriter(),\n        isReader: desc.acs.isReader(),\n        readingBlocked: !desc.acs.isReader('given'),\n        unconfirmed: isUnconfirmed(desc.acs),\n      });\n    }\n  }\n\n  postReadNotification(seq) {\n    // Ignore notifications if the app is invisible.\n    if (!this.props.applicationVisible) {\n      return;\n    }\n\n    // Set up the timer if it's not running already.\n    if (!this.readNotificationTimer) {\n      this.readNotificationTimer = setInterval(() => {\n        if (this.readNotificationQueue.length == 0) {\n          // Shut down the timer if the queue is empty.\n          clearInterval(this.readNotificationTimer);\n          this.readNotificationTimer = null;\n          return;\n        }\n\n        let seq = -1;\n        while (this.readNotificationQueue.length > 0) {\n          const n = this.readNotificationQueue[0];\n          if (n.topicName != this.state.topic) {\n            // Topic has changed. Drop the notification.\n            this.readNotificationQueue.shift();\n            continue;\n          }\n\n          const now = new Date();\n          if (n.sendAt <= now) {\n            // Remove expired notification from queue.\n            this.readNotificationQueue.shift();\n            seq = Math.max(seq, n.seq);\n          } else {\n            break;\n          }\n        }\n\n        // Send only one notification for the whole batch of messages.\n        if (seq >= 0) {\n          const topic = this.props.tinode.getTopic(this.state.topic);\n          if (topic) {\n            topic.noteRead(seq);\n          }\n        }\n      }, NOTIFICATION_EXEC_INTERVAL);\n    }\n\n    const now = new Date();\n    this.readNotificationQueue.push({\n      topicName: this.state.topic,\n      seq: seq,\n      sendAt: now.setMilliseconds(now.getMilliseconds() + READ_DELAY)\n    });\n  }\n\n  // Clear notification queue and timer.\n  clearNotificationQueue() {\n    this.readNotificationQueue = [];\n    if (this.readNotificationTimer) {\n      clearInterval(this.readNotificationTimer);\n      this.readNotificationTimer = null;\n    }\n  }\n\n  handleSubsUpdated() {\n    if (this.state.topic) {\n      const subs = [];\n      const topic = this.props.tinode.getTopic(this.state.topic);\n      topic.subscribers((sub) => {\n        if (sub.online && sub.user != this.props.myUserId) {\n          subs.push(sub);\n        }\n      });\n      const newState = {onlineSubs: subs};\n      const peer = topic.p2pPeerDesc();\n      if (peer) {\n        Object.assign(newState, {\n          peerMessagingDisabled: isPeerRestricted(peer.acs)\n        });\n      } else if (this.state.peerMessagingDisabled) {\n        Object.assign(newState, {\n          peerMessagingDisabled: false\n        });\n      }\n      this.setState(newState);\n    }\n  }\n\n  handleNewMessage(msg) {\n    // Regenerate messages list\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    const newState = {messages: []};\n    topic.messages((m) => {\n      if (!m.deleted) {\n        newState.messages.push(m);\n      }\n    });\n\n    // msg could be null if one or more messages were deleted.\n    if (msg && !msg.deleted) {\n      // If the message is added to the end of the message list,\n      // scroll to the bottom.\n      if (topic.isNewMessage(msg.seq)) {\n        newState.scrollPosition = 0;\n      }\n\n      // Aknowledge messages except own messages. They are\n      // automatically assumed to be read and recived.\n      const status = topic.msgStatus(msg, true);\n      if (status >= Tinode.MESSAGE_STATUS_SENT && msg.from != this.props.myUserId) {\n        this.postReadNotification(msg.seq);\n      }\n      this.props.onData(msg);\n    }\n    this.setState(newState);\n  }\n\n  handleAllMessagesReceived(count) {\n    this.setState({fetchingMessages: false});\n    if (count > 0) {\n      // 0 means \"latest\".\n      this.postReadNotification(0);\n    }\n  }\n\n  handleInfoReceipt(info) {\n    switch (info.what) {\n      case 'kp': {\n        clearTimeout(this.keyPressTimer);\n        var instance = this;\n        this.keyPressTimer = setTimeout(function() {\n          instance.setState({typingIndicator: false});\n        }, KEYPRESS_DELAY + 1000);\n        if (!this.state.typingIndicator) {\n          this.setState({typingIndicator: true});\n        }\n        break;\n      }\n      case 'read':\n      case 'recv':\n        // Redraw due to changed recv/read status.\n        this.forceUpdate();\n        break;\n      default:\n        console.log(\"Other change in topic: \", info.what);\n    }\n  }\n\n  handleImagePostview(content) {\n    this.setState({ imagePostview: content });\n  }\n\n  handleClosePreview() {\n    if (this.state.imagePreview && this.state.imagePreview.url) {\n      URL.revokeObjectURL(this.state.imagePreview.url);\n    }\n    this.setState({ imagePostview: null, imagePreview: null, docPreview: null });\n  }\n\n  handleFormResponse(action, text, data) {\n    if (action == 'pub') {\n      this.props.sendMessage(Drafty.attachJSON(Drafty.parse(text), data));\n    } else if (action == 'url') {\n      const url = new URL(data.ref);\n      const params = url.searchParams;\n      for (let key in data.resp) {\n        if (data.resp.hasOwnProperty(key)) {\n          params.set(key, data.resp[key]);\n        }\n      }\n      ['name', 'seq'].map((key) => {\n        if (data[key]) {\n          params.set(key, data[key]);\n        }\n      });\n      params.set('uid', this.props.myUserId);\n      params.set('topic', this.state.topic);\n      url.search = params;\n      window.open(url, '_blank');\n    } else {\n      console.log(\"Unknown action in form\", action);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.state.topic, y: e.pageY, x: e.pageX });\n  }\n\n  handleShowContextMenuMessage(params, messageSpecificMenuItems) {\n    params.topicName = this.state.topic;\n    const menuItems = messageSpecificMenuItems || [];\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (topic) {\n      if (!topic.isChannelType()) {\n        menuItems.push('message_delete');\n      }\n      const acs = topic.getAccessMode();\n      if (acs && acs.isDeleter()) {\n        menuItems.push('message_delete_hard');\n      }\n    }\n    this.props.showContextMenu(params, menuItems);\n  }\n\n  handleNewChatAcceptance(action) {\n    this.props.onNewChat(this.state.topic, action);\n  }\n\n  handleEnablePeer(e) {\n    e.preventDefault();\n    this.props.onChangePermissions(this.state.topic, DEFAULT_P2P_ACCESS_MODE, this.state.topic);\n  }\n\n  sendKeyPress() {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (topic.isSubscribed()) {\n      topic.noteKeyPress();\n    }\n  }\n\n  // Send attachment as Drafty message:\n  // - if file is too large, upload it and send a s link.\n  // - if file is small enough, just send it in-band.\n  sendFileAttachment(file) {\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (file.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      const uploadCompletionPromise = uploader.upload(file);\n      const msg = Drafty.attachFile(null, {\n        mime: file.type,\n        filename: file.name,\n        size: file.size,\n        urlPromise: uploadCompletionPromise\n      });\n      // Pass data and the uploader to the TinodeWeb.\n      this.props.sendMessage(msg, uploadCompletionPromise, uploader);\n    } else {\n      // Small enough to send inband.\n      fileToBase64(file,\n        (mime, bits, fname) => {\n          this.props.sendMessage(Drafty.attachFile(null, {mime: mime, data: bits, filename: fname}));\n        },\n        this.props.onError\n      );\n    }\n  }\n\n  // handleAttachFile method is called when [Attach file] button is clicked.\n  handleAttachFile(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    if (file.size > maxExternAttachmentSize) {\n      // Too large.\n      this.props.onError(this.props.intl.formatMessage(messages.file_attachment_too_large,\n        {size: bytesToHumanSize(file.size), limit: bytesToHumanSize(maxExternAttachmentSize)}), 'err');\n    } else {\n      this.setState({ docPreview: {\n        file: file,\n        filename: file.name,\n        size: file.size,\n        type: file.type\n      }});\n    }\n  }\n\n  // sendImageAttachment sends the image bits inband as Drafty message.\n  sendImageAttachment(caption, blob) {\n    const mime = this.state.imagePreview.type;\n    const width = this.state.imagePreview.width;\n    const height = this.state.imagePreview.height;\n    const fname = this.state.imagePreview.filename;\n\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (blob.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      if (!uploader) {\n        this.props.onError(this.props.intl.formatMessage(messages.cannot_initiate_upload));\n        return;\n      }\n      const uploadCompletionPromise = uploader.upload(blob);\n\n      // Make small preview to show while uploading.\n      imageScaled(blob, IMAGE_PREVIEW_DIM, IMAGE_PREVIEW_DIM, -1, false,\n        (tinyMine, tinyBlob) => {\n          // Convert tiny image into base64 for serialization and previewing.\n          blobToBase64(tinyBlob, (blobMime, tinyBits64) => {\n            let msg = Drafty.insertImage(null, 0, {\n              mime: mime,\n              _tempPreview: tinyBits64, // This preview will not be serialized.\n              width: width,\n              height: height,\n              filename: fname,\n              size: blob.size,\n              urlPromise: uploadCompletionPromise\n            });\n            if (caption) {\n              msg = Drafty.appendLineBreak(msg);\n              msg = Drafty.append(msg, Drafty.init(caption));\n            }\n            // Pass data and the uploader to the TinodeWeb.\n            this.props.sendMessage(msg, uploadCompletionPromise, uploader);\n          }\n        )},\n        // Failure\n        (err) => {\n          this.props.onError(err, 'err');\n        }\n      );\n      return;\n    }\n\n    // Upload the image if it's too big to be send inband.\n    blobToBase64(blob, (blobMime, bits64) => {\n      let msg = Drafty.insertImage(null, 0, {\n        mime: blobMime,\n        preview: bits64, // Serializable preview\n        width: width,\n        height: height,\n        filename: fname,\n        size: blob.size\n      });\n      if (caption) {\n        msg = Drafty.appendLineBreak(msg);\n        msg = Drafty.append(msg, Drafty.init(caption));\n      }\n      this.props.sendMessage(msg);\n    });\n  }\n\n  // handleAttachImage method is called when [Attach image] button is clicked.\n  handleAttachImage(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    // Get image dimensions and size, optionally scale it down.\n    imageScaled(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, maxExternAttachmentSize, false,\n      // Success\n      (mime, blob, width, height, fname) => {\n        this.setState({imagePreview: {\n          url: URL.createObjectURL(blob),\n          blob: blob,\n          filename: fname,\n          width: width,\n          height: height,\n          size: blob.size,\n          type: mime\n        }});\n      },\n      // Failure\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    );\n  }\n\n  handleCancelUpload(seq, uploader) {\n    const found = this.state.messages.find(msg => msg.seq == seq);\n    if (found) {\n      found._cancelled = true;\n    }\n    uploader.cancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n\n    let component;\n    if (this.props.hideSelf) {\n      component = null;\n    } else if (!this.state.topic) {\n      component = (\n        <LogoView\n          serverVersion={this.props.serverVersion}\n          serverAddress={this.props.serverAddress} />\n      );\n    } else {\n      let component2;\n      if (this.state.imagePreview) {\n        // Preview image before sending.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePreview}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendImageAttachment} />\n        );\n      } else if (this.state.imagePostview) {\n        // Expand received image.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePostview}\n            onClose={this.handleClosePreview} />\n        );\n      } else if (this.state.docPreview) {\n        // Preview attachment before sending.\n        component2 = (\n          <DocPreview\n            content={this.state.docPreview}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendFileAttachment} />\n        );\n      } else {\n        const topic = this.props.tinode.getTopic(this.state.topic);\n        const isChannel = topic.isChannelType();\n        const groupTopic = topic.isGroupType() && !isChannel;\n        const icon_badges = [];\n        if (topic.trusted) {\n          if (topic.trusted.verified) {\n            icon_badges.push({icon: 'verified', color: 'badge-inv'});\n          }\n          if (topic.trusted.staff) {\n            icon_badges.push({icon: 'staff', color: 'badge-inv'});\n          }\n          if (topic.trusted.danger) {\n            icon_badges.push({icon: 'dangerous', color: 'badge-inv'});\n          }\n        }\n        let messageNodes = [];\n        let previousFrom = null;\n        let chatBoxClass = null;\n        for (let i=0; i<this.state.messages.length; i++) {\n          let msg = this.state.messages[i];\n          let nextFrom = null;\n\n          if (i + 1 < this.state.messages.length) {\n            nextFrom = this.state.messages[i+1].from || 'chan';\n          }\n\n          let sequence = 'single';\n          let thisFrom = msg.from || 'chan';\n          if (thisFrom == previousFrom) {\n            if (thisFrom == nextFrom) {\n              sequence = 'middle';\n            } else {\n              sequence = 'last';\n            }\n          } else if (thisFrom == nextFrom) {\n            sequence = 'first';\n          }\n          previousFrom = thisFrom;\n\n          const isReply = !(thisFrom == this.props.myUserId);\n          const deliveryStatus = topic.msgStatus(msg, true);\n\n          let userName, userAvatar, userFrom;\n          if (groupTopic) {\n            const user = topic.userDesc(thisFrom);\n            if (user && user.public) {\n              userName = user.public.fn;\n              userAvatar = makeImageUrl(user.public.photo);\n            }\n            userFrom = thisFrom;\n            chatBoxClass='chat-box group';\n          } else {\n            chatBoxClass='chat-box';\n          }\n\n          messageNodes.push(\n            <ChatMessage\n              tinode={this.props.tinode}\n              content={msg.content}\n              deleted={msg.hi}\n              mimeType={msg.head ? msg.head.mime : null}\n              timestamp={msg.ts}\n              response={isReply}\n              seq={msg.seq}\n              userFrom={userFrom}\n              userName={userName}\n              userAvatar={userAvatar}\n              sequence={sequence}\n              received={deliveryStatus}\n              uploader={msg._uploader}\n              viewportWidth={this.props.viewportWidth}\n              showContextMenu={this.state.channel? false : this.handleShowContextMenuMessage}\n              onImagePreview={this.handleImagePostview}\n              onFormResponse={this.handleFormResponse}\n              onError={this.props.onError}\n              onCancelUpload={this.handleCancelUpload}\n              key={msg.seq} />\n          );\n        }\n\n        let lastSeen = null;\n        if (isChannel) {\n          lastSeen = formatMessage(messages.channel);\n        } else {\n          const cont = this.props.tinode.getMeTopic().getContact(this.state.topic);\n          if (cont && Tinode.isP2PTopicName(cont.topic)) {\n            if (cont.online) {\n              lastSeen = formatMessage(messages.online_now);\n            } else if (cont.seen) {\n              lastSeen = formatMessage(messages.last_seen) + \": \" +\n                shortDateFormat(cont.seen.when, this.props.intl.locale);\n              // TODO: also handle user agent in c.seen.ua\n            }\n          }\n        }\n        const avatar = this.state.avatar || true;\n        const online = this.props.online ? 'online' + (this.state.typingIndicator ? ' typing' : '') : 'offline';\n\n        component2 = (\n          <>\n            <div id=\"topic-caption-panel\" className=\"caption-panel\">\n              {this.props.displayMobile ?\n                <a href=\"#\" id=\"hide-message-view\" onClick={(e) => {e.preventDefault(); this.props.onHideMessagesView();}}>\n                  <i className=\"material-icons\">arrow_back</i>\n                </a>\n                :\n                null}\n              <div className=\"avatar-box\">\n                <LetterTile\n                  tinode={this.props.tinode}\n                  avatar={avatar}\n                  topic={this.state.topic}\n                  title={this.state.title} />\n                {!isChannel ? <span className={online} /> : null}\n              </div>\n              <div id=\"topic-title-group\">\n                <div id=\"topic-title\" className=\"panel-title\">{\n                  this.state.title ||\n                  <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n                    description=\"Title shown when the topic has no name\" /></i>\n                }<ContactBadges badges={icon_badges} /></div>\n                <div id=\"topic-last-seen\">{lastSeen}</div>\n              </div>\n              {groupTopic ?\n                <GroupSubs\n                  tinode={this.props.tinode}\n                  subscribers={this.state.onlineSubs} /> :\n                <div id=\"topic-users\" />\n              }\n              <div>\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">more_vert</i>\n                </a>\n              </div>\n            </div>\n            {this.props.displayMobile ?\n              <ErrorPanel\n                level={this.props.errorLevel}\n                text={this.props.errorText}\n                onClearError={this.props.onError} />\n              : null}\n            <LoadSpinner show={this.state.fetchingMessages} />\n            <div id=\"messages-container\">\n              <div id=\"messages-panel\" ref={this.handleScrollReference}>\n                <ul id=\"scroller\" className={chatBoxClass}>\n                  {messageNodes}\n                </ul>\n              </div>\n              {!this.state.isReader ?\n              <div id=\"write-only-background\">\n                {this.state.readingBlocked ?\n                <div id=\"write-only-note\">\n                  <FormattedMessage id=\"messages_not_readable\" defaultMessage=\"no access to messages\"\n                    description=\"Message shown in topic without the read access\" />\n                </div>\n                : null }\n              </div>\n              : null }\n            </div>\n            {this.state.peerMessagingDisabled && !this.state.unconfirmed ?\n              <div id=\"peer-messaging-disabled-note\">\n                <i className=\"material-icons secondary\">block</i> <FormattedMessage\n                  id=\"peers_messaging_disabled\" defaultMessage=\"Peer's messaging is disabled.\"\n                  description=\"Shown when the p2p peer's messaging is disabled\" /> <a href=\"#\"\n                    onClick={this.handleEnablePeer}><FormattedMessage id=\"enable_peers_messaging\"\n                    defaultMessage=\"Enable\" description=\"Call to action to enable peer's messaging\" /></a>.\n              </div> : null}\n            {this.state.unconfirmed ?\n              <Invitation onAction={this.handleNewChatAcceptance} />\n              :\n              <SendMessage\n                disabled={!this.state.isWriter}\n                onSendMessage={this.props.sendMessage}\n                onKeyPress={this.sendKeyPress}\n                onAttachFile={this.handleAttachFile}\n                onAttachImage={this.handleAttachImage}\n                onError={this.props.onError} />}\n          </>\n        );\n      }\n\n      component = <div id=\"topic-view\">{component2}</div>\n    }\n    return component;\n  }\n};\n\nexport default injectIntl(MessagesView);\n","// The <- button to be displayed in title bars.\nimport React from 'react';\n\nexport default class ButtonBack extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onBack();}}>\n        <i className=\"material-icons\">arrow_back</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class MenuContacts extends React.PureComponent {\n  render() {\n    return (\n      <div>\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onNewTopic();}}><i className=\"material-icons\">chat</i></a>\n        &nbsp;\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nexport default class MenuStart extends React.PureComponent {\n  render() {\n    return (\n        <div>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSignUp();}}><i className=\"material-icons\">person_add</i></a>\n          &nbsp;\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n        </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\nimport ButtonBack from './button-back.jsx';\nimport ContactBadges from './contact-badges.jsx';\nimport MenuContacts from './menu-contacts.jsx';\nimport MenuStart from './menu-start.jsx';\n\nimport { sanitizeImageUrl } from '../lib/utils.js';\n\nexport default class SideNavbar extends React.PureComponent {\n  render() {\n    const icon_badges = [];\n    if (this.props.trustedBadges) {\n      this.props.trustedBadges.map((b) => {\n        icon_badges.push({icon: b, color: 'badge-inv'});\n      });\n    }\n    let avatar = null;\n    if (this.props.tinode) {\n      avatar = this.props.tinode.authorizeURL(sanitizeImageUrl(this.props.avatar));\n    }\n    return (\n      <div id=\"side-caption-panel\" className=\"caption-panel\">\n        {this.props.onCancel ? <ButtonBack onBack={this.props.onCancel} /> : null}\n        {avatar ?\n          <div id=\"self-avatar\" className=\"avatar-box\">\n            <LetterTile\n              tinode={this.props.tinode}\n              avatar={avatar}\n              topic={this.props.myUserId}\n              title={this.props.title} />\n          </div>\n          :\n          null}\n        <div id=\"sidepanel-title\" className=\"panel-title\">{this.props.title}<ContactBadges badges={icon_badges}/></div>\n        {this.props.state === 'login' ?\n            <MenuStart onSignUp={this.props.onSignUp} onSettings={this.props.onSettings} /> :\n          this.props.state === 'contacts' ?\n            <MenuContacts onNewTopic={this.props.onNewTopic} onSettings={this.props.onSettings} /> :\n          null}\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport BadgeList from '../widgets/badge-list.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH } from '../config.js';\n\nfunction _clip(str, length) {\n  return str && str.substring(0, length);\n}\n\nexport default class AccountSettingsView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    this.state = {\n      fullName: _clip(me.public ? me.public.fn : undefined, MAX_TITLE_LENGTH),\n      description: _clip(me.public ? me.public.note : undefined, MAX_TOPIC_DESCRIPTION_LENGTH),\n      avatar: makeImageUrl(me.public ? me.public.photo : null)\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          <a href=\"#\" className=\"flat-button float-right\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('general');}}>\n            <i className=\"material-icons\">edit</i>&nbsp;\n            <FormattedMessage id=\"button_edit\" defaultMessage=\"Edit\" description=\"Call to action [Edit]\" />\n          </a>\n          <center>\n            <AvatarUpload\n              tinode={this.props.tinode}\n              avatar={this.state.avatar}\n              readOnly={true}\n              uid={this.props.myUserId}\n              title={this.state.fullName} />\n          </center>\n          <div className=\"group\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n                description=\"Label for full name editing\" />\n            </label>\n            <div className=\"large ellipsized\">{this.state.fullName}</div>\n          </div>\n          <div className=\"group\">\n            <label className=\"small\"><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n              description=\"Label for user address (ID)\" /></label>&nbsp;\n            <tt>{this.props.myUserId}</tt>\n          </div>\n          <div className=\"group\">\n            <BadgeList trustedBadges={this.props.trustedBadges} />\n          </div>\n          {this.state.description ?\n            <div className=\"group\">\n              <label className=\"small\">\n                <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                  description=\"Label for editing topic description\" />\n              </label>\n              <div>{this.state.description}</div>\n            </div> : null}\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('notif');}}>\n            <i className=\"material-icons\">notifications</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_notifications\"\n              defaultMessage=\"Notifications\" description=\"Sidepanel title for AccNotificationsView.\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('security');}}>\n            <i className=\"material-icons\">security</i>&nbsp;<FormattedMessage id=\"button_security\"\n              defaultMessage=\"Security\" description=\"Navigaton button for security panel.\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('support');}}>\n            <i className=\"material-icons\">contact_support</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_support\"\n              defaultMessage=\"Support\" description=\"Sidepanel title for AccSupportView.\" />\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","/* ContactsView holds all contacts-related stuff */\nimport React from 'react';\nimport { FormattedMessage, defineMessages } from 'react-intl';\n\nimport ContactList from '../widgets/contact-list.jsx';\n\nimport { updateFavicon } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  archived_contacts_title: {\n    id: \"archived_contacts\",\n    defaultMessage: \"Archived contacts ({count})\",\n    description: \"Label for archived chats\"\n  }\n});\n\nexport default class ContactsView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAction = this.handleAction.bind(this);\n\n    this.state = ContactsView.deriveStateFromProps(props);\n  }\n\n  static deriveStateFromProps(props) {\n    const contacts = [];\n    let unreadThreads = 0;\n    let archivedCount = 0;\n    props.chatList.map((c) => {\n      const blocked = c.acs && !c.acs.isJoiner();\n      // Show only blocked contacts only when props.blocked == true.\n      if (blocked && props.blocked) {\n        contacts.push(c);\n      }\n      if (blocked || props.blocked) {\n        return;\n      }\n\n      if (c.private && c.private.arch) {\n        if (props.archive) {\n          contacts.push(c);\n        } else {\n          archivedCount ++;\n        }\n      } else if (!props.archive) {\n        contacts.push(c);\n        unreadThreads += c.unread > 0 ? 1 : 0;\n      }\n    });\n\n    contacts.sort((a, b) => {\n      return (b.touched || 0) - (a.touched || 0);\n    });\n\n    if (archivedCount > 0) {\n      contacts.push({\n        action: 'archive',\n        title: messages.archived_contacts_title,\n        values: {count: archivedCount}\n      });\n    }\n\n    return {\n      contactList: contacts,\n      unreadThreads: unreadThreads\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chatList != this.props.chatList ||\n        prevProps.archive != this.props.archive ||\n        prevProps.blocked != this.props.blocked) {\n      const newState = ContactsView.deriveStateFromProps(this.props);\n      this.setState(newState);\n      if (newState.unreadThreads != prevState.unreadThreads) {\n        updateFavicon(newState.unreadThreads);\n      }\n    }\n  }\n\n  handleAction(action_ignored) {\n    this.props.onShowArchive();\n  }\n\n  render() {\n    return (\n      <FormattedMessage id=\"contacts_not_found\"\n        defaultMessage=\"You have no chats<br />¯∖_(ツ)_/¯\"\n        description=\"HTML message shown in ContactList when no contacts are found\">{\n        (no_contacts) => <ContactList\n          tinode={this.props.tinode}\n          connected={this.props.connected}\n          contacts={this.state.contactList}\n          emptyListMessage={no_contacts}\n          topicSelected={this.props.topicSelected}\n          myUserId={this.props.myUserId}\n          showOnline={true}\n          showUnread={true}\n          onTopicSelected={this.props.onTopicSelected}\n          showContextMenu={this.props.showContextMenu}\n          onAction={this.handleAction} />\n      }</FormattedMessage>\n    );\n  }\n};\n","// Helper functions for storing values in localStorage.\n// By default localStorage can store only strings, not objects or other types.\n\nexport default class LocalStorageUtil {\n  // Replace old object with the new one.\n  static setObject(key, value) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n\n  // Get stored object.\n  static getObject(key) {\n    const value = localStorage.getItem(key);\n    return value && JSON.parse(value);\n  }\n\n  // Partially or wholly update stored object.\n  static updateObject(key, value) {\n    const oldVal = this.getObject(key);\n    this.setObject(key, Object.assign(oldVal || {}, value));\n  }\n\n  // Just a wrapper.\n  static removeItem(key) {\n    localStorage.removeItem(key);\n  }\n}\n","// Account registration.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport { theCard } from '../lib/utils.js';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class CreateAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: '',\n      password: '',\n      email: '',\n      fn: '', // full/formatted name\n      imageDataUrl: null,\n      errorCleared: false,\n      saveToken: LocalStorageUtil.getObject('keep-logged-in')\n    };\n\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(password) {\n    this.setState({password: password});\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value})\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleToggleSaveToken() {\n    LocalStorageUtil.setObject('keep-logged-in', !this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({errorCleared: false});\n    this.props.onCreateAccount(\n      this.state.login.trim(),\n      this.state.password.trim(),\n      theCard(this.state.fn.trim().substring(0, MAX_TITLE_LENGTH), this.state.imageDataUrl),\n      {'meth': 'email', 'val': this.state.email});\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form className=\"panel-form-column\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n              description=\"Placeholer for username/login\">{\n              (login_prompt) => <input type=\"text\" placeholder={login_prompt} autoComplete=\"user-name\"\n                value={this.state.login} onChange={this.handleLoginChange} required autoFocus />\n            }</FormattedMessage>\n            <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n              description=\"Placeholder/prompt for entering password\">{\n              (password_prompt) => <VisiblePassword placeholder={password_prompt} autoComplete=\"new-password\"\n                value={this.state.password} onFinished={this.handlePasswordChange}\n                required={true} />\n            }</FormattedMessage>\n          </div>\n          <AvatarUpload\n            tinode={this.props.tinode}\n            onImageChanged={this.handleImageChanged}\n            onError={this.props.onError} />\n        </div>\n        <div  className=\"panel-form-row\">\n          <FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n            description=\"Input placeholder for person's full name\">{\n            (full_name_prompt) => <input type=\"text\" placeholder={full_name_prompt} autoComplete=\"name\"\n              value={this.state.fn} onChange={this.handleFnChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <FormattedMessage id=\"email_prompt\" defaultMessage=\"Email, e.g. jdoe@example.com\"\n            description=\"Input placeholder for email entry\">{\n            (email_prompt) => <input type=\"email\" placeholder={email_prompt} autoComplete=\"email\"\n              value={this.state.email} onChange={this.handleEmailChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n            description=\"Label for a checkbox\">{\n            (stay_logged_in) => <label htmlFor=\"save-token\">&nbsp;{stay_logged_in}</label>\n          }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_up\" defaultMessage=\"Sign up\"\n              description=\"Create account button [Sign Up]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\n\nexport default class EditAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckboxClick = this.handleCheckboxClick.bind(this);\n  }\n\n  handleCheckboxClick(what, checked) {\n    if (what == 'sound') {\n      this.props.onToggleMessageSounds(checked);\n    } else if (what == 'alert') {\n      this.props.onTogglePushNotifications(checked);\n    } else if (what == 'incognito') {\n      this.props.onToggleIncognitoMode(checked);\n    }\n  }\n\n  render() {\n    return (\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"message-sound\">\n              <FormattedMessage id=\"label_message_sound\" defaultMessage=\"Message sound:\"\n                description=\"Label for message sounds toggle\" />\n            </label>\n            <CheckBox name=\"sound\" id=\"message-sound\"\n              checked={this.props.messageSounds} onChange={this.handleCheckboxClick} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"desktop-alerts\">\n            {this.props.desktopAlertsEnabled ?\n              <FormattedMessage id=\"label_push_notifications\" defaultMessage=\"Notification alerts:\"\n                description=\"Label for push notifications switch\" />\n              :\n              <FormattedMessage id=\"label_push_notifications_disabled\"\n                defaultMessage=\"Notification alerts (requires HTTPS):\"\n                description=\"Label for push notifications switch\" />\n            }\n            </label>\n            <CheckBox name=\"alert\" id=\"desktop-alerts\"\n              checked={this.props.desktopAlerts}\n              onChange={this.props.desktopAlertsEnabled ? this.handleCheckboxClick : null} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"incognito-mode\">\n              <FormattedMessage id=\"label_incognito_mode\" defaultMessage=\"Incognito mode:\"\n                description=\"Label for incognito mode toggle\" />\n            </label>\n            <CheckBox name=\"incognito\" id=\"incognito-mode\"\n              checked={this.props.incognitoMode} onChange={this.handleCheckboxClick} />\n          </div>\n        </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\n\nconst messages = defineMessages({\n  delete_account: {\n    id: 'delete_account',\n    defaultMessage: 'Delete account',\n    description: 'Title for delete account warning'\n  },\n  delete_account_warning: {\n    id: 'delete_account_warning',\n    defaultMessage: 'Are you sure you want to delete your account? It cannot be undone.',\n    description: 'Warning message when deleting an account'\n  }\n});\n\nclass AccSecurityView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    let blockedCount = 0;\n    me.contacts((c) => {\n      if (c.acs && !c.acs.isJoiner()) {\n        blockedCount ++;\n      }\n    });\n    const defacs = me.getDefaultAccess();\n    this.state = {\n      auth: defacs ? defacs.auth : null,\n      anon: defacs ? defacs.anon : null,\n      showPermissionEditorFor: undefined,\n      blockedCount: blockedCount,\n    };\n\n    this.handlePasswordUpdate = this.handlePasswordUpdate.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n  }\n\n  handlePasswordUpdate(pwd) {\n    this.setState({password: pwd});\n    this.props.onUpdatePassword(pwd);\n  }\n\n  handleLaunchPermissionsEditor(which) {\n    this.setState({\n      showPermissionEditorFor: which,\n      editedPermissions: this.state[which]\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handlePermissionsChanged(perm) {\n    let defacs = {};\n    defacs[this.state.showPermissionEditorFor] = perm;\n    this.props.onUpdateAccountDesc('me', undefined, undefined, defacs);\n\n    let newState = {showPermissionEditorFor: undefined};\n    newState[this.state.showPermissionEditorFor] = perm;\n    this.setState(newState);\n  }\n\n  handleDeleteAccount(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.delete_account), // title\n      formatMessage(messages.delete_account_warning), // content\n      (() => { this.props.onDeleteAccount(); }), // onConfirm\n      null, // use default text \"OK\"\n      true, // Show Reject button\n      null  // use default text \"Cancel\"\n    );\n  }\n\n  render() {\n    return (\n      <React.Fragment>{this.state.showPermissionEditorFor ?\n        <PermissionsEditor\n          mode={this.state.editedPermissions}\n          skip=\"O\"\n          onSubmit={this.handlePermissionsChanged}\n          onCancel={this.handleHidePermissionsEditor} />\n        :\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_password\" defaultMessage=\"Password\"\n                  description=\"Label for password editing\" />\n            </label>\n            <div>\n              <FormattedMessage id=\"password_unchanged_prompt\" defaultMessage=\"Unchanged\"\n                description=\"Message in editor while password is unchanged\">{\n                (password_unchanged) => <InPlaceEdit\n                  placeholder={password_unchanged}\n                  type=\"password\"\n                  onFinished={this.handlePasswordUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <a href=\"#\" className=\"danger flat-button\" onClick={(e) => {e.preventDefault(); this.props.onLogout();}}>\n              <i className=\"material-icons\">exit_to_app</i> &nbsp;<FormattedMessage id=\"button_logout\"\n                defaultMessage=\"Logout\" description=\"Button [Logout]\" />\n            </a>\n            <a href=\"#\" className=\"danger flat-button\" onClick={(e) => {this.handleDeleteAccount(e);}}>\n              <i className=\"material-icons\">delete</i> &nbsp;<FormattedMessage id=\"button_delete_account\"\n                defaultMessage=\"Delete account\" description=\"Button [Delete account]\" />\n            </a>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <div>\n              <label className=\"small\">\n                <FormattedMessage id=\"label_default_access_mode\" defaultMessage=\"Default access mode:\"\n                description=\"Label for default access mode\" />\n              </label>\n            </div>\n            <div className=\"quoted\">\n              <div>Auth: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>{this.state.auth}</tt></div>\n              <div>Anon: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>{this.state.anon}</tt></div>\n            </div>\n          </div>\n          {this.state.blockedCount > 0 ?\n            <>\n              <div className=\"hr\" />\n              <div className=\"panel-form-row\">\n                <i className=\"material-icons\">block</i>&nbsp;\n                <a href=\"#\" className=\"gray\" onClick={(e) => {e.preventDefault(); this.props.onShowBlocked();}}>\n                  <FormattedMessage id=\"blocked_contacts_link\" defaultMessage=\"Blocked contacts ({count})\"\n                    values={{ count: this.state.blockedCount }} description=\"Blocked contacts link\" />\n                </a>\n              </div>\n            </>\n            : null }\n        </div>\n      }</React.Fragment>\n    );\n  }\n};\n\nexport default injectIntl(AccSecurityView);\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME, LINK_CONTACT_US, LINK_PRIVACY_POLICY, LINK_TERMS_OF_SERVICE } from '../config.js';\n\nexport default class AccSupportView extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          <a href={LINK_CONTACT_US} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">email</i> &nbsp;<FormattedMessage id=\"link_contact_us\"\n              defaultMessage=\"Contact Us\" description=\"Ancor text for contacting us by email\" />\n          </a>\n          <a href={LINK_TERMS_OF_SERVICE} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">description</i> &nbsp;<FormattedMessage id=\"link_terms_of_service\"\n              defaultMessage=\"Terms of Service\" description=\"Ancor text for terms of service link\" />\n          </a>\n          <a href={LINK_PRIVACY_POLICY} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">policy</i> &nbsp;<FormattedMessage id=\"link_privacy_policy\"\n              defaultMessage=\"Privacy Policy\" description=\"Ancor text for privacy policy link\" />\n          </a>\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\"\n              description=\"Label for a client version\" /></label>\n            {APP_NAME}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_sdk\" defaultMessage=\"SDK:\" /></label>\n            {Tinode.getLibrary()}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\"\n              description=\"Label for a server version\" /></label>\n            {this.props.serverVersion}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server_address\" defaultMessage=\"Server address:\" /></label>\n            {this.props.serverAddress}\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","// Login form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\n\nexport default class LoginView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: props.login,\n      password: '',\n      hostName: props.serverAddress,\n      saveToken: props.persist\n    };\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  handleToggleSaveToken() {\n    this.props.onPersistenceChange(!this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onLogin(this.state.login.trim(), this.state.password.trim());\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form id=\"login-form\" onSubmit={this.handleSubmit}>\n        <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n          description=\"Placeholer for username/login\">\n        {\n          (login_prompt) => <input type=\"text\" id=\"inputLogin\"\n            placeholder={login_prompt}\n            autoComplete=\"username\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"none\"\n            value={this.state.login}\n            onChange={this.handleLoginChange}\n            required autoFocus />\n        }\n        </FormattedMessage>\n        <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n          description=\"Placeholder/prompt for entering password\">\n        {\n          (password_prompt) => <VisiblePassword type=\"password\" id=\"inputPassword\"\n            placeholder={password_prompt}\n            autoComplete=\"current-password\"\n            value={this.state.password}\n            onChange={this.handlePasswordChange}\n            required={true} />\n        }\n        </FormattedMessage>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <label htmlFor=\"save-token\">&nbsp;\n            <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n              description=\"Label for a checkbox\" />\n          </label>\n          <a href=\"#reset\">\n            <FormattedMessage id=\"forgot_password_link\" defaultMessage=\"Forgot password?\"\n              description=\"Link to Reset password form\" />\n          </a>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_in\" defaultMessage=\"Sign in\"\n              description=\"Button [Sign In]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n/* END Login */\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  invalid_id: {\n    id: 'error_invalid_id',\n    defaultMessage: 'Invalid ID',\n    description: 'Error message'\n  }\n});\n\nclass NewTopicById extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      groupId: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({groupId: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.groupId) {\n      const name = this.state.groupId.trim();\n      const prefix = name.substr(0, 3);\n      if (name.length > 3 && ['usr', 'grp', 'chn'].includes(prefix)) {\n        this.props.onSubmit(name);\n      } else {\n        this.props.onError(this.props.intl.formatMessage(messages.invalid_id), 'err');\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"group_user_id_prompt\" defaultMessage=\"Group or User ID\"\n          description=\"Prompt for entering user or group ID\">{\n          (prompt) => <input type=\"text\" placeholder={prompt}\n            value={this.state.groupId} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required autoFocus />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_subscribe\" defaultMessage=\"Subscribe\"\n              description=\"Button [Subscribe]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicById);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from './avatar-upload.jsx';\nimport CheckBox from './checkbox.jsx';\nimport TagManager from './tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH } from '../config.js';\n\nexport default class NewTopicGroup extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.fullName = React.createRef();\n\n    this.state = {\n      fullName: '', // full/formatted name\n      private: '',\n      description: '',\n      imageDataUrl: null,\n      tags: [],\n      isChannel: false\n    };\n\n    this.handleFieldEdit = this.handleFieldEdit.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleTagsChanged = this.handleTagsChanged.bind(this);\n    this.handleChannelToggle = this.handleChannelToggle.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    // this.fullName.current.focus();\n  }\n\n  handleFieldEdit(name, e) {\n    this.setState({[name]: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleTagsChanged(tags) {\n    this.setState({tags: tags});\n  }\n\n  handleChannelToggle() {\n    this.setState({isChannel: !this.state.isChannel});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const fn = this.state.fullName.trim().substring(0, MAX_TITLE_LENGTH);\n    const comment = this.state.private.trim().substring(0, MAX_TITLE_LENGTH);\n    const description = this.state.description.trim().substring(0, MAX_TOPIC_DESCRIPTION_LENGTH);\n    if (fn) {\n      this.props.onSubmit(fn, description, this.state.imageDataUrl, comment, this.state.tags, this.state.isChannel);\n    }\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n    return (\n      <form className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-column\">\n          <center>\n            <AvatarUpload\n              tinode={this.props.tinode}\n              onError={this.props.onError}\n              onImageChanged={this.handleImageChanged} />\n          </center>\n          <div className=\"group\">\n            <label className=\"small\" htmlFor=\"new-topic-fn\">\n              <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                description=\"Label for editing topic name\" />\n            </label>\n            <FormattedMessage id=\"topic_name_editing_placeholder\" defaultMessage=\"Freeform name of the group\"\n              description=\"Prompt for entering topic name\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-fn\" placeholder={placeholder}\n                ref={this.fullName} value={this.state.fullName} onChange={this.handleFieldEdit.bind('fullName')}\n                autoFocus required tabIndex={0} />\n            }</FormattedMessage>\n          </div>\n          <div className=\"group\">\n            <label className=\"small\" htmlFor=\"new-topic-priv\">\n              <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                description=\"Label for editing 'private'\" />\n            </label>\n            <FormattedMessage id=\"private_editing_placeholder\" defaultMessage=\"Visible to you only\"\n              description=\"Placeholder for editing 'private'\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-priv\" placeholder={placeholder}\n                value={this.state.private} onChange={this.handleFieldEdit.bind('private')} tabIndex={1} />\n            }</FormattedMessage>\n          </div>\n          <div className=\"group\">\n            <label className=\"small\" htmlFor=\"new-topic-desc\">\n              <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                description=\"Label for editing topic description\" />\n            </label>\n            <FormattedMessage id=\"description_editing_placeholder\" defaultMessage=\"Description (optional)\"\n              description=\"Placeholder for editing topic description\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-desc\" placeholder={placeholder}\n                value={this.state.description} onChange={this.handleFieldEdit.bind('description')} tabIndex={2} />\n            }</FormattedMessage>\n          </div>\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox checked={this.state.isChannel} tabIndex={3} onChange={this.handleChannelToggle} />&nbsp;\n          <label onClick={this.handleChannelToggle}><FormattedMessage id=\"channel_prompt\"\n            defaultMessage=\"This is a channel\"\n            description=\"Checkbox label when creating a channel\" /></label>\n        </div>\n        <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (search & discovery)\"\n          description=\"Section title for TagManager\">{\n          (title) => <TagManager\n            tinode={this.props.tinode}\n            tags={this.state.tags}\n            activated={true}\n            onTagsChanged={this.handleTagsChanged}\n            tabIndex={4}\n            title={title} />\n        }</FormattedMessage>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses}>\n            <FormattedMessage id=\"button_create\" defaultMessage=\"Create\"\n              description=\"Button [Create]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nexport default class SearchContacts extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      edited: false,\n      search: ''\n    };\n\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  componentWillUnmount() {\n    if (this.state.edited) {\n      this.setState({search: '', edited: false});\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n  }\n\n  handleSearchChange(e) {\n    this.setState({search: e.target.value});\n  }\n\n  handleSearch(e) {\n    e.preventDefault();\n    var query = this.state.search.trim();\n    this.setState({edited: (query.length > 0)});\n    this.props.onSearchContacts(query.length > 0 ? query : Tinode.DEL_CHAR);\n  }\n\n  handleClear(e) {\n    e.preventDefault();\n    if (this.state.edited) {\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n    this.setState({search: '', edited: false});\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Enter') {\n      this.handleSearch(e);\n    } else if (e.key === 'Escape') {\n      this.handleClear();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <i className=\"material-icons search\">search</i>\n          <FormattedMessage id=\"search_placeholder\" defaultMessage=\"List like email:alice@example.com, tel:17025550003...\"\n            description=\"Placeholder in contacts search field\">{\n            (search_placeholder) => <input className=\"search\" type=\"text\"\n              placeholder={search_placeholder}\n              value={this.state.search} onChange={this.handleSearchChange}\n              onKeyDown={this.handleKeyDown} required autoFocus />\n          }</FormattedMessage>\n          <a href=\"#\" onClick={this.handleClear}>\n            <i className=\"material-icons\">close</i>\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","// Create new topic and invite users or send an invite.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport ContactList from '../widgets/contact-list.jsx';\nimport NewTopicById from '../widgets/new-topic-by-id.jsx';\nimport NewTopicGroup from '../widgets/new-topic-group.jsx';\nimport SearchContacts from '../widgets/search-contacts.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\nimport { theCard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  search_for_contacts: {\n    id: \"search_for_contacts\",\n    defaultMessage: \"Use search to find contacts\",\n    description: \"Text shown in contacts view when user entered no search query.\"\n  },\n  search_no_results: {\n    id: \"search_no_results\",\n    defaultMessage: \"Search returned no results\",\n    description: \"Text shown in contacts view when query returned no results.\"\n  }\n});\n\nclass NewTopicView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tabSelected: 'p2p',\n      searchQuery: null\n    };\n\n    this.handleTabClick = this.handleTabClick.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleNewGroupSubmit = this.handleNewGroupSubmit.bind(this);\n    this.handleGroupByID = this.handleGroupByID.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.onInitFind();\n  }\n\n  handleTabClick(e) {\n    e.preventDefault();\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'tab', e.currentTarget.dataset.id));\n    this.setState({tabSelected: e.currentTarget.dataset.id});\n  }\n\n  handleSearchContacts(query) {\n    this.props.onSearchContacts(query);\n    this.setState({searchQuery: Tinode.isNullValue(query) ? null : query});\n  }\n\n  handleContactSelected(sel) {\n    if (this.state.tabSelected === 'p2p') {\n      HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n      this.props.onCreateTopic(sel);\n    }\n  }\n\n  handleNewGroupSubmit(name, description, dataUrl, priv, tags, isChannel) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(undefined, theCard(name, dataUrl, null, description), priv, tags, isChannel);\n  }\n\n  handleGroupByID(topicName) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(topicName);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const no_contacts_placeholder = formatMessage(this.state.searchQuery ?\n      messages.search_no_results : messages.search_for_contacts);\n    return (\n      <div className=\"flex-column\">\n        <ul className=\"tabbar\">\n          <li className={this.state.tabSelected === \"p2p\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"p2p\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_find_user\" defaultMessage=\"find\"\n                description=\"Tab title Find\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"grp\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"grp\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_new_group\" defaultMessage=\"new group\"\n                description=\"Tab title New Group\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"byid\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"byid\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_group_by_id\" defaultMessage=\"by id\"\n                description=\"Tab title Find topic by ID\" />\n            </a>\n          </li>\n        </ul>\n        {this.state.tabSelected === 'grp' ?\n          <NewTopicGroup\n            tinode={this.props.tinode}\n            onSubmit={this.handleNewGroupSubmit} /> :\n          this.state.tabSelected === 'byid' ?\n            <NewTopicById\n              onSubmit={this.handleGroupByID}\n              onError={this.props.onError} /> :\n            <div className=\"flex-column\">\n              <SearchContacts\n                type=\"p2p\"\n                onSearchContacts={this.handleSearchContacts} />\n              <ContactList\n                contacts={this.props.searchResults}\n                myUserId={this.props.myUserId}\n                emptyListMessage={no_contacts_placeholder}\n                showOnline={false}\n                showUnread={false}\n                showContextMenu={false}\n                onTopicSelected={this.handleContactSelected} />\n            </div>}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicView);\n","// A password reset form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\n\nexport default class PasswordResetView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n  }\n\n  componentDidMount() {\n    let parsed = HashNavigation.parseUrlHash(window.location.hash);\n    this.setState({token: parsed.params.token, scheme: parsed.params.scheme});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.token) {\n      this.props.onReset(this.state.scheme, this.state.password.trim(), this.state.token);\n    } else {\n      this.props.onRequest('email', this.state.email.trim());\n    }\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  render() {\n    let reset = (this.state.token && this.state.scheme);\n    return (\n      <form id=\"password-reset-form\" onSubmit={this.handleSubmit}>\n        {reset ?\n          <FormattedMessage id=\"new_password_placeholder\" defaultMessage=\"Enter new password\"\n            description=\"Placeholder for entering new password\">{\n            (placeholder) => <VisiblePassword\n              placeholder={placeholder}\n              autoComplete=\"new-password\"\n              value={this.state.password}\n              required={true} autoFocus={true}\n              onChange={this.handlePasswordChange} />\n          }</FormattedMessage>\n          :\n          <>\n            <label htmlFor=\"inputEmail\">\n              <FormattedMessage id=\"label_reset_password\"\n                defaultMessage=\"Send a password reset email:\"\n                description=\"Label for password reset field\" />\n            </label>\n            <FormattedMessage id=\"credential_email_prompt\" defaultMessage=\"Your registration email\"\n              description=\"Placeholder for entering email\">{\n              (placeholder) => <input type=\"email\" id=\"inputEmail\"\n                placeholder={placeholder}\n                autoComplete=\"email\"\n                value={this.state.email}\n                onChange={this.handleEmailChange}\n                required autoFocus />\n            }</FormattedMessage>\n          </>\n        }\n        <div className=\"dialog-buttons\">\n          <button className=\"primary\" type=\"submit\">{reset ?\n            <FormattedMessage id=\"button_reset\" defaultMessage=\"Reset\" description=\"Button [Reset]\" /> :\n            <FormattedMessage id=\"button_send_request\" defaultMessage=\"Send request\"\n              description=\"Button [Send request]\" />\n          }</button>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react';\n\nimport { KNOWN_HOSTS } from '../config.js';\n\n/* Combobox for selecting host name */\n\nexport default class HostSelector extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hostName: props.serverAddress,\n      changed: false\n    };\n\n    this.handleHostNameChange = this.handleHostNameChange.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handleHostNameChange(e) {\n    this.setState({hostName: e.target.value, changed: true});\n  }\n\n  handleEditingFinished() {\n    if (this.state.changed) {\n      this.setState({changed: false});\n      this.props.onServerAddressChange(this.state.hostName.trim());\n    }\n  }\n\n  render() {\n    var hostOptions = [];\n    for (let key in KNOWN_HOSTS) {\n      let item = KNOWN_HOSTS[key];\n      hostOptions.push(\n        <option key={item} value={item} />\n      );\n    }\n    return (\n      <div className=\"panel-form-row\">\n        <input type=\"search\" id=\"host-name\" placeholder={this.props.hostName} list=\"known-hosts\"\n          className=\"quoted\" value={this.state.hostName} onChange={this.handleHostNameChange}\n          onBlur={this.handleEditingFinished} required />\n        <datalist id=\"known-hosts\">\n          {hostOptions}\n        </datalist>\n      </div>\n    );\n  }\n}\n","// Tinode config panel.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport HostSelector from '../widgets/host-selector.jsx';\n\nexport default class SettingsView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transport: props.transport || 'def',\n      serverAddress: props.serverAddress,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleTransportSelected = this.handleTransportSelected.bind(this);\n    this.handleServerAddressChange = this.handleServerAddressChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onUpdate({\n      transport: this.state.transport,\n      serverAddress: this.state.serverAddress\n    });\n  }\n\n  handleTransportSelected(e) {\n    this.setState({transport: e.currentTarget.value});\n  }\n\n  handleServerAddressChange(name) {\n    this.setState({serverAddress: name});\n  }\n\n  render() {\n    const names = {def: \"default\", ws: \"websocket\", lp: \"long polling\"};\n    const transportOptions = [];\n    ['def', 'ws', 'lp'].map((item) => {\n      const id = 'transport-' + item;\n      const name = names[item];\n      transportOptions.push(\n        <li key={item}>\n          <input type=\"radio\" id={id} name=\"transport-select\" value={item}\n            checked={this.state.transport === item}\n            onChange={this.handleTransportSelected} />\n          <label htmlFor={id}>{name}</label>\n        </li>\n      );\n    });\n\n    return (\n      <form id=\"settings-form\" className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_server_to_use\" defaultMessage=\"Server to use:\"\n              description=\"Label for server selector in SettingsView\" />\n          </label>\n        </div>\n        <HostSelector serverAddress={this.state.serverAddress}\n          onServerAddressChange={this.handleServerAddressChange} />\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_wire_transport\" defaultMessage=\"Wire transport:\"\n              description=\"Label for wire transport selection in SettingsView\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ul className=\"quoted\">\n            {transportOptions}\n          </ul>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button type=\"submit\" className=\"primary\">\n            <FormattedMessage id=\"button_update\" defaultMessage=\"Update\"\n              description=\"Button [Update]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// ValidationView: panel for confirming credentials, like email or phone.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  phone: {\n    id: 'phone_dative',\n    defaultMessage: 'phone',\n    description: \"Dative case of 'phone', i.e. 'phone' in 'by phone'\",\n  },\n  email: {\n    id: 'email_dative',\n    defaultMessage: 'email',\n    description: \"Dative case of 'email', i.e. 'email' in 'by email'\",\n  }\n});\n\nclass ValidationView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      code: props.credCode || ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({code: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    } else if (e.key == 'Escape') {\n      this.handleCancel(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.code && this.state.code.trim()) {\n      this.props.onSubmit(this.props.credMethod, this.state.code.trim());\n    }\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel();\n  }\n\n\n  render() {\n    const { formatMessage } = this.props.intl;\n    const methods = {'email': formatMessage(messages.email), 'tel': formatMessage(messages.phone)};\n    let method = methods[this.props.credMethod] || this.props.credMethod;\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\" htmlFor=\"enter-confirmation-code\">\n            <FormattedMessage id=\"enter_confirmation_code_prompt\"\n              defaultMessage=\"Enter confirmation code sent to you by {method}:\"\n              description=\"Request to enter confirmation code\"\n              values={{method: method}} />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"numeric_confirmation_code_prompt\"\n          defaultMessage=\"Numbers only\" description=\"Prompt for numeric conformation code\">{\n          (numbers_only) => <input type=\"text\" id=\"enter-confirmation-code\"\n            placeholder={numbers_only}\n            value={this.state.code} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"secondary\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_confirm\" defaultMessage=\"Confirm\" description=\"Button [Confirm]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ValidationView);\n","import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport SideNavbar from '../widgets/side-navbar.jsx';\nimport TopicCommon from '../widgets/topic-common.jsx';\n\nimport AccountSettingsView from './account-settings-view.jsx';\nimport ContactsView from './contacts-view.jsx';\nimport CreateAccountView from './create-account-view.jsx';\nimport AccNotificationsView from './acc-notifications-view.jsx';\nimport AccSecurityView from './acc-security-view.jsx';\nimport AccSupportView from './acc-support-view.jsx';\nimport LoginView from './login-view.jsx';\nimport NewTopicView from './new-topic-view.jsx';\nimport PasswordResetView from './password-reset-view.jsx';\nimport SettingsView from './settings-view.jsx';\nimport ValidationView from './validation-view.jsx';\n\n// Panel titles for translation.\nconst messages = defineMessages({\n  login: {\n    id: 'sidepanel_title_login',\n    description: 'Sidepanel title for LoginView.',\n    defaultMessage: 'Sign In'\n  },\n  register: {\n    id: 'sidepanel_title_register',\n    description: 'Sidepanel title for CreateAccountView.',\n    defaultMessage: 'Create Account'\n  },\n  settings: {\n    id: 'sidepanel_title_settings',\n    description: 'Sidepanel title for SettingsView.',\n    defaultMessage: 'Settings'\n  },\n  edit: {\n    id: 'sidepanel_title_account_settings',\n    description: 'Sidepanel title for AccountSettingsView.',\n    defaultMessage: 'Account Settings'\n  },\n  general: {\n    id: 'panel_title_general',\n    description: 'Title for TopicCommon.',\n    defaultMessage: 'General'\n  },\n  security: {\n    id: 'panel_title_security',\n    description: 'Title for TopicSecirity and AccSecurity.',\n    defaultMessage: 'Security'\n  },\n  crop: {\n    id: 'panel_title_crop',\n    description: 'Title for AvatarCropView.',\n    defaultMessage: 'Drag to Adjust'\n  },\n  notif: {\n    id: 'sidepanel_title_acc_notifications',\n    description: 'Sidepanel title for AccNotificationsView.',\n    defaultMessage: 'Notifications'\n  },\n  support: {\n    id: 'sidepanel_title_acc_support',\n    description: 'Sidepanel title for AccSupportView.',\n    defaultMessage: 'Support'\n  },\n  newtpk: {\n    id: 'sidepanel_title_newtpk',\n    description: 'Sidepanel title for NewTopicView.',\n    defaultMessage: 'Start New Chat'\n  },\n  cred: {\n    id: 'sidepanel_title_cred',\n    description: 'Sidepanel title for ValidationView.',\n    defaultMessage: 'Confirm Credentials'\n  },\n  reset: {\n    id: 'sidepanel_title_reset',\n    description: 'Sidepanel title for PasswordResetView.',\n    defaultMessage: 'Reset Password'\n  },\n  archive: {\n    id: 'sidepanel_title_archive',\n    description: 'Sidepanel title for ContactsView-Archive.',\n    defaultMessage: 'Archived Chats'\n  },\n  blocked: {\n    id: 'sidepanel_title_blocked',\n    description: 'Sidepanel title for ContactsView-Blocked.',\n    defaultMessage: 'Blocked Chats'\n  }\n});\n\nclass SidepanelView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNewTopic = this.handleNewTopic.bind(this);\n  }\n\n  handleNewTopic() {\n    this.props.onNavigate('newtpk');\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const view = this.props.state || (this.props.myUserId ? 'contacts' : 'login');\n\n    let title, avatar, badges;\n    if (view == 'contacts') {\n      title = this.props.title;\n      avatar = this.props.avatar ? this.props.avatar : true;\n      badges = this.props.trustedBadges;\n    } else {\n      title = formatMessage(messages[view]);\n      avatar = false;\n      badges = null;\n    }\n\n    let onCancel;\n    if (['login', 'contacts'].indexOf(view) == -1) {\n      onCancel = this.props.onCancel;\n    }\n\n    return (\n      <div id=\"sidepanel\" className={this.props.hideSelf ? 'nodisplay' : null}>\n        <SideNavbar\n          state={view}\n          title={title}\n          avatar={avatar}\n          tinode={this.props.tinode}\n          trustedBadges={badges}\n          myUserId={this.props.myUserId}\n          onSignUp={this.props.onSignUp}\n          onSettings={this.props.onSettings}\n          onNewTopic={this.handleNewTopic}\n          onCancel={onCancel} />\n\n        <ErrorPanel\n          level={this.props.errorLevel}\n          text={this.props.errorText}\n          action={this.props.errorAction}\n          actionText={this.props.errorActionText}\n          onClearError={this.props.onError} />\n\n        <LoadSpinner show={this.props.loadSpinnerVisible} />\n\n        {view === 'login' ?\n          <LoginView\n            login={this.props.login}\n            disabled={this.props.loginDisabled}\n            persist={this.props.persist}\n            onLogin={this.props.onLoginRequest}\n            onPersistenceChange={this.props.onPersistenceChange} /> :\n\n          view === 'register' ?\n          <CreateAccountView\n            tinode={this.props.tinode}\n            onCreateAccount={this.props.onCreateAccount}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'settings' ?\n          <SettingsView\n            transport={this.props.transport}\n            serverAddress={this.props.serverAddress}\n            onCancel={this.props.onCancel}\n            onUpdate={this.props.onGlobalSettings} /> :\n\n          view === 'edit' ?\n          <AccountSettingsView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            trustedBadges={this.props.trustedBadges}\n            onNavigate={this.props.onNavigate} /> :\n\n          (view === 'general' || view === 'crop') ?\n          <TopicCommon\n            topic=\"me\"\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            onUpdateTopicDesc={this.props.onUpdateAccountDesc}\n            onUpdateTags={this.props.onUpdateAccountTags}\n            onCredAdd={this.props.onCredAdd}\n            onCredDelete={this.props.onCredDelete}\n            onCredConfirm={this.props.onCredConfirm}\n            onError={this.props.onError} /> :\n\n          view === 'notif' ?\n          <AccNotificationsView\n            messageSounds={this.props.messageSounds}\n            desktopAlerts={this.props.desktopAlerts}\n            desktopAlertsEnabled={this.props.desktopAlertsEnabled}\n            incognitoMode={this.props.incognitoMode}\n            onTogglePushNotifications={this.props.onTogglePushNotifications}\n            onToggleMessageSounds={this.props.onToggleMessageSounds}\n            onToggleIncognitoMode={this.props.onToggleIncognitoMode} /> :\n\n          view === 'security' ?\n          <AccSecurityView\n            tinode={this.props.tinode}\n            onUpdateAccountDesc={this.props.onUpdateAccountDesc}\n            onUpdatePassword={this.props.onUpdatePassword}\n            onLogout={this.props.onLogout}\n            onDeleteAccount={this.props.onDeleteAccount}\n            onShowAlert={this.props.onShowAlert}\n            onShowBlocked={this.props.onShowBlocked} /> :\n\n          view === 'support' ?\n          <AccSupportView\n            serverAddress={this.props.serverAddress}\n            serverVersion={this.props.serverVersion} /> :\n\n          (view === 'contacts' || view == 'archive' || view == 'blocked') ?\n          <ContactsView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            connected={this.props.connected}\n            topicSelected={this.props.topicSelected}\n            archive={view == 'archive'}\n            blocked={view == 'blocked'}\n            chatList={this.props.chatList}\n            showContextMenu={this.props.showContextMenu}\n            onTopicSelected={this.props.onTopicSelected}\n            onShowArchive={this.props.onShowArchive} /> :\n\n          view === 'newtpk' ?\n          <NewTopicView\n            tinode={this.props.tinode}\n            searchResults={this.props.searchResults}\n            onInitFind={this.props.onInitFind}\n            onSearchContacts={this.props.onSearchContacts}\n            onCreateTopic={this.props.onCreateTopic}\n            onError={this.props.onError} /> :\n\n          view === 'cred' ?\n          <ValidationView\n            credCode={this.props.credCode}\n            credMethod={this.props.credMethod}\n            onSubmit={this.props.onValidateCredentials}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'reset' ?\n          <PasswordResetView\n            onRequest={this.props.onPasswordResetRequest}\n            onReset={this.props.onResetPassword} /> :\n\n          null}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SidepanelView);\n","import { KNOWN_HOSTS, DEFAULT_HOST } from '../config.js';\n\n// Detect server address from the URL\nexport function detectServerAddress() {\n  let host = DEFAULT_HOST;\n  if (typeof window.location == 'object') {\n    if (window.location.protocol == 'file:' || window.location.hostname == 'localhost') {\n      host = KNOWN_HOSTS.local;\n    } else if (window.location.hostname) {\n      host = window.location.hostname + (window.location.port ? ':' + window.location.port : '');\n    }\n  }\n  return host;\n}\n\n// Detect if the page is served over HTTPS.\nexport function isSecureConnection() {\n  if (typeof window.location == 'object') {\n    return window.location.protocol == 'https:';\n  }\n  return false;\n}\n\nexport function isLocalHost() {\n  if (typeof window.location == 'object') {\n    return window.location.hostname == 'localhost';\n  }\n  return false;\n}\n","// The top-level class to hold all functionality together.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport * as firebase from 'firebase/app';\nimport 'firebase/messaging';\n\nimport Tinode from 'tinode-sdk';\n\nimport Alert from '../widgets/alert.jsx';\nimport ContextMenu from '../widgets/context-menu.jsx';\n\nimport InfoView from './info-view.jsx';\nimport MessagesView from './messages-view.jsx';\nimport SidepanelView from './sidepanel-view.jsx';\n\nimport { API_KEY, APP_NAME, DEFAULT_P2P_ACCESS_MODE, LOGGING_ENABLED,\n  MEDIA_BREAKPOINT, RECEIVED_DELAY } from '../config.js';\nimport { PACKAGE_VERSION } from '../version.js';\nimport { base64ReEncode, makeImageUrl } from '../lib/blob-helpers.js';\nimport { detectServerAddress, isLocalHost, isSecureConnection } from '../lib/host-name.js';\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { secondsToTime } from '../lib/strformat.js'\nimport { updateFavicon } from '../lib/utils.js';\n\n// Sound to play on message received.\nconst POP_SOUND = new Audio('audio/msg.mp3');\n\nconst messages = defineMessages({\n  reconnect_countdown: {\n    id: 'reconnect_countdown',\n    defaultMessage: 'Disconnected. Reconnecting in {seconds}…',\n    description: 'Message shown when an app update is available.'\n  },\n  reconnect_now: {\n    id: 'reconnect_now',\n    defaultMessage: 'Try now',\n    description: 'Prompt for reconnecting now'\n  },\n  push_init_failed: {\n    id: 'push_init_failed',\n    defaultMessage: 'Failed to initialize push notifications',\n    description: 'Error message when push notifications have failed to initialize.'\n  },\n  invalid_security_token: {\n    id: 'invalid_security_token',\n    defaultMessage: 'Invalid security token',\n    description: 'Error message when resetting password.'\n  },\n  no_connection: {\n    id: 'no_connection',\n    defaultMessage: 'No connection',\n    description: 'Warning that the user is offline.'\n  },\n  code_doesnot_match: {\n    id: 'code_doesnot_match',\n    defaultMessage: 'Code does not match',\n    description: 'Error message when the credential validation code is incorrect.'\n  },\n  menu_item_info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  }\n});\n\nclass TinodeWeb extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selfRef = React.createRef();\n\n    this.state = this.getBlankState();\n\n    this.handleResize = this.handleResize.bind(this);\n    this.handleHashRoute = this.handleHashRoute.bind(this);\n    this.handleOnline = this.handleOnline.bind(this);\n    this.checkForAppUpdate = this.checkForAppUpdate.bind(this);\n    this.handleVisibilityEvent = this.handleVisibilityEvent.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.handleLoginRequest = this.handleLoginRequest.bind(this);\n    this.handlePersistenceChange = this.handlePersistenceChange.bind(this);\n    this.handleConnected = this.handleConnected.bind(this);\n    this.handleAutoreconnectIteration = this.handleAutoreconnectIteration.bind(this);\n    this.doLogin = this.doLogin.bind(this);\n    this.handleCredentialsRequest = this.handleCredentialsRequest.bind(this);\n    this.handleLoginSuccessful = this.handleLoginSuccessful.bind(this);\n    this.handleDisconnect = this.handleDisconnect.bind(this);\n    this.tnMeMetaDesc = this.tnMeMetaDesc.bind(this);\n    this.tnMeContactUpdate = this.tnMeContactUpdate.bind(this);\n    this.tnMeSubsUpdated = this.tnMeSubsUpdated.bind(this);\n    this.resetContactList = this.resetContactList.bind(this);\n    this.tnData = this.tnData.bind(this);\n    this.tnInitFind = this.tnInitFind.bind(this);\n    this.tnFndSubsUpdated = this.tnFndSubsUpdated.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleTopicSelected = this.handleTopicSelected.bind(this);\n    this.handleHideMessagesView = this.handleHideMessagesView.bind(this);\n    this.handleSendMessage = this.handleSendMessage.bind(this);\n    this.handleNewChatInvitation = this.handleNewChatInvitation.bind(this);\n    this.handleNewAccount = this.handleNewAccount.bind(this);\n    this.handleNewAccountRequest = this.handleNewAccountRequest.bind(this);\n    this.handleUpdatePasswordRequest = this.handleUpdatePasswordRequest.bind(this);\n    this.handleUpdateAccountTagsRequest = this.handleUpdateAccountTagsRequest.bind(this);\n    this.handleToggleIncognitoMode = this.handleToggleIncognitoMode.bind(this);\n    this.handleSettings = this.handleSettings.bind(this);\n    this.handleGlobalSettings = this.handleGlobalSettings.bind(this);\n    this.handleShowArchive = this.handleShowArchive.bind(this);\n    this.handleShowBlocked = this.handleShowBlocked.bind(this);\n    this.handleToggleMessageSounds = this.handleToggleMessageSounds.bind(this);\n    this.handleCredAdd = this.handleCredAdd.bind(this);\n    this.handleCredDelete = this.handleCredDelete.bind(this);\n    this.handleCredConfirm = this.handleCredConfirm.bind(this);\n    this.initFCMessaging = this.initFCMessaging.bind(this);\n    this.togglePushToken = this.togglePushToken.bind(this);\n    this.requestPushToken = this.requestPushToken.bind(this);\n    this.handlePushMessage = this.handlePushMessage.bind(this);\n    this.handleSidepanelCancel = this.handleSidepanelCancel.bind(this);\n    this.handleStartTopicRequest = this.handleStartTopicRequest.bind(this);\n    this.handleNewTopicCreated = this.handleNewTopicCreated.bind(this);\n    this.handleTopicUpdateRequest = this.handleTopicUpdateRequest.bind(this);\n    this.handleChangePermissions = this.handleChangePermissions.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n    this.handleDeleteTopicRequest = this.handleDeleteTopicRequest.bind(this);\n    this.handleDeleteMessagesRequest = this.handleDeleteMessagesRequest.bind(this);\n    this.handleLeaveUnsubRequest = this.handleLeaveUnsubRequest.bind(this);\n    this.handleBlockTopicRequest = this.handleBlockTopicRequest.bind(this);\n    this.handleReportTopic = this.handleReportTopic.bind(this);\n    this.handleShowContextMenu = this.handleShowContextMenu.bind(this);\n    this.defaultTopicContextMenu = this.defaultTopicContextMenu.bind(this);\n    this.handleHideContextMenu = this.handleHideContextMenu.bind(this);\n    this.handleShowAlert = this.handleShowAlert.bind(this);\n    this.handleShowInfoView = this.handleShowInfoView.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleValidateCredentialsRequest = this.handleValidateCredentialsRequest.bind(this);\n    this.handlePasswordResetRequest = this.handlePasswordResetRequest.bind(this);\n    this.handleResetPassword = this.handleResetPassword.bind(this);\n    this.handleContextMenuAction = this.handleContextMenuAction.bind(this);\n  }\n\n  getBlankState() {\n    const settings = LocalStorageUtil.getObject('settings') || {};\n    const persist = !!LocalStorageUtil.getObject('keep-logged-in');\n\n    return {\n      connected: false,\n      // Connected and subscribed to 'me'\n      ready: false,\n      // Try to re-login on new connection.\n      autoLogin: false,\n      transport: settings.transport || null,\n      serverAddress: settings.serverAddress || detectServerAddress(),\n      serverVersion: \"no connection\",\n      // \"On\" is the default, so saving the \"off\" state.\n      messageSounds: !settings.messageSoundsOff,\n      incognitoMode: false,\n      desktopAlerts: persist && settings.desktopAlerts,\n      desktopAlertsEnabled: (isSecureConnection() || isLocalHost()) &&\n        (typeof firebase != 'undefined') && (typeof navigator != 'undefined') &&\n        (typeof FIREBASE_INIT != 'undefined'),\n      firebaseToken: persist ? LocalStorageUtil.getObject('firebase-token') : null,\n\n      applicationVisible: !document.hidden,\n\n      errorText: '',\n      errorLevel: null,\n      errorAction: undefined,\n      errorActionText: null,\n\n      sidePanelSelected: 'login',\n      sidePanelTitle: null,\n      sidePanelAvatar: null,\n      myTrustedBadges: [],\n      loadSpinnerVisible: false,\n\n      login: '',\n      password: '',\n      persist: persist,\n      myUserId: null,\n      liveConnection: navigator.onLine,\n      topicSelected: '',\n      topicSelectedOnline: false,\n      topicSelectedAcs: null,\n      newTopicParams: null,\n      loginDisabled: false,\n      displayMobile: (window.innerWidth <= MEDIA_BREAKPOINT),\n      infoPanel: undefined,\n      mobilePanel: 'sidepanel',\n\n      contextMenuVisible: false,\n      contextMenuBounds: null,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuItems: [],\n\n      // Modal alert dialog.\n      alertVisible: false,\n      alertParams: {},\n\n      // Chats as shown in the ContactsView\n      chatList: [],\n      // Contacts returned by a search query.\n      searchResults: [],\n      // Merged results of a search query and p2p chats.\n      searchableContacts: [],\n      credMethod: undefined,\n      credCode: undefined,\n      // Topic to go to after login.\n      requestedTopic: undefined\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    window.addEventListener('online', (e) => { this.handleOnline(true); });\n    window.addEventListener('offline', (e) => { this.handleOnline(false); });\n    window.addEventListener('hashchange', this.handleHashRoute);\n\n    // Process background notifications from the service worker.\n    if (typeof BroadcastChannel == 'function') {\n      const serviceWorkerChannel = new BroadcastChannel('tinode-sw');\n      serviceWorkerChannel.addEventListener('message', this.handlePushMessage);\n    } else {\n      // Safari is broken by design.\n      console.warn('Your browser does not support BroadcastChannel. Some features will not be available');\n    }\n\n    // Window/tab visible or invisible for pausing timers.\n    document.addEventListener('visibilitychange', this.handleVisibilityEvent);\n\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n\n    new Promise((resolve, reject) => {\n      this.tinode = TinodeWeb.tnSetup(this.state.serverAddress, this.state.transport,\n        this.props.intl.locale, this.state.persist, resolve);\n      this.tinode.onConnect = this.handleConnected;\n      this.tinode.onDisconnect = this.handleDisconnect;\n      this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n    }).then(() => {\n      // Initialize desktop alerts.\n      if (this.state.desktopAlertsEnabled) {\n        this.initFCMessaging().then(() => {\n          if (this.state.desktopAlerts) {\n            if (!this.state.firebaseToken) {\n              this.togglePushToken(true);\n            } else {\n              this.tinode.setDeviceToken(this.state.firebaseToken);\n            }\n          }\n        }).catch(() => {\n          // do nothing: handled earlier.\n          // catch needed to pervent unnecessary logging of error.\n        });\n      }\n\n      // Parse and save the hash navigation params.\n      const parsedNav = HashNavigation.parseUrlHash(window.location.hash);\n\n      // Read contacts from cache.\n      this.resetContactList();\n\n      const token = this.state.persist ? LocalStorageUtil.getObject('auth-token') : undefined;\n      if (token) {\n        this.setState({autoLogin: true});\n\n        // When reading from storage, date is returned as string.\n        token.expires = new Date(token.expires);\n        this.tinode.setAuthToken(token);\n        this.tinode.connect().catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n      }\n\n      // Save possible topic name and navigate to blank state.\n      this.setState({requestedTopic: parsedNav.path[1]});\n      HashNavigation.navigateTo('');\n\n      this.readTimer = null;\n      this.readTimerCallback = null;\n\n      this.handleHashRoute();\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n    window.removeEventListener('hashchange', this.handleHashRoute);\n    document.removeEventListener('visibilitychange', this.handleVisibilityEvent);\n  }\n\n  // Setup transport (usually websocket) and server address. This will terminate connection with the server.\n  static tnSetup(serverAddress, transport, locale, persistentCache, onSetupCompleted) {\n    const tinode = new Tinode({appName: APP_NAME, host: serverAddress, apiKey: API_KEY, transport: transport,\n      secure: isSecureConnection(), persist: persistentCache}, onSetupCompleted);\n    tinode.setHumanLanguage(locale);\n    tinode.enableLogging(LOGGING_ENABLED, true);\n    return tinode;\n  }\n\n  // Notifiy Tinode that a push message was received from the server.\n  handlePushMessage(data) {\n    if (data.what == 'msg' && Tinode.isChannelTopicName(data.topic)) {\n      // The last argument is a fake user Id: otherwise the update is seen as one from the current user.\n      this.tinode.oobNotification(data.topic, data.seq, 'fake-uid');\n    }\n  }\n\n  initFCMessaging() {\n    const {formatMessage, locale} = this.props.intl;\n    const onError = (msg, err) => {\n      console.error(msg, err);\n      this.handleError(formatMessage(messages.push_init_failed), 'err');\n      this.setState({desktopAlertsEnabled: false});\n    }\n\n    try {\n      this.fbPush = firebase.initializeApp(FIREBASE_INIT, APP_NAME).messaging();\n      this.fbPush.usePublicVapidKey(FIREBASE_INIT.messagingVapidKey);\n\n      return navigator.serviceWorker.register('/service-worker.js').then((reg) => {\n        this.checkForAppUpdate(reg);\n        this.fbPush.useServiceWorker(reg);\n        reg.active.postMessage(JSON.stringify({locale: locale, version: PACKAGE_VERSION}));\n\n        // Google could not be bothered to mention that onTokenRefresh is never called.\n        this.fbPush.onTokenRefresh(() => {\n          this.requestPushToken();\n        });\n\n        // Handhe FCM pushes\n        // (a) for channels always,\n        // (b) pushes when the app is in foreground but has not focus.\n        this.fbPush.onMessage(payload => { this.handlePushMessage(payload.data); });\n\n        return reg;\n      }).catch((err) => {\n        // registration failed :(\n        onError(\"Failed to register service worker:\", err);\n        return Promise.reject(err);\n      });\n    } catch (err) {\n      onError(\"Failed to initialize push notifications\", err);\n      return Promise.reject(err);\n    }\n  }\n\n  handleResize() {\n    const mobile = document.documentElement.clientWidth <= MEDIA_BREAKPOINT;\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n    if (this.state.displayMobile != mobile) {\n      this.setState({displayMobile: mobile});\n    }\n  }\n\n  // Check if a newer version of TinodeWeb app is available at the server.\n  checkForAppUpdate(reg) {\n    reg.onupdatefound = () => {\n      const installingWorker = reg.installing;\n      installingWorker.onstatechange = () => {\n        if (installingWorker.state == 'installed' && navigator.serviceWorker.controller) {\n          const msg = <>\n            <FormattedMessage id=\"update_available\"\n              defaultMessage=\"Update available.\"\n              description=\"Message shown when an app update is available.\" /> <a href=\"\">\n              <FormattedMessage id=\"reload_update\"\n                defaultMessage=\"Reload\"\n                description=\"Call to action to reload application when update is available.\" />\n            </a>.</>;\n          this.handleError(msg, 'info');\n        }\n      }\n    }\n  }\n\n  // Handle for hashchange event: display appropriate panels.\n  handleHashRoute() {\n    const hash = HashNavigation.parseUrlHash(window.location.hash);\n    if (hash.path && hash.path.length > 0) {\n      // Left-side panel selector.\n      if (['register','settings','edit','notif','security','support','general','crop',\n          'cred','reset','newtpk','archive','blocked','contacts',''].includes(hash.path[0])) {\n        this.setState({sidePanelSelected: hash.path[0]});\n      } else {\n        console.warn(\"Unknown sidepanel view\", hash.path[0]);\n      }\n\n      // Topic for MessagesView selector.\n      let topicName = hash.path[1] || null;\n      if (topicName != this.state.topicSelected) {\n        if (!Tinode.topicType(topicName)) {\n          // Clear invalid topic name.\n          topicName = null;\n        }\n        const newState = {\n          topicSelected: topicName\n        };\n        const acs = this.tinode.getTopicAccessMode(topicName);\n        if (acs) {\n          newState.topicSelectedAcs = acs;\n        }\n        this.setState(newState);\n      }\n    } else {\n      // Empty hashpath\n      this.setState({sidePanelSelected: '', topicSelected: null});\n    }\n\n    // Save validation credentials, if available.\n    if (hash.params.method) {\n      this.setState({ credMethod: hash.params.method });\n    }\n    if (hash.params.code) {\n      this.setState({ credCode: hash.params.code });\n    }\n\n    // Additional parameters of panels.\n    this.setState({\n      infoPanel: hash.params.info,\n      newTopicTabSelected: hash.params.tab\n    });\n  }\n\n  handleOnline(online) {\n    if (online) {\n      this.handleError();\n      clearInterval(this.reconnectCountdown);\n      this.tinode.reconnect();\n    } else {\n      this.handleError(this.props.intl.formatMessage(messages.no_connection), 'warn');\n    }\n    this.setState({liveConnection: online});\n  }\n\n  handleVisibilityEvent() {\n    this.setState({applicationVisible: !document.hidden});\n  }\n\n  handleError(err, level, action, actionText) {\n    this.setState({errorText: err, errorLevel: level, errorAction: action, errorActionText: actionText});\n  }\n\n  // User clicked Login button in the side panel.\n  handleLoginRequest(login, password) {\n    this.setState({\n      loginDisabled: true,\n      login: login,\n      password: password,\n      loadSpinnerVisible: true,\n      autoLogin: true\n    });\n    this.handleError('', null);\n\n    if (this.tinode.isConnected()) {\n      this.doLogin(login, password, {meth: this.state.credMethod, resp: this.state.credCode});\n    } else {\n      this.tinode.connect().catch((err) => {\n        // Socket error\n        this.setState({loginDisabled: false, autoLogin: false, loadSpinnerVisible: false});\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // Enable or disable saving the password and IndexedDB.\n  handlePersistenceChange(persist) {\n    if (persist) {\n      this.tinode.initStorage().then(() => {\n        LocalStorageUtil.setObject('keep-logged-in', true);\n        this.setState({persist: true});\n      });\n    } else {\n      this.tinode.clearStorage().then(() => {\n        LocalStorageUtil.setObject('keep-logged-in', false);\n        this.setState({persist: false});\n      });\n    }\n  }\n\n  // Connection succeeded.\n  handleConnected() {\n    // Just to be sure.\n    clearInterval(this.reconnectCountdown);\n    this.handleError();\n\n    const params = this.tinode.getServerInfo();\n    this.setState({\n      serverVersion: params.ver + ' ' + (params.build ? params.build : 'none')\n    });\n\n    if (this.state.autoLogin) {\n      this.doLogin(this.state.login, this.state.password, {meth: this.state.credMethod, resp: this.state.credCode});\n    }\n  }\n\n  // Called for each auto-reconnect iteration.\n  handleAutoreconnectIteration(sec, prom) {\n    clearInterval(this.reconnectCountdown);\n\n    if (sec < 0) {\n      // Clear error\n      this.handleError();\n      return;\n    }\n\n    if (prom) {\n      // Reconnecting now\n      prom.then(() => {\n        // Reconnected: clear error\n        this.handleError();\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n      return;\n    }\n\n    const {formatMessage} = this.props.intl;\n    let count = sec / 1000;\n    count = count | count;\n    this.reconnectCountdown = setInterval(() => {\n      const timeLeft = (count > 99) ? secondsToTime(count) : count;\n      this.handleError(\n        formatMessage(messages.reconnect_countdown, {seconds: timeLeft}),\n        'warn',\n        () => {\n          clearInterval(this.reconnectCountdown);\n          this.tinode.reconnect();\n        },\n        formatMessage(messages.reconnect_now)\n      );\n      count -= 1;\n    }, 1000);\n  }\n\n  // Connection lost\n  handleDisconnect(err) {\n    this.setState({\n      connected: false,\n      ready: false,\n      topicSelectedOnline: false,\n      errorText: err && err.message ? err.message : \"Disconnected\",\n      errorLevel: err && err.message ? 'err' : 'warn',\n      loginDisabled: false,\n      contextMenuVisible: false,\n      serverVersion: \"no connection\"\n    });\n  }\n\n  doLogin(login, password, cred) {\n    if (this.tinode.isAuthenticated()) {\n      // Already logged in. Go to default screen.\n      HashNavigation.navigateTo('');\n      return;\n    }\n    // Sanitize and package credentail.\n    cred = Tinode.credential(cred);\n    // Try to login with login/password. If they are not available, try token. If no token, ask for login/password.\n    let promise = null;\n    let token = this.tinode.getAuthToken();\n    if (login && password) {\n      token = null;\n      this.setState({password: null});\n      promise = this.tinode.loginBasic(login, password, cred);\n    } else if (token) {\n      promise = this.tinode.loginToken(token.token, cred);\n    }\n\n    if (promise) {\n      promise.then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text === 'validate credentials') {\n          this.setState({loadSpinnerVisible: false});\n          if (cred) {\n            this.handleError(this.props.intl.formatMessage(messages.code_doesnot_match), 'warn');\n          }\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful();\n        }\n      }).catch((err) => {\n        // Login failed, report error.\n        this.setState({\n          loginDisabled: false,\n          credMethod: undefined,\n          credCode: undefined,\n          loadSpinnerVisible: false,\n          autoLogin: false\n        });\n        this.handleError(err.message, 'err');\n        if (token) {\n          this.handleLogout();\n        }\n        HashNavigation.navigateTo('');\n      });\n    } else {\n      // No login credentials provided.\n      // Make sure we are on the login page.\n      HashNavigation.navigateTo('');\n      this.setState({loginDisabled: false});\n    }\n  }\n\n  handleCredentialsRequest(params) {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    parsed.path[0] = 'cred';\n    parsed.params['method'] = params.cred[0];\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n  }\n\n  handleLoginSuccessful() {\n    this.handleError();\n\n    // Refresh authentication token.\n    if (LocalStorageUtil.getObject('keep-logged-in')) {\n      LocalStorageUtil.setObject('auth-token', this.tinode.getAuthToken());\n    }\n\n    const goToTopic = this.state.requestedTopic;\n    // Logged in fine, subscribe to 'me' attaching callbacks from the contacts view.\n    const me = this.tinode.getMeTopic();\n    me.onMetaDesc = this.tnMeMetaDesc;\n    me.onContactUpdate = this.tnMeContactUpdate;\n    me.onSubsUpdated = this.tnMeSubsUpdated;\n    this.setState({\n      connected: true,\n      credMethod: undefined,\n      credCode: undefined,\n      myUserId: this.tinode.getCurrentUserID(),\n      autoLogin: true,\n      requestedTopic: undefined,\n    });\n    // Subscribe, fetch topic desc, the list of subscriptions. Messages are not fetched.\n    me.subscribe(\n      me.startMetaQuery().\n        withLaterSub().\n        withDesc().\n        withTags().\n        withCred().\n        build()\n      ).catch((err) => {\n        this.tinode.disconnect();\n        localStorage.removeItem('auth-token');\n        this.handleError(err.message, 'err');\n        HashNavigation.navigateTo('');\n      }).finally(() => {\n        this.setState({loadSpinnerVisible: false});\n      });\n    let urlHash = HashNavigation.setUrlSidePanel(window.location.hash, 'contacts');\n    if (goToTopic) {\n      urlHash = HashNavigation.setUrlTopic(urlHash, goToTopic);\n    }\n    HashNavigation.navigateTo(urlHash);\n  }\n\n  tnMeMetaDesc(desc) {\n    if (desc) {\n      if (desc.public) {\n        this.setState({\n          sidePanelTitle: desc.public.fn,\n          sidePanelAvatar: makeImageUrl(desc.public.photo)\n        });\n      }\n      if (desc.trusted) {\n        const badges = [];\n        for (const [key, val] of Object.entries(desc.trusted)) {\n          if (val) {\n            badges.push(key);\n          }\n        }\n        this.setState({\n          myTrustedBadges: badges,\n        });\n      }\n      if (desc.acs) {\n        this.setState({\n          incognitoMode: !desc.acs.isPresencer()\n        });\n      }\n    }\n  }\n\n  // Reactions to updates to the contact list.\n  tnMeContactUpdate(what, cont) {\n    if (what == 'on' || what == 'off') {\n      this.resetContactList();\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedOnline: (what == 'on')});\n      }\n    } else if (what == 'read') {\n      this.resetContactList();\n    } else if (what == 'msg') {\n      // Check if the topic is archived. If so, don't play a sound.\n      const topic = this.tinode.getTopic(cont.topic);\n      const archived = topic && topic.isArchived();\n\n      // New message received. Maybe the message is from the current user, then unread is 0.\n      if (cont.unread > 0 && this.state.messageSounds && !archived) {\n        // Skip update if the topic is currently open, otherwise the badge will annoyingly flash.\n        if (document.hidden || this.state.topicSelected != cont.topic) {\n          POP_SOUND.play();\n        }\n      }\n      // Reorder contact list to use possibly updated 'touched'.\n      this.resetContactList();\n    } else if (what == 'recv') {\n      // Explicitly ignoring \"recv\" -- it causes no visible updates to contact list.\n    } else if (what == 'gone' || what == 'unsub') {\n      // Topic deleted or user unsubscribed. Remove topic from view.\n      // If the currently selected topic is gone, clear the selection.\n      if (this.state.topicSelected == cont.topic) {\n        this.handleTopicSelected(null);\n      }\n      // Redraw without the deleted topic.\n      this.resetContactList();\n    } else if (what == 'acs') {\n      // Permissions changed. If it's for the currently selected topic,\n      // update the views.\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedAcs: cont.acs});\n      }\n    } else if (what == 'del') {\n      // TODO: messages deleted (hard or soft) -- update pill counter.\n    } else if (what == 'upd') {\n      // upd - handled by the SDK. Explicitly ignoring here.\n    } else {\n      // TODO(gene): handle other types of notifications:\n      // * ua -- user agent changes (maybe display a pictogram for mobile/desktop).\n      console.info(\"Unsupported (yet) presence update:\" + what + \" in: \" + cont.topic);\n    }\n  }\n\n  tnMeSubsUpdated(unused) {\n    this.resetContactList();\n  }\n\n  // Merge search results and contact list to create a single flat\n  // list of known contacts for GroupManager to use.\n  static prepareSearchableContacts(chatList, foundContacts) {\n    const merged = {};\n\n    // For chatList topics merge only p2p topics and convert them to the\n    // same format as foundContacts.\n    for (const c of chatList) {\n      if (Tinode.isP2PTopicName(c.topic)) {\n          merged[c.topic] = {\n            user: c.topic,\n            updated: c.updated,\n            public: c.public,\n            private: c.private,\n            acs: c.acs\n          };\n      }\n    }\n\n    // Add all foundCountacts if they have not been added already.\n    for (const c of foundContacts) {\n      if (!merged[c.user]) {\n        merged[c.user] = c;\n      }\n    }\n\n    return Object.values(merged);\n  }\n\n  resetContactList() {\n    const newState = {\n      chatList: []\n    };\n\n    if (!this.state.ready) {\n      newState.ready = true;\n    }\n\n    this.tinode.getMeTopic().contacts((c) => {\n      if (!c.topic && !c.user) {\n        // Contacts expect c.topic to be set.\n        c.topic = c.name;\n      }\n\n      newState.chatList.push(c);\n      if (this.state.topicSelected == c.topic) {\n        newState.topicSelectedOnline = c.online;\n        newState.topicSelectedAcs = c.acs;\n      }\n    });\n\n    const past = new Date(0);\n    newState.chatList.sort((a, b) => {\n      return (a.touched || past).getTime() - (b.touched || past).getTime();\n    });\n\n    // Merge search results and chat list.\n    newState.searchableContacts = TinodeWeb.prepareSearchableContacts(newState.chatList, this.state.searchResults);\n    this.setState(newState);\n  }\n\n  // Sending \"received\" notifications\n  tnData(data) {\n    const topic = this.tinode.getTopic(data.topic);\n    if (topic.msgStatus(data, true) >= Tinode.MESSAGE_STATUS_SENT && data.from != this.state.myUserId) {\n      clearTimeout(this.receivedTimer);\n      this.receivedTimer = setTimeout(() => {\n        this.receivedTimer = undefined;\n        topic.noteRecv(data.seq);\n      }, RECEIVED_DELAY);\n    }\n  }\n\n  /* Fnd topic: find contacts by tokens */\n  tnInitFind() {\n    const fnd = this.tinode.getFndTopic();\n    fnd.onSubsUpdated = this.tnFndSubsUpdated;\n    if (fnd.isSubscribed()) {\n      this.tnFndSubsUpdated();\n    } else {\n      fnd.subscribe(fnd.startMetaQuery().withSub().build()).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  tnFndSubsUpdated() {\n    const foundContacts = [];\n    // Don't attempt to create P2P topics which already exist. Server will reject the duplicates.\n    this.tinode.getFndTopic().contacts((s) => {\n      foundContacts.push(s);\n    });\n    this.setState({\n      searchResults: foundContacts,\n      searchableContacts: TinodeWeb.prepareSearchableContacts(this.state.chatList, foundContacts)\n    });\n  }\n\n  /** Called when the user enters a contact into the contact search field in the NewAccount panel\n    @param query {Array} is an array of contacts to search for\n   */\n  handleSearchContacts(query) {\n    const fnd = this.tinode.getFndTopic();\n    fnd.setMeta({desc: {public: query}}).then((ctrl) => {\n      return fnd.getMeta(fnd.startMetaQuery().withSub().build());\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  // User clicked on a contact in the side panel or deleted a contact.\n  handleTopicSelected(topicName) {\n    // Clear newTopicParams after use.\n    if (this.state.newTopicParams && this.state.newTopicParams._topicName != topicName) {\n      this.setState({\n        newTopicParams: null\n      });\n    }\n\n    if (topicName) {\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'topic-view',\n        infoPanel: undefined\n      });\n      // Different contact selected.\n      if (this.state.topicSelected != topicName) {\n        this.setState({\n          topicSelectedOnline: this.tinode.isTopicOnline(topicName),\n          topicSelectedAcs: this.tinode.getTopicAccessMode(topicName)\n        });\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', topicName));\n      }\n    } else {\n      // Currently selected contact deleted\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'sidepanel',\n        topicSelectedOnline: false,\n        topicSelectedAcs: null,\n        infoPanel: undefined\n      });\n\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic('', null));\n    }\n  }\n\n  // In mobile view user requested to show sidepanel\n  handleHideMessagesView() {\n    this.setState({\n      mobilePanel: 'sidepanel'\n    });\n    HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, null));\n  }\n\n  // User is sending a message, either plain text or a drafty object, possibly\n  // with attachments.\n  //  - msg - Drafty message with content\n  //  - promise - Promise to be resolved when the upload is completed\n  //  - uploader - for tracking progress\n  handleSendMessage(msg, promise, uploader) {\n    const topic = this.tinode.getTopic(this.state.topicSelected);\n\n    msg = topic.createMessage(msg, false);\n    // The uploader is used to show progress.\n    msg._uploader = uploader;\n\n    if (!topic.isSubscribed()) {\n      if (!promise) {\n        promise = Promise.resolve();\n      }\n      promise = promise.then(() => { return topic.subscribe(); });\n    }\n\n    if (promise) {\n      promise = promise.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n\n    topic.publishDraft(msg, promise)\n      .then((ctrl) => {\n        if (topic.isArchived()) {\n          return topic.archive(false);\n        }\n      })\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleNewChatInvitation(topicName, action) {\n    const topic = this.tinode.getTopic(topicName);\n    let response = null;\n    switch (action) {\n      case 'accept':\n        // Accept given permissions.\n        const mode = topic.getAccessMode().getGiven();\n        response = topic.setMeta({sub: {mode: mode}});\n        if (topic.isP2PType()) {\n          // For P2P topics change 'given' permission of the peer too.\n          // In p2p topics the other user has the same name as the topic.\n          response = response.then((ctrl) => {\n            topic.setMeta({sub: {user: topicName, mode: mode}});\n          });\n        }\n        break;\n      case 'delete':\n        // Ignore invitation by deleting it.\n        response = topic.delTopic(true);\n        break;\n      case 'block':\n        // Ban the topic making futher invites impossible.\n        // Just self-ban.\n        const am = topic.getAccessMode().updateWant('-JP').getWant();\n        response = topic.setMeta({sub: {mode: am}}).then((ctrl) => {\n          return this.handleTopicSelected(null);\n        });\n        break;\n      default:\n        console.warn(\"Unknown invitation action\", '\"' + action + '\"\"');\n    }\n\n    if (response != null) {\n      response.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // User chose a Sign Up menu item.\n  handleNewAccount() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, 'register'));\n  }\n\n  // Actual registration of a new account.\n  handleNewAccountRequest(login_, password_, public_, cred_, tags_) {\n    // Clear old error, if any.\n    this.handleError();\n\n    this.tinode.connect(this.state.serverAddress)\n      .then(() => {\n        return this.tinode.createAccountBasic(login_, password_,\n          {public: public_, tags: tags_, cred: Tinode.credential(cred_)});\n      }).then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text == 'validate credentials') {\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful(this);\n        }\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleToggleIncognitoMode(on) {\n    const me = this.tinode.getMeTopic();\n    const am = me.getAccessMode().updateWant(on ? '-P' : '+P').getWant();\n    me.setMeta({sub: {mode: am}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleUpdateAccountTagsRequest(tags) {\n    this.tinode.getMeTopic().setMeta({tags: tags})\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  // User chose Settings menu item.\n  handleSettings() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'edit' : 'settings'));\n  }\n\n  // User updated global parameters.\n  handleGlobalSettings(settings) {\n    const serverAddress = settings.serverAddress || this.state.serverAddress;\n    const transport = settings.transport || this.state.transport;\n    if (this.tinode) {\n      this.tinode.clearStorage();\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.tinode = TinodeWeb.tnSetup(serverAddress, transport, this.props.intl.locale,\n      LocalStorageUtil.getObject('keep-logged-in'));\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n\n    this.setState({\n      serverAddress: serverAddress,\n      transport: transport\n    });\n    LocalStorageUtil.setObject('settings', {\n      serverAddress: serverAddress,\n      transport: transport\n    });\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, ''));\n  }\n\n  // User chose 'Archived chats'.\n  handleShowArchive() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'archive' : ''));\n  }\n\n  // User viewes 'Blocked chats'.\n  handleShowBlocked() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'blocked' : ''));\n  }\n\n  togglePushToken(enabled) {\n    if (enabled) {\n      if (!this.state.firebaseToken) {\n        const fcm = this.fbPush ?\n          Promise.resolve() :\n          this.initFCMessaging();\n        fcm.then(() => {\n          return this.fbPush.requestPermission();\n        }).then(() => {\n          this.requestPushToken();\n        }).catch((err) => {\n          console.error(\"Failed to get notification permission.\", err);\n          this.handleError(err.message, 'err');\n          this.setState({desktopAlerts: false, firebaseToken: null});\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        });\n      } else {\n        this.setState({desktopAlerts: true});\n        if (LocalStorageUtil.getObject('keep-logged-in')) {\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n        }\n      }\n    } else if (this.state.firebaseToken && this.fbPush) {\n      this.fbPush.deleteToken(this.state.firebaseToken).catch((err) => {\n        console.error(\"Unable to delete token.\", err);\n      }).finally(() => {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        localStorage.removeItem('firebase-token');\n        this.setState({desktopAlerts: false, firebaseToken: null});\n        // Inform the server that the token was deleted.\n        this.tinode.setDeviceToken(null);\n      });\n    } else {\n      this.setState({desktopAlerts: false, firebaseToken: null});\n      LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n    }\n  }\n\n  requestPushToken() {\n    this.fbPush.getToken().then((refreshedToken) => {\n      const persist = LocalStorageUtil.getObject('keep-logged-in');\n      if (refreshedToken != this.state.firebaseToken) {\n        this.tinode.setDeviceToken(refreshedToken);\n        if (persist) {\n          LocalStorageUtil.setObject('firebase-token', refreshedToken);\n        }\n      }\n      this.setState({firebaseToken: refreshedToken, desktopAlerts: true});\n      if (persist) {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n      }\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n      console.error(\"Failed to retrieve firebase token\", err);\n    });\n  }\n\n  handleToggleMessageSounds(enabled) {\n    this.setState({messageSounds: enabled});\n    LocalStorageUtil.updateObject('settings', {\n      messageSoundsOff: !enabled\n    });\n  }\n\n  handleCredAdd(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.setMeta({cred: {meth: method, val: value}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredDelete(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.delCredential(method, value).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredConfirm(method, response) {\n    this.handleCredentialsRequest({cred: [method]});\n  }\n\n  // User clicked Cancel button in Setting or Sign Up panel.\n  handleSidepanelCancel() {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    let path = '';\n    if (['security','support','general','notif'].includes(parsed.path[0])) {\n      path = 'edit';\n    } else if ('crop' == parsed.path[0]) {\n      path = 'general';\n    } else if ('blocked' == parsed.path[0]) {\n      path = 'security';\n    } else if (this.state.myUserId) {\n      path = 'contacts';\n    }\n    parsed.path[0] = path;\n    if (parsed.params) {\n      delete parsed.params.code;\n      delete parsed.params.method;\n      delete parsed.params.tab;\n    }\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n    this.setState({errorText: '', errorLevel: null});\n  }\n\n  // Sidepanel navigator. No need to bind to 'this'.\n  basicNavigator(hash) {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, hash));\n  }\n\n  // Topic info navigator. No need to bind to 'this'.\n  infoNavigator(hash) {\n    HashNavigation.navigateTo(HashNavigation.setUrlInfoPanel(window.location.hash, hash));\n  }\n\n  // Request to start a topic, new or selected from search results, or \"by ID\".\n  handleStartTopicRequest(topicName, pub, priv, tags, isChannel) {\n    // Check if topic is indeed new. If not, launch it.\n    if (topicName && this.tinode.isTopicCached(topicName)) {\n      this.handleTopicSelected(topicName);\n      return;\n    }\n\n    const params = {};\n    if (Tinode.isP2PTopicName(topicName)) {\n      // Because we are initialing the subscription, set 'want' to all permissions.\n      params.sub = {mode: DEFAULT_P2P_ACCESS_MODE};\n      // Give the other user all permissions too.\n      params.desc = {defacs: {auth: DEFAULT_P2P_ACCESS_MODE}};\n    } else {\n      topicName = topicName || this.tinode.newGroupTopicName(isChannel);\n      params.desc = {public: pub, private: {comment: priv}};\n      params.tags = tags;\n    }\n    params._topicName = topicName;\n    this.setState({newTopicParams: params}, () => {this.handleTopicSelected(topicName)});\n  }\n\n  // New topic was creted, here is the new topic name.\n  handleNewTopicCreated(oldName, newName) {\n    if (this.state.topicSelected == oldName && oldName != newName) {\n      // If the current URl contains the old topic name, replace it with new.\n      // Update the name of the selected topic first so the navigator doen't clear\n      // the state.\n      this.setState({topicSelected: newName}, () => {\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', newName));\n      });\n    }\n  }\n\n  handleTopicUpdateRequest(topicName, pub, priv, defacs) {\n    this.handleError();\n\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const params = {};\n      let attachments;\n      if (pub) {\n        if (pub.photo) {\n          if (pub.photo.ref && pub.photo.ref != Tinode.DEL_CHAR) {\n            attachments = [pub.photo.ref];\n          } else if (!pub.photo.data || pub.photo.data == Tinode.DEL_CHAR) {\n            pub.photo = Tinode.DEL_CHAR;\n          }\n        }\n        params.public = pub;\n      }\n      if (priv) {\n        params.private = (priv === Tinode.DEL_CHAR) ?\n          Tinode.DEL_CHAR : {comment: priv};\n      }\n      if (defacs) {\n        params.defacs = defacs;\n      }\n      topic.setMeta({desc: params, attachments: attachments}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleUpdatePasswordRequest(password)  {\n    this.handleError();\n\n    if (password) {\n      this.tinode.updateAccountBasic(null, this.tinode.getCurrentLogin(), password).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleChangePermissions(topicName, mode, uid) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const am = topic.getAccessMode();\n      if (uid) {\n        am.updateGiven(mode);\n        mode = am.getGiven();\n      } else {\n        am.updateWant(mode);\n        mode = am.getWant();\n      }\n      topic.setMeta({sub: {user: uid, mode: mode}}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleTagsUpdated(topicName, tags) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      topic.setMeta({tags: tags}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleLogout() {\n    updateFavicon(0);\n\n    // Remove stored data.\n    localStorage.removeItem('auth-token');\n    localStorage.removeItem('firebase-token');\n    localStorage.removeItem('settings');\n    if (this.state.firebaseToken) {\n      this.fbPush.deleteToken(this.state.firebaseToken)\n    }\n\n    clearInterval(this.reconnectCountdown);\n\n    if (this.tinode) {\n      this.tinode.clearStorage();\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.setState(this.getBlankState());\n\n    this.tinode = TinodeWeb.tnSetup(this.state.serverAddress,\n      this.state.transport, this.props.intl.locale, LocalStorageUtil.getObject('keep-logged-in'));\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n    HashNavigation.navigateTo('');\n  }\n\n  handleDeleteAccount() {\n    this.tinode.delCurrentUser(true).then((ctrl) => {\n      this.handleLogout();\n    });\n  }\n\n  handleDeleteTopicRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Request to hard-delete topic.\n    topic.delTopic(true).then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleDeleteMessagesRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Request hard-delete all messages.\n    topic.delMessagesAll(true).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleLeaveUnsubRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.leave(true).then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleBlockTopicRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleReportTopic(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Publish spam report.\n    this.tinode.publish(Tinode.TOPIC_SYS, Tinode.Drafty.attachJSON(null, {\n      'action': 'report',\n      'target': topicName\n    }));\n\n    // Remove J and P permissions.\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleShowContextMenu(params, menuItems) {\n    this.setState({\n      contextMenuVisible: true,\n      contextMenuClickAt: {x: params.x, y: params.y},\n      contextMenuParams: params,\n      contextMenuItems: menuItems || this.defaultTopicContextMenu(params.topicName),\n      contextMenuBounds: this.selfRef.current.getBoundingClientRect()\n    });\n  }\n\n  defaultTopicContextMenu(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n\n    let muted = false, blocked = false, self_blocked = false, subscribed = false, deleter = false, archived = false;\n    if (topic) {\n      subscribed = topic.isSubscribed();\n      archived = topic.isArchived();\n\n      const acs = topic.getAccessMode();\n      if (acs) {\n        muted = acs.isMuted();\n        blocked = !acs.isJoiner();\n        self_blocked = !acs.isJoiner('want');\n        deleter = acs.isDeleter();\n      }\n    }\n\n    return [\n      subscribed ? {\n        title: this.props.intl.formatMessage(messages.menu_item_info),\n        handler: this.handleShowInfoView\n      } : null,\n      subscribed ? 'messages_clear' : null,\n      subscribed && deleter ? 'messages_clear_hard' : null,\n      muted ? (blocked ? null : 'topic_unmute') : 'topic_mute',\n      self_blocked ? 'topic_unblock' : 'topic_block',\n      !archived ? 'topic_restore' : 'topic_archive',\n      'topic_delete'\n    ];\n  }\n\n  handleHideContextMenu() {\n    this.setState({\n      contextMenuVisible: false,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuBounds: null\n    });\n  }\n\n  handleContextMenuAction(action, promise, params) {\n    if (action == 'topic_archive') {\n      if (promise && params.topicName && params.topicName == this.state.topicSelected) {\n        promise.then(() => {\n          this.handleTopicSelected(null);\n        });\n      }\n    }\n  }\n\n  handleShowAlert(title, content, onConfirm, confirmText, onReject, rejectText) {\n    this.setState({\n      alertVisible: true,\n      alertParams: {\n        title: title,\n        content: content,\n        onConfirm: onConfirm,\n        confirm: confirmText,\n        onReject: onReject,\n        reject: rejectText\n      }\n    });\n  }\n\n  handleShowInfoView() {\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'info', 'info'));\n    this.setState({infoPanel: 'info'});\n  }\n\n  handleMemberUpdateRequest(topicName, added, removed) {\n    if (!topicName) {\n      return;\n    }\n\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    if (added && added.length > 0) {\n      added.map((uid) => {\n        topic.invite(uid, null).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n\n    if (removed && removed.length > 0) {\n      removed.map((uid) => {\n        topic.delSubscription(uid).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n  }\n\n  handleValidateCredentialsRequest(cred, code) {\n    if (this.tinode.isAuthenticated()) {\n      const me = this.tinode.getMeTopic();\n      me.setMeta({cred: {meth: cred, resp: code}})\n        .then(() => {\n          HashNavigation.navigateTo('');\n        })\n        .catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n    } else {\n      this.setState({credMethod: cred, credCode: code});\n      this.doLogin(null, null, {meth: cred, resp: code});\n    }\n  }\n\n  handlePasswordResetRequest(method, value) {\n    // If already connected, connnect() will return a resolved promise.\n    this.tinode.connect()\n      .then(() => {\n        return this.tinode.requestResetAuthSecret('basic', method, value);\n      })\n      .catch((err) => {\n        // Socket error\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleResetPassword(scheme, newPassword, token) {\n    token = base64ReEncode(token);\n    if (!token) {\n      this.handleError(this.props.intl.formatMessage(messages.invalid_security_token), 'err');\n    } else {\n      this.tinode.connect()\n        .then(() => {\n          return this.tinode.updateAccountBasic(null, null, newPassword, {token: token});\n        })\n        .catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"app-container\" ref={this.selfRef}>\n        {this.state.contextMenuVisible ?\n          <ContextMenu\n            tinode={this.tinode}\n            bounds={this.state.contextMenuBounds}\n            clickAt={this.state.contextMenuClickAt}\n            params={this.state.contextMenuParams}\n            items={this.state.contextMenuItems}\n            hide={this.handleHideContextMenu}\n            onShowAlert={this.handleShowAlert}\n            onAction={this.handleContextMenuAction}\n            onTopicRemoved={(topicName) => {\n              if (topicName == this.state.topicSelected) {\n                this.handleTopicSelected(null);\n              }\n            }}\n            onError={this.handleError} />\n          :\n          null\n        }\n        <Alert\n          visible={this.state.alertVisible}\n          title={this.state.alertParams.title}\n          content={this.state.alertParams.content}\n          onReject={this.state.alertParams.onReject ? (() => { this.setState({alertVisible: false}); }) : null}\n          reject={this.state.alertParams.reject}\n          onConfirm={() => { this.setState({alertVisible: false}); this.state.alertParams.onConfirm(); }}\n          confirm={this.state.alertParams.confirm}\n          />\n        <SidepanelView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          displayMobile={this.state.displayMobile}\n          hideSelf={this.state.displayMobile && this.state.mobilePanel !== 'sidepanel'}\n          state={this.state.sidePanelSelected}\n          title={this.state.sidePanelTitle}\n          avatar={this.state.sidePanelAvatar}\n          trustedBadges={this.state.myTrustedBadges}\n          login={this.state.login}\n          persist={this.state.persist}\n          myUserId={this.state.myUserId}\n          loginDisabled={this.state.loginDisabled}\n          loadSpinnerVisible={this.state.loadSpinnerVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          topicSelected={this.state.topicSelected}\n          chatList={this.state.chatList}\n          credMethod={this.state.credMethod}\n          credCode={this.state.credCode}\n\n          transport={this.state.transport}\n          messageSounds={this.state.messageSounds}\n          desktopAlerts={this.state.desktopAlerts}\n          desktopAlertsEnabled={this.state.desktopAlertsEnabled}\n          incognitoMode={this.state.incognitoMode}\n          serverAddress={this.state.serverAddress}\n          serverVersion={this.state.serverVersion}\n\n          onGlobalSettings={this.handleGlobalSettings}\n          onSignUp={this.handleNewAccount}\n          onSettings={this.handleSettings}\n          onNavigate={this.basicNavigator}\n          onLoginRequest={this.handleLoginRequest}\n          onPersistenceChange={this.handlePersistenceChange}\n          onCreateAccount={this.handleNewAccountRequest}\n          onUpdateAccountDesc={this.handleTopicUpdateRequest}\n          onUpdatePassword={this.handleUpdatePasswordRequest}\n          onUpdateAccountTags={this.handleUpdateAccountTagsRequest}\n          onTogglePushNotifications={this.togglePushToken}\n          onToggleMessageSounds={this.handleToggleMessageSounds}\n          onToggleIncognitoMode={this.handleToggleIncognitoMode}\n          onCredAdd={this.handleCredAdd}\n          onCredDelete={this.handleCredDelete}\n          onCredConfirm={this.handleCredConfirm}\n          onTopicSelected={this.handleTopicSelected}\n          onCreateTopic={this.handleStartTopicRequest}\n          onLogout={this.handleLogout}\n          onDeleteAccount={this.handleDeleteAccount}\n          onShowAlert={this.handleShowAlert}\n          onCancel={this.handleSidepanelCancel}\n          onError={this.handleError}\n          onValidateCredentials={this.handleValidateCredentialsRequest}\n          onPasswordResetRequest={this.handlePasswordResetRequest}\n          onResetPassword={this.handleResetPassword}\n          onShowArchive={this.handleShowArchive}\n          onShowBlocked={this.handleShowBlocked}\n\n          onInitFind={this.tnInitFind}\n          searchResults={this.state.searchResults}\n          onSearchContacts={this.handleSearchContacts}\n\n          showContextMenu={this.handleShowContextMenu} />\n\n        <MessagesView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          ready={this.state.ready}\n          online={this.state.topicSelectedOnline}\n          acs={this.state.topicSelectedAcs}\n          displayMobile={this.state.displayMobile}\n          viewportWidth={this.state.viewportWidth}\n          viewportHeight={this.state.viewportHeight}\n          hideSelf={this.state.displayMobile &&\n            (this.state.mobilePanel !== 'topic-view' || this.state.infoPanel)}\n          topic={this.state.topicSelected}\n          myUserId={this.state.myUserId}\n          serverVersion={this.state.serverVersion}\n          serverAddress={this.state.serverAddress}\n          applicationVisible={this.state.applicationVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          newTopicParams={this.state.newTopicParams}\n\n          onHideMessagesView={this.handleHideMessagesView}\n          onData={this.tnData}\n          onError={this.handleError}\n          onNewTopicCreated={this.handleNewTopicCreated}\n          showContextMenu={this.handleShowContextMenu}\n          onChangePermissions={this.handleChangePermissions}\n          onNewChat={this.handleNewChatInvitation}\n          sendMessage={this.handleSendMessage} />\n\n        {this.state.infoPanel ?\n          <InfoView\n            tinode={this.tinode}\n            connected={this.state.connected}\n            displayMobile={this.state.displayMobile}\n            topic={this.state.topicSelected}\n            searchableContacts={this.state.searchableContacts}\n            myUserId={this.state.myUserId}\n            panel={this.state.infoPanel}\n\n            errorText={this.state.errorText}\n            errorLevel={this.state.errorLevel}\n            errorAction={this.state.errorAction}\n            errorActionText={this.state.errorActionText}\n\n            onNavigate={this.infoNavigator}\n            onTopicDescUpdate={this.handleTopicUpdateRequest}\n            onShowAlert={this.handleShowAlert}\n            onChangePermissions={this.handleChangePermissions}\n            onMemberUpdateRequest={this.handleMemberUpdateRequest}\n            onDeleteTopic={this.handleDeleteTopicRequest}\n            onDeleteMessages={this.handleDeleteMessagesRequest}\n            onLeaveTopic={this.handleLeaveUnsubRequest}\n            onBlockTopic={this.handleBlockTopicRequest}\n            onReportTopic={this.handleReportTopic}\n            onAddMember={this.handleManageGroupMembers}\n            onTopicTagsUpdate={this.handleTagsUpdated}\n            onInitFind={this.tnInitFind}\n            onError={this.handleError}\n\n            showContextMenu={this.handleShowContextMenu}\n            />\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(TinodeWeb);\n","// Put all packages together.\n// Used to generate umd/index.prod.js\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { IntlProvider } from 'react-intl';\n\nimport allMessages from './messages.json';\nimport TinodeWeb from './views/tinode-web.jsx';\nimport HashNavigation from './lib/navigation.js';\n\n// Detect human language to use in the UI:\n//  Check parameters from URL hash #?hl=ru, then browser, then use 'en' as a fallback.\nconst { params } = HashNavigation.parseUrlHash(window.location.hash);\nconst language = (params && params.hl) ||\n  (navigator.languages && navigator.languages[0]) ||\n  navigator.language ||\n  navigator.userLanguage ||\n  'en';\n\n// Get the base language 'en' from a more specific 'en_GB' or 'en-US' as a partial fallback.\nconst baseLanguage = language.toLowerCase().split(/[-_]/)[0];\n\n// Try the full locale first, then the locale without the region code, fallback to 'en'.\nconst messages =\n  allMessages[language] ||\n  allMessages[baseLanguage] ||\n  allMessages.en;\n\nReactDOM.render(\n  <React.StrictMode>\n    <IntlProvider locale={language} messages={messages} textComponent={React.Fragment}>\n      <TinodeWeb />\n    </IntlProvider>\n  </React.StrictMode>,\n  document.getElementById('mountPoint')\n);\n","// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// startup\n// Load entry module and return exports\n// This entry module doesn't tell about it's top-level declarations so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[617](0, __webpack_exports__, __webpack_require__);\n"],"names":["React","ReactDOM","ReactIntl","firebase","messaging","Tinode","Alert","render","this","props","visible","className","title","content","onReject","onClick","reject","FormattedMessage","id","defaultMessage","onConfirm","confirm","PACKAGE_VERSION","APP_NAME","KNOWN_HOSTS","hosted","local","DEFAULT_HOST","KEYPRESS_DELAY","DEFAULT_P2P_ACCESS_MODE","NO_ACCESS_MODE","REM_SIZE","AVATAR_SIZE","MAX_INBAND_ATTACHMENT_SIZE","MAX_EXTERN_ATTACHMENT_SIZE","MAX_IMAGE_DIM","MAX_TITLE_LENGTH","MAX_TOPIC_DESCRIPTION_LENGTH","messages","defineMessages","info","clear_messages","clear_for_all","delete","delete_for_all","send_retry","mute","unmute","topic_delete","topic_delete_warning","delete_messages_warning","unblock","block","topic_block_warning","member_delete","archive","unarchive","edit_permissions","clear_messages_warning","ContextMenu","constructor","super","selfRef","formatMessage","intl","handlePageClick","bind","handleEscapeKey","handleClick","MenuItems","handler","params","errorHandler","onShowAlert","deleteMessages","message","retryMessage","topicPermissionSetter","then","ctrl","onTopicRemoved","topicName","topic","tinode","getTopic","delTopic","catch","err","console","log","user","delSubscription","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","e","current","contains","target","preventDefault","stopPropagation","hide","keyCode","item","items","currentTarget","dataset","onAction","onError","all","hard","cancelSend","seq","delMessagesAll","delMessagesList","flushMessage","msg","createMessage","publishDraft","mode","result","updateMode","count","menu","map","push","key","vSize","length","position","left","bounds","right","clickAt","x","top","bottom","y","style","ref","injectIntl","shortDateFormat","locale","window","navigator","userLanguage","language","now","Date","getFullYear","getMonth","getDate","toLocaleTimeString","hour12","hour","minute","toLocaleDateString","month","day","year","bytesToHumanSize","bytes","sizes","bucket","Math","min","floor","log2","pow","round","toFixed","updateFavicon","oldIcon","getElementById","head","getElementsByTagName","newIcon","createElement","type","rel","href","removeChild","appendChild","theCard","fn","imageUrl","imageMimeType","note","card","trim","mimeType","matches","exec","photo","data","substring","indexOf","arrayEqual","a","b","Array","isArray","sort","i","l","sanitizeUrl","url","allowedSchemes","replace","test","schemes","join","RegExp","sanitizeImageUrl","sanitizedUrl","deliveryMarker","received","name","color","LetterTile","avatar","isGroup","iconColor","abs","value","hash","charCodeAt","stringHash","letter","charAt","authorizeURL","alt","src","onerror","LoadSpinner","large","clear","centered","show","AvatarUpload","state","source","handleFileReceived","componentDidUpdate","prevProps","setState","image","files","onImageUpdated","URL","createObjectURL","randId","random","substr","readOnly","uid","accept","onChange","htmlFor","uploading","icon_mapping","badge_verified","badge_staff","badge_danger","BadgeList","badges","trustedBadges","comment","CheckBox","handleChange","checked","ContactBadges","icon","message_sending","message_sending_failed","ReceivedMarker","timestamp","marker","UnreadBadge","drafty_image","drafty_form","drafty_attachment","Contact","handleContextClick","onSelected","index","showContextMenu","pageY","pageX","online","slice","icon_badges","isVerified","isStaff","isDangerous","acs","showMode","getMode","isMuted","isJoiner","subtitle","preview","Drafty","draftyFormatter","showCheckmark","selected","showOnline","isChannel","unread","small","values","el","attr","concat","mime","ContactAction","action","SUPPORTED_IMAGE_FORMATS","MIME_EXTENSIONS","makeImageUrl","startsWith","fitImageSize","width","height","maxWidth","maxHeight","forceSquare","scale","size","dstWidth","dstHeight","srcWidth","srcHeight","xoffset","yoffset","imageScaled","fileOrBlob","maxSize","onSuccess","img","Image","crossOrigin","onload","async","revokeObjectURL","dim","canvas","ctx","getContext","imageSmoothingEnabled","drawImage","includes","blob","Promise","resolve","toBlob","clearRect","fname","idx","ext","at","lastIndexOf","fileNameForMime","fileToBase64","file","reader","FileReader","split","readAsDataURL","blobToBase64","badge_you","badge_owner","ContactList","topicSelected","contactNodes","contactsCount","contacts","c","filterFunc","filter","filterOn","private","toLowerCase","public","myUserId","isOwner","deliveryStatus","latestMessage","_status","msgStatus","showUnread","connected","onTopicSelected","trusted","verified","staff","danger","noScroll","dangerouslySetInnerHTML","__html","emptyListMessage","MenuCancel","onCancel","ErrorPanel","level","onClearError","warn","text","whiteSpace","actionText","Chip","handleCancel","invalid","noAvatar","required","ChipInput","deriveStateFromProps","input","focused","handleTextInput","removeChipAt","handleChipCancel","handleFocusGained","handleFocusLost","handleKeyDown","placeholder","chips","prompt","sortedChips","sortChips","staticMembers","chipIndex","indexChips","prevState","keep","normal","removed","onChipRemoved","onFocusLost","onEnter","undefined","avatarDisabled","autoFocus","tabIndex","onFocus","onBlur","onKeyDown","no_contacts","contacts_not_found_short","GroupManager","members","indexMembers","keepInitialMembers","requiredMember","contactFilter","noContactsMessage","selectedContacts","handleContactSelected","handleMemberRemoved","handleContactFilter","handleSubmit","m","delta","present","keepInitial","stat","sel","userId","status","splice","val","query","instance","added","Object","keys","k","onSubmit","doContactFiltering","joiner","writer","preser","approver","sharer","deleter","owner","PermissionsEditor","names","skip","compare","userTitle","userAvatar","modeTitle","compareTitle","Cropper","panX","panY","originX","originY","zoom","minZoom","maxZoom","overlay","cutout","boundingBox","imageWidth","imageHeight","mouseX","mouseY","prevDistance","cutoutRect","bBoxRect","initScaling","onZoom","handleZoom","mouseDown","mouseUp","mouseMove","mouseTouch","positionAll","translate","passive","getBoundingClientRect","currPan","nextDiff","imgRect","max","imgLeft","imgRight","coLeft","coRight","imgTop","imgBottom","coTop","coBottom","touches","body","dX","dY","checkBound","touch0","touch1","distance","sqrt","t3d","orig","transform","transformOrigin","onLoad","step","AvatarCrop","objURL","imageCrop","VisiblePassword","handleVisibility","handeTextChange","handleEditingFinished","onFinished","setTimeout","activeElement","autoComplete","InPlaceEdit","active","initialValue","handleStartEditing","handlePasswordFinished","newValue","focus","event","checkValidity","spanText","spanClass","multiline","element","rows","TagManager","tags","tagInput","activated","handleTagInput","handleAddTag","handleRemoveTag","nextProps","last","tag","maxTagCount","getServerLimit","onTagsChanged","minTagLength","maxTagLength","add_tags_prompt","TopicDescEdit","getAccessMode","isMe","fullName","description","newAvatar","newAvatarMime","previousOnTags","onTagsUpdated","tnNewTags","handleFullNameUpdate","handleImageUpdated","handleAvatarCropped","handlePrivateUpdate","handleDescriptionUpdate","uploadAvatar","handleAvatarCropCancel","handleTagsUpdated","onUpdateTopicDesc","desc","readyToUpload","uploader","getLargeFileHelper","upload","finally","unused","base64bits","du","onUpdateTags","editable","full_name_placeholder","groupTopic","private_placeholder","title_tag_manager","TopicCommon","credentials","getCredentials","addCredActive","addCredInvalid","newCred","previousTagsUpdated","tnCredsUpdated","handleCredChange","handleCredKeyDown","handleCredEntered","onCredsUpdated","getType","creds","method","asPhone","asEmail","onCredAdd","onTopicTagsUpdate","cred","meth","done","onCredConfirm","onCredDelete","delete_messages","leave_chat","leave_chat_warning","block_contact","block_contact_warning","report_chat","report_chat_warning","other_user","TopicSecurity","defacs","getDefaultAccess","modeGiven2","modeWant2","user2","subscriber","getGiven","getWant","admin","isAdmin","isSharer","isDeleter","muted","isGroupType","channel","isChannelType","access","modeGiven","modeWant","auth","anon","handleDeleteTopic","handleDeleteMessages","handleLeave","handleBlock","handleReport","onDeleteTopic","onDeleteMessages","onLeaveTopic","onBlockTopic","onReportTopic","onLaunchPermissionsEditor","general","security","crop","perm_want","perm_given","perm_auth","perm_anon","perm_user","_clip","str","InfoView","address","selectedContact","contactList","previousMetaDesc","previousSubsUpdated","resetSubs","resetDesc","onMetaDesc","onSubsUpdated","handleImageChanged","handleMuted","handlePermissionsChanged","handleLaunchPermissionsEditor","handleShowAddMembers","handleMemberUpdateRequest","handleMemberSelected","handleContextMenu","handleBackNavigate","newState","subscribers","sub","entries","chan","getMeta","startMetaQuery","withTags","build","subs","onTopicDescUpdate","ignored","onChangePermissions","which","perm","userPermissionsEdited","toEdit","toCompare","toSkip","titleEdit","titleCompare","userPermissionsTitle","userPermissionsAvatar","editedPermissions","immutablePermissions","editedPermissionsTitle","immutablePermissionsTitle","editedPermissionsSkipped","onNavigate","onInitFind","onMemberUpdateRequest","args","panel","menuItems","view","shift","panelTitle","displayMobile","errorLevel","errorText","searchableContacts","no_members","FileProgress","progress","Attachment","downloader","downloadFile","filename","mimetype","download","loaded","onCancelUpload","cancel","helperFunc","isUrlRelative","downloadUrl","downloadWidget","UploadingImage","ChatMessage","onProgress","handleProgress","handleImagePreview","handleFormButtonClick","handleCancelUpload","onImagePreview","resp","act","onFormResponse","MESSAGE_STATUS_FAILED","ratio","sideClass","deleted","sequence","response","bubbleClass","fullDisplay","userFrom","attachments","att","userName","notFound","viewportWidth","minWidth","minHeight","loading","inner","child","messaging_disabled","type_new_message","add_image_caption","file_attachment_too_large","cannot_initiate_upload","SendMessage","keypressTimestamp","getTime","handlePasteEvent","handleAttachImage","handleAttachFile","handleSend","handleKeyPress","handleMessageTyping","messageEditArea","disabled","onImageSuccess","onAttachmentSuccess","clipboardData","originalEvent","kind","getAsFile","error","imageFileScaledToBase64","imageFileToBase64","filePasted","bits","onAttachImage","onAttachFile","acceptBlank","noInput","onSendMessage","shiftKey","onKeyPress","messagePrompt","attachImage","click","attachFile","display","DocPreview","handleSendDoc","caption","onClose","mimeToIcon","default","video","iconFromMime","GroupSubs","usersOnline","totalCount","countToShow","some","overflow","ImagePreview","handleSendImage","assignWidth","node","maxlength","Invitation","handleButtonAction","evt","LogoView","version","serverVersion","serverAddress","HashNavigation","parts","path","forEach","part","decodeURIComponent","location","hasOwnProperty","parsed","parseUrlHash","composeUrlHash","sidepanel","infopanel","online_now","last_seen","not_found","isUnconfirmed","ex","getExcessive","isPeerRestricted","ms","getMissing","MessagesView","getDerivedStateFromProps","leave","sendImageAttachment","sendFileAttachment","sendKeyPress","handleScrollReference","handleScrollEvent","handleDescChange","handleSubsUpdated","handleNewMessage","handleAllMessagesReceived","handleInfoReceipt","handleImagePostview","handleClosePreview","handleFormResponse","handleShowContextMenuMessage","handleNewChatAcceptance","handleEnablePeer","postReadNotification","clearNotificationQueue","readNotificationQueue","readNotificationTimer","messagesScroller","scrollTop","scrollHeight","scrollPosition","viewportHeight","onData","onAllMessagesReceived","onInfo","onPres","applicationVisible","isSubscribed","ready","newTopic","newTopicParams","_topicName","getQuery","withLaterDesc","withLaterSub","isReader","withLaterData","withLaterDel","fetchingMessages","setQuery","subscribe","code","onNewTopicCreated","queuedMessages","pub","_sending","publishMessage","navigateTo","setUrlTopic","blankState","nextState","docPreview","imagePreview","imagePostview","typingIndicator","msgs","assign","onlineSubs","peer","p2pPeerDesc","peerMessagingDisabled","isWriter","readingBlocked","unconformed","unconfirmed","oldTopicName","isTopicCached","oldTopic","msgHasMoreMessages","getMessagesPage","setInterval","clearInterval","n","sendAt","noteRead","setMilliseconds","getMilliseconds","isNewMessage","from","what","clearTimeout","keyPressTimer","forceUpdate","sendMessage","attachJSON","parse","searchParams","set","search","open","messageSpecificMenuItems","onNewChat","noteKeyPress","maxInbandAttachmentSize","uploadCompletionPromise","urlPromise","maxExternAttachmentSize","limit","tinyMine","tinyBlob","blobMime","tinyBits64","insertImage","_tempPreview","appendLineBreak","append","init","bits64","found","find","_cancelled","component","hideSelf","component2","messageNodes","previousFrom","chatBoxClass","nextFrom","thisFrom","isReply","userDesc","hi","ts","_uploader","lastSeen","cont","getMeTopic","getContact","seen","when","onHideMessagesView","ButtonBack","onBack","MenuContacts","onNewTopic","onSettings","MenuStart","onSignUp","SideNavbar","AccountSettingsView","me","archived_contacts_title","ContactsView","handleAction","unreadThreads","archivedCount","chatList","blocked","arch","touched","action_ignored","onShowArchive","LocalStorageUtil","localStorage","setItem","JSON","stringify","getItem","oldVal","getObject","setObject","removeItem","CreateAccountView","login","password","email","imageDataUrl","errorCleared","saveToken","handleLoginChange","handlePasswordChange","handleEmailChange","handleFnChange","handleToggleSaveToken","onCreateAccount","submitClasses","login_prompt","password_prompt","onImageChanged","full_name_prompt","email_prompt","stay_logged_in","EditAccountView","handleCheckboxClick","onToggleMessageSounds","onTogglePushNotifications","onToggleIncognitoMode","messageSounds","desktopAlertsEnabled","desktopAlerts","incognitoMode","delete_account","delete_account_warning","AccSecurityView","blockedCount","showPermissionEditorFor","handlePasswordUpdate","handleHidePermissionsEditor","handleDeleteAccount","pwd","onUpdatePassword","onUpdateAccountDesc","onDeleteAccount","password_unchanged","onLogout","onShowBlocked","AccSupportView","LoginView","hostName","persist","onPersistenceChange","onLogin","autoCorrect","autoCapitalize","invalid_id","NewTopicById","groupId","prefix","NewTopicGroup","handleFieldEdit","handleTagsChanged","handleChannelToggle","SearchContacts","edited","handleSearchChange","handleSearch","handleClear","onSearchContacts","search_placeholder","search_for_contacts","search_no_results","NewTopicView","tabSelected","searchQuery","handleTabClick","handleSearchContacts","handleNewGroupSubmit","handleGroupByID","addUrlParam","removeUrlParam","onCreateTopic","dataUrl","priv","no_contacts_placeholder","searchResults","PasswordResetView","token","scheme","onReset","onRequest","reset","HostSelector","changed","handleHostNameChange","onServerAddressChange","hostOptions","list","SettingsView","transport","handleTransportSelected","handleServerAddressChange","onUpdate","def","ws","lp","transportOptions","phone","ValidationView","credCode","credMethod","numbers_only","register","settings","edit","notif","support","newtpk","SidepanelView","handleNewTopic","errorAction","errorActionText","loadSpinnerVisible","loginDisabled","onLoginRequest","onGlobalSettings","onUpdateAccountTags","onValidateCredentials","onPasswordResetRequest","onResetPassword","detectServerAddress","host","protocol","hostname","port","isSecureConnection","POP_SOUND","Audio","reconnect_countdown","reconnect_now","push_init_failed","invalid_security_token","no_connection","code_doesnot_match","menu_item_info","TinodeWeb","getBlankState","handleResize","handleHashRoute","handleOnline","checkForAppUpdate","handleVisibilityEvent","handleError","handleLoginRequest","handlePersistenceChange","handleConnected","handleAutoreconnectIteration","doLogin","handleCredentialsRequest","handleLoginSuccessful","handleDisconnect","tnMeMetaDesc","tnMeContactUpdate","tnMeSubsUpdated","resetContactList","tnData","tnInitFind","tnFndSubsUpdated","handleTopicSelected","handleHideMessagesView","handleSendMessage","handleNewChatInvitation","handleNewAccount","handleNewAccountRequest","handleUpdatePasswordRequest","handleUpdateAccountTagsRequest","handleToggleIncognitoMode","handleSettings","handleGlobalSettings","handleShowArchive","handleShowBlocked","handleToggleMessageSounds","handleCredAdd","handleCredDelete","handleCredConfirm","initFCMessaging","togglePushToken","requestPushToken","handlePushMessage","handleSidepanelCancel","handleStartTopicRequest","handleNewTopicCreated","handleTopicUpdateRequest","handleChangePermissions","handleLogout","handleDeleteTopicRequest","handleDeleteMessagesRequest","handleLeaveUnsubRequest","handleBlockTopicRequest","handleReportTopic","handleShowContextMenu","defaultTopicContextMenu","handleHideContextMenu","handleShowAlert","handleShowInfoView","handleValidateCredentialsRequest","handlePasswordResetRequest","handleResetPassword","handleContextMenuAction","autoLogin","messageSoundsOff","FIREBASE_INIT","firebaseToken","hidden","sidePanelSelected","sidePanelTitle","sidePanelAvatar","myTrustedBadges","liveConnection","onLine","topicSelectedOnline","topicSelectedAcs","innerWidth","infoPanel","mobilePanel","contextMenuVisible","contextMenuBounds","contextMenuClickAt","contextMenuParams","contextMenuItems","alertVisible","alertParams","requestedTopic","BroadcastChannel","documentElement","clientWidth","clientHeight","tnSetup","onConnect","onDisconnect","onAutoreconnectIteration","setDeviceToken","parsedNav","expires","setAuthToken","connect","readTimer","readTimerCallback","persistentCache","onSetupCompleted","appName","apiKey","secure","setHumanLanguage","enableLogging","oobNotification","fbPush","usePublicVapidKey","messagingVapidKey","serviceWorker","reg","useServiceWorker","postMessage","onTokenRefresh","onMessage","payload","mobile","onupdatefound","installingWorker","installing","onstatechange","controller","getTopicAccessMode","newTopicTabSelected","tab","reconnectCountdown","reconnect","isConnected","initStorage","clearStorage","getServerInfo","ver","sec","prom","timeLeft","seconds","secondsToTime","isAuthenticated","promise","getAuthToken","loginBasic","loginToken","goToTopic","onContactUpdate","getCurrentUserID","withDesc","withCred","disconnect","urlHash","setUrlSidePanel","isPresencer","archived","isArchived","play","foundContacts","merged","updated","past","prepareSearchableContacts","receivedTimer","noteRecv","fnd","getFndTopic","withSub","s","setMeta","isTopicOnline","isP2PType","am","updateWant","login_","password_","public_","cred_","tags_","createAccountBasic","on","enabled","updateObject","requestPermission","deleteToken","getToken","refreshedToken","delCredential","basicNavigator","infoNavigator","setUrlInfoPanel","newGroupTopicName","oldName","newName","updateAccountBasic","getCurrentLogin","updateGiven","delCurrentUser","publish","self_blocked","subscribed","confirmText","rejectText","invite","requestResetAuthSecret","newPassword","btoa","atob","base64ReEncode","onAddMember","handleManageGroupMembers","hl","languages","baseLanguage","allMessages","IntlProvider","textComponent","__webpack_require__","module","getter","__esModule","d","exports","definition","o","defineProperty","enumerable","get","obj","prop","prototype","call","__webpack_modules__"],"sourceRoot":""}