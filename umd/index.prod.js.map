{"version":3,"sources":["webpack://tinode-webapp/webpack/bootstrap","webpack://tinode-webapp/webpack/runtime/compat get default export","webpack://tinode-webapp/webpack/runtime/define property getters","webpack://tinode-webapp/webpack/runtime/hasOwnProperty shorthand","webpack://tinode-webapp/external \"React\"","webpack://tinode-webapp/external \"ReactDOM\"","webpack://tinode-webapp/external \"ReactIntl\"","webpack://tinode-webapp/external \"firebase\"","webpack://tinode-webapp/external \"Tinode\"","webpack://tinode-webapp/external [\"firebase\",\"messaging\"]","webpack://tinode-webapp/./src/widgets/alert.jsx","webpack://tinode-webapp/./src/version.js","webpack://tinode-webapp/./src/config.js","webpack://tinode-webapp/./src/widgets/context-menu.jsx","webpack://tinode-webapp/./src/lib/strformat.js","webpack://tinode-webapp/./src/widgets/letter-tile.jsx","webpack://tinode-webapp/./src/lib/blob-helpers.js","webpack://tinode-webapp/./src/widgets/avatar-upload.jsx","webpack://tinode-webapp/./src/widgets/checkbox.jsx","webpack://tinode-webapp/./src/widgets/contact-badges.jsx","webpack://tinode-webapp/./src/widgets/unread-badge.jsx","webpack://tinode-webapp/./src/widgets/contact.jsx","webpack://tinode-webapp/./src/widgets/contact-action.jsx","webpack://tinode-webapp/./src/widgets/contact-list.jsx","webpack://tinode-webapp/./src/widgets/menu-cancel.jsx","webpack://tinode-webapp/./src/widgets/error-panel.jsx","webpack://tinode-webapp/./src/widgets/chip.jsx","webpack://tinode-webapp/./src/widgets/chip-input.jsx","webpack://tinode-webapp/./src/widgets/group-manager.jsx","webpack://tinode-webapp/./src/widgets/visible-password.jsx","webpack://tinode-webapp/./src/widgets/in-place-edit.jsx","webpack://tinode-webapp/./src/widgets/more-button.jsx","webpack://tinode-webapp/./src/widgets/permissions-editor.jsx","webpack://tinode-webapp/./src/lib/utils.js","webpack://tinode-webapp/./src/widgets/tag-manager.jsx","webpack://tinode-webapp/./src/views/info-view.jsx","webpack://tinode-webapp/./src/widgets/file-progress.jsx","webpack://tinode-webapp/./src/widgets/attachment.jsx","webpack://tinode-webapp/./src/widgets/received-marker.jsx","webpack://tinode-webapp/./src/widgets/uploading-image.jsx","webpack://tinode-webapp/./src/widgets/chat-message.jsx","webpack://tinode-webapp/./src/widgets/send-message.jsx","webpack://tinode-webapp/./src/widgets/doc-preview.jsx","webpack://tinode-webapp/./src/widgets/group-subs.jsx","webpack://tinode-webapp/./src/widgets/image-preview.jsx","webpack://tinode-webapp/./src/widgets/invitation.jsx","webpack://tinode-webapp/./src/widgets/load-spinner.jsx","webpack://tinode-webapp/./src/views/logo-view.jsx","webpack://tinode-webapp/./src/lib/navigation.js","webpack://tinode-webapp/./src/views/messages-view.jsx","webpack://tinode-webapp/./src/widgets/button-back.jsx","webpack://tinode-webapp/./src/widgets/menu-contacts.jsx","webpack://tinode-webapp/./src/widgets/menu-start.jsx","webpack://tinode-webapp/./src/widgets/side-navbar.jsx","webpack://tinode-webapp/./src/views/contacts-view.jsx","webpack://tinode-webapp/./src/lib/local-storage.js","webpack://tinode-webapp/./src/views/create-account-view.jsx","webpack://tinode-webapp/./src/views/edit-account-view.jsx","webpack://tinode-webapp/./src/views/acc-general-view.jsx","webpack://tinode-webapp/./src/views/acc-notifications-view.jsx","webpack://tinode-webapp/./src/views/acc-security-view.jsx","webpack://tinode-webapp/./src/views/acc-support-view.jsx","webpack://tinode-webapp/./src/views/login-view.jsx","webpack://tinode-webapp/./src/widgets/new-topic-by-id.jsx","webpack://tinode-webapp/./src/widgets/new-topic-group.jsx","webpack://tinode-webapp/./src/widgets/search-contacts.jsx","webpack://tinode-webapp/./src/views/new-topic-view.jsx","webpack://tinode-webapp/./src/views/password-reset-view.jsx","webpack://tinode-webapp/./src/widgets/host-selector.jsx","webpack://tinode-webapp/./src/views/settings-view.jsx","webpack://tinode-webapp/./src/views/validation-view.jsx","webpack://tinode-webapp/./src/views/sidepanel-view.jsx","webpack://tinode-webapp/./src/lib/host-name.js","webpack://tinode-webapp/./src/views/tinode-web.jsx","webpack://tinode-webapp/./src/index.js"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","React","ReactDOM","ReactIntl","firebase","messaging","Tinode","Alert","render","this","props","visible","className","title","content","onReject","onClick","reject","FormattedMessage","id","onConfirm","confirm","APP_NAME","KNOWN_HOSTS","hosted","local","DEFAULT_HOST","KEYPRESS_DELAY","DEFAULT_P2P_ACCESS_MODE","REM_SIZE","AVATAR_SIZE","MAX_INBAND_ATTACHMENT_SIZE","MAX_EXTERN_ATTACHMENT_SIZE","MAX_IMAGE_DIM","MAX_TITLE_LENGTH","messages","defineMessages","info","clear_messages","clear_for_all","delete_for_all","send_retry","mute","unmute","topic_delete","topic_delete_warning","unblock","block","topic_block_warning","member_delete","archive","ContextMenu","constructor","super","formatMessage","intl","handlePageClick","bind","handleEscapeKey","handleClick","MenuItems","handler","params","errorHandler","onShowAlert","menu_item_clear_messages","deleteMessages","menu_item_clear_messages_for_all","delete","retryMessage","topicPermissionSetter","menu_item_block","then","ctrl","onTopicRemoved","topicName","menu_item_delete_topic","topic","tinode","getTopic","delTopic","catch","err","message","console","log","user","delSubscription","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","e","contains","target","preventDefault","stopPropagation","hide","keyCode","item","items","currentTarget","dataset","onAction","onError","all","hard","cancelSend","seq","delMessagesAll","delMessagesList","flushMessage","msg","createMessage","publishDraft","mode","result","updateMode","count","menu","map","push","data-id","vSize","length","position","left","bounds","right","clickAt","x","top","bottom","y","style","injectIntl","shortDateFormat","locale","window","navigator","userLanguage","language","now","Date","getFullYear","getMonth","getDate","toLocaleTimeString","hour12","hour","minute","toLocaleDateString","month","day","year","bytesToHumanSize","bytes","sizes","bucket","Math","min","floor","log2","pow","round","toFixed","LetterTile","avatar","isGroup","iconColor","abs","value","hash","i","charCodeAt","stringHash","trim","letter","charAt","alt","src","onerror","SUPPORTED_IMAGE_FORMATS","MIME_EXTENSIONS","makeImageUrl","photo","type","data","fitImageSize","width","height","maxWidth","maxHeight","forceSquare","scale","size","dstWidth","dstHeight","srcWidth","srcHeight","xoffset","yoffset","imageScaled","fileOrBlob","maxSize","onSuccess","img","Image","crossOrigin","onload","async","URL","revokeObjectURL","dim","canvas","createElement","ctx","getContext","imageSmoothingEnabled","drawImage","mime","indexOf","blob","Promise","resolve","toBlob","clearRect","fname","idx","ext","at","lastIndexOf","substring","fileNameForMime","name","createObjectURL","fileToBase64","file","reader","FileReader","split","readAsDataURL","blobToBase64","AvatarUpload","state","dataUrl","handleFileUpload","componentDidUpdate","prevProps","setState","files","unused","base64bits","du","onImageChanged","randId","random","substr","readOnly","href","uid","accept","onChange","htmlFor","CheckBox","handleChange","checked","icon_mapping","ContactBadges","badges","b","icon","color","UnreadBadge","Contact","handleContextClick","onSelected","index","showContextMenu","pageY","pageX","online","slice","icon_badges","acs","showMode","getMode","isMuted","isJoiner","showCheckmark","selected","showOnline","isChannel","unread","comment","ContactAction","action","values","badge_you","badge_owner","ContactList","Array","isArray","topicSelected","contactNodes","contactsCount","contacts","c","filterFunc","filter","private","toLowerCase","public","fn","myUserId","isOwner","join","showUnread","connected","onTopicSelected","noScroll","dangerouslySetInnerHTML","__html","emptyListMessage","MenuCancel","onCancel","ErrorPanel","show","level","onClearError","warn","text","whiteSpace","actionText","Chip","handleCancel","invalid","noAvatar","required","ChipInput","deriveStateFromProps","input","focused","handleTextInput","removeChipAt","handleChipCancel","handleFocusGained","handleFocusLost","handleKeyDown","placeholder","chips","prompt","sortedChips","sortChips","staticMembers","chipIndex","indexChips","prevState","keep","normal","includes","concat","removed","onChipRemoved","onFocusLost","onEnter","undefined","avatarDisabled","onFocus","onBlur","onKeyDown","autoFocus","no_contacts","contacts_not_found_short","GroupManager","members","indexMembers","keepInitialMembers","requiredMember","contactFilter","noContactsMessage","selectedContacts","handleContactSelected","handleMemberRemoved","handleContactFilter","handleSubmit","m","delta","present","keepInitial","stat","sel","userId","status","splice","val","query","instance","added","keys","k","onSubmit","defaultMessage","doContactFiltering","VisiblePassword","handleVisibility","handeTextChange","handleEditingFinished","onFinished","setTimeout","activeElement","tabIndex","autoComplete","InPlaceEdit","active","initialValue","handleStartEditing","handlePasswordFinished","newValue","focus","event","checkValidity","fieldType","spanText","spanClass","MoreButton","open","handleToggle","onToggle","PermissionsEditor","replace","sort","names","joiner","writer","preser","approver","sharer","deleter","owner","skip","compare","userTitle","userAvatar","modeTitle","compareTitle","updateFavicon","oldIcon","getElementById","head","getElementsByTagName","newIcon","rel","removeChild","appendChild","vcard","imageDataUrl","card","dataStart","arrayEqual","l","sanitizeUrl","url","allowedSchemes","test","schemes","RegExp","TagManager","tags","tagInput","activated","handleTagInput","handleAddTag","handleRemoveTag","nextProps","last","tag","maxTagCount","getServerLimit","onTagsChanged","minTagLength","maxTagLength","add_tags_prompt","defautMessage","requested","granted","edit_permissions","other_user","clear_messages_warning","delete_messages","delete_messages_warning","leave_chat","leave_chat_warning","block_contact","block_contact_warning","report_chat","report_chat_warning","InfoView","admin","muted","address","groupTopic","channel","fullName","selectedContact","access","modeGiven","modeWant","modeGiven2","modeWant2","auth","anon","contactList","showMemberPanel","showPermissionEditorFor","moreInfoExpanded","previousMetaDesc","previousSubsUpdated","previousTagsUpdated","resetSubs","resetDesc","onMetaDesc","onSubsUpdated","onTagsUpdated","handleFullNameUpdate","handlePrivateUpdate","handleImageChanged","handleMuted","handlePermissionsChanged","handleLaunchPermissionsEditor","handleHidePermissionsEditor","handleShowAddMembers","handleHideAddMembers","handleMemberUpdateRequest","handleDeleteMessages","handleLeave","handleBlock","handleReport","handleMemberSelected","handleMoreInfo","handleTagsUpdated","handleContextMenu","getType","newState","user2","subscriber","getGiven","getWant","subscribers","sub","defacs","getDefaultAccess","getAccessMode","isAdmin","isSharer","isDeleter","getMeta","startMetaQuery","withTags","build","desc","subs","onTopicDescUpdate","ignored","onChangePermissions","perm","userPermissionsEdited","which","toEdit","toCompare","toSkip","titleEdit","titleCompare","userPermissionsTitle","userPermissionsAvatar","editedPermissions","immutablePermissions","editedPermissionsTitle","immutablePermissionsTitle","editedPermissionsSkipped","onInitFind","onMemberUpdateRequest","onDeleteMessages","onLeaveTopic","onBlockTopic","onReportTopic","onTopicTagsUpdate","menuItems","displayMobile","errorLevel","errorText","searchableContacts","private_placeholder","more","no_members","FileProgress","progress","Attachment","downloader","downloadFile","filename","mimetype","getLargeFileHelper","download","loaded","uploading","onCancelUpload","cancel","helperFunc","isUrlRelative","downloadUrl","downloadWidget","ReceivedMarker","timestamp","received","sending","failed","marker","UploadingImage","ChatMessage","uploader","onProgress","handleProgress","handleImagePreview","handleFormButtonClick","handleCancelUpload","onImagePreview","resp","act","ref","onFormResponse","MESSAGE_STATUS_FAILED","ratio","sideClass","deleted","sequence","response","bubbleClass","fullDisplay","userFrom","attachments","mimeType","Drafty","att","draftyFormatter","userName","notFound","el","attr","viewportWidth","authorizeURL","sanitizeImageUrl","inner","child","SendMessage","keypressTimestamp","getTime","handlePasteEvent","handleAttachImage","handleAttachFile","handleSend","handleKeyPress","handleMessageTyping","messageEditArea","disabled","onImageSuccess","onAttachmentSuccess","clipboardData","originalEvent","kind","getAsFile","imageFileScaledToBase64","imageFileToBase64","filePasted","bits","onAttachImage","onAttachFile","acceptBlank","noInput","onSendMessage","shiftKey","onKeyPress","messaging_disabled","messagePrompt","type_new_message","attachImage","click","attachFile","display","DocPreview","handleSendDoc","caption","onClose","mimeToIcon","default","image","video","iconFromMime","GroupSubs","usersOnline","totalCount","countToShow","some","overflow","ImagePreview","handleSendImage","assignWidth","node","getBoundingClientRect","maxlength","max","Invitation","handleButtonAction","evt","LoadSpinner","LogoView","version","serverVersion","serverAddress","HashNavigation","parts","path","forEach","part","decodeURIComponent","location","args","parsed","parseUrlHash","composeUrlHash","sidepanel","isUnconfirmed","ex","getExcessive","isPeerRestricted","ms","getMissing","MessagesView","getDerivedStateFromProps","leave","sendImageAttachment","sendFileAttachment","sendKeyPress","handleScrollReference","handleScrollEvent","handleDescChange","handleSubsUpdated","handleNewMessage","handleAllMessagesReceived","handleInfoReceipt","handleImagePostview","handleClosePreview","handleFormResponse","handleShowContextMenuMessage","handleNewChatAcceptance","handleEnablePeer","postReadNotification","clearNotificationQueue","readNotificationQueue","readNotificationTimer","messagesScroller","scrollTop","scrollHeight","scrollPosition","viewportHeight","onData","onAllMessagesReceived","onInfo","onPres","applicationVisible","isSubscribed","ready","newTopic","newTopicParams","_topicName","getQuery","withLaterDesc","withLaterSub","isReader","withLaterData","withLaterDel","fetchingMessages","setQuery","subscribe","code","onNewTopicCreated","queuedMessages","pub","_sending","publishMessage","setUrlTopic","blankState","not_found","nextState","docPreview","imagePreview","imagePostview","typingIndicator","msgs","assign","onlineSubs","peer","p2pPeerDesc","peerMessagingDisabled","isWriter","readingBlocked","unconformed","unconfirmed","oldTopicName","oldTopic","finally","msgHasMoreMessages","getMessagesPage","setInterval","clearInterval","n","shift","sendAt","noteRead","setMilliseconds","getMilliseconds","isNewMessage","msgStatus","from","what","clearTimeout","keyPressTimer","forceUpdate","sendMessage","attachJSON","parse","searchParams","set","search","messageSpecificMenuItems","onNewChat","noteKeyPress","maxInbandAttachmentSize","cannot_initiate_upload","uploadCompletionPromise","upload","urlPromise","maxExternAttachmentSize","limit","tinyBlob","blobMime","tinyBits64","insertImage","_tempPreview","appendLineBreak","append","init","bits64","preview","found","find","_cancelled","component","hideSelf","component2","messageNodes","previousFrom","chatBoxClass","nextFrom","thisFrom","isReply","deliveryStatus","userDesc","hi","ts","_uploader","lastSeen","cont","getMeTopic","getContact","online_now","seen","last_seen","when","onHideMessagesView","ButtonBack","onBack","MenuContacts","onNewTopic","onSettings","MenuStart","onSignUp","SideNavbar","archived_contacts_title","ContactsView","handleAction","unreadThreads","archivedCount","chatList","blocked","arch","touched","action_ignored","onShowArchive","LocalStorageUtil","localStorage","setItem","JSON","stringify","getItem","oldVal","getObject","setObject","removeItem","CreateAccountView","login","password","email","errorCleared","saveToken","handleLoginChange","handlePasswordChange","handleEmailChange","handleFnChange","handleToggleSaveToken","onCreateAccount","submitClasses","login_prompt","password_prompt","full_name_prompt","email_prompt","stay_logged_in","EditAccountView","me","onBasicNavigate","AccGeneralView","credentials","getCredentials","addCredActive","addCredInvalid","newCred","previousOnTags","tnNewTags","tnCredsUpdated","handleCredChange","handleCredKeyDown","handleCredEntered","onCredsUpdated","creds","onUpdateAccount","method","asPhone","asEmail","onCredAdd","onUpdateTags","cred","meth","done","onCredConfirm","onCredDelete","full_name_placeholder","title_tag_manager","handleCheckboxClick","onToggleMessageSounds","onTogglePushNotifications","onToggleIncognitoMode","messageSounds","desktopAlertsEnabled","desktopAlerts","incognitoMode","delete_account","delete_account_warning","AccSecurityView","blockedCount","handlePasswordUpdate","handleDeleteAccount","pwd","onDeleteAccount","password_unchanged","onLogout","onShowBlocked","AccSupportView","LoginView","hostName","onLogin","autoCorrect","autoCapitalize","invalid_id","NewTopicById","groupId","NewTopicGroup","handlePrivateChange","handleTagsChanged","handleChannelToggle","SearchContacts","edited","handleSearchChange","handleSearch","handleClear","onSearchContacts","search_placeholder","search_for_contacts","search_no_results","NewTopicView","tabSelected","searchQuery","handleTabClick","handleSearchContacts","handleNewGroupSubmit","handleGroupByID","addUrlParam","removeUrlParam","onCreateTopic","priv","no_contacts_placeholder","searchResults","PasswordResetView","token","scheme","onReset","onRequest","reset","HostSelector","changed","handleHostNameChange","onServerAddressChange","hostOptions","list","SettingsView","transport","handleTransportSelected","handleServerAddressChange","onUpdate","def","ws","lp","transportOptions","phone","ValidationView","credCode","credMethod","numbers_only","SidepanelView","handleLoginRequested","handleNewTopic","onLoginRequest","view","errorAction","errorActionText","loadSpinnerVisible","loginDisabled","onGlobalSettings","onUpdateAccountTags","onValidateCredentials","onPasswordResetRequest","onResetPassword","detectServerAddress","host","protocol","hostname","port","isSecureConnection","POP_SOUND","Audio","reconnect_countdown","reconnect_now","push_init_failed","invalid_security_token","no_connection","code_doesnot_match","TinodeWeb","getBlankState","handleResize","handleHashRoute","handleOnline","checkForAppUpdate","handleVisibilityEvent","handleError","handleLoginRequest","handleConnected","handleAutoreconnectIteration","doLogin","handleCredentialsRequest","handleLoginSuccessful","handleDisconnect","tnMeMetaDesc","tnMeContactUpdate","tnMeSubsUpdated","resetContactList","tnData","tnInitFind","tnFndSubsUpdated","handleTopicSelected","handleHideMessagesView","handleSendMessage","handleNewChatInvitation","handleNewAccount","handleNewAccountRequest","handleUpdateAccountRequest","handleUpdateAccountTagsRequest","handleToggleIncognitoMode","handleSettings","handleGlobalSettings","handleShowArchive","handleShowBlocked","handleToggleMessageSounds","handleCredAdd","handleCredDelete","handleCredConfirm","initDesktopAlerts","togglePushToken","requestPushToken","handleSidepanelCancel","handleStartTopicRequest","handleNewTopicCreated","handleTopicUpdateRequest","handleChangePermissions","handleLogout","handleDeleteMessagesRequest","handleLeaveUnsubRequest","handleBlockTopicRequest","handleReportTopic","handleShowContextMenu","defaultTopicContextMenu","handleHideContextMenu","handleShowAlert","handleShowInfoView","handleHideInfoView","handleValidateCredentialsRequest","handlePasswordResetRequest","handleResetPassword","handleContextMenuAction","settings","autoLogin","messageSoundsOff","FIREBASE_INIT","firebaseToken","hidden","sidePanelSelected","sidePanelTitle","sidePanelAvatar","liveConnection","onLine","topicSelectedOnline","topicSelectedAcs","innerWidth","showInfoPanel","mobilePanel","contextMenuVisible","contextMenuBounds","contextMenuClickAt","contextMenuParams","contextMenuItems","alertVisible","alertParams","documentElement","clientWidth","clientHeight","tnSetup","onConnect","onDisconnect","onAutoreconnectIteration","fbPush","usePublicVapidKey","messagingVapidKey","serviceWorker","register","reg","useServiceWorker","postMessage","setDeviceToken","parsedNav","expires","setAuthToken","connect","tab","readTimer","readTimerCallback","setHumanLanguage","enableLogging","mobile","onupdatefound","installingWorker","installing","onstatechange","controller","newTopicTabSelected","isConnected","getServerInfo","ver","sec","prom","reconnectCountdown","timeLeft","seconds","secondsToTime","reconnect","isAuthenticated","promise","getAuthToken","loginBasic","loginToken","onContactUpdate","getCurrentUserID","withDesc","withCred","disconnect","setUrlSidePanel","isPresencer","archived","isArchived","play","foundContacts","merged","updated","prepareSearchableContacts","receivedTimer","noteRecv","fnd","getFndTopic","withSub","s","setMeta","isTopicOnline","getTopicAccessMode","isP2P","am","updateWant","login_","password_","public_","cred_","tags_","createAccountBasic","updateAccountBasic","getCurrentLogin","on","onTokenRefresh","onMessage","payload","enabled","requestPermission","deleteToken","getToken","refreshedToken","delCredential","basicNavigator","isTopicCached","newGroupTopicName","oldName","newName","permissions","updateGiven","delCurrentUser","publish","self_blocked","subscribed","confirmText","rejectText","invite","requestResetAuthSecret","newPassword","str","btoa","atob","base64ReEncode","onAddMember","handleManageGroupMembers","hl","languages","baseLanguage","allMessages","IntlProvider","textComponent"],"mappings":"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","file":"index.prod.js","sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var __WEBPACK_NAMESPACE_OBJECT__ = React;","var __WEBPACK_NAMESPACE_OBJECT__ = ReactDOM;","var __WEBPACK_NAMESPACE_OBJECT__ = ReactIntl;","var __WEBPACK_NAMESPACE_OBJECT__ = firebase;","var __WEBPACK_NAMESPACE_OBJECT__ = Tinode;","var __WEBPACK_NAMESPACE_OBJECT__ = firebase.messaging;","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Alert extends React.PureComponent {\n  render() {\n    return this.props.visible ?\n      <div className=\"alert-container\">\n        <div className=\"alert\">\n          <div className=\"title\">{this.props.title}</div>\n          <div className=\"content\">{this.props.content}</div>\n          <div className=\"dialog-buttons\">\n            {this.props.onReject ?\n              <button className=\"outline\" onClick={this.props.onReject}>\n                {this.props.reject || <FormattedMessage id=\"button_cancel\" />}\n              </button>\n              :\n              null\n            }\n            <button className=\"blue\" onClick={this.props.onConfirm}>\n              {this.props.confirm || <FormattedMessage id=\"button_ok\" />}\n            </button>\n          </div>\n        </div>\n      </div>\n    :\n    null;\n  }\n};\n","// This is a generated file. Don't edit.\n\nexport const PACKAGE_VERSION = \"0.16.10\";\n","import { PACKAGE_VERSION } from './version.js';\n\n// Name of this application, used in the User-Agent.\nexport const APP_NAME = 'TinodeWeb/' + (PACKAGE_VERSION || '0.16');\n\n// API key. Use https://github.com/tinode/chat/tree/master/keygen to generate your own\nexport const API_KEY = 'AQEAAAABAAD_rAp4DJh05a1HAwFT3A6K';\n\n// The array of possible hosts to connect to.\nexport const KNOWN_HOSTS = {hosted: 'web.tinode.co', local: 'localhost:6060'};\n\n// Default host name and port to connect to.\nexport const DEFAULT_HOST = KNOWN_HOSTS.hosted;\n\n// Enable console logging.\nexport const LOGGING_ENABLED = true;\n\n// Minimum time between two keypress notifications, milliseconds.\nexport const KEYPRESS_DELAY = 3*1000;\n// Delay before sending a {note} for reciving a message, milliseconds.\nexport const RECEIVED_DELAY = 500;\n// Delay before sending a read notification, milliseconds.\nexport const READ_DELAY = 1000;\n\n// The shortest allowed tag length. Matches the value on the server.\nexport const MIN_TAG_LENGTH = 2;\n// The greatest allowed tag length. Matches the value on the server.\nexport const MAX_TAG_LENGTH = 96;\n// The maximum number of tags allowed. Matches the value on the server.\nexport const MAX_TAG_COUNT = 16;\n\n// Access mode for P2P subscriptions initiated by the current user.\nexport const DEFAULT_P2P_ACCESS_MODE = 'JRWPS';\n// Access mode for new group topics created by the current user.\nexport const NEW_GRP_ACCESS_MODE = 'JRWPSAO';\n// Access mode for a channel.\nexport const CHANNEL_ACCESS_MODE = 'JR';\n\n// Access mode for no access.\nexport const NO_ACCESS_MODE = 'N';\n\n// Mediaquery breakpoint between desktop and mobile, in px. Should match the value\n// in @media (max-size: 640px) in base.css\nexport const MEDIA_BREAKPOINT = 640;\n// Size of css 'rem' unit in pixels. Default 1rem = 10pt = 13px.\nexport const REM_SIZE = 13;\n\n// Size of the avatar image: When an avatar image is uploaded, it's resized to\n// a square of this size.\nexport const AVATAR_SIZE = 128;\n\n// Size of the broken_image shown in MessagesView\nexport const BROKEN_IMAGE_SIZE = 32;\n\n// Number of chat messages to fetch in one call.\nexport const MESSAGES_PAGE = 24;\n\n// Default maximum in-band (included directly into the message) attachment size which fits into\n// a message of 256K in size. The actual binary size of the attachment should be smaller due to\n// base64 encoding expansion and some overhead, for instance 1024 bytes.\n// Increase this limit to a greater value in production, if desired. Also increase\n// max_message_size in the server config.\nexport const MAX_INBAND_ATTACHMENT_SIZE = 262144;\n\n// Absolute maximum attachment size to be used with the server = 8MB. Increase to\n// something like 100MB in production.\nexport const MAX_EXTERN_ATTACHMENT_SIZE = 1 << 23;\n\n// Maximum allowed linear dimension of an inline image in pixels. Larer images will be shrunk\n// to make the larger dimension fit under this size. You may want to adjust it to 1600 or\n// 2400 for production.\nexport const MAX_IMAGE_DIM = 1024;\n\n// Linear dimensions of image preview: shrink image under this size for previews.\nexport const IMAGE_PREVIEW_DIM = 64;\n\n// Maximum number of online users to be shown in a topic title bar. Others will be\n// hidden under \"+X more\"\nexport const MAX_ONLINE_IN_TOPIC = 4;\n\n// Maximum length of user name, topic title, and private comment.\nexport const MAX_TITLE_LENGTH = 60;\n\n// Link for \"Contact Us\".\nexport const LINK_CONTACT_US = 'email:info@tinode.co';\n\n// Link to Privacy Policy.\nexport const LINK_PRIVACY_POLICY = 'https://tinode.co/privacy.html';\n\n// Link to Terms of Service.\nexport const LINK_TERMS_OF_SERVICE = 'https://tinode.co/terms.html';\n","// Context Menu: popup/dropdown menu.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { injectIntl, defineMessages } from 'react-intl';\n\nimport { REM_SIZE } from '../config.js';\nimport HashNavigation from '../lib/navigation.js';\n\nconst messages = defineMessages({\n  info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  },\n  clear_messages: {\n    id: 'menu_item_clear_messages',\n    defaultMessage: 'Clear messages',\n    description: 'Delete all messages'\n  },\n  clear_for_all: {\n    id: 'menu_item_clear_messages_for_all',\n    defaultMessage: 'Clear for All',\n    description: 'Delete all message(s) for all members'\n  },\n  'delete': {\n    id: 'menu_item_delete',\n    defaultMessage: 'Delete',\n    description: 'Delete selected messages'\n  },\n  delete_for_all: {\n    id: 'menu_item_delete_for_all',\n    defaultMessage: 'Delete for All',\n    description: 'Delete selected message(s) for all members'\n  },\n  send_retry: {\n    id: 'menu_item_send_retry',\n    defaultMessage: 'Retry',\n    description: 'Retry sending message'\n  },\n  mute: {\n    id: 'menu_item_mute',\n    defaultMessage: 'Mute',\n    description: 'Turn off notifications'\n  },\n  unmute: {\n    id: 'menu_item_unmute',\n    defaultMessage: 'Unmute',\n    description: 'Turn notifications on'\n  },\n  topic_delete: {\n    id: 'menu_item_delete_topic',\n    defaultMessage: 'Delete',\n    description: 'Delete entire topic'\n  },\n  topic_delete_warning: {\n    id: 'topic_delete_warning',\n    defaultMessage: 'Are you sure you want to delete this conversation?',\n    description: 'Alert warning when deleting entire topic'\n  },\n  unblock: {\n    id: 'menu_item_unblock',\n    defaultMessage: 'Unblock',\n    description: 'Unblock topic or user'\n  },\n  // Generic string suitable for either topic or user.\n  block: {\n    id: 'menu_item_block',\n    defaultMessage: 'Block',\n    description: 'Block topic or user'\n  },\n  topic_block_warning: {\n    id: 'topic_block_warning',\n    defaultMessage: 'Are you sure you want to block this conversation?',\n    description: 'Alert warning when blocking a topic.'\n  },\n  member_delete: {\n    id: 'menu_item_member_delete',\n    defaultMessage: 'Remove',\n    description: 'Remove user from topic'\n  },\n  archive: {\n    id: 'menu_item_archive_topic',\n    defaultMessage: 'Archive',\n    description: 'Move topic from the list of active chats to archive'\n  }\n});\n\nclass ContextMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const {formatMessage} = props.intl;\n\n    this.handlePageClick = this.handlePageClick.bind(this);\n    this.handleEscapeKey = this.handleEscapeKey.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n\n    // Preconfigured menu items.\n    this.MenuItems = {\n      'topic_info': {\n        id: 'topic_info',\n        title: formatMessage(messages.info),\n        handler: null\n      },\n      'messages_clear': {\n        id: 'messages_clear',\n        title: formatMessage(messages.clear_messages),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.menu_item_clear_messages), // title\n            formatMessage({id: 'clear_messages_warning'}), // content\n            (() => { this.deleteMessages(true, false, params, errorHandler); }), // onConfirm\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'messages_clear_hard': {\n        id: 'messages_clear_hard',\n        title: formatMessage(messages.clear_for_all),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.menu_item_clear_messages_for_all), // title\n            formatMessage({id: 'delete_messages_warning'}), // content\n            (() => { return this.deleteMessages(true, true, params, errorHandler); }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'message_delete': {\n        id: 'message_delete',\n        title: formatMessage(messages.delete),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, false, params, errorHandler);\n        }\n      },\n      'message_delete_hard': {\n        id: 'message_delete_hard',\n        title: formatMessage(messages.delete_for_all),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, true, params, errorHandler);\n        }\n      },\n      'menu_item_send_retry': {\n        id: 'menu_item_send_retry',\n        title: formatMessage(messages.send_retry),\n        handler: (params, errorHandler) => {\n          return this.retryMessage(params, errorHandler);\n        }\n      },\n      'topic_unmute': {\n        id: 'topic_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'topic_mute': {\n        id: 'topic_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'topic_unblock': {\n        id: 'topic_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n      'topic_block': {\n        id: 'topic_block',\n        title: formatMessage(messages.block),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.menu_item_block), // title\n            formatMessage(messages.topic_block_warning), // content\n            (() => {\n              return this.topicPermissionSetter('-JP', params, errorHandler).then((ctrl) => {\n                this.props.onTopicRemoved(params.topicName);\n                return ctrl;\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_delete': {\n        id: 'topic_delete',\n        title: formatMessage(messages.topic_delete),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.menu_item_delete_topic), // title\n            formatMessage(messages.topic_delete_warning), // content\n            (() => {\n              const topic = this.props.tinode.getTopic(params.topicName);\n              if (!topic) {\n                console.log(\"Topic not found: \", params.topicName);\n                return;\n              }\n              return topic.delTopic(true).catch((err) => {\n                if (errorHandler) {\n                  errorHandler(err.message, 'err');\n                }\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_archive': {\n        id: 'topic_archive',\n        title: formatMessage(messages.archive),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic) {\n            console.log(\"Topic not found: \", params.topicName);\n            return;\n          }\n          return topic.archive(true).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      // menu_item_edit_permissions is defined elsewhere.\n      'permissions': {\n        id: 'permissions',\n        title: formatMessage({id: 'menu_item_edit_permissions'}),\n        handler: null\n      },\n      'member_delete': {\n        id: 'member_delete',\n        title: formatMessage(messages.member_delete),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic || !params.user) {\n            console.log(\"Topic or user not found: '\" + params.topicName + \"', '\" + params.user + \"'\");\n            return;\n          }\n          return topic.delSubscription(params.user).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      'member_mute': {\n        id: 'member_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'member_unmute': {\n        id: 'member_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'member_block': {\n        id: 'member_block',\n        title: formatMessage(messages.block),\n        handler: this.topicPermissionSetter.bind(this, '-JP')\n      },\n      'member_unblock': {\n        id: 'member_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handlePageClick, false);\n    document.addEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handlePageClick, false);\n    document.removeEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  handlePageClick(e) {\n    if (ReactDOM.findDOMNode(this).contains(e.target)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n  }\n\n  handleEscapeKey(e) {\n    if (e.keyCode === 27) {\n      this.props.hide();\n    }\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n    let item = this.props.items[e.currentTarget.dataset.id];\n    if (typeof item == 'string') {\n      item = this.MenuItems[item];\n    }\n\n    if (!item) {\n      console.log(\"Invalid menu item ID\", e.currentTarget.dataset.id);\n    } else {\n      this.props.onAction(\n        item.id,\n        item.handler(this.props.params, this.props.onError),\n        this.props.params);\n    }\n  }\n\n  // Menu Actions\n\n  deleteMessages(all, hard, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found: \", params.topicName);\n      return;\n    }\n\n    // We don't know if the message is still pending (e.g. attachment is being uploaded),\n    // so try cancelling first. No harm if we can't cancel.\n    // The message can be cancelled if transmission to the server has not\n    // started yet or if the message send has failed.\n    if (!all && topic.cancelSend(params.seq)) {\n      return;\n    }\n    // Can't cancel. Delete instead.\n    const promise = all ?\n      topic.delMessagesAll(hard) :\n      topic.delMessagesList([params.seq], hard);\n\n    return promise.catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Retries sending failed message.\n  retryMessage(params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    // Remove the existing message entry.\n    if (!topic || !topic.flushMessage(params.seq)) {\n      return;\n    }\n    const msg = topic.createMessage(params.content, false);\n    return topic.publishDraft(msg).catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Function is used by context menu to set permissions.\n  topicPermissionSetter(mode, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found\", params.topicName);\n      return;\n    }\n\n    let result = topic.updateMode(params.user, mode);\n    if (errorHandler) {\n      result = result.catch((err) => {\n        errorHandler(err.message, 'err');\n      });\n    }\n    return result;\n  }\n\n  render() {\n    let count = 0;\n    let menu = [];\n    this.props.items.map((item) => {\n      if (typeof item == 'string') {\n        item = this.MenuItems[item];\n      }\n      if (item && item.title) {\n        menu.push(\n          item.title == '-' ?\n            <li className=\"separator\" key={count} />\n            :\n            <li onClick={this.handleClick} data-id={count} key={count}>{item.title}</li>\n        );\n      }\n      count++;\n    });\n\n    // Ensure that menu is inside the app-container.\n    const hSize = 12 * REM_SIZE;\n    const vSize = REM_SIZE * (0.7 + menu.length * 2.5);\n    const left = (this.props.bounds.right - this.props.clickAt.x < hSize) ?\n        (this.props.clickAt.x - this.props.bounds.left - hSize) :\n        (this.props.clickAt.x - this.props.bounds.left);\n    const top = (this.props.bounds.bottom - this.props.clickAt.y < vSize) ?\n        (this.props.clickAt.y - this.props.bounds.top - vSize) :\n        (this.props.clickAt.y - this.props.bounds.top);\n\n    const position = {\n      left: left + 'px',\n      top: top + 'px'\n    };\n\n    return (\n      <ul className=\"menu\" style={position}>\n        {menu}\n      </ul>\n    );\n  }\n}\n\nexport default injectIntl(ContextMenu);\n","// Short representation of time in the past.\nexport function shortDateFormat(then, locale) {\n  locale = locale || window.navigator.userLanguage || window.navigator.language;\n  const now = new Date();\n  if (then.getFullYear() == now.getFullYear()) {\n    if (then.getMonth() == now.getMonth() && then.getDate() == now.getDate()) {\n\t    return then.toLocaleTimeString(locale, {hour12: false, hour: '2-digit', minute: '2-digit'});\n    } else {\n\t    return then.toLocaleDateString(locale,\n        {hour12: false, month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit'});\n    }\n  }\n  return then.toLocaleDateString(locale,\n    {hour12: false, year: 'numeric', month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit'});\n}\n\n// Convert seconds to minutes:seconds, i.e. 156 sec -> 2:36.\nexport function secondsToTime(seconds) {\n  const min = Math.floor(seconds / 60);\n  let sec = seconds % 60;\n  sec = sec < 10 ? `0${sec}` : sec;\n  return `${min}:${sec}`;\n}\n\n// Convert a number of bytes to human-readable format.\nexport function bytesToHumanSize(bytes) {\n  if (!bytes || bytes == 0) {\n    return '0 Bytes';\n  }\n\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n  const bucket = Math.min(Math.floor(Math.log2(bytes) / 10) | 0, sizes.length-1);\n  const count = bytes / Math.pow(1024, bucket);\n  const round = bucket > 0 ? (count < 3 ? 2 : (count < 30 ? 1 : 0)) : 0;\n  return count.toFixed(round) + ' ' + sizes[bucket];\n}\n\n// Get 32 bit integer hash value for a string. Ideally it should produce the same value\n// as Java's String#hash().\nexport function stringHash(value) {\n  let hash = 0;\n  value = '' + value;\n  for (let i = 0; i < value.length; i++) {\n    hash = ((hash << 5) - hash) + value.charCodeAt(i);\n    hash = hash & hash; // Convert to 32bit integer\n  }\n  return hash;\n}\n","import React from 'react';\n\nimport Tinode from 'tinode-sdk';\n\nimport { stringHash } from '../lib/strformat.js';\n\nexport default class LetterTile extends React.PureComponent {\n  render() {\n    let avatar;\n    if (this.props.avatar === true) {\n      const isGroup = (Tinode.topicType(this.props.topic) == 'grp');\n      const iconColor = (isGroup ? 'light-color' : 'dark-color')\n        + (Math.abs(stringHash(this.props.topic)) % 16);\n      if (this.props.topic && this.props.title && this.props.title.trim()) {\n        const letter = this.props.title.trim().charAt(0);\n        const className = 'lettertile ' + iconColor;\n        avatar = (<div className={className}><div>{letter}</div></div>)\n      } else {\n        const className = 'material-icons ' + iconColor;\n        avatar = isGroup ?\n          <i className={className}>group</i> : <i className={className}>person</i>;\n      }\n    } else if (this.props.avatar) {\n      // If avatar image is invalid, show a placeholder.\n      avatar = <img className=\"avatar\" alt=\"avatar\" src={this.props.avatar}\n        onError={(e)=>{e.target.onerror = null; e.target.src=\"/img/broken_image.png\"}} />;\n    } else {\n      avatar = null;\n    }\n    return avatar;\n  }\n}\n","// File and image helper functions.\nimport { MAX_INBAND_ATTACHMENT_SIZE, MAX_IMAGE_DIM } from '../config.js';\nimport { bytesToHumanSize } from './strformat.js'\n\n// Supported image MIME types and corresponding file extensions.\nexport const SUPPORTED_IMAGE_FORMATS = ['image/jpeg', 'image/gif', 'image/png', 'image/svg', 'image/svg+xml'];\nexport const MIME_EXTENSIONS         = ['jpg',        'gif',       'png',       'svg',       'svg'];\n\n// Make a data URL from public.photo\nexport function makeImageUrl(photo) {\n  return (photo && photo.type && photo.data) ?\n    'data:image/' + photo.type + ';base64,' + photo.data : null;\n}\n\n// Calculate linear dimensions for scaling image down to fit under a certain size.\n// Returns an object which contains destination sizes, source sizes, and offsets\n// into source (when making square images).\nexport function fitImageSize(width, height, maxWidth, maxHeight, forceSquare) {\n  // Sanitize input\n  width = width | 0;\n  height = height | 0;\n  maxWidth = maxWidth | 0;\n  maxHeight = maxHeight | 0;\n\n  if (width <= 0 || height <= 0 || maxWidth <= 0 || maxHeight <= 0) {\n    return null;\n  }\n\n  if (forceSquare) {\n    maxWidth = maxHeight = Math.min(maxWidth, maxHeight);\n  }\n\n  let scale = Math.min(\n    Math.min(width, maxWidth) / width,\n    Math.min(height, maxHeight) / height\n  );\n\n  let size = {\n    dstWidth: (width * scale) | 0,\n    dstHeight: (height * scale) | 0,\n  };\n\n  if (forceSquare) {\n    // Also calculate parameters for making the image square.\n    size.dstWidth = size.dstHeight = Math.min(size.dstWidth, size.dstHeight);\n    size.srcWidth = size.srcHeight = Math.min(width, height);\n    size.xoffset = ((width - size.srcWidth) / 2) | 0;\n    size.yoffset = ((height - size.srcWidth) / 2) | 0;\n  } else {\n    size.xoffset = size.yoffset = 0;\n    size.srcWidth = width;\n    size.srcHeight = height;\n  }\n  return size;\n}\n\n// Ensure file's extension matches mime content type\nexport function fileNameForMime(fname, mime) {\n  const idx = SUPPORTED_IMAGE_FORMATS.indexOf(mime);\n  if (idx < 0 || !fname) {\n    // Unknown mime or empty name.\n    return fname;\n  }\n  const ext = MIME_EXTENSIONS[idx];\n\n  const at = fname.lastIndexOf('.');\n  if (at >= 0) {\n    fname = fname.substring(0, at);\n  }\n  return fname + '.' + ext;\n}\n\n// Scale uploaded image to fit under certain dimensions and byte size, optionally constraining to a square.\n// On success calls onSuccess callback with the scaled image as Blob.\nexport function imageScaled(fileOrBlob, maxWidth, maxHeight, maxSize, forceSquare, onSuccess, onError) {\n  const img = new Image();\n  img.crossOrigin = 'Anonymous';\n  img.onerror = function(err) {\n    onError(\"Image format unrecognized\");\n  }\n  img.onload = async function() {\n    // Once the image is loaded, the URL is no longer needed.\n    URL.revokeObjectURL(img.src);\n\n    // Calculate the desired image dimensions.\n    const dim = fitImageSize(this.width, this.height, maxWidth, maxHeight, forceSquare);\n    if (!dim) {\n      onError(\"Invalid image\");\n      return;\n    }\n    let canvas = document.createElement('canvas');\n    canvas.width = dim.dstWidth;\n    canvas.height = dim.dstHeight;\n    let ctx = canvas.getContext('2d');\n    ctx.imageSmoothingEnabled = true;\n    ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n      0, 0, dim.dstWidth, dim.dstHeight);\n\n    const mime = SUPPORTED_IMAGE_FORMATS.indexOf(fileOrBlob.type) < 0 ? 'image/jpeg' : fileOrBlob.type;\n    // Generate blob to check size of the image.\n    let blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    if (!blob) {\n      onError(\"Unsupported image format\");\n      return;\n    }\n\n    // Ensure the image is not too large. Shrink the image keeping the aspect ratio.\n    // Do nothing if maxsize is <= 0.\n    while (maxSize > 0 && blob.length > maxSize) {\n      dim.dstWidth = (dim.dstWidth * 0.70710678118) | 0;\n      dim.dstHeight = (dim.dstHeight * 0.70710678118) | 0;\n      canvas.width = dim.dstWidth;\n      canvas.height = dim.dstHeight;\n      ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n        0, 0, dim.dstWidth, dim.dstHeight);\n      blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    }\n\n    canvas = null;\n    onSuccess(blob, mime, dim.dstWidth, dim.dstHeight, fileNameForMime(fileOrBlob.name, mime));\n  };\n  img.src = URL.createObjectURL(fileOrBlob);\n}\n\n// Convert File to base64 string.\nexport function fileToBase64(file, onSuccess) {\n  const reader = new FileReader();\n  reader.addEventListener('load', function() {\n    onSuccess(file.type, reader.result.split(',')[1], file.name);\n  });\n  reader.readAsDataURL(file);\n}\n\n// Convert Blob to base64 string.\nexport function blobToBase64(blob, onSuccess) {\n  const reader = new FileReader();\n  reader.addEventListener('load', function() {\n    onSuccess(blob.type, reader.result.split(',')[1]);\n  });\n  reader.readAsDataURL(blob);\n}\n\n// File pasted from the clipboard. It's either an inline image or a file attachment.\n// FIXME: handle large files out of band.\nexport function filePasted(event, onImageSuccess, onAttachmentSuccess, onError) {\n  var items = (event.clipboardData || event.originalEvent.clipboardData || {}).items;\n  for (var i in items) {\n    var item = items[i];\n    if (item.kind === 'file') {\n      var file = item.getAsFile();\n      if (!file) {\n        console.log(\"Failed to get file object from pasted file item\", item.kind, item.type);\n        continue;\n      }\n      if (file.type && file.type.split('/')[0] == 'image') {\n        // Handle inline image\n        if (file.size > MAX_INBAND_ATTACHMENT_SIZE || SUPPORTED_IMAGE_FORMATS.indexOf(file.type) < 0) {\n          imageFileScaledToBase64(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, false, onImageSuccess, onError);\n        } else {\n          imageFileToBase64(file, onImageSuccess, onError);\n        }\n      } else {\n        // Handle file attachment\n        fileToBase64(file, onAttachmentSuccess, onError)\n      }\n      // Indicate that the pasted data contains a file.\n      return true;\n    }\n  }\n  // No file found.\n  return false;\n}\n\n// Get mime type from data URL header.\nexport function getMimeType(header) {\n  var mime = /^data:(image\\/[-+a-z0-9.]+);base64/.exec(header);\n  return (mime && mime.length > 1) ? mime[1] : null;\n}\n\n// Given length of a binary object in bytes, calculate the length after\n// base64 encoding.\nexport function base64EncodedLen(n) {\n  return Math.floor((n + 2) / 3) * 4;\n}\n\n// Given length of a base64-encoded object, calculate decoded size of the\n// pbject in bytes.\nexport function base64DecodedLen(n) {\n  return Math.floor(n / 4) * 3;\n}\n\n// Re-encode string to standard base64 encoding with padding.\n// The string may be base64-URL encoded without the padding.\nexport function base64ReEncode(str) {\n  if (str) {\n    str = str.replace(/-/g, '+').replace(/_/g, '/');\n    try {\n      str = btoa(atob(str));\n    } catch(err) {\n      console.log(\"Failed to base64 re-encode string.\", err);\n      str = null;\n    }\n  }\n  return str;\n}\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\n\nimport { AVATAR_SIZE, MAX_EXTERN_ATTACHMENT_SIZE } from '../config.js';\nimport { imageScaled, blobToBase64, makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class AvatarUpload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dataUrl: props.avatar\n    };\n\n    this.handleFileUpload = this.handleFileUpload.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.avatar != prevProps.avatar) {\n      this.setState({dataUrl: this.props.avatar})\n    }\n  }\n\n  handleFileUpload(e) {\n    imageScaled(e.target.files[0], AVATAR_SIZE, AVATAR_SIZE, MAX_EXTERN_ATTACHMENT_SIZE, true,\n      // Image successfully scaled and converted.\n      (mime, blob) => {\n        // Convert blob to base64-encoded bits.\n        blobToBase64(blob, (unused, base64bits) => {\n          const du = makeImageUrl({data: base64bits, type: mime});\n          this.setState({dataUrl: du});\n          this.props.onImageChanged(du);\n        });\n      },\n      // Failure\n      (err) => {\n        this.props.onError(err, 'err');\n      });\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  render() {\n    // Randomize id value in case more than one AvatarUpload is shown\n    // at the same time.\n    const randId = 'file-input-avatar-' + (Math.random() + '').substr(2);\n    const className = 'avatar-upload' + (this.props.readOnly ? ' read-only' : '');\n    return (\n      <div className={className}>\n        {this.props.readOnly || !this.state.dataUrl ?\n          null :\n          <a href=\"#\" className=\"clear-avatar\" onClick={(e) => {e.preventDefault(); this.props.onImageChanged(null);}}>\n            <i className=\"material-icons\">clear</i>\n          </a>}\n        {this.state.dataUrl ?\n          <img src={this.state.dataUrl} className=\"preview\" /> :\n          this.props.readOnly && this.props.uid ?\n            <div className=\"avatar-box\">\n              <LetterTile\n                avatar={true}\n                topic={this.props.uid}\n                title={this.props.title} />\n            </div>\n            :\n            <div className=\"blank\">{AVATAR_SIZE}&times;{AVATAR_SIZE}</div>}\n        {this.props.readOnly ? null :\n          <input type=\"file\" id={randId} className=\"inputfile hidden\"\n            accept=\"image/*\" onChange={this.handleFileUpload} />}\n        {this.props.readOnly ? null :\n        <label htmlFor={randId} className=\"round\">\n          <i className=\"material-icons\">file_upload</i>\n        </label>}\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\n/* BEGIN CheckBox: styled checkbox */\nexport default class CheckBox extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange() {\n    this.props.onChange(this.props.name, !this.props.checked);\n  }\n\n  render() {\n    return (\n      this.props.onChange ? (\n        this.props.checked ?\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box</i> :\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box_outline_blank</i>\n        ) : (\n          this.props.checked ?\n            <i className=\"material-icons\">check_box</i> :\n            <i className=\"material-icons\">check_box_outline_blank</i>\n        )\n    );\n  }\n}\n/* END CheckBox */\n","import React from 'react';\n\nconst icon_mapping = {'muted': 'notifications_off', 'banned': 'block'};\n\n/* Contact's labels: [you], or icons [muted], [blocked] */\nexport default class ContactBadges extends React.PureComponent {\n    render() {\n      let badges = null;\n      if (this.props.badges && this.props.badges.length > 0) {\n        badges = [];\n        this.props.badges.map(function(b) {\n          if (b.icon) {\n            badges.push(<i className=\"material-icons as-badge\" key={b.key || b.icon}>{icon_mapping[b.icon]}</i>);\n          } else {\n            const style = 'badge' + (b.color ? ' ' + b.color : '');\n            badges.push(<span className={style} key={b.key || b.name}>{b.name}</span>);\n          }\n        });\n        return <>{badges}</>;\n      }\n      return null;\n    }\n};\n","// The counter of unread messages in the topic.\nimport React from 'react';\n\nexport default class UnreadBadge extends React.PureComponent {\n  render() {\n    return (this.props.count > 0 ?\n      <span className=\"unread\">{this.props.count > 9 ? \"9+\" : this.props.count}</span>\n      : null);\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport LetterTile from './letter-tile.jsx';\nimport ContactBadges from './contact-badges.jsx';\nimport UnreadBadge from './unread-badge.jsx';\n\nexport default class Contact extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.props.onSelected) {\n      // Index this.props.index is used by GroupManager.\n      this.props.onSelected(this.props.item, this.props.index);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.props.item, y: e.pageY, x: e.pageX });\n  }\n\n  render() {\n    let title = this.props.title;\n    if (!title) {\n      title = <i><FormattedMessage id=\"unnamed_topic\" /></i>;\n    } else if (title.length > 30) {\n      // FIXME: this is probably wrong for RTL languages.\n      title = title.substring(0, 28) + '...';\n    }\n    const online = this.props.now ? 'online' : 'offline';\n    const avatar = this.props.avatar ? this.props.avatar : true;\n    const badges = this.props.badges ? this.props.badges.slice() : [];\n    const icon_badges = [];\n    if (this.props.acs) {\n      if (this.props.showMode) {\n        badges.push({name: this.props.acs.getMode(), key: 'mode'});\n      }\n      if (this.props.acs.isMuted()) {\n        icon_badges.push({icon: 'muted'});\n      }\n      if (!this.props.acs.isJoiner()) {\n        icon_badges.push({icon: 'banned'});\n      }\n    }\n\n    return (\n      <li className={!this.props.showCheckmark && this.props.selected ? \"selected\" : null}\n        onClick={this.handleClick}>\n        <div className=\"avatar-box\">\n          <LetterTile\n            avatar={avatar}\n            title={this.props.title}\n            topic={this.props.item} />\n          {this.props.showOnline ? <span className={online} /> :\n            (this.props.showCheckmark && this.props.selected ?\n            <i className=\"checkmark material-icons\">check_circle</i>\n            : null)}\n        </div>\n        <div className=\"text-box\">\n          <div><span className=\"contact-title\">{title}</span>\n            {this.props.isChannel ? <img src=\"/img/channel.png\" className=\"channel\" alt=\"channel\" /> : null}\n            <UnreadBadge count={this.props.unread} /><ContactBadges badges={icon_badges} />\n          </div>\n          {this.props.comment ? <div className=\"contact-comment\">{this.props.comment}</div> : null}\n          <span><ContactBadges badges={badges} /></span>\n        </div>\n        {this.props.showContextMenu ?\n          <span className=\"menuTrigger\">\n            <a href=\"#\" onClick={this.handleContextClick}>\n              <i className=\"material-icons\">expand_more</i>\n            </a>\n          </span> : null}\n      </li>\n    );\n  }\n};\n","// A panel included into a list of contacts with an action text.\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\n\nclass ContactAction extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.onAction(this.props.action);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <li onClick={this.handleClick} className=\"action\">\n        <div className=\"action-text\">{formatMessage(this.props.title, this.props.values)}</div>\n      </li>\n    );\n  }\n};\n\nexport default injectIntl(ContactAction);\n","// ContactList: component for showing a list of contacts,\n// such as a list of group members in a group chat.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport Contact from './contact.jsx';\nimport ContactAction from './contact-action.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nconst messages = defineMessages({\n  badge_you: {\n    id: 'badge_you',\n    defaultMessage: 'you',\n    description: 'Badge for indicating the current user'\n  },\n  badge_owner: {\n    id: 'badge_owner',\n    defaultMessage: 'owner',\n    description: 'Badge for indicating the owner'\n  }\n});\n\nclass ContactList extends React.Component {\n  render() {\n    const {formatMessage} = this.props.intl;\n    const showCheckmark = Array.isArray(this.props.topicSelected);\n    const contactNodes = [];\n    let contactsCount = 0;\n    if (this.props.contacts && this.props.contacts.length > 0) {\n      this.props.contacts.map((c) => {\n        if (c.action) {\n          // Action item\n          contactNodes.push(\n            <ContactAction\n              title={c.title} action={c.action} values={c.values}\n              key={c.action}\n              onAction={this.props.onAction}\n              />);\n        } else {\n          // Normal contact\n          const key = this.props.showMode ? c.user : (c.topic || c.user);\n          // If filter function is provided, filter out the items\n          // which don't satisfy the condition.\n          if (this.props.filterFunc && this.props.filter) {\n            let content = [key];\n            if (c.private && c.private.comment) {\n              content.push(('' + c.private.comment).toLowerCase());\n            }\n            if (c.public && c.public.fn) {\n              content.push(('' + c.public.fn).toLowerCase());\n            }\n            if (!this.props.filterFunc(this.props.filter, content)) {\n              return;\n            }\n          }\n\n          const isChannel = Tinode.isChannelTopicName(key);\n          const selected = showCheckmark ?\n            (this.props.topicSelected.indexOf(key) > -1) :\n            (this.props.topicSelected === key);\n          const badges = [];\n          if (this.props.showMode) {\n            if (key == this.props.myUserId) {\n              badges.push({name: formatMessage(messages.badge_you), color: 'green'});\n            }\n            if (c.acs && c.acs.isOwner()) {\n              badges.push({name: formatMessage(messages.badge_owner), color: 'blue'});\n            }\n          }\n          const comment = Array.isArray(c.private) ?\n            c.private.join(',') : (c.private ? c.private.comment : null);\n\n          contactNodes.push(\n            <Contact\n              title={c.public ? c.public.fn : null}\n              avatar={makeImageUrl(c.public ? c.public.photo : null)}\n              comment={comment}\n              unread={this.props.showUnread ? c.unread : 0}\n              now={c.online && this.props.connected}\n              acs={c.acs}\n              showMode={this.props.showMode}\n              badges={badges}\n              showCheckmark={showCheckmark}\n              selected={selected}\n              showOnline={this.props.showOnline && !isChannel}\n              isChannel={isChannel}\n              onSelected={this.props.onTopicSelected}\n              showContextMenu={this.props.showContextMenu}\n              item={key}\n              index={contactNodes.length}\n              key={key} />\n          );\n          contactsCount ++;\n        }\n      }, this);\n    }\n\n    return (\n      <div className={this.props.noScroll ? null : \"scrollable-panel\"}>\n        {contactsCount == 0 ?\n          <div className=\"center-medium-text\"\n            dangerouslySetInnerHTML={{__html: this.props.emptyListMessage}} />\n          :\n          null\n        }\n        {contactNodes.length > 0 ?\n          <ul className=\"contact-box\">\n            {contactNodes}\n          </ul>\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ContactList);\n","// The X menu to be displayed in title bars.\nimport React from 'react';\n\nexport default class MenuCancel extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n        <i className=\"material-icons\">close</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nimport MenuCancel from './menu-cancel.jsx';\n\nexport default class ErrorPanel extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      show: false,\n    };\n\n    this.hide = this.hide.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.level !== this.props.level) {\n      this.setState({\n        show: !(!this.props.level)\n      });\n    }\n  }\n\n  hide() {\n    this.setState({show: false});\n    if (this.props.onClearError) {\n      this.props.onClearError();\n    }\n  }\n\n  render() {\n    const icons = {err: 'error', warn: 'warning', info: 'info'}\n    const level = icons[this.props.level] || '';\n    const className = 'info-box ' + level;\n    return (\n      <div className={className}>\n        <div className=\"icon\"><i className=\"material-icons\">{level}</i></div>\n        <span>\n          {this.props.text}\n          {this.props.action ?\n            <>\n              &#32;<a href=\"#\"\n                style={{ whiteSpace: 'nowrap' }}\n                onClick={(e) => {e.preventDefault(); this.props.action();}}>\n                {this.props.actionText}\n              </a>\n            </>\n          : null}\n        </span>\n        <div className=\"cancel\"><MenuCancel onCancel={this.hide} /></div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\n\nexport default class Chip extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel(this.props.topic, this.props.index);\n  }\n\n  render() {\n    const title = this.props.title || this.props.topic;\n    const className = this.props.invalid ? 'chip invalid' : 'chip';\n    return (\n      <div className={className}>\n        {this.props.noAvatar ?\n          <span className=\"spacer\" /> :\n          <div className=\"avatar-box\">\n            <LetterTile\n              avatar={this.props.avatar || true}\n              topic={this.props.topic}\n              title={this.props.title} />\n          </div>\n        }\n        <span>{title}</span>\n        {this.props.onCancel && !this.props.required ?\n          <a href=\"#\" onClick={this.handleCancel} >&times;</a>\n          : <span className=\"spacer\" />}\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport Chip from './chip.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n/* BEGIN ChipInput: group membership widget */\nexport default class ChipInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = ChipInput.deriveStateFromProps(props);\n    this.state.input = '';\n    this.state.focused = false;\n\n    this.handleTextInput = this.handleTextInput.bind(this);\n    this.removeChipAt = this.removeChipAt.bind(this);\n    this.handleChipCancel = this.handleChipCancel.bind(this);\n    this.handleFocusGained = this.handleFocusGained.bind(this);\n    this.handleFocusLost = this.handleFocusLost.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  static deriveStateFromProps(props) {\n    return {\n      placeholder: props.chips ? '' : props.prompt,\n      sortedChips: ChipInput.sortChips(props.chips, props.staticMembers),\n      chipIndex: ChipInput.indexChips(props.chips)\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chips != this.props.chips ||\n      prevProps.staticMembers != this.props.staticMembers ||\n      prevProps.prompt != this.props.prompt) {\n      this.setState(ChipInput.deriveStateFromProps(this.props));\n    }\n    if (!prevState || this.props.chips.length > prevState.sortedChips.length) {\n      this.setState({input: ''});\n    }\n  }\n\n  // Map chip index to user name\n  static indexChips(chips) {\n    const index = {};\n    let count = 0;\n    chips.map((item) => {\n      index[item.user] = count;\n      count ++;\n    });\n    return index;\n  }\n\n  // Have non-removable chips appear before all other chips.\n  static sortChips(chips, keep) {\n    const required = [];\n    const normal = [];\n    chips.map((item) => {\n      if (keep && keep.includes(item.user)) {\n        required.push(item);\n      } else {\n        normal.push(item);\n      }\n    });\n    return required.concat(normal);\n  }\n\n  handleTextInput(e) {\n    this.setState({input: e.target.value});\n    if (this.props.filterFunc) {\n      this.props.filterFunc(e.target.value);\n    }\n  }\n\n  removeChipAt(idx) {\n    const removed = this.state.sortedChips[idx];\n    this.props.onChipRemoved(removed.user, this.state.chipIndex[removed.user]);\n  }\n\n  handleChipCancel(item, idx) {\n    this.removeChipAt(idx);\n  }\n\n  handleFocusGained() {\n    this.setState({focused: true});\n  }\n\n  handleFocusLost() {\n    this.setState({focused: false});\n    if (this.props.onFocusLost) {\n      this.props.onFocusLost(this.state.input);\n    }\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Backspace') {\n      if (this.state.input.length == 0 && this.state.sortedChips.length > 0) {\n        const at = this.state.sortedChips.length - 1;\n        if (this.state.sortedChips[at].user !== this.props.staticMembers) {\n          this.removeChipAt(at);\n        }\n      }\n    } else if (e.key === 'Enter') {\n      if (this.props.onEnter) {\n        this.props.onEnter(this.state.input);\n      }\n    } else if (e.key === 'Escape') {\n      if (this.props.onCancel) {\n        this.props.onCancel();\n      }\n    }\n  }\n\n  render() {\n    const chips = [];\n    let count = 0;\n    const staticMembers = this.props.staticMembers || [];\n    this.state.sortedChips.map((item) => {\n      chips.push(\n        <Chip\n          onCancel={this.handleChipCancel}\n          avatar={makeImageUrl(item.public ? item.public.photo : null)}\n          title={item.public ? item.public.fn : undefined}\n          noAvatar={this.props.avatarDisabled}\n          topic={item.user}\n          required={staticMembers.includes(item.user)}\n          invalid={item.invalid}\n          index={count}\n          key={item.user} />\n      );\n      count++;\n    });\n    const className = \"chip-input\" + (this.state.focused ? ' focused' : '');\n    return (\n      <div className={className}>\n        {chips}\n        <input type=\"text\"\n          placeholder={this.state.placeholder}\n          onChange={this.handleTextInput}\n          onFocus={this.handleFocusGained}\n          onBlur={this.handleFocusLost}\n          onKeyDown={this.handleKeyDown}\n          value={this.state.input}\n          autoFocus />\n      </div>\n    );\n  }\n};\n","// GroupMembers: control for managing a list of group members.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\nimport ContactList from './contact-list.jsx';\n\nconst messages = defineMessages({\n  no_contacts: {\n    id: 'no_contacts',\n    defaultMessage: 'You have no contacts :-(',\n    description: 'Shown in ContactsView when the user has no contacts'\n  },\n  contacts_not_found_short: {\n    id: 'contacts_not_found_short',\n    defaultMessage: \"No contacts match ''{query}''\",\n    description: 'Shown in ContactsView when search returned no results'\n  }\n});\n\nclass GroupManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Array of topic members\n      members: props.members,\n      index: GroupManager.indexMembers(props.members),\n      staticMembers: GroupManager.staticMembers(props.members, props.keepInitialMembers, props.requiredMember),\n      contactFilter: '',\n      noContactsMessage: props.intl.formatMessage(messages.no_contacts),\n      selectedContacts: GroupManager.selectedContacts(props.members)\n    };\n\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleMemberRemoved = this.handleMemberRemoved.bind(this);\n    this.handleContactFilter = this.handleContactFilter.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static indexMembers(members) {\n    let index = {};\n    members.map((m) => {\n      index[m.user] = {delta: 0, present: true}; // Delta: 0 unchanged, +1 added, -1 removed\n    });\n    return index;\n  }\n\n  static staticMembers(members, keepInitial, requiredMember) {\n    let stat = [];\n    members.map((m) => {\n      if (keepInitial || m.user == requiredMember) {\n        stat.push(m.user);\n      }\n    });\n    return stat;\n  }\n\n  static selectedContacts(members) {\n    let sel = [];\n    members.map((m) => {\n      sel.push(m.user);\n    });\n    return sel;\n  }\n\n  handleContactSelected(userId, index) {\n    let status = this.state.index[userId];\n    if (status) {\n      if (status.present) {\n        // Prevent duplicate members\n        return;\n      }\n      status.delta += 1;\n      status.present = true;\n    } else {\n      status = {delta: 1, present: true};\n    }\n\n    let m = this.state.members.slice();\n    m.push(this.props.contacts[index]);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleMemberRemoved(userId, index) {\n    const status = this.state.index[userId];\n    if (!status || !status.present) {\n      return;\n    }\n    status.present = false;\n    status.delta -= 1;\n\n    let m = this.state.members.slice();\n    m.splice(index, 1);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleContactFilter(val) {\n    const {formatMessage} = this.props.intl;\n    const msg = !val ?\n      formatMessage(messages.no_contacts) :\n      formatMessage(messages.contacts_not_found_short, {query: val});\n\n    this.setState({contactFilter: val, noContactsMessage: msg});\n  }\n\n  static doContactFiltering(filter, values) {\n    if (filter) {\n      for (let i=0; i<values.length; i++) {\n        if (values[i].indexOf(filter) >= 0) {\n          return true;\n        }\n      }\n      return false;\n    }\n    return true;\n  }\n\n  handleSubmit() {\n    var instance = this;\n    var members = [];\n    var added = [];\n    var removed = [];\n\n    var keys = Object.keys(this.state.index);\n    keys.map(function(k) {\n      if (instance.state.index[k].present) {\n        members.push(k);\n      }\n\n      if (instance.state.index[k].delta > 0) {\n        added.push(k);\n      } else if (instance.state.index[k].delta < 0) {\n        removed.push(k);\n      }\n    });\n    this.props.onSubmit(members, added, removed);\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <div id=\"group-manager\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_group_members\" defaultMessage=\"Group Members\" description=\"Section title\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ChipInput\n            chips={this.state.members}\n            staticMembers={this.state.staticMembers}\n            prompt=\"add members\"\n            filterFunc={this.handleContactFilter}\n            onChipRemoved={this.handleMemberRemoved} />\n        </div>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_all_contacts\" defaultMessage=\"All Contacts\"\n              description=\"Section title [All Contacts]\" />\n          </label>\n        </div>\n        <ContactList\n          contacts={this.props.contacts}\n          myUserId={this.props.myUserId}\n          topicSelected={this.state.selectedContacts}\n          filter={this.state.contactFilter}\n          filterFunc={GroupManager.doContactFiltering}\n          emptyListMessage={this.state.noContactsMessage}\n          showOnline={false}\n          showUnread={false}\n          onTopicSelected={this.handleContactSelected} />\n        <div id=\"group-manager-buttons\" className=\"panel-form-row\">\n          <button className=\"blue\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n          <button className=\"white\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(GroupManager);\n","// Password with a visiblity toggle.\nimport React from 'react';\n\nexport default class VisiblePassword extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: this.props.value,\n      visible: false\n    };\n\n    this.handleVisibility = this.handleVisibility.bind(this);\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n    if (this.props.onChange) {\n      this.props.onChange(e);\n    }\n  }\n\n  handleVisibility(e) {\n    e.preventDefault();\n    this.setState({visible: !this.state.visible});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode == 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, visible: false});\n      if (this.props.onFinished) {\n        this.props.onFinished();\n      }\n    } else if (e.keyCode == 13) {\n      // Enter pressed\n      this.handleEditingFinished();\n    }\n  }\n\n  handleEditingFinished(e) {\n    if (e) {\n      let currentTarget = e.currentTarget;\n      setTimeout(() => {\n        if (!currentTarget.contains(document.activeElement)) {\n          if (this.props.onFinished) {\n            this.props.onFinished(this.state.value);\n          }\n        }\n      }, 0);\n    } else if (this.props.onFinished) {\n      this.props.onFinished(this.state.value.trim());\n    }\n  }\n\n  render() {\n    return (\n      <div tabIndex=\"-1\" className=\"group-focus\"\n        onBlur={this.handleEditingFinished}>\n        <input className=\"with-visibility\"\n          type={this.state.visible ? \"text\" : \"password\"}\n          value={this.state.value}\n          placeholder={this.props.placeholder}\n          required={this.props.required ? 'required' : ''}\n          autoFocus={this.props.autoFocus ? 'autoFocus' : ''}\n          autoComplete={this.props.autoComplete}\n          onChange={this.handeTextChange}\n          onKeyDown={this.handleKeyDown} />\n        <span onClick={this.handleVisibility}>\n          <i className=\"material-icons clickable light-gray\">\n            {this.state.visible ? 'visibility' : 'visibility_off'}\n          </i>\n        </span>\n      </div>\n    );\n  }\n}\n","// In-place text editor. Shows text with an icon which toggles it into an input field.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport VisiblePassword from './visible-password.jsx';\n\nexport default class InPlaceEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      active: props.active,\n      initialValue: props.value || '',\n      value: props.value || ''\n    };\n\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleStartEditing = this.handleStartEditing.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n    this.handlePasswordFinished = this.handlePasswordFinished.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // If text has changed while in read mode, update text and discard changes.\n    // Ignore update if in edit mode.\n    const newValue = this.props.value || '';\n    if (prevState.initialValue != newValue && !prevState.active) {\n      this.setState({\n        initialValue: newValue,\n        value: newValue\n      });\n    }\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, active: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleEditingFinished(e);\n    }\n  }\n\n  handleStartEditing() {\n    if (!this.props.readOnly) {\n      ReactDOM.findDOMNode(this).focus();\n      this.setState({active: true});\n    }\n  }\n\n  handleEditingFinished(event) {\n    if (this.props.required && !event.target.checkValidity()) {\n      // Empty input\n      this.setState({value: this.props.value, active: false});\n      return;\n    }\n    this.setState({active: false});\n    let value = this.state.value.trim();\n    if ((value || this.props.value) && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  handlePasswordFinished(value) {\n    this.setState({active: false});\n    if (value && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  render() {\n    if (this.state.active) {\n      var fieldType = this.props.type || 'text';\n    } else {\n      var spanText = this.props.type == 'password' ? '••••••••' : this.state.value;\n      var spanClass = 'in-place-edit' +\n        (this.props.readOnly ? ' disabled' : '');\n      if (!spanText) {\n        spanText = this.props.placeholder;\n        spanClass += ' placeholder';\n      }\n      if (spanText.length > 20) {\n        // FIXME: this is wrong for RTL languages.\n        spanText = spanText.substring(0, 19) + '...';\n      }\n    }\n    return (\n      this.state.active ?\n        (fieldType == 'password' ?\n          <VisiblePassword\n            value={this.state.value}\n            placeholder={this.props.placeholder}\n            required={this.props.required ? 'required' : ''}\n            autoComplete={this.props.autoComplete}\n            autoFocus={true}\n            onFinished={this.handlePasswordFinished}/>\n          :\n          <input type={fieldType}\n            value={this.state.value}\n            placeholder={this.props.placeholder}\n            required={this.props.required ? 'required' : ''}\n            autoComplete={this.props.autoComplete}\n            autoFocus\n            onChange={this.handeTextChange}\n            onKeyDown={this.handleKeyDown}\n            onBlur={this.handleEditingFinished} />\n        )\n        :\n        <span className={spanClass} onClick={this.handleStartEditing}>\n          <span className=\"content\">{spanText}</span>\n        </span>\n    );\n  }\n};\n","// Toggle [Title text >] -> [Title text v]\n\nimport React from 'react';\n\nexport default class MoreButton extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: props.open\n    };\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n\n  handleToggle() {\n    const open = !this.state.open;\n    this.setState({open: open});\n    if (this.props.onToggle) {\n      this.props.onToggle(open);\n    }\n  }\n\n  render() {\n    return (<label className=\"small clean-clickable\" onClick={this.handleToggle}>{this.props.title}...\n      {this.state.open ? <i className=\"material-icons\">expand_more</i> :\n        <i className=\"material-icons\">chevron_right</i>}\n      </label>);\n  }\n}\n","// PermissionsEditor: Component for editing permissions\n// <PermissionsEditor mode=\"JWROD\" skip=\"O\" onChange={this.handleCheckboxTest} />\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport CheckBox from './checkbox.jsx';\nimport Contact from './contact.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n// Translatable permission names.\nconst messages = defineMessages({\n  'joiner': {\n    id: 'permission_join',\n    defaultMessage: \"Join ({val})\",\n    description: 'Name of J permission'\n  },\n  'reader': {\n    id: 'permission_read',\n    defaultMessage: \"Read ({val})\",\n    description: 'Name of R permission'\n  },\n  'writer': {\n    id: 'permission_write',\n    defaultMessage: \"Write ({val})\",\n    description: 'Name of W permission'\n  },\n  'preser': {\n    id: 'permission_pres',\n    defaultMessage: \"Get notified ({val})\",\n    description: 'Name of P permission'\n  },\n  'approver': {\n    id: 'permission_admin',\n    defaultMessage: \"Approve ({val})\",\n    description: 'Name of A permission'\n  },\n  'sharer': {\n    id: 'permission_share',\n    defaultMessage: \"Share ({val})\",\n    description: 'Name of S permission'\n  },\n  'deleter': {\n    id: 'permission_delete',\n    defaultMessage: \"Delete ({val})\",\n    description: 'Name of D permission'\n  },\n  'owner': {\n    id: 'permission_owner',\n    defaultMessage: \"Owner ({val})\",\n    description: 'Name of O permission'\n  }\n});\n\nclass PermissionsEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mode: (props.mode || '').replace('N', '')\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(val) {\n    let mode = this.state.mode;\n    let idx = mode.indexOf(val);\n    if (idx == -1) {\n      mode += val;\n    } else {\n      mode = mode.replace(val, '');\n    }\n    this.setState({mode: mode});\n  }\n\n  handleSubmit() {\n    // Normalize string, otherwise cannot check if mode has changed.\n    var mode = (this.state.mode || 'N').split('').sort().join('');\n    var before = (this.props.mode || 'N').split('').sort().join('')\n    if (mode !== before) {\n      this.props.onSubmit(mode);\n    } else {\n      this.props.onCancel();\n    }\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const all = 'JRWPASDO';\n    const names = {\n      'J': formatMessage(messages.joiner, {val: 'J'}),\n      'R': formatMessage(messages.reader, {val: 'R'}),\n      'W': formatMessage(messages.writer, {val: 'W'}),\n      'P': formatMessage(messages.preser, {val: 'P'}),\n      'A': formatMessage(messages.approver, {val: 'A'}),\n      'S': formatMessage(messages.sharer, {val: 'S'}),\n      'D': formatMessage(messages.deleter, {val: 'D'}),\n      'O': formatMessage(messages.owner, {val: 'O'})\n    };\n\n    let skip = this.props.skip || '';\n    let mode = this.state.mode;\n    let compare = (this.props.compare || '').replace('N', '');\n    let items = [];\n    for (let i=0; i<all.length; i++) {\n      let c = all.charAt(i);\n      if (skip.indexOf(c) >= 0 && mode.indexOf(c) < 0) {\n        // Permission is marked as inactive: hide unchecked permissions, disable checked permissions\n        continue;\n      }\n      items.push(\n        <tr key={c}>\n          <td>{names[c]}</td>\n          <td className=\"checkbox\">{skip.indexOf(c) < 0 ?\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} onChange={this.handleChange}/>\n            :\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} />\n          }</td>{this.props.compare ? <td className=\"checkbox\">\n            <CheckBox name={c} checked={(compare.indexOf(c) >= 0)}/>\n          </td> : null}\n        </tr>\n      );\n    }\n\n    return (\n      <div className=\"panel-form-column\">\n        {this.props.userTitle ?\n          <ul className=\"contact-box\"><Contact\n            item={this.props.item}\n            title={this.props.userTitle}\n            avatar={makeImageUrl(this.props.userAvatar ? this.props.userAvatar : null)} /></ul> : null}\n        <label className=\"small\"><FormattedMessage id=\"title_permissions\"\n          defaultMessage=\"Permissions\" description=\"Section title\"/></label>\n        <table className=\"permission-editor\">\n        {this.props.compare ?\n          <thead><tr>\n            <th></th><th>{this.props.modeTitle}</th>\n            <th>{this.props.compareTitle}</th>\n          </tr></thead> :\n          null}\n        <tbody>\n          {items}\n        </tbody></table>\n        <br />\n        <div className=\"dialog-buttons\">\n          <button className=\"outline\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" />\n          </button>\n          <button className=\"blue\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(PermissionsEditor);\n","// Odds and ends\n\n// Make shortcut icon appear with a green dot + show unread count in title.\nexport function updateFavicon(count) {\n  const oldIcon = document.getElementById('shortcut-icon');\n  const head = document.head || document.getElementsByTagName('head')[0];\n  const newIcon = document.createElement('link');\n  newIcon.type = 'image/png';\n  newIcon.id = 'shortcut-icon';\n  newIcon.rel = 'shortcut icon';\n  newIcon.href = 'img/logo32x32' + (count > 0 ? 'a' : '') + '.png';\n  if (oldIcon) {\n    head.removeChild(oldIcon);\n  }\n  head.appendChild(newIcon);\n\n  document.title = (count > 0 ? '('+count+') ' : '') + 'Tinode';\n}\n\n// Create VCard which represents topic 'public' info\nexport function vcard(fn, imageDataUrl) {\n  let card = null;\n\n  if ((fn && fn.trim()) || imageDataUrl) {\n    card = {};\n    if (fn) {\n      card.fn = fn.trim();\n    }\n    if (imageDataUrl) {\n      const dataStart = imageDataUrl.indexOf(',');\n      card.photo = dataStart >= 0 ? {\n        data: imageDataUrl.substring(dataStart+1),\n        type: 'jpg'\n      } : imageDataUrl;\n    }\n  }\n  return card;\n}\n\n// Deep-shallow compare two arrays: shallow compare each element.\nexport function arrayEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (!Array.isArray(a) || !Array.isArray(b)) {\n    return false;\n  }\n\n  // Compare lengths first.\n  if (a.length != b.length) {\n    return false;\n  }\n  // Order of elements is ignored.\n  a.sort();\n  b.sort();\n  for (let i = 0, l = a.length; i < l; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Checks (loosely) if the given string is a phone. If so, returns the phone number in a format\n// as close to E.164 as possible.\nexport function asPhone(val) {\n  val = val.trim();\n  if (/^(?:\\+?(\\d{1,3}))?[- (.]*(\\d{3})[- ).]*(\\d{3})[- .]*(\\d{2})[- .]*(\\d{2})?$/.test(val)) {\n    return val.replace(/[- ().]*/, '');\n  }\n  return null;\n}\n\n// Checks (loosely) if the given string is an email. If so returns the email.\nexport function asEmail(val) {\n  val = val.trim();\n  if (/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(val)) {\n    return val;\n  }\n  return null;\n}\n\n// Checks if URL is a relative url, i.e. has no 'scheme://', including the case of missing scheme '//'.\n// The scheme is expected to be RFC-compliant, e.g. [a-z][a-z0-9+.-]*\n// example.html - ok\n// https:example.com - not ok.\n// http:/example.com - not ok.\n// ' ↲ https://example.com' - not ok. (↲ means carriage return)\nexport function isUrlRelative(url) {\n  return url && !/^\\s*([a-z][a-z0-9+.-]*:|\\/\\/)/im.test(url);\n}\n\n// Ensure URL does not present an XSS risk. Optional allowedSchemes may contain an array of\n// strings with permitted URL schemes, such as ['ftp', 'ftps']; otherwise accept http and https only.\n// If apikey and/or token is defined, it's appended to relative URL.\nexport function sanitizeUrl(url, allowedSchemes) {\n  if (!url) {\n    return null;\n  }\n\n  // Strip control characters and whitespace. They are not valid URL characters anyway.\n  url = url.replace(/[^\\x20-\\x7E]/gmi, '').trim();\n\n  // Relative URLs are safe.\n  // Relative URL does not start with ':', abcd123: or '//'.\n  if (!/^([a-z][a-z0-9+.-]*:|\\/\\/)/i.test(url)) {\n    return url;\n  }\n\n  // Blob URLs are safe.\n  if (/^blob:http/.test(url)) {\n    return url;\n  }\n\n  // Absolute URL. Accept only safe schemes, or no scheme.\n  const schemes = Array.isArray(allowedSchemes) ? allowedSchemes.join('|') : 'http|https';\n  const re = new RegExp('^((' + schemes + '):|//)', 'i');\n  if (!re.test(url)) {\n    return null;\n  }\n\n  return url;\n}\n\n// Ensure URL is suitable for <img src=\"url\"> field: the URL must be a relative URL or\n// have http:, https:, blob: or data: scheme.\n// The relative URL is appended with the API key and/or auth token.\n// In case of data: scheme, the URL must start with a 'data:image/XXXX;base64,'.\nexport function sanitizeImageUrl(url) {\n  if (!url) {\n    return null;\n  }\n\n  const sanitizedUrl = sanitizeUrl(url);\n  if (sanitizedUrl) {\n    return sanitizedUrl;\n  }\n\n  // Is this a data: URL of an image?\n  if (/data:image\\/[a-z0-9.-]+;base64,/i.test(url.trim())) {\n    return url;\n  }\n\n  return null;\n}\n","// TagManager: edit topic or user tags.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\n\nimport { MAX_TAG_COUNT, MAX_TAG_LENGTH, MIN_TAG_LENGTH } from '../config.js';\nimport { arrayEqual } from '../lib/utils.js';\n\nexport default class TagManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tags: this.props.tags,\n      tagInput: '',\n      activated: this.props.activated\n    };\n\n    this.handleTagInput = this.handleTagInput.bind(this);\n    this.handleAddTag = this.handleAddTag.bind(this);\n    this.handleRemoveTag = this.handleRemoveTag.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (!arrayEqual(nextProps.tags, prevState.tags) && !prevState.activated) {\n      return {tags: nextProps.tags};\n    }\n    return null;\n  }\n\n  handleTagInput(text) {\n    this.setState({tagInput: text});\n    if (text.length > 0) {\n      const last = text[text.length-1];\n      if (text[0] == '\"') {\n        // This is a quoted string.\n        if (text.length > 1 && last == '\"') {\n          this.handleAddTag(text.substring(1, text.length-1));\n        }\n      } else if (last == ',' || last == ' ' || last == ';' || last == '\"') {\n        // User entered ',', ' ' or ';'\n        this.handleAddTag(text.substring(0, text.length-1).trim());\n      }\n    }\n  }\n\n  handleAddTag(tag) {\n    const maxTagCount = this.props.tinode.getServerLimit('maxTagCount', MAX_TAG_COUNT);\n\n    if (tag.length > 0 && this.state.tags.length < maxTagCount) {\n      const tags = this.state.tags.slice(0);\n      tags.push(tag);\n\n      this.setState({tags: tags, tagInput: ''});\n      if (this.props.onTagsChanged) {\n        this.props.onTagsChanged(tags);\n      }\n      return tags;\n    }\n    return this.state.tags;\n  }\n\n  handleRemoveTag(tag, index) {\n    const tags = this.state.tags.slice(0);\n    tags.splice(index, 1);\n    this.setState({tags: tags});\n    if (this.props.onTagsChanged) {\n      this.props.onTagsChanged(tags);\n    }\n  }\n\n  handleSubmit() {\n    // Add unprocessed input to tags, submit the list.\n    this.props.onSubmit(this.handleAddTag(this.state.tagInput.trim()));\n    this.setState({activated: false, tags: this.props.tags});\n  }\n\n  handleCancel() {\n    this.setState({activated: false, tagInput: '', tags: this.props.tags});\n    if (this.props.onCancel) {\n      this.props.onCancel();\n    }\n  }\n\n  render() {\n    const minTagLength = this.props.tinode.getServerLimit('minTagLength', MIN_TAG_LENGTH);\n    const maxTagLength = this.props.tinode.getServerLimit('maxTagLength', MAX_TAG_LENGTH);\n\n    let tags = [];\n    if (this.state.activated) {\n      this.state.tags.map((tag) => {\n        tags.push({user: tag, invalid: (tag.length < minTagLength || tag.length > maxTagLength)});\n      });\n    } else {\n      this.state.tags.map((tag) => {\n        tags.push(<span className=\"badge\" key={tags.length}>{tag}</span>);\n      });\n      if (tags.length == 0) {\n        tags = (\n          <i>\n            <FormattedMessage id=\"tags_not_found\" defaultMessage=\"No tags defined. Add some.\" description=\"\" />\n          </i>\n        );\n      }\n    }\n    return (\n      <div className=\"panel-form-column\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">{this.props.title}</label>\n        </div>\n        {this.state.activated ?\n        <div>\n          <FormattedMessage id=\"tags_editor_no_tags\" defaultMessage=\"Add some tags\"\n            description=\"Tag editor prompt when no tags are found.\">{\n            (add_tags_prompt) => <ChipInput\n              chips={tags}\n              avatarDisabled={true}\n              prompt={add_tags_prompt}\n              onEnter={this.handleAddTag}\n              onFocusLost={this.handleAddTag}\n              onCancel={this.handleCancel}\n              onChipRemoved={this.handleRemoveTag}\n              filterFunc={this.handleTagInput} />\n          }</FormattedMessage>\n          {this.props.onSubmit || this.props.onCancel ?\n            <div id=\"tag-manager-buttons\" className=\"dialog-buttons panel-form-row\">\n              <button className=\"outline\" onClick={this.handleCancel}>\n                <FormattedMessage id=\"button_cancel\" defautMessage=\"Cancel\" description=\"Rejection button [Cancel]\" />\n              </button>\n              <button className=\"blue\" onClick={this.handleSubmit}>\n                <FormattedMessage id=\"button_ok\" defautMessage=\"OK\" description=\"Confirmation button [OK]\" />\n              </button>\n            </div>\n          : null}\n        </div>\n        :\n        <div className=\"quoted\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.setState({activated: true});}}>\n            <i className=\"material-icons\">edit</i> &nbsp;<FormattedMessage id=\"title_manage_tags\" defaultMessage=\"Manage\"\n              description=\"Section title for the list of tags\" />\n          </a>\n          <>{tags}</>\n        </div>\n      }\n      </div>\n    );\n  }\n};\n","// InfoView: panel with topic/user info.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport ContactList from '../widgets/contact-list.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupManager from '../widgets/group-manager.jsx';\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport MenuCancel from '../widgets/menu-cancel.jsx';\nimport MoreButton from '../widgets/more-button.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\nimport TagManager from '../widgets/tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH, NO_ACCESS_MODE } from '../config.js';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, vcard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  requested: {\n    id: 'requested_permissions',\n    defaultMessage: 'Requested',\n    description: 'Title for permissions'\n  },\n  granted: {\n    id: 'granted_permissions',\n    defaultMessage: 'Granted',\n    description: 'Title for permissions'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n  other_user: {\n    id: 'label_other_user',\n    defaultMessage: 'Other',\n    description: 'Label for the other user when the user is unnamed'\n  },\n  clear_messages: {\n    id: 'action_clear_messages',\n    defaultMessage: 'Clear Messages',\n    description: 'Flat button [Clear Messages] (soft-delete messages)'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n  delete_messages: {\n    id: 'action_delete_messages',\n    defaultMessage: 'Clear Messages for All',\n    description: 'Flat button [Clear for All] (hard-delete all messages)'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  leave_chat: {\n    id: 'action_leave_chat',\n    defaultMessage: 'Leave Conversation',\n    description: 'Flat button [Leave Conversation]'\n  },\n  leave_chat_warning: {\n    id: 'leave_chat_warning',\n    defaultMessage: 'Are you sure you want to leave this conversation?',\n    description: 'Alert dialog warning when unsubscribing from a chat.'\n  },\n  block_contact: {\n    id: 'action_block_contact',\n    defaultMessage: \"Block Contact\",\n    description: \"Flat button [Block Contact]\"\n  },\n  block_contact_warning: {\n    id: 'block_contact_warning',\n    defaultMessage: 'Are you sure you want to block this contact?',\n    description: 'Alert dialog warning when blocking a contact.'\n  },\n  report_chat: {\n    id: 'action_report_chat',\n    defaultMessage: 'Report Conversation',\n    description: 'Flat button [Report Group]'\n  },\n  report_chat_warning: {\n    id: 'report_chat_warning',\n    defaultMessage: 'Are you sure you want to block and report this conversation?',\n    description: 'Alert dialog warning when reporting a conversation for abuse'\n  },\n});\n\nclass InfoView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      topic: null,\n      owner: false,\n      admin: false,\n      sharer: false,\n      deleter: false,\n      muted: false,\n      address: null,\n      groupTopic: undefined,\n      channel: undefined,\n      fullName: undefined,\n      avatar: null,\n      private: null,\n      selectedContact: null,\n      access: null,\n      modeGiven: null,\n      modeWant: null,\n      modeGiven2: null, // P2P topic, the other user mode given\n      modeWant2: null,  // P2P topic, the other user mode want\n      auth: null,\n      anon: null,\n      contactList: [],\n      tags: [],\n      showMemberPanel: false,\n      showPermissionEditorFor: undefined,\n      moreInfoExpanded: false,\n      previousMetaDesc: undefined,\n      previousSubsUpdated: undefined,\n      previousTagsUpdated: undefined\n    };\n\n    this.resetSubs = this.resetSubs.bind(this);\n    this.resetDesc = this.resetDesc.bind(this);\n    this.onMetaDesc = this.onMetaDesc.bind(this);\n    this.onSubsUpdated = this.onSubsUpdated.bind(this);\n    this.onTagsUpdated = this.onTagsUpdated.bind(this);\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\n    this.handlePrivateUpdate = this.handlePrivateUpdate.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleMuted = this.handleMuted.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handleShowAddMembers = this.handleShowAddMembers.bind(this);\n    this.handleHideAddMembers = this.handleHideAddMembers.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleDeleteMessages = this.handleDeleteMessages.bind(this);\n    this.handleLeave = this.handleLeave.bind(this);\n    this.handleBlock = this.handleBlock.bind(this);\n    this.handleReport = this.handleReport.bind(this);\n    this.handleMemberSelected = this.handleMemberSelected.bind(this);\n    this.handleMoreInfo = this.handleMoreInfo.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.handleContextMenu = this.handleContextMenu.bind(this);\n  }\n\n  // No need to separately handle component mount.\n  componentDidUpdate(props) {\n    const topic = this.props.tinode.getTopic(props.topic);\n    if (!topic) {\n      return;\n    }\n\n    if (this.onMetaDesc != topic.onMetaDesc) {\n      this.previousMetaDesc = topic.onMetaDesc;\n      topic.onMetaDesc = this.onMetaDesc;\n\n      this.previousSubsUpdated = topic.onSubsUpdated;\n      topic.onSubsUpdated = this.onSubsUpdated;\n\n      if (topic.getType() == 'grp') {\n        this.previousTagsUpdated = topic.onTagsUpdated;\n        topic.onTagsUpdated = this.onTagsUpdated;\n      } else {\n        this.previousTagsUpdated = undefined;\n      }\n    }\n\n    if (this.state.topic != props.topic) {\n      this.setState({topic: props.topic});\n      this.resetDesc(topic, props);\n      this.resetSubs(topic, props);\n    }\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.setState({topic: null});\n    topic.onMetaDesc = this.previousMetaDesc;\n    topic.onSubsUpdated = this.previousSubsUpdated;\n    topic.onTagsUpdated = this.previousTagsUpdated;\n  }\n\n  resetSubs(topic, props) {\n    const newState = {contactList: []};\n    if (topic.getType() == 'p2p') {\n      // Fetch the other party in the p2p conversation.\n      // Topic may not be ready yet, so check if user is found.\n      const user2 = topic.subscriber(props.topic);\n      if (user2) {\n        newState.modeGiven2 = user2.acs.getGiven();\n        newState.modeWant2 = user2.acs.getWant();\n      } else {\n        newState.modeGiven2 = NO_ACCESS_MODE;\n        newState.modeWant2 = NO_ACCESS_MODE;\n      }\n    } else {\n      topic.subscribers((sub) => {\n        newState.contactList.push(sub);\n      }, this);\n    }\n\n    this.setState(newState);\n  }\n\n  resetDesc(topic, props) {\n    const defacs = topic.getDefaultAccess() || {};\n    const acs = topic.getAccessMode();\n\n    this.setState({\n      owner: acs && acs.isOwner(),\n      admin: acs && acs.isAdmin(),\n      sharer: acs && acs.isSharer(),\n      deleter: acs && acs.isDeleter(),\n      muted: acs && acs.isMuted(),\n\n      fullName: topic.public ? topic.public.fn : undefined,\n      avatar: makeImageUrl(topic.public ? topic.public.photo : null),\n      private: topic.private ? topic.private.comment : null,\n      address: topic.name,\n      groupTopic: (topic.getType() == 'grp'),\n      channel: topic.isChannel(),\n      showMemberPanel: false,\n      access: acs ? acs.getMode() : undefined,\n      modeGiven: acs ? acs.getGiven() : undefined,\n      modeWant: acs ? acs.getWant() : undefined,\n      auth: defacs.auth,\n      anon: defacs.anon\n    });\n\n    if (topic.getType() == 'grp' && acs && acs.isOwner()) {\n      // Requesting tags: owner is editing the topic.\n      topic.getMeta(topic.startMetaQuery().withTags().build());\n    }\n  }\n\n  onMetaDesc(desc) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetDesc(topic, this.props);\n\n    if (this.previousMetaDesc && this.previousMetaDesc != this.onMetaDesc) {\n      this.previousMetaDesc(desc);\n    }\n  }\n\n  onSubsUpdated(subs) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetSubs(topic, this.props);\n\n    if (this.previousSubsUpdated && this.previousSubsUpdated != this.onSubsUpdated) {\n      this.previousSubsUpdated(subs);\n    }\n  }\n\n  onTagsUpdated(tags) {\n    this.setState({tags: tags});\n\n    if (this.previousTagsUpdated && this.previousTagsUpdated != this.onTagsUpdated) {\n      this.previousTagsUpdated();\n    }\n  }\n\n  handleFullNameUpdate(fn) {\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.fullName !== fn) {\n      this.setState({fullName: fn});\n      this.props.onTopicDescUpdate(this.props.topic, vcard(fn, null), null);\n    }\n  }\n\n  handlePrivateUpdate(comment) {\n    comment = comment.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.private !== comment) {\n      this.setState({private: comment});\n      this.props.onTopicDescUpdate(this.props.topic, null, comment || Tinode.DEL_CHAR);\n    }\n  }\n\n  handleImageChanged(img) {\n    this.setState({avatar: img});\n    this.props.onTopicDescUpdate(this.props.topic, vcard(null, img || Tinode.DEL_CHAR), null);\n  }\n\n  handleMuted(ignored, checked) {\n    this.setState({muted: checked});\n    this.props.onChangePermissions(this.props.topic, checked ? '-P' : '+P');\n  }\n\n  handlePermissionsChanged(perm) {\n    switch (this.state.showPermissionEditorFor) {\n      case 'auth':\n        this.props.onTopicDescUpdate(this.props.topic, null, null, {auth: perm});\n        break;\n      case 'anon':\n        this.props.onTopicDescUpdate(this.props.topic, null, null, {anon: perm});\n        break;\n      case 'mode':\n      case 'want':\n        this.props.onChangePermissions(this.props.topic, perm);\n        break;\n      case 'given':\n        this.props.onChangePermissions(this.props.topic, perm, this.props.topic);\n        break;\n      case 'user':\n        this.props.onChangePermissions(this.props.topic, perm, this.state.userPermissionsEdited);\n        break;\n    }\n\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handleLaunchPermissionsEditor(which, uid) {\n    const {formatMessage} = this.props.intl;\n    let toEdit, toCompare, toSkip, titleEdit, titleCompare, userTitle, userAvatar;\n    switch (which) {\n      case 'mode':\n        toEdit = this.state.access;\n        break;\n      case 'want':\n        toEdit = this.state.modeWant;\n        toCompare = this.state.modeGiven;\n        if (this.state.owner) {\n          // Don't allow owner to unset 'O' permission. All other permissions are OK.\n          toSkip = 'O';\n        } else {\n          // Allow accepting any of 'ASDO' permissions but don't allow asking for them.\n          toSkip = Tinode.AccessMode.encode(Tinode.AccessMode.diff('ASDO', this.state.modeGiven));\n          if (this.state.channel) {\n            // Channels are read-only.\n            toSkip += 'W';\n          }\n        }\n        titleEdit = formatMessage(messages.requested);\n        titleCompare = formatMessage(messages.granted);\n        break;\n      case 'given':\n        toEdit = this.state.modeGiven2;\n        toCompare = this.state.modeWant2;\n        toSkip = this.state.groupTopic ? (this.state.owner ? '' : 'O') : 'ASDO';\n        titleEdit = formatMessage(messages.granted);\n        titleCompare = formatMessage(messages.requested);\n        break;\n      case 'auth':\n        toEdit = this.state.auth;\n        toSkip = 'O';\n        break;\n      case 'anon':\n        toEdit = this.state.anon;\n        toSkip = 'O';\n        break;\n      case 'user': {\n        const topic = this.props.tinode.getTopic(this.props.topic);\n        if (!topic) {\n          return;\n        }\n        const user = topic.subscriber(uid);\n        if (!user || !user.acs) {\n          return;\n        }\n        toEdit = user.acs.getGiven();\n        toCompare = user.acs.getWant();\n        toSkip = this.state.owner ? '' : 'O';\n        titleEdit = formatMessage(messages.granted);\n        titleCompare = formatMessage(messages.requested);\n        if (user.public) {\n          userTitle = user.public.fn;\n          userAvatar = user.public.photo;\n        }\n        break;\n      }\n      default:\n        console.log(\"Unknown permission editing mode '\" + which + \"'\");\n        break;\n    }\n    this.setState({\n      showPermissionEditorFor: which,\n      userPermissionsEdited: uid,\n      userPermissionsTitle: userTitle,\n      userPermissionsAvatar: userAvatar,\n      editedPermissions: toEdit,\n      immutablePermissions: toCompare,\n      editedPermissionsTitle: titleEdit,\n      immutablePermissionsTitle: titleCompare,\n      editedPermissionsSkipped: toSkip,\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handleShowAddMembers(e) {\n    e.preventDefault();\n    this.props.onInitFind();\n    this.setState({showMemberPanel: true});\n  }\n\n  handleHideAddMembers() {\n    this.setState({showMemberPanel: false});\n  }\n\n  handleMemberUpdateRequest(members, added, removed) {\n    this.props.onMemberUpdateRequest(this.props.topic, added, removed);\n    this.setState({showMemberPanel: false});\n  }\n\n  handleDeleteMessages(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(this.state.deleter ? messages.delete_messages : messages.clear_messages), // title\n      formatMessage(this.state.deleter ? messages.delete_messages_warning : messages.clear_messages_warning), // content\n      (() => { this.props.onDeleteMessages(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleLeave(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.leave_chat), // title\n      formatMessage(messages.leave_chat_warning), // content\n      (() => { this.props.onLeaveTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleBlock(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.block_contact), // title\n      formatMessage(messages.block_contact_warning), // content\n      (() => { this.props.onBlockTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleReport(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.report_chat), // title\n      formatMessage(messages.report_chat_warning), // content\n      (() => { this.props.onReportTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleMemberSelected(uid) {\n    this.setState({selectedContact: uid});\n  }\n\n  handleMoreInfo(open) {\n    this.setState({moreInfoExpanded: open});\n  }\n\n  handleTagsUpdated(tags) {\n    if (!arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      this.props.onTopicTagsUpdate(this.props.topic, tags);\n    }\n  }\n\n  handleContextMenu(params) {\n    const {formatMessage} = this.props.intl;\n    const instance = this;\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    const user = topic.subscriber(params.topicName);\n    if (!user || !user.acs) {\n      return;\n    }\n\n    const menuItems = [\n      {title: formatMessage(messages.edit_permissions), handler: function() {\n        instance.handleLaunchPermissionsEditor('user', params.topicName);\n      }},\n      'member_delete',\n      user.acs.isMuted() ? 'member_unmute' : 'member_mute',\n      user.acs.isJoiner() ? 'member_block' : 'member_unblock'\n    ];\n    this.props.showContextMenu({\n      topicName: this.props.topic,\n      x: params.x,\n      y: params.y,\n      user: params.topicName}, menuItems);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n\n    return (\n      <div id=\"info-view\">\n        <div className=\"caption-panel\" id=\"info-caption-panel\">\n          <div className=\"panel-title\" id=\"info-title\">\n            <FormattedMessage id=\"title_info\" defaultMessage=\"Info\" description=\"Title for InfoView\" />\n          </div>\n          <div>\n            <MenuCancel onCancel={this.props.onCancel} />\n          </div>\n        </div>\n        {this.props.displayMobile ?\n          <ErrorPanel\n            level={this.props.errorLevel}\n            text={this.props.errorText}\n            onClearError={this.props.onError} /> : null}\n        {this.state.showMemberPanel ?\n          <GroupManager\n            members={this.state.contactList}\n            requiredMember={this.props.myUserId}\n            keepInitialMembers={!this.state.admin && !this.state.owner}\n            myUserId={this.props.myUserId}\n            contacts={this.props.searchableContacts}\n            onCancel={this.handleHideAddMembers}\n            onSubmit={this.handleMemberUpdateRequest} />\n          :\n        this.state.showPermissionEditorFor ?\n          <PermissionsEditor\n            mode={this.state.editedPermissions}\n            compare={this.state.immutablePermissions}\n            skip={this.state.editedPermissionsSkipped}\n            modeTitle={this.state.editedPermissionsTitle}\n            compareTitle={this.state.immutablePermissionsTitle}\n            userTitle={this.state.userPermissionsTitle}\n            item={this.state.userPermissionsEdited}\n            userAvatar={this.state.userPermissionsAvatar}\n            onSubmit={this.handlePermissionsChanged}\n            onCancel={this.handleHidePermissionsEditor}\n            />\n          :\n          <div id=\"info-view-content\" className=\"scrollable-panel\">\n            <div className=\"panel-form-row\">\n              <div className=\"panel-form-column\">\n                <div><label className=\"small\">\n                  <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                    description=\"Label for editing topic name\" />\n                </label></div>\n                <div><InPlaceEdit\n                    placeholder={this.state.groupTopic ? \"Group name\" : <i>Unknown</i>}\n                    readOnly={!this.state.owner}\n                    value={this.state.fullName}\n                    required={true}\n                    onFinished={this.handleFullNameUpdate} /></div>\n                <div>\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                      description=\"Label for editing 'private'\" />\n                  </label>\n                </div>\n                <div>\n                  <FormattedMessage id=\"private_editing_placeholder\"\n                    defaultMessage=\"Visible to you only\"\n                    description=\"Placeholder for editing 'private'\">{\n                    (private_placeholder) => <InPlaceEdit\n                      placeholder={private_placeholder}\n                      value={this.state.private}\n                      onFinished={this.handlePrivateUpdate} />\n                  }</FormattedMessage>\n                </div>\n              </div>\n              <AvatarUpload\n                avatar={this.state.avatar}\n                readOnly={!this.state.owner}\n                uid={this.props.topic}\n                title={this.state.fullName}\n                onImageChanged={this.handleImageChanged}\n                onError={this.props.onError} />\n            </div>\n            <div className=\"hr\" />\n            <div className=\"panel-form-column\">\n              <div className=\"panel-form-row\">\n                <label>\n                  <FormattedMessage id=\"label_muting_topic\" defaultMessage=\"Muted:\"\n                    description=\"Label for Muting/unmuting the topic\" />\n                </label>\n                <CheckBox name=\"P\" checked={this.state.muted}\n                  onChange={this.handleMuted} />\n              </div>\n              <FormattedMessage id=\"action_more\" defaultMessage=\"More\"\n                description=\"Action for showing more content\">{\n                (more) => <MoreButton\n                  title={more}\n                  open={this.state.moreInfoExpanded}\n                  onToggle={this.handleMoreInfo} />\n              }</FormattedMessage>\n              {this.state.moreInfoExpanded ?\n                <div className=\"panel-form-column\">\n                  <div className=\"panel-form-row\">\n                    <label><FormattedMessage id=\"label_user_id\" /></label>\n                    <tt>{this.state.address}</tt>\n                  </div>\n                  {this.state.groupTopic ?\n                    <div className=\"panel-form-row\">\n                      <label>\n                        <FormattedMessage id=\"label_your_permissions\" defaultMessage=\"Your permissions:\"\n                          description=\"Label for current user permissions\" />\n                      </label>\n                      <tt className=\"clickable\"\n                        onClick={this.handleLaunchPermissionsEditor.bind(this, 'want')}>\n                        {this.state.access}\n                      </tt>\n                    </div>\n                    :\n                    <div>\n                      <div>\n                        <label className=\"small\">\n                          <FormattedMessage id=\"label_permissions\" defaultMessage=\"Permissions:\"\n                            description=\"Section title\" />\n                        </label>\n                      </div>\n                      <div className=\"quoted\">\n                        <div>\n                          <FormattedMessage id=\"label_you\" defaultMessage=\"You:\"\n                            description=\"Label for the current user\" /> &nbsp;<tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'want')}>\n                          {this.state.access}\n                        </tt></div>\n                        <div>{this.state.fullName ? this.state.fullName : formatMessage(messages.other_user)}:\n                          &nbsp;<tt className=\"clickable\" onClick={this.handleLaunchPermissionsEditor.bind(this, 'given')}>\n                          {this.state.modeGiven2}\n                          </tt>\n                        </div>\n                      </div>\n                    </div>\n                  }\n                  {this.state.sharer && (this.state.auth || this.state.anon) ?\n                  <div>\n                    <div>\n                      <label className=\"small\">\n                        <FormattedMessage id=\"label_default_access\" defaultMessage=\"Default access mode:\"\n                          description=\"Section title\" />\n                      </label>\n                    </div>\n                    <div className=\"quoted\">\n                      <div>Auth: {this.state.admin ?\n                        <tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>\n                          {this.state.auth}\n                        </tt>\n                        :\n                        <tt>{this.state.auth}</tt>\n                      }\n                      </div>\n                      <div>Anon: {this.state.admin ?\n                        <tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>\n                          {this.state.anon}\n                        </tt>\n                        :\n                        <tt>{this.state.anon}</tt>\n                      }\n                      </div>\n                    </div>\n                  </div>\n                  :\n                  null\n                }\n                </div>\n              :\n              null\n              }\n            </div>\n            <div className=\"hr\" />\n            {this.state.owner ?\n              <>\n                <FormattedMessage id=\"title_tag_manager\">{\n                  (tags) => <TagManager\n                    title={tags}\n                    tags={this.state.tags}\n                    activated={false}\n                    tinode={this.props.tinode}\n                    onSubmit={this.handleTagsUpdated} />\n                }</FormattedMessage>\n                <div className=\"hr\" />\n              </>\n              :\n              null\n            }\n            <div className=\"panel-form-column\">\n              {!this.state.channel ?\n                <a href=\"#\" className=\"flat-button\" onClick={this.handleDeleteMessages}>\n                  <i className=\"material-icons\">delete_outline</i> &nbsp;{\n                    formatMessage(this.state.deleter ? messages.delete_messages : messages.clear_messages)\n                  }\n                </a>\n                :\n                null\n              }\n              <a href=\"#\" className=\"red flat-button\" onClick={this.handleLeave}>\n                <i className=\"material-icons\">exit_to_app</i> &nbsp;{formatMessage(messages.leave_chat)}\n              </a>\n              {!this.state.groupTopic ?\n                <a href=\"#\" className=\"red flat-button\" onClick={this.handleBlock}>\n                  <i className=\"material-icons\">block</i> &nbsp;{formatMessage(messages.block_contact)}\n                </a>\n                :\n                null\n              }\n              {!this.state.owner ?\n                <a href=\"#\" className=\"red flat-button\" onClick={this.handleReport}>\n                  <i className=\"material-icons\">report</i> &nbsp;{formatMessage(messages.report_chat)}\n                </a>\n                :\n                null\n              }\n            </div>\n            {this.state.groupTopic && this.state.sharer ?\n              <>\n                <div className=\"hr\" />\n                <div className=\"panel-form-column\">\n                  <div className=\"panel-form-row\">\n                    <label className=\"small\">\n                      <FormattedMessage id=\"label_group_members\" defaultMessage=\"Group members:\"\n                        description=\"Section title or label\" />\n                    </label>\n                  </div>\n                  <div className=\"panel-form-row\">\n                    <a href=\"#\" className=\"flat-button\" onClick={this.handleShowAddMembers}>\n                      <i className=\"material-icons\">person_add</i> &nbsp;<FormattedMessage id=\"button_add_members\"\n                        defaultMessage=\"Add members\" description=\"Flat button [Add members] (to topic)\" />\n                    </a>\n                  </div>\n                  <FormattedMessage id=\"group_has_no_members\" defaultMessage=\"No members\"\n                    description=\"Shown in place of group members\">{\n                    (no_members) => <ContactList\n                      contacts={this.state.contactList}\n                      myUserId={this.props.myUserId}\n                      emptyListMessage={no_members}\n                      topicSelected={this.state.selectedContact}\n                      showOnline={false}\n                      showUnread={false}\n                      showMode={true}\n                      noScroll={true}\n                      onTopicSelected={this.handleMemberSelected}\n                      showContextMenu={this.state.admin ? this.handleContextMenu : false}\n                    />\n                  }</FormattedMessage>\n                </div>\n              </>\n              :\n              null\n            }\n          </div>\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(InfoView);\n","// File uload/download progress indicator with a cancel inside.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class FileProgress extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"uploader\">\n        <div><span style={{width: (this.props.progress * 100) + \"%\"}}></span></div>\n        {this.props.progress < 0.999 ?\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n            <i className=\"material-icons\">close</i> <FormattedMessage id=\"action_cancel\"\n              defaultMessage=\"cancel\" description=\"Call to action [cancel]\" />\n          </a>\n          :\n          <FormattedMessage id=\"upload_finishing\" defaultMessage=\"finishing...\"\n            description=\"Notification that upload is finishing\" />\n        }\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\nimport { bytesToHumanSize } from '../lib/strformat.js';\nimport { isUrlRelative, sanitizeUrl } from '../lib/utils.js';\n\nexport default class Attachment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      downloader: null,\n      progress: 0\n    };\n\n    this.downloadFile = this.downloadFile.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  downloadFile(url, filename, mimetype) {\n    if (!url) {\n      this.props.onError(\"Invalid download URL '\" + url + \"'\");\n      return;\n    }\n\n    const downloader = this.props.tinode.getLargeFileHelper();\n    this.setState({downloader: downloader});\n    downloader.download(url, filename, mimetype,\n      (loaded) => {\n        this.setState({progress: loaded / this.props.size});\n      },\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    ).then(() => {\n      this.setState({downloader: null, progress: 0});\n    }).catch((err) => {\n      if (err) {\n        this.props.onError(\"Error downloading file: \" + err.message, 'err');\n      }\n      this.setState({downloader: null, progress: 0});\n    });\n  }\n\n  handleCancel() {\n    if (this.props.uploading) {\n      this.props.onCancelUpload();\n    } else if (this.state.downloader) {\n      this.state.downloader.cancel();\n    }\n  }\n\n  render() {\n    let filename = this.props.filename || 'file_attachment';\n    if (filename.length > 36) {\n      filename = filename.substr(0, 16) + '...' + filename.substr(-16);\n    }\n    let size = this.props.size > 0 ?\n      <span className=\"small gray\">({bytesToHumanSize(this.props.size)})</span> :\n      null;\n\n    // Detect if the download URL is relative or absolute.\n    // If the URL is relative use LargeFileHelper to attach authentication\n    // credentials to the request.\n    let url, helperFunc;\n    if (!this.props.uploading && !this.state.downloader && isUrlRelative(this.props.downloadUrl)) {\n      // Relative URL. Use download helper.\n      url = '#';\n      helperFunc = (e) => {\n        e.preventDefault();\n        this.downloadFile(this.props.downloadUrl, this.props.filename, this.props.mimetype);\n      };\n    } else {\n      url = sanitizeUrl(this.props.downloadUrl);\n      helperFunc = null;\n    }\n    const downloadWidget = <><i className=\"material-icons\">file_download</i> <FormattedMessage id=\"save_attachment\"\n      defaultMessage=\"save\" description=\"Call to save an attachment\" /></>;\n    return (\n      <div className=\"attachment\">\n        <div><i className=\"material-icons big gray\">insert_drive_file</i></div>\n        <div className=\"flex-column\">\n          <div>{filename} {size}</div>\n          {this.props.uploading || this.state.downloader ?\n            <FileProgress progress={this.props.uploading ? this.props.progress : this.state.progress}\n              onCancel={this.handleCancel} />\n            :\n            <div>{url ?\n              <a href={url} download={this.props.filename} onClick={helperFunc}>{downloadWidget}</a>\n              :\n              <span className=\"light-gray\">{downloadWidget}</span>\n            }</div>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n","// Received/read indicator.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { shortDateFormat } from '../lib/strformat.js';\n\nconst messages = defineMessages({\n  'sending': {\n    'id': 'message_sending',\n    'defaultMessage': 'sending...',\n    'description': 'Message being sent, in place of time stamp'\n  },\n  'failed': {\n    'id': 'message_sending_failed',\n    'defaultMessage': 'failed',\n    'description': 'Failed to send message, in place of time stamp'\n  }\n});\n\nclass ReceivedMarker extends React.PureComponent {\n  render() {\n    const {formatMessage} = this.props.intl;\n    let timestamp;\n    if (this.props.received <= Tinode.MESSAGE_STATUS_SENDING) {\n      timestamp = formatMessage(messages.sending);\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_FAILED) {\n      timestamp = formatMessage(messages.failed);\n    } else {\n      timestamp = shortDateFormat(this.props.timestamp, this.props.intl.locale);\n    }\n\n    let marker = null;\n    if (this.props.received <= Tinode.MESSAGE_STATUS_SENDING) {\n      marker = (<i className=\"material-icons small\">access_time</i>); // watch face\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_FAILED) {\n      marker = (<i className=\"material-icons small amber\">warning</i>); // yellow icon /!\\\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_SENT) {\n      marker = (<i className=\"material-icons small\">done</i>); // checkmark\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_RECEIVED) {\n      marker = (<i className=\"material-icons small\">done_all</i>); // double checkmark\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_READ) {\n      marker = (<i className=\"material-icons small blue\">done_all</i>); // blue double checkmark\n    }\n\n    return (\n      <span className=\"timestamp\">\n        {timestamp}{'\\u00a0'}{marker}\n      </span>\n    );\n  }\n};\n\nexport default injectIntl(ReceivedMarker);\n","// Image view with progress bar and a cancel button.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\n\nexport default class UploadingImage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"inline-image\">\n        {React.createElement('img', this.props)}\n        <div className=\"rounded-container\">\n          <FileProgress progress={this.props.progress} onCancel={this.props.onCancelUpload} />\n        </div>\n      </div>\n    );\n  }\n};\n","// Single message, sent or received.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Drafty } from 'tinode-sdk'\n\nimport Attachment from './attachment.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\nimport UploadingImage from './uploading-image.jsx'\nimport { sanitizeImageUrl, sanitizeUrl } from '../lib/utils.js';\n\nexport default class ChatMessage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      progress: 0\n    };\n\n    if (props.uploader) {\n      props.uploader.onProgress = this.handleProgress.bind(this);\n    }\n\n    this.handleImagePreview = this.handleImagePreview.bind(this);\n    this.handleFormButtonClick = this.handleFormButtonClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n  }\n\n  handleImagePreview(e) {\n    e.preventDefault();\n    this.props.onImagePreview({\n      url: e.target.src,\n      filename: e.target.title,\n      width: e.target.dataset.width,\n      height: e.target.dataset.height,\n      size: e.target.dataset.size,\n      type: e.target.dataset.mime\n    });\n  }\n\n  handleFormButtonClick(e) {\n    e.preventDefault();\n    const data = {\n      seq: this.props.seq\n    };\n    data.resp = {};\n    if (e.target.dataset.name) {\n      data.resp[e.target.dataset.name] = e.target.dataset.val ? e.target.dataset.val :\n        e.target.dataset.val === undefined ? 1 : '' + e.target.dataset.val;\n    }\n    if (e.target.dataset.act == 'url') {\n      data.ref = sanitizeUrl(e.target.dataset.ref) || 'about:blank';\n    }\n    const text = e.target.dataset.title || 'unknown';\n    this.props.onFormResponse(e.target.dataset.act, text, data);\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const menuItems = this.props.received == Tinode.MESSAGE_STATUS_FAILED ? ['menu_item_send_retry'] : [];\n    this.props.showContextMenu({ seq: this.props.seq, content: this.props.content,\n                                 y: e.pageY, x: e.pageX }, menuItems);\n  }\n\n  handleProgress(ratio) {\n    this.setState({progress: ratio});\n  }\n\n  handleCancelUpload() {\n    this.props.onCancelUpload(this.props.seq, this.props.uploader);\n  }\n\n  render() {\n    const sideClass = this.props.deleted ? 'center' :\n      (this.props.sequence + ' ' + (this.props.response ? 'left' : 'right'));\n    const bubbleClass = (this.props.sequence == 'single' || this.props.sequence == 'last') ? 'bubble tip' : 'bubble';\n    const avatar = this.props.deleted ? null : (this.props.userAvatar || true);\n    const fullDisplay = (this.props.userFrom && this.props.response &&\n      (this.props.sequence == 'single' || this.props.sequence == 'last'));\n\n    let content = this.props.content;\n    const attachments = [];\n    if (this.props.mimeType == Drafty.getContentType() && Drafty.isValid(content)) {\n      Drafty.attachments(content, function(att, i) {\n        if (att.mime == 'application/json') {\n          // Don't show json objects as attachments.\n          // They are not meant for users.\n          return;\n        }\n        attachments.push(<Attachment\n          tinode={this.props.tinode}\n          downloadUrl={Drafty.getDownloadUrl(att)}\n          filename={att.name} uploading={Drafty.isProcessing(att)}\n          mimetype={att.mime} size={Drafty.getEntitySize(att)}\n          progress={this.state.progress}\n          onCancelUpload={this.handleCancelUpload}\n          onError={this.props.onError}\n          key={i} />);\n      }, this);\n      content = React.createElement(React.Fragment, null, Drafty.format(content, draftyFormatter, this));\n    } else if (this.props.deleted) {\n      // Message represents a range of deleted messages.\n      content = <><i className=\"material-icons gray\">block</i> <i className=\"gray\">\n        <FormattedMessage id=\"deleted_content\"\n          defaultMessage=\"content deleted\" description=\"Shown when messages are deleted\" />\n      </i></>\n    } else if (typeof content != 'string') {\n      content = <>\n          <i className=\"material-icons gray\">error_outline</i> <i className=\"gray\">\n            <FormattedMessage id=\"invalid_content\"\n              defaultMessage=\"invalid content\" description=\"Shown when message is unreadable\" /></i>\n        </>\n    }\n\n    return (\n      <li className={sideClass}>\n        {this.props.userFrom && this.props.response ?\n          <div className=\"avatar-box\">\n            {fullDisplay ?\n              <LetterTile\n                topic={this.props.userFrom}\n                title={this.props.userName}\n                avatar={avatar} /> :\n              null}\n          </div> :\n          null}\n        <div>\n          <div className={bubbleClass}>\n            <div className=\"message-content\">\n              {content}\n              {attachments}\n              {this.props.timestamp ?\n                <ReceivedMarker\n                  timestamp={this.props.timestamp}\n                  received={this.props.received} />\n                : null}\n            </div>\n            {this.props.deleted || !this.props.showContextMenu ?\n              null :\n              <span className=\"menuTrigger\">\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">expand_more</i>\n                </a>\n              </span>\n            }\n          </div>\n          {fullDisplay ?\n            <div className=\"author\">\n              <FormattedMessage id=\"user_not_found\" defaultMessage=\"Not found\"\n                description=\"In place of a user's full name when the user is not found.\">{\n                    (notFound) => {return this.props.userName || <i>{notFound}</i>}\n              }</FormattedMessage>\n            </div>\n            : null\n          }\n        </div>\n      </li>\n    );\n  }\n};\n\n// Convert Drafty object to a tree of React elements.\nimport { BROKEN_IMAGE_SIZE, REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\n\nfunction draftyFormatter(style, data, values, key) {\n  let el = Drafty.tagName(style);\n  if (el) {\n    const attr = Drafty.attrValue(style, data) || {};\n    attr.key = key;\n    switch (style) {\n      case 'IM':\n        // Additional processing for images\n        if (data) {\n          attr.className = 'inline-image';\n          const dim = fitImageSize(data.width, data.height,\n            Math.min(this.props.viewportWidth - REM_SIZE * 4, REM_SIZE * 36), REM_SIZE * 24, false) ||\n            {dstWidth: BROKEN_IMAGE_SIZE, dstHeight: BROKEN_IMAGE_SIZE};\n          attr.style = { width: dim.dstWidth + 'px', height: dim.dstHeight + 'px' };\n          if (!Drafty.isProcessing(data)) {\n            attr.src = this.props.tinode.authorizeURL(sanitizeImageUrl(attr.src));\n            attr.alt = data.name;\n            if (attr.src) {\n              attr.onClick = this.handleImagePreview;\n              attr.className += ' image-clickable';\n            } else {\n              attr.src = 'img/broken_image.png';\n            }\n          } else {\n            // Use custom element instead of <img>.\n            el = UploadingImage;\n          }\n        }\n        break;\n      case 'BN':\n        // Button\n        attr.onClick = this.handleFormButtonClick;\n        let inner = React.Children.map(values, (child) => {\n          return typeof child == 'string' ? child : undefined;\n        });\n        if (!inner || inner.length == 0) {\n          inner = [attr.name]\n        }\n        // Get text which will be sent back when the button is clicked.\n        attr['data-title'] = inner.join('');\n        break;\n      case 'FM':\n        // Form\n        attr.className = 'bot-form';\n        break;\n      case 'FE':\n        // Form element formatting is dependent on element content.\n        break;\n    }\n    return React.createElement(el, attr, values);\n  } else {\n    return values;\n  }\n};\n","// Send message form.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport { KEYPRESS_DELAY } from '../config.js';\nimport { filePasted } from '../lib/blob-helpers.js';\n\nconst messages = defineMessages({\n  'messaging_disabled': {\n    id: 'messaging_disabled_prompt',\n    defaultMessage: 'Messaging disabled',\n    description: 'Prompt in SendMessage in read-only topic'\n  },\n  'type_new_message': {\n    id: 'new_message_prompt',\n    defaultMessage: 'New message',\n    description: 'Prompt in send message field'\n  },\n  'add_image_caption': {\n    id: 'image_caption_prompt',\n    defaultMessage: 'Image caption',\n    description: 'Prompt in SendMessage for attached image'\n  },\n  'file_attachment_too_large': {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  },\n  'cannot_initiate_upload': {\n    id: 'cannot_initiate_file_upload',\n    defaultMessage: 'Cannot initiate file upload.',\n    description: 'Generic error messagewhen attachment fails'\n  },\n});\n\nclass SendMessage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      message: '',\n      // Make initial keypress time as if it happened 5001 milliseconds in the past.\n      keypressTimestamp: new Date().getTime() - KEYPRESS_DELAY - 1\n    };\n\n    this.handlePasteEvent = this.handlePasteEvent.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleSend = this.handleSend.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleMessageTyping = this.handleMessageTyping.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.addEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.removeEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.messageEditArea) {\n      this.messageEditArea.focus();\n    }\n  }\n\n  handlePasteEvent(e) {\n    if (this.props.disabled) {\n      return;\n    }\n    // FIXME: handle large files too.\n    if (filePasted(e,\n      (bits, mime, width, height, fname) => {\n        this.props.onAttachImage(mime, bits, width, height, fname);\n      },\n      (mime, bits, fname) => {\n        this.props.onAttachFile(mime, bits, fname);\n      },\n      this.props.onError)) {\n\n      // If a file was pasted, don't paste base64 data into input field.\n      e.preventDefault();\n    }\n  }\n\n  handleAttachImage(e) {\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachImage(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleAttachFile(e) {\n    const {formatMessage} = this.props.intl;\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachFile(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleSend(e) {\n    e.preventDefault();\n    const message = this.state.message.trim();\n    if (message || this.props.acceptBlank || this.props.noInput) {\n      this.props.onSendMessage(message);\n      this.setState({message: ''});\n    }\n  }\n\n  /* Send on Enter key */\n  handleKeyPress(e) {\n    // Remove this if you don't want Enter to trigger send\n    if (e.key === 'Enter') {\n      // Have Shift-Enter insert a line break instead\n      if (!e.shiftKey) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.handleSend(e);\n      }\n    }\n  }\n\n  handleMessageTyping(e) {\n    const newState = {message: e.target.value};\n    if (this.props.onKeyPress) {\n      const now = new Date().getTime();\n      if (now - this.state.keypressTimestamp > KEYPRESS_DELAY) {\n        this.props.onKeyPress();\n        newState.keypressTimestamp = now;\n      }\n    }\n    this.setState(newState);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const prompt = this.props.disabled ?\n      formatMessage(messages.messaging_disabled) :\n      (this.props.messagePrompt ?\n        formatMessage(messages[this.props.messagePrompt]) :\n        formatMessage(messages.type_new_message));\n    return (\n      <div id=\"send-message-panel\">\n        {!this.props.disabled ?\n          <>\n            {this.props.onAttachFile ?\n              <>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachImage.click();}} title=\"Add image\">\n                  <i className=\"material-icons secondary\">photo</i>\n                </a>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachFile.click();}} title=\"Attach file\">\n                  <i className=\"material-icons secondary\">attach_file</i>\n                </a>\n              </>\n              :\n              null}\n            {this.props.noInput ?\n              <div className=\"hr thin\" /> :\n              <textarea id=\"sendMessage\" placeholder={prompt}\n                value={this.state.message} onChange={this.handleMessageTyping}\n                onKeyPress={this.handleKeyPress}\n                ref={(ref) => {this.messageEditArea = ref;}}\n                autoFocus />}\n            <a href=\"#\" onClick={this.handleSend} title=\"Send\">\n              <i className=\"material-icons\">send</i>\n            </a>\n            <input type=\"file\" ref={(ref) => {this.attachFile = ref;}}\n              onChange={this.handleAttachFile} style={{display: 'none'}} />\n            <input type=\"file\" ref={(ref) => {this.attachImage = ref;}} accept=\"image/*\"\n              onChange={this.handleAttachImage} style={{display: 'none'}} />\n          </>\n          :\n          <div id=\"writing-disabled\">{prompt}</div>\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SendMessage);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { bytesToHumanSize } from '../lib/strformat.js';\n\n// Get material icon name from mime type.\nfunction iconFromMime(mime) {\n  // If more icons become available in material icons, add them to this mime-to-icon mapping.\n  const mimeToIcon = {default: 'insert_drive_file', image: 'image', text: 'description', video: 'theaters'};\n\n  return mimeToIcon[mime] || mimeToIcon[(mime || '').split('/')[0]] || mimeToIcon['default'];\n}\n\nexport default class DocPreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleSendDoc = this.handleSendDoc.bind(this);\n  }\n\n  handleSendDoc(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(this.props.content.file);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          <span>{this.props.content.filename}</span>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\">\n          <div className=\"flex-column narrow\">\n            <i className=\"material-icons gray\">{iconFromMime(this.props.content.type)}</i>\n            <div><b><FormattedMessage id=\"label_content_type\" /></b> {this.props.content.type || 'application/octet-stream'}</div>\n            <div><b><FormattedMessage id=\"label_size\" /></b> {bytesToHumanSize(this.props.content.size)}</div>\n          </div>\n        </div>\n        <SendMessage\n          noInput={true}\n          onSendMessage={this.handleSendDoc}\n          onError={this.props.onError} />\n      </div>\n    );\n  }\n};\n","// GroupSubs: a list of group subscribers currently online.\n// Show in the topic title bar\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { MAX_ONLINE_IN_TOPIC } from '../config.js'\n\nimport LetterTile from './letter-tile.jsx';\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class GroupSubs extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const usersOnline = [];\n    const totalCount = (this.props.subscribers || []).length;\n    const countToShow = Math.min(MAX_ONLINE_IN_TOPIC, totalCount);\n\n    (this.props.subscribers || []).some((sub) => {\n      usersOnline.push(\n        <div className=\"avatar-box\" key={sub.user}>\n          <LetterTile\n            topic={sub.user}\n            avatar={makeImageUrl(sub.public ? sub.public.photo : null) || true}\n            title={sub.public ? sub.public.fn : null} />\n        </div>\n      );\n      return usersOnline.length == countToShow;\n    });\n\n    return (\n      <div id=\"topic-users\">{usersOnline} {totalCount > countToShow ?\n        <span>\n          <FormattedMessage id=\"more_online_members\" defaultMessage=\"+{overflow} more\"\n              description=\"Shown in MessagesView title bar when the number of online subscribers exceeds MAX_ONLINE_IN_TOPIC\"\n              values={{ overflow: (totalCount - countToShow) }} />\n        </span> : null}\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\nimport { bytesToHumanSize } from '../lib/strformat.js';\n\nexport default class ImagePreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      width: 0,\n      height: 0\n    };\n\n    this.handleSendImage = this.handleSendImage.bind(this);\n  }\n\n  assignWidth(node) {\n    if (node && !this.state.width) {\n      const bounds = node.getBoundingClientRect();\n      this.setState({\n        width: bounds.width | 0,\n        height: bounds.height | 0\n      });\n    }\n  }\n\n  handleSendImage(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(caption, this.props.content.blob);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n\n    const dim = fitImageSize(this.props.content.width, this.props.content.height,\n      this.state.width, this.state.height, false);\n    const size = dim ? { width: dim.dstWidth + 'px', height: dim.dstHeight + 'px' } :\n      ((this.props.content.width > this.props.content.height) ? {width: '100%'} : {height: '100%'});\n    size.maxWidth = '100%';\n    size.maxHeight = '100%';\n\n    let filename = this.props.content.filename;\n    // Average font aspect ratio is ~0.5; File name takes 1/3 of the viewport width.\n    const maxlength = Math.max(((this.state.width / REM_SIZE / 1.5) | 0) - 2, 12);\n    if (filename.length > maxlength) {\n      filename = filename.slice(0, maxlength/2 - 1) + '…' + filename.slice(1 - maxlength/2);\n    }\n    const width = this.props.content.width || '-';\n    const height = this.props.content.height || '-';\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          {!this.props.onSendMessage ?\n            <a href={this.props.content.url} download={this.props.content.filename}>\n              <i className=\"material-icons\">file_download</i> <FormattedMessage\n                id=\"download_action\" defaultMessage=\"download\" description=\"Call to action [download]\" />\n            </a>\n            :\n            <span>{this.props.content.filename}</span>\n          }\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\" ref={(node) => this.assignWidth(node)}>\n          <img src={this.props.content.url} style={size} className=\"image-preview\" alt={this.props.content.filename} />\n        </div>\n        {this.props.onSendMessage ?\n          <SendMessage\n            messagePrompt=\"add_image_caption\"\n            acceptBlank={true}\n            onSendMessage={this.handleSendImage}\n            onError={this.props.onError} />\n          :\n          <div id=\"image-preview-footer\">\n            <div>\n              <div><b><FormattedMessage id=\"label_file_name\" defaultMessage=\"File name:\"\n                description=\"Label for a file name\" /></b></div>\n              <div><span title={this.props.content.filename}>{filename ? filename : '-'}</span></div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n                description=\"Label for file content type (mime)\" /></b></div>\n              <div>{this.props.content.type}</div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n                description=\"Label for file size\" /></b></div>\n              <div>{width} &times; {height} px; {bytesToHumanSize(this.props.content.size)}</div>\n            </div>\n          </div>}\n      </div>\n    );\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Invitation extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleButtonAction = this.handleButtonAction.bind(this);\n  }\n\n  handleButtonAction(evt, data) {\n    evt.preventDefault();\n    this.props.onAction(data);\n  }\n\n  render() {\n    return (\n      <div className=\"accept-invite-panel\">\n        <div className=\"title\">\n          <FormattedMessage id=\"chat_invitation\"\n            defaultMessage=\"You are invited to start a new chat. What would you like to do?\"\n            description=\"New chat invitation message: [Accept] [Ignore] [Block].\" />\n        </div>\n        <div className=\"footer\">\n          <button className=\"blue\" onClick={event => { this.handleButtonAction(event, \"accept\"); }}>\n            <FormattedMessage id=\"chat_invitation_accept\"\n              defaultMessage=\"Accept\" description=\"Action [Accept] for chat invitation.\" />\n          </button>\n          <button className=\"white\" onClick={event => { this.handleButtonAction(event, \"delete\"); }}>\n            <FormattedMessage id=\"chat_invitation_ignore\"\n              defaultMessage=\"Ignore\" description=\"Action [Ignore] for chat invitation.\" />\n          </button>\n          <button className=\"white\" onClick={event => { this.handleButtonAction(event, \"block\"); }}>\n            <FormattedMessage id=\"chat_invitation_block\"\n              defaultMessage=\"Block\" description=\"Action [Block] for chat invitation.\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nexport default class LoadSpinner extends React.PureComponent {\n  render() {\n    return (this.props.show ?\n      <div className=\"load-spinner-box\"><div className=\"loader-spinner\"></div></div> : null);\n  }\n}\n","/* This is just a static page to display when no conversation is selected. */\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME } from '../config.js';\n\nexport default class LogoView extends React.PureComponent {\n  render() {\n    const version = APP_NAME + ' (' + Tinode.getLibrary() + ')';\n    return (\n      <div id=\"dummy-view\">\n        <div>\n          <a href=\"https://github.com/tinode/chat/\">\n            <img id=\"logo\" alt=\"logo\" src=\"img/logo.svg\" />\n            <h2>Tinode Web</h2>\n          </a>\n          <p><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\" /> {version}</p>\n          <p><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\" /> {this.props.serverVersion} ({this.props.serverAddress})</p>\n        </div>\n      </div>\n    );\n  }\n};\n","// Utility class for hash navigation.\n\n// Parse hash as in http://www.example.com/path#hash as if it were\n// path and arguments.\nexport default class HashNavigation {\n  static parseUrlHash(hash) {\n    // Split path from args, path -> parts[0], args->path[1]\n    const parts = hash.split('?', 2);\n    const params = {};\n    let path = [];\n    if (parts[0]) {\n      path = parts[0].substr(1).split('/');\n    }\n    if (parts[1]) {\n      parts[1].split('&').forEach(function(part) {\n        let item = part.split('=');\n        if (item[0]) {\n          params[decodeURIComponent(item[0])] = decodeURIComponent(item[1]);\n        }\n      });\n    }\n    return {path: path, params: params};\n  }\n\n  static navigateTo(url) {\n    window.location.hash = url;\n  }\n\n  static composeUrlHash(path, params) {\n    let url = path.join('/');\n    const args = [];\n    for (const key in params) {\n      if (params.hasOwnProperty(key)) {\n        args.push(key + '=' + params[key]);\n      }\n    }\n    if (args.length > 0) {\n      url += '?' + args.join('&');\n    }\n    return url;\n  }\n\n  static addUrlParam(hash, key, value) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.params[key] = value;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static removeUrlParam(hash, key) {\n    const parsed = this.parseUrlHash(hash);\n    delete parsed.params[key];\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlSidePanel(hash, sidepanel) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[0] = sidepanel;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlTopic(hash, topic) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[1] = topic;\n    // Close InfoView on topic change.\n    delete parsed.params.info;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n}\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\nconst Drafty = Tinode.Drafty;\n\nimport ChatMessage from '../widgets/chat-message.jsx';\nimport DocPreview from '../widgets/doc-preview.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupSubs from '../widgets/group-subs.jsx';\nimport ImagePreview from '../widgets/image-preview.jsx';\nimport Invitation from '../widgets/invitation.jsx';\nimport LetterTile from '../widgets/letter-tile.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport LogoView from './logo-view.jsx';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { DEFAULT_P2P_ACCESS_MODE, IMAGE_PREVIEW_DIM, KEYPRESS_DELAY, MESSAGES_PAGE,\n  MAX_EXTERN_ATTACHMENT_SIZE, MAX_IMAGE_DIM, MAX_INBAND_ATTACHMENT_SIZE, READ_DELAY } from '../config.js';\nimport { SUPPORTED_IMAGE_FORMATS, blobToBase64, filePasted, fileToBase64,\n  imageScaled, makeImageUrl } from '../lib/blob-helpers.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { bytesToHumanSize, shortDateFormat } from '../lib/strformat.js';\n\n// Run timer with this frequency (ms) for checking notification queue.\nconst NOTIFICATION_EXEC_INTERVAL = 300;\n\nconst messages = defineMessages({\n  'online_now': {\n    id: 'online_now',\n    defaultMessage: 'online now',\n    description: 'Indicator that the user or topic is currently online',\n  },\n  'last_seen': {\n    id: 'last_seen_timestamp',\n    defaultMessage: 'Last seen',\n    description: 'Label for the timestamp of when the user or topic was last online'\n  },\n  'not_found': {\n    id: 'title_not_found',\n    defaultMessage: 'Not found',\n    description: 'Title shown when topic is not found'\n  },\n  'channel': {\n    id: 'channel',\n    defaultMessage: 'channel',\n    description: 'Subtitle shown for channels in MessagesView instead of last seen'\n  }\n});\n\n// Checks if the access permissions are granted but not yet accepted.\nfunction isUnconfirmed(acs) {\n  if (acs) {\n    const ex = acs.getExcessive() || '';\n    return acs.isJoiner('given') && (ex.includes('R') || ex.includes('W'));\n  }\n  return false;\n}\n\nfunction isPeerRestricted(acs) {\n  if (acs) {\n    const ms = acs.getMissing() || '';\n    return acs.isJoiner('want') && (ms.includes('R') || ms.includes('W'));\n  }\n  return false;\n}\n\nclass MessagesView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = MessagesView.getDerivedStateFromProps(props, {});\n\n    this.leave = this.leave.bind(this);\n    this.sendImageAttachment = this.sendImageAttachment.bind(this);\n    this.sendFileAttachment = this.sendFileAttachment.bind(this);\n    this.sendKeyPress = this.sendKeyPress.bind(this);\n    this.handleScrollReference = this.handleScrollReference.bind(this);\n    this.handleScrollEvent = this.handleScrollEvent.bind(this);\n    this.handleDescChange = this.handleDescChange.bind(this);\n    this.handleSubsUpdated = this.handleSubsUpdated.bind(this);\n    this.handleNewMessage = this.handleNewMessage.bind(this);\n    this.handleAllMessagesReceived = this.handleAllMessagesReceived.bind(this);\n    this.handleInfoReceipt = this.handleInfoReceipt.bind(this);\n    this.handleImagePostview = this.handleImagePostview.bind(this);\n    this.handleClosePreview = this.handleClosePreview.bind(this);\n    this.handleFormResponse = this.handleFormResponse.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleShowContextMenuMessage = this.handleShowContextMenuMessage.bind(this);\n    this.handleNewChatAcceptance = this.handleNewChatAcceptance.bind(this);\n    this.handleEnablePeer = this.handleEnablePeer.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n    this.postReadNotification = this.postReadNotification.bind(this);\n    this.clearNotificationQueue = this.clearNotificationQueue.bind(this);\n\n    this.readNotificationQueue = [];\n    this.readNotificationTimer = null;\n  }\n\n  componentDidMount() {\n    // this.propsChange(this.props, this.state);\n    if (this.messagesScroller) {\n      this.messagesScroller.addEventListener('scroll', this.handleScrollEvent);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messagesScroller) {\n      this.messagesScroller.removeEventListener('scroll', this.handleScrollEvent);\n    }\n\n    // Flush all notifications.\n    this.clearNotificationQueue();\n  }\n\n  // Scroll last message into view on component update e.g. on message received\n  // or vertical shrinking.\n  componentDidUpdate(prevProps, prevState) {\n    if (this.messagesScroller) {\n      if (prevState.topic != this.state.topic || prevState.messages.length != this.state.messages.length) {\n        // New message\n        this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n      } else if (prevProps.viewportHeight > this.props.viewportHeight) {\n        // Componet changed height.\n        this.messagesScroller.scrollTop += prevProps.viewportHeight - this.props.viewportHeight;\n      }\n    }\n\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (this.state.topic != prevState.topic) {\n      if (prevState.topic && !Tinode.isNewGroupTopicName(prevState.topic)) {\n        this.leave(prevState.topic);\n      }\n\n      if (topic) {\n        topic.onData = this.handleNewMessage;\n        topic.onAllMessagesReceived = this.handleAllMessagesReceived;\n        topic.onInfo = this.handleInfoReceipt;\n        topic.onMetaDesc = this.handleDescChange;\n        topic.onSubsUpdated = this.handleSubsUpdated;\n        topic.onPres = this.handleSubsUpdated;\n      }\n    }\n\n    if (!this.props.applicationVisible) {\n      // If application is not visible, flush all unsent 'read' notifications.\n      this.clearNotificationQueue();\n    } else {\n      // Otherwise assume there are unread messages.\n      this.postReadNotification(0);\n    }\n\n    if (topic && !topic.isSubscribed() && this.props.ready &&\n        ((this.state.topic != prevState.topic) || !prevProps.ready)) {\n      // Is this a new topic?\n      const newTopic = (this.props.newTopicParams && this.props.newTopicParams._topicName == this.props.topic);\n\n      // Don't request the tags. They are useless unless the user\n      // is the owner and is editing the topic.\n      let getQuery = topic.startMetaQuery().withLaterDesc();\n      if (this.state.isSharer || (newTopic && !topic.isChannel())) {\n        // Request subscriptions only if one of S,O,A is given or it's a new non-channel topic.\n        getQuery = getQuery.withLaterSub();\n      }\n      if (this.state.isReader || newTopic) {\n        // Reading is either permitted or we don't know because it's a new topic. Ask for messages.\n        getQuery = getQuery.withLaterData(MESSAGES_PAGE);\n        if (this.state.isReader) {\n          getQuery = getQuery.withLaterDel();\n        }\n        // And show \"loading\" spinner.\n        this.setState({ fetchingMessages: true });\n      }\n      const setQuery = newTopic ? this.props.newTopicParams : undefined;\n      topic.subscribe(getQuery.build(), setQuery)\n        .then((ctrl) => {\n          if (ctrl.code == 303) {\n            // Redirect to another topic requested.\n            HashNavigation.navigateTo(HashNavigation.setUrlTopic('', ctrl.params.topic));\n            return;\n          }\n          if (this.state.topic != ctrl.topic) {\n            this.setState({topic: ctrl.topic});\n          }\n          this.props.onNewTopicCreated(this.props.topic, ctrl.topic);\n          // If there are unsent messages, try sending them now.\n          topic.queuedMessages((pub) => {\n            if (!pub._sending && topic.isSubscribed()) {\n              topic.publishMessage(pub);\n            }\n          });\n        })\n        .catch((err) => {\n          console.log(\"Failed subscription to\", this.state.topic);\n          this.props.onError(err.message, 'err');\n          const blankState = MessagesView.getDerivedStateFromProps({}, {});\n          blankState.title = this.props.intl.formatMessage(messages.not_found);\n          this.setState(blankState);\n        });\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let nextState = {};\n    if (!nextProps.topic) {\n      // Default state: no topic.\n      nextState = {\n        messages: [],\n        onlineSubs: [],\n        topic: null,\n        title: '',\n        avatar: null,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false,\n        peerMessagingDisabled: false,\n        channel: false\n      };\n    } else if (nextProps.topic != prevState.topic) {\n      const topic = nextProps.tinode.getTopic(nextProps.topic);\n      nextState = {\n        topic: nextProps.topic,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false\n      };\n\n      if (topic) {\n        // Topic exists.\n        const msgs = [];\n        const subs = [];\n\n        if (nextProps.connected) {\n          topic.subscribers((sub) => {\n            if (sub.online && sub.user != nextProps.myUserId) {\n              subs.push(sub);\n            }\n          });\n        }\n\n        topic.messages(function(msg) {\n          if (!msg.deleted) {\n            msgs.push(msg);\n          }\n        });\n\n        Object.assign(nextState, {\n          messages: msgs,\n          onlineSubs: subs\n        });\n\n        if (topic.public) {\n          Object.assign(nextState, {\n            title: topic.public.fn,\n            avatar: makeImageUrl(topic.public.photo)\n          });\n        } else {\n          Object.assign(nextState, {\n            title: '',\n            avatar: null\n          });\n        }\n\n        const peer = topic.p2pPeerDesc();\n        if (peer) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: isPeerRestricted(peer.acs)\n          });\n        } else if (prevState.peerMessagingDisabled) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: false\n          });\n        }\n        Object.assign(nextState, {\n          channel: topic.isChannel()\n        });\n      } else {\n        // Invalid topic.\n        Object.assign(nextState, {\n          messages: [],\n          onlineSubs: [],\n          title: '',\n          avatar: null,\n          peerMessagingDisabled: false,\n          channel: false\n        });\n      }\n    }\n\n    if (nextProps.acs) {\n      if (nextProps.acs.isWriter() != prevState.isWriter) {\n        nextState.isWriter = !prevState.isWriter;\n      }\n      if (nextProps.acs.isReader() != prevState.isReader) {\n        nextState.isReader = !prevState.isReader;\n      }\n      if (!nextProps.acs.isReader('given') != prevState.readingBlocked) {\n        nextState.readingBlocked = !prevState.readingBlocked;\n      }\n      if (nextProps.acs.isSharer() != prevState.isSharer) {\n        nextState.isSharer = !prevState.isSharer;\n      }\n    } else {\n      if (prevState.isWriter) {\n        nextState.isWriter = false;\n      }\n      if (prevState.isReader) {\n        nextState.isReader = false;\n      }\n      if (!prevState.readingBlocked) {\n        prevState.readingBlocked = true;\n      }\n      if (prevState.isSharer) {\n        nextState.isSharer = false;\n      }\n    }\n\n    if (isUnconfirmed(nextProps.acs) == !prevState.unconformed) {\n      nextState.unconfirmed = !prevState.unconformed;\n    }\n\n    // Clear subscribers online when there is no connection.\n    if (!nextProps.connected && prevState.onlineSubs && prevState.onlineSubs.length > 0) {\n      nextState.onlineSubs = [];\n    }\n\n    return nextState;\n  }\n\n  leave(oldTopicName) {\n    if (!oldTopicName) {\n      return;\n    }\n    let oldTopic = this.props.tinode.getTopic(oldTopicName);\n    if (oldTopic && oldTopic.isSubscribed()) {\n      oldTopic.leave(false)\n        .catch(() => { /* do nothing here */ })\n        .finally(() => {\n          // We don't care if the request succeeded or failed.\n          // The topic is dead regardless.\n          this.setState({fetchingMessages: false});\n          oldTopic.onData = undefined;\n          oldTopic.onAllMessagesReceived = undefined;\n          oldTopic.onInfo = undefined;\n          oldTopic.onMetaDesc = undefined;\n          oldTopic.onSubsUpdated = undefined;\n          oldTopic.onPres = undefined;\n        });\n    }\n  }\n\n  handleScrollReference(node) {\n    if (node) {\n      node.addEventListener('scroll', this.handleScrollEvent);\n      this.messagesScroller = node;\n      this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n    }\n  }\n\n  // Get older messages\n  handleScrollEvent(event) {\n    this.setState({scrollPosition: event.target.scrollHeight - event.target.scrollTop});\n    if (event.target.scrollTop <= 0) {\n      this.setState((prevState, props) => {\n        const newState = {};\n        if (!prevState.fetchingMessages) {\n          const topic = this.props.tinode.getTopic(this.state.topic);\n          if (topic && topic.isSubscribed() && topic.msgHasMoreMessages()) {\n            newState.fetchingMessages = true;\n            topic.getMessagesPage(MESSAGES_PAGE).catch((err) => {\n              this.setState({fetchingMessages: false});\n              this.props.onError(err.message, 'err');\n            });\n          }\n        }\n        return newState;\n      });\n    }\n  }\n\n  handleDescChange(desc) {\n    if (desc.public) {\n      this.setState({\n        title: desc.public.fn,\n        avatar: makeImageUrl(desc.public.photo)\n      });\n    } else {\n      this.setState({\n        title: '',\n        avatar: null\n      });\n    }\n\n    if (desc.acs) {\n      this.setState({\n        isWriter: desc.acs.isWriter(),\n        isReader: desc.acs.isReader(),\n        readingBlocked: !desc.acs.isReader('given'),\n        unconfirmed: isUnconfirmed(desc.acs),\n      });\n    }\n  }\n\n  postReadNotification(seq) {\n    // Ignore notifications if the app is invisible.\n    if (!this.props.applicationVisible) {\n      return;\n    }\n\n    // Set up the timer if it's not running already.\n    if (!this.readNotificationTimer) {\n      this.readNotificationTimer = setInterval(() => {\n        if (this.readNotificationQueue.length == 0) {\n          // Shut down the timer if the queue is empty.\n          clearInterval(this.readNotificationTimer);\n          this.readNotificationTimer = null;\n          return;\n        }\n\n        let seq = -1;\n        while (this.readNotificationQueue.length > 0) {\n          const n = this.readNotificationQueue[0];\n          if (n.topicName != this.state.topic) {\n            // Topic has changed. Drop the notification.\n            this.readNotificationQueue.shift();\n            continue;\n          }\n\n          const now = new Date();\n          if (n.sendAt <= now) {\n            // Remove expired notification from queue.\n            this.readNotificationQueue.shift();\n            seq = Math.max(seq, n.seq);\n          } else {\n            break;\n          }\n        }\n\n        // Send only one notification for the whole batch of messages.\n        if (seq >= 0) {\n          const topic = this.props.tinode.getTopic(this.state.topic);\n          if (topic) {\n            topic.noteRead(seq);\n          }\n        }\n      }, NOTIFICATION_EXEC_INTERVAL);\n    }\n\n    const now = new Date();\n    this.readNotificationQueue.push({\n      topicName: this.state.topic,\n      seq: seq,\n      sendAt: now.setMilliseconds(now.getMilliseconds() + READ_DELAY)\n    });\n  }\n\n  // Clear notification queue and timer.\n  clearNotificationQueue() {\n    this.readNotificationQueue = [];\n    if (this.readNotificationTimer) {\n      clearInterval(this.readNotificationTimer);\n      this.readNotificationTimer = null;\n    }\n  }\n\n  handleSubsUpdated() {\n    if (this.state.topic) {\n      const subs = [];\n      const topic = this.props.tinode.getTopic(this.state.topic);\n      topic.subscribers((sub) => {\n        if (sub.online && sub.user != this.props.myUserId) {\n          subs.push(sub);\n        }\n      });\n      const newState = {onlineSubs: subs};\n      const peer = topic.p2pPeerDesc();\n      if (peer) {\n        Object.assign(newState, {\n          peerMessagingDisabled: isPeerRestricted(peer.acs)\n        });\n      } else if (this.state.peerMessagingDisabled) {\n        Object.assign(newState, {\n          peerMessagingDisabled: false\n        });\n      }\n      this.setState(newState);\n    }\n  }\n\n  handleNewMessage(msg) {\n    // Regenerate messages list\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    const newState = {messages: []};\n    topic.messages((m) => {\n      if (!m.deleted) {\n        newState.messages.push(m);\n      }\n    });\n\n    // msg could be null if one or more messages were deleted.\n    if (msg && !msg.deleted) {\n      // If the message is added to the end of the message list,\n      // scroll to the bottom.\n      if (topic.isNewMessage(msg.seq)) {\n        newState.scrollPosition = 0;\n      }\n\n      // Aknowledge messages except own messages. They are\n      // automatically assumed to be read and recived.\n      const status = topic.msgStatus(msg);\n      if (status >= Tinode.MESSAGE_STATUS_SENT && msg.from != this.props.myUserId) {\n        this.postReadNotification(msg.seq);\n      }\n      this.props.onData(msg);\n    }\n    this.setState(newState);\n  }\n\n  handleAllMessagesReceived(count) {\n    this.setState({fetchingMessages: false});\n    if (count > 0) {\n      // 0 means \"latest\".\n      this.postReadNotification(0);\n    }\n  }\n\n  handleInfoReceipt(info) {\n    switch (info.what) {\n      case 'kp': {\n        clearTimeout(this.keyPressTimer);\n        var instance = this;\n        this.keyPressTimer = setTimeout(function() {\n          instance.setState({typingIndicator: false});\n        }, KEYPRESS_DELAY + 1000);\n        if (!this.state.typingIndicator) {\n          this.setState({typingIndicator: true});\n        }\n        break;\n      }\n      case 'read':\n      case 'recv':\n        // Redraw due to changed recv/read status.\n        this.forceUpdate();\n        break;\n      default:\n        console.log(\"Other change in topic: \", info.what);\n    }\n  }\n\n  handleImagePostview(content) {\n    this.setState({ imagePostview: content });\n  }\n\n  handleClosePreview() {\n    if (this.state.imagePreview && this.state.imagePreview.url) {\n      URL.revokeObjectURL(this.state.imagePreview.url);\n    }\n    this.setState({ imagePostview: null, imagePreview: null, docPreview: null });\n  }\n\n  handleFormResponse(action, text, data) {\n    if (action == 'pub') {\n      this.props.sendMessage(Drafty.attachJSON(Drafty.parse(text), data));\n    } else if (action == 'url') {\n      const url = new URL(data.ref);\n      const params = url.searchParams;\n      for (let key in data.resp) {\n        if (data.resp.hasOwnProperty(key)) {\n          params.set(key, data.resp[key]);\n        }\n      }\n      ['name', 'seq'].map(function(key) {\n        if (data[key]) {\n          params.set(key, data[key]);\n        }\n      });\n      params.set('uid', this.props.myUserId);\n      url.search = params;\n      window.open(url, '_blank');\n    } else {\n      console.log(\"Unknown action in form\", action);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.state.topic, y: e.pageY, x: e.pageX });\n  }\n\n  handleShowContextMenuMessage(params, messageSpecificMenuItems) {\n    params.topicName = this.state.topic;\n    const menuItems = messageSpecificMenuItems || [];\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (topic) {\n      if (!topic.isChannel()) {\n        menuItems.push('message_delete');\n      }\n      const acs = topic.getAccessMode();\n      if (acs && acs.isDeleter()) {\n        menuItems.push('message_delete_hard');\n      }\n    }\n    this.props.showContextMenu(params, menuItems);\n  }\n\n  handleNewChatAcceptance(action) {\n    this.props.onNewChat(this.state.topic, action);\n  }\n\n  handleEnablePeer(e) {\n    e.preventDefault();\n    this.props.onChangePermissions(this.state.topic, DEFAULT_P2P_ACCESS_MODE, this.state.topic);\n  }\n\n  sendKeyPress() {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (topic.isSubscribed()) {\n      topic.noteKeyPress();\n    }\n  }\n\n  // Send attachment as Drafty message:\n  // - if file is too large, upload it and send a s link.\n  // - if file is small enough, just send it in-band.\n  sendFileAttachment(file) {\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (file.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      if (!uploader) {\n        this.props.onError(this.props.intl.formatMessage(messages.cannot_initiate_upload));\n        return;\n      }\n      const uploadCompletionPromise = uploader.upload(file);\n      const msg = Drafty.attachFile(null, {\n        mime: file.type,\n        filename: file.name,\n        size: file.size,\n        urlPromise: uploadCompletionPromise\n      });\n      // Pass data and the uploader to the TinodeWeb.\n      this.props.sendMessage(msg, uploadCompletionPromise, uploader);\n    } else {\n      // Small enough to send inband.\n      fileToBase64(file,\n        (mime, bits, fname) => {\n          this.props.sendMessage(Drafty.attachFile(null, {mime: mime, data: bits, filename: fname}));\n        },\n        this.props.onError\n      );\n    }\n  }\n\n  // handleAttachFile method is called when [Attach file] button is clicked.\n  handleAttachFile(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    if (file.size > maxExternAttachmentSize) {\n      // Too large.\n      this.props.onError(this.props.intl.formatMessage({id: 'file_attachment_too_large'},\n          {size: bytesToHumanSize(file.size), limit: bytesToHumanSize(maxExternAttachmentSize)}), 'err');\n    } else {\n      this.setState({ docPreview: {\n        file: file,\n        filename: file.name,\n        size: file.size,\n        type: file.type\n      }});\n    }\n  }\n\n  // sendImageAttachment sends the image bits inband as Drafty message.\n  sendImageAttachment(caption, blob) {\n    const mime = this.state.imagePreview.type;\n    const width = this.state.imagePreview.width;\n    const height = this.state.imagePreview.height;\n    const fname = this.state.imagePreview.filename;\n\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (blob.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      if (!uploader) {\n        this.props.onError(this.props.intl.formatMessage(messages.cannot_initiate_upload));\n        return;\n      }\n      const uploadCompletionPromise = uploader.upload(blob);\n\n      // Make small preview to show while uploading.\n      imageScaled(blob, IMAGE_PREVIEW_DIM, IMAGE_PREVIEW_DIM, -1, false,\n        (tinyBlob) => {\n          // Convert tiny image into base64 for serialization and previewing.\n          blobToBase64(tinyBlob, (blobMime, tinyBits64) => {\n            let msg = Drafty.insertImage(null, 0, {\n              mime: mime,\n              _tempPreview: tinyBits64, // This preview will not be serialized.\n              width: width,\n              height: height,\n              filename: fname,\n              size: blob.size,\n              urlPromise: uploadCompletionPromise\n            });\n            if (caption) {\n              msg = Drafty.appendLineBreak(msg);\n              msg = Drafty.append(msg, Drafty.init(caption));\n            }\n            // Pass data and the uploader to the TinodeWeb.\n            this.props.sendMessage(msg, uploadCompletionPromise, uploader);\n          }\n        )},\n        // Failure\n        (err) => {\n          this.props.onError(err, 'err');\n        }\n      );\n      return;\n    }\n\n    // Upload the image if it's too big to be send inband.\n    blobToBase64(blob, (blobMime, bits64) => {\n      let msg = Drafty.insertImage(null, 0, {\n        mime: blobMime,\n        preview: bits64, // Serializable preview\n        width: width,\n        height: height,\n        filename: fname,\n        size: blob.size\n      });\n      if (caption) {\n        msg = Drafty.appendLineBreak(msg);\n        msg = Drafty.append(msg, Drafty.init(caption));\n      }\n      this.props.sendMessage(msg);\n    });\n  }\n\n  // handleAttachImage method is called when [Attach image] button is clicked.\n  handleAttachImage(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    // Get image dimensions and size, optionally scale it down.\n    imageScaled(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, maxExternAttachmentSize, false,\n      // Success\n      (blob, mime, width, height, fname) => {\n        this.setState({imagePreview: {\n          url: URL.createObjectURL(blob),\n          blob: blob,\n          filename: fname,\n          width: width,\n          height: height,\n          size: blob.size,\n          type: mime\n        }});\n      },\n      // Failure\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    );\n  }\n\n  handleCancelUpload(seq, uploader) {\n    const found = this.state.messages.find(msg => msg.seq == seq);\n    if (found) {\n      found._cancelled = true;\n    }\n    uploader.cancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n\n    let component;\n    if (this.props.hideSelf) {\n      component = null;\n    } else if (!this.state.topic) {\n      component = (\n        <LogoView\n          serverVersion={this.props.serverVersion}\n          serverAddress={this.props.serverAddress} />\n      );\n    } else {\n      let component2;\n      if (this.state.imagePreview) {\n        // Preview image before sending.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePreview}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendImageAttachment} />\n        );\n      } else if (this.state.imagePostview) {\n        // Expand received image.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePostview}\n            onClose={this.handleClosePreview} />\n        );\n      } else if (this.state.docPreview) {\n        // Preview attachment before sending.\n        component2 = (\n          <DocPreview\n            content={this.state.docPreview}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendFileAttachment} />\n        );\n      } else {\n        const topic = this.props.tinode.getTopic(this.state.topic);\n        const isChannel = topic.isChannel();\n        const groupTopic = topic.getType() == 'grp' && !isChannel;\n        let messageNodes = [];\n        let previousFrom = null;\n        let chatBoxClass = null;\n        for (let i=0; i<this.state.messages.length; i++) {\n          let msg = this.state.messages[i];\n          let nextFrom = null;\n\n          if (i + 1 < this.state.messages.length) {\n            nextFrom = this.state.messages[i+1].from || 'chan';\n          }\n\n          let sequence = 'single';\n          let thisFrom = msg.from || 'chan';\n          if (thisFrom == previousFrom) {\n            if (thisFrom == nextFrom) {\n              sequence = 'middle';\n            } else {\n              sequence = 'last';\n            }\n          } else if (thisFrom == nextFrom) {\n            sequence = 'first';\n          }\n          previousFrom = thisFrom;\n\n          const isReply = !(thisFrom == this.props.myUserId);\n          const deliveryStatus = topic.msgStatus(msg);\n\n          let userName, userAvatar, userFrom;\n          if (groupTopic) {\n            const user = topic.userDesc(thisFrom);\n            if (user && user.public) {\n              userName = user.public.fn;\n              userAvatar = makeImageUrl(user.public.photo);\n            }\n            userFrom = thisFrom;\n            chatBoxClass='chat-box group';\n          } else {\n            chatBoxClass='chat-box';\n          }\n\n          messageNodes.push(\n            <ChatMessage\n              tinode={this.props.tinode}\n              content={msg.content}\n              deleted={msg.hi}\n              mimeType={msg.head ? msg.head.mime : null}\n              timestamp={msg.ts}\n              response={isReply}\n              seq={msg.seq}\n              userFrom={userFrom}\n              userName={userName}\n              userAvatar={userAvatar}\n              sequence={sequence}\n              received={deliveryStatus}\n              uploader={msg._uploader}\n              viewportWidth={this.props.viewportWidth}\n              showContextMenu={this.state.channel? false : this.handleShowContextMenuMessage}\n              onImagePreview={this.handleImagePostview}\n              onFormResponse={this.handleFormResponse}\n              onError={this.props.onError}\n              onCancelUpload={this.handleCancelUpload}\n              key={msg.seq} />\n          );\n        }\n\n        let lastSeen = null;\n        if (isChannel) {\n          lastSeen = formatMessage(messages.channel);\n        } else {\n          const cont = this.props.tinode.getMeTopic().getContact(this.state.topic);\n          if (cont && Tinode.isP2PTopicName(cont.topic)) {\n            if (cont.online) {\n              lastSeen = formatMessage(messages.online_now);\n            } else if (cont.seen) {\n              lastSeen = formatMessage(messages.last_seen) + \": \" +\n                shortDateFormat(cont.seen.when, this.props.intl.locale);\n              // TODO: also handle user agent in c.seen.ua\n            }\n          }\n        }\n        const avatar = this.state.avatar || true;\n        const online = this.props.online ? 'online' + (this.state.typingIndicator ? ' typing' : '') : 'offline';\n\n        component2 = (\n          <>\n            <div id=\"topic-caption-panel\" className=\"caption-panel\">\n              {this.props.displayMobile ?\n                <a href=\"#\" id=\"hide-message-view\" onClick={(e) => {e.preventDefault(); this.props.onHideMessagesView();}}>\n                  <i className=\"material-icons\">arrow_back</i>\n                </a>\n                :\n                null}\n              <div className=\"avatar-box\">\n                <LetterTile\n                  avatar={avatar}\n                  topic={this.state.topic}\n                  title={this.state.title} />\n                {!isChannel ? <span className={online} /> : null}\n              </div>\n              <div id=\"topic-title-group\">\n                <div id=\"topic-title\" className=\"panel-title\">{\n                  this.state.title ||\n                  <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n                    description=\"Title shown when the topic has no name\" /></i>\n                }</div>\n                <div id=\"topic-last-seen\">{lastSeen}</div>\n              </div>\n              {groupTopic ?\n                <GroupSubs\n                  subscribers={this.state.onlineSubs} /> :\n                <div id=\"topic-users\" />\n              }\n              <div>\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">more_vert</i>\n                </a>\n              </div>\n            </div>\n            {this.props.displayMobile ?\n              <ErrorPanel\n                level={this.props.errorLevel}\n                text={this.props.errorText}\n                onClearError={this.props.onError} />\n              : null}\n            <LoadSpinner show={this.state.fetchingMessages} />\n            <div id=\"messages-container\">\n              <div id=\"messages-panel\" ref={this.handleScrollReference}>\n                <ul id=\"scroller\" className={chatBoxClass}>\n                  {messageNodes}\n                </ul>\n              </div>\n              {!this.state.isReader ?\n              <div id=\"write-only-background\">\n                {this.state.readingBlocked ?\n                <div id=\"write-only-note\">\n                  <FormattedMessage id=\"messages_not_readable\" defaultMessage=\"no access to messages\"\n                    description=\"Message shown in topic without the read access\" />\n                </div>\n                : null }\n              </div>\n              : null }\n            </div>\n            {this.state.peerMessagingDisabled && !this.state.unconfirmed ?\n              <div id=\"peer-messaging-disabled-note\">\n                <i className=\"material-icons secondary\">block</i> <FormattedMessage\n                  id=\"peers_messaging_disabled\" defaultMessage=\"Peer's messaging is disabled.\"\n                  description=\"Shown when the p2p peer's messaging is disabled\" /> <a href=\"#\"\n                    onClick={this.handleEnablePeer}><FormattedMessage id=\"enable_peers_messaging\"\n                    defaultMessage=\"Enable\" description=\"Call to action to enable peer's messaging\" /></a>.\n              </div> : null}\n            {this.state.unconfirmed ?\n              <Invitation onAction={this.handleNewChatAcceptance} />\n              :\n              <SendMessage\n                disabled={!this.state.isWriter}\n                onSendMessage={this.props.sendMessage}\n                onKeyPress={this.sendKeyPress}\n                onAttachFile={this.handleAttachFile}\n                onAttachImage={this.handleAttachImage}\n                onError={this.props.onError} />}\n          </>\n        );\n      }\n\n      component = <div id=\"topic-view\">{component2}</div>\n    }\n    return component;\n  }\n};\n\nexport default injectIntl(MessagesView);\n","// The <- button to be displayed in title bars.\nimport React from 'react';\n\nexport default class ButtonBack extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onBack();}}>\n        <i className=\"material-icons\">arrow_back</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class MenuContacts extends React.PureComponent {\n  render() {\n    return (\n      <div>\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onNewTopic();}}><i className=\"material-icons\">chat</i></a>\n        &nbsp;\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nexport default class MenuStart extends React.PureComponent {\n  render() {\n    return (\n        <div>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSignUp();}}><i className=\"material-icons\">person_add</i></a>\n          &nbsp;\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n        </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\nimport ButtonBack from './button-back.jsx';\nimport MenuContacts from './menu-contacts.jsx';\nimport MenuStart from './menu-start.jsx';\n\nexport default class SideNavbar extends React.PureComponent {\n  render() {\n    return (\n        <div id=\"side-caption-panel\" className=\"caption-panel\">\n          {this.props.onCancel ? <ButtonBack onBack={this.props.onCancel} /> : null}\n          {this.props.avatar ?\n            <div id=\"self-avatar\" className=\"avatar-box\">\n              <LetterTile\n                avatar={this.props.avatar}\n                topic={this.props.myUserId}\n                title={this.props.title} />\n            </div>\n            :\n            null}\n          <div id=\"sidepanel-title\" className=\"panel-title\">{this.props.title}</div>\n          {this.props.state === 'login' ?\n              <MenuStart onSignUp={this.props.onSignUp} onSettings={this.props.onSettings} /> :\n            this.props.state === 'contacts' ?\n              <MenuContacts onNewTopic={this.props.onNewTopic} onSettings={this.props.onSettings} /> :\n            null}\n        </div>\n    );\n  }\n};\n","/* ContactsView holds all contacts-related stuff */\nimport React from 'react';\nimport { FormattedMessage, defineMessages } from 'react-intl';\n\nimport ContactList from '../widgets/contact-list.jsx';\n\nimport { updateFavicon } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  archived_contacts_title: {\n    id: \"archived_contacts\",\n    defaultMessage: \"Archived contacts ({count})\",\n    description: \"Label for archived chats\"\n  }\n});\n\nexport default class ContactsView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAction = this.handleAction.bind(this);\n\n    this.state = ContactsView.deriveStateFromProps(props);\n  }\n\n  static deriveStateFromProps(props) {\n    const contacts = [];\n    let unreadThreads = 0;\n    let archivedCount = 0;\n    props.chatList.map((c) => {\n      const blocked = c.acs && !c.acs.isJoiner();\n      // Show only blocked contacts only when props.blocked == true.\n      if (blocked && props.blocked) {\n        contacts.push(c);\n      }\n      if (blocked || props.blocked) {\n        return;\n      }\n\n      if (c.private && c.private.arch) {\n        if (props.archive) {\n          contacts.push(c);\n        } else {\n          archivedCount ++;\n        }\n      } else if (!props.archive) {\n        contacts.push(c);\n        unreadThreads += c.unread > 0 ? 1 : 0;\n      }\n    });\n\n    contacts.sort((a, b) => {\n      return (b.touched || 0) - (a.touched || 0);\n    });\n\n    if (archivedCount > 0) {\n      contacts.push({\n        action: 'archive',\n        title: messages.archived_contacts_title,\n        values: {count: archivedCount}\n      });\n    }\n\n    return {\n      contactList: contacts,\n      unreadThreads: unreadThreads\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chatList != this.props.chatList ||\n        prevProps.archive != this.props.archive ||\n        prevProps.blocked != this.props.blocked) {\n      const newState = ContactsView.deriveStateFromProps(this.props);\n      this.setState(newState);\n      if (newState.unreadThreads != prevState.unreadThreads) {\n        updateFavicon(newState.unreadThreads);\n      }\n    }\n  }\n\n  handleAction(action_ignored) {\n    this.props.onShowArchive();\n  }\n\n  render() {\n    return (\n      <FormattedMessage id=\"contacts_not_found\"\n        defaultMessage=\"You have no chats<br />¯∖_(ツ)_/¯\"\n        description=\"HTML message shown in ContactList when no contacts are found\">{\n        (no_contacts) => <ContactList\n          connected={this.props.connected}\n          contacts={this.state.contactList}\n          emptyListMessage={no_contacts}\n          topicSelected={this.props.topicSelected}\n          myUserId={this.props.myUserId}\n          showOnline={true}\n          showUnread={true}\n          onTopicSelected={this.props.onTopicSelected}\n          showContextMenu={this.props.showContextMenu}\n          onAction={this.handleAction} />\n      }</FormattedMessage>\n    );\n  }\n};\n","// Helper functions for storing values in localStorage.\n// By default localStorage can store only strings, not objects or other types.\n\nexport default class LocalStorageUtil {\n  // Replace old object with the new one.\n  static setObject(key, value) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n\n  // Get stored object.\n  static getObject(key) {\n    const value = localStorage.getItem(key);\n    return value && JSON.parse(value);\n  }\n\n  // Partially or wholly update stored object.\n  static updateObject(key, value) {\n    const oldVal = this.getObject(key);\n    this.setObject(key, Object.assign(oldVal || {}, value));\n  }\n\n  // Just a wrapper.\n  static removeItem(key) {\n    localStorage.removeItem(key);\n  }\n}\n","// Account registration.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport { vcard } from '../lib/utils.js';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class CreateAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: '',\n      password: '',\n      email: '',\n      fn: '', // full/formatted name\n      imageDataUrl: null,\n      errorCleared: false,\n      saveToken: LocalStorageUtil.getObject('keep-logged-in')\n    };\n\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(password) {\n    this.setState({password: password});\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value})\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleToggleSaveToken() {\n    LocalStorageUtil.setObject('keep-logged-in', !this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({errorCleared: false});\n    this.props.onCreateAccount(\n      this.state.login.trim(),\n      this.state.password.trim(),\n      vcard(this.state.fn.trim().substring(0, MAX_TITLE_LENGTH), this.state.imageDataUrl),\n      {'meth': 'email', 'val': this.state.email});\n  }\n\n  render() {\n    let submitClasses = 'blue';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form className=\"panel-form-column\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <FormattedMessage id=\"login_prompt\">{\n              (login_prompt) => <input type=\"text\" placeholder={login_prompt} autoComplete=\"user-name\"\n                value={this.state.login} onChange={this.handleLoginChange} required autoFocus />\n            }</FormattedMessage>\n            <FormattedMessage id=\"password_prompt\">{\n              (password_prompt) => <VisiblePassword placeholder={password_prompt} autoComplete=\"new-password\"\n                value={this.state.password} onFinished={this.handlePasswordChange}\n                required={true} />\n            }</FormattedMessage>\n          </div>\n          <AvatarUpload\n            onImageChanged={this.handleImageChanged}\n            onError={this.props.onError} />\n        </div>\n        <div  className=\"panel-form-row\">\n          <FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n            description=\"Input placeholder for person's full name\">{\n            (full_name_prompt) => <input type=\"text\" placeholder={full_name_prompt} autoComplete=\"name\"\n              value={this.state.fn} onChange={this.handleFnChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <FormattedMessage id=\"email_prompt\" defaultMessage=\"Email, e.g. jdoe@example.com\"\n            description=\"Input placeholder for email entry\">{\n            (email_prompt) => <input type=\"email\" placeholder={email_prompt} autoComplete=\"email\"\n              value={this.state.email} onChange={this.handleEmailChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <FormattedMessage id=\"stay_logged_in\">{\n            (stay_logged_in) => <label htmlFor=\"save-token\">&nbsp;{stay_logged_in}</label>\n          }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_up\" defaultMessage=\"Sign up\"\n              description=\"Create account button [Sign Up]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class EditAccountView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    this.state = {\n      fullName: me.public ? me.public.fn : undefined,\n      avatar: makeImageUrl(me.public ? me.public.photo : null)\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n                description=\"Label for full name editing\" />\n            </label>\n            <div className=\"large\">{this.state.fullName}</div>\n            <div>\n              <label className=\"small\"><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n                description=\"Label for user address (ID)\" /></label>&nbsp;\n              <tt>{this.props.myUserId}</tt>\n            </div>\n          </div>\n          <AvatarUpload\n            avatar={this.state.avatar}\n            readOnly={!this.state.owner}\n            uid={this.props.myUserId}\n            title={this.state.fullName} />\n        </div>\n        <div className=\"panel-form-row\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('general');}}>\n            <i className=\"material-icons\">edit</i>&nbsp;\n            <FormattedMessage id=\"button_edit\" defaultMessage=\"Edit\" description=\"Call to action [Edit]\" />\n          </a>\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('notif');}}>\n            <i className=\"material-icons\">notifications</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_notifications\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('security');}}>\n            <i className=\"material-icons\">security</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_security\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('support');}}>\n            <i className=\"material-icons\">contact_support</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_support\" />\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport TagManager from '../widgets/tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, asEmail, asPhone, vcard } from '../lib/utils.js';\n\nexport default class AccGeneralView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    this.state = {\n      fullName: me.public ? me.public.fn : undefined,\n      avatar: makeImageUrl(me.public ? me.public.photo : null),\n      tags: me.tags(),\n      credentials: me.getCredentials() || [],\n      addCredActive: false,\n      addCredInvalid: false,\n      newCred: '',\n      previousOnTags: me.onTagsUpdated\n    };\n\n    this.tnNewTags = this.tnNewTags.bind(this);\n    this.tnCredsUpdated = this.tnCredsUpdated.bind(this);\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleCredChange = this.handleCredChange.bind(this);\n    this.handleCredKeyDown = this.handleCredKeyDown.bind(this);\n    this.handleCredEntered = this.handleCredEntered.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n  }\n\n  componentDidMount() {\n    const me = this.props.tinode.getMeTopic();\n    me.onCredsUpdated = this.tnCredsUpdated;\n    me.onTagsUpdated = this.tnNewTags;\n  }\n\n  componentWillUnmount() {\n    const me = this.props.tinode.getMeTopic();\n    me.onTagsUpdated = this.state.previousOnTags;\n    me.onCredsUpdated = undefined;\n  }\n\n  tnNewTags(tags) {\n    this.setState({tags: tags});\n  }\n\n  tnCredsUpdated(creds) {\n    this.setState({credentials: creds || []});\n  }\n\n  handleFullNameUpdate(fn) {\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\n    if (fn) {\n      this.setState({fullName: fn});\n      this.props.onUpdateAccount(undefined, vcard(fn, null));\n    }\n  }\n\n  handleImageChanged(img) {\n    this.setState({avatar: img});\n    this.props.onUpdateAccount(undefined, vcard(null, img || Tinode.DEL_CHAR));\n  }\n\n  handleCredChange(e) {\n    this.setState({newCred: e.target.value, addCredInvalid: false});\n  }\n\n  handleCredKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({newCred: '', addCredActive: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleCredEntered(e);\n    }\n  }\n\n  handleCredEntered(e) {\n    let value = this.state.newCred.trim();\n    if (!value) {\n      this.setState({addCredActive: false, addCredInvalid: false});\n      return;\n    }\n\n    let val = asPhone(value);\n    let method;\n    if (val) {\n      method = 'tel';\n    } else {\n      val = asEmail(value);\n      if (val) {\n        method = 'email';\n      }\n    }\n    if (method) {\n      this.props.onCredAdd(method, val);\n      this.setState({addCredActive: false, newCred: ''});\n    } else {\n      this.setState({addCredInvalid: true});\n    }\n  }\n\n  handleTagsUpdated(tags) {\n    // Check if tags have actually changed.\n    if (arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      return;\n    }\n    this.props.onUpdateTags(tags);\n  }\n\n  render() {\n    const credentials = [];\n    this.state.credentials.map((cred) => {\n      credentials.push(<div key={cred.meth + \":\" + cred.val + \":\" + cred.done}>{cred.meth}: <tt>{cred.val}</tt>\n        <span > {!cred.done ?\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredConfirm(cred.meth, cred.val);}}>\n              <FormattedMessage id=\"validate_credential_action\" defaultMessage=\"confirm\"\n                description=\"Validate credentail call to action\" />\n            </a>\n          : null} <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredDelete(cred.meth, cred.val);}}><i\n            className=\"material-icons gray\">delete_outline</i></a></span></div>);\n    });\n\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\"><FormattedMessage id=\"label_your_name\" /></label>\n            <div><FormattedMessage id=\"full_name_prompt\">{\n              (full_name_placeholder) => <InPlaceEdit\n                placeholder={full_name_placeholder}\n                value={this.state.fullName}\n                onFinished={this.handleFullNameUpdate} />\n            }</FormattedMessage></div>\n          </div>\n          <AvatarUpload\n            avatar={this.state.avatar}\n            uid={this.props.myUserId}\n            title={this.state.fullName}\n            onImageChanged={this.handleImageChanged}\n            onError={this.props.onError} />\n        </div>\n        <div className=\"hr\" />\n        <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (user discovery)\"\n          description=\"Section title for TagManager\">{\n          (title_tag_manager) => <TagManager\n            title={title_tag_manager}\n            activated={false}\n            tags={this.state.tags}\n            tinode={this.props.tinode}\n            onSubmit={this.handleTagsUpdated} />\n        }</FormattedMessage>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_user_contacts\" defaultMessage=\"Contacts:\"\n            description=\"Label for user contacts\" />\n          </label>\n          <div className=\"quoted\">\n            {credentials}\n            {this.state.addCredActive ?\n              <input type=\"text\" value={this.state.value}\n                className={this.state.addCredInvalid ? 'invalid' : null}\n                placeholder=\"Phone number or email\" required=\"required\" autoFocus\n                onChange={this.handleCredChange} onKeyDown={this.handleCredKeyDown} onBlur={this.handleCredEntered} />\n              : null}\n            <div>\n              <a href=\"#\" onClick={(e) => {e.preventDefault(); this.setState({addCredActive: true});}}>\n                <i className=\"material-icons\">add</i>\n                <FormattedMessage id=\"button_add_another\" defaultMessage=\"Add another\" description=\"Call to action [+ add another]\" />\n              </a></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\n\nexport default class EditAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckboxClick = this.handleCheckboxClick.bind(this);\n  }\n\n  handleCheckboxClick(what, checked) {\n    if (what == 'sound') {\n      this.props.onToggleMessageSounds(checked);\n    } else if (what == 'alert') {\n      this.props.onTogglePushNotifications(checked);\n    } else if (what == 'incognito') {\n      this.props.onToggleIncognitoMode(checked);\n    }\n  }\n\n  render() {\n    return (\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"message-sound\">\n              <FormattedMessage id=\"label_message_sound\" defaultMessage=\"Message sound:\"\n                description=\"Label for message sounds toggle\" />\n            </label>\n            <CheckBox name=\"sound\" id=\"message-sound\"\n              checked={this.props.messageSounds} onChange={this.handleCheckboxClick} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"desktop-alerts\">\n            {this.props.desktopAlertsEnabled ?\n              <FormattedMessage id=\"label_push_notifications\" defaultMessage=\"Notification alerts:\"\n                description=\"Label for push notifications switch\" />\n              :\n              <FormattedMessage id=\"label_push_notifications_disabled\"\n                defaultMessage=\"Notification alerts (requires HTTPS):\"\n                description=\"Label for push notifications switch\" />\n            }\n            </label>\n            <CheckBox name=\"alert\" id=\"desktop-alerts\"\n              checked={this.props.desktopAlerts}\n              onChange={this.props.desktopAlertsEnabled ? this.handleCheckboxClick : null} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"incognito-mode\">\n              <FormattedMessage id=\"label_incognito_mode\" defaultMessage=\"Incognito mode:\"\n                description=\"Label for incognito mode toggle\" />\n            </label>\n            <CheckBox name=\"incognito\" id=\"incognito-mode\"\n              checked={this.props.incognitoMode} onChange={this.handleCheckboxClick} />\n          </div>\n        </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\n\nconst messages = defineMessages({\n  delete_account: {\n    id: 'delete_account',\n    defaultMessage: 'Delete account',\n    description: 'Title for delete account warning'\n  },\n  delete_account_warning: {\n    id: 'delete_account_arning',\n    defaultMessage: 'Are you sure you want to delete your account? It cannot be undone.',\n    description: 'Warning message when deleting an account'\n  }\n});\n\nclass AccSecurityView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    let blockedCount = 0;\n    me.contacts((c) => {\n      if (c.acs && !c.acs.isJoiner()) {\n        blockedCount ++;\n      }\n    });\n    const defacs = me.getDefaultAccess();\n    this.state = {\n      auth: defacs ? defacs.auth : null,\n      anon: defacs ? defacs.anon : null,\n      showPermissionEditorFor: undefined,\n      blockedCount: blockedCount,\n    };\n\n    this.handlePasswordUpdate = this.handlePasswordUpdate.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n  }\n\n  handlePasswordUpdate(pwd) {\n    this.setState({password: pwd});\n    this.props.onUpdateAccount(pwd);\n  }\n\n  handleLaunchPermissionsEditor(which) {\n    this.setState({\n      showPermissionEditorFor: which,\n      editedPermissions: this.state[which]\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handlePermissionsChanged(perm) {\n    let defacs = {};\n    defacs[this.state.showPermissionEditorFor] = perm;\n    this.props.onUpdateAccount(undefined, undefined, defacs);\n\n    let newState = {showPermissionEditorFor: undefined};\n    newState[this.state.showPermissionEditorFor] = perm;\n    this.setState(newState);\n  }\n\n  handleDeleteAccount(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.delete_account), // title\n      formatMessage(messages.delete_account_warning), // content\n      (() => { this.props.onDeleteAccount(); }), // onConfirm\n      null, // use default text \"OK\"\n      true, // Show Reject button\n      null  // use default text \"Cancel\"\n    );\n  }\n\n  render() {\n    return (\n      <React.Fragment>{this.state.showPermissionEditorFor ?\n        <PermissionsEditor\n          mode={this.state.editedPermissions}\n          skip=\"O\"\n          onSubmit={this.handlePermissionsChanged}\n          onCancel={this.handleHidePermissionsEditor} />\n        :\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_password\" defaultMessage=\"Password\"\n                  description=\"Label for password editing\" />\n            </label>\n            <div>\n              <FormattedMessage id=\"password_unchanged_prompt\" defaultMessage=\"Unchanged\"\n                description=\"Message in editor while password is unchanged\">{\n                (password_unchanged) => <InPlaceEdit\n                  placeholder={password_unchanged}\n                  type=\"password\"\n                  onFinished={this.handlePasswordUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <a href=\"#\" className=\"red flat-button\" onClick={(e) => {e.preventDefault(); this.props.onLogout();}}>\n              <i className=\"material-icons\">exit_to_app</i> &nbsp;<FormattedMessage id=\"button_logout\"\n                defaultMessage=\"Logout\" description=\"Button [Logout]\" />\n            </a>\n            <a href=\"#\" className=\"red flat-button\" onClick={(e) => {this.handleDeleteAccount(e);}}>\n              <i className=\"material-icons\">delete</i> &nbsp;<FormattedMessage id=\"button_delete_account\"\n                defaultMessage=\"Delete account\" description=\"Button [Delete account]\" />\n            </a>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <div>\n              <label className=\"small\">\n                <FormattedMessage id=\"label_default_access_mode\" defaultMessage=\"Default access mode:\"\n                description=\"Label for default access mode\" />\n              </label>\n            </div>\n            <div className=\"quoted\">\n              <div>Auth: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>{this.state.auth}</tt></div>\n              <div>Anon: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>{this.state.anon}</tt></div>\n            </div>\n          </div>\n          {this.state.blockedCount > 0 ?\n            <>\n              <div className=\"hr\" />\n              <div className=\"panel-form-row\">\n                <i className=\"material-icons\">block</i>&nbsp;\n                <a href=\"#\" className=\"gray\" onClick={(e) => {e.preventDefault(); this.props.onShowBlocked();}}>\n                  <FormattedMessage id=\"blocked_contacts_link\" defaultMessage=\"Blocked contacts ({count})\"\n                    values={{ count: this.state.blockedCount }} description=\"Blocked contacts link\" />\n                </a>\n              </div>\n            </>\n            : null }\n        </div>\n      }</React.Fragment>\n    );\n  }\n};\n\nexport default injectIntl(AccSecurityView);\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME, LINK_CONTACT_US, LINK_PRIVACY_POLICY, LINK_TERMS_OF_SERVICE } from '../config.js';\n\nexport default class AccSupportView extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          <a href={LINK_CONTACT_US} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">email</i> &nbsp;<FormattedMessage id=\"link_contact_us\"\n              defaultMessage=\"Contact Us\" description=\"Ancor text for contacting us by email\" />\n          </a>\n          <a href={LINK_TERMS_OF_SERVICE} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">description</i> &nbsp;<FormattedMessage id=\"link_terms_of_service\"\n              defaultMessage=\"Terms of Service\" description=\"Ancor text for terms of service link\" />\n          </a>\n          <a href={LINK_PRIVACY_POLICY} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">policy</i> &nbsp;<FormattedMessage id=\"link_privacy_policy\"\n              defaultMessage=\"Privacy Policy\" description=\"Ancor text for privacy policy link\" />\n          </a>\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_client\" /></label>\n            {APP_NAME}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_sdk\" defaultMessage=\"SDK:\" /></label>\n            {Tinode.getLibrary()}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server\" /></label>\n            {this.props.serverVersion}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server_address\" defaultMessage=\"Server address:\" /></label>\n            {this.props.serverAddress}\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","// Login form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\n\nexport default class LoginView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: props.login,\n      password: '',\n      hostName: props.serverAddress,\n      saveToken: LocalStorageUtil.getObject('keep-logged-in')\n    };\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  handleToggleSaveToken() {\n    LocalStorageUtil.setObject('keep-logged-in', !this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onLogin(this.state.login.trim(), this.state.password.trim());\n  }\n\n  render() {\n    var submitClasses = 'blue';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form id=\"login-form\" onSubmit={this.handleSubmit}>\n        <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n          description=\"Login placeholder in LoginView\">\n        {\n          (login_prompt) => <input type=\"text\" id=\"inputLogin\"\n            placeholder={login_prompt}\n            autoComplete=\"username\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"none\"\n            value={this.state.login}\n            onChange={this.handleLoginChange}\n            required autoFocus />\n        }\n        </FormattedMessage>\n        <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n          description=\"Password placeholder in LoginView\">\n        {\n          (password_prompt) => <VisiblePassword type=\"password\" id=\"inputPassword\"\n            placeholder={password_prompt}\n            autoComplete=\"current-password\"\n            value={this.state.password}\n            onChange={this.handlePasswordChange}\n            required={true} />\n        }\n        </FormattedMessage>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <label htmlFor=\"save-token\">&nbsp;\n            <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n              description=\"Label for a checkbox\" />\n          </label>\n          <a href=\"#reset\">\n            <FormattedMessage id=\"forgot_password_link\" defaultMessage=\"Forgot password?\"\n              description=\"Link to Reset password form\" />\n          </a>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_in\" defaultMessage=\"Sign in\"\n              description=\"Button [Sign In]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n/* END Login */\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  invalid_id: {\n    id: 'error_invalid_id',\n    defaultMessage: 'Invalid ID',\n    description: 'Error message'\n  }\n});\n\nclass NewTopicById extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      groupId: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({groupId: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.groupId) {\n      var name = this.state.groupId.trim();\n      if (name.length > 3 && (name.substr(0, 3) == 'usr' || name.substr(0, 3) == 'grp')) {\n        this.props.onSubmit(name);\n      } else {\n        this.props.onError(this.props.intl.formatMessage(messages.invalid_id), 'err');\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"group_user_id_prompt\" defaultMessage=\"Group or User ID\"\n          description=\"Prompt for entering user or group ID\">{\n          (prompt) => <input type=\"text\" placeholder={prompt}\n            value={this.state.groupId} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required autoFocus />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"blue\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_subscribe\" defaultMessage=\"Subscribe\"\n              description=\"Button [Subscribe]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicById);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from './avatar-upload.jsx';\nimport CheckBox from './checkbox.jsx';\nimport TagManager from './tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class NewTopicGroup extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      fn: '', // full/formatted name\n      private: '',\n      imageDataUrl: null,\n      tags: [],\n      isChannel: false\n    };\n\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handlePrivateChange = this.handlePrivateChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleTagsChanged = this.handleTagsChanged.bind(this);\n    this.handleChannelToggle = this.handleChannelToggle.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handlePrivateChange(e) {\n    this.setState({private: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleTagsChanged(tags) {\n    this.setState({tags: tags});\n  }\n\n  handleChannelToggle() {\n    this.setState({isChannel: !this.state.isChannel});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const fn = this.state.fn.trim().substring(0, MAX_TITLE_LENGTH);\n    const comment = this.state.private.trim().substring(0, MAX_TITLE_LENGTH);\n    if (fn) {\n      this.props.onSubmit(fn, this.state.imageDataUrl, comment, this.state.tags, this.state.isChannel);\n    }\n  }\n\n  render() {\n    var submitClasses = 'blue';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n    return (\n      <form className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\" htmlFor=\"new-topic-fn\">\n              <FormattedMessage id=\"label_topic_name\" />\n            </label>\n            <FormattedMessage id=\"topic_name_editing_placeholder\" defaultMessage=\"Freeform name of the group\"\n              description=\"Prompt for entering topic name\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-fn\" placeholder={placeholder}\n                value={this.state.fn} onChange={this.handleFnChange} autoFocus required />\n            }</FormattedMessage>\n            <br />\n            <label className=\"small\" htmlFor=\"new-topic-priv\">\n              <FormattedMessage id=\"label_private\" />\n            </label>\n            <FormattedMessage id=\"private_editing_placeholder\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-priv\" placeholder={placeholder}\n                value={this.state.private} onChange={this.handlePrivateChange} />\n            }</FormattedMessage>\n          </div>\n          <AvatarUpload\n            onError={this.props.onError}\n            onImageChanged={this.handleImageChanged} />\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox checked={this.state.isChannel} onChange={this.handleChannelToggle}/>&nbsp;\n          <label onClick={this.handleChannelToggle}><FormattedMessage id=\"channel_prompt\"\n            defaultMessage=\"This is a channel\"\n            description=\"Checkbox label when creating a channel\" /></label>\n        </div>\n        <FormattedMessage id=\"title_tag_manager\">{\n          (title) => <TagManager\n            tags={this.state.tags}\n            activated={true}\n            onTagsChanged={this.handleTagsChanged}\n            tinode={this.props.tinode}\n            title={title} />\n        }</FormattedMessage>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses}>\n            <FormattedMessage id=\"button_create\" defaultMessage=\"Create\"\n              description=\"Button [Create]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nexport default class SearchContacts extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      edited: false,\n      search: ''\n    };\n\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  componentWillUnmount() {\n    if (this.state.edited) {\n      this.setState({search: '', edited: false});\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n  }\n\n  handleSearchChange(e) {\n    this.setState({search: e.target.value});\n  }\n\n  handleSearch(e) {\n    e.preventDefault();\n    var query = this.state.search.trim();\n    this.setState({edited: (query.length > 0)});\n    this.props.onSearchContacts(query.length > 0 ? query : Tinode.DEL_CHAR);\n  }\n\n  handleClear(e) {\n    e.preventDefault();\n    if (this.state.edited) {\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n    this.setState({search: '', edited: false});\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Enter') {\n      this.handleSearch(e);\n    } else if (e.key === 'Escape') {\n      this.handleClear();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <i className=\"material-icons search\">search</i>\n          <FormattedMessage id=\"search_placeholder\" defaultMessage=\"List like email:alice@example.com, tel:17025550003...\"\n            description=\"Placeholder in contacts search field\">{\n            (search_placeholder) => <input className=\"search\" type=\"text\"\n              placeholder={search_placeholder}\n              value={this.state.search} onChange={this.handleSearchChange}\n              onKeyDown={this.handleKeyDown} required autoFocus />\n          }</FormattedMessage>\n          <a href=\"#\" onClick={this.handleClear}>\n            <i className=\"material-icons\">close</i>\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","// Create new topic and invite users or send an invite.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport ContactList from '../widgets/contact-list.jsx';\nimport NewTopicById from '../widgets/new-topic-by-id.jsx';\nimport NewTopicGroup from '../widgets/new-topic-group.jsx';\nimport SearchContacts from '../widgets/search-contacts.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\nimport { vcard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  search_for_contacts: {\n    id: \"search_for_contacts\",\n    defaultMessage: \"Use search to find contacts\",\n    description: \"Text shown in contacts view when user entered no search query.\"\n  },\n  search_no_results: {\n    id: \"search_no_results\",\n    defaultMessage: \"Search returned no results\",\n    description: \"Text shown in contacts view when query returned no results.\"\n  }\n});\n\nclass NewTopicView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tabSelected: 'p2p',\n      searchQuery: null\n    };\n\n    this.handleTabClick = this.handleTabClick.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleNewGroupSubmit = this.handleNewGroupSubmit.bind(this);\n    this.handleGroupByID = this.handleGroupByID.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.onInitFind();\n  }\n\n  handleTabClick(e) {\n    e.preventDefault();\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'tab', e.currentTarget.dataset.id));\n    this.setState({tabSelected: e.currentTarget.dataset.id});\n  }\n\n  handleSearchContacts(query) {\n    this.props.onSearchContacts(query);\n    this.setState({searchQuery: Tinode.isNullValue(query) ? null : query});\n  }\n\n  handleContactSelected(sel) {\n    if (this.state.tabSelected === 'p2p') {\n      HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n      this.props.onCreateTopic(sel);\n    }\n  }\n\n  handleNewGroupSubmit(name, dataUrl, priv, tags, isChannel) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(undefined, vcard(name, dataUrl), priv, tags, isChannel);\n  }\n\n  handleGroupByID(topicName) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(topicName);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const no_contacts_placeholder = formatMessage(this.state.searchQuery ?\n      messages.search_no_results : messages.search_for_contacts);\n    return (\n      <div className=\"flex-column\">\n        <ul className=\"tabbar\">\n          <li className={this.state.tabSelected === \"p2p\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"p2p\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_find_user\" defaultMessage=\"find\"\n                description=\"Tab title Find\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"grp\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"grp\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_new_group\" defaultMessage=\"new group\"\n                description=\"Tab title New Group\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"byid\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"byid\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_group_by_id\" defaultMessage=\"by id\"\n                description=\"Tab title Find topic by ID\" />\n            </a>\n          </li>\n        </ul>\n        {this.state.tabSelected === 'grp' ?\n          <NewTopicGroup\n            tinode={this.props.tinode}\n            onSubmit={this.handleNewGroupSubmit} /> :\n          this.state.tabSelected === 'byid' ?\n            <NewTopicById\n              onSubmit={this.handleGroupByID}\n              onError={this.props.onError} /> :\n            <div className=\"flex-column\">\n              <SearchContacts\n                type=\"p2p\"\n                onSearchContacts={this.handleSearchContacts} />\n              <ContactList\n                contacts={this.props.searchResults}\n                myUserId={this.props.myUserId}\n                emptyListMessage={no_contacts_placeholder}\n                showOnline={false}\n                showUnread={false}\n                showContextMenu={false}\n                onTopicSelected={this.handleContactSelected} />\n            </div>}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicView);\n","// A password reset form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\n\nexport default class PasswordResetView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n  }\n\n  componentDidMount() {\n    let parsed = HashNavigation.parseUrlHash(window.location.hash);\n    this.setState({token: parsed.params.token, scheme: parsed.params.scheme});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.token) {\n      this.props.onReset(this.state.scheme, this.state.password.trim(), this.state.token);\n    } else {\n      this.props.onRequest('email', this.state.email.trim());\n    }\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  render() {\n    let reset = (this.state.token && this.state.scheme);\n    return (\n      <form id=\"password-reset-form\" onSubmit={this.handleSubmit}>\n        {reset ?\n          <FormattedMessage id=\"new_password_placeholder\" defaultMessage=\"Enter new password\"\n            description=\"Placeholder for entering new password\">{\n            (placeholder) => <VisiblePassword\n              placeholder={placeholder}\n              autoComplete=\"new-password\"\n              value={this.state.password}\n              required={true} autoFocus={true}\n              onChange={this.handlePasswordChange} />\n          }</FormattedMessage>\n          :\n          <>\n            <label htmlFor=\"inputEmail\">\n              <FormattedMessage id=\"label_reset_password\"\n                defaultMessage=\"Send a password reset email:\"\n                description=\"Label for password reset field\" />\n            </label>\n            <FormattedMessage id=\"credential_email_prompt\" defaultMessage=\"Your registration email\"\n              description=\"Placeholder for entering email\">{\n              (placeholder) => <input type=\"email\" id=\"inputEmail\"\n                placeholder={placeholder}\n                autoComplete=\"email\"\n                value={this.state.email}\n                onChange={this.handleEmailChange}\n                required autoFocus />\n            }</FormattedMessage>\n          </>\n        }\n        <div className=\"dialog-buttons\">\n          <button className=\"blue\" type=\"submit\">{reset ?\n            <FormattedMessage id=\"button_reset\" defaultMessage=\"Reset\" description=\"Button [Reset]\" /> :\n            <FormattedMessage id=\"button_send_request\" defaultMessage=\"Send request\"\n              description=\"Button [Send request]\" />\n          }</button>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react';\n\nimport { KNOWN_HOSTS } from '../config.js';\n\n/* Combobox for selecting host name */\n\nexport default class HostSelector extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hostName: props.serverAddress,\n      changed: false\n    };\n\n    this.handleHostNameChange = this.handleHostNameChange.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handleHostNameChange(e) {\n    this.setState({hostName: e.target.value, changed: true});\n  }\n\n  handleEditingFinished() {\n    if (this.state.changed) {\n      this.setState({changed: false});\n      this.props.onServerAddressChange(this.state.hostName.trim());\n    }\n  }\n\n  render() {\n    var hostOptions = [];\n    for (let key in KNOWN_HOSTS) {\n      let item = KNOWN_HOSTS[key];\n      hostOptions.push(\n        <option key={item} value={item} />\n      );\n    }\n    return (\n      <div className=\"panel-form-row\">\n        <input type=\"search\" id=\"host-name\" placeholder={this.props.hostName} list=\"known-hosts\"\n          className=\"quoted\" value={this.state.hostName} onChange={this.handleHostNameChange}\n          onBlur={this.handleEditingFinished} required />\n        <datalist id=\"known-hosts\">\n          {hostOptions}\n        </datalist>\n      </div>\n    );\n  }\n}\n","// Tinode config panel.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport HostSelector from '../widgets/host-selector.jsx';\n\nexport default class SettingsView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transport: props.transport || 'def',\n      serverAddress: props.serverAddress,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleTransportSelected = this.handleTransportSelected.bind(this);\n    this.handleServerAddressChange = this.handleServerAddressChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onUpdate({\n      transport: this.state.transport,\n      serverAddress: this.state.serverAddress\n    });\n  }\n\n  handleTransportSelected(e) {\n    this.setState({transport: e.currentTarget.value});\n  }\n\n  handleServerAddressChange(name) {\n    this.setState({serverAddress: name});\n  }\n\n  render() {\n    const names = {def: \"default\", ws: \"websocket\", lp: \"long polling\"};\n    var transportOptions = [];\n    var instance = this;\n    ['def', 'ws', 'lp'].map(function(item) {\n      var id = 'transport-' + item;\n      var name = names[item];\n      transportOptions.push(\n        <li key={item}>\n          <input type=\"radio\" id={id} name=\"transport-select\" value={item}\n            checked={instance.state.transport === item}\n            onChange={instance.handleTransportSelected} />\n          <label htmlFor={id}>{name}</label>\n        </li>\n      );\n    });\n\n    return (\n      <form id=\"settings-form\" className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_server_to_use\" defaultMessage=\"Server to use:\"\n              description=\"Label for server selector in SettingsView\" />\n          </label>\n        </div>\n        <HostSelector serverAddress={this.state.serverAddress}\n          onServerAddressChange={this.handleServerAddressChange} />\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_wire_transport\" defaultMessage=\"Wire transport:\"\n              description=\"Label for wire transport selection in SettingsView\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ul className=\"quoted\">\n            {transportOptions}\n          </ul>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button type=\"submit\" className=\"blue\">\n            <FormattedMessage id=\"button_update\" defaultMessage=\"Update\"\n              description=\"Button [Update]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// ValidationView: panel for confirming credentials, like email or phone.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  phone: {\n    id: 'phone_dative',\n    defaultMessage: 'phone',\n    description: \"Dative case of 'phone', i.e. 'phone' in 'by phone'\",\n  },\n  email: {\n    id: 'email_dative',\n    defaultMessage: 'email',\n    description: \"Dative case of 'email', i.e. 'email' in 'by email'\",\n  }\n});\n\nclass ValidationView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      code: props.credCode || ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({code: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    } else if (e.key == 'Escape') {\n      this.handleCancel(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.code && this.state.code.trim()) {\n      this.props.onSubmit(this.props.credMethod, this.state.code.trim());\n    }\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel();\n  }\n\n\n  render() {\n    const { formatMessage } = this.props.intl;\n    const methods = {'email': formatMessage(messages.email), 'tel': formatMessage(messages.phone)};\n    let method = methods[this.props.credMethod] || this.props.credMethod;\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\" htmlFor=\"enter-confirmation-code\">\n            <FormattedMessage id=\"enter_confirmation_code_prompt\"\n              defaultMessage=\"Enter confirmation code sent to you by {method}:\"\n              description=\"Request to enter confirmation code\"\n              values={{method: method}} />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"numeric_confirmation_code_prompt\"\n          defaultMessage=\"Numbers only\" description=\"Prompt for numeric conformation code\">{\n          (numbers_only) => <input type=\"text\" id=\"enter-confirmation-code\"\n            placeholder={numbers_only}\n            value={this.state.code} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"blue\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_confirm\" defaultMessage=\"Confirm\" description=\"Button [Confirm]\" />\n          </button>\n          <button className=\"white\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ValidationView);\n","import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport SideNavbar from '../widgets/side-navbar.jsx';\n\nimport ContactsView from './contacts-view.jsx';\nimport CreateAccountView from './create-account-view.jsx';\nimport EditAccountView from './edit-account-view.jsx';\nimport AccGeneralView from './acc-general-view.jsx';\nimport AccNotificationsView from './acc-notifications-view.jsx';\nimport AccSecurityView from './acc-security-view.jsx';\nimport AccSupportView from './acc-support-view.jsx';\nimport LoginView from './login-view.jsx';\nimport NewTopicView from './new-topic-view.jsx';\nimport PasswordResetView from './password-reset-view.jsx';\nimport SettingsView from './settings-view.jsx';\nimport ValidationView from './validation-view.jsx';\n\n// Panel titles for translation.\nconst messages = defineMessages({\n  'login': {\n    id: 'sidepanel_title_login',\n    description: 'Sidepanel title for LoginView.',\n    defaultMessage: 'Sign In'\n  },\n  'register': {\n    id: 'sidepanel_title_register',\n    description: 'Sidepanel title for CreateAccountView.',\n    defaultMessage: 'Create Account'\n  },\n  'settings': {\n    id: 'sidepanel_title_settings',\n    description: 'Sidepanel title for SettingsView.',\n    defaultMessage: 'Settings'\n  },\n  'edit': {\n    id: 'sidepanel_title_account_settings',\n    description: 'Sidepanel title for EditAccountView.',\n    defaultMessage: 'Account Settings'\n  },\n  'general': {\n    id: 'sidepanel_title_acc_general',\n    description: 'Sidepanel title for AccGeneralView.',\n    defaultMessage: 'General'\n  },\n  'security': {\n    id: 'sidepanel_title_acc_security',\n    description: 'Sidepanel title for AccSecurityView.',\n    defaultMessage: 'Security'\n  },\n  'notif': {\n    id: 'sidepanel_title_acc_notifications',\n    description: 'Sidepanel title for AccNotificationsView.',\n    defaultMessage: 'Notifications'\n  },\n  'support': {\n    id: 'sidepanel_title_acc_support',\n    description: 'Sidepanel title for AccSupportView.',\n    defaultMessage: 'Support'\n  },\n  'newtpk': {\n    id: 'sidepanel_title_newtpk',\n    description: 'Sidepanel title for NewTopicView.',\n    defaultMessage: 'Start New Chat'\n  },\n  'cred': {\n    id: 'sidepanel_title_cred',\n    description: 'Sidepanel title for ValidationView.',\n    defaultMessage: 'Confirm Credentials'\n  },\n  'reset': {\n    id: 'sidepanel_title_reset',\n    description: 'Sidepanel title for PasswordResetView.',\n    defaultMessage: 'Reset Password'\n  },\n  'archive': {\n    id: 'sidepanel_title_archive',\n    description: 'Sidepanel title for ContactsView-Archive.',\n    defaultMessage: 'Archived Chats'\n  },\n  'blocked': {\n    id: 'sidepanel_title_blocked',\n    description: 'Sidepanel title for ContactsView-Blocked.',\n    defaultMessage: 'Blocked Chats'\n  }\n});\n\nclass SidepanelView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleLoginRequested = this.handleLoginRequested.bind(this);\n    this.handleNewTopic = this.handleNewTopic.bind(this);\n  }\n\n  handleLoginRequested(login, password) {\n    this.props.onLoginRequest(login, password);\n  }\n\n  handleNewTopic() {\n    this.props.onBasicNavigate('newtpk');\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const view = this.props.state || (this.props.myUserId ? 'contacts' : 'login');\n\n    let title, avatar;\n    if (view == 'contacts') {\n      title = this.props.title;\n      avatar = this.props.avatar ? this.props.avatar : true;\n    } else {\n      title = formatMessage(messages[view]);\n      avatar = false;\n    }\n\n    let onCancel;\n    if (['login', 'contacts'].indexOf(view) == -1) {\n      onCancel = this.props.onCancel;\n    }\n\n    return (\n      <div id=\"sidepanel\" className={this.props.hideSelf ? 'nodisplay' : null}>\n        <SideNavbar\n          state={view}\n          title={title}\n          avatar={avatar}\n          myUserId={this.props.myUserId}\n          onSignUp={this.props.onSignUp}\n          onSettings={this.props.onSettings}\n          onNewTopic={this.handleNewTopic}\n          onCancel={onCancel} />\n\n        <ErrorPanel\n          level={this.props.errorLevel}\n          text={this.props.errorText}\n          action={this.props.errorAction}\n          actionText={this.props.errorActionText}\n          onClearError={this.props.onError} />\n\n        <LoadSpinner show={this.props.loadSpinnerVisible} />\n\n        {view === 'login' ?\n          <LoginView\n            login={this.props.login}\n            disabled={this.props.loginDisabled}\n            onLogin={this.handleLoginRequested} /> :\n\n          view === 'register' ?\n          <CreateAccountView\n            onCreateAccount={this.props.onCreateAccount}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'settings' ?\n          <SettingsView\n            transport={this.props.transport}\n            serverAddress={this.props.serverAddress}\n            onCancel={this.props.onCancel}\n            onUpdate={this.props.onGlobalSettings} /> :\n\n          view === 'edit' ?\n          <EditAccountView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            onBasicNavigate={this.props.onBasicNavigate} /> :\n\n          view === 'general' ?\n          <AccGeneralView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            onUpdateAccount={this.props.onUpdateAccount}\n            onUpdateTags={this.props.onUpdateAccountTags}\n            onCredAdd={this.props.onCredAdd}\n            onCredDelete={this.props.onCredDelete}\n            onCredConfirm={this.props.onCredConfirm}\n            onBasicNavigate={this.props.onBasicNavigate}\n            onError={this.props.onError} /> :\n\n          view === 'notif' ?\n          <AccNotificationsView\n            messageSounds={this.props.messageSounds}\n            desktopAlerts={this.props.desktopAlerts}\n            desktopAlertsEnabled={this.props.desktopAlertsEnabled}\n            incognitoMode={this.props.incognitoMode}\n            onTogglePushNotifications={this.props.onTogglePushNotifications}\n            onToggleMessageSounds={this.props.onToggleMessageSounds}\n            onToggleIncognitoMode={this.props.onToggleIncognitoMode} /> :\n\n          view === 'security' ?\n          <AccSecurityView\n            tinode={this.props.tinode}\n            onUpdateAccount={this.props.onUpdateAccount}\n            onLogout={this.props.onLogout}\n            onDeleteAccount={this.props.onDeleteAccount}\n            onShowAlert={this.props.onShowAlert}\n            onShowBlocked={this.props.onShowBlocked} /> :\n\n          view === 'support' ?\n          <AccSupportView\n            serverAddress={this.props.serverAddress}\n            serverVersion={this.props.serverVersion} /> :\n\n          (view === 'contacts' || view == 'archive' || view == 'blocked') ?\n          <ContactsView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            connected={this.props.connected}\n            topicSelected={this.props.topicSelected}\n            archive={view == 'archive'}\n            blocked={view == 'blocked'}\n            chatList={this.props.chatList}\n            showContextMenu={this.props.showContextMenu}\n            onTopicSelected={this.props.onTopicSelected}\n            onShowArchive={this.props.onShowArchive} /> :\n\n          view === 'newtpk' ?\n          <NewTopicView\n            tinode={this.props.tinode}\n            searchResults={this.props.searchResults}\n            onInitFind={this.props.onInitFind}\n            onSearchContacts={this.props.onSearchContacts}\n            onCreateTopic={this.props.onCreateTopic}\n            onError={this.props.onError} /> :\n\n          view === 'cred' ?\n          <ValidationView\n            credCode={this.props.credCode}\n            credMethod={this.props.credMethod}\n            onSubmit={this.props.onValidateCredentials}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'reset' ?\n          <PasswordResetView\n            onRequest={this.props.onPasswordResetRequest}\n            onReset={this.props.onResetPassword} /> :\n          null}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SidepanelView);\n","import { KNOWN_HOSTS, DEFAULT_HOST } from '../config.js';\n\n// Detect server address from the URL\nexport function detectServerAddress() {\n  let host = DEFAULT_HOST;\n  if (typeof window.location == 'object') {\n    if (window.location.protocol == 'file:' || window.location.hostname == 'localhost') {\n      host = KNOWN_HOSTS.local;\n    } else if (window.location.hostname) {\n      host = window.location.hostname + (window.location.port ? ':' + window.location.port : '');\n    }\n  }\n  return host;\n}\n\n// Detect if the page is served over HTTPS.\nexport function isSecureConnection() {\n  if (typeof window.location == 'object') {\n    return window.location.protocol == 'https:';\n  }\n  return false;\n}\n\nexport function isLocalHost() {\n  if (typeof window.location == 'object') {\n    return window.location.hostname == 'localhost';\n  }\n  return false;\n}\n","// The top-level class to hold all functionality together.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport * as firebase from 'firebase/app';\nimport 'firebase/messaging';\n\nimport Tinode from 'tinode-sdk';\n\nimport Alert from '../widgets/alert.jsx';\nimport ContextMenu from '../widgets/context-menu.jsx';\n\nimport InfoView from './info-view.jsx';\nimport MessagesView from './messages-view.jsx';\nimport SidepanelView from './sidepanel-view.jsx';\n\nimport { API_KEY, APP_NAME, DEFAULT_P2P_ACCESS_MODE, LOGGING_ENABLED,\n  MEDIA_BREAKPOINT, RECEIVED_DELAY } from '../config.js';\nimport { base64ReEncode, makeImageUrl } from '../lib/blob-helpers.js';\nimport { detectServerAddress, isLocalHost, isSecureConnection } from '../lib/host-name.js';\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { secondsToTime } from '../lib/strformat.js'\nimport { updateFavicon } from '../lib/utils.js';\n\n// Sound to play on message received.\nconst POP_SOUND = new Audio('audio/msg.mp3');\n\nconst messages = defineMessages({\n  reconnect_countdown: {\n    id: 'reconnect_countdown',\n    defaultMessage: 'Disconnected. Reconnecting in {seconds}…',\n    description: 'Message shown when an app update is available.'\n  },\n  reconnect_now: {\n    id: 'reconnect_now',\n    defaultMessage: 'Try now',\n    description: 'Prompt for reconnecting now'\n  },\n  push_init_failed: {\n    id: 'push_init_failed',\n    defaultMessage: 'Failed to initialize push notifications',\n    description: 'Error message when push notifications have failed to initialize.'\n  },\n  invalid_security_token: {\n    id: 'invalid_security_token',\n    defaultMessage: 'Invalid security token',\n    description: 'Error message when resetting password.'\n  },\n  no_connection: {\n    id: 'no_connection',\n    defaultMessage: 'No connection',\n    description: 'Warning that the user is offline.'\n  },\n  code_doesnot_match: {\n    id: 'code_doesnot_match',\n    defaultMessage: 'Code does not match',\n    description: 'Error message when the credential validation code is incorrect.'\n  }\n});\n\nclass TinodeWeb extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = this.getBlankState();\n\n    this.handleResize = this.handleResize.bind(this);\n    this.handleHashRoute = this.handleHashRoute.bind(this);\n    this.handleOnline = this.handleOnline.bind(this);\n    this.checkForAppUpdate = this.checkForAppUpdate.bind(this);\n    this.handleVisibilityEvent = this.handleVisibilityEvent.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.handleLoginRequest = this.handleLoginRequest.bind(this);\n    this.handleConnected = this.handleConnected.bind(this);\n    this.handleAutoreconnectIteration = this.handleAutoreconnectIteration.bind(this);\n    this.doLogin = this.doLogin.bind(this);\n    this.handleCredentialsRequest = this.handleCredentialsRequest.bind(this);\n    this.handleLoginSuccessful = this.handleLoginSuccessful.bind(this);\n    this.handleDisconnect = this.handleDisconnect.bind(this);\n    this.tnMeMetaDesc = this.tnMeMetaDesc.bind(this);\n    this.tnMeContactUpdate = this.tnMeContactUpdate.bind(this);\n    this.tnMeSubsUpdated = this.tnMeSubsUpdated.bind(this);\n    this.resetContactList = this.resetContactList.bind(this);\n    this.tnData = this.tnData.bind(this);\n    this.tnInitFind = this.tnInitFind.bind(this);\n    this.tnFndSubsUpdated = this.tnFndSubsUpdated.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleTopicSelected = this.handleTopicSelected.bind(this);\n    this.handleHideMessagesView = this.handleHideMessagesView.bind(this);\n    this.handleSendMessage = this.handleSendMessage.bind(this);\n    this.handleNewChatInvitation = this.handleNewChatInvitation.bind(this);\n    this.handleNewAccount = this.handleNewAccount.bind(this);\n    this.handleNewAccountRequest = this.handleNewAccountRequest.bind(this);\n    this.handleUpdateAccountRequest = this.handleUpdateAccountRequest.bind(this);\n    this.handleUpdateAccountTagsRequest = this.handleUpdateAccountTagsRequest.bind(this);\n    this.handleToggleIncognitoMode = this.handleToggleIncognitoMode.bind(this);\n    this.handleSettings = this.handleSettings.bind(this);\n    this.handleGlobalSettings = this.handleGlobalSettings.bind(this);\n    this.handleShowArchive = this.handleShowArchive.bind(this);\n    this.handleShowBlocked = this.handleShowBlocked.bind(this);\n    this.handleToggleMessageSounds = this.handleToggleMessageSounds.bind(this);\n    this.handleCredAdd = this.handleCredAdd.bind(this);\n    this.handleCredDelete = this.handleCredDelete.bind(this);\n    this.handleCredConfirm = this.handleCredConfirm.bind(this);\n    this.initDesktopAlerts = this.initDesktopAlerts.bind(this);\n    this.togglePushToken = this.togglePushToken.bind(this);\n    this.requestPushToken = this.requestPushToken.bind(this);\n    this.handleSidepanelCancel = this.handleSidepanelCancel.bind(this);\n    this.handleStartTopicRequest = this.handleStartTopicRequest.bind(this);\n    this.handleNewTopicCreated = this.handleNewTopicCreated.bind(this);\n    this.handleTopicUpdateRequest = this.handleTopicUpdateRequest.bind(this);\n    this.handleChangePermissions = this.handleChangePermissions.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n    this.handleDeleteMessagesRequest = this.handleDeleteMessagesRequest.bind(this);\n    this.handleLeaveUnsubRequest = this.handleLeaveUnsubRequest.bind(this);\n    this.handleBlockTopicRequest = this.handleBlockTopicRequest.bind(this);\n    this.handleReportTopic = this.handleReportTopic.bind(this);\n    this.handleShowContextMenu = this.handleShowContextMenu.bind(this);\n    this.defaultTopicContextMenu = this.defaultTopicContextMenu.bind(this);\n    this.handleHideContextMenu = this.handleHideContextMenu.bind(this);\n    this.handleShowAlert = this.handleShowAlert.bind(this);\n    this.handleShowInfoView = this.handleShowInfoView.bind(this);\n    this.handleHideInfoView = this.handleHideInfoView.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleValidateCredentialsRequest = this.handleValidateCredentialsRequest.bind(this);\n    this.handlePasswordResetRequest = this.handlePasswordResetRequest.bind(this);\n    this.handleResetPassword = this.handleResetPassword.bind(this);\n    this.handleContextMenuAction = this.handleContextMenuAction.bind(this);\n  }\n\n  getBlankState() {\n    const settings = LocalStorageUtil.getObject('settings') || {};\n\n    return {\n      connected: false,\n      // Connected and subscribed to 'me'\n      ready: false,\n      // Try to re-login on new connection.\n      autoLogin: false,\n      transport: settings.transport || null,\n      serverAddress: settings.serverAddress || detectServerAddress(),\n      serverVersion: \"no connection\",\n      // \"On\" is the default, so saving the \"off\" state.\n      messageSounds: !settings.messageSoundsOff,\n      incognitoMode: false,\n      desktopAlerts: settings.desktopAlerts,\n      desktopAlertsEnabled: (isSecureConnection() || isLocalHost()) &&\n        (typeof firebase != 'undefined') && (typeof navigator != 'undefined') &&\n        (typeof FIREBASE_INIT != 'undefined'),\n      firebaseToken: LocalStorageUtil.getObject('firebase-token'),\n\n      applicationVisible: !document.hidden,\n\n      errorText: '',\n      errorLevel: null,\n      errorAction: undefined,\n      errorActionText: null,\n\n      sidePanelSelected: 'login',\n      sidePanelTitle: null,\n      sidePanelAvatar: null,\n      loadSpinnerVisible: false,\n\n      login: '',\n      password: '',\n      myUserId: null,\n      liveConnection: navigator.onLine,\n      topicSelected: '',\n      topicSelectedOnline: false,\n      topicSelectedAcs: null,\n      newTopicParams: null,\n      loginDisabled: false,\n      displayMobile: (window.innerWidth <= MEDIA_BREAKPOINT),\n      showInfoPanel: false,\n      mobilePanel: 'sidepanel',\n\n      contextMenuVisible: false,\n      contextMenuBounds: null,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuItems: [],\n\n      // Modal alert dialog.\n      alertVisible: false,\n      alertParams: {},\n\n      // Chats as shown in the ContactsView\n      chatList: [],\n      // Contacts returned by a search query.\n      searchResults: [],\n      // Merged results of a search query and p2p chats.\n      searchableContacts: [],\n      credMethod: undefined,\n      credCode: undefined\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    window.addEventListener('online', (e) => { this.handleOnline(true); });\n    window.addEventListener('offline', (e) => { this.handleOnline(false); });\n    window.addEventListener('hashchange', this.handleHashRoute);\n    // Window/tab visible or invisible for pausing timers.\n    document.addEventListener('visibilitychange', this.handleVisibilityEvent);\n\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n\n    const {formatMessage, locale} = this.props.intl;\n    this.tinode = TinodeWeb.tnSetup(this.state.serverAddress, this.state.transport, locale);\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n\n    // Initialize desktop alerts.\n    if (this.state.desktopAlertsEnabled) {\n      try {\n        this.fbPush = firebase.initializeApp(FIREBASE_INIT, APP_NAME).messaging();\n        this.fbPush.usePublicVapidKey(FIREBASE_INIT.messagingVapidKey);\n        navigator.serviceWorker.register('/service-worker.js').then((reg) => {\n          this.checkForAppUpdate(reg);\n          this.fbPush.useServiceWorker(reg);\n          reg.active.postMessage(JSON.stringify({locale: locale}));\n          this.initDesktopAlerts();\n          if (this.state.desktopAlerts) {\n            if (!this.state.firebaseToken) {\n              this.togglePushToken(true);\n            } else {\n              this.tinode.setDeviceToken(this.state.firebaseToken, true);\n            }\n          }\n        }).catch((err) => {\n          // registration failed :(\n          console.log(\"Failed to register service worker:\", err);\n        });\n      } catch (err) {\n        this.handleError(formatMessage(messages.push_init_failed), 'err');\n        console.log(\"Failed to initialize push notifications\", err);\n        this.setState({desktopAlertsEnabled: false});\n      }\n    }\n\n    const token = LocalStorageUtil.getObject('keep-logged-in') ?\n      LocalStorageUtil.getObject('auth-token') : undefined;\n\n    const parsedNav = HashNavigation.parseUrlHash(window.location.hash);\n    if (token) {\n      this.setState({autoLogin: true});\n\n      // When reading from storage, date is returned as string.\n      token.expires = new Date(token.expires);\n      this.tinode.setAuthToken(token);\n      this.tinode.connect().catch((err) => {\n        // Socket error\n        this.handleError(err.message, 'err');\n      });\n      delete parsedNav.params.info;\n      delete parsedNav.params.tab;\n      parsedNav.path[0] = '';\n      HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsedNav.path, parsedNav.params));\n    } else if (!parsedNav.params.token) {\n      HashNavigation.navigateTo('');\n    }\n\n    this.readTimer = null;\n    this.readTimerCallback = null;\n\n    this.handleHashRoute();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n    window.removeEventListener('hashchange', this.handleHashRoute);\n    document.removeEventListener('visibilitychange', this.handleVisibilityEvent);\n  }\n\n  // Setup transport (usually websocket) and server address. This will terminate connection with the server.\n  static tnSetup(serverAddress, transport, locale) {\n    const tinode = new Tinode(APP_NAME, serverAddress, API_KEY, transport, isSecureConnection());\n    tinode.setHumanLanguage(locale);\n    tinode.enableLogging(LOGGING_ENABLED, true);\n    return tinode;\n  }\n\n  handleResize() {\n    const mobile = document.documentElement.clientWidth <= MEDIA_BREAKPOINT;\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n    if (this.state.displayMobile != mobile) {\n      this.setState({displayMobile: mobile});\n    }\n  }\n\n  // Check if a newer version of TinodeWeb app is available at the server.\n  checkForAppUpdate(reg) {\n    reg.onupdatefound = () => {\n      const installingWorker = reg.installing;\n      installingWorker.onstatechange = () => {\n        if (installingWorker.state == 'installed' && navigator.serviceWorker.controller) {\n          const msg = <>\n            <FormattedMessage id=\"update_available\"\n              defaultMessage=\"Update available.\"\n              description=\"Message shown when an app update is available.\" /> <a href=\"\">\n              <FormattedMessage id=\"reload_update\"\n                defaultMessage=\"Reload\"\n                description=\"Call to action to reload application when update is available.\" />\n            </a>.</>;\n          this.handleError(msg, 'info');\n        }\n      }\n    }\n  }\n\n  // Handle for hashchange event: display appropriate panels.\n  handleHashRoute() {\n    const hash = HashNavigation.parseUrlHash(window.location.hash);\n    if (hash.path && hash.path.length > 0) {\n      // Left-side panel selector.\n      if (['register','settings','edit','notif','security','support','general',\n          'cred','reset','newtpk','archive','blocked','contacts',''].includes(hash.path[0])) {\n        this.setState({sidePanelSelected: hash.path[0]});\n      } else {\n        console.log(\"Unknown sidepanel view\", hash.path[0]);\n      }\n\n      // Topic for MessagesView selector.\n      if (hash.path.length > 1 && hash.path[1] != this.state.topicSelected) {\n        this.setState({\n          topicSelected: Tinode.topicType(hash.path[1]) ? hash.path[1] : null\n        });\n      }\n    } else {\n      // Empty hashpath\n      this.setState({sidePanelSelected: ''});\n    }\n\n    // Save validation credentials, if available.\n    if (hash.params.method) {\n      this.setState({ credMethod: hash.params.method });\n    }\n    if (hash.params.code) {\n      this.setState({ credCode: hash.params.code });\n    }\n\n    // Additional parameters of panels.\n    this.setState({\n      showInfoPanel: hash.params.info,\n      newTopicTabSelected: hash.params.tab\n    });\n  }\n\n  handleOnline(online) {\n    if (online) {\n      this.handleError();\n    } else {\n      this.handleError(this.props.intl.formatMessage(messages.no_connection), 'warn');\n    }\n    this.setState({liveConnection: online});\n  }\n\n  handleVisibilityEvent() {\n    this.setState({applicationVisible: !document.hidden});\n  }\n\n  handleError(err, level, action, actionText) {\n    this.setState({errorText: err, errorLevel: level, errorAction: action, errorActionText: actionText});\n  }\n\n  // User clicked Login button in the side panel.\n  handleLoginRequest(login, password) {\n    this.setState({\n      loginDisabled: true,\n      login: login,\n      password: password,\n      loadSpinnerVisible: true,\n      autoLogin: true\n    });\n    this.handleError('', null);\n\n    if (this.tinode.isConnected()) {\n      this.doLogin(login, password, {meth: this.state.credMethod, resp: this.state.credCode});\n    } else {\n      this.tinode.connect().catch((err) => {\n        // Socket error\n        this.setState({loginDisabled: false, autoLogin: false, loadSpinnerVisible: false});\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // Connection succeeded.\n  handleConnected() {\n    const params = this.tinode.getServerInfo();\n    this.setState({\n      serverVersion: params.ver + ' ' + (params.build ? params.build : 'none')\n    });\n\n    if (this.state.autoLogin) {\n      this.doLogin(this.state.login, this.state.password, {meth: this.state.credMethod, resp: this.state.credCode});\n    }\n  }\n\n  // Called for each auto-reconnect iteration.\n  handleAutoreconnectIteration(sec, prom) {\n    clearInterval(this.reconnectCountdown);\n\n    if (sec < 0) {\n      // Clear error\n      this.handleError();\n      return;\n    }\n\n    if (prom) {\n      // Reconnecting now\n      prom.then(() => {\n        // Reconnected: clear error\n        this.handleError();\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n      return;\n    }\n\n    const {formatMessage} = this.props.intl;\n    let count = sec / 1000;\n    count = count | count;\n    this.reconnectCountdown = setInterval(() => {\n      const timeLeft = (count > 99) ? secondsToTime(count) : count;\n      this.handleError(\n        formatMessage(messages.reconnect_countdown, {seconds: timeLeft}),\n        'warn',\n        () => {\n          clearInterval(this.reconnectCountdown);\n          this.tinode.reconnect();\n        },\n        formatMessage(messages.reconnect_now)\n      );\n      count -= 1;\n    }, 1000);\n  }\n\n  // Connection lost\n  handleDisconnect(err) {\n    this.setState({\n      connected: false,\n      ready: false,\n      topicSelectedOnline: false,\n      errorText: err && err.message ? err.message : \"Disconnected\",\n      errorLevel: err && err.message ? 'err' : 'warn',\n      loginDisabled: false,\n      contextMenuVisible: false,\n      serverVersion: \"no connection\"\n    });\n  }\n\n  doLogin(login, password, cred) {\n    if (this.tinode.isAuthenticated()) {\n      // Already logged in. Go to default screen.\n      HashNavigation.navigateTo('');\n      return;\n    }\n    // Sanitize and package credentail.\n    cred = Tinode.credential(cred);\n    // Try to login with login/password. If they are not available, try token. If no token, ask for login/password.\n    let promise = null;\n    const token = this.tinode.getAuthToken();\n    if (login && password) {\n      this.setState({password: null});\n      promise = this.tinode.loginBasic(login, password, cred);\n    } else if (token) {\n      promise = this.tinode.loginToken(token.token, cred);\n    }\n\n    if (promise) {\n      promise.then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text === 'validate credentials') {\n          this.setState({loadSpinnerVisible: false});\n          if (cred) {\n            this.handleError(this.props.intl.formatMessage(messages.code_doesnot_match), 'warn');\n          }\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful();\n        }\n      }).catch((err) => {\n        // Login failed, report error.\n        this.setState({\n          loginDisabled: false,\n          credMethod: undefined,\n          credCode: undefined,\n          loadSpinnerVisible: false,\n          autoLogin: false\n        });\n        this.handleError(err.message, 'err');\n        localStorage.removeItem('auth-token');\n        HashNavigation.navigateTo('');\n      });\n    } else {\n      // No login credentials provided.\n      // Make sure we are on the login page.\n      HashNavigation.navigateTo('');\n      this.setState({loginDisabled: false});\n    }\n  }\n\n  handleCredentialsRequest(params) {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    parsed.path[0] = 'cred';\n    parsed.params['method'] = params.cred[0];\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n  }\n\n  handleLoginSuccessful() {\n    this.handleError();\n\n    // Refresh authentication token.\n    if (LocalStorageUtil.getObject('keep-logged-in')) {\n      LocalStorageUtil.setObject('auth-token', this.tinode.getAuthToken());\n    }\n    // Logged in fine, subscribe to 'me' attaching callbacks from the contacts view.\n    const me = this.tinode.getMeTopic();\n    me.onMetaDesc = this.tnMeMetaDesc;\n    me.onContactUpdate = this.tnMeContactUpdate;\n    me.onSubsUpdated = this.tnMeSubsUpdated;\n    this.setState({\n      connected: true,\n      credMethod: undefined,\n      credCode: undefined,\n      myUserId: this.tinode.getCurrentUserID(),\n      autoLogin: true,\n    });\n    // Subscribe, fetch topic desc, the list of subscriptions. Messages are not fetched.\n    me.subscribe(\n      me.startMetaQuery().\n        withLaterSub().\n        withDesc().\n        withTags().\n        withCred().\n        build()\n      ).catch((err) => {\n        this.tinode.disconnect();\n        localStorage.removeItem('auth-token');\n        this.handleError(err.message, 'err');\n        HashNavigation.navigateTo('');\n      }).finally(() => {\n        this.setState({loadSpinnerVisible: false});\n      });\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, 'contacts'));\n  }\n\n  tnMeMetaDesc(desc) {\n    if (desc) {\n      if (desc.public) {\n        this.setState({\n          sidePanelTitle: desc.public.fn,\n          sidePanelAvatar: makeImageUrl(desc.public.photo)\n        });\n      }\n      if (desc.acs) {\n        this.setState({\n          incognitoMode: !desc.acs.isPresencer()\n        });\n      }\n    }\n  }\n\n  // Reactions to updates to the contact list.\n  tnMeContactUpdate(what, cont) {\n    if (what == 'on' || what == 'off') {\n      this.resetContactList();\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedOnline: (what == 'on')});\n      }\n    } else if (what == 'read') {\n      this.resetContactList();\n    } else if (what == 'msg') {\n      // Check if the topic is archived. If so, don't play a sound.\n      const topic = this.tinode.getTopic(cont.topic);\n      const archived = topic && topic.isArchived();\n\n      // New message received. Maybe the message is from the current user, then unread is 0.\n      if (cont.unread > 0 && this.state.messageSounds && !archived) {\n        // Skip update if the topic is currently open, otherwise the badge will annoyingly flash.\n        if (document.hidden || this.state.topicSelected != cont.topic) {\n          POP_SOUND.play();\n        }\n      }\n      // Reorder contact list to use possibly updated 'touched'.\n      this.resetContactList();\n    } else if (what == 'recv') {\n      // Explicitly ignoring \"recv\" -- it causes no visible updates to contact list.\n    } else if (what == 'gone' || what == 'unsub') {\n      // Topic deleted or user unsubscribed. Remove topic from view.\n      // If the currently selected topic is gone, clear the selection.\n      if (this.state.topicSelected == cont.topic) {\n        this.handleTopicSelected(null);\n      }\n      // Redraw without the deleted topic.\n      this.resetContactList();\n    } else if (what == 'acs') {\n      // Permissions changed. If it's for the currently selected topic,\n      // update the views.\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedAcs: cont.acs});\n      }\n    } else if (what == 'del') {\n      // TODO: messages deleted (hard or soft) -- update pill counter.\n    } else if (what == 'upd') {\n      // upd - handled by the SDK. Explicitly ignoring here.\n    } else {\n      // TODO(gene): handle other types of notifications:\n      // * ua -- user agent changes (maybe display a pictogram for mobile/desktop).\n      console.log(\"Unsupported (yet) presence update:\" + what + \" in: \" + cont.topic);\n    }\n  }\n\n  tnMeSubsUpdated(unused) {\n    this.resetContactList();\n  }\n\n  // Merge search results and contact list to create a single flat\n  // list of kown contacts for GroupManager to use.\n  static prepareSearchableContacts(chatList, foundContacts) {\n    const merged = {};\n\n    // For chatList topics merge only p2p topics and convert them to the\n    // same format as foundContacts.\n    for (const c of chatList) {\n      if (Tinode.isP2PTopicName(c.topic)) {\n          merged[c.topic] = {\n            user: c.topic,\n            updated: c.updated,\n            public: c.public,\n            private: c.private,\n            acs: c.acs\n          };\n      }\n    }\n\n    // Add all foundCountacts if they have not been added already.\n    for (const c of foundContacts) {\n      if (!merged[c.user]) {\n        merged[c.user] = c;\n      }\n    }\n\n    return Object.values(merged);\n  }\n\n  resetContactList() {\n    const newState = {\n      chatList: []\n    };\n\n    if (!this.state.ready) {\n      newState.ready = true;\n    }\n\n    this.tinode.getMeTopic().contacts((c) => {\n      newState.chatList.push(c);\n      if (this.state.topicSelected == c.topic) {\n        newState.topicSelectedOnline = c.online;\n        newState.topicSelectedAcs = c.acs;\n      }\n    });\n    // Merge search results and chat list.\n    newState.searchableContacts = TinodeWeb.prepareSearchableContacts(newState.chatList, this.state.searchResults);\n    this.setState(newState);\n  }\n\n  // Sending \"received\" notifications\n  tnData(data) {\n    const topic = this.tinode.getTopic(data.topic);\n    if (topic.msgStatus(data) >= Tinode.MESSAGE_STATUS_SENT && data.from != this.state.myUserId) {\n      clearTimeout(this.receivedTimer);\n      this.receivedTimer = setTimeout(() => {\n        this.receivedTimer = undefined;\n        topic.noteRecv(data.seq);\n      }, RECEIVED_DELAY);\n    }\n  }\n\n  /* Fnd topic: find contacts by tokens */\n  tnInitFind() {\n    const fnd = this.tinode.getFndTopic();\n    fnd.onSubsUpdated = this.tnFndSubsUpdated;\n    if (fnd.isSubscribed()) {\n      this.tnFndSubsUpdated();\n    } else {\n      fnd.subscribe(fnd.startMetaQuery().withSub().build()).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  tnFndSubsUpdated() {\n    const foundContacts = [];\n    // Don't attempt to create P2P topics which already exist. Server will reject the duplicates.\n    this.tinode.getFndTopic().contacts((s) => {\n      foundContacts.push(s);\n    });\n    this.setState({\n      searchResults: foundContacts,\n      searchableContacts: TinodeWeb.prepareSearchableContacts(this.state.chatList, foundContacts)\n    });\n  }\n\n  /** Called when the user enters a contact into the contact search field in the NewAccount panel\n    @param query {Array} is an array of contacts to search for\n   */\n  handleSearchContacts(query) {\n    const fnd = this.tinode.getFndTopic();\n    fnd.setMeta({desc: {public: query}}).then((ctrl) => {\n      return fnd.getMeta(fnd.startMetaQuery().withSub().build());\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  // User clicked on a contact in the side panel or deleted a contact.\n  handleTopicSelected(topicName) {\n    // Clear newTopicParams after use.\n    if (this.state.newTopicParams && this.state.newTopicParams._topicName != topicName) {\n      this.setState({\n        newTopicParams: null\n      });\n    }\n\n    if (topicName) {\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'topic-view',\n        showInfoPanel: false\n      });\n      // Different contact selected.\n      if (this.state.topicSelected != topicName) {\n        this.setState({\n          topicSelectedOnline: this.tinode.isTopicOnline(topicName),\n          topicSelectedAcs: this.tinode.getTopicAccessMode(topicName)\n        });\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', topicName));\n      }\n    } else {\n      // Currently selected contact deleted\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'sidepanel',\n        topicSelectedOnline: false,\n        topicSelectedAcs: null,\n        showInfoPanel: false\n      });\n\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic('', null));\n    }\n  }\n\n  // In mobile view user requested to show sidepanel\n  handleHideMessagesView() {\n    this.setState({\n      mobilePanel: 'sidepanel'\n    });\n    HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, null));\n  }\n\n  // User is sending a message, either plain text or a drafty object, possibly\n  // with attachments.\n  //  - msg - Drafty message with content\n  //  - promise - Promise to be resolved when the upload is completed\n  //  - uploader - for tracking progress\n  handleSendMessage(msg, promise, uploader) {\n    const topic = this.tinode.getTopic(this.state.topicSelected);\n\n    msg = topic.createMessage(msg, false);\n    // The uploader is used to show progress.\n    msg._uploader = uploader;\n\n    if (!topic.isSubscribed()) {\n      if (!promise) {\n        promise = Promise.resolve();\n      }\n      promise = promise.then(() => { return topic.subscribe(); });\n    }\n\n    if (promise) {\n      promise = promise.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n\n    topic.publishDraft(msg, promise)\n      .then((ctrl) => {\n        if (topic.isArchived()) {\n          return topic.archive(false);\n        }\n      })\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleNewChatInvitation(topicName, action) {\n    const topic = this.tinode.getTopic(topicName);\n    let response = null;\n    switch (action) {\n      case 'accept':\n        // Accept given permissions.\n        const mode = topic.getAccessMode().getGiven();\n        response = topic.setMeta({sub: {mode: mode}});\n        if (topic.isP2P()) {\n          // For P2P topics change 'given' permission of the peer too.\n          // In p2p topics the other user has the same name as the topic.\n          response = response.then((ctrl) => {\n            topic.setMeta({sub: {user: topicName, mode: mode}});\n          });\n        }\n        break;\n      case 'delete':\n        // Ignore invitation by deleting it.\n        response = topic.delTopic(true);\n        break;\n      case 'block':\n        // Ban the topic making futher invites impossible.\n        // Just self-ban.\n        const am = topic.getAccessMode().updateWant('-JP').getWant();\n        response = topic.setMeta({sub: {mode: am}}).then((ctrl) => {\n          return this.handleTopicSelected(null);\n        });\n        break;\n      default:\n        console.log(\"Unknown invitation action\", '\"' + action + '\"\"');\n    }\n\n    if (response != null) {\n      response.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // User chose a Sign Up menu item.\n  handleNewAccount() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, 'register'));\n  }\n\n  // Actual registration of a new account.\n  handleNewAccountRequest(login_, password_, public_, cred_, tags_) {\n    // Clear old error, if any.\n    this.handleError();\n\n    this.tinode.connect(this.state.serverAddress)\n      .then(() => {\n        return this.tinode.createAccountBasic(login_, password_,\n          {public: public_, tags: tags_, cred: Tinode.credential(cred_)});\n      }).then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text == 'validate credentials') {\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful(this);\n        }\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleUpdateAccountRequest(password, pub, defacs) {\n    this.handleError();\n\n    if (pub || defacs) {\n      const params = {};\n      if (pub) {\n        params.public = pub;\n      }\n      if (defacs) {\n        params.defacs = defacs;\n      }\n      this.tinode.getMeTopic().setMeta({desc: params}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n    if (password) {\n      this.tinode.updateAccountBasic(null, this.tinode.getCurrentLogin(), password).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleToggleIncognitoMode(on) {\n    const me = this.tinode.getMeTopic();\n    const am = me.getAccessMode().updateWant(on ? '-P' : '+P').getWant();\n    me.setMeta({sub: {mode: am}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleUpdateAccountTagsRequest(tags) {\n    this.tinode.getMeTopic().setMeta({tags: tags})\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  // User chose Settings menu item.\n  handleSettings() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'edit' : 'settings'));\n  }\n\n  // User updated global parameters.\n  handleGlobalSettings(settings) {\n    const serverAddress = settings.serverAddress || this.state.serverAddress;\n    const transport = settings.transport || this.state.transport;\n    if (this.tinode) {\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.tinode = TinodeWeb.tnSetup(serverAddress, transport, this.props.intl.locale);\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n\n    this.setState({\n      serverAddress: serverAddress,\n      transport: transport\n    });\n    LocalStorageUtil.setObject('settings', {\n      serverAddress: serverAddress,\n      transport: transport\n    });\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, ''));\n  }\n\n  // User chose 'Archived chats'.\n  handleShowArchive() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'archive' : ''));\n  }\n\n  // User viewes 'Blocked chats'.\n  handleShowBlocked() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'blocked' : ''));\n  }\n\n  // Initialize desktop alerts = push notifications.\n  initDesktopAlerts() {\n    // Google could not be bothered to mention that\n    // onTokenRefresh is never called.\n    this.fbPush.onTokenRefresh(() => {\n      this.requestPushToken();\n    });\n\n    this.fbPush.onMessage((payload) => {\n      // No need to do anything about it.\n      // All the magic happends in the service worker.\n    });\n  }\n\n  togglePushToken(enabled) {\n    if (enabled) {\n      if (!this.state.firebaseToken) {\n        this.fbPush.requestPermission().then(() => {\n          this.requestPushToken();\n        }).catch((err) => {\n          this.handleError(err.message, 'err');\n          this.setState({desktopAlerts: false, firebaseToken: null});\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n          console.log(\"Failed to get permission to notify.\", err);\n        });\n      } else {\n        this.setState({desktopAlerts: true});\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n      }\n    } else if (this.state.firebaseToken) {\n      this.fbPush.deleteToken(this.state.firebaseToken).catch((err) => {\n        console.log(\"Unable to delete token.\", err);\n      }).finally(() => {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        localStorage.removeItem('firebase-token');\n        this.setState({desktopAlerts: false, firebaseToken: null});\n      });\n    } else {\n      this.setState({desktopAlerts: false, firebaseToken: null});\n      LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n    }\n  }\n\n  requestPushToken() {\n    this.fbPush.getToken().then((refreshedToken) => {\n      if (refreshedToken != this.state.firebaseToken) {\n        this.tinode.setDeviceToken(refreshedToken, true);\n        LocalStorageUtil.setObject('firebase-token', refreshedToken);\n      }\n      this.setState({firebaseToken: refreshedToken, desktopAlerts: true});\n      LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n      console.log(\"Failed to retrieve firebase token\", err);\n    });\n  }\n\n  handleToggleMessageSounds(enabled) {\n    this.setState({messageSounds: enabled});\n    LocalStorageUtil.updateObject('settings', {\n      messageSoundsOff: !enabled\n    });\n  }\n\n  handleCredAdd(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.setMeta({cred: {meth: method, val: value}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredDelete(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.delCredential(method, value).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredConfirm(method, response) {\n    this.handleCredentialsRequest({cred: [method]});\n  }\n\n  // User clicked Cancel button in Setting or Sign Up panel.\n  handleSidepanelCancel() {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    let path = '';\n    if (['security','support','general','notif'].includes(parsed.path[0])) {\n      path = 'edit';\n    } else if ('blocked' == parsed.path[0]) {\n      path = 'security';\n    } else if (this.state.myUserId) {\n      path = 'contacts';\n    }\n    parsed.path[0] = path;\n    if (parsed.params) {\n      delete parsed.params.code;\n      delete parsed.params.method;\n      delete parsed.params.tab;\n    }\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n    this.setState({errorText: '', errorLevel: null});\n  }\n\n  // Basic nagigator by hash value. No need to bind to this.\n  basicNavigator(hash) {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, hash));\n  }\n\n  // Request to start a topic, new or selected from search results, or \"by ID\".\n  handleStartTopicRequest(topicName, pub, priv, tags, isChannel) {\n    // Check if topic is indeed new. If not, launch it.\n    if (topicName && this.tinode.isTopicCached(topicName)) {\n      this.handleTopicSelected(topicName);\n      return;\n    }\n\n    const params = {};\n    if (Tinode.isP2PTopicName(topicName)) {\n      // Because we are initialing the subscription, set 'want' to all permissions.\n      params.sub = {mode: DEFAULT_P2P_ACCESS_MODE};\n      // Give the other user all permissions too.\n      params.desc = {defacs: {auth: DEFAULT_P2P_ACCESS_MODE}};\n    } else {\n      topicName = topicName || this.tinode.newGroupTopicName(isChannel);\n      params.desc = {public: pub, private: {comment: priv}};\n      params.tags = tags;\n    }\n    params._topicName = topicName;\n    this.setState({newTopicParams: params}, () => {this.handleTopicSelected(topicName)});\n  }\n\n  // New topic was creted, here is the new topic name.\n  handleNewTopicCreated(oldName, newName) {\n    if (this.state.topicSelected == oldName && oldName != newName) {\n      // If the current URl contains the old topic name, replace it with new.\n      // Update the name of the selected topic first so the navigator doen't clear\n      // the state.\n      this.setState({topicSelected: newName}, () => {\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', newName));\n      });\n    }\n  }\n\n  handleTopicUpdateRequest(topicName, pub, priv, permissions) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const params = {};\n      if (pub) {\n        params.public = pub;\n      }\n      if (priv) {\n        params.private = (priv === Tinode.DEL_CHAR) ?\n          Tinode.DEL_CHAR : {comment: priv};\n      }\n      if (permissions) {\n        params.defacs = permissions;\n      }\n      topic.setMeta({desc: params}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleChangePermissions(topicName, mode, uid) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const am = topic.getAccessMode();\n      if (uid) {\n        am.updateGiven(mode);\n        mode = am.getGiven();\n      } else {\n        am.updateWant(mode);\n        mode = am.getWant();\n      }\n      topic.setMeta({sub: {user: uid, mode: mode}}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleTagsUpdated(topicName, tags) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      topic.setMeta({tags: tags}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleLogout() {\n    updateFavicon(0);\n\n    // Remove stored data.\n    localStorage.removeItem('auth-token');\n    localStorage.removeItem('firebase-token');\n    localStorage.removeItem('settings');\n    if (this.state.firebaseToken) {\n      this.fbPush.deleteToken(this.state.firebaseToken)\n    }\n\n    if (this.tinode) {\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.setState(this.getBlankState());\n    this.tinode = TinodeWeb.tnSetup(this.state.serverAddress, this.state.transport, this.props.intl.locale);\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    HashNavigation.navigateTo('');\n  }\n\n  handleDeleteAccount() {\n    this.tinode.delCurrentUser(true).then((ctrl) => {\n      this.handleLogout();\n    });\n  }\n\n  handleDeleteMessagesRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Request hard-delete all messages.\n    topic.delMessagesAll(true).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleLeaveUnsubRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.leave(true).then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleBlockTopicRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleReportTopic(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Publish spam report.\n    this.tinode.publish(Tinode.TOPIC_SYS, Tinode.Drafty.attachJSON(null, {\n      'action': 'report',\n      'target': topicName\n    }));\n\n    // Remove J and P permissions.\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleShowContextMenu(params, menuItems) {\n    this.setState({\n      contextMenuVisible: true,\n      contextMenuClickAt: {x: params.x, y: params.y},\n      contextMenuParams: params,\n      contextMenuItems: menuItems || this.defaultTopicContextMenu(params.topicName),\n      contextMenuBounds: ReactDOM.findDOMNode(this).getBoundingClientRect()\n    });\n  }\n\n  defaultTopicContextMenu(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n\n    let muted = false, blocked = false, self_blocked = false, subscribed = false, deleter = false, archived = false;\n    if (topic) {\n      subscribed = topic.isSubscribed();\n      archived = topic.isArchived();\n\n      const acs = topic.getAccessMode();\n      if (acs) {\n        muted = acs.isMuted();\n        blocked = !acs.isJoiner();\n        self_blocked = !acs.isJoiner('want');\n        deleter = acs.isDeleter();\n      }\n    }\n\n    return [\n      subscribed ? {\n        title: this.props.intl.formatMessage({id: 'menu_item_info'}),\n        handler: this.handleShowInfoView\n      } : null,\n      subscribed ? 'messages_clear' : null,\n      subscribed && deleter ? 'messages_clear_hard' : null,\n      muted ? (blocked ? null : 'topic_unmute') : 'topic_mute',\n      self_blocked ? 'topic_unblock' : 'topic_block',\n      !archived ? 'topic_archive' : null,\n      'topic_delete'\n    ];\n  }\n\n  handleHideContextMenu() {\n    this.setState({\n      contextMenuVisible: false,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuBounds: null\n    });\n  }\n\n  handleContextMenuAction(action, promise, params) {\n    if (action == 'topic_archive') {\n      if (promise && params.topicName && params.topicName == this.state.topicSelected) {\n        promise.then(() => {\n          this.handleTopicSelected(null);\n        });\n      }\n    }\n  }\n\n  handleShowAlert(title, content, onConfirm, confirmText, onReject, rejectText) {\n    this.setState({\n      alertVisible: true,\n      alertParams: {\n        title: title,\n        content: content,\n        onConfirm: onConfirm,\n        confirm: confirmText,\n        onReject: onReject,\n        reject: rejectText\n      }\n    });\n  }\n\n  handleShowInfoView() {\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'info', true));\n    this.setState({showInfoPanel: true});\n  }\n\n  handleHideInfoView() {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'info'));\n    this.setState({showInfoPanel: false});\n  }\n\n  handleMemberUpdateRequest(topicName, added, removed) {\n    if (!topicName) {\n      return;\n    }\n\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    if (added && added.length > 0) {\n      added.map((uid) => {\n        topic.invite(uid, null).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n\n    if (removed && removed.length > 0) {\n      removed.map((uid) => {\n        topic.delSubscription(uid).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n  }\n\n  handleValidateCredentialsRequest(cred, code) {\n    if (this.tinode.isAuthenticated()) {\n      const me = this.tinode.getMeTopic();\n      me.setMeta({cred: {meth: cred, resp: code}})\n        .then(() => {\n          HashNavigation.navigateTo('');\n        })\n        .catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n    } else {\n      this.setState({credMethod: cred, credCode: code});\n      this.doLogin(null, null, {meth: cred, resp: code});\n    }\n  }\n\n  handlePasswordResetRequest(method, value) {\n    // If already connected, connnect() will return a resolved promise.\n    this.tinode.connect()\n      .then(() => {\n        return this.tinode.requestResetAuthSecret('basic', method, value);\n      })\n      .catch((err) => {\n        // Socket error\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleResetPassword(scheme, newPassword, token) {\n    token = base64ReEncode(token);\n    if (!token) {\n      this.handleError(this.props.intl.formatMessage(messages.invalid_security_token), 'err');\n    } else {\n      this.tinode.connect()\n        .then(() => {\n          return this.tinode.updateAccountBasic(null, null, newPassword, {token: token});\n        })\n        .catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"app-container\">\n        {this.state.contextMenuVisible ?\n          <ContextMenu\n            tinode={this.tinode}\n            bounds={this.state.contextMenuBounds}\n            clickAt={this.state.contextMenuClickAt}\n            params={this.state.contextMenuParams}\n            items={this.state.contextMenuItems}\n            hide={this.handleHideContextMenu}\n            onShowAlert={this.handleShowAlert}\n            onAction={this.handleContextMenuAction}\n            onTopicRemoved={(topicName) => {\n              if (topicName == this.state.topicSelected) {\n                this.handleTopicSelected(null);\n              }\n            }}\n            onError={this.handleError} />\n          :\n          null\n        }\n        <Alert\n          visible={this.state.alertVisible}\n          title={this.state.alertParams.title}\n          content={this.state.alertParams.content}\n          onReject={this.state.alertParams.onReject ? (() => { this.setState({alertVisible: false}); }) : null}\n          reject={this.state.alertParams.reject}\n          onConfirm={() => { this.setState({alertVisible: false}); this.state.alertParams.onConfirm(); }}\n          confirm={this.state.alertParams.confirm}\n          />\n        <SidepanelView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          displayMobile={this.state.displayMobile}\n          hideSelf={this.state.displayMobile && this.state.mobilePanel !== 'sidepanel'}\n          state={this.state.sidePanelSelected}\n          title={this.state.sidePanelTitle}\n          avatar={this.state.sidePanelAvatar}\n          login={this.state.login}\n          myUserId={this.state.myUserId}\n          loginDisabled={this.state.loginDisabled}\n          loadSpinnerVisible={this.state.loadSpinnerVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          topicSelected={this.state.topicSelected}\n          chatList={this.state.chatList}\n          credMethod={this.state.credMethod}\n          credCode={this.state.credCode}\n\n          transport={this.state.transport}\n          messageSounds={this.state.messageSounds}\n          desktopAlerts={this.state.desktopAlerts}\n          desktopAlertsEnabled={this.state.desktopAlertsEnabled}\n          incognitoMode={this.state.incognitoMode}\n          serverAddress={this.state.serverAddress}\n          serverVersion={this.state.serverVersion}\n\n          onGlobalSettings={this.handleGlobalSettings}\n          onSignUp={this.handleNewAccount}\n          onSettings={this.handleSettings}\n          onBasicNavigate={this.basicNavigator}\n          onLoginRequest={this.handleLoginRequest}\n          onCreateAccount={this.handleNewAccountRequest}\n          onUpdateAccount={this.handleUpdateAccountRequest}\n          onUpdateAccountTags={this.handleUpdateAccountTagsRequest}\n          onTogglePushNotifications={this.togglePushToken}\n          onToggleMessageSounds={this.handleToggleMessageSounds}\n          onToggleIncognitoMode={this.handleToggleIncognitoMode}\n          onCredAdd={this.handleCredAdd}\n          onCredDelete={this.handleCredDelete}\n          onCredConfirm={this.handleCredConfirm}\n          onTopicSelected={this.handleTopicSelected}\n          onCreateTopic={this.handleStartTopicRequest}\n          onLogout={this.handleLogout}\n          onDeleteAccount={this.handleDeleteAccount}\n          onShowAlert={this.handleShowAlert}\n          onCancel={this.handleSidepanelCancel}\n          onError={this.handleError}\n          onValidateCredentials={this.handleValidateCredentialsRequest}\n          onPasswordResetRequest={this.handlePasswordResetRequest}\n          onResetPassword={this.handleResetPassword}\n          onShowArchive={this.handleShowArchive}\n          onShowBlocked={this.handleShowBlocked}\n\n          onInitFind={this.tnInitFind}\n          searchResults={this.state.searchResults}\n          onSearchContacts={this.handleSearchContacts}\n\n          showContextMenu={this.handleShowContextMenu} />\n\n        <MessagesView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          ready={this.state.ready}\n          online={this.state.topicSelectedOnline}\n          acs={this.state.topicSelectedAcs}\n          displayMobile={this.state.displayMobile}\n          viewportWidth={this.state.viewportWidth}\n          viewportHeight={this.state.viewportHeight}\n          hideSelf={this.state.displayMobile &&\n            (this.state.mobilePanel !== 'topic-view' || this.state.showInfoPanel)}\n          topic={this.state.topicSelected}\n          myUserId={this.state.myUserId}\n          serverVersion={this.state.serverVersion}\n          serverAddress={this.state.serverAddress}\n          applicationVisible={this.state.applicationVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          newTopicParams={this.state.newTopicParams}\n\n          onHideMessagesView={this.handleHideMessagesView}\n          onData={this.tnData}\n          onError={this.handleError}\n          onNewTopicCreated={this.handleNewTopicCreated}\n          showContextMenu={this.handleShowContextMenu}\n          onChangePermissions={this.handleChangePermissions}\n          onNewChat={this.handleNewChatInvitation}\n          sendMessage={this.handleSendMessage} />\n\n        {this.state.showInfoPanel ?\n          <InfoView\n            tinode={this.tinode}\n            connected={this.state.connected}\n            displayMobile={this.state.displayMobile}\n            topic={this.state.topicSelected}\n            searchableContacts={this.state.searchableContacts}\n            myUserId={this.state.myUserId}\n\n            errorText={this.state.errorText}\n            errorLevel={this.state.errorLevel}\n            errorAction={this.state.errorAction}\n            errorActionText={this.state.errorActionText}\n\n            onTopicDescUpdate={this.handleTopicUpdateRequest}\n            onCancel={this.handleHideInfoView}\n            onShowAlert={this.handleShowAlert}\n            onChangePermissions={this.handleChangePermissions}\n            onMemberUpdateRequest={this.handleMemberUpdateRequest}\n            onDeleteMessages={this.handleDeleteMessagesRequest}\n            onLeaveTopic={this.handleLeaveUnsubRequest}\n            onBlockTopic={this.handleBlockTopicRequest}\n            onReportTopic={this.handleReportTopic}\n            onAddMember={this.handleManageGroupMembers}\n            onTopicTagsUpdate={this.handleTagsUpdated}\n            onInitFind={this.tnInitFind}\n            onError={this.handleError}\n\n            showContextMenu={this.handleShowContextMenu}\n            />\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(TinodeWeb);\n","// Put all packages together.\n// Used to generate umd/index.prod.js\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { IntlProvider } from 'react-intl';\n\nimport allMessages from './messages.json';\nimport TinodeWeb from './views/tinode-web.jsx';\nimport HashNavigation from './lib/navigation.js';\n\n// Detect human language to use in the UI:\n//  Check parameters from URL hash #?hl=ru, then browser, then use 'en' as a fallback.\nconst { params } = HashNavigation.parseUrlHash(window.location.hash);\nconst language = (params && params.hl) ||\n  (navigator.languages && navigator.languages[0]) ||\n  navigator.language ||\n  navigator.userLanguage ||\n  'en';\n\n// Get the base language 'en' from a more specific 'en_GB' or 'en-US' as a partial fallback.\nconst baseLanguage = language.toLowerCase().split(/[-_]/)[0];\n\n// Try the full locale first, then the locale without the region code, fallback to 'en'.\nconst messages =\n  allMessages[language] ||\n  allMessages[baseLanguage] ||\n  allMessages.en;\n\nReactDOM.render(\n  <IntlProvider locale={language} messages={messages} textComponent={React.Fragment}>\n    <TinodeWeb />\n  </IntlProvider>,\n  document.getElementById('mountPoint')\n);\n"],"sourceRoot":""}