{"version":3,"file":"index.prod.js","mappings":"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","sources":["webpack://tinode-webapp/external \"React\"","webpack://tinode-webapp/external \"ReactDOM\"","webpack://tinode-webapp/external \"ReactIntl\"","webpack://tinode-webapp/external \"firebase\"","webpack://tinode-webapp/external \"Tinode\"","webpack://tinode-webapp/external [\"firebase\",\"messaging\"]","webpack://tinode-webapp/./src/widgets/alert.jsx","webpack://tinode-webapp/./src/version.js","webpack://tinode-webapp/./src/config.js","webpack://tinode-webapp/./src/widgets/context-menu.jsx","webpack://tinode-webapp/./src/lib/strformat.js","webpack://tinode-webapp/./src/lib/utils.js","webpack://tinode-webapp/./src/widgets/letter-tile.jsx","webpack://tinode-webapp/./src/widgets/load-spinner.jsx","webpack://tinode-webapp/./src/widgets/avatar-upload.jsx","webpack://tinode-webapp/./src/widgets/badge-list.jsx","webpack://tinode-webapp/./src/widgets/checkbox.jsx","webpack://tinode-webapp/./src/widgets/contact-badges.jsx","webpack://tinode-webapp/./src/widgets/received-marker.jsx","webpack://tinode-webapp/./src/widgets/unread-badge.jsx","webpack://tinode-webapp/./src/widgets/file-progress.jsx","webpack://tinode-webapp/./src/widgets/uploading-image.jsx","webpack://tinode-webapp/./src/lib/blob-helpers.js","webpack://tinode-webapp/./src/lib/formatters.js","webpack://tinode-webapp/./src/widgets/contact.jsx","webpack://tinode-webapp/./src/widgets/contact-action.jsx","webpack://tinode-webapp/./src/widgets/contact-list.jsx","webpack://tinode-webapp/./src/widgets/menu-cancel.jsx","webpack://tinode-webapp/./src/widgets/error-panel.jsx","webpack://tinode-webapp/./src/widgets/chip.jsx","webpack://tinode-webapp/./src/widgets/chip-input.jsx","webpack://tinode-webapp/./src/widgets/group-manager.jsx","webpack://tinode-webapp/./src/widgets/permissions-editor.jsx","webpack://tinode-webapp/./src/widgets/cropper.jsx","webpack://tinode-webapp/./src/widgets/avatar-crop.jsx","webpack://tinode-webapp/./src/widgets/visible-password.jsx","webpack://tinode-webapp/./src/widgets/in-place-edit.jsx","webpack://tinode-webapp/./src/widgets/tag-manager.jsx","webpack://tinode-webapp/./src/widgets/topic-desc-edit.jsx","webpack://tinode-webapp/./src/widgets/topic-common.jsx","webpack://tinode-webapp/./src/widgets/topic-security.jsx","webpack://tinode-webapp/./src/views/info-view.jsx","webpack://tinode-webapp/./src/widgets/attachment.jsx","webpack://tinode-webapp/./src/widgets/chat-message.jsx","webpack://tinode-webapp/./src/widgets/send-message.jsx","webpack://tinode-webapp/./src/widgets/doc-preview.jsx","webpack://tinode-webapp/./src/widgets/group-subs.jsx","webpack://tinode-webapp/./src/widgets/image-preview.jsx","webpack://tinode-webapp/./src/widgets/invitation.jsx","webpack://tinode-webapp/./src/views/logo-view.jsx","webpack://tinode-webapp/./src/lib/navigation.js","webpack://tinode-webapp/./src/views/messages-view.jsx","webpack://tinode-webapp/./src/widgets/button-back.jsx","webpack://tinode-webapp/./src/widgets/menu-contacts.jsx","webpack://tinode-webapp/./src/widgets/menu-start.jsx","webpack://tinode-webapp/./src/widgets/side-navbar.jsx","webpack://tinode-webapp/./src/views/account-settings-view.jsx","webpack://tinode-webapp/./src/views/contacts-view.jsx","webpack://tinode-webapp/./src/lib/local-storage.js","webpack://tinode-webapp/./src/views/create-account-view.jsx","webpack://tinode-webapp/./src/views/acc-notifications-view.jsx","webpack://tinode-webapp/./src/views/acc-security-view.jsx","webpack://tinode-webapp/./src/views/acc-support-view.jsx","webpack://tinode-webapp/./src/views/login-view.jsx","webpack://tinode-webapp/./src/widgets/new-topic-by-id.jsx","webpack://tinode-webapp/./src/widgets/new-topic-group.jsx","webpack://tinode-webapp/./src/widgets/search-contacts.jsx","webpack://tinode-webapp/./src/views/new-topic-view.jsx","webpack://tinode-webapp/./src/views/password-reset-view.jsx","webpack://tinode-webapp/./src/widgets/host-selector.jsx","webpack://tinode-webapp/./src/views/settings-view.jsx","webpack://tinode-webapp/./src/views/validation-view.jsx","webpack://tinode-webapp/./src/views/sidepanel-view.jsx","webpack://tinode-webapp/./src/lib/host-name.js","webpack://tinode-webapp/./src/views/tinode-web.jsx","webpack://tinode-webapp/./src/index.js","webpack://tinode-webapp/webpack/bootstrap","webpack://tinode-webapp/webpack/runtime/compat get default export","webpack://tinode-webapp/webpack/runtime/define property getters","webpack://tinode-webapp/webpack/runtime/hasOwnProperty shorthand","webpack://tinode-webapp/webpack/startup"],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = React;","const __WEBPACK_NAMESPACE_OBJECT__ = ReactDOM;","const __WEBPACK_NAMESPACE_OBJECT__ = ReactIntl;","const __WEBPACK_NAMESPACE_OBJECT__ = firebase;","const __WEBPACK_NAMESPACE_OBJECT__ = Tinode;","const __WEBPACK_NAMESPACE_OBJECT__ = firebase.messaging;","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Alert extends React.PureComponent {\n  render() {\n    return this.props.visible ?\n      <div className=\"alert-container\">\n        <div className=\"alert\">\n          <div className=\"title\">{this.props.title}</div>\n          <div className=\"content\">{this.props.content}</div>\n          <div className=\"dialog-buttons\">\n            {this.props.onReject ?\n              <button className=\"outline\" onClick={this.props.onReject}>\n                {this.props.reject || <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />}\n              </button>\n              :\n              null\n            }\n            <button className=\"primary\" onClick={this.props.onConfirm}>\n              {this.props.confirm || <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\"  />}\n            </button>\n          </div>\n        </div>\n      </div>\n    :\n    null;\n  }\n};\n","// This is a generated file. Don't edit.\n\nexport const PACKAGE_VERSION = \"0.18.0-alpha1\";\n","import { PACKAGE_VERSION } from './version.js';\n\n// Name of this application, used in the User-Agent.\nexport const APP_NAME = 'TinodeWeb/' + (PACKAGE_VERSION || '0.17');\n\n// API key. Use https://github.com/tinode/chat/tree/master/keygen to generate your own\nexport const API_KEY = 'AQEAAAABAAD_rAp4DJh05a1HAwFT3A6K';\n\n// The array of possible hosts to connect to.\nexport const KNOWN_HOSTS = {hosted: 'web.tinode.co', local: 'localhost:6060'};\n\n// Default host name and port to connect to.\nexport const DEFAULT_HOST = KNOWN_HOSTS.hosted;\n\n// Enable console logging.\nexport const LOGGING_ENABLED = true;\n\n// Minimum time between two keypress notifications, milliseconds.\nexport const KEYPRESS_DELAY = 3*1000;\n// Delay before sending a {note} for reciving a message, milliseconds.\nexport const RECEIVED_DELAY = 500;\n// Delay before sending a read notification, milliseconds.\nexport const READ_DELAY = 1000;\n\n// The default shortest allowed tag length. Matches the value on the server.\nexport const MIN_TAG_LENGTH = 2;\n// The default greatest allowed tag length. Matches the value on the server.\nexport const MAX_TAG_LENGTH = 96;\n// The default maximum number of tags allowed. Matches the value on the server.\nexport const MAX_TAG_COUNT = 16;\n\n// Access mode for P2P subscriptions initiated by the current user.\nexport const DEFAULT_P2P_ACCESS_MODE = 'JRWPS';\n// Access mode for new group topics created by the current user.\nexport const NEW_GRP_ACCESS_MODE = 'JRWPSAO';\n// Access mode for a channel.\nexport const CHANNEL_ACCESS_MODE = 'JR';\n\n// Access mode for no access.\nexport const NO_ACCESS_MODE = 'N';\n\n// Mediaquery breakpoint between desktop and mobile, in px. Should match the value\n// in @media (max-size: 640px) in base.css\nexport const MEDIA_BREAKPOINT = 640;\n// Size of css 'rem' unit in pixels. Default 1rem = 10pt = 13px.\nexport const REM_SIZE = 13;\n\n// Size of the avatar image: when image dimensions are greater or the image is not square, it's resized to\n// a square of this size or less.\nexport const AVATAR_SIZE = 384;\n\n// Maximum size of an avatar in bytes for sending in-band. Bigger avatars will be sent out of band (as uploads).\nexport const MAX_AVATAR_BYTES = 4096;\n\n// Size of the broken_image shown in MessagesView\nexport const BROKEN_IMAGE_SIZE = 32;\n\n// Number of chat messages to fetch in one call.\nexport const MESSAGES_PAGE = 24;\n\n// Default maximum in-band (included directly into the message) attachment size which fits into\n// a message of 256K in size. Used when the server-provided value is unavailable. The actual\n// binary size of the attachment should be smaller due to base64 encoding expansion and some overhead,\n// for instance 1024 bytes.\n// Increase this limit to a greater value in production, if desired. Also increase\n// max_message_size in the server config.\nexport const MAX_INBAND_ATTACHMENT_SIZE = 262144;\n\n// Default absolute maximum attachment size to be used with the server = 8MB.\n// Used when the server-provided value is unavailable. Increase to something like 100MB in production.\nexport const MAX_EXTERN_ATTACHMENT_SIZE = 1 << 23;\n\n// Maximum allowed linear dimension (pixels) of an image sent inline. Larger images will be shrunk\n// to make the larger dimension fit under this size. You may want to adjust it to 1600 or\n// 2400 for production.\nexport const MAX_IMAGE_DIM = 1024;\n\n// Linear dimensions of image preview: shrink image under this size for previews.\nexport const IMAGE_PREVIEW_DIM = 64;\n\n// Linear dimensions of image thumbnail: shrink image under this size for thumbnails in reply quote previews.\nexport const IMAGE_THUMBNAIL_DIM = 36;\n\n// Maximum number of online users to be shown in a topic title bar. Others will be\n// hidden under \"+X more\"\nexport const MAX_ONLINE_IN_TOPIC = 4;\n\n// Maximum length of user name, topic title, and private comment.\nexport const MAX_TITLE_LENGTH = 60;\n// Maximum length of topic description.\nexport const MAX_TOPIC_DESCRIPTION_LENGTH = 360;\n\n// Length of message previews in chat list, in characters.\nexport const MESSAGE_PREVIEW_LENGTH = 80;\n\n// Link for \"Contact Us\".\nexport const LINK_CONTACT_US = 'email:support@tinode.co';\n\n// Link to Privacy Policy.\nexport const LINK_PRIVACY_POLICY = 'https://tinode.co/privacy.html';\n\n// Link to Terms of Service.\nexport const LINK_TERMS_OF_SERVICE = 'https://tinode.co/terms.html';\n","// Context Menu: popup/dropdown menu.\nimport React from 'react';\nimport { injectIntl, defineMessages } from 'react-intl';\n\nimport { REM_SIZE } from '../config.js';\n\nconst messages = defineMessages({\n  info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  },\n  clear_messages: {\n    id: 'menu_item_clear_messages',\n    defaultMessage: 'Clear messages',\n    description: 'Delete all messages'\n  },\n  clear_for_all: {\n    id: 'menu_item_clear_messages_for_all',\n    defaultMessage: 'Clear for All',\n    description: 'Delete all message(s) for all members'\n  },\n  delete: {\n    id: 'menu_item_delete',\n    defaultMessage: 'Delete',\n    description: 'Delete selected messages'\n  },\n  delete_for_all: {\n    id: 'menu_item_delete_for_all',\n    defaultMessage: 'Delete for All',\n    description: 'Delete selected message(s) for all members'\n  },\n  send_retry: {\n    id: 'menu_item_send_retry',\n    defaultMessage: 'Retry',\n    description: 'Retry sending message'\n  },\n  mute: {\n    id: 'menu_item_mute',\n    defaultMessage: 'Mute',\n    description: 'Turn off notifications'\n  },\n  unmute: {\n    id: 'menu_item_unmute',\n    defaultMessage: 'Unmute',\n    description: 'Turn notifications on'\n  },\n  reply: {\n    id: 'menu_item_reply',\n    defaultMessage: 'Reply',\n    description: 'Reply to message'\n  },\n  topic_delete: {\n    id: 'menu_item_delete_topic',\n    defaultMessage: 'Delete',\n    description: 'Delete entire topic'\n  },\n  topic_delete_warning: {\n    id: 'topic_delete_warning',\n    defaultMessage: 'Are you sure you want to delete this conversation? It cannot be undone.',\n    description: 'Alert warning when deleting entire topic'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  unblock: {\n    id: 'menu_item_unblock',\n    defaultMessage: 'Unblock',\n    description: 'Unblock topic or user'\n  },\n  // Generic string suitable for either topic or user.\n  block: {\n    id: 'menu_item_block',\n    defaultMessage: 'Block',\n    description: 'Block topic or user'\n  },\n  topic_block_warning: {\n    id: 'topic_block_warning',\n    defaultMessage: 'Are you sure you want to block this conversation?',\n    description: 'Alert warning when blocking a topic.'\n  },\n  member_delete: {\n    id: 'menu_item_member_delete',\n    defaultMessage: 'Remove',\n    description: 'Remove user from topic'\n  },\n  archive: {\n    id: 'menu_item_archive_topic',\n    defaultMessage: 'Archive',\n    description: 'Move topic from the list of active chats to archive'\n  },\n  unarchive: {\n    id: 'menu_item_restore_topic',\n    defaultMessage: 'Restore',\n    description: 'Restore topic from archive'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n});\n\nclass ContextMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selfRef = React.createRef();\n\n    const {formatMessage} = props.intl;\n\n    this.handlePageClick = this.handlePageClick.bind(this);\n    this.handleEscapeKey = this.handleEscapeKey.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n\n    // Preconfigured menu items.\n    this.MenuItems = {\n      'topic_info': {\n        id: 'topic_info',\n        title: formatMessage(messages.info),\n        handler: null\n      },\n      'messages_clear': {\n        id: 'messages_clear',\n        title: formatMessage(messages.clear_messages),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.clear_messages), // title\n            formatMessage(messages.clear_messages_warning), // content\n            (() => { this.deleteMessages(true, false, params, errorHandler); }), // onConfirm\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'messages_clear_hard': {\n        id: 'messages_clear_hard',\n        title: formatMessage(messages.clear_for_all),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.clear_for_all), // title\n            formatMessage(message.delete_messages_warning), // content\n            (() => { return this.deleteMessages(true, true, params, errorHandler); }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'message_delete': {\n        id: 'message_delete',\n        title: formatMessage(messages.delete),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, false, params, errorHandler);\n        }\n      },\n      'message_delete_hard': {\n        id: 'message_delete_hard',\n        title: formatMessage(messages.delete_for_all),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, true, params, errorHandler);\n        }\n      },\n      'menu_item_send_retry': {\n        id: 'menu_item_send_retry',\n        title: formatMessage(messages.send_retry),\n        handler: (params, errorHandler) => {\n          return this.retryMessage(params, errorHandler);\n        }\n      },\n      'menu_item_reply': {\n        id: 'menu_item_reply',\n        title: formatMessage(messages.reply),\n        handler: (params, errorHandler) => {\n          return this.replyToMessage(params, errorHandler);\n        }\n      },\n      'topic_unmute': {\n        id: 'topic_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'topic_mute': {\n        id: 'topic_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'topic_unblock': {\n        id: 'topic_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n      'topic_block': {\n        id: 'topic_block',\n        title: formatMessage(messages.block),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.block), // title\n            formatMessage(messages.topic_block_warning), // content\n            (() => {\n              return this.topicPermissionSetter('-JP', params, errorHandler).then((ctrl) => {\n                this.props.onTopicRemoved(params.topicName);\n                return ctrl;\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_delete': {\n        id: 'topic_delete',\n        title: formatMessage(messages.topic_delete),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.topic_delete), // title\n            formatMessage(messages.topic_delete_warning), // content\n            (() => {\n              const topic = this.props.tinode.getTopic(params.topicName);\n              if (!topic) {\n                console.log(\"Topic not found: \", params.topicName);\n                return;\n              }\n              return topic.delTopic(true).catch((err) => {\n                if (errorHandler) {\n                  errorHandler(err.message, 'err');\n                }\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_archive': {\n        id: 'topic_archive',\n        title: formatMessage(messages.archive),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic) {\n            console.log(\"Topic not found: \", params.topicName);\n            return;\n          }\n          return topic.archive(true).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      'topic_restore': {\n        id: 'topic_restore',\n        title: formatMessage(messages.unarchive),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic) {\n            console.log(\"Topic not found: \", params.topicName);\n            return;\n          }\n          return topic.archive(false).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      // menu_item_edit_permissions is defined elsewhere.\n      'permissions': {\n        id: 'permissions',\n        title: formatMessage(messages.edit_permissions),\n        handler: null\n      },\n      'member_delete': {\n        id: 'member_delete',\n        title: formatMessage(messages.member_delete),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic || !params.user) {\n            console.log(\"Topic or user not found: '\" + params.topicName + \"', '\" + params.user + \"'\");\n            return;\n          }\n          return topic.delSubscription(params.user).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      'member_mute': {\n        id: 'member_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'member_unmute': {\n        id: 'member_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'member_block': {\n        id: 'member_block',\n        title: formatMessage(messages.block),\n        handler: this.topicPermissionSetter.bind(this, '-JP')\n      },\n      'member_unblock': {\n        id: 'member_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handlePageClick, false);\n    document.addEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handlePageClick, false);\n    document.removeEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  handlePageClick(e) {\n    if (this.selfRef.current.contains(e.target)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n  }\n\n  handleEscapeKey(e) {\n    if (e.keyCode === 27) {\n      this.props.hide();\n    }\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n    let item = this.props.items[e.currentTarget.dataset.id];\n    if (typeof item == 'string') {\n      item = this.MenuItems[item];\n    }\n\n    if (!item) {\n      console.error(\"Invalid menu item ID\", e.currentTarget.dataset.id);\n    } else {\n      this.props.onAction(\n        item.id,\n        item.handler(this.props.params, this.props.onError),\n        this.props.params);\n    }\n  }\n\n  // Menu Actions\n\n  deleteMessages(all, hard, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found: \", params.topicName);\n      return;\n    }\n\n    // We don't know if the message is still pending (e.g. attachment is being uploaded),\n    // so try cancelling first. No harm if we can't cancel.\n    // The message can be cancelled if transmission to the server has not\n    // started yet or if the message send has failed.\n    if (!all && topic.cancelSend(params.seq)) {\n      return;\n    }\n    // Can't cancel. Delete instead.\n    const promise = all ?\n      topic.delMessagesAll(hard) :\n      topic.delMessagesList([params.seq], hard);\n\n    return promise.catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Retries sending failed message.\n  retryMessage(params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    // Remove the existing message entry.\n    if (!topic || !topic.flushMessage(params.seq)) {\n      return;\n    }\n    const msg = topic.createMessage(params.content, false);\n    return topic.publishDraft(msg).catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Function is used by context menu to set permissions.\n  topicPermissionSetter(mode, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found\", params.topicName);\n      return;\n    }\n\n    let result = topic.updateMode(params.user, mode);\n    if (errorHandler) {\n      result = result.catch((err) => {\n        errorHandler(err.message, 'err');\n      });\n    }\n    return result;\n  }\n\n  replyToMessage(params, errorHandler) {\n    params.pickReply(params.seq, params.content, errorHandler);\n  }\n\n  render() {\n    const menu = [];\n    let count = 0;\n    this.props.items.map((item) => {\n      if (typeof item == 'string') {\n        item = this.MenuItems[item];\n      }\n      if (item && item.title) {\n        menu.push(\n          item.title == '-' ?\n            <li className=\"separator\" key={count} />\n            :\n            <li onClick={this.handleClick} data-id={count} key={count}>{item.title}</li>\n        );\n      }\n      count++;\n    });\n\n    // Ensure that menu is inside the app-container.\n    const hSize = 12 * REM_SIZE;\n    const vSize = REM_SIZE * (0.7 + menu.length * 2.5);\n    const left = (this.props.bounds.right - this.props.clickAt.x < hSize) ?\n        (this.props.clickAt.x - this.props.bounds.left - hSize) :\n        (this.props.clickAt.x - this.props.bounds.left);\n    const top = (this.props.bounds.bottom - this.props.clickAt.y < vSize) ?\n        (this.props.clickAt.y - this.props.bounds.top - vSize) :\n        (this.props.clickAt.y - this.props.bounds.top);\n\n    const position = {\n      left: left + 'px',\n      top: top + 'px'\n    };\n\n    return (\n      <ul className=\"menu\" style={position} ref={this.selfRef}>\n        {menu}\n      </ul>\n    );\n  }\n}\n\nexport default injectIntl(ContextMenu);\n","// Short representation of time in the past.\nexport function shortDateFormat(then, locale) {\n  locale = locale || window.navigator.userLanguage || window.navigator.language;\n  const now = new Date();\n  if (then.getFullYear() == now.getFullYear()) {\n    // Same year.\n    if (then.getMonth() == now.getMonth() && then.getDate() == now.getDate()) {\n      // Same month and day, show time only.\n      return then.toLocaleTimeString(locale, {hour12: false, hour: '2-digit', minute: '2-digit'});\n    }\n    // Different month and/or day, show month day, time.\n    return then.toLocaleDateString(locale,\n      {hour12: false, month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit'});\n  }\n  // Different year: just show the date.\n  return then.toLocaleDateString(locale, {year: 'numeric', month: 'short', day: 'numeric'});\n}\n\n// Convert seconds to minutes:seconds, i.e. 156 sec -> 2:36.\nexport function secondsToTime(seconds) {\n  const min = Math.floor(seconds / 60);\n  let sec = seconds % 60;\n  sec = sec < 10 ? `0${sec}` : sec;\n  return `${min}:${sec}`;\n}\n\n// Convert a number of bytes to human-readable format.\nexport function bytesToHumanSize(bytes) {\n  if (!bytes || bytes == 0) {\n    return '0 Bytes';\n  }\n\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n  const bucket = Math.min(Math.floor(Math.log2(bytes) / 10) | 0, sizes.length-1);\n  const count = bytes / Math.pow(1024, bucket);\n  const round = bucket > 0 ? (count < 3 ? 2 : (count < 30 ? 1 : 0)) : 0;\n  return count.toFixed(round) + ' ' + sizes[bucket];\n}\n\n// Get 32 bit integer hash value for a string. Ideally it should produce the same value\n// as Java's String#hash().\nfunction stringToColorHash(value) {\n  let hash = 0;\n  value = '' + value;\n  for (let i = 0; i < value.length; i++) {\n    hash = ((hash << 5) - hash) + value.charCodeAt(i);\n    hash = hash & hash; // Convert to 32bit integer\n  }\n  return hash;\n}\n\n// User avatar letter color id.\nexport function letterTileColorId(userId) {\n  return Math.abs(stringToColorHash(userId)) % 16;\n}\n\n// Converts user or topic ID to a CSS color class. Ideally it should produce the same color value as Java version.\n// params:\n// - {string} id: user or topic ID\n// - {boolean} light: light or dark version of the color.\n// - {boolean} fg: foreground (text) or background color.\nexport function idToColorClass(id, light, fg) {\n  return (light ? 'lt-' : 'dk-') + (fg ? 'fg-' : 'bg-') + letterTileColorId(id);\n}\n","// Odds and ends\n\nimport Tinode from 'tinode-sdk';\n\n// Make shortcut icon appear with a green dot + show unread count in title.\nexport function updateFavicon(count) {\n  const oldIcon = document.getElementById('shortcut-icon');\n  const head = document.head || document.getElementsByTagName('head')[0];\n  const newIcon = document.createElement('link');\n  newIcon.type = 'image/png';\n  newIcon.id = 'shortcut-icon';\n  newIcon.rel = 'shortcut icon';\n  newIcon.href = 'img/logo32x32' + (count > 0 ? 'a' : '') + '.png';\n  if (oldIcon) {\n    head.removeChild(oldIcon);\n  }\n  head.appendChild(newIcon);\n\n  document.title = (count > 0 ? '('+count+') ' : '') + 'Tinode';\n}\n\n// Create theCard which represents user's or topic's \"public\" info.\nexport function theCard(fn, imageUrl, imageMimeType, note) {\n  let card = null;\n  fn = fn && fn.trim();\n  note = note && note.trim();\n\n  if (fn) {\n    card = {\n      fn: fn\n    };\n  }\n\n  if (typeof note == 'string') {\n    card = card || {};\n    card.note = note ? note : Tinode.DEL_CHAR;\n  }\n\n  if (imageUrl) {\n    card = card || {};\n    let mimeType = imageMimeType;\n    // Is this a data URL \"data:[<mediatype>][;base64],<data>\"?\n    const matches = /^data:(image\\/[-a-z0-9+.]+)?(;base64)?,/i.exec(imageUrl);\n    if (matches) {\n      mimeType = matches[1];\n      card.photo = {\n        data: imageUrl.substring(imageUrl.indexOf(',') + 1),\n        ref: Tinode.DEL_CHAR\n      };\n    } else {\n      card.photo = {\n        data: Tinode.DEL_CHAR,\n        ref: imageUrl\n      };\n    }\n    card.photo.type = (mimeType || 'image/jpeg').substring('image/'.length);\n  }\n\n  return card;\n}\n\n// Deep-shallow compare two arrays: shallow compare each element.\nexport function arrayEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (!Array.isArray(a) || !Array.isArray(b)) {\n    return false;\n  }\n\n  // Compare lengths first.\n  if (a.length != b.length) {\n    return false;\n  }\n  // Order of elements is ignored.\n  a.sort();\n  b.sort();\n  for (let i = 0, l = a.length; i < l; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Checks (loosely) if the given string is a phone. If so, returns the phone number in a format\n// as close to E.164 as possible.\nexport function asPhone(val) {\n  val = val.trim();\n  if (/^(?:\\+?(\\d{1,3}))?[- (.]*(\\d{3})[- ).]*(\\d{3})[- .]*(\\d{2})[- .]*(\\d{2})?$/.test(val)) {\n    return val.replace(/[- ().]*/, '');\n  }\n  return null;\n}\n\n// Checks (loosely) if the given string is an email. If so returns the email.\nexport function asEmail(val) {\n  val = val.trim();\n  if (/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(val)) {\n    return val;\n  }\n  return null;\n}\n\n// Checks if URL is a relative url, i.e. has no 'scheme://', including the case of missing scheme '//'.\n// The scheme is expected to be RFC-compliant, e.g. [a-z][a-z0-9+.-]*\n// example.html - ok\n// https:example.com - not ok.\n// http:/example.com - not ok.\n// ' ↲ https://example.com' - not ok. (↲ means carriage return)\nexport function isUrlRelative(url) {\n  return url && !/^\\s*([a-z][a-z0-9+.-]*:|\\/\\/)/im.test(url);\n}\n\n// Ensure URL does not present an XSS risk. Optional allowedSchemes may contain an array of\n// strings with permitted URL schemes, such as ['ftp', 'ftps']; otherwise accept http and https only.\nexport function sanitizeUrl(url, allowedSchemes) {\n  if (typeof url != 'string') {\n    return url;\n  }\n\n  // Strip control characters and whitespace. They are not valid URL characters anyway.\n  url = url.replace(/[^\\x20-\\x7E]/gmi, '').trim();\n\n  // Relative URLs are safe.\n  // Relative URL does not start with ':', abcd123: or '//'.\n  if (!/^([a-z][a-z0-9+.-]*:|\\/\\/)/i.test(url)) {\n    return url;\n  }\n\n  // Blob URLs are safe.\n  if (/^blob:http/.test(url)) {\n    return url;\n  }\n\n  // Absolute URL. Accept only safe schemes, or no scheme.\n  const schemes = Array.isArray(allowedSchemes) ? allowedSchemes.join('|') : 'http|https';\n  const re = new RegExp('^((' + schemes + '):|//)', 'i');\n  if (!re.test(url)) {\n    return null;\n  }\n\n  return url;\n}\n\n// Ensure URL is suitable for <img src=\"url\"> field: the URL must be a relative URL or\n// have http:, https:, blob: or data: scheme.\n// In case of data: scheme, the URL must start with a 'data:image/XXXX;base64,'.\nexport function sanitizeImageUrl(url) {\n  if (!url) {\n    return null;\n  }\n\n  const sanitizedUrl = sanitizeUrl(url);\n  if (sanitizedUrl) {\n    return sanitizedUrl;\n  }\n\n  // Is this a data: URL of an image?\n  if (/data:image\\/[a-z0-9.-]+;base64,/i.test(url.trim())) {\n    return url;\n  }\n\n  return null;\n}\n\n// Given message's received status, return name and color of a delivery indicator icon.\nexport function deliveryMarker(received) {\n  switch (received) {\n    case Tinode.MESSAGE_STATUS_SENDING:\n      return { name: 'access_time' }; // watch face\n    case Tinode.MESSAGE_STATUS_FAILED:\n      return { name: 'warning', color: 'danger-color' }; // yellow icon /!\\\n    case Tinode.MESSAGE_STATUS_SENT:\n      return { name: 'done' }; // checkmark\n    case Tinode.MESSAGE_STATUS_RECEIVED:\n      return { name: 'done_all' }; // double checkmark\n    case Tinode.MESSAGE_STATUS_READ:\n      return { name: 'done_all', color: 'blue' }; // blue double checkmark\n  }\n  return null;\n}\n","import React from 'react';\n\nimport Tinode from 'tinode-sdk';\n\nimport { idToColorClass } from '../lib/strformat.js';\nimport { sanitizeImageUrl } from '../lib/utils.js';\n\nexport default class LetterTile extends React.PureComponent {\n  render() {\n    let avatar;\n    if (this.props.avatar === true) {\n      const isGroup = (Tinode.topicType(this.props.topic) == 'grp');\n      const iconColor = idToColorClass(this.props.topic, isGroup);\n      if (this.props.topic && this.props.title && this.props.title.trim()) {\n        const letter = this.props.title.trim().charAt(0);\n        const className = 'lettertile ' + iconColor;\n        avatar = (<div className={className}><div>{letter}</div></div>)\n      } else {\n        const className = 'material-icons ' + iconColor;\n        avatar = isGroup ?\n          <i className={className}>group</i> : <i className={className}>person</i>;\n      }\n    } else if (this.props.avatar) {\n      const url = this.props.tinode.authorizeURL(sanitizeImageUrl(this.props.avatar));\n      // If avatar image is invalid, show a placeholder.\n      avatar = <img className=\"avatar\" alt=\"avatar\" src={url}\n        onError={(e)=>{e.target.onerror = null; e.target.src=\"../img/broken_image.png\"}} />;\n    } else {\n      avatar = null;\n    }\n    return avatar;\n  }\n}\n","import React from 'react';\n\nexport default class LoadSpinner extends React.PureComponent {\n  render() {\n    const className = 'load-spinner-box' + (this.props.large ? ' large' : '')\n      + (this.props.clear ? ' clear' : '') + (this.props.centered ? ' centered' : '');\n    return (this.props.show ?\n      <div className={className}><div className=\"loader-spinner\"></div></div> : null);\n  }\n}\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\nimport LoadSpinner from './load-spinner.jsx';\n\nimport { sanitizeImageUrl } from '../lib/utils.js';\n\nimport { AVATAR_SIZE } from '../config.js';\n\nexport default class AvatarUpload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      source: props.avatar\n    };\n\n    this.handleFileReceived = this.handleFileReceived.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.avatar != prevProps.avatar) {\n      this.setState({source: this.props.avatar});\n    }\n  }\n\n  handleFileReceived(e) {\n    const image = e.target.files[0];\n    this.props.onImageUpdated(image.type, URL.createObjectURL(image), image.name);\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  render() {\n    // Randomize id value in case more than one AvatarUpload is shown\n    // at the same time.\n    const randId = 'file-input-avatar-' + (Math.random() + '').substr(2);\n    const className = 'avatar-upload' + (this.props.readOnly ? ' read-only' : '');\n    return (\n      <div className={className}>\n        {this.props.readOnly || !this.state.source ?\n          null :\n          <a href=\"#\" className=\"clear-avatar\" onClick={(e) => {e.preventDefault(); this.props.onImageUpdated();}}>\n            <i className=\"material-icons\">clear</i>\n          </a>}\n        {this.state.source ?\n          <img src={this.props.tinode.authorizeURL(sanitizeImageUrl(this.state.source))} className=\"preview\" /> :\n          this.props.readOnly && this.props.uid ?\n            <div className=\"avatar-box\">\n              <LetterTile\n                tinode={this.props.tinode}\n                avatar={true}\n                topic={this.props.uid}\n                title={this.props.title} />\n            </div>\n            :\n            <div className=\"blank\">{AVATAR_SIZE}&times;{AVATAR_SIZE}</div>}\n        {this.props.readOnly ? null :\n          <input type=\"file\" id={randId} className=\"inputfile hidden\"\n            accept=\"image/*\" onChange={this.handleFileReceived} />}\n        {this.props.readOnly ? null :\n        <label htmlFor={randId} className=\"round\">\n          <i className=\"material-icons\">file_upload</i>\n        </label>}\n        <LoadSpinner show={this.props.uploading} large={true} clear={true} centered={true} />\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nconst icon_mapping = {'staff': 'verified_user'};\n\nconst messages = defineMessages({\n  badge_verified: {\n    id: 'badge_verified',\n    defaultMessage: 'Verified/official',\n    description: 'Explanation of a verified account or topic badge'\n  },\n  badge_staff: {\n    id: 'badge_staff',\n    defaultMessage: 'Staff-managed',\n    description: 'Explanation of a staff-managed account or topic badge'\n  },\n  badge_danger: {\n    id: 'badge_danger',\n    defaultMessage: 'Untrustworthy',\n    description: 'Suspicious or untrustworthy account or topic badge'\n  },\n});\n\n\n/* Trusted badges with labels: verified, staff, danger */\nclass BadgeList extends React.PureComponent {\n  render() {\n    const {formatMessage} = this.props.intl;\n    let badges = null;\n    if (this.props.trustedBadges && this.props.trustedBadges.length > 0) {\n      badges = [];\n      this.props.trustedBadges.map((b) => {\n        const comment = formatMessage(messages['badge_' + b]);\n        const style = 'material-icons ' + b + '-color';\n        badges.push(<div className=\"trusted-badge\" key={b}><i className={style}>{icon_mapping[b] || b}</i> {comment}</div>);\n      });\n      return <>{badges}</>;\n    }\n    return null;\n  }\n};\n\nexport default injectIntl(BadgeList);\n","import React from 'react';\n\n/* BEGIN CheckBox: styled checkbox */\nexport default class CheckBox extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange() {\n    this.props.onChange(this.props.name, !this.props.checked);\n  }\n\n  render() {\n    return (\n      this.props.onChange ? (\n        this.props.checked === true ?\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box</i> :\n        this.props.checked === false ?\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box_outline_blank</i> :\n          <i className=\"material-icons lt-blue\">indeterminate_check_box</i>\n        ) : (\n          this.props.checked ?\n            <i className=\"material-icons\">check_box</i> :\n            <i className=\"material-icons\">check_box_outline_blank</i>\n        )\n    );\n  }\n}\n/* END CheckBox */\n","import React from 'react';\n\nconst icon_mapping = {'muted': 'notifications_off', 'banned': 'block', 'staff': 'verified_user'};\n\n/* Contact's labels: [you], or icons [muted], [blocked] */\nexport default class ContactBadges extends React.PureComponent {\n  render() {\n    let badges = null;\n    if (this.props.badges && this.props.badges.length > 0) {\n      badges = [];\n      this.props.badges.map((b) => {\n        const color = (b.color ? ' ' + b.color : '');\n        if (b.icon) {\n          badges.push(<i className={'material-icons as-badge' + color} key={b.key || b.icon}>{icon_mapping[b.icon] || b.icon}</i>);\n        } else {\n          badges.push(<span className={'badge' + color} key={b.key || b.name}>{b.name}</span>);\n        }\n      });\n      return <>{badges}</>;\n    }\n    return null;\n  }\n};\n","// Received/read indicator.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { shortDateFormat } from '../lib/strformat.js';\nimport { deliveryMarker } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  message_sending: {\n    id: 'message_sending',\n    defaultMessage: 'sending...',\n    description: 'Message being sent, in place of time stamp'\n  },\n  message_sending_failed: {\n    id: 'message_sending_failed',\n    defaultMessage: 'failed',\n    description: 'Failed to send message, in place of time stamp'\n  }\n});\n\nclass ReceivedMarker extends React.PureComponent {\n  render() {\n    const {formatMessage} = this.props.intl;\n    let timestamp;\n    if (this.props.received <= Tinode.MESSAGE_STATUS_SENDING) {\n      timestamp = formatMessage(messages.message_sending);\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_FAILED) {\n      timestamp = formatMessage(messages.message_sending_failed);\n    } else {\n      timestamp = shortDateFormat(this.props.timestamp, this.props.intl.locale);\n    }\n\n    const icon = deliveryMarker(this.props.received);\n    const marker = icon ? <i className={'material-icons small ' + icon.color}>{icon.name}</i> : null;\n\n    return (\n      <span className=\"timestamp\">\n        {timestamp}{'\\u00a0'}{marker}\n      </span>\n    );\n  }\n};\n\nexport default injectIntl(ReceivedMarker);\n","// The counter of unread messages in the topic.\nimport React from 'react';\n\nexport default class UnreadBadge extends React.PureComponent {\n  render() {\n    return (this.props.count > 0 ?\n      <span className=\"unread\">{this.props.count > 9 ? \"9+\" : this.props.count}</span>\n      : null);\n  }\n};\n","// File uload/download progress indicator with a cancel inside.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class FileProgress extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"uploader\">\n        <div><span style={{width: (this.props.progress * 100) + \"%\"}}></span></div>\n        {this.props.progress < 0.999 ?\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n            <i className=\"material-icons\">close</i> <FormattedMessage id=\"action_cancel\"\n              defaultMessage=\"cancel\" description=\"Call to action [cancel]\" />\n          </a>\n          :\n          <FormattedMessage id=\"upload_finishing\" defaultMessage=\"finishing...\"\n            description=\"Notification that upload is finishing\" />\n        }\n      </div>\n    );\n  }\n}\n","// Image view with progress bar and a cancel button.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\n\nexport default class UploadingImage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"inline-image\">\n        {React.createElement('img', this.props)}\n        <div className=\"rounded-container\">\n          <FileProgress progress={this.props.progress} onCancel={this.props.onCancelUpload} />\n        </div>\n      </div>\n    );\n  }\n};\n","// File and image helper functions.\nimport { MAX_INBAND_ATTACHMENT_SIZE, MAX_IMAGE_DIM } from '../config.js';\nimport { bytesToHumanSize } from './strformat.js'\n\n// Supported image MIME types and corresponding file extensions.\nexport const SUPPORTED_IMAGE_FORMATS = ['image/jpeg', 'image/gif', 'image/png', 'image/svg', 'image/svg+xml'];\nexport const MIME_EXTENSIONS         = ['jpg',        'gif',       'png',       'svg',       'svg'];\n\n// Get an URL from a theCard photo: either create a data: URL or return reference URL.\nexport function makeImageUrl(photo) {\n  if (photo && typeof photo == 'object') {\n    if (photo.data && photo.type) {\n      const mime = photo.type.startsWith('image/') ? photo.type : ('image/' + photo.type);\n      return 'data:' + mime + ';base64,' + photo.data;\n    }\n    return photo.ref;\n  }\n  return null;\n}\n\n// Calculate linear dimensions for scaling image down to fit under a certain size.\n// Returns an object which contains destination sizes, source sizes, and offsets\n// into source (when making square images).\nexport function fitImageSize(width, height, maxWidth, maxHeight, forceSquare) {\n  // Sanitize input\n  width = width | 0;\n  height = height | 0;\n  maxWidth = maxWidth | 0;\n  maxHeight = maxHeight | 0;\n\n  if (width <= 0 || height <= 0 || maxWidth <= 0 || maxHeight <= 0) {\n    return null;\n  }\n\n  if (forceSquare) {\n    maxWidth = maxHeight = Math.min(maxWidth, maxHeight);\n  }\n\n  const scale = Math.min(\n    Math.min(width, maxWidth) / width,\n    Math.min(height, maxHeight) / height\n  );\n\n  const size = {\n    dstWidth: (width * scale) | 0,\n    dstHeight: (height * scale) | 0,\n  };\n\n  if (forceSquare) {\n    // Also calculate parameters for making the image square.\n    size.dstWidth = size.dstHeight = Math.min(size.dstWidth, size.dstHeight);\n    size.srcWidth = size.srcHeight = Math.min(width, height);\n    size.xoffset = ((width - size.srcWidth) / 2) | 0;\n    size.yoffset = ((height - size.srcWidth) / 2) | 0;\n  } else {\n    size.xoffset = size.yoffset = 0;\n    size.srcWidth = width;\n    size.srcHeight = height;\n  }\n  return size;\n}\n\n// Ensure file's extension matches mime content type\nexport function fileNameForMime(fname, mime) {\n  const idx = SUPPORTED_IMAGE_FORMATS.indexOf(mime);\n  if (idx < 0 || !fname) {\n    // Unknown mime or empty name.\n    return fname;\n  }\n  const ext = MIME_EXTENSIONS[idx];\n\n  const at = fname.lastIndexOf('.');\n  if (at >= 0) {\n    fname = fname.substring(0, at);\n  }\n  return fname + '.' + ext;\n}\n\n// Scale uploaded image to fit under certain dimensions and byte size, optionally constraining to a square.\n// Returns a promise which is resolven on success or rejected on failure.\nexport function imageScaled(fileOrBlob, maxWidth, maxHeight, maxSize, forceSquare) {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    img.crossOrigin = 'Anonymous';\n    img.onerror = function(err) {\n      reject(new Error(\"Image format unrecognized\"));\n    }\n    img.onload = async function() {\n      // Once the image is loaded, the URL is no longer needed.\n      URL.revokeObjectURL(img.src);\n\n      // Calculate the desired image dimensions.\n      const dim = fitImageSize(this.width, this.height, maxWidth, maxHeight, forceSquare);\n      if (!dim) {\n        reject(new Error(\"Invalid image\"));\n        return;\n      }\n      let canvas = document.createElement('canvas');\n      canvas.width = dim.dstWidth;\n      canvas.height = dim.dstHeight;\n      let ctx = canvas.getContext('2d');\n      ctx.imageSmoothingEnabled = true;\n      ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n        0, 0, dim.dstWidth, dim.dstHeight);\n\n      const mime = SUPPORTED_IMAGE_FORMATS.includes(fileOrBlob.type) ? fileOrBlob.type : 'image/jpeg';\n      // Generate blob to check size of the image.\n      let blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n      if (!blob) {\n        reject(new Error(\"Unsupported image format\"));\n        return;\n      }\n\n      // Ensure the image is not too large. Shrink the image keeping the aspect ratio.\n      // Do nothing if maxsize is <= 0.\n      while (maxSize > 0 && blob.length > maxSize) {\n        dim.dstWidth = (dim.dstWidth * 0.70710678118) | 0;\n        dim.dstHeight = (dim.dstHeight * 0.70710678118) | 0;\n        canvas.width = dim.dstWidth;\n        canvas.height = dim.dstHeight;\n        ctx = canvas.getContext('2d');\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n          0, 0, dim.dstWidth, dim.dstHeight);\n        blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n      }\n\n      canvas = null;\n      resolve({mime: mime, blob: blob, width: dim.dstWidth, height: dim.dstHeight, name: fileNameForMime(fileOrBlob.name, mime)});\n    };\n    img.src = URL.createObjectURL(fileOrBlob);\n  });\n}\n\n// Scale and crop image according to specified dimensions.\n// The coordinates are in unscaled image pixels, i.e. cut the rectangle first then scale it.\n// returns a promise.\nexport function imageCrop(mime, objURL, left, top, width, height, scale) {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    img.crossOrigin = 'Anonymous';\n    img.onerror = (err) => {\n      reject(new Error(\"Image format unrecognized\"));\n    };\n    img.onload = () => {\n      // Once the image is loaded, the URL is no longer needed.\n      URL.revokeObjectURL(img.src);\n\n      let canvas = document.createElement('canvas');\n      canvas.width = width * scale;\n      canvas.height = height * scale;\n      let ctx = canvas.getContext('2d');\n      ctx.imageSmoothingEnabled = true;\n      ctx.drawImage(this, left, top, width, height, 0, 0, canvas.width, canvas.height);\n\n      mime = SUPPORTED_IMAGE_FORMATS.includes(mime) ? mime : 'image/jpeg';\n      // Generate blob to check size of the image.\n      canvas.toBlob((blob) => {\n        // Allow GC.\n        canvas = null;\n        if (blob) {\n          resolve({mime: mime, blob: blob, width: width, height: height});\n        } else {\n          reject(new Error(\"Unsupported image format\"));\n        }\n      }, mime);\n    };\n    img.src = objURL;\n  });\n}\n\n// Convert file to base64 string.\nexport function fileToBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onerror = (evt) => {\n      reject(reader.error);\n    };\n    reader.onload = () => {\n      resolve({mime: file.type, bits: reader.result.split(',')[1], name: file.name});\n    };\n    reader.readAsDataURL(file);\n  });\n}\n\n// Convert Blob to base64 string. Returns a promise resolved with the base64 string and mime.\nexport function blobToBase64(blob) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onerror = (evt) => {\n      reject(reader.error);\n    };\n    reader.onload = () => {\n      resolve({mime: blob.type, bits: reader.result.split(',')[1]});\n    };\n    reader.readAsDataURL(blob);\n  });\n}\n\n// File pasted from the clipboard. It's either an inline image or a file attachment.\nexport function filePasted(event, onImageSuccess, onAttachmentSuccess, onError) {\n  const items = (event.clipboardData || event.originalEvent.clipboardData || {}).items;\n  if (!Array.isArray(items)) {\n    return false;\n  }\n\n  for (let i in items) {\n    const item = items[i];\n    if (item.kind === 'file') {\n      const file = item.getAsFile();\n      if (!file) {\n        console.error(\"Failed to get file object from pasted file item\", item.kind, item.type);\n        onError(\"Failed to get file object from pasted file item\");\n        continue;\n      }\n      if (file.type && file.type.split('/')[0] == 'image') {\n        onImageSuccess(file);\n      } else {\n        onAttachmentSuccess(file);\n      }\n      // Indicate that the pasted data contains a file.\n      return true;\n    }\n  }\n  // No file found.\n  return false;\n}\n\n// Get mime type from data URL header.\nexport function getMimeType(header) {\n  var mime = /^data:(image\\/[-+a-z0-9.]+);base64/.exec(header);\n  return (mime && mime.length > 1) ? mime[1] : null;\n}\n\n// Given length of a binary object in bytes, calculate the length after\n// base64 encoding.\nexport function base64EncodedLen(n) {\n  return Math.floor((n + 2) / 3) * 4;\n}\n\n// Given length of a base64-encoded object, calculate decoded size of the\n// pbject in bytes.\nexport function base64DecodedLen(n) {\n  return Math.floor(n / 4) * 3;\n}\n\n// Re-encode string to standard base64 encoding with padding.\n// The string may be base64-URL encoded without the padding.\nexport function base64ReEncode(str) {\n  if (str) {\n    str = str.replace(/-/g, '+').replace(/_/g, '/');\n    try {\n      str = btoa(atob(str));\n    } catch(err) {\n      console.error(\"Failed to base64 re-encode string.\", err);\n      str = null;\n    }\n  }\n  return str;\n}\n\n// Convert a base64 encoded string with the provided mime type into a Blob.\nexport function base64ToBlob(str, mime) {\n  if (!str) {\n    return null;\n  }\n\n  try {\n    // Make blob.\n    const bin = atob(str);\n    const length = bin.length;\n    const buf = new ArrayBuffer(length);\n    const arr = new Uint8Array(buf);\n    for (let i = 0; i < length; i++) {\n      arr[i] = bin.charCodeAt(i);\n    }\n\n    return new Blob([buf], { type: mime });\n  } catch(err) {\n    console.error(\"Failed to convert base64 to blob: \", err);\n  }\n\n  return null;\n}\n","import React from 'react';\nimport { defineMessages } from 'react-intl';\n\nimport { Drafty } from 'tinode-sdk';\n\nimport UploadingImage from '../widgets/uploading-image.jsx'\n\nimport { IMAGE_THUMBNAIL_DIM, BROKEN_IMAGE_SIZE, REM_SIZE } from '../config.js';\nimport { fitImageSize } from './blob-helpers.js';\nimport { idToColorClass } from './strformat.js';\nimport { sanitizeImageUrl } from './utils.js';\n\nconst messages = defineMessages({\n  drafty_form: {\n    id: 'drafty_form',\n    defaultMessage: 'Form: ',\n    description: 'Comment for form in drafty preview'\n  },\n  drafty_attachment: {\n    id: 'drafty_attachment',\n    defaultMessage: 'Attachment',\n    description: 'Comment for attachment in drafty preview'\n  },\n  drafty_image: {\n    id: 'drafty_image',\n    defaultMessage: 'Picture',\n    description: 'Comment for embedded images in drafty preview'\n  },\n});\n\n// Size the already scaled image.\nfunction handleImageData(el, data, attr) {\n  if (!data) {\n    attr.src = 'img/broken_image.png';\n    attr.style = {\n      width: IMAGE_THUMBNAIL_DIM + 'px',\n      height: IMAGE_THUMBNAIL_DIM + 'px',\n      // Looks like a Chrome bug: broken image does not respect 'width' and 'height'.\n      minWidth: IMAGE_THUMBNAIL_DIM + 'px',\n      minHeight: IMAGE_THUMBNAIL_DIM + 'px'\n    };\n    return el;\n  }\n\n  attr.className = 'inline-image';\n  const dim = fitImageSize(data.width, data.height,\n    this.viewportWidth > 0 ? Math.min(this.viewportWidth - REM_SIZE * 6.5, REM_SIZE * 34.5) :\n      REM_SIZE * 34.5, REM_SIZE * 24, false) ||\n      {dstWidth: BROKEN_IMAGE_SIZE, dstHeight: BROKEN_IMAGE_SIZE};\n  attr.style = {\n    width: dim.dstWidth + 'px',\n    height: dim.dstHeight + 'px',\n    // Looks like a Chrome bug: broken image does not respect 'width' and 'height'.\n    minWidth: dim.dstWidth + 'px',\n    minHeight: dim.dstHeight + 'px'\n  };\n  if (!Drafty.isProcessing(data)) {\n    attr.src = this.authorizeURL(sanitizeImageUrl(attr.src));\n    attr.alt = data.name;\n    if (attr.src) {\n      if (Math.max(data.width || 0, data.height || 0) > IMAGE_THUMBNAIL_DIM) {\n        // Allow previews for large enough images.\n        attr.onClick = this.onImagePreview;\n        attr.className += ' image-clickable';\n      }\n      attr.loading = 'lazy';\n    } else {\n      attr.src = 'img/broken_image.png';\n    }\n  } else {\n    // Use custom element instead of <img>.\n    el = UploadingImage;\n  }\n\n  return el;\n}\n\nfunction quotedImage(data) {\n  let promise;\n  // Get the blob from the image data.\n  if (data.val) {\n    const blob = base64ToBlob(data.val, data.mime);\n    promise = blob ? Promise.resolve(blob) : Prmise.reject(new Error(\"Invalid image\"));\n  } else {\n    promise = fetch(this.authorizeURL(sanitizeImageUrl(data.ref))).then(evt => {\n      if (evt.ok) {\n        return evt.blob();\n      } else {\n        throw new Error(`Image fetch unsuccessful: ${evt.status} ${evt.statusText}`);\n      }\n    });\n  }\n\n  // Scale the blob.\n  return promise\n    .then(blob => {\n      return imageScaled(blob, IMAGE_THUMBNAIL_DIM, IMAGE_THUMBNAIL_DIM, -1, false)\n    }).then(scaled => {\n      data.mime = scaled.mime;\n      data.size = scaled.blob.size;\n      data.width = scaled.width;\n      data.height = scaled.height;\n      delete data.ref;\n      // Keeping the original file name, if provided: ex.data.name;\n\n      return blobToBase64(scaled.blob);\n    }).then(b64 => {\n      data.val = b64.bits;\n      return data;\n    }).catch(err => {\n      delete data.val;\n      delete data.name;\n      data.width = IMAGE_THUMBNAIL_DIM;\n      data.height = IMAGE_THUMBNAIL_DIM;\n      data.maxWidth = IMAGE_THUMBNAIL_DIM;\n      data.maxHeight = IMAGE_THUMBNAIL_DIM;\n      // Rethrow.\n      throw err;\n    });\n}\n\nfunction shortenFileName(filename) {\n  return filename.length > 16 ? filename.slice(0, 7) + '…' + filename.slice(-7) : filename;\n}\n\n// The main Drafty formatter: converts Drafty elements into React classes. 'this' is set by the caller.\n// 'this' must contain:\n//    viewportWidth: this.props.viewportWidth;\n//    authorizeURL: this.props.tinode.authorizeURL\n//    onImagePreview: this.handleImagePreview\n//    onFormButtonClick: this.handleFormButtonClick\n//    onQuoteClick: this.handleQuoteClick (optional)\nexport function fullFormatter(style, data, values, key) {\n  if (!style) {\n    // Unformatted.\n    return values;\n  }\n\n  if (style == 'HD') {\n    // Hidden.\n    return null;\n  }\n\n  let el = Drafty.tagName(style);\n  const attr = Drafty.attrValue(style, data) || {};\n  attr.key = key;\n  switch (style) {\n    case 'HL':\n      // Highlighted text. Assign class name.\n      attr.className = 'highlight';\n      break;\n    case 'IM':\n      // Additional processing for images\n      el = handleImageData.call(this, el, data, attr);\n      // Image element cannot have content.\n      values = null;\n      break;\n    case 'BN':\n      // Button\n      attr.onClick = this.onFormButtonClick;\n      let inner = React.Children.map(values, (child) => {\n        return typeof child == 'string' ? child : undefined;\n      });\n      if (!inner || inner.length == 0) {\n        inner = [attr.name]\n      }\n      // Get text which will be sent back when the button is clicked.\n      attr['data-title'] = inner.join('');\n      break;\n    case 'MN':\n      // Mention\n      if (data && data.hasOwnProperty('colorId')) {\n        attr.className = 'mn-dark-color' + data.colorId;\n      }\n      break;\n    case 'FM':\n      // Form\n      attr.className = 'bot-form';\n      break;\n    case 'RW':\n      // Form element formatting is dependent on element content.\n      break;\n    case 'QQ':\n      // Quote/citation.\n      attr.className = 'reply-quote'\n      attr.onClick = this.onQuoteClick;\n      break;\n    default:\n      if (el == '_UNKN') {\n        // Unknown element.\n        el = React.Fragment;\n        values = [<i className=\"material-icons gray\">extension</i>, ' '].concat(values || []);\n      }\n      break;\n  }\n  if (!el) {\n    return values;\n  }\n  return React.createElement(el, attr, values);\n};\n\n// Converts Drafty object into a one-line preview. 'this' is set by the caller.\n// 'this' must contain:\n//    formatMessage: this.props.intl.formatMessage\n//    messages: formatjs messages defined with defineMessages.\nexport function previewFormatter(style, data, values, key) {\n  if (!style) {\n    // Unformatted.\n    return values;\n  }\n\n  if (style == 'HD') {\n    // Hidden.\n    return null;\n  }\n\n  let el = Drafty.tagName(style);\n  const attr = { key: key };\n  switch (style) {\n    case 'BR':\n      // Replace new line with a space.\n      el = React.Fragment;\n      values = [' '];\n      break;\n    case 'HL':\n      // Make highlight less prominent in preview.\n      attr.className = 'highlight preview';\n      break;\n    case 'LN':\n    case 'MN':\n      // Disable links in previews.\n      el = 'span';\n      break;\n    case 'IM':\n      // Replace image with '[icon] Image'.\n      el = React.Fragment;\n      values = [<i key=\"im\" className=\"material-icons\">photo</i>, this.formatMessage(messages.drafty_image)];\n      break;\n    case 'BN':\n      el = 'span';\n      attr.className = 'flat-button faux';\n      break;\n    case 'FM':\n      el = React.Fragment;\n      values = [<i key=\"fm\" className=\"material-icons\">dashboard</i>,\n        this.formatMessage(messages.drafty_form)].concat(' ', values || []);\n      break;\n    case 'RW':\n      el = React.Fragment;\n      break;\n    case 'EX':\n      if (data) {\n        if (data.mime == 'application/json') {\n          // Ignore JSON attachments: they are form response payloads.\n          return null;\n        }\n        // Clear payload.\n        delete data.val;\n        delete data.ref;\n      }\n      el = React.Fragment;\n      values = [<i key=\"ex\" className=\"material-icons\">attachment</i>, this.formatMessage(messages.drafty_attachment)];\n      break;\n    default:\n      if (el == '_UNKN') {\n        el = React.Fragment;\n        values = [<i key=\"unkn\" className=\"material-icons\">extension</i>, ' '].concat(values || []);\n      }\n      break;\n  }\n  if (!el) {\n    return values;\n  }\n  return React.createElement(el, attr, values);\n};\n\n// Displays a portion of Drafty within 'QQ' quotes. 'this' is set by the caller.\n// 'this' must contain:\n//    formatMessage: this.props.intl.formatMessage\n//    messages: formatjs messages defined with defineMessages.\n//    authorizeURL: this.props.tinode.authorizeURL\n//    onQuoteClick: this.handleQuoteClick (optional)\nexport function quoteFormatter(style, data, values, key) {\n  if (['BR', 'EX', 'IM', 'MN', 'QQ'].includes(style)) {\n    let el = Drafty.tagName(style);\n    let attr = Drafty.attrValue(style, data) || {};\n    attr.key = key;\n    switch(style) {\n      case 'IM':\n        const img = handleImageData.call(this, el, data, attr);\n        values = [React.createElement(img, attr, null), ' ',\n          shortenFileName((data && data.name) || this.formatMessage(messages.drafty_image))];\n        el = React.Fragment;\n        // Fragment attributes.\n        attr = {key: key};\n        break;\n      case 'MN':\n        el = 'span';\n        attr.className = 'mention'\n        if (data) {\n          attr.className += ' ' + idToColorClass(data.val, false, true);\n        }\n        break;\n      case 'QQ':\n        attr.className = 'reply-quote';\n        attr.onClick = this.onQuoteClick;\n        break;\n      case 'EX':\n        let fname;\n        if (data) {\n          if (data.mime == 'application/json') {\n            // Ignore JSON attachments: they are form response payloads.\n            return null;\n          }\n          fname = data.name;\n          // Clear payload.\n          delete data.val;\n          delete data.ref;\n        }\n        el = React.Fragment;\n        values = [<i key=\"ex\" className=\"material-icons\">attachment</i>,\n          shortenFileName(fname || this.formatMessage(messages.drafty_attachment))];\n        break;\n    }\n    return React.createElement(el, attr, values);\n  }\n  return previewFormatter.call(this, style, data, values, key);\n}\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport ContactBadges from './contact-badges.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\nimport UnreadBadge from './unread-badge.jsx';\n\nimport { Drafty } from 'tinode-sdk';\n\nimport { previewFormatter } from '../lib/formatters.js';\nimport { deliveryMarker } from '../lib/utils.js';\n\nclass Contact extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.props.onSelected) {\n      // Index this.props.index is used by GroupManager.\n      this.props.onSelected(this.props.item, this.props.index);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.props.item, y: e.pageY, x: e.pageX });\n  }\n\n  render() {\n    let title = this.props.title;\n    if (!title) {\n      title = <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n        description=\"Title shown when the topic has no name\" /></i>;\n    } else if (title.length > 30) {\n      // FIXME: this is probably wrong for RTL languages.\n      title = title.substring(0, 28) + '…';\n    }\n    const online = this.props.now ? 'online' : 'offline';\n    const avatar = this.props.avatar ? this.props.avatar : true;\n    const badges = this.props.badges ? this.props.badges.slice() : [];\n    const icon_badges = [];\n    if (this.props.isVerified) {\n      icon_badges.push({icon: 'verified', color: 'verified-color'});\n    }\n    if (this.props.isStaff) {\n      icon_badges.push({icon: 'staff', color: 'staff-color'});\n    }\n    if (this.props.isDangerous) {\n      icon_badges.push({icon: 'dangerous', color: 'danger-color'});\n    }\n    if (this.props.acs) {\n      if (this.props.showMode) {\n        badges.push({name: this.props.acs.getMode(), key: 'mode'});\n      }\n      if (this.props.acs.isMuted()) {\n        icon_badges.push({icon: 'muted'});\n      }\n      if (!this.props.acs.isJoiner()) {\n        icon_badges.push({icon: 'banned'});\n      }\n    }\n\n    const subtitle = this.props.preview ?\n      (typeof this.props.preview == 'string' ? this.props.preview :\n        Drafty.isValid(this.props.preview) ?\n        React.createElement(React.Fragment, null, Drafty.format(this.props.preview, previewFormatter,\n          {formatMessage: this.props.intl.formatMessage})) :\n        <><i className=\"material-icons gray\">warning_amber</i> <i className=\"gray\">\n          <FormattedMessage id=\"invalid_content\"\n            defaultMessage=\"invalid content\" description=\"Shown when the message is unreadable\" /></i>\n        </>\n      ) :\n      this.props.comment;\n\n    const icon = deliveryMarker(this.props.received);\n    const marker = icon ? <i className={'material-icons small space-right' +\n      (icon.color ? ' ' + icon.color : '')}>{icon.name}</i> : null;\n\n    return (\n      <li className={!this.props.showCheckmark && this.props.selected ? 'selected' : null} onClick={this.handleClick}>\n        <div className=\"avatar-box\">\n          <LetterTile\n            tinode={this.props.tinode}\n            avatar={avatar}\n            title={this.props.title}\n            topic={this.props.item} />\n          {this.props.showOnline ? <span className={online} /> :\n            (this.props.showCheckmark && this.props.selected ?\n            <i className=\"checkmark material-icons\">check_circle</i>\n            : null)}\n        </div>\n        <div className=\"text-box\">\n          <div><span className=\"contact-title\">{title}</span>\n            {this.props.isChannel ? <img src=\"/img/channel.png\" className=\"channel\" alt=\"channel\" /> : null}\n            <ContactBadges badges={icon_badges} /><UnreadBadge count={this.props.unread} />\n          </div>\n          {this.props.showMode ?\n            <span><ContactBadges badges={badges} /></span> :\n            this.props.small ? null : <div className=\"contact-comment\">{marker}<span>{subtitle || '\\u00A0'}</span></div>}\n        </div>\n        {this.props.showContextMenu ?\n          <span className=\"menuTrigger\">\n            <a href=\"#\" onClick={this.handleContextClick}>\n              <i className=\"material-icons\">expand_more</i>\n            </a>\n          </span> : null}\n      </li>\n    );\n  }\n};\n\nexport default injectIntl(Contact);\n","// A panel included into a list of contacts with an action text.\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\n\nclass ContactAction extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.onAction(this.props.action);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <li onClick={this.handleClick} className=\"action\">\n        <div className=\"action-text\">{formatMessage(this.props.title, this.props.values)}</div>\n      </li>\n    );\n  }\n};\n\nexport default injectIntl(ContactAction);\n","// ContactList: component for showing a list of contacts,\n// such as a list of group members in a group chat.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { Drafty } from 'tinode-sdk';\nimport Tinode from 'tinode-sdk';\n\nimport Contact from './contact.jsx';\nimport ContactAction from './contact-action.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nimport { MESSAGE_PREVIEW_LENGTH } from '../config.js';\n\nconst messages = defineMessages({\n  badge_you: {\n    id: 'badge_you',\n    defaultMessage: 'you',\n    description: 'Badge for indicating the current user'\n  },\n  badge_owner: {\n    id: 'badge_owner',\n    defaultMessage: 'owner',\n    description: 'Badge for indicating the owner'\n  }\n});\n\nclass ContactList extends React.Component {\n  render() {\n    const { formatMessage } = this.props.intl;\n    const showCheckmark = Array.isArray(this.props.topicSelected);\n    const contactNodes = [];\n    let contactsCount = 0;\n    if (this.props.contacts && this.props.contacts.length > 0) {\n      this.props.contacts.map((c) => {\n        if (c.action) {\n          // Action item\n          contactNodes.push(\n            <ContactAction\n              title={c.title} action={c.action} values={c.values}\n              key={c.action}\n              onAction={this.props.onAction}\n              />);\n        } else {\n          // Normal contact\n          const key = this.props.showMode ? c.user : (c.topic || c.user);\n          // If filter function is provided, filter out the items\n          // which don't satisfy the condition.\n          if (this.props.filterFunc && this.props.filter) {\n            const filterOn = [key];\n            if (c.private && c.private.comment) {\n              filterOn.push(('' + c.private.comment).toLowerCase());\n            }\n            if (c.public && c.public.fn) {\n              filterOn.push(('' + c.public.fn).toLowerCase());\n            }\n            if (!this.props.filterFunc(this.props.filter, filterOn)) {\n              return;\n            }\n          }\n\n          const isChannel = Tinode.isChannelTopicName(key);\n          const selected = showCheckmark ?\n            (this.props.topicSelected.indexOf(key) > -1) :\n            (this.props.topicSelected === key);\n          const badges = [];\n          if (this.props.showMode) {\n            if (key == this.props.myUserId) {\n              badges.push({name: formatMessage(messages.badge_you), color: 'green'});\n            }\n            if (c.acs && c.acs.isOwner()) {\n              badges.push({name: formatMessage(messages.badge_owner), color: 'blue'});\n            }\n          }\n\n          const comment = Array.isArray(c.private) ?\n            c.private.join(',') : (c.private ? c.private.comment : null);\n          let preview;\n          let deliveryStatus;\n          if (!this.props.showMode && c.latestMessage) {\n            const msg = c.latestMessage(true);\n            if (msg) {\n              deliveryStatus = msg._status || c.msgStatus(msg, true);\n              preview = typeof msg.content == 'string' ?\n                msg.content.substr(0, MESSAGE_PREVIEW_LENGTH) :\n                Drafty.preview(msg.content, MESSAGE_PREVIEW_LENGTH);\n            }\n          }\n          contactNodes.push(\n            <Contact\n              tinode={this.props.tinode}\n              title={c.public ? c.public.fn : null}\n              avatar={makeImageUrl(c.public ? c.public.photo : null)}\n              comment={comment}\n              preview={preview}\n              received={deliveryStatus}\n              unread={this.props.showUnread ? c.unread : 0}\n              now={c.online && this.props.connected}\n              acs={c.acs}\n              showMode={this.props.showMode}\n              badges={badges}\n              showCheckmark={showCheckmark}\n              selected={selected}\n              showOnline={this.props.showOnline && !isChannel}\n              isChannel={isChannel}\n              onSelected={this.props.onTopicSelected}\n              showContextMenu={this.props.showContextMenu}\n              isVerified={c.trusted && c.trusted.verified}\n              isStaff={c.trusted && c.trusted.staff}\n              isDangerous={c.trusted && c.trusted.danger}\n              item={key}\n              index={contactNodes.length}\n              key={key} />\n          );\n          contactsCount ++;\n        }\n      }, this);\n    }\n\n    return (\n      <div className={this.props.noScroll ? null : \"scrollable-panel\"}>\n        {contactsCount == 0 ?\n          <div className=\"center-medium-text\"\n            dangerouslySetInnerHTML={{__html: this.props.emptyListMessage}} />\n          :\n          null\n        }\n        {contactNodes.length > 0 ?\n          <ul className=\"contact-box\">\n            {contactNodes}\n          </ul>\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ContactList);\n","// The X menu to be displayed in title bars.\nimport React from 'react';\n\nexport default class MenuCancel extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n        <i className=\"material-icons\">close</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nimport MenuCancel from './menu-cancel.jsx';\n\nexport default class ErrorPanel extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      show: false,\n    };\n\n    this.hide = this.hide.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.level !== this.props.level) {\n      this.setState({\n        show: !(!this.props.level)\n      });\n    }\n  }\n\n  hide() {\n    this.setState({show: false});\n    if (this.props.onClearError) {\n      this.props.onClearError();\n    }\n  }\n\n  render() {\n    const icons = {err: 'error', warn: 'warning', info: 'info'}\n    const level = icons[this.props.level] || '';\n    const className = 'info-box ' + level;\n    return (\n      <div className={className}>\n        <div className=\"icon\"><i className=\"material-icons\">{level}</i></div>\n        <span>\n          {this.props.text}\n          {this.props.action ?\n            <>\n              &#32;<a href=\"#\"\n                style={{ whiteSpace: 'nowrap' }}\n                onClick={(e) => {e.preventDefault(); this.props.action();}}>\n                {this.props.actionText}\n              </a>\n            </>\n          : null}\n        </span>\n        <div className=\"cancel\"><MenuCancel onCancel={this.hide} /></div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\n\nexport default class Chip extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel(this.props.topic, this.props.index);\n  }\n\n  render() {\n    const title = this.props.title || this.props.topic;\n    const className = this.props.invalid ? 'chip invalid' : 'chip';\n    return (\n      <div className={className}>\n        {this.props.noAvatar ?\n          <span className=\"spacer\" /> :\n          <div className=\"avatar-box\">\n            <LetterTile\n              tinode={this.props.tinode}\n              avatar={this.props.avatar || true}\n              topic={this.props.topic}\n              title={this.props.title} />\n          </div>\n        }\n        <span>{title}</span>\n        {this.props.onCancel && !this.props.required ?\n          <a href=\"#\" onClick={this.handleCancel} >&times;</a>\n          : <span className=\"spacer\" />}\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport Chip from './chip.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n/* BEGIN ChipInput: group membership widget */\nexport default class ChipInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = ChipInput.deriveStateFromProps(props);\n    this.state.input = '';\n    this.state.focused = false;\n\n    this.handleTextInput = this.handleTextInput.bind(this);\n    this.removeChipAt = this.removeChipAt.bind(this);\n    this.handleChipCancel = this.handleChipCancel.bind(this);\n    this.handleFocusGained = this.handleFocusGained.bind(this);\n    this.handleFocusLost = this.handleFocusLost.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  static deriveStateFromProps(props) {\n    return {\n      placeholder: props.chips ? '' : props.prompt,\n      sortedChips: ChipInput.sortChips(props.chips, props.staticMembers),\n      chipIndex: ChipInput.indexChips(props.chips)\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chips != this.props.chips ||\n      prevProps.staticMembers != this.props.staticMembers ||\n      prevProps.prompt != this.props.prompt) {\n      this.setState(ChipInput.deriveStateFromProps(this.props));\n    }\n    if (!prevState || this.props.chips.length > prevState.sortedChips.length) {\n      this.setState({input: ''});\n    }\n  }\n\n  // Map chip index to user name\n  static indexChips(chips) {\n    const index = {};\n    let count = 0;\n    chips.map((item) => {\n      index[item.user] = count;\n      count ++;\n    });\n    return index;\n  }\n\n  // Have non-removable chips appear before all other chips.\n  static sortChips(chips, keep) {\n    const required = [];\n    const normal = [];\n    chips.map((item) => {\n      if (keep && keep.includes(item.user)) {\n        required.push(item);\n      } else {\n        normal.push(item);\n      }\n    });\n    return required.concat(normal);\n  }\n\n  handleTextInput(e) {\n    this.setState({input: e.target.value});\n    if (this.props.filterFunc) {\n      this.props.filterFunc(e.target.value);\n    }\n  }\n\n  removeChipAt(idx) {\n    const removed = this.state.sortedChips[idx];\n    this.props.onChipRemoved(removed.user, this.state.chipIndex[removed.user]);\n  }\n\n  handleChipCancel(item, idx) {\n    this.removeChipAt(idx);\n  }\n\n  handleFocusGained() {\n    this.setState({focused: true});\n  }\n\n  handleFocusLost() {\n    this.setState({focused: false});\n    if (this.props.onFocusLost) {\n      this.props.onFocusLost(this.state.input);\n    }\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Backspace') {\n      if (this.state.input.length == 0 && this.state.sortedChips.length > 0) {\n        const at = this.state.sortedChips.length - 1;\n        if (this.state.sortedChips[at].user !== this.props.staticMembers) {\n          this.removeChipAt(at);\n        }\n      }\n    } else if (e.key === 'Enter') {\n      if (this.props.onEnter) {\n        this.props.onEnter(this.state.input);\n      }\n    } else if (e.key === 'Escape') {\n      if (this.props.onCancel) {\n        this.props.onCancel();\n      }\n    }\n  }\n\n  render() {\n    const chips = [];\n    let count = 0;\n    const staticMembers = this.props.staticMembers || [];\n    this.state.sortedChips.map((item) => {\n      chips.push(\n        <Chip\n          tinode={this.props.tinode}\n          onCancel={this.handleChipCancel}\n          avatar={makeImageUrl(item.public ? item.public.photo : null)}\n          title={item.public ? item.public.fn : undefined}\n          noAvatar={this.props.avatarDisabled}\n          topic={item.user}\n          required={staticMembers.includes(item.user)}\n          invalid={item.invalid}\n          index={count}\n          key={item.user} />\n      );\n      count++;\n    });\n    const className = \"chip-input\" + (this.state.focused ? ' focused' : '');\n    const autoFocus = !(this.props.tabIndex > 0);\n    return (\n      <div className={className}>\n        {chips}\n        <input type=\"text\"\n          placeholder={this.state.placeholder}\n          onChange={this.handleTextInput}\n          onFocus={this.handleFocusGained}\n          onBlur={this.handleFocusLost}\n          onKeyDown={this.handleKeyDown}\n          value={this.state.input}\n          tabIndex={this.props.tabIndex}\n          autoFocus={autoFocus} />\n      </div>\n    );\n  }\n};\n","// GroupMembers: control for managing a list of group members.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\nimport ContactList from './contact-list.jsx';\n\nconst messages = defineMessages({\n  no_contacts: {\n    id: 'no_contacts',\n    defaultMessage: 'You have no contacts :-(',\n    description: 'Shown in ContactsView when the user has no contacts'\n  },\n  contacts_not_found_short: {\n    id: 'contacts_not_found_short',\n    defaultMessage: \"No contacts match ''{query}''\",\n    description: 'Shown in ContactsView when search returned no results'\n  }\n});\n\nclass GroupManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Array of topic members\n      members: props.members,\n      index: GroupManager.indexMembers(props.members),\n      staticMembers: GroupManager.staticMembers(props.members, props.keepInitialMembers, props.requiredMember),\n      contactFilter: '',\n      noContactsMessage: props.intl.formatMessage(messages.no_contacts),\n      selectedContacts: GroupManager.selectedContacts(props.members)\n    };\n\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleMemberRemoved = this.handleMemberRemoved.bind(this);\n    this.handleContactFilter = this.handleContactFilter.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static indexMembers(members) {\n    let index = {};\n    members.map((m) => {\n      index[m.user] = {delta: 0, present: true}; // Delta: 0 unchanged, +1 added, -1 removed\n    });\n    return index;\n  }\n\n  static staticMembers(members, keepInitial, requiredMember) {\n    let stat = [];\n    members.map((m) => {\n      if (keepInitial || m.user == requiredMember) {\n        stat.push(m.user);\n      }\n    });\n    return stat;\n  }\n\n  static selectedContacts(members) {\n    let sel = [];\n    members.map((m) => {\n      sel.push(m.user);\n    });\n    return sel;\n  }\n\n  handleContactSelected(userId, index) {\n    let status = this.state.index[userId];\n    if (status) {\n      if (status.present) {\n        // Prevent duplicate members\n        return;\n      }\n      status.delta += 1;\n      status.present = true;\n    } else {\n      status = {delta: 1, present: true};\n    }\n\n    let m = this.state.members.slice();\n    m.push(this.props.contacts[index]);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleMemberRemoved(userId, index) {\n    const status = this.state.index[userId];\n    if (!status || !status.present) {\n      return;\n    }\n    status.present = false;\n    status.delta -= 1;\n\n    let m = this.state.members.slice();\n    m.splice(index, 1);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleContactFilter(val) {\n    const {formatMessage} = this.props.intl;\n    const msg = !val ?\n      formatMessage(messages.no_contacts) :\n      formatMessage(messages.contacts_not_found_short, {query: val});\n\n    this.setState({contactFilter: val, noContactsMessage: msg});\n  }\n\n  static doContactFiltering(filter, values) {\n    if (filter) {\n      for (let i=0; i<values.length; i++) {\n        if (values[i].indexOf(filter) >= 0) {\n          return true;\n        }\n      }\n      return false;\n    }\n    return true;\n  }\n\n  handleSubmit() {\n    var instance = this;\n    var members = [];\n    var added = [];\n    var removed = [];\n\n    var keys = Object.keys(this.state.index);\n    keys.map(function(k) {\n      if (instance.state.index[k].present) {\n        members.push(k);\n      }\n\n      if (instance.state.index[k].delta > 0) {\n        added.push(k);\n      } else if (instance.state.index[k].delta < 0) {\n        removed.push(k);\n      }\n    });\n    this.props.onSubmit(members, added, removed);\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <div id=\"group-manager\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_group_members\" defaultMessage=\"Group Members\" description=\"Section title\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ChipInput\n            tinode={this.props.tinode}\n            chips={this.state.members}\n            staticMembers={this.state.staticMembers}\n            prompt=\"add members\"\n            filterFunc={this.handleContactFilter}\n            onChipRemoved={this.handleMemberRemoved} />\n        </div>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_all_contacts\" defaultMessage=\"All Contacts\"\n              description=\"Section title [All Contacts]\" />\n          </label>\n        </div>\n        <ContactList\n          tinode={this.props.tinode}\n          contacts={this.props.contacts}\n          myUserId={this.props.myUserId}\n          topicSelected={this.state.selectedContacts}\n          filter={this.state.contactFilter}\n          filterFunc={GroupManager.doContactFiltering}\n          emptyListMessage={this.state.noContactsMessage}\n          showOnline={false}\n          showUnread={false}\n          onTopicSelected={this.handleContactSelected} />\n        <div id=\"group-manager-buttons\" className=\"panel-form-row\">\n          <button className=\"secondary\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(GroupManager);\n","// PermissionsEditor: Component for editing permissions\n// <PermissionsEditor mode=\"JWROD\" skip=\"O\" onChange={this.handleCheckboxTest} />\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport CheckBox from './checkbox.jsx';\nimport Contact from './contact.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n// Translatable permission names.\nconst messages = defineMessages({\n  joiner: {\n    id: 'permission_join',\n    defaultMessage: \"Join ({val})\",\n    description: 'Name of J permission'\n  },\n  reader: {\n    id: 'permission_read',\n    defaultMessage: \"Read ({val})\",\n    description: 'Name of R permission'\n  },\n  writer: {\n    id: 'permission_write',\n    defaultMessage: \"Write ({val})\",\n    description: 'Name of W permission'\n  },\n  preser: {\n    id: 'permission_pres',\n    defaultMessage: \"Get notified ({val})\",\n    description: 'Name of P permission'\n  },\n  approver: {\n    id: 'permission_admin',\n    defaultMessage: \"Approve ({val})\",\n    description: 'Name of A permission'\n  },\n  sharer: {\n    id: 'permission_share',\n    defaultMessage: \"Share ({val})\",\n    description: 'Name of S permission'\n  },\n  deleter: {\n    id: 'permission_delete',\n    defaultMessage: \"Delete ({val})\",\n    description: 'Name of D permission'\n  },\n  owner: {\n    id: 'permission_owner',\n    defaultMessage: \"Owner ({val})\",\n    description: 'Name of O permission'\n  }\n});\n\nclass PermissionsEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mode: (props.mode || '').replace('N', '')\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(val) {\n    let mode = this.state.mode;\n    const idx = mode.indexOf(val);\n    if (idx == -1) {\n      mode += val;\n    } else {\n      mode = mode.replace(val, '');\n    }\n    this.setState({mode: mode});\n  }\n\n  handleSubmit() {\n    // Normalize string, otherwise cannot check if mode has changed.\n    const mode = (this.state.mode || 'N').split('').sort().join('');\n    const before = (this.props.mode || 'N').split('').sort().join('')\n    if (mode !== before) {\n      this.props.onSubmit(mode);\n    } else {\n      this.props.onCancel();\n    }\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const all = 'JRWPASDO';\n    const names = {\n      'J': formatMessage(messages.joiner, {val: 'J'}),\n      'R': formatMessage(messages.reader, {val: 'R'}),\n      'W': formatMessage(messages.writer, {val: 'W'}),\n      'P': formatMessage(messages.preser, {val: 'P'}),\n      'A': formatMessage(messages.approver, {val: 'A'}),\n      'S': formatMessage(messages.sharer, {val: 'S'}),\n      'D': formatMessage(messages.deleter, {val: 'D'}),\n      'O': formatMessage(messages.owner, {val: 'O'})\n    };\n\n    let skip = this.props.skip || '';\n    let mode = this.state.mode;\n    let compare = (this.props.compare || '').replace('N', '');\n    let items = [];\n    for (let i=0; i<all.length; i++) {\n      let c = all.charAt(i);\n      if (skip.indexOf(c) >= 0 && mode.indexOf(c) < 0) {\n        // Permission is marked as inactive: hide unchecked permissions, disable checked permissions\n        continue;\n      }\n      items.push(\n        <tr key={c}>\n          <td>{names[c]}</td>\n          <td className=\"checkbox\">{skip.indexOf(c) < 0 ?\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} onChange={this.handleChange}/>\n            :\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} />\n          }</td>{this.props.compare ? <td className=\"checkbox\">\n            <CheckBox name={c} checked={(compare.indexOf(c) >= 0)}/>\n          </td> : null}\n        </tr>\n      );\n    }\n\n    return (\n      <div className=\"panel-form-column\">\n        {this.props.userTitle ?\n          <ul className=\"contact-box small\"><Contact\n            tinode={this.props.tinode}\n            item={this.props.item}\n            title={this.props.userTitle}\n            small={true}\n            avatar={makeImageUrl(this.props.userAvatar ? this.props.userAvatar : null)} /></ul> : null}\n        <label className=\"small\"><FormattedMessage id=\"title_permissions\"\n          defaultMessage=\"Permissions\" description=\"Section title\"/></label>\n        <table className=\"permission-editor\">\n        {this.props.compare ?\n          <thead><tr>\n            <th></th><th>{this.props.modeTitle}</th>\n            <th>{this.props.compareTitle}</th>\n          </tr></thead> :\n          null}\n        <tbody>\n          {items}\n        </tbody></table>\n        <br />\n        <div className=\"dialog-buttons\">\n          <button className=\"outline\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(PermissionsEditor);\n","// Image zoom and crop widget.\n\nimport React from 'react';\n\nconst DEFAULT_MAX_ZOOM = 2.5;\n\nexport default class Cropper extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Coordinates of the top left corner of the image in container coordinates.\n      panX: 0,\n      panY: 0,\n      // Origin of the zoom in image coordinates.\n      originX: 0,\n      originY: 0,\n      // Zoom scale.\n      zoom: 1,\n      // Zoom min and max.\n      minZoom: 0,\n      maxZoom: DEFAULT_MAX_ZOOM,\n    };\n\n    // References to DOM elements for hooking up events and getting screen dimensions.\n    // The transparent element which captures mouse moves (moves with the image).\n    this.overlay = React.createRef();\n    // The image cutout window or view port (static).\n    this.cutout = React.createRef();\n    // Scaled and translated image preview.\n    this.preview = React.createRef();\n    // The main container (static).\n    this.boundingBox = React.createRef();\n\n    // The original image width and height before any scaling.\n    this.imageWidth = 0;\n    this.imageHeight = 0;\n\n    // Mouse position when dragging.\n    this.mouseX = 0\n    this.mouseY = 0;\n    // Length of the previous mouse move when dragging.\n    this.prevDistance = 0;\n\n    // Bounding rectangles of static elements.\n    this.cutoutRect = {};\n    this.bBoxRect = {};\n    // Center of the bounding box.\n    this.originX = 0;\n    this.originY = 0;\n\n    this.initScaling = this.initScaling.bind(this);\n    this.onZoom = this.onZoom.bind(this);\n    this.handleZoom = this.handleZoom.bind(this);\n    this.mouseDown = this.mouseDown.bind(this);\n    this.mouseUp = this.mouseUp.bind(this);\n    this.mouseMove = this.mouseMove.bind(this);\n    this.mouseTouch = this.mouseTouch.bind(this);\n    this.positionAll = this.positionAll.bind(this);\n    this.translate = this.translate.bind(this);\n  }\n\n  componentDidMount() {\n    this.overlay.current.addEventListener('mousedown', this.mouseDown, { passive: true });\n    this.overlay.current.addEventListener('touchstart', this.mouseDown, { passive: true });\n\n    // The rectangle position is in viewport coordinates.\n    this.bBoxRect = this.boundingBox.current.getBoundingClientRect();\n    // Center of the bounding box in container coordinates.\n    this.originX = this.bBoxRect.width / 2;\n    this.originY = this.bBoxRect.height / 2;\n\n    // The rectangle position is in viewport coordinates.\n    this.cutoutRect = this.cutout.current.getBoundingClientRect();\n  }\n\n  componentWillUnmount() {\n    this.overlay.current.removeEventListener('mousedown', this.mouseDown);\n    this.overlay.current.removeEventListener('touchstart', this.mouseDown);\n  }\n\n  // Position all elements.\n  positionAll(panX, panY, zoom) {\n    // Zoom origin in image preview coordinates.\n    this.setState({\n      panX: panX,\n      panY: panY,\n      zoom: zoom,\n      originX: this.originX - panX,\n      originY: this.originY - panY,\n    });\n\n    // Pass cut out coordinates to caller.\n    const left = (this.originX - panX) * zoom - this.originX;\n    const top = (this.originY - panY) * zoom - this.originY;\n    this.props.onChange(\n      (left + this.cutoutRect.left - this.bBoxRect.left) / zoom,\n      (top + this.cutoutRect.top - this.bBoxRect.top) / zoom,\n      this.cutoutRect.width / zoom,\n      this.cutoutRect.height / zoom,\n      zoom);\n  }\n\n  // Check if new location is within the limits.\n  static checkBound(currPan, img, cutout, delta) {\n    let nextDiff = Math.min(0, cutout[0] - img[0] - delta, img[1] - cutout[1] + delta);\n    if (nextDiff == 0) {\n      // Cutout is completely within the image.\n      currPan += delta;\n    } else if (Math.min(0, cutout[0] - img[0], img[1] - cutout[1]) < nextDiff) {\n      // Cutout is outside of the range but closer to the bound.\n      currPan += delta;\n    }\n    return currPan;\n  }\n\n  initScaling() {\n    // Initialize components.\n    const imgRect = this.preview.current.getBoundingClientRect();\n\n    this.imageWidth = imgRect.width;\n    this.imageHeight = imgRect.height;\n\n    // Set zoom slider's min and max values. Make sure the scaled image cannot be smaller than the cutout.\n    const minZoom = Math.max(this.cutoutRect.width / imgRect.width, this.cutoutRect.height / imgRect.height);\n    this.setState({\n      minZoom: minZoom,\n      maxZoom: Math.max(DEFAULT_MAX_ZOOM, minZoom + 1)\n    });\n\n    // Initial zoom level fills the bounding box at the smallest image dimension and overflows the largest, i.e. \"fill\" not \"fit\".\n    const zoom = Math.max(this.bBoxRect.width / imgRect.width, this.bBoxRect.height / imgRect.height);\n    // Converting from viewport coordinates to container, then panning.\n    const panX = this.cutoutRect.left - this.bBoxRect.left -\n      (imgRect.width - this.cutoutRect.width) / 2;\n    const panY = this.cutoutRect.top - this.bBoxRect.top -\n      (imgRect.height - this.cutoutRect.height) / 2;\n\n    this.positionAll(panX, panY, zoom);\n  }\n\n  onZoom(e) {\n    this.handleZoom(e.target.value);\n  }\n\n  handleZoom(zoom) {\n    let panX = this.state.panX;\n    let panY = this.state.panY;\n\n    // Ensure that the image at the new zoom is not outside of the cutout boundaries.\n    // Calculate image coordinates at the new zoom.\n    const imgLeft = this.originX - (this.originX - panX) * zoom;\n    const imgRight = imgLeft + this.imageWidth * zoom;\n    // Cutout in the same coordinates as the image.\n    const coLeft = this.cutoutRect.left - this.bBoxRect.left;\n    const coRight = coLeft + this.cutoutRect.width;\n    if (coLeft < imgLeft) {\n      panX -= imgLeft - coLeft;\n    } else if (coRight > imgRight) {\n      panX += coRight - imgRight;\n    }\n    const imgTop = this.originY - (this.originY - panY) * zoom;\n    const imgBottom = imgTop + this.imageHeight * zoom;\n    const coTop = this.cutoutRect.top - this.bBoxRect.top;\n    const coBottom = coTop + this.cutoutRect.height;\n    if (coTop < imgTop) {\n      panY -= imgTop - coTop;\n    } else if (coBottom > imgBottom) {\n      panY += coBottom - imgBottom;\n    }\n\n    this.positionAll(panX, panY, zoom);\n  }\n\n  mouseDown(e) {\n    if (e.touches) {\n      this.mouseX = e.touches[0].pageX;\n      this.mouseY = e.touches[0].pageY;\n    } else {\n      this.mouseX = e.pageX;\n      this.mouseY = e.pageY;\n    }\n\n    window.addEventListener('mousemove', this.mouseMove, { passive: false });\n    window.addEventListener('touchmove', this.mouseTouch, { passive: false });\n    window.addEventListener('mouseup', this.mouseUp, { passive: true });\n    window.addEventListener('touchend', this.mouseUp, { passive: true });\n    // Disable text selection in the entire document.\n    document.body.style['userSelect'] = 'none';\n  }\n\n  // Perform image panning.\n  translate(pageX, pageY) {\n    const dX = pageX - this.mouseX;\n    const dY = pageY - this.mouseY;\n\n    this.mouseX = pageX;\n    this.mouseY = pageY;\n\n    // Make sure the image is within the cutout window.\n    const imgRect = this.preview.current.getBoundingClientRect();\n\n    // Check if the new position is within the boundaries, and if not if it's closer to them.\n    let panX = Cropper.checkBound(this.state.panX, [imgRect.left, imgRect.right],\n      [this.cutoutRect.left, this.cutoutRect.right], dX);\n    let panY = Cropper.checkBound(this.state.panY, [imgRect.top, imgRect.bottom],\n      [this.cutoutRect.top, this.cutoutRect.bottom], dY);\n\n    this.positionAll(panX, panY, this.state.zoom);\n  }\n\n  // Image panning.\n  mouseMove(e) {\n    e.preventDefault();\n    this.translate(e.pageX, e.pageY);\n  }\n\n  mouseTouch(e) {\n    e.preventDefault();\n\n    if (e.touches.length == 1) {\n      this.translate(e.touches[0].pageX, e.touches[0].pageY);\n      return;\n    }\n\n    // Image zooming by pinching.\n    const [touch0, touch1] = e.touches;\n    const distance = Math.sqrt((touch0.pageX - touch1.pageX) * (touch0.pageX - touch1.pageX) +\n      (touch0.pageY - touch1.pageY) * (touch0.pageY - touch1.pageY));\n\n    if (!this.prevDistance) {\n        this.prevDistance = distance / this.state.zoom;\n    }\n\n    let scale = (distance / this.prevDistance);\n    this.handleZoom(Math.max(this.minZoom, Math.min(this.maxZoom, scale)));\n  }\n\n  mouseUp(e) {\n    window.removeEventListener('mousemove', this.mouseMove);\n    window.removeEventListener('touchmove', this.mouseTouch);\n    window.removeEventListener('mouseup', this.mouseUp);\n    window.removeEventListener('touchend', this.mouseUp);\n    // Re-enable text selection.\n    document.body.style['userSelect'] = '';\n\n    this.positionAll(this.state.panX, this.state.panY, this.state.zoom);\n  }\n\n  render() {\n    // transform3d: position and scale.\n    const t3d = `translate3d(${this.state.panX}px, ${this.state.panY}px, 0) scale(${this.state.zoom})`;\n    // transformOrigin: zoom origin.\n    const orig = `${this.state.originX}px ${this.state.originY}px`;\n\n    // Overlay position and size are exactly equal to the position and size of the transformed image\n    // except it uses different coordinates.\n    const overlay = {\n      top: `${this.originY - this.state.originY * this.state.zoom}px`,\n      left: `${this.originX - this.state.originX * this.state.zoom}px`,\n      width: `${this.imageWidth * this.state.zoom}px`,\n      height: `${this.imageHeight * this.state.zoom}px`\n    };\n    return (\n      <div className=\"cropper\">\n        <div className=\"bounding-box\" ref={this.boundingBox}>\n          <img src={this.props.source} className=\"preview\" alt=\"\"\n            style={{transform: t3d, transformOrigin: orig}} ref={this.preview} onLoad={this.initScaling} />\n          <div className=\"cutout circle\" ref={this.cutout} />\n          <div className=\"overlay\" style={overlay} ref={this.overlay} />\n        </div>\n        <div className=\"zoom-wrapper\">\n          <input type=\"range\" className=\"zoomer\"\n            step=\"0.001\" min={this.state.minZoom} max={this.state.maxZoom} value={this.state.zoom} onChange={this.onZoom} />\n        </div>\n      </div>\n    );\n  }\n}\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Cropper from './cropper.jsx';\nimport { imageCrop } from '../lib/blob-helpers.js';\n\nexport default class AvatarCrop extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      top: 0,\n      left: 0,\n      width: 0,\n      height: 0,\n      scale: 1\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  // Cut out in image coordinates and desired scale factor.\n  handleChange(left, top, width, height, scale) {\n    this.setState({\n      left: left,\n      top: top,\n      width: width,\n      height: height,\n      scale: scale\n    });\n  }\n\n  handleSubmit() {\n    imageCrop(this.props.mime, this.props.avatar,\n      this.state.left, this.state.top, this.state.width, this.state.height,\n      this.state.scale)\n      .then(img => {\n        this.props.onSubmit(img.mime, img.blob, img.width, img.height);\n      })\n      .catch(err => {\n        this.props.onError(err);\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <Cropper\n            source={this.props.avatar}\n            onChange={this.handleChange} />\n        </div>\n        <div className=\"dialog-buttons\">\n          {this.props.onCancel ?\n            <button className=\"secondary\" onClick={this.props.onCancel}>\n              <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n            </button>\n            : null}\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n","// Password with a visiblity toggle.\nimport React from 'react';\n\nexport default class VisiblePassword extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: this.props.value,\n      visible: false\n    };\n\n    this.handleVisibility = this.handleVisibility.bind(this);\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n    if (this.props.onChange) {\n      this.props.onChange(e);\n    }\n  }\n\n  handleVisibility(e) {\n    e.preventDefault();\n    this.setState({visible: !this.state.visible});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode == 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, visible: false});\n      if (this.props.onFinished) {\n        this.props.onFinished();\n      }\n    } else if (e.keyCode == 13) {\n      // Enter pressed\n      this.handleEditingFinished();\n    }\n  }\n\n  handleEditingFinished(e) {\n    if (e) {\n      let currentTarget = e.currentTarget;\n      setTimeout(() => {\n        if (!currentTarget.contains(document.activeElement)) {\n          if (this.props.onFinished) {\n            this.props.onFinished(this.state.value);\n          }\n        }\n      }, 0);\n    } else if (this.props.onFinished) {\n      this.props.onFinished(this.state.value.trim());\n    }\n  }\n\n  render() {\n    return (\n      <div tabIndex=\"-1\" className=\"group-focus\"\n        onBlur={this.handleEditingFinished}>\n        <input className=\"with-visibility\"\n          type={this.state.visible ? \"text\" : \"password\"}\n          value={this.state.value}\n          placeholder={this.props.placeholder}\n          required={this.props.required ? 'required' : ''}\n          autoFocus={this.props.autoFocus ? 'autoFocus' : ''}\n          autoComplete={this.props.autoComplete}\n          onChange={this.handeTextChange}\n          onKeyDown={this.handleKeyDown} />\n        <span onClick={this.handleVisibility}>\n          <i className=\"material-icons clickable light-gray\">\n            {this.state.visible ? 'visibility' : 'visibility_off'}\n          </i>\n        </span>\n      </div>\n    );\n  }\n}\n","// In-place text editor. Shows text with an icon which toggles it into an input field.\nimport React from 'react';\n\nimport VisiblePassword from './visible-password.jsx';\n\nexport default class InPlaceEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selfRef = React.createRef();\n\n    this.state = {\n      active: props.active,\n      initialValue: props.value || '',\n      value: props.value || ''\n    };\n\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleStartEditing = this.handleStartEditing.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n    this.handlePasswordFinished = this.handlePasswordFinished.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // If text has changed while in read mode, update text and discard changes.\n    // Ignore update if in edit mode.\n    const newValue = this.props.value || '';\n    if (prevState.initialValue != newValue && !prevState.active) {\n      this.setState({\n        initialValue: newValue,\n        value: newValue\n      });\n    }\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value || ''});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, active: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleEditingFinished(e);\n    }\n  }\n\n   handleStartEditing() {\n    if (!this.props.readOnly) {\n      this.setState({active: true}, () => {\n        if (this.selfRef.current) {\n          this.selfRef.current.focus();\n        }\n      });\n    }\n  }\n\n  handleEditingFinished(event) {\n    const value = this.state.value.trim();\n    if (this.props.required && (!event.target.checkValidity() || !value)) {\n      // Empty input\n      this.setState({value: this.props.value, active: false});\n      return;\n    }\n    this.setState({active: false});\n    if ((value || this.props.value) && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  handlePasswordFinished(value) {\n    this.setState({active: false});\n    if (value && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  render() {\n    if (!this.state.active) {\n      let spanText = this.props.type == 'password' ? '••••••••' : this.state.value;\n      let spanClass = 'in-place-edit' + (this.props.readOnly ? ' disabled' : '');\n      if (!spanText) {\n        spanText = this.props.placeholder;\n        spanClass += ' placeholder';\n      }\n      if (!this.props.multiline || this.props.multiline == 1) {\n        spanClass += ' short';\n      }\n\n      return (<span className={spanClass} onClick={this.handleStartEditing}>\n        <span>{spanText}</span>\n      </span>);\n    }\n\n    let element;\n    const attr = {};\n    if (this.props.type == 'password') {\n      element = VisiblePassword;\n      attr.onFinished = this.handlePasswordFinished;\n    } else {\n      if (this.props.multiline > 1) {\n        element = 'textarea';\n        attr.rows = this.props.multiline;\n        attr.className = 'inplace-edit';\n      } else {\n        element = 'input';\n        attr.type = this.props.type || 'text';\n      }\n      attr.value = this.state.value;\n      attr.onChange = this.handeTextChange;\n      attr.onKeyDown = this.handleKeyDown;\n      attr.onBlur = this.handleEditingFinished;\n    }\n    attr.placeholder = this.props.placeholder;\n    attr.required = this.props.required ? 'required' : '';\n    attr.autoComplete = this.props.autoComplete;\n    attr.autoFocus = true;\n    attr.ref = this.selfRef;\n\n    return React.createElement(element, attr, null);\n  }\n};\n","// TagManager: edit topic or user tags.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\n\nimport { MAX_TAG_COUNT, MAX_TAG_LENGTH, MIN_TAG_LENGTH } from '../config.js';\nimport { arrayEqual } from '../lib/utils.js';\n\nexport default class TagManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tags: this.props.tags || [],\n      tagInput: '',\n      activated: this.props.activated\n    };\n\n    this.handleTagInput = this.handleTagInput.bind(this);\n    this.handleAddTag = this.handleAddTag.bind(this);\n    this.handleRemoveTag = this.handleRemoveTag.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const tags = nextProps.tags || [];\n    if (!arrayEqual(tags, prevState.tags) && !prevState.activated) {\n      return {tags: tags};\n    }\n    return null;\n  }\n\n  handleTagInput(text) {\n    this.setState({tagInput: text});\n    if (text.length > 0) {\n      const last = text[text.length-1];\n      if (text[0] == '\"') {\n        // This is a quoted string.\n        if (text.length > 1 && last == '\"') {\n          this.handleAddTag(text.substring(1, text.length-1));\n        }\n      } else if (last == ',' || last == ' ' || last == ';' || last == '\"') {\n        // User entered ',', ' ' or ';'\n        this.handleAddTag(text.substring(0, text.length-1).trim());\n      }\n    }\n  }\n\n  handleAddTag(tag) {\n    const maxTagCount = this.props.tinode.getServerLimit('maxTagCount', MAX_TAG_COUNT);\n\n    if (tag.length > 0 && this.state.tags.length < maxTagCount) {\n      const tags = this.state.tags.slice(0);\n      tags.push(tag);\n\n      this.setState({tags: tags, tagInput: ''});\n      if (this.props.onTagsChanged) {\n        this.props.onTagsChanged(tags);\n      }\n      return tags;\n    }\n    return this.state.tags;\n  }\n\n  handleRemoveTag(tag, index) {\n    const tags = this.state.tags.slice(0);\n    tags.splice(index, 1);\n    this.setState({tags: tags});\n    if (this.props.onTagsChanged) {\n      this.props.onTagsChanged(tags);\n    }\n  }\n\n  handleSubmit() {\n    // Add unprocessed input to tags, submit the list.\n    this.props.onSubmit(this.handleAddTag(this.state.tagInput.trim()));\n    this.setState({activated: false, tags: this.props.tags || []});\n  }\n\n  handleCancel() {\n    this.setState({activated: false, tagInput: '', tags: this.props.tags || []});\n    if (this.props.onCancel) {\n      this.props.onCancel();\n    }\n  }\n\n  render() {\n    const minTagLength = this.props.tinode.getServerLimit('minTagLength', MIN_TAG_LENGTH);\n    const maxTagLength = this.props.tinode.getServerLimit('maxTagLength', MAX_TAG_LENGTH);\n\n    let tags = [];\n    if (this.state.activated) {\n      this.state.tags.map((tag) => {\n        tags.push({user: tag, invalid: (tag.length < minTagLength || tag.length > maxTagLength)});\n      });\n    } else {\n      this.state.tags.map((tag) => {\n        tags.push(<span className=\"badge\" key={tags.length}>{tag}</span>);\n      });\n      if (tags.length == 0) {\n        tags = (\n          <i>\n            <FormattedMessage id=\"tags_not_found\" defaultMessage=\"No tags defined. Add some.\" description=\"\" />\n          </i>\n        );\n      }\n    }\n    return (\n      <div className=\"panel-form-column\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">{this.props.title}</label>\n        </div>\n        {this.state.activated ?\n        <div>\n          <FormattedMessage id=\"tags_editor_no_tags\" defaultMessage=\"Add some tags\"\n            description=\"Tag editor prompt when no tags are found.\">{\n            (add_tags_prompt) => <ChipInput\n              tinode={this.props.tinode}\n              chips={tags}\n              avatarDisabled={true}\n              prompt={add_tags_prompt}\n              tabIndex={this.props.tabIndex}\n              onEnter={this.handleAddTag}\n              onFocusLost={this.handleAddTag}\n              onCancel={this.handleCancel}\n              onChipRemoved={this.handleRemoveTag}\n              filterFunc={this.handleTagInput} />\n          }</FormattedMessage>\n          {this.props.onSubmit || this.props.onCancel ?\n            <div id=\"tag-manager-buttons\" className=\"dialog-buttons panel-form-row\">\n              <button className=\"outline\" onClick={this.handleCancel}>\n                <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n              </button>\n              <button className=\"primary\" onClick={this.handleSubmit}>\n                <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n              </button>\n            </div>\n          : null}\n        </div>\n        :\n        <div className=\"quoted\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.setState({activated: true});}}>\n            <i className=\"material-icons\">edit</i> &nbsp;<FormattedMessage id=\"title_manage_tags\" defaultMessage=\"Manage\"\n              description=\"Section title for the list of tags\" />\n          </a>\n          <>{tags}</>\n        </div>\n      }\n      </div>\n    );\n  }\n};\n","// Widget for editing topic description.\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarCrop from './avatar-crop.jsx';\nimport AvatarUpload from './avatar-upload.jsx';\nimport InPlaceEdit from './in-place-edit.jsx';\nimport TagManager from './tag-manager.jsx';\n\nimport { AVATAR_SIZE, MAX_AVATAR_BYTES, MAX_EXTERN_ATTACHMENT_SIZE,\n  MAX_INBAND_ATTACHMENT_SIZE, MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH } from '../config.js';\nimport { imageScaled, blobToBase64, makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, theCard } from '../lib/utils.js';\n\nexport default class TopicDescEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    const acs = topic.getAccessMode();\n    this.state = {\n      isMe: Tinode.isMeTopicName(this.props.topic),\n      owner: acs && acs.isOwner(),\n      fullName: topic.public ? topic.public.fn : undefined,\n      private: topic.private ? topic.private.comment : null,\n      description: topic.public ? topic.public.note : undefined,\n      avatar: makeImageUrl(topic.public ? topic.public.photo : null),\n      tags: topic.tags() || [],\n      newAvatar: null,\n      newAvatarMime: null\n    };\n\n    this.previousOnTags = null;\n\n    this.tnNewTags = this.tnNewTags.bind(this);\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\n    this.handleImageUpdated = this.handleImageUpdated.bind(this);\n    this.handleAvatarCropped = this.handleAvatarCropped.bind(this);\n    this.handlePrivateUpdate = this.handlePrivateUpdate.bind(this);\n    this.handleDescriptionUpdate = this.handleDescriptionUpdate.bind(this);\n    this.uploadAvatar = this.uploadAvatar.bind(this);\n    this.handleAvatarCropCancel = this.handleAvatarCropCancel.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n  }\n\n  componentDidMount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    this.previousOnTags = topic.onTagsUpdated;\n    topic.onTagsUpdated = this.tnNewTags;\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    topic.onTagsUpdated = this.previousOnTags;\n  }\n\n  tnNewTags(tags) {\n    this.setState({tags: tags});\n  }\n\n  handleFullNameUpdate(fn) {\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\n    if (fn && this.state.fullName !== fn) {\n      this.setState({fullName: fn});\n      this.props.onUpdateTopicDesc(this.props.topic, theCard(fn, null));\n    }\n  }\n\n  handlePrivateUpdate(comment) {\n    comment = comment.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.private !== comment) {\n      this.setState({private: comment});\n      this.props.onUpdateTopicDesc(this.props.topic, null, comment || Tinode.DEL_CHAR);\n    }\n  }\n\n  handleDescriptionUpdate(desc) {\n    desc = desc.trim().substring(0, MAX_TOPIC_DESCRIPTION_LENGTH);\n    if (desc) {\n      this.setState({description: desc});\n      this.props.onUpdateTopicDesc(this.props.topic, theCard(null, null, null, desc));\n    }\n  }\n\n  // AvatarUpload widget has changed the avatar: received a new file or deleted the avatar.\n  handleImageUpdated(mime, img) {\n    // This will show the AvatarCropView is img is not null.\n    this.setState({newAvatar: img, newAvatarMime: mime});\n    if (!img) {\n      // Deleting the avatar.\n      this.setState({avatar: null});\n      this.props.onUpdateTopicDesc(this.props.topic, theCard(null, Tinode.DEL_CHAR));\n    }\n  }\n\n  // AvatarCropView calls this method when the user has cropped the image.\n  handleAvatarCropped(mime, blob, width, height) {\n    const url = blob ? URL.createObjectURL(blob) : null;\n    this.setState({avatar: url, newAvatar: null, newAvatarMime: null});\n    if (blob) {\n      this.uploadAvatar(mime, blob, width, height);\n    }\n  }\n\n  // Utility method for converting cropped avatar blob to bytes for sending inband or\n  // for uploading it to the server out of band.\n  uploadAvatar(mime, blob, width, height) {\n    const readyToUpload = (image) => {\n      let {mime, blob, width, height} = image;\n      if (blob.size > MAX_AVATAR_BYTES) {\n        // Too large to send inband - uploading out of band and sending as a link.\n        const uploader = this.props.tinode.getLargeFileHelper();\n\n        this.setState({uploading: true});\n        uploader.upload(blob)\n          .then((url) => {\n            this.props.onUpdateTopicDesc(this.props.topic, theCard(null, url));\n          })\n          .catch((err) => {\n            this.props.onError(err, 'err');\n          })\n          .finally(() => {\n            this.setState({uploading: false});\n          });\n      } else {\n        this.setState({uploading: true});\n        // Convert blob to base64-encoded bits.\n        blobToBase64(blob)\n          .then(b64 => {\n            const du = makeImageUrl({data: b64.bits, type: mime});\n            this.setState({source: du});\n            this.props.onUpdateTopicDesc(this.props.topic, theCard(null, du));\n            this.setState({uploading: false});\n          });\n      }\n    };\n\n    if (width > AVATAR_SIZE || height > AVATAR_SIZE || width != height) {\n      // Avatar is not square or too large even after cropping. Shrink it and make square.\n      imageScaled(blob, AVATAR_SIZE, AVATAR_SIZE, MAX_EXTERN_ATTACHMENT_SIZE, true)\n        .then(scaled => readyToUpload)\n        .catch(err => {\n          this.props.onError(err, 'err');\n        });\n    } else {\n      readyToUpload({mime: mime, blob: blob, width: width, height: height});\n    }\n  }\n\n  handleAvatarCropCancel(img) {\n    this.setState({newAvatar: null, newAvatarMime: null});\n  }\n\n  handleTagsUpdated(tags) {\n    // Check if tags have actually changed.\n    if (arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      return;\n    }\n    this.props.onUpdateTags(tags);\n  }\n\n  render() {\n    if (this.state.newAvatar) {\n      return (\n        <AvatarCrop\n          avatar={this.state.newAvatar}\n          mime={this.state.newAvatarMime}\n          onSubmit={this.handleAvatarCropped}\n          onCancel={this.handleAvatarCropCancel}\n          onError={this.props.onError} />\n      );\n    }\n\n    const editable = this.state.isMe || this.state.owner;\n\n    return (\n      <>\n      <div className=\"panel-form-column\">\n        <center>\n          <AvatarUpload\n            tinode={this.props.tinode}\n            avatar={this.state.avatar}\n            readOnly={!editable}\n            uid={this.props.topic}\n            title={this.state.fullName}\n            onImageUpdated={this.handleImageUpdated}\n            onError={this.props.onError} />\n        </center>\n        {this.state.isMe ?\n          <div className=\"group\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n              description=\"Label for full name editing\" />\n            </label>\n            <div>\n              <FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n                description=\"Input placeholder for person's full name\">{\n                (full_name_placeholder) => <InPlaceEdit\n                  placeholder={full_name_placeholder}\n                  value={this.state.fullName}\n                  required={true}\n                  onFinished={this.handleFullNameUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n        :\n          <>\n            <div className=\"group\">\n              <div><label className=\"small\">\n                <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                  description=\"Label for editing topic name\" />\n              </label></div>\n              <div>\n                <FormattedMessage id=\"topic_name_editing_placeholder\" defaultMessage=\"Freeform name of the group\"\n                  description=\"Prompt for entering topic name\">{\n                  (group_name_placeholder) => <InPlaceEdit\n                    placeholder={group_name_placeholder}\n                    readOnly={!editable}\n                    value={this.state.fullName}\n                    required={true}\n                    onFinished={this.handleFullNameUpdate} />\n                }</FormattedMessage>\n              </div>\n            </div>\n            <div className=\"group\">\n              <div>\n                <label className=\"small\">\n                  <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                    description=\"Label for editing 'private'\" />\n                </label>\n              </div>\n              <div>\n                <FormattedMessage id=\"private_editing_placeholder\" defaultMessage=\"Visible to you only\"\n                  description=\"Placeholder for editing 'private'\">{\n                  (private_placeholder) => <InPlaceEdit\n                    placeholder={private_placeholder}\n                    value={this.state.private}\n                    onFinished={this.handlePrivateUpdate} />\n                }</FormattedMessage>\n              </div>\n            </div>\n          </>\n        }\n        {editable || this.state.description ?\n          <div className=\"group\">\n            <div><label className=\"small\">\n              <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                description=\"Label for editing topic description\" />\n            </label></div>\n            <div>\n              <FormattedMessage id=\"description_editing_placeholder\"\n                defaultMessage=\"Description (optional)\"\n                description=\"Placeholder for editing topic description\">{\n                (private_placeholder) => <InPlaceEdit\n                  placeholder={private_placeholder}\n                  readOnly={!editable}\n                  value={this.state.description}\n                  multiline={2}\n                  onFinished={this.handleDescriptionUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n          : null\n        }\n      </div>\n      {editable ?\n        <>\n          <div className=\"hr\" />\n          <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (search & discovery)\"\n            description=\"Section title for TagManager\">{\n              (title_tag_manager) => <TagManager\n                tinode={this.props.tinode}\n                title={title_tag_manager}\n                activated={false}\n                tags={this.state.tags}\n                onSubmit={this.handleTagsUpdated} />\n          }</FormattedMessage>\n        </>\n        : null\n      }\n      </>\n    );\n  }\n};\n","// View for editing topic (including 'me' topic) parameters.\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport TopicDescEdit from '../widgets/topic-desc-edit.jsx';\n\nimport { arrayEqual, asEmail, asPhone } from '../lib/utils.js';\n\nexport default class TopicCommon extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    const acs = topic.getAccessMode();\n    this.state = {\n      isMe: this.props.topic == 'me',\n      owner: acs && acs.isOwner(),\n      credentials: (topic.getCredentials ? topic.getCredentials() : null) || [],\n      addCredActive: false,\n      addCredInvalid: false,\n      newCred: '',\n      tags: []\n    };\n\n    this.previousTagsUpdated = undefined;\n\n    this.onTagsUpdated = this.onTagsUpdated.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.tnCredsUpdated = this.tnCredsUpdated.bind(this);\n    this.handleCredChange = this.handleCredChange.bind(this);\n    this.handleCredKeyDown = this.handleCredKeyDown.bind(this);\n    this.handleCredEntered = this.handleCredEntered.bind(this);\n  }\n\n  // No need to separately handle component mount.\n  componentDidUpdate(props) {\n    const topic = this.props.tinode.getTopic(props.topic);\n    if (!topic) {\n      return;\n    }\n\n    topic.onCredsUpdated = this.tnCredsUpdated;\n\n    if (topic.onTagsUpdated != this.onTagsUpdated) {\n      if (topic.getType() == 'grp') {\n        this.previousTagsUpdated = topic.onTagsUpdated;\n        topic.onTagsUpdated = this.onTagsUpdated;\n      } else {\n        this.previousTagsUpdated = undefined;\n      }\n    }\n\n    if (this.state.topic != props.topic) {\n      this.setState({topic: props.topic});\n    }\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    topic.onCredsUpdated = undefined;\n    topic.onTagsUpdated = this.previousTagsUpdated;\n  }\n\n  tnCredsUpdated(creds) {\n    this.setState({credentials: creds || []});\n  }\n\n  handleCredChange(e) {\n    this.setState({newCred: e.target.value, addCredInvalid: false});\n  }\n\n  handleCredKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({newCred: '', addCredActive: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleCredEntered(e);\n    }\n  }\n\n  handleCredEntered(e) {\n    const value = this.state.newCred.trim();\n    if (!value) {\n      this.setState({addCredActive: false, addCredInvalid: false});\n      return;\n    }\n\n    let val = asPhone(value);\n    let method;\n    if (val) {\n      method = 'tel';\n    } else {\n      val = asEmail(value);\n      if (val) {\n        method = 'email';\n      }\n    }\n    if (method) {\n      this.props.onCredAdd(method, val);\n      this.setState({addCredActive: false, newCred: ''});\n    } else {\n      this.setState({addCredInvalid: true});\n    }\n  }\n\n  // Server informs that the tags have been updated.\n  onTagsUpdated(tags) {\n    this.setState({tags: tags});\n\n    if (this.previousTagsUpdated && this.previousTagsUpdated != this.onTagsUpdated) {\n      this.previousTagsUpdated(tags);\n    }\n  }\n\n  // Request server to change tags.\n  handleTagsUpdated(tags) {\n    if (!arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      this.props.onTopicTagsUpdateRequest(this.props.topic, tags);\n    }\n  }\n\n  render() {\n    const credentials = [];\n    if (this.state.isMe) {\n      this.state.credentials.map((cred) => {\n        credentials.push(\n          <div key={cred.meth + \":\" + cred.val + \":\" + cred.done}>{cred.meth}: <tt>{cred.val}</tt>\n            <span> {!cred.done ?\n              <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredConfirm(cred.meth, cred.val);}}>\n                <FormattedMessage id=\"validate_credential_action\" defaultMessage=\"confirm\"\n                  description=\"Validate credentail call to action\" />\n              </a>\n            : null} <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredDelete(cred.meth, cred.val);}}><i\n              className=\"material-icons gray\">delete_outline</i></a></span>\n          </div>\n        );\n      });\n    }\n\n    return (\n      <div className=\"scrollable-panel\">\n        <TopicDescEdit\n          tinode={this.props.tinode}\n          topic={this.props.topic}\n          onUpdateTopicDesc={this.props.onUpdateTopicDesc}\n          onUpdateTags={this.handleTagsUpdated}\n          onError={this.props.onError} />\n        {this.state.isMe ?\n          <>\n            <div className=\"hr\" />\n            <div className=\"panel-form-column\">\n              <label className=\"small\">\n                <FormattedMessage id=\"label_user_contacts\" defaultMessage=\"Contacts:\"\n                description=\"Label for user contacts\" />\n              </label>\n              <div className=\"quoted\">\n                {credentials}\n                {this.state.addCredActive ?\n                  <input type=\"text\" value={this.state.value}\n                    className={this.state.addCredInvalid ? 'invalid' : null}\n                    placeholder=\"Phone number or email\" required=\"required\" autoFocus\n                    onChange={this.handleCredChange} onKeyDown={this.handleCredKeyDown} onBlur={this.handleCredEntered} />\n                  : null}\n                <div>\n                  <a href=\"#\" onClick={(e) => {e.preventDefault(); this.setState({addCredActive: true});}}>\n                    <i className=\"material-icons\">add</i>\n                    <FormattedMessage id=\"button_add_another\" defaultMessage=\"Add another\" description=\"Call to action [+ add another]\" />\n                  </a></div>\n              </div>\n            </div>\n          </>\n        : null\n      }\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport InPlaceEdit from './in-place-edit.jsx';\n\nimport { NO_ACCESS_MODE } from '../config.js';\n\nconst messages = defineMessages({\n  clear_messages: {\n    id: 'action_clear_messages',\n    defaultMessage: 'Clear Messages',\n    description: 'Flat button [Clear Messages] (soft-delete messages)'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n  delete_messages: {\n    id: 'action_delete_messages',\n    defaultMessage: 'Clear Messages for All',\n    description: 'Flat button [Clear for All] (hard-delete all messages)'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  topic_delete: {\n    id: 'topic_delete',\n    defaultMessage: 'Delete Conversation',\n    description: 'Alert title when deleting the topic.'\n  },\n  topic_delete_warning: {\n    id: 'topic_delete_warning',\n    defaultMessage: 'Are you sure you want to delete this conversation? It cannot be undone.',\n    description: 'Alert warning when deleting entire topic'\n  },\n  leave_chat: {\n    id: 'action_leave_chat',\n    defaultMessage: 'Leave Conversation',\n    description: 'Flat button [Leave Conversation]'\n  },\n  leave_chat_warning: {\n    id: 'leave_chat_warning',\n    defaultMessage: 'Are you sure you want to leave this conversation?',\n    description: 'Alert dialog warning when unsubscribing from a chat.'\n  },\n  block_contact: {\n    id: 'action_block_contact',\n    defaultMessage: \"Block Contact\",\n    description: \"Flat button [Block Contact]\"\n  },\n  block_contact_warning: {\n    id: 'block_contact_warning',\n    defaultMessage: 'Are you sure you want to block this contact?',\n    description: 'Alert dialog warning when blocking a contact.'\n  },\n  report_chat: {\n    id: 'action_report_chat',\n    defaultMessage: 'Report Conversation',\n    description: 'Flat button [Report Group]'\n  },\n  report_chat_warning: {\n    id: 'report_chat_warning',\n    defaultMessage: 'Are you sure you want to block and report this conversation?',\n    description: 'Alert dialog warning when reporting a conversation for abuse'\n  },\n  other_user: {\n    id: 'label_other_user',\n    defaultMessage: 'Other',\n    description: 'Label for the other user when the user is unnamed'\n  },\n});\n\nclass TopicSecurity extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleDeleteTopic = this.handleDeleteTopic.bind(this);\n    this.handleDeleteMessages = this.handleDeleteMessages.bind(this);\n    this.handleLeave = this.handleLeave.bind(this);\n    this.handleBlock = this.handleBlock.bind(this);\n    this.handleReport = this.handleReport.bind(this);\n  }\n\n  handleDeleteTopic(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.topic_delete), // title\n      formatMessage(messages.topic_delete_warning), // content\n      (() => { this.props.onDeleteTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleDeleteMessages(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(this.props.deleter ? messages.delete_messages : messages.clear_messages), // title\n      formatMessage(this.props.deleter ? messages.delete_messages_warning : messages.clear_messages_warning), // content\n      (() => { this.props.onDeleteMessages(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleLeave(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.leave_chat), // title\n      formatMessage(messages.leave_chat_warning), // content\n      (() => { this.props.onLeaveTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleBlock(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.block_contact), // title\n      formatMessage(messages.block_contact_warning), // content\n      (() => { this.props.onBlockTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleReport(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.report_chat), // title\n      formatMessage(messages.report_chat_warning), // content\n      (() => { this.props.onReportTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          {!this.props.channel ?\n            <a href=\"#\" className=\"flat-button\" onClick={this.handleDeleteMessages}>\n              <i className=\"material-icons\">delete_outline</i> &nbsp;{\n                formatMessage(this.props.deleter ? messages.delete_messages : messages.clear_messages)\n              }\n            </a>\n            :\n            null\n          }\n          {this.props.owner ?\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleDeleteTopic}>\n              <i className=\"material-icons\">delete</i> &nbsp;{formatMessage(messages.topic_delete)}\n            </a>\n            :\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleLeave}>\n              <i className=\"material-icons\">exit_to_app</i> &nbsp;{formatMessage(messages.leave_chat)}\n            </a>\n          }\n          {!this.props.groupTopic ?\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleBlock}>\n              <i className=\"material-icons\">block</i> &nbsp;{formatMessage(messages.block_contact)}\n            </a>\n            :\n            null\n          }\n          {!this.props.owner ?\n            <a href=\"#\" className=\"danger flat-button\" onClick={this.handleReport}>\n              <i className=\"material-icons\">report</i> &nbsp;{formatMessage(messages.report_chat)}\n            </a>\n            :\n            null\n          }\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          {this.props.groupTopic ?\n            <>\n              <div className=\"group\">\n                <label>\n                  <FormattedMessage id=\"label_your_permissions\" defaultMessage=\"Your permissions:\"\n                    description=\"Label for current user permissions\" />\n                </label> <tt className=\"clickable\"\n                  onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('want')}}>\n                  {this.props.access}\n                </tt>\n              </div>\n              <div className=\"group\">\n                <div>\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_default_access_mode\" defaultMessage=\"Default access mode:\"\n                    description=\"Label for default access mode\" />\n                  </label>\n                </div>\n                <div className=\"quoted\">\n                  <div>Auth: <tt className=\"clickable\"\n                    onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('auth')}}>{this.props.auth}</tt>\n                  </div>\n                  <div>Anon: <tt className=\"clickable\"\n                    onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('anon')}}>{this.props.anon}</tt>\n                  </div>\n                </div>\n              </div>\n            </>\n            :\n            <div className=\"group\">\n              <div>\n                <label className=\"small\">\n                  <FormattedMessage id=\"label_permissions\" defaultMessage=\"Permissions:\"\n                    description=\"Section title\" />\n                </label>\n              </div>\n              <div className=\"quoted\">\n                <div>\n                  <FormattedMessage id=\"label_you\" defaultMessage=\"You:\"\n                    description=\"Label for the current user\" /> <tt className=\"clickable\"\n                    onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('want')}}>\n                    {this.props.access}\n                  </tt>\n                </div>\n                <div>{this.props.fullName ? this.props.fullName : formatMessage(messages.other_user)}:\n                  &nbsp;<tt className=\"clickable\"\n                    onClick={(e) => {e.preventDefault(); this.props.onLaunchPermissionsEditor('given')}}>\n                    {this.props.modeGiven2}\n                  </tt>\n                </div>\n              </div>\n            </div>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(TopicSecurity);\n","// InfoView: panel with topic/user info.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport BadgeList from '../widgets/badge-list.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport ContactList from '../widgets/contact-list.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupManager from '../widgets/group-manager.jsx';\nimport MenuCancel from '../widgets/menu-cancel.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\nimport TopicCommon from '../widgets/topic-common.jsx';\nimport TopicSecurity from '../widgets/topic-security.jsx';\n\nimport { MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH, NO_ACCESS_MODE } from '../config.js';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, theCard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  info: {\n    id: 'panel_title_info',\n    description: 'Title for InfoView',\n    defaultMessage: 'Info'\n  },\n  general: {\n    id: 'panel_title_general',\n    description: 'Title for TopicCommon.',\n    defaultMessage: 'General'\n  },\n  security: {\n    id: 'panel_title_security',\n    description: 'Title for TopicSecirity and AccSecurity.',\n    defaultMessage: 'Security'\n  },\n  members: {\n    id: 'panel_title_members',\n    description: 'Title for managing group members view.',\n    defaultMessage: 'Members'\n  },\n  crop: {\n    id: 'panel_title_crop',\n    description: 'Title for AvatarCropView.',\n    defaultMessage: 'Drag to Adjust'\n  },\n  perm_want: {\n    id: 'requested_permissions',\n    defaultMessage: 'Requested',\n    description: 'Title for permissions'\n  },\n  perm_given: {\n    id: 'granted_permissions',\n    defaultMessage: 'Granted',\n    description: 'Title for permissions'\n  },\n  perm_auth: {\n    id: 'permissions_authenticated',\n    defaultMessage: 'Authenticated',\n    description: 'Title for editing default authenticated permissions'\n  },\n  perm_anon: {\n    id: 'permissions_anonymous',\n    defaultMessage: 'Anonymous',\n    description: 'Title for editing default anonymous permissions'\n  },\n  perm_user: {\n    id: 'permissions_user',\n    defaultMessage: 'User\\'s Permissions',\n    description: 'Title for editing user\\'s permissions'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n});\n\nfunction _clip(str, length) {\n  return str && str.substring(0, length);\n}\n\nclass InfoView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      topic: null,\n      owner: false,\n      admin: false,\n      sharer: false,\n      deleter: false,\n      muted: false,\n      address: null,\n      groupTopic: undefined,\n      channel: undefined,\n      fullName: undefined,\n      description: undefined,\n      avatar: null,\n      private: null,\n      selectedContact: null,\n      access: null,\n      modeGiven: null,\n      modeWant: null,\n      modeGiven2: null, // P2P topic, the other user mode given\n      modeWant2: null,  // P2P topic, the other user mode want\n      auth: null,\n      anon: null,\n      contactList: [],\n      trustedBadges: [],\n      previousMetaDesc: undefined,\n      previousSubsUpdated: undefined,\n    };\n\n    this.resetSubs = this.resetSubs.bind(this);\n    this.resetDesc = this.resetDesc.bind(this);\n    this.resetTags = this.resetTags.bind(this);\n    this.onMetaDesc = this.onMetaDesc.bind(this);\n    this.onSubsUpdated = this.onSubsUpdated.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleMuted = this.handleMuted.bind(this);\n    this.handleUnarchive = this.handleUnarchive.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleShowAddMembers = this.handleShowAddMembers.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleMemberSelected = this.handleMemberSelected.bind(this);\n    this.handleContextMenu = this.handleContextMenu.bind(this);\n    this.handleBackNavigate = this.handleBackNavigate.bind(this);\n  }\n\n  // No need to separately handle component mount.\n  componentDidUpdate(props) {\n    const topic = this.props.tinode.getTopic(props.topic);\n    if (!topic) {\n      return;\n    }\n\n    if (this.onMetaDesc != topic.onMetaDesc) {\n      this.previousMetaDesc = topic.onMetaDesc;\n      topic.onMetaDesc = this.onMetaDesc;\n\n      this.previousSubsUpdated = topic.onSubsUpdated;\n      topic.onSubsUpdated = this.onSubsUpdated;\n    }\n\n    if (this.state.topic != props.topic) {\n      this.setState({topic: props.topic});\n      this.resetDesc(topic, props);\n      this.resetSubs(topic, props);\n      this.resetTags(topic);\n    }\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.setState({topic: null});\n    topic.onMetaDesc = this.previousMetaDesc;\n    topic.onSubsUpdated = this.previousSubsUpdated;\n  }\n\n  resetSubs(topic, props) {\n    const newState = {contactList: []};\n    if (topic.getType() == 'p2p') {\n      // Fetch the other party in the p2p conversation.\n      // Topic may not be ready yet, so check if user is found.\n      const user2 = topic.subscriber(props.topic);\n      if (user2) {\n        newState.modeGiven2 = user2.acs.getGiven();\n        newState.modeWant2 = user2.acs.getWant();\n      } else {\n        newState.modeGiven2 = NO_ACCESS_MODE;\n        newState.modeWant2 = NO_ACCESS_MODE;\n      }\n    } else {\n      topic.subscribers((sub) => {\n        newState.contactList.push(sub);\n      }, this);\n    }\n\n    this.setState(newState);\n  }\n\n  resetDesc(topic, props) {\n    const defacs = topic.getDefaultAccess() || {};\n    const acs = topic.getAccessMode();\n\n    const badges = [];\n    if (topic.trusted) {\n      for (const [key, val] of Object.entries(topic.trusted)) {\n        if (val) {\n          badges.push(key);\n        }\n      }\n    }\n\n    this.setState({\n      owner: acs && acs.isOwner(),\n      admin: acs && acs.isAdmin(),\n      sharer: acs && acs.isSharer(),\n      deleter: acs && acs.isDeleter(),\n      muted: acs && acs.isMuted(),\n\n      fullName: _clip(topic.public ? topic.public.fn : undefined, MAX_TITLE_LENGTH),\n      description: _clip(topic.public ? topic.public.note : undefined, MAX_TOPIC_DESCRIPTION_LENGTH),\n      avatar: makeImageUrl(topic.public ? topic.public.photo : null),\n      trustedBadges: badges,\n      private: _clip(topic.private ? topic.private.comment : null, MAX_TITLE_LENGTH),\n      archived: topic.isArchived(),\n      address: topic.name,\n      groupTopic: topic.isGroupType(),\n      channel: topic.isChannelType() || topic.chan,\n      access: acs ? acs.getMode() : undefined,\n      modeGiven: acs ? acs.getGiven() : undefined,\n      modeWant: acs ? acs.getWant() : undefined,\n      auth: defacs.auth,\n      anon: defacs.anon\n    });\n  }\n\n  resetTags(topic) {\n    if (topic.getType() != 'grp') {\n      return;\n    }\n\n    const acs = topic.getAccessMode();\n    if (acs && acs.isOwner()) {\n      // Requesting tags: owner is editing the topic.\n      topic.getMeta(topic.startMetaQuery().withTags().build());\n    }\n  }\n\n  onMetaDesc(desc) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetDesc(topic, this.props);\n\n    if (this.previousMetaDesc && this.previousMetaDesc != this.onMetaDesc) {\n      this.previousMetaDesc(desc);\n    }\n  }\n\n  onSubsUpdated(subs) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetSubs(topic, this.props);\n\n    if (this.previousSubsUpdated && this.previousSubsUpdated != this.onSubsUpdated) {\n      this.previousSubsUpdated(subs);\n    }\n  }\n\n  handleImageChanged(img) {\n    this.setState({avatar: img});\n    this.props.onTopicDescUpdate(this.props.topic, theCard(null, img || Tinode.DEL_CHAR), null);\n  }\n\n  handleMuted(ignored, checked) {\n    this.setState({muted: checked});\n    this.props.onChangePermissions(this.props.topic, checked ? '-P' : '+P');\n  }\n\n  handleUnarchive(ignored, ignored2) {\n    this.props.onTopicUnArchive(this.props.topic);\n  }\n\n  handlePermissionsChanged(which, perm) {\n    switch (which) {\n      case 'auth':\n        this.props.onTopicDescUpdateRequest(this.props.topic, null, null, {auth: perm});\n        break;\n      case 'anon':\n        this.props.onTopicDescUpdateRequest(this.props.topic, null, null, {anon: perm});\n        break;\n      case 'mode':\n      case 'want':\n        this.props.onChangePermissions(this.props.topic, perm);\n        break;\n      case 'given':\n        this.props.onChangePermissions(this.props.topic, perm, this.props.topic);\n        break;\n      case 'user':\n        this.props.onChangePermissions(this.props.topic, perm, this.state.userPermissionsEdited);\n        break;\n    }\n\n    this.handleBackNavigate();\n  }\n\n  handleLaunchPermissionsEditor(which, uid) {\n    const {formatMessage} = this.props.intl;\n    let toEdit, toCompare, toSkip, titleEdit, titleCompare, userTitle, userAvatar;\n    switch (which) {\n      case 'mode':\n        toEdit = this.state.access;\n        break;\n      case 'want':\n        toEdit = this.state.modeWant;\n        toCompare = this.state.modeGiven;\n        if (this.state.owner) {\n          // Don't allow owner to unset 'O' permission. All other permissions are OK.\n          toSkip = 'O';\n        } else {\n          // Allow accepting any of 'ASDO' permissions but don't allow asking for them.\n          toSkip = Tinode.AccessMode.encode(Tinode.AccessMode.diff('ASDO', this.state.modeGiven));\n          if (this.state.channel) {\n            // Channels are read-only.\n            toSkip += 'W';\n          }\n        }\n        titleEdit = formatMessage(messages.perm_want);\n        titleCompare = formatMessage(messages.perm_given);\n        break;\n      case 'given':\n        toEdit = this.state.modeGiven2;\n        toCompare = this.state.modeWant2;\n        toSkip = this.state.groupTopic ? (this.state.owner ? '' : 'O') : 'ASDO';\n        titleEdit = formatMessage(messages.perm_given);\n        titleCompare = formatMessage(messages.perm_want);\n        break;\n      case 'auth':\n        toEdit = this.state.auth;\n        toSkip = 'O';\n        break;\n      case 'anon':\n        toEdit = this.state.anon;\n        toSkip = 'O';\n        break;\n      case 'user': {\n        const topic = this.props.tinode.getTopic(this.props.topic);\n        if (!topic) {\n          return;\n        }\n        const user = topic.subscriber(uid);\n        if (!user || !user.acs) {\n          return;\n        }\n        toEdit = user.acs.getGiven();\n        toCompare = user.acs.getWant();\n        toSkip = this.state.owner ? '' : 'O';\n        titleEdit = formatMessage(messages.perm_given);\n        titleCompare = formatMessage(messages.perm_want);\n        if (user.public) {\n          userTitle = user.public.fn;\n          userAvatar = user.public.photo;\n        }\n        break;\n      }\n      default:\n        console.error(\"Unknown permission editing mode '\" + which + \"'\");\n        return;\n    }\n    this.setState({\n      userPermissionsEdited: uid,\n      userPermissionsTitle: userTitle,\n      userPermissionsAvatar: userAvatar,\n      editedPermissions: toEdit,\n      immutablePermissions: toCompare,\n      editedPermissionsTitle: titleEdit,\n      immutablePermissionsTitle: titleCompare,\n      editedPermissionsSkipped: toSkip,\n    });\n    this.props.onNavigate(`perm/${which}`);\n  }\n\n  handleShowAddMembers(e) {\n    e.preventDefault();\n    this.props.onInitFind();\n    this.props.onNavigate('members');\n  }\n\n  handleMemberUpdateRequest(members, added, removed) {\n    this.props.onMemberUpdateRequest(this.props.topic, added, removed);\n    this.props.onNavigate('info');\n  }\n\n  handleMemberSelected(uid) {\n    this.setState({selectedContact: uid});\n  }\n\n  handleBackNavigate() {\n    const args = (this.props.panel || 'info').split('/');\n    if (args[0] == 'info') {\n      this.props.onNavigate(null);\n    } else if (args[0] == 'perm') {\n      if (args[1] == 'user') {\n        this.props.onNavigate('info');\n      } else {\n        this.props.onNavigate('security');\n      }\n    } else {\n      this.props.onNavigate('info');\n    }\n  }\n\n  handleContextMenu(params) {\n    const {formatMessage} = this.props.intl;\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    const user = topic.subscriber(params.topicName);\n    if (!user || !user.acs) {\n      return;\n    }\n\n    const isMe = this.props.tinode.isMe(params.topicName);\n    const menuItems = [\n      {title: formatMessage(messages.edit_permissions), handler: () => {\n        this.handleLaunchPermissionsEditor(isMe ? 'want' : 'user', params.topicName);\n      }}\n    ];\n    if (!isMe) {\n      menuItems.push('member_delete');\n    }\n    menuItems.push(user.acs.isMuted() ? 'member_unmute' : 'member_mute');\n    if (!isMe) {\n      menuItems.push(user.acs.isJoiner() ? 'member_block' : 'member_unblock');\n    }\n    this.props.showContextMenu({\n      topicName: this.props.topic,\n      x: params.x,\n      y: params.y,\n      user: params.topicName}, menuItems);\n  }\n\n  render() {\n    const args = (this.props.panel || 'info').split('/');\n    const view = args[0];\n    args.shift();\n\n    const {formatMessage} = this.props.intl;\n    const panelTitle = formatMessage((view == 'perm' ? messages['perm_' + args[0]] : messages[view])\n      || messages['info']);\n\n    return (\n      <div id=\"info-view\">\n        <div className=\"caption-panel\" id=\"info-caption-panel\">\n          <div className=\"panel-title\" id=\"info-title\">{panelTitle}</div>\n          <div>\n            <MenuCancel onCancel={this.handleBackNavigate} />\n          </div>\n        </div>\n        {this.props.displayMobile ?\n          <ErrorPanel\n            level={this.props.errorLevel}\n            text={this.props.errorText}\n            onClearError={this.props.onError} /> : null}\n        {view == 'members' ?\n          <GroupManager\n            tinode={this.props.tinode}\n            members={this.state.contactList}\n            requiredMember={this.props.myUserId}\n            keepInitialMembers={!this.state.admin && !this.state.owner}\n            myUserId={this.props.myUserId}\n            contacts={this.props.searchableContacts}\n            onCancel={this.handleBackNavigate}\n            onSubmit={this.handleMemberUpdateRequest} />\n          :\n        view == 'perm' && args.length > 0 ?\n          <PermissionsEditor\n            tinode={this.props.tinode}\n            mode={this.state.editedPermissions}\n            compare={this.state.immutablePermissions}\n            skip={this.state.editedPermissionsSkipped}\n            modeTitle={this.state.editedPermissionsTitle}\n            compareTitle={this.state.immutablePermissionsTitle}\n            userTitle={this.state.userPermissionsTitle}\n            item={this.state.userPermissionsEdited}\n            userAvatar={this.state.userPermissionsAvatar}\n            onSubmit={(mode) => this.handlePermissionsChanged(args[0], mode)}\n            onCancel={this.handleBackNavigate} />\n          :\n        view == 'general' ?\n          <TopicCommon\n            tinode={this.props.tinode}\n            topic={this.props.topic}\n            onCredAdd={this.props.onCredAdd}\n            onTopicTagsUpdateRequest={this.props.onTopicTagsUpdateRequest}\n            onCredConfirm={this.props.onCredConfirm}\n            onCredDelete={this.props.onCredDelete}\n            onUpdateTopicDesc={this.props.onTopicDescUpdateRequest}\n            onError={this.props.onError} />\n          :\n        view == 'security' ?\n          <TopicSecurity\n            topic={this.props.topic}\n            owner={this.state.owner}\n            admin={this.state.admin}\n            sharer={this.state.sharer}\n            deleter={this.state.deleter}\n            muted={this.state.muted}\n\n            groupTopic={this.state.groupTopic}\n            channel={this.state.channel}\n            access={this.state.access}\n            modeGiven={this.state.modeGiven}\n            modeWant={this.state.modeWant}\n            modeGiven2={this.state.modeGiven2}\n            modeWant2={this.state.modeWant2}\n            auth={this.state.auth}\n            anon={this.state.anon}\n\n            onShowAlert={this.props.onShowAlert}\n            onDeleteMessages={this.props.onDeleteMessages}\n            onLeaveTopic={this.props.onLeaveTopic}\n            onBlockTopic={this.props.onBlockTopic}\n            onReportTopic={this.props.onReportTopic}\n            onLaunchPermissionsEditor={this.handleLaunchPermissionsEditor}\n            onNavigate={this.props.onNavigate} />\n          :\n          <div id=\"info-view-content\" className=\"scrollable-panel\">\n            <div className=\"panel-form-column\">\n              <a href=\"#\" className=\"flat-button float-right\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('general');}}>\n                <i className=\"material-icons\">edit</i>&nbsp;\n                <FormattedMessage id=\"button_edit\" defaultMessage=\"Edit\" description=\"Call to action [Edit]\" />\n              </a>\n              <center>\n                <AvatarUpload\n                  tinode={this.props.tinode}\n                  avatar={this.state.avatar}\n                  readOnly={true}\n                  uid={this.props.topic}\n                  title={this.state.fullName} />\n              </center>\n              <div className=\"group\">\n                <div><label className=\"small\">\n                  <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                    description=\"Label for editing topic name\" />\n                </label></div>\n                <div className=\"large ellipsized\">{this.state.fullName}\n                {this.state.channel ? <img src=\"/img/channel.png\" className=\"channel\" alt=\"channel\" /> : null}</div>\n              </div>\n              {this.state.private ?\n                <div className=\"group\">\n                  <div><label className=\"small\">\n                    <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                      description=\"Label for editing 'private'\" />\n                  </label></div>\n                  <div className=\"large ellipsized\">{this.state.private}</div>\n                </div>\n                : null\n              }\n              <div className=\"group\">\n                <label className=\"small\"><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n                  description=\"Label for user address (ID)\" /></label>&nbsp;\n                <tt>{this.state.address}</tt>\n              </div>\n              <div className=\"group\">\n                <BadgeList trustedBadges={this.state.trustedBadges} />\n              </div>\n              {this.state.description ?\n                <div className=\"group\">\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                      description=\"Label for editing topic description\" />\n                  </label>\n                  <div>{this.state.description}</div>\n                </div> : null}\n            </div>\n            <div className=\"hr\" />\n            <div className=\"panel-form-row\">\n              <label>\n                <FormattedMessage id=\"label_muting_topic\" defaultMessage=\"Muted:\"\n                  description=\"Label for Muting/unmuting the topic\" />\n              </label>\n              <CheckBox name=\"P\" checked={this.state.muted} onChange={this.handleMuted} />\n            </div>\n            {this.state.archived ?\n              <div className=\"panel-form-row\">\n                <label>\n                  <FormattedMessage id=\"label_unarchive_topic\" defaultMessage=\"Archived:\"\n                    description=\"Label for unarchiving the topic\" />\n                </label>\n                <CheckBox name=\"archived\" checked={true} onChange={this.handleUnarchive} />\n              </div>\n              :\n              null\n            }\n            <div className=\"hr\" />\n            <div className=\"panel-form-row\">\n              <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('security');}}>\n                <i className=\"material-icons\">security</i>&nbsp;<FormattedMessage id=\"button_security\"\n                  defaultMessage=\"Security\" description=\"Navigaton button for security panel.\" />\n              </a>\n            </div>\n            {this.state.groupTopic && this.state.sharer ?\n              <>\n                <div className=\"hr\" />\n                <div className=\"panel-form-row\">\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_group_members\" defaultMessage=\"Group members:\"\n                      description=\"Section title or label\" />\n                  </label>\n                </div>\n                <div className=\"panel-form-row\">\n                  <a href=\"#\" className=\"flat-button\" onClick={this.handleShowAddMembers}>\n                    <i className=\"material-icons\">person_add</i> &nbsp;<FormattedMessage id=\"button_add_members\"\n                      defaultMessage=\"Add members\" description=\"Flat button [Add members] (to topic)\" />\n                  </a>\n                </div>\n                <FormattedMessage id=\"group_has_no_members\" defaultMessage=\"No members\"\n                  description=\"Shown in place of group members\">{\n                  (no_members) => <ContactList\n                    tinode={this.props.tinode}\n                    contacts={this.state.contactList}\n                    myUserId={this.props.myUserId}\n                    emptyListMessage={no_members}\n                    topicSelected={this.state.selectedContact}\n                    showOnline={false}\n                    showUnread={false}\n                    showMode={true}\n                    noScroll={true}\n                    onTopicSelected={this.handleMemberSelected}\n                    showContextMenu={this.state.admin ? this.handleContextMenu : false}\n                  />\n                }</FormattedMessage>\n              </>\n              :\n              null\n            }\n          </div>\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(InfoView);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\nimport { bytesToHumanSize } from '../lib/strformat.js';\nimport { isUrlRelative, sanitizeUrl } from '../lib/utils.js';\n\nexport default class Attachment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      downloader: null,\n      progress: 0\n    };\n\n    this.downloadFile = this.downloadFile.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  downloadFile(url, filename, mimetype) {\n    if (!url) {\n      this.props.onError(\"Invalid download URL '\" + url + \"'\");\n      return;\n    }\n\n    const downloader = this.props.tinode.getLargeFileHelper();\n    this.setState({downloader: downloader});\n    downloader.download(url, filename, mimetype,\n      (loaded) => {\n        this.setState({progress: loaded / this.props.size});\n      },\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    ).then(() => {\n      this.setState({downloader: null, progress: 0});\n    }).catch((err) => {\n      if (err) {\n        this.props.onError(\"Error downloading file: \" + err.message, 'err');\n      }\n      this.setState({downloader: null, progress: 0});\n    });\n  }\n\n  handleCancel() {\n    if (this.props.uploading) {\n      this.props.onCancelUpload();\n    } else if (this.state.downloader) {\n      this.state.downloader.cancel();\n    }\n  }\n\n  render() {\n    let filename = this.props.filename || 'file_attachment';\n    if (filename.length > 36) {\n      filename = filename.substr(0, 16) + '...' + filename.substr(-16);\n    }\n    let size = this.props.size > 0 ?\n      <span className=\"small gray\">({bytesToHumanSize(this.props.size)})</span> :\n      null;\n\n    // Detect if the download URL is relative or absolute.\n    // If the URL is relative use LargeFileHelper to attach authentication\n    // credentials to the request.\n    let url, helperFunc;\n    if (!this.props.uploading && !this.state.downloader && isUrlRelative(this.props.downloadUrl)) {\n      // Relative URL. Use download helper.\n      url = '#';\n      helperFunc = (e) => {\n        e.preventDefault();\n        this.downloadFile(this.props.downloadUrl, this.props.filename, this.props.mimetype);\n      };\n    } else {\n      url = sanitizeUrl(this.props.downloadUrl);\n      helperFunc = null;\n    }\n    const downloadWidget = <><i className=\"material-icons\">file_download</i> <FormattedMessage id=\"save_attachment\"\n      defaultMessage=\"save\" description=\"Call to save an attachment\" /></>;\n    return (\n      <div className=\"attachment\">\n        <div><i className=\"material-icons big gray\">insert_drive_file</i></div>\n        <div className=\"flex-column\">\n          <div>{filename} {size}</div>\n          {this.props.uploading || this.state.downloader ?\n            <FileProgress progress={this.props.uploading ? this.props.progress : this.state.progress}\n              onCancel={this.handleCancel} />\n            :\n            <div>{url ?\n              <a href={url} download={this.props.filename} onClick={helperFunc}>{downloadWidget}</a>\n              :\n              <span className=\"light-gray\">{downloadWidget}</span>\n            }</div>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n","// Single message, sent or received.\nimport React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport Attachment from './attachment.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\n\nimport { fullFormatter, quoteFormatter } from '../lib/formatters.js';\nimport { sanitizeImageUrl, sanitizeUrl } from '../lib/utils.js';\n\nclass BaseChatMessage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      progress: 0\n    };\n\n    if (props.uploader) {\n      props.uploader.onProgress = this.handleProgress.bind(this);\n    }\n\n    this.handleImagePreview = this.handleImagePreview.bind(this);\n    this.handleFormButtonClick = this.handleFormButtonClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n    this.handleQuoteClick = this.handleQuoteClick.bind(this);\n\n    this.formatterContext = {\n      getFormatter: (tp) => { return tp == 'QQ' ? quoteFormatter : null; },\n      formatMessage: props.intl.formatMessage.bind(props.intl),\n      viewportWidth: props.viewportWidth,\n      authorizeURL: props.tinode.authorizeURL.bind(props.tinode),\n      onImagePreview: this.handleImagePreview,\n      onFormButtonClick: this.handleFormButtonClick,\n      onQuoteClick: this.handleQuoteClick\n    };\n  }\n\n  handleImagePreview(e) {\n    e.preventDefault();\n    this.props.onImagePreview({\n      url: e.target.src,\n      filename: e.target.title,\n      width: e.target.dataset.width,\n      height: e.target.dataset.height,\n      size: e.target.dataset.size,\n      type: e.target.dataset.mime\n    });\n  }\n\n  handleFormButtonClick(e) {\n    e.preventDefault();\n    const data = {\n      seq: this.props.seq\n    };\n    data.resp = {};\n    if (e.target.dataset.name) {\n      data.resp[e.target.dataset.name] = e.target.dataset.val ? e.target.dataset.val :\n        e.target.dataset.val === undefined ? 1 : '' + e.target.dataset.val;\n    }\n    if (e.target.dataset.act == 'url') {\n      data.ref = sanitizeUrl(e.target.dataset.ref) || 'about:blank';\n    }\n    const text = e.target.dataset.title || 'unknown';\n    this.props.onFormResponse(e.target.dataset.act, text, data);\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const menuItems = this.props.received == Tinode.MESSAGE_STATUS_FAILED ? ['menu_item_send_retry'] : [];\n    if (this.props.userIsWriter &&\n        this.props.received > Tinode.MESSAGE_STATUS_FAILED &&\n        this.props.received < Tinode.MESSAGE_STATUS_DEL_RANGE) {\n      menuItems.push('menu_item_reply');\n    }\n    this.props.showContextMenu({ seq: this.props.seq, content: this.props.content,\n                                 y: e.pageY, x: e.pageX, pickReply: this.props.pickReply }, menuItems);\n  }\n\n  handleProgress(ratio) {\n    this.setState({progress: ratio});\n  }\n\n  handleCancelUpload() {\n    this.props.onCancelUpload(this.props.seq, this.props.uploader);\n  }\n\n  handleQuoteClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const replyToSeq = this.props.replyToSeq;\n    if (replyToSeq) {\n      this.props.onQuoteClick(replyToSeq);\n    }\n  }\n\n  render() {\n    const sideClass = this.props.deleted ? 'center' :\n      (this.props.sequence + ' ' + (this.props.response ? 'left' : 'right'));\n    const bubbleClass = (this.props.sequence == 'single' || this.props.sequence == 'last') ? 'bubble tip' : 'bubble';\n    const avatar = this.props.deleted ? null : (this.props.userAvatar || true);\n    const fullDisplay = (this.props.userFrom && this.props.response && !this.props.deleted &&\n      (this.props.sequence == 'single' || this.props.sequence == 'last'));\n\n    let content = this.props.content;\n    const attachments = [];\n    if (this.props.mimeType == Drafty.getContentType() && Drafty.isValid(content)) {\n      Drafty.attachments(content, (att, i) => {\n        if (att.mime == 'application/json') {\n          // Don't show json objects as attachments.\n          // They are not meant for users.\n          return;\n        }\n        attachments.push(<Attachment\n          tinode={this.props.tinode}\n          downloadUrl={Drafty.getDownloadUrl(att)}\n          filename={att.name}\n          uploading={Drafty.isProcessing(att)}\n          mimetype={att.mime}\n          size={Drafty.getEntitySize(att)}\n          progress={this.state.progress}\n          onCancelUpload={this.handleCancelUpload}\n          onError={this.props.onError}\n          key={i} />);\n      }, this);\n      const tree = Drafty.format(content, fullFormatter, this.formatterContext);\n      content = React.createElement(React.Fragment, null, tree);\n    } else if (this.props.deleted) {\n      // Message represents a range of deleted messages.\n      content = <><i className=\"material-icons gray\">block</i> <i className=\"gray\">\n        <FormattedMessage id=\"deleted_content\"\n          defaultMessage=\"content deleted\" description=\"Shown when messages are deleted\" />\n      </i></>\n    } else if (typeof content != 'string') {\n      content = <><i className=\"material-icons gray\">warning_amber</i> <i className=\"gray\">\n        <FormattedMessage id=\"invalid_content\"\n          defaultMessage=\"invalid content\" description=\"Shown when the message is unreadable\" /></i></>\n    }\n\n    return (\n      <li ref={this.props.innerRef} className={sideClass}>\n        {this.props.userFrom && this.props.response ?\n          <div className=\"avatar-box\">\n            {fullDisplay ?\n              <LetterTile\n                tinode={this.props.tinode}\n                topic={this.props.userFrom}\n                title={this.props.userName}\n                avatar={avatar} /> :\n              null}\n          </div> :\n          null}\n        <div>\n          <div className={bubbleClass}>\n            <div className=\"content-meta\">\n              <div className=\"message-content\">\n                {content}\n                {attachments}\n              </div>\n              {this.props.timestamp ?\n                <ReceivedMarker\n                  timestamp={this.props.timestamp}\n                  received={this.props.received} />\n                : null}\n            </div>\n            {this.props.deleted || !this.props.showContextMenu ?\n              null :\n              <span className=\"menuTrigger\">\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">expand_more</i>\n                </a>\n              </span>\n            }\n          </div>\n          {fullDisplay ?\n            <div className=\"author\">\n              {this.props.userName ||\n                <i><FormattedMessage id=\"user_not_found\" defaultMessage=\"Not found\"\n                description=\"In place of a user's full name when the user is not found.\" /></i>\n              }\n            </div>\n            : null\n          }\n        </div>\n      </li>\n    );\n  }\n};\n\nconst IntlChatMessage = injectIntl(BaseChatMessage);\nconst ChatMessage = React.forwardRef((props, ref) => <IntlChatMessage innerRef = {ref} {...props} />);\n\nexport default ChatMessage;\n","// Send message form.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport { KEYPRESS_DELAY } from '../config.js';\nimport { filePasted } from '../lib/blob-helpers.js';\nimport { quoteFormatter } from '../lib/formatters.js';\n\nconst messages = defineMessages({\n  messaging_disabled: {\n    id: 'messaging_disabled_prompt',\n    defaultMessage: 'Messaging disabled',\n    description: 'Prompt in SendMessage in read-only topic'\n  },\n  type_new_message: {\n    id: 'new_message_prompt',\n    defaultMessage: 'New message',\n    description: 'Prompt in send message field'\n  },\n  add_image_caption: {\n    id: 'image_caption_prompt',\n    defaultMessage: 'Image caption',\n    description: 'Prompt in SendMessage for attached image'\n  },\n  file_attachment_too_large: {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  },\n  cannot_initiate_upload: {\n    id: 'cannot_initiate_file_upload',\n    defaultMessage: 'Cannot initiate file upload.',\n    description: 'Generic error messagewhen attachment fails'\n  },\n});\n\nclass SendMessage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      message: '',\n      // Make initial keypress time as if it happened 5001 milliseconds in the past.\n      keypressTimestamp: new Date().getTime() - KEYPRESS_DELAY - 1\n    };\n\n    this.handlePasteEvent = this.handlePasteEvent.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleSend = this.handleSend.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleMessageTyping = this.handleMessageTyping.bind(this);\n\n    this.handleQuoteClick = this.handleQuoteClick.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.addEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.removeEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.messageEditArea) {\n      this.messageEditArea.focus();\n    }\n  }\n\n  handlePasteEvent(e) {\n    if (this.props.disabled) {\n      return;\n    }\n    // FIXME: handle large files too.\n    if (filePasted(e,\n      (bits, mime, width, height, fname) => {\n        this.props.onAttachImage(mime, bits, width, height, fname);\n      },\n      (mime, bits, fname) => {\n        this.props.onAttachFile(mime, bits, fname);\n      },\n      this.props.onError)) {\n\n      // If a file was pasted, don't paste base64 data into input field.\n      e.preventDefault();\n    }\n  }\n\n  handleAttachImage(e) {\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachImage(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleAttachFile(e) {\n    const {formatMessage} = this.props.intl;\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachFile(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleSend(e) {\n    e.preventDefault();\n    const message = this.state.message.trim();\n    if (message || this.props.acceptBlank || this.props.noInput) {\n      this.props.onSendMessage(message);\n      this.setState({message: ''});\n    }\n  }\n\n  /* Send on Enter key */\n  handleKeyPress(e) {\n    // Remove this if you don't want Enter to trigger send\n    if (e.key === 'Enter') {\n      // Have Shift-Enter insert a line break instead\n      if (!e.shiftKey) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.handleSend(e);\n      }\n    }\n  }\n\n  handleMessageTyping(e) {\n    const newState = {message: e.target.value};\n    if (this.props.onKeyPress) {\n      const now = new Date().getTime();\n      if (now - this.state.keypressTimestamp > KEYPRESS_DELAY) {\n        this.props.onKeyPress();\n        newState.keypressTimestamp = now;\n      }\n    }\n    this.setState(newState);\n  }\n\n  handleQuoteClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.props.replyTo && this.props.onQuoteClick) {\n      const replyToSeq = this.props.replyTo.seq;\n      this.props.onQuoteClick(replyToSeq);\n    }\n  }\n\n  render() {\n    const { formatMessage } = this.props.intl;\n    const prompt = this.props.disabled ?\n      formatMessage(messages.messaging_disabled) :\n      (this.props.messagePrompt ?\n        formatMessage(messages[this.props.messagePrompt]) :\n        formatMessage(messages.type_new_message));\n\n    const quote = this.props.replyTo ?\n      Drafty.format(this.props.replyTo.content, quoteFormatter, {\n        formatMessage: formatMessage.bind(this.props.intl),\n        authorizeURL: this.props.tinode.authorizeURL.bind(this.props.tinode)\n      }) :\n      null;\n\n    return (\n      <div id=\"send-message-wrapper\">\n      {quote ?\n        <div id=\"reply-quote-preview\">\n          <div className=\"cancel\">\n            <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancelReply();}}><i className=\"material-icons gray\">close</i></a>\n          </div>\n          {quote}\n        </div>\n      :\n      null}\n\n      <div id=\"send-message-panel\">\n        {!this.props.disabled ?\n          <>\n            {this.props.onAttachFile ?\n              <>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachImage.click();}} title=\"Add image\">\n                  <i className=\"material-icons secondary\">photo</i>\n                </a>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachFile.click();}} title=\"Attach file\">\n                  <i className=\"material-icons secondary\">attach_file</i>\n                </a>\n              </>\n              :\n              null}\n            {this.props.noInput ?\n              <div className=\"hr thin\" /> :\n              <textarea id=\"sendMessage\" placeholder={prompt}\n                value={this.state.message} onChange={this.handleMessageTyping}\n                onKeyPress={this.handleKeyPress}\n                ref={(ref) => {this.messageEditArea = ref;}}\n                autoFocus />}\n            <a href=\"#\" onClick={this.handleSend} title=\"Send\">\n              <i className=\"material-icons\">send</i>\n            </a>\n            <input type=\"file\" ref={(ref) => {this.attachFile = ref;}}\n              onChange={this.handleAttachFile} style={{display: 'none'}} />\n            <input type=\"file\" ref={(ref) => {this.attachImage = ref;}} accept=\"image/*\"\n              onChange={this.handleAttachImage} style={{display: 'none'}} />\n          </>\n          :\n          <div id=\"writing-disabled\">{prompt}</div>\n        }\n      </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SendMessage);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { bytesToHumanSize } from '../lib/strformat.js';\n\n// Get material icon name from mime type.\nfunction iconFromMime(mime) {\n  // If more icons become available in material icons, add them to this mime-to-icon mapping.\n  const mimeToIcon = {default: 'insert_drive_file', image: 'image', text: 'description', video: 'theaters'};\n\n  return mimeToIcon[mime] || mimeToIcon[(mime || '').split('/')[0]] || mimeToIcon['default'];\n}\n\nexport default class DocPreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleSendDoc = this.handleSendDoc.bind(this);\n  }\n\n  handleSendDoc(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(this.props.content.file);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          <span>{this.props.content.filename}</span>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\">\n          <div className=\"flex-column narrow\">\n            <i className=\"material-icons gray\">{iconFromMime(this.props.content.type)}</i>\n            <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n              description=\"Label for file content type (mime)\" /></b> {this.props.content.type || 'application/octet-stream'}</div>\n            <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n              description=\"Label for file size\" /></b> {bytesToHumanSize(this.props.content.size)}</div>\n          </div>\n        </div>\n        <SendMessage\n          noInput={true}\n          tinode={this.props.tinode}\n          replyTo={this.props.replyTo}\n          onCancelReply={this.props.onCancelReply}\n          onSendMessage={this.handleSendDoc}\n          onError={this.props.onError} />\n      </div>\n    );\n  }\n};\n","// GroupSubs: a list of group subscribers currently online.\n// Show in the topic title bar\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { MAX_ONLINE_IN_TOPIC } from '../config.js'\n\nimport LetterTile from './letter-tile.jsx';\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class GroupSubs extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const usersOnline = [];\n    const totalCount = (this.props.subscribers || []).length;\n    const countToShow = Math.min(MAX_ONLINE_IN_TOPIC, totalCount);\n\n    (this.props.subscribers || []).some((sub) => {\n      usersOnline.push(\n        <div className=\"avatar-box\" key={sub.user}>\n          <LetterTile\n            tinode={this.props.tinode}\n            topic={sub.user}\n            avatar={makeImageUrl(sub.public ? sub.public.photo : null) || true}\n            title={sub.public ? sub.public.fn : null} />\n        </div>\n      );\n      return usersOnline.length == countToShow;\n    });\n\n    return (\n      <div id=\"topic-users\">{usersOnline} {totalCount > countToShow ?\n        <span>\n          <FormattedMessage id=\"more_online_members\" defaultMessage=\"+{overflow} more\"\n              description=\"Shown in MessagesView title bar when the number of online subscribers exceeds MAX_ONLINE_IN_TOPIC\"\n              values={{ overflow: (totalCount - countToShow) }} />\n        </span> : null}\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\nimport { bytesToHumanSize } from '../lib/strformat.js';\n\nexport default class ImagePreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      width: 0,\n      height: 0\n    };\n\n    this.handleSendImage = this.handleSendImage.bind(this);\n  }\n\n  assignWidth(node) {\n    if (node && !this.state.width) {\n      const bounds = node.getBoundingClientRect();\n      this.setState({\n        width: bounds.width | 0,\n        height: bounds.height | 0\n      });\n    }\n  }\n\n  handleSendImage(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(caption, this.props.content.blob);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n\n    const dim = fitImageSize(this.props.content.width, this.props.content.height,\n      this.state.width, this.state.height, false);\n    const size = dim ? { width: dim.dstWidth + 'px', height: dim.dstHeight + 'px' } :\n      ((this.props.content.width > this.props.content.height) ? {width: '100%'} : {height: '100%'});\n    size.maxWidth = '100%';\n    size.maxHeight = '100%';\n\n    let filename = this.props.content.filename;\n    // Average font aspect ratio is ~0.5; File name takes 1/3 of the viewport width.\n    const maxlength = Math.max(((this.state.width / REM_SIZE / 1.5) | 0) - 2, 12);\n    if (filename.length > maxlength) {\n      filename = filename.slice(0, maxlength/2 - 1) + '…' + filename.slice(1 - maxlength/2);\n    }\n    const width = this.props.content.width || '-';\n    const height = this.props.content.height || '-';\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          {!this.props.onSendMessage ?\n            <a href={this.props.content.url} download={this.props.content.filename}>\n              <i className=\"material-icons\">file_download</i> <FormattedMessage\n                id=\"download_action\" defaultMessage=\"download\" description=\"Call to action [download]\" />\n            </a>\n            :\n            <span>{this.props.content.filename}</span>\n          }\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\" ref={(node) => this.assignWidth(node)}>\n          <img src={this.props.content.url} style={size} className=\"image-preview\" alt={this.props.content.filename} />\n        </div>\n        {this.props.onSendMessage ?\n          <SendMessage\n            messagePrompt=\"add_image_caption\"\n            acceptBlank={true}\n            tinode={this.props.tinode}\n            replyTo={this.props.replyTo}\n            onCancelReply={this.props.onCancelReply}\n            onSendMessage={this.handleSendImage}\n            onError={this.props.onError} />\n          :\n          <div id=\"image-preview-footer\">\n            <div>\n              <div><b><FormattedMessage id=\"label_file_name\" defaultMessage=\"File name:\"\n                description=\"Label for a file name\" /></b></div>\n              <div><span title={this.props.content.filename}>{filename ? filename : '-'}</span></div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n                description=\"Label for file content type (mime)\" /></b></div>\n              <div>{this.props.content.type}</div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n                description=\"Label for file size\" /></b></div>\n              <div>{width} &times; {height} px; {bytesToHumanSize(this.props.content.size)}</div>\n            </div>\n          </div>}\n      </div>\n    );\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Invitation extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleButtonAction = this.handleButtonAction.bind(this);\n  }\n\n  handleButtonAction(evt, data) {\n    evt.preventDefault();\n    this.props.onAction(data);\n  }\n\n  render() {\n    return (\n      <div className=\"accept-invite-panel\">\n        <div className=\"title\">\n          <FormattedMessage id=\"chat_invitation\"\n            defaultMessage=\"You are invited to start a new chat. What would you like to do?\"\n            description=\"New chat invitation message: [Accept] [Ignore] [Block].\" />\n        </div>\n        <div className=\"footer\">\n          <button className=\"primary\" onClick={event => { this.handleButtonAction(event, \"accept\"); }}>\n            <FormattedMessage id=\"chat_invitation_accept\"\n              defaultMessage=\"Accept\" description=\"Action [Accept] for chat invitation.\" />\n          </button>\n          <button className=\"secondary\" onClick={event => { this.handleButtonAction(event, \"delete\"); }}>\n            <FormattedMessage id=\"chat_invitation_ignore\"\n              defaultMessage=\"Ignore\" description=\"Action [Ignore] for chat invitation.\" />\n          </button>\n          <button className=\"secondary\" onClick={event => { this.handleButtonAction(event, \"block\"); }}>\n            <FormattedMessage id=\"chat_invitation_block\"\n              defaultMessage=\"Block\" description=\"Action [Block] for chat invitation.\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n","/* This is just a static page to display when no conversation is selected. */\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME } from '../config.js';\n\nexport default class LogoView extends React.PureComponent {\n  render() {\n    const version = APP_NAME + ' (' + Tinode.getLibrary() + ')';\n    return (\n      <div id=\"dummy-view\">\n        <div>\n          <a href=\"https://github.com/tinode/chat/\">\n            <img id=\"logo\" alt=\"logo\" src=\"img/logo.svg\" />\n            <h2>Tinode Web</h2>\n          </a>\n          <p><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\"\n            description=\"Label for a client version\" /> {version}</p>\n          <p><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\"\n            description=\"Label for a server version\" /> {this.props.serverVersion} ({this.props.serverAddress})</p>\n        </div>\n      </div>\n    );\n  }\n};\n","// Utility class for hash navigation.\n\n// Parse hash as in http://www.example.com/path#hash as if it were\n// path and arguments.\nexport default class HashNavigation {\n  static parseUrlHash(hash) {\n    // Split path from args, path -> parts[0], args->path[1]\n    const parts = hash.split('?', 2);\n    const params = {};\n    let path = [];\n    if (parts[0]) {\n      path = parts[0].replace('#', '').split('/');\n    }\n    if (parts[1]) {\n      parts[1].split('&').forEach(function(part) {\n        const item = part.split('=');\n        if (item[0]) {\n          params[decodeURIComponent(item[0])] = decodeURIComponent(item[1]);\n        }\n      });\n    }\n    return {path: path, params: params};\n  }\n\n  static navigateTo(url) {\n    window.location.hash = url;\n  }\n\n  static composeUrlHash(path, params) {\n    let url = path.join('/');\n    const args = [];\n    for (const key in params) {\n      if (params.hasOwnProperty(key)) {\n        args.push(key + '=' + params[key]);\n      }\n    }\n    if (args.length > 0) {\n      url += '?' + args.join('&');\n    }\n    return url;\n  }\n\n  static addUrlParam(hash, key, value) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.params[key] = value;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static removeUrlParam(hash, key) {\n    const parsed = this.parseUrlHash(hash);\n    delete parsed.params[key];\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlSidePanel(hash, sidepanel) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[0] = sidepanel;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlInfoPanel(hash, infopanel) {\n    const parsed = this.parseUrlHash(hash);\n    if (infopanel) {\n      parsed.params.info = infopanel;\n    } else {\n      delete parsed.params.info;\n    }\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlTopic(hash, topic) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[1] = topic;\n    // Close InfoView on topic change.\n    delete parsed.params.info;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n}\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\nconst Drafty = Tinode.Drafty;\n\nimport ChatMessage from '../widgets/chat-message.jsx';\nimport ContactBadges from '../widgets/contact-badges.jsx';\nimport DocPreview from '../widgets/doc-preview.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupSubs from '../widgets/group-subs.jsx';\nimport ImagePreview from '../widgets/image-preview.jsx';\nimport Invitation from '../widgets/invitation.jsx';\nimport LetterTile from '../widgets/letter-tile.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport LogoView from './logo-view.jsx';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { DEFAULT_P2P_ACCESS_MODE, IMAGE_PREVIEW_DIM, KEYPRESS_DELAY, MESSAGES_PAGE,\n  MAX_EXTERN_ATTACHMENT_SIZE, MAX_IMAGE_DIM, MAX_INBAND_ATTACHMENT_SIZE, READ_DELAY,\n  IMAGE_THUMBNAIL_DIM } from '../config.js';\nimport { SUPPORTED_IMAGE_FORMATS, blobToBase64, base64ToBlob, filePasted, fileToBase64,\n  imageScaled, makeImageUrl } from '../lib/blob-helpers.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { bytesToHumanSize, shortDateFormat, letterTileColorId } from '../lib/strformat.js';\nimport { sanitizeImageUrl } from '../lib/utils.js';\n\n// Run timer with this frequency (ms) for checking notification queue.\nconst NOTIFICATION_EXEC_INTERVAL = 300;\n\nconst messages = defineMessages({\n  online_now: {\n    id: 'online_now',\n    defaultMessage: 'online now',\n    description: 'Indicator that the user or topic is currently online',\n  },\n  last_seen: {\n    id: 'last_seen_timestamp',\n    defaultMessage: 'Last seen',\n    description: 'Label for the timestamp of when the user or topic was last online'\n  },\n  not_found: {\n    id: 'title_not_found',\n    defaultMessage: 'Not found',\n    description: 'Title shown when topic is not found'\n  },\n  channel: {\n    id: 'channel',\n    defaultMessage: 'channel',\n    description: 'Subtitle shown for channels in MessagesView instead of last seen'\n  },\n  file_attachment_too_large: {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  },\n  invalid_content: {\n    id: 'invalid_content',\n    defaultMessage: 'invalid content',\n    description: 'Shown when the message is unreadable'\n  },\n});\n\n// Checks if the access permissions are granted but not yet accepted.\nfunction isUnconfirmed(acs) {\n  if (acs) {\n    const ex = acs.getExcessive() || '';\n    return acs.isJoiner('given') && (ex.includes('R') || ex.includes('W'));\n  }\n  return false;\n}\n\nfunction isPeerRestricted(acs) {\n  if (acs) {\n    const ms = acs.getMissing() || '';\n    return acs.isJoiner('want') && (ms.includes('R') || ms.includes('W'));\n  }\n  return false;\n}\n\nclass MessagesView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = MessagesView.getDerivedStateFromProps(props, {});\n\n    this.leave = this.leave.bind(this);\n    this.sendMessage = this.sendMessage.bind(this);\n    this.retrySend = this.retrySend.bind(this);\n    this.sendImageAttachment = this.sendImageAttachment.bind(this);\n    this.sendFileAttachment = this.sendFileAttachment.bind(this);\n    this.sendKeyPress = this.sendKeyPress.bind(this);\n    this.subscribe = this.subscribe.bind(this);\n    this.handleScrollReference = this.handleScrollReference.bind(this);\n    this.handleScrollEvent = this.handleScrollEvent.bind(this);\n    this.handleDescChange = this.handleDescChange.bind(this);\n    this.handleSubsUpdated = this.handleSubsUpdated.bind(this);\n    this.handleMessageUpdate = this.handleMessageUpdate.bind(this);\n    this.handleAllMessagesReceived = this.handleAllMessagesReceived.bind(this);\n    this.handleInfoReceipt = this.handleInfoReceipt.bind(this);\n    this.handleImagePostview = this.handleImagePostview.bind(this);\n    this.handleClosePreview = this.handleClosePreview.bind(this);\n    this.handleFormResponse = this.handleFormResponse.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleShowContextMenuMessage = this.handleShowContextMenuMessage.bind(this);\n    this.handleNewChatAcceptance = this.handleNewChatAcceptance.bind(this);\n    this.handleEnablePeer = this.handleEnablePeer.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n    this.postReadNotification = this.postReadNotification.bind(this);\n    this.clearNotificationQueue = this.clearNotificationQueue.bind(this);\n\n    this.handlePickReply = this.handlePickReply.bind(this);\n    this.handleCancelReply = this.handleCancelReply.bind(this);\n    this.handleQuoteClick = this.handleQuoteClick.bind(this);\n\n    this.chatMessageRefs = {};\n    this.getOrCreateMessageRef = this.getOrCreateMessageRef.bind(this);\n\n    this.readNotificationQueue = [];\n    this.readNotificationTimer = null;\n  }\n\n  getOrCreateMessageRef(seqId) {\n    if (this.chatMessageRefs.hasOwnProperty(seqId)) {\n      return this.chatMessageRefs[seqId];\n    }\n    const ref = React.createRef();\n    this.chatMessageRefs[seqId] = ref;\n    return ref;\n  }\n\n  componentDidMount() {\n    if (this.messagesScroller) {\n      this.messagesScroller.addEventListener('scroll', this.handleScrollEvent);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messagesScroller) {\n      this.messagesScroller.removeEventListener('scroll', this.handleScrollEvent);\n    }\n\n    // Flush all notifications.\n    this.clearNotificationQueue();\n  }\n\n  // Scroll last message into view on component update e.g. on message received\n  // or vertical shrinking.\n  componentDidUpdate(prevProps, prevState) {\n    if (this.messagesScroller) {\n      if (prevState.topic != this.state.topic || prevState.messageCount != this.state.messageCount) {\n        // New message\n        this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n      } else if (prevProps.viewportHeight > this.props.viewportHeight) {\n        // Componet changed height.\n        this.messagesScroller.scrollTop += prevProps.viewportHeight - this.props.viewportHeight;\n      }\n    }\n\n    const topic = this.props.tinode ? this.props.tinode.getTopic(this.state.topic) : undefined;\n    if (this.state.topic != prevState.topic) {\n      if (prevState.topic && !Tinode.isNewGroupTopicName(prevState.topic)) {\n        this.leave(prevState.topic);\n      }\n\n      if (topic) {\n        topic.onData = this.handleMessageUpdate;\n        topic.onAllMessagesReceived = this.handleAllMessagesReceived;\n        topic.onInfo = this.handleInfoReceipt;\n        topic.onMetaDesc = this.handleDescChange;\n        topic.onSubsUpdated = this.handleSubsUpdated;\n        topic.onPres = this.handleSubsUpdated;\n      }\n    }\n\n    if (!this.props.applicationVisible) {\n      // If application is not visible, flush all unsent 'read' notifications.\n      this.clearNotificationQueue();\n    } else {\n      // Otherwise assume there are unread messages.\n      this.postReadNotification(0);\n    }\n\n    if ((this.state.topic != prevState.topic) || !prevProps.ready) {\n      this.subscribe(topic);\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let nextState = {};\n    if (!nextProps.topic) {\n      // Default state: no topic.\n      nextState = {\n        messageCount: 0,\n        latestClearId: -1,\n        onlineSubs: [],\n        topic: null,\n        title: '',\n        avatar: null,\n        isVerified: false,\n        isStaff: false,\n        isDangerous: false,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false,\n        peerMessagingDisabled: false,\n        channel: false,\n        reply: null\n      };\n    } else if (nextProps.topic != prevState.topic) {\n      const topic = nextProps.tinode.getTopic(nextProps.topic);\n      nextState = {\n        topic: nextProps.topic,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false,\n        reply: null\n      };\n\n      if (topic) {\n        // Topic exists.\n        const subs = [];\n\n        if (nextProps.connected) {\n          topic.subscribers((sub) => {\n            if (sub.online && sub.user != nextProps.myUserId) {\n              subs.push(sub);\n            }\n          });\n        }\n\n        Object.assign(nextState, {\n          onlineSubs: subs\n        });\n\n        if (topic.public) {\n          Object.assign(nextState, {\n            title: topic.public.fn,\n            avatar: makeImageUrl(topic.public.photo)\n          });\n        } else {\n          Object.assign(nextState, {\n            title: '',\n            avatar: null\n          });\n        }\n\n        const peer = topic.p2pPeerDesc();\n        if (peer) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: isPeerRestricted(peer.acs)\n          });\n        } else if (prevState.peerMessagingDisabled) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: false\n          });\n        }\n        Object.assign(nextState, {\n          messageCount: topic.messageCount(),\n          latestClearId: topic.maxClearId(),\n          channel: topic.isChannelType()\n        });\n      } else {\n        // Invalid topic.\n        Object.assign(nextState, {\n          messageCount: 0,\n          latestClearId: -1,\n          onlineSubs: [],\n          title: '',\n          avatar: null,\n          peerMessagingDisabled: false,\n          channel: false\n        });\n      }\n    }\n\n    if (nextProps.acs) {\n      if (nextProps.acs.isWriter() != prevState.isWriter) {\n        nextState.isWriter = !prevState.isWriter;\n      }\n      if (nextProps.acs.isReader() != prevState.isReader) {\n        nextState.isReader = !prevState.isReader;\n      }\n      if (!nextProps.acs.isReader('given') != prevState.readingBlocked) {\n        nextState.readingBlocked = !prevState.readingBlocked;\n      }\n      if (nextProps.acs.isSharer() != prevState.isSharer) {\n        nextState.isSharer = !prevState.isSharer;\n      }\n    } else {\n      if (prevState.isWriter) {\n        nextState.isWriter = false;\n      }\n      if (prevState.isReader) {\n        nextState.isReader = false;\n      }\n      if (!prevState.readingBlocked) {\n        prevState.readingBlocked = true;\n      }\n      if (prevState.isSharer) {\n        nextState.isSharer = false;\n      }\n    }\n\n    if (isUnconfirmed(nextProps.acs) == !prevState.unconformed) {\n      nextState.unconfirmed = !prevState.unconformed;\n    }\n\n    // Clear subscribers online when there is no connection.\n    if (!nextProps.connected && prevState.onlineSubs && prevState.onlineSubs.length > 0) {\n      nextState.onlineSubs = [];\n    }\n\n    return nextState;\n  }\n\n  subscribe(topic) {\n    if (!topic || topic.isSubscribed() || !this.props.ready) {\n      return;\n    }\n\n    // Is this a new topic?\n    const newTopic = (this.props.newTopicParams && this.props.newTopicParams._topicName == this.props.topic);\n\n    // Don't request the tags. They are useless unless the user\n    // is the owner and is editing the topic.\n    let getQuery = topic.startMetaQuery().withLaterDesc().withLaterSub();\n    if (this.state.isReader || newTopic) {\n      // Reading is either permitted or we don't know because it's a new topic. Ask for messages.\n      getQuery = getQuery.withLaterData(MESSAGES_PAGE);\n      if (this.state.isReader) {\n        getQuery = getQuery.withLaterDel();\n      }\n      // And show \"loading\" spinner.\n      this.setState({ fetchingMessages: true });\n    }\n\n    const setQuery = newTopic ? this.props.newTopicParams : undefined;\n    topic.subscribe(getQuery.build(), setQuery)\n      .then((ctrl) => {\n        if (ctrl.code == 303) {\n          // Redirect to another topic requested.\n          HashNavigation.navigateTo(HashNavigation.setUrlTopic('', ctrl.params.topic));\n          return;\n        }\n        if (this.state.topic != ctrl.topic) {\n          this.setState({topic: ctrl.topic});\n        }\n        this.props.onNewTopicCreated(this.props.topic, ctrl.topic);\n        // If there are unsent messages, try sending them now.\n        topic.queuedMessages((pub) => {\n          if (!pub._sending && topic.isSubscribed()) {\n            this.retrySend(pub);\n          }\n        });\n      })\n      .catch((err) => {\n        console.error(\"Failed subscription to\", this.state.topic);\n        this.props.onError(err.message, 'err');\n        const blankState = MessagesView.getDerivedStateFromProps({}, {});\n        blankState.title = this.props.intl.formatMessage(messages.not_found);\n        this.setState(blankState);\n      });\n  }\n\n  leave(oldTopicName) {\n    if (!oldTopicName || !this.props.tinode.isTopicCached(oldTopicName)) {\n      return;\n    }\n    const oldTopic = this.props.tinode.getTopic(oldTopicName);\n    if (oldTopic && oldTopic.isSubscribed()) {\n      oldTopic.leave(false)\n        .catch(() => { /* do nothing here */ })\n        .finally(() => {\n          // We don't care if the request succeeded or failed.\n          // The topic is dead regardless.\n          this.setState({fetchingMessages: false});\n          oldTopic.onData = undefined;\n          oldTopic.onAllMessagesReceived = undefined;\n          oldTopic.onInfo = undefined;\n          oldTopic.onMetaDesc = undefined;\n          oldTopic.onSubsUpdated = undefined;\n          oldTopic.onPres = undefined;\n        });\n    }\n  }\n\n  handleScrollReference(node) {\n    if (node) {\n      node.addEventListener('scroll', this.handleScrollEvent);\n      this.messagesScroller = node;\n      this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n    }\n  }\n\n  // Get older messages\n  handleScrollEvent(event) {\n    this.setState({scrollPosition: event.target.scrollHeight - event.target.scrollTop});\n    if (this.state.fetchingMessages) {\n      return;\n    }\n\n    if (event.target.scrollTop <= 0) {\n      const topic = this.props.tinode.getTopic(this.state.topic);\n      if (topic && topic.isSubscribed() && topic.msgHasMoreMessages()) {\n        this.setState({fetchingMessages: true}, () => {\n          topic.getMessagesPage(MESSAGES_PAGE)\n            .catch((err) => this.props.onError(err.message, 'err'))\n            .finally(() => this.setState({fetchingMessages: false}));\n          });\n      }\n    }\n  }\n\n  handleDescChange(desc) {\n    if (desc.public) {\n      this.setState({\n        title: desc.public.fn,\n        avatar: makeImageUrl(desc.public.photo)\n      });\n    } else {\n      this.setState({\n        title: '',\n        avatar: null\n      });\n    }\n\n    if (desc.acs) {\n      this.setState({\n        isWriter: desc.acs.isWriter(),\n        isReader: desc.acs.isReader(),\n        readingBlocked: !desc.acs.isReader('given'),\n        unconfirmed: isUnconfirmed(desc.acs),\n      });\n    }\n  }\n\n  postReadNotification(seq) {\n    // Ignore notifications if the app is invisible.\n    if (!this.props.applicationVisible) {\n      return;\n    }\n\n    // Set up the timer if it's not running already.\n    if (!this.readNotificationTimer) {\n      this.readNotificationTimer = setInterval(() => {\n        if (this.readNotificationQueue.length == 0) {\n          // Shut down the timer if the queue is empty.\n          clearInterval(this.readNotificationTimer);\n          this.readNotificationTimer = null;\n          return;\n        }\n\n        let seq = -1;\n        while (this.readNotificationQueue.length > 0) {\n          const n = this.readNotificationQueue[0];\n          if (n.topicName != this.state.topic) {\n            // Topic has changed. Drop the notification.\n            this.readNotificationQueue.shift();\n            continue;\n          }\n\n          const now = new Date();\n          if (n.sendAt <= now) {\n            // Remove expired notification from queue.\n            this.readNotificationQueue.shift();\n            seq = Math.max(seq, n.seq);\n          } else {\n            break;\n          }\n        }\n\n        // Send only one notification for the whole batch of messages.\n        if (seq >= 0) {\n          const topic = this.props.tinode.getTopic(this.state.topic);\n          if (topic) {\n            topic.noteRead(seq);\n          }\n        }\n      }, NOTIFICATION_EXEC_INTERVAL);\n    }\n\n    const now = new Date();\n    this.readNotificationQueue.push({\n      topicName: this.state.topic,\n      seq: seq,\n      sendAt: now.setMilliseconds(now.getMilliseconds() + READ_DELAY)\n    });\n  }\n\n  // Clear notification queue and timer.\n  clearNotificationQueue() {\n    this.readNotificationQueue = [];\n    if (this.readNotificationTimer) {\n      clearInterval(this.readNotificationTimer);\n      this.readNotificationTimer = null;\n    }\n  }\n\n  handleSubsUpdated() {\n    if (this.state.topic) {\n      const subs = [];\n      const topic = this.props.tinode.getTopic(this.state.topic);\n      topic.subscribers((sub) => {\n        if (sub.online && sub.user != this.props.myUserId) {\n          subs.push(sub);\n        }\n      });\n      const newState = {onlineSubs: subs};\n      const peer = topic.p2pPeerDesc();\n      if (peer) {\n        Object.assign(newState, {\n          peerMessagingDisabled: isPeerRestricted(peer.acs)\n        });\n      } else if (this.state.peerMessagingDisabled) {\n        Object.assign(newState, {\n          peerMessagingDisabled: false\n        });\n      }\n      this.setState(newState);\n    }\n  }\n\n  // The 'msg' could be false-ish if some message ranges were deleted.\n  handleMessageUpdate(msg) {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (!msg) {\n      // msg could be null if one or more messages were deleted.\n      // Updating state to force redraw.\n      this.setState({latestClearId: topic.maxClearId()});\n      return;\n    }\n\n    clearTimeout(this.keyPressTimer)\n    this.setState({messageCount: topic.messageCount(), typingIndicator: false});\n\n    // Scroll to the bottom if the message is added to the end of the message list.\n    // TODO: This should be replaced by showing a \"scroll to bottom\" button.\n    if (topic.isNewMessage(msg.seq)) {\n      this.setState({scrollPosition: 0});\n    }\n\n    // Aknowledge messages except own messages. They are\n    // automatically assumed to be read and recived.\n    const status = topic.msgStatus(msg, true);\n    if (status >= Tinode.MESSAGE_STATUS_SENT && msg.from != this.props.myUserId) {\n      this.postReadNotification(msg.seq);\n    }\n    // This will send \"received\" notifications right away.\n    this.props.onData(msg);\n  }\n\n  handleAllMessagesReceived(count) {\n    this.setState({fetchingMessages: false});\n    if (count > 0) {\n      // 0 means \"latest\".\n      this.postReadNotification(0);\n    }\n  }\n\n  handleInfoReceipt(info) {\n    switch (info.what) {\n      case 'kp': {\n        clearTimeout(this.keyPressTimer);\n        this.keyPressTimer = setTimeout(() => {\n          this.setState({typingIndicator: false});\n        }, KEYPRESS_DELAY + 1000);\n        if (!this.state.typingIndicator) {\n          this.setState({typingIndicator: true});\n        }\n        break;\n      }\n      case 'read':\n      case 'recv':\n        // Redraw due to changed recv/read status.\n        this.forceUpdate();\n        break;\n      default:\n        console.info(\"Other change in topic: \", info.what);\n    }\n  }\n\n  handleImagePostview(content) {\n    this.setState({ imagePostview: content });\n  }\n\n  handleClosePreview() {\n    if (this.state.imagePreview && this.state.imagePreview.url) {\n      URL.revokeObjectURL(this.state.imagePreview.url);\n    }\n    this.setState({ imagePostview: null, imagePreview: null, docPreview: null });\n  }\n\n  handleFormResponse(action, text, data) {\n    if (action == 'pub') {\n      this.sendMessage(Drafty.attachJSON(Drafty.parse(text), data));\n    } else if (action == 'url') {\n      const url = new URL(data.ref);\n      const params = url.searchParams;\n      for (let key in data.resp) {\n        if (data.resp.hasOwnProperty(key)) {\n          params.set(key, data.resp[key]);\n        }\n      }\n      ['name', 'seq'].map((key) => {\n        if (data[key]) {\n          params.set(key, data[key]);\n        }\n      });\n      params.set('uid', this.props.myUserId);\n      params.set('topic', this.state.topic);\n      url.search = params;\n      window.open(url, '_blank');\n    } else {\n      console.info(\"Unknown action in form\", action);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.state.topic, y: e.pageY, x: e.pageX });\n  }\n\n  handleShowContextMenuMessage(params, messageSpecificMenuItems) {\n    params.topicName = this.state.topic;\n    const menuItems = messageSpecificMenuItems || [];\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (topic) {\n      if (!topic.isChannelType()) {\n        menuItems.push('message_delete');\n      }\n      const acs = topic.getAccessMode();\n      if (acs && acs.isDeleter()) {\n        menuItems.push('message_delete_hard');\n      }\n    }\n    this.props.showContextMenu(params, menuItems);\n  }\n\n  handleNewChatAcceptance(action) {\n    this.props.onNewChat(this.state.topic, action);\n  }\n\n  handleEnablePeer(e) {\n    e.preventDefault();\n    this.props.onChangePermissions(this.state.topic, DEFAULT_P2P_ACCESS_MODE, this.state.topic);\n  }\n\n  sendKeyPress() {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (topic.isSubscribed()) {\n      topic.noteKeyPress();\n    }\n  }\n\n  // sendMessage sends the message with an optional subscription to topic first.\n  sendMessage(msg, uploadCompletionPromise, uploader) {\n    let head;\n    if (this.state.reply && this.state.reply.content) {\n      head = {reply: '' + this.state.reply.seq};\n      // Turn it into Drafty so we can make a quoted Drafty object later.\n      if (typeof msg == 'string') {\n        msg = Drafty.parse(msg);\n      }\n      msg = Drafty.append(this.state.reply.content, msg);\n      this.setState({reply: null});\n    }\n    this.props.sendMessage(msg, uploadCompletionPromise, uploader, head);\n  }\n\n  // Retry sending a message.\n  retrySend(pub) {\n    this.props.sendMessage(pub.content, undefined, undefined, pub.head);\n  }\n\n  // Send attachment as Drafty message:\n  // - if file is too large, upload it and send a s link.\n  // - if file is small enough, just send it in-band.\n  sendFileAttachment(file) {\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (file.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      const uploadCompletionPromise = uploader.upload(file);\n      const msg = Drafty.attachFile(null, {\n        mime: file.type,\n        filename: file.name,\n        size: file.size,\n        urlPromise: uploadCompletionPromise\n      });\n      // Pass data and the uploader to the TinodeWeb.\n      this.sendMessage(msg, uploadCompletionPromise, uploader);\n    } else {\n      // Small enough to send inband.\n      fileToBase64(file)\n        .then(b64 => this.sendMessage(Drafty.attachFile(null, {mime: b64.mime, data: b64.bits, filename: b64.name})))\n        .catch(err => this.props.onError(err));\n    }\n  }\n\n  // handleAttachFile method is called when [Attach file] button is clicked.\n  handleAttachFile(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    if (file.size > maxExternAttachmentSize) {\n      // Too large.\n      this.props.onError(this.props.intl.formatMessage(messages.file_attachment_too_large,\n        {size: bytesToHumanSize(file.size), limit: bytesToHumanSize(maxExternAttachmentSize)}), 'err');\n    } else {\n      this.setState({ docPreview: {\n        file: file,\n        filename: file.name,\n        size: file.size,\n        type: file.type\n      }});\n    }\n  }\n\n  // sendImageAttachment sends the image bits inband as Drafty message.\n  sendImageAttachment(caption, blob) {\n    const mime = this.state.imagePreview.type;\n    const width = this.state.imagePreview.width;\n    const height = this.state.imagePreview.height;\n    const fname = this.state.imagePreview.filename;\n\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (blob.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      if (!uploader) {\n        this.props.onError(this.props.intl.formatMessage(messages.cannot_initiate_upload));\n        return;\n      }\n      const uploadCompletionPromise = uploader.upload(blob);\n\n      // Make small preview to show while uploading.\n      imageScaled(blob, IMAGE_PREVIEW_DIM, IMAGE_PREVIEW_DIM, -1, false)\n        // Convert tiny image into base64 for serialization and previewing.\n        .then(scaled => blobToBase64(scaled.blob))\n        .then(b64 => {\n            let msg = Drafty.insertImage(null, 0, {\n              mime: mime,\n              _tempPreview: b64.bits, // This preview will not be serialized.\n              width: width,\n              height: height,\n              filename: fname,\n              size: blob.size,\n              urlPromise: uploadCompletionPromise\n            });\n            if (caption) {\n              msg = Drafty.appendLineBreak(msg);\n              msg = Drafty.append(msg, Drafty.parse(caption));\n            }\n            // Pass data and the uploader to the TinodeWeb.\n            this.sendMessage(msg, uploadCompletionPromise, uploader);\n        }).catch((err) => {\n          this.props.onError(err, 'err');\n        });\n        return;\n    }\n\n    // Upload the image if it's too big to be send inband.\n    blobToBase64(blob)\n      .then(b64 => {\n        let msg = Drafty.insertImage(null, 0, {\n          mime: b64.mime,\n          preview: b64.bits, // Serializable preview\n          width: width,\n          height: height,\n          filename: fname,\n          size: blob.size\n        });\n        if (caption) {\n          msg = Drafty.appendLineBreak(msg);\n          msg = Drafty.append(msg, Drafty.parse(caption));\n        }\n        this.sendMessage(msg);\n      });\n  }\n\n  // handleAttachImage method is called when [Attach image] button is clicked.\n  handleAttachImage(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    // Get image dimensions and size, optionally scale it down.\n    imageScaled(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, maxExternAttachmentSize, false)\n      .then(scaled => {\n        this.setState({imagePreview: {\n          url: URL.createObjectURL(scaled.blob),\n          blob: scaled.blob,\n          filename: scaled.fname,\n          width: scaled.width,\n          height: scaled.height,\n          size: scaled.blob.size,\n          type: scaled.mime\n        }});\n      }).catch(err => {\n        this.props.onError(err, 'err');\n      });\n  }\n\n  handleCancelUpload(seq, uploader) {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    const found = topic.findMessage(seq);\n    if (found) {\n      found._cancelled = true;\n    }\n    uploader.cancel();\n  }\n\n  handlePickReply(seq, content) {\n    this.setState({reply: null});\n\n    if (!seq || !content) {\n      return;\n    }\n\n    if (typeof content == 'string') {\n      content = Drafty.init(content);\n    }\n    if (Drafty.isValid(content)) {\n      content = Drafty.preview(content, 30);\n    } else {\n      // /!\\ invalid content.\n      content = Drafty.append(Drafty.init('\\u26A0 '),\n        Drafty.wrapInto(this.props.intl.formatMessage(messages.invalid_content), 'EM'));\n    }\n\n    // Get the author.\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    const msg = topic.findMessage(seq);\n    let senderName, senderId;\n    if (msg) {\n      senderId = msg.from || 'chan';\n      if (senderId != this.props.myUserId) {\n        const topic = this.props.tinode.getTopic(this.state.topic);\n        const user = topic.userDesc(senderId);\n        if (user && user.public) {\n          senderName = user.public.fn;\n        }\n      } else {\n        senderName = this.props.myUserName;\n      }\n    }\n\n    // Make small image previews.\n    const images = [];\n    Drafty.entities(content, (data, idx, tp) => {\n      if (tp == 'IM') {\n        images.push({\n          tp: tp,\n          data: data\n        });\n      }\n    });\n\n    const quotedImage = (data) => {\n      let promise;\n      // Get the blob from the image data.\n      if (data.val) {\n        const blob = base64ToBlob(data.val, data.mime);\n        promise = blob ? Promise.resolve(blob) : Prmise.reject(new Error(\"Invalid image\"));\n      } else {\n        promise = fetch(this.props.tinode.authorizeURL(sanitizeImageUrl(data.ref))).then(evt => {\n          if (evt.ok) {\n            return evt.blob();\n          } else {\n            throw new Error(`Image fetch unsuccessful: ${evt.status} ${evt.statusText}`);\n          }\n        });\n      }\n\n      // Scale the blob.\n      return promise\n        .then(blob => {\n          return imageScaled(blob, IMAGE_THUMBNAIL_DIM, IMAGE_THUMBNAIL_DIM, -1, false)\n        }).then(scaled => {\n          data.mime = scaled.mime;\n          data.size = scaled.blob.size;\n          data.width = scaled.width;\n          data.height = scaled.height;\n          delete data.ref;\n          // Keeping the original file name, if provided: ex.data.name;\n\n          return blobToBase64(scaled.blob);\n        }).then(b64 => {\n          data.val = b64.bits;\n          return data;\n        }).catch(err => {\n          delete data.val;\n          delete data.name;\n          data.width = IMAGE_THUMBNAIL_DIM;\n          data.height = IMAGE_THUMBNAIL_DIM;\n          data.maxWidth = IMAGE_THUMBNAIL_DIM;\n          data.maxHeight = IMAGE_THUMBNAIL_DIM;\n          // Rethrow.\n          throw err;\n        });\n    }\n\n    // Turn all images into thumbnails.\n    Promise.all(images.map(ex => quotedImage(ex.data)))\n      .catch((err) => {\n        this.props.onError(err, 'err');\n      })\n      .finally(() => {\n        // All done. Create a reply quote.\n        this.setState({\n          reply: {\n            content: Drafty.quote(senderName, senderId, content),\n            seq: seq\n          }\n        });\n      });\n  }\n\n  handleCancelReply() {\n    this.setState({reply: null})\n  }\n\n  handleQuoteClick(replyToSeq) {\n    const ref = this.getOrCreateMessageRef(replyToSeq);\n    if (ref && ref.current) {\n      ref.current.scrollIntoView({block: \"center\", behavior: \"smooth\"});\n      ref.current.classList.add('flash');\n      setTimeout(() => { ref.current.classList.remove('flash') } , 1000);\n    } else {\n      console.error(\"Unresolved message ref\", replyToSeq);\n    }\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n\n    let component;\n    if (this.props.hideSelf) {\n      component = null;\n    } else if (!this.state.topic) {\n      component = (\n        <LogoView\n          serverVersion={this.props.serverVersion}\n          serverAddress={this.props.serverAddress} />\n      );\n    } else {\n      let component2;\n      if (this.state.imagePreview) {\n        // Preview image before sending.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePreview}\n            tinode={this.props.tinode}\n            replyTo={this.state.reply}\n            onCancelReply={this.handleCancelReply}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendImageAttachment} />\n        );\n      } else if (this.state.imagePostview) {\n        // Expand received image.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePostview}\n            onClose={this.handleClosePreview} />\n        );\n      } else if (this.state.docPreview) {\n        // Preview attachment before sending.\n        component2 = (\n          <DocPreview\n            content={this.state.docPreview}\n            tinode={this.props.tinode}\n            replyTo={this.state.reply}\n            onCancelReply={this.handleCancelReply}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendFileAttachment} />\n        );\n      } else {\n        const topic = this.props.tinode.getTopic(this.state.topic);\n        const isChannel = topic.isChannelType();\n        const groupTopic = topic.isGroupType() && !isChannel;\n        const icon_badges = [];\n        if (topic.trusted) {\n          if (topic.trusted.verified) {\n            icon_badges.push({icon: 'verified', color: 'badge-inv'});\n          }\n          if (topic.trusted.staff) {\n            icon_badges.push({icon: 'staff', color: 'badge-inv'});\n          }\n          if (topic.trusted.danger) {\n            icon_badges.push({icon: 'dangerous', color: 'badge-inv'});\n          }\n        }\n        let messageNodes = [];\n        let previousFrom = null;\n        let chatBoxClass = null;\n        topic.messages((msg, prev, next, i) => {\n          let nextFrom = next ? (next.from || null) : 'chan';\n\n          let sequence = 'single';\n          let thisFrom = msg.from || 'chan';\n          if (thisFrom == previousFrom) {\n            if (thisFrom == nextFrom) {\n              sequence = 'middle';\n            } else {\n              sequence = 'last';\n            }\n          } else if (thisFrom == nextFrom) {\n            sequence = 'first';\n          }\n          previousFrom = thisFrom;\n\n          const isReply = !(thisFrom == this.props.myUserId);\n          const deliveryStatus = topic.msgStatus(msg, true);\n\n          let userName, userAvatar, userFrom;\n          if (groupTopic) {\n            const user = topic.userDesc(thisFrom);\n            if (user && user.public) {\n              userName = user.public.fn;\n              userAvatar = makeImageUrl(user.public.photo);\n            }\n            userFrom = thisFrom;\n            chatBoxClass='chat-box group';\n          } else {\n            chatBoxClass='chat-box';\n          }\n\n          // Ref for this chat message.\n          const ref = this.getOrCreateMessageRef(msg.seq);\n          let replyToSeq = msg.head ? parseInt(msg.head.reply) : null;\n          if (!replyToSeq || isNaN(replyToSeq)) {\n            replyToSeq = null;\n          }\n\n          messageNodes.push(\n            <ChatMessage\n              tinode={this.props.tinode}\n              content={msg.content}\n              deleted={msg.hi}\n              mimeType={msg.head ? msg.head.mime : null}\n              timestamp={msg.ts}\n              response={isReply}\n              seq={msg.seq}\n              userFrom={userFrom}\n              userName={userName}\n              userAvatar={userAvatar}\n              sequence={sequence}\n              received={deliveryStatus}\n              uploader={msg._uploader}\n              viewportWidth={this.props.viewportWidth}  // Used by `formatter`.\n              showContextMenu={this.state.channel? false : this.handleShowContextMenuMessage}\n              onImagePreview={this.handleImagePostview}\n              onFormResponse={this.handleFormResponse}\n              onError={this.props.onError}\n              onCancelUpload={this.handleCancelUpload}\n              pickReply={this.handlePickReply}\n              replyToSeq={replyToSeq}\n              onQuoteClick={this.handleQuoteClick}\n              ref={ref}\n              userIsWriter={this.state.isWriter}\n              key={msg.seq} />\n          );\n        });\n\n        let lastSeen = null;\n        if (isChannel) {\n          lastSeen = formatMessage(messages.channel);\n        } else {\n          const cont = this.props.tinode.getMeTopic().getContact(this.state.topic);\n          if (cont && Tinode.isP2PTopicName(cont.topic)) {\n            if (cont.online) {\n              lastSeen = formatMessage(messages.online_now);\n            } else if (cont.seen) {\n              lastSeen = formatMessage(messages.last_seen) + \": \" +\n                shortDateFormat(cont.seen.when, this.props.intl.locale);\n              // TODO: also handle user agent in c.seen.ua\n            }\n          }\n        }\n        const avatar = this.state.avatar || true;\n        const online = this.props.online ? 'online' + (this.state.typingIndicator ? ' typing' : '') : 'offline';\n\n        component2 = (\n          <>\n            <div id=\"topic-caption-panel\" className=\"caption-panel\">\n              {this.props.displayMobile ?\n                <a href=\"#\" id=\"hide-message-view\" onClick={(e) => {e.preventDefault(); this.props.onHideMessagesView();}}>\n                  <i className=\"material-icons\">arrow_back</i>\n                </a>\n                :\n                null}\n              <div className=\"avatar-box\">\n                <LetterTile\n                  tinode={this.props.tinode}\n                  avatar={avatar}\n                  topic={this.state.topic}\n                  title={this.state.title} />\n                {!isChannel ? <span className={online} /> : null}\n              </div>\n              <div id=\"topic-title-group\">\n                <div id=\"topic-title\" className=\"panel-title\">{\n                  this.state.title ||\n                  <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n                    description=\"Title shown when the topic has no name\" /></i>\n                }<ContactBadges badges={icon_badges} /></div>\n                <div id=\"topic-last-seen\">{lastSeen}</div>\n              </div>\n              {groupTopic ?\n                <GroupSubs\n                  tinode={this.props.tinode}\n                  subscribers={this.state.onlineSubs} /> :\n                <div id=\"topic-users\" />\n              }\n              <div>\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">more_vert</i>\n                </a>\n              </div>\n            </div>\n            {this.props.displayMobile ?\n              <ErrorPanel\n                level={this.props.errorLevel}\n                text={this.props.errorText}\n                onClearError={this.props.onError} />\n              : null}\n            <LoadSpinner show={this.state.fetchingMessages} />\n            <div id=\"messages-container\">\n              <div id=\"messages-panel\" ref={this.handleScrollReference}>\n                <ul id=\"scroller\" className={chatBoxClass}>\n                  {messageNodes}\n                </ul>\n              </div>\n              {!this.state.isReader ?\n              <div id=\"write-only-background\">\n                {this.state.readingBlocked ?\n                <div id=\"write-only-note\">\n                  <FormattedMessage id=\"messages_not_readable\" defaultMessage=\"no access to messages\"\n                    description=\"Message shown in topic without the read access\" />\n                </div>\n                : null }\n              </div>\n              : null }\n            </div>\n            {this.state.peerMessagingDisabled && !this.state.unconfirmed ?\n              <div id=\"peer-messaging-disabled-note\">\n                <i className=\"material-icons secondary\">block</i> <FormattedMessage\n                  id=\"peers_messaging_disabled\" defaultMessage=\"Peer's messaging is disabled.\"\n                  description=\"Shown when the p2p peer's messaging is disabled\" /> <a href=\"#\"\n                    onClick={this.handleEnablePeer}><FormattedMessage id=\"enable_peers_messaging\"\n                    defaultMessage=\"Enable\" description=\"Call to action to enable peer's messaging\" /></a>.\n              </div> : null}\n            {this.state.unconfirmed ?\n              <Invitation onAction={this.handleNewChatAcceptance} />\n              :\n              <SendMessage\n                tinode={this.props.tinode}\n                disabled={!this.state.isWriter}\n                onKeyPress={this.sendKeyPress}\n                onSendMessage={this.sendMessage}\n                onAttachFile={this.handleAttachFile}\n                onAttachImage={this.handleAttachImage}\n                onError={this.props.onError}\n                replyTo={this.state.reply}\n                onQuoteClick={this.handleQuoteClick}\n                onCancelReply={this.handleCancelReply} />}\n          </>\n        );\n      }\n\n      component = <div id=\"topic-view\">{component2}</div>\n    }\n    return component;\n  }\n};\n\nexport default injectIntl(MessagesView);\n","// The <- button to be displayed in title bars.\nimport React from 'react';\n\nexport default class ButtonBack extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onBack();}}>\n        <i className=\"material-icons\">arrow_back</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class MenuContacts extends React.PureComponent {\n  render() {\n    return (\n      <div>\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onNewTopic();}}><i className=\"material-icons\">chat</i></a>\n        &nbsp;\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nexport default class MenuStart extends React.PureComponent {\n  render() {\n    return (\n        <div>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSignUp();}}><i className=\"material-icons\">person_add</i></a>\n          &nbsp;\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n        </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\nimport ButtonBack from './button-back.jsx';\nimport ContactBadges from './contact-badges.jsx';\nimport MenuContacts from './menu-contacts.jsx';\nimport MenuStart from './menu-start.jsx';\n\nimport { sanitizeImageUrl } from '../lib/utils.js';\n\nexport default class SideNavbar extends React.PureComponent {\n  render() {\n    const icon_badges = [];\n    if (this.props.trustedBadges) {\n      this.props.trustedBadges.map((b) => {\n        icon_badges.push({icon: b, color: 'badge-inv'});\n      });\n    }\n    let avatar = null;\n    if (this.props.tinode) {\n      avatar = this.props.tinode.authorizeURL(sanitizeImageUrl(this.props.avatar));\n    }\n    return (\n      <div id=\"side-caption-panel\" className=\"caption-panel\">\n        {this.props.onCancel ? <ButtonBack onBack={this.props.onCancel} /> : null}\n        {avatar ?\n          <div id=\"self-avatar\" className=\"avatar-box\">\n            <LetterTile\n              tinode={this.props.tinode}\n              avatar={avatar}\n              topic={this.props.myUserId}\n              title={this.props.title} />\n          </div>\n          :\n          null}\n        <div id=\"sidepanel-title\" className=\"panel-title\">{this.props.title}<ContactBadges badges={icon_badges}/></div>\n        {this.props.state === 'login' ?\n            <MenuStart onSignUp={this.props.onSignUp} onSettings={this.props.onSettings} /> :\n          this.props.state === 'contacts' ?\n            <MenuContacts onNewTopic={this.props.onNewTopic} onSettings={this.props.onSettings} /> :\n          null}\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport BadgeList from '../widgets/badge-list.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH } from '../config.js';\n\nfunction _clip(str, length) {\n  return str && str.substring(0, length);\n}\n\nexport default class AccountSettingsView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    this.state = {\n      fullName: _clip(me.public ? me.public.fn : undefined, MAX_TITLE_LENGTH),\n      description: _clip(me.public ? me.public.note : undefined, MAX_TOPIC_DESCRIPTION_LENGTH),\n      avatar: makeImageUrl(me.public ? me.public.photo : null)\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          <a href=\"#\" className=\"flat-button float-right\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('general');}}>\n            <i className=\"material-icons\">edit</i>&nbsp;\n            <FormattedMessage id=\"button_edit\" defaultMessage=\"Edit\" description=\"Call to action [Edit]\" />\n          </a>\n          <center>\n            <AvatarUpload\n              tinode={this.props.tinode}\n              avatar={this.state.avatar}\n              readOnly={true}\n              uid={this.props.myUserId}\n              title={this.state.fullName} />\n          </center>\n          <div className=\"group\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n                description=\"Label for full name editing\" />\n            </label>\n            <div className=\"large ellipsized\">{this.state.fullName}</div>\n          </div>\n          <div className=\"group\">\n            <label className=\"small\"><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n              description=\"Label for user address (ID)\" /></label>&nbsp;\n            <tt>{this.props.myUserId}</tt>\n          </div>\n          <div className=\"group\">\n            <BadgeList trustedBadges={this.props.trustedBadges} />\n          </div>\n          {this.state.description ?\n            <div className=\"group\">\n              <label className=\"small\">\n                <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                  description=\"Label for editing topic description\" />\n              </label>\n              <div>{this.state.description}</div>\n            </div> : null}\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('notif');}}>\n            <i className=\"material-icons\">notifications</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_notifications\"\n              defaultMessage=\"Notifications\" description=\"Sidepanel title for AccNotificationsView.\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('security');}}>\n            <i className=\"material-icons\">security</i>&nbsp;<FormattedMessage id=\"button_security\"\n              defaultMessage=\"Security\" description=\"Navigaton button for security panel.\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onNavigate('support');}}>\n            <i className=\"material-icons\">contact_support</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_support\"\n              defaultMessage=\"Support\" description=\"Sidepanel title for AccSupportView.\" />\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","/* ContactsView holds all contacts-related stuff */\nimport React from 'react';\nimport { FormattedMessage, defineMessages } from 'react-intl';\n\nimport ContactList from '../widgets/contact-list.jsx';\n\nimport { updateFavicon } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  archived_contacts_title: {\n    id: \"archived_contacts\",\n    defaultMessage: \"Archived contacts ({count})\",\n    description: \"Label for archived chats\"\n  }\n});\n\nexport default class ContactsView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAction = this.handleAction.bind(this);\n\n    this.state = ContactsView.deriveStateFromProps(props);\n  }\n\n  static deriveStateFromProps(props) {\n    const contacts = [];\n    let unreadThreads = 0;\n    let archivedCount = 0;\n    props.chatList.map((c) => {\n      const blocked = c.acs && !c.acs.isJoiner();\n      // Show only blocked contacts only when props.blocked == true.\n      if (blocked && props.blocked) {\n        contacts.push(c);\n      }\n      if (blocked || props.blocked) {\n        return;\n      }\n\n      if (c.private && c.private.arch) {\n        if (props.archive) {\n          contacts.push(c);\n        } else {\n          archivedCount ++;\n        }\n      } else if (!props.archive) {\n        contacts.push(c);\n        unreadThreads += c.unread > 0 ? 1 : 0;\n      }\n    });\n\n    contacts.sort((a, b) => {\n      return (b.touched || 0) - (a.touched || 0);\n    });\n\n    if (archivedCount > 0) {\n      contacts.push({\n        action: 'archive',\n        title: messages.archived_contacts_title,\n        values: {count: archivedCount}\n      });\n    }\n\n    return {\n      contactList: contacts,\n      unreadThreads: unreadThreads\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chatList != this.props.chatList ||\n        prevProps.archive != this.props.archive ||\n        prevProps.blocked != this.props.blocked) {\n      const newState = ContactsView.deriveStateFromProps(this.props);\n      this.setState(newState);\n      if (newState.unreadThreads != prevState.unreadThreads) {\n        updateFavicon(newState.unreadThreads);\n      }\n    }\n  }\n\n  handleAction(action_ignored) {\n    this.props.onShowArchive();\n  }\n\n  render() {\n    return (\n      <FormattedMessage id=\"contacts_not_found\"\n        defaultMessage=\"You have no chats<br />¯∖_(ツ)_/¯\"\n        description=\"HTML message shown in ContactList when no contacts are found\">{\n        (no_contacts) => <ContactList\n          tinode={this.props.tinode}\n          connected={this.props.connected}\n          contacts={this.state.contactList}\n          emptyListMessage={no_contacts}\n          topicSelected={this.props.topicSelected}\n          myUserId={this.props.myUserId}\n          showOnline={true}\n          showUnread={true}\n          onTopicSelected={this.props.onTopicSelected}\n          showContextMenu={this.props.showContextMenu}\n          onAction={this.handleAction} />\n      }</FormattedMessage>\n    );\n  }\n};\n","// Helper functions for storing values in localStorage.\n// By default localStorage can store only strings, not objects or other types.\n\nexport default class LocalStorageUtil {\n  // Replace old object with the new one.\n  static setObject(key, value) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n\n  // Get stored object.\n  static getObject(key) {\n    const value = localStorage.getItem(key);\n    return value && JSON.parse(value);\n  }\n\n  // Partially or wholly update stored object.\n  static updateObject(key, value) {\n    const oldVal = this.getObject(key);\n    this.setObject(key, Object.assign(oldVal || {}, value));\n  }\n\n  // Just a wrapper.\n  static removeItem(key) {\n    localStorage.removeItem(key);\n  }\n}\n","// Account registration.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport { theCard } from '../lib/utils.js';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class CreateAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: '',\n      password: '',\n      email: '',\n      fn: '', // full/formatted name\n      imageDataUrl: null,\n      errorCleared: false,\n      saveToken: LocalStorageUtil.getObject('keep-logged-in')\n    };\n\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(password) {\n    this.setState({password: password});\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value})\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleToggleSaveToken() {\n    LocalStorageUtil.setObject('keep-logged-in', !this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({errorCleared: false});\n    this.props.onCreateAccount(\n      this.state.login.trim(),\n      this.state.password.trim(),\n      theCard(this.state.fn.trim().substring(0, MAX_TITLE_LENGTH), this.state.imageDataUrl),\n      {'meth': 'email', 'val': this.state.email});\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form className=\"panel-form-column\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n              description=\"Placeholer for username/login\">{\n              (login_prompt) => <input type=\"text\" placeholder={login_prompt} autoComplete=\"user-name\"\n                value={this.state.login} onChange={this.handleLoginChange} required autoFocus />\n            }</FormattedMessage>\n            <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n              description=\"Placeholder/prompt for entering password\">{\n              (password_prompt) => <VisiblePassword placeholder={password_prompt} autoComplete=\"new-password\"\n                value={this.state.password} onFinished={this.handlePasswordChange}\n                required={true} />\n            }</FormattedMessage>\n          </div>\n          <AvatarUpload\n            tinode={this.props.tinode}\n            onImageChanged={this.handleImageChanged}\n            onError={this.props.onError} />\n        </div>\n        <div  className=\"panel-form-row\">\n          <FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n            description=\"Input placeholder for person's full name\">{\n            (full_name_prompt) => <input type=\"text\" placeholder={full_name_prompt} autoComplete=\"name\"\n              value={this.state.fn} onChange={this.handleFnChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <FormattedMessage id=\"email_prompt\" defaultMessage=\"Email, e.g. jdoe@example.com\"\n            description=\"Input placeholder for email entry\">{\n            (email_prompt) => <input type=\"email\" placeholder={email_prompt} autoComplete=\"email\"\n              value={this.state.email} onChange={this.handleEmailChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n            description=\"Label for a checkbox\">{\n            (stay_logged_in) => <label htmlFor=\"save-token\">&nbsp;{stay_logged_in}</label>\n          }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_up\" defaultMessage=\"Sign up\"\n              description=\"Create account button [Sign Up]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\n\nexport default class EditAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckboxClick = this.handleCheckboxClick.bind(this);\n  }\n\n  handleCheckboxClick(what, checked) {\n    if (what == 'sound') {\n      this.props.onToggleMessageSounds(checked);\n    } else if (what == 'alert') {\n      this.props.onTogglePushNotifications(checked);\n    } else if (what == 'incognito') {\n      this.props.onToggleIncognitoMode(checked);\n    }\n  }\n\n  render() {\n    return (\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"message-sound\">\n              <FormattedMessage id=\"label_message_sound\" defaultMessage=\"Message sound:\"\n                description=\"Label for message sounds toggle\" />\n            </label>\n            <CheckBox name=\"sound\" id=\"message-sound\"\n              checked={this.props.messageSounds} onChange={this.handleCheckboxClick} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"desktop-alerts\">\n            {this.props.desktopAlertsEnabled ?\n              <FormattedMessage id=\"label_push_notifications\" defaultMessage=\"Notification alerts:\"\n                description=\"Label for push notifications switch\" />\n              :\n              <FormattedMessage id=\"label_push_notifications_disabled\"\n                defaultMessage=\"Notification alerts (requires HTTPS):\"\n                description=\"Label for push notifications switch\" />\n            }\n            </label>\n            <CheckBox name=\"alert\" id=\"desktop-alerts\"\n              checked={this.props.desktopAlerts}\n              onChange={this.props.desktopAlertsEnabled ? this.handleCheckboxClick : null} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"incognito-mode\">\n              <FormattedMessage id=\"label_incognito_mode\" defaultMessage=\"Incognito mode:\"\n                description=\"Label for incognito mode toggle\" />\n            </label>\n            <CheckBox name=\"incognito\" id=\"incognito-mode\"\n              checked={this.props.incognitoMode} onChange={this.handleCheckboxClick} />\n          </div>\n        </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\n\nconst messages = defineMessages({\n  delete_account: {\n    id: 'delete_account',\n    defaultMessage: 'Delete account',\n    description: 'Title for delete account warning'\n  },\n  delete_account_warning: {\n    id: 'delete_account_warning',\n    defaultMessage: 'Are you sure you want to delete your account? It cannot be undone.',\n    description: 'Warning message when deleting an account'\n  }\n});\n\nclass AccSecurityView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    let blockedCount = 0;\n    me.contacts((c) => {\n      if (c.acs && !c.acs.isJoiner()) {\n        blockedCount ++;\n      }\n    });\n    const defacs = me.getDefaultAccess();\n    this.state = {\n      auth: defacs ? defacs.auth : null,\n      anon: defacs ? defacs.anon : null,\n      showPermissionEditorFor: undefined,\n      blockedCount: blockedCount,\n    };\n\n    this.handlePasswordUpdate = this.handlePasswordUpdate.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n  }\n\n  handlePasswordUpdate(pwd) {\n    this.setState({password: pwd});\n    this.props.onUpdatePassword(pwd);\n  }\n\n  handleLaunchPermissionsEditor(which) {\n    this.setState({\n      showPermissionEditorFor: which,\n      editedPermissions: this.state[which]\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handlePermissionsChanged(perm) {\n    let defacs = {};\n    defacs[this.state.showPermissionEditorFor] = perm;\n    this.props.onUpdateAccountDesc('me', undefined, undefined, defacs);\n\n    let newState = {showPermissionEditorFor: undefined};\n    newState[this.state.showPermissionEditorFor] = perm;\n    this.setState(newState);\n  }\n\n  handleDeleteAccount(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.delete_account), // title\n      formatMessage(messages.delete_account_warning), // content\n      (() => { this.props.onDeleteAccount(); }), // onConfirm\n      null, // use default text \"OK\"\n      true, // Show Reject button\n      null  // use default text \"Cancel\"\n    );\n  }\n\n  render() {\n    return (\n      <React.Fragment>{this.state.showPermissionEditorFor ?\n        <PermissionsEditor\n          mode={this.state.editedPermissions}\n          skip=\"O\"\n          onSubmit={this.handlePermissionsChanged}\n          onCancel={this.handleHidePermissionsEditor} />\n        :\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_password\" defaultMessage=\"Password\"\n                  description=\"Label for password editing\" />\n            </label>\n            <div>\n              <FormattedMessage id=\"password_unchanged_prompt\" defaultMessage=\"Unchanged\"\n                description=\"Message in editor while password is unchanged\">{\n                (password_unchanged) => <InPlaceEdit\n                  placeholder={password_unchanged}\n                  type=\"password\"\n                  onFinished={this.handlePasswordUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <a href=\"#\" className=\"danger flat-button\" onClick={(e) => {e.preventDefault(); this.props.onLogout();}}>\n              <i className=\"material-icons\">exit_to_app</i> &nbsp;<FormattedMessage id=\"button_logout\"\n                defaultMessage=\"Logout\" description=\"Button [Logout]\" />\n            </a>\n            <a href=\"#\" className=\"danger flat-button\" onClick={(e) => {this.handleDeleteAccount(e);}}>\n              <i className=\"material-icons\">delete</i> &nbsp;<FormattedMessage id=\"button_delete_account\"\n                defaultMessage=\"Delete account\" description=\"Button [Delete account]\" />\n            </a>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <div>\n              <label className=\"small\">\n                <FormattedMessage id=\"label_default_access_mode\" defaultMessage=\"Default access mode:\"\n                description=\"Label for default access mode\" />\n              </label>\n            </div>\n            <div className=\"quoted\">\n              <div>Auth: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>{this.state.auth}</tt></div>\n              <div>Anon: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>{this.state.anon}</tt></div>\n            </div>\n          </div>\n          {this.state.blockedCount > 0 ?\n            <>\n              <div className=\"hr\" />\n              <div className=\"panel-form-row\">\n                <i className=\"material-icons\">block</i>&nbsp;\n                <a href=\"#\" className=\"gray\" onClick={(e) => {e.preventDefault(); this.props.onShowBlocked();}}>\n                  <FormattedMessage id=\"blocked_contacts_link\" defaultMessage=\"Blocked contacts ({count})\"\n                    values={{ count: this.state.blockedCount }} description=\"Blocked contacts link\" />\n                </a>\n              </div>\n            </>\n            : null }\n        </div>\n      }</React.Fragment>\n    );\n  }\n};\n\nexport default injectIntl(AccSecurityView);\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME, LINK_CONTACT_US, LINK_PRIVACY_POLICY, LINK_TERMS_OF_SERVICE } from '../config.js';\n\nexport default class AccSupportView extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          <a href={LINK_CONTACT_US} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">email</i> &nbsp;<FormattedMessage id=\"link_contact_us\"\n              defaultMessage=\"Contact Us\" description=\"Ancor text for contacting us by email\" />\n          </a>\n          <a href={LINK_TERMS_OF_SERVICE} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">description</i> &nbsp;<FormattedMessage id=\"link_terms_of_service\"\n              defaultMessage=\"Terms of Service\" description=\"Ancor text for terms of service link\" />\n          </a>\n          <a href={LINK_PRIVACY_POLICY} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">policy</i> &nbsp;<FormattedMessage id=\"link_privacy_policy\"\n              defaultMessage=\"Privacy Policy\" description=\"Ancor text for privacy policy link\" />\n          </a>\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\"\n              description=\"Label for a client version\" /></label>\n            {APP_NAME}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_sdk\" defaultMessage=\"SDK:\" /></label>\n            {Tinode.getLibrary()}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\"\n              description=\"Label for a server version\" /></label>\n            {this.props.serverVersion}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server_address\" defaultMessage=\"Server address:\" /></label>\n            {this.props.serverAddress}\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","// Login form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\n\nexport default class LoginView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: props.login,\n      password: '',\n      hostName: props.serverAddress,\n      saveToken: props.persist\n    };\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  handleToggleSaveToken() {\n    this.props.onPersistenceChange(!this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onLogin(this.state.login.trim(), this.state.password.trim());\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form id=\"login-form\" onSubmit={this.handleSubmit}>\n        <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n          description=\"Placeholer for username/login\">\n        {\n          (login_prompt) => <input type=\"text\" id=\"inputLogin\"\n            placeholder={login_prompt}\n            autoComplete=\"username\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"none\"\n            value={this.state.login}\n            onChange={this.handleLoginChange}\n            required autoFocus />\n        }\n        </FormattedMessage>\n        <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n          description=\"Placeholder/prompt for entering password\">\n        {\n          (password_prompt) => <VisiblePassword type=\"password\" id=\"inputPassword\"\n            placeholder={password_prompt}\n            autoComplete=\"current-password\"\n            value={this.state.password}\n            onChange={this.handlePasswordChange}\n            required={true} />\n        }\n        </FormattedMessage>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <label htmlFor=\"save-token\">&nbsp;\n            <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n              description=\"Label for a checkbox\" />\n          </label>\n          <a href=\"#reset\">\n            <FormattedMessage id=\"forgot_password_link\" defaultMessage=\"Forgot password?\"\n              description=\"Link to Reset password form\" />\n          </a>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_in\" defaultMessage=\"Sign in\"\n              description=\"Button [Sign In]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n/* END Login */\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  invalid_id: {\n    id: 'error_invalid_id',\n    defaultMessage: 'Invalid ID',\n    description: 'Error message'\n  }\n});\n\nclass NewTopicById extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      groupId: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({groupId: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.groupId) {\n      const name = this.state.groupId.trim();\n      const prefix = name.substr(0, 3);\n      if (name.length > 3 && ['usr', 'grp', 'chn'].includes(prefix)) {\n        this.props.onSubmit(name);\n      } else {\n        this.props.onError(this.props.intl.formatMessage(messages.invalid_id), 'err');\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"group_user_id_prompt\" defaultMessage=\"Group or User ID\"\n          description=\"Prompt for entering user or group ID\">{\n          (prompt) => <input type=\"text\" placeholder={prompt}\n            value={this.state.groupId} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required autoFocus />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_subscribe\" defaultMessage=\"Subscribe\"\n              description=\"Button [Subscribe]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicById);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from './avatar-upload.jsx';\nimport CheckBox from './checkbox.jsx';\nimport TagManager from './tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH } from '../config.js';\n\nexport default class NewTopicGroup extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.fullName = React.createRef();\n\n    this.state = {\n      fullName: '', // full/formatted name\n      private: '',\n      description: '',\n      imageDataUrl: null,\n      tags: [],\n      isChannel: false\n    };\n\n    this.handleFieldEdit = this.handleFieldEdit.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleTagsChanged = this.handleTagsChanged.bind(this);\n    this.handleChannelToggle = this.handleChannelToggle.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    // this.fullName.current.focus();\n  }\n\n  handleFieldEdit(name, e) {\n    this.setState({[name]: e.target.value || ''});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleTagsChanged(tags) {\n    this.setState({tags: tags});\n  }\n\n  handleChannelToggle() {\n    this.setState({isChannel: !this.state.isChannel});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const fn = this.state.fullName.trim().substring(0, MAX_TITLE_LENGTH);\n    const comment = this.state.private.trim().substring(0, MAX_TITLE_LENGTH);\n    const description = this.state.description.trim().substring(0, MAX_TOPIC_DESCRIPTION_LENGTH);\n    if (fn) {\n      this.props.onSubmit(fn, description, this.state.imageDataUrl, comment, this.state.tags, this.state.isChannel);\n    }\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n    return (\n      <form className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-column\">\n          <center>\n            <AvatarUpload\n              tinode={this.props.tinode}\n              onError={this.props.onError}\n              onImageChanged={this.handleImageChanged} />\n          </center>\n          <div className=\"group\">\n            <label className=\"small\" htmlFor=\"new-topic-fn\">\n              <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                description=\"Label for editing topic name\" />\n            </label>\n            <FormattedMessage id=\"topic_name_editing_placeholder\" defaultMessage=\"Freeform name of the group\"\n              description=\"Prompt for entering topic name\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-fn\" placeholder={placeholder}\n                ref={this.fullName} value={this.state.fullName} onChange={this.handleFieldEdit.bind(this, 'fullName')}\n                autoFocus required tabIndex={0} />\n            }</FormattedMessage>\n          </div>\n          <div className=\"group\">\n            <label className=\"small\" htmlFor=\"new-topic-priv\">\n              <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                description=\"Label for editing 'private'\" />\n            </label>\n            <FormattedMessage id=\"private_editing_placeholder\" defaultMessage=\"Visible to you only\"\n              description=\"Placeholder for editing 'private'\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-priv\" placeholder={placeholder}\n                value={this.state.private} onChange={this.handleFieldEdit.bind(this, 'private')} tabIndex={1} />\n            }</FormattedMessage>\n          </div>\n          <div className=\"group\">\n            <label className=\"small\" htmlFor=\"new-topic-desc\">\n              <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                description=\"Label for editing topic description\" />\n            </label>\n            <FormattedMessage id=\"description_editing_placeholder\" defaultMessage=\"Description (optional)\"\n              description=\"Placeholder for editing topic description\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-desc\" placeholder={placeholder}\n                value={this.state.description} onChange={this.handleFieldEdit.bind(this, 'description')} tabIndex={2} />\n            }</FormattedMessage>\n          </div>\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox checked={this.state.isChannel} tabIndex={3} onChange={this.handleChannelToggle} />&nbsp;\n          <label onClick={this.handleChannelToggle}><FormattedMessage id=\"channel_prompt\"\n            defaultMessage=\"This is a channel\"\n            description=\"Checkbox label when creating a channel\" /></label>\n        </div>\n        <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (search & discovery)\"\n          description=\"Section title for TagManager\">{\n          (title) => <TagManager\n            tinode={this.props.tinode}\n            tags={this.state.tags}\n            activated={true}\n            onTagsChanged={this.handleTagsChanged}\n            tabIndex={4}\n            title={title} />\n        }</FormattedMessage>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses}>\n            <FormattedMessage id=\"button_create\" defaultMessage=\"Create\"\n              description=\"Button [Create]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nexport default class SearchContacts extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      edited: false,\n      search: ''\n    };\n\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  componentWillUnmount() {\n    if (this.state.edited) {\n      this.setState({search: '', edited: false});\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n  }\n\n  handleSearchChange(e) {\n    this.setState({search: e.target.value});\n  }\n\n  handleSearch(e) {\n    e.preventDefault();\n    var query = this.state.search.trim();\n    this.setState({edited: (query.length > 0)});\n    this.props.onSearchContacts(query.length > 0 ? query : Tinode.DEL_CHAR);\n  }\n\n  handleClear(e) {\n    e.preventDefault();\n    if (this.state.edited) {\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n    this.setState({search: '', edited: false});\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Enter') {\n      this.handleSearch(e);\n    } else if (e.key === 'Escape') {\n      this.handleClear();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <i className=\"material-icons search\">search</i>\n          <FormattedMessage id=\"search_placeholder\" defaultMessage=\"List like email:alice@example.com, tel:17025550003...\"\n            description=\"Placeholder in contacts search field\">{\n            (search_placeholder) => <input className=\"search\" type=\"text\"\n              placeholder={search_placeholder}\n              value={this.state.search} onChange={this.handleSearchChange}\n              onKeyDown={this.handleKeyDown} required autoFocus />\n          }</FormattedMessage>\n          <a href=\"#\" onClick={this.handleClear}>\n            <i className=\"material-icons\">close</i>\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","// Create new topic and invite users or send an invite.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport ContactList from '../widgets/contact-list.jsx';\nimport NewTopicById from '../widgets/new-topic-by-id.jsx';\nimport NewTopicGroup from '../widgets/new-topic-group.jsx';\nimport SearchContacts from '../widgets/search-contacts.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\nimport { theCard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  search_for_contacts: {\n    id: \"search_for_contacts\",\n    defaultMessage: \"Use search to find contacts\",\n    description: \"Text shown in contacts view when user entered no search query.\"\n  },\n  search_no_results: {\n    id: \"search_no_results\",\n    defaultMessage: \"Search returned no results\",\n    description: \"Text shown in contacts view when query returned no results.\"\n  }\n});\n\nclass NewTopicView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tabSelected: 'p2p',\n      searchQuery: null\n    };\n\n    this.handleTabClick = this.handleTabClick.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleNewGroupSubmit = this.handleNewGroupSubmit.bind(this);\n    this.handleGroupByID = this.handleGroupByID.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.onInitFind();\n  }\n\n  handleTabClick(e) {\n    e.preventDefault();\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'tab', e.currentTarget.dataset.id));\n    this.setState({tabSelected: e.currentTarget.dataset.id});\n  }\n\n  handleSearchContacts(query) {\n    this.props.onSearchContacts(query);\n    this.setState({searchQuery: Tinode.isNullValue(query) ? null : query});\n  }\n\n  handleContactSelected(uid) {\n    if (this.state.tabSelected == 'p2p') {\n      HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n      this.props.onCreateTopic(uid);\n    }\n  }\n\n  handleNewGroupSubmit(name, description, dataUrl, priv, tags, isChannel) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(undefined,\n      {public: theCard(name, dataUrl, null, description), private: priv, tags: tags}, isChannel);\n  }\n\n  handleGroupByID(topicName) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(topicName);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const no_contacts_placeholder = formatMessage(this.state.searchQuery ?\n      messages.search_no_results : messages.search_for_contacts);\n    return (\n      <div className=\"flex-column\">\n        <ul className=\"tabbar\">\n          <li className={this.state.tabSelected === \"p2p\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"p2p\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_find_user\" defaultMessage=\"find\"\n                description=\"Tab title Find\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"grp\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"grp\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_new_group\" defaultMessage=\"new group\"\n                description=\"Tab title New Group\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"byid\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"byid\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_group_by_id\" defaultMessage=\"by id\"\n                description=\"Tab title Find topic by ID\" />\n            </a>\n          </li>\n        </ul>\n        {this.state.tabSelected === 'grp' ?\n          <NewTopicGroup\n            tinode={this.props.tinode}\n            onSubmit={this.handleNewGroupSubmit} /> :\n          this.state.tabSelected === 'byid' ?\n            <NewTopicById\n              onSubmit={this.handleGroupByID}\n              onError={this.props.onError} /> :\n            <div className=\"flex-column\">\n              <SearchContacts\n                type=\"p2p\"\n                onSearchContacts={this.handleSearchContacts} />\n              <ContactList\n                tinode={this.props.tinode}\n                contacts={this.props.searchResults}\n                myUserId={this.props.myUserId}\n                emptyListMessage={no_contacts_placeholder}\n                showOnline={false}\n                showUnread={false}\n                showContextMenu={false}\n                onTopicSelected={this.handleContactSelected} />\n            </div>}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicView);\n","// A password reset form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\n\nexport default class PasswordResetView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: '',\n      sent: false\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n  }\n\n  componentDidMount() {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    this.setState({token: parsed.params.token, scheme: parsed.params.scheme});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.token) {\n      this.props.onReset(this.state.scheme, this.state.password.trim(), this.state.token);\n    } else if (this.state.sent) {\n      this.props.onCancel();\n    } else {\n      const email = this.state.email.trim();\n      this.setState({email: email});\n      this.props.onRequest('email', email).then(() => {\n        this.setState({sent: true});\n      });\n    }\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  render() {\n    return (\n      <form id=\"password-reset-form\" onSubmit={this.handleSubmit}>\n        {(this.state.token && this.state.scheme) ?\n          <FormattedMessage id=\"new_password_placeholder\" defaultMessage=\"Enter new password\"\n            description=\"Placeholder for entering new password\">{\n            (placeholder) => <VisiblePassword\n              placeholder={placeholder}\n              autoComplete=\"new-password\"\n              value={this.state.password}\n              required={true} autoFocus={true}\n              onChange={this.handlePasswordChange} />\n          }</FormattedMessage>\n        : this.state.sent ?\n          <>\n            <br/>\n            <center><i className=\"material-icons huge green\">task_alt</i></center>\n            <br/>\n            <center><FormattedMessage id=\"password_reset_email_sent\"\n              defaultMessage=\"An email has been sent to {email}. Follow the directions in the email to reset your password.\"\n              values={{ email: <tt>{this.state.email}</tt> }}\n              description=\"Notification that the email with password reset instructions has been sent\" /></center>\n          </>\n        :\n          <>\n            <label htmlFor=\"inputEmail\">\n              <FormattedMessage id=\"label_reset_password\"\n                defaultMessage=\"Send a password reset email:\"\n                description=\"Label for password reset field\" />\n            </label>\n            <FormattedMessage id=\"credential_email_prompt\" defaultMessage=\"Your registration email\"\n              description=\"Placeholder for entering email\">{\n              (placeholder) => <input type=\"email\" id=\"inputEmail\"\n                placeholder={placeholder}\n                autoComplete=\"email\"\n                value={this.state.email}\n                onChange={this.handleEmailChange}\n                required autoFocus />\n            }</FormattedMessage>\n          </>\n        }\n        <div className=\"dialog-buttons\">\n          <button className=\"primary\" type=\"submit\">{\n            (this.state.token && this.state.scheme) ?\n            <FormattedMessage id=\"button_reset\" defaultMessage=\"Reset\" description=\"Button [Reset]\" />\n            : this.state.sent ?\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\"\n              description=\"Button [OK]\" />\n            :\n            <FormattedMessage id=\"button_send_request\" defaultMessage=\"Send request\"\n              description=\"Button [Send request]\" />\n          }</button>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react';\n\nimport { KNOWN_HOSTS } from '../config.js';\n\n/* Combobox for selecting host name */\n\nexport default class HostSelector extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hostName: props.serverAddress,\n      changed: false\n    };\n\n    this.handleHostNameChange = this.handleHostNameChange.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handleHostNameChange(e) {\n    this.setState({hostName: e.target.value, changed: true});\n  }\n\n  handleEditingFinished() {\n    if (this.state.changed) {\n      this.setState({changed: false});\n      this.props.onServerAddressChange(this.state.hostName.trim());\n    }\n  }\n\n  render() {\n    var hostOptions = [];\n    for (let key in KNOWN_HOSTS) {\n      let item = KNOWN_HOSTS[key];\n      hostOptions.push(\n        <option key={item} value={item} />\n      );\n    }\n    return (\n      <div className=\"panel-form-row\">\n        <input type=\"search\" id=\"host-name\" placeholder={this.props.hostName} list=\"known-hosts\"\n          className=\"quoted\" value={this.state.hostName} onChange={this.handleHostNameChange}\n          onBlur={this.handleEditingFinished} required />\n        <datalist id=\"known-hosts\">\n          {hostOptions}\n        </datalist>\n      </div>\n    );\n  }\n}\n","// Tinode config panel.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport HostSelector from '../widgets/host-selector.jsx';\n\nexport default class SettingsView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transport: props.transport || 'def',\n      serverAddress: props.serverAddress,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleTransportSelected = this.handleTransportSelected.bind(this);\n    this.handleServerAddressChange = this.handleServerAddressChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onUpdate({\n      transport: this.state.transport,\n      serverAddress: this.state.serverAddress\n    });\n  }\n\n  handleTransportSelected(e) {\n    this.setState({transport: e.currentTarget.value});\n  }\n\n  handleServerAddressChange(name) {\n    this.setState({serverAddress: name});\n  }\n\n  render() {\n    const names = {def: \"default\", ws: \"websocket\", lp: \"long polling\"};\n    const transportOptions = [];\n    ['def', 'ws', 'lp'].map((item) => {\n      const id = 'transport-' + item;\n      const name = names[item];\n      transportOptions.push(\n        <li key={item}>\n          <input type=\"radio\" id={id} name=\"transport-select\" value={item}\n            checked={this.state.transport === item}\n            onChange={this.handleTransportSelected} />\n          <label htmlFor={id}>{name}</label>\n        </li>\n      );\n    });\n\n    return (\n      <form id=\"settings-form\" className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_server_to_use\" defaultMessage=\"Server to use:\"\n              description=\"Label for server selector in SettingsView\" />\n          </label>\n        </div>\n        <HostSelector serverAddress={this.state.serverAddress}\n          onServerAddressChange={this.handleServerAddressChange} />\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_wire_transport\" defaultMessage=\"Wire transport:\"\n              description=\"Label for wire transport selection in SettingsView\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ul className=\"quoted\">\n            {transportOptions}\n          </ul>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button type=\"submit\" className=\"primary\">\n            <FormattedMessage id=\"button_update\" defaultMessage=\"Update\"\n              description=\"Button [Update]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// ValidationView: panel for confirming credentials, like email or phone.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  phone: {\n    id: 'phone_dative',\n    defaultMessage: 'phone',\n    description: \"Dative case of 'phone', i.e. 'phone' in 'by phone'\",\n  },\n  email: {\n    id: 'email_dative',\n    defaultMessage: 'email',\n    description: \"Dative case of 'email', i.e. 'email' in 'by email'\",\n  }\n});\n\nclass ValidationView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      code: props.credCode || ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({code: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    } else if (e.key == 'Escape') {\n      this.handleCancel(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.code && this.state.code.trim()) {\n      this.props.onSubmit(this.props.credMethod, this.state.code.trim());\n    }\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel();\n  }\n\n\n  render() {\n    const { formatMessage } = this.props.intl;\n    const methods = {'email': formatMessage(messages.email), 'tel': formatMessage(messages.phone)};\n    let method = methods[this.props.credMethod] || this.props.credMethod;\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\" htmlFor=\"enter-confirmation-code\">\n            <FormattedMessage id=\"enter_confirmation_code_prompt\"\n              defaultMessage=\"Enter confirmation code sent to you by {method}:\"\n              description=\"Request to enter confirmation code\"\n              values={{method: method}} />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"numeric_confirmation_code_prompt\"\n          defaultMessage=\"Numbers only\" description=\"Prompt for numeric conformation code\">{\n          (numbers_only) => <input type=\"text\" id=\"enter-confirmation-code\"\n            placeholder={numbers_only}\n            value={this.state.code} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"secondary\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_confirm\" defaultMessage=\"Confirm\" description=\"Button [Confirm]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ValidationView);\n","import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport SideNavbar from '../widgets/side-navbar.jsx';\nimport TopicCommon from '../widgets/topic-common.jsx';\n\nimport AccountSettingsView from './account-settings-view.jsx';\nimport ContactsView from './contacts-view.jsx';\nimport CreateAccountView from './create-account-view.jsx';\nimport AccNotificationsView from './acc-notifications-view.jsx';\nimport AccSecurityView from './acc-security-view.jsx';\nimport AccSupportView from './acc-support-view.jsx';\nimport LoginView from './login-view.jsx';\nimport NewTopicView from './new-topic-view.jsx';\nimport PasswordResetView from './password-reset-view.jsx';\nimport SettingsView from './settings-view.jsx';\nimport ValidationView from './validation-view.jsx';\n\n// Panel titles for translation.\nconst messages = defineMessages({\n  login: {\n    id: 'sidepanel_title_login',\n    description: 'Sidepanel title for LoginView.',\n    defaultMessage: 'Sign In'\n  },\n  register: {\n    id: 'sidepanel_title_register',\n    description: 'Sidepanel title for CreateAccountView.',\n    defaultMessage: 'Create Account'\n  },\n  settings: {\n    id: 'sidepanel_title_settings',\n    description: 'Sidepanel title for SettingsView.',\n    defaultMessage: 'Settings'\n  },\n  edit: {\n    id: 'sidepanel_title_account_settings',\n    description: 'Sidepanel title for AccountSettingsView.',\n    defaultMessage: 'Account Settings'\n  },\n  general: {\n    id: 'panel_title_general',\n    description: 'Title for TopicCommon.',\n    defaultMessage: 'General'\n  },\n  security: {\n    id: 'panel_title_security',\n    description: 'Title for TopicSecirity and AccSecurity.',\n    defaultMessage: 'Security'\n  },\n  crop: {\n    id: 'panel_title_crop',\n    description: 'Title for AvatarCropView.',\n    defaultMessage: 'Drag to Adjust'\n  },\n  notif: {\n    id: 'sidepanel_title_acc_notifications',\n    description: 'Sidepanel title for AccNotificationsView.',\n    defaultMessage: 'Notifications'\n  },\n  support: {\n    id: 'sidepanel_title_acc_support',\n    description: 'Sidepanel title for AccSupportView.',\n    defaultMessage: 'Support'\n  },\n  newtpk: {\n    id: 'sidepanel_title_newtpk',\n    description: 'Sidepanel title for NewTopicView.',\n    defaultMessage: 'Start New Chat'\n  },\n  cred: {\n    id: 'sidepanel_title_cred',\n    description: 'Sidepanel title for ValidationView.',\n    defaultMessage: 'Confirm Credentials'\n  },\n  reset: {\n    id: 'sidepanel_title_reset',\n    description: 'Sidepanel title for PasswordResetView.',\n    defaultMessage: 'Reset Password'\n  },\n  archive: {\n    id: 'sidepanel_title_archive',\n    description: 'Sidepanel title for ContactsView-Archive.',\n    defaultMessage: 'Archived Chats'\n  },\n  blocked: {\n    id: 'sidepanel_title_blocked',\n    description: 'Sidepanel title for ContactsView-Blocked.',\n    defaultMessage: 'Blocked Chats'\n  }\n});\n\nclass SidepanelView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNewTopic = this.handleNewTopic.bind(this);\n  }\n\n  handleNewTopic() {\n    this.props.onNavigate('newtpk');\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const view = this.props.state || (this.props.myUserId ? 'contacts' : 'login');\n\n    let title, avatar, badges;\n    if (view == 'contacts') {\n      title = this.props.title;\n      avatar = this.props.avatar ? this.props.avatar : true;\n      badges = this.props.trustedBadges;\n    } else {\n      title = formatMessage(messages[view]);\n      avatar = false;\n      badges = null;\n    }\n\n    let onCancel;\n    if (['login', 'contacts'].indexOf(view) == -1) {\n      onCancel = this.props.onCancel;\n    }\n\n    return (\n      <div id=\"sidepanel\" className={this.props.hideSelf ? 'nodisplay' : null}>\n        <SideNavbar\n          state={view}\n          title={title}\n          avatar={avatar}\n          tinode={this.props.tinode}\n          trustedBadges={badges}\n          myUserId={this.props.myUserId}\n          onSignUp={this.props.onSignUp}\n          onSettings={this.props.onSettings}\n          onNewTopic={this.handleNewTopic}\n          onCancel={onCancel} />\n\n        <ErrorPanel\n          level={this.props.errorLevel}\n          text={this.props.errorText}\n          action={this.props.errorAction}\n          actionText={this.props.errorActionText}\n          onClearError={this.props.onError} />\n\n        <LoadSpinner show={this.props.loadSpinnerVisible} />\n\n        {view === 'login' ?\n          <LoginView\n            login={this.props.login}\n            disabled={this.props.loginDisabled}\n            persist={this.props.persist}\n            onLogin={this.props.onLoginRequest}\n            onPersistenceChange={this.props.onPersistenceChange} /> :\n\n          view === 'register' ?\n          <CreateAccountView\n            tinode={this.props.tinode}\n            onCreateAccount={this.props.onCreateAccount}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'settings' ?\n          <SettingsView\n            transport={this.props.transport}\n            serverAddress={this.props.serverAddress}\n            onCancel={this.props.onCancel}\n            onUpdate={this.props.onGlobalSettings} /> :\n\n          view === 'edit' ?\n          <AccountSettingsView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            trustedBadges={this.props.trustedBadges}\n            onNavigate={this.props.onNavigate} /> :\n\n          (view === 'general' || view === 'crop') ?\n          <TopicCommon\n            topic=\"me\"\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            onUpdateTopicDesc={this.props.onUpdateAccountDesc}\n            onUpdateTags={this.props.onUpdateAccountTags}\n            onCredAdd={this.props.onCredAdd}\n            onCredDelete={this.props.onCredDelete}\n            onCredConfirm={this.props.onCredConfirm}\n            onError={this.props.onError} /> :\n\n          view === 'notif' ?\n          <AccNotificationsView\n            messageSounds={this.props.messageSounds}\n            desktopAlerts={this.props.desktopAlerts}\n            desktopAlertsEnabled={this.props.desktopAlertsEnabled}\n            incognitoMode={this.props.incognitoMode}\n            onTogglePushNotifications={this.props.onTogglePushNotifications}\n            onToggleMessageSounds={this.props.onToggleMessageSounds}\n            onToggleIncognitoMode={this.props.onToggleIncognitoMode} /> :\n\n          view === 'security' ?\n          <AccSecurityView\n            tinode={this.props.tinode}\n            onUpdateAccountDesc={this.props.onUpdateAccountDesc}\n            onUpdatePassword={this.props.onUpdatePassword}\n            onLogout={this.props.onLogout}\n            onDeleteAccount={this.props.onDeleteAccount}\n            onShowAlert={this.props.onShowAlert}\n            onShowBlocked={this.props.onShowBlocked} /> :\n\n          view === 'support' ?\n          <AccSupportView\n            serverAddress={this.props.serverAddress}\n            serverVersion={this.props.serverVersion} /> :\n\n          (view === 'contacts' || view == 'archive' || view == 'blocked') ?\n          <ContactsView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            connected={this.props.connected}\n            topicSelected={this.props.topicSelected}\n            archive={view == 'archive'}\n            blocked={view == 'blocked'}\n            chatList={this.props.chatList}\n            showContextMenu={this.props.showContextMenu}\n            onTopicSelected={this.props.onTopicSelected}\n            onShowArchive={this.props.onShowArchive} /> :\n\n          view === 'newtpk' ?\n          <NewTopicView\n            tinode={this.props.tinode}\n            searchResults={this.props.searchResults}\n            onInitFind={this.props.onInitFind}\n            onSearchContacts={this.props.onSearchContacts}\n            onCreateTopic={this.props.onCreateTopic}\n            onError={this.props.onError} /> :\n\n          view === 'cred' ?\n          <ValidationView\n            credCode={this.props.credCode}\n            credMethod={this.props.credMethod}\n            onSubmit={this.props.onValidateCredentials}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'reset' ?\n          <PasswordResetView\n            onRequest={this.props.onPasswordResetRequest}\n            onReset={this.props.onResetPassword}\n            onCancel={this.props.onCancel} /> :\n          null}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SidepanelView);\n","import { KNOWN_HOSTS, DEFAULT_HOST } from '../config.js';\n\n// Detect server address from the URL\nexport function detectServerAddress() {\n  let host = DEFAULT_HOST;\n  if (typeof window.location == 'object') {\n    if (window.location.protocol == 'file:' || window.location.hostname == 'localhost') {\n      host = KNOWN_HOSTS.local;\n    } else if (window.location.hostname) {\n      host = window.location.hostname + (window.location.port ? ':' + window.location.port : '');\n    }\n  }\n  return host;\n}\n\n// Detect if the page is served over HTTPS.\nexport function isSecureConnection() {\n  if (typeof window.location == 'object') {\n    return window.location.protocol == 'https:';\n  }\n  return false;\n}\n\nexport function isLocalHost() {\n  if (typeof window.location == 'object') {\n    return window.location.hostname == 'localhost';\n  }\n  return false;\n}\n","// The top-level class to hold all functionality together.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport * as firebase from 'firebase/app';\nimport 'firebase/messaging';\n\nimport Tinode from 'tinode-sdk';\n\nimport Alert from '../widgets/alert.jsx';\nimport ContextMenu from '../widgets/context-menu.jsx';\n\nimport InfoView from './info-view.jsx';\nimport MessagesView from './messages-view.jsx';\nimport SidepanelView from './sidepanel-view.jsx';\n\nimport { API_KEY, APP_NAME, DEFAULT_P2P_ACCESS_MODE, LOGGING_ENABLED,\n  MEDIA_BREAKPOINT, RECEIVED_DELAY } from '../config.js';\nimport { PACKAGE_VERSION } from '../version.js';\nimport { base64ReEncode, makeImageUrl } from '../lib/blob-helpers.js';\nimport { detectServerAddress, isLocalHost, isSecureConnection } from '../lib/host-name.js';\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { secondsToTime } from '../lib/strformat.js'\nimport { updateFavicon } from '../lib/utils.js';\n\n// Sound to play on message received.\nconst POP_SOUND = new Audio('audio/msg.mp3');\n\nconst messages = defineMessages({\n  reconnect_countdown: {\n    id: 'reconnect_countdown',\n    defaultMessage: 'Disconnected. Reconnecting in {seconds}…',\n    description: 'Message shown when an app update is available.'\n  },\n  reconnect_now: {\n    id: 'reconnect_now',\n    defaultMessage: 'Try now',\n    description: 'Prompt for reconnecting now'\n  },\n  push_init_failed: {\n    id: 'push_init_failed',\n    defaultMessage: 'Failed to initialize push notifications',\n    description: 'Error message when push notifications have failed to initialize.'\n  },\n  invalid_security_token: {\n    id: 'invalid_security_token',\n    defaultMessage: 'Invalid security token',\n    description: 'Error message when resetting password.'\n  },\n  no_connection: {\n    id: 'no_connection',\n    defaultMessage: 'No connection',\n    description: 'Warning that the user is offline.'\n  },\n  code_doesnot_match: {\n    id: 'code_doesnot_match',\n    defaultMessage: 'Code does not match',\n    description: 'Error message when the credential validation code is incorrect.'\n  },\n  menu_item_info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  }\n});\n\nclass TinodeWeb extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selfRef = React.createRef();\n\n    this.state = this.getBlankState();\n\n    this.handleResize = this.handleResize.bind(this);\n    this.handleHashRoute = this.handleHashRoute.bind(this);\n    this.handleOnline = this.handleOnline.bind(this);\n    this.checkForAppUpdate = this.checkForAppUpdate.bind(this);\n    this.handleVisibilityEvent = this.handleVisibilityEvent.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.handleLoginRequest = this.handleLoginRequest.bind(this);\n    this.handlePersistenceChange = this.handlePersistenceChange.bind(this);\n    this.handleConnected = this.handleConnected.bind(this);\n    this.handleAutoreconnectIteration = this.handleAutoreconnectIteration.bind(this);\n    this.doLogin = this.doLogin.bind(this);\n    this.handleCredentialsRequest = this.handleCredentialsRequest.bind(this);\n    this.handleLoginSuccessful = this.handleLoginSuccessful.bind(this);\n    this.handleDisconnect = this.handleDisconnect.bind(this);\n    this.tnMeMetaDesc = this.tnMeMetaDesc.bind(this);\n    this.tnMeContactUpdate = this.tnMeContactUpdate.bind(this);\n    this.tnMeSubsUpdated = this.tnMeSubsUpdated.bind(this);\n    this.resetContactList = this.resetContactList.bind(this);\n    this.tnData = this.tnData.bind(this);\n    this.tnInitFind = this.tnInitFind.bind(this);\n    this.tnFndSubsUpdated = this.tnFndSubsUpdated.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleTopicSelected = this.handleTopicSelected.bind(this);\n    this.handleHideMessagesView = this.handleHideMessagesView.bind(this);\n    this.handleSendMessage = this.handleSendMessage.bind(this);\n    this.handleNewChatInvitation = this.handleNewChatInvitation.bind(this);\n    this.handleNewAccount = this.handleNewAccount.bind(this);\n    this.handleNewAccountRequest = this.handleNewAccountRequest.bind(this);\n    this.handleUpdatePasswordRequest = this.handleUpdatePasswordRequest.bind(this);\n    this.handleUpdateAccountTagsRequest = this.handleUpdateAccountTagsRequest.bind(this);\n    this.handleToggleIncognitoMode = this.handleToggleIncognitoMode.bind(this);\n    this.handleSettings = this.handleSettings.bind(this);\n    this.handleGlobalSettings = this.handleGlobalSettings.bind(this);\n    this.handleShowArchive = this.handleShowArchive.bind(this);\n    this.handleShowBlocked = this.handleShowBlocked.bind(this);\n    this.handleToggleMessageSounds = this.handleToggleMessageSounds.bind(this);\n    this.handleCredAdd = this.handleCredAdd.bind(this);\n    this.handleCredDelete = this.handleCredDelete.bind(this);\n    this.handleCredConfirm = this.handleCredConfirm.bind(this);\n    this.initFCMessaging = this.initFCMessaging.bind(this);\n    this.togglePushToken = this.togglePushToken.bind(this);\n    this.requestPushToken = this.requestPushToken.bind(this);\n    this.handlePushMessage = this.handlePushMessage.bind(this);\n    this.handleSidepanelCancel = this.handleSidepanelCancel.bind(this);\n    this.handleStartTopicRequest = this.handleStartTopicRequest.bind(this);\n    this.handleNewTopicCreated = this.handleNewTopicCreated.bind(this);\n    this.handleTopicUpdateRequest = this.handleTopicUpdateRequest.bind(this);\n    this.handleUnarchive = this.handleUnarchive.bind(this);\n    this.handleChangePermissions = this.handleChangePermissions.bind(this);\n    this.handleTagsUpdateRequest = this.handleTagsUpdateRequest.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n    this.handleDeleteTopicRequest = this.handleDeleteTopicRequest.bind(this);\n    this.handleDeleteMessagesRequest = this.handleDeleteMessagesRequest.bind(this);\n    this.handleLeaveUnsubRequest = this.handleLeaveUnsubRequest.bind(this);\n    this.handleBlockTopicRequest = this.handleBlockTopicRequest.bind(this);\n    this.handleReportTopic = this.handleReportTopic.bind(this);\n    this.handleShowContextMenu = this.handleShowContextMenu.bind(this);\n    this.defaultTopicContextMenu = this.defaultTopicContextMenu.bind(this);\n    this.handleHideContextMenu = this.handleHideContextMenu.bind(this);\n    this.handleShowAlert = this.handleShowAlert.bind(this);\n    this.handleShowInfoView = this.handleShowInfoView.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleValidateCredentialsRequest = this.handleValidateCredentialsRequest.bind(this);\n    this.handlePasswordResetRequest = this.handlePasswordResetRequest.bind(this);\n    this.handleResetPassword = this.handleResetPassword.bind(this);\n    this.handleContextMenuAction = this.handleContextMenuAction.bind(this);\n  }\n\n  getBlankState() {\n    const settings = LocalStorageUtil.getObject('settings') || {};\n    const persist = !!LocalStorageUtil.getObject('keep-logged-in');\n\n    return {\n      connected: false,\n      // Connected and subscribed to 'me'\n      ready: false,\n      // Try to re-login on new connection.\n      autoLogin: false,\n      transport: settings.transport || null,\n      serverAddress: settings.serverAddress || detectServerAddress(),\n      serverVersion: \"no connection\",\n      // \"On\" is the default, so saving the \"off\" state.\n      messageSounds: !settings.messageSoundsOff,\n      incognitoMode: false,\n      desktopAlerts: persist && !!settings.desktopAlerts,\n      desktopAlertsEnabled: (isSecureConnection() || isLocalHost()) &&\n        (typeof firebase != 'undefined') && (typeof navigator != 'undefined') &&\n        (typeof FIREBASE_INIT != 'undefined'),\n      firebaseToken: persist ? LocalStorageUtil.getObject('firebase-token') : null,\n\n      applicationVisible: !document.hidden,\n\n      errorText: '',\n      errorLevel: null,\n      errorAction: undefined,\n      errorActionText: null,\n\n      sidePanelSelected: 'login',\n      sidePanelTitle: null,\n      sidePanelAvatar: null,\n      myTrustedBadges: [],\n      loadSpinnerVisible: false,\n\n      login: '',\n      password: '',\n      persist: persist,\n      myUserId: null,\n      liveConnection: navigator.onLine,\n      topicSelected: '',\n      topicSelectedOnline: false,\n      topicSelectedAcs: null,\n      newTopicParams: null,\n      loginDisabled: false,\n      displayMobile: (window.innerWidth <= MEDIA_BREAKPOINT),\n      infoPanel: undefined,\n      mobilePanel: 'sidepanel',\n\n      contextMenuVisible: false,\n      contextMenuBounds: null,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuItems: [],\n\n      // Modal alert dialog.\n      alertVisible: false,\n      alertParams: {},\n\n      // Chats as shown in the ContactsView\n      chatList: [],\n      // Contacts returned by a search query.\n      searchResults: [],\n      // Merged results of a search query and p2p chats.\n      searchableContacts: [],\n      credMethod: undefined,\n      credCode: undefined,\n      // Topic to go to after login.\n      requestedTopic: undefined\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    window.addEventListener('online', (e) => { this.handleOnline(true); });\n    window.addEventListener('offline', (e) => { this.handleOnline(false); });\n    window.addEventListener('hashchange', this.handleHashRoute);\n\n    // Process background notifications from the service worker.\n    if (typeof BroadcastChannel == 'function') {\n      const serviceWorkerChannel = new BroadcastChannel('tinode-sw');\n      serviceWorkerChannel.addEventListener('message', this.handlePushMessage);\n    } else {\n      // Safari is broken by design.\n      console.warn(\"Your browser does not support BroadcastChannel. Some features will not be available\");\n    }\n\n    // Window/tab visible or invisible for pausing timers.\n    document.addEventListener('visibilitychange', this.handleVisibilityEvent);\n\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n\n    new Promise((resolve, reject) => {\n      this.tinode = TinodeWeb.tnSetup(this.state.serverAddress, this.state.transport,\n        this.props.intl.locale, this.state.persist, resolve);\n      this.tinode.onConnect = this.handleConnected;\n      this.tinode.onDisconnect = this.handleDisconnect;\n      this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n    }).then(() => {\n      // Initialize desktop alerts.\n      if (this.state.desktopAlertsEnabled) {\n        this.initFCMessaging().then(() => {\n          if (this.state.desktopAlerts) {\n            if (!this.state.firebaseToken) {\n              this.togglePushToken(true);\n            } else {\n              this.tinode.setDeviceToken(this.state.firebaseToken);\n            }\n          }\n        }).catch(() => {\n          // do nothing: handled earlier.\n          // catch needed to pervent unnecessary logging of error.\n        });\n      }\n\n      // Parse and save the hash navigation params.\n      const parsedNav = HashNavigation.parseUrlHash(window.location.hash);\n\n      // Read contacts from cache.\n      this.resetContactList();\n\n      const token = this.state.persist ? LocalStorageUtil.getObject('auth-token') : undefined;\n      if (token) {\n        this.setState({autoLogin: true});\n\n        // When reading from storage, date is returned as string.\n        token.expires = new Date(token.expires);\n        this.tinode.setAuthToken(token);\n        this.tinode.connect().catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n      }\n\n      // Save possible topic name and navigate to blank state.\n      this.setState({requestedTopic: parsedNav.path[1]});\n      HashNavigation.navigateTo('');\n\n      this.readTimer = null;\n      this.readTimerCallback = null;\n\n      this.handleHashRoute();\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n    window.removeEventListener('hashchange', this.handleHashRoute);\n    document.removeEventListener('visibilitychange', this.handleVisibilityEvent);\n  }\n\n  // Setup transport (usually websocket) and server address. This will terminate connection with the server.\n  static tnSetup(serverAddress, transport, locale, persistentCache, onSetupCompleted) {\n    const tinode = new Tinode({appName: APP_NAME, host: serverAddress, apiKey: API_KEY, transport: transport,\n      secure: isSecureConnection(), persist: persistentCache}, onSetupCompleted);\n    tinode.setHumanLanguage(locale);\n    tinode.enableLogging(LOGGING_ENABLED, true);\n    return tinode;\n  }\n\n  // Notifiy Tinode that a push message was received from the server.\n  handlePushMessage(data) {\n    if (data.what == 'msg' && Tinode.isChannelTopicName(data.topic)) {\n      // The last argument is a fake user Id: otherwise the update is seen as one from the current user.\n      this.tinode.oobNotification(data.topic, data.seq, 'fake-uid');\n    }\n  }\n\n  initFCMessaging() {\n    const {formatMessage, locale} = this.props.intl;\n    const onError = (msg, err) => {\n      console.error(msg, err);\n      this.handleError(formatMessage(messages.push_init_failed), 'err');\n      this.setState({desktopAlertsEnabled: false});\n    }\n\n    try {\n      this.fbPush = firebase.initializeApp(FIREBASE_INIT, APP_NAME).messaging();\n      this.fbPush.usePublicVapidKey(FIREBASE_INIT.messagingVapidKey);\n\n      return navigator.serviceWorker.register('/service-worker.js').then((reg) => {\n        this.checkForAppUpdate(reg);\n        this.fbPush.useServiceWorker(reg);\n        reg.active.postMessage(JSON.stringify({locale: locale, version: PACKAGE_VERSION}));\n\n        // Google could not be bothered to mention that onTokenRefresh is never called.\n        this.fbPush.onTokenRefresh(() => {\n          this.requestPushToken();\n        });\n\n        // Handhe FCM pushes\n        // (a) for channels always,\n        // (b) pushes when the app is in foreground but has not focus.\n        this.fbPush.onMessage(payload => { this.handlePushMessage(payload.data); });\n\n        return reg;\n      }).catch((err) => {\n        // registration failed :(\n        onError(\"Failed to register service worker:\", err);\n        return Promise.reject(err);\n      });\n    } catch (err) {\n      onError(\"Failed to initialize push notifications\", err);\n      return Promise.reject(err);\n    }\n  }\n\n  handleResize() {\n    const mobile = document.documentElement.clientWidth <= MEDIA_BREAKPOINT;\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n    if (this.state.displayMobile != mobile) {\n      this.setState({displayMobile: mobile});\n    }\n  }\n\n  // Check if a newer version of TinodeWeb app is available at the server.\n  checkForAppUpdate(reg) {\n    reg.onupdatefound = () => {\n      const installingWorker = reg.installing;\n      installingWorker.onstatechange = () => {\n        if (installingWorker.state == 'installed' && navigator.serviceWorker.controller) {\n          const msg = <>\n            <FormattedMessage id=\"update_available\"\n              defaultMessage=\"Update available.\"\n              description=\"Message shown when an app update is available.\" /> <a href=\"\">\n              <FormattedMessage id=\"reload_update\"\n                defaultMessage=\"Reload\"\n                description=\"Call to action to reload application when update is available.\" />\n            </a>.</>;\n          this.handleError(msg, 'info');\n        }\n      }\n    }\n  }\n\n  // Handle for hashchange event: display appropriate panels.\n  handleHashRoute() {\n    const hash = HashNavigation.parseUrlHash(window.location.hash);\n    if (hash.path && hash.path.length > 0) {\n      // Left-side panel selector.\n      if (['register','settings','edit','notif','security','support','general','crop',\n          'cred','reset','newtpk','archive','blocked','contacts',''].includes(hash.path[0])) {\n        this.setState({sidePanelSelected: hash.path[0]});\n      } else {\n        console.warn(\"Unknown sidepanel view\", hash.path[0]);\n      }\n\n      // Topic for MessagesView selector.\n      let topicName = hash.path[1] || null;\n      if (topicName != this.state.topicSelected) {\n        if (!Tinode.topicType(topicName)) {\n          // Clear invalid topic name.\n          topicName = null;\n        }\n        const newState = {\n          topicSelected: topicName\n        };\n        const acs = this.tinode.getTopicAccessMode(topicName);\n        if (acs) {\n          newState.topicSelectedAcs = acs;\n        }\n        this.setState(newState);\n      }\n    } else {\n      // Empty hashpath\n      this.setState({sidePanelSelected: '', topicSelected: null});\n    }\n\n    // Save validation credentials, if available.\n    if (hash.params.method) {\n      this.setState({ credMethod: hash.params.method });\n    }\n    if (hash.params.code) {\n      this.setState({ credCode: hash.params.code });\n    }\n\n    // Additional parameters of panels.\n    this.setState({\n      infoPanel: hash.params.info,\n      newTopicTabSelected: hash.params.tab\n    });\n  }\n\n  handleOnline(online) {\n    if (online) {\n      this.handleError();\n      clearInterval(this.reconnectCountdown);\n      this.tinode.reconnect();\n    } else {\n      this.handleError(this.props.intl.formatMessage(messages.no_connection), 'warn');\n    }\n    this.setState({liveConnection: online});\n  }\n\n  handleVisibilityEvent() {\n    this.setState({applicationVisible: !document.hidden});\n  }\n\n  handleError(err, level, action, actionText) {\n    this.setState({errorText: err, errorLevel: level, errorAction: action, errorActionText: actionText});\n  }\n\n  // User clicked Login button in the side panel.\n  handleLoginRequest(login, password) {\n    this.setState({\n      loginDisabled: true,\n      login: login,\n      password: password,\n      loadSpinnerVisible: true,\n      autoLogin: true\n    });\n    this.handleError('', null);\n\n    if (this.tinode.isConnected()) {\n      this.doLogin(login, password, {meth: this.state.credMethod, resp: this.state.credCode});\n    } else {\n      this.tinode.connect().catch((err) => {\n        // Socket error\n        this.setState({loginDisabled: false, autoLogin: false, loadSpinnerVisible: false});\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // Enable or disable saving the password and IndexedDB.\n  handlePersistenceChange(persist) {\n    if (persist) {\n      this.tinode.initStorage().then(() => {\n        LocalStorageUtil.setObject('keep-logged-in', true);\n        this.setState({persist: true});\n      });\n    } else {\n      this.tinode.clearStorage().then(() => {\n        LocalStorageUtil.setObject('keep-logged-in', false);\n        this.setState({persist: false});\n      });\n    }\n  }\n\n  // Connection succeeded.\n  handleConnected() {\n    // Just to be sure.\n    clearInterval(this.reconnectCountdown);\n    this.handleError();\n\n    const params = this.tinode.getServerInfo();\n    this.setState({\n      serverVersion: params.ver + ' ' + (params.build ? params.build : 'none')\n    });\n\n    if (this.state.autoLogin) {\n      this.doLogin(this.state.login, this.state.password, {meth: this.state.credMethod, resp: this.state.credCode});\n    }\n  }\n\n  // Called for each auto-reconnect iteration.\n  handleAutoreconnectIteration(sec, prom) {\n    clearInterval(this.reconnectCountdown);\n\n    if (sec < 0) {\n      // Clear error\n      this.handleError();\n      return;\n    }\n\n    if (prom) {\n      // Reconnecting now\n      prom.then(() => {\n        // Reconnected: clear error\n        this.handleError();\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n      return;\n    }\n\n    const {formatMessage} = this.props.intl;\n    let count = sec / 1000;\n    count = count | count;\n    this.reconnectCountdown = setInterval(() => {\n      const timeLeft = (count > 99) ? secondsToTime(count) : count;\n      this.handleError(\n        formatMessage(messages.reconnect_countdown, {seconds: timeLeft}),\n        'warn',\n        () => {\n          clearInterval(this.reconnectCountdown);\n          this.tinode.reconnect();\n        },\n        formatMessage(messages.reconnect_now)\n      );\n      count -= 1;\n    }, 1000);\n  }\n\n  // Connection lost\n  handleDisconnect(err) {\n    this.setState({\n      connected: false,\n      ready: false,\n      topicSelectedOnline: false,\n      errorText: err && err.message ? err.message : \"Disconnected\",\n      errorLevel: err && err.message ? 'err' : 'warn',\n      loginDisabled: false,\n      contextMenuVisible: false,\n      serverVersion: \"no connection\"\n    });\n  }\n\n  doLogin(login, password, cred) {\n    if (this.tinode.isAuthenticated()) {\n      // Already logged in. Go to default screen.\n      HashNavigation.navigateTo('');\n      return;\n    }\n    // Sanitize and package credentail.\n    cred = Tinode.credential(cred);\n    // Try to login with login/password. If they are not available, try token. If no token, ask for login/password.\n    let promise = null;\n    let token = this.tinode.getAuthToken();\n    if (login && password) {\n      token = null;\n      this.setState({password: null});\n      promise = this.tinode.loginBasic(login, password, cred);\n    } else if (token) {\n      promise = this.tinode.loginToken(token.token, cred);\n    }\n\n    if (promise) {\n      promise.then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text === 'validate credentials') {\n          this.setState({loadSpinnerVisible: false});\n          if (cred) {\n            this.handleError(this.props.intl.formatMessage(messages.code_doesnot_match), 'warn');\n          }\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful();\n        }\n      }).catch((err) => {\n        // Login failed, report error.\n        this.setState({\n          loginDisabled: false,\n          credMethod: undefined,\n          credCode: undefined,\n          loadSpinnerVisible: false,\n          autoLogin: false\n        });\n        this.handleError(err.message, 'err');\n        if (token) {\n          this.handleLogout();\n        }\n        HashNavigation.navigateTo('');\n      });\n    } else {\n      // No login credentials provided.\n      // Make sure we are on the login page.\n      HashNavigation.navigateTo('');\n      this.setState({loginDisabled: false});\n    }\n  }\n\n  handleCredentialsRequest(params) {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    parsed.path[0] = 'cred';\n    parsed.params['method'] = params.cred[0];\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n  }\n\n  handleLoginSuccessful() {\n    this.handleError();\n\n    // Refresh authentication token.\n    if (LocalStorageUtil.getObject('keep-logged-in')) {\n      LocalStorageUtil.setObject('auth-token', this.tinode.getAuthToken());\n    }\n\n    const goToTopic = this.state.requestedTopic;\n    // Logged in fine, subscribe to 'me' attaching callbacks from the contacts view.\n    const me = this.tinode.getMeTopic();\n    me.onMetaDesc = this.tnMeMetaDesc;\n    me.onContactUpdate = this.tnMeContactUpdate;\n    me.onSubsUpdated = this.tnMeSubsUpdated;\n    this.setState({\n      connected: true,\n      credMethod: undefined,\n      credCode: undefined,\n      myUserId: this.tinode.getCurrentUserID(),\n      autoLogin: true,\n      requestedTopic: undefined,\n    });\n    // Subscribe, fetch topic desc, the list of subscriptions. Messages are not fetched.\n    me.subscribe(\n      me.startMetaQuery().\n        withLaterSub().\n        withDesc().\n        withTags().\n        withCred().\n        build()\n      ).catch((err) => {\n        this.tinode.disconnect();\n        localStorage.removeItem('auth-token');\n        this.handleError(err.message, 'err');\n        HashNavigation.navigateTo('');\n      }).finally(() => {\n        this.setState({loadSpinnerVisible: false});\n      });\n    let urlHash = HashNavigation.setUrlSidePanel(window.location.hash, 'contacts');\n    if (goToTopic) {\n      urlHash = HashNavigation.setUrlTopic(urlHash, goToTopic);\n    }\n    HashNavigation.navigateTo(urlHash);\n  }\n\n  tnMeMetaDesc(desc) {\n    if (desc) {\n      if (desc.public) {\n        this.setState({\n          sidePanelTitle: desc.public.fn,\n          sidePanelAvatar: makeImageUrl(desc.public.photo)\n        });\n      }\n      if (desc.trusted) {\n        const badges = [];\n        for (const [key, val] of Object.entries(desc.trusted)) {\n          if (val) {\n            badges.push(key);\n          }\n        }\n        this.setState({\n          myTrustedBadges: badges,\n        });\n      }\n      if (desc.acs) {\n        this.setState({\n          incognitoMode: !desc.acs.isPresencer()\n        });\n      }\n    }\n  }\n\n  // Reactions to updates to the contact list.\n  tnMeContactUpdate(what, cont) {\n    if (what == 'on' || what == 'off') {\n      this.resetContactList();\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedOnline: (what == 'on')});\n      }\n    } else if (what == 'read') {\n      this.resetContactList();\n    } else if (what == 'msg') {\n      // Check if the topic is archived. If so, don't play a sound.\n      const topic = this.tinode.getTopic(cont.topic);\n      const archived = topic && topic.isArchived();\n\n      // New message received. Maybe the message is from the current user, then unread is 0.\n      if (cont.unread > 0 && this.state.messageSounds && !archived) {\n        // Skip update if the topic is currently open, otherwise the badge will annoyingly flash.\n        if (document.hidden || this.state.topicSelected != cont.topic) {\n          POP_SOUND.play();\n        }\n      }\n      // Reorder contact list to use possibly updated 'touched'.\n      this.resetContactList();\n    } else if (what == 'recv') {\n      // Explicitly ignoring \"recv\" -- it causes no visible updates to contact list.\n    } else if (what == 'gone' || what == 'unsub') {\n      // Topic deleted or user unsubscribed. Remove topic from view.\n      // If the currently selected topic is gone, clear the selection.\n      if (this.state.topicSelected == cont.topic) {\n        this.handleTopicSelected(null);\n      }\n      // Redraw without the deleted topic.\n      this.resetContactList();\n    } else if (what == 'acs') {\n      // Permissions changed. If it's for the currently selected topic,\n      // update the views.\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedAcs: cont.acs});\n      }\n    } else if (what == 'del') {\n      // TODO: messages deleted (hard or soft) -- update pill counter.\n    } else if (what == 'upd') {\n      // upd - handled by the SDK. Explicitly ignoring here.\n    } else {\n      // TODO(gene): handle other types of notifications:\n      // * ua -- user agent changes (maybe display a pictogram for mobile/desktop).\n      console.info(\"Unsupported (yet) presence update:\" + what + \" in: \" + cont.topic);\n    }\n  }\n\n  tnMeSubsUpdated(unused) {\n    this.resetContactList();\n  }\n\n  // Merge search results and contact list to create a single flat\n  // list of known contacts for GroupManager to use.\n  static prepareSearchableContacts(chatList, foundContacts) {\n    const merged = {};\n\n    // For chatList topics merge only p2p topics and convert them to the\n    // same format as foundContacts.\n    for (const c of chatList) {\n      if (Tinode.isP2PTopicName(c.topic)) {\n          merged[c.topic] = {\n            user: c.topic,\n            updated: c.updated,\n            public: c.public,\n            private: c.private,\n            acs: c.acs\n          };\n      }\n    }\n\n    // Add all foundCountacts if they have not been added already.\n    for (const c of foundContacts) {\n      if (!merged[c.user]) {\n        merged[c.user] = c;\n      }\n    }\n\n    return Object.values(merged);\n  }\n\n  resetContactList() {\n    const newState = {\n      chatList: []\n    };\n\n    if (!this.state.ready) {\n      newState.ready = true;\n    }\n\n    this.tinode.getMeTopic().contacts((c) => {\n      if (!c.topic && !c.user) {\n        // Contacts expect c.topic to be set.\n        c.topic = c.name;\n      }\n\n      newState.chatList.push(c);\n      if (this.state.topicSelected == c.topic) {\n        newState.topicSelectedOnline = c.online;\n        newState.topicSelectedAcs = c.acs;\n      }\n    });\n\n    const past = new Date(0);\n    newState.chatList.sort((a, b) => {\n      return (a.touched || past).getTime() - (b.touched || past).getTime();\n    });\n\n    // Merge search results and chat list.\n    newState.searchableContacts = TinodeWeb.prepareSearchableContacts(newState.chatList, this.state.searchResults);\n    this.setState(newState);\n  }\n\n  // Sending \"received\" notifications\n  tnData(data) {\n    const topic = this.tinode.getTopic(data.topic);\n    if (topic.msgStatus(data, true) >= Tinode.MESSAGE_STATUS_SENT && data.from != this.state.myUserId) {\n      clearTimeout(this.receivedTimer);\n      this.receivedTimer = setTimeout(() => {\n        this.receivedTimer = undefined;\n        topic.noteRecv(data.seq);\n      }, RECEIVED_DELAY);\n    }\n  }\n\n  /* Fnd topic: find contacts by tokens */\n  tnInitFind() {\n    const fnd = this.tinode.getFndTopic();\n    fnd.onSubsUpdated = this.tnFndSubsUpdated;\n    if (fnd.isSubscribed()) {\n      this.tnFndSubsUpdated();\n    } else {\n      fnd.subscribe(fnd.startMetaQuery().withSub().build()).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  tnFndSubsUpdated() {\n    const foundContacts = [];\n    // Don't attempt to create P2P topics which already exist. Server will reject the duplicates.\n    this.tinode.getFndTopic().contacts((s) => {\n      foundContacts.push(s);\n    });\n    this.setState({\n      searchResults: foundContacts,\n      searchableContacts: TinodeWeb.prepareSearchableContacts(this.state.chatList, foundContacts)\n    });\n  }\n\n  /** Called when the user enters a contact into the contact search field in the NewAccount panel\n    @param query {Array} is an array of contacts to search for\n   */\n  handleSearchContacts(query) {\n    const fnd = this.tinode.getFndTopic();\n    fnd.setMeta({desc: {public: query}}).then((ctrl) => {\n      return fnd.getMeta(fnd.startMetaQuery().withSub().build());\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  // User clicked on a contact in the side panel or deleted a contact.\n  handleTopicSelected(topicName) {\n    // Clear newTopicParams after use.\n    if (this.state.newTopicParams && this.state.newTopicParams._topicName != topicName) {\n      this.setState({\n        newTopicParams: null\n      });\n    }\n\n    if (topicName) {\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'topic-view',\n        infoPanel: undefined\n      });\n      // Different contact selected.\n      if (this.state.topicSelected != topicName) {\n        this.setState({\n          topicSelectedOnline: this.tinode.isTopicOnline(topicName),\n          topicSelectedAcs: this.tinode.getTopicAccessMode(topicName)\n        });\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', topicName));\n      }\n    } else {\n      // Currently selected contact deleted\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'sidepanel',\n        topicSelectedOnline: false,\n        topicSelectedAcs: null,\n        infoPanel: undefined\n      });\n\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic('', null));\n    }\n  }\n\n  // In mobile view user requested to show sidepanel\n  handleHideMessagesView() {\n    this.setState({\n      mobilePanel: 'sidepanel'\n    });\n    HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, null));\n  }\n\n  // User is sending a message, either plain text or a drafty object, possibly\n  // with attachments.\n  //  - msg - Drafty message with content\n  //  - promise - Promise to be resolved when the upload is completed\n  //  - uploader - for tracking progress\n  //  - head - head dictionary to be attached to the message\n  handleSendMessage(msg, promise, uploader, head) {\n    const topic = this.tinode.getTopic(this.state.topicSelected);\n\n    msg = topic.createMessage(msg, false);\n    // The uploader is used to show progress.\n    msg._uploader = uploader;\n\n    if (head) {\n      msg.head = Object.assign(msg.head || {}, head);\n    }\n\n    if (!topic.isSubscribed()) {\n      // Topic is not subscribed yet. Subscribe.\n      if (!promise) {\n        promise = Promise.resolve();\n      }\n      promise = promise\n        .then(() => topic.subscribe())\n        .then(() => {\n          // If there are unsent messages, try sending them now.\n          topic.queuedMessages((pub) => {\n            if (!pub._sending && topic.isSubscribed()) {\n              this.sendMessage(pub);\n            }\n          });\n        });\n    }\n\n    if (promise) {\n      promise = promise.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n\n    topic.publishDraft(msg, promise)\n      .then((ctrl) => {\n        if (topic.isArchived()) {\n          return topic.archive(false);\n        }\n      })\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleNewChatInvitation(topicName, action) {\n    const topic = this.tinode.getTopic(topicName);\n    let response = null;\n    switch (action) {\n      case 'accept':\n        // Accept given permissions.\n        const mode = topic.getAccessMode().getGiven();\n        response = topic.setMeta({sub: {mode: mode}});\n        if (topic.isP2PType()) {\n          // For P2P topics change 'given' permission of the peer too.\n          // In p2p topics the other user has the same name as the topic.\n          response = response.then((ctrl) => {\n            topic.setMeta({sub: {user: topicName, mode: mode}});\n          });\n        }\n        break;\n      case 'delete':\n        // Ignore invitation by deleting it.\n        response = topic.delTopic(true);\n        break;\n      case 'block':\n        // Ban the topic making futher invites impossible.\n        // Just self-ban.\n        const am = topic.getAccessMode().updateWant('-JP').getWant();\n        response = topic.setMeta({sub: {mode: am}}).then((ctrl) => {\n          return this.handleTopicSelected(null);\n        });\n        break;\n      default:\n        console.warn(\"Unknown invitation action\", '\"' + action + '\"\"');\n    }\n\n    if (response != null) {\n      response.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // User chose a Sign Up menu item.\n  handleNewAccount() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, 'register'));\n  }\n\n  // Actual registration of a new account.\n  handleNewAccountRequest(login_, password_, public_, cred_, tags_) {\n    // Clear old error, if any.\n    this.handleError();\n\n    this.tinode.connect(this.state.serverAddress)\n      .then(() => {\n        return this.tinode.createAccountBasic(login_, password_,\n          {public: public_, tags: tags_, cred: Tinode.credential(cred_)});\n      }).then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text == 'validate credentials') {\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful(this);\n        }\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleToggleIncognitoMode(on) {\n    // Make state undefined.\n    this.setState({incognitoMode: null});\n\n    const me = this.tinode.getMeTopic();\n    const am = me.getAccessMode().updateWant(on ? '-P' : '+P').getWant();\n    me.setMeta({sub: {mode: am}}).catch((err) => {\n      // Request failed, keep existing state.\n      this.setState({incognitoMode: !on});\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleUpdateAccountTagsRequest(tags) {\n    this.tinode.getMeTopic().setMeta({tags: tags})\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  // User chose Settings menu item.\n  handleSettings() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'edit' : 'settings'));\n  }\n\n  // User updated global parameters.\n  handleGlobalSettings(settings) {\n    const serverAddress = settings.serverAddress || this.state.serverAddress;\n    const transport = settings.transport || this.state.transport;\n    if (this.tinode) {\n      this.tinode.clearStorage();\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.tinode = TinodeWeb.tnSetup(serverAddress, transport, this.props.intl.locale,\n      LocalStorageUtil.getObject('keep-logged-in'));\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n\n    this.setState({\n      serverAddress: serverAddress,\n      transport: transport\n    });\n    LocalStorageUtil.setObject('settings', {\n      serverAddress: serverAddress,\n      transport: transport\n    });\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, ''));\n  }\n\n  // User chose 'Archived chats'.\n  handleShowArchive() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'archive' : ''));\n  }\n\n  // User viewes 'Blocked chats'.\n  handleShowBlocked() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'blocked' : ''));\n  }\n\n  togglePushToken(enabled) {\n    if (enabled) {\n      this.setState({desktopAlerts: null});\n      if (!this.state.firebaseToken) {\n        const fcm = this.fbPush ?\n          Promise.resolve() :\n          this.initFCMessaging();\n        fcm.then(() => {\n          return this.fbPush.requestPermission();\n        }).then(() => {\n          this.requestPushToken();\n        }).catch((err) => {\n          console.error(\"Failed to get notification permission.\", err);\n          this.handleError(err.message, 'err');\n          this.setState({desktopAlerts: false, firebaseToken: null});\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        });\n      } else {\n        this.setState({desktopAlerts: true});\n        if (LocalStorageUtil.getObject('keep-logged-in')) {\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n        }\n      }\n    } else if (this.state.firebaseToken && this.fbPush) {\n      this.fbPush.deleteToken(this.state.firebaseToken).catch((err) => {\n        console.error(\"Unable to delete token.\", err);\n      }).finally(() => {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        localStorage.removeItem('firebase-token');\n        this.setState({desktopAlerts: false, firebaseToken: null});\n        // Inform the server that the token was deleted.\n        this.tinode.setDeviceToken(null);\n      });\n    } else {\n      this.setState({desktopAlerts: false, firebaseToken: null});\n      LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n    }\n  }\n\n  requestPushToken() {\n    this.fbPush.getToken().then((refreshedToken) => {\n      const persist = LocalStorageUtil.getObject('keep-logged-in');\n      if (refreshedToken != this.state.firebaseToken) {\n        this.tinode.setDeviceToken(refreshedToken);\n        if (persist) {\n          LocalStorageUtil.setObject('firebase-token', refreshedToken);\n        }\n      }\n      this.setState({firebaseToken: refreshedToken, desktopAlerts: true});\n      if (persist) {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n      }\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n      console.error(\"Failed to retrieve firebase token\", err);\n    });\n  }\n\n  handleToggleMessageSounds(enabled) {\n    this.setState({messageSounds: enabled});\n    LocalStorageUtil.updateObject('settings', {\n      messageSoundsOff: !enabled\n    });\n  }\n\n  handleCredAdd(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.setMeta({cred: {meth: method, val: value}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredDelete(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.delCredential(method, value).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredConfirm(method, response) {\n    this.handleCredentialsRequest({cred: [method]});\n  }\n\n  // User clicked Cancel button in Setting or Sign Up panel.\n  handleSidepanelCancel() {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    let path = '';\n    if (['security','support','general','notif'].includes(parsed.path[0])) {\n      path = 'edit';\n    } else if ('crop' == parsed.path[0]) {\n      path = 'general';\n    } else if ('blocked' == parsed.path[0]) {\n      path = 'security';\n    } else if (this.state.myUserId) {\n      path = 'contacts';\n    }\n    parsed.path[0] = path;\n    if (parsed.params) {\n      delete parsed.params.code;\n      delete parsed.params.method;\n      delete parsed.params.tab;\n    }\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n    this.setState({errorText: '', errorLevel: null});\n  }\n\n  // Sidepanel navigator. No need to bind to 'this'.\n  basicNavigator(hash) {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, hash));\n  }\n\n  // Topic info navigator. No need to bind to 'this'.\n  infoNavigator(hash) {\n    HashNavigation.navigateTo(HashNavigation.setUrlInfoPanel(window.location.hash, hash));\n  }\n\n  // Request to start a topic, new or selected from search results, or \"by ID\".\n  handleStartTopicRequest(topicName, newTopicParams, isChannel) {\n    // Check if topic is indeed new. If not, launch it.\n    if (topicName && this.tinode.isTopicCached(topicName)) {\n      this.handleTopicSelected(topicName);\n      return;\n    }\n\n    const params = {};\n    if (Tinode.isP2PTopicName(topicName)) {\n      // Because we are initialing the subscription, set 'want' to all permissions.\n      params.sub = {mode: DEFAULT_P2P_ACCESS_MODE};\n      // Give the other user all permissions too.\n      params.desc = {defacs: {auth: DEFAULT_P2P_ACCESS_MODE}};\n    } else {\n      topicName = topicName || this.tinode.newGroupTopicName(isChannel);\n      params.desc = {public: newTopicParams.public, private: {comment: newTopicParams.private}};\n      params.tags = newTopicParams.tags;\n    }\n    params._topicName = topicName;\n    this.setState({newTopicParams: params}, () => {this.handleTopicSelected(topicName)});\n  }\n\n  // New topic was created, here is the new topic name.\n  handleNewTopicCreated(oldName, newName) {\n    if (this.state.topicSelected == oldName && oldName != newName) {\n      // If the current URl contains the old topic name, replace it with new.\n      // Update the name of the selected topic first so the navigator doen't clear\n      // the state.\n      this.setState({topicSelected: newName}, () => {\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', newName));\n      });\n    }\n  }\n\n  handleTopicUpdateRequest(topicName, pub, priv, defacs) {\n    this.handleError();\n\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const params = {};\n      let attachments;\n      if (pub) {\n        if (pub.photo) {\n          if (pub.photo.ref && pub.photo.ref != Tinode.DEL_CHAR) {\n            attachments = [pub.photo.ref];\n          } else if (!pub.photo.data || pub.photo.data == Tinode.DEL_CHAR) {\n            pub.photo = Tinode.DEL_CHAR;\n          }\n        }\n        params.public = pub;\n      }\n\n      if (typeof priv == 'string') {\n        params.private = (priv === Tinode.DEL_CHAR) ?\n          Tinode.DEL_CHAR : {comment: priv};\n      }\n      if (defacs) {\n        params.defacs = defacs;\n      }\n      topic.setMeta({desc: params, attachments: attachments}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleUnarchive(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      topic.archive(false);\n    }\n  }\n\n  handleUpdatePasswordRequest(password)  {\n    this.handleError();\n\n    if (password) {\n      this.tinode.updateAccountBasic(null, this.tinode.getCurrentLogin(), password).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleChangePermissions(topicName, mode, uid) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const am = topic.getAccessMode();\n      if (uid) {\n        am.updateGiven(mode);\n        mode = am.getGiven();\n      } else {\n        am.updateWant(mode);\n        mode = am.getWant();\n      }\n      topic.setMeta({sub: {user: uid, mode: mode}}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleTagsUpdateRequest(topicName, tags) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      topic.setMeta({tags: tags}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleLogout() {\n    updateFavicon(0);\n\n    // Remove stored data.\n    localStorage.removeItem('auth-token');\n    localStorage.removeItem('firebase-token');\n    localStorage.removeItem('settings');\n    if (this.state.firebaseToken) {\n      this.fbPush.deleteToken(this.state.firebaseToken)\n    }\n\n    clearInterval(this.reconnectCountdown);\n\n    if (this.tinode) {\n      this.tinode.clearStorage();\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.setState(this.getBlankState());\n\n    this.tinode = TinodeWeb.tnSetup(this.state.serverAddress,\n      this.state.transport, this.props.intl.locale, LocalStorageUtil.getObject('keep-logged-in'));\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n    HashNavigation.navigateTo('');\n  }\n\n  handleDeleteAccount() {\n    this.tinode.delCurrentUser(true).then((ctrl) => {\n      this.handleLogout();\n    });\n  }\n\n  handleDeleteTopicRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Request to hard-delete topic.\n    topic.delTopic(true).then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleDeleteMessagesRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Request hard-delete all messages.\n    topic.delMessagesAll(true).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleLeaveUnsubRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.leave(true).then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleBlockTopicRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleReportTopic(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Publish spam report.\n    this.tinode.publish(Tinode.TOPIC_SYS, Tinode.Drafty.attachJSON(null, {\n      'action': 'report',\n      'target': topicName\n    }));\n\n    // Remove J and P permissions.\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleShowContextMenu(params, menuItems) {\n    this.setState({\n      contextMenuVisible: true,\n      contextMenuClickAt: {x: params.x, y: params.y},\n      contextMenuParams: params,\n      contextMenuItems: menuItems || this.defaultTopicContextMenu(params.topicName),\n      contextMenuBounds: this.selfRef.current.getBoundingClientRect()\n    });\n  }\n\n  defaultTopicContextMenu(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n\n    let muted = false, blocked = false, self_blocked = false, subscribed = false, deleter = false, archived = false;\n    if (topic) {\n      subscribed = topic.isSubscribed();\n      archived = topic.isArchived();\n\n      const acs = topic.getAccessMode();\n      if (acs) {\n        muted = acs.isMuted();\n        blocked = !acs.isJoiner();\n        self_blocked = !acs.isJoiner('want');\n        deleter = acs.isDeleter();\n      }\n    }\n\n    return [\n      subscribed ? {\n        title: this.props.intl.formatMessage(messages.menu_item_info),\n        handler: this.handleShowInfoView\n      } : null,\n      subscribed ? 'messages_clear' : null,\n      subscribed && deleter ? 'messages_clear_hard' : null,\n      muted ? (blocked ? null : 'topic_unmute') : 'topic_mute',\n      self_blocked ? 'topic_unblock' : 'topic_block',\n      archived ? 'topic_restore' : 'topic_archive',\n      'topic_delete'\n    ];\n  }\n\n  handleHideContextMenu() {\n    this.setState({\n      contextMenuVisible: false,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuBounds: null\n    });\n  }\n\n  handleContextMenuAction(action, promise, params) {\n    if (action == 'topic_archive') {\n      if (promise && params.topicName && params.topicName == this.state.topicSelected) {\n        promise.then(() => {\n          this.handleTopicSelected(null);\n        });\n      }\n    }\n  }\n\n  handleShowAlert(title, content, onConfirm, confirmText, onReject, rejectText) {\n    this.setState({\n      alertVisible: true,\n      alertParams: {\n        title: title,\n        content: content,\n        onConfirm: onConfirm,\n        confirm: confirmText,\n        onReject: onReject,\n        reject: rejectText\n      }\n    });\n  }\n\n  handleShowInfoView() {\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'info', 'info'));\n    this.setState({infoPanel: 'info'});\n  }\n\n  handleMemberUpdateRequest(topicName, added, removed) {\n    if (!topicName) {\n      return;\n    }\n\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    if (added && added.length > 0) {\n      added.map((uid) => {\n        topic.invite(uid, null).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n\n    if (removed && removed.length > 0) {\n      removed.map((uid) => {\n        topic.delSubscription(uid).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n  }\n\n  handleValidateCredentialsRequest(cred, code) {\n    if (this.tinode.isAuthenticated()) {\n      const me = this.tinode.getMeTopic();\n      me.setMeta({cred: {meth: cred, resp: code}})\n        .then(() => {\n          HashNavigation.navigateTo('');\n        })\n        .catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n    } else {\n      this.setState({credMethod: cred, credCode: code});\n      this.doLogin(null, null, {meth: cred, resp: code});\n    }\n  }\n\n  handlePasswordResetRequest(method, value) {\n    // If already connected, connnect() will return a resolved promise.\n    return this.tinode.connect()\n      .then(() => {\n        return this.tinode.requestResetAuthSecret('basic', method, value);\n      })\n      .catch((err) => {\n        // Socket error\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleResetPassword(scheme, newPassword, token) {\n    token = base64ReEncode(token);\n    if (!token) {\n      this.handleError(this.props.intl.formatMessage(messages.invalid_security_token), 'err');\n    } else {\n      this.tinode.connect()\n        .then(() => {\n          return this.tinode.updateAccountBasic(null, null, newPassword, {token: token});\n        })\n        .catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"app-container\" ref={this.selfRef}>\n        {this.state.contextMenuVisible ?\n          <ContextMenu\n            tinode={this.tinode}\n            bounds={this.state.contextMenuBounds}\n            clickAt={this.state.contextMenuClickAt}\n            params={this.state.contextMenuParams}\n            items={this.state.contextMenuItems}\n            hide={this.handleHideContextMenu}\n            onShowAlert={this.handleShowAlert}\n            onAction={this.handleContextMenuAction}\n            onTopicRemoved={(topicName) => {\n              if (topicName == this.state.topicSelected) {\n                this.handleTopicSelected(null);\n              }\n            }}\n            onError={this.handleError} />\n          :\n          null\n        }\n        <Alert\n          visible={this.state.alertVisible}\n          title={this.state.alertParams.title}\n          content={this.state.alertParams.content}\n          onReject={this.state.alertParams.onReject ? (() => { this.setState({alertVisible: false}); }) : null}\n          reject={this.state.alertParams.reject}\n          onConfirm={() => { this.setState({alertVisible: false}); this.state.alertParams.onConfirm(); }}\n          confirm={this.state.alertParams.confirm}\n          />\n        <SidepanelView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          displayMobile={this.state.displayMobile}\n          hideSelf={this.state.displayMobile && this.state.mobilePanel !== 'sidepanel'}\n          state={this.state.sidePanelSelected}\n          title={this.state.sidePanelTitle}\n          avatar={this.state.sidePanelAvatar}\n          trustedBadges={this.state.myTrustedBadges}\n          login={this.state.login}\n          persist={this.state.persist}\n          myUserId={this.state.myUserId}\n          loginDisabled={this.state.loginDisabled}\n          loadSpinnerVisible={this.state.loadSpinnerVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          topicSelected={this.state.topicSelected}\n          chatList={this.state.chatList}\n          credMethod={this.state.credMethod}\n          credCode={this.state.credCode}\n\n          transport={this.state.transport}\n          messageSounds={this.state.messageSounds}\n          desktopAlerts={this.state.desktopAlerts}\n          desktopAlertsEnabled={this.state.desktopAlertsEnabled}\n          incognitoMode={this.state.incognitoMode}\n          serverAddress={this.state.serverAddress}\n          serverVersion={this.state.serverVersion}\n\n          onGlobalSettings={this.handleGlobalSettings}\n          onSignUp={this.handleNewAccount}\n          onSettings={this.handleSettings}\n          onNavigate={this.basicNavigator}\n          onLoginRequest={this.handleLoginRequest}\n          onPersistenceChange={this.handlePersistenceChange}\n          onCreateAccount={this.handleNewAccountRequest}\n          onUpdateAccountDesc={this.handleTopicUpdateRequest}\n          onUpdatePassword={this.handleUpdatePasswordRequest}\n          onUpdateAccountTags={this.handleUpdateAccountTagsRequest}\n          onTogglePushNotifications={this.togglePushToken}\n          onToggleMessageSounds={this.handleToggleMessageSounds}\n          onToggleIncognitoMode={this.handleToggleIncognitoMode}\n          onCredAdd={this.handleCredAdd}\n          onCredDelete={this.handleCredDelete}\n          onCredConfirm={this.handleCredConfirm}\n          onTopicSelected={this.handleTopicSelected}\n          onCreateTopic={this.handleStartTopicRequest}\n          onLogout={this.handleLogout}\n          onDeleteAccount={this.handleDeleteAccount}\n          onShowAlert={this.handleShowAlert}\n          onCancel={this.handleSidepanelCancel}\n          onError={this.handleError}\n          onValidateCredentials={this.handleValidateCredentialsRequest}\n          onPasswordResetRequest={this.handlePasswordResetRequest}\n          onResetPassword={this.handleResetPassword}\n          onShowArchive={this.handleShowArchive}\n          onShowBlocked={this.handleShowBlocked}\n\n          onInitFind={this.tnInitFind}\n          searchResults={this.state.searchResults}\n          onSearchContacts={this.handleSearchContacts}\n\n          showContextMenu={this.handleShowContextMenu} />\n\n        <MessagesView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          ready={this.state.ready}\n          online={this.state.topicSelectedOnline}\n          acs={this.state.topicSelectedAcs}\n          displayMobile={this.state.displayMobile}\n          viewportWidth={this.state.viewportWidth}\n          viewportHeight={this.state.viewportHeight}\n          hideSelf={this.state.displayMobile &&\n            (this.state.mobilePanel !== 'topic-view' || this.state.infoPanel)}\n          topic={this.state.topicSelected}\n          myUserId={this.state.myUserId}\n          // User public.fn.\n          myUserName={this.state.sidePanelTitle}\n          serverVersion={this.state.serverVersion}\n          serverAddress={this.state.serverAddress}\n          applicationVisible={this.state.applicationVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          newTopicParams={this.state.newTopicParams}\n\n          onHideMessagesView={this.handleHideMessagesView}\n          onData={this.tnData}\n          onError={this.handleError}\n          onNewTopicCreated={this.handleNewTopicCreated}\n          showContextMenu={this.handleShowContextMenu}\n          onChangePermissions={this.handleChangePermissions}\n          onNewChat={this.handleNewChatInvitation}\n          sendMessage={this.handleSendMessage} />\n\n        {this.state.infoPanel ?\n          <InfoView\n            tinode={this.tinode}\n            connected={this.state.connected}\n            displayMobile={this.state.displayMobile}\n            topic={this.state.topicSelected}\n            searchableContacts={this.state.searchableContacts}\n            myUserId={this.state.myUserId}\n            panel={this.state.infoPanel}\n\n            errorText={this.state.errorText}\n            errorLevel={this.state.errorLevel}\n            errorAction={this.state.errorAction}\n            errorActionText={this.state.errorActionText}\n\n            onNavigate={this.infoNavigator}\n            onTopicDescUpdateRequest={this.handleTopicUpdateRequest}\n            onShowAlert={this.handleShowAlert}\n            onChangePermissions={this.handleChangePermissions}\n            onMemberUpdateRequest={this.handleMemberUpdateRequest}\n            onDeleteTopic={this.handleDeleteTopicRequest}\n            onDeleteMessages={this.handleDeleteMessagesRequest}\n            onLeaveTopic={this.handleLeaveUnsubRequest}\n            onBlockTopic={this.handleBlockTopicRequest}\n            onReportTopic={this.handleReportTopic}\n            onAddMember={this.handleManageGroupMembers}\n            onTopicTagsUpdateRequest={this.handleTagsUpdateRequest}\n            onTopicUnArchive={this.handleUnarchive}\n            onInitFind={this.tnInitFind}\n            onError={this.handleError}\n\n            showContextMenu={this.handleShowContextMenu}\n            />\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(TinodeWeb);\n","// Put all packages together.\n// Used to generate umd/index.prod.js\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { IntlProvider } from 'react-intl';\n\nimport allMessages from './messages.json';\nimport TinodeWeb from './views/tinode-web.jsx';\nimport HashNavigation from './lib/navigation.js';\n\n// Detect human language to use in the UI:\n//  Check parameters from URL hash #?hl=ru, then browser, then use 'en' as a fallback.\nconst { params } = HashNavigation.parseUrlHash(window.location.hash);\nconst language = (params && params.hl) ||\n  (navigator.languages && navigator.languages[0]) ||\n  navigator.language ||\n  navigator.userLanguage ||\n  'en';\n\n// Get the base language 'en' from a more specific 'en_GB' or 'en-US' as a partial fallback.\nconst baseLanguage = language.toLowerCase().split(/[-_]/)[0];\n\n// Try the full locale first, then the locale without the region code, fallback to 'en'.\nconst htmlLang = allMessages[language] ? langauge : allMessages[baseLanguage] ? baseLanguage : 'en';\nconst messages = allMessages[htmlLang];\n\n// Set lang attribute of the HTML element: <html lang=\"XX\">\ndocument.getElementsByTagName('html')[0].setAttribute('lang', htmlLang);\n\nReactDOM.render(\n  <React.StrictMode>\n    <IntlProvider locale={language} messages={messages} textComponent={React.Fragment}>\n      <TinodeWeb />\n    </IntlProvider>\n  </React.StrictMode>,\n  document.getElementById('mountPoint')\n);\n","// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// startup\n// Load entry module and return exports\n// This entry module doesn't tell about it's top-level declarations so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[938](0, __webpack_exports__, __webpack_require__);\n"],"names":["React","ReactDOM","ReactIntl","firebase","messaging","Tinode","Alert","render","this","props","visible","className","title","content","onReject","onClick","reject","FormattedMessage","id","defaultMessage","onConfirm","confirm","PACKAGE_VERSION","APP_NAME","KNOWN_HOSTS","hosted","local","DEFAULT_HOST","KEYPRESS_DELAY","DEFAULT_P2P_ACCESS_MODE","REM_SIZE","AVATAR_SIZE","MAX_INBAND_ATTACHMENT_SIZE","MAX_EXTERN_ATTACHMENT_SIZE","IMAGE_THUMBNAIL_DIM","MAX_TITLE_LENGTH","MAX_TOPIC_DESCRIPTION_LENGTH","messages","defineMessages","info","clear_messages","clear_for_all","delete","delete_for_all","send_retry","mute","unmute","reply","topic_delete","topic_delete_warning","delete_messages_warning","unblock","block","topic_block_warning","member_delete","archive","unarchive","edit_permissions","clear_messages_warning","ContextMenu","constructor","super","selfRef","formatMessage","intl","handlePageClick","bind","handleEscapeKey","handleClick","MenuItems","handler","params","errorHandler","onShowAlert","deleteMessages","message","retryMessage","replyToMessage","topicPermissionSetter","then","ctrl","onTopicRemoved","topicName","topic","tinode","getTopic","delTopic","catch","err","console","log","user","delSubscription","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","e","current","contains","target","preventDefault","stopPropagation","hide","keyCode","item","items","currentTarget","dataset","onAction","onError","error","all","hard","cancelSend","seq","delMessagesAll","delMessagesList","flushMessage","msg","createMessage","publishDraft","mode","result","updateMode","pickReply","menu","count","map","push","key","vSize","length","position","left","bounds","right","clickAt","x","top","bottom","y","style","ref","injectIntl","shortDateFormat","locale","window","navigator","userLanguage","language","now","Date","getFullYear","getMonth","getDate","toLocaleTimeString","hour12","hour","minute","toLocaleDateString","month","day","year","bytesToHumanSize","bytes","sizes","bucket","Math","min","floor","log2","pow","round","toFixed","idToColorClass","light","fg","userId","abs","value","hash","i","charCodeAt","stringToColorHash","updateFavicon","oldIcon","getElementById","head","getElementsByTagName","newIcon","createElement","type","rel","href","removeChild","appendChild","theCard","fn","imageUrl","imageMimeType","note","card","trim","mimeType","matches","exec","photo","data","substring","indexOf","arrayEqual","a","b","Array","isArray","sort","l","sanitizeUrl","url","allowedSchemes","replace","test","schemes","join","RegExp","sanitizeImageUrl","sanitizedUrl","deliveryMarker","received","name","color","LetterTile","avatar","isGroup","iconColor","letter","charAt","authorizeURL","alt","src","onerror","LoadSpinner","large","clear","centered","show","AvatarUpload","state","source","handleFileReceived","componentDidUpdate","prevProps","setState","image","files","onImageUpdated","URL","createObjectURL","randId","random","substr","readOnly","uid","accept","onChange","htmlFor","uploading","icon_mapping","badge_verified","badge_staff","badge_danger","BadgeList","badges","trustedBadges","comment","CheckBox","handleChange","checked","ContactBadges","icon","message_sending","message_sending_failed","ReceivedMarker","timestamp","marker","UnreadBadge","FileProgress","width","progress","onCancel","UploadingImage","onCancelUpload","SUPPORTED_IMAGE_FORMATS","MIME_EXTENSIONS","makeImageUrl","startsWith","fitImageSize","height","maxWidth","maxHeight","forceSquare","scale","size","dstWidth","dstHeight","srcWidth","srcHeight","xoffset","yoffset","fileNameForMime","fname","mime","idx","ext","at","lastIndexOf","imageScaled","fileOrBlob","maxSize","Promise","resolve","img","Image","crossOrigin","Error","onload","async","revokeObjectURL","dim","canvas","ctx","getContext","imageSmoothingEnabled","drawImage","includes","blob","toBlob","clearRect","blobToBase64","reader","FileReader","evt","bits","split","readAsDataURL","drafty_form","drafty_attachment","drafty_image","handleImageData","el","attr","minWidth","minHeight","viewportWidth","Drafty","max","onImagePreview","loading","shortenFileName","filename","slice","fullFormatter","values","call","onFormButtonClick","inner","child","undefined","hasOwnProperty","colorId","onQuoteClick","concat","previewFormatter","val","quoteFormatter","Contact","handleContextClick","onSelected","index","showContextMenu","pageY","pageX","online","icon_badges","isVerified","isStaff","isDangerous","acs","showMode","getMode","isMuted","isJoiner","subtitle","preview","showCheckmark","selected","showOnline","isChannel","unread","small","ContactAction","action","badge_you","badge_owner","ContactList","topicSelected","contactNodes","contactsCount","contacts","c","filterFunc","filter","filterOn","private","toLowerCase","public","myUserId","isOwner","deliveryStatus","latestMessage","_status","msgStatus","showUnread","connected","onTopicSelected","trusted","verified","staff","danger","noScroll","dangerouslySetInnerHTML","__html","emptyListMessage","MenuCancel","ErrorPanel","level","onClearError","warn","text","whiteSpace","actionText","Chip","handleCancel","invalid","noAvatar","required","ChipInput","deriveStateFromProps","input","focused","handleTextInput","removeChipAt","handleChipCancel","handleFocusGained","handleFocusLost","handleKeyDown","placeholder","chips","prompt","sortedChips","sortChips","staticMembers","chipIndex","indexChips","prevState","keep","normal","removed","onChipRemoved","onFocusLost","onEnter","avatarDisabled","autoFocus","tabIndex","onFocus","onBlur","onKeyDown","no_contacts","contacts_not_found_short","GroupManager","members","indexMembers","keepInitialMembers","requiredMember","contactFilter","noContactsMessage","selectedContacts","handleContactSelected","handleMemberRemoved","handleContactFilter","handleSubmit","m","delta","present","keepInitial","stat","sel","status","splice","query","instance","added","Object","keys","k","onSubmit","doContactFiltering","joiner","writer","preser","approver","sharer","deleter","owner","PermissionsEditor","names","skip","compare","userTitle","userAvatar","modeTitle","compareTitle","Cropper","panX","panY","originX","originY","zoom","minZoom","maxZoom","overlay","cutout","boundingBox","imageWidth","imageHeight","mouseX","mouseY","prevDistance","cutoutRect","bBoxRect","initScaling","onZoom","handleZoom","mouseDown","mouseUp","mouseMove","mouseTouch","positionAll","translate","passive","getBoundingClientRect","currPan","nextDiff","imgRect","imgLeft","imgRight","coLeft","coRight","imgTop","imgBottom","coTop","coBottom","touches","body","dX","dY","checkBound","touch0","touch1","distance","sqrt","t3d","orig","transform","transformOrigin","onLoad","step","AvatarCrop","objURL","imageCrop","VisiblePassword","handleVisibility","handeTextChange","handleEditingFinished","onFinished","setTimeout","activeElement","autoComplete","InPlaceEdit","active","initialValue","handleStartEditing","handlePasswordFinished","newValue","focus","event","checkValidity","spanText","spanClass","multiline","element","rows","TagManager","tags","tagInput","activated","handleTagInput","handleAddTag","handleRemoveTag","nextProps","last","tag","maxTagCount","getServerLimit","onTagsChanged","minTagLength","maxTagLength","add_tags_prompt","TopicDescEdit","getAccessMode","isMe","fullName","description","newAvatar","newAvatarMime","previousOnTags","tnNewTags","handleFullNameUpdate","handleImageUpdated","handleAvatarCropped","handlePrivateUpdate","handleDescriptionUpdate","uploadAvatar","handleAvatarCropCancel","handleTagsUpdated","onTagsUpdated","onUpdateTopicDesc","desc","readyToUpload","uploader","getLargeFileHelper","upload","finally","b64","du","scaled","onUpdateTags","editable","full_name_placeholder","group_name_placeholder","private_placeholder","title_tag_manager","TopicCommon","credentials","getCredentials","addCredActive","addCredInvalid","newCred","previousTagsUpdated","tnCredsUpdated","handleCredChange","handleCredKeyDown","handleCredEntered","onCredsUpdated","getType","creds","method","asPhone","asEmail","onCredAdd","onTopicTagsUpdateRequest","cred","meth","done","onCredConfirm","onCredDelete","delete_messages","leave_chat","leave_chat_warning","block_contact","block_contact_warning","report_chat","report_chat_warning","other_user","TopicSecurity","handleDeleteTopic","handleDeleteMessages","handleLeave","handleBlock","handleReport","onDeleteTopic","onDeleteMessages","onLeaveTopic","onBlockTopic","onReportTopic","channel","groupTopic","onLaunchPermissionsEditor","access","auth","anon","modeGiven2","general","security","crop","perm_want","perm_given","perm_auth","perm_anon","perm_user","_clip","str","InfoView","admin","muted","address","selectedContact","modeGiven","modeWant","modeWant2","contactList","previousMetaDesc","previousSubsUpdated","resetSubs","resetDesc","resetTags","onMetaDesc","onSubsUpdated","handleImageChanged","handleMuted","handleUnarchive","handlePermissionsChanged","handleLaunchPermissionsEditor","handleShowAddMembers","handleMemberUpdateRequest","handleMemberSelected","handleContextMenu","handleBackNavigate","newState","user2","subscriber","getGiven","getWant","subscribers","sub","defacs","getDefaultAccess","entries","isAdmin","isSharer","isDeleter","archived","isArchived","isGroupType","isChannelType","chan","getMeta","startMetaQuery","withTags","build","subs","onTopicDescUpdate","ignored","onChangePermissions","ignored2","onTopicUnArchive","which","perm","onTopicDescUpdateRequest","userPermissionsEdited","toEdit","toCompare","toSkip","titleEdit","titleCompare","userPermissionsTitle","userPermissionsAvatar","editedPermissions","immutablePermissions","editedPermissionsTitle","immutablePermissionsTitle","editedPermissionsSkipped","onNavigate","onInitFind","onMemberUpdateRequest","args","panel","menuItems","view","shift","panelTitle","displayMobile","errorLevel","errorText","searchableContacts","no_members","Attachment","downloader","downloadFile","mimetype","download","loaded","cancel","helperFunc","isUrlRelative","downloadUrl","downloadWidget","BaseChatMessage","onProgress","handleProgress","handleImagePreview","handleFormButtonClick","handleCancelUpload","handleQuoteClick","formatterContext","getFormatter","tp","resp","act","onFormResponse","MESSAGE_STATUS_FAILED","userIsWriter","MESSAGE_STATUS_DEL_RANGE","ratio","replyToSeq","sideClass","deleted","sequence","response","bubbleClass","fullDisplay","userFrom","attachments","att","tree","innerRef","userName","IntlChatMessage","messaging_disabled","type_new_message","add_image_caption","file_attachment_too_large","cannot_initiate_upload","SendMessage","keypressTimestamp","getTime","handlePasteEvent","handleAttachImage","handleAttachFile","handleSend","handleKeyPress","handleMessageTyping","messageEditArea","disabled","onImageSuccess","onAttachmentSuccess","clipboardData","originalEvent","kind","file","getAsFile","filePasted","onAttachImage","onAttachFile","acceptBlank","noInput","onSendMessage","shiftKey","onKeyPress","replyTo","messagePrompt","quote","onCancelReply","attachImage","click","attachFile","display","DocPreview","handleSendDoc","caption","onClose","mimeToIcon","default","video","iconFromMime","GroupSubs","usersOnline","totalCount","countToShow","some","overflow","ImagePreview","handleSendImage","assignWidth","node","maxlength","Invitation","handleButtonAction","LogoView","version","serverVersion","serverAddress","HashNavigation","parts","path","forEach","part","decodeURIComponent","location","parsed","parseUrlHash","composeUrlHash","sidepanel","infopanel","online_now","last_seen","not_found","invalid_content","isUnconfirmed","ex","getExcessive","isPeerRestricted","ms","getMissing","MessagesView","getDerivedStateFromProps","leave","sendMessage","retrySend","sendImageAttachment","sendFileAttachment","sendKeyPress","subscribe","handleScrollReference","handleScrollEvent","handleDescChange","handleSubsUpdated","handleMessageUpdate","handleAllMessagesReceived","handleInfoReceipt","handleImagePostview","handleClosePreview","handleFormResponse","handleShowContextMenuMessage","handleNewChatAcceptance","handleEnablePeer","postReadNotification","clearNotificationQueue","handlePickReply","handleCancelReply","chatMessageRefs","getOrCreateMessageRef","readNotificationQueue","readNotificationTimer","seqId","messagesScroller","messageCount","scrollTop","scrollHeight","scrollPosition","viewportHeight","onData","onAllMessagesReceived","onInfo","onPres","applicationVisible","ready","nextState","docPreview","imagePreview","imagePostview","typingIndicator","fetchingMessages","assign","onlineSubs","peer","p2pPeerDesc","peerMessagingDisabled","latestClearId","maxClearId","isWriter","isReader","readingBlocked","unconformed","unconfirmed","isSubscribed","newTopic","newTopicParams","_topicName","getQuery","withLaterDesc","withLaterSub","withLaterData","withLaterDel","setQuery","code","onNewTopicCreated","queuedMessages","pub","_sending","navigateTo","setUrlTopic","blankState","oldTopicName","isTopicCached","oldTopic","msgHasMoreMessages","getMessagesPage","setInterval","clearInterval","n","sendAt","noteRead","setMilliseconds","getMilliseconds","clearTimeout","keyPressTimer","isNewMessage","from","what","forceUpdate","attachJSON","parse","searchParams","set","search","open","messageSpecificMenuItems","onNewChat","noteKeyPress","uploadCompletionPromise","append","maxInbandAttachmentSize","urlPromise","fileToBase64","maxExternAttachmentSize","limit","insertImage","_tempPreview","appendLineBreak","found","findMessage","_cancelled","init","isValid","wrapInto","senderName","senderId","userDesc","myUserName","images","entities","quotedImage","promise","bin","atob","buf","ArrayBuffer","arr","Uint8Array","Blob","base64ToBlob","Prmise","fetch","ok","statusText","scrollIntoView","behavior","classList","add","remove","component","hideSelf","component2","messageNodes","previousFrom","chatBoxClass","prev","next","nextFrom","thisFrom","isReply","parseInt","isNaN","hi","ts","_uploader","lastSeen","cont","getMeTopic","getContact","seen","when","onHideMessagesView","ButtonBack","onBack","MenuContacts","onNewTopic","onSettings","MenuStart","onSignUp","SideNavbar","AccountSettingsView","me","archived_contacts_title","ContactsView","handleAction","unreadThreads","archivedCount","chatList","blocked","arch","touched","action_ignored","onShowArchive","LocalStorageUtil","localStorage","setItem","JSON","stringify","getItem","oldVal","getObject","setObject","removeItem","CreateAccountView","login","password","email","imageDataUrl","errorCleared","saveToken","handleLoginChange","handlePasswordChange","handleEmailChange","handleFnChange","handleToggleSaveToken","onCreateAccount","submitClasses","login_prompt","password_prompt","onImageChanged","full_name_prompt","email_prompt","stay_logged_in","EditAccountView","handleCheckboxClick","onToggleMessageSounds","onTogglePushNotifications","onToggleIncognitoMode","messageSounds","desktopAlertsEnabled","desktopAlerts","incognitoMode","delete_account","delete_account_warning","AccSecurityView","blockedCount","showPermissionEditorFor","handlePasswordUpdate","handleHidePermissionsEditor","handleDeleteAccount","pwd","onUpdatePassword","onUpdateAccountDesc","onDeleteAccount","password_unchanged","onLogout","onShowBlocked","AccSupportView","LoginView","hostName","persist","onPersistenceChange","onLogin","autoCorrect","autoCapitalize","invalid_id","NewTopicById","groupId","prefix","NewTopicGroup","handleFieldEdit","handleTagsChanged","handleChannelToggle","SearchContacts","edited","handleSearchChange","handleSearch","handleClear","onSearchContacts","search_placeholder","search_for_contacts","search_no_results","NewTopicView","tabSelected","searchQuery","handleTabClick","handleSearchContacts","handleNewGroupSubmit","handleGroupByID","addUrlParam","removeUrlParam","onCreateTopic","dataUrl","priv","no_contacts_placeholder","searchResults","PasswordResetView","sent","token","scheme","onReset","onRequest","HostSelector","changed","handleHostNameChange","onServerAddressChange","hostOptions","list","SettingsView","transport","handleTransportSelected","handleServerAddressChange","onUpdate","def","ws","lp","transportOptions","phone","ValidationView","credCode","credMethod","numbers_only","register","settings","edit","notif","support","newtpk","reset","SidepanelView","handleNewTopic","errorAction","errorActionText","loadSpinnerVisible","loginDisabled","onLoginRequest","onGlobalSettings","onUpdateAccountTags","onValidateCredentials","onPasswordResetRequest","onResetPassword","detectServerAddress","host","protocol","hostname","port","isSecureConnection","POP_SOUND","Audio","reconnect_countdown","reconnect_now","push_init_failed","invalid_security_token","no_connection","code_doesnot_match","menu_item_info","TinodeWeb","getBlankState","handleResize","handleHashRoute","handleOnline","checkForAppUpdate","handleVisibilityEvent","handleError","handleLoginRequest","handlePersistenceChange","handleConnected","handleAutoreconnectIteration","doLogin","handleCredentialsRequest","handleLoginSuccessful","handleDisconnect","tnMeMetaDesc","tnMeContactUpdate","tnMeSubsUpdated","resetContactList","tnData","tnInitFind","tnFndSubsUpdated","handleTopicSelected","handleHideMessagesView","handleSendMessage","handleNewChatInvitation","handleNewAccount","handleNewAccountRequest","handleUpdatePasswordRequest","handleUpdateAccountTagsRequest","handleToggleIncognitoMode","handleSettings","handleGlobalSettings","handleShowArchive","handleShowBlocked","handleToggleMessageSounds","handleCredAdd","handleCredDelete","handleCredConfirm","initFCMessaging","togglePushToken","requestPushToken","handlePushMessage","handleSidepanelCancel","handleStartTopicRequest","handleNewTopicCreated","handleTopicUpdateRequest","handleChangePermissions","handleTagsUpdateRequest","handleLogout","handleDeleteTopicRequest","handleDeleteMessagesRequest","handleLeaveUnsubRequest","handleBlockTopicRequest","handleReportTopic","handleShowContextMenu","defaultTopicContextMenu","handleHideContextMenu","handleShowAlert","handleShowInfoView","handleValidateCredentialsRequest","handlePasswordResetRequest","handleResetPassword","handleContextMenuAction","autoLogin","messageSoundsOff","FIREBASE_INIT","firebaseToken","hidden","sidePanelSelected","sidePanelTitle","sidePanelAvatar","myTrustedBadges","liveConnection","onLine","topicSelectedOnline","topicSelectedAcs","innerWidth","infoPanel","mobilePanel","contextMenuVisible","contextMenuBounds","contextMenuClickAt","contextMenuParams","contextMenuItems","alertVisible","alertParams","requestedTopic","BroadcastChannel","documentElement","clientWidth","clientHeight","tnSetup","onConnect","onDisconnect","onAutoreconnectIteration","setDeviceToken","parsedNav","expires","setAuthToken","connect","readTimer","readTimerCallback","persistentCache","onSetupCompleted","appName","apiKey","secure","setHumanLanguage","enableLogging","oobNotification","fbPush","usePublicVapidKey","messagingVapidKey","serviceWorker","reg","useServiceWorker","postMessage","onTokenRefresh","onMessage","payload","mobile","onupdatefound","installingWorker","installing","onstatechange","controller","getTopicAccessMode","newTopicTabSelected","tab","reconnectCountdown","reconnect","isConnected","initStorage","clearStorage","getServerInfo","ver","sec","prom","timeLeft","seconds","secondsToTime","isAuthenticated","getAuthToken","loginBasic","loginToken","goToTopic","onContactUpdate","getCurrentUserID","withDesc","withCred","disconnect","urlHash","setUrlSidePanel","isPresencer","play","unused","foundContacts","merged","updated","past","prepareSearchableContacts","receivedTimer","noteRecv","fnd","getFndTopic","withSub","s","setMeta","isTopicOnline","isP2PType","am","updateWant","login_","password_","public_","cred_","tags_","createAccountBasic","on","enabled","updateObject","requestPermission","deleteToken","getToken","refreshedToken","delCredential","basicNavigator","infoNavigator","setUrlInfoPanel","newGroupTopicName","oldName","newName","updateAccountBasic","getCurrentLogin","updateGiven","delCurrentUser","publish","self_blocked","subscribed","confirmText","rejectText","invite","requestResetAuthSecret","newPassword","btoa","base64ReEncode","onAddMember","handleManageGroupMembers","hl","languages","baseLanguage","htmlLang","allMessages","langauge","setAttribute","IntlProvider","textComponent","__webpack_require__","module","getter","__esModule","d","exports","definition","o","defineProperty","enumerable","get","obj","prop","prototype","__webpack_modules__"],"sourceRoot":""}