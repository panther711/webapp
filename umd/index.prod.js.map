{"version":3,"sources":["webpack://tinode-webapp/webpack/bootstrap","webpack://tinode-webapp/webpack/runtime/compat get default export","webpack://tinode-webapp/webpack/runtime/define property getters","webpack://tinode-webapp/webpack/runtime/hasOwnProperty shorthand","webpack://tinode-webapp/external \"React\"","webpack://tinode-webapp/external \"ReactDOM\"","webpack://tinode-webapp/external \"ReactIntl\"","webpack://tinode-webapp/external \"firebase\"","webpack://tinode-webapp/external \"Tinode\"","webpack://tinode-webapp/external [\"firebase\",\"messaging\"]","webpack://tinode-webapp/./src/widgets/alert.jsx","webpack://tinode-webapp/./src/version.js","webpack://tinode-webapp/./src/config.js","webpack://tinode-webapp/./src/widgets/context-menu.jsx","webpack://tinode-webapp/./src/lib/strformat.js","webpack://tinode-webapp/./src/widgets/letter-tile.jsx","webpack://tinode-webapp/./src/lib/blob-helpers.js","webpack://tinode-webapp/./src/widgets/avatar-upload.jsx","webpack://tinode-webapp/./src/widgets/checkbox.jsx","webpack://tinode-webapp/./src/widgets/contact-badges.jsx","webpack://tinode-webapp/./src/lib/utils.js","webpack://tinode-webapp/./src/widgets/received-marker.jsx","webpack://tinode-webapp/./src/widgets/unread-badge.jsx","webpack://tinode-webapp/./src/widgets/contact.jsx","webpack://tinode-webapp/./src/widgets/contact-action.jsx","webpack://tinode-webapp/./src/widgets/contact-list.jsx","webpack://tinode-webapp/./src/widgets/menu-cancel.jsx","webpack://tinode-webapp/./src/widgets/error-panel.jsx","webpack://tinode-webapp/./src/widgets/chip.jsx","webpack://tinode-webapp/./src/widgets/chip-input.jsx","webpack://tinode-webapp/./src/widgets/group-manager.jsx","webpack://tinode-webapp/./src/widgets/visible-password.jsx","webpack://tinode-webapp/./src/widgets/in-place-edit.jsx","webpack://tinode-webapp/./src/widgets/more-button.jsx","webpack://tinode-webapp/./src/widgets/permissions-editor.jsx","webpack://tinode-webapp/./src/widgets/tag-manager.jsx","webpack://tinode-webapp/./src/views/info-view.jsx","webpack://tinode-webapp/./src/widgets/file-progress.jsx","webpack://tinode-webapp/./src/widgets/attachment.jsx","webpack://tinode-webapp/./src/widgets/uploading-image.jsx","webpack://tinode-webapp/./src/widgets/chat-message.jsx","webpack://tinode-webapp/./src/widgets/send-message.jsx","webpack://tinode-webapp/./src/widgets/doc-preview.jsx","webpack://tinode-webapp/./src/widgets/group-subs.jsx","webpack://tinode-webapp/./src/widgets/image-preview.jsx","webpack://tinode-webapp/./src/widgets/invitation.jsx","webpack://tinode-webapp/./src/widgets/load-spinner.jsx","webpack://tinode-webapp/./src/views/logo-view.jsx","webpack://tinode-webapp/./src/lib/navigation.js","webpack://tinode-webapp/./src/views/messages-view.jsx","webpack://tinode-webapp/./src/widgets/button-back.jsx","webpack://tinode-webapp/./src/widgets/menu-contacts.jsx","webpack://tinode-webapp/./src/widgets/menu-start.jsx","webpack://tinode-webapp/./src/widgets/side-navbar.jsx","webpack://tinode-webapp/./src/views/contacts-view.jsx","webpack://tinode-webapp/./src/lib/local-storage.js","webpack://tinode-webapp/./src/views/create-account-view.jsx","webpack://tinode-webapp/./src/views/edit-account-view.jsx","webpack://tinode-webapp/./src/views/acc-general-view.jsx","webpack://tinode-webapp/./src/views/acc-notifications-view.jsx","webpack://tinode-webapp/./src/views/acc-security-view.jsx","webpack://tinode-webapp/./src/views/acc-support-view.jsx","webpack://tinode-webapp/./src/views/login-view.jsx","webpack://tinode-webapp/./src/widgets/new-topic-by-id.jsx","webpack://tinode-webapp/./src/widgets/new-topic-group.jsx","webpack://tinode-webapp/./src/widgets/search-contacts.jsx","webpack://tinode-webapp/./src/views/new-topic-view.jsx","webpack://tinode-webapp/./src/views/password-reset-view.jsx","webpack://tinode-webapp/./src/widgets/host-selector.jsx","webpack://tinode-webapp/./src/views/settings-view.jsx","webpack://tinode-webapp/./src/views/validation-view.jsx","webpack://tinode-webapp/./src/views/sidepanel-view.jsx","webpack://tinode-webapp/./src/lib/host-name.js","webpack://tinode-webapp/./src/views/tinode-web.jsx","webpack://tinode-webapp/./src/index.js"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","React","ReactDOM","ReactIntl","firebase","messaging","Tinode","Alert","render","this","props","visible","className","title","content","onReject","onClick","reject","FormattedMessage","id","defaultMessage","onConfirm","confirm","APP_NAME","KNOWN_HOSTS","hosted","local","DEFAULT_HOST","KEYPRESS_DELAY","DEFAULT_P2P_ACCESS_MODE","REM_SIZE","AVATAR_SIZE","MAX_INBAND_ATTACHMENT_SIZE","MAX_EXTERN_ATTACHMENT_SIZE","MAX_IMAGE_DIM","MAX_TITLE_LENGTH","messages","defineMessages","info","clear_messages","clear_for_all","delete","delete_for_all","send_retry","mute","unmute","topic_delete","topic_delete_warning","delete_messages_warning","unblock","block","topic_block_warning","member_delete","archive","edit_permissions","clear_messages_warning","ContextMenu","constructor","super","formatMessage","intl","handlePageClick","bind","handleEscapeKey","handleClick","MenuItems","handler","params","errorHandler","onShowAlert","menu_item_clear_messages","deleteMessages","menu_item_clear_messages_for_all","message","retryMessage","topicPermissionSetter","then","ctrl","onTopicRemoved","topicName","menu_item_delete_topic","topic","tinode","getTopic","delTopic","catch","err","console","log","user","delSubscription","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","e","contains","target","preventDefault","stopPropagation","hide","keyCode","item","items","currentTarget","dataset","onAction","onError","all","hard","cancelSend","seq","delMessagesAll","delMessagesList","flushMessage","msg","createMessage","publishDraft","mode","result","updateMode","count","menu","map","push","data-id","vSize","length","position","left","bounds","right","clickAt","x","top","bottom","y","style","injectIntl","shortDateFormat","locale","window","navigator","userLanguage","language","now","Date","getFullYear","getMonth","getDate","toLocaleTimeString","hour12","hour","minute","toLocaleDateString","month","day","year","bytesToHumanSize","bytes","sizes","bucket","Math","min","floor","log2","pow","round","toFixed","LetterTile","avatar","isGroup","iconColor","abs","value","hash","i","charCodeAt","stringHash","trim","letter","charAt","alt","src","onerror","SUPPORTED_IMAGE_FORMATS","MIME_EXTENSIONS","makeImageUrl","photo","type","data","fitImageSize","width","height","maxWidth","maxHeight","forceSquare","scale","size","dstWidth","dstHeight","srcWidth","srcHeight","xoffset","yoffset","imageScaled","fileOrBlob","maxSize","onSuccess","img","Image","crossOrigin","onload","async","URL","revokeObjectURL","dim","canvas","createElement","ctx","getContext","imageSmoothingEnabled","drawImage","mime","indexOf","blob","Promise","resolve","toBlob","clearRect","fname","idx","ext","at","lastIndexOf","substring","fileNameForMime","name","createObjectURL","fileToBase64","file","reader","FileReader","split","readAsDataURL","blobToBase64","AvatarUpload","state","dataUrl","handleFileUpload","componentDidUpdate","prevProps","setState","files","unused","base64bits","du","onImageChanged","randId","random","substr","readOnly","href","uid","accept","onChange","htmlFor","CheckBox","handleChange","checked","icon_mapping","ContactBadges","badges","b","icon","color","updateFavicon","oldIcon","getElementById","head","getElementsByTagName","newIcon","rel","removeChild","appendChild","vcard","fn","imageDataUrl","card","dataStart","arrayEqual","Array","isArray","sort","l","sanitizeUrl","url","allowedSchemes","replace","test","schemes","join","RegExp","deliveryMarker","received","message_sending","message_sending_failed","ReceivedMarker","timestamp","marker","UnreadBadge","Contact","handleContextClick","onSelected","index","showContextMenu","pageY","pageX","online","slice","icon_badges","acs","showMode","getMode","isMuted","isJoiner","subtitle","preview","Drafty","draftyFormatter","comment","showCheckmark","selected","showOnline","isChannel","unread","values","el","attr","ContactAction","action","badge_you","badge_owner","ContactList","topicSelected","contactNodes","contactsCount","contacts","c","filterFunc","filter","private","toLowerCase","public","myUserId","isOwner","deliveryStatus","latestMessage","_status","msgStatus","showUnread","connected","onTopicSelected","noScroll","dangerouslySetInnerHTML","__html","emptyListMessage","MenuCancel","onCancel","ErrorPanel","show","level","onClearError","warn","text","whiteSpace","actionText","Chip","handleCancel","invalid","noAvatar","required","ChipInput","deriveStateFromProps","input","focused","handleTextInput","removeChipAt","handleChipCancel","handleFocusGained","handleFocusLost","handleKeyDown","placeholder","chips","prompt","sortedChips","sortChips","staticMembers","chipIndex","indexChips","prevState","keep","normal","includes","concat","removed","onChipRemoved","onFocusLost","onEnter","undefined","avatarDisabled","onFocus","onBlur","onKeyDown","autoFocus","no_contacts","contacts_not_found_short","GroupManager","members","indexMembers","keepInitialMembers","requiredMember","contactFilter","noContactsMessage","selectedContacts","handleContactSelected","handleMemberRemoved","handleContactFilter","handleSubmit","m","delta","present","keepInitial","stat","sel","userId","status","splice","val","query","instance","added","keys","k","onSubmit","doContactFiltering","VisiblePassword","handleVisibility","handeTextChange","handleEditingFinished","onFinished","setTimeout","activeElement","tabIndex","autoComplete","InPlaceEdit","active","initialValue","handleStartEditing","handlePasswordFinished","newValue","focus","event","checkValidity","fieldType","spanText","spanClass","MoreButton","open","handleToggle","onToggle","joiner","writer","preser","approver","sharer","deleter","owner","PermissionsEditor","names","skip","compare","userTitle","userAvatar","modeTitle","compareTitle","TagManager","tags","tagInput","activated","handleTagInput","handleAddTag","handleRemoveTag","nextProps","last","tag","maxTagCount","getServerLimit","onTagsChanged","minTagLength","maxTagLength","add_tags_prompt","requested","granted","other_user","delete_messages","leave_chat","leave_chat_warning","block_contact","block_contact_warning","report_chat","report_chat_warning","InfoView","admin","muted","address","groupTopic","channel","fullName","selectedContact","access","modeGiven","modeWant","modeGiven2","modeWant2","auth","anon","contactList","showMemberPanel","showPermissionEditorFor","moreInfoExpanded","previousMetaDesc","previousSubsUpdated","previousTagsUpdated","resetSubs","resetDesc","onMetaDesc","onSubsUpdated","onTagsUpdated","handleFullNameUpdate","handlePrivateUpdate","handleImageChanged","handleMuted","handlePermissionsChanged","handleLaunchPermissionsEditor","handleHidePermissionsEditor","handleShowAddMembers","handleHideAddMembers","handleMemberUpdateRequest","handleDeleteMessages","handleLeave","handleBlock","handleReport","handleMemberSelected","handleMoreInfo","handleTagsUpdated","handleContextMenu","getType","newState","user2","subscriber","getGiven","getWant","subscribers","sub","defacs","getDefaultAccess","getAccessMode","isAdmin","isSharer","isDeleter","isGroupType","isChannelType","getMeta","startMetaQuery","withTags","build","desc","subs","onTopicDescUpdate","ignored","onChangePermissions","perm","userPermissionsEdited","which","toEdit","toCompare","toSkip","titleEdit","titleCompare","userPermissionsTitle","userPermissionsAvatar","editedPermissions","immutablePermissions","editedPermissionsTitle","immutablePermissionsTitle","editedPermissionsSkipped","onInitFind","onMemberUpdateRequest","onDeleteMessages","onLeaveTopic","onBlockTopic","onReportTopic","onTopicTagsUpdate","menuItems","displayMobile","errorLevel","errorText","searchableContacts","private_placeholder","more","no_members","FileProgress","progress","Attachment","downloader","downloadFile","filename","mimetype","getLargeFileHelper","download","loaded","uploading","onCancelUpload","cancel","helperFunc","isUrlRelative","downloadUrl","downloadWidget","UploadingImage","ChatMessage","uploader","onProgress","handleProgress","handleImagePreview","handleFormButtonClick","handleCancelUpload","onImagePreview","resp","act","ref","onFormResponse","MESSAGE_STATUS_FAILED","ratio","sideClass","deleted","sequence","response","bubbleClass","fullDisplay","userFrom","attachments","mimeType","att","userName","notFound","viewportWidth","authorizeURL","sanitizeImageUrl","inner","child","messaging_disabled","type_new_message","add_image_caption","file_attachment_too_large","cannot_initiate_upload","SendMessage","keypressTimestamp","getTime","handlePasteEvent","handleAttachImage","handleAttachFile","handleSend","handleKeyPress","handleMessageTyping","messageEditArea","disabled","onImageSuccess","onAttachmentSuccess","clipboardData","originalEvent","kind","getAsFile","imageFileScaledToBase64","imageFileToBase64","filePasted","bits","onAttachImage","onAttachFile","acceptBlank","noInput","onSendMessage","shiftKey","onKeyPress","messagePrompt","attachImage","click","attachFile","display","DocPreview","handleSendDoc","caption","onClose","mimeToIcon","default","image","video","iconFromMime","GroupSubs","usersOnline","totalCount","countToShow","some","overflow","ImagePreview","handleSendImage","assignWidth","node","getBoundingClientRect","maxlength","max","Invitation","handleButtonAction","evt","LoadSpinner","LogoView","version","serverVersion","serverAddress","HashNavigation","parts","path","forEach","part","decodeURIComponent","location","args","parsed","parseUrlHash","composeUrlHash","sidepanel","online_now","last_seen","not_found","isUnconfirmed","ex","getExcessive","isPeerRestricted","ms","getMissing","MessagesView","getDerivedStateFromProps","leave","sendImageAttachment","sendFileAttachment","sendKeyPress","handleScrollReference","handleScrollEvent","handleDescChange","handleSubsUpdated","handleNewMessage","handleAllMessagesReceived","handleInfoReceipt","handleImagePostview","handleClosePreview","handleFormResponse","handleShowContextMenuMessage","handleNewChatAcceptance","handleEnablePeer","postReadNotification","clearNotificationQueue","readNotificationQueue","readNotificationTimer","messagesScroller","scrollTop","scrollHeight","scrollPosition","viewportHeight","onData","onAllMessagesReceived","onInfo","onPres","applicationVisible","isSubscribed","ready","newTopic","newTopicParams","_topicName","getQuery","withLaterDesc","withLaterSub","isReader","withLaterData","withLaterDel","fetchingMessages","setQuery","subscribe","code","onNewTopicCreated","queuedMessages","pub","_sending","publishMessage","setUrlTopic","blankState","nextState","docPreview","imagePreview","imagePostview","typingIndicator","msgs","assign","onlineSubs","peer","p2pPeerDesc","peerMessagingDisabled","isWriter","readingBlocked","unconformed","unconfirmed","oldTopicName","oldTopic","finally","msgHasMoreMessages","getMessagesPage","setInterval","clearInterval","n","shift","sendAt","noteRead","setMilliseconds","getMilliseconds","isNewMessage","from","what","clearTimeout","keyPressTimer","forceUpdate","sendMessage","attachJSON","parse","searchParams","set","search","messageSpecificMenuItems","onNewChat","noteKeyPress","maxInbandAttachmentSize","uploadCompletionPromise","upload","urlPromise","maxExternAttachmentSize","limit","tinyBlob","blobMime","tinyBits64","insertImage","_tempPreview","appendLineBreak","append","init","bits64","found","find","_cancelled","component","hideSelf","component2","messageNodes","previousFrom","chatBoxClass","nextFrom","thisFrom","isReply","userDesc","hi","ts","_uploader","lastSeen","cont","getMeTopic","getContact","seen","when","onHideMessagesView","ButtonBack","onBack","MenuContacts","onNewTopic","onSettings","MenuStart","onSignUp","SideNavbar","archived_contacts_title","ContactsView","handleAction","unreadThreads","archivedCount","chatList","blocked","arch","touched","action_ignored","onShowArchive","LocalStorageUtil","localStorage","setItem","JSON","stringify","getItem","oldVal","getObject","setObject","removeItem","CreateAccountView","login","password","email","errorCleared","saveToken","handleLoginChange","handlePasswordChange","handleEmailChange","handleFnChange","handleToggleSaveToken","onCreateAccount","submitClasses","login_prompt","password_prompt","full_name_prompt","email_prompt","stay_logged_in","EditAccountView","me","onBasicNavigate","AccGeneralView","credentials","getCredentials","addCredActive","addCredInvalid","newCred","previousOnTags","tnNewTags","tnCredsUpdated","handleCredChange","handleCredKeyDown","handleCredEntered","onCredsUpdated","creds","onUpdateAccount","method","asPhone","asEmail","onCredAdd","onUpdateTags","cred","meth","done","onCredConfirm","onCredDelete","full_name_placeholder","title_tag_manager","handleCheckboxClick","onToggleMessageSounds","onTogglePushNotifications","onToggleIncognitoMode","messageSounds","desktopAlertsEnabled","desktopAlerts","incognitoMode","delete_account","delete_account_warning","AccSecurityView","blockedCount","handlePasswordUpdate","handleDeleteAccount","pwd","onDeleteAccount","password_unchanged","onLogout","onShowBlocked","AccSupportView","LoginView","hostName","onLogin","autoCorrect","autoCapitalize","invalid_id","NewTopicById","groupId","NewTopicGroup","handlePrivateChange","handleTagsChanged","handleChannelToggle","SearchContacts","edited","handleSearchChange","handleSearch","handleClear","onSearchContacts","search_placeholder","search_for_contacts","search_no_results","NewTopicView","tabSelected","searchQuery","handleTabClick","handleSearchContacts","handleNewGroupSubmit","handleGroupByID","addUrlParam","removeUrlParam","onCreateTopic","priv","no_contacts_placeholder","searchResults","PasswordResetView","token","scheme","onReset","onRequest","reset","HostSelector","changed","handleHostNameChange","onServerAddressChange","hostOptions","list","SettingsView","transport","handleTransportSelected","handleServerAddressChange","onUpdate","def","ws","lp","transportOptions","phone","ValidationView","credCode","credMethod","numbers_only","register","settings","edit","general","security","notif","support","newtpk","SidepanelView","handleLoginRequested","handleNewTopic","onLoginRequest","view","errorAction","errorActionText","loadSpinnerVisible","loginDisabled","onGlobalSettings","onUpdateAccountTags","onValidateCredentials","onPasswordResetRequest","onResetPassword","detectServerAddress","host","protocol","hostname","port","isSecureConnection","POP_SOUND","Audio","reconnect_countdown","reconnect_now","push_init_failed","invalid_security_token","no_connection","code_doesnot_match","menu_item_info","TinodeWeb","getBlankState","handleResize","handleHashRoute","handleOnline","checkForAppUpdate","handleVisibilityEvent","handleError","handleLoginRequest","handleConnected","handleAutoreconnectIteration","doLogin","handleCredentialsRequest","handleLoginSuccessful","handleDisconnect","tnMeMetaDesc","tnMeContactUpdate","tnMeSubsUpdated","resetContactList","tnData","tnInitFind","tnFndSubsUpdated","handleTopicSelected","handleHideMessagesView","handleSendMessage","handleNewChatInvitation","handleNewAccount","handleNewAccountRequest","handleUpdateAccountRequest","handleUpdateAccountTagsRequest","handleToggleIncognitoMode","handleSettings","handleGlobalSettings","handleShowArchive","handleShowBlocked","handleToggleMessageSounds","handleCredAdd","handleCredDelete","handleCredConfirm","initDesktopAlerts","togglePushToken","requestPushToken","handleSidepanelCancel","handleStartTopicRequest","handleNewTopicCreated","handleTopicUpdateRequest","handleChangePermissions","handleLogout","handleDeleteMessagesRequest","handleLeaveUnsubRequest","handleBlockTopicRequest","handleReportTopic","handleShowContextMenu","defaultTopicContextMenu","handleHideContextMenu","handleShowAlert","handleShowInfoView","handleHideInfoView","handleValidateCredentialsRequest","handlePasswordResetRequest","handleResetPassword","handleContextMenuAction","autoLogin","messageSoundsOff","FIREBASE_INIT","firebaseToken","hidden","sidePanelSelected","sidePanelTitle","sidePanelAvatar","liveConnection","onLine","topicSelectedOnline","topicSelectedAcs","innerWidth","showInfoPanel","mobilePanel","contextMenuVisible","contextMenuBounds","contextMenuClickAt","contextMenuParams","contextMenuItems","alertVisible","alertParams","documentElement","clientWidth","clientHeight","keepLoggedIn","tnSetup","onConnect","onDisconnect","onAutoreconnectIteration","fbPush","usePublicVapidKey","messagingVapidKey","serviceWorker","reg","useServiceWorker","postMessage","setDeviceToken","parsedNav","expires","setAuthToken","connect","tab","readTimer","readTimerCallback","persistentCache","onSetupCompleted","appName","apiKey","secure","persist","setHumanLanguage","enableLogging","mobile","onupdatefound","installingWorker","installing","onstatechange","controller","newTopicTabSelected","isConnected","getServerInfo","ver","sec","prom","reconnectCountdown","timeLeft","seconds","secondsToTime","reconnect","isAuthenticated","promise","getAuthToken","loginBasic","loginToken","onContactUpdate","getCurrentUserID","withDesc","withCred","disconnect","setUrlSidePanel","isPresencer","archived","isArchived","play","foundContacts","merged","updated","prepareSearchableContacts","receivedTimer","noteRecv","fnd","getFndTopic","withSub","s","setMeta","isTopicOnline","getTopicAccessMode","isP2PType","am","updateWant","login_","password_","public_","cred_","tags_","createAccountBasic","updateAccountBasic","getCurrentLogin","on","clearStorage","onTokenRefresh","onMessage","payload","enabled","requestPermission","deleteToken","getToken","refreshedToken","delCredential","basicNavigator","isTopicCached","newGroupTopicName","oldName","newName","permissions","updateGiven","delCurrentUser","publish","self_blocked","subscribed","confirmText","rejectText","invite","requestResetAuthSecret","newPassword","str","btoa","atob","base64ReEncode","onAddMember","handleManageGroupMembers","hl","languages","baseLanguage","allMessages","IntlProvider","textComponent"],"mappings":"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","file":"index.prod.js","sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var __WEBPACK_NAMESPACE_OBJECT__ = React;","var __WEBPACK_NAMESPACE_OBJECT__ = ReactDOM;","var __WEBPACK_NAMESPACE_OBJECT__ = ReactIntl;","var __WEBPACK_NAMESPACE_OBJECT__ = firebase;","var __WEBPACK_NAMESPACE_OBJECT__ = Tinode;","var __WEBPACK_NAMESPACE_OBJECT__ = firebase.messaging;","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Alert extends React.PureComponent {\n  render() {\n    return this.props.visible ?\n      <div className=\"alert-container\">\n        <div className=\"alert\">\n          <div className=\"title\">{this.props.title}</div>\n          <div className=\"content\">{this.props.content}</div>\n          <div className=\"dialog-buttons\">\n            {this.props.onReject ?\n              <button className=\"outline\" onClick={this.props.onReject}>\n                {this.props.reject || <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />}\n              </button>\n              :\n              null\n            }\n            <button className=\"blue\" onClick={this.props.onConfirm}>\n              {this.props.confirm || <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\"  />}\n            </button>\n          </div>\n        </div>\n      </div>\n    :\n    null;\n  }\n};\n","// This is a generated file. Don't edit.\n\nexport const PACKAGE_VERSION = \"0.17.0\";\n","import { PACKAGE_VERSION } from './version.js';\n\n// Name of this application, used in the User-Agent.\nexport const APP_NAME = 'TinodeWeb/' + (PACKAGE_VERSION || '0.16');\n\n// API key. Use https://github.com/tinode/chat/tree/master/keygen to generate your own\nexport const API_KEY = 'AQEAAAABAAD_rAp4DJh05a1HAwFT3A6K';\n\n// The array of possible hosts to connect to.\nexport const KNOWN_HOSTS = {hosted: 'web.tinode.co', local: 'localhost:6060'};\n\n// Default host name and port to connect to.\nexport const DEFAULT_HOST = KNOWN_HOSTS.hosted;\n\n// Enable console logging.\nexport const LOGGING_ENABLED = true;\n\n// Minimum time between two keypress notifications, milliseconds.\nexport const KEYPRESS_DELAY = 3*1000;\n// Delay before sending a {note} for reciving a message, milliseconds.\nexport const RECEIVED_DELAY = 500;\n// Delay before sending a read notification, milliseconds.\nexport const READ_DELAY = 1000;\n\n// The shortest allowed tag length. Matches the value on the server.\nexport const MIN_TAG_LENGTH = 2;\n// The greatest allowed tag length. Matches the value on the server.\nexport const MAX_TAG_LENGTH = 96;\n// The maximum number of tags allowed. Matches the value on the server.\nexport const MAX_TAG_COUNT = 16;\n\n// Access mode for P2P subscriptions initiated by the current user.\nexport const DEFAULT_P2P_ACCESS_MODE = 'JRWPS';\n// Access mode for new group topics created by the current user.\nexport const NEW_GRP_ACCESS_MODE = 'JRWPSAO';\n// Access mode for a channel.\nexport const CHANNEL_ACCESS_MODE = 'JR';\n\n// Access mode for no access.\nexport const NO_ACCESS_MODE = 'N';\n\n// Mediaquery breakpoint between desktop and mobile, in px. Should match the value\n// in @media (max-size: 640px) in base.css\nexport const MEDIA_BREAKPOINT = 640;\n// Size of css 'rem' unit in pixels. Default 1rem = 10pt = 13px.\nexport const REM_SIZE = 13;\n\n// Size of the avatar image: When an avatar image is uploaded, it's resized to\n// a square of this size.\nexport const AVATAR_SIZE = 128;\n\n// Size of the broken_image shown in MessagesView\nexport const BROKEN_IMAGE_SIZE = 32;\n\n// Number of chat messages to fetch in one call.\nexport const MESSAGES_PAGE = 24;\n\n// Default maximum in-band (included directly into the message) attachment size which fits into\n// a message of 256K in size. The actual binary size of the attachment should be smaller due to\n// base64 encoding expansion and some overhead, for instance 1024 bytes.\n// Increase this limit to a greater value in production, if desired. Also increase\n// max_message_size in the server config.\nexport const MAX_INBAND_ATTACHMENT_SIZE = 262144;\n\n// Absolute maximum attachment size to be used with the server = 8MB. Increase to\n// something like 100MB in production.\nexport const MAX_EXTERN_ATTACHMENT_SIZE = 1 << 23;\n\n// Maximum allowed linear dimension of an inline image in pixels. Larer images will be shrunk\n// to make the larger dimension fit under this size. You may want to adjust it to 1600 or\n// 2400 for production.\nexport const MAX_IMAGE_DIM = 1024;\n\n// Linear dimensions of image preview: shrink image under this size for previews.\nexport const IMAGE_PREVIEW_DIM = 64;\n\n// Maximum number of online users to be shown in a topic title bar. Others will be\n// hidden under \"+X more\"\nexport const MAX_ONLINE_IN_TOPIC = 4;\n\n// Maximum length of user name, topic title, and private comment.\nexport const MAX_TITLE_LENGTH = 60;\n\n// Length of message previews in chat list, in characters.\nexport const MESSAGE_PREVIEW_LENGTH = 80;\n\n// Link for \"Contact Us\".\nexport const LINK_CONTACT_US = 'email:info@tinode.co';\n\n// Link to Privacy Policy.\nexport const LINK_PRIVACY_POLICY = 'https://tinode.co/privacy.html';\n\n// Link to Terms of Service.\nexport const LINK_TERMS_OF_SERVICE = 'https://tinode.co/terms.html';\n","// Context Menu: popup/dropdown menu.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { injectIntl, defineMessages } from 'react-intl';\n\nimport { REM_SIZE } from '../config.js';\nimport HashNavigation from '../lib/navigation.js';\n\nconst messages = defineMessages({\n  info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  },\n  clear_messages: {\n    id: 'menu_item_clear_messages',\n    defaultMessage: 'Clear messages',\n    description: 'Delete all messages'\n  },\n  clear_for_all: {\n    id: 'menu_item_clear_messages_for_all',\n    defaultMessage: 'Clear for All',\n    description: 'Delete all message(s) for all members'\n  },\n  delete: {\n    id: 'menu_item_delete',\n    defaultMessage: 'Delete',\n    description: 'Delete selected messages'\n  },\n  delete_for_all: {\n    id: 'menu_item_delete_for_all',\n    defaultMessage: 'Delete for All',\n    description: 'Delete selected message(s) for all members'\n  },\n  send_retry: {\n    id: 'menu_item_send_retry',\n    defaultMessage: 'Retry',\n    description: 'Retry sending message'\n  },\n  mute: {\n    id: 'menu_item_mute',\n    defaultMessage: 'Mute',\n    description: 'Turn off notifications'\n  },\n  unmute: {\n    id: 'menu_item_unmute',\n    defaultMessage: 'Unmute',\n    description: 'Turn notifications on'\n  },\n  topic_delete: {\n    id: 'menu_item_delete_topic',\n    defaultMessage: 'Delete',\n    description: 'Delete entire topic'\n  },\n  topic_delete_warning: {\n    id: 'topic_delete_warning',\n    defaultMessage: 'Are you sure you want to delete this conversation?',\n    description: 'Alert warning when deleting entire topic'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  unblock: {\n    id: 'menu_item_unblock',\n    defaultMessage: 'Unblock',\n    description: 'Unblock topic or user'\n  },\n  // Generic string suitable for either topic or user.\n  block: {\n    id: 'menu_item_block',\n    defaultMessage: 'Block',\n    description: 'Block topic or user'\n  },\n  topic_block_warning: {\n    id: 'topic_block_warning',\n    defaultMessage: 'Are you sure you want to block this conversation?',\n    description: 'Alert warning when blocking a topic.'\n  },\n  member_delete: {\n    id: 'menu_item_member_delete',\n    defaultMessage: 'Remove',\n    description: 'Remove user from topic'\n  },\n  archive: {\n    id: 'menu_item_archive_topic',\n    defaultMessage: 'Archive',\n    description: 'Move topic from the list of active chats to archive'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n});\n\nclass ContextMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const {formatMessage} = props.intl;\n\n    this.handlePageClick = this.handlePageClick.bind(this);\n    this.handleEscapeKey = this.handleEscapeKey.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n\n    // Preconfigured menu items.\n    this.MenuItems = {\n      'topic_info': {\n        id: 'topic_info',\n        title: formatMessage(messages.info),\n        handler: null\n      },\n      'messages_clear': {\n        id: 'messages_clear',\n        title: formatMessage(messages.clear_messages),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.menu_item_clear_messages), // title\n            formatMessage(messages.clear_messages_warning), // content\n            (() => { this.deleteMessages(true, false, params, errorHandler); }), // onConfirm\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'messages_clear_hard': {\n        id: 'messages_clear_hard',\n        title: formatMessage(messages.clear_for_all),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.menu_item_clear_messages_for_all), // title\n            formatMessage(message.delete_messages_warning), // content\n            (() => { return this.deleteMessages(true, true, params, errorHandler); }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'message_delete': {\n        id: 'message_delete',\n        title: formatMessage(messages.delete),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, false, params, errorHandler);\n        }\n      },\n      'message_delete_hard': {\n        id: 'message_delete_hard',\n        title: formatMessage(messages.delete_for_all),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, true, params, errorHandler);\n        }\n      },\n      'menu_item_send_retry': {\n        id: 'menu_item_send_retry',\n        title: formatMessage(messages.send_retry),\n        handler: (params, errorHandler) => {\n          return this.retryMessage(params, errorHandler);\n        }\n      },\n      'topic_unmute': {\n        id: 'topic_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'topic_mute': {\n        id: 'topic_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'topic_unblock': {\n        id: 'topic_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n      'topic_block': {\n        id: 'topic_block',\n        title: formatMessage(messages.block),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.block), // title\n            formatMessage(messages.topic_block_warning), // content\n            (() => {\n              return this.topicPermissionSetter('-JP', params, errorHandler).then((ctrl) => {\n                this.props.onTopicRemoved(params.topicName);\n                return ctrl;\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_delete': {\n        id: 'topic_delete',\n        title: formatMessage(messages.topic_delete),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.menu_item_delete_topic), // title\n            formatMessage(messages.topic_delete_warning), // content\n            (() => {\n              const topic = this.props.tinode.getTopic(params.topicName);\n              if (!topic) {\n                console.log(\"Topic not found: \", params.topicName);\n                return;\n              }\n              return topic.delTopic(true).catch((err) => {\n                if (errorHandler) {\n                  errorHandler(err.message, 'err');\n                }\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_archive': {\n        id: 'topic_archive',\n        title: formatMessage(messages.archive),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic) {\n            console.log(\"Topic not found: \", params.topicName);\n            return;\n          }\n          return topic.archive(true).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      // menu_item_edit_permissions is defined elsewhere.\n      'permissions': {\n        id: 'permissions',\n        title: formatMessage(messages.edit_permissions),\n        handler: null\n      },\n      'member_delete': {\n        id: 'member_delete',\n        title: formatMessage(messages.member_delete),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic || !params.user) {\n            console.log(\"Topic or user not found: '\" + params.topicName + \"', '\" + params.user + \"'\");\n            return;\n          }\n          return topic.delSubscription(params.user).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      'member_mute': {\n        id: 'member_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'member_unmute': {\n        id: 'member_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'member_block': {\n        id: 'member_block',\n        title: formatMessage(messages.block),\n        handler: this.topicPermissionSetter.bind(this, '-JP')\n      },\n      'member_unblock': {\n        id: 'member_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handlePageClick, false);\n    document.addEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handlePageClick, false);\n    document.removeEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  handlePageClick(e) {\n    if (ReactDOM.findDOMNode(this).contains(e.target)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n  }\n\n  handleEscapeKey(e) {\n    if (e.keyCode === 27) {\n      this.props.hide();\n    }\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n    let item = this.props.items[e.currentTarget.dataset.id];\n    if (typeof item == 'string') {\n      item = this.MenuItems[item];\n    }\n\n    if (!item) {\n      console.log(\"Invalid menu item ID\", e.currentTarget.dataset.id);\n    } else {\n      this.props.onAction(\n        item.id,\n        item.handler(this.props.params, this.props.onError),\n        this.props.params);\n    }\n  }\n\n  // Menu Actions\n\n  deleteMessages(all, hard, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found: \", params.topicName);\n      return;\n    }\n\n    // We don't know if the message is still pending (e.g. attachment is being uploaded),\n    // so try cancelling first. No harm if we can't cancel.\n    // The message can be cancelled if transmission to the server has not\n    // started yet or if the message send has failed.\n    if (!all && topic.cancelSend(params.seq)) {\n      return;\n    }\n    // Can't cancel. Delete instead.\n    const promise = all ?\n      topic.delMessagesAll(hard) :\n      topic.delMessagesList([params.seq], hard);\n\n    return promise.catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Retries sending failed message.\n  retryMessage(params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    // Remove the existing message entry.\n    if (!topic || !topic.flushMessage(params.seq)) {\n      return;\n    }\n    const msg = topic.createMessage(params.content, false);\n    return topic.publishDraft(msg).catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Function is used by context menu to set permissions.\n  topicPermissionSetter(mode, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found\", params.topicName);\n      return;\n    }\n\n    let result = topic.updateMode(params.user, mode);\n    if (errorHandler) {\n      result = result.catch((err) => {\n        errorHandler(err.message, 'err');\n      });\n    }\n    return result;\n  }\n\n  render() {\n    let count = 0;\n    let menu = [];\n    this.props.items.map((item) => {\n      if (typeof item == 'string') {\n        item = this.MenuItems[item];\n      }\n      if (item && item.title) {\n        menu.push(\n          item.title == '-' ?\n            <li className=\"separator\" key={count} />\n            :\n            <li onClick={this.handleClick} data-id={count} key={count}>{item.title}</li>\n        );\n      }\n      count++;\n    });\n\n    // Ensure that menu is inside the app-container.\n    const hSize = 12 * REM_SIZE;\n    const vSize = REM_SIZE * (0.7 + menu.length * 2.5);\n    const left = (this.props.bounds.right - this.props.clickAt.x < hSize) ?\n        (this.props.clickAt.x - this.props.bounds.left - hSize) :\n        (this.props.clickAt.x - this.props.bounds.left);\n    const top = (this.props.bounds.bottom - this.props.clickAt.y < vSize) ?\n        (this.props.clickAt.y - this.props.bounds.top - vSize) :\n        (this.props.clickAt.y - this.props.bounds.top);\n\n    const position = {\n      left: left + 'px',\n      top: top + 'px'\n    };\n\n    return (\n      <ul className=\"menu\" style={position}>\n        {menu}\n      </ul>\n    );\n  }\n}\n\nexport default injectIntl(ContextMenu);\n","// Short representation of time in the past.\nexport function shortDateFormat(then, locale) {\n  locale = locale || window.navigator.userLanguage || window.navigator.language;\n  const now = new Date();\n  if (then.getFullYear() == now.getFullYear()) {\n    // Same year.\n    if (then.getMonth() == now.getMonth() && then.getDate() == now.getDate()) {\n      // Same month and day, show time only.\n      return then.toLocaleTimeString(locale, {hour12: false, hour: '2-digit', minute: '2-digit'});\n    }\n    // Different month and/or day, show month day, time.\n    return then.toLocaleDateString(locale,\n      {hour12: false, month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit'});\n  }\n  // Different year: just show the date.\n  return then.toLocaleDateString(locale, {year: 'numeric', month: 'short', day: 'numeric'});\n}\n\n// Convert seconds to minutes:seconds, i.e. 156 sec -> 2:36.\nexport function secondsToTime(seconds) {\n  const min = Math.floor(seconds / 60);\n  let sec = seconds % 60;\n  sec = sec < 10 ? `0${sec}` : sec;\n  return `${min}:${sec}`;\n}\n\n// Convert a number of bytes to human-readable format.\nexport function bytesToHumanSize(bytes) {\n  if (!bytes || bytes == 0) {\n    return '0 Bytes';\n  }\n\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n  const bucket = Math.min(Math.floor(Math.log2(bytes) / 10) | 0, sizes.length-1);\n  const count = bytes / Math.pow(1024, bucket);\n  const round = bucket > 0 ? (count < 3 ? 2 : (count < 30 ? 1 : 0)) : 0;\n  return count.toFixed(round) + ' ' + sizes[bucket];\n}\n\n// Get 32 bit integer hash value for a string. Ideally it should produce the same value\n// as Java's String#hash().\nexport function stringHash(value) {\n  let hash = 0;\n  value = '' + value;\n  for (let i = 0; i < value.length; i++) {\n    hash = ((hash << 5) - hash) + value.charCodeAt(i);\n    hash = hash & hash; // Convert to 32bit integer\n  }\n  return hash;\n}\n","import React from 'react';\n\nimport Tinode from 'tinode-sdk';\n\nimport { stringHash } from '../lib/strformat.js';\n\nexport default class LetterTile extends React.PureComponent {\n  render() {\n    let avatar;\n    if (this.props.avatar === true) {\n      const isGroup = (Tinode.topicType(this.props.topic) == 'grp');\n      const iconColor = (isGroup ? 'light-color' : 'dark-color')\n        + (Math.abs(stringHash(this.props.topic)) % 16);\n      if (this.props.topic && this.props.title && this.props.title.trim()) {\n        const letter = this.props.title.trim().charAt(0);\n        const className = 'lettertile ' + iconColor;\n        avatar = (<div className={className}><div>{letter}</div></div>)\n      } else {\n        const className = 'material-icons ' + iconColor;\n        avatar = isGroup ?\n          <i className={className}>group</i> : <i className={className}>person</i>;\n      }\n    } else if (this.props.avatar) {\n      // If avatar image is invalid, show a placeholder.\n      avatar = <img className=\"avatar\" alt=\"avatar\" src={this.props.avatar}\n        onError={(e)=>{e.target.onerror = null; e.target.src=\"/img/broken_image.png\"}} />;\n    } else {\n      avatar = null;\n    }\n    return avatar;\n  }\n}\n","// File and image helper functions.\nimport { MAX_INBAND_ATTACHMENT_SIZE, MAX_IMAGE_DIM } from '../config.js';\nimport { bytesToHumanSize } from './strformat.js'\n\n// Supported image MIME types and corresponding file extensions.\nexport const SUPPORTED_IMAGE_FORMATS = ['image/jpeg', 'image/gif', 'image/png', 'image/svg', 'image/svg+xml'];\nexport const MIME_EXTENSIONS         = ['jpg',        'gif',       'png',       'svg',       'svg'];\n\n// Make a data URL from public.photo\nexport function makeImageUrl(photo) {\n  return (photo && photo.type && photo.data) ?\n    'data:image/' + photo.type + ';base64,' + photo.data : null;\n}\n\n// Calculate linear dimensions for scaling image down to fit under a certain size.\n// Returns an object which contains destination sizes, source sizes, and offsets\n// into source (when making square images).\nexport function fitImageSize(width, height, maxWidth, maxHeight, forceSquare) {\n  // Sanitize input\n  width = width | 0;\n  height = height | 0;\n  maxWidth = maxWidth | 0;\n  maxHeight = maxHeight | 0;\n\n  if (width <= 0 || height <= 0 || maxWidth <= 0 || maxHeight <= 0) {\n    return null;\n  }\n\n  if (forceSquare) {\n    maxWidth = maxHeight = Math.min(maxWidth, maxHeight);\n  }\n\n  let scale = Math.min(\n    Math.min(width, maxWidth) / width,\n    Math.min(height, maxHeight) / height\n  );\n\n  let size = {\n    dstWidth: (width * scale) | 0,\n    dstHeight: (height * scale) | 0,\n  };\n\n  if (forceSquare) {\n    // Also calculate parameters for making the image square.\n    size.dstWidth = size.dstHeight = Math.min(size.dstWidth, size.dstHeight);\n    size.srcWidth = size.srcHeight = Math.min(width, height);\n    size.xoffset = ((width - size.srcWidth) / 2) | 0;\n    size.yoffset = ((height - size.srcWidth) / 2) | 0;\n  } else {\n    size.xoffset = size.yoffset = 0;\n    size.srcWidth = width;\n    size.srcHeight = height;\n  }\n  return size;\n}\n\n// Ensure file's extension matches mime content type\nexport function fileNameForMime(fname, mime) {\n  const idx = SUPPORTED_IMAGE_FORMATS.indexOf(mime);\n  if (idx < 0 || !fname) {\n    // Unknown mime or empty name.\n    return fname;\n  }\n  const ext = MIME_EXTENSIONS[idx];\n\n  const at = fname.lastIndexOf('.');\n  if (at >= 0) {\n    fname = fname.substring(0, at);\n  }\n  return fname + '.' + ext;\n}\n\n// Scale uploaded image to fit under certain dimensions and byte size, optionally constraining to a square.\n// On success calls onSuccess callback with the scaled image as Blob.\nexport function imageScaled(fileOrBlob, maxWidth, maxHeight, maxSize, forceSquare, onSuccess, onError) {\n  const img = new Image();\n  img.crossOrigin = 'Anonymous';\n  img.onerror = function(err) {\n    onError(\"Image format unrecognized\");\n  }\n  img.onload = async function() {\n    // Once the image is loaded, the URL is no longer needed.\n    URL.revokeObjectURL(img.src);\n\n    // Calculate the desired image dimensions.\n    const dim = fitImageSize(this.width, this.height, maxWidth, maxHeight, forceSquare);\n    if (!dim) {\n      onError(\"Invalid image\");\n      return;\n    }\n    let canvas = document.createElement('canvas');\n    canvas.width = dim.dstWidth;\n    canvas.height = dim.dstHeight;\n    let ctx = canvas.getContext('2d');\n    ctx.imageSmoothingEnabled = true;\n    ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n      0, 0, dim.dstWidth, dim.dstHeight);\n\n    const mime = SUPPORTED_IMAGE_FORMATS.indexOf(fileOrBlob.type) < 0 ? 'image/jpeg' : fileOrBlob.type;\n    // Generate blob to check size of the image.\n    let blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    if (!blob) {\n      onError(\"Unsupported image format\");\n      return;\n    }\n\n    // Ensure the image is not too large. Shrink the image keeping the aspect ratio.\n    // Do nothing if maxsize is <= 0.\n    while (maxSize > 0 && blob.length > maxSize) {\n      dim.dstWidth = (dim.dstWidth * 0.70710678118) | 0;\n      dim.dstHeight = (dim.dstHeight * 0.70710678118) | 0;\n      canvas.width = dim.dstWidth;\n      canvas.height = dim.dstHeight;\n      ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n        0, 0, dim.dstWidth, dim.dstHeight);\n      blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    }\n\n    canvas = null;\n    onSuccess(blob, mime, dim.dstWidth, dim.dstHeight, fileNameForMime(fileOrBlob.name, mime));\n  };\n  img.src = URL.createObjectURL(fileOrBlob);\n}\n\n// Convert File to base64 string.\nexport function fileToBase64(file, onSuccess) {\n  const reader = new FileReader();\n  reader.addEventListener('load', function() {\n    onSuccess(file.type, reader.result.split(',')[1], file.name);\n  });\n  reader.readAsDataURL(file);\n}\n\n// Convert Blob to base64 string.\nexport function blobToBase64(blob, onSuccess) {\n  const reader = new FileReader();\n  reader.addEventListener('load', function() {\n    onSuccess(blob.type, reader.result.split(',')[1]);\n  });\n  reader.readAsDataURL(blob);\n}\n\n// File pasted from the clipboard. It's either an inline image or a file attachment.\n// FIXME: handle large files out of band.\nexport function filePasted(event, onImageSuccess, onAttachmentSuccess, onError) {\n  var items = (event.clipboardData || event.originalEvent.clipboardData || {}).items;\n  for (var i in items) {\n    var item = items[i];\n    if (item.kind === 'file') {\n      var file = item.getAsFile();\n      if (!file) {\n        console.log(\"Failed to get file object from pasted file item\", item.kind, item.type);\n        continue;\n      }\n      if (file.type && file.type.split('/')[0] == 'image') {\n        // Handle inline image\n        if (file.size > MAX_INBAND_ATTACHMENT_SIZE || SUPPORTED_IMAGE_FORMATS.indexOf(file.type) < 0) {\n          imageFileScaledToBase64(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, false, onImageSuccess, onError);\n        } else {\n          imageFileToBase64(file, onImageSuccess, onError);\n        }\n      } else {\n        // Handle file attachment\n        fileToBase64(file, onAttachmentSuccess, onError)\n      }\n      // Indicate that the pasted data contains a file.\n      return true;\n    }\n  }\n  // No file found.\n  return false;\n}\n\n// Get mime type from data URL header.\nexport function getMimeType(header) {\n  var mime = /^data:(image\\/[-+a-z0-9.]+);base64/.exec(header);\n  return (mime && mime.length > 1) ? mime[1] : null;\n}\n\n// Given length of a binary object in bytes, calculate the length after\n// base64 encoding.\nexport function base64EncodedLen(n) {\n  return Math.floor((n + 2) / 3) * 4;\n}\n\n// Given length of a base64-encoded object, calculate decoded size of the\n// pbject in bytes.\nexport function base64DecodedLen(n) {\n  return Math.floor(n / 4) * 3;\n}\n\n// Re-encode string to standard base64 encoding with padding.\n// The string may be base64-URL encoded without the padding.\nexport function base64ReEncode(str) {\n  if (str) {\n    str = str.replace(/-/g, '+').replace(/_/g, '/');\n    try {\n      str = btoa(atob(str));\n    } catch(err) {\n      console.log(\"Failed to base64 re-encode string.\", err);\n      str = null;\n    }\n  }\n  return str;\n}\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\n\nimport { AVATAR_SIZE, MAX_EXTERN_ATTACHMENT_SIZE } from '../config.js';\nimport { imageScaled, blobToBase64, makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class AvatarUpload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dataUrl: props.avatar\n    };\n\n    this.handleFileUpload = this.handleFileUpload.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.avatar != prevProps.avatar) {\n      this.setState({dataUrl: this.props.avatar})\n    }\n  }\n\n  handleFileUpload(e) {\n    imageScaled(e.target.files[0], AVATAR_SIZE, AVATAR_SIZE, MAX_EXTERN_ATTACHMENT_SIZE, true,\n      // Image successfully scaled and converted.\n      (mime, blob) => {\n        // Convert blob to base64-encoded bits.\n        blobToBase64(blob, (unused, base64bits) => {\n          const du = makeImageUrl({data: base64bits, type: mime});\n          this.setState({dataUrl: du});\n          this.props.onImageChanged(du);\n        });\n      },\n      // Failure\n      (err) => {\n        this.props.onError(err, 'err');\n      });\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  render() {\n    // Randomize id value in case more than one AvatarUpload is shown\n    // at the same time.\n    const randId = 'file-input-avatar-' + (Math.random() + '').substr(2);\n    const className = 'avatar-upload' + (this.props.readOnly ? ' read-only' : '');\n    return (\n      <div className={className}>\n        {this.props.readOnly || !this.state.dataUrl ?\n          null :\n          <a href=\"#\" className=\"clear-avatar\" onClick={(e) => {e.preventDefault(); this.props.onImageChanged(null);}}>\n            <i className=\"material-icons\">clear</i>\n          </a>}\n        {this.state.dataUrl ?\n          <img src={this.state.dataUrl} className=\"preview\" /> :\n          this.props.readOnly && this.props.uid ?\n            <div className=\"avatar-box\">\n              <LetterTile\n                avatar={true}\n                topic={this.props.uid}\n                title={this.props.title} />\n            </div>\n            :\n            <div className=\"blank\">{AVATAR_SIZE}&times;{AVATAR_SIZE}</div>}\n        {this.props.readOnly ? null :\n          <input type=\"file\" id={randId} className=\"inputfile hidden\"\n            accept=\"image/*\" onChange={this.handleFileUpload} />}\n        {this.props.readOnly ? null :\n        <label htmlFor={randId} className=\"round\">\n          <i className=\"material-icons\">file_upload</i>\n        </label>}\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\n/* BEGIN CheckBox: styled checkbox */\nexport default class CheckBox extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange() {\n    this.props.onChange(this.props.name, !this.props.checked);\n  }\n\n  render() {\n    return (\n      this.props.onChange ? (\n        this.props.checked ?\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box</i> :\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box_outline_blank</i>\n        ) : (\n          this.props.checked ?\n            <i className=\"material-icons\">check_box</i> :\n            <i className=\"material-icons\">check_box_outline_blank</i>\n        )\n    );\n  }\n}\n/* END CheckBox */\n","import React from 'react';\n\nconst icon_mapping = {'muted': 'notifications_off', 'banned': 'block'};\n\n/* Contact's labels: [you], or icons [muted], [blocked] */\nexport default class ContactBadges extends React.PureComponent {\n    render() {\n      let badges = null;\n      if (this.props.badges && this.props.badges.length > 0) {\n        badges = [];\n        this.props.badges.map(function(b) {\n          if (b.icon) {\n            badges.push(<i className=\"material-icons as-badge\" key={b.key || b.icon}>{icon_mapping[b.icon]}</i>);\n          } else {\n            const style = 'badge' + (b.color ? ' ' + b.color : '');\n            badges.push(<span className={style} key={b.key || b.name}>{b.name}</span>);\n          }\n        });\n        return <>{badges}</>;\n      }\n      return null;\n    }\n};\n","// Odds and ends\n\nimport Tinode from 'tinode-sdk';\n\n// Make shortcut icon appear with a green dot + show unread count in title.\nexport function updateFavicon(count) {\n  const oldIcon = document.getElementById('shortcut-icon');\n  const head = document.head || document.getElementsByTagName('head')[0];\n  const newIcon = document.createElement('link');\n  newIcon.type = 'image/png';\n  newIcon.id = 'shortcut-icon';\n  newIcon.rel = 'shortcut icon';\n  newIcon.href = 'img/logo32x32' + (count > 0 ? 'a' : '') + '.png';\n  if (oldIcon) {\n    head.removeChild(oldIcon);\n  }\n  head.appendChild(newIcon);\n\n  document.title = (count > 0 ? '('+count+') ' : '') + 'Tinode';\n}\n\n// Create VCard which represents topic 'public' info\nexport function vcard(fn, imageDataUrl) {\n  let card = null;\n\n  if ((fn && fn.trim()) || imageDataUrl) {\n    card = {};\n    if (fn) {\n      card.fn = fn.trim();\n    }\n    if (imageDataUrl) {\n      const dataStart = imageDataUrl.indexOf(',');\n      card.photo = dataStart >= 0 ? {\n        data: imageDataUrl.substring(dataStart+1),\n        type: 'jpg'\n      } : imageDataUrl;\n    }\n  }\n  return card;\n}\n\n// Deep-shallow compare two arrays: shallow compare each element.\nexport function arrayEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (!Array.isArray(a) || !Array.isArray(b)) {\n    return false;\n  }\n\n  // Compare lengths first.\n  if (a.length != b.length) {\n    return false;\n  }\n  // Order of elements is ignored.\n  a.sort();\n  b.sort();\n  for (let i = 0, l = a.length; i < l; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Checks (loosely) if the given string is a phone. If so, returns the phone number in a format\n// as close to E.164 as possible.\nexport function asPhone(val) {\n  val = val.trim();\n  if (/^(?:\\+?(\\d{1,3}))?[- (.]*(\\d{3})[- ).]*(\\d{3})[- .]*(\\d{2})[- .]*(\\d{2})?$/.test(val)) {\n    return val.replace(/[- ().]*/, '');\n  }\n  return null;\n}\n\n// Checks (loosely) if the given string is an email. If so returns the email.\nexport function asEmail(val) {\n  val = val.trim();\n  if (/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(val)) {\n    return val;\n  }\n  return null;\n}\n\n// Checks if URL is a relative url, i.e. has no 'scheme://', including the case of missing scheme '//'.\n// The scheme is expected to be RFC-compliant, e.g. [a-z][a-z0-9+.-]*\n// example.html - ok\n// https:example.com - not ok.\n// http:/example.com - not ok.\n// ' ↲ https://example.com' - not ok. (↲ means carriage return)\nexport function isUrlRelative(url) {\n  return url && !/^\\s*([a-z][a-z0-9+.-]*:|\\/\\/)/im.test(url);\n}\n\n// Ensure URL does not present an XSS risk. Optional allowedSchemes may contain an array of\n// strings with permitted URL schemes, such as ['ftp', 'ftps']; otherwise accept http and https only.\n// If apikey and/or token is defined, it's appended to relative URL.\nexport function sanitizeUrl(url, allowedSchemes) {\n  if (!url) {\n    return null;\n  }\n\n  // Strip control characters and whitespace. They are not valid URL characters anyway.\n  url = url.replace(/[^\\x20-\\x7E]/gmi, '').trim();\n\n  // Relative URLs are safe.\n  // Relative URL does not start with ':', abcd123: or '//'.\n  if (!/^([a-z][a-z0-9+.-]*:|\\/\\/)/i.test(url)) {\n    return url;\n  }\n\n  // Blob URLs are safe.\n  if (/^blob:http/.test(url)) {\n    return url;\n  }\n\n  // Absolute URL. Accept only safe schemes, or no scheme.\n  const schemes = Array.isArray(allowedSchemes) ? allowedSchemes.join('|') : 'http|https';\n  const re = new RegExp('^((' + schemes + '):|//)', 'i');\n  if (!re.test(url)) {\n    return null;\n  }\n\n  return url;\n}\n\n// Ensure URL is suitable for <img src=\"url\"> field: the URL must be a relative URL or\n// have http:, https:, blob: or data: scheme.\n// The relative URL is appended with the API key and/or auth token.\n// In case of data: scheme, the URL must start with a 'data:image/XXXX;base64,'.\nexport function sanitizeImageUrl(url) {\n  if (!url) {\n    return null;\n  }\n\n  const sanitizedUrl = sanitizeUrl(url);\n  if (sanitizedUrl) {\n    return sanitizedUrl;\n  }\n\n  // Is this a data: URL of an image?\n  if (/data:image\\/[a-z0-9.-]+;base64,/i.test(url.trim())) {\n    return url;\n  }\n\n  return null;\n}\n\n// Given message's received status, return name and color of a delivery indicator icon.\nexport function deliveryMarker(received) {\n  switch (received) {\n    case Tinode.MESSAGE_STATUS_SENDING:\n      return { name: 'access_time' }; // watch face\n    case Tinode.MESSAGE_STATUS_FAILED:\n      return { name: 'warning', color: 'amber' }; // yellow icon /!\\\n    case Tinode.MESSAGE_STATUS_SENT:\n      return { name: 'done' }; // checkmark\n    case Tinode.MESSAGE_STATUS_RECEIVED:\n      return { name: 'done_all' }; // double checkmark\n    case Tinode.MESSAGE_STATUS_READ:\n      return { name: 'done_all', color: 'blue' }; // blue double checkmark\n  }\n  return null;\n}\n","// Received/read indicator.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { shortDateFormat } from '../lib/strformat.js';\nimport { deliveryMarker } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  message_sending: {\n    id: 'message_sending',\n    defaultMessage: 'sending...',\n    description: 'Message being sent, in place of time stamp'\n  },\n  message_sending_failed: {\n    id: 'message_sending_failed',\n    defaultMessage: 'failed',\n    description: 'Failed to send message, in place of time stamp'\n  }\n});\n\nclass ReceivedMarker extends React.PureComponent {\n  render() {\n    const {formatMessage} = this.props.intl;\n    let timestamp;\n    if (this.props.received <= Tinode.MESSAGE_STATUS_SENDING) {\n      timestamp = formatMessage(messages.message_sending);\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_FAILED) {\n      timestamp = formatMessage(messages.message_sending_failed);\n    } else {\n      timestamp = shortDateFormat(this.props.timestamp, this.props.intl.locale);\n    }\n\n    const icon = deliveryMarker(this.props.received);\n    const marker = icon ? <i className={'material-icons small ' + icon.color}>{icon.name}</i> : null;\n\n    return (\n      <span className=\"timestamp\">\n        {timestamp}{'\\u00a0'}{marker}\n      </span>\n    );\n  }\n};\n\nexport default injectIntl(ReceivedMarker);\n","// The counter of unread messages in the topic.\nimport React from 'react';\n\nexport default class UnreadBadge extends React.PureComponent {\n  render() {\n    return (this.props.count > 0 ?\n      <span className=\"unread\">{this.props.count > 9 ? \"9+\" : this.props.count}</span>\n      : null);\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport ContactBadges from './contact-badges.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\nimport UnreadBadge from './unread-badge.jsx';\n\nimport { Drafty } from 'tinode-sdk';\n\nimport { deliveryMarker } from '../lib/utils.js';\n\nexport default class Contact extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.props.onSelected) {\n      // Index this.props.index is used by GroupManager.\n      this.props.onSelected(this.props.item, this.props.index);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.props.item, y: e.pageY, x: e.pageX });\n  }\n\n  render() {\n    let title = this.props.title;\n    if (!title) {\n      title = <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n        description=\"Title shown when the topic has no name\" /></i>;\n    } else if (title.length > 30) {\n      // FIXME: this is probably wrong for RTL languages.\n      title = title.substring(0, 28) + '…';\n    }\n    const online = this.props.now ? 'online' : 'offline';\n    const avatar = this.props.avatar ? this.props.avatar : true;\n    const badges = this.props.badges ? this.props.badges.slice() : [];\n    const icon_badges = [];\n    if (this.props.acs) {\n      if (this.props.showMode) {\n        badges.push({name: this.props.acs.getMode(), key: 'mode'});\n      }\n      if (this.props.acs.isMuted()) {\n        icon_badges.push({icon: 'muted'});\n      }\n      if (!this.props.acs.isJoiner()) {\n        icon_badges.push({icon: 'banned'});\n      }\n    }\n\n    const subtitle = this.props.preview ?\n      (typeof this.props.preview == 'string' ? this.props.preview :\n        React.createElement(React.Fragment, null, Drafty.format(this.props.preview, draftyFormatter, this))) :\n      this.props.comment;\n\n    const icon = deliveryMarker(this.props.received);\n    const marker = icon ? <i className={'material-icons small space-right ' + icon.color}>{icon.name}</i> : null;\n\n    return (\n      <li className={!this.props.showCheckmark && this.props.selected ? 'selected' : null} onClick={this.handleClick}>\n        <div className=\"avatar-box\">\n          <LetterTile\n            avatar={avatar}\n            title={this.props.title}\n            topic={this.props.item} />\n          {this.props.showOnline ? <span className={online} /> :\n            (this.props.showCheckmark && this.props.selected ?\n            <i className=\"checkmark material-icons\">check_circle</i>\n            : null)}\n        </div>\n        <div className=\"text-box\">\n          <div><span className=\"contact-title\">{title}</span>\n            {this.props.isChannel ? <img src=\"/img/channel.png\" className=\"channel\" alt=\"channel\" /> : null}\n            <UnreadBadge count={this.props.unread} /><ContactBadges badges={icon_badges} />\n          </div>\n          <div className=\"contact-comment\">{marker}{subtitle || '\\u00A0'}</div>\n          <span><ContactBadges badges={badges} /></span>\n        </div>\n        {this.props.showContextMenu ?\n          <span className=\"menuTrigger\">\n            <a href=\"#\" onClick={this.handleContextClick}>\n              <i className=\"material-icons\">expand_more</i>\n            </a>\n          </span> : null}\n      </li>\n    );\n  }\n};\n\n\n// Converts Drafty object into a one-line preview.\nfunction draftyFormatter(style, data, values, key) {\n  let el = Drafty.tagName(style);\n  const attr = { key: key };\n  if (el) {\n    switch (style) {\n      case 'HL':\n        // Make highlight less prominent in preview.\n        attr.className = 'highlight preview';\n        break;\n      case 'LN':\n        // Disable links in previews.\n        el = 'span';\n        break;\n      case 'IM':\n        // Replace image with '[icon] Image'.\n        el = React.Fragment;\n        values = [<i className=\"material-icons\">photo</i>, 'Picture'];\n        break;\n      case 'BN':\n        el = 'span';\n        attr.className = 'flat-button faux';\n        break;\n      case 'FM':\n        el = React.Fragment;\n        values = [<i className=\"material-icons\">dashboard</i>, 'Form:'];\n        break;\n      case 'RW':\n        el = React.Fragment;\n        break;\n      case 'EX':\n        el = React.Fragment;\n        values = [<i className=\"material-icons\">attachment</i>, 'Attachment'];\n        break;\n      default:\n        if (el == '_UNKN') {\n          el = React.Fragment;\n          values = [<i className=\"material-icons\">extension</i>];\n        }\n        break;\n    }\n    return React.createElement(el, attr, values);\n  } else {\n    return values;\n  }\n};\n","// A panel included into a list of contacts with an action text.\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\n\nclass ContactAction extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.onAction(this.props.action);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <li onClick={this.handleClick} className=\"action\">\n        <div className=\"action-text\">{formatMessage(this.props.title, this.props.values)}</div>\n      </li>\n    );\n  }\n};\n\nexport default injectIntl(ContactAction);\n","// ContactList: component for showing a list of contacts,\n// such as a list of group members in a group chat.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { Drafty } from 'tinode-sdk';\nimport Tinode from 'tinode-sdk';\n\nimport Contact from './contact.jsx';\nimport ContactAction from './contact-action.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nimport { MESSAGE_PREVIEW_LENGTH } from '../config.js';\n\nconst messages = defineMessages({\n  badge_you: {\n    id: 'badge_you',\n    defaultMessage: 'you',\n    description: 'Badge for indicating the current user'\n  },\n  badge_owner: {\n    id: 'badge_owner',\n    defaultMessage: 'owner',\n    description: 'Badge for indicating the owner'\n  }\n});\n\nclass ContactList extends React.Component {\n  render() {\n    const { formatMessage } = this.props.intl;\n    const showCheckmark = Array.isArray(this.props.topicSelected);\n    const contactNodes = [];\n    let contactsCount = 0;\n    if (this.props.contacts && this.props.contacts.length > 0) {\n      this.props.contacts.map((c) => {\n        if (c.action) {\n          // Action item\n          contactNodes.push(\n            <ContactAction\n              title={c.title} action={c.action} values={c.values}\n              key={c.action}\n              onAction={this.props.onAction}\n              />);\n        } else {\n          // Normal contact\n          const key = this.props.showMode ? c.user : (c.topic || c.user);\n          // If filter function is provided, filter out the items\n          // which don't satisfy the condition.\n          if (this.props.filterFunc && this.props.filter) {\n            let content = [key];\n            if (c.private && c.private.comment) {\n              content.push(('' + c.private.comment).toLowerCase());\n            }\n            if (c.public && c.public.fn) {\n              content.push(('' + c.public.fn).toLowerCase());\n            }\n            if (!this.props.filterFunc(this.props.filter, content)) {\n              return;\n            }\n          }\n\n          const isChannel = Tinode.isChannelTopicName(key);\n          const selected = showCheckmark ?\n            (this.props.topicSelected.indexOf(key) > -1) :\n            (this.props.topicSelected === key);\n          const badges = [];\n          if (this.props.showMode) {\n            if (key == this.props.myUserId) {\n              badges.push({name: formatMessage(messages.badge_you), color: 'green'});\n            }\n            if (c.acs && c.acs.isOwner()) {\n              badges.push({name: formatMessage(messages.badge_owner), color: 'blue'});\n            }\n          }\n\n          const comment = Array.isArray(c.private) ?\n            c.private.join(',') : (c.private ? c.private.comment : null);\n          let preview;\n          let deliveryStatus;\n          if (!this.props.showMode) {\n            const msg = c.latestMessage();\n            if (msg) {\n              deliveryStatus = msg._status || c.msgStatus(msg, true);\n              preview = typeof msg.content == 'string' ?\n                msg.content.substr(0, MESSAGE_PREVIEW_LENGTH) :\n                Drafty.preview(msg.content, MESSAGE_PREVIEW_LENGTH);\n            }\n          }\n          contactNodes.push(\n            <Contact\n              title={c.public ? c.public.fn : null}\n              avatar={makeImageUrl(c.public ? c.public.photo : null)}\n              comment={comment}\n              preview={preview}\n              received={deliveryStatus}\n              unread={this.props.showUnread ? c.unread : 0}\n              now={c.online && this.props.connected}\n              acs={c.acs}\n              showMode={this.props.showMode}\n              badges={badges}\n              showCheckmark={showCheckmark}\n              selected={selected}\n              showOnline={this.props.showOnline && !isChannel}\n              isChannel={isChannel}\n              onSelected={this.props.onTopicSelected}\n              showContextMenu={this.props.showContextMenu}\n              item={key}\n              index={contactNodes.length}\n              key={key} />\n          );\n          contactsCount ++;\n        }\n      }, this);\n    }\n\n    return (\n      <div className={this.props.noScroll ? null : \"scrollable-panel\"}>\n        {contactsCount == 0 ?\n          <div className=\"center-medium-text\"\n            dangerouslySetInnerHTML={{__html: this.props.emptyListMessage}} />\n          :\n          null\n        }\n        {contactNodes.length > 0 ?\n          <ul className=\"contact-box\">\n            {contactNodes}\n          </ul>\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ContactList);\n","// The X menu to be displayed in title bars.\nimport React from 'react';\n\nexport default class MenuCancel extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n        <i className=\"material-icons\">close</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nimport MenuCancel from './menu-cancel.jsx';\n\nexport default class ErrorPanel extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      show: false,\n    };\n\n    this.hide = this.hide.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.level !== this.props.level) {\n      this.setState({\n        show: !(!this.props.level)\n      });\n    }\n  }\n\n  hide() {\n    this.setState({show: false});\n    if (this.props.onClearError) {\n      this.props.onClearError();\n    }\n  }\n\n  render() {\n    const icons = {err: 'error', warn: 'warning', info: 'info'}\n    const level = icons[this.props.level] || '';\n    const className = 'info-box ' + level;\n    return (\n      <div className={className}>\n        <div className=\"icon\"><i className=\"material-icons\">{level}</i></div>\n        <span>\n          {this.props.text}\n          {this.props.action ?\n            <>\n              &#32;<a href=\"#\"\n                style={{ whiteSpace: 'nowrap' }}\n                onClick={(e) => {e.preventDefault(); this.props.action();}}>\n                {this.props.actionText}\n              </a>\n            </>\n          : null}\n        </span>\n        <div className=\"cancel\"><MenuCancel onCancel={this.hide} /></div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\n\nexport default class Chip extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel(this.props.topic, this.props.index);\n  }\n\n  render() {\n    const title = this.props.title || this.props.topic;\n    const className = this.props.invalid ? 'chip invalid' : 'chip';\n    return (\n      <div className={className}>\n        {this.props.noAvatar ?\n          <span className=\"spacer\" /> :\n          <div className=\"avatar-box\">\n            <LetterTile\n              avatar={this.props.avatar || true}\n              topic={this.props.topic}\n              title={this.props.title} />\n          </div>\n        }\n        <span>{title}</span>\n        {this.props.onCancel && !this.props.required ?\n          <a href=\"#\" onClick={this.handleCancel} >&times;</a>\n          : <span className=\"spacer\" />}\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport Chip from './chip.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n/* BEGIN ChipInput: group membership widget */\nexport default class ChipInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = ChipInput.deriveStateFromProps(props);\n    this.state.input = '';\n    this.state.focused = false;\n\n    this.handleTextInput = this.handleTextInput.bind(this);\n    this.removeChipAt = this.removeChipAt.bind(this);\n    this.handleChipCancel = this.handleChipCancel.bind(this);\n    this.handleFocusGained = this.handleFocusGained.bind(this);\n    this.handleFocusLost = this.handleFocusLost.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  static deriveStateFromProps(props) {\n    return {\n      placeholder: props.chips ? '' : props.prompt,\n      sortedChips: ChipInput.sortChips(props.chips, props.staticMembers),\n      chipIndex: ChipInput.indexChips(props.chips)\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chips != this.props.chips ||\n      prevProps.staticMembers != this.props.staticMembers ||\n      prevProps.prompt != this.props.prompt) {\n      this.setState(ChipInput.deriveStateFromProps(this.props));\n    }\n    if (!prevState || this.props.chips.length > prevState.sortedChips.length) {\n      this.setState({input: ''});\n    }\n  }\n\n  // Map chip index to user name\n  static indexChips(chips) {\n    const index = {};\n    let count = 0;\n    chips.map((item) => {\n      index[item.user] = count;\n      count ++;\n    });\n    return index;\n  }\n\n  // Have non-removable chips appear before all other chips.\n  static sortChips(chips, keep) {\n    const required = [];\n    const normal = [];\n    chips.map((item) => {\n      if (keep && keep.includes(item.user)) {\n        required.push(item);\n      } else {\n        normal.push(item);\n      }\n    });\n    return required.concat(normal);\n  }\n\n  handleTextInput(e) {\n    this.setState({input: e.target.value});\n    if (this.props.filterFunc) {\n      this.props.filterFunc(e.target.value);\n    }\n  }\n\n  removeChipAt(idx) {\n    const removed = this.state.sortedChips[idx];\n    this.props.onChipRemoved(removed.user, this.state.chipIndex[removed.user]);\n  }\n\n  handleChipCancel(item, idx) {\n    this.removeChipAt(idx);\n  }\n\n  handleFocusGained() {\n    this.setState({focused: true});\n  }\n\n  handleFocusLost() {\n    this.setState({focused: false});\n    if (this.props.onFocusLost) {\n      this.props.onFocusLost(this.state.input);\n    }\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Backspace') {\n      if (this.state.input.length == 0 && this.state.sortedChips.length > 0) {\n        const at = this.state.sortedChips.length - 1;\n        if (this.state.sortedChips[at].user !== this.props.staticMembers) {\n          this.removeChipAt(at);\n        }\n      }\n    } else if (e.key === 'Enter') {\n      if (this.props.onEnter) {\n        this.props.onEnter(this.state.input);\n      }\n    } else if (e.key === 'Escape') {\n      if (this.props.onCancel) {\n        this.props.onCancel();\n      }\n    }\n  }\n\n  render() {\n    const chips = [];\n    let count = 0;\n    const staticMembers = this.props.staticMembers || [];\n    this.state.sortedChips.map((item) => {\n      chips.push(\n        <Chip\n          onCancel={this.handleChipCancel}\n          avatar={makeImageUrl(item.public ? item.public.photo : null)}\n          title={item.public ? item.public.fn : undefined}\n          noAvatar={this.props.avatarDisabled}\n          topic={item.user}\n          required={staticMembers.includes(item.user)}\n          invalid={item.invalid}\n          index={count}\n          key={item.user} />\n      );\n      count++;\n    });\n    const className = \"chip-input\" + (this.state.focused ? ' focused' : '');\n    return (\n      <div className={className}>\n        {chips}\n        <input type=\"text\"\n          placeholder={this.state.placeholder}\n          onChange={this.handleTextInput}\n          onFocus={this.handleFocusGained}\n          onBlur={this.handleFocusLost}\n          onKeyDown={this.handleKeyDown}\n          value={this.state.input}\n          autoFocus />\n      </div>\n    );\n  }\n};\n","// GroupMembers: control for managing a list of group members.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\nimport ContactList from './contact-list.jsx';\n\nconst messages = defineMessages({\n  no_contacts: {\n    id: 'no_contacts',\n    defaultMessage: 'You have no contacts :-(',\n    description: 'Shown in ContactsView when the user has no contacts'\n  },\n  contacts_not_found_short: {\n    id: 'contacts_not_found_short',\n    defaultMessage: \"No contacts match ''{query}''\",\n    description: 'Shown in ContactsView when search returned no results'\n  }\n});\n\nclass GroupManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Array of topic members\n      members: props.members,\n      index: GroupManager.indexMembers(props.members),\n      staticMembers: GroupManager.staticMembers(props.members, props.keepInitialMembers, props.requiredMember),\n      contactFilter: '',\n      noContactsMessage: props.intl.formatMessage(messages.no_contacts),\n      selectedContacts: GroupManager.selectedContacts(props.members)\n    };\n\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleMemberRemoved = this.handleMemberRemoved.bind(this);\n    this.handleContactFilter = this.handleContactFilter.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static indexMembers(members) {\n    let index = {};\n    members.map((m) => {\n      index[m.user] = {delta: 0, present: true}; // Delta: 0 unchanged, +1 added, -1 removed\n    });\n    return index;\n  }\n\n  static staticMembers(members, keepInitial, requiredMember) {\n    let stat = [];\n    members.map((m) => {\n      if (keepInitial || m.user == requiredMember) {\n        stat.push(m.user);\n      }\n    });\n    return stat;\n  }\n\n  static selectedContacts(members) {\n    let sel = [];\n    members.map((m) => {\n      sel.push(m.user);\n    });\n    return sel;\n  }\n\n  handleContactSelected(userId, index) {\n    let status = this.state.index[userId];\n    if (status) {\n      if (status.present) {\n        // Prevent duplicate members\n        return;\n      }\n      status.delta += 1;\n      status.present = true;\n    } else {\n      status = {delta: 1, present: true};\n    }\n\n    let m = this.state.members.slice();\n    m.push(this.props.contacts[index]);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleMemberRemoved(userId, index) {\n    const status = this.state.index[userId];\n    if (!status || !status.present) {\n      return;\n    }\n    status.present = false;\n    status.delta -= 1;\n\n    let m = this.state.members.slice();\n    m.splice(index, 1);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleContactFilter(val) {\n    const {formatMessage} = this.props.intl;\n    const msg = !val ?\n      formatMessage(messages.no_contacts) :\n      formatMessage(messages.contacts_not_found_short, {query: val});\n\n    this.setState({contactFilter: val, noContactsMessage: msg});\n  }\n\n  static doContactFiltering(filter, values) {\n    if (filter) {\n      for (let i=0; i<values.length; i++) {\n        if (values[i].indexOf(filter) >= 0) {\n          return true;\n        }\n      }\n      return false;\n    }\n    return true;\n  }\n\n  handleSubmit() {\n    var instance = this;\n    var members = [];\n    var added = [];\n    var removed = [];\n\n    var keys = Object.keys(this.state.index);\n    keys.map(function(k) {\n      if (instance.state.index[k].present) {\n        members.push(k);\n      }\n\n      if (instance.state.index[k].delta > 0) {\n        added.push(k);\n      } else if (instance.state.index[k].delta < 0) {\n        removed.push(k);\n      }\n    });\n    this.props.onSubmit(members, added, removed);\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <div id=\"group-manager\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_group_members\" defaultMessage=\"Group Members\" description=\"Section title\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ChipInput\n            chips={this.state.members}\n            staticMembers={this.state.staticMembers}\n            prompt=\"add members\"\n            filterFunc={this.handleContactFilter}\n            onChipRemoved={this.handleMemberRemoved} />\n        </div>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_all_contacts\" defaultMessage=\"All Contacts\"\n              description=\"Section title [All Contacts]\" />\n          </label>\n        </div>\n        <ContactList\n          contacts={this.props.contacts}\n          myUserId={this.props.myUserId}\n          topicSelected={this.state.selectedContacts}\n          filter={this.state.contactFilter}\n          filterFunc={GroupManager.doContactFiltering}\n          emptyListMessage={this.state.noContactsMessage}\n          showOnline={false}\n          showUnread={false}\n          onTopicSelected={this.handleContactSelected} />\n        <div id=\"group-manager-buttons\" className=\"panel-form-row\">\n          <button className=\"blue\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n          <button className=\"white\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(GroupManager);\n","// Password with a visiblity toggle.\nimport React from 'react';\n\nexport default class VisiblePassword extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: this.props.value,\n      visible: false\n    };\n\n    this.handleVisibility = this.handleVisibility.bind(this);\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n    if (this.props.onChange) {\n      this.props.onChange(e);\n    }\n  }\n\n  handleVisibility(e) {\n    e.preventDefault();\n    this.setState({visible: !this.state.visible});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode == 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, visible: false});\n      if (this.props.onFinished) {\n        this.props.onFinished();\n      }\n    } else if (e.keyCode == 13) {\n      // Enter pressed\n      this.handleEditingFinished();\n    }\n  }\n\n  handleEditingFinished(e) {\n    if (e) {\n      let currentTarget = e.currentTarget;\n      setTimeout(() => {\n        if (!currentTarget.contains(document.activeElement)) {\n          if (this.props.onFinished) {\n            this.props.onFinished(this.state.value);\n          }\n        }\n      }, 0);\n    } else if (this.props.onFinished) {\n      this.props.onFinished(this.state.value.trim());\n    }\n  }\n\n  render() {\n    return (\n      <div tabIndex=\"-1\" className=\"group-focus\"\n        onBlur={this.handleEditingFinished}>\n        <input className=\"with-visibility\"\n          type={this.state.visible ? \"text\" : \"password\"}\n          value={this.state.value}\n          placeholder={this.props.placeholder}\n          required={this.props.required ? 'required' : ''}\n          autoFocus={this.props.autoFocus ? 'autoFocus' : ''}\n          autoComplete={this.props.autoComplete}\n          onChange={this.handeTextChange}\n          onKeyDown={this.handleKeyDown} />\n        <span onClick={this.handleVisibility}>\n          <i className=\"material-icons clickable light-gray\">\n            {this.state.visible ? 'visibility' : 'visibility_off'}\n          </i>\n        </span>\n      </div>\n    );\n  }\n}\n","// In-place text editor. Shows text with an icon which toggles it into an input field.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport VisiblePassword from './visible-password.jsx';\n\nexport default class InPlaceEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      active: props.active,\n      initialValue: props.value || '',\n      value: props.value || ''\n    };\n\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleStartEditing = this.handleStartEditing.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n    this.handlePasswordFinished = this.handlePasswordFinished.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // If text has changed while in read mode, update text and discard changes.\n    // Ignore update if in edit mode.\n    const newValue = this.props.value || '';\n    if (prevState.initialValue != newValue && !prevState.active) {\n      this.setState({\n        initialValue: newValue,\n        value: newValue\n      });\n    }\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, active: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleEditingFinished(e);\n    }\n  }\n\n  handleStartEditing() {\n    if (!this.props.readOnly) {\n      ReactDOM.findDOMNode(this).focus();\n      this.setState({active: true});\n    }\n  }\n\n  handleEditingFinished(event) {\n    if (this.props.required && !event.target.checkValidity()) {\n      // Empty input\n      this.setState({value: this.props.value, active: false});\n      return;\n    }\n    this.setState({active: false});\n    let value = this.state.value.trim();\n    if ((value || this.props.value) && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  handlePasswordFinished(value) {\n    this.setState({active: false});\n    if (value && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  render() {\n    if (this.state.active) {\n      var fieldType = this.props.type || 'text';\n    } else {\n      var spanText = this.props.type == 'password' ? '••••••••' : this.state.value;\n      var spanClass = 'in-place-edit' +\n        (this.props.readOnly ? ' disabled' : '');\n      if (!spanText) {\n        spanText = this.props.placeholder;\n        spanClass += ' placeholder';\n      }\n      if (spanText.length > 20) {\n        // FIXME: this is wrong for RTL languages.\n        spanText = spanText.substring(0, 19) + '...';\n      }\n    }\n    return (\n      this.state.active ?\n        (fieldType == 'password' ?\n          <VisiblePassword\n            value={this.state.value}\n            placeholder={this.props.placeholder}\n            required={this.props.required ? 'required' : ''}\n            autoComplete={this.props.autoComplete}\n            autoFocus={true}\n            onFinished={this.handlePasswordFinished}/>\n          :\n          <input type={fieldType}\n            value={this.state.value}\n            placeholder={this.props.placeholder}\n            required={this.props.required ? 'required' : ''}\n            autoComplete={this.props.autoComplete}\n            autoFocus\n            onChange={this.handeTextChange}\n            onKeyDown={this.handleKeyDown}\n            onBlur={this.handleEditingFinished} />\n        )\n        :\n        <span className={spanClass} onClick={this.handleStartEditing}>\n          <span className=\"content\">{spanText}</span>\n        </span>\n    );\n  }\n};\n","// Toggle [Title text >] -> [Title text v]\n\nimport React from 'react';\n\nexport default class MoreButton extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: props.open\n    };\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n\n  handleToggle() {\n    const open = !this.state.open;\n    this.setState({open: open});\n    if (this.props.onToggle) {\n      this.props.onToggle(open);\n    }\n  }\n\n  render() {\n    return (<label className=\"small clean-clickable\" onClick={this.handleToggle}>{this.props.title}...\n      {this.state.open ? <i className=\"material-icons\">expand_more</i> :\n        <i className=\"material-icons\">chevron_right</i>}\n      </label>);\n  }\n}\n","// PermissionsEditor: Component for editing permissions\n// <PermissionsEditor mode=\"JWROD\" skip=\"O\" onChange={this.handleCheckboxTest} />\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport CheckBox from './checkbox.jsx';\nimport Contact from './contact.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n// Translatable permission names.\nconst messages = defineMessages({\n  joiner: {\n    id: 'permission_join',\n    defaultMessage: \"Join ({val})\",\n    description: 'Name of J permission'\n  },\n  reader: {\n    id: 'permission_read',\n    defaultMessage: \"Read ({val})\",\n    description: 'Name of R permission'\n  },\n  writer: {\n    id: 'permission_write',\n    defaultMessage: \"Write ({val})\",\n    description: 'Name of W permission'\n  },\n  preser: {\n    id: 'permission_pres',\n    defaultMessage: \"Get notified ({val})\",\n    description: 'Name of P permission'\n  },\n  approver: {\n    id: 'permission_admin',\n    defaultMessage: \"Approve ({val})\",\n    description: 'Name of A permission'\n  },\n  sharer: {\n    id: 'permission_share',\n    defaultMessage: \"Share ({val})\",\n    description: 'Name of S permission'\n  },\n  deleter: {\n    id: 'permission_delete',\n    defaultMessage: \"Delete ({val})\",\n    description: 'Name of D permission'\n  },\n  owner: {\n    id: 'permission_owner',\n    defaultMessage: \"Owner ({val})\",\n    description: 'Name of O permission'\n  }\n});\n\nclass PermissionsEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mode: (props.mode || '').replace('N', '')\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(val) {\n    let mode = this.state.mode;\n    let idx = mode.indexOf(val);\n    if (idx == -1) {\n      mode += val;\n    } else {\n      mode = mode.replace(val, '');\n    }\n    this.setState({mode: mode});\n  }\n\n  handleSubmit() {\n    // Normalize string, otherwise cannot check if mode has changed.\n    var mode = (this.state.mode || 'N').split('').sort().join('');\n    var before = (this.props.mode || 'N').split('').sort().join('')\n    if (mode !== before) {\n      this.props.onSubmit(mode);\n    } else {\n      this.props.onCancel();\n    }\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const all = 'JRWPASDO';\n    const names = {\n      'J': formatMessage(messages.joiner, {val: 'J'}),\n      'R': formatMessage(messages.reader, {val: 'R'}),\n      'W': formatMessage(messages.writer, {val: 'W'}),\n      'P': formatMessage(messages.preser, {val: 'P'}),\n      'A': formatMessage(messages.approver, {val: 'A'}),\n      'S': formatMessage(messages.sharer, {val: 'S'}),\n      'D': formatMessage(messages.deleter, {val: 'D'}),\n      'O': formatMessage(messages.owner, {val: 'O'})\n    };\n\n    let skip = this.props.skip || '';\n    let mode = this.state.mode;\n    let compare = (this.props.compare || '').replace('N', '');\n    let items = [];\n    for (let i=0; i<all.length; i++) {\n      let c = all.charAt(i);\n      if (skip.indexOf(c) >= 0 && mode.indexOf(c) < 0) {\n        // Permission is marked as inactive: hide unchecked permissions, disable checked permissions\n        continue;\n      }\n      items.push(\n        <tr key={c}>\n          <td>{names[c]}</td>\n          <td className=\"checkbox\">{skip.indexOf(c) < 0 ?\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} onChange={this.handleChange}/>\n            :\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} />\n          }</td>{this.props.compare ? <td className=\"checkbox\">\n            <CheckBox name={c} checked={(compare.indexOf(c) >= 0)}/>\n          </td> : null}\n        </tr>\n      );\n    }\n\n    return (\n      <div className=\"panel-form-column\">\n        {this.props.userTitle ?\n          <ul className=\"contact-box\"><Contact\n            item={this.props.item}\n            title={this.props.userTitle}\n            avatar={makeImageUrl(this.props.userAvatar ? this.props.userAvatar : null)} /></ul> : null}\n        <label className=\"small\"><FormattedMessage id=\"title_permissions\"\n          defaultMessage=\"Permissions\" description=\"Section title\"/></label>\n        <table className=\"permission-editor\">\n        {this.props.compare ?\n          <thead><tr>\n            <th></th><th>{this.props.modeTitle}</th>\n            <th>{this.props.compareTitle}</th>\n          </tr></thead> :\n          null}\n        <tbody>\n          {items}\n        </tbody></table>\n        <br />\n        <div className=\"dialog-buttons\">\n          <button className=\"outline\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"blue\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(PermissionsEditor);\n","// TagManager: edit topic or user tags.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\n\nimport { MAX_TAG_COUNT, MAX_TAG_LENGTH, MIN_TAG_LENGTH } from '../config.js';\nimport { arrayEqual } from '../lib/utils.js';\n\nexport default class TagManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tags: this.props.tags,\n      tagInput: '',\n      activated: this.props.activated\n    };\n\n    this.handleTagInput = this.handleTagInput.bind(this);\n    this.handleAddTag = this.handleAddTag.bind(this);\n    this.handleRemoveTag = this.handleRemoveTag.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (!arrayEqual(nextProps.tags, prevState.tags) && !prevState.activated) {\n      return {tags: nextProps.tags};\n    }\n    return null;\n  }\n\n  handleTagInput(text) {\n    this.setState({tagInput: text});\n    if (text.length > 0) {\n      const last = text[text.length-1];\n      if (text[0] == '\"') {\n        // This is a quoted string.\n        if (text.length > 1 && last == '\"') {\n          this.handleAddTag(text.substring(1, text.length-1));\n        }\n      } else if (last == ',' || last == ' ' || last == ';' || last == '\"') {\n        // User entered ',', ' ' or ';'\n        this.handleAddTag(text.substring(0, text.length-1).trim());\n      }\n    }\n  }\n\n  handleAddTag(tag) {\n    const maxTagCount = this.props.tinode.getServerLimit('maxTagCount', MAX_TAG_COUNT);\n\n    if (tag.length > 0 && this.state.tags.length < maxTagCount) {\n      const tags = this.state.tags.slice(0);\n      tags.push(tag);\n\n      this.setState({tags: tags, tagInput: ''});\n      if (this.props.onTagsChanged) {\n        this.props.onTagsChanged(tags);\n      }\n      return tags;\n    }\n    return this.state.tags;\n  }\n\n  handleRemoveTag(tag, index) {\n    const tags = this.state.tags.slice(0);\n    tags.splice(index, 1);\n    this.setState({tags: tags});\n    if (this.props.onTagsChanged) {\n      this.props.onTagsChanged(tags);\n    }\n  }\n\n  handleSubmit() {\n    // Add unprocessed input to tags, submit the list.\n    this.props.onSubmit(this.handleAddTag(this.state.tagInput.trim()));\n    this.setState({activated: false, tags: this.props.tags});\n  }\n\n  handleCancel() {\n    this.setState({activated: false, tagInput: '', tags: this.props.tags});\n    if (this.props.onCancel) {\n      this.props.onCancel();\n    }\n  }\n\n  render() {\n    const minTagLength = this.props.tinode.getServerLimit('minTagLength', MIN_TAG_LENGTH);\n    const maxTagLength = this.props.tinode.getServerLimit('maxTagLength', MAX_TAG_LENGTH);\n\n    let tags = [];\n    if (this.state.activated) {\n      this.state.tags.map((tag) => {\n        tags.push({user: tag, invalid: (tag.length < minTagLength || tag.length > maxTagLength)});\n      });\n    } else {\n      this.state.tags.map((tag) => {\n        tags.push(<span className=\"badge\" key={tags.length}>{tag}</span>);\n      });\n      if (tags.length == 0) {\n        tags = (\n          <i>\n            <FormattedMessage id=\"tags_not_found\" defaultMessage=\"No tags defined. Add some.\" description=\"\" />\n          </i>\n        );\n      }\n    }\n    return (\n      <div className=\"panel-form-column\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">{this.props.title}</label>\n        </div>\n        {this.state.activated ?\n        <div>\n          <FormattedMessage id=\"tags_editor_no_tags\" defaultMessage=\"Add some tags\"\n            description=\"Tag editor prompt when no tags are found.\">{\n            (add_tags_prompt) => <ChipInput\n              chips={tags}\n              avatarDisabled={true}\n              prompt={add_tags_prompt}\n              onEnter={this.handleAddTag}\n              onFocusLost={this.handleAddTag}\n              onCancel={this.handleCancel}\n              onChipRemoved={this.handleRemoveTag}\n              filterFunc={this.handleTagInput} />\n          }</FormattedMessage>\n          {this.props.onSubmit || this.props.onCancel ?\n            <div id=\"tag-manager-buttons\" className=\"dialog-buttons panel-form-row\">\n              <button className=\"outline\" onClick={this.handleCancel}>\n                <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n              </button>\n              <button className=\"blue\" onClick={this.handleSubmit}>\n                <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n              </button>\n            </div>\n          : null}\n        </div>\n        :\n        <div className=\"quoted\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.setState({activated: true});}}>\n            <i className=\"material-icons\">edit</i> &nbsp;<FormattedMessage id=\"title_manage_tags\" defaultMessage=\"Manage\"\n              description=\"Section title for the list of tags\" />\n          </a>\n          <>{tags}</>\n        </div>\n      }\n      </div>\n    );\n  }\n};\n","// InfoView: panel with topic/user info.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport ContactList from '../widgets/contact-list.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupManager from '../widgets/group-manager.jsx';\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport MenuCancel from '../widgets/menu-cancel.jsx';\nimport MoreButton from '../widgets/more-button.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\nimport TagManager from '../widgets/tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH, NO_ACCESS_MODE } from '../config.js';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, vcard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  requested: {\n    id: 'requested_permissions',\n    defaultMessage: 'Requested',\n    description: 'Title for permissions'\n  },\n  granted: {\n    id: 'granted_permissions',\n    defaultMessage: 'Granted',\n    description: 'Title for permissions'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n  other_user: {\n    id: 'label_other_user',\n    defaultMessage: 'Other',\n    description: 'Label for the other user when the user is unnamed'\n  },\n  clear_messages: {\n    id: 'action_clear_messages',\n    defaultMessage: 'Clear Messages',\n    description: 'Flat button [Clear Messages] (soft-delete messages)'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n  delete_messages: {\n    id: 'action_delete_messages',\n    defaultMessage: 'Clear Messages for All',\n    description: 'Flat button [Clear for All] (hard-delete all messages)'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  leave_chat: {\n    id: 'action_leave_chat',\n    defaultMessage: 'Leave Conversation',\n    description: 'Flat button [Leave Conversation]'\n  },\n  leave_chat_warning: {\n    id: 'leave_chat_warning',\n    defaultMessage: 'Are you sure you want to leave this conversation?',\n    description: 'Alert dialog warning when unsubscribing from a chat.'\n  },\n  block_contact: {\n    id: 'action_block_contact',\n    defaultMessage: \"Block Contact\",\n    description: \"Flat button [Block Contact]\"\n  },\n  block_contact_warning: {\n    id: 'block_contact_warning',\n    defaultMessage: 'Are you sure you want to block this contact?',\n    description: 'Alert dialog warning when blocking a contact.'\n  },\n  report_chat: {\n    id: 'action_report_chat',\n    defaultMessage: 'Report Conversation',\n    description: 'Flat button [Report Group]'\n  },\n  report_chat_warning: {\n    id: 'report_chat_warning',\n    defaultMessage: 'Are you sure you want to block and report this conversation?',\n    description: 'Alert dialog warning when reporting a conversation for abuse'\n  },\n});\n\nclass InfoView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      topic: null,\n      owner: false,\n      admin: false,\n      sharer: false,\n      deleter: false,\n      muted: false,\n      address: null,\n      groupTopic: undefined,\n      channel: undefined,\n      fullName: undefined,\n      avatar: null,\n      private: null,\n      selectedContact: null,\n      access: null,\n      modeGiven: null,\n      modeWant: null,\n      modeGiven2: null, // P2P topic, the other user mode given\n      modeWant2: null,  // P2P topic, the other user mode want\n      auth: null,\n      anon: null,\n      contactList: [],\n      tags: [],\n      showMemberPanel: false,\n      showPermissionEditorFor: undefined,\n      moreInfoExpanded: false,\n      previousMetaDesc: undefined,\n      previousSubsUpdated: undefined,\n      previousTagsUpdated: undefined\n    };\n\n    this.resetSubs = this.resetSubs.bind(this);\n    this.resetDesc = this.resetDesc.bind(this);\n    this.onMetaDesc = this.onMetaDesc.bind(this);\n    this.onSubsUpdated = this.onSubsUpdated.bind(this);\n    this.onTagsUpdated = this.onTagsUpdated.bind(this);\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\n    this.handlePrivateUpdate = this.handlePrivateUpdate.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleMuted = this.handleMuted.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handleShowAddMembers = this.handleShowAddMembers.bind(this);\n    this.handleHideAddMembers = this.handleHideAddMembers.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleDeleteMessages = this.handleDeleteMessages.bind(this);\n    this.handleLeave = this.handleLeave.bind(this);\n    this.handleBlock = this.handleBlock.bind(this);\n    this.handleReport = this.handleReport.bind(this);\n    this.handleMemberSelected = this.handleMemberSelected.bind(this);\n    this.handleMoreInfo = this.handleMoreInfo.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.handleContextMenu = this.handleContextMenu.bind(this);\n  }\n\n  // No need to separately handle component mount.\n  componentDidUpdate(props) {\n    const topic = this.props.tinode.getTopic(props.topic);\n    if (!topic) {\n      return;\n    }\n\n    if (this.onMetaDesc != topic.onMetaDesc) {\n      this.previousMetaDesc = topic.onMetaDesc;\n      topic.onMetaDesc = this.onMetaDesc;\n\n      this.previousSubsUpdated = topic.onSubsUpdated;\n      topic.onSubsUpdated = this.onSubsUpdated;\n\n      if (topic.getType() == 'grp') {\n        this.previousTagsUpdated = topic.onTagsUpdated;\n        topic.onTagsUpdated = this.onTagsUpdated;\n      } else {\n        this.previousTagsUpdated = undefined;\n      }\n    }\n\n    if (this.state.topic != props.topic) {\n      this.setState({topic: props.topic});\n      this.resetDesc(topic, props);\n      this.resetSubs(topic, props);\n    }\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.setState({topic: null});\n    topic.onMetaDesc = this.previousMetaDesc;\n    topic.onSubsUpdated = this.previousSubsUpdated;\n    topic.onTagsUpdated = this.previousTagsUpdated;\n  }\n\n  resetSubs(topic, props) {\n    const newState = {contactList: []};\n    if (topic.getType() == 'p2p') {\n      // Fetch the other party in the p2p conversation.\n      // Topic may not be ready yet, so check if user is found.\n      const user2 = topic.subscriber(props.topic);\n      if (user2) {\n        newState.modeGiven2 = user2.acs.getGiven();\n        newState.modeWant2 = user2.acs.getWant();\n      } else {\n        newState.modeGiven2 = NO_ACCESS_MODE;\n        newState.modeWant2 = NO_ACCESS_MODE;\n      }\n    } else {\n      topic.subscribers((sub) => {\n        newState.contactList.push(sub);\n      }, this);\n    }\n\n    this.setState(newState);\n  }\n\n  resetDesc(topic, props) {\n    const defacs = topic.getDefaultAccess() || {};\n    const acs = topic.getAccessMode();\n\n    this.setState({\n      owner: acs && acs.isOwner(),\n      admin: acs && acs.isAdmin(),\n      sharer: acs && acs.isSharer(),\n      deleter: acs && acs.isDeleter(),\n      muted: acs && acs.isMuted(),\n\n      fullName: topic.public ? topic.public.fn : undefined,\n      avatar: makeImageUrl(topic.public ? topic.public.photo : null),\n      private: topic.private ? topic.private.comment : null,\n      address: topic.name,\n      groupTopic: topic.isGroupType(),\n      channel: topic.isChannelType(),\n      showMemberPanel: false,\n      access: acs ? acs.getMode() : undefined,\n      modeGiven: acs ? acs.getGiven() : undefined,\n      modeWant: acs ? acs.getWant() : undefined,\n      auth: defacs.auth,\n      anon: defacs.anon\n    });\n\n    if (topic.getType() == 'grp' && acs && acs.isOwner()) {\n      // Requesting tags: owner is editing the topic.\n      topic.getMeta(topic.startMetaQuery().withTags().build());\n    }\n  }\n\n  onMetaDesc(desc) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetDesc(topic, this.props);\n\n    if (this.previousMetaDesc && this.previousMetaDesc != this.onMetaDesc) {\n      this.previousMetaDesc(desc);\n    }\n  }\n\n  onSubsUpdated(subs) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetSubs(topic, this.props);\n\n    if (this.previousSubsUpdated && this.previousSubsUpdated != this.onSubsUpdated) {\n      this.previousSubsUpdated(subs);\n    }\n  }\n\n  onTagsUpdated(tags) {\n    this.setState({tags: tags});\n\n    if (this.previousTagsUpdated && this.previousTagsUpdated != this.onTagsUpdated) {\n      this.previousTagsUpdated();\n    }\n  }\n\n  handleFullNameUpdate(fn) {\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.fullName !== fn) {\n      this.setState({fullName: fn});\n      this.props.onTopicDescUpdate(this.props.topic, vcard(fn, null), null);\n    }\n  }\n\n  handlePrivateUpdate(comment) {\n    comment = comment.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.private !== comment) {\n      this.setState({private: comment});\n      this.props.onTopicDescUpdate(this.props.topic, null, comment || Tinode.DEL_CHAR);\n    }\n  }\n\n  handleImageChanged(img) {\n    this.setState({avatar: img});\n    this.props.onTopicDescUpdate(this.props.topic, vcard(null, img || Tinode.DEL_CHAR), null);\n  }\n\n  handleMuted(ignored, checked) {\n    this.setState({muted: checked});\n    this.props.onChangePermissions(this.props.topic, checked ? '-P' : '+P');\n  }\n\n  handlePermissionsChanged(perm) {\n    switch (this.state.showPermissionEditorFor) {\n      case 'auth':\n        this.props.onTopicDescUpdate(this.props.topic, null, null, {auth: perm});\n        break;\n      case 'anon':\n        this.props.onTopicDescUpdate(this.props.topic, null, null, {anon: perm});\n        break;\n      case 'mode':\n      case 'want':\n        this.props.onChangePermissions(this.props.topic, perm);\n        break;\n      case 'given':\n        this.props.onChangePermissions(this.props.topic, perm, this.props.topic);\n        break;\n      case 'user':\n        this.props.onChangePermissions(this.props.topic, perm, this.state.userPermissionsEdited);\n        break;\n    }\n\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handleLaunchPermissionsEditor(which, uid) {\n    const {formatMessage} = this.props.intl;\n    let toEdit, toCompare, toSkip, titleEdit, titleCompare, userTitle, userAvatar;\n    switch (which) {\n      case 'mode':\n        toEdit = this.state.access;\n        break;\n      case 'want':\n        toEdit = this.state.modeWant;\n        toCompare = this.state.modeGiven;\n        if (this.state.owner) {\n          // Don't allow owner to unset 'O' permission. All other permissions are OK.\n          toSkip = 'O';\n        } else {\n          // Allow accepting any of 'ASDO' permissions but don't allow asking for them.\n          toSkip = Tinode.AccessMode.encode(Tinode.AccessMode.diff('ASDO', this.state.modeGiven));\n          if (this.state.channel) {\n            // Channels are read-only.\n            toSkip += 'W';\n          }\n        }\n        titleEdit = formatMessage(messages.requested);\n        titleCompare = formatMessage(messages.granted);\n        break;\n      case 'given':\n        toEdit = this.state.modeGiven2;\n        toCompare = this.state.modeWant2;\n        toSkip = this.state.groupTopic ? (this.state.owner ? '' : 'O') : 'ASDO';\n        titleEdit = formatMessage(messages.granted);\n        titleCompare = formatMessage(messages.requested);\n        break;\n      case 'auth':\n        toEdit = this.state.auth;\n        toSkip = 'O';\n        break;\n      case 'anon':\n        toEdit = this.state.anon;\n        toSkip = 'O';\n        break;\n      case 'user': {\n        const topic = this.props.tinode.getTopic(this.props.topic);\n        if (!topic) {\n          return;\n        }\n        const user = topic.subscriber(uid);\n        if (!user || !user.acs) {\n          return;\n        }\n        toEdit = user.acs.getGiven();\n        toCompare = user.acs.getWant();\n        toSkip = this.state.owner ? '' : 'O';\n        titleEdit = formatMessage(messages.granted);\n        titleCompare = formatMessage(messages.requested);\n        if (user.public) {\n          userTitle = user.public.fn;\n          userAvatar = user.public.photo;\n        }\n        break;\n      }\n      default:\n        console.log(\"Unknown permission editing mode '\" + which + \"'\");\n        break;\n    }\n    this.setState({\n      showPermissionEditorFor: which,\n      userPermissionsEdited: uid,\n      userPermissionsTitle: userTitle,\n      userPermissionsAvatar: userAvatar,\n      editedPermissions: toEdit,\n      immutablePermissions: toCompare,\n      editedPermissionsTitle: titleEdit,\n      immutablePermissionsTitle: titleCompare,\n      editedPermissionsSkipped: toSkip,\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handleShowAddMembers(e) {\n    e.preventDefault();\n    this.props.onInitFind();\n    this.setState({showMemberPanel: true});\n  }\n\n  handleHideAddMembers() {\n    this.setState({showMemberPanel: false});\n  }\n\n  handleMemberUpdateRequest(members, added, removed) {\n    this.props.onMemberUpdateRequest(this.props.topic, added, removed);\n    this.setState({showMemberPanel: false});\n  }\n\n  handleDeleteMessages(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(this.state.deleter ? messages.delete_messages : messages.clear_messages), // title\n      formatMessage(this.state.deleter ? messages.delete_messages_warning : messages.clear_messages_warning), // content\n      (() => { this.props.onDeleteMessages(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleLeave(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.leave_chat), // title\n      formatMessage(messages.leave_chat_warning), // content\n      (() => { this.props.onLeaveTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleBlock(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.block_contact), // title\n      formatMessage(messages.block_contact_warning), // content\n      (() => { this.props.onBlockTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleReport(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.report_chat), // title\n      formatMessage(messages.report_chat_warning), // content\n      (() => { this.props.onReportTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleMemberSelected(uid) {\n    this.setState({selectedContact: uid});\n  }\n\n  handleMoreInfo(open) {\n    this.setState({moreInfoExpanded: open});\n  }\n\n  handleTagsUpdated(tags) {\n    if (!arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      this.props.onTopicTagsUpdate(this.props.topic, tags);\n    }\n  }\n\n  handleContextMenu(params) {\n    const {formatMessage} = this.props.intl;\n    const instance = this;\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    const user = topic.subscriber(params.topicName);\n    if (!user || !user.acs) {\n      return;\n    }\n\n    const menuItems = [\n      {title: formatMessage(messages.edit_permissions), handler: function() {\n        instance.handleLaunchPermissionsEditor('user', params.topicName);\n      }},\n      'member_delete',\n      user.acs.isMuted() ? 'member_unmute' : 'member_mute',\n      user.acs.isJoiner() ? 'member_block' : 'member_unblock'\n    ];\n    this.props.showContextMenu({\n      topicName: this.props.topic,\n      x: params.x,\n      y: params.y,\n      user: params.topicName}, menuItems);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n\n    return (\n      <div id=\"info-view\">\n        <div className=\"caption-panel\" id=\"info-caption-panel\">\n          <div className=\"panel-title\" id=\"info-title\">\n            <FormattedMessage id=\"title_info\" defaultMessage=\"Info\" description=\"Title for InfoView\" />\n          </div>\n          <div>\n            <MenuCancel onCancel={this.props.onCancel} />\n          </div>\n        </div>\n        {this.props.displayMobile ?\n          <ErrorPanel\n            level={this.props.errorLevel}\n            text={this.props.errorText}\n            onClearError={this.props.onError} /> : null}\n        {this.state.showMemberPanel ?\n          <GroupManager\n            members={this.state.contactList}\n            requiredMember={this.props.myUserId}\n            keepInitialMembers={!this.state.admin && !this.state.owner}\n            myUserId={this.props.myUserId}\n            contacts={this.props.searchableContacts}\n            onCancel={this.handleHideAddMembers}\n            onSubmit={this.handleMemberUpdateRequest} />\n          :\n        this.state.showPermissionEditorFor ?\n          <PermissionsEditor\n            mode={this.state.editedPermissions}\n            compare={this.state.immutablePermissions}\n            skip={this.state.editedPermissionsSkipped}\n            modeTitle={this.state.editedPermissionsTitle}\n            compareTitle={this.state.immutablePermissionsTitle}\n            userTitle={this.state.userPermissionsTitle}\n            item={this.state.userPermissionsEdited}\n            userAvatar={this.state.userPermissionsAvatar}\n            onSubmit={this.handlePermissionsChanged}\n            onCancel={this.handleHidePermissionsEditor}\n            />\n          :\n          <div id=\"info-view-content\" className=\"scrollable-panel\">\n            <div className=\"panel-form-row\">\n              <div className=\"panel-form-column\">\n                <div><label className=\"small\">\n                  <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                    description=\"Label for editing topic name\" />\n                </label></div>\n                <div><InPlaceEdit\n                    placeholder={this.state.groupTopic ? \"Group name\" : <i>Unknown</i>}\n                    readOnly={!this.state.owner}\n                    value={this.state.fullName}\n                    required={true}\n                    onFinished={this.handleFullNameUpdate} /></div>\n                <div>\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                      description=\"Label for editing 'private'\" />\n                  </label>\n                </div>\n                <div>\n                  <FormattedMessage id=\"private_editing_placeholder\"\n                    defaultMessage=\"Visible to you only\"\n                    description=\"Placeholder for editing 'private'\">{\n                    (private_placeholder) => <InPlaceEdit\n                      placeholder={private_placeholder}\n                      value={this.state.private}\n                      onFinished={this.handlePrivateUpdate} />\n                  }</FormattedMessage>\n                </div>\n              </div>\n              <AvatarUpload\n                avatar={this.state.avatar}\n                readOnly={!this.state.owner}\n                uid={this.props.topic}\n                title={this.state.fullName}\n                onImageChanged={this.handleImageChanged}\n                onError={this.props.onError} />\n            </div>\n            <div className=\"hr\" />\n            <div className=\"panel-form-column\">\n              <div className=\"panel-form-row\">\n                <label>\n                  <FormattedMessage id=\"label_muting_topic\" defaultMessage=\"Muted:\"\n                    description=\"Label for Muting/unmuting the topic\" />\n                </label>\n                <CheckBox name=\"P\" checked={this.state.muted}\n                  onChange={this.handleMuted} />\n              </div>\n              <FormattedMessage id=\"action_more\" defaultMessage=\"More\"\n                description=\"Action for showing more content\">{\n                (more) => <MoreButton\n                  title={more}\n                  open={this.state.moreInfoExpanded}\n                  onToggle={this.handleMoreInfo} />\n              }</FormattedMessage>\n              {this.state.moreInfoExpanded ?\n                <div className=\"panel-form-column\">\n                  <div className=\"panel-form-row\">\n                    <label><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n                      description=\"Label for user address (ID)\" /></label>\n                    <tt>{this.state.address}</tt>\n                  </div>\n                  {this.state.groupTopic ?\n                    <div className=\"panel-form-row\">\n                      <label>\n                        <FormattedMessage id=\"label_your_permissions\" defaultMessage=\"Your permissions:\"\n                          description=\"Label for current user permissions\" />\n                      </label>\n                      <tt className=\"clickable\"\n                        onClick={this.handleLaunchPermissionsEditor.bind(this, 'want')}>\n                        {this.state.access}\n                      </tt>\n                    </div>\n                    :\n                    <div>\n                      <div>\n                        <label className=\"small\">\n                          <FormattedMessage id=\"label_permissions\" defaultMessage=\"Permissions:\"\n                            description=\"Section title\" />\n                        </label>\n                      </div>\n                      <div className=\"quoted\">\n                        <div>\n                          <FormattedMessage id=\"label_you\" defaultMessage=\"You:\"\n                            description=\"Label for the current user\" /> &nbsp;<tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'want')}>\n                          {this.state.access}\n                        </tt></div>\n                        <div>{this.state.fullName ? this.state.fullName : formatMessage(messages.other_user)}:\n                          &nbsp;<tt className=\"clickable\" onClick={this.handleLaunchPermissionsEditor.bind(this, 'given')}>\n                          {this.state.modeGiven2}\n                          </tt>\n                        </div>\n                      </div>\n                    </div>\n                  }\n                  {this.state.sharer && (this.state.auth || this.state.anon) ?\n                  <div>\n                    <div>\n                      <label className=\"small\">\n                        <FormattedMessage id=\"label_default_access\" defaultMessage=\"Default access mode:\"\n                          description=\"Section title\" />\n                      </label>\n                    </div>\n                    <div className=\"quoted\">\n                      <div>Auth: {this.state.admin ?\n                        <tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>\n                          {this.state.auth}\n                        </tt>\n                        :\n                        <tt>{this.state.auth}</tt>\n                      }\n                      </div>\n                      <div>Anon: {this.state.admin ?\n                        <tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>\n                          {this.state.anon}\n                        </tt>\n                        :\n                        <tt>{this.state.anon}</tt>\n                      }\n                      </div>\n                    </div>\n                  </div>\n                  :\n                  null\n                }\n                </div>\n              :\n              null\n              }\n            </div>\n            <div className=\"hr\" />\n            {this.state.owner ?\n              <>\n                <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (user discovery)\"\n                  description=\"Section title for TagManager\">{\n                  (tags) => <TagManager\n                    title={tags}\n                    tags={this.state.tags}\n                    activated={false}\n                    tinode={this.props.tinode}\n                    onSubmit={this.handleTagsUpdated} />\n                }</FormattedMessage>\n                <div className=\"hr\" />\n              </>\n              :\n              null\n            }\n            <div className=\"panel-form-column\">\n              {!this.state.channel ?\n                <a href=\"#\" className=\"flat-button\" onClick={this.handleDeleteMessages}>\n                  <i className=\"material-icons\">delete_outline</i> &nbsp;{\n                    formatMessage(this.state.deleter ? messages.delete_messages : messages.clear_messages)\n                  }\n                </a>\n                :\n                null\n              }\n              <a href=\"#\" className=\"red flat-button\" onClick={this.handleLeave}>\n                <i className=\"material-icons\">exit_to_app</i> &nbsp;{formatMessage(messages.leave_chat)}\n              </a>\n              {!this.state.groupTopic ?\n                <a href=\"#\" className=\"red flat-button\" onClick={this.handleBlock}>\n                  <i className=\"material-icons\">block</i> &nbsp;{formatMessage(messages.block_contact)}\n                </a>\n                :\n                null\n              }\n              {!this.state.owner ?\n                <a href=\"#\" className=\"red flat-button\" onClick={this.handleReport}>\n                  <i className=\"material-icons\">report</i> &nbsp;{formatMessage(messages.report_chat)}\n                </a>\n                :\n                null\n              }\n            </div>\n            {this.state.groupTopic && this.state.sharer ?\n              <>\n                <div className=\"hr\" />\n                <div className=\"panel-form-column\">\n                  <div className=\"panel-form-row\">\n                    <label className=\"small\">\n                      <FormattedMessage id=\"label_group_members\" defaultMessage=\"Group members:\"\n                        description=\"Section title or label\" />\n                    </label>\n                  </div>\n                  <div className=\"panel-form-row\">\n                    <a href=\"#\" className=\"flat-button\" onClick={this.handleShowAddMembers}>\n                      <i className=\"material-icons\">person_add</i> &nbsp;<FormattedMessage id=\"button_add_members\"\n                        defaultMessage=\"Add members\" description=\"Flat button [Add members] (to topic)\" />\n                    </a>\n                  </div>\n                  <FormattedMessage id=\"group_has_no_members\" defaultMessage=\"No members\"\n                    description=\"Shown in place of group members\">{\n                    (no_members) => <ContactList\n                      contacts={this.state.contactList}\n                      myUserId={this.props.myUserId}\n                      emptyListMessage={no_members}\n                      topicSelected={this.state.selectedContact}\n                      showOnline={false}\n                      showUnread={false}\n                      showMode={true}\n                      noScroll={true}\n                      onTopicSelected={this.handleMemberSelected}\n                      showContextMenu={this.state.admin ? this.handleContextMenu : false}\n                    />\n                  }</FormattedMessage>\n                </div>\n              </>\n              :\n              null\n            }\n          </div>\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(InfoView);\n","// File uload/download progress indicator with a cancel inside.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class FileProgress extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"uploader\">\n        <div><span style={{width: (this.props.progress * 100) + \"%\"}}></span></div>\n        {this.props.progress < 0.999 ?\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n            <i className=\"material-icons\">close</i> <FormattedMessage id=\"action_cancel\"\n              defaultMessage=\"cancel\" description=\"Call to action [cancel]\" />\n          </a>\n          :\n          <FormattedMessage id=\"upload_finishing\" defaultMessage=\"finishing...\"\n            description=\"Notification that upload is finishing\" />\n        }\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\nimport { bytesToHumanSize } from '../lib/strformat.js';\nimport { isUrlRelative, sanitizeUrl } from '../lib/utils.js';\n\nexport default class Attachment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      downloader: null,\n      progress: 0\n    };\n\n    this.downloadFile = this.downloadFile.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  downloadFile(url, filename, mimetype) {\n    if (!url) {\n      this.props.onError(\"Invalid download URL '\" + url + \"'\");\n      return;\n    }\n\n    const downloader = this.props.tinode.getLargeFileHelper();\n    this.setState({downloader: downloader});\n    downloader.download(url, filename, mimetype,\n      (loaded) => {\n        this.setState({progress: loaded / this.props.size});\n      },\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    ).then(() => {\n      this.setState({downloader: null, progress: 0});\n    }).catch((err) => {\n      if (err) {\n        this.props.onError(\"Error downloading file: \" + err.message, 'err');\n      }\n      this.setState({downloader: null, progress: 0});\n    });\n  }\n\n  handleCancel() {\n    if (this.props.uploading) {\n      this.props.onCancelUpload();\n    } else if (this.state.downloader) {\n      this.state.downloader.cancel();\n    }\n  }\n\n  render() {\n    let filename = this.props.filename || 'file_attachment';\n    if (filename.length > 36) {\n      filename = filename.substr(0, 16) + '...' + filename.substr(-16);\n    }\n    let size = this.props.size > 0 ?\n      <span className=\"small gray\">({bytesToHumanSize(this.props.size)})</span> :\n      null;\n\n    // Detect if the download URL is relative or absolute.\n    // If the URL is relative use LargeFileHelper to attach authentication\n    // credentials to the request.\n    let url, helperFunc;\n    if (!this.props.uploading && !this.state.downloader && isUrlRelative(this.props.downloadUrl)) {\n      // Relative URL. Use download helper.\n      url = '#';\n      helperFunc = (e) => {\n        e.preventDefault();\n        this.downloadFile(this.props.downloadUrl, this.props.filename, this.props.mimetype);\n      };\n    } else {\n      url = sanitizeUrl(this.props.downloadUrl);\n      helperFunc = null;\n    }\n    const downloadWidget = <><i className=\"material-icons\">file_download</i> <FormattedMessage id=\"save_attachment\"\n      defaultMessage=\"save\" description=\"Call to save an attachment\" /></>;\n    return (\n      <div className=\"attachment\">\n        <div><i className=\"material-icons big gray\">insert_drive_file</i></div>\n        <div className=\"flex-column\">\n          <div>{filename} {size}</div>\n          {this.props.uploading || this.state.downloader ?\n            <FileProgress progress={this.props.uploading ? this.props.progress : this.state.progress}\n              onCancel={this.handleCancel} />\n            :\n            <div>{url ?\n              <a href={url} download={this.props.filename} onClick={helperFunc}>{downloadWidget}</a>\n              :\n              <span className=\"light-gray\">{downloadWidget}</span>\n            }</div>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n","// Image view with progress bar and a cancel button.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\n\nexport default class UploadingImage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"inline-image\">\n        {React.createElement('img', this.props)}\n        <div className=\"rounded-container\">\n          <FileProgress progress={this.props.progress} onCancel={this.props.onCancelUpload} />\n        </div>\n      </div>\n    );\n  }\n};\n","// Single message, sent or received.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport Attachment from './attachment.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\nimport UploadingImage from './uploading-image.jsx'\nimport { sanitizeImageUrl, sanitizeUrl } from '../lib/utils.js';\n\nexport default class ChatMessage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      progress: 0\n    };\n\n    if (props.uploader) {\n      props.uploader.onProgress = this.handleProgress.bind(this);\n    }\n\n    this.handleImagePreview = this.handleImagePreview.bind(this);\n    this.handleFormButtonClick = this.handleFormButtonClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n  }\n\n  handleImagePreview(e) {\n    e.preventDefault();\n    this.props.onImagePreview({\n      url: e.target.src,\n      filename: e.target.title,\n      width: e.target.dataset.width,\n      height: e.target.dataset.height,\n      size: e.target.dataset.size,\n      type: e.target.dataset.mime\n    });\n  }\n\n  handleFormButtonClick(e) {\n    e.preventDefault();\n    const data = {\n      seq: this.props.seq\n    };\n    data.resp = {};\n    if (e.target.dataset.name) {\n      data.resp[e.target.dataset.name] = e.target.dataset.val ? e.target.dataset.val :\n        e.target.dataset.val === undefined ? 1 : '' + e.target.dataset.val;\n    }\n    if (e.target.dataset.act == 'url') {\n      data.ref = sanitizeUrl(e.target.dataset.ref) || 'about:blank';\n    }\n    const text = e.target.dataset.title || 'unknown';\n    this.props.onFormResponse(e.target.dataset.act, text, data);\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const menuItems = this.props.received == Tinode.MESSAGE_STATUS_FAILED ? ['menu_item_send_retry'] : [];\n    this.props.showContextMenu({ seq: this.props.seq, content: this.props.content,\n                                 y: e.pageY, x: e.pageX }, menuItems);\n  }\n\n  handleProgress(ratio) {\n    this.setState({progress: ratio});\n  }\n\n  handleCancelUpload() {\n    this.props.onCancelUpload(this.props.seq, this.props.uploader);\n  }\n\n  render() {\n    const sideClass = this.props.deleted ? 'center' :\n      (this.props.sequence + ' ' + (this.props.response ? 'left' : 'right'));\n    const bubbleClass = (this.props.sequence == 'single' || this.props.sequence == 'last') ? 'bubble tip' : 'bubble';\n    const avatar = this.props.deleted ? null : (this.props.userAvatar || true);\n    const fullDisplay = (this.props.userFrom && this.props.response &&\n      (this.props.sequence == 'single' || this.props.sequence == 'last'));\n\n    let content = this.props.content;\n    const attachments = [];\n    if (this.props.mimeType == Drafty.getContentType() && Drafty.isValid(content)) {\n      Drafty.attachments(content, function(att, i) {\n        if (att.mime == 'application/json') {\n          // Don't show json objects as attachments.\n          // They are not meant for users.\n          return;\n        }\n        attachments.push(<Attachment\n          tinode={this.props.tinode}\n          downloadUrl={Drafty.getDownloadUrl(att)}\n          filename={att.name} uploading={Drafty.isProcessing(att)}\n          mimetype={att.mime} size={Drafty.getEntitySize(att)}\n          progress={this.state.progress}\n          onCancelUpload={this.handleCancelUpload}\n          onError={this.props.onError}\n          key={i} />);\n      }, this);\n      content = React.createElement(React.Fragment, null, Drafty.format(content, draftyFormatter, this));\n    } else if (this.props.deleted) {\n      // Message represents a range of deleted messages.\n      content = <><i className=\"material-icons gray\">block</i> <i className=\"gray\">\n        <FormattedMessage id=\"deleted_content\"\n          defaultMessage=\"content deleted\" description=\"Shown when messages are deleted\" />\n      </i></>\n    } else if (typeof content != 'string') {\n      content = <>\n          <i className=\"material-icons gray\">error_outline</i> <i className=\"gray\">\n            <FormattedMessage id=\"invalid_content\"\n              defaultMessage=\"invalid content\" description=\"Shown when message is unreadable\" /></i>\n        </>\n    }\n\n    return (\n      <li className={sideClass}>\n        {this.props.userFrom && this.props.response ?\n          <div className=\"avatar-box\">\n            {fullDisplay ?\n              <LetterTile\n                topic={this.props.userFrom}\n                title={this.props.userName}\n                avatar={avatar} /> :\n              null}\n          </div> :\n          null}\n        <div>\n          <div className={bubbleClass}>\n            <div className=\"message-content\">\n              {content}\n              {attachments}\n              {this.props.timestamp ?\n                <ReceivedMarker\n                  timestamp={this.props.timestamp}\n                  received={this.props.received} />\n                : null}\n            </div>\n            {this.props.deleted || !this.props.showContextMenu ?\n              null :\n              <span className=\"menuTrigger\">\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">expand_more</i>\n                </a>\n              </span>\n            }\n          </div>\n          {fullDisplay ?\n            <div className=\"author\">\n              <FormattedMessage id=\"user_not_found\" defaultMessage=\"Not found\"\n                description=\"In place of a user's full name when the user is not found.\">{\n                    (notFound) => {return this.props.userName || <i>{notFound}</i>}\n              }</FormattedMessage>\n            </div>\n            : null\n          }\n        </div>\n      </li>\n    );\n  }\n};\n\n// Convert Drafty object to a tree of React elements.\nimport { BROKEN_IMAGE_SIZE, REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\n\n// Converts Drafty elements into React classes.\n// 'this' is set by the caller.\nfunction draftyFormatter(style, data, values, key) {\n  if (style == 'EX') {\n    // attachments are handled elsewhere.\n    return null;\n  }\n\n  let el = Drafty.tagName(style);\n  if (el) {\n    const attr = Drafty.attrValue(style, data) || {};\n    attr.key = key;\n    switch (style) {\n      case 'HL':\n        // Highlighted text. Assign class name.\n        attr.className = 'highlight';\n        break;\n      case 'IM':\n        // Additional processing for images\n        if (data) {\n          attr.className = 'inline-image';\n          const dim = fitImageSize(data.width, data.height,\n            Math.min(this.props.viewportWidth - REM_SIZE * 4, REM_SIZE * 36), REM_SIZE * 24, false) ||\n            {dstWidth: BROKEN_IMAGE_SIZE, dstHeight: BROKEN_IMAGE_SIZE};\n          attr.style = { width: dim.dstWidth + 'px', height: dim.dstHeight + 'px' };\n          if (!Drafty.isProcessing(data)) {\n            attr.src = this.props.tinode.authorizeURL(sanitizeImageUrl(attr.src));\n            attr.alt = data.name;\n            if (attr.src) {\n              attr.onClick = this.handleImagePreview;\n              attr.className += ' image-clickable';\n            } else {\n              attr.src = 'img/broken_image.png';\n            }\n          } else {\n            // Use custom element instead of <img>.\n            el = UploadingImage;\n          }\n        }\n        break;\n      case 'BN':\n        // Button\n        attr.onClick = this.handleFormButtonClick;\n        let inner = React.Children.map(values, (child) => {\n          return typeof child == 'string' ? child : undefined;\n        });\n        if (!inner || inner.length == 0) {\n          inner = [attr.name]\n        }\n        // Get text which will be sent back when the button is clicked.\n        attr['data-title'] = inner.join('');\n        break;\n      case 'FM':\n        // Form\n        attr.className = 'bot-form';\n        break;\n      case 'RW':\n        // Form element formatting is dependent on element content.\n        break;\n      default:\n        if (el == '_UNKN') {\n          // Unknown element.\n          // TODO: make it prettier.\n          el = <><span className=\"material-icons\">extension</span></>;\n        }\n        break;\n    }\n    return React.createElement(el, attr, values);\n  } else {\n    return values;\n  }\n};\n","// Send message form.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport { KEYPRESS_DELAY } from '../config.js';\nimport { filePasted } from '../lib/blob-helpers.js';\n\nconst messages = defineMessages({\n  messaging_disabled: {\n    id: 'messaging_disabled_prompt',\n    defaultMessage: 'Messaging disabled',\n    description: 'Prompt in SendMessage in read-only topic'\n  },\n  type_new_message: {\n    id: 'new_message_prompt',\n    defaultMessage: 'New message',\n    description: 'Prompt in send message field'\n  },\n  add_image_caption: {\n    id: 'image_caption_prompt',\n    defaultMessage: 'Image caption',\n    description: 'Prompt in SendMessage for attached image'\n  },\n  file_attachment_too_large: {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  },\n  cannot_initiate_upload: {\n    id: 'cannot_initiate_file_upload',\n    defaultMessage: 'Cannot initiate file upload.',\n    description: 'Generic error messagewhen attachment fails'\n  },\n});\n\nclass SendMessage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      message: '',\n      // Make initial keypress time as if it happened 5001 milliseconds in the past.\n      keypressTimestamp: new Date().getTime() - KEYPRESS_DELAY - 1\n    };\n\n    this.handlePasteEvent = this.handlePasteEvent.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleSend = this.handleSend.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleMessageTyping = this.handleMessageTyping.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.addEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.removeEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.messageEditArea) {\n      this.messageEditArea.focus();\n    }\n  }\n\n  handlePasteEvent(e) {\n    if (this.props.disabled) {\n      return;\n    }\n    // FIXME: handle large files too.\n    if (filePasted(e,\n      (bits, mime, width, height, fname) => {\n        this.props.onAttachImage(mime, bits, width, height, fname);\n      },\n      (mime, bits, fname) => {\n        this.props.onAttachFile(mime, bits, fname);\n      },\n      this.props.onError)) {\n\n      // If a file was pasted, don't paste base64 data into input field.\n      e.preventDefault();\n    }\n  }\n\n  handleAttachImage(e) {\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachImage(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleAttachFile(e) {\n    const {formatMessage} = this.props.intl;\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachFile(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleSend(e) {\n    e.preventDefault();\n    const message = this.state.message.trim();\n    if (message || this.props.acceptBlank || this.props.noInput) {\n      this.props.onSendMessage(message);\n      this.setState({message: ''});\n    }\n  }\n\n  /* Send on Enter key */\n  handleKeyPress(e) {\n    // Remove this if you don't want Enter to trigger send\n    if (e.key === 'Enter') {\n      // Have Shift-Enter insert a line break instead\n      if (!e.shiftKey) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.handleSend(e);\n      }\n    }\n  }\n\n  handleMessageTyping(e) {\n    const newState = {message: e.target.value};\n    if (this.props.onKeyPress) {\n      const now = new Date().getTime();\n      if (now - this.state.keypressTimestamp > KEYPRESS_DELAY) {\n        this.props.onKeyPress();\n        newState.keypressTimestamp = now;\n      }\n    }\n    this.setState(newState);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const prompt = this.props.disabled ?\n      formatMessage(messages.messaging_disabled) :\n      (this.props.messagePrompt ?\n        formatMessage(messages[this.props.messagePrompt]) :\n        formatMessage(messages.type_new_message));\n    return (\n      <div id=\"send-message-panel\">\n        {!this.props.disabled ?\n          <>\n            {this.props.onAttachFile ?\n              <>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachImage.click();}} title=\"Add image\">\n                  <i className=\"material-icons secondary\">photo</i>\n                </a>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachFile.click();}} title=\"Attach file\">\n                  <i className=\"material-icons secondary\">attach_file</i>\n                </a>\n              </>\n              :\n              null}\n            {this.props.noInput ?\n              <div className=\"hr thin\" /> :\n              <textarea id=\"sendMessage\" placeholder={prompt}\n                value={this.state.message} onChange={this.handleMessageTyping}\n                onKeyPress={this.handleKeyPress}\n                ref={(ref) => {this.messageEditArea = ref;}}\n                autoFocus />}\n            <a href=\"#\" onClick={this.handleSend} title=\"Send\">\n              <i className=\"material-icons\">send</i>\n            </a>\n            <input type=\"file\" ref={(ref) => {this.attachFile = ref;}}\n              onChange={this.handleAttachFile} style={{display: 'none'}} />\n            <input type=\"file\" ref={(ref) => {this.attachImage = ref;}} accept=\"image/*\"\n              onChange={this.handleAttachImage} style={{display: 'none'}} />\n          </>\n          :\n          <div id=\"writing-disabled\">{prompt}</div>\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SendMessage);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { bytesToHumanSize } from '../lib/strformat.js';\n\n// Get material icon name from mime type.\nfunction iconFromMime(mime) {\n  // If more icons become available in material icons, add them to this mime-to-icon mapping.\n  const mimeToIcon = {default: 'insert_drive_file', image: 'image', text: 'description', video: 'theaters'};\n\n  return mimeToIcon[mime] || mimeToIcon[(mime || '').split('/')[0]] || mimeToIcon['default'];\n}\n\nexport default class DocPreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleSendDoc = this.handleSendDoc.bind(this);\n  }\n\n  handleSendDoc(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(this.props.content.file);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          <span>{this.props.content.filename}</span>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\">\n          <div className=\"flex-column narrow\">\n            <i className=\"material-icons gray\">{iconFromMime(this.props.content.type)}</i>\n            <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n              description=\"Label for file content type (mime)\" /></b> {this.props.content.type || 'application/octet-stream'}</div>\n            <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n              description=\"Label for file size\" /></b> {bytesToHumanSize(this.props.content.size)}</div>\n          </div>\n        </div>\n        <SendMessage\n          noInput={true}\n          onSendMessage={this.handleSendDoc}\n          onError={this.props.onError} />\n      </div>\n    );\n  }\n};\n","// GroupSubs: a list of group subscribers currently online.\n// Show in the topic title bar\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { MAX_ONLINE_IN_TOPIC } from '../config.js'\n\nimport LetterTile from './letter-tile.jsx';\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class GroupSubs extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const usersOnline = [];\n    const totalCount = (this.props.subscribers || []).length;\n    const countToShow = Math.min(MAX_ONLINE_IN_TOPIC, totalCount);\n\n    (this.props.subscribers || []).some((sub) => {\n      usersOnline.push(\n        <div className=\"avatar-box\" key={sub.user}>\n          <LetterTile\n            topic={sub.user}\n            avatar={makeImageUrl(sub.public ? sub.public.photo : null) || true}\n            title={sub.public ? sub.public.fn : null} />\n        </div>\n      );\n      return usersOnline.length == countToShow;\n    });\n\n    return (\n      <div id=\"topic-users\">{usersOnline} {totalCount > countToShow ?\n        <span>\n          <FormattedMessage id=\"more_online_members\" defaultMessage=\"+{overflow} more\"\n              description=\"Shown in MessagesView title bar when the number of online subscribers exceeds MAX_ONLINE_IN_TOPIC\"\n              values={{ overflow: (totalCount - countToShow) }} />\n        </span> : null}\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\nimport { bytesToHumanSize } from '../lib/strformat.js';\n\nexport default class ImagePreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      width: 0,\n      height: 0\n    };\n\n    this.handleSendImage = this.handleSendImage.bind(this);\n  }\n\n  assignWidth(node) {\n    if (node && !this.state.width) {\n      const bounds = node.getBoundingClientRect();\n      this.setState({\n        width: bounds.width | 0,\n        height: bounds.height | 0\n      });\n    }\n  }\n\n  handleSendImage(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(caption, this.props.content.blob);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n\n    const dim = fitImageSize(this.props.content.width, this.props.content.height,\n      this.state.width, this.state.height, false);\n    const size = dim ? { width: dim.dstWidth + 'px', height: dim.dstHeight + 'px' } :\n      ((this.props.content.width > this.props.content.height) ? {width: '100%'} : {height: '100%'});\n    size.maxWidth = '100%';\n    size.maxHeight = '100%';\n\n    let filename = this.props.content.filename;\n    // Average font aspect ratio is ~0.5; File name takes 1/3 of the viewport width.\n    const maxlength = Math.max(((this.state.width / REM_SIZE / 1.5) | 0) - 2, 12);\n    if (filename.length > maxlength) {\n      filename = filename.slice(0, maxlength/2 - 1) + '…' + filename.slice(1 - maxlength/2);\n    }\n    const width = this.props.content.width || '-';\n    const height = this.props.content.height || '-';\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          {!this.props.onSendMessage ?\n            <a href={this.props.content.url} download={this.props.content.filename}>\n              <i className=\"material-icons\">file_download</i> <FormattedMessage\n                id=\"download_action\" defaultMessage=\"download\" description=\"Call to action [download]\" />\n            </a>\n            :\n            <span>{this.props.content.filename}</span>\n          }\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\" ref={(node) => this.assignWidth(node)}>\n          <img src={this.props.content.url} style={size} className=\"image-preview\" alt={this.props.content.filename} />\n        </div>\n        {this.props.onSendMessage ?\n          <SendMessage\n            messagePrompt=\"add_image_caption\"\n            acceptBlank={true}\n            onSendMessage={this.handleSendImage}\n            onError={this.props.onError} />\n          :\n          <div id=\"image-preview-footer\">\n            <div>\n              <div><b><FormattedMessage id=\"label_file_name\" defaultMessage=\"File name:\"\n                description=\"Label for a file name\" /></b></div>\n              <div><span title={this.props.content.filename}>{filename ? filename : '-'}</span></div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n                description=\"Label for file content type (mime)\" /></b></div>\n              <div>{this.props.content.type}</div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n                description=\"Label for file size\" /></b></div>\n              <div>{width} &times; {height} px; {bytesToHumanSize(this.props.content.size)}</div>\n            </div>\n          </div>}\n      </div>\n    );\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Invitation extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleButtonAction = this.handleButtonAction.bind(this);\n  }\n\n  handleButtonAction(evt, data) {\n    evt.preventDefault();\n    this.props.onAction(data);\n  }\n\n  render() {\n    return (\n      <div className=\"accept-invite-panel\">\n        <div className=\"title\">\n          <FormattedMessage id=\"chat_invitation\"\n            defaultMessage=\"You are invited to start a new chat. What would you like to do?\"\n            description=\"New chat invitation message: [Accept] [Ignore] [Block].\" />\n        </div>\n        <div className=\"footer\">\n          <button className=\"blue\" onClick={event => { this.handleButtonAction(event, \"accept\"); }}>\n            <FormattedMessage id=\"chat_invitation_accept\"\n              defaultMessage=\"Accept\" description=\"Action [Accept] for chat invitation.\" />\n          </button>\n          <button className=\"white\" onClick={event => { this.handleButtonAction(event, \"delete\"); }}>\n            <FormattedMessage id=\"chat_invitation_ignore\"\n              defaultMessage=\"Ignore\" description=\"Action [Ignore] for chat invitation.\" />\n          </button>\n          <button className=\"white\" onClick={event => { this.handleButtonAction(event, \"block\"); }}>\n            <FormattedMessage id=\"chat_invitation_block\"\n              defaultMessage=\"Block\" description=\"Action [Block] for chat invitation.\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nexport default class LoadSpinner extends React.PureComponent {\n  render() {\n    return (this.props.show ?\n      <div className=\"load-spinner-box\"><div className=\"loader-spinner\"></div></div> : null);\n  }\n}\n","/* This is just a static page to display when no conversation is selected. */\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME } from '../config.js';\n\nexport default class LogoView extends React.PureComponent {\n  render() {\n    const version = APP_NAME + ' (' + Tinode.getLibrary() + ')';\n    return (\n      <div id=\"dummy-view\">\n        <div>\n          <a href=\"https://github.com/tinode/chat/\">\n            <img id=\"logo\" alt=\"logo\" src=\"img/logo.svg\" />\n            <h2>Tinode Web</h2>\n          </a>\n          <p><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\" \n            description=\"Label for a client version\" /> {version}</p>\n          <p><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\"\n            description=\"Label for a server version\" /> {this.props.serverVersion} ({this.props.serverAddress})</p>\n        </div>\n      </div>\n    );\n  }\n};\n","// Utility class for hash navigation.\n\n// Parse hash as in http://www.example.com/path#hash as if it were\n// path and arguments.\nexport default class HashNavigation {\n  static parseUrlHash(hash) {\n    // Split path from args, path -> parts[0], args->path[1]\n    const parts = hash.split('?', 2);\n    const params = {};\n    let path = [];\n    if (parts[0]) {\n      path = parts[0].substr(1).split('/');\n    }\n    if (parts[1]) {\n      parts[1].split('&').forEach(function(part) {\n        let item = part.split('=');\n        if (item[0]) {\n          params[decodeURIComponent(item[0])] = decodeURIComponent(item[1]);\n        }\n      });\n    }\n    return {path: path, params: params};\n  }\n\n  static navigateTo(url) {\n    window.location.hash = url;\n  }\n\n  static composeUrlHash(path, params) {\n    let url = path.join('/');\n    const args = [];\n    for (const key in params) {\n      if (params.hasOwnProperty(key)) {\n        args.push(key + '=' + params[key]);\n      }\n    }\n    if (args.length > 0) {\n      url += '?' + args.join('&');\n    }\n    return url;\n  }\n\n  static addUrlParam(hash, key, value) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.params[key] = value;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static removeUrlParam(hash, key) {\n    const parsed = this.parseUrlHash(hash);\n    delete parsed.params[key];\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlSidePanel(hash, sidepanel) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[0] = sidepanel;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlTopic(hash, topic) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[1] = topic;\n    // Close InfoView on topic change.\n    delete parsed.params.info;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n}\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\nconst Drafty = Tinode.Drafty;\n\nimport ChatMessage from '../widgets/chat-message.jsx';\nimport DocPreview from '../widgets/doc-preview.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupSubs from '../widgets/group-subs.jsx';\nimport ImagePreview from '../widgets/image-preview.jsx';\nimport Invitation from '../widgets/invitation.jsx';\nimport LetterTile from '../widgets/letter-tile.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport LogoView from './logo-view.jsx';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { DEFAULT_P2P_ACCESS_MODE, IMAGE_PREVIEW_DIM, KEYPRESS_DELAY, MESSAGES_PAGE,\n  MAX_EXTERN_ATTACHMENT_SIZE, MAX_IMAGE_DIM, MAX_INBAND_ATTACHMENT_SIZE, READ_DELAY } from '../config.js';\nimport { SUPPORTED_IMAGE_FORMATS, blobToBase64, filePasted, fileToBase64,\n  imageScaled, makeImageUrl } from '../lib/blob-helpers.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { bytesToHumanSize, shortDateFormat } from '../lib/strformat.js';\n\n// Run timer with this frequency (ms) for checking notification queue.\nconst NOTIFICATION_EXEC_INTERVAL = 300;\n\nconst messages = defineMessages({\n  online_now: {\n    id: 'online_now',\n    defaultMessage: 'online now',\n    description: 'Indicator that the user or topic is currently online',\n  },\n  last_seen: {\n    id: 'last_seen_timestamp',\n    defaultMessage: 'Last seen',\n    description: 'Label for the timestamp of when the user or topic was last online'\n  },\n  not_found: {\n    id: 'title_not_found',\n    defaultMessage: 'Not found',\n    description: 'Title shown when topic is not found'\n  },\n  channel: {\n    id: 'channel',\n    defaultMessage: 'channel',\n    description: 'Subtitle shown for channels in MessagesView instead of last seen'\n  },\n  file_attachment_too_large: {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  }\n});\n\n// Checks if the access permissions are granted but not yet accepted.\nfunction isUnconfirmed(acs) {\n  if (acs) {\n    const ex = acs.getExcessive() || '';\n    return acs.isJoiner('given') && (ex.includes('R') || ex.includes('W'));\n  }\n  return false;\n}\n\nfunction isPeerRestricted(acs) {\n  if (acs) {\n    const ms = acs.getMissing() || '';\n    return acs.isJoiner('want') && (ms.includes('R') || ms.includes('W'));\n  }\n  return false;\n}\n\nclass MessagesView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = MessagesView.getDerivedStateFromProps(props, {});\n\n    this.leave = this.leave.bind(this);\n    this.sendImageAttachment = this.sendImageAttachment.bind(this);\n    this.sendFileAttachment = this.sendFileAttachment.bind(this);\n    this.sendKeyPress = this.sendKeyPress.bind(this);\n    this.handleScrollReference = this.handleScrollReference.bind(this);\n    this.handleScrollEvent = this.handleScrollEvent.bind(this);\n    this.handleDescChange = this.handleDescChange.bind(this);\n    this.handleSubsUpdated = this.handleSubsUpdated.bind(this);\n    this.handleNewMessage = this.handleNewMessage.bind(this);\n    this.handleAllMessagesReceived = this.handleAllMessagesReceived.bind(this);\n    this.handleInfoReceipt = this.handleInfoReceipt.bind(this);\n    this.handleImagePostview = this.handleImagePostview.bind(this);\n    this.handleClosePreview = this.handleClosePreview.bind(this);\n    this.handleFormResponse = this.handleFormResponse.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleShowContextMenuMessage = this.handleShowContextMenuMessage.bind(this);\n    this.handleNewChatAcceptance = this.handleNewChatAcceptance.bind(this);\n    this.handleEnablePeer = this.handleEnablePeer.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n    this.postReadNotification = this.postReadNotification.bind(this);\n    this.clearNotificationQueue = this.clearNotificationQueue.bind(this);\n\n    this.readNotificationQueue = [];\n    this.readNotificationTimer = null;\n  }\n\n  componentDidMount() {\n    // this.propsChange(this.props, this.state);\n    if (this.messagesScroller) {\n      this.messagesScroller.addEventListener('scroll', this.handleScrollEvent);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messagesScroller) {\n      this.messagesScroller.removeEventListener('scroll', this.handleScrollEvent);\n    }\n\n    // Flush all notifications.\n    this.clearNotificationQueue();\n  }\n\n  // Scroll last message into view on component update e.g. on message received\n  // or vertical shrinking.\n  componentDidUpdate(prevProps, prevState) {\n    if (this.messagesScroller) {\n      if (prevState.topic != this.state.topic || prevState.messages.length != this.state.messages.length) {\n        // New message\n        this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n      } else if (prevProps.viewportHeight > this.props.viewportHeight) {\n        // Componet changed height.\n        this.messagesScroller.scrollTop += prevProps.viewportHeight - this.props.viewportHeight;\n      }\n    }\n\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (this.state.topic != prevState.topic) {\n      if (prevState.topic && !Tinode.isNewGroupTopicName(prevState.topic)) {\n        this.leave(prevState.topic);\n      }\n\n      if (topic) {\n        topic.onData = this.handleNewMessage;\n        topic.onAllMessagesReceived = this.handleAllMessagesReceived;\n        topic.onInfo = this.handleInfoReceipt;\n        topic.onMetaDesc = this.handleDescChange;\n        topic.onSubsUpdated = this.handleSubsUpdated;\n        topic.onPres = this.handleSubsUpdated;\n      }\n    }\n\n    if (!this.props.applicationVisible) {\n      // If application is not visible, flush all unsent 'read' notifications.\n      this.clearNotificationQueue();\n    } else {\n      // Otherwise assume there are unread messages.\n      this.postReadNotification(0);\n    }\n\n    if (topic && !topic.isSubscribed() && this.props.ready &&\n        ((this.state.topic != prevState.topic) || !prevProps.ready)) {\n      // Is this a new topic?\n      const newTopic = (this.props.newTopicParams && this.props.newTopicParams._topicName == this.props.topic);\n\n      // Don't request the tags. They are useless unless the user\n      // is the owner and is editing the topic.\n      let getQuery = topic.startMetaQuery().withLaterDesc().withLaterSub();\n      if (this.state.isReader || newTopic) {\n        // Reading is either permitted or we don't know because it's a new topic. Ask for messages.\n        getQuery = getQuery.withLaterData(MESSAGES_PAGE);\n        if (this.state.isReader) {\n          getQuery = getQuery.withLaterDel();\n        }\n        // And show \"loading\" spinner.\n        this.setState({ fetchingMessages: true });\n      }\n      const setQuery = newTopic ? this.props.newTopicParams : undefined;\n      topic.subscribe(getQuery.build(), setQuery)\n        .then((ctrl) => {\n          if (ctrl.code == 303) {\n            // Redirect to another topic requested.\n            HashNavigation.navigateTo(HashNavigation.setUrlTopic('', ctrl.params.topic));\n            return;\n          }\n          if (this.state.topic != ctrl.topic) {\n            this.setState({topic: ctrl.topic});\n          }\n          this.props.onNewTopicCreated(this.props.topic, ctrl.topic);\n          // If there are unsent messages, try sending them now.\n          topic.queuedMessages((pub) => {\n            if (!pub._sending && topic.isSubscribed()) {\n              topic.publishMessage(pub);\n            }\n          });\n        })\n        .catch((err) => {\n          console.log(\"Failed subscription to\", this.state.topic);\n          this.props.onError(err.message, 'err');\n          const blankState = MessagesView.getDerivedStateFromProps({}, {});\n          blankState.title = this.props.intl.formatMessage(messages.not_found);\n          this.setState(blankState);\n        });\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let nextState = {};\n    if (!nextProps.topic) {\n      // Default state: no topic.\n      nextState = {\n        messages: [],\n        onlineSubs: [],\n        topic: null,\n        title: '',\n        avatar: null,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false,\n        peerMessagingDisabled: false,\n        channel: false\n      };\n    } else if (nextProps.topic != prevState.topic) {\n      const topic = nextProps.tinode.getTopic(nextProps.topic);\n      nextState = {\n        topic: nextProps.topic,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false\n      };\n\n      if (topic) {\n        // Topic exists.\n        const msgs = [];\n        const subs = [];\n\n        if (nextProps.connected) {\n          topic.subscribers((sub) => {\n            if (sub.online && sub.user != nextProps.myUserId) {\n              subs.push(sub);\n            }\n          });\n        }\n\n        topic.messages(function(msg) {\n          if (!msg.deleted) {\n            msgs.push(msg);\n          }\n        });\n\n        Object.assign(nextState, {\n          messages: msgs,\n          onlineSubs: subs\n        });\n\n        if (topic.public) {\n          Object.assign(nextState, {\n            title: topic.public.fn,\n            avatar: makeImageUrl(topic.public.photo)\n          });\n        } else {\n          Object.assign(nextState, {\n            title: '',\n            avatar: null\n          });\n        }\n\n        const peer = topic.p2pPeerDesc();\n        if (peer) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: isPeerRestricted(peer.acs)\n          });\n        } else if (prevState.peerMessagingDisabled) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: false\n          });\n        }\n        Object.assign(nextState, {\n          channel: topic.isChannelType()\n        });\n      } else {\n        // Invalid topic.\n        Object.assign(nextState, {\n          messages: [],\n          onlineSubs: [],\n          title: '',\n          avatar: null,\n          peerMessagingDisabled: false,\n          channel: false\n        });\n      }\n    }\n\n    if (nextProps.acs) {\n      if (nextProps.acs.isWriter() != prevState.isWriter) {\n        nextState.isWriter = !prevState.isWriter;\n      }\n      if (nextProps.acs.isReader() != prevState.isReader) {\n        nextState.isReader = !prevState.isReader;\n      }\n      if (!nextProps.acs.isReader('given') != prevState.readingBlocked) {\n        nextState.readingBlocked = !prevState.readingBlocked;\n      }\n      if (nextProps.acs.isSharer() != prevState.isSharer) {\n        nextState.isSharer = !prevState.isSharer;\n      }\n    } else {\n      if (prevState.isWriter) {\n        nextState.isWriter = false;\n      }\n      if (prevState.isReader) {\n        nextState.isReader = false;\n      }\n      if (!prevState.readingBlocked) {\n        prevState.readingBlocked = true;\n      }\n      if (prevState.isSharer) {\n        nextState.isSharer = false;\n      }\n    }\n\n    if (isUnconfirmed(nextProps.acs) == !prevState.unconformed) {\n      nextState.unconfirmed = !prevState.unconformed;\n    }\n\n    // Clear subscribers online when there is no connection.\n    if (!nextProps.connected && prevState.onlineSubs && prevState.onlineSubs.length > 0) {\n      nextState.onlineSubs = [];\n    }\n\n    return nextState;\n  }\n\n  leave(oldTopicName) {\n    if (!oldTopicName) {\n      return;\n    }\n    let oldTopic = this.props.tinode.getTopic(oldTopicName);\n    if (oldTopic && oldTopic.isSubscribed()) {\n      oldTopic.leave(false)\n        .catch(() => { /* do nothing here */ })\n        .finally(() => {\n          // We don't care if the request succeeded or failed.\n          // The topic is dead regardless.\n          this.setState({fetchingMessages: false});\n          oldTopic.onData = undefined;\n          oldTopic.onAllMessagesReceived = undefined;\n          oldTopic.onInfo = undefined;\n          oldTopic.onMetaDesc = undefined;\n          oldTopic.onSubsUpdated = undefined;\n          oldTopic.onPres = undefined;\n        });\n    }\n  }\n\n  handleScrollReference(node) {\n    if (node) {\n      node.addEventListener('scroll', this.handleScrollEvent);\n      this.messagesScroller = node;\n      this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n    }\n  }\n\n  // Get older messages\n  handleScrollEvent(event) {\n    this.setState({scrollPosition: event.target.scrollHeight - event.target.scrollTop});\n    if (event.target.scrollTop <= 0) {\n      this.setState((prevState, props) => {\n        const newState = {};\n        if (!prevState.fetchingMessages) {\n          const topic = this.props.tinode.getTopic(this.state.topic);\n          if (topic && topic.isSubscribed() && topic.msgHasMoreMessages()) {\n            newState.fetchingMessages = true;\n            topic.getMessagesPage(MESSAGES_PAGE).catch((err) => {\n              this.setState({fetchingMessages: false});\n              this.props.onError(err.message, 'err');\n            });\n          }\n        }\n        return newState;\n      });\n    }\n  }\n\n  handleDescChange(desc) {\n    if (desc.public) {\n      this.setState({\n        title: desc.public.fn,\n        avatar: makeImageUrl(desc.public.photo)\n      });\n    } else {\n      this.setState({\n        title: '',\n        avatar: null\n      });\n    }\n\n    if (desc.acs) {\n      this.setState({\n        isWriter: desc.acs.isWriter(),\n        isReader: desc.acs.isReader(),\n        readingBlocked: !desc.acs.isReader('given'),\n        unconfirmed: isUnconfirmed(desc.acs),\n      });\n    }\n  }\n\n  postReadNotification(seq) {\n    // Ignore notifications if the app is invisible.\n    if (!this.props.applicationVisible) {\n      return;\n    }\n\n    // Set up the timer if it's not running already.\n    if (!this.readNotificationTimer) {\n      this.readNotificationTimer = setInterval(() => {\n        if (this.readNotificationQueue.length == 0) {\n          // Shut down the timer if the queue is empty.\n          clearInterval(this.readNotificationTimer);\n          this.readNotificationTimer = null;\n          return;\n        }\n\n        let seq = -1;\n        while (this.readNotificationQueue.length > 0) {\n          const n = this.readNotificationQueue[0];\n          if (n.topicName != this.state.topic) {\n            // Topic has changed. Drop the notification.\n            this.readNotificationQueue.shift();\n            continue;\n          }\n\n          const now = new Date();\n          if (n.sendAt <= now) {\n            // Remove expired notification from queue.\n            this.readNotificationQueue.shift();\n            seq = Math.max(seq, n.seq);\n          } else {\n            break;\n          }\n        }\n\n        // Send only one notification for the whole batch of messages.\n        if (seq >= 0) {\n          const topic = this.props.tinode.getTopic(this.state.topic);\n          if (topic) {\n            topic.noteRead(seq);\n          }\n        }\n      }, NOTIFICATION_EXEC_INTERVAL);\n    }\n\n    const now = new Date();\n    this.readNotificationQueue.push({\n      topicName: this.state.topic,\n      seq: seq,\n      sendAt: now.setMilliseconds(now.getMilliseconds() + READ_DELAY)\n    });\n  }\n\n  // Clear notification queue and timer.\n  clearNotificationQueue() {\n    this.readNotificationQueue = [];\n    if (this.readNotificationTimer) {\n      clearInterval(this.readNotificationTimer);\n      this.readNotificationTimer = null;\n    }\n  }\n\n  handleSubsUpdated() {\n    if (this.state.topic) {\n      const subs = [];\n      const topic = this.props.tinode.getTopic(this.state.topic);\n      topic.subscribers((sub) => {\n        if (sub.online && sub.user != this.props.myUserId) {\n          subs.push(sub);\n        }\n      });\n      const newState = {onlineSubs: subs};\n      const peer = topic.p2pPeerDesc();\n      if (peer) {\n        Object.assign(newState, {\n          peerMessagingDisabled: isPeerRestricted(peer.acs)\n        });\n      } else if (this.state.peerMessagingDisabled) {\n        Object.assign(newState, {\n          peerMessagingDisabled: false\n        });\n      }\n      this.setState(newState);\n    }\n  }\n\n  handleNewMessage(msg) {\n    // Regenerate messages list\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    const newState = {messages: []};\n    topic.messages((m) => {\n      if (!m.deleted) {\n        newState.messages.push(m);\n      }\n    });\n\n    // msg could be null if one or more messages were deleted.\n    if (msg && !msg.deleted) {\n      // If the message is added to the end of the message list,\n      // scroll to the bottom.\n      if (topic.isNewMessage(msg.seq)) {\n        newState.scrollPosition = 0;\n      }\n\n      // Aknowledge messages except own messages. They are\n      // automatically assumed to be read and recived.\n      const status = topic.msgStatus(msg, true);\n      if (status >= Tinode.MESSAGE_STATUS_SENT && msg.from != this.props.myUserId) {\n        this.postReadNotification(msg.seq);\n      }\n      this.props.onData(msg);\n    }\n    this.setState(newState);\n  }\n\n  handleAllMessagesReceived(count) {\n    this.setState({fetchingMessages: false});\n    if (count > 0) {\n      // 0 means \"latest\".\n      this.postReadNotification(0);\n    }\n  }\n\n  handleInfoReceipt(info) {\n    switch (info.what) {\n      case 'kp': {\n        clearTimeout(this.keyPressTimer);\n        var instance = this;\n        this.keyPressTimer = setTimeout(function() {\n          instance.setState({typingIndicator: false});\n        }, KEYPRESS_DELAY + 1000);\n        if (!this.state.typingIndicator) {\n          this.setState({typingIndicator: true});\n        }\n        break;\n      }\n      case 'read':\n      case 'recv':\n        // Redraw due to changed recv/read status.\n        this.forceUpdate();\n        break;\n      default:\n        console.log(\"Other change in topic: \", info.what);\n    }\n  }\n\n  handleImagePostview(content) {\n    this.setState({ imagePostview: content });\n  }\n\n  handleClosePreview() {\n    if (this.state.imagePreview && this.state.imagePreview.url) {\n      URL.revokeObjectURL(this.state.imagePreview.url);\n    }\n    this.setState({ imagePostview: null, imagePreview: null, docPreview: null });\n  }\n\n  handleFormResponse(action, text, data) {\n    if (action == 'pub') {\n      this.props.sendMessage(Drafty.attachJSON(Drafty.parse(text), data));\n    } else if (action == 'url') {\n      const url = new URL(data.ref);\n      const params = url.searchParams;\n      for (let key in data.resp) {\n        if (data.resp.hasOwnProperty(key)) {\n          params.set(key, data.resp[key]);\n        }\n      }\n      ['name', 'seq'].map(function(key) {\n        if (data[key]) {\n          params.set(key, data[key]);\n        }\n      });\n      params.set('uid', this.props.myUserId);\n      url.search = params;\n      window.open(url, '_blank');\n    } else {\n      console.log(\"Unknown action in form\", action);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.state.topic, y: e.pageY, x: e.pageX });\n  }\n\n  handleShowContextMenuMessage(params, messageSpecificMenuItems) {\n    params.topicName = this.state.topic;\n    const menuItems = messageSpecificMenuItems || [];\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (topic) {\n      if (!topic.isChannelType()) {\n        menuItems.push('message_delete');\n      }\n      const acs = topic.getAccessMode();\n      if (acs && acs.isDeleter()) {\n        menuItems.push('message_delete_hard');\n      }\n    }\n    this.props.showContextMenu(params, menuItems);\n  }\n\n  handleNewChatAcceptance(action) {\n    this.props.onNewChat(this.state.topic, action);\n  }\n\n  handleEnablePeer(e) {\n    e.preventDefault();\n    this.props.onChangePermissions(this.state.topic, DEFAULT_P2P_ACCESS_MODE, this.state.topic);\n  }\n\n  sendKeyPress() {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (topic.isSubscribed()) {\n      topic.noteKeyPress();\n    }\n  }\n\n  // Send attachment as Drafty message:\n  // - if file is too large, upload it and send a s link.\n  // - if file is small enough, just send it in-band.\n  sendFileAttachment(file) {\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (file.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      if (!uploader) {\n        this.props.onError(this.props.intl.formatMessage(messages.cannot_initiate_upload));\n        return;\n      }\n      const uploadCompletionPromise = uploader.upload(file);\n      const msg = Drafty.attachFile(null, {\n        mime: file.type,\n        filename: file.name,\n        size: file.size,\n        urlPromise: uploadCompletionPromise\n      });\n      // Pass data and the uploader to the TinodeWeb.\n      this.props.sendMessage(msg, uploadCompletionPromise, uploader);\n    } else {\n      // Small enough to send inband.\n      fileToBase64(file,\n        (mime, bits, fname) => {\n          this.props.sendMessage(Drafty.attachFile(null, {mime: mime, data: bits, filename: fname}));\n        },\n        this.props.onError\n      );\n    }\n  }\n\n  // handleAttachFile method is called when [Attach file] button is clicked.\n  handleAttachFile(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    if (file.size > maxExternAttachmentSize) {\n      // Too large.\n      this.props.onError(this.props.intl.formatMessage(messages.file_attachment_too_large,\n        {size: bytesToHumanSize(file.size), limit: bytesToHumanSize(maxExternAttachmentSize)}), 'err');\n    } else {\n      this.setState({ docPreview: {\n        file: file,\n        filename: file.name,\n        size: file.size,\n        type: file.type\n      }});\n    }\n  }\n\n  // sendImageAttachment sends the image bits inband as Drafty message.\n  sendImageAttachment(caption, blob) {\n    const mime = this.state.imagePreview.type;\n    const width = this.state.imagePreview.width;\n    const height = this.state.imagePreview.height;\n    const fname = this.state.imagePreview.filename;\n\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (blob.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      if (!uploader) {\n        this.props.onError(this.props.intl.formatMessage(messages.cannot_initiate_upload));\n        return;\n      }\n      const uploadCompletionPromise = uploader.upload(blob);\n\n      // Make small preview to show while uploading.\n      imageScaled(blob, IMAGE_PREVIEW_DIM, IMAGE_PREVIEW_DIM, -1, false,\n        (tinyBlob) => {\n          // Convert tiny image into base64 for serialization and previewing.\n          blobToBase64(tinyBlob, (blobMime, tinyBits64) => {\n            let msg = Drafty.insertImage(null, 0, {\n              mime: mime,\n              _tempPreview: tinyBits64, // This preview will not be serialized.\n              width: width,\n              height: height,\n              filename: fname,\n              size: blob.size,\n              urlPromise: uploadCompletionPromise\n            });\n            if (caption) {\n              msg = Drafty.appendLineBreak(msg);\n              msg = Drafty.append(msg, Drafty.init(caption));\n            }\n            // Pass data and the uploader to the TinodeWeb.\n            this.props.sendMessage(msg, uploadCompletionPromise, uploader);\n          }\n        )},\n        // Failure\n        (err) => {\n          this.props.onError(err, 'err');\n        }\n      );\n      return;\n    }\n\n    // Upload the image if it's too big to be send inband.\n    blobToBase64(blob, (blobMime, bits64) => {\n      let msg = Drafty.insertImage(null, 0, {\n        mime: blobMime,\n        preview: bits64, // Serializable preview\n        width: width,\n        height: height,\n        filename: fname,\n        size: blob.size\n      });\n      if (caption) {\n        msg = Drafty.appendLineBreak(msg);\n        msg = Drafty.append(msg, Drafty.init(caption));\n      }\n      this.props.sendMessage(msg);\n    });\n  }\n\n  // handleAttachImage method is called when [Attach image] button is clicked.\n  handleAttachImage(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    // Get image dimensions and size, optionally scale it down.\n    imageScaled(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, maxExternAttachmentSize, false,\n      // Success\n      (blob, mime, width, height, fname) => {\n        this.setState({imagePreview: {\n          url: URL.createObjectURL(blob),\n          blob: blob,\n          filename: fname,\n          width: width,\n          height: height,\n          size: blob.size,\n          type: mime\n        }});\n      },\n      // Failure\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    );\n  }\n\n  handleCancelUpload(seq, uploader) {\n    const found = this.state.messages.find(msg => msg.seq == seq);\n    if (found) {\n      found._cancelled = true;\n    }\n    uploader.cancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n\n    let component;\n    if (this.props.hideSelf) {\n      component = null;\n    } else if (!this.state.topic) {\n      component = (\n        <LogoView\n          serverVersion={this.props.serverVersion}\n          serverAddress={this.props.serverAddress} />\n      );\n    } else {\n      let component2;\n      if (this.state.imagePreview) {\n        // Preview image before sending.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePreview}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendImageAttachment} />\n        );\n      } else if (this.state.imagePostview) {\n        // Expand received image.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePostview}\n            onClose={this.handleClosePreview} />\n        );\n      } else if (this.state.docPreview) {\n        // Preview attachment before sending.\n        component2 = (\n          <DocPreview\n            content={this.state.docPreview}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendFileAttachment} />\n        );\n      } else {\n        const topic = this.props.tinode.getTopic(this.state.topic);\n        const isChannel = topic.isChannelType();\n        const groupTopic = topic.isGroupType() && !isChannel;\n        let messageNodes = [];\n        let previousFrom = null;\n        let chatBoxClass = null;\n        for (let i=0; i<this.state.messages.length; i++) {\n          let msg = this.state.messages[i];\n          let nextFrom = null;\n\n          if (i + 1 < this.state.messages.length) {\n            nextFrom = this.state.messages[i+1].from || 'chan';\n          }\n\n          let sequence = 'single';\n          let thisFrom = msg.from || 'chan';\n          if (thisFrom == previousFrom) {\n            if (thisFrom == nextFrom) {\n              sequence = 'middle';\n            } else {\n              sequence = 'last';\n            }\n          } else if (thisFrom == nextFrom) {\n            sequence = 'first';\n          }\n          previousFrom = thisFrom;\n\n          const isReply = !(thisFrom == this.props.myUserId);\n          const deliveryStatus = topic.msgStatus(msg, true);\n\n          let userName, userAvatar, userFrom;\n          if (groupTopic) {\n            const user = topic.userDesc(thisFrom);\n            if (user && user.public) {\n              userName = user.public.fn;\n              userAvatar = makeImageUrl(user.public.photo);\n            }\n            userFrom = thisFrom;\n            chatBoxClass='chat-box group';\n          } else {\n            chatBoxClass='chat-box';\n          }\n\n          messageNodes.push(\n            <ChatMessage\n              tinode={this.props.tinode}\n              content={msg.content}\n              deleted={msg.hi}\n              mimeType={msg.head ? msg.head.mime : null}\n              timestamp={msg.ts}\n              response={isReply}\n              seq={msg.seq}\n              userFrom={userFrom}\n              userName={userName}\n              userAvatar={userAvatar}\n              sequence={sequence}\n              received={deliveryStatus}\n              uploader={msg._uploader}\n              viewportWidth={this.props.viewportWidth}\n              showContextMenu={this.state.channel? false : this.handleShowContextMenuMessage}\n              onImagePreview={this.handleImagePostview}\n              onFormResponse={this.handleFormResponse}\n              onError={this.props.onError}\n              onCancelUpload={this.handleCancelUpload}\n              key={msg.seq} />\n          );\n        }\n\n        let lastSeen = null;\n        if (isChannel) {\n          lastSeen = formatMessage(messages.channel);\n        } else {\n          const cont = this.props.tinode.getMeTopic().getContact(this.state.topic);\n          if (cont && Tinode.isP2PTopicName(cont.topic)) {\n            if (cont.online) {\n              lastSeen = formatMessage(messages.online_now);\n            } else if (cont.seen) {\n              lastSeen = formatMessage(messages.last_seen) + \": \" +\n                shortDateFormat(cont.seen.when, this.props.intl.locale);\n              // TODO: also handle user agent in c.seen.ua\n            }\n          }\n        }\n        const avatar = this.state.avatar || true;\n        const online = this.props.online ? 'online' + (this.state.typingIndicator ? ' typing' : '') : 'offline';\n\n        component2 = (\n          <>\n            <div id=\"topic-caption-panel\" className=\"caption-panel\">\n              {this.props.displayMobile ?\n                <a href=\"#\" id=\"hide-message-view\" onClick={(e) => {e.preventDefault(); this.props.onHideMessagesView();}}>\n                  <i className=\"material-icons\">arrow_back</i>\n                </a>\n                :\n                null}\n              <div className=\"avatar-box\">\n                <LetterTile\n                  avatar={avatar}\n                  topic={this.state.topic}\n                  title={this.state.title} />\n                {!isChannel ? <span className={online} /> : null}\n              </div>\n              <div id=\"topic-title-group\">\n                <div id=\"topic-title\" className=\"panel-title\">{\n                  this.state.title ||\n                  <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n                    description=\"Title shown when the topic has no name\" /></i>\n                }</div>\n                <div id=\"topic-last-seen\">{lastSeen}</div>\n              </div>\n              {groupTopic ?\n                <GroupSubs\n                  subscribers={this.state.onlineSubs} /> :\n                <div id=\"topic-users\" />\n              }\n              <div>\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">more_vert</i>\n                </a>\n              </div>\n            </div>\n            {this.props.displayMobile ?\n              <ErrorPanel\n                level={this.props.errorLevel}\n                text={this.props.errorText}\n                onClearError={this.props.onError} />\n              : null}\n            <LoadSpinner show={this.state.fetchingMessages} />\n            <div id=\"messages-container\">\n              <div id=\"messages-panel\" ref={this.handleScrollReference}>\n                <ul id=\"scroller\" className={chatBoxClass}>\n                  {messageNodes}\n                </ul>\n              </div>\n              {!this.state.isReader ?\n              <div id=\"write-only-background\">\n                {this.state.readingBlocked ?\n                <div id=\"write-only-note\">\n                  <FormattedMessage id=\"messages_not_readable\" defaultMessage=\"no access to messages\"\n                    description=\"Message shown in topic without the read access\" />\n                </div>\n                : null }\n              </div>\n              : null }\n            </div>\n            {this.state.peerMessagingDisabled && !this.state.unconfirmed ?\n              <div id=\"peer-messaging-disabled-note\">\n                <i className=\"material-icons secondary\">block</i> <FormattedMessage\n                  id=\"peers_messaging_disabled\" defaultMessage=\"Peer's messaging is disabled.\"\n                  description=\"Shown when the p2p peer's messaging is disabled\" /> <a href=\"#\"\n                    onClick={this.handleEnablePeer}><FormattedMessage id=\"enable_peers_messaging\"\n                    defaultMessage=\"Enable\" description=\"Call to action to enable peer's messaging\" /></a>.\n              </div> : null}\n            {this.state.unconfirmed ?\n              <Invitation onAction={this.handleNewChatAcceptance} />\n              :\n              <SendMessage\n                disabled={!this.state.isWriter}\n                onSendMessage={this.props.sendMessage}\n                onKeyPress={this.sendKeyPress}\n                onAttachFile={this.handleAttachFile}\n                onAttachImage={this.handleAttachImage}\n                onError={this.props.onError} />}\n          </>\n        );\n      }\n\n      component = <div id=\"topic-view\">{component2}</div>\n    }\n    return component;\n  }\n};\n\nexport default injectIntl(MessagesView);\n","// The <- button to be displayed in title bars.\nimport React from 'react';\n\nexport default class ButtonBack extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onBack();}}>\n        <i className=\"material-icons\">arrow_back</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class MenuContacts extends React.PureComponent {\n  render() {\n    return (\n      <div>\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onNewTopic();}}><i className=\"material-icons\">chat</i></a>\n        &nbsp;\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nexport default class MenuStart extends React.PureComponent {\n  render() {\n    return (\n        <div>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSignUp();}}><i className=\"material-icons\">person_add</i></a>\n          &nbsp;\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n        </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\nimport ButtonBack from './button-back.jsx';\nimport MenuContacts from './menu-contacts.jsx';\nimport MenuStart from './menu-start.jsx';\n\nexport default class SideNavbar extends React.PureComponent {\n  render() {\n    return (\n        <div id=\"side-caption-panel\" className=\"caption-panel\">\n          {this.props.onCancel ? <ButtonBack onBack={this.props.onCancel} /> : null}\n          {this.props.avatar ?\n            <div id=\"self-avatar\" className=\"avatar-box\">\n              <LetterTile\n                avatar={this.props.avatar}\n                topic={this.props.myUserId}\n                title={this.props.title} />\n            </div>\n            :\n            null}\n          <div id=\"sidepanel-title\" className=\"panel-title\">{this.props.title}</div>\n          {this.props.state === 'login' ?\n              <MenuStart onSignUp={this.props.onSignUp} onSettings={this.props.onSettings} /> :\n            this.props.state === 'contacts' ?\n              <MenuContacts onNewTopic={this.props.onNewTopic} onSettings={this.props.onSettings} /> :\n            null}\n        </div>\n    );\n  }\n};\n","/* ContactsView holds all contacts-related stuff */\nimport React from 'react';\nimport { FormattedMessage, defineMessages } from 'react-intl';\n\nimport ContactList from '../widgets/contact-list.jsx';\n\nimport { updateFavicon } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  archived_contacts_title: {\n    id: \"archived_contacts\",\n    defaultMessage: \"Archived contacts ({count})\",\n    description: \"Label for archived chats\"\n  }\n});\n\nexport default class ContactsView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAction = this.handleAction.bind(this);\n\n    this.state = ContactsView.deriveStateFromProps(props);\n  }\n\n  static deriveStateFromProps(props) {\n    const contacts = [];\n    let unreadThreads = 0;\n    let archivedCount = 0;\n    props.chatList.map((c) => {\n      const blocked = c.acs && !c.acs.isJoiner();\n      // Show only blocked contacts only when props.blocked == true.\n      if (blocked && props.blocked) {\n        contacts.push(c);\n      }\n      if (blocked || props.blocked) {\n        return;\n      }\n\n      if (c.private && c.private.arch) {\n        if (props.archive) {\n          contacts.push(c);\n        } else {\n          archivedCount ++;\n        }\n      } else if (!props.archive) {\n        contacts.push(c);\n        unreadThreads += c.unread > 0 ? 1 : 0;\n      }\n    });\n\n    contacts.sort((a, b) => {\n      return (b.touched || 0) - (a.touched || 0);\n    });\n\n    if (archivedCount > 0) {\n      contacts.push({\n        action: 'archive',\n        title: messages.archived_contacts_title,\n        values: {count: archivedCount}\n      });\n    }\n\n    return {\n      contactList: contacts,\n      unreadThreads: unreadThreads\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chatList != this.props.chatList ||\n        prevProps.archive != this.props.archive ||\n        prevProps.blocked != this.props.blocked) {\n      const newState = ContactsView.deriveStateFromProps(this.props);\n      this.setState(newState);\n      if (newState.unreadThreads != prevState.unreadThreads) {\n        updateFavicon(newState.unreadThreads);\n      }\n    }\n  }\n\n  handleAction(action_ignored) {\n    this.props.onShowArchive();\n  }\n\n  render() {\n    return (\n      <FormattedMessage id=\"contacts_not_found\"\n        defaultMessage=\"You have no chats<br />¯∖_(ツ)_/¯\"\n        description=\"HTML message shown in ContactList when no contacts are found\">{\n        (no_contacts) => <ContactList\n          connected={this.props.connected}\n          contacts={this.state.contactList}\n          emptyListMessage={no_contacts}\n          topicSelected={this.props.topicSelected}\n          myUserId={this.props.myUserId}\n          showOnline={true}\n          showUnread={true}\n          onTopicSelected={this.props.onTopicSelected}\n          showContextMenu={this.props.showContextMenu}\n          onAction={this.handleAction} />\n      }</FormattedMessage>\n    );\n  }\n};\n","// Helper functions for storing values in localStorage.\n// By default localStorage can store only strings, not objects or other types.\n\nexport default class LocalStorageUtil {\n  // Replace old object with the new one.\n  static setObject(key, value) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n\n  // Get stored object.\n  static getObject(key) {\n    const value = localStorage.getItem(key);\n    return value && JSON.parse(value);\n  }\n\n  // Partially or wholly update stored object.\n  static updateObject(key, value) {\n    const oldVal = this.getObject(key);\n    this.setObject(key, Object.assign(oldVal || {}, value));\n  }\n\n  // Just a wrapper.\n  static removeItem(key) {\n    localStorage.removeItem(key);\n  }\n}\n","// Account registration.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport { vcard } from '../lib/utils.js';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class CreateAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: '',\n      password: '',\n      email: '',\n      fn: '', // full/formatted name\n      imageDataUrl: null,\n      errorCleared: false,\n      saveToken: LocalStorageUtil.getObject('keep-logged-in')\n    };\n\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(password) {\n    this.setState({password: password});\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value})\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleToggleSaveToken() {\n    LocalStorageUtil.setObject('keep-logged-in', !this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({errorCleared: false});\n    this.props.onCreateAccount(\n      this.state.login.trim(),\n      this.state.password.trim(),\n      vcard(this.state.fn.trim().substring(0, MAX_TITLE_LENGTH), this.state.imageDataUrl),\n      {'meth': 'email', 'val': this.state.email});\n  }\n\n  render() {\n    let submitClasses = 'blue';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form className=\"panel-form-column\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n              description=\"Placeholer for username/login\">{\n              (login_prompt) => <input type=\"text\" placeholder={login_prompt} autoComplete=\"user-name\"\n                value={this.state.login} onChange={this.handleLoginChange} required autoFocus />\n            }</FormattedMessage>\n            <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n              description=\"Placeholder/prompt for entering password\">{\n              (password_prompt) => <VisiblePassword placeholder={password_prompt} autoComplete=\"new-password\"\n                value={this.state.password} onFinished={this.handlePasswordChange}\n                required={true} />\n            }</FormattedMessage>\n          </div>\n          <AvatarUpload\n            onImageChanged={this.handleImageChanged}\n            onError={this.props.onError} />\n        </div>\n        <div  className=\"panel-form-row\">\n          <FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n            description=\"Input placeholder for person's full name\">{\n            (full_name_prompt) => <input type=\"text\" placeholder={full_name_prompt} autoComplete=\"name\"\n              value={this.state.fn} onChange={this.handleFnChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <FormattedMessage id=\"email_prompt\" defaultMessage=\"Email, e.g. jdoe@example.com\"\n            description=\"Input placeholder for email entry\">{\n            (email_prompt) => <input type=\"email\" placeholder={email_prompt} autoComplete=\"email\"\n              value={this.state.email} onChange={this.handleEmailChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n            description=\"Label for a checkbox\">{\n            (stay_logged_in) => <label htmlFor=\"save-token\">&nbsp;{stay_logged_in}</label>\n          }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_up\" defaultMessage=\"Sign up\"\n              description=\"Create account button [Sign Up]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class EditAccountView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    this.state = {\n      fullName: me.public ? me.public.fn : undefined,\n      avatar: makeImageUrl(me.public ? me.public.photo : null)\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n                description=\"Label for full name editing\" />\n            </label>\n            <div className=\"large\">{this.state.fullName}</div>\n            <div>\n              <label className=\"small\"><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n                description=\"Label for user address (ID)\" /></label>&nbsp;\n              <tt>{this.props.myUserId}</tt>\n            </div>\n          </div>\n          <AvatarUpload\n            avatar={this.state.avatar}\n            readOnly={!this.state.owner}\n            uid={this.props.myUserId}\n            title={this.state.fullName} />\n        </div>\n        <div className=\"panel-form-row\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('general');}}>\n            <i className=\"material-icons\">edit</i>&nbsp;\n            <FormattedMessage id=\"button_edit\" defaultMessage=\"Edit\" description=\"Call to action [Edit]\" />\n          </a>\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('notif');}}>\n            <i className=\"material-icons\">notifications</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_notifications\"\n              defaultMessage=\"Notifications\" description=\"Sidepanel title for AccNotificationsView.\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('security');}}>\n            <i className=\"material-icons\">security</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_security\"\n              defaultMessage=\"Security\" description=\"Sidepanel title for AccSecurityView.\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('support');}}>\n            <i className=\"material-icons\">contact_support</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_support\"\n              defaultMessage=\"Support\" description=\"Sidepanel title for AccSupportView.\" />\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport TagManager from '../widgets/tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, asEmail, asPhone, vcard } from '../lib/utils.js';\n\nexport default class AccGeneralView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    this.state = {\n      fullName: me.public ? me.public.fn : undefined,\n      avatar: makeImageUrl(me.public ? me.public.photo : null),\n      tags: me.tags(),\n      credentials: me.getCredentials() || [],\n      addCredActive: false,\n      addCredInvalid: false,\n      newCred: '',\n      previousOnTags: me.onTagsUpdated\n    };\n\n    this.tnNewTags = this.tnNewTags.bind(this);\n    this.tnCredsUpdated = this.tnCredsUpdated.bind(this);\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleCredChange = this.handleCredChange.bind(this);\n    this.handleCredKeyDown = this.handleCredKeyDown.bind(this);\n    this.handleCredEntered = this.handleCredEntered.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n  }\n\n  componentDidMount() {\n    const me = this.props.tinode.getMeTopic();\n    me.onCredsUpdated = this.tnCredsUpdated;\n    me.onTagsUpdated = this.tnNewTags;\n  }\n\n  componentWillUnmount() {\n    const me = this.props.tinode.getMeTopic();\n    me.onTagsUpdated = this.state.previousOnTags;\n    me.onCredsUpdated = undefined;\n  }\n\n  tnNewTags(tags) {\n    this.setState({tags: tags});\n  }\n\n  tnCredsUpdated(creds) {\n    this.setState({credentials: creds || []});\n  }\n\n  handleFullNameUpdate(fn) {\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\n    if (fn) {\n      this.setState({fullName: fn});\n      this.props.onUpdateAccount(undefined, vcard(fn, null));\n    }\n  }\n\n  handleImageChanged(img) {\n    this.setState({avatar: img});\n    this.props.onUpdateAccount(undefined, vcard(null, img || Tinode.DEL_CHAR));\n  }\n\n  handleCredChange(e) {\n    this.setState({newCred: e.target.value, addCredInvalid: false});\n  }\n\n  handleCredKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({newCred: '', addCredActive: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleCredEntered(e);\n    }\n  }\n\n  handleCredEntered(e) {\n    let value = this.state.newCred.trim();\n    if (!value) {\n      this.setState({addCredActive: false, addCredInvalid: false});\n      return;\n    }\n\n    let val = asPhone(value);\n    let method;\n    if (val) {\n      method = 'tel';\n    } else {\n      val = asEmail(value);\n      if (val) {\n        method = 'email';\n      }\n    }\n    if (method) {\n      this.props.onCredAdd(method, val);\n      this.setState({addCredActive: false, newCred: ''});\n    } else {\n      this.setState({addCredInvalid: true});\n    }\n  }\n\n  handleTagsUpdated(tags) {\n    // Check if tags have actually changed.\n    if (arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      return;\n    }\n    this.props.onUpdateTags(tags);\n  }\n\n  render() {\n    const credentials = [];\n    this.state.credentials.map((cred) => {\n      credentials.push(<div key={cred.meth + \":\" + cred.val + \":\" + cred.done}>{cred.meth}: <tt>{cred.val}</tt>\n        <span > {!cred.done ?\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredConfirm(cred.meth, cred.val);}}>\n              <FormattedMessage id=\"validate_credential_action\" defaultMessage=\"confirm\"\n                description=\"Validate credentail call to action\" />\n            </a>\n          : null} <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredDelete(cred.meth, cred.val);}}><i\n            className=\"material-icons gray\">delete_outline</i></a></span></div>);\n    });\n\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\"><FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n              description=\"Label for full name editing\" /></label>\n            <div><FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n              description=\"Input placeholder for person's full name\">{\n              (full_name_placeholder) => <InPlaceEdit\n                placeholder={full_name_placeholder}\n                value={this.state.fullName}\n                onFinished={this.handleFullNameUpdate} />\n            }</FormattedMessage></div>\n          </div>\n          <AvatarUpload\n            avatar={this.state.avatar}\n            uid={this.props.myUserId}\n            title={this.state.fullName}\n            onImageChanged={this.handleImageChanged}\n            onError={this.props.onError} />\n        </div>\n        <div className=\"hr\" />\n        <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (user discovery)\"\n          description=\"Section title for TagManager\">{\n          (title_tag_manager) => <TagManager\n            title={title_tag_manager}\n            activated={false}\n            tags={this.state.tags}\n            tinode={this.props.tinode}\n            onSubmit={this.handleTagsUpdated} />\n        }</FormattedMessage>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_user_contacts\" defaultMessage=\"Contacts:\"\n            description=\"Label for user contacts\" />\n          </label>\n          <div className=\"quoted\">\n            {credentials}\n            {this.state.addCredActive ?\n              <input type=\"text\" value={this.state.value}\n                className={this.state.addCredInvalid ? 'invalid' : null}\n                placeholder=\"Phone number or email\" required=\"required\" autoFocus\n                onChange={this.handleCredChange} onKeyDown={this.handleCredKeyDown} onBlur={this.handleCredEntered} />\n              : null}\n            <div>\n              <a href=\"#\" onClick={(e) => {e.preventDefault(); this.setState({addCredActive: true});}}>\n                <i className=\"material-icons\">add</i>\n                <FormattedMessage id=\"button_add_another\" defaultMessage=\"Add another\" description=\"Call to action [+ add another]\" />\n              </a></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\n\nexport default class EditAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckboxClick = this.handleCheckboxClick.bind(this);\n  }\n\n  handleCheckboxClick(what, checked) {\n    if (what == 'sound') {\n      this.props.onToggleMessageSounds(checked);\n    } else if (what == 'alert') {\n      this.props.onTogglePushNotifications(checked);\n    } else if (what == 'incognito') {\n      this.props.onToggleIncognitoMode(checked);\n    }\n  }\n\n  render() {\n    return (\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"message-sound\">\n              <FormattedMessage id=\"label_message_sound\" defaultMessage=\"Message sound:\"\n                description=\"Label for message sounds toggle\" />\n            </label>\n            <CheckBox name=\"sound\" id=\"message-sound\"\n              checked={this.props.messageSounds} onChange={this.handleCheckboxClick} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"desktop-alerts\">\n            {this.props.desktopAlertsEnabled ?\n              <FormattedMessage id=\"label_push_notifications\" defaultMessage=\"Notification alerts:\"\n                description=\"Label for push notifications switch\" />\n              :\n              <FormattedMessage id=\"label_push_notifications_disabled\"\n                defaultMessage=\"Notification alerts (requires HTTPS):\"\n                description=\"Label for push notifications switch\" />\n            }\n            </label>\n            <CheckBox name=\"alert\" id=\"desktop-alerts\"\n              checked={this.props.desktopAlerts}\n              onChange={this.props.desktopAlertsEnabled ? this.handleCheckboxClick : null} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"incognito-mode\">\n              <FormattedMessage id=\"label_incognito_mode\" defaultMessage=\"Incognito mode:\"\n                description=\"Label for incognito mode toggle\" />\n            </label>\n            <CheckBox name=\"incognito\" id=\"incognito-mode\"\n              checked={this.props.incognitoMode} onChange={this.handleCheckboxClick} />\n          </div>\n        </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\n\nconst messages = defineMessages({\n  delete_account: {\n    id: 'delete_account',\n    defaultMessage: 'Delete account',\n    description: 'Title for delete account warning'\n  },\n  delete_account_warning: {\n    id: 'delete_account_arning',\n    defaultMessage: 'Are you sure you want to delete your account? It cannot be undone.',\n    description: 'Warning message when deleting an account'\n  }\n});\n\nclass AccSecurityView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    let blockedCount = 0;\n    me.contacts((c) => {\n      if (c.acs && !c.acs.isJoiner()) {\n        blockedCount ++;\n      }\n    });\n    const defacs = me.getDefaultAccess();\n    this.state = {\n      auth: defacs ? defacs.auth : null,\n      anon: defacs ? defacs.anon : null,\n      showPermissionEditorFor: undefined,\n      blockedCount: blockedCount,\n    };\n\n    this.handlePasswordUpdate = this.handlePasswordUpdate.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n  }\n\n  handlePasswordUpdate(pwd) {\n    this.setState({password: pwd});\n    this.props.onUpdateAccount(pwd);\n  }\n\n  handleLaunchPermissionsEditor(which) {\n    this.setState({\n      showPermissionEditorFor: which,\n      editedPermissions: this.state[which]\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handlePermissionsChanged(perm) {\n    let defacs = {};\n    defacs[this.state.showPermissionEditorFor] = perm;\n    this.props.onUpdateAccount(undefined, undefined, defacs);\n\n    let newState = {showPermissionEditorFor: undefined};\n    newState[this.state.showPermissionEditorFor] = perm;\n    this.setState(newState);\n  }\n\n  handleDeleteAccount(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.delete_account), // title\n      formatMessage(messages.delete_account_warning), // content\n      (() => { this.props.onDeleteAccount(); }), // onConfirm\n      null, // use default text \"OK\"\n      true, // Show Reject button\n      null  // use default text \"Cancel\"\n    );\n  }\n\n  render() {\n    return (\n      <React.Fragment>{this.state.showPermissionEditorFor ?\n        <PermissionsEditor\n          mode={this.state.editedPermissions}\n          skip=\"O\"\n          onSubmit={this.handlePermissionsChanged}\n          onCancel={this.handleHidePermissionsEditor} />\n        :\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_password\" defaultMessage=\"Password\"\n                  description=\"Label for password editing\" />\n            </label>\n            <div>\n              <FormattedMessage id=\"password_unchanged_prompt\" defaultMessage=\"Unchanged\"\n                description=\"Message in editor while password is unchanged\">{\n                (password_unchanged) => <InPlaceEdit\n                  placeholder={password_unchanged}\n                  type=\"password\"\n                  onFinished={this.handlePasswordUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <a href=\"#\" className=\"red flat-button\" onClick={(e) => {e.preventDefault(); this.props.onLogout();}}>\n              <i className=\"material-icons\">exit_to_app</i> &nbsp;<FormattedMessage id=\"button_logout\"\n                defaultMessage=\"Logout\" description=\"Button [Logout]\" />\n            </a>\n            <a href=\"#\" className=\"red flat-button\" onClick={(e) => {this.handleDeleteAccount(e);}}>\n              <i className=\"material-icons\">delete</i> &nbsp;<FormattedMessage id=\"button_delete_account\"\n                defaultMessage=\"Delete account\" description=\"Button [Delete account]\" />\n            </a>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <div>\n              <label className=\"small\">\n                <FormattedMessage id=\"label_default_access_mode\" defaultMessage=\"Default access mode:\"\n                description=\"Label for default access mode\" />\n              </label>\n            </div>\n            <div className=\"quoted\">\n              <div>Auth: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>{this.state.auth}</tt></div>\n              <div>Anon: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>{this.state.anon}</tt></div>\n            </div>\n          </div>\n          {this.state.blockedCount > 0 ?\n            <>\n              <div className=\"hr\" />\n              <div className=\"panel-form-row\">\n                <i className=\"material-icons\">block</i>&nbsp;\n                <a href=\"#\" className=\"gray\" onClick={(e) => {e.preventDefault(); this.props.onShowBlocked();}}>\n                  <FormattedMessage id=\"blocked_contacts_link\" defaultMessage=\"Blocked contacts ({count})\"\n                    values={{ count: this.state.blockedCount }} description=\"Blocked contacts link\" />\n                </a>\n              </div>\n            </>\n            : null }\n        </div>\n      }</React.Fragment>\n    );\n  }\n};\n\nexport default injectIntl(AccSecurityView);\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME, LINK_CONTACT_US, LINK_PRIVACY_POLICY, LINK_TERMS_OF_SERVICE } from '../config.js';\n\nexport default class AccSupportView extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          <a href={LINK_CONTACT_US} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">email</i> &nbsp;<FormattedMessage id=\"link_contact_us\"\n              defaultMessage=\"Contact Us\" description=\"Ancor text for contacting us by email\" />\n          </a>\n          <a href={LINK_TERMS_OF_SERVICE} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">description</i> &nbsp;<FormattedMessage id=\"link_terms_of_service\"\n              defaultMessage=\"Terms of Service\" description=\"Ancor text for terms of service link\" />\n          </a>\n          <a href={LINK_PRIVACY_POLICY} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">policy</i> &nbsp;<FormattedMessage id=\"link_privacy_policy\"\n              defaultMessage=\"Privacy Policy\" description=\"Ancor text for privacy policy link\" />\n          </a>\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\"\n              description=\"Label for a client version\" /></label>\n            {APP_NAME}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_sdk\" defaultMessage=\"SDK:\" /></label>\n            {Tinode.getLibrary()}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\"\n              description=\"Label for a server version\" /></label>\n            {this.props.serverVersion}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server_address\" defaultMessage=\"Server address:\" /></label>\n            {this.props.serverAddress}\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","// Login form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\n\nexport default class LoginView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: props.login,\n      password: '',\n      hostName: props.serverAddress,\n      saveToken: LocalStorageUtil.getObject('keep-logged-in')\n    };\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  handleToggleSaveToken() {\n    LocalStorageUtil.setObject('keep-logged-in', !this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onLogin(this.state.login.trim(), this.state.password.trim());\n  }\n\n  render() {\n    var submitClasses = 'blue';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form id=\"login-form\" onSubmit={this.handleSubmit}>\n        <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n          description=\"Placeholer for username/login\">\n        {\n          (login_prompt) => <input type=\"text\" id=\"inputLogin\"\n            placeholder={login_prompt}\n            autoComplete=\"username\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"none\"\n            value={this.state.login}\n            onChange={this.handleLoginChange}\n            required autoFocus />\n        }\n        </FormattedMessage>\n        <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n          description=\"Placeholder/prompt for entering password\">\n        {\n          (password_prompt) => <VisiblePassword type=\"password\" id=\"inputPassword\"\n            placeholder={password_prompt}\n            autoComplete=\"current-password\"\n            value={this.state.password}\n            onChange={this.handlePasswordChange}\n            required={true} />\n        }\n        </FormattedMessage>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <label htmlFor=\"save-token\">&nbsp;\n            <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n              description=\"Label for a checkbox\" />\n          </label>\n          <a href=\"#reset\">\n            <FormattedMessage id=\"forgot_password_link\" defaultMessage=\"Forgot password?\"\n              description=\"Link to Reset password form\" />\n          </a>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_in\" defaultMessage=\"Sign in\"\n              description=\"Button [Sign In]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n/* END Login */\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  invalid_id: {\n    id: 'error_invalid_id',\n    defaultMessage: 'Invalid ID',\n    description: 'Error message'\n  }\n});\n\nclass NewTopicById extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      groupId: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({groupId: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.groupId) {\n      var name = this.state.groupId.trim();\n      if (name.length > 3 && (name.substr(0, 3) == 'usr' || name.substr(0, 3) == 'grp')) {\n        this.props.onSubmit(name);\n      } else {\n        this.props.onError(this.props.intl.formatMessage(messages.invalid_id), 'err');\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"group_user_id_prompt\" defaultMessage=\"Group or User ID\"\n          description=\"Prompt for entering user or group ID\">{\n          (prompt) => <input type=\"text\" placeholder={prompt}\n            value={this.state.groupId} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required autoFocus />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"blue\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_subscribe\" defaultMessage=\"Subscribe\"\n              description=\"Button [Subscribe]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicById);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from './avatar-upload.jsx';\nimport CheckBox from './checkbox.jsx';\nimport TagManager from './tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class NewTopicGroup extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      fn: '', // full/formatted name\n      private: '',\n      imageDataUrl: null,\n      tags: [],\n      isChannel: false\n    };\n\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handlePrivateChange = this.handlePrivateChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleTagsChanged = this.handleTagsChanged.bind(this);\n    this.handleChannelToggle = this.handleChannelToggle.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handlePrivateChange(e) {\n    this.setState({private: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleTagsChanged(tags) {\n    this.setState({tags: tags});\n  }\n\n  handleChannelToggle() {\n    this.setState({isChannel: !this.state.isChannel});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const fn = this.state.fn.trim().substring(0, MAX_TITLE_LENGTH);\n    const comment = this.state.private.trim().substring(0, MAX_TITLE_LENGTH);\n    if (fn) {\n      this.props.onSubmit(fn, this.state.imageDataUrl, comment, this.state.tags, this.state.isChannel);\n    }\n  }\n\n  render() {\n    var submitClasses = 'blue';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n    return (\n      <form className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\" htmlFor=\"new-topic-fn\">\n              <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                description=\"Label for editing topic name\" />\n            </label>\n            <FormattedMessage id=\"topic_name_editing_placeholder\" defaultMessage=\"Freeform name of the group\"\n              description=\"Prompt for entering topic name\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-fn\" placeholder={placeholder}\n                value={this.state.fn} onChange={this.handleFnChange} autoFocus required />\n            }</FormattedMessage>\n            <br />\n            <label className=\"small\" htmlFor=\"new-topic-priv\">\n              <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                description=\"Label for editing 'private'\" />\n            </label>\n            <FormattedMessage id=\"private_editing_placeholder\" defaultMessage=\"Visible to you only\"\n              description=\"Placeholder for editing 'private'\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-priv\" placeholder={placeholder}\n                value={this.state.private} onChange={this.handlePrivateChange} />\n            }</FormattedMessage>\n          </div>\n          <AvatarUpload\n            onError={this.props.onError}\n            onImageChanged={this.handleImageChanged} />\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox checked={this.state.isChannel} onChange={this.handleChannelToggle}/>&nbsp;\n          <label onClick={this.handleChannelToggle}><FormattedMessage id=\"channel_prompt\"\n            defaultMessage=\"This is a channel\"\n            description=\"Checkbox label when creating a channel\" /></label>\n        </div>\n        <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (user discovery)\"\n          description=\"Section title for TagManager\">{\n          (title) => <TagManager\n            tags={this.state.tags}\n            activated={true}\n            onTagsChanged={this.handleTagsChanged}\n            tinode={this.props.tinode}\n            title={title} />\n        }</FormattedMessage>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses}>\n            <FormattedMessage id=\"button_create\" defaultMessage=\"Create\"\n              description=\"Button [Create]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nexport default class SearchContacts extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      edited: false,\n      search: ''\n    };\n\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  componentWillUnmount() {\n    if (this.state.edited) {\n      this.setState({search: '', edited: false});\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n  }\n\n  handleSearchChange(e) {\n    this.setState({search: e.target.value});\n  }\n\n  handleSearch(e) {\n    e.preventDefault();\n    var query = this.state.search.trim();\n    this.setState({edited: (query.length > 0)});\n    this.props.onSearchContacts(query.length > 0 ? query : Tinode.DEL_CHAR);\n  }\n\n  handleClear(e) {\n    e.preventDefault();\n    if (this.state.edited) {\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n    this.setState({search: '', edited: false});\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Enter') {\n      this.handleSearch(e);\n    } else if (e.key === 'Escape') {\n      this.handleClear();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <i className=\"material-icons search\">search</i>\n          <FormattedMessage id=\"search_placeholder\" defaultMessage=\"List like email:alice@example.com, tel:17025550003...\"\n            description=\"Placeholder in contacts search field\">{\n            (search_placeholder) => <input className=\"search\" type=\"text\"\n              placeholder={search_placeholder}\n              value={this.state.search} onChange={this.handleSearchChange}\n              onKeyDown={this.handleKeyDown} required autoFocus />\n          }</FormattedMessage>\n          <a href=\"#\" onClick={this.handleClear}>\n            <i className=\"material-icons\">close</i>\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","// Create new topic and invite users or send an invite.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport ContactList from '../widgets/contact-list.jsx';\nimport NewTopicById from '../widgets/new-topic-by-id.jsx';\nimport NewTopicGroup from '../widgets/new-topic-group.jsx';\nimport SearchContacts from '../widgets/search-contacts.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\nimport { vcard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  search_for_contacts: {\n    id: \"search_for_contacts\",\n    defaultMessage: \"Use search to find contacts\",\n    description: \"Text shown in contacts view when user entered no search query.\"\n  },\n  search_no_results: {\n    id: \"search_no_results\",\n    defaultMessage: \"Search returned no results\",\n    description: \"Text shown in contacts view when query returned no results.\"\n  }\n});\n\nclass NewTopicView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tabSelected: 'p2p',\n      searchQuery: null\n    };\n\n    this.handleTabClick = this.handleTabClick.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleNewGroupSubmit = this.handleNewGroupSubmit.bind(this);\n    this.handleGroupByID = this.handleGroupByID.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.onInitFind();\n  }\n\n  handleTabClick(e) {\n    e.preventDefault();\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'tab', e.currentTarget.dataset.id));\n    this.setState({tabSelected: e.currentTarget.dataset.id});\n  }\n\n  handleSearchContacts(query) {\n    this.props.onSearchContacts(query);\n    this.setState({searchQuery: Tinode.isNullValue(query) ? null : query});\n  }\n\n  handleContactSelected(sel) {\n    if (this.state.tabSelected === 'p2p') {\n      HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n      this.props.onCreateTopic(sel);\n    }\n  }\n\n  handleNewGroupSubmit(name, dataUrl, priv, tags, isChannel) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(undefined, vcard(name, dataUrl), priv, tags, isChannel);\n  }\n\n  handleGroupByID(topicName) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(topicName);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const no_contacts_placeholder = formatMessage(this.state.searchQuery ?\n      messages.search_no_results : messages.search_for_contacts);\n    return (\n      <div className=\"flex-column\">\n        <ul className=\"tabbar\">\n          <li className={this.state.tabSelected === \"p2p\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"p2p\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_find_user\" defaultMessage=\"find\"\n                description=\"Tab title Find\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"grp\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"grp\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_new_group\" defaultMessage=\"new group\"\n                description=\"Tab title New Group\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"byid\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"byid\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_group_by_id\" defaultMessage=\"by id\"\n                description=\"Tab title Find topic by ID\" />\n            </a>\n          </li>\n        </ul>\n        {this.state.tabSelected === 'grp' ?\n          <NewTopicGroup\n            tinode={this.props.tinode}\n            onSubmit={this.handleNewGroupSubmit} /> :\n          this.state.tabSelected === 'byid' ?\n            <NewTopicById\n              onSubmit={this.handleGroupByID}\n              onError={this.props.onError} /> :\n            <div className=\"flex-column\">\n              <SearchContacts\n                type=\"p2p\"\n                onSearchContacts={this.handleSearchContacts} />\n              <ContactList\n                contacts={this.props.searchResults}\n                myUserId={this.props.myUserId}\n                emptyListMessage={no_contacts_placeholder}\n                showOnline={false}\n                showUnread={false}\n                showContextMenu={false}\n                onTopicSelected={this.handleContactSelected} />\n            </div>}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicView);\n","// A password reset form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\n\nexport default class PasswordResetView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n  }\n\n  componentDidMount() {\n    let parsed = HashNavigation.parseUrlHash(window.location.hash);\n    this.setState({token: parsed.params.token, scheme: parsed.params.scheme});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.token) {\n      this.props.onReset(this.state.scheme, this.state.password.trim(), this.state.token);\n    } else {\n      this.props.onRequest('email', this.state.email.trim());\n    }\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  render() {\n    let reset = (this.state.token && this.state.scheme);\n    return (\n      <form id=\"password-reset-form\" onSubmit={this.handleSubmit}>\n        {reset ?\n          <FormattedMessage id=\"new_password_placeholder\" defaultMessage=\"Enter new password\"\n            description=\"Placeholder for entering new password\">{\n            (placeholder) => <VisiblePassword\n              placeholder={placeholder}\n              autoComplete=\"new-password\"\n              value={this.state.password}\n              required={true} autoFocus={true}\n              onChange={this.handlePasswordChange} />\n          }</FormattedMessage>\n          :\n          <>\n            <label htmlFor=\"inputEmail\">\n              <FormattedMessage id=\"label_reset_password\"\n                defaultMessage=\"Send a password reset email:\"\n                description=\"Label for password reset field\" />\n            </label>\n            <FormattedMessage id=\"credential_email_prompt\" defaultMessage=\"Your registration email\"\n              description=\"Placeholder for entering email\">{\n              (placeholder) => <input type=\"email\" id=\"inputEmail\"\n                placeholder={placeholder}\n                autoComplete=\"email\"\n                value={this.state.email}\n                onChange={this.handleEmailChange}\n                required autoFocus />\n            }</FormattedMessage>\n          </>\n        }\n        <div className=\"dialog-buttons\">\n          <button className=\"blue\" type=\"submit\">{reset ?\n            <FormattedMessage id=\"button_reset\" defaultMessage=\"Reset\" description=\"Button [Reset]\" /> :\n            <FormattedMessage id=\"button_send_request\" defaultMessage=\"Send request\"\n              description=\"Button [Send request]\" />\n          }</button>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react';\n\nimport { KNOWN_HOSTS } from '../config.js';\n\n/* Combobox for selecting host name */\n\nexport default class HostSelector extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hostName: props.serverAddress,\n      changed: false\n    };\n\n    this.handleHostNameChange = this.handleHostNameChange.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handleHostNameChange(e) {\n    this.setState({hostName: e.target.value, changed: true});\n  }\n\n  handleEditingFinished() {\n    if (this.state.changed) {\n      this.setState({changed: false});\n      this.props.onServerAddressChange(this.state.hostName.trim());\n    }\n  }\n\n  render() {\n    var hostOptions = [];\n    for (let key in KNOWN_HOSTS) {\n      let item = KNOWN_HOSTS[key];\n      hostOptions.push(\n        <option key={item} value={item} />\n      );\n    }\n    return (\n      <div className=\"panel-form-row\">\n        <input type=\"search\" id=\"host-name\" placeholder={this.props.hostName} list=\"known-hosts\"\n          className=\"quoted\" value={this.state.hostName} onChange={this.handleHostNameChange}\n          onBlur={this.handleEditingFinished} required />\n        <datalist id=\"known-hosts\">\n          {hostOptions}\n        </datalist>\n      </div>\n    );\n  }\n}\n","// Tinode config panel.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport HostSelector from '../widgets/host-selector.jsx';\n\nexport default class SettingsView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transport: props.transport || 'def',\n      serverAddress: props.serverAddress,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleTransportSelected = this.handleTransportSelected.bind(this);\n    this.handleServerAddressChange = this.handleServerAddressChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onUpdate({\n      transport: this.state.transport,\n      serverAddress: this.state.serverAddress\n    });\n  }\n\n  handleTransportSelected(e) {\n    this.setState({transport: e.currentTarget.value});\n  }\n\n  handleServerAddressChange(name) {\n    this.setState({serverAddress: name});\n  }\n\n  render() {\n    const names = {def: \"default\", ws: \"websocket\", lp: \"long polling\"};\n    var transportOptions = [];\n    var instance = this;\n    ['def', 'ws', 'lp'].map(function(item) {\n      var id = 'transport-' + item;\n      var name = names[item];\n      transportOptions.push(\n        <li key={item}>\n          <input type=\"radio\" id={id} name=\"transport-select\" value={item}\n            checked={instance.state.transport === item}\n            onChange={instance.handleTransportSelected} />\n          <label htmlFor={id}>{name}</label>\n        </li>\n      );\n    });\n\n    return (\n      <form id=\"settings-form\" className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_server_to_use\" defaultMessage=\"Server to use:\"\n              description=\"Label for server selector in SettingsView\" />\n          </label>\n        </div>\n        <HostSelector serverAddress={this.state.serverAddress}\n          onServerAddressChange={this.handleServerAddressChange} />\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_wire_transport\" defaultMessage=\"Wire transport:\"\n              description=\"Label for wire transport selection in SettingsView\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ul className=\"quoted\">\n            {transportOptions}\n          </ul>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button type=\"submit\" className=\"blue\">\n            <FormattedMessage id=\"button_update\" defaultMessage=\"Update\"\n              description=\"Button [Update]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// ValidationView: panel for confirming credentials, like email or phone.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  phone: {\n    id: 'phone_dative',\n    defaultMessage: 'phone',\n    description: \"Dative case of 'phone', i.e. 'phone' in 'by phone'\",\n  },\n  email: {\n    id: 'email_dative',\n    defaultMessage: 'email',\n    description: \"Dative case of 'email', i.e. 'email' in 'by email'\",\n  }\n});\n\nclass ValidationView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      code: props.credCode || ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({code: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    } else if (e.key == 'Escape') {\n      this.handleCancel(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.code && this.state.code.trim()) {\n      this.props.onSubmit(this.props.credMethod, this.state.code.trim());\n    }\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel();\n  }\n\n\n  render() {\n    const { formatMessage } = this.props.intl;\n    const methods = {'email': formatMessage(messages.email), 'tel': formatMessage(messages.phone)};\n    let method = methods[this.props.credMethod] || this.props.credMethod;\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\" htmlFor=\"enter-confirmation-code\">\n            <FormattedMessage id=\"enter_confirmation_code_prompt\"\n              defaultMessage=\"Enter confirmation code sent to you by {method}:\"\n              description=\"Request to enter confirmation code\"\n              values={{method: method}} />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"numeric_confirmation_code_prompt\"\n          defaultMessage=\"Numbers only\" description=\"Prompt for numeric conformation code\">{\n          (numbers_only) => <input type=\"text\" id=\"enter-confirmation-code\"\n            placeholder={numbers_only}\n            value={this.state.code} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"blue\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_confirm\" defaultMessage=\"Confirm\" description=\"Button [Confirm]\" />\n          </button>\n          <button className=\"white\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ValidationView);\n","import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport SideNavbar from '../widgets/side-navbar.jsx';\n\nimport ContactsView from './contacts-view.jsx';\nimport CreateAccountView from './create-account-view.jsx';\nimport EditAccountView from './edit-account-view.jsx';\nimport AccGeneralView from './acc-general-view.jsx';\nimport AccNotificationsView from './acc-notifications-view.jsx';\nimport AccSecurityView from './acc-security-view.jsx';\nimport AccSupportView from './acc-support-view.jsx';\nimport LoginView from './login-view.jsx';\nimport NewTopicView from './new-topic-view.jsx';\nimport PasswordResetView from './password-reset-view.jsx';\nimport SettingsView from './settings-view.jsx';\nimport ValidationView from './validation-view.jsx';\n\n// Panel titles for translation.\nconst messages = defineMessages({\n  login: {\n    id: 'sidepanel_title_login',\n    description: 'Sidepanel title for LoginView.',\n    defaultMessage: 'Sign In'\n  },\n  register: {\n    id: 'sidepanel_title_register',\n    description: 'Sidepanel title for CreateAccountView.',\n    defaultMessage: 'Create Account'\n  },\n  settings: {\n    id: 'sidepanel_title_settings',\n    description: 'Sidepanel title for SettingsView.',\n    defaultMessage: 'Settings'\n  },\n  edit: {\n    id: 'sidepanel_title_account_settings',\n    description: 'Sidepanel title for EditAccountView.',\n    defaultMessage: 'Account Settings'\n  },\n  general: {\n    id: 'sidepanel_title_acc_general',\n    description: 'Sidepanel title for AccGeneralView.',\n    defaultMessage: 'General'\n  },\n  security: {\n    id: 'sidepanel_title_acc_security',\n    description: 'Sidepanel title for AccSecurityView.',\n    defaultMessage: 'Security'\n  },\n  notif: {\n    id: 'sidepanel_title_acc_notifications',\n    description: 'Sidepanel title for AccNotificationsView.',\n    defaultMessage: 'Notifications'\n  },\n  support: {\n    id: 'sidepanel_title_acc_support',\n    description: 'Sidepanel title for AccSupportView.',\n    defaultMessage: 'Support'\n  },\n  newtpk: {\n    id: 'sidepanel_title_newtpk',\n    description: 'Sidepanel title for NewTopicView.',\n    defaultMessage: 'Start New Chat'\n  },\n  cred: {\n    id: 'sidepanel_title_cred',\n    description: 'Sidepanel title for ValidationView.',\n    defaultMessage: 'Confirm Credentials'\n  },\n  reset: {\n    id: 'sidepanel_title_reset',\n    description: 'Sidepanel title for PasswordResetView.',\n    defaultMessage: 'Reset Password'\n  },\n  archive: {\n    id: 'sidepanel_title_archive',\n    description: 'Sidepanel title for ContactsView-Archive.',\n    defaultMessage: 'Archived Chats'\n  },\n  blocked: {\n    id: 'sidepanel_title_blocked',\n    description: 'Sidepanel title for ContactsView-Blocked.',\n    defaultMessage: 'Blocked Chats'\n  }\n});\n\nclass SidepanelView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleLoginRequested = this.handleLoginRequested.bind(this);\n    this.handleNewTopic = this.handleNewTopic.bind(this);\n  }\n\n  handleLoginRequested(login, password) {\n    this.props.onLoginRequest(login, password);\n  }\n\n  handleNewTopic() {\n    this.props.onBasicNavigate('newtpk');\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const view = this.props.state || (this.props.myUserId ? 'contacts' : 'login');\n\n    let title, avatar;\n    if (view == 'contacts') {\n      title = this.props.title;\n      avatar = this.props.avatar ? this.props.avatar : true;\n    } else {\n      title = formatMessage(messages[view]);\n      avatar = false;\n    }\n\n    let onCancel;\n    if (['login', 'contacts'].indexOf(view) == -1) {\n      onCancel = this.props.onCancel;\n    }\n\n    return (\n      <div id=\"sidepanel\" className={this.props.hideSelf ? 'nodisplay' : null}>\n        <SideNavbar\n          state={view}\n          title={title}\n          avatar={avatar}\n          myUserId={this.props.myUserId}\n          onSignUp={this.props.onSignUp}\n          onSettings={this.props.onSettings}\n          onNewTopic={this.handleNewTopic}\n          onCancel={onCancel} />\n\n        <ErrorPanel\n          level={this.props.errorLevel}\n          text={this.props.errorText}\n          action={this.props.errorAction}\n          actionText={this.props.errorActionText}\n          onClearError={this.props.onError} />\n\n        <LoadSpinner show={this.props.loadSpinnerVisible} />\n\n        {view === 'login' ?\n          <LoginView\n            login={this.props.login}\n            disabled={this.props.loginDisabled}\n            onLogin={this.handleLoginRequested} /> :\n\n          view === 'register' ?\n          <CreateAccountView\n            onCreateAccount={this.props.onCreateAccount}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'settings' ?\n          <SettingsView\n            transport={this.props.transport}\n            serverAddress={this.props.serverAddress}\n            onCancel={this.props.onCancel}\n            onUpdate={this.props.onGlobalSettings} /> :\n\n          view === 'edit' ?\n          <EditAccountView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            onBasicNavigate={this.props.onBasicNavigate} /> :\n\n          view === 'general' ?\n          <AccGeneralView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            onUpdateAccount={this.props.onUpdateAccount}\n            onUpdateTags={this.props.onUpdateAccountTags}\n            onCredAdd={this.props.onCredAdd}\n            onCredDelete={this.props.onCredDelete}\n            onCredConfirm={this.props.onCredConfirm}\n            onBasicNavigate={this.props.onBasicNavigate}\n            onError={this.props.onError} /> :\n\n          view === 'notif' ?\n          <AccNotificationsView\n            messageSounds={this.props.messageSounds}\n            desktopAlerts={this.props.desktopAlerts}\n            desktopAlertsEnabled={this.props.desktopAlertsEnabled}\n            incognitoMode={this.props.incognitoMode}\n            onTogglePushNotifications={this.props.onTogglePushNotifications}\n            onToggleMessageSounds={this.props.onToggleMessageSounds}\n            onToggleIncognitoMode={this.props.onToggleIncognitoMode} /> :\n\n          view === 'security' ?\n          <AccSecurityView\n            tinode={this.props.tinode}\n            onUpdateAccount={this.props.onUpdateAccount}\n            onLogout={this.props.onLogout}\n            onDeleteAccount={this.props.onDeleteAccount}\n            onShowAlert={this.props.onShowAlert}\n            onShowBlocked={this.props.onShowBlocked} /> :\n\n          view === 'support' ?\n          <AccSupportView\n            serverAddress={this.props.serverAddress}\n            serverVersion={this.props.serverVersion} /> :\n\n          (view === 'contacts' || view == 'archive' || view == 'blocked') ?\n          <ContactsView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            connected={this.props.connected}\n            topicSelected={this.props.topicSelected}\n            archive={view == 'archive'}\n            blocked={view == 'blocked'}\n            chatList={this.props.chatList}\n            showContextMenu={this.props.showContextMenu}\n            onTopicSelected={this.props.onTopicSelected}\n            onShowArchive={this.props.onShowArchive} /> :\n\n          view === 'newtpk' ?\n          <NewTopicView\n            tinode={this.props.tinode}\n            searchResults={this.props.searchResults}\n            onInitFind={this.props.onInitFind}\n            onSearchContacts={this.props.onSearchContacts}\n            onCreateTopic={this.props.onCreateTopic}\n            onError={this.props.onError} /> :\n\n          view === 'cred' ?\n          <ValidationView\n            credCode={this.props.credCode}\n            credMethod={this.props.credMethod}\n            onSubmit={this.props.onValidateCredentials}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'reset' ?\n          <PasswordResetView\n            onRequest={this.props.onPasswordResetRequest}\n            onReset={this.props.onResetPassword} /> :\n          null}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SidepanelView);\n","import { KNOWN_HOSTS, DEFAULT_HOST } from '../config.js';\n\n// Detect server address from the URL\nexport function detectServerAddress() {\n  let host = DEFAULT_HOST;\n  if (typeof window.location == 'object') {\n    if (window.location.protocol == 'file:' || window.location.hostname == 'localhost') {\n      host = KNOWN_HOSTS.local;\n    } else if (window.location.hostname) {\n      host = window.location.hostname + (window.location.port ? ':' + window.location.port : '');\n    }\n  }\n  return host;\n}\n\n// Detect if the page is served over HTTPS.\nexport function isSecureConnection() {\n  if (typeof window.location == 'object') {\n    return window.location.protocol == 'https:';\n  }\n  return false;\n}\n\nexport function isLocalHost() {\n  if (typeof window.location == 'object') {\n    return window.location.hostname == 'localhost';\n  }\n  return false;\n}\n","// The top-level class to hold all functionality together.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport * as firebase from 'firebase/app';\nimport 'firebase/messaging';\n\nimport Tinode from 'tinode-sdk';\n\nimport Alert from '../widgets/alert.jsx';\nimport ContextMenu from '../widgets/context-menu.jsx';\n\nimport InfoView from './info-view.jsx';\nimport MessagesView from './messages-view.jsx';\nimport SidepanelView from './sidepanel-view.jsx';\n\nimport { API_KEY, APP_NAME, DEFAULT_P2P_ACCESS_MODE, LOGGING_ENABLED,\n  MEDIA_BREAKPOINT, RECEIVED_DELAY } from '../config.js';\nimport { base64ReEncode, makeImageUrl } from '../lib/blob-helpers.js';\nimport { detectServerAddress, isLocalHost, isSecureConnection } from '../lib/host-name.js';\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { secondsToTime } from '../lib/strformat.js'\nimport { updateFavicon } from '../lib/utils.js';\n\n// Sound to play on message received.\nconst POP_SOUND = new Audio('audio/msg.mp3');\n\nconst messages = defineMessages({\n  reconnect_countdown: {\n    id: 'reconnect_countdown',\n    defaultMessage: 'Disconnected. Reconnecting in {seconds}…',\n    description: 'Message shown when an app update is available.'\n  },\n  reconnect_now: {\n    id: 'reconnect_now',\n    defaultMessage: 'Try now',\n    description: 'Prompt for reconnecting now'\n  },\n  push_init_failed: {\n    id: 'push_init_failed',\n    defaultMessage: 'Failed to initialize push notifications',\n    description: 'Error message when push notifications have failed to initialize.'\n  },\n  invalid_security_token: {\n    id: 'invalid_security_token',\n    defaultMessage: 'Invalid security token',\n    description: 'Error message when resetting password.'\n  },\n  no_connection: {\n    id: 'no_connection',\n    defaultMessage: 'No connection',\n    description: 'Warning that the user is offline.'\n  },\n  code_doesnot_match: {\n    id: 'code_doesnot_match',\n    defaultMessage: 'Code does not match',\n    description: 'Error message when the credential validation code is incorrect.'\n  },\n  menu_item_info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  }\n});\n\nclass TinodeWeb extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = this.getBlankState();\n\n    this.handleResize = this.handleResize.bind(this);\n    this.handleHashRoute = this.handleHashRoute.bind(this);\n    this.handleOnline = this.handleOnline.bind(this);\n    this.checkForAppUpdate = this.checkForAppUpdate.bind(this);\n    this.handleVisibilityEvent = this.handleVisibilityEvent.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.handleLoginRequest = this.handleLoginRequest.bind(this);\n    this.handleConnected = this.handleConnected.bind(this);\n    this.handleAutoreconnectIteration = this.handleAutoreconnectIteration.bind(this);\n    this.doLogin = this.doLogin.bind(this);\n    this.handleCredentialsRequest = this.handleCredentialsRequest.bind(this);\n    this.handleLoginSuccessful = this.handleLoginSuccessful.bind(this);\n    this.handleDisconnect = this.handleDisconnect.bind(this);\n    this.tnMeMetaDesc = this.tnMeMetaDesc.bind(this);\n    this.tnMeContactUpdate = this.tnMeContactUpdate.bind(this);\n    this.tnMeSubsUpdated = this.tnMeSubsUpdated.bind(this);\n    this.resetContactList = this.resetContactList.bind(this);\n    this.tnData = this.tnData.bind(this);\n    this.tnInitFind = this.tnInitFind.bind(this);\n    this.tnFndSubsUpdated = this.tnFndSubsUpdated.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleTopicSelected = this.handleTopicSelected.bind(this);\n    this.handleHideMessagesView = this.handleHideMessagesView.bind(this);\n    this.handleSendMessage = this.handleSendMessage.bind(this);\n    this.handleNewChatInvitation = this.handleNewChatInvitation.bind(this);\n    this.handleNewAccount = this.handleNewAccount.bind(this);\n    this.handleNewAccountRequest = this.handleNewAccountRequest.bind(this);\n    this.handleUpdateAccountRequest = this.handleUpdateAccountRequest.bind(this);\n    this.handleUpdateAccountTagsRequest = this.handleUpdateAccountTagsRequest.bind(this);\n    this.handleToggleIncognitoMode = this.handleToggleIncognitoMode.bind(this);\n    this.handleSettings = this.handleSettings.bind(this);\n    this.handleGlobalSettings = this.handleGlobalSettings.bind(this);\n    this.handleShowArchive = this.handleShowArchive.bind(this);\n    this.handleShowBlocked = this.handleShowBlocked.bind(this);\n    this.handleToggleMessageSounds = this.handleToggleMessageSounds.bind(this);\n    this.handleCredAdd = this.handleCredAdd.bind(this);\n    this.handleCredDelete = this.handleCredDelete.bind(this);\n    this.handleCredConfirm = this.handleCredConfirm.bind(this);\n    this.initDesktopAlerts = this.initDesktopAlerts.bind(this);\n    this.togglePushToken = this.togglePushToken.bind(this);\n    this.requestPushToken = this.requestPushToken.bind(this);\n    this.handleSidepanelCancel = this.handleSidepanelCancel.bind(this);\n    this.handleStartTopicRequest = this.handleStartTopicRequest.bind(this);\n    this.handleNewTopicCreated = this.handleNewTopicCreated.bind(this);\n    this.handleTopicUpdateRequest = this.handleTopicUpdateRequest.bind(this);\n    this.handleChangePermissions = this.handleChangePermissions.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n    this.handleDeleteMessagesRequest = this.handleDeleteMessagesRequest.bind(this);\n    this.handleLeaveUnsubRequest = this.handleLeaveUnsubRequest.bind(this);\n    this.handleBlockTopicRequest = this.handleBlockTopicRequest.bind(this);\n    this.handleReportTopic = this.handleReportTopic.bind(this);\n    this.handleShowContextMenu = this.handleShowContextMenu.bind(this);\n    this.defaultTopicContextMenu = this.defaultTopicContextMenu.bind(this);\n    this.handleHideContextMenu = this.handleHideContextMenu.bind(this);\n    this.handleShowAlert = this.handleShowAlert.bind(this);\n    this.handleShowInfoView = this.handleShowInfoView.bind(this);\n    this.handleHideInfoView = this.handleHideInfoView.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleValidateCredentialsRequest = this.handleValidateCredentialsRequest.bind(this);\n    this.handlePasswordResetRequest = this.handlePasswordResetRequest.bind(this);\n    this.handleResetPassword = this.handleResetPassword.bind(this);\n    this.handleContextMenuAction = this.handleContextMenuAction.bind(this);\n  }\n\n  getBlankState() {\n    const settings = LocalStorageUtil.getObject('settings') || {};\n\n    return {\n      connected: false,\n      // Connected and subscribed to 'me'\n      ready: false,\n      // Try to re-login on new connection.\n      autoLogin: false,\n      transport: settings.transport || null,\n      serverAddress: settings.serverAddress || detectServerAddress(),\n      serverVersion: \"no connection\",\n      // \"On\" is the default, so saving the \"off\" state.\n      messageSounds: !settings.messageSoundsOff,\n      incognitoMode: false,\n      desktopAlerts: settings.desktopAlerts,\n      desktopAlertsEnabled: (isSecureConnection() || isLocalHost()) &&\n        (typeof firebase != 'undefined') && (typeof navigator != 'undefined') &&\n        (typeof FIREBASE_INIT != 'undefined'),\n      firebaseToken: LocalStorageUtil.getObject('firebase-token'),\n\n      applicationVisible: !document.hidden,\n\n      errorText: '',\n      errorLevel: null,\n      errorAction: undefined,\n      errorActionText: null,\n\n      sidePanelSelected: 'login',\n      sidePanelTitle: null,\n      sidePanelAvatar: null,\n      loadSpinnerVisible: false,\n\n      login: '',\n      password: '',\n      myUserId: null,\n      liveConnection: navigator.onLine,\n      topicSelected: '',\n      topicSelectedOnline: false,\n      topicSelectedAcs: null,\n      newTopicParams: null,\n      loginDisabled: false,\n      displayMobile: (window.innerWidth <= MEDIA_BREAKPOINT),\n      showInfoPanel: false,\n      mobilePanel: 'sidepanel',\n\n      contextMenuVisible: false,\n      contextMenuBounds: null,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuItems: [],\n\n      // Modal alert dialog.\n      alertVisible: false,\n      alertParams: {},\n\n      // Chats as shown in the ContactsView\n      chatList: [],\n      // Contacts returned by a search query.\n      searchResults: [],\n      // Merged results of a search query and p2p chats.\n      searchableContacts: [],\n      credMethod: undefined,\n      credCode: undefined\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    window.addEventListener('online', (e) => { this.handleOnline(true); });\n    window.addEventListener('offline', (e) => { this.handleOnline(false); });\n    window.addEventListener('hashchange', this.handleHashRoute);\n    // Window/tab visible or invisible for pausing timers.\n    document.addEventListener('visibilitychange', this.handleVisibilityEvent);\n\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n\n    const keepLoggedIn = LocalStorageUtil.getObject('keep-logged-in');\n\n    const {formatMessage, locale} = this.props.intl;\n    new Promise((resolve, reject) => {\n      this.tinode = TinodeWeb.tnSetup(this.state.serverAddress, this.state.transport, locale, keepLoggedIn, resolve);\n      this.tinode.onConnect = this.handleConnected;\n      this.tinode.onDisconnect = this.handleDisconnect;\n      this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n    }).then(() => {\n      // Initialize desktop alerts.\n      if (this.state.desktopAlertsEnabled) {\n        try {\n          this.fbPush = firebase.initializeApp(FIREBASE_INIT, APP_NAME).messaging();\n          this.fbPush.usePublicVapidKey(FIREBASE_INIT.messagingVapidKey);\n          navigator.serviceWorker.register('/service-worker.js').then((reg) => {\n            this.checkForAppUpdate(reg);\n            this.fbPush.useServiceWorker(reg);\n            reg.active.postMessage(JSON.stringify({locale: locale}));\n            this.initDesktopAlerts();\n            if (this.state.desktopAlerts) {\n              if (!this.state.firebaseToken) {\n                this.togglePushToken(true);\n              } else {\n                this.tinode.setDeviceToken(this.state.firebaseToken, true);\n              }\n            }\n          }).catch((err) => {\n            // registration failed :(\n            console.log(\"Failed to register service worker:\", err);\n          });\n        } catch (err) {\n          this.handleError(formatMessage(messages.push_init_failed), 'err');\n          console.log(\"Failed to initialize push notifications\", err);\n          this.setState({desktopAlertsEnabled: false});\n        }\n      }\n\n      const token = keepLoggedIn ? LocalStorageUtil.getObject('auth-token') : undefined;\n\n      const parsedNav = HashNavigation.parseUrlHash(window.location.hash);\n      if (token) {\n        this.setState({autoLogin: true});\n\n        // When reading from storage, date is returned as string.\n        token.expires = new Date(token.expires);\n        this.tinode.setAuthToken(token);\n        this.tinode.connect().catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n        delete parsedNav.params.info;\n        delete parsedNav.params.tab;\n        parsedNav.path[0] = '';\n        HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsedNav.path, parsedNav.params));\n      } else if (!parsedNav.params.token) {\n        HashNavigation.navigateTo('');\n      }\n\n      this.readTimer = null;\n      this.readTimerCallback = null;\n\n      this.handleHashRoute();\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n    window.removeEventListener('hashchange', this.handleHashRoute);\n    document.removeEventListener('visibilitychange', this.handleVisibilityEvent);\n  }\n\n  // Setup transport (usually websocket) and server address. This will terminate connection with the server.\n  static tnSetup(serverAddress, transport, locale, persistentCache, onSetupCompleted) {\n    const tinode = new Tinode({appName: APP_NAME, host: serverAddress, apiKey: API_KEY, transport: transport,\n      secure: isSecureConnection(), persist: persistentCache}, onSetupCompleted);\n    tinode.setHumanLanguage(locale);\n    tinode.enableLogging(LOGGING_ENABLED, true);\n    return tinode;\n  }\n\n  handleResize() {\n    const mobile = document.documentElement.clientWidth <= MEDIA_BREAKPOINT;\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n    if (this.state.displayMobile != mobile) {\n      this.setState({displayMobile: mobile});\n    }\n  }\n\n  // Check if a newer version of TinodeWeb app is available at the server.\n  checkForAppUpdate(reg) {\n    reg.onupdatefound = () => {\n      const installingWorker = reg.installing;\n      installingWorker.onstatechange = () => {\n        if (installingWorker.state == 'installed' && navigator.serviceWorker.controller) {\n          const msg = <>\n            <FormattedMessage id=\"update_available\"\n              defaultMessage=\"Update available.\"\n              description=\"Message shown when an app update is available.\" /> <a href=\"\">\n              <FormattedMessage id=\"reload_update\"\n                defaultMessage=\"Reload\"\n                description=\"Call to action to reload application when update is available.\" />\n            </a>.</>;\n          this.handleError(msg, 'info');\n        }\n      }\n    }\n  }\n\n  // Handle for hashchange event: display appropriate panels.\n  handleHashRoute() {\n    const hash = HashNavigation.parseUrlHash(window.location.hash);\n    if (hash.path && hash.path.length > 0) {\n      // Left-side panel selector.\n      if (['register','settings','edit','notif','security','support','general',\n          'cred','reset','newtpk','archive','blocked','contacts',''].includes(hash.path[0])) {\n        this.setState({sidePanelSelected: hash.path[0]});\n      } else {\n        console.log(\"Unknown sidepanel view\", hash.path[0]);\n      }\n\n      // Topic for MessagesView selector.\n      if (hash.path.length > 1 && hash.path[1] != this.state.topicSelected) {\n        this.setState({\n          topicSelected: Tinode.topicType(hash.path[1]) ? hash.path[1] : null\n        });\n      }\n    } else {\n      // Empty hashpath\n      this.setState({sidePanelSelected: ''});\n    }\n\n    // Save validation credentials, if available.\n    if (hash.params.method) {\n      this.setState({ credMethod: hash.params.method });\n    }\n    if (hash.params.code) {\n      this.setState({ credCode: hash.params.code });\n    }\n\n    // Additional parameters of panels.\n    this.setState({\n      showInfoPanel: hash.params.info,\n      newTopicTabSelected: hash.params.tab\n    });\n  }\n\n  handleOnline(online) {\n    if (online) {\n      this.handleError();\n    } else {\n      this.handleError(this.props.intl.formatMessage(messages.no_connection), 'warn');\n    }\n    this.setState({liveConnection: online});\n  }\n\n  handleVisibilityEvent() {\n    this.setState({applicationVisible: !document.hidden});\n  }\n\n  handleError(err, level, action, actionText) {\n    this.setState({errorText: err, errorLevel: level, errorAction: action, errorActionText: actionText});\n  }\n\n  // User clicked Login button in the side panel.\n  handleLoginRequest(login, password) {\n    this.setState({\n      loginDisabled: true,\n      login: login,\n      password: password,\n      loadSpinnerVisible: true,\n      autoLogin: true\n    });\n    this.handleError('', null);\n\n    if (this.tinode.isConnected()) {\n      this.doLogin(login, password, {meth: this.state.credMethod, resp: this.state.credCode});\n    } else {\n      this.tinode.connect().catch((err) => {\n        // Socket error\n        this.setState({loginDisabled: false, autoLogin: false, loadSpinnerVisible: false});\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // Connection succeeded.\n  handleConnected() {\n    const params = this.tinode.getServerInfo();\n    this.setState({\n      serverVersion: params.ver + ' ' + (params.build ? params.build : 'none')\n    });\n\n    if (this.state.autoLogin) {\n      this.doLogin(this.state.login, this.state.password, {meth: this.state.credMethod, resp: this.state.credCode});\n    }\n  }\n\n  // Called for each auto-reconnect iteration.\n  handleAutoreconnectIteration(sec, prom) {\n    clearInterval(this.reconnectCountdown);\n\n    if (sec < 0) {\n      // Clear error\n      this.handleError();\n      return;\n    }\n\n    if (prom) {\n      // Reconnecting now\n      prom.then(() => {\n        // Reconnected: clear error\n        this.handleError();\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n      return;\n    }\n\n    const {formatMessage} = this.props.intl;\n    let count = sec / 1000;\n    count = count | count;\n    this.reconnectCountdown = setInterval(() => {\n      const timeLeft = (count > 99) ? secondsToTime(count) : count;\n      this.handleError(\n        formatMessage(messages.reconnect_countdown, {seconds: timeLeft}),\n        'warn',\n        () => {\n          clearInterval(this.reconnectCountdown);\n          this.tinode.reconnect();\n        },\n        formatMessage(messages.reconnect_now)\n      );\n      count -= 1;\n    }, 1000);\n  }\n\n  // Connection lost\n  handleDisconnect(err) {\n    this.setState({\n      connected: false,\n      ready: false,\n      topicSelectedOnline: false,\n      errorText: err && err.message ? err.message : \"Disconnected\",\n      errorLevel: err && err.message ? 'err' : 'warn',\n      loginDisabled: false,\n      contextMenuVisible: false,\n      serverVersion: \"no connection\"\n    });\n  }\n\n  doLogin(login, password, cred) {\n    if (this.tinode.isAuthenticated()) {\n      // Already logged in. Go to default screen.\n      HashNavigation.navigateTo('');\n      return;\n    }\n    // Sanitize and package credentail.\n    cred = Tinode.credential(cred);\n    // Try to login with login/password. If they are not available, try token. If no token, ask for login/password.\n    let promise = null;\n    const token = this.tinode.getAuthToken();\n    if (login && password) {\n      this.setState({password: null});\n      promise = this.tinode.loginBasic(login, password, cred);\n    } else if (token) {\n      promise = this.tinode.loginToken(token.token, cred);\n    }\n\n    if (promise) {\n      promise.then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text === 'validate credentials') {\n          this.setState({loadSpinnerVisible: false});\n          if (cred) {\n            this.handleError(this.props.intl.formatMessage(messages.code_doesnot_match), 'warn');\n          }\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful();\n        }\n      }).catch((err) => {\n        // Login failed, report error.\n        this.setState({\n          loginDisabled: false,\n          credMethod: undefined,\n          credCode: undefined,\n          loadSpinnerVisible: false,\n          autoLogin: false\n        });\n        this.handleError(err.message, 'err');\n        localStorage.removeItem('auth-token');\n        HashNavigation.navigateTo('');\n      });\n    } else {\n      // No login credentials provided.\n      // Make sure we are on the login page.\n      HashNavigation.navigateTo('');\n      this.setState({loginDisabled: false});\n    }\n  }\n\n  handleCredentialsRequest(params) {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    parsed.path[0] = 'cred';\n    parsed.params['method'] = params.cred[0];\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n  }\n\n  handleLoginSuccessful() {\n    this.handleError();\n\n    // Refresh authentication token.\n    if (LocalStorageUtil.getObject('keep-logged-in')) {\n      LocalStorageUtil.setObject('auth-token', this.tinode.getAuthToken());\n    }\n    // Logged in fine, subscribe to 'me' attaching callbacks from the contacts view.\n    const me = this.tinode.getMeTopic();\n    me.onMetaDesc = this.tnMeMetaDesc;\n    me.onContactUpdate = this.tnMeContactUpdate;\n    me.onSubsUpdated = this.tnMeSubsUpdated;\n    this.setState({\n      connected: true,\n      credMethod: undefined,\n      credCode: undefined,\n      myUserId: this.tinode.getCurrentUserID(),\n      autoLogin: true,\n    });\n    // Subscribe, fetch topic desc, the list of subscriptions. Messages are not fetched.\n    me.subscribe(\n      me.startMetaQuery().\n        withLaterSub().\n        withDesc().\n        withTags().\n        withCred().\n        build()\n      ).catch((err) => {\n        this.tinode.disconnect();\n        localStorage.removeItem('auth-token');\n        this.handleError(err.message, 'err');\n        HashNavigation.navigateTo('');\n      }).finally(() => {\n        this.setState({loadSpinnerVisible: false});\n      });\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, 'contacts'));\n  }\n\n  tnMeMetaDesc(desc) {\n    if (desc) {\n      if (desc.public) {\n        this.setState({\n          sidePanelTitle: desc.public.fn,\n          sidePanelAvatar: makeImageUrl(desc.public.photo)\n        });\n      }\n      if (desc.acs) {\n        this.setState({\n          incognitoMode: !desc.acs.isPresencer()\n        });\n      }\n    }\n  }\n\n  // Reactions to updates to the contact list.\n  tnMeContactUpdate(what, cont) {\n    if (what == 'on' || what == 'off') {\n      this.resetContactList();\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedOnline: (what == 'on')});\n      }\n    } else if (what == 'read') {\n      this.resetContactList();\n    } else if (what == 'msg') {\n      // Check if the topic is archived. If so, don't play a sound.\n      const topic = this.tinode.getTopic(cont.topic);\n      const archived = topic && topic.isArchived();\n\n      // New message received. Maybe the message is from the current user, then unread is 0.\n      if (cont.unread > 0 && this.state.messageSounds && !archived) {\n        // Skip update if the topic is currently open, otherwise the badge will annoyingly flash.\n        if (document.hidden || this.state.topicSelected != cont.topic) {\n          POP_SOUND.play();\n        }\n      }\n      // Reorder contact list to use possibly updated 'touched'.\n      this.resetContactList();\n    } else if (what == 'recv') {\n      // Explicitly ignoring \"recv\" -- it causes no visible updates to contact list.\n    } else if (what == 'gone' || what == 'unsub') {\n      // Topic deleted or user unsubscribed. Remove topic from view.\n      // If the currently selected topic is gone, clear the selection.\n      if (this.state.topicSelected == cont.topic) {\n        this.handleTopicSelected(null);\n      }\n      // Redraw without the deleted topic.\n      this.resetContactList();\n    } else if (what == 'acs') {\n      // Permissions changed. If it's for the currently selected topic,\n      // update the views.\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedAcs: cont.acs});\n      }\n    } else if (what == 'del') {\n      // TODO: messages deleted (hard or soft) -- update pill counter.\n    } else if (what == 'upd') {\n      // upd - handled by the SDK. Explicitly ignoring here.\n    } else {\n      // TODO(gene): handle other types of notifications:\n      // * ua -- user agent changes (maybe display a pictogram for mobile/desktop).\n      console.log(\"Unsupported (yet) presence update:\" + what + \" in: \" + cont.topic);\n    }\n  }\n\n  tnMeSubsUpdated(unused) {\n    this.resetContactList();\n  }\n\n  // Merge search results and contact list to create a single flat\n  // list of known contacts for GroupManager to use.\n  static prepareSearchableContacts(chatList, foundContacts) {\n    const merged = {};\n\n    // For chatList topics merge only p2p topics and convert them to the\n    // same format as foundContacts.\n    for (const c of chatList) {\n      if (Tinode.isP2PTopicName(c.topic)) {\n          merged[c.topic] = {\n            user: c.topic,\n            updated: c.updated,\n            public: c.public,\n            private: c.private,\n            acs: c.acs\n          };\n      }\n    }\n\n    // Add all foundCountacts if they have not been added already.\n    for (const c of foundContacts) {\n      if (!merged[c.user]) {\n        merged[c.user] = c;\n      }\n    }\n\n    return Object.values(merged);\n  }\n\n  resetContactList() {\n    const newState = {\n      chatList: []\n    };\n\n    if (!this.state.ready) {\n      newState.ready = true;\n    }\n\n    this.tinode.getMeTopic().contacts((c) => {\n      newState.chatList.push(c);\n      if (this.state.topicSelected == c.topic) {\n        newState.topicSelectedOnline = c.online;\n        newState.topicSelectedAcs = c.acs;\n      }\n    });\n    // Merge search results and chat list.\n    newState.searchableContacts = TinodeWeb.prepareSearchableContacts(newState.chatList, this.state.searchResults);\n    this.setState(newState);\n  }\n\n  // Sending \"received\" notifications\n  tnData(data) {\n    const topic = this.tinode.getTopic(data.topic);\n    if (topic.msgStatus(data, true) >= Tinode.MESSAGE_STATUS_SENT && data.from != this.state.myUserId) {\n      clearTimeout(this.receivedTimer);\n      this.receivedTimer = setTimeout(() => {\n        this.receivedTimer = undefined;\n        topic.noteRecv(data.seq);\n      }, RECEIVED_DELAY);\n    }\n  }\n\n  /* Fnd topic: find contacts by tokens */\n  tnInitFind() {\n    const fnd = this.tinode.getFndTopic();\n    fnd.onSubsUpdated = this.tnFndSubsUpdated;\n    if (fnd.isSubscribed()) {\n      this.tnFndSubsUpdated();\n    } else {\n      fnd.subscribe(fnd.startMetaQuery().withSub().build()).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  tnFndSubsUpdated() {\n    const foundContacts = [];\n    // Don't attempt to create P2P topics which already exist. Server will reject the duplicates.\n    this.tinode.getFndTopic().contacts((s) => {\n      foundContacts.push(s);\n    });\n    this.setState({\n      searchResults: foundContacts,\n      searchableContacts: TinodeWeb.prepareSearchableContacts(this.state.chatList, foundContacts)\n    });\n  }\n\n  /** Called when the user enters a contact into the contact search field in the NewAccount panel\n    @param query {Array} is an array of contacts to search for\n   */\n  handleSearchContacts(query) {\n    const fnd = this.tinode.getFndTopic();\n    fnd.setMeta({desc: {public: query}}).then((ctrl) => {\n      return fnd.getMeta(fnd.startMetaQuery().withSub().build());\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  // User clicked on a contact in the side panel or deleted a contact.\n  handleTopicSelected(topicName) {\n    // Clear newTopicParams after use.\n    if (this.state.newTopicParams && this.state.newTopicParams._topicName != topicName) {\n      this.setState({\n        newTopicParams: null\n      });\n    }\n\n    if (topicName) {\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'topic-view',\n        showInfoPanel: false\n      });\n      // Different contact selected.\n      if (this.state.topicSelected != topicName) {\n        this.setState({\n          topicSelectedOnline: this.tinode.isTopicOnline(topicName),\n          topicSelectedAcs: this.tinode.getTopicAccessMode(topicName)\n        });\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', topicName));\n      }\n    } else {\n      // Currently selected contact deleted\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'sidepanel',\n        topicSelectedOnline: false,\n        topicSelectedAcs: null,\n        showInfoPanel: false\n      });\n\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic('', null));\n    }\n  }\n\n  // In mobile view user requested to show sidepanel\n  handleHideMessagesView() {\n    this.setState({\n      mobilePanel: 'sidepanel'\n    });\n    HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, null));\n  }\n\n  // User is sending a message, either plain text or a drafty object, possibly\n  // with attachments.\n  //  - msg - Drafty message with content\n  //  - promise - Promise to be resolved when the upload is completed\n  //  - uploader - for tracking progress\n  handleSendMessage(msg, promise, uploader) {\n    const topic = this.tinode.getTopic(this.state.topicSelected);\n\n    msg = topic.createMessage(msg, false);\n    // The uploader is used to show progress.\n    msg._uploader = uploader;\n\n    if (!topic.isSubscribed()) {\n      if (!promise) {\n        promise = Promise.resolve();\n      }\n      promise = promise.then(() => { return topic.subscribe(); });\n    }\n\n    if (promise) {\n      promise = promise.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n\n    topic.publishDraft(msg, promise)\n      .then((ctrl) => {\n        if (topic.isArchived()) {\n          return topic.archive(false);\n        }\n      })\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleNewChatInvitation(topicName, action) {\n    const topic = this.tinode.getTopic(topicName);\n    let response = null;\n    switch (action) {\n      case 'accept':\n        // Accept given permissions.\n        const mode = topic.getAccessMode().getGiven();\n        response = topic.setMeta({sub: {mode: mode}});\n        if (topic.isP2PType()) {\n          // For P2P topics change 'given' permission of the peer too.\n          // In p2p topics the other user has the same name as the topic.\n          response = response.then((ctrl) => {\n            topic.setMeta({sub: {user: topicName, mode: mode}});\n          });\n        }\n        break;\n      case 'delete':\n        // Ignore invitation by deleting it.\n        response = topic.delTopic(true);\n        break;\n      case 'block':\n        // Ban the topic making futher invites impossible.\n        // Just self-ban.\n        const am = topic.getAccessMode().updateWant('-JP').getWant();\n        response = topic.setMeta({sub: {mode: am}}).then((ctrl) => {\n          return this.handleTopicSelected(null);\n        });\n        break;\n      default:\n        console.log(\"Unknown invitation action\", '\"' + action + '\"\"');\n    }\n\n    if (response != null) {\n      response.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // User chose a Sign Up menu item.\n  handleNewAccount() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, 'register'));\n  }\n\n  // Actual registration of a new account.\n  handleNewAccountRequest(login_, password_, public_, cred_, tags_) {\n    // Clear old error, if any.\n    this.handleError();\n\n    this.tinode.connect(this.state.serverAddress)\n      .then(() => {\n        return this.tinode.createAccountBasic(login_, password_,\n          {public: public_, tags: tags_, cred: Tinode.credential(cred_)});\n      }).then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text == 'validate credentials') {\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful(this);\n        }\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleUpdateAccountRequest(password, pub, defacs) {\n    this.handleError();\n\n    if (pub || defacs) {\n      const params = {};\n      if (pub) {\n        params.public = pub;\n      }\n      if (defacs) {\n        params.defacs = defacs;\n      }\n      this.tinode.getMeTopic().setMeta({desc: params}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n    if (password) {\n      this.tinode.updateAccountBasic(null, this.tinode.getCurrentLogin(), password).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleToggleIncognitoMode(on) {\n    const me = this.tinode.getMeTopic();\n    const am = me.getAccessMode().updateWant(on ? '-P' : '+P').getWant();\n    me.setMeta({sub: {mode: am}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleUpdateAccountTagsRequest(tags) {\n    this.tinode.getMeTopic().setMeta({tags: tags})\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  // User chose Settings menu item.\n  handleSettings() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'edit' : 'settings'));\n  }\n\n  // User updated global parameters.\n  handleGlobalSettings(settings) {\n    const serverAddress = settings.serverAddress || this.state.serverAddress;\n    const transport = settings.transport || this.state.transport;\n    if (this.tinode) {\n      this.tinode.clearStorage();\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.tinode = TinodeWeb.tnSetup(serverAddress, transport, this.props.intl.locale,\n      LocalStorageUtil.getObject('keep-logged-in'));\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n\n    this.setState({\n      serverAddress: serverAddress,\n      transport: transport\n    });\n    LocalStorageUtil.setObject('settings', {\n      serverAddress: serverAddress,\n      transport: transport\n    });\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, ''));\n  }\n\n  // User chose 'Archived chats'.\n  handleShowArchive() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'archive' : ''));\n  }\n\n  // User viewes 'Blocked chats'.\n  handleShowBlocked() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'blocked' : ''));\n  }\n\n  // Initialize desktop alerts = push notifications.\n  initDesktopAlerts() {\n    // Google could not be bothered to mention that\n    // onTokenRefresh is never called.\n    this.fbPush.onTokenRefresh(() => {\n      this.requestPushToken();\n    });\n\n    this.fbPush.onMessage((payload) => {\n      // No need to do anything about it.\n      // All the magic happends in the service worker.\n    });\n  }\n\n  togglePushToken(enabled) {\n    if (enabled) {\n      if (!this.state.firebaseToken) {\n        this.fbPush.requestPermission().then(() => {\n          this.requestPushToken();\n        }).catch((err) => {\n          this.handleError(err.message, 'err');\n          this.setState({desktopAlerts: false, firebaseToken: null});\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n          console.log(\"Failed to get permission to notify.\", err);\n        });\n      } else {\n        this.setState({desktopAlerts: true});\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n      }\n    } else if (this.state.firebaseToken) {\n      this.fbPush.deleteToken(this.state.firebaseToken).catch((err) => {\n        console.log(\"Unable to delete token.\", err);\n      }).finally(() => {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        localStorage.removeItem('firebase-token');\n        this.setState({desktopAlerts: false, firebaseToken: null});\n      });\n    } else {\n      this.setState({desktopAlerts: false, firebaseToken: null});\n      LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n    }\n  }\n\n  requestPushToken() {\n    this.fbPush.getToken().then((refreshedToken) => {\n      if (refreshedToken != this.state.firebaseToken) {\n        this.tinode.setDeviceToken(refreshedToken, true);\n        LocalStorageUtil.setObject('firebase-token', refreshedToken);\n      }\n      this.setState({firebaseToken: refreshedToken, desktopAlerts: true});\n      LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n      console.log(\"Failed to retrieve firebase token\", err);\n    });\n  }\n\n  handleToggleMessageSounds(enabled) {\n    this.setState({messageSounds: enabled});\n    LocalStorageUtil.updateObject('settings', {\n      messageSoundsOff: !enabled\n    });\n  }\n\n  handleCredAdd(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.setMeta({cred: {meth: method, val: value}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredDelete(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.delCredential(method, value).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredConfirm(method, response) {\n    this.handleCredentialsRequest({cred: [method]});\n  }\n\n  // User clicked Cancel button in Setting or Sign Up panel.\n  handleSidepanelCancel() {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    let path = '';\n    if (['security','support','general','notif'].includes(parsed.path[0])) {\n      path = 'edit';\n    } else if ('blocked' == parsed.path[0]) {\n      path = 'security';\n    } else if (this.state.myUserId) {\n      path = 'contacts';\n    }\n    parsed.path[0] = path;\n    if (parsed.params) {\n      delete parsed.params.code;\n      delete parsed.params.method;\n      delete parsed.params.tab;\n    }\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n    this.setState({errorText: '', errorLevel: null});\n  }\n\n  // Basic nagigator by hash value. No need to bind to this.\n  basicNavigator(hash) {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, hash));\n  }\n\n  // Request to start a topic, new or selected from search results, or \"by ID\".\n  handleStartTopicRequest(topicName, pub, priv, tags, isChannel) {\n    // Check if topic is indeed new. If not, launch it.\n    if (topicName && this.tinode.isTopicCached(topicName)) {\n      this.handleTopicSelected(topicName);\n      return;\n    }\n\n    const params = {};\n    if (Tinode.isP2PTopicName(topicName)) {\n      // Because we are initialing the subscription, set 'want' to all permissions.\n      params.sub = {mode: DEFAULT_P2P_ACCESS_MODE};\n      // Give the other user all permissions too.\n      params.desc = {defacs: {auth: DEFAULT_P2P_ACCESS_MODE}};\n    } else {\n      topicName = topicName || this.tinode.newGroupTopicName(isChannel);\n      params.desc = {public: pub, private: {comment: priv}};\n      params.tags = tags;\n    }\n    params._topicName = topicName;\n    this.setState({newTopicParams: params}, () => {this.handleTopicSelected(topicName)});\n  }\n\n  // New topic was creted, here is the new topic name.\n  handleNewTopicCreated(oldName, newName) {\n    if (this.state.topicSelected == oldName && oldName != newName) {\n      // If the current URl contains the old topic name, replace it with new.\n      // Update the name of the selected topic first so the navigator doen't clear\n      // the state.\n      this.setState({topicSelected: newName}, () => {\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', newName));\n      });\n    }\n  }\n\n  handleTopicUpdateRequest(topicName, pub, priv, permissions) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const params = {};\n      if (pub) {\n        params.public = pub;\n      }\n      if (priv) {\n        params.private = (priv === Tinode.DEL_CHAR) ?\n          Tinode.DEL_CHAR : {comment: priv};\n      }\n      if (permissions) {\n        params.defacs = permissions;\n      }\n      topic.setMeta({desc: params}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleChangePermissions(topicName, mode, uid) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const am = topic.getAccessMode();\n      if (uid) {\n        am.updateGiven(mode);\n        mode = am.getGiven();\n      } else {\n        am.updateWant(mode);\n        mode = am.getWant();\n      }\n      topic.setMeta({sub: {user: uid, mode: mode}}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleTagsUpdated(topicName, tags) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      topic.setMeta({tags: tags}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleLogout() {\n    updateFavicon(0);\n\n    // Remove stored data.\n    localStorage.removeItem('auth-token');\n    localStorage.removeItem('firebase-token');\n    localStorage.removeItem('settings');\n    if (this.state.firebaseToken) {\n      this.fbPush.deleteToken(this.state.firebaseToken)\n    }\n\n    if (this.tinode) {\n      this.tinode.clearStorage();\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.setState(this.getBlankState());\n\n    this.tinode = TinodeWeb.tnSetup(this.state.serverAddress,\n      this.state.transport, this.props.intl.locale, LocalStorageUtil.getObject('keep-logged-in'));\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    HashNavigation.navigateTo('');\n  }\n\n  handleDeleteAccount() {\n    this.tinode.delCurrentUser(true).then((ctrl) => {\n      this.handleLogout();\n    });\n  }\n\n  handleDeleteMessagesRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Request hard-delete all messages.\n    topic.delMessagesAll(true).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleLeaveUnsubRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.leave(true).then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleBlockTopicRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleReportTopic(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Publish spam report.\n    this.tinode.publish(Tinode.TOPIC_SYS, Tinode.Drafty.attachJSON(null, {\n      'action': 'report',\n      'target': topicName\n    }));\n\n    // Remove J and P permissions.\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleShowContextMenu(params, menuItems) {\n    this.setState({\n      contextMenuVisible: true,\n      contextMenuClickAt: {x: params.x, y: params.y},\n      contextMenuParams: params,\n      contextMenuItems: menuItems || this.defaultTopicContextMenu(params.topicName),\n      contextMenuBounds: ReactDOM.findDOMNode(this).getBoundingClientRect()\n    });\n  }\n\n  defaultTopicContextMenu(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n\n    let muted = false, blocked = false, self_blocked = false, subscribed = false, deleter = false, archived = false;\n    if (topic) {\n      subscribed = topic.isSubscribed();\n      archived = topic.isArchived();\n\n      const acs = topic.getAccessMode();\n      if (acs) {\n        muted = acs.isMuted();\n        blocked = !acs.isJoiner();\n        self_blocked = !acs.isJoiner('want');\n        deleter = acs.isDeleter();\n      }\n    }\n\n    return [\n      subscribed ? {\n        title: this.props.intl.formatMessage(messages.menu_item_info),\n        handler: this.handleShowInfoView\n      } : null,\n      subscribed ? 'messages_clear' : null,\n      subscribed && deleter ? 'messages_clear_hard' : null,\n      muted ? (blocked ? null : 'topic_unmute') : 'topic_mute',\n      self_blocked ? 'topic_unblock' : 'topic_block',\n      !archived ? 'topic_archive' : null,\n      'topic_delete'\n    ];\n  }\n\n  handleHideContextMenu() {\n    this.setState({\n      contextMenuVisible: false,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuBounds: null\n    });\n  }\n\n  handleContextMenuAction(action, promise, params) {\n    if (action == 'topic_archive') {\n      if (promise && params.topicName && params.topicName == this.state.topicSelected) {\n        promise.then(() => {\n          this.handleTopicSelected(null);\n        });\n      }\n    }\n  }\n\n  handleShowAlert(title, content, onConfirm, confirmText, onReject, rejectText) {\n    this.setState({\n      alertVisible: true,\n      alertParams: {\n        title: title,\n        content: content,\n        onConfirm: onConfirm,\n        confirm: confirmText,\n        onReject: onReject,\n        reject: rejectText\n      }\n    });\n  }\n\n  handleShowInfoView() {\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'info', true));\n    this.setState({showInfoPanel: true});\n  }\n\n  handleHideInfoView() {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'info'));\n    this.setState({showInfoPanel: false});\n  }\n\n  handleMemberUpdateRequest(topicName, added, removed) {\n    if (!topicName) {\n      return;\n    }\n\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    if (added && added.length > 0) {\n      added.map((uid) => {\n        topic.invite(uid, null).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n\n    if (removed && removed.length > 0) {\n      removed.map((uid) => {\n        topic.delSubscription(uid).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n  }\n\n  handleValidateCredentialsRequest(cred, code) {\n    if (this.tinode.isAuthenticated()) {\n      const me = this.tinode.getMeTopic();\n      me.setMeta({cred: {meth: cred, resp: code}})\n        .then(() => {\n          HashNavigation.navigateTo('');\n        })\n        .catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n    } else {\n      this.setState({credMethod: cred, credCode: code});\n      this.doLogin(null, null, {meth: cred, resp: code});\n    }\n  }\n\n  handlePasswordResetRequest(method, value) {\n    // If already connected, connnect() will return a resolved promise.\n    this.tinode.connect()\n      .then(() => {\n        return this.tinode.requestResetAuthSecret('basic', method, value);\n      })\n      .catch((err) => {\n        // Socket error\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleResetPassword(scheme, newPassword, token) {\n    token = base64ReEncode(token);\n    if (!token) {\n      this.handleError(this.props.intl.formatMessage(messages.invalid_security_token), 'err');\n    } else {\n      this.tinode.connect()\n        .then(() => {\n          return this.tinode.updateAccountBasic(null, null, newPassword, {token: token});\n        })\n        .catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"app-container\">\n        {this.state.contextMenuVisible ?\n          <ContextMenu\n            tinode={this.tinode}\n            bounds={this.state.contextMenuBounds}\n            clickAt={this.state.contextMenuClickAt}\n            params={this.state.contextMenuParams}\n            items={this.state.contextMenuItems}\n            hide={this.handleHideContextMenu}\n            onShowAlert={this.handleShowAlert}\n            onAction={this.handleContextMenuAction}\n            onTopicRemoved={(topicName) => {\n              if (topicName == this.state.topicSelected) {\n                this.handleTopicSelected(null);\n              }\n            }}\n            onError={this.handleError} />\n          :\n          null\n        }\n        <Alert\n          visible={this.state.alertVisible}\n          title={this.state.alertParams.title}\n          content={this.state.alertParams.content}\n          onReject={this.state.alertParams.onReject ? (() => { this.setState({alertVisible: false}); }) : null}\n          reject={this.state.alertParams.reject}\n          onConfirm={() => { this.setState({alertVisible: false}); this.state.alertParams.onConfirm(); }}\n          confirm={this.state.alertParams.confirm}\n          />\n        <SidepanelView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          displayMobile={this.state.displayMobile}\n          hideSelf={this.state.displayMobile && this.state.mobilePanel !== 'sidepanel'}\n          state={this.state.sidePanelSelected}\n          title={this.state.sidePanelTitle}\n          avatar={this.state.sidePanelAvatar}\n          login={this.state.login}\n          myUserId={this.state.myUserId}\n          loginDisabled={this.state.loginDisabled}\n          loadSpinnerVisible={this.state.loadSpinnerVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          topicSelected={this.state.topicSelected}\n          chatList={this.state.chatList}\n          credMethod={this.state.credMethod}\n          credCode={this.state.credCode}\n\n          transport={this.state.transport}\n          messageSounds={this.state.messageSounds}\n          desktopAlerts={this.state.desktopAlerts}\n          desktopAlertsEnabled={this.state.desktopAlertsEnabled}\n          incognitoMode={this.state.incognitoMode}\n          serverAddress={this.state.serverAddress}\n          serverVersion={this.state.serverVersion}\n\n          onGlobalSettings={this.handleGlobalSettings}\n          onSignUp={this.handleNewAccount}\n          onSettings={this.handleSettings}\n          onBasicNavigate={this.basicNavigator}\n          onLoginRequest={this.handleLoginRequest}\n          onCreateAccount={this.handleNewAccountRequest}\n          onUpdateAccount={this.handleUpdateAccountRequest}\n          onUpdateAccountTags={this.handleUpdateAccountTagsRequest}\n          onTogglePushNotifications={this.togglePushToken}\n          onToggleMessageSounds={this.handleToggleMessageSounds}\n          onToggleIncognitoMode={this.handleToggleIncognitoMode}\n          onCredAdd={this.handleCredAdd}\n          onCredDelete={this.handleCredDelete}\n          onCredConfirm={this.handleCredConfirm}\n          onTopicSelected={this.handleTopicSelected}\n          onCreateTopic={this.handleStartTopicRequest}\n          onLogout={this.handleLogout}\n          onDeleteAccount={this.handleDeleteAccount}\n          onShowAlert={this.handleShowAlert}\n          onCancel={this.handleSidepanelCancel}\n          onError={this.handleError}\n          onValidateCredentials={this.handleValidateCredentialsRequest}\n          onPasswordResetRequest={this.handlePasswordResetRequest}\n          onResetPassword={this.handleResetPassword}\n          onShowArchive={this.handleShowArchive}\n          onShowBlocked={this.handleShowBlocked}\n\n          onInitFind={this.tnInitFind}\n          searchResults={this.state.searchResults}\n          onSearchContacts={this.handleSearchContacts}\n\n          showContextMenu={this.handleShowContextMenu} />\n\n        <MessagesView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          ready={this.state.ready}\n          online={this.state.topicSelectedOnline}\n          acs={this.state.topicSelectedAcs}\n          displayMobile={this.state.displayMobile}\n          viewportWidth={this.state.viewportWidth}\n          viewportHeight={this.state.viewportHeight}\n          hideSelf={this.state.displayMobile &&\n            (this.state.mobilePanel !== 'topic-view' || this.state.showInfoPanel)}\n          topic={this.state.topicSelected}\n          myUserId={this.state.myUserId}\n          serverVersion={this.state.serverVersion}\n          serverAddress={this.state.serverAddress}\n          applicationVisible={this.state.applicationVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          newTopicParams={this.state.newTopicParams}\n\n          onHideMessagesView={this.handleHideMessagesView}\n          onData={this.tnData}\n          onError={this.handleError}\n          onNewTopicCreated={this.handleNewTopicCreated}\n          showContextMenu={this.handleShowContextMenu}\n          onChangePermissions={this.handleChangePermissions}\n          onNewChat={this.handleNewChatInvitation}\n          sendMessage={this.handleSendMessage} />\n\n        {this.state.showInfoPanel ?\n          <InfoView\n            tinode={this.tinode}\n            connected={this.state.connected}\n            displayMobile={this.state.displayMobile}\n            topic={this.state.topicSelected}\n            searchableContacts={this.state.searchableContacts}\n            myUserId={this.state.myUserId}\n\n            errorText={this.state.errorText}\n            errorLevel={this.state.errorLevel}\n            errorAction={this.state.errorAction}\n            errorActionText={this.state.errorActionText}\n\n            onTopicDescUpdate={this.handleTopicUpdateRequest}\n            onCancel={this.handleHideInfoView}\n            onShowAlert={this.handleShowAlert}\n            onChangePermissions={this.handleChangePermissions}\n            onMemberUpdateRequest={this.handleMemberUpdateRequest}\n            onDeleteMessages={this.handleDeleteMessagesRequest}\n            onLeaveTopic={this.handleLeaveUnsubRequest}\n            onBlockTopic={this.handleBlockTopicRequest}\n            onReportTopic={this.handleReportTopic}\n            onAddMember={this.handleManageGroupMembers}\n            onTopicTagsUpdate={this.handleTagsUpdated}\n            onInitFind={this.tnInitFind}\n            onError={this.handleError}\n\n            showContextMenu={this.handleShowContextMenu}\n            />\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(TinodeWeb);\n","// Put all packages together.\n// Used to generate umd/index.prod.js\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { IntlProvider } from 'react-intl';\n\nimport allMessages from './messages.json';\nimport TinodeWeb from './views/tinode-web.jsx';\nimport HashNavigation from './lib/navigation.js';\n\n// Detect human language to use in the UI:\n//  Check parameters from URL hash #?hl=ru, then browser, then use 'en' as a fallback.\nconst { params } = HashNavigation.parseUrlHash(window.location.hash);\nconst language = (params && params.hl) ||\n  (navigator.languages && navigator.languages[0]) ||\n  navigator.language ||\n  navigator.userLanguage ||\n  'en';\n\n// Get the base language 'en' from a more specific 'en_GB' or 'en-US' as a partial fallback.\nconst baseLanguage = language.toLowerCase().split(/[-_]/)[0];\n\n// Try the full locale first, then the locale without the region code, fallback to 'en'.\nconst messages =\n  allMessages[language] ||\n  allMessages[baseLanguage] ||\n  allMessages.en;\n\nReactDOM.render(\n  <IntlProvider locale={language} messages={messages} textComponent={React.Fragment}>\n    <TinodeWeb />\n  </IntlProvider>,\n  document.getElementById('mountPoint')\n);\n"],"sourceRoot":""}