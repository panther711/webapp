{"version":3,"sources":["webpack://tinode-webapp/./src/config.js","webpack://tinode-webapp/./src/index.js","webpack://tinode-webapp/./src/lib/blob-helpers.js","webpack://tinode-webapp/./src/lib/host-name.js","webpack://tinode-webapp/./src/lib/local-storage.js","webpack://tinode-webapp/./src/lib/navigation.js","webpack://tinode-webapp/./src/lib/strformat.js","webpack://tinode-webapp/./src/lib/utils.js","webpack://tinode-webapp/./src/version.js","webpack://tinode-webapp/./src/views/acc-general-view.jsx","webpack://tinode-webapp/./src/views/acc-notifications-view.jsx","webpack://tinode-webapp/./src/views/acc-security-view.jsx","webpack://tinode-webapp/./src/views/acc-support-view.jsx","webpack://tinode-webapp/./src/views/contacts-view.jsx","webpack://tinode-webapp/./src/views/create-account-view.jsx","webpack://tinode-webapp/./src/views/edit-account-view.jsx","webpack://tinode-webapp/./src/views/info-view.jsx","webpack://tinode-webapp/./src/views/login-view.jsx","webpack://tinode-webapp/./src/views/logo-view.jsx","webpack://tinode-webapp/./src/views/messages-view.jsx","webpack://tinode-webapp/./src/views/new-topic-view.jsx","webpack://tinode-webapp/./src/views/password-reset-view.jsx","webpack://tinode-webapp/./src/views/settings-view.jsx","webpack://tinode-webapp/./src/views/sidepanel-view.jsx","webpack://tinode-webapp/./src/views/tinode-web.jsx","webpack://tinode-webapp/./src/views/validation-view.jsx","webpack://tinode-webapp/./src/widgets/alert.jsx","webpack://tinode-webapp/./src/widgets/attachment.jsx","webpack://tinode-webapp/./src/widgets/avatar-upload.jsx","webpack://tinode-webapp/./src/widgets/button-back.jsx","webpack://tinode-webapp/./src/widgets/chat-message.jsx","webpack://tinode-webapp/./src/widgets/checkbox.jsx","webpack://tinode-webapp/./src/widgets/chip-input.jsx","webpack://tinode-webapp/./src/widgets/chip.jsx","webpack://tinode-webapp/./src/widgets/contact-action.jsx","webpack://tinode-webapp/./src/widgets/contact-badges.jsx","webpack://tinode-webapp/./src/widgets/contact-list.jsx","webpack://tinode-webapp/./src/widgets/contact.jsx","webpack://tinode-webapp/./src/widgets/context-menu.jsx","webpack://tinode-webapp/./src/widgets/doc-preview.jsx","webpack://tinode-webapp/./src/widgets/error-panel.jsx","webpack://tinode-webapp/./src/widgets/file-progress.jsx","webpack://tinode-webapp/./src/widgets/group-manager.jsx","webpack://tinode-webapp/./src/widgets/group-subs.jsx","webpack://tinode-webapp/./src/widgets/host-selector.jsx","webpack://tinode-webapp/./src/widgets/image-preview.jsx","webpack://tinode-webapp/./src/widgets/in-place-edit.jsx","webpack://tinode-webapp/./src/widgets/invitation.jsx","webpack://tinode-webapp/./src/widgets/letter-tile.jsx","webpack://tinode-webapp/./src/widgets/load-spinner.jsx","webpack://tinode-webapp/./src/widgets/menu-cancel.jsx","webpack://tinode-webapp/./src/widgets/menu-contacts.jsx","webpack://tinode-webapp/./src/widgets/menu-start.jsx","webpack://tinode-webapp/./src/widgets/more-button.jsx","webpack://tinode-webapp/./src/widgets/new-topic-by-id.jsx","webpack://tinode-webapp/./src/widgets/new-topic-group.jsx","webpack://tinode-webapp/./src/widgets/permissions-editor.jsx","webpack://tinode-webapp/./src/widgets/received-marker.jsx","webpack://tinode-webapp/./src/widgets/search-contacts.jsx","webpack://tinode-webapp/./src/widgets/send-message.jsx","webpack://tinode-webapp/./src/widgets/side-navbar.jsx","webpack://tinode-webapp/./src/widgets/tag-manager.jsx","webpack://tinode-webapp/./src/widgets/unread-badge.jsx","webpack://tinode-webapp/./src/widgets/uploading-image.jsx","webpack://tinode-webapp/./src/widgets/visible-password.jsx","webpack://tinode-webapp/external \"React\"","webpack://tinode-webapp/external \"ReactDOM\"","webpack://tinode-webapp/external \"ReactIntl\"","webpack://tinode-webapp/external \"Tinode\"","webpack://tinode-webapp/external \"firebase\"","webpack://tinode-webapp/external [\"firebase\",\"messaging\"]","webpack://tinode-webapp/webpack/bootstrap","webpack://tinode-webapp/webpack/runtime/compat get default export","webpack://tinode-webapp/webpack/runtime/define property getters","webpack://tinode-webapp/webpack/runtime/hasOwnProperty shorthand","webpack://tinode-webapp/webpack/runtime/make namespace object","webpack://tinode-webapp/webpack/startup"],"names":["APP_NAME","PACKAGE_VERSION","API_KEY","KNOWN_HOSTS","hosted","local","DEFAULT_HOST","LOGGING_ENABLED","KEYPRESS_DELAY","RECEIVED_DELAY","READ_DELAY","MIN_TAG_LENGTH","MAX_TAG_LENGTH","MAX_TAG_COUNT","DEFAULT_P2P_ACCESS_MODE","NEW_GRP_ACCESS_MODE","CHANNEL_ACCESS_MODE","NO_ACCESS_MODE","MEDIA_BREAKPOINT","REM_SIZE","AVATAR_SIZE","BROKEN_IMAGE_SIZE","MESSAGES_PAGE","MAX_INBAND_ATTACHMENT_SIZE","MAX_EXTERN_ATTACHMENT_SIZE","MAX_IMAGE_DIM","IMAGE_PREVIEW_DIM","MAX_ONLINE_IN_TOPIC","MAX_TITLE_LENGTH","LINK_CONTACT_US","LINK_PRIVACY_POLICY","LINK_TERMS_OF_SERVICE","params","HashNavigation","window","location","hash","language","hl","navigator","languages","userLanguage","baseLanguage","toLowerCase","split","messages","allMessages","ReactDOM","IntlProvider","locale","textComponent","React","document","getElementById","SUPPORTED_IMAGE_FORMATS","MIME_EXTENSIONS","makeImageUrl","photo","type","data","fitImageSize","width","height","maxWidth","maxHeight","forceSquare","Math","min","scale","size","dstWidth","dstHeight","srcWidth","srcHeight","xoffset","yoffset","fileNameForMime","fname","mime","idx","indexOf","ext","at","lastIndexOf","substring","imageScaled","fileOrBlob","maxSize","onSuccess","onError","img","Image","crossOrigin","onerror","err","onload","async","URL","revokeObjectURL","src","dim","this","canvas","createElement","ctx","getContext","imageSmoothingEnabled","drawImage","blob","Promise","resolve","toBlob","length","clearRect","name","createObjectURL","fileToBase64","file","reader","FileReader","addEventListener","result","readAsDataURL","blobToBase64","filePasted","event","onImageSuccess","onAttachmentSuccess","items","clipboardData","originalEvent","i","item","kind","getAsFile","console","log","imageFileScaledToBase64","imageFileToBase64","getMimeType","header","exec","base64EncodedLen","n","floor","base64DecodedLen","base64ReEncode","str","replace","btoa","atob","detectServerAddress","host","protocol","hostname","port","isSecureConnection","isLocalHost","LocalStorageUtil","key","value","localStorage","setItem","JSON","stringify","getItem","parse","oldVal","getObject","setObject","Object","assign","removeItem","parts","path","substr","forEach","part","decodeURIComponent","url","join","args","hasOwnProperty","push","parsed","parseUrlHash","composeUrlHash","sidepanel","topic","info","shortDateFormat","then","now","Date","getFullYear","getMonth","getDate","toLocaleTimeString","hour12","hour","minute","toLocaleDateString","month","day","year","secondsToTime","seconds","sec","bytesToHumanSize","bytes","sizes","bucket","log2","count","pow","round","toFixed","stringHash","charCodeAt","updateFavicon","oldIcon","head","getElementsByTagName","newIcon","id","rel","href","removeChild","appendChild","title","vcard","fn","imageDataUrl","card","trim","dataStart","arrayEqual","a","b","Array","isArray","sort","l","asPhone","val","test","asEmail","isUrlRelative","sanitizeUrl","allowedSchemes","schemes","RegExp","sanitizeImageUrl","sanitizedUrl","AccGeneralView","constructor","props","super","me","tinode","getMeTopic","state","fullName","public","undefined","avatar","tags","credentials","getCredentials","addCredActive","addCredInvalid","newCred","previousOnTags","onTagsUpdated","tnNewTags","bind","tnCredsUpdated","handleFullNameUpdate","handleImageChanged","handleCredChange","handleCredKeyDown","handleCredEntered","handleTagsUpdated","componentDidMount","onCredsUpdated","componentWillUnmount","setState","creds","onUpdateAccount","Tinode","e","target","keyCode","method","onCredAdd","slice","onUpdateTags","render","map","cred","meth","done","onClick","preventDefault","onCredConfirm","FormattedMessage","defaultMessage","onCredDelete","className","full_name_placeholder","placeholder","onFinished","uid","myUserId","onImageChanged","title_tag_manager","activated","onSubmit","required","autoFocus","onChange","onKeyDown","onBlur","EditAccountView","handleCheckboxClick","what","checked","onToggleMessageSounds","onTogglePushNotifications","onToggleIncognitoMode","htmlFor","messageSounds","desktopAlertsEnabled","desktopAlerts","incognitoMode","defineMessages","delete_account","delete_account_warning","AccSecurityView","blockedCount","contacts","c","acs","isJoiner","defacs","getDefaultAccess","auth","anon","showPermissionEditorFor","handlePasswordUpdate","handleLaunchPermissionsEditor","handleHidePermissionsEditor","handlePermissionsChanged","handleDeleteAccount","pwd","password","which","editedPermissions","perm","newState","formatMessage","intl","onShowAlert","onDeleteAccount","mode","skip","onCancel","password_unchanged","onLogout","onShowBlocked","values","injectIntl","AccSupportView","serverVersion","serverAddress","archived_contacts_title","ContactsView","handleAction","deriveStateFromProps","unreadThreads","archivedCount","chatList","blocked","private","arch","archive","unread","touched","action","contactList","componentDidUpdate","prevProps","prevState","action_ignored","onShowArchive","no_contacts","connected","emptyListMessage","topicSelected","showOnline","showUnread","onTopicSelected","showContextMenu","onAction","CreateAccountView","login","email","errorCleared","saveToken","handleLoginChange","handlePasswordChange","handleEmailChange","handleFnChange","handleToggleSaveToken","handleSubmit","onCreateAccount","submitClasses","disabled","login_prompt","autoComplete","password_prompt","full_name_prompt","email_prompt","stay_logged_in","readOnly","owner","onBasicNavigate","requested","granted","edit_permissions","other_user","clear_messages","clear_messages_warning","delete_messages","delete_messages_warning","leave_chat","leave_chat_warning","block_contact","block_contact_warning","report_chat","report_chat_warning","InfoView","admin","sharer","deleter","muted","address","groupTopic","channel","selectedContact","access","modeGiven","modeWant","modeGiven2","modeWant2","showMemberPanel","moreInfoExpanded","previousMetaDesc","previousSubsUpdated","previousTagsUpdated","resetSubs","resetDesc","onMetaDesc","onSubsUpdated","handlePrivateUpdate","handleMuted","handleShowAddMembers","handleHideAddMembers","handleMemberUpdateRequest","handleDeleteMessages","handleLeave","handleBlock","handleReport","handleMemberSelected","handleMoreInfo","handleContextMenu","getTopic","getType","user2","subscriber","getGiven","getWant","subscribers","sub","getAccessMode","isOwner","isAdmin","isSharer","isDeleter","isMuted","comment","isChannel","getMode","getMeta","startMetaQuery","withTags","build","desc","subs","onTopicDescUpdate","ignored","onChangePermissions","userPermissionsEdited","toEdit","toCompare","toSkip","titleEdit","titleCompare","userTitle","userAvatar","user","userPermissionsTitle","userPermissionsAvatar","immutablePermissions","editedPermissionsTitle","immutablePermissionsTitle","editedPermissionsSkipped","onInitFind","members","added","removed","onMemberUpdateRequest","onDeleteMessages","onLeaveTopic","onBlockTopic","onReportTopic","open","onTopicTagsUpdate","instance","topicName","menuItems","handler","x","y","displayMobile","level","errorLevel","text","errorText","onClearError","requiredMember","keepInitialMembers","searchableContacts","compare","modeTitle","compareTitle","private_placeholder","more","onToggle","no_members","showMode","noScroll","LoginView","hostName","onLogin","autoCorrect","autoCapitalize","LogoView","version","alt","Drafty","isUnconfirmed","ex","getExcessive","includes","isPeerRestricted","ms","getMissing","MessagesView","getDerivedStateFromProps","leave","sendImageAttachment","sendFileAttachment","sendKeyPress","handleScrollReference","handleScrollEvent","handleDescChange","handleSubsUpdated","handleNewMessage","handleAllMessagesReceived","handleInfoReceipt","handleImagePostview","handleClosePreview","handleFormResponse","handleContextClick","handleShowContextMenuMessage","handleNewChatAcceptance","handleEnablePeer","handleAttachFile","handleAttachImage","handleCancelUpload","postReadNotification","clearNotificationQueue","readNotificationQueue","readNotificationTimer","messagesScroller","removeEventListener","scrollTop","scrollHeight","scrollPosition","viewportHeight","onData","onAllMessagesReceived","onInfo","onPres","applicationVisible","isSubscribed","ready","newTopic","newTopicParams","_topicName","getQuery","withLaterDesc","withLaterSub","isReader","withLaterData","withLaterDel","fetchingMessages","setQuery","subscribe","ctrl","code","onNewTopicCreated","queuedMessages","pub","_sending","publishMessage","catch","message","blankState","not_found","nextProps","nextState","docPreview","imagePreview","imagePostview","typingIndicator","msgs","online","msg","deleted","onlineSubs","peer","p2pPeerDesc","peerMessagingDisabled","isWriter","readingBlocked","unconformed","unconfirmed","oldTopicName","oldTopic","finally","node","msgHasMoreMessages","getMessagesPage","seq","setInterval","clearInterval","shift","sendAt","max","noteRead","setMilliseconds","getMilliseconds","m","isNewMessage","msgStatus","from","clearTimeout","keyPressTimer","setTimeout","forceUpdate","content","sendMessage","attachJSON","ref","searchParams","resp","set","search","stopPropagation","pageY","pageX","messageSpecificMenuItems","onNewChat","noteKeyPress","maxInbandAttachmentSize","getServerLimit","uploader","getLargeFileHelper","cannot_initiate_upload","uploadCompletionPromise","upload","attachFile","filename","urlPromise","bits","maxExternAttachmentSize","limit","caption","tinyBlob","blobMime","tinyBits64","insertImage","_tempPreview","appendLineBreak","append","init","bits64","preview","found","find","_cancelled","cancel","component","hideSelf","component2","onClose","onSendMessage","messageNodes","previousFrom","chatBoxClass","nextFrom","sequence","thisFrom","isReply","deliveryStatus","userName","userFrom","userDesc","hi","mimeType","timestamp","ts","response","received","_uploader","viewportWidth","onImagePreview","onFormResponse","onCancelUpload","lastSeen","cont","getContact","online_now","seen","last_seen","when","onHideMessagesView","show","onKeyPress","onAttachFile","onAttachImage","search_for_contacts","search_no_results","NewTopicView","tabSelected","searchQuery","handleTabClick","handleSearchContacts","handleContactSelected","handleNewGroupSubmit","handleGroupByID","currentTarget","dataset","query","onSearchContacts","sel","onCreateTopic","dataUrl","priv","no_contacts_placeholder","data-id","searchResults","PasswordResetView","token","scheme","onReset","onRequest","reset","SettingsView","transport","handleTransportSelected","handleServerAddressChange","onUpdate","names","def","ws","lp","transportOptions","onServerAddressChange","SidepanelView","handleLoginRequested","handleNewTopic","onLoginRequest","view","onSignUp","onSettings","onNewTopic","errorAction","actionText","errorActionText","loadSpinnerVisible","loginDisabled","onGlobalSettings","onUpdateAccountTags","credCode","credMethod","onValidateCredentials","onPasswordResetRequest","onResetPassword","POP_SOUND","Audio","reconnect_countdown","reconnect_now","push_init_failed","invalid_security_token","no_connection","code_doesnot_match","TinodeWeb","getBlankState","handleResize","handleHashRoute","handleOnline","checkForAppUpdate","handleVisibilityEvent","handleError","handleLoginRequest","handleConnected","handleAutoreconnectIteration","doLogin","handleCredentialsRequest","handleLoginSuccessful","handleDisconnect","tnMeMetaDesc","tnMeContactUpdate","tnMeSubsUpdated","resetContactList","tnData","tnInitFind","tnFndSubsUpdated","handleTopicSelected","handleHideMessagesView","handleSendMessage","handleNewChatInvitation","handleNewAccount","handleNewAccountRequest","handleUpdateAccountRequest","handleUpdateAccountTagsRequest","handleToggleIncognitoMode","handleSettings","handleGlobalSettings","handleShowArchive","handleShowBlocked","handleToggleMessageSounds","handleCredAdd","handleCredDelete","handleCredConfirm","initDesktopAlerts","togglePushToken","requestPushToken","handleSidepanelCancel","handleStartTopicRequest","handleNewTopicCreated","handleTopicUpdateRequest","handleChangePermissions","handleLogout","handleDeleteMessagesRequest","handleLeaveUnsubRequest","handleBlockTopicRequest","handleReportTopic","handleShowContextMenu","defaultTopicContextMenu","handleHideContextMenu","handleShowAlert","handleShowInfoView","handleHideInfoView","handleValidateCredentialsRequest","handlePasswordResetRequest","handleResetPassword","handleContextMenuAction","settings","autoLogin","messageSoundsOff","firebase","FIREBASE_INIT","firebaseToken","hidden","sidePanelSelected","sidePanelTitle","sidePanelAvatar","liveConnection","onLine","topicSelectedOnline","topicSelectedAcs","innerWidth","showInfoPanel","mobilePanel","contextMenuVisible","contextMenuBounds","contextMenuClickAt","contextMenuParams","contextMenuItems","alertVisible","alertParams","documentElement","clientWidth","clientHeight","tnSetup","onConnect","onDisconnect","onAutoreconnectIteration","fbPush","messaging","usePublicVapidKey","messagingVapidKey","serviceWorker","register","reg","useServiceWorker","active","postMessage","setDeviceToken","parsedNav","expires","setAuthToken","connect","tab","readTimer","readTimerCallback","setHumanLanguage","enableLogging","mobile","onupdatefound","installingWorker","installing","onstatechange","controller","newTopicTabSelected","isConnected","getServerInfo","ver","prom","reconnectCountdown","timeLeft","reconnect","isAuthenticated","promise","getAuthToken","loginBasic","loginToken","onContactUpdate","getCurrentUserID","withDesc","withCred","disconnect","isPresencer","archived","isArchived","play","unused","foundContacts","merged","updated","prepareSearchableContacts","receivedTimer","noteRecv","fnd","getFndTopic","withSub","s","setMeta","isTopicOnline","getTopicAccessMode","createMessage","publishDraft","isP2P","delTopic","am","updateWant","login_","password_","public_","cred_","tags_","createAccountBasic","updateAccountBasic","getCurrentLogin","on","onTokenRefresh","onMessage","payload","enabled","requestPermission","deleteToken","getToken","refreshedToken","delCredential","basicNavigator","isTopicCached","newGroupTopicName","oldName","newName","permissions","updateGiven","delCurrentUser","delMessagesAll","updateMode","publish","getBoundingClientRect","self_blocked","subscribed","onConfirm","confirmText","onReject","rejectText","confirm","reject","invite","delSubscription","requestResetAuthSecret","newPassword","bounds","clickAt","hide","onTopicRemoved","visible","onAddMember","handleManageGroupMembers","phone","ValidationView","handleChange","handleKeyPress","handleCancel","numbers_only","Alert","Attachment","downloader","progress","downloadFile","mimetype","download","loaded","uploading","helperFunc","downloadUrl","downloadWidget","AvatarUpload","handleFileUpload","files","base64bits","du","randId","random","accept","ButtonBack","onBack","ChatMessage","onProgress","handleProgress","handleImagePreview","handleFormButtonClick","act","MESSAGE_STATUS_FAILED","ratio","sideClass","bubbleClass","fullDisplay","attachments","att","draftyFormatter","notFound","style","el","attr","UploadingImage","authorizeURL","inner","child","CheckBox","ChipInput","input","focused","handleTextInput","removeChipAt","handleChipCancel","handleFocusGained","handleFocusLost","handleKeyDown","chips","prompt","sortedChips","sortChips","staticMembers","chipIndex","indexChips","index","keep","normal","concat","filterFunc","onChipRemoved","onFocusLost","onEnter","noAvatar","avatarDisabled","invalid","onFocus","Chip","ContactAction","handleClick","icon_mapping","ContactBadges","badges","icon","color","badge_you","badge_owner","ContactList","showCheckmark","contactNodes","contactsCount","filter","selected","onSelected","dangerouslySetInnerHTML","__html","Contact","icon_badges","clear_for_all","delete_for_all","send_retry","mute","unmute","topic_delete","topic_delete_warning","unblock","block","topic_block_warning","member_delete","ContextMenu","handlePageClick","handleEscapeKey","MenuItems","errorHandler","menu_item_clear_messages","deleteMessages","menu_item_clear_messages_for_all","delete","retryMessage","topicPermissionSetter","menu_item_block","menu_item_delete_topic","contains","all","hard","cancelSend","delMessagesList","flushMessage","menu","hSize","vSize","position","left","right","top","bottom","DocPreview","handleSendDoc","mimeToIcon","default","image","video","iconFromMime","noInput","ErrorPanel","warn","whiteSpace","FileProgress","contacts_not_found_short","GroupManager","indexMembers","contactFilter","noContactsMessage","selectedContacts","handleMemberRemoved","handleContactFilter","delta","present","keepInitial","stat","userId","status","splice","keys","k","doContactFiltering","GroupSubs","usersOnline","totalCount","countToShow","some","overflow","HostSelector","changed","handleHostNameChange","handleEditingFinished","hostOptions","list","ImagePreview","handleSendImage","assignWidth","maxlength","messagePrompt","acceptBlank","InPlaceEdit","initialValue","handeTextChange","handleStartEditing","handlePasswordFinished","newValue","focus","checkValidity","fieldType","spanText","spanClass","Invitation","handleButtonAction","evt","LetterTile","isGroup","iconColor","abs","letter","charAt","LoadSpinner","MenuCancel","MenuContacts","MenuStart","MoreButton","handleToggle","invalid_id","NewTopicById","groupId","NewTopicGroup","handlePrivateChange","handleTagsChanged","handleChannelToggle","onTagsChanged","PermissionsEditor","joiner","writer","preser","approver","ReceivedMarker","sending","failed","marker","SearchContacts","edited","handleSearchChange","handleSearch","handleClear","search_placeholder","SendMessage","keypressTimestamp","getTime","handlePasteEvent","handleSend","handleMessageTyping","messageEditArea","shiftKey","messaging_disabled","type_new_message","attachImage","click","display","SideNavbar","TagManager","tagInput","handleTagInput","handleAddTag","handleRemoveTag","last","tag","maxTagCount","minTagLength","maxTagLength","add_tags_prompt","defautMessage","UnreadBadge","VisiblePassword","handleVisibility","activeElement","tabIndex","module","exports","ReactIntl","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","getter","__esModule","d","definition","o","defineProperty","enumerable","get","obj","prop","prototype","call","r","Symbol","toStringTag"],"mappings":"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","file":"index.dev.js","sourcesContent":["import { PACKAGE_VERSION } from './version.js';\n\n// Name of this application, used in the User-Agent.\nexport const APP_NAME = 'TinodeWeb/' + (PACKAGE_VERSION || '0.16');\n\n// API key. Use https://github.com/tinode/chat/tree/master/keygen to generate your own\nexport const API_KEY = 'AQEAAAABAAD_rAp4DJh05a1HAwFT3A6K';\n\n// The array of possible hosts to connect to.\nexport const KNOWN_HOSTS = {hosted: 'web.tinode.co', local: 'localhost:6060'};\n\n// Default host name and port to connect to.\nexport const DEFAULT_HOST = KNOWN_HOSTS.hosted;\n\n// Enable console logging.\nexport const LOGGING_ENABLED = true;\n\n// Minimum time between two keypress notifications, milliseconds.\nexport const KEYPRESS_DELAY = 3*1000;\n// Delay before sending a {note} for reciving a message, milliseconds.\nexport const RECEIVED_DELAY = 500;\n// Delay before sending a read notification, milliseconds.\nexport const READ_DELAY = 1000;\n\n// The shortest allowed tag length. Matches the value on the server.\nexport const MIN_TAG_LENGTH = 2;\n// The greatest allowed tag length. Matches the value on the server.\nexport const MAX_TAG_LENGTH = 96;\n// The maximum number of tags allowed. Matches the value on the server.\nexport const MAX_TAG_COUNT = 16;\n\n// Access mode for P2P subscriptions initiated by the current user.\nexport const DEFAULT_P2P_ACCESS_MODE = 'JRWPS';\n// Access mode for new group topics created by the current user.\nexport const NEW_GRP_ACCESS_MODE = 'JRWPSAO';\n// Access mode for a channel.\nexport const CHANNEL_ACCESS_MODE = 'JR';\n\n// Access mode for no access.\nexport const NO_ACCESS_MODE = 'N';\n\n// Mediaquery breakpoint between desktop and mobile, in px. Should match the value\n// in @media (max-size: 640px) in base.css\nexport const MEDIA_BREAKPOINT = 640;\n// Size of css 'rem' unit in pixels. Default 1rem = 10pt = 13px.\nexport const REM_SIZE = 13;\n\n// Size of the avatar image: When an avatar image is uploaded, it's resized to\n// a square of this size.\nexport const AVATAR_SIZE = 128;\n\n// Size of the broken_image shown in MessagesView\nexport const BROKEN_IMAGE_SIZE = 32;\n\n// Number of chat messages to fetch in one call.\nexport const MESSAGES_PAGE = 24;\n\n// Default maximum in-band (included directly into the message) attachment size which fits into\n// a message of 256K in size. The actual binary size of the attachment should be smaller due to\n// base64 encoding expansion and some overhead, for instance 1024 bytes.\n// Increase this limit to a greater value in production, if desired. Also increase\n// max_message_size in the server config.\nexport const MAX_INBAND_ATTACHMENT_SIZE = 262144;\n\n// Absolute maximum attachment size to be used with the server = 8MB. Increase to\n// something like 100MB in production.\nexport const MAX_EXTERN_ATTACHMENT_SIZE = 1 << 23;\n\n// Maximum allowed linear dimension of an inline image in pixels. Larer images will be shrunk\n// to make the larger dimension fit under this size. You may want to adjust it to 1600 or\n// 2400 for production.\nexport const MAX_IMAGE_DIM = 1024;\n\n// Linear dimensions of image preview: shrink image under this size for previews.\nexport const IMAGE_PREVIEW_DIM = 64;\n\n// Maximum number of online users to be shown in a topic title bar. Others will be\n// hidden under \"+X more\"\nexport const MAX_ONLINE_IN_TOPIC = 4;\n\n// Maximum length of user name, topic title, and private comment.\nexport const MAX_TITLE_LENGTH = 60;\n\n// Link for \"Contact Us\".\nexport const LINK_CONTACT_US = 'email:info@tinode.co';\n\n// Link to Privacy Policy.\nexport const LINK_PRIVACY_POLICY = 'https://tinode.co/privacy.html';\n\n// Link to Terms of Service.\nexport const LINK_TERMS_OF_SERVICE = 'https://tinode.co/terms.html';\n","// Put all packages together.\n// Used to generate umd/index.prod.js\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { IntlProvider } from 'react-intl';\n\nimport allMessages from './messages.json';\nimport TinodeWeb from './views/tinode-web.jsx';\nimport HashNavigation from './lib/navigation.js';\n\n// Detect human language to use in the UI:\n//  Check parameters from URL hash #?hl=ru, then browser, then use 'en' as a fallback.\nconst { params } = HashNavigation.parseUrlHash(window.location.hash);\nconst language = (params && params.hl) ||\n  (navigator.languages && navigator.languages[0]) ||\n  navigator.language ||\n  navigator.userLanguage ||\n  'en';\n\n// Get the base language 'en' from a more specific 'en_GB' or 'en-US' as a partial fallback.\nconst baseLanguage = language.toLowerCase().split(/[-_]/)[0];\n\n// Try the full locale first, then the locale without the region code, fallback to 'en'.\nconst messages =\n  allMessages[language] ||\n  allMessages[baseLanguage] ||\n  allMessages.en;\n\nReactDOM.render(\n  <IntlProvider locale={language} messages={messages} textComponent={React.Fragment}>\n    <TinodeWeb />\n  </IntlProvider>,\n  document.getElementById('mountPoint')\n);\n","// File and image helper functions.\nimport { MAX_INBAND_ATTACHMENT_SIZE, MAX_IMAGE_DIM } from '../config.js';\nimport { bytesToHumanSize } from './strformat.js'\n\n// Supported image MIME types and corresponding file extensions.\nexport const SUPPORTED_IMAGE_FORMATS = ['image/jpeg', 'image/gif', 'image/png', 'image/svg', 'image/svg+xml'];\nexport const MIME_EXTENSIONS         = ['jpg',        'gif',       'png',       'svg',       'svg'];\n\n// Make a data URL from public.photo\nexport function makeImageUrl(photo) {\n  return (photo && photo.type && photo.data) ?\n    'data:image/' + photo.type + ';base64,' + photo.data : null;\n}\n\n// Calculate linear dimensions for scaling image down to fit under a certain size.\n// Returns an object which contains destination sizes, source sizes, and offsets\n// into source (when making square images).\nexport function fitImageSize(width, height, maxWidth, maxHeight, forceSquare) {\n  // Sanitize input\n  width = width | 0;\n  height = height | 0;\n  maxWidth = maxWidth | 0;\n  maxHeight = maxHeight | 0;\n\n  if (width <= 0 || height <= 0 || maxWidth <= 0 || maxHeight <= 0) {\n    return null;\n  }\n\n  if (forceSquare) {\n    maxWidth = maxHeight = Math.min(maxWidth, maxHeight);\n  }\n\n  let scale = Math.min(\n    Math.min(width, maxWidth) / width,\n    Math.min(height, maxHeight) / height\n  );\n\n  let size = {\n    dstWidth: (width * scale) | 0,\n    dstHeight: (height * scale) | 0,\n  };\n\n  if (forceSquare) {\n    // Also calculate parameters for making the image square.\n    size.dstWidth = size.dstHeight = Math.min(size.dstWidth, size.dstHeight);\n    size.srcWidth = size.srcHeight = Math.min(width, height);\n    size.xoffset = ((width - size.srcWidth) / 2) | 0;\n    size.yoffset = ((height - size.srcWidth) / 2) | 0;\n  } else {\n    size.xoffset = size.yoffset = 0;\n    size.srcWidth = width;\n    size.srcHeight = height;\n  }\n  return size;\n}\n\n// Ensure file's extension matches mime content type\nexport function fileNameForMime(fname, mime) {\n  const idx = SUPPORTED_IMAGE_FORMATS.indexOf(mime);\n  if (idx < 0 || !fname) {\n    // Unknown mime or empty name.\n    return fname;\n  }\n  const ext = MIME_EXTENSIONS[idx];\n\n  const at = fname.lastIndexOf('.');\n  if (at >= 0) {\n    fname = fname.substring(0, at);\n  }\n  return fname + '.' + ext;\n}\n\n// Scale uploaded image to fit under certain dimensions and byte size, optionally constraining to a square.\n// On success calls onSuccess callback with the scaled image as Blob.\nexport function imageScaled(fileOrBlob, maxWidth, maxHeight, maxSize, forceSquare, onSuccess, onError) {\n  const img = new Image();\n  img.crossOrigin = 'Anonymous';\n  img.onerror = function(err) {\n    onError(\"Image format unrecognized\");\n  }\n  img.onload = async function() {\n    // Once the image is loaded, the URL is no longer needed.\n    URL.revokeObjectURL(img.src);\n\n    // Calculate the desired image dimensions.\n    const dim = fitImageSize(this.width, this.height, maxWidth, maxHeight, forceSquare);\n    if (!dim) {\n      onError(\"Invalid image\");\n      return;\n    }\n    let canvas = document.createElement('canvas');\n    canvas.width = dim.dstWidth;\n    canvas.height = dim.dstHeight;\n    let ctx = canvas.getContext('2d');\n    ctx.imageSmoothingEnabled = true;\n    ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n      0, 0, dim.dstWidth, dim.dstHeight);\n\n    const mime = SUPPORTED_IMAGE_FORMATS.indexOf(fileOrBlob.type) < 0 ? 'image/jpeg' : fileOrBlob.type;\n    // Generate blob to check size of the image.\n    let blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    if (!blob) {\n      onError(\"Unsupported image format\");\n      return;\n    }\n\n    // Ensure the image is not too large. Shrink the image keeping the aspect ratio.\n    // Do nothing if maxsize is <= 0.\n    while (maxSize > 0 && blob.length > maxSize) {\n      dim.dstWidth = (dim.dstWidth * 0.70710678118) | 0;\n      dim.dstHeight = (dim.dstHeight * 0.70710678118) | 0;\n      canvas.width = dim.dstWidth;\n      canvas.height = dim.dstHeight;\n      ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n        0, 0, dim.dstWidth, dim.dstHeight);\n      blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    }\n\n    canvas = null;\n    onSuccess(blob, mime, dim.dstWidth, dim.dstHeight, fileNameForMime(fileOrBlob.name, mime));\n  };\n  img.src = URL.createObjectURL(fileOrBlob);\n}\n\n// Convert File to base64 string.\nexport function fileToBase64(file, onSuccess) {\n  const reader = new FileReader();\n  reader.addEventListener('load', function() {\n    onSuccess(file.type, reader.result.split(',')[1], file.name);\n  });\n  reader.readAsDataURL(file);\n}\n\n// Convert Blob to base64 string.\nexport function blobToBase64(blob, onSuccess) {\n  const reader = new FileReader();\n  reader.addEventListener('load', function() {\n    onSuccess(blob.type, reader.result.split(',')[1]);\n  });\n  reader.readAsDataURL(blob);\n}\n\n// File pasted from the clipboard. It's either an inline image or a file attachment.\n// FIXME: handle large files out of band.\nexport function filePasted(event, onImageSuccess, onAttachmentSuccess, onError) {\n  var items = (event.clipboardData || event.originalEvent.clipboardData || {}).items;\n  for (var i in items) {\n    var item = items[i];\n    if (item.kind === 'file') {\n      var file = item.getAsFile();\n      if (!file) {\n        console.log(\"Failed to get file object from pasted file item\", item.kind, item.type);\n        continue;\n      }\n      if (file.type && file.type.split('/')[0] == 'image') {\n        // Handle inline image\n        if (file.size > MAX_INBAND_ATTACHMENT_SIZE || SUPPORTED_IMAGE_FORMATS.indexOf(file.type) < 0) {\n          imageFileScaledToBase64(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, false, onImageSuccess, onError);\n        } else {\n          imageFileToBase64(file, onImageSuccess, onError);\n        }\n      } else {\n        // Handle file attachment\n        fileToBase64(file, onAttachmentSuccess, onError)\n      }\n      // Indicate that the pasted data contains a file.\n      return true;\n    }\n  }\n  // No file found.\n  return false;\n}\n\n// Get mime type from data URL header.\nexport function getMimeType(header) {\n  var mime = /^data:(image\\/[-+a-z0-9.]+);base64/.exec(header);\n  return (mime && mime.length > 1) ? mime[1] : null;\n}\n\n// Given length of a binary object in bytes, calculate the length after\n// base64 encoding.\nexport function base64EncodedLen(n) {\n  return Math.floor((n + 2) / 3) * 4;\n}\n\n// Given length of a base64-encoded object, calculate decoded size of the\n// pbject in bytes.\nexport function base64DecodedLen(n) {\n  return Math.floor(n / 4) * 3;\n}\n\n// Re-encode string to standard base64 encoding with padding.\n// The string may be base64-URL encoded without the padding.\nexport function base64ReEncode(str) {\n  if (str) {\n    str = str.replace(/-/g, '+').replace(/_/g, '/');\n    try {\n      str = btoa(atob(str));\n    } catch(err) {\n      console.log(\"Failed to base64 re-encode string.\", err);\n      str = null;\n    }\n  }\n  return str;\n}\n","import { KNOWN_HOSTS, DEFAULT_HOST } from '../config.js';\n\n// Detect server address from the URL\nexport function detectServerAddress() {\n  let host = DEFAULT_HOST;\n  if (typeof window.location == 'object') {\n    if (window.location.protocol == 'file:' || window.location.hostname == 'localhost') {\n      host = KNOWN_HOSTS.local;\n    } else if (window.location.hostname) {\n      host = window.location.hostname + (window.location.port ? ':' + window.location.port : '');\n    }\n  }\n  return host;\n}\n\n// Detect if the page is served over HTTPS.\nexport function isSecureConnection() {\n  if (typeof window.location == 'object') {\n    return window.location.protocol == 'https:';\n  }\n  return false;\n}\n\nexport function isLocalHost() {\n  if (typeof window.location == 'object') {\n    return window.location.hostname == 'localhost';\n  }\n  return false;\n}\n","// Helper functions for storing values in localStorage.\n// By default localStorage can store only strings, not objects or other types.\n\nexport default class LocalStorageUtil {\n  // Replace old object with the new one.\n  static setObject(key, value) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n\n  // Get stored object.\n  static getObject(key) {\n    const value = localStorage.getItem(key);\n    return value && JSON.parse(value);\n  }\n\n  // Partially or wholly update stored object.\n  static updateObject(key, value) {\n    const oldVal = this.getObject(key);\n    this.setObject(key, Object.assign(oldVal || {}, value));\n  }\n\n  // Just a wrapper.\n  static removeItem(key) {\n    localStorage.removeItem(key);\n  }\n}\n","// Utility class for hash navigation.\n\n// Parse hash as in http://www.example.com/path#hash as if it were\n// path and arguments.\nexport default class HashNavigation {\n  static parseUrlHash(hash) {\n    // Split path from args, path -> parts[0], args->path[1]\n    const parts = hash.split('?', 2);\n    const params = {};\n    let path = [];\n    if (parts[0]) {\n      path = parts[0].substr(1).split('/');\n    }\n    if (parts[1]) {\n      parts[1].split('&').forEach(function(part) {\n        let item = part.split('=');\n        if (item[0]) {\n          params[decodeURIComponent(item[0])] = decodeURIComponent(item[1]);\n        }\n      });\n    }\n    return {path: path, params: params};\n  }\n\n  static navigateTo(url) {\n    window.location.hash = url;\n  }\n\n  static composeUrlHash(path, params) {\n    let url = path.join('/');\n    const args = [];\n    for (const key in params) {\n      if (params.hasOwnProperty(key)) {\n        args.push(key + '=' + params[key]);\n      }\n    }\n    if (args.length > 0) {\n      url += '?' + args.join('&');\n    }\n    return url;\n  }\n\n  static addUrlParam(hash, key, value) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.params[key] = value;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static removeUrlParam(hash, key) {\n    const parsed = this.parseUrlHash(hash);\n    delete parsed.params[key];\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlSidePanel(hash, sidepanel) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[0] = sidepanel;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlTopic(hash, topic) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[1] = topic;\n    // Close InfoView on topic change.\n    delete parsed.params.info;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n}\n","// Short representation of time in the past.\nexport function shortDateFormat(then, locale) {\n  locale = locale || window.navigator.userLanguage || window.navigator.language;\n  const now = new Date();\n  if (then.getFullYear() == now.getFullYear()) {\n    if (then.getMonth() == now.getMonth() && then.getDate() == now.getDate()) {\n\t    return then.toLocaleTimeString(locale, {hour12: false, hour: '2-digit', minute: '2-digit'});\n    } else {\n\t    return then.toLocaleDateString(locale,\n        {hour12: false, month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit'});\n    }\n  }\n  return then.toLocaleDateString(locale,\n    {hour12: false, year: 'numeric', month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit'});\n}\n\n// Convert seconds to minutes:seconds, i.e. 156 sec -> 2:36.\nexport function secondsToTime(seconds) {\n  const min = Math.floor(seconds / 60);\n  let sec = seconds % 60;\n  sec = sec < 10 ? `0${sec}` : sec;\n  return `${min}:${sec}`;\n}\n\n// Convert a number of bytes to human-readable format.\nexport function bytesToHumanSize(bytes) {\n  if (!bytes || bytes == 0) {\n    return '0 Bytes';\n  }\n\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n  const bucket = Math.min(Math.floor(Math.log2(bytes) / 10) | 0, sizes.length-1);\n  const count = bytes / Math.pow(1024, bucket);\n  const round = bucket > 0 ? (count < 3 ? 2 : (count < 30 ? 1 : 0)) : 0;\n  return count.toFixed(round) + ' ' + sizes[bucket];\n}\n\n// Get 32 bit integer hash value for a string. Ideally it should produce the same value\n// as Java's String#hash().\nexport function stringHash(value) {\n  let hash = 0;\n  value = '' + value;\n  for (let i = 0; i < value.length; i++) {\n    hash = ((hash << 5) - hash) + value.charCodeAt(i);\n    hash = hash & hash; // Convert to 32bit integer\n  }\n  return hash;\n}\n","// Odds and ends\n\n// Make shortcut icon appear with a green dot + show unread count in title.\nexport function updateFavicon(count) {\n  const oldIcon = document.getElementById('shortcut-icon');\n  const head = document.head || document.getElementsByTagName('head')[0];\n  const newIcon = document.createElement('link');\n  newIcon.type = 'image/png';\n  newIcon.id = 'shortcut-icon';\n  newIcon.rel = 'shortcut icon';\n  newIcon.href = 'img/logo32x32' + (count > 0 ? 'a' : '') + '.png';\n  if (oldIcon) {\n    head.removeChild(oldIcon);\n  }\n  head.appendChild(newIcon);\n\n  document.title = (count > 0 ? '('+count+') ' : '') + 'Tinode';\n}\n\n// Create VCard which represents topic 'public' info\nexport function vcard(fn, imageDataUrl) {\n  let card = null;\n\n  if ((fn && fn.trim()) || imageDataUrl) {\n    card = {};\n    if (fn) {\n      card.fn = fn.trim();\n    }\n    if (imageDataUrl) {\n      const dataStart = imageDataUrl.indexOf(',');\n      card.photo = dataStart >= 0 ? {\n        data: imageDataUrl.substring(dataStart+1),\n        type: 'jpg'\n      } : imageDataUrl;\n    }\n  }\n  return card;\n}\n\n// Deep-shallow compare two arrays: shallow compare each element.\nexport function arrayEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (!Array.isArray(a) || !Array.isArray(b)) {\n    return false;\n  }\n\n  // Compare lengths first.\n  if (a.length != b.length) {\n    return false;\n  }\n  // Order of elements is ignored.\n  a.sort();\n  b.sort();\n  for (let i = 0, l = a.length; i < l; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Checks (loosely) if the given string is a phone. If so, returns the phone number in a format\n// as close to E.164 as possible.\nexport function asPhone(val) {\n  val = val.trim();\n  if (/^(?:\\+?(\\d{1,3}))?[- (.]*(\\d{3})[- ).]*(\\d{3})[- .]*(\\d{2})[- .]*(\\d{2})?$/.test(val)) {\n    return val.replace(/[- ().]*/, '');\n  }\n  return null;\n}\n\n// Checks (loosely) if the given string is an email. If so returns the email.\nexport function asEmail(val) {\n  val = val.trim();\n  if (/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(val)) {\n    return val;\n  }\n  return null;\n}\n\n// Checks if URL is a relative url, i.e. has no 'scheme://', including the case of missing scheme '//'.\n// The scheme is expected to be RFC-compliant, e.g. [a-z][a-z0-9+.-]*\n// example.html - ok\n// https:example.com - not ok.\n// http:/example.com - not ok.\n// ' ↲ https://example.com' - not ok. (↲ means carriage return)\nexport function isUrlRelative(url) {\n  return url && !/^\\s*([a-z][a-z0-9+.-]*:|\\/\\/)/im.test(url);\n}\n\n// Ensure URL does not present an XSS risk. Optional allowedSchemes may contain an array of\n// strings with permitted URL schemes, such as ['ftp', 'ftps']; otherwise accept http and https only.\n// If apikey and/or token is defined, it's appended to relative URL.\nexport function sanitizeUrl(url, allowedSchemes) {\n  if (!url) {\n    return null;\n  }\n\n  // Strip control characters and whitespace. They are not valid URL characters anyway.\n  url = url.replace(/[^\\x20-\\x7E]/gmi, '').trim();\n\n  // Relative URLs are safe.\n  // Relative URL does not start with ':', abcd123: or '//'.\n  if (!/^([a-z][a-z0-9+.-]*:|\\/\\/)/i.test(url)) {\n    return url;\n  }\n\n  // Blob URLs are safe.\n  if (/^blob:http/.test(url)) {\n    return url;\n  }\n\n  // Absolute URL. Accept only safe schemes, or no scheme.\n  const schemes = Array.isArray(allowedSchemes) ? allowedSchemes.join('|') : 'http|https';\n  const re = new RegExp('^((' + schemes + '):|//)', 'i');\n  if (!re.test(url)) {\n    return null;\n  }\n\n  return url;\n}\n\n// Ensure URL is suitable for <img src=\"url\"> field: the URL must be a relative URL or\n// have http:, https:, blob: or data: scheme.\n// The relative URL is appended with the API key and/or auth token.\n// In case of data: scheme, the URL must start with a 'data:image/XXXX;base64,'.\nexport function sanitizeImageUrl(url) {\n  if (!url) {\n    return null;\n  }\n\n  const sanitizedUrl = sanitizeUrl(url);\n  if (sanitizedUrl) {\n    return sanitizedUrl;\n  }\n\n  // Is this a data: URL of an image?\n  if (/data:image\\/[a-z0-9.-]+;base64,/i.test(url.trim())) {\n    return url;\n  }\n\n  return null;\n}\n","// This is a generated file. Don't edit.\n\nexport const PACKAGE_VERSION = \"0.16.10\";\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport TagManager from '../widgets/tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, asEmail, asPhone, vcard } from '../lib/utils.js';\n\nexport default class AccGeneralView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    this.state = {\n      fullName: me.public ? me.public.fn : undefined,\n      avatar: makeImageUrl(me.public ? me.public.photo : null),\n      tags: me.tags(),\n      credentials: me.getCredentials() || [],\n      addCredActive: false,\n      addCredInvalid: false,\n      newCred: '',\n      previousOnTags: me.onTagsUpdated\n    };\n\n    this.tnNewTags = this.tnNewTags.bind(this);\n    this.tnCredsUpdated = this.tnCredsUpdated.bind(this);\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleCredChange = this.handleCredChange.bind(this);\n    this.handleCredKeyDown = this.handleCredKeyDown.bind(this);\n    this.handleCredEntered = this.handleCredEntered.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n  }\n\n  componentDidMount() {\n    const me = this.props.tinode.getMeTopic();\n    me.onCredsUpdated = this.tnCredsUpdated;\n    me.onTagsUpdated = this.tnNewTags;\n  }\n\n  componentWillUnmount() {\n    const me = this.props.tinode.getMeTopic();\n    me.onTagsUpdated = this.state.previousOnTags;\n    me.onCredsUpdated = undefined;\n  }\n\n  tnNewTags(tags) {\n    this.setState({tags: tags});\n  }\n\n  tnCredsUpdated(creds) {\n    this.setState({credentials: creds || []});\n  }\n\n  handleFullNameUpdate(fn) {\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\n    if (fn) {\n      this.setState({fullName: fn});\n      this.props.onUpdateAccount(undefined, vcard(fn, null));\n    }\n  }\n\n  handleImageChanged(img) {\n    this.setState({avatar: img});\n    this.props.onUpdateAccount(undefined, vcard(null, img || Tinode.DEL_CHAR));\n  }\n\n  handleCredChange(e) {\n    this.setState({newCred: e.target.value, addCredInvalid: false});\n  }\n\n  handleCredKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({newCred: '', addCredActive: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleCredEntered(e);\n    }\n  }\n\n  handleCredEntered(e) {\n    let value = this.state.newCred.trim();\n    if (!value) {\n      this.setState({addCredActive: false, addCredInvalid: false});\n      return;\n    }\n\n    let val = asPhone(value);\n    let method;\n    if (val) {\n      method = 'tel';\n    } else {\n      val = asEmail(value);\n      if (val) {\n        method = 'email';\n      }\n    }\n    if (method) {\n      this.props.onCredAdd(method, val);\n      this.setState({addCredActive: false, newCred: ''});\n    } else {\n      this.setState({addCredInvalid: true});\n    }\n  }\n\n  handleTagsUpdated(tags) {\n    // Check if tags have actually changed.\n    if (arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      return;\n    }\n    this.props.onUpdateTags(tags);\n  }\n\n  render() {\n    const credentials = [];\n    this.state.credentials.map((cred) => {\n      credentials.push(<div key={cred.meth + \":\" + cred.val + \":\" + cred.done}>{cred.meth}: <tt>{cred.val}</tt>\n        <span > {!cred.done ?\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredConfirm(cred.meth, cred.val);}}>\n              <FormattedMessage id=\"validate_credential_action\" defaultMessage=\"confirm\"\n                description=\"Validate credentail call to action\" />\n            </a>\n          : null} <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredDelete(cred.meth, cred.val);}}><i\n            className=\"material-icons gray\">delete_outline</i></a></span></div>);\n    });\n\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\"><FormattedMessage id=\"label_your_name\" /></label>\n            <div><FormattedMessage id=\"full_name_prompt\">{\n              (full_name_placeholder) => <InPlaceEdit\n                placeholder={full_name_placeholder}\n                value={this.state.fullName}\n                onFinished={this.handleFullNameUpdate} />\n            }</FormattedMessage></div>\n          </div>\n          <AvatarUpload\n            avatar={this.state.avatar}\n            uid={this.props.myUserId}\n            title={this.state.fullName}\n            onImageChanged={this.handleImageChanged}\n            onError={this.props.onError} />\n        </div>\n        <div className=\"hr\" />\n        <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (user discovery)\"\n          description=\"Section title for TagManager\">{\n          (title_tag_manager) => <TagManager\n            title={title_tag_manager}\n            activated={false}\n            tags={this.state.tags}\n            tinode={this.props.tinode}\n            onSubmit={this.handleTagsUpdated} />\n        }</FormattedMessage>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_user_contacts\" defaultMessage=\"Contacts:\"\n            description=\"Label for user contacts\" />\n          </label>\n          <div className=\"quoted\">\n            {credentials}\n            {this.state.addCredActive ?\n              <input type=\"text\" value={this.state.value}\n                className={this.state.addCredInvalid ? 'invalid' : null}\n                placeholder=\"Phone number or email\" required=\"required\" autoFocus\n                onChange={this.handleCredChange} onKeyDown={this.handleCredKeyDown} onBlur={this.handleCredEntered} />\n              : null}\n            <div>\n              <a href=\"#\" onClick={(e) => {e.preventDefault(); this.setState({addCredActive: true});}}>\n                <i className=\"material-icons\">add</i>\n                <FormattedMessage id=\"button_add_another\" defaultMessage=\"Add another\" description=\"Call to action [+ add another]\" />\n              </a></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\n\nexport default class EditAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckboxClick = this.handleCheckboxClick.bind(this);\n  }\n\n  handleCheckboxClick(what, checked) {\n    if (what == 'sound') {\n      this.props.onToggleMessageSounds(checked);\n    } else if (what == 'alert') {\n      this.props.onTogglePushNotifications(checked);\n    } else if (what == 'incognito') {\n      this.props.onToggleIncognitoMode(checked);\n    }\n  }\n\n  render() {\n    return (\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"message-sound\">\n              <FormattedMessage id=\"label_message_sound\" defaultMessage=\"Message sound:\"\n                description=\"Label for message sounds toggle\" />\n            </label>\n            <CheckBox name=\"sound\" id=\"message-sound\"\n              checked={this.props.messageSounds} onChange={this.handleCheckboxClick} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"desktop-alerts\">\n            {this.props.desktopAlertsEnabled ?\n              <FormattedMessage id=\"label_push_notifications\" defaultMessage=\"Notification alerts:\"\n                description=\"Label for push notifications switch\" />\n              :\n              <FormattedMessage id=\"label_push_notifications_disabled\"\n                defaultMessage=\"Notification alerts (requires HTTPS):\"\n                description=\"Label for push notifications switch\" />\n            }\n            </label>\n            <CheckBox name=\"alert\" id=\"desktop-alerts\"\n              checked={this.props.desktopAlerts}\n              onChange={this.props.desktopAlertsEnabled ? this.handleCheckboxClick : null} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"incognito-mode\">\n              <FormattedMessage id=\"label_incognito_mode\" defaultMessage=\"Incognito mode:\"\n                description=\"Label for incognito mode toggle\" />\n            </label>\n            <CheckBox name=\"incognito\" id=\"incognito-mode\"\n              checked={this.props.incognitoMode} onChange={this.handleCheckboxClick} />\n          </div>\n        </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\n\nconst messages = defineMessages({\n  delete_account: {\n    id: 'delete_account',\n    defaultMessage: 'Delete account',\n    description: 'Title for delete account warning'\n  },\n  delete_account_warning: {\n    id: 'delete_account_arning',\n    defaultMessage: 'Are you sure you want to delete your account? It cannot be undone.',\n    description: 'Warning message when deleting an account'\n  }\n});\n\nclass AccSecurityView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    let blockedCount = 0;\n    me.contacts((c) => {\n      if (c.acs && !c.acs.isJoiner()) {\n        blockedCount ++;\n      }\n    });\n    const defacs = me.getDefaultAccess();\n    this.state = {\n      auth: defacs ? defacs.auth : null,\n      anon: defacs ? defacs.anon : null,\n      showPermissionEditorFor: undefined,\n      blockedCount: blockedCount,\n    };\n\n    this.handlePasswordUpdate = this.handlePasswordUpdate.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n  }\n\n  handlePasswordUpdate(pwd) {\n    this.setState({password: pwd});\n    this.props.onUpdateAccount(pwd);\n  }\n\n  handleLaunchPermissionsEditor(which) {\n    this.setState({\n      showPermissionEditorFor: which,\n      editedPermissions: this.state[which]\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handlePermissionsChanged(perm) {\n    let defacs = {};\n    defacs[this.state.showPermissionEditorFor] = perm;\n    this.props.onUpdateAccount(undefined, undefined, defacs);\n\n    let newState = {showPermissionEditorFor: undefined};\n    newState[this.state.showPermissionEditorFor] = perm;\n    this.setState(newState);\n  }\n\n  handleDeleteAccount(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.delete_account), // title\n      formatMessage(messages.delete_account_warning), // content\n      (() => { this.props.onDeleteAccount(); }), // onConfirm\n      null, // use default text \"OK\"\n      true, // Show Reject button\n      null  // use default text \"Cancel\"\n    );\n  }\n\n  render() {\n    return (\n      <React.Fragment>{this.state.showPermissionEditorFor ?\n        <PermissionsEditor\n          mode={this.state.editedPermissions}\n          skip=\"O\"\n          onSubmit={this.handlePermissionsChanged}\n          onCancel={this.handleHidePermissionsEditor} />\n        :\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_password\" defaultMessage=\"Password\"\n                  description=\"Label for password editing\" />\n            </label>\n            <div>\n              <FormattedMessage id=\"password_unchanged_prompt\" defaultMessage=\"Unchanged\"\n                description=\"Message in editor while password is unchanged\">{\n                (password_unchanged) => <InPlaceEdit\n                  placeholder={password_unchanged}\n                  type=\"password\"\n                  onFinished={this.handlePasswordUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <a href=\"#\" className=\"red flat-button\" onClick={(e) => {e.preventDefault(); this.props.onLogout();}}>\n              <i className=\"material-icons\">exit_to_app</i> &nbsp;<FormattedMessage id=\"button_logout\"\n                defaultMessage=\"Logout\" description=\"Button [Logout]\" />\n            </a>\n            <a href=\"#\" className=\"red flat-button\" onClick={(e) => {this.handleDeleteAccount(e);}}>\n              <i className=\"material-icons\">delete</i> &nbsp;<FormattedMessage id=\"button_delete_account\"\n                defaultMessage=\"Delete account\" description=\"Button [Delete account]\" />\n            </a>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <div>\n              <label className=\"small\">\n                <FormattedMessage id=\"label_default_access_mode\" defaultMessage=\"Default access mode:\"\n                description=\"Label for default access mode\" />\n              </label>\n            </div>\n            <div className=\"quoted\">\n              <div>Auth: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>{this.state.auth}</tt></div>\n              <div>Anon: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>{this.state.anon}</tt></div>\n            </div>\n          </div>\n          {this.state.blockedCount > 0 ?\n            <>\n              <div className=\"hr\" />\n              <div className=\"panel-form-row\">\n                <i className=\"material-icons\">block</i>&nbsp;\n                <a href=\"#\" className=\"gray\" onClick={(e) => {e.preventDefault(); this.props.onShowBlocked();}}>\n                  <FormattedMessage id=\"blocked_contacts_link\" defaultMessage=\"Blocked contacts ({count})\"\n                    values={{ count: this.state.blockedCount }} description=\"Blocked contacts link\" />\n                </a>\n              </div>\n            </>\n            : null }\n        </div>\n      }</React.Fragment>\n    );\n  }\n};\n\nexport default injectIntl(AccSecurityView);\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME, LINK_CONTACT_US, LINK_PRIVACY_POLICY, LINK_TERMS_OF_SERVICE } from '../config.js';\n\nexport default class AccSupportView extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          <a href={LINK_CONTACT_US} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">email</i> &nbsp;<FormattedMessage id=\"link_contact_us\"\n              defaultMessage=\"Contact Us\" description=\"Ancor text for contacting us by email\" />\n          </a>\n          <a href={LINK_TERMS_OF_SERVICE} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">description</i> &nbsp;<FormattedMessage id=\"link_terms_of_service\"\n              defaultMessage=\"Terms of Service\" description=\"Ancor text for terms of service link\" />\n          </a>\n          <a href={LINK_PRIVACY_POLICY} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">policy</i> &nbsp;<FormattedMessage id=\"link_privacy_policy\"\n              defaultMessage=\"Privacy Policy\" description=\"Ancor text for privacy policy link\" />\n          </a>\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_client\" /></label>\n            {APP_NAME}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_sdk\" defaultMessage=\"SDK:\" /></label>\n            {Tinode.getLibrary()}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server\" /></label>\n            {this.props.serverVersion}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server_address\" defaultMessage=\"Server address:\" /></label>\n            {this.props.serverAddress}\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","/* ContactsView holds all contacts-related stuff */\nimport React from 'react';\nimport { FormattedMessage, defineMessages } from 'react-intl';\n\nimport ContactList from '../widgets/contact-list.jsx';\n\nimport { updateFavicon } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  archived_contacts_title: {\n    id: \"archived_contacts\",\n    defaultMessage: \"Archived contacts ({count})\",\n    description: \"Label for archived chats\"\n  }\n});\n\nexport default class ContactsView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAction = this.handleAction.bind(this);\n\n    this.state = ContactsView.deriveStateFromProps(props);\n  }\n\n  static deriveStateFromProps(props) {\n    const contacts = [];\n    let unreadThreads = 0;\n    let archivedCount = 0;\n    props.chatList.map((c) => {\n      const blocked = c.acs && !c.acs.isJoiner();\n      // Show only blocked contacts only when props.blocked == true.\n      if (blocked && props.blocked) {\n        contacts.push(c);\n      }\n      if (blocked || props.blocked) {\n        return;\n      }\n\n      if (c.private && c.private.arch) {\n        if (props.archive) {\n          contacts.push(c);\n        } else {\n          archivedCount ++;\n        }\n      } else if (!props.archive) {\n        contacts.push(c);\n        unreadThreads += c.unread > 0 ? 1 : 0;\n      }\n    });\n\n    contacts.sort((a, b) => {\n      return (b.touched || 0) - (a.touched || 0);\n    });\n\n    if (archivedCount > 0) {\n      contacts.push({\n        action: 'archive',\n        title: messages.archived_contacts_title,\n        values: {count: archivedCount}\n      });\n    }\n\n    return {\n      contactList: contacts,\n      unreadThreads: unreadThreads\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chatList != this.props.chatList ||\n        prevProps.archive != this.props.archive ||\n        prevProps.blocked != this.props.blocked) {\n      const newState = ContactsView.deriveStateFromProps(this.props);\n      this.setState(newState);\n      if (newState.unreadThreads != prevState.unreadThreads) {\n        updateFavicon(newState.unreadThreads);\n      }\n    }\n  }\n\n  handleAction(action_ignored) {\n    this.props.onShowArchive();\n  }\n\n  render() {\n    return (\n      <FormattedMessage id=\"contacts_not_found\"\n        defaultMessage=\"You have no chats<br />¯∖_(ツ)_/¯\"\n        description=\"HTML message shown in ContactList when no contacts are found\">{\n        (no_contacts) => <ContactList\n          connected={this.props.connected}\n          contacts={this.state.contactList}\n          emptyListMessage={no_contacts}\n          topicSelected={this.props.topicSelected}\n          myUserId={this.props.myUserId}\n          showOnline={true}\n          showUnread={true}\n          onTopicSelected={this.props.onTopicSelected}\n          showContextMenu={this.props.showContextMenu}\n          onAction={this.handleAction} />\n      }</FormattedMessage>\n    );\n  }\n};\n","// Account registration.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport { vcard } from '../lib/utils.js';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class CreateAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: '',\n      password: '',\n      email: '',\n      fn: '', // full/formatted name\n      imageDataUrl: null,\n      errorCleared: false,\n      saveToken: LocalStorageUtil.getObject('keep-logged-in')\n    };\n\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(password) {\n    this.setState({password: password});\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value})\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleToggleSaveToken() {\n    LocalStorageUtil.setObject('keep-logged-in', !this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({errorCleared: false});\n    this.props.onCreateAccount(\n      this.state.login.trim(),\n      this.state.password.trim(),\n      vcard(this.state.fn.trim().substring(0, MAX_TITLE_LENGTH), this.state.imageDataUrl),\n      {'meth': 'email', 'val': this.state.email});\n  }\n\n  render() {\n    let submitClasses = 'blue';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form className=\"panel-form-column\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <FormattedMessage id=\"login_prompt\">{\n              (login_prompt) => <input type=\"text\" placeholder={login_prompt} autoComplete=\"user-name\"\n                value={this.state.login} onChange={this.handleLoginChange} required autoFocus />\n            }</FormattedMessage>\n            <FormattedMessage id=\"password_prompt\">{\n              (password_prompt) => <VisiblePassword placeholder={password_prompt} autoComplete=\"new-password\"\n                value={this.state.password} onFinished={this.handlePasswordChange}\n                required={true} />\n            }</FormattedMessage>\n          </div>\n          <AvatarUpload\n            onImageChanged={this.handleImageChanged}\n            onError={this.props.onError} />\n        </div>\n        <div  className=\"panel-form-row\">\n          <FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n            description=\"Input placeholder for person's full name\">{\n            (full_name_prompt) => <input type=\"text\" placeholder={full_name_prompt} autoComplete=\"name\"\n              value={this.state.fn} onChange={this.handleFnChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <FormattedMessage id=\"email_prompt\" defaultMessage=\"Email, e.g. jdoe@example.com\"\n            description=\"Input placeholder for email entry\">{\n            (email_prompt) => <input type=\"email\" placeholder={email_prompt} autoComplete=\"email\"\n              value={this.state.email} onChange={this.handleEmailChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <FormattedMessage id=\"stay_logged_in\">{\n            (stay_logged_in) => <label htmlFor=\"save-token\">&nbsp;{stay_logged_in}</label>\n          }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_up\" defaultMessage=\"Sign up\"\n              description=\"Create account button [Sign Up]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class EditAccountView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    this.state = {\n      fullName: me.public ? me.public.fn : undefined,\n      avatar: makeImageUrl(me.public ? me.public.photo : null)\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n                description=\"Label for full name editing\" />\n            </label>\n            <div className=\"large\">{this.state.fullName}</div>\n            <div>\n              <label className=\"small\"><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n                description=\"Label for user address (ID)\" /></label>&nbsp;\n              <tt>{this.props.myUserId}</tt>\n            </div>\n          </div>\n          <AvatarUpload\n            avatar={this.state.avatar}\n            readOnly={!this.state.owner}\n            uid={this.props.myUserId}\n            title={this.state.fullName} />\n        </div>\n        <div className=\"panel-form-row\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('general');}}>\n            <i className=\"material-icons\">edit</i>&nbsp;\n            <FormattedMessage id=\"button_edit\" defaultMessage=\"Edit\" description=\"Call to action [Edit]\" />\n          </a>\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('notif');}}>\n            <i className=\"material-icons\">notifications</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_notifications\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('security');}}>\n            <i className=\"material-icons\">security</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_security\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('support');}}>\n            <i className=\"material-icons\">contact_support</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_support\" />\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","// InfoView: panel with topic/user info.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport ContactList from '../widgets/contact-list.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupManager from '../widgets/group-manager.jsx';\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport MenuCancel from '../widgets/menu-cancel.jsx';\nimport MoreButton from '../widgets/more-button.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\nimport TagManager from '../widgets/tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH, NO_ACCESS_MODE } from '../config.js';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, vcard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  requested: {\n    id: 'requested_permissions',\n    defaultMessage: 'Requested',\n    description: 'Title for permissions'\n  },\n  granted: {\n    id: 'granted_permissions',\n    defaultMessage: 'Granted',\n    description: 'Title for permissions'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n  other_user: {\n    id: 'label_other_user',\n    defaultMessage: 'Other',\n    description: 'Label for the other user when the user is unnamed'\n  },\n  clear_messages: {\n    id: 'action_clear_messages',\n    defaultMessage: 'Clear Messages',\n    description: 'Flat button [Clear Messages] (soft-delete messages)'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n  delete_messages: {\n    id: 'action_delete_messages',\n    defaultMessage: 'Clear Messages for All',\n    description: 'Flat button [Clear for All] (hard-delete all messages)'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  leave_chat: {\n    id: 'action_leave_chat',\n    defaultMessage: 'Leave Conversation',\n    description: 'Flat button [Leave Conversation]'\n  },\n  leave_chat_warning: {\n    id: 'leave_chat_warning',\n    defaultMessage: 'Are you sure you want to leave this conversation?',\n    description: 'Alert dialog warning when unsubscribing from a chat.'\n  },\n  block_contact: {\n    id: 'action_block_contact',\n    defaultMessage: \"Block Contact\",\n    description: \"Flat button [Block Contact]\"\n  },\n  block_contact_warning: {\n    id: 'block_contact_warning',\n    defaultMessage: 'Are you sure you want to block this contact?',\n    description: 'Alert dialog warning when blocking a contact.'\n  },\n  report_chat: {\n    id: 'action_report_chat',\n    defaultMessage: 'Report Conversation',\n    description: 'Flat button [Report Group]'\n  },\n  report_chat_warning: {\n    id: 'report_chat_warning',\n    defaultMessage: 'Are you sure you want to block and report this conversation?',\n    description: 'Alert dialog warning when reporting a conversation for abuse'\n  },\n});\n\nclass InfoView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      topic: null,\n      owner: false,\n      admin: false,\n      sharer: false,\n      deleter: false,\n      muted: false,\n      address: null,\n      groupTopic: undefined,\n      channel: undefined,\n      fullName: undefined,\n      avatar: null,\n      private: null,\n      selectedContact: null,\n      access: null,\n      modeGiven: null,\n      modeWant: null,\n      modeGiven2: null, // P2P topic, the other user mode given\n      modeWant2: null,  // P2P topic, the other user mode want\n      auth: null,\n      anon: null,\n      contactList: [],\n      tags: [],\n      showMemberPanel: false,\n      showPermissionEditorFor: undefined,\n      moreInfoExpanded: false,\n      previousMetaDesc: undefined,\n      previousSubsUpdated: undefined,\n      previousTagsUpdated: undefined\n    };\n\n    this.resetSubs = this.resetSubs.bind(this);\n    this.resetDesc = this.resetDesc.bind(this);\n    this.onMetaDesc = this.onMetaDesc.bind(this);\n    this.onSubsUpdated = this.onSubsUpdated.bind(this);\n    this.onTagsUpdated = this.onTagsUpdated.bind(this);\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\n    this.handlePrivateUpdate = this.handlePrivateUpdate.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleMuted = this.handleMuted.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handleShowAddMembers = this.handleShowAddMembers.bind(this);\n    this.handleHideAddMembers = this.handleHideAddMembers.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleDeleteMessages = this.handleDeleteMessages.bind(this);\n    this.handleLeave = this.handleLeave.bind(this);\n    this.handleBlock = this.handleBlock.bind(this);\n    this.handleReport = this.handleReport.bind(this);\n    this.handleMemberSelected = this.handleMemberSelected.bind(this);\n    this.handleMoreInfo = this.handleMoreInfo.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.handleContextMenu = this.handleContextMenu.bind(this);\n  }\n\n  // No need to separately handle component mount.\n  componentDidUpdate(props) {\n    const topic = this.props.tinode.getTopic(props.topic);\n    if (!topic) {\n      return;\n    }\n\n    if (this.onMetaDesc != topic.onMetaDesc) {\n      this.previousMetaDesc = topic.onMetaDesc;\n      topic.onMetaDesc = this.onMetaDesc;\n\n      this.previousSubsUpdated = topic.onSubsUpdated;\n      topic.onSubsUpdated = this.onSubsUpdated;\n\n      if (topic.getType() == 'grp') {\n        this.previousTagsUpdated = topic.onTagsUpdated;\n        topic.onTagsUpdated = this.onTagsUpdated;\n      } else {\n        this.previousTagsUpdated = undefined;\n      }\n    }\n\n    if (this.state.topic != props.topic) {\n      this.setState({topic: props.topic});\n      this.resetDesc(topic, props);\n      this.resetSubs(topic, props);\n    }\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.setState({topic: null});\n    topic.onMetaDesc = this.previousMetaDesc;\n    topic.onSubsUpdated = this.previousSubsUpdated;\n    topic.onTagsUpdated = this.previousTagsUpdated;\n  }\n\n  resetSubs(topic, props) {\n    const newState = {contactList: []};\n    if (topic.getType() == 'p2p') {\n      // Fetch the other party in the p2p conversation.\n      // Topic may not be ready yet, so check if user is found.\n      const user2 = topic.subscriber(props.topic);\n      if (user2) {\n        newState.modeGiven2 = user2.acs.getGiven();\n        newState.modeWant2 = user2.acs.getWant();\n      } else {\n        newState.modeGiven2 = NO_ACCESS_MODE;\n        newState.modeWant2 = NO_ACCESS_MODE;\n      }\n    } else {\n      topic.subscribers((sub) => {\n        newState.contactList.push(sub);\n      }, this);\n    }\n\n    this.setState(newState);\n  }\n\n  resetDesc(topic, props) {\n    const defacs = topic.getDefaultAccess() || {};\n    const acs = topic.getAccessMode();\n\n    this.setState({\n      owner: acs && acs.isOwner(),\n      admin: acs && acs.isAdmin(),\n      sharer: acs && acs.isSharer(),\n      deleter: acs && acs.isDeleter(),\n      muted: acs && acs.isMuted(),\n\n      fullName: topic.public ? topic.public.fn : undefined,\n      avatar: makeImageUrl(topic.public ? topic.public.photo : null),\n      private: topic.private ? topic.private.comment : null,\n      address: topic.name,\n      groupTopic: (topic.getType() == 'grp'),\n      channel: topic.isChannel(),\n      showMemberPanel: false,\n      access: acs ? acs.getMode() : undefined,\n      modeGiven: acs ? acs.getGiven() : undefined,\n      modeWant: acs ? acs.getWant() : undefined,\n      auth: defacs.auth,\n      anon: defacs.anon\n    });\n\n    if (topic.getType() == 'grp' && acs && acs.isOwner()) {\n      // Requesting tags: owner is editing the topic.\n      topic.getMeta(topic.startMetaQuery().withTags().build());\n    }\n  }\n\n  onMetaDesc(desc) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetDesc(topic, this.props);\n\n    if (this.previousMetaDesc && this.previousMetaDesc != this.onMetaDesc) {\n      this.previousMetaDesc(desc);\n    }\n  }\n\n  onSubsUpdated(subs) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetSubs(topic, this.props);\n\n    if (this.previousSubsUpdated && this.previousSubsUpdated != this.onSubsUpdated) {\n      this.previousSubsUpdated(subs);\n    }\n  }\n\n  onTagsUpdated(tags) {\n    this.setState({tags: tags});\n\n    if (this.previousTagsUpdated && this.previousTagsUpdated != this.onTagsUpdated) {\n      this.previousTagsUpdated();\n    }\n  }\n\n  handleFullNameUpdate(fn) {\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.fullName !== fn) {\n      this.setState({fullName: fn});\n      this.props.onTopicDescUpdate(this.props.topic, vcard(fn, null), null);\n    }\n  }\n\n  handlePrivateUpdate(comment) {\n    comment = comment.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.private !== comment) {\n      this.setState({private: comment});\n      this.props.onTopicDescUpdate(this.props.topic, null, comment || Tinode.DEL_CHAR);\n    }\n  }\n\n  handleImageChanged(img) {\n    this.setState({avatar: img});\n    this.props.onTopicDescUpdate(this.props.topic, vcard(null, img || Tinode.DEL_CHAR), null);\n  }\n\n  handleMuted(ignored, checked) {\n    this.setState({muted: checked});\n    this.props.onChangePermissions(this.props.topic, checked ? '-P' : '+P');\n  }\n\n  handlePermissionsChanged(perm) {\n    switch (this.state.showPermissionEditorFor) {\n      case 'auth':\n        this.props.onTopicDescUpdate(this.props.topic, null, null, {auth: perm});\n        break;\n      case 'anon':\n        this.props.onTopicDescUpdate(this.props.topic, null, null, {anon: perm});\n        break;\n      case 'mode':\n      case 'want':\n        this.props.onChangePermissions(this.props.topic, perm);\n        break;\n      case 'given':\n        this.props.onChangePermissions(this.props.topic, perm, this.props.topic);\n        break;\n      case 'user':\n        this.props.onChangePermissions(this.props.topic, perm, this.state.userPermissionsEdited);\n        break;\n    }\n\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handleLaunchPermissionsEditor(which, uid) {\n    const {formatMessage} = this.props.intl;\n    let toEdit, toCompare, toSkip, titleEdit, titleCompare, userTitle, userAvatar;\n    switch (which) {\n      case 'mode':\n        toEdit = this.state.access;\n        break;\n      case 'want':\n        toEdit = this.state.modeWant;\n        toCompare = this.state.modeGiven;\n        if (this.state.owner) {\n          // Don't allow owner to unset 'O' permission. All other permissions are OK.\n          toSkip = 'O';\n        } else {\n          // Allow accepting any of 'ASDO' permissions but don't allow asking for them.\n          toSkip = Tinode.AccessMode.encode(Tinode.AccessMode.diff('ASDO', this.state.modeGiven));\n          if (this.state.channel) {\n            // Channels are read-only.\n            toSkip += 'W';\n          }\n        }\n        titleEdit = formatMessage(messages.requested);\n        titleCompare = formatMessage(messages.granted);\n        break;\n      case 'given':\n        toEdit = this.state.modeGiven2;\n        toCompare = this.state.modeWant2;\n        toSkip = this.state.groupTopic ? (this.state.owner ? '' : 'O') : 'ASDO';\n        titleEdit = formatMessage(messages.granted);\n        titleCompare = formatMessage(messages.requested);\n        break;\n      case 'auth':\n        toEdit = this.state.auth;\n        toSkip = 'O';\n        break;\n      case 'anon':\n        toEdit = this.state.anon;\n        toSkip = 'O';\n        break;\n      case 'user': {\n        const topic = this.props.tinode.getTopic(this.props.topic);\n        if (!topic) {\n          return;\n        }\n        const user = topic.subscriber(uid);\n        if (!user || !user.acs) {\n          return;\n        }\n        toEdit = user.acs.getGiven();\n        toCompare = user.acs.getWant();\n        toSkip = this.state.owner ? '' : 'O';\n        titleEdit = formatMessage(messages.granted);\n        titleCompare = formatMessage(messages.requested);\n        if (user.public) {\n          userTitle = user.public.fn;\n          userAvatar = user.public.photo;\n        }\n        break;\n      }\n      default:\n        console.log(\"Unknown permission editing mode '\" + which + \"'\");\n        break;\n    }\n    this.setState({\n      showPermissionEditorFor: which,\n      userPermissionsEdited: uid,\n      userPermissionsTitle: userTitle,\n      userPermissionsAvatar: userAvatar,\n      editedPermissions: toEdit,\n      immutablePermissions: toCompare,\n      editedPermissionsTitle: titleEdit,\n      immutablePermissionsTitle: titleCompare,\n      editedPermissionsSkipped: toSkip,\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handleShowAddMembers(e) {\n    e.preventDefault();\n    this.props.onInitFind();\n    this.setState({showMemberPanel: true});\n  }\n\n  handleHideAddMembers() {\n    this.setState({showMemberPanel: false});\n  }\n\n  handleMemberUpdateRequest(members, added, removed) {\n    this.props.onMemberUpdateRequest(this.props.topic, added, removed);\n    this.setState({showMemberPanel: false});\n  }\n\n  handleDeleteMessages(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(this.state.deleter ? messages.delete_messages : messages.clear_messages), // title\n      formatMessage(this.state.deleter ? messages.delete_messages_warning : messages.clear_messages_warning), // content\n      (() => { this.props.onDeleteMessages(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleLeave(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.leave_chat), // title\n      formatMessage(messages.leave_chat_warning), // content\n      (() => { this.props.onLeaveTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleBlock(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.block_contact), // title\n      formatMessage(messages.block_contact_warning), // content\n      (() => { this.props.onBlockTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleReport(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.report_chat), // title\n      formatMessage(messages.report_chat_warning), // content\n      (() => { this.props.onReportTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleMemberSelected(uid) {\n    this.setState({selectedContact: uid});\n  }\n\n  handleMoreInfo(open) {\n    this.setState({moreInfoExpanded: open});\n  }\n\n  handleTagsUpdated(tags) {\n    if (!arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      this.props.onTopicTagsUpdate(this.props.topic, tags);\n    }\n  }\n\n  handleContextMenu(params) {\n    const {formatMessage} = this.props.intl;\n    const instance = this;\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    const user = topic.subscriber(params.topicName);\n    if (!user || !user.acs) {\n      return;\n    }\n\n    const menuItems = [\n      {title: formatMessage(messages.edit_permissions), handler: function() {\n        instance.handleLaunchPermissionsEditor('user', params.topicName);\n      }},\n      'member_delete',\n      user.acs.isMuted() ? 'member_unmute' : 'member_mute',\n      user.acs.isJoiner() ? 'member_block' : 'member_unblock'\n    ];\n    this.props.showContextMenu({\n      topicName: this.props.topic,\n      x: params.x,\n      y: params.y,\n      user: params.topicName}, menuItems);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n\n    return (\n      <div id=\"info-view\">\n        <div className=\"caption-panel\" id=\"info-caption-panel\">\n          <div className=\"panel-title\" id=\"info-title\">\n            <FormattedMessage id=\"title_info\" defaultMessage=\"Info\" description=\"Title for InfoView\" />\n          </div>\n          <div>\n            <MenuCancel onCancel={this.props.onCancel} />\n          </div>\n        </div>\n        {this.props.displayMobile ?\n          <ErrorPanel\n            level={this.props.errorLevel}\n            text={this.props.errorText}\n            onClearError={this.props.onError} /> : null}\n        {this.state.showMemberPanel ?\n          <GroupManager\n            members={this.state.contactList}\n            requiredMember={this.props.myUserId}\n            keepInitialMembers={!this.state.admin && !this.state.owner}\n            myUserId={this.props.myUserId}\n            contacts={this.props.searchableContacts}\n            onCancel={this.handleHideAddMembers}\n            onSubmit={this.handleMemberUpdateRequest} />\n          :\n        this.state.showPermissionEditorFor ?\n          <PermissionsEditor\n            mode={this.state.editedPermissions}\n            compare={this.state.immutablePermissions}\n            skip={this.state.editedPermissionsSkipped}\n            modeTitle={this.state.editedPermissionsTitle}\n            compareTitle={this.state.immutablePermissionsTitle}\n            userTitle={this.state.userPermissionsTitle}\n            item={this.state.userPermissionsEdited}\n            userAvatar={this.state.userPermissionsAvatar}\n            onSubmit={this.handlePermissionsChanged}\n            onCancel={this.handleHidePermissionsEditor}\n            />\n          :\n          <div id=\"info-view-content\" className=\"scrollable-panel\">\n            <div className=\"panel-form-row\">\n              <div className=\"panel-form-column\">\n                <div><label className=\"small\">\n                  <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                    description=\"Label for editing topic name\" />\n                </label></div>\n                <div><InPlaceEdit\n                    placeholder={this.state.groupTopic ? \"Group name\" : <i>Unknown</i>}\n                    readOnly={!this.state.owner}\n                    value={this.state.fullName}\n                    required={true}\n                    onFinished={this.handleFullNameUpdate} /></div>\n                <div>\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                      description=\"Label for editing 'private'\" />\n                  </label>\n                </div>\n                <div>\n                  <FormattedMessage id=\"private_editing_placeholder\"\n                    defaultMessage=\"Visible to you only\"\n                    description=\"Placeholder for editing 'private'\">{\n                    (private_placeholder) => <InPlaceEdit\n                      placeholder={private_placeholder}\n                      value={this.state.private}\n                      onFinished={this.handlePrivateUpdate} />\n                  }</FormattedMessage>\n                </div>\n              </div>\n              <AvatarUpload\n                avatar={this.state.avatar}\n                readOnly={!this.state.owner}\n                uid={this.props.topic}\n                title={this.state.fullName}\n                onImageChanged={this.handleImageChanged}\n                onError={this.props.onError} />\n            </div>\n            <div className=\"hr\" />\n            <div className=\"panel-form-column\">\n              <div className=\"panel-form-row\">\n                <label>\n                  <FormattedMessage id=\"label_muting_topic\" defaultMessage=\"Muted:\"\n                    description=\"Label for Muting/unmuting the topic\" />\n                </label>\n                <CheckBox name=\"P\" checked={this.state.muted}\n                  onChange={this.handleMuted} />\n              </div>\n              <FormattedMessage id=\"action_more\" defaultMessage=\"More\"\n                description=\"Action for showing more content\">{\n                (more) => <MoreButton\n                  title={more}\n                  open={this.state.moreInfoExpanded}\n                  onToggle={this.handleMoreInfo} />\n              }</FormattedMessage>\n              {this.state.moreInfoExpanded ?\n                <div className=\"panel-form-column\">\n                  <div className=\"panel-form-row\">\n                    <label><FormattedMessage id=\"label_user_id\" /></label>\n                    <tt>{this.state.address}</tt>\n                  </div>\n                  {this.state.groupTopic ?\n                    <div className=\"panel-form-row\">\n                      <label>\n                        <FormattedMessage id=\"label_your_permissions\" defaultMessage=\"Your permissions:\"\n                          description=\"Label for current user permissions\" />\n                      </label>\n                      <tt className=\"clickable\"\n                        onClick={this.handleLaunchPermissionsEditor.bind(this, 'want')}>\n                        {this.state.access}\n                      </tt>\n                    </div>\n                    :\n                    <div>\n                      <div>\n                        <label className=\"small\">\n                          <FormattedMessage id=\"label_permissions\" defaultMessage=\"Permissions:\"\n                            description=\"Section title\" />\n                        </label>\n                      </div>\n                      <div className=\"quoted\">\n                        <div>\n                          <FormattedMessage id=\"label_you\" defaultMessage=\"You:\"\n                            description=\"Label for the current user\" /> &nbsp;<tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'want')}>\n                          {this.state.access}\n                        </tt></div>\n                        <div>{this.state.fullName ? this.state.fullName : formatMessage(messages.other_user)}:\n                          &nbsp;<tt className=\"clickable\" onClick={this.handleLaunchPermissionsEditor.bind(this, 'given')}>\n                          {this.state.modeGiven2}\n                          </tt>\n                        </div>\n                      </div>\n                    </div>\n                  }\n                  {this.state.sharer && (this.state.auth || this.state.anon) ?\n                  <div>\n                    <div>\n                      <label className=\"small\">\n                        <FormattedMessage id=\"label_default_access\" defaultMessage=\"Default access mode:\"\n                          description=\"Section title\" />\n                      </label>\n                    </div>\n                    <div className=\"quoted\">\n                      <div>Auth: {this.state.admin ?\n                        <tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>\n                          {this.state.auth}\n                        </tt>\n                        :\n                        <tt>{this.state.auth}</tt>\n                      }\n                      </div>\n                      <div>Anon: {this.state.admin ?\n                        <tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>\n                          {this.state.anon}\n                        </tt>\n                        :\n                        <tt>{this.state.anon}</tt>\n                      }\n                      </div>\n                    </div>\n                  </div>\n                  :\n                  null\n                }\n                </div>\n              :\n              null\n              }\n            </div>\n            <div className=\"hr\" />\n            {this.state.owner ?\n              <>\n                <FormattedMessage id=\"title_tag_manager\">{\n                  (tags) => <TagManager\n                    title={tags}\n                    tags={this.state.tags}\n                    activated={false}\n                    tinode={this.props.tinode}\n                    onSubmit={this.handleTagsUpdated} />\n                }</FormattedMessage>\n                <div className=\"hr\" />\n              </>\n              :\n              null\n            }\n            <div className=\"panel-form-column\">\n              {!this.state.channel ?\n                <a href=\"#\" className=\"flat-button\" onClick={this.handleDeleteMessages}>\n                  <i className=\"material-icons\">delete_outline</i> &nbsp;{\n                    formatMessage(this.state.deleter ? messages.delete_messages : messages.clear_messages)\n                  }\n                </a>\n                :\n                null\n              }\n              <a href=\"#\" className=\"red flat-button\" onClick={this.handleLeave}>\n                <i className=\"material-icons\">exit_to_app</i> &nbsp;{formatMessage(messages.leave_chat)}\n              </a>\n              {!this.state.groupTopic ?\n                <a href=\"#\" className=\"red flat-button\" onClick={this.handleBlock}>\n                  <i className=\"material-icons\">block</i> &nbsp;{formatMessage(messages.block_contact)}\n                </a>\n                :\n                null\n              }\n              {!this.state.owner ?\n                <a href=\"#\" className=\"red flat-button\" onClick={this.handleReport}>\n                  <i className=\"material-icons\">report</i> &nbsp;{formatMessage(messages.report_chat)}\n                </a>\n                :\n                null\n              }\n            </div>\n            {this.state.groupTopic && this.state.sharer ?\n              <>\n                <div className=\"hr\" />\n                <div className=\"panel-form-column\">\n                  <div className=\"panel-form-row\">\n                    <label className=\"small\">\n                      <FormattedMessage id=\"label_group_members\" defaultMessage=\"Group members:\"\n                        description=\"Section title or label\" />\n                    </label>\n                  </div>\n                  <div className=\"panel-form-row\">\n                    <a href=\"#\" className=\"flat-button\" onClick={this.handleShowAddMembers}>\n                      <i className=\"material-icons\">person_add</i> &nbsp;<FormattedMessage id=\"button_add_members\"\n                        defaultMessage=\"Add members\" description=\"Flat button [Add members] (to topic)\" />\n                    </a>\n                  </div>\n                  <FormattedMessage id=\"group_has_no_members\" defaultMessage=\"No members\"\n                    description=\"Shown in place of group members\">{\n                    (no_members) => <ContactList\n                      contacts={this.state.contactList}\n                      myUserId={this.props.myUserId}\n                      emptyListMessage={no_members}\n                      topicSelected={this.state.selectedContact}\n                      showOnline={false}\n                      showUnread={false}\n                      showMode={true}\n                      noScroll={true}\n                      onTopicSelected={this.handleMemberSelected}\n                      showContextMenu={this.state.admin ? this.handleContextMenu : false}\n                    />\n                  }</FormattedMessage>\n                </div>\n              </>\n              :\n              null\n            }\n          </div>\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(InfoView);\n","// Login form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\n\nexport default class LoginView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: props.login,\n      password: '',\n      hostName: props.serverAddress,\n      saveToken: LocalStorageUtil.getObject('keep-logged-in')\n    };\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  handleToggleSaveToken() {\n    LocalStorageUtil.setObject('keep-logged-in', !this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onLogin(this.state.login.trim(), this.state.password.trim());\n  }\n\n  render() {\n    var submitClasses = 'blue';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form id=\"login-form\" onSubmit={this.handleSubmit}>\n        <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n          description=\"Login placeholder in LoginView\">\n        {\n          (login_prompt) => <input type=\"text\" id=\"inputLogin\"\n            placeholder={login_prompt}\n            autoComplete=\"username\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"none\"\n            value={this.state.login}\n            onChange={this.handleLoginChange}\n            required autoFocus />\n        }\n        </FormattedMessage>\n        <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n          description=\"Password placeholder in LoginView\">\n        {\n          (password_prompt) => <VisiblePassword type=\"password\" id=\"inputPassword\"\n            placeholder={password_prompt}\n            autoComplete=\"current-password\"\n            value={this.state.password}\n            onChange={this.handlePasswordChange}\n            required={true} />\n        }\n        </FormattedMessage>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <label htmlFor=\"save-token\">&nbsp;\n            <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n              description=\"Label for a checkbox\" />\n          </label>\n          <a href=\"#reset\">\n            <FormattedMessage id=\"forgot_password_link\" defaultMessage=\"Forgot password?\"\n              description=\"Link to Reset password form\" />\n          </a>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_in\" defaultMessage=\"Sign in\"\n              description=\"Button [Sign In]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n/* END Login */\n","/* This is just a static page to display when no conversation is selected. */\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME } from '../config.js';\n\nexport default class LogoView extends React.PureComponent {\n  render() {\n    const version = APP_NAME + ' (' + Tinode.getLibrary() + ')';\n    return (\n      <div id=\"dummy-view\">\n        <div>\n          <a href=\"https://github.com/tinode/chat/\">\n            <img id=\"logo\" alt=\"logo\" src=\"img/logo.svg\" />\n            <h2>Tinode Web</h2>\n          </a>\n          <p><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\" /> {version}</p>\n          <p><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\" /> {this.props.serverVersion} ({this.props.serverAddress})</p>\n        </div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\nconst Drafty = Tinode.Drafty;\n\nimport ChatMessage from '../widgets/chat-message.jsx';\nimport DocPreview from '../widgets/doc-preview.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupSubs from '../widgets/group-subs.jsx';\nimport ImagePreview from '../widgets/image-preview.jsx';\nimport Invitation from '../widgets/invitation.jsx';\nimport LetterTile from '../widgets/letter-tile.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport LogoView from './logo-view.jsx';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { DEFAULT_P2P_ACCESS_MODE, IMAGE_PREVIEW_DIM, KEYPRESS_DELAY, MESSAGES_PAGE,\n  MAX_EXTERN_ATTACHMENT_SIZE, MAX_IMAGE_DIM, MAX_INBAND_ATTACHMENT_SIZE, READ_DELAY } from '../config.js';\nimport { SUPPORTED_IMAGE_FORMATS, blobToBase64, filePasted, fileToBase64,\n  imageScaled, makeImageUrl } from '../lib/blob-helpers.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { bytesToHumanSize, shortDateFormat } from '../lib/strformat.js';\n\n// Run timer with this frequency (ms) for checking notification queue.\nconst NOTIFICATION_EXEC_INTERVAL = 300;\n\nconst messages = defineMessages({\n  'online_now': {\n    id: 'online_now',\n    defaultMessage: 'online now',\n    description: 'Indicator that the user or topic is currently online',\n  },\n  'last_seen': {\n    id: 'last_seen_timestamp',\n    defaultMessage: 'Last seen',\n    description: 'Label for the timestamp of when the user or topic was last online'\n  },\n  'not_found': {\n    id: 'title_not_found',\n    defaultMessage: 'Not found',\n    description: 'Title shown when topic is not found'\n  },\n  'channel': {\n    id: 'channel',\n    defaultMessage: 'channel',\n    description: 'Subtitle shown for channels in MessagesView instead of last seen'\n  }\n});\n\n// Checks if the access permissions are granted but not yet accepted.\nfunction isUnconfirmed(acs) {\n  if (acs) {\n    const ex = acs.getExcessive() || '';\n    return acs.isJoiner('given') && (ex.includes('R') || ex.includes('W'));\n  }\n  return false;\n}\n\nfunction isPeerRestricted(acs) {\n  if (acs) {\n    const ms = acs.getMissing() || '';\n    return acs.isJoiner('want') && (ms.includes('R') || ms.includes('W'));\n  }\n  return false;\n}\n\nclass MessagesView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = MessagesView.getDerivedStateFromProps(props, {});\n\n    this.leave = this.leave.bind(this);\n    this.sendImageAttachment = this.sendImageAttachment.bind(this);\n    this.sendFileAttachment = this.sendFileAttachment.bind(this);\n    this.sendKeyPress = this.sendKeyPress.bind(this);\n    this.handleScrollReference = this.handleScrollReference.bind(this);\n    this.handleScrollEvent = this.handleScrollEvent.bind(this);\n    this.handleDescChange = this.handleDescChange.bind(this);\n    this.handleSubsUpdated = this.handleSubsUpdated.bind(this);\n    this.handleNewMessage = this.handleNewMessage.bind(this);\n    this.handleAllMessagesReceived = this.handleAllMessagesReceived.bind(this);\n    this.handleInfoReceipt = this.handleInfoReceipt.bind(this);\n    this.handleImagePostview = this.handleImagePostview.bind(this);\n    this.handleClosePreview = this.handleClosePreview.bind(this);\n    this.handleFormResponse = this.handleFormResponse.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleShowContextMenuMessage = this.handleShowContextMenuMessage.bind(this);\n    this.handleNewChatAcceptance = this.handleNewChatAcceptance.bind(this);\n    this.handleEnablePeer = this.handleEnablePeer.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n    this.postReadNotification = this.postReadNotification.bind(this);\n    this.clearNotificationQueue = this.clearNotificationQueue.bind(this);\n\n    this.readNotificationQueue = [];\n    this.readNotificationTimer = null;\n  }\n\n  componentDidMount() {\n    // this.propsChange(this.props, this.state);\n    if (this.messagesScroller) {\n      this.messagesScroller.addEventListener('scroll', this.handleScrollEvent);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messagesScroller) {\n      this.messagesScroller.removeEventListener('scroll', this.handleScrollEvent);\n    }\n\n    // Flush all notifications.\n    this.clearNotificationQueue();\n  }\n\n  // Scroll last message into view on component update e.g. on message received\n  // or vertical shrinking.\n  componentDidUpdate(prevProps, prevState) {\n    if (this.messagesScroller) {\n      if (prevState.topic != this.state.topic || prevState.messages.length != this.state.messages.length) {\n        // New message\n        this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n      } else if (prevProps.viewportHeight > this.props.viewportHeight) {\n        // Componet changed height.\n        this.messagesScroller.scrollTop += prevProps.viewportHeight - this.props.viewportHeight;\n      }\n    }\n\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (this.state.topic != prevState.topic) {\n      if (prevState.topic && !Tinode.isNewGroupTopicName(prevState.topic)) {\n        this.leave(prevState.topic);\n      }\n\n      if (topic) {\n        topic.onData = this.handleNewMessage;\n        topic.onAllMessagesReceived = this.handleAllMessagesReceived;\n        topic.onInfo = this.handleInfoReceipt;\n        topic.onMetaDesc = this.handleDescChange;\n        topic.onSubsUpdated = this.handleSubsUpdated;\n        topic.onPres = this.handleSubsUpdated;\n      }\n    }\n\n    if (!this.props.applicationVisible) {\n      // If application is not visible, flush all unsent 'read' notifications.\n      this.clearNotificationQueue();\n    } else {\n      // Otherwise assume there are unread messages.\n      this.postReadNotification(0);\n    }\n\n    if (topic && !topic.isSubscribed() && this.props.ready &&\n        ((this.state.topic != prevState.topic) || !prevProps.ready)) {\n      // Is this a new topic?\n      const newTopic = (this.props.newTopicParams && this.props.newTopicParams._topicName == this.props.topic);\n\n      // Don't request the tags. They are useless unless the user\n      // is the owner and is editing the topic.\n      let getQuery = topic.startMetaQuery().withLaterDesc();\n      if (this.state.isSharer || (newTopic && !topic.isChannel())) {\n        // Request subscriptions only if one of S,O,A is given or it's a new non-channel topic.\n        getQuery = getQuery.withLaterSub();\n      }\n      if (this.state.isReader || newTopic) {\n        // Reading is either permitted or we don't know because it's a new topic. Ask for messages.\n        getQuery = getQuery.withLaterData(MESSAGES_PAGE);\n        if (this.state.isReader) {\n          getQuery = getQuery.withLaterDel();\n        }\n        // And show \"loading\" spinner.\n        this.setState({ fetchingMessages: true });\n      }\n      const setQuery = newTopic ? this.props.newTopicParams : undefined;\n      topic.subscribe(getQuery.build(), setQuery)\n        .then((ctrl) => {\n          if (ctrl.code == 303) {\n            // Redirect to another topic requested.\n            HashNavigation.navigateTo(HashNavigation.setUrlTopic('', ctrl.params.topic));\n            return;\n          }\n          if (this.state.topic != ctrl.topic) {\n            this.setState({topic: ctrl.topic});\n          }\n          this.props.onNewTopicCreated(this.props.topic, ctrl.topic);\n          // If there are unsent messages, try sending them now.\n          topic.queuedMessages((pub) => {\n            if (!pub._sending && topic.isSubscribed()) {\n              topic.publishMessage(pub);\n            }\n          });\n        })\n        .catch((err) => {\n          console.log(\"Failed subscription to\", this.state.topic);\n          this.props.onError(err.message, 'err');\n          const blankState = MessagesView.getDerivedStateFromProps({}, {});\n          blankState.title = this.props.intl.formatMessage(messages.not_found);\n          this.setState(blankState);\n        });\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let nextState = {};\n    if (!nextProps.topic) {\n      // Default state: no topic.\n      nextState = {\n        messages: [],\n        onlineSubs: [],\n        topic: null,\n        title: '',\n        avatar: null,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false,\n        peerMessagingDisabled: false,\n        channel: false\n      };\n    } else if (nextProps.topic != prevState.topic) {\n      const topic = nextProps.tinode.getTopic(nextProps.topic);\n      nextState = {\n        topic: nextProps.topic,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false\n      };\n\n      if (topic) {\n        // Topic exists.\n        const msgs = [];\n        const subs = [];\n\n        if (nextProps.connected) {\n          topic.subscribers((sub) => {\n            if (sub.online && sub.user != nextProps.myUserId) {\n              subs.push(sub);\n            }\n          });\n        }\n\n        topic.messages(function(msg) {\n          if (!msg.deleted) {\n            msgs.push(msg);\n          }\n        });\n\n        Object.assign(nextState, {\n          messages: msgs,\n          onlineSubs: subs\n        });\n\n        if (topic.public) {\n          Object.assign(nextState, {\n            title: topic.public.fn,\n            avatar: makeImageUrl(topic.public.photo)\n          });\n        } else {\n          Object.assign(nextState, {\n            title: '',\n            avatar: null\n          });\n        }\n\n        const peer = topic.p2pPeerDesc();\n        if (peer) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: isPeerRestricted(peer.acs)\n          });\n        } else if (prevState.peerMessagingDisabled) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: false\n          });\n        }\n        Object.assign(nextState, {\n          channel: topic.isChannel()\n        });\n      } else {\n        // Invalid topic.\n        Object.assign(nextState, {\n          messages: [],\n          onlineSubs: [],\n          title: '',\n          avatar: null,\n          peerMessagingDisabled: false,\n          channel: false\n        });\n      }\n    }\n\n    if (nextProps.acs) {\n      if (nextProps.acs.isWriter() != prevState.isWriter) {\n        nextState.isWriter = !prevState.isWriter;\n      }\n      if (nextProps.acs.isReader() != prevState.isReader) {\n        nextState.isReader = !prevState.isReader;\n      }\n      if (!nextProps.acs.isReader('given') != prevState.readingBlocked) {\n        nextState.readingBlocked = !prevState.readingBlocked;\n      }\n      if (nextProps.acs.isSharer() != prevState.isSharer) {\n        nextState.isSharer = !prevState.isSharer;\n      }\n    } else {\n      if (prevState.isWriter) {\n        nextState.isWriter = false;\n      }\n      if (prevState.isReader) {\n        nextState.isReader = false;\n      }\n      if (!prevState.readingBlocked) {\n        prevState.readingBlocked = true;\n      }\n      if (prevState.isSharer) {\n        nextState.isSharer = false;\n      }\n    }\n\n    if (isUnconfirmed(nextProps.acs) == !prevState.unconformed) {\n      nextState.unconfirmed = !prevState.unconformed;\n    }\n\n    // Clear subscribers online when there is no connection.\n    if (!nextProps.connected && prevState.onlineSubs && prevState.onlineSubs.length > 0) {\n      nextState.onlineSubs = [];\n    }\n\n    return nextState;\n  }\n\n  leave(oldTopicName) {\n    if (!oldTopicName) {\n      return;\n    }\n    let oldTopic = this.props.tinode.getTopic(oldTopicName);\n    if (oldTopic && oldTopic.isSubscribed()) {\n      oldTopic.leave(false)\n        .catch(() => { /* do nothing here */ })\n        .finally(() => {\n          // We don't care if the request succeeded or failed.\n          // The topic is dead regardless.\n          this.setState({fetchingMessages: false});\n          oldTopic.onData = undefined;\n          oldTopic.onAllMessagesReceived = undefined;\n          oldTopic.onInfo = undefined;\n          oldTopic.onMetaDesc = undefined;\n          oldTopic.onSubsUpdated = undefined;\n          oldTopic.onPres = undefined;\n        });\n    }\n  }\n\n  handleScrollReference(node) {\n    if (node) {\n      node.addEventListener('scroll', this.handleScrollEvent);\n      this.messagesScroller = node;\n      this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n    }\n  }\n\n  // Get older messages\n  handleScrollEvent(event) {\n    this.setState({scrollPosition: event.target.scrollHeight - event.target.scrollTop});\n    if (event.target.scrollTop <= 0) {\n      this.setState((prevState, props) => {\n        const newState = {};\n        if (!prevState.fetchingMessages) {\n          const topic = this.props.tinode.getTopic(this.state.topic);\n          if (topic && topic.isSubscribed() && topic.msgHasMoreMessages()) {\n            newState.fetchingMessages = true;\n            topic.getMessagesPage(MESSAGES_PAGE).catch((err) => {\n              this.setState({fetchingMessages: false});\n              this.props.onError(err.message, 'err');\n            });\n          }\n        }\n        return newState;\n      });\n    }\n  }\n\n  handleDescChange(desc) {\n    if (desc.public) {\n      this.setState({\n        title: desc.public.fn,\n        avatar: makeImageUrl(desc.public.photo)\n      });\n    } else {\n      this.setState({\n        title: '',\n        avatar: null\n      });\n    }\n\n    if (desc.acs) {\n      this.setState({\n        isWriter: desc.acs.isWriter(),\n        isReader: desc.acs.isReader(),\n        readingBlocked: !desc.acs.isReader('given'),\n        unconfirmed: isUnconfirmed(desc.acs),\n      });\n    }\n  }\n\n  postReadNotification(seq) {\n    // Ignore notifications if the app is invisible.\n    if (!this.props.applicationVisible) {\n      return;\n    }\n\n    // Set up the timer if it's not running already.\n    if (!this.readNotificationTimer) {\n      this.readNotificationTimer = setInterval(() => {\n        if (this.readNotificationQueue.length == 0) {\n          // Shut down the timer if the queue is empty.\n          clearInterval(this.readNotificationTimer);\n          this.readNotificationTimer = null;\n          return;\n        }\n\n        let seq = -1;\n        while (this.readNotificationQueue.length > 0) {\n          const n = this.readNotificationQueue[0];\n          if (n.topicName != this.state.topic) {\n            // Topic has changed. Drop the notification.\n            this.readNotificationQueue.shift();\n            continue;\n          }\n\n          const now = new Date();\n          if (n.sendAt <= now) {\n            // Remove expired notification from queue.\n            this.readNotificationQueue.shift();\n            seq = Math.max(seq, n.seq);\n          } else {\n            break;\n          }\n        }\n\n        // Send only one notification for the whole batch of messages.\n        if (seq >= 0) {\n          const topic = this.props.tinode.getTopic(this.state.topic);\n          if (topic) {\n            topic.noteRead(seq);\n          }\n        }\n      }, NOTIFICATION_EXEC_INTERVAL);\n    }\n\n    const now = new Date();\n    this.readNotificationQueue.push({\n      topicName: this.state.topic,\n      seq: seq,\n      sendAt: now.setMilliseconds(now.getMilliseconds() + READ_DELAY)\n    });\n  }\n\n  // Clear notification queue and timer.\n  clearNotificationQueue() {\n    this.readNotificationQueue = [];\n    if (this.readNotificationTimer) {\n      clearInterval(this.readNotificationTimer);\n      this.readNotificationTimer = null;\n    }\n  }\n\n  handleSubsUpdated() {\n    if (this.state.topic) {\n      const subs = [];\n      const topic = this.props.tinode.getTopic(this.state.topic);\n      topic.subscribers((sub) => {\n        if (sub.online && sub.user != this.props.myUserId) {\n          subs.push(sub);\n        }\n      });\n      const newState = {onlineSubs: subs};\n      const peer = topic.p2pPeerDesc();\n      if (peer) {\n        Object.assign(newState, {\n          peerMessagingDisabled: isPeerRestricted(peer.acs)\n        });\n      } else if (this.state.peerMessagingDisabled) {\n        Object.assign(newState, {\n          peerMessagingDisabled: false\n        });\n      }\n      this.setState(newState);\n    }\n  }\n\n  handleNewMessage(msg) {\n    // Regenerate messages list\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    const newState = {messages: []};\n    topic.messages((m) => {\n      if (!m.deleted) {\n        newState.messages.push(m);\n      }\n    });\n\n    // msg could be null if one or more messages were deleted.\n    if (msg && !msg.deleted) {\n      // If the message is added to the end of the message list,\n      // scroll to the bottom.\n      if (topic.isNewMessage(msg.seq)) {\n        newState.scrollPosition = 0;\n      }\n\n      // Aknowledge messages except own messages. They are\n      // automatically assumed to be read and recived.\n      const status = topic.msgStatus(msg);\n      if (status >= Tinode.MESSAGE_STATUS_SENT && msg.from != this.props.myUserId) {\n        this.postReadNotification(msg.seq);\n      }\n      this.props.onData(msg);\n    }\n    this.setState(newState);\n  }\n\n  handleAllMessagesReceived(count) {\n    this.setState({fetchingMessages: false});\n    if (count > 0) {\n      // 0 means \"latest\".\n      this.postReadNotification(0);\n    }\n  }\n\n  handleInfoReceipt(info) {\n    switch (info.what) {\n      case 'kp': {\n        clearTimeout(this.keyPressTimer);\n        var instance = this;\n        this.keyPressTimer = setTimeout(function() {\n          instance.setState({typingIndicator: false});\n        }, KEYPRESS_DELAY + 1000);\n        if (!this.state.typingIndicator) {\n          this.setState({typingIndicator: true});\n        }\n        break;\n      }\n      case 'read':\n      case 'recv':\n        // Redraw due to changed recv/read status.\n        this.forceUpdate();\n        break;\n      default:\n        console.log(\"Other change in topic: \", info.what);\n    }\n  }\n\n  handleImagePostview(content) {\n    this.setState({ imagePostview: content });\n  }\n\n  handleClosePreview() {\n    if (this.state.imagePreview && this.state.imagePreview.url) {\n      URL.revokeObjectURL(this.state.imagePreview.url);\n    }\n    this.setState({ imagePostview: null, imagePreview: null, docPreview: null });\n  }\n\n  handleFormResponse(action, text, data) {\n    if (action == 'pub') {\n      this.props.sendMessage(Drafty.attachJSON(Drafty.parse(text), data));\n    } else if (action == 'url') {\n      const url = new URL(data.ref);\n      const params = url.searchParams;\n      for (let key in data.resp) {\n        if (data.resp.hasOwnProperty(key)) {\n          params.set(key, data.resp[key]);\n        }\n      }\n      ['name', 'seq'].map(function(key) {\n        if (data[key]) {\n          params.set(key, data[key]);\n        }\n      });\n      params.set('uid', this.props.myUserId);\n      url.search = params;\n      window.open(url, '_blank');\n    } else {\n      console.log(\"Unknown action in form\", action);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.state.topic, y: e.pageY, x: e.pageX });\n  }\n\n  handleShowContextMenuMessage(params, messageSpecificMenuItems) {\n    params.topicName = this.state.topic;\n    const menuItems = messageSpecificMenuItems || [];\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (topic) {\n      if (!topic.isChannel()) {\n        menuItems.push('message_delete');\n      }\n      const acs = topic.getAccessMode();\n      if (acs && acs.isDeleter()) {\n        menuItems.push('message_delete_hard');\n      }\n    }\n    this.props.showContextMenu(params, menuItems);\n  }\n\n  handleNewChatAcceptance(action) {\n    this.props.onNewChat(this.state.topic, action);\n  }\n\n  handleEnablePeer(e) {\n    e.preventDefault();\n    this.props.onChangePermissions(this.state.topic, DEFAULT_P2P_ACCESS_MODE, this.state.topic);\n  }\n\n  sendKeyPress() {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (topic.isSubscribed()) {\n      topic.noteKeyPress();\n    }\n  }\n\n  // Send attachment as Drafty message:\n  // - if file is too large, upload it and send a s link.\n  // - if file is small enough, just send it in-band.\n  sendFileAttachment(file) {\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (file.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      if (!uploader) {\n        this.props.onError(this.props.intl.formatMessage(messages.cannot_initiate_upload));\n        return;\n      }\n      const uploadCompletionPromise = uploader.upload(file);\n      const msg = Drafty.attachFile(null, {\n        mime: file.type,\n        filename: file.name,\n        size: file.size,\n        urlPromise: uploadCompletionPromise\n      });\n      // Pass data and the uploader to the TinodeWeb.\n      this.props.sendMessage(msg, uploadCompletionPromise, uploader);\n    } else {\n      // Small enough to send inband.\n      fileToBase64(file,\n        (mime, bits, fname) => {\n          this.props.sendMessage(Drafty.attachFile(null, {mime: mime, data: bits, filename: fname}));\n        },\n        this.props.onError\n      );\n    }\n  }\n\n  // handleAttachFile method is called when [Attach file] button is clicked.\n  handleAttachFile(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    if (file.size > maxExternAttachmentSize) {\n      // Too large.\n      this.props.onError(this.props.intl.formatMessage({id: 'file_attachment_too_large'},\n          {size: bytesToHumanSize(file.size), limit: bytesToHumanSize(maxExternAttachmentSize)}), 'err');\n    } else {\n      this.setState({ docPreview: {\n        file: file,\n        filename: file.name,\n        size: file.size,\n        type: file.type\n      }});\n    }\n  }\n\n  // sendImageAttachment sends the image bits inband as Drafty message.\n  sendImageAttachment(caption, blob) {\n    const mime = this.state.imagePreview.type;\n    const width = this.state.imagePreview.width;\n    const height = this.state.imagePreview.height;\n    const fname = this.state.imagePreview.filename;\n\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (blob.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      if (!uploader) {\n        this.props.onError(this.props.intl.formatMessage(messages.cannot_initiate_upload));\n        return;\n      }\n      const uploadCompletionPromise = uploader.upload(blob);\n\n      // Make small preview to show while uploading.\n      imageScaled(blob, IMAGE_PREVIEW_DIM, IMAGE_PREVIEW_DIM, -1, false,\n        (tinyBlob) => {\n          // Convert tiny image into base64 for serialization and previewing.\n          blobToBase64(tinyBlob, (blobMime, tinyBits64) => {\n            let msg = Drafty.insertImage(null, 0, {\n              mime: mime,\n              _tempPreview: tinyBits64, // This preview will not be serialized.\n              width: width,\n              height: height,\n              filename: fname,\n              size: blob.size,\n              urlPromise: uploadCompletionPromise\n            });\n            if (caption) {\n              msg = Drafty.appendLineBreak(msg);\n              msg = Drafty.append(msg, Drafty.init(caption));\n            }\n            // Pass data and the uploader to the TinodeWeb.\n            this.props.sendMessage(msg, uploadCompletionPromise, uploader);\n          }\n        )},\n        // Failure\n        (err) => {\n          this.props.onError(err, 'err');\n        }\n      );\n      return;\n    }\n\n    // Upload the image if it's too big to be send inband.\n    blobToBase64(blob, (blobMime, bits64) => {\n      let msg = Drafty.insertImage(null, 0, {\n        mime: blobMime,\n        preview: bits64, // Serializable preview\n        width: width,\n        height: height,\n        filename: fname,\n        size: blob.size\n      });\n      if (caption) {\n        msg = Drafty.appendLineBreak(msg);\n        msg = Drafty.append(msg, Drafty.init(caption));\n      }\n      this.props.sendMessage(msg);\n    });\n  }\n\n  // handleAttachImage method is called when [Attach image] button is clicked.\n  handleAttachImage(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    // Get image dimensions and size, optionally scale it down.\n    imageScaled(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, maxExternAttachmentSize, false,\n      // Success\n      (blob, mime, width, height, fname) => {\n        this.setState({imagePreview: {\n          url: URL.createObjectURL(blob),\n          blob: blob,\n          filename: fname,\n          width: width,\n          height: height,\n          size: blob.size,\n          type: mime\n        }});\n      },\n      // Failure\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    );\n  }\n\n  handleCancelUpload(seq, uploader) {\n    const found = this.state.messages.find(msg => msg.seq == seq);\n    if (found) {\n      found._cancelled = true;\n    }\n    uploader.cancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n\n    let component;\n    if (this.props.hideSelf) {\n      component = null;\n    } else if (!this.state.topic) {\n      component = (\n        <LogoView\n          serverVersion={this.props.serverVersion}\n          serverAddress={this.props.serverAddress} />\n      );\n    } else {\n      let component2;\n      if (this.state.imagePreview) {\n        // Preview image before sending.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePreview}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendImageAttachment} />\n        );\n      } else if (this.state.imagePostview) {\n        // Expand received image.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePostview}\n            onClose={this.handleClosePreview} />\n        );\n      } else if (this.state.docPreview) {\n        // Preview attachment before sending.\n        component2 = (\n          <DocPreview\n            content={this.state.docPreview}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendFileAttachment} />\n        );\n      } else {\n        const topic = this.props.tinode.getTopic(this.state.topic);\n        const isChannel = topic.isChannel();\n        const groupTopic = topic.getType() == 'grp' && !isChannel;\n        let messageNodes = [];\n        let previousFrom = null;\n        let chatBoxClass = null;\n        for (let i=0; i<this.state.messages.length; i++) {\n          let msg = this.state.messages[i];\n          let nextFrom = null;\n\n          if (i + 1 < this.state.messages.length) {\n            nextFrom = this.state.messages[i+1].from || 'chan';\n          }\n\n          let sequence = 'single';\n          let thisFrom = msg.from || 'chan';\n          if (thisFrom == previousFrom) {\n            if (thisFrom == nextFrom) {\n              sequence = 'middle';\n            } else {\n              sequence = 'last';\n            }\n          } else if (thisFrom == nextFrom) {\n            sequence = 'first';\n          }\n          previousFrom = thisFrom;\n\n          const isReply = !(thisFrom == this.props.myUserId);\n          const deliveryStatus = topic.msgStatus(msg);\n\n          let userName, userAvatar, userFrom;\n          if (groupTopic) {\n            const user = topic.userDesc(thisFrom);\n            if (user && user.public) {\n              userName = user.public.fn;\n              userAvatar = makeImageUrl(user.public.photo);\n            }\n            userFrom = thisFrom;\n            chatBoxClass='chat-box group';\n          } else {\n            chatBoxClass='chat-box';\n          }\n\n          messageNodes.push(\n            <ChatMessage\n              tinode={this.props.tinode}\n              content={msg.content}\n              deleted={msg.hi}\n              mimeType={msg.head ? msg.head.mime : null}\n              timestamp={msg.ts}\n              response={isReply}\n              seq={msg.seq}\n              userFrom={userFrom}\n              userName={userName}\n              userAvatar={userAvatar}\n              sequence={sequence}\n              received={deliveryStatus}\n              uploader={msg._uploader}\n              viewportWidth={this.props.viewportWidth}\n              showContextMenu={this.state.channel? false : this.handleShowContextMenuMessage}\n              onImagePreview={this.handleImagePostview}\n              onFormResponse={this.handleFormResponse}\n              onError={this.props.onError}\n              onCancelUpload={this.handleCancelUpload}\n              key={msg.seq} />\n          );\n        }\n\n        let lastSeen = null;\n        if (isChannel) {\n          lastSeen = formatMessage(messages.channel);\n        } else {\n          const cont = this.props.tinode.getMeTopic().getContact(this.state.topic);\n          if (cont && Tinode.isP2PTopicName(cont.topic)) {\n            if (cont.online) {\n              lastSeen = formatMessage(messages.online_now);\n            } else if (cont.seen) {\n              lastSeen = formatMessage(messages.last_seen) + \": \" +\n                shortDateFormat(cont.seen.when, this.props.intl.locale);\n              // TODO: also handle user agent in c.seen.ua\n            }\n          }\n        }\n        const avatar = this.state.avatar || true;\n        const online = this.props.online ? 'online' + (this.state.typingIndicator ? ' typing' : '') : 'offline';\n\n        component2 = (\n          <>\n            <div id=\"topic-caption-panel\" className=\"caption-panel\">\n              {this.props.displayMobile ?\n                <a href=\"#\" id=\"hide-message-view\" onClick={(e) => {e.preventDefault(); this.props.onHideMessagesView();}}>\n                  <i className=\"material-icons\">arrow_back</i>\n                </a>\n                :\n                null}\n              <div className=\"avatar-box\">\n                <LetterTile\n                  avatar={avatar}\n                  topic={this.state.topic}\n                  title={this.state.title} />\n                {!isChannel ? <span className={online} /> : null}\n              </div>\n              <div id=\"topic-title-group\">\n                <div id=\"topic-title\" className=\"panel-title\">{\n                  this.state.title ||\n                  <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n                    description=\"Title shown when the topic has no name\" /></i>\n                }</div>\n                <div id=\"topic-last-seen\">{lastSeen}</div>\n              </div>\n              {groupTopic ?\n                <GroupSubs\n                  subscribers={this.state.onlineSubs} /> :\n                <div id=\"topic-users\" />\n              }\n              <div>\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">more_vert</i>\n                </a>\n              </div>\n            </div>\n            {this.props.displayMobile ?\n              <ErrorPanel\n                level={this.props.errorLevel}\n                text={this.props.errorText}\n                onClearError={this.props.onError} />\n              : null}\n            <LoadSpinner show={this.state.fetchingMessages} />\n            <div id=\"messages-container\">\n              <div id=\"messages-panel\" ref={this.handleScrollReference}>\n                <ul id=\"scroller\" className={chatBoxClass}>\n                  {messageNodes}\n                </ul>\n              </div>\n              {!this.state.isReader ?\n              <div id=\"write-only-background\">\n                {this.state.readingBlocked ?\n                <div id=\"write-only-note\">\n                  <FormattedMessage id=\"messages_not_readable\" defaultMessage=\"no access to messages\"\n                    description=\"Message shown in topic without the read access\" />\n                </div>\n                : null }\n              </div>\n              : null }\n            </div>\n            {this.state.peerMessagingDisabled && !this.state.unconfirmed ?\n              <div id=\"peer-messaging-disabled-note\">\n                <i className=\"material-icons secondary\">block</i> <FormattedMessage\n                  id=\"peers_messaging_disabled\" defaultMessage=\"Peer's messaging is disabled.\"\n                  description=\"Shown when the p2p peer's messaging is disabled\" /> <a href=\"#\"\n                    onClick={this.handleEnablePeer}><FormattedMessage id=\"enable_peers_messaging\"\n                    defaultMessage=\"Enable\" description=\"Call to action to enable peer's messaging\" /></a>.\n              </div> : null}\n            {this.state.unconfirmed ?\n              <Invitation onAction={this.handleNewChatAcceptance} />\n              :\n              <SendMessage\n                disabled={!this.state.isWriter}\n                onSendMessage={this.props.sendMessage}\n                onKeyPress={this.sendKeyPress}\n                onAttachFile={this.handleAttachFile}\n                onAttachImage={this.handleAttachImage}\n                onError={this.props.onError} />}\n          </>\n        );\n      }\n\n      component = <div id=\"topic-view\">{component2}</div>\n    }\n    return component;\n  }\n};\n\nexport default injectIntl(MessagesView);\n","// Create new topic and invite users or send an invite.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport ContactList from '../widgets/contact-list.jsx';\nimport NewTopicById from '../widgets/new-topic-by-id.jsx';\nimport NewTopicGroup from '../widgets/new-topic-group.jsx';\nimport SearchContacts from '../widgets/search-contacts.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\nimport { vcard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  search_for_contacts: {\n    id: \"search_for_contacts\",\n    defaultMessage: \"Use search to find contacts\",\n    description: \"Text shown in contacts view when user entered no search query.\"\n  },\n  search_no_results: {\n    id: \"search_no_results\",\n    defaultMessage: \"Search returned no results\",\n    description: \"Text shown in contacts view when query returned no results.\"\n  }\n});\n\nclass NewTopicView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tabSelected: 'p2p',\n      searchQuery: null\n    };\n\n    this.handleTabClick = this.handleTabClick.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleNewGroupSubmit = this.handleNewGroupSubmit.bind(this);\n    this.handleGroupByID = this.handleGroupByID.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.onInitFind();\n  }\n\n  handleTabClick(e) {\n    e.preventDefault();\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'tab', e.currentTarget.dataset.id));\n    this.setState({tabSelected: e.currentTarget.dataset.id});\n  }\n\n  handleSearchContacts(query) {\n    this.props.onSearchContacts(query);\n    this.setState({searchQuery: Tinode.isNullValue(query) ? null : query});\n  }\n\n  handleContactSelected(sel) {\n    if (this.state.tabSelected === 'p2p') {\n      HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n      this.props.onCreateTopic(sel);\n    }\n  }\n\n  handleNewGroupSubmit(name, dataUrl, priv, tags, isChannel) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(undefined, vcard(name, dataUrl), priv, tags, isChannel);\n  }\n\n  handleGroupByID(topicName) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(topicName);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const no_contacts_placeholder = formatMessage(this.state.searchQuery ?\n      messages.search_no_results : messages.search_for_contacts);\n    return (\n      <div className=\"flex-column\">\n        <ul className=\"tabbar\">\n          <li className={this.state.tabSelected === \"p2p\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"p2p\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_find_user\" defaultMessage=\"find\"\n                description=\"Tab title Find\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"grp\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"grp\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_new_group\" defaultMessage=\"new group\"\n                description=\"Tab title New Group\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"byid\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"byid\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_group_by_id\" defaultMessage=\"by id\"\n                description=\"Tab title Find topic by ID\" />\n            </a>\n          </li>\n        </ul>\n        {this.state.tabSelected === 'grp' ?\n          <NewTopicGroup\n            tinode={this.props.tinode}\n            onSubmit={this.handleNewGroupSubmit} /> :\n          this.state.tabSelected === 'byid' ?\n            <NewTopicById\n              onSubmit={this.handleGroupByID}\n              onError={this.props.onError} /> :\n            <div className=\"flex-column\">\n              <SearchContacts\n                type=\"p2p\"\n                onSearchContacts={this.handleSearchContacts} />\n              <ContactList\n                contacts={this.props.searchResults}\n                myUserId={this.props.myUserId}\n                emptyListMessage={no_contacts_placeholder}\n                showOnline={false}\n                showUnread={false}\n                showContextMenu={false}\n                onTopicSelected={this.handleContactSelected} />\n            </div>}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicView);\n","// A password reset form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\n\nexport default class PasswordResetView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n  }\n\n  componentDidMount() {\n    let parsed = HashNavigation.parseUrlHash(window.location.hash);\n    this.setState({token: parsed.params.token, scheme: parsed.params.scheme});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.token) {\n      this.props.onReset(this.state.scheme, this.state.password.trim(), this.state.token);\n    } else {\n      this.props.onRequest('email', this.state.email.trim());\n    }\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  render() {\n    let reset = (this.state.token && this.state.scheme);\n    return (\n      <form id=\"password-reset-form\" onSubmit={this.handleSubmit}>\n        {reset ?\n          <FormattedMessage id=\"new_password_placeholder\" defaultMessage=\"Enter new password\"\n            description=\"Placeholder for entering new password\">{\n            (placeholder) => <VisiblePassword\n              placeholder={placeholder}\n              autoComplete=\"new-password\"\n              value={this.state.password}\n              required={true} autoFocus={true}\n              onChange={this.handlePasswordChange} />\n          }</FormattedMessage>\n          :\n          <>\n            <label htmlFor=\"inputEmail\">\n              <FormattedMessage id=\"label_reset_password\"\n                defaultMessage=\"Send a password reset email:\"\n                description=\"Label for password reset field\" />\n            </label>\n            <FormattedMessage id=\"credential_email_prompt\" defaultMessage=\"Your registration email\"\n              description=\"Placeholder for entering email\">{\n              (placeholder) => <input type=\"email\" id=\"inputEmail\"\n                placeholder={placeholder}\n                autoComplete=\"email\"\n                value={this.state.email}\n                onChange={this.handleEmailChange}\n                required autoFocus />\n            }</FormattedMessage>\n          </>\n        }\n        <div className=\"dialog-buttons\">\n          <button className=\"blue\" type=\"submit\">{reset ?\n            <FormattedMessage id=\"button_reset\" defaultMessage=\"Reset\" description=\"Button [Reset]\" /> :\n            <FormattedMessage id=\"button_send_request\" defaultMessage=\"Send request\"\n              description=\"Button [Send request]\" />\n          }</button>\n        </div>\n      </form>\n    );\n  }\n}\n","// Tinode config panel.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport HostSelector from '../widgets/host-selector.jsx';\n\nexport default class SettingsView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transport: props.transport || 'def',\n      serverAddress: props.serverAddress,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleTransportSelected = this.handleTransportSelected.bind(this);\n    this.handleServerAddressChange = this.handleServerAddressChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onUpdate({\n      transport: this.state.transport,\n      serverAddress: this.state.serverAddress\n    });\n  }\n\n  handleTransportSelected(e) {\n    this.setState({transport: e.currentTarget.value});\n  }\n\n  handleServerAddressChange(name) {\n    this.setState({serverAddress: name});\n  }\n\n  render() {\n    const names = {def: \"default\", ws: \"websocket\", lp: \"long polling\"};\n    var transportOptions = [];\n    var instance = this;\n    ['def', 'ws', 'lp'].map(function(item) {\n      var id = 'transport-' + item;\n      var name = names[item];\n      transportOptions.push(\n        <li key={item}>\n          <input type=\"radio\" id={id} name=\"transport-select\" value={item}\n            checked={instance.state.transport === item}\n            onChange={instance.handleTransportSelected} />\n          <label htmlFor={id}>{name}</label>\n        </li>\n      );\n    });\n\n    return (\n      <form id=\"settings-form\" className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_server_to_use\" defaultMessage=\"Server to use:\"\n              description=\"Label for server selector in SettingsView\" />\n          </label>\n        </div>\n        <HostSelector serverAddress={this.state.serverAddress}\n          onServerAddressChange={this.handleServerAddressChange} />\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_wire_transport\" defaultMessage=\"Wire transport:\"\n              description=\"Label for wire transport selection in SettingsView\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ul className=\"quoted\">\n            {transportOptions}\n          </ul>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button type=\"submit\" className=\"blue\">\n            <FormattedMessage id=\"button_update\" defaultMessage=\"Update\"\n              description=\"Button [Update]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport SideNavbar from '../widgets/side-navbar.jsx';\n\nimport ContactsView from './contacts-view.jsx';\nimport CreateAccountView from './create-account-view.jsx';\nimport EditAccountView from './edit-account-view.jsx';\nimport AccGeneralView from './acc-general-view.jsx';\nimport AccNotificationsView from './acc-notifications-view.jsx';\nimport AccSecurityView from './acc-security-view.jsx';\nimport AccSupportView from './acc-support-view.jsx';\nimport LoginView from './login-view.jsx';\nimport NewTopicView from './new-topic-view.jsx';\nimport PasswordResetView from './password-reset-view.jsx';\nimport SettingsView from './settings-view.jsx';\nimport ValidationView from './validation-view.jsx';\n\n// Panel titles for translation.\nconst messages = defineMessages({\n  'login': {\n    id: 'sidepanel_title_login',\n    description: 'Sidepanel title for LoginView.',\n    defaultMessage: 'Sign In'\n  },\n  'register': {\n    id: 'sidepanel_title_register',\n    description: 'Sidepanel title for CreateAccountView.',\n    defaultMessage: 'Create Account'\n  },\n  'settings': {\n    id: 'sidepanel_title_settings',\n    description: 'Sidepanel title for SettingsView.',\n    defaultMessage: 'Settings'\n  },\n  'edit': {\n    id: 'sidepanel_title_account_settings',\n    description: 'Sidepanel title for EditAccountView.',\n    defaultMessage: 'Account Settings'\n  },\n  'general': {\n    id: 'sidepanel_title_acc_general',\n    description: 'Sidepanel title for AccGeneralView.',\n    defaultMessage: 'General'\n  },\n  'security': {\n    id: 'sidepanel_title_acc_security',\n    description: 'Sidepanel title for AccSecurityView.',\n    defaultMessage: 'Security'\n  },\n  'notif': {\n    id: 'sidepanel_title_acc_notifications',\n    description: 'Sidepanel title for AccNotificationsView.',\n    defaultMessage: 'Notifications'\n  },\n  'support': {\n    id: 'sidepanel_title_acc_support',\n    description: 'Sidepanel title for AccSupportView.',\n    defaultMessage: 'Support'\n  },\n  'newtpk': {\n    id: 'sidepanel_title_newtpk',\n    description: 'Sidepanel title for NewTopicView.',\n    defaultMessage: 'Start New Chat'\n  },\n  'cred': {\n    id: 'sidepanel_title_cred',\n    description: 'Sidepanel title for ValidationView.',\n    defaultMessage: 'Confirm Credentials'\n  },\n  'reset': {\n    id: 'sidepanel_title_reset',\n    description: 'Sidepanel title for PasswordResetView.',\n    defaultMessage: 'Reset Password'\n  },\n  'archive': {\n    id: 'sidepanel_title_archive',\n    description: 'Sidepanel title for ContactsView-Archive.',\n    defaultMessage: 'Archived Chats'\n  },\n  'blocked': {\n    id: 'sidepanel_title_blocked',\n    description: 'Sidepanel title for ContactsView-Blocked.',\n    defaultMessage: 'Blocked Chats'\n  }\n});\n\nclass SidepanelView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleLoginRequested = this.handleLoginRequested.bind(this);\n    this.handleNewTopic = this.handleNewTopic.bind(this);\n  }\n\n  handleLoginRequested(login, password) {\n    this.props.onLoginRequest(login, password);\n  }\n\n  handleNewTopic() {\n    this.props.onBasicNavigate('newtpk');\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const view = this.props.state || (this.props.myUserId ? 'contacts' : 'login');\n\n    let title, avatar;\n    if (view == 'contacts') {\n      title = this.props.title;\n      avatar = this.props.avatar ? this.props.avatar : true;\n    } else {\n      title = formatMessage(messages[view]);\n      avatar = false;\n    }\n\n    let onCancel;\n    if (['login', 'contacts'].indexOf(view) == -1) {\n      onCancel = this.props.onCancel;\n    }\n\n    return (\n      <div id=\"sidepanel\" className={this.props.hideSelf ? 'nodisplay' : null}>\n        <SideNavbar\n          state={view}\n          title={title}\n          avatar={avatar}\n          myUserId={this.props.myUserId}\n          onSignUp={this.props.onSignUp}\n          onSettings={this.props.onSettings}\n          onNewTopic={this.handleNewTopic}\n          onCancel={onCancel} />\n\n        <ErrorPanel\n          level={this.props.errorLevel}\n          text={this.props.errorText}\n          action={this.props.errorAction}\n          actionText={this.props.errorActionText}\n          onClearError={this.props.onError} />\n\n        <LoadSpinner show={this.props.loadSpinnerVisible} />\n\n        {view === 'login' ?\n          <LoginView\n            login={this.props.login}\n            disabled={this.props.loginDisabled}\n            onLogin={this.handleLoginRequested} /> :\n\n          view === 'register' ?\n          <CreateAccountView\n            onCreateAccount={this.props.onCreateAccount}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'settings' ?\n          <SettingsView\n            transport={this.props.transport}\n            serverAddress={this.props.serverAddress}\n            onCancel={this.props.onCancel}\n            onUpdate={this.props.onGlobalSettings} /> :\n\n          view === 'edit' ?\n          <EditAccountView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            onBasicNavigate={this.props.onBasicNavigate} /> :\n\n          view === 'general' ?\n          <AccGeneralView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            onUpdateAccount={this.props.onUpdateAccount}\n            onUpdateTags={this.props.onUpdateAccountTags}\n            onCredAdd={this.props.onCredAdd}\n            onCredDelete={this.props.onCredDelete}\n            onCredConfirm={this.props.onCredConfirm}\n            onBasicNavigate={this.props.onBasicNavigate}\n            onError={this.props.onError} /> :\n\n          view === 'notif' ?\n          <AccNotificationsView\n            messageSounds={this.props.messageSounds}\n            desktopAlerts={this.props.desktopAlerts}\n            desktopAlertsEnabled={this.props.desktopAlertsEnabled}\n            incognitoMode={this.props.incognitoMode}\n            onTogglePushNotifications={this.props.onTogglePushNotifications}\n            onToggleMessageSounds={this.props.onToggleMessageSounds}\n            onToggleIncognitoMode={this.props.onToggleIncognitoMode} /> :\n\n          view === 'security' ?\n          <AccSecurityView\n            tinode={this.props.tinode}\n            onUpdateAccount={this.props.onUpdateAccount}\n            onLogout={this.props.onLogout}\n            onDeleteAccount={this.props.onDeleteAccount}\n            onShowAlert={this.props.onShowAlert}\n            onShowBlocked={this.props.onShowBlocked} /> :\n\n          view === 'support' ?\n          <AccSupportView\n            serverAddress={this.props.serverAddress}\n            serverVersion={this.props.serverVersion} /> :\n\n          (view === 'contacts' || view == 'archive' || view == 'blocked') ?\n          <ContactsView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            connected={this.props.connected}\n            topicSelected={this.props.topicSelected}\n            archive={view == 'archive'}\n            blocked={view == 'blocked'}\n            chatList={this.props.chatList}\n            showContextMenu={this.props.showContextMenu}\n            onTopicSelected={this.props.onTopicSelected}\n            onShowArchive={this.props.onShowArchive} /> :\n\n          view === 'newtpk' ?\n          <NewTopicView\n            tinode={this.props.tinode}\n            searchResults={this.props.searchResults}\n            onInitFind={this.props.onInitFind}\n            onSearchContacts={this.props.onSearchContacts}\n            onCreateTopic={this.props.onCreateTopic}\n            onError={this.props.onError} /> :\n\n          view === 'cred' ?\n          <ValidationView\n            credCode={this.props.credCode}\n            credMethod={this.props.credMethod}\n            onSubmit={this.props.onValidateCredentials}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'reset' ?\n          <PasswordResetView\n            onRequest={this.props.onPasswordResetRequest}\n            onReset={this.props.onResetPassword} /> :\n          null}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SidepanelView);\n","// The top-level class to hold all functionality together.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport * as firebase from 'firebase/app';\nimport 'firebase/messaging';\n\nimport Tinode from 'tinode-sdk';\n\nimport Alert from '../widgets/alert.jsx';\nimport ContextMenu from '../widgets/context-menu.jsx';\n\nimport InfoView from './info-view.jsx';\nimport MessagesView from './messages-view.jsx';\nimport SidepanelView from './sidepanel-view.jsx';\n\nimport { API_KEY, APP_NAME, DEFAULT_P2P_ACCESS_MODE, LOGGING_ENABLED,\n  MEDIA_BREAKPOINT, RECEIVED_DELAY } from '../config.js';\nimport { base64ReEncode, makeImageUrl } from '../lib/blob-helpers.js';\nimport { detectServerAddress, isLocalHost, isSecureConnection } from '../lib/host-name.js';\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { secondsToTime } from '../lib/strformat.js'\nimport { updateFavicon } from '../lib/utils.js';\n\n// Sound to play on message received.\nconst POP_SOUND = new Audio('audio/msg.mp3');\n\nconst messages = defineMessages({\n  reconnect_countdown: {\n    id: 'reconnect_countdown',\n    defaultMessage: 'Disconnected. Reconnecting in {seconds}…',\n    description: 'Message shown when an app update is available.'\n  },\n  reconnect_now: {\n    id: 'reconnect_now',\n    defaultMessage: 'Try now',\n    description: 'Prompt for reconnecting now'\n  },\n  push_init_failed: {\n    id: 'push_init_failed',\n    defaultMessage: 'Failed to initialize push notifications',\n    description: 'Error message when push notifications have failed to initialize.'\n  },\n  invalid_security_token: {\n    id: 'invalid_security_token',\n    defaultMessage: 'Invalid security token',\n    description: 'Error message when resetting password.'\n  },\n  no_connection: {\n    id: 'no_connection',\n    defaultMessage: 'No connection',\n    description: 'Warning that the user is offline.'\n  },\n  code_doesnot_match: {\n    id: 'code_doesnot_match',\n    defaultMessage: 'Code does not match',\n    description: 'Error message when the credential validation code is incorrect.'\n  }\n});\n\nclass TinodeWeb extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = this.getBlankState();\n\n    this.handleResize = this.handleResize.bind(this);\n    this.handleHashRoute = this.handleHashRoute.bind(this);\n    this.handleOnline = this.handleOnline.bind(this);\n    this.checkForAppUpdate = this.checkForAppUpdate.bind(this);\n    this.handleVisibilityEvent = this.handleVisibilityEvent.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.handleLoginRequest = this.handleLoginRequest.bind(this);\n    this.handleConnected = this.handleConnected.bind(this);\n    this.handleAutoreconnectIteration = this.handleAutoreconnectIteration.bind(this);\n    this.doLogin = this.doLogin.bind(this);\n    this.handleCredentialsRequest = this.handleCredentialsRequest.bind(this);\n    this.handleLoginSuccessful = this.handleLoginSuccessful.bind(this);\n    this.handleDisconnect = this.handleDisconnect.bind(this);\n    this.tnMeMetaDesc = this.tnMeMetaDesc.bind(this);\n    this.tnMeContactUpdate = this.tnMeContactUpdate.bind(this);\n    this.tnMeSubsUpdated = this.tnMeSubsUpdated.bind(this);\n    this.resetContactList = this.resetContactList.bind(this);\n    this.tnData = this.tnData.bind(this);\n    this.tnInitFind = this.tnInitFind.bind(this);\n    this.tnFndSubsUpdated = this.tnFndSubsUpdated.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleTopicSelected = this.handleTopicSelected.bind(this);\n    this.handleHideMessagesView = this.handleHideMessagesView.bind(this);\n    this.handleSendMessage = this.handleSendMessage.bind(this);\n    this.handleNewChatInvitation = this.handleNewChatInvitation.bind(this);\n    this.handleNewAccount = this.handleNewAccount.bind(this);\n    this.handleNewAccountRequest = this.handleNewAccountRequest.bind(this);\n    this.handleUpdateAccountRequest = this.handleUpdateAccountRequest.bind(this);\n    this.handleUpdateAccountTagsRequest = this.handleUpdateAccountTagsRequest.bind(this);\n    this.handleToggleIncognitoMode = this.handleToggleIncognitoMode.bind(this);\n    this.handleSettings = this.handleSettings.bind(this);\n    this.handleGlobalSettings = this.handleGlobalSettings.bind(this);\n    this.handleShowArchive = this.handleShowArchive.bind(this);\n    this.handleShowBlocked = this.handleShowBlocked.bind(this);\n    this.handleToggleMessageSounds = this.handleToggleMessageSounds.bind(this);\n    this.handleCredAdd = this.handleCredAdd.bind(this);\n    this.handleCredDelete = this.handleCredDelete.bind(this);\n    this.handleCredConfirm = this.handleCredConfirm.bind(this);\n    this.initDesktopAlerts = this.initDesktopAlerts.bind(this);\n    this.togglePushToken = this.togglePushToken.bind(this);\n    this.requestPushToken = this.requestPushToken.bind(this);\n    this.handleSidepanelCancel = this.handleSidepanelCancel.bind(this);\n    this.handleStartTopicRequest = this.handleStartTopicRequest.bind(this);\n    this.handleNewTopicCreated = this.handleNewTopicCreated.bind(this);\n    this.handleTopicUpdateRequest = this.handleTopicUpdateRequest.bind(this);\n    this.handleChangePermissions = this.handleChangePermissions.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n    this.handleDeleteMessagesRequest = this.handleDeleteMessagesRequest.bind(this);\n    this.handleLeaveUnsubRequest = this.handleLeaveUnsubRequest.bind(this);\n    this.handleBlockTopicRequest = this.handleBlockTopicRequest.bind(this);\n    this.handleReportTopic = this.handleReportTopic.bind(this);\n    this.handleShowContextMenu = this.handleShowContextMenu.bind(this);\n    this.defaultTopicContextMenu = this.defaultTopicContextMenu.bind(this);\n    this.handleHideContextMenu = this.handleHideContextMenu.bind(this);\n    this.handleShowAlert = this.handleShowAlert.bind(this);\n    this.handleShowInfoView = this.handleShowInfoView.bind(this);\n    this.handleHideInfoView = this.handleHideInfoView.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleValidateCredentialsRequest = this.handleValidateCredentialsRequest.bind(this);\n    this.handlePasswordResetRequest = this.handlePasswordResetRequest.bind(this);\n    this.handleResetPassword = this.handleResetPassword.bind(this);\n    this.handleContextMenuAction = this.handleContextMenuAction.bind(this);\n  }\n\n  getBlankState() {\n    const settings = LocalStorageUtil.getObject('settings') || {};\n\n    return {\n      connected: false,\n      // Connected and subscribed to 'me'\n      ready: false,\n      // Try to re-login on new connection.\n      autoLogin: false,\n      transport: settings.transport || null,\n      serverAddress: settings.serverAddress || detectServerAddress(),\n      serverVersion: \"no connection\",\n      // \"On\" is the default, so saving the \"off\" state.\n      messageSounds: !settings.messageSoundsOff,\n      incognitoMode: false,\n      desktopAlerts: settings.desktopAlerts,\n      desktopAlertsEnabled: (isSecureConnection() || isLocalHost()) &&\n        (typeof firebase != 'undefined') && (typeof navigator != 'undefined') &&\n        (typeof FIREBASE_INIT != 'undefined'),\n      firebaseToken: LocalStorageUtil.getObject('firebase-token'),\n\n      applicationVisible: !document.hidden,\n\n      errorText: '',\n      errorLevel: null,\n      errorAction: undefined,\n      errorActionText: null,\n\n      sidePanelSelected: 'login',\n      sidePanelTitle: null,\n      sidePanelAvatar: null,\n      loadSpinnerVisible: false,\n\n      login: '',\n      password: '',\n      myUserId: null,\n      liveConnection: navigator.onLine,\n      topicSelected: '',\n      topicSelectedOnline: false,\n      topicSelectedAcs: null,\n      newTopicParams: null,\n      loginDisabled: false,\n      displayMobile: (window.innerWidth <= MEDIA_BREAKPOINT),\n      showInfoPanel: false,\n      mobilePanel: 'sidepanel',\n\n      contextMenuVisible: false,\n      contextMenuBounds: null,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuItems: [],\n\n      // Modal alert dialog.\n      alertVisible: false,\n      alertParams: {},\n\n      // Chats as shown in the ContactsView\n      chatList: [],\n      // Contacts returned by a search query.\n      searchResults: [],\n      // Merged results of a search query and p2p chats.\n      searchableContacts: [],\n      credMethod: undefined,\n      credCode: undefined\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    window.addEventListener('online', (e) => { this.handleOnline(true); });\n    window.addEventListener('offline', (e) => { this.handleOnline(false); });\n    window.addEventListener('hashchange', this.handleHashRoute);\n    // Window/tab visible or invisible for pausing timers.\n    document.addEventListener('visibilitychange', this.handleVisibilityEvent);\n\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n\n    const {formatMessage, locale} = this.props.intl;\n    this.tinode = TinodeWeb.tnSetup(this.state.serverAddress, this.state.transport, locale);\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n\n    // Initialize desktop alerts.\n    if (this.state.desktopAlertsEnabled) {\n      try {\n        this.fbPush = firebase.initializeApp(FIREBASE_INIT, APP_NAME).messaging();\n        this.fbPush.usePublicVapidKey(FIREBASE_INIT.messagingVapidKey);\n        navigator.serviceWorker.register('/service-worker.js').then((reg) => {\n          this.checkForAppUpdate(reg);\n          this.fbPush.useServiceWorker(reg);\n          reg.active.postMessage(JSON.stringify({locale: locale}));\n          this.initDesktopAlerts();\n          if (this.state.desktopAlerts) {\n            if (!this.state.firebaseToken) {\n              this.togglePushToken(true);\n            } else {\n              this.tinode.setDeviceToken(this.state.firebaseToken, true);\n            }\n          }\n        }).catch((err) => {\n          // registration failed :(\n          console.log(\"Failed to register service worker:\", err);\n        });\n      } catch (err) {\n        this.handleError(formatMessage(messages.push_init_failed), 'err');\n        console.log(\"Failed to initialize push notifications\", err);\n        this.setState({desktopAlertsEnabled: false});\n      }\n    }\n\n    const token = LocalStorageUtil.getObject('keep-logged-in') ?\n      LocalStorageUtil.getObject('auth-token') : undefined;\n\n    const parsedNav = HashNavigation.parseUrlHash(window.location.hash);\n    if (token) {\n      this.setState({autoLogin: true});\n\n      // When reading from storage, date is returned as string.\n      token.expires = new Date(token.expires);\n      this.tinode.setAuthToken(token);\n      this.tinode.connect().catch((err) => {\n        // Socket error\n        this.handleError(err.message, 'err');\n      });\n      delete parsedNav.params.info;\n      delete parsedNav.params.tab;\n      parsedNav.path[0] = '';\n      HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsedNav.path, parsedNav.params));\n    } else if (!parsedNav.params.token) {\n      HashNavigation.navigateTo('');\n    }\n\n    this.readTimer = null;\n    this.readTimerCallback = null;\n\n    this.handleHashRoute();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n    window.removeEventListener('hashchange', this.handleHashRoute);\n    document.removeEventListener('visibilitychange', this.handleVisibilityEvent);\n  }\n\n  // Setup transport (usually websocket) and server address. This will terminate connection with the server.\n  static tnSetup(serverAddress, transport, locale) {\n    const tinode = new Tinode(APP_NAME, serverAddress, API_KEY, transport, isSecureConnection());\n    tinode.setHumanLanguage(locale);\n    tinode.enableLogging(LOGGING_ENABLED, true);\n    return tinode;\n  }\n\n  handleResize() {\n    const mobile = document.documentElement.clientWidth <= MEDIA_BREAKPOINT;\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n    if (this.state.displayMobile != mobile) {\n      this.setState({displayMobile: mobile});\n    }\n  }\n\n  // Check if a newer version of TinodeWeb app is available at the server.\n  checkForAppUpdate(reg) {\n    reg.onupdatefound = () => {\n      const installingWorker = reg.installing;\n      installingWorker.onstatechange = () => {\n        if (installingWorker.state == 'installed' && navigator.serviceWorker.controller) {\n          const msg = <>\n            <FormattedMessage id=\"update_available\"\n              defaultMessage=\"Update available.\"\n              description=\"Message shown when an app update is available.\" /> <a href=\"\">\n              <FormattedMessage id=\"reload_update\"\n                defaultMessage=\"Reload\"\n                description=\"Call to action to reload application when update is available.\" />\n            </a>.</>;\n          this.handleError(msg, 'info');\n        }\n      }\n    }\n  }\n\n  // Handle for hashchange event: display appropriate panels.\n  handleHashRoute() {\n    const hash = HashNavigation.parseUrlHash(window.location.hash);\n    if (hash.path && hash.path.length > 0) {\n      // Left-side panel selector.\n      if (['register','settings','edit','notif','security','support','general',\n          'cred','reset','newtpk','archive','blocked','contacts',''].includes(hash.path[0])) {\n        this.setState({sidePanelSelected: hash.path[0]});\n      } else {\n        console.log(\"Unknown sidepanel view\", hash.path[0]);\n      }\n\n      // Topic for MessagesView selector.\n      if (hash.path.length > 1 && hash.path[1] != this.state.topicSelected) {\n        this.setState({\n          topicSelected: Tinode.topicType(hash.path[1]) ? hash.path[1] : null\n        });\n      }\n    } else {\n      // Empty hashpath\n      this.setState({sidePanelSelected: ''});\n    }\n\n    // Save validation credentials, if available.\n    if (hash.params.method) {\n      this.setState({ credMethod: hash.params.method });\n    }\n    if (hash.params.code) {\n      this.setState({ credCode: hash.params.code });\n    }\n\n    // Additional parameters of panels.\n    this.setState({\n      showInfoPanel: hash.params.info,\n      newTopicTabSelected: hash.params.tab\n    });\n  }\n\n  handleOnline(online) {\n    if (online) {\n      this.handleError();\n    } else {\n      this.handleError(this.props.intl.formatMessage(messages.no_connection), 'warn');\n    }\n    this.setState({liveConnection: online});\n  }\n\n  handleVisibilityEvent() {\n    this.setState({applicationVisible: !document.hidden});\n  }\n\n  handleError(err, level, action, actionText) {\n    this.setState({errorText: err, errorLevel: level, errorAction: action, errorActionText: actionText});\n  }\n\n  // User clicked Login button in the side panel.\n  handleLoginRequest(login, password) {\n    this.setState({\n      loginDisabled: true,\n      login: login,\n      password: password,\n      loadSpinnerVisible: true,\n      autoLogin: true\n    });\n    this.handleError('', null);\n\n    if (this.tinode.isConnected()) {\n      this.doLogin(login, password, {meth: this.state.credMethod, resp: this.state.credCode});\n    } else {\n      this.tinode.connect().catch((err) => {\n        // Socket error\n        this.setState({loginDisabled: false, autoLogin: false, loadSpinnerVisible: false});\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // Connection succeeded.\n  handleConnected() {\n    const params = this.tinode.getServerInfo();\n    this.setState({\n      serverVersion: params.ver + ' ' + (params.build ? params.build : 'none')\n    });\n\n    if (this.state.autoLogin) {\n      this.doLogin(this.state.login, this.state.password, {meth: this.state.credMethod, resp: this.state.credCode});\n    }\n  }\n\n  // Called for each auto-reconnect iteration.\n  handleAutoreconnectIteration(sec, prom) {\n    clearInterval(this.reconnectCountdown);\n\n    if (sec < 0) {\n      // Clear error\n      this.handleError();\n      return;\n    }\n\n    if (prom) {\n      // Reconnecting now\n      prom.then(() => {\n        // Reconnected: clear error\n        this.handleError();\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n      return;\n    }\n\n    const {formatMessage} = this.props.intl;\n    let count = sec / 1000;\n    count = count | count;\n    this.reconnectCountdown = setInterval(() => {\n      const timeLeft = (count > 99) ? secondsToTime(count) : count;\n      this.handleError(\n        formatMessage(messages.reconnect_countdown, {seconds: timeLeft}),\n        'warn',\n        () => {\n          clearInterval(this.reconnectCountdown);\n          this.tinode.reconnect();\n        },\n        formatMessage(messages.reconnect_now)\n      );\n      count -= 1;\n    }, 1000);\n  }\n\n  // Connection lost\n  handleDisconnect(err) {\n    this.setState({\n      connected: false,\n      ready: false,\n      topicSelectedOnline: false,\n      errorText: err && err.message ? err.message : \"Disconnected\",\n      errorLevel: err && err.message ? 'err' : 'warn',\n      loginDisabled: false,\n      contextMenuVisible: false,\n      serverVersion: \"no connection\"\n    });\n  }\n\n  doLogin(login, password, cred) {\n    if (this.tinode.isAuthenticated()) {\n      // Already logged in. Go to default screen.\n      HashNavigation.navigateTo('');\n      return;\n    }\n    // Sanitize and package credentail.\n    cred = Tinode.credential(cred);\n    // Try to login with login/password. If they are not available, try token. If no token, ask for login/password.\n    let promise = null;\n    const token = this.tinode.getAuthToken();\n    if (login && password) {\n      this.setState({password: null});\n      promise = this.tinode.loginBasic(login, password, cred);\n    } else if (token) {\n      promise = this.tinode.loginToken(token.token, cred);\n    }\n\n    if (promise) {\n      promise.then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text === 'validate credentials') {\n          this.setState({loadSpinnerVisible: false});\n          if (cred) {\n            this.handleError(this.props.intl.formatMessage(messages.code_doesnot_match), 'warn');\n          }\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful();\n        }\n      }).catch((err) => {\n        // Login failed, report error.\n        this.setState({\n          loginDisabled: false,\n          credMethod: undefined,\n          credCode: undefined,\n          loadSpinnerVisible: false,\n          autoLogin: false\n        });\n        this.handleError(err.message, 'err');\n        localStorage.removeItem('auth-token');\n        HashNavigation.navigateTo('');\n      });\n    } else {\n      // No login credentials provided.\n      // Make sure we are on the login page.\n      HashNavigation.navigateTo('');\n      this.setState({loginDisabled: false});\n    }\n  }\n\n  handleCredentialsRequest(params) {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    parsed.path[0] = 'cred';\n    parsed.params['method'] = params.cred[0];\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n  }\n\n  handleLoginSuccessful() {\n    this.handleError();\n\n    // Refresh authentication token.\n    if (LocalStorageUtil.getObject('keep-logged-in')) {\n      LocalStorageUtil.setObject('auth-token', this.tinode.getAuthToken());\n    }\n    // Logged in fine, subscribe to 'me' attaching callbacks from the contacts view.\n    const me = this.tinode.getMeTopic();\n    me.onMetaDesc = this.tnMeMetaDesc;\n    me.onContactUpdate = this.tnMeContactUpdate;\n    me.onSubsUpdated = this.tnMeSubsUpdated;\n    this.setState({\n      connected: true,\n      credMethod: undefined,\n      credCode: undefined,\n      myUserId: this.tinode.getCurrentUserID(),\n      autoLogin: true,\n    });\n    // Subscribe, fetch topic desc, the list of subscriptions. Messages are not fetched.\n    me.subscribe(\n      me.startMetaQuery().\n        withLaterSub().\n        withDesc().\n        withTags().\n        withCred().\n        build()\n      ).catch((err) => {\n        this.tinode.disconnect();\n        localStorage.removeItem('auth-token');\n        this.handleError(err.message, 'err');\n        HashNavigation.navigateTo('');\n      }).finally(() => {\n        this.setState({loadSpinnerVisible: false});\n      });\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, 'contacts'));\n  }\n\n  tnMeMetaDesc(desc) {\n    if (desc) {\n      if (desc.public) {\n        this.setState({\n          sidePanelTitle: desc.public.fn,\n          sidePanelAvatar: makeImageUrl(desc.public.photo)\n        });\n      }\n      if (desc.acs) {\n        this.setState({\n          incognitoMode: !desc.acs.isPresencer()\n        });\n      }\n    }\n  }\n\n  // Reactions to updates to the contact list.\n  tnMeContactUpdate(what, cont) {\n    if (what == 'on' || what == 'off') {\n      this.resetContactList();\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedOnline: (what == 'on')});\n      }\n    } else if (what == 'read') {\n      this.resetContactList();\n    } else if (what == 'msg') {\n      // Check if the topic is archived. If so, don't play a sound.\n      const topic = this.tinode.getTopic(cont.topic);\n      const archived = topic && topic.isArchived();\n\n      // New message received. Maybe the message is from the current user, then unread is 0.\n      if (cont.unread > 0 && this.state.messageSounds && !archived) {\n        // Skip update if the topic is currently open, otherwise the badge will annoyingly flash.\n        if (document.hidden || this.state.topicSelected != cont.topic) {\n          POP_SOUND.play();\n        }\n      }\n      // Reorder contact list to use possibly updated 'touched'.\n      this.resetContactList();\n    } else if (what == 'recv') {\n      // Explicitly ignoring \"recv\" -- it causes no visible updates to contact list.\n    } else if (what == 'gone' || what == 'unsub') {\n      // Topic deleted or user unsubscribed. Remove topic from view.\n      // If the currently selected topic is gone, clear the selection.\n      if (this.state.topicSelected == cont.topic) {\n        this.handleTopicSelected(null);\n      }\n      // Redraw without the deleted topic.\n      this.resetContactList();\n    } else if (what == 'acs') {\n      // Permissions changed. If it's for the currently selected topic,\n      // update the views.\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedAcs: cont.acs});\n      }\n    } else if (what == 'del') {\n      // TODO: messages deleted (hard or soft) -- update pill counter.\n    } else if (what == 'upd') {\n      // upd - handled by the SDK. Explicitly ignoring here.\n    } else {\n      // TODO(gene): handle other types of notifications:\n      // * ua -- user agent changes (maybe display a pictogram for mobile/desktop).\n      console.log(\"Unsupported (yet) presence update:\" + what + \" in: \" + cont.topic);\n    }\n  }\n\n  tnMeSubsUpdated(unused) {\n    this.resetContactList();\n  }\n\n  // Merge search results and contact list to create a single flat\n  // list of kown contacts for GroupManager to use.\n  static prepareSearchableContacts(chatList, foundContacts) {\n    const merged = {};\n\n    // For chatList topics merge only p2p topics and convert them to the\n    // same format as foundContacts.\n    for (const c of chatList) {\n      if (Tinode.isP2PTopicName(c.topic)) {\n          merged[c.topic] = {\n            user: c.topic,\n            updated: c.updated,\n            public: c.public,\n            private: c.private,\n            acs: c.acs\n          };\n      }\n    }\n\n    // Add all foundCountacts if they have not been added already.\n    for (const c of foundContacts) {\n      if (!merged[c.user]) {\n        merged[c.user] = c;\n      }\n    }\n\n    return Object.values(merged);\n  }\n\n  resetContactList() {\n    const newState = {\n      chatList: []\n    };\n\n    if (!this.state.ready) {\n      newState.ready = true;\n    }\n\n    this.tinode.getMeTopic().contacts((c) => {\n      newState.chatList.push(c);\n      if (this.state.topicSelected == c.topic) {\n        newState.topicSelectedOnline = c.online;\n        newState.topicSelectedAcs = c.acs;\n      }\n    });\n    // Merge search results and chat list.\n    newState.searchableContacts = TinodeWeb.prepareSearchableContacts(newState.chatList, this.state.searchResults);\n    this.setState(newState);\n  }\n\n  // Sending \"received\" notifications\n  tnData(data) {\n    const topic = this.tinode.getTopic(data.topic);\n    if (topic.msgStatus(data) >= Tinode.MESSAGE_STATUS_SENT && data.from != this.state.myUserId) {\n      clearTimeout(this.receivedTimer);\n      this.receivedTimer = setTimeout(() => {\n        this.receivedTimer = undefined;\n        topic.noteRecv(data.seq);\n      }, RECEIVED_DELAY);\n    }\n  }\n\n  /* Fnd topic: find contacts by tokens */\n  tnInitFind() {\n    const fnd = this.tinode.getFndTopic();\n    fnd.onSubsUpdated = this.tnFndSubsUpdated;\n    if (fnd.isSubscribed()) {\n      this.tnFndSubsUpdated();\n    } else {\n      fnd.subscribe(fnd.startMetaQuery().withSub().build()).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  tnFndSubsUpdated() {\n    const foundContacts = [];\n    // Don't attempt to create P2P topics which already exist. Server will reject the duplicates.\n    this.tinode.getFndTopic().contacts((s) => {\n      foundContacts.push(s);\n    });\n    this.setState({\n      searchResults: foundContacts,\n      searchableContacts: TinodeWeb.prepareSearchableContacts(this.state.chatList, foundContacts)\n    });\n  }\n\n  /** Called when the user enters a contact into the contact search field in the NewAccount panel\n    @param query {Array} is an array of contacts to search for\n   */\n  handleSearchContacts(query) {\n    const fnd = this.tinode.getFndTopic();\n    fnd.setMeta({desc: {public: query}}).then((ctrl) => {\n      return fnd.getMeta(fnd.startMetaQuery().withSub().build());\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  // User clicked on a contact in the side panel or deleted a contact.\n  handleTopicSelected(topicName) {\n    // Clear newTopicParams after use.\n    if (this.state.newTopicParams && this.state.newTopicParams._topicName != topicName) {\n      this.setState({\n        newTopicParams: null\n      });\n    }\n\n    if (topicName) {\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'topic-view',\n        showInfoPanel: false\n      });\n      // Different contact selected.\n      if (this.state.topicSelected != topicName) {\n        this.setState({\n          topicSelectedOnline: this.tinode.isTopicOnline(topicName),\n          topicSelectedAcs: this.tinode.getTopicAccessMode(topicName)\n        });\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', topicName));\n      }\n    } else {\n      // Currently selected contact deleted\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'sidepanel',\n        topicSelectedOnline: false,\n        topicSelectedAcs: null,\n        showInfoPanel: false\n      });\n\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic('', null));\n    }\n  }\n\n  // In mobile view user requested to show sidepanel\n  handleHideMessagesView() {\n    this.setState({\n      mobilePanel: 'sidepanel'\n    });\n    HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, null));\n  }\n\n  // User is sending a message, either plain text or a drafty object, possibly\n  // with attachments.\n  //  - msg - Drafty message with content\n  //  - promise - Promise to be resolved when the upload is completed\n  //  - uploader - for tracking progress\n  handleSendMessage(msg, promise, uploader) {\n    const topic = this.tinode.getTopic(this.state.topicSelected);\n\n    msg = topic.createMessage(msg, false);\n    // The uploader is used to show progress.\n    msg._uploader = uploader;\n\n    if (!topic.isSubscribed()) {\n      if (!promise) {\n        promise = Promise.resolve();\n      }\n      promise = promise.then(() => { return topic.subscribe(); });\n    }\n\n    if (promise) {\n      promise = promise.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n\n    topic.publishDraft(msg, promise)\n      .then((ctrl) => {\n        if (topic.isArchived()) {\n          return topic.archive(false);\n        }\n      })\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleNewChatInvitation(topicName, action) {\n    const topic = this.tinode.getTopic(topicName);\n    let response = null;\n    switch (action) {\n      case 'accept':\n        // Accept given permissions.\n        const mode = topic.getAccessMode().getGiven();\n        response = topic.setMeta({sub: {mode: mode}});\n        if (topic.isP2P()) {\n          // For P2P topics change 'given' permission of the peer too.\n          // In p2p topics the other user has the same name as the topic.\n          response = response.then((ctrl) => {\n            topic.setMeta({sub: {user: topicName, mode: mode}});\n          });\n        }\n        break;\n      case 'delete':\n        // Ignore invitation by deleting it.\n        response = topic.delTopic(true);\n        break;\n      case 'block':\n        // Ban the topic making futher invites impossible.\n        // Just self-ban.\n        const am = topic.getAccessMode().updateWant('-JP').getWant();\n        response = topic.setMeta({sub: {mode: am}}).then((ctrl) => {\n          return this.handleTopicSelected(null);\n        });\n        break;\n      default:\n        console.log(\"Unknown invitation action\", '\"' + action + '\"\"');\n    }\n\n    if (response != null) {\n      response.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // User chose a Sign Up menu item.\n  handleNewAccount() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, 'register'));\n  }\n\n  // Actual registration of a new account.\n  handleNewAccountRequest(login_, password_, public_, cred_, tags_) {\n    // Clear old error, if any.\n    this.handleError();\n\n    this.tinode.connect(this.state.serverAddress)\n      .then(() => {\n        return this.tinode.createAccountBasic(login_, password_,\n          {public: public_, tags: tags_, cred: Tinode.credential(cred_)});\n      }).then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text == 'validate credentials') {\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful(this);\n        }\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleUpdateAccountRequest(password, pub, defacs) {\n    this.handleError();\n\n    if (pub || defacs) {\n      const params = {};\n      if (pub) {\n        params.public = pub;\n      }\n      if (defacs) {\n        params.defacs = defacs;\n      }\n      this.tinode.getMeTopic().setMeta({desc: params}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n    if (password) {\n      this.tinode.updateAccountBasic(null, this.tinode.getCurrentLogin(), password).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleToggleIncognitoMode(on) {\n    const me = this.tinode.getMeTopic();\n    const am = me.getAccessMode().updateWant(on ? '-P' : '+P').getWant();\n    me.setMeta({sub: {mode: am}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleUpdateAccountTagsRequest(tags) {\n    this.tinode.getMeTopic().setMeta({tags: tags})\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  // User chose Settings menu item.\n  handleSettings() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'edit' : 'settings'));\n  }\n\n  // User updated global parameters.\n  handleGlobalSettings(settings) {\n    const serverAddress = settings.serverAddress || this.state.serverAddress;\n    const transport = settings.transport || this.state.transport;\n    if (this.tinode) {\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.tinode = TinodeWeb.tnSetup(serverAddress, transport, this.props.intl.locale);\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n\n    this.setState({\n      serverAddress: serverAddress,\n      transport: transport\n    });\n    LocalStorageUtil.setObject('settings', {\n      serverAddress: serverAddress,\n      transport: transport\n    });\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, ''));\n  }\n\n  // User chose 'Archived chats'.\n  handleShowArchive() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'archive' : ''));\n  }\n\n  // User viewes 'Blocked chats'.\n  handleShowBlocked() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'blocked' : ''));\n  }\n\n  // Initialize desktop alerts = push notifications.\n  initDesktopAlerts() {\n    // Google could not be bothered to mention that\n    // onTokenRefresh is never called.\n    this.fbPush.onTokenRefresh(() => {\n      this.requestPushToken();\n    });\n\n    this.fbPush.onMessage((payload) => {\n      // No need to do anything about it.\n      // All the magic happends in the service worker.\n    });\n  }\n\n  togglePushToken(enabled) {\n    if (enabled) {\n      if (!this.state.firebaseToken) {\n        this.fbPush.requestPermission().then(() => {\n          this.requestPushToken();\n        }).catch((err) => {\n          this.handleError(err.message, 'err');\n          this.setState({desktopAlerts: false, firebaseToken: null});\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n          console.log(\"Failed to get permission to notify.\", err);\n        });\n      } else {\n        this.setState({desktopAlerts: true});\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n      }\n    } else if (this.state.firebaseToken) {\n      this.fbPush.deleteToken(this.state.firebaseToken).catch((err) => {\n        console.log(\"Unable to delete token.\", err);\n      }).finally(() => {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        localStorage.removeItem('firebase-token');\n        this.setState({desktopAlerts: false, firebaseToken: null});\n      });\n    } else {\n      this.setState({desktopAlerts: false, firebaseToken: null});\n      LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n    }\n  }\n\n  requestPushToken() {\n    this.fbPush.getToken().then((refreshedToken) => {\n      if (refreshedToken != this.state.firebaseToken) {\n        this.tinode.setDeviceToken(refreshedToken, true);\n        LocalStorageUtil.setObject('firebase-token', refreshedToken);\n      }\n      this.setState({firebaseToken: refreshedToken, desktopAlerts: true});\n      LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n      console.log(\"Failed to retrieve firebase token\", err);\n    });\n  }\n\n  handleToggleMessageSounds(enabled) {\n    this.setState({messageSounds: enabled});\n    LocalStorageUtil.updateObject('settings', {\n      messageSoundsOff: !enabled\n    });\n  }\n\n  handleCredAdd(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.setMeta({cred: {meth: method, val: value}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredDelete(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.delCredential(method, value).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredConfirm(method, response) {\n    this.handleCredentialsRequest({cred: [method]});\n  }\n\n  // User clicked Cancel button in Setting or Sign Up panel.\n  handleSidepanelCancel() {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    let path = '';\n    if (['security','support','general','notif'].includes(parsed.path[0])) {\n      path = 'edit';\n    } else if ('blocked' == parsed.path[0]) {\n      path = 'security';\n    } else if (this.state.myUserId) {\n      path = 'contacts';\n    }\n    parsed.path[0] = path;\n    if (parsed.params) {\n      delete parsed.params.code;\n      delete parsed.params.method;\n      delete parsed.params.tab;\n    }\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n    this.setState({errorText: '', errorLevel: null});\n  }\n\n  // Basic nagigator by hash value. No need to bind to this.\n  basicNavigator(hash) {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, hash));\n  }\n\n  // Request to start a topic, new or selected from search results, or \"by ID\".\n  handleStartTopicRequest(topicName, pub, priv, tags, isChannel) {\n    // Check if topic is indeed new. If not, launch it.\n    if (topicName && this.tinode.isTopicCached(topicName)) {\n      this.handleTopicSelected(topicName);\n      return;\n    }\n\n    const params = {};\n    if (Tinode.isP2PTopicName(topicName)) {\n      // Because we are initialing the subscription, set 'want' to all permissions.\n      params.sub = {mode: DEFAULT_P2P_ACCESS_MODE};\n      // Give the other user all permissions too.\n      params.desc = {defacs: {auth: DEFAULT_P2P_ACCESS_MODE}};\n    } else {\n      topicName = topicName || this.tinode.newGroupTopicName(isChannel);\n      params.desc = {public: pub, private: {comment: priv}};\n      params.tags = tags;\n    }\n    params._topicName = topicName;\n    this.setState({newTopicParams: params}, () => {this.handleTopicSelected(topicName)});\n  }\n\n  // New topic was creted, here is the new topic name.\n  handleNewTopicCreated(oldName, newName) {\n    if (this.state.topicSelected == oldName && oldName != newName) {\n      // If the current URl contains the old topic name, replace it with new.\n      // Update the name of the selected topic first so the navigator doen't clear\n      // the state.\n      this.setState({topicSelected: newName}, () => {\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', newName));\n      });\n    }\n  }\n\n  handleTopicUpdateRequest(topicName, pub, priv, permissions) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const params = {};\n      if (pub) {\n        params.public = pub;\n      }\n      if (priv) {\n        params.private = (priv === Tinode.DEL_CHAR) ?\n          Tinode.DEL_CHAR : {comment: priv};\n      }\n      if (permissions) {\n        params.defacs = permissions;\n      }\n      topic.setMeta({desc: params}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleChangePermissions(topicName, mode, uid) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const am = topic.getAccessMode();\n      if (uid) {\n        am.updateGiven(mode);\n        mode = am.getGiven();\n      } else {\n        am.updateWant(mode);\n        mode = am.getWant();\n      }\n      topic.setMeta({sub: {user: uid, mode: mode}}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleTagsUpdated(topicName, tags) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      topic.setMeta({tags: tags}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleLogout() {\n    updateFavicon(0);\n\n    // Remove stored data.\n    localStorage.removeItem('auth-token');\n    localStorage.removeItem('firebase-token');\n    localStorage.removeItem('settings');\n    if (this.state.firebaseToken) {\n      this.fbPush.deleteToken(this.state.firebaseToken)\n    }\n\n    if (this.tinode) {\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.setState(this.getBlankState());\n    this.tinode = TinodeWeb.tnSetup(this.state.serverAddress, this.state.transport, this.props.intl.locale);\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    HashNavigation.navigateTo('');\n  }\n\n  handleDeleteAccount() {\n    this.tinode.delCurrentUser(true).then((ctrl) => {\n      this.handleLogout();\n    });\n  }\n\n  handleDeleteMessagesRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Request hard-delete all messages.\n    topic.delMessagesAll(true).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleLeaveUnsubRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.leave(true).then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleBlockTopicRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleReportTopic(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Publish spam report.\n    this.tinode.publish(Tinode.TOPIC_SYS, Tinode.Drafty.attachJSON(null, {\n      'action': 'report',\n      'target': topicName\n    }));\n\n    // Remove J and P permissions.\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleShowContextMenu(params, menuItems) {\n    this.setState({\n      contextMenuVisible: true,\n      contextMenuClickAt: {x: params.x, y: params.y},\n      contextMenuParams: params,\n      contextMenuItems: menuItems || this.defaultTopicContextMenu(params.topicName),\n      contextMenuBounds: ReactDOM.findDOMNode(this).getBoundingClientRect()\n    });\n  }\n\n  defaultTopicContextMenu(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n\n    let muted = false, blocked = false, self_blocked = false, subscribed = false, deleter = false, archived = false;\n    if (topic) {\n      subscribed = topic.isSubscribed();\n      archived = topic.isArchived();\n\n      const acs = topic.getAccessMode();\n      if (acs) {\n        muted = acs.isMuted();\n        blocked = !acs.isJoiner();\n        self_blocked = !acs.isJoiner('want');\n        deleter = acs.isDeleter();\n      }\n    }\n\n    return [\n      subscribed ? {\n        title: this.props.intl.formatMessage({id: 'menu_item_info'}),\n        handler: this.handleShowInfoView\n      } : null,\n      subscribed ? 'messages_clear' : null,\n      subscribed && deleter ? 'messages_clear_hard' : null,\n      muted ? (blocked ? null : 'topic_unmute') : 'topic_mute',\n      self_blocked ? 'topic_unblock' : 'topic_block',\n      !archived ? 'topic_archive' : null,\n      'topic_delete'\n    ];\n  }\n\n  handleHideContextMenu() {\n    this.setState({\n      contextMenuVisible: false,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuBounds: null\n    });\n  }\n\n  handleContextMenuAction(action, promise, params) {\n    if (action == 'topic_archive') {\n      if (promise && params.topicName && params.topicName == this.state.topicSelected) {\n        promise.then(() => {\n          this.handleTopicSelected(null);\n        });\n      }\n    }\n  }\n\n  handleShowAlert(title, content, onConfirm, confirmText, onReject, rejectText) {\n    this.setState({\n      alertVisible: true,\n      alertParams: {\n        title: title,\n        content: content,\n        onConfirm: onConfirm,\n        confirm: confirmText,\n        onReject: onReject,\n        reject: rejectText\n      }\n    });\n  }\n\n  handleShowInfoView() {\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'info', true));\n    this.setState({showInfoPanel: true});\n  }\n\n  handleHideInfoView() {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'info'));\n    this.setState({showInfoPanel: false});\n  }\n\n  handleMemberUpdateRequest(topicName, added, removed) {\n    if (!topicName) {\n      return;\n    }\n\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    if (added && added.length > 0) {\n      added.map((uid) => {\n        topic.invite(uid, null).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n\n    if (removed && removed.length > 0) {\n      removed.map((uid) => {\n        topic.delSubscription(uid).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n  }\n\n  handleValidateCredentialsRequest(cred, code) {\n    if (this.tinode.isAuthenticated()) {\n      const me = this.tinode.getMeTopic();\n      me.setMeta({cred: {meth: cred, resp: code}})\n        .then(() => {\n          HashNavigation.navigateTo('');\n        })\n        .catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n    } else {\n      this.setState({credMethod: cred, credCode: code});\n      this.doLogin(null, null, {meth: cred, resp: code});\n    }\n  }\n\n  handlePasswordResetRequest(method, value) {\n    // If already connected, connnect() will return a resolved promise.\n    this.tinode.connect()\n      .then(() => {\n        return this.tinode.requestResetAuthSecret('basic', method, value);\n      })\n      .catch((err) => {\n        // Socket error\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleResetPassword(scheme, newPassword, token) {\n    token = base64ReEncode(token);\n    if (!token) {\n      this.handleError(this.props.intl.formatMessage(messages.invalid_security_token), 'err');\n    } else {\n      this.tinode.connect()\n        .then(() => {\n          return this.tinode.updateAccountBasic(null, null, newPassword, {token: token});\n        })\n        .catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"app-container\">\n        {this.state.contextMenuVisible ?\n          <ContextMenu\n            tinode={this.tinode}\n            bounds={this.state.contextMenuBounds}\n            clickAt={this.state.contextMenuClickAt}\n            params={this.state.contextMenuParams}\n            items={this.state.contextMenuItems}\n            hide={this.handleHideContextMenu}\n            onShowAlert={this.handleShowAlert}\n            onAction={this.handleContextMenuAction}\n            onTopicRemoved={(topicName) => {\n              if (topicName == this.state.topicSelected) {\n                this.handleTopicSelected(null);\n              }\n            }}\n            onError={this.handleError} />\n          :\n          null\n        }\n        <Alert\n          visible={this.state.alertVisible}\n          title={this.state.alertParams.title}\n          content={this.state.alertParams.content}\n          onReject={this.state.alertParams.onReject ? (() => { this.setState({alertVisible: false}); }) : null}\n          reject={this.state.alertParams.reject}\n          onConfirm={() => { this.setState({alertVisible: false}); this.state.alertParams.onConfirm(); }}\n          confirm={this.state.alertParams.confirm}\n          />\n        <SidepanelView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          displayMobile={this.state.displayMobile}\n          hideSelf={this.state.displayMobile && this.state.mobilePanel !== 'sidepanel'}\n          state={this.state.sidePanelSelected}\n          title={this.state.sidePanelTitle}\n          avatar={this.state.sidePanelAvatar}\n          login={this.state.login}\n          myUserId={this.state.myUserId}\n          loginDisabled={this.state.loginDisabled}\n          loadSpinnerVisible={this.state.loadSpinnerVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          topicSelected={this.state.topicSelected}\n          chatList={this.state.chatList}\n          credMethod={this.state.credMethod}\n          credCode={this.state.credCode}\n\n          transport={this.state.transport}\n          messageSounds={this.state.messageSounds}\n          desktopAlerts={this.state.desktopAlerts}\n          desktopAlertsEnabled={this.state.desktopAlertsEnabled}\n          incognitoMode={this.state.incognitoMode}\n          serverAddress={this.state.serverAddress}\n          serverVersion={this.state.serverVersion}\n\n          onGlobalSettings={this.handleGlobalSettings}\n          onSignUp={this.handleNewAccount}\n          onSettings={this.handleSettings}\n          onBasicNavigate={this.basicNavigator}\n          onLoginRequest={this.handleLoginRequest}\n          onCreateAccount={this.handleNewAccountRequest}\n          onUpdateAccount={this.handleUpdateAccountRequest}\n          onUpdateAccountTags={this.handleUpdateAccountTagsRequest}\n          onTogglePushNotifications={this.togglePushToken}\n          onToggleMessageSounds={this.handleToggleMessageSounds}\n          onToggleIncognitoMode={this.handleToggleIncognitoMode}\n          onCredAdd={this.handleCredAdd}\n          onCredDelete={this.handleCredDelete}\n          onCredConfirm={this.handleCredConfirm}\n          onTopicSelected={this.handleTopicSelected}\n          onCreateTopic={this.handleStartTopicRequest}\n          onLogout={this.handleLogout}\n          onDeleteAccount={this.handleDeleteAccount}\n          onShowAlert={this.handleShowAlert}\n          onCancel={this.handleSidepanelCancel}\n          onError={this.handleError}\n          onValidateCredentials={this.handleValidateCredentialsRequest}\n          onPasswordResetRequest={this.handlePasswordResetRequest}\n          onResetPassword={this.handleResetPassword}\n          onShowArchive={this.handleShowArchive}\n          onShowBlocked={this.handleShowBlocked}\n\n          onInitFind={this.tnInitFind}\n          searchResults={this.state.searchResults}\n          onSearchContacts={this.handleSearchContacts}\n\n          showContextMenu={this.handleShowContextMenu} />\n\n        <MessagesView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          ready={this.state.ready}\n          online={this.state.topicSelectedOnline}\n          acs={this.state.topicSelectedAcs}\n          displayMobile={this.state.displayMobile}\n          viewportWidth={this.state.viewportWidth}\n          viewportHeight={this.state.viewportHeight}\n          hideSelf={this.state.displayMobile &&\n            (this.state.mobilePanel !== 'topic-view' || this.state.showInfoPanel)}\n          topic={this.state.topicSelected}\n          myUserId={this.state.myUserId}\n          serverVersion={this.state.serverVersion}\n          serverAddress={this.state.serverAddress}\n          applicationVisible={this.state.applicationVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          newTopicParams={this.state.newTopicParams}\n\n          onHideMessagesView={this.handleHideMessagesView}\n          onData={this.tnData}\n          onError={this.handleError}\n          onNewTopicCreated={this.handleNewTopicCreated}\n          showContextMenu={this.handleShowContextMenu}\n          onChangePermissions={this.handleChangePermissions}\n          onNewChat={this.handleNewChatInvitation}\n          sendMessage={this.handleSendMessage} />\n\n        {this.state.showInfoPanel ?\n          <InfoView\n            tinode={this.tinode}\n            connected={this.state.connected}\n            displayMobile={this.state.displayMobile}\n            topic={this.state.topicSelected}\n            searchableContacts={this.state.searchableContacts}\n            myUserId={this.state.myUserId}\n\n            errorText={this.state.errorText}\n            errorLevel={this.state.errorLevel}\n            errorAction={this.state.errorAction}\n            errorActionText={this.state.errorActionText}\n\n            onTopicDescUpdate={this.handleTopicUpdateRequest}\n            onCancel={this.handleHideInfoView}\n            onShowAlert={this.handleShowAlert}\n            onChangePermissions={this.handleChangePermissions}\n            onMemberUpdateRequest={this.handleMemberUpdateRequest}\n            onDeleteMessages={this.handleDeleteMessagesRequest}\n            onLeaveTopic={this.handleLeaveUnsubRequest}\n            onBlockTopic={this.handleBlockTopicRequest}\n            onReportTopic={this.handleReportTopic}\n            onAddMember={this.handleManageGroupMembers}\n            onTopicTagsUpdate={this.handleTagsUpdated}\n            onInitFind={this.tnInitFind}\n            onError={this.handleError}\n\n            showContextMenu={this.handleShowContextMenu}\n            />\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(TinodeWeb);\n","// ValidationView: panel for confirming credentials, like email or phone.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  phone: {\n    id: 'phone_dative',\n    defaultMessage: 'phone',\n    description: \"Dative case of 'phone', i.e. 'phone' in 'by phone'\",\n  },\n  email: {\n    id: 'email_dative',\n    defaultMessage: 'email',\n    description: \"Dative case of 'email', i.e. 'email' in 'by email'\",\n  }\n});\n\nclass ValidationView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      code: props.credCode || ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({code: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    } else if (e.key == 'Escape') {\n      this.handleCancel(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.code && this.state.code.trim()) {\n      this.props.onSubmit(this.props.credMethod, this.state.code.trim());\n    }\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel();\n  }\n\n\n  render() {\n    const { formatMessage } = this.props.intl;\n    const methods = {'email': formatMessage(messages.email), 'tel': formatMessage(messages.phone)};\n    let method = methods[this.props.credMethod] || this.props.credMethod;\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\" htmlFor=\"enter-confirmation-code\">\n            <FormattedMessage id=\"enter_confirmation_code_prompt\"\n              defaultMessage=\"Enter confirmation code sent to you by {method}:\"\n              description=\"Request to enter confirmation code\"\n              values={{method: method}} />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"numeric_confirmation_code_prompt\"\n          defaultMessage=\"Numbers only\" description=\"Prompt for numeric conformation code\">{\n          (numbers_only) => <input type=\"text\" id=\"enter-confirmation-code\"\n            placeholder={numbers_only}\n            value={this.state.code} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"blue\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_confirm\" defaultMessage=\"Confirm\" description=\"Button [Confirm]\" />\n          </button>\n          <button className=\"white\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ValidationView);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Alert extends React.PureComponent {\n  render() {\n    return this.props.visible ?\n      <div className=\"alert-container\">\n        <div className=\"alert\">\n          <div className=\"title\">{this.props.title}</div>\n          <div className=\"content\">{this.props.content}</div>\n          <div className=\"dialog-buttons\">\n            {this.props.onReject ?\n              <button className=\"outline\" onClick={this.props.onReject}>\n                {this.props.reject || <FormattedMessage id=\"button_cancel\" />}\n              </button>\n              :\n              null\n            }\n            <button className=\"blue\" onClick={this.props.onConfirm}>\n              {this.props.confirm || <FormattedMessage id=\"button_ok\" />}\n            </button>\n          </div>\n        </div>\n      </div>\n    :\n    null;\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\nimport { bytesToHumanSize } from '../lib/strformat.js';\nimport { isUrlRelative, sanitizeUrl } from '../lib/utils.js';\n\nexport default class Attachment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      downloader: null,\n      progress: 0\n    };\n\n    this.downloadFile = this.downloadFile.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  downloadFile(url, filename, mimetype) {\n    if (!url) {\n      this.props.onError(\"Invalid download URL '\" + url + \"'\");\n      return;\n    }\n\n    const downloader = this.props.tinode.getLargeFileHelper();\n    this.setState({downloader: downloader});\n    downloader.download(url, filename, mimetype,\n      (loaded) => {\n        this.setState({progress: loaded / this.props.size});\n      },\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    ).then(() => {\n      this.setState({downloader: null, progress: 0});\n    }).catch((err) => {\n      if (err) {\n        this.props.onError(\"Error downloading file: \" + err.message, 'err');\n      }\n      this.setState({downloader: null, progress: 0});\n    });\n  }\n\n  handleCancel() {\n    if (this.props.uploading) {\n      this.props.onCancelUpload();\n    } else if (this.state.downloader) {\n      this.state.downloader.cancel();\n    }\n  }\n\n  render() {\n    let filename = this.props.filename || 'file_attachment';\n    if (filename.length > 36) {\n      filename = filename.substr(0, 16) + '...' + filename.substr(-16);\n    }\n    let size = this.props.size > 0 ?\n      <span className=\"small gray\">({bytesToHumanSize(this.props.size)})</span> :\n      null;\n\n    // Detect if the download URL is relative or absolute.\n    // If the URL is relative use LargeFileHelper to attach authentication\n    // credentials to the request.\n    let url, helperFunc;\n    if (!this.props.uploading && !this.state.downloader && isUrlRelative(this.props.downloadUrl)) {\n      // Relative URL. Use download helper.\n      url = '#';\n      helperFunc = (e) => {\n        e.preventDefault();\n        this.downloadFile(this.props.downloadUrl, this.props.filename, this.props.mimetype);\n      };\n    } else {\n      url = sanitizeUrl(this.props.downloadUrl);\n      helperFunc = null;\n    }\n    const downloadWidget = <><i className=\"material-icons\">file_download</i> <FormattedMessage id=\"save_attachment\"\n      defaultMessage=\"save\" description=\"Call to save an attachment\" /></>;\n    return (\n      <div className=\"attachment\">\n        <div><i className=\"material-icons big gray\">insert_drive_file</i></div>\n        <div className=\"flex-column\">\n          <div>{filename} {size}</div>\n          {this.props.uploading || this.state.downloader ?\n            <FileProgress progress={this.props.uploading ? this.props.progress : this.state.progress}\n              onCancel={this.handleCancel} />\n            :\n            <div>{url ?\n              <a href={url} download={this.props.filename} onClick={helperFunc}>{downloadWidget}</a>\n              :\n              <span className=\"light-gray\">{downloadWidget}</span>\n            }</div>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\n\nimport { AVATAR_SIZE, MAX_EXTERN_ATTACHMENT_SIZE } from '../config.js';\nimport { imageScaled, blobToBase64, makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class AvatarUpload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dataUrl: props.avatar\n    };\n\n    this.handleFileUpload = this.handleFileUpload.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.avatar != prevProps.avatar) {\n      this.setState({dataUrl: this.props.avatar})\n    }\n  }\n\n  handleFileUpload(e) {\n    imageScaled(e.target.files[0], AVATAR_SIZE, AVATAR_SIZE, MAX_EXTERN_ATTACHMENT_SIZE, true,\n      // Image successfully scaled and converted.\n      (mime, blob) => {\n        // Convert blob to base64-encoded bits.\n        blobToBase64(blob, (unused, base64bits) => {\n          const du = makeImageUrl({data: base64bits, type: mime});\n          this.setState({dataUrl: du});\n          this.props.onImageChanged(du);\n        });\n      },\n      // Failure\n      (err) => {\n        this.props.onError(err, 'err');\n      });\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  render() {\n    // Randomize id value in case more than one AvatarUpload is shown\n    // at the same time.\n    const randId = 'file-input-avatar-' + (Math.random() + '').substr(2);\n    const className = 'avatar-upload' + (this.props.readOnly ? ' read-only' : '');\n    return (\n      <div className={className}>\n        {this.props.readOnly || !this.state.dataUrl ?\n          null :\n          <a href=\"#\" className=\"clear-avatar\" onClick={(e) => {e.preventDefault(); this.props.onImageChanged(null);}}>\n            <i className=\"material-icons\">clear</i>\n          </a>}\n        {this.state.dataUrl ?\n          <img src={this.state.dataUrl} className=\"preview\" /> :\n          this.props.readOnly && this.props.uid ?\n            <div className=\"avatar-box\">\n              <LetterTile\n                avatar={true}\n                topic={this.props.uid}\n                title={this.props.title} />\n            </div>\n            :\n            <div className=\"blank\">{AVATAR_SIZE}&times;{AVATAR_SIZE}</div>}\n        {this.props.readOnly ? null :\n          <input type=\"file\" id={randId} className=\"inputfile hidden\"\n            accept=\"image/*\" onChange={this.handleFileUpload} />}\n        {this.props.readOnly ? null :\n        <label htmlFor={randId} className=\"round\">\n          <i className=\"material-icons\">file_upload</i>\n        </label>}\n      </div>\n    );\n  }\n};\n","// The <- button to be displayed in title bars.\nimport React from 'react';\n\nexport default class ButtonBack extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onBack();}}>\n        <i className=\"material-icons\">arrow_back</i>\n      </a>\n    );\n  }\n}\n","// Single message, sent or received.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Drafty } from 'tinode-sdk'\n\nimport Attachment from './attachment.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\nimport UploadingImage from './uploading-image.jsx'\nimport { sanitizeImageUrl, sanitizeUrl } from '../lib/utils.js';\n\nexport default class ChatMessage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      progress: 0\n    };\n\n    if (props.uploader) {\n      props.uploader.onProgress = this.handleProgress.bind(this);\n    }\n\n    this.handleImagePreview = this.handleImagePreview.bind(this);\n    this.handleFormButtonClick = this.handleFormButtonClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n  }\n\n  handleImagePreview(e) {\n    e.preventDefault();\n    this.props.onImagePreview({\n      url: e.target.src,\n      filename: e.target.title,\n      width: e.target.dataset.width,\n      height: e.target.dataset.height,\n      size: e.target.dataset.size,\n      type: e.target.dataset.mime\n    });\n  }\n\n  handleFormButtonClick(e) {\n    e.preventDefault();\n    const data = {\n      seq: this.props.seq\n    };\n    data.resp = {};\n    if (e.target.dataset.name) {\n      data.resp[e.target.dataset.name] = e.target.dataset.val ? e.target.dataset.val :\n        e.target.dataset.val === undefined ? 1 : '' + e.target.dataset.val;\n    }\n    if (e.target.dataset.act == 'url') {\n      data.ref = sanitizeUrl(e.target.dataset.ref) || 'about:blank';\n    }\n    const text = e.target.dataset.title || 'unknown';\n    this.props.onFormResponse(e.target.dataset.act, text, data);\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const menuItems = this.props.received == Tinode.MESSAGE_STATUS_FAILED ? ['menu_item_send_retry'] : [];\n    this.props.showContextMenu({ seq: this.props.seq, content: this.props.content,\n                                 y: e.pageY, x: e.pageX }, menuItems);\n  }\n\n  handleProgress(ratio) {\n    this.setState({progress: ratio});\n  }\n\n  handleCancelUpload() {\n    this.props.onCancelUpload(this.props.seq, this.props.uploader);\n  }\n\n  render() {\n    const sideClass = this.props.deleted ? 'center' :\n      (this.props.sequence + ' ' + (this.props.response ? 'left' : 'right'));\n    const bubbleClass = (this.props.sequence == 'single' || this.props.sequence == 'last') ? 'bubble tip' : 'bubble';\n    const avatar = this.props.deleted ? null : (this.props.userAvatar || true);\n    const fullDisplay = (this.props.userFrom && this.props.response &&\n      (this.props.sequence == 'single' || this.props.sequence == 'last'));\n\n    let content = this.props.content;\n    const attachments = [];\n    if (this.props.mimeType == Drafty.getContentType() && Drafty.isValid(content)) {\n      Drafty.attachments(content, function(att, i) {\n        if (att.mime == 'application/json') {\n          // Don't show json objects as attachments.\n          // They are not meant for users.\n          return;\n        }\n        attachments.push(<Attachment\n          tinode={this.props.tinode}\n          downloadUrl={Drafty.getDownloadUrl(att)}\n          filename={att.name} uploading={Drafty.isProcessing(att)}\n          mimetype={att.mime} size={Drafty.getEntitySize(att)}\n          progress={this.state.progress}\n          onCancelUpload={this.handleCancelUpload}\n          onError={this.props.onError}\n          key={i} />);\n      }, this);\n      content = React.createElement(React.Fragment, null, Drafty.format(content, draftyFormatter, this));\n    } else if (this.props.deleted) {\n      // Message represents a range of deleted messages.\n      content = <><i className=\"material-icons gray\">block</i> <i className=\"gray\">\n        <FormattedMessage id=\"deleted_content\"\n          defaultMessage=\"content deleted\" description=\"Shown when messages are deleted\" />\n      </i></>\n    } else if (typeof content != 'string') {\n      content = <>\n          <i className=\"material-icons gray\">error_outline</i> <i className=\"gray\">\n            <FormattedMessage id=\"invalid_content\"\n              defaultMessage=\"invalid content\" description=\"Shown when message is unreadable\" /></i>\n        </>\n    }\n\n    return (\n      <li className={sideClass}>\n        {this.props.userFrom && this.props.response ?\n          <div className=\"avatar-box\">\n            {fullDisplay ?\n              <LetterTile\n                topic={this.props.userFrom}\n                title={this.props.userName}\n                avatar={avatar} /> :\n              null}\n          </div> :\n          null}\n        <div>\n          <div className={bubbleClass}>\n            <div className=\"message-content\">\n              {content}\n              {attachments}\n              {this.props.timestamp ?\n                <ReceivedMarker\n                  timestamp={this.props.timestamp}\n                  received={this.props.received} />\n                : null}\n            </div>\n            {this.props.deleted || !this.props.showContextMenu ?\n              null :\n              <span className=\"menuTrigger\">\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">expand_more</i>\n                </a>\n              </span>\n            }\n          </div>\n          {fullDisplay ?\n            <div className=\"author\">\n              <FormattedMessage id=\"user_not_found\" defaultMessage=\"Not found\"\n                description=\"In place of a user's full name when the user is not found.\">{\n                    (notFound) => {return this.props.userName || <i>{notFound}</i>}\n              }</FormattedMessage>\n            </div>\n            : null\n          }\n        </div>\n      </li>\n    );\n  }\n};\n\n// Convert Drafty object to a tree of React elements.\nimport { BROKEN_IMAGE_SIZE, REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\n\nfunction draftyFormatter(style, data, values, key) {\n  let el = Drafty.tagName(style);\n  if (el) {\n    const attr = Drafty.attrValue(style, data) || {};\n    attr.key = key;\n    switch (style) {\n      case 'IM':\n        // Additional processing for images\n        if (data) {\n          attr.className = 'inline-image';\n          const dim = fitImageSize(data.width, data.height,\n            Math.min(this.props.viewportWidth - REM_SIZE * 4, REM_SIZE * 36), REM_SIZE * 24, false) ||\n            {dstWidth: BROKEN_IMAGE_SIZE, dstHeight: BROKEN_IMAGE_SIZE};\n          attr.style = { width: dim.dstWidth + 'px', height: dim.dstHeight + 'px' };\n          if (!Drafty.isProcessing(data)) {\n            attr.src = this.props.tinode.authorizeURL(sanitizeImageUrl(attr.src));\n            attr.alt = data.name;\n            if (attr.src) {\n              attr.onClick = this.handleImagePreview;\n              attr.className += ' image-clickable';\n            } else {\n              attr.src = 'img/broken_image.png';\n            }\n          } else {\n            // Use custom element instead of <img>.\n            el = UploadingImage;\n          }\n        }\n        break;\n      case 'BN':\n        // Button\n        attr.onClick = this.handleFormButtonClick;\n        let inner = React.Children.map(values, (child) => {\n          return typeof child == 'string' ? child : undefined;\n        });\n        if (!inner || inner.length == 0) {\n          inner = [attr.name]\n        }\n        // Get text which will be sent back when the button is clicked.\n        attr['data-title'] = inner.join('');\n        break;\n      case 'FM':\n        // Form\n        attr.className = 'bot-form';\n        break;\n      case 'FE':\n        // Form element formatting is dependent on element content.\n        break;\n    }\n    return React.createElement(el, attr, values);\n  } else {\n    return values;\n  }\n};\n","import React from 'react';\n\n/* BEGIN CheckBox: styled checkbox */\nexport default class CheckBox extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange() {\n    this.props.onChange(this.props.name, !this.props.checked);\n  }\n\n  render() {\n    return (\n      this.props.onChange ? (\n        this.props.checked ?\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box</i> :\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box_outline_blank</i>\n        ) : (\n          this.props.checked ?\n            <i className=\"material-icons\">check_box</i> :\n            <i className=\"material-icons\">check_box_outline_blank</i>\n        )\n    );\n  }\n}\n/* END CheckBox */\n","import React from 'react';\n\nimport Chip from './chip.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n/* BEGIN ChipInput: group membership widget */\nexport default class ChipInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = ChipInput.deriveStateFromProps(props);\n    this.state.input = '';\n    this.state.focused = false;\n\n    this.handleTextInput = this.handleTextInput.bind(this);\n    this.removeChipAt = this.removeChipAt.bind(this);\n    this.handleChipCancel = this.handleChipCancel.bind(this);\n    this.handleFocusGained = this.handleFocusGained.bind(this);\n    this.handleFocusLost = this.handleFocusLost.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  static deriveStateFromProps(props) {\n    return {\n      placeholder: props.chips ? '' : props.prompt,\n      sortedChips: ChipInput.sortChips(props.chips, props.staticMembers),\n      chipIndex: ChipInput.indexChips(props.chips)\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chips != this.props.chips ||\n      prevProps.staticMembers != this.props.staticMembers ||\n      prevProps.prompt != this.props.prompt) {\n      this.setState(ChipInput.deriveStateFromProps(this.props));\n    }\n    if (!prevState || this.props.chips.length > prevState.sortedChips.length) {\n      this.setState({input: ''});\n    }\n  }\n\n  // Map chip index to user name\n  static indexChips(chips) {\n    const index = {};\n    let count = 0;\n    chips.map((item) => {\n      index[item.user] = count;\n      count ++;\n    });\n    return index;\n  }\n\n  // Have non-removable chips appear before all other chips.\n  static sortChips(chips, keep) {\n    const required = [];\n    const normal = [];\n    chips.map((item) => {\n      if (keep && keep.includes(item.user)) {\n        required.push(item);\n      } else {\n        normal.push(item);\n      }\n    });\n    return required.concat(normal);\n  }\n\n  handleTextInput(e) {\n    this.setState({input: e.target.value});\n    if (this.props.filterFunc) {\n      this.props.filterFunc(e.target.value);\n    }\n  }\n\n  removeChipAt(idx) {\n    const removed = this.state.sortedChips[idx];\n    this.props.onChipRemoved(removed.user, this.state.chipIndex[removed.user]);\n  }\n\n  handleChipCancel(item, idx) {\n    this.removeChipAt(idx);\n  }\n\n  handleFocusGained() {\n    this.setState({focused: true});\n  }\n\n  handleFocusLost() {\n    this.setState({focused: false});\n    if (this.props.onFocusLost) {\n      this.props.onFocusLost(this.state.input);\n    }\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Backspace') {\n      if (this.state.input.length == 0 && this.state.sortedChips.length > 0) {\n        const at = this.state.sortedChips.length - 1;\n        if (this.state.sortedChips[at].user !== this.props.staticMembers) {\n          this.removeChipAt(at);\n        }\n      }\n    } else if (e.key === 'Enter') {\n      if (this.props.onEnter) {\n        this.props.onEnter(this.state.input);\n      }\n    } else if (e.key === 'Escape') {\n      if (this.props.onCancel) {\n        this.props.onCancel();\n      }\n    }\n  }\n\n  render() {\n    const chips = [];\n    let count = 0;\n    const staticMembers = this.props.staticMembers || [];\n    this.state.sortedChips.map((item) => {\n      chips.push(\n        <Chip\n          onCancel={this.handleChipCancel}\n          avatar={makeImageUrl(item.public ? item.public.photo : null)}\n          title={item.public ? item.public.fn : undefined}\n          noAvatar={this.props.avatarDisabled}\n          topic={item.user}\n          required={staticMembers.includes(item.user)}\n          invalid={item.invalid}\n          index={count}\n          key={item.user} />\n      );\n      count++;\n    });\n    const className = \"chip-input\" + (this.state.focused ? ' focused' : '');\n    return (\n      <div className={className}>\n        {chips}\n        <input type=\"text\"\n          placeholder={this.state.placeholder}\n          onChange={this.handleTextInput}\n          onFocus={this.handleFocusGained}\n          onBlur={this.handleFocusLost}\n          onKeyDown={this.handleKeyDown}\n          value={this.state.input}\n          autoFocus />\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\n\nexport default class Chip extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel(this.props.topic, this.props.index);\n  }\n\n  render() {\n    const title = this.props.title || this.props.topic;\n    const className = this.props.invalid ? 'chip invalid' : 'chip';\n    return (\n      <div className={className}>\n        {this.props.noAvatar ?\n          <span className=\"spacer\" /> :\n          <div className=\"avatar-box\">\n            <LetterTile\n              avatar={this.props.avatar || true}\n              topic={this.props.topic}\n              title={this.props.title} />\n          </div>\n        }\n        <span>{title}</span>\n        {this.props.onCancel && !this.props.required ?\n          <a href=\"#\" onClick={this.handleCancel} >&times;</a>\n          : <span className=\"spacer\" />}\n      </div>\n    );\n  }\n};\n","// A panel included into a list of contacts with an action text.\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\n\nclass ContactAction extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.onAction(this.props.action);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <li onClick={this.handleClick} className=\"action\">\n        <div className=\"action-text\">{formatMessage(this.props.title, this.props.values)}</div>\n      </li>\n    );\n  }\n};\n\nexport default injectIntl(ContactAction);\n","import React from 'react';\n\nconst icon_mapping = {'muted': 'notifications_off', 'banned': 'block'};\n\n/* Contact's labels: [you], or icons [muted], [blocked] */\nexport default class ContactBadges extends React.PureComponent {\n    render() {\n      let badges = null;\n      if (this.props.badges && this.props.badges.length > 0) {\n        badges = [];\n        this.props.badges.map(function(b) {\n          if (b.icon) {\n            badges.push(<i className=\"material-icons as-badge\" key={b.key || b.icon}>{icon_mapping[b.icon]}</i>);\n          } else {\n            const style = 'badge' + (b.color ? ' ' + b.color : '');\n            badges.push(<span className={style} key={b.key || b.name}>{b.name}</span>);\n          }\n        });\n        return <>{badges}</>;\n      }\n      return null;\n    }\n};\n","// ContactList: component for showing a list of contacts,\n// such as a list of group members in a group chat.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport Contact from './contact.jsx';\nimport ContactAction from './contact-action.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nconst messages = defineMessages({\n  badge_you: {\n    id: 'badge_you',\n    defaultMessage: 'you',\n    description: 'Badge for indicating the current user'\n  },\n  badge_owner: {\n    id: 'badge_owner',\n    defaultMessage: 'owner',\n    description: 'Badge for indicating the owner'\n  }\n});\n\nclass ContactList extends React.Component {\n  render() {\n    const {formatMessage} = this.props.intl;\n    const showCheckmark = Array.isArray(this.props.topicSelected);\n    const contactNodes = [];\n    let contactsCount = 0;\n    if (this.props.contacts && this.props.contacts.length > 0) {\n      this.props.contacts.map((c) => {\n        if (c.action) {\n          // Action item\n          contactNodes.push(\n            <ContactAction\n              title={c.title} action={c.action} values={c.values}\n              key={c.action}\n              onAction={this.props.onAction}\n              />);\n        } else {\n          // Normal contact\n          const key = this.props.showMode ? c.user : (c.topic || c.user);\n          // If filter function is provided, filter out the items\n          // which don't satisfy the condition.\n          if (this.props.filterFunc && this.props.filter) {\n            let content = [key];\n            if (c.private && c.private.comment) {\n              content.push(('' + c.private.comment).toLowerCase());\n            }\n            if (c.public && c.public.fn) {\n              content.push(('' + c.public.fn).toLowerCase());\n            }\n            if (!this.props.filterFunc(this.props.filter, content)) {\n              return;\n            }\n          }\n\n          const isChannel = Tinode.isChannelTopicName(key);\n          const selected = showCheckmark ?\n            (this.props.topicSelected.indexOf(key) > -1) :\n            (this.props.topicSelected === key);\n          const badges = [];\n          if (this.props.showMode) {\n            if (key == this.props.myUserId) {\n              badges.push({name: formatMessage(messages.badge_you), color: 'green'});\n            }\n            if (c.acs && c.acs.isOwner()) {\n              badges.push({name: formatMessage(messages.badge_owner), color: 'blue'});\n            }\n          }\n          const comment = Array.isArray(c.private) ?\n            c.private.join(',') : (c.private ? c.private.comment : null);\n\n          contactNodes.push(\n            <Contact\n              title={c.public ? c.public.fn : null}\n              avatar={makeImageUrl(c.public ? c.public.photo : null)}\n              comment={comment}\n              unread={this.props.showUnread ? c.unread : 0}\n              now={c.online && this.props.connected}\n              acs={c.acs}\n              showMode={this.props.showMode}\n              badges={badges}\n              showCheckmark={showCheckmark}\n              selected={selected}\n              showOnline={this.props.showOnline && !isChannel}\n              isChannel={isChannel}\n              onSelected={this.props.onTopicSelected}\n              showContextMenu={this.props.showContextMenu}\n              item={key}\n              index={contactNodes.length}\n              key={key} />\n          );\n          contactsCount ++;\n        }\n      }, this);\n    }\n\n    return (\n      <div className={this.props.noScroll ? null : \"scrollable-panel\"}>\n        {contactsCount == 0 ?\n          <div className=\"center-medium-text\"\n            dangerouslySetInnerHTML={{__html: this.props.emptyListMessage}} />\n          :\n          null\n        }\n        {contactNodes.length > 0 ?\n          <ul className=\"contact-box\">\n            {contactNodes}\n          </ul>\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ContactList);\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport LetterTile from './letter-tile.jsx';\nimport ContactBadges from './contact-badges.jsx';\nimport UnreadBadge from './unread-badge.jsx';\n\nexport default class Contact extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.props.onSelected) {\n      // Index this.props.index is used by GroupManager.\n      this.props.onSelected(this.props.item, this.props.index);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.props.item, y: e.pageY, x: e.pageX });\n  }\n\n  render() {\n    let title = this.props.title;\n    if (!title) {\n      title = <i><FormattedMessage id=\"unnamed_topic\" /></i>;\n    } else if (title.length > 30) {\n      // FIXME: this is probably wrong for RTL languages.\n      title = title.substring(0, 28) + '...';\n    }\n    const online = this.props.now ? 'online' : 'offline';\n    const avatar = this.props.avatar ? this.props.avatar : true;\n    const badges = this.props.badges ? this.props.badges.slice() : [];\n    const icon_badges = [];\n    if (this.props.acs) {\n      if (this.props.showMode) {\n        badges.push({name: this.props.acs.getMode(), key: 'mode'});\n      }\n      if (this.props.acs.isMuted()) {\n        icon_badges.push({icon: 'muted'});\n      }\n      if (!this.props.acs.isJoiner()) {\n        icon_badges.push({icon: 'banned'});\n      }\n    }\n\n    return (\n      <li className={!this.props.showCheckmark && this.props.selected ? \"selected\" : null}\n        onClick={this.handleClick}>\n        <div className=\"avatar-box\">\n          <LetterTile\n            avatar={avatar}\n            title={this.props.title}\n            topic={this.props.item} />\n          {this.props.showOnline ? <span className={online} /> :\n            (this.props.showCheckmark && this.props.selected ?\n            <i className=\"checkmark material-icons\">check_circle</i>\n            : null)}\n        </div>\n        <div className=\"text-box\">\n          <div><span className=\"contact-title\">{title}</span>\n            {this.props.isChannel ? <img src=\"/img/channel.png\" className=\"channel\" alt=\"channel\" /> : null}\n            <UnreadBadge count={this.props.unread} /><ContactBadges badges={icon_badges} />\n          </div>\n          {this.props.comment ? <div className=\"contact-comment\">{this.props.comment}</div> : null}\n          <span><ContactBadges badges={badges} /></span>\n        </div>\n        {this.props.showContextMenu ?\n          <span className=\"menuTrigger\">\n            <a href=\"#\" onClick={this.handleContextClick}>\n              <i className=\"material-icons\">expand_more</i>\n            </a>\n          </span> : null}\n      </li>\n    );\n  }\n};\n","// Context Menu: popup/dropdown menu.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { injectIntl, defineMessages } from 'react-intl';\n\nimport { REM_SIZE } from '../config.js';\nimport HashNavigation from '../lib/navigation.js';\n\nconst messages = defineMessages({\n  info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  },\n  clear_messages: {\n    id: 'menu_item_clear_messages',\n    defaultMessage: 'Clear messages',\n    description: 'Delete all messages'\n  },\n  clear_for_all: {\n    id: 'menu_item_clear_messages_for_all',\n    defaultMessage: 'Clear for All',\n    description: 'Delete all message(s) for all members'\n  },\n  'delete': {\n    id: 'menu_item_delete',\n    defaultMessage: 'Delete',\n    description: 'Delete selected messages'\n  },\n  delete_for_all: {\n    id: 'menu_item_delete_for_all',\n    defaultMessage: 'Delete for All',\n    description: 'Delete selected message(s) for all members'\n  },\n  send_retry: {\n    id: 'menu_item_send_retry',\n    defaultMessage: 'Retry',\n    description: 'Retry sending message'\n  },\n  mute: {\n    id: 'menu_item_mute',\n    defaultMessage: 'Mute',\n    description: 'Turn off notifications'\n  },\n  unmute: {\n    id: 'menu_item_unmute',\n    defaultMessage: 'Unmute',\n    description: 'Turn notifications on'\n  },\n  topic_delete: {\n    id: 'menu_item_delete_topic',\n    defaultMessage: 'Delete',\n    description: 'Delete entire topic'\n  },\n  topic_delete_warning: {\n    id: 'topic_delete_warning',\n    defaultMessage: 'Are you sure you want to delete this conversation?',\n    description: 'Alert warning when deleting entire topic'\n  },\n  unblock: {\n    id: 'menu_item_unblock',\n    defaultMessage: 'Unblock',\n    description: 'Unblock topic or user'\n  },\n  // Generic string suitable for either topic or user.\n  block: {\n    id: 'menu_item_block',\n    defaultMessage: 'Block',\n    description: 'Block topic or user'\n  },\n  topic_block_warning: {\n    id: 'topic_block_warning',\n    defaultMessage: 'Are you sure you want to block this conversation?',\n    description: 'Alert warning when blocking a topic.'\n  },\n  member_delete: {\n    id: 'menu_item_member_delete',\n    defaultMessage: 'Remove',\n    description: 'Remove user from topic'\n  },\n  archive: {\n    id: 'menu_item_archive_topic',\n    defaultMessage: 'Archive',\n    description: 'Move topic from the list of active chats to archive'\n  }\n});\n\nclass ContextMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const {formatMessage} = props.intl;\n\n    this.handlePageClick = this.handlePageClick.bind(this);\n    this.handleEscapeKey = this.handleEscapeKey.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n\n    // Preconfigured menu items.\n    this.MenuItems = {\n      'topic_info': {\n        id: 'topic_info',\n        title: formatMessage(messages.info),\n        handler: null\n      },\n      'messages_clear': {\n        id: 'messages_clear',\n        title: formatMessage(messages.clear_messages),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.menu_item_clear_messages), // title\n            formatMessage({id: 'clear_messages_warning'}), // content\n            (() => { this.deleteMessages(true, false, params, errorHandler); }), // onConfirm\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'messages_clear_hard': {\n        id: 'messages_clear_hard',\n        title: formatMessage(messages.clear_for_all),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.menu_item_clear_messages_for_all), // title\n            formatMessage({id: 'delete_messages_warning'}), // content\n            (() => { return this.deleteMessages(true, true, params, errorHandler); }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'message_delete': {\n        id: 'message_delete',\n        title: formatMessage(messages.delete),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, false, params, errorHandler);\n        }\n      },\n      'message_delete_hard': {\n        id: 'message_delete_hard',\n        title: formatMessage(messages.delete_for_all),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, true, params, errorHandler);\n        }\n      },\n      'menu_item_send_retry': {\n        id: 'menu_item_send_retry',\n        title: formatMessage(messages.send_retry),\n        handler: (params, errorHandler) => {\n          return this.retryMessage(params, errorHandler);\n        }\n      },\n      'topic_unmute': {\n        id: 'topic_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'topic_mute': {\n        id: 'topic_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'topic_unblock': {\n        id: 'topic_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n      'topic_block': {\n        id: 'topic_block',\n        title: formatMessage(messages.block),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.menu_item_block), // title\n            formatMessage(messages.topic_block_warning), // content\n            (() => {\n              return this.topicPermissionSetter('-JP', params, errorHandler).then((ctrl) => {\n                this.props.onTopicRemoved(params.topicName);\n                return ctrl;\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_delete': {\n        id: 'topic_delete',\n        title: formatMessage(messages.topic_delete),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.menu_item_delete_topic), // title\n            formatMessage(messages.topic_delete_warning), // content\n            (() => {\n              const topic = this.props.tinode.getTopic(params.topicName);\n              if (!topic) {\n                console.log(\"Topic not found: \", params.topicName);\n                return;\n              }\n              return topic.delTopic(true).catch((err) => {\n                if (errorHandler) {\n                  errorHandler(err.message, 'err');\n                }\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_archive': {\n        id: 'topic_archive',\n        title: formatMessage(messages.archive),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic) {\n            console.log(\"Topic not found: \", params.topicName);\n            return;\n          }\n          return topic.archive(true).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      // menu_item_edit_permissions is defined elsewhere.\n      'permissions': {\n        id: 'permissions',\n        title: formatMessage({id: 'menu_item_edit_permissions'}),\n        handler: null\n      },\n      'member_delete': {\n        id: 'member_delete',\n        title: formatMessage(messages.member_delete),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic || !params.user) {\n            console.log(\"Topic or user not found: '\" + params.topicName + \"', '\" + params.user + \"'\");\n            return;\n          }\n          return topic.delSubscription(params.user).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      'member_mute': {\n        id: 'member_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'member_unmute': {\n        id: 'member_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'member_block': {\n        id: 'member_block',\n        title: formatMessage(messages.block),\n        handler: this.topicPermissionSetter.bind(this, '-JP')\n      },\n      'member_unblock': {\n        id: 'member_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handlePageClick, false);\n    document.addEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handlePageClick, false);\n    document.removeEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  handlePageClick(e) {\n    if (ReactDOM.findDOMNode(this).contains(e.target)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n  }\n\n  handleEscapeKey(e) {\n    if (e.keyCode === 27) {\n      this.props.hide();\n    }\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n    let item = this.props.items[e.currentTarget.dataset.id];\n    if (typeof item == 'string') {\n      item = this.MenuItems[item];\n    }\n\n    if (!item) {\n      console.log(\"Invalid menu item ID\", e.currentTarget.dataset.id);\n    } else {\n      this.props.onAction(\n        item.id,\n        item.handler(this.props.params, this.props.onError),\n        this.props.params);\n    }\n  }\n\n  // Menu Actions\n\n  deleteMessages(all, hard, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found: \", params.topicName);\n      return;\n    }\n\n    // We don't know if the message is still pending (e.g. attachment is being uploaded),\n    // so try cancelling first. No harm if we can't cancel.\n    // The message can be cancelled if transmission to the server has not\n    // started yet or if the message send has failed.\n    if (!all && topic.cancelSend(params.seq)) {\n      return;\n    }\n    // Can't cancel. Delete instead.\n    const promise = all ?\n      topic.delMessagesAll(hard) :\n      topic.delMessagesList([params.seq], hard);\n\n    return promise.catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Retries sending failed message.\n  retryMessage(params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    // Remove the existing message entry.\n    if (!topic || !topic.flushMessage(params.seq)) {\n      return;\n    }\n    const msg = topic.createMessage(params.content, false);\n    return topic.publishDraft(msg).catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Function is used by context menu to set permissions.\n  topicPermissionSetter(mode, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found\", params.topicName);\n      return;\n    }\n\n    let result = topic.updateMode(params.user, mode);\n    if (errorHandler) {\n      result = result.catch((err) => {\n        errorHandler(err.message, 'err');\n      });\n    }\n    return result;\n  }\n\n  render() {\n    let count = 0;\n    let menu = [];\n    this.props.items.map((item) => {\n      if (typeof item == 'string') {\n        item = this.MenuItems[item];\n      }\n      if (item && item.title) {\n        menu.push(\n          item.title == '-' ?\n            <li className=\"separator\" key={count} />\n            :\n            <li onClick={this.handleClick} data-id={count} key={count}>{item.title}</li>\n        );\n      }\n      count++;\n    });\n\n    // Ensure that menu is inside the app-container.\n    const hSize = 12 * REM_SIZE;\n    const vSize = REM_SIZE * (0.7 + menu.length * 2.5);\n    const left = (this.props.bounds.right - this.props.clickAt.x < hSize) ?\n        (this.props.clickAt.x - this.props.bounds.left - hSize) :\n        (this.props.clickAt.x - this.props.bounds.left);\n    const top = (this.props.bounds.bottom - this.props.clickAt.y < vSize) ?\n        (this.props.clickAt.y - this.props.bounds.top - vSize) :\n        (this.props.clickAt.y - this.props.bounds.top);\n\n    const position = {\n      left: left + 'px',\n      top: top + 'px'\n    };\n\n    return (\n      <ul className=\"menu\" style={position}>\n        {menu}\n      </ul>\n    );\n  }\n}\n\nexport default injectIntl(ContextMenu);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { bytesToHumanSize } from '../lib/strformat.js';\n\n// Get material icon name from mime type.\nfunction iconFromMime(mime) {\n  // If more icons become available in material icons, add them to this mime-to-icon mapping.\n  const mimeToIcon = {default: 'insert_drive_file', image: 'image', text: 'description', video: 'theaters'};\n\n  return mimeToIcon[mime] || mimeToIcon[(mime || '').split('/')[0]] || mimeToIcon['default'];\n}\n\nexport default class DocPreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleSendDoc = this.handleSendDoc.bind(this);\n  }\n\n  handleSendDoc(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(this.props.content.file);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          <span>{this.props.content.filename}</span>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\">\n          <div className=\"flex-column narrow\">\n            <i className=\"material-icons gray\">{iconFromMime(this.props.content.type)}</i>\n            <div><b><FormattedMessage id=\"label_content_type\" /></b> {this.props.content.type || 'application/octet-stream'}</div>\n            <div><b><FormattedMessage id=\"label_size\" /></b> {bytesToHumanSize(this.props.content.size)}</div>\n          </div>\n        </div>\n        <SendMessage\n          noInput={true}\n          onSendMessage={this.handleSendDoc}\n          onError={this.props.onError} />\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport MenuCancel from './menu-cancel.jsx';\n\nexport default class ErrorPanel extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      show: false,\n    };\n\n    this.hide = this.hide.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.level !== this.props.level) {\n      this.setState({\n        show: !(!this.props.level)\n      });\n    }\n  }\n\n  hide() {\n    this.setState({show: false});\n    if (this.props.onClearError) {\n      this.props.onClearError();\n    }\n  }\n\n  render() {\n    const icons = {err: 'error', warn: 'warning', info: 'info'}\n    const level = icons[this.props.level] || '';\n    const className = 'info-box ' + level;\n    return (\n      <div className={className}>\n        <div className=\"icon\"><i className=\"material-icons\">{level}</i></div>\n        <span>\n          {this.props.text}\n          {this.props.action ?\n            <>\n              &#32;<a href=\"#\"\n                style={{ whiteSpace: 'nowrap' }}\n                onClick={(e) => {e.preventDefault(); this.props.action();}}>\n                {this.props.actionText}\n              </a>\n            </>\n          : null}\n        </span>\n        <div className=\"cancel\"><MenuCancel onCancel={this.hide} /></div>\n      </div>\n    );\n  }\n};\n","// File uload/download progress indicator with a cancel inside.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class FileProgress extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"uploader\">\n        <div><span style={{width: (this.props.progress * 100) + \"%\"}}></span></div>\n        {this.props.progress < 0.999 ?\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n            <i className=\"material-icons\">close</i> <FormattedMessage id=\"action_cancel\"\n              defaultMessage=\"cancel\" description=\"Call to action [cancel]\" />\n          </a>\n          :\n          <FormattedMessage id=\"upload_finishing\" defaultMessage=\"finishing...\"\n            description=\"Notification that upload is finishing\" />\n        }\n      </div>\n    );\n  }\n}\n","// GroupMembers: control for managing a list of group members.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\nimport ContactList from './contact-list.jsx';\n\nconst messages = defineMessages({\n  no_contacts: {\n    id: 'no_contacts',\n    defaultMessage: 'You have no contacts :-(',\n    description: 'Shown in ContactsView when the user has no contacts'\n  },\n  contacts_not_found_short: {\n    id: 'contacts_not_found_short',\n    defaultMessage: \"No contacts match ''{query}''\",\n    description: 'Shown in ContactsView when search returned no results'\n  }\n});\n\nclass GroupManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Array of topic members\n      members: props.members,\n      index: GroupManager.indexMembers(props.members),\n      staticMembers: GroupManager.staticMembers(props.members, props.keepInitialMembers, props.requiredMember),\n      contactFilter: '',\n      noContactsMessage: props.intl.formatMessage(messages.no_contacts),\n      selectedContacts: GroupManager.selectedContacts(props.members)\n    };\n\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleMemberRemoved = this.handleMemberRemoved.bind(this);\n    this.handleContactFilter = this.handleContactFilter.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static indexMembers(members) {\n    let index = {};\n    members.map((m) => {\n      index[m.user] = {delta: 0, present: true}; // Delta: 0 unchanged, +1 added, -1 removed\n    });\n    return index;\n  }\n\n  static staticMembers(members, keepInitial, requiredMember) {\n    let stat = [];\n    members.map((m) => {\n      if (keepInitial || m.user == requiredMember) {\n        stat.push(m.user);\n      }\n    });\n    return stat;\n  }\n\n  static selectedContacts(members) {\n    let sel = [];\n    members.map((m) => {\n      sel.push(m.user);\n    });\n    return sel;\n  }\n\n  handleContactSelected(userId, index) {\n    let status = this.state.index[userId];\n    if (status) {\n      if (status.present) {\n        // Prevent duplicate members\n        return;\n      }\n      status.delta += 1;\n      status.present = true;\n    } else {\n      status = {delta: 1, present: true};\n    }\n\n    let m = this.state.members.slice();\n    m.push(this.props.contacts[index]);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleMemberRemoved(userId, index) {\n    const status = this.state.index[userId];\n    if (!status || !status.present) {\n      return;\n    }\n    status.present = false;\n    status.delta -= 1;\n\n    let m = this.state.members.slice();\n    m.splice(index, 1);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleContactFilter(val) {\n    const {formatMessage} = this.props.intl;\n    const msg = !val ?\n      formatMessage(messages.no_contacts) :\n      formatMessage(messages.contacts_not_found_short, {query: val});\n\n    this.setState({contactFilter: val, noContactsMessage: msg});\n  }\n\n  static doContactFiltering(filter, values) {\n    if (filter) {\n      for (let i=0; i<values.length; i++) {\n        if (values[i].indexOf(filter) >= 0) {\n          return true;\n        }\n      }\n      return false;\n    }\n    return true;\n  }\n\n  handleSubmit() {\n    var instance = this;\n    var members = [];\n    var added = [];\n    var removed = [];\n\n    var keys = Object.keys(this.state.index);\n    keys.map(function(k) {\n      if (instance.state.index[k].present) {\n        members.push(k);\n      }\n\n      if (instance.state.index[k].delta > 0) {\n        added.push(k);\n      } else if (instance.state.index[k].delta < 0) {\n        removed.push(k);\n      }\n    });\n    this.props.onSubmit(members, added, removed);\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <div id=\"group-manager\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_group_members\" defaultMessage=\"Group Members\" description=\"Section title\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ChipInput\n            chips={this.state.members}\n            staticMembers={this.state.staticMembers}\n            prompt=\"add members\"\n            filterFunc={this.handleContactFilter}\n            onChipRemoved={this.handleMemberRemoved} />\n        </div>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_all_contacts\" defaultMessage=\"All Contacts\"\n              description=\"Section title [All Contacts]\" />\n          </label>\n        </div>\n        <ContactList\n          contacts={this.props.contacts}\n          myUserId={this.props.myUserId}\n          topicSelected={this.state.selectedContacts}\n          filter={this.state.contactFilter}\n          filterFunc={GroupManager.doContactFiltering}\n          emptyListMessage={this.state.noContactsMessage}\n          showOnline={false}\n          showUnread={false}\n          onTopicSelected={this.handleContactSelected} />\n        <div id=\"group-manager-buttons\" className=\"panel-form-row\">\n          <button className=\"blue\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n          <button className=\"white\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(GroupManager);\n","// GroupSubs: a list of group subscribers currently online.\n// Show in the topic title bar\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { MAX_ONLINE_IN_TOPIC } from '../config.js'\n\nimport LetterTile from './letter-tile.jsx';\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class GroupSubs extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const usersOnline = [];\n    const totalCount = (this.props.subscribers || []).length;\n    const countToShow = Math.min(MAX_ONLINE_IN_TOPIC, totalCount);\n\n    (this.props.subscribers || []).some((sub) => {\n      usersOnline.push(\n        <div className=\"avatar-box\" key={sub.user}>\n          <LetterTile\n            topic={sub.user}\n            avatar={makeImageUrl(sub.public ? sub.public.photo : null) || true}\n            title={sub.public ? sub.public.fn : null} />\n        </div>\n      );\n      return usersOnline.length == countToShow;\n    });\n\n    return (\n      <div id=\"topic-users\">{usersOnline} {totalCount > countToShow ?\n        <span>\n          <FormattedMessage id=\"more_online_members\" defaultMessage=\"+{overflow} more\"\n              description=\"Shown in MessagesView title bar when the number of online subscribers exceeds MAX_ONLINE_IN_TOPIC\"\n              values={{ overflow: (totalCount - countToShow) }} />\n        </span> : null}\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport { KNOWN_HOSTS } from '../config.js';\n\n/* Combobox for selecting host name */\n\nexport default class HostSelector extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hostName: props.serverAddress,\n      changed: false\n    };\n\n    this.handleHostNameChange = this.handleHostNameChange.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handleHostNameChange(e) {\n    this.setState({hostName: e.target.value, changed: true});\n  }\n\n  handleEditingFinished() {\n    if (this.state.changed) {\n      this.setState({changed: false});\n      this.props.onServerAddressChange(this.state.hostName.trim());\n    }\n  }\n\n  render() {\n    var hostOptions = [];\n    for (let key in KNOWN_HOSTS) {\n      let item = KNOWN_HOSTS[key];\n      hostOptions.push(\n        <option key={item} value={item} />\n      );\n    }\n    return (\n      <div className=\"panel-form-row\">\n        <input type=\"search\" id=\"host-name\" placeholder={this.props.hostName} list=\"known-hosts\"\n          className=\"quoted\" value={this.state.hostName} onChange={this.handleHostNameChange}\n          onBlur={this.handleEditingFinished} required />\n        <datalist id=\"known-hosts\">\n          {hostOptions}\n        </datalist>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\nimport { bytesToHumanSize } from '../lib/strformat.js';\n\nexport default class ImagePreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      width: 0,\n      height: 0\n    };\n\n    this.handleSendImage = this.handleSendImage.bind(this);\n  }\n\n  assignWidth(node) {\n    if (node && !this.state.width) {\n      const bounds = node.getBoundingClientRect();\n      this.setState({\n        width: bounds.width | 0,\n        height: bounds.height | 0\n      });\n    }\n  }\n\n  handleSendImage(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(caption, this.props.content.blob);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n\n    const dim = fitImageSize(this.props.content.width, this.props.content.height,\n      this.state.width, this.state.height, false);\n    const size = dim ? { width: dim.dstWidth + 'px', height: dim.dstHeight + 'px' } :\n      ((this.props.content.width > this.props.content.height) ? {width: '100%'} : {height: '100%'});\n    size.maxWidth = '100%';\n    size.maxHeight = '100%';\n\n    let filename = this.props.content.filename;\n    // Average font aspect ratio is ~0.5; File name takes 1/3 of the viewport width.\n    const maxlength = Math.max(((this.state.width / REM_SIZE / 1.5) | 0) - 2, 12);\n    if (filename.length > maxlength) {\n      filename = filename.slice(0, maxlength/2 - 1) + '…' + filename.slice(1 - maxlength/2);\n    }\n    const width = this.props.content.width || '-';\n    const height = this.props.content.height || '-';\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          {!this.props.onSendMessage ?\n            <a href={this.props.content.url} download={this.props.content.filename}>\n              <i className=\"material-icons\">file_download</i> <FormattedMessage\n                id=\"download_action\" defaultMessage=\"download\" description=\"Call to action [download]\" />\n            </a>\n            :\n            <span>{this.props.content.filename}</span>\n          }\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\" ref={(node) => this.assignWidth(node)}>\n          <img src={this.props.content.url} style={size} className=\"image-preview\" alt={this.props.content.filename} />\n        </div>\n        {this.props.onSendMessage ?\n          <SendMessage\n            messagePrompt=\"add_image_caption\"\n            acceptBlank={true}\n            onSendMessage={this.handleSendImage}\n            onError={this.props.onError} />\n          :\n          <div id=\"image-preview-footer\">\n            <div>\n              <div><b><FormattedMessage id=\"label_file_name\" defaultMessage=\"File name:\"\n                description=\"Label for a file name\" /></b></div>\n              <div><span title={this.props.content.filename}>{filename ? filename : '-'}</span></div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n                description=\"Label for file content type (mime)\" /></b></div>\n              <div>{this.props.content.type}</div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n                description=\"Label for file size\" /></b></div>\n              <div>{width} &times; {height} px; {bytesToHumanSize(this.props.content.size)}</div>\n            </div>\n          </div>}\n      </div>\n    );\n  }\n};\n","// In-place text editor. Shows text with an icon which toggles it into an input field.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport VisiblePassword from './visible-password.jsx';\n\nexport default class InPlaceEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      active: props.active,\n      initialValue: props.value || '',\n      value: props.value || ''\n    };\n\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleStartEditing = this.handleStartEditing.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n    this.handlePasswordFinished = this.handlePasswordFinished.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // If text has changed while in read mode, update text and discard changes.\n    // Ignore update if in edit mode.\n    const newValue = this.props.value || '';\n    if (prevState.initialValue != newValue && !prevState.active) {\n      this.setState({\n        initialValue: newValue,\n        value: newValue\n      });\n    }\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, active: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleEditingFinished(e);\n    }\n  }\n\n  handleStartEditing() {\n    if (!this.props.readOnly) {\n      ReactDOM.findDOMNode(this).focus();\n      this.setState({active: true});\n    }\n  }\n\n  handleEditingFinished(event) {\n    if (this.props.required && !event.target.checkValidity()) {\n      // Empty input\n      this.setState({value: this.props.value, active: false});\n      return;\n    }\n    this.setState({active: false});\n    let value = this.state.value.trim();\n    if ((value || this.props.value) && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  handlePasswordFinished(value) {\n    this.setState({active: false});\n    if (value && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  render() {\n    if (this.state.active) {\n      var fieldType = this.props.type || 'text';\n    } else {\n      var spanText = this.props.type == 'password' ? '••••••••' : this.state.value;\n      var spanClass = 'in-place-edit' +\n        (this.props.readOnly ? ' disabled' : '');\n      if (!spanText) {\n        spanText = this.props.placeholder;\n        spanClass += ' placeholder';\n      }\n      if (spanText.length > 20) {\n        // FIXME: this is wrong for RTL languages.\n        spanText = spanText.substring(0, 19) + '...';\n      }\n    }\n    return (\n      this.state.active ?\n        (fieldType == 'password' ?\n          <VisiblePassword\n            value={this.state.value}\n            placeholder={this.props.placeholder}\n            required={this.props.required ? 'required' : ''}\n            autoComplete={this.props.autoComplete}\n            autoFocus={true}\n            onFinished={this.handlePasswordFinished}/>\n          :\n          <input type={fieldType}\n            value={this.state.value}\n            placeholder={this.props.placeholder}\n            required={this.props.required ? 'required' : ''}\n            autoComplete={this.props.autoComplete}\n            autoFocus\n            onChange={this.handeTextChange}\n            onKeyDown={this.handleKeyDown}\n            onBlur={this.handleEditingFinished} />\n        )\n        :\n        <span className={spanClass} onClick={this.handleStartEditing}>\n          <span className=\"content\">{spanText}</span>\n        </span>\n    );\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Invitation extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleButtonAction = this.handleButtonAction.bind(this);\n  }\n\n  handleButtonAction(evt, data) {\n    evt.preventDefault();\n    this.props.onAction(data);\n  }\n\n  render() {\n    return (\n      <div className=\"accept-invite-panel\">\n        <div className=\"title\">\n          <FormattedMessage id=\"chat_invitation\"\n            defaultMessage=\"You are invited to start a new chat. What would you like to do?\"\n            description=\"New chat invitation message: [Accept] [Ignore] [Block].\" />\n        </div>\n        <div className=\"footer\">\n          <button className=\"blue\" onClick={event => { this.handleButtonAction(event, \"accept\"); }}>\n            <FormattedMessage id=\"chat_invitation_accept\"\n              defaultMessage=\"Accept\" description=\"Action [Accept] for chat invitation.\" />\n          </button>\n          <button className=\"white\" onClick={event => { this.handleButtonAction(event, \"delete\"); }}>\n            <FormattedMessage id=\"chat_invitation_ignore\"\n              defaultMessage=\"Ignore\" description=\"Action [Ignore] for chat invitation.\" />\n          </button>\n          <button className=\"white\" onClick={event => { this.handleButtonAction(event, \"block\"); }}>\n            <FormattedMessage id=\"chat_invitation_block\"\n              defaultMessage=\"Block\" description=\"Action [Block] for chat invitation.\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport Tinode from 'tinode-sdk';\n\nimport { stringHash } from '../lib/strformat.js';\n\nexport default class LetterTile extends React.PureComponent {\n  render() {\n    let avatar;\n    if (this.props.avatar === true) {\n      const isGroup = (Tinode.topicType(this.props.topic) == 'grp');\n      const iconColor = (isGroup ? 'light-color' : 'dark-color')\n        + (Math.abs(stringHash(this.props.topic)) % 16);\n      if (this.props.topic && this.props.title && this.props.title.trim()) {\n        const letter = this.props.title.trim().charAt(0);\n        const className = 'lettertile ' + iconColor;\n        avatar = (<div className={className}><div>{letter}</div></div>)\n      } else {\n        const className = 'material-icons ' + iconColor;\n        avatar = isGroup ?\n          <i className={className}>group</i> : <i className={className}>person</i>;\n      }\n    } else if (this.props.avatar) {\n      // If avatar image is invalid, show a placeholder.\n      avatar = <img className=\"avatar\" alt=\"avatar\" src={this.props.avatar}\n        onError={(e)=>{e.target.onerror = null; e.target.src=\"/img/broken_image.png\"}} />;\n    } else {\n      avatar = null;\n    }\n    return avatar;\n  }\n}\n","import React from 'react';\n\nexport default class LoadSpinner extends React.PureComponent {\n  render() {\n    return (this.props.show ?\n      <div className=\"load-spinner-box\"><div className=\"loader-spinner\"></div></div> : null);\n  }\n}\n","// The X menu to be displayed in title bars.\nimport React from 'react';\n\nexport default class MenuCancel extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n        <i className=\"material-icons\">close</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class MenuContacts extends React.PureComponent {\n  render() {\n    return (\n      <div>\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onNewTopic();}}><i className=\"material-icons\">chat</i></a>\n        &nbsp;\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nexport default class MenuStart extends React.PureComponent {\n  render() {\n    return (\n        <div>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSignUp();}}><i className=\"material-icons\">person_add</i></a>\n          &nbsp;\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n        </div>\n    );\n  }\n};\n","// Toggle [Title text >] -> [Title text v]\n\nimport React from 'react';\n\nexport default class MoreButton extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: props.open\n    };\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n\n  handleToggle() {\n    const open = !this.state.open;\n    this.setState({open: open});\n    if (this.props.onToggle) {\n      this.props.onToggle(open);\n    }\n  }\n\n  render() {\n    return (<label className=\"small clean-clickable\" onClick={this.handleToggle}>{this.props.title}...\n      {this.state.open ? <i className=\"material-icons\">expand_more</i> :\n        <i className=\"material-icons\">chevron_right</i>}\n      </label>);\n  }\n}\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  invalid_id: {\n    id: 'error_invalid_id',\n    defaultMessage: 'Invalid ID',\n    description: 'Error message'\n  }\n});\n\nclass NewTopicById extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      groupId: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({groupId: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.groupId) {\n      var name = this.state.groupId.trim();\n      if (name.length > 3 && (name.substr(0, 3) == 'usr' || name.substr(0, 3) == 'grp')) {\n        this.props.onSubmit(name);\n      } else {\n        this.props.onError(this.props.intl.formatMessage(messages.invalid_id), 'err');\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"group_user_id_prompt\" defaultMessage=\"Group or User ID\"\n          description=\"Prompt for entering user or group ID\">{\n          (prompt) => <input type=\"text\" placeholder={prompt}\n            value={this.state.groupId} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required autoFocus />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"blue\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_subscribe\" defaultMessage=\"Subscribe\"\n              description=\"Button [Subscribe]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicById);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from './avatar-upload.jsx';\nimport CheckBox from './checkbox.jsx';\nimport TagManager from './tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class NewTopicGroup extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      fn: '', // full/formatted name\n      private: '',\n      imageDataUrl: null,\n      tags: [],\n      isChannel: false\n    };\n\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handlePrivateChange = this.handlePrivateChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleTagsChanged = this.handleTagsChanged.bind(this);\n    this.handleChannelToggle = this.handleChannelToggle.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handlePrivateChange(e) {\n    this.setState({private: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleTagsChanged(tags) {\n    this.setState({tags: tags});\n  }\n\n  handleChannelToggle() {\n    this.setState({isChannel: !this.state.isChannel});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const fn = this.state.fn.trim().substring(0, MAX_TITLE_LENGTH);\n    const comment = this.state.private.trim().substring(0, MAX_TITLE_LENGTH);\n    if (fn) {\n      this.props.onSubmit(fn, this.state.imageDataUrl, comment, this.state.tags, this.state.isChannel);\n    }\n  }\n\n  render() {\n    var submitClasses = 'blue';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n    return (\n      <form className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\" htmlFor=\"new-topic-fn\">\n              <FormattedMessage id=\"label_topic_name\" />\n            </label>\n            <FormattedMessage id=\"topic_name_editing_placeholder\" defaultMessage=\"Freeform name of the group\"\n              description=\"Prompt for entering topic name\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-fn\" placeholder={placeholder}\n                value={this.state.fn} onChange={this.handleFnChange} autoFocus required />\n            }</FormattedMessage>\n            <br />\n            <label className=\"small\" htmlFor=\"new-topic-priv\">\n              <FormattedMessage id=\"label_private\" />\n            </label>\n            <FormattedMessage id=\"private_editing_placeholder\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-priv\" placeholder={placeholder}\n                value={this.state.private} onChange={this.handlePrivateChange} />\n            }</FormattedMessage>\n          </div>\n          <AvatarUpload\n            onError={this.props.onError}\n            onImageChanged={this.handleImageChanged} />\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox checked={this.state.isChannel} onChange={this.handleChannelToggle}/>&nbsp;\n          <label onClick={this.handleChannelToggle}><FormattedMessage id=\"channel_prompt\"\n            defaultMessage=\"This is a channel\"\n            description=\"Checkbox label when creating a channel\" /></label>\n        </div>\n        <FormattedMessage id=\"title_tag_manager\">{\n          (title) => <TagManager\n            tags={this.state.tags}\n            activated={true}\n            onTagsChanged={this.handleTagsChanged}\n            tinode={this.props.tinode}\n            title={title} />\n        }</FormattedMessage>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses}>\n            <FormattedMessage id=\"button_create\" defaultMessage=\"Create\"\n              description=\"Button [Create]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// PermissionsEditor: Component for editing permissions\n// <PermissionsEditor mode=\"JWROD\" skip=\"O\" onChange={this.handleCheckboxTest} />\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport CheckBox from './checkbox.jsx';\nimport Contact from './contact.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n// Translatable permission names.\nconst messages = defineMessages({\n  'joiner': {\n    id: 'permission_join',\n    defaultMessage: \"Join ({val})\",\n    description: 'Name of J permission'\n  },\n  'reader': {\n    id: 'permission_read',\n    defaultMessage: \"Read ({val})\",\n    description: 'Name of R permission'\n  },\n  'writer': {\n    id: 'permission_write',\n    defaultMessage: \"Write ({val})\",\n    description: 'Name of W permission'\n  },\n  'preser': {\n    id: 'permission_pres',\n    defaultMessage: \"Get notified ({val})\",\n    description: 'Name of P permission'\n  },\n  'approver': {\n    id: 'permission_admin',\n    defaultMessage: \"Approve ({val})\",\n    description: 'Name of A permission'\n  },\n  'sharer': {\n    id: 'permission_share',\n    defaultMessage: \"Share ({val})\",\n    description: 'Name of S permission'\n  },\n  'deleter': {\n    id: 'permission_delete',\n    defaultMessage: \"Delete ({val})\",\n    description: 'Name of D permission'\n  },\n  'owner': {\n    id: 'permission_owner',\n    defaultMessage: \"Owner ({val})\",\n    description: 'Name of O permission'\n  }\n});\n\nclass PermissionsEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mode: (props.mode || '').replace('N', '')\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(val) {\n    let mode = this.state.mode;\n    let idx = mode.indexOf(val);\n    if (idx == -1) {\n      mode += val;\n    } else {\n      mode = mode.replace(val, '');\n    }\n    this.setState({mode: mode});\n  }\n\n  handleSubmit() {\n    // Normalize string, otherwise cannot check if mode has changed.\n    var mode = (this.state.mode || 'N').split('').sort().join('');\n    var before = (this.props.mode || 'N').split('').sort().join('')\n    if (mode !== before) {\n      this.props.onSubmit(mode);\n    } else {\n      this.props.onCancel();\n    }\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const all = 'JRWPASDO';\n    const names = {\n      'J': formatMessage(messages.joiner, {val: 'J'}),\n      'R': formatMessage(messages.reader, {val: 'R'}),\n      'W': formatMessage(messages.writer, {val: 'W'}),\n      'P': formatMessage(messages.preser, {val: 'P'}),\n      'A': formatMessage(messages.approver, {val: 'A'}),\n      'S': formatMessage(messages.sharer, {val: 'S'}),\n      'D': formatMessage(messages.deleter, {val: 'D'}),\n      'O': formatMessage(messages.owner, {val: 'O'})\n    };\n\n    let skip = this.props.skip || '';\n    let mode = this.state.mode;\n    let compare = (this.props.compare || '').replace('N', '');\n    let items = [];\n    for (let i=0; i<all.length; i++) {\n      let c = all.charAt(i);\n      if (skip.indexOf(c) >= 0 && mode.indexOf(c) < 0) {\n        // Permission is marked as inactive: hide unchecked permissions, disable checked permissions\n        continue;\n      }\n      items.push(\n        <tr key={c}>\n          <td>{names[c]}</td>\n          <td className=\"checkbox\">{skip.indexOf(c) < 0 ?\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} onChange={this.handleChange}/>\n            :\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} />\n          }</td>{this.props.compare ? <td className=\"checkbox\">\n            <CheckBox name={c} checked={(compare.indexOf(c) >= 0)}/>\n          </td> : null}\n        </tr>\n      );\n    }\n\n    return (\n      <div className=\"panel-form-column\">\n        {this.props.userTitle ?\n          <ul className=\"contact-box\"><Contact\n            item={this.props.item}\n            title={this.props.userTitle}\n            avatar={makeImageUrl(this.props.userAvatar ? this.props.userAvatar : null)} /></ul> : null}\n        <label className=\"small\"><FormattedMessage id=\"title_permissions\"\n          defaultMessage=\"Permissions\" description=\"Section title\"/></label>\n        <table className=\"permission-editor\">\n        {this.props.compare ?\n          <thead><tr>\n            <th></th><th>{this.props.modeTitle}</th>\n            <th>{this.props.compareTitle}</th>\n          </tr></thead> :\n          null}\n        <tbody>\n          {items}\n        </tbody></table>\n        <br />\n        <div className=\"dialog-buttons\">\n          <button className=\"outline\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" />\n          </button>\n          <button className=\"blue\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(PermissionsEditor);\n","// Received/read indicator.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { shortDateFormat } from '../lib/strformat.js';\n\nconst messages = defineMessages({\n  'sending': {\n    'id': 'message_sending',\n    'defaultMessage': 'sending...',\n    'description': 'Message being sent, in place of time stamp'\n  },\n  'failed': {\n    'id': 'message_sending_failed',\n    'defaultMessage': 'failed',\n    'description': 'Failed to send message, in place of time stamp'\n  }\n});\n\nclass ReceivedMarker extends React.PureComponent {\n  render() {\n    const {formatMessage} = this.props.intl;\n    let timestamp;\n    if (this.props.received <= Tinode.MESSAGE_STATUS_SENDING) {\n      timestamp = formatMessage(messages.sending);\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_FAILED) {\n      timestamp = formatMessage(messages.failed);\n    } else {\n      timestamp = shortDateFormat(this.props.timestamp, this.props.intl.locale);\n    }\n\n    let marker = null;\n    if (this.props.received <= Tinode.MESSAGE_STATUS_SENDING) {\n      marker = (<i className=\"material-icons small\">access_time</i>); // watch face\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_FAILED) {\n      marker = (<i className=\"material-icons small amber\">warning</i>); // yellow icon /!\\\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_SENT) {\n      marker = (<i className=\"material-icons small\">done</i>); // checkmark\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_RECEIVED) {\n      marker = (<i className=\"material-icons small\">done_all</i>); // double checkmark\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_READ) {\n      marker = (<i className=\"material-icons small blue\">done_all</i>); // blue double checkmark\n    }\n\n    return (\n      <span className=\"timestamp\">\n        {timestamp}{'\\u00a0'}{marker}\n      </span>\n    );\n  }\n};\n\nexport default injectIntl(ReceivedMarker);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nexport default class SearchContacts extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      edited: false,\n      search: ''\n    };\n\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  componentWillUnmount() {\n    if (this.state.edited) {\n      this.setState({search: '', edited: false});\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n  }\n\n  handleSearchChange(e) {\n    this.setState({search: e.target.value});\n  }\n\n  handleSearch(e) {\n    e.preventDefault();\n    var query = this.state.search.trim();\n    this.setState({edited: (query.length > 0)});\n    this.props.onSearchContacts(query.length > 0 ? query : Tinode.DEL_CHAR);\n  }\n\n  handleClear(e) {\n    e.preventDefault();\n    if (this.state.edited) {\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n    this.setState({search: '', edited: false});\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Enter') {\n      this.handleSearch(e);\n    } else if (e.key === 'Escape') {\n      this.handleClear();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <i className=\"material-icons search\">search</i>\n          <FormattedMessage id=\"search_placeholder\" defaultMessage=\"List like email:alice@example.com, tel:17025550003...\"\n            description=\"Placeholder in contacts search field\">{\n            (search_placeholder) => <input className=\"search\" type=\"text\"\n              placeholder={search_placeholder}\n              value={this.state.search} onChange={this.handleSearchChange}\n              onKeyDown={this.handleKeyDown} required autoFocus />\n          }</FormattedMessage>\n          <a href=\"#\" onClick={this.handleClear}>\n            <i className=\"material-icons\">close</i>\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","// Send message form.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport { KEYPRESS_DELAY } from '../config.js';\nimport { filePasted } from '../lib/blob-helpers.js';\n\nconst messages = defineMessages({\n  'messaging_disabled': {\n    id: 'messaging_disabled_prompt',\n    defaultMessage: 'Messaging disabled',\n    description: 'Prompt in SendMessage in read-only topic'\n  },\n  'type_new_message': {\n    id: 'new_message_prompt',\n    defaultMessage: 'New message',\n    description: 'Prompt in send message field'\n  },\n  'add_image_caption': {\n    id: 'image_caption_prompt',\n    defaultMessage: 'Image caption',\n    description: 'Prompt in SendMessage for attached image'\n  },\n  'file_attachment_too_large': {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  },\n  'cannot_initiate_upload': {\n    id: 'cannot_initiate_file_upload',\n    defaultMessage: 'Cannot initiate file upload.',\n    description: 'Generic error messagewhen attachment fails'\n  },\n});\n\nclass SendMessage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      message: '',\n      // Make initial keypress time as if it happened 5001 milliseconds in the past.\n      keypressTimestamp: new Date().getTime() - KEYPRESS_DELAY - 1\n    };\n\n    this.handlePasteEvent = this.handlePasteEvent.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleSend = this.handleSend.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleMessageTyping = this.handleMessageTyping.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.addEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.removeEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.messageEditArea) {\n      this.messageEditArea.focus();\n    }\n  }\n\n  handlePasteEvent(e) {\n    if (this.props.disabled) {\n      return;\n    }\n    // FIXME: handle large files too.\n    if (filePasted(e,\n      (bits, mime, width, height, fname) => {\n        this.props.onAttachImage(mime, bits, width, height, fname);\n      },\n      (mime, bits, fname) => {\n        this.props.onAttachFile(mime, bits, fname);\n      },\n      this.props.onError)) {\n\n      // If a file was pasted, don't paste base64 data into input field.\n      e.preventDefault();\n    }\n  }\n\n  handleAttachImage(e) {\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachImage(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleAttachFile(e) {\n    const {formatMessage} = this.props.intl;\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachFile(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleSend(e) {\n    e.preventDefault();\n    const message = this.state.message.trim();\n    if (message || this.props.acceptBlank || this.props.noInput) {\n      this.props.onSendMessage(message);\n      this.setState({message: ''});\n    }\n  }\n\n  /* Send on Enter key */\n  handleKeyPress(e) {\n    // Remove this if you don't want Enter to trigger send\n    if (e.key === 'Enter') {\n      // Have Shift-Enter insert a line break instead\n      if (!e.shiftKey) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.handleSend(e);\n      }\n    }\n  }\n\n  handleMessageTyping(e) {\n    const newState = {message: e.target.value};\n    if (this.props.onKeyPress) {\n      const now = new Date().getTime();\n      if (now - this.state.keypressTimestamp > KEYPRESS_DELAY) {\n        this.props.onKeyPress();\n        newState.keypressTimestamp = now;\n      }\n    }\n    this.setState(newState);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const prompt = this.props.disabled ?\n      formatMessage(messages.messaging_disabled) :\n      (this.props.messagePrompt ?\n        formatMessage(messages[this.props.messagePrompt]) :\n        formatMessage(messages.type_new_message));\n    return (\n      <div id=\"send-message-panel\">\n        {!this.props.disabled ?\n          <>\n            {this.props.onAttachFile ?\n              <>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachImage.click();}} title=\"Add image\">\n                  <i className=\"material-icons secondary\">photo</i>\n                </a>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachFile.click();}} title=\"Attach file\">\n                  <i className=\"material-icons secondary\">attach_file</i>\n                </a>\n              </>\n              :\n              null}\n            {this.props.noInput ?\n              <div className=\"hr thin\" /> :\n              <textarea id=\"sendMessage\" placeholder={prompt}\n                value={this.state.message} onChange={this.handleMessageTyping}\n                onKeyPress={this.handleKeyPress}\n                ref={(ref) => {this.messageEditArea = ref;}}\n                autoFocus />}\n            <a href=\"#\" onClick={this.handleSend} title=\"Send\">\n              <i className=\"material-icons\">send</i>\n            </a>\n            <input type=\"file\" ref={(ref) => {this.attachFile = ref;}}\n              onChange={this.handleAttachFile} style={{display: 'none'}} />\n            <input type=\"file\" ref={(ref) => {this.attachImage = ref;}} accept=\"image/*\"\n              onChange={this.handleAttachImage} style={{display: 'none'}} />\n          </>\n          :\n          <div id=\"writing-disabled\">{prompt}</div>\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SendMessage);\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\nimport ButtonBack from './button-back.jsx';\nimport MenuContacts from './menu-contacts.jsx';\nimport MenuStart from './menu-start.jsx';\n\nexport default class SideNavbar extends React.PureComponent {\n  render() {\n    return (\n        <div id=\"side-caption-panel\" className=\"caption-panel\">\n          {this.props.onCancel ? <ButtonBack onBack={this.props.onCancel} /> : null}\n          {this.props.avatar ?\n            <div id=\"self-avatar\" className=\"avatar-box\">\n              <LetterTile\n                avatar={this.props.avatar}\n                topic={this.props.myUserId}\n                title={this.props.title} />\n            </div>\n            :\n            null}\n          <div id=\"sidepanel-title\" className=\"panel-title\">{this.props.title}</div>\n          {this.props.state === 'login' ?\n              <MenuStart onSignUp={this.props.onSignUp} onSettings={this.props.onSettings} /> :\n            this.props.state === 'contacts' ?\n              <MenuContacts onNewTopic={this.props.onNewTopic} onSettings={this.props.onSettings} /> :\n            null}\n        </div>\n    );\n  }\n};\n","// TagManager: edit topic or user tags.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\n\nimport { MAX_TAG_COUNT, MAX_TAG_LENGTH, MIN_TAG_LENGTH } from '../config.js';\nimport { arrayEqual } from '../lib/utils.js';\n\nexport default class TagManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tags: this.props.tags,\n      tagInput: '',\n      activated: this.props.activated\n    };\n\n    this.handleTagInput = this.handleTagInput.bind(this);\n    this.handleAddTag = this.handleAddTag.bind(this);\n    this.handleRemoveTag = this.handleRemoveTag.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (!arrayEqual(nextProps.tags, prevState.tags) && !prevState.activated) {\n      return {tags: nextProps.tags};\n    }\n    return null;\n  }\n\n  handleTagInput(text) {\n    this.setState({tagInput: text});\n    if (text.length > 0) {\n      const last = text[text.length-1];\n      if (text[0] == '\"') {\n        // This is a quoted string.\n        if (text.length > 1 && last == '\"') {\n          this.handleAddTag(text.substring(1, text.length-1));\n        }\n      } else if (last == ',' || last == ' ' || last == ';' || last == '\"') {\n        // User entered ',', ' ' or ';'\n        this.handleAddTag(text.substring(0, text.length-1).trim());\n      }\n    }\n  }\n\n  handleAddTag(tag) {\n    const maxTagCount = this.props.tinode.getServerLimit('maxTagCount', MAX_TAG_COUNT);\n\n    if (tag.length > 0 && this.state.tags.length < maxTagCount) {\n      const tags = this.state.tags.slice(0);\n      tags.push(tag);\n\n      this.setState({tags: tags, tagInput: ''});\n      if (this.props.onTagsChanged) {\n        this.props.onTagsChanged(tags);\n      }\n      return tags;\n    }\n    return this.state.tags;\n  }\n\n  handleRemoveTag(tag, index) {\n    const tags = this.state.tags.slice(0);\n    tags.splice(index, 1);\n    this.setState({tags: tags});\n    if (this.props.onTagsChanged) {\n      this.props.onTagsChanged(tags);\n    }\n  }\n\n  handleSubmit() {\n    // Add unprocessed input to tags, submit the list.\n    this.props.onSubmit(this.handleAddTag(this.state.tagInput.trim()));\n    this.setState({activated: false, tags: this.props.tags});\n  }\n\n  handleCancel() {\n    this.setState({activated: false, tagInput: '', tags: this.props.tags});\n    if (this.props.onCancel) {\n      this.props.onCancel();\n    }\n  }\n\n  render() {\n    const minTagLength = this.props.tinode.getServerLimit('minTagLength', MIN_TAG_LENGTH);\n    const maxTagLength = this.props.tinode.getServerLimit('maxTagLength', MAX_TAG_LENGTH);\n\n    let tags = [];\n    if (this.state.activated) {\n      this.state.tags.map((tag) => {\n        tags.push({user: tag, invalid: (tag.length < minTagLength || tag.length > maxTagLength)});\n      });\n    } else {\n      this.state.tags.map((tag) => {\n        tags.push(<span className=\"badge\" key={tags.length}>{tag}</span>);\n      });\n      if (tags.length == 0) {\n        tags = (\n          <i>\n            <FormattedMessage id=\"tags_not_found\" defaultMessage=\"No tags defined. Add some.\" description=\"\" />\n          </i>\n        );\n      }\n    }\n    return (\n      <div className=\"panel-form-column\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">{this.props.title}</label>\n        </div>\n        {this.state.activated ?\n        <div>\n          <FormattedMessage id=\"tags_editor_no_tags\" defaultMessage=\"Add some tags\"\n            description=\"Tag editor prompt when no tags are found.\">{\n            (add_tags_prompt) => <ChipInput\n              chips={tags}\n              avatarDisabled={true}\n              prompt={add_tags_prompt}\n              onEnter={this.handleAddTag}\n              onFocusLost={this.handleAddTag}\n              onCancel={this.handleCancel}\n              onChipRemoved={this.handleRemoveTag}\n              filterFunc={this.handleTagInput} />\n          }</FormattedMessage>\n          {this.props.onSubmit || this.props.onCancel ?\n            <div id=\"tag-manager-buttons\" className=\"dialog-buttons panel-form-row\">\n              <button className=\"outline\" onClick={this.handleCancel}>\n                <FormattedMessage id=\"button_cancel\" defautMessage=\"Cancel\" description=\"Rejection button [Cancel]\" />\n              </button>\n              <button className=\"blue\" onClick={this.handleSubmit}>\n                <FormattedMessage id=\"button_ok\" defautMessage=\"OK\" description=\"Confirmation button [OK]\" />\n              </button>\n            </div>\n          : null}\n        </div>\n        :\n        <div className=\"quoted\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.setState({activated: true});}}>\n            <i className=\"material-icons\">edit</i> &nbsp;<FormattedMessage id=\"title_manage_tags\" defaultMessage=\"Manage\"\n              description=\"Section title for the list of tags\" />\n          </a>\n          <>{tags}</>\n        </div>\n      }\n      </div>\n    );\n  }\n};\n","// The counter of unread messages in the topic.\nimport React from 'react';\n\nexport default class UnreadBadge extends React.PureComponent {\n  render() {\n    return (this.props.count > 0 ?\n      <span className=\"unread\">{this.props.count > 9 ? \"9+\" : this.props.count}</span>\n      : null);\n  }\n};\n","// Image view with progress bar and a cancel button.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\n\nexport default class UploadingImage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"inline-image\">\n        {React.createElement('img', this.props)}\n        <div className=\"rounded-container\">\n          <FileProgress progress={this.props.progress} onCancel={this.props.onCancelUpload} />\n        </div>\n      </div>\n    );\n  }\n};\n","// Password with a visiblity toggle.\nimport React from 'react';\n\nexport default class VisiblePassword extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: this.props.value,\n      visible: false\n    };\n\n    this.handleVisibility = this.handleVisibility.bind(this);\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n    if (this.props.onChange) {\n      this.props.onChange(e);\n    }\n  }\n\n  handleVisibility(e) {\n    e.preventDefault();\n    this.setState({visible: !this.state.visible});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode == 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, visible: false});\n      if (this.props.onFinished) {\n        this.props.onFinished();\n      }\n    } else if (e.keyCode == 13) {\n      // Enter pressed\n      this.handleEditingFinished();\n    }\n  }\n\n  handleEditingFinished(e) {\n    if (e) {\n      let currentTarget = e.currentTarget;\n      setTimeout(() => {\n        if (!currentTarget.contains(document.activeElement)) {\n          if (this.props.onFinished) {\n            this.props.onFinished(this.state.value);\n          }\n        }\n      }, 0);\n    } else if (this.props.onFinished) {\n      this.props.onFinished(this.state.value.trim());\n    }\n  }\n\n  render() {\n    return (\n      <div tabIndex=\"-1\" className=\"group-focus\"\n        onBlur={this.handleEditingFinished}>\n        <input className=\"with-visibility\"\n          type={this.state.visible ? \"text\" : \"password\"}\n          value={this.state.value}\n          placeholder={this.props.placeholder}\n          required={this.props.required ? 'required' : ''}\n          autoFocus={this.props.autoFocus ? 'autoFocus' : ''}\n          autoComplete={this.props.autoComplete}\n          onChange={this.handeTextChange}\n          onKeyDown={this.handleKeyDown} />\n        <span onClick={this.handleVisibility}>\n          <i className=\"material-icons clickable light-gray\">\n            {this.state.visible ? 'visibility' : 'visibility_off'}\n          </i>\n        </span>\n      </div>\n    );\n  }\n}\n","module.exports = React;","module.exports = ReactDOM;","module.exports = ReactIntl;","module.exports = Tinode;","module.exports = firebase;","module.exports = firebase.messaging;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(\"./src/index.js\");\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}