{"version":3,"sources":["webpack://tinode-webapp/external \"React\"","webpack://tinode-webapp/external \"ReactDOM\"","webpack://tinode-webapp/external \"ReactIntl\"","webpack://tinode-webapp/external \"firebase\"","webpack://tinode-webapp/external \"Tinode\"","webpack://tinode-webapp/external [\"firebase\",\"messaging\"]","webpack://tinode-webapp/./src/widgets/alert.jsx","webpack://tinode-webapp/./src/version.js","webpack://tinode-webapp/./src/config.js","webpack://tinode-webapp/./src/widgets/context-menu.jsx","webpack://tinode-webapp/./src/lib/strformat.js","webpack://tinode-webapp/./src/widgets/letter-tile.jsx","webpack://tinode-webapp/./src/widgets/load-spinner.jsx","webpack://tinode-webapp/./src/lib/utils.js","webpack://tinode-webapp/./src/widgets/avatar-upload.jsx","webpack://tinode-webapp/./src/widgets/badge-list.jsx","webpack://tinode-webapp/./src/widgets/checkbox.jsx","webpack://tinode-webapp/./src/widgets/contact-badges.jsx","webpack://tinode-webapp/./src/widgets/received-marker.jsx","webpack://tinode-webapp/./src/widgets/unread-badge.jsx","webpack://tinode-webapp/./src/widgets/contact.jsx","webpack://tinode-webapp/./src/widgets/contact-action.jsx","webpack://tinode-webapp/./src/lib/blob-helpers.js","webpack://tinode-webapp/./src/widgets/contact-list.jsx","webpack://tinode-webapp/./src/widgets/menu-cancel.jsx","webpack://tinode-webapp/./src/widgets/error-panel.jsx","webpack://tinode-webapp/./src/widgets/chip.jsx","webpack://tinode-webapp/./src/widgets/chip-input.jsx","webpack://tinode-webapp/./src/widgets/group-manager.jsx","webpack://tinode-webapp/./src/widgets/visible-password.jsx","webpack://tinode-webapp/./src/widgets/in-place-edit.jsx","webpack://tinode-webapp/./src/widgets/more-button.jsx","webpack://tinode-webapp/./src/widgets/permissions-editor.jsx","webpack://tinode-webapp/./src/widgets/tag-manager.jsx","webpack://tinode-webapp/./src/views/info-view.jsx","webpack://tinode-webapp/./src/widgets/file-progress.jsx","webpack://tinode-webapp/./src/widgets/attachment.jsx","webpack://tinode-webapp/./src/widgets/uploading-image.jsx","webpack://tinode-webapp/./src/widgets/chat-message.jsx","webpack://tinode-webapp/./src/widgets/send-message.jsx","webpack://tinode-webapp/./src/widgets/doc-preview.jsx","webpack://tinode-webapp/./src/widgets/group-subs.jsx","webpack://tinode-webapp/./src/widgets/image-preview.jsx","webpack://tinode-webapp/./src/widgets/invitation.jsx","webpack://tinode-webapp/./src/views/logo-view.jsx","webpack://tinode-webapp/./src/lib/navigation.js","webpack://tinode-webapp/./src/views/messages-view.jsx","webpack://tinode-webapp/./src/widgets/button-back.jsx","webpack://tinode-webapp/./src/widgets/menu-contacts.jsx","webpack://tinode-webapp/./src/widgets/menu-start.jsx","webpack://tinode-webapp/./src/widgets/side-navbar.jsx","webpack://tinode-webapp/./src/views/account-settings-view.jsx","webpack://tinode-webapp/./src/views/contacts-view.jsx","webpack://tinode-webapp/./src/lib/local-storage.js","webpack://tinode-webapp/./src/views/create-account-view.jsx","webpack://tinode-webapp/./src/widgets/cropper.jsx","webpack://tinode-webapp/./src/widgets/avatar-crop.jsx","webpack://tinode-webapp/./src/widgets/topic-desc-edit.jsx","webpack://tinode-webapp/./src/views/topic-common-view.jsx","webpack://tinode-webapp/./src/views/acc-notifications-view.jsx","webpack://tinode-webapp/./src/views/acc-security-view.jsx","webpack://tinode-webapp/./src/views/acc-support-view.jsx","webpack://tinode-webapp/./src/views/login-view.jsx","webpack://tinode-webapp/./src/widgets/new-topic-by-id.jsx","webpack://tinode-webapp/./src/widgets/new-topic-group.jsx","webpack://tinode-webapp/./src/widgets/search-contacts.jsx","webpack://tinode-webapp/./src/views/new-topic-view.jsx","webpack://tinode-webapp/./src/views/password-reset-view.jsx","webpack://tinode-webapp/./src/widgets/host-selector.jsx","webpack://tinode-webapp/./src/views/settings-view.jsx","webpack://tinode-webapp/./src/views/validation-view.jsx","webpack://tinode-webapp/./src/views/sidepanel-view.jsx","webpack://tinode-webapp/./src/lib/host-name.js","webpack://tinode-webapp/./src/views/tinode-web.jsx","webpack://tinode-webapp/./src/index.js","webpack://tinode-webapp/webpack/bootstrap","webpack://tinode-webapp/webpack/runtime/compat get default export","webpack://tinode-webapp/webpack/runtime/define property getters","webpack://tinode-webapp/webpack/runtime/hasOwnProperty shorthand","webpack://tinode-webapp/webpack/startup"],"names":["React","ReactDOM","ReactIntl","firebase","messaging","Tinode","Alert","render","this","props","visible","className","title","content","onReject","onClick","reject","FormattedMessage","id","defaultMessage","onConfirm","confirm","PACKAGE_VERSION","APP_NAME","KNOWN_HOSTS","hosted","local","DEFAULT_HOST","KEYPRESS_DELAY","DEFAULT_P2P_ACCESS_MODE","REM_SIZE","AVATAR_SIZE","MAX_INBAND_ATTACHMENT_SIZE","MAX_EXTERN_ATTACHMENT_SIZE","MAX_IMAGE_DIM","MAX_TITLE_LENGTH","messages","defineMessages","info","clear_messages","clear_for_all","delete","delete_for_all","send_retry","mute","unmute","topic_delete","topic_delete_warning","delete_messages_warning","unblock","block","topic_block_warning","member_delete","archive","unarchive","edit_permissions","clear_messages_warning","ContextMenu","constructor","super","selfRef","formatMessage","intl","handlePageClick","bind","handleEscapeKey","handleClick","MenuItems","handler","params","errorHandler","onShowAlert","deleteMessages","message","retryMessage","topicPermissionSetter","then","ctrl","onTopicRemoved","topicName","topic","tinode","getTopic","delTopic","catch","err","console","log","user","delSubscription","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","e","current","contains","target","preventDefault","stopPropagation","hide","keyCode","item","items","currentTarget","dataset","onAction","onError","all","hard","cancelSend","seq","delMessagesAll","delMessagesList","flushMessage","msg","createMessage","publishDraft","mode","result","updateMode","count","menu","map","push","key","vSize","length","position","left","bounds","right","clickAt","x","top","bottom","y","style","ref","injectIntl","shortDateFormat","locale","window","navigator","userLanguage","language","now","Date","getFullYear","getMonth","getDate","toLocaleTimeString","hour12","hour","minute","toLocaleDateString","month","day","year","bytesToHumanSize","bytes","sizes","bucket","Math","min","floor","log2","pow","round","toFixed","LetterTile","avatar","isGroup","iconColor","abs","value","hash","i","charCodeAt","stringHash","trim","letter","charAt","alt","src","onerror","LoadSpinner","large","clear","centered","show","updateFavicon","oldIcon","getElementById","head","getElementsByTagName","newIcon","createElement","type","rel","href","removeChild","appendChild","theCard","fn","imageUrl","imageMimeType","card","mimeType","matches","exec","photo","data","substring","indexOf","arrayEqual","a","b","Array","isArray","sort","l","sanitizeUrl","url","allowedSchemes","replace","test","schemes","join","RegExp","sanitizeImageUrl","sanitizedUrl","deliveryMarker","received","name","color","AvatarUpload","state","source","handleFileReceived","componentDidUpdate","prevProps","setState","image","files","onImageUpdated","URL","createObjectURL","randId","random","substr","readOnly","authorizeURL","uid","accept","onChange","htmlFor","uploading","icon_mapping","badge_verified","badge_staff","badge_danger","BadgeList","badges","trustedBadges","comment","CheckBox","handleChange","checked","ContactBadges","icon","message_sending","message_sending_failed","ReceivedMarker","timestamp","marker","UnreadBadge","drafty_image","drafty_form","drafty_attachment","Contact","handleContextClick","onSelected","index","showContextMenu","pageY","pageX","online","slice","icon_badges","isVerified","isStaff","isDangerous","acs","showMode","getMode","isMuted","isJoiner","subtitle","preview","Drafty","draftyFormatter","showCheckmark","selected","showOnline","isChannel","unread","values","el","attr","concat","mime","ContactAction","action","SUPPORTED_IMAGE_FORMATS","MIME_EXTENSIONS","makeImageUrl","startsWith","fitImageSize","width","height","maxWidth","maxHeight","forceSquare","scale","size","dstWidth","dstHeight","srcWidth","srcHeight","xoffset","yoffset","imageScaled","fileOrBlob","maxSize","onSuccess","img","Image","crossOrigin","onload","async","revokeObjectURL","dim","canvas","ctx","getContext","imageSmoothingEnabled","drawImage","includes","blob","Promise","resolve","toBlob","clearRect","fname","idx","ext","at","lastIndexOf","fileNameForMime","fileToBase64","file","reader","FileReader","split","readAsDataURL","blobToBase64","badge_you","badge_owner","ContactList","topicSelected","contactNodes","contactsCount","contacts","c","filterFunc","filter","filterOn","private","toLowerCase","public","myUserId","isOwner","deliveryStatus","latestMessage","_status","msgStatus","showUnread","connected","onTopicSelected","trusted","verified","staff","danger","noScroll","dangerouslySetInnerHTML","__html","emptyListMessage","MenuCancel","onCancel","ErrorPanel","level","onClearError","warn","text","whiteSpace","actionText","Chip","handleCancel","invalid","noAvatar","required","ChipInput","deriveStateFromProps","input","focused","handleTextInput","removeChipAt","handleChipCancel","handleFocusGained","handleFocusLost","handleKeyDown","placeholder","chips","prompt","sortedChips","sortChips","staticMembers","chipIndex","indexChips","prevState","keep","normal","removed","onChipRemoved","onFocusLost","onEnter","undefined","avatarDisabled","onFocus","onBlur","onKeyDown","autoFocus","no_contacts","contacts_not_found_short","GroupManager","members","indexMembers","keepInitialMembers","requiredMember","contactFilter","noContactsMessage","selectedContacts","handleContactSelected","handleMemberRemoved","handleContactFilter","handleSubmit","m","delta","present","keepInitial","stat","sel","userId","status","splice","val","query","instance","added","Object","keys","k","onSubmit","doContactFiltering","VisiblePassword","handleVisibility","handeTextChange","handleEditingFinished","onFinished","setTimeout","activeElement","tabIndex","autoComplete","InPlaceEdit","active","initialValue","handleStartEditing","handlePasswordFinished","newValue","focus","event","checkValidity","spanText","spanClass","element","multiline","rows","MoreButton","open","handleToggle","onToggle","joiner","writer","preser","approver","sharer","deleter","owner","PermissionsEditor","names","skip","compare","userTitle","userAvatar","modeTitle","compareTitle","TagManager","tags","tagInput","activated","handleTagInput","handleAddTag","handleRemoveTag","nextProps","last","tag","maxTagCount","getServerLimit","onTagsChanged","minTagLength","maxTagLength","add_tags_prompt","requested","granted","other_user","delete_messages","leave_chat","leave_chat_warning","block_contact","block_contact_warning","report_chat","report_chat_warning","InfoView","admin","muted","address","groupTopic","channel","fullName","selectedContact","access","modeGiven","modeWant","modeGiven2","modeWant2","auth","anon","contactList","showMemberPanel","showPermissionEditorFor","moreInfoExpanded","previousMetaDesc","previousSubsUpdated","previousTagsUpdated","resetSubs","resetDesc","onMetaDesc","onSubsUpdated","onTagsUpdated","handleFullNameUpdate","handlePrivateUpdate","handleImageChanged","handleMuted","handlePermissionsChanged","handleLaunchPermissionsEditor","handleHidePermissionsEditor","handleShowAddMembers","handleHideAddMembers","handleMemberUpdateRequest","handleDeleteMessages","handleLeave","handleBlock","handleReport","handleMemberSelected","handleMoreInfo","handleTagsUpdated","handleContextMenu","getType","newState","user2","subscriber","getGiven","getWant","subscribers","sub","defacs","getDefaultAccess","getAccessMode","entries","isAdmin","isSharer","isDeleter","isGroupType","isChannelType","getMeta","startMetaQuery","withTags","build","desc","subs","onTopicDescUpdate","ignored","onChangePermissions","perm","userPermissionsEdited","which","toEdit","toCompare","toSkip","titleEdit","titleCompare","userPermissionsTitle","userPermissionsAvatar","editedPermissions","immutablePermissions","editedPermissionsTitle","immutablePermissionsTitle","editedPermissionsSkipped","onInitFind","onMemberUpdateRequest","onDeleteMessages","onLeaveTopic","onBlockTopic","onReportTopic","onTopicTagsUpdate","menuItems","displayMobile","errorLevel","errorText","searchableContacts","onBasicNavigate","more","no_members","FileProgress","progress","Attachment","downloader","downloadFile","filename","mimetype","getLargeFileHelper","download","loaded","onCancelUpload","cancel","helperFunc","isUrlRelative","downloadUrl","downloadWidget","UploadingImage","ChatMessage","uploader","onProgress","handleProgress","handleImagePreview","handleFormButtonClick","handleCancelUpload","onImagePreview","resp","act","onFormResponse","MESSAGE_STATUS_FAILED","ratio","sideClass","deleted","sequence","response","bubbleClass","fullDisplay","userFrom","attachments","att","userName","notFound","viewportWidth","minWidth","minHeight","loading","inner","child","messaging_disabled","type_new_message","add_image_caption","file_attachment_too_large","cannot_initiate_upload","SendMessage","keypressTimestamp","getTime","handlePasteEvent","handleAttachImage","handleAttachFile","handleSend","handleKeyPress","handleMessageTyping","messageEditArea","disabled","onImageSuccess","onAttachmentSuccess","clipboardData","originalEvent","kind","getAsFile","error","imageFileScaledToBase64","imageFileToBase64","filePasted","bits","onAttachImage","onAttachFile","acceptBlank","noInput","onSendMessage","shiftKey","onKeyPress","messagePrompt","attachImage","click","attachFile","display","DocPreview","handleSendDoc","caption","onClose","mimeToIcon","default","video","iconFromMime","GroupSubs","usersOnline","totalCount","countToShow","some","overflow","ImagePreview","handleSendImage","assignWidth","node","getBoundingClientRect","maxlength","max","Invitation","handleButtonAction","evt","LogoView","version","serverVersion","serverAddress","HashNavigation","parts","path","forEach","part","decodeURIComponent","location","args","hasOwnProperty","parsed","parseUrlHash","composeUrlHash","sidepanel","online_now","last_seen","not_found","isUnconfirmed","ex","getExcessive","isPeerRestricted","ms","getMissing","MessagesView","getDerivedStateFromProps","leave","sendImageAttachment","sendFileAttachment","sendKeyPress","handleScrollReference","handleScrollEvent","handleDescChange","handleSubsUpdated","handleNewMessage","handleAllMessagesReceived","handleInfoReceipt","handleImagePostview","handleClosePreview","handleFormResponse","handleShowContextMenuMessage","handleNewChatAcceptance","handleEnablePeer","postReadNotification","clearNotificationQueue","readNotificationQueue","readNotificationTimer","messagesScroller","scrollTop","scrollHeight","scrollPosition","viewportHeight","onData","onAllMessagesReceived","onInfo","onPres","applicationVisible","isSubscribed","ready","newTopic","newTopicParams","_topicName","getQuery","withLaterDesc","withLaterSub","isReader","withLaterData","withLaterDel","fetchingMessages","setQuery","subscribe","code","onNewTopicCreated","queuedMessages","pub","_sending","publishMessage","setUrlTopic","blankState","nextState","docPreview","imagePreview","imagePostview","typingIndicator","msgs","assign","onlineSubs","peer","p2pPeerDesc","peerMessagingDisabled","isWriter","readingBlocked","unconformed","unconfirmed","oldTopicName","isTopicCached","oldTopic","finally","msgHasMoreMessages","getMessagesPage","setInterval","clearInterval","n","shift","sendAt","noteRead","setMilliseconds","getMilliseconds","isNewMessage","from","what","clearTimeout","keyPressTimer","forceUpdate","sendMessage","attachJSON","parse","searchParams","set","search","messageSpecificMenuItems","onNewChat","noteKeyPress","maxInbandAttachmentSize","uploadCompletionPromise","upload","urlPromise","maxExternAttachmentSize","limit","tinyMine","tinyBlob","blobMime","tinyBits64","insertImage","_tempPreview","appendLineBreak","append","init","bits64","found","find","_cancelled","component","hideSelf","component2","messageNodes","previousFrom","chatBoxClass","nextFrom","thisFrom","isReply","userDesc","hi","ts","_uploader","lastSeen","cont","getMeTopic","getContact","seen","when","onHideMessagesView","ButtonBack","onBack","MenuContacts","onNewTopic","onSettings","MenuStart","onSignUp","SideNavbar","AccountSettingsView","me","archived_contacts_title","ContactsView","handleAction","unreadThreads","archivedCount","chatList","blocked","arch","touched","action_ignored","onShowArchive","LocalStorageUtil","localStorage","setItem","JSON","stringify","getItem","oldVal","getObject","setObject","removeItem","CreateAccountView","login","password","email","imageDataUrl","errorCleared","saveToken","handleLoginChange","handlePasswordChange","handleEmailChange","handleFnChange","handleToggleSaveToken","onCreateAccount","submitClasses","login_prompt","password_prompt","onImageChanged","full_name_prompt","email_prompt","stay_logged_in","Cropper","panX","panY","originX","originY","zoom","minZoom","maxZoom","overlay","cutout","boundingBox","imageWidth","imageHeight","mouseX","mouseY","prevDistance","cutoutRect","bBoxRect","initScaling","onZoom","handleZoom","mouseDown","mouseUp","mouseMove","mouseTouch","positionAll","translate","passive","currPan","nextDiff","imgRect","imgLeft","imgRight","coLeft","coRight","imgTop","imgBottom","coTop","coBottom","touches","body","dX","dY","checkBound","touch0","touch1","distance","sqrt","t3d","orig","transform","transformOrigin","onLoad","step","AvatarCrop","objURL","imageCrop","TopicDescEdit","isMe","newAvatar","newAvatarMime","previousOnTags","tnNewTags","handleImageUpdated","handleAvatarCropped","uploadAvatar","handleAvatarCropCancel","onUpdateTopicDesc","readyToUpload","unused","base64bits","du","onUpdateTags","editable","full_name_placeholder","private_placeholder","description","handleDescriptionUpdate","title_tag_manager","TopicCommonView","credentials","getCredentials","addCredActive","addCredInvalid","tnCredsUpdated","handleCredChange","handleCredKeyDown","handleCredEntered","onCredsUpdated","creds","newCred","method","asPhone","asEmail","onCredAdd","cred","meth","done","onCredConfirm","onCredDelete","EditAccountView","handleCheckboxClick","onToggleMessageSounds","onTogglePushNotifications","onToggleIncognitoMode","messageSounds","desktopAlertsEnabled","desktopAlerts","incognitoMode","delete_account","delete_account_warning","AccSecurityView","blockedCount","handlePasswordUpdate","handleDeleteAccount","pwd","onUpdatePassword","onUpdateAccountDesc","onDeleteAccount","password_unchanged","onLogout","onShowBlocked","AccSupportView","LoginView","hostName","persist","onPersistenceChange","onLogin","autoCorrect","autoCapitalize","invalid_id","NewTopicById","groupId","prefix","NewTopicGroup","handlePrivateChange","handleTagsChanged","handleChannelToggle","SearchContacts","edited","handleSearchChange","handleSearch","handleClear","onSearchContacts","search_placeholder","search_for_contacts","search_no_results","NewTopicView","tabSelected","searchQuery","handleTabClick","handleSearchContacts","handleNewGroupSubmit","handleGroupByID","addUrlParam","removeUrlParam","onCreateTopic","dataUrl","priv","no_contacts_placeholder","searchResults","PasswordResetView","token","scheme","onReset","onRequest","reset","HostSelector","changed","handleHostNameChange","onServerAddressChange","hostOptions","list","SettingsView","transport","handleTransportSelected","handleServerAddressChange","onUpdate","def","ws","lp","transportOptions","phone","ValidationView","credCode","credMethod","numbers_only","register","settings","edit","general","security","crop","notif","support","newtpk","SidepanelView","handleNewTopic","view","errorAction","errorActionText","loadSpinnerVisible","loginDisabled","onLoginRequest","onGlobalSettings","onUpdateAccountTags","onValidateCredentials","onPasswordResetRequest","onResetPassword","detectServerAddress","host","protocol","hostname","port","isSecureConnection","POP_SOUND","Audio","reconnect_countdown","reconnect_now","push_init_failed","invalid_security_token","no_connection","code_doesnot_match","menu_item_info","TinodeWeb","getBlankState","handleResize","handleHashRoute","handleOnline","checkForAppUpdate","handleVisibilityEvent","handleError","handleLoginRequest","handlePersistenceChange","handleConnected","handleAutoreconnectIteration","doLogin","handleCredentialsRequest","handleLoginSuccessful","handleDisconnect","tnMeMetaDesc","tnMeContactUpdate","tnMeSubsUpdated","resetContactList","tnData","tnInitFind","tnFndSubsUpdated","handleTopicSelected","handleHideMessagesView","handleSendMessage","handleNewChatInvitation","handleNewAccount","handleNewAccountRequest","handleUpdatePasswordRequest","handleUpdateAccountTagsRequest","handleToggleIncognitoMode","handleSettings","handleGlobalSettings","handleShowArchive","handleShowBlocked","handleToggleMessageSounds","handleCredAdd","handleCredDelete","handleCredConfirm","initFCMessaging","togglePushToken","requestPushToken","handlePushMessage","handleSidepanelCancel","handleStartTopicRequest","handleNewTopicCreated","handleTopicUpdateRequest","handleChangePermissions","handleLogout","handleDeleteMessagesRequest","handleLeaveUnsubRequest","handleBlockTopicRequest","handleReportTopic","handleShowContextMenu","defaultTopicContextMenu","handleHideContextMenu","handleShowAlert","handleShowInfoView","handleHideInfoView","handleValidateCredentialsRequest","handlePasswordResetRequest","handleResetPassword","handleContextMenuAction","autoLogin","messageSoundsOff","FIREBASE_INIT","firebaseToken","hidden","sidePanelSelected","sidePanelTitle","sidePanelAvatar","myTrustedBadges","liveConnection","onLine","topicSelectedOnline","topicSelectedAcs","innerWidth","showInfoPanel","mobilePanel","contextMenuVisible","contextMenuBounds","contextMenuClickAt","contextMenuParams","contextMenuItems","alertVisible","alertParams","requestedTopic","BroadcastChannel","documentElement","clientWidth","clientHeight","tnSetup","onConnect","onDisconnect","onAutoreconnectIteration","setDeviceToken","parsedNav","expires","setAuthToken","connect","readTimer","readTimerCallback","persistentCache","onSetupCompleted","appName","apiKey","secure","setHumanLanguage","enableLogging","oobNotification","fbPush","usePublicVapidKey","messagingVapidKey","serviceWorker","reg","useServiceWorker","postMessage","onTokenRefresh","onMessage","payload","mobile","onupdatefound","installingWorker","installing","onstatechange","controller","getTopicAccessMode","newTopicTabSelected","tab","reconnectCountdown","reconnect","isConnected","initStorage","clearStorage","getServerInfo","ver","sec","prom","timeLeft","seconds","secondsToTime","isAuthenticated","promise","getAuthToken","loginBasic","loginToken","goToTopic","onContactUpdate","getCurrentUserID","withDesc","withCred","disconnect","urlHash","setUrlSidePanel","isPresencer","archived","isArchived","play","foundContacts","merged","updated","prepareSearchableContacts","receivedTimer","noteRecv","fnd","getFndTopic","withSub","s","setMeta","isTopicOnline","isP2PType","am","updateWant","login_","password_","public_","cred_","tags_","createAccountBasic","on","enabled","requestPermission","deleteToken","getToken","refreshedToken","delCredential","basicNavigator","newGroupTopicName","oldName","newName","updateAccountBasic","getCurrentLogin","updateGiven","delCurrentUser","publish","self_blocked","subscribed","confirmText","rejectText","invite","requestResetAuthSecret","newPassword","str","btoa","atob","base64ReEncode","onAddMember","handleManageGroupMembers","hl","languages","baseLanguage","allMessages","IntlProvider","textComponent","__webpack_require__","module","getter","__esModule","d","exports","definition","o","defineProperty","enumerable","get","obj","prop","prototype","call","__webpack_modules__"],"mappings":"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","file":"index.prod.js","sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = React;","const __WEBPACK_NAMESPACE_OBJECT__ = ReactDOM;","const __WEBPACK_NAMESPACE_OBJECT__ = ReactIntl;","const __WEBPACK_NAMESPACE_OBJECT__ = firebase;","const __WEBPACK_NAMESPACE_OBJECT__ = Tinode;","const __WEBPACK_NAMESPACE_OBJECT__ = firebase.messaging;","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Alert extends React.PureComponent {\n  render() {\n    return this.props.visible ?\n      <div className=\"alert-container\">\n        <div className=\"alert\">\n          <div className=\"title\">{this.props.title}</div>\n          <div className=\"content\">{this.props.content}</div>\n          <div className=\"dialog-buttons\">\n            {this.props.onReject ?\n              <button className=\"outline\" onClick={this.props.onReject}>\n                {this.props.reject || <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />}\n              </button>\n              :\n              null\n            }\n            <button className=\"primary\" onClick={this.props.onConfirm}>\n              {this.props.confirm || <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\"  />}\n            </button>\n          </div>\n        </div>\n      </div>\n    :\n    null;\n  }\n};\n","// This is a generated file. Don't edit.\n\nexport const PACKAGE_VERSION = \"0.18.0-alpha1\";\n","import { PACKAGE_VERSION } from './version.js';\n\n// Name of this application, used in the User-Agent.\nexport const APP_NAME = 'TinodeWeb/' + (PACKAGE_VERSION || '0.17');\n\n// API key. Use https://github.com/tinode/chat/tree/master/keygen to generate your own\nexport const API_KEY = 'AQEAAAABAAD_rAp4DJh05a1HAwFT3A6K';\n\n// The array of possible hosts to connect to.\nexport const KNOWN_HOSTS = {hosted: 'web.tinode.co', local: 'localhost:6060'};\n\n// Default host name and port to connect to.\nexport const DEFAULT_HOST = KNOWN_HOSTS.hosted;\n\n// Enable console logging.\nexport const LOGGING_ENABLED = true;\n\n// Minimum time between two keypress notifications, milliseconds.\nexport const KEYPRESS_DELAY = 3*1000;\n// Delay before sending a {note} for reciving a message, milliseconds.\nexport const RECEIVED_DELAY = 500;\n// Delay before sending a read notification, milliseconds.\nexport const READ_DELAY = 1000;\n\n// The default shortest allowed tag length. Matches the value on the server.\nexport const MIN_TAG_LENGTH = 2;\n// The default greatest allowed tag length. Matches the value on the server.\nexport const MAX_TAG_LENGTH = 96;\n// The default maximum number of tags allowed. Matches the value on the server.\nexport const MAX_TAG_COUNT = 16;\n\n// Access mode for P2P subscriptions initiated by the current user.\nexport const DEFAULT_P2P_ACCESS_MODE = 'JRWPS';\n// Access mode for new group topics created by the current user.\nexport const NEW_GRP_ACCESS_MODE = 'JRWPSAO';\n// Access mode for a channel.\nexport const CHANNEL_ACCESS_MODE = 'JR';\n\n// Access mode for no access.\nexport const NO_ACCESS_MODE = 'N';\n\n// Mediaquery breakpoint between desktop and mobile, in px. Should match the value\n// in @media (max-size: 640px) in base.css\nexport const MEDIA_BREAKPOINT = 640;\n// Size of css 'rem' unit in pixels. Default 1rem = 10pt = 13px.\nexport const REM_SIZE = 13;\n\n// Size of the avatar image: when image dimensions are greater or the image is not square, it's resized to\n// a square of this size or less.\nexport const AVATAR_SIZE = 384;\n\n// Maximum size of an avatar in bytes for sending in-band. Bigger avatars will be sent out of band (as uploads).\nexport const MAX_AVATAR_BYTES = 4096;\n\n// Size of the broken_image shown in MessagesView\nexport const BROKEN_IMAGE_SIZE = 32;\n\n// Number of chat messages to fetch in one call.\nexport const MESSAGES_PAGE = 24;\n\n// Default maximum in-band (included directly into the message) attachment size which fits into\n// a message of 256K in size. Used when the server-provided value is unavailable. The actual\n// binary size of the attachment should be smaller due to base64 encoding expansion and some overhead,\n// for instance 1024 bytes.\n// Increase this limit to a greater value in production, if desired. Also increase\n// max_message_size in the server config.\nexport const MAX_INBAND_ATTACHMENT_SIZE = 262144;\n\n// Default absolute maximum attachment size to be used with the server = 8MB.\n// Used when the server-provided value is unavailable. Increase to something like 100MB in production.\nexport const MAX_EXTERN_ATTACHMENT_SIZE = 1 << 23;\n\n// Maximum allowed linear dimension (pixels) of an image sent inline. Larger images will be shrunk\n// to make the larger dimension fit under this size. You may want to adjust it to 1600 or\n// 2400 for production.\nexport const MAX_IMAGE_DIM = 1024;\n\n// Linear dimensions of image preview: shrink image under this size for previews.\nexport const IMAGE_PREVIEW_DIM = 64;\n\n// Maximum number of online users to be shown in a topic title bar. Others will be\n// hidden under \"+X more\"\nexport const MAX_ONLINE_IN_TOPIC = 4;\n\n// Maximum length of user name, topic title, and private comment.\nexport const MAX_TITLE_LENGTH = 60;\n\n// Length of message previews in chat list, in characters.\nexport const MESSAGE_PREVIEW_LENGTH = 80;\n\n// Link for \"Contact Us\".\nexport const LINK_CONTACT_US = 'email:support@tinode.co';\n\n// Link to Privacy Policy.\nexport const LINK_PRIVACY_POLICY = 'https://tinode.co/privacy.html';\n\n// Link to Terms of Service.\nexport const LINK_TERMS_OF_SERVICE = 'https://tinode.co/terms.html';\n","// Context Menu: popup/dropdown menu.\nimport React from 'react';\nimport { injectIntl, defineMessages } from 'react-intl';\n\nimport { REM_SIZE } from '../config.js';\nimport HashNavigation from '../lib/navigation.js';\n\nconst messages = defineMessages({\n  info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  },\n  clear_messages: {\n    id: 'menu_item_clear_messages',\n    defaultMessage: 'Clear messages',\n    description: 'Delete all messages'\n  },\n  clear_for_all: {\n    id: 'menu_item_clear_messages_for_all',\n    defaultMessage: 'Clear for All',\n    description: 'Delete all message(s) for all members'\n  },\n  delete: {\n    id: 'menu_item_delete',\n    defaultMessage: 'Delete',\n    description: 'Delete selected messages'\n  },\n  delete_for_all: {\n    id: 'menu_item_delete_for_all',\n    defaultMessage: 'Delete for All',\n    description: 'Delete selected message(s) for all members'\n  },\n  send_retry: {\n    id: 'menu_item_send_retry',\n    defaultMessage: 'Retry',\n    description: 'Retry sending message'\n  },\n  mute: {\n    id: 'menu_item_mute',\n    defaultMessage: 'Mute',\n    description: 'Turn off notifications'\n  },\n  unmute: {\n    id: 'menu_item_unmute',\n    defaultMessage: 'Unmute',\n    description: 'Turn notifications on'\n  },\n  topic_delete: {\n    id: 'menu_item_delete_topic',\n    defaultMessage: 'Delete',\n    description: 'Delete entire topic'\n  },\n  topic_delete_warning: {\n    id: 'topic_delete_warning',\n    defaultMessage: 'Are you sure you want to delete this conversation?',\n    description: 'Alert warning when deleting entire topic'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  unblock: {\n    id: 'menu_item_unblock',\n    defaultMessage: 'Unblock',\n    description: 'Unblock topic or user'\n  },\n  // Generic string suitable for either topic or user.\n  block: {\n    id: 'menu_item_block',\n    defaultMessage: 'Block',\n    description: 'Block topic or user'\n  },\n  topic_block_warning: {\n    id: 'topic_block_warning',\n    defaultMessage: 'Are you sure you want to block this conversation?',\n    description: 'Alert warning when blocking a topic.'\n  },\n  member_delete: {\n    id: 'menu_item_member_delete',\n    defaultMessage: 'Remove',\n    description: 'Remove user from topic'\n  },\n  archive: {\n    id: 'menu_item_archive_topic',\n    defaultMessage: 'Archive',\n    description: 'Move topic from the list of active chats to archive'\n  },\n  unarchive: {\n    id: 'menu_item_restore_topic',\n    defaultMessage: 'Restore',\n    description: 'Restore topic from archive'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n});\n\nclass ContextMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selfRef = React.createRef();\n\n    const {formatMessage} = props.intl;\n\n    this.handlePageClick = this.handlePageClick.bind(this);\n    this.handleEscapeKey = this.handleEscapeKey.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n\n    // Preconfigured menu items.\n    this.MenuItems = {\n      'topic_info': {\n        id: 'topic_info',\n        title: formatMessage(messages.info),\n        handler: null\n      },\n      'messages_clear': {\n        id: 'messages_clear',\n        title: formatMessage(messages.clear_messages),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.clear_messages), // title\n            formatMessage(messages.clear_messages_warning), // content\n            (() => { this.deleteMessages(true, false, params, errorHandler); }), // onConfirm\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'messages_clear_hard': {\n        id: 'messages_clear_hard',\n        title: formatMessage(messages.clear_for_all),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.clear_for_all), // title\n            formatMessage(message.delete_messages_warning), // content\n            (() => { return this.deleteMessages(true, true, params, errorHandler); }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'message_delete': {\n        id: 'message_delete',\n        title: formatMessage(messages.delete),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, false, params, errorHandler);\n        }\n      },\n      'message_delete_hard': {\n        id: 'message_delete_hard',\n        title: formatMessage(messages.delete_for_all),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, true, params, errorHandler);\n        }\n      },\n      'menu_item_send_retry': {\n        id: 'menu_item_send_retry',\n        title: formatMessage(messages.send_retry),\n        handler: (params, errorHandler) => {\n          return this.retryMessage(params, errorHandler);\n        }\n      },\n      'topic_unmute': {\n        id: 'topic_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'topic_mute': {\n        id: 'topic_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'topic_unblock': {\n        id: 'topic_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n      'topic_block': {\n        id: 'topic_block',\n        title: formatMessage(messages.block),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.block), // title\n            formatMessage(messages.topic_block_warning), // content\n            (() => {\n              return this.topicPermissionSetter('-JP', params, errorHandler).then((ctrl) => {\n                this.props.onTopicRemoved(params.topicName);\n                return ctrl;\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_delete': {\n        id: 'topic_delete',\n        title: formatMessage(messages.topic_delete),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.topic_delete), // title\n            formatMessage(messages.topic_delete_warning), // content\n            (() => {\n              const topic = this.props.tinode.getTopic(params.topicName);\n              if (!topic) {\n                console.log(\"Topic not found: \", params.topicName);\n                return;\n              }\n              return topic.delTopic(true).catch((err) => {\n                if (errorHandler) {\n                  errorHandler(err.message, 'err');\n                }\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_archive': {\n        id: 'topic_archive',\n        title: formatMessage(messages.archive),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic) {\n            console.log(\"Topic not found: \", params.topicName);\n            return;\n          }\n          return topic.archive(true).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      'topic_restore': {\n        id: 'topic_restore',\n        title: formatMessage(messages.unarchive),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic) {\n            console.log(\"Topic not found: \", params.topicName);\n            return;\n          }\n          return topic.archive(false).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      // menu_item_edit_permissions is defined elsewhere.\n      'permissions': {\n        id: 'permissions',\n        title: formatMessage(messages.edit_permissions),\n        handler: null\n      },\n      'member_delete': {\n        id: 'member_delete',\n        title: formatMessage(messages.member_delete),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic || !params.user) {\n            console.log(\"Topic or user not found: '\" + params.topicName + \"', '\" + params.user + \"'\");\n            return;\n          }\n          return topic.delSubscription(params.user).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      'member_mute': {\n        id: 'member_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'member_unmute': {\n        id: 'member_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'member_block': {\n        id: 'member_block',\n        title: formatMessage(messages.block),\n        handler: this.topicPermissionSetter.bind(this, '-JP')\n      },\n      'member_unblock': {\n        id: 'member_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handlePageClick, false);\n    document.addEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handlePageClick, false);\n    document.removeEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  handlePageClick(e) {\n    if (this.selfRef.current.contains(e.target)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n  }\n\n  handleEscapeKey(e) {\n    if (e.keyCode === 27) {\n      this.props.hide();\n    }\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n    let item = this.props.items[e.currentTarget.dataset.id];\n    if (typeof item == 'string') {\n      item = this.MenuItems[item];\n    }\n\n    if (!item) {\n      console.log(\"Invalid menu item ID\", e.currentTarget.dataset.id);\n    } else {\n      this.props.onAction(\n        item.id,\n        item.handler(this.props.params, this.props.onError),\n        this.props.params);\n    }\n  }\n\n  // Menu Actions\n\n  deleteMessages(all, hard, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found: \", params.topicName);\n      return;\n    }\n\n    // We don't know if the message is still pending (e.g. attachment is being uploaded),\n    // so try cancelling first. No harm if we can't cancel.\n    // The message can be cancelled if transmission to the server has not\n    // started yet or if the message send has failed.\n    if (!all && topic.cancelSend(params.seq)) {\n      return;\n    }\n    // Can't cancel. Delete instead.\n    const promise = all ?\n      topic.delMessagesAll(hard) :\n      topic.delMessagesList([params.seq], hard);\n\n    return promise.catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Retries sending failed message.\n  retryMessage(params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    // Remove the existing message entry.\n    if (!topic || !topic.flushMessage(params.seq)) {\n      return;\n    }\n    const msg = topic.createMessage(params.content, false);\n    return topic.publishDraft(msg).catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Function is used by context menu to set permissions.\n  topicPermissionSetter(mode, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found\", params.topicName);\n      return;\n    }\n\n    let result = topic.updateMode(params.user, mode);\n    if (errorHandler) {\n      result = result.catch((err) => {\n        errorHandler(err.message, 'err');\n      });\n    }\n    return result;\n  }\n\n  render() {\n    let count = 0;\n    let menu = [];\n    this.props.items.map((item) => {\n      if (typeof item == 'string') {\n        item = this.MenuItems[item];\n      }\n      if (item && item.title) {\n        menu.push(\n          item.title == '-' ?\n            <li className=\"separator\" key={count} />\n            :\n            <li onClick={this.handleClick} data-id={count} key={count}>{item.title}</li>\n        );\n      }\n      count++;\n    });\n\n    // Ensure that menu is inside the app-container.\n    const hSize = 12 * REM_SIZE;\n    const vSize = REM_SIZE * (0.7 + menu.length * 2.5);\n    const left = (this.props.bounds.right - this.props.clickAt.x < hSize) ?\n        (this.props.clickAt.x - this.props.bounds.left - hSize) :\n        (this.props.clickAt.x - this.props.bounds.left);\n    const top = (this.props.bounds.bottom - this.props.clickAt.y < vSize) ?\n        (this.props.clickAt.y - this.props.bounds.top - vSize) :\n        (this.props.clickAt.y - this.props.bounds.top);\n\n    const position = {\n      left: left + 'px',\n      top: top + 'px'\n    };\n\n    return (\n      <ul className=\"menu\" style={position} ref={this.selfRef}>\n        {menu}\n      </ul>\n    );\n  }\n}\n\nexport default injectIntl(ContextMenu);\n","// Short representation of time in the past.\nexport function shortDateFormat(then, locale) {\n  locale = locale || window.navigator.userLanguage || window.navigator.language;\n  const now = new Date();\n  if (then.getFullYear() == now.getFullYear()) {\n    // Same year.\n    if (then.getMonth() == now.getMonth() && then.getDate() == now.getDate()) {\n      // Same month and day, show time only.\n      return then.toLocaleTimeString(locale, {hour12: false, hour: '2-digit', minute: '2-digit'});\n    }\n    // Different month and/or day, show month day, time.\n    return then.toLocaleDateString(locale,\n      {hour12: false, month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit'});\n  }\n  // Different year: just show the date.\n  return then.toLocaleDateString(locale, {year: 'numeric', month: 'short', day: 'numeric'});\n}\n\n// Convert seconds to minutes:seconds, i.e. 156 sec -> 2:36.\nexport function secondsToTime(seconds) {\n  const min = Math.floor(seconds / 60);\n  let sec = seconds % 60;\n  sec = sec < 10 ? `0${sec}` : sec;\n  return `${min}:${sec}`;\n}\n\n// Convert a number of bytes to human-readable format.\nexport function bytesToHumanSize(bytes) {\n  if (!bytes || bytes == 0) {\n    return '0 Bytes';\n  }\n\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n  const bucket = Math.min(Math.floor(Math.log2(bytes) / 10) | 0, sizes.length-1);\n  const count = bytes / Math.pow(1024, bucket);\n  const round = bucket > 0 ? (count < 3 ? 2 : (count < 30 ? 1 : 0)) : 0;\n  return count.toFixed(round) + ' ' + sizes[bucket];\n}\n\n// Get 32 bit integer hash value for a string. Ideally it should produce the same value\n// as Java's String#hash().\nexport function stringHash(value) {\n  let hash = 0;\n  value = '' + value;\n  for (let i = 0; i < value.length; i++) {\n    hash = ((hash << 5) - hash) + value.charCodeAt(i);\n    hash = hash & hash; // Convert to 32bit integer\n  }\n  return hash;\n}\n","import React from 'react';\n\nimport Tinode from 'tinode-sdk';\n\nimport { stringHash } from '../lib/strformat.js';\n\nexport default class LetterTile extends React.PureComponent {\n  render() {\n    let avatar;\n    if (this.props.avatar === true) {\n      const isGroup = (Tinode.topicType(this.props.topic) == 'grp');\n      const iconColor = (isGroup ? 'light-color' : 'dark-color')\n        + (Math.abs(stringHash(this.props.topic)) % 16);\n      if (this.props.topic && this.props.title && this.props.title.trim()) {\n        const letter = this.props.title.trim().charAt(0);\n        const className = 'lettertile ' + iconColor;\n        avatar = (<div className={className}><div>{letter}</div></div>)\n      } else {\n        const className = 'material-icons ' + iconColor;\n        avatar = isGroup ?\n          <i className={className}>group</i> : <i className={className}>person</i>;\n      }\n    } else if (this.props.avatar) {\n      // If avatar image is invalid, show a placeholder.\n      avatar = <img className=\"avatar\" alt=\"avatar\" src={this.props.avatar}\n        onError={(e)=>{e.target.onerror = null; e.target.src=\"../img/broken_image.png\"}} />;\n    } else {\n      avatar = null;\n    }\n    return avatar;\n  }\n}\n","import React from 'react';\n\nexport default class LoadSpinner extends React.PureComponent {\n  render() {\n    const className = 'load-spinner-box' + (this.props.large ? ' large' : '')\n      + (this.props.clear ? ' clear' : '') + (this.props.centered ? ' centered' : '');\n    return (this.props.show ?\n      <div className={className}><div className=\"loader-spinner\"></div></div> : null);\n  }\n}\n","// Odds and ends\n\nimport Tinode from 'tinode-sdk';\n\n// Make shortcut icon appear with a green dot + show unread count in title.\nexport function updateFavicon(count) {\n  const oldIcon = document.getElementById('shortcut-icon');\n  const head = document.head || document.getElementsByTagName('head')[0];\n  const newIcon = document.createElement('link');\n  newIcon.type = 'image/png';\n  newIcon.id = 'shortcut-icon';\n  newIcon.rel = 'shortcut icon';\n  newIcon.href = 'img/logo32x32' + (count > 0 ? 'a' : '') + '.png';\n  if (oldIcon) {\n    head.removeChild(oldIcon);\n  }\n  head.appendChild(newIcon);\n\n  document.title = (count > 0 ? '('+count+') ' : '') + 'Tinode';\n}\n\n// Create theCard which represents user's or topic's \"public\" info.\nexport function theCard(fn, imageUrl, imageMimeType) {\n  let card = null;\n  fn = fn && fn.trim();\n\n  if (fn) {\n    card = {\n      fn: fn\n    };\n  }\n\n  if (imageUrl) {\n    card = card || {};\n    let mimeType = imageMimeType;\n    // Is this a data URL \"data:[<mediatype>][;base64],<data>\"?\n    const matches = /^data:(image\\/[-a-z0-9+.]+)?(;base64)?,/i.exec(imageUrl);\n    if (matches) {\n      mimeType = matches[1];\n      card.photo = {\n        data: imageUrl.substring(imageUrl.indexOf(',') + 1),\n        ref: Tinode.DEL_CHAR\n      };\n    } else {\n      card.photo = {\n        data: Tinode.DEL_CHAR,\n        ref: imageUrl\n      };\n    }\n    card.photo.type = (mimeType || 'image/jpeg').substring('image/'.length);\n  }\n\n  return card;\n}\n\n// Deep-shallow compare two arrays: shallow compare each element.\nexport function arrayEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (!Array.isArray(a) || !Array.isArray(b)) {\n    return false;\n  }\n\n  // Compare lengths first.\n  if (a.length != b.length) {\n    return false;\n  }\n  // Order of elements is ignored.\n  a.sort();\n  b.sort();\n  for (let i = 0, l = a.length; i < l; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Checks (loosely) if the given string is a phone. If so, returns the phone number in a format\n// as close to E.164 as possible.\nexport function asPhone(val) {\n  val = val.trim();\n  if (/^(?:\\+?(\\d{1,3}))?[- (.]*(\\d{3})[- ).]*(\\d{3})[- .]*(\\d{2})[- .]*(\\d{2})?$/.test(val)) {\n    return val.replace(/[- ().]*/, '');\n  }\n  return null;\n}\n\n// Checks (loosely) if the given string is an email. If so returns the email.\nexport function asEmail(val) {\n  val = val.trim();\n  if (/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(val)) {\n    return val;\n  }\n  return null;\n}\n\n// Checks if URL is a relative url, i.e. has no 'scheme://', including the case of missing scheme '//'.\n// The scheme is expected to be RFC-compliant, e.g. [a-z][a-z0-9+.-]*\n// example.html - ok\n// https:example.com - not ok.\n// http:/example.com - not ok.\n// ' ↲ https://example.com' - not ok. (↲ means carriage return)\nexport function isUrlRelative(url) {\n  return url && !/^\\s*([a-z][a-z0-9+.-]*:|\\/\\/)/im.test(url);\n}\n\n// Ensure URL does not present an XSS risk. Optional allowedSchemes may contain an array of\n// strings with permitted URL schemes, such as ['ftp', 'ftps']; otherwise accept http and https only.\nexport function sanitizeUrl(url, allowedSchemes) {\n  if (typeof url != 'string') {\n    return url;\n  }\n\n  // Strip control characters and whitespace. They are not valid URL characters anyway.\n  url = url.replace(/[^\\x20-\\x7E]/gmi, '').trim();\n\n  // Relative URLs are safe.\n  // Relative URL does not start with ':', abcd123: or '//'.\n  if (!/^([a-z][a-z0-9+.-]*:|\\/\\/)/i.test(url)) {\n    return url;\n  }\n\n  // Blob URLs are safe.\n  if (/^blob:http/.test(url)) {\n    return url;\n  }\n\n  // Absolute URL. Accept only safe schemes, or no scheme.\n  const schemes = Array.isArray(allowedSchemes) ? allowedSchemes.join('|') : 'http|https';\n  const re = new RegExp('^((' + schemes + '):|//)', 'i');\n  if (!re.test(url)) {\n    return null;\n  }\n\n  return url;\n}\n\n// Ensure URL is suitable for <img src=\"url\"> field: the URL must be a relative URL or\n// have http:, https:, blob: or data: scheme.\n// In case of data: scheme, the URL must start with a 'data:image/XXXX;base64,'.\nexport function sanitizeImageUrl(url) {\n  if (!url) {\n    return null;\n  }\n\n  const sanitizedUrl = sanitizeUrl(url);\n  if (sanitizedUrl) {\n    return sanitizedUrl;\n  }\n\n  // Is this a data: URL of an image?\n  if (/data:image\\/[a-z0-9.-]+;base64,/i.test(url.trim())) {\n    return url;\n  }\n\n  return null;\n}\n\n// Given message's received status, return name and color of a delivery indicator icon.\nexport function deliveryMarker(received) {\n  switch (received) {\n    case Tinode.MESSAGE_STATUS_SENDING:\n      return { name: 'access_time' }; // watch face\n    case Tinode.MESSAGE_STATUS_FAILED:\n      return { name: 'warning', color: 'danger-color' }; // yellow icon /!\\\n    case Tinode.MESSAGE_STATUS_SENT:\n      return { name: 'done' }; // checkmark\n    case Tinode.MESSAGE_STATUS_RECEIVED:\n      return { name: 'done_all' }; // double checkmark\n    case Tinode.MESSAGE_STATUS_READ:\n      return { name: 'done_all', color: 'blue' }; // blue double checkmark\n  }\n  return null;\n}\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\nimport LoadSpinner from './load-spinner.jsx';\n\nimport { sanitizeImageUrl } from '../lib/utils.js';\n\nimport { AVATAR_SIZE } from '../config.js';\n\nexport default class AvatarUpload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      source: props.avatar\n    };\n\n    this.handleFileReceived = this.handleFileReceived.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.avatar != prevProps.avatar) {\n      this.setState({source: this.props.avatar});\n    }\n  }\n\n  handleFileReceived(e) {\n    const image = e.target.files[0];\n    this.props.onImageUpdated(image.type, URL.createObjectURL(image), image.name);\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  render() {\n    // Randomize id value in case more than one AvatarUpload is shown\n    // at the same time.\n    const randId = 'file-input-avatar-' + (Math.random() + '').substr(2);\n    const className = 'avatar-upload' + (this.props.readOnly ? ' read-only' : '');\n    return (\n      <div className={className}>\n        {this.props.readOnly || !this.state.source ?\n          null :\n          <a href=\"#\" className=\"clear-avatar\" onClick={(e) => {e.preventDefault(); this.props.onImageUpdated();}}>\n            <i className=\"material-icons\">clear</i>\n          </a>}\n        {this.state.source ?\n          <img src={this.props.tinode.authorizeURL(sanitizeImageUrl(this.state.source))} className=\"preview\" /> :\n          this.props.readOnly && this.props.uid ?\n            <div className=\"avatar-box\">\n              <LetterTile\n                avatar={true}\n                topic={this.props.uid}\n                title={this.props.title} />\n            </div>\n            :\n            <div className=\"blank\">{AVATAR_SIZE}&times;{AVATAR_SIZE}</div>}\n        {this.props.readOnly ? null :\n          <input type=\"file\" id={randId} className=\"inputfile hidden\"\n            accept=\"image/*\" onChange={this.handleFileReceived} />}\n        {this.props.readOnly ? null :\n        <label htmlFor={randId} className=\"round\">\n          <i className=\"material-icons\">file_upload</i>\n        </label>}\n        <LoadSpinner show={this.props.uploading} large={true} clear={true} centered={true} />\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nconst icon_mapping = {'staff': 'verified_user'};\n\nconst messages = defineMessages({\n  badge_verified: {\n    id: 'badge_verified',\n    defaultMessage: 'Verified/official',\n    description: 'Explanation of a verified account or topic badge'\n  },\n  badge_staff: {\n    id: 'badge_staff',\n    defaultMessage: 'Staff-managed',\n    description: 'Explanation of a staff-managed account or topic badge'\n  },\n  badge_danger: {\n    id: 'badge_danger',\n    defaultMessage: 'Untrustworthy',\n    description: 'Suspicious or untrustworthy account or topic badge'\n  },\n});\n\n\n/* Trusted badges with labels: verified, staff, danger */\nclass BadgeList extends React.PureComponent {\n  render() {\n    const {formatMessage} = this.props.intl;\n    let badges = null;\n    if (this.props.trustedBadges && this.props.trustedBadges.length > 0) {\n      badges = [];\n      this.props.trustedBadges.map((b) => {\n        const comment = formatMessage(messages['badge_' + b]);\n        const style = 'material-icons ' + b + '-color';\n        badges.push(<div className=\"trusted-badge\" key={b}><i className={style}>{icon_mapping[b] || b}</i> {comment}</div>);\n      });\n      return <>{badges}</>;\n    }\n    return null;\n  }\n};\n\nexport default injectIntl(BadgeList);\n","import React from 'react';\n\n/* BEGIN CheckBox: styled checkbox */\nexport default class CheckBox extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange() {\n    this.props.onChange(this.props.name, !this.props.checked);\n  }\n\n  render() {\n    return (\n      this.props.onChange ? (\n        this.props.checked ?\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box</i> :\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box_outline_blank</i>\n        ) : (\n          this.props.checked ?\n            <i className=\"material-icons\">check_box</i> :\n            <i className=\"material-icons\">check_box_outline_blank</i>\n        )\n    );\n  }\n}\n/* END CheckBox */\n","import React from 'react';\n\nconst icon_mapping = {'muted': 'notifications_off', 'banned': 'block', 'staff': 'verified_user'};\n\n/* Contact's labels: [you], or icons [muted], [blocked] */\nexport default class ContactBadges extends React.PureComponent {\n  render() {\n    let badges = null;\n    if (this.props.badges && this.props.badges.length > 0) {\n      badges = [];\n      this.props.badges.map((b) => {\n        const color = (b.color ? ' ' + b.color : '');\n        if (b.icon) {\n          badges.push(<i className={'material-icons as-badge' + color} key={b.key || b.icon}>{icon_mapping[b.icon] || b.icon}</i>);\n        } else {\n          badges.push(<span className={'badge' + color} key={b.key || b.name}>{b.name}</span>);\n        }\n      });\n      return <>{badges}</>;\n    }\n    return null;\n  }\n};\n","// Received/read indicator.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { shortDateFormat } from '../lib/strformat.js';\nimport { deliveryMarker } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  message_sending: {\n    id: 'message_sending',\n    defaultMessage: 'sending...',\n    description: 'Message being sent, in place of time stamp'\n  },\n  message_sending_failed: {\n    id: 'message_sending_failed',\n    defaultMessage: 'failed',\n    description: 'Failed to send message, in place of time stamp'\n  }\n});\n\nclass ReceivedMarker extends React.PureComponent {\n  render() {\n    const {formatMessage} = this.props.intl;\n    let timestamp;\n    if (this.props.received <= Tinode.MESSAGE_STATUS_SENDING) {\n      timestamp = formatMessage(messages.message_sending);\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_FAILED) {\n      timestamp = formatMessage(messages.message_sending_failed);\n    } else {\n      timestamp = shortDateFormat(this.props.timestamp, this.props.intl.locale);\n    }\n\n    const icon = deliveryMarker(this.props.received);\n    const marker = icon ? <i className={'material-icons small ' + icon.color}>{icon.name}</i> : null;\n\n    return (\n      <span className=\"timestamp\">\n        {timestamp}{'\\u00a0'}{marker}\n      </span>\n    );\n  }\n};\n\nexport default injectIntl(ReceivedMarker);\n","// The counter of unread messages in the topic.\nimport React from 'react';\n\nexport default class UnreadBadge extends React.PureComponent {\n  render() {\n    return (this.props.count > 0 ?\n      <span className=\"unread\">{this.props.count > 9 ? \"9+\" : this.props.count}</span>\n      : null);\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\n\nimport ContactBadges from './contact-badges.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\nimport UnreadBadge from './unread-badge.jsx';\n\nimport { Drafty } from 'tinode-sdk';\n\nimport { deliveryMarker } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  drafty_image: {\n    id: 'drafty_image',\n    defaultMessage: 'Picture',\n    description: 'Comment for embedded images in drafty preview'\n  },\n  drafty_form: {\n    id: 'drafty_form',\n    defaultMessage: 'Form: ',\n    description: 'Comment for form in drafty preview'\n  },\n  drafty_attachment: {\n    id: 'drafty_attachment',\n    defaultMessage: 'Attachment',\n    description: 'Comment for attachment in drafty preview'\n  },\n});\n\nclass Contact extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.props.onSelected) {\n      // Index this.props.index is used by GroupManager.\n      this.props.onSelected(this.props.item, this.props.index);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.props.item, y: e.pageY, x: e.pageX });\n  }\n\n  render() {\n    let title = this.props.title;\n    if (!title) {\n      title = <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n        description=\"Title shown when the topic has no name\" /></i>;\n    } else if (title.length > 30) {\n      // FIXME: this is probably wrong for RTL languages.\n      title = title.substring(0, 28) + '…';\n    }\n    const online = this.props.now ? 'online' : 'offline';\n    const avatar = this.props.avatar ? this.props.avatar : true;\n    const badges = this.props.badges ? this.props.badges.slice() : [];\n    const icon_badges = [];\n    if (this.props.isVerified) {\n      icon_badges.push({icon: 'verified', color: 'verified-color'});\n    }\n    if (this.props.isStaff) {\n      icon_badges.push({icon: 'staff', color: 'staff-color'});\n    }\n    if (this.props.isDangerous) {\n      icon_badges.push({icon: 'dangerous', color: 'danger-color'});\n    }\n    if (this.props.acs) {\n      if (this.props.showMode) {\n        badges.push({name: this.props.acs.getMode(), key: 'mode'});\n      }\n      if (this.props.acs.isMuted()) {\n        icon_badges.push({icon: 'muted'});\n      }\n      if (!this.props.acs.isJoiner()) {\n        icon_badges.push({icon: 'banned'});\n      }\n    }\n\n    const subtitle = this.props.preview ?\n      (typeof this.props.preview == 'string' ? this.props.preview :\n        React.createElement(React.Fragment, null, Drafty.format(this.props.preview, draftyFormatter, this))) :\n      this.props.comment;\n\n    const icon = deliveryMarker(this.props.received);\n    const marker = icon ? <i className={'material-icons small space-right' +\n      (icon.color ? ' ' + icon.color : '')}>{icon.name}</i> : null;\n\n    return (\n      <li className={!this.props.showCheckmark && this.props.selected ? 'selected' : null} onClick={this.handleClick}>\n        <div className=\"avatar-box\">\n          <LetterTile\n            avatar={avatar}\n            title={this.props.title}\n            topic={this.props.item} />\n          {this.props.showOnline ? <span className={online} /> :\n            (this.props.showCheckmark && this.props.selected ?\n            <i className=\"checkmark material-icons\">check_circle</i>\n            : null)}\n        </div>\n        <div className=\"text-box\">\n          <div><span className=\"contact-title\">{title}</span>\n            {this.props.isChannel ? <img src=\"/img/channel.png\" className=\"channel\" alt=\"channel\" /> : null}\n            <ContactBadges badges={icon_badges} /><UnreadBadge count={this.props.unread} />\n          </div>\n          {this.props.showMode ?\n            <span><ContactBadges badges={badges} /></span> :\n            <div className=\"contact-comment\">{marker}{subtitle || '\\u00A0'}</div>}\n        </div>\n        {this.props.showContextMenu ?\n          <span className=\"menuTrigger\">\n            <a href=\"#\" onClick={this.handleContextClick}>\n              <i className=\"material-icons\">expand_more</i>\n            </a>\n          </span> : null}\n      </li>\n    );\n  }\n};\n\n\n// Converts Drafty object into a one-line preview.\nfunction draftyFormatter(style, data, values, key) {\n  let el = Drafty.tagName(style);\n  const attr = { key: key };\n  if (el) {\n    const { formatMessage } = this.props.intl;\n    switch (style) {\n      case 'BR':\n        // Replace new line with a space.\n        el = React.Fragment;\n        values = [' '];\n        break;\n      case 'HL':\n        // Make highlight less prominent in preview.\n        attr.className = 'highlight preview';\n        break;\n      case 'LN':\n        // Disable links in previews.\n        el = 'span';\n        break;\n      case 'IM':\n        // Replace image with '[icon] Image'.\n        el = React.Fragment;\n        values = [<i key=\"im\" className=\"material-icons\">photo</i>, formatMessage(messages.drafty_image)];\n        break;\n      case 'BN':\n        el = 'span';\n        attr.className = 'flat-button faux';\n        break;\n      case 'FM':\n        el = React.Fragment;\n        values = [<i key=\"fm\" className=\"material-icons\">dashboard</i>,\n          formatMessage(messages.drafty_form)].concat(values || []);\n        break;\n      case 'RW':\n        el = React.Fragment;\n        break;\n      case 'EX':\n        if (data && data.mime == 'application/json') {\n          // Ignore JSON attachments: they are form response payloads.\n          return null;\n        }\n        el = React.Fragment;\n        values = [<i key=\"ex\" className=\"material-icons\">attachment</i>, formatMessage(messages.drafty_attachment)];\n        break;\n      default:\n        if (el == '_UNKN') {\n          el = React.Fragment;\n          values = [<i key=\"unkn\" className=\"material-icons\">extension</i>];\n        }\n        break;\n    }\n    return React.createElement(el, attr, values);\n  } else {\n    return values;\n  }\n};\n\nexport default injectIntl(Contact);\n","// A panel included into a list of contacts with an action text.\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\n\nclass ContactAction extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.onAction(this.props.action);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <li onClick={this.handleClick} className=\"action\">\n        <div className=\"action-text\">{formatMessage(this.props.title, this.props.values)}</div>\n      </li>\n    );\n  }\n};\n\nexport default injectIntl(ContactAction);\n","// File and image helper functions.\nimport { MAX_INBAND_ATTACHMENT_SIZE, MAX_IMAGE_DIM } from '../config.js';\nimport { bytesToHumanSize } from './strformat.js'\n\n// Supported image MIME types and corresponding file extensions.\nexport const SUPPORTED_IMAGE_FORMATS = ['image/jpeg', 'image/gif', 'image/png', 'image/svg', 'image/svg+xml'];\nexport const MIME_EXTENSIONS         = ['jpg',        'gif',       'png',       'svg',       'svg'];\n\n// Get an URL from a theCard photo: either create a data: URL or return reference URL.\nexport function makeImageUrl(photo) {\n  if (photo) {\n    if (photo.data && photo.type) {\n      const mime = photo.type.startsWith('image/') ? photo.type : ('image/' + photo.type);\n      return 'data:' + mime + ';base64,' + photo.data;\n    }\n    return photo.ref;\n  }\n  return null;\n}\n\n// Calculate linear dimensions for scaling image down to fit under a certain size.\n// Returns an object which contains destination sizes, source sizes, and offsets\n// into source (when making square images).\nexport function fitImageSize(width, height, maxWidth, maxHeight, forceSquare) {\n  // Sanitize input\n  width = width | 0;\n  height = height | 0;\n  maxWidth = maxWidth | 0;\n  maxHeight = maxHeight | 0;\n\n  if (width <= 0 || height <= 0 || maxWidth <= 0 || maxHeight <= 0) {\n    return null;\n  }\n\n  if (forceSquare) {\n    maxWidth = maxHeight = Math.min(maxWidth, maxHeight);\n  }\n\n  const scale = Math.min(\n    Math.min(width, maxWidth) / width,\n    Math.min(height, maxHeight) / height\n  );\n\n  const size = {\n    dstWidth: (width * scale) | 0,\n    dstHeight: (height * scale) | 0,\n  };\n\n  if (forceSquare) {\n    // Also calculate parameters for making the image square.\n    size.dstWidth = size.dstHeight = Math.min(size.dstWidth, size.dstHeight);\n    size.srcWidth = size.srcHeight = Math.min(width, height);\n    size.xoffset = ((width - size.srcWidth) / 2) | 0;\n    size.yoffset = ((height - size.srcWidth) / 2) | 0;\n  } else {\n    size.xoffset = size.yoffset = 0;\n    size.srcWidth = width;\n    size.srcHeight = height;\n  }\n  return size;\n}\n\n// Ensure file's extension matches mime content type\nexport function fileNameForMime(fname, mime) {\n  const idx = SUPPORTED_IMAGE_FORMATS.indexOf(mime);\n  if (idx < 0 || !fname) {\n    // Unknown mime or empty name.\n    return fname;\n  }\n  const ext = MIME_EXTENSIONS[idx];\n\n  const at = fname.lastIndexOf('.');\n  if (at >= 0) {\n    fname = fname.substring(0, at);\n  }\n  return fname + '.' + ext;\n}\n\n// Scale uploaded image to fit under certain dimensions and byte size, optionally constraining to a square.\n// On success calls onSuccess callback with the scaled image as Blob.\nexport function imageScaled(fileOrBlob, maxWidth, maxHeight, maxSize, forceSquare, onSuccess, onError) {\n  const img = new Image();\n  img.crossOrigin = 'Anonymous';\n  img.onerror = function(err) {\n    onError(\"Image format unrecognized\");\n  }\n  img.onload = async function() {\n    // Once the image is loaded, the URL is no longer needed.\n    URL.revokeObjectURL(img.src);\n\n    // Calculate the desired image dimensions.\n    const dim = fitImageSize(this.width, this.height, maxWidth, maxHeight, forceSquare);\n    if (!dim) {\n      onError(\"Invalid image\");\n      return;\n    }\n    let canvas = document.createElement('canvas');\n    canvas.width = dim.dstWidth;\n    canvas.height = dim.dstHeight;\n    let ctx = canvas.getContext('2d');\n    ctx.imageSmoothingEnabled = true;\n    ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n      0, 0, dim.dstWidth, dim.dstHeight);\n\n    const mime = SUPPORTED_IMAGE_FORMATS.includes(fileOrBlob.type) ? fileOrBlob.type : 'image/jpeg';\n    // Generate blob to check size of the image.\n    let blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    if (!blob) {\n      onError(\"Unsupported image format\");\n      return;\n    }\n\n    // Ensure the image is not too large. Shrink the image keeping the aspect ratio.\n    // Do nothing if maxsize is <= 0.\n    while (maxSize > 0 && blob.length > maxSize) {\n      dim.dstWidth = (dim.dstWidth * 0.70710678118) | 0;\n      dim.dstHeight = (dim.dstHeight * 0.70710678118) | 0;\n      canvas.width = dim.dstWidth;\n      canvas.height = dim.dstHeight;\n      ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n        0, 0, dim.dstWidth, dim.dstHeight);\n      blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    }\n\n    canvas = null;\n    onSuccess(mime, blob, dim.dstWidth, dim.dstHeight, fileNameForMime(fileOrBlob.name, mime));\n  };\n  img.src = URL.createObjectURL(fileOrBlob);\n}\n\n// Scale and crop image according to specified dimensions.\n// The coordinates are in unscaled image pixels, i.e. cut the rectangle first then scale it.\nexport function imageCrop(mime, objURL, left, top, width, height, scale, onSuccess, onError) {\n  const img = new Image();\n  img.crossOrigin = 'Anonymous';\n  img.onerror = function(err) {\n    onError(\"Image format unrecognized\");\n  }\n  img.onload = async function() {\n    // Once the image is loaded, the URL is no longer needed.\n    URL.revokeObjectURL(img.src);\n\n    let canvas = document.createElement('canvas');\n    canvas.width = width * scale;\n    canvas.height = height * scale;\n    let ctx = canvas.getContext('2d');\n    ctx.imageSmoothingEnabled = true;\n    ctx.drawImage(this, left, top, width, height, 0, 0, canvas.width, canvas.height);\n\n    mime = SUPPORTED_IMAGE_FORMATS.includes(mime) ? mime : 'image/jpeg';\n    // Generate blob to check size of the image.\n    let blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    if (!blob) {\n      onError(\"Unsupported image format\");\n      return;\n    }\n    // Allow GC.\n    canvas = null;\n    onSuccess(mime, blob, width, height);\n  };\n  img.src = objURL;\n}\n\n// Convert File to base64 string.\nexport function fileToBase64(file, onSuccess) {\n  const reader = new FileReader();\n  reader.addEventListener('load', function() {\n    onSuccess(file.type, reader.result.split(',')[1], file.name);\n  });\n  reader.readAsDataURL(file);\n}\n\n// Convert Blob to base64 string.\nexport function blobToBase64(blob, onSuccess) {\n  const reader = new FileReader();\n  reader.addEventListener('load', function() {\n    onSuccess(blob.type, reader.result.split(',')[1]);\n  });\n  reader.readAsDataURL(blob);\n}\n\n// File pasted from the clipboard. It's either an inline image or a file attachment.\n// FIXME: handle large files out of band.\nexport function filePasted(event, onImageSuccess, onAttachmentSuccess, onError) {\n  var items = (event.clipboardData || event.originalEvent.clipboardData || {}).items;\n  for (var i in items) {\n    var item = items[i];\n    if (item.kind === 'file') {\n      var file = item.getAsFile();\n      if (!file) {\n        console.error(\"Failed to get file object from pasted file item\", item.kind, item.type);\n        continue;\n      }\n      if (file.type && file.type.split('/')[0] == 'image') {\n        // Handle inline image\n        if (file.size > MAX_INBAND_ATTACHMENT_SIZE || SUPPORTED_IMAGE_FORMATS.indexOf(file.type) < 0) {\n          imageFileScaledToBase64(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, false, onImageSuccess, onError);\n        } else {\n          imageFileToBase64(file, onImageSuccess, onError);\n        }\n      } else {\n        // Handle file attachment\n        fileToBase64(file, onAttachmentSuccess, onError)\n      }\n      // Indicate that the pasted data contains a file.\n      return true;\n    }\n  }\n  // No file found.\n  return false;\n}\n\n// Get mime type from data URL header.\nexport function getMimeType(header) {\n  var mime = /^data:(image\\/[-+a-z0-9.]+);base64/.exec(header);\n  return (mime && mime.length > 1) ? mime[1] : null;\n}\n\n// Given length of a binary object in bytes, calculate the length after\n// base64 encoding.\nexport function base64EncodedLen(n) {\n  return Math.floor((n + 2) / 3) * 4;\n}\n\n// Given length of a base64-encoded object, calculate decoded size of the\n// pbject in bytes.\nexport function base64DecodedLen(n) {\n  return Math.floor(n / 4) * 3;\n}\n\n// Re-encode string to standard base64 encoding with padding.\n// The string may be base64-URL encoded without the padding.\nexport function base64ReEncode(str) {\n  if (str) {\n    str = str.replace(/-/g, '+').replace(/_/g, '/');\n    try {\n      str = btoa(atob(str));\n    } catch(err) {\n      console.error(\"Failed to base64 re-encode string.\", err);\n      str = null;\n    }\n  }\n  return str;\n}\n","// ContactList: component for showing a list of contacts,\n// such as a list of group members in a group chat.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { Drafty } from 'tinode-sdk';\nimport Tinode from 'tinode-sdk';\n\nimport Contact from './contact.jsx';\nimport ContactAction from './contact-action.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nimport { MESSAGE_PREVIEW_LENGTH } from '../config.js';\n\nconst messages = defineMessages({\n  badge_you: {\n    id: 'badge_you',\n    defaultMessage: 'you',\n    description: 'Badge for indicating the current user'\n  },\n  badge_owner: {\n    id: 'badge_owner',\n    defaultMessage: 'owner',\n    description: 'Badge for indicating the owner'\n  }\n});\n\nclass ContactList extends React.Component {\n  render() {\n    const { formatMessage } = this.props.intl;\n    const showCheckmark = Array.isArray(this.props.topicSelected);\n    const contactNodes = [];\n    let contactsCount = 0;\n    if (this.props.contacts && this.props.contacts.length > 0) {\n      this.props.contacts.map((c) => {\n        if (c.action) {\n          // Action item\n          contactNodes.push(\n            <ContactAction\n              title={c.title} action={c.action} values={c.values}\n              key={c.action}\n              onAction={this.props.onAction}\n              />);\n        } else {\n          // Normal contact\n          const key = this.props.showMode ? c.user : (c.topic || c.user);\n          // If filter function is provided, filter out the items\n          // which don't satisfy the condition.\n          if (this.props.filterFunc && this.props.filter) {\n            const filterOn = [key];\n            if (c.private && c.private.comment) {\n              filterOn.push(('' + c.private.comment).toLowerCase());\n            }\n            if (c.public && c.public.fn) {\n              filterOn.push(('' + c.public.fn).toLowerCase());\n            }\n            if (!this.props.filterFunc(this.props.filter, filterOn)) {\n              return;\n            }\n          }\n\n          const isChannel = Tinode.isChannelTopicName(key);\n          const selected = showCheckmark ?\n            (this.props.topicSelected.indexOf(key) > -1) :\n            (this.props.topicSelected === key);\n          const badges = [];\n          if (this.props.showMode) {\n            if (key == this.props.myUserId) {\n              badges.push({name: formatMessage(messages.badge_you), color: 'green'});\n            }\n            if (c.acs && c.acs.isOwner()) {\n              badges.push({name: formatMessage(messages.badge_owner), color: 'blue'});\n            }\n          }\n\n          const comment = Array.isArray(c.private) ?\n            c.private.join(',') : (c.private ? c.private.comment : null);\n          let preview;\n          let deliveryStatus;\n          if (!this.props.showMode && c.latestMessage) {\n            const msg = c.latestMessage(true);\n            if (msg) {\n              deliveryStatus = msg._status || c.msgStatus(msg, true);\n              preview = typeof msg.content == 'string' ?\n                msg.content.substr(0, MESSAGE_PREVIEW_LENGTH) :\n                Drafty.preview(msg.content, MESSAGE_PREVIEW_LENGTH);\n            }\n          }\n          contactNodes.push(\n            <Contact\n              title={c.public ? c.public.fn : null}\n              avatar={makeImageUrl(c.public ? c.public.photo : null)}\n              comment={comment}\n              preview={preview}\n              received={deliveryStatus}\n              unread={this.props.showUnread ? c.unread : 0}\n              now={c.online && this.props.connected}\n              acs={c.acs}\n              showMode={this.props.showMode}\n              badges={badges}\n              showCheckmark={showCheckmark}\n              selected={selected}\n              showOnline={this.props.showOnline && !isChannel}\n              isChannel={isChannel}\n              onSelected={this.props.onTopicSelected}\n              showContextMenu={this.props.showContextMenu}\n              isVerified={c.trusted && c.trusted.verified}\n              isStaff={c.trusted && c.trusted.staff}\n              isDangerous={c.trusted && c.trusted.danger}\n              item={key}\n              index={contactNodes.length}\n              key={key} />\n          );\n          contactsCount ++;\n        }\n      }, this);\n    }\n\n    return (\n      <div className={this.props.noScroll ? null : \"scrollable-panel\"}>\n        {contactsCount == 0 ?\n          <div className=\"center-medium-text\"\n            dangerouslySetInnerHTML={{__html: this.props.emptyListMessage}} />\n          :\n          null\n        }\n        {contactNodes.length > 0 ?\n          <ul className=\"contact-box\">\n            {contactNodes}\n          </ul>\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ContactList);\n","// The X menu to be displayed in title bars.\nimport React from 'react';\n\nexport default class MenuCancel extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n        <i className=\"material-icons\">close</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nimport MenuCancel from './menu-cancel.jsx';\n\nexport default class ErrorPanel extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      show: false,\n    };\n\n    this.hide = this.hide.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.level !== this.props.level) {\n      this.setState({\n        show: !(!this.props.level)\n      });\n    }\n  }\n\n  hide() {\n    this.setState({show: false});\n    if (this.props.onClearError) {\n      this.props.onClearError();\n    }\n  }\n\n  render() {\n    const icons = {err: 'error', warn: 'warning', info: 'info'}\n    const level = icons[this.props.level] || '';\n    const className = 'info-box ' + level;\n    return (\n      <div className={className}>\n        <div className=\"icon\"><i className=\"material-icons\">{level}</i></div>\n        <span>\n          {this.props.text}\n          {this.props.action ?\n            <>\n              &#32;<a href=\"#\"\n                style={{ whiteSpace: 'nowrap' }}\n                onClick={(e) => {e.preventDefault(); this.props.action();}}>\n                {this.props.actionText}\n              </a>\n            </>\n          : null}\n        </span>\n        <div className=\"cancel\"><MenuCancel onCancel={this.hide} /></div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\n\nexport default class Chip extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel(this.props.topic, this.props.index);\n  }\n\n  render() {\n    const title = this.props.title || this.props.topic;\n    const className = this.props.invalid ? 'chip invalid' : 'chip';\n    return (\n      <div className={className}>\n        {this.props.noAvatar ?\n          <span className=\"spacer\" /> :\n          <div className=\"avatar-box\">\n            <LetterTile\n              avatar={this.props.avatar || true}\n              topic={this.props.topic}\n              title={this.props.title} />\n          </div>\n        }\n        <span>{title}</span>\n        {this.props.onCancel && !this.props.required ?\n          <a href=\"#\" onClick={this.handleCancel} >&times;</a>\n          : <span className=\"spacer\" />}\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport Chip from './chip.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n/* BEGIN ChipInput: group membership widget */\nexport default class ChipInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = ChipInput.deriveStateFromProps(props);\n    this.state.input = '';\n    this.state.focused = false;\n\n    this.handleTextInput = this.handleTextInput.bind(this);\n    this.removeChipAt = this.removeChipAt.bind(this);\n    this.handleChipCancel = this.handleChipCancel.bind(this);\n    this.handleFocusGained = this.handleFocusGained.bind(this);\n    this.handleFocusLost = this.handleFocusLost.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  static deriveStateFromProps(props) {\n    return {\n      placeholder: props.chips ? '' : props.prompt,\n      sortedChips: ChipInput.sortChips(props.chips, props.staticMembers),\n      chipIndex: ChipInput.indexChips(props.chips)\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chips != this.props.chips ||\n      prevProps.staticMembers != this.props.staticMembers ||\n      prevProps.prompt != this.props.prompt) {\n      this.setState(ChipInput.deriveStateFromProps(this.props));\n    }\n    if (!prevState || this.props.chips.length > prevState.sortedChips.length) {\n      this.setState({input: ''});\n    }\n  }\n\n  // Map chip index to user name\n  static indexChips(chips) {\n    const index = {};\n    let count = 0;\n    chips.map((item) => {\n      index[item.user] = count;\n      count ++;\n    });\n    return index;\n  }\n\n  // Have non-removable chips appear before all other chips.\n  static sortChips(chips, keep) {\n    const required = [];\n    const normal = [];\n    chips.map((item) => {\n      if (keep && keep.includes(item.user)) {\n        required.push(item);\n      } else {\n        normal.push(item);\n      }\n    });\n    return required.concat(normal);\n  }\n\n  handleTextInput(e) {\n    this.setState({input: e.target.value});\n    if (this.props.filterFunc) {\n      this.props.filterFunc(e.target.value);\n    }\n  }\n\n  removeChipAt(idx) {\n    const removed = this.state.sortedChips[idx];\n    this.props.onChipRemoved(removed.user, this.state.chipIndex[removed.user]);\n  }\n\n  handleChipCancel(item, idx) {\n    this.removeChipAt(idx);\n  }\n\n  handleFocusGained() {\n    this.setState({focused: true});\n  }\n\n  handleFocusLost() {\n    this.setState({focused: false});\n    if (this.props.onFocusLost) {\n      this.props.onFocusLost(this.state.input);\n    }\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Backspace') {\n      if (this.state.input.length == 0 && this.state.sortedChips.length > 0) {\n        const at = this.state.sortedChips.length - 1;\n        if (this.state.sortedChips[at].user !== this.props.staticMembers) {\n          this.removeChipAt(at);\n        }\n      }\n    } else if (e.key === 'Enter') {\n      if (this.props.onEnter) {\n        this.props.onEnter(this.state.input);\n      }\n    } else if (e.key === 'Escape') {\n      if (this.props.onCancel) {\n        this.props.onCancel();\n      }\n    }\n  }\n\n  render() {\n    const chips = [];\n    let count = 0;\n    const staticMembers = this.props.staticMembers || [];\n    this.state.sortedChips.map((item) => {\n      chips.push(\n        <Chip\n          onCancel={this.handleChipCancel}\n          avatar={makeImageUrl(item.public ? item.public.photo : null)}\n          title={item.public ? item.public.fn : undefined}\n          noAvatar={this.props.avatarDisabled}\n          topic={item.user}\n          required={staticMembers.includes(item.user)}\n          invalid={item.invalid}\n          index={count}\n          key={item.user} />\n      );\n      count++;\n    });\n    const className = \"chip-input\" + (this.state.focused ? ' focused' : '');\n    return (\n      <div className={className}>\n        {chips}\n        <input type=\"text\"\n          placeholder={this.state.placeholder}\n          onChange={this.handleTextInput}\n          onFocus={this.handleFocusGained}\n          onBlur={this.handleFocusLost}\n          onKeyDown={this.handleKeyDown}\n          value={this.state.input}\n          autoFocus />\n      </div>\n    );\n  }\n};\n","// GroupMembers: control for managing a list of group members.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\nimport ContactList from './contact-list.jsx';\n\nconst messages = defineMessages({\n  no_contacts: {\n    id: 'no_contacts',\n    defaultMessage: 'You have no contacts :-(',\n    description: 'Shown in ContactsView when the user has no contacts'\n  },\n  contacts_not_found_short: {\n    id: 'contacts_not_found_short',\n    defaultMessage: \"No contacts match ''{query}''\",\n    description: 'Shown in ContactsView when search returned no results'\n  }\n});\n\nclass GroupManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Array of topic members\n      members: props.members,\n      index: GroupManager.indexMembers(props.members),\n      staticMembers: GroupManager.staticMembers(props.members, props.keepInitialMembers, props.requiredMember),\n      contactFilter: '',\n      noContactsMessage: props.intl.formatMessage(messages.no_contacts),\n      selectedContacts: GroupManager.selectedContacts(props.members)\n    };\n\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleMemberRemoved = this.handleMemberRemoved.bind(this);\n    this.handleContactFilter = this.handleContactFilter.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static indexMembers(members) {\n    let index = {};\n    members.map((m) => {\n      index[m.user] = {delta: 0, present: true}; // Delta: 0 unchanged, +1 added, -1 removed\n    });\n    return index;\n  }\n\n  static staticMembers(members, keepInitial, requiredMember) {\n    let stat = [];\n    members.map((m) => {\n      if (keepInitial || m.user == requiredMember) {\n        stat.push(m.user);\n      }\n    });\n    return stat;\n  }\n\n  static selectedContacts(members) {\n    let sel = [];\n    members.map((m) => {\n      sel.push(m.user);\n    });\n    return sel;\n  }\n\n  handleContactSelected(userId, index) {\n    let status = this.state.index[userId];\n    if (status) {\n      if (status.present) {\n        // Prevent duplicate members\n        return;\n      }\n      status.delta += 1;\n      status.present = true;\n    } else {\n      status = {delta: 1, present: true};\n    }\n\n    let m = this.state.members.slice();\n    m.push(this.props.contacts[index]);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleMemberRemoved(userId, index) {\n    const status = this.state.index[userId];\n    if (!status || !status.present) {\n      return;\n    }\n    status.present = false;\n    status.delta -= 1;\n\n    let m = this.state.members.slice();\n    m.splice(index, 1);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleContactFilter(val) {\n    const {formatMessage} = this.props.intl;\n    const msg = !val ?\n      formatMessage(messages.no_contacts) :\n      formatMessage(messages.contacts_not_found_short, {query: val});\n\n    this.setState({contactFilter: val, noContactsMessage: msg});\n  }\n\n  static doContactFiltering(filter, values) {\n    if (filter) {\n      for (let i=0; i<values.length; i++) {\n        if (values[i].indexOf(filter) >= 0) {\n          return true;\n        }\n      }\n      return false;\n    }\n    return true;\n  }\n\n  handleSubmit() {\n    var instance = this;\n    var members = [];\n    var added = [];\n    var removed = [];\n\n    var keys = Object.keys(this.state.index);\n    keys.map(function(k) {\n      if (instance.state.index[k].present) {\n        members.push(k);\n      }\n\n      if (instance.state.index[k].delta > 0) {\n        added.push(k);\n      } else if (instance.state.index[k].delta < 0) {\n        removed.push(k);\n      }\n    });\n    this.props.onSubmit(members, added, removed);\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <div id=\"group-manager\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_group_members\" defaultMessage=\"Group Members\" description=\"Section title\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ChipInput\n            chips={this.state.members}\n            staticMembers={this.state.staticMembers}\n            prompt=\"add members\"\n            filterFunc={this.handleContactFilter}\n            onChipRemoved={this.handleMemberRemoved} />\n        </div>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_all_contacts\" defaultMessage=\"All Contacts\"\n              description=\"Section title [All Contacts]\" />\n          </label>\n        </div>\n        <ContactList\n          contacts={this.props.contacts}\n          myUserId={this.props.myUserId}\n          topicSelected={this.state.selectedContacts}\n          filter={this.state.contactFilter}\n          filterFunc={GroupManager.doContactFiltering}\n          emptyListMessage={this.state.noContactsMessage}\n          showOnline={false}\n          showUnread={false}\n          onTopicSelected={this.handleContactSelected} />\n        <div id=\"group-manager-buttons\" className=\"panel-form-row\">\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n          <button className=\"secondary\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(GroupManager);\n","// Password with a visiblity toggle.\nimport React from 'react';\n\nexport default class VisiblePassword extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: this.props.value,\n      visible: false\n    };\n\n    this.handleVisibility = this.handleVisibility.bind(this);\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n    if (this.props.onChange) {\n      this.props.onChange(e);\n    }\n  }\n\n  handleVisibility(e) {\n    e.preventDefault();\n    this.setState({visible: !this.state.visible});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode == 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, visible: false});\n      if (this.props.onFinished) {\n        this.props.onFinished();\n      }\n    } else if (e.keyCode == 13) {\n      // Enter pressed\n      this.handleEditingFinished();\n    }\n  }\n\n  handleEditingFinished(e) {\n    if (e) {\n      let currentTarget = e.currentTarget;\n      setTimeout(() => {\n        if (!currentTarget.contains(document.activeElement)) {\n          if (this.props.onFinished) {\n            this.props.onFinished(this.state.value);\n          }\n        }\n      }, 0);\n    } else if (this.props.onFinished) {\n      this.props.onFinished(this.state.value.trim());\n    }\n  }\n\n  render() {\n    return (\n      <div tabIndex=\"-1\" className=\"group-focus\"\n        onBlur={this.handleEditingFinished}>\n        <input className=\"with-visibility\"\n          type={this.state.visible ? \"text\" : \"password\"}\n          value={this.state.value}\n          placeholder={this.props.placeholder}\n          required={this.props.required ? 'required' : ''}\n          autoFocus={this.props.autoFocus ? 'autoFocus' : ''}\n          autoComplete={this.props.autoComplete}\n          onChange={this.handeTextChange}\n          onKeyDown={this.handleKeyDown} />\n        <span onClick={this.handleVisibility}>\n          <i className=\"material-icons clickable light-gray\">\n            {this.state.visible ? 'visibility' : 'visibility_off'}\n          </i>\n        </span>\n      </div>\n    );\n  }\n}\n","// In-place text editor. Shows text with an icon which toggles it into an input field.\nimport React from 'react';\n\nimport VisiblePassword from './visible-password.jsx';\n\nexport default class InPlaceEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selfRef = React.createRef();\n\n    this.state = {\n      active: props.active,\n      initialValue: props.value || '',\n      value: props.value || ''\n    };\n\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleStartEditing = this.handleStartEditing.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n    this.handlePasswordFinished = this.handlePasswordFinished.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // If text has changed while in read mode, update text and discard changes.\n    // Ignore update if in edit mode.\n    const newValue = this.props.value || '';\n    if (prevState.initialValue != newValue && !prevState.active) {\n      this.setState({\n        initialValue: newValue,\n        value: newValue\n      });\n    }\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, active: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleEditingFinished(e);\n    }\n  }\n\n   handleStartEditing() {\n    if (!this.props.readOnly) {\n      this.setState({active: true}, () => {\n        if (this.selfRef.current) {\n          this.selfRef.current.focus();\n        }\n      });\n    }\n  }\n\n  handleEditingFinished(event) {\n    if (this.props.required && !event.target.checkValidity()) {\n      // Empty input\n      this.setState({value: this.props.value, active: false});\n      return;\n    }\n    this.setState({active: false});\n    let value = this.state.value.trim();\n    if ((value || this.props.value) && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  handlePasswordFinished(value) {\n    this.setState({active: false});\n    if (value && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  render() {\n    if (!this.state.active) {\n      let spanText = this.props.type == 'password' ? '••••••••' : this.state.value;\n      let spanClass = 'in-place-edit' + (this.props.readOnly ? ' disabled' : '');\n      if (!spanText) {\n        spanText = this.props.placeholder;\n        spanClass += ' placeholder';\n      }\n      if (spanText.length > 20) {\n        // FIXME: this is wrong for RTL languages.\n        spanText = spanText.substring(0, 19) + '...';\n      }\n      return (<span className={spanClass} onClick={this.handleStartEditing}>\n        <span className=\"content\">{spanText}</span>\n      </span>);\n    }\n\n    let element;\n    let attr = {};\n    if (this.props.type == 'password') {\n      element = VisiblePassword;\n      attr.onFinished = this.handlePasswordFinished;\n    } else {\n      if (this.props.multiline > 1) {\n        element = 'textarea';\n        attr.rows = this.props.multiline;\n        attr.className = 'inplace-edit';\n      } else {\n        element = 'input';\n        attr.type = this.props.type || 'text';\n      }\n      attr.onChange = this.handeTextChange;\n      attr.onKeyDown = this.handleKeyDown;\n      attr.onBlur = this.handleEditingFinished;\n    }\n    attr.placeholder = this.props.placeholder;\n    attr.required = this.props.required ? 'required' : '';\n    attr.autoComplete = this.props.autoComplete;\n    attr.autoFocus = true;\n    attr.ref = this.selfRef;\n\n    return React.createElement(element, attr, null);\n  }\n};\n","// Toggle [Title text >] -> [Title text v]\n\nimport React from 'react';\n\nexport default class MoreButton extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: props.open\n    };\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n\n  handleToggle() {\n    const open = !this.state.open;\n    this.setState({open: open});\n    if (this.props.onToggle) {\n      this.props.onToggle(open);\n    }\n  }\n\n  render() {\n    return (<label className=\"small clean-clickable\" onClick={this.handleToggle}>{this.props.title}...\n      {this.state.open ? <i className=\"material-icons\">expand_more</i> :\n        <i className=\"material-icons\">chevron_right</i>}\n      </label>);\n  }\n}\n","// PermissionsEditor: Component for editing permissions\n// <PermissionsEditor mode=\"JWROD\" skip=\"O\" onChange={this.handleCheckboxTest} />\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport CheckBox from './checkbox.jsx';\nimport Contact from './contact.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\n// Translatable permission names.\nconst messages = defineMessages({\n  joiner: {\n    id: 'permission_join',\n    defaultMessage: \"Join ({val})\",\n    description: 'Name of J permission'\n  },\n  reader: {\n    id: 'permission_read',\n    defaultMessage: \"Read ({val})\",\n    description: 'Name of R permission'\n  },\n  writer: {\n    id: 'permission_write',\n    defaultMessage: \"Write ({val})\",\n    description: 'Name of W permission'\n  },\n  preser: {\n    id: 'permission_pres',\n    defaultMessage: \"Get notified ({val})\",\n    description: 'Name of P permission'\n  },\n  approver: {\n    id: 'permission_admin',\n    defaultMessage: \"Approve ({val})\",\n    description: 'Name of A permission'\n  },\n  sharer: {\n    id: 'permission_share',\n    defaultMessage: \"Share ({val})\",\n    description: 'Name of S permission'\n  },\n  deleter: {\n    id: 'permission_delete',\n    defaultMessage: \"Delete ({val})\",\n    description: 'Name of D permission'\n  },\n  owner: {\n    id: 'permission_owner',\n    defaultMessage: \"Owner ({val})\",\n    description: 'Name of O permission'\n  }\n});\n\nclass PermissionsEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mode: (props.mode || '').replace('N', '')\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(val) {\n    let mode = this.state.mode;\n    let idx = mode.indexOf(val);\n    if (idx == -1) {\n      mode += val;\n    } else {\n      mode = mode.replace(val, '');\n    }\n    this.setState({mode: mode});\n  }\n\n  handleSubmit() {\n    // Normalize string, otherwise cannot check if mode has changed.\n    var mode = (this.state.mode || 'N').split('').sort().join('');\n    var before = (this.props.mode || 'N').split('').sort().join('')\n    if (mode !== before) {\n      this.props.onSubmit(mode);\n    } else {\n      this.props.onCancel();\n    }\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const all = 'JRWPASDO';\n    const names = {\n      'J': formatMessage(messages.joiner, {val: 'J'}),\n      'R': formatMessage(messages.reader, {val: 'R'}),\n      'W': formatMessage(messages.writer, {val: 'W'}),\n      'P': formatMessage(messages.preser, {val: 'P'}),\n      'A': formatMessage(messages.approver, {val: 'A'}),\n      'S': formatMessage(messages.sharer, {val: 'S'}),\n      'D': formatMessage(messages.deleter, {val: 'D'}),\n      'O': formatMessage(messages.owner, {val: 'O'})\n    };\n\n    let skip = this.props.skip || '';\n    let mode = this.state.mode;\n    let compare = (this.props.compare || '').replace('N', '');\n    let items = [];\n    for (let i=0; i<all.length; i++) {\n      let c = all.charAt(i);\n      if (skip.indexOf(c) >= 0 && mode.indexOf(c) < 0) {\n        // Permission is marked as inactive: hide unchecked permissions, disable checked permissions\n        continue;\n      }\n      items.push(\n        <tr key={c}>\n          <td>{names[c]}</td>\n          <td className=\"checkbox\">{skip.indexOf(c) < 0 ?\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} onChange={this.handleChange}/>\n            :\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} />\n          }</td>{this.props.compare ? <td className=\"checkbox\">\n            <CheckBox name={c} checked={(compare.indexOf(c) >= 0)}/>\n          </td> : null}\n        </tr>\n      );\n    }\n\n    return (\n      <div className=\"panel-form-column\">\n        {this.props.userTitle ?\n          <ul className=\"contact-box\"><Contact\n            item={this.props.item}\n            title={this.props.userTitle}\n            avatar={makeImageUrl(this.props.userAvatar ? this.props.userAvatar : null)} /></ul> : null}\n        <label className=\"small\"><FormattedMessage id=\"title_permissions\"\n          defaultMessage=\"Permissions\" description=\"Section title\"/></label>\n        <table className=\"permission-editor\">\n        {this.props.compare ?\n          <thead><tr>\n            <th></th><th>{this.props.modeTitle}</th>\n            <th>{this.props.compareTitle}</th>\n          </tr></thead> :\n          null}\n        <tbody>\n          {items}\n        </tbody></table>\n        <br />\n        <div className=\"dialog-buttons\">\n          <button className=\"outline\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(PermissionsEditor);\n","// TagManager: edit topic or user tags.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\n\nimport { MAX_TAG_COUNT, MAX_TAG_LENGTH, MIN_TAG_LENGTH } from '../config.js';\nimport { arrayEqual } from '../lib/utils.js';\n\nexport default class TagManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tags: this.props.tags,\n      tagInput: '',\n      activated: this.props.activated\n    };\n\n    this.handleTagInput = this.handleTagInput.bind(this);\n    this.handleAddTag = this.handleAddTag.bind(this);\n    this.handleRemoveTag = this.handleRemoveTag.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (!arrayEqual(nextProps.tags, prevState.tags) && !prevState.activated) {\n      return {tags: nextProps.tags};\n    }\n    return null;\n  }\n\n  handleTagInput(text) {\n    this.setState({tagInput: text});\n    if (text.length > 0) {\n      const last = text[text.length-1];\n      if (text[0] == '\"') {\n        // This is a quoted string.\n        if (text.length > 1 && last == '\"') {\n          this.handleAddTag(text.substring(1, text.length-1));\n        }\n      } else if (last == ',' || last == ' ' || last == ';' || last == '\"') {\n        // User entered ',', ' ' or ';'\n        this.handleAddTag(text.substring(0, text.length-1).trim());\n      }\n    }\n  }\n\n  handleAddTag(tag) {\n    const maxTagCount = this.props.tinode.getServerLimit('maxTagCount', MAX_TAG_COUNT);\n\n    if (tag.length > 0 && this.state.tags.length < maxTagCount) {\n      const tags = this.state.tags.slice(0);\n      tags.push(tag);\n\n      this.setState({tags: tags, tagInput: ''});\n      if (this.props.onTagsChanged) {\n        this.props.onTagsChanged(tags);\n      }\n      return tags;\n    }\n    return this.state.tags;\n  }\n\n  handleRemoveTag(tag, index) {\n    const tags = this.state.tags.slice(0);\n    tags.splice(index, 1);\n    this.setState({tags: tags});\n    if (this.props.onTagsChanged) {\n      this.props.onTagsChanged(tags);\n    }\n  }\n\n  handleSubmit() {\n    // Add unprocessed input to tags, submit the list.\n    this.props.onSubmit(this.handleAddTag(this.state.tagInput.trim()));\n    this.setState({activated: false, tags: this.props.tags});\n  }\n\n  handleCancel() {\n    this.setState({activated: false, tagInput: '', tags: this.props.tags});\n    if (this.props.onCancel) {\n      this.props.onCancel();\n    }\n  }\n\n  render() {\n    const minTagLength = this.props.tinode.getServerLimit('minTagLength', MIN_TAG_LENGTH);\n    const maxTagLength = this.props.tinode.getServerLimit('maxTagLength', MAX_TAG_LENGTH);\n\n    let tags = [];\n    if (this.state.activated) {\n      this.state.tags.map((tag) => {\n        tags.push({user: tag, invalid: (tag.length < minTagLength || tag.length > maxTagLength)});\n      });\n    } else {\n      this.state.tags.map((tag) => {\n        tags.push(<span className=\"badge\" key={tags.length}>{tag}</span>);\n      });\n      if (tags.length == 0) {\n        tags = (\n          <i>\n            <FormattedMessage id=\"tags_not_found\" defaultMessage=\"No tags defined. Add some.\" description=\"\" />\n          </i>\n        );\n      }\n    }\n    return (\n      <div className=\"panel-form-column\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">{this.props.title}</label>\n        </div>\n        {this.state.activated ?\n        <div>\n          <FormattedMessage id=\"tags_editor_no_tags\" defaultMessage=\"Add some tags\"\n            description=\"Tag editor prompt when no tags are found.\">{\n            (add_tags_prompt) => <ChipInput\n              chips={tags}\n              avatarDisabled={true}\n              prompt={add_tags_prompt}\n              onEnter={this.handleAddTag}\n              onFocusLost={this.handleAddTag}\n              onCancel={this.handleCancel}\n              onChipRemoved={this.handleRemoveTag}\n              filterFunc={this.handleTagInput} />\n          }</FormattedMessage>\n          {this.props.onSubmit || this.props.onCancel ?\n            <div id=\"tag-manager-buttons\" className=\"dialog-buttons panel-form-row\">\n              <button className=\"outline\" onClick={this.handleCancel}>\n                <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n              </button>\n              <button className=\"primary\" onClick={this.handleSubmit}>\n                <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n              </button>\n            </div>\n          : null}\n        </div>\n        :\n        <div className=\"quoted\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.setState({activated: true});}}>\n            <i className=\"material-icons\">edit</i> &nbsp;<FormattedMessage id=\"title_manage_tags\" defaultMessage=\"Manage\"\n              description=\"Section title for the list of tags\" />\n          </a>\n          <>{tags}</>\n        </div>\n      }\n      </div>\n    );\n  }\n};\n","// InfoView: panel with topic/user info.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport BadgeList from '../widgets/badge-list.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport ContactList from '../widgets/contact-list.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupManager from '../widgets/group-manager.jsx';\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport MenuCancel from '../widgets/menu-cancel.jsx';\nimport MoreButton from '../widgets/more-button.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\nimport TagManager from '../widgets/tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH, NO_ACCESS_MODE } from '../config.js';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, theCard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  requested: {\n    id: 'requested_permissions',\n    defaultMessage: 'Requested',\n    description: 'Title for permissions'\n  },\n  granted: {\n    id: 'granted_permissions',\n    defaultMessage: 'Granted',\n    description: 'Title for permissions'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n  other_user: {\n    id: 'label_other_user',\n    defaultMessage: 'Other',\n    description: 'Label for the other user when the user is unnamed'\n  },\n  clear_messages: {\n    id: 'action_clear_messages',\n    defaultMessage: 'Clear Messages',\n    description: 'Flat button [Clear Messages] (soft-delete messages)'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n  delete_messages: {\n    id: 'action_delete_messages',\n    defaultMessage: 'Clear Messages for All',\n    description: 'Flat button [Clear for All] (hard-delete all messages)'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  leave_chat: {\n    id: 'action_leave_chat',\n    defaultMessage: 'Leave Conversation',\n    description: 'Flat button [Leave Conversation]'\n  },\n  leave_chat_warning: {\n    id: 'leave_chat_warning',\n    defaultMessage: 'Are you sure you want to leave this conversation?',\n    description: 'Alert dialog warning when unsubscribing from a chat.'\n  },\n  block_contact: {\n    id: 'action_block_contact',\n    defaultMessage: \"Block Contact\",\n    description: \"Flat button [Block Contact]\"\n  },\n  block_contact_warning: {\n    id: 'block_contact_warning',\n    defaultMessage: 'Are you sure you want to block this contact?',\n    description: 'Alert dialog warning when blocking a contact.'\n  },\n  report_chat: {\n    id: 'action_report_chat',\n    defaultMessage: 'Report Conversation',\n    description: 'Flat button [Report Group]'\n  },\n  report_chat_warning: {\n    id: 'report_chat_warning',\n    defaultMessage: 'Are you sure you want to block and report this conversation?',\n    description: 'Alert dialog warning when reporting a conversation for abuse'\n  },\n});\n\nclass InfoView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      topic: null,\n      owner: false,\n      admin: false,\n      sharer: false,\n      deleter: false,\n      muted: false,\n      address: null,\n      groupTopic: undefined,\n      channel: undefined,\n      fullName: undefined,\n      avatar: null,\n      private: null,\n      selectedContact: null,\n      access: null,\n      modeGiven: null,\n      modeWant: null,\n      modeGiven2: null, // P2P topic, the other user mode given\n      modeWant2: null,  // P2P topic, the other user mode want\n      auth: null,\n      anon: null,\n      contactList: [],\n      tags: [],\n      trustedBadges: [],\n      showMemberPanel: false,\n      showPermissionEditorFor: undefined,\n      moreInfoExpanded: false,\n      previousMetaDesc: undefined,\n      previousSubsUpdated: undefined,\n      previousTagsUpdated: undefined\n    };\n\n    this.resetSubs = this.resetSubs.bind(this);\n    this.resetDesc = this.resetDesc.bind(this);\n    this.onMetaDesc = this.onMetaDesc.bind(this);\n    this.onSubsUpdated = this.onSubsUpdated.bind(this);\n    this.onTagsUpdated = this.onTagsUpdated.bind(this);\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\n    this.handlePrivateUpdate = this.handlePrivateUpdate.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleMuted = this.handleMuted.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handleShowAddMembers = this.handleShowAddMembers.bind(this);\n    this.handleHideAddMembers = this.handleHideAddMembers.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleDeleteMessages = this.handleDeleteMessages.bind(this);\n    this.handleLeave = this.handleLeave.bind(this);\n    this.handleBlock = this.handleBlock.bind(this);\n    this.handleReport = this.handleReport.bind(this);\n    this.handleMemberSelected = this.handleMemberSelected.bind(this);\n    this.handleMoreInfo = this.handleMoreInfo.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.handleContextMenu = this.handleContextMenu.bind(this);\n  }\n\n  // No need to separately handle component mount.\n  componentDidUpdate(props) {\n    const topic = this.props.tinode.getTopic(props.topic);\n    if (!topic) {\n      return;\n    }\n\n    if (this.onMetaDesc != topic.onMetaDesc) {\n      this.previousMetaDesc = topic.onMetaDesc;\n      topic.onMetaDesc = this.onMetaDesc;\n\n      this.previousSubsUpdated = topic.onSubsUpdated;\n      topic.onSubsUpdated = this.onSubsUpdated;\n\n      if (topic.getType() == 'grp') {\n        this.previousTagsUpdated = topic.onTagsUpdated;\n        topic.onTagsUpdated = this.onTagsUpdated;\n      } else {\n        this.previousTagsUpdated = undefined;\n      }\n    }\n\n    if (this.state.topic != props.topic) {\n      this.setState({topic: props.topic});\n      this.resetDesc(topic, props);\n      this.resetSubs(topic, props);\n    }\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.setState({topic: null});\n    topic.onMetaDesc = this.previousMetaDesc;\n    topic.onSubsUpdated = this.previousSubsUpdated;\n    topic.onTagsUpdated = this.previousTagsUpdated;\n  }\n\n  resetSubs(topic, props) {\n    const newState = {contactList: []};\n    if (topic.getType() == 'p2p') {\n      // Fetch the other party in the p2p conversation.\n      // Topic may not be ready yet, so check if user is found.\n      const user2 = topic.subscriber(props.topic);\n      if (user2) {\n        newState.modeGiven2 = user2.acs.getGiven();\n        newState.modeWant2 = user2.acs.getWant();\n      } else {\n        newState.modeGiven2 = NO_ACCESS_MODE;\n        newState.modeWant2 = NO_ACCESS_MODE;\n      }\n    } else {\n      topic.subscribers((sub) => {\n        newState.contactList.push(sub);\n      }, this);\n    }\n\n    this.setState(newState);\n  }\n\n  resetDesc(topic, props) {\n    const defacs = topic.getDefaultAccess() || {};\n    const acs = topic.getAccessMode();\n\n    const badges = [];\n    if (topic.trusted) {\n      for (const [key, val] of Object.entries(topic.trusted)) {\n        if (val) {\n          badges.push(key);\n        }\n      }\n    }\n    this.setState({\n      owner: acs && acs.isOwner(),\n      admin: acs && acs.isAdmin(),\n      sharer: acs && acs.isSharer(),\n      deleter: acs && acs.isDeleter(),\n      muted: acs && acs.isMuted(),\n\n      fullName: topic.public ? topic.public.fn : undefined,\n      avatar: makeImageUrl(topic.public ? topic.public.photo : null),\n      trustedBadges: badges,\n      private: topic.private ? topic.private.comment : null,\n      address: topic.name,\n      groupTopic: topic.isGroupType(),\n      channel: topic.isChannelType(),\n      showMemberPanel: false,\n      access: acs ? acs.getMode() : undefined,\n      modeGiven: acs ? acs.getGiven() : undefined,\n      modeWant: acs ? acs.getWant() : undefined,\n      auth: defacs.auth,\n      anon: defacs.anon\n    });\n\n    if (topic.getType() == 'grp' && acs && acs.isOwner()) {\n      // Requesting tags: owner is editing the topic.\n      topic.getMeta(topic.startMetaQuery().withTags().build());\n    }\n  }\n\n  onMetaDesc(desc) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetDesc(topic, this.props);\n\n    if (this.previousMetaDesc && this.previousMetaDesc != this.onMetaDesc) {\n      this.previousMetaDesc(desc);\n    }\n  }\n\n  onSubsUpdated(subs) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetSubs(topic, this.props);\n\n    if (this.previousSubsUpdated && this.previousSubsUpdated != this.onSubsUpdated) {\n      this.previousSubsUpdated(subs);\n    }\n  }\n\n  onTagsUpdated(tags) {\n    this.setState({tags: tags});\n\n    if (this.previousTagsUpdated && this.previousTagsUpdated != this.onTagsUpdated) {\n      this.previousTagsUpdated();\n    }\n  }\n\n  handleFullNameUpdate(fn) {\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.fullName !== fn) {\n      this.setState({fullName: fn});\n      this.props.onTopicDescUpdate(this.props.topic, theCard(fn, null), null);\n    }\n  }\n\n  handlePrivateUpdate(comment) {\n    comment = comment.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.private !== comment) {\n      this.setState({private: comment});\n      this.props.onTopicDescUpdate(this.props.topic, null, comment || Tinode.DEL_CHAR);\n    }\n  }\n\n  handleImageChanged(img) {\n    this.setState({avatar: img});\n    this.props.onTopicDescUpdate(this.props.topic, theCard(null, img || Tinode.DEL_CHAR), null);\n  }\n\n  handleMuted(ignored, checked) {\n    this.setState({muted: checked});\n    this.props.onChangePermissions(this.props.topic, checked ? '-P' : '+P');\n  }\n\n  handlePermissionsChanged(perm) {\n    switch (this.state.showPermissionEditorFor) {\n      case 'auth':\n        this.props.onTopicDescUpdate(this.props.topic, null, null, {auth: perm});\n        break;\n      case 'anon':\n        this.props.onTopicDescUpdate(this.props.topic, null, null, {anon: perm});\n        break;\n      case 'mode':\n      case 'want':\n        this.props.onChangePermissions(this.props.topic, perm);\n        break;\n      case 'given':\n        this.props.onChangePermissions(this.props.topic, perm, this.props.topic);\n        break;\n      case 'user':\n        this.props.onChangePermissions(this.props.topic, perm, this.state.userPermissionsEdited);\n        break;\n    }\n\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handleLaunchPermissionsEditor(which, uid) {\n    const {formatMessage} = this.props.intl;\n    let toEdit, toCompare, toSkip, titleEdit, titleCompare, userTitle, userAvatar;\n    switch (which) {\n      case 'mode':\n        toEdit = this.state.access;\n        break;\n      case 'want':\n        toEdit = this.state.modeWant;\n        toCompare = this.state.modeGiven;\n        if (this.state.owner) {\n          // Don't allow owner to unset 'O' permission. All other permissions are OK.\n          toSkip = 'O';\n        } else {\n          // Allow accepting any of 'ASDO' permissions but don't allow asking for them.\n          toSkip = Tinode.AccessMode.encode(Tinode.AccessMode.diff('ASDO', this.state.modeGiven));\n          if (this.state.channel) {\n            // Channels are read-only.\n            toSkip += 'W';\n          }\n        }\n        titleEdit = formatMessage(messages.requested);\n        titleCompare = formatMessage(messages.granted);\n        break;\n      case 'given':\n        toEdit = this.state.modeGiven2;\n        toCompare = this.state.modeWant2;\n        toSkip = this.state.groupTopic ? (this.state.owner ? '' : 'O') : 'ASDO';\n        titleEdit = formatMessage(messages.granted);\n        titleCompare = formatMessage(messages.requested);\n        break;\n      case 'auth':\n        toEdit = this.state.auth;\n        toSkip = 'O';\n        break;\n      case 'anon':\n        toEdit = this.state.anon;\n        toSkip = 'O';\n        break;\n      case 'user': {\n        const topic = this.props.tinode.getTopic(this.props.topic);\n        if (!topic) {\n          return;\n        }\n        const user = topic.subscriber(uid);\n        if (!user || !user.acs) {\n          return;\n        }\n        toEdit = user.acs.getGiven();\n        toCompare = user.acs.getWant();\n        toSkip = this.state.owner ? '' : 'O';\n        titleEdit = formatMessage(messages.granted);\n        titleCompare = formatMessage(messages.requested);\n        if (user.public) {\n          userTitle = user.public.fn;\n          userAvatar = user.public.photo;\n        }\n        break;\n      }\n      default:\n        console.log(\"Unknown permission editing mode '\" + which + \"'\");\n        break;\n    }\n    this.setState({\n      showPermissionEditorFor: which,\n      userPermissionsEdited: uid,\n      userPermissionsTitle: userTitle,\n      userPermissionsAvatar: userAvatar,\n      editedPermissions: toEdit,\n      immutablePermissions: toCompare,\n      editedPermissionsTitle: titleEdit,\n      immutablePermissionsTitle: titleCompare,\n      editedPermissionsSkipped: toSkip,\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handleShowAddMembers(e) {\n    e.preventDefault();\n    this.props.onInitFind();\n    this.setState({showMemberPanel: true});\n  }\n\n  handleHideAddMembers() {\n    this.setState({showMemberPanel: false});\n  }\n\n  handleMemberUpdateRequest(members, added, removed) {\n    this.props.onMemberUpdateRequest(this.props.topic, added, removed);\n    this.setState({showMemberPanel: false});\n  }\n\n  handleDeleteMessages(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(this.state.deleter ? messages.delete_messages : messages.clear_messages), // title\n      formatMessage(this.state.deleter ? messages.delete_messages_warning : messages.clear_messages_warning), // content\n      (() => { this.props.onDeleteMessages(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleLeave(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.leave_chat), // title\n      formatMessage(messages.leave_chat_warning), // content\n      (() => { this.props.onLeaveTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleBlock(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.block_contact), // title\n      formatMessage(messages.block_contact_warning), // content\n      (() => { this.props.onBlockTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleReport(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.report_chat), // title\n      formatMessage(messages.report_chat_warning), // content\n      (() => { this.props.onReportTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleMemberSelected(uid) {\n    this.setState({selectedContact: uid});\n  }\n\n  handleMoreInfo(open) {\n    this.setState({moreInfoExpanded: open});\n  }\n\n  handleTagsUpdated(tags) {\n    if (!arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      this.props.onTopicTagsUpdate(this.props.topic, tags);\n    }\n  }\n\n  handleContextMenu(params) {\n    const {formatMessage} = this.props.intl;\n    const instance = this;\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    const user = topic.subscriber(params.topicName);\n    if (!user || !user.acs) {\n      return;\n    }\n\n    const menuItems = [\n      {title: formatMessage(messages.edit_permissions), handler: function() {\n        instance.handleLaunchPermissionsEditor('user', params.topicName);\n      }},\n      'member_delete',\n      user.acs.isMuted() ? 'member_unmute' : 'member_mute',\n      user.acs.isJoiner() ? 'member_block' : 'member_unblock'\n    ];\n    this.props.showContextMenu({\n      topicName: this.props.topic,\n      x: params.x,\n      y: params.y,\n      user: params.topicName}, menuItems);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n\n    return (\n      <div id=\"info-view\">\n        <div className=\"caption-panel\" id=\"info-caption-panel\">\n          <div className=\"panel-title\" id=\"info-title\">\n            <FormattedMessage id=\"title_info\" defaultMessage=\"Info\" description=\"Title for InfoView\" />\n          </div>\n          <div>\n            <MenuCancel onCancel={this.props.onCancel} />\n          </div>\n        </div>\n        {this.props.displayMobile ?\n          <ErrorPanel\n            level={this.props.errorLevel}\n            text={this.props.errorText}\n            onClearError={this.props.onError} /> : null}\n        {this.state.showMemberPanel ?\n          <GroupManager\n            members={this.state.contactList}\n            requiredMember={this.props.myUserId}\n            keepInitialMembers={!this.state.admin && !this.state.owner}\n            myUserId={this.props.myUserId}\n            contacts={this.props.searchableContacts}\n            onCancel={this.handleHideAddMembers}\n            onSubmit={this.handleMemberUpdateRequest} />\n          :\n        this.state.showPermissionEditorFor ?\n          <PermissionsEditor\n            mode={this.state.editedPermissions}\n            compare={this.state.immutablePermissions}\n            skip={this.state.editedPermissionsSkipped}\n            modeTitle={this.state.editedPermissionsTitle}\n            compareTitle={this.state.immutablePermissionsTitle}\n            userTitle={this.state.userPermissionsTitle}\n            item={this.state.userPermissionsEdited}\n            userAvatar={this.state.userPermissionsAvatar}\n            onSubmit={this.handlePermissionsChanged}\n            onCancel={this.handleHidePermissionsEditor}\n            />\n          :\n          <div id=\"info-view-content\" className=\"scrollable-panel\">\n            <div className=\"panel-form-row\">\n              <div className=\"panel-form-column\">\n                <div><label className=\"small\">\n                  <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                    description=\"Label for editing topic name\" />\n                </label></div>\n                <div className=\"large\">{this.state.fullName}</div>\n                {this.state.private ?\n                  <>\n                    <div><label className=\"small\">\n                      <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                        description=\"Label for editing 'private'\" />\n                    </label></div>\n                    <div className=\"large\">{this.state.private}</div>\n                  </>\n                : null\n                }\n                <div>\n                  <label className=\"small\"><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n                    description=\"Label for user address (ID)\" /></label>&nbsp;\n                  <tt>{this.props.myUserId}</tt>\n                </div>\n                <BadgeList trustedBadges={this.state.trustedBadges} />\n              </div>\n              <AvatarUpload\n                tinode={this.props.tinode}\n                avatar={this.state.avatar}\n                readOnly={true}\n                uid={this.props.topic}\n                title={this.state.fullName} />\n            </div>\n            <div className=\"panel-form-row\">\n              <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('general');}}>\n                <i className=\"material-icons\">edit</i>&nbsp;\n                <FormattedMessage id=\"button_edit\" defaultMessage=\"Edit\" description=\"Call to action [Edit]\" />\n              </a>\n            </div>\n            <div className=\"hr\" />\n            <div className=\"panel-form-column\">\n              <div className=\"panel-form-row\">\n                <label>\n                  <FormattedMessage id=\"label_muting_topic\" defaultMessage=\"Muted:\"\n                    description=\"Label for Muting/unmuting the topic\" />\n                </label>\n                <CheckBox name=\"P\" checked={this.state.muted}\n                  onChange={this.handleMuted} />\n              </div>\n              <FormattedMessage id=\"action_more\" defaultMessage=\"More\"\n                description=\"Action for showing more content\">{\n                (more) => <MoreButton\n                  title={more}\n                  open={this.state.moreInfoExpanded}\n                  onToggle={this.handleMoreInfo} />\n              }</FormattedMessage>\n              {this.state.moreInfoExpanded ?\n                <div className=\"panel-form-column\">\n                  {this.state.groupTopic ?\n                    <div className=\"panel-form-row\">\n                      <label>\n                        <FormattedMessage id=\"label_your_permissions\" defaultMessage=\"Your permissions:\"\n                          description=\"Label for current user permissions\" />\n                      </label>\n                      <tt className=\"clickable\"\n                        onClick={this.handleLaunchPermissionsEditor.bind(this, 'want')}>\n                        {this.state.access}\n                      </tt>\n                    </div>\n                    :\n                    <div>\n                      <div>\n                        <label className=\"small\">\n                          <FormattedMessage id=\"label_permissions\" defaultMessage=\"Permissions:\"\n                            description=\"Section title\" />\n                        </label>\n                      </div>\n                      <div className=\"quoted\">\n                        <div>\n                          <FormattedMessage id=\"label_you\" defaultMessage=\"You:\"\n                            description=\"Label for the current user\" /> &nbsp;<tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'want')}>\n                          {this.state.access}\n                        </tt></div>\n                        <div>{this.state.fullName ? this.state.fullName : formatMessage(messages.other_user)}:\n                          &nbsp;<tt className=\"clickable\" onClick={this.handleLaunchPermissionsEditor.bind(this, 'given')}>\n                          {this.state.modeGiven2}\n                          </tt>\n                        </div>\n                      </div>\n                    </div>\n                  }\n                  {this.state.sharer && (this.state.auth || this.state.anon) ?\n                  <div>\n                    <div>\n                      <label className=\"small\">\n                        <FormattedMessage id=\"label_default_access\" defaultMessage=\"Default access mode:\"\n                          description=\"Section title\" />\n                      </label>\n                    </div>\n                    <div className=\"quoted\">\n                      <div>Auth: {this.state.admin ?\n                        <tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>\n                          {this.state.auth}\n                        </tt>\n                        :\n                        <tt>{this.state.auth}</tt>\n                      }\n                      </div>\n                      <div>Anon: {this.state.admin ?\n                        <tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>\n                          {this.state.anon}\n                        </tt>\n                        :\n                        <tt>{this.state.anon}</tt>\n                      }\n                      </div>\n                    </div>\n                  </div>\n                  :\n                  null\n                }\n                </div>\n              :\n              null\n              }\n            </div>\n            <div className=\"hr\" />\n            {this.state.owner ?\n              <>\n                <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (user discovery)\"\n                  description=\"Section title for TagManager\">{\n                  (tags) => <TagManager\n                    title={tags}\n                    tags={this.state.tags}\n                    activated={false}\n                    tinode={this.props.tinode}\n                    onSubmit={this.handleTagsUpdated} />\n                }</FormattedMessage>\n                <div className=\"hr\" />\n              </>\n              :\n              null\n            }\n            <div className=\"panel-form-column\">\n              {!this.state.channel ?\n                <a href=\"#\" className=\"flat-button\" onClick={this.handleDeleteMessages}>\n                  <i className=\"material-icons\">delete_outline</i> &nbsp;{\n                    formatMessage(this.state.deleter ? messages.delete_messages : messages.clear_messages)\n                  }\n                </a>\n                :\n                null\n              }\n              <a href=\"#\" className=\"danger flat-button\" onClick={this.handleLeave}>\n                <i className=\"material-icons\">exit_to_app</i> &nbsp;{formatMessage(messages.leave_chat)}\n              </a>\n              {!this.state.groupTopic ?\n                <a href=\"#\" className=\"danger flat-button\" onClick={this.handleBlock}>\n                  <i className=\"material-icons\">block</i> &nbsp;{formatMessage(messages.block_contact)}\n                </a>\n                :\n                null\n              }\n              {!this.state.owner ?\n                <a href=\"#\" className=\"danger flat-button\" onClick={this.handleReport}>\n                  <i className=\"material-icons\">report</i> &nbsp;{formatMessage(messages.report_chat)}\n                </a>\n                :\n                null\n              }\n            </div>\n            {this.state.groupTopic && this.state.sharer ?\n              <>\n                <div className=\"hr\" />\n                <div className=\"panel-form-column\">\n                  <div className=\"panel-form-row\">\n                    <label className=\"small\">\n                      <FormattedMessage id=\"label_group_members\" defaultMessage=\"Group members:\"\n                        description=\"Section title or label\" />\n                    </label>\n                  </div>\n                  <div className=\"panel-form-row\">\n                    <a href=\"#\" className=\"flat-button\" onClick={this.handleShowAddMembers}>\n                      <i className=\"material-icons\">person_add</i> &nbsp;<FormattedMessage id=\"button_add_members\"\n                        defaultMessage=\"Add members\" description=\"Flat button [Add members] (to topic)\" />\n                    </a>\n                  </div>\n                  <FormattedMessage id=\"group_has_no_members\" defaultMessage=\"No members\"\n                    description=\"Shown in place of group members\">{\n                    (no_members) => <ContactList\n                      contacts={this.state.contactList}\n                      myUserId={this.props.myUserId}\n                      emptyListMessage={no_members}\n                      topicSelected={this.state.selectedContact}\n                      showOnline={false}\n                      showUnread={false}\n                      showMode={true}\n                      noScroll={true}\n                      onTopicSelected={this.handleMemberSelected}\n                      showContextMenu={this.state.admin ? this.handleContextMenu : false}\n                    />\n                  }</FormattedMessage>\n                </div>\n              </>\n              :\n              null\n            }\n          </div>\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(InfoView);\n","// File uload/download progress indicator with a cancel inside.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class FileProgress extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"uploader\">\n        <div><span style={{width: (this.props.progress * 100) + \"%\"}}></span></div>\n        {this.props.progress < 0.999 ?\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n            <i className=\"material-icons\">close</i> <FormattedMessage id=\"action_cancel\"\n              defaultMessage=\"cancel\" description=\"Call to action [cancel]\" />\n          </a>\n          :\n          <FormattedMessage id=\"upload_finishing\" defaultMessage=\"finishing...\"\n            description=\"Notification that upload is finishing\" />\n        }\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\nimport { bytesToHumanSize } from '../lib/strformat.js';\nimport { isUrlRelative, sanitizeUrl } from '../lib/utils.js';\n\nexport default class Attachment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      downloader: null,\n      progress: 0\n    };\n\n    this.downloadFile = this.downloadFile.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  downloadFile(url, filename, mimetype) {\n    if (!url) {\n      this.props.onError(\"Invalid download URL '\" + url + \"'\");\n      return;\n    }\n\n    const downloader = this.props.tinode.getLargeFileHelper();\n    this.setState({downloader: downloader});\n    downloader.download(url, filename, mimetype,\n      (loaded) => {\n        this.setState({progress: loaded / this.props.size});\n      },\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    ).then(() => {\n      this.setState({downloader: null, progress: 0});\n    }).catch((err) => {\n      if (err) {\n        this.props.onError(\"Error downloading file: \" + err.message, 'err');\n      }\n      this.setState({downloader: null, progress: 0});\n    });\n  }\n\n  handleCancel() {\n    if (this.props.uploading) {\n      this.props.onCancelUpload();\n    } else if (this.state.downloader) {\n      this.state.downloader.cancel();\n    }\n  }\n\n  render() {\n    let filename = this.props.filename || 'file_attachment';\n    if (filename.length > 36) {\n      filename = filename.substr(0, 16) + '...' + filename.substr(-16);\n    }\n    let size = this.props.size > 0 ?\n      <span className=\"small gray\">({bytesToHumanSize(this.props.size)})</span> :\n      null;\n\n    // Detect if the download URL is relative or absolute.\n    // If the URL is relative use LargeFileHelper to attach authentication\n    // credentials to the request.\n    let url, helperFunc;\n    if (!this.props.uploading && !this.state.downloader && isUrlRelative(this.props.downloadUrl)) {\n      // Relative URL. Use download helper.\n      url = '#';\n      helperFunc = (e) => {\n        e.preventDefault();\n        this.downloadFile(this.props.downloadUrl, this.props.filename, this.props.mimetype);\n      };\n    } else {\n      url = sanitizeUrl(this.props.downloadUrl);\n      helperFunc = null;\n    }\n    const downloadWidget = <><i className=\"material-icons\">file_download</i> <FormattedMessage id=\"save_attachment\"\n      defaultMessage=\"save\" description=\"Call to save an attachment\" /></>;\n    return (\n      <div className=\"attachment\">\n        <div><i className=\"material-icons big gray\">insert_drive_file</i></div>\n        <div className=\"flex-column\">\n          <div>{filename} {size}</div>\n          {this.props.uploading || this.state.downloader ?\n            <FileProgress progress={this.props.uploading ? this.props.progress : this.state.progress}\n              onCancel={this.handleCancel} />\n            :\n            <div>{url ?\n              <a href={url} download={this.props.filename} onClick={helperFunc}>{downloadWidget}</a>\n              :\n              <span className=\"light-gray\">{downloadWidget}</span>\n            }</div>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n","// Image view with progress bar and a cancel button.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\n\nexport default class UploadingImage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"inline-image\">\n        {React.createElement('img', this.props)}\n        <div className=\"rounded-container\">\n          <FileProgress progress={this.props.progress} onCancel={this.props.onCancelUpload} />\n        </div>\n      </div>\n    );\n  }\n};\n","// Single message, sent or received.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport Attachment from './attachment.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\nimport UploadingImage from './uploading-image.jsx'\nimport { sanitizeImageUrl, sanitizeUrl } from '../lib/utils.js';\n\nexport default class ChatMessage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      progress: 0\n    };\n\n    if (props.uploader) {\n      props.uploader.onProgress = this.handleProgress.bind(this);\n    }\n\n    this.handleImagePreview = this.handleImagePreview.bind(this);\n    this.handleFormButtonClick = this.handleFormButtonClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n  }\n\n  handleImagePreview(e) {\n    e.preventDefault();\n    this.props.onImagePreview({\n      url: e.target.src,\n      filename: e.target.title,\n      width: e.target.dataset.width,\n      height: e.target.dataset.height,\n      size: e.target.dataset.size,\n      type: e.target.dataset.mime\n    });\n  }\n\n  handleFormButtonClick(e) {\n    e.preventDefault();\n    const data = {\n      seq: this.props.seq\n    };\n    data.resp = {};\n    if (e.target.dataset.name) {\n      data.resp[e.target.dataset.name] = e.target.dataset.val ? e.target.dataset.val :\n        e.target.dataset.val === undefined ? 1 : '' + e.target.dataset.val;\n    }\n    if (e.target.dataset.act == 'url') {\n      data.ref = sanitizeUrl(e.target.dataset.ref) || 'about:blank';\n    }\n    const text = e.target.dataset.title || 'unknown';\n    this.props.onFormResponse(e.target.dataset.act, text, data);\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const menuItems = this.props.received == Tinode.MESSAGE_STATUS_FAILED ? ['menu_item_send_retry'] : [];\n    this.props.showContextMenu({ seq: this.props.seq, content: this.props.content,\n                                 y: e.pageY, x: e.pageX }, menuItems);\n  }\n\n  handleProgress(ratio) {\n    this.setState({progress: ratio});\n  }\n\n  handleCancelUpload() {\n    this.props.onCancelUpload(this.props.seq, this.props.uploader);\n  }\n\n  render() {\n    const sideClass = this.props.deleted ? 'center' :\n      (this.props.sequence + ' ' + (this.props.response ? 'left' : 'right'));\n    const bubbleClass = (this.props.sequence == 'single' || this.props.sequence == 'last') ? 'bubble tip' : 'bubble';\n    const avatar = this.props.deleted ? null : (this.props.userAvatar || true);\n    const fullDisplay = (this.props.userFrom && this.props.response && !this.props.deleted &&\n      (this.props.sequence == 'single' || this.props.sequence == 'last'));\n\n    let content = this.props.content;\n    const attachments = [];\n    if (this.props.mimeType == Drafty.getContentType() && Drafty.isValid(content)) {\n      Drafty.attachments(content, function(att, i) {\n        if (att.mime == 'application/json') {\n          // Don't show json objects as attachments.\n          // They are not meant for users.\n          return;\n        }\n        attachments.push(<Attachment\n          tinode={this.props.tinode}\n          downloadUrl={Drafty.getDownloadUrl(att)}\n          filename={att.name} uploading={Drafty.isProcessing(att)}\n          mimetype={att.mime} size={Drafty.getEntitySize(att)}\n          progress={this.state.progress}\n          onCancelUpload={this.handleCancelUpload}\n          onError={this.props.onError}\n          key={i} />);\n      }, this);\n      content = React.createElement(React.Fragment, null, Drafty.format(content, draftyFormatter, this));\n    } else if (this.props.deleted) {\n      // Message represents a range of deleted messages.\n      content = <><i className=\"material-icons gray\">block</i> <i className=\"gray\">\n        <FormattedMessage id=\"deleted_content\"\n          defaultMessage=\"content deleted\" description=\"Shown when messages are deleted\" />\n      </i></>\n    } else if (typeof content != 'string') {\n      content = <>\n          <i className=\"material-icons gray\">error_outline</i> <i className=\"gray\">\n            <FormattedMessage id=\"invalid_content\"\n              defaultMessage=\"invalid content\" description=\"Shown when message is unreadable\" /></i>\n        </>\n    }\n\n    return (\n      <li className={sideClass}>\n        {this.props.userFrom && this.props.response ?\n          <div className=\"avatar-box\">\n            {fullDisplay ?\n              <LetterTile\n                topic={this.props.userFrom}\n                title={this.props.userName}\n                avatar={avatar} /> :\n              null}\n          </div> :\n          null}\n        <div>\n          <div className={bubbleClass}>\n            <div className=\"content-meta\">\n              <div className=\"message-content\">\n                {content}\n                {attachments}\n              </div>\n              {this.props.timestamp ?\n                <ReceivedMarker\n                  timestamp={this.props.timestamp}\n                  received={this.props.received} />\n                : null}\n            </div>\n            {this.props.deleted || !this.props.showContextMenu ?\n              null :\n              <span className=\"menuTrigger\">\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">expand_more</i>\n                </a>\n              </span>\n            }\n          </div>\n          {fullDisplay ?\n            <div className=\"author\">\n              <FormattedMessage id=\"user_not_found\" defaultMessage=\"Not found\"\n                description=\"In place of a user's full name when the user is not found.\">{\n                    (notFound) => {return this.props.userName || <i>{notFound}</i>}\n              }</FormattedMessage>\n            </div>\n            : null\n          }\n        </div>\n      </li>\n    );\n  }\n};\n\n// Convert Drafty object to a tree of React elements.\nimport { BROKEN_IMAGE_SIZE, REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\n\n// Converts Drafty elements into React classes.\n// 'this' is set by the caller.\nfunction draftyFormatter(style, data, values, key) {\n  if (style == 'EX') {\n    // attachments are handled elsewhere.\n    return null;\n  }\n\n  let el = Drafty.tagName(style);\n  if (el) {\n    const attr = Drafty.attrValue(style, data) || {};\n    attr.key = key;\n    switch (style) {\n      case 'HL':\n        // Highlighted text. Assign class name.\n        attr.className = 'highlight';\n        break;\n      case 'IM':\n        // Additional processing for images\n        if (data) {\n          attr.className = 'inline-image';\n          const dim = fitImageSize(data.width, data.height,\n            Math.min(this.props.viewportWidth - REM_SIZE * 6.5, REM_SIZE * 34.5), REM_SIZE * 24, false) ||\n            {dstWidth: BROKEN_IMAGE_SIZE, dstHeight: BROKEN_IMAGE_SIZE};\n          attr.style = {\n            width: dim.dstWidth + 'px',\n            height: dim.dstHeight + 'px',\n            // Looks like a Chrome bug: broken image does not respect 'width' and 'height'.\n            minWidth: dim.dstWidth + 'px',\n            minHeight: dim.dstHeight + 'px'\n          };\n          if (!Drafty.isProcessing(data)) {\n            attr.src = this.props.tinode.authorizeURL(sanitizeImageUrl(attr.src));\n            attr.alt = data.name;\n            if (attr.src) {\n              attr.onClick = this.handleImagePreview;\n              attr.className += ' image-clickable';\n              attr.loading = 'lazy';\n            } else {\n              attr.src = 'img/broken_image.png';\n            }\n          } else {\n            // Use custom element instead of <img>.\n            el = UploadingImage;\n          }\n        }\n        break;\n      case 'BN':\n        // Button\n        attr.onClick = this.handleFormButtonClick;\n        let inner = React.Children.map(values, (child) => {\n          return typeof child == 'string' ? child : undefined;\n        });\n        if (!inner || inner.length == 0) {\n          inner = [attr.name]\n        }\n        // Get text which will be sent back when the button is clicked.\n        attr['data-title'] = inner.join('');\n        break;\n      case 'FM':\n        // Form\n        attr.className = 'bot-form';\n        break;\n      case 'RW':\n        // Form element formatting is dependent on element content.\n        break;\n      default:\n        if (el == '_UNKN') {\n          // Unknown element.\n          // TODO: make it prettier.\n          el = <><span className=\"material-icons\">extension</span></>;\n        }\n        break;\n    }\n    return React.createElement(el, attr, values);\n  } else {\n    return values;\n  }\n};\n","// Send message form.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport { KEYPRESS_DELAY } from '../config.js';\nimport { filePasted } from '../lib/blob-helpers.js';\n\nconst messages = defineMessages({\n  messaging_disabled: {\n    id: 'messaging_disabled_prompt',\n    defaultMessage: 'Messaging disabled',\n    description: 'Prompt in SendMessage in read-only topic'\n  },\n  type_new_message: {\n    id: 'new_message_prompt',\n    defaultMessage: 'New message',\n    description: 'Prompt in send message field'\n  },\n  add_image_caption: {\n    id: 'image_caption_prompt',\n    defaultMessage: 'Image caption',\n    description: 'Prompt in SendMessage for attached image'\n  },\n  file_attachment_too_large: {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  },\n  cannot_initiate_upload: {\n    id: 'cannot_initiate_file_upload',\n    defaultMessage: 'Cannot initiate file upload.',\n    description: 'Generic error messagewhen attachment fails'\n  },\n});\n\nclass SendMessage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      message: '',\n      // Make initial keypress time as if it happened 5001 milliseconds in the past.\n      keypressTimestamp: new Date().getTime() - KEYPRESS_DELAY - 1\n    };\n\n    this.handlePasteEvent = this.handlePasteEvent.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleSend = this.handleSend.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleMessageTyping = this.handleMessageTyping.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.addEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.removeEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.messageEditArea) {\n      this.messageEditArea.focus();\n    }\n  }\n\n  handlePasteEvent(e) {\n    if (this.props.disabled) {\n      return;\n    }\n    // FIXME: handle large files too.\n    if (filePasted(e,\n      (bits, mime, width, height, fname) => {\n        this.props.onAttachImage(mime, bits, width, height, fname);\n      },\n      (mime, bits, fname) => {\n        this.props.onAttachFile(mime, bits, fname);\n      },\n      this.props.onError)) {\n\n      // If a file was pasted, don't paste base64 data into input field.\n      e.preventDefault();\n    }\n  }\n\n  handleAttachImage(e) {\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachImage(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleAttachFile(e) {\n    const {formatMessage} = this.props.intl;\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachFile(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleSend(e) {\n    e.preventDefault();\n    const message = this.state.message.trim();\n    if (message || this.props.acceptBlank || this.props.noInput) {\n      this.props.onSendMessage(message);\n      this.setState({message: ''});\n    }\n  }\n\n  /* Send on Enter key */\n  handleKeyPress(e) {\n    // Remove this if you don't want Enter to trigger send\n    if (e.key === 'Enter') {\n      // Have Shift-Enter insert a line break instead\n      if (!e.shiftKey) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.handleSend(e);\n      }\n    }\n  }\n\n  handleMessageTyping(e) {\n    const newState = {message: e.target.value};\n    if (this.props.onKeyPress) {\n      const now = new Date().getTime();\n      if (now - this.state.keypressTimestamp > KEYPRESS_DELAY) {\n        this.props.onKeyPress();\n        newState.keypressTimestamp = now;\n      }\n    }\n    this.setState(newState);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const prompt = this.props.disabled ?\n      formatMessage(messages.messaging_disabled) :\n      (this.props.messagePrompt ?\n        formatMessage(messages[this.props.messagePrompt]) :\n        formatMessage(messages.type_new_message));\n    return (\n      <div id=\"send-message-panel\">\n        {!this.props.disabled ?\n          <>\n            {this.props.onAttachFile ?\n              <>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachImage.click();}} title=\"Add image\">\n                  <i className=\"material-icons secondary\">photo</i>\n                </a>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachFile.click();}} title=\"Attach file\">\n                  <i className=\"material-icons secondary\">attach_file</i>\n                </a>\n              </>\n              :\n              null}\n            {this.props.noInput ?\n              <div className=\"hr thin\" /> :\n              <textarea id=\"sendMessage\" placeholder={prompt}\n                value={this.state.message} onChange={this.handleMessageTyping}\n                onKeyPress={this.handleKeyPress}\n                ref={(ref) => {this.messageEditArea = ref;}}\n                autoFocus />}\n            <a href=\"#\" onClick={this.handleSend} title=\"Send\">\n              <i className=\"material-icons\">send</i>\n            </a>\n            <input type=\"file\" ref={(ref) => {this.attachFile = ref;}}\n              onChange={this.handleAttachFile} style={{display: 'none'}} />\n            <input type=\"file\" ref={(ref) => {this.attachImage = ref;}} accept=\"image/*\"\n              onChange={this.handleAttachImage} style={{display: 'none'}} />\n          </>\n          :\n          <div id=\"writing-disabled\">{prompt}</div>\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SendMessage);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { bytesToHumanSize } from '../lib/strformat.js';\n\n// Get material icon name from mime type.\nfunction iconFromMime(mime) {\n  // If more icons become available in material icons, add them to this mime-to-icon mapping.\n  const mimeToIcon = {default: 'insert_drive_file', image: 'image', text: 'description', video: 'theaters'};\n\n  return mimeToIcon[mime] || mimeToIcon[(mime || '').split('/')[0]] || mimeToIcon['default'];\n}\n\nexport default class DocPreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleSendDoc = this.handleSendDoc.bind(this);\n  }\n\n  handleSendDoc(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(this.props.content.file);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          <span>{this.props.content.filename}</span>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\">\n          <div className=\"flex-column narrow\">\n            <i className=\"material-icons gray\">{iconFromMime(this.props.content.type)}</i>\n            <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n              description=\"Label for file content type (mime)\" /></b> {this.props.content.type || 'application/octet-stream'}</div>\n            <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n              description=\"Label for file size\" /></b> {bytesToHumanSize(this.props.content.size)}</div>\n          </div>\n        </div>\n        <SendMessage\n          noInput={true}\n          onSendMessage={this.handleSendDoc}\n          onError={this.props.onError} />\n      </div>\n    );\n  }\n};\n","// GroupSubs: a list of group subscribers currently online.\n// Show in the topic title bar\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { MAX_ONLINE_IN_TOPIC } from '../config.js'\n\nimport LetterTile from './letter-tile.jsx';\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class GroupSubs extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const usersOnline = [];\n    const totalCount = (this.props.subscribers || []).length;\n    const countToShow = Math.min(MAX_ONLINE_IN_TOPIC, totalCount);\n\n    (this.props.subscribers || []).some((sub) => {\n      usersOnline.push(\n        <div className=\"avatar-box\" key={sub.user}>\n          <LetterTile\n            topic={sub.user}\n            avatar={makeImageUrl(sub.public ? sub.public.photo : null) || true}\n            title={sub.public ? sub.public.fn : null} />\n        </div>\n      );\n      return usersOnline.length == countToShow;\n    });\n\n    return (\n      <div id=\"topic-users\">{usersOnline} {totalCount > countToShow ?\n        <span>\n          <FormattedMessage id=\"more_online_members\" defaultMessage=\"+{overflow} more\"\n              description=\"Shown in MessagesView title bar when the number of online subscribers exceeds MAX_ONLINE_IN_TOPIC\"\n              values={{ overflow: (totalCount - countToShow) }} />\n        </span> : null}\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\nimport { bytesToHumanSize } from '../lib/strformat.js';\n\nexport default class ImagePreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      width: 0,\n      height: 0\n    };\n\n    this.handleSendImage = this.handleSendImage.bind(this);\n  }\n\n  assignWidth(node) {\n    if (node && !this.state.width) {\n      const bounds = node.getBoundingClientRect();\n      this.setState({\n        width: bounds.width | 0,\n        height: bounds.height | 0\n      });\n    }\n  }\n\n  handleSendImage(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(caption, this.props.content.blob);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n\n    const dim = fitImageSize(this.props.content.width, this.props.content.height,\n      this.state.width, this.state.height, false);\n    const size = dim ? { width: dim.dstWidth + 'px', height: dim.dstHeight + 'px' } :\n      ((this.props.content.width > this.props.content.height) ? {width: '100%'} : {height: '100%'});\n    size.maxWidth = '100%';\n    size.maxHeight = '100%';\n\n    let filename = this.props.content.filename;\n    // Average font aspect ratio is ~0.5; File name takes 1/3 of the viewport width.\n    const maxlength = Math.max(((this.state.width / REM_SIZE / 1.5) | 0) - 2, 12);\n    if (filename.length > maxlength) {\n      filename = filename.slice(0, maxlength/2 - 1) + '…' + filename.slice(1 - maxlength/2);\n    }\n    const width = this.props.content.width || '-';\n    const height = this.props.content.height || '-';\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          {!this.props.onSendMessage ?\n            <a href={this.props.content.url} download={this.props.content.filename}>\n              <i className=\"material-icons\">file_download</i> <FormattedMessage\n                id=\"download_action\" defaultMessage=\"download\" description=\"Call to action [download]\" />\n            </a>\n            :\n            <span>{this.props.content.filename}</span>\n          }\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\" ref={(node) => this.assignWidth(node)}>\n          <img src={this.props.content.url} style={size} className=\"image-preview\" alt={this.props.content.filename} />\n        </div>\n        {this.props.onSendMessage ?\n          <SendMessage\n            messagePrompt=\"add_image_caption\"\n            acceptBlank={true}\n            onSendMessage={this.handleSendImage}\n            onError={this.props.onError} />\n          :\n          <div id=\"image-preview-footer\">\n            <div>\n              <div><b><FormattedMessage id=\"label_file_name\" defaultMessage=\"File name:\"\n                description=\"Label for a file name\" /></b></div>\n              <div><span title={this.props.content.filename}>{filename ? filename : '-'}</span></div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n                description=\"Label for file content type (mime)\" /></b></div>\n              <div>{this.props.content.type}</div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n                description=\"Label for file size\" /></b></div>\n              <div>{width} &times; {height} px; {bytesToHumanSize(this.props.content.size)}</div>\n            </div>\n          </div>}\n      </div>\n    );\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Invitation extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleButtonAction = this.handleButtonAction.bind(this);\n  }\n\n  handleButtonAction(evt, data) {\n    evt.preventDefault();\n    this.props.onAction(data);\n  }\n\n  render() {\n    return (\n      <div className=\"accept-invite-panel\">\n        <div className=\"title\">\n          <FormattedMessage id=\"chat_invitation\"\n            defaultMessage=\"You are invited to start a new chat. What would you like to do?\"\n            description=\"New chat invitation message: [Accept] [Ignore] [Block].\" />\n        </div>\n        <div className=\"footer\">\n          <button className=\"primary\" onClick={event => { this.handleButtonAction(event, \"accept\"); }}>\n            <FormattedMessage id=\"chat_invitation_accept\"\n              defaultMessage=\"Accept\" description=\"Action [Accept] for chat invitation.\" />\n          </button>\n          <button className=\"secondary\" onClick={event => { this.handleButtonAction(event, \"delete\"); }}>\n            <FormattedMessage id=\"chat_invitation_ignore\"\n              defaultMessage=\"Ignore\" description=\"Action [Ignore] for chat invitation.\" />\n          </button>\n          <button className=\"secondary\" onClick={event => { this.handleButtonAction(event, \"block\"); }}>\n            <FormattedMessage id=\"chat_invitation_block\"\n              defaultMessage=\"Block\" description=\"Action [Block] for chat invitation.\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n","/* This is just a static page to display when no conversation is selected. */\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME } from '../config.js';\n\nexport default class LogoView extends React.PureComponent {\n  render() {\n    const version = APP_NAME + ' (' + Tinode.getLibrary() + ')';\n    return (\n      <div id=\"dummy-view\">\n        <div>\n          <a href=\"https://github.com/tinode/chat/\">\n            <img id=\"logo\" alt=\"logo\" src=\"img/logo.svg\" />\n            <h2>Tinode Web</h2>\n          </a>\n          <p><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\"\n            description=\"Label for a client version\" /> {version}</p>\n          <p><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\"\n            description=\"Label for a server version\" /> {this.props.serverVersion} ({this.props.serverAddress})</p>\n        </div>\n      </div>\n    );\n  }\n};\n","// Utility class for hash navigation.\n\n// Parse hash as in http://www.example.com/path#hash as if it were\n// path and arguments.\nexport default class HashNavigation {\n  static parseUrlHash(hash) {\n    // Split path from args, path -> parts[0], args->path[1]\n    const parts = hash.split('?', 2);\n    const params = {};\n    let path = [];\n    if (parts[0]) {\n      path = parts[0].substr(1).split('/');\n    }\n    if (parts[1]) {\n      parts[1].split('&').forEach(function(part) {\n        let item = part.split('=');\n        if (item[0]) {\n          params[decodeURIComponent(item[0])] = decodeURIComponent(item[1]);\n        }\n      });\n    }\n    return {path: path, params: params};\n  }\n\n  static navigateTo(url) {\n    window.location.hash = url;\n  }\n\n  static composeUrlHash(path, params) {\n    let url = path.join('/');\n    const args = [];\n    for (const key in params) {\n      if (params.hasOwnProperty(key)) {\n        args.push(key + '=' + params[key]);\n      }\n    }\n    if (args.length > 0) {\n      url += '?' + args.join('&');\n    }\n    return url;\n  }\n\n  static addUrlParam(hash, key, value) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.params[key] = value;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static removeUrlParam(hash, key) {\n    const parsed = this.parseUrlHash(hash);\n    delete parsed.params[key];\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlSidePanel(hash, sidepanel) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[0] = sidepanel;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlTopic(hash, topic) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[1] = topic;\n    // Close InfoView on topic change.\n    delete parsed.params.info;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n}\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\nconst Drafty = Tinode.Drafty;\n\nimport ChatMessage from '../widgets/chat-message.jsx';\nimport ContactBadges from '../widgets/contact-badges.jsx';\nimport DocPreview from '../widgets/doc-preview.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupSubs from '../widgets/group-subs.jsx';\nimport ImagePreview from '../widgets/image-preview.jsx';\nimport Invitation from '../widgets/invitation.jsx';\nimport LetterTile from '../widgets/letter-tile.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport LogoView from './logo-view.jsx';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { DEFAULT_P2P_ACCESS_MODE, IMAGE_PREVIEW_DIM, KEYPRESS_DELAY, MESSAGES_PAGE,\n  MAX_EXTERN_ATTACHMENT_SIZE, MAX_IMAGE_DIM, MAX_INBAND_ATTACHMENT_SIZE, READ_DELAY } from '../config.js';\nimport { SUPPORTED_IMAGE_FORMATS, blobToBase64, filePasted, fileToBase64,\n  imageScaled, makeImageUrl } from '../lib/blob-helpers.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { bytesToHumanSize, shortDateFormat } from '../lib/strformat.js';\n\n// Run timer with this frequency (ms) for checking notification queue.\nconst NOTIFICATION_EXEC_INTERVAL = 300;\n\nconst messages = defineMessages({\n  online_now: {\n    id: 'online_now',\n    defaultMessage: 'online now',\n    description: 'Indicator that the user or topic is currently online',\n  },\n  last_seen: {\n    id: 'last_seen_timestamp',\n    defaultMessage: 'Last seen',\n    description: 'Label for the timestamp of when the user or topic was last online'\n  },\n  not_found: {\n    id: 'title_not_found',\n    defaultMessage: 'Not found',\n    description: 'Title shown when topic is not found'\n  },\n  channel: {\n    id: 'channel',\n    defaultMessage: 'channel',\n    description: 'Subtitle shown for channels in MessagesView instead of last seen'\n  },\n  file_attachment_too_large: {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  }\n});\n\n// Checks if the access permissions are granted but not yet accepted.\nfunction isUnconfirmed(acs) {\n  if (acs) {\n    const ex = acs.getExcessive() || '';\n    return acs.isJoiner('given') && (ex.includes('R') || ex.includes('W'));\n  }\n  return false;\n}\n\nfunction isPeerRestricted(acs) {\n  if (acs) {\n    const ms = acs.getMissing() || '';\n    return acs.isJoiner('want') && (ms.includes('R') || ms.includes('W'));\n  }\n  return false;\n}\n\nclass MessagesView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = MessagesView.getDerivedStateFromProps(props, {});\n\n    this.leave = this.leave.bind(this);\n    this.sendImageAttachment = this.sendImageAttachment.bind(this);\n    this.sendFileAttachment = this.sendFileAttachment.bind(this);\n    this.sendKeyPress = this.sendKeyPress.bind(this);\n    this.handleScrollReference = this.handleScrollReference.bind(this);\n    this.handleScrollEvent = this.handleScrollEvent.bind(this);\n    this.handleDescChange = this.handleDescChange.bind(this);\n    this.handleSubsUpdated = this.handleSubsUpdated.bind(this);\n    this.handleNewMessage = this.handleNewMessage.bind(this);\n    this.handleAllMessagesReceived = this.handleAllMessagesReceived.bind(this);\n    this.handleInfoReceipt = this.handleInfoReceipt.bind(this);\n    this.handleImagePostview = this.handleImagePostview.bind(this);\n    this.handleClosePreview = this.handleClosePreview.bind(this);\n    this.handleFormResponse = this.handleFormResponse.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleShowContextMenuMessage = this.handleShowContextMenuMessage.bind(this);\n    this.handleNewChatAcceptance = this.handleNewChatAcceptance.bind(this);\n    this.handleEnablePeer = this.handleEnablePeer.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n    this.postReadNotification = this.postReadNotification.bind(this);\n    this.clearNotificationQueue = this.clearNotificationQueue.bind(this);\n\n    this.readNotificationQueue = [];\n    this.readNotificationTimer = null;\n  }\n\n  componentDidMount() {\n    // this.propsChange(this.props, this.state);\n    if (this.messagesScroller) {\n      this.messagesScroller.addEventListener('scroll', this.handleScrollEvent);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messagesScroller) {\n      this.messagesScroller.removeEventListener('scroll', this.handleScrollEvent);\n    }\n\n    // Flush all notifications.\n    this.clearNotificationQueue();\n  }\n\n  // Scroll last message into view on component update e.g. on message received\n  // or vertical shrinking.\n  componentDidUpdate(prevProps, prevState) {\n    if (this.messagesScroller) {\n      if (prevState.topic != this.state.topic || prevState.messages.length != this.state.messages.length) {\n        // New message\n        this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n      } else if (prevProps.viewportHeight > this.props.viewportHeight) {\n        // Componet changed height.\n        this.messagesScroller.scrollTop += prevProps.viewportHeight - this.props.viewportHeight;\n      }\n    }\n\n    const topic = this.props.tinode ? this.props.tinode.getTopic(this.state.topic) : undefined;\n    if (this.state.topic != prevState.topic) {\n      if (prevState.topic && !Tinode.isNewGroupTopicName(prevState.topic)) {\n        this.leave(prevState.topic);\n      }\n\n      if (topic) {\n        topic.onData = this.handleNewMessage;\n        topic.onAllMessagesReceived = this.handleAllMessagesReceived;\n        topic.onInfo = this.handleInfoReceipt;\n        topic.onMetaDesc = this.handleDescChange;\n        topic.onSubsUpdated = this.handleSubsUpdated;\n        topic.onPres = this.handleSubsUpdated;\n      }\n    }\n\n    if (!this.props.applicationVisible) {\n      // If application is not visible, flush all unsent 'read' notifications.\n      this.clearNotificationQueue();\n    } else {\n      // Otherwise assume there are unread messages.\n      this.postReadNotification(0);\n    }\n\n    if (topic && !topic.isSubscribed() && this.props.ready &&\n        ((this.state.topic != prevState.topic) || !prevProps.ready)) {\n      // Is this a new topic?\n      const newTopic = (this.props.newTopicParams && this.props.newTopicParams._topicName == this.props.topic);\n\n      // Don't request the tags. They are useless unless the user\n      // is the owner and is editing the topic.\n      let getQuery = topic.startMetaQuery().withLaterDesc().withLaterSub();\n      if (this.state.isReader || newTopic) {\n        // Reading is either permitted or we don't know because it's a new topic. Ask for messages.\n        getQuery = getQuery.withLaterData(MESSAGES_PAGE);\n        if (this.state.isReader) {\n          getQuery = getQuery.withLaterDel();\n        }\n        // And show \"loading\" spinner.\n        this.setState({ fetchingMessages: true });\n      }\n      const setQuery = newTopic ? this.props.newTopicParams : undefined;\n      topic.subscribe(getQuery.build(), setQuery)\n        .then((ctrl) => {\n          if (ctrl.code == 303) {\n            // Redirect to another topic requested.\n            HashNavigation.navigateTo(HashNavigation.setUrlTopic('', ctrl.params.topic));\n            return;\n          }\n          if (this.state.topic != ctrl.topic) {\n            this.setState({topic: ctrl.topic});\n          }\n          this.props.onNewTopicCreated(this.props.topic, ctrl.topic);\n          // If there are unsent messages, try sending them now.\n          topic.queuedMessages((pub) => {\n            if (!pub._sending && topic.isSubscribed()) {\n              topic.publishMessage(pub);\n            }\n          });\n        })\n        .catch((err) => {\n          console.log(\"Failed subscription to\", this.state.topic);\n          this.props.onError(err.message, 'err');\n          const blankState = MessagesView.getDerivedStateFromProps({}, {});\n          blankState.title = this.props.intl.formatMessage(messages.not_found);\n          this.setState(blankState);\n        });\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let nextState = {};\n    if (!nextProps.topic) {\n      // Default state: no topic.\n      nextState = {\n        messages: [],\n        onlineSubs: [],\n        topic: null,\n        title: '',\n        avatar: null,\n        isVerified: false,\n        isStaff: false,\n        isDangerous: false,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false,\n        peerMessagingDisabled: false,\n        channel: false\n      };\n    } else if (nextProps.topic != prevState.topic) {\n      const topic = nextProps.tinode.getTopic(nextProps.topic);\n      nextState = {\n        topic: nextProps.topic,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false\n      };\n\n      if (topic) {\n        // Topic exists.\n        const msgs = [];\n        const subs = [];\n\n        if (nextProps.connected) {\n          topic.subscribers((sub) => {\n            if (sub.online && sub.user != nextProps.myUserId) {\n              subs.push(sub);\n            }\n          });\n        }\n\n        topic.messages(function(msg) {\n          if (!msg.deleted) {\n            msgs.push(msg);\n          }\n        });\n\n        Object.assign(nextState, {\n          messages: msgs,\n          onlineSubs: subs\n        });\n\n        if (topic.public) {\n          Object.assign(nextState, {\n            title: topic.public.fn,\n            avatar: makeImageUrl(topic.public.photo)\n          });\n        } else {\n          Object.assign(nextState, {\n            title: '',\n            avatar: null\n          });\n        }\n\n        const peer = topic.p2pPeerDesc();\n        if (peer) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: isPeerRestricted(peer.acs)\n          });\n        } else if (prevState.peerMessagingDisabled) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: false\n          });\n        }\n        Object.assign(nextState, {\n          channel: topic.isChannelType()\n        });\n      } else {\n        // Invalid topic.\n        Object.assign(nextState, {\n          messages: [],\n          onlineSubs: [],\n          title: '',\n          avatar: null,\n          peerMessagingDisabled: false,\n          channel: false\n        });\n      }\n    }\n\n    if (nextProps.acs) {\n      if (nextProps.acs.isWriter() != prevState.isWriter) {\n        nextState.isWriter = !prevState.isWriter;\n      }\n      if (nextProps.acs.isReader() != prevState.isReader) {\n        nextState.isReader = !prevState.isReader;\n      }\n      if (!nextProps.acs.isReader('given') != prevState.readingBlocked) {\n        nextState.readingBlocked = !prevState.readingBlocked;\n      }\n      if (nextProps.acs.isSharer() != prevState.isSharer) {\n        nextState.isSharer = !prevState.isSharer;\n      }\n    } else {\n      if (prevState.isWriter) {\n        nextState.isWriter = false;\n      }\n      if (prevState.isReader) {\n        nextState.isReader = false;\n      }\n      if (!prevState.readingBlocked) {\n        prevState.readingBlocked = true;\n      }\n      if (prevState.isSharer) {\n        nextState.isSharer = false;\n      }\n    }\n\n    if (isUnconfirmed(nextProps.acs) == !prevState.unconformed) {\n      nextState.unconfirmed = !prevState.unconformed;\n    }\n\n    // Clear subscribers online when there is no connection.\n    if (!nextProps.connected && prevState.onlineSubs && prevState.onlineSubs.length > 0) {\n      nextState.onlineSubs = [];\n    }\n\n    return nextState;\n  }\n\n  leave(oldTopicName) {\n    if (!oldTopicName || !this.props.tinode.isTopicCached(oldTopicName)) {\n      return;\n    }\n    const oldTopic = this.props.tinode.getTopic(oldTopicName);\n    if (oldTopic && oldTopic.isSubscribed()) {\n      oldTopic.leave(false)\n        .catch(() => { /* do nothing here */ })\n        .finally(() => {\n          // We don't care if the request succeeded or failed.\n          // The topic is dead regardless.\n          this.setState({fetchingMessages: false});\n          oldTopic.onData = undefined;\n          oldTopic.onAllMessagesReceived = undefined;\n          oldTopic.onInfo = undefined;\n          oldTopic.onMetaDesc = undefined;\n          oldTopic.onSubsUpdated = undefined;\n          oldTopic.onPres = undefined;\n        });\n    }\n  }\n\n  handleScrollReference(node) {\n    if (node) {\n      node.addEventListener('scroll', this.handleScrollEvent);\n      this.messagesScroller = node;\n      this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n    }\n  }\n\n  // Get older messages\n  handleScrollEvent(event) {\n    this.setState({scrollPosition: event.target.scrollHeight - event.target.scrollTop});\n    if (event.target.scrollTop <= 0) {\n      this.setState((prevState, props) => {\n        const newState = {};\n        if (!prevState.fetchingMessages) {\n          const topic = this.props.tinode.getTopic(this.state.topic);\n          if (topic && topic.isSubscribed() && topic.msgHasMoreMessages()) {\n            newState.fetchingMessages = true;\n            topic.getMessagesPage(MESSAGES_PAGE).catch((err) => {\n              this.setState({fetchingMessages: false});\n              this.props.onError(err.message, 'err');\n            });\n          }\n        }\n        return newState;\n      });\n    }\n  }\n\n  handleDescChange(desc) {\n    if (desc.public) {\n      this.setState({\n        title: desc.public.fn,\n        avatar: makeImageUrl(desc.public.photo)\n      });\n    } else {\n      this.setState({\n        title: '',\n        avatar: null\n      });\n    }\n\n    if (desc.acs) {\n      this.setState({\n        isWriter: desc.acs.isWriter(),\n        isReader: desc.acs.isReader(),\n        readingBlocked: !desc.acs.isReader('given'),\n        unconfirmed: isUnconfirmed(desc.acs),\n      });\n    }\n  }\n\n  postReadNotification(seq) {\n    // Ignore notifications if the app is invisible.\n    if (!this.props.applicationVisible) {\n      return;\n    }\n\n    // Set up the timer if it's not running already.\n    if (!this.readNotificationTimer) {\n      this.readNotificationTimer = setInterval(() => {\n        if (this.readNotificationQueue.length == 0) {\n          // Shut down the timer if the queue is empty.\n          clearInterval(this.readNotificationTimer);\n          this.readNotificationTimer = null;\n          return;\n        }\n\n        let seq = -1;\n        while (this.readNotificationQueue.length > 0) {\n          const n = this.readNotificationQueue[0];\n          if (n.topicName != this.state.topic) {\n            // Topic has changed. Drop the notification.\n            this.readNotificationQueue.shift();\n            continue;\n          }\n\n          const now = new Date();\n          if (n.sendAt <= now) {\n            // Remove expired notification from queue.\n            this.readNotificationQueue.shift();\n            seq = Math.max(seq, n.seq);\n          } else {\n            break;\n          }\n        }\n\n        // Send only one notification for the whole batch of messages.\n        if (seq >= 0) {\n          const topic = this.props.tinode.getTopic(this.state.topic);\n          if (topic) {\n            topic.noteRead(seq);\n          }\n        }\n      }, NOTIFICATION_EXEC_INTERVAL);\n    }\n\n    const now = new Date();\n    this.readNotificationQueue.push({\n      topicName: this.state.topic,\n      seq: seq,\n      sendAt: now.setMilliseconds(now.getMilliseconds() + READ_DELAY)\n    });\n  }\n\n  // Clear notification queue and timer.\n  clearNotificationQueue() {\n    this.readNotificationQueue = [];\n    if (this.readNotificationTimer) {\n      clearInterval(this.readNotificationTimer);\n      this.readNotificationTimer = null;\n    }\n  }\n\n  handleSubsUpdated() {\n    if (this.state.topic) {\n      const subs = [];\n      const topic = this.props.tinode.getTopic(this.state.topic);\n      topic.subscribers((sub) => {\n        if (sub.online && sub.user != this.props.myUserId) {\n          subs.push(sub);\n        }\n      });\n      const newState = {onlineSubs: subs};\n      const peer = topic.p2pPeerDesc();\n      if (peer) {\n        Object.assign(newState, {\n          peerMessagingDisabled: isPeerRestricted(peer.acs)\n        });\n      } else if (this.state.peerMessagingDisabled) {\n        Object.assign(newState, {\n          peerMessagingDisabled: false\n        });\n      }\n      this.setState(newState);\n    }\n  }\n\n  handleNewMessage(msg) {\n    // Regenerate messages list\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    const newState = {messages: []};\n    topic.messages((m) => {\n      if (!m.deleted) {\n        newState.messages.push(m);\n      }\n    });\n\n    // msg could be null if one or more messages were deleted.\n    if (msg && !msg.deleted) {\n      // If the message is added to the end of the message list,\n      // scroll to the bottom.\n      if (topic.isNewMessage(msg.seq)) {\n        newState.scrollPosition = 0;\n      }\n\n      // Aknowledge messages except own messages. They are\n      // automatically assumed to be read and recived.\n      const status = topic.msgStatus(msg, true);\n      if (status >= Tinode.MESSAGE_STATUS_SENT && msg.from != this.props.myUserId) {\n        this.postReadNotification(msg.seq);\n      }\n      this.props.onData(msg);\n    }\n    this.setState(newState);\n  }\n\n  handleAllMessagesReceived(count) {\n    this.setState({fetchingMessages: false});\n    if (count > 0) {\n      // 0 means \"latest\".\n      this.postReadNotification(0);\n    }\n  }\n\n  handleInfoReceipt(info) {\n    switch (info.what) {\n      case 'kp': {\n        clearTimeout(this.keyPressTimer);\n        var instance = this;\n        this.keyPressTimer = setTimeout(function() {\n          instance.setState({typingIndicator: false});\n        }, KEYPRESS_DELAY + 1000);\n        if (!this.state.typingIndicator) {\n          this.setState({typingIndicator: true});\n        }\n        break;\n      }\n      case 'read':\n      case 'recv':\n        // Redraw due to changed recv/read status.\n        this.forceUpdate();\n        break;\n      default:\n        console.log(\"Other change in topic: \", info.what);\n    }\n  }\n\n  handleImagePostview(content) {\n    this.setState({ imagePostview: content });\n  }\n\n  handleClosePreview() {\n    if (this.state.imagePreview && this.state.imagePreview.url) {\n      URL.revokeObjectURL(this.state.imagePreview.url);\n    }\n    this.setState({ imagePostview: null, imagePreview: null, docPreview: null });\n  }\n\n  handleFormResponse(action, text, data) {\n    if (action == 'pub') {\n      this.props.sendMessage(Drafty.attachJSON(Drafty.parse(text), data));\n    } else if (action == 'url') {\n      const url = new URL(data.ref);\n      const params = url.searchParams;\n      for (let key in data.resp) {\n        if (data.resp.hasOwnProperty(key)) {\n          params.set(key, data.resp[key]);\n        }\n      }\n      ['name', 'seq'].map((key) => {\n        if (data[key]) {\n          params.set(key, data[key]);\n        }\n      });\n      params.set('uid', this.props.myUserId);\n      params.set('topic', this.state.topic);\n      url.search = params;\n      window.open(url, '_blank');\n    } else {\n      console.log(\"Unknown action in form\", action);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.state.topic, y: e.pageY, x: e.pageX });\n  }\n\n  handleShowContextMenuMessage(params, messageSpecificMenuItems) {\n    params.topicName = this.state.topic;\n    const menuItems = messageSpecificMenuItems || [];\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (topic) {\n      if (!topic.isChannelType()) {\n        menuItems.push('message_delete');\n      }\n      const acs = topic.getAccessMode();\n      if (acs && acs.isDeleter()) {\n        menuItems.push('message_delete_hard');\n      }\n    }\n    this.props.showContextMenu(params, menuItems);\n  }\n\n  handleNewChatAcceptance(action) {\n    this.props.onNewChat(this.state.topic, action);\n  }\n\n  handleEnablePeer(e) {\n    e.preventDefault();\n    this.props.onChangePermissions(this.state.topic, DEFAULT_P2P_ACCESS_MODE, this.state.topic);\n  }\n\n  sendKeyPress() {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (topic.isSubscribed()) {\n      topic.noteKeyPress();\n    }\n  }\n\n  // Send attachment as Drafty message:\n  // - if file is too large, upload it and send a s link.\n  // - if file is small enough, just send it in-band.\n  sendFileAttachment(file) {\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (file.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      const uploadCompletionPromise = uploader.upload(file);\n      const msg = Drafty.attachFile(null, {\n        mime: file.type,\n        filename: file.name,\n        size: file.size,\n        urlPromise: uploadCompletionPromise\n      });\n      // Pass data and the uploader to the TinodeWeb.\n      this.props.sendMessage(msg, uploadCompletionPromise, uploader);\n    } else {\n      // Small enough to send inband.\n      fileToBase64(file,\n        (mime, bits, fname) => {\n          this.props.sendMessage(Drafty.attachFile(null, {mime: mime, data: bits, filename: fname}));\n        },\n        this.props.onError\n      );\n    }\n  }\n\n  // handleAttachFile method is called when [Attach file] button is clicked.\n  handleAttachFile(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    if (file.size > maxExternAttachmentSize) {\n      // Too large.\n      this.props.onError(this.props.intl.formatMessage(messages.file_attachment_too_large,\n        {size: bytesToHumanSize(file.size), limit: bytesToHumanSize(maxExternAttachmentSize)}), 'err');\n    } else {\n      this.setState({ docPreview: {\n        file: file,\n        filename: file.name,\n        size: file.size,\n        type: file.type\n      }});\n    }\n  }\n\n  // sendImageAttachment sends the image bits inband as Drafty message.\n  sendImageAttachment(caption, blob) {\n    const mime = this.state.imagePreview.type;\n    const width = this.state.imagePreview.width;\n    const height = this.state.imagePreview.height;\n    const fname = this.state.imagePreview.filename;\n\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (blob.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      if (!uploader) {\n        this.props.onError(this.props.intl.formatMessage(messages.cannot_initiate_upload));\n        return;\n      }\n      const uploadCompletionPromise = uploader.upload(blob);\n\n      // Make small preview to show while uploading.\n      imageScaled(blob, IMAGE_PREVIEW_DIM, IMAGE_PREVIEW_DIM, -1, false,\n        (tinyMine, tinyBlob) => {\n          // Convert tiny image into base64 for serialization and previewing.\n          blobToBase64(tinyBlob, (blobMime, tinyBits64) => {\n            let msg = Drafty.insertImage(null, 0, {\n              mime: mime,\n              _tempPreview: tinyBits64, // This preview will not be serialized.\n              width: width,\n              height: height,\n              filename: fname,\n              size: blob.size,\n              urlPromise: uploadCompletionPromise\n            });\n            if (caption) {\n              msg = Drafty.appendLineBreak(msg);\n              msg = Drafty.append(msg, Drafty.init(caption));\n            }\n            // Pass data and the uploader to the TinodeWeb.\n            this.props.sendMessage(msg, uploadCompletionPromise, uploader);\n          }\n        )},\n        // Failure\n        (err) => {\n          this.props.onError(err, 'err');\n        }\n      );\n      return;\n    }\n\n    // Upload the image if it's too big to be send inband.\n    blobToBase64(blob, (blobMime, bits64) => {\n      let msg = Drafty.insertImage(null, 0, {\n        mime: blobMime,\n        preview: bits64, // Serializable preview\n        width: width,\n        height: height,\n        filename: fname,\n        size: blob.size\n      });\n      if (caption) {\n        msg = Drafty.appendLineBreak(msg);\n        msg = Drafty.append(msg, Drafty.init(caption));\n      }\n      this.props.sendMessage(msg);\n    });\n  }\n\n  // handleAttachImage method is called when [Attach image] button is clicked.\n  handleAttachImage(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    // Get image dimensions and size, optionally scale it down.\n    imageScaled(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, maxExternAttachmentSize, false,\n      // Success\n      (mime, blob, width, height, fname) => {\n        this.setState({imagePreview: {\n          url: URL.createObjectURL(blob),\n          blob: blob,\n          filename: fname,\n          width: width,\n          height: height,\n          size: blob.size,\n          type: mime\n        }});\n      },\n      // Failure\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    );\n  }\n\n  handleCancelUpload(seq, uploader) {\n    const found = this.state.messages.find(msg => msg.seq == seq);\n    if (found) {\n      found._cancelled = true;\n    }\n    uploader.cancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n\n    let component;\n    if (this.props.hideSelf) {\n      component = null;\n    } else if (!this.state.topic) {\n      component = (\n        <LogoView\n          serverVersion={this.props.serverVersion}\n          serverAddress={this.props.serverAddress} />\n      );\n    } else {\n      let component2;\n      if (this.state.imagePreview) {\n        // Preview image before sending.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePreview}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendImageAttachment} />\n        );\n      } else if (this.state.imagePostview) {\n        // Expand received image.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePostview}\n            onClose={this.handleClosePreview} />\n        );\n      } else if (this.state.docPreview) {\n        // Preview attachment before sending.\n        component2 = (\n          <DocPreview\n            content={this.state.docPreview}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendFileAttachment} />\n        );\n      } else {\n        const topic = this.props.tinode.getTopic(this.state.topic);\n        const isChannel = topic.isChannelType();\n        const groupTopic = topic.isGroupType() && !isChannel;\n        const icon_badges = [];\n        if (topic.trusted) {\n          if (topic.trusted.verified) {\n            icon_badges.push({icon: 'verified', color: 'badge-inv'});\n          }\n          if (topic.trusted.staff) {\n            icon_badges.push({icon: 'staff', color: 'badge-inv'});\n          }\n          if (topic.trusted.danger) {\n            icon_badges.push({icon: 'dangerous', color: 'badge-inv'});\n          }\n        }\n        let messageNodes = [];\n        let previousFrom = null;\n        let chatBoxClass = null;\n        for (let i=0; i<this.state.messages.length; i++) {\n          let msg = this.state.messages[i];\n          let nextFrom = null;\n\n          if (i + 1 < this.state.messages.length) {\n            nextFrom = this.state.messages[i+1].from || 'chan';\n          }\n\n          let sequence = 'single';\n          let thisFrom = msg.from || 'chan';\n          if (thisFrom == previousFrom) {\n            if (thisFrom == nextFrom) {\n              sequence = 'middle';\n            } else {\n              sequence = 'last';\n            }\n          } else if (thisFrom == nextFrom) {\n            sequence = 'first';\n          }\n          previousFrom = thisFrom;\n\n          const isReply = !(thisFrom == this.props.myUserId);\n          const deliveryStatus = topic.msgStatus(msg, true);\n\n          let userName, userAvatar, userFrom;\n          if (groupTopic) {\n            const user = topic.userDesc(thisFrom);\n            if (user && user.public) {\n              userName = user.public.fn;\n              userAvatar = makeImageUrl(user.public.photo);\n            }\n            userFrom = thisFrom;\n            chatBoxClass='chat-box group';\n          } else {\n            chatBoxClass='chat-box';\n          }\n\n          messageNodes.push(\n            <ChatMessage\n              tinode={this.props.tinode}\n              content={msg.content}\n              deleted={msg.hi}\n              mimeType={msg.head ? msg.head.mime : null}\n              timestamp={msg.ts}\n              response={isReply}\n              seq={msg.seq}\n              userFrom={userFrom}\n              userName={userName}\n              userAvatar={userAvatar}\n              sequence={sequence}\n              received={deliveryStatus}\n              uploader={msg._uploader}\n              viewportWidth={this.props.viewportWidth}\n              showContextMenu={this.state.channel? false : this.handleShowContextMenuMessage}\n              onImagePreview={this.handleImagePostview}\n              onFormResponse={this.handleFormResponse}\n              onError={this.props.onError}\n              onCancelUpload={this.handleCancelUpload}\n              key={msg.seq} />\n          );\n        }\n\n        let lastSeen = null;\n        if (isChannel) {\n          lastSeen = formatMessage(messages.channel);\n        } else {\n          const cont = this.props.tinode.getMeTopic().getContact(this.state.topic);\n          if (cont && Tinode.isP2PTopicName(cont.topic)) {\n            if (cont.online) {\n              lastSeen = formatMessage(messages.online_now);\n            } else if (cont.seen) {\n              lastSeen = formatMessage(messages.last_seen) + \": \" +\n                shortDateFormat(cont.seen.when, this.props.intl.locale);\n              // TODO: also handle user agent in c.seen.ua\n            }\n          }\n        }\n        const avatar = this.state.avatar || true;\n        const online = this.props.online ? 'online' + (this.state.typingIndicator ? ' typing' : '') : 'offline';\n\n        component2 = (\n          <>\n            <div id=\"topic-caption-panel\" className=\"caption-panel\">\n              {this.props.displayMobile ?\n                <a href=\"#\" id=\"hide-message-view\" onClick={(e) => {e.preventDefault(); this.props.onHideMessagesView();}}>\n                  <i className=\"material-icons\">arrow_back</i>\n                </a>\n                :\n                null}\n              <div className=\"avatar-box\">\n                <LetterTile\n                  avatar={avatar}\n                  topic={this.state.topic}\n                  title={this.state.title} />\n                {!isChannel ? <span className={online} /> : null}\n              </div>\n              <div id=\"topic-title-group\">\n                <div id=\"topic-title\" className=\"panel-title\">{\n                  this.state.title ||\n                  <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n                    description=\"Title shown when the topic has no name\" /></i>\n                }<ContactBadges badges={icon_badges} /></div>\n                <div id=\"topic-last-seen\">{lastSeen}</div>\n              </div>\n              {groupTopic ?\n                <GroupSubs\n                  subscribers={this.state.onlineSubs} /> :\n                <div id=\"topic-users\" />\n              }\n              <div>\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">more_vert</i>\n                </a>\n              </div>\n            </div>\n            {this.props.displayMobile ?\n              <ErrorPanel\n                level={this.props.errorLevel}\n                text={this.props.errorText}\n                onClearError={this.props.onError} />\n              : null}\n            <LoadSpinner show={this.state.fetchingMessages} />\n            <div id=\"messages-container\">\n              <div id=\"messages-panel\" ref={this.handleScrollReference}>\n                <ul id=\"scroller\" className={chatBoxClass}>\n                  {messageNodes}\n                </ul>\n              </div>\n              {!this.state.isReader ?\n              <div id=\"write-only-background\">\n                {this.state.readingBlocked ?\n                <div id=\"write-only-note\">\n                  <FormattedMessage id=\"messages_not_readable\" defaultMessage=\"no access to messages\"\n                    description=\"Message shown in topic without the read access\" />\n                </div>\n                : null }\n              </div>\n              : null }\n            </div>\n            {this.state.peerMessagingDisabled && !this.state.unconfirmed ?\n              <div id=\"peer-messaging-disabled-note\">\n                <i className=\"material-icons secondary\">block</i> <FormattedMessage\n                  id=\"peers_messaging_disabled\" defaultMessage=\"Peer's messaging is disabled.\"\n                  description=\"Shown when the p2p peer's messaging is disabled\" /> <a href=\"#\"\n                    onClick={this.handleEnablePeer}><FormattedMessage id=\"enable_peers_messaging\"\n                    defaultMessage=\"Enable\" description=\"Call to action to enable peer's messaging\" /></a>.\n              </div> : null}\n            {this.state.unconfirmed ?\n              <Invitation onAction={this.handleNewChatAcceptance} />\n              :\n              <SendMessage\n                disabled={!this.state.isWriter}\n                onSendMessage={this.props.sendMessage}\n                onKeyPress={this.sendKeyPress}\n                onAttachFile={this.handleAttachFile}\n                onAttachImage={this.handleAttachImage}\n                onError={this.props.onError} />}\n          </>\n        );\n      }\n\n      component = <div id=\"topic-view\">{component2}</div>\n    }\n    return component;\n  }\n};\n\nexport default injectIntl(MessagesView);\n","// The <- button to be displayed in title bars.\nimport React from 'react';\n\nexport default class ButtonBack extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onBack();}}>\n        <i className=\"material-icons\">arrow_back</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class MenuContacts extends React.PureComponent {\n  render() {\n    return (\n      <div>\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onNewTopic();}}><i className=\"material-icons\">chat</i></a>\n        &nbsp;\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nexport default class MenuStart extends React.PureComponent {\n  render() {\n    return (\n        <div>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSignUp();}}><i className=\"material-icons\">person_add</i></a>\n          &nbsp;\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n        </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\nimport ButtonBack from './button-back.jsx';\nimport ContactBadges from './contact-badges.jsx';\nimport MenuContacts from './menu-contacts.jsx';\nimport MenuStart from './menu-start.jsx';\n\nimport { sanitizeImageUrl } from '../lib/utils.js';\n\nexport default class SideNavbar extends React.PureComponent {\n  render() {\n    const icon_badges = [];\n    if (this.props.trustedBadges) {\n      this.props.trustedBadges.map((b) => {\n        icon_badges.push({icon: b, color: 'badge-inv'});\n      });\n    }\n    let avatar = null;\n    if (this.props.tinode) {\n      avatar = this.props.tinode.authorizeURL(sanitizeImageUrl(this.props.avatar));\n    }\n    return (\n        <div id=\"side-caption-panel\" className=\"caption-panel\">\n          {this.props.onCancel ? <ButtonBack onBack={this.props.onCancel} /> : null}\n          {avatar ?\n            <div id=\"self-avatar\" className=\"avatar-box\">\n              <LetterTile\n                avatar={avatar}\n                topic={this.props.myUserId}\n                title={this.props.title} />\n            </div>\n            :\n            null}\n          <div id=\"sidepanel-title\" className=\"panel-title\">{this.props.title}<ContactBadges badges={icon_badges}/></div>\n          {this.props.state === 'login' ?\n              <MenuStart onSignUp={this.props.onSignUp} onSettings={this.props.onSettings} /> :\n            this.props.state === 'contacts' ?\n              <MenuContacts onNewTopic={this.props.onNewTopic} onSettings={this.props.onSettings} /> :\n            null}\n        </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport BadgeList from '../widgets/badge-list.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\n\nexport default class AccountSettingsView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    this.state = {\n      fullName: me.public ? me.public.fn : undefined,\n      avatar: makeImageUrl(me.public ? me.public.photo : null)\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n                description=\"Label for full name editing\" />\n            </label>\n            <div className=\"large\">{this.state.fullName}</div>\n            <div>\n              <label className=\"small\"><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n                description=\"Label for user address (ID)\" /></label>&nbsp;\n              <tt>{this.props.myUserId}</tt>\n            </div>\n            <BadgeList trustedBadges={this.props.trustedBadges} />\n          </div>\n          <AvatarUpload\n            tinode={this.props.tinode}\n            avatar={this.state.avatar}\n            readOnly={true}\n            uid={this.props.myUserId}\n            title={this.state.fullName} />\n        </div>\n        <div className=\"panel-form-row\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('general');}}>\n            <i className=\"material-icons\">edit</i>&nbsp;\n            <FormattedMessage id=\"button_edit\" defaultMessage=\"Edit\" description=\"Call to action [Edit]\" />\n          </a>\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('notif');}}>\n            <i className=\"material-icons\">notifications</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_notifications\"\n              defaultMessage=\"Notifications\" description=\"Sidepanel title for AccNotificationsView.\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('security');}}>\n            <i className=\"material-icons\">security</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_security\"\n              defaultMessage=\"Security\" description=\"Sidepanel title for AccSecurityView.\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('support');}}>\n            <i className=\"material-icons\">contact_support</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_support\"\n              defaultMessage=\"Support\" description=\"Sidepanel title for AccSupportView.\" />\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","/* ContactsView holds all contacts-related stuff */\nimport React from 'react';\nimport { FormattedMessage, defineMessages } from 'react-intl';\n\nimport ContactList from '../widgets/contact-list.jsx';\n\nimport { updateFavicon } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  archived_contacts_title: {\n    id: \"archived_contacts\",\n    defaultMessage: \"Archived contacts ({count})\",\n    description: \"Label for archived chats\"\n  }\n});\n\nexport default class ContactsView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAction = this.handleAction.bind(this);\n\n    this.state = ContactsView.deriveStateFromProps(props);\n  }\n\n  static deriveStateFromProps(props) {\n    const contacts = [];\n    let unreadThreads = 0;\n    let archivedCount = 0;\n    props.chatList.map((c) => {\n      const blocked = c.acs && !c.acs.isJoiner();\n      // Show only blocked contacts only when props.blocked == true.\n      if (blocked && props.blocked) {\n        contacts.push(c);\n      }\n      if (blocked || props.blocked) {\n        return;\n      }\n\n      if (c.private && c.private.arch) {\n        if (props.archive) {\n          contacts.push(c);\n        } else {\n          archivedCount ++;\n        }\n      } else if (!props.archive) {\n        contacts.push(c);\n        unreadThreads += c.unread > 0 ? 1 : 0;\n      }\n    });\n\n    contacts.sort((a, b) => {\n      return (b.touched || 0) - (a.touched || 0);\n    });\n\n    if (archivedCount > 0) {\n      contacts.push({\n        action: 'archive',\n        title: messages.archived_contacts_title,\n        values: {count: archivedCount}\n      });\n    }\n\n    return {\n      contactList: contacts,\n      unreadThreads: unreadThreads\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chatList != this.props.chatList ||\n        prevProps.archive != this.props.archive ||\n        prevProps.blocked != this.props.blocked) {\n      const newState = ContactsView.deriveStateFromProps(this.props);\n      this.setState(newState);\n      if (newState.unreadThreads != prevState.unreadThreads) {\n        updateFavicon(newState.unreadThreads);\n      }\n    }\n  }\n\n  handleAction(action_ignored) {\n    this.props.onShowArchive();\n  }\n\n  render() {\n    return (\n      <FormattedMessage id=\"contacts_not_found\"\n        defaultMessage=\"You have no chats<br />¯∖_(ツ)_/¯\"\n        description=\"HTML message shown in ContactList when no contacts are found\">{\n        (no_contacts) => <ContactList\n          connected={this.props.connected}\n          contacts={this.state.contactList}\n          emptyListMessage={no_contacts}\n          topicSelected={this.props.topicSelected}\n          myUserId={this.props.myUserId}\n          showOnline={true}\n          showUnread={true}\n          onTopicSelected={this.props.onTopicSelected}\n          showContextMenu={this.props.showContextMenu}\n          onAction={this.handleAction} />\n      }</FormattedMessage>\n    );\n  }\n};\n","// Helper functions for storing values in localStorage.\n// By default localStorage can store only strings, not objects or other types.\n\nexport default class LocalStorageUtil {\n  // Replace old object with the new one.\n  static setObject(key, value) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n\n  // Get stored object.\n  static getObject(key) {\n    const value = localStorage.getItem(key);\n    return value && JSON.parse(value);\n  }\n\n  // Partially or wholly update stored object.\n  static updateObject(key, value) {\n    const oldVal = this.getObject(key);\n    this.setObject(key, Object.assign(oldVal || {}, value));\n  }\n\n  // Just a wrapper.\n  static removeItem(key) {\n    localStorage.removeItem(key);\n  }\n}\n","// Account registration.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport { theCard } from '../lib/utils.js';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class CreateAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: '',\n      password: '',\n      email: '',\n      fn: '', // full/formatted name\n      imageDataUrl: null,\n      errorCleared: false,\n      saveToken: LocalStorageUtil.getObject('keep-logged-in')\n    };\n\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(password) {\n    this.setState({password: password});\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value})\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleToggleSaveToken() {\n    LocalStorageUtil.setObject('keep-logged-in', !this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({errorCleared: false});\n    this.props.onCreateAccount(\n      this.state.login.trim(),\n      this.state.password.trim(),\n      theCard(this.state.fn.trim().substring(0, MAX_TITLE_LENGTH), this.state.imageDataUrl),\n      {'meth': 'email', 'val': this.state.email});\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form className=\"panel-form-column\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n              description=\"Placeholer for username/login\">{\n              (login_prompt) => <input type=\"text\" placeholder={login_prompt} autoComplete=\"user-name\"\n                value={this.state.login} onChange={this.handleLoginChange} required autoFocus />\n            }</FormattedMessage>\n            <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n              description=\"Placeholder/prompt for entering password\">{\n              (password_prompt) => <VisiblePassword placeholder={password_prompt} autoComplete=\"new-password\"\n                value={this.state.password} onFinished={this.handlePasswordChange}\n                required={true} />\n            }</FormattedMessage>\n          </div>\n          <AvatarUpload\n            tinode={this.props.tinode}\n            onImageChanged={this.handleImageChanged}\n            onError={this.props.onError} />\n        </div>\n        <div  className=\"panel-form-row\">\n          <FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n            description=\"Input placeholder for person's full name\">{\n            (full_name_prompt) => <input type=\"text\" placeholder={full_name_prompt} autoComplete=\"name\"\n              value={this.state.fn} onChange={this.handleFnChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <FormattedMessage id=\"email_prompt\" defaultMessage=\"Email, e.g. jdoe@example.com\"\n            description=\"Input placeholder for email entry\">{\n            (email_prompt) => <input type=\"email\" placeholder={email_prompt} autoComplete=\"email\"\n              value={this.state.email} onChange={this.handleEmailChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n            description=\"Label for a checkbox\">{\n            (stay_logged_in) => <label htmlFor=\"save-token\">&nbsp;{stay_logged_in}</label>\n          }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_up\" defaultMessage=\"Sign up\"\n              description=\"Create account button [Sign Up]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// Image zoom and crop widget.\n\nimport React from 'react';\n\nconst DEFAULT_MAX_ZOOM = 2.5;\n\nexport default class Cropper extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Coordinates of the top left corner of the image in container coordinates.\n      panX: 0,\n      panY: 0,\n      // Origin of the zoom in image coordinates.\n      originX: 0,\n      originY: 0,\n      // Zoom scale.\n      zoom: 1,\n      // Zoom min and max.\n      minZoom: 0,\n      maxZoom: DEFAULT_MAX_ZOOM,\n    };\n\n    // References to DOM elements for hooking up events and getting screen dimensions.\n    // The transparent element which captures mouse moves (moves with the image).\n    this.overlay = React.createRef();\n    // The image cutout window or view port (static).\n    this.cutout = React.createRef();\n    // Scaled and translated image preview.\n    this.preview = React.createRef();\n    // The main container (static).\n    this.boundingBox = React.createRef();\n\n    // The original image width and height before any scaling.\n    this.imageWidth = 0;\n    this.imageHeight = 0;\n\n    // Mouse position when dragging.\n    this.mouseX = 0\n    this.mouseY = 0;\n    // Length of the previous mouse move when dragging.\n    this.prevDistance = 0;\n\n    // Bounding rectangles of static elements.\n    this.cutoutRect = {};\n    this.bBoxRect = {};\n    // Center of the bounding box.\n    this.originX = 0;\n    this.originY = 0;\n\n    this.initScaling = this.initScaling.bind(this);\n    this.onZoom = this.onZoom.bind(this);\n    this.handleZoom = this.handleZoom.bind(this);\n    this.mouseDown = this.mouseDown.bind(this);\n    this.mouseUp = this.mouseUp.bind(this);\n    this.mouseMove = this.mouseMove.bind(this);\n    this.mouseTouch = this.mouseTouch.bind(this);\n    this.positionAll = this.positionAll.bind(this);\n    this.translate = this.translate.bind(this);\n  }\n\n  componentDidMount() {\n    this.overlay.current.addEventListener('mousedown', this.mouseDown, { passive: true });\n    this.overlay.current.addEventListener('touchstart', this.mouseDown, { passive: true });\n\n    // The rectangle position is in viewport coordinates.\n    this.bBoxRect = this.boundingBox.current.getBoundingClientRect();\n    // Center of the bounding box in container coordinates.\n    this.originX = this.bBoxRect.width / 2;\n    this.originY = this.bBoxRect.height / 2;\n\n    // The rectangle position is in viewport coordinates.\n    this.cutoutRect = this.cutout.current.getBoundingClientRect();\n  }\n\n  componentWillUnmount() {\n    this.overlay.current.removeEventListener('mousedown', this.mouseDown);\n    this.overlay.current.removeEventListener('touchstart', this.mouseDown);\n  }\n\n  // Position all elements.\n  positionAll(panX, panY, zoom) {\n    // Zoom origin in image preview coordinates.\n    this.setState({\n      panX: panX,\n      panY: panY,\n      zoom: zoom,\n      originX: this.originX - panX,\n      originY: this.originY - panY,\n    });\n\n    // Pass cut out coordinates to caller.\n    const left = (this.originX - panX) * zoom - this.originX;\n    const top = (this.originY - panY) * zoom - this.originY;\n    this.props.onChange(\n      (left + this.cutoutRect.left - this.bBoxRect.left) / zoom,\n      (top + this.cutoutRect.top - this.bBoxRect.top) / zoom,\n      this.cutoutRect.width / zoom,\n      this.cutoutRect.height / zoom,\n      zoom);\n  }\n\n  // Check if new location is within the limits.\n  static checkBound(currPan, img, cutout, delta) {\n    let nextDiff = Math.min(0, cutout[0] - img[0] - delta, img[1] - cutout[1] + delta);\n    if (nextDiff == 0) {\n      // Cutout is completely within the image.\n      currPan += delta;\n    } else if (Math.min(0, cutout[0] - img[0], img[1] - cutout[1]) < nextDiff) {\n      // Cutout is outside of the range but closer to the bound.\n      currPan += delta;\n    }\n    return currPan;\n  }\n\n  initScaling() {\n    // Initialize components.\n    const imgRect = this.preview.current.getBoundingClientRect();\n\n    this.imageWidth = imgRect.width;\n    this.imageHeight = imgRect.height;\n\n    // Set zoom slider's min and max values. Make sure the scaled image cannot be smaller than the cutout.\n    const minZoom = Math.max(this.cutoutRect.width / imgRect.width, this.cutoutRect.height / imgRect.height);\n    this.setState({\n      minZoom: minZoom,\n      maxZoom: Math.max(DEFAULT_MAX_ZOOM, minZoom + 1)\n    });\n\n    // Initial zoom level fills the bounding box at the smallest image dimension and overflows the largest, i.e. \"fill\" not \"fit\".\n    const zoom = Math.max(this.bBoxRect.width / imgRect.width, this.bBoxRect.height / imgRect.height);\n    // Converting from viewport coordinates to container, then panning.\n    const panX = this.cutoutRect.left - this.bBoxRect.left -\n      (imgRect.width - this.cutoutRect.width) / 2;\n    const panY = this.cutoutRect.top - this.bBoxRect.top -\n      (imgRect.height - this.cutoutRect.height) / 2;\n\n    this.positionAll(panX, panY, zoom);\n  }\n\n  onZoom(e) {\n    this.handleZoom(e.target.value);\n  }\n\n  handleZoom(zoom) {\n    let panX = this.state.panX;\n    let panY = this.state.panY;\n\n    // Ensure that the image at the new zoom is not outside of the cutout boundaries.\n    // Calculate image coordinates at the new zoom.\n    const imgLeft = this.originX - (this.originX - panX) * zoom;\n    const imgRight = imgLeft + this.imageWidth * zoom;\n    // Cutout in the same coordinates as the image.\n    const coLeft = this.cutoutRect.left - this.bBoxRect.left;\n    const coRight = coLeft + this.cutoutRect.width;\n    if (coLeft < imgLeft) {\n      panX -= imgLeft - coLeft;\n    } else if (coRight > imgRight) {\n      panX += coRight - imgRight;\n    }\n    const imgTop = this.originY - (this.originY - panY) * zoom;\n    const imgBottom = imgTop + this.imageHeight * zoom;\n    const coTop = this.cutoutRect.top - this.bBoxRect.top;\n    const coBottom = coTop + this.cutoutRect.height;\n    if (coTop < imgTop) {\n      panY -= imgTop - coTop;\n    } else if (coBottom > imgBottom) {\n      panY += coBottom - imgBottom;\n    }\n\n    this.positionAll(panX, panY, zoom);\n  }\n\n  mouseDown(e) {\n    if (e.touches) {\n      this.mouseX = e.touches[0].pageX;\n      this.mouseY = e.touches[0].pageY;\n    } else {\n      this.mouseX = e.pageX;\n      this.mouseY = e.pageY;\n    }\n\n    window.addEventListener('mousemove', this.mouseMove, { passive: false });\n    window.addEventListener('touchmove', this.mouseTouch, { passive: false });\n    window.addEventListener('mouseup', this.mouseUp, { passive: true });\n    window.addEventListener('touchend', this.mouseUp, { passive: true });\n    // Disable text selection in the entire document.\n    document.body.style['userSelect'] = 'none';\n  }\n\n  // Perform image panning.\n  translate(pageX, pageY) {\n    const dX = pageX - this.mouseX;\n    const dY = pageY - this.mouseY;\n\n    this.mouseX = pageX;\n    this.mouseY = pageY;\n\n    // Make sure the image is within the cutout window.\n    const imgRect = this.preview.current.getBoundingClientRect();\n\n    // Check if the new position is within the boundaries, and if not if it's closer to them.\n    let panX = Cropper.checkBound(this.state.panX, [imgRect.left, imgRect.right],\n      [this.cutoutRect.left, this.cutoutRect.right], dX);\n    let panY = Cropper.checkBound(this.state.panY, [imgRect.top, imgRect.bottom],\n      [this.cutoutRect.top, this.cutoutRect.bottom], dY);\n\n    this.positionAll(panX, panY, this.state.zoom);\n  }\n\n  // Image panning.\n  mouseMove(e) {\n    e.preventDefault();\n    this.translate(e.pageX, e.pageY);\n  }\n\n  mouseTouch(e) {\n    e.preventDefault();\n\n    if (e.touches.length == 1) {\n      this.translate(e.touches[0].pageX, e.touches[0].pageY);\n      return;\n    }\n\n    // Image zooming by pinching.\n    const [touch0, touch1] = e.touches;\n    const distance = Math.sqrt((touch0.pageX - touch1.pageX) * (touch0.pageX - touch1.pageX) +\n      (touch0.pageY - touch1.pageY) * (touch0.pageY - touch1.pageY));\n\n    if (!this.prevDistance) {\n        this.prevDistance = distance / this.state.zoom;\n    }\n\n    let scale = (distance / this.prevDistance);\n    this.handleZoom(Math.max(this.minZoom, Math.min(this.maxZoom, scale)));\n  }\n\n  mouseUp(e) {\n    window.removeEventListener('mousemove', this.mouseMove);\n    window.removeEventListener('touchmove', this.mouseTouch);\n    window.removeEventListener('mouseup', this.mouseUp);\n    window.removeEventListener('touchend', this.mouseUp);\n    // Re-enable text selection.\n    document.body.style['userSelect'] = '';\n\n    this.positionAll(this.state.panX, this.state.panY, this.state.zoom);\n  }\n\n  render() {\n    // transform3d: position and scale.\n    const t3d = `translate3d(${this.state.panX}px, ${this.state.panY}px, 0) scale(${this.state.zoom})`;\n    // transformOrigin: zoom origin.\n    const orig = `${this.state.originX}px ${this.state.originY}px`;\n\n    // Overlay position and size are exactly equal to the position and size of the transformed image\n    // except it uses different coordinates.\n    const overlay = {\n      top: `${this.originY - this.state.originY * this.state.zoom}px`,\n      left: `${this.originX - this.state.originX * this.state.zoom}px`,\n      width: `${this.imageWidth * this.state.zoom}px`,\n      height: `${this.imageHeight * this.state.zoom}px`\n    };\n    return (\n      <div className=\"cropper\">\n        <div className=\"bounding-box\" ref={this.boundingBox}>\n          <img src={this.props.source} className=\"preview\" alt=\"\"\n            style={{transform: t3d, transformOrigin: orig}} ref={this.preview} onLoad={this.initScaling} />\n          <div className=\"cutout circle\" ref={this.cutout} />\n          <div className=\"overlay\" style={overlay} ref={this.overlay} />\n        </div>\n        <div className=\"zoom-wrapper\">\n          <input type=\"range\" className=\"zoomer\"\n            step=\"0.001\" min={this.state.minZoom} max={this.state.maxZoom} value={this.state.zoom} onChange={this.onZoom} />\n        </div>\n      </div>\n    );\n  }\n}\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Cropper from './cropper.jsx';\nimport { imageCrop } from '../lib/blob-helpers.js';\n\nexport default class AvatarCrop extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      top: 0,\n      left: 0,\n      width: 0,\n      height: 0,\n      scale: 1\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  // Cut out in image coordinates and desired scale factor.\n  handleChange(left, top, width, height, scale) {\n    this.setState({\n      left: left,\n      top: top,\n      width: width,\n      height: height,\n      scale: scale\n    });\n  }\n\n  handleSubmit() {\n    imageCrop(this.props.mime, this.props.avatar,\n      this.state.left, this.state.top,\n      this.state.width, this.state.height,\n      this.state.scale,\n      (mime, blob, width, height) => {\n        this.props.onSubmit(mime, blob, width, height);\n      },\n      (err) => {\n        this.props.onError(err);\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <Cropper\n            source={this.props.avatar}\n            onChange={this.handleChange} />\n        </div>\n        <div className=\"dialog-buttons\">\n          {this.props.onCancel ?\n            <button className=\"secondary\" onClick={this.props.onCancel}>\n              <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n            </button>\n            : null}\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n","// Widget for editing topic description.\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarCrop from './avatar-crop.jsx';\nimport AvatarUpload from './avatar-upload.jsx';\nimport InPlaceEdit from './in-place-edit.jsx';\nimport TagManager from './tag-manager.jsx';\n\nimport { AVATAR_SIZE, MAX_AVATAR_BYTES, MAX_EXTERN_ATTACHMENT_SIZE,\n  MAX_INBAND_ATTACHMENT_SIZE, MAX_TITLE_LENGTH } from '../config.js';\nimport { imageScaled, blobToBase64, makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, theCard } from '../lib/utils.js';\n\nexport default class TopicDescEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    const acs = topic.getAccessMode();\n    this.state = {\n      isMe: Tinode.isMeTopicName(this.props.topic),\n      owner: acs && acs.isOwner(),\n      fullName: topic.public ? topic.public.fn : undefined,\n      avatar: makeImageUrl(topic.public ? topic.public.photo : null),\n      tags: topic.tags(),\n      newAvatar: null,\n      newAvatarMime: null,\n      previousOnTags: topic.onTagsUpdated\n    };\n\n    this.tnNewTags = this.tnNewTags.bind(this);\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\n    this.handleImageUpdated = this.handleImageUpdated.bind(this);\n    this.handleAvatarCropped = this.handleAvatarCropped.bind(this);\n    this.uploadAvatar = this.uploadAvatar.bind(this);\n    this.handleAvatarCropCancel = this.handleAvatarCropCancel.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n  }\n\n  componentDidMount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    topic.onTagsUpdated = this.tnNewTags;\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    topic.onTagsUpdated = this.state.previousOnTags;\n  }\n\n  tnNewTags(tags) {\n    this.setState({tags: tags});\n  }\n\n  handleFullNameUpdate(fn) {\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\n    if (fn) {\n      this.setState({fullName: fn});\n      this.props.onUpdateTopicDesc(this.props.topic, theCard(fn, null));\n    }\n  }\n\n  // AvatarUpload widget has changed the avatar: received a new file or deleted the avatar.\n  handleImageUpdated(mime, img) {\n    // This will show the AvatarCropView is img is not null.\n    this.setState({newAvatar: img, newAvatarMime: mime});\n    if (!img) {\n      // Deleting the avatar.\n      this.props.onUpdateTopicDesc(this.props.topic, theCard(null, Tinode.DEL_CHAR));\n    }\n  }\n\n  // AvatarCropView calls this method when the user has cropped the image.\n  handleAvatarCropped(mime, blob, width, height) {\n    const url = blob ? URL.createObjectURL(blob) : null;\n    this.setState({avatar: url, newAvatar: null, newAvatarMime: null});\n    if (blob) {\n      this.uploadAvatar(mime, blob, width, height);\n    }\n  }\n\n  // Utility method for converting cropped avatar blob to bytes for sending inband or\n  // for uploading it to the server out of band.\n  uploadAvatar(mime, blob, width, height) {\n    const readyToUpload = (mime, blob, width, height) => {\n      if (blob.size > MAX_AVATAR_BYTES) {\n        // Too large to send inband - uploading out of band and sending as a link.\n        const uploader = this.props.tinode.getLargeFileHelper();\n\n        this.setState({uploading: true});\n        uploader.upload(blob)\n          .then((url) => {\n            this.props.onUpdateTopicDesc(this.props.topic, theCard(null, url));\n          })\n          .catch((err) => {\n            this.props.onError(err, 'err');\n          })\n          .finally(() => {\n            this.setState({uploading: false});\n          });\n      } else {\n        this.setState({uploading: true});\n        // Convert blob to base64-encoded bits.\n        blobToBase64(blob, (unused, base64bits) => {\n          const du = makeImageUrl({data: base64bits, type: mime});\n          this.setState({source: du});\n          this.props.onUpdateTopicDesc(this.props.topic, theCard(null, du));\n          this.setState({uploading: false});\n        });\n      }\n    };\n\n    if (width > AVATAR_SIZE || height > AVATAR_SIZE || width != height) {\n      // Avatar is not square or too large even after cropping. Shrink it and make square.\n      imageScaled(blob, AVATAR_SIZE, AVATAR_SIZE, MAX_EXTERN_ATTACHMENT_SIZE, true,\n        readyToUpload,\n        (err) => {\n          this.props.onError(err, 'err');\n        });\n    } else {\n      readyToUpload(mime, blob, width, height);\n    }\n  }\n\n  handleAvatarCropCancel(img) {\n    this.setState({newAvatar: null, newAvatarMime: null});\n  }\n\n  handleTagsUpdated(tags) {\n    // Check if tags have actually changed.\n    if (arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      return;\n    }\n    this.props.onUpdateTags(tags);\n  }\n\n  render() {\n    if (this.state.newAvatar) {\n      return (\n        <AvatarCrop\n          avatar={this.state.newAvatar}\n          mime={this.state.newAvatarMime}\n          onSubmit={this.handleAvatarCropped}\n          onCancel={this.handleAvatarCropCancel}\n          onError={this.props.onError} />\n      );\n    }\n\n    const editable = this.state.isMe || this.state.owner;\n\n    return (\n      <>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n          {this.state.isMe ? <>\n            <label className=\"small\">\n              <FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n              description=\"Label for full name editing\" />\n            </label>\n            <div><FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n              description=\"Input placeholder for person's full name\">{\n              (full_name_placeholder) => <InPlaceEdit\n                placeholder={full_name_placeholder}\n                value={this.state.fullName}\n                required={true}\n                onFinished={this.handleFullNameUpdate} />\n            }</FormattedMessage></div>\n          </> : <>\n            <div><label className=\"small\">\n              <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                description=\"Label for editing topic name\" />\n            </label></div>\n            <div><InPlaceEdit\n                placeholder={this.state.groupTopic ? \"Group name\" : <i>Unknown</i>}\n                readOnly={!this.state.owner}\n                value={this.state.fullName}\n                required={true}\n                onFinished={this.handleFullNameUpdate} /></div>\n            <div><label className=\"small\">\n              <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                description=\"Label for editing 'private'\" />\n            </label></div>\n            <div>\n              <FormattedMessage id=\"private_editing_placeholder\"\n                defaultMessage=\"Visible to you only\"\n                description=\"Placeholder for editing 'private'\">{\n                (private_placeholder) => <InPlaceEdit\n                  placeholder={private_placeholder}\n                  value={this.state.private}\n                  onFinished={this.handlePrivateUpdate} />\n              }</FormattedMessage>\n            </div>\n          </>\n          }\n          </div>\n          <AvatarUpload\n            tinode={this.props.tinode}\n            avatar={this.state.avatar}\n            readOnly={!editable}\n            uid={this.props.topic}\n            title={this.state.fullName}\n            onImageUpdated={this.handleImageUpdated}\n            onError={this.props.onError} />\n        </div>\n        <div className=\"panel-form-column\">\n          <div><label className=\"small\">\n            <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n              description=\"Label for editing topic description\" />\n          </label></div>\n          <div>\n            <FormattedMessage id=\"description_editing_placeholder\"\n              defaultMessage=\"Optional description\"\n              description=\"Placeholder for editing topic description\">{\n              (private_placeholder) => <InPlaceEdit\n                placeholder={private_placeholder}\n                readOnly={!editable}\n                value={this.state.description}\n                multiline={2}\n                onFinished={this.handleDescriptionUpdate} />\n            }</FormattedMessage>\n          </div>\n        </div>\n        {editable ?\n          <>\n            <div className=\"hr\" />\n            <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (user discovery)\"\n              description=\"Section title for TagManager\">{\n              (title_tag_manager) => <TagManager\n                title={title_tag_manager}\n                activated={false}\n                tags={this.state.tags}\n                tinode={this.props.tinode}\n                onSubmit={this.handleTagsUpdated} />\n            }</FormattedMessage>\n          </>\n          : null\n        }\n      </>\n    );\n  }\n};\n","// View for editing topic (including 'me' topic) parameters.\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport TagManager from '../widgets/tag-manager.jsx';\nimport TopicDescEdit from '../widgets/topic-desc-edit.jsx';\n\nimport { AVATAR_SIZE, MAX_AVATAR_BYTES, MAX_EXTERN_ATTACHMENT_SIZE,\n  MAX_INBAND_ATTACHMENT_SIZE, MAX_TITLE_LENGTH } from '../config.js';\nimport { imageScaled, blobToBase64, makeImageUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, asEmail, asPhone, theCard } from '../lib/utils.js';\n\nexport default class TopicCommonView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    const acs = topic.getAccessMode();\n    this.state = {\n      isMe: this.props.tinode.isMe(this.props.topic),\n      owner: acs && acs.isOwner(),\n      credentials: topic.getCredentials() || [],\n      addCredActive: false,\n      addCredInvalid: false\n    };\n\n    this.tnCredsUpdated = this.tnCredsUpdated.bind(this);\n    this.handleCredChange = this.handleCredChange.bind(this);\n    this.handleCredKeyDown = this.handleCredKeyDown.bind(this);\n    this.handleCredEntered = this.handleCredEntered.bind(this);\n  }\n\n  componentDidMount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    topic.onCredsUpdated = this.tnCredsUpdated;\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    topic.onCredsUpdated = undefined;\n  }\n\n  tnCredsUpdated(creds) {\n    this.setState({credentials: creds || []});\n  }\n\n  handleCredChange(e) {\n    this.setState({newCred: e.target.value, addCredInvalid: false});\n  }\n\n  handleCredKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({newCred: '', addCredActive: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleCredEntered(e);\n    }\n  }\n\n  handleCredEntered(e) {\n    let value = this.state.newCred.trim();\n    if (!value) {\n      this.setState({addCredActive: false, addCredInvalid: false});\n      return;\n    }\n\n    let val = asPhone(value);\n    let method;\n    if (val) {\n      method = 'tel';\n    } else {\n      val = asEmail(value);\n      if (val) {\n        method = 'email';\n      }\n    }\n    if (method) {\n      this.props.onCredAdd(method, val);\n      this.setState({addCredActive: false, newCred: ''});\n    } else {\n      this.setState({addCredInvalid: true});\n    }\n  }\n\n  render() {\n    const credentials = [];\n    if (this.state.isMe) {\n      this.state.credentials.map((cred) => {\n        credentials.push(<div key={cred.meth + \":\" + cred.val + \":\" + cred.done}>{cred.meth}: <tt>{cred.val}</tt>\n          <span > {!cred.done ?\n            <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredConfirm(cred.meth, cred.val);}}>\n                <FormattedMessage id=\"validate_credential_action\" defaultMessage=\"confirm\"\n                  description=\"Validate credentail call to action\" />\n              </a>\n            : null} <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredDelete(cred.meth, cred.val);}}><i\n              className=\"material-icons gray\">delete_outline</i></a></span></div>);\n      });\n    }\n\n    return (\n      <div className=\"scrollable-panel\">\n        <TopicDescEdit\n          tinode={this.props.tinode}\n          topic={this.props.topic}\n          onUpdateTopicDesc={this.props.onUpdateTopicDesc}\n          onUpdateTags={this.props.onUpdateTags}\n          onError={this.props.onError} />\n        {this.state.isMe ?\n          <>\n            <div className=\"hr\" />\n            <div className=\"panel-form-column\">\n              <label className=\"small\">\n                <FormattedMessage id=\"label_user_contacts\" defaultMessage=\"Contacts:\"\n                description=\"Label for user contacts\" />\n              </label>\n              <div className=\"quoted\">\n                {credentials}\n                {this.state.addCredActive ?\n                  <input type=\"text\" value={this.state.value}\n                    className={this.state.addCredInvalid ? 'invalid' : null}\n                    placeholder=\"Phone number or email\" required=\"required\" autoFocus\n                    onChange={this.handleCredChange} onKeyDown={this.handleCredKeyDown} onBlur={this.handleCredEntered} />\n                  : null}\n                <div>\n                  <a href=\"#\" onClick={(e) => {e.preventDefault(); this.setState({addCredActive: true});}}>\n                    <i className=\"material-icons\">add</i>\n                    <FormattedMessage id=\"button_add_another\" defaultMessage=\"Add another\" description=\"Call to action [+ add another]\" />\n                  </a></div>\n              </div>\n            </div>\n          </>\n        : null\n      }\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\n\nexport default class EditAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckboxClick = this.handleCheckboxClick.bind(this);\n  }\n\n  handleCheckboxClick(what, checked) {\n    if (what == 'sound') {\n      this.props.onToggleMessageSounds(checked);\n    } else if (what == 'alert') {\n      this.props.onTogglePushNotifications(checked);\n    } else if (what == 'incognito') {\n      this.props.onToggleIncognitoMode(checked);\n    }\n  }\n\n  render() {\n    return (\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"message-sound\">\n              <FormattedMessage id=\"label_message_sound\" defaultMessage=\"Message sound:\"\n                description=\"Label for message sounds toggle\" />\n            </label>\n            <CheckBox name=\"sound\" id=\"message-sound\"\n              checked={this.props.messageSounds} onChange={this.handleCheckboxClick} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"desktop-alerts\">\n            {this.props.desktopAlertsEnabled ?\n              <FormattedMessage id=\"label_push_notifications\" defaultMessage=\"Notification alerts:\"\n                description=\"Label for push notifications switch\" />\n              :\n              <FormattedMessage id=\"label_push_notifications_disabled\"\n                defaultMessage=\"Notification alerts (requires HTTPS):\"\n                description=\"Label for push notifications switch\" />\n            }\n            </label>\n            <CheckBox name=\"alert\" id=\"desktop-alerts\"\n              checked={this.props.desktopAlerts}\n              onChange={this.props.desktopAlertsEnabled ? this.handleCheckboxClick : null} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"incognito-mode\">\n              <FormattedMessage id=\"label_incognito_mode\" defaultMessage=\"Incognito mode:\"\n                description=\"Label for incognito mode toggle\" />\n            </label>\n            <CheckBox name=\"incognito\" id=\"incognito-mode\"\n              checked={this.props.incognitoMode} onChange={this.handleCheckboxClick} />\n          </div>\n        </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\n\nconst messages = defineMessages({\n  delete_account: {\n    id: 'delete_account',\n    defaultMessage: 'Delete account',\n    description: 'Title for delete account warning'\n  },\n  delete_account_warning: {\n    id: 'delete_account_warning',\n    defaultMessage: 'Are you sure you want to delete your account? It cannot be undone.',\n    description: 'Warning message when deleting an account'\n  }\n});\n\nclass AccSecurityView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    let blockedCount = 0;\n    me.contacts((c) => {\n      if (c.acs && !c.acs.isJoiner()) {\n        blockedCount ++;\n      }\n    });\n    const defacs = me.getDefaultAccess();\n    this.state = {\n      auth: defacs ? defacs.auth : null,\n      anon: defacs ? defacs.anon : null,\n      showPermissionEditorFor: undefined,\n      blockedCount: blockedCount,\n    };\n\n    this.handlePasswordUpdate = this.handlePasswordUpdate.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n  }\n\n  handlePasswordUpdate(pwd) {\n    this.setState({password: pwd});\n    this.props.onUpdatePassword(pwd);\n  }\n\n  handleLaunchPermissionsEditor(which) {\n    this.setState({\n      showPermissionEditorFor: which,\n      editedPermissions: this.state[which]\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handlePermissionsChanged(perm) {\n    let defacs = {};\n    defacs[this.state.showPermissionEditorFor] = perm;\n    this.props.onUpdateAccountDesc('me', undefined, undefined, defacs);\n\n    let newState = {showPermissionEditorFor: undefined};\n    newState[this.state.showPermissionEditorFor] = perm;\n    this.setState(newState);\n  }\n\n  handleDeleteAccount(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.delete_account), // title\n      formatMessage(messages.delete_account_warning), // content\n      (() => { this.props.onDeleteAccount(); }), // onConfirm\n      null, // use default text \"OK\"\n      true, // Show Reject button\n      null  // use default text \"Cancel\"\n    );\n  }\n\n  render() {\n    return (\n      <React.Fragment>{this.state.showPermissionEditorFor ?\n        <PermissionsEditor\n          mode={this.state.editedPermissions}\n          skip=\"O\"\n          onSubmit={this.handlePermissionsChanged}\n          onCancel={this.handleHidePermissionsEditor} />\n        :\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_password\" defaultMessage=\"Password\"\n                  description=\"Label for password editing\" />\n            </label>\n            <div>\n              <FormattedMessage id=\"password_unchanged_prompt\" defaultMessage=\"Unchanged\"\n                description=\"Message in editor while password is unchanged\">{\n                (password_unchanged) => <InPlaceEdit\n                  placeholder={password_unchanged}\n                  type=\"password\"\n                  onFinished={this.handlePasswordUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <a href=\"#\" className=\"danger flat-button\" onClick={(e) => {e.preventDefault(); this.props.onLogout();}}>\n              <i className=\"material-icons\">exit_to_app</i> &nbsp;<FormattedMessage id=\"button_logout\"\n                defaultMessage=\"Logout\" description=\"Button [Logout]\" />\n            </a>\n            <a href=\"#\" className=\"danger flat-button\" onClick={(e) => {this.handleDeleteAccount(e);}}>\n              <i className=\"material-icons\">delete</i> &nbsp;<FormattedMessage id=\"button_delete_account\"\n                defaultMessage=\"Delete account\" description=\"Button [Delete account]\" />\n            </a>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <div>\n              <label className=\"small\">\n                <FormattedMessage id=\"label_default_access_mode\" defaultMessage=\"Default access mode:\"\n                description=\"Label for default access mode\" />\n              </label>\n            </div>\n            <div className=\"quoted\">\n              <div>Auth: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>{this.state.auth}</tt></div>\n              <div>Anon: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>{this.state.anon}</tt></div>\n            </div>\n          </div>\n          {this.state.blockedCount > 0 ?\n            <>\n              <div className=\"hr\" />\n              <div className=\"panel-form-row\">\n                <i className=\"material-icons\">block</i>&nbsp;\n                <a href=\"#\" className=\"gray\" onClick={(e) => {e.preventDefault(); this.props.onShowBlocked();}}>\n                  <FormattedMessage id=\"blocked_contacts_link\" defaultMessage=\"Blocked contacts ({count})\"\n                    values={{ count: this.state.blockedCount }} description=\"Blocked contacts link\" />\n                </a>\n              </div>\n            </>\n            : null }\n        </div>\n      }</React.Fragment>\n    );\n  }\n};\n\nexport default injectIntl(AccSecurityView);\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME, LINK_CONTACT_US, LINK_PRIVACY_POLICY, LINK_TERMS_OF_SERVICE } from '../config.js';\n\nexport default class AccSupportView extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          <a href={LINK_CONTACT_US} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">email</i> &nbsp;<FormattedMessage id=\"link_contact_us\"\n              defaultMessage=\"Contact Us\" description=\"Ancor text for contacting us by email\" />\n          </a>\n          <a href={LINK_TERMS_OF_SERVICE} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">description</i> &nbsp;<FormattedMessage id=\"link_terms_of_service\"\n              defaultMessage=\"Terms of Service\" description=\"Ancor text for terms of service link\" />\n          </a>\n          <a href={LINK_PRIVACY_POLICY} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">policy</i> &nbsp;<FormattedMessage id=\"link_privacy_policy\"\n              defaultMessage=\"Privacy Policy\" description=\"Ancor text for privacy policy link\" />\n          </a>\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\"\n              description=\"Label for a client version\" /></label>\n            {APP_NAME}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_sdk\" defaultMessage=\"SDK:\" /></label>\n            {Tinode.getLibrary()}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\"\n              description=\"Label for a server version\" /></label>\n            {this.props.serverVersion}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server_address\" defaultMessage=\"Server address:\" /></label>\n            {this.props.serverAddress}\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","// Login form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\n\nexport default class LoginView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: props.login,\n      password: '',\n      hostName: props.serverAddress,\n      saveToken: props.persist\n    };\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  handleToggleSaveToken() {\n    this.props.onPersistenceChange(!this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onLogin(this.state.login.trim(), this.state.password.trim());\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form id=\"login-form\" onSubmit={this.handleSubmit}>\n        <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n          description=\"Placeholer for username/login\">\n        {\n          (login_prompt) => <input type=\"text\" id=\"inputLogin\"\n            placeholder={login_prompt}\n            autoComplete=\"username\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"none\"\n            value={this.state.login}\n            onChange={this.handleLoginChange}\n            required autoFocus />\n        }\n        </FormattedMessage>\n        <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n          description=\"Placeholder/prompt for entering password\">\n        {\n          (password_prompt) => <VisiblePassword type=\"password\" id=\"inputPassword\"\n            placeholder={password_prompt}\n            autoComplete=\"current-password\"\n            value={this.state.password}\n            onChange={this.handlePasswordChange}\n            required={true} />\n        }\n        </FormattedMessage>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <label htmlFor=\"save-token\">&nbsp;\n            <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n              description=\"Label for a checkbox\" />\n          </label>\n          <a href=\"#reset\">\n            <FormattedMessage id=\"forgot_password_link\" defaultMessage=\"Forgot password?\"\n              description=\"Link to Reset password form\" />\n          </a>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_in\" defaultMessage=\"Sign in\"\n              description=\"Button [Sign In]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n/* END Login */\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  invalid_id: {\n    id: 'error_invalid_id',\n    defaultMessage: 'Invalid ID',\n    description: 'Error message'\n  }\n});\n\nclass NewTopicById extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      groupId: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({groupId: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.groupId) {\n      const name = this.state.groupId.trim();\n      const prefix = name.substr(0, 3);\n      if (name.length > 3 && ['usr', 'grp', 'chn'].includes(prefix)) {\n        this.props.onSubmit(name);\n      } else {\n        this.props.onError(this.props.intl.formatMessage(messages.invalid_id), 'err');\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"group_user_id_prompt\" defaultMessage=\"Group or User ID\"\n          description=\"Prompt for entering user or group ID\">{\n          (prompt) => <input type=\"text\" placeholder={prompt}\n            value={this.state.groupId} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required autoFocus />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_subscribe\" defaultMessage=\"Subscribe\"\n              description=\"Button [Subscribe]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicById);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from './avatar-upload.jsx';\nimport CheckBox from './checkbox.jsx';\nimport TagManager from './tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class NewTopicGroup extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      fn: '', // full/formatted name\n      private: '',\n      imageDataUrl: null,\n      tags: [],\n      isChannel: false\n    };\n\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handlePrivateChange = this.handlePrivateChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleTagsChanged = this.handleTagsChanged.bind(this);\n    this.handleChannelToggle = this.handleChannelToggle.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handlePrivateChange(e) {\n    this.setState({private: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleTagsChanged(tags) {\n    this.setState({tags: tags});\n  }\n\n  handleChannelToggle() {\n    this.setState({isChannel: !this.state.isChannel});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const fn = this.state.fn.trim().substring(0, MAX_TITLE_LENGTH);\n    const comment = this.state.private.trim().substring(0, MAX_TITLE_LENGTH);\n    if (fn) {\n      this.props.onSubmit(fn, this.state.imageDataUrl, comment, this.state.tags, this.state.isChannel);\n    }\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n    return (\n      <form className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\" htmlFor=\"new-topic-fn\">\n              <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                description=\"Label for editing topic name\" />\n            </label>\n            <FormattedMessage id=\"topic_name_editing_placeholder\" defaultMessage=\"Freeform name of the group\"\n              description=\"Prompt for entering topic name\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-fn\" placeholder={placeholder}\n                value={this.state.fn} onChange={this.handleFnChange} autoFocus required />\n            }</FormattedMessage>\n            <br />\n            <label className=\"small\" htmlFor=\"new-topic-priv\">\n              <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                description=\"Label for editing 'private'\" />\n            </label>\n            <FormattedMessage id=\"private_editing_placeholder\" defaultMessage=\"Visible to you only\"\n              description=\"Placeholder for editing 'private'\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-priv\" placeholder={placeholder}\n                value={this.state.private} onChange={this.handlePrivateChange} />\n            }</FormattedMessage>\n          </div>\n          <AvatarUpload\n            tinode={this.props.tinode}\n            onError={this.props.onError}\n            onImageChanged={this.handleImageChanged} />\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox checked={this.state.isChannel} onChange={this.handleChannelToggle}/>&nbsp;\n          <label onClick={this.handleChannelToggle}><FormattedMessage id=\"channel_prompt\"\n            defaultMessage=\"This is a channel\"\n            description=\"Checkbox label when creating a channel\" /></label>\n        </div>\n        <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (user discovery)\"\n          description=\"Section title for TagManager\">{\n          (title) => <TagManager\n            tags={this.state.tags}\n            activated={true}\n            onTagsChanged={this.handleTagsChanged}\n            tinode={this.props.tinode}\n            title={title} />\n        }</FormattedMessage>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses}>\n            <FormattedMessage id=\"button_create\" defaultMessage=\"Create\"\n              description=\"Button [Create]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nexport default class SearchContacts extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      edited: false,\n      search: ''\n    };\n\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  componentWillUnmount() {\n    if (this.state.edited) {\n      this.setState({search: '', edited: false});\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n  }\n\n  handleSearchChange(e) {\n    this.setState({search: e.target.value});\n  }\n\n  handleSearch(e) {\n    e.preventDefault();\n    var query = this.state.search.trim();\n    this.setState({edited: (query.length > 0)});\n    this.props.onSearchContacts(query.length > 0 ? query : Tinode.DEL_CHAR);\n  }\n\n  handleClear(e) {\n    e.preventDefault();\n    if (this.state.edited) {\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n    this.setState({search: '', edited: false});\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Enter') {\n      this.handleSearch(e);\n    } else if (e.key === 'Escape') {\n      this.handleClear();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <i className=\"material-icons search\">search</i>\n          <FormattedMessage id=\"search_placeholder\" defaultMessage=\"List like email:alice@example.com, tel:17025550003...\"\n            description=\"Placeholder in contacts search field\">{\n            (search_placeholder) => <input className=\"search\" type=\"text\"\n              placeholder={search_placeholder}\n              value={this.state.search} onChange={this.handleSearchChange}\n              onKeyDown={this.handleKeyDown} required autoFocus />\n          }</FormattedMessage>\n          <a href=\"#\" onClick={this.handleClear}>\n            <i className=\"material-icons\">close</i>\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","// Create new topic and invite users or send an invite.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport ContactList from '../widgets/contact-list.jsx';\nimport NewTopicById from '../widgets/new-topic-by-id.jsx';\nimport NewTopicGroup from '../widgets/new-topic-group.jsx';\nimport SearchContacts from '../widgets/search-contacts.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\nimport { theCard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  search_for_contacts: {\n    id: \"search_for_contacts\",\n    defaultMessage: \"Use search to find contacts\",\n    description: \"Text shown in contacts view when user entered no search query.\"\n  },\n  search_no_results: {\n    id: \"search_no_results\",\n    defaultMessage: \"Search returned no results\",\n    description: \"Text shown in contacts view when query returned no results.\"\n  }\n});\n\nclass NewTopicView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tabSelected: 'p2p',\n      searchQuery: null\n    };\n\n    this.handleTabClick = this.handleTabClick.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleNewGroupSubmit = this.handleNewGroupSubmit.bind(this);\n    this.handleGroupByID = this.handleGroupByID.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.onInitFind();\n  }\n\n  handleTabClick(e) {\n    e.preventDefault();\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'tab', e.currentTarget.dataset.id));\n    this.setState({tabSelected: e.currentTarget.dataset.id});\n  }\n\n  handleSearchContacts(query) {\n    this.props.onSearchContacts(query);\n    this.setState({searchQuery: Tinode.isNullValue(query) ? null : query});\n  }\n\n  handleContactSelected(sel) {\n    if (this.state.tabSelected === 'p2p') {\n      HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n      this.props.onCreateTopic(sel);\n    }\n  }\n\n  handleNewGroupSubmit(name, dataUrl, priv, tags, isChannel) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(undefined, theCard(name, dataUrl), priv, tags, isChannel);\n  }\n\n  handleGroupByID(topicName) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(topicName);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const no_contacts_placeholder = formatMessage(this.state.searchQuery ?\n      messages.search_no_results : messages.search_for_contacts);\n    return (\n      <div className=\"flex-column\">\n        <ul className=\"tabbar\">\n          <li className={this.state.tabSelected === \"p2p\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"p2p\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_find_user\" defaultMessage=\"find\"\n                description=\"Tab title Find\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"grp\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"grp\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_new_group\" defaultMessage=\"new group\"\n                description=\"Tab title New Group\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"byid\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"byid\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_group_by_id\" defaultMessage=\"by id\"\n                description=\"Tab title Find topic by ID\" />\n            </a>\n          </li>\n        </ul>\n        {this.state.tabSelected === 'grp' ?\n          <NewTopicGroup\n            tinode={this.props.tinode}\n            onSubmit={this.handleNewGroupSubmit} /> :\n          this.state.tabSelected === 'byid' ?\n            <NewTopicById\n              onSubmit={this.handleGroupByID}\n              onError={this.props.onError} /> :\n            <div className=\"flex-column\">\n              <SearchContacts\n                type=\"p2p\"\n                onSearchContacts={this.handleSearchContacts} />\n              <ContactList\n                contacts={this.props.searchResults}\n                myUserId={this.props.myUserId}\n                emptyListMessage={no_contacts_placeholder}\n                showOnline={false}\n                showUnread={false}\n                showContextMenu={false}\n                onTopicSelected={this.handleContactSelected} />\n            </div>}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicView);\n","// A password reset form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\n\nexport default class PasswordResetView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n  }\n\n  componentDidMount() {\n    let parsed = HashNavigation.parseUrlHash(window.location.hash);\n    this.setState({token: parsed.params.token, scheme: parsed.params.scheme});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.token) {\n      this.props.onReset(this.state.scheme, this.state.password.trim(), this.state.token);\n    } else {\n      this.props.onRequest('email', this.state.email.trim());\n    }\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  render() {\n    let reset = (this.state.token && this.state.scheme);\n    return (\n      <form id=\"password-reset-form\" onSubmit={this.handleSubmit}>\n        {reset ?\n          <FormattedMessage id=\"new_password_placeholder\" defaultMessage=\"Enter new password\"\n            description=\"Placeholder for entering new password\">{\n            (placeholder) => <VisiblePassword\n              placeholder={placeholder}\n              autoComplete=\"new-password\"\n              value={this.state.password}\n              required={true} autoFocus={true}\n              onChange={this.handlePasswordChange} />\n          }</FormattedMessage>\n          :\n          <>\n            <label htmlFor=\"inputEmail\">\n              <FormattedMessage id=\"label_reset_password\"\n                defaultMessage=\"Send a password reset email:\"\n                description=\"Label for password reset field\" />\n            </label>\n            <FormattedMessage id=\"credential_email_prompt\" defaultMessage=\"Your registration email\"\n              description=\"Placeholder for entering email\">{\n              (placeholder) => <input type=\"email\" id=\"inputEmail\"\n                placeholder={placeholder}\n                autoComplete=\"email\"\n                value={this.state.email}\n                onChange={this.handleEmailChange}\n                required autoFocus />\n            }</FormattedMessage>\n          </>\n        }\n        <div className=\"dialog-buttons\">\n          <button className=\"primary\" type=\"submit\">{reset ?\n            <FormattedMessage id=\"button_reset\" defaultMessage=\"Reset\" description=\"Button [Reset]\" /> :\n            <FormattedMessage id=\"button_send_request\" defaultMessage=\"Send request\"\n              description=\"Button [Send request]\" />\n          }</button>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react';\n\nimport { KNOWN_HOSTS } from '../config.js';\n\n/* Combobox for selecting host name */\n\nexport default class HostSelector extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hostName: props.serverAddress,\n      changed: false\n    };\n\n    this.handleHostNameChange = this.handleHostNameChange.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handleHostNameChange(e) {\n    this.setState({hostName: e.target.value, changed: true});\n  }\n\n  handleEditingFinished() {\n    if (this.state.changed) {\n      this.setState({changed: false});\n      this.props.onServerAddressChange(this.state.hostName.trim());\n    }\n  }\n\n  render() {\n    var hostOptions = [];\n    for (let key in KNOWN_HOSTS) {\n      let item = KNOWN_HOSTS[key];\n      hostOptions.push(\n        <option key={item} value={item} />\n      );\n    }\n    return (\n      <div className=\"panel-form-row\">\n        <input type=\"search\" id=\"host-name\" placeholder={this.props.hostName} list=\"known-hosts\"\n          className=\"quoted\" value={this.state.hostName} onChange={this.handleHostNameChange}\n          onBlur={this.handleEditingFinished} required />\n        <datalist id=\"known-hosts\">\n          {hostOptions}\n        </datalist>\n      </div>\n    );\n  }\n}\n","// Tinode config panel.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport HostSelector from '../widgets/host-selector.jsx';\n\nexport default class SettingsView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transport: props.transport || 'def',\n      serverAddress: props.serverAddress,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleTransportSelected = this.handleTransportSelected.bind(this);\n    this.handleServerAddressChange = this.handleServerAddressChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onUpdate({\n      transport: this.state.transport,\n      serverAddress: this.state.serverAddress\n    });\n  }\n\n  handleTransportSelected(e) {\n    this.setState({transport: e.currentTarget.value});\n  }\n\n  handleServerAddressChange(name) {\n    this.setState({serverAddress: name});\n  }\n\n  render() {\n    const names = {def: \"default\", ws: \"websocket\", lp: \"long polling\"};\n    const transportOptions = [];\n    ['def', 'ws', 'lp'].map((item) => {\n      const id = 'transport-' + item;\n      const name = names[item];\n      transportOptions.push(\n        <li key={item}>\n          <input type=\"radio\" id={id} name=\"transport-select\" value={item}\n            checked={this.state.transport === item}\n            onChange={this.handleTransportSelected} />\n          <label htmlFor={id}>{name}</label>\n        </li>\n      );\n    });\n\n    return (\n      <form id=\"settings-form\" className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_server_to_use\" defaultMessage=\"Server to use:\"\n              description=\"Label for server selector in SettingsView\" />\n          </label>\n        </div>\n        <HostSelector serverAddress={this.state.serverAddress}\n          onServerAddressChange={this.handleServerAddressChange} />\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_wire_transport\" defaultMessage=\"Wire transport:\"\n              description=\"Label for wire transport selection in SettingsView\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ul className=\"quoted\">\n            {transportOptions}\n          </ul>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button type=\"submit\" className=\"primary\">\n            <FormattedMessage id=\"button_update\" defaultMessage=\"Update\"\n              description=\"Button [Update]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// ValidationView: panel for confirming credentials, like email or phone.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  phone: {\n    id: 'phone_dative',\n    defaultMessage: 'phone',\n    description: \"Dative case of 'phone', i.e. 'phone' in 'by phone'\",\n  },\n  email: {\n    id: 'email_dative',\n    defaultMessage: 'email',\n    description: \"Dative case of 'email', i.e. 'email' in 'by email'\",\n  }\n});\n\nclass ValidationView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      code: props.credCode || ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({code: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    } else if (e.key == 'Escape') {\n      this.handleCancel(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.code && this.state.code.trim()) {\n      this.props.onSubmit(this.props.credMethod, this.state.code.trim());\n    }\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel();\n  }\n\n\n  render() {\n    const { formatMessage } = this.props.intl;\n    const methods = {'email': formatMessage(messages.email), 'tel': formatMessage(messages.phone)};\n    let method = methods[this.props.credMethod] || this.props.credMethod;\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\" htmlFor=\"enter-confirmation-code\">\n            <FormattedMessage id=\"enter_confirmation_code_prompt\"\n              defaultMessage=\"Enter confirmation code sent to you by {method}:\"\n              description=\"Request to enter confirmation code\"\n              values={{method: method}} />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"numeric_confirmation_code_prompt\"\n          defaultMessage=\"Numbers only\" description=\"Prompt for numeric conformation code\">{\n          (numbers_only) => <input type=\"text\" id=\"enter-confirmation-code\"\n            placeholder={numbers_only}\n            value={this.state.code} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"secondary\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_confirm\" defaultMessage=\"Confirm\" description=\"Button [Confirm]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ValidationView);\n","import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport SideNavbar from '../widgets/side-navbar.jsx';\n\nimport AccountSettingsView from './account-settings-view.jsx';\nimport ContactsView from './contacts-view.jsx';\nimport CreateAccountView from './create-account-view.jsx';\nimport TopicCommonView from './topic-common-view.jsx';\nimport AccNotificationsView from './acc-notifications-view.jsx';\nimport AccSecurityView from './acc-security-view.jsx';\nimport AccSupportView from './acc-support-view.jsx';\nimport LoginView from './login-view.jsx';\nimport NewTopicView from './new-topic-view.jsx';\nimport PasswordResetView from './password-reset-view.jsx';\nimport SettingsView from './settings-view.jsx';\nimport ValidationView from './validation-view.jsx';\n\n// Panel titles for translation.\nconst messages = defineMessages({\n  login: {\n    id: 'sidepanel_title_login',\n    description: 'Sidepanel title for LoginView.',\n    defaultMessage: 'Sign In'\n  },\n  register: {\n    id: 'sidepanel_title_register',\n    description: 'Sidepanel title for CreateAccountView.',\n    defaultMessage: 'Create Account'\n  },\n  settings: {\n    id: 'sidepanel_title_settings',\n    description: 'Sidepanel title for SettingsView.',\n    defaultMessage: 'Settings'\n  },\n  edit: {\n    id: 'sidepanel_title_account_settings',\n    description: 'Sidepanel title for AccountSettingsView.',\n    defaultMessage: 'Account Settings'\n  },\n  general: {\n    id: 'sidepanel_title_acc_general',\n    description: 'Sidepanel title for TopicCommonView.',\n    defaultMessage: 'General'\n  },\n  security: {\n    id: 'sidepanel_title_acc_security',\n    description: 'Sidepanel title for AccSecurityView.',\n    defaultMessage: 'Security'\n  },\n  crop: {\n    id: 'sidepanel_title_crop',\n    description: 'Sidepanel title for AvatarCropView.',\n    defaultMessage: 'Drag to Adjust'\n  },\n  notif: {\n    id: 'sidepanel_title_acc_notifications',\n    description: 'Sidepanel title for AccNotificationsView.',\n    defaultMessage: 'Notifications'\n  },\n  support: {\n    id: 'sidepanel_title_acc_support',\n    description: 'Sidepanel title for AccSupportView.',\n    defaultMessage: 'Support'\n  },\n  newtpk: {\n    id: 'sidepanel_title_newtpk',\n    description: 'Sidepanel title for NewTopicView.',\n    defaultMessage: 'Start New Chat'\n  },\n  cred: {\n    id: 'sidepanel_title_cred',\n    description: 'Sidepanel title for ValidationView.',\n    defaultMessage: 'Confirm Credentials'\n  },\n  reset: {\n    id: 'sidepanel_title_reset',\n    description: 'Sidepanel title for PasswordResetView.',\n    defaultMessage: 'Reset Password'\n  },\n  archive: {\n    id: 'sidepanel_title_archive',\n    description: 'Sidepanel title for ContactsView-Archive.',\n    defaultMessage: 'Archived Chats'\n  },\n  blocked: {\n    id: 'sidepanel_title_blocked',\n    description: 'Sidepanel title for ContactsView-Blocked.',\n    defaultMessage: 'Blocked Chats'\n  }\n});\n\nclass SidepanelView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNewTopic = this.handleNewTopic.bind(this);\n  }\n\n  handleNewTopic() {\n    this.props.onBasicNavigate('newtpk');\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const view = this.props.state || (this.props.myUserId ? 'contacts' : 'login');\n\n    let title, avatar, badges;\n    if (view == 'contacts') {\n      title = this.props.title;\n      avatar = this.props.avatar ? this.props.avatar : true;\n      badges = this.props.trustedBadges;\n    } else {\n      title = formatMessage(messages[view]);\n      avatar = false;\n      badges = null;\n    }\n\n    let onCancel;\n    if (['login', 'contacts'].indexOf(view) == -1) {\n      onCancel = this.props.onCancel;\n    }\n\n    return (\n      <div id=\"sidepanel\" className={this.props.hideSelf ? 'nodisplay' : null}>\n        <SideNavbar\n          state={view}\n          title={title}\n          avatar={avatar}\n          tinode={this.props.tinode}\n          trustedBadges={badges}\n          myUserId={this.props.myUserId}\n          onSignUp={this.props.onSignUp}\n          onSettings={this.props.onSettings}\n          onNewTopic={this.handleNewTopic}\n          onCancel={onCancel} />\n\n        <ErrorPanel\n          level={this.props.errorLevel}\n          text={this.props.errorText}\n          action={this.props.errorAction}\n          actionText={this.props.errorActionText}\n          onClearError={this.props.onError} />\n\n        <LoadSpinner show={this.props.loadSpinnerVisible} />\n\n        {view === 'login' ?\n          <LoginView\n            login={this.props.login}\n            disabled={this.props.loginDisabled}\n            persist={this.props.persist}\n            onLogin={this.props.onLoginRequest}\n            onPersistenceChange={this.props.onPersistenceChange} /> :\n\n          view === 'register' ?\n          <CreateAccountView\n            tinode={this.props.tinode}\n            onCreateAccount={this.props.onCreateAccount}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'settings' ?\n          <SettingsView\n            transport={this.props.transport}\n            serverAddress={this.props.serverAddress}\n            onCancel={this.props.onCancel}\n            onUpdate={this.props.onGlobalSettings} /> :\n\n          view === 'edit' ?\n          <AccountSettingsView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            trustedBadges={this.props.trustedBadges}\n            onBasicNavigate={this.props.onBasicNavigate} /> :\n\n          (view === 'general' || view === 'crop') ?\n          <TopicCommonView\n            topic=\"me\"\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            onBasicNavigate={this.props.onBasicNavigate}\n            onUpdateTopicDesc={this.props.onUpdateAccountDesc}\n            onUpdateTags={this.props.onUpdateAccountTags}\n            onCredAdd={this.props.onCredAdd}\n            onCredDelete={this.props.onCredDelete}\n            onCredConfirm={this.props.onCredConfirm}\n            onError={this.props.onError} /> :\n\n          view === 'notif' ?\n          <AccNotificationsView\n            messageSounds={this.props.messageSounds}\n            desktopAlerts={this.props.desktopAlerts}\n            desktopAlertsEnabled={this.props.desktopAlertsEnabled}\n            incognitoMode={this.props.incognitoMode}\n            onTogglePushNotifications={this.props.onTogglePushNotifications}\n            onToggleMessageSounds={this.props.onToggleMessageSounds}\n            onToggleIncognitoMode={this.props.onToggleIncognitoMode} /> :\n\n          view === 'security' ?\n          <AccSecurityView\n            tinode={this.props.tinode}\n            onUpdateAccountDesc={this.props.onUpdateAccountDesc}\n            onUpdatePassword={this.props.onUpdatePassword}\n            onLogout={this.props.onLogout}\n            onDeleteAccount={this.props.onDeleteAccount}\n            onShowAlert={this.props.onShowAlert}\n            onShowBlocked={this.props.onShowBlocked} /> :\n\n          view === 'support' ?\n          <AccSupportView\n            serverAddress={this.props.serverAddress}\n            serverVersion={this.props.serverVersion} /> :\n\n          (view === 'contacts' || view == 'archive' || view == 'blocked') ?\n          <ContactsView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            connected={this.props.connected}\n            topicSelected={this.props.topicSelected}\n            archive={view == 'archive'}\n            blocked={view == 'blocked'}\n            chatList={this.props.chatList}\n            showContextMenu={this.props.showContextMenu}\n            onTopicSelected={this.props.onTopicSelected}\n            onShowArchive={this.props.onShowArchive} /> :\n\n          view === 'newtpk' ?\n          <NewTopicView\n            tinode={this.props.tinode}\n            searchResults={this.props.searchResults}\n            onInitFind={this.props.onInitFind}\n            onSearchContacts={this.props.onSearchContacts}\n            onCreateTopic={this.props.onCreateTopic}\n            onError={this.props.onError} /> :\n\n          view === 'cred' ?\n          <ValidationView\n            credCode={this.props.credCode}\n            credMethod={this.props.credMethod}\n            onSubmit={this.props.onValidateCredentials}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'reset' ?\n          <PasswordResetView\n            onRequest={this.props.onPasswordResetRequest}\n            onReset={this.props.onResetPassword} /> :\n\n          null}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SidepanelView);\n","import { KNOWN_HOSTS, DEFAULT_HOST } from '../config.js';\n\n// Detect server address from the URL\nexport function detectServerAddress() {\n  let host = DEFAULT_HOST;\n  if (typeof window.location == 'object') {\n    if (window.location.protocol == 'file:' || window.location.hostname == 'localhost') {\n      host = KNOWN_HOSTS.local;\n    } else if (window.location.hostname) {\n      host = window.location.hostname + (window.location.port ? ':' + window.location.port : '');\n    }\n  }\n  return host;\n}\n\n// Detect if the page is served over HTTPS.\nexport function isSecureConnection() {\n  if (typeof window.location == 'object') {\n    return window.location.protocol == 'https:';\n  }\n  return false;\n}\n\nexport function isLocalHost() {\n  if (typeof window.location == 'object') {\n    return window.location.hostname == 'localhost';\n  }\n  return false;\n}\n","// The top-level class to hold all functionality together.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport * as firebase from 'firebase/app';\nimport 'firebase/messaging';\n\nimport Tinode from 'tinode-sdk';\n\nimport Alert from '../widgets/alert.jsx';\nimport ContextMenu from '../widgets/context-menu.jsx';\n\nimport InfoView from './info-view.jsx';\nimport MessagesView from './messages-view.jsx';\nimport SidepanelView from './sidepanel-view.jsx';\n\nimport { API_KEY, APP_NAME, DEFAULT_P2P_ACCESS_MODE, LOGGING_ENABLED,\n  MEDIA_BREAKPOINT, RECEIVED_DELAY } from '../config.js';\nimport { PACKAGE_VERSION } from '../version.js';\nimport { base64ReEncode, makeImageUrl } from '../lib/blob-helpers.js';\nimport { detectServerAddress, isLocalHost, isSecureConnection } from '../lib/host-name.js';\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { secondsToTime } from '../lib/strformat.js'\nimport { updateFavicon } from '../lib/utils.js';\n\n// Sound to play on message received.\nconst POP_SOUND = new Audio('audio/msg.mp3');\n\nconst messages = defineMessages({\n  reconnect_countdown: {\n    id: 'reconnect_countdown',\n    defaultMessage: 'Disconnected. Reconnecting in {seconds}…',\n    description: 'Message shown when an app update is available.'\n  },\n  reconnect_now: {\n    id: 'reconnect_now',\n    defaultMessage: 'Try now',\n    description: 'Prompt for reconnecting now'\n  },\n  push_init_failed: {\n    id: 'push_init_failed',\n    defaultMessage: 'Failed to initialize push notifications',\n    description: 'Error message when push notifications have failed to initialize.'\n  },\n  invalid_security_token: {\n    id: 'invalid_security_token',\n    defaultMessage: 'Invalid security token',\n    description: 'Error message when resetting password.'\n  },\n  no_connection: {\n    id: 'no_connection',\n    defaultMessage: 'No connection',\n    description: 'Warning that the user is offline.'\n  },\n  code_doesnot_match: {\n    id: 'code_doesnot_match',\n    defaultMessage: 'Code does not match',\n    description: 'Error message when the credential validation code is incorrect.'\n  },\n  menu_item_info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  }\n});\n\nclass TinodeWeb extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selfRef = React.createRef();\n\n    this.state = this.getBlankState();\n\n    this.handleResize = this.handleResize.bind(this);\n    this.handleHashRoute = this.handleHashRoute.bind(this);\n    this.handleOnline = this.handleOnline.bind(this);\n    this.checkForAppUpdate = this.checkForAppUpdate.bind(this);\n    this.handleVisibilityEvent = this.handleVisibilityEvent.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.handleLoginRequest = this.handleLoginRequest.bind(this);\n    this.handlePersistenceChange = this.handlePersistenceChange.bind(this);\n    this.handleConnected = this.handleConnected.bind(this);\n    this.handleAutoreconnectIteration = this.handleAutoreconnectIteration.bind(this);\n    this.doLogin = this.doLogin.bind(this);\n    this.handleCredentialsRequest = this.handleCredentialsRequest.bind(this);\n    this.handleLoginSuccessful = this.handleLoginSuccessful.bind(this);\n    this.handleDisconnect = this.handleDisconnect.bind(this);\n    this.tnMeMetaDesc = this.tnMeMetaDesc.bind(this);\n    this.tnMeContactUpdate = this.tnMeContactUpdate.bind(this);\n    this.tnMeSubsUpdated = this.tnMeSubsUpdated.bind(this);\n    this.resetContactList = this.resetContactList.bind(this);\n    this.tnData = this.tnData.bind(this);\n    this.tnInitFind = this.tnInitFind.bind(this);\n    this.tnFndSubsUpdated = this.tnFndSubsUpdated.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleTopicSelected = this.handleTopicSelected.bind(this);\n    this.handleHideMessagesView = this.handleHideMessagesView.bind(this);\n    this.handleSendMessage = this.handleSendMessage.bind(this);\n    this.handleNewChatInvitation = this.handleNewChatInvitation.bind(this);\n    this.handleNewAccount = this.handleNewAccount.bind(this);\n    this.handleNewAccountRequest = this.handleNewAccountRequest.bind(this);\n    this.handleUpdatePasswordRequest = this.handleUpdatePasswordRequest.bind(this);\n    this.handleUpdateAccountTagsRequest = this.handleUpdateAccountTagsRequest.bind(this);\n    this.handleToggleIncognitoMode = this.handleToggleIncognitoMode.bind(this);\n    this.handleSettings = this.handleSettings.bind(this);\n    this.handleGlobalSettings = this.handleGlobalSettings.bind(this);\n    this.handleShowArchive = this.handleShowArchive.bind(this);\n    this.handleShowBlocked = this.handleShowBlocked.bind(this);\n    this.handleToggleMessageSounds = this.handleToggleMessageSounds.bind(this);\n    this.handleCredAdd = this.handleCredAdd.bind(this);\n    this.handleCredDelete = this.handleCredDelete.bind(this);\n    this.handleCredConfirm = this.handleCredConfirm.bind(this);\n    this.initFCMessaging = this.initFCMessaging.bind(this);\n    this.togglePushToken = this.togglePushToken.bind(this);\n    this.requestPushToken = this.requestPushToken.bind(this);\n    this.handlePushMessage = this.handlePushMessage.bind(this);\n    this.handleSidepanelCancel = this.handleSidepanelCancel.bind(this);\n    this.handleStartTopicRequest = this.handleStartTopicRequest.bind(this);\n    this.handleNewTopicCreated = this.handleNewTopicCreated.bind(this);\n    this.handleTopicUpdateRequest = this.handleTopicUpdateRequest.bind(this);\n    this.handleChangePermissions = this.handleChangePermissions.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n    this.handleDeleteMessagesRequest = this.handleDeleteMessagesRequest.bind(this);\n    this.handleLeaveUnsubRequest = this.handleLeaveUnsubRequest.bind(this);\n    this.handleBlockTopicRequest = this.handleBlockTopicRequest.bind(this);\n    this.handleReportTopic = this.handleReportTopic.bind(this);\n    this.handleShowContextMenu = this.handleShowContextMenu.bind(this);\n    this.defaultTopicContextMenu = this.defaultTopicContextMenu.bind(this);\n    this.handleHideContextMenu = this.handleHideContextMenu.bind(this);\n    this.handleShowAlert = this.handleShowAlert.bind(this);\n    this.handleShowInfoView = this.handleShowInfoView.bind(this);\n    this.handleHideInfoView = this.handleHideInfoView.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleValidateCredentialsRequest = this.handleValidateCredentialsRequest.bind(this);\n    this.handlePasswordResetRequest = this.handlePasswordResetRequest.bind(this);\n    this.handleResetPassword = this.handleResetPassword.bind(this);\n    this.handleContextMenuAction = this.handleContextMenuAction.bind(this);\n  }\n\n  getBlankState() {\n    const settings = LocalStorageUtil.getObject('settings') || {};\n    const persist = !!LocalStorageUtil.getObject('keep-logged-in');\n\n    return {\n      connected: false,\n      // Connected and subscribed to 'me'\n      ready: false,\n      // Try to re-login on new connection.\n      autoLogin: false,\n      transport: settings.transport || null,\n      serverAddress: settings.serverAddress || detectServerAddress(),\n      serverVersion: \"no connection\",\n      // \"On\" is the default, so saving the \"off\" state.\n      messageSounds: !settings.messageSoundsOff,\n      incognitoMode: false,\n      desktopAlerts: persist && settings.desktopAlerts,\n      desktopAlertsEnabled: (isSecureConnection() || isLocalHost()) &&\n        (typeof firebase != 'undefined') && (typeof navigator != 'undefined') &&\n        (typeof FIREBASE_INIT != 'undefined'),\n      firebaseToken: persist ? LocalStorageUtil.getObject('firebase-token') : null,\n\n      applicationVisible: !document.hidden,\n\n      errorText: '',\n      errorLevel: null,\n      errorAction: undefined,\n      errorActionText: null,\n\n      sidePanelSelected: 'login',\n      sidePanelTitle: null,\n      sidePanelAvatar: null,\n      myTrustedBadges: [],\n      loadSpinnerVisible: false,\n\n      login: '',\n      password: '',\n      persist: persist,\n      myUserId: null,\n      liveConnection: navigator.onLine,\n      topicSelected: '',\n      topicSelectedOnline: false,\n      topicSelectedAcs: null,\n      newTopicParams: null,\n      loginDisabled: false,\n      displayMobile: (window.innerWidth <= MEDIA_BREAKPOINT),\n      showInfoPanel: false,\n      mobilePanel: 'sidepanel',\n\n      contextMenuVisible: false,\n      contextMenuBounds: null,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuItems: [],\n\n      // Modal alert dialog.\n      alertVisible: false,\n      alertParams: {},\n\n      // Chats as shown in the ContactsView\n      chatList: [],\n      // Contacts returned by a search query.\n      searchResults: [],\n      // Merged results of a search query and p2p chats.\n      searchableContacts: [],\n      credMethod: undefined,\n      credCode: undefined,\n      // Topic to go to after login.\n      requestedTopic: undefined\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    window.addEventListener('online', (e) => { this.handleOnline(true); });\n    window.addEventListener('offline', (e) => { this.handleOnline(false); });\n    window.addEventListener('hashchange', this.handleHashRoute);\n\n    // Process background notifications from the service worker.\n    if (typeof BroadcastChannel == 'function') {\n      const serviceWorkerChannel = new BroadcastChannel('tinode-sw');\n      serviceWorkerChannel.addEventListener('message', this.handlePushMessage);\n    } else {\n      // Safari is broken by design.\n      console.warn('Your browser does not support BroadcastChannel. Some features will not be available');\n    }\n\n    // Window/tab visible or invisible for pausing timers.\n    document.addEventListener('visibilitychange', this.handleVisibilityEvent);\n\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n\n    new Promise((resolve, reject) => {\n      this.tinode = TinodeWeb.tnSetup(this.state.serverAddress, this.state.transport,\n        this.props.intl.locale, this.state.persist, resolve);\n      this.tinode.onConnect = this.handleConnected;\n      this.tinode.onDisconnect = this.handleDisconnect;\n      this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n    }).then(() => {\n      // Initialize desktop alerts.\n      if (this.state.desktopAlertsEnabled) {\n        this.initFCMessaging().then(() => {\n          if (this.state.desktopAlerts) {\n            if (!this.state.firebaseToken) {\n              this.togglePushToken(true);\n            } else {\n              this.tinode.setDeviceToken(this.state.firebaseToken);\n            }\n          }\n        }).catch(() => {\n          // do nothing: handled earlier.\n          // catch needed to pervent unnecessary logging of error.\n        });\n      }\n\n      // Parse and save the hash navigation params.\n      const parsedNav = HashNavigation.parseUrlHash(window.location.hash);\n\n      // Read contacts from cache.\n      this.resetContactList();\n\n      const token = this.state.persist ? LocalStorageUtil.getObject('auth-token') : undefined;\n      if (token) {\n        this.setState({autoLogin: true});\n\n        // When reading from storage, date is returned as string.\n        token.expires = new Date(token.expires);\n        this.tinode.setAuthToken(token);\n        this.tinode.connect().catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n      }\n\n      // Save possible topic name and navigate to blank state.\n      this.setState({requestedTopic: parsedNav.path[1]});\n      HashNavigation.navigateTo('');\n\n      this.readTimer = null;\n      this.readTimerCallback = null;\n\n      this.handleHashRoute();\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n    window.removeEventListener('hashchange', this.handleHashRoute);\n    document.removeEventListener('visibilitychange', this.handleVisibilityEvent);\n  }\n\n  // Setup transport (usually websocket) and server address. This will terminate connection with the server.\n  static tnSetup(serverAddress, transport, locale, persistentCache, onSetupCompleted) {\n    const tinode = new Tinode({appName: APP_NAME, host: serverAddress, apiKey: API_KEY, transport: transport,\n      secure: isSecureConnection(), persist: persistentCache}, onSetupCompleted);\n    tinode.setHumanLanguage(locale);\n    tinode.enableLogging(LOGGING_ENABLED, true);\n    return tinode;\n  }\n\n  // Notifiy Tinode that a push message was received from the server.\n  handlePushMessage(data) {\n    if (data.what == 'msg' && Tinode.isChannelTopicName(data.topic)) {\n      // The last argument is a fake user Id: otherwise the update is seen as one from the current user.\n      this.tinode.oobNotification(data.topic, data.seq, 'fake-uid');\n    }\n  }\n\n  initFCMessaging() {\n    const {formatMessage, locale} = this.props.intl;\n    const onError = (msg, err) => {\n      console.error(msg, err);\n      this.handleError(formatMessage(messages.push_init_failed), 'err');\n      this.setState({desktopAlertsEnabled: false});\n    }\n\n    try {\n      this.fbPush = firebase.initializeApp(FIREBASE_INIT, APP_NAME).messaging();\n      this.fbPush.usePublicVapidKey(FIREBASE_INIT.messagingVapidKey);\n\n      return navigator.serviceWorker.register('/service-worker.js').then((reg) => {\n        this.checkForAppUpdate(reg);\n        this.fbPush.useServiceWorker(reg);\n        reg.active.postMessage(JSON.stringify({locale: locale, version: PACKAGE_VERSION}));\n\n        // Google could not be bothered to mention that onTokenRefresh is never called.\n        this.fbPush.onTokenRefresh(() => {\n          this.requestPushToken();\n        });\n\n        // Handhe FCM pushes\n        // (a) for channels always,\n        // (b) pushes when the app is in foreground but has not focus.\n        this.fbPush.onMessage(payload => { this.handlePushMessage(payload.data); });\n\n        return reg;\n      }).catch((err) => {\n        // registration failed :(\n        onError(\"Failed to register service worker:\", err);\n        return Promise.reject(err);\n      });\n    } catch (err) {\n      onError(\"Failed to initialize push notifications\", err);\n      return Promise.reject(err);\n    }\n  }\n\n  handleResize() {\n    const mobile = document.documentElement.clientWidth <= MEDIA_BREAKPOINT;\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n    if (this.state.displayMobile != mobile) {\n      this.setState({displayMobile: mobile});\n    }\n  }\n\n  // Check if a newer version of TinodeWeb app is available at the server.\n  checkForAppUpdate(reg) {\n    reg.onupdatefound = () => {\n      const installingWorker = reg.installing;\n      installingWorker.onstatechange = () => {\n        if (installingWorker.state == 'installed' && navigator.serviceWorker.controller) {\n          const msg = <>\n            <FormattedMessage id=\"update_available\"\n              defaultMessage=\"Update available.\"\n              description=\"Message shown when an app update is available.\" /> <a href=\"\">\n              <FormattedMessage id=\"reload_update\"\n                defaultMessage=\"Reload\"\n                description=\"Call to action to reload application when update is available.\" />\n            </a>.</>;\n          this.handleError(msg, 'info');\n        }\n      }\n    }\n  }\n\n  // Handle for hashchange event: display appropriate panels.\n  handleHashRoute() {\n    const hash = HashNavigation.parseUrlHash(window.location.hash);\n    if (hash.path && hash.path.length > 0) {\n      // Left-side panel selector.\n      if (['register','settings','edit','notif','security','support','general','crop',\n          'cred','reset','newtpk','archive','blocked','contacts',''].includes(hash.path[0])) {\n        this.setState({sidePanelSelected: hash.path[0]});\n      } else {\n        console.info(\"Unknown sidepanel view\", hash.path[0]);\n      }\n\n      // Topic for MessagesView selector.\n      const topicName = hash.path[1];\n      if (Tinode.topicType(topicName) && topicName != this.state.topicSelected) {\n          const newState = {\n            topicSelected: topicName\n          };\n          const acs = this.tinode.getTopicAccessMode(topicName);\n          if (acs) {\n            newState.topicSelectedAcs = acs;\n          }\n          this.setState(newState);\n      }\n    } else {\n      // Empty hashpath\n      this.setState({sidePanelSelected: ''});\n    }\n\n    // Save validation credentials, if available.\n    if (hash.params.method) {\n      this.setState({ credMethod: hash.params.method });\n    }\n    if (hash.params.code) {\n      this.setState({ credCode: hash.params.code });\n    }\n\n    // Additional parameters of panels.\n    this.setState({\n      showInfoPanel: hash.params.info,\n      newTopicTabSelected: hash.params.tab\n    });\n  }\n\n  handleOnline(online) {\n    if (online) {\n      this.handleError();\n      clearInterval(this.reconnectCountdown);\n      this.tinode.reconnect();\n    } else {\n      this.handleError(this.props.intl.formatMessage(messages.no_connection), 'warn');\n    }\n    this.setState({liveConnection: online});\n  }\n\n  handleVisibilityEvent() {\n    this.setState({applicationVisible: !document.hidden});\n  }\n\n  handleError(err, level, action, actionText) {\n    this.setState({errorText: err, errorLevel: level, errorAction: action, errorActionText: actionText});\n  }\n\n  // User clicked Login button in the side panel.\n  handleLoginRequest(login, password) {\n    this.setState({\n      loginDisabled: true,\n      login: login,\n      password: password,\n      loadSpinnerVisible: true,\n      autoLogin: true\n    });\n    this.handleError('', null);\n\n    if (this.tinode.isConnected()) {\n      this.doLogin(login, password, {meth: this.state.credMethod, resp: this.state.credCode});\n    } else {\n      this.tinode.connect().catch((err) => {\n        // Socket error\n        this.setState({loginDisabled: false, autoLogin: false, loadSpinnerVisible: false});\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // Enable or disable saving the password and IndexedDB.\n  handlePersistenceChange(persist) {\n    if (persist) {\n      this.tinode.initStorage().then(() => {\n        LocalStorageUtil.setObject('keep-logged-in', true);\n        this.setState({persist: true});\n      });\n    } else {\n      this.tinode.clearStorage().then(() => {\n        LocalStorageUtil.setObject('keep-logged-in', false);\n        this.setState({persist: false});\n      });\n    }\n  }\n\n  // Connection succeeded.\n  handleConnected() {\n    // Just to be sure.\n    clearInterval(this.reconnectCountdown);\n    this.handleError();\n\n    const params = this.tinode.getServerInfo();\n    this.setState({\n      serverVersion: params.ver + ' ' + (params.build ? params.build : 'none')\n    });\n\n    if (this.state.autoLogin) {\n      this.doLogin(this.state.login, this.state.password, {meth: this.state.credMethod, resp: this.state.credCode});\n    }\n  }\n\n  // Called for each auto-reconnect iteration.\n  handleAutoreconnectIteration(sec, prom) {\n    clearInterval(this.reconnectCountdown);\n\n    if (sec < 0) {\n      // Clear error\n      this.handleError();\n      return;\n    }\n\n    if (prom) {\n      // Reconnecting now\n      prom.then(() => {\n        // Reconnected: clear error\n        this.handleError();\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n      return;\n    }\n\n    const {formatMessage} = this.props.intl;\n    let count = sec / 1000;\n    count = count | count;\n    this.reconnectCountdown = setInterval(() => {\n      const timeLeft = (count > 99) ? secondsToTime(count) : count;\n      this.handleError(\n        formatMessage(messages.reconnect_countdown, {seconds: timeLeft}),\n        'warn',\n        () => {\n          clearInterval(this.reconnectCountdown);\n          this.tinode.reconnect();\n        },\n        formatMessage(messages.reconnect_now)\n      );\n      count -= 1;\n    }, 1000);\n  }\n\n  // Connection lost\n  handleDisconnect(err) {\n    this.setState({\n      connected: false,\n      ready: false,\n      topicSelectedOnline: false,\n      errorText: err && err.message ? err.message : \"Disconnected\",\n      errorLevel: err && err.message ? 'err' : 'warn',\n      loginDisabled: false,\n      contextMenuVisible: false,\n      serverVersion: \"no connection\"\n    });\n  }\n\n  doLogin(login, password, cred) {\n    if (this.tinode.isAuthenticated()) {\n      // Already logged in. Go to default screen.\n      HashNavigation.navigateTo('');\n      return;\n    }\n    // Sanitize and package credentail.\n    cred = Tinode.credential(cred);\n    // Try to login with login/password. If they are not available, try token. If no token, ask for login/password.\n    let promise = null;\n    const token = this.tinode.getAuthToken();\n    if (login && password) {\n      this.setState({password: null});\n      promise = this.tinode.loginBasic(login, password, cred);\n    } else if (token) {\n      promise = this.tinode.loginToken(token.token, cred);\n    }\n\n    if (promise) {\n      promise.then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text === 'validate credentials') {\n          this.setState({loadSpinnerVisible: false});\n          if (cred) {\n            this.handleError(this.props.intl.formatMessage(messages.code_doesnot_match), 'warn');\n          }\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful();\n        }\n      }).catch((err) => {\n        // Login failed, report error.\n        this.setState({\n          loginDisabled: false,\n          credMethod: undefined,\n          credCode: undefined,\n          loadSpinnerVisible: false,\n          autoLogin: false\n        });\n        this.handleError(err.message, 'err');\n        localStorage.removeItem('auth-token');\n        HashNavigation.navigateTo('');\n      });\n    } else {\n      // No login credentials provided.\n      // Make sure we are on the login page.\n      HashNavigation.navigateTo('');\n      this.setState({loginDisabled: false});\n    }\n  }\n\n  handleCredentialsRequest(params) {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    parsed.path[0] = 'cred';\n    parsed.params['method'] = params.cred[0];\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n  }\n\n  handleLoginSuccessful() {\n    this.handleError();\n\n    // Refresh authentication token.\n    if (LocalStorageUtil.getObject('keep-logged-in')) {\n      LocalStorageUtil.setObject('auth-token', this.tinode.getAuthToken());\n    }\n\n    const goToTopic = this.state.requestedTopic;\n    // Logged in fine, subscribe to 'me' attaching callbacks from the contacts view.\n    const me = this.tinode.getMeTopic();\n    me.onMetaDesc = this.tnMeMetaDesc;\n    me.onContactUpdate = this.tnMeContactUpdate;\n    me.onSubsUpdated = this.tnMeSubsUpdated;\n    this.setState({\n      connected: true,\n      credMethod: undefined,\n      credCode: undefined,\n      myUserId: this.tinode.getCurrentUserID(),\n      autoLogin: true,\n      requestedTopic: undefined,\n    });\n    // Subscribe, fetch topic desc, the list of subscriptions. Messages are not fetched.\n    me.subscribe(\n      me.startMetaQuery().\n        withLaterSub().\n        withDesc().\n        withTags().\n        withCred().\n        build()\n      ).catch((err) => {\n        this.tinode.disconnect();\n        localStorage.removeItem('auth-token');\n        this.handleError(err.message, 'err');\n        HashNavigation.navigateTo('');\n      }).finally(() => {\n        this.setState({loadSpinnerVisible: false});\n      });\n    let urlHash = HashNavigation.setUrlSidePanel(window.location.hash, 'contacts');\n    if (goToTopic) {\n      urlHash = HashNavigation.setUrlTopic(urlHash, goToTopic);\n    }\n    HashNavigation.navigateTo(urlHash);\n  }\n\n  tnMeMetaDesc(desc) {\n    if (desc) {\n      if (desc.public) {\n        this.setState({\n          sidePanelTitle: desc.public.fn,\n          sidePanelAvatar: makeImageUrl(desc.public.photo)\n        });\n      }\n      if (desc.trusted) {\n        const badges = [];\n        for (const [key, val] of Object.entries(desc.trusted)) {\n          if (val) {\n            badges.push(key);\n          }\n        }\n        this.setState({\n          myTrustedBadges: badges,\n        });\n      }\n      if (desc.acs) {\n        this.setState({\n          incognitoMode: !desc.acs.isPresencer()\n        });\n      }\n    }\n  }\n\n  // Reactions to updates to the contact list.\n  tnMeContactUpdate(what, cont) {\n    if (what == 'on' || what == 'off') {\n      this.resetContactList();\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedOnline: (what == 'on')});\n      }\n    } else if (what == 'read') {\n      this.resetContactList();\n    } else if (what == 'msg') {\n      // Check if the topic is archived. If so, don't play a sound.\n      const topic = this.tinode.getTopic(cont.topic);\n      const archived = topic && topic.isArchived();\n\n      // New message received. Maybe the message is from the current user, then unread is 0.\n      if (cont.unread > 0 && this.state.messageSounds && !archived) {\n        // Skip update if the topic is currently open, otherwise the badge will annoyingly flash.\n        if (document.hidden || this.state.topicSelected != cont.topic) {\n          POP_SOUND.play();\n        }\n      }\n      // Reorder contact list to use possibly updated 'touched'.\n      this.resetContactList();\n    } else if (what == 'recv') {\n      // Explicitly ignoring \"recv\" -- it causes no visible updates to contact list.\n    } else if (what == 'gone' || what == 'unsub') {\n      // Topic deleted or user unsubscribed. Remove topic from view.\n      // If the currently selected topic is gone, clear the selection.\n      if (this.state.topicSelected == cont.topic) {\n        this.handleTopicSelected(null);\n      }\n      // Redraw without the deleted topic.\n      this.resetContactList();\n    } else if (what == 'acs') {\n      // Permissions changed. If it's for the currently selected topic,\n      // update the views.\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedAcs: cont.acs});\n      }\n    } else if (what == 'del') {\n      // TODO: messages deleted (hard or soft) -- update pill counter.\n    } else if (what == 'upd') {\n      // upd - handled by the SDK. Explicitly ignoring here.\n    } else {\n      // TODO(gene): handle other types of notifications:\n      // * ua -- user agent changes (maybe display a pictogram for mobile/desktop).\n      console.info(\"Unsupported (yet) presence update:\" + what + \" in: \" + cont.topic);\n    }\n  }\n\n  tnMeSubsUpdated(unused) {\n    this.resetContactList();\n  }\n\n  // Merge search results and contact list to create a single flat\n  // list of known contacts for GroupManager to use.\n  static prepareSearchableContacts(chatList, foundContacts) {\n    const merged = {};\n\n    // For chatList topics merge only p2p topics and convert them to the\n    // same format as foundContacts.\n    for (const c of chatList) {\n      if (Tinode.isP2PTopicName(c.topic)) {\n          merged[c.topic] = {\n            user: c.topic,\n            updated: c.updated,\n            public: c.public,\n            private: c.private,\n            acs: c.acs\n          };\n      }\n    }\n\n    // Add all foundCountacts if they have not been added already.\n    for (const c of foundContacts) {\n      if (!merged[c.user]) {\n        merged[c.user] = c;\n      }\n    }\n\n    return Object.values(merged);\n  }\n\n  resetContactList() {\n    const newState = {\n      chatList: []\n    };\n\n    if (!this.state.ready) {\n      newState.ready = true;\n    }\n\n    this.tinode.getMeTopic().contacts((c) => {\n      if (!c.topic && !c.user) {\n        // Contacts expect c.topic to be set.\n        c.topic = c.name;\n      }\n\n      newState.chatList.push(c);\n      if (this.state.topicSelected == c.topic) {\n        newState.topicSelectedOnline = c.online;\n        newState.topicSelectedAcs = c.acs;\n      }\n    });\n    // Merge search results and chat list.\n    newState.searchableContacts = TinodeWeb.prepareSearchableContacts(newState.chatList, this.state.searchResults);\n    this.setState(newState);\n  }\n\n  // Sending \"received\" notifications\n  tnData(data) {\n    const topic = this.tinode.getTopic(data.topic);\n    if (topic.msgStatus(data, true) >= Tinode.MESSAGE_STATUS_SENT && data.from != this.state.myUserId) {\n      clearTimeout(this.receivedTimer);\n      this.receivedTimer = setTimeout(() => {\n        this.receivedTimer = undefined;\n        topic.noteRecv(data.seq);\n      }, RECEIVED_DELAY);\n    }\n  }\n\n  /* Fnd topic: find contacts by tokens */\n  tnInitFind() {\n    const fnd = this.tinode.getFndTopic();\n    fnd.onSubsUpdated = this.tnFndSubsUpdated;\n    if (fnd.isSubscribed()) {\n      this.tnFndSubsUpdated();\n    } else {\n      fnd.subscribe(fnd.startMetaQuery().withSub().build()).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  tnFndSubsUpdated() {\n    const foundContacts = [];\n    // Don't attempt to create P2P topics which already exist. Server will reject the duplicates.\n    this.tinode.getFndTopic().contacts((s) => {\n      foundContacts.push(s);\n    });\n    this.setState({\n      searchResults: foundContacts,\n      searchableContacts: TinodeWeb.prepareSearchableContacts(this.state.chatList, foundContacts)\n    });\n  }\n\n  /** Called when the user enters a contact into the contact search field in the NewAccount panel\n    @param query {Array} is an array of contacts to search for\n   */\n  handleSearchContacts(query) {\n    const fnd = this.tinode.getFndTopic();\n    fnd.setMeta({desc: {public: query}}).then((ctrl) => {\n      return fnd.getMeta(fnd.startMetaQuery().withSub().build());\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  // User clicked on a contact in the side panel or deleted a contact.\n  handleTopicSelected(topicName) {\n    // Clear newTopicParams after use.\n    if (this.state.newTopicParams && this.state.newTopicParams._topicName != topicName) {\n      this.setState({\n        newTopicParams: null\n      });\n    }\n\n    if (topicName) {\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'topic-view',\n        showInfoPanel: false\n      });\n      // Different contact selected.\n      if (this.state.topicSelected != topicName) {\n        this.setState({\n          topicSelectedOnline: this.tinode.isTopicOnline(topicName),\n          topicSelectedAcs: this.tinode.getTopicAccessMode(topicName)\n        });\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', topicName));\n      }\n    } else {\n      // Currently selected contact deleted\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'sidepanel',\n        topicSelectedOnline: false,\n        topicSelectedAcs: null,\n        showInfoPanel: false\n      });\n\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic('', null));\n    }\n  }\n\n  // In mobile view user requested to show sidepanel\n  handleHideMessagesView() {\n    this.setState({\n      mobilePanel: 'sidepanel'\n    });\n    HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, null));\n  }\n\n  // User is sending a message, either plain text or a drafty object, possibly\n  // with attachments.\n  //  - msg - Drafty message with content\n  //  - promise - Promise to be resolved when the upload is completed\n  //  - uploader - for tracking progress\n  handleSendMessage(msg, promise, uploader) {\n    const topic = this.tinode.getTopic(this.state.topicSelected);\n\n    msg = topic.createMessage(msg, false);\n    // The uploader is used to show progress.\n    msg._uploader = uploader;\n\n    if (!topic.isSubscribed()) {\n      if (!promise) {\n        promise = Promise.resolve();\n      }\n      promise = promise.then(() => { return topic.subscribe(); });\n    }\n\n    if (promise) {\n      promise = promise.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n\n    topic.publishDraft(msg, promise)\n      .then((ctrl) => {\n        if (topic.isArchived()) {\n          return topic.archive(false);\n        }\n      })\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleNewChatInvitation(topicName, action) {\n    const topic = this.tinode.getTopic(topicName);\n    let response = null;\n    switch (action) {\n      case 'accept':\n        // Accept given permissions.\n        const mode = topic.getAccessMode().getGiven();\n        response = topic.setMeta({sub: {mode: mode}});\n        if (topic.isP2PType()) {\n          // For P2P topics change 'given' permission of the peer too.\n          // In p2p topics the other user has the same name as the topic.\n          response = response.then((ctrl) => {\n            topic.setMeta({sub: {user: topicName, mode: mode}});\n          });\n        }\n        break;\n      case 'delete':\n        // Ignore invitation by deleting it.\n        response = topic.delTopic(true);\n        break;\n      case 'block':\n        // Ban the topic making futher invites impossible.\n        // Just self-ban.\n        const am = topic.getAccessMode().updateWant('-JP').getWant();\n        response = topic.setMeta({sub: {mode: am}}).then((ctrl) => {\n          return this.handleTopicSelected(null);\n        });\n        break;\n      default:\n        console.info(\"Unknown invitation action\", '\"' + action + '\"\"');\n    }\n\n    if (response != null) {\n      response.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // User chose a Sign Up menu item.\n  handleNewAccount() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, 'register'));\n  }\n\n  // Actual registration of a new account.\n  handleNewAccountRequest(login_, password_, public_, cred_, tags_) {\n    // Clear old error, if any.\n    this.handleError();\n\n    this.tinode.connect(this.state.serverAddress)\n      .then(() => {\n        return this.tinode.createAccountBasic(login_, password_,\n          {public: public_, tags: tags_, cred: Tinode.credential(cred_)});\n      }).then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text == 'validate credentials') {\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful(this);\n        }\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleToggleIncognitoMode(on) {\n    const me = this.tinode.getMeTopic();\n    const am = me.getAccessMode().updateWant(on ? '-P' : '+P').getWant();\n    me.setMeta({sub: {mode: am}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleUpdateAccountTagsRequest(tags) {\n    this.tinode.getMeTopic().setMeta({tags: tags})\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  // User chose Settings menu item.\n  handleSettings() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'edit' : 'settings'));\n  }\n\n  // User updated global parameters.\n  handleGlobalSettings(settings) {\n    const serverAddress = settings.serverAddress || this.state.serverAddress;\n    const transport = settings.transport || this.state.transport;\n    if (this.tinode) {\n      this.tinode.clearStorage();\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.tinode = TinodeWeb.tnSetup(serverAddress, transport, this.props.intl.locale,\n      LocalStorageUtil.getObject('keep-logged-in'));\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n\n    this.setState({\n      serverAddress: serverAddress,\n      transport: transport\n    });\n    LocalStorageUtil.setObject('settings', {\n      serverAddress: serverAddress,\n      transport: transport\n    });\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, ''));\n  }\n\n  // User chose 'Archived chats'.\n  handleShowArchive() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'archive' : ''));\n  }\n\n  // User viewes 'Blocked chats'.\n  handleShowBlocked() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'blocked' : ''));\n  }\n\n  togglePushToken(enabled) {\n    if (enabled) {\n      if (!this.state.firebaseToken) {\n        const fcm = this.fbPush ?\n          Promise.resolve() :\n          this.initFCMessaging();\n        fcm.then(() => {\n          return this.fbPush.requestPermission();\n        }).then(() => {\n          this.requestPushToken();\n        }).catch((err) => {\n          console.error(\"Failed to get notification permission.\", err);\n          this.handleError(err.message, 'err');\n          this.setState({desktopAlerts: false, firebaseToken: null});\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        });\n      } else {\n        this.setState({desktopAlerts: true});\n        if (LocalStorageUtil.getObject('keep-logged-in')) {\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n        }\n      }\n    } else if (this.state.firebaseToken && this.fbPush) {\n      this.fbPush.deleteToken(this.state.firebaseToken).catch((err) => {\n        console.error(\"Unable to delete token.\", err);\n      }).finally(() => {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        localStorage.removeItem('firebase-token');\n        this.setState({desktopAlerts: false, firebaseToken: null});\n        // Inform the server that the token was deleted.\n        this.tinode.setDeviceToken(null);\n      });\n    } else {\n      this.setState({desktopAlerts: false, firebaseToken: null});\n      LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n    }\n  }\n\n  requestPushToken() {\n    this.fbPush.getToken().then((refreshedToken) => {\n      const persist = LocalStorageUtil.getObject('keep-logged-in');\n      if (refreshedToken != this.state.firebaseToken) {\n        this.tinode.setDeviceToken(refreshedToken);\n        if (persist) {\n          LocalStorageUtil.setObject('firebase-token', refreshedToken);\n        }\n      }\n      this.setState({firebaseToken: refreshedToken, desktopAlerts: true});\n      if (persist) {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n      }\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n      console.error(\"Failed to retrieve firebase token\", err);\n    });\n  }\n\n  handleToggleMessageSounds(enabled) {\n    this.setState({messageSounds: enabled});\n    LocalStorageUtil.updateObject('settings', {\n      messageSoundsOff: !enabled\n    });\n  }\n\n  handleCredAdd(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.setMeta({cred: {meth: method, val: value}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredDelete(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.delCredential(method, value).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredConfirm(method, response) {\n    this.handleCredentialsRequest({cred: [method]});\n  }\n\n  // User clicked Cancel button in Setting or Sign Up panel.\n  handleSidepanelCancel() {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    let path = '';\n    if (['security','support','general','notif'].includes(parsed.path[0])) {\n      path = 'edit';\n    } else if ('crop' == parsed.path[0]) {\n      path = 'general';\n    } else if ('blocked' == parsed.path[0]) {\n      path = 'security';\n    } else if (this.state.myUserId) {\n      path = 'contacts';\n    }\n    parsed.path[0] = path;\n    if (parsed.params) {\n      delete parsed.params.code;\n      delete parsed.params.method;\n      delete parsed.params.tab;\n    }\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n    this.setState({errorText: '', errorLevel: null});\n  }\n\n  // Basic nagigator by hash value. No need to bind to this.\n  basicNavigator(hash) {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, hash));\n  }\n\n  // Request to start a topic, new or selected from search results, or \"by ID\".\n  handleStartTopicRequest(topicName, pub, priv, tags, isChannel) {\n    // Check if topic is indeed new. If not, launch it.\n    if (topicName && this.tinode.isTopicCached(topicName)) {\n      this.handleTopicSelected(topicName);\n      return;\n    }\n\n    const params = {};\n    if (Tinode.isP2PTopicName(topicName)) {\n      // Because we are initialing the subscription, set 'want' to all permissions.\n      params.sub = {mode: DEFAULT_P2P_ACCESS_MODE};\n      // Give the other user all permissions too.\n      params.desc = {defacs: {auth: DEFAULT_P2P_ACCESS_MODE}};\n    } else {\n      topicName = topicName || this.tinode.newGroupTopicName(isChannel);\n      params.desc = {public: pub, private: {comment: priv}};\n      params.tags = tags;\n    }\n    params._topicName = topicName;\n    this.setState({newTopicParams: params}, () => {this.handleTopicSelected(topicName)});\n  }\n\n  // New topic was creted, here is the new topic name.\n  handleNewTopicCreated(oldName, newName) {\n    if (this.state.topicSelected == oldName && oldName != newName) {\n      // If the current URl contains the old topic name, replace it with new.\n      // Update the name of the selected topic first so the navigator doen't clear\n      // the state.\n      this.setState({topicSelected: newName}, () => {\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', newName));\n      });\n    }\n  }\n\n  handleTopicUpdateRequest(topicName, pub, priv, defacs) {\n    this.handleError();\n\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const params = {};\n      if (pub) {\n        params.public = pub;\n        if (pub.photo && pub.photo.ref) {\n          params.attachments = [pub.photo.ref];\n        }\n      }\n      if (priv) {\n        params.private = (priv === Tinode.DEL_CHAR) ?\n          Tinode.DEL_CHAR : {comment: priv};\n      }\n      if (defacs) {\n        params.defacs = defacs;\n      }\n      topic.setMeta({desc: params}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleUpdatePasswordRequest(password)  {\n    this.handleError();\n\n    if (password) {\n      this.tinode.updateAccountBasic(null, this.tinode.getCurrentLogin(), password).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleChangePermissions(topicName, mode, uid) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const am = topic.getAccessMode();\n      if (uid) {\n        am.updateGiven(mode);\n        mode = am.getGiven();\n      } else {\n        am.updateWant(mode);\n        mode = am.getWant();\n      }\n      topic.setMeta({sub: {user: uid, mode: mode}}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleTagsUpdated(topicName, tags) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      topic.setMeta({tags: tags}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleLogout() {\n    updateFavicon(0);\n\n    // Remove stored data.\n    localStorage.removeItem('auth-token');\n    localStorage.removeItem('firebase-token');\n    localStorage.removeItem('settings');\n    if (this.state.firebaseToken) {\n      this.fbPush.deleteToken(this.state.firebaseToken)\n    }\n\n    clearInterval(this.reconnectCountdown);\n\n    if (this.tinode) {\n      this.tinode.clearStorage();\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.setState(this.getBlankState());\n\n    this.tinode = TinodeWeb.tnSetup(this.state.serverAddress,\n      this.state.transport, this.props.intl.locale, LocalStorageUtil.getObject('keep-logged-in'));\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n    HashNavigation.navigateTo('');\n  }\n\n  handleDeleteAccount() {\n    this.tinode.delCurrentUser(true).then((ctrl) => {\n      this.handleLogout();\n    });\n  }\n\n  handleDeleteMessagesRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Request hard-delete all messages.\n    topic.delMessagesAll(true).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleLeaveUnsubRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.leave(true).then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleBlockTopicRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleReportTopic(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Publish spam report.\n    this.tinode.publish(Tinode.TOPIC_SYS, Tinode.Drafty.attachJSON(null, {\n      'action': 'report',\n      'target': topicName\n    }));\n\n    // Remove J and P permissions.\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleShowContextMenu(params, menuItems) {\n    this.setState({\n      contextMenuVisible: true,\n      contextMenuClickAt: {x: params.x, y: params.y},\n      contextMenuParams: params,\n      contextMenuItems: menuItems || this.defaultTopicContextMenu(params.topicName),\n      contextMenuBounds: this.selfRef.current.getBoundingClientRect()\n    });\n  }\n\n  defaultTopicContextMenu(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n\n    let muted = false, blocked = false, self_blocked = false, subscribed = false, deleter = false, archived = false;\n    if (topic) {\n      subscribed = topic.isSubscribed();\n      archived = topic.isArchived();\n\n      const acs = topic.getAccessMode();\n      if (acs) {\n        muted = acs.isMuted();\n        blocked = !acs.isJoiner();\n        self_blocked = !acs.isJoiner('want');\n        deleter = acs.isDeleter();\n      }\n    }\n\n    return [\n      subscribed ? {\n        title: this.props.intl.formatMessage(messages.menu_item_info),\n        handler: this.handleShowInfoView\n      } : null,\n      subscribed ? 'messages_clear' : null,\n      subscribed && deleter ? 'messages_clear_hard' : null,\n      muted ? (blocked ? null : 'topic_unmute') : 'topic_mute',\n      self_blocked ? 'topic_unblock' : 'topic_block',\n      !archived ? 'topic_restore' : 'topic_archive',\n      'topic_delete'\n    ];\n  }\n\n  handleHideContextMenu() {\n    this.setState({\n      contextMenuVisible: false,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuBounds: null\n    });\n  }\n\n  handleContextMenuAction(action, promise, params) {\n    if (action == 'topic_archive') {\n      if (promise && params.topicName && params.topicName == this.state.topicSelected) {\n        promise.then(() => {\n          this.handleTopicSelected(null);\n        });\n      }\n    }\n  }\n\n  handleShowAlert(title, content, onConfirm, confirmText, onReject, rejectText) {\n    this.setState({\n      alertVisible: true,\n      alertParams: {\n        title: title,\n        content: content,\n        onConfirm: onConfirm,\n        confirm: confirmText,\n        onReject: onReject,\n        reject: rejectText\n      }\n    });\n  }\n\n  handleShowInfoView() {\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'info', true));\n    this.setState({showInfoPanel: true});\n  }\n\n  handleHideInfoView() {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'info'));\n    this.setState({showInfoPanel: false});\n  }\n\n  handleMemberUpdateRequest(topicName, added, removed) {\n    if (!topicName) {\n      return;\n    }\n\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    if (added && added.length > 0) {\n      added.map((uid) => {\n        topic.invite(uid, null).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n\n    if (removed && removed.length > 0) {\n      removed.map((uid) => {\n        topic.delSubscription(uid).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n  }\n\n  handleValidateCredentialsRequest(cred, code) {\n    if (this.tinode.isAuthenticated()) {\n      const me = this.tinode.getMeTopic();\n      me.setMeta({cred: {meth: cred, resp: code}})\n        .then(() => {\n          HashNavigation.navigateTo('');\n        })\n        .catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n    } else {\n      this.setState({credMethod: cred, credCode: code});\n      this.doLogin(null, null, {meth: cred, resp: code});\n    }\n  }\n\n  handlePasswordResetRequest(method, value) {\n    // If already connected, connnect() will return a resolved promise.\n    this.tinode.connect()\n      .then(() => {\n        return this.tinode.requestResetAuthSecret('basic', method, value);\n      })\n      .catch((err) => {\n        // Socket error\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleResetPassword(scheme, newPassword, token) {\n    token = base64ReEncode(token);\n    if (!token) {\n      this.handleError(this.props.intl.formatMessage(messages.invalid_security_token), 'err');\n    } else {\n      this.tinode.connect()\n        .then(() => {\n          return this.tinode.updateAccountBasic(null, null, newPassword, {token: token});\n        })\n        .catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"app-container\" ref={this.selfRef}>\n        {this.state.contextMenuVisible ?\n          <ContextMenu\n            tinode={this.tinode}\n            bounds={this.state.contextMenuBounds}\n            clickAt={this.state.contextMenuClickAt}\n            params={this.state.contextMenuParams}\n            items={this.state.contextMenuItems}\n            hide={this.handleHideContextMenu}\n            onShowAlert={this.handleShowAlert}\n            onAction={this.handleContextMenuAction}\n            onTopicRemoved={(topicName) => {\n              if (topicName == this.state.topicSelected) {\n                this.handleTopicSelected(null);\n              }\n            }}\n            onError={this.handleError} />\n          :\n          null\n        }\n        <Alert\n          visible={this.state.alertVisible}\n          title={this.state.alertParams.title}\n          content={this.state.alertParams.content}\n          onReject={this.state.alertParams.onReject ? (() => { this.setState({alertVisible: false}); }) : null}\n          reject={this.state.alertParams.reject}\n          onConfirm={() => { this.setState({alertVisible: false}); this.state.alertParams.onConfirm(); }}\n          confirm={this.state.alertParams.confirm}\n          />\n        <SidepanelView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          displayMobile={this.state.displayMobile}\n          hideSelf={this.state.displayMobile && this.state.mobilePanel !== 'sidepanel'}\n          state={this.state.sidePanelSelected}\n          title={this.state.sidePanelTitle}\n          avatar={this.state.sidePanelAvatar}\n          trustedBadges={this.state.myTrustedBadges}\n          login={this.state.login}\n          persist={this.state.persist}\n          myUserId={this.state.myUserId}\n          loginDisabled={this.state.loginDisabled}\n          loadSpinnerVisible={this.state.loadSpinnerVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          topicSelected={this.state.topicSelected}\n          chatList={this.state.chatList}\n          credMethod={this.state.credMethod}\n          credCode={this.state.credCode}\n\n          transport={this.state.transport}\n          messageSounds={this.state.messageSounds}\n          desktopAlerts={this.state.desktopAlerts}\n          desktopAlertsEnabled={this.state.desktopAlertsEnabled}\n          incognitoMode={this.state.incognitoMode}\n          serverAddress={this.state.serverAddress}\n          serverVersion={this.state.serverVersion}\n\n          onGlobalSettings={this.handleGlobalSettings}\n          onSignUp={this.handleNewAccount}\n          onSettings={this.handleSettings}\n          onBasicNavigate={this.basicNavigator}\n          onLoginRequest={this.handleLoginRequest}\n          onPersistenceChange={this.handlePersistenceChange}\n          onCreateAccount={this.handleNewAccountRequest}\n          onUpdateAccountDesc={this.handleTopicUpdateRequest}\n          onUpdatePassword={this.handleUpdatePasswordRequest}\n          onUpdateAccountTags={this.handleUpdateAccountTagsRequest}\n          onTogglePushNotifications={this.togglePushToken}\n          onToggleMessageSounds={this.handleToggleMessageSounds}\n          onToggleIncognitoMode={this.handleToggleIncognitoMode}\n          onCredAdd={this.handleCredAdd}\n          onCredDelete={this.handleCredDelete}\n          onCredConfirm={this.handleCredConfirm}\n          onTopicSelected={this.handleTopicSelected}\n          onCreateTopic={this.handleStartTopicRequest}\n          onLogout={this.handleLogout}\n          onDeleteAccount={this.handleDeleteAccount}\n          onShowAlert={this.handleShowAlert}\n          onCancel={this.handleSidepanelCancel}\n          onError={this.handleError}\n          onValidateCredentials={this.handleValidateCredentialsRequest}\n          onPasswordResetRequest={this.handlePasswordResetRequest}\n          onResetPassword={this.handleResetPassword}\n          onShowArchive={this.handleShowArchive}\n          onShowBlocked={this.handleShowBlocked}\n\n          onInitFind={this.tnInitFind}\n          searchResults={this.state.searchResults}\n          onSearchContacts={this.handleSearchContacts}\n\n          showContextMenu={this.handleShowContextMenu} />\n\n        <MessagesView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          ready={this.state.ready}\n          online={this.state.topicSelectedOnline}\n          acs={this.state.topicSelectedAcs}\n          displayMobile={this.state.displayMobile}\n          viewportWidth={this.state.viewportWidth}\n          viewportHeight={this.state.viewportHeight}\n          hideSelf={this.state.displayMobile &&\n            (this.state.mobilePanel !== 'topic-view' || this.state.showInfoPanel)}\n          topic={this.state.topicSelected}\n          myUserId={this.state.myUserId}\n          serverVersion={this.state.serverVersion}\n          serverAddress={this.state.serverAddress}\n          applicationVisible={this.state.applicationVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          newTopicParams={this.state.newTopicParams}\n\n          onHideMessagesView={this.handleHideMessagesView}\n          onData={this.tnData}\n          onError={this.handleError}\n          onNewTopicCreated={this.handleNewTopicCreated}\n          showContextMenu={this.handleShowContextMenu}\n          onChangePermissions={this.handleChangePermissions}\n          onNewChat={this.handleNewChatInvitation}\n          sendMessage={this.handleSendMessage} />\n\n        {this.state.showInfoPanel ?\n          <InfoView\n            tinode={this.tinode}\n            connected={this.state.connected}\n            displayMobile={this.state.displayMobile}\n            topic={this.state.topicSelected}\n            searchableContacts={this.state.searchableContacts}\n            myUserId={this.state.myUserId}\n\n            errorText={this.state.errorText}\n            errorLevel={this.state.errorLevel}\n            errorAction={this.state.errorAction}\n            errorActionText={this.state.errorActionText}\n\n            onTopicDescUpdate={this.handleTopicUpdateRequest}\n            onCancel={this.handleHideInfoView}\n            onShowAlert={this.handleShowAlert}\n            onChangePermissions={this.handleChangePermissions}\n            onMemberUpdateRequest={this.handleMemberUpdateRequest}\n            onDeleteMessages={this.handleDeleteMessagesRequest}\n            onLeaveTopic={this.handleLeaveUnsubRequest}\n            onBlockTopic={this.handleBlockTopicRequest}\n            onReportTopic={this.handleReportTopic}\n            onAddMember={this.handleManageGroupMembers}\n            onTopicTagsUpdate={this.handleTagsUpdated}\n            onInitFind={this.tnInitFind}\n            onError={this.handleError}\n\n            showContextMenu={this.handleShowContextMenu}\n            />\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(TinodeWeb);\n","// Put all packages together.\n// Used to generate umd/index.prod.js\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { IntlProvider } from 'react-intl';\n\nimport allMessages from './messages.json';\nimport TinodeWeb from './views/tinode-web.jsx';\nimport HashNavigation from './lib/navigation.js';\n\n// Detect human language to use in the UI:\n//  Check parameters from URL hash #?hl=ru, then browser, then use 'en' as a fallback.\nconst { params } = HashNavigation.parseUrlHash(window.location.hash);\nconst language = (params && params.hl) ||\n  (navigator.languages && navigator.languages[0]) ||\n  navigator.language ||\n  navigator.userLanguage ||\n  'en';\n\n// Get the base language 'en' from a more specific 'en_GB' or 'en-US' as a partial fallback.\nconst baseLanguage = language.toLowerCase().split(/[-_]/)[0];\n\n// Try the full locale first, then the locale without the region code, fallback to 'en'.\nconst messages =\n  allMessages[language] ||\n  allMessages[baseLanguage] ||\n  allMessages.en;\n\nReactDOM.render(\n  <React.StrictMode>\n    <IntlProvider locale={language} messages={messages} textComponent={React.Fragment}>\n      <TinodeWeb />\n    </IntlProvider>\n  </React.StrictMode>,\n  document.getElementById('mountPoint')\n);\n","// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// startup\n// Load entry module and return exports\n// This entry module doesn't tell about it's top-level declarations so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[331](0, __webpack_exports__, __webpack_require__);\n"],"sourceRoot":""}