{"version":3,"file":"src_views_account-settings-view_jsx.dev.js","mappings":"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","sources":["webpack://tinode-webapp/./src/views/account-settings-view.jsx","webpack://tinode-webapp/./src/widgets/credential-edit.jsx","webpack://tinode-webapp/./src/widgets/phone-edit.jsx"],"sourcesContent":["// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { parsePhoneNumber } from 'libphonenumber-js/mobile';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport BadgeList from '../widgets/badge-list.jsx';\n\nimport { makeImageUrl } from '../lib/blob-helpers.js';\nimport { MAX_TITLE_LENGTH, MAX_TOPIC_DESCRIPTION_LENGTH } from '../config.js';\nimport CredentialEdit from '../widgets/credential-edit.jsx';\n\nfunction _clip(str, length) {\n  return str && str.substring(0, length);\n}\n\nexport default class AccountSettingsView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    this.state = {\n      fullName: _clip(me.public ? me.public.fn : undefined, MAX_TITLE_LENGTH),\n      description: _clip(me.public ? me.public.note : undefined, MAX_TOPIC_DESCRIPTION_LENGTH),\n      avatar: makeImageUrl(me.public ? me.public.photo : null),\n      credentials: me.getCredentials() || [],\n      credEdit: undefined\n    };\n  }\n\n  componentDidMount() {\n    const me = this.props.tinode.getMeTopic();\n    me.onCredsUpdated = _ => this.setState({credentials: me.getCredentials()});\n  }\n\n  componentWillUnmount() {\n    const me = this.props.tinode.getMeTopic();\n    me.onCredsUpdated = null;\n  }\n\n  render() {\n    if (this.state.credEdit) {\n      return (\n        <CredentialEdit\n          method={this.state.credEdit.meth}\n          val={this.state.credEdit.val}\n          done={this.state.credEdit.done}\n          onShowCountrySelector={this.props.onShowCountrySelector}\n          onSubmit={this.props.onCredAdd}\n          onCancel={_ => this.setState({credEdit: undefined})}\n          onError={this.props.onError} />\n      );\n    }\n\n    const credentials = [];\n    this.state.credentials.forEach((cred, idx) => {\n      if (!['email', 'tel'].includes(cred.meth)) {\n        // Skip unknown methods.\n        return ;\n      }\n\n      let val = cred.val\n      if (cred.meth == 'tel') {\n        const number = parsePhoneNumber(cred.val);\n        val = number ? number.formatInternational() : cred.val;\n      }\n\n      credentials.push(\n        <div className=\"group quoted\" key={idx}>\n          <tt className=\"clickable\" onClick={e => {e.preventDefault(); this.setState({credEdit: cred});}}>{val}</tt>\n          <span> {\n            cred.done ? null :\n            <>\n              <i className=\"material-icons\">pending</i>&nbsp;\n              <a href=\"#\" onClick={e => {e.preventDefault(); this.props.onCredDelete(cred.meth, cred.val);}}>\n                <i className=\"material-icons\">delete</i>\n              </a>\n            </>\n          }</span>\n        </div>);\n    });\n    if (credentials.length > 0) {\n      // Add title as the first element.\n      credentials.unshift(\n        <label className=\"small\" key={'title'}>\n          <FormattedMessage id=\"label_user_contacts\" defaultMessage=\"Contacts\"\n            description=\"Label for user contacts\" />\n        </label>);\n    }\n\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          <a href=\"#\" className=\"flat-button float-right\" onClick={e => {e.preventDefault(); this.props.onNavigate('general');}}>\n            <i className=\"material-icons\">edit</i>&nbsp;\n            <FormattedMessage id=\"button_edit\" defaultMessage=\"Edit\" description=\"Call to action [Edit]\" />\n          </a>\n          <center>\n            <AvatarUpload\n              tinode={this.props.tinode}\n              avatar={this.state.avatar}\n              readOnly={true}\n              uid={this.props.myUserId}\n              title={this.state.fullName} />\n          </center>\n          <div className=\"group\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n                description=\"Label for full name editing\" />\n            </label>\n            <div className=\"large ellipsized\">{this.state.fullName}</div>\n          </div>\n          <div className=\"group\">\n            <label className=\"small\"><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n              description=\"Label for user address (ID)\" /></label>&nbsp;\n            <tt>{this.props.myUserId}</tt>\n          </div>\n          <div className=\"group\">\n            <BadgeList trustedBadges={this.props.trustedBadges} />\n          </div>\n          {this.state.description ?\n            <div className=\"group\">\n              <label className=\"small\">\n                <FormattedMessage id=\"label_description\" defaultMessage=\"Description\"\n                  description=\"Label for editing topic description\" />\n              </label>\n              <div className=\"quoted\">{this.state.description}</div>\n            </div> : null}\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <div className=\"group\">{credentials}</div>\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <a href=\"#\" className=\"flat-button\" onClick={e => {e.preventDefault(); this.props.onNavigate('notif');}}>\n            <i className=\"material-icons\">notifications</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_notifications\"\n              defaultMessage=\"Notifications\" description=\"Sidepanel title for AccNotificationsView.\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={e => {e.preventDefault(); this.props.onNavigate('security');}}>\n            <i className=\"material-icons\">security</i>&nbsp;<FormattedMessage id=\"button_security\"\n              defaultMessage=\"Security\" description=\"Navigaton button for security panel.\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={e => {e.preventDefault(); this.props.onNavigate('support');}}>\n            <i className=\"material-icons\">contact_support</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_support\"\n              defaultMessage=\"Support\" description=\"Sidepanel title for AccSupportView.\" />\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","// Enter one credential at a time.\n\nimport React from 'react';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\nimport PhoneEdit from './phone-edit.jsx';\nimport { parsePhoneNumber } from 'libphonenumber-js/mobile';\n\nconst messages = defineMessages({\n  password_reset_email_sent: {\n    id: 'password_reset_email_sent',\n    defaultMessage: 'An email with security code has been sent.',\n    description: 'Notification that the email with password reset instructions has been sent'\n  },\n  password_reset_sms_sent: {\n    id: 'password_reset_sms_sent',\n    defaultMessage: 'A text message with security code has been sent.',\n    description: 'Notification that the SMS with password reset instructions has been sent'\n  },\n});\n\nclass CredentialEdit extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      code: '',\n      tel: '',\n      email: '',\n      sent: false\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePhoneChange = this.handlePhoneChange.bind(this);\n    this.handleCodeChange = this.handleCodeChange.bind(this);\n  }\n\n  static formatPhoneNumber(raw) {\n    let number;\n    try {\n      number = parsePhoneNumber(raw);\n    } catch (err) {}\n    return number ? number.formatInternational() : raw;\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value});\n  }\n\n  handlePhoneChange(number) {\n    this.setState({tel: number});\n  }\n\n  handleCodeChange(e) {\n    this.setState({code: e.target.value.replace(/[^\\d]/g, '')});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const value = this.props.method == 'email' ? this.state.email : this.state.tel;\n    if (value) {\n      this.props.onSubmit(this.props.method, value);\n      this.setState({sent: true});\n      const msg = this.props.method == 'email' ? messages.password_reset_email_sent : messages.password_reset_sms_sent;\n      this.props.onError(this.props.intl.formatMessage(msg), 'info');\n    }\n  }\n\n  render() {\n    const readyForCode = this.state.sent || !this.props.done;\n    const currentValue = CredentialEdit.formatPhoneNumber(readyForCode ?\n      (this.state.tel || this.state.email) : this.props.val);\n\n    const changeEmail = (\n      <><div className=\"panel-form-row\">\n        <label className=\"large\"><FormattedMessage id=\"change_email\" defaultMessage=\"Change email\"\n          description=\"Prompt to change current email\" /></label>\n      </div>\n      <div className=\"group\">\n        <label className=\"small gray\">\n          <FormattedMessage id=\"current_email\" defaultMessage=\"Current email\" description=\"Label for old email\" />\n        </label>\n      </div></>);\n\n    const changePhone = (\n      <><div className=\"panel-form-row\">\n      <label className=\"large\"><FormattedMessage id=\"change_phonel\" defaultMessage=\"Change phone number\"\n        description=\"Prompt to change current phone number\"/></label>\n      </div>\n      <div className=\"group\">\n        <label className=\"small gray\">\n          <FormattedMessage id=\"current_phone\" defaultMessage=\"Current phone number\" description=\"Label for old phone\" />\n        </label>\n      </div></>\n    );\n\n    const newEmailLabel = (<label className=\"small gray\">\n        <FormattedMessage id=\"new_email\" defaultMessage=\"New email\"\n          description=\"Prompt for entering a new email\" />\n      </label>);\n\n    const newEmailInput = (\n      <><div className=\"group\">{newEmailLabel}</div>\n      <div className=\"group\">\n        <FormattedMessage id=\"email_prompt\" defaultMessage=\"Email, e.g. jdoe@example.com\"\n          description=\"Input placeholder for email entry\">{\n          (email_prompt) => <input type=\"email\" placeholder={email_prompt} autoComplete=\"email\"\n            value={this.state.email} onChange={this.handleEmailChange} required/>\n        }</FormattedMessage>\n      </div></>\n    );\n\n    const newPhoneLabel = (<label className=\"small gray\">\n        <FormattedMessage id=\"new_phone_number\" defaultMessage=\"New phone number\"\n        description=\"Prompt for entering a new telephone number\" />\n      </label>);\n\n    const newPhoneInput = (\n      <><div className=\"group\">{newPhoneLabel}</div>\n      <div className=\"panel-form-row\">\n        <PhoneEdit\n          autoFocus={true}\n          onShowCountrySelector={this.props.onShowCountrySelector}\n          onSubmit={this.handlePhoneChange} />\n      </div></>\n    );\n\n    const codeInput = (\n      <><div className=\"group\">\n        <label className=\"small gray\"><FormattedMessage id=\"enter_confirmation_code_prompt\" defaultMessage=\"Confirmation code\"\n            description=\"Request to enter confirmation code\" /></label>\n      </div>\n      <div className=\"group\">\n        <FormattedMessage id=\"numeric_confirmation_code_prompt\" defaultMessage=\"Numbers only\"\n          description=\"Prompt for numeric conformation code\">{\n          (numbers_only) => <input type=\"text\" placeholder={numbers_only} maxLength={10}\n          value={this.state.code} onChange={this.handleCodeChange} required/>\n        }</FormattedMessage>\n      </div></>\n    );\n\n    return (<form className=\"panel-form-column\" onSubmit={this.handleSubmit}>\n      {readyForCode ? null :\n      this.props.method == 'email' ?\n        changeEmail\n      : this.props.method == 'tel' ?\n        changePhone\n      : null}\n      <div className=\"panel-form-row\">\n        <tt className=\"quoted\">{currentValue}</tt>\n      </div>\n      {readyForCode ? null :\n      this.props.method == 'email' ?\n        newEmailInput\n      : this.props.method == 'tel' ?\n        newPhoneInput\n      : null}\n      {readyForCode ? codeInput : null}\n      <div className=\"dialog-buttons\">\n        <button className=\"secondary\" onClick={this.props.onCancel}>\n          <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n        </button>\n        <button className=\"primary\" type=\"submit\" >\n          <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n        </button>\n      </div>\n    </form>);\n  }\n}\n\nexport default injectIntl(CredentialEdit);\n","// Editor for a phone number.\n\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { getExampleNumber, parsePhoneNumber } from 'libphonenumber-js/mobile';\nimport examples from 'libphonenumber-js/mobile/examples'\n\nimport * as dcodes from '../dcodes.json';\nimport { flagEmoji } from '../lib/strformat';\n\nconst messages = defineMessages({\n  mobile_number_required: {\n    id: 'mobile_number_required',\n    defaultMessage: 'Mobile phone number required',\n    description: 'Error message'\n  }\n});\n\nclass PhoneEdit extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.codeMap = {};\n    dcodes.default.forEach(dc => { this.codeMap[dc.code] = dc.dial; });\n\n    const code = props.countryCode || 'US';\n    const dial = this.codeMap[code];\n\n    this.state = {\n      countryCode: code,\n      dialCode: dial,\n      localNumber: '',\n      placeholderNumber: this.placeholderNumber(code, dial)\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleFinished = this.handleFinished.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.showCountrySelector = this.showCountrySelector.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({localNumber: this.filterNumber(e.target.value)});\n  }\n\n  handleFinished(e) {\n    e.preventDefault();\n    const raw = `${this.state.dialCode}${this.state.localNumber.trim()}`.replace(/[^\\d]/g, '');\n    let number = null;\n    try {\n      number = parsePhoneNumber(`+${raw}`);\n    } catch (err) {}\n\n    if (!number || !number.isValid()) {\n      this.inputField.setCustomValidity(this.props.intl.formatMessage(messages.mobile_number_required));\n      return;\n    }\n\n    this.inputField.setCustomValidity('');\n    this.props.onSubmit(number.format('E.164'));\n  }\n\n\n  handleKeyDown(e) {\n    if (e.key === 'Enter') {\n      this.handleFinished(e);\n    }\n  }\n\n  showCountrySelector() {\n    this.props.onShowCountrySelector(this.state.countryCode, this.state.dialCode,\n      (code, dial) => {\n          this.setState({\n            countryCode: code,\n            dialCode: dial,\n            placeholderNumber: this.placeholderNumber(code, dial)\n        })\n      });\n  }\n\n  // Filter out characters not permitted in a phone number.\n  filterNumber(number) {\n    if (!number) {\n      return number;\n    }\n    // Leave numbers, space, (, ), -, and .\n    // The + is not allowed: it's handled by the country code portion.\n    return number.replace(/[^-\\s().\\d]/g, '');\n  }\n\n  placeholderNumber(code, dial) {\n    const sample = getExampleNumber(code, examples);\n    return sample ? sample.formatInternational().substring(dial.length + 1).trim() : '123 0123';\n  }\n\n  render() {\n    return (\n      <>\n        <span className=\"dial-code\" onClick={this.showCountrySelector}>\n          <span className=\"country-flag\">{flagEmoji(this.state.countryCode)}&nbsp;</span>\n          +{this.state.dialCode}&nbsp;</span>\n        <input type=\"tel\" ref={ref => {this.inputField = ref}} placeholder={this.state.placeholderNumber}\n            value={this.state.localNumber} onChange={this.handleChange}\n            maxLength={17} onKeyDown={this.handleKeyDown} onBlur={this.handleFinished}\n            required autoFocus={this.props.autoFocus} />\n      </>\n    );\n  }\n}\n\nexport default injectIntl(PhoneEdit);\n"],"names":["React","FormattedMessage","parsePhoneNumber","AvatarUpload","BadgeList","makeImageUrl","MAX_TITLE_LENGTH","MAX_TOPIC_DESCRIPTION_LENGTH","CredentialEdit","_clip","str","length","substring","AccountSettingsView","Component","constructor","props","me","tinode","getMeTopic","state","fullName","public","fn","undefined","description","note","avatar","photo","credentials","getCredentials","credEdit","componentDidMount","onCredsUpdated","_","setState","componentWillUnmount","render","meth","val","done","onShowCountrySelector","onCredAdd","onError","forEach","cred","idx","includes","number","formatInternational","push","e","preventDefault","onCredDelete","unshift","onNavigate","myUserId","trustedBadges","defineMessages","injectIntl","PhoneEdit","messages","password_reset_email_sent","id","defaultMessage","password_reset_sms_sent","PureComponent","code","tel","email","sent","handleSubmit","bind","handleEmailChange","handlePhoneChange","handleCodeChange","formatPhoneNumber","raw","err","target","value","replace","method","onSubmit","msg","intl","formatMessage","readyForCode","currentValue","changeEmail","changePhone","newEmailLabel","newEmailInput","email_prompt","newPhoneLabel","newPhoneInput","codeInput","numbers_only","onCancel","getExampleNumber","examples","dcodes","flagEmoji","mobile_number_required","codeMap","default","dc","dial","countryCode","dialCode","localNumber","placeholderNumber","handleChange","handleFinished","handleKeyDown","showCountrySelector","filterNumber","trim","isValid","inputField","setCustomValidity","format","key","sample","ref","autoFocus"],"sourceRoot":""}