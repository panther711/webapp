{"version":3,"sources":["webpack://tinode-webapp/external \"React\"","webpack://tinode-webapp/external \"ReactDOM\"","webpack://tinode-webapp/external \"ReactIntl\"","webpack://tinode-webapp/external \"firebase\"","webpack://tinode-webapp/external \"Tinode\"","webpack://tinode-webapp/external [\"firebase\",\"messaging\"]","webpack://tinode-webapp/./src/widgets/alert.jsx","webpack://tinode-webapp/./src/version.js","webpack://tinode-webapp/./src/config.js","webpack://tinode-webapp/./src/widgets/context-menu.jsx","webpack://tinode-webapp/./src/lib/strformat.js","webpack://tinode-webapp/./src/widgets/letter-tile.jsx","webpack://tinode-webapp/./src/lib/blob-helpers.js","webpack://tinode-webapp/./src/widgets/avatar-upload.jsx","webpack://tinode-webapp/./src/widgets/checkbox.jsx","webpack://tinode-webapp/./src/widgets/contact-badges.jsx","webpack://tinode-webapp/./src/lib/utils.js","webpack://tinode-webapp/./src/widgets/received-marker.jsx","webpack://tinode-webapp/./src/widgets/unread-badge.jsx","webpack://tinode-webapp/./src/widgets/contact.jsx","webpack://tinode-webapp/./src/widgets/contact-action.jsx","webpack://tinode-webapp/./src/widgets/contact-list.jsx","webpack://tinode-webapp/./src/widgets/menu-cancel.jsx","webpack://tinode-webapp/./src/widgets/error-panel.jsx","webpack://tinode-webapp/./src/widgets/chip.jsx","webpack://tinode-webapp/./src/widgets/chip-input.jsx","webpack://tinode-webapp/./src/widgets/group-manager.jsx","webpack://tinode-webapp/./src/widgets/visible-password.jsx","webpack://tinode-webapp/./src/widgets/in-place-edit.jsx","webpack://tinode-webapp/./src/widgets/more-button.jsx","webpack://tinode-webapp/./src/widgets/permissions-editor.jsx","webpack://tinode-webapp/./src/widgets/tag-manager.jsx","webpack://tinode-webapp/./src/views/info-view.jsx","webpack://tinode-webapp/./src/widgets/file-progress.jsx","webpack://tinode-webapp/./src/widgets/attachment.jsx","webpack://tinode-webapp/./src/widgets/uploading-image.jsx","webpack://tinode-webapp/./src/widgets/chat-message.jsx","webpack://tinode-webapp/./src/widgets/send-message.jsx","webpack://tinode-webapp/./src/widgets/doc-preview.jsx","webpack://tinode-webapp/./src/widgets/group-subs.jsx","webpack://tinode-webapp/./src/widgets/image-preview.jsx","webpack://tinode-webapp/./src/widgets/invitation.jsx","webpack://tinode-webapp/./src/widgets/load-spinner.jsx","webpack://tinode-webapp/./src/views/logo-view.jsx","webpack://tinode-webapp/./src/lib/navigation.js","webpack://tinode-webapp/./src/views/messages-view.jsx","webpack://tinode-webapp/./src/widgets/button-back.jsx","webpack://tinode-webapp/./src/widgets/menu-contacts.jsx","webpack://tinode-webapp/./src/widgets/menu-start.jsx","webpack://tinode-webapp/./src/widgets/side-navbar.jsx","webpack://tinode-webapp/./src/views/contacts-view.jsx","webpack://tinode-webapp/./src/lib/local-storage.js","webpack://tinode-webapp/./src/views/create-account-view.jsx","webpack://tinode-webapp/./src/views/edit-account-view.jsx","webpack://tinode-webapp/./src/views/acc-general-view.jsx","webpack://tinode-webapp/./src/views/acc-notifications-view.jsx","webpack://tinode-webapp/./src/views/acc-security-view.jsx","webpack://tinode-webapp/./src/views/acc-support-view.jsx","webpack://tinode-webapp/./src/views/login-view.jsx","webpack://tinode-webapp/./src/widgets/new-topic-by-id.jsx","webpack://tinode-webapp/./src/widgets/new-topic-group.jsx","webpack://tinode-webapp/./src/widgets/search-contacts.jsx","webpack://tinode-webapp/./src/views/new-topic-view.jsx","webpack://tinode-webapp/./src/views/password-reset-view.jsx","webpack://tinode-webapp/./src/widgets/host-selector.jsx","webpack://tinode-webapp/./src/views/settings-view.jsx","webpack://tinode-webapp/./src/views/validation-view.jsx","webpack://tinode-webapp/./src/views/sidepanel-view.jsx","webpack://tinode-webapp/./src/lib/host-name.js","webpack://tinode-webapp/./src/views/tinode-web.jsx","webpack://tinode-webapp/./src/index.js","webpack://tinode-webapp/webpack/bootstrap","webpack://tinode-webapp/webpack/runtime/compat get default export","webpack://tinode-webapp/webpack/runtime/define property getters","webpack://tinode-webapp/webpack/runtime/hasOwnProperty shorthand","webpack://tinode-webapp/webpack/startup"],"names":["React","ReactDOM","ReactIntl","firebase","messaging","Tinode","Alert","render","this","props","visible","className","title","content","onReject","onClick","reject","FormattedMessage","id","defaultMessage","onConfirm","confirm","PACKAGE_VERSION","APP_NAME","KNOWN_HOSTS","hosted","local","DEFAULT_HOST","KEYPRESS_DELAY","DEFAULT_P2P_ACCESS_MODE","REM_SIZE","AVATAR_SIZE","MAX_INBAND_ATTACHMENT_SIZE","MAX_EXTERN_ATTACHMENT_SIZE","MAX_IMAGE_DIM","MAX_TITLE_LENGTH","messages","defineMessages","info","clear_messages","clear_for_all","delete","delete_for_all","send_retry","mute","unmute","topic_delete","topic_delete_warning","delete_messages_warning","unblock","block","topic_block_warning","member_delete","archive","unarchive","edit_permissions","clear_messages_warning","ContextMenu","constructor","super","formatMessage","intl","handlePageClick","bind","handleEscapeKey","handleClick","MenuItems","handler","params","errorHandler","onShowAlert","deleteMessages","message","retryMessage","topicPermissionSetter","then","ctrl","onTopicRemoved","topicName","topic","tinode","getTopic","delTopic","catch","err","console","log","user","delSubscription","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","e","contains","target","preventDefault","stopPropagation","hide","keyCode","item","items","currentTarget","dataset","onAction","onError","all","hard","cancelSend","seq","delMessagesAll","delMessagesList","flushMessage","msg","createMessage","publishDraft","mode","result","updateMode","count","menu","map","push","key","data-id","vSize","length","position","left","bounds","right","clickAt","x","top","bottom","y","style","injectIntl","shortDateFormat","locale","window","navigator","userLanguage","language","now","Date","getFullYear","getMonth","getDate","toLocaleTimeString","hour12","hour","minute","toLocaleDateString","month","day","year","bytesToHumanSize","bytes","sizes","bucket","Math","min","floor","log2","pow","round","toFixed","LetterTile","avatar","isGroup","iconColor","abs","value","hash","i","charCodeAt","stringHash","trim","letter","charAt","alt","src","onerror","SUPPORTED_IMAGE_FORMATS","MIME_EXTENSIONS","makeImageDataUrl","photo","data","type","startsWith","ref","fitImageSize","width","height","maxWidth","maxHeight","forceSquare","scale","size","dstWidth","dstHeight","srcWidth","srcHeight","xoffset","yoffset","imageScaled","fileOrBlob","maxSize","onSuccess","img","Image","crossOrigin","onload","async","URL","revokeObjectURL","dim","canvas","createElement","ctx","getContext","imageSmoothingEnabled","drawImage","mime","includes","blob","Promise","resolve","toBlob","clearRect","fname","idx","indexOf","ext","at","lastIndexOf","substring","fileNameForMime","name","createObjectURL","fileToBase64","file","reader","FileReader","split","readAsDataURL","blobToBase64","AvatarUpload","state","dataUrl","handleFileUpload","componentDidUpdate","prevProps","setState","files","unused","base64bits","du","onImageChanged","randId","random","substr","readOnly","href","uid","accept","onChange","htmlFor","CheckBox","handleChange","checked","icon_mapping","ContactBadges","badges","b","icon","color","updateFavicon","oldIcon","getElementById","head","getElementsByTagName","newIcon","rel","removeChild","appendChild","theCard","fn","imageUrl","imageMimeType","card","mimeType","matches","exec","arrayEqual","a","Array","isArray","sort","l","sanitizeUrl","url","allowedSchemes","replace","test","schemes","join","RegExp","deliveryMarker","received","message_sending","message_sending_failed","ReceivedMarker","timestamp","marker","UnreadBadge","drafty_image","drafty_form","drafty_attachment","Contact","handleContextClick","onSelected","index","showContextMenu","pageY","pageX","online","slice","icon_badges","isVerified","isStaff","isDangerous","acs","showMode","getMode","isMuted","isJoiner","subtitle","preview","Drafty","draftyFormatter","comment","showCheckmark","selected","showOnline","isChannel","unread","values","el","attr","concat","ContactAction","action","badge_you","badge_owner","ContactList","topicSelected","contactNodes","contactsCount","contacts","c","filterFunc","filter","filterOn","private","toLowerCase","public","myUserId","isOwner","deliveryStatus","latestMessage","_status","msgStatus","showUnread","connected","onTopicSelected","noScroll","dangerouslySetInnerHTML","__html","emptyListMessage","MenuCancel","onCancel","ErrorPanel","show","level","onClearError","warn","text","whiteSpace","actionText","Chip","handleCancel","invalid","noAvatar","required","ChipInput","deriveStateFromProps","input","focused","handleTextInput","removeChipAt","handleChipCancel","handleFocusGained","handleFocusLost","handleKeyDown","placeholder","chips","prompt","sortedChips","sortChips","staticMembers","chipIndex","indexChips","prevState","keep","normal","removed","onChipRemoved","onFocusLost","onEnter","undefined","avatarDisabled","onFocus","onBlur","onKeyDown","autoFocus","no_contacts","contacts_not_found_short","GroupManager","members","indexMembers","keepInitialMembers","requiredMember","contactFilter","noContactsMessage","selectedContacts","handleContactSelected","handleMemberRemoved","handleContactFilter","handleSubmit","m","delta","present","keepInitial","stat","sel","userId","status","splice","val","query","instance","added","Object","keys","k","onSubmit","doContactFiltering","VisiblePassword","handleVisibility","handeTextChange","handleEditingFinished","onFinished","setTimeout","activeElement","tabIndex","autoComplete","InPlaceEdit","active","initialValue","handleStartEditing","handlePasswordFinished","newValue","focus","event","checkValidity","fieldType","spanText","spanClass","MoreButton","open","handleToggle","onToggle","joiner","writer","preser","approver","sharer","deleter","owner","PermissionsEditor","names","skip","compare","userTitle","userAvatar","modeTitle","compareTitle","TagManager","tags","tagInput","activated","handleTagInput","handleAddTag","handleRemoveTag","nextProps","last","tag","maxTagCount","getServerLimit","onTagsChanged","minTagLength","maxTagLength","add_tags_prompt","requested","granted","other_user","delete_messages","leave_chat","leave_chat_warning","block_contact","block_contact_warning","report_chat","report_chat_warning","InfoView","admin","muted","address","groupTopic","channel","fullName","selectedContact","access","modeGiven","modeWant","modeGiven2","modeWant2","auth","anon","contactList","showMemberPanel","showPermissionEditorFor","moreInfoExpanded","previousMetaDesc","previousSubsUpdated","previousTagsUpdated","resetSubs","resetDesc","onMetaDesc","onSubsUpdated","onTagsUpdated","handleFullNameUpdate","handlePrivateUpdate","handleImageChanged","handleMuted","handlePermissionsChanged","handleLaunchPermissionsEditor","handleHidePermissionsEditor","handleShowAddMembers","handleHideAddMembers","handleMemberUpdateRequest","handleDeleteMessages","handleLeave","handleBlock","handleReport","handleMemberSelected","handleMoreInfo","handleTagsUpdated","handleContextMenu","getType","newState","user2","subscriber","getGiven","getWant","subscribers","sub","defacs","getDefaultAccess","getAccessMode","isAdmin","isSharer","isDeleter","isGroupType","isChannelType","getMeta","startMetaQuery","withTags","build","desc","subs","onTopicDescUpdate","ignored","onChangePermissions","perm","userPermissionsEdited","which","toEdit","toCompare","toSkip","titleEdit","titleCompare","userPermissionsTitle","userPermissionsAvatar","editedPermissions","immutablePermissions","editedPermissionsTitle","immutablePermissionsTitle","editedPermissionsSkipped","onInitFind","onMemberUpdateRequest","onDeleteMessages","onLeaveTopic","onBlockTopic","onReportTopic","onTopicTagsUpdate","menuItems","displayMobile","errorLevel","errorText","searchableContacts","private_placeholder","more","no_members","FileProgress","progress","Attachment","downloader","downloadFile","filename","mimetype","getLargeFileHelper","download","loaded","uploading","onCancelUpload","cancel","helperFunc","isUrlRelative","downloadUrl","downloadWidget","UploadingImage","ChatMessage","uploader","onProgress","handleProgress","handleImagePreview","handleFormButtonClick","handleCancelUpload","onImagePreview","resp","act","onFormResponse","MESSAGE_STATUS_FAILED","ratio","sideClass","deleted","sequence","response","bubbleClass","fullDisplay","userFrom","attachments","att","userName","notFound","viewportWidth","minWidth","minHeight","authorizeURL","sanitizeImageUrl","loading","inner","child","messaging_disabled","type_new_message","add_image_caption","file_attachment_too_large","cannot_initiate_upload","SendMessage","keypressTimestamp","getTime","handlePasteEvent","handleAttachImage","handleAttachFile","handleSend","handleKeyPress","handleMessageTyping","messageEditArea","disabled","onImageSuccess","onAttachmentSuccess","clipboardData","originalEvent","kind","getAsFile","imageFileScaledToBase64","imageFileToBase64","filePasted","bits","onAttachImage","onAttachFile","acceptBlank","noInput","onSendMessage","shiftKey","onKeyPress","messagePrompt","attachImage","click","attachFile","display","DocPreview","handleSendDoc","caption","onClose","mimeToIcon","default","image","video","iconFromMime","GroupSubs","usersOnline","totalCount","countToShow","some","overflow","ImagePreview","handleSendImage","assignWidth","node","getBoundingClientRect","maxlength","max","Invitation","handleButtonAction","evt","LoadSpinner","LogoView","version","serverVersion","serverAddress","HashNavigation","parts","path","forEach","part","decodeURIComponent","location","args","hasOwnProperty","parsed","parseUrlHash","composeUrlHash","sidepanel","online_now","last_seen","not_found","isUnconfirmed","ex","getExcessive","isPeerRestricted","ms","getMissing","MessagesView","getDerivedStateFromProps","leave","sendImageAttachment","sendFileAttachment","sendKeyPress","handleScrollReference","handleScrollEvent","handleDescChange","handleSubsUpdated","handleNewMessage","handleAllMessagesReceived","handleInfoReceipt","handleImagePostview","handleClosePreview","handleFormResponse","handleShowContextMenuMessage","handleNewChatAcceptance","handleEnablePeer","postReadNotification","clearNotificationQueue","readNotificationQueue","readNotificationTimer","messagesScroller","scrollTop","scrollHeight","scrollPosition","viewportHeight","onData","onAllMessagesReceived","onInfo","onPres","applicationVisible","isSubscribed","ready","newTopic","newTopicParams","_topicName","getQuery","withLaterDesc","withLaterSub","isReader","withLaterData","withLaterDel","fetchingMessages","setQuery","subscribe","code","onNewTopicCreated","queuedMessages","pub","_sending","publishMessage","setUrlTopic","blankState","nextState","docPreview","imagePreview","imagePostview","typingIndicator","msgs","assign","onlineSubs","peer","p2pPeerDesc","peerMessagingDisabled","isWriter","readingBlocked","unconformed","unconfirmed","oldTopicName","isTopicCached","oldTopic","finally","msgHasMoreMessages","getMessagesPage","setInterval","clearInterval","n","shift","sendAt","noteRead","setMilliseconds","getMilliseconds","isNewMessage","from","what","clearTimeout","keyPressTimer","forceUpdate","sendMessage","attachJSON","parse","searchParams","set","search","messageSpecificMenuItems","onNewChat","noteKeyPress","maxInbandAttachmentSize","uploadCompletionPromise","upload","urlPromise","maxExternAttachmentSize","limit","tinyMine","tinyBlob","blobMime","tinyBits64","insertImage","_tempPreview","appendLineBreak","append","init","bits64","found","find","_cancelled","component","hideSelf","component2","messageNodes","previousFrom","chatBoxClass","nextFrom","thisFrom","isReply","userDesc","hi","ts","_uploader","lastSeen","cont","getMeTopic","getContact","seen","when","onHideMessagesView","ButtonBack","onBack","MenuContacts","onNewTopic","onSettings","MenuStart","onSignUp","SideNavbar","archived_contacts_title","ContactsView","handleAction","unreadThreads","archivedCount","chatList","blocked","arch","touched","action_ignored","onShowArchive","LocalStorageUtil","localStorage","setItem","JSON","stringify","getItem","oldVal","getObject","setObject","removeItem","CreateAccountView","login","password","email","imageDataUrl","errorCleared","saveToken","handleLoginChange","handlePasswordChange","handleEmailChange","handleFnChange","handleToggleSaveToken","onCreateAccount","submitClasses","login_prompt","password_prompt","full_name_prompt","email_prompt","stay_logged_in","EditAccountView","me","onBasicNavigate","AccGeneralView","credentials","getCredentials","addCredActive","addCredInvalid","newCred","previousOnTags","tnNewTags","tnCredsUpdated","handleCredChange","handleCredKeyDown","handleCredEntered","onCredsUpdated","creds","onUpdateAccount","method","asPhone","asEmail","onCredAdd","onUpdateTags","cred","meth","done","onCredConfirm","onCredDelete","full_name_placeholder","title_tag_manager","handleCheckboxClick","onToggleMessageSounds","onTogglePushNotifications","onToggleIncognitoMode","messageSounds","desktopAlertsEnabled","desktopAlerts","incognitoMode","delete_account","delete_account_warning","AccSecurityView","blockedCount","handlePasswordUpdate","handleDeleteAccount","pwd","onDeleteAccount","password_unchanged","onLogout","onShowBlocked","AccSupportView","LoginView","hostName","persist","onPersistenceChange","onLogin","autoCorrect","autoCapitalize","invalid_id","NewTopicById","groupId","prefix","NewTopicGroup","handlePrivateChange","handleTagsChanged","handleChannelToggle","SearchContacts","edited","handleSearchChange","handleSearch","handleClear","onSearchContacts","search_placeholder","search_for_contacts","search_no_results","NewTopicView","tabSelected","searchQuery","handleTabClick","handleSearchContacts","handleNewGroupSubmit","handleGroupByID","addUrlParam","removeUrlParam","onCreateTopic","priv","no_contacts_placeholder","searchResults","PasswordResetView","token","scheme","onReset","onRequest","reset","HostSelector","changed","handleHostNameChange","onServerAddressChange","hostOptions","list","SettingsView","transport","handleTransportSelected","handleServerAddressChange","onUpdate","def","ws","lp","transportOptions","phone","ValidationView","credCode","credMethod","numbers_only","register","settings","edit","general","security","notif","support","newtpk","SidepanelView","handleNewTopic","view","errorAction","errorActionText","loadSpinnerVisible","loginDisabled","onLoginRequest","onGlobalSettings","onUpdateAccountTags","onValidateCredentials","onPasswordResetRequest","onResetPassword","detectServerAddress","host","protocol","hostname","port","isSecureConnection","POP_SOUND","Audio","reconnect_countdown","reconnect_now","push_init_failed","invalid_security_token","no_connection","code_doesnot_match","menu_item_info","TinodeWeb","getBlankState","handleResize","handleHashRoute","handleOnline","checkForAppUpdate","handleVisibilityEvent","handleError","handleLoginRequest","handlePersistenceChange","handleConnected","handleAutoreconnectIteration","doLogin","handleCredentialsRequest","handleLoginSuccessful","handleDisconnect","tnMeMetaDesc","tnMeContactUpdate","tnMeSubsUpdated","resetContactList","tnData","tnInitFind","tnFndSubsUpdated","handleTopicSelected","handleHideMessagesView","handleSendMessage","handleNewChatInvitation","handleNewAccount","handleNewAccountRequest","handleUpdateAccountRequest","handleUpdateAccountTagsRequest","handleToggleIncognitoMode","handleSettings","handleGlobalSettings","handleShowArchive","handleShowBlocked","handleToggleMessageSounds","handleCredAdd","handleCredDelete","handleCredConfirm","initFCMessaging","togglePushToken","requestPushToken","handlePushMessage","handleSidepanelCancel","handleStartTopicRequest","handleNewTopicCreated","handleTopicUpdateRequest","handleChangePermissions","handleLogout","handleDeleteMessagesRequest","handleLeaveUnsubRequest","handleBlockTopicRequest","handleReportTopic","handleShowContextMenu","defaultTopicContextMenu","handleHideContextMenu","handleShowAlert","handleShowInfoView","handleHideInfoView","handleValidateCredentialsRequest","handlePasswordResetRequest","handleResetPassword","handleContextMenuAction","autoLogin","messageSoundsOff","FIREBASE_INIT","firebaseToken","hidden","sidePanelSelected","sidePanelTitle","sidePanelAvatar","liveConnection","onLine","topicSelectedOnline","topicSelectedAcs","innerWidth","showInfoPanel","mobilePanel","contextMenuVisible","contextMenuBounds","contextMenuClickAt","contextMenuParams","contextMenuItems","alertVisible","alertParams","requestedTopic","BroadcastChannel","documentElement","clientWidth","clientHeight","tnSetup","onConnect","onDisconnect","onAutoreconnectIteration","setDeviceToken","parsedNav","expires","setAuthToken","connect","readTimer","readTimerCallback","persistentCache","onSetupCompleted","appName","apiKey","secure","setHumanLanguage","enableLogging","oobNotification","fbPush","usePublicVapidKey","messagingVapidKey","serviceWorker","reg","useServiceWorker","postMessage","onTokenRefresh","onMessage","payload","mobile","onupdatefound","installingWorker","installing","onstatechange","controller","getTopicAccessMode","newTopicTabSelected","tab","reconnectCountdown","reconnect","isConnected","initStorage","clearStorage","getServerInfo","ver","sec","prom","timeLeft","seconds","secondsToTime","isAuthenticated","promise","getAuthToken","loginBasic","loginToken","goToTopic","onContactUpdate","getCurrentUserID","withDesc","withCred","disconnect","urlHash","setUrlSidePanel","isPresencer","archived","isArchived","play","foundContacts","merged","updated","prepareSearchableContacts","receivedTimer","noteRecv","fnd","getFndTopic","withSub","s","setMeta","isTopicOnline","isP2PType","am","updateWant","login_","password_","public_","cred_","tags_","createAccountBasic","updateAccountBasic","getCurrentLogin","on","enabled","requestPermission","deleteToken","getToken","refreshedToken","delCredential","basicNavigator","newGroupTopicName","oldName","newName","permissions","updateGiven","delCurrentUser","publish","self_blocked","subscribed","confirmText","rejectText","invite","requestResetAuthSecret","newPassword","str","btoa","atob","base64ReEncode","onAddMember","handleManageGroupMembers","hl","languages","baseLanguage","allMessages","IntlProvider","textComponent","__webpack_require__","module","getter","__esModule","d","exports","definition","o","defineProperty","enumerable","get","obj","prop","prototype","call","__webpack_modules__"],"mappings":"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","file":"index.prod.js","sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = React;","const __WEBPACK_NAMESPACE_OBJECT__ = ReactDOM;","const __WEBPACK_NAMESPACE_OBJECT__ = ReactIntl;","const __WEBPACK_NAMESPACE_OBJECT__ = firebase;","const __WEBPACK_NAMESPACE_OBJECT__ = Tinode;","const __WEBPACK_NAMESPACE_OBJECT__ = firebase.messaging;","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Alert extends React.PureComponent {\n  render() {\n    return this.props.visible ?\n      <div className=\"alert-container\">\n        <div className=\"alert\">\n          <div className=\"title\">{this.props.title}</div>\n          <div className=\"content\">{this.props.content}</div>\n          <div className=\"dialog-buttons\">\n            {this.props.onReject ?\n              <button className=\"outline\" onClick={this.props.onReject}>\n                {this.props.reject || <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />}\n              </button>\n              :\n              null\n            }\n            <button className=\"primary\" onClick={this.props.onConfirm}>\n              {this.props.confirm || <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\"  />}\n            </button>\n          </div>\n        </div>\n      </div>\n    :\n    null;\n  }\n};\n","// This is a generated file. Don't edit.\n\nexport const PACKAGE_VERSION = \"0.18.0-alpha1\";\n","import { PACKAGE_VERSION } from './version.js';\n\n// Name of this application, used in the User-Agent.\nexport const APP_NAME = 'TinodeWeb/' + (PACKAGE_VERSION || '0.17');\n\n// API key. Use https://github.com/tinode/chat/tree/master/keygen to generate your own\nexport const API_KEY = 'AQEAAAABAAD_rAp4DJh05a1HAwFT3A6K';\n\n// The array of possible hosts to connect to.\nexport const KNOWN_HOSTS = {hosted: 'web.tinode.co', local: 'localhost:6060'};\n\n// Default host name and port to connect to.\nexport const DEFAULT_HOST = KNOWN_HOSTS.hosted;\n\n// Enable console logging.\nexport const LOGGING_ENABLED = true;\n\n// Minimum time between two keypress notifications, milliseconds.\nexport const KEYPRESS_DELAY = 3*1000;\n// Delay before sending a {note} for reciving a message, milliseconds.\nexport const RECEIVED_DELAY = 500;\n// Delay before sending a read notification, milliseconds.\nexport const READ_DELAY = 1000;\n\n// The default shortest allowed tag length. Matches the value on the server.\nexport const MIN_TAG_LENGTH = 2;\n// The default greatest allowed tag length. Matches the value on the server.\nexport const MAX_TAG_LENGTH = 96;\n// The default maximum number of tags allowed. Matches the value on the server.\nexport const MAX_TAG_COUNT = 16;\n\n// Access mode for P2P subscriptions initiated by the current user.\nexport const DEFAULT_P2P_ACCESS_MODE = 'JRWPS';\n// Access mode for new group topics created by the current user.\nexport const NEW_GRP_ACCESS_MODE = 'JRWPSAO';\n// Access mode for a channel.\nexport const CHANNEL_ACCESS_MODE = 'JR';\n\n// Access mode for no access.\nexport const NO_ACCESS_MODE = 'N';\n\n// Mediaquery breakpoint between desktop and mobile, in px. Should match the value\n// in @media (max-size: 640px) in base.css\nexport const MEDIA_BREAKPOINT = 640;\n// Size of css 'rem' unit in pixels. Default 1rem = 10pt = 13px.\nexport const REM_SIZE = 13;\n\n// Size of the avatar image: When an avatar image is uploaded, it's resized to\n// a square of this size.\nexport const AVATAR_SIZE = 128;\n\n// Size of the broken_image shown in MessagesView\nexport const BROKEN_IMAGE_SIZE = 32;\n\n// Number of chat messages to fetch in one call.\nexport const MESSAGES_PAGE = 24;\n\n// Default maximum in-band (included directly into the message) attachment size which fits into\n// a message of 256K in size. Used when the server-provided value is unavailable. The actual\n// binary size of the attachment should be smaller due to base64 encoding expansion and some overhead,\n// for instance 1024 bytes.\n// Increase this limit to a greater value in production, if desired. Also increase\n// max_message_size in the server config.\nexport const MAX_INBAND_ATTACHMENT_SIZE = 262144;\n\n// Default absolute maximum attachment size to be used with the server = 8MB.\n// Used when the server-provided value is unavailable. Increase to something like 100MB in production.\nexport const MAX_EXTERN_ATTACHMENT_SIZE = 1 << 23;\n\n// Maximum allowed linear dimension (pixels) of an image sent inline. Larger images will be shrunk\n// to make the larger dimension fit under this size. You may want to adjust it to 1600 or\n// 2400 for production.\nexport const MAX_IMAGE_DIM = 1024;\n\n// Linear dimensions of image preview: shrink image under this size for previews.\nexport const IMAGE_PREVIEW_DIM = 64;\n\n// Maximum number of online users to be shown in a topic title bar. Others will be\n// hidden under \"+X more\"\nexport const MAX_ONLINE_IN_TOPIC = 4;\n\n// Maximum length of user name, topic title, and private comment.\nexport const MAX_TITLE_LENGTH = 60;\n\n// Length of message previews in chat list, in characters.\nexport const MESSAGE_PREVIEW_LENGTH = 80;\n\n// Link for \"Contact Us\".\nexport const LINK_CONTACT_US = 'email:support@tinode.co';\n\n// Link to Privacy Policy.\nexport const LINK_PRIVACY_POLICY = 'https://tinode.co/privacy.html';\n\n// Link to Terms of Service.\nexport const LINK_TERMS_OF_SERVICE = 'https://tinode.co/terms.html';\n","// Context Menu: popup/dropdown menu.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { injectIntl, defineMessages } from 'react-intl';\n\nimport { REM_SIZE } from '../config.js';\nimport HashNavigation from '../lib/navigation.js';\n\nconst messages = defineMessages({\n  info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  },\n  clear_messages: {\n    id: 'menu_item_clear_messages',\n    defaultMessage: 'Clear messages',\n    description: 'Delete all messages'\n  },\n  clear_for_all: {\n    id: 'menu_item_clear_messages_for_all',\n    defaultMessage: 'Clear for All',\n    description: 'Delete all message(s) for all members'\n  },\n  delete: {\n    id: 'menu_item_delete',\n    defaultMessage: 'Delete',\n    description: 'Delete selected messages'\n  },\n  delete_for_all: {\n    id: 'menu_item_delete_for_all',\n    defaultMessage: 'Delete for All',\n    description: 'Delete selected message(s) for all members'\n  },\n  send_retry: {\n    id: 'menu_item_send_retry',\n    defaultMessage: 'Retry',\n    description: 'Retry sending message'\n  },\n  mute: {\n    id: 'menu_item_mute',\n    defaultMessage: 'Mute',\n    description: 'Turn off notifications'\n  },\n  unmute: {\n    id: 'menu_item_unmute',\n    defaultMessage: 'Unmute',\n    description: 'Turn notifications on'\n  },\n  topic_delete: {\n    id: 'menu_item_delete_topic',\n    defaultMessage: 'Delete',\n    description: 'Delete entire topic'\n  },\n  topic_delete_warning: {\n    id: 'topic_delete_warning',\n    defaultMessage: 'Are you sure you want to delete this conversation?',\n    description: 'Alert warning when deleting entire topic'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  unblock: {\n    id: 'menu_item_unblock',\n    defaultMessage: 'Unblock',\n    description: 'Unblock topic or user'\n  },\n  // Generic string suitable for either topic or user.\n  block: {\n    id: 'menu_item_block',\n    defaultMessage: 'Block',\n    description: 'Block topic or user'\n  },\n  topic_block_warning: {\n    id: 'topic_block_warning',\n    defaultMessage: 'Are you sure you want to block this conversation?',\n    description: 'Alert warning when blocking a topic.'\n  },\n  member_delete: {\n    id: 'menu_item_member_delete',\n    defaultMessage: 'Remove',\n    description: 'Remove user from topic'\n  },\n  archive: {\n    id: 'menu_item_archive_topic',\n    defaultMessage: 'Archive',\n    description: 'Move topic from the list of active chats to archive'\n  },\n  unarchive: {\n    id: 'menu_item_restore_topic',\n    defaultMessage: 'Restore',\n    description: 'Restore topic from archive'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n});\n\nclass ContextMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const {formatMessage} = props.intl;\n\n    this.handlePageClick = this.handlePageClick.bind(this);\n    this.handleEscapeKey = this.handleEscapeKey.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n\n    // Preconfigured menu items.\n    this.MenuItems = {\n      'topic_info': {\n        id: 'topic_info',\n        title: formatMessage(messages.info),\n        handler: null\n      },\n      'messages_clear': {\n        id: 'messages_clear',\n        title: formatMessage(messages.clear_messages),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.clear_messages), // title\n            formatMessage(messages.clear_messages_warning), // content\n            (() => { this.deleteMessages(true, false, params, errorHandler); }), // onConfirm\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'messages_clear_hard': {\n        id: 'messages_clear_hard',\n        title: formatMessage(messages.clear_for_all),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.clear_for_all), // title\n            formatMessage(message.delete_messages_warning), // content\n            (() => { return this.deleteMessages(true, true, params, errorHandler); }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'message_delete': {\n        id: 'message_delete',\n        title: formatMessage(messages.delete),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, false, params, errorHandler);\n        }\n      },\n      'message_delete_hard': {\n        id: 'message_delete_hard',\n        title: formatMessage(messages.delete_for_all),\n        handler: (params, errorHandler) => {\n          return this.deleteMessages(false, true, params, errorHandler);\n        }\n      },\n      'menu_item_send_retry': {\n        id: 'menu_item_send_retry',\n        title: formatMessage(messages.send_retry),\n        handler: (params, errorHandler) => {\n          return this.retryMessage(params, errorHandler);\n        }\n      },\n      'topic_unmute': {\n        id: 'topic_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'topic_mute': {\n        id: 'topic_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'topic_unblock': {\n        id: 'topic_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n      'topic_block': {\n        id: 'topic_block',\n        title: formatMessage(messages.block),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.block), // title\n            formatMessage(messages.topic_block_warning), // content\n            (() => {\n              return this.topicPermissionSetter('-JP', params, errorHandler).then((ctrl) => {\n                this.props.onTopicRemoved(params.topicName);\n                return ctrl;\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_delete': {\n        id: 'topic_delete',\n        title: formatMessage(messages.topic_delete),\n        handler: (params, errorHandler) => {\n          return props.onShowAlert(\n            formatMessage(messages.topic_delete), // title\n            formatMessage(messages.topic_delete_warning), // content\n            (() => {\n              const topic = this.props.tinode.getTopic(params.topicName);\n              if (!topic) {\n                console.log(\"Topic not found: \", params.topicName);\n                return;\n              }\n              return topic.delTopic(true).catch((err) => {\n                if (errorHandler) {\n                  errorHandler(err.message, 'err');\n                }\n              });\n            }),\n            null, // \"OK\"\n            true, // Show Reject button\n            null  // \"Cancel\"\n          );\n        }\n      },\n      'topic_archive': {\n        id: 'topic_archive',\n        title: formatMessage(messages.archive),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic) {\n            console.log(\"Topic not found: \", params.topicName);\n            return;\n          }\n          return topic.archive(true).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      'topic_restore': {\n        id: 'topic_restore',\n        title: formatMessage(messages.unarchive),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic) {\n            console.log(\"Topic not found: \", params.topicName);\n            return;\n          }\n          return topic.archive(false).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      // menu_item_edit_permissions is defined elsewhere.\n      'permissions': {\n        id: 'permissions',\n        title: formatMessage(messages.edit_permissions),\n        handler: null\n      },\n      'member_delete': {\n        id: 'member_delete',\n        title: formatMessage(messages.member_delete),\n        handler: (params, errorHandler) => {\n          const topic = this.props.tinode.getTopic(params.topicName);\n          if (!topic || !params.user) {\n            console.log(\"Topic or user not found: '\" + params.topicName + \"', '\" + params.user + \"'\");\n            return;\n          }\n          return topic.delSubscription(params.user).catch((err) => {\n            if (errorHandler) {\n              errorHandler(err.message, 'err');\n            }\n          });\n        }\n      },\n      'member_mute': {\n        id: 'member_mute',\n        title: formatMessage(messages.mute),\n        handler: this.topicPermissionSetter.bind(this, '-P')\n      },\n      'member_unmute': {\n        id: 'member_unmute',\n        title: formatMessage(messages.unmute),\n        handler: this.topicPermissionSetter.bind(this, '+P')\n      },\n      'member_block': {\n        id: 'member_block',\n        title: formatMessage(messages.block),\n        handler: this.topicPermissionSetter.bind(this, '-JP')\n      },\n      'member_unblock': {\n        id: 'member_unblock',\n        title: formatMessage(messages.unblock),\n        handler: this.topicPermissionSetter.bind(this, '+JP')\n      },\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handlePageClick, false);\n    document.addEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handlePageClick, false);\n    document.removeEventListener('keyup', this.handleEscapeKey, false);\n  }\n\n  handlePageClick(e) {\n    if (ReactDOM.findDOMNode(this).contains(e.target)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n  }\n\n  handleEscapeKey(e) {\n    if (e.keyCode === 27) {\n      this.props.hide();\n    }\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.hide();\n    let item = this.props.items[e.currentTarget.dataset.id];\n    if (typeof item == 'string') {\n      item = this.MenuItems[item];\n    }\n\n    if (!item) {\n      console.log(\"Invalid menu item ID\", e.currentTarget.dataset.id);\n    } else {\n      this.props.onAction(\n        item.id,\n        item.handler(this.props.params, this.props.onError),\n        this.props.params);\n    }\n  }\n\n  // Menu Actions\n\n  deleteMessages(all, hard, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found: \", params.topicName);\n      return;\n    }\n\n    // We don't know if the message is still pending (e.g. attachment is being uploaded),\n    // so try cancelling first. No harm if we can't cancel.\n    // The message can be cancelled if transmission to the server has not\n    // started yet or if the message send has failed.\n    if (!all && topic.cancelSend(params.seq)) {\n      return;\n    }\n    // Can't cancel. Delete instead.\n    const promise = all ?\n      topic.delMessagesAll(hard) :\n      topic.delMessagesList([params.seq], hard);\n\n    return promise.catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Retries sending failed message.\n  retryMessage(params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    // Remove the existing message entry.\n    if (!topic || !topic.flushMessage(params.seq)) {\n      return;\n    }\n    const msg = topic.createMessage(params.content, false);\n    return topic.publishDraft(msg).catch((err) => {\n      if (errorHandler) {\n        errorHandler(err.message, 'err');\n      }\n    });\n  }\n\n  // Function is used by context menu to set permissions.\n  topicPermissionSetter(mode, params, errorHandler) {\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (!topic) {\n      console.log(\"Topic not found\", params.topicName);\n      return;\n    }\n\n    let result = topic.updateMode(params.user, mode);\n    if (errorHandler) {\n      result = result.catch((err) => {\n        errorHandler(err.message, 'err');\n      });\n    }\n    return result;\n  }\n\n  render() {\n    let count = 0;\n    let menu = [];\n    this.props.items.map((item) => {\n      if (typeof item == 'string') {\n        item = this.MenuItems[item];\n      }\n      if (item && item.title) {\n        menu.push(\n          item.title == '-' ?\n            <li className=\"separator\" key={count} />\n            :\n            <li onClick={this.handleClick} data-id={count} key={count}>{item.title}</li>\n        );\n      }\n      count++;\n    });\n\n    // Ensure that menu is inside the app-container.\n    const hSize = 12 * REM_SIZE;\n    const vSize = REM_SIZE * (0.7 + menu.length * 2.5);\n    const left = (this.props.bounds.right - this.props.clickAt.x < hSize) ?\n        (this.props.clickAt.x - this.props.bounds.left - hSize) :\n        (this.props.clickAt.x - this.props.bounds.left);\n    const top = (this.props.bounds.bottom - this.props.clickAt.y < vSize) ?\n        (this.props.clickAt.y - this.props.bounds.top - vSize) :\n        (this.props.clickAt.y - this.props.bounds.top);\n\n    const position = {\n      left: left + 'px',\n      top: top + 'px'\n    };\n\n    return (\n      <ul className=\"menu\" style={position}>\n        {menu}\n      </ul>\n    );\n  }\n}\n\nexport default injectIntl(ContextMenu);\n","// Short representation of time in the past.\nexport function shortDateFormat(then, locale) {\n  locale = locale || window.navigator.userLanguage || window.navigator.language;\n  const now = new Date();\n  if (then.getFullYear() == now.getFullYear()) {\n    // Same year.\n    if (then.getMonth() == now.getMonth() && then.getDate() == now.getDate()) {\n      // Same month and day, show time only.\n      return then.toLocaleTimeString(locale, {hour12: false, hour: '2-digit', minute: '2-digit'});\n    }\n    // Different month and/or day, show month day, time.\n    return then.toLocaleDateString(locale,\n      {hour12: false, month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit'});\n  }\n  // Different year: just show the date.\n  return then.toLocaleDateString(locale, {year: 'numeric', month: 'short', day: 'numeric'});\n}\n\n// Convert seconds to minutes:seconds, i.e. 156 sec -> 2:36.\nexport function secondsToTime(seconds) {\n  const min = Math.floor(seconds / 60);\n  let sec = seconds % 60;\n  sec = sec < 10 ? `0${sec}` : sec;\n  return `${min}:${sec}`;\n}\n\n// Convert a number of bytes to human-readable format.\nexport function bytesToHumanSize(bytes) {\n  if (!bytes || bytes == 0) {\n    return '0 Bytes';\n  }\n\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n  const bucket = Math.min(Math.floor(Math.log2(bytes) / 10) | 0, sizes.length-1);\n  const count = bytes / Math.pow(1024, bucket);\n  const round = bucket > 0 ? (count < 3 ? 2 : (count < 30 ? 1 : 0)) : 0;\n  return count.toFixed(round) + ' ' + sizes[bucket];\n}\n\n// Get 32 bit integer hash value for a string. Ideally it should produce the same value\n// as Java's String#hash().\nexport function stringHash(value) {\n  let hash = 0;\n  value = '' + value;\n  for (let i = 0; i < value.length; i++) {\n    hash = ((hash << 5) - hash) + value.charCodeAt(i);\n    hash = hash & hash; // Convert to 32bit integer\n  }\n  return hash;\n}\n","import React from 'react';\n\nimport Tinode from 'tinode-sdk';\n\nimport { stringHash } from '../lib/strformat.js';\n\nexport default class LetterTile extends React.PureComponent {\n  render() {\n    let avatar;\n    if (this.props.avatar === true) {\n      const isGroup = (Tinode.topicType(this.props.topic) == 'grp');\n      const iconColor = (isGroup ? 'light-color' : 'dark-color')\n        + (Math.abs(stringHash(this.props.topic)) % 16);\n      if (this.props.topic && this.props.title && this.props.title.trim()) {\n        const letter = this.props.title.trim().charAt(0);\n        const className = 'lettertile ' + iconColor;\n        avatar = (<div className={className}><div>{letter}</div></div>)\n      } else {\n        const className = 'material-icons ' + iconColor;\n        avatar = isGroup ?\n          <i className={className}>group</i> : <i className={className}>person</i>;\n      }\n    } else if (this.props.avatar) {\n      // If avatar image is invalid, show a placeholder.\n      avatar = <img className=\"avatar\" alt=\"avatar\" src={this.props.avatar}\n        onError={(e)=>{e.target.onerror = null; e.target.src=\"/img/broken_image.png\"}} />;\n    } else {\n      avatar = null;\n    }\n    return avatar;\n  }\n}\n","// File and image helper functions.\nimport { MAX_INBAND_ATTACHMENT_SIZE, MAX_IMAGE_DIM } from '../config.js';\nimport { bytesToHumanSize } from './strformat.js'\n\n// Supported image MIME types and corresponding file extensions.\nexport const SUPPORTED_IMAGE_FORMATS = ['image/jpeg', 'image/gif', 'image/png', 'image/svg', 'image/svg+xml'];\nexport const MIME_EXTENSIONS         = ['jpg',        'gif',       'png',       'svg',       'svg'];\n\n// Make a data: URL from public.photo\nexport function makeImageDataUrl(photo) {\n  if (photo) {\n    if (photo.data && photo.type) {\n      const mime = photo.type.startsWith('image/') ? photo.type : ('image/' + photo.type);\n      return 'data:' + mime + ';base64,' + photo.data;\n    }\n    return photo.ref;\n  }\n  return null;\n}\n\n// Calculate linear dimensions for scaling image down to fit under a certain size.\n// Returns an object which contains destination sizes, source sizes, and offsets\n// into source (when making square images).\nexport function fitImageSize(width, height, maxWidth, maxHeight, forceSquare) {\n  // Sanitize input\n  width = width | 0;\n  height = height | 0;\n  maxWidth = maxWidth | 0;\n  maxHeight = maxHeight | 0;\n\n  if (width <= 0 || height <= 0 || maxWidth <= 0 || maxHeight <= 0) {\n    return null;\n  }\n\n  if (forceSquare) {\n    maxWidth = maxHeight = Math.min(maxWidth, maxHeight);\n  }\n\n  const scale = Math.min(\n    Math.min(width, maxWidth) / width,\n    Math.min(height, maxHeight) / height\n  );\n\n  const size = {\n    dstWidth: (width * scale) | 0,\n    dstHeight: (height * scale) | 0,\n  };\n\n  if (forceSquare) {\n    // Also calculate parameters for making the image square.\n    size.dstWidth = size.dstHeight = Math.min(size.dstWidth, size.dstHeight);\n    size.srcWidth = size.srcHeight = Math.min(width, height);\n    size.xoffset = ((width - size.srcWidth) / 2) | 0;\n    size.yoffset = ((height - size.srcWidth) / 2) | 0;\n  } else {\n    size.xoffset = size.yoffset = 0;\n    size.srcWidth = width;\n    size.srcHeight = height;\n  }\n  return size;\n}\n\n// Ensure file's extension matches mime content type\nexport function fileNameForMime(fname, mime) {\n  const idx = SUPPORTED_IMAGE_FORMATS.indexOf(mime);\n  if (idx < 0 || !fname) {\n    // Unknown mime or empty name.\n    return fname;\n  }\n  const ext = MIME_EXTENSIONS[idx];\n\n  const at = fname.lastIndexOf('.');\n  if (at >= 0) {\n    fname = fname.substring(0, at);\n  }\n  return fname + '.' + ext;\n}\n\n// Scale uploaded image to fit under certain dimensions and byte size, optionally constraining to a square.\n// On success calls onSuccess callback with the scaled image as Blob.\nexport function imageScaled(fileOrBlob, maxWidth, maxHeight, maxSize, forceSquare, onSuccess, onError) {\n  const img = new Image();\n  img.crossOrigin = 'Anonymous';\n  img.onerror = function(err) {\n    onError(\"Image format unrecognized\");\n  }\n  img.onload = async function() {\n    // Once the image is loaded, the URL is no longer needed.\n    URL.revokeObjectURL(img.src);\n\n    // Calculate the desired image dimensions.\n    const dim = fitImageSize(this.width, this.height, maxWidth, maxHeight, forceSquare);\n    if (!dim) {\n      onError(\"Invalid image\");\n      return;\n    }\n    let canvas = document.createElement('canvas');\n    canvas.width = dim.dstWidth;\n    canvas.height = dim.dstHeight;\n    let ctx = canvas.getContext('2d');\n    ctx.imageSmoothingEnabled = true;\n    ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n      0, 0, dim.dstWidth, dim.dstHeight);\n\n    const mime = SUPPORTED_IMAGE_FORMATS.includes(fileOrBlob.type) ? fileOrBlob.type : 'image/jpeg';\n    // Generate blob to check size of the image.\n    let blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    if (!blob) {\n      onError(\"Unsupported image format\");\n      return;\n    }\n\n    // Ensure the image is not too large. Shrink the image keeping the aspect ratio.\n    // Do nothing if maxsize is <= 0.\n    while (maxSize > 0 && blob.length > maxSize) {\n      dim.dstWidth = (dim.dstWidth * 0.70710678118) | 0;\n      dim.dstHeight = (dim.dstHeight * 0.70710678118) | 0;\n      canvas.width = dim.dstWidth;\n      canvas.height = dim.dstHeight;\n      ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(this, dim.xoffset, dim.yoffset, dim.srcWidth, dim.srcHeight,\n        0, 0, dim.dstWidth, dim.dstHeight);\n      blob = await new Promise(resolve => canvas.toBlob(resolve, mime));\n    }\n\n    canvas = null;\n    onSuccess(mime, blob, dim.dstWidth, dim.dstHeight, fileNameForMime(fileOrBlob.name, mime));\n  };\n  img.src = URL.createObjectURL(fileOrBlob);\n}\n\n// Convert File to base64 string.\nexport function fileToBase64(file, onSuccess) {\n  const reader = new FileReader();\n  reader.addEventListener('load', function() {\n    onSuccess(file.type, reader.result.split(',')[1], file.name);\n  });\n  reader.readAsDataURL(file);\n}\n\n// Convert Blob to base64 string.\nexport function blobToBase64(blob, onSuccess) {\n  const reader = new FileReader();\n  reader.addEventListener('load', function() {\n    onSuccess(blob.type, reader.result.split(',')[1]);\n  });\n  reader.readAsDataURL(blob);\n}\n\n// File pasted from the clipboard. It's either an inline image or a file attachment.\n// FIXME: handle large files out of band.\nexport function filePasted(event, onImageSuccess, onAttachmentSuccess, onError) {\n  var items = (event.clipboardData || event.originalEvent.clipboardData || {}).items;\n  for (var i in items) {\n    var item = items[i];\n    if (item.kind === 'file') {\n      var file = item.getAsFile();\n      if (!file) {\n        console.log(\"Failed to get file object from pasted file item\", item.kind, item.type);\n        continue;\n      }\n      if (file.type && file.type.split('/')[0] == 'image') {\n        // Handle inline image\n        if (file.size > MAX_INBAND_ATTACHMENT_SIZE || SUPPORTED_IMAGE_FORMATS.indexOf(file.type) < 0) {\n          imageFileScaledToBase64(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, false, onImageSuccess, onError);\n        } else {\n          imageFileToBase64(file, onImageSuccess, onError);\n        }\n      } else {\n        // Handle file attachment\n        fileToBase64(file, onAttachmentSuccess, onError)\n      }\n      // Indicate that the pasted data contains a file.\n      return true;\n    }\n  }\n  // No file found.\n  return false;\n}\n\n// Get mime type from data URL header.\nexport function getMimeType(header) {\n  var mime = /^data:(image\\/[-+a-z0-9.]+);base64/.exec(header);\n  return (mime && mime.length > 1) ? mime[1] : null;\n}\n\n// Given length of a binary object in bytes, calculate the length after\n// base64 encoding.\nexport function base64EncodedLen(n) {\n  return Math.floor((n + 2) / 3) * 4;\n}\n\n// Given length of a base64-encoded object, calculate decoded size of the\n// pbject in bytes.\nexport function base64DecodedLen(n) {\n  return Math.floor(n / 4) * 3;\n}\n\n// Re-encode string to standard base64 encoding with padding.\n// The string may be base64-URL encoded without the padding.\nexport function base64ReEncode(str) {\n  if (str) {\n    str = str.replace(/-/g, '+').replace(/_/g, '/');\n    try {\n      str = btoa(atob(str));\n    } catch(err) {\n      console.log(\"Failed to base64 re-encode string.\", err);\n      str = null;\n    }\n  }\n  return str;\n}\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\n\nimport { AVATAR_SIZE, MAX_EXTERN_ATTACHMENT_SIZE } from '../config.js';\nimport { imageScaled, blobToBase64, makeImageDataUrl } from '../lib/blob-helpers.js';\n\nexport default class AvatarUpload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dataUrl: props.avatar\n    };\n\n    this.handleFileUpload = this.handleFileUpload.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.avatar != prevProps.avatar) {\n      this.setState({dataUrl: this.props.avatar})\n    }\n  }\n\n  handleFileUpload(e) {\n    imageScaled(e.target.files[0], AVATAR_SIZE, AVATAR_SIZE, MAX_EXTERN_ATTACHMENT_SIZE, true,\n      // Image successfully scaled and converted.\n      (mime, blob) => {\n        // Convert blob to base64-encoded bits.\n        blobToBase64(blob, (unused, base64bits) => {\n          const du = makeImageDataUrl({data: base64bits, type: mime});\n          this.setState({dataUrl: du});\n          this.props.onImageChanged(du);\n        });\n      },\n      // Failure\n      (err) => {\n        this.props.onError(err, 'err');\n      });\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  render() {\n    // Randomize id value in case more than one AvatarUpload is shown\n    // at the same time.\n    const randId = 'file-input-avatar-' + (Math.random() + '').substr(2);\n    const className = 'avatar-upload' + (this.props.readOnly ? ' read-only' : '');\n    return (\n      <div className={className}>\n        {this.props.readOnly || !this.state.dataUrl ?\n          null :\n          <a href=\"#\" className=\"clear-avatar\" onClick={(e) => {e.preventDefault(); this.props.onImageChanged(null);}}>\n            <i className=\"material-icons\">clear</i>\n          </a>}\n        {this.state.dataUrl ?\n          <img src={this.state.dataUrl} className=\"preview\" /> :\n          this.props.readOnly && this.props.uid ?\n            <div className=\"avatar-box\">\n              <LetterTile\n                avatar={true}\n                topic={this.props.uid}\n                title={this.props.title} />\n            </div>\n            :\n            <div className=\"blank\">{AVATAR_SIZE}&times;{AVATAR_SIZE}</div>}\n        {this.props.readOnly ? null :\n          <input type=\"file\" id={randId} className=\"inputfile hidden\"\n            accept=\"image/*\" onChange={this.handleFileUpload} />}\n        {this.props.readOnly ? null :\n        <label htmlFor={randId} className=\"round\">\n          <i className=\"material-icons\">file_upload</i>\n        </label>}\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\n/* BEGIN CheckBox: styled checkbox */\nexport default class CheckBox extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange() {\n    this.props.onChange(this.props.name, !this.props.checked);\n  }\n\n  render() {\n    return (\n      this.props.onChange ? (\n        this.props.checked ?\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box</i> :\n          <i className=\"material-icons blue clickable\" onClick={this.handleChange}>check_box_outline_blank</i>\n        ) : (\n          this.props.checked ?\n            <i className=\"material-icons\">check_box</i> :\n            <i className=\"material-icons\">check_box_outline_blank</i>\n        )\n    );\n  }\n}\n/* END CheckBox */\n","import React from 'react';\n\nconst icon_mapping = {'muted': 'notifications_off', 'banned': 'block',\n  'verified': 'verified', 'staff': 'verified_user', 'dangerous': 'dangerous'};\n\n/* Contact's labels: [you], or icons [muted], [blocked] */\nexport default class ContactBadges extends React.PureComponent {\n    render() {\n      let badges = null;\n      if (this.props.badges && this.props.badges.length > 0) {\n        badges = [];\n        this.props.badges.map(function(b) {\n          if (b.icon) {\n            badges.push(<i className=\"material-icons as-badge\" key={b.key || b.icon}>{icon_mapping[b.icon] || b.icon}</i>);\n          } else {\n            const style = 'badge' + (b.color ? ' ' + b.color : '');\n            badges.push(<span className={style} key={b.key || b.name}>{b.name}</span>);\n          }\n        });\n        return <>{badges}</>;\n      }\n      return null;\n    }\n};\n","// Odds and ends\n\nimport Tinode from 'tinode-sdk';\n\n// Make shortcut icon appear with a green dot + show unread count in title.\nexport function updateFavicon(count) {\n  const oldIcon = document.getElementById('shortcut-icon');\n  const head = document.head || document.getElementsByTagName('head')[0];\n  const newIcon = document.createElement('link');\n  newIcon.type = 'image/png';\n  newIcon.id = 'shortcut-icon';\n  newIcon.rel = 'shortcut icon';\n  newIcon.href = 'img/logo32x32' + (count > 0 ? 'a' : '') + '.png';\n  if (oldIcon) {\n    head.removeChild(oldIcon);\n  }\n  head.appendChild(newIcon);\n\n  document.title = (count > 0 ? '('+count+') ' : '') + 'Tinode';\n}\n\n// Create theCard which represents user's or topic's \"public\" info.\nexport function theCard(fn, imageUrl, imageMimeType) {\n  let card = null;\n  fn = fn && fn.trim();\n\n  if (fn) {\n    card = {\n      fn: fn\n    };\n  }\n\n  if (imageUrl) {\n    card = card || {};\n    let mimeType = imageMimeType;\n    // Is this a data URL \"data:[<mediatype>][;base64],<data>\"?\n    const matches = /^data:(image\\/[-a-z0-9+.]+)?(;base64)?,/i.exec(imageUrl);\n    if (matches) {\n      mimeType = matches[1];\n      card.photo = {\n        data: imageUrl.substring(imageUrl.indexOf(',') + 1)\n      };\n    } else {\n      card.photo = {\n        ref: imageUrl\n      };\n    }\n    card.photo.type = (mimeType || 'image/jpeg').substring('image/'.length);\n  }\n\n  return card;\n}\n\n// Deep-shallow compare two arrays: shallow compare each element.\nexport function arrayEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (!Array.isArray(a) || !Array.isArray(b)) {\n    return false;\n  }\n\n  // Compare lengths first.\n  if (a.length != b.length) {\n    return false;\n  }\n  // Order of elements is ignored.\n  a.sort();\n  b.sort();\n  for (let i = 0, l = a.length; i < l; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Checks (loosely) if the given string is a phone. If so, returns the phone number in a format\n// as close to E.164 as possible.\nexport function asPhone(val) {\n  val = val.trim();\n  if (/^(?:\\+?(\\d{1,3}))?[- (.]*(\\d{3})[- ).]*(\\d{3})[- .]*(\\d{2})[- .]*(\\d{2})?$/.test(val)) {\n    return val.replace(/[- ().]*/, '');\n  }\n  return null;\n}\n\n// Checks (loosely) if the given string is an email. If so returns the email.\nexport function asEmail(val) {\n  val = val.trim();\n  if (/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(val)) {\n    return val;\n  }\n  return null;\n}\n\n// Checks if URL is a relative url, i.e. has no 'scheme://', including the case of missing scheme '//'.\n// The scheme is expected to be RFC-compliant, e.g. [a-z][a-z0-9+.-]*\n// example.html - ok\n// https:example.com - not ok.\n// http:/example.com - not ok.\n// ' ↲ https://example.com' - not ok. (↲ means carriage return)\nexport function isUrlRelative(url) {\n  return url && !/^\\s*([a-z][a-z0-9+.-]*:|\\/\\/)/im.test(url);\n}\n\n// Ensure URL does not present an XSS risk. Optional allowedSchemes may contain an array of\n// strings with permitted URL schemes, such as ['ftp', 'ftps']; otherwise accept http and https only.\n// If apikey and/or token is defined, it's appended to relative URL.\nexport function sanitizeUrl(url, allowedSchemes) {\n  if (!url) {\n    return null;\n  }\n\n  // Strip control characters and whitespace. They are not valid URL characters anyway.\n  url = url.replace(/[^\\x20-\\x7E]/gmi, '').trim();\n\n  // Relative URLs are safe.\n  // Relative URL does not start with ':', abcd123: or '//'.\n  if (!/^([a-z][a-z0-9+.-]*:|\\/\\/)/i.test(url)) {\n    return url;\n  }\n\n  // Blob URLs are safe.\n  if (/^blob:http/.test(url)) {\n    return url;\n  }\n\n  // Absolute URL. Accept only safe schemes, or no scheme.\n  const schemes = Array.isArray(allowedSchemes) ? allowedSchemes.join('|') : 'http|https';\n  const re = new RegExp('^((' + schemes + '):|//)', 'i');\n  if (!re.test(url)) {\n    return null;\n  }\n\n  return url;\n}\n\n// Ensure URL is suitable for <img src=\"url\"> field: the URL must be a relative URL or\n// have http:, https:, blob: or data: scheme.\n// The relative URL is appended with the API key and/or auth token.\n// In case of data: scheme, the URL must start with a 'data:image/XXXX;base64,'.\nexport function sanitizeImageUrl(url) {\n  if (!url) {\n    return null;\n  }\n\n  const sanitizedUrl = sanitizeUrl(url);\n  if (sanitizedUrl) {\n    return sanitizedUrl;\n  }\n\n  // Is this a data: URL of an image?\n  if (/data:image\\/[a-z0-9.-]+;base64,/i.test(url.trim())) {\n    return url;\n  }\n\n  return null;\n}\n\n// Given message's received status, return name and color of a delivery indicator icon.\nexport function deliveryMarker(received) {\n  switch (received) {\n    case Tinode.MESSAGE_STATUS_SENDING:\n      return { name: 'access_time' }; // watch face\n    case Tinode.MESSAGE_STATUS_FAILED:\n      return { name: 'warning', color: 'amber' }; // yellow icon /!\\\n    case Tinode.MESSAGE_STATUS_SENT:\n      return { name: 'done' }; // checkmark\n    case Tinode.MESSAGE_STATUS_RECEIVED:\n      return { name: 'done_all' }; // double checkmark\n    case Tinode.MESSAGE_STATUS_READ:\n      return { name: 'done_all', color: 'blue' }; // blue double checkmark\n  }\n  return null;\n}\n","// Received/read indicator.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { shortDateFormat } from '../lib/strformat.js';\nimport { deliveryMarker } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  message_sending: {\n    id: 'message_sending',\n    defaultMessage: 'sending...',\n    description: 'Message being sent, in place of time stamp'\n  },\n  message_sending_failed: {\n    id: 'message_sending_failed',\n    defaultMessage: 'failed',\n    description: 'Failed to send message, in place of time stamp'\n  }\n});\n\nclass ReceivedMarker extends React.PureComponent {\n  render() {\n    const {formatMessage} = this.props.intl;\n    let timestamp;\n    if (this.props.received <= Tinode.MESSAGE_STATUS_SENDING) {\n      timestamp = formatMessage(messages.message_sending);\n    } else if (this.props.received == Tinode.MESSAGE_STATUS_FAILED) {\n      timestamp = formatMessage(messages.message_sending_failed);\n    } else {\n      timestamp = shortDateFormat(this.props.timestamp, this.props.intl.locale);\n    }\n\n    const icon = deliveryMarker(this.props.received);\n    const marker = icon ? <i className={'material-icons small ' + icon.color}>{icon.name}</i> : null;\n\n    return (\n      <span className=\"timestamp\">\n        {timestamp}{'\\u00a0'}{marker}\n      </span>\n    );\n  }\n};\n\nexport default injectIntl(ReceivedMarker);\n","// The counter of unread messages in the topic.\nimport React from 'react';\n\nexport default class UnreadBadge extends React.PureComponent {\n  render() {\n    return (this.props.count > 0 ?\n      <span className=\"unread\">{this.props.count > 9 ? \"9+\" : this.props.count}</span>\n      : null);\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\n\nimport ContactBadges from './contact-badges.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\nimport UnreadBadge from './unread-badge.jsx';\n\nimport { Drafty } from 'tinode-sdk';\n\nimport { deliveryMarker } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  drafty_image: {\n    id: 'drafty_image',\n    defaultMessage: 'Picture',\n    description: 'Comment for embedded images in drafty preview'\n  },\n  drafty_form: {\n    id: 'drafty_form',\n    defaultMessage: 'Form: ',\n    description: 'Comment for form in drafty preview'\n  },\n  drafty_attachment: {\n    id: 'drafty_attachment',\n    defaultMessage: 'Attachment',\n    description: 'Comment for attachment in drafty preview'\n  },\n});\n\nclass Contact extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.props.onSelected) {\n      // Index this.props.index is used by GroupManager.\n      this.props.onSelected(this.props.item, this.props.index);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.props.item, y: e.pageY, x: e.pageX });\n  }\n\n  render() {\n    let title = this.props.title;\n    if (!title) {\n      title = <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n        description=\"Title shown when the topic has no name\" /></i>;\n    } else if (title.length > 30) {\n      // FIXME: this is probably wrong for RTL languages.\n      title = title.substring(0, 28) + '…';\n    }\n    const online = this.props.now ? 'online' : 'offline';\n    const avatar = this.props.avatar ? this.props.avatar : true;\n    const badges = this.props.badges ? this.props.badges.slice() : [];\n    const icon_badges = [];\n    if (this.props.isVerified) {\n      icon_badges.push({icon: 'verified'});\n    }\n    if (this.props.isStaff) {\n      icon_badges.push({icon: 'staff'});\n    }\n    if (this.props.isDangerous) {\n      icon_badges.push({icon: 'dangerous'});\n    }\n    if (this.props.acs) {\n      if (this.props.showMode) {\n        badges.push({name: this.props.acs.getMode(), key: 'mode'});\n      }\n      if (this.props.acs.isMuted()) {\n        icon_badges.push({icon: 'muted'});\n      }\n      if (!this.props.acs.isJoiner()) {\n        icon_badges.push({icon: 'banned'});\n      }\n    }\n\n    const subtitle = this.props.preview ?\n      (typeof this.props.preview == 'string' ? this.props.preview :\n        React.createElement(React.Fragment, null, Drafty.format(this.props.preview, draftyFormatter, this))) :\n      this.props.comment;\n\n    const icon = deliveryMarker(this.props.received);\n    const marker = icon ? <i className={'material-icons small space-right' +\n      (icon.color ? ' ' + icon.color : '')}>{icon.name}</i> : null;\n\n    return (\n      <li className={!this.props.showCheckmark && this.props.selected ? 'selected' : null} onClick={this.handleClick}>\n        <div className=\"avatar-box\">\n          <LetterTile\n            avatar={avatar}\n            title={this.props.title}\n            topic={this.props.item} />\n          {this.props.showOnline ? <span className={online} /> :\n            (this.props.showCheckmark && this.props.selected ?\n            <i className=\"checkmark material-icons\">check_circle</i>\n            : null)}\n        </div>\n        <div className=\"text-box\">\n          <div><span className=\"contact-title\">{title}</span>\n            {this.props.isChannel ? <img src=\"/img/channel.png\" className=\"channel\" alt=\"channel\" /> : null}\n            <ContactBadges badges={icon_badges} /><UnreadBadge count={this.props.unread} />\n          </div>\n          {this.props.showMode ?\n            <span><ContactBadges badges={badges} /></span> :\n            <div className=\"contact-comment\">{marker}{subtitle || '\\u00A0'}</div>}\n        </div>\n        {this.props.showContextMenu ?\n          <span className=\"menuTrigger\">\n            <a href=\"#\" onClick={this.handleContextClick}>\n              <i className=\"material-icons\">expand_more</i>\n            </a>\n          </span> : null}\n      </li>\n    );\n  }\n};\n\n\n// Converts Drafty object into a one-line preview.\nfunction draftyFormatter(style, data, values, key) {\n  let el = Drafty.tagName(style);\n  const attr = { key: key };\n  if (el) {\n    const { formatMessage } = this.props.intl;\n    switch (style) {\n      case 'BR':\n        // Replace new line with a space.\n        el = React.Fragment;\n        values = [' '];\n        break;\n      case 'HL':\n        // Make highlight less prominent in preview.\n        attr.className = 'highlight preview';\n        break;\n      case 'LN':\n        // Disable links in previews.\n        el = 'span';\n        break;\n      case 'IM':\n        // Replace image with '[icon] Image'.\n        el = React.Fragment;\n        values = [<i key=\"im\" className=\"material-icons\">photo</i>, formatMessage(messages.drafty_image)];\n        break;\n      case 'BN':\n        el = 'span';\n        attr.className = 'flat-button faux';\n        break;\n      case 'FM':\n        el = React.Fragment;\n        values = [<i key=\"fm\" className=\"material-icons\">dashboard</i>,\n          formatMessage(messages.drafty_form)].concat(values || []);\n        break;\n      case 'RW':\n        el = React.Fragment;\n        break;\n      case 'EX':\n        if (data && data.mime == 'application/json') {\n          // Ignore JSON attachments: they are form response payloads.\n          return null;\n        }\n        el = React.Fragment;\n        values = [<i key=\"ex\" className=\"material-icons\">attachment</i>, formatMessage(messages.drafty_attachment)];\n        break;\n      default:\n        if (el == '_UNKN') {\n          el = React.Fragment;\n          values = [<i key=\"unkn\" className=\"material-icons\">extension</i>];\n        }\n        break;\n    }\n    return React.createElement(el, attr, values);\n  } else {\n    return values;\n  }\n};\n\nexport default injectIntl(Contact);\n","// A panel included into a list of contacts with an action text.\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\n\nclass ContactAction extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.onAction(this.props.action);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <li onClick={this.handleClick} className=\"action\">\n        <div className=\"action-text\">{formatMessage(this.props.title, this.props.values)}</div>\n      </li>\n    );\n  }\n};\n\nexport default injectIntl(ContactAction);\n","// ContactList: component for showing a list of contacts,\n// such as a list of group members in a group chat.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { Drafty } from 'tinode-sdk';\nimport Tinode from 'tinode-sdk';\n\nimport Contact from './contact.jsx';\nimport ContactAction from './contact-action.jsx';\n\nimport { makeImageDataUrl } from '../lib/blob-helpers.js';\n\nimport { MESSAGE_PREVIEW_LENGTH } from '../config.js';\n\nconst messages = defineMessages({\n  badge_you: {\n    id: 'badge_you',\n    defaultMessage: 'you',\n    description: 'Badge for indicating the current user'\n  },\n  badge_owner: {\n    id: 'badge_owner',\n    defaultMessage: 'owner',\n    description: 'Badge for indicating the owner'\n  }\n});\n\nclass ContactList extends React.Component {\n  render() {\n    const { formatMessage } = this.props.intl;\n    const showCheckmark = Array.isArray(this.props.topicSelected);\n    const contactNodes = [];\n    let contactsCount = 0;\n    if (this.props.contacts && this.props.contacts.length > 0) {\n      this.props.contacts.map((c) => {\n        if (c.action) {\n          // Action item\n          contactNodes.push(\n            <ContactAction\n              title={c.title} action={c.action} values={c.values}\n              key={c.action}\n              onAction={this.props.onAction}\n              />);\n        } else {\n          // Normal contact\n          const key = this.props.showMode ? c.user : (c.topic || c.user);\n          // If filter function is provided, filter out the items\n          // which don't satisfy the condition.\n          if (this.props.filterFunc && this.props.filter) {\n            const filterOn = [key];\n            if (c.private && c.private.comment) {\n              filterOn.push(('' + c.private.comment).toLowerCase());\n            }\n            if (c.public && c.public.fn) {\n              filterOn.push(('' + c.public.fn).toLowerCase());\n            }\n            if (!this.props.filterFunc(this.props.filter, filterOn)) {\n              return;\n            }\n          }\n\n          const isChannel = Tinode.isChannelTopicName(key);\n          const selected = showCheckmark ?\n            (this.props.topicSelected.indexOf(key) > -1) :\n            (this.props.topicSelected === key);\n          const badges = [];\n          if (this.props.showMode) {\n            if (key == this.props.myUserId) {\n              badges.push({name: formatMessage(messages.badge_you), color: 'green'});\n            }\n            if (c.acs && c.acs.isOwner()) {\n              badges.push({name: formatMessage(messages.badge_owner), color: 'blue'});\n            }\n          }\n\n          const comment = Array.isArray(c.private) ?\n            c.private.join(',') : (c.private ? c.private.comment : null);\n          let preview;\n          let deliveryStatus;\n          if (!this.props.showMode && c.latestMessage) {\n            const msg = c.latestMessage(true);\n            if (msg) {\n              deliveryStatus = msg._status || c.msgStatus(msg, true);\n              preview = typeof msg.content == 'string' ?\n                msg.content.substr(0, MESSAGE_PREVIEW_LENGTH) :\n                Drafty.preview(msg.content, MESSAGE_PREVIEW_LENGTH);\n            }\n          }\n          contactNodes.push(\n            <Contact\n              title={c.public ? c.public.fn : null}\n              avatar={makeImageDataUrl(c.public ? c.public.photo : null)}\n              comment={comment}\n              preview={preview}\n              received={deliveryStatus}\n              unread={this.props.showUnread ? c.unread : 0}\n              now={c.online && this.props.connected}\n              acs={c.acs}\n              showMode={this.props.showMode}\n              badges={badges}\n              showCheckmark={showCheckmark}\n              selected={selected}\n              showOnline={this.props.showOnline && !isChannel}\n              isChannel={isChannel}\n              onSelected={this.props.onTopicSelected}\n              showContextMenu={this.props.showContextMenu}\n              isVerified={c.isVerified()}\n              isStaff={c.isStaff()}\n              isDangerous={c.isDangerous()}\n              item={key}\n              index={contactNodes.length}\n              key={key} />\n          );\n          contactsCount ++;\n        }\n      }, this);\n    }\n\n    return (\n      <div className={this.props.noScroll ? null : \"scrollable-panel\"}>\n        {contactsCount == 0 ?\n          <div className=\"center-medium-text\"\n            dangerouslySetInnerHTML={{__html: this.props.emptyListMessage}} />\n          :\n          null\n        }\n        {contactNodes.length > 0 ?\n          <ul className=\"contact-box\">\n            {contactNodes}\n          </ul>\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ContactList);\n","// The X menu to be displayed in title bars.\nimport React from 'react';\n\nexport default class MenuCancel extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n        <i className=\"material-icons\">close</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nimport MenuCancel from './menu-cancel.jsx';\n\nexport default class ErrorPanel extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      show: false,\n    };\n\n    this.hide = this.hide.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.level !== this.props.level) {\n      this.setState({\n        show: !(!this.props.level)\n      });\n    }\n  }\n\n  hide() {\n    this.setState({show: false});\n    if (this.props.onClearError) {\n      this.props.onClearError();\n    }\n  }\n\n  render() {\n    const icons = {err: 'error', warn: 'warning', info: 'info'}\n    const level = icons[this.props.level] || '';\n    const className = 'info-box ' + level;\n    return (\n      <div className={className}>\n        <div className=\"icon\"><i className=\"material-icons\">{level}</i></div>\n        <span>\n          {this.props.text}\n          {this.props.action ?\n            <>\n              &#32;<a href=\"#\"\n                style={{ whiteSpace: 'nowrap' }}\n                onClick={(e) => {e.preventDefault(); this.props.action();}}>\n                {this.props.actionText}\n              </a>\n            </>\n          : null}\n        </span>\n        <div className=\"cancel\"><MenuCancel onCancel={this.hide} /></div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\n\nexport default class Chip extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel(this.props.topic, this.props.index);\n  }\n\n  render() {\n    const title = this.props.title || this.props.topic;\n    const className = this.props.invalid ? 'chip invalid' : 'chip';\n    return (\n      <div className={className}>\n        {this.props.noAvatar ?\n          <span className=\"spacer\" /> :\n          <div className=\"avatar-box\">\n            <LetterTile\n              avatar={this.props.avatar || true}\n              topic={this.props.topic}\n              title={this.props.title} />\n          </div>\n        }\n        <span>{title}</span>\n        {this.props.onCancel && !this.props.required ?\n          <a href=\"#\" onClick={this.handleCancel} >&times;</a>\n          : <span className=\"spacer\" />}\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport Chip from './chip.jsx';\n\nimport { makeImageDataUrl } from '../lib/blob-helpers.js';\n\n/* BEGIN ChipInput: group membership widget */\nexport default class ChipInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = ChipInput.deriveStateFromProps(props);\n    this.state.input = '';\n    this.state.focused = false;\n\n    this.handleTextInput = this.handleTextInput.bind(this);\n    this.removeChipAt = this.removeChipAt.bind(this);\n    this.handleChipCancel = this.handleChipCancel.bind(this);\n    this.handleFocusGained = this.handleFocusGained.bind(this);\n    this.handleFocusLost = this.handleFocusLost.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  static deriveStateFromProps(props) {\n    return {\n      placeholder: props.chips ? '' : props.prompt,\n      sortedChips: ChipInput.sortChips(props.chips, props.staticMembers),\n      chipIndex: ChipInput.indexChips(props.chips)\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chips != this.props.chips ||\n      prevProps.staticMembers != this.props.staticMembers ||\n      prevProps.prompt != this.props.prompt) {\n      this.setState(ChipInput.deriveStateFromProps(this.props));\n    }\n    if (!prevState || this.props.chips.length > prevState.sortedChips.length) {\n      this.setState({input: ''});\n    }\n  }\n\n  // Map chip index to user name\n  static indexChips(chips) {\n    const index = {};\n    let count = 0;\n    chips.map((item) => {\n      index[item.user] = count;\n      count ++;\n    });\n    return index;\n  }\n\n  // Have non-removable chips appear before all other chips.\n  static sortChips(chips, keep) {\n    const required = [];\n    const normal = [];\n    chips.map((item) => {\n      if (keep && keep.includes(item.user)) {\n        required.push(item);\n      } else {\n        normal.push(item);\n      }\n    });\n    return required.concat(normal);\n  }\n\n  handleTextInput(e) {\n    this.setState({input: e.target.value});\n    if (this.props.filterFunc) {\n      this.props.filterFunc(e.target.value);\n    }\n  }\n\n  removeChipAt(idx) {\n    const removed = this.state.sortedChips[idx];\n    this.props.onChipRemoved(removed.user, this.state.chipIndex[removed.user]);\n  }\n\n  handleChipCancel(item, idx) {\n    this.removeChipAt(idx);\n  }\n\n  handleFocusGained() {\n    this.setState({focused: true});\n  }\n\n  handleFocusLost() {\n    this.setState({focused: false});\n    if (this.props.onFocusLost) {\n      this.props.onFocusLost(this.state.input);\n    }\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Backspace') {\n      if (this.state.input.length == 0 && this.state.sortedChips.length > 0) {\n        const at = this.state.sortedChips.length - 1;\n        if (this.state.sortedChips[at].user !== this.props.staticMembers) {\n          this.removeChipAt(at);\n        }\n      }\n    } else if (e.key === 'Enter') {\n      if (this.props.onEnter) {\n        this.props.onEnter(this.state.input);\n      }\n    } else if (e.key === 'Escape') {\n      if (this.props.onCancel) {\n        this.props.onCancel();\n      }\n    }\n  }\n\n  render() {\n    const chips = [];\n    let count = 0;\n    const staticMembers = this.props.staticMembers || [];\n    this.state.sortedChips.map((item) => {\n      chips.push(\n        <Chip\n          onCancel={this.handleChipCancel}\n          avatar={makeImageDataUrl(item.public ? item.public.photo : null)}\n          title={item.public ? item.public.fn : undefined}\n          noAvatar={this.props.avatarDisabled}\n          topic={item.user}\n          required={staticMembers.includes(item.user)}\n          invalid={item.invalid}\n          index={count}\n          key={item.user} />\n      );\n      count++;\n    });\n    const className = \"chip-input\" + (this.state.focused ? ' focused' : '');\n    return (\n      <div className={className}>\n        {chips}\n        <input type=\"text\"\n          placeholder={this.state.placeholder}\n          onChange={this.handleTextInput}\n          onFocus={this.handleFocusGained}\n          onBlur={this.handleFocusLost}\n          onKeyDown={this.handleKeyDown}\n          value={this.state.input}\n          autoFocus />\n      </div>\n    );\n  }\n};\n","// GroupMembers: control for managing a list of group members.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\nimport ContactList from './contact-list.jsx';\n\nconst messages = defineMessages({\n  no_contacts: {\n    id: 'no_contacts',\n    defaultMessage: 'You have no contacts :-(',\n    description: 'Shown in ContactsView when the user has no contacts'\n  },\n  contacts_not_found_short: {\n    id: 'contacts_not_found_short',\n    defaultMessage: \"No contacts match ''{query}''\",\n    description: 'Shown in ContactsView when search returned no results'\n  }\n});\n\nclass GroupManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Array of topic members\n      members: props.members,\n      index: GroupManager.indexMembers(props.members),\n      staticMembers: GroupManager.staticMembers(props.members, props.keepInitialMembers, props.requiredMember),\n      contactFilter: '',\n      noContactsMessage: props.intl.formatMessage(messages.no_contacts),\n      selectedContacts: GroupManager.selectedContacts(props.members)\n    };\n\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleMemberRemoved = this.handleMemberRemoved.bind(this);\n    this.handleContactFilter = this.handleContactFilter.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static indexMembers(members) {\n    let index = {};\n    members.map((m) => {\n      index[m.user] = {delta: 0, present: true}; // Delta: 0 unchanged, +1 added, -1 removed\n    });\n    return index;\n  }\n\n  static staticMembers(members, keepInitial, requiredMember) {\n    let stat = [];\n    members.map((m) => {\n      if (keepInitial || m.user == requiredMember) {\n        stat.push(m.user);\n      }\n    });\n    return stat;\n  }\n\n  static selectedContacts(members) {\n    let sel = [];\n    members.map((m) => {\n      sel.push(m.user);\n    });\n    return sel;\n  }\n\n  handleContactSelected(userId, index) {\n    let status = this.state.index[userId];\n    if (status) {\n      if (status.present) {\n        // Prevent duplicate members\n        return;\n      }\n      status.delta += 1;\n      status.present = true;\n    } else {\n      status = {delta: 1, present: true};\n    }\n\n    let m = this.state.members.slice();\n    m.push(this.props.contacts[index]);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleMemberRemoved(userId, index) {\n    const status = this.state.index[userId];\n    if (!status || !status.present) {\n      return;\n    }\n    status.present = false;\n    status.delta -= 1;\n\n    let m = this.state.members.slice();\n    m.splice(index, 1);\n\n    const sel = GroupManager.selectedContacts(m);\n\n    const i = this.state.index;\n    i[userId] = status;\n\n    this.setState({members: m, index: i, selectedContacts: sel});\n  }\n\n  handleContactFilter(val) {\n    const {formatMessage} = this.props.intl;\n    const msg = !val ?\n      formatMessage(messages.no_contacts) :\n      formatMessage(messages.contacts_not_found_short, {query: val});\n\n    this.setState({contactFilter: val, noContactsMessage: msg});\n  }\n\n  static doContactFiltering(filter, values) {\n    if (filter) {\n      for (let i=0; i<values.length; i++) {\n        if (values[i].indexOf(filter) >= 0) {\n          return true;\n        }\n      }\n      return false;\n    }\n    return true;\n  }\n\n  handleSubmit() {\n    var instance = this;\n    var members = [];\n    var added = [];\n    var removed = [];\n\n    var keys = Object.keys(this.state.index);\n    keys.map(function(k) {\n      if (instance.state.index[k].present) {\n        members.push(k);\n      }\n\n      if (instance.state.index[k].delta > 0) {\n        added.push(k);\n      } else if (instance.state.index[k].delta < 0) {\n        removed.push(k);\n      }\n    });\n    this.props.onSubmit(members, added, removed);\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    return (\n      <div id=\"group-manager\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_group_members\" defaultMessage=\"Group Members\" description=\"Section title\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ChipInput\n            chips={this.state.members}\n            staticMembers={this.state.staticMembers}\n            prompt=\"add members\"\n            filterFunc={this.handleContactFilter}\n            onChipRemoved={this.handleMemberRemoved} />\n        </div>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"title_all_contacts\" defaultMessage=\"All Contacts\"\n              description=\"Section title [All Contacts]\" />\n          </label>\n        </div>\n        <ContactList\n          contacts={this.props.contacts}\n          myUserId={this.props.myUserId}\n          topicSelected={this.state.selectedContacts}\n          filter={this.state.contactFilter}\n          filterFunc={GroupManager.doContactFiltering}\n          emptyListMessage={this.state.noContactsMessage}\n          showOnline={false}\n          showUnread={false}\n          onTopicSelected={this.handleContactSelected} />\n        <div id=\"group-manager-buttons\" className=\"panel-form-row\">\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n          <button className=\"secondary\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(GroupManager);\n","// Password with a visiblity toggle.\nimport React from 'react';\n\nexport default class VisiblePassword extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: this.props.value,\n      visible: false\n    };\n\n    this.handleVisibility = this.handleVisibility.bind(this);\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n    if (this.props.onChange) {\n      this.props.onChange(e);\n    }\n  }\n\n  handleVisibility(e) {\n    e.preventDefault();\n    this.setState({visible: !this.state.visible});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode == 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, visible: false});\n      if (this.props.onFinished) {\n        this.props.onFinished();\n      }\n    } else if (e.keyCode == 13) {\n      // Enter pressed\n      this.handleEditingFinished();\n    }\n  }\n\n  handleEditingFinished(e) {\n    if (e) {\n      let currentTarget = e.currentTarget;\n      setTimeout(() => {\n        if (!currentTarget.contains(document.activeElement)) {\n          if (this.props.onFinished) {\n            this.props.onFinished(this.state.value);\n          }\n        }\n      }, 0);\n    } else if (this.props.onFinished) {\n      this.props.onFinished(this.state.value.trim());\n    }\n  }\n\n  render() {\n    return (\n      <div tabIndex=\"-1\" className=\"group-focus\"\n        onBlur={this.handleEditingFinished}>\n        <input className=\"with-visibility\"\n          type={this.state.visible ? \"text\" : \"password\"}\n          value={this.state.value}\n          placeholder={this.props.placeholder}\n          required={this.props.required ? 'required' : ''}\n          autoFocus={this.props.autoFocus ? 'autoFocus' : ''}\n          autoComplete={this.props.autoComplete}\n          onChange={this.handeTextChange}\n          onKeyDown={this.handleKeyDown} />\n        <span onClick={this.handleVisibility}>\n          <i className=\"material-icons clickable light-gray\">\n            {this.state.visible ? 'visibility' : 'visibility_off'}\n          </i>\n        </span>\n      </div>\n    );\n  }\n}\n","// In-place text editor. Shows text with an icon which toggles it into an input field.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport VisiblePassword from './visible-password.jsx';\n\nexport default class InPlaceEdit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      active: props.active,\n      initialValue: props.value || '',\n      value: props.value || ''\n    };\n\n    this.handeTextChange = this.handeTextChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleStartEditing = this.handleStartEditing.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n    this.handlePasswordFinished = this.handlePasswordFinished.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // If text has changed while in read mode, update text and discard changes.\n    // Ignore update if in edit mode.\n    const newValue = this.props.value || '';\n    if (prevState.initialValue != newValue && !prevState.active) {\n      this.setState({\n        initialValue: newValue,\n        value: newValue\n      });\n    }\n  }\n\n  handeTextChange(e) {\n    this.setState({value: e.target.value});\n  }\n\n  handleKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({value: this.props.value, active: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleEditingFinished(e);\n    }\n  }\n\n  handleStartEditing() {\n    if (!this.props.readOnly) {\n      ReactDOM.findDOMNode(this).focus();\n      this.setState({active: true});\n    }\n  }\n\n  handleEditingFinished(event) {\n    if (this.props.required && !event.target.checkValidity()) {\n      // Empty input\n      this.setState({value: this.props.value, active: false});\n      return;\n    }\n    this.setState({active: false});\n    let value = this.state.value.trim();\n    if ((value || this.props.value) && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  handlePasswordFinished(value) {\n    this.setState({active: false});\n    if (value && (value !== this.props.value)) {\n      this.props.onFinished(value);\n    }\n  }\n\n  render() {\n    if (this.state.active) {\n      var fieldType = this.props.type || 'text';\n    } else {\n      var spanText = this.props.type == 'password' ? '••••••••' : this.state.value;\n      var spanClass = 'in-place-edit' +\n        (this.props.readOnly ? ' disabled' : '');\n      if (!spanText) {\n        spanText = this.props.placeholder;\n        spanClass += ' placeholder';\n      }\n      if (spanText.length > 20) {\n        // FIXME: this is wrong for RTL languages.\n        spanText = spanText.substring(0, 19) + '...';\n      }\n    }\n    return (\n      this.state.active ?\n        (fieldType == 'password' ?\n          <VisiblePassword\n            value={this.state.value}\n            placeholder={this.props.placeholder}\n            required={this.props.required ? 'required' : ''}\n            autoComplete={this.props.autoComplete}\n            autoFocus={true}\n            onFinished={this.handlePasswordFinished}/>\n          :\n          <input type={fieldType}\n            value={this.state.value}\n            placeholder={this.props.placeholder}\n            required={this.props.required ? 'required' : ''}\n            autoComplete={this.props.autoComplete}\n            autoFocus\n            onChange={this.handeTextChange}\n            onKeyDown={this.handleKeyDown}\n            onBlur={this.handleEditingFinished} />\n        )\n        :\n        <span className={spanClass} onClick={this.handleStartEditing}>\n          <span className=\"content\">{spanText}</span>\n        </span>\n    );\n  }\n};\n","// Toggle [Title text >] -> [Title text v]\n\nimport React from 'react';\n\nexport default class MoreButton extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: props.open\n    };\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n\n  handleToggle() {\n    const open = !this.state.open;\n    this.setState({open: open});\n    if (this.props.onToggle) {\n      this.props.onToggle(open);\n    }\n  }\n\n  render() {\n    return (<label className=\"small clean-clickable\" onClick={this.handleToggle}>{this.props.title}...\n      {this.state.open ? <i className=\"material-icons\">expand_more</i> :\n        <i className=\"material-icons\">chevron_right</i>}\n      </label>);\n  }\n}\n","// PermissionsEditor: Component for editing permissions\n// <PermissionsEditor mode=\"JWROD\" skip=\"O\" onChange={this.handleCheckboxTest} />\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport CheckBox from './checkbox.jsx';\nimport Contact from './contact.jsx';\n\nimport { makeImageDataUrl } from '../lib/blob-helpers.js';\n\n// Translatable permission names.\nconst messages = defineMessages({\n  joiner: {\n    id: 'permission_join',\n    defaultMessage: \"Join ({val})\",\n    description: 'Name of J permission'\n  },\n  reader: {\n    id: 'permission_read',\n    defaultMessage: \"Read ({val})\",\n    description: 'Name of R permission'\n  },\n  writer: {\n    id: 'permission_write',\n    defaultMessage: \"Write ({val})\",\n    description: 'Name of W permission'\n  },\n  preser: {\n    id: 'permission_pres',\n    defaultMessage: \"Get notified ({val})\",\n    description: 'Name of P permission'\n  },\n  approver: {\n    id: 'permission_admin',\n    defaultMessage: \"Approve ({val})\",\n    description: 'Name of A permission'\n  },\n  sharer: {\n    id: 'permission_share',\n    defaultMessage: \"Share ({val})\",\n    description: 'Name of S permission'\n  },\n  deleter: {\n    id: 'permission_delete',\n    defaultMessage: \"Delete ({val})\",\n    description: 'Name of D permission'\n  },\n  owner: {\n    id: 'permission_owner',\n    defaultMessage: \"Owner ({val})\",\n    description: 'Name of O permission'\n  }\n});\n\nclass PermissionsEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mode: (props.mode || '').replace('N', '')\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(val) {\n    let mode = this.state.mode;\n    let idx = mode.indexOf(val);\n    if (idx == -1) {\n      mode += val;\n    } else {\n      mode = mode.replace(val, '');\n    }\n    this.setState({mode: mode});\n  }\n\n  handleSubmit() {\n    // Normalize string, otherwise cannot check if mode has changed.\n    var mode = (this.state.mode || 'N').split('').sort().join('');\n    var before = (this.props.mode || 'N').split('').sort().join('')\n    if (mode !== before) {\n      this.props.onSubmit(mode);\n    } else {\n      this.props.onCancel();\n    }\n  }\n\n  handleCancel() {\n    this.props.onCancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const all = 'JRWPASDO';\n    const names = {\n      'J': formatMessage(messages.joiner, {val: 'J'}),\n      'R': formatMessage(messages.reader, {val: 'R'}),\n      'W': formatMessage(messages.writer, {val: 'W'}),\n      'P': formatMessage(messages.preser, {val: 'P'}),\n      'A': formatMessage(messages.approver, {val: 'A'}),\n      'S': formatMessage(messages.sharer, {val: 'S'}),\n      'D': formatMessage(messages.deleter, {val: 'D'}),\n      'O': formatMessage(messages.owner, {val: 'O'})\n    };\n\n    let skip = this.props.skip || '';\n    let mode = this.state.mode;\n    let compare = (this.props.compare || '').replace('N', '');\n    let items = [];\n    for (let i=0; i<all.length; i++) {\n      let c = all.charAt(i);\n      if (skip.indexOf(c) >= 0 && mode.indexOf(c) < 0) {\n        // Permission is marked as inactive: hide unchecked permissions, disable checked permissions\n        continue;\n      }\n      items.push(\n        <tr key={c}>\n          <td>{names[c]}</td>\n          <td className=\"checkbox\">{skip.indexOf(c) < 0 ?\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} onChange={this.handleChange}/>\n            :\n            <CheckBox name={c} checked={(mode.indexOf(c) >= 0)} />\n          }</td>{this.props.compare ? <td className=\"checkbox\">\n            <CheckBox name={c} checked={(compare.indexOf(c) >= 0)}/>\n          </td> : null}\n        </tr>\n      );\n    }\n\n    return (\n      <div className=\"panel-form-column\">\n        {this.props.userTitle ?\n          <ul className=\"contact-box\"><Contact\n            item={this.props.item}\n            title={this.props.userTitle}\n            avatar={makeImageDataUrl(this.props.userAvatar ? this.props.userAvatar : null)} /></ul> : null}\n        <label className=\"small\"><FormattedMessage id=\"title_permissions\"\n          defaultMessage=\"Permissions\" description=\"Section title\"/></label>\n        <table className=\"permission-editor\">\n        {this.props.compare ?\n          <thead><tr>\n            <th></th><th>{this.props.modeTitle}</th>\n            <th>{this.props.compareTitle}</th>\n          </tr></thead> :\n          null}\n        <tbody>\n          {items}\n        </tbody></table>\n        <br />\n        <div className=\"dialog-buttons\">\n          <button className=\"outline\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(PermissionsEditor);\n","// TagManager: edit topic or user tags.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport ChipInput from './chip-input.jsx';\n\nimport { MAX_TAG_COUNT, MAX_TAG_LENGTH, MIN_TAG_LENGTH } from '../config.js';\nimport { arrayEqual } from '../lib/utils.js';\n\nexport default class TagManager extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tags: this.props.tags,\n      tagInput: '',\n      activated: this.props.activated\n    };\n\n    this.handleTagInput = this.handleTagInput.bind(this);\n    this.handleAddTag = this.handleAddTag.bind(this);\n    this.handleRemoveTag = this.handleRemoveTag.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (!arrayEqual(nextProps.tags, prevState.tags) && !prevState.activated) {\n      return {tags: nextProps.tags};\n    }\n    return null;\n  }\n\n  handleTagInput(text) {\n    this.setState({tagInput: text});\n    if (text.length > 0) {\n      const last = text[text.length-1];\n      if (text[0] == '\"') {\n        // This is a quoted string.\n        if (text.length > 1 && last == '\"') {\n          this.handleAddTag(text.substring(1, text.length-1));\n        }\n      } else if (last == ',' || last == ' ' || last == ';' || last == '\"') {\n        // User entered ',', ' ' or ';'\n        this.handleAddTag(text.substring(0, text.length-1).trim());\n      }\n    }\n  }\n\n  handleAddTag(tag) {\n    const maxTagCount = this.props.tinode.getServerLimit('maxTagCount', MAX_TAG_COUNT);\n\n    if (tag.length > 0 && this.state.tags.length < maxTagCount) {\n      const tags = this.state.tags.slice(0);\n      tags.push(tag);\n\n      this.setState({tags: tags, tagInput: ''});\n      if (this.props.onTagsChanged) {\n        this.props.onTagsChanged(tags);\n      }\n      return tags;\n    }\n    return this.state.tags;\n  }\n\n  handleRemoveTag(tag, index) {\n    const tags = this.state.tags.slice(0);\n    tags.splice(index, 1);\n    this.setState({tags: tags});\n    if (this.props.onTagsChanged) {\n      this.props.onTagsChanged(tags);\n    }\n  }\n\n  handleSubmit() {\n    // Add unprocessed input to tags, submit the list.\n    this.props.onSubmit(this.handleAddTag(this.state.tagInput.trim()));\n    this.setState({activated: false, tags: this.props.tags});\n  }\n\n  handleCancel() {\n    this.setState({activated: false, tagInput: '', tags: this.props.tags});\n    if (this.props.onCancel) {\n      this.props.onCancel();\n    }\n  }\n\n  render() {\n    const minTagLength = this.props.tinode.getServerLimit('minTagLength', MIN_TAG_LENGTH);\n    const maxTagLength = this.props.tinode.getServerLimit('maxTagLength', MAX_TAG_LENGTH);\n\n    let tags = [];\n    if (this.state.activated) {\n      this.state.tags.map((tag) => {\n        tags.push({user: tag, invalid: (tag.length < minTagLength || tag.length > maxTagLength)});\n      });\n    } else {\n      this.state.tags.map((tag) => {\n        tags.push(<span className=\"badge\" key={tags.length}>{tag}</span>);\n      });\n      if (tags.length == 0) {\n        tags = (\n          <i>\n            <FormattedMessage id=\"tags_not_found\" defaultMessage=\"No tags defined. Add some.\" description=\"\" />\n          </i>\n        );\n      }\n    }\n    return (\n      <div className=\"panel-form-column\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\">{this.props.title}</label>\n        </div>\n        {this.state.activated ?\n        <div>\n          <FormattedMessage id=\"tags_editor_no_tags\" defaultMessage=\"Add some tags\"\n            description=\"Tag editor prompt when no tags are found.\">{\n            (add_tags_prompt) => <ChipInput\n              chips={tags}\n              avatarDisabled={true}\n              prompt={add_tags_prompt}\n              onEnter={this.handleAddTag}\n              onFocusLost={this.handleAddTag}\n              onCancel={this.handleCancel}\n              onChipRemoved={this.handleRemoveTag}\n              filterFunc={this.handleTagInput} />\n          }</FormattedMessage>\n          {this.props.onSubmit || this.props.onCancel ?\n            <div id=\"tag-manager-buttons\" className=\"dialog-buttons panel-form-row\">\n              <button className=\"outline\" onClick={this.handleCancel}>\n                <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n              </button>\n              <button className=\"primary\" onClick={this.handleSubmit}>\n                <FormattedMessage id=\"button_ok\" defaultMessage=\"OK\" description=\"Button [OK]\" />\n              </button>\n            </div>\n          : null}\n        </div>\n        :\n        <div className=\"quoted\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.setState({activated: true});}}>\n            <i className=\"material-icons\">edit</i> &nbsp;<FormattedMessage id=\"title_manage_tags\" defaultMessage=\"Manage\"\n              description=\"Section title for the list of tags\" />\n          </a>\n          <>{tags}</>\n        </div>\n      }\n      </div>\n    );\n  }\n};\n","// InfoView: panel with topic/user info.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport ContactList from '../widgets/contact-list.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupManager from '../widgets/group-manager.jsx';\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport MenuCancel from '../widgets/menu-cancel.jsx';\nimport MoreButton from '../widgets/more-button.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\nimport TagManager from '../widgets/tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH, NO_ACCESS_MODE } from '../config.js';\n\nimport { makeImageDataUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, theCard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  requested: {\n    id: 'requested_permissions',\n    defaultMessage: 'Requested',\n    description: 'Title for permissions'\n  },\n  granted: {\n    id: 'granted_permissions',\n    defaultMessage: 'Granted',\n    description: 'Title for permissions'\n  },\n  edit_permissions: {\n    id: 'menu_item_edit_permissions',\n    defaultMessage: 'Edit permissions',\n    description: 'Menu item [Edit permissions]'\n  },\n  other_user: {\n    id: 'label_other_user',\n    defaultMessage: 'Other',\n    description: 'Label for the other user when the user is unnamed'\n  },\n  clear_messages: {\n    id: 'action_clear_messages',\n    defaultMessage: 'Clear Messages',\n    description: 'Flat button [Clear Messages] (soft-delete messages)'\n  },\n  clear_messages_warning: {\n    id: 'clear_messages_warning',\n    defaultMessage: 'Are you sure you want to clear all messages? It cannot be undone.',\n    description: 'Alert dialog warning when deleting all messages.'\n  },\n  delete_messages: {\n    id: 'action_delete_messages',\n    defaultMessage: 'Clear Messages for All',\n    description: 'Flat button [Clear for All] (hard-delete all messages)'\n  },\n  delete_messages_warning: {\n    id: 'delete_messages_warning',\n    defaultMessage: 'Are you sure you want to delete all messages for everyone? It cannot be undone.',\n    description: 'Alert dialog warning when hard-deleting all messages.'\n  },\n  leave_chat: {\n    id: 'action_leave_chat',\n    defaultMessage: 'Leave Conversation',\n    description: 'Flat button [Leave Conversation]'\n  },\n  leave_chat_warning: {\n    id: 'leave_chat_warning',\n    defaultMessage: 'Are you sure you want to leave this conversation?',\n    description: 'Alert dialog warning when unsubscribing from a chat.'\n  },\n  block_contact: {\n    id: 'action_block_contact',\n    defaultMessage: \"Block Contact\",\n    description: \"Flat button [Block Contact]\"\n  },\n  block_contact_warning: {\n    id: 'block_contact_warning',\n    defaultMessage: 'Are you sure you want to block this contact?',\n    description: 'Alert dialog warning when blocking a contact.'\n  },\n  report_chat: {\n    id: 'action_report_chat',\n    defaultMessage: 'Report Conversation',\n    description: 'Flat button [Report Group]'\n  },\n  report_chat_warning: {\n    id: 'report_chat_warning',\n    defaultMessage: 'Are you sure you want to block and report this conversation?',\n    description: 'Alert dialog warning when reporting a conversation for abuse'\n  },\n});\n\nclass InfoView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      topic: null,\n      owner: false,\n      admin: false,\n      sharer: false,\n      deleter: false,\n      muted: false,\n      address: null,\n      groupTopic: undefined,\n      channel: undefined,\n      fullName: undefined,\n      avatar: null,\n      private: null,\n      selectedContact: null,\n      access: null,\n      modeGiven: null,\n      modeWant: null,\n      modeGiven2: null, // P2P topic, the other user mode given\n      modeWant2: null,  // P2P topic, the other user mode want\n      auth: null,\n      anon: null,\n      contactList: [],\n      tags: [],\n      showMemberPanel: false,\n      showPermissionEditorFor: undefined,\n      moreInfoExpanded: false,\n      previousMetaDesc: undefined,\n      previousSubsUpdated: undefined,\n      previousTagsUpdated: undefined\n    };\n\n    this.resetSubs = this.resetSubs.bind(this);\n    this.resetDesc = this.resetDesc.bind(this);\n    this.onMetaDesc = this.onMetaDesc.bind(this);\n    this.onSubsUpdated = this.onSubsUpdated.bind(this);\n    this.onTagsUpdated = this.onTagsUpdated.bind(this);\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\n    this.handlePrivateUpdate = this.handlePrivateUpdate.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleMuted = this.handleMuted.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handleShowAddMembers = this.handleShowAddMembers.bind(this);\n    this.handleHideAddMembers = this.handleHideAddMembers.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleDeleteMessages = this.handleDeleteMessages.bind(this);\n    this.handleLeave = this.handleLeave.bind(this);\n    this.handleBlock = this.handleBlock.bind(this);\n    this.handleReport = this.handleReport.bind(this);\n    this.handleMemberSelected = this.handleMemberSelected.bind(this);\n    this.handleMoreInfo = this.handleMoreInfo.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.handleContextMenu = this.handleContextMenu.bind(this);\n  }\n\n  // No need to separately handle component mount.\n  componentDidUpdate(props) {\n    const topic = this.props.tinode.getTopic(props.topic);\n    if (!topic) {\n      return;\n    }\n\n    if (this.onMetaDesc != topic.onMetaDesc) {\n      this.previousMetaDesc = topic.onMetaDesc;\n      topic.onMetaDesc = this.onMetaDesc;\n\n      this.previousSubsUpdated = topic.onSubsUpdated;\n      topic.onSubsUpdated = this.onSubsUpdated;\n\n      if (topic.getType() == 'grp') {\n        this.previousTagsUpdated = topic.onTagsUpdated;\n        topic.onTagsUpdated = this.onTagsUpdated;\n      } else {\n        this.previousTagsUpdated = undefined;\n      }\n    }\n\n    if (this.state.topic != props.topic) {\n      this.setState({topic: props.topic});\n      this.resetDesc(topic, props);\n      this.resetSubs(topic, props);\n    }\n  }\n\n  componentWillUnmount() {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.setState({topic: null});\n    topic.onMetaDesc = this.previousMetaDesc;\n    topic.onSubsUpdated = this.previousSubsUpdated;\n    topic.onTagsUpdated = this.previousTagsUpdated;\n  }\n\n  resetSubs(topic, props) {\n    const newState = {contactList: []};\n    if (topic.getType() == 'p2p') {\n      // Fetch the other party in the p2p conversation.\n      // Topic may not be ready yet, so check if user is found.\n      const user2 = topic.subscriber(props.topic);\n      if (user2) {\n        newState.modeGiven2 = user2.acs.getGiven();\n        newState.modeWant2 = user2.acs.getWant();\n      } else {\n        newState.modeGiven2 = NO_ACCESS_MODE;\n        newState.modeWant2 = NO_ACCESS_MODE;\n      }\n    } else {\n      topic.subscribers((sub) => {\n        newState.contactList.push(sub);\n      }, this);\n    }\n\n    this.setState(newState);\n  }\n\n  resetDesc(topic, props) {\n    const defacs = topic.getDefaultAccess() || {};\n    const acs = topic.getAccessMode();\n\n    this.setState({\n      owner: acs && acs.isOwner(),\n      admin: acs && acs.isAdmin(),\n      sharer: acs && acs.isSharer(),\n      deleter: acs && acs.isDeleter(),\n      muted: acs && acs.isMuted(),\n\n      fullName: topic.public ? topic.public.fn : undefined,\n      avatar: makeImageDataUrl(topic.public ? topic.public.photo : null),\n      private: topic.private ? topic.private.comment : null,\n      address: topic.name,\n      groupTopic: topic.isGroupType(),\n      channel: topic.isChannelType(),\n      showMemberPanel: false,\n      access: acs ? acs.getMode() : undefined,\n      modeGiven: acs ? acs.getGiven() : undefined,\n      modeWant: acs ? acs.getWant() : undefined,\n      auth: defacs.auth,\n      anon: defacs.anon\n    });\n\n    if (topic.getType() == 'grp' && acs && acs.isOwner()) {\n      // Requesting tags: owner is editing the topic.\n      topic.getMeta(topic.startMetaQuery().withTags().build());\n    }\n  }\n\n  onMetaDesc(desc) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetDesc(topic, this.props);\n\n    if (this.previousMetaDesc && this.previousMetaDesc != this.onMetaDesc) {\n      this.previousMetaDesc(desc);\n    }\n  }\n\n  onSubsUpdated(subs) {\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    this.resetSubs(topic, this.props);\n\n    if (this.previousSubsUpdated && this.previousSubsUpdated != this.onSubsUpdated) {\n      this.previousSubsUpdated(subs);\n    }\n  }\n\n  onTagsUpdated(tags) {\n    this.setState({tags: tags});\n\n    if (this.previousTagsUpdated && this.previousTagsUpdated != this.onTagsUpdated) {\n      this.previousTagsUpdated();\n    }\n  }\n\n  handleFullNameUpdate(fn) {\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.fullName !== fn) {\n      this.setState({fullName: fn});\n      this.props.onTopicDescUpdate(this.props.topic, theCard(fn, null), null);\n    }\n  }\n\n  handlePrivateUpdate(comment) {\n    comment = comment.trim().substring(0, MAX_TITLE_LENGTH);\n    if (this.state.private !== comment) {\n      this.setState({private: comment});\n      this.props.onTopicDescUpdate(this.props.topic, null, comment || Tinode.DEL_CHAR);\n    }\n  }\n\n  handleImageChanged(img) {\n    this.setState({avatar: img});\n    this.props.onTopicDescUpdate(this.props.topic, theCard(null, img || Tinode.DEL_CHAR), null);\n  }\n\n  handleMuted(ignored, checked) {\n    this.setState({muted: checked});\n    this.props.onChangePermissions(this.props.topic, checked ? '-P' : '+P');\n  }\n\n  handlePermissionsChanged(perm) {\n    switch (this.state.showPermissionEditorFor) {\n      case 'auth':\n        this.props.onTopicDescUpdate(this.props.topic, null, null, {auth: perm});\n        break;\n      case 'anon':\n        this.props.onTopicDescUpdate(this.props.topic, null, null, {anon: perm});\n        break;\n      case 'mode':\n      case 'want':\n        this.props.onChangePermissions(this.props.topic, perm);\n        break;\n      case 'given':\n        this.props.onChangePermissions(this.props.topic, perm, this.props.topic);\n        break;\n      case 'user':\n        this.props.onChangePermissions(this.props.topic, perm, this.state.userPermissionsEdited);\n        break;\n    }\n\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handleLaunchPermissionsEditor(which, uid) {\n    const {formatMessage} = this.props.intl;\n    let toEdit, toCompare, toSkip, titleEdit, titleCompare, userTitle, userAvatar;\n    switch (which) {\n      case 'mode':\n        toEdit = this.state.access;\n        break;\n      case 'want':\n        toEdit = this.state.modeWant;\n        toCompare = this.state.modeGiven;\n        if (this.state.owner) {\n          // Don't allow owner to unset 'O' permission. All other permissions are OK.\n          toSkip = 'O';\n        } else {\n          // Allow accepting any of 'ASDO' permissions but don't allow asking for them.\n          toSkip = Tinode.AccessMode.encode(Tinode.AccessMode.diff('ASDO', this.state.modeGiven));\n          if (this.state.channel) {\n            // Channels are read-only.\n            toSkip += 'W';\n          }\n        }\n        titleEdit = formatMessage(messages.requested);\n        titleCompare = formatMessage(messages.granted);\n        break;\n      case 'given':\n        toEdit = this.state.modeGiven2;\n        toCompare = this.state.modeWant2;\n        toSkip = this.state.groupTopic ? (this.state.owner ? '' : 'O') : 'ASDO';\n        titleEdit = formatMessage(messages.granted);\n        titleCompare = formatMessage(messages.requested);\n        break;\n      case 'auth':\n        toEdit = this.state.auth;\n        toSkip = 'O';\n        break;\n      case 'anon':\n        toEdit = this.state.anon;\n        toSkip = 'O';\n        break;\n      case 'user': {\n        const topic = this.props.tinode.getTopic(this.props.topic);\n        if (!topic) {\n          return;\n        }\n        const user = topic.subscriber(uid);\n        if (!user || !user.acs) {\n          return;\n        }\n        toEdit = user.acs.getGiven();\n        toCompare = user.acs.getWant();\n        toSkip = this.state.owner ? '' : 'O';\n        titleEdit = formatMessage(messages.granted);\n        titleCompare = formatMessage(messages.requested);\n        if (user.public) {\n          userTitle = user.public.fn;\n          userAvatar = user.public.photo;\n        }\n        break;\n      }\n      default:\n        console.log(\"Unknown permission editing mode '\" + which + \"'\");\n        break;\n    }\n    this.setState({\n      showPermissionEditorFor: which,\n      userPermissionsEdited: uid,\n      userPermissionsTitle: userTitle,\n      userPermissionsAvatar: userAvatar,\n      editedPermissions: toEdit,\n      immutablePermissions: toCompare,\n      editedPermissionsTitle: titleEdit,\n      immutablePermissionsTitle: titleCompare,\n      editedPermissionsSkipped: toSkip,\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handleShowAddMembers(e) {\n    e.preventDefault();\n    this.props.onInitFind();\n    this.setState({showMemberPanel: true});\n  }\n\n  handleHideAddMembers() {\n    this.setState({showMemberPanel: false});\n  }\n\n  handleMemberUpdateRequest(members, added, removed) {\n    this.props.onMemberUpdateRequest(this.props.topic, added, removed);\n    this.setState({showMemberPanel: false});\n  }\n\n  handleDeleteMessages(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(this.state.deleter ? messages.delete_messages : messages.clear_messages), // title\n      formatMessage(this.state.deleter ? messages.delete_messages_warning : messages.clear_messages_warning), // content\n      (() => { this.props.onDeleteMessages(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleLeave(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.leave_chat), // title\n      formatMessage(messages.leave_chat_warning), // content\n      (() => { this.props.onLeaveTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleBlock(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.block_contact), // title\n      formatMessage(messages.block_contact_warning), // content\n      (() => { this.props.onBlockTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleReport(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.report_chat), // title\n      formatMessage(messages.report_chat_warning), // content\n      (() => { this.props.onReportTopic(this.props.topic); }), // onConfirm\n      null, // \"OK\"\n      true, // Show Reject button\n      null  // \"Cancel\"\n    );\n  }\n\n  handleMemberSelected(uid) {\n    this.setState({selectedContact: uid});\n  }\n\n  handleMoreInfo(open) {\n    this.setState({moreInfoExpanded: open});\n  }\n\n  handleTagsUpdated(tags) {\n    if (!arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      this.props.onTopicTagsUpdate(this.props.topic, tags);\n    }\n  }\n\n  handleContextMenu(params) {\n    const {formatMessage} = this.props.intl;\n    const instance = this;\n    const topic = this.props.tinode.getTopic(this.props.topic);\n    if (!topic) {\n      return;\n    }\n    const user = topic.subscriber(params.topicName);\n    if (!user || !user.acs) {\n      return;\n    }\n\n    const menuItems = [\n      {title: formatMessage(messages.edit_permissions), handler: function() {\n        instance.handleLaunchPermissionsEditor('user', params.topicName);\n      }},\n      'member_delete',\n      user.acs.isMuted() ? 'member_unmute' : 'member_mute',\n      user.acs.isJoiner() ? 'member_block' : 'member_unblock'\n    ];\n    this.props.showContextMenu({\n      topicName: this.props.topic,\n      x: params.x,\n      y: params.y,\n      user: params.topicName}, menuItems);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n\n    return (\n      <div id=\"info-view\">\n        <div className=\"caption-panel\" id=\"info-caption-panel\">\n          <div className=\"panel-title\" id=\"info-title\">\n            <FormattedMessage id=\"title_info\" defaultMessage=\"Info\" description=\"Title for InfoView\" />\n          </div>\n          <div>\n            <MenuCancel onCancel={this.props.onCancel} />\n          </div>\n        </div>\n        {this.props.displayMobile ?\n          <ErrorPanel\n            level={this.props.errorLevel}\n            text={this.props.errorText}\n            onClearError={this.props.onError} /> : null}\n        {this.state.showMemberPanel ?\n          <GroupManager\n            members={this.state.contactList}\n            requiredMember={this.props.myUserId}\n            keepInitialMembers={!this.state.admin && !this.state.owner}\n            myUserId={this.props.myUserId}\n            contacts={this.props.searchableContacts}\n            onCancel={this.handleHideAddMembers}\n            onSubmit={this.handleMemberUpdateRequest} />\n          :\n        this.state.showPermissionEditorFor ?\n          <PermissionsEditor\n            mode={this.state.editedPermissions}\n            compare={this.state.immutablePermissions}\n            skip={this.state.editedPermissionsSkipped}\n            modeTitle={this.state.editedPermissionsTitle}\n            compareTitle={this.state.immutablePermissionsTitle}\n            userTitle={this.state.userPermissionsTitle}\n            item={this.state.userPermissionsEdited}\n            userAvatar={this.state.userPermissionsAvatar}\n            onSubmit={this.handlePermissionsChanged}\n            onCancel={this.handleHidePermissionsEditor}\n            />\n          :\n          <div id=\"info-view-content\" className=\"scrollable-panel\">\n            <div className=\"panel-form-row\">\n              <div className=\"panel-form-column\">\n                <div><label className=\"small\">\n                  <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                    description=\"Label for editing topic name\" />\n                </label></div>\n                <div><InPlaceEdit\n                    placeholder={this.state.groupTopic ? \"Group name\" : <i>Unknown</i>}\n                    readOnly={!this.state.owner}\n                    value={this.state.fullName}\n                    required={true}\n                    onFinished={this.handleFullNameUpdate} /></div>\n                <div>\n                  <label className=\"small\">\n                    <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                      description=\"Label for editing 'private'\" />\n                  </label>\n                </div>\n                <div>\n                  <FormattedMessage id=\"private_editing_placeholder\"\n                    defaultMessage=\"Visible to you only\"\n                    description=\"Placeholder for editing 'private'\">{\n                    (private_placeholder) => <InPlaceEdit\n                      placeholder={private_placeholder}\n                      value={this.state.private}\n                      onFinished={this.handlePrivateUpdate} />\n                  }</FormattedMessage>\n                </div>\n              </div>\n              <AvatarUpload\n                avatar={this.state.avatar}\n                readOnly={!this.state.owner}\n                uid={this.props.topic}\n                title={this.state.fullName}\n                onImageChanged={this.handleImageChanged}\n                onError={this.props.onError} />\n            </div>\n            <div className=\"hr\" />\n            <div className=\"panel-form-column\">\n              <div className=\"panel-form-row\">\n                <label>\n                  <FormattedMessage id=\"label_muting_topic\" defaultMessage=\"Muted:\"\n                    description=\"Label for Muting/unmuting the topic\" />\n                </label>\n                <CheckBox name=\"P\" checked={this.state.muted}\n                  onChange={this.handleMuted} />\n              </div>\n              <FormattedMessage id=\"action_more\" defaultMessage=\"More\"\n                description=\"Action for showing more content\">{\n                (more) => <MoreButton\n                  title={more}\n                  open={this.state.moreInfoExpanded}\n                  onToggle={this.handleMoreInfo} />\n              }</FormattedMessage>\n              {this.state.moreInfoExpanded ?\n                <div className=\"panel-form-column\">\n                  <div className=\"panel-form-row\">\n                    <label><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n                      description=\"Label for user address (ID)\" /></label>\n                    <tt>{this.state.address}</tt>\n                  </div>\n                  {this.state.groupTopic ?\n                    <div className=\"panel-form-row\">\n                      <label>\n                        <FormattedMessage id=\"label_your_permissions\" defaultMessage=\"Your permissions:\"\n                          description=\"Label for current user permissions\" />\n                      </label>\n                      <tt className=\"clickable\"\n                        onClick={this.handleLaunchPermissionsEditor.bind(this, 'want')}>\n                        {this.state.access}\n                      </tt>\n                    </div>\n                    :\n                    <div>\n                      <div>\n                        <label className=\"small\">\n                          <FormattedMessage id=\"label_permissions\" defaultMessage=\"Permissions:\"\n                            description=\"Section title\" />\n                        </label>\n                      </div>\n                      <div className=\"quoted\">\n                        <div>\n                          <FormattedMessage id=\"label_you\" defaultMessage=\"You:\"\n                            description=\"Label for the current user\" /> &nbsp;<tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'want')}>\n                          {this.state.access}\n                        </tt></div>\n                        <div>{this.state.fullName ? this.state.fullName : formatMessage(messages.other_user)}:\n                          &nbsp;<tt className=\"clickable\" onClick={this.handleLaunchPermissionsEditor.bind(this, 'given')}>\n                          {this.state.modeGiven2}\n                          </tt>\n                        </div>\n                      </div>\n                    </div>\n                  }\n                  {this.state.sharer && (this.state.auth || this.state.anon) ?\n                  <div>\n                    <div>\n                      <label className=\"small\">\n                        <FormattedMessage id=\"label_default_access\" defaultMessage=\"Default access mode:\"\n                          description=\"Section title\" />\n                      </label>\n                    </div>\n                    <div className=\"quoted\">\n                      <div>Auth: {this.state.admin ?\n                        <tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>\n                          {this.state.auth}\n                        </tt>\n                        :\n                        <tt>{this.state.auth}</tt>\n                      }\n                      </div>\n                      <div>Anon: {this.state.admin ?\n                        <tt className=\"clickable\"\n                          onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>\n                          {this.state.anon}\n                        </tt>\n                        :\n                        <tt>{this.state.anon}</tt>\n                      }\n                      </div>\n                    </div>\n                  </div>\n                  :\n                  null\n                }\n                </div>\n              :\n              null\n              }\n            </div>\n            <div className=\"hr\" />\n            {this.state.owner ?\n              <>\n                <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (user discovery)\"\n                  description=\"Section title for TagManager\">{\n                  (tags) => <TagManager\n                    title={tags}\n                    tags={this.state.tags}\n                    activated={false}\n                    tinode={this.props.tinode}\n                    onSubmit={this.handleTagsUpdated} />\n                }</FormattedMessage>\n                <div className=\"hr\" />\n              </>\n              :\n              null\n            }\n            <div className=\"panel-form-column\">\n              {!this.state.channel ?\n                <a href=\"#\" className=\"flat-button\" onClick={this.handleDeleteMessages}>\n                  <i className=\"material-icons\">delete_outline</i> &nbsp;{\n                    formatMessage(this.state.deleter ? messages.delete_messages : messages.clear_messages)\n                  }\n                </a>\n                :\n                null\n              }\n              <a href=\"#\" className=\"danger flat-button\" onClick={this.handleLeave}>\n                <i className=\"material-icons\">exit_to_app</i> &nbsp;{formatMessage(messages.leave_chat)}\n              </a>\n              {!this.state.groupTopic ?\n                <a href=\"#\" className=\"danger flat-button\" onClick={this.handleBlock}>\n                  <i className=\"material-icons\">block</i> &nbsp;{formatMessage(messages.block_contact)}\n                </a>\n                :\n                null\n              }\n              {!this.state.owner ?\n                <a href=\"#\" className=\"danger flat-button\" onClick={this.handleReport}>\n                  <i className=\"material-icons\">report</i> &nbsp;{formatMessage(messages.report_chat)}\n                </a>\n                :\n                null\n              }\n            </div>\n            {this.state.groupTopic && this.state.sharer ?\n              <>\n                <div className=\"hr\" />\n                <div className=\"panel-form-column\">\n                  <div className=\"panel-form-row\">\n                    <label className=\"small\">\n                      <FormattedMessage id=\"label_group_members\" defaultMessage=\"Group members:\"\n                        description=\"Section title or label\" />\n                    </label>\n                  </div>\n                  <div className=\"panel-form-row\">\n                    <a href=\"#\" className=\"flat-button\" onClick={this.handleShowAddMembers}>\n                      <i className=\"material-icons\">person_add</i> &nbsp;<FormattedMessage id=\"button_add_members\"\n                        defaultMessage=\"Add members\" description=\"Flat button [Add members] (to topic)\" />\n                    </a>\n                  </div>\n                  <FormattedMessage id=\"group_has_no_members\" defaultMessage=\"No members\"\n                    description=\"Shown in place of group members\">{\n                    (no_members) => <ContactList\n                      contacts={this.state.contactList}\n                      myUserId={this.props.myUserId}\n                      emptyListMessage={no_members}\n                      topicSelected={this.state.selectedContact}\n                      showOnline={false}\n                      showUnread={false}\n                      showMode={true}\n                      noScroll={true}\n                      onTopicSelected={this.handleMemberSelected}\n                      showContextMenu={this.state.admin ? this.handleContextMenu : false}\n                    />\n                  }</FormattedMessage>\n                </div>\n              </>\n              :\n              null\n            }\n          </div>\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(InfoView);\n","// File uload/download progress indicator with a cancel inside.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class FileProgress extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"uploader\">\n        <div><span style={{width: (this.props.progress * 100) + \"%\"}}></span></div>\n        {this.props.progress < 0.999 ?\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCancel();}}>\n            <i className=\"material-icons\">close</i> <FormattedMessage id=\"action_cancel\"\n              defaultMessage=\"cancel\" description=\"Call to action [cancel]\" />\n          </a>\n          :\n          <FormattedMessage id=\"upload_finishing\" defaultMessage=\"finishing...\"\n            description=\"Notification that upload is finishing\" />\n        }\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\nimport { bytesToHumanSize } from '../lib/strformat.js';\nimport { isUrlRelative, sanitizeUrl } from '../lib/utils.js';\n\nexport default class Attachment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      downloader: null,\n      progress: 0\n    };\n\n    this.downloadFile = this.downloadFile.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  downloadFile(url, filename, mimetype) {\n    if (!url) {\n      this.props.onError(\"Invalid download URL '\" + url + \"'\");\n      return;\n    }\n\n    const downloader = this.props.tinode.getLargeFileHelper();\n    this.setState({downloader: downloader});\n    downloader.download(url, filename, mimetype,\n      (loaded) => {\n        this.setState({progress: loaded / this.props.size});\n      },\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    ).then(() => {\n      this.setState({downloader: null, progress: 0});\n    }).catch((err) => {\n      if (err) {\n        this.props.onError(\"Error downloading file: \" + err.message, 'err');\n      }\n      this.setState({downloader: null, progress: 0});\n    });\n  }\n\n  handleCancel() {\n    if (this.props.uploading) {\n      this.props.onCancelUpload();\n    } else if (this.state.downloader) {\n      this.state.downloader.cancel();\n    }\n  }\n\n  render() {\n    let filename = this.props.filename || 'file_attachment';\n    if (filename.length > 36) {\n      filename = filename.substr(0, 16) + '...' + filename.substr(-16);\n    }\n    let size = this.props.size > 0 ?\n      <span className=\"small gray\">({bytesToHumanSize(this.props.size)})</span> :\n      null;\n\n    // Detect if the download URL is relative or absolute.\n    // If the URL is relative use LargeFileHelper to attach authentication\n    // credentials to the request.\n    let url, helperFunc;\n    if (!this.props.uploading && !this.state.downloader && isUrlRelative(this.props.downloadUrl)) {\n      // Relative URL. Use download helper.\n      url = '#';\n      helperFunc = (e) => {\n        e.preventDefault();\n        this.downloadFile(this.props.downloadUrl, this.props.filename, this.props.mimetype);\n      };\n    } else {\n      url = sanitizeUrl(this.props.downloadUrl);\n      helperFunc = null;\n    }\n    const downloadWidget = <><i className=\"material-icons\">file_download</i> <FormattedMessage id=\"save_attachment\"\n      defaultMessage=\"save\" description=\"Call to save an attachment\" /></>;\n    return (\n      <div className=\"attachment\">\n        <div><i className=\"material-icons big gray\">insert_drive_file</i></div>\n        <div className=\"flex-column\">\n          <div>{filename} {size}</div>\n          {this.props.uploading || this.state.downloader ?\n            <FileProgress progress={this.props.uploading ? this.props.progress : this.state.progress}\n              onCancel={this.handleCancel} />\n            :\n            <div>{url ?\n              <a href={url} download={this.props.filename} onClick={helperFunc}>{downloadWidget}</a>\n              :\n              <span className=\"light-gray\">{downloadWidget}</span>\n            }</div>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n","// Image view with progress bar and a cancel button.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport FileProgress from './file-progress.jsx';\n\nexport default class UploadingImage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"inline-image\">\n        {React.createElement('img', this.props)}\n        <div className=\"rounded-container\">\n          <FileProgress progress={this.props.progress} onCancel={this.props.onCancelUpload} />\n        </div>\n      </div>\n    );\n  }\n};\n","// Single message, sent or received.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport Attachment from './attachment.jsx';\nimport LetterTile from './letter-tile.jsx';\nimport ReceivedMarker from './received-marker.jsx'\nimport UploadingImage from './uploading-image.jsx'\nimport { sanitizeImageUrl, sanitizeUrl } from '../lib/utils.js';\n\nexport default class ChatMessage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      progress: 0\n    };\n\n    if (props.uploader) {\n      props.uploader.onProgress = this.handleProgress.bind(this);\n    }\n\n    this.handleImagePreview = this.handleImagePreview.bind(this);\n    this.handleFormButtonClick = this.handleFormButtonClick.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n  }\n\n  handleImagePreview(e) {\n    e.preventDefault();\n    this.props.onImagePreview({\n      url: e.target.src,\n      filename: e.target.title,\n      width: e.target.dataset.width,\n      height: e.target.dataset.height,\n      size: e.target.dataset.size,\n      type: e.target.dataset.mime\n    });\n  }\n\n  handleFormButtonClick(e) {\n    e.preventDefault();\n    const data = {\n      seq: this.props.seq\n    };\n    data.resp = {};\n    if (e.target.dataset.name) {\n      data.resp[e.target.dataset.name] = e.target.dataset.val ? e.target.dataset.val :\n        e.target.dataset.val === undefined ? 1 : '' + e.target.dataset.val;\n    }\n    if (e.target.dataset.act == 'url') {\n      data.ref = sanitizeUrl(e.target.dataset.ref) || 'about:blank';\n    }\n    const text = e.target.dataset.title || 'unknown';\n    this.props.onFormResponse(e.target.dataset.act, text, data);\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const menuItems = this.props.received == Tinode.MESSAGE_STATUS_FAILED ? ['menu_item_send_retry'] : [];\n    this.props.showContextMenu({ seq: this.props.seq, content: this.props.content,\n                                 y: e.pageY, x: e.pageX }, menuItems);\n  }\n\n  handleProgress(ratio) {\n    this.setState({progress: ratio});\n  }\n\n  handleCancelUpload() {\n    this.props.onCancelUpload(this.props.seq, this.props.uploader);\n  }\n\n  render() {\n    const sideClass = this.props.deleted ? 'center' :\n      (this.props.sequence + ' ' + (this.props.response ? 'left' : 'right'));\n    const bubbleClass = (this.props.sequence == 'single' || this.props.sequence == 'last') ? 'bubble tip' : 'bubble';\n    const avatar = this.props.deleted ? null : (this.props.userAvatar || true);\n    const fullDisplay = (this.props.userFrom && this.props.response && !this.props.deleted &&\n      (this.props.sequence == 'single' || this.props.sequence == 'last'));\n\n    let content = this.props.content;\n    const attachments = [];\n    if (this.props.mimeType == Drafty.getContentType() && Drafty.isValid(content)) {\n      Drafty.attachments(content, function(att, i) {\n        if (att.mime == 'application/json') {\n          // Don't show json objects as attachments.\n          // They are not meant for users.\n          return;\n        }\n        attachments.push(<Attachment\n          tinode={this.props.tinode}\n          downloadUrl={Drafty.getDownloadUrl(att)}\n          filename={att.name} uploading={Drafty.isProcessing(att)}\n          mimetype={att.mime} size={Drafty.getEntitySize(att)}\n          progress={this.state.progress}\n          onCancelUpload={this.handleCancelUpload}\n          onError={this.props.onError}\n          key={i} />);\n      }, this);\n      content = React.createElement(React.Fragment, null, Drafty.format(content, draftyFormatter, this));\n    } else if (this.props.deleted) {\n      // Message represents a range of deleted messages.\n      content = <><i className=\"material-icons gray\">block</i> <i className=\"gray\">\n        <FormattedMessage id=\"deleted_content\"\n          defaultMessage=\"content deleted\" description=\"Shown when messages are deleted\" />\n      </i></>\n    } else if (typeof content != 'string') {\n      content = <>\n          <i className=\"material-icons gray\">error_outline</i> <i className=\"gray\">\n            <FormattedMessage id=\"invalid_content\"\n              defaultMessage=\"invalid content\" description=\"Shown when message is unreadable\" /></i>\n        </>\n    }\n\n    return (\n      <li className={sideClass}>\n        {this.props.userFrom && this.props.response ?\n          <div className=\"avatar-box\">\n            {fullDisplay ?\n              <LetterTile\n                topic={this.props.userFrom}\n                title={this.props.userName}\n                avatar={avatar} /> :\n              null}\n          </div> :\n          null}\n        <div>\n          <div className={bubbleClass}>\n            <div className=\"content-meta\">\n              <div className=\"message-content\">\n                {content}\n                {attachments}\n              </div>\n              {this.props.timestamp ?\n                <ReceivedMarker\n                  timestamp={this.props.timestamp}\n                  received={this.props.received} />\n                : null}\n            </div>\n            {this.props.deleted || !this.props.showContextMenu ?\n              null :\n              <span className=\"menuTrigger\">\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">expand_more</i>\n                </a>\n              </span>\n            }\n          </div>\n          {fullDisplay ?\n            <div className=\"author\">\n              <FormattedMessage id=\"user_not_found\" defaultMessage=\"Not found\"\n                description=\"In place of a user's full name when the user is not found.\">{\n                    (notFound) => {return this.props.userName || <i>{notFound}</i>}\n              }</FormattedMessage>\n            </div>\n            : null\n          }\n        </div>\n      </li>\n    );\n  }\n};\n\n// Convert Drafty object to a tree of React elements.\nimport { BROKEN_IMAGE_SIZE, REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\n\n// Converts Drafty elements into React classes.\n// 'this' is set by the caller.\nfunction draftyFormatter(style, data, values, key) {\n  if (style == 'EX') {\n    // attachments are handled elsewhere.\n    return null;\n  }\n\n  let el = Drafty.tagName(style);\n  if (el) {\n    const attr = Drafty.attrValue(style, data) || {};\n    attr.key = key;\n    switch (style) {\n      case 'HL':\n        // Highlighted text. Assign class name.\n        attr.className = 'highlight';\n        break;\n      case 'IM':\n        // Additional processing for images\n        if (data) {\n          attr.className = 'inline-image';\n          const dim = fitImageSize(data.width, data.height,\n            Math.min(this.props.viewportWidth - REM_SIZE * 6.5, REM_SIZE * 34.5), REM_SIZE * 24, false) ||\n            {dstWidth: BROKEN_IMAGE_SIZE, dstHeight: BROKEN_IMAGE_SIZE};\n          attr.style = {\n            width: dim.dstWidth + 'px',\n            height: dim.dstHeight + 'px',\n            // Looks like a Chrome bug: broken image does not respect 'width' and 'height'.\n            minWidth: dim.dstWidth + 'px',\n            minHeight: dim.dstHeight + 'px'\n          };\n          if (!Drafty.isProcessing(data)) {\n            attr.src = this.props.tinode.authorizeURL(sanitizeImageUrl(attr.src));\n            attr.alt = data.name;\n            if (attr.src) {\n              attr.onClick = this.handleImagePreview;\n              attr.className += ' image-clickable';\n              attr.loading = 'lazy';\n            } else {\n              attr.src = 'img/broken_image.png';\n            }\n          } else {\n            // Use custom element instead of <img>.\n            el = UploadingImage;\n          }\n        }\n        break;\n      case 'BN':\n        // Button\n        attr.onClick = this.handleFormButtonClick;\n        let inner = React.Children.map(values, (child) => {\n          return typeof child == 'string' ? child : undefined;\n        });\n        if (!inner || inner.length == 0) {\n          inner = [attr.name]\n        }\n        // Get text which will be sent back when the button is clicked.\n        attr['data-title'] = inner.join('');\n        break;\n      case 'FM':\n        // Form\n        attr.className = 'bot-form';\n        break;\n      case 'RW':\n        // Form element formatting is dependent on element content.\n        break;\n      default:\n        if (el == '_UNKN') {\n          // Unknown element.\n          // TODO: make it prettier.\n          el = <><span className=\"material-icons\">extension</span></>;\n        }\n        break;\n    }\n    return React.createElement(el, attr, values);\n  } else {\n    return values;\n  }\n};\n","// Send message form.\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Drafty } from 'tinode-sdk';\n\nimport { KEYPRESS_DELAY } from '../config.js';\nimport { filePasted } from '../lib/blob-helpers.js';\n\nconst messages = defineMessages({\n  messaging_disabled: {\n    id: 'messaging_disabled_prompt',\n    defaultMessage: 'Messaging disabled',\n    description: 'Prompt in SendMessage in read-only topic'\n  },\n  type_new_message: {\n    id: 'new_message_prompt',\n    defaultMessage: 'New message',\n    description: 'Prompt in send message field'\n  },\n  add_image_caption: {\n    id: 'image_caption_prompt',\n    defaultMessage: 'Image caption',\n    description: 'Prompt in SendMessage for attached image'\n  },\n  file_attachment_too_large: {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  },\n  cannot_initiate_upload: {\n    id: 'cannot_initiate_file_upload',\n    defaultMessage: 'Cannot initiate file upload.',\n    description: 'Generic error messagewhen attachment fails'\n  },\n});\n\nclass SendMessage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      message: '',\n      // Make initial keypress time as if it happened 5001 milliseconds in the past.\n      keypressTimestamp: new Date().getTime() - KEYPRESS_DELAY - 1\n    };\n\n    this.handlePasteEvent = this.handlePasteEvent.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleSend = this.handleSend.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleMessageTyping = this.handleMessageTyping.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.addEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messageEditArea) {\n      this.messageEditArea.removeEventListener('paste', this.handlePasteEvent, false);\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.messageEditArea) {\n      this.messageEditArea.focus();\n    }\n  }\n\n  handlePasteEvent(e) {\n    if (this.props.disabled) {\n      return;\n    }\n    // FIXME: handle large files too.\n    if (filePasted(e,\n      (bits, mime, width, height, fname) => {\n        this.props.onAttachImage(mime, bits, width, height, fname);\n      },\n      (mime, bits, fname) => {\n        this.props.onAttachFile(mime, bits, fname);\n      },\n      this.props.onError)) {\n\n      // If a file was pasted, don't paste base64 data into input field.\n      e.preventDefault();\n    }\n  }\n\n  handleAttachImage(e) {\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachImage(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleAttachFile(e) {\n    const {formatMessage} = this.props.intl;\n    if (e.target.files && e.target.files.length > 0) {\n      this.props.onAttachFile(e.target.files[0]);\n    }\n    // Clear the value so the same file can be uploaded again.\n    e.target.value = '';\n  }\n\n  handleSend(e) {\n    e.preventDefault();\n    const message = this.state.message.trim();\n    if (message || this.props.acceptBlank || this.props.noInput) {\n      this.props.onSendMessage(message);\n      this.setState({message: ''});\n    }\n  }\n\n  /* Send on Enter key */\n  handleKeyPress(e) {\n    // Remove this if you don't want Enter to trigger send\n    if (e.key === 'Enter') {\n      // Have Shift-Enter insert a line break instead\n      if (!e.shiftKey) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.handleSend(e);\n      }\n    }\n  }\n\n  handleMessageTyping(e) {\n    const newState = {message: e.target.value};\n    if (this.props.onKeyPress) {\n      const now = new Date().getTime();\n      if (now - this.state.keypressTimestamp > KEYPRESS_DELAY) {\n        this.props.onKeyPress();\n        newState.keypressTimestamp = now;\n      }\n    }\n    this.setState(newState);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const prompt = this.props.disabled ?\n      formatMessage(messages.messaging_disabled) :\n      (this.props.messagePrompt ?\n        formatMessage(messages[this.props.messagePrompt]) :\n        formatMessage(messages.type_new_message));\n    return (\n      <div id=\"send-message-panel\">\n        {!this.props.disabled ?\n          <>\n            {this.props.onAttachFile ?\n              <>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachImage.click();}} title=\"Add image\">\n                  <i className=\"material-icons secondary\">photo</i>\n                </a>\n                <a href=\"#\" onClick={(e) => {e.preventDefault(); this.attachFile.click();}} title=\"Attach file\">\n                  <i className=\"material-icons secondary\">attach_file</i>\n                </a>\n              </>\n              :\n              null}\n            {this.props.noInput ?\n              <div className=\"hr thin\" /> :\n              <textarea id=\"sendMessage\" placeholder={prompt}\n                value={this.state.message} onChange={this.handleMessageTyping}\n                onKeyPress={this.handleKeyPress}\n                ref={(ref) => {this.messageEditArea = ref;}}\n                autoFocus />}\n            <a href=\"#\" onClick={this.handleSend} title=\"Send\">\n              <i className=\"material-icons\">send</i>\n            </a>\n            <input type=\"file\" ref={(ref) => {this.attachFile = ref;}}\n              onChange={this.handleAttachFile} style={{display: 'none'}} />\n            <input type=\"file\" ref={(ref) => {this.attachImage = ref;}} accept=\"image/*\"\n              onChange={this.handleAttachImage} style={{display: 'none'}} />\n          </>\n          :\n          <div id=\"writing-disabled\">{prompt}</div>\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SendMessage);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { bytesToHumanSize } from '../lib/strformat.js';\n\n// Get material icon name from mime type.\nfunction iconFromMime(mime) {\n  // If more icons become available in material icons, add them to this mime-to-icon mapping.\n  const mimeToIcon = {default: 'insert_drive_file', image: 'image', text: 'description', video: 'theaters'};\n\n  return mimeToIcon[mime] || mimeToIcon[(mime || '').split('/')[0]] || mimeToIcon['default'];\n}\n\nexport default class DocPreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleSendDoc = this.handleSendDoc.bind(this);\n  }\n\n  handleSendDoc(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(this.props.content.file);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          <span>{this.props.content.filename}</span>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\">\n          <div className=\"flex-column narrow\">\n            <i className=\"material-icons gray\">{iconFromMime(this.props.content.type)}</i>\n            <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n              description=\"Label for file content type (mime)\" /></b> {this.props.content.type || 'application/octet-stream'}</div>\n            <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n              description=\"Label for file size\" /></b> {bytesToHumanSize(this.props.content.size)}</div>\n          </div>\n        </div>\n        <SendMessage\n          noInput={true}\n          onSendMessage={this.handleSendDoc}\n          onError={this.props.onError} />\n      </div>\n    );\n  }\n};\n","// GroupSubs: a list of group subscribers currently online.\n// Show in the topic title bar\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { MAX_ONLINE_IN_TOPIC } from '../config.js'\n\nimport LetterTile from './letter-tile.jsx';\nimport { makeImageDataUrl } from '../lib/blob-helpers.js';\n\nexport default class GroupSubs extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const usersOnline = [];\n    const totalCount = (this.props.subscribers || []).length;\n    const countToShow = Math.min(MAX_ONLINE_IN_TOPIC, totalCount);\n\n    (this.props.subscribers || []).some((sub) => {\n      usersOnline.push(\n        <div className=\"avatar-box\" key={sub.user}>\n          <LetterTile\n            topic={sub.user}\n            avatar={makeImageDataUrl(sub.public ? sub.public.photo : null) || true}\n            title={sub.public ? sub.public.fn : null} />\n        </div>\n      );\n      return usersOnline.length == countToShow;\n    });\n\n    return (\n      <div id=\"topic-users\">{usersOnline} {totalCount > countToShow ?\n        <span>\n          <FormattedMessage id=\"more_online_members\" defaultMessage=\"+{overflow} more\"\n              description=\"Shown in MessagesView title bar when the number of online subscribers exceeds MAX_ONLINE_IN_TOPIC\"\n              values={{ overflow: (totalCount - countToShow) }} />\n        </span> : null}\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { REM_SIZE } from '../config.js';\nimport { fitImageSize } from '../lib/blob-helpers.js';\nimport { bytesToHumanSize } from '../lib/strformat.js';\n\nexport default class ImagePreview extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      width: 0,\n      height: 0\n    };\n\n    this.handleSendImage = this.handleSendImage.bind(this);\n  }\n\n  assignWidth(node) {\n    if (node && !this.state.width) {\n      const bounds = node.getBoundingClientRect();\n      this.setState({\n        width: bounds.width | 0,\n        height: bounds.height | 0\n      });\n    }\n  }\n\n  handleSendImage(caption) {\n    this.props.onClose();\n    this.props.onSendMessage(caption, this.props.content.blob);\n  }\n\n  render() {\n    if (!this.props.content) {\n      return null;\n    }\n\n    const dim = fitImageSize(this.props.content.width, this.props.content.height,\n      this.state.width, this.state.height, false);\n    const size = dim ? { width: dim.dstWidth + 'px', height: dim.dstHeight + 'px' } :\n      ((this.props.content.width > this.props.content.height) ? {width: '100%'} : {height: '100%'});\n    size.maxWidth = '100%';\n    size.maxHeight = '100%';\n\n    let filename = this.props.content.filename;\n    // Average font aspect ratio is ~0.5; File name takes 1/3 of the viewport width.\n    const maxlength = Math.max(((this.state.width / REM_SIZE / 1.5) | 0) - 2, 12);\n    if (filename.length > maxlength) {\n      filename = filename.slice(0, maxlength/2 - 1) + '…' + filename.slice(1 - maxlength/2);\n    }\n    const width = this.props.content.width || '-';\n    const height = this.props.content.height || '-';\n    return (\n      <div id=\"image-preview\">\n        <div id=\"image-preview-caption-panel\">\n          {!this.props.onSendMessage ?\n            <a href={this.props.content.url} download={this.props.content.filename}>\n              <i className=\"material-icons\">file_download</i> <FormattedMessage\n                id=\"download_action\" defaultMessage=\"download\" description=\"Call to action [download]\" />\n            </a>\n            :\n            <span>{this.props.content.filename}</span>\n          }\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onClose();}}><i className=\"material-icons gray\">close</i></a>\n        </div>\n        <div id=\"image-preview-container\" ref={(node) => this.assignWidth(node)}>\n          <img src={this.props.content.url} style={size} className=\"image-preview\" alt={this.props.content.filename} />\n        </div>\n        {this.props.onSendMessage ?\n          <SendMessage\n            messagePrompt=\"add_image_caption\"\n            acceptBlank={true}\n            onSendMessage={this.handleSendImage}\n            onError={this.props.onError} />\n          :\n          <div id=\"image-preview-footer\">\n            <div>\n              <div><b><FormattedMessage id=\"label_file_name\" defaultMessage=\"File name:\"\n                description=\"Label for a file name\" /></b></div>\n              <div><span title={this.props.content.filename}>{filename ? filename : '-'}</span></div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_content_type\" defaultMessage=\"Content type:\"\n                description=\"Label for file content type (mime)\" /></b></div>\n              <div>{this.props.content.type}</div>\n            </div>\n            <div>\n              <div><b><FormattedMessage id=\"label_size\" defaultMessage=\"Size:\"\n                description=\"Label for file size\" /></b></div>\n              <div>{width} &times; {height} px; {bytesToHumanSize(this.props.content.size)}</div>\n            </div>\n          </div>}\n      </div>\n    );\n  }\n};\n","// A single topic or user.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Invitation extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleButtonAction = this.handleButtonAction.bind(this);\n  }\n\n  handleButtonAction(evt, data) {\n    evt.preventDefault();\n    this.props.onAction(data);\n  }\n\n  render() {\n    return (\n      <div className=\"accept-invite-panel\">\n        <div className=\"title\">\n          <FormattedMessage id=\"chat_invitation\"\n            defaultMessage=\"You are invited to start a new chat. What would you like to do?\"\n            description=\"New chat invitation message: [Accept] [Ignore] [Block].\" />\n        </div>\n        <div className=\"footer\">\n          <button className=\"primary\" onClick={event => { this.handleButtonAction(event, \"accept\"); }}>\n            <FormattedMessage id=\"chat_invitation_accept\"\n              defaultMessage=\"Accept\" description=\"Action [Accept] for chat invitation.\" />\n          </button>\n          <button className=\"secondary\" onClick={event => { this.handleButtonAction(event, \"delete\"); }}>\n            <FormattedMessage id=\"chat_invitation_ignore\"\n              defaultMessage=\"Ignore\" description=\"Action [Ignore] for chat invitation.\" />\n          </button>\n          <button className=\"secondary\" onClick={event => { this.handleButtonAction(event, \"block\"); }}>\n            <FormattedMessage id=\"chat_invitation_block\"\n              defaultMessage=\"Block\" description=\"Action [Block] for chat invitation.\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nexport default class LoadSpinner extends React.PureComponent {\n  render() {\n    return (this.props.show ?\n      <div className=\"load-spinner-box\"><div className=\"loader-spinner\"></div></div> : null);\n  }\n}\n","/* This is just a static page to display when no conversation is selected. */\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME } from '../config.js';\n\nexport default class LogoView extends React.PureComponent {\n  render() {\n    const version = APP_NAME + ' (' + Tinode.getLibrary() + ')';\n    return (\n      <div id=\"dummy-view\">\n        <div>\n          <a href=\"https://github.com/tinode/chat/\">\n            <img id=\"logo\" alt=\"logo\" src=\"img/logo.svg\" />\n            <h2>Tinode Web</h2>\n          </a>\n          <p><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\" \n            description=\"Label for a client version\" /> {version}</p>\n          <p><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\"\n            description=\"Label for a server version\" /> {this.props.serverVersion} ({this.props.serverAddress})</p>\n        </div>\n      </div>\n    );\n  }\n};\n","// Utility class for hash navigation.\n\n// Parse hash as in http://www.example.com/path#hash as if it were\n// path and arguments.\nexport default class HashNavigation {\n  static parseUrlHash(hash) {\n    // Split path from args, path -> parts[0], args->path[1]\n    const parts = hash.split('?', 2);\n    const params = {};\n    let path = [];\n    if (parts[0]) {\n      path = parts[0].substr(1).split('/');\n    }\n    if (parts[1]) {\n      parts[1].split('&').forEach(function(part) {\n        let item = part.split('=');\n        if (item[0]) {\n          params[decodeURIComponent(item[0])] = decodeURIComponent(item[1]);\n        }\n      });\n    }\n    return {path: path, params: params};\n  }\n\n  static navigateTo(url) {\n    window.location.hash = url;\n  }\n\n  static composeUrlHash(path, params) {\n    let url = path.join('/');\n    const args = [];\n    for (const key in params) {\n      if (params.hasOwnProperty(key)) {\n        args.push(key + '=' + params[key]);\n      }\n    }\n    if (args.length > 0) {\n      url += '?' + args.join('&');\n    }\n    return url;\n  }\n\n  static addUrlParam(hash, key, value) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.params[key] = value;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static removeUrlParam(hash, key) {\n    const parsed = this.parseUrlHash(hash);\n    delete parsed.params[key];\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlSidePanel(hash, sidepanel) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[0] = sidepanel;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n\n  static setUrlTopic(hash, topic) {\n    const parsed = this.parseUrlHash(hash);\n    parsed.path[1] = topic;\n    // Close InfoView on topic change.\n    delete parsed.params.info;\n    return this.composeUrlHash(parsed.path, parsed.params);\n  }\n}\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\nconst Drafty = Tinode.Drafty;\n\nimport ChatMessage from '../widgets/chat-message.jsx';\nimport DocPreview from '../widgets/doc-preview.jsx';\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport GroupSubs from '../widgets/group-subs.jsx';\nimport ImagePreview from '../widgets/image-preview.jsx';\nimport Invitation from '../widgets/invitation.jsx';\nimport LetterTile from '../widgets/letter-tile.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport LogoView from './logo-view.jsx';\nimport SendMessage from '../widgets/send-message.jsx';\n\nimport { DEFAULT_P2P_ACCESS_MODE, IMAGE_PREVIEW_DIM, KEYPRESS_DELAY, MESSAGES_PAGE,\n  MAX_EXTERN_ATTACHMENT_SIZE, MAX_IMAGE_DIM, MAX_INBAND_ATTACHMENT_SIZE, READ_DELAY } from '../config.js';\nimport { SUPPORTED_IMAGE_FORMATS, blobToBase64, filePasted, fileToBase64,\n  imageScaled, makeImageDataUrl } from '../lib/blob-helpers.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { bytesToHumanSize, shortDateFormat } from '../lib/strformat.js';\n\n// Run timer with this frequency (ms) for checking notification queue.\nconst NOTIFICATION_EXEC_INTERVAL = 300;\n\nconst messages = defineMessages({\n  online_now: {\n    id: 'online_now',\n    defaultMessage: 'online now',\n    description: 'Indicator that the user or topic is currently online',\n  },\n  last_seen: {\n    id: 'last_seen_timestamp',\n    defaultMessage: 'Last seen',\n    description: 'Label for the timestamp of when the user or topic was last online'\n  },\n  not_found: {\n    id: 'title_not_found',\n    defaultMessage: 'Not found',\n    description: 'Title shown when topic is not found'\n  },\n  channel: {\n    id: 'channel',\n    defaultMessage: 'channel',\n    description: 'Subtitle shown for channels in MessagesView instead of last seen'\n  },\n  file_attachment_too_large: {\n    id: 'file_attachment_too_large',\n    defaultMessage: 'The file size {size} exceeds the {limit} limit.',\n    description: 'Error message when attachment is too large'\n  }\n});\n\n// Checks if the access permissions are granted but not yet accepted.\nfunction isUnconfirmed(acs) {\n  if (acs) {\n    const ex = acs.getExcessive() || '';\n    return acs.isJoiner('given') && (ex.includes('R') || ex.includes('W'));\n  }\n  return false;\n}\n\nfunction isPeerRestricted(acs) {\n  if (acs) {\n    const ms = acs.getMissing() || '';\n    return acs.isJoiner('want') && (ms.includes('R') || ms.includes('W'));\n  }\n  return false;\n}\n\nclass MessagesView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = MessagesView.getDerivedStateFromProps(props, {});\n\n    this.leave = this.leave.bind(this);\n    this.sendImageAttachment = this.sendImageAttachment.bind(this);\n    this.sendFileAttachment = this.sendFileAttachment.bind(this);\n    this.sendKeyPress = this.sendKeyPress.bind(this);\n    this.handleScrollReference = this.handleScrollReference.bind(this);\n    this.handleScrollEvent = this.handleScrollEvent.bind(this);\n    this.handleDescChange = this.handleDescChange.bind(this);\n    this.handleSubsUpdated = this.handleSubsUpdated.bind(this);\n    this.handleNewMessage = this.handleNewMessage.bind(this);\n    this.handleAllMessagesReceived = this.handleAllMessagesReceived.bind(this);\n    this.handleInfoReceipt = this.handleInfoReceipt.bind(this);\n    this.handleImagePostview = this.handleImagePostview.bind(this);\n    this.handleClosePreview = this.handleClosePreview.bind(this);\n    this.handleFormResponse = this.handleFormResponse.bind(this);\n    this.handleContextClick = this.handleContextClick.bind(this);\n    this.handleShowContextMenuMessage = this.handleShowContextMenuMessage.bind(this);\n    this.handleNewChatAcceptance = this.handleNewChatAcceptance.bind(this);\n    this.handleEnablePeer = this.handleEnablePeer.bind(this);\n    this.handleAttachFile = this.handleAttachFile.bind(this);\n    this.handleAttachImage = this.handleAttachImage.bind(this);\n    this.handleCancelUpload = this.handleCancelUpload.bind(this);\n    this.postReadNotification = this.postReadNotification.bind(this);\n    this.clearNotificationQueue = this.clearNotificationQueue.bind(this);\n\n    this.readNotificationQueue = [];\n    this.readNotificationTimer = null;\n  }\n\n  componentDidMount() {\n    // this.propsChange(this.props, this.state);\n    if (this.messagesScroller) {\n      this.messagesScroller.addEventListener('scroll', this.handleScrollEvent);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.messagesScroller) {\n      this.messagesScroller.removeEventListener('scroll', this.handleScrollEvent);\n    }\n\n    // Flush all notifications.\n    this.clearNotificationQueue();\n  }\n\n  // Scroll last message into view on component update e.g. on message received\n  // or vertical shrinking.\n  componentDidUpdate(prevProps, prevState) {\n    if (this.messagesScroller) {\n      if (prevState.topic != this.state.topic || prevState.messages.length != this.state.messages.length) {\n        // New message\n        this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n      } else if (prevProps.viewportHeight > this.props.viewportHeight) {\n        // Componet changed height.\n        this.messagesScroller.scrollTop += prevProps.viewportHeight - this.props.viewportHeight;\n      }\n    }\n\n    const topic = this.props.tinode ? this.props.tinode.getTopic(this.state.topic) : undefined;\n    if (this.state.topic != prevState.topic) {\n      if (prevState.topic && !Tinode.isNewGroupTopicName(prevState.topic)) {\n        this.leave(prevState.topic);\n      }\n\n      if (topic) {\n        topic.onData = this.handleNewMessage;\n        topic.onAllMessagesReceived = this.handleAllMessagesReceived;\n        topic.onInfo = this.handleInfoReceipt;\n        topic.onMetaDesc = this.handleDescChange;\n        topic.onSubsUpdated = this.handleSubsUpdated;\n        topic.onPres = this.handleSubsUpdated;\n      }\n    }\n\n    if (!this.props.applicationVisible) {\n      // If application is not visible, flush all unsent 'read' notifications.\n      this.clearNotificationQueue();\n    } else {\n      // Otherwise assume there are unread messages.\n      this.postReadNotification(0);\n    }\n\n    if (topic && !topic.isSubscribed() && this.props.ready &&\n        ((this.state.topic != prevState.topic) || !prevProps.ready)) {\n      // Is this a new topic?\n      const newTopic = (this.props.newTopicParams && this.props.newTopicParams._topicName == this.props.topic);\n\n      // Don't request the tags. They are useless unless the user\n      // is the owner and is editing the topic.\n      let getQuery = topic.startMetaQuery().withLaterDesc().withLaterSub();\n      if (this.state.isReader || newTopic) {\n        // Reading is either permitted or we don't know because it's a new topic. Ask for messages.\n        getQuery = getQuery.withLaterData(MESSAGES_PAGE);\n        if (this.state.isReader) {\n          getQuery = getQuery.withLaterDel();\n        }\n        // And show \"loading\" spinner.\n        this.setState({ fetchingMessages: true });\n      }\n      const setQuery = newTopic ? this.props.newTopicParams : undefined;\n      topic.subscribe(getQuery.build(), setQuery)\n        .then((ctrl) => {\n          if (ctrl.code == 303) {\n            // Redirect to another topic requested.\n            HashNavigation.navigateTo(HashNavigation.setUrlTopic('', ctrl.params.topic));\n            return;\n          }\n          if (this.state.topic != ctrl.topic) {\n            this.setState({topic: ctrl.topic});\n          }\n          this.props.onNewTopicCreated(this.props.topic, ctrl.topic);\n          // If there are unsent messages, try sending them now.\n          topic.queuedMessages((pub) => {\n            if (!pub._sending && topic.isSubscribed()) {\n              topic.publishMessage(pub);\n            }\n          });\n        })\n        .catch((err) => {\n          console.log(\"Failed subscription to\", this.state.topic);\n          this.props.onError(err.message, 'err');\n          const blankState = MessagesView.getDerivedStateFromProps({}, {});\n          blankState.title = this.props.intl.formatMessage(messages.not_found);\n          this.setState(blankState);\n        });\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let nextState = {};\n    if (!nextProps.topic) {\n      // Default state: no topic.\n      nextState = {\n        messages: [],\n        onlineSubs: [],\n        topic: null,\n        title: '',\n        avatar: null,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false,\n        peerMessagingDisabled: false,\n        channel: false\n      };\n    } else if (nextProps.topic != prevState.topic) {\n      const topic = nextProps.tinode.getTopic(nextProps.topic);\n      nextState = {\n        topic: nextProps.topic,\n        docPreview: null,\n        imagePreview: null,\n        imagePostview: null,\n        typingIndicator: false,\n        scrollPosition: 0,\n        fetchingMessages: false\n      };\n\n      if (topic) {\n        // Topic exists.\n        const msgs = [];\n        const subs = [];\n\n        if (nextProps.connected) {\n          topic.subscribers((sub) => {\n            if (sub.online && sub.user != nextProps.myUserId) {\n              subs.push(sub);\n            }\n          });\n        }\n\n        topic.messages(function(msg) {\n          if (!msg.deleted) {\n            msgs.push(msg);\n          }\n        });\n\n        Object.assign(nextState, {\n          messages: msgs,\n          onlineSubs: subs\n        });\n\n        if (topic.public) {\n          Object.assign(nextState, {\n            title: topic.public.fn,\n            avatar: makeImageDataUrl(topic.public.photo)\n          });\n        } else {\n          Object.assign(nextState, {\n            title: '',\n            avatar: null\n          });\n        }\n\n        const peer = topic.p2pPeerDesc();\n        if (peer) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: isPeerRestricted(peer.acs)\n          });\n        } else if (prevState.peerMessagingDisabled) {\n          Object.assign(nextState, {\n            peerMessagingDisabled: false\n          });\n        }\n        Object.assign(nextState, {\n          channel: topic.isChannelType()\n        });\n      } else {\n        // Invalid topic.\n        Object.assign(nextState, {\n          messages: [],\n          onlineSubs: [],\n          title: '',\n          avatar: null,\n          peerMessagingDisabled: false,\n          channel: false\n        });\n      }\n    }\n\n    if (nextProps.acs) {\n      if (nextProps.acs.isWriter() != prevState.isWriter) {\n        nextState.isWriter = !prevState.isWriter;\n      }\n      if (nextProps.acs.isReader() != prevState.isReader) {\n        nextState.isReader = !prevState.isReader;\n      }\n      if (!nextProps.acs.isReader('given') != prevState.readingBlocked) {\n        nextState.readingBlocked = !prevState.readingBlocked;\n      }\n      if (nextProps.acs.isSharer() != prevState.isSharer) {\n        nextState.isSharer = !prevState.isSharer;\n      }\n    } else {\n      if (prevState.isWriter) {\n        nextState.isWriter = false;\n      }\n      if (prevState.isReader) {\n        nextState.isReader = false;\n      }\n      if (!prevState.readingBlocked) {\n        prevState.readingBlocked = true;\n      }\n      if (prevState.isSharer) {\n        nextState.isSharer = false;\n      }\n    }\n\n    if (isUnconfirmed(nextProps.acs) == !prevState.unconformed) {\n      nextState.unconfirmed = !prevState.unconformed;\n    }\n\n    // Clear subscribers online when there is no connection.\n    if (!nextProps.connected && prevState.onlineSubs && prevState.onlineSubs.length > 0) {\n      nextState.onlineSubs = [];\n    }\n\n    return nextState;\n  }\n\n  leave(oldTopicName) {\n    if (!oldTopicName || !this.props.tinode.isTopicCached(oldTopicName)) {\n      return;\n    }\n    const oldTopic = this.props.tinode.getTopic(oldTopicName);\n    if (oldTopic && oldTopic.isSubscribed()) {\n      oldTopic.leave(false)\n        .catch(() => { /* do nothing here */ })\n        .finally(() => {\n          // We don't care if the request succeeded or failed.\n          // The topic is dead regardless.\n          this.setState({fetchingMessages: false});\n          oldTopic.onData = undefined;\n          oldTopic.onAllMessagesReceived = undefined;\n          oldTopic.onInfo = undefined;\n          oldTopic.onMetaDesc = undefined;\n          oldTopic.onSubsUpdated = undefined;\n          oldTopic.onPres = undefined;\n        });\n    }\n  }\n\n  handleScrollReference(node) {\n    if (node) {\n      node.addEventListener('scroll', this.handleScrollEvent);\n      this.messagesScroller = node;\n      this.messagesScroller.scrollTop = this.messagesScroller.scrollHeight - this.state.scrollPosition;\n    }\n  }\n\n  // Get older messages\n  handleScrollEvent(event) {\n    this.setState({scrollPosition: event.target.scrollHeight - event.target.scrollTop});\n    if (event.target.scrollTop <= 0) {\n      this.setState((prevState, props) => {\n        const newState = {};\n        if (!prevState.fetchingMessages) {\n          const topic = this.props.tinode.getTopic(this.state.topic);\n          if (topic && topic.isSubscribed() && topic.msgHasMoreMessages()) {\n            newState.fetchingMessages = true;\n            topic.getMessagesPage(MESSAGES_PAGE).catch((err) => {\n              this.setState({fetchingMessages: false});\n              this.props.onError(err.message, 'err');\n            });\n          }\n        }\n        return newState;\n      });\n    }\n  }\n\n  handleDescChange(desc) {\n    if (desc.public) {\n      this.setState({\n        title: desc.public.fn,\n        avatar: makeImageDataUrl(desc.public.photo)\n      });\n    } else {\n      this.setState({\n        title: '',\n        avatar: null\n      });\n    }\n\n    if (desc.acs) {\n      this.setState({\n        isWriter: desc.acs.isWriter(),\n        isReader: desc.acs.isReader(),\n        readingBlocked: !desc.acs.isReader('given'),\n        unconfirmed: isUnconfirmed(desc.acs),\n      });\n    }\n  }\n\n  postReadNotification(seq) {\n    // Ignore notifications if the app is invisible.\n    if (!this.props.applicationVisible) {\n      return;\n    }\n\n    // Set up the timer if it's not running already.\n    if (!this.readNotificationTimer) {\n      this.readNotificationTimer = setInterval(() => {\n        if (this.readNotificationQueue.length == 0) {\n          // Shut down the timer if the queue is empty.\n          clearInterval(this.readNotificationTimer);\n          this.readNotificationTimer = null;\n          return;\n        }\n\n        let seq = -1;\n        while (this.readNotificationQueue.length > 0) {\n          const n = this.readNotificationQueue[0];\n          if (n.topicName != this.state.topic) {\n            // Topic has changed. Drop the notification.\n            this.readNotificationQueue.shift();\n            continue;\n          }\n\n          const now = new Date();\n          if (n.sendAt <= now) {\n            // Remove expired notification from queue.\n            this.readNotificationQueue.shift();\n            seq = Math.max(seq, n.seq);\n          } else {\n            break;\n          }\n        }\n\n        // Send only one notification for the whole batch of messages.\n        if (seq >= 0) {\n          const topic = this.props.tinode.getTopic(this.state.topic);\n          if (topic) {\n            topic.noteRead(seq);\n          }\n        }\n      }, NOTIFICATION_EXEC_INTERVAL);\n    }\n\n    const now = new Date();\n    this.readNotificationQueue.push({\n      topicName: this.state.topic,\n      seq: seq,\n      sendAt: now.setMilliseconds(now.getMilliseconds() + READ_DELAY)\n    });\n  }\n\n  // Clear notification queue and timer.\n  clearNotificationQueue() {\n    this.readNotificationQueue = [];\n    if (this.readNotificationTimer) {\n      clearInterval(this.readNotificationTimer);\n      this.readNotificationTimer = null;\n    }\n  }\n\n  handleSubsUpdated() {\n    if (this.state.topic) {\n      const subs = [];\n      const topic = this.props.tinode.getTopic(this.state.topic);\n      topic.subscribers((sub) => {\n        if (sub.online && sub.user != this.props.myUserId) {\n          subs.push(sub);\n        }\n      });\n      const newState = {onlineSubs: subs};\n      const peer = topic.p2pPeerDesc();\n      if (peer) {\n        Object.assign(newState, {\n          peerMessagingDisabled: isPeerRestricted(peer.acs)\n        });\n      } else if (this.state.peerMessagingDisabled) {\n        Object.assign(newState, {\n          peerMessagingDisabled: false\n        });\n      }\n      this.setState(newState);\n    }\n  }\n\n  handleNewMessage(msg) {\n    // Regenerate messages list\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    const newState = {messages: []};\n    topic.messages((m) => {\n      if (!m.deleted) {\n        newState.messages.push(m);\n      }\n    });\n\n    // msg could be null if one or more messages were deleted.\n    if (msg && !msg.deleted) {\n      // If the message is added to the end of the message list,\n      // scroll to the bottom.\n      if (topic.isNewMessage(msg.seq)) {\n        newState.scrollPosition = 0;\n      }\n\n      // Aknowledge messages except own messages. They are\n      // automatically assumed to be read and recived.\n      const status = topic.msgStatus(msg, true);\n      if (status >= Tinode.MESSAGE_STATUS_SENT && msg.from != this.props.myUserId) {\n        this.postReadNotification(msg.seq);\n      }\n      this.props.onData(msg);\n    }\n    this.setState(newState);\n  }\n\n  handleAllMessagesReceived(count) {\n    this.setState({fetchingMessages: false});\n    if (count > 0) {\n      // 0 means \"latest\".\n      this.postReadNotification(0);\n    }\n  }\n\n  handleInfoReceipt(info) {\n    switch (info.what) {\n      case 'kp': {\n        clearTimeout(this.keyPressTimer);\n        var instance = this;\n        this.keyPressTimer = setTimeout(function() {\n          instance.setState({typingIndicator: false});\n        }, KEYPRESS_DELAY + 1000);\n        if (!this.state.typingIndicator) {\n          this.setState({typingIndicator: true});\n        }\n        break;\n      }\n      case 'read':\n      case 'recv':\n        // Redraw due to changed recv/read status.\n        this.forceUpdate();\n        break;\n      default:\n        console.log(\"Other change in topic: \", info.what);\n    }\n  }\n\n  handleImagePostview(content) {\n    this.setState({ imagePostview: content });\n  }\n\n  handleClosePreview() {\n    if (this.state.imagePreview && this.state.imagePreview.url) {\n      URL.revokeObjectURL(this.state.imagePreview.url);\n    }\n    this.setState({ imagePostview: null, imagePreview: null, docPreview: null });\n  }\n\n  handleFormResponse(action, text, data) {\n    if (action == 'pub') {\n      this.props.sendMessage(Drafty.attachJSON(Drafty.parse(text), data));\n    } else if (action == 'url') {\n      const url = new URL(data.ref);\n      const params = url.searchParams;\n      for (let key in data.resp) {\n        if (data.resp.hasOwnProperty(key)) {\n          params.set(key, data.resp[key]);\n        }\n      }\n      ['name', 'seq'].map((key) => {\n        if (data[key]) {\n          params.set(key, data[key]);\n        }\n      });\n      params.set('uid', this.props.myUserId);\n      params.set('topic', this.state.topic);\n      url.search = params;\n      window.open(url, '_blank');\n    } else {\n      console.log(\"Unknown action in form\", action);\n    }\n  }\n\n  handleContextClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.showContextMenu({ topicName: this.state.topic, y: e.pageY, x: e.pageX });\n  }\n\n  handleShowContextMenuMessage(params, messageSpecificMenuItems) {\n    params.topicName = this.state.topic;\n    const menuItems = messageSpecificMenuItems || [];\n    const topic = this.props.tinode.getTopic(params.topicName);\n    if (topic) {\n      if (!topic.isChannelType()) {\n        menuItems.push('message_delete');\n      }\n      const acs = topic.getAccessMode();\n      if (acs && acs.isDeleter()) {\n        menuItems.push('message_delete_hard');\n      }\n    }\n    this.props.showContextMenu(params, menuItems);\n  }\n\n  handleNewChatAcceptance(action) {\n    this.props.onNewChat(this.state.topic, action);\n  }\n\n  handleEnablePeer(e) {\n    e.preventDefault();\n    this.props.onChangePermissions(this.state.topic, DEFAULT_P2P_ACCESS_MODE, this.state.topic);\n  }\n\n  sendKeyPress() {\n    const topic = this.props.tinode.getTopic(this.state.topic);\n    if (topic.isSubscribed()) {\n      topic.noteKeyPress();\n    }\n  }\n\n  // Send attachment as Drafty message:\n  // - if file is too large, upload it and send a s link.\n  // - if file is small enough, just send it in-band.\n  sendFileAttachment(file) {\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (file.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      if (!uploader) {\n        this.props.onError(this.props.intl.formatMessage(messages.cannot_initiate_upload));\n        return;\n      }\n      const uploadCompletionPromise = uploader.upload(file);\n      const msg = Drafty.attachFile(null, {\n        mime: file.type,\n        filename: file.name,\n        size: file.size,\n        urlPromise: uploadCompletionPromise\n      });\n      // Pass data and the uploader to the TinodeWeb.\n      this.props.sendMessage(msg, uploadCompletionPromise, uploader);\n    } else {\n      // Small enough to send inband.\n      fileToBase64(file,\n        (mime, bits, fname) => {\n          this.props.sendMessage(Drafty.attachFile(null, {mime: mime, data: bits, filename: fname}));\n        },\n        this.props.onError\n      );\n    }\n  }\n\n  // handleAttachFile method is called when [Attach file] button is clicked.\n  handleAttachFile(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    if (file.size > maxExternAttachmentSize) {\n      // Too large.\n      this.props.onError(this.props.intl.formatMessage(messages.file_attachment_too_large,\n        {size: bytesToHumanSize(file.size), limit: bytesToHumanSize(maxExternAttachmentSize)}), 'err');\n    } else {\n      this.setState({ docPreview: {\n        file: file,\n        filename: file.name,\n        size: file.size,\n        type: file.type\n      }});\n    }\n  }\n\n  // sendImageAttachment sends the image bits inband as Drafty message.\n  sendImageAttachment(caption, blob) {\n    const mime = this.state.imagePreview.type;\n    const width = this.state.imagePreview.width;\n    const height = this.state.imagePreview.height;\n    const fname = this.state.imagePreview.filename;\n\n    // Server-provided limit reduced for base64 encoding and overhead.\n    const maxInbandAttachmentSize = (this.props.tinode.getServerLimit('maxMessageSize',\n      MAX_INBAND_ATTACHMENT_SIZE) * 0.75 - 1024) | 0;\n\n    if (blob.size > maxInbandAttachmentSize) {\n      // Too large to send inband - uploading out of band and sending as a link.\n      const uploader = this.props.tinode.getLargeFileHelper();\n      if (!uploader) {\n        this.props.onError(this.props.intl.formatMessage(messages.cannot_initiate_upload));\n        return;\n      }\n      const uploadCompletionPromise = uploader.upload(blob);\n\n      // Make small preview to show while uploading.\n      imageScaled(blob, IMAGE_PREVIEW_DIM, IMAGE_PREVIEW_DIM, -1, false,\n        (tinyMine, tinyBlob) => {\n          // Convert tiny image into base64 for serialization and previewing.\n          blobToBase64(tinyBlob, (blobMime, tinyBits64) => {\n            let msg = Drafty.insertImage(null, 0, {\n              mime: mime,\n              _tempPreview: tinyBits64, // This preview will not be serialized.\n              width: width,\n              height: height,\n              filename: fname,\n              size: blob.size,\n              urlPromise: uploadCompletionPromise\n            });\n            if (caption) {\n              msg = Drafty.appendLineBreak(msg);\n              msg = Drafty.append(msg, Drafty.init(caption));\n            }\n            // Pass data and the uploader to the TinodeWeb.\n            this.props.sendMessage(msg, uploadCompletionPromise, uploader);\n          }\n        )},\n        // Failure\n        (err) => {\n          this.props.onError(err, 'err');\n        }\n      );\n      return;\n    }\n\n    // Upload the image if it's too big to be send inband.\n    blobToBase64(blob, (blobMime, bits64) => {\n      let msg = Drafty.insertImage(null, 0, {\n        mime: blobMime,\n        preview: bits64, // Serializable preview\n        width: width,\n        height: height,\n        filename: fname,\n        size: blob.size\n      });\n      if (caption) {\n        msg = Drafty.appendLineBreak(msg);\n        msg = Drafty.append(msg, Drafty.init(caption));\n      }\n      this.props.sendMessage(msg);\n    });\n  }\n\n  // handleAttachImage method is called when [Attach image] button is clicked.\n  handleAttachImage(file) {\n    const maxExternAttachmentSize = this.props.tinode.getServerLimit('maxFileUploadSize', MAX_EXTERN_ATTACHMENT_SIZE);\n\n    // Get image dimensions and size, optionally scale it down.\n    imageScaled(file, MAX_IMAGE_DIM, MAX_IMAGE_DIM, maxExternAttachmentSize, false,\n      // Success\n      (mime, blob, width, height, fname) => {\n        this.setState({imagePreview: {\n          url: URL.createObjectURL(blob),\n          blob: blob,\n          filename: fname,\n          width: width,\n          height: height,\n          size: blob.size,\n          type: mime\n        }});\n      },\n      // Failure\n      (err) => {\n        this.props.onError(err, 'err');\n      }\n    );\n  }\n\n  handleCancelUpload(seq, uploader) {\n    const found = this.state.messages.find(msg => msg.seq == seq);\n    if (found) {\n      found._cancelled = true;\n    }\n    uploader.cancel();\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n\n    let component;\n    if (this.props.hideSelf) {\n      component = null;\n    } else if (!this.state.topic) {\n      component = (\n        <LogoView\n          serverVersion={this.props.serverVersion}\n          serverAddress={this.props.serverAddress} />\n      );\n    } else {\n      let component2;\n      if (this.state.imagePreview) {\n        // Preview image before sending.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePreview}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendImageAttachment} />\n        );\n      } else if (this.state.imagePostview) {\n        // Expand received image.\n        component2 = (\n          <ImagePreview\n            content={this.state.imagePostview}\n            onClose={this.handleClosePreview} />\n        );\n      } else if (this.state.docPreview) {\n        // Preview attachment before sending.\n        component2 = (\n          <DocPreview\n            content={this.state.docPreview}\n            onClose={this.handleClosePreview}\n            onSendMessage={this.sendFileAttachment} />\n        );\n      } else {\n        const topic = this.props.tinode.getTopic(this.state.topic);\n        const isChannel = topic.isChannelType();\n        const groupTopic = topic.isGroupType() && !isChannel;\n        let messageNodes = [];\n        let previousFrom = null;\n        let chatBoxClass = null;\n        for (let i=0; i<this.state.messages.length; i++) {\n          let msg = this.state.messages[i];\n          let nextFrom = null;\n\n          if (i + 1 < this.state.messages.length) {\n            nextFrom = this.state.messages[i+1].from || 'chan';\n          }\n\n          let sequence = 'single';\n          let thisFrom = msg.from || 'chan';\n          if (thisFrom == previousFrom) {\n            if (thisFrom == nextFrom) {\n              sequence = 'middle';\n            } else {\n              sequence = 'last';\n            }\n          } else if (thisFrom == nextFrom) {\n            sequence = 'first';\n          }\n          previousFrom = thisFrom;\n\n          const isReply = !(thisFrom == this.props.myUserId);\n          const deliveryStatus = topic.msgStatus(msg, true);\n\n          let userName, userAvatar, userFrom;\n          if (groupTopic) {\n            const user = topic.userDesc(thisFrom);\n            if (user && user.public) {\n              userName = user.public.fn;\n              userAvatar = makeImageDataUrl(user.public.photo);\n            }\n            userFrom = thisFrom;\n            chatBoxClass='chat-box group';\n          } else {\n            chatBoxClass='chat-box';\n          }\n\n          messageNodes.push(\n            <ChatMessage\n              tinode={this.props.tinode}\n              content={msg.content}\n              deleted={msg.hi}\n              mimeType={msg.head ? msg.head.mime : null}\n              timestamp={msg.ts}\n              response={isReply}\n              seq={msg.seq}\n              userFrom={userFrom}\n              userName={userName}\n              userAvatar={userAvatar}\n              sequence={sequence}\n              received={deliveryStatus}\n              uploader={msg._uploader}\n              viewportWidth={this.props.viewportWidth}\n              showContextMenu={this.state.channel? false : this.handleShowContextMenuMessage}\n              onImagePreview={this.handleImagePostview}\n              onFormResponse={this.handleFormResponse}\n              onError={this.props.onError}\n              onCancelUpload={this.handleCancelUpload}\n              key={msg.seq} />\n          );\n        }\n\n        let lastSeen = null;\n        if (isChannel) {\n          lastSeen = formatMessage(messages.channel);\n        } else {\n          const cont = this.props.tinode.getMeTopic().getContact(this.state.topic);\n          if (cont && Tinode.isP2PTopicName(cont.topic)) {\n            if (cont.online) {\n              lastSeen = formatMessage(messages.online_now);\n            } else if (cont.seen) {\n              lastSeen = formatMessage(messages.last_seen) + \": \" +\n                shortDateFormat(cont.seen.when, this.props.intl.locale);\n              // TODO: also handle user agent in c.seen.ua\n            }\n          }\n        }\n        const avatar = this.state.avatar || true;\n        const online = this.props.online ? 'online' + (this.state.typingIndicator ? ' typing' : '') : 'offline';\n\n        component2 = (\n          <>\n            <div id=\"topic-caption-panel\" className=\"caption-panel\">\n              {this.props.displayMobile ?\n                <a href=\"#\" id=\"hide-message-view\" onClick={(e) => {e.preventDefault(); this.props.onHideMessagesView();}}>\n                  <i className=\"material-icons\">arrow_back</i>\n                </a>\n                :\n                null}\n              <div className=\"avatar-box\">\n                <LetterTile\n                  avatar={avatar}\n                  topic={this.state.topic}\n                  title={this.state.title} />\n                {!isChannel ? <span className={online} /> : null}\n              </div>\n              <div id=\"topic-title-group\">\n                <div id=\"topic-title\" className=\"panel-title\">{\n                  this.state.title ||\n                  <i><FormattedMessage id=\"unnamed_topic\" defaultMessage=\"Unnamed\"\n                    description=\"Title shown when the topic has no name\" /></i>\n                }</div>\n                <div id=\"topic-last-seen\">{lastSeen}</div>\n              </div>\n              {groupTopic ?\n                <GroupSubs\n                  subscribers={this.state.onlineSubs} /> :\n                <div id=\"topic-users\" />\n              }\n              <div>\n                <a href=\"#\" onClick={this.handleContextClick}>\n                  <i className=\"material-icons\">more_vert</i>\n                </a>\n              </div>\n            </div>\n            {this.props.displayMobile ?\n              <ErrorPanel\n                level={this.props.errorLevel}\n                text={this.props.errorText}\n                onClearError={this.props.onError} />\n              : null}\n            <LoadSpinner show={this.state.fetchingMessages} />\n            <div id=\"messages-container\">\n              <div id=\"messages-panel\" ref={this.handleScrollReference}>\n                <ul id=\"scroller\" className={chatBoxClass}>\n                  {messageNodes}\n                </ul>\n              </div>\n              {!this.state.isReader ?\n              <div id=\"write-only-background\">\n                {this.state.readingBlocked ?\n                <div id=\"write-only-note\">\n                  <FormattedMessage id=\"messages_not_readable\" defaultMessage=\"no access to messages\"\n                    description=\"Message shown in topic without the read access\" />\n                </div>\n                : null }\n              </div>\n              : null }\n            </div>\n            {this.state.peerMessagingDisabled && !this.state.unconfirmed ?\n              <div id=\"peer-messaging-disabled-note\">\n                <i className=\"material-icons secondary\">block</i> <FormattedMessage\n                  id=\"peers_messaging_disabled\" defaultMessage=\"Peer's messaging is disabled.\"\n                  description=\"Shown when the p2p peer's messaging is disabled\" /> <a href=\"#\"\n                    onClick={this.handleEnablePeer}><FormattedMessage id=\"enable_peers_messaging\"\n                    defaultMessage=\"Enable\" description=\"Call to action to enable peer's messaging\" /></a>.\n              </div> : null}\n            {this.state.unconfirmed ?\n              <Invitation onAction={this.handleNewChatAcceptance} />\n              :\n              <SendMessage\n                disabled={!this.state.isWriter}\n                onSendMessage={this.props.sendMessage}\n                onKeyPress={this.sendKeyPress}\n                onAttachFile={this.handleAttachFile}\n                onAttachImage={this.handleAttachImage}\n                onError={this.props.onError} />}\n          </>\n        );\n      }\n\n      component = <div id=\"topic-view\">{component2}</div>\n    }\n    return component;\n  }\n};\n\nexport default injectIntl(MessagesView);\n","// The <- button to be displayed in title bars.\nimport React from 'react';\n\nexport default class ButtonBack extends React.PureComponent {\n  render() {\n    return (\n      <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onBack();}}>\n        <i className=\"material-icons\">arrow_back</i>\n      </a>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class MenuContacts extends React.PureComponent {\n  render() {\n    return (\n      <div>\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onNewTopic();}}><i className=\"material-icons\">chat</i></a>\n        &nbsp;\n        <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n      </div>\n    );\n  }\n};\n","import React from 'react';\n\nexport default class MenuStart extends React.PureComponent {\n  render() {\n    return (\n        <div>\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSignUp();}}><i className=\"material-icons\">person_add</i></a>\n          &nbsp;\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onSettings();}}><i className=\"material-icons\">settings</i></a>\n        </div>\n    );\n  }\n};\n","import React from 'react';\n\nimport LetterTile from './letter-tile.jsx';\nimport ButtonBack from './button-back.jsx';\nimport MenuContacts from './menu-contacts.jsx';\nimport MenuStart from './menu-start.jsx';\n\nexport default class SideNavbar extends React.PureComponent {\n  render() {\n    return (\n        <div id=\"side-caption-panel\" className=\"caption-panel\">\n          {this.props.onCancel ? <ButtonBack onBack={this.props.onCancel} /> : null}\n          {this.props.avatar ?\n            <div id=\"self-avatar\" className=\"avatar-box\">\n              <LetterTile\n                avatar={this.props.avatar}\n                topic={this.props.myUserId}\n                title={this.props.title} />\n            </div>\n            :\n            null}\n          <div id=\"sidepanel-title\" className=\"panel-title\">{this.props.title}</div>\n          {this.props.state === 'login' ?\n              <MenuStart onSignUp={this.props.onSignUp} onSettings={this.props.onSettings} /> :\n            this.props.state === 'contacts' ?\n              <MenuContacts onNewTopic={this.props.onNewTopic} onSettings={this.props.onSettings} /> :\n            null}\n        </div>\n    );\n  }\n};\n","/* ContactsView holds all contacts-related stuff */\nimport React from 'react';\nimport { FormattedMessage, defineMessages } from 'react-intl';\n\nimport ContactList from '../widgets/contact-list.jsx';\n\nimport { updateFavicon } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  archived_contacts_title: {\n    id: \"archived_contacts\",\n    defaultMessage: \"Archived contacts ({count})\",\n    description: \"Label for archived chats\"\n  }\n});\n\nexport default class ContactsView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAction = this.handleAction.bind(this);\n\n    this.state = ContactsView.deriveStateFromProps(props);\n  }\n\n  static deriveStateFromProps(props) {\n    const contacts = [];\n    let unreadThreads = 0;\n    let archivedCount = 0;\n    props.chatList.map((c) => {\n      const blocked = c.acs && !c.acs.isJoiner();\n      // Show only blocked contacts only when props.blocked == true.\n      if (blocked && props.blocked) {\n        contacts.push(c);\n      }\n      if (blocked || props.blocked) {\n        return;\n      }\n\n      if (c.private && c.private.arch) {\n        if (props.archive) {\n          contacts.push(c);\n        } else {\n          archivedCount ++;\n        }\n      } else if (!props.archive) {\n        contacts.push(c);\n        unreadThreads += c.unread > 0 ? 1 : 0;\n      }\n    });\n\n    contacts.sort((a, b) => {\n      return (b.touched || 0) - (a.touched || 0);\n    });\n\n    if (archivedCount > 0) {\n      contacts.push({\n        action: 'archive',\n        title: messages.archived_contacts_title,\n        values: {count: archivedCount}\n      });\n    }\n\n    return {\n      contactList: contacts,\n      unreadThreads: unreadThreads\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.chatList != this.props.chatList ||\n        prevProps.archive != this.props.archive ||\n        prevProps.blocked != this.props.blocked) {\n      const newState = ContactsView.deriveStateFromProps(this.props);\n      this.setState(newState);\n      if (newState.unreadThreads != prevState.unreadThreads) {\n        updateFavicon(newState.unreadThreads);\n      }\n    }\n  }\n\n  handleAction(action_ignored) {\n    this.props.onShowArchive();\n  }\n\n  render() {\n    return (\n      <FormattedMessage id=\"contacts_not_found\"\n        defaultMessage=\"You have no chats<br />¯∖_(ツ)_/¯\"\n        description=\"HTML message shown in ContactList when no contacts are found\">{\n        (no_contacts) => <ContactList\n          connected={this.props.connected}\n          contacts={this.state.contactList}\n          emptyListMessage={no_contacts}\n          topicSelected={this.props.topicSelected}\n          myUserId={this.props.myUserId}\n          showOnline={true}\n          showUnread={true}\n          onTopicSelected={this.props.onTopicSelected}\n          showContextMenu={this.props.showContextMenu}\n          onAction={this.handleAction} />\n      }</FormattedMessage>\n    );\n  }\n};\n","// Helper functions for storing values in localStorage.\n// By default localStorage can store only strings, not objects or other types.\n\nexport default class LocalStorageUtil {\n  // Replace old object with the new one.\n  static setObject(key, value) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n\n  // Get stored object.\n  static getObject(key) {\n    const value = localStorage.getItem(key);\n    return value && JSON.parse(value);\n  }\n\n  // Partially or wholly update stored object.\n  static updateObject(key, value) {\n    const oldVal = this.getObject(key);\n    this.setObject(key, Object.assign(oldVal || {}, value));\n  }\n\n  // Just a wrapper.\n  static removeItem(key) {\n    localStorage.removeItem(key);\n  }\n}\n","// Account registration.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport { theCard } from '../lib/utils.js';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class CreateAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: '',\n      password: '',\n      email: '',\n      fn: '', // full/formatted name\n      imageDataUrl: null,\n      errorCleared: false,\n      saveToken: LocalStorageUtil.getObject('keep-logged-in')\n    };\n\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(password) {\n    this.setState({password: password});\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value})\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleToggleSaveToken() {\n    LocalStorageUtil.setObject('keep-logged-in', !this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({errorCleared: false});\n    this.props.onCreateAccount(\n      this.state.login.trim(),\n      this.state.password.trim(),\n      theCard(this.state.fn.trim().substring(0, MAX_TITLE_LENGTH), this.state.imageDataUrl),\n      {'meth': 'email', 'val': this.state.email});\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form className=\"panel-form-column\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n              description=\"Placeholer for username/login\">{\n              (login_prompt) => <input type=\"text\" placeholder={login_prompt} autoComplete=\"user-name\"\n                value={this.state.login} onChange={this.handleLoginChange} required autoFocus />\n            }</FormattedMessage>\n            <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n              description=\"Placeholder/prompt for entering password\">{\n              (password_prompt) => <VisiblePassword placeholder={password_prompt} autoComplete=\"new-password\"\n                value={this.state.password} onFinished={this.handlePasswordChange}\n                required={true} />\n            }</FormattedMessage>\n          </div>\n          <AvatarUpload\n            onImageChanged={this.handleImageChanged}\n            onError={this.props.onError} />\n        </div>\n        <div  className=\"panel-form-row\">\n          <FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n            description=\"Input placeholder for person's full name\">{\n            (full_name_prompt) => <input type=\"text\" placeholder={full_name_prompt} autoComplete=\"name\"\n              value={this.state.fn} onChange={this.handleFnChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <FormattedMessage id=\"email_prompt\" defaultMessage=\"Email, e.g. jdoe@example.com\"\n            description=\"Input placeholder for email entry\">{\n            (email_prompt) => <input type=\"email\" placeholder={email_prompt} autoComplete=\"email\"\n              value={this.state.email} onChange={this.handleEmailChange} required/>\n          }</FormattedMessage>\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n            description=\"Label for a checkbox\">{\n            (stay_logged_in) => <label htmlFor=\"save-token\">&nbsp;{stay_logged_in}</label>\n          }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_up\" defaultMessage=\"Sign up\"\n              description=\"Create account button [Sign Up]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\n\nimport { makeImageDataUrl } from '../lib/blob-helpers.js';\n\nexport default class EditAccountView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    this.state = {\n      fullName: me.public ? me.public.fn : undefined,\n      avatar: makeImageDataUrl(me.public ? me.public.photo : null)\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n                description=\"Label for full name editing\" />\n            </label>\n            <div className=\"large\">{this.state.fullName}</div>\n            <div>\n              <label className=\"small\"><FormattedMessage id=\"label_user_id\" defaultMessage=\"ID:\"\n                description=\"Label for user address (ID)\" /></label>&nbsp;\n              <tt>{this.props.myUserId}</tt>\n            </div>\n          </div>\n          <AvatarUpload\n            avatar={this.state.avatar}\n            readOnly={!this.state.owner}\n            uid={this.props.myUserId}\n            title={this.state.fullName} />\n        </div>\n        <div className=\"panel-form-row\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('general');}}>\n            <i className=\"material-icons\">edit</i>&nbsp;\n            <FormattedMessage id=\"button_edit\" defaultMessage=\"Edit\" description=\"Call to action [Edit]\" />\n          </a>\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('notif');}}>\n            <i className=\"material-icons\">notifications</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_notifications\"\n              defaultMessage=\"Notifications\" description=\"Sidepanel title for AccNotificationsView.\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('security');}}>\n            <i className=\"material-icons\">security</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_security\"\n              defaultMessage=\"Security\" description=\"Sidepanel title for AccSecurityView.\" />\n          </a>\n          <a href=\"#\" className=\"flat-button\" onClick={(e) => {e.preventDefault(); this.props.onBasicNavigate('support');}}>\n            <i className=\"material-icons\">contact_support</i>&nbsp;<FormattedMessage id=\"sidepanel_title_acc_support\"\n              defaultMessage=\"Support\" description=\"Sidepanel title for AccSupportView.\" />\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport AvatarUpload from '../widgets/avatar-upload.jsx';\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport TagManager from '../widgets/tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\nimport { makeImageDataUrl } from '../lib/blob-helpers.js';\nimport { arrayEqual, asEmail, asPhone, theCard } from '../lib/utils.js';\n\nexport default class AccGeneralView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    this.state = {\n      fullName: me.public ? me.public.fn : undefined,\n      avatar: makeImageDataUrl(me.public ? me.public.photo : null),\n      tags: me.tags(),\n      credentials: me.getCredentials() || [],\n      addCredActive: false,\n      addCredInvalid: false,\n      newCred: '',\n      previousOnTags: me.onTagsUpdated\n    };\n\n    this.tnNewTags = this.tnNewTags.bind(this);\n    this.tnCredsUpdated = this.tnCredsUpdated.bind(this);\n    this.handleFullNameUpdate = this.handleFullNameUpdate.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleCredChange = this.handleCredChange.bind(this);\n    this.handleCredKeyDown = this.handleCredKeyDown.bind(this);\n    this.handleCredEntered = this.handleCredEntered.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n  }\n\n  componentDidMount() {\n    const me = this.props.tinode.getMeTopic();\n    me.onCredsUpdated = this.tnCredsUpdated;\n    me.onTagsUpdated = this.tnNewTags;\n  }\n\n  componentWillUnmount() {\n    const me = this.props.tinode.getMeTopic();\n    me.onTagsUpdated = this.state.previousOnTags;\n    me.onCredsUpdated = undefined;\n  }\n\n  tnNewTags(tags) {\n    this.setState({tags: tags});\n  }\n\n  tnCredsUpdated(creds) {\n    this.setState({credentials: creds || []});\n  }\n\n  handleFullNameUpdate(fn) {\n    fn = fn.trim().substring(0, MAX_TITLE_LENGTH);\n    if (fn) {\n      this.setState({fullName: fn});\n      this.props.onUpdateAccount(undefined, theCard(fn, null));\n    }\n  }\n\n  handleImageChanged(img) {\n    this.setState({avatar: img});\n    this.props.onUpdateAccount(undefined, theCard(null, img || Tinode.DEL_CHAR));\n  }\n\n  handleCredChange(e) {\n    this.setState({newCred: e.target.value, addCredInvalid: false});\n  }\n\n  handleCredKeyDown(e) {\n    if (e.keyCode === 27) {\n      // Escape pressed\n      this.setState({newCred: '', addCredActive: false});\n    } else if (e.keyCode === 13) {\n      // Enter pressed\n      this.handleCredEntered(e);\n    }\n  }\n\n  handleCredEntered(e) {\n    let value = this.state.newCred.trim();\n    if (!value) {\n      this.setState({addCredActive: false, addCredInvalid: false});\n      return;\n    }\n\n    let val = asPhone(value);\n    let method;\n    if (val) {\n      method = 'tel';\n    } else {\n      val = asEmail(value);\n      if (val) {\n        method = 'email';\n      }\n    }\n    if (method) {\n      this.props.onCredAdd(method, val);\n      this.setState({addCredActive: false, newCred: ''});\n    } else {\n      this.setState({addCredInvalid: true});\n    }\n  }\n\n  handleTagsUpdated(tags) {\n    // Check if tags have actually changed.\n    if (arrayEqual(this.state.tags.slice(0), tags.slice(0))) {\n      return;\n    }\n    this.props.onUpdateTags(tags);\n  }\n\n  render() {\n    const credentials = [];\n    this.state.credentials.map((cred) => {\n      credentials.push(<div key={cred.meth + \":\" + cred.val + \":\" + cred.done}>{cred.meth}: <tt>{cred.val}</tt>\n        <span > {!cred.done ?\n          <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredConfirm(cred.meth, cred.val);}}>\n              <FormattedMessage id=\"validate_credential_action\" defaultMessage=\"confirm\"\n                description=\"Validate credentail call to action\" />\n            </a>\n          : null} <a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.onCredDelete(cred.meth, cred.val);}}><i\n            className=\"material-icons gray\">delete_outline</i></a></span></div>);\n    });\n\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\"><FormattedMessage id=\"label_your_name\" defaultMessage=\"Your name\"\n              description=\"Label for full name editing\" /></label>\n            <div><FormattedMessage id=\"full_name_prompt\" defaultMessage=\"Full name, e.g. John Doe\"\n              description=\"Input placeholder for person's full name\">{\n              (full_name_placeholder) => <InPlaceEdit\n                placeholder={full_name_placeholder}\n                value={this.state.fullName}\n                onFinished={this.handleFullNameUpdate} />\n            }</FormattedMessage></div>\n          </div>\n          <AvatarUpload\n            avatar={this.state.avatar}\n            uid={this.props.myUserId}\n            title={this.state.fullName}\n            onImageChanged={this.handleImageChanged}\n            onError={this.props.onError} />\n        </div>\n        <div className=\"hr\" />\n        <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (user discovery)\"\n          description=\"Section title for TagManager\">{\n          (title_tag_manager) => <TagManager\n            title={title_tag_manager}\n            activated={false}\n            tags={this.state.tags}\n            tinode={this.props.tinode}\n            onSubmit={this.handleTagsUpdated} />\n        }</FormattedMessage>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_user_contacts\" defaultMessage=\"Contacts:\"\n            description=\"Label for user contacts\" />\n          </label>\n          <div className=\"quoted\">\n            {credentials}\n            {this.state.addCredActive ?\n              <input type=\"text\" value={this.state.value}\n                className={this.state.addCredInvalid ? 'invalid' : null}\n                placeholder=\"Phone number or email\" required=\"required\" autoFocus\n                onChange={this.handleCredChange} onKeyDown={this.handleCredKeyDown} onBlur={this.handleCredEntered} />\n              : null}\n            <div>\n              <a href=\"#\" onClick={(e) => {e.preventDefault(); this.setState({addCredActive: true});}}>\n                <i className=\"material-icons\">add</i>\n                <FormattedMessage id=\"button_add_another\" defaultMessage=\"Add another\" description=\"Call to action [+ add another]\" />\n              </a></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\n\nexport default class EditAccountView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckboxClick = this.handleCheckboxClick.bind(this);\n  }\n\n  handleCheckboxClick(what, checked) {\n    if (what == 'sound') {\n      this.props.onToggleMessageSounds(checked);\n    } else if (what == 'alert') {\n      this.props.onTogglePushNotifications(checked);\n    } else if (what == 'incognito') {\n      this.props.onToggleIncognitoMode(checked);\n    }\n  }\n\n  render() {\n    return (\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"message-sound\">\n              <FormattedMessage id=\"label_message_sound\" defaultMessage=\"Message sound:\"\n                description=\"Label for message sounds toggle\" />\n            </label>\n            <CheckBox name=\"sound\" id=\"message-sound\"\n              checked={this.props.messageSounds} onChange={this.handleCheckboxClick} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"desktop-alerts\">\n            {this.props.desktopAlertsEnabled ?\n              <FormattedMessage id=\"label_push_notifications\" defaultMessage=\"Notification alerts:\"\n                description=\"Label for push notifications switch\" />\n              :\n              <FormattedMessage id=\"label_push_notifications_disabled\"\n                defaultMessage=\"Notification alerts (requires HTTPS):\"\n                description=\"Label for push notifications switch\" />\n            }\n            </label>\n            <CheckBox name=\"alert\" id=\"desktop-alerts\"\n              checked={this.props.desktopAlerts}\n              onChange={this.props.desktopAlertsEnabled ? this.handleCheckboxClick : null} />\n          </div>\n          <div className=\"panel-form-row\">\n            <label htmlFor=\"incognito-mode\">\n              <FormattedMessage id=\"label_incognito_mode\" defaultMessage=\"Incognito mode:\"\n                description=\"Label for incognito mode toggle\" />\n            </label>\n            <CheckBox name=\"incognito\" id=\"incognito-mode\"\n              checked={this.props.incognitoMode} onChange={this.handleCheckboxClick} />\n          </div>\n        </div>\n    );\n  }\n};\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport InPlaceEdit from '../widgets/in-place-edit.jsx';\nimport PermissionsEditor from '../widgets/permissions-editor.jsx';\n\nconst messages = defineMessages({\n  delete_account: {\n    id: 'delete_account',\n    defaultMessage: 'Delete account',\n    description: 'Title for delete account warning'\n  },\n  delete_account_warning: {\n    id: 'delete_account_arning',\n    defaultMessage: 'Are you sure you want to delete your account? It cannot be undone.',\n    description: 'Warning message when deleting an account'\n  }\n});\n\nclass AccSecurityView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const me = this.props.tinode.getMeTopic();\n    let blockedCount = 0;\n    me.contacts((c) => {\n      if (c.acs && !c.acs.isJoiner()) {\n        blockedCount ++;\n      }\n    });\n    const defacs = me.getDefaultAccess();\n    this.state = {\n      auth: defacs ? defacs.auth : null,\n      anon: defacs ? defacs.anon : null,\n      showPermissionEditorFor: undefined,\n      blockedCount: blockedCount,\n    };\n\n    this.handlePasswordUpdate = this.handlePasswordUpdate.bind(this);\n    this.handleLaunchPermissionsEditor = this.handleLaunchPermissionsEditor.bind(this);\n    this.handleHidePermissionsEditor = this.handleHidePermissionsEditor.bind(this);\n    this.handlePermissionsChanged = this.handlePermissionsChanged.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n  }\n\n  handlePasswordUpdate(pwd) {\n    this.setState({password: pwd});\n    this.props.onUpdateAccount(pwd);\n  }\n\n  handleLaunchPermissionsEditor(which) {\n    this.setState({\n      showPermissionEditorFor: which,\n      editedPermissions: this.state[which]\n    });\n  }\n\n  handleHidePermissionsEditor() {\n    this.setState({showPermissionEditorFor: undefined});\n  }\n\n  handlePermissionsChanged(perm) {\n    let defacs = {};\n    defacs[this.state.showPermissionEditorFor] = perm;\n    this.props.onUpdateAccount(undefined, undefined, defacs);\n\n    let newState = {showPermissionEditorFor: undefined};\n    newState[this.state.showPermissionEditorFor] = perm;\n    this.setState(newState);\n  }\n\n  handleDeleteAccount(e) {\n    e.preventDefault();\n    const {formatMessage} = this.props.intl;\n    this.props.onShowAlert(\n      formatMessage(messages.delete_account), // title\n      formatMessage(messages.delete_account_warning), // content\n      (() => { this.props.onDeleteAccount(); }), // onConfirm\n      null, // use default text \"OK\"\n      true, // Show Reject button\n      null  // use default text \"Cancel\"\n    );\n  }\n\n  render() {\n    return (\n      <React.Fragment>{this.state.showPermissionEditorFor ?\n        <PermissionsEditor\n          mode={this.state.editedPermissions}\n          skip=\"O\"\n          onSubmit={this.handlePermissionsChanged}\n          onCancel={this.handleHidePermissionsEditor} />\n        :\n        <div className=\"scrollable-panel\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\">\n              <FormattedMessage id=\"label_password\" defaultMessage=\"Password\"\n                  description=\"Label for password editing\" />\n            </label>\n            <div>\n              <FormattedMessage id=\"password_unchanged_prompt\" defaultMessage=\"Unchanged\"\n                description=\"Message in editor while password is unchanged\">{\n                (password_unchanged) => <InPlaceEdit\n                  placeholder={password_unchanged}\n                  type=\"password\"\n                  onFinished={this.handlePasswordUpdate} />\n              }</FormattedMessage>\n            </div>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <a href=\"#\" className=\"danger flat-button\" onClick={(e) => {e.preventDefault(); this.props.onLogout();}}>\n              <i className=\"material-icons\">exit_to_app</i> &nbsp;<FormattedMessage id=\"button_logout\"\n                defaultMessage=\"Logout\" description=\"Button [Logout]\" />\n            </a>\n            <a href=\"#\" className=\"danger flat-button\" onClick={(e) => {this.handleDeleteAccount(e);}}>\n              <i className=\"material-icons\">delete</i> &nbsp;<FormattedMessage id=\"button_delete_account\"\n                defaultMessage=\"Delete account\" description=\"Button [Delete account]\" />\n            </a>\n          </div>\n          <div className=\"hr\" />\n          <div className=\"panel-form-column\">\n            <div>\n              <label className=\"small\">\n                <FormattedMessage id=\"label_default_access_mode\" defaultMessage=\"Default access mode:\"\n                description=\"Label for default access mode\" />\n              </label>\n            </div>\n            <div className=\"quoted\">\n              <div>Auth: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'auth')}>{this.state.auth}</tt></div>\n              <div>Anon: <tt className=\"clickable\"\n                onClick={this.handleLaunchPermissionsEditor.bind(this, 'anon')}>{this.state.anon}</tt></div>\n            </div>\n          </div>\n          {this.state.blockedCount > 0 ?\n            <>\n              <div className=\"hr\" />\n              <div className=\"panel-form-row\">\n                <i className=\"material-icons\">block</i>&nbsp;\n                <a href=\"#\" className=\"gray\" onClick={(e) => {e.preventDefault(); this.props.onShowBlocked();}}>\n                  <FormattedMessage id=\"blocked_contacts_link\" defaultMessage=\"Blocked contacts ({count})\"\n                    values={{ count: this.state.blockedCount }} description=\"Blocked contacts link\" />\n                </a>\n              </div>\n            </>\n            : null }\n        </div>\n      }</React.Fragment>\n    );\n  }\n};\n\nexport default injectIntl(AccSecurityView);\n","// Edit account parameters.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport { APP_NAME, LINK_CONTACT_US, LINK_PRIVACY_POLICY, LINK_TERMS_OF_SERVICE } from '../config.js';\n\nexport default class AccSupportView extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"scrollable-panel\">\n        <div className=\"panel-form-column\">\n          <a href={LINK_CONTACT_US} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">email</i> &nbsp;<FormattedMessage id=\"link_contact_us\"\n              defaultMessage=\"Contact Us\" description=\"Ancor text for contacting us by email\" />\n          </a>\n          <a href={LINK_TERMS_OF_SERVICE} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">description</i> &nbsp;<FormattedMessage id=\"link_terms_of_service\"\n              defaultMessage=\"Terms of Service\" description=\"Ancor text for terms of service link\" />\n          </a>\n          <a href={LINK_PRIVACY_POLICY} className=\"flat-button\" target=\"_blank\">\n            <i className=\"material-icons\">policy</i> &nbsp;<FormattedMessage id=\"link_privacy_policy\"\n              defaultMessage=\"Privacy Policy\" description=\"Ancor text for privacy policy link\" />\n          </a>\n        </div>\n        <div className=\"hr\" />\n        <div className=\"panel-form-column\">\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_client\" defaultMessage=\"Client:\"\n              description=\"Label for a client version\" /></label>\n            {APP_NAME}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_sdk\" defaultMessage=\"SDK:\" /></label>\n            {Tinode.getLibrary()}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server\" defaultMessage=\"Server:\"\n              description=\"Label for a server version\" /></label>\n            {this.props.serverVersion}\n          </div>\n          <div className=\"panel-form-row\">\n            <label className=\"small\"><FormattedMessage id=\"label_server_address\" defaultMessage=\"Server address:\" /></label>\n            {this.props.serverAddress}\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","// Login form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport CheckBox from '../widgets/checkbox.jsx';\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport LocalStorageUtil from '../lib/local-storage.js';\n\nexport default class LoginView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: props.login,\n      password: '',\n      hostName: props.serverAddress,\n      saveToken: props.persist\n    };\n    this.handleLoginChange = this.handleLoginChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleToggleSaveToken = this.handleToggleSaveToken.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginChange(e) {\n    this.setState({login: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  handleToggleSaveToken() {\n    this.props.onPersistenceChange(!this.state.saveToken);\n    this.setState({saveToken: !this.state.saveToken});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onLogin(this.state.login.trim(), this.state.password.trim());\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n\n    return (\n      <form id=\"login-form\" onSubmit={this.handleSubmit}>\n        <FormattedMessage id=\"login_prompt\" defaultMessage=\"Login\"\n          description=\"Placeholer for username/login\">\n        {\n          (login_prompt) => <input type=\"text\" id=\"inputLogin\"\n            placeholder={login_prompt}\n            autoComplete=\"username\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"none\"\n            value={this.state.login}\n            onChange={this.handleLoginChange}\n            required autoFocus />\n        }\n        </FormattedMessage>\n        <FormattedMessage id=\"password_prompt\" defaultMessage=\"Password\"\n          description=\"Placeholder/prompt for entering password\">\n        {\n          (password_prompt) => <VisiblePassword type=\"password\" id=\"inputPassword\"\n            placeholder={password_prompt}\n            autoComplete=\"current-password\"\n            value={this.state.password}\n            onChange={this.handlePasswordChange}\n            required={true} />\n        }\n        </FormattedMessage>\n        <div className=\"panel-form-row\">\n          <CheckBox id=\"save-token\" name=\"save-token\" checked={this.state.saveToken}\n            onChange={this.handleToggleSaveToken} />\n          <label htmlFor=\"save-token\">&nbsp;\n            <FormattedMessage id=\"stay_logged_in\" defaultMessage=\"Stay logged in\"\n              description=\"Label for a checkbox\" />\n          </label>\n          <a href=\"#reset\">\n            <FormattedMessage id=\"forgot_password_link\" defaultMessage=\"Forgot password?\"\n              description=\"Link to Reset password form\" />\n          </a>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses} type=\"submit\">\n            <FormattedMessage id=\"button_sign_in\" defaultMessage=\"Sign in\"\n              description=\"Button [Sign In]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n/* END Login */\n","import React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  invalid_id: {\n    id: 'error_invalid_id',\n    defaultMessage: 'Invalid ID',\n    description: 'Error message'\n  }\n});\n\nclass NewTopicById extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      groupId: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({groupId: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.groupId) {\n      const name = this.state.groupId.trim();\n      const prefix = name.substr(0, 3);\n      if (name.length > 3 && ['usr', 'grp', 'chn'].includes(prefix)) {\n        this.props.onSubmit(name);\n      } else {\n        this.props.onError(this.props.intl.formatMessage(messages.invalid_id), 'err');\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"group_user_id_prompt\" defaultMessage=\"Group or User ID\"\n          description=\"Prompt for entering user or group ID\">{\n          (prompt) => <input type=\"text\" placeholder={prompt}\n            value={this.state.groupId} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required autoFocus />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_subscribe\" defaultMessage=\"Subscribe\"\n              description=\"Button [Subscribe]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicById);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport AvatarUpload from './avatar-upload.jsx';\nimport CheckBox from './checkbox.jsx';\nimport TagManager from './tag-manager.jsx';\n\nimport { MAX_TITLE_LENGTH } from '../config.js';\n\nexport default class NewTopicGroup extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      fn: '', // full/formatted name\n      private: '',\n      imageDataUrl: null,\n      tags: [],\n      isChannel: false\n    };\n\n    this.handleFnChange = this.handleFnChange.bind(this);\n    this.handlePrivateChange = this.handlePrivateChange.bind(this);\n    this.handleImageChanged = this.handleImageChanged.bind(this);\n    this.handleTagsChanged = this.handleTagsChanged.bind(this);\n    this.handleChannelToggle = this.handleChannelToggle.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleFnChange(e) {\n    this.setState({fn: e.target.value});\n  }\n\n  handlePrivateChange(e) {\n    this.setState({private: e.target.value});\n  }\n\n  handleImageChanged(img) {\n    this.setState({imageDataUrl: img});\n  }\n\n  handleTagsChanged(tags) {\n    this.setState({tags: tags});\n  }\n\n  handleChannelToggle() {\n    this.setState({isChannel: !this.state.isChannel});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const fn = this.state.fn.trim().substring(0, MAX_TITLE_LENGTH);\n    const comment = this.state.private.trim().substring(0, MAX_TITLE_LENGTH);\n    if (fn) {\n      this.props.onSubmit(fn, this.state.imageDataUrl, comment, this.state.tags, this.state.isChannel);\n    }\n  }\n\n  render() {\n    let submitClasses = 'primary';\n    if (this.props.disabled) {\n      submitClasses += ' disabled';\n    }\n    return (\n      <form className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <div className=\"panel-form-column\">\n            <label className=\"small\" htmlFor=\"new-topic-fn\">\n              <FormattedMessage id=\"label_topic_name\" defaultMessage=\"Name\"\n                description=\"Label for editing topic name\" />\n            </label>\n            <FormattedMessage id=\"topic_name_editing_placeholder\" defaultMessage=\"Freeform name of the group\"\n              description=\"Prompt for entering topic name\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-fn\" placeholder={placeholder}\n                value={this.state.fn} onChange={this.handleFnChange} autoFocus required />\n            }</FormattedMessage>\n            <br />\n            <label className=\"small\" htmlFor=\"new-topic-priv\">\n              <FormattedMessage id=\"label_private\" defaultMessage=\"Private comment\"\n                description=\"Label for editing 'private'\" />\n            </label>\n            <FormattedMessage id=\"private_editing_placeholder\" defaultMessage=\"Visible to you only\"\n              description=\"Placeholder for editing 'private'\">{\n              (placeholder) => <input type=\"text\" id=\"new-topic-priv\" placeholder={placeholder}\n                value={this.state.private} onChange={this.handlePrivateChange} />\n            }</FormattedMessage>\n          </div>\n          <AvatarUpload\n            onError={this.props.onError}\n            onImageChanged={this.handleImageChanged} />\n        </div>\n        <div className=\"panel-form-row\">\n          <CheckBox checked={this.state.isChannel} onChange={this.handleChannelToggle}/>&nbsp;\n          <label onClick={this.handleChannelToggle}><FormattedMessage id=\"channel_prompt\"\n            defaultMessage=\"This is a channel\"\n            description=\"Checkbox label when creating a channel\" /></label>\n        </div>\n        <FormattedMessage id=\"title_tag_manager\" defaultMessage=\"Tags (user discovery)\"\n          description=\"Section title for TagManager\">{\n          (title) => <TagManager\n            tags={this.state.tags}\n            activated={true}\n            onTagsChanged={this.handleTagsChanged}\n            tinode={this.props.tinode}\n            title={title} />\n        }</FormattedMessage>\n        <div className=\"dialog-buttons\">\n          <button className={submitClasses}>\n            <FormattedMessage id=\"button_create\" defaultMessage=\"Create\"\n              description=\"Button [Create]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nexport default class SearchContacts extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      edited: false,\n      search: ''\n    };\n\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  componentWillUnmount() {\n    if (this.state.edited) {\n      this.setState({search: '', edited: false});\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n  }\n\n  handleSearchChange(e) {\n    this.setState({search: e.target.value});\n  }\n\n  handleSearch(e) {\n    e.preventDefault();\n    var query = this.state.search.trim();\n    this.setState({edited: (query.length > 0)});\n    this.props.onSearchContacts(query.length > 0 ? query : Tinode.DEL_CHAR);\n  }\n\n  handleClear(e) {\n    e.preventDefault();\n    if (this.state.edited) {\n      this.props.onSearchContacts(Tinode.DEL_CHAR);\n    }\n    this.setState({search: '', edited: false});\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Enter') {\n      this.handleSearch(e);\n    } else if (e.key === 'Escape') {\n      this.handleClear();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <i className=\"material-icons search\">search</i>\n          <FormattedMessage id=\"search_placeholder\" defaultMessage=\"List like email:alice@example.com, tel:17025550003...\"\n            description=\"Placeholder in contacts search field\">{\n            (search_placeholder) => <input className=\"search\" type=\"text\"\n              placeholder={search_placeholder}\n              value={this.state.search} onChange={this.handleSearchChange}\n              onKeyDown={this.handleKeyDown} required autoFocus />\n          }</FormattedMessage>\n          <a href=\"#\" onClick={this.handleClear}>\n            <i className=\"material-icons\">close</i>\n          </a>\n        </div>\n      </div>\n    );\n  }\n};\n","// Create new topic and invite users or send an invite.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Tinode from 'tinode-sdk';\n\nimport ContactList from '../widgets/contact-list.jsx';\nimport NewTopicById from '../widgets/new-topic-by-id.jsx';\nimport NewTopicGroup from '../widgets/new-topic-group.jsx';\nimport SearchContacts from '../widgets/search-contacts.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\nimport { theCard } from '../lib/utils.js';\n\nconst messages = defineMessages({\n  search_for_contacts: {\n    id: \"search_for_contacts\",\n    defaultMessage: \"Use search to find contacts\",\n    description: \"Text shown in contacts view when user entered no search query.\"\n  },\n  search_no_results: {\n    id: \"search_no_results\",\n    defaultMessage: \"Search returned no results\",\n    description: \"Text shown in contacts view when query returned no results.\"\n  }\n});\n\nclass NewTopicView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tabSelected: 'p2p',\n      searchQuery: null\n    };\n\n    this.handleTabClick = this.handleTabClick.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleContactSelected = this.handleContactSelected.bind(this);\n    this.handleNewGroupSubmit = this.handleNewGroupSubmit.bind(this);\n    this.handleGroupByID = this.handleGroupByID.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.onInitFind();\n  }\n\n  handleTabClick(e) {\n    e.preventDefault();\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'tab', e.currentTarget.dataset.id));\n    this.setState({tabSelected: e.currentTarget.dataset.id});\n  }\n\n  handleSearchContacts(query) {\n    this.props.onSearchContacts(query);\n    this.setState({searchQuery: Tinode.isNullValue(query) ? null : query});\n  }\n\n  handleContactSelected(sel) {\n    if (this.state.tabSelected === 'p2p') {\n      HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n      this.props.onCreateTopic(sel);\n    }\n  }\n\n  handleNewGroupSubmit(name, dataUrl, priv, tags, isChannel) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(undefined, theCard(name, dataUrl), priv, tags, isChannel);\n  }\n\n  handleGroupByID(topicName) {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'tab'));\n    this.props.onCreateTopic(topicName);\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const no_contacts_placeholder = formatMessage(this.state.searchQuery ?\n      messages.search_no_results : messages.search_for_contacts);\n    return (\n      <div className=\"flex-column\">\n        <ul className=\"tabbar\">\n          <li className={this.state.tabSelected === \"p2p\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"p2p\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_find_user\" defaultMessage=\"find\"\n                description=\"Tab title Find\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"grp\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"grp\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_new_group\" defaultMessage=\"new group\"\n                description=\"Tab title New Group\" />\n            </a>\n          </li>\n          <li className={this.state.tabSelected === \"byid\" ? \"active\" : null}>\n            <a href=\"#\" data-id=\"byid\" onClick={this.handleTabClick}>\n              <FormattedMessage id=\"tabtitle_group_by_id\" defaultMessage=\"by id\"\n                description=\"Tab title Find topic by ID\" />\n            </a>\n          </li>\n        </ul>\n        {this.state.tabSelected === 'grp' ?\n          <NewTopicGroup\n            tinode={this.props.tinode}\n            onSubmit={this.handleNewGroupSubmit} /> :\n          this.state.tabSelected === 'byid' ?\n            <NewTopicById\n              onSubmit={this.handleGroupByID}\n              onError={this.props.onError} /> :\n            <div className=\"flex-column\">\n              <SearchContacts\n                type=\"p2p\"\n                onSearchContacts={this.handleSearchContacts} />\n              <ContactList\n                contacts={this.props.searchResults}\n                myUserId={this.props.myUserId}\n                emptyListMessage={no_contacts_placeholder}\n                showOnline={false}\n                showUnread={false}\n                showContextMenu={false}\n                onTopicSelected={this.handleContactSelected} />\n            </div>}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(NewTopicView);\n","// A password reset form.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport VisiblePassword from '../widgets/visible-password.jsx';\n\nimport HashNavigation from '../lib/navigation.js';\n\nexport default class PasswordResetView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n  }\n\n  componentDidMount() {\n    let parsed = HashNavigation.parseUrlHash(window.location.hash);\n    this.setState({token: parsed.params.token, scheme: parsed.params.scheme});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.token) {\n      this.props.onReset(this.state.scheme, this.state.password.trim(), this.state.token);\n    } else {\n      this.props.onRequest('email', this.state.email.trim());\n    }\n  }\n\n  handleEmailChange(e) {\n    this.setState({email: e.target.value});\n  }\n\n  handlePasswordChange(e) {\n    this.setState({password: e.target.value});\n  }\n\n  render() {\n    let reset = (this.state.token && this.state.scheme);\n    return (\n      <form id=\"password-reset-form\" onSubmit={this.handleSubmit}>\n        {reset ?\n          <FormattedMessage id=\"new_password_placeholder\" defaultMessage=\"Enter new password\"\n            description=\"Placeholder for entering new password\">{\n            (placeholder) => <VisiblePassword\n              placeholder={placeholder}\n              autoComplete=\"new-password\"\n              value={this.state.password}\n              required={true} autoFocus={true}\n              onChange={this.handlePasswordChange} />\n          }</FormattedMessage>\n          :\n          <>\n            <label htmlFor=\"inputEmail\">\n              <FormattedMessage id=\"label_reset_password\"\n                defaultMessage=\"Send a password reset email:\"\n                description=\"Label for password reset field\" />\n            </label>\n            <FormattedMessage id=\"credential_email_prompt\" defaultMessage=\"Your registration email\"\n              description=\"Placeholder for entering email\">{\n              (placeholder) => <input type=\"email\" id=\"inputEmail\"\n                placeholder={placeholder}\n                autoComplete=\"email\"\n                value={this.state.email}\n                onChange={this.handleEmailChange}\n                required autoFocus />\n            }</FormattedMessage>\n          </>\n        }\n        <div className=\"dialog-buttons\">\n          <button className=\"primary\" type=\"submit\">{reset ?\n            <FormattedMessage id=\"button_reset\" defaultMessage=\"Reset\" description=\"Button [Reset]\" /> :\n            <FormattedMessage id=\"button_send_request\" defaultMessage=\"Send request\"\n              description=\"Button [Send request]\" />\n          }</button>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react';\n\nimport { KNOWN_HOSTS } from '../config.js';\n\n/* Combobox for selecting host name */\n\nexport default class HostSelector extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hostName: props.serverAddress,\n      changed: false\n    };\n\n    this.handleHostNameChange = this.handleHostNameChange.bind(this);\n    this.handleEditingFinished = this.handleEditingFinished.bind(this);\n  }\n\n  handleHostNameChange(e) {\n    this.setState({hostName: e.target.value, changed: true});\n  }\n\n  handleEditingFinished() {\n    if (this.state.changed) {\n      this.setState({changed: false});\n      this.props.onServerAddressChange(this.state.hostName.trim());\n    }\n  }\n\n  render() {\n    var hostOptions = [];\n    for (let key in KNOWN_HOSTS) {\n      let item = KNOWN_HOSTS[key];\n      hostOptions.push(\n        <option key={item} value={item} />\n      );\n    }\n    return (\n      <div className=\"panel-form-row\">\n        <input type=\"search\" id=\"host-name\" placeholder={this.props.hostName} list=\"known-hosts\"\n          className=\"quoted\" value={this.state.hostName} onChange={this.handleHostNameChange}\n          onBlur={this.handleEditingFinished} required />\n        <datalist id=\"known-hosts\">\n          {hostOptions}\n        </datalist>\n      </div>\n    );\n  }\n}\n","// Tinode config panel.\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport HostSelector from '../widgets/host-selector.jsx';\n\nexport default class SettingsView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transport: props.transport || 'def',\n      serverAddress: props.serverAddress,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleTransportSelected = this.handleTransportSelected.bind(this);\n    this.handleServerAddressChange = this.handleServerAddressChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onUpdate({\n      transport: this.state.transport,\n      serverAddress: this.state.serverAddress\n    });\n  }\n\n  handleTransportSelected(e) {\n    this.setState({transport: e.currentTarget.value});\n  }\n\n  handleServerAddressChange(name) {\n    this.setState({serverAddress: name});\n  }\n\n  render() {\n    const names = {def: \"default\", ws: \"websocket\", lp: \"long polling\"};\n    const transportOptions = [];\n    ['def', 'ws', 'lp'].map((item) => {\n      const id = 'transport-' + item;\n      const name = names[item];\n      transportOptions.push(\n        <li key={item}>\n          <input type=\"radio\" id={id} name=\"transport-select\" value={item}\n            checked={this.state.transport === item}\n            onChange={this.handleTransportSelected} />\n          <label htmlFor={id}>{name}</label>\n        </li>\n      );\n    });\n\n    return (\n      <form id=\"settings-form\" className=\"panel-form\" onSubmit={this.handleSubmit}>\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_server_to_use\" defaultMessage=\"Server to use:\"\n              description=\"Label for server selector in SettingsView\" />\n          </label>\n        </div>\n        <HostSelector serverAddress={this.state.serverAddress}\n          onServerAddressChange={this.handleServerAddressChange} />\n        <div className=\"panel-form-row\">\n          <label className=\"small\">\n            <FormattedMessage id=\"label_wire_transport\" defaultMessage=\"Wire transport:\"\n              description=\"Label for wire transport selection in SettingsView\" />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n          <ul className=\"quoted\">\n            {transportOptions}\n          </ul>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button type=\"submit\" className=\"primary\">\n            <FormattedMessage id=\"button_update\" defaultMessage=\"Update\"\n              description=\"Button [Update]\" />\n          </button>\n        </div>\n      </form>\n    );\n  }\n};\n","// ValidationView: panel for confirming credentials, like email or phone.\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  phone: {\n    id: 'phone_dative',\n    defaultMessage: 'phone',\n    description: \"Dative case of 'phone', i.e. 'phone' in 'by phone'\",\n  },\n  email: {\n    id: 'email_dative',\n    defaultMessage: 'email',\n    description: \"Dative case of 'email', i.e. 'email' in 'by email'\",\n  }\n});\n\nclass ValidationView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      code: props.credCode || ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({code: e.target.value});\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit(e);\n    } else if (e.key == 'Escape') {\n      this.handleCancel(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.code && this.state.code.trim()) {\n      this.props.onSubmit(this.props.credMethod, this.state.code.trim());\n    }\n  }\n\n  handleCancel(e) {\n    e.preventDefault();\n    this.props.onCancel();\n  }\n\n\n  render() {\n    const { formatMessage } = this.props.intl;\n    const methods = {'email': formatMessage(messages.email), 'tel': formatMessage(messages.phone)};\n    let method = methods[this.props.credMethod] || this.props.credMethod;\n    return (\n      <div className=\"panel-form\">\n        <div className=\"panel-form-row\">\n          <label className=\"small\" htmlFor=\"enter-confirmation-code\">\n            <FormattedMessage id=\"enter_confirmation_code_prompt\"\n              defaultMessage=\"Enter confirmation code sent to you by {method}:\"\n              description=\"Request to enter confirmation code\"\n              values={{method: method}} />\n          </label>\n        </div>\n        <div className=\"panel-form-row\">\n        <FormattedMessage id=\"numeric_confirmation_code_prompt\"\n          defaultMessage=\"Numbers only\" description=\"Prompt for numeric conformation code\">{\n          (numbers_only) => <input type=\"text\" id=\"enter-confirmation-code\"\n            placeholder={numbers_only}\n            value={this.state.code} onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress} required />\n        }</FormattedMessage>\n        </div>\n        <div className=\"dialog-buttons\">\n          <button className=\"primary\" onClick={this.handleSubmit}>\n            <FormattedMessage id=\"button_confirm\" defaultMessage=\"Confirm\" description=\"Button [Confirm]\" />\n          </button>\n          <button className=\"secondary\" onClick={this.handleCancel}>\n            <FormattedMessage id=\"button_cancel\" defaultMessage=\"Cancel\" description=\"Button [Cancel]\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(ValidationView);\n","import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport ErrorPanel from '../widgets/error-panel.jsx';\nimport LoadSpinner from '../widgets/load-spinner.jsx';\nimport SideNavbar from '../widgets/side-navbar.jsx';\n\nimport ContactsView from './contacts-view.jsx';\nimport CreateAccountView from './create-account-view.jsx';\nimport EditAccountView from './edit-account-view.jsx';\nimport AccGeneralView from './acc-general-view.jsx';\nimport AccNotificationsView from './acc-notifications-view.jsx';\nimport AccSecurityView from './acc-security-view.jsx';\nimport AccSupportView from './acc-support-view.jsx';\nimport LoginView from './login-view.jsx';\nimport NewTopicView from './new-topic-view.jsx';\nimport PasswordResetView from './password-reset-view.jsx';\nimport SettingsView from './settings-view.jsx';\nimport ValidationView from './validation-view.jsx';\n\n// Panel titles for translation.\nconst messages = defineMessages({\n  login: {\n    id: 'sidepanel_title_login',\n    description: 'Sidepanel title for LoginView.',\n    defaultMessage: 'Sign In'\n  },\n  register: {\n    id: 'sidepanel_title_register',\n    description: 'Sidepanel title for CreateAccountView.',\n    defaultMessage: 'Create Account'\n  },\n  settings: {\n    id: 'sidepanel_title_settings',\n    description: 'Sidepanel title for SettingsView.',\n    defaultMessage: 'Settings'\n  },\n  edit: {\n    id: 'sidepanel_title_account_settings',\n    description: 'Sidepanel title for EditAccountView.',\n    defaultMessage: 'Account Settings'\n  },\n  general: {\n    id: 'sidepanel_title_acc_general',\n    description: 'Sidepanel title for AccGeneralView.',\n    defaultMessage: 'General'\n  },\n  security: {\n    id: 'sidepanel_title_acc_security',\n    description: 'Sidepanel title for AccSecurityView.',\n    defaultMessage: 'Security'\n  },\n  notif: {\n    id: 'sidepanel_title_acc_notifications',\n    description: 'Sidepanel title for AccNotificationsView.',\n    defaultMessage: 'Notifications'\n  },\n  support: {\n    id: 'sidepanel_title_acc_support',\n    description: 'Sidepanel title for AccSupportView.',\n    defaultMessage: 'Support'\n  },\n  newtpk: {\n    id: 'sidepanel_title_newtpk',\n    description: 'Sidepanel title for NewTopicView.',\n    defaultMessage: 'Start New Chat'\n  },\n  cred: {\n    id: 'sidepanel_title_cred',\n    description: 'Sidepanel title for ValidationView.',\n    defaultMessage: 'Confirm Credentials'\n  },\n  reset: {\n    id: 'sidepanel_title_reset',\n    description: 'Sidepanel title for PasswordResetView.',\n    defaultMessage: 'Reset Password'\n  },\n  archive: {\n    id: 'sidepanel_title_archive',\n    description: 'Sidepanel title for ContactsView-Archive.',\n    defaultMessage: 'Archived Chats'\n  },\n  blocked: {\n    id: 'sidepanel_title_blocked',\n    description: 'Sidepanel title for ContactsView-Blocked.',\n    defaultMessage: 'Blocked Chats'\n  }\n});\n\nclass SidepanelView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNewTopic = this.handleNewTopic.bind(this);\n  }\n\n  handleNewTopic() {\n    this.props.onBasicNavigate('newtpk');\n  }\n\n  render() {\n    const {formatMessage} = this.props.intl;\n    const view = this.props.state || (this.props.myUserId ? 'contacts' : 'login');\n\n    let title, avatar;\n    if (view == 'contacts') {\n      title = this.props.title;\n      avatar = this.props.avatar ? this.props.avatar : true;\n    } else {\n      title = formatMessage(messages[view]);\n      avatar = false;\n    }\n\n    let onCancel;\n    if (['login', 'contacts'].indexOf(view) == -1) {\n      onCancel = this.props.onCancel;\n    }\n\n    return (\n      <div id=\"sidepanel\" className={this.props.hideSelf ? 'nodisplay' : null}>\n        <SideNavbar\n          state={view}\n          title={title}\n          avatar={avatar}\n          myUserId={this.props.myUserId}\n          onSignUp={this.props.onSignUp}\n          onSettings={this.props.onSettings}\n          onNewTopic={this.handleNewTopic}\n          onCancel={onCancel} />\n\n        <ErrorPanel\n          level={this.props.errorLevel}\n          text={this.props.errorText}\n          action={this.props.errorAction}\n          actionText={this.props.errorActionText}\n          onClearError={this.props.onError} />\n\n        <LoadSpinner show={this.props.loadSpinnerVisible} />\n\n        {view === 'login' ?\n          <LoginView\n            login={this.props.login}\n            disabled={this.props.loginDisabled}\n            persist={this.props.persist}\n            onLogin={this.props.onLoginRequest}\n            onPersistenceChange={this.props.onPersistenceChange} /> :\n\n          view === 'register' ?\n          <CreateAccountView\n            onCreateAccount={this.props.onCreateAccount}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'settings' ?\n          <SettingsView\n            transport={this.props.transport}\n            serverAddress={this.props.serverAddress}\n            onCancel={this.props.onCancel}\n            onUpdate={this.props.onGlobalSettings} /> :\n\n          view === 'edit' ?\n          <EditAccountView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            onBasicNavigate={this.props.onBasicNavigate} /> :\n\n          view === 'general' ?\n          <AccGeneralView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            onUpdateAccount={this.props.onUpdateAccount}\n            onUpdateTags={this.props.onUpdateAccountTags}\n            onCredAdd={this.props.onCredAdd}\n            onCredDelete={this.props.onCredDelete}\n            onCredConfirm={this.props.onCredConfirm}\n            onBasicNavigate={this.props.onBasicNavigate}\n            onError={this.props.onError} /> :\n\n          view === 'notif' ?\n          <AccNotificationsView\n            messageSounds={this.props.messageSounds}\n            desktopAlerts={this.props.desktopAlerts}\n            desktopAlertsEnabled={this.props.desktopAlertsEnabled}\n            incognitoMode={this.props.incognitoMode}\n            onTogglePushNotifications={this.props.onTogglePushNotifications}\n            onToggleMessageSounds={this.props.onToggleMessageSounds}\n            onToggleIncognitoMode={this.props.onToggleIncognitoMode} /> :\n\n          view === 'security' ?\n          <AccSecurityView\n            tinode={this.props.tinode}\n            onUpdateAccount={this.props.onUpdateAccount}\n            onLogout={this.props.onLogout}\n            onDeleteAccount={this.props.onDeleteAccount}\n            onShowAlert={this.props.onShowAlert}\n            onShowBlocked={this.props.onShowBlocked} /> :\n\n          view === 'support' ?\n          <AccSupportView\n            serverAddress={this.props.serverAddress}\n            serverVersion={this.props.serverVersion} /> :\n\n          (view === 'contacts' || view == 'archive' || view == 'blocked') ?\n          <ContactsView\n            tinode={this.props.tinode}\n            myUserId={this.props.myUserId}\n            connected={this.props.connected}\n            topicSelected={this.props.topicSelected}\n            archive={view == 'archive'}\n            blocked={view == 'blocked'}\n            chatList={this.props.chatList}\n            showContextMenu={this.props.showContextMenu}\n            onTopicSelected={this.props.onTopicSelected}\n            onShowArchive={this.props.onShowArchive} /> :\n\n          view === 'newtpk' ?\n          <NewTopicView\n            tinode={this.props.tinode}\n            searchResults={this.props.searchResults}\n            onInitFind={this.props.onInitFind}\n            onSearchContacts={this.props.onSearchContacts}\n            onCreateTopic={this.props.onCreateTopic}\n            onError={this.props.onError} /> :\n\n          view === 'cred' ?\n          <ValidationView\n            credCode={this.props.credCode}\n            credMethod={this.props.credMethod}\n            onSubmit={this.props.onValidateCredentials}\n            onCancel={this.props.onCancel}\n            onError={this.props.onError} /> :\n\n          view === 'reset' ?\n          <PasswordResetView\n            onRequest={this.props.onPasswordResetRequest}\n            onReset={this.props.onResetPassword} /> :\n          null}\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(SidepanelView);\n","import { KNOWN_HOSTS, DEFAULT_HOST } from '../config.js';\n\n// Detect server address from the URL\nexport function detectServerAddress() {\n  let host = DEFAULT_HOST;\n  if (typeof window.location == 'object') {\n    if (window.location.protocol == 'file:' || window.location.hostname == 'localhost') {\n      host = KNOWN_HOSTS.local;\n    } else if (window.location.hostname) {\n      host = window.location.hostname + (window.location.port ? ':' + window.location.port : '');\n    }\n  }\n  return host;\n}\n\n// Detect if the page is served over HTTPS.\nexport function isSecureConnection() {\n  if (typeof window.location == 'object') {\n    return window.location.protocol == 'https:';\n  }\n  return false;\n}\n\nexport function isLocalHost() {\n  if (typeof window.location == 'object') {\n    return window.location.hostname == 'localhost';\n  }\n  return false;\n}\n","// The top-level class to hold all functionality together.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport * as firebase from 'firebase/app';\nimport 'firebase/messaging';\n\nimport Tinode from 'tinode-sdk';\n\nimport Alert from '../widgets/alert.jsx';\nimport ContextMenu from '../widgets/context-menu.jsx';\n\nimport InfoView from './info-view.jsx';\nimport MessagesView from './messages-view.jsx';\nimport SidepanelView from './sidepanel-view.jsx';\n\nimport { API_KEY, APP_NAME, DEFAULT_P2P_ACCESS_MODE, LOGGING_ENABLED,\n  MEDIA_BREAKPOINT, RECEIVED_DELAY } from '../config.js';\nimport { PACKAGE_VERSION } from '../version.js';\nimport { base64ReEncode, makeImageDataUrl } from '../lib/blob-helpers.js';\nimport { detectServerAddress, isLocalHost, isSecureConnection } from '../lib/host-name.js';\nimport LocalStorageUtil from '../lib/local-storage.js';\nimport HashNavigation from '../lib/navigation.js';\nimport { secondsToTime } from '../lib/strformat.js'\nimport { updateFavicon } from '../lib/utils.js';\n\n// Sound to play on message received.\nconst POP_SOUND = new Audio('audio/msg.mp3');\n\nconst messages = defineMessages({\n  reconnect_countdown: {\n    id: 'reconnect_countdown',\n    defaultMessage: 'Disconnected. Reconnecting in {seconds}…',\n    description: 'Message shown when an app update is available.'\n  },\n  reconnect_now: {\n    id: 'reconnect_now',\n    defaultMessage: 'Try now',\n    description: 'Prompt for reconnecting now'\n  },\n  push_init_failed: {\n    id: 'push_init_failed',\n    defaultMessage: 'Failed to initialize push notifications',\n    description: 'Error message when push notifications have failed to initialize.'\n  },\n  invalid_security_token: {\n    id: 'invalid_security_token',\n    defaultMessage: 'Invalid security token',\n    description: 'Error message when resetting password.'\n  },\n  no_connection: {\n    id: 'no_connection',\n    defaultMessage: 'No connection',\n    description: 'Warning that the user is offline.'\n  },\n  code_doesnot_match: {\n    id: 'code_doesnot_match',\n    defaultMessage: 'Code does not match',\n    description: 'Error message when the credential validation code is incorrect.'\n  },\n  menu_item_info: {\n    id: 'menu_item_info',\n    defaultMessage: 'Info',\n    description: 'Show extended topic information'\n  }\n});\n\nclass TinodeWeb extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = this.getBlankState();\n\n    this.handleResize = this.handleResize.bind(this);\n    this.handleHashRoute = this.handleHashRoute.bind(this);\n    this.handleOnline = this.handleOnline.bind(this);\n    this.checkForAppUpdate = this.checkForAppUpdate.bind(this);\n    this.handleVisibilityEvent = this.handleVisibilityEvent.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.handleLoginRequest = this.handleLoginRequest.bind(this);\n    this.handlePersistenceChange = this.handlePersistenceChange.bind(this);\n    this.handleConnected = this.handleConnected.bind(this);\n    this.handleAutoreconnectIteration = this.handleAutoreconnectIteration.bind(this);\n    this.doLogin = this.doLogin.bind(this);\n    this.handleCredentialsRequest = this.handleCredentialsRequest.bind(this);\n    this.handleLoginSuccessful = this.handleLoginSuccessful.bind(this);\n    this.handleDisconnect = this.handleDisconnect.bind(this);\n    this.tnMeMetaDesc = this.tnMeMetaDesc.bind(this);\n    this.tnMeContactUpdate = this.tnMeContactUpdate.bind(this);\n    this.tnMeSubsUpdated = this.tnMeSubsUpdated.bind(this);\n    this.resetContactList = this.resetContactList.bind(this);\n    this.tnData = this.tnData.bind(this);\n    this.tnInitFind = this.tnInitFind.bind(this);\n    this.tnFndSubsUpdated = this.tnFndSubsUpdated.bind(this);\n    this.handleSearchContacts = this.handleSearchContacts.bind(this);\n    this.handleTopicSelected = this.handleTopicSelected.bind(this);\n    this.handleHideMessagesView = this.handleHideMessagesView.bind(this);\n    this.handleSendMessage = this.handleSendMessage.bind(this);\n    this.handleNewChatInvitation = this.handleNewChatInvitation.bind(this);\n    this.handleNewAccount = this.handleNewAccount.bind(this);\n    this.handleNewAccountRequest = this.handleNewAccountRequest.bind(this);\n    this.handleUpdateAccountRequest = this.handleUpdateAccountRequest.bind(this);\n    this.handleUpdateAccountTagsRequest = this.handleUpdateAccountTagsRequest.bind(this);\n    this.handleToggleIncognitoMode = this.handleToggleIncognitoMode.bind(this);\n    this.handleSettings = this.handleSettings.bind(this);\n    this.handleGlobalSettings = this.handleGlobalSettings.bind(this);\n    this.handleShowArchive = this.handleShowArchive.bind(this);\n    this.handleShowBlocked = this.handleShowBlocked.bind(this);\n    this.handleToggleMessageSounds = this.handleToggleMessageSounds.bind(this);\n    this.handleCredAdd = this.handleCredAdd.bind(this);\n    this.handleCredDelete = this.handleCredDelete.bind(this);\n    this.handleCredConfirm = this.handleCredConfirm.bind(this);\n    this.initFCMessaging = this.initFCMessaging.bind(this);\n    this.togglePushToken = this.togglePushToken.bind(this);\n    this.requestPushToken = this.requestPushToken.bind(this);\n    this.handlePushMessage = this.handlePushMessage.bind(this);\n    this.handleSidepanelCancel = this.handleSidepanelCancel.bind(this);\n    this.handleStartTopicRequest = this.handleStartTopicRequest.bind(this);\n    this.handleNewTopicCreated = this.handleNewTopicCreated.bind(this);\n    this.handleTopicUpdateRequest = this.handleTopicUpdateRequest.bind(this);\n    this.handleChangePermissions = this.handleChangePermissions.bind(this);\n    this.handleTagsUpdated = this.handleTagsUpdated.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleDeleteAccount = this.handleDeleteAccount.bind(this);\n    this.handleDeleteMessagesRequest = this.handleDeleteMessagesRequest.bind(this);\n    this.handleLeaveUnsubRequest = this.handleLeaveUnsubRequest.bind(this);\n    this.handleBlockTopicRequest = this.handleBlockTopicRequest.bind(this);\n    this.handleReportTopic = this.handleReportTopic.bind(this);\n    this.handleShowContextMenu = this.handleShowContextMenu.bind(this);\n    this.defaultTopicContextMenu = this.defaultTopicContextMenu.bind(this);\n    this.handleHideContextMenu = this.handleHideContextMenu.bind(this);\n    this.handleShowAlert = this.handleShowAlert.bind(this);\n    this.handleShowInfoView = this.handleShowInfoView.bind(this);\n    this.handleHideInfoView = this.handleHideInfoView.bind(this);\n    this.handleMemberUpdateRequest = this.handleMemberUpdateRequest.bind(this);\n    this.handleValidateCredentialsRequest = this.handleValidateCredentialsRequest.bind(this);\n    this.handlePasswordResetRequest = this.handlePasswordResetRequest.bind(this);\n    this.handleResetPassword = this.handleResetPassword.bind(this);\n    this.handleContextMenuAction = this.handleContextMenuAction.bind(this);\n  }\n\n  getBlankState() {\n    const settings = LocalStorageUtil.getObject('settings') || {};\n    const persist = !!LocalStorageUtil.getObject('keep-logged-in');\n\n    return {\n      connected: false,\n      // Connected and subscribed to 'me'\n      ready: false,\n      // Try to re-login on new connection.\n      autoLogin: false,\n      transport: settings.transport || null,\n      serverAddress: settings.serverAddress || detectServerAddress(),\n      serverVersion: \"no connection\",\n      // \"On\" is the default, so saving the \"off\" state.\n      messageSounds: !settings.messageSoundsOff,\n      incognitoMode: false,\n      desktopAlerts: persist && settings.desktopAlerts,\n      desktopAlertsEnabled: (isSecureConnection() || isLocalHost()) &&\n        (typeof firebase != 'undefined') && (typeof navigator != 'undefined') &&\n        (typeof FIREBASE_INIT != 'undefined'),\n      firebaseToken: persist ? LocalStorageUtil.getObject('firebase-token') : null,\n\n      applicationVisible: !document.hidden,\n\n      errorText: '',\n      errorLevel: null,\n      errorAction: undefined,\n      errorActionText: null,\n\n      sidePanelSelected: 'login',\n      sidePanelTitle: null,\n      sidePanelAvatar: null,\n      loadSpinnerVisible: false,\n\n      login: '',\n      password: '',\n      persist: persist,\n      myUserId: null,\n      liveConnection: navigator.onLine,\n      topicSelected: '',\n      topicSelectedOnline: false,\n      topicSelectedAcs: null,\n      newTopicParams: null,\n      loginDisabled: false,\n      displayMobile: (window.innerWidth <= MEDIA_BREAKPOINT),\n      showInfoPanel: false,\n      mobilePanel: 'sidepanel',\n\n      contextMenuVisible: false,\n      contextMenuBounds: null,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuItems: [],\n\n      // Modal alert dialog.\n      alertVisible: false,\n      alertParams: {},\n\n      // Chats as shown in the ContactsView\n      chatList: [],\n      // Contacts returned by a search query.\n      searchResults: [],\n      // Merged results of a search query and p2p chats.\n      searchableContacts: [],\n      credMethod: undefined,\n      credCode: undefined,\n      // Topic to go to after login.\n      requestedTopic: undefined\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleResize);\n    window.addEventListener('online', (e) => { this.handleOnline(true); });\n    window.addEventListener('offline', (e) => { this.handleOnline(false); });\n    window.addEventListener('hashchange', this.handleHashRoute);\n    // Process background notifications from the service worker.\n    const serviceWorkerChannel = new BroadcastChannel('tinode-sw');\n    serviceWorkerChannel.addEventListener('message', this.handlePushMessage);\n\n    // Window/tab visible or invisible for pausing timers.\n    document.addEventListener('visibilitychange', this.handleVisibilityEvent);\n\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n\n    new Promise((resolve, reject) => {\n      this.tinode = TinodeWeb.tnSetup(this.state.serverAddress, this.state.transport,\n        this.props.intl.locale, this.state.persist, resolve);\n      this.tinode.onConnect = this.handleConnected;\n      this.tinode.onDisconnect = this.handleDisconnect;\n      this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n    }).then(() => {\n      // Initialize desktop alerts.\n      if (this.state.desktopAlertsEnabled) {\n        this.initFCMessaging().then(() => {\n          if (this.state.desktopAlerts) {\n            if (!this.state.firebaseToken) {\n              this.togglePushToken(true);\n            } else {\n              this.tinode.setDeviceToken(this.state.firebaseToken);\n            }\n          }\n        }).catch(() => {\n          // do nothing: handled earlier.\n          // catch needed to pervent unnecessary logging of error.\n        });\n      }\n\n      // Parse and save the hash navigation params.\n      const parsedNav = HashNavigation.parseUrlHash(window.location.hash);\n\n      // Read contacts from cache.\n      this.resetContactList();\n\n      const token = this.state.persist ? LocalStorageUtil.getObject('auth-token') : undefined;\n      if (token) {\n        this.setState({autoLogin: true});\n\n        // When reading from storage, date is returned as string.\n        token.expires = new Date(token.expires);\n        this.tinode.setAuthToken(token);\n        this.tinode.connect().catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n      }\n\n      // Save possible topic name and navigate to blank state.\n      this.setState({requestedTopic: parsedNav.path[1]});\n      HashNavigation.navigateTo('');\n\n      this.readTimer = null;\n      this.readTimerCallback = null;\n\n      this.handleHashRoute();\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n    window.removeEventListener('hashchange', this.handleHashRoute);\n    document.removeEventListener('visibilitychange', this.handleVisibilityEvent);\n  }\n\n  // Setup transport (usually websocket) and server address. This will terminate connection with the server.\n  static tnSetup(serverAddress, transport, locale, persistentCache, onSetupCompleted) {\n    const tinode = new Tinode({appName: APP_NAME, host: serverAddress, apiKey: API_KEY, transport: transport,\n      secure: isSecureConnection(), persist: persistentCache}, onSetupCompleted);\n    tinode.setHumanLanguage(locale);\n    tinode.enableLogging(LOGGING_ENABLED, true);\n    return tinode;\n  }\n\n  // Notifiy Tinode that a push message was received from the server.\n  handlePushMessage(data) {\n    if (data.what == 'msg' && Tinode.isChannelTopicName(data.topic)) {\n      // The last argument is a fake user Id: otherwise the update is seen as one from the current user.\n      this.tinode.oobNotification(data.topic, data.seq, 'fake-uid');\n    }\n  }\n\n  initFCMessaging() {\n    const {formatMessage, locale} = this.props.intl;\n    const onError = (msg, err) => {\n      console.log(msg, err);\n      this.handleError(formatMessage(messages.push_init_failed), 'err');\n      this.setState({desktopAlertsEnabled: false});\n    }\n\n    try {\n      this.fbPush = firebase.initializeApp(FIREBASE_INIT, APP_NAME).messaging();\n      this.fbPush.usePublicVapidKey(FIREBASE_INIT.messagingVapidKey);\n\n      return navigator.serviceWorker.register('/service-worker.js').then((reg) => {\n        this.checkForAppUpdate(reg);\n        this.fbPush.useServiceWorker(reg);\n        reg.active.postMessage(JSON.stringify({locale: locale, version: PACKAGE_VERSION}));\n\n        // Google could not be bothered to mention that onTokenRefresh is never called.\n        this.fbPush.onTokenRefresh(() => {\n          this.requestPushToken();\n        });\n\n        // Handhe FCM pushes\n        // (a) for channels always,\n        // (b) pushes when the app is in foreground but has not focus.\n        this.fbPush.onMessage(payload => { this.handlePushMessage(payload.data); });\n\n        return reg;\n      }).catch((err) => {\n        // registration failed :(\n        onError(\"Failed to register service worker:\", err);\n        return Promise.reject(err);\n      });\n    } catch (err) {\n      onError(\"Failed to initialize push notifications\", err);\n      return Promise.reject(err);\n    }\n  }\n\n  handleResize() {\n    const mobile = document.documentElement.clientWidth <= MEDIA_BREAKPOINT;\n    this.setState({\n      viewportWidth: document.documentElement.clientWidth,\n      viewportHeight: document.documentElement.clientHeight\n    });\n    if (this.state.displayMobile != mobile) {\n      this.setState({displayMobile: mobile});\n    }\n  }\n\n  // Check if a newer version of TinodeWeb app is available at the server.\n  checkForAppUpdate(reg) {\n    reg.onupdatefound = () => {\n      const installingWorker = reg.installing;\n      installingWorker.onstatechange = () => {\n        if (installingWorker.state == 'installed' && navigator.serviceWorker.controller) {\n          const msg = <>\n            <FormattedMessage id=\"update_available\"\n              defaultMessage=\"Update available.\"\n              description=\"Message shown when an app update is available.\" /> <a href=\"\">\n              <FormattedMessage id=\"reload_update\"\n                defaultMessage=\"Reload\"\n                description=\"Call to action to reload application when update is available.\" />\n            </a>.</>;\n          this.handleError(msg, 'info');\n        }\n      }\n    }\n  }\n\n  // Handle for hashchange event: display appropriate panels.\n  handleHashRoute() {\n    const hash = HashNavigation.parseUrlHash(window.location.hash);\n    if (hash.path && hash.path.length > 0) {\n      // Left-side panel selector.\n      if (['register','settings','edit','notif','security','support','general',\n          'cred','reset','newtpk','archive','blocked','contacts',''].includes(hash.path[0])) {\n        this.setState({sidePanelSelected: hash.path[0]});\n      } else {\n        console.log(\"Unknown sidepanel view\", hash.path[0]);\n      }\n\n      // Topic for MessagesView selector.\n      const topicName = hash.path[1];\n      if (Tinode.topicType(topicName) && topicName != this.state.topicSelected) {\n          const newState = {\n            topicSelected: topicName\n          };\n          const acs = this.tinode.getTopicAccessMode(topicName);\n          if (acs) {\n            newState.topicSelectedAcs = acs;\n          }\n          this.setState(newState);\n      }\n    } else {\n      // Empty hashpath\n      this.setState({sidePanelSelected: ''});\n    }\n\n    // Save validation credentials, if available.\n    if (hash.params.method) {\n      this.setState({ credMethod: hash.params.method });\n    }\n    if (hash.params.code) {\n      this.setState({ credCode: hash.params.code });\n    }\n\n    // Additional parameters of panels.\n    this.setState({\n      showInfoPanel: hash.params.info,\n      newTopicTabSelected: hash.params.tab\n    });\n  }\n\n  handleOnline(online) {\n    if (online) {\n      this.handleError();\n      clearInterval(this.reconnectCountdown);\n      this.tinode.reconnect();\n    } else {\n      this.handleError(this.props.intl.formatMessage(messages.no_connection), 'warn');\n    }\n    this.setState({liveConnection: online});\n  }\n\n  handleVisibilityEvent() {\n    this.setState({applicationVisible: !document.hidden});\n  }\n\n  handleError(err, level, action, actionText) {\n    this.setState({errorText: err, errorLevel: level, errorAction: action, errorActionText: actionText});\n  }\n\n  // User clicked Login button in the side panel.\n  handleLoginRequest(login, password) {\n    this.setState({\n      loginDisabled: true,\n      login: login,\n      password: password,\n      loadSpinnerVisible: true,\n      autoLogin: true\n    });\n    this.handleError('', null);\n\n    if (this.tinode.isConnected()) {\n      this.doLogin(login, password, {meth: this.state.credMethod, resp: this.state.credCode});\n    } else {\n      this.tinode.connect().catch((err) => {\n        // Socket error\n        this.setState({loginDisabled: false, autoLogin: false, loadSpinnerVisible: false});\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // Enable or disable saving the password and IndexedDB.\n  handlePersistenceChange(persist) {\n    if (persist) {\n      this.tinode.initStorage().then(() => {\n        console.log(\"storage initialized\");\n        LocalStorageUtil.setObject('keep-logged-in', true);\n        this.setState({persist: true});\n      });\n    } else {\n      this.tinode.clearStorage().then(() => {\n        console.log(\"storage cleared\");\n        LocalStorageUtil.setObject('keep-logged-in', false);\n        this.setState({persist: false});\n      });\n    }\n  }\n\n  // Connection succeeded.\n  handleConnected() {\n    // Just to be sure.\n    clearInterval(this.reconnectCountdown);\n    this.handleError();\n\n    const params = this.tinode.getServerInfo();\n    this.setState({\n      serverVersion: params.ver + ' ' + (params.build ? params.build : 'none')\n    });\n\n    if (this.state.autoLogin) {\n      this.doLogin(this.state.login, this.state.password, {meth: this.state.credMethod, resp: this.state.credCode});\n    }\n  }\n\n  // Called for each auto-reconnect iteration.\n  handleAutoreconnectIteration(sec, prom) {\n    clearInterval(this.reconnectCountdown);\n\n    if (sec < 0) {\n      // Clear error\n      this.handleError();\n      return;\n    }\n\n    if (prom) {\n      // Reconnecting now\n      prom.then(() => {\n        // Reconnected: clear error\n        this.handleError();\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n      return;\n    }\n\n    const {formatMessage} = this.props.intl;\n    let count = sec / 1000;\n    count = count | count;\n    this.reconnectCountdown = setInterval(() => {\n      const timeLeft = (count > 99) ? secondsToTime(count) : count;\n      this.handleError(\n        formatMessage(messages.reconnect_countdown, {seconds: timeLeft}),\n        'warn',\n        () => {\n          clearInterval(this.reconnectCountdown);\n          this.tinode.reconnect();\n        },\n        formatMessage(messages.reconnect_now)\n      );\n      count -= 1;\n    }, 1000);\n  }\n\n  // Connection lost\n  handleDisconnect(err) {\n    this.setState({\n      connected: false,\n      ready: false,\n      topicSelectedOnline: false,\n      errorText: err && err.message ? err.message : \"Disconnected\",\n      errorLevel: err && err.message ? 'err' : 'warn',\n      loginDisabled: false,\n      contextMenuVisible: false,\n      serverVersion: \"no connection\"\n    });\n  }\n\n  doLogin(login, password, cred) {\n    if (this.tinode.isAuthenticated()) {\n      // Already logged in. Go to default screen.\n      HashNavigation.navigateTo('');\n      return;\n    }\n    // Sanitize and package credentail.\n    cred = Tinode.credential(cred);\n    // Try to login with login/password. If they are not available, try token. If no token, ask for login/password.\n    let promise = null;\n    const token = this.tinode.getAuthToken();\n    if (login && password) {\n      this.setState({password: null});\n      promise = this.tinode.loginBasic(login, password, cred);\n    } else if (token) {\n      promise = this.tinode.loginToken(token.token, cred);\n    }\n\n    if (promise) {\n      promise.then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text === 'validate credentials') {\n          this.setState({loadSpinnerVisible: false});\n          if (cred) {\n            this.handleError(this.props.intl.formatMessage(messages.code_doesnot_match), 'warn');\n          }\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful();\n        }\n      }).catch((err) => {\n        // Login failed, report error.\n        this.setState({\n          loginDisabled: false,\n          credMethod: undefined,\n          credCode: undefined,\n          loadSpinnerVisible: false,\n          autoLogin: false\n        });\n        this.handleError(err.message, 'err');\n        localStorage.removeItem('auth-token');\n        HashNavigation.navigateTo('');\n      });\n    } else {\n      // No login credentials provided.\n      // Make sure we are on the login page.\n      HashNavigation.navigateTo('');\n      this.setState({loginDisabled: false});\n    }\n  }\n\n  handleCredentialsRequest(params) {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    parsed.path[0] = 'cred';\n    parsed.params['method'] = params.cred[0];\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n  }\n\n  handleLoginSuccessful() {\n    this.handleError();\n\n    // Refresh authentication token.\n    if (LocalStorageUtil.getObject('keep-logged-in')) {\n      LocalStorageUtil.setObject('auth-token', this.tinode.getAuthToken());\n    }\n\n    const goToTopic = this.state.requestedTopic;\n    // Logged in fine, subscribe to 'me' attaching callbacks from the contacts view.\n    const me = this.tinode.getMeTopic();\n    me.onMetaDesc = this.tnMeMetaDesc;\n    me.onContactUpdate = this.tnMeContactUpdate;\n    me.onSubsUpdated = this.tnMeSubsUpdated;\n    this.setState({\n      connected: true,\n      credMethod: undefined,\n      credCode: undefined,\n      myUserId: this.tinode.getCurrentUserID(),\n      autoLogin: true,\n      requestedTopic: undefined,\n    });\n    // Subscribe, fetch topic desc, the list of subscriptions. Messages are not fetched.\n    me.subscribe(\n      me.startMetaQuery().\n        withLaterSub().\n        withDesc().\n        withTags().\n        withCred().\n        build()\n      ).catch((err) => {\n        this.tinode.disconnect();\n        localStorage.removeItem('auth-token');\n        this.handleError(err.message, 'err');\n        HashNavigation.navigateTo('');\n      }).finally(() => {\n        this.setState({loadSpinnerVisible: false});\n      });\n    let urlHash = HashNavigation.setUrlSidePanel(window.location.hash, 'contacts');\n    if (goToTopic) {\n      urlHash = HashNavigation.setUrlTopic(urlHash, goToTopic);\n    }\n    HashNavigation.navigateTo(urlHash);\n  }\n\n  tnMeMetaDesc(desc) {\n    if (desc) {\n      if (desc.public) {\n        this.setState({\n          sidePanelTitle: desc.public.fn,\n          sidePanelAvatar: makeImageDataUrl(desc.public.photo)\n        });\n      }\n      if (desc.acs) {\n        this.setState({\n          incognitoMode: !desc.acs.isPresencer()\n        });\n      }\n    }\n  }\n\n  // Reactions to updates to the contact list.\n  tnMeContactUpdate(what, cont) {\n    if (what == 'on' || what == 'off') {\n      this.resetContactList();\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedOnline: (what == 'on')});\n      }\n    } else if (what == 'read') {\n      this.resetContactList();\n    } else if (what == 'msg') {\n      // Check if the topic is archived. If so, don't play a sound.\n      const topic = this.tinode.getTopic(cont.topic);\n      const archived = topic && topic.isArchived();\n\n      // New message received. Maybe the message is from the current user, then unread is 0.\n      if (cont.unread > 0 && this.state.messageSounds && !archived) {\n        // Skip update if the topic is currently open, otherwise the badge will annoyingly flash.\n        if (document.hidden || this.state.topicSelected != cont.topic) {\n          POP_SOUND.play();\n        }\n      }\n      // Reorder contact list to use possibly updated 'touched'.\n      this.resetContactList();\n    } else if (what == 'recv') {\n      // Explicitly ignoring \"recv\" -- it causes no visible updates to contact list.\n    } else if (what == 'gone' || what == 'unsub') {\n      // Topic deleted or user unsubscribed. Remove topic from view.\n      // If the currently selected topic is gone, clear the selection.\n      if (this.state.topicSelected == cont.topic) {\n        this.handleTopicSelected(null);\n      }\n      // Redraw without the deleted topic.\n      this.resetContactList();\n    } else if (what == 'acs') {\n      // Permissions changed. If it's for the currently selected topic,\n      // update the views.\n      if (this.state.topicSelected == cont.topic) {\n        this.setState({topicSelectedAcs: cont.acs});\n      }\n    } else if (what == 'del') {\n      // TODO: messages deleted (hard or soft) -- update pill counter.\n    } else if (what == 'upd') {\n      // upd - handled by the SDK. Explicitly ignoring here.\n    } else {\n      // TODO(gene): handle other types of notifications:\n      // * ua -- user agent changes (maybe display a pictogram for mobile/desktop).\n      console.log(\"Unsupported (yet) presence update:\" + what + \" in: \" + cont.topic);\n    }\n  }\n\n  tnMeSubsUpdated(unused) {\n    this.resetContactList();\n  }\n\n  // Merge search results and contact list to create a single flat\n  // list of known contacts for GroupManager to use.\n  static prepareSearchableContacts(chatList, foundContacts) {\n    const merged = {};\n\n    // For chatList topics merge only p2p topics and convert them to the\n    // same format as foundContacts.\n    for (const c of chatList) {\n      if (Tinode.isP2PTopicName(c.topic)) {\n          merged[c.topic] = {\n            user: c.topic,\n            updated: c.updated,\n            public: c.public,\n            private: c.private,\n            acs: c.acs\n          };\n      }\n    }\n\n    // Add all foundCountacts if they have not been added already.\n    for (const c of foundContacts) {\n      if (!merged[c.user]) {\n        merged[c.user] = c;\n      }\n    }\n\n    return Object.values(merged);\n  }\n\n  resetContactList() {\n    const newState = {\n      chatList: []\n    };\n\n    if (!this.state.ready) {\n      newState.ready = true;\n    }\n\n    this.tinode.getMeTopic().contacts((c) => {\n      if (!c.topic && !c.user) {\n        // Contacts expect c.topic to be set.\n        c.topic = c.name;\n      }\n\n      newState.chatList.push(c);\n      if (this.state.topicSelected == c.topic) {\n        newState.topicSelectedOnline = c.online;\n        newState.topicSelectedAcs = c.acs;\n      }\n    });\n    // Merge search results and chat list.\n    newState.searchableContacts = TinodeWeb.prepareSearchableContacts(newState.chatList, this.state.searchResults);\n    this.setState(newState);\n  }\n\n  // Sending \"received\" notifications\n  tnData(data) {\n    const topic = this.tinode.getTopic(data.topic);\n    if (topic.msgStatus(data, true) >= Tinode.MESSAGE_STATUS_SENT && data.from != this.state.myUserId) {\n      clearTimeout(this.receivedTimer);\n      this.receivedTimer = setTimeout(() => {\n        this.receivedTimer = undefined;\n        topic.noteRecv(data.seq);\n      }, RECEIVED_DELAY);\n    }\n  }\n\n  /* Fnd topic: find contacts by tokens */\n  tnInitFind() {\n    const fnd = this.tinode.getFndTopic();\n    fnd.onSubsUpdated = this.tnFndSubsUpdated;\n    if (fnd.isSubscribed()) {\n      this.tnFndSubsUpdated();\n    } else {\n      fnd.subscribe(fnd.startMetaQuery().withSub().build()).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  tnFndSubsUpdated() {\n    const foundContacts = [];\n    // Don't attempt to create P2P topics which already exist. Server will reject the duplicates.\n    this.tinode.getFndTopic().contacts((s) => {\n      foundContacts.push(s);\n    });\n    this.setState({\n      searchResults: foundContacts,\n      searchableContacts: TinodeWeb.prepareSearchableContacts(this.state.chatList, foundContacts)\n    });\n  }\n\n  /** Called when the user enters a contact into the contact search field in the NewAccount panel\n    @param query {Array} is an array of contacts to search for\n   */\n  handleSearchContacts(query) {\n    const fnd = this.tinode.getFndTopic();\n    fnd.setMeta({desc: {public: query}}).then((ctrl) => {\n      return fnd.getMeta(fnd.startMetaQuery().withSub().build());\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  // User clicked on a contact in the side panel or deleted a contact.\n  handleTopicSelected(topicName) {\n    // Clear newTopicParams after use.\n    if (this.state.newTopicParams && this.state.newTopicParams._topicName != topicName) {\n      this.setState({\n        newTopicParams: null\n      });\n    }\n\n    if (topicName) {\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'topic-view',\n        showInfoPanel: false\n      });\n      // Different contact selected.\n      if (this.state.topicSelected != topicName) {\n        this.setState({\n          topicSelectedOnline: this.tinode.isTopicOnline(topicName),\n          topicSelectedAcs: this.tinode.getTopicAccessMode(topicName)\n        });\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', topicName));\n      }\n    } else {\n      // Currently selected contact deleted\n      this.setState({\n        errorText: '',\n        errorLevel: null,\n        mobilePanel: 'sidepanel',\n        topicSelectedOnline: false,\n        topicSelectedAcs: null,\n        showInfoPanel: false\n      });\n\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic('', null));\n    }\n  }\n\n  // In mobile view user requested to show sidepanel\n  handleHideMessagesView() {\n    this.setState({\n      mobilePanel: 'sidepanel'\n    });\n    HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, null));\n  }\n\n  // User is sending a message, either plain text or a drafty object, possibly\n  // with attachments.\n  //  - msg - Drafty message with content\n  //  - promise - Promise to be resolved when the upload is completed\n  //  - uploader - for tracking progress\n  handleSendMessage(msg, promise, uploader) {\n    const topic = this.tinode.getTopic(this.state.topicSelected);\n\n    msg = topic.createMessage(msg, false);\n    // The uploader is used to show progress.\n    msg._uploader = uploader;\n\n    if (!topic.isSubscribed()) {\n      if (!promise) {\n        promise = Promise.resolve();\n      }\n      promise = promise.then(() => { return topic.subscribe(); });\n    }\n\n    if (promise) {\n      promise = promise.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n\n    topic.publishDraft(msg, promise)\n      .then((ctrl) => {\n        if (topic.isArchived()) {\n          return topic.archive(false);\n        }\n      })\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleNewChatInvitation(topicName, action) {\n    const topic = this.tinode.getTopic(topicName);\n    let response = null;\n    switch (action) {\n      case 'accept':\n        // Accept given permissions.\n        const mode = topic.getAccessMode().getGiven();\n        response = topic.setMeta({sub: {mode: mode}});\n        if (topic.isP2PType()) {\n          // For P2P topics change 'given' permission of the peer too.\n          // In p2p topics the other user has the same name as the topic.\n          response = response.then((ctrl) => {\n            topic.setMeta({sub: {user: topicName, mode: mode}});\n          });\n        }\n        break;\n      case 'delete':\n        // Ignore invitation by deleting it.\n        response = topic.delTopic(true);\n        break;\n      case 'block':\n        // Ban the topic making futher invites impossible.\n        // Just self-ban.\n        const am = topic.getAccessMode().updateWant('-JP').getWant();\n        response = topic.setMeta({sub: {mode: am}}).then((ctrl) => {\n          return this.handleTopicSelected(null);\n        });\n        break;\n      default:\n        console.log(\"Unknown invitation action\", '\"' + action + '\"\"');\n    }\n\n    if (response != null) {\n      response.catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  // User chose a Sign Up menu item.\n  handleNewAccount() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, 'register'));\n  }\n\n  // Actual registration of a new account.\n  handleNewAccountRequest(login_, password_, public_, cred_, tags_) {\n    // Clear old error, if any.\n    this.handleError();\n\n    this.tinode.connect(this.state.serverAddress)\n      .then(() => {\n        return this.tinode.createAccountBasic(login_, password_,\n          {public: public_, tags: tags_, cred: Tinode.credential(cred_)});\n      }).then((ctrl) => {\n        if (ctrl.code >= 300 && ctrl.text == 'validate credentials') {\n          this.handleCredentialsRequest(ctrl.params);\n        } else {\n          this.handleLoginSuccessful(this);\n        }\n      }).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleUpdateAccountRequest(password, pub, defacs) {\n    this.handleError();\n\n    if (pub || defacs) {\n      const params = {};\n      if (pub) {\n        params.public = pub;\n      }\n      if (defacs) {\n        params.defacs = defacs;\n      }\n      this.tinode.getMeTopic().setMeta({desc: params}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n    if (password) {\n      this.tinode.updateAccountBasic(null, this.tinode.getCurrentLogin(), password).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleToggleIncognitoMode(on) {\n    const me = this.tinode.getMeTopic();\n    const am = me.getAccessMode().updateWant(on ? '-P' : '+P').getWant();\n    me.setMeta({sub: {mode: am}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleUpdateAccountTagsRequest(tags) {\n    this.tinode.getMeTopic().setMeta({tags: tags})\n      .catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  // User chose Settings menu item.\n  handleSettings() {\n    this.handleError();\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'edit' : 'settings'));\n  }\n\n  // User updated global parameters.\n  handleGlobalSettings(settings) {\n    const serverAddress = settings.serverAddress || this.state.serverAddress;\n    const transport = settings.transport || this.state.transport;\n    if (this.tinode) {\n      this.tinode.clearStorage();\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.tinode = TinodeWeb.tnSetup(serverAddress, transport, this.props.intl.locale,\n      LocalStorageUtil.getObject('keep-logged-in'));\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n\n    this.setState({\n      serverAddress: serverAddress,\n      transport: transport\n    });\n    LocalStorageUtil.setObject('settings', {\n      serverAddress: serverAddress,\n      transport: transport\n    });\n\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, ''));\n  }\n\n  // User chose 'Archived chats'.\n  handleShowArchive() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'archive' : ''));\n  }\n\n  // User viewes 'Blocked chats'.\n  handleShowBlocked() {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash,\n      this.state.myUserId ? 'blocked' : ''));\n  }\n\n  togglePushToken(enabled) {\n    if (enabled) {\n      if (!this.state.firebaseToken) {\n        const fcm = this.fbPush ?\n          Promise.resolve() :\n          this.initFCMessaging();\n        fcm.then(() => {\n          return this.fbPush.requestPermission();\n        }).then(() => {\n          this.requestPushToken();\n        }).catch((err) => {\n          console.log(\"Failed to get notification permission.\", err);\n          this.handleError(err.message, 'err');\n          this.setState({desktopAlerts: false, firebaseToken: null});\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        });\n      } else {\n        this.setState({desktopAlerts: true});\n        if (LocalStorageUtil.getObject('keep-logged-in')) {\n          LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n        }\n      }\n    } else if (this.state.firebaseToken && this.fbPush) {\n      this.fbPush.deleteToken(this.state.firebaseToken).catch((err) => {\n        console.log(\"Unable to delete token.\", err);\n      }).finally(() => {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n        localStorage.removeItem('firebase-token');\n        this.setState({desktopAlerts: false, firebaseToken: null});\n        // Inform the server that the token was deleted.\n        this.tinode.setDeviceToken(null);\n      });\n    } else {\n      this.setState({desktopAlerts: false, firebaseToken: null});\n      LocalStorageUtil.updateObject('settings', {desktopAlerts: false});\n    }\n  }\n\n  requestPushToken() {\n    this.fbPush.getToken().then((refreshedToken) => {\n      const persist = LocalStorageUtil.getObject('keep-logged-in');\n      if (refreshedToken != this.state.firebaseToken) {\n        this.tinode.setDeviceToken(refreshedToken);\n        if (persist) {\n          LocalStorageUtil.setObject('firebase-token', refreshedToken);\n        }\n      }\n      this.setState({firebaseToken: refreshedToken, desktopAlerts: true});\n      if (persist) {\n        LocalStorageUtil.updateObject('settings', {desktopAlerts: true});\n      }\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n      console.log(\"Failed to retrieve firebase token\", err);\n    });\n  }\n\n  handleToggleMessageSounds(enabled) {\n    this.setState({messageSounds: enabled});\n    LocalStorageUtil.updateObject('settings', {\n      messageSoundsOff: !enabled\n    });\n  }\n\n  handleCredAdd(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.setMeta({cred: {meth: method, val: value}}).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredDelete(method, value) {\n    const me = this.tinode.getMeTopic();\n    me.delCredential(method, value).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleCredConfirm(method, response) {\n    this.handleCredentialsRequest({cred: [method]});\n  }\n\n  // User clicked Cancel button in Setting or Sign Up panel.\n  handleSidepanelCancel() {\n    const parsed = HashNavigation.parseUrlHash(window.location.hash);\n    let path = '';\n    if (['security','support','general','notif'].includes(parsed.path[0])) {\n      path = 'edit';\n    } else if ('blocked' == parsed.path[0]) {\n      path = 'security';\n    } else if (this.state.myUserId) {\n      path = 'contacts';\n    }\n    parsed.path[0] = path;\n    if (parsed.params) {\n      delete parsed.params.code;\n      delete parsed.params.method;\n      delete parsed.params.tab;\n    }\n    HashNavigation.navigateTo(HashNavigation.composeUrlHash(parsed.path, parsed.params));\n    this.setState({errorText: '', errorLevel: null});\n  }\n\n  // Basic nagigator by hash value. No need to bind to this.\n  basicNavigator(hash) {\n    HashNavigation.navigateTo(HashNavigation.setUrlSidePanel(window.location.hash, hash));\n  }\n\n  // Request to start a topic, new or selected from search results, or \"by ID\".\n  handleStartTopicRequest(topicName, pub, priv, tags, isChannel) {\n    // Check if topic is indeed new. If not, launch it.\n    if (topicName && this.tinode.isTopicCached(topicName)) {\n      this.handleTopicSelected(topicName);\n      return;\n    }\n\n    const params = {};\n    if (Tinode.isP2PTopicName(topicName)) {\n      // Because we are initialing the subscription, set 'want' to all permissions.\n      params.sub = {mode: DEFAULT_P2P_ACCESS_MODE};\n      // Give the other user all permissions too.\n      params.desc = {defacs: {auth: DEFAULT_P2P_ACCESS_MODE}};\n    } else {\n      topicName = topicName || this.tinode.newGroupTopicName(isChannel);\n      params.desc = {public: pub, private: {comment: priv}};\n      params.tags = tags;\n    }\n    params._topicName = topicName;\n    this.setState({newTopicParams: params}, () => {this.handleTopicSelected(topicName)});\n  }\n\n  // New topic was creted, here is the new topic name.\n  handleNewTopicCreated(oldName, newName) {\n    if (this.state.topicSelected == oldName && oldName != newName) {\n      // If the current URl contains the old topic name, replace it with new.\n      // Update the name of the selected topic first so the navigator doen't clear\n      // the state.\n      this.setState({topicSelected: newName}, () => {\n        HashNavigation.navigateTo(HashNavigation.setUrlTopic('', newName));\n      });\n    }\n  }\n\n  handleTopicUpdateRequest(topicName, pub, priv, permissions) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const params = {};\n      if (pub) {\n        params.public = pub;\n      }\n      if (priv) {\n        params.private = (priv === Tinode.DEL_CHAR) ?\n          Tinode.DEL_CHAR : {comment: priv};\n      }\n      if (permissions) {\n        params.defacs = permissions;\n      }\n      topic.setMeta({desc: params}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleChangePermissions(topicName, mode, uid) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      const am = topic.getAccessMode();\n      if (uid) {\n        am.updateGiven(mode);\n        mode = am.getGiven();\n      } else {\n        am.updateWant(mode);\n        mode = am.getWant();\n      }\n      topic.setMeta({sub: {user: uid, mode: mode}}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleTagsUpdated(topicName, tags) {\n    const topic = this.tinode.getTopic(topicName);\n    if (topic) {\n      topic.setMeta({tags: tags}).catch((err) => {\n        this.handleError(err.message, 'err');\n      });\n    }\n  }\n\n  handleLogout() {\n    updateFavicon(0);\n\n    // Remove stored data.\n    localStorage.removeItem('auth-token');\n    localStorage.removeItem('firebase-token');\n    localStorage.removeItem('settings');\n    if (this.state.firebaseToken) {\n      this.fbPush.deleteToken(this.state.firebaseToken)\n    }\n\n    clearInterval(this.reconnectCountdown);\n\n    if (this.tinode) {\n      this.tinode.clearStorage();\n      this.tinode.onDisconnect = undefined;\n      this.tinode.disconnect();\n    }\n    this.setState(this.getBlankState());\n\n    this.tinode = TinodeWeb.tnSetup(this.state.serverAddress,\n      this.state.transport, this.props.intl.locale, LocalStorageUtil.getObject('keep-logged-in'));\n    this.tinode.onConnect = this.handleConnected;\n    this.tinode.onDisconnect = this.handleDisconnect;\n    this.tinode.onAutoreconnectIteration = this.handleAutoreconnectIteration;\n    HashNavigation.navigateTo('');\n  }\n\n  handleDeleteAccount() {\n    this.tinode.delCurrentUser(true).then((ctrl) => {\n      this.handleLogout();\n    });\n  }\n\n  handleDeleteMessagesRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Request hard-delete all messages.\n    topic.delMessagesAll(true).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleLeaveUnsubRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.leave(true).then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleBlockTopicRequest(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleReportTopic(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    // Publish spam report.\n    this.tinode.publish(Tinode.TOPIC_SYS, Tinode.Drafty.attachJSON(null, {\n      'action': 'report',\n      'target': topicName\n    }));\n\n    // Remove J and P permissions.\n    topic.updateMode(null, '-JP').then((ctrl) => {\n      // Hide MessagesView and InfoView panels.\n      HashNavigation.navigateTo(HashNavigation.setUrlTopic(window.location.hash, ''));\n    }).catch((err) => {\n      this.handleError(err.message, 'err');\n    });\n  }\n\n  handleShowContextMenu(params, menuItems) {\n    this.setState({\n      contextMenuVisible: true,\n      contextMenuClickAt: {x: params.x, y: params.y},\n      contextMenuParams: params,\n      contextMenuItems: menuItems || this.defaultTopicContextMenu(params.topicName),\n      contextMenuBounds: ReactDOM.findDOMNode(this).getBoundingClientRect()\n    });\n  }\n\n  defaultTopicContextMenu(topicName) {\n    const topic = this.tinode.getTopic(topicName);\n\n    let muted = false, blocked = false, self_blocked = false, subscribed = false, deleter = false, archived = false;\n    if (topic) {\n      subscribed = topic.isSubscribed();\n      archived = topic.isArchived();\n\n      const acs = topic.getAccessMode();\n      if (acs) {\n        muted = acs.isMuted();\n        blocked = !acs.isJoiner();\n        self_blocked = !acs.isJoiner('want');\n        deleter = acs.isDeleter();\n      }\n    }\n\n    return [\n      subscribed ? {\n        title: this.props.intl.formatMessage(messages.menu_item_info),\n        handler: this.handleShowInfoView\n      } : null,\n      subscribed ? 'messages_clear' : null,\n      subscribed && deleter ? 'messages_clear_hard' : null,\n      muted ? (blocked ? null : 'topic_unmute') : 'topic_mute',\n      self_blocked ? 'topic_unblock' : 'topic_block',\n      !archived ? 'topic_restore' : 'topic_archive',\n      'topic_delete'\n    ];\n  }\n\n  handleHideContextMenu() {\n    this.setState({\n      contextMenuVisible: false,\n      contextMenuClickAt: null,\n      contextMenuParams: null,\n      contextMenuBounds: null\n    });\n  }\n\n  handleContextMenuAction(action, promise, params) {\n    if (action == 'topic_archive') {\n      if (promise && params.topicName && params.topicName == this.state.topicSelected) {\n        promise.then(() => {\n          this.handleTopicSelected(null);\n        });\n      }\n    }\n  }\n\n  handleShowAlert(title, content, onConfirm, confirmText, onReject, rejectText) {\n    this.setState({\n      alertVisible: true,\n      alertParams: {\n        title: title,\n        content: content,\n        onConfirm: onConfirm,\n        confirm: confirmText,\n        onReject: onReject,\n        reject: rejectText\n      }\n    });\n  }\n\n  handleShowInfoView() {\n    HashNavigation.navigateTo(HashNavigation.addUrlParam(window.location.hash, 'info', true));\n    this.setState({showInfoPanel: true});\n  }\n\n  handleHideInfoView() {\n    HashNavigation.navigateTo(HashNavigation.removeUrlParam(window.location.hash, 'info'));\n    this.setState({showInfoPanel: false});\n  }\n\n  handleMemberUpdateRequest(topicName, added, removed) {\n    if (!topicName) {\n      return;\n    }\n\n    const topic = this.tinode.getTopic(topicName);\n    if (!topic) {\n      return;\n    }\n\n    if (added && added.length > 0) {\n      added.map((uid) => {\n        topic.invite(uid, null).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n\n    if (removed && removed.length > 0) {\n      removed.map((uid) => {\n        topic.delSubscription(uid).catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n      });\n    }\n  }\n\n  handleValidateCredentialsRequest(cred, code) {\n    if (this.tinode.isAuthenticated()) {\n      const me = this.tinode.getMeTopic();\n      me.setMeta({cred: {meth: cred, resp: code}})\n        .then(() => {\n          HashNavigation.navigateTo('');\n        })\n        .catch((err) => {\n          this.handleError(err.message, 'err');\n        });\n    } else {\n      this.setState({credMethod: cred, credCode: code});\n      this.doLogin(null, null, {meth: cred, resp: code});\n    }\n  }\n\n  handlePasswordResetRequest(method, value) {\n    // If already connected, connnect() will return a resolved promise.\n    this.tinode.connect()\n      .then(() => {\n        return this.tinode.requestResetAuthSecret('basic', method, value);\n      })\n      .catch((err) => {\n        // Socket error\n        this.handleError(err.message, 'err');\n      });\n  }\n\n  handleResetPassword(scheme, newPassword, token) {\n    token = base64ReEncode(token);\n    if (!token) {\n      this.handleError(this.props.intl.formatMessage(messages.invalid_security_token), 'err');\n    } else {\n      this.tinode.connect()\n        .then(() => {\n          return this.tinode.updateAccountBasic(null, null, newPassword, {token: token});\n        })\n        .catch((err) => {\n          // Socket error\n          this.handleError(err.message, 'err');\n        });\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"app-container\">\n        {this.state.contextMenuVisible ?\n          <ContextMenu\n            tinode={this.tinode}\n            bounds={this.state.contextMenuBounds}\n            clickAt={this.state.contextMenuClickAt}\n            params={this.state.contextMenuParams}\n            items={this.state.contextMenuItems}\n            hide={this.handleHideContextMenu}\n            onShowAlert={this.handleShowAlert}\n            onAction={this.handleContextMenuAction}\n            onTopicRemoved={(topicName) => {\n              if (topicName == this.state.topicSelected) {\n                this.handleTopicSelected(null);\n              }\n            }}\n            onError={this.handleError} />\n          :\n          null\n        }\n        <Alert\n          visible={this.state.alertVisible}\n          title={this.state.alertParams.title}\n          content={this.state.alertParams.content}\n          onReject={this.state.alertParams.onReject ? (() => { this.setState({alertVisible: false}); }) : null}\n          reject={this.state.alertParams.reject}\n          onConfirm={() => { this.setState({alertVisible: false}); this.state.alertParams.onConfirm(); }}\n          confirm={this.state.alertParams.confirm}\n          />\n        <SidepanelView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          displayMobile={this.state.displayMobile}\n          hideSelf={this.state.displayMobile && this.state.mobilePanel !== 'sidepanel'}\n          state={this.state.sidePanelSelected}\n          title={this.state.sidePanelTitle}\n          avatar={this.state.sidePanelAvatar}\n          login={this.state.login}\n          persist={this.state.persist}\n          myUserId={this.state.myUserId}\n          loginDisabled={this.state.loginDisabled}\n          loadSpinnerVisible={this.state.loadSpinnerVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          topicSelected={this.state.topicSelected}\n          chatList={this.state.chatList}\n          credMethod={this.state.credMethod}\n          credCode={this.state.credCode}\n\n          transport={this.state.transport}\n          messageSounds={this.state.messageSounds}\n          desktopAlerts={this.state.desktopAlerts}\n          desktopAlertsEnabled={this.state.desktopAlertsEnabled}\n          incognitoMode={this.state.incognitoMode}\n          serverAddress={this.state.serverAddress}\n          serverVersion={this.state.serverVersion}\n\n          onGlobalSettings={this.handleGlobalSettings}\n          onSignUp={this.handleNewAccount}\n          onSettings={this.handleSettings}\n          onBasicNavigate={this.basicNavigator}\n          onLoginRequest={this.handleLoginRequest}\n          onPersistenceChange={this.handlePersistenceChange}\n          onCreateAccount={this.handleNewAccountRequest}\n          onUpdateAccount={this.handleUpdateAccountRequest}\n          onUpdateAccountTags={this.handleUpdateAccountTagsRequest}\n          onTogglePushNotifications={this.togglePushToken}\n          onToggleMessageSounds={this.handleToggleMessageSounds}\n          onToggleIncognitoMode={this.handleToggleIncognitoMode}\n          onCredAdd={this.handleCredAdd}\n          onCredDelete={this.handleCredDelete}\n          onCredConfirm={this.handleCredConfirm}\n          onTopicSelected={this.handleTopicSelected}\n          onCreateTopic={this.handleStartTopicRequest}\n          onLogout={this.handleLogout}\n          onDeleteAccount={this.handleDeleteAccount}\n          onShowAlert={this.handleShowAlert}\n          onCancel={this.handleSidepanelCancel}\n          onError={this.handleError}\n          onValidateCredentials={this.handleValidateCredentialsRequest}\n          onPasswordResetRequest={this.handlePasswordResetRequest}\n          onResetPassword={this.handleResetPassword}\n          onShowArchive={this.handleShowArchive}\n          onShowBlocked={this.handleShowBlocked}\n\n          onInitFind={this.tnInitFind}\n          searchResults={this.state.searchResults}\n          onSearchContacts={this.handleSearchContacts}\n\n          showContextMenu={this.handleShowContextMenu} />\n\n        <MessagesView\n          tinode={this.tinode}\n          connected={this.state.connected}\n          ready={this.state.ready}\n          online={this.state.topicSelectedOnline}\n          acs={this.state.topicSelectedAcs}\n          displayMobile={this.state.displayMobile}\n          viewportWidth={this.state.viewportWidth}\n          viewportHeight={this.state.viewportHeight}\n          hideSelf={this.state.displayMobile &&\n            (this.state.mobilePanel !== 'topic-view' || this.state.showInfoPanel)}\n          topic={this.state.topicSelected}\n          myUserId={this.state.myUserId}\n          serverVersion={this.state.serverVersion}\n          serverAddress={this.state.serverAddress}\n          applicationVisible={this.state.applicationVisible}\n\n          errorText={this.state.errorText}\n          errorLevel={this.state.errorLevel}\n          errorAction={this.state.errorAction}\n          errorActionText={this.state.errorActionText}\n\n          newTopicParams={this.state.newTopicParams}\n\n          onHideMessagesView={this.handleHideMessagesView}\n          onData={this.tnData}\n          onError={this.handleError}\n          onNewTopicCreated={this.handleNewTopicCreated}\n          showContextMenu={this.handleShowContextMenu}\n          onChangePermissions={this.handleChangePermissions}\n          onNewChat={this.handleNewChatInvitation}\n          sendMessage={this.handleSendMessage} />\n\n        {this.state.showInfoPanel ?\n          <InfoView\n            tinode={this.tinode}\n            connected={this.state.connected}\n            displayMobile={this.state.displayMobile}\n            topic={this.state.topicSelected}\n            searchableContacts={this.state.searchableContacts}\n            myUserId={this.state.myUserId}\n\n            errorText={this.state.errorText}\n            errorLevel={this.state.errorLevel}\n            errorAction={this.state.errorAction}\n            errorActionText={this.state.errorActionText}\n\n            onTopicDescUpdate={this.handleTopicUpdateRequest}\n            onCancel={this.handleHideInfoView}\n            onShowAlert={this.handleShowAlert}\n            onChangePermissions={this.handleChangePermissions}\n            onMemberUpdateRequest={this.handleMemberUpdateRequest}\n            onDeleteMessages={this.handleDeleteMessagesRequest}\n            onLeaveTopic={this.handleLeaveUnsubRequest}\n            onBlockTopic={this.handleBlockTopicRequest}\n            onReportTopic={this.handleReportTopic}\n            onAddMember={this.handleManageGroupMembers}\n            onTopicTagsUpdate={this.handleTagsUpdated}\n            onInitFind={this.tnInitFind}\n            onError={this.handleError}\n\n            showContextMenu={this.handleShowContextMenu}\n            />\n          :\n          null\n        }\n      </div>\n    );\n  }\n};\n\nexport default injectIntl(TinodeWeb);\n","// Put all packages together.\n// Used to generate umd/index.prod.js\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { IntlProvider } from 'react-intl';\n\nimport allMessages from './messages.json';\nimport TinodeWeb from './views/tinode-web.jsx';\nimport HashNavigation from './lib/navigation.js';\n\n// Detect human language to use in the UI:\n//  Check parameters from URL hash #?hl=ru, then browser, then use 'en' as a fallback.\nconst { params } = HashNavigation.parseUrlHash(window.location.hash);\nconst language = (params && params.hl) ||\n  (navigator.languages && navigator.languages[0]) ||\n  navigator.language ||\n  navigator.userLanguage ||\n  'en';\n\n// Get the base language 'en' from a more specific 'en_GB' or 'en-US' as a partial fallback.\nconst baseLanguage = language.toLowerCase().split(/[-_]/)[0];\n\n// Try the full locale first, then the locale without the region code, fallback to 'en'.\nconst messages =\n  allMessages[language] ||\n  allMessages[baseLanguage] ||\n  allMessages.en;\n\nReactDOM.render(\n  <IntlProvider locale={language} messages={messages} textComponent={React.Fragment}>\n    <TinodeWeb />\n  </IntlProvider>,\n  document.getElementById('mountPoint')\n);\n","// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// startup\n// Load entry module and return exports\n// This entry module doesn't tell about it's top-level declarations so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[619](0, __webpack_exports__, __webpack_require__);\n"],"sourceRoot":""}